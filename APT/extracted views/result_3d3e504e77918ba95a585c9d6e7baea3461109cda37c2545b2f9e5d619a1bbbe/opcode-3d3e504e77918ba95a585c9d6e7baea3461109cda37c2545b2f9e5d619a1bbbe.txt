mov adc add inc outsl outsl insb gs outsb add or add mov insb jae add jb lea sub add push outsl (bad) testl pop dec outsb je addr16 and rcrb xor add jns insb daa push outsl jb add jns incl imul add or push je sub in push lcall pop js test iret repz mov fidivr cmp pop push dec bound arpl pop sbb loop jae insl sbb and or dec mov popaw arpl add std cmovle inc add inc and clc jmp lods sub mov dec jns jnp push pop xchg xchg gs mov sbb push add pusha lock je cmp rorl dec push pop push adc sub sbb loope jmp bswap leave leave dec sarb fdivs leave leave test mov leave cwtl xchg nop mov leave leave leave mov leave jl call leave loopne jo leave leave leave leave hlt lock push fs push add mov mov fwait sub add mov and mov ss pop ret pushf pushf pushf je pop pop push push pushf pushf pushf pushf dec dec inc inc mov mov push mov add push fstp idiv add enter add mov mov (bad) call mov add lea mov mov mov inc cmp jne mov mov mov push nop mov ja mov add scas mov mov xchg insb test xchg mov mov mov or adc add mov data16 or adc fistpll push push push mov mov mov mov add clc jg jae pop mov or push or ret repz addr16 hlt mov push or inc add adc pop cmp jne aaa sub jne (bad) mov jo int cmp pop pop pop out add mov je sti mov xchg cmp (bad) lock mov add call ja and mov add or mov dec ret lods pusha sti imul aas pop mov add pop repnz outsl (bad) (bad) out sub jbe pop push sub mov loope sbb lock aam or (bad) lock sbb scas sbb sti jne sbb fiadd mov mov cmp mov or and fwait xchg add add and push jg mov mov test xchg mov mov dec orb call push and push mov mov sub rol push lahf push fsts jne icebp push push pusha add cmp in pop sbb mov fucomip mov mov or lret and fsub testb add mov adc pop ret scas mov ja mov add cmp ja mov into fidivrl je jae or or sbb sti shr (bad) xlat push or add popa and fild in shlb adc xor cltd in sbb adc or push adc hlt outsl add rorb lock sbb fnsave loop,pt mov or lds pop outsl mov cmp add vpsadbw jbe mov cmp or or xor shll push scas adc sti push push cmpl jmp ss imul or dec add push jb inc add push xchg (bad) xor jmp sahf nop and mov sub or cmp mov add sbb add into xor addl nop call dec cmpl mov (bad) aas or push insl out out (bad) repnz (bad) xor idivb inc xlat lahf (bad) cmc popf mov push movsb in je mov inc std xor and xor scas mov pop add jne ljmp movsl and push inc in jge insb mov insl pop mov and cmp add jl in mov jne or jle and mov sub push stos mov jg pop jl or nop or mov push push je mov pop fadds pop push out arpl xlat lea test (bad) xor imul jne xchg xor xchg cmp push sarb sub inc popf (bad) ret lock xchg mov mov repnz cwtl aaa jecxz add lock fild pop mov out rorl cmp popf jno pop push test je jne jo imul jo or adc jmp jecxz cmp xor jmp pop sbb sub sbb jle push push sarb mov push cmp add (bad) jl and adc xchg fstl and push hlt mov cmpl jnp sbb jle hlt inc cmp in mov and add rcrb cs push adc sub or ret mov mov sbb or pop xchg test shlb (bad) and pop or and xor arpl push loopne out gs add out lods nop push pop js scas or push mov push enter sbb cmp fistpl push cmp or or cmp pop jg adc test jns add sar lods jecxz pop test sub mov sub mov pop adc aam jmp dec fadd jb add or mov mov sbb cli das jne or sbb add sbb cmp jl movl push mov jb sahf es mov leave add mov mov and add sub aas aaa mov dec adc adc fucomi adc or push or push rol repnz pop or xchg or ret (bad) addr16 fsubp push (bad) xor adc addr16 inc je add cmpsb (bad) and sub inc aas sti or jg testb je mov sub cmp cmp (bad) or ljmp add mov mov add and repz bound or sub pop adc jae scas movb xor dec (bad) mov (bad) subl into push lea sub cld jg js std fnop sub sub cmp jge mov mov insb jmp daa xlat cld pop sub lea and in mov aad (bad) scas inc aad lds stos clc add imul fimull test jp or and mov xchg iret cmc scas ja mov add sub loopne rcrl adc repz enter roll fist sbb sbb cmp int xor inc adc push pop add sub cmp push outsb iret orl sbb or insb sbb nop lods jle adc or pop mov hlt movb daa or adc inc push or fdivrl ret jg lock mov inc mov xlat imul mov cmp pusha xchg loope movsb clc lods sub add adc repz lods andl and jbe inc gs fadds add add clc sbb cld adc cmp mov fcmovne bound push fadds pusha pop pop lcall int3 (bad) rol lods fimul stc pusha or xor mov clc add pop push adcb or ljmp dec xchg inc mov (bad) (bad) push xor adc lods jg,pn pop mov pop je rcrl arpl or out mov dec sbb mov adc cmp movsb sub cmpl ret pop cmp hlt inc add xor ljmp inc cmpsl adcl mov jne or and inc add clc repnz jne cwtl mov pop xor aad adc (bad) clc rcrb or push scas push xor stos jle inc cld add cmp adc leave push push mov push in cli xchg add or sti mov mov push test jg ret or or add pop inc scas (bad) jne push cmp decl es lds push jge inc (bad) pushf or sahf xor or mov jae and pop addr16 sbb cmp mov mov add arpl sbb jge jmp inc (bad) arpl add imul push adc pop pop inc pop push push sbb stos daa inc popa mov out pop cmp sub jo xor or ret push mov test jne test ja (bad) or movnti add sbb je mov mov or mull mov add (bad) jge je pop xorl mov sbb push pop in ret lock jl,pt clc cmp stos add pusha stc in andl (bad) dec mov adc ret add cli idivl pop sbb aaa orl jmp mov cmpl addl or adc sbb and cmp mov cli sbb sbb mov cmpsl sub out mov adc jge loope add mov in addl mov jno nop sbbl notb rolb pusha (bad) jge dec pop mov popf (bad) mov add cmpsb xor rorb add lods push sbb mov mov in cmpb ja push mov pop addr16 and iret adc dec addr16 lcall inc (bad) mov insl lcall test pop xor mov dec add xor sbb cmp jge pop mov pop jbe lock sub or push xchg xchg mov ret add pmulhw and fdivs cwtl push or (bad) push hlt mov sbb test dec push add cmpsb cmc adc push enter lods lcall mov adc add ss test in ret (bad) mov lea jge ss adc mov mov xchg dec sbb rorl adc daa cmpsb test jle call add popf mov jmp xor mov and leave repz je rcrl jg or sbb enter sub in pop or add push jmp mov subl bound mov repz push mov xor mov push lock mov ret rol xchg subl add inc sbb pop mov sbb inc or sbb or mov fs mov cmp sbb orl add jg mov sbb mov mov std jecxz pop inc pop mov adc cmp or push enter push xor adc or pop jne xor pop cmp mov mov jp mov mov sub (bad) decl jg sub inc fdivrl sarl (bad) mov inc rep jmp mov push pop in leave jmp mov jl pop cmp mov cmpsl pop adc stos nop sbb (bad) mov fstp test cmp ja je dec js rep xchg mov je cld lea xor std xor imul add ds in ds pop jmp roll sbb mov jg jecxz test and cmpb xchg cmpb add out lahf mov std in mov jmp cmp xor push shrb shrl ja call jg fcoms ja push mov aas jb std mov xor jmp outsb cmp cmp jbe mov mov adc adc cmc shl pop sub mov xor or add cmc lock das jl divb push push jge loopne jno pop mov aas xor mov jno and (bad) ja hlt adc fnstenv fiaddl dec jmp mov (bad) jecxz mov fldcw fldcw jnp lcall adc or sub sub fwait orw mov pop stos or inc fldcw pop inc insb sub adc je xorl mov jb mov jb sub dec xorps xchg (bad) shll sbb jle clc notb cmp pop cmp and (bad) ljmp cmpl out insl dec jmp divb das or and mov adc jne call bound lods jl and sbb adc xor rol (bad) fild jg mov cmp ror or and (bad) xchg (bad) mov xor rorb inc sub add ret sti add je mov mov cmp jne dec insb mov mov sbb incb (bad) aaa push (bad) or loop push adc in mov and je mov cmp jne push adc add adc mov fbstp add add mov jbe cmp cmp imul or jmp add repz jle mov shr or int3 in dec pop cmp shl mov and out mov cmp jne dec dec inc sarl dec and pushf xor pop jecxz mov ficomp mov shl data16 stos add insb adc pop daa push add insb sub mov push inc inc and int divb add je and je mov je xor dec and sti mov and add sub or cmp ja mov add push add push push out int or incl jmp inc mov js pop sub jmp inc inc jbe jne jmp mov fild std cmpsb test push adc or xor stos aad cmp outsl cwtl pop xor mov fistpll test cmp cmp pop icebp jg push inc mov dec jne pop decb out sub xchg out or sbb dec je fsubr movb into lea lea mov lods push push cs fisub add je das mov das add popa push and xor pop xchg jge mov and stc sbb mov fstp fldt xchg rcr mov cmp in jg aas mov stc in cmp inc pushf or ret psubw inc ds adc mov and sub sbb xchg and inc mov stc mul lret mov lock std es test pop xor out sub pop jecxz add leave sbb sub cs jbe imul cmp mov aaa push and mov bound cmpb xlat fadds int nop lods outsb xor xchg push or push push int3 into stos (bad) (bad) lcall ret inc mov push pop test enter mov inc push (bad) (bad) (bad) jmp hlt daa (bad) lret into pop inc test xchg clc js aas sbbl pop (bad) mov addr16 (bad) (bad) dec leave repnz bound and cld gs sahf mov sub inc aad iret decl (bad) (bad) pushl adc lds stos mov cmp or mov pop out sub push mov inc imul (bad) divl jl xor cmp call mov (bad) (bad) lcall push inc mov push sbb sarb repnz test nop fildl (bad) (bad) (bad) jmp movsb lahf nop inc pop stos clc scas adc (bad) inc pop pushf mov pop pushf mov fs aam imul loope jp (bad) (bad) call xchg pop fnop ds push cmpsb scas mov pop or addl dec in xchg cmp xor in cmp sahf xchg pop cmpsb lock mov popa (bad) (bad) (bad) mov pop mov (bad) repz mov subb and aas or jmp outsb bound xor jmp hlt neg or and push pop and or add mov push mov outsb scas hlt psubusb inc mov hlt mov lea push push js dec add mov push dec xor push push mov (bad) imul pushf pop hlt push data16 add mov andb fstl jmp cltd out mov dec jmp push clc pop aas or adc adc push dec inc push push inc push inc pop inc outsl jb popa outsb fs inc gs lock ljmp imul push dec popa jae push popa insb jne push push dec mov (bad) mov inc pop xlat mov xor mov inc lods cli and or push mov add fildll jne dec mov xor out jne sbb push out lcall fcompl xchg jo add push jbe inc mov sbb aaa test in mov add outsl test or jnp js and test (bad) and jne dec insb ret xor xchg and mov or push cld lock ds ret jl mov xor push shr dec rep pop mov mov mov sub pop fnop (bad) jg cmp mov jmp cmp je pop mov add jae lahf mov mov mov push sbb cmp imul or (bad) mov mov jbe stos ret sub cmp cli notl xchg cmp (bad) jb (bad) add test add jmp mov mov add lahf ret xchg daa out pop clc add jecxz call dec xorb jbe or mov and xor add mov inc adc cmc in push push mov push add pop lea push sbb mov enter dec setne mov lahf xchg sub adc xor sarb mov xor jb cmp fmull or jne or push inc inc or xchg lds and and add dec cwtl fsubl and test (bad) mov fcomip rclb rorl mov leave jne mov push call push xchg jmp lret pop or mov push add repnz je pop in negb pop add sub je cld pop cs xchg add sbb pop ljmp cs mov mov cmp orb fdivl pop pop push xchg xor cld pop mov rclb lods pop das cld test mov pop mov popa lock (bad) mull add decl (bad) std out scas mov je movb dec push cmp sbb add dec jne (bad) hlt lcall push jmp add sbb jecxz push mov dec cmp scas lahf push popf outsb mov adc sbb pop lcall xor call jb push pop add mov jl (bad) cmp rcr adc mov mov (bad) adc add xor or pop dec jmp push stc es add or rcl das adc mov push (bad) pop test test sbb call pop sbb sub lret inc jg cmp xlat int and pop fiadd jbe sbb add pushf (bad) in push call cwtl dec aaa pop pop push pusha push push cmp cmpsl mov pop iret cs mov xchg loopne scas or lret sahf (bad) pusha jae addr16 pop push push and mov stos lods sbb jmp jne movsbl inc inc jmp rclb repnz and sbb jecxz int3 push add add add push xchg cmp (bad) lock pop (bad) pushf testl xchg jne fiadd push mov dec adc outsb fisubl orb mov icebp pop je scas aam popf out or push cmpl push aaa or sub pop or ja and xchg push clc add stos sbb enter adc call push fmull cli push push loopne test je orl mov push cmp sbb push sub mov mov push sbb mov pop decl dec sub dec movl cli mov xor jecxz jg jle mov nop cmovno xor inc mov xchg je dec pushf pop sahf or push add aam and mov pop cwtl push or scas push pushf mov lea mov jo cmc xchg add aas repnz mov mov cmp jne mov out outsl mov or mov jg lea pushw (bad) dec jne pop lds adc inc jmp xor fsubp sbb mov push cmp daa lahf adc sub push adc fldenv xor pop ret sub or loop sahf in or punpcklbw adc loope cmpsb movl or jo call inc jg and fmul dec pop push push push push push add add mov xor subl mov mov cmp sub or sbbl (bad) or loope,pn iret enter and flds adc jae add loopne mov (bad) or insl nop jmp ret xor mov inc sbb rcll add testb mov add (bad) jg je cmp push sub mov cmp pusha add sub jb je jmp cmp outsl lods (bad) sub adc jmp sub (bad) (bad) fisttp je jmp mov jmp mov jmp mov jmp mov jmp push sbb dec std push mov jmp mov mov jmp mov jmp mov lods or call (bad) ljmp test sbb dec aad divl outsl jp jp xor test mov das push inc sbb cli xor adc fmuls out push inc sti lods mov push push fmull sub add mov fnstenv adcl sub ja or mov movsb fmul sti push ret call cmp mov xchg xor cmp jbe push mov or cmp jne in or (bad) mov add jp dec mov mov add jle (bad) dec test jle dec mov inc fiadd call sbb test and mov adc sbb lret sub mov or imul mov mov xor mov cmp jle add (bad) sbb cmp (bad) jg mov inc sbb jecxz rcr mov mov adc outsb xchg stos mov mov es jns jbe bnd add ret (bad) sbb pushw add add (bad) aam dec jne pop pop pop inc pop sbb mov xor out add pop pop es mov xchg or mov outsl xor aam push clc lahf mov ret rorl movsb es mov add out sub sarb mov fldenv push ss sbb mov jbe lahf xor sbb inc movsl jmp sbb ja add mov mov jge movsl pop leave pop push cmpsb dec mov cli into icebp push cmpw jnp cmpl mov sarl push xchg hlt add pop adc xlat push int3 push pop ret mov push jo pop adc cmp popa popa cwtl sub les add (bad) mov pop sbb jnp je cmpl out add adc mov (bad) fistpll or dec and xchg sub js loope,pn push jne jle pop ret hlt lock sub add lods icebp icebp xor sbb mov push or cmp je es aam stc push insl inc pusha sub jne mulb lret cmp sarb mov rolb insb mov ret pop sbb or sbb mov popl dec mov sbb pop inc das mov mov adc decl push lea out push xor daa push out (bad) mov push sbb in jb movl ficomp jp jne fimul inc inc jg mov orb sub inc mov pop push dec mov fldcw jmp jbe xchg adc test or aaa jl xchg jle push add loopne push fnsave adc lret pop movw and adc mov sub insl cs loopne xlat cwtl mov mov das stc pop sub (bad) mov loopne ds cmp add mov dec adc jg xchg push push mov push push adc xor aaa sbb mov mov decl cmp push cmp cld test mov inc (bad) jmp lea cmp and xor mov xchg aaa pushf xchg add inc gs mov sub or fistpl sbb out fadds sbb add cmp clc sub push mov mov or ret cmp inc push loopne je cwtl jle add push rcl (bad) loopne call lahf xchg sti rcrl shr pop cmpsl pop sub and sub or or addr16 fxch (bad) in add pusha push call xchg mov std add pop cli repnz pusha rcrl rcrl pop lds cld outsl push and mov cld xchg adc fnstcw test and inc xchg (bad) xchg aas loopnew xchg pop add aas sahf aaa mov jle dec mov push cld add and cmp pop and mov adc cmp das sub loopne out popa cmpl je adc sarl mov mov xor mov loopne cld add jle cli jecxz je mov mov lds push pop and push xchg clc mov neg fucom mov jmp sub (bad) push jle xor mov fmuls mov dec jmp fisttpll fwait dec sub add cmp fs dec jne adc loopne cld jge pop test jmp aaa add dec jmp and inc pushf sbb (bad) or add pop dec jne cmp or add shl and and lea jmp xchg shll rolb push sub rolb rorb and push add push cmp cmp adc pushf and cmp daa pop and jmp aam sub loopne ja mov lret clc inc das lods out add add lret or mov cmp shlb (bad) cmc mov ss sti pop adc dec inc rcrb shl pop or xor jbe sar pop es jl cmp jge sub mov xchg sbb push (bad) adc shr in jmp and cmc push xchg (bad) xor popa ror xchg lret jl sub rcr mov icebp mov add stc add lea inc pop xor fmuls push push cli mov repz lahf cltd mov push cld std clc sub inc dec jge cmp adc imul sbb jbe add gs cmp mov mov lea or push add mov sub add xchg xor mov push insb lock sbb adc adc pop mov in pop ss jno sbb mov (bad) and push (bad) xlat push lock and sbb push and xlat clc pop pop mov sub and (bad) lods jmp pminub fs (bad) arpl cli pop cmp or pop cwtl sbb add addb pop adc in cmpsl push push das ja (bad) xchg mov push push sub cmp cmp pop lea mov sub push pop in add (bad) iret in stc ss jmp pop mov and mov inc dec ret cmp add dec rorl push das int3 sub ret push mov add nop (bad) or add sub add jle cmp add mov fidivrl pop add jne xchg je mov add and xor xor cmpsb add data16 sbb or mov out inc psraw enter jge or adc dec cmp nop pushf push ret std call cmp push lods add add dec or add xor je jle cltd ss mov lods xor pop stos add lods sahf std cmpsl mov xchg fstpl mov dec sbb adc sbb adc cmp scas mov out sahf mov xchg mov xor add cmp je (bad) pop std (bad) cmp je cmp je cmp je cmp into cmp je mov shlb dec mov inc adc or adc cmpsb out mov aad push or push mov dec cs adc cmp pop jmp cmp inc scas out mov sub call sub add sub mov or pop call call xchg out or dec cwtl jns push pop jbe mov (bad) push mov cmp fstp xlat (bad) test int3 jg inc and mov pop mov cmp emms xor je outsb fnop loopne es xlat loopne repz daa in cmp add sub sub int pop sbb cmp aas or jmp dec cs stos test das shr xchg adc addl in clc inc add cld add clc push push add push mov mov add loope or pop push mov cmp xor (bad) pusha or or or pusha or pop jo pusha cmp pusha imul sub pop xor push fistpl add cwtl inc in inc insb lea lock xor add inc lea push dec orb (bad) xor aas add (bad) xor or cmp dec xchg inc adc and add in jne sbb pop shrb add add lret insb and mov in inc push popa and pushf mov sbb clc jmp cwtl pusha repnz mov cmp jbe icebp jmp cmpsl std adc loope sbb les cmp cmp divps or ja sti add add inc ljmp mov icebp mov jo add xchg inc mov push cmp ror or js imul ret sbb pop je mov outsl fdivrl xlat shlb mov test or sar cmc fisttpl lret ret sete rorl pop add clc cmc mov les mov dec fmull mov test jg mov pop mov push ss adc xlat lods insb xchg divl lock push cmp mov add (bad) cld push adc insl xor call sti sbb mov imull dec in in or inc call clc jg inc hlt js add mov cmp jge leave cmp sbb or mov imul sub add loopne push in out lods pop mov or scas mov lret in jge scas cmp sub fwait xor mov pusha sti dec sbb dec in push pushf adc into aam push je push mov dec shrl fldl xrelease or cmp cwtl push lock (bad) insl xor test add cmpsl cmpl jle loope xchg cwtl or xchg dec jo and int3 dec or lea xor pop test js fstpl dec jne enter mov cmp inc icebp sub loop,pn inc xor decl jne bound rorl in xchg inc sub xor pop dec mov and sbb mov daa popa scas adc dec push push push adc loop lock out pop pop mov aas les jg (bad) in sbb cltd enter cld xor jp push mov push or ljmp jne outsl icebp xchg lock je pop mov mov inc fmull or push adc push aam add mov outsb xor or or xchg shrl mov push ja pcmpeqw ret jmp sbb cli pop dec mov ds mov push clc mov sbb popa xchg out fldl inc push out add scas push test or popf fcompl inc inc or mov loopne vmread pop and mov cmp jl pop add inc adc mov je and in in jne movb (bad) mov rcr sub (bad) xchg cld cmpsb sbb sub add inc cmp dec jg rorb jae imul fmuls in and je xor jge xor (bad) cwtl lea ret fwait jg (bad) popa fstpt pop mov push push mov inc mov push ret sbb lahf test dec hlt call lea jb gs xor cs insb or ljmp inc gs outsl outsb addr16 popa je dec popa insl gs daa outsl fcoml sbb push fisubl inc out inc out and push shrb adc dec mov ja add xor loopne repnz out in cmp mov mov call push out inc stc popf outsb mov aas iret dec adc addl add (bad) in push inc addr16 pop mov push pop xlat mov lods repz js push xor cmpb test nop jge call jbe out push sarl and lahf cltd jle push add cmp stos pop cmp jne test imul roll rcrb jp add add sub dec es in icebp je das outsl repz mov xor cmc add (bad) or jb (bad) outsl data16 popa jb xor mov jae aaa mov cltd popl inc jl mov js loope dec cmpsl add adc and mov push loopne frstor sbb mov inc cmp push (bad) dec in or mov add mov fsub adc mov mov dec or mov (bad) fnstcw sbbb cli mov subl scas cmp es add add icebp or mov ja sbb (bad) push mov xor xchg loope mov fwait cmp test push stos out mov sub decb jno or mov pop mov or push cld jne hlt or xchg js jmp mov add ficom sbb lock push sub or or dec push inc sahf mov inc jmp (bad) mov push and push mov xor cs mov dec pop sbb cmp mov ret sbb sub leave push lods and dec jmp fcompl test js push pop (bad) or inc pop call push pop icebp clc add or andb xchg push dec js inc (bad) inc mov int fadd loope mov xlat mov bound pop fs xchg push popf lcall mov movzwl inc cmp ja mov inc or mov cli and lea cmp ja fcmovb divb or mov adc sbb and imul xor pushf jmp pusha add mov and rolb sar aaa cmp jae cmp jb or dec (bad) push push pop roll and sbb (bad) push jbe pop add cmp lea adc ret lock test std mov jbe push lock into (bad) push xchg rorb or out cld pop cld pop adc xor hlt cli mov inc test je ja mov or jae and je cmp das adc mov add cmp jne sar mov and inc loope or mov pop lea dec imulb xchg decb mov clc push adc inc lcall cmp cs ficoml or movl mov jne rorl xor fwait adc adc in xorb sbb (bad) jb inc sbb inc adc jp and jg xchg ret popa movsb (bad) imul adc lea insl pop and and pop push aas cltd std xor push and xchg sbb or jmp adc enter or cmp adc push and mov pop add jmp adc test and inc mov pop inc xor mov inc inc movsb outsl inc frstor xchg lods inc ss sub xchg test cmp pop (bad) test dec fmull jp add adc ss arpl mov fdivrs push cmp lea sub call loopne push (bad) or (bad) xor add pop lahf mov lock pop push lea cmc push push divl call (bad) push push daa roll sbb es je ja mov bound pushf pusha sbb jnp and push fldenv xchg pop pushl and in fwait mov adc or popf scas clc subl stos sbb movb pop inc xlat xor adc and sub mov mov xor push mov adc sbb xchg adc adc mov add add and in sub push iret cmp jbe mov das jmp jge nop jbe adc mov dec mov xor jmp jb daa or add push push jp cmp js stc lock fisttpll mov pushf inc cmpl or clc loop frstor inc or jmp push mov ja aaa mov mov std ret leave jne mov jns push inc loope cwtl or ret mov mull fcmovnb mov into jo shrb arpl dec jo fs mov or imul les mov pop push (bad) adc cmp xor rclb mov mov or mov aad push push inc add ds ficom push or sbb in nop jo pop jo dec cld pop xor add xor aaa cmc fbld push sub or push gs scas fidivrl jbe or jb jns es imul jg scas insl inc push outsl arpl inc gs jne mov push dec outsl je imul mov gs pop sti dec outsl inc arpl or or lcall lcall pop xor (bad) outsl insl bound sti pop (bad) ljmp inc imul ja nop loopne push andps outsb dec xor js inc xor je dec add jb stc out sbb adc and cmp sbb sbb adc cmp cmp or add jbe cmp cld scas clc pmuludq in in in call in fnop aam in in int3 enter in sarb mov test in in mov in in mov in jl je fsubrl in insb dec push pushf pusha pop pop push pushf pushf pushf pushf push dec dec inc pushf pushf pushf pushf inc cmp xor pushf pushf pushf xor and fsubl andl sub and dec dec inc adc add fisttpll add outsl clc pmuludq cmp cmp in call cmp fnop aam cmp cmp int3 enter cmp sarb mov test cmp cmp mov cmp cmp cmp cmp cmp cmp push cmp pop push cmp cmp push dec dec inc mov cmp cwtl es pushf pushf pushf pushf mov pushf js mov jo push pushf pusha pop pop push pushf pushf pushf pushf push dec dec inc pushf pushf pushf pushf inc cmp xor pushf pushf pushf xor and pushf pushf pushf and adc pushf pushf pushf adc add inc sahf pushf add and dec dec lock call dec loopne fcom pushf fmull ror mov pushf pushf sarb mov test pushf pushf pushf pushf mov pushf pushf pushf nop mov pushf cmpb pushf pushf pushf jo push pushf pusha pop pop setae dec dec cmp mov cmp cmp cmp sub cmp cmp and sbb cmp cmp adc or mov cmp cld and pushf pushf pushf pushf hlt lock call in fnop pushf pushf pushf pushf aam int3 enter pushf (bad) sarb mov test pushf pushf pushf movsb mov pushf pushf xchg nop mov test pushf pushf je insb push fs pop pop pushf pushf pushf pushf push push dec dec pushf pushf pushf pushf inc inc cmp pushf pushf pushf pushf xor sub (bad) mov movzwl shl or push jp sbb push data16 inc mov or in dec and pop cmp rorl xor mov ljmp mov movswl add jp push pop mov pushf cltd mov cmp sub sub pop pop push hlt jno sbb lea push popf dec cld xchg cmp mov mov push adc sbb and jp je pop push ds xchg xchg inc lcall mov jbe ret nop scas cmpsl and aad loope and scas add sbb imul push pusha push push popf pop push lods out push sbb mov push sbb andb fmull gs stos add gs movsl aas inc pop inc bswap and or insl lea enter add jg lock gs jo dec push push dec inc inc dec add outsl fcmove scas sbb pop push and dec push inc out pop icebp sti push dec pop and rorb pop sub mov jge push inc dec pop dec dec dec inc push das xchg enter insl push je mov outsl movsl js cmp je cmp icebp repnz pushf pushf pushf repz cmc negb stc cli pushf pushf pushf pushf sti cld std (bad) pushf pushf pushf pushf jmp loope pushf pushf pushf pushf jecxz in pushf pushf pushf pushf out jmp pushf jmp in out pushf pushf pushf pushf out rcl rcrb aad pushf pushf pushf pushf xlat fcomp ficompl fstp pushf pushf pushf pushf ffreep rol pushf pushf pushf ret (bad) (bad) pushf pushf pushf (bad) enter pushf pushf pushf lret int3 int pushf pushf pushf pushf iret mov mov pushf pushf pushf mov mov pushf pushf pushf pushf mov mov pushf mov pushf pushf pushf mov pushf pushf pushf mov pushf pushf pushf cmpsl test stos and insl jl xchg and mov sbb sbb pop pop daa es or or dec push mov xor or arpl je outsl outsb jl add jne aas adc enter jg int3 mov inc dec gs jo nop fdivs fdivs outsb or dec mov je dec gs outsl jb cs mov dec adc (bad) aaa cmpsl or outsb mov mov mov push xchg add pop mov scas in in outsl xor cltd dec adc or in jo mov or sbb scas pop and or nop mov jns gs hlt scas hlt repnz outsb addr16 jno and jno sbbb outsl ja pusha mov out mov movl mov jb ds jno jecxz dec or imul mov fcmovnb ret jle gs (bad) mov mov jbe rcl jae jbe inc or push outsb fs pusha scas sub pusha mov seta push xchg mov mov mov or movl inc popa jae fimul mov sbb xchg loopne or scas je mov ds sub pop rclb mov insb popa pop mov add jbe mov andl sub sub scas ds jo add inc (bad) mov imul mov add fbstp inc sub (bad) loopne ds mov popa sbb adc push leave cmp ds cmp mov popa jb cs fsubl mov add mov add clc mov add rcll (bad) push ja scas add aas or stos or push fbstp (bad) popa data16 les add add aaa xor mov fsubl ds nop int3 dec fiaddl cmpsb inc cmp das and mov mov lcall add push push push pop adc or jne inc outsb mov int3 add test pop jbe add clc jbe inc fs nop inc mov push test jne test xchg adc sbb push loopne sbb mov jns mov xorl mov and dec xchg mov and jbe fsubrs outsb arpl cmp adc push shr div sub add mov push mov push lret mov andl incb sbb xor lea push xor icebp inc (bad) (bad) sahf add decb dec add or pop or std outsb fwait mov mov adc jne mov push and add fdivl cmp cli sti inc or adc fadd jmp ljmp add and mov ja sub mov inc inc dec pusha jmp xor dec jg inc pop add arpl and or pop mov mov cmp jbe in jg lret repz je movzbl push push call mov inc jmp jb add or cmpsl jne pop mov aas jb add ds mov shrb push or cwtl pop test jg (bad) (bad) out and sti je jo mov loopne add in out cmpsl je enter lcall xor push and fs out xchg ret leave jge cmove lods adc gs ja nop mov sbb mov add add mov pushf clc xchg insl jno add push and dec pushf adc outsl jne xor mov xor lock inc add repz cmpb jbe adc sahf divb aam lds clc add mov push sub inc pop xor dec or fcomi mov lcall mov add sub jb sub je (bad) jae cmp inc cli roll sub adc mov ljmp or or sbb jae inc dec jne aaa (bad) js daa or jne sarb icebp jge mov inc dec mov mov jnp push xor div dec cmpsb cmp mov ret push insb ljmp mov adc (bad) mov sub jmp mov dec jne push mov sub xor push add popf outsb cltd rorb sub mov sub movsl sub and jo inc push sbb pushl mov negl andl xchg insl pusha (bad) sub dec inc pop arpl add rorl orl rcrb (bad) scas jne daa andl push and fistp ret inc faddp add add sub add rorl (bad) fdivr mov sub outsb xor insb cmp push lods push sub rcrl loope nop loopne mov ret ffree ffree ffree pop aad add aad int add frstor push ret jl or insl sub pop pushf pop lds cmp add push mov mov push xlat outsl jmp inc loop xchg sahf test imul mov repnz or out dec ljmp ja sub cmp dec push mov jne dec aam imul dec insb push nop cmpsl mov int3 jp movsb cwtl pop outsl mov hlt je call pop rolb or out outsl dec jne aas nop dec mov dec imulb shlb push or mov fs icebp sub xchg andl and movb repnz jl or (bad) mov and imul aam cmp jmp aad pop add faddl sbb adc push lock sbb jg dec mov or fldt jg clc lock setne jmp outsb mov or dec dec pop outsl dec pop addr16 movb and mov dec ret mov out ret pop sbb lret push sahf icebp bound (bad) xor out adc loopne aaa jmp and pop rorb mov sub (bad) fst mov mov incb ja jo loop add jo (bad) (bad) inc ja or sub add sub rorb push mov xbegin jnp vmwrite ret inc mov add nop (bad) in adc orb enter adc push icebp out mov jbe push pushf or (bad) scas divl xchg pop int3 mov push or push outsb xor pop out lods mov push mov and les add and mov (bad) ret or leave or push mov add add add push dec xor or pushf pop xlat addr16 fbstp add sub sbb pop je lret xlat popf test insb jl push dec bound ds mov sarl mov and mov mov aas pop cmp push add lcall movsb lea mov add js mov imul push push hlt lock (bad) clc cld push jnp lahf cld imull lods mov testb push dec hlt adc fstpt mov and lock cmp push ret dec sub pushl adc mov push mov mov ret das lea sub and pop push cmp loopne cld test es mov xor mov decb rolb movsl scas movsb pop pop ret fs inc cmp sbb dec fidivrl push pusha add lret pop lret mov xor jno or lcall mov lcall pop lahf mov pop xor jmp inc push cmp pmaxsw (bad) aas xor xor mov cmpsb mov mov inc mov and pop cmp mov and cli ljmp dec jo mov mov or xor push inc jl jmp or ljmp (bad) jne scas xor xchg divb cmp dec je mov mov pop sub jbe rcrl insb sbb pop inc (bad) lods mov mov push add mov jne jo (bad) xor cmpsl mov cmp orl ja xor cld xor dec jb push inc xchg ss aas mov (bad) jae add and ja cmpsl mov xor aas lock sti pop jbe mov jnp adc xchg std std aad jne les movb cld xchg flds push cmp dec js mov sub ja xchg cmc mov add sbb arpl pop test out cmp jmp push xchg call sub (bad) out add orps out jge adc or push or jne repnz inc pop insb sub jns sub addr16 lods mov call sub neg fsubrl jne cs and lods jmp enter bound inc mov sub mov add pop fldt cmp jae fildl sub testb jae ror movsb xchg pop mov rep lcall jge cmpsb push sbb jg lds pop pop mov cmpsb mov ljmp cmp fwait cmp or movzbl add and in (bad) jbe jne (bad) cmp loop sar or jl je ret je pop jmp xchg ret and mov (bad) fistpl lcall lea mov lcall jmp push pop jecxz mov adc and mov push cmpsb repnz sub je inc pop sbb xchg mov fsubrs ficompl sub lea and xchg sub je or adc rcrl push mov mov cmpsl enter pop outsb adc pop outsb inc push hlt hlt out and xor stc push jne xchg repz add mov aad mov lock xor inc inc mov mov mov mov outsl and and (bad) dec lret (bad) pop js mov add nop mov cmp int3 pushf (bad) fdivl or push and mov jecxz dec (bad) imul ds leave adc pop (bad) cltd lods out fstl cmc (bad) mov pushf mov outsb mov inc insl mov mov or je mov inc je mov dec je mov jl mov mov ret ret test xchg adc (bad) adc mov (bad) cmp mov loopne mov mov dec roll jp mov xchg ret xor hlt hlt push les icebp shr mov adc daa test add push push stos adc dec jl mov int3 int3 jne lock les sub call test test mov or pop movsl leave data16 rcrl shlb sbb xchg sub add jge sbb mov dec cld lea out adcb or fbstp push add jbe cltd adc lea popf push mov das adc aas inc push lea add sub stos or mov (bad) stos incl mov neg jmp or enter xchg push mov cmpsb call je lods mov inc dec add call in or jg dec mov stos cmp jne pop pop lds dec sub pop sbbb mov loop lret mov repnz aam dec jge add adc sbb push jge pop test icebp jecxz add daa shlb das xor add rorb add aas jbe test jge movzwl sub jl jae mov jnp lea jbe in mov stos sbb pop adc je add mov movswl mov add lea pop clc cmp sbb call dec cld jae mov mov push je insl cli movsl decl inc dec inc dec lods or xor jge lret fwait xor sub dec aam test ret mov cmp jl pop sbb mov out into je mov stos neg sbb stos jmp inc scas add fild je stos loop paddsb inc data16 xlat mov clc dec test ja pop cld push mov lret inc mov negl decb jbe sub (bad) add das clc add inc mov mov sbb test cmp adc mov or es pop cmc or enter repz inc test push lock sbb test stos xor call sbb sti add push loope dec je inc jne pop mov ret xchg repnz mov pavgw or repnz mov lret adc pushf fwait inc push mov xchg and ds je push push cmp (bad) fmuls jg mov sbb cs or jne pop add rolb push mov test add inc add and and fucomp idivb and sub inc sub sub cltd cmp push sbb and into mov sub or ds push xor sub xor flds loopne andl dec dec cmp notl lret adc add loop and hlt mov testw fdiv mov jle add movb hlt addr16 push fcomp je,pn imul adc push push pop faddl loope adc push pop std sbb rcr scas push fnstsw fwait (bad) lods aad mov testb je fidivl jne lea mov (bad) js mov nop shr and add push out in adc stos mov add jns lcall cmp pushf or cmpb jb movb mov or ja jmp data16 pusha xor fisttpll leave jmp mov xor stos jge add shr mov clc mov xchg out xor aad jbe adc loopne decl rorl je inc mov fadds xchg mov mov add pop mov push inc sub mov loopne jae dec add jle inc loopne push in insl or popf mov xchg cmp mov out mov setnp add jne pushf and jne dec mov jmp mov add aas and mov ljmp enter popa shll jbe pop jmp add je mov iret inc push ljmp rorb lret loop inc ret f2xm1 fwait pusha js sarl push fldz cmpsb orb lods or sub xchg sbb mov jne inc sbb dec and fistpll out fldl sub cwtl jne mov push xor sahf add push std inc jbe mov adc aas jmp fstpt rolb dec test mov inc add push je pop insl and mov imul int3 push mov test or fimull cmpsb (bad) fiaddl jmp aaa mov lahf inc imul push push fldl pop lock imul push cmp aaa add sbb add sub adc dec push xchg push add test fdivl pusha lcall fist nop pop pop add push in addr16 insb shrb mov aam sbb (bad) cmpsl es push fldt fstpl fwait and push flds cmp jo pop in mov fcmovnb fldl inc jl daa inc mov imull fnsave push adc adc cmp clc push inc arpl sbb adc xor or cmp inc stc inc xchg xchg fsubs inc mov add mov cltd (bad) cmpsb ret cmp jp xchg fildl xor fstpl fwait cmp pop addr16 (bad) pop add xchg movsb dec outsl movsl xor pushl push hlt fldcw mov (bad) iret test lret loopne cmp scas pop xchg add iret and idivb dec sub push enter fidiv roll fldcw push jmp div pusha adc mov mov icebp sbb (bad) imul std (bad) les call inc lea outsl lcall xchg ja and lcall or jb sti insb cli (bad) cmp push inc out (bad) ja adc push testl add inc dec jne sub dec mov aas add idiv imul jbe mov add sub ds ds add pusha or das mov or lds outsb call (bad) add rcl std xchg call jg jl mov push clc hlt or inc push push rolb sub pop inc fild push cmp mov adc inc inc and jge (bad) repnz lods mov xor add decw sbb sub imul fcoms push sub pop mov mov pop stos shl or inc push mov pop mov mov adc aas cli js adc pop enter insb pusha loop add imul sub stos xorl dec xor push hlt and hlt mov cltd xlat or ss xor xchg je je enter sbb insb cmp stos add mov xchg inc icebp call mov add mov jmp rol (bad) sbb inc sbb and inc lea mov inc out cwtl xor jp jbe pop cmc ret imul xchg pop aas sahf mov jecxz orl jb pusha in test (bad) push fsubrl icebp mov sub and nop (bad) rcrb sbb mov inc pop jo pop pop add clc or sub mov pop divb inc hlt out push cmpb sub xlat push cmp add add push lea or lock repnz cmp inc in add fbstp push in jge jae pop cs adc (bad) ret jo adc and in cwtl mov jo inc push adc test jo cmp push sbb sub vmread mov dec xchg or sub push dec negb inc pop mov je or xchg mov or mov std roll sbb jmp cmpl sub mov lods sub jne add mov arpl pop push inc dec adc sbb movsb ja je sbb xor pushf les test inc mov jne add cwtl in pop imul push iret in ret mov cltd xor psubusw leave push int cltd jmp jmp cltd js mov jne push push ret outsl inc cmpb jne push or ja inc add testl fdivrl sbb ss adcb fadds fidivrl add push cmp or push pop mov in fsubrl pop incl adc loop nop test test (bad) call or mov sub scas jbe adc (bad) push cmp and nop jns loopne fsubrl push add mov (bad) pop mov pop cmp jne mov (bad) hlt pop xor xchg fisub push jne mov lcall jns xchg sbb or scas mov or or or push es push mulb sub mov lcall addb push xor (bad) jae imul sahf iret add xor test xchg data16 dec shr add cli xchg jo pop sbb int3 sbb or push mov mov cltd test pop pop bound std inc mov (bad) bound out jb je call shrb cmp pop jo push cmpb outsb test sub xor push pop popa test je push jb outsb add jmp out aad sub cmp pop mov add dec and stc cmp mov push mov and test lea cmpsl or xlat call jl push out rcll dec jg je mov add jbe sbb pop or je or je jmp cmpb dec mov cmp xorl sub dec pop movsb repnz sbb add or cmp xor mov mov (bad) test nop popa mov ljmp outsb dec push xchg jmp inc rorl push imul out ret mov fisttp fsubrs repz inc call popa out add xor cs nop lret sbb xchg in cwtl xchg sub push jne sbb xchg out lret inc jg cmp out and jb push daa jns add dec add out xor lret cwtl inc jmp and dec ficom mov xor adcl add pop cs add fwait pop dec stos cmp ret xchg enter (bad) adc cmp xor out adc or lods into lods or cs nop ja jo cmpb outsb sbbl ja (bad) or inc xchg jmp sbb test jmp ljmp or add test icebp sarl (bad) mov stc mov adc sbb push loope inc pop inc mov jl (bad) in pusha fcomp push cli or dec das push dec jbe into xchg xchg or adc outsb xchg cmc add pop lods popf rorl adc pop into (bad) lock ret jne into push aas jmp push mov xchg adc inc cmpb or inc mov in aaa adc or aaa pop and cmp jg loope,pn rcrb jmp je mov cmpsl sub clc je pop fstpl dec (bad) push sbb cltd jl mov pop mov add lock pop pop mov and mov mov inc adc sub jae jnp roll jb push sbb scas fnstcw mov mov jne pop enter xor mov dec push ret ja and mov add xor cmp mov inc push or push dec pushf dec xor sahf sbb dec js cmp mov add mov in mov test ds out ret sbb pop jl decb stos cli pop in (bad) cmp jne incl call pop pop arpl ret sub and sub je dec je sub (bad) ja imulb je jmp mov jmp push push push mov jbe push inc mov jle fadd or pop dec (bad) pop test aad adc sbb xchg add jg push adc fnstcw pop xchg imul adc into sti cmc adc push inc mov and mov cvtps2pd add push lock jmp or push in call inc xchg nop add mov jne andl ljmp orb mov xor sub add sahf fcomip std paddw imul add cmpl jle adc pop push popf in push and out cld gs xchg out cmp psubusb loopne jecxz xor cmpsl and lock movl add dec clc and div fdiv jle push mov ds lock into sub xchg inc mov dec add cmp daa push sbb insb push setae sbb adc dec mov enter cmp pop hlt lods xchg mov and add sub cmp add jbe in pop jmp loopne bound mov or jmp mov and in call mov mov cmp xchg xorl hlt sbb outsl sub shr lock pop push movsb or loop push jmp cmpb ja fbld fsubrs (bad) push fstps push scas lds fmull lock mov jbe cmpb jle and fs jne popa or mov add or lds or daa jmp jl cmp dec cmp aaa xorb xchg pop mov and cltd cwtl pop (bad) jmp or jl jne sarl push scas push test fdivr fildl adc das fsubrp add sub fcomps xorb test add inc repnz out dec andl jo add sti bound pop jno mov jge jb push fs cli xchg loopne push push repnz mov mov clc fstl mov xchg out inc sub jmp push pushf push movb je mov add or pop and pop lcall add xor cwtl adc dec (bad) int3 push push cmpsb fisub fadds sbb add pop inc mov inc or add sbb test test xor xchg mov (bad) ja sbb test jne add add movl and and push pop sub loop push test cmp sti aas mov pop repnz dec dec cmp into rcll insb aas xchg cmp popa dec int ja pusha (bad) (bad) or mov jno cmpsl pop mov mov xchg aaa jnp xchg cmp adc dec cmp jbe jne dec cltd je les andb aam sbb mov sbb fwait jmp sbb inc xor sbb jle (bad) (bad) push jmp fstp push repz dec push push add sbb push fdivr sbb sub jb or xchg or in add sahf inc jbe fwait enter jb mov mov aam cmp adc (bad) test pop das rclb les sbb les push push addl jo push (bad) call inc adc xchg (bad) pop lret add mov dec jl pop dec push (bad) in out add sbb xlat shrb test sti nop pop fmuls push push mov mov lea dec lret hlt pop mov (bad) rolb add cmp (bad) sub sbb mov or pop and pop add scas scas xchg push testb dec in call loope int sbb dec call xor call outsb shrb dec fdivl not add pop pop mov inc mov idivb jl je and (bad) xchg cmp add pop add into or or sbb xchg pop pushf cmpsl jb push ja bound test push jmp lea lods cmc pop mov jmp push in mov mov add cs es or cmp or fisubl loopne sar adc add fild fucom push mov clc cli repnz push cmp push stos or sub aas fmull cmp jnp jne scas pop iret or dec (bad) (bad) lea and test (bad) inc add or repz sbb pop adcb xor xor inc je sub je scas ret xor lcall cltd jle lahf addr16 xor lods push sbb pushf or fild lock add jp push ja pop mov fdiv dec pop fldt dec mov in adc jmp mov and pslld add jmp mov pusha xchg aam jmp push xor repnz loopne add in loope loopne jle jo lea mov add mov jae pop xlat add sub and xor sub xchg orb scas xor and jg xor sbb sbb add and add aam cmp and pop and mov xor mov or popf gs mov scas js rolb repz arpl xchg insl mov or jmp rcr and test inc mov dec bound sti rclb je pop rol bound cmp and popl shlb lea test and ja jle movb mov lahf dec cmp mov sub popf sarb mov xor push lea cmp push out stos ja jl data16 sub or cs or cmp in mov mov mov add jl mov pop test nop inc push or push xor jnp mov adc hlt nop iret push sbb fcoml mov mov xor cmp add pop push adc movsb sub sbb inc pop out or imul fwait push fsts fstpt rolb mov (bad) mov cmpsl fild push or adcb les xorl push dec adc ja cmpb mov xchg test jp xchg stos mov clc aas les js hlt sti add inc and ret fmull add mov (bad) xor mov cmp outsb pop incb jg cmp sbb loop (bad) call sbb mov inc scas ss xor jo pop pop mov sbb fistp or call jo push sar lret adc ljmp add sub cwtl and add inc or inc or (bad) or xchg jmp fcomip adc test pop pop loopne cld push nop sub mov push add cmp shr rcrl dec jbe xor mov or outsl cmpsl mov hlt clc push in push loopne and aaa repnz dec loopne lock int mov (bad) dec pusha and enter mov push insl add icebp dec jo ja movsb enter adc (bad) je ja jbe into enter adc cmp pop push cld and jb cmp je jmp xor inc mov sub jmp and sbb ret mov add push pop lcall or push cmp daa movsl mov push mov dec sbb or mov (bad) push xchg mov jnp cld bswap adc sub xchg lock inc js sbb inc or pop ljmp test inc cmp je in mov movsl add adc mov add pusha cmp pusha gs (bad) repz jnp jae or enter mov lods aam fadd faddl test loope add jle jecxz lea outsb sub out shr sub in jb movsb test leave and int nop mov and daa push int3 jb pop ret sub and mov addl xchg (bad) std rolb or mov mov jae jae sti adc fdivrl push xor cmp (bad) ds cmp enter inc inc push fadd lock cwtl outsl loopne pop mov cmp push nop inc and jp loop pusha imul je sbb jp pop scas lods mov mov sub cmpsb sub jae insl andb mov call xor in fidivl cmp imul das mov mov cmp mov out scas inc js mov mov sbb sub fsubs shufps adc leave dec cmp lods pop inc cwtl cwtl adc outsb mov negb adc shll cmp push test js daa push insb lcall out push sbb sbb loope out lahf sub pusha adc enter lods inc in add das add push jmp mov cmpb or adc cmpb xchg cmpsl int3 mov pop aam mov adc jne cmp pop xchg mov fucomip clc jne movl jo pusha ret jnp cwtl cmc mov lods jne pop cmp sbb cltd jae sarb push in xchg dec mov fisubr xchg dec cmp and out out push sub sub xchg cmp mov (bad) insl mov js pop push push (bad) mov cmpb sbb je cmp add and (bad) dec jmp dec jle idivb xor jmp sar shlb add inc mov mov add cmp add xchg add sub pushf les inc lock aam js xor cmp daa lds pop add (bad) ja xchg fs div jle adc and lods push inc leave incl inc pop jg mov scas das adc int adc jl mov and sti adc or sub jge rcrb adc (bad) xchg xchg (bad) inc xchg adc dec das cmp hlt jge int add jl jne sbb shll dec push push fs inc push scas aad inc pop add dec push adc mov sarb (bad) lods jne fildll push inc pop fwait movsb out xor mov (bad) dec jg xchg or or mov and test fwait movl pop iret fisttpll es jge pop mov mov or push sub ret pop arpl ret daa push daa xor sub and push push jb fwait add dec and scas pop popa or and out pushw imul add inc push (bad) rorb mov jp or add add xchg clc sub inc mov aas ljmp je mov out data16 jge jb sbb xchg adc adc mov lock (bad) dec cs out add adc or je scas push push enter push clc sub aaa sub fiaddl add and sub jbe in and push (bad) iret or shll mov push mov cmp inc daa dec ret enter adc add or push xor inc inc inc add addr16 iret add hlt dec sar jo cmp mov mov je pop aad out loope (bad) hlt test add mov pop cwtl in push mov fwait jl decl ret fidiv push mov sub jb inc mov mov outsl xchg fwait stc stos (bad) sbb lret jne (bad) jge jo out or push jg inc jmp aas clc pop ja pop or setb rcrl or push or adc xchg mov adc xor dec sbb scas data16 enter jnp loopne xchg call or ret mov movsl mov add test pop mov mov loope sub pop mov or xorb fldt fmull outsl popa mov push xchg mov inc inc cmp cwtl (bad) fmull bound lock push scas movsl in leave mov cmpl xchg rorl push les es jne jmp push insb ja sbb push pop xchg shlb or ja add sub aas sbb jne push scas lds or cmp inc popf or pushf (bad) xor mov fiaddl inc sub lea mov sub iret mov nop add sbb fdivrl push mov cmp mov push sbbb pop jb enter das mov movsl mov xchg fwait pop push pusha mov mov sub pop inc and imul xchg fcomp mov push fld push imul dec repnz sub and int3 mov or out enter shlb imul sbb add and aas ret in daa add add nop mov mov xchg push push hlt mov dec jge cld cmp nop xchg mov lock mov pop dec add push lds or sarb xor mov fs cmpb add fs cmpsb mov popa insl pop jo mov inc push (bad) jg and lahf dec xchg sbb pop push pop (bad) fbld cmp ss or test in in cli mov push (bad) lods or mov (bad) cmpsb push sbb mov inc push add cld in movsl aam cli push mov fwait jae mov int3 adc nop add jge pop or ret pop jmp in mov and shlb pusha add or jmp daa fimul fmuls movsb add scas mov xchg adc xorb or (bad) or in cmpsl int3 sbb fst in hlt push and mov loope test pop or push or pop dec sar or inc jb gs jo pop adc xor inc xchg xchg lock inc xchg lock test pop dec ret xchg xchg sbb cmp sbb add (bad) (bad) mov adc fadds or mov std pop (bad) incl (bad) adc mov and and fstpt daa sub loop jo dec fistpll cmpsb mov inc jmp push fiadd or movb loop xor fidivr mov in xchg add ljmp ljmp call je das test inc movl (bad) mov scas sbb pushf adc daa mov inc push dec gs or sbb (bad) popa loop leave pop xor lea shrl adc fldl sbb or pop movsb fsubrl or mov imul add adc inc sub add sbb fldcw dec sbb push add outsb jae and sbb testl mov adc stos (bad) fsts adc dec mov cmp sti std (bad) mov push movsb pop mov daa push sbb cld pop adc clc add add ja cmpsb lock je push mov scas dec sbb mov hlt fmull scas add xchg ret mov lea sub sbb sbb push sarl das add leave fisttpl scas orb xchg data16 dec cmp sete incl push sub inc ret (bad) fsubs in (bad) sbb inc decl cmpl aas (bad) push inc out shr mov xor jb xor mov lock pop incl scas add cmp mov cmp xchg and cmp rolb xchg pop ja (bad) pushl loopne test mov mov ja dec or dec incl int out xor int enter mov stos jmp fcoml hlt sub lods or pop xor and (bad) inc notl add xor pop cmp std lret lret mov fildl enter push xorb sbb iret mov jnp pop mov cmp jne movsb xchg ror sbb pop outsb mov movd push xchg fs mov pop int3 or jge and fnsave pop mov inc inc jae jbe fs jmp outsb (bad) lea cmp je (bad) pop sub outsb jne lret cld cmp hlt push out push out jns mov fsubrl int3 aam mov (bad) cmp (bad) fdivrs sbb push pop lods jo scas or cmpsb pop push push pusha xchg cmp push mov test xor sahf idivl xchg insb mov js push push pop push jo push mov dec push jl jle cmp in lcall sub and jns cmp add sbb mov adc mov adc out in or xchg or dec add outsb pop imul (bad) clc push nop inc cmp out hlt cs push in in sahf xchg out fsubr insb in daa out in cmpsl loopne or cmpsb add iret leave cmp fcom inc cld (bad) hlt leave cmp int3 cs pop cmp out push (bad) les add jbe sub ja pushf mov popf mov outsl mov sub and jbe movsb push adc (bad) cmp add cwtl mov cmp push xchg daa mov daa dec nop push mov mov in in lods fs mov enter pop shlb test mov jge mov test mov dec pop pop xchg sub clc jae xchg lret pop fdivs enter adc lods mov aaa xor jnp mov sbb mov jge sub pop enter push or mov and xchg cwtl nop add test imulb (bad) ss mov mov nop aaa ljmp roll mov sti pop inc sub adc cmp hlt mov lea stos mov push test inc push lea xor jb js les sarb cmpl divb add sti pop sub or faddp push pop ret fdivl dec das dec notl or jl xchg cwtl mov mov cmpl mov xchg les or movsl mov arpl jp mov subl fs enter push roll adc cltd test shll cmpl movlhps jecxz aam and dec sar clc lea outsl mov (bad) pop incl sbb je mov pop inc aam mov add sbb sub imul sbb add es sbb mov cld jb xor push or mov and pop nop fbld aad pop and aad call aad pop and or or mov dec xor out fwait daa pop bound (bad) mov test daa daa lods test jge push pushf shl jns aaa shlb mov adc ret inc es push push sbbb mov pop mov int sub mov pushf sbb and dec lods and and dec xor xor dec xor mov xor and dec les leave and push enter mov sarb aam rclb dec bnd mov clc pushf loopne dec repnz (bad) repnz push aam dec push mov lock repnz mov mov jae sbb inc push adc or dec add pop mov inc fs jne inc loopne add rdmsr fcmovnu dec mov dec adc outsl fs outsb (bad) cld cmp pop outsl jb inc insl jo inc jb nop jl outsl insl push je pop push cmp bound (bad) sbb dec insb jns jo rcrl pop dec add adc mov repnz aaa xlat and clc pop sub sbb mov mov adc dec xchg out (bad) mov jmp sbb jo jl mov dec push push fyl2x out mov cmp or push adc les adc xchg mov mov push mov inc add dec sub (bad) iret repz jbe cmp sub jl pusha aas es popa xor push adc dec dec inc sbb testb addr16 sbb sub mov pop add (bad) xchg inc add xchg jne inc inc or insb mov fldenv stc pop addr16 adcb test sub addl pop leave insl (bad) rcl jle or pop push inc jb lret xor dec shrl ds movsb sti mov adc cwtl xchg sub fnsave xchg fs cld (bad) adc or cld sbb and dec insb dec outsl xchg push adc dec outsl frstor sub popa add jb sbb int3 inc scas inc cs adc xchg jo (bad) xor shrb dec ds dec xchg (bad) mov mov xchg test int mov mov call jo arpl mov jmp jg fisttp aam fwait mov fisubrl icebp pusha add fist pop mul jbe lcall cmp lret xor mov in push add outsb xchg pusha or call lds popa call mov js repnz je fbstp in add loopne inc scas loopne fistp loopne dec push test loopne add add fildl in enter loope in jb sbb inc loope xor and test add or bound add sbb call (bad) mov out iret push scas rcll sub dec je sbb sbb mov lahf push nop es jbe out shll iret adc popa jae and fs add fisttpl cmp clc mov add hlt mov inc dec hlt dec fdiv mov imul mov cmpsb xchg in dec sbb mov pop dec call sahf es jnp test jae fs loopne movb dec ficom jl add fidivl dec fcmove int3 or imul (bad) jno jecxz das shlb xchg lods xor mov sub mov inc ficom jmp rcrl sub sub jno shrl mov je jo mov iret fs adc push enter iret es std in repnz mov sub add (bad) les and add pop push add ss add adc mov cmp dec push xchg dec pop jge pop push push pop sbb repnz mov lret popf insb jnp mov add xchg pop ret ds ljmp (bad) insl push test (bad) dec dec aam xor (bad) lret cld mov test sbb testb sbb push add andb sub mov paddw nop pop cmpsb or test jl pop les adc and xchg clc jmp jle mov and mov lock popf or inc xor lea (bad) (bad) push call inc mov inc add inc lds and pop push fs mov push add pop dec inc fsubrs dec outsl sahf jmp inc mov jge push mov lcall jle dec jnp inc pop fsubrl out cmpl mov insl jo mov jb lret xchg cld roll mov xor jge loop push aas jmp mov xchg imul ja sub or adc loopne div and or int3 jmp sub lock mov sti push (bad) mov mov jmp mov hlt inc and pop ret mov xlat adc nop mov cmp inc cmp push xchg add push inc aaa sub jmp sbb in adc test loopne in add inc loopne or add rcl xlat and mov sbb (bad) lock adc pop or adc adc dec dec enter in icebp push je ret outsl cmp and aad aam xchg sub xchg jmp push fisttpl fs adcl add imul cmpsl sbb adc pop add or push and push lock dec dec jmp adc cmp dec mov xor inc (bad) call and adc inc xlat insb jmp aam (bad) cmp out mov and jno add cmc pop out add repz pop jne push sbbl cmpsb imul or leave std dec cmp neg inc xchg lock fsubs pop in push js sbb inc mov mov cmc movsb imul inc outsl push movsb nop pop pop iret sbb adc jns pop jmp sbb fadds push mov and push dec add (bad) dec je mov inc cli adc out into or cld ss popf aaa test es imul hlt and hlt sub mov jns popa jmp pop xor (bad) call jns in jp cmp add push mov inc mov and cmp (bad) mov inc lea jmp insb or (bad) jg andl xchg pop push shlb ja cmp (bad) cltd ss add arpl inc pusha xchg dec rcrl push test in daa sbb fstpl xchg xor sub rorb lret xchg add loope or or jge add add or or mov pop sbb adc mov pop addb or psubq inc mov sbbl mov cmp ja xlat inc jbe mov out lcall jno divl mov nop mov out cmp push adc sub dec jno pop rcr loop (bad) push xchg cli sbb add pushf pop dec ja xchg je cs rcrb in test movswl insl or (bad) nop arpl clc add add fldt and dec cmp es fnop lock test and jae add sub push push xchg in xor call shr xchg dec loopne pop enter loopne mov push push fsubl test fnop movsbl xor inc neg aam push dec enter shlb sbb rolb mov push mov enter and enter arpl cltd (bad) sbb sub lret jmp sbb jle cmp rolb das xor test add and (bad) mov add jle (bad) icebp pop cmp idivb cltd mov or repz fidivr bound sub iret jg sbb les xchg mov popa cwtl aaa mov xchg mov fisttpll mov dec cmp in mov test test cmp pcmpeqd movsb movsb cwtl nop cmp and movsb mov aad mov xor pushf cwtl mov xchg stos push lock xchg jno jmp adcl jmp imul sbb sub pop mov dec gs mov in mov adc movsb mov loopne imul cltd pushf xor mov sub mov in add and jmp stos in repnz lock and adc mov int (bad) in ss cmp repz sbb repz xor or aad hlt sbb test hlt addb jne lods push sbb mov sbb adc hlt cmp test dec adc jns nop dec push push push fisub push xchg stc xor sahf out push fiadd cmc and pop sarl jge mov imulb push (bad) mulb cmc adc les sub inc mov nop pop push jmp stos or test push dec dec fcoms push xor xor inc xor xor push pop dec fcomps ss cmp enter cli in in adc dec jno aaa loopne (bad) or adc (bad) (bad) fdivs fsubs test xor aaa rcl iret movsb and and roll xchg push or psllw pop insb enter dec aaa cmp and jecxz les mov testl jbe xchg aaa jns repz idivl push pop repz dec daa aam pop inc popa enter jle mov xor or xchg mov in mov test jge jae insl inc ja mov mov jne mov add lods aaa sbb test test xor popf movsb aaa movsb sub jno sbb lods cmp cmp xor aaa cwtl jno (bad) test inc loopne aaa dec mov xchg jecxz nop ja sbb pushf or jecxz mov clc cmp add or add mov sbb xor int3 loopne sub cmpsb cwtl test jb movsl testw movsl add mov mov inc ret jb xor mov jmp movw rolb notl pop jno xor add inc dec cli push icebp mov je outsl and or cwtd in xchg push xlat scas sbb push jbe fstpl fwait enter inc daa pop push add js or and push and (bad) adc push add sub push out pop dec sar repnz cmpl jb dec jnp jecxz dec sub rcrb jo test jo jns dec jne int mov pop (bad) and popa and push adc daa xor das xor in fidivr insb add inc outsl jne xchg inc dec std jne jb outsb arpl jmp dec pusha add addr16 (bad) test packssdw adc arpl fwait aas push mov imul inc arpl mov js cmpsl and inc iret push and mov mov adc (bad) pop jp daa mov aaa fsubs es xor out inc pusha stc pop clc fcoms std jle test and jl decl dec ja test xlat popf and push inc xchg cmp sti pop xor xchg insb inc sahf out das add movsb loopne pop ljmp lea jl cld stc ret movsl cmpsb (bad) std pop mov xor dec push cmp lcall pusha test outsb push xchg aaa adc mov (bad) and sub mov inc mov mov or (bad) scas in push xchg xchg mov push inc testl dec test inc push push gs dec loopne push push xor or jle push fdiv add std loope cmp xor imul xor lahf mov push pop push ret dec mov mov dec outsl fmuls xor sbb mov cwtl cmp inc icebp out or pushl out jb dec ror and out sbb shl (bad) push cmp push pop out movups mov lds adc push stos xlat or daa sbb adc lahf jno scas icebp test cmp sub jnp je outsb (bad) adc es fsubs repnz xchg add mov cmp mov (bad) imul (bad) daa (bad) xor lea add inc cs sbb or inc mov call mov mov inc ss ret xchg xor pop jle mov std jmp dec daa mov lahf add inc add push mov pushf sub repz or cmc or xchg jle jno xchg pop and push mov add adc stos lods add dec into sbb repz fsubs add test rclb pushf and push xlat pop inc js mov loopne ljmp pop or lret aam push (bad) rolb test cmp sbb xchg mov mov push xor sti cmp lahf and es mov cmp movsb push fld sbb loope mov adcb sahf in daa lock add and push daa inc add mov and and decl cmpsb jl inc xor inc sbb add or jb pop ficompl adc rolb adc or or loop inc dec push inc push (bad) jne xchg sub cmp dec int mov add out sub mov dec aaa lret pop mov sbb jne out or daa mov jb std inc push inc mov jecxz mov and dec rcl pinsrw outsl mov subl jae jne fdivrl test sar mov mov lcall jns cs cli xor rcrb lock sub outsl and inc hlt lods sbb xor cs lods xchg cmpsl (bad) stos pushf pushf faddl shrd pushf nop xchg xchg xchg pushf pushf pushf pushf xchg xchg xchg xchg pushf pushf pushf pushf cwtl cltd lcall popf sahf lahf pushf pushf pushf pushf addb pushf test mov cmp les add mov incl ja enter push add inc adc adc dec add and dec loope lea jl decl sbb push dec adc sbb (bad) push fprem test jne (bad) jmp cs dec adc pusha (bad) xor fdivrl sub xchg xor ja js in outsb dec dec hlt jp mov enter jge loopne cmp push movsb cmc jp aaa sub lods add mov or aam ret mov xchg pop mov or fistp clc cmpsb fisttpl mov dec jl or xor mov fwait jmp lret je mov and sbb fimul sub add and jmp das mov in je jmp cmp sbb idivb int3 out jne notl cmp popa cld add aas pop je scas push lar (bad) fisttpl decb ja jnp sbb adc sbb orl cmp ret add add mov or movsbl fwait sbb jle pop add rolb (bad) aaa mov outsl faddp jns ds in push push adc push ss mov mov cmpb ja jb stc repnz add add call (bad) out mov sbb mov mov or cmpsl sbb mov push lea pop xchg adc add call dec lcall loop (bad) jb into inc (bad) pop inc mov lods cmp lcall add push fildll inc fcmovnb mov out mov sbb adc les and pop andps orl (bad) dec jns in pop inc mov dec sub lcall and repz cmp bound icebp sbb mov mov and in je in or adc sbb xchg pushw pusha mov mov hlt cmpsl das dec add adc or cmp ret mov push lret sbb sub add bound lds jne dec enter jecxz lea dec cmp (bad) pop add push lret add mov lods add jne xchg cmp (bad) in fidivl adc lods pop or inc dec dec daa mov xchg and adc push cmp inc paddusb cmp inc sti push aaa sbb or push arpl xchg fldt dec fdivp or sbb fucomp mov cli movsb add inc add adc int3 jle mov inc fistpll pop fmuls push outsb mov pop pop lret add inc fwait push push dec push pop pop jge jecxz push imul out sbb push pop (bad) popf out xor (bad) in xor push out sub fnstsw push inc push xchg and xor sub inc xchg out push cltd and mov lock pop jmp sbb (bad) inc shr adc push or int inc sbb jecxz in inc fldlg2 cli rcl rcrl pop cmpsb outsl subb jno pushl jge add call js inc or jo add adc inc xor xchg and pshufw ja jae jne cmp adc clc dec or or mov repnz mov mov fiadd jmp cmp ja (bad) ljmp or add mov lret rclb rcrb iret icebp jae sub mov sub push outsl es test pop jge aaa sub mov enter inc aas mov clc ljmp add push inc insb imul lret fxch test pop es gs push sbb xlat or dec push gs inc insb popa out mov jae adc test xchg add cmp or inc imul cld scas dec xor or sbbl xorl sbb adc dec outsl imul xchg scas and push (bad) dec outsb insb jns (bad) test scas hlt dec es shr movsb (bad) mulb pop ss push mov inc je sti into fnsave or cmpsl or dec imul jmp sub cld test or das add (bad) adc add dec mov rcrb (bad) and je add nop xor out aaa out fstpt xchg dec gs out insl out adc push fstl inc jne add outsl adc adc js sbb push gs ss dec cmp jnp hlt push add xor add mov outsl push movzwl negb mov (bad) ja or mov mov mov add je data16 mov adc lcall fs cmpsb pusha mov ds or inc repnz jb mov in adc inc pop cwtl and adc add pop mov in jge insb scas insb dec jne hlt push inc and inc sbb mov nop enter stc xor push mov and nop (bad) pop and mov aaa sbb dec imul mov scas adc aam cmp stos push subl xchg scas pop xor ds lods adc add push push sub aas outsb mov pop enter cwtl pop adc adc in outsl in sub adcl aad icebp jle mov pop adc in xor js imul mov mov push and and (bad) mov mov les lahf mov adc and sbb cmp fidiv mov push push lock add loopne lock sahf clc or loop ljmp inc cmpl test pop addr16 pop and addr16 call idivl jae add cld adc sbb int3 lods jbe push fst or cs jbe and ffree repnz pop push mov pop outsb push add loopne adc (bad) mov push aas sub pop (bad) adc adc sbb out xor cmp ljmp dec leave jae fs jo lds aaa mov bound adc cmp (bad) or pop mov push cmp fcmovu pop add push adc jae pop sbb sub mov je inc inc xchg xor or push test faddl je cmp adc inc es push inc inc push mov rcr outsl notb push dec dec push push nop dec bound xor jl mov mov aaa mov nop scas pop sbb ljmp inc push or fidiv push sbb adc pop add inc dec and pop in push push dec addr16 mov cld dec outsb push push xor push pop lods push rorl fcoml push push mov in or mov mov push cwtl add ret aaa leave sbb push rclb loopne pop mov outsb cmp xor test movb (bad) mov adc inc pusha or aam scas pop aad jo add pushf sbb fldlg2 clc xchg fcoml sub loopne lahf cmp push fs push push (bad) lock test xor imul xor push in xor fstp hlt push or mov xor push xchg xchg test push push cs out (bad) adc repnz pop add mov lock mov pop sbb adc outsb and nop sbb sbb xchg call xlat out cmp div or scas xchg sbb mov cmpsl sbb push mov sbbl sbb adc nop add sbb add nop add xor test in in lcall push scas jg add out sahf out sub inc push adc or or pop mov jnp adc push pusha sbb outsl mov mov sbb repz push call cmp aam sahf mov aad cmp in fistpll outsb push adc daa push and scas call add inc sub xchg cmp dec mov pop mov push sub pop or lahf jle pop out push (bad) rcr loop jl clc jbe inc cmp les push cmpsl fldcw insb push xchg lcall test das jmp jo push dec sbb dec ss cmp fisub (bad) pop pop inc cmove mov outsb sub sub jl pop pop aas inc (bad) aaa les aas pop call (bad) mov stos mov dec mov mov les fmuls and aam cmp aam cmp cmp hlt int3 xchg or call iret repz loop sbb inc (bad) aam xchg dec imul push in ficompl add repz fsubrp ss andb xchg out ret ja push xor scas ret adc mov (bad) cwtl inc int3 xchg inc (bad) lret mov xchg pop xchg jbe divl xchg jbe js jo cwtl in inc icebp push or lret decl (bad) sti inc cli (bad) stc (bad) clc push push (bad) out jge (bad) cmc push push push loop push decl adc sbb repz fs inc out fdivp dec clc out sub cwtl mov mov push or xor mov mov int mov add mov xor pop add test push popa ss loope rcrb sahf out fimul cld sbb fwait lock add xchg push inc push bnd call dec cmp pusha and mov test mov push dec leave inc repnz lcall je push sbb faddl mov cmp jmp or or aaa pop inc mov pusha sub and pop stos pop mov dec dec fs or outsb adc or pusha xor mov lds dec int3 stos push retw push push imul adc push adc dec test aas mov cmpl jne loopne dec cwtl add je xchg cld enter and adc or pop mov jle add jb jne (bad) cmp scas in add pop enter mov out and or loope lock add xor push mov dec sarb xlat bound inc (bad) nop mov dec je cmpsb or test ljmp lret mov outsl and sub ja or shlb add call imul inc cld sub fcmovnu adc or sbb add sbb adc fistpl mov and cmp push sar mov movsl xchg add push sarb adc cmp sbb sbb sbb or loope mov stc and sub add ficom ret std xchg aaa adc dec mov add daa dec inc or daa je adc add fldenv xor clc mov or test add mov inc (bad) dec sub adc push and pop sbb pop pop sub shld jb or push inc inc xor adc sbb (bad) sti out add in add xchg (bad) in inc lret pop daa and cmp stos xorb loopne add out jne (bad) sbb mov pop or add push arpl icebp mov sbb or adc xor mov gs shl popf push shlb fistpll sub aas jo fdivrs pop inc loope movl push cwtl sbb xchg aas adc or es pop sarb adc rolb pop mov or imul add outsl fild pop add pop je sub cmp adc imul xchg sbb clc sbb icebp push cmp inc adc pop adc xchg sub push (bad) adc inc sti add or cmp mov cmp inc adc inc sub or cmpsb push lea dec dec mov dec in rcrl jl inc push sarl push inc dec jne (bad) mov lods push addr16 je test lds push ret inc sbb pop push jae jg mov rcr nop outsl and xor pop icebp dec dec cmpb dec jb adc popf addl inc mov insl (bad) leave gs cmpsl dec das sub ljmp in adc dec addr16 inc hlt fcoml pop aaa adc ss xchg add imul into dec mov lds sbb jl xchg sarb jne push sbb dec pop pop xor in or xchg jp push call repz outsb repnz xor xorb inc adc or pop imul imul icebp cmp push (bad) jbe popf xor cmpsb (bad) jecxz jecxz les call rcrb lcall push rorb sbb inc jb jle aaa pop sub out jae push inc test (bad) test xorl (bad) in int rorb mov mov add mov xor test pusha les add mov xchg mov hlt xchg les push pop cmp push cli mov pop adc and add cmp xor sarb int3 test hlt adc jbe jbe xor out cs pop or lds fsubl rolb xchg sub inc add pushf inc sbbl (bad) sub jecxz add cs inc les and lahf xchg ret sub movsb loope imul imul rclb or pop push sub push or repnz cmpl fwait js enter jle cmp sti push dec mov or jne push repnz add adc mov repz cmp adc or xor bound lcall cwtl cmp add jo and mov in (bad) out dec das jmp adc ret sbb sbb jo mov insb cmp shll jbe iret fistp mov add rclb jb mov aaa xor mov cmpb mov mov xchg adc dec aad cld mov add shr or xor cmp or adc aas test lock or addl mov jae addr16 rorl mov or or or movsl and push pop push xor mov adc (bad) outsb and hlt pop xchg push mov outsl lds cmp xor rorb sbb popa and aad test jne (bad) and js pop ret popa mov pusha mov mov ret nop (bad) mov lea add push sbb imulb xor cld mov jmp ret add enter mov ss movsb inc xlat mov adc sti sbb add jmp or lret and mov incl mov push mov inc je mov add or cmp jbe xor sub and cmp pop lahf pop mov pop push and mov fimull pop and into fwait pop notl (bad) push add mov xchg test mov icebp push mov sbb dec dec js jecxz xchg dec push xor mov dec xor xchg mov mov xor test mov sbb push (bad) xchg cmp lds int3 xchg inc inc sub or dec imul test cmp sahf faddl push aas or mov jmp sbb or out (bad) add lcall push xor (bad) (bad) mov sub leave mov ret movsl push or push cmpl in push push andl test fadds sahf in loop dec cld stos push xor xor cmp cmp je jle test mov rol and push sbb inc nop cmp push pop aas cwtl or add adc nop jo mov or bound sbb mov imul mov and call daa enter idivb cmpl jnp cwtl imul movsb push js sbb lock into mov (bad) (bad) sbb idivl add das dec or je or mul jae loop jmp sbb incl mov xor test xchg mov add add sub das and jne aas push pop insl popa fadds jmp into cld sub cmp decl fistpll jnp test dec enter loop out and push mov (bad) inc outsb enter push outsb xchg adc inc movsl mov mov cli (bad) int xchg mov scas pop fdivs and cwtl jo mov jae cmp cmpsl aaa les test repnz cmp int3 (bad) das inc outsb inc sbb add xor push sbb adc add push mov in xor adc push lock and add sar sub add dec or stos ss (bad) add loopne repnz mov rcll std jle sbb jae pop or sbb pop jg (bad) or in pop aad orl or call mov subps mov incl enter xor movsl inc add sub dec test shl movhps call cmp mov lock sbb (bad) inc mov cmp xchg xor or dec mov sub jg dec hlt lds inc jne fidivr aam rol aaa add pop inc mov rolb and cmc clc pop popf rorb pop call inc push js nop inc sub push sub es or test xlat in enter das mov enter jo test or sub mov dec add add sahf or adc sbb das and pushf and sub and mov cmp pusha xchg and add pop xchg add je popa sahf xor sahf xor inc enter stos adc (bad) mov fistpll ss push ficomp sub jge mov stos decl jno sar mov shl adc pop xor sub shl cmp je fistl dec pop imul lods mov push stos orl inc jbe mov sbbl fcmovnbe adc fsubs sub sbb or syscall mov mov inc stos adc btr push add loope jmp mov int3 push push inc adc ret pop inc (bad) jmp xchg add xor inc sbb lds (bad) int3 (bad) mov ja xorb ljmp ja and bt jb mov add mov hlt adc adc push inc cmp adc js jne inc decl jne les test aaa xor add sub xor xchg adc imul aaa in (bad) cmp push sbb and andb xchg inc jne xchg movb or popa sbb mov shrb add cmp (bad) outsb imul rol push mov dec add cmp (bad) pop mov mov inc jb retw sbb adc adc jne or aaa js xor push sub aaa inc push mov add pop pop mov add insb loopne xchg push mov ret lock push int3 push daa and add xor xchg add aas mov inc or xor test sbb sbb aam (bad) sbb or fistpll push add mov and jne dec and aas mov in inc pop or (bad) xor jg jmp outsb jns insl out bound push cmp sub dec in (bad) inc scas popa fsubrl xor pop pusha jo push and push ret cmp cmp mov dec and shll nop sbb xchg fldl repnz clc icebp xorl (bad) lock mov sub call aam fiadd sbb enter cmp mov stc pushf mov xor push inc and inc xchg es jle ret inc pop pusha and cs imul ss (bad) icebp stos repz movsl fucom ficom mov adc pop push jo imul pop dec leave and js pop mov push sub mov xchg or inc and out push cwtl push loope aaa sub jmp (bad) (bad) ja daa (bad) dec clc rorl fstps addb jecxz xor les inc dec dec cld push jne push sbb push adc pop (bad) pop and insb inc imull mov je cmp dec rcll xchg mov sub mov dec in aaa sbb ss call cmp popa pop cmp jge xlat dec push in sbb mov inc rol mov hlt out and popa test in mov xchg out xor inc and mov (bad) xor inc cmc (bad) iret xchg sbb jl xor inc mov stos cmpsl aaa lock sbb pushf inc xor or hlt popa loope xchg adc rclb fstpt aad (bad) sbb inc lcall xchg je test gs xchg fstpt xchg pushf loope xchg mov inc outsl test or repnz out add sarb mov or jo ret adc fldt out mov jne xor sbb adc loopne stos gs push pop fs push push inc pop xchg push lret push mov push xchg fucomi fwait pop ret js stos lcall adc xchg mov cmp out sbbl mov popa out xor inc xchg cld or push cmpsb add jl hlt (bad) lods jp (bad) ret adc shll or dec clc fcoml mov loopne xchg inc cmp js xor sub adc test and stos cmp das push xchg push pop sub xor scas je pushf and into mov negl subl pushf mov test jno (bad) invd jne xchg adc mov cmp mov jecxz test ds scas mov ds cmp xchg nop mov or add lahf or dec pop test or adc icebp gs jbe xchg lock lret sbb xor or rorl xlat inc dec das enter out addr16 dec pop push or cmp xchg clc clc add dec loope rolb int3 sub lock dec (bad) incl sub lea push push ja lods das xchg cld out sub or mov aam inc cs clc xlat jns mov negl dec add imul cmp dec push add nop inc pop orl cli push push push pop sti xor adc dec sahf jecxz and hlt fild dec and jmp mov xchg xchg pop dec jle xor xor pop bound add sub pop mov push repnz int scas mov mov push adc and roll gs out sub inc push mov inc or imul jo jo je insl adc push stc das loopne imul and daa dec pop xchg mov mov stos inc cmp (bad) cwtl ret adc std cmp clc arpl mov (bad) dec inc jmp (bad) rcr mov or je or lret bound sub pushf xchg and xchg mov cmp add int mov xchg lea ret and loopne adc lea sbb arpl xchg imul (bad) call jecxz add imul int add inc xor inc pop mov aas int3 (bad) cmp jne testb orb aam mov sbb (bad) aam lods (bad) pop and movaps sub sbb das pop movsl mov das mov faddl adc movsb push inc mov mov test pop cs cmp daa inc inc addr16 andb sub push xchg cs xchg mov enter cli or add scas fdiv adc push cmp leave push xor mov mov ret addr16 dec pop data16 (bad) call ror and and sub sub adc xchg and add sbb xchg mov adc inc shrl sub push addb and pop adc test lea cmp inc stos imul adc or push movsb sbb dec push push mov test or sti mov pop mov (bad) pop cld cli push lds dec sbb ret cmp test mov dec add mov pop or cmp cltd ficoml mov (bad) mov cmp aas mov (bad) cmp mov sub clc mov jge lea jmp pop ret mov xchg addl inc add jge roll mov xor push (bad) out popa andl mov push adc pop ret bound aam add add and repnz push cs das mov mov loope (bad) or push push xor rcll pushl loope dec imull shll int je xchg pop mov pushf incl mov popf jmp fisttpl jle pop ljmp or cmp sbb or nop and ret jns push mov mov push (bad) jl repz push inc xchg push rcll push dec nop pop adc cwtl in jl orl clc or jne add shr out fisubl pop mov insb or movsb repnz and jg sub adc jl and decb cmp jne mov or or movsb jno push mov mov clc jle cmpsb les inc inc nop pusha and or hlt jl xor add pcmpgtb lea andl aam popa sbb jo test and add cmp addr16 xchg imul lret or mov pop mov xchg inc mov jge or jle xor push push add out sbb arpl cwtl add push jle mov add cmpxchg lds push fmulp cmp mov lcall adc inc mov dec push insl ret jno dec fsubr ss sub fwait call dec mov mov or (bad) ja jle inc (bad) movsb cmpl cmpl xorb add add push js jb sbb pop mov mov shl sbb jecxz cmpsl loop adc cmp bound movsl add adc shl inc add mov jae mov push inc inc movsl cmp rcl lahf mov sbb add clc xor xchg inc nop pop enter (bad) xor jecxz mov cltd push push mov or and xchg dec test sbb lret mov outsb sbb ficoml faddp inc jb sbb es ret and sub push testl in enter enter dec pcmpeqd repz inc pop in sbb xchg les loop bound mov pop push push sbb add push or sbb push jbe or lea enter adc push cmp fcomps xchg je out jbe add fsubrp dec icebp shrb lret stc inc rclb dec hlt ret cltd sub push or stc or xchg or add in outsl popa mov add in dec movsb imul push clc dec js dec mov in das pop sahf insl in (bad) push pop clc adc fs (bad) lods outsb mov mov inc dec xor sbb mov mov lcall jno das jo int3 (bad) mov dec cltd rcrb push stos xchg push sbb inc in push push or (bad) jg jl dec dec cmp or push push data16 stc or and dec pushf fwait push test (bad) or inc roll in icebp in loopne mov (bad) scas andl jne push rolb pop push icebp inc xchg add dec ljmp inc jns mov mov jmp xor push mov or imul addb arpl jo nop testb enter dec dec es std inc (bad) jno movsb (bad) ja lret xchg (bad) pop (bad) mov mov and add data16 int3 clc jo xor or aam or js sbb rcrb sub adc push mov pop cmp je outsl jne jp sbb iret jge or jae push add add je dec or adc or push add sbb jl lods inc outsl push dec mov outsb popa test dec add call or (bad) call mov fadd andl adc cmp ljmp sbb fimull lock or adc xchg dec add std movsb cmp jge data16 js in xor inc cmp cmp or xchg test cmp loopne or jl xchg cmp je push jne ret in cmp adc adc push loop pop xor pop push daa or cwtl push add jae test mov (bad) notl push inc lds push or cmp xchg out ljmp out dec sub jnp jle or mov and xchg lods push sub fsubrs test xchg inc cmpb dec cld fnstenv inc insl scas hlt enter cmp fwait repz push cmp in or push enter xor loopne add pop frstor sbb ss les mov add ds (bad) scas mov xor pop push jl clc cmp pop stc mov mov jmp adc jo add pop or test inc pusha mov bound mov jo mov addr16 sbb pusha dec add jmp push das push (bad) push or dec add std adc ret jl fcomp push sbb adcb add iret sbb lahf add add or (bad) or outsl jo imul jne (bad) xlat out aam cmp pop mov out mov lock nop push mov inc in or adc push inc js adc xchg cmpsb adc or pushf xchg sbb imul mov jne,pn dec decl pop xchg and int push in push inc sbb icebp push ror fdivl cmpsb das lret or adc ret nop ja pusha adc pusha cs add push call push movb push lods dec arpl push sub fisub sti add mov inc mov push (bad) adc in fisubl (bad) jmp test mov ljmp out add adc xchg mov pop xchg idivl sbb fldt or mov scas adc xor pop sti cmp and push enter lahf int scas cmp and jl inc or push cmp xchg outsl les ja add xchg xchg mov outsb bound fs mov xchg jne xor bound clc or jle insb dec ja dec fistpll xchg sbb push mov repz mov fs imull cmp cmc divb push adc or adc shrl test fdivr das push add cli aad icebp pop imul or cmp cmp jl or mov jmp sub push aaa and (bad) xor adc xchg jmp addr16 inc fstps leave loope pop out test shrl arpl sbb shll jne mov jo add mov rolb jo or (bad) arpl sbbl lock push shrb and or adc adc inc pusha dec mov mov xchg into jo inc mov dec xchg push inc dec sub add pusha test or sbb add mov adc shrb mov adc mov lods roll lods xor and push jb add mov lahf orl data16 xchg xchg pop adc add xchg popa inc das fnsave jp adc dec adc je ret add test jo mov push popf pop mov add rcrb adc push fidivl daa mov add cmpsl jecxz mov mov ret pusha out dec jnp mov adc ds icebp lods push ljmp xor push movb adc leave stos xchg mov (bad) jge sbb mov add arpl fisttpll push sbb insl push pushl test sbb lret roll jbe outsl arpl decl xchg inc test sbb adc int3 xchg add sbb pop shlb push adc aaa mov or test and pop ss or and jnp fdivrp push je xor arpl movsb cmp adcb sub add lcall and fildl sub cmp push add push push or jne add repnz mov out loope inc addr16 mov outsl and rolb pop push xor in sbb ds inc aam xchg mov negb or fstp pushf sbb xor lea fmuls fcomps arpl movb les pop fsubl rolb xor leave xor pop loopne pusha movsl inc ljmp pop (bad) ja sahf inc repnz push clc movsl ret xchg inc outsl pop pop test loopne and mov sahf rclb dec out mov je arpl jnp movsb jnp es jne and aam push ja fistp les rol ss lods mov jmp scas sbb mov xor mov dec xchg pushw push xchg pop (bad) pop sbb ficoml cmp test out jle dec jne jp sarb sub jne,pn jge scas pop ljmp or sbb mov out movsb jle push dec imul xchg jle scas nop push jecxz push jl add mov pop add test jbe ja mov mov sbb fdecstp fsts rcrb cmp pop mov lret sub (bad) add pop or into dec loop repnz xchg sbb adc push fdivl shlb sahf cmpsl fistpll (bad) int3 inc mov push dec dec int3 orl dec jle push mov ret adc mov ret outsl test adc sub inc out jne or lods je sbbl adc gs jmp neg sub add and bound mov aaa imul xor js sbbl and pop fadds xor pop out lahf outsl adc and ffree dec cmp out lock clc sub cld testb scas in in inc mov xor lods sbb push pop mov pop sub adc inc push cmpsl lea mov sub adc adc inc cmpb mov cmp inc sbb or pushf fs xor not retw mov sub int3 ret jmp mov add leave lock add call xor pop dec pusha movsl sbbl cmp imul test pop mov xchg popa push popf xorl call sub xchg jbe rcrb mov loop scas xor dec pop jecxz push mov (bad) lock int gs xchg xchg jo imul jp mov xchg in dec jno adcl iret mov scas bound mov dec sbb adc add or in dec sub lret rcll ret add (bad) (bad) push mov (bad) push and in cmp mov addr16 (bad) outsl pop mulb cmp test push sub mov xchg icebp mov push ss sbb sbb je in shl xchg or jne in adc daa outsl dec repnz or sub adc xchg or xor aad sbbl adc sbb pusha push loopne and dec sbb fcoms cmp jno (bad) cmp push and insl das pusha or clc adc in imul adc fadds inc sub imul push notb lods pop sbb test jmp pop clc pop repnz (bad) cmp call hlt dec adc pop push stc jne sti mov mov pop popf jne pop or or mov xchg rcrb shr in adc fwait cmp and in outsb dec hlt out adc pusha sbb push je fbstp es push push stc adc inc jo out xor mov mov sbb jno mov cmp push popl popa nop aaa xor push ret or sub cmp jecxz and dec and (bad) in mov sar or fst mov add push (bad) xor dec dec jp or xor xor push popa or xchg inc mov clc jno out sbb jmp insl fsubr or outsl sbb jbe inc push sbb xor sub enter sub jb cld pop xor imul xchg sub or pop dec fisttpll imul adc clc sub add xchg in es movsb and jbe xor pop jo cmp lcall adc insb sub or push mov xor add and xchg xchg addr16 sbb add lock jb adc and xchg dec pop xchg popf push push int3 mov add mov add adc dec and fstpl fldl insl mov cmpsl mov or sahf setno jo je sbb mov add and jns jbe xchg incb push sbb mov lcall insl pop fs mov cmp mov les aam xchg adc jns orl or cmp dec lahf xchg sub adc inc mov sbb push ss sub movsbl xor mov xchg mov push and adc and daa cmp ret inc xchg in insl sqrtps fwait out push mov adc mov sbb aas mov (bad) div outsl mov jne mov push orl push mov jno xchg paddusb ljmp mov mov sbb aam jno adc dec add das call jne sbb arpl testl adc add in or mov sub gs xorl pusha push sub stos fldl mov mov inc bound out dec loopne movsb testl jb js jl pop imul xor xor xor mov hlt (bad) mov std out or cmpb jne xor or mov jp dec test cmc insb xchg push xchg mov cmc test adc xchg std pop test inc fadd inc pop push test and add pop sub lea mov pop sub addr16 lods adc lock push jmp (bad) movsl cmpsl mov scas lock ret rorl pop shrl sbb xchg jae pcmpgtw nop mov mov push int3 (bad) mov out js push fistl jno xchg adc fstpt push adc dec dec inc jcxz iret add pop cmp popf mov cmp punpckhwd pusha xchg and stos cmpsl or mov mov lret nop push push adc hlt (bad) push shrb popa cmp fldl sub push xchg sbb in in push or xor dec ss inc ret (bad) fdivrs inc out jp insl dec addb (bad) inc or out xchg and xchg icebp inc pusha pop mov mov inc xor and out test es and cmpl add add mov cwtl add stos hlt xor ljmp sub sbb push loopne pop pop jne mov push flds clc adc mov sbb push fcompl push mov jecxz jl pop enter out jnp daa and sub pop dec sub pusha out mov mov lea rcrb pushw insl dec xor enterw mov dec js xor aaa cmpsb in adc xchg cmp das (bad) enter pop pusha repnz clc push imul fcoml fdivl (bad) adc arpl in cli add fcmovnb sub sbb cmp lods es iret xchg push xor (bad) cmc mov adc fs fcomp imul popa (bad) iret sbb jge (bad) movsl sti inc jmp mov adc cmp inc pop inc pop addr16 daa out mov hlt loop aaa jb daa push (bad) adc shrb inc fistl aas mov jmp xorb mov faddl xlat (bad) push sbb daa out push mov ret pop jmp inc push jge or and cmp imul imul mov and out and add adc rcr (bad) pop or test or mov and leave jmp xchg push roll and push lods ja loopne sub les js push sub mov cmp sti scas ds cmp jne mov (bad) or sub lar shl ja dec repz mov sbbl push dec enter or sbb stos dec and aam imul and je cmp mov jmp gs das je sbb pop imul push mov dec pop lds arpl xor jmp call loope jne (bad) and push mov or je add add pushl push inc mov orl sahf fisubl (bad) cs pop push dec je xor dec imul jnp push mov sub adc inc cld mov jmp insl daa pop dec pop cmpsl adc in push sub pop hlt lock adc sub jb and aaa (bad) mov cltd or or inc cmp fadd imul clc gs sbb fwait popf push test lock loopne stos ret jmp lds push mov sub outsb inc ret inc aad cmp dec or push adc mov dec push xchg negl fsubrl pop add test mov lods jmp test je pop test mov call (bad) xchg adc push dec push jb dec sub (bad) and push xor data16 xorl nop push lret out inc jo test ja adc mov sub pop push addl pusha inc cmp mov add sbb cmp mov adc dec mov mov xchg push push mov add (bad) sub roll lods lock sbb dec movsl outsl mov ret cld test add add adc pop inc lahf mov and loope insl and scas shll dec pusha sbb mov les pusha repz pop xor scas inc cmp ja jno push mov sub dec repz pop test dec js test xchg mov mov jns leave repz jns out cmp jmp insb pop push mov sbb sub adc add or xchg or add pop je out rorl ja jmp das pop push adc sti rcrl mov xchg and xchg sbb popl orl pop lods sub mov xor add xchg pushf int test mov ljmp fisubl hlt adc aaa mov dec mov and inc lea jmp cmp orl push inc pop lock rclb push inc ret aad jae jb push cmpsl cmp inc (bad) es add test push mov sub call cmp xor test jge push mov mov and jg cwtl mov mov (bad) (bad) push (bad) dec push mov dec rorb xor scas add clc inc push fmul cmp pushf and inc call jmp sbb (bad) dec sbb enter or ss cmpsb sbb repnz xor or push add and dec add pop sarl shr inc (bad) push or lea adcb pop and add jmp cmp outsb push insb and js mov pop pop (bad) jns add popa imul mov pop aam xor sbb sbb sub add sti inc bound jmp add pop and push js sub dec ja repz roll in hlt jg mov imul dec lock lea icebp push sbbl daa loope mov or jg imul adc jno dec mov mov adc cmp cmp stc dec call shrl incl mov sub mov aas sbb xor xchg adc xchg ljmp popf out mov cmp xchg lods pop mov push mov inc mov (bad) outsb mov addr16 sbb pushf cwtl cmp sub lcall je jecxz,pn jbe jl rorb mov fbstp mov add cld (bad) enter scas in xor arpl pop andl mov fsub inc clc xor divb je insl adc cwtl jmp daa loop lahf inc pop sub jmp push dec lahf push decl lea or movsl leave and or cmp cmp add loop clc mov add xchg je dec or dec inc inc sbb pop jg mov lret push adc mov testb adc cmp pop test or sbb rolb ret call faddl cmp bswap mov cmpb jg push cmp add hlt or ds daa or jl adc jg mov push add xchg dec (bad) add add adc in xchg idivl iret or xor lea popl mov xchg jecxz nop insb push call (bad) gs aaa add add mov (bad) aaa or pop gs (bad) xchg mov rorl test lock enter mov loope xchg loopne pop rcrl push dec sub out negl xor and jge push mov xor jno nop xchg sbb xor xchg test mov pop sar shrl cmp je sbb daa cld dec push test mov dec fldcw add jl jg jmp add cmp rclb push push sbb pop fs cmp rorb add arpl cmpsb lock loopne pop cmp es test dec aaa movsb mov or cmp in mov sbb inc adc adcl mov in imul sub ficom fwait std test scas and mov ss inc and mov das mov xor push push lahf popa jne inc into add add sub arpl pushf xchg mov in mov xor cmp mov sub jle fisttp int3 push arpl movsb andl mov mov cmp fdivl in xchg push mov aas jnp cmp je addl adc fisttp adc adc sbb sti adc orw dec xchg cmc rol data16 gs iret shlb sbb mov sbb mov push sbb ja add adc pop add mov rcrb or pop adc dec push lds xchg or dec sub sub adc cwtl mov fdiv inc xchg (bad) and mov pop adc sub mov bound mov xchg xchg cmpsl lock dec dec and (bad) aam rcrb mov inc sbb mov inc sub mov xchg inc mov pop adc inc push sub loop mov orw inc cltd nop inc push adc add loop inc xchg in bswap adc sbb cs jnp dec fadds pop cmp sbb call push jno and or (bad) es jp dec xlat adc les or inc loop jl add rorl mov aad and push rolb cld push push int xor ucomiss sti xchg sarl inc inc pusha lret dec fs inc incb outsl add dec adc gs add sbb jb adc cmpsl scas pop mov inc and add push push loopne push aaa inc mov pop inc notl arpl cmp xchg mov mov pusha add lret rcrb fbld jne outsb loopne pushf inc sti or pop dec jne cmp jne daa call cs jne hlt cmp dec call or je push add cmc adc cmp pop ret dec xchg mov hlt pop dec sbb pextrw xor jg or xorl aad mov arpl inc dec jne rorb and inc cltd mov add or outsl cs cmpsb sar stc push pop and xchg lcall sbb jmp and lret sbb mov mov inc add mov xor cmpsl sbb adc add sbb aas les ret xor push fisub xor cmp jg mov cmp (bad) xlat xor gs pop loopne add xchg sub clc icebp mov arpl mov jmp or sbb sbbb mov call push pusha sbbb cmp push mov aas popa inc cwtl xor or add sub les xchg mov addr16 and fisttp add cmp pop gs push push pop push or inc sarb cmp push andb les and mov xchg mov je xchg mov imul jne es jne scas push (bad) adc adcb inc and enter jle into push into lcall mov xchg and scas aas or dec nop sub or or sbb push pop out inc aam mov dec loopne or mov test pop add jle xchg dec imul cmp lock int ds pusha loope or ret xor fisttp add add or and mov andb inc cmp insl jmp mov sarb sbb push add out inc push pop les adc push pop jns test sbb decb or ja jp in int3 fcmovne pop push sub jne xchg arpl repnz pop insl les bound movsl mov dec cmp es daa rorb inc je dec push out xor sbb xlat sub adc out cmpsl mov lods int shll bound mov sbb push ret inc gs xchg xlat es pop sbb sbb lret cmp jne xchg mov pop adc or frstor test adc call jl call mov mov inc adc inc jle mov and and sbb and iret xchg das and daa mov pushf inc sbb and push mov popl mov inc dec adc data16 lea adc xor (bad) or seto fldl nop inc mov iret aaa popf aam setb add cmp pop cmpb (bad) (bad) xor sarb jl sti add add mov ss sbb pusha dec pop push or call sub dec jecxz add stc pop xlat pop sti sbb cs loope pop cli lea cmp jne ljmp lret push pop push pop adc sub xchg ret movl adc movl rclb or in push xchg push lea jp (bad) adc adc sbb sbb adc add clc jne xor (bad) xchg jg fsubl mov call mov cmpsl hlt jle mov cld sbb mov or fwait and xor adc jge nop or add movsb mov fcomp cmp cmp imul loopne jmp xor decl and pop push dec mov and sbb cmp push (bad) in ret pop xor popf (bad) cld ja mov xlat hlt cld decb sbb or in call sub in mov sub lret adc lds cmp mov or (bad) icebp movhps mov inc out push pop mov xor sub pop lret jmp add inc add add into jmp xor nop push sbb bound mov inc mov es (bad) iret or sbb dec mov pusha nop ficom aad pusha repnz mov andb adc jnp outsb pop cmpsl cmp push stos and jg xor mov xorb inc sbb add adc pop mov sub add mov aaa mov adc push fnstenv (bad) repz pop cmp mov dec mov adc push mov jmp lea xchg mov (bad) (bad) jge rolb cltd and jbe inc fisttp add aas cmp cmp idivl xor push cmp inc shr insb jo or cmp and stos adc cmp mov push mov out lahf incb sbb hlt inc pop mov adc push push push cmp inc cmp xor mov or hlt jbe pop lods mov pop push push int3 push jle push pushf push dec mov push push mov addr16 out pushf add loopne lea push movsb add cld push test mov mov outsl cld push jo jl push push out rcpps xchg push sbbl mov push jge lret push js and nop pop cwtl arpl pusha arpl iret cld pop orl xor dec outsb mov imul xlat inc push mov fcmovbe call loopne leave popa dec (bad) stc pop imul and lret dec mov lock and in sub ret sarb clc sbb pop and js pop inc adc and out int3 xchg sbb movsb mov mov cmp cmp cmp cmp cmp cmp je cmp cmp jbe js cmp cmp jp jl cmp cmp jle pusha popa cmp cmp bound cmp cmp addr16 cmp cmp insb insl cmp cmp outsb outsl push push cmp cmp push push push push cmp cmp push push pop pop cmp cmp pop pop pop pop cmp cmp pop pop inc inc cmp cmp inc inc inc inc cmp cmp inc inc dec dec cmp cmp dec dec dec dec cmp cmp dec dec xor cmp cmp xor xor cmp cmp ss cmp sbb cmp cmp in xchg cmpsl sub or mov ss outsl pop sbbl mov or popa add movsb (bad) mulb test shrl ds jo dec mov (bad) sbb addl or pusha loop push imul iret sub or mov adc aam js in out fwait jae jo or add out adc nop sbbb or adc or xor push je insb leave ss sbb jae enter je andb arpl adc mov add outsb gs into imul xor mov (bad) mov sarl insl or add mov push outsb int or mov imulb pop jo outsl sbb push inc popa jae add sbb mov sbb or push inc xchg or fwait (bad) adc iret or movntq cmc in push push cmpsb std fidiv into insl dec outsl jo je push inc and out jns sbb mov out jb gs and add sbb fldl sbb xor or adc rol loopne or adc outsb lcall jb fiaddl iret xor pop and bound insb in ret push add dec jl jp in fistl or push inc arpl nop iret cmp inc inc xor pop inc xchg out pop outsl jb jae es mov in ret stos pop clc test push sbb add aas add or sarb pop sub mov orl xor push sbb sbb iret xchg mov and mov (bad) xchg out cmpsl inc xchg insl fidivrl rolb lahf and out and stos cltd ret or push sarb (bad) and lret add icebp iret pop adc dec sub and cmpsb lock sub dec cmpsl (bad) mov inc push add jmp insb ret ss dec insb je aas push push dec gs enter insb les lahf sub mov mov int divl sub add push adc mov dec pop add sbb push outsl mov adc sbb push outsl leave stos sub push add repnz ja lahf pop sbb lds pusha pop dec adc jo sarb scas or (bad) lock leave cmp add add or push cmp (bad) sarl test aad lsl push inc je pop insb adc lcall dec daa jns lock lock sbb pop aaa xchg add sbb stc jo add add xchg dec cs leave dec add in xor je and scas and mov pop daa insb lret and in test push test testb jae pop sbb mov movsl push scas xchg pop iret imul and pop aas push int3 mov push js or or pusha pop repnz add loope push push iret imul into outsl fcoml fcomps pushf push xchg ret sbb or daa (bad) (bad) fmul repz fildll rcrb lret mov es inc shrb mov add sbb out dec cmp add push sub cmp sbb outsl push cmpb out in out div jnp pop mov push pxor pop lods je mov lods insl daa pop adc or shlb (bad) popw and test push mov ret insb scas pop daa js bnd cmp (bad) push pop mov gs insl popa addr16 int3 mov (bad) je and xchg in push or nop ret fimull mov pop dec pop cmp pushf cmp cmp xor notl fcoml cli inc (bad) cld jle (bad) std pop mov popf dec adc into add or rorb inc dec fldt push clc push sbb dec faddl push mov imul push shrb mov les push pop inc pop addl xor stos mov mov adc (bad) imulb sbb (bad) mov dec arpl mov pop mov xchg rcrl scas xlat sub inc and es clc push xlat idivl nop adc cwtl test pop rorl ret cmp xchg xchg les xor in push lock or dec pop sbb xchg cmp add push pushf ret nop pop mov push loopne pusha ds shl add dec adc dec popa outsb clc incl les ret rol xor loopne out cmp mul mov daa adc add adc loopne jg inc pop and stos adcb push rclb movsb insb jns xchg add lcall add or xlat and test jmp jp fcomp mov int3 lods shl std sbb inc cmp xor mov test jbe cmp inc cmp push push xchg sub movsl mov push push mov adc jmp xor loope mov in loop fmuls (bad) dec xor insl roll rdmsr lds addr16 adc lock jo push test dec popa fnstenv flds push (bad) loopne shrl negl push mov mov rorb add add add jbe jnp fidiv clc xchg and ret (bad) je or xlat sub cmp add mov outsl jmp sub inc push jle and imul insl sub nop cmp call inc sbb repz adc sub ret jge pop add ret loopne fisubl add loopne jns add stc sub mov or shrb xor jge mov push jg mov mov fcoml adc add push cmpsl or add in or pop add das movsl jmp ja arpl pop or jb mov imul outsb pop jg dec (bad) dec insb cld pop push xchg jbe or jns push adc xchg and popa insb pop ss fiaddl push imul mov cmpsb xchg gs leave (bad) pop (bad) outsl ja nop pushl lahf jne or arpl imul jno popa mov sysret or gs (bad) jns add xlat ds lods ja insl inc dec mov data16 push and addr16 das cltd sbb inc popa cmp pop jo push sub insb test imul rorl jb das jp out adc outsb inc push xchg dec nop flds or adc or jl (bad) in bound je or fisubrl push sti daa sub xchg pop xchg fs lahf sbb int3 xchg (bad) or or xchg push subl pop jg pop and mov sbb fcomip aaa adc shlb pop adc scas pop or outsw inc push or jne push mov adc mov pusha enter das andl aas xlat jno (bad) push arpl add mov inc inc imul das jbe sub cmp xchg int3 daa or ret xchg or sahf jge incl push xor push push inc ret push mov dec hlt (bad) adc pop dec cmpsb adc and ret (bad) add iret sub mov or pusha sbbl testl dec inc push push inc push add rcr jg inc inc inc push dec push xor mov and inc dec dec arpl inc inc push or dec inc push dec dec push mov jnp inc inc push xchg inc dec dec and stc ret (bad) popa out inc inc xor xor (bad) ficoml inc inc dec inc xor xchg inc push inc inc dec notl inc inc rcll dec mov mov (bad) mov push (bad) das sbb mov data16 inc das mov push xor push aaa jg xchg adc push push push dec push (bad) nop cmpsl xchg dec inc dec push mov fidivrl nopl push decl push mov mov dec add daa ss push into push in add sbb gs orb andb outsb sbb jne add xchg push or pop mov lea cmp sbb and divl cmp mov sbb push dec sbb mov test add pop xor out or jmp test xor (bad) imul dec shlb pushf mov fadd xor es mov and mov outsl mov add lea movsl daa and sub lock push fisub xchg pop ds data16 push adc jmp lods or test shrb in ret das out rorb inc xor sbb xabort mov and sbb mov sarl call lret sub lods mov or cmp xor inc (bad) jo cli das cwtl add pop pop shll or bound push cmp cmpsb xchg cld (bad) xchg add in or mov ret inc cmpsl mov or xchg out sub loopne add dec imul pop cli rolb enter and cwtl movl shr adc lret in and mov sbb or xlat lea test ret mov mov cmp (bad) insb je mov imul jmp jo xor push jl pop movb push fcomp add adc mov jmp sub je sbb dec or cwtl or jno into popa insb xor inc lret or gs inc in out jns addl dec and xchg mov popa xlat repz loop cli es lods mov dec push scas dec inc mov xor add das or and call (bad) mov ret (bad) aam stos and mov (bad) out push lock pusha fwait nop push add sub inc push insb insb xchg (bad) pushf mov mov push push xor fmull xchg neg scas fwait insl jp xor push das fdivp ficoml jp cmp cmpl ja pop movb sub or adc scas outsb inc sbb jnp fisubrl sti xchg pop mov jo test push jb or imul dec fadd inc mov sbb sbb or (bad) jns xchg pushf lock sub and jb rol fdivrl cmp mov aaa adc or (bad) movsl add inc call or inc (bad) gs faddl movb pop repnz lock mov mov outsl in push pusha cmp mov nop (bad) jne int3 mov sbb mov inc mov stos movsb push (bad) mov xor enter sahf pop jb sub rorb pop push cmp push inc cs mov sbb dec mov lock or jl (bad) mov sbb (bad) mov xchg pop or sub cwtl loopne mov mov js or sbbl push push nop loopne xchg enter mov leave jp inc insb repnz ret pop aas and add and loopne leave mov loope push out mov mov jns inc ds jae mov add mov or ja sbb adc (bad) dec sbb pop lret mov inc push push mov and adc das cmp dec das mov push test sub add fstpl push or adc lock je sbb xchg out push adc fwait movsl mov popa gs lock enter loopne and inc push aas sbb sbb mov or adc loop jno (bad) nop cmpsl (bad) insb mov pop inc cmp testb cmp pop jb jle movl xchg outsl xorl mov adc jb and ds adc movl js push inc ret sub dec xor xor fs sarl in rcrb adc test mov (bad) mov rclb or dec int3 lcall sbb sbb push or or or sub or or int int xor push or push mov inc adcb push fdivrl add rorb scas in cmpsb pusha sbb (bad) inc push add test ja clc (bad) aas mov iret insb movsb (bad) mov mov test inc inc popf dec les fidivl loopne iret loope ret add xor push sub adcl rcrl pop xor mov in sub aam insb test imul mov leave mov test insl push xor cmpsb mov imul push or sbb lea and jae cmp lock popf movsb mov push mov cmpsl dec jl lret nop or popf cmp iret mov dec pop jbe pusha jl pusha sub push inc test movsl push add adc mov lods rcl test or pop mov repnz pop inc daa rorb iret mov add jnp jle dec add xchg pop mov and iret rolb cmp pop add pop dec inc rolb or xor lcall pop adc xchg push mov sbb bound les inc pop jno inc das pushf adc jl rcl test iret popa push cld push and inc pop inc xor rolb cmpsl xor mov imul das movl sar jg lods dec mov and mov cmp je mov (bad) push push mov mov mov jne add mov rcll pop push and adc pushf aas es cmpl inc add arpl (bad) and int3 sub icebp orb pusha lea sub clc push mov or scas adc not and mov je es popa adc roll cmp push lods pop cli sbb notb mov add mov add fiaddl cs or dec and xor call push jae add sub or mov sahf pop add jl adc adc sbb pop mov and in jnp mov test and push movsl imul dec lods psrld mov adc in ds jno lods idivb aas ss cmp das (bad) (bad) or mov (bad) std ret nop mov and stc pop roll incb fs inc or or sbb popf test add inc push jne push dec lahf and sub das lea popa fwait jp mov ret sub ljmp in popa pusha cmpsb adc int3 and repz jge fnstenv jmp mov stc push push adc in jge add aad push push xchg clc add in test xor arpl sub sti in test xchg fldcw sti and test mov aas ja dec mov inc movsl push mov mov (bad) in pop cmp sbb in cmpsl sub es jle mov mov push out pop push faddl xlat fmuls push xchg ret (bad) mov sbb inc push xchg cmp add cmp movsb (bad) ljmp inc add or fs shl pop inc jl fmuls xor not and pop pop sub clc add (bad) ss pusha into pop xchg xchg sub fisubl test and ficompl adc jne out add and js rolb mov out jo sbb (bad) mov stos roll sbb cmpsb loopne or sub jmp push and fsubs inc xor lahf pushf dec cmp add adc cmp (bad) loopne push jge daa mov divb push test je and fsubl push sub mov ss jmp jns add pop ret pop push dec add xchg inc inc pop ret stc fsubrl add cmc add in stos test js mul push xor push movsl (bad) popl jmp add (bad) xor adc mov xchg xor dec or pop push lds bsr mov or sbb sbb (bad) jg push or mov push lods aaa in outsl add mov mov or add je push add dec cmpsb faddp inc add ret sub cmp aas dec test inc push es (bad) dec sahf lcall mov pop pop xor or inc dec jne in fiadd mov sub adc adc push sbb test fimull and sub or inc outsl cmp add mov jo sub dec movsb dec js and and aaa (bad) mov insb mov enter push dec jns jmp std fistpl (bad) mov sub shl mov mov aam jmp jmp (bad) mov movw cli ss xor cld push mov mov repz outsb rclb out add pop rclb jl outsl cmpsb add or sbb mov outsb rolb jne ds add addr16 xchg mov and test jg pop push arpl imul xchg mov (bad) push addr16 data16 jns add push (bad) pop ret addl mov mov sahf mov (bad) mov push xchg push inc mov sub xchg clc sub aad sbb sub inc or and or xchg lret icebp clc ret mov sbb addl push dec or sub pop add push push dec clc daa mov pusha mov cmp jne and add es mov mov outsb lret rorb mov out movups lcall push xchg cmpl add gs imul pop push in lahf clc push mov stc je push push push aam mov and rolb mov sub pop (bad) or pop dec pop (bad) (bad) in shrl pop adc loope push shll dec and lds and sub das js ret push andl push jns or mov jb jno shrb scas adc adcl adc enter movsb fs dec sbb ror (bad) faddl lock add inc sub lret add out push add shll pushf stos (bad) cmc inc rcl movl repnz pop and sbb and insb pop cld push repnz pop enter mov push inc sub add fst in dec cmp mov psubsb addb rolb daa fcmove adc pop add (bad) mov movzbl sbb lock cmp sarb mov adc xor std (bad) cmp jg test jle cmp jl mov cmc in xchg cmp jg adc pop clc jle and pop in xlat movsb fwait ret or push (bad) stc jno push pop imul dec stos mov gs add push pushf push pop push mov loop mov push ret and push pop fcomp sub pop xor arpl imul push lret jle jbe rorl (bad) in or push pop xor stc or sub xchg insb sub adc mov xchg jne and int3 xchg es add sbb ds ret push jg or jl cltd xchg lea mov jo mov jp lahf popa xchg inc dec jne cmp fs adc jno mov xor ss sbb aas js push repnz add sub test adc ret enter adc dec (bad) (bad) dec push xor imul xchg mov mov je fcmovbe jbe nop pop cwtl dec mov mov mov push mov into adc sbb add push call in add cmp add push mov out mov mov mov arpl pushf aas pushf mov push mov sbb or je dec loope cmp shrb pop repnz ror mov dec mov imul ljmp pusha lock dec lods sbb pop scas minps sbb push js into mov ljmp sbb adc lea or cmp mov movl adc mov xor cmovs push jle lock jg jb jmp sub mov out mov push mov jmp adc mov adc insb mov (bad) push xor inc and movsl dec cmp sahf add fs sub sub (bad) icebp inc mov sub mov push xchg mov pop rcrb pushf roll push sub imul inc (bad) add or les adc mov adcb pusha ljmp ss aad or out fldl (bad) xor hlt cmp fildll or enter jecxz repnz push push popf clc pop push scas push addr16 inc (bad) mov push mov fcompl sbb and clc pop enter and pop dec loope xchg out mov js mov call shll ret lods lret (bad) pop cld xor (bad) out popf xor adc mov in pop push sbb loope enter dec (bad) mov push in hlt int3 inc mov or loopne cmpl daa push inc cmp call movsb cmp hlt loopne (bad) cmp lea loope (bad) xor mov or add mov scas or lock repz and add or outsl scas and xor mov mov addl lods or lods data16 fcomps pop push insb mov lods cmpsl mov mov push outsb jle mov jne js add test sbb in in lret pop out inc in mov lret fcoml movsb call dec add arpl adc dec addl out xlat addl movb data16 mov aaa and jne test and mov xor int sbb adc fwait inc dec out sub test rcrl xor nop out mov push lods xor inc push or jns ljmp call push or out test mov add adc or ja cmp dec jb jo je sub pop add imul and sub out clc dec sub jnp inc dec hlt (bad) fbld fcompl (bad) dec fstps mov jbe mov push cmp cmp push cmp push jo mov inc or add out xor clc mov pop mov ret jg adc enter pop call and inc mov push test sbb push adc mov mov leave out cmpsl pop ret pop and push mov enter push and fs rorb pop int out pop add fdivr popf in xor jmp in push mov mov and (bad) dec sub xor mov add and push xlat mov nop movsb nop inc test (bad) mov clc fcompl cli bound (bad) repz mov cmp xor xor or ja in (bad) xor mov or decl pushl dec pop xor pushf stc sbb push mov in sbb imul sub ljmp pop adc lea nop pop add cmp fidivl push cwtl test lds ja mov push out inc bnd movl int mov mov mov cmpb jmp push adc sbb sti punpckhdq xor mov pushf pop sbb xchg mov jecxz fmulp dec pop pop notl pop rcrb nop fist mov pop xor mov out pushf adc cld imul pushf xchg add add push inc cmpsl repnz jmp lahf (bad) fcmovbe mov dec push pop testl shl push pop pusha push loope repnz adc or sbbb rorb pop iret sub insl xor dec jne popa xor rcrb mov or push imul (bad) dec ds lds das xchg jge add cmpsl cmp je lcall into fcmovne orb (bad) push add mov adc adc rcrb mov xchg and pushf stc jp mov js mov add adc stos jmp xor mov test xchg dec pop inc push sub jl clc andl sbbl add (bad) cmp es sbb pop movl xor loopne dec pop popf mov sti and cmp jne add or pusha lret stos out push and ror lock (bad) (bad) repz adc and es and inc jne sub xchg add sbb add fs js dec mov int mov add fidivl ljmp hlt pushf adc fdivr sub mov (bad) loopne fisttpll inc adc add aad or out or sbb ljmp sub dec inc mov nop sbb faddl pushf icebp in inc pusha pop cwtl add push pop mov add sub and xchg pop call mov jns ret push in pop mov jo mov test sbb cmp or or ss fistpl int3 sub push lods jge push or arpl call push decb loopne insw mov cmpsl hlt cmp rol cld pusha stos aad fxch pop nop in nop add je scas outsb push add rorb cmp and or idivb insl out sbb inc mov je ja cmp je mov pop daa sub roll (bad) imul inc add or push mov sbb in jne or mov pusha inc push mov clc add cmp cmp insl xchg xorb jbe xchg test adc loop xchg in or shrb sub xchg add imul xor hlt sbb dec xor mov sbb test pop test imul or rorl xchg sub (bad) out iret sbb dec fs dec add adc sub push sub rcll dec insb fcmovb mov xchg fsub aad pop adc mov jnp (bad) (bad) sub jmp push add and dec dec repnz aaa adc das jns loopne lock sbb mov adc push ja xor loopne or mov dec and xor or add stc push inc and out lret in repz adc arpl pop fisubrl jmp cmp (bad) (bad) je adc sbb push sbb cmpsb bound dec pop push cltd (bad) leave inc clc xchg and add push sbb xor push sahf or ret jle push mov xor sbb mov clc mov or jae or mov and sub adc mov pop pop pop pop push (bad) sarb xor ret arpl (bad) jno mov mov loopne js es fildll dec scas mov andl mov dec nop out leave hlt mov (bad) or sub inc out add cwtl mov test loope xor jbe and call xchg inc (bad) loop mov rcl frstors adc and inc testl pushf mov div (bad) jo or in or push (bad) popa push and or cmpsl adc inc fs fldt add jo inc fisubl icebp nop xchg ss xorb mov cmp inc push or insl cwtl out insb inc sub aam mov xor jg sub fsubp mov mov les sbb jmp sbb popa insb fistl sub mov out mov dec popa imul xor add or push fld and push and lock xlat jnp test push or cmpsl inc mov and pop adc and xor movsb push xchg push mov loope cwtl or (bad) aad lcall xor negl in movsb cmp call insl enter movl inc sbb daa cmpxchg shlb or lods fwait (bad) dec dec in inc ja mov or mov pop movb leave test pushf rolb inc inc cmp add (bad) mov mov sub lea xor adc rorl scas push inc (bad) mov test addb cmpsb ret mov adc or addl ficompl inc adc and (bad) sbb xlat sbb jne ret and push sbb mov sub (bad) movzwl push dec sub scas sarl jmp and (bad) xlat jle mov add mov push jmp rsqrtps adc push outsl adc add cwtl loopne enter (bad) pop leave cmp add add inc out (bad) xor hlt in les leave loope or and faddl call lods sub dec inc or inc leave xor push popa xlat inc cmp inc mov pop mov dec lds out mov (bad) sbb push lods mov icebp adc das adc mov jmp push mov or out loopne sbb push testl pop sub add test jo jnp xorb push pusha enter sbb call js inc and sahf xchg sbb xor add sub loope mov sbb add icebp arpl jnp add clc outsb cmc and sbb daa mov push jle js mov (bad) xchg mov scas adc xor inc xor js jbe imul push fadd rorl mov mov sarl push or adc pop sbb dec loope popl jmp inc sub sbb (bad) mov cmp jmp lahf or sbb mov pop out jne push (bad) add (bad) jo mov cmp adc sub ja sub jecxz pop inc sbb sub add ret mov (bad) loop jb gs xor xlat cmp adc fs push in sbb inc jp test add xchg mov or mov into data16 fs adc das insb scas and ja jae repnz mov stos xor ret js inc pop aaa iret mov imul push push lock daa mov pop call cmp xchg dec sbb aaa sub into fcompl push fnstsw jmp adc rorb or dec mov dec or xor cmp mov outsb jno adc push dec enter push sbb inc adc or fdivr dec movb push xor pop add add clc push cmpb out add sbb xchg adc mov xchg mov and cmp fmuls test adc jno jo dec lret mov inc mov sub jne push push leave adc and push sub (bad) add dec ss ljmp mov inc inc lea adc movb add push popa mov fs xor push mov mov mov adc mov mov mov cmp cmp test inc inc movb pop incb xchg (bad) jne inc insb (bad) jecxz outsl aas (bad) mov jmp enter xchg dec dec push fistpll pop and add outsl xchg inc js inc into ds inc mov lea (bad) mov test cmp adc repz out or dec lret adc cmpsl inc adc insb adc stos fnop cltd dec rcll adc adc mov cwtl lea push in adc jo sbb ja aaa jle jno jns and (bad) xor jmp mov push push lds or loopne adc fs inc loopne add sbb ffreep fild (bad) pop iret or (bad) or add inc (bad) or inc pop sbb insl subl lds pop les mov pop cmp cs dec imul or mov mov or repz pushf ret jmp add xchg sub push or mov xor xchg sbb sub or andb push clc push aam scas inc aam inc dec enter sbb xchg sub dec push xchg adc out fcoml rcr and (bad) push (bad) mov and neg into inc cmp (bad) test or and jp add inc in push sbbb or jne push xchg subl cmp mov xchg inc adc inc fldcw rorl mov or aam push push add adc sub xor ret sub (bad) loope mov aas jbe call or enter leave inc pop hlt in xchg push hlt bound mov add sbb rcll test insb add ret pop lods mov adc lahf mov dec in sub sbb push aaa jbe mov es cmp pop arpl in std iret inc loop das mov loope jno xor incl popa faddl cmc out xchg (bad) mov or pop mov jns dec and lcall add jo cmp jo pusha inc in pusha cwtl insb sarb push leave and cmp mov add pop loop out or mov or jbe adc adc dec and push xor fiaddl inc repz movsl dec add xchg adc add movsl mov add enter xor dec cmp sub insl lock in jb fwait mov (bad) aam fcomps inc loope mov mov out mov inc mov push mov fisttp sbb scas pop add and push or jbe push sbb xor fs cmpsb iret test sub jle movsl mov add loope mov or lods or xlat adc mov jmp sbb push loope fmull inc negb or mov dec mov add (bad) lock xchg lahf push lock dec cmp mov test orl or rol xchg jmp pusha ja stc lock push jo test and loopne cmp mov cmp fdiv cltd icebp adc into sbb xchg inc cmp loop push cwtl sbb outsl adc adc push jo xchg int or mov fs fs mov mov sarl les jmp into or fdivs (bad) nop lea or dec and jmp jbe add std popa inc adc add (bad) pop out lea mov test inc mov fiaddl and and repnz je jmp pop rorb mov and jno adc xchg adc mov fldcw lea lods push pop or push add aad sbb dec inc rol pop (bad) (bad) loope push test or adc ljmp sbb (bad) xlat adc sub inc js (bad) lcall pop jnp arpl rorl push add jge and maxps inc mov lret xchg aad pop in or push nop cmp cmp lea push xlat xchg movb rcll sbb cld push mov cld adc add mov adc and in popa add js lds rorb loopne cmp push jp pop insb fbld movsl jmp outsb sub leave pusha add lods insl loopne sbb push jl and push jge (bad) jmp sahf and or cmp ja jne jno inc mov adc lcall jg push inc in (bad) push cs sub iret insl xor sub cmp push aam ds test mov or ss inc sbb push arpl cmp adc push cmp je lods sub push adc inc or addl cltd loope xor sbb adc iret inc push in xchg repnz je and xchg jp aaa push and fnstenv jbe rclb push add sbb adc and es shr pop inc push loope jle test add jmp dec nop mulb sub sub (bad) pop jns bound mov test pop sub stos fiaddl push fs rolb imul jg test sub inc jp mov push xchg mov add jmp scas push iret mov xlat mov fxch (bad) add mov psllw pop cmp mov inc or in adc push (bad) or arpl xor cmpsl rol loopne xchg pop scas and sub movb sbb add cmc prefetch iret fwait or xor mov or in mov das lret (bad) mov inc or and pushf jmp dec xchg and rolb in test dec test das adc outsb add sub popa mov out stos inc sbb push mov ja test xchg rcrb inc adc jb arpl add or fiadd jo test inc pop sbb popa pop outsl sub clc add call mov ljmp mov (bad) xor dec xchg fstps into xor fwait scas add pop movsb mov iret rclb or xchg push pop test or and adc push cmp inc push inc idivb push imulb mov pop (bad) flds insb sub je and push (bad) and pop mov cmp jecxz dec sub rcrb mov xor movsl jnp ret inc or (bad) stos pop sbb sbb lret xchg movsb or pop and adc adc loope or jo or fwait int3 adc cmp push or push and shlb add fdivrs adc dec pop mov ret mov adc aaa sub shrl pop lds or pop xorb aas daa outsb movsl rolb push or hlt insl insl lods pop pop in jbe mov shrb mov icebp jae push dec insb cmpxchg enter (bad) (bad) popf (bad) mov mov sbb mov test mov push inc out sub push mov pushf lret mull mov xchg mov add adc sub jne mov imul nop and and push nop or int loopne (bad) insb (bad) jb (bad) outsl adcl bound add and xchg dec mov hlt (bad) xor pop test adc sub inc add add scas jne add sbb adc popf adc loopne cmp jne push stos loop mov xchg adc adc and pop pusha mov push add mov test mov jo addr16 enter or lock movsl add sub adc mov out pop mov or sbb or cmp insl or mov mov rorb (bad) lds and outsl xchg or add push cmovnp sbb inc push sbb cli addr16 inc cmp jno in push dec sub mov mov or out or jo ret cwtl (bad) nop/reserved dec loope pop pop pop outsb push and nop hlt xlat std (bad) mov sbbb cvtps2pi nop pop hlt inc fadd add cld add aaa jle jne mov xchg je cmp fiadd icebp popa cmp lar xor mov insb sarb es sbb jne or mov (bad) ds dec push mov enter fcoms fsub add jo test xor or mov cmp mov rcrl and movsl adcl adc mov adc mov in adc add add jg hlt fisttpll daa mov mov sub movsb sbb adc adc adc fmull and loope scas add pop pop mov (bad) and mov in or sub in rcrb jl push cmp jg pusha jmp js and cmovno inc in dec sbb cmp add sub ds inc ds jno fcompl inc inc sub movsl or or inc imul iret adc pop in sub fs test xchg fsubrl add push or xor fs dec cs add jo jl mov iret enter addl push lahf insb push orl lock ja adc adc or push arpl xchg sbb sbb cmc sub lret loopne out imul wbinvd or roll arpl mov faddl scas jl push xchg aas lock or or imul daa mov or or cmc loope rcrb jbe mov stc les add lret lock cmp jnp sub mov and je push cmp add iret mov outsl insl xor fdivrl iret dec outsb imul mov enter andl mov mov push call cmp js fcomps fbstp and sbb adc xchg xchg xchg adc push fisttpl push xor (bad) aaa add bswap leave leave enter hlt lock leave leave leave in call leave leave fnop aam cltd in lret int3 pop mov hlt test leave add rolb cmpsl fcoms fwait mov dec xor cmpb and mov dec sahf xor sub mov or push cwtl mov ret adc mov daa movsb mov cmp imul or out movb (bad) into scas xor or test iret inc gs xchg jb inc pop mov sub mov or mov pop cmp jmp pop cli mov pop push mov ljmp and jae inc ret cmp or ret cmp sbb sbb fwait push pop adc and orl (bad) push jge movsl repnz nopl ja mov or push sbb add xor subl cmp and or push popa cmp jle push mov mov pop jb add sub mov sub or aam pop and push jle sub mov loopne xor daa jmp dec mov mov sbb shr sub mov inc push or sbb or lock nop adc jb pop shll adc fild (bad) push jns rol sub xchg xor xor mov sub (bad) loope mov lock ret xor inc or sub imul ret or mov lock cmp sub and fwait xchg add dec xor outsb cmp aad fs jb repz adc xor adc dec lods or insl call mov push lea decb lock inc and ds jb push str in inc or daa push (bad) fisttp push dec inc pop cmpsl push sub sub adc insb pusha push add repnz add leave dec push sbb or push stc in scas aam jne das cs movsb push sbb pop mov lret pop fsubr fadds dec or test mov cmc movsl mov jp adc mov push sbb int3 mov fdiv fsubr mov push insb pop ud2 out negb and mov add sub test xchg mov xor add or rcll sub ja cmp into mov inc xlat inc outsb jne mov insb popa jns jae push push add dec in adc and or iret in jl and int3 adc je ds and je xchg dec shrl pop mov push push inc push adc decb nop xor or and adc push mov inc cmp cs dec jg ret inc push cmp dec prefetchw xchg mov inc outsl sbb pop xchg cld mov pop rcll mov sub out lods cmp inc adc xchg outsb sets inc negl fildll push int3 addr16 dec imul imul cltd fbld daa dec cmp rclb dec and cmpsb jne fs test data16 sbb movb inc imul jnp daa add test cmp or imul shrb es sbb and pop adc and cs push mov les adc push mov push dec fistl push xor incl and movsl xchg adc adc jge and aam loopne dec mov adc shll daa push cmp movsl lods scas push mov jl out repz pop sub popf out fmulp push rcr jecxz mov ja pop out aaa push mov aaa sub ficom dec push add add aaa repz add pop mov cltd (bad) or and push xchg arpl xlat fsts daa mov (bad) aas push adc add cmpl push push inc mov sbb daa and adc test add inc popa stos or outsb sbb popf nop nop jbe mov pop clc testb (bad) mov clc mov in movsb sahf mov shlb sbb ja adc cmp das push sbb or sub and nop adc pop movl test adc enter sub sub mov sbb sbb dec sbb cmp into in addl inc jns fsts mov add (bad) adc xchg dec adc hlt fsubs enter and inc jno push rcll in push mov fbld (bad) mov call mov xchg adc or int3 mov pop rcl jbe push fwait mov xchg (bad) adc add mov sbb popa pusha outsl jle (bad) xchg sub pop cmpsl push test xlat lock psllw into cs sub jne mov sbb loopne es push mov add dec data16 mov and cmp mov pop movsb cmp mov push ret test pop movsb fs sbb loope into fnstcw hlt jne fwait mov cs push sbb loopne and lea sbb arpl in push adc daa xchg or push pushf sbb adc jmp mov mov dec fstl aad sbb mov pop pop xor arpl shrl fildl out pop loopne inc js sbb aas inc bound and xor jmp daa pusha mov and (bad) inc enter and nop enter cmp adc pop popa popa lock clc sub mov dec das adc mov shrb rcrb push jmp jne add or andl pop xchg js pusha mov xchg xor mov pop addb cmp insb inc pop fsubr sub movsb test or push inc test mov lods jmp sbb bound add mov pop insl jle inc jo or cmp enter and or fcompl gs jmp mov pushf in sbb out mov (bad) fadd cmp test std inc dec lea gs sbb leave sbb outsl lock cmp mov fnop mov jae jmp mov xor cs repz shl aas es sub daa call call mov xor pop dec mov pop test arpl sbb mov out mov sbb inc test fwait cmpsb gs and je cld xor (bad) jb in jmp cmp and call add push cld mov mov orl jnp jne lcall xor sub add out xor inc xchg sbb cmp xlat imul adc pop xchg inc xchg out leave test lock adc xor push stos and jns xor clc xchg js push push sarl push add sbb nop rol add pop inc mov aas test push les add sbb or cmpsb jecxz movsl add pop inc xchg and dec je or sbb jg xor or jmp adc lock sbb jmp push inc sub fdivs repnz dec xchg and pop push xor aas rclb xor adc sbb pop and lcall jb in push imul adc pop jb adc sbb mov enter inc arpl movsb xchg rolb aaa mov in iret inc cmp dec fcomps pop cmp lods hlt and subl fmull xlat push jbe inc outsl mov ret mov or pop jo ret sbb arpl adc xor mov je push pop sbb push fwait dec leave xor mov push or mov cltd movsb xor insb loopne or dec jo shlb pop jo dec cmc notb clc add in mov mov nop lret dec cwtl addr16 sub cmp inc dec gs add push push cmp jae add push cmp dec nop add pusha dec cmp sbb xchg mov lea inc daa push sub pop enter lods incl outsb or or mov sti fmuls gs push int push push subl loopne pop jnp mov push shrl daa jg push jbe fist xchg sbb fdivrl push daa sub inc lret ds sahf mov and loope out jge nop mov push and pop lock gs lods push inc adc imul adc sbb push sbb dec or cmpsl dec xor adc dec cmp sbb and fsubs push cmpl jl cmp and dec jae push stc enter xor jle decl xchg pop push paddusb mov mov stc pushf add or sbb mov xor xor xor xor xor xor xor int3 rcl xor xor fcomp loopne xor xor call cmp xor cld add add xor xor or adc xor xor sbb and xor xor sub xor mov push sub or je (bad) cmp dec out mov rorb pop arpl jge sub sbb leave add loope fldcw xchg mov ret lret inc je xor add nop inc mov mov push adcb sub push sbb gs movsb loopne xchg xchg add test sbb mov push movsb fs je sbb xchg gs sub int3 mov dec mov enter xchg fcomp fsubr lret push loopne in movsb jb or and nop lret xor inc sub push sbb pop clc jo dec gs cld orb fidiv nop add xchg add les movsb xor adc adc lret loopne lock cs sbb inc and sbb sub add sub test mov mov xlat xchg inc pushl sbb push inc std lret adc jne je gs gs sub sub imul insb outsl jae and sbb mov (bad) bound add mov push popa jb or mov xchg add test je jne dec push inc xchg lock gs addr16 or mov jno jae adc bound cmp sbb in insb jns jp jae sbb xor pop in dec push pop pop pop pop (bad) sub and pop xorl push ficom xchg mov popa push adc or ss mov pop mov pop dec xor xchg mulb (bad) (bad) xchg iret add inc cmp pusha jns xor add add sub iret ret or rcr mov in fildl daa adc dec fstpl in pop insl pop cmp pop pop ret addl nop (bad) ja and push jg pop and loope je addr16 jne xchg fidivrl pop fs mov outsb mov imul xchg sbb sbb sub inc outsl arpl (bad) mov pop push mov inc hlt xchg pop outsl xchg ret pop repz fiadd sub test sub insl add dec cmpsl hlt sub (bad) fcomps jne xchg push add mov lods nop sbb daa aad mov out das jbe subl cmpsb add notl xchg (bad) sub mov cmp jl imul jne ljmp and nop push mov fs cs push in dec jb mov pop inc xchg andb xchg add in add pop lea in push xchg pusha lds sbb in jo xchg sub add inc push add push xchg and inc insb pushf cs mov pop fdivl cld push pop cmpl ja dec inc inc pop bound gs aaa cld dec pusha jl insl pop and sahf outsb jo fcmovu add push incb (bad) fnstsw nop jb ljmp inc push pop cmovle xor imul loope lods andl cltd sbb push xor mov adc call jne incl leave repnz fadds push pop cmp cmp or aaa popf lods jl dec dec cmpsl jae insl cmpb push dec push mov push lods push inc xchg dec (bad) loopne rcrb inc loope cmpsb dec addr16 fdecstp ja (bad) mov inc inc outsb or inc mov inc dec in adc xor mov mov inc popa rcrb xchg addr16 mov mov or push jo ja je or xchg (bad) and imul out arpl arpl adc insb mov xor sbb xchg sub scas mov or add mov mov pop dec inc add inc push lods out push mov push outsl aaa jb test inc push in int3 in (bad) in incl fldt push or das pop and orl mov sub sbb (bad) sti cmpb jno xchg insb pop shlb pop enter das cmpsl pop enter jo lea ja inc nop pop push insb imul aad mov add call mov insb or mov rol insb push jl push ret pop inc dec rolb ds mov add sub and mov ret push inc or inc cmp and clc pop pusha loope stos rolb inc addr16 dec in test cmp icebp mov push mov or cmp mov cmp ja and jb mov add inc xor push push inc inc es pop (bad) adc mov xlat mov inc inc xor push push and jecxz inc inc mov popl test and push cli adc cmp js or jl mov cmp dec cmp rol adc push add dec and and pushw and inc xor sbb pop bound fwait and inc dec adc sub add loop dec sbb or inc das jecxz xor inc lea or or fwait mov inc ficoml imul pop inc xchg adc pop pop das subl inc or movsb or dec mov lock mov dec sub cmp out push fwait push add dec xor add add push call js orb leave inc int add aam iret mov cmp pop (bad) pop outsl push sbb xor inc sbb or mov sub push push in orb dec jg dec repnz fwait adcb push adc or (bad) rolb inc addr16 and push cmpb cmp dec ljmp pop jb dec inc sti mov shrb mov push out int les mov push insb (bad) jl or cmp mov push fmull int rcll adc in ds ds pop mov lods push cmp out int imul and cmp add mov dec nop push popf data16 jbe scas call mov adc imul popa fidivr inc sti nop pop pop xor jo popa fwait jbe or scas lsl (bad) dec mov or xchg push pusha inc jmp jl or or cmpl mov mov adc mov nop popf jmp iret imul lds or roll push add in (bad) sbb loopne xor inc or and jge adc es push or inc or inc jo add mov inc xchg jmp sbb dec mov dec jno dec cmp nop sub push mov cmp push ret int3 xchg sbb aaa mov add test sbb push mov cmp sbb jle sbb or inc sub sbbb pop push inc push loopne rorb clc sbb pop imul sub sbb lock mov or pop or dec push push clc scas xor scas pop movl out or lea movsb mov rcll mov push mov dec inc lea jns push sbb sbb adc or int mov push and add cltd aam fs push sbb sub pop ret mov adc lahf jbe add and nop rcrl adc lods lea add or adc jge icebp jns pop test lcall in pop adc pushf mov aas shr xor cmpsl mov adcl les xor adcl adc sub nop cmpsl pop jg xor sahf dec xchg sub or push fs push mov imul ja push pop jae dec mov xchg aad xchg lahf lcall rolb jnp stos mov or sub imul dec cmp imulb xorl jb inc jo mov pop xchg dec loope dec and mov jg loope inc es mov pop nop nop iret push mov ret push adc or lea lcall jbe ret jl fsubp fiaddl mov js inc xor das lea insl orl insb and mov or inc pop xor jno and mov cmp decb stos cmp jl cmp cmp aas test xor daa cld (bad) mov jmp test and mov test ds pop movsl push cmp inc pop popf inc adc daa push pusha shr cmp cmp jns out jp mov xchg andl push mov push push ficoml test fs pop sub add nop lahf add add or arpl add pop lcall pop push cli mov int3 jle pop dec outsb outsl ds ret (bad) mov ret pop push outsl pop or and sbb paddsb les push stos push lods mov cltd pop mov adc xor sub pop nop (bad) repz jle mov jo mov subb pusha jns mov sti push or pop push mov dec aaa jnp dec cltd loop sbb lret cmp xor addb data16 jl ficom cs inc add out in mov pop mov add loopne push jmp adc js cmpsb mov push sub cs out in push or jb push jo test cmp xchg clc adc mov xorl cmpsl push data16 xor cmpsb dec sub xorb inc add inc notl pushf adc xlat push dec cmp inc pop je (bad) jnp js inc mov sub (bad) fsubl jl insl add imul testl mov fmull lea dec xchg out xchg rcr fs pop pop aaa jl xor xor in in lcall outsb inc adc inc fnstcw xor inc notl pop pop pop mov es inc push and or inc repnz inc mov xor gs cmp cmp jl inc clc mov and xchg adcl mov pop cmp push or push mov std pushl ds imul lods data16 adc (bad) and lods outsl iret jg xor loopne pop rclb pop sahf mov sub or cmp xlat and jno push imul xchg fwait push hlt and (bad) xchg ljmp add popa ljmp lret (bad) xchg ret pop inc mov mov fs mov inc pop or pop out mov push and aas mov mov dec adc je push push jbe mov sbb scas xor adc (bad) jne inc inc movsl dec jae xchg insl test (bad) int3 mov iret pop bound pop xor or and (bad) mov cld jae clc cli dec fwait pop orl dec dec add xlat cld jo pop pusha (bad) mov fstl or fisttpll adc test test addr16 test xchg cmpsl rcr insb jo cmc pop push or outsl pop xchg ret (bad) xor call xchg pop mov je push pushf aas pusha pusha dec xor mov orl dec push push imul rcr insb bndldx push lods bound mov push pop push jmp js mov repnz inc ss add mov xor imul nop dec push push pop roll pop mov rolb imul cmp jl cmp scas push outsl jo (bad) and cwtl cltd cmpsb mov cwtl and sbb add jb cmp and sbb (bad) sahf pop mov and rcr out inc push je iret push mov fs dec and imul test xchg sbb sbb pop add and rcrb xor pop lahf rcll (bad) es jae sbb lock (bad) mov data16 mov push dec fs or iret lock movsb add adc out faddl test dec cmpsl stos push mov sbb aaa mov mov rolb mov lods adc pop adc push pop sub mov add inc add (bad) inc les in fidiv dec adc add leave lcall mov cmp pop dec push push or mov xor xor movsl dec jle inc push add jb fcoml xor pop jp cmp sahf popa add and xor sbb add stos xchg cs stos je inc stos mov sbb push bound mov call sbb jae pusha cmpb mov roll (bad) xorb inc push pop jl loope dec clc rolb inc and xchg pop enter loop cmp or or mov movsb outsl xor imull add arpl or cmp sbb lret jp (bad) arpl int3 push loopne sbb addb leave popf inc pushf fs jmp push loop lds rclb (bad) fs fs loopne jl add inc and mov fimul (bad) movsb gs or push inc jne je sti jo pop pop sub les xor mov sbb add sub cmp outsl mov lock mov dec adc sub subb add mov cmpsb nop cmp mov pusha mov cmp cmpb test add cmp dec fisttp adc pushw or mov jbe pusha mov (bad) mov pop insl lret add mov cmp xchg dec sub fidivrl mov add sub jne (bad) mov push or rolb in sahf cmpsl add mov or push sub mov jns add xorl in adc pop and inc and pusha movl lock mov cmp mov mov add sub arpl mov sarb addr16 jne xor xor ret mov aas scas cmpsb lock pop insb gs sbb and or dec mov movl inc inc loopne mov shr inc sti mov sub and push sahf mov adc sar test add adc cmp add imul dec in push loopne push pop outsl cmp mov cmpsl mov imull jb and loopne sti (bad) pop shlb xor sub add lock adc fmuls or push jno hlt add push xorl imul push stos sbb add add inc inc pop pop inc loopne outsl mov inc sbbb inc ja xchg out inc stos dec adc aad mov (bad) pop mov xor sarl mov mov and (bad) xchg xchg gs cmp fidivrl and hlt jb jnp lsl sub lahf movb xor jp js xchg push or (bad) ss adc cmp outsl xchg inc push mov xor lods and jmp psubd jge outsl adc jle icebp mov and xchg imul and cmpl push mov jmp in lcall out push aam add mov lock lock cmp je fcoml add sub cmp (bad) mov pop insb insb mov fs inc adc in in movsb arpl clc sub inc ljmp adcb imul mov test mov jno fcomi fs push sbb lods mov jne adcl cmp lret xchg pop xor add xor and sub xchg push ja add test pop push inc dec jo lret add inc fisubrl test daa repnz pmulhuw in and and in in es sub in in sub sub in in cs adc in in adc adc in in push pop sbb in in sbb sbb in in push pop add in in add add in in push pop or in in or or in adc cmp repz shrl lods sub repz movsb and sbb adc iret repz or add jns cmpsl stc cld clc je insb in out sahf out in fcoml jns aam int3 inc les sahf out mov out sahf out movsb sbb adc out sahf xchg or add cld imul xor hlt je insb repz repz fcompl repz push int3 dec les iret repz mov lods sub cmp rep and sbb iret repz adc or add sahf out ds divl in jns out fs fcoml sahf out dec int3 inc cld cmp inc mov mov sbb fsubrl jnp inc rcl xchg jl xor loopne and mov xor adc push push push inc pop repnz aad lahf fsubl das mov outsl and sbb jle mov and mov push loope push movsb mov jge rcrl xchg decl inc fidiv mov cmp je loope inc mov pop nop mov test fimul je add mov mov dec sub cmp xor push repnz or add xchg nop pcmpgtb in stc push je pusha and mov rclb dec or popf mov dec inc cwtl inc es in inc (bad) js xchg (bad) icebp add pop mov jg adc xchg jo lahf sbb or mov in es mov jb pop fdivs push push xor lods pop jg cmp adc xchg enter add or jno enter pop xor push xor lcall or jnp rcrb cmpl clc pop in and das inc scas adc ja pop mov aam cmpb push fadd fcoms rorb leave and roll xchg subl pop loopne add or mov lods jae jbe sub push xchg cld xchg or bound or sbb dec stos or or lret nop dec jl pop mov (bad) je sub mov and sbb add pop xchg mov xchg in jnp or jae pop sub sbb cld sub xchg and adc movsb insb or dec cmp push or mov push xchg mov pop push inc mov gs inc rorl je mov mov pop adc add xor popf adc int3 dec ds cli cmp cmp fs js notb xor xchg ja roll ret dec jb jb pop xchg imul sbb call sbb mov sbb insl outsl outsl scas fisttpll sub push (bad) aaa add add je jo xchg sbb pop sbb enter push or mov and xchg test or dec xchg cwtl adcb add es ret inc sahf ja js fcomp daa adc fnsave or xchg loopne loopne rcr or jo and and sub jns and nop and iret sub loope cmp jo test or pop sub jae cmp push adc add fmull popa xor iret aaa xor inc shrl je pop or and add (bad) add jo fldt add das call mov cmp jne mov mov add mov scas or pop push ja pop rol aaa arpl fnstenv push push inc adc ret inc sub mov das mov and mov cmp (bad) out mov cmp push inc sbb fnop pop pop aam add outsb movl ffreep xchg icebp test xchg iret arpl sub lret mov dec popf popa stos sbb push dec adc sbb pop pop aam jae jae jo mov cmp jb mov movsl das das jb iret inc mov xor add inc dec mov push inc jb add mov xchg dec sbb ljmp mov and cmp (bad) dec inc pop inc movsl or dec inc sti mov mov bound outsl add add cmp mov lahf add rol mov jb test push loop jecxz jge cmp jle mov inc fldl jns insl lea xor push xchg cmp adc mov push ljmp sub or push scas imul or jno pop or push add bound scas jge inc imul add mov in or dec int movl mov testb lret or aas lods loopne (bad) adc cmpsl add adc sbb xor arpl aad cmp dec jnp daa je mov jns popf add pop dec cmp daa in (bad) (bad) add es mov rcrl lea test bound adc pop jg add inc in dec test jmp call call nop stc (bad) pshufw test nop inc dec and mov sub push popf add insb jo,pt lods rcl sbb pusha push push push add xlat insl and lahf jmp daa sub (bad) add test xor xor push dec mulb dec imul add rorl movb add arpl fisubrl push or adc outsl pop jnp (bad) js bound pop es into movsl jnp jb jb popa or out mov daa scas bound jbe pop icebp fcmovbe es gs aas jge jbe pop addr16 jb addr16 mov pop mov arpl insb fildll imul idivb insb das je cmpsl push clc (bad) sbb and outsb xchg mov mov loop pop repnz pop jb arpl or cmpsb outsl dec pushw das gs fistp add or outsl pop movsb sub inc (bad) cmpsl jl shl loopne mov mov sub mov pop fimull addl nop jbe pop jb ja or in add int3 je cld rol (bad) cmpl sti and icebp push aaa and movsb sub adc mov fnstcw inc mov add pop add js push or pop or or pusha push subl ret ret xlat mov mov mov inc mov mov ror add jne xchg addl out popa orb icebp movsl mov fild in (bad) (bad) xchg push mov xorl adc or out incl xchg xchg push or xchg fildl rorb sub or addl inc cltd dec jnp in clc push pusha movsb mov ret pop jo out jne pop in add mov xor loopne jns add xchg (bad) and pop pop enter add mov xor sti mov clc jge add (bad) jb or jb jmp sbb rol dec icebp or and mov inc jle adcl sub repnz pop xor cmovg sbb sub sbb rorl sub inc mov nop and dec or cli fmul push stos stos pop inc adc sbb and push cmp popa movsb jle push pop add sub cmpsb imul add push pop pop or or or or or or sahf movups adc adc sahf out adc (bad) jg out sbb and and and out mov fildl in std push xchg xor arpl out test jl out jmp or cmp das inc push bound cmp repz cmpsb mov shrb iret repz cli or ret xchg mov fidivl fwait add mov add pop push adc adc dec sub in lret sbb mov or or and and dec sub xchg lret adc adc jb in cmp test inc push inc sub sbb xchg dec sbb jb in push sbb stos je movsb pop sbb test popa imul push pop and mov and shrb lret and addr16 add add push dec lods add sub test les inc cmp mov pusha mov (bad) xor fadds adc or daa push lea lea mov es pop js lock jo popa or pop push or push scas fnstenv incb (bad) call test js jle je mov sub cmpsl adc sbb push repnz mov rolb push mov or push loopne xchg pop (bad) das rorb lea mov pop movsb sti add aam ret push shlb popf and mov mov popa cmp jnp xchg push pop (bad) jmp mov inc push addr16 mov adc xor adc push push rol mov sbb pop xor hlt pop mov and mov ds inc repnz iret add mov fsubrs pop add push mov mov add mov mov mov pextrw dec inc inc rcrl pop pop addr16 sub mov ds push je push orb aam popa jns jecxz xchg add jl add js or arpl out dec dec adc mov loop or enter testl pop xchg pop or sbb pop push or sbb mov push and ds jmp repnz pop push rcrb dec out pop lahf or inc into dec insb (bad) and in add dec outsb pandn insb push cmp test (bad) jl mov (bad) aaa cmp mov mov inc call jecxz cmp ret in mov sub ds nop bound inc pop pop sub mov pop sbb or mov xchg pop scas mov sub mov loopne push stc nop scas pop sbb (bad) lock fcomps xor daa inc or push addl add ds or or or (bad) leave add lret js cmp pop jmp push adc (bad) outsl add jb imul leave adc dec pusha push pushf rcr push jb pop adc xchg enter je sbb (bad) sub cmp inc push inc (bad) xchg or adc sub inc jb sbb sbb sbb sbb jns inc jg jns ret insl rorl or add and aas movsb jns leave mov outsb loopne or or add imul inc outsl test push or imul and adc iret es xchg (bad) adc add in sub call sbb xchg pop xacquire dec js jb or dec gs jbe jns test xor xor pop mov push sbb push std addl ret or mov push pop xchg or dec pushf jne push pop scas or add add add jbe sub mov lods test fildl push mov fidiv mov adc jae in rolb enter movb add dec loopne cmp sub add or ficomp sub xchg in inc nop cmp cmp jle sub adc out cmp js test push mov in jnp cmp sub hlt push mov out or mov push pusha dec es inc push jo or aaa push cmp push mov add mov mov push or test mov pop test jg cmp lahf nop sarb add cmp adc fcos xor mov push xchg adcl pop pop outsl pop sub dec xchg pop push cld xchg out sarb adc jo jbe dec cmp xchg sar cmpb push mov or bound in jnp lock mov enter int3 push push les dec loope idivl movsb push inc pop push xchg mov (bad) cwtl sbb roll shlb or and hlt cmp bound xor add adc dec jo pop push lret dec cmp decl and int3 push push adc xchg adc rorb adc aam scas lds pop adc jo (bad) adc out or jae mov or sbb xor xchg pop sbbb push leave push mov sbb inc icebp pop les mov rcll and loopne xchg jnp in mov cmpsb xchg test cmp sub cs and hlt sub ds and push loopne loopne inc sbb xchg ret xchg call scas call enter sub adc add das aam sbb fimul mov mov adc dec add stos (bad) lahf add or mov repnz sbb rcrl sub fimull ret pusha sbb pop and (bad) js sub pop pop cmp sbb lds add js add add or xchg rcrl mov cmp push gs mov ret xor adc inc leave push adc sbb mov mov dec sbb sbb sbb push pop push jb dec cmp ret and and and sub pop sub leave das xor and xor xor addb movsb sahf or jmp mov int3 or outsb movsb xor mov pop adc dec adc divb push imul cmp mov rorb or xchg jge inc inc mov ret scas pusha jnp popa add test xlat jne nop movsb jnp out scas adc mov adc jmp xchg sub hlt add (bad) adc jns sub jns add (bad) add or fldl iret lods in mov cmpsb adc cmpsl ds mov outsb loopne push jl les movsb stos movsl pop movsb iret dec repnz fnsetpm(287 jcxz or mov fimull fcmovbe (bad) ss repz adc in iret adc and lods loopne nop shlb add inc hlt aad fmuls insl test into fild dec daa inc cmpsl sbb inc mov mov icebp push dec xchg loop mov hlt pop pop adc mov mov mov scas ljmp imul fcompl mull rorb mov push sarb adc in push int3 xchg imul pop sub bound sub pusha mov (bad) pop cltd mov nop enter sbb pop enter loopne ficompl inc (bad) and popl and xor xor dec cmp sbb in and or add or sbb dec and adc lock push jle orl dec sarb rorl inc gs notl xor jl frstor dec adc mov aam gs (bad) mov or fiaddl pop adc xchg xorl mov push and sub push fs xlat adc cmp push dec sub fisub (bad) imul sbb and sbb jb sbb sbb cmp aam adc push mov or pop xchg pop mov sarl (bad) pop mov stc mov dec insl gs add mov fwait nop inc insb mov inc enter and cmp adcl dec inc lods mov insb mov adc dec lods push inc fstps pop dec jle cmp cmc je add or adc adc loope fisttpl xchg and pop daa add loopne scas xchg sub (bad) sub in and add test loope (bad) push in mov in fisubl or mov xor mov xchg mov sub loopne push std push mov xchg xor orl xor push xorl test push lds mov ret decl mov inc sbb jne or mov cld push cwtl dec in add dec cmp inc sub xchg cmp xchg pop and ds cmp push xor add dec sub imul int3 mov fs (bad) lea nop test xchg adc add push pushf sub pcmpeqb iret pusha adc mov push jp inc push dec cmp inc add daa out rorb push lret or push dec xor mov in sti scas push orl add jnp sarb loopne out sbb dec scas adc test out prefetch push xchg pop clc addb loope add pop orl pop add or ja daa xor mov inc outsl les aas jo pop (bad) rorb or cwtl std inc and mov pop mov (bad) add push cs fcomps sub mov jmp ficom repnz cld inc mov adc dec push loope mov orl jbe test jb pop jl movd mov push cmp sub call lods mov call and test popa int3 inc cmc (bad) in bound loop out shrl dec hlt push lret inc and pusha cltd pop (bad) sbb or out popa fldpi sub push sub adc xor jge lret popa arpl lods (bad) fistp mov xchg add mov push push push fldt shll push movsb incl or jmp mov jg or push repz call dec popa insl outsl cmp push (bad) mov push movsb xchg inc movsb add pushf sub push push cmp in pusha mov test pop mov mov xor popf sub dec jle ss and fisttpll dec dec add cmp out (bad) cmovl jle push mov ja xchg mov xlat inc jmp mov inc jno inc cwtl or pushf cmpsl mov jge push das mov inc xchg test jle jmp sub (bad) jae pushf or jne lea pop mov jno pop movsb or mov xchg mov sub adc push in cs cs push nop push sbb sbb mov adc push pop xchg lea cwtl popa in popa add mov lret add xchg idiv dec ret nop test je or xor pusha mov push xchg sub sti cmpsl (bad) movl dec push pop sub cltd mov dec dec xor and cwtl jl mov fmuls pop subb add mov xchg inc adc xchg add in jo or xor out mov mov and jmp popf js push mov add loopne pop mov ret shll jecxz mov inc nop test or sbb andb jne push inc mov mov cld test or or stos add inc or add jne pop jae push inc or dec dec loopne test popa pusha or mov mov cld cmp cmovb jmp in or shll push and lods rol adc or mov lods jle dec stos sub pop adc push pop rol push icebp adc aas mov sub dec subl (bad) push js inc adc es inc daa insb test or mov insb outsb ret jne faddl push call xchg adc mov or jp adc rorb add pop leave jo mov (bad) sbb sbb cs xchg sub or xchg imul test jle mov mov mov or (bad) xor jo lods xchg sub xchg adc inc sub jno rorb and mov loopne negb mov js mov iret rolb leave pop dec add pop or cmp repnz adc add popf xchg xchg xchg test adc loopne sbb cmpsl je mov addr16 je push call sarl mov mov adc testb hlt xor push lret out mov cmp sub jo fadds adc and in bound jae or insb inc push adc mov fldl cmp mov pop sub iret push jns dec repz ds add dec outsb sub mov jne dec adc pop mov pusha cmp push sub mov xlat push nop dec aad mov pop gs xchg inc lret dec pop inc mov add adc mov adc adc or cmp loopne inc daa push test sbb push dec addl dec push inc sarb or pop pop pop and inc pop adc popa mov mov cmp xor enter ficompl or push imul inc pop shll inc push dec and clc inc movb adcb enter fidivr add in arpl addb jmp inc lods sbb dec inc (bad) dec inc test dec lea adc mov xor fwait js or shlb addb xchg (bad) adc pop jo decb in mov xchg mov ret xor adc mov dec pop sub fwait jg test sub dec cmpl jne cmp ret movb adc push add push cmc inc insb xchg mov ret mov movsb aad and inc (bad) mov jae test adc mov jge xor and inc mov mov icebp mov scas cmp xchg xor ds (bad) lock inc pop orl sub mov fisttp psllw call dec adc and lods mov movsb cwtl mov (bad) jno (bad) ja aas mov orl (bad) scas (bad) mov xchg test push ja mov hlt loop or xor pop xor (bad) cmp je clc push jbe cmp or add mov dec jmp jp mov inc cmc ret pop mov dec xor sub fisttp jmp add ucomiss test or iret inc push push push dec dec mov dec mov xor push pop fwait rol mov add scas mov push inc adc sbb loop shlb cmpsb add pusha insb ljmp push sbb fs loopne push and dec dec inc (bad) aad enter dec les jle add das push mov inc or or js jmp jnp (bad) xor mov shll out or aas fdivrl xchg ja jno and roll mov xchg mov rolb js outsl mov pusha and pop mov ret adc xchg insl gs cmp leave lcall push outsl xchg jge rol jl arpl adc cmp push sbb loop cld adc popf ss dec dec mov fwait cmp adc mov adc mov sub pop mov cmp add rorb repnz jne and dec out icebp and lock mov cmp mov cmp add and popf jmp dec add icebp adc sarb lods aas lock add mov xor mov xor mov jb xchg cmp xlat insl or js ffree and mov les inc lcall or test daa addr16 or add mov push (bad) mov seta mov pop adc and cmc adc outsl inc xor (bad) mov popf js pop mov sub test mov call pop mov sbb mov and cmpsl sbb sub leave arpl xchg ss sub jae jns (bad) in popf fst enter push push sub sub lea fs xor add and ljmp xchg mov fldcw inc cwtl pop lods adc aad leave es xor js lcall xchg jmp sbb jo leave add sbb adc (bad) and sub pop or adcl pop mov adc and and mov fisub rorl pop jo or mov popa test dec cmpl inc add cmp and hlt subb cmp jb sbb mov icebp (bad) loope ja lret insl jo (bad) jo (bad) jge inc mov les mov shlb jge push and push clc or and lods sbb xchg cmp lret cmp or dec rcll test aaa inc mov subl scas out push sub idiv inc inc pop ror int push add pop jb pop scas jmp hlt dec xchg imul xlat inc sbb inc dec xchg xlat mov xorl mov dec push addr16 daa insl mov lods xlat sub mov jne iret inc or dec sub mov adc xor mov dec int3 fildll out ret xor repnz mov cltd add mov sub ja adc add test xchg add ljmp jne sub cmpl mov or into mov or cmpb mov pop jmp lods loop jg xchg pop mov push pusha out sbb adc jecxz ljmp jecxz push popa add scas das sub and xchg shl mov and shl iret jecxz or mov ret popa pop icebp dec jns loope mov (bad) in add mov test push cmp adc clc pop dec in push pop sub je pop dec sbb movl or cs mull loopne add addl out mov fwait jge adc les cmpsl push sbbl pop ret jecxz rclb pop rcrl (bad) and (bad) or or sahf sbb test push pop test cltd add dec inc inc daa stos adc lcall mov lods mov nop imul popa push push test roll inc (bad) or add xor adc daa repz mov pop and lds icebp jmp push and mov (bad) adc cmp addr16 jg jmp jo (bad) aas xchg fidiv ret icebp lds mov out cmp dec movsb arpl movb cmpl bound insl notl dec int3 lret je sbb mov jns call add push pop shrl pop sub sarl xchg cmp push test fnstsw and jb fnsave xchg sysenter inc jnp les outsb or call mov pop sbb fidivl or sub jle cmpl cmp or mov dec in pop fildl aaa fdivrp inc sbb xchg add mov adc cmp jo xchg xor out sbb xchg mov pop sbb xor movsl stos add ret mov es lahf dec lea xchg das mov cmp rol ret (bad) mov mov mov imul sbb movsb shll imul xchg nop cmp cmp fcmovnu mov sbb popa sbb or or mov dec and push or push push xchg bound sbb add sub pop in mov jb mov pavgb sub je mov pop xchg pop push and cmp mov out data16 andb dec xchg loope and cld lods and adc fcoml mov insl cmpb mov mov jne mov jmp call pop and movl dec ret fwait lret mov jmp cmp (bad) pop ret cmp cmp adc addl and and mov loopne inc daa dec xlat pop cs pop add aam push cs xor (bad) jle mov mov mov dec dec add inc test fs xchg pusha or shlb cld push and scas adc sbb inc cmp loope add in xlat addr16 cmp inc shrb test and movsb pop jb (bad) dec add pop lods lock pop xchg (bad) mov add push sub sbb ss popl xor les mov rcr jecxz add ljmp lahf jge iret inc adc mov sahf mov mov xor cmc pop sarb ror and jnp ss test jne inc pop inc push imul decl cmp mov dec test mov std mov mov jl dec rclb xor lret (bad) sub lret and jg adc xor jae ljmp inc mov cmp jae cmp jns sbb gs inc add jo xchg (bad) mov jmp scas or adc jne andl jg orl mov (bad) cli cmp add shlb inc and dec dec push push inc dec pop add (bad) jb mov xchg inc sahf inc sub fwait je jecxz mov cmp push mov test in add push pusha mov ja icebp shll sbb add sub pop adc xor or dec fwait mov cwtl loope push popf and ret adc sub xor inc iret fsubl jmp dec inc mov popa pop or popa push add orl rcrb sbb dec mov cmp jne inc scas add inc in cld sub jnp (bad) jl outsb cli in jnp and rolb fsubrs inc push mov sbb add sbb xor cltd or cmp mov cmpsb je fisub mov sbb cmp insl xorb and mov mov (bad) mov and fisttpl pushf ret add push pop inc fbld fucomip (bad) xlat adc or je rcrb in (bad) push out cmpsl add pop or jmp inc cmp lea ja ret movsl jg sbbb jbe mov loope mov xchg adc mov add xorb mov test adc fsubrs and cmpsb nop xchg loopne (bad) mov nop sub sbb out fadds push lods call mov cmovs es aad cmp lea pop cwtl es cmp jge and aad ficoml scas add and movsb aam mov inc stos mov (bad) adc xchg data16 jo (bad) loope xlat insl and sub lods cmpsl jns callw mov sbb aaa mov (bad) dec or gs xor sbb adc or xor add jle mov cmpsl shr sub adcl push sbb or leave insb xchg mov fistl loope es or jge and add jns push add mov add scas push push loope add jo lea push push cmpsb iret pop js xchg mov test clc jb mov add mov push xorl subl push mov rolb push sub mov adc xchg cld outsb and test sub and mov sub addr16 pop jns push lock repz or pop iret nop jp sbbb sbb sbb jl push sbb cmp mov jl test (bad) mov adc or xor cwtl push adc dec sbb lods aad and jae sub mov cmpsb adc test fdivrs rorb jmp enter xor inc or xor xlat dec xor add ret rclb sbb bound incl int and xchg into cwtl mov push leave add adc mov add mov cmpsl enter (bad) sti lods xchg cmp add mov cwtl jmp xor inc fimull sarb je das pop or inc fdivrl mov sbb arpl ret push add jg or cltd push sub push sub loop (bad) xor add or inc lcall fsub add add pop fcoms das test pop or dec pushf sub movsl sub pop add mov sbb pop fcmovnb cmp adc sub push aam sbb rolb or sbb and pushl xor bound fiaddl aam sbb aaa add pop or pop out jmp insb rclb rclb pop fwait ret sbb imul fadds mov aas sbb jne jg pop inc mov pop (bad) xor pop xlat sub add sbb sbb and mov cmpsb in fidivl cmp xchg shlb xor addl aaa clc sub and enter xor fdivrp jo mov or add push scas sub inc inc (bad) ficom jb or cmp ret cs push lea xor pop cld xchg sub aad xor xchg jns and movsl in lods in xor add or bound push dec js dec push push (bad) mov add or push inc imull scas inc fmull ffree cmpsl insl push lods adc inc adcb push loopne pop inc cmp push pop and or inc ror fcomp outsb jae mov jmp or mov popa push mov add jl and test mov sbb cmp iret (bad) addr16 and loopne xchg paddusw daa addr16 ficom rcl xchg xchg and dec lock jg sbb mov fadd bswap in xchg and adc int3 cltd pop mov iret repz popa imul repz xor inc dec test add mov and aaa fs out fisubrl mov pop or xor fdivl and rclb inc repz in xor jno adc andb sbb push push fistpl jnp lret sub inc sbb mov neg inc sbb push adc (bad) xchg (bad) les mov jo decb adc imul mov into push cld mov stc mov inc bound pusha loopne es sub or adc push out lods dec int fimull or fistl jns dec inc pop aas ljmp lea enter add sub movsb xchg xchg jnp push jb pusha jnp ljmp cld adc dec cmp fcoms in or push es xlat loope pop xchg jo or cmp fucomip push mov fldl (bad) fistpll dec cmp push dec ja dec out shlb jae and add ret add inc xor popa jmp (bad) add dec cmp mov jl in jp ret cmp das jno or push fwait js jecxz loope fcomi and aam mov mov jno adc sahf in fwait adc in popa add add add inc lock ret pop fs cmp loope rclb (bad) xchg ss xor inc aam or ficoml fstl mov (bad) mov js in push in or and jecxz aaa fstp (bad) fisttp sub sub and sub push pop sbb cmp movsl mov or sub and xor call sub ret movb fdivr or in adc aaa xchg or daa or roll mov xchg sbb lea ljmp in orb adc lock in je lret jbe jmp mov scas and stos mov mov bound sarl push (bad) add mov (bad) jno repz mov mov (bad) stc jge add (bad) lock push mov dec jne jo inc call lds (bad) or out sub sub mov or cs jbe movsb sbb cwtl test aaa mov and mov or push or cwtl mov cmp jo decl jecxz adc jge sbb jns (bad) xor add popa sbb or xor or insb or je popf sbb ffree or jb sbb sub lea imul add (bad) addr16 mov push pop inc or or push mov rorl andb and or sti sbb mov lods movsb (bad) mov xchg shrl adc ja dec adc and hlt jo pop mov add or cmp std pop outsb pop push dec dec dec inc dec push add lret mov add inc jg and xor aaa pop lret jmp or or add cmp sbb lret jg or icebp nop xchg jo scas aas cld or xchg adc sti dec push xor mov adc mov pop cmp dec sti jmp leave jecxz scas bound pop stos in gs xchg dec mov push and bound pop jmp cmp add mov cmpl mov or xchg les cmp push pushf nop arpl adc aam jp fcoms outsb push sbb (bad) adc es push mov jmp xchg cs stos adc sbb ret cmp inc jbe (bad) cmc cmp cmpsb imul add inc or push mov and (bad) aaa loopne add add mov xchg push out enter push cmp jne mov outsl je,pt adc clc cwtl or inc xor enter pop loope cmp jns out ss subl sub or sbb dec hlt jns (bad) (bad) dec or add sbb imul inc sbb cmp test shll xchg pause pusha aaa pop push cmp scas js mov or add addr16 dec sub loope push popa sbb fmuls fwait add xchg loopne cmp inc test sarb jb outsb adc add js pop fild xor or push outsl insb and mov fldl jnp stos outsb pop push in push dec push lods add add or push data16 sti inc dec push mov and (bad) pusha sbb pusha inc inc in (bad) cmp rolb and int3 push jl iret ss dec gs sbb idivb cmp push mov into test or inc xchg pushf nop int and and (bad) push rorl jg notl pushf in mov cmp nop and adc xchg adc (bad) mov pop fdivl cmp push cmp mov out cmp push dec push pop add loopne push jl aas adc fwait loopne cmp out pop sub inc je pop add inc fs daa cmp xchg and and sub ss lret fsubrs sbb inc push xor xor mov loope push sbb nop pop sbb movl xor aaa mov jne cli orl stc mov inc inc loopne jns adc add ja out push out roll cmp fucom loopne adc nop xor add adc pop fdivp outsl mov xlat imul mov insl bound push push (bad) jo or inc je insl pop je or pop or or xchg gs lret arpl insl popa in arpl mov or and adc data16 addr16 mov mov xor pop fmuls jne adc cld psubw clc cs fs push dec or sti add add loopne test push or lcall mov scas ret mov ds push sti popa imul enter imul (bad) or or xchg lret mov xchg or pusha pusha fs cmp sbb (bad) dec pop sbb pop xor pop sti sbb or ss mov mov out adc dec movl inc adc mov and add or popl dec je (bad) mov lea xor daa xchg add (bad) lea decl or push add or repnz add push shr and sbb pop xchg or hlt ret sbb add lea xor jl dec outsb mov add pusha mov lds loopne jb xchg add add out shrl iret jno stos arpl add enter sub adc jnp mov lret push (bad) test rolb add sbb inc push hlt sbb pop fs pop adc pop pop pop cmp nop lock rorl (bad) cmp insl inc lret into push lcall inc pusha pop cmpsl xchg dec dec mov das or inc pop (bad) (bad) mov or and dec push int3 and (bad) push and add incl mov aam pop push pop leave divb pop pop add add iret mov mov adc push stos or in pop (bad) push outsb and aaa inc or mov xchg gs adc add jle cld sbb pop add fmull bound sbb xchg (bad) mov scas movsb xchg adc mov sarb andl bound inc xor adc jmp inc das inc push test push roll lock add add inc rcr lea or or popa shlb dec adc xchg imul and nop xchg cmpl scas out and mov fimull xchg dec out insl add jns jg adc push add or add lret and push adc push pusha xor sub (bad) movhps push sbb add fdiv jmp add pusha add add test popf lea mov xor cmp adc andl xor repnz cmp repnz cmp add adc inc or add mov ja andps push pop add add add add add add add mov dec and or mov mov mov mov sbb ja pop sbb cmp inc mov clc xor jmp ljmp jmp jmp jmp jmp jmp jmp jmp jmp (bad) (bad) fdivrp (bad) stos or (bad) fdivr (bad) fiaddl fdivr xlat call call call ljmp test sar sar sar sar iret push into dec pushl mov dec icebp dec push add jns repz mov push mov xor out fadds xor fs mov jl iret shrb gs imul sbbb jns sarl insl movsb lods push (bad) (bad) jnp div push push clc inc push imul push xchg shrl pusha cmpsb cmp push push and cmpsl stc sahf out inc shl movsb push lock push test push mov je pop insb adc popa sahf dec out jnp sti add test dec dec mov out jnp testl mov cmp shrb push out sbb fs push (bad) pop mov pop sbb test loopne or sarl cmp fcoml ret or aaa dec cmp shll aas dec xor pop enter push repnz mov mov cmp cmp arpl (bad) fcoms or mov mov cld push xor or out int or adc xchg mov xor jo mov dec jle stc inc pusha adc pusha outsl xor insl addr16 inc jo addr16 outsl js and dec leave clc cmp sub imul pop adc push lock mov xchg inc or xor push inc mov popa inc cmove sbb jae popa je xchg inc push push cmp push mov jne sub mov xor scas or inc jle imul sub add xor outsb and xchg pop jbe mov pop add jbe or outsl ja mov sbb adc pushf adc es xor and pop xchg xchg movl sahf fs cltd or or aaa xor push inc rclb movsb mov ja add fdivs std aam imul test fsubrs or xchg or and (bad) sub loope mov jns sbb outsb stos andb call mov sbb add mov pop push enter repnz es addb inc xchg loope adc pop sbb (bad) cmp test dec jne clc sbb add mov (bad) push decb jg push dec add add add mov mov addl jle test adc pop pusha imul or add or adc add aaa mov mov dec or loope or outsb cwtl rolb and and (bad) jg sub mov mov mov mov add push mov sub xor cmp sbb mov in jmp (bad) inc inc inc inc fild std (bad) mov dec ret loopne mov dec faddl xor lock clc xchg out push js in sahf out ds sub je sahf data16 inc xchg add push mov mov mov push rcr shrl mov push mov adc lock ds mov shrl out mov int3 (bad) fcompl ds (bad) fmuls jbe cmpsb push in jge out hlt cld push cmpsl pop push les test add mov int3 mov dec nop push pushf add cmp or sbb inc stos dec sti cmp and js and mov (bad) lods mov callw cmpsb in int sti sbb push cmp aam jnp sti xor jo es push adc push jge imul push orb fcompp mov xchg jl inc dec mov fcomi ds ss les ds cltd and pop add pop and add or je (bad) jbe xchg add adc add or int3 adc (bad) mov jns mov nop (bad) aad (bad) aam and or add in xchg sbb movl scas push aas xchg adc pusha das or cmp add pop ja and mov into notl mov and outsb xchg and mov jne,pn mov sub xchg mov adc push lock js rclb ljmp push fadd mov (bad) fildl push sub ror (bad) insb test sarb idivl test mov sub push ret sbb add lods pop and jo bound adc test or dec fs clc adc pushf pop mov xlat mov out in add mov nop leave jl insb imul sub fwait or andb les dec call mov and push or repz push mov repz (bad) in adc (bad) les mov adc je in fimul push add jo fwait js js sub mov lock push hlt flds add (bad) mov lods in cs rorb inc out push xchg lods xor je cmp les sub lahf fdivr jnp das in add push pop mov adc xchg and inc cmp (bad) testb mov adc aaa jg pop or pusha xor cmp pop or add adc dec sbb es sub cmpsl pop dec or mov cmp nop sar push jmp (bad) pushf lret movsl mov mov das xor sbb jno cmpsb sub (bad) lock inc add sub dec sbb jecxz stos es cmp sub add inc rorb movl hlt add and adc xchg dec push fist sbb ljmp xor adcl adc insb daa adc dec jne cs xor ret xor cmp jne subl fcmovu call sub pop xlat sbb aaa sbb jmp or add dec jb mov addl ja pop mov addb dec inc ret add add int3 je xchg jnp fimull daa push dec dec push adc or push inc push mov loopne jo daa or in mov clts mov sbb sbbb dec push jo imul andl popa push movl lret mov stos add rorb insb jo xchg push imul out mov mov stc outsl daa pop addl pushf cli aaa pop mov add and lahf (bad) adc loopne inc popl lahf dec adc push jmp inc lret and or pop (bad) nop xlat or xchg lea jbe adc xchg pop adc dec repz adc inc dec shrb inc push daa enter adc stc jecxz jne cmpsb mov or arpl movsb cmp adc (bad) (bad) add mov mov sub (bad) es loopne add adc xchg add sbb and test add push stos adc inc jmp jge push push or add cmp jl xor push rcpps mov add fcomps pushf hlt jb popa lods rcl pop sub xor imul jp sub mov sub aas into add dec jbe push dec dec mov or add inc fbstp xchg or sbb adc movsb pop jmp jecxz sub adc mov imul cmp cmp leave (bad) rcl fs enter or fisttpl (bad) push or push dec or les mov push mov push inc in xor (bad) mov or adc adc xor rcll sbb and xor and sub sub call push repnz push adc push xchg pusha mov push popf ret iret add inc xchg pop adc cmpsl mov sub push imul push fidivrl or jecxz add adc ficompl je sub fcompl je pusha shld iret mov jle dec je ja inc aas or pop cld mov add push inc bound mov mov and dec mov cltd clc fstl adc mov (bad) mov (bad) adc dec loope js pushf sbb cmp aas add jo fcoms sbb xor pop cmp jg enter movzbl dec test data16 (bad) jmp or decl aaa lcall pusha mov cmp sbb out or and mov jns fs pop andb xchg cmp and add push dec mov pop add movsb add mov xorb sbb pop dec push add xor mov or inc dec insl sbbb dec fildll push adc mov iret pusha add xchg insb sub lea cld dec in imul test mov push cmpsb push mov add adc dec dec cmpsl daa jae mov push orl bound dec mov push inc pop (bad) and cmpsl adc pushf push divl mov push mov sub mov push insb insb push out (bad) fsubrs jnp popf push pop (bad) aad pop inc inc jp lds addr16 add bound pop or cmpsb mov push sbb mov lods push test test add sbb or sub mov mov xchg mov movsb mov in adc cwtl dec or adc sub (bad) xor and xchg pusha neg xchg incb cmpsl subl cmp cmp (bad) jae push push (bad) fs daa ficoml jp les add (bad) mov lock fisttpl icebp inc bound inc andl pushl add pop sub loopne add jb xchg movb jmp nop dec cli adc xor dec movsb dec mov inc or sub les (bad) ljmp fbld shrl ret mov ret lret push xchg and out popa add insb lea flds in xor inc fdivrl cmp bound inc je data16 sbb pop movsl pop (bad) test in sub repnz dec push in movsl js pushf clc lods inc (bad) sub hlt insb push imul (bad) adc enter mov cmp jecxz inc test xchg sarb orl mov cmpl lret mov sbb fcoml inc fildl into mov and adc mov aad mov add cli push in (bad) fsubrl cmp (bad) fdivs lea or xchg mov cmp adc xor mov iret xor in inc mov outsl ss xorb lock sub add sti push sub fincstp cmpb jmp sbb imul push jne dec mov lock xor imul jle inc jo incl push (bad) sub in daa adc add mov movsb test fmuls inc in mov push inc dec jne addr16 and mov in adc xchg pop data16 and lock jno cmp add je popf lods les cmp dec insb aas xchg dec inc jne and sub dec shlb ja push dec sbb test adc mov sbb lods movsl negb pusha pop in sbb or decb push jbe push dec sub push cmpsl push or clc push push push jne push fild and adc lock push pop push dec push in cmp jge jne pop imul jmp xor cmp leave data16 add push in inc pop loopne or call fucomp xchg jg jl movsl test sub jmp push fisttpll dec adc mov mov sbb inc add or cmpsl shl rcr fdivs test sbb and jb pop push xchg cmpsb in stos push pop or xchg ficoml xchg inc ds fnsave jl mov js add lea xchg sbb adc aas call jbe fdivp add je out ds and and push rolb test sub call and repz daa pop xchg cs xchg ret push mov inc push sub (bad) push jge push (bad) sbb sub add or cmp push mov sbb adcl mov mov or jo mull and cwtl lea fildl add jmp xchg inc in sbb sbb add cmp je xor mov jmp mov test cmp int3 add outsb lret push add sub pop push lds xchg lds aaa jne (bad) sbb add push adc xchg pop out daa test mov mov (bad) cmpsl and and jg or push push testb jl rolb std or add or jne mov pop cltd cmp add fadds pop pop orb (bad) inc stos sbb inc xor cltd test (bad) test iret sbb push orb adc cmp roll or pop pop and (bad) fisub mov mov test push adc dec out push mov rolb cs or stos xor dec sub adc fdivrl pop sbb das (bad) jae mov mov into rolb fist adc mov aad ja mov insb mov sti sbb mov iret pusha sub pop adc lea (bad) add or stc subb mov (bad) cmp add and or fldt stc fstpl fwait jmp inc and nop popf add out loop jnp movsb and and jns sub imul insl jbe xorb push insl pop sub rclb jbe insb add jmp pop popa jnp imul or pop sub push (bad) or xchg addb movsl dec and lret add cmp es push add fs loopne mov leave iret mov mov sbb mov add sub xchg mov sub pop xchg push xchg imul insb and add xchg jecxz dec repnz adc xor mov pop sbb adc aaa imul pop mov imul dec nop je lret dec jmp sub (bad) jb (bad) in cltd push insb loopne mov xchg push call in mov push dec sub add mov add mov popa out pop jno dec fstl add and sbb push loop in adc insl inc sbbb mov int3 ljmp push jne ss jnp cli mov lea and xor or jbe aas push es scas add xor mov pop ds inc pop dec fcmovnb inc incb or push adc mov add sbb cmpsl xchg pop nop cmp cmpsb (bad) jge mov xor adc push sub sbbl arpl lahf and gs inc cmp cld es inc insb cmc sub and cmp add dec mov (bad) or cli lahf cmp or loop xor mov nop pop je popa xor movsl daa pop dec test jge mov cmp mov pop outsl je test jl ret fstl cmp add mov cmp xor pop push cmp ds and or pusha add ja sub aaa js mov push mov or or xchg or jmp inc push xor or sub sti in and push adc dec mov mov adc push lret imul xor cli fsubr inc add push and adc outsb adc ja int mov (bad) in inc imul mov or js jmp daa dec ret pop inc dec mov fwait fwait (bad) bound push imul fisubr inc mov jno ss add scas loop,pt push xor dec add cmc push shlb dec adc add sbb sbb inc ljmp cltd add fildll xor cmp and add sbb lods out push add add adc mov aam cmp das push and hlt in sti sub (bad) push sub lock jo sarb mov xor clc jne pop out insb inc cmp sub aas jnp mov and es jmp ja xor jl inc push mov rcll jne mov lahf dec mov cmpsb push ja mov inc cmpsl adc mov pop cmpsl lcall xor push out dec jmp (bad) mov dec pop loopne sub ja jmp gs test add xor add and pop and mov lea pop ret mov or sub ss mov add pop mov and clts jo add xchg shrl pusha mov add or sbb addr16 js sbbl jns sub adc push es cwtl or andl stos push pop pop pop or xchg pop sub pusha sar xor mov and mov aaa dec rcll pop or movsb push adc mov sub jmp jp stos dec out pop jmp cmp je add mov mov test jbe push adc outsb xor or cmp push or dec push sbb pop je je xchg add cmp xchg pop je cmp add rclb sbb mov sbb adc iret fcoml imul or cmp test rolb (bad) push jl xchg jmp ljmp les pusha test sbb mov inc flds adcb dec mov jmp and mov sahf cmp push in mov ret mov add fcmove lds sub aad enter lret sub and mov jmp mov and fs icebp add cmp or mov adc rorl adc arpl nop and test mov mov outsl int3 sbb out jo mov push fcomip insl popf mov add pop xor push in mov adc or rolb out (bad) push lods fisubl cmp dec pushf insb sbb xor (bad) dec fstpt jg (bad) mov push add xchg rol nop inc jmp mov or inc arpl or sub shll sbb push xlat jne mov mov cmp cmp js xchg scas cmp and aas mov cmp lods fwait daa xor (bad) xor xchg clc aas in mov or mov push and xchg jne pop cmp je xor mov mov push adc lret aas pop xchg rolb inc xor xorb inc popa mov je cmp ljmp jo sbb pop movl add lcall cmp negl bound push pop add jp jmp add xchg out xor imul arpl xlat dec cmp psubb shlb les nop xor aas cwtl push inc fsubs push ds pop sbbb aam or mov mov inc pushf imul or insb xor xchg push push push subl mov mov pop ret jae ficoml dec inc xor xor adc adc or dec push pop mov insb xlat dec mov and adc add dec sbb xchg push mov test push ss dec dec fcompl add pushl push cmpsb adc or cmpsb add insb xor adc fmuls push mov mov push and add rcrb sbb outsl mov andl orl subl push flds (bad) mov clc cmp mov sub xchg orb fidiv push cmp add aam add push cmp inc xchg int3 ds jbe mov push xor add pop cli add inc adc sbbl mov ret arpl mov xchg mov dec loope test push idiv and or js or pop or xor cmp push cmpsl ret loopne inc add and jle jne cwtl or sub cmp and mov sub push add push rclb daa xchg pop nop jno xor rcr jne or cmpl (bad) push je pushf push cs mov adc pusha push ret cs push sbb in and jbe or scas inc dec push push dec arpl inc adcl (bad) or rcl mov dec (bad) or lcall inc jbe jnp sbb adc jne push or and push push rep dec clc push les inc inc mov popa push cmp or inc jle dec inc add sbb inc (bad) or iret inc (bad) sub dec xchg add cmc cmpb add sub (bad) mov push cmp dec ja add out nop es inc pusha xor xor and sbb mov dec mov push add inc adc outsl push sub add jbe mov dec sbb sub push (bad) and adc cmp mov push (bad) xchg jg add inc pusha sti and cli cmpsb lock fcmovnu inc ret sbb inc dec das js mov pop dec xor mov (bad) rolb cmovne roll fcom cld inc inc lret inc dec (bad) push dec add push xchg dec xchg pusha add and in in aad inc mov cwtl mov scas inc adc pop sub push and cmp addb inc mov xorl pop mov mov sub jg adc enter (bad) push mov in cmp cli clc dec mov push mov push bound sti lds or cmc rcll mov mov xor (bad) sti mov (bad) int pop imul push push inc cwtl test scas and scas add mull rolb test xchg scas xchg mov repnz mov sub or outsb dec add add jb popf dec mov das mov mov ret cmp sbb imulb sub adc and mov mov pop xchg scas lock add push add mov lods add test pop mov adc push fiadd xor (bad) (bad) sbb mov adc add in ffreep jo les adc in mov add or adc arpl and pop (bad) mov xchg mov mov add pop mov pop stos add push sub enter dec (bad) and cwtl sahf inc xchg mov mov fistpll dec dec imul cmp (bad) sbb outsb xchg (bad) mov push and adc adc and jb xor mov mov inc sub sbb ss iret or fmull dec cmpl and test js dec cwtl xchg sahf jg push mov loopne bound adc push mov (bad) (bad) addr16 mov fsubrl xor inc in add ds pop sbb loopne movsb push add mov add pop lcall xor daa xchg mov mov nop add xchg ss jl ret lcall sahf or or rclb dec adc xor adc dec mov or and and or lea mov jecxz pop push dec inc (bad) jle add mov inc pop push cltd (bad) rcl pop out into sbb xchg xchg shlb jle push add movb test mov push jae adc fbld dec (bad) jg dec testb je mov xor sub pop ja,pt addr16 cmp sbb adc cmp incl andb addl dec inc or sbb fcoms inc push movsl (bad) aaa rclb cli stos dec mov movsb nop addl sbb fstpl mov cmp mov adc or pop add and push xchg in sbb pop cld xor pop push je push popa xchg setl mov xor sub (bad) aas scas jo xlat adc je mov push nop fbld dec mov nop pop push add mov inc cmovs nop dec clc cmpsl es imul lock jo add and insl and push sbb mov imul adc cmp inc or push dec mov push xchg rcrb test and sbb lea add pop (bad) or lea jo js pusha ret outsb pop je or inc pusha add or cmpsb pusha jmp push push add shll pop bound mov (bad) xor and cs add push or mov mov pop loopne push xor cs je mov cs mov orl or nop cltd enter add dec and sub setnp rorl inc idivb push jo mov push nop movsb push pop or movsb jb pop or push imul cmp data16 data16 (bad) xor add sbb cmp mov in sbb loope cwtl outsl mov cmp xlat outsl inc jecxz mov lcall into jb push push lahf loopnew loopne stc insb mov pusha insl pop pushf mov daa jae sub sub aaa stos out add push add or shll decb sbb push cld mov push or cmp rclb sbb loop pop adc dec das or shrb xchg cmc lods int3 sbb and adc dec sbbl popa (bad) fist dec cwtl fmull (bad) mov or adc push cmpsl fwait adc cmpb adc xor jb push adc dec cmp fsubl and les daa jno and xor pop mov mov mov ja pop das sbb insl pop imul rolb mov add and cmpb pop aas repz js divb bound cmp dec pop test cs dec in mov aam push cs push push addl addr16 bound cmove sbb rclb (bad) jne incb inc pop xor push sbb jg and push and sub pop insl sbb ss (bad) js jo imul insl or mov and xchg lret addr16 add push inc std push jge pusha inc push pop cld add push jecxz sub dec push push push out inc xor sbb xorb (bad) sarb aaa xor sbb xor xchg and add inc or jp mov das inc test or mov or cld or adc or xor sbbl and mov sarb imul rcrb push js fldl imul insb movsl ror and xor js push loope add dec or imul lock or int3 mov lahf add cmpsb adc (bad) repnz stos pop sbb (bad) dec adc dec or xor lock lock xchg sbb ljmp or in call test adc dec cmp xchg adc adc sti dec leave outsl xchg sbb sbb sbb xchg push stos jbe daa pop fimull or inc mov or imul push (bad) and cmp cld sub jb dec and inc or loope in xchg and mov xor or fwait lea fstl clc sahf (bad) sbb push fucomp adc sarb mov add mov lea pop sub inc adc divl add adc je cwtl jl mov dec jecxz mov andb dec pop mov test and imul and add add nop add add mov add into cwtl sbb cmp pop (bad) mov je cmp push pop push cld pusha (bad) notb roll cmp jne xor call push and out push (bad) mov sbb shr js cmp push sahf std inc neg pop lea ljmp imul xchg loopne mov test incb mov aas inc test iret hlt cmp mov mov or subl out or mov push call mov mov nop and adcb cwtl mov xchg mov add mov sbb or loopne jmp cltd pop add sbb push add out xchg and push sub and js add stc sub inc or sub dec jecxz adc sub cmp push xchg icebp mov dec or xlat outsb sub cmp (bad) aaa call push mov in or inc in jo inc pop push xor mov pop fs imul leave repnz inc fsubr pop es push cmp in adc mov outsl or and outsl loopne sbb aaa cmp addr16 es je add sbb sub jb je mov jb movsb xor jb and sarl pop ss or lods ret shlb adc inc push stos aad adc ficomp and cs xchg or ss xor cmpl add bswap jo add cmp xor fsubrl mov add es (bad) dec adcl dec adc aad fsubr xchg popf dec dec pop fsubl loopne xlat inc sbb nop pop pusha idivl mov sbb add int3 sbb mov mov into inc xchg pop lea pop lock pop sahf sti jmp jl mov mov pop jno sub add inc add adc push stos and mov in hlt (bad) xor dec pop sub lret dec insb pop rorb or mov adc jge mov or or xor sbb (bad) sti inc aad js jne pop push imul js call (bad) aam mov pusha jns icebp push pop sub cwtl sub out enter loopne mov jnp iret dec mov addr16 or popa xor lea adc sbb jno (bad) push test dec push add jmp int3 and and cmc insb or sbb leave inc push pop push add add ret pop mov les xor cmpsb add cmpsl pop fcoml ss pop add lods pop ror push inc fprem adc xorb loop mov movsb inc or and add scas hlt mov iret lret ret jae lahf bound or gs add cltd xor insb pop inc or push dec pop sbb mov scas ja out sahf rolb adc xchg int3 enter ffreep xchg jmp scas data16 add sub push fisubrl jmp cmp add rolb or mov mov lock loopne jbe stc scas or insb pop rorb adc fisttpll jecxz mov sub cs daa or or and rcrl fnsave jp cmp mov add and or insb fstl popl jmp sbbb cmpsl sub jge roll or vandps or pop jmp sub maxps push or enter xor adc jb mov test fwait aam pop push or addr16 push dec jmp pop clc jo push lock lods push inc cmpb (bad) mov out cmp cli pop dec pop addr16 jmp pop xor sbb xlat adc fwait mov dec pop sub dec inc and xchg pop sub dec and and cmp pop inc sub or ss loop nop jo hlt adc add push (bad) sbb loope hlt and sbb dec aas sub icebp jb cmp (bad) mov gs xchg ss or jne bound add jb adc cld (bad) or push xorb add xchg sub lods mov or sbb fwait aaa pop jmp ret and aas jl dec pop inc dec daa pop sub mov dec push add jle push (bad) jmp xchg mov insb adc and adc inc sbb adc push int3 inc out sbb and lcall hlt xchg sub mov js dec adc mov cmp xchg jo call ss inc (bad) aad in inc bound adc test xor pop add aad iret add mov loope leave jne add mov dec adc jb aas mov incl mov xor xor push mov push sub sbbl sub adc xor pop or test jmp xor inc mov jnp add lock and inc shrb lahf add aaa js sbb adc adc mov cmp inc xchg arpl stos insb iret cmpsl pushf movsl push lea inc inc and bound subl and sub adc push or arpl popf push arpl aaa leave dec push sub sub sub xor dec addr16 dec add xor xchg je adc std jge std rclb cwtl imul adc cmpw sti sub jg adc fsubs call mov inc mov or movsl dec cmp aam and cmp dec call iret roll in (bad) mov andb mov adc nop out cmp sbb es add fiaddl mov (bad) les push jl xchg outsb push and xchg or or fst ss rorl out ret dec xor addr16 movb inc jecxz cmp sub popa addl push adc cmp jne xor lock mov mov lcall test ret lret mov mov ret loope or ret test out jno push xor in aam add dec test outsb lahf outsl and sub fiaddl movsl push push sarl jbe lahf dec and jnp lods call jp popf adc xor ret pop aam ret adc push dec or nop imul mov xchg pop loopne and sub inc je dec dec call push sbb xor or mov test dec mov or stos jmp shlb lahf push fdivl (bad) mov inc add sbb add xchg jne add adc lcall jmp add push add push add pop test das or add out repnz insb push movb add subb dec pop xor pop ret mov ret pop outsl mov mov cmp jle mov out dec lock push or dec dec adc adc jle lcall dec dec or cmpsl mov es mov sub jne push push sbb add push add cld roll sbb cmp push jne cld add add fs int3 aad add inc rcr jo mov dec pop outsl jl (bad) mov insb and push xor sbb or mov (bad) fs mov or cwtl cwtl loope push pop push jo mov bound xor cmc ljmp push add mov adc and js scas shlb pop lods inc mov mov pop or xchg les aad push subb es mov push jl jae out pop dec (bad) jbe cmp sbb jp pop push in pop nop (bad) mov push mov adcl push insb ret outsl test subl dec lock testb mov adc adc dec daa or xchg or push xor add iret adc shr dec sbb xor fsubrl xchg cwtl ljmp mov xchg mov jp in mov inc sub xor push xor ret xor test sub lock nop push sub add cwtl hlt or dec js push dec push mov sub enter js push pop adc cmp sub out add sar sub xchg and in mov push xor mov pushf lds sub add (bad) fimull nop mov inc arpl (bad) shll push pop je or lret cmp cmp cld int3 push clc fstpl inc mov fs lods push or push fs cmpl mov or push cmpb or pop add fsubs dec or loop and pusha or or inc cmc mov lods or and jne sub add pop mov jo iret leave roll xor aas sub xor inc jb or cwtl rcrl or sbb (bad) jb popa xchg es movsl (bad) dec or ret push aaa adc fwait cwtl jae cltd test icebp mov (bad) out bound add adc jge add adc mov js and mov mov (bad) shrb or adc mov pop insb mov sbb push inc cmp dec scas ss xchg add (bad) cmp popa sbb sub sbb call sarl xor das enter push mov dec add mov jg mov add std inc jg mov jmp jg add mov push add insl cmp push add mov test lock insl add orl dec sub sub nop xor clc cmp iret xor and xor fwait out sbb add (bad) sbb in pop rolb je add jmp bnd (bad) arpl jnp push aam int3 push cmp faddl pop dec jl rol or mov stos andb imul dec push push dec test (bad) push fidivl add call pusha clc add jecxz jmp sbb add add pop pushf or daa adc out pop pop cmpsb lock pop dec push mov push sub mov sub outsb cmp js push adc je or push add daa lock (bad) dec in jne mov lock inc pop adc inc movsb sbb sbb mov adc daa jmp imul xchg movsb add insb rclb daa cs ret movb loopne jmp leave xor xchg xchg out inc movsb sti adc inc jne xor mov dec cmpb fwait (bad) cmp push popf mov inc sbb and mov lret lahf mov xchg mov cmp ret movl xchg call stos adc movsl push xor or xor xor pop je pusha and shrb and (bad) ja xor inc sub xchg and or bound sbb and inc pop and inc add bts jo push or subl and add mov adc mov or adc sub orb push loopne (bad) jbe test sub andl arpl jo in add fs mov adc add test mov jle sti push inc movb xchg nop jo dec movsl xchg je into adc push dec jl dec insl push cmpl jecxz add xor pop pop mov pop rorb pop cmpsl in mov mull jbe cld push jne (bad) jo mov and sbb mov mov and pushf test mov xor sub dec jb mov and mov xor ret inc xor pop push push notl cmp jmp into or enter insb shrl xchg xor jnp js or imul bound adc push jb aaa or ja test xor jnp xchg jns cs insb mov imul popa test adc adc adc jb dec mov vmwrite loop pop mov push mov mov jb and repz pushf (bad) jns sub sbb cmp setg jmp inc mov pop jecxz dec dec inc add cmp setle cmp lcall inc mov adc sbb cld push imul mov xor mov cs xor mov sbb sti cli pop push fsubrl cmp sbb xchg jnp adc stos je adc xchg out lock sbb dec jnp xchg mov inc jo lcall shlb pop xor add mov test ss add inc adc (bad) xchg nop (bad) xor incb sub rorb jmp aaa adc in scas xorl negl push aad jae mov lahf sub mov xchg inc pop cld or xchg mov call insb lock add mov popf (bad) or dec addb pop jne aaa pusha inc in and push sbb aad or dec fsts adc subl dec sub aaa insb inc loop jl push sub mov or mov pop or mov or sub fisttp add pop add (bad) xchg cmp lds scas dec jnp cmpsl inc and cli dec mov mov sti cmp dec jbe gs or sbb add jle xchg jge push or or fs add insl in adc push sbb mov jmp push sbb xor push push adc daa rcl and ret push mov mov add jbe mov push inc mov cs pop lcall cli add jns out lcall push jae jp jo sub pop in popa sub mov mov mov (bad) in inc bound sbb test inc fldl fidivrl hlt mov arpl cmpsl push jbe sub mov pop subl push cli sbb cmp jne mov lock test daa test add mov jg push mov adc and adc icebp cmp je xchg dec or dec push fildl or add (bad) fs jge adc sbb dec lret (bad) in xchg fadds aam sarl iret dec mov clc cmp mov sub xor hlt testl jg loope daa arpl ljmp pavgb call mov fwait jns (bad) xor (bad) fcomps xchg adc test cmp jne push inc or pop xorb adc xor addr16 lock or pop sub adc loopne add fldl scas lds aas push cmp pop lret sub pop sbb pop out xchg sbb movsl cs pop inc jp fimull mov sbb add push cmp dec mov xor inc jb adc dec jp lock cmp inc in and jmp push pandn cli pusha nopl xlat test repz hlt lea imul clc cmp cli (bad) pusha push out lods jmp dec dec call ffreep push xor popa dec mov jne and aad rclb ret movsb sub xchg cmc jnp sub xor inc xor push icebp xchg adc push mov xor inc push mov sub shrb lret dec sub fbstp (bad) adc add icebp jbe xor add pop cld pop adcl xchg cmpsl sub or pusha mov sbb jmp mov imul rcrl mov dec jne mov or mov rorl sbb mov das nop das add add cmp (bad) or xor je inc adc fsubrp inc nop push xor pop xor lea push xchg mov into jg pop add das leave jbe jne push insb sbb or add hlt out dec push pusha lea dec xchg imul xchg jmp sbb fidivrl movsl daa mov (bad) (bad) bound fwait xchg jne test daa pusha cwtl lcall mov mov lcall sar sbb movsb je jne dec xchg ja outsl sub sbb xchg js jecxz mov clc xor arpl sbb xor dec ss rol or arpl mov push call jmp lds (bad) iret inc sbb or cwtl (bad) jbe jge dec add test loop xchg sub arpl mov cmp stos (bad) mov sub inc pop fmuls leave les xor aas and sar push in imul add push or pushf ret mov aas sarl and jmp jge daa xchg call rcll lret mov push loop sbb mov pop sbb add or add or adc lods cmpsb cmc dec mov sub inc dec test xchg xor enterw and sbb jbe xchg dec push jno mull mov mov add cmp cltd mov (bad) and sub cmp sahf and push cmp ret xchg in popa push sub xchg sub in loopne out fimull (bad) inc jp shrb inc and movl cld and jo sub je orl add ret adc call or dec cmpsb imul or pop inc sub jle adc inc or or outsb add xchg or add sub mov sub cmp inc xor sbb pop push cmp inc lds dec popf mov sbb aad out ret aam cmp call mov inc out call xchg nop aam testb sub pop add rclb and inc stos test jp in inc push test or sbb out mov lea (bad) pop clc inc pushf mov rcrb add test mov fisttpll xchg push inc xor and mov (bad) aas mov dec cwtl dec shrb pushf data16 add out xor stos or mov loopne cmpsb out push mov fcoms and sub mov xor sub adc jp sub add xor iret pop add outsb clc sub and mov fwait xchg jbe lds xchg adc int inc jecxz inc push and mov inc lret rep push fildll mov xor sub in mov gs mov dec lcall insl push ror jae mov pop jge xchg cli sbb fist call cmp les mov out mov adc pop pop hlt mov stos mov jo xchg je add or scas pop aaa sub (bad) sub fnop add jg or mov mov popa jne loopne lea in sbb or jle ja les (bad) leave out enter test test sbb pop ss cwtl inc addr16 fcmovbe stos aas lret (bad) pop xchg mov mov loop pop arpl jmp cmp (bad) pop hlt rolb xchg jmp xchg and push rcr inc insb outsl test int inc pop icebp add pop repnz sub jmp mov shl nop xchg leave sbb inc mov mov inc pop ret add repnz xchg sbb outsl jmp push shl fadd aad fdiv cli mov xor pushf add lahf xor ss lahf addl inc arpl sub add push ja or mov mov in test or push lea ja mov inc test leave lock jbe outsl je (bad) out and ret jmp mov leave adc adc nop xlat push notb xor movl cmp sbb call int3 adc inc ret inc test pop mov mov adc cmpl sbb push push jo xor lds sbb add shll pop sahf inc cmp (bad) je dec mov fcmovne je sbb mov or lret dec sbbl (bad) jbe cmp add loope rcr jmp je test hlt sub out mov xor add pop aas pop data16 fcomp pop dec cmc js mov je out (bad) mov aad arpl inc mov jl mov mov add sub sub mov pushf push nop push add sar daa jg imull mov mov sub ja rclb sbb mov adc ss xorl push cmpsl mov inc lahf push add push inc sub (bad) fucom sub dec mov push pushl add pop pushf push hlt rcl movsb mov js add cmp jne push rolb and cmp xor and mov loope enter sbb (bad) sbb es or (bad) pop add test lea lods adc mov mov insl or jecxz shll popa and push dec jp inc mov add xor les shrb inc enter adc stos mov gs dec (bad) pop loope push push fwait adc mov sbb sbb (bad) sub xorl push sbb lods sbb push inc sbb or pusha lods pop in adc pop das mov daa loopne daa push cmp mov loop pop adc je push pop and lcall jo jge outsl and jb or mov (bad) insb idivb popa iret sbb (bad) jmp (bad) mov adc jne ret add xor inc in inc dec add mov sarb lcall cmp test xor mov aam sub subl sub xor fs mov dec es adc and mov (bad) and inc ss dec shrb and les xlat pusha sbb lahf xchg mov test push rcll into sahf std test jle jb add jmp jle rolb (bad) es pop cmpsb test into lret iret push in fs sub jge pop fnsave mov add jge cmp sbb mov push pop xor cs je and pusha jno out inc clc or sbb insl add (bad) mov lcall sbb xor and or jno addr16 call xchg sub pop push adc imul in nop orl dec add rorl inc addb addb insb or inc imul arpl push inc xchg adc popa popf fnsave insl mov sub je out inc js inc push adc cmp xchg inc xor push movsb add jne test and xor fdivrl pop inc lcall xor inc pushf or lahf es mov adc xlat push sub push sbb mov and das loopne cmp mov lock stc push push and call mov aad and (bad) fbld pandn bound xchg loopne call cmpsl je mov sub icebp mov add or mov adc nop inc dec mov or je xor adc sbb sbb cwtl pop clc mov sub dec jge sbb or lods inc cli xchg inc stos adc xchg fs arpl cmpsl fs imul clc add in and stos shll add jo dec push push flds mov mov cmp push mov xor das ret lock dec unpcklps inc mov mov icebp mov inc test addl ret pop dec (bad) or cmpsl xor imul mov or in ss dec jmp cltd inc jo adc jmp test jp inc add test bound aam push negb pop rclb (bad) push mov loopne roll das js (bad) pop sbb mov inc loopne xchg cmp and (bad) jno lcall (bad) sbb mov sub cmp inc mov cmpsl xchg sub clc add add inc ss pop jmp imul js scas and stos pop test add sbb std mov movsb mov dec push movsb sbb add mov lahf enter popf jl dec xchg pushf or dec or pop mov jns jo adcl or sub rolb adc ret xchg nop fwait dec loopne sar data16 sbb xchg sbb jle or lods neg outsb sbb mov inc dec mov cmpsl fcoml and push movsl leave pop or imul rorl daa addr16 pusha pop in inc add nop inc xorb jg nop dec pop sbb mov and push push add movsl shr push jae jmp repz cmp mov inc xchg jo sbb add push inc inc dec jl or loop mov push xchg movsl mov adc or loop (bad) xchg sub icebp cwtl and push push or and sbb loop add add adc adc je sbb adc jo pop iret fisubl sbb out inc inc push fs sbb sub fadd gs out adc aas mov adc lods shr sbb adc inc test rclb faddl xchg sub outsl ret adc inc dec bound jmp add repz aas test mov (bad) xchg add jbe (bad) mov and xor add hlt cmp repnz cmp inc data16 push daa push dec mov (bad) jae mov test test (bad) loope ss or push sub je movswl inc test xchg (bad) jmp cmpw add test sub in mov aam pushf int3 cmp pop push xor sti bound inc scas daa mov pop daa inc loop inc mov movb insl xor mov push adc stc popa jle xchg repz or xchg repz (bad) imul dec pop lcall test and xchg test sbb jl cmp fistpll add mov xchg adc movsb jne lcall bound jle je gs xor push ret ret dec cmp and xor dec dec movsb in fwait aaa inc or xor in (bad) mov les (bad) lret dec in enter inc test add hlt or test cmp pop gs xor xchg jbe aaa rcrl (bad) lret daa in pop shlb jne sbb ds mov add movsb stos push sub ds ret pop mov xchg pop mov clc sbb addl cmp jmp in adc cmp xor lods shrb and or xchg nop push inc or mov aaa sbb div and rclb add jne sbb clc mov push and sti cmp dec gs lret shrl mov scas aam in dec sbb dec lds pop stos xchg out movsl aad jg sub dec (bad) (bad) popa insb push addr16 movsb and jl sub push lret daa adc add nop cli and add fisttp adc xchg jne addl ds rcrl push rorb cmp in sahf cmp minps sbbl jne jle dec test andb dec test xchg push pop js and aam js push dec outsb mov shrb xchg xor cmp (bad) (bad) mov sahf inc mov scas mov test adc sub and das sbb mov xchg add sub mov add add (bad) sbb xor sbb mov pop push pop push clc dec test cmp or mov cmp inc add lds adc fsubl push push or xchg mov sti pop cmc push ds adc enter cmp test or dec mov add inc mov inc mov jp loop dec add mov imul ja dec mov rolb ljmp lock fsubl add xchg sbb push fcomps cltd and pop cmpsl and xchg fisubr sbb cmp push mov cli ret nop mov test inc popa adc add sbb sub test mov or cmp or dec sub pop pushf xchg xor lods sbbl push mov ljmp xchg mov add mov aas sub add push loop loopne sahf add xchg push iret push push adc aam cwtl inc mov push inc pop (bad) xor add mov add push jbe lret push xor mov xchg outsb jmp add (bad) mov (bad) rorl dec add adc pop mov icebp push xor rolb dec in push and (bad) fstpl popa shll cmc or sbb dec and add outsb fist je adc bound adc add pop inc outsb or or adc cmp pop mov push in pop sub or mov or stos push xchg pop push sbb mov aam retw adcb push pop adc pop aaa or or adc pop ret daa addr16 cld add movb test jle sbb and xor aas push (bad) pop ja mov mov dec in pop icebp ds scas mov sbb jne std js xlat out jo adc jne (bad) mov adc cli xlat xor xchg sarb inc cmp (bad) aas les inc data16 outsl hlt pop outsl adc fisubr push mov xor cmp das sarl enter lds rcrb or push dec cmp inc movsb rcll test sub add pop in mov pop mov loop icebp sbb add jg popf cwtl inc stos stos rcpps and cmp add loop pop mov (bad) rcrb push pop mov push je mov inc mov dec into xor dec xchg pop subb test and outsb xor dec ljmp or dec rclb pusha sbb loope mov push cmpsl dec mov movsb sub les cli jo push jmp pop pop outsl ss loope mull push xor mov cmpb ds push pop je dec and popa or rcll push add jp das lods or jb hlt sub pop test mov xor idivl mov adcl into jnp fidivrl testb jb adc cmp jg sbb ss cltd (bad) pop inc mov pop push out push rcrb add jne mov push add adc call ljmp push je sbb aam xor add cltd (bad) fsts dec arpl dec inc inc adc adc ror pop out sarl movsb (bad) mov dec jl dec sbb mov mov rclb mov inc pop xor xchg sbb mov movsb sbb test mov test movsb lods dec lret call xor lret clc (bad) outsl pushl inc add clc sbb add shrb or je and pop jmp add adc nop cmp mov fwait jb addr16 out and ret inc in inc push mov push push xor add add jbe daa adc popa add xchg outsl inc les pop (bad) mov push sbb jmp and cmp adc cmpsl movsl cmp adc test push sbb xor add fnstenv and inc stos sti lahf (bad) and inc jo pop and test jecxz xchg repz or sbb mov mov insb loope jne push add sub jmp pop jmp jno adc movl sbb xor (bad) jne xchg inc adc popf push insb dec sbb test pop insb insl push mov pusha sbb icebp and xchg mov inc out jecxz lcall mov scas into das popf sub inc add dec arpl dec je out inc adc (bad) push push cmp cld mov mov (bad) sbb dec ss cmpsl sbb ja hlt loopne add jl adc mov sarl sub sbb adc dec add fmull dec fdiv mov inc mov xor es push and jnp sub or jmp lret add jmp ret out cmp out add push inc inc adc rclb xchg int in xor sbb cmp fildll inc mov xchg (bad) cmp sarl sarb inc sub (bad) cmp inc xchg lock dec ret xchg sbb imul pop pop ja dec test xor or mov xor mov jge sbb dec clc pop popf jmp sub and daa push sub std popa pusha pop out test cwtl sub (bad) pop sbb push jo mov (bad) or cmc lret add or (bad) mov lahf xchg mov pusha mov popl push push ret mov std je push das push test sbb sahf sbb or inc sbb pop mov (bad) jg cmpsb lret psrlw icebp nop cs and push scas pop sbb push ja imul loopne push aam cmpsb fistpl hlt sbb cltd jo cli out pop ljmp sbb add jnp xor aaa pop or popa add add adc dec inc push adc sbb fistl add addl jne xor pop adc xor push test push fisubrl jne (bad) stos xor lahf inc rclb pusha xor (bad) jmp push sub (bad) dec or pop add imul fnstenv push adc lret pop push pop sbb xorl clc js xchg xchg loopne clc mov and pop adc inc inc pop inc mov (bad) mov sub pop scas push add mov mov and or fidivl es les jge lahf dec fcmovb test mov lock jge xor cmp xlat push lahf (bad) daa add outsl xchg xor sub pop inc (bad) adc pop loope inc nop push cmp jecxz inc add cmp icebp pop adc subb stc mov dec adc dec fcompl (bad) push and adc sub test sbb cmpsb mov push add mov adc ds add pop js mov divl into cmp adc mov jp jo out push pop lret pop adc or out push ret and (bad) je cmpsl movsb xchg dec mov xor (bad) (bad) lret sub add and mov cli or inc cmp sub adc pop adc push pusha mov cmpsl das mov jl pushl mov les xchg rorb add adc xchg add or out and mov jns inc adc in movsb sarl xor das es sub enter notl fstl scas mov cwtl dec test add (bad) push inc sbb les cmpsl incl cltd push outsl cmp and add mov mov cmp xor xorb pusha dec jne aas or cmpsl in sti nop adc js (bad) stc or adc cmp das pop daa mov or inc cltd dec pushl (bad) sub add sub imul sub neg mov xor xchg jo punpcklbw sbb (bad) xchg or add pmaxsw lcall pusha dec mov adc xor sub jge (bad) clc add sbb xchg test dec hlt dec push jle loopne sbb repnz add mov cmpsb mov into (bad) iret sub pop shrl jno cli jb add insb fiadd push mov and and dec aaa or or in push add icebp xor or push mov (bad) mov push sbb test push push cmp push dec add or pop in and out push pop inc push clc mov adc adc or xchg hlt mov pop or adc je xor or xchg adc jno inc adc push sub rorl movsb jno and push and test mov imul adc mov inc ja jb inc cmp sbb scas sub sub shlb andb hlt ret shrb adc clc clc movsl cmp in mov int or call dec loop repz sub int3 fmul mov test scas inc loope jl inc bound lcall bsr mov inc xor mov push inc fsub ficoml test (bad) clc push pop pusha std adc or push movb adc add cmp add sbb cld xor cli jle sbb sub inc lcall sbb loop (bad) into shrb inc jmp pop add iret sahf clc or rcll add (bad) cs mov out mov dec mov inc clc clc rcll inc cs mov dec mov push dec or pop add fstl sub mov cmp gs mov jmp inc aaa mov mov sbb dec dec or loopne adc loopne das cs mull push mov adc sub add add dec sub sbb fmul dec dec jbe xlat add mov and pusha loope fmul adc jmp xchg or aam jle ja adc into inc dec add test mov (bad) (bad) mov xchg (bad) xor loopne js jge cmp jle sbb cmp and mov rcrl data16 or mov fdivrs enter daa xchg outsb xchg or dec les pop movsb or cltd cwtl push rcll push sidtl mov fadds mov inc push add aas add mov out insb insl pop enter movswl ja xor xor mov test pop jo inc xchg outsb es jge dec pop enter push roll ds mov add jnp pop add dec (bad) pop adc cmp cmpsl mov jbe fsubs jae sbb lahf or inc data16 pop mov add vmwrite xchg mov push sbb dec push mov pop mov ja dec pusha sub (bad) hlt sub lock xor incb aam xor mov dec sbb xlat leave or (bad) in loop insb test xlat out push xchg into inc (bad) lock ret ret adc imul jle cmp or lock mov add push pop adc dec rcrl test fcoml jae aam hlt add mov xchg hlt mov pop adc sub mov cmp push dec push imul dec nop xlat or mov mov fldl push in daa movsb test fwait add scas and out sub dec outsl push xchg adc (bad) push sbb lds adc and lret add sbb mov div sub xchg insb add adc pop gs jle rclb or mov fist mov insl in adc mov push jb push daa jnp insl push ret lea outsl (bad) dec test and xchg aam dec sbb push sar hlt sti jne sbb mov pop inc push dec lcall aam iret and xchg in (bad) push ds sbb inc pop or sub ficomp inc jnp,pn dec sub ds aam add adc aas iret add test (bad) (bad) push cmp lcall (bad) jo movsl adc fidivr cwtl adc jp add js and (bad) or mov xchg movsb pop dec fs daa jg mov sbb mov andl fdivs push sub les push xchg mov aam add mov jns push adc cmp sub mov push aas sbb imul js nop adc addb push xchg cs add lods sub jnp pop add pop hlt add jecxz fild inc mov xor mov add adc cmp add imul add test cmpl or and cmp lret gs out jmp lea adc mov dec mov add or leave jmp fwait sub add xchg add imul mov push dec repnz out add sbb dec (bad) lock cmp jo push mov scas lods dec inc pop add mov jne mov dec inc push mov push add jp and in scas popa stos cmp imul dec push xlat push cmp jl movsw rolb push cmp jecxz or xor mov adc addb mov jo push addb lock add lea sub lods test pop nop insb xchg inc lea rclb dec sub sar sbb adc call repnz je popa mov mov push pop aaa or ss pop (bad) xor (bad) in pop scas cld xor sbb andl hlt add and jne jb xor sbb sbbl adc (bad) stos push add or repnz add or inc add test and dec mov push add sub cmpl sub cmc adc pop push fiaddl push jae or or mov or daa mov iret mov add fadds jne (bad) jecxz sbb (bad) mov jge cmp popa arpl inc push add xchg cwtl add loope xor pop dec inc xlat and jo jecxz cmp (bad) adc cs enter lret addb hlt nop dec ret aam pop mov bound xchg insb sub adc cmpsb xchg dec inc in ss lret and gs call lcall jle pop sub hlt (bad) hlt push pop scas lods adc cmp test or (bad) arpl adc clc cmp iret pusha sbb jp cmp icebp or dec add sarb push jb test add add sbb adc add inc mov jle lods push test bnd stos out and call add sbb push inc mov test or and sbb adc jae imul mov sbb or int mov or lds xchg rolb add mov loop xor xchg push dec dec mov das sub cmpxchg add add jmp cmp std mov ds add inc jmp mov sbb fisub mov mov mov ja call bound jecxz and or sub enter mov (bad) push in xor add cs hlt mov push inc sub add out or push cld movsb packssdw jle mov push or push fdivl mov add push sub inc mov adc adc add inc mov sub fsubs inc pop ud2 sub xchg lock jnp inc je mov xchg mov push push cmp mov inc push push sbb dec hlt xchg mov push add jmp inc jb popa push loopne imulb js mov adc jmp mov arpl cmp pop ret movsl pslld ret cmp xchg adc jg fimul je jo dec ret lret mov test mov dec add inc jmp pop push push xchg data16 out popa sbb xchg xchg fstl pop and or mov ja or roll iret iret nop test dec xor add shl shrb inc dec pop call push in movb xor (bad) pop dec dec xor pushf jo ja mov cmp lea or nop push jg add xchg mov (bad) (bad) pop ja sbb adcl not mov inc aaa rclb les xor dec leave dec and call popf rorb dec popf mov or gs pop or mov jle xor sarb inc cmpb push sbb inc les sbb add mov dec push adc test clc xchg mov sub mov icebp push out sub adc imul pushl mov jmp mov push xor add daa shr adc push jbe shr pusha loopne push cmp test cmp sub sarl jne fstpl jmp xor andl (bad) sbbl add iret pop adc pop and jne adc mov imul add mov ds push jno add mov or xor sbb (bad) xor push rcr xor dec popf jno mov sbbb mov dec pop sub cld jne nop negl cmp jne into inc das add sbb mov jmp ja test ljmp mov fwait jl stos mov push (bad) in pop xchg sub jmp aam ljmp adc fs jp inc ret cmp push sbb and sbb rolb pop and inc adc xchg and outsb add fwait pmulhw imul fs or pop mov xchg add or aad mov fcomp mov loopne addr16 add daa or push xor sahf add enter rcll es push sub add int3 ror test pop sub (bad) ss lods sar lods xchg daa push xchg (bad) prefetch out hlt out mov pop nop clc mov xchg xor fwait andb push push aaa in shrl mov sbb std popa inc inc jl add inc js mov xchg outsb mov jno inc dec fstpt daa call mov rolb test mov js stos mov dec push jno add hlt adc nop in popf dec sbb jp push test in fadd sarl adc (bad) xlat push push aas fdivrs lock ljmp and rcr pop pop sbb pop mov fidiv imul (bad) dec jno push and popa (bad) xlat je inc adc push xchg xchg push je clc pusha inc scas gs fs shll xor andl add add jl jmp lret pop js test push pop je icebp int3 sbb or cmp scas orl mov adc loope icebp js test or int3 and mov jle lods jne pop xchg call cli and pop mov xor inc or lods fwait ljmp dec (bad) ss xchg out jl daa inc clc insl lahf fbstp jle adc jecxz out cmp (bad) scas leave mov mov pop clc add xchg and pop sbb sbb or sub es mov xchg cmp jo mov pop jle sbb pop cmp dec insb mov dec inc sub pop sbb les pop icebp and mull cmp fs sar (bad) mov adc lds push sbb fxch mov xchg cld adc int3 xlat and lds inc mov fwait ret (bad) daa and in fs test sbb mov jb inc mov lcall mov or cmp jbe ret add cmp inc and test mov xlat pop pop inc mov xchg or add mov pop jne nop jecxz xchg sarb ret or addl incl push dec insb cld test pop mov or loope push add inc xlat or inc fdivr aad insb or clc add test imul out xchg enter or scas or test and add clc xlat xor (bad) inc xchg jo push sbb jbe call aam inc bound pop mov xchg mov js imul xor (bad) sar cmpsl mov cmc jmp ja (bad) pusha ret daa in jg pop imul mov cmp cmp hlt shlb es lods mov imul aas add cwtl cmp test fs jns or mov fs inc adc inc jge sub sti or pop jp xadd mov cmc nop test jl cwtl sbb xchg mov mov add pop shlb add sub rol roll je pop xor push (bad) mov lret xor inc cmp mov (bad) xlat adc ret add add dec fdivs sbb sub cmc repz xchg data16 add sub fistpll dec jne mov xor push and pop cmp in jmp fcomps lock or mov lcall inc push xchg and or cld test into push fidiv mov cmp adc add sbb popa dec xor mov int jmp notl int3 adc jbe sub push js mov sub pusha mov inc insl loopne test iret cmc test mov push fisubr or inc dec and dec loopne je xlat andl pusha add or rolb out mov cwtl test push dec mov jmp inc enter sbb cmc inc dec add lock push pop sub xchg adcl lds orl push popf imul and pop or or lcall mov aas pop adc rcll push mov xor jb fcompp bound js jmp mov dec (bad) xor add js inc sub daa (bad) and das push pop dec push sub mov fisub negl sub push xor pop cmp add mov (bad) xchg adc xchg sub sbb sbb or adc loope pop aaa enter inc in inc icebp pusha popl xor (bad) shlb sub xor js pop movl and jle rorb add inc in (bad) xchg add cmp (bad) aaa sti pop imul out adcl aam (bad) clc sbb fidiv (bad) xor push cmp testb clc aaa mov mov sub aas mov adc (bad) add xor and add outsl fisttpl pop push ror (bad) jg pop jg cmp add xor (bad) adc inc add pusha push and fadds push (bad) js lods jne movsl repz nop mov mov sbb dec mov and cltd mov test test loope xlat inc sar push adc leave dec dec add sbb xor add enter add clc dec inc and sbb mov lcall movsl mov cmp rcrb sbb or frstor xchg enter rcrl dec xor xchg rcrb mov and sub xchg sbb lock mov sbb dec popa setno push jle ds xor cmp ret pop scas and or leave sbb jecxz or ja xor sbb inc negb in pop int3 test rcrb jge faddl adc push and lea xchg add bound pop inc mov pop inc jns sbb sbb ljmp clc lock sti std cld jne sub push lock and push pop inc jo add data16 sbb pop add fs and insl pop mov ret test add xchg popa mov loopne jp enter push jmp sbb shrb push mov or inc sub dec imul or push xor xchg sbb cli in pusha cmp push push pop sbb (bad) xor (bad) negl js or repz rcrb cmp mov add jg test add js (bad) mov add sub add mov popa test adc dec loopne ljmp pop popa xor pushf or mov mov and lods mov mov xchg fmuls pop adcb add lret dec and dec cmp add push (bad) ja std lock mov inc jo enter ljmp pop inc add xor repnz gs aam mov int or jmp inc inc fcomp sub inc mov push mov cmp pop cmp add dec or sub add stos adc xchg fcmovnbe nop xchg cld fsubp or inc loope ficom shl subb xchg fildll insb loopne (bad) ret sbb mov cmp data16 cmp arpl mov ljmp in out push adc sub inc call xor in dec push les lock and out roll jle rclb pinsrw ficomp out inc sub loope jne nop jo enter cwtl sbb cmp sub and xor aam (bad) aam dec or mov add sbb and bound loope or add xor pop and mov idivb xlat or or mov sub or mov or add adc inc orb arpl pop mov dec dec movsl and add or cld sbbl sbb xchg mov pop or insb lea es push fst mov jne add hlt add or iret popf icebp ss add pop out xor push pop xchg dec fcomps ss jbe int3 cmp dec cmp jne or in repnz push sbb fildl jmp fs fs test pop xchg or inc pop push xchg and xchg rorb adc adc cmovge cwtl fdivrl xchg inc pusha arpl in sub mov pop pop lock pop xchg xchg adc push stc addr16 lock push scas xor loopne pop xor mov nop and (bad) push add insb add sbb or fsts test jp push push imul jb cmp and push xor outsb das sbb mov sarl lret push xor (bad) adc mov jnp pusha mov ret push adc sahf adc testl fidivr xchg into movsb push nop enter lcall push pop or and out sbb imul and pop push int3 sbb mov pop pop sub fstpl or jno cmp ja outsb roll das (bad) sub sub mov scas or (bad) ja mov pop xchg add fs test jl mov sbb jbe adc mov adc pop cmpsb push sub sbb xchg pop mov dec dec scas and lods ret movsb ja sub xor sub mov mov jge fsubrl push inc cmp pop ffreep push jb sub pop xor fldt push test add inc dec pop (bad) lret lahf sbb dec mov sub paddb pop xor sbb aas clc jp int push mov (bad) icebp pop cs cmp pop xor dec bound xchg mov popf (bad) push lea inc fwait in xor push ret jmp imul adc mov enter sub xor or and xor sbb movsb sbb sub push sbb test scas lea sub arpl adc or push adc rcrb pusha lea (bad) (bad) mov pop je rcrl hlt in add and push push (bad) mov cmp mov in cmp or and jecxz lock lea adc sahf out arpl push pop nop loop jmp dec mov mov add mov cmp jne pop cs out push loope sub dec jmp mov or xor sbb push sub add lock push lret imul mov sbb popa cwtl loope jb push pop or adc cmpsl push jno and xor icebp add push pusha fs and rorl mov pop push xor push flds decb cmp dec pop imul add out mov sahf pop subb mov pusha jb jp mov pop add cltd in or add andl add xchg and and popa fisubl (bad) es hlt je fs adcb adc push dec jne les and rol mov xchg pusha inc addr16 inc rorl xor jl mov adc test lret mov (bad) adc cwtl and xor push adc enter repz fstp add cltd xor push adc cmp xor add rol fildl and leave lret mov push push dec dec push arpl pop sub frstor popa xor in mov enter jle dec push call xor sbb (bad) icebp test jmp or mov adc xor imul (bad) jo mov add fistpl mov mov stos add testb clc push std mov outsl scas inc mov add adc or and sbb ficompl and shrb pop jge jle jl xor dec push xor lock fsubs mov sahf es push push call jg mov scas sahf mov push mov lock mov jp and sbb push sub sbb jb call pop push cmp insl (bad) jl adc inc mov sub dec xor ret and push (bad) gs in pop adc pop or jmp insb in jg mov cltd jbe add xor test ds push pop insb inc cmp sub loop mov sub cmp (bad) popf jbe mov pop fsubs cmp cltd fildl nop insl pop jmp sbb sarb sub inc pop das fadds mov add insl push (bad) fimull and incl js xor clc (bad) jle pop lret and push add lcall mov roll inc and mov pop jmp push push test enter adc movsl pop jg clc dec ret nop or pop mov je addr16 mov pop cmp jl or dec pop mov lcall jg jmp and adc push push push mov and jg inc mov mov add add (bad) and call imul and sbb jle ljmp or dec scas insb pop test adc test movsl mov cmp sbb fimul inc inc dec in in jns mov outsb pop aas xor mov cmp mov fldt push jae pop push test lods mov adc cmp xor shll ljmp and push flds jbe in icebp popf hlt xchg sbb outsl mov jne cmp loopne mov ret or cmp ja add xchg add or popa jecxz dec mov pusha mov pop xorl pop adc sti mov and and pop sbb jno jo adc popa js lods out pusha arpl bound mov sub adc xchg lret xchg inc test pop fidivl mov jecxz sbb pop push ret addl or add rclb sub and aas sbb add ret divl dec cld inc mov inc mov ds or scas push das and inc xor push xor loope inc push lret inc sbb cld out sbb cltd loop add out cmp inc pop xchg pop (bad) movsl xor mov jg push (bad) loopne loopne inc loopne ljmp (bad) pop data16 movsb int3 (bad) push inc dec xchg mov jmp add inc js lea xchg or jmp ret movsb push or sbb push incl xor cli mov popl inc or and pusha or jge pop jbe add push daa jg adc dec in push cli cmp jge inc or mov mov mov test das or (bad) pop ljmp leave push test clc lea fsubs push cmp inc mov push sbb adc push (bad) cmpsl xchg lea inc js jmp pop or pop pop hlt cs push fwait (bad) mov pop xchg or aad cltd push aaa adc mov hlt dec mov cli in fildl or and push popa and (bad) jo insb jmp adc cs out and sub mov shlb mov xor imul sub jmp pop cmpsb loope (bad) cld xor repnz cmp push xor cwtl es popf pop push fmull cmp mov add jnp je sub lcall mov sub lret je,pn js pop mov (bad) movsb jb xchg andb lret mov push mov xchg and xor and or dec jbe push push mov dec mov insl or sbb dec push inc mov pop push gs push (bad) mov mov inc mov fs das push divb xchg inc loop adc insl jo cmpsb (bad) dec sub inc cmpsb xor out arpl mov dec jae pop in fcomps insl mov cmc sbb push and adc mov movl adc xlat add mov push fcomp adcb mov enter mov jge inc addr16 jl or add push mov rcrl xor sbb insl enter jmp push adc mov loopne popf inc sbb mov outsb mov sti test adcl xlat inc xchg adcl je loopne adc pop lahf jnp xor pop sub sub insb xchg or dec pop mov sarb sub xchg xor sub jl sub or cmp arpl jg xor (bad) push rcrl push mov test sarb (bad) push mov daa or and dec ret imul fwait mov shl mov fcmovb mov adc or sub xor dec jbe iret nop cmp in and adc add push ljmp cmc mov add mov sub pushf pop (bad) iret push fsubrs aas xor cmp xor mov test lahf push xor push jecxz inc sbb pusha or lahf cs lock sub pop or imul sti data16 aaa ja dec jb inc outsb pop inc add inc lods pop pop arpl mov sub aaa addr16 and mov shll imul xchg nop inc les mov sbb outsb movsb cmp push dec aaa (bad) iret subl jae mov mov setae mov push les pop add cwtl pushf nop add nop std nop dec pusha add imul shlb leave inc (bad) adc sbb inc test xlat addb mov out mov je (bad) out dec pop test push scas js adc lea push pop xor shlb and ja adc sar movsb fs icebp or or addr16 push sub jbe mov sbb add movsb ljmp adc push jb subl xor insb or push imul pop adc mov or fs add fildl jo inc push pop push push (bad) mov sbb dec les inc xor dec push push inc xor pop movsb std push repz add cmp bound cmp cmp push pop stc test aas pop sub mov sbb push (bad) adc push pop sbb mov add and pop and (bad) xlat inc insb push or repnz sub (bad) pushf xor je test popf push xchg jae cmp pop into fistpll sbb js lcall outsb or addr16 test add jno push repnz stos js arpl pusha inc pusha add or inc rcll lds fstl fs adc pop (bad) or or daa ret cmp sbb add inc or cmp aaa movl fimull mov mov push and pop add adc mov ret nopl add adc inc xchg add vmread push mov push sahf clc push or popa push lahf pop sub or pushf xchg lcall or sbb xchg jmp addr16 jno sbb fiadd inc jns pop cmp addb iret mov push in cmp repz lock clc cld xchg dec adc cmp add push fstl adc mov rolb repnz std (bad) sub add adc insb fstl in mov mov aaa ret jl sbb test das sbb xor cmpsb xor jecxz test rsqrtps addr16 sub dec jmp (bad) stc pop mov inc inc xor (bad) insb jmp jge sbb es push lea inc xor aam cmp add jnp pop push mov push add inc jo inc mov mov mov (bad) leave (bad) (bad) movsb jnp push xchg adc adc repz xchg add xor icebp jle ja add inc mov adc sub inc aas add lea scas enter lock sbb fs inc les inc addr16 mov sbb dec sbb xchg inc sbb mov push incb push or inc and adc or (bad) ja arpl imul xor and addr16 inc mov lahf repnz andl pusha add or lret aas fsubl jg ja jo aad fst cmp (bad) pop fs add sbb cmp enter mov adc test (bad) and push cmp jle jl ret out cmp add adc cmp js cmpsb mov pop inc les sbb test sub push and dec mov push rorl xor and ret inc scas mov imul int3 or (bad) push adc mov (bad) mov push fs inc out or rcrl cs call call into xor inc stc push and jg pop int ret (bad) sub cmp je sbb push ret scas jmp sbb or icebp addl sbb dec jg sbb and xchg mov insb daa test xor sbb push xchg push xchg jmp add and rolb inc je pop in cmp inc and push mov add sub push movl sbb sbb adc inc sub hlt test adc mov push mov sub movl inc xchg (bad) jmp or push les lret inc daa ljmp mov out jbe and push push nop pushf in or and mov dec dec out pop mov xchg (bad) sbb xchg das push je and sub adc dec jnp add test sbb cmpsl jae add mov dec (bad) xor inc dec or cmp cmp cmp cmp and popa mov ss daa xchg mov daa push adc dec or outsb test jge push dec out fmull jp sub mov push scas out push imul inc cmp add xchg mov loopne jnp inc call xor adc repz cwtl dec jne test testl cmp insb sbb dec std cmp into (bad) movsl inc pop jnp fs insl or cld je add adc cs insb hlt or mov ret roll movsb orl pop (bad) adc repz pop jns mov inc aam add dec cmpsl addb ss gs adc xor out aaa ljmp jo lods xor inc test out adc aad pusha call push into js int mov scas and aas test inc cmp jg in push aas jl add jl inc add sbb jne push mov mov in fs stc sahf fisttpl mov jg xlat imul outsb cmp (bad) sub sbb jns stc xor je mov pusha imull push cmp inc rcrb mov lea pop pop mov addr16 in adc or (bad) daa add inc mov pop rolb orl pusha pop jno cmc add pop mov cmpb imul xchg jg sbb or or mov scas icebp lods push sbb pop or sbb ret adc and and or shlb mov sbb push hlt add lods dec xlat mov (bad) out mov es decl pop ss jo adc inc sbb es xor sbb mov jb pusha out sbb aas sub or cmp out lods push pusha stc push movsb jbe mov les aaa lods push cmp add mov xchg push mov rclb ds mov insl bound test fs insl pavgb insb sbb cmp dec mov adc enter fwait scas jge in scas mov les sub and adc push jb imul aaa pop xor and scas pop cmpsl xchg add sub and je dec rorb mov mov push inc or push aas and dec push aas int3 movl and xor inc and push dec les das xchg dec and sub dec inc mov xchg inc roll test or inc push mov xchg add sub pusha fsubl (bad) xor jl cmp or jge pop in scas je mov dec (bad) cmp inc add jae adc inc jne inc inc or adc xchg mov dec sbb (bad) popa add mov (bad) or dec mov xor mov inc pop imul xor jg ret aaa idiv adcb and icebp (bad) mov sub cli pop sub jmp sbb dec nop push or add dec jl clc xor call out sbb dec sub push pop mov daa aad push pop cmpsl das push clc pop adc add sbb lods jne push pusha adc jo aas or dec xor ficoml mov fldl inc sub dec add or xor std xor jo adc and mov adc loop aas or jno pop outsl (bad) sbb jno cmp add (bad) pop xchg test mov shr cmp cmp push or nop (bad) insl addl lock mov es cmp jnp hlt (bad) mov cmp adc pushw add dec xor xchg sbb mov push scas insl mov mov nop mov movsb or pop inc rol inc xor cmp popl add jbe jg push pushf imul sbb push push int std testl loopne pop ret into lock push popa int3 jmp sbb mov out aam enter push ucomiss popf mov push push imul loopne repz fisubr aas mov icebp xchg jo mov fwait sbb lcall addl mov cmp push hlt sub dec inc movl fcmovnbe loopne test inc and add or fsubrs fsubs dec xor push pop push pop les push mov or add inc in xor stos sub mov inc cmpl jne pusha andl push cmp fsts push sub push mov pop loop sbb test push repnz iret ss lcall xchg test test sarl push inc ss sub loop mov add dec not inc mov scas cs jne adc (bad) loopne dec cmp add aam and xor xchg mov lods add xlat test nop sbbl divl or inc and leave xor repz stos dec outsb push pop ja test xor insl sbb in adc or jl shrb out or fbstp int3 divl iret in mov sbb mov sub pop call call sub rolb xchg and enter hlt mov leave xchg xlat inc mov cli pop pop in nop xchg leave (bad) sti adc insb test jne mov stc cmp sbb add dec mov mov or mov cmc push sbb push inc inc ret cmp or jmp dec adc and or inc arpl leave dec loope movsb jmp mov or sub inc pusha and pusha pusha rcrl push lods cmpsl mov arpl pop adc bound xchg and flds pop sub sbb shrl push push xchg loope push mov (bad) ja rorb adc push out mov insb jg fld test sbb xor frstor cmp pop ljmp cs adc push mov dec dec adc inc das add fisubl fnstsw inc mov dec jns pop xor das sarl add les xchg xchg sub xor test or jb adc or or mov scas (bad) and or fistl mov adc cmp dec sahf mov dec mov dec hlt mov cmpl dec clc es jmp leave add push out cmpsl cmp xchg mov (bad) (bad) movsl sub push jl sub orps shl xchg dec fist push cmpsl mov iret add push lret jl cmp pop add cmp pop xor push std inc or cmp scas rcrb add jne xor add inc (bad) cmc sbb repz sub cwtl lock and add int3 into ss xor shlb ret and inc cwtl fsubs jno in cmp mov in sbb adc mov inc bound xor mov xor cwtl ret cmp xor mov push pop (bad) das push sub add xor pop mov push movsl rclb dec cs xlat js push sti scas adc cmc inc insb ret outsl push jno sti gs sub cmpb xor in dec in bound cli xor decl inc loop xchg orl xchg mov pop mov xor pop (bad) lock dec dec xor fs popa pop in push jge cs adc rorl add stos xor sub fstp ror and or push js add test sub sarl xchg sub push dec add xchg fidiv jge xor sub pop sub xor (bad) lock out push pop mov add dec cmp enter mov or inc or mov cmp or jns sbb mov sub cltd cmp cmpsl dec or imul xor repnz out aas xor (bad) sub inc pop inc jmp andl and jecxz repz imul xchg add clc nop lock testl jnp dec int mov mov xchg rclb mov cmp orl jo imul mov push loop sbb push mov or add inc mov cmp ret jae les sub adc rcll scas push (bad) in jmp outsl xchg clc or rorl imul or add daa and push pop pop in js lea hlt call (bad) xor inc pop ret push inc jle decl cmpb adc movb adc and add inc ret cmpsl imul or inc pop jb sub pushf xor pop mov ret mov add cmp or cmp test jle inc data16 dec sub lods sbb add or or popa jb add popa jae jle adc lcall sarb cli jnp pop push bound insb add aaa js xor push xor scas adc mov in or pop inc inc and adc add or int aaa icebp dec xchg add xlat sbb push mov push inc fs arpl andl fcompl adc adc lahf int inc add dec and fldt fbstp fiadd adc push inc push in adc gs in or (bad) arpl mov int3 fwait sbb jmp dec mov mov addr16 ret inc mov dec inc inc inc inc jmp lods push fdivl repz push inc dec cmp lods push loopne iret repz jo nop mov inc jns nop cmovg inc or xor push dec sbb out dec sahf pmullw fwait (bad) inc pop adc scas pop push mov ljmp pop andl cmp les dec cmp orl mov jnp arpl pushf push mov pop pop sbb imul test pop sbb xchg shrl pusha outsb jb push insl inc stos dec ja pop cmp pop sbb jecxz sbb in xchg pusha or std push xchg mov pop add or scas xchg lock inc cmp xchg inc enter movsb imul dec cmp jp test add (bad) outsl cmpsl loop jne movsb mov insb add add or lea cmp mov dec add ret jge shlb add cmp add dec lcall enter sbb bsf popa mov jne cmpsl inc and mov or daa or cmp add (bad) and xchg or (bad) daa or mov pop jb test push imul xor insb iret stos sarb inc cmp inc or add or cmp (bad) aaa xchg rcrl fs xor adc add ds mov cmp adc adc sbb movsb adc ja inc shrl cmp out xchg stos mov cwtl mov test rclb into (bad) mov and adc pop and adc push imul lcall jo cwtl addl sub aam addb pop mov outsb mov mov pop pop pop es rolb mov push (bad) lods jo push fild add xor adc push out popf jecxz lock add sub fistp cmp cmp push inc sbb sbb mov inc lret add imul insl aad andl xor inc and cmp cmp and aad rolb xor icebp cmp lock jg faddl inc xchg out push mov (bad) loop push clc mov pop iret inc mov xor icebp inc inc into scas lcall mov inc aam cmp jl (bad) or nop les out dec ret add andps and cmp jo (bad) daa push and jo sbb cwtl in flds jle push push mov (bad) push cmp or or sub mov xchg sbb sbb push mov test (bad) xor inc sub push pusha sbb gs sbb jo mov lea mov and push sbb jb repnz int lods into push push add (bad) adc fs push inc cmc stos call scas lcall push mov or push sub and leave mov or rclb enter mov enter pop orl push and xchg and cmp sbb adc enter cmp imul jecxz or or sbb call stos xor sbb push or mov paddsb out cmp sbbl mov ret lahf xchg nop and xlat sub push inc push mov sbb arpl daa cmc outsl clc push test and xor xor xor inc movsb incl add dec dec dec dec dec dec dec sub outsl (bad) adc push push push pop pop pop out nop rorb jae adc xlat popf xchg xor xchg mov inc fs cltd test add cwtl push sub sub enter rorb xor lahf and ret adc jns pop les jbe cli and add mov jae add das mov jns leave lods and dec sbb pop push movq fdivrs inc sti xchg (bad) and mov push pop lods sbb and sahf (bad) sbb add dec mov lock push mov pop incb (bad) push xor clc sub clc imulb sbb push fiaddl sti fstpt mov xor sahf jbe sbb sub dec jnp lahf sarb imul cli push sbb sbb jmp sti inc pop das shll and add sti xor or nop mov ret xor enter inc inc inc dec pusha lret and call pop push nop xor lret mov push lock xor xchg rol inc movsb rcrb xor xchg xchg ja inc and cmp cmp cmpsb adc pop xchg and div sbb pop and nop push inc iret fwait or add jl pop mov mov xor sub bswap or test jmp in ljmp dec (bad) adc popa cmp dec in mov and loope in (bad) lea insl cmp jb jge cs sbb out mov in lock jmp popa inc xor cmp popf add jne pop sub mov dec rclb pop jg sub or jmp inc cmpsb add (bad) sti push add xchg add add bound pop pop inc clc fwait shlb or (bad) mov and lock and leave (bad) hlt dec mov sub nop jp lahf test mov shr enter pushl sbb xor pusha cmp fdivs je mov add iret popa cmp jg mov ret add call cmp fstpt and insl adc dec cmp or lods mov mov xor ret or mov lea arpl insb ss sub adc pop xor jmp cmp ja out inc lret pop push xor pop xor jmp ss xor cmp mov lcall pop jmp pushl aaa in xlat adc in (bad) jbe sbb dec adc or and dec xlat bound pop dec and xchg inc cs (bad) loop movsl mov ljmp and add mov addl mov fidivrl imul jbe push inc pop push mov xchg leave mov cmpsb pop and in lcall inc mov sahf cltd mov js push fsts std addr16 insb movzbl cmp fisttp pop insl movsb addb movsl addr16 fwait pushw push inc cmp cmpsb in and mov js sbb inc repnz pop add int3 and sahf outsb dec jg push cmp ljmp pop xor push mov int cmpl add (bad) sbbl aas cwtl aas mov inc mov mov xor lcall decb xlat imul pop enter push cmp add push mov data16 inc mov in xchg js movsl inc xor mov lods add sub mov add push push sbb cld (bad) jmp mov fcomp mov jg cmpl adc mov inc jp pushf loop cmp icebp inc femms js jo mov orb sbb dec dec sbb jmp add dec addl rol clc xchg scas test fdivrp addl cmpb cs jmp aaa loope loopne imul jmp das and pop pusha push jae add fs (bad) mov out dec add mov and add fimull dec sarb (bad) push fdivr adcl add mov (bad) adc movsl scas and cmp adc pusha xchg mov inc push cmp jge xorb insb cld adc lret push loope cld ja fmuls mov leave mov pop icebp stc dec or lcall dec push mull out rol xorb adcb adc ja dec js inc into mov xlat or (bad) cmpsb loope inc adc movsl or (bad) push inc mov out push push les and cmp test push sti shl or xchg lock adc pop mov cmc in push or push in loopne xor push xor mov out push or lds push lret call sub dec dec dec sti push fwait nop mov mov aas or ds jne inc push cltd je jle push fdivl fs imul pop or inc pusha mov push fcmovb outsb lds and xor cmp mov pop adc rolb (bad) in adc mov dec pop enter lods nop sbb (bad) testb jne adc and aas aas sti mov mov mov mov sbb mov and mov enter movswl sub or push je (bad) or call fild jne sahf sub push mov cmp pop roll lcall test pop cmp push inc cld test push fdivs xor mov int3 push mov popa (bad) mov sbb out cmpsl add inc and mov loopne mov cmp cltd adc cmpsl test adc jbe cld cmpsl mov mov mov arpl jbe sbb loopne es sub xor mov pusha xchg add cmp outsb movsl mov or push push or test in data16 fwait (bad) push je sbb fsubrl test inc pop adcb ret pop imul dec inc or in lea add pop or jo imul clc call dec loope mov mov xor add ret push and push cmp aaa add andl and and push adc out inc lret hlt rorb pop ficomp xchg xor xor adc into lock or lret sbb push push data16 push (bad) mov rolb and add jle iret mov rcrl test mov scas or fsubs push inc cmp mov mov dec pusha add outsb and int out sbb push xor add xchg lock std or mov or imul xlat and out push adc sbb mov test push ret and sub mov dec xchg push scas xchg inc add fwait add rclb lcall jmp fist xor in jge pop mov and or mov inc pop push sbb scas icebp push jns and mov pop mov ss ret lcall and loopne stos inc cmpl aaa shlb movb cmp pop sub adc sub fldpi xchg or iret dec pop out xor sbb hlt enter pop add mov popa das std mov jne cld jns dec fucomip mov inc inc cmpsl cmp fldt lods inc cltd pop inc mov adc fs sub or movsb adc jo ss or push cmp test sbb mov mov movsb jnp es hlt movsl gs pop mov add sub xorb imul inc xor inc lret and sub xor mov push or sbb inc pop imul push xor xchg sub or sbb fcoml imul cmp jns imul addr16 in rorb lock (bad) in je imul pop pop fistl inc lock sub sbb pop push cmp aaa pop push divl ret push inc adc cmp dec icebp dec hlt js push fsubrs mov xor dec (bad) add mov and lea pop mov jge clc inc aaa or xor mov mov sbb popf insb push in mov mov loope or hlt sub mov ret insl push add inc push inc pop mov lock adc popa not inc aad movsl dec or jns js pop xor test cmpsl and add loop pop loope or sub add (bad) add dec cmp shrb sbb sub jnp inc insb stc ss iret hlt cmp fcmove (bad) iret hlt hlt pop into dec gs hlt sub mov mov rcll or imul scas cmpsb lock jns inc (bad) xor aad insl sbb mov or xor fcomip or rorl cld add adcb and ds (bad) pop fildll push xor push or push (bad) and push test outsl lea je or mov test nop rep ja sbb fistp and add loopne fiadd jmp push sbb add adc push xchg jne mov jb pop ja or bndstx loopne ret call dec iret push inc test or xor xor fwait cld add sbb add or cmp pop dec shlb bound fisttpl daa sub addl xchg pushf or (bad) or push subb enter pop push std inc mov sub jmp or std sbb push (bad) repz and pop aam cmp sub data16 or push xor les and sbb add inc dec (bad) push in leave cmp inc lret (bad) pop lea adc (bad) and lea in bound sbb lret dec clc add shrl daa xor and inc add inc mov xor cs and mov mov adc adc xor add mov dec lock pop inc jb clc dec inc in nop cmp pop inc pop roll in dec xor out mov mov (bad) cmp rclb mov test stc pop clc lock dec call test or arpl test jns add and cmp push out loopne pop dec or pop cmp cmpl popa les xor pop test dec repz loope (bad) pop xchg xor inc stos add add int adc push jle notb faddl shl xlat addr16 int mov cmp push add or fistpl jge (bad) lock and je fs xor sub in push sbb pop jp int adc lcall sbb aas mov dec jmp sub insl mov inc push (bad) add pop pusha inc push subl insl sbbl and adc imul sub xchg xor lret add push mov jp repz pop jl adc xor imul out negl or xlat orb pop lcall test xchg push nop sbb dec add push rcr adc pop faddl nop cwtl arpl inc (bad) jmp xor mov mov insb add push xor mov fisttpll imul add mov bound cmp mov inc xchg sbb inc call dec mov push push push arpl (bad) repnz sbb add cmpb cmpsb fmulp xor inc sbb ljmp jmp and es xor adc cmp or lods jne pop xchg pop imul jle lret and add inc xor cmp cmpsl xor sahf out int mov fadds loop xor out jb add push and xor add xchg into rcrb xchg adc aas lock push sbb add pusha mov sub xchg (bad) mov popa push push add lods cmp fdiv ret ljmp adc scas dec inc dec xor out xor out push add rolb dec test sbb loope and mov cld (bad) sub mov xchg fs and pop jb cmpsl xor pop jp aas scas push cmp fdivs pop (bad) fstps sub outsl xchg cmp test add popa and and icebp ret xchg jb inc push in pop les adcl xor cmpb add scas out cmpsl cmp pop sub or xor sbb rcrl adc add test in cwtl jno addr16 je (bad) es nop xchg ror pop lret jne mov push divb rclb movsb inc js sub pushf je lcall movsl fs pop xor xchg popf rcrb cmp xchg data16 pop push fadds mov mov outsb fidivr ds inc adc push inc inc or lods loopne dec je outsb vpextrw jne lds ret mov xor push imul cmp jnp inc loope inc jbe adc pop lock outsb mov pop imul es push pop daa aad sbb outsb loopne mov pop cmp add pushf cmp fs mov inc lret aaa cs sarl add add fldt fimul mov es or ss push js rcrl (bad) in rclb js push aaa lock shrb xchg and fs orl aad push aas jbe sub xor (bad) push xchg adc fs test fcoms outsl popa test sahf ljmp sub or push sub adc sbb mov out mov lods ret or pusha pop es mov adc fisubl movsl cmp xor or push cmp sahf push and js push mov jecxz inc jne add and sbb push and mov sub xchg and sub lock dec sbb inc inc inc and fwait or jle push and push inc xchg pusha add add ss adc cmp push nop mov cmp inc add pop movsb pop xor lods xor push in ss push in mov sbb cwtl push jmp jmp cwtl ja fdivs xchg mov inc adc and (bad) pop add and sbb mov ja jno jns xchg mov jg dec jno ret dec inc dec or cmpsb out push aam mov adc jmp mov adc enter inc xor subb sub jo addr16 addl sub psubusw enter std mov aad subl aas out cmpl loop ret iret push pusha push or lret and and enter and sbb cmp fsubrl ss push sarb mov xlat sub shlb fistpll push cmp cmp mov ret lret dec mov push pop imul mov or xchg xchg cmp sbbb daa lock in push imul nop ja mov xor adc push pop pop mov insb mov emms mov xchg pop adc aas insb jae int3 mov xchg jne mov sbb push push data16 mov mov mov pop mov dec adc pop push addr16 inc imul mov mov xchg dec push sub aas mov and cs cmp cmp mov and dec inc dec or je or xchg out pop movsl mov pusha insb push or jnp mov mov mov out xor or pop call jmp inc or jne stc pop mov jl adc jl pusha jecxz ja cld pop test (bad) imul sbb adc mov xchg into lock mov in inc ja jbe (bad) and popf aam lods aam xchg inc mov xchg dec imul shl add ret je inc inc and mov mov adc lds cmpsb xchg dec xor add sub push sbb movsb or push stc call xorl dec pop jge (bad) leave movlhps jae inc sbb mov push mov mov or adc pop and xor enter ret ret sti add push jne add or add add cmp jp lcall in xchg sub push (bad) jge lea lock or into cmp jns fisttp (bad) push sbb aaa pushl dec pop (bad) and inc add jae (bad) movsb mov push inc and icebp in ret mov sbb add xor es sub add rol mov add call mov sub inc out imul add sbb sbb cmpl repnz hlt mov fsts test insl scas mov es hlt sbb bound leave push lret test rolb enter test mov test and dec add mov mov bound sbb mov aam ret xchg (bad) jnp cmpsb sbb dec push pop dec xchg or jmp sbb out fwait pop push aam je push sbb fcom sbb dec repz xor test movsl nop fs mov mov jno roll enter lea enter adc lcall int3 push push stos (bad) and pop push dec gs mov aas lea loopne hlt add add addr16 sti lods rorb mov jmp jbe loope jnp rorl mov xor mov xor cmp jmp push or cli mov pop (bad) outsb add xor gs imulb adc movups adc cmp adc pop test xlat jns mov (bad) dec pop cmp push fnop loopne push inc sbb das sub mov loopne pop iret add cwtl sbb shrl pusha and adc sub sbb jbe cmpsb popa mov lods aas ss add push and lods mov lea rorb test test mov jnp sbb test mov idiv mov mov out bound pusha adc repnz mov fwait dec and or pop mov call pop into mov sbb mov pop cli cmp jle xchg ret or and je pop dec xchg shrl xor icebp mov or or adc dec and pop iret clc push mov jl inc test mov repz cmp cld inc movb mov mov jmp jo ret push fwait (bad) mov pop or std mov inc xor sbb add pop jne jae movsl add fsubl add jl jle aaa dec pop leave xchg dec and mov lret out idivb loop sub inc cmp lods inc fst pop cmpl call cs lock leave in stc adc pop push cmp sub sub lea enter sbb fcoml fs cmp add lds in and mov and ret cld inc pop popa push fdivrs inc cmp ja add add out xor inc xchg pop inc mov pop (bad) fildl jne (bad) mov shlb pop cmp fsub inc stc daa pop in mov inc mov fsubs ret push lahf add and dec pop ret xor pop cwtl ret or cmp addr16 fcoml or xchg hlt orl xor lock xor adc sbb sbb and lds dec xchg (bad) fistp aam (bad) hlt lret add and add and add push pushl scas popa sub gs sub push or call out xor and jmp sbb int3 push xorl and lret out add xor pop push cmp nop lock cmp jle inc popf add pop or or push sub inc xor dec mov and add test xchg sbb dec js mov into aas dec inc add add das mov ficom cmp pusha cmp push xor dec or int xlat dec call add sub sbb (bad) push inc inc or ret (bad) test or dec jp sbb jmp push xor (bad) jo pop les dec (bad) jo test jae ret loop xlat adc sbb inc mov pop push mov es push add xchg jbe mov mov or movq fcoml in mov lods add push or mov add jge jecxz cmpsb hlt sub jmp push xor rcrl ds call and cmp jp mov mov sbb add push jo mov repnz push enter pop mov mov inc mov xchg fildl inc push nop xor loop ret lea movsb cli bound add cmc add in push fs jge inc sub push and leave pop xchg and cmp cmp outsl pop in jns cmpsl (bad) mov mov loope (bad) push repz mov inc loop jae push test enter dec cmp add inc addr16 xchg lods orl sbb repz mov test popa pop rorl inc inc xor pop add and test andl test sbb push dec loope cltd testb xchg xor (bad) (bad) push sub add mov and je pop movl loop jno mov mov rolb ret xor xchg into add dec inc lcall cwtl ret ret mov sbb sbbl pop cmpsb hlt insl or popf hlt push mov adc sbb clc inc xor jmp jecxz,pn push xchg push outsl push or call xor rcrl push outsl jae inc push ja xchg lahf cld test pop movb inc push add xchg dec inc add or icebp sysenter je cmp pop clc jb pop mov int mov lods push das (bad) nop in or push sbb jno pop cmp jo push hlt pop sbb loopne push fnstenv push inc sahf movsl aaa (bad) xor add cmpsl or sahf adc scas adc aaa (bad) pop dec inc imul jno testb lods jae sbb cmp xchg push loopne pop (bad) fcomps pop test out push xor out das mov adc bound (bad) mov xor sbb dec cld mov cmp jle jmp jb insb cld ss pop pop push sahf add adc xchg in aam push cs call sbb aad mov (bad) rcll mov inc ja,pn pop nop iret dec inc mov inc dec jno and dec iret decl ja push nop or dec mov inc inc add xor enter je push test subl add fnstenv add xor adc mov cmp mov fs inc push inc ret sarb push xor push mov cs jmp (bad) mov add out push push sub or and (bad) movsb ret fnstsw jecxz dec test out xchg aaa mov lahf sbb cmpsb mov sbb adc inc xor jo inc add mov xor xor pop cmpsb call daa (bad) aam or push dec lock fimul cmpl ja insl mov aas dec dec sub mov addr16 inc or je call add jge (bad) hlt jmp gs mov ss out int3 ret cmp adc push lods dec outsl or jl adc (bad) cltd ja xor jne decw jl pop xor sbb mov jno sub and ds stos or fwait jmp and cmc add inc dec mov inc dec sbb adc push in xor mov aaa in aad imul aaa mov pop stos outsb loop dec push cmpxchg (bad) push ss xchg push clc pushf lods mov adc ret pop xchg push dec sbb push ja add add dec or inc (bad) in add mov jb dec clc xor dec push cmp xchg popa outsb inc xor inc andb fsubs inc cmp xor sbb add push mov add pop push fcomp test mov pop mov aas mov cmp ja cs bound enter ret aas cmp test xchg lods ret test adc mov mov mov add adc add mov add arpl or mov sbb adc cld push ret cwtl add pop jmp or daa cmp add jbe push inc adc (bad) (bad) daa orb dec xor or notl scas and aam xchg pushf and jno aaa push pop add (bad) imul sbb pop and stos mov lret mov mov test dec jp cmp call fcmovbe test insb dec or push mov jle sub sub je inc sub add sub inc rcr adc inc test xchg and into insl mov and sub call xchg lret je loop xlat hlt daa aam inc push test add jl jl add adc push mov push xchg fs lea int3 adc jbe inc add xchg and jl xchg leave hlt test insl inc outsl and das dec add loopne stc mov shl cmp popl fsubrl sub scas (bad) mov addl mov sub enter add inc xor sbb add xchg inc ficoml dec jge or adc call test icebp jge out mov sub mov cmc mov or or inc mov fsubrl enter pop fdiv lock adc dec ret and push mov xchg jg xor mov dec or adc in divl lea idivb fstl sbb sbb sbbl sub cmc pop mov fmull or mov into xor jmp pop jmp (bad) push adc adc je push push jb cli dec pop pop inc jecxz (bad) in jne pop or cmp pusha mov dec xor push in xchg mov inc bound mov in sbb inc cmp sbb loope cmpsl rclb jne lret push mov test (bad) push dec mov ds sub in sqrtps xchg (bad) ljmp mov cmpsb sbb jmp mov dec mov inc sbb push or and inc inc push popl push nop mov es pop cmpsb mov xor jbe rolb flds cmpl push lock fld lahf bound movl xor lcall or cmp cli (bad) jno pop push add test or imul pop or ret cmpsl add insb or or fisubrl push ret cmpsb nop adc push pushl cmp pop xor ds push std jmp jge xor popa inc sub add xchg movl sub xchg or mov xor or call cmp jno xor dec int3 sbb dec jmp sub or pop std xorb dec mov jae inc xor adc jp gs add rclb in push sub icebp fucomp jg push int3 sub mov pop imul sbb xor (bad) mov pop es push stos inc mov stc mov clc and adc je cmp mov nop out sbb fsub pop mov in jmp je and in add dec stc test inc scas rcl push sub or and ret sbb or out mov inc push movsb jge jbe xorb xchg dec insb inc sbb pop data16 in sbb bnd push sbb les imul add xor inc xchg pop jg add loope or es jmp sbb push fidiv repz data16 xor add mov adc sub mov mov sbb pop inc jg cmpsb mov lock je or daa dec push aas mov cmp jl mov add and sub ljmp outsb inc sub lds mov sbb jge mov inc adc xchg pop (bad) mov cmpsb lea mov movsl aam inc sub xchg ljmp mov cmp pusha xor xor (bad) repz sub mov sahf out and mov and sbb sahf out iret mov dec mov adc jnp repz dec or adc dec fadds iret repz add cld sti mov sub inc out scas cmc cmp in mov (bad) mov pop cmpsb mov add adc dec dec xchg adc mov call jae mov push mov pop addl push in mov aas and inc test push mov sbb stos psraw mov jl and or loopne dec outsb arpl mov cwtl rclb xchg jl add call xchg cmp rcr sub gs ss adc rorb push add adc xchg pop or mov dec mov mov (bad) jecxz xor push outsb mov xor add push cmp and mov add fldenv sbb push dec dec mov scas out loopne ret decb push loope aaa call or or jnp lock pop push movsb sbb loopne add enter and cmp or or add inc adc out or inc push jo sbb xor clc xor sub or loope add (bad) insb dec and cmp cs test inc push push ret cs pop sbb cmp mov push rclb js data16 inc lahf jg imul dec inc imul fs popa js aaa in shrb cltd pop xchg push push mov mov or adc js inc add add and xor mov jmp or mov lock add pop xor and aam jbe inc ja add mov ljmp call push in inc pop push shlb inc jp lods ret adc xchg pop xor jmp inc sbb js or mov push sub jp cwtl or dec or or mov sub add add mov or dec cmp dec test (bad) bound or add imull adc insl (bad) popf or push outsl add xchg jae or call add mov sbb or cmovs dec movsl sbb out mov and inc std das mov popa pop adc adc fwait data16 cmpsb sub cwtl int ja jmp (bad) insb sbb roll in in inc dec inc fwait and adc loopne mov (bad) or jns outsb fstl or or push mov nop xor mov outsb jne sbb adc lret push adc mov in push or add loopne iret inc (bad) lret pop adc clc or addr16 adc in adc (bad) in enter and jl into inc and push gs cld jle rorl imul (bad) add (bad) in lcall and inc imul adc xchg push (bad) mov cmp fs mov push jb clc add xchg jns adc out sbb cmpsl in pushf scas push js test call pusha and sub test xlat sbb inc or pop ds or js add ficom imul fidiv or and lock push or and stc mov jl or andl cltd push rcr jnp add ficoml jns addl fbstp sbb add push lcall inc iret adcl dec jae push push push add add fisubr ja inc xor push (bad) or das adc sbb test stc or and pusha sub sbb fcomps add lahf push and fidivrl pop cli push adc outsb and shr int jo inc inc fdiv inc jl loopne fmul dec aad cwtl rcll add push into push loopne inc pop adc pop (bad) push pop mov sbb int3 inc push and enter inc sub inc adc in cs push cwtl insb das lahf aad cmp add push pusha repnz movl ret add fiadd shll push mov insl (bad) push adc int test fs inc and adc out lcall lcall xor jp mov aas jge pop aaa add add add add mov (bad) ljmp add add adc push outsb or push sbb xor (bad) mov add pop inc mov or sub insb add addl sub or test (bad) cs std ljmp ljmp sahf and stos dec cmpsl xor cld push push idivl incb ljmp push cmp and pusha fidivrl (bad) out cmpsl shrb push push in mov idivb jmp add aam adc into insb push data16 nop push mov lods ljmp xor push pop es fcmove or call shr fyl2x mov stc stos hlt not xchg and fcom clc sbb rol push jge pop push cs sti mov js mov pop fnstenv in push sub xchg mov sti stos xor or mov mov lahf pop and inc sarb xchg inc lods nop loopne (bad) ds pop and dec dec fsubl sbb add outsb js mov sbb in js pop lret push pusha mov sub addr16 fucompp and bound fsubp inc add sbb orl push push sti cmp sbb fcoms add push mov mov jns push add adc (bad) dec and insb andb or orl inc mov pop stc nop mov dec repnz loopne sub jecxz pop inc pop lcall xchg cmp dec hlt add add adc or add mov dec add lret and add insb xlat inc xchg dec js orl mov dec adc push push js fmull lahf sahf push xchg or call inc sbb movsl xchg push xchg in push jl cs repnz add adc pop rol pop add xor cmpsl stos cld mov add lds lock push jae int sbbl mov add adcl push and cs and mov popf int3 mov and inc mov push pusha push or daa and adc ljmp rcr pop repnz lock or shrl add loope inc xlat incl push inc cmp shrb call jmp xor fdivl (bad) dec mov enter cwtl push popf pop fwait sub or or fwait nop dec mov (bad) dec cmp sub or test xor cmpsl in hlt or dec jecxz xor enter push ret sbb jbe das inc sub mov xor ljmp xor imul js jae data16 xchg mov repz and clc jb inc test xor leave ret xor add xor jns sahf mov (bad) xor ja int (bad) pop int adc pcmpgtb push sbb fs jnp cmp cmp and cmp inc jne gs and cwtl jmp jo jle push jb sahf inc xchg cmp cmp jbe sarb es sub jmp sar xchg dec aad pop xchg adc (bad) or push mov dec cmp pusha cmp pop xlat fisub xchg sub xchg push pop dec cmp fimul push mov pop push dec or push xchg js nop sub pop repnz ret cmpl jnp inc insl pushf and sub dec ja lldt dec ret cmp cmovb fiaddl sar sarb fcomps inc mov dec sbb and dec fcomp xlat add clc jns sub dec mov aaa je popa cmc lock jbe sarb mov add dec mov dec mov jg dec fadds stos inc dec sbb mov mov add sub leave dec cmp mov (bad) nop jo loope push mov cmp test push xchg adc pop dec inc inc test dec mov inc push pusha or cltd dec mov sub xlat inc mov adc push dec push sbb push dec and and enter dec sub mov cmp or push inc cltd mov dec inc inc push aam add rorb push dec pop cmp repnz push push hlt jo dec or mov jb inc mov jae fnstsw pop pop and loop jbe xorl in adc les inc adc or push call movsb pop pop xor adc test scas (bad) adc mov push mov aas pop or add inc inc rcrb xchg push add repnz jo mov out or mov faddl je imul cs adcl cmp or out pop sub jb mov rorb or or nop pusha mov ds nop and or inc pop fisubr call cli mov call inc (bad) push mov and inc pop add mov pop sbb mov movups dec mov pop jnp je inc xchg nop nop (bad) jne loopne rclb mov adc rcrb push cmp and push loop dec outsb andps adc mov pop sbbl nop addr16 and push pop mov (bad) addr16 gs in jae mov add mov sub data16 jle mov or je and fcos push inc push fs cmpsl mov lock mov xchg js rolb sub sahf es adc mov rolb loopne je test cmc mov add mov in cld adc mov mov add fbld mov sub or in cmpsb jae hlt mov sbb dec pop jo mov jl shlb mov xor mov lock mov shl cmpsb push xchg lret mov and fnsetpm(287 stc sub inc es call or fisub adc mov jo and inc ret or inc lahf adc mov mov popa je mov sub outsb adc mov xchg (bad) mov mov xchg jle jmp jne and lahf repnz in cmp mov jo push lahf je mov dec mov mov pop rorb lret mov fiaddl in mov cmp (bad) push inc mov ret mov popa add mov push pop call fs arpl sub rcl xor xorl sub ret sub adc sbb cmp and addr16 add mov clc imul mov test cmp or adc add pop sahf lret add add adc inc push (bad) (bad) adc sbb fisubl in add mov sbb cltd dec mov iret aad pusha testb sbb imul in rcrb add add xchg in sub mov pop xchg adcl cmpsl rcl roll mov aam leave mov jp nop mov pop xchg daa xor sbb add add (bad) stc dec loopne jmp loopne rclb lds mov fsts pop je lods outsb add hlt xchg add inc negl mov mov xchg inc xchg outsb or mov mov (bad) pop repnz test and or insl dec loope data16 push inc add pop add pop in push pop pop (bad) fcoms sub push jno data16 mov adc mov mov add pop cmp lods ret dec add inc jecxz pusha sbb mov stos adc mov add or movsb test push sbb clc xchg mov cmp jecxz loope inc sub add clc repnz dec shrb stos imul shlb test or lods fistpl add scas movsl ret add notb imul inc shlb gs call (bad) xor jecxz dec mov push jecxz loop inc cmp or sub imul sub lock push cmp jno test sub mov add cmovns mov and cwtl pop push and dec xlat fsubr sahf (bad) xor jp adc subb sbb lock out test or xchg mov sub pop addb adc sbb ja imul pop push mov pusha adc jne inc inc xlat cmpsb andl sbb xchg jno xlat and inc stc sub neg jmp arpl pop (bad) add je fs cli mov push push test and sbb hlt push data16 adc cmp (bad) inc fucomp aas adc inc push mov xorb dec fs add sub insb mov (bad) pushf aam (bad) lods mov add fildl cmp clc xchg sti movswl push adc nop sbb in inc (bad) sbb mov (bad) or js (bad) sub adc (bad) or jae std xor jmp fs fcmovb add stos and xor jae or scas dec cmp jp cmp cs or lea mov sub dec fwait lods pop in fadds (bad) mov mov lods push push and or push ja sub mov (bad) data16 push xor push jmp inc xor ret sub rorl incl aaa pop mov mov ss push faddp lock xlat (bad) sub push outsl mov sub ljmp jl sbb out mov sbb fs enter inc outsb stos sbb mov inc inc hlt and adc inc xor in xchg mov jle push fs add dec out cmp shrb push push and push sbb arpl and pop test orl adc mov inc mov fdivrs push and add jne (bad) sbb lock add clc rol xor clc or mov in jae (bad) (bad) sub or and add inc sub dec inc add pop and push fiadd hlt fisubr xor jp jge sub mov orl pop push mov mov jecxz loope push jle push and add fwait notb or dec popa add lock ss sahf sbb in fnstcw enter insb pop mov lcall sub push pop jbe mov loop cmp push scas mov push cmp leave xor inc jnp xor enter xor or xor sbb sub mov ss mov das mov outsl push or add outsl xor mov cmpl (bad) jae cmp sbb cmp xchg pop rcl data16 cld popl cld xor cs cli into sub sbb bound adc add add adc and sub xchg popa add or nop inc cmp nop add xor or fwait lcall and pop adc and lret ljmp adc loopne shrb lock sub push rcll and push ljmp push mov or mov cld mov sub jae inc ficomp mov and loop out or xchg test dec sub pop xorl aas or mov xor push les push or (bad) fcompl or adcb push lods mov je cmp aad es push mov mov mov mov xor mov adc outsl xchg cwtl sub in sub push dec sub pop nop jle adc and cvtps2pi js mov movsb mov push sub testl lahf add mov mov pop ret mov push mov push jne iret sbb sub pop inc inc jmp pop lcall (bad) mov aad pop mov bound addr16 pop popf mov lock movb orb punpckhbw or outsb fdivrl cvttps2pi movsb cmc pusha mov in and insl add jmp lock inc xlat mov nopl lods sbb dec and push in push popa push icebp je add pop mov push (bad) lock cmp adc sbb jns fs ja sarl sub sbb or stos outsl add movsb cmp sbb sbb add or or mov add add sbb pop lret push inc (bad) jb les fmull in lods push es rcrb or jle arpl and pop dec outsl pop jb inc or and xor aas mov xor pusha push daa int scas je (bad) clc adc or or mov xchg loopne pop ss sar out and and xchg sarl clc mov xlat sbb rcr daa inc mov xchg lea mov dec inc aas sub mov lea add mov mov add adc xor addl outsl or lds sbb out sbb pop dec mov jmp mov pop push jle mov (bad) dec ja mov inc mov or sbb fcompl add and mov scas test pop jns and adc jnp and ss adc jle sbb sub loopne push shl adc sub add in pop and or add adc cmp dec scas jns add mov stos add incl jae jbe (bad) mov ret mov dec mov dec je mov inc shll add xchg dec xor jge mov out mov mov xlat pop mov add mov dec scas xor jg fstpl jg mov adc adc push sub push out stos mov inc lock jne dec push push inc fadd aam pop mov adc sub test lods inc cmp mov fadds inc pop rorl addr16 and nopl test mov (bad) rclb push ja dec or or cmc jns leave fnsave mov jb mov add ret mov xlat (bad) (bad) push or pop lcall fnstenv mov int enter jecxz outsl je imul xchg jb jo loope nopl add dec sbb test cmp aas movsb nopl adc sbb icebp in pop pop cmp add orb mov cmpsb lret xchg pop lea or outsb jl incb pop repnz or jnp add sbb inc fwait dec pop fwait or gs mov cmp mov repz xchg cmp aaa repnz daa fbstp jle push jg mov mov pusha push aaa pop pusha adc adc jb jae call and add movsb push cmp push daa mov dec das xor add and inc xchg pop push xchg push cmp insb cmp push movb rorb xor add notl mov pop push xor stc mov mov or adc lret jb adc loop or add aam and dec sbb adc inc data16 pop stos mov ficomp cmp push fld (bad) out enter xor fs add (bad) jl add cmp shr leave or jne stos sbb ja test sbb sbb icebp jmp sub or cmp sbb lock pop or je add pop test sbb lret add lock dec shl dec test mov xchg ror sahf movsb in out inc lods or sbbb xchg sbb mov neg inc and fnop pop and xor cmp or pop add cmp add adc add push xor xlat loope ljmp test push pop inc xor sub sbb cmpsb iret sub setne inc lock int cld subl jle jne cmc in mov add xor lods jmp pop scas xchg roll sahf (bad) adc lahf push movsb fisttpll xchg pop or roll pusha xlat call js (bad) xchg adc mov pop pop ss cmpsb mov cmpsl mov in outsb adc mov push xor xchg bound sub outsl nop mov sbb je adc mov in das daa push mov adc push mov jo mov dec and (bad) pop xchg repz inc rcrb sub cs aaa fnstsw jo fisub rcrl jnp push adc sbb aad pop or adc and nop cmp je popa adc xchg inc or dec mov xchg cwtl sub push sub adc cwtl mov and xchg ret sub sub imul push ljmp leave ds inc js movsb loope dec push fdivrl xor mov mov sbb shrb aaa clc sbb das push addl scas dec les sbb dec adc inc rolb (bad) lret mov lock mov and xlat mov mov pop hlt adc xor addr16 lock dec dec fimull xor test mov popa imul roll lahf or add pop sub movl aad arpl pop (bad) adc ja add imul adc sarb test xchg ret fnstsw cmpb or ljmp orb mov sub add or loopne (bad) js xchg cmpb sbb xor jle cmpl dec inc (bad) ja xchg mov mov add adcl push xchg add rorl add aam ds cmp add aas rorl fnsave mov and bound dec jnp sub xchg add hlt rcr and mov dec or push push (bad) adc mov es pop repnz mov and ficom pop pop xchg out (bad) ss xor cld cltd icebp jl and shrb mov jo inc in test lods xor gs gs movsb outsl cmp inc popf mov adc loopne add pop insl push mov gs xor jne xor sbb popf popf loope fistpll je inc (bad) outsl cmp int3 mov nop bound jmp adc or bound call push sbb int3 movb inc and mov testl pop sbb ljmp loope test push push cmc das testb dec orb jmp andb sbb xchg cmp (bad) test mov xchg mov aam cmp fistpl jne and or jecxz push (bad) lea test inc and cmp xchg and test sub mov pop daa cmp test loop inc arpl das subl movsb adc and pop add sub add cli ds sub inc jg sub ret mov add jb or push dec or test iret jg insl icebp inc sub dec je daa cmpb cld inc sub aam pop jne fdivl stos sbb aas loope test jne inc aam cmpsb sub sub popa pop fistpl ret daa in or sbb xor or daa inc je mov and call mov test and stos enter inc mov mov or add cmpsb (bad) pop jecxz adc jecxz mov sub or or shrb lea test popa add inc imul mov mov jnp cmp or sub lea ret hlt jbe sbb adc in clc cmp fstpl pop dec ret hlt inc cs out hlt in cmc xorb fmul je mov sbbl and mov push xor jae ds nop add or out arpl shrd aas fistp rcrb or daa sti popa push mov cmp and mov jle lea adc add adc (bad) bound adc or ljmp cmp jge xchg and dec or pop js mov jl imul in fisubl mov and add jbe mov fdivr sbb add add or inc ljmp mov rclb jge inc stos mov insb jecxz push sarb inc adc pop andb jbe enter inc cmovs test fidivl scas add xchg jmp int3 pop pop out push adc xchg aam (bad) inc xchg call (bad) xor aam inc lret push xchg add popa test add mov or scas popf ds fidivl add push bound inc xchg dec pop jo fwait add sbb mov fisttpll repnz rcrb sti movb jmp call (bad) fsubl fld lret sbb mov sahf adc pop cmpsl add sub pop inc xchg mov cmpsb cltd and cmp inc or xor neg in jo sub xor mov lret xchg cmp adc add sti in cmp sbb daa fsubs mov add ret decb cmp jle sub push adc push mov testl and sub mov lods (bad) daa push aam les int3 or (bad) dec vexpandpd or xor rcrb mov les cmp es dec in sub test das xor insb aaa mov inc (bad) aaa movl jnp jo icebp mov cmc cmpb into (bad) push out adc clc push (bad) and mov pop imul push adc jecxz or nop out fildl dec xor pop pop adc dec xchg ret or push or js cmpsl cli mov fnstsw popf pop ret pop loop jl inc jno sub xchg push (bad) mov (bad) xor mov pop lcall test adc jne and sub mov mov and sub xorl adc ja es xor cmpsl movsl and mov add add (bad) xlat jo xchg aas aaa cmp shlb add xchg dec stc sbb adc add xchg mov and enter arpl js add lret cmp adc adc xchg jmp inc inc or sahf ret mov fiaddl mov (bad) jns fcompl xor daa movsl jge shlb ficom sbb test fldt or inc pop pop add ljmp adc mov jp mov jb pop and je sti sti add and rcrb or xlat movsb movsl (bad) pop inc setae pusha jl mov lods push mov sbb insl pusha xchg pop mov xor icebp ficoml mov std ja mov add xchg push xor movsw or mov arpl mov pop jns mov xchg out mov cmpl adc fmull inc and ljmp stos pop inc inc jge rclb (bad) push fimull stos push push fcompl fimull adc adc movsl lock jle jne (bad) insb inc arpl inc pop lock dec fisubr xchg inc add cmp lods inc daa fdivs nop das push sub rcrb mov inc push lds addl mov push sbb inc adc mov je enter pcmpgtb add xchg lcall (bad) pop enter xor inc test push dec je add mov in mov clc je cmp sbb test pusha jmp int cs roll imul sbb (bad) cs scas cmc lahf popf out add std add xchg lock fs movsb aad jmp pop and and adc pop inc pop loope mov sbb cmp mov cmp js inc add dec pop dec popf sbb fisubrl cmpb sbb jo push add loop fsts jns clc add jo or lcall jp xchg xor stos je inc jo daa std pop mov mov ret nop and fwait xor test fisubr inc dec cmp xchg (bad) imull leave cmc jmp mov pop and sbb xor jae push add pushf ja lsl (bad) divl bound pop shrb mov mov cmpsl inc pop pushf insb bound movsb int in mov ja add outsb mov sbb cs nop sbb das mov push fidivr xor test sbb movsl mov cs pushf (bad) xchg stc jae lret add outsb sbb shrl or push dec xor fiadd jbe test mov or (bad) mov mov push fist push and push sbb push cmp pop sti pop add push cmp call jbe sub lods and adc push sti jg out loopne imul sub push inc ret push push insb inc pop nop add add sbb (bad) xor sub in adc add xchg sub sub push lds or inc push mov popa divb push inc mov add fcoml ss inc push cmp jbe decl cmpsl mov adc ret fdivr ja lock add mov adc jmp jl sbb add data16 inc adc cld mov icebp ret adc sbb iret and pop mov mov mov orb lahf sub insb xor mov (bad) punpcklbw add add add add and clc es xchg cmc adc pop movl jnp push adc pop adc cli push push pop psrld mov jmp sbb (bad) mov and jne adc xchg sbb or das mov xor add in xchg mov loopne mov mov push mov fcomps jbe aam sub add add ljmp mov ret shrb inc or or mov pop sub add jo fcmovb add ret push mov cmp jmp rclb sbb ficomp aas add push mov xchg or add sbb aas in aas jmp or sub pusha shlb mov lahf mov in pusha cmp dec inc sub add add (bad) mov enter jecxz outsb loop test add icebp xor push pop es sub into lods jmp and mov or fwait das jne push dec imul popa add or sbb pop loopne pop cmpsb dec xlat ret cld in jl idivb es push xor sbb sub decb rol pop adc dec inc dec push (bad) mov call xchg aas loope push mov rcll nop out or pop test movsb and or jne lea sub xchg movsb xchg lock pop loopne dec (bad) mov mov adc sub mov cmp sbb xchg icebp add inc and sarb xchg mov and sti xchg add pop push mov jp dec xor inc push bound mov sbb add incl sub dec push add shl cld dec add add clc mov or and dec mov xor inc jbe adc fs dec pop inc cmpl jne add jo fsub pusha das mov cmp xor (bad) jge xor xchg (bad) popa xchg cmp ss fisttp lock jne xchg or mov dec mov mov ja iret or testb hlt (bad) dec lods or jg ret lock mov xchg xchg into sub xor out in jo sub cs test sarb pop jmp xor incl subb cmp push (bad) mov adc nop adc loop adc cwtl mov test pop sbb iret leave loopne mov sub notl jmp and (bad) pusha hlt dec add aam push incl push or mov arpl push stos aam cltd js dec mov bound jb mov loop mov movsl cwtl ss jo inc jmp ret push cmp dec push add fisttp push mov mov call notb mov sbb hlt clc andb sbb cli mov dec inc mov fildl jnp sbb bound add in dec sbb std mov fs movsb and cwtl or jne je jne dec mov and xchg lret adc les negl cmp and pop mov or aaa sub and mov or test inc shrb ret stc lock push insl arpl sub es dec adc roll fdivs cmpl fistpl cmc sbb mov dec (bad) mov and add cmc mov mov dec push jmp adc and rcrl or sbb aas (bad) push and adc adc mov push imul jns jge fadds cmpl inc inc je mov imul sarb xor jecxz pop jp lock mov jns push mov mov cwtl or adc jns adc inc mov stc mov cld inc ficom scas and pop out push cmp sub push sub add in mov push xchg push mov popa loope jmp sub pop add pop mov shrb outsb mov dec xor xor test sub xchg sbb sub cmp inc push pusha pop jb pop cmp loope lock add sub and cmp je push imul inc dec sbb inc dec mov leave adc out jecxz push scas or mov (bad) adc push mov cmp hlt cltd push js push fdivp test mov xchg xchg inc aad clc cmp in (bad) xchg (bad) ds mov push cmp test or shlb mov push clc mov sub and add xor mov fiaddl inc push or inc hlt push inc inc dec in pushl inc adc test push adcb jo ss xor xor mov push scas xor ret movl movsb sbb push xchg sar dec or xlat push mov sub rcll imul push add pop push push mov fwait add les icebp es sub sbb pop sbb (bad) mov mov cmp add fwait ret push and cmp cmp nop and outsl in aaa add xchg mov ss or gs (bad) adc addr16 in adc push dec xor in fmull stos fwait add imul sarb mov sbb push pusha bound loope cltd sub mov stc sub xor or adcb sbb add xchg dec repz mov fisttp mov cld pop into fnstenv mov push jbe hlt pop or sarb roll jae (bad) mov sbb jne mov rcrb ret clc ds add movsb xor mov dec add jp (bad) call das push ret sub inc add inc push shlb (bad) inc jmp cmp xchg test cs adc movups inc movsb mov jmp sbb (bad) aad pop add movsl outsl pop ss push xor add scas aaa mov aas push push mov lret or xor add xchg (bad) mov jl sub cltd inc jo insb push aam dec divl mov scas mov and sub jbe push xchg push or cmpb lock mov push insb dec or mov sub (bad) xor push push fsubrl pusha add daa and gs inc push dec pop es xchg pushf cmpsl mov pop mov or popw adc rclb dec pop mov (bad) mov pop into repnz daa loop subl xor jo inc dec add inc cmpsb xor mov inc mov push imul or test cmp arpl icebp loope iret inc aaa push and xchg adc add popa sbb mov or mov and xor es add mov repnz neg (bad) sbb cmpsl cwtl xlat ffreep add out add inc fwait add test loope out xor mov and xor add push add cmpl imul add or leave das jne call add mov adc xchg xchg push in test pushf xor cmp pop xchg adc rcll pop xor xchg xor je jnp (bad) sbb jne mov xor inc fwait cmp inc or sbb xchg xchg inc add xor dec stos pusha dec sbb sub mov repz pop or insb inc jl cltd movb loope xchg sub ds (bad) lock sbb sbb mov or sub insl jo es adc adc sub test shlb xchg div mov lock call sub dec icebp and pop mov mov pop (bad) adc add fiaddl inc and and mov insl dec sbb insb rol push cmp xchg adc jne mov add shrl incl dec inc roll icebp mov arpl mov scas fcoml add sub cmpb xor jns js add push pop in sbb sti adc add xchg cmpsb mov loopne lock push lret gs and dec dec clc push sub xlat xor push bound mov sub and pop jmp jl mov or adc jmp cmc test addr16 jl sub cmpl shll xor add mov lahf jmp movsb push cli daa mov sub dec sub adc add add sbb and mov pop je mov leave adc repz (bad) shlb or pusha std push push push scas popf mov xchg mov add add cmpsl pushf sbb or mov das push add sbb xorl and push ss jae pop xorl xor xlat aam sub sar xchg sahf fs les enter addr16 sbb fimull in xor arpl sbb bound shlb or dec enter push sarb push push (bad) movsl jbe mov xchg cli shl ds jo jmp cmp sbb out nop movsl push push loope pop add scas pop dec add push pop in adc add mov inc and popf adc or adc or vmovsldup dec lret ss sbb and js jmp cmc jmp or pop mov mov stc ja mov cmp lods add cmp inc fadds ljmp aam sub cld and push aaa movsb or rep in or stos push inc dec or add xchg xor je push cmc loopne shr outsl pop xor xor icebp inc and test sbb jo and addb jmp das mov add sub sar fcoml icebp sarl add inc dec sub (bad) aam jno dec stos mov cmp cmpl xchg lods inc lds sbb outsl ss ja cmpb push nop negb and shrb dec jmp sbb movsl or pop in or movsb jno xlat lods cmp out xor stos mov out push movl dec mov (bad) jns scas aam insl jb adc js ljmp or cmpsb pop push sub jnp int xchg dec imul aas add sti dec inc jmp sbb jne and fldt add push push rcrb inc cs sbb arpl into push je rol aam rcrl jecxz add pop pop and xor pop add ret stc push cpuid jo aaa or push pavgw cmp and por cmp or and adc test ss sbb or add xor aaa adc mov push add add add adc cwtl mov shrb ja push inc fidiv cmpsl add lods mov adc add sbb mov add test (bad) int3 pusha pop loopne adc inc je test pop sbb loop,pt shll jecxz int3 xor adc aad roll mov mov cli add js data16 pop out xor adc push call adcl mov lods (bad) jno je add out sar sub cmpsb test xchg (bad) and (bad) mov fidiv loopne ds add cmpb sbb lret sbb out xchg pop daa dec pusha and add and push mov push rcll sbb movl std and dec ret cltd mov rcrb sbb fldenv mov rcrl lods xor mov inc pop or js mov xchg pop in or (bad) (bad) inc (bad) or mov and inc xchg adc loopne dec loope loope lret add mov nop subl scas pushf ss xchg adc fistpll push mov or dec adc fmull push (bad) adc pop or xor and mov mov push (bad) sub push (bad) cmpsl add pop mov push sarb sbb test daa test nop das jne or mov dec adc adc daa mov jo (bad) pop mov dec adc push jo jo xchg jo cmpsb or mov loop xor roll push xor push (bad) mov or stos jo pop insl dec jmp cmpsb dec xchg push fs add adc lock cmp push and cmp ret bound add mov mov push incl add mov lcall mov popa cmpsl pop cwtl xor push stos (bad) push xchg addl mov push arpl mov call adc sbb pop pop int movsb xlat je test dec dec or push addb mov adc inc mov push dec adc add pusha inc mov or aaa ffree pop inc or xchg push jecxz mov ljmp mov movsl out fildll in push or push push rorl insl loope data16 std insl call dec pusha push test adc in or das call push mov test push test xor or nop loopne daa lods add paddsw es shr repnz nop in mov dec call call pop outsl aas je lcall push shll and lahf fwait lcall ss pop ret mov adc lock lea sti mov add pop xchg ja inc dec and xchg stc or sbb addb and adc aas mov xchg movb flds sbb pop addb int3 mov rcl adc sbbl sbb or inc dec xor add (bad) fiadd push mov mov inc add stc das nop lcall sbb add pusha or mov xor and lea out inc add dec jge sub insl mov ljmp rcrl ret insl test int3 iret (bad) nop addb xchg inc or fsubr popa or aaa orl jno push cwtl bound loope scas das jge or pop fldenv add jle inc pop pusha adc out mov adc aam mov cmpl mov lock and fwait ret mov orl out push lahf jnp cmp negl sbb add fwait je and pop mov add jl xchg sbb enter fcmovnu sarb scas test loop je adc outsb sbb cld fwait cmp and cld dec xchg and mov xchg add xor call add (bad) in xchg pop sub xchg imull mov int mov shrd movsb adc outsb jno jo (bad) dec jmp adc mov xor sub addr16 fiadd lahf aaa fcmovb es aad sub pop add sti test jle pop test xor adc (bad) xor mov mov push cwtl (bad) pusha and mov bswap insb pop adc dec sub mov les adc and adc pop xor inc sti xchg es leave mov xor pop and xchg xor iret cmc int3 out popa aaa dec in push xchg sub test (bad) movsb jge test js adc dec outsb setns dec dec dec dec xor pop insl mov xlat int3 adc or and popa loope (bad) rclb sub (bad) pop shlb mov lods cmp push fisubl fcmovnb (bad) pop dec xchg dec cs or (bad) push or pop sbb add in or push push (bad) dec jb xchg xlat dec dec mov ss push xchg push mov push (bad) movsb add lcall fs xchg jbe ss add dec xchg or popa mov (bad) xor fisttpl outsl sbb add lds fimul adc and mov mov push leave das pop xchg mov adc call xchg mov fnstcw out jl or jle insb lea add jp pop fwait clc arpl mov sub lret dec pop out aas cmpsl and rcrl (bad) fs clc or jmp pusha subb (bad) je mov fisub movsb and sub pop add pop jg cs pop mov push pop mov sbb jo insl xchg mov das cmpsl fsub aaa fisub stos add add pop xchg pusha xor pop dec rorb mov mov mov les lret das pop lock fucomip out adcb adc or lahf xchg pusha sarl or or ljmp jne fisttpll insl mov nop or and sbb ss and pusha pop and dec cmp lea inc fsts inc fs loop sbb mov mov (bad) cmp push out jno sub and adc daa xor add mov cli lock xchg mov inc sbb sub and orl lcall cld mov pop popa and outsb pop lods gs adc push and sub add out js or movsb mov inc push lea inc push mov test fnstcw dec push push or cmp cmp int3 jne cmpl mov mov lods lea lahf mov push xor xor sbb dec pop outsb or shlb gs pusha xchg push shrl adc shrl pusha test xor jae cmpsb mov mov jne imul clc add popa hlt inc add mov cmpl sbb in addr16 jl or push outsb push push sub cmc les mov insl loope inc dec pop js jno iret insb in (bad) movsl popa das push gs ss mov adc popa dec or push xchg jno xorl pop iret add outsb mov and (bad) ja inc jmp jl add jge movl cmpsb or popf xorb mov fs or and mov ss stc out dec inc pop inc fcmovu imul cld or xchg or jo mov jmp push pop dec adc ret push mov jecxz rorb push testb inc add sbb cmp outsb adc adc and jmp push adc jb pushf and loopne cmp adc arpl gs rorb sbb (bad) pop push jbe (bad) sub add sbb out fldenv inc pop dec jae das stos inc fsubrs test das call or xchg dec test push and jb mov popa sbb clc hlt push push dec test pop xchg pop movsl insb inc insl out add mov jbe fmul push sbb xor sbb adc push lock cmp or daa xor sbb xor push or inc pop sub push or mov xchg push lods das pop wbinvd sub sub test push (bad) je add xchg add mov cmp rorb loope repnz or pusha js sub inc sub rcrb inc and inc or xor lock fiaddl pop add sbb pop and fsubrs xchg es lock loopne clc hlt dec es je call inc sbb cmp sub mov mov cmp and dec adc test lock xchg inc inc imul nop inc insb addb push popa mov pop rcll js sbb inc negb dec push pop hlt je clc sbb push imul inc enter inc xlat cmp dec loopne unpcklps test jne sub fmuls and cli jbe outsb xchg js insl fisttp lahf mov roll stos (bad) test cltd sbb push pop lea gs adc xchg mov adc lock loop pop and push sbb inc adc addr16 clc nop (bad) dec jle sub sbb pop adc inc push sbb add (bad) jle fdivs jbe inc xlat xlat inc mov mov jmp ja sub sub shrl inc push repnz pop mov neg xchg mov out xchg lock add sbb and inc or pop repz adc push mov fs fiadd cmp push das incl pop jmp lcall rclb push inc nop or jne lds sbb push xor xlat mov cmp jmp lret or and pop popa mov sbb cmp sub adc hlt outsl inc or dec mov int cmp (bad) je xlat or xchg and lock testb push js mov xor and into out add xor sbb call movsl mov pop (bad) adc push jbe add ret mov jl and int3 adc lret ja shll lea cmc xchg cwtl je lock rcrb pop into leave je lock pop push les jecxz adc mov adc shr mov sbb adc ret fstl xor pop test and (bad) mov pop cmp dec jmp aad hlt xchg dec dec xor mov add sbbb pop dec imul pushf and xor dec add push ret inc shll sub pop mov aam jmp xor mov aaa mov inc xor and xor test (bad) jns daa or fdivs or js mov fdivrl ja je or out dec or add mov leave add adc pusha sbb xor lea outsb mov mov (bad) (bad) dec adc hlt (bad) mov dec les or adc pop sarl stc mov call cmp xor mov add mov sub movsb and mov mov inc clc add and inc pop enter lds call add jg (bad) dec dec dec inc and mov add add jne dec or js js rcrb and sub pop or sbbb jb lea ja inc sbb sbb lret xchg xchg pop sahf stos (bad) mov icebp add into (bad) sub push push xor ret rclb sub pusha fdivrl mov sbb mov mov xchg movsb jb sbb and adc xor (bad) jbe adc lock xchg add sbb sarl aam dec xor nop bound sbb pop lret push int3 sub inc or mov add and hlt ds xchg fwait cmp inc mov stc leave and adc sub push pop add jae shll lods repnz stos es mov xor push and adc dec mov lcall or sub sub jecxz sub inc push das repnz sbb or mov arpl cmp mov sub add or add test mov rolb imul adc cmpsb sahf push dec push push fs sbb jae sbb sbb pushf ss aaa insb inc js je imul or add clc dec ss jb decl push insb jo or sbb (bad) and js or (bad) xor fcmove and mov stos push cli adc or add mov ja dec pop sub fcoms mov and xchg xchg mov cmpl sarb aad sbb pusha je movaps or xor dec push pop and pop lret inc cld adc cmp sub add adc (bad) mov adc daa mov fimull aad add push push or mov xchg push xchg xor rclb fcmovb push mov ljmp and std aaa and ret cld ucomiss push rcrl je and mov pop xor mov push mov (bad) jmp inc or adc xor mov sbb mov inc nop clc (bad) xor sbb adc push dec push push fcoml sub in or test je jmp jo outsl xchg adc jo mov pop sub xor ret mov loope imul rorb rorb xor (bad) push xchg fidiv adc shrl mov adc push mov fs pop les jo shr cmp sub sub daa adc insl sarb or call sub sub xor cmp and ror mov (bad) scas cltd inc adc sbb jg adc push xor mov enter lcall and aas dec xor daa lods mov cltd jb sbb call movsl adc jle xor aaa stos sub inc daa fwait adc dec sarl push imul lea sbb bound fxch sti pop jb js add mov add je and dec subl jl add push inc dec in push lret mov or and pop jmp into mov sbb cs dec aam hlt push popa jg mov pushf pop xor inc cmpsl sbb mov (bad) cmpsb das xor or fcomps inc cli push clc movl jno pop cld js jbe xorl jl xchg and add and inc pushf mov bound cmp add mov jb inc sub cltd xor and and mov pop add loop adc mov add test xchg fildl jbe xor clc add ficom push popf inc xor lsl mov xor lock push push inc push fidivr add lea ficomp or test mov adc cmpsb or pop cmp inc jo ja mov xor mov (bad) insb jl fisttp clc inc push jge rcll push lods ret nop outsl push jg mov out movsl lock or inc out loope gs adc mov and ljmp sub cmp inc or mov pusha sub pop mov and and int fiadd and pop push cmp jae xor rcrb or aaa adc mov in aaa adc imul pop add sti push xchg push ret rorl jge jno fist cmp loopne test pop into jg,pt xor pusha push addr16 imul mov jmp arpl or in sub mov mov mov test imul out and add sbb fcomp adc js adc push mov adc enter dec or jbe insb je xor in cmpsb aam or movb sub lea lds sbb and pop mov in sbb insl popf pop jo lods mov cmp xchg dec adc and inc sub fnstcw inc stos xor cmp push dec icebp ret movsl je push inc movsb std jns adc ret pop pushf sbb pusha mov mov push cmp xchg pop dec adcl icebp or call and mov or mov pop push cmpl mov or inc inc xchg or and xchg (bad) sub rcrb leave push aam daa das std adc pop adc dec dec xor popf pop and pop ret mov lods xchg scas rcrb dec or movsl push adc cmpsl or fidiv mov test sahf js mov in loopne pop rolb cmp add subl push mov in fs movb xor inc imul movl jb xchg fstp loop inc xchg dec mov sbb test fildl ss push dec xor inc adc sbb mov pusha jmp (bad) shl cmpsl add xor lret fnstenv push jnp cmp gs pop data16 movl sbb mov push sahf arpl ljmp sub aad sbb sub sbb adc push loop add ss or cmc lea test push add cmp mov jne mov or sbb cmp ja xchg fsub cmp sub aad inc addr16 mulb cmp xor mov adc push lods jo and cltd (bad) js pop (bad) xor jnp dec xor cmp or xor inc (bad) enter mov loope fisubr xchg inc xor dec mov fidivrl into rolb ja inc mov add mov push sarb insb sahf lods pop mov cmp pop sbb xor mov dec sahf es aaa ds sbb or add push jmp adc inc into shlb add stos sub xchg xor ret push adc ds cmpl cmp pop movsl and sti mov gs sub aas stc mov test inc xor mov nop and xchg add rorb fcoms jl in mov fs push and push jecxz xchg mov ret push sbb inc icebp jne pop insl pop sbb mov sbb xchg in xchg rorb pop pop adc test cmp sub lea test in daa xchg dec push or inc xchg mov sbb out lcall rcr aaa ljmp push sub sub outsl mov add mov sbb (bad) hlt adc in movl call clc je movl fcompl les sbb cmc rol lret cs and (bad) xor inc add rclb aad jnp rolb outsl xor xor push lock (bad) in test mov rolb add enter inc inc dec ljmp pop jo dec fs jno and and mov loope push pop jno leave mov in inc or dec jb pop add clc adc xchg sub and je dec (bad) repz sbb ja xchg jge push adc addr16 jbe inc sbb rol push movsl stc xor add sbb ffreep pop cmp add xor push or add xor cwtl testl sbb sbb or aaa add nop sub stos xor add xor dec and mov add cmp dec mov and inc xchg xchg sbb mov lock jo out movsb add hlt cmpsb jge (bad) adc push (bad) pop sahf and rorb push in cmp test cmp sub dec pop fiaddl sarl test setbe (bad) dec es sub mov pop (bad) dec push add xor pop and pop rol dec push jns cmpsl mov jl mov push dec push inc adc adc jecxz das or dec shlb scas push push call loopne loope pop (bad) mov outsb pcmpeqb sbb cmp iret jo pop add xchg mov xchg push dec adc sub dec js jb cmp mov add and sub jmp push or cs sbb jb add cltd orb pop insb jnp imul mov lock push inc mov cmpsb adcl mov imul push or cmp je cli (bad) mov je xor cmp push push cmp jne cwtl jge lahf adc dec pop inc dec mov dec xchg sub add negl lret imul test adc sbb mov add push gs add xor push or fcomip mov cmp mov pop imul sti aas adc and xchg jl push lcall sbb lea hlt sbb xchg add adc sbb dec add push insl sti fadds or das add or popa mov jmp movsl and inc outsb jp mov (bad) aam mov shlb xor pop lahf push jp es push jbe pop cmp mov adc scas enter push sbb add mov test push outsb mov dec stc dec jmp add dec movsb movsl pop call (bad) push fsubrl add cmp cwtl push inc xchg faddp aaa mov insb stos aad sub push daa xlat mov inc inc dec insb shll jno xor and aaa in xor mov xchg add mov or sbb cmpsb inc sub push in dec nop sbb les movl and jo mov pop mov or sbb cmpsl and push xor pusha adc js sahf fld sbb (bad) sub dec or or loopne sub daa pop fcmovne aam push jno inc mov in mov adc int3 sbb mov lods bound mov cmp jne xchg shl mov mov jg inc pop jo mov mov inc test inc les loopne and fistpl mov add dec test imul mov mov jg scas sub mov cltd mov dec mov rol adc ja mov sub or and and jno cli mov pop outsl mov sbb sub dec sub mov jle push pushf ret ss scas xlat jl pop xchg cmc inc sbb push daa inc (bad) mov mov dec pop repz push imul insl cmpl jle jns rcrl jo xchg mov adc mov cwtl pop xorl push inc add inc jne (bad) shl add arpl cmpsb ja roll insl add and imul loop jbe add popa pop sar cwtl clc cs pusha push fstpt mov sub test xchg fstpl rcrb subb adc fldt or inc jns idivl sbb adc sub mov add inc addb add jge addr16 inc (bad) out mov pop faddp mov push mov mov mov sub push jae je adc in xchg sbb push adc xchg mov les (bad) rcll ljmp repz adc adc clc and or push pop dec (bad) lret sub push or push insb add dec cmp add pop jle,pt push call push xor lcall popl cmp inc sbb test dec ficompl mov cmp lea sub inc push push add pop push add mov push fldt fadd movsl jl jb add addl gs mov in roll inc or inc add aam push ja mov adc or and in sbbb loope popa imul cmpsb shll add and and sub jmp jo,pn sbb fs add adc sbb mov add in (bad) cli mov mov daa into int test repnz lea (bad) mov test ljmp adc mov push adc push push mov fmull push loop push lea and and jecxz jge mov sbb jecxz adc xor xchg xor or dec add sbb inc pop xchg push sbb push pop pop dec je adc sar inc xchg pop repz xchg andl nop push sub fcoms xchg sbb stc inc and dec push adc fdiv pop or or sub scas sti loope xor push adc enter push push fsubs jo in fimull or (bad) imul or les andl shlb xchg jmp mov xchg sbb je cmp xor add cmp scas movsl cmp das fiaddl inc imul sub femms xchg mov cmp push test hlt pop addr16 loop jno shlb lock jecxz ret jae fsubrl cli add inc fs stos mov iret (bad) insb dec daa or jo jg push daa dec pushf outsb inc cmp je test aaa loope mov lds (bad) jne dec sbb or enter (bad) xchg dec sbb and nop pop add movsl push dec pop (bad) xchg int3 enter punpckhbw pop inc xchg xchg or outsb aam xchg (bad) and repnz stos insb inc add push xor xor inc or add bound and jmp add in and mov test mov pop cmp inc jecxz pop pop sbbl adc and sub add hlt test loopne es push int3 aad or jecxz mov dec fmull and sub add sti add sbb pop and xor jb ret (bad) pop popf add cmp mov insb push fs pop pop cmp cmp push push dec dec cmp cmp inc inc cmp iret dec push xor test push ja and mov pop (bad) or xchg mov mov loopne,pt mov orb mov cwtl cs and mov sbb push inc adc inc and popa shll push nop xor shl and inc sbb add pop add imul rcrb scas mov xchg inc and mov lahf out or jo inc inc mov insl inc addr16 inc push outsl xor sbb add mov push push loop add dec nop xor rcll sbb xchg mov add mov adc and outsb and cmp add or jmp or push (bad) dec mov movb inc mov add mov out int3 test dec call out xor mov add sub cs mov je pushf pop stos lcall pop inc enter js jns in push mov ja pusha mov inc push pop pop sub xchg pop add mov inc repnz mov dec push sbb cmp loope fs js repz jb out inc inc loopne sub andb or xchg pop adc jl pop in repnz fistp addb mov push imul xor ss pop sub pop xlat add fs xor in mov test cmpsl inc cs or jo or test nop in pop hlt fisub xor push sbb dec enter aas aam sub cmp jne mov sbb push rcll adc push dec daa add enter sbb or mov inc dec add rol es cmp arpl add imul imul scas jl pushf pop adc pusha fadds mov inc push daa fs mov sub fimul leave add add dec add lcall pop mov scas xchg ja push mov sahf push inc pop adc das mov mov xchg xchg or pusha or pop pop and pop xor outsl or push je add adc or and xchg pop pop and add or outsl inc add adc mov loop cmp (bad) sbb nop adc inc push leave lahf dec pop nop out shlb inc aaa test sbb cmp cmp adc pop push sbb es mov add mov add xchg mov dec je jmp test ljmp inc ljmp pop add mov xchg inc in and or fs inc call in aam arpl jae ret add jmp mov push pushf mov pop or sub mov or sub notl fcomps sbb test je daa pop (bad) int3 mov movsl add push das shrl aad aam dec pushf or push push sbb pop pop pop ret dec pop pushf imul push push push pushf aad add pusha mov jg enter xor mov mov mov pop ss pop xchg in dec mov pop nop inc xchg in mov das mov push sub and imul add or adc cwtl jns je cmp fdivs insl jb jnp pcmpeqd inc dec jae cmp bound dec dec jnp nop es push sbb inc dec sbb inc je movsb aad pop mov sahf sub insb push pushf sub sbb and mov test mov sbb mov cmp sub pop fs lahf mov add dec gs int3 sub push push xor sbb and orps mov pop push jb test pop push add js and pop inc cmp cmp gs bound nop enter add or inc jmp or cmp call pop mov fmuls jo mov cmp mov push push arpl rcrb add in jmp inc xchg pusha cmp enter movsb xlat dec mov add and push les push or aaa in push dec fwait lods scas mov popa xchg push sub into test jp leave jle pop fsubrs xor xor or or adc push or add add lock xchg popa adc pop jno popa pop in cmp sbb loope xor daa lods and in pop insb cmpsl cmp test cmpl xchg test mov inc push adc mov jnp cmp inc and mov push or push mov fmuls dec das andl inc out inc mov fsubs push sub inc xchg sbb mov pop dec scas iret je or fsubrl ret and jne fisub out adc fistl mov mov add lock pusha pop xor xchg adc fwait pop inc lea push push and add jecxz lods inc sub (bad) xchg jns (bad) out fcoms jbe add sbb mov or dec cs popf clc push sub jbe shrb inc (bad) ja and cmp mov call and nop mov rol insl out cmp pop add inc mov flds lea nop out add mov into sub mov mov xor cmp jl test xchg mov orl insl cmp adc mov adcl add rolb enter insl nop push (bad) div pop push std push mov mov loopnew inc inc (bad) fiaddl xchg mov or add pop xorl push mov add xor or add or int3 cmp mov insl popa pop push xchg sbb add lock xor outsl test pop imul add bound cli mov dec push mov or scas out sbb and popa inc movsb mov lcall push fistl jmp jg cmp xchg mov scas and insb or arpl fwait mov push je outsb add push jmp cmp sarb (bad) test pop sbb in pushf fstps inc aad test ja test stos jo jge push sub xor rol (bad) push rcrb cld push jg jle xor fldenv aam aad jno mov lds push frstor push rorb add and cmp and icebp cwtl arpl stos stos adc div mov and jle add jmp aam lret jmp out sbb aam jo pop add loop into arpl xorl add xor inc test jne xor and test sti in sub popf or shld stos mov xchg sub push test add cmp loopne adc xor cmovae mov mov jl xchg sub mov adc pop sub mov add cmp jmp ret (bad) mov push xor popl fbld dec or jg xchg push imul sbb xor scas mov loopne or cmpl dec cltd xorl andl movsb mov and (bad) or cmp fcoml or inc push pop xchg add mov push jmp cld lahf out jmp pushl push push dec adc add mov lret push push addr16 push icebp adc push enter xor push loopne push adc or or mov pop cwtl mov cwtl dec mov jecxz insb loope adc or loope inc dec je es dec in inc add jp mov cmpsl cmp mov in lds mov pop sub movsb push ss jo clc ret adc adc inc lock sbbl or jnp dec jb inc sub push xchg xchg adc dec call fidivr fsubrl stos sub cmp call outsl add data16 adc je and inc cmp lea in daa xchg mov push pop jmp add cmpsb aam stos pop dec push jp fimull or inc xchg aaa and shll adc jmp sub scas mov or mov mov add xchg xor cmp loope outsl mov ljmp outsb mov outsb jecxz and mov sbb and imul out cs scas out cmp inc scas mov aaa cmp cmp adc clc push mov out test add dec pop das pop pop mov mov dec scas xor cmp (bad) xchg push add movsb je incl dec out aaa xor xor and mov je mov js lret mov adc das fmuls or das test sbb icebp popa pop cmp stos ret inc mov jge out ret cmovbe movb enter sbb xchg addb xor repnz sarl jae je das xlat rclb dec cmp xor rorb pop sbb icebp sbbl fbstp cmc cmc cmp and mov pop pop fnstsw mull nop xor jno sub adc inc add icebp adc imul test pop inc (bad) nopl ja faddp imul ret inc push push and adc xchg lcall pop fiaddl arpl sbb xchg push adcb push insb imul les lret cmp push mov xor out cmpsl frstor test push sub pop sbb pop and insb mov shrb push addl pop push je push add sub mov pop pusha adc adc xchg jnp (bad) push inc imul inc push mov shlb adc divb lahf jmp sub and ror inc rcrb xor jecxz add jae mov aas (bad) sub pop sub inc das je (bad) icebp inc fiaddl jbe lds dec jg inc xor jbe cmp jae movsl xor (bad) and lds insl js bound ficompl lcall add mov sbb xchg push fadd inc push jmp mov je test mov push push cwtl lret aaa test xlat inc add popf adc call push push shrb xor or rol lods inc imul fwait push mov pop jmp jmp (bad) inc or sub pop add cmp loope cmp lods adc fcomps pop mov mov ret insb je jl es mov ror dec dec (bad) gs mulb and xchg out pcmpgtd push push movsb or jmp je popa xchg mov in ds imul movl or push and and or mov mov cmp or cmpsl push movl in dec (bad) adc pop push and outsb in sub dec pop loopne bound mov push movsl movl or out cmp nop jle xorb ljmp and scas cmp add adc dec or sbbb push jmp imul fwait sbb orl jle daa in inc sbb adcb push or jo xchg pop sahf inc pusha ret ja hlt pop sub and push repnz leave popa (bad) sub orb inc pop inc pop (bad) or sbb or add pusha mov mov pop inc dec scas addr16 sub add cmp or aad les imul dec xchg lock inc pop and cld mov push mov stos popa push inc test inc incl dec pusha pop inc inc mov inc inc add inc push push and and cs pop hlt push add sub (bad) or out loop js lods mov dec push jne add (bad) jmp cwtl inc mov sub adc in mov or sub adc lock sbb rorl je repnz inc test xchg dec xor pop jg adc or mov out shr pusha add jbe dec adc and dec cmp roll xor (bad) push inc cld mov in pusha fdivs lock xchg cld cmp cld loopne (bad) dec adc outsl jp add (bad) xlat ljmpw pop xor push loope nop das mov cmp rcll shlb jo fld jecxz outsb insl pop clc (bad) leave pop js xor ss pop xchg data16 or mov jmp (bad) push and hlt clc pop movsb in hlt sbb popa test pop push xchg push ss sbb ret inc outsb push (bad) xlat ljmp scas dec pop inc xchg in add add jno pop clc xor inc and and dec pop dec inc sbb cltd cmp push jle add sub inc (bad) lock or xor test adc lret mov cwtl xchg push jle (bad) hlt jmp sub sbb ja add fimull jne aad movsb pop mov rolb rorb ja inc dec xor inc or sub imul and mov fldenv adc dec sbb sub fistpll jge lea scas push pushf mov push icebp dec mov sbb mov imul sbb mov (bad) clc jne fnstsw movsb rcrl xchg loopne add cld sbbb iret mov push mov (bad) jbe mov cmp inc xor (bad) aam rorb mov or cli push faddl out xor push jo cmp clc mov pop arpl mov mov mov xor mov adc pop pop idivl sub insb add pusha test adc or and clc pop push dec lods push ret nop shl xorl jae push mov daa push push test insl call outsl inc clc add movsb icebp bnd xor daa xor mov scas xor lea and push or mov add addl and xor add sbb and add clc popf and xor pop add xor cmpl pop xor or mov arpl xor std xor inc je jl push test pop fstpl les cld jb mov cmp dec lods dec push mov fisubl das pop jno in or rcrb movsl inc pop call push lods cwtl jb inc ret mov mov nop xor lea mov inc dec jne inc inc inc lods cmpb xor lds mov les mov sbb jo push in nop nop mov dec cld jnp add jmp xor (bad) pushl mov and pop rcrl (bad) (bad) and (bad) mov dec bound mov push test (bad) pop mov not outsb mov arpl adc push fsubl test (bad) std ja mov push fidiv mov xor neg push xchg test pusha push and bound xor lahf out push cltd sub mov or repnz push out or xor pop sbb out jg cs std xchg inc pop mov (bad) adc roll insl and and ds data16 out sbb outsb jecxz pop jmp out mov push xchg push sbb adc lahf mov xor pop pop in fcomi pop mov push sub push out movsb inc sti or fdiv int call cs mov ja jae clc mov xor insl xchg mov mov aam (bad) icebp sti cltd int3 xor fcompl or mov dec dec xor xchg and cld repz fisttpl fisttpll (bad) pop sbb pop sbb cwtl (bad) lock sti pop cmp and rcll adc adc pop and fistl movsb std pop jl adc xor add mov push sub and insl xor pushf nop inc mov cmp sahf imul loopne das mov mov cli push mov imul jle and (bad) (bad) pandn mov test test push push lock clc hlt xor fcmovbe cmp or rol or and dec rorl clc sti imul pop xor mov mov mov push mov leave rcr int les mov adc xor mov or jnp out mov mov test sub insb push imul pop cltd es loopne cmp mov sub (bad) mov (bad) xor lcall cwtl xor mov mov cwtl clc clc sbb lahf add mov fwait sbb sbb pop in cltd xchg jp lock push push pushf movsb xor stos call jo movsb cld add test in js hlt data16 mov push lcall sbb sub lcall call leave mov fsubs push cmpsb call xor adc or test xor std loopne or cmpsl mov fcompl out inc loop mov out mov cmc (bad) mov xchg push pop clc dec push mov lock sarb clc int3 fcmovu inc xor pop push mov and fstps cs sysenter scas rorl clc insb xor add rol add push mov sbb cmp xor mov outsb repz call xchg andb sbb sub idivb and sub pop mov movsb jmp or mov in out or stc xor std adc popf adc aaa and (bad) xchg rolb push imul push mov loop pushf fisttpll test leave add push fildl inc fcom movsl out cmp pop (bad) pop rcrb insb xor jle pop and fisttpl into pop addb xchg mov test jp out add sub ds cmpsl hlt incl mov rclb push lods cld orl and incb out lea fdivrl add pop out sub fld xor and xchg push (bad) dec xor lds out mov cs jnp push pop or pop mov (bad) jle pop fldenv pop cld lcall iret std bound aas scas cld sbb xor and jecxz fdivs mov int ljmp push out mov xchg lea ljmp das push xchg add mov mov mov add cmp mov xchg xor imul mov mov fistp dec xor fidivr rcrb call mov dec loopne mov or dec add xchg fistpll cmpsl add lahf and cmp or dec (bad) xchg hlt push cltd or xchg adc push mov sub inc mov fsubrl inc mov and cmc inc xor add xor lock pop adc in mov jbe mov or mov mov std test and (bad) mov mov es inc xlat mov or push test jne ret imul and push jns out xor push lock push xchg ja xchg aam test int3 xor (bad) test mov xor cmp mov cmp (bad) icebp or cmp adc mov mov je jbe add push sbb xchg bound js push lock push and jl enter (bad) dec lods sbb (bad) shrl add imul jae adc sbb mov (bad) pop lods push das jle and lods jmp incl lds faddp xor sbb decb fist shll or sub and repz push shl push jl jecxz lods mov pop jbe xor test adc imull cs xor push sub xor add xor fcompl cmpl add adc (bad) sahf bound sub aam mov sbb cld sar imul fwait pop and adc push cltd or out inc dec dec sub mov inc sbb stos fildl add push les push bound cmpb xor cwtl in mov xor call push (bad) jmp subl stc cmpsb lcall fcmovbe mov cmp adc icebp js dec mov test lock shlb ss testb in test dec (bad) mov call les jecxz int3 push mov xor mov test xchg test lods and mov test mov stc mov nop pop xor (bad) aaa out push xchg xchg lea test gs andl sub xor fadds xchg jo add out loope and in xor cmc cmpb fistp loope mov (bad) mov push addps imul mov add sahf stos mov ret fst pusha push dec movsb mov mov popl (bad) (bad) repz add mov jecxz add fs sbb xor data16 imul popl add cmp pop adc stc lock adc js pusha xor xchg xor pop stc test sbbl add test cmp adc push js adc inc bound scas (bad) insl cld cmp aaa pushf xor cmpsl inc jg fidivr das xchg test inc xchg add mov jg lock push mov push or js pop addl daa push sbb aaa (bad) mov xor clc shrb xchg fsubr das movsl loope psubq mov (bad) and lcall faddl pop loopne add xchg cmp xor xlat notl sub xor push adc and mov push dec sub cmp push stos incb adc es ret xchg ret add xchg or shl cmpsb mov sbb push lock lods cmpsb inc push notb push and mov sbb stos call shrl loopne and dec mov sub or test add sbb iret and xchg insl add stc loopne pop pop mov pusha xorl add sbb mov push fsubrl xchg xor sub in cmp (bad) lcall scas xchg cmp nop push add ss jmp or vpackssdw or mov out add out lods adc mov call jo out sub int3 (bad) pop sbb sub clc mov mov insl mov jb out xor dec xor daa or xchg fimul ds xor stos cmp lods fs inc icebp sbb cmp sbb push lcall xor lcall jb or call jmp shl addl push mov pusha sbb cmpl fistp mov pop daa gs or loopne (bad) xor loop push mov scas mov xchg or or push push and hlt lret out fidivl (bad) and add mov sbb shrl les in mov fisttp dec or push pop add fcomi arpl push add (bad) clc test clc in clc rclb mov in push les pop cmc sub mov mov (bad) push int3 and xor pop pop test xor mov test add in shlb mov mov cmc ret xchg clc sbb xor cli adc data16 dec cmp loopne pop jbe or icebp pop jo fstpl and daa mov add test popf inc repnz (bad) push subl (bad) in mov jns stos ret mov cltd shll nop dec lods mov adc outsl movsl add push push xchg xor pop push push or push pop and and xor inc xlat push call in loopne fmuls cmp aam imul adc subb lahf jmp push daa or loope pop (bad) (bad) xor add sbb (bad) dec rcll mov xchg and push xor or inc out push js jecxz adc inc mov mov sbb je mov push xchg aam xor test mov test jp jb lcall test sub or mov and test into add outsl or adcb loopne addl leave jp sbb mov xor xor cld mov xchg daa mov xor cmp std dec out repz xchg cmp pop jg daa sub aaa popa (bad) hlt out adc int3 aam out clc gs xor xor fidivrl inc push xor or (bad) mov popa pop nop or pop cmp insl pop sbb jle adc xor jg stos push enter xor out rcrb loopne adc rclb sbb rcrl mov movl pop es adc icebp (bad) mov out repz mov (bad) xor pop add (bad) mov mov sub iret mov (bad) fisttp in rcrb cwtl in int3 pop decb lret xor inc push xchg mov lahf les cmpsb pop (bad) (bad) imul mov lahf in add hlt scas test xor into xor jmp mov lock into push or addl add shr mov mov mov mov mov or mov sub cltd sbb jnp fimul mov movsb push fwait xor jl sqrtps and mov fs pop xchg fidiv cli cmp and cmp and xor and inc sub cmp test cmpsb aaa push aam xchg cli pop mov push jg pop mov xor mov xor fnop scas or mov call call rcr xchg movsb movsb push stc imulb xlat mov xor sub repz mov scas and cld adc decb sub clc mov or sbbl or sbb roll fdivl shr push jo loope in xor daa scas mov dec mov lret mov and add inc ja pop ret fisttpll ficoml cmp loop loope popl mov outsb in sahf mov mov add aas dec aam (bad) pop push int3 out jmp imul fcoms pushf pop hlt sbb sahf push or pop and pop xchg mov xor outsl pop xor fist out pop mov xlat xchg cmpsl movsl scas out mov hlt clc int3 jne mov push dec sub push add mov andb call sub sub xor push ret adc ja pop dec sub stc rorb scas adc cmpsl jecxz mov push and xor jecxz aad (bad) aas pushf mov call sub add dec fnstsw call into or xor or jbe sbb adc push sbb shrb push out pop shl addb sub jbe insl movsb pop xor enter js in sub mov cmpl cmp loop push dec loope cmp outsb popa mov inc and in jle sbb adc aad sbb inc push push dec xchg mov roll std and addl adc jno ljmp cmp push or xor cmp mov dec sub xor imul int xor jbe mov test cmp cmp lcall jmp notl mov testl cwtl xor mov and es scas jmp push push xor ret or out fcmove push pusha movsl dec loopne xchg data16 inc mov punpckhbw mov mov add ret in aad mov xor push movsb aad cmp push test dec add pop fcoml pusha xorb pop adcb and add ror sti sbb (bad) sbb push mov addl fwait icebp icebp insl sbb jmp xor sub add mov mov into lahf pop clc mov sub sbb cld ret xchg pop lods xchg add aaa and cld add adc test bound inc das fdivs dec arpl aad mov lock xor outsb cmp test xor inc icebp arpl mov dec addr16 adc loopne jmp mov fs sbb or sbb sbb and push jmp insl inc add jmp mov or sbb (bad) cmpsl inc sti inc (bad) cwtl jl and xchg scas stos pop repnz test push ja add mov out lds cmc shrb xor lret in ret ficomp mov jo mov test jmp (bad) js dec push xor cmc (bad) mov xor (bad) (bad) xor adc in and pushf addl cmpsl pop cmp xor test xchg loope xor xor lcall in jns mov (bad) xor xchg push cmovb xor leave out fbld pop and xor pop cmpsl ret jge loope xor adc jmp jp fsubs pop jb enter xor loopne pop sub cli lea push lea stos mov mov cli lret je imul cmpsl jne push imul sbb xchg movsb clc jmp jbe lods fwait lea ficomp and and cmovp dec xor add xchg lea test jle shrl lds sbb push sub xor dec lods or or out cld sub cltd es xchg xchg inc cmc clc aas test test inc (bad) push inc or pop cs mov fistpll loopne mov sbb int inc in loopne push pop mov inc and push mov mov inc push (bad) jb jmp ds test loop cmpsl dec pop add mov orl movsl rclb add adc mov xchg and push test lock mov fnstenv xor sub or add or add (bad) and lds cmpsb inc mov test cmpb fsubrp mov cmp mov mov add cmp xor xchg push mov scas push jle rolb aam das test add gs mov fiadd ds test pusha pop std test int3 out push and imul pop mov outsb lcall sub pop xor loopne or sbb setbe add sub imul imul mov xor jae or mov jnp loopne lahf dec push inc jb pop jb xor aam pop add fisubl (bad) lods add pop call mov test push (bad) rcrb ljmp mov jne pop mov dec and xchg repz xor lcall in and pop ret or xor movsl (bad) xor repnz rolb push insl and push jmp xchg xor and mov push cltd push lret movsl aaa or xor shrb popf iret fbstp enter or mov out mov mov mov cmp cld xchg stos or test (bad) in pusha xchg xchg adc push adc adc scas mov cmp (bad) mov or stos cld cld and imul mov inc divl sub scas mov mov es mov ds shlb fnsave ret cli (bad) int3 mov adc rorb aam mov cmpsl push xorb inc or fisubr add loope push mov repz ss loope xchg add add jge js xor cld (bad) xor mov mov pop xor mov pop xor and push and jne test add repz mov sbb jg pop xor mov pop push fmull int3 or nop (bad) mov sbb xor xchg cwtl rolb xor add loopne jno xor mov pop push cmp aas cwtl push fs out incb nop clc int3 push or cld imul mov xor jmp mov push pushf fs (bad) inc sbb sub dec push test push push enter cmpsb pop pushf mov divb xor (bad) fcomps mov dec out dec popa lret out mov dec lock fnsaves push inc and or fwait mov fdivs cmc or sbbl xlat mov cmp lea lods sbb xor sbb fs das rorb out mov push push (bad) xor aaa lock push or push in push push xor xchg mov icebp mov and shl mov adc gs cmp fwait (bad) push in cmpsl dec loopne popa sub sub loope mov dec lahf int3 push add in pop lock decl (bad) add and mov add jnp or add daa aam fwait dec cltd cwtl mov inc adc icebp addl adc movsl xor lds pop lods fild jmp push aam loope pusha mov (bad) sbb fwait or mov push loope mov sbb lods outsb mov jns push dec js xlat push dec je sahf lock mov in push mov rol pop (bad) addr16 imul or rorl jle in divl out insl rolb pushf cmp cmp rclb pop es fidivl adc movsb xchg in pushf mov pop pusha addl std movsl add push test add test push into pop mov aas add xorl cmp or push cmpsb arpl (bad) fildll cld xor div sub inc fildll rcl pop fwait imul push push (bad) jp testb ss lock arpl sub adc movsb mov mulb cld pop mov mov xchg push mov sub adc jmp xor pop test pop dec push mov adc pop add mov add and pop (bad) js cli and in push ret mov xchg sti inc or or test stos dec or adc shll ret xor lcall mov js and shrl ret inc pusha or pop popf pop lret ret lahf sbb push xor ret and loop mov and cltd and test fidivl cmp adc ja mov jle jl flds jg es fdivrs mov inc add sbb fwait out js mov xlat loop insl push (bad) cmp in (bad) dec (bad) repz in or fistpl iret sbb sub pop pop fidivr adc rcr inc xor sbbb adc lods or mov sub cli inc sti pop movsb fsubrp je xor sub or and sar fs inc inc aas enter ret inc cmp push mov mov sbbl loopne pop mov sbb stos mov add push jl mov addb xor faddp mov cmp sbb push mov adc jmp xor aaa jb fidivrl jp xor mov dec mov inc mov outsb cmp incb sub imul out add sub mov (bad) cmc push data16 ret cmp adcb xchg pop push loopne sbb mov xor (bad) mov and inc xchg inc jl push pop bound rcll xor mov inc adcb xor js sbb cltd and push cmc mov sub or std or or aad clc popa cmp scas popa jle and lcall lock call push fdivs push add in hlt lcall (bad) xor push mov jnp das and push jo add cmp xlat cmpsl adc pusha mov and xchg out rorl xchg mov int sbb mov test rolb push mov push (bad) aad loop aaa xchg xor sbb cmpsb xchg test sub sahf orl int3 adc push fmul and sbb hlt sti pop cmp sbb pop jmp sub test inc pop or jne sub aas cmp clc push sub in lds add in ror cwtl out adc sbb movsb lret xor das sarb push out pop cmp jl data16 lret mov jae and dec fsub cmp xor mov (bad) divb xchg outsl cmp push ret adc mov dec xchg push and stos sbb sub xor and xchg or lcall push xor xchg ds repz fstpl insl pop mov rolb push mov sbb inc je arpl mov adc loope jo and fnstcw cmpsb (bad) xor fsubrp jle mov test mov xchg stc je faddl fidivr insb push in jb lds insb dec inc fcoml (bad) imull and ror xor xchg sbb push sub (bad) scas sbb inc mov mov lods jo lahf fcomps ds adc or pop hlt popa shlb ret lods push xor sbb pop movsb sbb cmp xor mov (bad) sub test pop xchg leave push les add cmp xor add cmp adc xor adc push inc sbb dec mov daa repz rorb mov push std ret add ds sbb jo and sar arpl sub test loop out xor jne fisubr adc adc call add mov xor ret adc xor xchg mov insb lods xor icebp adc mov (bad) jno jae push add ficom es or (bad) jnp mov sbb lea movl insb imul jne lods stc test imul inc stos mov mov pushw adc divb or out mov roll imull popf push int push rolb mull cmp and ret dec inc lds lods dec enter jmp sbb insl pop xor inc xor dec daa lock xchg push pop lock add int3 fmuls mov adcl mov dec sub mov inc fdiv jb in mov lea gs pop cmp cs mov pop lcall psrlq nop xor sbb jns (bad) pushf mov pop das test js call (bad) jle mov sbb in push sbb iret sub loopne cmpsb insl aam sub cld mov call jp cmpsl adc fs xchg sbb sbb loopne and push lret and xor adc inc je ret into xchg dec nop lea test jle adc jne daa (bad) fisubrl rorb pushf nop add and (bad) adc sbb pusha pop ja rcll (bad) push out pop push inc xor adcl sarb push sub test inc and rol inc ret cmpsl push insl xor or adc xor inc in dec ds nop sbb lds lds jo insb lret sbbl in test rclb (bad) jo ds test adc pop hlt push inc stos es mov cltd xchg sub xchg cmp test jg jecxz (bad) xor mov push out or xor mov pop xor mov (bad) mov dec popa xor daa rcll jns xor mov sbb in clc xor sbb cld loopne cmp dec repnz mov xchg test out mov mov es into ret mov leave add mov jp std lea push neg lahf cmp icebp and or push push xchg shll vandps rcl and pushf lea cmpsb jmp xchg icebp xorb mov mov push clc es icebp test les ret sub jmp mov sub jbe xor xor push push push inc adc ss ss cmpb xchg aaa test cmpsl dec aam xor cli dec mov ja ja push jbe (bad) xor adc adc icebp mov sbb sarb push sub addl sub rorl jle pop cmp repnz xlat push sub insl insb lods es add out inc das pop xchg xor hlt sub std cmp outsb int3 xor jp pop jo and fsts sub icebp notl lahf lock scas in push and fimull into xchg sub stos xchg loope std push adc fwait pop out icebp mov sbb subb cmp mov out and or rclb add xor xchg xor mov aad cmp push lcall aaa stc push mov out roll pop repnz dec fdivrs mov xor cmp fstl or sub mov out popf xchg sbb jne lods xor iret sub (bad) hlt cmp xor cmp xor pop (bad) xor add jmp sub pop inc push push add xor in rcll jp fisttpll jno lahf or adc dec repz push sbb cmpsb icebp pop pushf mov loope sbb stos in cmp xchg xchg cwtl adc (bad) xor mov sub cmpsl push shrb cmp jmp ret push cmp mov rclb inc xor addr16 sub xchg mov push xor andl push sub repnz sub and es add in scas mov das dec xor repnz aaa in or adc jb aam sbb outsb inc mov or adc or mov jmp movsl cmpsl leave data16 jbe adc xor (bad) push adc mov cmp and test popl fwait adcl mov pusha pop fmuls jg and sbb mov in or push jo (bad) mov adc mov mov shr sub inc adc adc jne mov hlt push fs pusha fisubrl push push loope xlat shl and sbbb pop (bad) or adc jne cld or das hlt pop cltd enter call adc mov (bad) adc lret cli pop or (bad) mov or ret pop add loopne mov sbb mov or stos pusha sti and in add fwait (bad) pop adc adc paddusw adc sub lock cld inc shrl inc mov (bad) fisub sub lret xchg add (bad) sbb ffree out lods lcall (bad) dec scas mov pop lock js sub roll cmpl fistp das jo jno dec into mov lds and adc or stos sub in push add rcrb fstpl add aas enter jmp test stos adc (bad) xor int3 mov or inc xchg mov xchg dec or inc cmp jg test ja nop push mov or dec mov xor pop test sub pop stc mov (bad) xchg mov call xchg xor pop jmp loope and in xlat mov loop and push pop xchg ds fild fsubr icebp mov enter mov ds movsl cltd mov fdivrl xchg jle addb adcl mov add cpuid add jle scas roll pop dec add pop push fdivp mov pop mov xor mov popf push test rcll add sub adc fnstenv push or es out cmp push pop jg movsb adc js push out add xor fdivrs lcall lret mov inc xchg pop neg xchg pop and and jecxz cmp push int fist bound mov pop fdiv xor cmpsl sub sahf cmp hlt pop push shl cld sahf sub (bad) or mov daa push push sbb shll shrl xor imul ffree test sub mov mov pusha (bad) mov jne xor mov xorl lahf enter rorb lcall push lds cmpsb adc or pop mov add jo add fstpl or push add sub cmp loope mov scas sub add add xor aaa xor lock mov xlat adc icebp xor dec xlat cli aad pop in xor iret sbb fsts cltd or pushf mov cwtl lea cmp add enter fidivrl loope add cmc xlat out inc push xchg xor js sub jp sub push paddsb loopne pop scas (bad) push adc cmp adc dec jb mov pop jmp aam xchg add ret rcrb cmp call stc rorb pusha jp pushf movsb xlat sub arpl shll rorb mov (bad) into enter push add add out arpl sub repnz fmul add rol sbb lods mov or inc pop inc pop cli mov frstor sbb push sbb pusha notl xor dec and sub hlt loopne mov pop xor shr add fs mov jmp push je push les (bad) dec cs mov (bad) arpl loopne cmp pop dec dec push out lock add push mov push or xor imul ljmp xchg or test loopne xchg test lock sbb enter sahf push jg push jo adcb sub dec xchg popf notl mov pop pop stos adcl sbb mov sbb rorl in test xlat xchg imul pop mov movsl es mov es mov mov jl popl xor sub faddl in dec in out sub mov incb add cmp ds sbb xchg nop test mov sub xchg mov xor push push popa cmp lahf mov pop rcll out int3 pushf jmp call sub push push xor pop xor inc (bad) push push dec xor push sbb out fildll cmp mov sahf sahf bound dec (bad) inc out pop popa dec push add (bad) sbbb cmp xchg add in xor es xchg or popf and pop pop (bad) xor out enter jae add repz mov push mov xchg cmpsb cmp cmp test sub adc mov add sbb repnz push mov movsb outsl jnp fwait xor roll inc dec fcompl movsl xor jbe sub xor push (bad) mov jmp inc imul xor aas call adc lds das sarb (bad) jg xor sub and sbb js pop imul stos ds loop addr16 rcrl test scas xor insl sbb in mov sbb fisubl adc sbb in hlt imulb dec lret mov adc push or mov stos mov enter sub add (bad) clc movsl sub ffreep mov les push icebp dec jbe (bad) xor sbb nop mov add mov pop (bad) repnz test push inc insb in xchg or dec add dec enter (bad) movsl and sub sbb jp mov test addr16 add or (bad) test or inc pop sbb mov add push (bad) mov dec add lss push sbb dec add mov push arpl push or pop pop dec lods xor jge out outsl mov pop sub gs leave mov movsb scas adc dec arpl jo adc lods and cs or cmpb mov xor mov std in and or sub dec push cmpsb adc jo xor jae jb stc insb mulb cmp adcb dec adc stos cwtl adc sbb mov sbbl movsb push adc lahf (bad) or out adc adc sub sub mov and es ss fcoms mov push insb les pop imul or mov outsb jb cmpsb inc lds mov ret loopne (bad) aaa pusha inc pop lock pushf cld or insb mov pop adc mov mov cmp (bad) ficoml les das mov loopne (bad) stos mov mov inc cmp movsl add jo cmpsl push sbb fcmove out or adc dec xchg insb xor mov xchg cmp daa xchg xchg xchg xor lret xchg and fdivrs fwait jmp mov sbb insb push add or and mov sti mov sbb cld and push adc sbb inc cmp or xor sahf adc es push std mov dec dec adc xor cmp (bad) and int jmp mov adc mov jge movsl sbb out xor pop pop (bad) dec mov mov push loope jge xor cli push xchg mov movzwl xchg stc and adc inc jb roll jl sbb xor test jl mov jmp push mov mov jo dec push or dec loope rclb lods push call lcall mov fcomps cwtl insb movsb push pop pop fadd mov xor sbb push inc inc pop mov loopw sub pop (bad) pop push or xchg xor mov mov les or mov jmp and das fdivrl aam mov inc xor push clc mov pop into test xor mov lock mov sub aam sbb and push sbb (bad) bound outsb (bad) mov sub out xchg int3 fistp sbb jo (bad) int3 clc popa movsl jl sbb movl cmp fldpi add push das cld in lret push fmuls fadds lahf lcall lret cwtl pushf fbstp push in ljmp push push lahf dec movb int3 (bad) pop sbb outsb lahf call add pushf or sub arpl push dec shl jmp mov loope mov xchg push insl scas nop adc jp mull adc jo pop (bad) or mov xor rolb loop mov inc pop shrl test adc arpl push movsb or xor je jg sub sbb push pop add out in cmp clc add mov xor rclb (bad) loop xor imul sbb ljmp xor dec lea sub dec divb inc loop mov sub and das sub std sbb xchg enter inc test ficom mov js fnsave jne loopne adc xlat repz mov lock adc movsl mov xor ret fidivrl loope das out inc (bad) pop in jb mov jae mov (bad) fildll xor mov mov icebp popa pop mov mov jg cltd imul subl lea hlt fdivr pop push mov mov push out out rorb mov mov ja push mov push scas stos (bad) cmp scas js xor lahf push fcomps cs lods xchg addb xor aam mov or xchg rclb xor and and rcrb pop mov push arpl xchg mov inc (bad) add pop lock rorl shlb arpl call lea enter jmp das jno rorb push xor adc pop lahf xor sbb jmp je pop add nop fwait mov pop push jbe mov push cli fadd add inc out or popa out and adc fisttp add fsts xor test nop dec movl mov out cmc fsts gs push push js hlt jmp and mov xlat add ss je sub nop push push xchg addl or sub inc mov cmpl mov (bad) jmp push xchg adcl sbb adc fcmovnu add frstpm(287 nop push mov rorb sbb adc fs je xchg mov test or jno pop adc daa xchg sub pop enter mov xor xor push jl and out aad in ss mov sub push pop fsubs in aad sbb adc cmpsl mov push push test cmp push sbb movl add inc add imul mov sub sub scas jbe dec inc pop ja push cmp jle mov mov add mov push xor clc test out inc dec inc cs mov or pop mov pushl sbb push xor js inc imul int3 xor dec inc jp push xchg push dec outsb outsl cmp decb push cmp out outsl inc push inc mov repz insb jge lods pop cs mov dec dec and push hlt js push dec mov pop clc cmp mov fnstcw insl push nop push rcl iret sub cmp fisubl fcom add pop push cwtl add xor xchg jge xorb loopne push push dec ss scas push (bad) sbb add aam dec ss repz push outsb fcmovnbe ds cmpsl push adc adc push cmp data16 inc mov push dec and lock push addb cmp int push pop push xor loopne cwtl inc push pusha xor clc ss sarb rcrb mov mov jns out addb jnp adc dec dec push sbb mov pop out mov cmp push push (bad) insb ds jno jo fs test push fsubl pop outsl jl iret sti sahf and jle out out out push jl mov loopne mov adc cwtl jle lods imull mov add insb mov sub cld pop in pop insb repz add popf cmp mov mov ds pop pusha adc ljmp pop into sub cli lahf mov and push pop fmull and add cltd jle das pusha pop jg daa xor mov push xor adc pop or xor mov and dec call fldenv js clc and xlat iret enter fcomp fxch fadd ret fstp fnstsw loope inc in fwait inc call jne je and dec fidiv and popa je xor xor jp push jl jge sahf pop ss stos lret push adc add adc mov cmpb pop adcb mov and sbb or push push (bad) and xchg add lock aas scas fmulp imul and add pusha insb inc push iret repz mov iret repz mov cmp rcr loopne lock sahf out add adc and out sub cmp out sahf out pop pusha push sahf js mov cmpsl add add jb add push iret gs add dec retw iret jb pop mov jae xchg daa and leave enter loopne fs cmp pop in clc jmp push aas rcrl and pop pushf sub xchg clc and (bad) clts pop or adc or sahf out cmp sti movb xor jns out push fs cwtl out sahf out mov repz cld or sbb cmp negb add adc test sub push push inc xor mov push mov or add mov rol or xor jo popaw push jmp xor xchg mov mov sahf push enter aas add aas cwtl or imul aas push or xchg add push call push adc neg jnp push push pop and je push jle scas mov jg test lret cld mov push das sti push aam mov out fimul (bad) clc push add mov out add pop adc jns out adc sahf or fmuls jns sbb push adc or cmp inc sbb cmp repz mov test repz sbb pop faddl iret rcrl cmp loope push sbb (bad) sub fistp inc push and jns out adc mov jns nop push movsb or out mov push dec addb iret mov enter sahf out cmp mov jns out mov mov mov je mov movsb sbb jns out mov mov add add jbe (bad) cmp loopne negl xor push punpckldq cmp loop pop mov pop fsubrs or or mov ret or push jbe fstpt dec pop push mov inc pop sub adc sahf xlat xor movsl les int3 aam cmp add push in orb mov cmp data16 in hlt jns cmpsl stc add or sbb lds mov sub mov adc fadds (bad) pusha aaa cmp adc mov mov xor fcompl das sti (bad) xchg xchg out jmp or xchg xchg xchg add adc cmpsl or (bad) dec dec mov add dec dec adc pop add cmp pop scas rcl in ss cmp push inc decb sahf out fs pop insb test push cs jl mov jl push jno mov call jns jns ja pop fs push lods mov out call cmp repz cmp pop jo cmp repz movsb lods shlb lock sbb das jbe xor cmp imull adc adc pop mov xlat push out imul inc popa sub insl shrl pop inc add or nop pop in sbb (bad) mov std adc out sahf out cli xor inc sahf out sahf clc pop imull jns out cmc xchg hlt test out sahf out repnz icebp loopne repz lock out or out sbb iret repz sub inc jmp daa iret repz ljmp mov add or or or add cld xchg mov (bad) outsl and pop outsb inc inc or or add add imul iret mov inc adc push in data16 inc cmp or cmpsl rcl bound pusha ljmp jnp lods mov add pop pop es mov add outsb push add test adc mov fdivrl xchg pop add outsl xchg stc sahf out sahf mov jns out std (bad) incb add jge out (bad) test push xchg cmp add xchg nop mov inc ds scas cwtl jecxz push push fadds push push loopne jg xor sahf xor inc es fildll outsl cld xor lock aaa xor sbbb or inc imul mov push mov jbe movsb pushw mov adc (bad) push xchg movsb iret jnp movsb test (bad) aam sub lea sbb jnp push out mov jbe out pushf rclb out jns mov (bad) mov mov mov fsubl outsl jnp mov insb push movsb movb mull negl inc cmp out adc push out mov jl enter inc out lods lock add (bad) pop out cmp mov mov call pusha imul negl je push inc sbb loop out or mov into das push dec mov cmpsb loope jnp dec add or push pop fsubp dec xor mov mov iret add cmp (bad) in loop mov mov call rcll (bad) (bad) (bad) es les jmp mov jle sbb lock lods push fimul enter fs data16 jle or std push idivl iret imul push mov adc sbb cs jnp sbb ds inc pusha (bad) and mov push mov addr16 ret jae out test data16 addr16 movsb cmp pop sbb ss outsl js mov and in cmp xor xchg fidivr ds fistpll cmp cld xchg fistp mov (bad) cmp add pop push dec xchg movsb jnp push pushf dec mov mov movsb ja xor cmp int3 addr16 out pop sbb lock (bad) inc push mov es jle pop mov push jo push adc xchg js dec inc xlat push call mov sahf xchg sarl sbb je xchg (bad) push mov sbb ds test popf dec inc movsb mov sbb js sbb jecxz negl push pop rcrb (bad) repz (bad) into hlt movsb outsb adc rclb cmp scas (bad) mov and nop adc stos stos inc inc adcb cmp push xchg add in jo push xchg inc les add push subl add add push dec add ja xchg pop dec add pop inc out popf mov inc and dec pop push and (bad) idivb dec aaa push pop dec add fcmovnu jae sub sbb push dec xchg mov loop push inc mov mov or dec xor or inc push out shr mov push cs and inc push cs out mov or inc sbb inc (bad) out cmp dec push rsqrtps sarb inc aaa dec push dec push xor cli fmuls inc popl add add ja xor incb add iret mov sub rolb jnp ss sbb push mov xchg or enter pop es faddl cld jg clc daa iret xchg das aas push pop jmp rol cmpsl lods cmp add pop or push aas xor xchg (bad) jg add dec ds inc addr16 insb addr16 or push mov movsb mov pusha cmc shll jnp mov psubb jnp loop add push out lock int fwait neg out (bad) cmp mov mov add pop pop xchg lods rcrb clc pop push (bad) aas pop mov imul aas pop xchg addr16 into sub xchg mov xor push pop std lock add sahf ss insb jl (bad) push data16 loop into repz sbbb add cmp iret rolb nop cltd jecxz mov lock int ds push xor push cltd shr jo pop (bad) xor jg mov lret decl decl cs fldcw add add and (bad) out loopne cmp add call aas dec pop outsb daa sbb pop std and jg aas rcrb insl outsl mov dec add push inc dec xlat mov pop outsl clc popl adc add div add xlat pop sbb mov test jbe pop inc nopl ds lods bound fstpt addr16 int cmp pop in les test cmp inc aas nopl rcr cs add bound inc aaa addr16 cld inc ss jb cmp fsubl mov sub add lock and (bad) xchg inc jge cmp ss int sbb push sub inc add fwait in fldcw inc shll xor sbb xor push sbb push or mov add ret roll lock adc fcompl jl sbb push sbb or mov ss loopne shl sahf nop in jge data16 jl les inc push addl adc add and add or add or mov mov cmp pop push ficoml subl mov daa sbb fnsave (bad) and daa and fidivr lahf and daa and iret daa push adc cmp clc dec push out int jae push mov push mov daa lret xor daa xchg jbe in or dec daa fs out fimul dec inc daa negl (bad) (bad) ja push out idivl daa clc push (bad) cmc sbb sub xchg mov dec xchg xor repnz jg daa cmovb mov xor and int3 mov inc pop daa inc push mov daa dec sub aas push xlat dec sahf cld xor mov dec sub in pop ret cmp jns dec and out fidivl push es and pop cmp push and and cmp idivl in push jmp pop push ss cmp push insl out fiadd push lret loope cmp push and push mov adc pop xchg or loop mov mov sub and adc addr16 test push lahf push add testl push cmp inc or mov scas jg addr16 dec push pop es (bad) daa inc aad sub sub dec dec pop jb dec fisub mov out in and pop adc (bad) fisttpl fcoml clc daa fsubrs fiaddl jecxz add mov inc mov daa or stos mov aas fildl fild xlat fildll jo inc arpl daa ds shll daa bndstx xor arpl inc mov roll sbb (bad) lahf cmp (bad) mov mov out fs or mov cmp push fistp push mov daa mov xchg fisttpll ljmp inc inc es daa dec ja inc out add jle xor in fsubrs out jecxz clc sbb xor add divps loopne inc xchg sbb or stos movsb out pop sarl aas daa xor xor cmpsb arpl pushf imul das es bound popf sub push inc sub push (bad) stos and and push sbb fs pop data16 inc push (bad) je clc insl xchg jge mov daa je stos inc mov call stos sub pop lock popa aas jmp dec push pop bnd cmp daa mov subl adc jmp sub jne xor and xor and jle pop dec inc out sbb popf mov xchg sbb push pop daa fisubr jmp daa push jl and insb imul dec clc or sbb xchg es mov daa dec xor dec xor lahf fldt mov dec daa clc jnp mov je dec sarb dec pop out fidivrl dec rorl push out aas sbb (bad) out test mov push cmpsl xor cltd cltd (bad) fdiv sahf xor mov mov (bad) out jb aad mull repz aaa fs popa xchg cmp lret dec (bad) loopne pushf sbb cwtl xor ss sbb sbb push ja mov outsl mov ss and push mov lahf add jne adc pusha jp xor pop es xchg orl jmp je faddp mov mov orl fcmovnbe (bad) mov into aaa daa and cwtl jns cwtl and scas or jbe stos sub push sub insl or xchg lds jno sbb and loop mov loop fstl inc push and pop dec jmp xchg add insb test stos mov push lods jp and push push or movsb rorb into adc mov push cmpsl addr16 lret sub addr16 cltd xor cld in push add js xor pop mov lock mov xchg daa in add out imul push ljmp push out mov and mov push imul push jbe mov sti push pop inc dec lcall (bad) fsubl cmpsb test and or mov outsl into jge (bad) les (bad) (bad) incl fidivl jl aaa les ja loop test outsl aaa xor in daa (bad) pushl ja popf sub lahf scas imul in ds imul dec repz jge es lahf sti neg jecxz aas push lock pop repz sub stc imull fstpl das mov mov repz jno out sahf das fpatan iret lcall xchg aaa das call adc (bad) dec cli xchg and (bad) ds xor push and mov push push lahf out xchg push jle addr16 mov sub popa decb test push ja mov outsl pop pop dec jl,pn inc mov imul scas xchg orb fcomi into cmpsb xchg data16 mov int pop push adc push or repz xchg sub and ja pop rorb pop out scas outsl data16 insb pop insb mov icebp xchg push cli push pop jo dec dec lods and cmp xchg aaa adcl xor push in inc push (bad) mov push inc fimul cs adc add add push mov pusha mov mov pop leave (bad) inc adc test sub push push xor out jle add cld jg lea les jae stos mov jns pop lock fwait (bad) (bad) or mov cmp arpl ret jg mov xchg push in (bad) lds lds out scas push xor jle into add xchg aaa ljmp pop lcall xchg sub jns cmp pop scas jle mov sub imul sbb xchg rcrb arpl repz scas out push into or pop popa pop (bad) jp mov ljmp mov jle outsl xchg mov cli cltd aas dec jp shrb aad ja scas mov sbb mov mov dec mov stos mov sub cmc outsb xchg out pushl outsl es xor push fisub cmpsb or in jbe and mov testb jb outsl push (bad) fisttp xchg xchg notb fidivrl es fistpll std inc sbb imul in dec cmp and insl sarb mov cmp (bad) (bad) jg cmp pop push push (bad) das lgs out jp or std ja (bad) lcall sub cltd dec adc (bad) push sbb inc std push cmpsb outsl jns xchg jle (bad) lcall pushf cmp shrl mov mov pop mov sub xlat mov mov xchg out push (bad) (bad) (bad) out mov pushf push fisub mov sbb sub pushl data16 cltd aaa addb inc cs xchg pop pop out test jg pop (bad) jae clc lret cld or fbstp xor inc xlat fild loopne pop es outsb popaw dec add mov out scas mov loope movsl fmull jle dec les pop (bad) dec data16 std xchg cmpsb xchg fild mov outsl xlat sbb (bad) icebp (bad) jg push dec call aad mov xchg into and push push (bad) (bad) out call and and outsl sbb inc fimull test call fs sub sub jbe movsb bswap push fistp addr16 pushl or push xor outsl sub lds xchg je xor iret cmpb lcall ss fldt (bad) fildll out bound and sbb fisubrl mov sub rclb jnp into movsb mov push xlat fsubrs add lcall xchg cmpsb push stos xor (bad) daa add sbb jo inc xchg out dec fmuls icebp jmp jnp iret aad data16 dec stos pop rolb pop pop jg jb test add dec out cmpsl dec jnp call aas push xor out dec pop jl lcall je dec push test push push sub out mov ficom jg sbb jg aad lea sbb in (bad) push or fs icebp mov fcomip rol aad lcall cmc repz stos or mov ljmp test cmp add pushf pop fmulp pop psubb add push decl push sub daa push lcall mov sti xlat bnd and aam test stc xchg cmp (bad) lock mov adcl xchg lds push ja aas fmuls adc pop test sub rorl dec movhps pop adc cmpsl pop jg (bad) jo inc xor aaa ficom add jbe jg lret loop aas mov and add cmp icebp mov fmuls cmpsl lahf cmp lret ret shrb push sahf sbb cmp add sub fildll xchg add sbb xchg ss or out push cmc (bad) mov lcall mov jae xor nop push ret cmp imul std xchg add stc lods and imul out pop cmp inc ret pop fimul aad xor es cmp cmp loopne xor cmp stos push jmp pushf arpl mov aaa and adc cs add xchg dec adc sub (bad) out add sahf enter jne mov movsl test lcall dec sbb mov insb sub jg loopne sti inc nop loop pop mov fwait loopne push fsub fst outsl gs push sbb sbb jmp lahf push stos (bad) scas outsl bswap jg adc inc arpl or cltd js js push iret das push into adc push (bad) and and decl mov sub or sbb cs movsb mov pop gs outsl mov sub ja xchg out loop out loope outsl clc (bad) jp aad es sub sahf jle cltd in pop add subb mov adc loope movsl fmul sbb (bad) outsb jecxz clc nop std and lods idivb mov push inc cmpsb (bad) pop outsl icebp cld push xchg mov jns (bad) scas loopne push je shr sbb cmp jmp push mov xchg mov jge in dec inc pop sahf lea in push aas ds sub pop ljmp stos (bad) mov mov mov cmp outsb ds sbb mov scas mov push sbb (bad) cmc decl push and jg stos clc les xchg pop (bad) (bad) out clc jecxz cmp call loop cmp repz notl pop stc outsl push sub pop and inc inc mov outsb js jmp aaa jne mov push push xchg sbb push add test cmpsl fildll test mov outsl scas add adc mov pop ror mov jb or xor push xchg rorl pop (bad) je in jp ss jo jecxz outsb cmp stos cld (bad) fisttpll outsl aad jecxz sbb stos xlat add xchg lds ds mov xor repnz sti jbe mov inc mov imul shrb cld jg out insl imul popf push (bad) rcrl (bad) decl (bad) mov cltd stos mov push jbe xchg xlat mov adc add cld cltd mov sub inc xor add push mov insl push mov (bad) pop das mov iret (bad) xor std or xchg jne outsl cmpsb repz icebp incl (bad) (bad) adc xchg and sahf mov hlt cs rcrl mov sbb jecxz mov inc mov test jns jl (bad) push sbb sbb push pop std clc ljmp lock cmp push fsubr push outsb sub cmpsl and cld jl js push mov (bad) outsl sbb repnz ret fsts mov xor call or pop (bad) mov stc pushf or cmp std adc cltd dec scas push mov out clc addr16 and add aas les fiaddl scas sub pop stos or push dec jns,pt mov aaa rorb xor js mov add hlt rcrl jge mov jge push and mov (bad) jg xlat or push fst das sti pop mov leave in xlat jp aam cmpsl imul mov stos sti mov aad jp and and jno loope test push negb add fidivr iret jg sbbl pop negb mov jne and and (bad) (bad) pushl jl mov xor stos std movsl test pop fistpll mov sbb ficompl dec lahf dec pushf pop (bad) and cmp jbe loopne fisttpl das and addr16 jge lock loopnew es mov push aad lahf das mov int (bad) jg inc dec pop xchg adcb or fist cs push add pop and push sti jg dec push rcll mov jge orb outsl decb aad clc push pop outsl (bad) movsb loopne push test xor lds jp stos pop adc or push mov scas mov pop sbbl push mov dec xlat loopne mov xor cli xchg push cwtl jp jg sahf dec push sub pop scas push mov stos aaa into push outsl sahf or scas aas gs jbe popa (bad) mov sub sahf push xor or sub and and mov decb mov add std outsl cltd mov (bad) (bad) mov and jnp fwait push loopne fimull push jo,pn in push inc aad push add pop hlt jnp xor ljmp sahf fistp mov jle repz call pop and (bad) push lcall sti pop mov jecxz sbb push jae ja aas adcl mov shl inc jnp popa pop cld scas ret jne (bad) mov ret pop ja and mov aad incl repz sbb aaa adc fwait xchg popf pushf jb lret es std or (bad) jp xchg mov (bad) lods psubsb cmpsb (bad) and test ljmp mov outsl jnp dec pop pushf int inc xchg ss (bad) jg loopne adcl ret mov subl add pop jb dec xor mov mov pop aad jg cli fisubl in adc (bad) ds push and mov push ret outsl (bad) nop lahf sbb ljmp and inc xchg mov or and cli int je pop shl ret jo cli push jl and test outsl pop push (bad) lock sbb add mov aaa push mov add outsl and cmp bound out (bad) vrcp14ps jge jne push jmp clc rep lock idivl or movsl mov ret outsl jg test pop mov mov mov pop pop bound es pop pop subl or enter mov jmp mov xchg ss out inc data16 cltd or std sbb decl push mov gs or fnstsw mov xor mov aad (bad) fildl es bnd fbld mov sub or ret mov movsb (bad) out mov call stc xchg (bad) nop mov test ss mov ret add in popf dec stos add iret sub jle int3 mov mov out jmp and es mov or hlt fidiv (bad) pop mov outsl sub dec push sbb mov inc sub ret ljmp ret adc mov test ss in sub into dec clc scas incb jb (bad) pop jnp sub add cld aad dec push pushf pop pushl cmp jecxz mov in push stos mov testl jge inc mov test push push inc jg sub dec enter or push mov movsb or pop cld mov test mov cmp fmuls insb clc incl call (bad) mov mov scas xchg cmp jbe mov jmp outsb mov mov pop in mov jecxz (bad) pushl lahf out stos jge repnz jne cmp mov mov pop add lret je mov mov mov enter stos mov push loopne out adc popa aad mov xlat arpl bound jae pushl (bad) dec mov sub in xor lcall stc cmpsb and dec sahf mov jbe lret (bad) ds stos pop fsubrp cli movsb add movb lock out outsl mov mov sbb loopne ljmp lock mov mov movsb lahf sub jle out sbb movsb lahf cmp roll out je jle pop cld push xchg mov in jp fistpll (bad) adc je clc pop mov or cli inc inc push je fs xlat incb movsb (bad) into sti adc ret adc push (bad) cmpsb aad les movsb les movsb and xorb icebp xchg out dec adc adc outsl push out subb jp jmp cmc dec aaa into fcompl aad inc aad sahf inc push testl adc addb ret (bad) aad mov jbe jns inc inc pop push fdivr mov aad stos xchg inc cmp ret fsubrl pusha pop xor out test sbb mov out (bad) xchg js xor sbb data16 ret cmpsl clc arpl mov or insl imul add faddl mov dec aas cs (bad) in or pop icebp jge aaa cld std pop xchg test xchg data16 xchg mov cmp mov aad jp xchg mov out sbb scas stos aaa jnp aad jp std cmp inc xchg call fmul clc mov popa std pop (bad) loop xchg fisubrl loop es xchg xchg ret test lock inc xor fidivr jg subl jecxz adc (bad) scas mov outsl test mov pop sub das sarl out adc mov push and xchg add push pop sub and fxtract ja mov cmp (bad) jo jne xchg lods xchg xorb push fldl xor xchg jecxz xchg es stos fnsave adc cli add fcmovnu xchg mov les mov pop out xchg icebp cmc out mov scas inc mov pop adc sbb dec lcall jl outsb js xor addr16 sub aam enter push fnstsw stos jp das incl push (bad) pop fbld cmpsl jae lret lcall addb ret pop call add fwait mov and call subl outsl lret push sbb das repnz pop repnz stc mov loope fsubr mov loopne dec xlat jp pop stc fwait push push push mov push pop xchg pop and mov das or push in mov mov push (bad) scas push mov xchg fldt je jno or cld jg dec xlat mov inc ds sub or jge into js and cmpsb les outsb or loopne fdivrp shl xlat pop orl mov xlat cmp ds adc lcall cli aam (bad) (bad) mov jle jl sub pop sub sahf mov mov jle or cmc cmpsl xchg push cmp sub in inc add mov lcall (bad) jl outsl clc sub stos push divb xchg dec xchg push lret in push scas inc lcall xchg sbb pop push inc push jl mov and sahf add ret pop cmc pop incl jb xchg cmpsb push out sbb cmp add movsl lods rolb fadd mov pop ret lcallw and pop lock mov sub adcb cli pop xchg (bad) ss and es xor stc xchg add rcll xchg mov fcmovbe jg xchg outsb mov faddp iret inc or outsb dec push data16 or cltd cmp mov lds stos add ljmp or dec push xor mov aad mov in icebp daa inc mov (bad) cmp aas mov add divb aas loopne ror scas (bad) cs ss xchg push (bad) das cmp imul mov xor cmp push mov cltd xor dec inc mov les sahf (bad) inc stos cmc sbb inc lods pop ja jae pop add bnd ljmp scas data16 push adc dec sbb stos and mov jle out pushf sub (bad) cmp loop adc out jp cmovg (bad) call xchg mov sub cmp mov fisttpl ss out add into into lcall (bad) pop frstor out movsb xorl notb push fnsave jp and add clc push jmp lahf aad mov mov xlat (bad) jb movsb mov push lods out mov jae xchg ds cmp add imulb scas sub aaa mov push loop inc loop cld out inc and fwait stos cwtl mov frstor inc mov out stos icebp loop fcmovnbe sub outsl scas jb sub xlat xchg into sub xchg (bad) (bad) (bad) lcall aad std or imul insb sub pop push add lahf dec push addl faddp clc (bad) jae cli dec xchg mov mov adc (bad) fidiv mov ud2 mov andl pop dec xor dec sub imul mov adc into sbbb xlat mov push mov outsl (bad) cmpsb (bad) mov or sti mov xchg mov sbb sbb mov orl call rorb xor cltd push adc std mov (bad) mov push aam out mov pusha push mov fild lcall dec sbb outsb rcr test fidivl adc mov pop call inc add pop out lods sbb push inc push aam xor push movsl jmp (bad) and push adc loop push push out lahf mov in imul add shlb pop jne lock data16 jg incb xchg mov and js pop fnstsw push and (bad) push sbb addl push icebp out mov (bad) xchg (bad) imul test push push stos rclb push mov push div mov cmpsl pop mov fs outsl sahf cmp addr16 jbe fimul sub xorl cwtl movl jb mov dec adc push dec xor sar in es and dec sbb cld xchg pop mov gs shld in jg loopne push cmp addl xchg cs std fiadd pop jmp pop xchg or (bad) cmc mov ror cbtw mov test add or ret mov sbb xchg mov xchg (bad) xchg fdivrl add push push movsl (bad) ljmp mov mov mov mov ss push (bad) pop arpl stos fbstp mov cli nop adc outsl bound jo daa jp (bad) (bad) (bad) (bad) decl dec inc ja lods repnz (bad) fcomps mov leave push pop adc add xor push dec inc dec mov mov out out mov jp dec popa fwait (bad) push or mov scas outsl cmc fidivl mov jne jp and and mov stos push (bad) out outsl adc pop (bad) xor inc jnp insb push iret mov repnz push push fidivr mov (bad) (bad) mov push gs hlt dec shrb (bad) fdivs pop sub lods call dec decl jp push insl push xor push leave into mov in xchg lock xchg cmp jg ja add push inc push sub out pop cld mov push es inc push ja stos mov scas cmp aas loopne mov cmp pusha iret and xchg hlt mov (bad) (bad) into mov mov outsl out dec sbb int fidivr in ljmp xchg lock lret lcall cwtl fstl test out dec mov outsb push fnsave jg ja adc inc inc iret sub repz cli dec xor pop push xchg data16 cmp out ret add sub (bad) (bad) (bad) out jle ret stos rolb xor mov or in lahf or (bad) incl incl inc scas pop std cmpsb into test and lcall arpl imul add lcall (bad) stos mov movsl add leave and jne jnp (bad) loope iret jg (bad) push out jmp xchg idivb jg loop outsl xor jmp pop push test std loop enter xor loopne (bad) icebp cld subl psubsb (bad) (bad) (bad) (bad) mov sub jmp push pop sbb notl mov adc jmp pop inc jbe jne and inc pop pop mov fs push adc (bad) pop loopne push dec jae adc int shl sarb mov outsb push icebp xchg inc cmp xor fcompl movsl push dec fidivr jb jle push lret xchg test sub mov lcall push add dec inc out aas sub add mov mov (bad) leave or outsl in add (bad) clc mov push inc ret aaa out repz xchg jb js call movsb addr16 addr16 jp or dec push (bad) out ret loop xor cmp (bad) incl xchg fildl cmp xchg lods cmpb mov dec push sub jecxz int push (bad) push stc cmp js (bad) jmp push and mov fcomip mov inc cmp enter les xchg clc sub shrb xor cmp das (bad) stc mov scas or jecxz xor lds js xchg lock imulb mov (bad) out out data16 lret xchg jmp aas adc add mov shll rcrb movsb jl mov shlb cmp jg sbb push add jmp xchg clc pop dec push jns mov or mov dec enter xor out cmpsl aas pop lret imul push inc (bad) out stc loopne mov cli jbe rcll idivl std (bad) (bad) sbb repnz xor ret cmp rorl decl setle xlat sarl sbbl sbb mov scas cs pop push jns dec cli sbb cmc add and add xchg call ret outsl fiadd push sub es sahf (bad) xor stos xchg lahf jl (bad) jae lahf inc xor out add and push mov out mov mov sbb fwait and dec ret ss scas and mov sbb dec out out pushf in outsb push cltd stos and mov movsb in into xchg jg inc ds (bad) jmp out in fsubl mov (bad) push lret xor (bad) jecxz push push sbb xchg mov push mov ret or fxch jecxz data16 and sub cmc ss lahf dec jns xchg push add fs mov and pop out rclb pop dec push xchg add lret xchg push repz mov jbe lcall jg or orl out jg scas cmp rclb xor pop xchg fsubr cmp inc ds mov aas or jns push ja outsb push or aad (bad) ss nop sbb jecxz shlb shlb into xchg xchg pop push xor jg fldenv dec (bad) pop ds std adc jmp add pop mov int3 repnz outsl scas mov cs sbb scas mov (bad) cs jge push aad cmc jnp loopne mov or mov sbb xor iret pmaxub lret outsl sub cmc jecxz loopne pop pop stos mov (bad) in sbb push repnz clc fwait sbb mov out jno sbb push dec and out mov js loopne mov subl out ss ss enter mov xlat fwait insl xchg push es aaa add cs mov and loope inc jle lcall ss push or lods sub sub jo jp movsl push sub imul jg jno sub xchg loopne push or repz jmp xchg pop jnp scas jne cmpsl mov dec decl stos sub mov push pop decb loop in pop hlt into push or inc (bad) push fisubr call fsub inc push push jl and outsl mov dec xlat or (bad) aaa scas repz dec push addr16 inc jnp push loope inc dec mov sub sbb outsb movsb lahf ret xchg pop xchg push sti dec jle popa add (bad) jmp sbb dec test pop test add mov aad addr16 add xor cmpsb (bad) adc xchg shld pop dec (bad) (bad) ljmp sbbb sub pop stc push std imul push stos xorl arpl fildll add push push gs leave das cli (bad) jg sbb rcrl and push add push dec out sbb ret lock jp cwtl mov push and mov in jbe sbb pop push mov mov push or aad aad mov jno ljmp adc int and test in mov jne stos push loopne,pn sahf arpl inc repz sbb or (bad) fidivr xchg xor loope in xlat mov fdiv jo stc inc scas cmp (bad) pop mov jp (bad) mov test (bad) fbld test nop push (bad) cmp loopne push or or std es adc sub incl clc test inc cmp pop pop pop comiss in jg inc stos pop lahf fidiv into notb cltd inc cmp insl mov aas shr cmp lret insb xor xchg mov addl add jmp pop dec jbe inc in xchg in in dec pop clc cmpsb std push jno in push shll inc cmpsb jbe enter add ds out adc and push and adc jmp lcall sahf xlat sbb (bad) fldl aaa fs inc out adc push mov outsl push jg sti sbb stc mov daa cmp lods pop fs std (bad) (bad) incl loope jns ds mov dec mov lahf add hlt or push daa cmp and out rolb add fild stos adc (bad) incl out cmpsl and js mov addr16 clc shll cmc mov adc push cmp adc repnz sbb cmp add xor sub mov ret cld test cmp jno jae sti lcall lret dec mov mov into xor adc and test push dec push bound xchg mov negl mov outsl push fwait jecxz lcall call (bad) dec lahf int3 cwtl lods clc test sbb je push aad dec push push clc rolb mov test inc sbb lcall jae push mov push xor scas fwait sbb add inc stos aaa fs add xchg into out inc daa xchg into and inc aas jbe mov shll mov rclb adc fnstsw scas clc ljmp inc push xor push (bad) movsl sbb stos loopne (bad) scas aaa adc or pushl pop fadds mov (bad) std pop xor lahf cmpsb pop aad insb aam mov ret add jge addr16 (bad) test inc pop (bad) mov rolb xor mov lcall cmp notl movsb aad cmc xor aad imul or mov outsl pop inc leave inc lahf xor (bad) (bad) ljmp insl test add adc frstor movsl in sbb inc cs mov repz ljmp adc add ror stos jnp push jbe jecxz jp inc pop aaa ficoml into mov mov (bad) pop push repnz mov jle fbstp (bad) (bad) (bad) ljmp mov rcrb mov iret push add pop lahf xchg (bad) frstor push and mov test cli pop sub aam adc rep push call (bad) (bad) fstpl push and push pop xchg cmpsb je jns jle xlat divb fistp xor xor inc call add sbb movsl xchg pop jns add push sub ljmp mov mov pushf push addr16 imull sub mov sbb jle mov or push (bad) mov das je aad lods xor fs lea pushl pop (bad) xchg dec xchg pop rorl add xchg pop fist adc xchg inc loop adc and jnp dec add aas addb popf scas push pop push or iret jecxz (bad) mov sbb mov push fucomp addr16 addr16 fwait cmpsb dec fs add aad mov sbb fcoml lahf xor inc enter lock outsw icebp fwait js xlat mov stos add pop xor push add (bad) cli sub xor cmpsb lahf (bad) jg push mov (bad) xor xor ret pop out sbb (bad) cld mov fildl inc jnp xchg jle lock arpl ja inc rcrb loop push test cwtl push dec lea (bad) jg (bad) inc mov sub movsl fldl in cmp jns (bad) (bad) aas cli jp sub scas pop jg out sti (bad) in inc imul stos pop cli psraw dec and dec or (bad) sahf int3 jg,pn push inc dec or inc pop aaa das bound sbb adc loopne stc push sti or (bad) mov pop rolb and fwait xchg pop stos pop or scas mov js fiadd inc or adc mov mov in ret push mov inc xchg add hlt ja add jb pop or (bad) or sarb lods data16 cmp out dec (bad) in push das scas mov cltd sti pushf mov cmc scas cmp outsl inc bound mov add lea nop in cld idivb dec loopne stos pop and scas lods and aad cmpsb inc push push jg pop dec shrl out push pop fisubr loopne sbb aad inc fstpl lcall lcall imul outsl pop mov push data16 cmpsb mov andps outsb fdivs outsb fstl push dec js lods mov or orl add cmp mov sbbb push mov das mov test test adc pusha cld cvtpi2ps lahf mov push clc dec inc pop jnp inc loope in aas cld cmp rcr aaa test out ss int and fsts fstps std addr16 cli and ss clc out add dec cs into insb cmp pop push mov in data16 or xlat (bad) repnz insl dec mov out and js clc fcompl mov jg pop push lahf sti fs rcrl xchg mov fdivr mov andl or add ss scas xchg out mov inc out jl lcall sub pop sub iret test ja test dec or ljmp xchg pop adc lret ret decb insl lea add pop and scas mov mov lahf ficom call pushl rcll xchg adc aaa std sub mov add push loope mov cmp xchg into es sbb xor adc es adc aaa mov outsb and push jg clc mov mov mov mov xlat adc clc loopne mov sub fstl push push cmp push and cmpsb inc jmp sbb mov es xlat pop push and daa sub jle push mov ss xchg lcall mov mulb stos dec or push mov mov xchg ljmp mov cmp aam sti jg ljmp xor pop cld (bad) inc or adc icebp cmpsb xchg jbe clc decl (bad) dec sub push lock sti mov dec iret push push stos incb das fdivrp xchg jb fs dec inc stos xchg mov popa mov adc test test sbb cs scas cmpsb push loope hlt xor das xchg orl fidiv dec hlt lcall dec call popf mov pop aas jle outsl mov xchg ds push push mov loop sbb pop daa xor out loop pop mov mov stc pop jl adc pop mov mov fimul push jns mov mov loope inc pop aaa adc xchg jbe cmp mov dec dec les out mov pop pop push mov cmc mov divb mov arpl int sahf jl ret outsb aas push mov fidiv test cli (bad) xchg ss mov sarb xchg mov shl js xor sub push or cs fild (bad) outsl sahf push pop add mov cmc lcall rcl ss repnz scas int3 outsl dec xchg ljmp mov xchg and or pop pop xor stc rcrl cmp int3 ljmp push mov push jno shll add cli xorl mov stc and movsl clc repnz pop outsl sbb or into push ds sub test or not lock sahf nop mov int3 imull push inc sahf dec inc dec nop lods push jno aad inc xor aad mov cwtl (bad) jl fs js out scas comiss ret test (bad) jmp jg cmpsb (bad) (bad) insl mov (bad) mov decl and shll int3 inc repnz pop cs mov int3 jo addl mov jb bound xor add imul mov xor pushf (bad) jns ret leave xchg or pop addr16 xor jnp xchg rcr or ljmp sbb std das fimull and aad adc push popa add inc aad push shr jno decb fwait push in jmp jmp cli jmp lret movsb mov or (bad) icebp cmc jnp ss xchg into cmc call add das pushf nop and or dec mov mov icebp add (bad) call sarb dec push fsubrs mov es jb push cli repnz push std dec into mov movsl mov push or mov fcmove fimul mov clc cmp adc outsb pop cs add lds and scas cmpsb mov rcl jbe (bad) loopne int ss notl psrld xchg push clc jmp sahf pop inc test add mov (bad) lcall sub repnz add jle out mov ds (bad) hlt mov int sbb dec in pop inc aas lock inc add cltd dec js sub xor push loopne loope jmp nop sub fs movb outsb adc cmp or fiaddl out mov lar test call inc adc pop push es cmp test mov fwait lock lock (bad) stc adcl loope shrb and loope xchg adc xchg adc cmp (bad) jp fld enter mov or addr16 sub xlat jae shll daa testb adc idivb inc cmpsl out push push ss test (bad) ficom mov out (bad) cmp mov nop push or push imul fiaddl aad (bad) ljmp addl stc in inc inc ror into or push test (bad) leave notb or push cld cmp xchg push cmp (bad) cmp mov jae sbb lcall clc incl loopne dec or mov xor push mov add mov aam sub mov mov in mov and mov mov push and mov cmpsl inc aad pop arpl push lret dec dec sarb out add mull adc jmp sarb scas add push pop push xchg icebp and std lods adc cld add roll ss mov out jmp stos add or push adc mov inc stos mov clc or loope fdivp out stc jb loop (bad) ss stos sub pop clc adc pop mov call dec push or ds jae pusha fs jmp out in or mov mov out mov loop incb into sub add loopne ret scas out jmp jle jmp pop test nop rcl out mov inc xchg icebp jg fimul push rcll xchg add repz jg (bad) xlat cmpsb (bad) xchg test and or or xchg push dec out xchg outsl clc mov sbb (bad) fstl pop pop jnp xchg dec sbb cmc adc sub push cmpsb sbb push (bad) mov ss mov push fwait mov jne push or out (bad) and sub fnop mov cmpsb jbe sub inc loope pop cmp xadd jmp icebp pop push fnstcw nop push lods add dec js ret inc mov push pop xlat and jmp push lcall mov push sbb out fsubrp ljmp or mov fidiv mov adc into jg shrl adc inc outsb or cmpsb and sti call and lock scas imul (bad) andb mov ljmp cltd popf push sahf cmpsb data16 outsl mov jg scas divl cld shrb gs inc mov mov sbb dec dec movb add data16 lods pop cli scas inc call sbb cmp outsb loopne and rclb lcall mov jnp nop in ss cmp add dec mov ret mov addr16 inc ret push add es fdivrp test add call mov imul xor jg outsb mov dec mov pop inc sbb xchg leave xchg mov or rcrb and inc sbb lahf xchg daa inc loope xlat push (bad) aam mov mov lods inc cmp mov add sahf data16 push std (bad) mov scas sub rorl lret (bad) jl pop mov mov inc mov fisttp ret out iret and or ja jle rcll mov jp adc cli fistpl dec push out pop push iret jbe cld (bad) adc loopne into mov cmpsb dec das adc jbe pop (bad) ss unpcklps or sbbl shrl inc lcall out add pop push leave (bad) inc (bad) das sar mov es mov fs movsb push ds scas fs fisubr jp push scas xchg scas add repz jle adc out push fimull inc dec test adc negb jle (bad) dec jbe jo pop loope,pn into loop inc (bad) (bad) decl sbb xor cmp fstl push loopne sub cltd mov jo xlat push sti (bad) jb or popl jl iret and push dec cli sub inc sahf out add loop push xchg scas aas xchg icebp (bad) jp daa cs div mov push sahf and shl jb cmp sub aad jnp sub (bad) mov sbb push bswap clc divb xchg sahf dec dec jecxz mov jbe aad push push mov cmp sti (bad) lahf cmpsb std testl ljmp into dec cld dec add or (bad) clc push sub (bad) cld shld addb int3 inc test mov loop cwtl ja repz mov daa and push jecxz mov push sbb mov outsl xchg cmp xor lahf mov dec sbbl and pop lock js cltd sbb fcoml imul or iret mov jb call loopne ds iret mov es push mov gs pushl sub sbb leave sub cmp scas call lcall outsb loopne loopne pop cld cli outsl xor push mov push repz (bad) rolb movsl jbe mov aad inc mov push jl xor dec (bad) jbe mov mov pop mov shrb cmc es cmc jnp sbb add inc pop and pop lods pop rcrl jl pop and fs pop in or daa (bad) repnz ljmp gs sub cmpl cwtl add pop (bad) std push mov (bad) invd fdivl sub popf inc pusha test outsl inc sub jno pop mov popa cltd inc sbb push adc cltd ja add (bad) jnp dec (bad) push (bad) add push adc or decl inc and jle lcall push or fild aam (bad) mul or dec fidivl adc cmp into jnp gs cmp clc (bad) (bad) jg mov jbe push ret mov (bad) ficom idiv xor femms add loopne ss xchg test dec clc push pop fidivr mov and mov ja pmullw fildll insl test jp es xlat xchg scas clc outsl xlat addr16 sahf push pop pop ret aad lcall cli add dec push aam add adc ret mull sahf ss pop fldcw mov into and cs mov jg (bad) jbe mov enter push negb dec push or hlt or mov xorb inc (bad) iret pop xchg cmp outsl movsl insl sbbl push scas inc call cwtl (bad) scas pop into dec inc fstpl mov out data16 sbb incl inc push (bad) xchg (bad) cli and add add loopne pop push outsb cli cmp js adc ljmp cld lods push lds jmp jae mov xlat push and mov lahf push mov pushf lret dec mov mov icebp push addb xor xor jb,pt inc hlt cmp inc in js das data16 push (bad) sarl es xlat pop or lea (bad) sti xchg dec scas lea cld dec sub inc cmovbe mov and clc test fistpll inc xchg push mov (bad) (bad) xor popa push std notl xorps or pop (bad) jmp (bad) (bad) mov out push fwait pop into jp sbb mov aaa test sahf sub in sub fimul das decb (bad) lcall sub push cmp mov fldt xchg sbb push ret mov cmp or scas and pop subl xchg sahf push ljmp pusha lea es dec mov and test mov push xor push fisttp ja fbstp and cwtl stos xorl pushf (bad) call mov loop cmpsl cmp mov hlt call mov dec lcall cmpsb inc call add push movsl xchg sub (bad) cmc xor bound dec jl int3 lods test add (bad) jg ljmp mov dec sbb scas (bad) pop outsl lcall xlat fwait sub jo lods sub xchg (bad) outsl lods xchg dec (bad) rcrl mov mov movsl subl mov and inc push (bad) xchg xor mov std adc test (bad) pop add das add add mov cld bound xchg mov add cmpsb imul cli rorl popf add (bad) jo or push aas rcrl xchg stos sub add (bad) jnp scas bnd sub or jp jle mov sti push dec or inc pop bound sub mov mov clc cmp ds out jb xchg inc incl jp jb out aas xchg sbb cli push or or dec or cmc add jnp call insb push movsb inc mov daa es loope aas add sbb icebp pop (bad) fildll push mov adc lahf (bad) ja add sbb (bad) std orl ss out push clc movsb xor imul rep out inc pop clc and (bad) (bad) into dec mov (bad) xchg mov repnz sbb test push sbb adc xor push sub das push add scas aaa jae je and mov cld add call pop sub lods test xchg shrb ret daa ds mov sti out pop pop sti fist push ss mov ljmp pop adc and cmc push test ja push sub aad addl fs or adc or dec ficompl mov or push push testl sub sub mov add inc xorl dec add adc pop jle sbb sbb data16 dec les mov es mov pop decl cmp pop push inc (bad) icebp or sbb js jnp and add push icebp (bad) iret or or fwait cli clc jns mov inc js add lret icebp scas add cmpsb xor inc push xchg add dec mov loope inc pop bound dec in inc dec mov push push jae loopne inc in leave cmc mov outsb (bad) cmp out cli into adc aaa shr and push (bad) fdivp push or pop std aas mov aaa xor ret mov push frstor clc pop (bad) jp inc push scas out sbb add cmc push aas aad inc adc and (bad) mov out cmp inc inc dec test (bad) mov mov cmpb das jp pop sbb xchg mov insb jo xchg mov sub cmpsb leave dec inc and cmp push scas push les jbe xorl fnstsw ja je cltd stos inc stc aas sarb pop mov cmpsl sub push adc es outsl out les push into (bad) rorb sub sti sahf inc sub pop loopne cwtl js (bad) scas cmc fucomi push cmc (bad) cmc pop mov dec mov lods sub mov fs adc sub ret mov stc lcall xchg mov pop (bad) loopne pop icebp add out pop mov mov dec rol (bad) jbe lahf in mov pop sbb lret sub mov cmpsb adc jae daa scas stos loop mov loopne (bad) arpl xchg das cmp lock xchg push imulb push or xchg into mov xorb inc (bad) hlt xor outsl xlat pop adc test mov pop clc clc and pop cli sbb mov jmp ljmp decl jno jmp add outsl pop sub pop adc out pop mov (bad) fsts mov pusha xor gs (bad) xchg pop or mov scas jne mov sub nop loop mov icebp (bad) sbb fimul idivb jne mov ror cli push mov rcll mov aad jmp dec fucomip fwait test and mov (bad) lea or (bad) (bad) (bad) jnp inc inc pop sub push loop jne cmpsb outsl fs push or mov mov xchg pop clc or xor out inc cmpl loopne mov mov orl push pop shl adc aad and dec (bad) cld incl sub imul out aas or add push inc fildl icebp ljmp pop cmpsb adc lret outsl sahf push inc imul data16 push cmp sahf ja xchg adc inc aad push cmp loop mov pop ret and (bad) inc cli adc outsb jnp cmpsb lea cmp andl cmp cmovg xchg mov test idiv call jmp loope pmullw cmpsb pop into lock cmp push (bad) and into popf test leave lods push jle lahf jne inc xor xor scas jg aad inc jnp mov fwait (bad) sub sahf js aad fs xor mov stos jo jnp sub in add iret sahf (bad) jbe (bad) push inc leave cmp mov ret fmuls add lods push lret pop lcall lds cltd rep popa dec js popf decl ds data16 xchg (bad) add in mov pop sbb fnstcw (bad) stos add cmpb dec pop lods jmp add decl cmp ret cli (bad) cmpsb jmp xor loop icebp jg aad xchg jl movsb pop adc cs and push mov dec or dec xor inc add push cld cmpsb hlt out lret (bad) pop jp std cmp (bad) rclb roll add xchg jg or sbb dec push hlt add iret into mov mov scas mov add mov xchg test out or dec leave js iret add imul mov ss sbb mov xchg dec std cmp (bad) mov das aam mov (bad) cmp push dec scas in sar pop add xchg pusha sub aaa push dec inc push pop std loop push sub xchg (bad) mov pop xchg inc iret popa pcmpeqd mov add add jle outsl scas pushf mov sub xchg faddl dec mov lock xlat add fstpt (bad) cmpsb lods pop adc ja cld (bad) in dec nop test rcrl mov jnp,pn inc loopne lods cmp mov mov jg pop lret f2xm1 ds mov aas (bad) xor sub ja xchg mov insl movsl pop sahf xor mov scas mov out (bad) (bad) in sub add or push xchg cmp inc pop into ss pop jp jle fldt inc js (bad) (bad) icebp in decl fistpll pop stos out stos pop es outsl push fiaddl xor (bad) fisttp add or and jmp mov lods cmp insb fucomip pop xor (bad) ds or decl jg call xor lods fstl xchg loop adc add xlat add add sbb push insl pushf push or outsl incw stos pop mov rorb or fidivr ret mov les and (bad) (bad) pushl in aad push frstor mov movsl lock push and ljmp (bad) xor mov dec push loopne push inc push mov hlt int stc scas fwait icebp leave or push push (bad) (bad) decl test add fcoml pop sub xchg add or call jnp inc inc push sub push bound and adc lret cld incl dec jle adc xor fbld stos cmc xor fxch cli pop fistp popa jl arpl outsl xchg fcomps push jbe (bad) mov push inc ljmp sub js lods addl mov cli out dec pop or mov (bad) push bound pop add sbb aaa std inc sti push icebp test mov es jecxz,pn add call or xchg enter mov push jbe pop and pop jo mov outsl inc xchg enter in imul jge xor fdivs das or (bad) call stos in (bad) xchg insl jbe and push and movsb out jle (bad) fistpll jo pop popf mov adc data16 inc imul data16 (bad) (bad) out outsl in jno adc mov inc mov jmp mov subl push loopne mov decl into lods (bad) aas jg jbe mov pop (bad) (bad) decl es mov mov sti pop pop push push mov js and dec jp jns rol xchg outsl sub lcall sete std inc mov xlat adc out std and lods (bad) cmpl (bad) daa pop pop xchg shlb daa cmpsl cld (bad) jg push xchg adc jp push fbstp cmpsl and (bad) aaa aas and lods xorb xchg pop push (bad) outsl aam mov mov fist jnp lods push xchg add jge aas subb jl fldl sub mov ret push insl lahf mov jb pop xchg mov push sahf and movsl jg push lcall and push aas push cmc repnz lock ss cmp add aaa test or js sbb sub sbb push pop sbb xor ds and and pop add mov sub mov scas mov call adc push mov mov adc out sub loop mov in xchg inc cmp sbb jb mov sbb icebp mov mov clc movsb cmc dec dec or add icebp popf stos jbe push icebp mov lock cltd push pop out xor test lea cli and sbb inc call push jbe lret sbb in decl and sub xchg daa (bad) mov pushf testb cmp aad or insl add std stc xchg sbb jnp pop or or xchg insl mov pop xchg (bad) jb push push jle add es les inc xor dec aas stos pop pop lods mov cmc xor push andb jb (bad) ffreep mov cmc ljmp mov out fcoml sbb pop clc mov test add rcll push inc fucomp arpl xor dec mov repz inc sbb clc pop xor scas push es cwtl das add dec push sahf or pushf jbe xorb dec jp mov lods ja or aam aam mov lea push or rcrl inc add (bad) mov cmp inc xchg jne (bad) pushl in (bad) decb push add rcrb es and push frstor dec push fidiv xchg stos push and or pop cmp cmpsl add mov inc cmp or out jle inc lock cs mov test aam xor push inc (bad) out rorb test (bad) pusha adc cmp dec cli fisttp ficompl ret fbld in inc add jle,pn xchg repz jnp push arpl lcall add add scas rolb lods mov jge (bad) mov xchg imul je push shrl test in data16 clc sub mov push pop xchg pop jmp icebp in ror sbbl outsb push push ja nop dec (bad) rorl pop in shrb (bad) push jg clc cs pop outsl clc cmp cmp mov fidiv add movsb rolb inc mov (bad) call cmpsb (bad) jne fcompl and sahf ffreep inc aas jbe xor fsubrl or fdivp pop push dec pop js xchg xor mov stc cmp in enter pop mov icebp das inc inc fcmovnu xchg jnp pop aaa or push int3 mov out ret iret js (bad) addr16 pop and nop inc pop add aam cli sbb loopne js pop bound icebp push iret out mov dec jl pop insl xchg dec add xor (bad) outsl or adc pop outsb mov outsl mov pop push add leave push ds frstor add addr16 aad enter aaa or xlat jnp xadd rolb pusha shrl sti add inc lock test xor fisttp js fstl out leave push inc daa lock loop push test push inc jg mov dec xor dec xlat cli inc add es add inc pop (bad) cmp idivb or push loope dec sub or popf fiadd aad xchg out xchg fstpl pop sahf divb jno sub cmp pop shrl outsl (bad) notb mov cs jo xchg xchg push push into scas xchg insb adc data16 add das sbb iret stc loop mov insl movsl push sti stos push (bad) cltd stos mov pop sbb gs out std and add sub jle xchg xchg (bad) cmp mov mov xchg cli jmp insl xchg rcll test in sahf mov outsl mov jmp cmpsl aaa cmp push pmaxub out std push loope dec das clc (bad) jb add enter loop cwtl inc js scas or test mov jb cli aas mov es ds sbbl lret cwtl lahf (bad) in out mov mov adc fmull or adc push dec scas je sub outsl rolb jle mov sbb xchg fnstcw push mov mov fimul out cmp daa cli adc clc sub (bad) sbb push adc mov mov insb mov ds pop add (bad) dec pop xchg pop jo push push outsl imul xor mov loopne xchg jle sbb (bad) icebp call adc mov mov or mov cmp (bad) mov cmp das stos or mov and aas scas add mov mov mov (bad) mov sub (bad) mull xchg and lret sub pop cmp fist add cli mov mov sub push mov jp mov loop (bad) mov into test (bad) push or (bad) call add loop scas out faddl loop fcoms (bad) imul jnp add fdivrs test sbb mov stos and xchg inc mov (bad) push xor sbb outsl mov dec push sub dec lea in add cmpsb add (bad) sub mov cmp jg daa (bad) aaa cli ds add push xchg mov push repnz push inc add roll sub ljmp xchg repz mov inc jnp pmuludq sbb and out stos cltd mov pop jp (bad) pop mov (bad) (bad) pushl and pop lcall adc mov fmuls mov xchg sub or xor lock shr into pop sti sbb je xchg jp dec cmp lret ret xor outsl mov (bad) int3 imul xchg rorl add mov neg stos jp inc xchg outsl adc sub incl inc repz xbegin pop rcrl dec push arpl pushw mov sub inc pop mov add lods pop add mov cli out call mov add sub sub xchg push xchg mov push hlt mov and jb and ficomp popa lds jg cmp pop mov mull xor xchg inc adcl es jb in xor icebp fildl fisubl aad xchg dec das rcrb push rol stos mov (bad) decl or push movq push movsl and leave add (bad) incl (bad) pop or xor std fiaddl xstore-rng cmpsl test cmc outsb bound push cs dec (bad) ljmp test js push xlat xchg add or mov jl sbb ss pop (bad) pushl cld popf movsb push jns adcl outsl (bad) mov mov insb insl pop loope xor dec cs and mov mov push loopne iret mov pusha repnz sbb icebp orb clc das push push js push int xchg xorl xchg pushf pop mov (bad) jae js mov dec into push (bad) lea pop es test stc jl ret mov push rorb or cld xor xchg pop fmull adc push daa dec cmp fnop cli push iret outsl cmc (bad) repz push pop lock xlat inc test add stos pop pop push decb clc jg arpl jl push push lea pop and or push scas fwait xchg data16 add or xchg inc jb (bad) js loopne adc or and xchg (bad) scas out ljmp cld push (bad) shrl out in cli mov pop jmp in lcall or sbb in ss fisttpl call aad stos std cmp decb stc loope pop push mov cmp add pop add movsb popl push push orb mov mov mov in lods mov xchg xchg out test ljmp stos mov adc insb jae jg jno loop and sti dec adc jbe sub es mov (bad) enter stos xchg xlat repnz jmp loope test push popa scas push jb inc rolb push rcll clc and clc fcompl dec inc xchg ja jle mov and mov sub in jp jle mov and jle pop ret cmpsb cmp adc add fbld dec outsb movsb sbb sbb out ret jmp or rcrl fwait ret jl das ret inc xor xlat sub gs and lods (bad) pop or xchg dec js push mov outsl loop dec push jnp inc push ss xchg ja xchg out jne cmp scas mov data16 ljmp sbb lods mov dec pop add mov mov jb mov xchg sbb mov aam (bad) dec xor cltd dec (bad) xor xchg jecxz clc fldl jp push add push (bad) popl rolb pop sahf xchg cli paddb ljmp out fidivrl js jl add test arpl das jno and dec or scas jle jmp push ret (bad) outsl mov bound aaa add add push add cmp rolb ja cli inc push mov aad outsb jg mov inc ret leave lods and es (bad) xor adc push and int pop mov inc mov les pop fimul mov pop rclb das xor (bad) out mov fbstp lods mov mov shll cmpsb inc inc clc mov pop inc mov mov inc ret jle fstl rcrl pop cmpsb jmp add dec mov jnp push ficomp dec sub hlt sbb mov adc cs and pop adc pop aas rcrl pop ds jg lret jbe xor sub out cwtl aaa and rcr icebp ja gs lods sbbb pop add mov fmull mov repz pop ja mov test push pop and add (bad) sub (bad) shrb xchg dec adc movsbl mov cwtl sti mov add out cli sar lea mov fisubr popf inc js loopne (bad) push inc lock sbb imul icebp pop inc in jbe pop dec jb or stos sub push movl inc push (bad) cmp aaa loope in popf nop shlb ret xchg call loopne mov xor add cmp mov wbinvd add std push dec rorl xchg cmp mov and jecxz dec lcall cmp mov fs in popa mov jle movsl cs cld loop aaa testl cmp testb outsl adc fiadd cmp (bad) xchg out es dec pop es inc in lea movzbl es jp sbb scas (bad) lahf out lahf je mov pop jg xlat sbb push mov push cmpsb cld scas xlat mov adc sub mov push out xchg test push fcompl inc sahf cmpsb fldl js fwait ss shrb out and add xchg inc push mov inc outsb iret daa jb xchg outsl xchg cli test jb fldenv fist mov jmp inc sbb call pop mov and sub dec xchg push pop jne cld in mov loop outsl loope sbb ret adc and mov sub aas int mov sbb lahf push sub inc in or ret mov push cmp jo inc cmpsb cli outsl (bad) jge loop cmp call cmp xchg scas adcl lcall aad fldt repnz popf pop dec es fs hlt outsb mov mov mov cmp and fidivl shlb out (bad) xchg push or or nop jle mov xchg mov mov mov dec add aaa ret push pop or pop cmp pop push cltd rcrl addb scas out repz mov xchg sub ds (bad) mov data16 inc cwtl pop orb es cmpsb fldcw (bad) mov cmpsb into dec mov das adc and bound xchg (bad) pop sbb or addl out out pop je ret push pop ficomp mov sar lea cmp ja and cmpps add inc clc insl cmpsb cmp cmc mov sahf imul or fdivr fwait or dec cmpsb mov push jle xchg ret dec inc xchg aam inc mov out jecxz cmp pop das dec cmp in mov mov (bad) je arpl add push dec inc clc jmp jl (bad) idiv dec fucomi inc xchg loope ret repz or push shr pop mov jae mov test faddl mov mov ljmp push in jl fistl mov lock xchg call adc popa xchg jo rclb sbb xorl xchg nop xor or std pop mov xchg jo jae sahf xlat inc xlat mov xchg out or xchg pushf inc jb fs or (bad) pushl in dec (bad) cmpsb xlat adc lea aam (bad) mov sbb inc inc or cli add cli outsl loop jmp inc (bad) or push add mov or pop insb inc cli and sub icebp pop adc and sahf cmc pop push dec ds inc call (bad) mov push arpl movsl add jmp and xchg push mov and or mov adc mov mov inc push (bad) leave mov pop nop xor push in ret dec jb test mov (bad) addr16 cltd mov sbb (bad) shlb movsl enter aaa or xlat insb jnp mov cmp ret push (bad) jb lea sbb cld mov push or mov inc iret jp aaa cmp ficomp scas push into mov push and es je add pop mov adc imul xchg scas dec jno lahf (bad) out xchg mov lahf fbld ret inc mov call push jnp movsb dec pop mov mov mov lea andb cld sub dec ss out and insl mov jbe bswap jbe xchg bound and (bad) out adc mov ret aaa dec mov add mov outsl pushf insb push sbb lods ds mov mov out push mov pop or loopne push mov popa sahf test aaa jbe lods out mov ja sub movsb scas jnp jmp ljmp sar xchg xchg dec test fiadd incl pop icebp cmp dec sub arpl lret inc cmpsl jnp decl call sbb cld pop push and push mov push xor jo sub insl sub in sarl sub xor incl frstor cmpb mov shlb ret cs jnp mov int3 fs pusha inc fucom negb pop ljmp push add out dec xchg and ss test js loop daa xor push pop pop adc mov lret jecxz jle jg jo cmp and cmpsl jne mov movsl (bad) les aam stos jns cmp insl stos or cld mov sub jae cltd jno pop cmp mov lock ja fimul sub std dec sub js icebp pop ljmp ljmp cli add cwtl data16 mov testb or fisubrl dec ficoml test inc jecxz jb jno jl lods pop jle adc and pop fucomi xchg push icebp fs fsubs loop in push mov test or out cmpsb mov adc ret mov sbb lret lods dec push repz shr mov lahf dec andl xlat sahf aad fiadd scas (bad) pushl pop loop xchg sbb in mulb loop pop lcall (bad) std inc sub (bad) (bad) jno cmp pop pop mov xchg lcall dec out (bad) aam icebp lcall stos xchg sub sub push xor ret je loope pop test sub fsubl mov dec push inc push (bad) push push jmp inc and and and mov movsb mov out leave in fisttp push sbb pop test loope sbb push push popa (bad) repnz jp and inc cmp out cwtl push std (bad) out xchg push mov xsave sbb decl push cli les xlat movsb frstor pop scas aaa adc push bound stc push xchg mov inc sub pop lods dec lcall mov repnz mov jle loopne and jb xchg (bad) mov dec rol mov or inc std inc lcall inc (bad) (bad) stc call das (bad) fildl and mov adc lea xchg xor fcmovb imul repz aam and sbb out xchg mov add pop aaa push pop lock jp push add ss cmp push outsb push adc sbb xchg scas pop bound dec sahf pop jp mov xchg sub cld (bad) xlat std push mov ljmp or pop and test sbb aas lock and icebp test hlt (bad) mov dec jge xlat arpl or pop lods leave add loopne push les rorb push dec cmp aad dec inc stos arpl adc (bad) jg xchg push xchg and sti push inc mov xlat sbb loopne dec and mov jg inc ret negb inc out lahf and bound push jae adc sbb mov xor xchg test push rcr add dec stc cmp imul js pop testl nop ffree mov jle cmp sub int imull wbinvd add ja clc clc cwtl lret scas xchg mov dec mov xchg mov xor inc and push and push push jp and push push jle scas fildl clc fistp push rolb mov std daa or (bad) outsl nop push mov jnp jp ret sub pop mov xor jnp popa movsl (bad) adc insl xchg into loopne cmp gs fidivr mov rorb es cmp test sbb lds in aad pop aaa pop fldlg2 inc or cld and insl mov cmc sbb mov add sbb into xchg pop push pmaddwd std pop xchg sbb fstpl and repz mov add lcall inc dec ja xor (bad) dec jg ss stos or clc out icebp rorb pop rorb jne fnsave xlat ss push or std push mov xchg push xorl sbb cmpsb das aaa std sub or and (bad) (bad) js shr pop jmp jb,pn outsb inc stos jno fs pop movsl jmp xchg push push mov jbe sub and mov stos stos xor sar adc push outsl fiadd fisub neg pop jmp (bad) call fldcw (bad) ds lcall sbb cmp or push pop shll add sub push rol xor cmp jl loop pop xchg dec or adc dec outsb jae ret mov adc adc sbb or cmpb leave in mov or stos push ret sahf loop xlat mov and popf sbb inc (bad) insb and adc mov roll mov enter or and xrelease fwait sti add push push add in ja push or (bad) cmp pop xchg (bad) cmp test and sbb and fstpl mov idiv push push sbb mov roll push adc jecxz scas pop fistp dec mov stos test dec or ret sbb jns pushl fbld mov pushf iret data16 cltd ja je and push dec adc incb and aas cmc (bad) scas ss mov push lea mov imul inc xchg jb inc cs dec push stos push add loop inc (bad) sbb jne sbb jp loop jnp dec fidivl stos (bad) aas push mov fbstp cmpsb in xor push xchg inc sbb sbb mov ret (bad) lods fwait add lcall cmp xlat cmp cmpsb dec dec js sti fnstsw ret mov movsb adc push add mov mov sbb add pop mov (bad) pop push mov lock push ret jg stos mov aad dec (bad) out iret lahf adc push fistpll sahf sub (bad) jg jnp jae push fld iret pop cli sub cs cmpsb push sub stos fidivrl out stos jne jmp das stos or jge cmp outsb sahf ljmp js dec mov pop dec sbb fimul ds push mul fnop sbbl pop cltd mov data16 ret sbb and es decb jle sahf sahf add orl jbe imul inc pop idiv incl mov outsl out arpl add je inc jbe push jp test add std push sahf sti cmp or jmp or (bad) xor lods fildl std mov push fimul inc or ffreep pushl xchg push fs mov cli cmp adc add push mov xor bnd xlat and lret jecxz movsb adc push push or sarl push es mov sbb mov adc pop clc cmpsb es (bad) negl cli jle ja ret sbb clc jns ja stos dec jmp int lfs loopne ja aas (bad) pop xor mov sbb cld (bad) ljmp adc inc arpl xchg adc inc (bad) jmp mov pop cltd mov sahf imul dec dec jae aaa std outsl fildll faddl pushf outsl inc stos dec sub cmp inc mov aaa cmp mov pushf cmp xor pop mov cli (bad) arpl mov pop rcr inc add jo rcll cmpsb push xor and jmp aad decb push ds xchg stos add ds add aas pop into mov xchg or push in icebp xlat inc add xchg xchg ljmp mov or (bad) jmp cmpsb fucom jg lea xor in cli pop sub push mov cli mov add mov lret movb (bad) adcl mov aad and jmp pop insb aaa scas inc add lahf and push adc jle loopne mov inc leave test idiv mov scas push cmc push xchg xchg ljmp popa cltd mov test xchg (bad) cld inc cld sysret cld loopne addr16 lcall fisttp or inc mov (bad) cmp jg cmp (bad) imul pop pop push int sub inc mov inc push rorl dec inc sbb xchg push ret sahf mov scas cmp xchg inc mov repnz mov xchg dec xchg xor jg test push xchg fs ljmp mov shr (bad) mov add das and inc fiadd aas push xor add pop cld pop jmp push or or loopne leave lea bound decl loopne pop mov sbb test jg pop dec mov mov push das addr16 ja push aaa test pusha push xor js mov or lods fild mov in ss dec pop lods es cli mov jmp mov xchg adc movsl mov test mov decb aaa mov lock leave cmp mov jle xchg in mov in repnz sub pop add push sbb aaa jl shrl fisttpl or stos cli and cmpl jae and and sub orl push mov popa faddl push xor push int ja lahf xor mov push add sbbl push add les out mov nop (bad) mov sbb and mov outsl adc pop ljmp cmp and add push xchg in jae popa push sub lea outsl pop xchg outsl sbb push mov rol xor (bad) enter fiadd lods and gs pop lock rcll stos cmp mov leave sti mov push cltd stos in (bad) pop push adc nop mov xchg shrb insb mov out mov jbe (bad) sbb dec outsl and or jg in out les jg mov (bad) aas pop push pop loop sbb test sbb rclb orb out js ja clc fildll iret sahf and js daa push add mov sub adc (bad) repnz cs cmp cltd test mov (bad) xchg inc data16 arpl cmpl add push in push xor pop cmp fisub test daa aam mov data16 rorl lock push push lahf push sub push movb inc cs icebp mov js jae (bad) mov sub (bad) repz imul push into scas mov or orb pop jecxz add mov (bad) (bad) sub aam ret dec shl enter push stos sti scas dec cli sub stos add add fs cmc aas mov shl dec mov add rclb test jo sub out (bad) inc add sub sbb cmc neg daa lock inc push out mov mov fsubrl cmp sahf xchg xlat add inc arpl jecxz mov mov loope leave inc insl mov add jge jmp rcrl pushf or mov lods jle push push sti stc aaa pop or sti xor out mov or lods not or int3 (bad) xor or dec aaa adc push sahf stos push mov ss std add push inc xchg add (bad) out xchg push ljmp inc notl add stos fs fcompl inc clc rcll mov or std fsubr cli and xlat (bad) mov cmpsl hlt sar mov decb movsb decl inc call cltd jl test push daa cmp adc push jle scas mov cli and loop add inc andl mov pop ficoml rcrl cmc std ret jae int (bad) mov arpl addr16 cli es in cwtl mov inc mov or push or out jne cmp push lods jnp xchg inc mov ja add pop jno push dec sti push pop int3 into into cmp cs scas add stos aad ss inc cmp and insl lods fist dec push loopne cmp xor (bad) sbb dec cs loop add scas xor xchg lods mov pop inc mov push mov jb mov pusha andl js add mov dec (bad) (bad) fildll rcl hlt sub xchg pop aam sti push sbb inc inc sub fwait mov inc outsl mov mov xor ljmp dec (bad) jmp lea sbbb movsb dec and cmp loopne pop adc add inc call add push unpcklps push sbb out outsb ss inc jno (bad) and jl add stos push out icebp sub sbb add cmc dec push lods repz add jno mov repz mov add ds js or gs sbb adc das shll enter vmulss push leave jg dec scas mov ficomp xchg dec add rcll pop sub flds imul (bad) mov add lea cwtl push dec cmc ret arpl xchg ja ret das imul addr16 mov inc cmc in cmp (bad) jbe or xchg push sbb sub lock sbb xchg push mov cs pop in leave scas scas push hlt cmp push fbld fisub inc (bad) outsl mov dec insb mov lds jae std xchg xor out mov jbe inc sub stos daa add mov sbb fisttpll xchg out mov into cld incl push sbb inc leave mov push test mov push into xorl push dec and or push or or inc jb or sbb push fcmove xor ljmp stos loop sub fwait jmp jno push pushf mov outsb cmp mov popa loope xor sub notb scas rcr xchg jp rcrl or dec mov and push ret out and xchg out movsb mov and push (bad) lods sar xor dec sub ja nop lods adcl aam ss and sahf mov (bad) push jb out cmpsb add jbe lret mov push pop pushf insb cmp xchg push pop dec decb out xor push (bad) jae sub mov cmp fsubrl jp adc ljmp ljmp insl xchg mov inc mov sub aam outsb enter enter adc dec divb (bad) in push incl push addr16 fisubr fild add jbe dec icebp shll xchg push push out imul add or push ljmp js insl inc xlat pop pushf push stos jg jg addr16 cs repnz decl mov sahf jbe push mov fucomp arpl mov and mull lret orb jl lods movl (bad) in das and jmp cmpsb hlt mov jp jg xor (bad) (bad) (bad) jns or cli jmp std add push std out sbb call xor test cmc out ret dec mov sub jbe pop daa inc in movsb pop add ret outsl test stos stos dec std push cmpsb idivb pop adc cltd movb in (bad) ja push pop cmp push or cmp ljmp arpl repnz add jle or sbb dec aas mulb (bad) sub je push cmp out adc pop mov jge inc dec (bad) jg hlt in mov pop data16 and pop or mov push cmp movsb js (bad) ljmp add lea mov arpl xor or and call push mov dec shrb inc inc loopne jo jmp fidivr xlat pop ljmp xor std loopne mov dec rclb mov orb in lods (bad) int dec movsl std or dec aas daa fldl lret jne pcmpeqd adc sarb add push jno sbbl jno and (bad) sub cs xchg cli and sbb imul ficom cltd repz add ret jecxz push push push lret mov dec repnz mov pop mov cmp mov cwtl pop pop jb repz (bad) out adc outsb cld andl or stc cmp inc sbb mov push push ljmp xchg in or push in mov dec fstps lahf cld mov out inc loope jbe push add rolb les outsl mov imul arpl out xchg sbb lods xorw repz test (bad) jg in push loope imul inc mov sbb xchg push push loopne jnp xlat mov mov lock (bad) outsl or sub jbe mov repz inc jecxz das (bad) mov dec loopne popa mov dec dec sti push fisttpl inc es sub call test push in ss ret scas add mov outsl inc es cmpsb add xchg jo mov sub dec push adc push mov and clc inc push mov pop loop daa mov aad dec call pop fwait mov data16 cmc int3 sbbb call dec jl aas cmp mov loop sti push pop shlb add push mov daa mov push dec sub push push push jecxz loop mov out insb fsubl outsb (bad) clc stos decl xchg sar jns es rcll cli pop inc push scas push and jne (bad) dec adc push gs in ret or rcrl add (bad) ja pop dec inc pop aas xor mov pop and fmull jno mov push pop mov lods jmp cs dec xor mov (bad) xchg adc xchg data16 inc mov xor push gs stos xlat mov popf in or jl imul sub outsl xchg jno das mov icebp jg mov sahf or fimull pop sbb jns inc in sbb int fs pusha sbb mov inc xabort push inc sub mov arpl dec pop push das and outsl ss test xchg adc push insb xlat into xchg les imul (bad) mov xchg or inc pop out lock dec push sarl stos pop sahf jp mov into push xchg popa test cmc push sbb loopne (bad) jg movsb mov fwait mov sbb sbb push pop push inc jbe test sub mov sbb mov or push iret pop mov les jmp loop inc out es mov inc pop inc out stos xor fnstcw aad scas xchg jbe outsl scas sbb adc or dec sbb or sub or roll lods xor dec xchg push fadd cs fucomip mov or addb jne pop sahf lret jg or xchg loop adc ljmp je loop xor pop insl jg aaa jne lahf push sbb jmp cmp loop dec out mov decl (bad) clc cmp cmp lds and shr sahf push out lock scas jle mov out xor mov (bad) (bad) aas push mov idiv push dec ror push (bad) adc mov mov imul push adc incl aaa add loopne scas lea sbb imul call jg shrl lahf jmp mov sbb insb and data16 stos mov pop jp jnp adc ret sbb push sbb stos push add stos and (bad) into test xchg jne out adc sbb cwtl icebp fild loopne add arpl sbb in mov xlat (bad) addr16 sti pusha dec xchg jle ss ss xchg mov ljmp or push cld pop dec add sub inc mov and or idiv daa lahf cmp (bad) aas mov xchg push sub mov das popf jb xor inc xchg or mov or or scas cmp jg clc outsb scas invd in lret xchg (bad) jp adc hlt cmpsb jmp testb jnp sbb inc mov push dec cs mov jo cli pop loope and mov scas les fyl2x addr16 push aad imul nop clc scas push (bad) or push lock out hlt hlt dec enter std addl jb gs add or sub dec lret mov mov cmp mov add aad ret imul icebp mov fmulp push xor pop adc xchg das fwait jbe adc ret jbe cmp xchg jle cmpsl loop std pop (bad) rcl fistpl pop and xor setle push orb pop (bad) out xchg rolb push fistpl push xchg ret push mov dec scas scas mov jnp mov jl in dec addr16 shr scas push sub inc jmp cmpsb comiss dec cmpb jg mov das adc pusha mov jg les loopne das mov sahf adc lret xchg scas test sub mov fdivrp sahf cli dec jg or add pop mov dec out test mov inc std inc or jecxz outsl mov or pop mov loopne mov addl pop push cli pop dec push push or xor inc bound data16 push jmp outsl adc inc pop bound lock incb call (bad) pop sub inc out push mov mov lcall mov divb (bad) mov lock inc cmp jle lock fstl pop pop out mov dec sbb xor pop lods xor stc cmp xchg or jb or lahf xchg sub push pop xchg jecxz out inc fsubs inc (bad) inc xchg jns data16 add or push repz and unpcklps add loop femms inc add xor leave outsb ja ja mov es jmp call loop stos pop aas es fs lock sub jle and fisubr sbb imul (bad) jg sbb mov push fbld mov cmp push faddl lcall mov les adc ror test call (bad) cli jo (bad) repnz jmp clc js sbb push shr cmpsb mov pop pushf push add or (bad) inc loope test (bad) dec cmp jp fist daa enter mov clc dec scas ss add nop push xchg std ret into mov std add lret mov add sahf dec mov aaa lret sub mov jg leave in and cmp mov loop push lcall mov (bad) and dec (bad) mov pop and arpl fldcw jb jg fnstsw inc xchg pop aas xor add ss sub test aas test pop dec divb sub ret repz sub outsl xchg fisubl adc cltd out xchg out add cmpb aad cli rorb repnz (bad) push mov rorb out push inc sbb bound cmp cmp (bad) ljmp push add cmp icebp test (bad) es sbb loopne (bad) push bound push ds xor xor repz adc addr16 fidivrl sbb pop pop push pop into pop int push inc mov rcrb ljmpw push add ss pop inc mov lcall popa or mov mov mov cmp out adc loopne mov fnop jge lods testl jmp or mov xchg js mov or insb fimull push cmp ds lret shl cmp sbb sub int3 cmpsl int cs jle das js ret dec pop (bad) call imul mov pop ret dec cmp mov cmp or jno mov add shll in mov scas sbb jbe add aam repz adc mov push sti mov lret or subl jmp and cs insl in dec cmc adc cmp add sti pop div (bad) das xchg dec or ljmp push popf cmpsl jno fbld outsb aaa stc xor push cmp pop and ja inc xor sub loopne mov into outsb mov (bad) xor push rcrb daa (bad) xchg inc lods data16 pusha (bad) dec sti jge jae ret sbb mov mov mov and insb or jg pusha push sub xchg adcl insb dec loope fild push mov lret push inc sarb xchg cmp or or js,pt add pop std sarb sahf adc sahf dec lea aam out (bad) adc pushf pop loopne lret out sbb add insb jo outsb (bad) (bad) mov jns jo,pt aaa cmpsb cmp adc ss pop adc bound shll (bad) lret shrl jb je sub add cs lret js mov dec sub addr16 test into fcoms xor add pop cmp mov fucom das jns add jns inc jmp mov xor (bad) in (bad) shrb pop popf push mov es mov aas pop icebp inc cmpsl cs ja mov xchg pop int jecxz add lahf add lods xorb push dec addr16 idivb mov hlt (bad) cli cmp ja or shrb pop pusha jl pop data16 mov xchg dec loope sbb mov sbb addr16 out (bad) je push dec cmpsb andl jo adc adc dec fmull leave push and dec push lock pushf push addr16 add add inc cli cli inc pop sub or xor adc inc shrb imul cld (bad) fildl mov dec sbb cli xor lds push sub mov test xor fisttp mov xchg jb xchg aad outsb rcl faddp mov scas js ds cmpsl (bad) adc or push ds cld repz push dec xchg push icebp add fcoml faddp add pop rorb inc mov push arpl add mov popf or jmp insl shr push roll lret roll fimul push add add dec add outsl lcall cmpsl in push loope or icebp add mov dec pop add xchg ja adc jp adc pop lea das add xchg stc cmp clc mov stos jle mov test clc int sbb cmp test movsl dec fdivs xchg inc (bad) jp mov xchg (bad) jb push enter jmp dec cmp cmp add in pusha xor pushf mov cmp and adc push cld fnsave jecxz and ss cmp jle push or shll inc and mov lahf xor cmpsl or dec push not inc leave js imul scas cs neg shrb xchg jae fs mov rcll cmp inc jne (bad) loop,pn into pop cld comiss fwait push call fidivr outsb or and lds xchg jle xchg ja push stos (bad) loop pop mov ss push pop test push fucomp mov adc outsl aas adc ret sbb ss or out push push xchg loopne iret es or sbb mov not mov lea pop mov imul scas push push push lahf loopne push imul clc xor mov xor push cli insl mov sahf add fst jg push negb jp inc (bad) idivb xchg mov adc mov outsb aaa push add scas fiaddl mov dec lret push mov xor pop and iret sahf dec add lahf loope,pt mov js dec fwait pop jb pinsrw mov fs bound pop and push pop pop add push pop hlt push or cmp outsb scas xchg jbe adc add push inc imul fs stos out dec rol mov pop sahf aam daa push xchg push pop mov xor mov adc xchg and out jecxz push int3 pop pop and push jle mov push push cld jb das mov leave jb cmpsb mov or faddp xchg jb jmp add inc shrb mov je sub lret rcl fdivr pop hlt out test push repz ss add cld sahf pop push pop push nop shrb pusha (bad) lret daa adc stos test mov ss mov test jae call sub (bad) fdivp xlat ret adc ror dec pop mov cs pushf loop fnop mov idivb sbb add leave outsl mov sbb pop into xchg or test ret popa add cwtl sbbl addb push add enter pop add dec shl mov push je jle (bad) movsb hlt cmc scas nop out jbe ret dec push jge sbb inc stos cwtl arpl cmc mov leave push sub dec cltd add mov lret ret lds (bad) in mov call push jg outsb ret xor scas dec xchg dec loop fcmovnb decb into rorb mov push xchg mov and orl xchg mov ds into lods lahf aaa inc movb xlat add jle aaa xor stos call leave aas inc bound dec push and pop add inc data16 mov ss lock mov inc out insl jp jnp lock shrb adc scas add pop push dec ret add lods mov mov xchg clc mov outsb cmp push lcall mov inc mov ficomp mov stos push rolb outsl xor cmp dec test mov (bad) ljmp insl lea lds mov and mov jne scas fnstsw icebp outsl out daa lock dec outsb pop lea popf add xchg push add add cli jecxz mov lret dec icebp arpl test cmpsb xor rcrl bnd push (bad) pop adc sbb loopne dec xor mov sbb mov mov aas popa pusha sahf into jp mov (bad) fistpll ds loop add mov or adc xor mov and push (bad) (bad) ffree adc xor cmp ljmp sub push jl cmp sub negb (bad) jge scas mov jns dec jo mov add out xor outsl scas sbb push (bad) aad cld sbb xor dec pop test scas movl or orl cli call (bad) aad mov aas nop add fstl fimull xor and adc xlat mov (bad) lods inc push push in mov pop fsubl outsb xchg or test dec sahf push fmull add fiaddl fwait repz fiaddl std insb lret sbb repnz outsl sti xchg lret jl divb mov dec sti (bad) movsb addb push stos into jbe jns neg adc or dec mov push ss adc (bad) and xor adc adc push fidivr inc mov fist cltd movb cmp mov cmp jmp js clc stos inc cmp sahf jg xchg pop sahf push and (bad) sub xchg lahf push mov jo fiadd mov std cmpsb js push pop (bad) adc inc movsl mov outsl mov gs lcall mov shl ret cmpsl inc sub repz out in daa cmc dec sbb out mov ret aad inc fsubrs frstor mov inc mov mov inc mov fldcw inc lds jle cmpsb in sbbl mov mov call iret push flds jg cmp ss sub and into das push pop sub iret outsb or mov jg pusha push outsb js aad imul fbstp jnp out ficomp push loope je loop mov pop jb mov test cmpsb fnsave sub add add out pop cmp fmulp and out outsl es je pop or repnz hlt xor sub pusha sbb aas mov pop (bad) push or mov arpl es add push mov inc add nop mov (bad) pop push leave gs sbb inc test cmpsb fidiv xor or cld aaa adc js ja or xchg or fisttp shrb add outsl sub fldl sbb xchg jp mov cmp icebp xor cmp cmp (bad) push sub or push out dec sbb bound jle dec or xchg mov sub mov enter int3 inc fisubr xchg rorb mov dec (bad) xor jbe pusha dec xor adc pop outsl (bad) or xor cli cld and int (bad) pop inc and ljmp dec push dec pop into ret rcll clc add inc out adc and pusha jg jp push outsb clc cmp (bad) (bad) fsubp pop aam outsb sbb pop clc adc cmp es adc sbb cmp add xor inc jl iret add mov icebp pop mov fidivl push outsb add cli mov push sub call lcall jl aas mov scas push sbb push loopne loope scas ret leave popa adc scas pop popa push sub pop in or xchg (bad) and and js mov push nop push sub (bad) stc mov push out mov mov insb mov jmp clc inc outsl fsubs insl cmpsb decl inc incl pop outsl dec or (bad) aaa fwait fwait or or mov cmpsb in add pop popa nop mov (bad) sbb loope es in out cs repz mov jmp movsb pop push inc loop out (bad) stos lds out and add push outsl push inc xor vunpckhps out sbb xchg adc fsubrl hlt add (bad) (bad) jbe pop xchg pushf push push cmp sub dec cmpsl pop out add cmp clc adc scas lods cmp or or push or xor enter jg jecxz bound push shrb cmp jb test jno xchg push or and into movb outsl lock imul cmp or jle push sbb sbb lahf int3 and addl lock call pop aad sub and dec push jo and aaa mov scas and lods push out imul ds xor aaa dec inc fidivrl ss sbb in daa in push (bad) jbe push inc leave pushf das imulb rorb (bad) lahf loop rorb out rorl mov into mov inc adc mov imul xor stos cmpl (bad) push jnp inc xor pusha mov jne loopne nop inc adc sub (bad) jl and scas jb or adc add jmp les mov lods sbb lahf scas rorb xor sbb pop jae xchg inc clc push cwtl icebp lahf movsl inc mov push shlb mov xlat popa data16 loop push sbb adc imul roll pop sbb adc inc call lret aam xchg jo xchg or aas data16 rcr push jp inc bound sub push xchg push xor nop mov xchg ds inc icebp push lret cmpsb xchg xor inc enter inc push cld lock dec ds ret sbb inc add es xchg aaa jmp das repnz sahf inc push fadds inc (bad) jg cs out push jmp push rorl dec cwtl icebp push scas ljmp out pop mov (bad) divb and mov cmp add push outsl test push clc dec cltd cmp xchg cmp rclb add mov mov fstl shlb notb jb cmp xchg cmp (bad) ror les (bad) push dec adc xchg and xlat (bad) adc cwtl jbe mov pop (bad) fwait stos enter mov adc jl and iret and decl mov jle cmp cld insl dec movsl sti mov inc add out movsl xor sub aas mov movsl mov cmp imul ret loop ds add loopne,pt out cmp push mov or pop mov cmc lret imul mov mov or (bad) es fwait movsb dec repz push mov sbb or outsb ja push sub loopne imul dec cmpsl popa pop outsb mov mov cld jmp mov mov lock test mov xchg sti iret cs add or mov icebp jp mov xor mov adc mov mov shr dec rcll ljmp dec ret cmc mov andl sub xchg rcr ficomp inc loop fucomip xchg pop dec popf in push mov dec push daa xchg movsb popf (bad) es pop and jecxz add int3 into js ss icebp test and (bad) stos mov add rcll repnz sub pop dec dec ret int ljmp add jo lock xor xor xchg int or lret enter push fwait pop mov out and decl dec pop pop cmp aad cld dec jbe lret cmp es fwait add loop enter paddd ljmp mov push test mov and jae add stos sub clc jge mov cld iret mov fldln2 mov les jnp repz aad pop add out lcall fistp call test add js pop mov add loope aaa ds enter dec jo add add sbb mov jle hlt in adcl cmp js inc das loope mov mov mov loopne jp (bad) enter xor imul loopne mov imul fbstp (bad) out adc or mov inc pushf mov pop mov lock out inc and mov push lock mov jp mov cwtl fistpll jg xchg mov inc ficompl aad mov sahf cli orl pop pop dec pusha inc sub sbb add dec jo ljmp cmp cld add pop ja jne sub jne mov mov sbb ss (bad) add (bad) mov (bad) jp add movsl (bad) lods sbb or cs mov xor out mov out addr16 cmp aad xchg mov sub or xchg das arpl (bad) cmpsl fisttpll inc mov sub jl inc push sub fildl inc add ret aas ds jno cmp and (bad) mov mov (bad) pop sar imul mov mov subl in dec repz inc ficom repnz enter sbb out cmpsb fwait mov (bad) (bad) jl sbb out (bad) (bad) xor lcall and cmpsl stc shll dec es lahf ds mov fcoms stc push pusha clc test push push sti mov lahf out cmp imul adc clc out imul jbe cmp movsb sar sbb fbld push es loopne scas and pop or push in out sahf fstpt fsubrl shlb xchg cmpsl pop xchg (bad) and (bad) out stc jns outsl push ret ja cmp scas cmp out dec repz cmpsb cld sub jo adc shll xchg outsl cld test scas adc pop adc roll into repz imul js cmpsb cltd jp cmpsb imul lcall sub dec inc push jb xchg adc fisttpl xlat mov xchg ja daa mov cmpsb inc popf loop push (bad) cmp scas stc pop xor js jnp push cmpsb mov loopne jmp push inc decl cmpsl scas cmp mov push and xchg mov scas mov ror xchg scas pop mov stos or test (bad) dec in sbb lretw cmpsl arpl xorb andl mov mov inc pop mov inc cmpsb mov xchg out jns jmp sub lock xor bound imul cmpsb outsl pop push scas fwait outsl mov ret mov sbb out xchg (bad) cmp lahf out add and xchg in fdivp out clc scas es (bad) push scas push dec ror pop ds push jns xchg mov in cmpsb sti mov cld imul add shrl xlat aad dec push cmpsb jo mov push bound push add imul (bad) scas fbld jb fcmovnbe mov fsubl xor pop and popf lahf icebp sbb sar imul and hlt popf pop jbe xor fcmovne push cmp xchg (bad) imul pop icebp dec repz test pop daa out (bad) dec dec sub out push sbb subb popa gs sbb pushf test leave and je cmpsb mov inc push push ja mov cmpsb lahf divl scas pop pop pop (bad) stc sbb scas aas int loop xor mov lahf out scas push push mov std int std imul push and aad int sbb scas xchg dec (bad) mov out cmp test ds decb lock test jp in int in test pop pop cmpsb pop inc ljmp xor std dec popa (bad) push dec sub lcall push call scas into andl sbb rcll aaa fwait lahf add xlat lahf pop lock cltd jg out cwtl fnsave imul loopne mov cmp loop repz popa cmpsb pushf mov inc stc sarl mov adc mov cli mov pop jp push loopne cmp adc add iret out cmpsb push cld mov scas inc push movsb pop test lahf mulb ret xor xorl ficoml pop lcall lahf jbe scas iret jo fs add sub out cmpsb mov add cmp ret aam stos fsubrp shr shrl scas sti movsl lock repz shll cmpsb out lock or mov aaa sub jge xor inc jp call hlt (bad) cmpsl popf jmp decl or (bad) mov out into add (bad) lock stc shrl sbb pop pushf loop lds mov (bad) data16 jg xor lcall xchg mov mov cld imul (bad) mov cld movsb stc dec push xchg in test inc es push lock test sub adc pop xlat mov cmpb push ja,pn dec push pop scas inc ds push xchg scas ss mov inc cmpsb push jecxz xchg jbe in sarb push push cmpsb popl fsubrl or stos jb jbe add (bad) dec cmpsb pop test je mov cmpsb jae (bad) inc sub scas cmpsl cmpsb dec sar imul jb dec push sti lahf push add cmpsb xor ljmp (bad) mov scas dec ret repnz jno or xchg test push stos ss enter outsl lcall rcrb jmp (bad) jle,pn and cmpsb imul loop inc ss aas xchg sub xor ds jbe push mov stos push call in jl dec clc cmp xor fadds (bad) jne mov sub push pop jns test push add adc pop (bad) repz pop mov imulb mov adc xor imul push inc out sti repz shlb cmpsb int3 loop jg cld mov push mov lcall fdiv cmpsl stc shll (bad) fwait dec (bad) test inc push cmpsb cwtl aas int repnz movl pop out add dec push ss cmp lahf out sub ss sbb stos mov repnz loope cmpsl pop pop fist repz jge adc jne xchg push xlat aas int call cmpsb jno ds mov mov jo inc bound pop adc repz jmp loop jle scas xchg pop fimul into mov mov mov das lods push ret mov stc sar sti enter popf or addr16 mov sbb lret push clc andl arpl sub rorl bound js push das testl bound in push xor cltd sbb inc arpl and ret adc lcall mov out cmpsb xchg pop mov mov (bad) aam push aam cmpsb xchg sub scas ss popf movsb ret ret adc test push lahf and (bad) imul and jnp sub scas loop int out push call stos out cs xchg call lret xor mov mov push imul pop lret scas es adc xchg sub loope sar mov sub lret dec jnp xchg repnz mov jl mov lcall lock mov aas in xchg (bad) ss scas xor sbb mov add sub cmpsb clc daa mov push adc daa and add jmp fmul pop imul sub test arpl loop sti sar jle,pn pop cltd aad mov add rorl pop jle (bad) cmp inc xchg sub xchg cmpsl stc repz ja insl das aas cmpsb push mov jle aas in push scas (bad) pop into xor stc insb sub cmpsb jnp fsubrs dec pop push jp,pn push lahf outsb lcall scas add sahf push cmpsl out daa div cld loope imulb jo aaa stos cmpsb sbb pushf fnstcw bound inc mov mov fldcw mov push push arpl cmpsl gs mov mov test call jb inc push cmp jle xchg scas mov loope jl test cld loopne out xchg mov mov shrl push xchg pop das lret cmp dec inc outsl push cmpsb (bad) out sbb sbb sbb jae (bad) shrl ficompl dec cs repnz aad cmpsb and js imul or cmp jp lcall scas jns push (bad) cmpsb sti ds sarl mov test daa bound enter push sbb into repz mov int cmp push bound pop cmp cmp (bad) stc shl leave fcomi fsubl cli xor push mov aaa movsb lahf out outsb (bad) fisubl call xchg push daa mov movsl lahf out cmp sbb mov out aad jle lahf data16 adc aad ret pop rcl sahf fbld mov cmpsb jo,pn loop aaa adc ret cltd scas aam pop push std imul jmp scas pushf test dec call jb push fstps sbb pop outsl scas sbb cmp push sahf pop scas (bad) push sar js fstp adc or lock push adc cmp fnstenv test cmpsb cs std fdivrl push jle (bad) arpl daa stos ds cld lock (bad) sub and push stc fsubrl aas loopne push movsl dec lahf push popf test jnp int adc scas movsl test ret nop jmp cmp sbb test decb scas xchg (bad) cs sar imul out mov scas or add popa push push call xor jecxz lret and out sbb je pop push push mov dec cmp gs out xchg mov or cld pop cwtl xchg scas fldcw jne ret cmc dec ret jge xlat jmp xor jb adc bound ds scas jle or and sub leave ss out imul pop imul imul scas cmp sbb cld imul aad adc scas mov in out or lret lods shll outsb cmpsb (bad) scas add out scas hlt cmpsb or add sar imul fcomi push cld imul bswap push out (bad) not ljmp pop arpl ja dec sub xchg movsl addr16 mov pop mov mov mov add cmp aaa push sarl cmp mov inc cmc mov pop imul fiadd push xchg leave xchg aas jo inc movsl jbe cmp inc in push jg cmp cld adc xacquire mov es jae cmpsl mov addr16 out pop jb mov dec sahf or mov insb mov pusha and insb push daa dec fiadd ss adc shlb daa imul jmp pop or and loop xor in shlb push scas xorl push dec cmpsb xchg pop mov bnd mov ja scas jmp adc (bad) mov (bad) out pop push sub scas out addr16 in sub int3 mov mov sbb outsl addr16 mov push pop repnz sbb lahf mov fmuls mov cmpsl stc shrl hlt add ficom add cs pop push xchg adc mov inc scas jmp out xchg out adc inc shrb popf mov push sarb data16 bnd mov lret cmpsl cs ss sbb mov lret (bad) dec lds jle fimull push sahf push mov cld rcrl xlat scas loop push dec pop push push ljmp mov xor jecxz imul lahf fwait int aaa scas mov jle sbb in scas pop pop push xor inc pop icebp test cmp and int es scas icebp stos insl repnz aas lods inc sub aad lahf xlat lods lahf mov out (bad) cmpsb pop push iret repz lcall adc add xor xchg cmpsb dec push push sbb test mov sub stos cmpsb (bad) ja jle jmp leave movsb (bad) ret sbb or cmpsb push xlat add test jmp push sti repz daa dec sahf cmp shrb cli pop loope sbb fist out push lds cmp repz fsubl or mov cli (bad) sbb popf aaa cmpsb addr16 cmpsb or jmp mov hlt sar ja xor mov mov movsb inc cmpsb adc add push das loope or push es std imul call sub inc cmpsl cmpsb cltd pop arpl repz int enter scas es out test push mov mov push pushf add outsl cli sbb or fist cmp dec inc push (bad) ja add ljmp dec jmp (bad) loopne lahf outsl add pop push push imul cmpsl or out test lahf jle cmp pop push loopne jg cmp jne push jle xlat (bad) lock jno scas push mov fwait aaa mov sbb jnp push mov inc scas iret cmpsb dec xchg sahf fwait sbb mov dec repz repnz add dec xorl pop mov scas lcall mov mov iret dec aas shrb loope outsb cmpsb push negb mov popa test scas cmp shr adc mov cmpsb cli sbb aad sbb std rclb imul xorb xor sbb stos ret cmpsb lret jg pop clc sar scas out testl push stc mov cmp sti sbb dec shl decb out mov dec fcmovnb (bad) inc mov push scas mov (bad) push sahf jmp cmpsb push aaa (bad) idivb nop cwtl adc out cmp inc scas das scas cmpb lahf (bad) int3 push out gs jnp lret push loopne jle xor xor ss scas imul sbb addl orl sti shlb mov aas in xchg pop jle ljmp std jns stos mov arpl stos fwait cmpsb xchg pop hlt sar (bad) sub inc jp dec aas mov pop sbb mov fs repz cmpsb mov mov cmpsb sbb scas jbe mov push mov int lods or add mov mov loope sub stc ljmp (bad) loopne jle in pusha dec jb fwait aaa fwait adc sub sub popf cmpsb push ret fwait sub lds push add push aad dec adc rcrl adcl cmpsl stc xchg sub and jo lret mov outsl add xabort jle lcall push out xor or inc mov bound xchg sbb push jp fcmovnb mov in lret addr16 sar imul dec sti sarl mov xchg adc scas mov aad add mov push clc imul or cmpsb adc adc add push lret mov (bad) mov dec (bad) notl cmpsb xlat outsl stos and fdivs jg fwait lock cmp scas jno mov pushl sub or mov ret in test std (bad) jmp repz loopne dec movsb pop pop jns inc aas out jns cli push fs out sbb xchg out lret (bad) ljmp add fiadd cli ficomp jb leave xor sub jl in pop xchg shl mov cmp pop addr16 jmp scas test dec out loope nop cmpsb mov inc push outsl push js mov cmp xchg xchg cltd mov jl cmpsb inc jle stos out mov jp stos jg jbe cmp jl int pop mov cmpsl inc std je loop pop (bad) aaa push dec xchg push (bad) (bad) adc (bad) adc aam adc pushl pop inc xchg xchg lret cs mov add pop movb push test outsl loope push mov ss or (bad) push sub mov dec insb push icebp xchg popa xchg pushf ds (bad) (bad) stos movsbl add scas test mov mov mov mov inc xchg jb rcll mov enter insl loop or sub push xchg fistpll cs sarb ja lret clc data16 out ret or ror pop ror sarb lahf push clc scas xchg push outsl cld cmp push jg inc pop mov pop dec repnz imul adc ss ja (bad) aaa inc stos mov (bad) mov imul mov mov cld decb call rclb fisubl push nop in loope or push cmp adc mov cli pop rcl idivb fsubrs outsb test repnz xchg ds xor std push mov mov mov push (bad) jp pusha (bad) ss inc shll (bad) and adc into loopne cmp or xor jb jbe inc ret into push cli in (bad) cmp inc add mov and loope sbbb dec or sub inc add sbb xchg add adc inc sub cmpsb jnp xor push or mov add dec loop jg xor clc inc or xchg loope leave pop lret sub mov push (bad) enter mov pop imul mov mov jle add int dec (bad) xlat mov jbe (bad) xor lahf sub gs sub ljmp cmp js sub pop rcr gs and pop ret stos imulb cmpsb imul std insb aaa adc sbb ss movsb jle pop es stos mov mov shl push and mov sbb decb xchg jmp pop cs add xor cmp dec das clc push stc sbb cmpsl outsl aaa xchg arpl iret add nop leave jge shrb insb push pop mov clc cmp stc xchg lds jmp jbe clc xor xchg adc notl pushf push cmpsl or (bad) jne and lahf enter pop jp inc imul mov ljmp jle xor inc sub aad stos cli push inc xchg push pop and push sbb stos repz loope adc hlt push (bad) outsl or jecxz cmpsl dec and inc daa inc loope cmp fidivr cs imul cmpsb pop inc lahf mov add (bad) ficomp xchg sbb inc pop outsb loopne and and ljmp xlat (bad) fiadd call incl daa or outsl fwait push mov dec stc ficomp sbb inc xlat push mov push dec lcall xchg (bad) dec cmp sahf (bad) jo aam pop ficoml popf or add dec fs mov push into pop bound adc lock mov fsubp sbbl das dec in and xlat jecxz push shrb jecxz (bad) cli stos and pop adc sub insb (bad) xchg pop leave aas push push into out push add test jle leave xor aaa mov iret fninit ret lods stos xchg jl mov mov aas or pop sbb push push ret xor test andl loop push ret test pop ss lahf lahf sub aad pop std or stos mov out inc inc ja inc jg outsl add ss fisttp cmp xor lock lods and push clc xor sub aaa andl cmpb dec popf push xchg fstl inc add mov in xchg mov fmull loopne pop cli inc popa xadd xlat push and loope ret stos es push out shrl xor fstl jo xchg ds or mov jb ss add add es es sti jns dec and xchg jo or dec jg lahf xchg into ficomp fs (bad) and lahf out (bad) decb fucomip or (bad) mov jle test mov popa jg aad scas fsubp rcrl pop sbb jecxz inc push and push cld (bad) xor add aad pop fimull sbb lahf (bad) scas adc xchg leave or fistpll stos stos loope (bad) (bad) decl xchg fdivr push data16 sub aad pop in stos xorl mov (bad) fnstsw push lea push out lcall jle (bad) mov adc leave lcall scas int3 fs div test cmp add es rcrb jge dec jae jo inc push loopne movsb lahf push fs push insl dec or mov pop stos out aaa xchg clc sbb sbb ret out inc xchg lret es js inc outsb repnz xchg xor divb push mov mov cmp push add dec pminsw mov push push out xchg or popf aaa pop sbb sbbb ds movsl push stos xchg inc pop mov insb pop jb mov pop into xorb sub mov aas sbb imul es pop jbe add xchg outsl out xchg inc clc call and push sbb imul jmp jbe ret xchg mov (bad) movsl aad (bad) (bad) out mov inc mov cmp cli add xchg push add and add pop cld pop pmaxub sbb cmp lods or loop scas int ret jl pop cmp xchg outsb in dec inc cli pop outsl test inc outsb mov push push outsl incb (bad) imul lds stos xor test fistp mov stos and (bad) adc mov ljmp les outsl fidivr orb aad cmpsl rclb out int jns and out imulb jns inc mov into (bad) pop das stos mov lret fimul push daa test mov stos inc mov sub and iret (bad) fidivr add pushf xlat imull cwtl sbbl aaa outsl bound sti mov aaa mul fistpl popa rcr fidiv daa in push fwait outsl mov movl inc cmp aaa sti sarl (bad) clc outsl add pop xchg (bad) aad xlat lret fwait xchg jecxz loopne (bad) repz mov jmp rcr adc mov cmp sub jecxz (bad) add aad sbb dec mov test mov push pop mov enter or pop ljmp mov imul rcl xor negb cmp daa daa pop pushl sub data16 or rcrl pop inc xor pop sahf xchg aam dec cmp scas ds loopne ret icebp pop cmp jle push fstl pop mov aas lods test and outsb in subl xor lcall push adc sub inc add cmp imul imul pusha mov ret lock add cmp inc cs xchg add push pop push stc add clc sti andl xchg pop mov lahf mov aas (bad) scas addb nop dec xchg mov clc add and flds mov aad and jae inc sahf lret insb sub pop fst std fisttp mov insb add push fnstenv es fsubs sub and xchg jne add jns movsb xor lock jmp adc push jbe cmp mov insl mov repz ret inc cmp lock lret (bad) mov decl add (bad) insl sbb fcoml stos outsb les sub rorl (bad) das sub subb sub inc es jge sub imull ss or loopne inc imul mov sub int3 add iret jmp inc lret pop mov or or dec cmp mov cmp adc sub cmp es sti push xor cs mov sahf push mov adc pop and sbb jmp and jmp add push ss xchg cmp xchg xlat into lahf (bad) mov push xor dec sub out pop mov mov mov aas push pushf pop ds dec lea cmpsb push fmuls mov (bad) cs (bad) scas xor cmpsl add inc fcomi es movsl lock jne std (bad) pop xor cmp add mov mov xchg sbb outsl popa inc je pop sbb fcom addb xchg jg or sub cmp stos mov imul jae xlat xchg cli xorl out movsb add cmpsb scas cmp stos fistp enter jmp dec mov sbb stos cmp sub cmpsl aas adc clc (bad) loope push cltd das cmpsb add add lock leave xchg in cmp call (bad) loopne and dec cld push pushf enter mov stos dec sub stc js xlat addl cli dec mov mov cmp push (bad) js,pn xchg les add dec push xor sub add jmp dec dec xor outsb and pop push push int3 sub insl mov inc mov adc lret inc int mov push add jae repz cmp cmpsb ljmp les jmp add mov js sbb scas push push sbb sub data16 cmp fwait inc repz inc rcrb cmp jns das clc jecxz lea sahf je fstp lahf roll push xor popw (bad) mov mov jbe inc out ds fadd jns aam cmp mov loopne push lcall or aas ffree into loop pop cmp or push push (bad) cmp shrb or xchg imul add push insb push xor out mov int pop dec jns mov push push ds cmp cltd xchg ss mov xor (bad) cmc xchg clc or xor outsb shll ret rorb out out or rorl cld jg push inc stos frstor push push fisub pop push dec (bad) scas fcmovu fsubrp rcll and js test jmp clc jl sti pop xor cmp add fidiv pop ljmp jl add mov xlat push xor inc addr16 fs and push cld (bad) push push push mov jmp es push pop cld cli sahf repnz cltd (bad) push sbb lock pop add push (bad) cltd xor adc push jns cs ficompl cmp ds sbb xchg mov (bad) or ds push stos lahf push push inc cmpsl fsub inc ret push mov into pop jecxz out add or imul int3 jb push or jg fs call addr16 jns jg je adc sbb jle fldl cmp iret sahf out xor push rolb loop push sbb xor mov lcall rclw cltd out lahf cmpsl jbe add lods lcall or insb push inc mov fisttp fstps lods popf insl cmp jmp jecxz,pt lods cmp scas icebp jg dec sbb repnz test cmp mov dec unpcklps imul aad dec fldenv pushf sahf ss movsl lsl jbe rolb pushf or out jns imul inc rcrl sahf add call jae push cli (bad) rolb daa (bad) imul ficompl jae test push add fmulp dec jb mov shll jb daa sub fistl add xchg lds (bad) xor xchg xchg xor push int inc lea into out push (bad) jbe pop pop mov and jo or das mov push iret (bad) sbb dec leave and and inc (bad) fcmovb shrb (bad) out cmp js mov sbb add lret pop je rolb jbe or jno lahf xor sub dec sbb pop mov fwait push dec cld push fbld (bad) repnz (bad) decl cmp xchg cmp adc sbb xchg push push test mov and xor inc jmp mov cmp jbe repz cwtl cmpsl testl or loop add dec movsl adc and in ret popf sarb dec cmpsl repz cmpsl inc imul imul mov dec in push outsl (bad) jl jmp stos idivb dec into stos or push pop add ficompl daa test xchg fwait out mov pop jle cs pop aas sub daa lds mov inc mov pop jp popf jmp push or (bad) push or cmp mov js xor push sbb shlb lcall scas add pop or push fwait push pop mov outsl sahf dec cs (bad) sti pop int cmpsb rorb sub loope clc lcall in mov outsl out int les cmp rolb icebp fistpl xor dec sbb pusha flds push adc or fnstenv es sub push shlb ds out push or add sbb idivl in mov pop and jg scas in loope pop cmc (bad) sarl data16 xor leave scas or jno and sahf outsl pop push pop out aad sahf shrl jo xor push out js jecxz cmpb testl inc ret dec (bad) mov mov in push pop shl adc test enter decl jg jnp out testl pop and xchg lcall jg xchg js mov bound dec shll add push mov push jecxz jp xchg and (bad) fmul rolb add push sahf sbb loope repz mov jb dec mov movsb mov mov mov add cmp mov aad ss stc jb imul push and mov add aaa mov inc enter lahf negb ds sahf out cmpsb lock clc fwait dec add push sub or data16 rcrl cmp je adc mov (bad) mov push pop xor jb inc sub mov push push gs add xchg (bad) call out daa outsl lret aad adc call cwtl mov dec scas outsl mov fmull pop (bad) repz push xchg dec xchg cs stc add iret add ljmp and push push jo repz xor sahf movsl ror inc mov push out fs arpl out mov mov add inc pop sub shrb dec or aaa pop fucomip pcmpeqb cs fdivr ss sbbl (bad) inc fmuls pop dec dec outsl adc mov inc test ljmp and call iret push mov scas sub out arpl dec clc sub (bad) xchg pop aam aad pop push jns cmp sub pop sub adc jle decl pop xor cmc call out cli add rcrb aas mov push add hlt (bad) push lods pop int fsubrp inc jp cld loop cmpsb add enter (bad) or test ja out ret and jl sub data16 dec fdivrl (bad) shll push outsb addr16 jne mov (bad) fstps jp imul jl int and mov repnz add repnz mov addr16 out in sbb imul outsb pop loope adcl test loopne push xor ds sbb scas sahf shld xchg xchg or and out push lock shrb jbe sarl das pop dec xor (bad) jb mov (bad) dec sub add dec movsl dec mov sub outsl (bad) mov push insb std out popa into xlat jp (bad) pusha movb and jne out sarb cmp push jmp inc cmp shrb outsb inc outsb mov (bad) push or das fidiv fs inc xor repz loope shrb pusha mov les jecxz jle pusha mov std sbb cmp fdivp std lahf add dec jle ss push or pop xor mov out xchg mov outsl push data16 mov mov pop xchg or popf add push (bad) jp aad jg pop xor pop sbb (bad) xor cmc cmpsl shlb insb repnz addr16 xor cs bound pop jbe or lock xor pop gs mov mov inc push insl mov outsb frstor into pop stos mov or cmp xchg std fcomps mov or dec loope push adc sbb das lods or sahf mov sub sti fistpll sbb dec js lret sub aad xlat add stos lods loope dec inc push fisubl sbb loopne (bad) std lods aaa ja xchg and push loopne rcrb pop sbb mov lcall pop cs xchg out pop les push (bad) out pop mov loopne fisubrl adc into and adc cmp popa push cmpsb push mov add pop cmpsb addr16 and lret sub jmp js inc sbb loopne stos push and outsl aad call out out fstpl jb ss xchg lahf add pop push push xchg mov (bad) notl lods mov push repz mov dec cld pop ljmp clc xchg out pusha ljmp into movsb jp adc (bad) hlt sub iret sub test lret test (bad) pop push je sbb sarl dec scas fwait das sbb dec (bad) outsl shrw jecxz cli es mul xchg daa ss push xchg lcall or out dec stc adc into and jb scas (bad) outsl lods pop or data16 xchg sub cwtl dec cltd mov inc dec mov arpl orl adc mov stos adc inc jmp mov jg data16 addl inc std mov inc add add pop pop push scas inc daa push sbbl add js and (bad) repnz repnz jmp fisttp and pusha std call add push pop cmp leave movsl lret bswap and ss and pop dec js add and jge sbb mov imul xchg fsubrl ficompl pop out mov divb ljmp fdivrl icebp (bad) scas or js call pop stos and mov push in sti rolb outsl xchg mov cmpw ror add xor stc test (bad) mov fsub jp out ss rcrb jnp adc imul (bad) add push lret mov push cmp js,pn inc pop ds pop fs cli dec mov xchg out cs dec adc test xlat dec fs outsl add int3 loop (bad) push xlat sub outsl inc rcl push (bad) inc mov sbb sahf ja push call hlt add mov lret cmp psllw jae cli dec popf (bad) xor push enter sbb test fwait (bad) ss adc jnp aas int shrl or cmpsb fiadd dec mov add push ja shll into or mov push je and and jnp hlt cs jmp mov movsl ds mov sti push and cli mov xchg push loope pop jb sbb xchg inc lcall out setg outsb xchg repnz aam jns sahf pusha xchg clc into (bad) repz dec lcall (bad) xor mov rcr jg mov rolb int mov xchg mov or cmp inc stos sahf fisubr loope mov out ret xchg push mov push out sub out xchg cmpsb mov adc cld scas out dec ds pop les movsl popa xchg out imul xchg lock scas (bad) lahf xor orl add xorl sbb sahf out inc inc push test and dec roll dec dec notl stc sbb into mov int mov push ss stc fs ret push add icebp pop pop shl mov (bad) call or dec xor aad cmpsl adc pop pusha pop ret pop pop shll fisttp pop repnz fildll popf mov lahf in add push mov ljmp mov jecxz ds in pushf lock ret into jecxz jecxz jecxz jns xchg loopne add into or sbb or mov mov lret fistl xchg imul mov push lcall popa sub mov std sbb imul pop or lock pop push add mov xchg xor into lahf or lock das dec test pushf cmp cmp push imul lahf xchg lcall push inc cmp ss xchg sbb (bad) into push repz (bad) clc (bad) cmp mov fs sahf jp xlat js stc jo sbb xor pop ds add pop dec dec movb ret mov loop pusha sahf pop lea push rcll lret sub mov mov push cltd mov fisubr sub dec test lret (bad) mov fs xchg cmp test push inc xlat xlat fwait xor (bad) lret (bad) push push mov xchg addl (bad) (bad) roll jmp (bad) jo (bad) xor rcrb (bad) outsl test or push mov mov sub sahf push (bad) (bad) repnz or or je movsb xor inc test push sub notb xchg stos add xchg cli sub js arpl jge stc dec rcrl pop sbb ds or mul sub add fistpll push fisttp mov pop (bad) cmp or enter add ret push adc sub clc xchg lcall lea mov xchg (bad) pop daa add jle cmc dec std movb sub mov das and sbb pop mov out (bad) fwait pop sahf (bad) (bad) mov sbb outsl xchg cmp cld or xchg (bad) push loopne fiadd stos push add stos push pop cmp jle (bad) addr16 leave dec mov xor add icebp mov lret push and inc mov mov xchg mov aaa es icebp pop cmp dec repz hlt cld jle jecxz daa lret push xor xchg stos or jmp out test icebp je cmp mov mov out ds int sbb xchg data16 ficompl cmp inc dec fdivs out fcoml leave adc in clc outsl sahf cmp (bad) and js xchg icebp mov mov mov mov das rcll call pop mov pop negb lahf rcrb and aas sbb cs pop pop into rolb mov loopne lret subb add jle inc pop cmp xor (bad) jbe fcoms lret xor and xor cmp jp mov push das pop repz fimul mov (bad) dec push call add add bound cmp pop loopne xor test adc fucomi stos sahf mov sub nop out cs mov inc and cmp mov lds jo push xchg push push mov pop cmp sub sub jbe nop hlt xorl or (bad) mov xor mov jmp push inc jmp ljmp icebp push dec arpl nopl and dec fbld lahf repz jno mov push imulb or mov push pop cmp mov iret pop rclb int3 outsl xchg lock lcall adc mov xor add js stos xchg xchg jmp mov enter dec lret in lcall dec insl movsl decl add mov jns and or mov pusha cli cmp lret xchg cmovbe push adc xor push or pop imul imul and ds adc inc push cmp add adc mov jle (bad) mov mov adc sbb sub pop dec add mov mov lret jge push js jecxz push inc ds out lock push xchg fnsave in shrb (bad) popa push jbe cmp cmp test mov outsl sbb lock or int fisubrl jns (bad) dec mov fs dec lret sahf adc fmuls dec sbb push xchg add xchg ss out mov pop lcall popf clc ljmp xchg lcall cmpsl add sub pop pop fstp push cmp and out and add (bad) ljmp js inc xlat scas subl incl push mov incl xor mov cmpsb out out outsl fwait xchg pop pop push sti xor cmpsb add sahf adc pop test add sub xchg mov add into aas xor push push jb dec cld loopne cli cbtw into sbb les aaa test xor mov cmp js add add insl xchg xchg sahf mov imul pop ret out xchg push (bad) dec mov mov or jg mov sub lds rcrb subl hlt es xchg loopne sahf jle xchg xchg mov shrb dec les or adc (bad) cmp push out add js push inc out pop test shr sub inc pop dec mov sub addl mov sarb mov adc sbb or int push into push sbb mov mov cmp xor lret add push sahf sub and mov fstpt and lods lods inc inc add mov insb push push mov sbb adc jnp ret iret loop sahf scas outsb or insl into inc or jge mov jge iret jb call pop pop adc sbb push int xchg ret lods iret fiaddl mov lea jo lock add ret mov adc aad lods or pop rcrl push sarl push xchg pop sahf daa (bad) fwait lods push inc mov out add subl aas mov and adc inc push mov push addr16 stos ljmp inc or jbe xchg repnz dec mov dec ror stos sub push pop inc cmp add popa add ds loop,pt (bad) mov mov add xor adc jb and sahf push pop sbb push ljmp add pop sahf add sub adc iret jae cmp jae push inc fcomp ret cmp dec ljmp xchg decl test inc pop idivb add pusha js xor clc dec sub icebp outsl outsb nop rorl jnp pop add fwait imul and pop test inc imul add xchg pop sti push sub popa orl data16 leave lahf cmp (bad) xchg mov mov adc (bad) or rcr sub mul sbb add dec cmp ret incl repnz lea inc cmp add daa aas and shr sub (bad) cmp mov mov xor stos out andl push es add fidivr dec adc jl movsl daa into adc dec call or out (bad) mov push add mov jl add mov xor add or cmpsb add push jg fistpll ja lds or push dec dec or (bad) leave jbe jnp cmp test xchg lcall outsb mov dec sub pop scas and dec icebp pop push bnd push sub (bad) scas jo rcll (bad) addr16 pop mov xor sbb sbb loopne dec aaa pop loop and pop aas push (bad) iret or pop adc cmp pop ja mov mov sub pop add jnp fidivr sbb outsl repnz and (bad) mov dec dec cli and mov pop lret fidiv dec mov push bound or sbbl mov inc shrl push dec js rolb push xor lock addr16 or fwait or lahf add adc ret sti jp test adc inc add lods sarl test push mov aaa out data16 repnz dec add fs mov and outsb inc sbb rorb ret cli lods xlat bound clc popa inc loop xchg or rolb (bad) jno inc add mov add inc push popl ds ret push sub mov inc out push add fcoms mov (bad) push mov aaa mov mov movsb or fstpt mulb jno mov gs xchg shrb inc inc out out push outsb push cmp jnp inc outsl push push or xchg push push lock test inc (bad) sahf push mov out hlt xor push sti lock jns fsubp je lahf xchg or das movl std ret cs out ret out pop shll icebp aaa mov push hlt push ss mov outsb insl aas loop dec lret sahf push xchg xor dec mov sahf aad out imul mov mov stc sbb ret orl lahf enter js or mov mov inc jo inc cmc jbe scas jle ret and pusha xchg pop cwtl push idivb insl cmp adc (bad) notb ret ja outsl sub notb outsb leave test shlb gs push push (bad) out mov in es mov in cmc call scas or test inc dec incb or loope push sbb notb in subl jo incl xchg into sub out add inc mov xchg xor lods mov mov stos sar and (bad) push mov inc mov (bad) in movsb or rol stos js inc aas int cmpsb inc ret add inc fsubl xor repnz pop ljmp pop add pusha push fucomi mov xor inc xchg inc clc rcr fisubr mov adc add dec (bad) int3 iret adc cmpsl outsb sbb cmpsb adc xor mov sub enter pop call jmp in jmp xor incl or sbb jp out (bad) mov js sahf pop push inc (bad) jle clc cmp pop mov (bad) jno sub incb or lahf jecxz mov iret add inc mov sub inc les push cs (bad) cmp incb fidiv cmp or mov sarl xor out nop inc mov and push sbb clc cmpsb adc cmp stos add mov mov call xchg push sarb int pop outsl es std xchg xor sub add dec js jp xchg push dec lock es sbb cmpsl jp push in add (bad) dec dec test dec or and gs (bad) decl add pop sbb pop ucomiss call pop xor ret inc scas dec cmp fmull dec xor cmp (bad) xor jmp popa (bad) notb fwait outsl (bad) mov sub sub dec sysret sub cli add ss dec push bound out dec (bad) out xchg add out (bad) cmpsl (bad) (bad) add mov (bad) xchg and cmpsl test push lret lret and addr16 pop xchg jge mov cltd push jecxz and mov pop pushf xchg call inc mov jns les cmp imul cld sub mov jae pop ss cmp push or loopne pop sahf ret sub fcmovnb imul xchg mov std cmp push repnz ud2 xor scas sbb iret pusha or lock ljmp js mov and movsl push dec outsl dec out dec mov imul push outsb shll incl les pop loopne or les add mov push sub jb lcall dec adc ret push fsubrp xor loop jp (bad) push mov sbb mov sahf fiaddl loopne ljmp mov imul loope in and mov pop mul add pop test das repz enter mov mov clc loope ljmp sub ljmp adc ja les (bad) xlat adc or ficoml test lock lcall and (bad) xchg pushl mov cmc out enter cmp or mov push push mov jo aam push dec jbe insl loopne cmp cmpsb loopne shrl fdiv mov jb dec push aas shrb idiv scas mov jl xor pop and mov pop out inc fisubrl mov jb jb push push jns (bad) jae mov clc xor mov mov lea lret xchg stos mov jb ja xchg stos lods lods mov adc fisubr sub push (bad) int3 cmp adc aad push add lahf jle js or adc mov mov gs pop pop inc inc lods add xor cmp orb repz or or outsb rolb sahf mov pop inc fdivrs jbe jae pop sahf jg push push xchg dec mov cs sahf fidivr dec and dec dec sub adc xchg fdivrs (bad) inc (bad) mov pop mov xchg icebp mov xor cltd jnp or loope mov push cmp xor push jp mov or out cs cs dec mov leave jb das lods out ljmp inc or push mov stos scas rcrl ljmp aad movb lahf scas stos add and mov dec loop popaw inc sub xchg cmpl enter sbb (bad) pop in jp mov mov add inc and scas mov jle inc jne mov mov xchg push cs mov inc mov or inc mov inc ret xor mov pop aas and adc lahf arpl jb adc add aam (bad) cmpsb sub stc orl xor repz lods sbb jne sbb out pop decb sbb lret ja xor (bad) test jb pop std sub rcrl ret (bad) mov addl inc rolb jnp adc xchg dec jp js cs pop fwait inc pop and jg imul es jmp jbe push pusha test ds pop scas aaa adc and pop sbb sub mov cmp xchg jp in out int3 cmp dec repz ljmp out ss and cmpsl or add add iret (bad) notb les repz sti (bad) xchg icebp icebp dec mov add jg in ss and cmp add or (bad) dec jecxz subl in xchg inc sarb mov jns lock ljmp or sbb lds jb push leave aaa std xor dec mov push push enter gs mov sbb adc hlt add decl pop sub imull cli mov push jmp jecxz arpl rolb pause dec push cmpsl xor addr16 and push (bad) in inc (bad) fcomip dec sbb into sarl and push pop out lods pop or (bad) xor (bad) mov or push adc gs jns and out (bad) cs xlat test inc js xchg fisttp aaa or xchg inc loopne (bad) das and incl fimull xor (bad) fidivl adc add pop jnp xor jns jecxz push lods bound popa and and pop push into mov jle pop scas inc fimull lock inc jg xchg cmp push outsl ljmp and jg inc lods xchg and ljmp jg (bad) pushf nop push jb das (bad) push pop pop xchg pop adc lods mov test jecxz fist (bad) into xor enter js ja daa lahf sar hlt and inc fdivrs pop ds adc adc add push or xchg (bad) push xchg xchg xchg mov push loop mov out push xchg dec push cmp push dec ds sub decl jns loop sub cmp adc in inc repz es fisubrl (bad) ss insl lea mov int fldt sub (bad) jae add pop ret lahf add dec push test sbb les popl (bad) push scas pop sahf cli loop xchg add sub push in (bad) loopne or loop cli or cmp xchg push xor cmp xor mov inc ret (bad) hlt fwait stos mov mov (bad) push and je incb in sub cmpl outsl push stos add loopne adc push fidivrl pop jmp add push sub push sub push les ret push dec js xchg hlt es insb xchg fcmovbe test (bad) (bad) xchg popa (bad) mov in inc push je mov mov mov push loope pop mov add pop cmp out add imul jns ds (bad) add inc cmp outsl push or jl clc xchg bound pop and shl pop lcall mov push and xchg pop sub (bad) adc scas cmp push sti or mov sbb add sub xchg stos pop pushf popf outsl jge paddd xor mov aas or xchg out cli jb (bad) loop test imul push fimul adc or icebp out pop pop (bad) sub xor sbb cmp add xchg popf repnz and mov sbb cmp ret std dec testl jmp cltd stos lret dec (bad) jmp (bad) loopne es addr16 lock andb mov jbe xchg xor cmpsl pop aas adc adc add sub cmpsb out xor lock (bad) in shrb fs cli xor xor outsb and inc pop inc jg push leave jl add jmp sub xchg add loop,pt sub xor addb movsl out push scas xchg adc test adc test or mov outsb data16 lock pop add adc sahf push xchg fmuls mov mov or cmp das popa aas cmpsb shl lret xor fwait scas pop sub add sbb in stc sarl cmp cmpsb outsl xchg lock pcmpgtd int3 mov stos data16 xor mov and scas arpl dec stos mov imul fidivl dec rcrb dec out test push push inc fstpl and lock inc out outsl ljmp or and test push lahf lock imul inc shl and cmpsb outsb xchg jg xchg mov out mov or mov jo push xor jbe add popl cmp movsl push out pop imul paddq pop stc cmp cld mov mov dec ret lock xchg push cmpsb push jp cmp rorb aas add data16 push out push pop shrl jne bound push cmpsb jecxz or cmpsl sub test (bad) inc scas inc dec sti rcrl fmulp dec les xchg jp sub sbb scas ret pop (bad) scas ret frstor lock xchg lcall or cmc jl and into movsl aas das aas cmp pop divps mov shrb mov sahf push decl aad push mov lahf out inc inc scas xchg repz pushaw decb add (bad) fsubrs imul mov xlat (bad) push jle scas add pop push add xchg inc lahf fisub cmp scas in (bad) cld imul data16 into in push fidivl mov mov mov outsb daa mov and mov pop or aad je mov out aaa inc rcrl ret out pop out jle loop push xchg ss fwait cli cmp dec (bad) dec (bad) fsubs idivl scas out cmpsb outsl push adc shll gs fsubrl pop inc mov mov clc pop stos out pop je outsb out in add rorl out inc fstpt cmp insl xchg xchg mov xchg mov mov and jp outsl inc add add push sar iret inc in inc (bad) outsb cmpsb xlat push lea cmpsb out push out aas xchg inc imul dec int3 into (bad) mov scas mov mov imul or jnp out or mov (bad) inc mov adc xchg mov and iret dec sbbl fidivr outsl mov jns ss add cmpsb imul dec xchg cwtl js mov daa mov aas sbb inc push sbb mov pop subb sbb fwait sbb push lret lock leave xor (bad) lcall les loop int3 roll cld fist insl mov jno mov adc adc loop cltd (bad) idivb mov push fsubs ljmp xchg (bad) dec mov fs push cmp (bad) pop pop int fucomip mov pop add sub jne out out (bad) cmp lods mov cmpsl mov not jbe sbbl pop pop sahf cs jecxz leave rorl sahf out inc cmp xchg scas fbld mov pop sbb xchg or mov ss es add fiaddl out jmp add cs into xchg mov mov stos jns pop sub xor imulb or incl adc add add dec adc cmp or sahf lock mov inc addr16 pop mov jno xor into jmp pop stc jl in xchg (bad) cmp mov cld adc (bad) mov (bad) or adc lret xchg xchg sbb fmulp add fildll or arpl sbb mov xchg enter push inc insl ss outsl popf mov aas outsl adc lcall rcr jle xor inc js dec nop rol xor cmp add mov xchg out pop xchg stos add push rcr cmp clc test mul jae or test ret xchg jbe clc pop (bad) fwait xor outsl xchg jle rcll (bad) and rcrl xchg sub leave aas leave push sub sahf lret add shrl push call mov clc and (bad) cli inc ficomp fwait icebp cwtl test mov loop mov xchg inc mov aad xchg ja pop adc outsl jae cmp dec xlat scas out push out sub jbe (bad) es mov inc and iret scas (bad) addr16 stos aas sarl sbb rcl ljmp add cmp ljmp xchg push cmp push sub subl ljmp jecxz cli iret je icebp sub es xor ret pop mov jp cmpsb push iret lcall pushl mov mov ss jmp push (bad) lret data16 pop xor or aam and xor lret add (bad) sbb mov jnp cmpsl xchg dec loop imul sahf fisttp les ficomp test arpl sbbl push (bad) pop (bad) (bad) sub jle repnz ss push mov mov notb stos fist pop pusha pusha repz and pop popa das out es dec adc or decl or stos (bad) mov dec imul jno push or das ss inc in sbb xor push push add and jo sarl xor (bad) sbb jne push fsubrl and adc ds mov inc and sbb push test push (bad) mov ret adc jb pop mov mov movsb and xor test push rcrb iret or dec loopne (bad) lock and inc aaa mov mov outsl sub push xor idivl xchg fdiv add rorl ljmp sub lahf sahf adc imul loop pop jb jnp dec jbe (bad) adc push jp fisubl rolb ret jl jbe add hlt mov pop mov xor pop jp and adc not (bad) jmp sarb subb ret and sbb mov in adc cmp data16 xchg xor cmc (bad) cmp iret adc (bad) lods out or clc daa or arpl outsb adc call hlt cwtl lret inc cmpsl push mov inc dec das (bad) mov test adc dec pushf and jecxz xchg add pop loopne add cmp add pop mov lret insb jb test pop into xchg into (bad) add add (bad) (bad) mov push push xchg outsl insb and aam loope and ljmp rclb lds pop push addr16 add jmp icebp (bad) dec push ds push mov rorb js inc xlat mov or xchg ja nop ja xlat fidivrl pop mov mov adc psubq push add add fst adc data16 and push ret jb push test scas ljmp push xor sti dec or lds mov rol dec (bad) lahf jno rorb cmp es dec jae push (bad) fwait mov out mov push push jmp cmp jmp add push push sarb subb push inc icebp out aaa (bad) fs daa mov (bad) push in jo lahf cs leave and cld sbb fwait pop stc dec sahf out mov out add ret leave push (bad) push or pop mov gs (bad) pop and mov test dec aas mov movsl jle ss add test cmp sbb ret push adc add sbb mov mov mov dec push inc std push ljmp ds inc cmpsl adcb pop inc push jmp pop lret and add (bad) in not aad (bad) (bad) mov mov inc cs fucomi hlt cmp jo out lcall enter ds (bad) int3 cld ret nop pop xchg xchg (bad) (bad) lods cmpsl push ss xor push pop iret mov lock call nop in stos iret lods das mov push xor addl cs pop and aas stos inc push mov and cmpsl push or push pop lret (bad) jg cmpsb xchg cli or lret push cli or scas aad mov pop das mov and ds cmp sbb push push sub jmp gs jg mov notb or ret xchg adc cli pop cmp scas pop push dec and push je loop mov (bad) call scas pop add jb sahf xchg loopne scas cmpsb push insl out xchg jne test out cmp inc xchg push xchg jg xchg mov and push inc jle out clc fldl cmp std orl jg push mov mov out xor pop fs sbb mov or xchg lods and cli and jg outsb adc pop dec aaa xor adc pop jecxz nop lock bound mov inc lds cli mov pushf fcmovnb mov inc jb mov ds outsl sub jg dec fild xchg loopne test push and (bad) pop jp push int3 or arpl sbb xlat sbb mov sub jmp xchg add inc dec inc sub fcmovb test and cmp sbb mov sbb jg push data16 or or fbld (bad) adc add fwait test push xor rcrb cs out push dec movsb test lods pop outsl lods jno scas adc push lea pop mov mov and out and push clc add cmp clc fs add cmp jg je fbstp jbe sub cmp xor addr16 mov repz (bad) xchg and out shll add sahf xchg lea jmp arpl mov (bad) pop les jbe outsb pop jge loope add mov (bad) sbb or pop jb negl pop dec pop test sbbb mov add lock out cli or imul xor pop loop push push dec enter inc js ljmp add in test cli inc sbb fs mov nop jmp leave dec inc xchg pop lock pushf sub loopne or jbe cmpsl (bad) out mov leave inc lods mov dec jle test dec inc inc scas lret and cmp jmp jle xchg dec ja sub insl push ss and arpl jbe into adc mov xor sub cld or js out mov jg mov add mov adc sub push ss sub push (bad) add push add and addr16 or arpl fistp repz pop and pop into outsl out xchg dec shlb jmp mov push sbb dec mov mov ljmp jbe dec fwait imul rorb push or cli fistl ret aaa inc adc add hlt lahf clc mov add mov xor notb add mov push std add push cmpsb addb inc mov lret dec rolb push adc dec bound cli rcl cs daa jle lret pop out push mov sarb dec into cmpsl mov inc or pop or cmp jbe push add imul xchg popf pop inc rol rorl outsl sub and xchg add xor mov clc or stos mov mov rcrl push pop sbb and ds call jp cld daa cmc out addr16 imul sbbb bound out add es ds adc sub cmpl pusha imul icebp lret into sarb sub inc sub es (bad) ljmp add push loope pusha sbbb es outsl outsl mov push ret shrb dec inc mov fs clc push fsubrs aas xor cltd call outsl jecxz (bad) push ss rorl lods and push cli inc test aas out cmp outsb jmp and (bad) dec sbb jle mov inc ret inc add stos add (bad) sub mov cltd sub jbe add loope (bad) je,pn sbb orb or loopne pusha mov jbe mov inc inc add sub outsl and mov in xchg push jnp push adc inc fidivr (bad) int ds lock push (bad) add or (bad) and inc adc or aas lar cmp rol sbb cmpsb rcrb fcom mov jnp xchg ss dec xor scas and add xor xchg faddp jb iret lret in jecxz jb outsl and pusha das inc dec push ss xchg xor outsb jns enter dec mov and iret adc (bad) mov pop ljmp loop sbb jmp pop in sub nop dec mov mov call test lods rcll jp scas es repz dec je add pop xor or mov out dec dec pop js pusha mov (bad) and ljmp push mov pop pop push sbb movsl out dec pop push xchg (bad) ficom jno loope repz (bad) jo addr16 mov push cli call push sub pop movsb sbb jmp push inc js es inc es jmpw xchg call or out fwait ret dec mov inc in xchg test insl enter inc push adc sbb outsl push repz jb push xor push out push pop aam pop dec scas ror adc and je cmp mov outsl es iret mov and or aad xor lods mov ljmp pop or repz add mov js popa push push mov das loop push ds mov adc or ret pop cs pop mov xor jl sub inc aam xchg hlt ljmp das (bad) pop orb mov iret repnz mov add insb ss out add mov sbb cs rol (bad) and in jns mov inc pop je hlt mov or lock clc xchg mov data16 inc sbb mov sub or cli setbe inc jmp or jecxz negl cmpsb xor mov into ljmp dec lret out fidiv idivb test pop fs pop xor inc (bad) sahf rorl (bad) daa es sub inc in ss clc dec out pop pop repnz roll push into mov aam and push pop push ret and jmp or sahf dec mov xchg jg inc popa bsf stos sub cmpsl and push cmp pop xor (bad) xor sub outsl fimul ret cmp cmc add addr16 cwtl inc mov fcmove xchg xor decb loop adc inc ret aaa clc cs repz or and sub add cli jbe aaa pop jle adc loop jg mov xor jl push rcrb pop aas sbb jle rcrb dec call push sbb pop je aam jl xchg or dec mov or cs ret dec mov mov xchg dec test adc stc or xchg in lret addr16 cmp out and cmc dec inc sbb into lods push inc xchg icebp ret mov popa inc push pushf into mov jge imul jmp pop xor jo mov insb push dec mov inc dec inc xchg and and xchg out fwait add xchg sbb pop push je jle or std int adc (bad) jnp jo data16 or loope xor cmp ljmp dec orl mov mov add sub or std xchg push lock ss popf or pop orl and ds jmp cmpb pop outsl mov inc xchg dec mov mov fiadd xor movsl xchg adc sbb jmp push xorl (bad) jae dec sub je sub (bad) (bad) xchg mov xor push js (bad) xor out sar dec fwait jmp insl push dec inc rcll aaa cmc xor mov iret mov cmp fcmove movsl add pop inc movsb jp inc fwait das xchg sti push jle xchg out data16 pop add cmpsb inc push sbbb and mov (bad) ret jp shr fld lahf es sahf cmpsl mov sbb imul cmp and cmpsl (bad) cs (bad) mov mov inc lea xchg xor pop mov adc sub js addr16 mov pop out ljmp push inc aas sbb aas cmp out mov push loope push lock bswap cs lret sti repz cmp incb iret lods insl lahf sti xchg fild int out rcrl mov popl mov dec sub lahf inc pop ja outsl pop mov jbe or std add int3 (bad) jbe push jle add cmpsl mov (bad) cmpsb push iret pop xor mov stos out idivb in int pusha ror sub inc cmpsb sbb sbb mov rcrb lcall testb imul mov mov pop stos push scas push pop inc jl scas xorl push out mov shrl inc inc ljmp int dec push bound movsb jnp out or sbb rcll mov add inc stos add dec cltd loop push or out sahf out adc push out xor lahf popa sahf aam cmpsb fwait lcall xor ror xor inc js jae adc jle test jno or xchg into roll cli push in push mov sbb jbe jle aas aam sub pop sbb outsl test pop jl bswap xabort jns outsb stos push inc or es test pop int rolb rcll fnstsw into inc repz push mov inc sbb pop push mov push add cmp pusha push icebp inc jo ljmp adc add cmpsb push mov push outsl pop push mov push outsb pop add or ret pop or and cmp xor xchg mov out aaa (bad) inc hlt stos mov inc cltd rcrl aas pop and pushf pop movswl adc insl xchg inc outsb add push sub andl aam sub les or and faddl ret iret shr gs push incl lods sbb cmp loop sahf inc mov mov sahf in xchg jp push dec adc xor pop dec js xorl lcall jle or leave jmp loop xor cli cs lock outsb and xor adc push les js push xlat xor jp push add pop aaa jbe insl (bad) ss lret ljmp push add cmpsl push mov xchg sarb cmc or ret mov mov movsb movb add clc sti jb (bad) out cmpsb es inc pop outsb ret dec ret adc jg and setle (bad) mov jbe,pn mov cli jo mov pop loopne test nop sbbb ret movl push dec lret mov mov dec push and xor inc pop test dec (bad) jmp xchg sbb subl pop test mov sub addl es lret xor mov fimul pop stos cmp xchg rclb rclb insl loop lock ja jle aas sub iret cmpsl push xor lcall negl dec scas ss mov or insl bound mov push add div mov jmp gs xor ds push data16 sbb scas push (bad) out adc dec xchg add or or test jg decl push push xlat insb lcall bound loop jbe aad push push prefetch test lods mov pop jl and dec imulb and stos sub jo (bad) repnz jmp add mov pop push mov out pop inc sub pop dec ljmp subb cli or jo mov dec sti idiv pop mul iret xchg sbb cmpsl mov mov repz leave inc loop (bad) jg pop push call scas add das stos add lods (bad) sbb add sub (bad) (bad) fisttpl pop mov test push ret xor sbb pop call adc negb mov loop pop add jo push divb jle xor int and decb jbe imul (bad) sub or ret xchg addr16 hlt cs mov add sub rorb pop arpl xor repnz xchg xchg ds push dec xchg push jmp fidivl ss add je pop sub push jmp mov xchg into jmp icebp mov mov ficom xorl xchg sub fimul and jl jnp pop ds shrl jbe shrl jmp mov jl test stos sbb out (bad) sbb mov xor push arpl int3 cmp addr16 cli pop jecxz cmc mov adc push adc add pop (bad) ds mov loope jbe in cli push out push repnz jmp data16 sub or stos cmc negl dec and enter ljmp lods stc inc fs or mov popa popa push lahf push stos push push pop mov push out out push cli pushf jle repz add push mov adc clc pop js call adc daa mov lret xchg les jae roll loop cmpsb popf inc (bad) in sbb scas sbb test pop dec push pop bswap cli cmp out fild fwait mov stos cwtl or mov scas sar pushl adc push add push push push fs outsb outsb push xchg out xlat and outsl cmp aad push add mov xchg push pop das inc xchg repz js imulb test xor xchg mov or cmpsb sbb inc mov sbb pop into ljmp in leave lds aas lods pop sbbl mov popa cmp mov sub fdivr cwtl rcr xchg leave lods scas inc rcr cmpsb ret rol inc cmpsl outsb aaa xchg add jns mov stos loope mov xor sbb scas push dec aam pushf mov call push pop push aas insb jle lods mov mov adc mov mov push es push out fbstp cmp inc shll xchg push lahf or test scas mov mov dec inc sub (bad) (bad) fisubl sub jle jbe xor jae ret fsts popa mov or dec andl or mov repnz mov cmpsb xchg mov fsin lods push push (bad) into insl out call ret test clc cmp nop cli andl mov ds imull mov push fildll xor cmp xor sub repnz add icebp scas adc (bad) lret pop fsts add xchg mov mov sbb push inc and pop lock sub pop ja mov push insb bound jle lods sub xchg jecxz adc push (bad) or add cmc or cmpsl and cmp add xor ret cld push popf cs fisubrl mov jnp loope cmpsl and cli iret jle std lahf insl sub out sbb loope js mov inc sbb and test and shlb icebp bts lret rclb mov sub inc fistpl push push jns into sub xor sbb and test pop test lahf cmp out push mov movsbl add inc and cmp ljmp pop or ret fisubl jp and mov fsubrl xchg push fadds or mov jbe inc outsl (bad) mov sbb stos cmp push pop loope pusha int add sbb shrb sub push loope inc out sarb jle (bad) (bad) mov inc cmp das out jb pusha add lods push pop pop dec dec stos repnz ret insl test (bad) (bad) push lods js fldcw lods jb fs stc inc mulb xor inc lea idiv (bad) pushl mov lret frstor dec fstl xchg dec (bad) lcall xchg push ret xchg xor xchg add or pop das inc inc inc pop sub mov mov mov mov ret rorb (bad) jbe mov push inc bound push jmp dec sub xor add dec inc dec ret push or adc jle mov jle mov push movb cli aas sahf rol inc xor fiadd jge es mov fcmove ror lcall sub outsb outsl fsubrl aaa ds test (bad) movsb push mov outsb mov cld or dec xchg aad mov dec xchg into pop outsl sahf mov jl mov xchg cmp (bad) ljmp lods and push jbe call push ss push addl sti inc xchg nop push lret or and pop push cmp mov outsl mov dec aad inc sarb cmp push out aam push mov insb push jnp sbb sbb xor add icebp mov lahf into push repz jbe iret jp sarb (bad) cld cmp loop iret mov mov mov adc or or enter sub push (bad) jo mov and (bad) lahf pop out xor or mov mov add xor inc mov dec or test jp dec aam push hlt out push scas cmp add or decl or mov mov cmp dec in outsb push and (bad) pop dec lcall mov add adc (bad) arpl mov subl sbb or fs inc rcrl test ret jb outsl inc sub pop sbb out das std and fcmovbe fcomi jnp inc or push ret addl xchg jmp pop das inc in xchg or aaa shrb xchg inc lock or push push add ret stc lahf outsl inc jne xor pop sahf or mov add adc jp or or into leave jb sub movsl and push data16 cmpsl or push mov rolb andl mov inc rolb adc outsl push lock rolb and (bad) add sub ret rorb int bound stos push rolb xor jnp insb rclb jg fdivrp mov and cli cmovnp adc add jb bound rcrl (bad) sarl xchg test fstl sub cmc fidivr aas xchg mov xor icebp dec mov into xor mov loop or fwait outsl cli jmp push (bad) arpl jmp and sub mov (bad) push mov and ret mov and jnp inc mov jp divl pop adc push or inc and pop add cmp (bad) add aam mov rcpps (bad) bound ret push loope hlt xor jo in xchg ret scas mov negb add xor inc add idivb popf dec int3 lret pop xchg pop cmp pushl inc inc dec pop jp rol pop sbb xor cmp add dec shll (bad) jns,pt jecxz jle loop xchg (bad) aaa push fs push fisttpll lahf dec cmp into jne push push xchg aad or adc jno enter or (bad) sbb loope xor sbb inc rcl push test mov and sahf inc pop dec sub es dec loop inc pop inc adc mov adc cmc (bad) ja arpl js ss ds pop mov or push xchg in cmpl in mov mov fwait adc fdivrl (bad) and xchg rorb pop sarb mov cmp mov loopne sub jle clc and outsl mov popa dec es aad idivl mov icebp or outsl cmpsl mov mov or push pop push es or mov jp fldl jle cmpsb fldcw jb rcll or ss aas and dec cmp mov mov mov out ret outsb cmpsl mov aad testb vrsqrtps add and out rorl (bad) add ja inc sbb inc loope mov sbb mov push fidivl testb inc cmpsb (bad) jg xchg dec add dec jbe dec into mov test push movhps pusha xchg mov add mov outsl mov xchg mov fidiv push jo out cmpsb hlt or test cli and push xor shlb push xchg adc jle push or hlt mov add mov stos and push push push repz stos (bad) popl es loope mov sarl and jmp xor sbb push (bad) xchg mov xchg insl push fwait sbb mov xchg out fwait sbb outsb (bad) xchg and aaa (bad) push mov fiadd inc pusha insb mov pop xlat jb pop sahf (bad) dec or sbb push sub insl imul xchg add or (bad) pop aaa and insl ret jp mov fistpll and ucomiss fwait out data16 jecxz sub insb shl ja adc mov pop add push and fimul mov loope shll pop repz add mov xchg nop push sub mov push cmp shll jle or xchg inc push stos rorb add ss mov mov fiaddl scas jl jmp (bad) mov addr16 pusha cmp ljmp mov popa ret in adc clc ds out out add aad jbe cmp sbb int3 cld into in or ficompl lea out xor mov das add lds jg xor jge inc jmp jl xor mov push mov inc decl cmc push fisttpl cmp cld mov movsb cwtl and jecxz out adc xchg add cmc dec les push orl cmp out xchg ucomiss testb loope jb push sub decb and dec lahf mov movsl outsb dec xor jp dec add ja add sub (bad) pop stos cmp add push jbe stos retw inc push scas lahf jmp mov jbe sahf jg sar jg jno mov and pop dec mov cli es lahf movsl out mov out mov out (bad) mov add and (bad) fild mov fnstsw jp pop ret adc imul loop out sub aam add call (bad) into into (bad) (bad) sbb pop mov shrb mov and fisub pop sbb fimul test mov mov add mov push (bad) push xchg add dec add ja inc pop cmpsb cli aas addb push sbb push rcrb sti mov cli inc fcompl add bound mov push daa push scas dec sbb fist dec ds add push adc xchg fwait mov divb test fcoml mulb xor stos movsl js push into and sti pop and sub xchg inc out xchg (bad) fprem aaa push ss push lahf mov testl xchg sbb icebp rclb sub inc fldt pop jbe inc adc loope clc arpl decb cmp sub inc cmp addr16 out pusha cld push add es sbbl pop movsb push arpl push (bad) fldcw push lock popa adc cmp add (bad) inc dec in clc or pop push outsb out notl (bad) sub cld cmp xchg push daa dec outsb xchg mov pop dec cmp mulb test jge or lret (bad) and pop pop lock jo sub cwtl aaa jbe mov movsl dec pop mov adc insb mov sub ret lds sub (bad) mov pop test lret js cltd adc and lahf ficomp push pop call sbb jmp test (bad) adc iret pop (bad) push xchg mov call sbb (bad) rclb jmp bound out pop add push push outsl mov repnz and adc mov lahf cs mov push dec dec add push adcb cmp xor mov popa adc sub icebp das add dec outsb ficomp aaa jp pop push mov mov jp scas mov pop scas rcrb iret mov mov mov inc push out push ss popa sub mov push in (bad) adc push mov xchg jg cmp inc imul daa outsb push sahf pop popf (bad) xchg mov sub pop test add pop arpl mov cmp xchg aas (bad) inc jp cmpsb jp test xchg cmpl iret fdivrl mov jbe pop je mov xor enter ljmp dec or imul dec add aaa push bound and aaa jg (bad) jle dec or xchg push out lret xchg adc (bad) je adc pop push js lahf and xchg movaps lock fwait mov outsl (bad) fisubr mov cli and (bad) stc popl je mov (bad) mov jle fwait push ja sahf or mov inc jmp outsl outsb xchg ja outsb pop jecxz mov mov add xchg mov lret fdivp pop inc sub push push mov ret addr16 mov fldl into cli cmp push mov push inc stc daa cli call push das xor cmpsb mov das cmpsb inc repz shrl jmp dec mov and add loop jmp pop popa ret (bad) jmp insl ret xor scas aaa mov data16 inc sub int3 mov xchg arpl outsl clc jp ret jns dec ljmp sbb xor daa inc adc and mov into mov mov sbb addr16 arpl sahf inc adc mov add popf push inc or and pop fdiv cltd mov adc dec sub jne pop lock rclb outsb dec jl shrb xor cli adc or cmpsb xor shr repz ficomp cmpsb (bad) mov into gs jb jmp outsb testb js sbb aaa mov xor cs or mov cwtl add hlt scas xor add bound ds mov aam mov or sub leave repz ret mov lods cmp cltd roll or into movsb ss shrb xor out bound mov xor sbb cli push scas out pop push push inc xchg inc inc mov imul cmpsl sbb cmpsb xchg or (bad) inc add mov outsb jecxz into inc ret cmpsl mov repnz lcall jns cmpsl scas lea loopne jns sahf xchg push mulb mov scas aaa lods repnz in inc and cmpsb cwtl scas cmp outsl xor xchg jno scas push stos cmpsb loopne cmp daa int3 jae cmp pop sahf out mov fidivl mov mov jp mov shlb iret in push in xchg in cmp sub js iret neg iret (bad) xchg xor ja bound adcb xchg sahf lret mov (bad) mov xchg ljmp add fmul push sub push sbb adc jb inc pop jnp mov pop mov mov jbe es sahf out sbb scas ljmp dec jl cmpsl divl sahf out jae (bad) outsl scas ljmp pop sub int3 cli std xchg add iret scas push ficompl mov shlb mov xchg or aaa or data16 pop sahf xchg loop jg jbe add add cmpsl jo push repnz outsl pop scas adc lret repz inc cmpsb push shll js pop shrl xchg out add sarl cmpsb sbb jecxz sub lret jae mov inc fdivr aaa mov iret cmpsb aaa cmpsw xchg out incl iret sbb data16 notb jl sub push pop sti pop stos lahf ss dec scas das sbb sub popa (bad) leave jge aad pushf dec in cmpsl ljmp dec in popa or scas jae imulb lret test cmpsb sqrtps push stc push lock test add nop and push mov sbb xchg add je push push in out lods scas outsl pop in cld cmpsl xchg pusha nop dec repz mov sub (bad) push addl push xor cli mov repnz cmp lahf lret mov jmp outsl push inc dec in stc in lahf sahf loope cmp jl mov aaa sti push push jmp aaa xchg or cmp and sahf icebp push mov push pop fldenv add test out jnp sbb mov fwait push into stc push fbld cltd jle,pn pop in loop adc pop jg into cmpl iret dec push aad push test jb dec lock incl mov (bad) test push ds or jecxz push cmpsb imull or pop inc stc lds mov mov mov aaa xchg jg push negl pop stc cs adc cmpsb and cvtpi2ps push es pusha sub lock xchg lods pop loop std repz and stos push mov xchg cli addr16 mov push push adc fsubl es jg ficomp lret out dec out iret jp ficompl cli add lret push push pop mov cmpsl jl bound xlat out ret or dec sbb cmpl sbb jp inc pop cmpb lret or ljmp repz (bad) out ret sbb lret sub lret pop andw sar mov mov shll out fstp push testl push sbb je cld stc jl sar cmpsb hlt jg out test jbe or and fidiv xor repnz and flds decl mov xor lock js or jo sbb (bad) ds pop mov mov jle movsl push lods xchg into gs xchg outsl adc push add mov js add cmp dec lods (bad) std mov push lock (bad) cwtl test or nop out pop fisttpl icebp inc xlat imul cli lahf sub push xchg inc inc cmp push and outsl mov mov adcl jo outsl add push inc jle std es hlt out add andl js outsl icebp lods sub outsb adc push ret inc adc xor sbb lcall mov pop pop int sub ss xor inc dec loope xchg cwtl pop clc ficom mov inc fcoms pop outsb xchg fistp dec jle sarl add dec jb push stos mov sahf adc dec jg pop mov (bad) and into jnp outsl push sahf int mov inc push dec add test movsb push mov or lahf jg movl lcall mov stc adc and insb jle adc je mov xchg (bad) shlb nop lret xor aam or aas lahf sti jl mov dec push pusha lcall loop push test inc gs mov ljmp or out cli xchg adc rcrb pop or sahf pop adc leave scas push mov dec insl push movlps mov mov xlat sahf mov stos stos pop outsb lods addl push xor fisub into faddp cli push sbb setae sti fldcw push scas push mov mov arpl mov sti jnp loope add lret les pop inc push stos outsb ljmp pop xchg mov outsb mov into ds stc mov call sub sar adc pop sub aaa mov or push dec pop call jp out or xorb sbb adc add mov loopne cmp mov jge aam and and das or sti (bad) clc aaa add scas lea sbb jae notl test xor out (bad) jns sub xor inc lock movb inc add sarb out push push outsb inc loop inc dec mov xchg (bad) outsl rep fs cli test sbb test dec lret xor push xor enter add jae pop adc popa xchg jb pop lods scas add adc roll std loope clc lcall inc pop add out movsl lds stos push mov adc pop inc push jb inc insb jb fidiv pop rcrb fdivrs add scas cmpsb and mov loope xchg cmpsl popa movzbl inc xchg ret enter (bad) push pop push adc cltd cmpsb mov dec add mov push fwait and out addr16 add outsl mov pop dec and sbb jecxz push pop cmp and jno mov sbb out es mov das dec mov lret into dec clc call loopne dec or cli cmc jg push lahf sub or rorb add push jo adc adc scas cltd and mov stos fmull adc dec (bad) inc es (bad) dec jl,pn negl (bad) jg js push or ss mov add sahf mov mov data16 fsubrl push (bad) cmp movl ret push mov bound adc lret stc sti jecxz faddl fimul push fdivrp inc fsubl mov mov xchg aaa cmc das test or call inc push jbe jmp push sub mov es rolb push cld add in ret mov iret movsl fisttp jbe adc or pop fwait mov sbb pop inc aaa cld inc sbb push outsb (bad) leave notb pop mov dec jnp push clc inc jmp mov push fs mov addr16 pop jle sbb push mov xor mov mov sbb and mov outsl in (bad) and mov (bad) lcall and fisubl cmp push fucom arpl jmp mov push aad pop inc mov rorb into aas fistpll pop cs dec inc (bad) out inc jmp addl mov (bad) cmpsb ds stc fild mov ja jl inc and jae sbbl xor pop mov out jo das jo cld repnz fildl (bad) outsl push stc in out push popa cli jp mov or fs mov adc push jmp sti ficom loop push cmp jle mov xlat lret cmpsb pop push xlat ljmp aas (bad) fnsave cmpsb stc outsl int mov insb loope jle in cmp sub rcll je push cmpsb dec mov ss out das mov inc out sub add test and out and adc mov loope sub iret scas cld call push push inc sbb mov ljmp mov ficom (bad) lret pop (bad) jae int pop ljmp cltd and inc mov repz imul dec jns mov xchg adc lods add loop orl fwait aaa das ljmp seto dec data16 int3 aaa fistpll push cltd mov lcall mov les scas divb cmp xlat add dec loope xor xchg data16 xchg loope test mov sub loope pop pop mov push or mov jb je in popa cwtl inc mov mov (bad) lret incl call and loope mov (bad) out mov mov (bad) sub repnz xlat aam and pop xor jecxz dec (bad) fcomip add dec inc xlat outsl loop push cld jbe stos mov das cmp push (bad) pop xchg (bad) shll pop adc xchg cmp mov add mov push xchg add or xchg outsl cmpl xchg adc push or (bad) jae (bad) cmp xlat push cmpsb inc (bad) cmpsl mov out push mov (bad) (bad) movb push test aad mov xor xchg into fsin pushl lahf outsb push or inc mov lea push xor or sbb lret mov push loop push add loope mov imulb xchg xchg jb xchg mov cs cmpsl leave imul jnp lods data16 data16 test loopne (bad) pop dec sbb mov inc add push inc idivl sahf jg popl cli add push mov leave dec cmpb mov data16 sub lods lret pop xchg sahf pop mov dec push mov xor int pusha add and leave lahf push pop shr mov sub imul mov jp cmp cmp adc push cwtl aam shl mov mov out and add cs outsl in nop mov fiaddl mov dec xchg jp into inc es lods jo ja dec clc mov outsl inc (bad) push loopne cld imul mov enter lahf fs sarl mov pop mov push lcall mov and mov fwait lock rolb cmpsb pop outsb mov pop sahf sbb xchg sub ror inc adc add inc add insb test jmp mov imul leave es mov clc outsb loopne xorb test (bad) pop addr16 (bad) mov test inc fwait addr16 mov cmp mov push and jne fisttp adc xor dec xchg cs test mov lcall addb xchg add out repnz and arpl je jo or jle enter sub inc mov dec xchg rolb jl call push bound inc push daa push jecxz xor shlb in jle clc xchg ds shrb pop out fs mov setb and mov sub ds jae lcallw (bad) (bad) stos jns daa dec adc sub in xchg jmp mov jae lret cwtl lret mov ljmp xor jnp (bad) add (bad) mull addr16 push les lret cli icebp (bad) outsb test and (bad) and dec cmp cmp cli sti jmp mov sub jg rcrb pop xchg and or and lahf out rcrb outsl addr16 ljmp sub dec ljmp scas subb and inc sub push rorb ja inc daa cmc pop mov cmpsb ljmp add jmp cs mov test and mov inc js (bad) jbe ss mov int3 push scas jmp aas iret scas ljmp mov dec sbb insl scas mov jle popa lds inc out pop add adc jb jbe repnz sub sti aad jmp mov lcall sbb or add cmp addr16 mov add push pop adc test loop push dec inc fs push add popa sub ja movsl (bad) outsb sub orl dec and cmp sbb hlt sbb imul sbb mov mov dec int jl lock mov inc lock add test sub push dec xchg bswap cld xchg rolb enter sahf icebp add idiv xchg push test dec loop pusha xchg fcoml cmp scas lcall push outsl (bad) pop adc pop scas popf inc and jle loope movsl (bad) push sub ljmp shr aam add sub adc (bad) xchg pop stos jle sbb mov jle stos cli (bad) hlt (bad) sbb mov outsb and sbb mov inc pusha inc mov mov sub mov test push loop out mov out mov push mov mov hlt jg mov nop sbb xor cs int incb loop or pop sub sar push pop mov pop leave pop imul jne inc pop scas sahf inc mov cld sar xor mov stc out push lcall xor and (bad) mov add and pop outsl pop test mov xchg outsb pop pushl pushf pop ds jns jg ja (bad) lcall into (bad) cmp xchg aaa sahf sub mov sub push outsl mov pop outsl adc mov call adc ja push pop and popa (bad) loopne hlt rcrl pushf bound mov es jae push out inc inc insl cli jb jns idivl lds inc lods inc add mov es pop fcomi mov cmp sahf xchg aas (bad) push adc aad inc (bad) ficomp pop xor fnstsw dec (bad) (bad) pushl pop cmp add scas push (bad) into pop sub decl (bad) and or cli pop push pop adc push xor icebp nop imul push push pop dec stos daa pop ljmp (bad) ljmp aaa std stos aas pop repnz and nop jns loop push out cmp or add dec inc ret aas inc and cld ret dec sbb out cs (bad) (bad) jne nop pop aaa das ret frstor xchg es rcr xchg nop push (bad) out jbe lock pop adc aam paddd adc xchg fsts cmp dec pop loope ficoml jae sbb sti push push mov sbb aam sub sub (bad) push add sti ficom mov sahf data16 adc xor jg mov shrl cmp fadds sar (bad) (bad) mov repnz jae fsubrs insl sub cwtl sbb jne movsl inc sub es push (bad) (bad) jmp aas ds arpl mov setp ja jl and outsl sahf xor incl shll std pop pop out pop outsb mov fdiv jg sbb (bad) iret lret cld (bad) mov jbe (bad) mov push pop std js maxps gs adc (bad) pushl repz xor stos pop pop lahf push sbb aam pop (bad) aad (bad) (bad) inc pop sbb cmp notl push pop in push cmp stos inc xchg (bad) xchg pop cld stos or (bad) push and shrl sub insb test cvtps2pi jp (bad) lds es mov (bad) push push push adc data16 aas cld dec inc pushl aas les inc shlb aaa fbld in pop idiv call or out fs add test daa sub cmp sbb cmovbe adcl xor rorb dec hlt dec jecxz (bad) int push cli (bad) js adc aad xor pop adc icebp (bad) aas cmp sbb jp pusha fpatan inc mov xor (bad) aam ret (bad) jg dec mov or sbb dec sbb loop test pop push add (bad) mov jbe aad outsb sbb add (bad) (bad) fisttp fisubr lret jnp (bad) jno aam cmp pop cmc jp push (bad) cmc inc mov or cmp add adc cmp xlat xor into iret cmp in adc stos aam pop sbb sub (bad) jmp jnp in cmpsl xlat adc xor pop jmp in nop shrb push (bad) outsl mov (bad) es lret imul sub into clc das js xchg ja clc push mov push ja outsl popl cltd repz lcall jae insl sbb icebp push scas fnstenv cmp and sbb jg (bad) aaa push push mov xor cmp fmull imul retw jecxz mov aas xor (bad) mov loop mov and cmpsb fild lret popa adc jecxz jecxz push ja dec pop jle loop sahf add xlat xlat out inc nop jge xor sbb ret pop xor add leave push push push nop inc pop call dec pop dec xchg add inc inc xchg mov negb jecxz shlb ja fmul mov ljmp and out addr16 out pop aaa dec push adc fist xchg jae pop outsl inc das into adc dec sub cmc pop sbb (bad) (bad) jle add xor or (bad) push fcompl cmp lock pop mov decb loopne stos push (bad) clc out loopne and lret inc into rorl lock pavgb sbb out cmp jnp shrl jbe dec xchg pop rol outsl dec cmp into out cmp cmp iret cmc aad dec jbe cmp scas loope xor cs inc out cmp mov and pop js inc loop iret into cmp lock lock push into cmpsb and les inc mov jle add pop jle push add sahf jbe nop arpl leave fisub aaa ljmp sub aas sahf xchg sar daa into xor bswap cmp cmp sbb cmc push fcomps repnz push mov in data16 inc loopne mov mov addr16 mov add push mov mov loopne push cmp jle lahf or dec mov data16 jnp add (bad) mov leave inc nop sti push sub sarb push aas xchg aad test mov sarb sarl testb mov loopne clc push fidivl adc push popl cs push and into sbb mov cld or adc lds cs push mov push push inc in call loopne push lcall sbb adc jb pop xlat mov and xor dec div hlt adcl outsl lcall fdivrs ret addr16 fwait ret negl or data16 loopne rorl call fsubp pop jp sbb add into pop mov dec xor jnp rcl or push aas push sti dec call cli xor pushf lock jp cmp pushw push and int3 cmp xor leave mov mov stos aad call xor jbe (bad) jae scas push xchg add xchg cmp add push ja push mov push into out mov xchg add xor jae xlat out js (bad) ljmp or sub and add jae cmc push incl mov xchg push imul addr16 push cmpsl iret cmp aas and pop je paddd iret sbb cmp sahf icebp outsl add xlat inc mov sub cmp in cmp push pop add aad cmp cmp mov enter cli cmp xchg cmp test roll pop lahf dec clc lcall je popa pop ss bound pop sbb adc sbb add push imul scas push fwait in cmp adc ds fcomip mov mov jg daa icebp push js (bad) ret cltd nop push mov push ret in inc sub cli roll jecxz jae das (bad) jmp cmp adc adc insl add (bad) in mov loopne cmp lret push bound loop mov cmp aaa loope (bad) (bad) fstps jo jl ds (bad) dec mov or pop push cmc inc pop xor call aaa cld scas pop fidivl cmp sbb iret neg aaa xor dec xor cwtl xchg mov aam dec pop add mov pushl les jne jle ja lds leave xor (bad) mov iret loopne mov and and xrelease inc pextrw js sbb mov xor sahf add pop push and jg cmp mov mov stos shl test aam shr jle cmp inc push inc addr16 (bad) enter pop cs ds lds fsubl xchg adc ret xor pop mov mov jge addr16 cs cmp pop mov inc insl sti jp pop popl and jge cmp cmp jb (bad) sbb roll into pop (bad) js ret imul pop inc lea stos mov es (bad) (bad) mov pop cmp lock aaa mov loope mov xchg ficompl add xor adc xchg mov out sub sbb into loop mov fild sub (bad) (bad) or cmpsb je and mov jle data16 pop push cmp cs aas jg rolb pop pop aas (bad) ja shl add push jbe vcmpps out cmp pop jnp xchg shll fdivl mov into xor rclb add mull lds (bad) pop mov sarl xchg aaa mov mov pop xor scas pop push sti inc pop inc mov sub cmpsl mov dec pop cmpsb jecxz daa outsl bound pop test jle push fidivr sbb or data16 jmp pop inc sub cmpsb into lahf mov mov lcall xor jne out je aas idivb add push xlat into rcrb ret jo sbb outsl test scas push xor iret jb sub mov push iret (bad) outsl cmp add outsl xor lods iret ret mov stos jo push ss movb ljmp mov aaa mov sbb data16 or sahf inc xor push test adc leave mov out pop add cmpsl outsl scas stos loopne andl mov cmpsb jbe (bad) iret out fwait pop ret je ja mov cmp xlat movsb add js jl push sbb cmp lea push lcall iret imul pop push xchg sahf das xor mov pop and add pop inc mov push out push mov repz xlat xchg sub xchg cs cmp jle lds js push xor test imul pop lea push inc adc jecxz inc or (bad) (bad) pop jno sti out ret mul push inc adc outsb mov inc es adc fs (bad) mov push aaa adc pop imul sub outsb test mov outsl cmp push dec pop out stos rorb push push cmp cmpl dec sbb mov inc into gs aam xchg fistpl stc cmp xor pop xchg (bad) out decl push jae popa add adc push jae add decb stos lock out inc inc and (bad) push mov and jmp fbld rcll cmp sub leave or sbb idivl sub call pop in xor lcall je,pt jl jae jecxz test mov dec repz cmp loop mov mov pop out jle push push mov mov push jg sub mov es push (bad) outsl or aad pop mov js dec jmp imul stc dec cmpsl xlat add out aaa es jg jnp cmc adc fdiv scas jge xor sub sub les pop push mov dec bound cmp push imul fmuls ja mov and imulb cmpsb das xor and pop pop xlat push (bad) xlat mov lret sbb out jp test and add xor adc lock add nop fs (bad) adc mov pop aas sbb push cs push leave (bad) jno cs pop pop xchg pop jns aaa or aas pop aas cmp js xlat adc aad aad rol int3 mov pop or lock out adc mov push dec or dec lcall cld push outsb (bad) std cmpsb add xlat sbb push iret outsl xchg push or xchg add test mov (bad) push push mov jle data16 pop mov cmp lock in pop sbb or pop pop insl lea aas mov insb outsl inc dec clc cli jp aaa jle lahf ss incl imul mov push bound push push scas and ss icebp cmpsl sbb adc pop cmp inc or addr16 adc cmc mov cmp push mov cmpsl insl sahf jp sbb push aaa les arpl out inc (bad) ds icebp test test xchg cs xor push dec aas scas mov shrb pop negb push pop jo test cli mov adc faddl nop or inc pop push es adc rcll add adc lock pop and xlat cmp (bad) insb jbe push sub mov es jmp pop pop inc mov adc data16 faddp cs sbb pop (bad) scas daa jp mov xchg sub pop outsl iret or push and push add cmc out fld sbb es loope rcll xchg loop sahf push pop pop and cmp xchg mov pop xor je (bad) pop repz addl adc sub call outsl adc mov pushf push add jae in push rep mov clc movsl jae jae dec and data16 xor xchg cmp ret sub push inc xchg push scas in mov lods data16 mov scas pop dec inc (bad) aas sbb xor in sbb fadds fbstp lock call shrw jnp cmc push in sub sub in add adc das divb xor sbb iret (bad) and mov in jmp mov and pop jne pusha adc rorb fisubl pop add pop mov hlt xchg insl push addr16 fsubs loopne add outsl lcall fistpll cmp pop jbe stc inc mov sbb stos or push aas xlat shll aaa sbb daa dec out imul outsb (bad) (bad) (bad) (bad) jp adcb inc pop jae repnz int jb adc adc jae loop cmp add mov cmp add icebp ret push mov add outsl add mov scas subl push cmpl rol idivb push pop js andl mov mov (bad) aaa push pop pop adc lret outsb cmp jmp cmp xchg adc (bad) cli fdiv outsl js push sub fwait scas pop pop sub into inc cmp aas sub push adc outsl scas rclb sahf pop xor mov sub jle or or das scas xlat push fisttp outsl das in and loop cmpsl ret pop mov jae (bad) icebp push cmpsl and adc out cmc push mov sub adc aad add fwait cmpsl ret push jne jae sbb loopne fildll inc jp jns add bound insb mov (bad) je (bad) jne sub push ret fwait or xlat add subb ret pop fnop cmpsl add loopne addr16 stos or cwtl jg dec mov add and pop sub xor mov push and sti push (bad) fcmovnbe addr16 inc fild push cwtl stos xchg sub (bad) mov sbb out adc dec mov jl,pt inc cmp scas xchg mov push (bad) outsl pop mov xor call dec fsubrs arpl xchg mov jmp push adc inc into mov add adc xor push rclb iret push sbb outsl dec jge jl aam rorl push into (bad) shr js dec mov (bad) lock ret add push cli push aaa lret add jmp outsb shrb leave and out imul mov roll dec add push es and loopne lret testl xchg xor pop pusha xchg aas dec stos daa jmp jne ret negb push addr16 mov call add pop fidiv scas sbb pop inc push roll idivl and roll es push (bad) aam roll inc add cmp aas push adc pop push add cmc mov adc test repnz lds stos pop inc cmpsl adc out pop mov and pop outsb fisubr lret cmp add mov inc aaa je push icebp pop loop data16 sub pop aas pop mov push out jp pusha in stos ret push sarb push mov lock mov testb aas imul popf mov js ret scas sarl jg pop xchg lahf jbe into push out mov inc pop inc inc sub lahf xchg or sub clc mov imul mov jle add iret pop test add in sahf pop out cs imul mov inc adc pop xchg xchg js push mov dec (bad) jno mov lahf (bad) lods add mov cmpsl push xchg jbe jo sbb ret push sub (bad) mov lcall loope jno fbld cmpsl into push clc jno push outsb imul ret (bad) pop jno outsl inc jmp es out mov and (bad) repnz or mov push mov int mov ja inc adc xchg jne mov inc inc mov add clc lock aaa les xchg adc aas aaa adc jle psraw and (bad) mov daa jbe ficoml xchg xchg add and mov aaa enter adc (bad) pop sbb outsl xchg cmp add pop cmp movups scas jbe es adc fimull adc outsl jmp push push push rolb push rolb ret fistpll cmp mov outsb sahf cmp fisubr adc insb ret and sbb ds negb pusha push aaa lret call orb out (bad) cmp pop push mov pop outsl imul xchg push mov mov jle ds out add push aas or fs inc push lock pusha out sbb xor sub es xlat vucomisd daa sahf into pop add pop loope aaa cmp cmp pop (bad) test or push flds inc ret push clc xchg mov cmp lea lret rolb lds sbb xchg push pop and pushw stos imulb movsl or orl mov sarb rorl and cmpsb dec xor pop sub pusha mov pop add (bad) std jle out cmp push lcall and or inc pop sbb cmp push fisubl hlt jg and (bad) cli faddl adc jmp fimull cmp addr16 push loope push ret out mov into or das outsl fild das nop aaa outsl push cs (bad) or int3 mov mov push (bad) test cmpsb adc jmp sahf iret mov test xchg aaa dec (bad) (bad) xor mov inc in (bad) and xor adc popf and lret aad push and pop jb fistpl jb lods xchg js into das push aas mov test shlb jecxz jle rcrl jg or cmp repz mov cs orl rcrb outsl ds cmpsb mov fs es (bad) hlt fild lret loop mov cmp roll ret cmpsb push jecxz pop mov iret or addl (bad) ss outsb sub jbe sti ret pop jmp push jbe push mov pop pop jg push mov inc ljmp scas cmp roll sbbl ret and fwait cmp lock adc push push jae push rcrb mov push push xor out adc or xlat sbb (bad) push add jo add (bad) dec (bad) mov lods xchg and inc push into sub sbb jnp xchg subl bound dec arpl push add movsb xchg daa sub pop sbb aam ja adc mov pop jnp rolb dec (bad) cwtl leave test jnp stos inc jl adc lahf push fwait mov outsl (bad) das or pop add sub repz cmp sbb jp jle popa adc je push xchg sbb cmp jb aam push inc adc roll ficompl pop daa int3 js add inc lret jecxz mov sti and loopne mov inc xchg xor sub bound and inc subb add int3 orb or sbb lahf fwait bound sbb xchg push mov jae pop fimul mov (bad) push xchg movsb (bad) iret sbb scas cmp and cmp inc pop dec pop insb shlb sbb add inc push adc outsl mov cmpsb pop iret cld ficomp dec je mov (bad) mov xor or mov cmp rolb lret push sbb out xchg dec push daa dec pop ret lea inc lock jae push rcr xchg dec or call fnstcw scas and mov sbb out repnz xchg adc push add add outsb xor jge es ror rclb cmp dec ja cwtl dec out pop mov lcall ret pusha lds xor and cmp data16 dec rorl inc or inc out add loopne daa sbb cltd sbb or xor loopne pop lret mov xor mov out call mov pop arpl push aas (bad) dec jecxz andl mov ds sub push push jge data16 xor pop adc push inc and xchg inc sbb inc ret jb pop mov and out (bad) lret mov mov outsb data16 pop (bad) out cmpsl outsl scas insl xor cmpsl loope dec or jno push loope xchg repz cmp mov addl add adc and pop outsb and cs xor cli adc loope jecxz pop dec mov aaa push sub scas jae out mov jae clc xchg lcall daa insl test inc into mov rol inc rorl out pop jg imul js or idiv push mov jbe push pusha dec sbb outsl (bad) cmp add ret push std (bad) push cmp test inc sahf jg mov add sahf shlb push lahf xchg pop mov pop fsubrs push or (bad) xchg bound push mov sarl lock pop jb or mov enter (bad) and jle stos inc push dec adc (bad) push adc cltd mov mov inc movb xchg iret jno imul addr16 sahf test icebp (bad) negb pop xor call xchg xchg mov push xchg iret pop push jnp lods xor (bad) xor jo aad outsl scas add inc js xor out dec jo adc sub or std add fwait xchg inc rcrb arpl mov push ljmp cmc mov fldt gs fsubs pop aad ss repz out xor sub push push dec xlat xorl and mov xlat and sbb inc stos and or mov in or push movsl loopne outsl and mov (bad) lcall pop (bad) dec in punpckldq lds leave xor cmp cs fcmovbe outsl addr16 mov push lock xchg push and lahf mov xchg push add cmp mov adc inc roll fwait mov xchg mov cmp shrb dec out data16 popa ret or daa pop outsl ds les call sarb orb adc inc inc cld cmpsl mov shlb jbe or jecxz cmp movb out cli jo pop frstor cmp mov pop adc dec ja ja jle loope ds loopne,pn sbb (bad) cmp sbb cmp out lahf inc or ror dec xor fwait push call invd arpl dec add lock jnp movsl push inc movsb (bad) les dec orl mov mov jg sbb xor int3 ljmp mov jg int3 inc lahf aad popf adc pop mov mov push add dec out jl inc mov sbbl stos aaa sbb xchg push push into mov and inc iret push cmp enter pop xchg jno add inc repz insb sub scas xchg lods aaa lock inc xor or sbb (bad) call sub test xchg std fwait and sbb sub fisub add in (bad) mov outsb outsl testl cli push test pop adcl dec shr aas daa jae or adc jecxz mov pop outsb xchg test pop sbb cmp in ss sub loopne stos mov cmp xchg sub das add fildll fidivrl ret test into jl cli pop inc mov jg sbb xor pop jecxz pop xor inc push bnd (bad) aas jg sbb fisubrl cmp jbe loope in clc add jg (bad) push pop and jle mov es mov push out add sbb stos imul (bad) aaa add dec dec adc popf sahf into cs add push lea inc lea add pop inc jg loopne ljmp sahf pop jae pop pop out (bad) call incb inc neg insl sti push fs pop int3 cli jecxz rclb jmp lea push or pop (bad) xor les addr16 (bad) incl jnp out sbb mov inc shrb lock jne xchg sti cmpsb adc clc lret mov pop sub mov cs jle cli imul shll xor arpl cwtl pop or mov sbb mov push cs cwtl pop cmp mov cmp ficom fild push xor sti inc mov sub (bad) (bad) (bad) incl push push push pop pop mull rclb mull clc addr16 ljmp testb fimul sub push dec mov lds rcrl xchg daa pop out mov inc xlat lret fimull ret sub lock (bad) sti sbb lcall daa cli les xor (bad) (bad) ljmp aaa std cmc aad mov push add es sub jmp mov add fsub sub cld sub jmp jns rcll xor daa aaa add je jmp and jl cli rorl iret pop xor jb pop xor shrb jle outsl js pop daa movl push xor clc inc out xor daa shll xor (bad) (bad) lcall fisubr fs popa inc enter fcomip dec mov jbe ja fwait push ds and lcall ret xor fmuls leave cs jo cmc pop sbb decl fwait pop xor jbe add jp xor cmc lret cmp clc mov xchg lods inc sbb mov fwait xor (bad) (bad) (bad) pushl aaa fiadd push ret cld xchg jno sub test gs sbb notb fisubrl or clc jo lds sub incl shlb ja or dec rolb mov or sub mov fwait lcall mov inc and push mov sti bound (bad) (bad) mov mov sti aas mov aas setns sub mov ljmp cli mov fcmovb sbb in nop mov (bad) mov xchg ret push rorl mov jmp xchg lods repz in mov aad fcmovu lods or cld stos ljmp stos xchg das mov add dec mov mov push ja outsl cld daa movsl fdivr (bad) push arpl mov sbb call pop cmp and or jbe jne repnz (bad) push inc and mov cmpsb ret daa fimull xchg test out push push xlat stos outsl xor ret int3 incb mov lods or scas xor nop call inc lret mov xor lret out pop (bad) (bad) fild je outsl sbb or pusha mov jb (bad) (bad) lcall cmp adc lahf imul fs cli movl sub mov test (bad) jg xchg mov shr add imul cli (bad) dec dec xor sbb sbb fwait lods dec into sub cmp push (bad) or pop sbb jg std dec fisubl cmp dec or dec fwait jo int and jp movsb cmc mov cmpsb repnz xlat (bad) ja jns aam inc (bad) (bad) out (bad) sub sar js stos jo mov (bad) (bad) xor mov pop mov xchg cld cli loopne mov rcl out (bad) (bad) ljmp stc sti (bad) lcall int pop push dec dec dec repnz (bad) cmp xchg or aam add and push outsl lea cmc in lahf (bad) data16 (bad) (bad) (bad) ficompl shll loope dec push loopne mov (bad) mov dec out mov out (bad) push shl leave test pop clc out cltd outsl (bad) mov loop push incl mov dec aaa popf xchg sbb loope (bad) rol xchg (bad) incl and pop int3 js jae dec mov pop scas js pop ljmp mov mov icebp xor push (bad) lock shll (bad) (bad) js sub push pushf lock push out insb jp popf jns xor inc shr and outsb cmpsl pop adc jge (bad) (bad) push inc inc lret inc mov add adc repnz loope xchg loopne pusha enter dec (bad) icebp sbb clc loopne dec subl dec lods mov pop cld push addr16 test pop mov push imul pop jmp dec jge fisttp cmp dec adc push fs int (bad) mov outsb push outsl (bad) xor adc inc sub inc jp mov jnp add pusha xor jns fidiv (bad) jg dec pop jl mov sbb pushf je add jne repnz (bad) (bad) inc fcomps icebp mov jae rolb pop int3 adc daa std sub (bad) (bad) cmp add mov pop sub std imul leave xchg sub in and cmp movsb sbb (bad) pushl or andb jne or fsubl aaa inc in xorl push enter rclb xor in xor in fcompl inc push jle (bad) cli cmp (bad) (bad) jmp cmp mov adc push gs adc in jl pop inc sub das clc call pop adc adc notb std (bad) (bad) (bad) cmp cmpsl mov fstl push cmpsb xchg mov hlt mov lcall cli (bad) out dec iret fidiv mov push fwait or int or call hlt cmpsb test xchg (bad) or int idiv push ret mov mov addl cmpsb pop push sub add inc imul into push out xlat pop rcrb add lcall sti xorl clc push mov lods push (bad) pop es pop iret mov testb cmp pop xchg (bad) pop sti nop pop push jecxz sbb leave (bad) or cli sub mov pop xchg mov (bad) or pop mov mov cmp dec mov mov enter iret sub cmpsb es cmpsl xchg movsb push cltd out pop cs adc icebp sbb pop cmc inc mov stos jecxz sarl hlt inc fucomip jg mov xor xor push xchg push inc and mov iret pop dec (bad) mov negb dec mov das pop add add bound jge nop out (bad) repz decb adc cmc push xchg leave xor mov add (bad) jle std aad mov adc mov into pop imul cmc ljmp shrb xor data16 dec jmp push je xor outsb fldl sbb clc sub mov or jl cmc outsb aam cmp test imul cmp (bad) je mov test cli insb jb cmp cmovb pop add mov ds ficompl pop xor fisub addl adc push and (bad) lock js lcall daa cmc and and inc xchg std fisubr push repz enter and pusha pop sub inc add push mov xchg outsl incl aam mov xor mov ss (bad) add cmp xlat cmp sbb push daa shlb stos in rorb sub bound call (bad) push inc jb inc ret add test add sub pop inc push dec hlt rcll inc push add add or adc mov xchg push ret leave jns add inc xor (bad) dec lahf cmp dec mov std dec push push add push xchg mov jns gs jbe add add xchg lcall (bad) ljmp inc or ja test fbstp push scas adc cmp or jno cmpsl stos and cli lea pop xchg or pop mov jge mov add popf sti sub fdivrp decl mov lahf jecxz mov sbb pop rcrl add add insb clts mov push js str xorl cmp ss fiaddl add aas test lret mov ss fcmovu data16 lret mov jbe and jne loop aas addr16 mov dec push addr16 sbb addr16 dec add xchg in aaa sbb ret mov sbb mov add imul push jo and add cmp rol adc push inc cs nop (bad) inc inc shll ss insl push or dec faddp mov gs imul xchg inc lcall jae push push imul gs push fimull jns inc xchg gs sbb imul fidivl neg rcrl imul insl outsl popa pop or pop outsl mov sbb push outsl mov push imul dec mov out sub je pop adc mov cmpsb mov rcll stos sbb xlat push rcll xor sbb data16 insb or inc adc adc (bad) test add insl adc and jnp js repnz jns push out inc div lret das push mov jnp arpl push outsl and add lea push ds xchg clc lock push pop cli mov push jno or pop mov add dec mov mov jb sub js pop add iret insw push jae fiaddl or ja push and xor sbb add mov xchg and jae fsubrp push lret xchg popa push insb daa push cmp jo push popa xlat cmp mov adc push jne outsl xlat cmc sbb outsl stos das out cmp daa jecxz xchg pushf outsb sarl jns out fnstsw mov sub popa xlat push sub xlat insl and add add je pop xor popa jae ja pop jecxz inc push pop stos cmpsb mov cmp setg ja cmc adc fs and out push jns push sub bound or pop sub pusha mov mov loopne arpl jnp ud2 pop ret cs fimul add jecxz sti inc sub jns xchg sbb xchg outsl insb inc mov sub and add out scas fnsave sti push aas outsl ss add jge or and out out fidivl xor pop out fdivrs mov ja (bad) mov jo xchg cmp icebp ficomp push xchg mov push mov push xchg add push inc xchg adc adc xchg push jmp jbe sub push adc inc out loopne sbb dec and add jnp cli jle push (bad) push ret cmp iret ja dec arpl or mov or outsl sub mov divl ds in lea jae lret dec adc rcll aas mov addr16 xor roll mov mov add push hlt pop arpl push add inc btr cmpsb jo fisub out outsb cmp pop notl es ret and or sub sub cmp add add stos fcmovb inc ja push sbb dec xor mov ja imul dec iret insl sub pusha sub andl cmpsl xor inc mov stos insb pop jmp and stos pop or fiadd inc ret out mov lds rorl add pop pop adc cmpsb loope adc and add mov mov aaa aad mov dec es pusha lods imul das adcl inc mov ss ljmp mov or (bad) push ja outsb icebp add adc push sub arpl inc inc mov (bad) aaa mov dec out sarl mov inc xchg add mov fsubs popa outsb xchg or xor shlb pop in inc pop mov mov scas ret mov adc (bad) mov (bad) jle mov add xchg sub insb pop add dec ret mov addr16 rol sub push das dec add out jbe imul scas xchg push dec xchg cs sbb sub (bad) ja iret inc xor sbbl mov stos jns or or lret lock (bad) lds and outsb (bad) xor push push fs xor jnp pmaxsw jo inc rol xchg jb lea jno pop imul pop adc mull imul scas push inc bound (bad) mov fdiv mov das cmp dec das pop cld (bad) pop loope dec mov dec ja jbe imul cli push ds jo inc out adc mov arpl loopne mov scas (bad) outsl daa das xlat das push stos push push adc das push or adc call pop pop sub out push push xchg adc arpl stos mov int3 cwtl pop add imul fldt add dec pop lahf pop mov push popa mov leave movl xlat push icebp xchg and mov (bad) mov mov sbb mov pushf mov adc cwtl xchg cmp in imulb fimul pop inc rorl ja aas or or inc subl fnstsw jp popa mov mov scas daa inc xchg push ret and stos sub dec xchg add mov xor loope ffreep or rcrb ja adc sbb xchg lahf ret dec test lods rorl sti pop mov push lcall test jae subl dec pop and arpl and rcll daa stos nop push jecxz (bad) insb inc sbb in popa push dec imul dec mov or outsb adc jmp scas adc daa sub aas ljmp xchg cmpsl jmp ret aaa dec jmp push push jbe push leave and sbb bound jae mov jecxz,pn sbb jb ja jecxz add ja and into sbb jae xchg mov andl push cmpsl cmpsb adc cmp dec enter out loopne xchg xor jne,pn inc push mov push imul add mov fstpl in sbbl push jae or outsb daa or mov ret aas iret inc and loopne sbb movsb pop sti xadd or sbb or and das and jg pop aas jae add (bad) mov scas mov btr setp lock jns push jb imul andl loop jecxz sbb mov mov rolb test add pop dec xchg arpl dec pop data16 fimul bound and dec or lds add ds jnp jecxz lods adc cmp je outsl aas or cmp dec mov mov inc or jne cmpsb and (bad) rep nopl (bad) jbe adc add orb scas lret push (bad) mov pop dec aas cmp pushf loop or mov adc or in (bad) mov and jmp repz iret sbbl lods pusha and xor inc sarl cs push js push pop mov mov mov xchg data16 sub xor cmp sub mov sysret dec mov push fisttpl repz lret cmpsl loope adc imul mov out and fadd or mov pop cmpsl ljmp jmp test push (bad) jbe scas fwait popa push ljmp call and push shll cmp and xchg push (bad) push (bad) inc stos loopne cmpsl das mov popa pop rclb xor in mov inc pop adc or xor add iret pop adc pop pop iret adc mov sbb adc sbb dec (bad) ja das imul lods out inc (bad) cmpsl out adc and jg mov loopne mov push inc imul xchg push or mov sbb mov in cli xlat bound cmp adc pop push inc or stos push popa ret mov jecxz imul daa outsl adcl (bad) rorl xor arpl jae cmp pusha add xlat mov adc xchg mov push push sub pop push (bad) ja mov adc sub push xchg fdivs jbe addr16 or add ret data16 pop push pop xor clc cs pop adc fldt inc xchg push mov popa ret dec mov sub sarl stos push stos (bad) ret (bad) jnp aam mov das pop pop add or and or sbb push lcall popa xchg jp and push pop xlat jbe xchg cmpsl ret xchg ljmp mov add imul pop pop repz mov aam push lea movsb adc adc xchg cmpsb mov mov stos outsl mov iret popa nop pop fild fs imul sarb outsb movzbl loope lret mov push (bad) aaa outsb lahf js cs arpl jo adc add adc mov push stos arpl (bad) adc xchg dec or add popl push or (bad) daa pusha mov or in mov jmp cmp aaa mov sar inc add fwait cmp sahf xor test mov test fist add mov (bad) or cmp pop or fnstsw rorb popf adc or out mov or xor mov outsb insl cmp jecxz dec rol mov push jo decb ret push adc push push dec imul fistpll xor jae fisubl push ret adc lea jo and mov jae mov negb pop adc adc lahf push jne jae push xor xchg js adc add xorl xchg sub adc add dec sti cmpsb push mov sub sbb push xchg movsb testb dec sub xor movsl sbbl adc (bad) push (bad) pop imul int sti mov mov sbb sub fs add dec push pop pusha jge push ret pusha loopne lds push add fiaddl xor loopne sbb inc insb cmp dec add mov outsb jo aas mov jge mov push fcoml dec imul inc call cmp pop mov ss adc aam fidiv shrb jle push js adc lods lods aam push sahf push mov nop fwait pop je cmp inc inc inc insl cld out (bad) cmpsb xchg sbb test sbb daa push iret add and xchg sahf add add inc add xchg insl push pop addl or or mov xor pop bswap add xchg dec or addr16 fnstcw lret add or xor inc add push inc gs jg and xchg leave or mov mov add mov or cmpsb test fadds iret adc sahf loopne cwtl add add pop adc test add and rclb dec sbb ret pusha adc add in or sbb outsb lahf mov popa pop fwait and sbbl ficoml mov (bad) daa das xchg push push imul lahf or jmp test xchg (bad) xor push adc popw or lods inc add shlb mov or f2xm1 add push sbb xor mov or sbb add rol test xor mov mov dec jecxz push inc mov add add xor or pop leave xchg dec add add pop leave xchg add rolb adc (bad) or in adc add insb movsl fldcw adc jns adc mov mov sbb sub int3 xor es cs fcmovu pop popl sbb mov xor push dec gs adc outsl test add lods push gs sub xor and jmp pop mov add iret fildl fnsave dec inc mov sub pop fidivrl inc add sbb mov bound jbe sbb mov add ret sub movb pop roll sbb outsb insb les mov stc sbb insl sbb lock inc pop push sbb inc jae cmp mov inc gs mov or push xor mov jns sbb pop push imul fistp xlat and dec insl sbb jmp rorb cmp or push pop fld xor xor inc and lret (bad) mov fisubl std leave mov add or sbb insb push test or fs mov inc xchg and arpl pop jnp (bad) daa arpl sub inc push push test je scas xor and mov repz inc pop sbb cmp mov or inc jno cltd or and rorl or inc lret ret sbb loopne cmp pop pop pop lret push push or dec stos push mov sbb sbb mov lea cwtl inc add pop inc adc insl mov xor pop dec mov movsl (bad) cmp jne (bad) push movsb mov and sub sub (bad) gs outsl loope jns pop test fdiv adc ret loop xchg adc leave xchg adc (bad) hlt icebp loop dec mov adc outsb inc sbb push pop (bad) pop loope jae add test js push adc rorb fadds pop push aas cs push je add or adc jne lods (bad) inc insl sbb adc jp inc pop sub ret sub in push insl loopne and mov rol mov inc push adc jbe and into and cld mov dec outsl pusha pusha adc add outsl add stos sub add test or outsb sub or sub and push das (bad) roll mov shrb sub cwtl inc dec xchg mov cmp sbb mov mov popf and jecxz cmpsl and fwait lret sbb call sub cmp push addr16 js pusha and out arpl insb imul pop test js (bad) and adc mov loopne and out inc mov push dec push xor test iret inc adc gs mov or lods cmc test imul pop push and aam ficoml insb sbb lods and outsb sbb inc inc cmc je movsl mov fistl in rcrb cltd mov or cmp mov or and jo adc jmp sbb push or inc mov and mov xchg cs call or fsubs or adc push cmp (bad) lods xor out adc aam jo adc xor jbe sub xor sbb sbb mov push and sarl and pop popf and mov adc sub xor test notb jae jmp cmp pop insl lock sub or adc push cmp push pop push inc push cmp pop test gs dec data16 lock ret outsb push inc nop fs dec mov in imul lea cli or sbb gs cmp movsb icebp sbb cwtl and and add sbb push loope or enter inc xor (bad) popf add inc arpl test fs xchg movsb pop lds pushf rorb jge push faddl adc adc insb outsb sbb rol lea mov aaa xor push inc or test push xchg jb or or xchg adcl aam add sbb cmpsb mov loope in and jecxz inc and inc sbb imul gs xchg arpl pop pop add pop xchg sbb lock sub (bad) jo mov sub movl xchg rol mov int or fadds dec adc xor cmp or push aaa cmp pusha andps cmp mov dec imul pop (bad) adc loope sub push pop das stos loop add test xchg rcll ficompl fs int add inc xchg je jne dec fistl imul (bad) xor fsubrl sub push cs or jecxz lret int jae dec or xor add mov sub mov jbe std sub adc and stos sbb lcall jae add fs push and jge outsb in adc or xchg arpl add out sbb imul sub and jmp lahf or fmul jae sbb inc jb inc and data16 test sbb jae rcrb (bad) xor ret (bad) adc push jb cmpsl mov (bad) pop stos (bad) outsl cmp xor mov and sarb pop sbb frstor sbb sbb inc mov ja inc xchg sbb test inc mov lods loopne xor in mov sbb es sbb jbe sub out movsl daa inc mov adc adc rcrb shlb jmp xor mov aaa data16 insl inc cmpsb adc aad mov out mov aam sbb add inc divb mov sub into inc sub inc pop or sub sbb adc and test adc sbb out sbb sbb mov mov fdivl ret (bad) test nop lea adc insb test rol test adc fs movsb push sub inc outsb arpl insl arpl lret sbb mov mov jg fistpl xchg jp insl sbb pop fildl dec jge arpl popf jae aad (bad) rclb icebp test pop testl inc pop push mov repz xchg jnp in inc (bad) and jno cltd nop jne test test mov sbb xor (bad) lock inc fs push imul test mov add jge xorl (bad) sti movsl inc jae lods sub rorb pop mov pop fldenv cmpsl dec das add popf (bad) mov (bad) mov push pop arpl mov inc sbb mov fwait or sub movsb sbb pop push cwtl sbb inc xchg inc in cs test or sbb add imul pop and fimul popf cmpsb dec into pop sub movsl jb push lahf gs and mov lods test mov inc push dec inc and add add add sbb std lcall je push adc lock inc pop xor and loopne cmp xor insb loope mov push inc movups sub mov and push mov dec ret jo in cmpsb cmp or inc dec inc inc scas mov (bad) add and cld lock inc push push or notl in adc (bad) jmp bound or push clc dec add adc shrb fsub aam and lahf je,pn mov push lahf sbb xchg cmp enter pusha add mov gs xchg ja jns jo push jae dec in cmp cmp mov pop and into andb add dec xchg and add test pusha mov lea movl push or jmp nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jb dec add jne mov sub adc adc jmp add jne mov sub adc adc jmp xor sub jb shl mov inc xor je sar mov jmp add jne mov sub adc jb inc add jne mov sub adc jb add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov push dec repnz push call or je mov add jmp call mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp mov push dec add add add add add or add add push add addb add mov add adc add push or addb add nop or orb add rorb orb add add rorb add add add add add add pop add add add add add add addb add call add add add addb add pusha add addb add mov add add add add add add add add add mov add sbb push add add in add add add add add add add fadds add dec icebp push add add in add add add add add add add add add xor add add in add add add add add add add sub add mov push add add in add add add add add add add push add add hlt push add add in add add add add add add add js add sbb push add add in add add add add add add add mov testl add add add add or sbb adc add and add sub add sldt dec sldt pop sldt outsb sldt js add (bad) sldt xchg sldt sahf sldt add add addb add fadds addb add add add sub add push add add js add mov add add add add lock add sbb add inc push add push add add add add add add push add or add xor add pop pop add addb sbbb add test add rolb add clc pop add and add dec or sbbb add cwtl or sbbb add rorb andb add call add add add add add add add add add adc add test push add add add add add add add add add add cmp add push cli push add add add add add add add add add add pusha add add cld push add add add add add add add add add add mov add or push add add add add add add add add add add mov add fdivr push add add add add add add add add add add fadds add test pop add add add add add add add add add add add add pop add add add add add add add add add add sub add pop add add add add add add add add add add push add add pop pop add add add add add add add add add add js add call add add add add add add add add add mov or add add add add add add add add or add add add adc add add add add add add or add add add add in add add add add add or add add pop add add in add add add add add or add add in pop add add in add add add add add or add add push push pop add add in add add add add add or add bound add add in add add add add add or add je add add in add add add add add or add add pop add add in add add add add add or add push add add add in add add add add add or add push add insb test add add in add add add add add or add add fdivrs add in add add add add add or add lret pop add add in add add add add add or add faddl add add in add add add add add or add push add sbb pop add add in add add add add add or add push add mov pop add add in add add add add add or add pop add hlt adc add add in add add add add add or add add pusha and add add in add add add add add or add add int3 xor add add in add add add add add or add inc or push add in add add add add add or add pop add movsb push or push add in add add add add add or add pop add adc add add in add add add add add or add or add add add in add add add add add or add or add mov add add in add add add add add or add add push pushf or push add in add add add add add or add lods or push add in add add add add add or add mov add in add add add add add or add or add adc add add add add add add or add or add or push add in add add add add add add add sub add add add add add add add or add add sbb or test add in add add add add add mov or addb add add add add add add add add add orb add cld or push add add add add add add adc call or xor add push or xor add js add mov sldt enter cmc sldt lock xor add sbb add inc or cmp add push sldt nop or cmp add mov sldt loopne add or cmp add xor cmp add pop or cmp add orb add add test add add add add add add add or add add insb cld or mov add add add add add add add push std or lock add add add add add add add add nop or add decb add add add add add add add add add add mov add add add add add add add add add add add loopne add cwtl add add add add add add add add add add add or add je or mov add add add add add add add xor add xor or inc add add add add add add add add add pop or add or test add in add add add add add add add orb add or add add in add add add add add add add test add push push or push add add add add add add add add add rorb add test or call add add add add add add add clc or add add add add add add add add add add and add pop or in add add add add add add add add add dec or add add add add add add add add add add jo add sbb add add add add add add add add add add cwtl or add or pop add add add add add add add add add rorb mov add add add add add add add rorb add fimul add (bad) sldt add add add add add add adc or adc add in add add add add add add add cmp or je add in add add add add add add add pusha or or cmp add add add add pop add jg add jg add or add or add xor add pop push add orb cmp add test add add add add add add add add add rorb or adc add in add add add add add add add clc or or adc add in add add add add add add add and add inc sub add add in add add add add add add add dec push add push sub add add in add add add add add add add jo add push add add add add add add add add add cwtl push add jl or adc add in add add add add add add add rorb add add add add add add add add add add add add add add or add sldt enter adc add in add add add pop add inc add inc add push add add inc add dec add add inc add inc add inc add dec add add inc add dec add push add push add inc add inc add add add inc add inc add dec add inc add inc add dec add add inc add dec add pop add inc add inc add add add add inc add or push add inc add dec add push add dec add push add or inc add add add push add add add add add dec add dec add add inc add dec add inc add dec add inc add push add add push add xor or dec add dec add dec add dec add add jo or sub add and add inc add add add add add add add add add add add add add add sbb add sbb add cmp add sub xor add mov add pushf add cwtl add xchg add xchg add xchg add lcall popa xchg add xchg add xchg add fwait add cltd add add mov add cmpsl add lods add mov add mov add lods add add add lods add mov je mov jo mov add pop les add roll sbb add sbb les add lret sbb add sbb int add roll add aad add fiadd push and add and add and add sub add sub lret add sub add sub add xor add xor add xor add rolb or aad or and add and add sub add rolb adc fildl push xor add xor add xor add xor add xor add aam push cmp add xor add xor add xor add xor fiaddl sub iret add cmp add cmp iret add xor add cmp add cmp add rolb sub xlat add aaa fild and fiaddl and faddl sub add aaa aam or jecxz or in push and add daa in add das out adc xor in push aaa in push cmp add xor add sub add sub add xor add aaa lock aas loope and out sub out sub call add ds add testl xor inc roll sub add fiaddl sub add dec fldl xor add dec fldl aaa dec fiadd cmp flds cmp add out sub cs out sub add push jmp add int inc dec lret pop roll dec pop fadds dec pop fldl push pop aad push popa fildl imul add enter ret jl add loopne inc push loope inc push in inc pop loop inc push in add out add out add add out dec arpl add in add in push addr16 pop fs push imul add call add jmp pop imul add out pop jae add add stc add testl arpl add out insb jl add ljmp js add call add lock mov add jmp add ljmp (bad) out add clc add testb mov add clc add clc add std add cli add mov add cmpb cltd pushf fiadd fwait mov lds xchg out add nop ljmp xchg in add xchg ljmp xchg icebp add icebp add cltd icebp add lahf stc add lods out add mov add int3 incb rcl testl (bad) (bad) incl add add mov add mov add mov movsb mov add and add add add mov mov xchg xlat add add add add cmp jp add add add add inc push fildll adc add add add add lods mov jbe add fsts or add add add add test inc inc pop add push js add add and lea dec dec add add add jo mov cmp or add jle pop add test cmp adc add aam jb lahf add in test xchg add jb (bad) add cmp or gs dec add add inc xor add add sub add and adc sub add add add add insl xor sub sub add sbb jns inc xor sbbl add add cltd mov outsb xchg add fwait cmp or add aad ror (bad) mov xchg adcb jb jl daa in in enter sahf add add add add rol int loop in int3 mov add add add jecxz int3 lcall add (bad) mov lret (bad) lret shll add jmp sbb add add add mov in add add jmp add add icebp jecxz loop ljmp add (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp (bad) (bad) inc (bad) (bad) inc (bad) (bad) ffreep (bad) lcall sar aas sarb loopne (bad) jg aas cld jg pop clc (bad) clc pop lock cld psraw incb jecxz incb cmp add (bad) inc (bad) jmp pop (bad) push pop (bad) jmp aas (bad) inc (bad) incl pop (bad) cld add jmp pop lock aas (bad) pop cmpb sar loope (bad) (bad) (bad) (bad) (bad) (bad) jmp add add and add add add add jns add add add jns add add (bad) jns add add or add add sbb add jns add jp add jns add jp add jns add jp add jns add or push jp add add add jp add add add add add add mov add add jp add add add jp add add add jp add add add jp add add add push dec inc dec xor cs dec dec add jbe jo xor cs insb add insl arpl xor fs insb add insl fs xor cs insb add imul insb add gs jne xor cs insb add gs xor fs insb add jb imul add add fs imul add inc gs jb arpl fs jae add push imul jb je arpl push imul insb insb outsl arpl add jb jne insb inc jb add add imul jae add push gs insb outsl jae dec gs add dec insl popa addr16 imul add add outsb fs gs inc add add jbe inc inc add push popa jb popa outsb je outsl jo add add je inc add add jb jne jb push popa insb jne inc mov adc add inc outsl outsl insb gs outsb add or add mov insb jae add jb lea sub add push outsl (bad) testl pop dec outsb je addr16 and rcrb xor add jns insb daa push outsl jb add jns incl imul add or push je sub in push lcall pop js test iret repz mov fidivr cmp pop push dec bound arpl pop sbb loop jae insl sbb and or dec mov popaw arpl add std cmovle inc add inc and clc jmp lods sub mov dec jns jnp push pop xchg xchg gs mov sbb push add pusha lock je cmp rorl dec push pop push adc sub sbb loope jmp bswap leave leave dec sarb fdivs leave leave test mov leave cwtl xchg nop mov leave leave leave mov leave jl call leave loopne jo leave leave leave leave hlt lock push fs push add mov mov fwait sub add mov and mov ss pop ret pushf pushf pushf je pop pop push push pushf pushf pushf pushf dec dec inc inc mov mov push mov add push fstp idiv add enter add mov mov (bad) call mov add lea mov mov mov inc cmp jne mov mov mov push nop mov ja mov add scas mov mov xchg insb test xchg mov mov mov or adc add mov data16 or adc fistpll push push push mov mov mov mov add clc jg jae pop mov or push or ret repz addr16 hlt mov push or inc add adc pop cmp jne aaa sub jne (bad) mov jo int cmp pop pop pop out add mov je sti mov xchg cmp (bad) lock mov add call ja and mov add or mov dec ret lods pusha sti imul aas pop mov add pop repnz outsl (bad) (bad) out sub jbe pop push sub mov loope sbb lock aam or (bad) lock sbb scas sbb sti jne sbb fiadd mov mov cmp mov or and fwait xchg add add and push jg mov mov test xchg mov mov dec orb call push and push mov mov sub rol push lahf push fsts jne icebp push push pusha add cmp in pop sbb mov fucomip mov mov or lret and fsub testb add mov adc pop ret scas mov ja mov add cmp ja mov into fidivrl je jae or or sbb sti shr (bad) xlat push or add popa and fild in shlb adc xor cltd in sbb adc or push adc hlt outsl add rorb lock sbb fnsave loop,pt mov or lds pop outsl mov cmp add vpsadbw jbe mov cmp or or xor shll push scas adc sti push push cmpl jmp ss imul or dec add push jb inc add push xchg (bad) xor jmp sahf nop and mov sub or cmp mov add sbb add into xor addl nop call dec cmpl mov (bad) aas or push insl out out (bad) repnz (bad) xor idivb inc xlat lahf (bad) cmc popf mov push movsb in je mov inc std xor and xor scas mov pop add jne ljmp movsl and push inc in jge insb mov insl pop mov and cmp add jl in mov jne or jle and mov sub push stos mov jg pop jl or nop or mov push push je mov pop fadds pop push out arpl xlat lea test (bad) xor imul jne xchg xor xchg cmp push sarb sub inc popf (bad) ret lock xchg mov mov repnz cwtl aaa jecxz add lock fild pop mov out rorl cmp popf jno pop push test je jne jo imul jo or adc jmp jecxz cmp xor jmp pop sbb sub sbb jle push push sarb mov push cmp add (bad) jl and adc xchg fstl and push hlt mov cmpl jnp sbb jle hlt inc cmp in mov and add rcrb cs push adc sub or ret mov mov sbb or pop xchg test shlb (bad) and pop or and xor arpl push loopne out gs add out lods nop push pop js scas or push mov push enter sbb cmp fistpl push cmp or or cmp pop jg adc test jns add sar lods jecxz pop test sub mov sub mov pop adc aam jmp dec fadd jb add or mov mov sbb cli das jne or sbb add sbb cmp jl movl push mov jb sahf es mov leave add mov mov and add sub aas aaa mov dec adc adc fucomi adc or push or push rol repnz pop or xchg or ret (bad) addr16 fsubp push (bad) xor adc addr16 inc je add cmpsb (bad) and sub inc aas sti or jg testb je mov sub cmp cmp (bad) or ljmp add mov mov add and repz bound or sub pop adc jae scas movb xor dec (bad) mov (bad) subl into push lea sub cld jg js std fnop sub sub cmp jge mov mov insb jmp daa xlat cld pop sub lea and in mov aad (bad) scas inc aad lds stos clc add imul fimull test jp or and mov xchg iret cmc scas ja mov add sub loopne rcrl adc repz enter roll fist sbb sbb cmp int xor inc adc push pop add sub cmp push outsb iret orl sbb or insb sbb nop lods jle adc or pop mov hlt movb daa or adc inc push or fdivrl ret jg lock mov inc mov xlat imul mov cmp pusha xchg loope movsb clc lods sub add adc repz lods andl and jbe inc gs fadds add add clc sbb cld adc cmp mov fcmovne bound push fadds pusha pop pop lcall int3 (bad) rol lods fimul stc pusha or xor mov clc add pop push adcb or ljmp dec xchg inc mov (bad) (bad) push xor adc lods jg,pn pop mov pop je rcrl arpl or out mov dec sbb mov adc cmp movsb sub cmpl ret pop cmp hlt inc add xor ljmp inc cmpsl adcl mov jne or and inc add clc repnz jne cwtl mov pop xor aad adc (bad) clc rcrb or push scas push xor stos jle inc cld add cmp adc leave push push mov push in cli xchg add or sti mov mov push test jg ret or or add pop inc scas (bad) jne push cmp decl es lds push jge inc (bad) pushf or sahf xor or mov jae and pop addr16 sbb cmp mov mov add arpl sbb jge jmp inc (bad) arpl add imul push adc pop pop inc pop push push sbb stos daa inc popa mov out pop cmp sub jo xor or ret push mov test jne test ja (bad) or movnti add sbb je mov mov or mull mov add (bad) jge je pop xorl mov sbb push pop in ret lock jl,pt clc cmp stos add pusha stc in andl (bad) dec mov adc ret add cli idivl pop sbb aaa orl jmp mov cmpl addl or adc sbb and cmp mov cli sbb sbb mov cmpsl sub out mov adc jge loope add mov in addl mov jno nop sbbl notb rolb pusha (bad) jge dec pop mov popf (bad) mov add cmpsb xor rorb add lods push sbb mov mov in cmpb ja push mov pop addr16 and iret adc dec addr16 lcall inc (bad) mov insl lcall test pop xor mov dec add xor sbb cmp jge pop mov pop jbe lock sub or push xchg xchg mov ret add pmulhw and fdivs cwtl push or (bad) push hlt mov sbb test dec push add cmpsb cmc adc push enter lods lcall mov adc add ss test in ret (bad) mov lea jge ss adc mov mov xchg dec sbb rorl adc daa cmpsb test jle call add popf mov jmp xor mov and leave repz je rcrl jg or sbb enter sub in pop or add push jmp mov subl bound mov repz push mov xor mov push lock mov ret rol xchg subl add inc sbb pop mov sbb inc or sbb or mov fs mov cmp sbb orl add jg mov sbb mov mov std jecxz pop inc pop mov adc cmp or push enter push xor adc or pop jne xor pop cmp mov mov jp mov mov sub (bad) decl jg sub inc fdivrl sarl (bad) mov inc rep jmp mov push pop in leave jmp mov jl pop cmp mov cmpsl pop adc stos nop sbb (bad) mov fstp test cmp ja je dec js rep xchg mov je cld lea xor std xor imul add ds in ds pop jmp roll sbb mov jg jecxz test and cmpb xchg cmpb add out lahf mov std in mov jmp cmp xor push shrb shrl ja call jg fcoms ja push mov aas jb std mov xor jmp outsb cmp cmp jbe mov mov adc adc cmc shl pop sub mov xor or add cmc lock das jl divb push push jge loopne jno pop mov aas xor mov jno and (bad) ja hlt adc fnstenv fiaddl dec jmp mov (bad) jecxz mov fldcw fldcw jnp lcall adc or sub sub fwait orw mov pop stos or inc fldcw pop inc insb sub adc je xorl mov jb mov jb sub dec xorps xchg (bad) shll sbb jle clc notb cmp pop cmp and (bad) ljmp cmpl out insl dec jmp divb das or and mov adc jne call bound lods jl and sbb adc xor rol (bad) fild jg mov cmp ror or and (bad) xchg (bad) mov xor rorb inc sub add ret sti add je mov mov cmp jne dec insb mov mov sbb incb (bad) aaa push (bad) or loop push adc in mov and je mov cmp jne push adc add adc mov fbstp add add mov jbe cmp cmp imul or jmp add repz jle mov shr or int3 in dec pop cmp shl mov and out mov cmp jne dec dec inc sarl dec and pushf xor pop jecxz mov ficomp mov shl data16 stos add insb adc pop daa push add insb sub mov push inc inc and int divb add je and je mov je xor dec and sti mov and add sub or cmp ja mov add push add push push out int or incl jmp inc mov js pop sub jmp inc inc jbe jne jmp mov fild std cmpsb test push adc or xor stos aad cmp outsl cwtl pop xor mov fistpll test cmp cmp pop icebp jg push inc mov dec jne pop decb out sub xchg out or sbb dec je fsubr movb into lea lea mov lods push push cs fisub add je das mov das add popa push and xor pop xchg jge mov and stc sbb mov fstp fldt xchg rcr mov cmp in jg aas mov stc in cmp inc pushf or ret psubw inc ds adc mov and sub sbb xchg and inc mov stc mul lret mov lock std es test pop xor out sub pop jecxz add leave sbb sub cs jbe imul cmp mov aaa push and mov bound cmpb xlat fadds int nop lods outsb xor xchg push or push push int3 into stos (bad) (bad) lcall ret inc mov push pop test enter mov inc push (bad) (bad) (bad) jmp hlt daa (bad) lret into pop inc test xchg clc js aas sbbl pop (bad) mov addr16 (bad) (bad) dec leave repnz bound and cld gs sahf mov sub inc aad iret decl (bad) (bad) pushl adc lds stos mov cmp or mov pop out sub push mov inc imul (bad) divl jl xor cmp call mov (bad) (bad) lcall push inc mov push sbb sarb repnz test nop fildl (bad) (bad) (bad) jmp movsb lahf nop inc pop stos clc scas adc (bad) inc pop pushf mov pop pushf mov fs aam imul loope jp (bad) (bad) call xchg pop fnop ds push cmpsb scas mov pop or addl dec in xchg cmp xor in cmp sahf xchg pop cmpsb lock mov popa (bad) (bad) (bad) mov pop mov (bad) repz mov subb and aas or jmp outsb bound xor jmp hlt neg or and push pop and or add mov push mov outsb scas hlt psubusb inc mov hlt mov lea push push js dec add mov push dec xor push push mov (bad) imul pushf pop hlt push data16 add mov andb fstl jmp cltd out mov dec jmp push clc pop aas or adc adc push dec inc push push inc push inc pop inc outsl jb popa outsb fs inc gs lock ljmp imul push dec popa jae push popa insb jne push push dec mov (bad) mov inc pop xlat mov xor mov inc lods cli and or push mov add fildll jne dec mov xor out jne sbb push out lcall fcompl xchg jo add push jbe inc mov sbb aaa test in mov add outsl test or jnp js and test (bad) and jne dec insb ret xor xchg and mov or push cld lock ds ret jl mov xor push shr dec rep pop mov mov mov sub pop fnop (bad) jg cmp mov jmp cmp je pop mov add jae lahf mov mov mov push sbb cmp imul or (bad) mov mov jbe stos ret sub cmp cli notl xchg cmp (bad) jb (bad) add test add jmp mov mov add lahf ret xchg daa out pop clc add jecxz call dec xorb jbe or mov and xor add mov inc adc cmc in push push mov push add pop lea push sbb mov enter dec setne mov lahf xchg sub adc xor sarb mov xor jb cmp fmull or jne or push inc inc or xchg lds and and add dec cwtl fsubl and test (bad) mov fcomip rclb rorl mov leave jne mov push call push xchg jmp lret pop or mov push add repnz je pop in negb pop add sub je cld pop cs xchg add sbb pop ljmp cs mov mov cmp orb fdivl pop pop push xchg xor cld pop mov rclb lods pop das cld test mov pop mov popa lock (bad) mull add decl (bad) std out scas mov je movb dec push cmp sbb add dec jne (bad) hlt lcall push jmp add sbb jecxz push mov dec cmp scas lahf push popf outsb mov adc sbb pop lcall xor call jb push pop add mov jl (bad) cmp rcr adc mov mov (bad) adc add xor or pop dec jmp push stc es add or rcl das adc mov push (bad) pop test test sbb call pop sbb sub lret inc jg cmp xlat int and pop fiadd jbe sbb add pushf (bad) in push call cwtl dec aaa pop pop push pusha push push cmp cmpsl mov pop iret cs mov xchg loopne scas or lret sahf (bad) pusha jae addr16 pop push push and mov stos lods sbb jmp jne movsbl inc inc jmp rclb repnz and sbb jecxz int3 push add add add push xchg cmp (bad) lock pop (bad) pushf testl xchg jne fiadd push mov dec adc outsb fisubl orb mov icebp pop je scas aam popf out or push cmpl push aaa or sub pop or ja and xchg push clc add stos sbb enter adc call push fmull cli push push loopne test je orl mov push cmp sbb push sub mov mov push sbb mov pop decl dec sub dec movl cli mov xor jecxz jg jle mov nop cmovno xor inc mov xchg je dec pushf pop sahf or push add aam and mov pop cwtl push or scas push pushf mov lea mov jo cmc xchg add aas repnz mov mov cmp jne mov out outsl mov or mov jg lea pushw (bad) dec jne pop lds adc inc jmp xor fsubp sbb mov push cmp daa lahf adc sub push adc fldenv xor pop ret sub or loop sahf in or punpcklbw adc loope cmpsb movl or jo call inc jg and fmul dec pop push push push push push add add mov xor subl mov mov cmp sub or sbbl (bad) or loope,pn iret enter and flds adc jae add loopne mov (bad) or insl nop jmp ret xor mov inc sbb rcll add testb mov add (bad) jg je cmp push sub mov cmp pusha add sub jb je jmp cmp outsl lods (bad) sub adc jmp sub (bad) (bad) fisttp je jmp mov jmp mov jmp mov jmp mov jmp push sbb dec std push mov jmp mov mov jmp mov jmp mov lods or call (bad) ljmp test sbb dec aad divl outsl jp jp xor test mov das push inc sbb cli xor adc fmuls out push inc sti lods mov push push fmull sub add mov fnstenv adcl sub ja or mov movsb fmul sti push ret call cmp mov xchg xor cmp jbe push mov or cmp jne in or (bad) mov add jp dec mov mov add jle (bad) dec test jle dec mov inc fiadd call sbb test and mov adc sbb lret sub mov or imul mov mov xor mov cmp jle add (bad) sbb cmp (bad) jg mov inc sbb jecxz rcr mov mov adc outsb xchg stos mov mov es jns jbe bnd add ret (bad) sbb pushw add add (bad) aam dec jne pop pop pop inc pop sbb mov xor out add pop pop es mov xchg or mov outsl xor aam push clc lahf mov ret rorl movsb es mov add out sub sarb mov fldenv push ss sbb mov jbe lahf xor sbb inc movsl jmp sbb ja add mov mov jge movsl pop leave pop push cmpsb dec mov cli into icebp push cmpw jnp cmpl mov sarl push xchg hlt add pop adc xlat push int3 push pop ret mov push jo pop adc cmp popa popa cwtl sub les add (bad) mov pop sbb jnp je cmpl out add adc mov (bad) fistpll or dec and xchg sub js loope,pn push jne jle pop ret hlt lock sub add lods icebp icebp xor sbb mov push or cmp je es aam stc push insl inc pusha sub jne mulb lret cmp sarb mov rolb insb mov ret pop sbb or sbb mov popl dec mov sbb pop inc das mov mov adc decl push lea out push xor daa push out (bad) mov push sbb in jb movl ficomp jp jne fimul inc inc jg mov orb sub inc mov pop push dec mov fldcw jmp jbe xchg adc test or aaa jl xchg jle push add loopne push fnsave adc lret pop movw and adc mov sub insl cs loopne xlat cwtl mov mov das stc pop sub (bad) mov loopne ds cmp add mov dec adc jg xchg push push mov push push adc xor aaa sbb mov mov decl cmp push cmp cld test mov inc (bad) jmp lea cmp and xor mov xchg aaa pushf xchg add inc gs mov sub or fistpl sbb out fadds sbb add cmp clc sub push mov mov or ret cmp inc push loopne je cwtl jle add push rcl (bad) loopne call lahf xchg sti rcrl shr pop cmpsl pop sub and sub or or addr16 fxch (bad) in add pusha push call xchg mov std add pop cli repnz pusha rcrl rcrl pop lds cld outsl push and mov cld xchg adc fnstcw test and inc xchg (bad) xchg aas loopnew xchg pop add aas sahf aaa mov jle dec mov push cld add and cmp pop and mov adc cmp das sub loopne out popa cmpl je adc sarl mov mov xor mov loopne cld add jle cli jecxz je mov mov lds push pop and push xchg clc mov neg fucom mov jmp sub (bad) push jle xor mov fmuls mov dec jmp fisttpll fwait dec sub add cmp fs dec jne adc loopne cld jge pop test jmp aaa add dec jmp and inc pushf sbb (bad) or add pop dec jne cmp or add shl and and lea jmp xchg shll rolb push sub rolb rorb and push add push cmp cmp adc pushf and cmp daa pop and jmp aam sub loopne ja mov lret clc inc das lods out add add lret or mov cmp shlb (bad) cmc mov ss sti pop adc dec inc rcrb shl pop or xor jbe sar pop es jl cmp jge sub mov xchg sbb push (bad) adc shr in jmp and cmc push xchg (bad) xor popa ror xchg lret jl sub rcr mov icebp mov add stc add lea inc pop xor fmuls push push cli mov repz lahf cltd mov push cld std clc sub inc dec jge cmp adc imul sbb jbe add gs cmp mov mov lea or push add mov sub add xchg xor mov push insb lock sbb adc adc pop mov in pop ss jno sbb mov (bad) and push (bad) xlat push lock and sbb push and xlat clc pop pop mov sub and (bad) lods jmp pminub fs (bad) arpl cli pop cmp or pop cwtl sbb add addb pop adc in cmpsl push push das ja (bad) xchg mov push push sub cmp cmp pop lea mov sub push pop in add (bad) iret in stc ss jmp pop mov and mov inc dec ret cmp add dec rorl push das int3 sub ret push mov add nop (bad) or add sub add jle cmp add mov fidivrl pop add jne xchg je mov add and xor xor cmpsb add data16 sbb or mov out inc psraw enter jge or adc dec cmp nop pushf push ret std call cmp push lods add add dec or add xor je jle cltd ss mov lods xor pop stos add lods sahf std cmpsl mov xchg fstpl mov dec sbb adc sbb adc cmp scas mov out sahf mov xchg mov xor add cmp je (bad) pop std (bad) cmp je cmp je cmp je cmp into cmp je mov shlb dec mov inc adc or adc cmpsb out mov aad push or push mov dec cs adc cmp pop jmp cmp inc scas out mov sub call sub add sub mov or pop call call xchg out or dec cwtl jns push pop jbe mov (bad) push mov cmp fstp xlat (bad) test int3 jg inc and mov pop mov cmp emms xor je outsb fnop loopne es xlat loopne repz daa in cmp add sub sub int pop sbb cmp aas or jmp dec cs stos test das shr xchg adc addl in clc inc add cld add clc push push add push mov mov add loope or pop push mov cmp xor (bad) pusha or or or pusha or pop jo pusha cmp pusha imul sub pop xor push fistpl add cwtl inc in inc insb lea lock xor add inc lea push dec orb (bad) xor aas add (bad) xor or cmp dec xchg inc adc and add in jne sbb pop shrb add add lret insb and mov in inc push popa and pushf mov sbb clc jmp cwtl pusha repnz mov cmp jbe icebp jmp cmpsl std adc loope sbb les cmp cmp divps or ja sti add add inc ljmp mov icebp mov jo add xchg inc mov push cmp ror or js imul ret sbb pop je mov outsl fdivrl xlat shlb mov test or sar cmc fisttpl lret ret sete rorl pop add clc cmc mov les mov dec fmull mov test jg mov pop mov push ss adc xlat lods insb xchg divl lock push cmp mov add (bad) cld push adc insl xor call sti sbb mov imull dec in in or inc call clc jg inc hlt js add mov cmp jge leave cmp sbb or mov imul sub add loopne push in out lods pop mov or scas mov lret in jge scas cmp sub fwait xor mov pusha sti dec sbb dec in push pushf adc into aam push je push mov dec shrl fldl xrelease or cmp cwtl push lock (bad) insl xor test add cmpsl cmpl jle loope xchg cwtl or xchg dec jo and int3 dec or lea xor pop test js fstpl dec jne enter mov cmp inc icebp sub loop,pn inc xor decl jne bound rorl in xchg inc sub xor pop dec mov and sbb mov daa popa scas adc dec push push push adc loop lock out pop pop mov aas les jg (bad) in sbb cltd enter cld xor jp push mov push or ljmp jne outsl icebp xchg lock je pop mov mov inc fmull or push adc push aam add mov outsb xor or or xchg shrl mov push ja pcmpeqw ret jmp sbb cli pop dec mov ds mov push clc mov sbb popa xchg out fldl inc push out add scas push test or popf fcompl inc inc or mov loopne vmread pop and mov cmp jl pop add inc adc mov je and in in jne movb (bad) mov rcr sub (bad) xchg cld cmpsb sbb sub add inc cmp dec jg rorb jae imul fmuls in and je xor jge xor (bad) cwtl lea ret fwait jg (bad) popa fstpt pop mov push push mov inc mov push ret sbb lahf test dec hlt call lea jb gs xor cs insb or ljmp inc gs outsl outsb addr16 popa je dec popa insl gs daa outsl fcoml sbb push fisubl inc out inc out and push shrb adc dec mov ja add xor loopne repnz out in cmp mov mov call push out inc stc popf outsb mov aas iret dec adc addl add (bad) in push inc addr16 pop mov push pop xlat mov lods repz js push xor cmpb test nop jge call jbe out push sarl and lahf cltd jle push add cmp stos pop cmp jne test imul roll rcrb jp add add sub dec es in icebp je das outsl repz mov xor cmc add (bad) or jb (bad) outsl data16 popa jb xor mov jae aaa mov cltd popl inc jl mov js loope dec cmpsl add adc and mov push loopne frstor sbb mov inc cmp push (bad) dec in or mov add mov fsub adc mov mov dec or mov (bad) fnstcw sbbb cli mov subl scas cmp es add add icebp or mov ja sbb (bad) push mov xor xchg loope mov fwait cmp test push stos out mov sub decb jno or mov pop mov or push cld jne hlt or xchg js jmp mov add ficom sbb lock push sub or or dec push inc sahf mov inc jmp (bad) mov push and push mov xor cs mov dec pop sbb cmp mov ret sbb sub leave push lods and dec jmp fcompl test js push pop (bad) or inc pop call push pop icebp clc add or andb xchg push dec js inc (bad) inc mov int fadd loope mov xlat mov bound pop fs xchg push popf lcall mov movzwl inc cmp ja mov inc or mov cli and lea cmp ja fcmovb divb or mov adc sbb and imul xor pushf jmp pusha add mov and rolb sar aaa cmp jae cmp jb or dec (bad) push push pop roll and sbb (bad) push jbe pop add cmp lea adc ret lock test std mov jbe push lock into (bad) push xchg rorb or out cld pop cld pop adc xor hlt cli mov inc test je ja mov or jae and je cmp das adc mov add cmp jne sar mov and inc loope or mov pop lea dec imulb xchg decb mov clc push adc inc lcall cmp cs ficoml or movl mov jne rorl xor fwait adc adc in xorb sbb (bad) jb inc sbb inc adc jp and jg xchg ret popa movsb (bad) imul adc lea insl pop and and pop push aas cltd std xor push and xchg sbb or jmp adc enter or cmp adc push and mov pop add jmp adc test and inc mov pop inc xor mov inc inc movsb outsl inc frstor xchg lods inc ss sub xchg test cmp pop (bad) test dec fmull jp add adc ss arpl mov fdivrs push cmp lea sub call loopne push (bad) or (bad) xor add pop lahf mov lock pop push lea cmc push push divl call (bad) push push daa roll sbb es je ja mov bound pushf pusha sbb jnp and push fldenv xchg pop pushl and in fwait mov adc or popf scas clc subl stos sbb movb pop inc xlat xor adc and sub mov mov xor push mov adc sbb xchg adc adc mov add add and in sub push iret cmp jbe mov das jmp jge nop jbe adc mov dec mov xor jmp jb daa or add push push jp cmp js stc lock fisttpll mov pushf inc cmpl or clc loop frstor inc or jmp push mov ja aaa mov mov std ret leave jne mov jns push inc loope cwtl or ret mov mull fcmovnb mov into jo shrb arpl dec jo fs mov or imul les mov pop push (bad) adc cmp xor rclb mov mov or mov aad push push inc add ds ficom push or sbb in nop jo pop jo dec cld pop xor add xor aaa cmc fbld push sub or push gs scas fidivrl jbe or jb jns es imul jg scas insl inc push outsl arpl inc gs jne mov push dec outsl je imul mov gs pop sti dec outsl inc arpl or or lcall lcall pop xor (bad) outsl insl bound sti pop (bad) ljmp inc imul ja nop loopne push andps outsb dec xor js inc xor je dec add jb stc out sbb adc and cmp sbb sbb adc cmp cmp or add jbe cmp cld scas clc pmuludq in in in call in fnop aam in in int3 enter in sarb mov test in in mov in in mov in jl je fsubrl in insb dec push pushf pusha pop pop push pushf pushf pushf pushf push dec dec inc pushf pushf pushf pushf inc cmp xor pushf pushf pushf xor and fsubl andl sub and dec dec inc adc add fisttpll add outsl clc pmuludq cmp cmp in call cmp fnop aam cmp cmp int3 enter cmp sarb mov test cmp cmp mov cmp cmp cmp cmp cmp cmp push cmp pop push cmp cmp push dec dec inc mov cmp cwtl es pushf pushf pushf pushf mov pushf js mov jo push pushf pusha pop pop push pushf pushf pushf pushf push dec dec inc pushf pushf pushf pushf inc cmp xor pushf pushf pushf xor and pushf pushf pushf and adc pushf pushf pushf adc add inc sahf pushf add and dec dec lock call dec loopne fcom pushf fmull ror mov pushf pushf sarb mov test pushf pushf pushf pushf mov pushf pushf pushf nop mov pushf cmpb pushf pushf pushf jo push pushf pusha pop pop setae dec dec cmp mov cmp cmp cmp sub cmp cmp and sbb cmp cmp adc or mov cmp cld and pushf pushf pushf pushf hlt lock call in fnop pushf pushf pushf pushf aam int3 enter pushf (bad) sarb mov test pushf pushf pushf movsb mov pushf pushf xchg nop mov test pushf pushf je insb push fs pop pop pushf pushf pushf pushf push push dec dec pushf pushf pushf pushf inc inc cmp pushf pushf pushf pushf xor sub (bad) mov movzwl shl or push jp sbb push data16 inc mov or in dec and pop cmp rorl xor mov ljmp mov movswl add jp push pop mov pushf cltd mov cmp sub sub pop pop push hlt jno sbb lea push popf dec cld xchg cmp mov mov push adc sbb and jp je pop push ds xchg xchg inc lcall mov jbe ret nop scas cmpsl and aad loope and scas add sbb imul push pusha push push popf pop push lods out push sbb mov push sbb andb fmull gs stos add gs movsl aas inc pop inc bswap and or insl lea enter add jg lock gs jo dec push push dec inc inc dec add outsl fcmove scas sbb pop push and dec push inc out pop icebp sti push dec pop and rorb pop sub mov jge push inc dec pop dec dec dec inc push das xchg enter insl push je mov outsl movsl js cmp je cmp icebp repnz pushf pushf pushf repz cmc negb stc cli pushf pushf pushf pushf sti cld std (bad) pushf pushf pushf pushf jmp loope pushf pushf pushf pushf jecxz in pushf pushf pushf pushf out jmp pushf jmp in out pushf pushf pushf pushf out rcl rcrb aad pushf pushf pushf pushf xlat fcomp ficompl fstp pushf pushf pushf pushf ffreep rol pushf pushf pushf ret (bad) (bad) pushf pushf pushf (bad) enter pushf pushf pushf lret int3 int pushf pushf pushf pushf iret mov mov pushf pushf pushf mov mov pushf pushf pushf pushf mov mov pushf mov pushf pushf pushf mov pushf pushf pushf mov pushf pushf pushf cmpsl test stos and insl jl xchg and mov sbb sbb pop pop daa es or or dec push mov xor or arpl je outsl outsb jl add jne aas adc enter jg int3 mov inc dec gs jo nop fdivs fdivs outsb or dec mov je dec gs outsl jb cs mov dec adc (bad) aaa cmpsl or outsb mov mov mov push xchg add pop mov scas in in outsl xor cltd dec adc or in jo mov or sbb scas pop and or nop mov jns gs hlt scas hlt repnz outsb addr16 jno and jno sbbb outsl ja pusha mov out mov movl mov jb ds jno jecxz dec or imul mov fcmovnb ret jle gs (bad) mov mov jbe rcl jae jbe inc or push outsb fs pusha scas sub pusha mov seta push xchg mov mov mov or movl inc popa jae fimul mov sbb xchg loopne or scas je mov ds sub pop rclb mov insb popa pop mov add jbe mov andl sub sub scas ds jo add inc (bad) mov imul mov add fbstp inc sub (bad) loopne ds mov popa sbb adc push leave cmp ds cmp mov popa jb cs fsubl mov add mov add clc mov add rcll (bad) push ja scas add aas or stos or push fbstp (bad) popa data16 les add add aaa xor mov fsubl ds nop int3 dec fiaddl cmpsb inc cmp das and mov mov lcall add push push push pop adc or jne inc outsb mov int3 add test pop jbe add clc jbe inc fs nop inc mov push test jne test xchg adc sbb push loopne sbb mov jns mov xorl mov and dec xchg mov and jbe fsubrs outsb arpl cmp adc push shr div sub add mov push mov push lret mov andl incb sbb xor lea push xor icebp inc (bad) (bad) sahf add decb dec add or pop or std outsb fwait mov mov adc jne mov push and add fdivl cmp cli sti inc or adc fadd jmp ljmp add and mov ja sub mov inc inc dec pusha jmp xor dec jg inc pop add arpl and or pop mov mov cmp jbe in jg lret repz je movzbl push push call mov inc jmp jb add or cmpsl jne pop mov aas jb add ds mov shrb push or cwtl pop test jg (bad) (bad) out and sti je jo mov loopne add in out cmpsl je enter lcall xor push and fs out xchg ret leave jge cmove lods adc gs ja nop mov sbb mov add add mov pushf clc xchg insl jno add push and dec pushf adc outsl jne xor mov xor lock inc add repz cmpb jbe adc sahf divb aam lds clc add mov push sub inc pop xor dec or fcomi mov lcall mov add sub jb sub je (bad) jae cmp inc cli roll sub adc mov ljmp or or sbb jae inc dec jne aaa (bad) js daa or jne sarb icebp jge mov inc dec mov mov jnp push xor div dec cmpsb cmp mov ret push insb ljmp mov adc (bad) mov sub jmp mov dec jne push mov sub xor push add popf outsb cltd rorb sub mov sub movsl sub and jo inc push sbb pushl mov negl andl xchg insl pusha (bad) sub dec inc pop arpl add rorl orl rcrb (bad) scas jne daa andl push and fistp ret inc faddp add add sub add rorl (bad) fdivr mov sub outsb xor insb cmp push lods push sub rcrl loope nop loopne mov ret ffree ffree ffree pop aad add aad int add frstor push ret jl or insl sub pop pushf pop lds cmp add push mov mov push xlat outsl jmp inc loop xchg sahf test imul mov repnz or out dec ljmp ja sub cmp dec push mov jne dec aam imul dec insb push nop cmpsl mov int3 jp movsb cwtl pop outsl mov hlt je call pop rolb or out outsl dec jne aas nop dec mov dec imulb shlb push or mov fs icebp sub xchg andl and movb repnz jl or (bad) mov and imul aam cmp jmp aad pop add faddl sbb adc push lock sbb jg dec mov or fldt jg clc lock setne jmp outsb mov or dec dec pop outsl dec pop addr16 movb and mov dec ret mov out ret pop sbb lret push sahf icebp bound (bad) xor out adc loopne aaa jmp and pop rorb mov sub (bad) fst mov mov incb ja jo loop add jo (bad) (bad) inc ja or sub add sub rorb push mov xbegin jnp vmwrite ret inc mov add nop (bad) in adc orb enter adc push icebp out mov jbe push pushf or (bad) scas divl xchg pop int3 mov push or push outsb xor pop out lods mov push mov and les add and mov (bad) ret or leave or push mov add add add push dec xor or pushf pop xlat addr16 fbstp add sub sbb pop je lret xlat popf test insb jl push dec bound ds mov sarl mov and mov mov aas pop cmp push add lcall movsb lea mov add js mov imul push push hlt lock (bad) clc cld push jnp lahf cld imull lods mov testb push dec hlt adc fstpt mov and lock cmp push ret dec sub pushl adc mov push mov mov ret das lea sub and pop push cmp loopne cld test es mov xor mov decb rolb movsl scas movsb pop pop ret fs inc cmp sbb dec fidivrl push pusha add lret pop lret mov xor jno or lcall mov lcall pop lahf mov pop xor jmp inc push cmp pmaxsw (bad) aas xor xor mov cmpsb mov mov inc mov and pop cmp mov and cli ljmp dec jo mov mov or xor push inc jl jmp or ljmp (bad) jne scas xor xchg divb cmp dec je mov mov pop sub jbe rcrl insb sbb pop inc (bad) lods mov mov push add mov jne jo (bad) xor cmpsl mov cmp orl ja xor cld xor dec jb push inc xchg ss aas mov (bad) jae add and ja cmpsl mov xor aas lock sti pop jbe mov jnp adc xchg std std aad jne les movb cld xchg flds push cmp dec js mov sub ja xchg cmc mov add sbb arpl pop test out cmp jmp push xchg call sub (bad) out add orps out jge adc or push or jne repnz inc pop insb sub jns sub addr16 lods mov call sub neg fsubrl jne cs and lods jmp enter bound inc mov sub mov add pop fldt cmp jae fildl sub testb jae ror movsb xchg pop mov rep lcall jge cmpsb push sbb jg lds pop pop mov cmpsb mov ljmp cmp fwait cmp or movzbl add and in (bad) jbe jne (bad) cmp loop sar or jl je ret je pop jmp xchg ret and mov (bad) fistpl lcall lea mov lcall jmp push pop jecxz mov adc and mov push cmpsb repnz sub je inc pop sbb xchg mov fsubrs ficompl sub lea and xchg sub je or adc rcrl push mov mov cmpsl enter pop outsb adc pop outsb inc push hlt hlt out and xor stc push jne xchg repz add mov aad mov lock xor inc inc mov mov mov mov outsl and and (bad) dec lret (bad) pop js mov add nop mov cmp int3 pushf (bad) fdivl or push and mov jecxz dec (bad) imul ds leave adc pop (bad) cltd lods out fstl cmc (bad) mov pushf mov outsb mov inc insl mov mov or je mov inc je mov dec je mov jl mov mov ret ret test xchg adc (bad) adc mov (bad) cmp mov loopne mov mov dec roll jp mov xchg ret xor hlt hlt push les icebp shr mov adc daa test add push push stos adc dec jl mov int3 int3 jne lock les sub call test test mov or pop movsl leave data16 rcrl shlb sbb xchg sub add jge sbb mov dec cld lea out adcb or fbstp push add jbe cltd adc lea popf push mov das adc aas inc push lea add sub stos or mov (bad) stos incl mov neg jmp or enter xchg push mov cmpsb call je lods mov inc dec add call in or jg dec mov stos cmp jne pop pop lds dec sub pop sbbb mov loop lret mov repnz aam dec jge add adc sbb push jge pop test icebp jecxz add daa shlb das xor add rorb add aas jbe test jge movzwl sub jl jae mov jnp lea jbe in mov stos sbb pop adc je add mov movswl mov add lea pop clc cmp sbb call dec cld jae mov mov push je insl cli movsl decl inc dec inc dec lods or xor jge lret fwait xor sub dec aam test ret mov cmp jl pop sbb mov out into je mov stos neg sbb stos jmp inc scas add fild je stos loop paddsb inc data16 xlat mov clc dec test ja pop cld push mov lret inc mov negl decb jbe sub (bad) add das clc add inc mov mov sbb test cmp adc mov or es pop cmc or enter repz inc test push lock sbb test stos xor call sbb sti add push loope dec je inc jne pop mov ret xchg repnz mov pavgw or repnz mov lret adc pushf fwait inc push mov xchg and ds je push push cmp (bad) fmuls jg mov sbb cs or jne pop add rolb push mov test add inc add and and fucomp idivb and sub inc sub sub cltd cmp push sbb and into mov sub or ds push xor sub xor flds loopne andl dec dec cmp notl lret adc add loop and hlt mov testw fdiv mov jle add movb hlt addr16 push fcomp je,pn imul adc push push pop faddl loope adc push pop std sbb rcr scas push fnstsw fwait (bad) lods aad mov testb je fidivl jne lea mov (bad) js mov nop shr and add push out in adc stos mov add jns lcall cmp pushf or cmpb jb movb mov or ja jmp data16 pusha xor fisttpll leave jmp mov xor stos jge add shr mov clc mov xchg out xor aad jbe adc loopne decl rorl je inc mov fadds xchg mov mov add pop mov push inc sub mov loopne jae dec add jle inc loopne push in insl or popf mov xchg cmp mov out mov setnp add jne pushf and jne dec mov jmp mov add aas and mov ljmp enter popa shll jbe pop jmp add je mov iret inc push ljmp rorb lret loop inc ret f2xm1 fwait pusha js sarl push fldz cmpsb orb lods or sub xchg sbb mov jne inc sbb dec and fistpll out fldl sub cwtl jne mov push xor sahf add push std inc jbe mov adc aas jmp fstpt rolb dec test mov inc add push je pop insl and mov imul int3 push mov test or fimull cmpsb (bad) fiaddl jmp aaa mov lahf inc imul push push fldl pop lock imul push cmp aaa add sbb add sub adc dec push xchg push add test fdivl pusha lcall fist nop pop pop add push in addr16 insb shrb mov aam sbb (bad) cmpsl es push fldt fstpl fwait and push flds cmp jo pop in mov fcmovnb fldl inc jl daa inc mov imull fnsave push adc adc cmp clc push inc arpl sbb adc xor or cmp inc stc inc xchg xchg fsubs inc mov add mov cltd (bad) cmpsb ret cmp jp xchg fildl xor fstpl fwait cmp pop addr16 (bad) pop add xchg movsb dec outsl movsl xor pushl push hlt fldcw mov (bad) iret test lret loopne cmp scas pop xchg add iret and idivb dec sub push enter fidiv roll fldcw push jmp div pusha adc mov mov icebp sbb (bad) imul std (bad) les call inc lea outsl lcall xchg ja and lcall or jb sti insb cli (bad) cmp push inc out (bad) ja adc push testl add inc dec jne sub dec mov aas add idiv imul jbe mov add sub ds ds add pusha or das mov or lds outsb call (bad) add rcl std xchg call jg jl mov push clc hlt or inc push push rolb sub pop inc fild push cmp mov adc inc inc and jge (bad) repnz lods mov xor add decw sbb sub imul fcoms push sub pop mov mov pop stos shl or inc push mov pop mov mov adc aas cli js adc pop enter insb pusha loop add imul sub stos xorl dec xor push hlt and hlt mov cltd xlat or ss xor xchg je je enter sbb insb cmp stos add mov xchg inc icebp call mov add mov jmp rol (bad) sbb inc sbb and inc lea mov inc out cwtl xor jp jbe pop cmc ret imul xchg pop aas sahf mov jecxz orl jb pusha in test (bad) push fsubrl icebp mov sub and nop (bad) rcrb sbb mov inc pop jo pop pop add clc or sub mov pop divb inc hlt out push cmpb sub xlat push cmp add add push lea or lock repnz cmp inc in add fbstp push in jge jae pop cs adc (bad) ret jo adc and in cwtl mov jo inc push adc test jo cmp push sbb sub vmread mov dec xchg or sub push dec negb inc pop mov je or xchg mov or mov std roll sbb jmp cmpl sub mov lods sub jne add mov arpl pop push inc dec adc sbb movsb ja je sbb xor pushf les test inc mov jne add cwtl in pop imul push iret in ret mov cltd xor psubusw leave push int cltd jmp jmp cltd js mov jne push push ret outsl inc cmpb jne push or ja inc add testl fdivrl sbb ss adcb fadds fidivrl add push cmp or push pop mov in fsubrl pop incl adc loop nop test test (bad) call or mov sub scas jbe adc (bad) push cmp and nop jns loopne fsubrl push add mov (bad) pop mov pop cmp jne mov (bad) hlt pop xor xchg fisub push jne mov lcall jns xchg sbb or scas mov or or or push es push mulb sub mov lcall addb push xor (bad) jae imul sahf iret add xor test xchg data16 dec shr add cli xchg jo pop sbb int3 sbb or push mov mov cltd test pop pop bound std inc mov (bad) bound out jb je call shrb cmp pop jo push cmpb outsb test sub xor push pop popa test je push jb outsb add jmp out aad sub cmp pop mov add dec and stc cmp mov push mov and test lea cmpsl or xlat call jl push out rcll dec jg je mov add jbe sbb pop or je or je jmp cmpb dec mov cmp xorl sub dec pop movsb repnz sbb add or cmp xor mov mov (bad) test nop popa mov ljmp outsb dec push xchg jmp inc rorl push imul out ret mov fisttp fsubrs repz inc call popa out add xor cs nop lret sbb xchg in cwtl xchg sub push jne sbb xchg out lret inc jg cmp out and jb push daa jns add dec add out xor lret cwtl inc jmp and dec ficom mov xor adcl add pop cs add fwait pop dec stos cmp ret xchg enter (bad) adc cmp xor out adc or lods into lods or cs nop ja jo cmpb outsb sbbl ja (bad) or inc xchg jmp sbb test jmp ljmp or add test icebp sarl (bad) mov stc mov adc sbb push loope inc pop inc mov jl (bad) in pusha fcomp push cli or dec das push dec jbe into xchg xchg or adc outsb xchg cmc add pop lods popf rorl adc pop into (bad) lock ret jne into push aas jmp push mov xchg adc inc cmpb or inc mov in aaa adc or aaa pop and cmp jg loope,pn rcrb jmp je mov cmpsl sub clc je pop fstpl dec (bad) push sbb cltd jl mov pop mov add lock pop pop mov and mov mov inc adc sub jae jnp roll jb push sbb scas fnstcw mov mov jne pop enter xor mov dec push ret ja and mov add xor cmp mov inc push or push dec pushf dec xor sahf sbb dec js cmp mov add mov in mov test ds out ret sbb pop jl decb stos cli pop in (bad) cmp jne incl call pop pop arpl ret sub and sub je dec je sub (bad) ja imulb je jmp mov jmp push push push mov jbe push inc mov jle fadd or pop dec (bad) pop test aad adc sbb xchg add jg push adc fnstcw pop xchg imul adc into sti cmc adc push inc mov and mov cvtps2pd add push lock jmp or push in call inc xchg nop add mov jne andl ljmp orb mov xor sub add sahf fcomip std paddw imul add cmpl jle adc pop push popf in push and out cld gs xchg out cmp psubusb loopne jecxz xor cmpsl and lock movl add dec clc and div fdiv jle push mov ds lock into sub xchg inc mov dec add cmp daa push sbb insb push setae sbb adc dec mov enter cmp pop hlt lods xchg mov and add sub cmp add jbe in pop jmp loopne bound mov or jmp mov and in call mov mov cmp xchg xorl hlt sbb outsl sub shr lock pop push movsb or loop push jmp cmpb ja fbld fsubrs (bad) push fstps push scas lds fmull lock mov jbe cmpb jle and fs jne popa or mov add or lds or daa jmp jl cmp dec cmp aaa xorb xchg pop mov and cltd cwtl pop (bad) jmp or jl jne sarl push scas push test fdivr fildl adc das fsubrp add sub fcomps xorb test add inc repnz out dec andl jo add sti bound pop jno mov jge jb push fs cli xchg loopne push push repnz mov mov clc fstl mov xchg out inc sub jmp push pushf push movb je mov add or pop and pop lcall add xor cwtl adc dec (bad) int3 push push cmpsb fisub fadds sbb add pop inc mov inc or add sbb test test xor xchg mov (bad) ja sbb test jne add add movl and and push pop sub loop push test cmp sti aas mov pop repnz dec dec cmp into rcll insb aas xchg cmp popa dec int ja pusha (bad) (bad) or mov jno cmpsl pop mov mov xchg aaa jnp xchg cmp adc dec cmp jbe jne dec cltd je les andb aam sbb mov sbb fwait jmp sbb inc xor sbb jle (bad) (bad) push jmp fstp push repz dec push push add sbb push fdivr sbb sub jb or xchg or in add sahf inc jbe fwait enter jb mov mov aam cmp adc (bad) test pop das rclb les sbb les push push addl jo push (bad) call inc adc xchg (bad) pop lret add mov dec jl pop dec push (bad) in out add sbb xlat shrb test sti nop pop fmuls push push mov mov lea dec lret hlt pop mov (bad) rolb add cmp (bad) sub sbb mov or pop and pop add scas scas xchg push testb dec in call loope int sbb dec call xor call outsb shrb dec fdivl not add pop pop mov inc mov idivb jl je and (bad) xchg cmp add pop add into or or sbb xchg pop pushf cmpsl jb push ja bound test push jmp lea lods cmc pop mov jmp push in mov mov add cs es or cmp or fisubl loopne sar adc add fild fucom push mov clc cli repnz push cmp push stos or sub aas fmull cmp jnp jne scas pop iret or dec (bad) (bad) lea and test (bad) inc add or repz sbb pop adcb xor xor inc je sub je scas ret xor lcall cltd jle lahf addr16 xor lods push sbb pushf or fild lock add jp push ja pop mov fdiv dec pop fldt dec mov in adc jmp mov and pslld add jmp mov pusha xchg aam jmp push xor repnz loopne add in loope loopne jle jo lea mov add mov jae pop xlat add sub and xor sub xchg orb scas xor and jg xor sbb sbb add and add aam cmp and pop and mov xor mov or popf gs mov scas js rolb repz arpl xchg insl mov or jmp rcr and test inc mov dec bound sti rclb je pop rol bound cmp and popl shlb lea test and ja jle movb mov lahf dec cmp mov sub popf sarb mov xor push lea cmp push out stos ja jl data16 sub or cs or cmp in mov mov mov add jl mov pop test nop inc push or push xor jnp mov adc hlt nop iret push sbb fcoml mov mov xor cmp add pop push adc movsb sub sbb inc pop out or imul fwait push fsts fstpt rolb mov (bad) mov cmpsl fild push or adcb les xorl push dec adc ja cmpb mov xchg test jp xchg stos mov clc aas les js hlt sti add inc and ret fmull add mov (bad) xor mov cmp outsb pop incb jg cmp sbb loop (bad) call sbb mov inc scas ss xor jo pop pop mov sbb fistp or call jo push sar lret adc ljmp add sub cwtl and add inc or inc or (bad) or xchg jmp fcomip adc test pop pop loopne cld push nop sub mov push add cmp shr rcrl dec jbe xor mov or outsl cmpsl mov hlt clc push in push loopne and aaa repnz dec loopne lock int mov (bad) dec pusha and enter mov push insl add icebp dec jo ja movsb enter adc (bad) je ja jbe into enter adc cmp pop push cld and jb cmp je jmp xor inc mov sub jmp and sbb ret mov add push pop lcall or push cmp daa movsl mov push mov dec sbb or mov (bad) push xchg mov jnp cld bswap adc sub xchg lock inc js sbb inc or pop ljmp test inc cmp je in mov movsl add adc mov add pusha cmp pusha gs (bad) repz jnp jae or enter mov lods aam fadd faddl test loope add jle jecxz lea outsb sub out shr sub in jb movsb test leave and int nop mov and daa push int3 jb pop ret sub and mov addl xchg (bad) std rolb or mov mov jae jae sti adc fdivrl push xor cmp (bad) ds cmp enter inc inc push fadd lock cwtl outsl loopne pop mov cmp push nop inc and jp loop pusha imul je sbb jp pop scas lods mov mov sub cmpsb sub jae insl andb mov call xor in fidivl cmp imul das mov mov cmp mov out scas inc js mov mov sbb sub fsubs shufps adc leave dec cmp lods pop inc cwtl cwtl adc outsb mov negb adc shll cmp push test js daa push insb lcall out push sbb sbb loope out lahf sub pusha adc enter lods inc in add das add push jmp mov cmpb or adc cmpb xchg cmpsl int3 mov pop aam mov adc jne cmp pop xchg mov fucomip clc jne movl jo pusha ret jnp cwtl cmc mov lods jne pop cmp sbb cltd jae sarb push in xchg dec mov fisubr xchg dec cmp and out out push sub sub xchg cmp mov (bad) insl mov js pop push push (bad) mov cmpb sbb je cmp add and (bad) dec jmp dec jle idivb xor jmp sar shlb add inc mov mov add cmp add xchg add sub pushf les inc lock aam js xor cmp daa lds pop add (bad) ja xchg fs div jle adc and lods push inc leave incl inc pop jg mov scas das adc int adc jl mov and sti adc or sub jge rcrb adc (bad) xchg xchg (bad) inc xchg adc dec das cmp hlt jge int add jl jne sbb shll dec push push fs inc push scas aad inc pop add dec push adc mov sarb (bad) lods jne fildll push inc pop fwait movsb out xor mov (bad) dec jg xchg or or mov and test fwait movl pop iret fisttpll es jge pop mov mov or push sub ret pop arpl ret daa push daa xor sub and push push jb fwait add dec and scas pop popa or and out pushw imul add inc push (bad) rorb mov jp or add add xchg clc sub inc mov aas ljmp je mov out data16 jge jb sbb xchg adc adc mov lock (bad) dec cs out add adc or je scas push push enter push clc sub aaa sub fiaddl add and sub jbe in and push (bad) iret or shll mov push mov cmp inc daa dec ret enter adc add or push xor inc inc inc add addr16 iret add hlt dec sar jo cmp mov mov je pop aad out loope (bad) hlt test add mov pop cwtl in push mov fwait jl decl ret fidiv push mov sub jb inc mov mov outsl xchg fwait stc stos (bad) sbb lret jne (bad) jge jo out or push jg inc jmp aas clc pop ja pop or setb rcrl or push or adc xchg mov adc xor dec sbb scas data16 enter jnp loopne xchg call or ret mov movsl mov add test pop mov mov loope sub pop mov or xorb fldt fmull outsl popa mov push xchg mov inc inc cmp cwtl (bad) fmull bound lock push scas movsl in leave mov cmpl xchg rorl push les es jne jmp push insb ja sbb push pop xchg shlb or ja add sub aas sbb jne push scas lds or cmp inc popf or pushf (bad) xor mov fiaddl inc sub lea mov sub iret mov nop add sbb fdivrl push mov cmp mov push sbbb pop jb enter das mov movsl mov xchg fwait pop push pusha mov mov sub pop inc and imul xchg fcomp mov push fld push imul dec repnz sub and int3 mov or out enter shlb imul sbb add and aas ret in daa add add nop mov mov xchg push push hlt mov dec jge cld cmp nop xchg mov lock mov pop dec add push lds or sarb xor mov fs cmpb add fs cmpsb mov popa insl pop jo mov inc push (bad) jg and lahf dec xchg sbb pop push pop (bad) fbld cmp ss or test in in cli mov push (bad) lods or mov (bad) cmpsb push sbb mov inc push add cld in movsl aam cli push mov fwait jae mov int3 adc nop add jge pop or ret pop jmp in mov and shlb pusha add or jmp daa fimul fmuls movsb add scas mov xchg adc xorb or (bad) or in cmpsl int3 sbb fst in hlt push and mov loope test pop or push or pop dec sar or inc jb gs jo pop adc xor inc xchg xchg lock inc xchg lock test pop dec ret xchg xchg sbb cmp sbb add (bad) (bad) mov adc fadds or mov std pop (bad) incl (bad) adc mov and and fstpt daa sub loop jo dec fistpll cmpsb mov inc jmp push fiadd or movb loop xor fidivr mov in xchg add ljmp ljmp call je das test inc movl (bad) mov scas sbb pushf adc daa mov inc push dec gs or sbb (bad) popa loop leave pop xor lea shrl adc fldl sbb or pop movsb fsubrl or mov imul add adc inc sub add sbb fldcw dec sbb push add outsb jae and sbb testl mov adc stos (bad) fsts adc dec mov cmp sti std (bad) mov push movsb pop mov daa push sbb cld pop adc clc add add ja cmpsb lock je push mov scas dec sbb mov hlt fmull scas add xchg ret mov lea sub sbb sbb push sarl das add leave fisttpl scas orb xchg data16 dec cmp sete incl push sub inc ret (bad) fsubs in (bad) sbb inc decl cmpl aas (bad) push inc out shr mov xor jb xor mov lock pop incl scas add cmp mov cmp xchg and cmp rolb xchg pop ja (bad) pushl loopne test mov mov ja dec or dec incl int out xor int enter mov stos jmp fcoml hlt sub lods or pop xor and (bad) inc notl add xor pop cmp std lret lret mov fildl enter push xorb sbb iret mov jnp pop mov cmp jne movsb xchg ror sbb pop outsb mov movd push xchg fs mov pop int3 or jge and fnsave pop mov inc inc jae jbe fs jmp outsb (bad) lea cmp je (bad) pop sub outsb jne lret cld cmp hlt push out push out jns mov fsubrl int3 aam mov (bad) cmp (bad) fdivrs sbb push pop lods jo scas or cmpsb pop push push pusha xchg cmp push mov test xor sahf idivl xchg insb mov js push push pop push jo push mov dec push jl jle cmp in lcall sub and jns cmp add sbb mov adc mov adc out in or xchg or dec add outsb pop imul (bad) clc push nop inc cmp out hlt cs push in in sahf xchg out fsubr insb in daa out in cmpsl loopne or cmpsb add iret leave cmp fcom inc cld (bad) hlt leave cmp int3 cs pop cmp out push (bad) les add jbe sub ja pushf mov popf mov outsl mov sub and jbe movsb push adc (bad) cmp add cwtl mov cmp push xchg daa mov daa dec nop push mov mov in in lods fs mov enter pop shlb test mov jge mov test mov dec pop pop xchg sub clc jae xchg lret pop fdivs enter adc lods mov aaa xor jnp mov sbb mov jge sub pop enter push or mov and xchg cwtl nop add test imulb (bad) ss mov mov nop aaa ljmp roll mov sti pop inc sub adc cmp hlt mov lea stos mov push test inc push lea xor jb js les sarb cmpl divb add sti pop sub or faddp push pop ret fdivl dec das dec notl or jl xchg cwtl mov mov cmpl mov xchg les or movsl mov arpl jp mov subl fs enter push roll adc cltd test shll cmpl movlhps jecxz aam and dec sar clc lea outsl mov (bad) pop incl sbb je mov pop inc aam mov add sbb sub imul sbb add es sbb mov cld jb xor push or mov and pop nop fbld aad pop and aad call aad pop and or or mov dec xor out fwait daa pop bound (bad) mov test daa daa lods test jge push pushf shl jns aaa shlb mov adc ret inc es push push sbbb mov pop mov int sub mov pushf sbb and dec lods and and dec xor xor dec xor mov xor and dec les leave and push enter mov sarb aam rclb dec bnd mov clc pushf loopne dec repnz (bad) repnz push aam dec push mov lock repnz mov mov jae sbb inc push adc or dec add pop mov inc fs jne inc loopne add rdmsr fcmovnu dec mov dec adc outsl fs outsb (bad) cld cmp pop outsl jb inc insl jo inc jb nop jl outsl insl push je pop push cmp bound (bad) sbb dec insb jns jo rcrl pop dec add adc mov repnz aaa xlat and clc pop sub sbb mov mov adc dec xchg out (bad) mov jmp sbb jo jl mov dec push push fyl2x out mov cmp or push adc les adc xchg mov mov push mov inc add dec sub (bad) iret repz jbe cmp sub jl pusha aas es popa xor push adc dec dec inc sbb testb addr16 sbb sub mov pop add (bad) xchg inc add xchg jne inc inc or insb mov fldenv stc pop addr16 adcb test sub addl pop leave insl (bad) rcl jle or pop push inc jb lret xor dec shrl ds movsb sti mov adc cwtl xchg sub fnsave xchg fs cld (bad) adc or cld sbb and dec insb dec outsl xchg push adc dec outsl frstor sub popa add jb sbb int3 inc scas inc cs adc xchg jo (bad) xor shrb dec ds dec xchg (bad) mov mov xchg test int mov mov call jo arpl mov jmp jg fisttp aam fwait mov fisubrl icebp pusha add fist pop mul jbe lcall cmp lret xor mov in push add outsb xchg pusha or call lds popa call mov js repnz je fbstp in add loopne inc scas loopne fistp loopne dec push test loopne add add fildl in enter loope in jb sbb inc loope xor and test add or bound add sbb call (bad) mov out iret push scas rcll sub dec je sbb sbb mov lahf push nop es jbe out shll iret adc popa jae and fs add fisttpl cmp clc mov add hlt mov inc dec hlt dec fdiv mov imul mov cmpsb xchg in dec sbb mov pop dec call sahf es jnp test jae fs loopne movb dec ficom jl add fidivl dec fcmove int3 or imul (bad) jno jecxz das shlb xchg lods xor mov sub mov inc ficom jmp rcrl sub sub jno shrl mov je jo mov iret fs adc push enter iret es std in repnz mov sub add (bad) les and add pop push add ss add adc mov cmp dec push xchg dec pop jge pop push push pop sbb repnz mov lret popf insb jnp mov add xchg pop ret ds ljmp (bad) insl push test (bad) dec dec aam xor (bad) lret cld mov test sbb testb sbb push add andb sub mov paddw nop pop cmpsb or test jl pop les adc and xchg clc jmp jle mov and mov lock popf or inc xor lea (bad) (bad) push call inc mov inc add inc lds and pop push fs mov push add pop dec inc fsubrs dec outsl sahf jmp inc mov jge push mov lcall jle dec jnp inc pop fsubrl out cmpl mov insl jo mov jb lret xchg cld roll mov xor jge loop push aas jmp mov xchg imul ja sub or adc loopne div and or int3 jmp sub lock mov sti push (bad) mov mov jmp mov hlt inc and pop ret mov xlat adc nop mov cmp inc cmp push xchg add push inc aaa sub jmp sbb in adc test loopne in add inc loopne or add rcl xlat and mov sbb (bad) lock adc pop or adc adc dec dec enter in icebp push je ret outsl cmp and aad aam xchg sub xchg jmp push fisttpl fs adcl add imul cmpsl sbb adc pop add or push and push lock dec dec jmp adc cmp dec mov xor inc (bad) call and adc inc xlat insb jmp aam (bad) cmp out mov and jno add cmc pop out add repz pop jne push sbbl cmpsb imul or leave std dec cmp neg inc xchg lock fsubs pop in push js sbb inc mov mov cmc movsb imul inc outsl push movsb nop pop pop iret sbb adc jns pop jmp sbb fadds push mov and push dec add (bad) dec je mov inc cli adc out into or cld ss popf aaa test es imul hlt and hlt sub mov jns popa jmp pop xor (bad) call jns in jp cmp add push mov inc mov and cmp (bad) mov inc lea jmp insb or (bad) jg andl xchg pop push shlb ja cmp (bad) cltd ss add arpl inc pusha xchg dec rcrl push test in daa sbb fstpl xchg xor sub rorb lret xchg add loope or or jge add add or or mov pop sbb adc mov pop addb or psubq inc mov sbbl mov cmp ja xlat inc jbe mov out lcall jno divl mov nop mov out cmp push adc sub dec jno pop rcr loop (bad) push xchg cli sbb add pushf pop dec ja xchg je cs rcrb in test movswl insl or (bad) nop arpl clc add add fldt and dec cmp es fnop lock test and jae add sub push push xchg in xor call shr xchg dec loopne pop enter loopne mov push push fsubl test fnop movsbl xor inc neg aam push dec enter shlb sbb rolb mov push mov enter and enter arpl cltd (bad) sbb sub lret jmp sbb jle cmp rolb das xor test add and (bad) mov add jle (bad) icebp pop cmp idivb cltd mov or repz fidivr bound sub iret jg sbb les xchg mov popa cwtl aaa mov xchg mov fisttpll mov dec cmp in mov test test cmp pcmpeqd movsb movsb cwtl nop cmp and movsb mov aad mov xor pushf cwtl mov xchg stos push lock xchg jno jmp adcl jmp imul sbb sub pop mov dec gs mov in mov adc movsb mov loopne imul cltd pushf xor mov sub mov in add and jmp stos in repnz lock and adc mov int (bad) in ss cmp repz sbb repz xor or aad hlt sbb test hlt addb jne lods push sbb mov sbb adc hlt cmp test dec adc jns nop dec push push push fisub push xchg stc xor sahf out push fiadd cmc and pop sarl jge mov imulb push (bad) mulb cmc adc les sub inc mov nop pop push jmp stos or test push dec dec fcoms push xor xor inc xor xor push pop dec fcomps ss cmp enter cli in in adc dec jno aaa loopne (bad) or adc (bad) (bad) fdivs fsubs test xor aaa rcl iret movsb and and roll xchg push or psllw pop insb enter dec aaa cmp and jecxz les mov testl jbe xchg aaa jns repz idivl push pop repz dec daa aam pop inc popa enter jle mov xor or xchg mov in mov test jge jae insl inc ja mov mov jne mov add lods aaa sbb test test xor popf movsb aaa movsb sub jno sbb lods cmp cmp xor aaa cwtl jno (bad) test inc loopne aaa dec mov xchg jecxz nop ja sbb pushf or jecxz mov clc cmp add or add mov sbb xor int3 loopne sub cmpsb cwtl test jb movsl testw movsl add mov mov inc ret jb xor mov jmp movw rolb notl pop jno xor add inc dec cli push icebp mov je outsl and or cwtd in xchg push xlat scas sbb push jbe fstpl fwait enter inc daa pop push add js or and push and (bad) adc push add sub push out pop dec sar repnz cmpl jb dec jnp jecxz dec sub rcrb jo test jo jns dec jne int mov pop (bad) and popa and push adc daa xor das xor in fidivr insb add inc outsl jne xchg inc dec std jne jb outsb arpl jmp dec pusha add addr16 (bad) test packssdw adc arpl fwait aas push mov imul inc arpl mov js cmpsl and inc iret push and mov mov adc (bad) pop jp daa mov aaa fsubs es xor out inc pusha stc pop clc fcoms std jle test and jl decl dec ja test xlat popf and push inc xchg cmp sti pop xor xchg insb inc sahf out das add movsb loopne pop ljmp lea jl cld stc ret movsl cmpsb (bad) std pop mov xor dec push cmp lcall pusha test outsb push xchg aaa adc mov (bad) and sub mov inc mov mov or (bad) scas in push xchg xchg mov push inc testl dec test inc push push gs dec loopne push push xor or jle push fdiv add std loope cmp xor imul xor lahf mov push pop push ret dec mov mov dec outsl fmuls xor sbb mov cwtl cmp inc icebp out or pushl out jb dec ror and out sbb shl (bad) push cmp push pop out movups mov lds adc push stos xlat or daa sbb adc lahf jno scas icebp test cmp sub jnp je outsb (bad) adc es fsubs repnz xchg add mov cmp mov (bad) imul (bad) daa (bad) xor lea add inc cs sbb or inc mov call mov mov inc ss ret xchg xor pop jle mov std jmp dec daa mov lahf add inc add push mov pushf sub repz or cmc or xchg jle jno xchg pop and push mov add adc stos lods add dec into sbb repz fsubs add test rclb pushf and push xlat pop inc js mov loopne ljmp pop or lret aam push (bad) rolb test cmp sbb xchg mov mov push xor sti cmp lahf and es mov cmp movsb push fld sbb loope mov adcb sahf in daa lock add and push daa inc add mov and and decl cmpsb jl inc xor inc sbb add or jb pop ficompl adc rolb adc or or loop inc dec push inc push (bad) jne xchg sub cmp dec int mov add out sub mov dec aaa lret pop mov sbb jne out or daa mov jb std inc push inc mov jecxz mov and dec rcl pinsrw outsl mov subl jae jne fdivrl test sar mov mov lcall jns cs cli xor rcrb lock sub outsl and inc hlt lods sbb xor cs lods xchg cmpsl (bad) stos pushf pushf faddl shrd pushf nop xchg xchg xchg pushf pushf pushf pushf xchg xchg xchg xchg pushf pushf pushf pushf cwtl cltd lcall popf sahf lahf pushf pushf pushf pushf addb pushf test mov cmp les add mov incl ja enter push add inc adc adc dec add and dec loope lea jl decl sbb push dec adc sbb (bad) push fprem test jne (bad) jmp cs dec adc pusha (bad) xor fdivrl sub xchg xor ja js in outsb dec dec hlt jp mov enter jge loopne cmp push movsb cmc jp aaa sub lods add mov or aam ret mov xchg pop mov or fistp clc cmpsb fisttpl mov dec jl or xor mov fwait jmp lret je mov and sbb fimul sub add and jmp das mov in je jmp cmp sbb idivb int3 out jne notl cmp popa cld add aas pop je scas push lar (bad) fisttpl decb ja jnp sbb adc sbb orl cmp ret add add mov or movsbl fwait sbb jle pop add rolb (bad) aaa mov outsl faddp jns ds in push push adc push ss mov mov cmpb ja jb stc repnz add add call (bad) out mov sbb mov mov or cmpsl sbb mov push lea pop xchg adc add call dec lcall loop (bad) jb into inc (bad) pop inc mov lods cmp lcall add push fildll inc fcmovnb mov out mov sbb adc les and pop andps orl (bad) dec jns in pop inc mov dec sub lcall and repz cmp bound icebp sbb mov mov and in je in or adc sbb xchg pushw pusha mov mov hlt cmpsl das dec add adc or cmp ret mov push lret sbb sub add bound lds jne dec enter jecxz lea dec cmp (bad) pop add push lret add mov lods add jne xchg cmp (bad) in fidivl adc lods pop or inc dec dec daa mov xchg and adc push cmp inc paddusb cmp inc sti push aaa sbb or push arpl xchg fldt dec fdivp or sbb fucomp mov cli movsb add inc add adc int3 jle mov inc fistpll pop fmuls push outsb mov pop pop lret add inc fwait push push dec push pop pop jge jecxz push imul out sbb push pop (bad) popf out xor (bad) in xor push out sub fnstsw push inc push xchg and xor sub inc xchg out push cltd and mov lock pop jmp sbb (bad) inc shr adc push or int inc sbb jecxz in inc fldlg2 cli rcl rcrl pop cmpsb outsl subb jno pushl jge add call js inc or jo add adc inc xor xchg and pshufw ja jae jne cmp adc clc dec or or mov repnz mov mov fiadd jmp cmp ja (bad) ljmp or add mov lret rclb rcrb iret icebp jae sub mov sub push outsl es test pop jge aaa sub mov enter inc aas mov clc ljmp add push inc insb imul lret fxch test pop es gs push sbb xlat or dec push gs inc insb popa out mov jae adc test xchg add cmp or inc imul cld scas dec xor or sbbl xorl sbb adc dec outsl imul xchg scas and push (bad) dec outsb insb jns (bad) test scas hlt dec es shr movsb (bad) mulb pop ss push mov inc je sti into fnsave or cmpsl or dec imul jmp sub cld test or das add (bad) adc add dec mov rcrb (bad) and je add nop xor out aaa out fstpt xchg dec gs out insl out adc push fstl inc jne add outsl adc adc js sbb push gs ss dec cmp jnp hlt push add xor add mov outsl push movzwl negb mov (bad) ja or mov mov mov add je data16 mov adc lcall fs cmpsb pusha mov ds or inc repnz jb mov in adc inc pop cwtl and adc add pop mov in jge insb scas insb dec jne hlt push inc and inc sbb mov nop enter stc xor push mov and nop (bad) pop and mov aaa sbb dec imul mov scas adc aam cmp stos push subl xchg scas pop xor ds lods adc add push push sub aas outsb mov pop enter cwtl pop adc adc in outsl in sub adcl aad icebp jle mov pop adc in xor js imul mov mov push and and (bad) mov mov les lahf mov adc and sbb cmp fidiv mov push push lock add loopne lock sahf clc or loop ljmp inc cmpl test pop addr16 pop and addr16 call idivl jae add cld adc sbb int3 lods jbe push fst or cs jbe and ffree repnz pop push mov pop outsb push add loopne adc (bad) mov push aas sub pop (bad) adc adc sbb out xor cmp ljmp dec leave jae fs jo lds aaa mov bound adc cmp (bad) or pop mov push cmp fcmovu pop add push adc jae pop sbb sub mov je inc inc xchg xor or push test faddl je cmp adc inc es push inc inc push mov rcr outsl notb push dec dec push push nop dec bound xor jl mov mov aaa mov nop scas pop sbb ljmp inc push or fidiv push sbb adc pop add inc dec and pop in push push dec addr16 mov cld dec outsb push push xor push pop lods push rorl fcoml push push mov in or mov mov push cwtl add ret aaa leave sbb push rclb loopne pop mov outsb cmp xor test movb (bad) mov adc inc pusha or aam scas pop aad jo add pushf sbb fldlg2 clc xchg fcoml sub loopne lahf cmp push fs push push (bad) lock test xor imul xor push in xor fstp hlt push or mov xor push xchg xchg test push push cs out (bad) adc repnz pop add mov lock mov pop sbb adc outsb and nop sbb sbb xchg call xlat out cmp div or scas xchg sbb mov cmpsl sbb push mov sbbl sbb adc nop add sbb add nop add xor test in in lcall push scas jg add out sahf out sub inc push adc or or pop mov jnp adc push pusha sbb outsl mov mov sbb repz push call cmp aam sahf mov aad cmp in fistpll outsb push adc daa push and scas call add inc sub xchg cmp dec mov pop mov push sub pop or lahf jle pop out push (bad) rcr loop jl clc jbe inc cmp les push cmpsl fldcw insb push xchg lcall test das jmp jo push dec sbb dec ss cmp fisub (bad) pop pop inc cmove mov outsb sub sub jl pop pop aas inc (bad) aaa les aas pop call (bad) mov stos mov dec mov mov les fmuls and aam cmp aam cmp cmp hlt int3 xchg or call iret repz loop sbb inc (bad) aam xchg dec imul push in ficompl add repz fsubrp ss andb xchg out ret ja push xor scas ret adc mov (bad) cwtl inc int3 xchg inc (bad) lret mov xchg pop xchg jbe divl xchg jbe js jo cwtl in inc icebp push or lret decl (bad) sti inc cli (bad) stc (bad) clc push push (bad) out jge (bad) cmc push push push loop push decl adc sbb repz fs inc out fdivp dec clc out sub cwtl mov mov push or xor mov mov int mov add mov xor pop add test push popa ss loope rcrb sahf out fimul cld sbb fwait lock add xchg push inc push bnd call dec cmp pusha and mov test mov push dec leave inc repnz lcall je push sbb faddl mov cmp jmp or or aaa pop inc mov pusha sub and pop stos pop mov dec dec fs or outsb adc or pusha xor mov lds dec int3 stos push retw push push imul adc push adc dec test aas mov cmpl jne loopne dec cwtl add je xchg cld enter and adc or pop mov jle add jb jne (bad) cmp scas in add pop enter mov out and or loope lock add xor push mov dec sarb xlat bound inc (bad) nop mov dec je cmpsb or test ljmp lret mov outsl and sub ja or shlb add call imul inc cld sub fcmovnu adc or sbb add sbb adc fistpl mov and cmp push sar mov movsl xchg add push sarb adc cmp sbb sbb sbb or loope mov stc and sub add ficom ret std xchg aaa adc dec mov add daa dec inc or daa je adc add fldenv xor clc mov or test add mov inc (bad) dec sub adc push and pop sbb pop pop sub shld jb or push inc inc xor adc sbb (bad) sti out add in add xchg (bad) in inc lret pop daa and cmp stos xorb loopne add out jne (bad) sbb mov pop or add push arpl icebp mov sbb or adc xor mov gs shl popf push shlb fistpll sub aas jo fdivrs pop inc loope movl push cwtl sbb xchg aas adc or es pop sarb adc rolb pop mov or imul add outsl fild pop add pop je sub cmp adc imul xchg sbb clc sbb icebp push cmp inc adc pop adc xchg sub push (bad) adc inc sti add or cmp mov cmp inc adc inc sub or cmpsb push lea dec dec mov dec in rcrl jl inc push sarl push inc dec jne (bad) mov lods push addr16 je test lds push ret inc sbb pop push jae jg mov rcr nop outsl and xor pop icebp dec dec cmpb dec jb adc popf addl inc mov insl (bad) leave gs cmpsl dec das sub ljmp in adc dec addr16 inc hlt fcoml pop aaa adc ss xchg add imul into dec mov lds sbb jl xchg sarb jne push sbb dec pop pop xor in or xchg jp push call repz outsb repnz xor xorb inc adc or pop imul imul icebp cmp push (bad) jbe popf xor cmpsb (bad) jecxz jecxz les call rcrb lcall push rorb sbb inc jb jle aaa pop sub out jae push inc test (bad) test xorl (bad) in int rorb mov mov add mov xor test pusha les add mov xchg mov hlt xchg les push pop cmp push cli mov pop adc and add cmp xor sarb int3 test hlt adc jbe jbe xor out cs pop or lds fsubl rolb xchg sub inc add pushf inc sbbl (bad) sub jecxz add cs inc les and lahf xchg ret sub movsb loope imul imul rclb or pop push sub push or repnz cmpl fwait js enter jle cmp sti push dec mov or jne push repnz add adc mov repz cmp adc or xor bound lcall cwtl cmp add jo and mov in (bad) out dec das jmp adc ret sbb sbb jo mov insb cmp shll jbe iret fistp mov add rclb jb mov aaa xor mov cmpb mov mov xchg adc dec aad cld mov add shr or xor cmp or adc aas test lock or addl mov jae addr16 rorl mov or or or movsl and push pop push xor mov adc (bad) outsb and hlt pop xchg push mov outsl lds cmp xor rorb sbb popa and aad test jne (bad) and js pop ret popa mov pusha mov mov ret nop (bad) mov lea add push sbb imulb xor cld mov jmp ret add enter mov ss movsb inc xlat mov adc sti sbb add jmp or lret and mov incl mov push mov inc je mov add or cmp jbe xor sub and cmp pop lahf pop mov pop push and mov fimull pop and into fwait pop notl (bad) push add mov xchg test mov icebp push mov sbb dec dec js jecxz xchg dec push xor mov dec xor xchg mov mov xor test mov sbb push (bad) xchg cmp lds int3 xchg inc inc sub or dec imul test cmp sahf faddl push aas or mov jmp sbb or out (bad) add lcall push xor (bad) (bad) mov sub leave mov ret movsl push or push cmpl in push push andl test fadds sahf in loop dec cld stos push xor xor cmp cmp je jle test mov rol and push sbb inc nop cmp push pop aas cwtl or add adc nop jo mov or bound sbb mov imul mov and call daa enter idivb cmpl jnp cwtl imul movsb push js sbb lock into mov (bad) (bad) sbb idivl add das dec or je or mul jae loop jmp sbb incl mov xor test xchg mov add add sub das and jne aas push pop insl popa fadds jmp into cld sub cmp decl fistpll jnp test dec enter loop out and push mov (bad) inc outsb enter push outsb xchg adc inc movsl mov mov cli (bad) int xchg mov scas pop fdivs and cwtl jo mov jae cmp cmpsl aaa les test repnz cmp int3 (bad) das inc outsb inc sbb add xor push sbb adc add push mov in xor adc push lock and add sar sub add dec or stos ss (bad) add loopne repnz mov rcll std jle sbb jae pop or sbb pop jg (bad) or in pop aad orl or call mov subps mov incl enter xor movsl inc add sub dec test shl movhps call cmp mov lock sbb (bad) inc mov cmp xchg xor or dec mov sub jg dec hlt lds inc jne fidivr aam rol aaa add pop inc mov rolb and cmc clc pop popf rorb pop call inc push js nop inc sub push sub es or test xlat in enter das mov enter jo test or sub mov dec add add sahf or adc sbb das and pushf and sub and mov cmp pusha xchg and add pop xchg add je popa sahf xor sahf xor inc enter stos adc (bad) mov fistpll ss push ficomp sub jge mov stos decl jno sar mov shl adc pop xor sub shl cmp je fistl dec pop imul lods mov push stos orl inc jbe mov sbbl fcmovnbe adc fsubs sub sbb or syscall mov mov inc stos adc btr push add loope jmp mov int3 push push inc adc ret pop inc (bad) jmp xchg add xor inc sbb lds (bad) int3 (bad) mov ja xorb ljmp ja and bt jb mov add mov hlt adc adc push inc cmp adc js jne inc decl jne les test aaa xor add sub xor xchg adc imul aaa in (bad) cmp push sbb and andb xchg inc jne xchg movb or popa sbb mov shrb add cmp (bad) outsb imul rol push mov dec add cmp (bad) pop mov mov inc jb retw sbb adc adc jne or aaa js xor push sub aaa inc push mov add pop pop mov add insb loopne xchg push mov ret lock push int3 push daa and add xor xchg add aas mov inc or xor test sbb sbb aam (bad) sbb or fistpll push add mov and jne dec and aas mov in inc pop or (bad) xor jg jmp outsb jns insl out bound push cmp sub dec in (bad) inc scas popa fsubrl xor pop pusha jo push and push ret cmp cmp mov dec and shll nop sbb xchg fldl repnz clc icebp xorl (bad) lock mov sub call aam fiadd sbb enter cmp mov stc pushf mov xor push inc and inc xchg es jle ret inc pop pusha and cs imul ss (bad) icebp stos repz movsl fucom ficom mov adc pop push jo imul pop dec leave and js pop mov push sub mov xchg or inc and out push cwtl push loope aaa sub jmp (bad) (bad) ja daa (bad) dec clc rorl fstps addb jecxz xor les inc dec dec cld push jne push sbb push adc pop (bad) pop and insb inc imull mov je cmp dec rcll xchg mov sub mov dec in aaa sbb ss call cmp popa pop cmp jge xlat dec push in sbb mov inc rol mov hlt out and popa test in mov xchg out xor inc and mov (bad) xor inc cmc (bad) iret xchg sbb jl xor inc mov stos cmpsl aaa lock sbb pushf inc xor or hlt popa loope xchg adc rclb fstpt aad (bad) sbb inc lcall xchg je test gs xchg fstpt xchg pushf loope xchg mov inc outsl test or repnz out add sarb mov or jo ret adc fldt out mov jne xor sbb adc loopne stos gs push pop fs push push inc pop xchg push lret push mov push xchg fucomi fwait pop ret js stos lcall adc xchg mov cmp out sbbl mov popa out xor inc xchg cld or push cmpsb add jl hlt (bad) lods jp (bad) ret adc shll or dec clc fcoml mov loopne xchg inc cmp js xor sub adc test and stos cmp das push xchg push pop sub xor scas je pushf and into mov negl subl pushf mov test jno (bad) invd jne xchg adc mov cmp mov jecxz test ds scas mov ds cmp xchg nop mov or add lahf or dec pop test or adc icebp gs jbe xchg lock lret sbb xor or rorl xlat inc dec das enter out addr16 dec pop push or cmp xchg clc clc add dec loope rolb int3 sub lock dec (bad) incl sub lea push push ja lods das xchg cld out sub or mov aam inc cs clc xlat jns mov negl dec add imul cmp dec push add nop inc pop orl cli push push push pop sti xor adc dec sahf jecxz and hlt fild dec and jmp mov xchg xchg pop dec jle xor xor pop bound add sub pop mov push repnz int scas mov mov push adc and roll gs out sub inc push mov inc or imul jo jo je insl adc push stc das loopne imul and daa dec pop xchg mov mov stos inc cmp (bad) cwtl ret adc std cmp clc arpl mov (bad) dec inc jmp (bad) rcr mov or je or lret bound sub pushf xchg and xchg mov cmp add int mov xchg lea ret and loopne adc lea sbb arpl xchg imul (bad) call jecxz add imul int add inc xor inc pop mov aas int3 (bad) cmp jne testb orb aam mov sbb (bad) aam lods (bad) pop and movaps sub sbb das pop movsl mov das mov faddl adc movsb push inc mov mov test pop cs cmp daa inc inc addr16 andb sub push xchg cs xchg mov enter cli or add scas fdiv adc push cmp leave push xor mov mov ret addr16 dec pop data16 (bad) call ror and and sub sub adc xchg and add sbb xchg mov adc inc shrl sub push addb and pop adc test lea cmp inc stos imul adc or push movsb sbb dec push push mov test or sti mov pop mov (bad) pop cld cli push lds dec sbb ret cmp test mov dec add mov pop or cmp cltd ficoml mov (bad) mov cmp aas mov (bad) cmp mov sub clc mov jge lea jmp pop ret mov xchg addl inc add jge roll mov xor push (bad) out popa andl mov push adc pop ret bound aam add add and repnz push cs das mov mov loope (bad) or push push xor rcll pushl loope dec imull shll int je xchg pop mov pushf incl mov popf jmp fisttpl jle pop ljmp or cmp sbb or nop and ret jns push mov mov push (bad) jl repz push inc xchg push rcll push dec nop pop adc cwtl in jl orl clc or jne add shr out fisubl pop mov insb or movsb repnz and jg sub adc jl and decb cmp jne mov or or movsb jno push mov mov clc jle cmpsb les inc inc nop pusha and or hlt jl xor add pcmpgtb lea andl aam popa sbb jo test and add cmp addr16 xchg imul lret or mov pop mov xchg inc mov jge or jle xor push push add out sbb arpl cwtl add push jle mov add cmpxchg lds push fmulp cmp mov lcall adc inc mov dec push insl ret jno dec fsubr ss sub fwait call dec mov mov or (bad) ja jle inc (bad) movsb cmpl cmpl xorb add add push js jb sbb pop mov mov shl sbb jecxz cmpsl loop adc cmp bound movsl add adc shl inc add mov jae mov push inc inc movsl cmp rcl lahf mov sbb add clc xor xchg inc nop pop enter (bad) xor jecxz mov cltd push push mov or and xchg dec test sbb lret mov outsb sbb ficoml faddp inc jb sbb es ret and sub push testl in enter enter dec pcmpeqd repz inc pop in sbb xchg les loop bound mov pop push push sbb add push or sbb push jbe or lea enter adc push cmp fcomps xchg je out jbe add fsubrp dec icebp shrb lret stc inc rclb dec hlt ret cltd sub push or stc or xchg or add in outsl popa mov add in dec movsb imul push clc dec js dec mov in das pop sahf insl in (bad) push pop clc adc fs (bad) lods outsb mov mov inc dec xor sbb mov mov lcall jno das jo int3 (bad) mov dec cltd rcrb push stos xchg push sbb inc in push push or (bad) jg jl dec dec cmp or push push data16 stc or and dec pushf fwait push test (bad) or inc roll in icebp in loopne mov (bad) scas andl jne push rolb pop push icebp inc xchg add dec ljmp inc jns mov mov jmp xor push mov or imul addb arpl jo nop testb enter dec dec es std inc (bad) jno movsb (bad) ja lret xchg (bad) pop (bad) mov mov and add data16 int3 clc jo xor or aam or js sbb rcrb sub adc push mov pop cmp je outsl jne jp sbb iret jge or jae push add add je dec or adc or push add sbb jl lods inc outsl push dec mov outsb popa test dec add call or (bad) call mov fadd andl adc cmp ljmp sbb fimull lock or adc xchg dec add std movsb cmp jge data16 js in xor inc cmp cmp or xchg test cmp loopne or jl xchg cmp je push jne ret in cmp adc adc push loop pop xor pop push daa or cwtl push add jae test mov (bad) notl push inc lds push or cmp xchg out ljmp out dec sub jnp jle or mov and xchg lods push sub fsubrs test xchg inc cmpb dec cld fnstenv inc insl scas hlt enter cmp fwait repz push cmp in or push enter xor loopne add pop frstor sbb ss les mov add ds (bad) scas mov xor pop push jl clc cmp pop stc mov mov jmp adc jo add pop or test inc pusha mov bound mov jo mov addr16 sbb pusha dec add jmp push das push (bad) push or dec add std adc ret jl fcomp push sbb adcb add iret sbb lahf add add or (bad) or outsl jo imul jne (bad) xlat out aam cmp pop mov out mov lock nop push mov inc in or adc push inc js adc xchg cmpsb adc or pushf xchg sbb imul mov jne,pn dec decl pop xchg and int push in push inc sbb icebp push ror fdivl cmpsb das lret or adc ret nop ja pusha adc pusha cs add push call push movb push lods dec arpl push sub fisub sti add mov inc mov push (bad) adc in fisubl (bad) jmp test mov ljmp out add adc xchg mov pop xchg idivl sbb fldt or mov scas adc xor pop sti cmp and push enter lahf int scas cmp and jl inc or push cmp xchg outsl les ja add xchg xchg mov outsb bound fs mov xchg jne xor bound clc or jle insb dec ja dec fistpll xchg sbb push mov repz mov fs imull cmp cmc divb push adc or adc shrl test fdivr das push add cli aad icebp pop imul or cmp cmp jl or mov jmp sub push aaa and (bad) xor adc xchg jmp addr16 inc fstps leave loope pop out test shrl arpl sbb shll jne mov jo add mov rolb jo or (bad) arpl sbbl lock push shrb and or adc adc inc pusha dec mov mov xchg into jo inc mov dec xchg push inc dec sub add pusha test or sbb add mov adc shrb mov adc mov lods roll lods xor and push jb add mov lahf orl data16 xchg xchg pop adc add xchg popa inc das fnsave jp adc dec adc je ret add test jo mov push popf pop mov add rcrb adc push fidivl daa mov add cmpsl jecxz mov mov ret pusha out dec jnp mov adc ds icebp lods push ljmp xor push movb adc leave stos xchg mov (bad) jge sbb mov add arpl fisttpll push sbb insl push pushl test sbb lret roll jbe outsl arpl decl xchg inc test sbb adc int3 xchg add sbb pop shlb push adc aaa mov or test and pop ss or and jnp fdivrp push je xor arpl movsb cmp adcb sub add lcall and fildl sub cmp push add push push or jne add repnz mov out loope inc addr16 mov outsl and rolb pop push xor in sbb ds inc aam xchg mov negb or fstp pushf sbb xor lea fmuls fcomps arpl movb les pop fsubl rolb xor leave xor pop loopne pusha movsl inc ljmp pop (bad) ja sahf inc repnz push clc movsl ret xchg inc outsl pop pop test loopne and mov sahf rclb dec out mov je arpl jnp movsb jnp es jne and aam push ja fistp les rol ss lods mov jmp scas sbb mov xor mov dec xchg pushw push xchg pop (bad) pop sbb ficoml cmp test out jle dec jne jp sarb sub jne,pn jge scas pop ljmp or sbb mov out movsb jle push dec imul xchg jle scas nop push jecxz push jl add mov pop add test jbe ja mov mov sbb fdecstp fsts rcrb cmp pop mov lret sub (bad) add pop or into dec loop repnz xchg sbb adc push fdivl shlb sahf cmpsl fistpll (bad) int3 inc mov push dec dec int3 orl dec jle push mov ret adc mov ret outsl test adc sub inc out jne or lods je sbbl adc gs jmp neg sub add and bound mov aaa imul xor js sbbl and pop fadds xor pop out lahf outsl adc and ffree dec cmp out lock clc sub cld testb scas in in inc mov xor lods sbb push pop mov pop sub adc inc push cmpsl lea mov sub adc adc inc cmpb mov cmp inc sbb or pushf fs xor not retw mov sub int3 ret jmp mov add leave lock add call xor pop dec pusha movsl sbbl cmp imul test pop mov xchg popa push popf xorl call sub xchg jbe rcrb mov loop scas xor dec pop jecxz push mov (bad) lock int gs xchg xchg jo imul jp mov xchg in dec jno adcl iret mov scas bound mov dec sbb adc add or in dec sub lret rcll ret add (bad) (bad) push mov (bad) push and in cmp mov addr16 (bad) outsl pop mulb cmp test push sub mov xchg icebp mov push ss sbb sbb je in shl xchg or jne in adc daa outsl dec repnz or sub adc xchg or xor aad sbbl adc sbb pusha push loopne and dec sbb fcoms cmp jno (bad) cmp push and insl das pusha or clc adc in imul adc fadds inc sub imul push notb lods pop sbb test jmp pop clc pop repnz (bad) cmp call hlt dec adc pop push stc jne sti mov mov pop popf jne pop or or mov xchg rcrb shr in adc fwait cmp and in outsb dec hlt out adc pusha sbb push je fbstp es push push stc adc inc jo out xor mov mov sbb jno mov cmp push popl popa nop aaa xor push ret or sub cmp jecxz and dec and (bad) in mov sar or fst mov add push (bad) xor dec dec jp or xor xor push popa or xchg inc mov clc jno out sbb jmp insl fsubr or outsl sbb jbe inc push sbb xor sub enter sub jb cld pop xor imul xchg sub or pop dec fisttpll imul adc clc sub add xchg in es movsb and jbe xor pop jo cmp lcall adc insb sub or push mov xor add and xchg xchg addr16 sbb add lock jb adc and xchg dec pop xchg popf push push int3 mov add mov add adc dec and fstpl fldl insl mov cmpsl mov or sahf setno jo je sbb mov add and jns jbe xchg incb push sbb mov lcall insl pop fs mov cmp mov les aam xchg adc jns orl or cmp dec lahf xchg sub adc inc mov sbb push ss sub movsbl xor mov xchg mov push and adc and daa cmp ret inc xchg in insl sqrtps fwait out push mov adc mov sbb aas mov (bad) div outsl mov jne mov push orl push mov jno xchg paddusb ljmp mov mov sbb aam jno adc dec add das call jne sbb arpl testl adc add in or mov sub gs xorl pusha push sub stos fldl mov mov inc bound out dec loopne movsb testl jb js jl pop imul xor xor xor mov hlt (bad) mov std out or cmpb jne xor or mov jp dec test cmc insb xchg push xchg mov cmc test adc xchg std pop test inc fadd inc pop push test and add pop sub lea mov pop sub addr16 lods adc lock push jmp (bad) movsl cmpsl mov scas lock ret rorl pop shrl sbb xchg jae pcmpgtw nop mov mov push int3 (bad) mov out js push fistl jno xchg adc fstpt push adc dec dec inc jcxz iret add pop cmp popf mov cmp punpckhwd pusha xchg and stos cmpsl or mov mov lret nop push push adc hlt (bad) push shrb popa cmp fldl sub push xchg sbb in in push or xor dec ss inc ret (bad) fdivrs inc out jp insl dec addb (bad) inc or out xchg and xchg icebp inc pusha pop mov mov inc xor and out test es and cmpl add add mov cwtl add stos hlt xor ljmp sub sbb push loopne pop pop jne mov push flds clc adc mov sbb push fcompl push mov jecxz jl pop enter out jnp daa and sub pop dec sub pusha out mov mov lea rcrb pushw insl dec xor enterw mov dec js xor aaa cmpsb in adc xchg cmp das (bad) enter pop pusha repnz clc push imul fcoml fdivl (bad) adc arpl in cli add fcmovnb sub sbb cmp lods es iret xchg push xor (bad) cmc mov adc fs fcomp imul popa (bad) iret sbb jge (bad) movsl sti inc jmp mov adc cmp inc pop inc pop addr16 daa out mov hlt loop aaa jb daa push (bad) adc shrb inc fistl aas mov jmp xorb mov faddl xlat (bad) push sbb daa out push mov ret pop jmp inc push jge or and cmp imul imul mov and out and add adc rcr (bad) pop or test or mov and leave jmp xchg push roll and push lods ja loopne sub les js push sub mov cmp sti scas ds cmp jne mov (bad) or sub lar shl ja dec repz mov sbbl push dec enter or sbb stos dec and aam imul and je cmp mov jmp gs das je sbb pop imul push mov dec pop lds arpl xor jmp call loope jne (bad) and push mov or je add add pushl push inc mov orl sahf fisubl (bad) cs pop push dec je xor dec imul jnp push mov sub adc inc cld mov jmp insl daa pop dec pop cmpsl adc in push sub pop hlt lock adc sub jb and aaa (bad) mov cltd or or inc cmp fadd imul clc gs sbb fwait popf push test lock loopne stos ret jmp lds push mov sub outsb inc ret inc aad cmp dec or push adc mov dec push xchg negl fsubrl pop add test mov lods jmp test je pop test mov call (bad) xchg adc push dec push jb dec sub (bad) and push xor data16 xorl nop push lret out inc jo test ja adc mov sub pop push addl pusha inc cmp mov add sbb cmp mov adc dec mov mov xchg push push mov add (bad) sub roll lods lock sbb dec movsl outsl mov ret cld test add add adc pop inc lahf mov and loope insl and scas shll dec pusha sbb mov les pusha repz pop xor scas inc cmp ja jno push mov sub dec repz pop test dec js test xchg mov mov jns leave repz jns out cmp jmp insb pop push mov sbb sub adc add or xchg or add pop je out rorl ja jmp das pop push adc sti rcrl mov xchg and xchg sbb popl orl pop lods sub mov xor add xchg pushf int test mov ljmp fisubl hlt adc aaa mov dec mov and inc lea jmp cmp orl push inc pop lock rclb push inc ret aad jae jb push cmpsl cmp inc (bad) es add test push mov sub call cmp xor test jge push mov mov and jg cwtl mov mov (bad) (bad) push (bad) dec push mov dec rorb xor scas add clc inc push fmul cmp pushf and inc call jmp sbb (bad) dec sbb enter or ss cmpsb sbb repnz xor or push add and dec add pop sarl shr inc (bad) push or lea adcb pop and add jmp cmp outsb push insb and js mov pop pop (bad) jns add popa imul mov pop aam xor sbb sbb sub add sti inc bound jmp add pop and push js sub dec ja repz roll in hlt jg mov imul dec lock lea icebp push sbbl daa loope mov or jg imul adc jno dec mov mov adc cmp cmp stc dec call shrl incl mov sub mov aas sbb xor xchg adc xchg ljmp popf out mov cmp xchg lods pop mov push mov inc mov (bad) outsb mov addr16 sbb pushf cwtl cmp sub lcall je jecxz,pn jbe jl rorb mov fbstp mov add cld (bad) enter scas in xor arpl pop andl mov fsub inc clc xor divb je insl adc cwtl jmp daa loop lahf inc pop sub jmp push dec lahf push decl lea or movsl leave and or cmp cmp add loop clc mov add xchg je dec or dec inc inc sbb pop jg mov lret push adc mov testb adc cmp pop test or sbb rolb ret call faddl cmp bswap mov cmpb jg push cmp add hlt or ds daa or jl adc jg mov push add xchg dec (bad) add add adc in xchg idivl iret or xor lea popl mov xchg jecxz nop insb push call (bad) gs aaa add add mov (bad) aaa or pop gs (bad) xchg mov rorl test lock enter mov loope xchg loopne pop rcrl push dec sub out negl xor and jge push mov xor jno nop xchg sbb xor xchg test mov pop sar shrl cmp je sbb daa cld dec push test mov dec fldcw add jl jg jmp add cmp rclb push push sbb pop fs cmp rorb add arpl cmpsb lock loopne pop cmp es test dec aaa movsb mov or cmp in mov sbb inc adc adcl mov in imul sub ficom fwait std test scas and mov ss inc and mov das mov xor push push lahf popa jne inc into add add sub arpl pushf xchg mov in mov xor cmp mov sub jle fisttp int3 push arpl movsb andl mov mov cmp fdivl in xchg push mov aas jnp cmp je addl adc fisttp adc adc sbb sti adc orw dec xchg cmc rol data16 gs iret shlb sbb mov sbb mov push sbb ja add adc pop add mov rcrb or pop adc dec push lds xchg or dec sub sub adc cwtl mov fdiv inc xchg (bad) and mov pop adc sub mov bound mov xchg xchg cmpsl lock dec dec and (bad) aam rcrb mov inc sbb mov inc sub mov xchg inc mov pop adc inc push sub loop mov orw inc cltd nop inc push adc add loop inc xchg in bswap adc sbb cs jnp dec fadds pop cmp sbb call push jno and or (bad) es jp dec xlat adc les or inc loop jl add rorl mov aad and push rolb cld push push int xor ucomiss sti xchg sarl inc inc pusha lret dec fs inc incb outsl add dec adc gs add sbb jb adc cmpsl scas pop mov inc and add push push loopne push aaa inc mov pop inc notl arpl cmp xchg mov mov pusha add lret rcrb fbld jne outsb loopne pushf inc sti or pop dec jne cmp jne daa call cs jne hlt cmp dec call or je push add cmc adc cmp pop ret dec xchg mov hlt pop dec sbb pextrw xor jg or xorl aad mov arpl inc dec jne rorb and inc cltd mov add or outsl cs cmpsb sar stc push pop and xchg lcall sbb jmp and lret sbb mov mov inc add mov xor cmpsl sbb adc add sbb aas les ret xor push fisub xor cmp jg mov cmp (bad) xlat xor gs pop loopne add xchg sub clc icebp mov arpl mov jmp or sbb sbbb mov call push pusha sbbb cmp push mov aas popa inc cwtl xor or add sub les xchg mov addr16 and fisttp add cmp pop gs push push pop push or inc sarb cmp push andb les and mov xchg mov je xchg mov imul jne es jne scas push (bad) adc adcb inc and enter jle into push into lcall mov xchg and scas aas or dec nop sub or or sbb push pop out inc aam mov dec loopne or mov test pop add jle xchg dec imul cmp lock int ds pusha loope or ret xor fisttp add add or and mov andb inc cmp insl jmp mov sarb sbb push add out inc push pop les adc push pop jns test sbb decb or ja jp in int3 fcmovne pop push sub jne xchg arpl repnz pop insl les bound movsl mov dec cmp es daa rorb inc je dec push out xor sbb xlat sub adc out cmpsl mov lods int shll bound mov sbb push ret inc gs xchg xlat es pop sbb sbb lret cmp jne xchg mov pop adc or frstor test adc call jl call mov mov inc adc inc jle mov and and sbb and iret xchg das and daa mov pushf inc sbb and push mov popl mov inc dec adc data16 lea adc xor (bad) or seto fldl nop inc mov iret aaa popf aam setb add cmp pop cmpb (bad) (bad) xor sarb jl sti add add mov ss sbb pusha dec pop push or call sub dec jecxz add stc pop xlat pop sti sbb cs loope pop cli lea cmp jne ljmp lret push pop push pop adc sub xchg ret movl adc movl rclb or in push xchg push lea jp (bad) adc adc sbb sbb adc add clc jne xor (bad) xchg jg fsubl mov call mov cmpsl hlt jle mov cld sbb mov or fwait and xor adc jge nop or add movsb mov fcomp cmp cmp imul loopne jmp xor decl and pop push dec mov and sbb cmp push (bad) in ret pop xor popf (bad) cld ja mov xlat hlt cld decb sbb or in call sub in mov sub lret adc lds cmp mov or (bad) icebp movhps mov inc out push pop mov xor sub pop lret jmp add inc add add into jmp xor nop push sbb bound mov inc mov es (bad) iret or sbb dec mov pusha nop ficom aad pusha repnz mov andb adc jnp outsb pop cmpsl cmp push stos and jg xor mov xorb inc sbb add adc pop mov sub add mov aaa mov adc push fnstenv (bad) repz pop cmp mov dec mov adc push mov jmp lea xchg mov (bad) (bad) jge rolb cltd and jbe inc fisttp add aas cmp cmp idivl xor push cmp inc shr insb jo or cmp and stos adc cmp mov push mov out lahf incb sbb hlt inc pop mov adc push push push cmp inc cmp xor mov or hlt jbe pop lods mov pop push push int3 push jle push pushf push dec mov push push mov addr16 out pushf add loopne lea push movsb add cld push test mov mov outsl cld push jo jl push push out rcpps xchg push sbbl mov push jge lret push js and nop pop cwtl arpl pusha arpl iret cld pop orl xor dec outsb mov imul xlat inc push mov fcmovbe call loopne leave popa dec (bad) stc pop imul and lret dec mov lock and in sub ret sarb clc sbb pop and js pop inc adc and out int3 xchg sbb movsb mov mov cmp cmp cmp cmp cmp cmp je cmp cmp jbe js cmp cmp jp jl cmp cmp jle pusha popa cmp cmp bound cmp cmp addr16 cmp cmp insb insl cmp cmp outsb outsl push push cmp cmp push push push push cmp cmp push push pop pop cmp cmp pop pop pop pop cmp cmp pop pop inc inc cmp cmp inc inc inc inc cmp cmp inc inc dec dec cmp cmp dec dec dec dec cmp cmp dec dec xor cmp cmp xor xor cmp cmp ss cmp sbb cmp cmp in xchg cmpsl sub or mov ss outsl pop sbbl mov or popa add movsb (bad) mulb test shrl ds jo dec mov (bad) sbb addl or pusha loop push imul iret sub or mov adc aam js in out fwait jae jo or add out adc nop sbbb or adc or xor push je insb leave ss sbb jae enter je andb arpl adc mov add outsb gs into imul xor mov (bad) mov sarl insl or add mov push outsb int or mov imulb pop jo outsl sbb push inc popa jae add sbb mov sbb or push inc xchg or fwait (bad) adc iret or movntq cmc in push push cmpsb std fidiv into insl dec outsl jo je push inc and out jns sbb mov out jb gs and add sbb fldl sbb xor or adc rol loopne or adc outsb lcall jb fiaddl iret xor pop and bound insb in ret push add dec jl jp in fistl or push inc arpl nop iret cmp inc inc xor pop inc xchg out pop outsl jb jae es mov in ret stos pop clc test push sbb add aas add or sarb pop sub mov orl xor push sbb sbb iret xchg mov and mov (bad) xchg out cmpsl inc xchg insl fidivrl rolb lahf and out and stos cltd ret or push sarb (bad) and lret add icebp iret pop adc dec sub and cmpsb lock sub dec cmpsl (bad) mov inc push add jmp insb ret ss dec insb je aas push push dec gs enter insb les lahf sub mov mov int divl sub add push adc mov dec pop add sbb push outsl mov adc sbb push outsl leave stos sub push add repnz ja lahf pop sbb lds pusha pop dec adc jo sarb scas or (bad) lock leave cmp add add or push cmp (bad) sarl test aad lsl push inc je pop insb adc lcall dec daa jns lock lock sbb pop aaa xchg add sbb stc jo add add xchg dec cs leave dec add in xor je and scas and mov pop daa insb lret and in test push test testb jae pop sbb mov movsl push scas xchg pop iret imul and pop aas push int3 mov push js or or pusha pop repnz add loope push push iret imul into outsl fcoml fcomps pushf push xchg ret sbb or daa (bad) (bad) fmul repz fildll rcrb lret mov es inc shrb mov add sbb out dec cmp add push sub cmp sbb outsl push cmpb out in out div jnp pop mov push pxor pop lods je mov lods insl daa pop adc or shlb (bad) popw and test push mov ret insb scas pop daa js bnd cmp (bad) push pop mov gs insl popa addr16 int3 mov (bad) je and xchg in push or nop ret fimull mov pop dec pop cmp pushf cmp cmp xor notl fcoml cli inc (bad) cld jle (bad) std pop mov popf dec adc into add or rorb inc dec fldt push clc push sbb dec faddl push mov imul push shrb mov les push pop inc pop addl xor stos mov mov adc (bad) imulb sbb (bad) mov dec arpl mov pop mov xchg rcrl scas xlat sub inc and es clc push xlat idivl nop adc cwtl test pop rorl ret cmp xchg xchg les xor in push lock or dec pop sbb xchg cmp add push pushf ret nop pop mov push loopne pusha ds shl add dec adc dec popa outsb clc incl les ret rol xor loopne out cmp mul mov daa adc add adc loopne jg inc pop and stos adcb push rclb movsb insb jns xchg add lcall add or xlat and test jmp jp fcomp mov int3 lods shl std sbb inc cmp xor mov test jbe cmp inc cmp push push xchg sub movsl mov push push mov adc jmp xor loope mov in loop fmuls (bad) dec xor insl roll rdmsr lds addr16 adc lock jo push test dec popa fnstenv flds push (bad) loopne shrl negl push mov mov rorb add add add jbe jnp fidiv clc xchg and ret (bad) je or xlat sub cmp add mov outsl jmp sub inc push jle and imul insl sub nop cmp call inc sbb repz adc sub ret jge pop add ret loopne fisubl add loopne jns add stc sub mov or shrb xor jge mov push jg mov mov fcoml adc add push cmpsl or add in or pop add das movsl jmp ja arpl pop or jb mov imul outsb pop jg dec (bad) dec insb cld pop push xchg jbe or jns push adc xchg and popa insb pop ss fiaddl push imul mov cmpsb xchg gs leave (bad) pop (bad) outsl ja nop pushl lahf jne or arpl imul jno popa mov sysret or gs (bad) jns add xlat ds lods ja insl inc dec mov data16 push and addr16 das cltd sbb inc popa cmp pop jo push sub insb test imul rorl jb das jp out adc outsb inc push xchg dec nop flds or adc or jl (bad) in bound je or fisubrl push sti daa sub xchg pop xchg fs lahf sbb int3 xchg (bad) or or xchg push subl pop jg pop and mov sbb fcomip aaa adc shlb pop adc scas pop or outsw inc push or jne push mov adc mov pusha enter das andl aas xlat jno (bad) push arpl add mov inc inc imul das jbe sub cmp xchg int3 daa or ret xchg or sahf jge incl push xor push push inc ret push mov dec hlt (bad) adc pop dec cmpsb adc and ret (bad) add iret sub mov or pusha sbbl testl dec inc push push inc push add rcr jg inc inc inc push dec push xor mov and inc dec dec arpl inc inc push or dec inc push dec dec push mov jnp inc inc push xchg inc dec dec and stc ret (bad) popa out inc inc xor xor (bad) ficoml inc inc dec inc xor xchg inc push inc inc dec notl inc inc rcll dec mov mov (bad) mov push (bad) das sbb mov data16 inc das mov push xor push aaa jg xchg adc push push push dec push (bad) nop cmpsl xchg dec inc dec push mov fidivrl nopl push decl push mov mov dec add daa ss push into push in add sbb gs orb andb outsb sbb jne add xchg push or pop mov lea cmp sbb and divl cmp mov sbb push dec sbb mov test add pop xor out or jmp test xor (bad) imul dec shlb pushf mov fadd xor es mov and mov outsl mov add lea movsl daa and sub lock push fisub xchg pop ds data16 push adc jmp lods or test shrb in ret das out rorb inc xor sbb xabort mov and sbb mov sarl call lret sub lods mov or cmp xor inc (bad) jo cli das cwtl add pop pop shll or bound push cmp cmpsb xchg cld (bad) xchg add in or mov ret inc cmpsl mov or xchg out sub loopne add dec imul pop cli rolb enter and cwtl movl shr adc lret in and mov sbb or xlat lea test ret mov mov cmp (bad) insb je mov imul jmp jo xor push jl pop movb push fcomp add adc mov jmp sub je sbb dec or cwtl or jno into popa insb xor inc lret or gs inc in out jns addl dec and xchg mov popa xlat repz loop cli es lods mov dec push scas dec inc mov xor add das or and call (bad) mov ret (bad) aam stos and mov (bad) out push lock pusha fwait nop push add sub inc push insb insb xchg (bad) pushf mov mov push push xor fmull xchg neg scas fwait insl jp xor push das fdivp ficoml jp cmp cmpl ja pop movb sub or adc scas outsb inc sbb jnp fisubrl sti xchg pop mov jo test push jb or imul dec fadd inc mov sbb sbb or (bad) jns xchg pushf lock sub and jb rol fdivrl cmp mov aaa adc or (bad) movsl add inc call or inc (bad) gs faddl movb pop repnz lock mov mov outsl in push pusha cmp mov nop (bad) jne int3 mov sbb mov inc mov stos movsb push (bad) mov xor enter sahf pop jb sub rorb pop push cmp push inc cs mov sbb dec mov lock or jl (bad) mov sbb (bad) mov xchg pop or sub cwtl loopne mov mov js or sbbl push push nop loopne xchg enter mov leave jp inc insb repnz ret pop aas and add and loopne leave mov loope push out mov mov jns inc ds jae mov add mov or ja sbb adc (bad) dec sbb pop lret mov inc push push mov and adc das cmp dec das mov push test sub add fstpl push or adc lock je sbb xchg out push adc fwait movsl mov popa gs lock enter loopne and inc push aas sbb sbb mov or adc loop jno (bad) nop cmpsl (bad) insb mov pop inc cmp testb cmp pop jb jle movl xchg outsl xorl mov adc jb and ds adc movl js push inc ret sub dec xor xor fs sarl in rcrb adc test mov (bad) mov rclb or dec int3 lcall sbb sbb push or or or sub or or int int xor push or push mov inc adcb push fdivrl add rorb scas in cmpsb pusha sbb (bad) inc push add test ja clc (bad) aas mov iret insb movsb (bad) mov mov test inc inc popf dec les fidivl loopne iret loope ret add xor push sub adcl rcrl pop xor mov in sub aam insb test imul mov leave mov test insl push xor cmpsb mov imul push or sbb lea and jae cmp lock popf movsb mov push mov cmpsl dec jl lret nop or popf cmp iret mov dec pop jbe pusha jl pusha sub push inc test movsl push add adc mov lods rcl test or pop mov repnz pop inc daa rorb iret mov add jnp jle dec add xchg pop mov and iret rolb cmp pop add pop dec inc rolb or xor lcall pop adc xchg push mov sbb bound les inc pop jno inc das pushf adc jl rcl test iret popa push cld push and inc pop inc xor rolb cmpsl xor mov imul das movl sar jg lods dec mov and mov cmp je mov (bad) push push mov mov mov jne add mov rcll pop push and adc pushf aas es cmpl inc add arpl (bad) and int3 sub icebp orb pusha lea sub clc push mov or scas adc not and mov je es popa adc roll cmp push lods pop cli sbb notb mov add mov add fiaddl cs or dec and xor call push jae add sub or mov sahf pop add jl adc adc sbb pop mov and in jnp mov test and push movsl imul dec lods psrld mov adc in ds jno lods idivb aas ss cmp das (bad) (bad) or mov (bad) std ret nop mov and stc pop roll incb fs inc or or sbb popf test add inc push jne push dec lahf and sub das lea popa fwait jp mov ret sub ljmp in popa pusha cmpsb adc int3 and repz jge fnstenv jmp mov stc push push adc in jge add aad push push xchg clc add in test xor arpl sub sti in test xchg fldcw sti and test mov aas ja dec mov inc movsl push mov mov (bad) in pop cmp sbb in cmpsl sub es jle mov mov push out pop push faddl xlat fmuls push xchg ret (bad) mov sbb inc push xchg cmp add cmp movsb (bad) ljmp inc add or fs shl pop inc jl fmuls xor not and pop pop sub clc add (bad) ss pusha into pop xchg xchg sub fisubl test and ficompl adc jne out add and js rolb mov out jo sbb (bad) mov stos roll sbb cmpsb loopne or sub jmp push and fsubs inc xor lahf pushf dec cmp add adc cmp (bad) loopne push jge daa mov divb push test je and fsubl push sub mov ss jmp jns add pop ret pop push dec add xchg inc inc pop ret stc fsubrl add cmc add in stos test js mul push xor push movsl (bad) popl jmp add (bad) xor adc mov xchg xor dec or pop push lds bsr mov or sbb sbb (bad) jg push or mov push lods aaa in outsl add mov mov or add je push add dec cmpsb faddp inc add ret sub cmp aas dec test inc push es (bad) dec sahf lcall mov pop pop xor or inc dec jne in fiadd mov sub adc adc push sbb test fimull and sub or inc outsl cmp add mov jo sub dec movsb dec js and and aaa (bad) mov insb mov enter push dec jns jmp std fistpl (bad) mov sub shl mov mov aam jmp jmp (bad) mov movw cli ss xor cld push mov mov repz outsb rclb out add pop rclb jl outsl cmpsb add or sbb mov outsb rolb jne ds add addr16 xchg mov and test jg pop push arpl imul xchg mov (bad) push addr16 data16 jns add push (bad) pop ret addl mov mov sahf mov (bad) mov push xchg push inc mov sub xchg clc sub aad sbb sub inc or and or xchg lret icebp clc ret mov sbb addl push dec or sub pop add push push dec clc daa mov pusha mov cmp jne and add es mov mov outsb lret rorb mov out movups lcall push xchg cmpl add gs imul pop push in lahf clc push mov stc je push push push aam mov and rolb mov sub pop (bad) or pop dec pop (bad) (bad) in shrl pop adc loope push shll dec and lds and sub das js ret push andl push jns or mov jb jno shrb scas adc adcl adc enter movsb fs dec sbb ror (bad) faddl lock add inc sub lret add out push add shll pushf stos (bad) cmc inc rcl movl repnz pop and sbb and insb pop cld push repnz pop enter mov push inc sub add fst in dec cmp mov psubsb addb rolb daa fcmove adc pop add (bad) mov movzbl sbb lock cmp sarb mov adc xor std (bad) cmp jg test jle cmp jl mov cmc in xchg cmp jg adc pop clc jle and pop in xlat movsb fwait ret or push (bad) stc jno push pop imul dec stos mov gs add push pushf push pop push mov loop mov push ret and push pop fcomp sub pop xor arpl imul push lret jle jbe rorl (bad) in or push pop xor stc or sub xchg insb sub adc mov xchg jne and int3 xchg es add sbb ds ret push jg or jl cltd xchg lea mov jo mov jp lahf popa xchg inc dec jne cmp fs adc jno mov xor ss sbb aas js push repnz add sub test adc ret enter adc dec (bad) (bad) dec push xor imul xchg mov mov je fcmovbe jbe nop pop cwtl dec mov mov mov push mov into adc sbb add push call in add cmp add push mov out mov mov mov arpl pushf aas pushf mov push mov sbb or je dec loope cmp shrb pop repnz ror mov dec mov imul ljmp pusha lock dec lods sbb pop scas minps sbb push js into mov ljmp sbb adc lea or cmp mov movl adc mov xor cmovs push jle lock jg jb jmp sub mov out mov push mov jmp adc mov adc insb mov (bad) push xor inc and movsl dec cmp sahf add fs sub sub (bad) icebp inc mov sub mov push xchg mov pop rcrb pushf roll push sub imul inc (bad) add or les adc mov adcb pusha ljmp ss aad or out fldl (bad) xor hlt cmp fildll or enter jecxz repnz push push popf clc pop push scas push addr16 inc (bad) mov push mov fcompl sbb and clc pop enter and pop dec loope xchg out mov js mov call shll ret lods lret (bad) pop cld xor (bad) out popf xor adc mov in pop push sbb loope enter dec (bad) mov push in hlt int3 inc mov or loopne cmpl daa push inc cmp call movsb cmp hlt loopne (bad) cmp lea loope (bad) xor mov or add mov scas or lock repz and add or outsl scas and xor mov mov addl lods or lods data16 fcomps pop push insb mov lods cmpsl mov mov push outsb jle mov jne js add test sbb in in lret pop out inc in mov lret fcoml movsb call dec add arpl adc dec addl out xlat addl movb data16 mov aaa and jne test and mov xor int sbb adc fwait inc dec out sub test rcrl xor nop out mov push lods xor inc push or jns ljmp call push or out test mov add adc or ja cmp dec jb jo je sub pop add imul and sub out clc dec sub jnp inc dec hlt (bad) fbld fcompl (bad) dec fstps mov jbe mov push cmp cmp push cmp push jo mov inc or add out xor clc mov pop mov ret jg adc enter pop call and inc mov push test sbb push adc mov mov leave out cmpsl pop ret pop and push mov enter push and fs rorb pop int out pop add fdivr popf in xor jmp in push mov mov and (bad) dec sub xor mov add and push xlat mov nop movsb nop inc test (bad) mov clc fcompl cli bound (bad) repz mov cmp xor xor or ja in (bad) xor mov or decl pushl dec pop xor pushf stc sbb push mov in sbb imul sub ljmp pop adc lea nop pop add cmp fidivl push cwtl test lds ja mov push out inc bnd movl int mov mov mov cmpb jmp push adc sbb sti punpckhdq xor mov pushf pop sbb xchg mov jecxz fmulp dec pop pop notl pop rcrb nop fist mov pop xor mov out pushf adc cld imul pushf xchg add add push inc cmpsl repnz jmp lahf (bad) fcmovbe mov dec push pop testl shl push pop pusha push loope repnz adc or sbbb rorb pop iret sub insl xor dec jne popa xor rcrb mov or push imul (bad) dec ds lds das xchg jge add cmpsl cmp je lcall into fcmovne orb (bad) push add mov adc adc rcrb mov xchg and pushf stc jp mov js mov add adc stos jmp xor mov test xchg dec pop inc push sub jl clc andl sbbl add (bad) cmp es sbb pop movl xor loopne dec pop popf mov sti and cmp jne add or pusha lret stos out push and ror lock (bad) (bad) repz adc and es and inc jne sub xchg add sbb add fs js dec mov int mov add fidivl ljmp hlt pushf adc fdivr sub mov (bad) loopne fisttpll inc adc add aad or out or sbb ljmp sub dec inc mov nop sbb faddl pushf icebp in inc pusha pop cwtl add push pop mov add sub and xchg pop call mov jns ret push in pop mov jo mov test sbb cmp or or ss fistpl int3 sub push lods jge push or arpl call push decb loopne insw mov cmpsl hlt cmp rol cld pusha stos aad fxch pop nop in nop add je scas outsb push add rorb cmp and or idivb insl out sbb inc mov je ja cmp je mov pop daa sub roll (bad) imul inc add or push mov sbb in jne or mov pusha inc push mov clc add cmp cmp insl xchg xorb jbe xchg test adc loop xchg in or shrb sub xchg add imul xor hlt sbb dec xor mov sbb test pop test imul or rorl xchg sub (bad) out iret sbb dec fs dec add adc sub push sub rcll dec insb fcmovb mov xchg fsub aad pop adc mov jnp (bad) (bad) sub jmp push add and dec dec repnz aaa adc das jns loopne lock sbb mov adc push ja xor loopne or mov dec and xor or add stc push inc and out lret in repz adc arpl pop fisubrl jmp cmp (bad) (bad) je adc sbb push sbb cmpsb bound dec pop push cltd (bad) leave inc clc xchg and add push sbb xor push sahf or ret jle push mov xor sbb mov clc mov or jae or mov and sub adc mov pop pop pop pop push (bad) sarb xor ret arpl (bad) jno mov mov loopne js es fildll dec scas mov andl mov dec nop out leave hlt mov (bad) or sub inc out add cwtl mov test loope xor jbe and call xchg inc (bad) loop mov rcl frstors adc and inc testl pushf mov div (bad) jo or in or push (bad) popa push and or cmpsl adc inc fs fldt add jo inc fisubl icebp nop xchg ss xorb mov cmp inc push or insl cwtl out insb inc sub aam mov xor jg sub fsubp mov mov les sbb jmp sbb popa insb fistl sub mov out mov dec popa imul xor add or push fld and push and lock xlat jnp test push or cmpsl inc mov and pop adc and xor movsb push xchg push mov loope cwtl or (bad) aad lcall xor negl in movsb cmp call insl enter movl inc sbb daa cmpxchg shlb or lods fwait (bad) dec dec in inc ja mov or mov pop movb leave test pushf rolb inc inc cmp add (bad) mov mov sub lea xor adc rorl scas push inc (bad) mov test addb cmpsb ret mov adc or addl ficompl inc adc and (bad) sbb xlat sbb jne ret and push sbb mov sub (bad) movzwl push dec sub scas sarl jmp and (bad) xlat jle mov add mov push jmp rsqrtps adc push outsl adc add cwtl loopne enter (bad) pop leave cmp add add inc out (bad) xor hlt in les leave loope or and faddl call lods sub dec inc or inc leave xor push popa xlat inc cmp inc mov pop mov dec lds out mov (bad) sbb push lods mov icebp adc das adc mov jmp push mov or out loopne sbb push testl pop sub add test jo jnp xorb push pusha enter sbb call js inc and sahf xchg sbb xor add sub loope mov sbb add icebp arpl jnp add clc outsb cmc and sbb daa mov push jle js mov (bad) xchg mov scas adc xor inc xor js jbe imul push fadd rorl mov mov sarl push or adc pop sbb dec loope popl jmp inc sub sbb (bad) mov cmp jmp lahf or sbb mov pop out jne push (bad) add (bad) jo mov cmp adc sub ja sub jecxz pop inc sbb sub add ret mov (bad) loop jb gs xor xlat cmp adc fs push in sbb inc jp test add xchg mov or mov into data16 fs adc das insb scas and ja jae repnz mov stos xor ret js inc pop aaa iret mov imul push push lock daa mov pop call cmp xchg dec sbb aaa sub into fcompl push fnstsw jmp adc rorb or dec mov dec or xor cmp mov outsb jno adc push dec enter push sbb inc adc or fdivr dec movb push xor pop add add clc push cmpb out add sbb xchg adc mov xchg mov and cmp fmuls test adc jno jo dec lret mov inc mov sub jne push push leave adc and push sub (bad) add dec ss ljmp mov inc inc lea adc movb add push popa mov fs xor push mov mov mov adc mov mov mov cmp cmp test inc inc movb pop incb xchg (bad) jne inc insb (bad) jecxz outsl aas (bad) mov jmp enter xchg dec dec push fistpll pop and add outsl xchg inc js inc into ds inc mov lea (bad) mov test cmp adc repz out or dec lret adc cmpsl inc adc insb adc stos fnop cltd dec rcll adc adc mov cwtl lea push in adc jo sbb ja aaa jle jno jns and (bad) xor jmp mov push push lds or loopne adc fs inc loopne add sbb ffreep fild (bad) pop iret or (bad) or add inc (bad) or inc pop sbb insl subl lds pop les mov pop cmp cs dec imul or mov mov or repz pushf ret jmp add xchg sub push or mov xor xchg sbb sub or andb push clc push aam scas inc aam inc dec enter sbb xchg sub dec push xchg adc out fcoml rcr and (bad) push (bad) mov and neg into inc cmp (bad) test or and jp add inc in push sbbb or jne push xchg subl cmp mov xchg inc adc inc fldcw rorl mov or aam push push add adc sub xor ret sub (bad) loope mov aas jbe call or enter leave inc pop hlt in xchg push hlt bound mov add sbb rcll test insb add ret pop lods mov adc lahf mov dec in sub sbb push aaa jbe mov es cmp pop arpl in std iret inc loop das mov loope jno xor incl popa faddl cmc out xchg (bad) mov or pop mov jns dec and lcall add jo cmp jo pusha inc in pusha cwtl insb sarb push leave and cmp mov add pop loop out or mov or jbe adc adc dec and push xor fiaddl inc repz movsl dec add xchg adc add movsl mov add enter xor dec cmp sub insl lock in jb fwait mov (bad) aam fcomps inc loope mov mov out mov inc mov push mov fisttp sbb scas pop add and push or jbe push sbb xor fs cmpsb iret test sub jle movsl mov add loope mov or lods or xlat adc mov jmp sbb push loope fmull inc negb or mov dec mov add (bad) lock xchg lahf push lock dec cmp mov test orl or rol xchg jmp pusha ja stc lock push jo test and loopne cmp mov cmp fdiv cltd icebp adc into sbb xchg inc cmp loop push cwtl sbb outsl adc adc push jo xchg int or mov fs fs mov mov sarl les jmp into or fdivs (bad) nop lea or dec and jmp jbe add std popa inc adc add (bad) pop out lea mov test inc mov fiaddl and and repnz je jmp pop rorb mov and jno adc xchg adc mov fldcw lea lods push pop or push add aad sbb dec inc rol pop (bad) (bad) loope push test or adc ljmp sbb (bad) xlat adc sub inc js (bad) lcall pop jnp arpl rorl push add jge and maxps inc mov lret xchg aad pop in or push nop cmp cmp lea push xlat xchg movb rcll sbb cld push mov cld adc add mov adc and in popa add js lds rorb loopne cmp push jp pop insb fbld movsl jmp outsb sub leave pusha add lods insl loopne sbb push jl and push jge (bad) jmp sahf and or cmp ja jne jno inc mov adc lcall jg push inc in (bad) push cs sub iret insl xor sub cmp push aam ds test mov or ss inc sbb push arpl cmp adc push cmp je lods sub push adc inc or addl cltd loope xor sbb adc iret inc push in xchg repnz je and xchg jp aaa push and fnstenv jbe rclb push add sbb adc and es shr pop inc push loope jle test add jmp dec nop mulb sub sub (bad) pop jns bound mov test pop sub stos fiaddl push fs rolb imul jg test sub inc jp mov push xchg mov add jmp scas push iret mov xlat mov fxch (bad) add mov psllw pop cmp mov inc or in adc push (bad) or arpl xor cmpsl rol loopne xchg pop scas and sub movb sbb add cmc prefetch iret fwait or xor mov or in mov das lret (bad) mov inc or and pushf jmp dec xchg and rolb in test dec test das adc outsb add sub popa mov out stos inc sbb push mov ja test xchg rcrb inc adc jb arpl add or fiadd jo test inc pop sbb popa pop outsl sub clc add call mov ljmp mov (bad) xor dec xchg fstps into xor fwait scas add pop movsb mov iret rclb or xchg push pop test or and adc push cmp inc push inc idivb push imulb mov pop (bad) flds insb sub je and push (bad) and pop mov cmp jecxz dec sub rcrb mov xor movsl jnp ret inc or (bad) stos pop sbb sbb lret xchg movsb or pop and adc adc loope or jo or fwait int3 adc cmp push or push and shlb add fdivrs adc dec pop mov ret mov adc aaa sub shrl pop lds or pop xorb aas daa outsb movsl rolb push or hlt insl insl lods pop pop in jbe mov shrb mov icebp jae push dec insb cmpxchg enter (bad) (bad) popf (bad) mov mov sbb mov test mov push inc out sub push mov pushf lret mull mov xchg mov add adc sub jne mov imul nop and and push nop or int loopne (bad) insb (bad) jb (bad) outsl adcl bound add and xchg dec mov hlt (bad) xor pop test adc sub inc add add scas jne add sbb adc popf adc loopne cmp jne push stos loop mov xchg adc adc and pop pusha mov push add mov test mov jo addr16 enter or lock movsl add sub adc mov out pop mov or sbb or cmp insl or mov mov rorb (bad) lds and outsl xchg or add push cmovnp sbb inc push sbb cli addr16 inc cmp jno in push dec sub mov mov or out or jo ret cwtl (bad) nop/reserved dec loope pop pop pop outsb push and nop hlt xlat std (bad) mov sbbb cvtps2pi nop pop hlt inc fadd add cld add aaa jle jne mov xchg je cmp fiadd icebp popa cmp lar xor mov insb sarb es sbb jne or mov (bad) ds dec push mov enter fcoms fsub add jo test xor or mov cmp mov rcrl and movsl adcl adc mov adc mov in adc add add jg hlt fisttpll daa mov mov sub movsb sbb adc adc adc fmull and loope scas add pop pop mov (bad) and mov in or sub in rcrb jl push cmp jg pusha jmp js and cmovno inc in dec sbb cmp add sub ds inc ds jno fcompl inc inc sub movsl or or inc imul iret adc pop in sub fs test xchg fsubrl add push or xor fs dec cs add jo jl mov iret enter addl push lahf insb push orl lock ja adc adc or push arpl xchg sbb sbb cmc sub lret loopne out imul wbinvd or roll arpl mov faddl scas jl push xchg aas lock or or imul daa mov or or cmc loope rcrb jbe mov stc les add lret lock cmp jnp sub mov and je push cmp add iret mov outsl insl xor fdivrl iret dec outsb imul mov enter andl mov mov push call cmp js fcomps fbstp and sbb adc xchg xchg xchg adc push fisttpl push xor (bad) aaa add bswap leave leave enter hlt lock leave leave leave in call leave leave fnop aam cltd in lret int3 pop mov hlt test leave add rolb cmpsl fcoms fwait mov dec xor cmpb and mov dec sahf xor sub mov or push cwtl mov ret adc mov daa movsb mov cmp imul or out movb (bad) into scas xor or test iret inc gs xchg jb inc pop mov sub mov or mov pop cmp jmp pop cli mov pop push mov ljmp and jae inc ret cmp or ret cmp sbb sbb fwait push pop adc and orl (bad) push jge movsl repnz nopl ja mov or push sbb add xor subl cmp and or push popa cmp jle push mov mov pop jb add sub mov sub or aam pop and push jle sub mov loopne xor daa jmp dec mov mov sbb shr sub mov inc push or sbb or lock nop adc jb pop shll adc fild (bad) push jns rol sub xchg xor xor mov sub (bad) loope mov lock ret xor inc or sub imul ret or mov lock cmp sub and fwait xchg add dec xor outsb cmp aad fs jb repz adc xor adc dec lods or insl call mov push lea decb lock inc and ds jb push str in inc or daa push (bad) fisttp push dec inc pop cmpsl push sub sub adc insb pusha push add repnz add leave dec push sbb or push stc in scas aam jne das cs movsb push sbb pop mov lret pop fsubr fadds dec or test mov cmc movsl mov jp adc mov push sbb int3 mov fdiv fsubr mov push insb pop ud2 out negb and mov add sub test xchg mov xor add or rcll sub ja cmp into mov inc xlat inc outsb jne mov insb popa jns jae push push add dec in adc and or iret in jl and int3 adc je ds and je xchg dec shrl pop mov push push inc push adc decb nop xor or and adc push mov inc cmp cs dec jg ret inc push cmp dec prefetchw xchg mov inc outsl sbb pop xchg cld mov pop rcll mov sub out lods cmp inc adc xchg outsb sets inc negl fildll push int3 addr16 dec imul imul cltd fbld daa dec cmp rclb dec and cmpsb jne fs test data16 sbb movb inc imul jnp daa add test cmp or imul shrb es sbb and pop adc and cs push mov les adc push mov push dec fistl push xor incl and movsl xchg adc adc jge and aam loopne dec mov adc shll daa push cmp movsl lods scas push mov jl out repz pop sub popf out fmulp push rcr jecxz mov ja pop out aaa push mov aaa sub ficom dec push add add aaa repz add pop mov cltd (bad) or and push xchg arpl xlat fsts daa mov (bad) aas push adc add cmpl push push inc mov sbb daa and adc test add inc popa stos or outsb sbb popf nop nop jbe mov pop clc testb (bad) mov clc mov in movsb sahf mov shlb sbb ja adc cmp das push sbb or sub and nop adc pop movl test adc enter sub sub mov sbb sbb dec sbb cmp into in addl inc jns fsts mov add (bad) adc xchg dec adc hlt fsubs enter and inc jno push rcll in push mov fbld (bad) mov call mov xchg adc or int3 mov pop rcl jbe push fwait mov xchg (bad) adc add mov sbb popa pusha outsl jle (bad) xchg sub pop cmpsl push test xlat lock psllw into cs sub jne mov sbb loopne es push mov add dec data16 mov and cmp mov pop movsb cmp mov push ret test pop movsb fs sbb loope into fnstcw hlt jne fwait mov cs push sbb loopne and lea sbb arpl in push adc daa xchg or push pushf sbb adc jmp mov mov dec fstl aad sbb mov pop pop xor arpl shrl fildl out pop loopne inc js sbb aas inc bound and xor jmp daa pusha mov and (bad) inc enter and nop enter cmp adc pop popa popa lock clc sub mov dec das adc mov shrb rcrb push jmp jne add or andl pop xchg js pusha mov xchg xor mov pop addb cmp insb inc pop fsubr sub movsb test or push inc test mov lods jmp sbb bound add mov pop insl jle inc jo or cmp enter and or fcompl gs jmp mov pushf in sbb out mov (bad) fadd cmp test std inc dec lea gs sbb leave sbb outsl lock cmp mov fnop mov jae jmp mov xor cs repz shl aas es sub daa call call mov xor pop dec mov pop test arpl sbb mov out mov sbb inc test fwait cmpsb gs and je cld xor (bad) jb in jmp cmp and call add push cld mov mov orl jnp jne lcall xor sub add out xor inc xchg sbb cmp xlat imul adc pop xchg inc xchg out leave test lock adc xor push stos and jns xor clc xchg js push push sarl push add sbb nop rol add pop inc mov aas test push les add sbb or cmpsb jecxz movsl add pop inc xchg and dec je or sbb jg xor or jmp adc lock sbb jmp push inc sub fdivs repnz dec xchg and pop push xor aas rclb xor adc sbb pop and lcall jb in push imul adc pop jb adc sbb mov enter inc arpl movsb xchg rolb aaa mov in iret inc cmp dec fcomps pop cmp lods hlt and subl fmull xlat push jbe inc outsl mov ret mov or pop jo ret sbb arpl adc xor mov je push pop sbb push fwait dec leave xor mov push or mov cltd movsb xor insb loopne or dec jo shlb pop jo dec cmc notb clc add in mov mov nop lret dec cwtl addr16 sub cmp inc dec gs add push push cmp jae add push cmp dec nop add pusha dec cmp sbb xchg mov lea inc daa push sub pop enter lods incl outsb or or mov sti fmuls gs push int push push subl loopne pop jnp mov push shrl daa jg push jbe fist xchg sbb fdivrl push daa sub inc lret ds sahf mov and loope out jge nop mov push and pop lock gs lods push inc adc imul adc sbb push sbb dec or cmpsl dec xor adc dec cmp sbb and fsubs push cmpl jl cmp and dec jae push stc enter xor jle decl xchg pop push paddusb mov mov stc pushf add or sbb mov xor xor xor xor xor xor xor int3 rcl xor xor fcomp loopne xor xor call cmp xor cld add add xor xor or adc xor xor sbb and xor xor sub xor mov push sub or je (bad) cmp dec out mov rorb pop arpl jge sub sbb leave add loope fldcw xchg mov ret lret inc je xor add nop inc mov mov push adcb sub push sbb gs movsb loopne xchg xchg add test sbb mov push movsb fs je sbb xchg gs sub int3 mov dec mov enter xchg fcomp fsubr lret push loopne in movsb jb or and nop lret xor inc sub push sbb pop clc jo dec gs cld orb fidiv nop add xchg add les movsb xor adc adc lret loopne lock cs sbb inc and sbb sub add sub test mov mov xlat xchg inc pushl sbb push inc std lret adc jne je gs gs sub sub imul insb outsl jae and sbb mov (bad) bound add mov push popa jb or mov xchg add test je jne dec push inc xchg lock gs addr16 or mov jno jae adc bound cmp sbb in insb jns jp jae sbb xor pop in dec push pop pop pop pop (bad) sub and pop xorl push ficom xchg mov popa push adc or ss mov pop mov pop dec xor xchg mulb (bad) (bad) xchg iret add inc cmp pusha jns xor add add sub iret ret or rcr mov in fildl daa adc dec fstpl in pop insl pop cmp pop pop ret addl nop (bad) ja and push jg pop and loope je addr16 jne xchg fidivrl pop fs mov outsb mov imul xchg sbb sbb sub inc outsl arpl (bad) mov pop push mov inc hlt xchg pop outsl xchg ret pop repz fiadd sub test sub insl add dec cmpsl hlt sub (bad) fcomps jne xchg push add mov lods nop sbb daa aad mov out das jbe subl cmpsb add notl xchg (bad) sub mov cmp jl imul jne ljmp and nop push mov fs cs push in dec jb mov pop inc xchg andb xchg add in add pop lea in push xchg pusha lds sbb in jo xchg sub add inc push add push xchg and inc insb pushf cs mov pop fdivl cld push pop cmpl ja dec inc inc pop bound gs aaa cld dec pusha jl insl pop and sahf outsb jo fcmovu add push incb (bad) fnstsw nop jb ljmp inc push pop cmovle xor imul loope lods andl cltd sbb push xor mov adc call jne incl leave repnz fadds push pop cmp cmp or aaa popf lods jl dec dec cmpsl jae insl cmpb push dec push mov push lods push inc xchg dec (bad) loopne rcrb inc loope cmpsb dec addr16 fdecstp ja (bad) mov inc inc outsb or inc mov inc dec in adc xor mov mov inc popa rcrb xchg addr16 mov mov or push jo ja je or xchg (bad) and imul out arpl arpl adc insb mov xor sbb xchg sub scas mov or add mov mov pop dec inc add inc push lods out push mov push outsl aaa jb test inc push in int3 in (bad) in incl fldt push or das pop and orl mov sub sbb (bad) sti cmpb jno xchg insb pop shlb pop enter das cmpsl pop enter jo lea ja inc nop pop push insb imul aad mov add call mov insb or mov rol insb push jl push ret pop inc dec rolb ds mov add sub and mov ret push inc or inc cmp and clc pop pusha loope stos rolb inc addr16 dec in test cmp icebp mov push mov or cmp mov cmp ja and jb mov add inc xor push push inc inc es pop (bad) adc mov xlat mov inc inc xor push push and jecxz inc inc mov popl test and push cli adc cmp js or jl mov cmp dec cmp rol adc push add dec and and pushw and inc xor sbb pop bound fwait and inc dec adc sub add loop dec sbb or inc das jecxz xor inc lea or or fwait mov inc ficoml imul pop inc xchg adc pop pop das subl inc or movsb or dec mov lock mov dec sub cmp out push fwait push add dec xor add add push call js orb leave inc int add aam iret mov cmp pop (bad) pop outsl push sbb xor inc sbb or mov sub push push in orb dec jg dec repnz fwait adcb push adc or (bad) rolb inc addr16 and push cmpb cmp dec ljmp pop jb dec inc sti mov shrb mov push out int les mov push insb (bad) jl or cmp mov push fmull int rcll adc in ds ds pop mov lods push cmp out int imul and cmp add mov dec nop push popf data16 jbe scas call mov adc imul popa fidivr inc sti nop pop pop xor jo popa fwait jbe or scas lsl (bad) dec mov or xchg push pusha inc jmp jl or or cmpl mov mov adc mov nop popf jmp iret imul lds or roll push add in (bad) sbb loopne xor inc or and jge adc es push or inc or inc jo add mov inc xchg jmp sbb dec mov dec jno dec cmp nop sub push mov cmp push ret int3 xchg sbb aaa mov add test sbb push mov cmp sbb jle sbb or inc sub sbbb pop push inc push loopne rorb clc sbb pop imul sub sbb lock mov or pop or dec push push clc scas xor scas pop movl out or lea movsb mov rcll mov push mov dec inc lea jns push sbb sbb adc or int mov push and add cltd aam fs push sbb sub pop ret mov adc lahf jbe add and nop rcrl adc lods lea add or adc jge icebp jns pop test lcall in pop adc pushf mov aas shr xor cmpsl mov adcl les xor adcl adc sub nop cmpsl pop jg xor sahf dec xchg sub or push fs push mov imul ja push pop jae dec mov xchg aad xchg lahf lcall rolb jnp stos mov or sub imul dec cmp imulb xorl jb inc jo mov pop xchg dec loope dec and mov jg loope inc es mov pop nop nop iret push mov ret push adc or lea lcall jbe ret jl fsubp fiaddl mov js inc xor das lea insl orl insb and mov or inc pop xor jno and mov cmp decb stos cmp jl cmp cmp aas test xor daa cld (bad) mov jmp test and mov test ds pop movsl push cmp inc pop popf inc adc daa push pusha shr cmp cmp jns out jp mov xchg andl push mov push push ficoml test fs pop sub add nop lahf add add or arpl add pop lcall pop push cli mov int3 jle pop dec outsb outsl ds ret (bad) mov ret pop push outsl pop or and sbb paddsb les push stos push lods mov cltd pop mov adc xor sub pop nop (bad) repz jle mov jo mov subb pusha jns mov sti push or pop push mov dec aaa jnp dec cltd loop sbb lret cmp xor addb data16 jl ficom cs inc add out in mov pop mov add loopne push jmp adc js cmpsb mov push sub cs out in push or jb push jo test cmp xchg clc adc mov xorl cmpsl push data16 xor cmpsb dec sub xorb inc add inc notl pushf adc xlat push dec cmp inc pop je (bad) jnp js inc mov sub (bad) fsubl jl insl add imul testl mov fmull lea dec xchg out xchg rcr fs pop pop aaa jl xor xor in in lcall outsb inc adc inc fnstcw xor inc notl pop pop pop mov es inc push and or inc repnz inc mov xor gs cmp cmp jl inc clc mov and xchg adcl mov pop cmp push or push mov std pushl ds imul lods data16 adc (bad) and lods outsl iret jg xor loopne pop rclb pop sahf mov sub or cmp xlat and jno push imul xchg fwait push hlt and (bad) xchg ljmp add popa ljmp lret (bad) xchg ret pop inc mov mov fs mov inc pop or pop out mov push and aas mov mov dec adc je push push jbe mov sbb scas xor adc (bad) jne inc inc movsl dec jae xchg insl test (bad) int3 mov iret pop bound pop xor or and (bad) mov cld jae clc cli dec fwait pop orl dec dec add xlat cld jo pop pusha (bad) mov fstl or fisttpll adc test test addr16 test xchg cmpsl rcr insb jo cmc pop push or outsl pop xchg ret (bad) xor call xchg pop mov je push pushf aas pusha pusha dec xor mov orl dec push push imul rcr insb bndldx push lods bound mov push pop push jmp js mov repnz inc ss add mov xor imul nop dec push push pop roll pop mov rolb imul cmp jl cmp scas push outsl jo (bad) and cwtl cltd cmpsb mov cwtl and sbb add jb cmp and sbb (bad) sahf pop mov and rcr out inc push je iret push mov fs dec and imul test xchg sbb sbb pop add and rcrb xor pop lahf rcll (bad) es jae sbb lock (bad) mov data16 mov push dec fs or iret lock movsb add adc out faddl test dec cmpsl stos push mov sbb aaa mov mov rolb mov lods adc pop adc push pop sub mov add inc add (bad) inc les in fidiv dec adc add leave lcall mov cmp pop dec push push or mov xor xor movsl dec jle inc push add jb fcoml xor pop jp cmp sahf popa add and xor sbb add stos xchg cs stos je inc stos mov sbb push bound mov call sbb jae pusha cmpb mov roll (bad) xorb inc push pop jl loope dec clc rolb inc and xchg pop enter loop cmp or or mov movsb outsl xor imull add arpl or cmp sbb lret jp (bad) arpl int3 push loopne sbb addb leave popf inc pushf fs jmp push loop lds rclb (bad) fs fs loopne jl add inc and mov fimul (bad) movsb gs or push inc jne je sti jo pop pop sub les xor mov sbb add sub cmp outsl mov lock mov dec adc sub subb add mov cmpsb nop cmp mov pusha mov cmp cmpb test add cmp dec fisttp adc pushw or mov jbe pusha mov (bad) mov pop insl lret add mov cmp xchg dec sub fidivrl mov add sub jne (bad) mov push or rolb in sahf cmpsl add mov or push sub mov jns add xorl in adc pop and inc and pusha movl lock mov cmp mov mov add sub arpl mov sarb addr16 jne xor xor ret mov aas scas cmpsb lock pop insb gs sbb and or dec mov movl inc inc loopne mov shr inc sti mov sub and push sahf mov adc sar test add adc cmp add imul dec in push loopne push pop outsl cmp mov cmpsl mov imull jb and loopne sti (bad) pop shlb xor sub add lock adc fmuls or push jno hlt add push xorl imul push stos sbb add add inc inc pop pop inc loopne outsl mov inc sbbb inc ja xchg out inc stos dec adc aad mov (bad) pop mov xor sarl mov mov and (bad) xchg xchg gs cmp fidivrl and hlt jb jnp lsl sub lahf movb xor jp js xchg push or (bad) ss adc cmp outsl xchg inc push mov xor lods and jmp psubd jge outsl adc jle icebp mov and xchg imul and cmpl push mov jmp in lcall out push aam add mov lock lock cmp je fcoml add sub cmp (bad) mov pop insb insb mov fs inc adc in in movsb arpl clc sub inc ljmp adcb imul mov test mov jno fcomi fs push sbb lods mov jne adcl cmp lret xchg pop xor add xor and sub xchg push ja add test pop push inc dec jo lret add inc fisubrl test daa repnz pmulhuw in and and in in es sub in in sub sub in in cs adc in in adc adc in in push pop sbb in in sbb sbb in in push pop add in in add add in in push pop or in in or or in adc cmp repz shrl lods sub repz movsb and sbb adc iret repz or add jns cmpsl stc cld clc je insb in out sahf out in fcoml jns aam int3 inc les sahf out mov out sahf out movsb sbb adc out sahf xchg or add cld imul xor hlt je insb repz repz fcompl repz push int3 dec les iret repz mov lods sub cmp rep and sbb iret repz adc or add sahf out ds divl in jns out fs fcoml sahf out dec int3 inc cld cmp inc mov mov sbb fsubrl jnp inc rcl xchg jl xor loopne and mov xor adc push push push inc pop repnz aad lahf fsubl das mov outsl and sbb jle mov and mov push loope push movsb mov jge rcrl xchg decl inc fidiv mov cmp je loope inc mov pop nop mov test fimul je add mov mov dec sub cmp xor push repnz or add xchg nop pcmpgtb in stc push je pusha and mov rclb dec or popf mov dec inc cwtl inc es in inc (bad) js xchg (bad) icebp add pop mov jg adc xchg jo lahf sbb or mov in es mov jb pop fdivs push push xor lods pop jg cmp adc xchg enter add or jno enter pop xor push xor lcall or jnp rcrb cmpl clc pop in and das inc scas adc ja pop mov aam cmpb push fadd fcoms rorb leave and roll xchg subl pop loopne add or mov lods jae jbe sub push xchg cld xchg or bound or sbb dec stos or or lret nop dec jl pop mov (bad) je sub mov and sbb add pop xchg mov xchg in jnp or jae pop sub sbb cld sub xchg and adc movsb insb or dec cmp push or mov push xchg mov pop push inc mov gs inc rorl je mov mov pop adc add xor popf adc int3 dec ds cli cmp cmp fs js notb xor xchg ja roll ret dec jb jb pop xchg imul sbb call sbb mov sbb insl outsl outsl scas fisttpll sub push (bad) aaa add add je jo xchg sbb pop sbb enter push or mov and xchg test or dec xchg cwtl adcb add es ret inc sahf ja js fcomp daa adc fnsave or xchg loopne loopne rcr or jo and and sub jns and nop and iret sub loope cmp jo test or pop sub jae cmp push adc add fmull popa xor iret aaa xor inc shrl je pop or and add (bad) add jo fldt add das call mov cmp jne mov mov add mov scas or pop push ja pop rol aaa arpl fnstenv push push inc adc ret inc sub mov das mov and mov cmp (bad) out mov cmp push inc sbb fnop pop pop aam add outsb movl ffreep xchg icebp test xchg iret arpl sub lret mov dec popf popa stos sbb push dec adc sbb pop pop aam jae jae jo mov cmp jb mov movsl das das jb iret inc mov xor add inc dec mov push inc jb add mov xchg dec sbb ljmp mov and cmp (bad) dec inc pop inc movsl or dec inc sti mov mov bound outsl add add cmp mov lahf add rol mov jb test push loop jecxz jge cmp jle mov inc fldl jns insl lea xor push xchg cmp adc mov push ljmp sub or push scas imul or jno pop or push add bound scas jge inc imul add mov in or dec int movl mov testb lret or aas lods loopne (bad) adc cmpsl add adc sbb xor arpl aad cmp dec jnp daa je mov jns popf add pop dec cmp daa in (bad) (bad) add es mov rcrl lea test bound adc pop jg add inc in dec test jmp call call nop stc (bad) pshufw test nop inc dec and mov sub push popf add insb jo,pt lods rcl sbb pusha push push push add xlat insl and lahf jmp daa sub (bad) add test xor xor push dec mulb dec imul add rorl movb add arpl fisubrl push or adc outsl pop jnp (bad) js bound pop es into movsl jnp jb jb popa or out mov daa scas bound jbe pop icebp fcmovbe es gs aas jge jbe pop addr16 jb addr16 mov pop mov arpl insb fildll imul idivb insb das je cmpsl push clc (bad) sbb and outsb xchg mov mov loop pop repnz pop jb arpl or cmpsb outsl dec pushw das gs fistp add or outsl pop movsb sub inc (bad) cmpsl jl shl loopne mov mov sub mov pop fimull addl nop jbe pop jb ja or in add int3 je cld rol (bad) cmpl sti and icebp push aaa and movsb sub adc mov fnstcw inc mov add pop add js push or pop or or pusha push subl ret ret xlat mov mov mov inc mov mov ror add jne xchg addl out popa orb icebp movsl mov fild in (bad) (bad) xchg push mov xorl adc or out incl xchg xchg push or xchg fildl rorb sub or addl inc cltd dec jnp in clc push pusha movsb mov ret pop jo out jne pop in add mov xor loopne jns add xchg (bad) and pop pop enter add mov xor sti mov clc jge add (bad) jb or jb jmp sbb rol dec icebp or and mov inc jle adcl sub repnz pop xor cmovg sbb sub sbb rorl sub inc mov nop and dec or cli fmul push stos stos pop inc adc sbb and push cmp popa movsb jle push pop add sub cmpsb imul add push pop pop or or or or or or sahf movups adc adc sahf out adc (bad) jg out sbb and and and out mov fildl in std push xchg xor arpl out test jl out jmp or cmp das inc push bound cmp repz cmpsb mov shrb iret repz cli or ret xchg mov fidivl fwait add mov add pop push adc adc dec sub in lret sbb mov or or and and dec sub xchg lret adc adc jb in cmp test inc push inc sub sbb xchg dec sbb jb in push sbb stos je movsb pop sbb test popa imul push pop and mov and shrb lret and addr16 add add push dec lods add sub test les inc cmp mov pusha mov (bad) xor fadds adc or daa push lea lea mov es pop js lock jo popa or pop push or push scas fnstenv incb (bad) call test js jle je mov sub cmpsl adc sbb push repnz mov rolb push mov or push loopne xchg pop (bad) das rorb lea mov pop movsb sti add aam ret push shlb popf and mov mov popa cmp jnp xchg push pop (bad) jmp mov inc push addr16 mov adc xor adc push push rol mov sbb pop xor hlt pop mov and mov ds inc repnz iret add mov fsubrs pop add push mov mov add mov mov mov pextrw dec inc inc rcrl pop pop addr16 sub mov ds push je push orb aam popa jns jecxz xchg add jl add js or arpl out dec dec adc mov loop or enter testl pop xchg pop or sbb pop push or sbb mov push and ds jmp repnz pop push rcrb dec out pop lahf or inc into dec insb (bad) and in add dec outsb pandn insb push cmp test (bad) jl mov (bad) aaa cmp mov mov inc call jecxz cmp ret in mov sub ds nop bound inc pop pop sub mov pop sbb or mov xchg pop scas mov sub mov loopne push stc nop scas pop sbb (bad) lock fcomps xor daa inc or push addl add ds or or or (bad) leave add lret js cmp pop jmp push adc (bad) outsl add jb imul leave adc dec pusha push pushf rcr push jb pop adc xchg enter je sbb (bad) sub cmp inc push inc (bad) xchg or adc sub inc jb sbb sbb sbb sbb jns inc jg jns ret insl rorl or add and aas movsb jns leave mov outsb loopne or or add imul inc outsl test push or imul and adc iret es xchg (bad) adc add in sub call sbb xchg pop xacquire dec js jb or dec gs jbe jns test xor xor pop mov push sbb push std addl ret or mov push pop xchg or dec pushf jne push pop scas or add add add jbe sub mov lods test fildl push mov fidiv mov adc jae in rolb enter movb add dec loopne cmp sub add or ficomp sub xchg in inc nop cmp cmp jle sub adc out cmp js test push mov in jnp cmp sub hlt push mov out or mov push pusha dec es inc push jo or aaa push cmp push mov add mov mov push or test mov pop test jg cmp lahf nop sarb add cmp adc fcos xor mov push xchg adcl pop pop outsl pop sub dec xchg pop push cld xchg out sarb adc jo jbe dec cmp xchg sar cmpb push mov or bound in jnp lock mov enter int3 push push les dec loope idivl movsb push inc pop push xchg mov (bad) cwtl sbb roll shlb or and hlt cmp bound xor add adc dec jo pop push lret dec cmp decl and int3 push push adc xchg adc rorb adc aam scas lds pop adc jo (bad) adc out or jae mov or sbb xor xchg pop sbbb push leave push mov sbb inc icebp pop les mov rcll and loopne xchg jnp in mov cmpsb xchg test cmp sub cs and hlt sub ds and push loopne loopne inc sbb xchg ret xchg call scas call enter sub adc add das aam sbb fimul mov mov adc dec add stos (bad) lahf add or mov repnz sbb rcrl sub fimull ret pusha sbb pop and (bad) js sub pop pop cmp sbb lds add js add add or xchg rcrl mov cmp push gs mov ret xor adc inc leave push adc sbb mov mov dec sbb sbb sbb push pop push jb dec cmp ret and and and sub pop sub leave das xor and xor xor addb movsb sahf or jmp mov int3 or outsb movsb xor mov pop adc dec adc divb push imul cmp mov rorb or xchg jge inc inc mov ret scas pusha jnp popa add test xlat jne nop movsb jnp out scas adc mov adc jmp xchg sub hlt add (bad) adc jns sub jns add (bad) add or fldl iret lods in mov cmpsb adc cmpsl ds mov outsb loopne push jl les movsb stos movsl pop movsb iret dec repnz fnsetpm(287 jcxz or mov fimull fcmovbe (bad) ss repz adc in iret adc and lods loopne nop shlb add inc hlt aad fmuls insl test into fild dec daa inc cmpsl sbb inc mov mov icebp push dec xchg loop mov hlt pop pop adc mov mov mov scas ljmp imul fcompl mull rorb mov push sarb adc in push int3 xchg imul pop sub bound sub pusha mov (bad) pop cltd mov nop enter sbb pop enter loopne ficompl inc (bad) and popl and xor xor dec cmp sbb in and or add or sbb dec and adc lock push jle orl dec sarb rorl inc gs notl xor jl frstor dec adc mov aam gs (bad) mov or fiaddl pop adc xchg xorl mov push and sub push fs xlat adc cmp push dec sub fisub (bad) imul sbb and sbb jb sbb sbb cmp aam adc push mov or pop xchg pop mov sarl (bad) pop mov stc mov dec insl gs add mov fwait nop inc insb mov inc enter and cmp adcl dec inc lods mov insb mov adc dec lods push inc fstps pop dec jle cmp cmc je add or adc adc loope fisttpl xchg and pop daa add loopne scas xchg sub (bad) sub in and add test loope (bad) push in mov in fisubl or mov xor mov xchg mov sub loopne push std push mov xchg xor orl xor push xorl test push lds mov ret decl mov inc sbb jne or mov cld push cwtl dec in add dec cmp inc sub xchg cmp xchg pop and ds cmp push xor add dec sub imul int3 mov fs (bad) lea nop test xchg adc add push pushf sub pcmpeqb iret pusha adc mov push jp inc push dec cmp inc add daa out rorb push lret or push dec xor mov in sti scas push orl add jnp sarb loopne out sbb dec scas adc test out prefetch push xchg pop clc addb loope add pop orl pop add or ja daa xor mov inc outsl les aas jo pop (bad) rorb or cwtl std inc and mov pop mov (bad) add push cs fcomps sub mov jmp ficom repnz cld inc mov adc dec push loope mov orl jbe test jb pop jl movd mov push cmp sub call lods mov call and test popa int3 inc cmc (bad) in bound loop out shrl dec hlt push lret inc and pusha cltd pop (bad) sbb or out popa fldpi sub push sub adc xor jge lret popa arpl lods (bad) fistp mov xchg add mov push push push fldt shll push movsb incl or jmp mov jg or push repz call dec popa insl outsl cmp push (bad) mov push movsb xchg inc movsb add pushf sub push push cmp in pusha mov test pop mov mov xor popf sub dec jle ss and fisttpll dec dec add cmp out (bad) cmovl jle push mov ja xchg mov xlat inc jmp mov inc jno inc cwtl or pushf cmpsl mov jge push das mov inc xchg test jle jmp sub (bad) jae pushf or jne lea pop mov jno pop movsb or mov xchg mov sub adc push in cs cs push nop push sbb sbb mov adc push pop xchg lea cwtl popa in popa add mov lret add xchg idiv dec ret nop test je or xor pusha mov push xchg sub sti cmpsl (bad) movl dec push pop sub cltd mov dec dec xor and cwtl jl mov fmuls pop subb add mov xchg inc adc xchg add in jo or xor out mov mov and jmp popf js push mov add loopne pop mov ret shll jecxz mov inc nop test or sbb andb jne push inc mov mov cld test or or stos add inc or add jne pop jae push inc or dec dec loopne test popa pusha or mov mov cld cmp cmovb jmp in or shll push and lods rol adc or mov lods jle dec stos sub pop adc push pop rol push icebp adc aas mov sub dec subl (bad) push js inc adc es inc daa insb test or mov insb outsb ret jne faddl push call xchg adc mov or jp adc rorb add pop leave jo mov (bad) sbb sbb cs xchg sub or xchg imul test jle mov mov mov or (bad) xor jo lods xchg sub xchg adc inc sub jno rorb and mov loopne negb mov js mov iret rolb leave pop dec add pop or cmp repnz adc add popf xchg xchg xchg test adc loopne sbb cmpsl je mov addr16 je push call sarl mov mov adc testb hlt xor push lret out mov cmp sub jo fadds adc and in bound jae or insb inc push adc mov fldl cmp mov pop sub iret push jns dec repz ds add dec outsb sub mov jne dec adc pop mov pusha cmp push sub mov xlat push nop dec aad mov pop gs xchg inc lret dec pop inc mov add adc mov adc adc or cmp loopne inc daa push test sbb push dec addl dec push inc sarb or pop pop pop and inc pop adc popa mov mov cmp xor enter ficompl or push imul inc pop shll inc push dec and clc inc movb adcb enter fidivr add in arpl addb jmp inc lods sbb dec inc (bad) dec inc test dec lea adc mov xor fwait js or shlb addb xchg (bad) adc pop jo decb in mov xchg mov ret xor adc mov dec pop sub fwait jg test sub dec cmpl jne cmp ret movb adc push add push cmc inc insb xchg mov ret mov movsb aad and inc (bad) mov jae test adc mov jge xor and inc mov mov icebp mov scas cmp xchg xor ds (bad) lock inc pop orl sub mov fisttp psllw call dec adc and lods mov movsb cwtl mov (bad) jno (bad) ja aas mov orl (bad) scas (bad) mov xchg test push ja mov hlt loop or xor pop xor (bad) cmp je clc push jbe cmp or add mov dec jmp jp mov inc cmc ret pop mov dec xor sub fisttp jmp add ucomiss test or iret inc push push push dec dec mov dec mov xor push pop fwait rol mov add scas mov push inc adc sbb loop shlb cmpsb add pusha insb ljmp push sbb fs loopne push and dec dec inc (bad) aad enter dec les jle add das push mov inc or or js jmp jnp (bad) xor mov shll out or aas fdivrl xchg ja jno and roll mov xchg mov rolb js outsl mov pusha and pop mov ret adc xchg insl gs cmp leave lcall push outsl xchg jge rol jl arpl adc cmp push sbb loop cld adc popf ss dec dec mov fwait cmp adc mov adc mov sub pop mov cmp add rorb repnz jne and dec out icebp and lock mov cmp mov cmp add and popf jmp dec add icebp adc sarb lods aas lock add mov xor mov xor mov jb xchg cmp xlat insl or js ffree and mov les inc lcall or test daa addr16 or add mov push (bad) mov seta mov pop adc and cmc adc outsl inc xor (bad) mov popf js pop mov sub test mov call pop mov sbb mov and cmpsl sbb sub leave arpl xchg ss sub jae jns (bad) in popf fst enter push push sub sub lea fs xor add and ljmp xchg mov fldcw inc cwtl pop lods adc aad leave es xor js lcall xchg jmp sbb jo leave add sbb adc (bad) and sub pop or adcl pop mov adc and and mov fisub rorl pop jo or mov popa test dec cmpl inc add cmp and hlt subb cmp jb sbb mov icebp (bad) loope ja lret insl jo (bad) jo (bad) jge inc mov les mov shlb jge push and push clc or and lods sbb xchg cmp lret cmp or dec rcll test aaa inc mov subl scas out push sub idiv inc inc pop ror int push add pop jb pop scas jmp hlt dec xchg imul xlat inc sbb inc dec xchg xlat mov xorl mov dec push addr16 daa insl mov lods xlat sub mov jne iret inc or dec sub mov adc xor mov dec int3 fildll out ret xor repnz mov cltd add mov sub ja adc add test xchg add ljmp jne sub cmpl mov or into mov or cmpb mov pop jmp lods loop jg xchg pop mov push pusha out sbb adc jecxz ljmp jecxz push popa add scas das sub and xchg shl mov and shl iret jecxz or mov ret popa pop icebp dec jns loope mov (bad) in add mov test push cmp adc clc pop dec in push pop sub je pop dec sbb movl or cs mull loopne add addl out mov fwait jge adc les cmpsl push sbbl pop ret jecxz rclb pop rcrl (bad) and (bad) or or sahf sbb test push pop test cltd add dec inc inc daa stos adc lcall mov lods mov nop imul popa push push test roll inc (bad) or add xor adc daa repz mov pop and lds icebp jmp push and mov (bad) adc cmp addr16 jg jmp jo (bad) aas xchg fidiv ret icebp lds mov out cmp dec movsb arpl movb cmpl bound insl notl dec int3 lret je sbb mov jns call add push pop shrl pop sub sarl xchg cmp push test fnstsw and jb fnsave xchg sysenter inc jnp les outsb or call mov pop sbb fidivl or sub jle cmpl cmp or mov dec in pop fildl aaa fdivrp inc sbb xchg add mov adc cmp jo xchg xor out sbb xchg mov pop sbb xor movsl stos add ret mov es lahf dec lea xchg das mov cmp rol ret (bad) mov mov mov imul sbb movsb shll imul xchg nop cmp cmp fcmovnu mov sbb popa sbb or or mov dec and push or push push xchg bound sbb add sub pop in mov jb mov pavgb sub je mov pop xchg pop push and cmp mov out data16 andb dec xchg loope and cld lods and adc fcoml mov insl cmpb mov mov jne mov jmp call pop and movl dec ret fwait lret mov jmp cmp (bad) pop ret cmp cmp adc addl and and mov loopne inc daa dec xlat pop cs pop add aam push cs xor (bad) jle mov mov mov dec dec add inc test fs xchg pusha or shlb cld push and scas adc sbb inc cmp loope add in xlat addr16 cmp inc shrb test and movsb pop jb (bad) dec add pop lods lock pop xchg (bad) mov add push sub sbb ss popl xor les mov rcr jecxz add ljmp lahf jge iret inc adc mov sahf mov mov xor cmc pop sarb ror and jnp ss test jne inc pop inc push imul decl cmp mov dec test mov std mov mov jl dec rclb xor lret (bad) sub lret and jg adc xor jae ljmp inc mov cmp jae cmp jns sbb gs inc add jo xchg (bad) mov jmp scas or adc jne andl jg orl mov (bad) cli cmp add shlb inc and dec dec push push inc dec pop add (bad) jb mov xchg inc sahf inc sub fwait je jecxz mov cmp push mov test in add push pusha mov ja icebp shll sbb add sub pop adc xor or dec fwait mov cwtl loope push popf and ret adc sub xor inc iret fsubl jmp dec inc mov popa pop or popa push add orl rcrb sbb dec mov cmp jne inc scas add inc in cld sub jnp (bad) jl outsb cli in jnp and rolb fsubrs inc push mov sbb add sbb xor cltd or cmp mov cmpsb je fisub mov sbb cmp insl xorb and mov mov (bad) mov and fisttpl pushf ret add push pop inc fbld fucomip (bad) xlat adc or je rcrb in (bad) push out cmpsl add pop or jmp inc cmp lea ja ret movsl jg sbbb jbe mov loope mov xchg adc mov add xorb mov test adc fsubrs and cmpsb nop xchg loopne (bad) mov nop sub sbb out fadds push lods call mov cmovs es aad cmp lea pop cwtl es cmp jge and aad ficoml scas add and movsb aam mov inc stos mov (bad) adc xchg data16 jo (bad) loope xlat insl and sub lods cmpsl jns callw mov sbb aaa mov (bad) dec or gs xor sbb adc or xor add jle mov cmpsl shr sub adcl push sbb or leave insb xchg mov fistl loope es or jge and add jns push add mov add scas push push loope add jo lea push push cmpsb iret pop js xchg mov test clc jb mov add mov push xorl subl push mov rolb push sub mov adc xchg cld outsb and test sub and mov sub addr16 pop jns push lock repz or pop iret nop jp sbbb sbb sbb jl push sbb cmp mov jl test (bad) mov adc or xor cwtl push adc dec sbb lods aad and jae sub mov cmpsb adc test fdivrs rorb jmp enter xor inc or xor xlat dec xor add ret rclb sbb bound incl int and xchg into cwtl mov push leave add adc mov add mov cmpsl enter (bad) sti lods xchg cmp add mov cwtl jmp xor inc fimull sarb je das pop or inc fdivrl mov sbb arpl ret push add jg or cltd push sub push sub loop (bad) xor add or inc lcall fsub add add pop fcoms das test pop or dec pushf sub movsl sub pop add mov sbb pop fcmovnb cmp adc sub push aam sbb rolb or sbb and pushl xor bound fiaddl aam sbb aaa add pop or pop out jmp insb rclb rclb pop fwait ret sbb imul fadds mov aas sbb jne jg pop inc mov pop (bad) xor pop xlat sub add sbb sbb and mov cmpsb in fidivl cmp xchg shlb xor addl aaa clc sub and enter xor fdivrp jo mov or add push scas sub inc inc (bad) ficom jb or cmp ret cs push lea xor pop cld xchg sub aad xor xchg jns and movsl in lods in xor add or bound push dec js dec push push (bad) mov add or push inc imull scas inc fmull ffree cmpsl insl push lods adc inc adcb push loopne pop inc cmp push pop and or inc ror fcomp outsb jae mov jmp or mov popa push mov add jl and test mov sbb cmp iret (bad) addr16 and loopne xchg paddusw daa addr16 ficom rcl xchg xchg and dec lock jg sbb mov fadd bswap in xchg and adc int3 cltd pop mov iret repz popa imul repz xor inc dec test add mov and aaa fs out fisubrl mov pop or xor fdivl and rclb inc repz in xor jno adc andb sbb push push fistpl jnp lret sub inc sbb mov neg inc sbb push adc (bad) xchg (bad) les mov jo decb adc imul mov into push cld mov stc mov inc bound pusha loopne es sub or adc push out lods dec int fimull or fistl jns dec inc pop aas ljmp lea enter add sub movsb xchg xchg jnp push jb pusha jnp ljmp cld adc dec cmp fcoms in or push es xlat loope pop xchg jo or cmp fucomip push mov fldl (bad) fistpll dec cmp push dec ja dec out shlb jae and add ret add inc xor popa jmp (bad) add dec cmp mov jl in jp ret cmp das jno or push fwait js jecxz loope fcomi and aam mov mov jno adc sahf in fwait adc in popa add add add inc lock ret pop fs cmp loope rclb (bad) xchg ss xor inc aam or ficoml fstl mov (bad) mov js in push in or and jecxz aaa fstp (bad) fisttp sub sub and sub push pop sbb cmp movsl mov or sub and xor call sub ret movb fdivr or in adc aaa xchg or daa or roll mov xchg sbb lea ljmp in orb adc lock in je lret jbe jmp mov scas and stos mov mov bound sarl push (bad) add mov (bad) jno repz mov mov (bad) stc jge add (bad) lock push mov dec jne jo inc call lds (bad) or out sub sub mov or cs jbe movsb sbb cwtl test aaa mov and mov or push or cwtl mov cmp jo decl jecxz adc jge sbb jns (bad) xor add popa sbb or xor or insb or je popf sbb ffree or jb sbb sub lea imul add (bad) addr16 mov push pop inc or or push mov rorl andb and or sti sbb mov lods movsb (bad) mov xchg shrl adc ja dec adc and hlt jo pop mov add or cmp std pop outsb pop push dec dec dec inc dec push add lret mov add inc jg and xor aaa pop lret jmp or or add cmp sbb lret jg or icebp nop xchg jo scas aas cld or xchg adc sti dec push xor mov adc mov pop cmp dec sti jmp leave jecxz scas bound pop stos in gs xchg dec mov push and bound pop jmp cmp add mov cmpl mov or xchg les cmp push pushf nop arpl adc aam jp fcoms outsb push sbb (bad) adc es push mov jmp xchg cs stos adc sbb ret cmp inc jbe (bad) cmc cmp cmpsb imul add inc or push mov and (bad) aaa loopne add add mov xchg push out enter push cmp jne mov outsl je,pt adc clc cwtl or inc xor enter pop loope cmp jns out ss subl sub or sbb dec hlt jns (bad) (bad) dec or add sbb imul inc sbb cmp test shll xchg pause pusha aaa pop push cmp scas js mov or add addr16 dec sub loope push popa sbb fmuls fwait add xchg loopne cmp inc test sarb jb outsb adc add js pop fild xor or push outsl insb and mov fldl jnp stos outsb pop push in push dec push lods add add or push data16 sti inc dec push mov and (bad) pusha sbb pusha inc inc in (bad) cmp rolb and int3 push jl iret ss dec gs sbb idivb cmp push mov into test or inc xchg pushf nop int and and (bad) push rorl jg notl pushf in mov cmp nop and adc xchg adc (bad) mov pop fdivl cmp push cmp mov out cmp push dec push pop add loopne push jl aas adc fwait loopne cmp out pop sub inc je pop add inc fs daa cmp xchg and and sub ss lret fsubrs sbb inc push xor xor mov loope push sbb nop pop sbb movl xor aaa mov jne cli orl stc mov inc inc loopne jns adc add ja out push out roll cmp fucom loopne adc nop xor add adc pop fdivp outsl mov xlat imul mov insl bound push push (bad) jo or inc je insl pop je or pop or or xchg gs lret arpl insl popa in arpl mov or and adc data16 addr16 mov mov xor pop fmuls jne adc cld psubw clc cs fs push dec or sti add add loopne test push or lcall mov scas ret mov ds push sti popa imul enter imul (bad) or or xchg lret mov xchg or pusha pusha fs cmp sbb (bad) dec pop sbb pop xor pop sti sbb or ss mov mov out adc dec movl inc adc mov and add or popl dec je (bad) mov lea xor daa xchg add (bad) lea decl or push add or repnz add push shr and sbb pop xchg or hlt ret sbb add lea xor jl dec outsb mov add pusha mov lds loopne jb xchg add add out shrl iret jno stos arpl add enter sub adc jnp mov lret push (bad) test rolb add sbb inc push hlt sbb pop fs pop adc pop pop pop cmp nop lock rorl (bad) cmp insl inc lret into push lcall inc pusha pop cmpsl xchg dec dec mov das or inc pop (bad) (bad) mov or and dec push int3 and (bad) push and add incl mov aam pop push pop leave divb pop pop add add iret mov mov adc push stos or in pop (bad) push outsb and aaa inc or mov xchg gs adc add jle cld sbb pop add fmull bound sbb xchg (bad) mov scas movsb xchg adc mov sarb andl bound inc xor adc jmp inc das inc push test push roll lock add add inc rcr lea or or popa shlb dec adc xchg imul and nop xchg cmpl scas out and mov fimull xchg dec out insl add jns jg adc push add or add lret and push adc push pusha xor sub (bad) movhps push sbb add fdiv jmp add pusha add add test popf lea mov xor cmp adc andl xor repnz cmp repnz cmp add adc inc or add mov ja andps push pop add add add add add add add mov dec and or mov mov mov mov sbb ja pop sbb cmp inc mov clc xor jmp ljmp jmp jmp jmp jmp jmp jmp jmp jmp (bad) (bad) fdivrp (bad) stos or (bad) fdivr (bad) fiaddl fdivr xlat call call call ljmp test sar sar sar sar iret push into dec pushl mov dec icebp dec push add jns repz mov push mov xor out fadds xor fs mov jl iret shrb gs imul sbbb jns sarl insl movsb lods push (bad) (bad) jnp div push push clc inc push imul push xchg shrl pusha cmpsb cmp push push and cmpsl stc sahf out inc shl movsb push lock push test push mov je pop insb adc popa sahf dec out jnp sti add test dec dec mov out jnp testl mov cmp shrb push out sbb fs push (bad) pop mov pop sbb test loopne or sarl cmp fcoml ret or aaa dec cmp shll aas dec xor pop enter push repnz mov mov cmp cmp arpl (bad) fcoms or mov mov cld push xor or out int or adc xchg mov xor jo mov dec jle stc inc pusha adc pusha outsl xor insl addr16 inc jo addr16 outsl js and dec leave clc cmp sub imul pop adc push lock mov xchg inc or xor push inc mov popa inc cmove sbb jae popa je xchg inc push push cmp push mov jne sub mov xor scas or inc jle imul sub add xor outsb and xchg pop jbe mov pop add jbe or outsl ja mov sbb adc pushf adc es xor and pop xchg xchg movl sahf fs cltd or or aaa xor push inc rclb movsb mov ja add fdivs std aam imul test fsubrs or xchg or and (bad) sub loope mov jns sbb outsb stos andb call mov sbb add mov pop push enter repnz es addb inc xchg loope adc pop sbb (bad) cmp test dec jne clc sbb add mov (bad) push decb jg push dec add add add mov mov addl jle test adc pop pusha imul or add or adc add aaa mov mov dec or loope or outsb cwtl rolb and and (bad) jg sub mov mov mov mov add push mov sub xor cmp sbb mov in jmp (bad) inc inc inc inc fild std (bad) mov dec ret loopne mov dec faddl xor lock clc xchg out push js in sahf out ds sub je sahf data16 inc xchg add push mov mov mov push rcr shrl mov push mov adc lock ds mov shrl out mov int3 (bad) fcompl ds (bad) fmuls jbe cmpsb push in jge out hlt cld push cmpsl pop push les test add mov int3 mov dec nop push pushf add cmp or sbb inc stos dec sti cmp and js and mov (bad) lods mov callw cmpsb in int sti sbb push cmp aam jnp sti xor jo es push adc push jge imul push orb fcompp mov xchg jl inc dec mov fcomi ds ss les ds cltd and pop add pop and add or je (bad) jbe xchg add adc add or int3 adc (bad) mov jns mov nop (bad) aad (bad) aam and or add in xchg sbb movl scas push aas xchg adc pusha das or cmp add pop ja and mov into notl mov and outsb xchg and mov jne,pn mov sub xchg mov adc push lock js rclb ljmp push fadd mov (bad) fildl push sub ror (bad) insb test sarb idivl test mov sub push ret sbb add lods pop and jo bound adc test or dec fs clc adc pushf pop mov xlat mov out in add mov nop leave jl insb imul sub fwait or andb les dec call mov and push or repz push mov repz (bad) in adc (bad) les mov adc je in fimul push add jo fwait js js sub mov lock push hlt flds add (bad) mov lods in cs rorb inc out push xchg lods xor je cmp les sub lahf fdivr jnp das in add push pop mov adc xchg and inc cmp (bad) testb mov adc aaa jg pop or pusha xor cmp pop or add adc dec sbb es sub cmpsl pop dec or mov cmp nop sar push jmp (bad) pushf lret movsl mov mov das xor sbb jno cmpsb sub (bad) lock inc add sub dec sbb jecxz stos es cmp sub add inc rorb movl hlt add and adc xchg dec push fist sbb ljmp xor adcl adc insb daa adc dec jne cs xor ret xor cmp jne subl fcmovu call sub pop xlat sbb aaa sbb jmp or add dec jb mov addl ja pop mov addb dec inc ret add add int3 je xchg jnp fimull daa push dec dec push adc or push inc push mov loopne jo daa or in mov clts mov sbb sbbb dec push jo imul andl popa push movl lret mov stos add rorb insb jo xchg push imul out mov mov stc outsl daa pop addl pushf cli aaa pop mov add and lahf (bad) adc loopne inc popl lahf dec adc push jmp inc lret and or pop (bad) nop xlat or xchg lea jbe adc xchg pop adc dec repz adc inc dec shrb inc push daa enter adc stc jecxz jne cmpsb mov or arpl movsb cmp adc (bad) (bad) add mov mov sub (bad) es loopne add adc xchg add sbb and test add push stos adc inc jmp jge push push or add cmp jl xor push rcpps mov add fcomps pushf hlt jb popa lods rcl pop sub xor imul jp sub mov sub aas into add dec jbe push dec dec mov or add inc fbstp xchg or sbb adc movsb pop jmp jecxz sub adc mov imul cmp cmp leave (bad) rcl fs enter or fisttpl (bad) push or push dec or les mov push mov push inc in xor (bad) mov or adc adc xor rcll sbb and xor and sub sub call push repnz push adc push xchg pusha mov push popf ret iret add inc xchg pop adc cmpsl mov sub push imul push fidivrl or jecxz add adc ficompl je sub fcompl je pusha shld iret mov jle dec je ja inc aas or pop cld mov add push inc bound mov mov and dec mov cltd clc fstl adc mov (bad) mov (bad) adc dec loope js pushf sbb cmp aas add jo fcoms sbb xor pop cmp jg enter movzbl dec test data16 (bad) jmp or decl aaa lcall pusha mov cmp sbb out or and mov jns fs pop andb xchg cmp and add push dec mov pop add movsb add mov xorb sbb pop dec push add xor mov or inc dec insl sbbb dec fildll push adc mov iret pusha add xchg insb sub lea cld dec in imul test mov push cmpsb push mov add adc dec dec cmpsl daa jae mov push orl bound dec mov push inc pop (bad) and cmpsl adc pushf push divl mov push mov sub mov push insb insb push out (bad) fsubrs jnp popf push pop (bad) aad pop inc inc jp lds addr16 add bound pop or cmpsb mov push sbb mov lods push test test add sbb or sub mov mov xchg mov movsb mov in adc cwtl dec or adc sub (bad) xor and xchg pusha neg xchg incb cmpsl subl cmp cmp (bad) jae push push (bad) fs daa ficoml jp les add (bad) mov lock fisttpl icebp inc bound inc andl pushl add pop sub loopne add jb xchg movb jmp nop dec cli adc xor dec movsb dec mov inc or sub les (bad) ljmp fbld shrl ret mov ret lret push xchg and out popa add insb lea flds in xor inc fdivrl cmp bound inc je data16 sbb pop movsl pop (bad) test in sub repnz dec push in movsl js pushf clc lods inc (bad) sub hlt insb push imul (bad) adc enter mov cmp jecxz inc test xchg sarb orl mov cmpl lret mov sbb fcoml inc fildl into mov and adc mov aad mov add cli push in (bad) fsubrl cmp (bad) fdivs lea or xchg mov cmp adc xor mov iret xor in inc mov outsl ss xorb lock sub add sti push sub fincstp cmpb jmp sbb imul push jne dec mov lock xor imul jle inc jo incl push (bad) sub in daa adc add mov movsb test fmuls inc in mov push inc dec jne addr16 and mov in adc xchg pop data16 and lock jno cmp add je popf lods les cmp dec insb aas xchg dec inc jne and sub dec shlb ja push dec sbb test adc mov sbb lods movsl negb pusha pop in sbb or decb push jbe push dec sub push cmpsl push or clc push push push jne push fild and adc lock push pop push dec push in cmp jge jne pop imul jmp xor cmp leave data16 add push in inc pop loopne or call fucomp xchg jg jl movsl test sub jmp push fisttpll dec adc mov mov sbb inc add or cmpsl shl rcr fdivs test sbb and jb pop push xchg cmpsb in stos push pop or xchg ficoml xchg inc ds fnsave jl mov js add lea xchg sbb adc aas call jbe fdivp add je out ds and and push rolb test sub call and repz daa pop xchg cs xchg ret push mov inc push sub (bad) push jge push (bad) sbb sub add or cmp push mov sbb adcl mov mov or jo mull and cwtl lea fildl add jmp xchg inc in sbb sbb add cmp je xor mov jmp mov test cmp int3 add outsb lret push add sub pop push lds xchg lds aaa jne (bad) sbb add push adc xchg pop out daa test mov mov (bad) cmpsl and and jg or push push testb jl rolb std or add or jne mov pop cltd cmp add fadds pop pop orb (bad) inc stos sbb inc xor cltd test (bad) test iret sbb push orb adc cmp roll or pop pop and (bad) fisub mov mov test push adc dec out push mov rolb cs or stos xor dec sub adc fdivrl pop sbb das (bad) jae mov mov into rolb fist adc mov aad ja mov insb mov sti sbb mov iret pusha sub pop adc lea (bad) add or stc subb mov (bad) cmp add and or fldt stc fstpl fwait jmp inc and nop popf add out loop jnp movsb and and jns sub imul insl jbe xorb push insl pop sub rclb jbe insb add jmp pop popa jnp imul or pop sub push (bad) or xchg addb movsl dec and lret add cmp es push add fs loopne mov leave iret mov mov sbb mov add sub xchg mov sub pop xchg push xchg imul insb and add xchg jecxz dec repnz adc xor mov pop sbb adc aaa imul pop mov imul dec nop je lret dec jmp sub (bad) jb (bad) in cltd push insb loopne mov xchg push call in mov push dec sub add mov add mov popa out pop jno dec fstl add and sbb push loop in adc insl inc sbbb mov int3 ljmp push jne ss jnp cli mov lea and xor or jbe aas push es scas add xor mov pop ds inc pop dec fcmovnb inc incb or push adc mov add sbb cmpsl xchg pop nop cmp cmpsb (bad) jge mov xor adc push sub sbbl arpl lahf and gs inc cmp cld es inc insb cmc sub and cmp add dec mov (bad) or cli lahf cmp or loop xor mov nop pop je popa xor movsl daa pop dec test jge mov cmp mov pop outsl je test jl ret fstl cmp add mov cmp xor pop push cmp ds and or pusha add ja sub aaa js mov push mov or or xchg or jmp inc push xor or sub sti in and push adc dec mov mov adc push lret imul xor cli fsubr inc add push and adc outsb adc ja int mov (bad) in inc imul mov or js jmp daa dec ret pop inc dec mov fwait fwait (bad) bound push imul fisubr inc mov jno ss add scas loop,pt push xor dec add cmc push shlb dec adc add sbb sbb inc ljmp cltd add fildll xor cmp and add sbb lods out push add add adc mov aam cmp das push and hlt in sti sub (bad) push sub lock jo sarb mov xor clc jne pop out insb inc cmp sub aas jnp mov and es jmp ja xor jl inc push mov rcll jne mov lahf dec mov cmpsb push ja mov inc cmpsl adc mov pop cmpsl lcall xor push out dec jmp (bad) mov dec pop loopne sub ja jmp gs test add xor add and pop and mov lea pop ret mov or sub ss mov add pop mov and clts jo add xchg shrl pusha mov add or sbb addr16 js sbbl jns sub adc push es cwtl or andl stos push pop pop pop or xchg pop sub pusha sar xor mov and mov aaa dec rcll pop or movsb push adc mov sub jmp jp stos dec out pop jmp cmp je add mov mov test jbe push adc outsb xor or cmp push or dec push sbb pop je je xchg add cmp xchg pop je cmp add rclb sbb mov sbb adc iret fcoml imul or cmp test rolb (bad) push jl xchg jmp ljmp les pusha test sbb mov inc flds adcb dec mov jmp and mov sahf cmp push in mov ret mov add fcmove lds sub aad enter lret sub and mov jmp mov and fs icebp add cmp or mov adc rorl adc arpl nop and test mov mov outsl int3 sbb out jo mov push fcomip insl popf mov add pop xor push in mov adc or rolb out (bad) push lods fisubl cmp dec pushf insb sbb xor (bad) dec fstpt jg (bad) mov push add xchg rol nop inc jmp mov or inc arpl or sub shll sbb push xlat jne mov mov cmp cmp js xchg scas cmp and aas mov cmp lods fwait daa xor (bad) xor xchg clc aas in mov or mov push and xchg jne pop cmp je xor mov mov push adc lret aas pop xchg rolb inc xor xorb inc popa mov je cmp ljmp jo sbb pop movl add lcall cmp negl bound push pop add jp jmp add xchg out xor imul arpl xlat dec cmp psubb shlb les nop xor aas cwtl push inc fsubs push ds pop sbbb aam or mov mov inc pushf imul or insb xor xchg push push push subl mov mov pop ret jae ficoml dec inc xor xor adc adc or dec push pop mov insb xlat dec mov and adc add dec sbb xchg push mov test push ss dec dec fcompl add pushl push cmpsb adc or cmpsb add insb xor adc fmuls push mov mov push and add rcrb sbb outsl mov andl orl subl push flds (bad) mov clc cmp mov sub xchg orb fidiv push cmp add aam add push cmp inc xchg int3 ds jbe mov push xor add pop cli add inc adc sbbl mov ret arpl mov xchg mov dec loope test push idiv and or js or pop or xor cmp push cmpsl ret loopne inc add and jle jne cwtl or sub cmp and mov sub push add push rclb daa xchg pop nop jno xor rcr jne or cmpl (bad) push je pushf push cs mov adc pusha push ret cs push sbb in and jbe or scas inc dec push push dec arpl inc adcl (bad) or rcl mov dec (bad) or lcall inc jbe jnp sbb adc jne push or and push push rep dec clc push les inc inc mov popa push cmp or inc jle dec inc add sbb inc (bad) or iret inc (bad) sub dec xchg add cmc cmpb add sub (bad) mov push cmp dec ja add out nop es inc pusha xor xor and sbb mov dec mov push add inc adc outsl push sub add jbe mov dec sbb sub push (bad) and adc cmp mov push (bad) xchg jg add inc pusha sti and cli cmpsb lock fcmovnu inc ret sbb inc dec das js mov pop dec xor mov (bad) rolb cmovne roll fcom cld inc inc lret inc dec (bad) push dec add push xchg dec xchg pusha add and in in aad inc mov cwtl mov scas inc adc pop sub push and cmp addb inc mov xorl pop mov mov sub jg adc enter (bad) push mov in cmp cli clc dec mov push mov push bound sti lds or cmc rcll mov mov xor (bad) sti mov (bad) int pop imul push push inc cwtl test scas and scas add mull rolb test xchg scas xchg mov repnz mov sub or outsb dec add add jb popf dec mov das mov mov ret cmp sbb imulb sub adc and mov mov pop xchg scas lock add push add mov lods add test pop mov adc push fiadd xor (bad) (bad) sbb mov adc add in ffreep jo les adc in mov add or adc arpl and pop (bad) mov xchg mov mov add pop mov pop stos add push sub enter dec (bad) and cwtl sahf inc xchg mov mov fistpll dec dec imul cmp (bad) sbb outsb xchg (bad) mov push and adc adc and jb xor mov mov inc sub sbb ss iret or fmull dec cmpl and test js dec cwtl xchg sahf jg push mov loopne bound adc push mov (bad) (bad) addr16 mov fsubrl xor inc in add ds pop sbb loopne movsb push add mov add pop lcall xor daa xchg mov mov nop add xchg ss jl ret lcall sahf or or rclb dec adc xor adc dec mov or and and or lea mov jecxz pop push dec inc (bad) jle add mov inc pop push cltd (bad) rcl pop out into sbb xchg xchg shlb jle push add movb test mov push jae adc fbld dec (bad) jg dec testb je mov xor sub pop ja,pt addr16 cmp sbb adc cmp incl andb addl dec inc or sbb fcoms inc push movsl (bad) aaa rclb cli stos dec mov movsb nop addl sbb fstpl mov cmp mov adc or pop add and push xchg in sbb pop cld xor pop push je push popa xchg setl mov xor sub (bad) aas scas jo xlat adc je mov push nop fbld dec mov nop pop push add mov inc cmovs nop dec clc cmpsl es imul lock jo add and insl and push sbb mov imul adc cmp inc or push dec mov push xchg rcrb test and sbb lea add pop (bad) or lea jo js pusha ret outsb pop je or inc pusha add or cmpsb pusha jmp push push add shll pop bound mov (bad) xor and cs add push or mov mov pop loopne push xor cs je mov cs mov orl or nop cltd enter add dec and sub setnp rorl inc idivb push jo mov push nop movsb push pop or movsb jb pop or push imul cmp data16 data16 (bad) xor add sbb cmp mov in sbb loope cwtl outsl mov cmp xlat outsl inc jecxz mov lcall into jb push push lahf loopnew loopne stc insb mov pusha insl pop pushf mov daa jae sub sub aaa stos out add push add or shll decb sbb push cld mov push or cmp rclb sbb loop pop adc dec das or shrb xchg cmc lods int3 sbb and adc dec sbbl popa (bad) fist dec cwtl fmull (bad) mov or adc push cmpsl fwait adc cmpb adc xor jb push adc dec cmp fsubl and les daa jno and xor pop mov mov mov ja pop das sbb insl pop imul rolb mov add and cmpb pop aas repz js divb bound cmp dec pop test cs dec in mov aam push cs push push addl addr16 bound cmove sbb rclb (bad) jne incb inc pop xor push sbb jg and push and sub pop insl sbb ss (bad) js jo imul insl or mov and xchg lret addr16 add push inc std push jge pusha inc push pop cld add push jecxz sub dec push push push out inc xor sbb xorb (bad) sarb aaa xor sbb xor xchg and add inc or jp mov das inc test or mov or cld or adc or xor sbbl and mov sarb imul rcrb push js fldl imul insb movsl ror and xor js push loope add dec or imul lock or int3 mov lahf add cmpsb adc (bad) repnz stos pop sbb (bad) dec adc dec or xor lock lock xchg sbb ljmp or in call test adc dec cmp xchg adc adc sti dec leave outsl xchg sbb sbb sbb xchg push stos jbe daa pop fimull or inc mov or imul push (bad) and cmp cld sub jb dec and inc or loope in xchg and mov xor or fwait lea fstl clc sahf (bad) sbb push fucomp adc sarb mov add mov lea pop sub inc adc divl add adc je cwtl jl mov dec jecxz mov andb dec pop mov test and imul and add add nop add add mov add into cwtl sbb cmp pop (bad) mov je cmp push pop push cld pusha (bad) notb roll cmp jne xor call push and out push (bad) mov sbb shr js cmp push sahf std inc neg pop lea ljmp imul xchg loopne mov test incb mov aas inc test iret hlt cmp mov mov or subl out or mov push call mov mov nop and adcb cwtl mov xchg mov add mov sbb or loopne jmp cltd pop add sbb push add out xchg and push sub and js add stc sub inc or sub dec jecxz adc sub cmp push xchg icebp mov dec or xlat outsb sub cmp (bad) aaa call push mov in or inc in jo inc pop push xor mov pop fs imul leave repnz inc fsubr pop es push cmp in adc mov outsl or and outsl loopne sbb aaa cmp addr16 es je add sbb sub jb je mov jb movsb xor jb and sarl pop ss or lods ret shlb adc inc push stos aad adc ficomp and cs xchg or ss xor cmpl add bswap jo add cmp xor fsubrl mov add es (bad) dec adcl dec adc aad fsubr xchg popf dec dec pop fsubl loopne xlat inc sbb nop pop pusha idivl mov sbb add int3 sbb mov mov into inc xchg pop lea pop lock pop sahf sti jmp jl mov mov pop jno sub add inc add adc push stos and mov in hlt (bad) xor dec pop sub lret dec insb pop rorb or mov adc jge mov or or xor sbb (bad) sti inc aad js jne pop push imul js call (bad) aam mov pusha jns icebp push pop sub cwtl sub out enter loopne mov jnp iret dec mov addr16 or popa xor lea adc sbb jno (bad) push test dec push add jmp int3 and and cmc insb or sbb leave inc push pop push add add ret pop mov les xor cmpsb add cmpsl pop fcoml ss pop add lods pop ror push inc fprem adc xorb loop mov movsb inc or and add scas hlt mov iret lret ret jae lahf bound or gs add cltd xor insb pop inc or push dec pop sbb mov scas ja out sahf rolb adc xchg int3 enter ffreep xchg jmp scas data16 add sub push fisubrl jmp cmp add rolb or mov mov lock loopne jbe stc scas or insb pop rorb adc fisttpll jecxz mov sub cs daa or or and rcrl fnsave jp cmp mov add and or insb fstl popl jmp sbbb cmpsl sub jge roll or vandps or pop jmp sub maxps push or enter xor adc jb mov test fwait aam pop push or addr16 push dec jmp pop clc jo push lock lods push inc cmpb (bad) mov out cmp cli pop dec pop addr16 jmp pop xor sbb xlat adc fwait mov dec pop sub dec inc and xchg pop sub dec and and cmp pop inc sub or ss loop nop jo hlt adc add push (bad) sbb loope hlt and sbb dec aas sub icebp jb cmp (bad) mov gs xchg ss or jne bound add jb adc cld (bad) or push xorb add xchg sub lods mov or sbb fwait aaa pop jmp ret and aas jl dec pop inc dec daa pop sub mov dec push add jle push (bad) jmp xchg mov insb adc and adc inc sbb adc push int3 inc out sbb and lcall hlt xchg sub mov js dec adc mov cmp xchg jo call ss inc (bad) aad in inc bound adc test xor pop add aad iret add mov loope leave jne add mov dec adc jb aas mov incl mov xor xor push mov push sub sbbl sub adc xor pop or test jmp xor inc mov jnp add lock and inc shrb lahf add aaa js sbb adc adc mov cmp inc xchg arpl stos insb iret cmpsl pushf movsl push lea inc inc and bound subl and sub adc push or arpl popf push arpl aaa leave dec push sub sub sub xor dec addr16 dec add xor xchg je adc std jge std rclb cwtl imul adc cmpw sti sub jg adc fsubs call mov inc mov or movsl dec cmp aam and cmp dec call iret roll in (bad) mov andb mov adc nop out cmp sbb es add fiaddl mov (bad) les push jl xchg outsb push and xchg or or fst ss rorl out ret dec xor addr16 movb inc jecxz cmp sub popa addl push adc cmp jne xor lock mov mov lcall test ret lret mov mov ret loope or ret test out jno push xor in aam add dec test outsb lahf outsl and sub fiaddl movsl push push sarl jbe lahf dec and jnp lods call jp popf adc xor ret pop aam ret adc push dec or nop imul mov xchg pop loopne and sub inc je dec dec call push sbb xor or mov test dec mov or stos jmp shlb lahf push fdivl (bad) mov inc add sbb add xchg jne add adc lcall jmp add push add push add pop test das or add out repnz insb push movb add subb dec pop xor pop ret mov ret pop outsl mov mov cmp jle mov out dec lock push or dec dec adc adc jle lcall dec dec or cmpsl mov es mov sub jne push push sbb add push add cld roll sbb cmp push jne cld add add fs int3 aad add inc rcr jo mov dec pop outsl jl (bad) mov insb and push xor sbb or mov (bad) fs mov or cwtl cwtl loope push pop push jo mov bound xor cmc ljmp push add mov adc and js scas shlb pop lods inc mov mov pop or xchg les aad push subb es mov push jl jae out pop dec (bad) jbe cmp sbb jp pop push in pop nop (bad) mov push mov adcl push insb ret outsl test subl dec lock testb mov adc adc dec daa or xchg or push xor add iret adc shr dec sbb xor fsubrl xchg cwtl ljmp mov xchg mov jp in mov inc sub xor push xor ret xor test sub lock nop push sub add cwtl hlt or dec js push dec push mov sub enter js push pop adc cmp sub out add sar sub xchg and in mov push xor mov pushf lds sub add (bad) fimull nop mov inc arpl (bad) shll push pop je or lret cmp cmp cld int3 push clc fstpl inc mov fs lods push or push fs cmpl mov or push cmpb or pop add fsubs dec or loop and pusha or or inc cmc mov lods or and jne sub add pop mov jo iret leave roll xor aas sub xor inc jb or cwtl rcrl or sbb (bad) jb popa xchg es movsl (bad) dec or ret push aaa adc fwait cwtl jae cltd test icebp mov (bad) out bound add adc jge add adc mov js and mov mov (bad) shrb or adc mov pop insb mov sbb push inc cmp dec scas ss xchg add (bad) cmp popa sbb sub sbb call sarl xor das enter push mov dec add mov jg mov add std inc jg mov jmp jg add mov push add insl cmp push add mov test lock insl add orl dec sub sub nop xor clc cmp iret xor and xor fwait out sbb add (bad) sbb in pop rolb je add jmp bnd (bad) arpl jnp push aam int3 push cmp faddl pop dec jl rol or mov stos andb imul dec push push dec test (bad) push fidivl add call pusha clc add jecxz jmp sbb add add pop pushf or daa adc out pop pop cmpsb lock pop dec push mov push sub mov sub outsb cmp js push adc je or push add daa lock (bad) dec in jne mov lock inc pop adc inc movsb sbb sbb mov adc daa jmp imul xchg movsb add insb rclb daa cs ret movb loopne jmp leave xor xchg xchg out inc movsb sti adc inc jne xor mov dec cmpb fwait (bad) cmp push popf mov inc sbb and mov lret lahf mov xchg mov cmp ret movl xchg call stos adc movsl push xor or xor xor pop je pusha and shrb and (bad) ja xor inc sub xchg and or bound sbb and inc pop and inc add bts jo push or subl and add mov adc mov or adc sub orb push loopne (bad) jbe test sub andl arpl jo in add fs mov adc add test mov jle sti push inc movb xchg nop jo dec movsl xchg je into adc push dec jl dec insl push cmpl jecxz add xor pop pop mov pop rorb pop cmpsl in mov mull jbe cld push jne (bad) jo mov and sbb mov mov and pushf test mov xor sub dec jb mov and mov xor ret inc xor pop push push notl cmp jmp into or enter insb shrl xchg xor jnp js or imul bound adc push jb aaa or ja test xor jnp xchg jns cs insb mov imul popa test adc adc adc jb dec mov vmwrite loop pop mov push mov mov jb and repz pushf (bad) jns sub sbb cmp setg jmp inc mov pop jecxz dec dec inc add cmp setle cmp lcall inc mov adc sbb cld push imul mov xor mov cs xor mov sbb sti cli pop push fsubrl cmp sbb xchg jnp adc stos je adc xchg out lock sbb dec jnp xchg mov inc jo lcall shlb pop xor add mov test ss add inc adc (bad) xchg nop (bad) xor incb sub rorb jmp aaa adc in scas xorl negl push aad jae mov lahf sub mov xchg inc pop cld or xchg mov call insb lock add mov popf (bad) or dec addb pop jne aaa pusha inc in and push sbb aad or dec fsts adc subl dec sub aaa insb inc loop jl push sub mov or mov pop or mov or sub fisttp add pop add (bad) xchg cmp lds scas dec jnp cmpsl inc and cli dec mov mov sti cmp dec jbe gs or sbb add jle xchg jge push or or fs add insl in adc push sbb mov jmp push sbb xor push push adc daa rcl and ret push mov mov add jbe mov push inc mov cs pop lcall cli add jns out lcall push jae jp jo sub pop in popa sub mov mov mov (bad) in inc bound sbb test inc fldl fidivrl hlt mov arpl cmpsl push jbe sub mov pop subl push cli sbb cmp jne mov lock test daa test add mov jg push mov adc and adc icebp cmp je xchg dec or dec push fildl or add (bad) fs jge adc sbb dec lret (bad) in xchg fadds aam sarl iret dec mov clc cmp mov sub xor hlt testl jg loope daa arpl ljmp pavgb call mov fwait jns (bad) xor (bad) fcomps xchg adc test cmp jne push inc or pop xorb adc xor addr16 lock or pop sub adc loopne add fldl scas lds aas push cmp pop lret sub pop sbb pop out xchg sbb movsl cs pop inc jp fimull mov sbb add push cmp dec mov xor inc jb adc dec jp lock cmp inc in and jmp push pandn cli pusha nopl xlat test repz hlt lea imul clc cmp cli (bad) pusha push out lods jmp dec dec call ffreep push xor popa dec mov jne and aad rclb ret movsb sub xchg cmc jnp sub xor inc xor push icebp xchg adc push mov xor inc push mov sub shrb lret dec sub fbstp (bad) adc add icebp jbe xor add pop cld pop adcl xchg cmpsl sub or pusha mov sbb jmp mov imul rcrl mov dec jne mov or mov rorl sbb mov das nop das add add cmp (bad) or xor je inc adc fsubrp inc nop push xor pop xor lea push xchg mov into jg pop add das leave jbe jne push insb sbb or add hlt out dec push pusha lea dec xchg imul xchg jmp sbb fidivrl movsl daa mov (bad) (bad) bound fwait xchg jne test daa pusha cwtl lcall mov mov lcall sar sbb movsb je jne dec xchg ja outsl sub sbb xchg js jecxz mov clc xor arpl sbb xor dec ss rol or arpl mov push call jmp lds (bad) iret inc sbb or cwtl (bad) jbe jge dec add test loop xchg sub arpl mov cmp stos (bad) mov sub inc pop fmuls leave les xor aas and sar push in imul add push or pushf ret mov aas sarl and jmp jge daa xchg call rcll lret mov push loop sbb mov pop sbb add or add or adc lods cmpsb cmc dec mov sub inc dec test xchg xor enterw and sbb jbe xchg dec push jno mull mov mov add cmp cltd mov (bad) and sub cmp sahf and push cmp ret xchg in popa push sub xchg sub in loopne out fimull (bad) inc jp shrb inc and movl cld and jo sub je orl add ret adc call or dec cmpsb imul or pop inc sub jle adc inc or or outsb add xchg or add sub mov sub cmp inc xor sbb pop push cmp inc lds dec popf mov sbb aad out ret aam cmp call mov inc out call xchg nop aam testb sub pop add rclb and inc stos test jp in inc push test or sbb out mov lea (bad) pop clc inc pushf mov rcrb add test mov fisttpll xchg push inc xor and mov (bad) aas mov dec cwtl dec shrb pushf data16 add out xor stos or mov loopne cmpsb out push mov fcoms and sub mov xor sub adc jp sub add xor iret pop add outsb clc sub and mov fwait xchg jbe lds xchg adc int inc jecxz inc push and mov inc lret rep push fildll mov xor sub in mov gs mov dec lcall insl push ror jae mov pop jge xchg cli sbb fist call cmp les mov out mov adc pop pop hlt mov stos mov jo xchg je add or scas pop aaa sub (bad) sub fnop add jg or mov mov popa jne loopne lea in sbb or jle ja les (bad) leave out enter test test sbb pop ss cwtl inc addr16 fcmovbe stos aas lret (bad) pop xchg mov mov loop pop arpl jmp cmp (bad) pop hlt rolb xchg jmp xchg and push rcr inc insb outsl test int inc pop icebp add pop repnz sub jmp mov shl nop xchg leave sbb inc mov mov inc pop ret add repnz xchg sbb outsl jmp push shl fadd aad fdiv cli mov xor pushf add lahf xor ss lahf addl inc arpl sub add push ja or mov mov in test or push lea ja mov inc test leave lock jbe outsl je (bad) out and ret jmp mov leave adc adc nop xlat push notb xor movl cmp sbb call int3 adc inc ret inc test pop mov mov adc cmpl sbb push push jo xor lds sbb add shll pop sahf inc cmp (bad) je dec mov fcmovne je sbb mov or lret dec sbbl (bad) jbe cmp add loope rcr jmp je test hlt sub out mov xor add pop aas pop data16 fcomp pop dec cmc js mov je out (bad) mov aad arpl inc mov jl mov mov add sub sub mov pushf push nop push add sar daa jg imull mov mov sub ja rclb sbb mov adc ss xorl push cmpsl mov inc lahf push add push inc sub (bad) fucom sub dec mov push pushl add pop pushf push hlt rcl movsb mov js add cmp jne push rolb and cmp xor and mov loope enter sbb (bad) sbb es or (bad) pop add test lea lods adc mov mov insl or jecxz shll popa and push dec jp inc mov add xor les shrb inc enter adc stos mov gs dec (bad) pop loope push push fwait adc mov sbb sbb (bad) sub xorl push sbb lods sbb push inc sbb or pusha lods pop in adc pop das mov daa loopne daa push cmp mov loop pop adc je push pop and lcall jo jge outsl and jb or mov (bad) insb idivb popa iret sbb (bad) jmp (bad) mov adc jne ret add xor inc in inc dec add mov sarb lcall cmp test xor mov aam sub subl sub xor fs mov dec es adc and mov (bad) and inc ss dec shrb and les xlat pusha sbb lahf xchg mov test push rcll into sahf std test jle jb add jmp jle rolb (bad) es pop cmpsb test into lret iret push in fs sub jge pop fnsave mov add jge cmp sbb mov push pop xor cs je and pusha jno out inc clc or sbb insl add (bad) mov lcall sbb xor and or jno addr16 call xchg sub pop push adc imul in nop orl dec add rorl inc addb addb insb or inc imul arpl push inc xchg adc popa popf fnsave insl mov sub je out inc js inc push adc cmp xchg inc xor push movsb add jne test and xor fdivrl pop inc lcall xor inc pushf or lahf es mov adc xlat push sub push sbb mov and das loopne cmp mov lock stc push push and call mov aad and (bad) fbld pandn bound xchg loopne call cmpsl je mov sub icebp mov add or mov adc nop inc dec mov or je xor adc sbb sbb cwtl pop clc mov sub dec jge sbb or lods inc cli xchg inc stos adc xchg fs arpl cmpsl fs imul clc add in and stos shll add jo dec push push flds mov mov cmp push mov xor das ret lock dec unpcklps inc mov mov icebp mov inc test addl ret pop dec (bad) or cmpsl xor imul mov or in ss dec jmp cltd inc jo adc jmp test jp inc add test bound aam push negb pop rclb (bad) push mov loopne roll das js (bad) pop sbb mov inc loopne xchg cmp and (bad) jno lcall (bad) sbb mov sub cmp inc mov cmpsl xchg sub clc add add inc ss pop jmp imul js scas and stos pop test add sbb std mov movsb mov dec push movsb sbb add mov lahf enter popf jl dec xchg pushf or dec or pop mov jns jo adcl or sub rolb adc ret xchg nop fwait dec loopne sar data16 sbb xchg sbb jle or lods neg outsb sbb mov inc dec mov cmpsl fcoml and push movsl leave pop or imul rorl daa addr16 pusha pop in inc add nop inc xorb jg nop dec pop sbb mov and push push add movsl shr push jae jmp repz cmp mov inc xchg jo sbb add push inc inc dec jl or loop mov push xchg movsl mov adc or loop (bad) xchg sub icebp cwtl and push push or and sbb loop add add adc adc je sbb adc jo pop iret fisubl sbb out inc inc push fs sbb sub fadd gs out adc aas mov adc lods shr sbb adc inc test rclb faddl xchg sub outsl ret adc inc dec bound jmp add repz aas test mov (bad) xchg add jbe (bad) mov and xor add hlt cmp repnz cmp inc data16 push daa push dec mov (bad) jae mov test test (bad) loope ss or push sub je movswl inc test xchg (bad) jmp cmpw add test sub in mov aam pushf int3 cmp pop push xor sti bound inc scas daa mov pop daa inc loop inc mov movb insl xor mov push adc stc popa jle xchg repz or xchg repz (bad) imul dec pop lcall test and xchg test sbb jl cmp fistpll add mov xchg adc movsb jne lcall bound jle je gs xor push ret ret dec cmp and xor dec dec movsb in fwait aaa inc or xor in (bad) mov les (bad) lret dec in enter inc test add hlt or test cmp pop gs xor xchg jbe aaa rcrl (bad) lret daa in pop shlb jne sbb ds mov add movsb stos push sub ds ret pop mov xchg pop mov clc sbb addl cmp jmp in adc cmp xor lods shrb and or xchg nop push inc or mov aaa sbb div and rclb add jne sbb clc mov push and sti cmp dec gs lret shrl mov scas aam in dec sbb dec lds pop stos xchg out movsl aad jg sub dec (bad) (bad) popa insb push addr16 movsb and jl sub push lret daa adc add nop cli and add fisttp adc xchg jne addl ds rcrl push rorb cmp in sahf cmp minps sbbl jne jle dec test andb dec test xchg push pop js and aam js push dec outsb mov shrb xchg xor cmp (bad) (bad) mov sahf inc mov scas mov test adc sub and das sbb mov xchg add sub mov add add (bad) sbb xor sbb mov pop push pop push clc dec test cmp or mov cmp inc add lds adc fsubl push push or xchg mov sti pop cmc push ds adc enter cmp test or dec mov add inc mov inc mov jp loop dec add mov imul ja dec mov rolb ljmp lock fsubl add xchg sbb push fcomps cltd and pop cmpsl and xchg fisubr sbb cmp push mov cli ret nop mov test inc popa adc add sbb sub test mov or cmp or dec sub pop pushf xchg xor lods sbbl push mov ljmp xchg mov add mov aas sub add push loop loopne sahf add xchg push iret push push adc aam cwtl inc mov push inc pop (bad) xor add mov add push jbe lret push xor mov xchg outsb jmp add (bad) mov (bad) rorl dec add adc pop mov icebp push xor rolb dec in push and (bad) fstpl popa shll cmc or sbb dec and add outsb fist je adc bound adc add pop inc outsb or or adc cmp pop mov push in pop sub or mov or stos push xchg pop push sbb mov aam retw adcb push pop adc pop aaa or or adc pop ret daa addr16 cld add movb test jle sbb and xor aas push (bad) pop ja mov mov dec in pop icebp ds scas mov sbb jne std js xlat out jo adc jne (bad) mov adc cli xlat xor xchg sarb inc cmp (bad) aas les inc data16 outsl hlt pop outsl adc fisubr push mov xor cmp das sarl enter lds rcrb or push dec cmp inc movsb rcll test sub add pop in mov pop mov loop icebp sbb add jg popf cwtl inc stos stos rcpps and cmp add loop pop mov (bad) rcrb push pop mov push je mov inc mov dec into xor dec xchg pop subb test and outsb xor dec ljmp or dec rclb pusha sbb loope mov push cmpsl dec mov movsb sub les cli jo push jmp pop pop outsl ss loope mull push xor mov cmpb ds push pop je dec and popa or rcll push add jp das lods or jb hlt sub pop test mov xor idivl mov adcl into jnp fidivrl testb jb adc cmp jg sbb ss cltd (bad) pop inc mov pop push out push rcrb add jne mov push add adc call ljmp push je sbb aam xor add cltd (bad) fsts dec arpl dec inc inc adc adc ror pop out sarl movsb (bad) mov dec jl dec sbb mov mov rclb mov inc pop xor xchg sbb mov movsb sbb test mov test movsb lods dec lret call xor lret clc (bad) outsl pushl inc add clc sbb add shrb or je and pop jmp add adc nop cmp mov fwait jb addr16 out and ret inc in inc push mov push push xor add add jbe daa adc popa add xchg outsl inc les pop (bad) mov push sbb jmp and cmp adc cmpsl movsl cmp adc test push sbb xor add fnstenv and inc stos sti lahf (bad) and inc jo pop and test jecxz xchg repz or sbb mov mov insb loope jne push add sub jmp pop jmp jno adc movl sbb xor (bad) jne xchg inc adc popf push insb dec sbb test pop insb insl push mov pusha sbb icebp and xchg mov inc out jecxz lcall mov scas into das popf sub inc add dec arpl dec je out inc adc (bad) push push cmp cld mov mov (bad) sbb dec ss cmpsl sbb ja hlt loopne add jl adc mov sarl sub sbb adc dec add fmull dec fdiv mov inc mov xor es push and jnp sub or jmp lret add jmp ret out cmp out add push inc inc adc rclb xchg int in xor sbb cmp fildll inc mov xchg (bad) cmp sarl sarb inc sub (bad) cmp inc xchg lock dec ret xchg sbb imul pop pop ja dec test xor or mov xor mov jge sbb dec clc pop popf jmp sub and daa push sub std popa pusha pop out test cwtl sub (bad) pop sbb push jo mov (bad) or cmc lret add or (bad) mov lahf xchg mov pusha mov popl push push ret mov std je push das push test sbb sahf sbb or inc sbb pop mov (bad) jg cmpsb lret psrlw icebp nop cs and push scas pop sbb push ja imul loopne push aam cmpsb fistpl hlt sbb cltd jo cli out pop ljmp sbb add jnp xor aaa pop or popa add add adc dec inc push adc sbb fistl add addl jne xor pop adc xor push test push fisubrl jne (bad) stos xor lahf inc rclb pusha xor (bad) jmp push sub (bad) dec or pop add imul fnstenv push adc lret pop push pop sbb xorl clc js xchg xchg loopne clc mov and pop adc inc inc pop inc mov (bad) mov sub pop scas push add mov mov and or fidivl es les jge lahf dec fcmovb test mov lock jge xor cmp xlat push lahf (bad) daa add outsl xchg xor sub pop inc (bad) adc pop loope inc nop push cmp jecxz inc add cmp icebp pop adc subb stc mov dec adc dec fcompl (bad) push and adc sub test sbb cmpsb mov push add mov adc ds add pop js mov divl into cmp adc mov jp jo out push pop lret pop adc or out push ret and (bad) je cmpsl movsb xchg dec mov xor (bad) (bad) lret sub add and mov cli or inc cmp sub adc pop adc push pusha mov cmpsl das mov jl pushl mov les xchg rorb add adc xchg add or out and mov jns inc adc in movsb sarl xor das es sub enter notl fstl scas mov cwtl dec test add (bad) push inc sbb les cmpsl incl cltd push outsl cmp and add mov mov cmp xor xorb pusha dec jne aas or cmpsl in sti nop adc js (bad) stc or adc cmp das pop daa mov or inc cltd dec pushl (bad) sub add sub imul sub neg mov xor xchg jo punpcklbw sbb (bad) xchg or add pmaxsw lcall pusha dec mov adc xor sub jge (bad) clc add sbb xchg test dec hlt dec push jle loopne sbb repnz add mov cmpsb mov into (bad) iret sub pop shrl jno cli jb add insb fiadd push mov and and dec aaa or or in push add icebp xor or push mov (bad) mov push sbb test push push cmp push dec add or pop in and out push pop inc push clc mov adc adc or xchg hlt mov pop or adc je xor or xchg adc jno inc adc push sub rorl movsb jno and push and test mov imul adc mov inc ja jb inc cmp sbb scas sub sub shlb andb hlt ret shrb adc clc clc movsl cmp in mov int or call dec loop repz sub int3 fmul mov test scas inc loope jl inc bound lcall bsr mov inc xor mov push inc fsub ficoml test (bad) clc push pop pusha std adc or push movb adc add cmp add sbb cld xor cli jle sbb sub inc lcall sbb loop (bad) into shrb inc jmp pop add iret sahf clc or rcll add (bad) cs mov out mov dec mov inc clc clc rcll inc cs mov dec mov push dec or pop add fstl sub mov cmp gs mov jmp inc aaa mov mov sbb dec dec or loopne adc loopne das cs mull push mov adc sub add add dec sub sbb fmul dec dec jbe xlat add mov and pusha loope fmul adc jmp xchg or aam jle ja adc into inc dec add test mov (bad) (bad) mov xchg (bad) xor loopne js jge cmp jle sbb cmp and mov rcrl data16 or mov fdivrs enter daa xchg outsb xchg or dec les pop movsb or cltd cwtl push rcll push sidtl mov fadds mov inc push add aas add mov out insb insl pop enter movswl ja xor xor mov test pop jo inc xchg outsb es jge dec pop enter push roll ds mov add jnp pop add dec (bad) pop adc cmp cmpsl mov jbe fsubs jae sbb lahf or inc data16 pop mov add vmwrite xchg mov push sbb dec push mov pop mov ja dec pusha sub (bad) hlt sub lock xor incb aam xor mov dec sbb xlat leave or (bad) in loop insb test xlat out push xchg into inc (bad) lock ret ret adc imul jle cmp or lock mov add push pop adc dec rcrl test fcoml jae aam hlt add mov xchg hlt mov pop adc sub mov cmp push dec push imul dec nop xlat or mov mov fldl push in daa movsb test fwait add scas and out sub dec outsl push xchg adc (bad) push sbb lds adc and lret add sbb mov div sub xchg insb add adc pop gs jle rclb or mov fist mov insl in adc mov push jb push daa jnp insl push ret lea outsl (bad) dec test and xchg aam dec sbb push sar hlt sti jne sbb mov pop inc push dec lcall aam iret and xchg in (bad) push ds sbb inc pop or sub ficomp inc jnp,pn dec sub ds aam add adc aas iret add test (bad) (bad) push cmp lcall (bad) jo movsl adc fidivr cwtl adc jp add js and (bad) or mov xchg movsb pop dec fs daa jg mov sbb mov andl fdivs push sub les push xchg mov aam add mov jns push adc cmp sub mov push aas sbb imul js nop adc addb push xchg cs add lods sub jnp pop add pop hlt add jecxz fild inc mov xor mov add adc cmp add imul add test cmpl or and cmp lret gs out jmp lea adc mov dec mov add or leave jmp fwait sub add xchg add imul mov push dec repnz out add sbb dec (bad) lock cmp jo push mov scas lods dec inc pop add mov jne mov dec inc push mov push add jp and in scas popa stos cmp imul dec push xlat push cmp jl movsw rolb push cmp jecxz or xor mov adc addb mov jo push addb lock add lea sub lods test pop nop insb xchg inc lea rclb dec sub sar sbb adc call repnz je popa mov mov push pop aaa or ss pop (bad) xor (bad) in pop scas cld xor sbb andl hlt add and jne jb xor sbb sbbl adc (bad) stos push add or repnz add or inc add test and dec mov push add sub cmpl sub cmc adc pop push fiaddl push jae or or mov or daa mov iret mov add fadds jne (bad) jecxz sbb (bad) mov jge cmp popa arpl inc push add xchg cwtl add loope xor pop dec inc xlat and jo jecxz cmp (bad) adc cs enter lret addb hlt nop dec ret aam pop mov bound xchg insb sub adc cmpsb xchg dec inc in ss lret and gs call lcall jle pop sub hlt (bad) hlt push pop scas lods adc cmp test or (bad) arpl adc clc cmp iret pusha sbb jp cmp icebp or dec add sarb push jb test add add sbb adc add inc mov jle lods push test bnd stos out and call add sbb push inc mov test or and sbb adc jae imul mov sbb or int mov or lds xchg rolb add mov loop xor xchg push dec dec mov das sub cmpxchg add add jmp cmp std mov ds add inc jmp mov sbb fisub mov mov mov ja call bound jecxz and or sub enter mov (bad) push in xor add cs hlt mov push inc sub add out or push cld movsb packssdw jle mov push or push fdivl mov add push sub inc mov adc adc add inc mov sub fsubs inc pop ud2 sub xchg lock jnp inc je mov xchg mov push push cmp mov inc push push sbb dec hlt xchg mov push add jmp inc jb popa push loopne imulb js mov adc jmp mov arpl cmp pop ret movsl pslld ret cmp xchg adc jg fimul je jo dec ret lret mov test mov dec add inc jmp pop push push xchg data16 out popa sbb xchg xchg fstl pop and or mov ja or roll iret iret nop test dec xor add shl shrb inc dec pop call push in movb xor (bad) pop dec dec xor pushf jo ja mov cmp lea or nop push jg add xchg mov (bad) (bad) pop ja sbb adcl not mov inc aaa rclb les xor dec leave dec and call popf rorb dec popf mov or gs pop or mov jle xor sarb inc cmpb push sbb inc les sbb add mov dec push adc test clc xchg mov sub mov icebp push out sub adc imul pushl mov jmp mov push xor add daa shr adc push jbe shr pusha loopne push cmp test cmp sub sarl jne fstpl jmp xor andl (bad) sbbl add iret pop adc pop and jne adc mov imul add mov ds push jno add mov or xor sbb (bad) xor push rcr xor dec popf jno mov sbbb mov dec pop sub cld jne nop negl cmp jne into inc das add sbb mov jmp ja test ljmp mov fwait jl stos mov push (bad) in pop xchg sub jmp aam ljmp adc fs jp inc ret cmp push sbb and sbb rolb pop and inc adc xchg and outsb add fwait pmulhw imul fs or pop mov xchg add or aad mov fcomp mov loopne addr16 add daa or push xor sahf add enter rcll es push sub add int3 ror test pop sub (bad) ss lods sar lods xchg daa push xchg (bad) prefetch out hlt out mov pop nop clc mov xchg xor fwait andb push push aaa in shrl mov sbb std popa inc inc jl add inc js mov xchg outsb mov jno inc dec fstpt daa call mov rolb test mov js stos mov dec push jno add hlt adc nop in popf dec sbb jp push test in fadd sarl adc (bad) xlat push push aas fdivrs lock ljmp and rcr pop pop sbb pop mov fidiv imul (bad) dec jno push and popa (bad) xlat je inc adc push xchg xchg push je clc pusha inc scas gs fs shll xor andl add add jl jmp lret pop js test push pop je icebp int3 sbb or cmp scas orl mov adc loope icebp js test or int3 and mov jle lods jne pop xchg call cli and pop mov xor inc or lods fwait ljmp dec (bad) ss xchg out jl daa inc clc insl lahf fbstp jle adc jecxz out cmp (bad) scas leave mov mov pop clc add xchg and pop sbb sbb or sub es mov xchg cmp jo mov pop jle sbb pop cmp dec insb mov dec inc sub pop sbb les pop icebp and mull cmp fs sar (bad) mov adc lds push sbb fxch mov xchg cld adc int3 xlat and lds inc mov fwait ret (bad) daa and in fs test sbb mov jb inc mov lcall mov or cmp jbe ret add cmp inc and test mov xlat pop pop inc mov xchg or add mov pop jne nop jecxz xchg sarb ret or addl incl push dec insb cld test pop mov or loope push add inc xlat or inc fdivr aad insb or clc add test imul out xchg enter or scas or test and add clc xlat xor (bad) inc xchg jo push sbb jbe call aam inc bound pop mov xchg mov js imul xor (bad) sar cmpsl mov cmc jmp ja (bad) pusha ret daa in jg pop imul mov cmp cmp hlt shlb es lods mov imul aas add cwtl cmp test fs jns or mov fs inc adc inc jge sub sti or pop jp xadd mov cmc nop test jl cwtl sbb xchg mov mov add pop shlb add sub rol roll je pop xor push (bad) mov lret xor inc cmp mov (bad) xlat adc ret add add dec fdivs sbb sub cmc repz xchg data16 add sub fistpll dec jne mov xor push and pop cmp in jmp fcomps lock or mov lcall inc push xchg and or cld test into push fidiv mov cmp adc add sbb popa dec xor mov int jmp notl int3 adc jbe sub push js mov sub pusha mov inc insl loopne test iret cmc test mov push fisubr or inc dec and dec loopne je xlat andl pusha add or rolb out mov cwtl test push dec mov jmp inc enter sbb cmc inc dec add lock push pop sub xchg adcl lds orl push popf imul and pop or or lcall mov aas pop adc rcll push mov xor jb fcompp bound js jmp mov dec (bad) xor add js inc sub daa (bad) and das push pop dec push sub mov fisub negl sub push xor pop cmp add mov (bad) xchg adc xchg sub sbb sbb or adc loope pop aaa enter inc in inc icebp pusha popl xor (bad) shlb sub xor js pop movl and jle rorb add inc in (bad) xchg add cmp (bad) aaa sti pop imul out adcl aam (bad) clc sbb fidiv (bad) xor push cmp testb clc aaa mov mov sub aas mov adc (bad) add xor and add outsl fisttpl pop push ror (bad) jg pop jg cmp add xor (bad) adc inc add pusha push and fadds push (bad) js lods jne movsl repz nop mov mov sbb dec mov and cltd mov test test loope xlat inc sar push adc leave dec dec add sbb xor add enter add clc dec inc and sbb mov lcall movsl mov cmp rcrb sbb or frstor xchg enter rcrl dec xor xchg rcrb mov and sub xchg sbb lock mov sbb dec popa setno push jle ds xor cmp ret pop scas and or leave sbb jecxz or ja xor sbb inc negb in pop int3 test rcrb jge faddl adc push and lea xchg add bound pop inc mov pop inc jns sbb sbb ljmp clc lock sti std cld jne sub push lock and push pop inc jo add data16 sbb pop add fs and insl pop mov ret test add xchg popa mov loopne jp enter push jmp sbb shrb push mov or inc sub dec imul or push xor xchg sbb cli in pusha cmp push push pop sbb (bad) xor (bad) negl js or repz rcrb cmp mov add jg test add js (bad) mov add sub add mov popa test adc dec loopne ljmp pop popa xor pushf or mov mov and lods mov mov xchg fmuls pop adcb add lret dec and dec cmp add push (bad) ja std lock mov inc jo enter ljmp pop inc add xor repnz gs aam mov int or jmp inc inc fcomp sub inc mov push mov cmp pop cmp add dec or sub add stos adc xchg fcmovnbe nop xchg cld fsubp or inc loope ficom shl subb xchg fildll insb loopne (bad) ret sbb mov cmp data16 cmp arpl mov ljmp in out push adc sub inc call xor in dec push les lock and out roll jle rclb pinsrw ficomp out inc sub loope jne nop jo enter cwtl sbb cmp sub and xor aam (bad) aam dec or mov add sbb and bound loope or add xor pop and mov idivb xlat or or mov sub or mov or add adc inc orb arpl pop mov dec dec movsl and add or cld sbbl sbb xchg mov pop or insb lea es push fst mov jne add hlt add or iret popf icebp ss add pop out xor push pop xchg dec fcomps ss jbe int3 cmp dec cmp jne or in repnz push sbb fildl jmp fs fs test pop xchg or inc pop push xchg and xchg rorb adc adc cmovge cwtl fdivrl xchg inc pusha arpl in sub mov pop pop lock pop xchg xchg adc push stc addr16 lock push scas xor loopne pop xor mov nop and (bad) push add insb add sbb or fsts test jp push push imul jb cmp and push xor outsb das sbb mov sarl lret push xor (bad) adc mov jnp pusha mov ret push adc sahf adc testl fidivr xchg into movsb push nop enter lcall push pop or and out sbb imul and pop push int3 sbb mov pop pop sub fstpl or jno cmp ja outsb roll das (bad) sub sub mov scas or (bad) ja mov pop xchg add fs test jl mov sbb jbe adc mov adc pop cmpsb push sub sbb xchg pop mov dec dec scas and lods ret movsb ja sub xor sub mov mov jge fsubrl push inc cmp pop ffreep push jb sub pop xor fldt push test add inc dec pop (bad) lret lahf sbb dec mov sub paddb pop xor sbb aas clc jp int push mov (bad) icebp pop cs cmp pop xor dec bound xchg mov popf (bad) push lea inc fwait in xor push ret jmp imul adc mov enter sub xor or and xor sbb movsb sbb sub push sbb test scas lea sub arpl adc or push adc rcrb pusha lea (bad) (bad) mov pop je rcrl hlt in add and push push (bad) mov cmp mov in cmp or and jecxz lock lea adc sahf out arpl push pop nop loop jmp dec mov mov add mov cmp jne pop cs out push loope sub dec jmp mov or xor sbb push sub add lock push lret imul mov sbb popa cwtl loope jb push pop or adc cmpsl push jno and xor icebp add push pusha fs and rorl mov pop push xor push flds decb cmp dec pop imul add out mov sahf pop subb mov pusha jb jp mov pop add cltd in or add andl add xchg and and popa fisubl (bad) es hlt je fs adcb adc push dec jne les and rol mov xchg pusha inc addr16 inc rorl xor jl mov adc test lret mov (bad) adc cwtl and xor push adc enter repz fstp add cltd xor push adc cmp xor add rol fildl and leave lret mov push push dec dec push arpl pop sub frstor popa xor in mov enter jle dec push call xor sbb (bad) icebp test jmp or mov adc xor imul (bad) jo mov add fistpl mov mov stos add testb clc push std mov outsl scas inc mov add adc or and sbb ficompl and shrb pop jge jle jl xor dec push xor lock fsubs mov sahf es push push call jg mov scas sahf mov push mov lock mov jp and sbb push sub sbb jb call pop push cmp insl (bad) jl adc inc mov sub dec xor ret and push (bad) gs in pop adc pop or jmp insb in jg mov cltd jbe add xor test ds push pop insb inc cmp sub loop mov sub cmp (bad) popf jbe mov pop fsubs cmp cltd fildl nop insl pop jmp sbb sarb sub inc pop das fadds mov add insl push (bad) fimull and incl js xor clc (bad) jle pop lret and push add lcall mov roll inc and mov pop jmp push push test enter adc movsl pop jg clc dec ret nop or pop mov je addr16 mov pop cmp jl or dec pop mov lcall jg jmp and adc push push push mov and jg inc mov mov add add (bad) and call imul and sbb jle ljmp or dec scas insb pop test adc test movsl mov cmp sbb fimul inc inc dec in in jns mov outsb pop aas xor mov cmp mov fldt push jae pop push test lods mov adc cmp xor shll ljmp and push flds jbe in icebp popf hlt xchg sbb outsl mov jne cmp loopne mov ret or cmp ja add xchg add or popa jecxz dec mov pusha mov pop xorl pop adc sti mov and and pop sbb jno jo adc popa js lods out pusha arpl bound mov sub adc xchg lret xchg inc test pop fidivl mov jecxz sbb pop push ret addl or add rclb sub and aas sbb add ret divl dec cld inc mov inc mov ds or scas push das and inc xor push xor loope inc push lret inc sbb cld out sbb cltd loop add out cmp inc pop xchg pop (bad) movsl xor mov jg push (bad) loopne loopne inc loopne ljmp (bad) pop data16 movsb int3 (bad) push inc dec xchg mov jmp add inc js lea xchg or jmp ret movsb push or sbb push incl xor cli mov popl inc or and pusha or jge pop jbe add push daa jg adc dec in push cli cmp jge inc or mov mov mov test das or (bad) pop ljmp leave push test clc lea fsubs push cmp inc mov push sbb adc push (bad) cmpsl xchg lea inc js jmp pop or pop pop hlt cs push fwait (bad) mov pop xchg or aad cltd push aaa adc mov hlt dec mov cli in fildl or and push popa and (bad) jo insb jmp adc cs out and sub mov shlb mov xor imul sub jmp pop cmpsb loope (bad) cld xor repnz cmp push xor cwtl es popf pop push fmull cmp mov add jnp je sub lcall mov sub lret je,pn js pop mov (bad) movsb jb xchg andb lret mov push mov xchg and xor and or dec jbe push push mov dec mov insl or sbb dec push inc mov pop push gs push (bad) mov mov inc mov fs das push divb xchg inc loop adc insl jo cmpsb (bad) dec sub inc cmpsb xor out arpl mov dec jae pop in fcomps insl mov cmc sbb push and adc mov movl adc xlat add mov push fcomp adcb mov enter mov jge inc addr16 jl or add push mov rcrl xor sbb insl enter jmp push adc mov loopne popf inc sbb mov outsb mov sti test adcl xlat inc xchg adcl je loopne adc pop lahf jnp xor pop sub sub insb xchg or dec pop mov sarb sub xchg xor sub jl sub or cmp arpl jg xor (bad) push rcrl push mov test sarb (bad) push mov daa or and dec ret imul fwait mov shl mov fcmovb mov adc or sub xor dec jbe iret nop cmp in and adc add push ljmp cmc mov add mov sub pushf pop (bad) iret push fsubrs aas xor cmp xor mov test lahf push xor push jecxz inc sbb pusha or lahf cs lock sub pop or imul sti data16 aaa ja dec jb inc outsb pop inc add inc lods pop pop arpl mov sub aaa addr16 and mov shll imul xchg nop inc les mov sbb outsb movsb cmp push dec aaa (bad) iret subl jae mov mov setae mov push les pop add cwtl pushf nop add nop std nop dec pusha add imul shlb leave inc (bad) adc sbb inc test xlat addb mov out mov je (bad) out dec pop test push scas js adc lea push pop xor shlb and ja adc sar movsb fs icebp or or addr16 push sub jbe mov sbb add movsb ljmp adc push jb subl xor insb or push imul pop adc mov or fs add fildl jo inc push pop push push (bad) mov sbb dec les inc xor dec push push inc xor pop movsb std push repz add cmp bound cmp cmp push pop stc test aas pop sub mov sbb push (bad) adc push pop sbb mov add and pop and (bad) xlat inc insb push or repnz sub (bad) pushf xor je test popf push xchg jae cmp pop into fistpll sbb js lcall outsb or addr16 test add jno push repnz stos js arpl pusha inc pusha add or inc rcll lds fstl fs adc pop (bad) or or daa ret cmp sbb add inc or cmp aaa movl fimull mov mov push and pop add adc mov ret nopl add adc inc xchg add vmread push mov push sahf clc push or popa push lahf pop sub or pushf xchg lcall or sbb xchg jmp addr16 jno sbb fiadd inc jns pop cmp addb iret mov push in cmp repz lock clc cld xchg dec adc cmp add push fstl adc mov rolb repnz std (bad) sub add adc insb fstl in mov mov aaa ret jl sbb test das sbb xor cmpsb xor jecxz test rsqrtps addr16 sub dec jmp (bad) stc pop mov inc inc xor (bad) insb jmp jge sbb es push lea inc xor aam cmp add jnp pop push mov push add inc jo inc mov mov mov (bad) leave (bad) (bad) movsb jnp push xchg adc adc repz xchg add xor icebp jle ja add inc mov adc sub inc aas add lea scas enter lock sbb fs inc les inc addr16 mov sbb dec sbb xchg inc sbb mov push incb push or inc and adc or (bad) ja arpl imul xor and addr16 inc mov lahf repnz andl pusha add or lret aas fsubl jg ja jo aad fst cmp (bad) pop fs add sbb cmp enter mov adc test (bad) and push cmp jle jl ret out cmp add adc cmp js cmpsb mov pop inc les sbb test sub push and dec mov push rorl xor and ret inc scas mov imul int3 or (bad) push adc mov (bad) mov push fs inc out or rcrl cs call call into xor inc stc push and jg pop int ret (bad) sub cmp je sbb push ret scas jmp sbb or icebp addl sbb dec jg sbb and xchg mov insb daa test xor sbb push xchg push xchg jmp add and rolb inc je pop in cmp inc and push mov add sub push movl sbb sbb adc inc sub hlt test adc mov push mov sub movl inc xchg (bad) jmp or push les lret inc daa ljmp mov out jbe and push push nop pushf in or and mov dec dec out pop mov xchg (bad) sbb xchg das push je and sub adc dec jnp add test sbb cmpsl jae add mov dec (bad) xor inc dec or cmp cmp cmp cmp and popa mov ss daa xchg mov daa push adc dec or outsb test jge push dec out fmull jp sub mov push scas out push imul inc cmp add xchg mov loopne jnp inc call xor adc repz cwtl dec jne test testl cmp insb sbb dec std cmp into (bad) movsl inc pop jnp fs insl or cld je add adc cs insb hlt or mov ret roll movsb orl pop (bad) adc repz pop jns mov inc aam add dec cmpsl addb ss gs adc xor out aaa ljmp jo lods xor inc test out adc aad pusha call push into js int mov scas and aas test inc cmp jg in push aas jl add jl inc add sbb jne push mov mov in fs stc sahf fisttpl mov jg xlat imul outsb cmp (bad) sub sbb jns stc xor je mov pusha imull push cmp inc rcrb mov lea pop pop mov addr16 in adc or (bad) daa add inc mov pop rolb orl pusha pop jno cmc add pop mov cmpb imul xchg jg sbb or or mov scas icebp lods push sbb pop or sbb ret adc and and or shlb mov sbb push hlt add lods dec xlat mov (bad) out mov es decl pop ss jo adc inc sbb es xor sbb mov jb pusha out sbb aas sub or cmp out lods push pusha stc push movsb jbe mov les aaa lods push cmp add mov xchg push mov rclb ds mov insl bound test fs insl pavgb insb sbb cmp dec mov adc enter fwait scas jge in scas mov les sub and adc push jb imul aaa pop xor and scas pop cmpsl xchg add sub and je dec rorb mov mov push inc or push aas and dec push aas int3 movl and xor inc and push dec les das xchg dec and sub dec inc mov xchg inc roll test or inc push mov xchg add sub pusha fsubl (bad) xor jl cmp or jge pop in scas je mov dec (bad) cmp inc add jae adc inc jne inc inc or adc xchg mov dec sbb (bad) popa add mov (bad) or dec mov xor mov inc pop imul xor jg ret aaa idiv adcb and icebp (bad) mov sub cli pop sub jmp sbb dec nop push or add dec jl clc xor call out sbb dec sub push pop mov daa aad push pop cmpsl das push clc pop adc add sbb lods jne push pusha adc jo aas or dec xor ficoml mov fldl inc sub dec add or xor std xor jo adc and mov adc loop aas or jno pop outsl (bad) sbb jno cmp add (bad) pop xchg test mov shr cmp cmp push or nop (bad) insl addl lock mov es cmp jnp hlt (bad) mov cmp adc pushw add dec xor xchg sbb mov push scas insl mov mov nop mov movsb or pop inc rol inc xor cmp popl add jbe jg push pushf imul sbb push push int std testl loopne pop ret into lock push popa int3 jmp sbb mov out aam enter push ucomiss popf mov push push imul loopne repz fisubr aas mov icebp xchg jo mov fwait sbb lcall addl mov cmp push hlt sub dec inc movl fcmovnbe loopne test inc and add or fsubrs fsubs dec xor push pop push pop les push mov or add inc in xor stos sub mov inc cmpl jne pusha andl push cmp fsts push sub push mov pop loop sbb test push repnz iret ss lcall xchg test test sarl push inc ss sub loop mov add dec not inc mov scas cs jne adc (bad) loopne dec cmp add aam and xor xchg mov lods add xlat test nop sbbl divl or inc and leave xor repz stos dec outsb push pop ja test xor insl sbb in adc or jl shrb out or fbstp int3 divl iret in mov sbb mov sub pop call call sub rolb xchg and enter hlt mov leave xchg xlat inc mov cli pop pop in nop xchg leave (bad) sti adc insb test jne mov stc cmp sbb add dec mov mov or mov cmc push sbb push inc inc ret cmp or jmp dec adc and or inc arpl leave dec loope movsb jmp mov or sub inc pusha and pusha pusha rcrl push lods cmpsl mov arpl pop adc bound xchg and flds pop sub sbb shrl push push xchg loope push mov (bad) ja rorb adc push out mov insb jg fld test sbb xor frstor cmp pop ljmp cs adc push mov dec dec adc inc das add fisubl fnstsw inc mov dec jns pop xor das sarl add les xchg xchg sub xor test or jb adc or or mov scas (bad) and or fistl mov adc cmp dec sahf mov dec mov dec hlt mov cmpl dec clc es jmp leave add push out cmpsl cmp xchg mov (bad) (bad) movsl sub push jl sub orps shl xchg dec fist push cmpsl mov iret add push lret jl cmp pop add cmp pop xor push std inc or cmp scas rcrb add jne xor add inc (bad) cmc sbb repz sub cwtl lock and add int3 into ss xor shlb ret and inc cwtl fsubs jno in cmp mov in sbb adc mov inc bound xor mov xor cwtl ret cmp xor mov push pop (bad) das push sub add xor pop mov push movsl rclb dec cs xlat js push sti scas adc cmc inc insb ret outsl push jno sti gs sub cmpb xor in dec in bound cli xor decl inc loop xchg orl xchg mov pop mov xor pop (bad) lock dec dec xor fs popa pop in push jge cs adc rorl add stos xor sub fstp ror and or push js add test sub sarl xchg sub push dec add xchg fidiv jge xor sub pop sub xor (bad) lock out push pop mov add dec cmp enter mov or inc or mov cmp or jns sbb mov sub cltd cmp cmpsl dec or imul xor repnz out aas xor (bad) sub inc pop inc jmp andl and jecxz repz imul xchg add clc nop lock testl jnp dec int mov mov xchg rclb mov cmp orl jo imul mov push loop sbb push mov or add inc mov cmp ret jae les sub adc rcll scas push (bad) in jmp outsl xchg clc or rorl imul or add daa and push pop pop in js lea hlt call (bad) xor inc pop ret push inc jle decl cmpb adc movb adc and add inc ret cmpsl imul or inc pop jb sub pushf xor pop mov ret mov add cmp or cmp test jle inc data16 dec sub lods sbb add or or popa jb add popa jae jle adc lcall sarb cli jnp pop push bound insb add aaa js xor push xor scas adc mov in or pop inc inc and adc add or int aaa icebp dec xchg add xlat sbb push mov push inc fs arpl andl fcompl adc adc lahf int inc add dec and fldt fbstp fiadd adc push inc push in adc gs in or (bad) arpl mov int3 fwait sbb jmp dec mov mov addr16 ret inc mov dec inc inc inc inc jmp lods push fdivl repz push inc dec cmp lods push loopne iret repz jo nop mov inc jns nop cmovg inc or xor push dec sbb out dec sahf pmullw fwait (bad) inc pop adc scas pop push mov ljmp pop andl cmp les dec cmp orl mov jnp arpl pushf push mov pop pop sbb imul test pop sbb xchg shrl pusha outsb jb push insl inc stos dec ja pop cmp pop sbb jecxz sbb in xchg pusha or std push xchg mov pop add or scas xchg lock inc cmp xchg inc enter movsb imul dec cmp jp test add (bad) outsl cmpsl loop jne movsb mov insb add add or lea cmp mov dec add ret jge shlb add cmp add dec lcall enter sbb bsf popa mov jne cmpsl inc and mov or daa or cmp add (bad) and xchg or (bad) daa or mov pop jb test push imul xor insb iret stos sarb inc cmp inc or add or cmp (bad) aaa xchg rcrl fs xor adc add ds mov cmp adc adc sbb movsb adc ja inc shrl cmp out xchg stos mov cwtl mov test rclb into (bad) mov and adc pop and adc push imul lcall jo cwtl addl sub aam addb pop mov outsb mov mov pop pop pop es rolb mov push (bad) lods jo push fild add xor adc push out popf jecxz lock add sub fistp cmp cmp push inc sbb sbb mov inc lret add imul insl aad andl xor inc and cmp cmp and aad rolb xor icebp cmp lock jg faddl inc xchg out push mov (bad) loop push clc mov pop iret inc mov xor icebp inc inc into scas lcall mov inc aam cmp jl (bad) or nop les out dec ret add andps and cmp jo (bad) daa push and jo sbb cwtl in flds jle push push mov (bad) push cmp or or sub mov xchg sbb sbb push mov test (bad) xor inc sub push pusha sbb gs sbb jo mov lea mov and push sbb jb repnz int lods into push push add (bad) adc fs push inc cmc stos call scas lcall push mov or push sub and leave mov or rclb enter mov enter pop orl push and xchg and cmp sbb adc enter cmp imul jecxz or or sbb call stos xor sbb push or mov paddsb out cmp sbbl mov ret lahf xchg nop and xlat sub push inc push mov sbb arpl daa cmc outsl clc push test and xor xor xor inc movsb incl add dec dec dec dec dec dec dec sub outsl (bad) adc push push push pop pop pop out nop rorb jae adc xlat popf xchg xor xchg mov inc fs cltd test add cwtl push sub sub enter rorb xor lahf and ret adc jns pop les jbe cli and add mov jae add das mov jns leave lods and dec sbb pop push movq fdivrs inc sti xchg (bad) and mov push pop lods sbb and sahf (bad) sbb add dec mov lock push mov pop incb (bad) push xor clc sub clc imulb sbb push fiaddl sti fstpt mov xor sahf jbe sbb sub dec jnp lahf sarb imul cli push sbb sbb jmp sti inc pop das shll and add sti xor or nop mov ret xor enter inc inc inc dec pusha lret and call pop push nop xor lret mov push lock xor xchg rol inc movsb rcrb xor xchg xchg ja inc and cmp cmp cmpsb adc pop xchg and div sbb pop and nop push inc iret fwait or add jl pop mov mov xor sub bswap or test jmp in ljmp dec (bad) adc popa cmp dec in mov and loope in (bad) lea insl cmp jb jge cs sbb out mov in lock jmp popa inc xor cmp popf add jne pop sub mov dec rclb pop jg sub or jmp inc cmpsb add (bad) sti push add xchg add add bound pop pop inc clc fwait shlb or (bad) mov and lock and leave (bad) hlt dec mov sub nop jp lahf test mov shr enter pushl sbb xor pusha cmp fdivs je mov add iret popa cmp jg mov ret add call cmp fstpt and insl adc dec cmp or lods mov mov xor ret or mov lea arpl insb ss sub adc pop xor jmp cmp ja out inc lret pop push xor pop xor jmp ss xor cmp mov lcall pop jmp pushl aaa in xlat adc in (bad) jbe sbb dec adc or and dec xlat bound pop dec and xchg inc cs (bad) loop movsl mov ljmp and add mov addl mov fidivrl imul jbe push inc pop push mov xchg leave mov cmpsb pop and in lcall inc mov sahf cltd mov js push fsts std addr16 insb movzbl cmp fisttp pop insl movsb addb movsl addr16 fwait pushw push inc cmp cmpsb in and mov js sbb inc repnz pop add int3 and sahf outsb dec jg push cmp ljmp pop xor push mov int cmpl add (bad) sbbl aas cwtl aas mov inc mov mov xor lcall decb xlat imul pop enter push cmp add push mov data16 inc mov in xchg js movsl inc xor mov lods add sub mov add push push sbb cld (bad) jmp mov fcomp mov jg cmpl adc mov inc jp pushf loop cmp icebp inc femms js jo mov orb sbb dec dec sbb jmp add dec addl rol clc xchg scas test fdivrp addl cmpb cs jmp aaa loope loopne imul jmp das and pop pusha push jae add fs (bad) mov out dec add mov and add fimull dec sarb (bad) push fdivr adcl add mov (bad) adc movsl scas and cmp adc pusha xchg mov inc push cmp jge xorb insb cld adc lret push loope cld ja fmuls mov leave mov pop icebp stc dec or lcall dec push mull out rol xorb adcb adc ja dec js inc into mov xlat or (bad) cmpsb loope inc adc movsl or (bad) push inc mov out push push les and cmp test push sti shl or xchg lock adc pop mov cmc in push or push in loopne xor push xor mov out push or lds push lret call sub dec dec dec sti push fwait nop mov mov aas or ds jne inc push cltd je jle push fdivl fs imul pop or inc pusha mov push fcmovb outsb lds and xor cmp mov pop adc rolb (bad) in adc mov dec pop enter lods nop sbb (bad) testb jne adc and aas aas sti mov mov mov mov sbb mov and mov enter movswl sub or push je (bad) or call fild jne sahf sub push mov cmp pop roll lcall test pop cmp push inc cld test push fdivs xor mov int3 push mov popa (bad) mov sbb out cmpsl add inc and mov loopne mov cmp cltd adc cmpsl test adc jbe cld cmpsl mov mov mov arpl jbe sbb loopne es sub xor mov pusha xchg add cmp outsb movsl mov or push push or test in data16 fwait (bad) push je sbb fsubrl test inc pop adcb ret pop imul dec inc or in lea add pop or jo imul clc call dec loope mov mov xor add ret push and push cmp aaa add andl and and push adc out inc lret hlt rorb pop ficomp xchg xor xor adc into lock or lret sbb push push data16 push (bad) mov rolb and add jle iret mov rcrl test mov scas or fsubs push inc cmp mov mov dec pusha add outsb and int out sbb push xor add xchg lock std or mov or imul xlat and out push adc sbb mov test push ret and sub mov dec xchg push scas xchg inc add fwait add rclb lcall jmp fist xor in jge pop mov and or mov inc pop push sbb scas icebp push jns and mov pop mov ss ret lcall and loopne stos inc cmpl aaa shlb movb cmp pop sub adc sub fldpi xchg or iret dec pop out xor sbb hlt enter pop add mov popa das std mov jne cld jns dec fucomip mov inc inc cmpsl cmp fldt lods inc cltd pop inc mov adc fs sub or movsb adc jo ss or push cmp test sbb mov mov movsb jnp es hlt movsl gs pop mov add sub xorb imul inc xor inc lret and sub xor mov push or sbb inc pop imul push xor xchg sub or sbb fcoml imul cmp jns imul addr16 in rorb lock (bad) in je imul pop pop fistl inc lock sub sbb pop push cmp aaa pop push divl ret push inc adc cmp dec icebp dec hlt js push fsubrs mov xor dec (bad) add mov and lea pop mov jge clc inc aaa or xor mov mov sbb popf insb push in mov mov loope or hlt sub mov ret insl push add inc push inc pop mov lock adc popa not inc aad movsl dec or jns js pop xor test cmpsl and add loop pop loope or sub add (bad) add dec cmp shrb sbb sub jnp inc insb stc ss iret hlt cmp fcmove (bad) iret hlt hlt pop into dec gs hlt sub mov mov rcll or imul scas cmpsb lock jns inc (bad) xor aad insl sbb mov or xor fcomip or rorl cld add adcb and ds (bad) pop fildll push xor push or push (bad) and push test outsl lea je or mov test nop rep ja sbb fistp and add loopne fiadd jmp push sbb add adc push xchg jne mov jb pop ja or bndstx loopne ret call dec iret push inc test or xor xor fwait cld add sbb add or cmp pop dec shlb bound fisttpl daa sub addl xchg pushf or (bad) or push subb enter pop push std inc mov sub jmp or std sbb push (bad) repz and pop aam cmp sub data16 or push xor les and sbb add inc dec (bad) push in leave cmp inc lret (bad) pop lea adc (bad) and lea in bound sbb lret dec clc add shrl daa xor and inc add inc mov xor cs and mov mov adc adc xor add mov dec lock pop inc jb clc dec inc in nop cmp pop inc pop roll in dec xor out mov mov (bad) cmp rclb mov test stc pop clc lock dec call test or arpl test jns add and cmp push out loopne pop dec or pop cmp cmpl popa les xor pop test dec repz loope (bad) pop xchg xor inc stos add add int adc push jle notb faddl shl xlat addr16 int mov cmp push add or fistpl jge (bad) lock and je fs xor sub in push sbb pop jp int adc lcall sbb aas mov dec jmp sub insl mov inc push (bad) add pop pusha inc push subl insl sbbl and adc imul sub xchg xor lret add push mov jp repz pop jl adc xor imul out negl or xlat orb pop lcall test xchg push nop sbb dec add push rcr adc pop faddl nop cwtl arpl inc (bad) jmp xor mov mov insb add push xor mov fisttpll imul add mov bound cmp mov inc xchg sbb inc call dec mov push push push arpl (bad) repnz sbb add cmpb cmpsb fmulp xor inc sbb ljmp jmp and es xor adc cmp or lods jne pop xchg pop imul jle lret and add inc xor cmp cmpsl xor sahf out int mov fadds loop xor out jb add push and xor add xchg into rcrb xchg adc aas lock push sbb add pusha mov sub xchg (bad) mov popa push push add lods cmp fdiv ret ljmp adc scas dec inc dec xor out xor out push add rolb dec test sbb loope and mov cld (bad) sub mov xchg fs and pop jb cmpsl xor pop jp aas scas push cmp fdivs pop (bad) fstps sub outsl xchg cmp test add popa and and icebp ret xchg jb inc push in pop les adcl xor cmpb add scas out cmpsl cmp pop sub or xor sbb rcrl adc add test in cwtl jno addr16 je (bad) es nop xchg ror pop lret jne mov push divb rclb movsb inc js sub pushf je lcall movsl fs pop xor xchg popf rcrb cmp xchg data16 pop push fadds mov mov outsb fidivr ds inc adc push inc inc or lods loopne dec je outsb vpextrw jne lds ret mov xor push imul cmp jnp inc loope inc jbe adc pop lock outsb mov pop imul es push pop daa aad sbb outsb loopne mov pop cmp add pushf cmp fs mov inc lret aaa cs sarl add add fldt fimul mov es or ss push js rcrl (bad) in rclb js push aaa lock shrb xchg and fs orl aad push aas jbe sub xor (bad) push xchg adc fs test fcoms outsl popa test sahf ljmp sub or push sub adc sbb mov out mov lods ret or pusha pop es mov adc fisubl movsl cmp xor or push cmp sahf push and js push mov jecxz inc jne add and sbb push and mov sub xchg and sub lock dec sbb inc inc inc and fwait or jle push and push inc xchg pusha add add ss adc cmp push nop mov cmp inc add pop movsb pop xor lods xor push in ss push in mov sbb cwtl push jmp jmp cwtl ja fdivs xchg mov inc adc and (bad) pop add and sbb mov ja jno jns xchg mov jg dec jno ret dec inc dec or cmpsb out push aam mov adc jmp mov adc enter inc xor subb sub jo addr16 addl sub psubusw enter std mov aad subl aas out cmpl loop ret iret push pusha push or lret and and enter and sbb cmp fsubrl ss push sarb mov xlat sub shlb fistpll push cmp cmp mov ret lret dec mov push pop imul mov or xchg xchg cmp sbbb daa lock in push imul nop ja mov xor adc push pop pop mov insb mov emms mov xchg pop adc aas insb jae int3 mov xchg jne mov sbb push push data16 mov mov mov pop mov dec adc pop push addr16 inc imul mov mov xchg dec push sub aas mov and cs cmp cmp mov and dec inc dec or je or xchg out pop movsl mov pusha insb push or jnp mov mov mov out xor or pop call jmp inc or jne stc pop mov jl adc jl pusha jecxz ja cld pop test (bad) imul sbb adc mov xchg into lock mov in inc ja jbe (bad) and popf aam lods aam xchg inc mov xchg dec imul shl add ret je inc inc and mov mov adc lds cmpsb xchg dec xor add sub push sbb movsb or push stc call xorl dec pop jge (bad) leave movlhps jae inc sbb mov push mov mov or adc pop and xor enter ret ret sti add push jne add or add add cmp jp lcall in xchg sub push (bad) jge lea lock or into cmp jns fisttp (bad) push sbb aaa pushl dec pop (bad) and inc add jae (bad) movsb mov push inc and icebp in ret mov sbb add xor es sub add rol mov add call mov sub inc out imul add sbb sbb cmpl repnz hlt mov fsts test insl scas mov es hlt sbb bound leave push lret test rolb enter test mov test and dec add mov mov bound sbb mov aam ret xchg (bad) jnp cmpsb sbb dec push pop dec xchg or jmp sbb out fwait pop push aam je push sbb fcom sbb dec repz xor test movsl nop fs mov mov jno roll enter lea enter adc lcall int3 push push stos (bad) and pop push dec gs mov aas lea loopne hlt add add addr16 sti lods rorb mov jmp jbe loope jnp rorl mov xor mov xor cmp jmp push or cli mov pop (bad) outsb add xor gs imulb adc movups adc cmp adc pop test xlat jns mov (bad) dec pop cmp push fnop loopne push inc sbb das sub mov loopne pop iret add cwtl sbb shrl pusha and adc sub sbb jbe cmpsb popa mov lods aas ss add push and lods mov lea rorb test test mov jnp sbb test mov idiv mov mov out bound pusha adc repnz mov fwait dec and or pop mov call pop into mov sbb mov pop cli cmp jle xchg ret or and je pop dec xchg shrl xor icebp mov or or adc dec and pop iret clc push mov jl inc test mov repz cmp cld inc movb mov mov jmp jo ret push fwait (bad) mov pop or std mov inc xor sbb add pop jne jae movsl add fsubl add jl jle aaa dec pop leave xchg dec and mov lret out idivb loop sub inc cmp lods inc fst pop cmpl call cs lock leave in stc adc pop push cmp sub sub lea enter sbb fcoml fs cmp add lds in and mov and ret cld inc pop popa push fdivrs inc cmp ja add add out xor inc xchg pop inc mov pop (bad) fildl jne (bad) mov shlb pop cmp fsub inc stc daa pop in mov inc mov fsubs ret push lahf add and dec pop ret xor pop cwtl ret or cmp addr16 fcoml or xchg hlt orl xor lock xor adc sbb sbb and lds dec xchg (bad) fistp aam (bad) hlt lret add and add and add push pushl scas popa sub gs sub push or call out xor and jmp sbb int3 push xorl and lret out add xor pop push cmp nop lock cmp jle inc popf add pop or or push sub inc xor dec mov and add test xchg sbb dec js mov into aas dec inc add add das mov ficom cmp pusha cmp push xor dec or int xlat dec call add sub sbb (bad) push inc inc or ret (bad) test or dec jp sbb jmp push xor (bad) jo pop les dec (bad) jo test jae ret loop xlat adc sbb inc mov pop push mov es push add xchg jbe mov mov or movq fcoml in mov lods add push or mov add jge jecxz cmpsb hlt sub jmp push xor rcrl ds call and cmp jp mov mov sbb add push jo mov repnz push enter pop mov mov inc mov xchg fildl inc push nop xor loop ret lea movsb cli bound add cmc add in push fs jge inc sub push and leave pop xchg and cmp cmp outsl pop in jns cmpsl (bad) mov mov loope (bad) push repz mov inc loop jae push test enter dec cmp add inc addr16 xchg lods orl sbb repz mov test popa pop rorl inc inc xor pop add and test andl test sbb push dec loope cltd testb xchg xor (bad) (bad) push sub add mov and je pop movl loop jno mov mov rolb ret xor xchg into add dec inc lcall cwtl ret ret mov sbb sbbl pop cmpsb hlt insl or popf hlt push mov adc sbb clc inc xor jmp jecxz,pn push xchg push outsl push or call xor rcrl push outsl jae inc push ja xchg lahf cld test pop movb inc push add xchg dec inc add or icebp sysenter je cmp pop clc jb pop mov int mov lods push das (bad) nop in or push sbb jno pop cmp jo push hlt pop sbb loopne push fnstenv push inc sahf movsl aaa (bad) xor add cmpsl or sahf adc scas adc aaa (bad) pop dec inc imul jno testb lods jae sbb cmp xchg push loopne pop (bad) fcomps pop test out push xor out das mov adc bound (bad) mov xor sbb dec cld mov cmp jle jmp jb insb cld ss pop pop push sahf add adc xchg in aam push cs call sbb aad mov (bad) rcll mov inc ja,pn pop nop iret dec inc mov inc dec jno and dec iret decl ja push nop or dec mov inc inc add xor enter je push test subl add fnstenv add xor adc mov cmp mov fs inc push inc ret sarb push xor push mov cs jmp (bad) mov add out push push sub or and (bad) movsb ret fnstsw jecxz dec test out xchg aaa mov lahf sbb cmpsb mov sbb adc inc xor jo inc add mov xor xor pop cmpsb call daa (bad) aam or push dec lock fimul cmpl ja insl mov aas dec dec sub mov addr16 inc or je call add jge (bad) hlt jmp gs mov ss out int3 ret cmp adc push lods dec outsl or jl adc (bad) cltd ja xor jne decw jl pop xor sbb mov jno sub and ds stos or fwait jmp and cmc add inc dec mov inc dec sbb adc push in xor mov aaa in aad imul aaa mov pop stos outsb loop dec push cmpxchg (bad) push ss xchg push clc pushf lods mov adc ret pop xchg push dec sbb push ja add add dec or inc (bad) in add mov jb dec clc xor dec push cmp xchg popa outsb inc xor inc andb fsubs inc cmp xor sbb add push mov add pop push fcomp test mov pop mov aas mov cmp ja cs bound enter ret aas cmp test xchg lods ret test adc mov mov mov add adc add mov add arpl or mov sbb adc cld push ret cwtl add pop jmp or daa cmp add jbe push inc adc (bad) (bad) daa orb dec xor or notl scas and aam xchg pushf and jno aaa push pop add (bad) imul sbb pop and stos mov lret mov mov test dec jp cmp call fcmovbe test insb dec or push mov jle sub sub je inc sub add sub inc rcr adc inc test xchg and into insl mov and sub call xchg lret je loop xlat hlt daa aam inc push test add jl jl add adc push mov push xchg fs lea int3 adc jbe inc add xchg and jl xchg leave hlt test insl inc outsl and das dec add loopne stc mov shl cmp popl fsubrl sub scas (bad) mov addl mov sub enter add inc xor sbb add xchg inc ficoml dec jge or adc call test icebp jge out mov sub mov cmc mov or or inc mov fsubrl enter pop fdiv lock adc dec ret and push mov xchg jg xor mov dec or adc in divl lea idivb fstl sbb sbb sbbl sub cmc pop mov fmull or mov into xor jmp pop jmp (bad) push adc adc je push push jb cli dec pop pop inc jecxz (bad) in jne pop or cmp pusha mov dec xor push in xchg mov inc bound mov in sbb inc cmp sbb loope cmpsl rclb jne lret push mov test (bad) push dec mov ds sub in sqrtps xchg (bad) ljmp mov cmpsb sbb jmp mov dec mov inc sbb push or and inc inc push popl push nop mov es pop cmpsb mov xor jbe rolb flds cmpl push lock fld lahf bound movl xor lcall or cmp cli (bad) jno pop push add test or imul pop or ret cmpsl add insb or or fisubrl push ret cmpsb nop adc push pushl cmp pop xor ds push std jmp jge xor popa inc sub add xchg movl sub xchg or mov xor or call cmp jno xor dec int3 sbb dec jmp sub or pop std xorb dec mov jae inc xor adc jp gs add rclb in push sub icebp fucomp jg push int3 sub mov pop imul sbb xor (bad) mov pop es push stos inc mov stc mov clc and adc je cmp mov nop out sbb fsub pop mov in jmp je and in add dec stc test inc scas rcl push sub or and ret sbb or out mov inc push movsb jge jbe xorb xchg dec insb inc sbb pop data16 in sbb bnd push sbb les imul add xor inc xchg pop jg add loope or es jmp sbb push fidiv repz data16 xor add mov adc sub mov mov sbb pop inc jg cmpsb mov lock je or daa dec push aas mov cmp jl mov add and sub ljmp outsb inc sub lds mov sbb jge mov inc adc xchg pop (bad) mov cmpsb lea mov movsl aam inc sub xchg ljmp mov cmp pusha xor xor (bad) repz sub mov sahf out and mov and sbb sahf out iret mov dec mov adc jnp repz dec or adc dec fadds iret repz add cld sti mov sub inc out scas cmc cmp in mov (bad) mov pop cmpsb mov add adc dec dec xchg adc mov call jae mov push mov pop addl push in mov aas and inc test push mov sbb stos psraw mov jl and or loopne dec outsb arpl mov cwtl rclb xchg jl add call xchg cmp rcr sub gs ss adc rorb push add adc xchg pop or mov dec mov mov (bad) jecxz xor push outsb mov xor add push cmp and mov add fldenv sbb push dec dec mov scas out loopne ret decb push loope aaa call or or jnp lock pop push movsb sbb loopne add enter and cmp or or add inc adc out or inc push jo sbb xor clc xor sub or loope add (bad) insb dec and cmp cs test inc push push ret cs pop sbb cmp mov push rclb js data16 inc lahf jg imul dec inc imul fs popa js aaa in shrb cltd pop xchg push push mov mov or adc js inc add add and xor mov jmp or mov lock add pop xor and aam jbe inc ja add mov ljmp call push in inc pop push shlb inc jp lods ret adc xchg pop xor jmp inc sbb js or mov push sub jp cwtl or dec or or mov sub add add mov or dec cmp dec test (bad) bound or add imull adc insl (bad) popf or push outsl add xchg jae or call add mov sbb or cmovs dec movsl sbb out mov and inc std das mov popa pop adc adc fwait data16 cmpsb sub cwtl int ja jmp (bad) insb sbb roll in in inc dec inc fwait and adc loopne mov (bad) or jns outsb fstl or or push mov nop xor mov outsb jne sbb adc lret push adc mov in push or add loopne iret inc (bad) lret pop adc clc or addr16 adc in adc (bad) in enter and jl into inc and push gs cld jle rorl imul (bad) add (bad) in lcall and inc imul adc xchg push (bad) mov cmp fs mov push jb clc add xchg jns adc out sbb cmpsl in pushf scas push js test call pusha and sub test xlat sbb inc or pop ds or js add ficom imul fidiv or and lock push or and stc mov jl or andl cltd push rcr jnp add ficoml jns addl fbstp sbb add push lcall inc iret adcl dec jae push push push add add fisubr ja inc xor push (bad) or das adc sbb test stc or and pusha sub sbb fcomps add lahf push and fidivrl pop cli push adc outsb and shr int jo inc inc fdiv inc jl loopne fmul dec aad cwtl rcll add push into push loopne inc pop adc pop (bad) push pop mov sbb int3 inc push and enter inc sub inc adc in cs push cwtl insb das lahf aad cmp add push pusha repnz movl ret add fiadd shll push mov insl (bad) push adc int test fs inc and adc out lcall lcall xor jp mov aas jge pop aaa add add add add mov (bad) ljmp add add adc push outsb or push sbb xor (bad) mov add pop inc mov or sub insb add addl sub or test (bad) cs std ljmp ljmp sahf and stos dec cmpsl xor cld push push idivl incb ljmp push cmp and pusha fidivrl (bad) out cmpsl shrb push push in mov idivb jmp add aam adc into insb push data16 nop push mov lods ljmp xor push pop es fcmove or call shr fyl2x mov stc stos hlt not xchg and fcom clc sbb rol push jge pop push cs sti mov js mov pop fnstenv in push sub xchg mov sti stos xor or mov mov lahf pop and inc sarb xchg inc lods nop loopne (bad) ds pop and dec dec fsubl sbb add outsb js mov sbb in js pop lret push pusha mov sub addr16 fucompp and bound fsubp inc add sbb orl push push sti cmp sbb fcoms add push mov mov jns push add adc (bad) dec and insb andb or orl inc mov pop stc nop mov dec repnz loopne sub jecxz pop inc pop lcall xchg cmp dec hlt add add adc or add mov dec add lret and add insb xlat inc xchg dec js orl mov dec adc push push js fmull lahf sahf push xchg or call inc sbb movsl xchg push xchg in push jl cs repnz add adc pop rol pop add xor cmpsl stos cld mov add lds lock push jae int sbbl mov add adcl push and cs and mov popf int3 mov and inc mov push pusha push or daa and adc ljmp rcr pop repnz lock or shrl add loope inc xlat incl push inc cmp shrb call jmp xor fdivl (bad) dec mov enter cwtl push popf pop fwait sub or or fwait nop dec mov (bad) dec cmp sub or test xor cmpsl in hlt or dec jecxz xor enter push ret sbb jbe das inc sub mov xor ljmp xor imul js jae data16 xchg mov repz and clc jb inc test xor leave ret xor add xor jns sahf mov (bad) xor ja int (bad) pop int adc pcmpgtb push sbb fs jnp cmp cmp and cmp inc jne gs and cwtl jmp jo jle push jb sahf inc xchg cmp cmp jbe sarb es sub jmp sar xchg dec aad pop xchg adc (bad) or push mov dec cmp pusha cmp pop xlat fisub xchg sub xchg push pop dec cmp fimul push mov pop push dec or push xchg js nop sub pop repnz ret cmpl jnp inc insl pushf and sub dec ja lldt dec ret cmp cmovb fiaddl sar sarb fcomps inc mov dec sbb and dec fcomp xlat add clc jns sub dec mov aaa je popa cmc lock jbe sarb mov add dec mov dec mov jg dec fadds stos inc dec sbb mov mov add sub leave dec cmp mov (bad) nop jo loope push mov cmp test push xchg adc pop dec inc inc test dec mov inc push pusha or cltd dec mov sub xlat inc mov adc push dec push sbb push dec and and enter dec sub mov cmp or push inc cltd mov dec inc inc push aam add rorb push dec pop cmp repnz push push hlt jo dec or mov jb inc mov jae fnstsw pop pop and loop jbe xorl in adc les inc adc or push call movsb pop pop xor adc test scas (bad) adc mov push mov aas pop or add inc inc rcrb xchg push add repnz jo mov out or mov faddl je imul cs adcl cmp or out pop sub jb mov rorb or or nop pusha mov ds nop and or inc pop fisubr call cli mov call inc (bad) push mov and inc pop add mov pop sbb mov movups dec mov pop jnp je inc xchg nop nop (bad) jne loopne rclb mov adc rcrb push cmp and push loop dec outsb andps adc mov pop sbbl nop addr16 and push pop mov (bad) addr16 gs in jae mov add mov sub data16 jle mov or je and fcos push inc push fs cmpsl mov lock mov xchg js rolb sub sahf es adc mov rolb loopne je test cmc mov add mov in cld adc mov mov add fbld mov sub or in cmpsb jae hlt mov sbb dec pop jo mov jl shlb mov xor mov lock mov shl cmpsb push xchg lret mov and fnsetpm(287 stc sub inc es call or fisub adc mov jo and inc ret or inc lahf adc mov mov popa je mov sub outsb adc mov xchg (bad) mov mov xchg jle jmp jne and lahf repnz in cmp mov jo push lahf je mov dec mov mov pop rorb lret mov fiaddl in mov cmp (bad) push inc mov ret mov popa add mov push pop call fs arpl sub rcl xor xorl sub ret sub adc sbb cmp and addr16 add mov clc imul mov test cmp or adc add pop sahf lret add add adc inc push (bad) (bad) adc sbb fisubl in add mov sbb cltd dec mov iret aad pusha testb sbb imul in rcrb add add xchg in sub mov pop xchg adcl cmpsl rcl roll mov aam leave mov jp nop mov pop xchg daa xor sbb add add (bad) stc dec loopne jmp loopne rclb lds mov fsts pop je lods outsb add hlt xchg add inc negl mov mov xchg inc xchg outsb or mov mov (bad) pop repnz test and or insl dec loope data16 push inc add pop add pop in push pop pop (bad) fcoms sub push jno data16 mov adc mov mov add pop cmp lods ret dec add inc jecxz pusha sbb mov stos adc mov add or movsb test push sbb clc xchg mov cmp jecxz loope inc sub add clc repnz dec shrb stos imul shlb test or lods fistpl add scas movsl ret add notb imul inc shlb gs call (bad) xor jecxz dec mov push jecxz loop inc cmp or sub imul sub lock push cmp jno test sub mov add cmovns mov and cwtl pop push and dec xlat fsubr sahf (bad) xor jp adc subb sbb lock out test or xchg mov sub pop addb adc sbb ja imul pop push mov pusha adc jne inc inc xlat cmpsb andl sbb xchg jno xlat and inc stc sub neg jmp arpl pop (bad) add je fs cli mov push push test and sbb hlt push data16 adc cmp (bad) inc fucomp aas adc inc push mov xorb dec fs add sub insb mov (bad) pushf aam (bad) lods mov add fildl cmp clc xchg sti movswl push adc nop sbb in inc (bad) sbb mov (bad) or js (bad) sub adc (bad) or jae std xor jmp fs fcmovb add stos and xor jae or scas dec cmp jp cmp cs or lea mov sub dec fwait lods pop in fadds (bad) mov mov lods push push and or push ja sub mov (bad) data16 push xor push jmp inc xor ret sub rorl incl aaa pop mov mov ss push faddp lock xlat (bad) sub push outsl mov sub ljmp jl sbb out mov sbb fs enter inc outsb stos sbb mov inc inc hlt and adc inc xor in xchg mov jle push fs add dec out cmp shrb push push and push sbb arpl and pop test orl adc mov inc mov fdivrs push and add jne (bad) sbb lock add clc rol xor clc or mov in jae (bad) (bad) sub or and add inc sub dec inc add pop and push fiadd hlt fisubr xor jp jge sub mov orl pop push mov mov jecxz loope push jle push and add fwait notb or dec popa add lock ss sahf sbb in fnstcw enter insb pop mov lcall sub push pop jbe mov loop cmp push scas mov push cmp leave xor inc jnp xor enter xor or xor sbb sub mov ss mov das mov outsl push or add outsl xor mov cmpl (bad) jae cmp sbb cmp xchg pop rcl data16 cld popl cld xor cs cli into sub sbb bound adc add add adc and sub xchg popa add or nop inc cmp nop add xor or fwait lcall and pop adc and lret ljmp adc loopne shrb lock sub push rcll and push ljmp push mov or mov cld mov sub jae inc ficomp mov and loop out or xchg test dec sub pop xorl aas or mov xor push les push or (bad) fcompl or adcb push lods mov je cmp aad es push mov mov mov mov xor mov adc outsl xchg cwtl sub in sub push dec sub pop nop jle adc and cvtps2pi js mov movsb mov push sub testl lahf add mov mov pop ret mov push mov push jne iret sbb sub pop inc inc jmp pop lcall (bad) mov aad pop mov bound addr16 pop popf mov lock movb orb punpckhbw or outsb fdivrl cvttps2pi movsb cmc pusha mov in and insl add jmp lock inc xlat mov nopl lods sbb dec and push in push popa push icebp je add pop mov push (bad) lock cmp adc sbb jns fs ja sarl sub sbb or stos outsl add movsb cmp sbb sbb add or or mov add add sbb pop lret push inc (bad) jb les fmull in lods push es rcrb or jle arpl and pop dec outsl pop jb inc or and xor aas mov xor pusha push daa int scas je (bad) clc adc or or mov xchg loopne pop ss sar out and and xchg sarl clc mov xlat sbb rcr daa inc mov xchg lea mov dec inc aas sub mov lea add mov mov add adc xor addl outsl or lds sbb out sbb pop dec mov jmp mov pop push jle mov (bad) dec ja mov inc mov or sbb fcompl add and mov scas test pop jns and adc jnp and ss adc jle sbb sub loopne push shl adc sub add in pop and or add adc cmp dec scas jns add mov stos add incl jae jbe (bad) mov ret mov dec mov dec je mov inc shll add xchg dec xor jge mov out mov mov xlat pop mov add mov dec scas xor jg fstpl jg mov adc adc push sub push out stos mov inc lock jne dec push push inc fadd aam pop mov adc sub test lods inc cmp mov fadds inc pop rorl addr16 and nopl test mov (bad) rclb push ja dec or or cmc jns leave fnsave mov jb mov add ret mov xlat (bad) (bad) push or pop lcall fnstenv mov int enter jecxz outsl je imul xchg jb jo loope nopl add dec sbb test cmp aas movsb nopl adc sbb icebp in pop pop cmp add orb mov cmpsb lret xchg pop lea or outsb jl incb pop repnz or jnp add sbb inc fwait dec pop fwait or gs mov cmp mov repz xchg cmp aaa repnz daa fbstp jle push jg mov mov pusha push aaa pop pusha adc adc jb jae call and add movsb push cmp push daa mov dec das xor add and inc xchg pop push xchg push cmp insb cmp push movb rorb xor add notl mov pop push xor stc mov mov or adc lret jb adc loop or add aam and dec sbb adc inc data16 pop stos mov ficomp cmp push fld (bad) out enter xor fs add (bad) jl add cmp shr leave or jne stos sbb ja test sbb sbb icebp jmp sub or cmp sbb lock pop or je add pop test sbb lret add lock dec shl dec test mov xchg ror sahf movsb in out inc lods or sbbb xchg sbb mov neg inc and fnop pop and xor cmp or pop add cmp add adc add push xor xlat loope ljmp test push pop inc xor sub sbb cmpsb iret sub setne inc lock int cld subl jle jne cmc in mov add xor lods jmp pop scas xchg roll sahf (bad) adc lahf push movsb fisttpll xchg pop or roll pusha xlat call js (bad) xchg adc mov pop pop ss cmpsb mov cmpsl mov in outsb adc mov push xor xchg bound sub outsl nop mov sbb je adc mov in das daa push mov adc push mov jo mov dec and (bad) pop xchg repz inc rcrb sub cs aaa fnstsw jo fisub rcrl jnp push adc sbb aad pop or adc and nop cmp je popa adc xchg inc or dec mov xchg cwtl sub push sub adc cwtl mov and xchg ret sub sub imul push ljmp leave ds inc js movsb loope dec push fdivrl xor mov mov sbb shrb aaa clc sbb das push addl scas dec les sbb dec adc inc rolb (bad) lret mov lock mov and xlat mov mov pop hlt adc xor addr16 lock dec dec fimull xor test mov popa imul roll lahf or add pop sub movl aad arpl pop (bad) adc ja add imul adc sarb test xchg ret fnstsw cmpb or ljmp orb mov sub add or loopne (bad) js xchg cmpb sbb xor jle cmpl dec inc (bad) ja xchg mov mov add adcl push xchg add rorl add aam ds cmp add aas rorl fnsave mov and bound dec jnp sub xchg add hlt rcr and mov dec or push push (bad) adc mov es pop repnz mov and ficom pop pop xchg out (bad) ss xor cld cltd icebp jl and shrb mov jo inc in test lods xor gs gs movsb outsl cmp inc popf mov adc loopne add pop insl push mov gs xor jne xor sbb popf popf loope fistpll je inc (bad) outsl cmp int3 mov nop bound jmp adc or bound call push sbb int3 movb inc and mov testl pop sbb ljmp loope test push push cmc das testb dec orb jmp andb sbb xchg cmp (bad) test mov xchg mov aam cmp fistpl jne and or jecxz push (bad) lea test inc and cmp xchg and test sub mov pop daa cmp test loop inc arpl das subl movsb adc and pop add sub add cli ds sub inc jg sub ret mov add jb or push dec or test iret jg insl icebp inc sub dec je daa cmpb cld inc sub aam pop jne fdivl stos sbb aas loope test jne inc aam cmpsb sub sub popa pop fistpl ret daa in or sbb xor or daa inc je mov and call mov test and stos enter inc mov mov or add cmpsb (bad) pop jecxz adc jecxz mov sub or or shrb lea test popa add inc imul mov mov jnp cmp or sub lea ret hlt jbe sbb adc in clc cmp fstpl pop dec ret hlt inc cs out hlt in cmc xorb fmul je mov sbbl and mov push xor jae ds nop add or out arpl shrd aas fistp rcrb or daa sti popa push mov cmp and mov jle lea adc add adc (bad) bound adc or ljmp cmp jge xchg and dec or pop js mov jl imul in fisubl mov and add jbe mov fdivr sbb add add or inc ljmp mov rclb jge inc stos mov insb jecxz push sarb inc adc pop andb jbe enter inc cmovs test fidivl scas add xchg jmp int3 pop pop out push adc xchg aam (bad) inc xchg call (bad) xor aam inc lret push xchg add popa test add mov or scas popf ds fidivl add push bound inc xchg dec pop jo fwait add sbb mov fisttpll repnz rcrb sti movb jmp call (bad) fsubl fld lret sbb mov sahf adc pop cmpsl add sub pop inc xchg mov cmpsb cltd and cmp inc or xor neg in jo sub xor mov lret xchg cmp adc add sti in cmp sbb daa fsubs mov add ret decb cmp jle sub push adc push mov testl and sub mov lods (bad) daa push aam les int3 or (bad) dec vexpandpd or xor rcrb mov les cmp es dec in sub test das xor insb aaa mov inc (bad) aaa movl jnp jo icebp mov cmc cmpb into (bad) push out adc clc push (bad) and mov pop imul push adc jecxz or nop out fildl dec xor pop pop adc dec xchg ret or push or js cmpsl cli mov fnstsw popf pop ret pop loop jl inc jno sub xchg push (bad) mov (bad) xor mov pop lcall test adc jne and sub mov mov and sub xorl adc ja es xor cmpsl movsl and mov add add (bad) xlat jo xchg aas aaa cmp shlb add xchg dec stc sbb adc add xchg mov and enter arpl js add lret cmp adc adc xchg jmp inc inc or sahf ret mov fiaddl mov (bad) jns fcompl xor daa movsl jge shlb ficom sbb test fldt or inc pop pop add ljmp adc mov jp mov jb pop and je sti sti add and rcrb or xlat movsb movsl (bad) pop inc setae pusha jl mov lods push mov sbb insl pusha xchg pop mov xor icebp ficoml mov std ja mov add xchg push xor movsw or mov arpl mov pop jns mov xchg out mov cmpl adc fmull inc and ljmp stos pop inc inc jge rclb (bad) push fimull stos push push fcompl fimull adc adc movsl lock jle jne (bad) insb inc arpl inc pop lock dec fisubr xchg inc add cmp lods inc daa fdivs nop das push sub rcrb mov inc push lds addl mov push sbb inc adc mov je enter pcmpgtb add xchg lcall (bad) pop enter xor inc test push dec je add mov in mov clc je cmp sbb test pusha jmp int cs roll imul sbb (bad) cs scas cmc lahf popf out add std add xchg lock fs movsb aad jmp pop and and adc pop inc pop loope mov sbb cmp mov cmp js inc add dec pop dec popf sbb fisubrl cmpb sbb jo push add loop fsts jns clc add jo or lcall jp xchg xor stos je inc jo daa std pop mov mov ret nop and fwait xor test fisubr inc dec cmp xchg (bad) imull leave cmc jmp mov pop and sbb xor jae push add pushf ja lsl (bad) divl bound pop shrb mov mov cmpsl inc pop pushf insb bound movsb int in mov ja add outsb mov sbb cs nop sbb das mov push fidivr xor test sbb movsl mov cs pushf (bad) xchg stc jae lret add outsb sbb shrl or push dec xor fiadd jbe test mov or (bad) mov mov push fist push and push sbb push cmp pop sti pop add push cmp call jbe sub lods and adc push sti jg out loopne imul sub push inc ret push push insb inc pop nop add add sbb (bad) xor sub in adc add xchg sub sub push lds or inc push mov popa divb push inc mov add fcoml ss inc push cmp jbe decl cmpsl mov adc ret fdivr ja lock add mov adc jmp jl sbb add data16 inc adc cld mov icebp ret adc sbb iret and pop mov mov mov orb lahf sub insb xor mov (bad) punpcklbw add add add add and clc es xchg cmc adc pop movl jnp push adc pop adc cli push push pop psrld mov jmp sbb (bad) mov and jne adc xchg sbb or das mov xor add in xchg mov loopne mov mov push mov fcomps jbe aam sub add add ljmp mov ret shrb inc or or mov pop sub add jo fcmovb add ret push mov cmp jmp rclb sbb ficomp aas add push mov xchg or add sbb aas in aas jmp or sub pusha shlb mov lahf mov in pusha cmp dec inc sub add add (bad) mov enter jecxz outsb loop test add icebp xor push pop es sub into lods jmp and mov or fwait das jne push dec imul popa add or sbb pop loopne pop cmpsb dec xlat ret cld in jl idivb es push xor sbb sub decb rol pop adc dec inc dec push (bad) mov call xchg aas loope push mov rcll nop out or pop test movsb and or jne lea sub xchg movsb xchg lock pop loopne dec (bad) mov mov adc sub mov cmp sbb xchg icebp add inc and sarb xchg mov and sti xchg add pop push mov jp dec xor inc push bound mov sbb add incl sub dec push add shl cld dec add add clc mov or and dec mov xor inc jbe adc fs dec pop inc cmpl jne add jo fsub pusha das mov cmp xor (bad) jge xor xchg (bad) popa xchg cmp ss fisttp lock jne xchg or mov dec mov mov ja iret or testb hlt (bad) dec lods or jg ret lock mov xchg xchg into sub xor out in jo sub cs test sarb pop jmp xor incl subb cmp push (bad) mov adc nop adc loop adc cwtl mov test pop sbb iret leave loopne mov sub notl jmp and (bad) pusha hlt dec add aam push incl push or mov arpl push stos aam cltd js dec mov bound jb mov loop mov movsl cwtl ss jo inc jmp ret push cmp dec push add fisttp push mov mov call notb mov sbb hlt clc andb sbb cli mov dec inc mov fildl jnp sbb bound add in dec sbb std mov fs movsb and cwtl or jne je jne dec mov and xchg lret adc les negl cmp and pop mov or aaa sub and mov or test inc shrb ret stc lock push insl arpl sub es dec adc roll fdivs cmpl fistpl cmc sbb mov dec (bad) mov and add cmc mov mov dec push jmp adc and rcrl or sbb aas (bad) push and adc adc mov push imul jns jge fadds cmpl inc inc je mov imul sarb xor jecxz pop jp lock mov jns push mov mov cwtl or adc jns adc inc mov stc mov cld inc ficom scas and pop out push cmp sub push sub add in mov push xchg push mov popa loope jmp sub pop add pop mov shrb outsb mov dec xor xor test sub xchg sbb sub cmp inc push pusha pop jb pop cmp loope lock add sub and cmp je push imul inc dec sbb inc dec mov leave adc out jecxz push scas or mov (bad) adc push mov cmp hlt cltd push js push fdivp test mov xchg xchg inc aad clc cmp in (bad) xchg (bad) ds mov push cmp test or shlb mov push clc mov sub and add xor mov fiaddl inc push or inc hlt push inc inc dec in pushl inc adc test push adcb jo ss xor xor mov push scas xor ret movl movsb sbb push xchg sar dec or xlat push mov sub rcll imul push add pop push push mov fwait add les icebp es sub sbb pop sbb (bad) mov mov cmp add fwait ret push and cmp cmp nop and outsl in aaa add xchg mov ss or gs (bad) adc addr16 in adc push dec xor in fmull stos fwait add imul sarb mov sbb push pusha bound loope cltd sub mov stc sub xor or adcb sbb add xchg dec repz mov fisttp mov cld pop into fnstenv mov push jbe hlt pop or sarb roll jae (bad) mov sbb jne mov rcrb ret clc ds add movsb xor mov dec add jp (bad) call das push ret sub inc add inc push shlb (bad) inc jmp cmp xchg test cs adc movups inc movsb mov jmp sbb (bad) aad pop add movsl outsl pop ss push xor add scas aaa mov aas push push mov lret or xor add xchg (bad) mov jl sub cltd inc jo insb push aam dec divl mov scas mov and sub jbe push xchg push or cmpb lock mov push insb dec or mov sub (bad) xor push push fsubrl pusha add daa and gs inc push dec pop es xchg pushf cmpsl mov pop mov or popw adc rclb dec pop mov (bad) mov pop into repnz daa loop subl xor jo inc dec add inc cmpsb xor mov inc mov push imul or test cmp arpl icebp loope iret inc aaa push and xchg adc add popa sbb mov or mov and xor es add mov repnz neg (bad) sbb cmpsl cwtl xlat ffreep add out add inc fwait add test loope out xor mov and xor add push add cmpl imul add or leave das jne call add mov adc xchg xchg push in test pushf xor cmp pop xchg adc rcll pop xor xchg xor je jnp (bad) sbb jne mov xor inc fwait cmp inc or sbb xchg xchg inc add xor dec stos pusha dec sbb sub mov repz pop or insb inc jl cltd movb loope xchg sub ds (bad) lock sbb sbb mov or sub insl jo es adc adc sub test shlb xchg div mov lock call sub dec icebp and pop mov mov pop (bad) adc add fiaddl inc and and mov insl dec sbb insb rol push cmp xchg adc jne mov add shrl incl dec inc roll icebp mov arpl mov scas fcoml add sub cmpb xor jns js add push pop in sbb sti adc add xchg cmpsb mov loopne lock push lret gs and dec dec clc push sub xlat xor push bound mov sub and pop jmp jl mov or adc jmp cmc test addr16 jl sub cmpl shll xor add mov lahf jmp movsb push cli daa mov sub dec sub adc add add sbb and mov pop je mov leave adc repz (bad) shlb or pusha std push push push scas popf mov xchg mov add add cmpsl pushf sbb or mov das push add sbb xorl and push ss jae pop xorl xor xlat aam sub sar xchg sahf fs les enter addr16 sbb fimull in xor arpl sbb bound shlb or dec enter push sarb push push (bad) movsl jbe mov xchg cli shl ds jo jmp cmp sbb out nop movsl push push loope pop add scas pop dec add push pop in adc add mov inc and popf adc or adc or vmovsldup dec lret ss sbb and js jmp cmc jmp or pop mov mov stc ja mov cmp lods add cmp inc fadds ljmp aam sub cld and push aaa movsb or rep in or stos push inc dec or add xchg xor je push cmc loopne shr outsl pop xor xor icebp inc and test sbb jo and addb jmp das mov add sub sar fcoml icebp sarl add inc dec sub (bad) aam jno dec stos mov cmp cmpl xchg lods inc lds sbb outsl ss ja cmpb push nop negb and shrb dec jmp sbb movsl or pop in or movsb jno xlat lods cmp out xor stos mov out push movl dec mov (bad) jns scas aam insl jb adc js ljmp or cmpsb pop push sub jnp int xchg dec imul aas add sti dec inc jmp sbb jne and fldt add push push rcrb inc cs sbb arpl into push je rol aam rcrl jecxz add pop pop and xor pop add ret stc push cpuid jo aaa or push pavgw cmp and por cmp or and adc test ss sbb or add xor aaa adc mov push add add add adc cwtl mov shrb ja push inc fidiv cmpsl add lods mov adc add sbb mov add test (bad) int3 pusha pop loopne adc inc je test pop sbb loop,pt shll jecxz int3 xor adc aad roll mov mov cli add js data16 pop out xor adc push call adcl mov lods (bad) jno je add out sar sub cmpsb test xchg (bad) and (bad) mov fidiv loopne ds add cmpb sbb lret sbb out xchg pop daa dec pusha and add and push mov push rcll sbb movl std and dec ret cltd mov rcrb sbb fldenv mov rcrl lods xor mov inc pop or js mov xchg pop in or (bad) (bad) inc (bad) or mov and inc xchg adc loopne dec loope loope lret add mov nop subl scas pushf ss xchg adc fistpll push mov or dec adc fmull push (bad) adc pop or xor and mov mov push (bad) sub push (bad) cmpsl add pop mov push sarb sbb test daa test nop das jne or mov dec adc adc daa mov jo (bad) pop mov dec adc push jo jo xchg jo cmpsb or mov loop xor roll push xor push (bad) mov or stos jo pop insl dec jmp cmpsb dec xchg push fs add adc lock cmp push and cmp ret bound add mov mov push incl add mov lcall mov popa cmpsl pop cwtl xor push stos (bad) push xchg addl mov push arpl mov call adc sbb pop pop int movsb xlat je test dec dec or push addb mov adc inc mov push dec adc add pusha inc mov or aaa ffree pop inc or xchg push jecxz mov ljmp mov movsl out fildll in push or push push rorl insl loope data16 std insl call dec pusha push test adc in or das call push mov test push test xor or nop loopne daa lods add paddsw es shr repnz nop in mov dec call call pop outsl aas je lcall push shll and lahf fwait lcall ss pop ret mov adc lock lea sti mov add pop xchg ja inc dec and xchg stc or sbb addb and adc aas mov xchg movb flds sbb pop addb int3 mov rcl adc sbbl sbb or inc dec xor add (bad) fiadd push mov mov inc add stc das nop lcall sbb add pusha or mov xor and lea out inc add dec jge sub insl mov ljmp rcrl ret insl test int3 iret (bad) nop addb xchg inc or fsubr popa or aaa orl jno push cwtl bound loope scas das jge or pop fldenv add jle inc pop pusha adc out mov adc aam mov cmpl mov lock and fwait ret mov orl out push lahf jnp cmp negl sbb add fwait je and pop mov add jl xchg sbb enter fcmovnu sarb scas test loop je adc outsb sbb cld fwait cmp and cld dec xchg and mov xchg add xor call add (bad) in xchg pop sub xchg imull mov int mov shrd movsb adc outsb jno jo (bad) dec jmp adc mov xor sub addr16 fiadd lahf aaa fcmovb es aad sub pop add sti test jle pop test xor adc (bad) xor mov mov push cwtl (bad) pusha and mov bswap insb pop adc dec sub mov les adc and adc pop xor inc sti xchg es leave mov xor pop and xchg xor iret cmc int3 out popa aaa dec in push xchg sub test (bad) movsb jge test js adc dec outsb setns dec dec dec dec xor pop insl mov xlat int3 adc or and popa loope (bad) rclb sub (bad) pop shlb mov lods cmp push fisubl fcmovnb (bad) pop dec xchg dec cs or (bad) push or pop sbb add in or push push (bad) dec jb xchg xlat dec dec mov ss push xchg push mov push (bad) movsb add lcall fs xchg jbe ss add dec xchg or popa mov (bad) xor fisttpl outsl sbb add lds fimul adc and mov mov push leave das pop xchg mov adc call xchg mov fnstcw out jl or jle insb lea add jp pop fwait clc arpl mov sub lret dec pop out aas cmpsl and rcrl (bad) fs clc or jmp pusha subb (bad) je mov fisub movsb and sub pop add pop jg cs pop mov push pop mov sbb jo insl xchg mov das cmpsl fsub aaa fisub stos add add pop xchg pusha xor pop dec rorb mov mov mov les lret das pop lock fucomip out adcb adc or lahf xchg pusha sarl or or ljmp jne fisttpll insl mov nop or and sbb ss and pusha pop and dec cmp lea inc fsts inc fs loop sbb mov mov (bad) cmp push out jno sub and adc daa xor add mov cli lock xchg mov inc sbb sub and orl lcall cld mov pop popa and outsb pop lods gs adc push and sub add out js or movsb mov inc push lea inc push mov test fnstcw dec push push or cmp cmp int3 jne cmpl mov mov lods lea lahf mov push xor xor sbb dec pop outsb or shlb gs pusha xchg push shrl adc shrl pusha test xor jae cmpsb mov mov jne imul clc add popa hlt inc add mov cmpl sbb in addr16 jl or push outsb push push sub cmc les mov insl loope inc dec pop js jno iret insb in (bad) movsl popa das push gs ss mov adc popa dec or push xchg jno xorl pop iret add outsb mov and (bad) ja inc jmp jl add jge movl cmpsb or popf xorb mov fs or and mov ss stc out dec inc pop inc fcmovu imul cld or xchg or jo mov jmp push pop dec adc ret push mov jecxz rorb push testb inc add sbb cmp outsb adc adc and jmp push adc jb pushf and loopne cmp adc arpl gs rorb sbb (bad) pop push jbe (bad) sub add sbb out fldenv inc pop dec jae das stos inc fsubrs test das call or xchg dec test push and jb mov popa sbb clc hlt push push dec test pop xchg pop movsl insb inc insl out add mov jbe fmul push sbb xor sbb adc push lock cmp or daa xor sbb xor push or inc pop sub push or mov xchg push lods das pop wbinvd sub sub test push (bad) je add xchg add mov cmp rorb loope repnz or pusha js sub inc sub rcrb inc and inc or xor lock fiaddl pop add sbb pop and fsubrs xchg es lock loopne clc hlt dec es je call inc sbb cmp sub mov mov cmp and dec adc test lock xchg inc inc imul nop inc insb addb push popa mov pop rcll js sbb inc negb dec push pop hlt je clc sbb push imul inc enter inc xlat cmp dec loopne unpcklps test jne sub fmuls and cli jbe outsb xchg js insl fisttp lahf mov roll stos (bad) test cltd sbb push pop lea gs adc xchg mov adc lock loop pop and push sbb inc adc addr16 clc nop (bad) dec jle sub sbb pop adc inc push sbb add (bad) jle fdivs jbe inc xlat xlat inc mov mov jmp ja sub sub shrl inc push repnz pop mov neg xchg mov out xchg lock add sbb and inc or pop repz adc push mov fs fiadd cmp push das incl pop jmp lcall rclb push inc nop or jne lds sbb push xor xlat mov cmp jmp lret or and pop popa mov sbb cmp sub adc hlt outsl inc or dec mov int cmp (bad) je xlat or xchg and lock testb push js mov xor and into out add xor sbb call movsl mov pop (bad) adc push jbe add ret mov jl and int3 adc lret ja shll lea cmc xchg cwtl je lock rcrb pop into leave je lock pop push les jecxz adc mov adc shr mov sbb adc ret fstl xor pop test and (bad) mov pop cmp dec jmp aad hlt xchg dec dec xor mov add sbbb pop dec imul pushf and xor dec add push ret inc shll sub pop mov aam jmp xor mov aaa mov inc xor and xor test (bad) jns daa or fdivs or js mov fdivrl ja je or out dec or add mov leave add adc pusha sbb xor lea outsb mov mov (bad) (bad) dec adc hlt (bad) mov dec les or adc pop sarl stc mov call cmp xor mov add mov sub movsb and mov mov inc clc add and inc pop enter lds call add jg (bad) dec dec dec inc and mov add add jne dec or js js rcrb and sub pop or sbbb jb lea ja inc sbb sbb lret xchg xchg pop sahf stos (bad) mov icebp add into (bad) sub push push xor ret rclb sub pusha fdivrl mov sbb mov mov xchg movsb jb sbb and adc xor (bad) jbe adc lock xchg add sbb sarl aam dec xor nop bound sbb pop lret push int3 sub inc or mov add and hlt ds xchg fwait cmp inc mov stc leave and adc sub push pop add jae shll lods repnz stos es mov xor push and adc dec mov lcall or sub sub jecxz sub inc push das repnz sbb or mov arpl cmp mov sub add or add test mov rolb imul adc cmpsb sahf push dec push push fs sbb jae sbb sbb pushf ss aaa insb inc js je imul or add clc dec ss jb decl push insb jo or sbb (bad) and js or (bad) xor fcmove and mov stos push cli adc or add mov ja dec pop sub fcoms mov and xchg xchg mov cmpl sarb aad sbb pusha je movaps or xor dec push pop and pop lret inc cld adc cmp sub add adc (bad) mov adc daa mov fimull aad add push push or mov xchg push xchg xor rclb fcmovb push mov ljmp and std aaa and ret cld ucomiss push rcrl je and mov pop xor mov push mov (bad) jmp inc or adc xor mov sbb mov inc nop clc (bad) xor sbb adc push dec push push fcoml sub in or test je jmp jo outsl xchg adc jo mov pop sub xor ret mov loope imul rorb rorb xor (bad) push xchg fidiv adc shrl mov adc push mov fs pop les jo shr cmp sub sub daa adc insl sarb or call sub sub xor cmp and ror mov (bad) scas cltd inc adc sbb jg adc push xor mov enter lcall and aas dec xor daa lods mov cltd jb sbb call movsl adc jle xor aaa stos sub inc daa fwait adc dec sarl push imul lea sbb bound fxch sti pop jb js add mov add je and dec subl jl add push inc dec in push lret mov or and pop jmp into mov sbb cs dec aam hlt push popa jg mov pushf pop xor inc cmpsl sbb mov (bad) cmpsb das xor or fcomps inc cli push clc movl jno pop cld js jbe xorl jl xchg and add and inc pushf mov bound cmp add mov jb inc sub cltd xor and and mov pop add loop adc mov add test xchg fildl jbe xor clc add ficom push popf inc xor lsl mov xor lock push push inc push fidivr add lea ficomp or test mov adc cmpsb or pop cmp inc jo ja mov xor mov (bad) insb jl fisttp clc inc push jge rcll push lods ret nop outsl push jg mov out movsl lock or inc out loope gs adc mov and ljmp sub cmp inc or mov pusha sub pop mov and and int fiadd and pop push cmp jae xor rcrb or aaa adc mov in aaa adc imul pop add sti push xchg push ret rorl jge jno fist cmp loopne test pop into jg,pt xor pusha push addr16 imul mov jmp arpl or in sub mov mov mov test imul out and add sbb fcomp adc js adc push mov adc enter dec or jbe insb je xor in cmpsb aam or movb sub lea lds sbb and pop mov in sbb insl popf pop jo lods mov cmp xchg dec adc and inc sub fnstcw inc stos xor cmp push dec icebp ret movsl je push inc movsb std jns adc ret pop pushf sbb pusha mov mov push cmp xchg pop dec adcl icebp or call and mov or mov pop push cmpl mov or inc inc xchg or and xchg (bad) sub rcrb leave push aam daa das std adc pop adc dec dec xor popf pop and pop ret mov lods xchg scas rcrb dec or movsl push adc cmpsl or fidiv mov test sahf js mov in loopne pop rolb cmp add subl push mov in fs movb xor inc imul movl jb xchg fstp loop inc xchg dec mov sbb test fildl ss push dec xor inc adc sbb mov pusha jmp (bad) shl cmpsl add xor lret fnstenv push jnp cmp gs pop data16 movl sbb mov push sahf arpl ljmp sub aad sbb sub sbb adc push loop add ss or cmc lea test push add cmp mov jne mov or sbb cmp ja xchg fsub cmp sub aad inc addr16 mulb cmp xor mov adc push lods jo and cltd (bad) js pop (bad) xor jnp dec xor cmp or xor inc (bad) enter mov loope fisubr xchg inc xor dec mov fidivrl into rolb ja inc mov add mov push sarb insb sahf lods pop mov cmp pop sbb xor mov dec sahf es aaa ds sbb or add push jmp adc inc into shlb add stos sub xchg xor ret push adc ds cmpl cmp pop movsl and sti mov gs sub aas stc mov test inc xor mov nop and xchg add rorb fcoms jl in mov fs push and push jecxz xchg mov ret push sbb inc icebp jne pop insl pop sbb mov sbb xchg in xchg rorb pop pop adc test cmp sub lea test in daa xchg dec push or inc xchg mov sbb out lcall rcr aaa ljmp push sub sub outsl mov add mov sbb (bad) hlt adc in movl call clc je movl fcompl les sbb cmc rol lret cs and (bad) xor inc add rclb aad jnp rolb outsl xor xor push lock (bad) in test mov rolb add enter inc inc dec ljmp pop jo dec fs jno and and mov loope push pop jno leave mov in inc or dec jb pop add clc adc xchg sub and je dec (bad) repz sbb ja xchg jge push adc addr16 jbe inc sbb rol push movsl stc xor add sbb ffreep pop cmp add xor push or add xor cwtl testl sbb sbb or aaa add nop sub stos xor add xor dec and mov add cmp dec mov and inc xchg xchg sbb mov lock jo out movsb add hlt cmpsb jge (bad) adc push (bad) pop sahf and rorb push in cmp test cmp sub dec pop fiaddl sarl test setbe (bad) dec es sub mov pop (bad) dec push add xor pop and pop rol dec push jns cmpsl mov jl mov push dec push inc adc adc jecxz das or dec shlb scas push push call loopne loope pop (bad) mov outsb pcmpeqb sbb cmp iret jo pop add xchg mov xchg push dec adc sub dec js jb cmp mov add and sub jmp push or cs sbb jb add cltd orb pop insb jnp imul mov lock push inc mov cmpsb adcl mov imul push or cmp je cli (bad) mov je xor cmp push push cmp jne cwtl jge lahf adc dec pop inc dec mov dec xchg sub add negl lret imul test adc sbb mov add push gs add xor push or fcomip mov cmp mov pop imul sti aas adc and xchg jl push lcall sbb lea hlt sbb xchg add adc sbb dec add push insl sti fadds or das add or popa mov jmp movsl and inc outsb jp mov (bad) aam mov shlb xor pop lahf push jp es push jbe pop cmp mov adc scas enter push sbb add mov test push outsb mov dec stc dec jmp add dec movsb movsl pop call (bad) push fsubrl add cmp cwtl push inc xchg faddp aaa mov insb stos aad sub push daa xlat mov inc inc dec insb shll jno xor and aaa in xor mov xchg add mov or sbb cmpsb inc sub push in dec nop sbb les movl and jo mov pop mov or sbb cmpsl and push xor pusha adc js sahf fld sbb (bad) sub dec or or loopne sub daa pop fcmovne aam push jno inc mov in mov adc int3 sbb mov lods bound mov cmp jne xchg shl mov mov jg inc pop jo mov mov inc test inc les loopne and fistpl mov add dec test imul mov mov jg scas sub mov cltd mov dec mov rol adc ja mov sub or and and jno cli mov pop outsl mov sbb sub dec sub mov jle push pushf ret ss scas xlat jl pop xchg cmc inc sbb push daa inc (bad) mov mov dec pop repz push imul insl cmpl jle jns rcrl jo xchg mov adc mov cwtl pop xorl push inc add inc jne (bad) shl add arpl cmpsb ja roll insl add and imul loop jbe add popa pop sar cwtl clc cs pusha push fstpt mov sub test xchg fstpl rcrb subb adc fldt or inc jns idivl sbb adc sub mov add inc addb add jge addr16 inc (bad) out mov pop faddp mov push mov mov mov sub push jae je adc in xchg sbb push adc xchg mov les (bad) rcll ljmp repz adc adc clc and or push pop dec (bad) lret sub push or push insb add dec cmp add pop jle,pt push call push xor lcall popl cmp inc sbb test dec ficompl mov cmp lea sub inc push push add pop push add mov push fldt fadd movsl jl jb add addl gs mov in roll inc or inc add aam push ja mov adc or and in sbbb loope popa imul cmpsb shll add and and sub jmp jo,pn sbb fs add adc sbb mov add in (bad) cli mov mov daa into int test repnz lea (bad) mov test ljmp adc mov push adc push push mov fmull push loop push lea and and jecxz jge mov sbb jecxz adc xor xchg xor or dec add sbb inc pop xchg push sbb push pop pop dec je adc sar inc xchg pop repz xchg andl nop push sub fcoms xchg sbb stc inc and dec push adc fdiv pop or or sub scas sti loope xor push adc enter push push fsubs jo in fimull or (bad) imul or les andl shlb xchg jmp mov xchg sbb je cmp xor add cmp scas movsl cmp das fiaddl inc imul sub femms xchg mov cmp push test hlt pop addr16 loop jno shlb lock jecxz ret jae fsubrl cli add inc fs stos mov iret (bad) insb dec daa or jo jg push daa dec pushf outsb inc cmp je test aaa loope mov lds (bad) jne dec sbb or enter (bad) xchg dec sbb and nop pop add movsl push dec pop (bad) xchg int3 enter punpckhbw pop inc xchg xchg or outsb aam xchg (bad) and repnz stos insb inc add push xor xor inc or add bound and jmp add in and mov test mov pop cmp inc jecxz pop pop sbbl adc and sub add hlt test loopne es push int3 aad or jecxz mov dec fmull and sub add sti add sbb pop and xor jb ret (bad) pop popf add cmp mov insb push fs pop pop cmp cmp push push dec dec cmp cmp inc inc cmp iret dec push xor test push ja and mov pop (bad) or xchg mov mov loopne,pt mov orb mov cwtl cs and mov sbb push inc adc inc and popa shll push nop xor shl and inc sbb add pop add imul rcrb scas mov xchg inc and mov lahf out or jo inc inc mov insl inc addr16 inc push outsl xor sbb add mov push push loop add dec nop xor rcll sbb xchg mov add mov adc and outsb and cmp add or jmp or push (bad) dec mov movb inc mov add mov out int3 test dec call out xor mov add sub cs mov je pushf pop stos lcall pop inc enter js jns in push mov ja pusha mov inc push pop pop sub xchg pop add mov inc repnz mov dec push sbb cmp loope fs js repz jb out inc inc loopne sub andb or xchg pop adc jl pop in repnz fistp addb mov push imul xor ss pop sub pop xlat add fs xor in mov test cmpsl inc cs or jo or test nop in pop hlt fisub xor push sbb dec enter aas aam sub cmp jne mov sbb push rcll adc push dec daa add enter sbb or mov inc dec add rol es cmp arpl add imul imul scas jl pushf pop adc pusha fadds mov inc push daa fs mov sub fimul leave add add dec add lcall pop mov scas xchg ja push mov sahf push inc pop adc das mov mov xchg xchg or pusha or pop pop and pop xor outsl or push je add adc or and xchg pop pop and add or outsl inc add adc mov loop cmp (bad) sbb nop adc inc push leave lahf dec pop nop out shlb inc aaa test sbb cmp cmp adc pop push sbb es mov add mov add xchg mov dec je jmp test ljmp inc ljmp pop add mov xchg inc in and or fs inc call in aam arpl jae ret add jmp mov push pushf mov pop or sub mov or sub notl fcomps sbb test je daa pop (bad) int3 mov movsl add push das shrl aad aam dec pushf or push push sbb pop pop pop ret dec pop pushf imul push push push pushf aad add pusha mov jg enter xor mov mov mov pop ss pop xchg in dec mov pop nop inc xchg in mov das mov push sub and imul add or adc cwtl jns je cmp fdivs insl jb jnp pcmpeqd inc dec jae cmp bound dec dec jnp nop es push sbb inc dec sbb inc je movsb aad pop mov sahf sub insb push pushf sub sbb and mov test mov sbb mov cmp sub pop fs lahf mov add dec gs int3 sub push push xor sbb and orps mov pop push jb test pop push add js and pop inc cmp cmp gs bound nop enter add or inc jmp or cmp call pop mov fmuls jo mov cmp mov push push arpl rcrb add in jmp inc xchg pusha cmp enter movsb xlat dec mov add and push les push or aaa in push dec fwait lods scas mov popa xchg push sub into test jp leave jle pop fsubrs xor xor or or adc push or add add lock xchg popa adc pop jno popa pop in cmp sbb loope xor daa lods and in pop insb cmpsl cmp test cmpl xchg test mov inc push adc mov jnp cmp inc and mov push or push mov fmuls dec das andl inc out inc mov fsubs push sub inc xchg sbb mov pop dec scas iret je or fsubrl ret and jne fisub out adc fistl mov mov add lock pusha pop xor xchg adc fwait pop inc lea push push and add jecxz lods inc sub (bad) xchg jns (bad) out fcoms jbe add sbb mov or dec cs popf clc push sub jbe shrb inc (bad) ja and cmp mov call and nop mov rol insl out cmp pop add inc mov flds lea nop out add mov into sub mov mov xor cmp jl test xchg mov orl insl cmp adc mov adcl add rolb enter insl nop push (bad) div pop push std push mov mov loopnew inc inc (bad) fiaddl xchg mov or add pop xorl push mov add xor or add or int3 cmp mov insl popa pop push xchg sbb add lock xor outsl test pop imul add bound cli mov dec push mov or scas out sbb and popa inc movsb mov lcall push fistl jmp jg cmp xchg mov scas and insb or arpl fwait mov push je outsb add push jmp cmp sarb (bad) test pop sbb in pushf fstps inc aad test ja test stos jo jge push sub xor rol (bad) push rcrb cld push jg jle xor fldenv aam aad jno mov lds push frstor push rorb add and cmp and icebp cwtl arpl stos stos adc div mov and jle add jmp aam lret jmp out sbb aam jo pop add loop into arpl xorl add xor inc test jne xor and test sti in sub popf or shld stos mov xchg sub push test add cmp loopne adc xor cmovae mov mov jl xchg sub mov adc pop sub mov add cmp jmp ret (bad) mov push xor popl fbld dec or jg xchg push imul sbb xor scas mov loopne or cmpl dec cltd xorl andl movsb mov and (bad) or cmp fcoml or inc push pop xchg add mov push jmp cld lahf out jmp pushl push push dec adc add mov lret push push addr16 push icebp adc push enter xor push loopne push adc or or mov pop cwtl mov cwtl dec mov jecxz insb loope adc or loope inc dec je es dec in inc add jp mov cmpsl cmp mov in lds mov pop sub movsb push ss jo clc ret adc adc inc lock sbbl or jnp dec jb inc sub push xchg xchg adc dec call fidivr fsubrl stos sub cmp call outsl add data16 adc je and inc cmp lea in daa xchg mov push pop jmp add cmpsb aam stos pop dec push jp fimull or inc xchg aaa and shll adc jmp sub scas mov or mov mov add xchg xor cmp loope outsl mov ljmp outsb mov outsb jecxz and mov sbb and imul out cs scas out cmp inc scas mov aaa cmp cmp adc clc push mov out test add dec pop das pop pop mov mov dec scas xor cmp (bad) xchg push add movsb je incl dec out aaa xor xor and mov je mov js lret mov adc das fmuls or das test sbb icebp popa pop cmp stos ret inc mov jge out ret cmovbe movb enter sbb xchg addb xor repnz sarl jae je das xlat rclb dec cmp xor rorb pop sbb icebp sbbl fbstp cmc cmc cmp and mov pop pop fnstsw mull nop xor jno sub adc inc add icebp adc imul test pop inc (bad) nopl ja faddp imul ret inc push push and adc xchg lcall pop fiaddl arpl sbb xchg push adcb push insb imul les lret cmp push mov xor out cmpsl frstor test push sub pop sbb pop and insb mov shrb push addl pop push je push add sub mov pop pusha adc adc xchg jnp (bad) push inc imul inc push mov shlb adc divb lahf jmp sub and ror inc rcrb xor jecxz add jae mov aas (bad) sub pop sub inc das je (bad) icebp inc fiaddl jbe lds dec jg inc xor jbe cmp jae movsl xor (bad) and lds insl js bound ficompl lcall add mov sbb xchg push fadd inc push jmp mov je test mov push push cwtl lret aaa test xlat inc add popf adc call push push shrb xor or rol lods inc imul fwait push mov pop jmp jmp (bad) inc or sub pop add cmp loope cmp lods adc fcomps pop mov mov ret insb je jl es mov ror dec dec (bad) gs mulb and xchg out pcmpgtd push push movsb or jmp je popa xchg mov in ds imul movl or push and and or mov mov cmp or cmpsl push movl in dec (bad) adc pop push and outsb in sub dec pop loopne bound mov push movsl movl or out cmp nop jle xorb ljmp and scas cmp add adc dec or sbbb push jmp imul fwait sbb orl jle daa in inc sbb adcb push or jo xchg pop sahf inc pusha ret ja hlt pop sub and push repnz leave popa (bad) sub orb inc pop inc pop (bad) or sbb or add pusha mov mov pop inc dec scas addr16 sub add cmp or aad les imul dec xchg lock inc pop and cld mov push mov stos popa push inc test inc incl dec pusha pop inc inc mov inc inc add inc push push and and cs pop hlt push add sub (bad) or out loop js lods mov dec push jne add (bad) jmp cwtl inc mov sub adc in mov or sub adc lock sbb rorl je repnz inc test xchg dec xor pop jg adc or mov out shr pusha add jbe dec adc and dec cmp roll xor (bad) push inc cld mov in pusha fdivs lock xchg cld cmp cld loopne (bad) dec adc outsl jp add (bad) xlat ljmpw pop xor push loope nop das mov cmp rcll shlb jo fld jecxz outsb insl pop clc (bad) leave pop js xor ss pop xchg data16 or mov jmp (bad) push and hlt clc pop movsb in hlt sbb popa test pop push xchg push ss sbb ret inc outsb push (bad) xlat ljmp scas dec pop inc xchg in add add jno pop clc xor inc and and dec pop dec inc sbb cltd cmp push jle add sub inc (bad) lock or xor test adc lret mov cwtl xchg push jle (bad) hlt jmp sub sbb ja add fimull jne aad movsb pop mov rolb rorb ja inc dec xor inc or sub imul and mov fldenv adc dec sbb sub fistpll jge lea scas push pushf mov push icebp dec mov sbb mov imul sbb mov (bad) clc jne fnstsw movsb rcrl xchg loopne add cld sbbb iret mov push mov (bad) jbe mov cmp inc xor (bad) aam rorb mov or cli push faddl out xor push jo cmp clc mov pop arpl mov mov mov xor mov adc pop pop idivl sub insb add pusha test adc or and clc pop push dec lods push ret nop shl xorl jae push mov daa push push test insl call outsl inc clc add movsb icebp bnd xor daa xor mov scas xor lea and push or mov add addl and xor add sbb and add clc popf and xor pop add xor cmpl pop xor or mov arpl xor std xor inc je jl push test pop fstpl les cld jb mov cmp dec lods dec push mov fisubl das pop jno in or rcrb movsl inc pop call push lods cwtl jb inc ret mov mov nop xor lea mov inc dec jne inc inc inc lods cmpb xor lds mov les mov sbb jo push in nop nop mov dec cld jnp add jmp xor (bad) pushl mov and pop rcrl (bad) (bad) and (bad) mov dec bound mov push test (bad) pop mov not outsb mov arpl adc push fsubl test (bad) std ja mov push fidiv mov xor neg push xchg test pusha push and bound xor lahf out push cltd sub mov or repnz push out or xor pop sbb out jg cs std xchg inc pop mov (bad) adc roll insl and and ds data16 out sbb outsb jecxz pop jmp out mov push xchg push sbb adc lahf mov xor pop pop in fcomi pop mov push sub push out movsb inc sti or fdiv int call cs mov ja jae clc mov xor insl xchg mov mov aam (bad) icebp sti cltd int3 xor fcompl or mov dec dec xor xchg and cld repz fisttpl fisttpll (bad) pop sbb pop sbb cwtl (bad) lock sti pop cmp and rcll adc adc pop and fistl movsb std pop jl adc xor add mov push sub and insl xor pushf nop inc mov cmp sahf imul loopne das mov mov cli push mov imul jle and (bad) (bad) pandn mov test test push push lock clc hlt xor fcmovbe cmp or rol or and dec rorl clc sti imul pop xor mov mov mov push mov leave rcr int les mov adc xor mov or jnp out mov mov test sub insb push imul pop cltd es loopne cmp mov sub (bad) mov (bad) xor lcall cwtl xor mov mov cwtl clc clc sbb lahf add mov fwait sbb sbb pop in cltd xchg jp lock push push pushf movsb xor stos call jo movsb cld add test in js hlt data16 mov push lcall sbb sub lcall call leave mov fsubs push cmpsb call xor adc or test xor std loopne or cmpsl mov fcompl out inc loop mov out mov cmc (bad) mov xchg push pop clc dec push mov lock sarb clc int3 fcmovu inc xor pop push mov and fstps cs sysenter scas rorl clc insb xor add rol add push mov sbb cmp xor mov outsb repz call xchg andb sbb sub idivb and sub pop mov movsb jmp or mov in out or stc xor std adc popf adc aaa and (bad) xchg rolb push imul push mov loop pushf fisttpll test leave add push fildl inc fcom movsl out cmp pop (bad) pop rcrb insb xor jle pop and fisttpl into pop addb xchg mov test jp out add sub ds cmpsl hlt incl mov rclb push lods cld orl and incb out lea fdivrl add pop out sub fld xor and xchg push (bad) dec xor lds out mov cs jnp push pop or pop mov (bad) jle pop fldenv pop cld lcall iret std bound aas scas cld sbb xor and jecxz fdivs mov int ljmp push out mov xchg lea ljmp das push xchg add mov mov mov add cmp mov xchg xor imul mov mov fistp dec xor fidivr rcrb call mov dec loopne mov or dec add xchg fistpll cmpsl add lahf and cmp or dec (bad) xchg hlt push cltd or xchg adc push mov sub inc mov fsubrl inc mov and cmc inc xor add xor lock pop adc in mov jbe mov or mov mov std test and (bad) mov mov es inc xlat mov or push test jne ret imul and push jns out xor push lock push xchg ja xchg aam test int3 xor (bad) test mov xor cmp mov cmp (bad) icebp or cmp adc mov mov je jbe add push sbb xchg bound js push lock push and jl enter (bad) dec lods sbb (bad) shrl add imul jae adc sbb mov (bad) pop lods push das jle and lods jmp incl lds faddp xor sbb decb fist shll or sub and repz push shl push jl jecxz lods mov pop jbe xor test adc imull cs xor push sub xor add xor fcompl cmpl add adc (bad) sahf bound sub aam mov sbb cld sar imul fwait pop and adc push cltd or out inc dec dec sub mov inc sbb stos fildl add push les push bound cmpb xor cwtl in mov xor call push (bad) jmp subl stc cmpsb lcall fcmovbe mov cmp adc icebp js dec mov test lock shlb ss testb in test dec (bad) mov call les jecxz int3 push mov xor mov test xchg test lods and mov test mov stc mov nop pop xor (bad) aaa out push xchg xchg lea test gs andl sub xor fadds xchg jo add out loope and in xor cmc cmpb fistp loope mov (bad) mov push addps imul mov add sahf stos mov ret fst pusha push dec movsb mov mov popl (bad) (bad) repz add mov jecxz add fs sbb xor data16 imul popl add cmp pop adc stc lock adc js pusha xor xchg xor pop stc test sbbl add test cmp adc push js adc inc bound scas (bad) insl cld cmp aaa pushf xor cmpsl inc jg fidivr das xchg test inc xchg add mov jg lock push mov push or js pop addl daa push sbb aaa (bad) mov xor clc shrb xchg fsubr das movsl loope psubq mov (bad) and lcall faddl pop loopne add xchg cmp xor xlat notl sub xor push adc and mov push dec sub cmp push stos incb adc es ret xchg ret add xchg or shl cmpsb mov sbb push lock lods cmpsb inc push notb push and mov sbb stos call shrl loopne and dec mov sub or test add sbb iret and xchg insl add stc loopne pop pop mov pusha xorl add sbb mov push fsubrl xchg xor sub in cmp (bad) lcall scas xchg cmp nop push add ss jmp or vpackssdw or mov out add out lods adc mov call jo out sub int3 (bad) pop sbb sub clc mov mov insl mov jb out xor dec xor daa or xchg fimul ds xor stos cmp lods fs inc icebp sbb cmp sbb push lcall xor lcall jb or call jmp shl addl push mov pusha sbb cmpl fistp mov pop daa gs or loopne (bad) xor loop push mov scas mov xchg or or push push and hlt lret out fidivl (bad) and add mov sbb shrl les in mov fisttp dec or push pop add fcomi arpl push add (bad) clc test clc in clc rclb mov in push les pop cmc sub mov mov (bad) push int3 and xor pop pop test xor mov test add in shlb mov mov cmc ret xchg clc sbb xor cli adc data16 dec cmp loopne pop jbe or icebp pop jo fstpl and daa mov add test popf inc repnz (bad) push subl (bad) in mov jns stos ret mov cltd shll nop dec lods mov adc outsl movsl add push push xchg xor pop push push or push pop and and xor inc xlat push call in loopne fmuls cmp aam imul adc subb lahf jmp push daa or loope pop (bad) (bad) xor add sbb (bad) dec rcll mov xchg and push xor or inc out push js jecxz adc inc mov mov sbb je mov push xchg aam xor test mov test jp jb lcall test sub or mov and test into add outsl or adcb loopne addl leave jp sbb mov xor xor cld mov xchg daa mov xor cmp std dec out repz xchg cmp pop jg daa sub aaa popa (bad) hlt out adc int3 aam out clc gs xor xor fidivrl inc push xor or (bad) mov popa pop nop or pop cmp insl pop sbb jle adc xor jg stos push enter xor out rcrb loopne adc rclb sbb rcrl mov movl pop es adc icebp (bad) mov out repz mov (bad) xor pop add (bad) mov mov sub iret mov (bad) fisttp in rcrb cwtl in int3 pop decb lret xor inc push xchg mov lahf les cmpsb pop (bad) (bad) imul mov lahf in add hlt scas test xor into xor jmp mov lock into push or addl add shr mov mov mov mov mov or mov sub cltd sbb jnp fimul mov movsb push fwait xor jl sqrtps and mov fs pop xchg fidiv cli cmp and cmp and xor and inc sub cmp test cmpsb aaa push aam xchg cli pop mov push jg pop mov xor mov xor fnop scas or mov call call rcr xchg movsb movsb push stc imulb xlat mov xor sub repz mov scas and cld adc decb sub clc mov or sbbl or sbb roll fdivl shr push jo loope in xor daa scas mov dec mov lret mov and add inc ja pop ret fisttpll ficoml cmp loop loope popl mov outsb in sahf mov mov add aas dec aam (bad) pop push int3 out jmp imul fcoms pushf pop hlt sbb sahf push or pop and pop xchg mov xor outsl pop xor fist out pop mov xlat xchg cmpsl movsl scas out mov hlt clc int3 jne mov push dec sub push add mov andb call sub sub xor push ret adc ja pop dec sub stc rorb scas adc cmpsl jecxz mov push and xor jecxz aad (bad) aas pushf mov call sub add dec fnstsw call into or xor or jbe sbb adc push sbb shrb push out pop shl addb sub jbe insl movsb pop xor enter js in sub mov cmpl cmp loop push dec loope cmp outsb popa mov inc and in jle sbb adc aad sbb inc push push dec xchg mov roll std and addl adc jno ljmp cmp push or xor cmp mov dec sub xor imul int xor jbe mov test cmp cmp lcall jmp notl mov testl cwtl xor mov and es scas jmp push push xor ret or out fcmove push pusha movsl dec loopne xchg data16 inc mov punpckhbw mov mov add ret in aad mov xor push movsb aad cmp push test dec add pop fcoml pusha xorb pop adcb and add ror sti sbb (bad) sbb push mov addl fwait icebp icebp insl sbb jmp xor sub add mov mov into lahf pop clc mov sub sbb cld ret xchg pop lods xchg add aaa and cld add adc test bound inc das fdivs dec arpl aad mov lock xor outsb cmp test xor inc icebp arpl mov dec addr16 adc loopne jmp mov fs sbb or sbb sbb and push jmp insl inc add jmp mov or sbb (bad) cmpsl inc sti inc (bad) cwtl jl and xchg scas stos pop repnz test push ja add mov out lds cmc shrb xor lret in ret ficomp mov jo mov test jmp (bad) js dec push xor cmc (bad) mov xor (bad) (bad) xor adc in and pushf addl cmpsl pop cmp xor test xchg loope xor xor lcall in jns mov (bad) xor xchg push cmovb xor leave out fbld pop and xor pop cmpsl ret jge loope xor adc jmp jp fsubs pop jb enter xor loopne pop sub cli lea push lea stos mov mov cli lret je imul cmpsl jne push imul sbb xchg movsb clc jmp jbe lods fwait lea ficomp and and cmovp dec xor add xchg lea test jle shrl lds sbb push sub xor dec lods or or out cld sub cltd es xchg xchg inc cmc clc aas test test inc (bad) push inc or pop cs mov fistpll loopne mov sbb int inc in loopne push pop mov inc and push mov mov inc push (bad) jb jmp ds test loop cmpsl dec pop add mov orl movsl rclb add adc mov xchg and push test lock mov fnstenv xor sub or add or add (bad) and lds cmpsb inc mov test cmpb fsubrp mov cmp mov mov add cmp xor xchg push mov scas push jle rolb aam das test add gs mov fiadd ds test pusha pop std test int3 out push and imul pop mov outsb lcall sub pop xor loopne or sbb setbe add sub imul imul mov xor jae or mov jnp loopne lahf dec push inc jb pop jb xor aam pop add fisubl (bad) lods add pop call mov test push (bad) rcrb ljmp mov jne pop mov dec and xchg repz xor lcall in and pop ret or xor movsl (bad) xor repnz rolb push insl and push jmp xchg xor and mov push cltd push lret movsl aaa or xor shrb popf iret fbstp enter or mov out mov mov mov cmp cld xchg stos or test (bad) in pusha xchg xchg adc push adc adc scas mov cmp (bad) mov or stos cld cld and imul mov inc divl sub scas mov mov es mov ds shlb fnsave ret cli (bad) int3 mov adc rorb aam mov cmpsl push xorb inc or fisubr add loope push mov repz ss loope xchg add add jge js xor cld (bad) xor mov mov pop xor mov pop xor and push and jne test add repz mov sbb jg pop xor mov pop push fmull int3 or nop (bad) mov sbb xor xchg cwtl rolb xor add loopne jno xor mov pop push cmp aas cwtl push fs out incb nop clc int3 push or cld imul mov xor jmp mov push pushf fs (bad) inc sbb sub dec push test push push enter cmpsb pop pushf mov divb xor (bad) fcomps mov dec out dec popa lret out mov dec lock fnsaves push inc and or fwait mov fdivs cmc or sbbl xlat mov cmp lea lods sbb xor sbb fs das rorb out mov push push (bad) xor aaa lock push or push in push push xor xchg mov icebp mov and shl mov adc gs cmp fwait (bad) push in cmpsl dec loopne popa sub sub loope mov dec lahf int3 push add in pop lock decl (bad) add and mov add jnp or add daa aam fwait dec cltd cwtl mov inc adc icebp addl adc movsl xor lds pop lods fild jmp push aam loope pusha mov (bad) sbb fwait or mov push loope mov sbb lods outsb mov jns push dec js xlat push dec je sahf lock mov in push mov rol pop (bad) addr16 imul or rorl jle in divl out insl rolb pushf cmp cmp rclb pop es fidivl adc movsb xchg in pushf mov pop pusha addl std movsl add push test add test push into pop mov aas add xorl cmp or push cmpsb arpl (bad) fildll cld xor div sub inc fildll rcl pop fwait imul push push (bad) jp testb ss lock arpl sub adc movsb mov mulb cld pop mov mov xchg push mov sub adc jmp xor pop test pop dec push mov adc pop add mov add and pop (bad) js cli and in push ret mov xchg sti inc or or test stos dec or adc shll ret xor lcall mov js and shrl ret inc pusha or pop popf pop lret ret lahf sbb push xor ret and loop mov and cltd and test fidivl cmp adc ja mov jle jl flds jg es fdivrs mov inc add sbb fwait out js mov xlat loop insl push (bad) cmp in (bad) dec (bad) repz in or fistpl iret sbb sub pop pop fidivr adc rcr inc xor sbbb adc lods or mov sub cli inc sti pop movsb fsubrp je xor sub or and sar fs inc inc aas enter ret inc cmp push mov mov sbbl loopne pop mov sbb stos mov add push jl mov addb xor faddp mov cmp sbb push mov adc jmp xor aaa jb fidivrl jp xor mov dec mov inc mov outsb cmp incb sub imul out add sub mov (bad) cmc push data16 ret cmp adcb xchg pop push loopne sbb mov xor (bad) mov and inc xchg inc jl push pop bound rcll xor mov inc adcb xor js sbb cltd and push cmc mov sub or std or or aad clc popa cmp scas popa jle and lcall lock call push fdivs push add in hlt lcall (bad) xor push mov jnp das and push jo add cmp xlat cmpsl adc pusha mov and xchg out rorl xchg mov int sbb mov test rolb push mov push (bad) aad loop aaa xchg xor sbb cmpsb xchg test sub sahf orl int3 adc push fmul and sbb hlt sti pop cmp sbb pop jmp sub test inc pop or jne sub aas cmp clc push sub in lds add in ror cwtl out adc sbb movsb lret xor das sarb push out pop cmp jl data16 lret mov jae and dec fsub cmp xor mov (bad) divb xchg outsl cmp push ret adc mov dec xchg push and stos sbb sub xor and xchg or lcall push xor xchg ds repz fstpl insl pop mov rolb push mov sbb inc je arpl mov adc loope jo and fnstcw cmpsb (bad) xor fsubrp jle mov test mov xchg stc je faddl fidivr insb push in jb lds insb dec inc fcoml (bad) imull and ror xor xchg sbb push sub (bad) scas sbb inc mov mov lods jo lahf fcomps ds adc or pop hlt popa shlb ret lods push xor sbb pop movsb sbb cmp xor mov (bad) sub test pop xchg leave push les add cmp xor add cmp adc xor adc push inc sbb dec mov daa repz rorb mov push std ret add ds sbb jo and sar arpl sub test loop out xor jne fisubr adc adc call add mov xor ret adc xor xchg mov insb lods xor icebp adc mov (bad) jno jae push add ficom es or (bad) jnp mov sbb lea movl insb imul jne lods stc test imul inc stos mov mov pushw adc divb or out mov roll imull popf push int push rolb mull cmp and ret dec inc lds lods dec enter jmp sbb insl pop xor inc xor dec daa lock xchg push pop lock add int3 fmuls mov adcl mov dec sub mov inc fdiv jb in mov lea gs pop cmp cs mov pop lcall psrlq nop xor sbb jns (bad) pushf mov pop das test js call (bad) jle mov sbb in push sbb iret sub loopne cmpsb insl aam sub cld mov call jp cmpsl adc fs xchg sbb sbb loopne and push lret and xor adc inc je ret into xchg dec nop lea test jle adc jne daa (bad) fisubrl rorb pushf nop add and (bad) adc sbb pusha pop ja rcll (bad) push out pop push inc xor adcl sarb push sub test inc and rol inc ret cmpsl push insl xor or adc xor inc in dec ds nop sbb lds lds jo insb lret sbbl in test rclb (bad) jo ds test adc pop hlt push inc stos es mov cltd xchg sub xchg cmp test jg jecxz (bad) xor mov push out or xor mov pop xor mov (bad) mov dec popa xor daa rcll jns xor mov sbb in clc xor sbb cld loopne cmp dec repnz mov xchg test out mov mov es into ret mov leave add mov jp std lea push neg lahf cmp icebp and or push push xchg shll vandps rcl and pushf lea cmpsb jmp xchg icebp xorb mov mov push clc es icebp test les ret sub jmp mov sub jbe xor xor push push push inc adc ss ss cmpb xchg aaa test cmpsl dec aam xor cli dec mov ja ja push jbe (bad) xor adc adc icebp mov sbb sarb push sub addl sub rorl jle pop cmp repnz xlat push sub insl insb lods es add out inc das pop xchg xor hlt sub std cmp outsb int3 xor jp pop jo and fsts sub icebp notl lahf lock scas in push and fimull into xchg sub stos xchg loope std push adc fwait pop out icebp mov sbb subb cmp mov out and or rclb add xor xchg xor mov aad cmp push lcall aaa stc push mov out roll pop repnz dec fdivrs mov xor cmp fstl or sub mov out popf xchg sbb jne lods xor iret sub (bad) hlt cmp xor cmp xor pop (bad) xor add jmp sub pop inc push push add xor in rcll jp fisttpll jno lahf or adc dec repz push sbb cmpsb icebp pop pushf mov loope sbb stos in cmp xchg xchg cwtl adc (bad) xor mov sub cmpsl push shrb cmp jmp ret push cmp mov rclb inc xor addr16 sub xchg mov push xor andl push sub repnz sub and es add in scas mov das dec xor repnz aaa in or adc jb aam sbb outsb inc mov or adc or mov jmp movsl cmpsl leave data16 jbe adc xor (bad) push adc mov cmp and test popl fwait adcl mov pusha pop fmuls jg and sbb mov in or push jo (bad) mov adc mov mov shr sub inc adc adc jne mov hlt push fs pusha fisubrl push push loope xlat shl and sbbb pop (bad) or adc jne cld or das hlt pop cltd enter call adc mov (bad) adc lret cli pop or (bad) mov or ret pop add loopne mov sbb mov or stos pusha sti and in add fwait (bad) pop adc adc paddusw adc sub lock cld inc shrl inc mov (bad) fisub sub lret xchg add (bad) sbb ffree out lods lcall (bad) dec scas mov pop lock js sub roll cmpl fistp das jo jno dec into mov lds and adc or stos sub in push add rcrb fstpl add aas enter jmp test stos adc (bad) xor int3 mov or inc xchg mov xchg dec or inc cmp jg test ja nop push mov or dec mov xor pop test sub pop stc mov (bad) xchg mov call xchg xor pop jmp loope and in xlat mov loop and push pop xchg ds fild fsubr icebp mov enter mov ds movsl cltd mov fdivrl xchg jle addb adcl mov add cpuid add jle scas roll pop dec add pop push fdivp mov pop mov xor mov popf push test rcll add sub adc fnstenv push or es out cmp push pop jg movsb adc js push out add xor fdivrs lcall lret mov inc xchg pop neg xchg pop and and jecxz cmp push int fist bound mov pop fdiv xor cmpsl sub sahf cmp hlt pop push shl cld sahf sub (bad) or mov daa push push sbb shll shrl xor imul ffree test sub mov mov pusha (bad) mov jne xor mov xorl lahf enter rorb lcall push lds cmpsb adc or pop mov add jo add fstpl or push add sub cmp loope mov scas sub add add xor aaa xor lock mov xlat adc icebp xor dec xlat cli aad pop in xor iret sbb fsts cltd or pushf mov cwtl lea cmp add enter fidivrl loope add cmc xlat out inc push xchg xor js sub jp sub push paddsb loopne pop scas (bad) push adc cmp adc dec jb mov pop jmp aam xchg add ret rcrb cmp call stc rorb pusha jp pushf movsb xlat sub arpl shll rorb mov (bad) into enter push add add out arpl sub repnz fmul add rol sbb lods mov or inc pop inc pop cli mov frstor sbb push sbb pusha notl xor dec and sub hlt loopne mov pop xor shr add fs mov jmp push je push les (bad) dec cs mov (bad) arpl loopne cmp pop dec dec push out lock add push mov push or xor imul ljmp xchg or test loopne xchg test lock sbb enter sahf push jg push jo adcb sub dec xchg popf notl mov pop pop stos adcl sbb mov sbb rorl in test xlat xchg imul pop mov movsl es mov es mov mov jl popl xor sub faddl in dec in out sub mov incb add cmp ds sbb xchg nop test mov sub xchg mov xor push push popa cmp lahf mov pop rcll out int3 pushf jmp call sub push push xor pop xor inc (bad) push push dec xor push sbb out fildll cmp mov sahf sahf bound dec (bad) inc out pop popa dec push add (bad) sbbb cmp xchg add in xor es xchg or popf and pop pop (bad) xor out enter jae add repz mov push mov xchg cmpsb cmp cmp test sub adc mov add sbb repnz push mov movsb outsl jnp fwait xor roll inc dec fcompl movsl xor jbe sub xor push (bad) mov jmp inc imul xor aas call adc lds das sarb (bad) jg xor sub and sbb js pop imul stos ds loop addr16 rcrl test scas xor insl sbb in mov sbb fisubl adc sbb in hlt imulb dec lret mov adc push or mov stos mov enter sub add (bad) clc movsl sub ffreep mov les push icebp dec jbe (bad) xor sbb nop mov add mov pop (bad) repnz test push inc insb in xchg or dec add dec enter (bad) movsl and sub sbb jp mov test addr16 add or (bad) test or inc pop sbb mov add push (bad) mov dec add lss push sbb dec add mov push arpl push or pop pop dec lods xor jge out outsl mov pop sub gs leave mov movsb scas adc dec arpl jo adc lods and cs or cmpb mov xor mov std in and or sub dec push cmpsb adc jo xor jae jb stc insb mulb cmp adcb dec adc stos cwtl adc sbb mov sbbl movsb push adc lahf (bad) or out adc adc sub sub mov and es ss fcoms mov push insb les pop imul or mov outsb jb cmpsb inc lds mov ret loopne (bad) aaa pusha inc pop lock pushf cld or insb mov pop adc mov mov cmp (bad) ficoml les das mov loopne (bad) stos mov mov inc cmp movsl add jo cmpsl push sbb fcmove out or adc dec xchg insb xor mov xchg cmp daa xchg xchg xchg xor lret xchg and fdivrs fwait jmp mov sbb insb push add or and mov sti mov sbb cld and push adc sbb inc cmp or xor sahf adc es push std mov dec dec adc xor cmp (bad) and int jmp mov adc mov jge movsl sbb out xor pop pop (bad) dec mov mov push loope jge xor cli push xchg mov movzwl xchg stc and adc inc jb roll jl sbb xor test jl mov jmp push mov mov jo dec push or dec loope rclb lods push call lcall mov fcomps cwtl insb movsb push pop pop fadd mov xor sbb push inc inc pop mov loopw sub pop (bad) pop push or xchg xor mov mov les or mov jmp and das fdivrl aam mov inc xor push clc mov pop into test xor mov lock mov sub aam sbb and push sbb (bad) bound outsb (bad) mov sub out xchg int3 fistp sbb jo (bad) int3 clc popa movsl jl sbb movl cmp fldpi add push das cld in lret push fmuls fadds lahf lcall lret cwtl pushf fbstp push in ljmp push push lahf dec movb int3 (bad) pop sbb outsb lahf call add pushf or sub arpl push dec shl jmp mov loope mov xchg push insl scas nop adc jp mull adc jo pop (bad) or mov xor rolb loop mov inc pop shrl test adc arpl push movsb or xor je jg sub sbb push pop add out in cmp clc add mov xor rclb (bad) loop xor imul sbb ljmp xor dec lea sub dec divb inc loop mov sub and das sub std sbb xchg enter inc test ficom mov js fnsave jne loopne adc xlat repz mov lock adc movsl mov xor ret fidivrl loope das out inc (bad) pop in jb mov jae mov (bad) fildll xor mov mov icebp popa pop mov mov jg cltd imul subl lea hlt fdivr pop push mov mov push out out rorb mov mov ja push mov push scas stos (bad) cmp scas js xor lahf push fcomps cs lods xchg addb xor aam mov or xchg rclb xor and and rcrb pop mov push arpl xchg mov inc (bad) add pop lock rorl shlb arpl call lea enter jmp das jno rorb push xor adc pop lahf xor sbb jmp je pop add nop fwait mov pop push jbe mov push cli fadd add inc out or popa out and adc fisttp add fsts xor test nop dec movl mov out cmc fsts gs push push js hlt jmp and mov xlat add ss je sub nop push push xchg addl or sub inc mov cmpl mov (bad) jmp push xchg adcl sbb adc fcmovnu add frstpm(287 nop push mov rorb sbb adc fs je xchg mov test or jno pop adc daa xchg sub pop enter mov xor xor push jl and out aad in ss mov sub push pop fsubs in aad sbb adc cmpsl mov push push test cmp push sbb movl add inc add imul mov sub sub scas jbe dec inc pop ja push cmp jle mov mov add mov push xor clc test out inc dec inc cs mov or pop mov pushl sbb push xor js inc imul int3 xor dec inc jp push xchg push dec outsb outsl cmp decb push cmp out outsl inc push inc mov repz insb jge lods pop cs mov dec dec and push hlt js push dec mov pop clc cmp mov fnstcw insl push nop push rcl iret sub cmp fisubl fcom add pop push cwtl add xor xchg jge xorb loopne push push dec ss scas push (bad) sbb add aam dec ss repz push outsb fcmovnbe ds cmpsl push adc adc push cmp data16 inc mov push dec and lock push addb cmp int push pop push xor loopne cwtl inc push pusha xor clc ss sarb rcrb mov mov jns out addb jnp adc dec dec push sbb mov pop out mov cmp push push (bad) insb ds jno jo fs test push fsubl pop outsl jl iret sti sahf and jle out out out push jl mov loopne mov adc cwtl jle lods imull mov add insb mov sub cld pop in pop insb repz add popf cmp mov mov ds pop pusha adc ljmp pop into sub cli lahf mov and push pop fmull and add cltd jle das pusha pop jg daa xor mov push xor adc pop or xor mov and dec call fldenv js clc and xlat iret enter fcomp fxch fadd ret fstp fnstsw loope inc in fwait inc call jne je and dec fidiv and popa je xor xor jp push jl jge sahf pop ss stos lret push adc add adc mov cmpb pop adcb mov and sbb or push push (bad) and xchg add lock aas scas fmulp imul and add pusha insb inc push iret repz mov iret repz mov cmp rcr loopne lock sahf out add adc and out sub cmp out sahf out pop pusha push sahf js mov cmpsl add add jb add push iret gs add dec retw iret jb pop mov jae xchg daa and leave enter loopne fs cmp pop in clc jmp push aas rcrl and pop pushf sub xchg clc and (bad) clts pop or adc or sahf out cmp sti movb xor jns out push fs cwtl out sahf out mov repz cld or sbb cmp negb add adc test sub push push inc xor mov push mov or add mov rol or xor jo popaw push jmp xor xchg mov mov sahf push enter aas add aas cwtl or imul aas push or xchg add push call push adc neg jnp push push pop and je push jle scas mov jg test lret cld mov push das sti push aam mov out fimul (bad) clc push add mov out add pop adc jns out adc sahf or fmuls jns sbb push adc or cmp inc sbb cmp repz mov test repz sbb pop faddl iret rcrl cmp loope push sbb (bad) sub fistp inc push and jns out adc mov jns nop push movsb or out mov push dec addb iret mov enter sahf out cmp mov jns out mov mov mov je mov movsb sbb jns out mov mov add add jbe (bad) cmp loopne negl xor push punpckldq cmp loop pop mov pop fsubrs or or mov ret or push jbe fstpt dec pop push mov inc pop sub adc sahf xlat xor movsl les int3 aam cmp add push in orb mov cmp data16 in hlt jns cmpsl stc add or sbb lds mov sub mov adc fadds (bad) pusha aaa cmp adc mov mov xor fcompl das sti (bad) xchg xchg out jmp or xchg xchg xchg add adc cmpsl or (bad) dec dec mov add dec dec adc pop add cmp pop scas rcl in ss cmp push inc decb sahf out fs pop insb test push cs jl mov jl push jno mov call jns jns ja pop fs push lods mov out call cmp repz cmp pop jo cmp repz movsb lods shlb lock sbb das jbe xor cmp imull adc adc pop mov xlat push out imul inc popa sub insl shrl pop inc add or nop pop in sbb (bad) mov std adc out sahf out cli xor inc sahf out sahf clc pop imull jns out cmc xchg hlt test out sahf out repnz icebp loopne repz lock out or out sbb iret repz sub inc jmp daa iret repz ljmp mov add or or or add cld xchg mov (bad) outsl and pop outsb inc inc or or add add imul iret mov inc adc push in data16 inc cmp or cmpsl rcl bound pusha ljmp jnp lods mov add pop pop es mov add outsb push add test adc mov fdivrl xchg pop add outsl xchg stc sahf out sahf mov jns out std (bad) incb add jge out (bad) test push xchg cmp add xchg nop mov inc ds scas cwtl jecxz push push fadds push push loopne jg xor sahf xor inc es fildll outsl cld xor lock aaa xor sbbb or inc imul mov push mov jbe movsb pushw mov adc (bad) push xchg movsb iret jnp movsb test (bad) aam sub lea sbb jnp push out mov jbe out pushf rclb out jns mov (bad) mov mov mov fsubl outsl jnp mov insb push movsb movb mull negl inc cmp out adc push out mov jl enter inc out lods lock add (bad) pop out cmp mov mov call pusha imul negl je push inc sbb loop out or mov into das push dec mov cmpsb loope jnp dec add or push pop fsubp dec xor mov mov iret add cmp (bad) in loop mov mov call rcll (bad) (bad) (bad) es les jmp mov jle sbb lock lods push fimul enter fs data16 jle or std push idivl iret imul push mov adc sbb cs jnp sbb ds inc pusha (bad) and mov push mov addr16 ret jae out test data16 addr16 movsb cmp pop sbb ss outsl js mov and in cmp xor xchg fidivr ds fistpll cmp cld xchg fistp mov (bad) cmp add pop push dec xchg movsb jnp push pushf dec mov mov movsb ja xor cmp int3 addr16 out pop sbb lock (bad) inc push mov es jle pop mov push jo push adc xchg js dec inc xlat push call mov sahf xchg sarl sbb je xchg (bad) push mov sbb ds test popf dec inc movsb mov sbb js sbb jecxz negl push pop rcrb (bad) repz (bad) into hlt movsb outsb adc rclb cmp scas (bad) mov and nop adc stos stos inc inc adcb cmp push xchg add in jo push xchg inc les add push subl add add push dec add ja xchg pop dec add pop inc out popf mov inc and dec pop push and (bad) idivb dec aaa push pop dec add fcmovnu jae sub sbb push dec xchg mov loop push inc mov mov or dec xor or inc push out shr mov push cs and inc push cs out mov or inc sbb inc (bad) out cmp dec push rsqrtps sarb inc aaa dec push dec push xor cli fmuls inc popl add add ja xor incb add iret mov sub rolb jnp ss sbb push mov xchg or enter pop es faddl cld jg clc daa iret xchg das aas push pop jmp rol cmpsl lods cmp add pop or push aas xor xchg (bad) jg add dec ds inc addr16 insb addr16 or push mov movsb mov pusha cmc shll jnp mov psubb jnp loop add push out lock int fwait neg out (bad) cmp mov mov add pop pop xchg lods rcrb clc pop push (bad) aas pop mov imul aas pop xchg addr16 into sub xchg mov xor push pop std lock add sahf ss insb jl (bad) push data16 loop into repz sbbb add cmp iret rolb nop cltd jecxz mov lock int ds push xor push cltd shr jo pop (bad) xor jg mov lret decl decl cs fldcw add add and (bad) out loopne cmp add call aas dec pop outsb daa sbb pop std and jg aas rcrb insl outsl mov dec add push inc dec xlat mov pop outsl clc popl adc add div add xlat pop sbb mov test jbe pop inc nopl ds lods bound fstpt addr16 int cmp pop in les test cmp inc aas nopl rcr cs add bound inc aaa addr16 cld inc ss jb cmp fsubl mov sub add lock and (bad) xchg inc jge cmp ss int sbb push sub inc add fwait in fldcw inc shll xor sbb xor push sbb push or mov add ret roll lock adc fcompl jl sbb push sbb or mov ss loopne shl sahf nop in jge data16 jl les inc push addl adc add and add or add or mov mov cmp pop push ficoml subl mov daa sbb fnsave (bad) and daa and fidivr lahf and daa and iret daa push adc cmp clc dec push out int jae push mov push mov daa lret xor daa xchg jbe in or dec daa fs out fimul dec inc daa negl (bad) (bad) ja push out idivl daa clc push (bad) cmc sbb sub xchg mov dec xchg xor repnz jg daa cmovb mov xor and int3 mov inc pop daa inc push mov daa dec sub aas push xlat dec sahf cld xor mov dec sub in pop ret cmp jns dec and out fidivl push es and pop cmp push and and cmp idivl in push jmp pop push ss cmp push insl out fiadd push lret loope cmp push and push mov adc pop xchg or loop mov mov sub and adc addr16 test push lahf push add testl push cmp inc or mov scas jg addr16 dec push pop es (bad) daa inc aad sub sub dec dec pop jb dec fisub mov out in and pop adc (bad) fisttpl fcoml clc daa fsubrs fiaddl jecxz add mov inc mov daa or stos mov aas fildl fild xlat fildll jo inc arpl daa ds shll daa bndstx xor arpl inc mov roll sbb (bad) lahf cmp (bad) mov mov out fs or mov cmp push fistp push mov daa mov xchg fisttpll ljmp inc inc es daa dec ja inc out add jle xor in fsubrs out jecxz clc sbb xor add divps loopne inc xchg sbb or stos movsb out pop sarl aas daa xor xor cmpsb arpl pushf imul das es bound popf sub push inc sub push (bad) stos and and push sbb fs pop data16 inc push (bad) je clc insl xchg jge mov daa je stos inc mov call stos sub pop lock popa aas jmp dec push pop bnd cmp daa mov subl adc jmp sub jne xor and xor and jle pop dec inc out sbb popf mov xchg sbb push pop daa fisubr jmp daa push jl and insb imul dec clc or sbb xchg es mov daa dec xor dec xor lahf fldt mov dec daa clc jnp mov je dec sarb dec pop out fidivrl dec rorl push out aas sbb (bad) out test mov push cmpsl xor cltd cltd (bad) fdiv sahf xor mov mov (bad) out jb aad mull repz aaa fs popa xchg cmp lret dec (bad) loopne pushf sbb cwtl xor ss sbb sbb push ja mov outsl mov ss and push mov lahf add jne adc pusha jp xor pop es xchg orl jmp je faddp mov mov orl fcmovnbe (bad) mov into aaa daa and cwtl jns cwtl and scas or jbe stos sub push sub insl or xchg lds jno sbb and loop mov loop fstl inc push and pop dec jmp xchg add insb test stos mov push lods jp and push push or movsb rorb into adc mov push cmpsl addr16 lret sub addr16 cltd xor cld in push add js xor pop mov lock mov xchg daa in add out imul push ljmp push out mov and mov push imul push jbe mov sti push pop inc dec lcall (bad) fsubl cmpsb test and or mov outsl into jge (bad) les (bad) (bad) incl fidivl jl aaa les ja loop test outsl aaa xor in daa (bad) pushl ja popf sub lahf scas imul in ds imul dec repz jge es lahf sti neg jecxz aas push lock pop repz sub stc imull fstpl das mov mov repz jno out sahf das fpatan iret lcall xchg aaa das call adc (bad) dec cli xchg and (bad) ds xor push and mov push push lahf out xchg push jle addr16 mov sub popa decb test push ja mov outsl pop pop dec jl,pn inc mov imul scas xchg orb fcomi into cmpsb xchg data16 mov int pop push adc push or repz xchg sub and ja pop rorb pop out scas outsl data16 insb pop insb mov icebp xchg push cli push pop jo dec dec lods and cmp xchg aaa adcl xor push in inc push (bad) mov push inc fimul cs adc add add push mov pusha mov mov pop leave (bad) inc adc test sub push push xor out jle add cld jg lea les jae stos mov jns pop lock fwait (bad) (bad) or mov cmp arpl ret jg mov xchg push in (bad) lds lds out scas push xor jle into add xchg aaa ljmp pop lcall xchg sub jns cmp pop scas jle mov sub imul sbb xchg rcrb arpl repz scas out push into or pop popa pop (bad) jp mov ljmp mov jle outsl xchg mov cli cltd aas dec jp shrb aad ja scas mov sbb mov mov dec mov stos mov sub cmc outsb xchg out pushl outsl es xor push fisub cmpsb or in jbe and mov testb jb outsl push (bad) fisttp xchg xchg notb fidivrl es fistpll std inc sbb imul in dec cmp and insl sarb mov cmp (bad) (bad) jg cmp pop push push (bad) das lgs out jp or std ja (bad) lcall sub cltd dec adc (bad) push sbb inc std push cmpsb outsl jns xchg jle (bad) lcall pushf cmp shrl mov mov pop mov sub xlat mov mov xchg out push (bad) (bad) (bad) out mov pushf push fisub mov sbb sub pushl data16 cltd aaa addb inc cs xchg pop pop out test jg pop (bad) jae clc lret cld or fbstp xor inc xlat fild loopne pop es outsb popaw dec add mov out scas mov loope movsl fmull jle dec les pop (bad) dec data16 std xchg cmpsb xchg fild mov outsl xlat sbb (bad) icebp (bad) jg push dec call aad mov xchg into and push push (bad) (bad) out call and and outsl sbb inc fimull test call fs sub sub jbe movsb bswap push fistp addr16 pushl or push xor outsl sub lds xchg je xor iret cmpb lcall ss fldt (bad) fildll out bound and sbb fisubrl mov sub rclb jnp into movsb mov push xlat fsubrs add lcall xchg cmpsb push stos xor (bad) daa add sbb jo inc xchg out dec fmuls icebp jmp jnp iret aad data16 dec stos pop rolb pop pop jg jb test add dec out cmpsl dec jnp call aas push xor out dec pop jl lcall je dec push test push push sub out mov ficom jg sbb jg aad lea sbb in (bad) push or fs icebp mov fcomip rol aad lcall cmc repz stos or mov ljmp test cmp add pushf pop fmulp pop psubb add push decl push sub daa push lcall mov sti xlat bnd and aam test stc xchg cmp (bad) lock mov adcl xchg lds push ja aas fmuls adc pop test sub rorl dec movhps pop adc cmpsl pop jg (bad) jo inc xor aaa ficom add jbe jg lret loop aas mov and add cmp icebp mov fmuls cmpsl lahf cmp lret ret shrb push sahf sbb cmp add sub fildll xchg add sbb xchg ss or out push cmc (bad) mov lcall mov jae xor nop push ret cmp imul std xchg add stc lods and imul out pop cmp inc ret pop fimul aad xor es cmp cmp loopne xor cmp stos push jmp pushf arpl mov aaa and adc cs add xchg dec adc sub (bad) out add sahf enter jne mov movsl test lcall dec sbb mov insb sub jg loopne sti inc nop loop pop mov fwait loopne push fsub fst outsl gs push sbb sbb jmp lahf push stos (bad) scas outsl bswap jg adc inc arpl or cltd js js push iret das push into adc push (bad) and and decl mov sub or sbb cs movsb mov pop gs outsl mov sub ja xchg out loop out loope outsl clc (bad) jp aad es sub sahf jle cltd in pop add subb mov adc loope movsl fmul sbb (bad) outsb jecxz clc nop std and lods idivb mov push inc cmpsb (bad) pop outsl icebp cld push xchg mov jns (bad) scas loopne push je shr sbb cmp jmp push mov xchg mov jge in dec inc pop sahf lea in push aas ds sub pop ljmp stos (bad) mov mov mov cmp outsb ds sbb mov scas mov push sbb (bad) cmc decl push and jg stos clc les xchg pop (bad) (bad) out clc jecxz cmp call loop cmp repz notl pop stc outsl push sub pop and inc inc mov outsb js jmp aaa jne mov push push xchg sbb push add test cmpsl fildll test mov outsl scas add adc mov pop ror mov jb or xor push xchg rorl pop (bad) je in jp ss jo jecxz outsb cmp stos cld (bad) fisttpll outsl aad jecxz sbb stos xlat add xchg lds ds mov xor repnz sti jbe mov inc mov imul shrb cld jg out insl imul popf push (bad) rcrl (bad) decl (bad) mov cltd stos mov push jbe xchg xlat mov adc add cld cltd mov sub inc xor add push mov insl push mov (bad) pop das mov iret (bad) xor std or xchg jne outsl cmpsb repz icebp incl (bad) (bad) adc xchg and sahf mov hlt cs rcrl mov sbb jecxz mov inc mov test jns jl (bad) push sbb sbb push pop std clc ljmp lock cmp push fsubr push outsb sub cmpsl and cld jl js push mov (bad) outsl sbb repnz ret fsts mov xor call or pop (bad) mov stc pushf or cmp std adc cltd dec scas push mov out clc addr16 and add aas les fiaddl scas sub pop stos or push dec jns,pt mov aaa rorb xor js mov add hlt rcrl jge mov jge push and mov (bad) jg xlat or push fst das sti pop mov leave in xlat jp aam cmpsl imul mov stos sti mov aad jp and and jno loope test push negb add fidivr iret jg sbbl pop negb mov jne and and (bad) (bad) pushl jl mov xor stos std movsl test pop fistpll mov sbb ficompl dec lahf dec pushf pop (bad) and cmp jbe loopne fisttpl das and addr16 jge lock loopnew es mov push aad lahf das mov int (bad) jg inc dec pop xchg adcb or fist cs push add pop and push sti jg dec push rcll mov jge orb outsl decb aad clc push pop outsl (bad) movsb loopne push test xor lds jp stos pop adc or push mov scas mov pop sbbl push mov dec xlat loopne mov xor cli xchg push cwtl jp jg sahf dec push sub pop scas push mov stos aaa into push outsl sahf or scas aas gs jbe popa (bad) mov sub sahf push xor or sub and and mov decb mov add std outsl cltd mov (bad) (bad) mov and jnp fwait push loopne fimull push jo,pn in push inc aad push add pop hlt jnp xor ljmp sahf fistp mov jle repz call pop and (bad) push lcall sti pop mov jecxz sbb push jae ja aas adcl mov shl inc jnp popa pop cld scas ret jne (bad) mov ret pop ja and mov aad incl repz sbb aaa adc fwait xchg popf pushf jb lret es std or (bad) jp xchg mov (bad) lods psubsb cmpsb (bad) and test ljmp mov outsl jnp dec pop pushf int inc xchg ss (bad) jg loopne adcl ret mov subl add pop jb dec xor mov mov pop aad jg cli fisubl in adc (bad) ds push and mov push ret outsl (bad) nop lahf sbb ljmp and inc xchg mov or and cli int je pop shl ret jo cli push jl and test outsl pop push (bad) lock sbb add mov aaa push mov add outsl and cmp bound out (bad) vrcp14ps jge jne push jmp clc rep lock idivl or movsl mov ret outsl jg test pop mov mov mov pop pop bound es pop pop subl or enter mov jmp mov xchg ss out inc data16 cltd or std sbb decl push mov gs or fnstsw mov xor mov aad (bad) fildl es bnd fbld mov sub or ret mov movsb (bad) out mov call stc xchg (bad) nop mov test ss mov ret add in popf dec stos add iret sub jle int3 mov mov out jmp and es mov or hlt fidiv (bad) pop mov outsl sub dec push sbb mov inc sub ret ljmp ret adc mov test ss in sub into dec clc scas incb jb (bad) pop jnp sub add cld aad dec push pushf pop pushl cmp jecxz mov in push stos mov testl jge inc mov test push push inc jg sub dec enter or push mov movsb or pop cld mov test mov cmp fmuls insb clc incl call (bad) mov mov scas xchg cmp jbe mov jmp outsb mov mov pop in mov jecxz (bad) pushl lahf out stos jge repnz jne cmp mov mov pop add lret je mov mov mov enter stos mov push loopne out adc popa aad mov xlat arpl bound jae pushl (bad) dec mov sub in xor lcall stc cmpsb and dec sahf mov jbe lret (bad) ds stos pop fsubrp cli movsb add movb lock out outsl mov mov sbb loopne ljmp lock mov mov movsb lahf sub jle out sbb movsb lahf cmp roll out je jle pop cld push xchg mov in jp fistpll (bad) adc je clc pop mov or cli inc inc push je fs xlat incb movsb (bad) into sti adc ret adc push (bad) cmpsb aad les movsb les movsb and xorb icebp xchg out dec adc adc outsl push out subb jp jmp cmc dec aaa into fcompl aad inc aad sahf inc push testl adc addb ret (bad) aad mov jbe jns inc inc pop push fdivr mov aad stos xchg inc cmp ret fsubrl pusha pop xor out test sbb mov out (bad) xchg js xor sbb data16 ret cmpsl clc arpl mov or insl imul add faddl mov dec aas cs (bad) in or pop icebp jge aaa cld std pop xchg test xchg data16 xchg mov cmp mov aad jp xchg mov out sbb scas stos aaa jnp aad jp std cmp inc xchg call fmul clc mov popa std pop (bad) loop xchg fisubrl loop es xchg xchg ret test lock inc xor fidivr jg subl jecxz adc (bad) scas mov outsl test mov pop sub das sarl out adc mov push and xchg add push pop sub and fxtract ja mov cmp (bad) jo jne xchg lods xchg xorb push fldl xor xchg jecxz xchg es stos fnsave adc cli add fcmovnu xchg mov les mov pop out xchg icebp cmc out mov scas inc mov pop adc sbb dec lcall jl outsb js xor addr16 sub aam enter push fnstsw stos jp das incl push (bad) pop fbld cmpsl jae lret lcall addb ret pop call add fwait mov and call subl outsl lret push sbb das repnz pop repnz stc mov loope fsubr mov loopne dec xlat jp pop stc fwait push push push mov push pop xchg pop and mov das or push in mov mov push (bad) scas push mov xchg fldt je jno or cld jg dec xlat mov inc ds sub or jge into js and cmpsb les outsb or loopne fdivrp shl xlat pop orl mov xlat cmp ds adc lcall cli aam (bad) (bad) mov jle jl sub pop sub sahf mov mov jle or cmc cmpsl xchg push cmp sub in inc add mov lcall (bad) jl outsl clc sub stos push divb xchg dec xchg push lret in push scas inc lcall xchg sbb pop push inc push jl mov and sahf add ret pop cmc pop incl jb xchg cmpsb push out sbb cmp add movsl lods rolb fadd mov pop ret lcallw and pop lock mov sub adcb cli pop xchg (bad) ss and es xor stc xchg add rcll xchg mov fcmovbe jg xchg outsb mov faddp iret inc or outsb dec push data16 or cltd cmp mov lds stos add ljmp or dec push xor mov aad mov in icebp daa inc mov (bad) cmp aas mov add divb aas loopne ror scas (bad) cs ss xchg push (bad) das cmp imul mov xor cmp push mov cltd xor dec inc mov les sahf (bad) inc stos cmc sbb inc lods pop ja jae pop add bnd ljmp scas data16 push adc dec sbb stos and mov jle out pushf sub (bad) cmp loop adc out jp cmovg (bad) call xchg mov sub cmp mov fisttpl ss out add into into lcall (bad) pop frstor out movsb xorl notb push fnsave jp and add clc push jmp lahf aad mov mov xlat (bad) jb movsb mov push lods out mov jae xchg ds cmp add imulb scas sub aaa mov push loop inc loop cld out inc and fwait stos cwtl mov frstor inc mov out stos icebp loop fcmovnbe sub outsl scas jb sub xlat xchg into sub xchg (bad) (bad) (bad) lcall aad std or imul insb sub pop push add lahf dec push addl faddp clc (bad) jae cli dec xchg mov mov adc (bad) fidiv mov ud2 mov andl pop dec xor dec sub imul mov adc into sbbb xlat mov push mov outsl (bad) cmpsb (bad) mov or sti mov xchg mov sbb sbb mov orl call rorb xor cltd push adc std mov (bad) mov push aam out mov pusha push mov fild lcall dec sbb outsb rcr test fidivl adc mov pop call inc add pop out lods sbb push inc push aam xor push movsl jmp (bad) and push adc loop push push out lahf mov in imul add shlb pop jne lock data16 jg incb xchg mov and js pop fnstsw push and (bad) push sbb addl push icebp out mov (bad) xchg (bad) imul test push push stos rclb push mov push div mov cmpsl pop mov fs outsl sahf cmp addr16 jbe fimul sub xorl cwtl movl jb mov dec adc push dec xor sar in es and dec sbb cld xchg pop mov gs shld in jg loopne push cmp addl xchg cs std fiadd pop jmp pop xchg or (bad) cmc mov ror cbtw mov test add or ret mov sbb xchg mov xchg (bad) xchg fdivrl add push push movsl (bad) ljmp mov mov mov mov ss push (bad) pop arpl stos fbstp mov cli nop adc outsl bound jo daa jp (bad) (bad) (bad) (bad) decl dec inc ja lods repnz (bad) fcomps mov leave push pop adc add xor push dec inc dec mov mov out out mov jp dec popa fwait (bad) push or mov scas outsl cmc fidivl mov jne jp and and mov stos push (bad) out outsl adc pop (bad) xor inc jnp insb push iret mov repnz push push fidivr mov (bad) (bad) mov push gs hlt dec shrb (bad) fdivs pop sub lods call dec decl jp push insl push xor push leave into mov in xchg lock xchg cmp jg ja add push inc push sub out pop cld mov push es inc push ja stos mov scas cmp aas loopne mov cmp pusha iret and xchg hlt mov (bad) (bad) into mov mov outsl out dec sbb int fidivr in ljmp xchg lock lret lcall cwtl fstl test out dec mov outsb push fnsave jg ja adc inc inc iret sub repz cli dec xor pop push xchg data16 cmp out ret add sub (bad) (bad) (bad) out jle ret stos rolb xor mov or in lahf or (bad) incl incl inc scas pop std cmpsb into test and lcall arpl imul add lcall (bad) stos mov movsl add leave and jne jnp (bad) loope iret jg (bad) push out jmp xchg idivb jg loop outsl xor jmp pop push test std loop enter xor loopne (bad) icebp cld subl psubsb (bad) (bad) (bad) (bad) mov sub jmp push pop sbb notl mov adc jmp pop inc jbe jne and inc pop pop mov fs push adc (bad) pop loopne push dec jae adc int shl sarb mov outsb push icebp xchg inc cmp xor fcompl movsl push dec fidivr jb jle push lret xchg test sub mov lcall push add dec inc out aas sub add mov mov (bad) leave or outsl in add (bad) clc mov push inc ret aaa out repz xchg jb js call movsb addr16 addr16 jp or dec push (bad) out ret loop xor cmp (bad) incl xchg fildl cmp xchg lods cmpb mov dec push sub jecxz int push (bad) push stc cmp js (bad) jmp push and mov fcomip mov inc cmp enter les xchg clc sub shrb xor cmp das (bad) stc mov scas or jecxz xor lds js xchg lock imulb mov (bad) out out data16 lret xchg jmp aas adc add mov shll rcrb movsb jl mov shlb cmp jg sbb push add jmp xchg clc pop dec push jns mov or mov dec enter xor out cmpsl aas pop lret imul push inc (bad) out stc loopne mov cli jbe rcll idivl std (bad) (bad) sbb repnz xor ret cmp rorl decl setle xlat sarl sbbl sbb mov scas cs pop push jns dec cli sbb cmc add and add xchg call ret outsl fiadd push sub es sahf (bad) xor stos xchg lahf jl (bad) jae lahf inc xor out add and push mov out mov mov sbb fwait and dec ret ss scas and mov sbb dec out out pushf in outsb push cltd stos and mov movsb in into xchg jg inc ds (bad) jmp out in fsubl mov (bad) push lret xor (bad) jecxz push push sbb xchg mov push mov ret or fxch jecxz data16 and sub cmc ss lahf dec jns xchg push add fs mov and pop out rclb pop dec push xchg add lret xchg push repz mov jbe lcall jg or orl out jg scas cmp rclb xor pop xchg fsubr cmp inc ds mov aas or jns push ja outsb push or aad (bad) ss nop sbb jecxz shlb shlb into xchg xchg pop push xor jg fldenv dec (bad) pop ds std adc jmp add pop mov int3 repnz outsl scas mov cs sbb scas mov (bad) cs jge push aad cmc jnp loopne mov or mov sbb xor iret pmaxub lret outsl sub cmc jecxz loopne pop pop stos mov (bad) in sbb push repnz clc fwait sbb mov out jno sbb push dec and out mov js loopne mov subl out ss ss enter mov xlat fwait insl xchg push es aaa add cs mov and loope inc jle lcall ss push or lods sub sub jo jp movsl push sub imul jg jno sub xchg loopne push or repz jmp xchg pop jnp scas jne cmpsl mov dec decl stos sub mov push pop decb loop in pop hlt into push or inc (bad) push fisubr call fsub inc push push jl and outsl mov dec xlat or (bad) aaa scas repz dec push addr16 inc jnp push loope inc dec mov sub sbb outsb movsb lahf ret xchg pop xchg push sti dec jle popa add (bad) jmp sbb dec test pop test add mov aad addr16 add xor cmpsb (bad) adc xchg shld pop dec (bad) (bad) ljmp sbbb sub pop stc push std imul push stos xorl arpl fildll add push push gs leave das cli (bad) jg sbb rcrl and push add push dec out sbb ret lock jp cwtl mov push and mov in jbe sbb pop push mov mov push or aad aad mov jno ljmp adc int and test in mov jne stos push loopne,pn sahf arpl inc repz sbb or (bad) fidivr xchg xor loope in xlat mov fdiv jo stc inc scas cmp (bad) pop mov jp (bad) mov test (bad) fbld test nop push (bad) cmp loopne push or or std es adc sub incl clc test inc cmp pop pop pop comiss in jg inc stos pop lahf fidiv into notb cltd inc cmp insl mov aas shr cmp lret insb xor xchg mov addl add jmp pop dec jbe inc in xchg in in dec pop clc cmpsb std push jno in push shll inc cmpsb jbe enter add ds out adc and push and adc jmp lcall sahf xlat sbb (bad) fldl aaa fs inc out adc push mov outsl push jg sti sbb stc mov daa cmp lods pop fs std (bad) (bad) incl loope jns ds mov dec mov lahf add hlt or push daa cmp and out rolb add fild stos adc (bad) incl out cmpsl and js mov addr16 clc shll cmc mov adc push cmp adc repnz sbb cmp add xor sub mov ret cld test cmp jno jae sti lcall lret dec mov mov into xor adc and test push dec push bound xchg mov negl mov outsl push fwait jecxz lcall call (bad) dec lahf int3 cwtl lods clc test sbb je push aad dec push push clc rolb mov test inc sbb lcall jae push mov push xor scas fwait sbb add inc stos aaa fs add xchg into out inc daa xchg into and inc aas jbe mov shll mov rclb adc fnstsw scas clc ljmp inc push xor push (bad) movsl sbb stos loopne (bad) scas aaa adc or pushl pop fadds mov (bad) std pop xor lahf cmpsb pop aad insb aam mov ret add jge addr16 (bad) test inc pop (bad) mov rolb xor mov lcall cmp notl movsb aad cmc xor aad imul or mov outsl pop inc leave inc lahf xor (bad) (bad) ljmp insl test add adc frstor movsl in sbb inc cs mov repz ljmp adc add ror stos jnp push jbe jecxz jp inc pop aaa ficoml into mov mov (bad) pop push repnz mov jle fbstp (bad) (bad) (bad) ljmp mov rcrb mov iret push add pop lahf xchg (bad) frstor push and mov test cli pop sub aam adc rep push call (bad) (bad) fstpl push and push pop xchg cmpsb je jns jle xlat divb fistp xor xor inc call add sbb movsl xchg pop jns add push sub ljmp mov mov pushf push addr16 imull sub mov sbb jle mov or push (bad) mov das je aad lods xor fs lea pushl pop (bad) xchg dec xchg pop rorl add xchg pop fist adc xchg inc loop adc and jnp dec add aas addb popf scas push pop push or iret jecxz (bad) mov sbb mov push fucomp addr16 addr16 fwait cmpsb dec fs add aad mov sbb fcoml lahf xor inc enter lock outsw icebp fwait js xlat mov stos add pop xor push add (bad) cli sub xor cmpsb lahf (bad) jg push mov (bad) xor xor ret pop out sbb (bad) cld mov fildl inc jnp xchg jle lock arpl ja inc rcrb loop push test cwtl push dec lea (bad) jg (bad) inc mov sub movsl fldl in cmp jns (bad) (bad) aas cli jp sub scas pop jg out sti (bad) in inc imul stos pop cli psraw dec and dec or (bad) sahf int3 jg,pn push inc dec or inc pop aaa das bound sbb adc loopne stc push sti or (bad) mov pop rolb and fwait xchg pop stos pop or scas mov js fiadd inc or adc mov mov in ret push mov inc xchg add hlt ja add jb pop or (bad) or sarb lods data16 cmp out dec (bad) in push das scas mov cltd sti pushf mov cmc scas cmp outsl inc bound mov add lea nop in cld idivb dec loopne stos pop and scas lods and aad cmpsb inc push push jg pop dec shrl out push pop fisubr loopne sbb aad inc fstpl lcall lcall imul outsl pop mov push data16 cmpsb mov andps outsb fdivs outsb fstl push dec js lods mov or orl add cmp mov sbbb push mov das mov test test adc pusha cld cvtpi2ps lahf mov push clc dec inc pop jnp inc loope in aas cld cmp rcr aaa test out ss int and fsts fstps std addr16 cli and ss clc out add dec cs into insb cmp pop push mov in data16 or xlat (bad) repnz insl dec mov out and js clc fcompl mov jg pop push lahf sti fs rcrl xchg mov fdivr mov andl or add ss scas xchg out mov inc out jl lcall sub pop sub iret test ja test dec or ljmp xchg pop adc lret ret decb insl lea add pop and scas mov mov lahf ficom call pushl rcll xchg adc aaa std sub mov add push loope mov cmp xchg into es sbb xor adc es adc aaa mov outsb and push jg clc mov mov mov mov xlat adc clc loopne mov sub fstl push push cmp push and cmpsb inc jmp sbb mov es xlat pop push and daa sub jle push mov ss xchg lcall mov mulb stos dec or push mov mov xchg ljmp mov cmp aam sti jg ljmp xor pop cld (bad) inc or adc icebp cmpsb xchg jbe clc decl (bad) dec sub push lock sti mov dec iret push push stos incb das fdivrp xchg jb fs dec inc stos xchg mov popa mov adc test test sbb cs scas cmpsb push loope hlt xor das xchg orl fidiv dec hlt lcall dec call popf mov pop aas jle outsl mov xchg ds push push mov loop sbb pop daa xor out loop pop mov mov stc pop jl adc pop mov mov fimul push jns mov mov loope inc pop aaa adc xchg jbe cmp mov dec dec les out mov pop pop push mov cmc mov divb mov arpl int sahf jl ret outsb aas push mov fidiv test cli (bad) xchg ss mov sarb xchg mov shl js xor sub push or cs fild (bad) outsl sahf push pop add mov cmc lcall rcl ss repnz scas int3 outsl dec xchg ljmp mov xchg and or pop pop xor stc rcrl cmp int3 ljmp push mov push jno shll add cli xorl mov stc and movsl clc repnz pop outsl sbb or into push ds sub test or not lock sahf nop mov int3 imull push inc sahf dec inc dec nop lods push jno aad inc xor aad mov cwtl (bad) jl fs js out scas comiss ret test (bad) jmp jg cmpsb (bad) (bad) insl mov (bad) mov decl and shll int3 inc repnz pop cs mov int3 jo addl mov jb bound xor add imul mov xor pushf (bad) jns ret leave xchg or pop addr16 xor jnp xchg rcr or ljmp sbb std das fimull and aad adc push popa add inc aad push shr jno decb fwait push in jmp jmp cli jmp lret movsb mov or (bad) icebp cmc jnp ss xchg into cmc call add das pushf nop and or dec mov mov icebp add (bad) call sarb dec push fsubrs mov es jb push cli repnz push std dec into mov movsl mov push or mov fcmove fimul mov clc cmp adc outsb pop cs add lds and scas cmpsb mov rcl jbe (bad) loopne int ss notl psrld xchg push clc jmp sahf pop inc test add mov (bad) lcall sub repnz add jle out mov ds (bad) hlt mov int sbb dec in pop inc aas lock inc add cltd dec js sub xor push loopne loope jmp nop sub fs movb outsb adc cmp or fiaddl out mov lar test call inc adc pop push es cmp test mov fwait lock lock (bad) stc adcl loope shrb and loope xchg adc xchg adc cmp (bad) jp fld enter mov or addr16 sub xlat jae shll daa testb adc idivb inc cmpsl out push push ss test (bad) ficom mov out (bad) cmp mov nop push or push imul fiaddl aad (bad) ljmp addl stc in inc inc ror into or push test (bad) leave notb or push cld cmp xchg push cmp (bad) cmp mov jae sbb lcall clc incl loopne dec or mov xor push mov add mov aam sub mov mov in mov and mov mov push and mov cmpsl inc aad pop arpl push lret dec dec sarb out add mull adc jmp sarb scas add push pop push xchg icebp and std lods adc cld add roll ss mov out jmp stos add or push adc mov inc stos mov clc or loope fdivp out stc jb loop (bad) ss stos sub pop clc adc pop mov call dec push or ds jae pusha fs jmp out in or mov mov out mov loop incb into sub add loopne ret scas out jmp jle jmp pop test nop rcl out mov inc xchg icebp jg fimul push rcll xchg add repz jg (bad) xlat cmpsb (bad) xchg test and or or xchg push dec out xchg outsl clc mov sbb (bad) fstl pop pop jnp xchg dec sbb cmc adc sub push cmpsb sbb push (bad) mov ss mov push fwait mov jne push or out (bad) and sub fnop mov cmpsb jbe sub inc loope pop cmp xadd jmp icebp pop push fnstcw nop push lods add dec js ret inc mov push pop xlat and jmp push lcall mov push sbb out fsubrp ljmp or mov fidiv mov adc into jg shrl adc inc outsb or cmpsb and sti call and lock scas imul (bad) andb mov ljmp cltd popf push sahf cmpsb data16 outsl mov jg scas divl cld shrb gs inc mov mov sbb dec dec movb add data16 lods pop cli scas inc call sbb cmp outsb loopne and rclb lcall mov jnp nop in ss cmp add dec mov ret mov addr16 inc ret push add es fdivrp test add call mov imul xor jg outsb mov dec mov pop inc sbb xchg leave xchg mov or rcrb and inc sbb lahf xchg daa inc loope xlat push (bad) aam mov mov lods inc cmp mov add sahf data16 push std (bad) mov scas sub rorl lret (bad) jl pop mov mov inc mov fisttp ret out iret and or ja jle rcll mov jp adc cli fistpl dec push out pop push iret jbe cld (bad) adc loopne into mov cmpsb dec das adc jbe pop (bad) ss unpcklps or sbbl shrl inc lcall out add pop push leave (bad) inc (bad) das sar mov es mov fs movsb push ds scas fs fisubr jp push scas xchg scas add repz jle adc out push fimull inc dec test adc negb jle (bad) dec jbe jo pop loope,pn into loop inc (bad) (bad) decl sbb xor cmp fstl push loopne sub cltd mov jo xlat push sti (bad) jb or popl jl iret and push dec cli sub inc sahf out add loop push xchg scas aas xchg icebp (bad) jp daa cs div mov push sahf and shl jb cmp sub aad jnp sub (bad) mov sbb push bswap clc divb xchg sahf dec dec jecxz mov jbe aad push push mov cmp sti (bad) lahf cmpsb std testl ljmp into dec cld dec add or (bad) clc push sub (bad) cld shld addb int3 inc test mov loop cwtl ja repz mov daa and push jecxz mov push sbb mov outsl xchg cmp xor lahf mov dec sbbl and pop lock js cltd sbb fcoml imul or iret mov jb call loopne ds iret mov es push mov gs pushl sub sbb leave sub cmp scas call lcall outsb loopne loopne pop cld cli outsl xor push mov push repz (bad) rolb movsl jbe mov aad inc mov push jl xor dec (bad) jbe mov mov pop mov shrb cmc es cmc jnp sbb add inc pop and pop lods pop rcrl jl pop and fs pop in or daa (bad) repnz ljmp gs sub cmpl cwtl add pop (bad) std push mov (bad) invd fdivl sub popf inc pusha test outsl inc sub jno pop mov popa cltd inc sbb push adc cltd ja add (bad) jnp dec (bad) push (bad) add push adc or decl inc and jle lcall push or fild aam (bad) mul or dec fidivl adc cmp into jnp gs cmp clc (bad) (bad) jg mov jbe push ret mov (bad) ficom idiv xor femms add loopne ss xchg test dec clc push pop fidivr mov and mov ja pmullw fildll insl test jp es xlat xchg scas clc outsl xlat addr16 sahf push pop pop ret aad lcall cli add dec push aam add adc ret mull sahf ss pop fldcw mov into and cs mov jg (bad) jbe mov enter push negb dec push or hlt or mov xorb inc (bad) iret pop xchg cmp outsl movsl insl sbbl push scas inc call cwtl (bad) scas pop into dec inc fstpl mov out data16 sbb incl inc push (bad) xchg (bad) cli and add add loopne pop push outsb cli cmp js adc ljmp cld lods push lds jmp jae mov xlat push and mov lahf push mov pushf lret dec mov mov icebp push addb xor xor jb,pt inc hlt cmp inc in js das data16 push (bad) sarl es xlat pop or lea (bad) sti xchg dec scas lea cld dec sub inc cmovbe mov and clc test fistpll inc xchg push mov (bad) (bad) xor popa push std notl xorps or pop (bad) jmp (bad) (bad) mov out push fwait pop into jp sbb mov aaa test sahf sub in sub fimul das decb (bad) lcall sub push cmp mov fldt xchg sbb push ret mov cmp or scas and pop subl xchg sahf push ljmp pusha lea es dec mov and test mov push xor push fisttp ja fbstp and cwtl stos xorl pushf (bad) call mov loop cmpsl cmp mov hlt call mov dec lcall cmpsb inc call add push movsl xchg sub (bad) cmc xor bound dec jl int3 lods test add (bad) jg ljmp mov dec sbb scas (bad) pop outsl lcall xlat fwait sub jo lods sub xchg (bad) outsl lods xchg dec (bad) rcrl mov mov movsl subl mov and inc push (bad) xchg xor mov std adc test (bad) pop add das add add mov cld bound xchg mov add cmpsb imul cli rorl popf add (bad) jo or push aas rcrl xchg stos sub add (bad) jnp scas bnd sub or jp jle mov sti push dec or inc pop bound sub mov mov clc cmp ds out jb xchg inc incl jp jb out aas xchg sbb cli push or or dec or cmc add jnp call insb push movsb inc mov daa es loope aas add sbb icebp pop (bad) fildll push mov adc lahf (bad) ja add sbb (bad) std orl ss out push clc movsb xor imul rep out inc pop clc and (bad) (bad) into dec mov (bad) xchg mov repnz sbb test push sbb adc xor push sub das push add scas aaa jae je and mov cld add call pop sub lods test xchg shrb ret daa ds mov sti out pop pop sti fist push ss mov ljmp pop adc and cmc push test ja push sub aad addl fs or adc or dec ficompl mov or push push testl sub sub mov add inc xorl dec add adc pop jle sbb sbb data16 dec les mov es mov pop decl cmp pop push inc (bad) icebp or sbb js jnp and add push icebp (bad) iret or or fwait cli clc jns mov inc js add lret icebp scas add cmpsb xor inc push xchg add dec mov loope inc pop bound dec in inc dec mov push push jae loopne inc in leave cmc mov outsb (bad) cmp out cli into adc aaa shr and push (bad) fdivp push or pop std aas mov aaa xor ret mov push frstor clc pop (bad) jp inc push scas out sbb add cmc push aas aad inc adc and (bad) mov out cmp inc inc dec test (bad) mov mov cmpb das jp pop sbb xchg mov insb jo xchg mov sub cmpsb leave dec inc and cmp push scas push les jbe xorl fnstsw ja je cltd stos inc stc aas sarb pop mov cmpsl sub push adc es outsl out les push into (bad) rorb sub sti sahf inc sub pop loopne cwtl js (bad) scas cmc fucomi push cmc (bad) cmc pop mov dec mov lods sub mov fs adc sub ret mov stc lcall xchg mov pop (bad) loopne pop icebp add out pop mov mov dec rol (bad) jbe lahf in mov pop sbb lret sub mov cmpsb adc jae daa scas stos loop mov loopne (bad) arpl xchg das cmp lock xchg push imulb push or xchg into mov xorb inc (bad) hlt xor outsl xlat pop adc test mov pop clc clc and pop cli sbb mov jmp ljmp decl jno jmp add outsl pop sub pop adc out pop mov (bad) fsts mov pusha xor gs (bad) xchg pop or mov scas jne mov sub nop loop mov icebp (bad) sbb fimul idivb jne mov ror cli push mov rcll mov aad jmp dec fucomip fwait test and mov (bad) lea or (bad) (bad) (bad) jnp inc inc pop sub push loop jne cmpsb outsl fs push or mov mov xchg pop clc or xor out inc cmpl loopne mov mov orl push pop shl adc aad and dec (bad) cld incl sub imul out aas or add push inc fildl icebp ljmp pop cmpsb adc lret outsl sahf push inc imul data16 push cmp sahf ja xchg adc inc aad push cmp loop mov pop ret and (bad) inc cli adc outsb jnp cmpsb lea cmp andl cmp cmovg xchg mov test idiv call jmp loope pmullw cmpsb pop into lock cmp push (bad) and into popf test leave lods push jle lahf jne inc xor xor scas jg aad inc jnp mov fwait (bad) sub sahf js aad fs xor mov stos jo jnp sub in add iret sahf (bad) jbe (bad) push inc leave cmp mov ret fmuls add lods push lret pop lcall lds cltd rep popa dec js popf decl ds data16 xchg (bad) add in mov pop sbb fnstcw (bad) stos add cmpb dec pop lods jmp add decl cmp ret cli (bad) cmpsb jmp xor loop icebp jg aad xchg jl movsb pop adc cs and push mov dec or dec xor inc add push cld cmpsb hlt out lret (bad) pop jp std cmp (bad) rclb roll add xchg jg or sbb dec push hlt add iret into mov mov scas mov add mov xchg test out or dec leave js iret add imul mov ss sbb mov xchg dec std cmp (bad) mov das aam mov (bad) cmp push dec scas in sar pop add xchg pusha sub aaa push dec inc push pop std loop push sub xchg (bad) mov pop xchg inc iret popa pcmpeqd mov add add jle outsl scas pushf mov sub xchg faddl dec mov lock xlat add fstpt (bad) cmpsb lods pop adc ja cld (bad) in dec nop test rcrl mov jnp,pn inc loopne lods cmp mov mov jg pop lret f2xm1 ds mov aas (bad) xor sub ja xchg mov insl movsl pop sahf xor mov scas mov out (bad) (bad) in sub add or push xchg cmp inc pop into ss pop jp jle fldt inc js (bad) (bad) icebp in decl fistpll pop stos out stos pop es outsl push fiaddl xor (bad) fisttp add or and jmp mov lods cmp insb fucomip pop xor (bad) ds or decl jg call xor lods fstl xchg loop adc add xlat add add sbb push insl pushf push or outsl incw stos pop mov rorb or fidivr ret mov les and (bad) (bad) pushl in aad push frstor mov movsl lock push and ljmp (bad) xor mov dec push loopne push inc push mov hlt int stc scas fwait icebp leave or push push (bad) (bad) decl test add fcoml pop sub xchg add or call jnp inc inc push sub push bound and adc lret cld incl dec jle adc xor fbld stos cmc xor fxch cli pop fistp popa jl arpl outsl xchg fcomps push jbe (bad) mov push inc ljmp sub js lods addl mov cli out dec pop or mov (bad) push bound pop add sbb aaa std inc sti push icebp test mov es jecxz,pn add call or xchg enter mov push jbe pop and pop jo mov outsl inc xchg enter in imul jge xor fdivs das or (bad) call stos in (bad) xchg insl jbe and push and movsb out jle (bad) fistpll jo pop popf mov adc data16 inc imul data16 (bad) (bad) out outsl in jno adc mov inc mov jmp mov subl push loopne mov decl into lods (bad) aas jg jbe mov pop (bad) (bad) decl es mov mov sti pop pop push push mov js and dec jp jns rol xchg outsl sub lcall sete std inc mov xlat adc out std and lods (bad) cmpl (bad) daa pop pop xchg shlb daa cmpsl cld (bad) jg push xchg adc jp push fbstp cmpsl and (bad) aaa aas and lods xorb xchg pop push (bad) outsl aam mov mov fist jnp lods push xchg add jge aas subb jl fldl sub mov ret push insl lahf mov jb pop xchg mov push sahf and movsl jg push lcall and push aas push cmc repnz lock ss cmp add aaa test or js sbb sub sbb push pop sbb xor ds and and pop add mov sub mov scas mov call adc push mov mov adc out sub loop mov in xchg inc cmp sbb jb mov sbb icebp mov mov clc movsb cmc dec dec or add icebp popf stos jbe push icebp mov lock cltd push pop out xor test lea cli and sbb inc call push jbe lret sbb in decl and sub xchg daa (bad) mov pushf testb cmp aad or insl add std stc xchg sbb jnp pop or or xchg insl mov pop xchg (bad) jb push push jle add es les inc xor dec aas stos pop pop lods mov cmc xor push andb jb (bad) ffreep mov cmc ljmp mov out fcoml sbb pop clc mov test add rcll push inc fucomp arpl xor dec mov repz inc sbb clc pop xor scas push es cwtl das add dec push sahf or pushf jbe xorb dec jp mov lods ja or aam aam mov lea push or rcrl inc add (bad) mov cmp inc xchg jne (bad) pushl in (bad) decb push add rcrb es and push frstor dec push fidiv xchg stos push and or pop cmp cmpsl add mov inc cmp or out jle inc lock cs mov test aam xor push inc (bad) out rorb test (bad) pusha adc cmp dec cli fisttp ficompl ret fbld in inc add jle,pn xchg repz jnp push arpl lcall add add scas rolb lods mov jge (bad) mov xchg imul je push shrl test in data16 clc sub mov push pop xchg pop jmp icebp in ror sbbl outsb push push ja nop dec (bad) rorl pop in shrb (bad) push jg clc cs pop outsl clc cmp cmp mov fidiv add movsb rolb inc mov (bad) call cmpsb (bad) jne fcompl and sahf ffreep inc aas jbe xor fsubrl or fdivp pop push dec pop js xchg xor mov stc cmp in enter pop mov icebp das inc inc fcmovnu xchg jnp pop aaa or push int3 mov out ret iret js (bad) addr16 pop and nop inc pop add aam cli sbb loopne js pop bound icebp push iret out mov dec jl pop insl xchg dec add xor (bad) outsl or adc pop outsb mov outsl mov pop push add leave push ds frstor add addr16 aad enter aaa or xlat jnp xadd rolb pusha shrl sti add inc lock test xor fisttp js fstl out leave push inc daa lock loop push test push inc jg mov dec xor dec xlat cli inc add es add inc pop (bad) cmp idivb or push loope dec sub or popf fiadd aad xchg out xchg fstpl pop sahf divb jno sub cmp pop shrl outsl (bad) notb mov cs jo xchg xchg push push into scas xchg insb adc data16 add das sbb iret stc loop mov insl movsl push sti stos push (bad) cltd stos mov pop sbb gs out std and add sub jle xchg xchg (bad) cmp mov mov xchg cli jmp insl xchg rcll test in sahf mov outsl mov jmp cmpsl aaa cmp push pmaxub out std push loope dec das clc (bad) jb add enter loop cwtl inc js scas or test mov jb cli aas mov es ds sbbl lret cwtl lahf (bad) in out mov mov adc fmull or adc push dec scas je sub outsl rolb jle mov sbb xchg fnstcw push mov mov fimul out cmp daa cli adc clc sub (bad) sbb push adc mov mov insb mov ds pop add (bad) dec pop xchg pop jo push push outsl imul xor mov loopne xchg jle sbb (bad) icebp call adc mov mov or mov cmp (bad) mov cmp das stos or mov and aas scas add mov mov mov (bad) mov sub (bad) mull xchg and lret sub pop cmp fist add cli mov mov sub push mov jp mov loop (bad) mov into test (bad) push or (bad) call add loop scas out faddl loop fcoms (bad) imul jnp add fdivrs test sbb mov stos and xchg inc mov (bad) push xor sbb outsl mov dec push sub dec lea in add cmpsb add (bad) sub mov cmp jg daa (bad) aaa cli ds add push xchg mov push repnz push inc add roll sub ljmp xchg repz mov inc jnp pmuludq sbb and out stos cltd mov pop jp (bad) pop mov (bad) (bad) pushl and pop lcall adc mov fmuls mov xchg sub or xor lock shr into pop sti sbb je xchg jp dec cmp lret ret xor outsl mov (bad) int3 imul xchg rorl add mov neg stos jp inc xchg outsl adc sub incl inc repz xbegin pop rcrl dec push arpl pushw mov sub inc pop mov add lods pop add mov cli out call mov add sub sub xchg push xchg mov push hlt mov and jb and ficomp popa lds jg cmp pop mov mull xor xchg inc adcl es jb in xor icebp fildl fisubl aad xchg dec das rcrb push rol stos mov (bad) decl or push movq push movsl and leave add (bad) incl (bad) pop or xor std fiaddl xstore-rng cmpsl test cmc outsb bound push cs dec (bad) ljmp test js push xlat xchg add or mov jl sbb ss pop (bad) pushl cld popf movsb push jns adcl outsl (bad) mov mov insb insl pop loope xor dec cs and mov mov push loopne iret mov pusha repnz sbb icebp orb clc das push push js push int xchg xorl xchg pushf pop mov (bad) jae js mov dec into push (bad) lea pop es test stc jl ret mov push rorb or cld xor xchg pop fmull adc push daa dec cmp fnop cli push iret outsl cmc (bad) repz push pop lock xlat inc test add stos pop pop push decb clc jg arpl jl push push lea pop and or push scas fwait xchg data16 add or xchg inc jb (bad) js loopne adc or and xchg (bad) scas out ljmp cld push (bad) shrl out in cli mov pop jmp in lcall or sbb in ss fisttpl call aad stos std cmp decb stc loope pop push mov cmp add pop add movsb popl push push orb mov mov mov in lods mov xchg xchg out test ljmp stos mov adc insb jae jg jno loop and sti dec adc jbe sub es mov (bad) enter stos xchg xlat repnz jmp loope test push popa scas push jb inc rolb push rcll clc and clc fcompl dec inc xchg ja jle mov and mov sub in jp jle mov and jle pop ret cmpsb cmp adc add fbld dec outsb movsb sbb sbb out ret jmp or rcrl fwait ret jl das ret inc xor xlat sub gs and lods (bad) pop or xchg dec js push mov outsl loop dec push jnp inc push ss xchg ja xchg out jne cmp scas mov data16 ljmp sbb lods mov dec pop add mov mov jb mov xchg sbb mov aam (bad) dec xor cltd dec (bad) xor xchg jecxz clc fldl jp push add push (bad) popl rolb pop sahf xchg cli paddb ljmp out fidivrl js jl add test arpl das jno and dec or scas jle jmp push ret (bad) outsl mov bound aaa add add push add cmp rolb ja cli inc push mov aad outsb jg mov inc ret leave lods and es (bad) xor adc push and int pop mov inc mov les pop fimul mov pop rclb das xor (bad) out mov fbstp lods mov mov shll cmpsb inc inc clc mov pop inc mov mov inc ret jle fstl rcrl pop cmpsb jmp add dec mov jnp push ficomp dec sub hlt sbb mov adc cs and pop adc pop aas rcrl pop ds jg lret jbe xor sub out cwtl aaa and rcr icebp ja gs lods sbbb pop add mov fmull mov repz pop ja mov test push pop and add (bad) sub (bad) shrb xchg dec adc movsbl mov cwtl sti mov add out cli sar lea mov fisubr popf inc js loopne (bad) push inc lock sbb imul icebp pop inc in jbe pop dec jb or stos sub push movl inc push (bad) cmp aaa loope in popf nop shlb ret xchg call loopne mov xor add cmp mov wbinvd add std push dec rorl xchg cmp mov and jecxz dec lcall cmp mov fs in popa mov jle movsl cs cld loop aaa testl cmp testb outsl adc fiadd cmp (bad) xchg out es dec pop es inc in lea movzbl es jp sbb scas (bad) lahf out lahf je mov pop jg xlat sbb push mov push cmpsb cld scas xlat mov adc sub mov push out xchg test push fcompl inc sahf cmpsb fldl js fwait ss shrb out and add xchg inc push mov inc outsb iret daa jb xchg outsl xchg cli test jb fldenv fist mov jmp inc sbb call pop mov and sub dec xchg push pop jne cld in mov loop outsl loope sbb ret adc and mov sub aas int mov sbb lahf push sub inc in or ret mov push cmp jo inc cmpsb cli outsl (bad) jge loop cmp call cmp xchg scas adcl lcall aad fldt repnz popf pop dec es fs hlt outsb mov mov mov cmp and fidivl shlb out (bad) xchg push or or nop jle mov xchg mov mov mov dec add aaa ret push pop or pop cmp pop push cltd rcrl addb scas out repz mov xchg sub ds (bad) mov data16 inc cwtl pop orb es cmpsb fldcw (bad) mov cmpsb into dec mov das adc and bound xchg (bad) pop sbb or addl out out pop je ret push pop ficomp mov sar lea cmp ja and cmpps add inc clc insl cmpsb cmp cmc mov sahf imul or fdivr fwait or dec cmpsb mov push jle xchg ret dec inc xchg aam inc mov out jecxz cmp pop das dec cmp in mov mov (bad) je arpl add push dec inc clc jmp jl (bad) idiv dec fucomi inc xchg loope ret repz or push shr pop mov jae mov test faddl mov mov ljmp push in jl fistl mov lock xchg call adc popa xchg jo rclb sbb xorl xchg nop xor or std pop mov xchg jo jae sahf xlat inc xlat mov xchg out or xchg pushf inc jb fs or (bad) pushl in dec (bad) cmpsb xlat adc lea aam (bad) mov sbb inc inc or cli add cli outsl loop jmp inc (bad) or push add mov or pop insb inc cli and sub icebp pop adc and sahf cmc pop push dec ds inc call (bad) mov push arpl movsl add jmp and xchg push mov and or mov adc mov mov inc push (bad) leave mov pop nop xor push in ret dec jb test mov (bad) addr16 cltd mov sbb (bad) shlb movsl enter aaa or xlat insb jnp mov cmp ret push (bad) jb lea sbb cld mov push or mov inc iret jp aaa cmp ficomp scas push into mov push and es je add pop mov adc imul xchg scas dec jno lahf (bad) out xchg mov lahf fbld ret inc mov call push jnp movsb dec pop mov mov mov lea andb cld sub dec ss out and insl mov jbe bswap jbe xchg bound and (bad) out adc mov ret aaa dec mov add mov outsl pushf insb push sbb lods ds mov mov out push mov pop or loopne push mov popa sahf test aaa jbe lods out mov ja sub movsb scas jnp jmp ljmp sar xchg xchg dec test fiadd incl pop icebp cmp dec sub arpl lret inc cmpsl jnp decl call sbb cld pop push and push mov push xor jo sub insl sub in sarl sub xor incl frstor cmpb mov shlb ret cs jnp mov int3 fs pusha inc fucom negb pop ljmp push add out dec xchg and ss test js loop daa xor push pop pop adc mov lret jecxz jle jg jo cmp and cmpsl jne mov movsl (bad) les aam stos jns cmp insl stos or cld mov sub jae cltd jno pop cmp mov lock ja fimul sub std dec sub js icebp pop ljmp ljmp cli add cwtl data16 mov testb or fisubrl dec ficoml test inc jecxz jb jno jl lods pop jle adc and pop fucomi xchg push icebp fs fsubs loop in push mov test or out cmpsb mov adc ret mov sbb lret lods dec push repz shr mov lahf dec andl xlat sahf aad fiadd scas (bad) pushl pop loop xchg sbb in mulb loop pop lcall (bad) std inc sub (bad) (bad) jno cmp pop pop mov xchg lcall dec out (bad) aam icebp lcall stos xchg sub sub push xor ret je loope pop test sub fsubl mov dec push inc push (bad) push push jmp inc and and and mov movsb mov out leave in fisttp push sbb pop test loope sbb push push popa (bad) repnz jp and inc cmp out cwtl push std (bad) out xchg push mov xsave sbb decl push cli les xlat movsb frstor pop scas aaa adc push bound stc push xchg mov inc sub pop lods dec lcall mov repnz mov jle loopne and jb xchg (bad) mov dec rol mov or inc std inc lcall inc (bad) (bad) stc call das (bad) fildl and mov adc lea xchg xor fcmovb imul repz aam and sbb out xchg mov add pop aaa push pop lock jp push add ss cmp push outsb push adc sbb xchg scas pop bound dec sahf pop jp mov xchg sub cld (bad) xlat std push mov ljmp or pop and test sbb aas lock and icebp test hlt (bad) mov dec jge xlat arpl or pop lods leave add loopne push les rorb push dec cmp aad dec inc stos arpl adc (bad) jg xchg push xchg and sti push inc mov xlat sbb loopne dec and mov jg inc ret negb inc out lahf and bound push jae adc sbb mov xor xchg test push rcr add dec stc cmp imul js pop testl nop ffree mov jle cmp sub int imull wbinvd add ja clc clc cwtl lret scas xchg mov dec mov xchg mov xor inc and push and push push jp and push push jle scas fildl clc fistp push rolb mov std daa or (bad) outsl nop push mov jnp jp ret sub pop mov xor jnp popa movsl (bad) adc insl xchg into loopne cmp gs fidivr mov rorb es cmp test sbb lds in aad pop aaa pop fldlg2 inc or cld and insl mov cmc sbb mov add sbb into xchg pop push pmaddwd std pop xchg sbb fstpl and repz mov add lcall inc dec ja xor (bad) dec jg ss stos or clc out icebp rorb pop rorb jne fnsave xlat ss push or std push mov xchg push xorl sbb cmpsb das aaa std sub or and (bad) (bad) js shr pop jmp jb,pn outsb inc stos jno fs pop movsl jmp xchg push push mov jbe sub and mov stos stos xor sar adc push outsl fiadd fisub neg pop jmp (bad) call fldcw (bad) ds lcall sbb cmp or push pop shll add sub push rol xor cmp jl loop pop xchg dec or adc dec outsb jae ret mov adc adc sbb or cmpb leave in mov or stos push ret sahf loop xlat mov and popf sbb inc (bad) insb and adc mov roll mov enter or and xrelease fwait sti add push push add in ja push or (bad) cmp pop xchg (bad) cmp test and sbb and fstpl mov idiv push push sbb mov roll push adc jecxz scas pop fistp dec mov stos test dec or ret sbb jns pushl fbld mov pushf iret data16 cltd ja je and push dec adc incb and aas cmc (bad) scas ss mov push lea mov imul inc xchg jb inc cs dec push stos push add loop inc (bad) sbb jne sbb jp loop jnp dec fidivl stos (bad) aas push mov fbstp cmpsb in xor push xchg inc sbb sbb mov ret (bad) lods fwait add lcall cmp xlat cmp cmpsb dec dec js sti fnstsw ret mov movsb adc push add mov mov sbb add pop mov (bad) pop push mov lock push ret jg stos mov aad dec (bad) out iret lahf adc push fistpll sahf sub (bad) jg jnp jae push fld iret pop cli sub cs cmpsb push sub stos fidivrl out stos jne jmp das stos or jge cmp outsb sahf ljmp js dec mov pop dec sbb fimul ds push mul fnop sbbl pop cltd mov data16 ret sbb and es decb jle sahf sahf add orl jbe imul inc pop idiv incl mov outsl out arpl add je inc jbe push jp test add std push sahf sti cmp or jmp or (bad) xor lods fildl std mov push fimul inc or ffreep pushl xchg push fs mov cli cmp adc add push mov xor bnd xlat and lret jecxz movsb adc push push or sarl push es mov sbb mov adc pop clc cmpsb es (bad) negl cli jle ja ret sbb clc jns ja stos dec jmp int lfs loopne ja aas (bad) pop xor mov sbb cld (bad) ljmp adc inc arpl xchg adc inc (bad) jmp mov pop cltd mov sahf imul dec dec jae aaa std outsl fildll faddl pushf outsl inc stos dec sub cmp inc mov aaa cmp mov pushf cmp xor pop mov cli (bad) arpl mov pop rcr inc add jo rcll cmpsb push xor and jmp aad decb push ds xchg stos add ds add aas pop into mov xchg or push in icebp xlat inc add xchg xchg ljmp mov or (bad) jmp cmpsb fucom jg lea xor in cli pop sub push mov cli mov add mov lret movb (bad) adcl mov aad and jmp pop insb aaa scas inc add lahf and push adc jle loopne mov inc leave test idiv mov scas push cmc push xchg xchg ljmp popa cltd mov test xchg (bad) cld inc cld sysret cld loopne addr16 lcall fisttp or inc mov (bad) cmp jg cmp (bad) imul pop pop push int sub inc mov inc push rorl dec inc sbb xchg push ret sahf mov scas cmp xchg inc mov repnz mov xchg dec xchg xor jg test push xchg fs ljmp mov shr (bad) mov add das and inc fiadd aas push xor add pop cld pop jmp push or or loopne leave lea bound decl loopne pop mov sbb test jg pop dec mov mov push das addr16 ja push aaa test pusha push xor js mov or lods fild mov in ss dec pop lods es cli mov jmp mov xchg adc movsl mov test mov decb aaa mov lock leave cmp mov jle xchg in mov in repnz sub pop add push sbb aaa jl shrl fisttpl or stos cli and cmpl jae and and sub orl push mov popa faddl push xor push int ja lahf xor mov push add sbbl push add les out mov nop (bad) mov sbb and mov outsl adc pop ljmp cmp and add push xchg in jae popa push sub lea outsl pop xchg outsl sbb push mov rol xor (bad) enter fiadd lods and gs pop lock rcll stos cmp mov leave sti mov push cltd stos in (bad) pop push adc nop mov xchg shrb insb mov out mov jbe (bad) sbb dec outsl and or jg in out les jg mov (bad) aas pop push pop loop sbb test sbb rclb orb out js ja clc fildll iret sahf and js daa push add mov sub adc (bad) repnz cs cmp cltd test mov (bad) xchg inc data16 arpl cmpl add push in push xor pop cmp fisub test daa aam mov data16 rorl lock push push lahf push sub push movb inc cs icebp mov js jae (bad) mov sub (bad) repz imul push into scas mov or orb pop jecxz add mov (bad) (bad) sub aam ret dec shl enter push stos sti scas dec cli sub stos add add fs cmc aas mov shl dec mov add rclb test jo sub out (bad) inc add sub sbb cmc neg daa lock inc push out mov mov fsubrl cmp sahf xchg xlat add inc arpl jecxz mov mov loope leave inc insl mov add jge jmp rcrl pushf or mov lods jle push push sti stc aaa pop or sti xor out mov or lods not or int3 (bad) xor or dec aaa adc push sahf stos push mov ss std add push inc xchg add (bad) out xchg push ljmp inc notl add stos fs fcompl inc clc rcll mov or std fsubr cli and xlat (bad) mov cmpsl hlt sar mov decb movsb decl inc call cltd jl test push daa cmp adc push jle scas mov cli and loop add inc andl mov pop ficoml rcrl cmc std ret jae int (bad) mov arpl addr16 cli es in cwtl mov inc mov or push or out jne cmp push lods jnp xchg inc mov ja add pop jno push dec sti push pop int3 into into cmp cs scas add stos aad ss inc cmp and insl lods fist dec push loopne cmp xor (bad) sbb dec cs loop add scas xor xchg lods mov pop inc mov push mov jb mov pusha andl js add mov dec (bad) (bad) fildll rcl hlt sub xchg pop aam sti push sbb inc inc sub fwait mov inc outsl mov mov xor ljmp dec (bad) jmp lea sbbb movsb dec and cmp loopne pop adc add inc call add push unpcklps push sbb out outsb ss inc jno (bad) and jl add stos push out icebp sub sbb add cmc dec push lods repz add jno mov repz mov add ds js or gs sbb adc das shll enter vmulss push leave jg dec scas mov ficomp xchg dec add rcll pop sub flds imul (bad) mov add lea cwtl push dec cmc ret arpl xchg ja ret das imul addr16 mov inc cmc in cmp (bad) jbe or xchg push sbb sub lock sbb xchg push mov cs pop in leave scas scas push hlt cmp push fbld fisub inc (bad) outsl mov dec insb mov lds jae std xchg xor out mov jbe inc sub stos daa add mov sbb fisttpll xchg out mov into cld incl push sbb inc leave mov push test mov push into xorl push dec and or push or or inc jb or sbb push fcmove xor ljmp stos loop sub fwait jmp jno push pushf mov outsb cmp mov popa loope xor sub notb scas rcr xchg jp rcrl or dec mov and push ret out and xchg out movsb mov and push (bad) lods sar xor dec sub ja nop lods adcl aam ss and sahf mov (bad) push jb out cmpsb add jbe lret mov push pop pushf insb cmp xchg push pop dec decb out xor push (bad) jae sub mov cmp fsubrl jp adc ljmp ljmp insl xchg mov inc mov sub aam outsb enter enter adc dec divb (bad) in push incl push addr16 fisubr fild add jbe dec icebp shll xchg push push out imul add or push ljmp js insl inc xlat pop pushf push stos jg jg addr16 cs repnz decl mov sahf jbe push mov fucomp arpl mov and mull lret orb jl lods movl (bad) in das and jmp cmpsb hlt mov jp jg xor (bad) (bad) (bad) jns or cli jmp std add push std out sbb call xor test cmc out ret dec mov sub jbe pop daa inc in movsb pop add ret outsl test stos stos dec std push cmpsb idivb pop adc cltd movb in (bad) ja push pop cmp push or cmp ljmp arpl repnz add jle or sbb dec aas mulb (bad) sub je push cmp out adc pop mov jge inc dec (bad) jg hlt in mov pop data16 and pop or mov push cmp movsb js (bad) ljmp add lea mov arpl xor or and call push mov dec shrb inc inc loopne jo jmp fidivr xlat pop ljmp xor std loopne mov dec rclb mov orb in lods (bad) int dec movsl std or dec aas daa fldl lret jne pcmpeqd adc sarb add push jno sbbl jno and (bad) sub cs xchg cli and sbb imul ficom cltd repz add ret jecxz push push push lret mov dec repnz mov pop mov cmp mov cwtl pop pop jb repz (bad) out adc outsb cld andl or stc cmp inc sbb mov push push ljmp xchg in or push in mov dec fstps lahf cld mov out inc loope jbe push add rolb les outsl mov imul arpl out xchg sbb lods xorw repz test (bad) jg in push loope imul inc mov sbb xchg push push loopne jnp xlat mov mov lock (bad) outsl or sub jbe mov repz inc jecxz das (bad) mov dec loopne popa mov dec dec sti push fisttpl inc es sub call test push in ss ret scas add mov outsl inc es cmpsb add xchg jo mov sub dec push adc push mov and clc inc push mov pop loop daa mov aad dec call pop fwait mov data16 cmc int3 sbbb call dec jl aas cmp mov loop sti push pop shlb add push mov daa mov push dec sub push push push jecxz loop mov out insb fsubl outsb (bad) clc stos decl xchg sar jns es rcll cli pop inc push scas push and jne (bad) dec adc push gs in ret or rcrl add (bad) ja pop dec inc pop aas xor mov pop and fmull jno mov push pop mov lods jmp cs dec xor mov (bad) xchg adc xchg data16 inc mov xor push gs stos xlat mov popf in or jl imul sub outsl xchg jno das mov icebp jg mov sahf or fimull pop sbb jns inc in sbb int fs pusha sbb mov inc xabort push inc sub mov arpl dec pop push das and outsl ss test xchg adc push insb xlat into xchg les imul (bad) mov xchg or inc pop out lock dec push sarl stos pop sahf jp mov into push xchg popa test cmc push sbb loopne (bad) jg movsb mov fwait mov sbb sbb push pop push inc jbe test sub mov sbb mov or push iret pop mov les jmp loop inc out es mov inc pop inc out stos xor fnstcw aad scas xchg jbe outsl scas sbb adc or dec sbb or sub or roll lods xor dec xchg push fadd cs fucomip mov or addb jne pop sahf lret jg or xchg loop adc ljmp je loop xor pop insl jg aaa jne lahf push sbb jmp cmp loop dec out mov decl (bad) clc cmp cmp lds and shr sahf push out lock scas jle mov out xor mov (bad) (bad) aas push mov idiv push dec ror push (bad) adc mov mov imul push adc incl aaa add loopne scas lea sbb imul call jg shrl lahf jmp mov sbb insb and data16 stos mov pop jp jnp adc ret sbb push sbb stos push add stos and (bad) into test xchg jne out adc sbb cwtl icebp fild loopne add arpl sbb in mov xlat (bad) addr16 sti pusha dec xchg jle ss ss xchg mov ljmp or push cld pop dec add sub inc mov and or idiv daa lahf cmp (bad) aas mov xchg push sub mov das popf jb xor inc xchg or mov or or scas cmp jg clc outsb scas invd in lret xchg (bad) jp adc hlt cmpsb jmp testb jnp sbb inc mov push dec cs mov jo cli pop loope and mov scas les fyl2x addr16 push aad imul nop clc scas push (bad) or push lock out hlt hlt dec enter std addl jb gs add or sub dec lret mov mov cmp mov add aad ret imul icebp mov fmulp push xor pop adc xchg das fwait jbe adc ret jbe cmp xchg jle cmpsl loop std pop (bad) rcl fistpl pop and xor setle push orb pop (bad) out xchg rolb push fistpl push xchg ret push mov dec scas scas mov jnp mov jl in dec addr16 shr scas push sub inc jmp cmpsb comiss dec cmpb jg mov das adc pusha mov jg les loopne das mov sahf adc lret xchg scas test sub mov fdivrp sahf cli dec jg or add pop mov dec out test mov inc std inc or jecxz outsl mov or pop mov loopne mov addl pop push cli pop dec push push or xor inc bound data16 push jmp outsl adc inc pop bound lock incb call (bad) pop sub inc out push mov mov lcall mov divb (bad) mov lock inc cmp jle lock fstl pop pop out mov dec sbb xor pop lods xor stc cmp xchg or jb or lahf xchg sub push pop xchg jecxz out inc fsubs inc (bad) inc xchg jns data16 add or push repz and unpcklps add loop femms inc add xor leave outsb ja ja mov es jmp call loop stos pop aas es fs lock sub jle and fisubr sbb imul (bad) jg sbb mov push fbld mov cmp push faddl lcall mov les adc ror test call (bad) cli jo (bad) repnz jmp clc js sbb push shr cmpsb mov pop pushf push add or (bad) inc loope test (bad) dec cmp jp fist daa enter mov clc dec scas ss add nop push xchg std ret into mov std add lret mov add sahf dec mov aaa lret sub mov jg leave in and cmp mov loop push lcall mov (bad) and dec (bad) mov pop and arpl fldcw jb jg fnstsw inc xchg pop aas xor add ss sub test aas test pop dec divb sub ret repz sub outsl xchg fisubl adc cltd out xchg out add cmpb aad cli rorb repnz (bad) push mov rorb out push inc sbb bound cmp cmp (bad) ljmp push add cmp icebp test (bad) es sbb loopne (bad) push bound push ds xor xor repz adc addr16 fidivrl sbb pop pop push pop into pop int push inc mov rcrb ljmpw push add ss pop inc mov lcall popa or mov mov mov cmp out adc loopne mov fnop jge lods testl jmp or mov xchg js mov or insb fimull push cmp ds lret shl cmp sbb sub int3 cmpsl int cs jle das js ret dec pop (bad) call imul mov pop ret dec cmp mov cmp or jno mov add shll in mov scas sbb jbe add aam repz adc mov push sti mov lret or subl jmp and cs insl in dec cmc adc cmp add sti pop div (bad) das xchg dec or ljmp push popf cmpsl jno fbld outsb aaa stc xor push cmp pop and ja inc xor sub loopne mov into outsb mov (bad) xor push rcrb daa (bad) xchg inc lods data16 pusha (bad) dec sti jge jae ret sbb mov mov mov and insb or jg pusha push sub xchg adcl insb dec loope fild push mov lret push inc sarb xchg cmp or or js,pt add pop std sarb sahf adc sahf dec lea aam out (bad) adc pushf pop loopne lret out sbb add insb jo outsb (bad) (bad) mov jns jo,pt aaa cmpsb cmp adc ss pop adc bound shll (bad) lret shrl jb je sub add cs lret js mov dec sub addr16 test into fcoms xor add pop cmp mov fucom das jns add jns inc jmp mov xor (bad) in (bad) shrb pop popf push mov es mov aas pop icebp inc cmpsl cs ja mov xchg pop int jecxz add lahf add lods xorb push dec addr16 idivb mov hlt (bad) cli cmp ja or shrb pop pusha jl pop data16 mov xchg dec loope sbb mov sbb addr16 out (bad) je push dec cmpsb andl jo adc adc dec fmull leave push and dec push lock pushf push addr16 add add inc cli cli inc pop sub or xor adc inc shrb imul cld (bad) fildl mov dec sbb cli xor lds push sub mov test xor fisttp mov xchg jb xchg aad outsb rcl faddp mov scas js ds cmpsl (bad) adc or push ds cld repz push dec xchg push icebp add fcoml faddp add pop rorb inc mov push arpl add mov popf or jmp insl shr push roll lret roll fimul push add add dec add outsl lcall cmpsl in push loope or icebp add mov dec pop add xchg ja adc jp adc pop lea das add xchg stc cmp clc mov stos jle mov test clc int sbb cmp test movsl dec fdivs xchg inc (bad) jp mov xchg (bad) jb push enter jmp dec cmp cmp add in pusha xor pushf mov cmp and adc push cld fnsave jecxz and ss cmp jle push or shll inc and mov lahf xor cmpsl or dec push not inc leave js imul scas cs neg shrb xchg jae fs mov rcll cmp inc jne (bad) loop,pn into pop cld comiss fwait push call fidivr outsb or and lds xchg jle xchg ja push stos (bad) loop pop mov ss push pop test push fucomp mov adc outsl aas adc ret sbb ss or out push push xchg loopne iret es or sbb mov not mov lea pop mov imul scas push push push lahf loopne push imul clc xor mov xor push cli insl mov sahf add fst jg push negb jp inc (bad) idivb xchg mov adc mov outsb aaa push add scas fiaddl mov dec lret push mov xor pop and iret sahf dec add lahf loope,pt mov js dec fwait pop jb pinsrw mov fs bound pop and push pop pop add push pop hlt push or cmp outsb scas xchg jbe adc add push inc imul fs stos out dec rol mov pop sahf aam daa push xchg push pop mov xor mov adc xchg and out jecxz push int3 pop pop and push jle mov push push cld jb das mov leave jb cmpsb mov or faddp xchg jb jmp add inc shrb mov je sub lret rcl fdivr pop hlt out test push repz ss add cld sahf pop push pop push nop shrb pusha (bad) lret daa adc stos test mov ss mov test jae call sub (bad) fdivp xlat ret adc ror dec pop mov cs pushf loop fnop mov idivb sbb add leave outsl mov sbb pop into xchg or test ret popa add cwtl sbbl addb push add enter pop add dec shl mov push je jle (bad) movsb hlt cmc scas nop out jbe ret dec push jge sbb inc stos cwtl arpl cmc mov leave push sub dec cltd add mov lret ret lds (bad) in mov call push jg outsb ret xor scas dec xchg dec loop fcmovnb decb into rorb mov push xchg mov and orl xchg mov ds into lods lahf aaa inc movb xlat add jle aaa xor stos call leave aas inc bound dec push and pop add inc data16 mov ss lock mov inc out insl jp jnp lock shrb adc scas add pop push dec ret add lods mov mov xchg clc mov outsb cmp push lcall mov inc mov ficomp mov stos push rolb outsl xor cmp dec test mov (bad) ljmp insl lea lds mov and mov jne scas fnstsw icebp outsl out daa lock dec outsb pop lea popf add xchg push add add cli jecxz mov lret dec icebp arpl test cmpsb xor rcrl bnd push (bad) pop adc sbb loopne dec xor mov sbb mov mov aas popa pusha sahf into jp mov (bad) fistpll ds loop add mov or adc xor mov and push (bad) (bad) ffree adc xor cmp ljmp sub push jl cmp sub negb (bad) jge scas mov jns dec jo mov add out xor outsl scas sbb push (bad) aad cld sbb xor dec pop test scas movl or orl cli call (bad) aad mov aas nop add fstl fimull xor and adc xlat mov (bad) lods inc push push in mov pop fsubl outsb xchg or test dec sahf push fmull add fiaddl fwait repz fiaddl std insb lret sbb repnz outsl sti xchg lret jl divb mov dec sti (bad) movsb addb push stos into jbe jns neg adc or dec mov push ss adc (bad) and xor adc adc push fidivr inc mov fist cltd movb cmp mov cmp jmp js clc stos inc cmp sahf jg xchg pop sahf push and (bad) sub xchg lahf push mov jo fiadd mov std cmpsb js push pop (bad) adc inc movsl mov outsl mov gs lcall mov shl ret cmpsl inc sub repz out in daa cmc dec sbb out mov ret aad inc fsubrs frstor mov inc mov mov inc mov fldcw inc lds jle cmpsb in sbbl mov mov call iret push flds jg cmp ss sub and into das push pop sub iret outsb or mov jg pusha push outsb js aad imul fbstp jnp out ficomp push loope je loop mov pop jb mov test cmpsb fnsave sub add add out pop cmp fmulp and out outsl es je pop or repnz hlt xor sub pusha sbb aas mov pop (bad) push or mov arpl es add push mov inc add nop mov (bad) pop push leave gs sbb inc test cmpsb fidiv xor or cld aaa adc js ja or xchg or fisttp shrb add outsl sub fldl sbb xchg jp mov cmp icebp xor cmp cmp (bad) push sub or push out dec sbb bound jle dec or xchg mov sub mov enter int3 inc fisubr xchg rorb mov dec (bad) xor jbe pusha dec xor adc pop outsl (bad) or xor cli cld and int (bad) pop inc and ljmp dec push dec pop into ret rcll clc add inc out adc and pusha jg jp push outsb clc cmp (bad) (bad) fsubp pop aam outsb sbb pop clc adc cmp es adc sbb cmp add xor inc jl iret add mov icebp pop mov fidivl push outsb add cli mov push sub call lcall jl aas mov scas push sbb push loopne loope scas ret leave popa adc scas pop popa push sub pop in or xchg (bad) and and js mov push nop push sub (bad) stc mov push out mov mov insb mov jmp clc inc outsl fsubs insl cmpsb decl inc incl pop outsl dec or (bad) aaa fwait fwait or or mov cmpsb in add pop popa nop mov (bad) sbb loope es in out cs repz mov jmp movsb pop push inc loop out (bad) stos lds out and add push outsl push inc xor vunpckhps out sbb xchg adc fsubrl hlt add (bad) (bad) jbe pop xchg pushf push push cmp sub dec cmpsl pop out add cmp clc adc scas lods cmp or or push or xor enter jg jecxz bound push shrb cmp jb test jno xchg push or and into movb outsl lock imul cmp or jle push sbb sbb lahf int3 and addl lock call pop aad sub and dec push jo and aaa mov scas and lods push out imul ds xor aaa dec inc fidivrl ss sbb in daa in push (bad) jbe push inc leave pushf das imulb rorb (bad) lahf loop rorb out rorl mov into mov inc adc mov imul xor stos cmpl (bad) push jnp inc xor pusha mov jne loopne nop inc adc sub (bad) jl and scas jb or adc add jmp les mov lods sbb lahf scas rorb xor sbb pop jae xchg inc clc push cwtl icebp lahf movsl inc mov push shlb mov xlat popa data16 loop push sbb adc imul roll pop sbb adc inc call lret aam xchg jo xchg or aas data16 rcr push jp inc bound sub push xchg push xor nop mov xchg ds inc icebp push lret cmpsb xchg xor inc enter inc push cld lock dec ds ret sbb inc add es xchg aaa jmp das repnz sahf inc push fadds inc (bad) jg cs out push jmp push rorl dec cwtl icebp push scas ljmp out pop mov (bad) divb and mov cmp add push outsl test push clc dec cltd cmp xchg cmp rclb add mov mov fstl shlb notb jb cmp xchg cmp (bad) ror les (bad) push dec adc xchg and xlat (bad) adc cwtl jbe mov pop (bad) fwait stos enter mov adc jl and iret and decl mov jle cmp cld insl dec movsl sti mov inc add out movsl xor sub aas mov movsl mov cmp imul ret loop ds add loopne,pt out cmp push mov or pop mov cmc lret imul mov mov or (bad) es fwait movsb dec repz push mov sbb or outsb ja push sub loopne imul dec cmpsl popa pop outsb mov mov cld jmp mov mov lock test mov xchg sti iret cs add or mov icebp jp mov xor mov adc mov mov shr dec rcll ljmp dec ret cmc mov andl sub xchg rcr ficomp inc loop fucomip xchg pop dec popf in push mov dec push daa xchg movsb popf (bad) es pop and jecxz add int3 into js ss icebp test and (bad) stos mov add rcll repnz sub pop dec dec ret int ljmp add jo lock xor xor xchg int or lret enter push fwait pop mov out and decl dec pop pop cmp aad cld dec jbe lret cmp es fwait add loop enter paddd ljmp mov push test mov and jae add stos sub clc jge mov cld iret mov fldln2 mov les jnp repz aad pop add out lcall fistp call test add js pop mov add loope aaa ds enter dec jo add add sbb mov jle hlt in adcl cmp js inc das loope mov mov mov loopne jp (bad) enter xor imul loopne mov imul fbstp (bad) out adc or mov inc pushf mov pop mov lock out inc and mov push lock mov jp mov cwtl fistpll jg xchg mov inc ficompl aad mov sahf cli orl pop pop dec pusha inc sub sbb add dec jo ljmp cmp cld add pop ja jne sub jne mov mov sbb ss (bad) add (bad) mov (bad) jp add movsl (bad) lods sbb or cs mov xor out mov out addr16 cmp aad xchg mov sub or xchg das arpl (bad) cmpsl fisttpll inc mov sub jl inc push sub fildl inc add ret aas ds jno cmp and (bad) mov mov (bad) pop sar imul mov mov subl in dec repz inc ficom repnz enter sbb out cmpsb fwait mov (bad) (bad) jl sbb out (bad) (bad) xor lcall and cmpsl stc shll dec es lahf ds mov fcoms stc push pusha clc test push push sti mov lahf out cmp imul adc clc out imul jbe cmp movsb sar sbb fbld push es loopne scas and pop or push in out sahf fstpt fsubrl shlb xchg cmpsl pop xchg (bad) and (bad) out stc jns outsl push ret ja cmp scas cmp out dec repz cmpsb cld sub jo adc shll xchg outsl cld test scas adc pop adc roll into repz imul js cmpsb cltd jp cmpsb imul lcall sub dec inc push jb xchg adc fisttpl xlat mov xchg ja daa mov cmpsb inc popf loop push (bad) cmp scas stc pop xor js jnp push cmpsb mov loopne jmp push inc decl cmpsl scas cmp mov push and xchg mov scas mov ror xchg scas pop mov stos or test (bad) dec in sbb lretw cmpsl arpl xorb andl mov mov inc pop mov inc cmpsb mov xchg out jns jmp sub lock xor bound imul cmpsb outsl pop push scas fwait outsl mov ret mov sbb out xchg (bad) cmp lahf out add and xchg in fdivp out clc scas es (bad) push scas push dec ror pop ds push jns xchg mov in cmpsb sti mov cld imul add shrl xlat aad dec push cmpsb jo mov push bound push add imul (bad) scas fbld jb fcmovnbe mov fsubl xor pop and popf lahf icebp sbb sar imul and hlt popf pop jbe xor fcmovne push cmp xchg (bad) imul pop icebp dec repz test pop daa out (bad) dec dec sub out push sbb subb popa gs sbb pushf test leave and je cmpsb mov inc push push ja mov cmpsb lahf divl scas pop pop pop (bad) stc sbb scas aas int loop xor mov lahf out scas push push mov std int std imul push and aad int sbb scas xchg dec (bad) mov out cmp test ds decb lock test jp in int in test pop pop cmpsb pop inc ljmp xor std dec popa (bad) push dec sub lcall push call scas into andl sbb rcll aaa fwait lahf add xlat lahf pop lock cltd jg out cwtl fnsave imul loopne mov cmp loop repz popa cmpsb pushf mov inc stc sarl mov adc mov cli mov pop jp push loopne cmp adc add iret out cmpsb push cld mov scas inc push movsb pop test lahf mulb ret xor xorl ficoml pop lcall lahf jbe scas iret jo fs add sub out cmpsb mov add cmp ret aam stos fsubrp shr shrl scas sti movsl lock repz shll cmpsb out lock or mov aaa sub jge xor inc jp call hlt (bad) cmpsl popf jmp decl or (bad) mov out into add (bad) lock stc shrl sbb pop pushf loop lds mov (bad) data16 jg xor lcall xchg mov mov cld imul (bad) mov cld movsb stc dec push xchg in test inc es push lock test sub adc pop xlat mov cmpb push ja,pn dec push pop scas inc ds push xchg scas ss mov inc cmpsb push jecxz xchg jbe in sarb push push cmpsb popl fsubrl or stos jb jbe add (bad) dec cmpsb pop test je mov cmpsb jae (bad) inc sub scas cmpsl cmpsb dec sar imul jb dec push sti lahf push add cmpsb xor ljmp (bad) mov scas dec ret repnz jno or xchg test push stos ss enter outsl lcall rcrb jmp (bad) jle,pn and cmpsb imul loop inc ss aas xchg sub xor ds jbe push mov stos push call in jl dec clc cmp xor fadds (bad) jne mov sub push pop jns test push add adc pop (bad) repz pop mov imulb mov adc xor imul push inc out sti repz shlb cmpsb int3 loop jg cld mov push mov lcall fdiv cmpsl stc shll (bad) fwait dec (bad) test inc push cmpsb cwtl aas int repnz movl pop out add dec push ss cmp lahf out sub ss sbb stos mov repnz loope cmpsl pop pop fist repz jge adc jne xchg push xlat aas int call cmpsb jno ds mov mov jo inc bound pop adc repz jmp loop jle scas xchg pop fimul into mov mov mov das lods push ret mov stc sar sti enter popf or addr16 mov sbb lret push clc andl arpl sub rorl bound js push das testl bound in push xor cltd sbb inc arpl and ret adc lcall mov out cmpsb xchg pop mov mov (bad) aam push aam cmpsb xchg sub scas ss popf movsb ret ret adc test push lahf and (bad) imul and jnp sub scas loop int out push call stos out cs xchg call lret xor mov mov push imul pop lret scas es adc xchg sub loope sar mov sub lret dec jnp xchg repnz mov jl mov lcall lock mov aas in xchg (bad) ss scas xor sbb mov add sub cmpsb clc daa mov push adc daa and add jmp fmul pop imul sub test arpl loop sti sar jle,pn pop cltd aad mov add rorl pop jle (bad) cmp inc xchg sub xchg cmpsl stc repz ja insl das aas cmpsb push mov jle aas in push scas (bad) pop into xor stc insb sub cmpsb jnp fsubrs dec pop push jp,pn push lahf outsb lcall scas add sahf push cmpsl out daa div cld loope imulb jo aaa stos cmpsb sbb pushf fnstcw bound inc mov mov fldcw mov push push arpl cmpsl gs mov mov test call jb inc push cmp jle xchg scas mov loope jl test cld loopne out xchg mov mov shrl push xchg pop das lret cmp dec inc outsl push cmpsb (bad) out sbb sbb sbb jae (bad) shrl ficompl dec cs repnz aad cmpsb and js imul or cmp jp lcall scas jns push (bad) cmpsb sti ds sarl mov test daa bound enter push sbb into repz mov int cmp push bound pop cmp cmp (bad) stc shl leave fcomi fsubl cli xor push mov aaa movsb lahf out outsb (bad) fisubl call xchg push daa mov movsl lahf out cmp sbb mov out aad jle lahf data16 adc aad ret pop rcl sahf fbld mov cmpsb jo,pn loop aaa adc ret cltd scas aam pop push std imul jmp scas pushf test dec call jb push fstps sbb pop outsl scas sbb cmp push sahf pop scas (bad) push sar js fstp adc or lock push adc cmp fnstenv test cmpsb cs std fdivrl push jle (bad) arpl daa stos ds cld lock (bad) sub and push stc fsubrl aas loopne push movsl dec lahf push popf test jnp int adc scas movsl test ret nop jmp cmp sbb test decb scas xchg (bad) cs sar imul out mov scas or add popa push push call xor jecxz lret and out sbb je pop push push mov dec cmp gs out xchg mov or cld pop cwtl xchg scas fldcw jne ret cmc dec ret jge xlat jmp xor jb adc bound ds scas jle or and sub leave ss out imul pop imul imul scas cmp sbb cld imul aad adc scas mov in out or lret lods shll outsb cmpsb (bad) scas add out scas hlt cmpsb or add sar imul fcomi push cld imul bswap push out (bad) not ljmp pop arpl ja dec sub xchg movsl addr16 mov pop mov mov mov add cmp aaa push sarl cmp mov inc cmc mov pop imul fiadd push xchg leave xchg aas jo inc movsl jbe cmp inc in push jg cmp cld adc xacquire mov es jae cmpsl mov addr16 out pop jb mov dec sahf or mov insb mov pusha and insb push daa dec fiadd ss adc shlb daa imul jmp pop or and loop xor in shlb push scas xorl push dec cmpsb xchg pop mov bnd mov ja scas jmp adc (bad) mov (bad) out pop push sub scas out addr16 in sub int3 mov mov sbb outsl addr16 mov push pop repnz sbb lahf mov fmuls mov cmpsl stc shrl hlt add ficom add cs pop push xchg adc mov inc scas jmp out xchg out adc inc shrb popf mov push sarb data16 bnd mov lret cmpsl cs ss sbb mov lret (bad) dec lds jle fimull push sahf push mov cld rcrl xlat scas loop push dec pop push push ljmp mov xor jecxz imul lahf fwait int aaa scas mov jle sbb in scas pop pop push xor inc pop icebp test cmp and int es scas icebp stos insl repnz aas lods inc sub aad lahf xlat lods lahf mov out (bad) cmpsb pop push iret repz lcall adc add xor xchg cmpsb dec push push sbb test mov sub stos cmpsb (bad) ja jle jmp leave movsb (bad) ret sbb or cmpsb push xlat add test jmp push sti repz daa dec sahf cmp shrb cli pop loope sbb fist out push lds cmp repz fsubl or mov cli (bad) sbb popf aaa cmpsb addr16 cmpsb or jmp mov hlt sar ja xor mov mov movsb inc cmpsb adc add push das loope or push es std imul call sub inc cmpsl cmpsb cltd pop arpl repz int enter scas es out test push mov mov push pushf add outsl cli sbb or fist cmp dec inc push (bad) ja add ljmp dec jmp (bad) loopne lahf outsl add pop push push imul cmpsl or out test lahf jle cmp pop push loopne jg cmp jne push jle xlat (bad) lock jno scas push mov fwait aaa mov sbb jnp push mov inc scas iret cmpsb dec xchg sahf fwait sbb mov dec repz repnz add dec xorl pop mov scas lcall mov mov iret dec aas shrb loope outsb cmpsb push negb mov popa test scas cmp shr adc mov cmpsb cli sbb aad sbb std rclb imul xorb xor sbb stos ret cmpsb lret jg pop clc sar scas out testl push stc mov cmp sti sbb dec shl decb out mov dec fcmovnb (bad) inc mov push scas mov (bad) push sahf jmp cmpsb push aaa (bad) idivb nop cwtl adc out cmp inc scas das scas cmpb lahf (bad) int3 push out gs jnp lret push loopne jle xor xor ss scas imul sbb addl orl sti shlb mov aas in xchg pop jle ljmp std jns stos mov arpl stos fwait cmpsb xchg pop hlt sar (bad) sub inc jp dec aas mov pop sbb mov fs repz cmpsb mov mov cmpsb sbb scas jbe mov push mov int lods or add mov mov loope sub stc ljmp (bad) loopne jle in pusha dec jb fwait aaa fwait adc sub sub popf cmpsb push ret fwait sub lds push add push aad dec adc rcrl adcl cmpsl stc xchg sub and jo lret mov outsl add xabort jle lcall push out xor or inc mov bound xchg sbb push jp fcmovnb mov in lret addr16 sar imul dec sti sarl mov xchg adc scas mov aad add mov push clc imul or cmpsb adc adc add push lret mov (bad) mov dec (bad) notl cmpsb xlat outsl stos and fdivs jg fwait lock cmp scas jno mov pushl sub or mov ret in test std (bad) jmp repz loopne dec movsb pop pop jns inc aas out jns cli push fs out sbb xchg out lret (bad) ljmp add fiadd cli ficomp jb leave xor sub jl in pop xchg shl mov cmp pop addr16 jmp scas test dec out loope nop cmpsb mov inc push outsl push js mov cmp xchg xchg cltd mov jl cmpsb inc jle stos out mov jp stos jg jbe cmp jl int pop mov cmpsl inc std je loop pop (bad) aaa push dec xchg push (bad) (bad) adc (bad) adc aam adc pushl pop inc xchg xchg lret cs mov add pop movb push test outsl loope push mov ss or (bad) push sub mov dec insb push icebp xchg popa xchg pushf ds (bad) (bad) stos movsbl add scas test mov mov mov mov inc xchg jb rcll mov enter insl loop or sub push xchg fistpll cs sarb ja lret clc data16 out ret or ror pop ror sarb lahf push clc scas xchg push outsl cld cmp push jg inc pop mov pop dec repnz imul adc ss ja (bad) aaa inc stos mov (bad) mov imul mov mov cld decb call rclb fisubl push nop in loope or push cmp adc mov cli pop rcl idivb fsubrs outsb test repnz xchg ds xor std push mov mov mov push (bad) jp pusha (bad) ss inc shll (bad) and adc into loopne cmp or xor jb jbe inc ret into push cli in (bad) cmp inc add mov and loope sbbb dec or sub inc add sbb xchg add adc inc sub cmpsb jnp xor push or mov add dec loop jg xor clc inc or xchg loope leave pop lret sub mov push (bad) enter mov pop imul mov mov jle add int dec (bad) xlat mov jbe (bad) xor lahf sub gs sub ljmp cmp js sub pop rcr gs and pop ret stos imulb cmpsb imul std insb aaa adc sbb ss movsb jle pop es stos mov mov shl push and mov sbb decb xchg jmp pop cs add xor cmp dec das clc push stc sbb cmpsl outsl aaa xchg arpl iret add nop leave jge shrb insb push pop mov clc cmp stc xchg lds jmp jbe clc xor xchg adc notl pushf push cmpsl or (bad) jne and lahf enter pop jp inc imul mov ljmp jle xor inc sub aad stos cli push inc xchg push pop and push sbb stos repz loope adc hlt push (bad) outsl or jecxz cmpsl dec and inc daa inc loope cmp fidivr cs imul cmpsb pop inc lahf mov add (bad) ficomp xchg sbb inc pop outsb loopne and and ljmp xlat (bad) fiadd call incl daa or outsl fwait push mov dec stc ficomp sbb inc xlat push mov push dec lcall xchg (bad) dec cmp sahf (bad) jo aam pop ficoml popf or add dec fs mov push into pop bound adc lock mov fsubp sbbl das dec in and xlat jecxz push shrb jecxz (bad) cli stos and pop adc sub insb (bad) xchg pop leave aas push push into out push add test jle leave xor aaa mov iret fninit ret lods stos xchg jl mov mov aas or pop sbb push push ret xor test andl loop push ret test pop ss lahf lahf sub aad pop std or stos mov out inc inc ja inc jg outsl add ss fisttp cmp xor lock lods and push clc xor sub aaa andl cmpb dec popf push xchg fstl inc add mov in xchg mov fmull loopne pop cli inc popa xadd xlat push and loope ret stos es push out shrl xor fstl jo xchg ds or mov jb ss add add es es sti jns dec and xchg jo or dec jg lahf xchg into ficomp fs (bad) and lahf out (bad) decb fucomip or (bad) mov jle test mov popa jg aad scas fsubp rcrl pop sbb jecxz inc push and push cld (bad) xor add aad pop fimull sbb lahf (bad) scas adc xchg leave or fistpll stos stos loope (bad) (bad) decl xchg fdivr push data16 sub aad pop in stos xorl mov (bad) fnstsw push lea push out lcall jle (bad) mov adc leave lcall scas int3 fs div test cmp add es rcrb jge dec jae jo inc push loopne movsb lahf push fs push insl dec or mov pop stos out aaa xchg clc sbb sbb ret out inc xchg lret es js inc outsb repnz xchg xor divb push mov mov cmp push add dec pminsw mov push push out xchg or popf aaa pop sbb sbbb ds movsl push stos xchg inc pop mov insb pop jb mov pop into xorb sub mov aas sbb imul es pop jbe add xchg outsl out xchg inc clc call and push sbb imul jmp jbe ret xchg mov (bad) movsl aad (bad) (bad) out mov inc mov cmp cli add xchg push add and add pop cld pop pmaxub sbb cmp lods or loop scas int ret jl pop cmp xchg outsb in dec inc cli pop outsl test inc outsb mov push push outsl incb (bad) imul lds stos xor test fistp mov stos and (bad) adc mov ljmp les outsl fidivr orb aad cmpsl rclb out int jns and out imulb jns inc mov into (bad) pop das stos mov lret fimul push daa test mov stos inc mov sub and iret (bad) fidivr add pushf xlat imull cwtl sbbl aaa outsl bound sti mov aaa mul fistpl popa rcr fidiv daa in push fwait outsl mov movl inc cmp aaa sti sarl (bad) clc outsl add pop xchg (bad) aad xlat lret fwait xchg jecxz loopne (bad) repz mov jmp rcr adc mov cmp sub jecxz (bad) add aad sbb dec mov test mov push pop mov enter or pop ljmp mov imul rcl xor negb cmp daa daa pop pushl sub data16 or rcrl pop inc xor pop sahf xchg aam dec cmp scas ds loopne ret icebp pop cmp jle push fstl pop mov aas lods test and outsb in subl xor lcall push adc sub inc add cmp imul imul pusha mov ret lock add cmp inc cs xchg add push pop push stc add clc sti andl xchg pop mov lahf mov aas (bad) scas addb nop dec xchg mov clc add and flds mov aad and jae inc sahf lret insb sub pop fst std fisttp mov insb add push fnstenv es fsubs sub and xchg jne add jns movsb xor lock jmp adc push jbe cmp mov insl mov repz ret inc cmp lock lret (bad) mov decl add (bad) insl sbb fcoml stos outsb les sub rorl (bad) das sub subb sub inc es jge sub imull ss or loopne inc imul mov sub int3 add iret jmp inc lret pop mov or or dec cmp mov cmp adc sub cmp es sti push xor cs mov sahf push mov adc pop and sbb jmp and jmp add push ss xchg cmp xchg xlat into lahf (bad) mov push xor dec sub out pop mov mov mov aas push pushf pop ds dec lea cmpsb push fmuls mov (bad) cs (bad) scas xor cmpsl add inc fcomi es movsl lock jne std (bad) pop xor cmp add mov mov xchg sbb outsl popa inc je pop sbb fcom addb xchg jg or sub cmp stos mov imul jae xlat xchg cli xorl out movsb add cmpsb scas cmp stos fistp enter jmp dec mov sbb stos cmp sub cmpsl aas adc clc (bad) loope push cltd das cmpsb add add lock leave xchg in cmp call (bad) loopne and dec cld push pushf enter mov stos dec sub stc js xlat addl cli dec mov mov cmp push (bad) js,pn xchg les add dec push xor sub add jmp dec dec xor outsb and pop push push int3 sub insl mov inc mov adc lret inc int mov push add jae repz cmp cmpsb ljmp les jmp add mov js sbb scas push push sbb sub data16 cmp fwait inc repz inc rcrb cmp jns das clc jecxz lea sahf je fstp lahf roll push xor popw (bad) mov mov jbe inc out ds fadd jns aam cmp mov loopne push lcall or aas ffree into loop pop cmp or push push (bad) cmp shrb or xchg imul add push insb push xor out mov int pop dec jns mov push push ds cmp cltd xchg ss mov xor (bad) cmc xchg clc or xor outsb shll ret rorb out out or rorl cld jg push inc stos frstor push push fisub pop push dec (bad) scas fcmovu fsubrp rcll and js test jmp clc jl sti pop xor cmp add fidiv pop ljmp jl add mov xlat push xor inc addr16 fs and push cld (bad) push push push mov jmp es push pop cld cli sahf repnz cltd (bad) push sbb lock pop add push (bad) cltd xor adc push jns cs ficompl cmp ds sbb xchg mov (bad) or ds push stos lahf push push inc cmpsl fsub inc ret push mov into pop jecxz out add or imul int3 jb push or jg fs call addr16 jns jg je adc sbb jle fldl cmp iret sahf out xor push rolb loop push sbb xor mov lcall rclw cltd out lahf cmpsl jbe add lods lcall or insb push inc mov fisttp fstps lods popf insl cmp jmp jecxz,pt lods cmp scas icebp jg dec sbb repnz test cmp mov dec unpcklps imul aad dec fldenv pushf sahf ss movsl lsl jbe rolb pushf or out jns imul inc rcrl sahf add call jae push cli (bad) rolb daa (bad) imul ficompl jae test push add fmulp dec jb mov shll jb daa sub fistl add xchg lds (bad) xor xchg xchg xor push int inc lea into out push (bad) jbe pop pop mov and jo or das mov push iret (bad) sbb dec leave and and inc (bad) fcmovb shrb (bad) out cmp js mov sbb add lret pop je rolb jbe or jno lahf xor sub dec sbb pop mov fwait push dec cld push fbld (bad) repnz (bad) decl cmp xchg cmp adc sbb xchg push push test mov and xor inc jmp mov cmp jbe repz cwtl cmpsl testl or loop add dec movsl adc and in ret popf sarb dec cmpsl repz cmpsl inc imul imul mov dec in push outsl (bad) jl jmp stos idivb dec into stos or push pop add ficompl daa test xchg fwait out mov pop jle cs pop aas sub daa lds mov inc mov pop jp popf jmp push or (bad) push or cmp mov js xor push sbb shlb lcall scas add pop or push fwait push pop mov outsl sahf dec cs (bad) sti pop int cmpsb rorb sub loope clc lcall in mov outsl out int les cmp rolb icebp fistpl xor dec sbb pusha flds push adc or fnstenv es sub push shlb ds out push or add sbb idivl in mov pop and jg scas in loope pop cmc (bad) sarl data16 xor leave scas or jno and sahf outsl pop push pop out aad sahf shrl jo xor push out js jecxz cmpb testl inc ret dec (bad) mov mov in push pop shl adc test enter decl jg jnp out testl pop and xchg lcall jg xchg js mov bound dec shll add push mov push jecxz jp xchg and (bad) fmul rolb add push sahf sbb loope repz mov jb dec mov movsb mov mov mov add cmp mov aad ss stc jb imul push and mov add aaa mov inc enter lahf negb ds sahf out cmpsb lock clc fwait dec add push sub or data16 rcrl cmp je adc mov (bad) mov push pop xor jb inc sub mov push push gs add xchg (bad) call out daa outsl lret aad adc call cwtl mov dec scas outsl mov fmull pop (bad) repz push xchg dec xchg cs stc add iret add ljmp and push push jo repz xor sahf movsl ror inc mov push out fs arpl out mov mov add inc pop sub shrb dec or aaa pop fucomip pcmpeqb cs fdivr ss sbbl (bad) inc fmuls pop dec dec outsl adc mov inc test ljmp and call iret push mov scas sub out arpl dec clc sub (bad) xchg pop aam aad pop push jns cmp sub pop sub adc jle decl pop xor cmc call out cli add rcrb aas mov push add hlt (bad) push lods pop int fsubrp inc jp cld loop cmpsb add enter (bad) or test ja out ret and jl sub data16 dec fdivrl (bad) shll push outsb addr16 jne mov (bad) fstps jp imul jl int and mov repnz add repnz mov addr16 out in sbb imul outsb pop loope adcl test loopne push xor ds sbb scas sahf shld xchg xchg or and out push lock shrb jbe sarl das pop dec xor (bad) jb mov (bad) dec sub add dec movsl dec mov sub outsl (bad) mov push insb std out popa into xlat jp (bad) pusha movb and jne out sarb cmp push jmp inc cmp shrb outsb inc outsb mov (bad) push or das fidiv fs inc xor repz loope shrb pusha mov les jecxz jle pusha mov std sbb cmp fdivp std lahf add dec jle ss push or pop xor mov out xchg mov outsl push data16 mov mov pop xchg or popf add push (bad) jp aad jg pop xor pop sbb (bad) xor cmc cmpsl shlb insb repnz addr16 xor cs bound pop jbe or lock xor pop gs mov mov inc push insl mov outsb frstor into pop stos mov or cmp xchg std fcomps mov or dec loope push adc sbb das lods or sahf mov sub sti fistpll sbb dec js lret sub aad xlat add stos lods loope dec inc push fisubl sbb loopne (bad) std lods aaa ja xchg and push loopne rcrb pop sbb mov lcall pop cs xchg out pop les push (bad) out pop mov loopne fisubrl adc into and adc cmp popa push cmpsb push mov add pop cmpsb addr16 and lret sub jmp js inc sbb loopne stos push and outsl aad call out out fstpl jb ss xchg lahf add pop push push xchg mov (bad) notl lods mov push repz mov dec cld pop ljmp clc xchg out pusha ljmp into movsb jp adc (bad) hlt sub iret sub test lret test (bad) pop push je sbb sarl dec scas fwait das sbb dec (bad) outsl shrw jecxz cli es mul xchg daa ss push xchg lcall or out dec stc adc into and jb scas (bad) outsl lods pop or data16 xchg sub cwtl dec cltd mov inc dec mov arpl orl adc mov stos adc inc jmp mov jg data16 addl inc std mov inc add add pop pop push scas inc daa push sbbl add js and (bad) repnz repnz jmp fisttp and pusha std call add push pop cmp leave movsl lret bswap and ss and pop dec js add and jge sbb mov imul xchg fsubrl ficompl pop out mov divb ljmp fdivrl icebp (bad) scas or js call pop stos and mov push in sti rolb outsl xchg mov cmpw ror add xor stc test (bad) mov fsub jp out ss rcrb jnp adc imul (bad) add push lret mov push cmp js,pn inc pop ds pop fs cli dec mov xchg out cs dec adc test xlat dec fs outsl add int3 loop (bad) push xlat sub outsl inc rcl push (bad) inc mov sbb sahf ja push call hlt add mov lret cmp psllw jae cli dec popf (bad) xor push enter sbb test fwait (bad) ss adc jnp aas int shrl or cmpsb fiadd dec mov add push ja shll into or mov push je and and jnp hlt cs jmp mov movsl ds mov sti push and cli mov xchg push loope pop jb sbb xchg inc lcall out setg outsb xchg repnz aam jns sahf pusha xchg clc into (bad) repz dec lcall (bad) xor mov rcr jg mov rolb int mov xchg mov or cmp inc stos sahf fisubr loope mov out ret xchg push mov push out sub out xchg cmpsb mov adc cld scas out dec ds pop les movsl popa xchg out imul xchg lock scas (bad) lahf xor orl add xorl sbb sahf out inc inc push test and dec roll dec dec notl stc sbb into mov int mov push ss stc fs ret push add icebp pop pop shl mov (bad) call or dec xor aad cmpsl adc pop pusha pop ret pop pop shll fisttp pop repnz fildll popf mov lahf in add push mov ljmp mov jecxz ds in pushf lock ret into jecxz jecxz jecxz jns xchg loopne add into or sbb or mov mov lret fistl xchg imul mov push lcall popa sub mov std sbb imul pop or lock pop push add mov xchg xor into lahf or lock das dec test pushf cmp cmp push imul lahf xchg lcall push inc cmp ss xchg sbb (bad) into push repz (bad) clc (bad) cmp mov fs sahf jp xlat js stc jo sbb xor pop ds add pop dec dec movb ret mov loop pusha sahf pop lea push rcll lret sub mov mov push cltd mov fisubr sub dec test lret (bad) mov fs xchg cmp test push inc xlat xlat fwait xor (bad) lret (bad) push push mov xchg addl (bad) (bad) roll jmp (bad) jo (bad) xor rcrb (bad) outsl test or push mov mov sub sahf push (bad) (bad) repnz or or je movsb xor inc test push sub notb xchg stos add xchg cli sub js arpl jge stc dec rcrl pop sbb ds or mul sub add fistpll push fisttp mov pop (bad) cmp or enter add ret push adc sub clc xchg lcall lea mov xchg (bad) pop daa add jle cmc dec std movb sub mov das and sbb pop mov out (bad) fwait pop sahf (bad) (bad) mov sbb outsl xchg cmp cld or xchg (bad) push loopne fiadd stos push add stos push pop cmp jle (bad) addr16 leave dec mov xor add icebp mov lret push and inc mov mov xchg mov aaa es icebp pop cmp dec repz hlt cld jle jecxz daa lret push xor xchg stos or jmp out test icebp je cmp mov mov out ds int sbb xchg data16 ficompl cmp inc dec fdivs out fcoml leave adc in clc outsl sahf cmp (bad) and js xchg icebp mov mov mov mov das rcll call pop mov pop negb lahf rcrb and aas sbb cs pop pop into rolb mov loopne lret subb add jle inc pop cmp xor (bad) jbe fcoms lret xor and xor cmp jp mov push das pop repz fimul mov (bad) dec push call add add bound cmp pop loopne xor test adc fucomi stos sahf mov sub nop out cs mov inc and cmp mov lds jo push xchg push push mov pop cmp sub sub jbe nop hlt xorl or (bad) mov xor mov jmp push inc jmp ljmp icebp push dec arpl nopl and dec fbld lahf repz jno mov push imulb or mov push pop cmp mov iret pop rclb int3 outsl xchg lock lcall adc mov xor add js stos xchg xchg jmp mov enter dec lret in lcall dec insl movsl decl add mov jns and or mov pusha cli cmp lret xchg cmovbe push adc xor push or pop imul imul and ds adc inc push cmp add adc mov jle (bad) mov mov adc sbb sub pop dec add mov mov lret jge push js jecxz push inc ds out lock push xchg fnsave in shrb (bad) popa push jbe cmp cmp test mov outsl sbb lock or int fisubrl jns (bad) dec mov fs dec lret sahf adc fmuls dec sbb push xchg add xchg ss out mov pop lcall popf clc ljmp xchg lcall cmpsl add sub pop pop fstp push cmp and out and add (bad) ljmp js inc xlat scas subl incl push mov incl xor mov cmpsb out out outsl fwait xchg pop pop push sti xor cmpsb add sahf adc pop test add sub xchg mov add into aas xor push push jb dec cld loopne cli cbtw into sbb les aaa test xor mov cmp js add add insl xchg xchg sahf mov imul pop ret out xchg push (bad) dec mov mov or jg mov sub lds rcrb subl hlt es xchg loopne sahf jle xchg xchg mov shrb dec les or adc (bad) cmp push out add js push inc out pop test shr sub inc pop dec mov sub addl mov sarb mov adc sbb or int push into push sbb mov mov cmp xor lret add push sahf sub and mov fstpt and lods lods inc inc add mov insb push push mov sbb adc jnp ret iret loop sahf scas outsb or insl into inc or jge mov jge iret jb call pop pop adc sbb push int xchg ret lods iret fiaddl mov lea jo lock add ret mov adc aad lods or pop rcrl push sarl push xchg pop sahf daa (bad) fwait lods push inc mov out add subl aas mov and adc inc push mov push addr16 stos ljmp inc or jbe xchg repnz dec mov dec ror stos sub push pop inc cmp add popa add ds loop,pt (bad) mov mov add xor adc jb and sahf push pop sbb push ljmp add pop sahf add sub adc iret jae cmp jae push inc fcomp ret cmp dec ljmp xchg decl test inc pop idivb add pusha js xor clc dec sub icebp outsl outsb nop rorl jnp pop add fwait imul and pop test inc imul add xchg pop sti push sub popa orl data16 leave lahf cmp (bad) xchg mov mov adc (bad) or rcr sub mul sbb add dec cmp ret incl repnz lea inc cmp add daa aas and shr sub (bad) cmp mov mov xor stos out andl push es add fidivr dec adc jl movsl daa into adc dec call or out (bad) mov push add mov jl add mov xor add or cmpsb add push jg fistpll ja lds or push dec dec or (bad) leave jbe jnp cmp test xchg lcall outsb mov dec sub pop scas and dec icebp pop push bnd push sub (bad) scas jo rcll (bad) addr16 pop mov xor sbb sbb loopne dec aaa pop loop and pop aas push (bad) iret or pop adc cmp pop ja mov mov sub pop add jnp fidivr sbb outsl repnz and (bad) mov dec dec cli and mov pop lret fidiv dec mov push bound or sbbl mov inc shrl push dec js rolb push xor lock addr16 or fwait or lahf add adc ret sti jp test adc inc add lods sarl test push mov aaa out data16 repnz dec add fs mov and outsb inc sbb rorb ret cli lods xlat bound clc popa inc loop xchg or rolb (bad) jno inc add mov add inc push popl ds ret push sub mov inc out push add fcoms mov (bad) push mov aaa mov mov movsb or fstpt mulb jno mov gs xchg shrb inc inc out out push outsb push cmp jnp inc outsl push push or xchg push push lock test inc (bad) sahf push mov out hlt xor push sti lock jns fsubp je lahf xchg or das movl std ret cs out ret out pop shll icebp aaa mov push hlt push ss mov outsb insl aas loop dec lret sahf push xchg xor dec mov sahf aad out imul mov mov stc sbb ret orl lahf enter js or mov mov inc jo inc cmc jbe scas jle ret and pusha xchg pop cwtl push idivb insl cmp adc (bad) notb ret ja outsl sub notb outsb leave test shlb gs push push (bad) out mov in es mov in cmc call scas or test inc dec incb or loope push sbb notb in subl jo incl xchg into sub out add inc mov xchg xor lods mov mov stos sar and (bad) push mov inc mov (bad) in movsb or rol stos js inc aas int cmpsb inc ret add inc fsubl xor repnz pop ljmp pop add pusha push fucomi mov xor inc xchg inc clc rcr fisubr mov adc add dec (bad) int3 iret adc cmpsl outsb sbb cmpsb adc xor mov sub enter pop call jmp in jmp xor incl or sbb jp out (bad) mov js sahf pop push inc (bad) jle clc cmp pop mov (bad) jno sub incb or lahf jecxz mov iret add inc mov sub inc les push cs (bad) cmp incb fidiv cmp or mov sarl xor out nop inc mov and push sbb clc cmpsb adc cmp stos add mov mov call xchg push sarb int pop outsl es std xchg xor sub add dec js jp xchg push dec lock es sbb cmpsl jp push in add (bad) dec dec test dec or and gs (bad) decl add pop sbb pop ucomiss call pop xor ret inc scas dec cmp fmull dec xor cmp (bad) xor jmp popa (bad) notb fwait outsl (bad) mov sub sub dec sysret sub cli add ss dec push bound out dec (bad) out xchg add out (bad) cmpsl (bad) (bad) add mov (bad) xchg and cmpsl test push lret lret and addr16 pop xchg jge mov cltd push jecxz and mov pop pushf xchg call inc mov jns les cmp imul cld sub mov jae pop ss cmp push or loopne pop sahf ret sub fcmovnb imul xchg mov std cmp push repnz ud2 xor scas sbb iret pusha or lock ljmp js mov and movsl push dec outsl dec out dec mov imul push outsb shll incl les pop loopne or les add mov push sub jb lcall dec adc ret push fsubrp xor loop jp (bad) push mov sbb mov sahf fiaddl loopne ljmp mov imul loope in and mov pop mul add pop test das repz enter mov mov clc loope ljmp sub ljmp adc ja les (bad) xlat adc or ficoml test lock lcall and (bad) xchg pushl mov cmc out enter cmp or mov push push mov jo aam push dec jbe insl loopne cmp cmpsb loopne shrl fdiv mov jb dec push aas shrb idiv scas mov jl xor pop and mov pop out inc fisubrl mov jb jb push push jns (bad) jae mov clc xor mov mov lea lret xchg stos mov jb ja xchg stos lods lods mov adc fisubr sub push (bad) int3 cmp adc aad push add lahf jle js or adc mov mov gs pop pop inc inc lods add xor cmp orb repz or or outsb rolb sahf mov pop inc fdivrs jbe jae pop sahf jg push push xchg dec mov cs sahf fidivr dec and dec dec sub adc xchg fdivrs (bad) inc (bad) mov pop mov xchg icebp mov xor cltd jnp or loope mov push cmp xor push jp mov or out cs cs dec mov leave jb das lods out ljmp inc or push mov stos scas rcrl ljmp aad movb lahf scas stos add and mov dec loop popaw inc sub xchg cmpl enter sbb (bad) pop in jp mov mov add inc and scas mov jle inc jne mov mov xchg push cs mov inc mov or inc mov inc ret xor mov pop aas and adc lahf arpl jb adc add aam (bad) cmpsb sub stc orl xor repz lods sbb jne sbb out pop decb sbb lret ja xor (bad) test jb pop std sub rcrl ret (bad) mov addl inc rolb jnp adc xchg dec jp js cs pop fwait inc pop and jg imul es jmp jbe push pusha test ds pop scas aaa adc and pop sbb sub mov cmp xchg jp in out int3 cmp dec repz ljmp out ss and cmpsl or add add iret (bad) notb les repz sti (bad) xchg icebp icebp dec mov add jg in ss and cmp add or (bad) dec jecxz subl in xchg inc sarb mov jns lock ljmp or sbb lds jb push leave aaa std xor dec mov push push enter gs mov sbb adc hlt add decl pop sub imull cli mov push jmp jecxz arpl rolb pause dec push cmpsl xor addr16 and push (bad) in inc (bad) fcomip dec sbb into sarl and push pop out lods pop or (bad) xor (bad) mov or push adc gs jns and out (bad) cs xlat test inc js xchg fisttp aaa or xchg inc loopne (bad) das and incl fimull xor (bad) fidivl adc add pop jnp xor jns jecxz push lods bound popa and and pop push into mov jle pop scas inc fimull lock inc jg xchg cmp push outsl ljmp and jg inc lods xchg and ljmp jg (bad) pushf nop push jb das (bad) push pop pop xchg pop adc lods mov test jecxz fist (bad) into xor enter js ja daa lahf sar hlt and inc fdivrs pop ds adc adc add push or xchg (bad) push xchg xchg xchg mov push loop mov out push xchg dec push cmp push dec ds sub decl jns loop sub cmp adc in inc repz es fisubrl (bad) ss insl lea mov int fldt sub (bad) jae add pop ret lahf add dec push test sbb les popl (bad) push scas pop sahf cli loop xchg add sub push in (bad) loopne or loop cli or cmp xchg push xor cmp xor mov inc ret (bad) hlt fwait stos mov mov (bad) push and je incb in sub cmpl outsl push stos add loopne adc push fidivrl pop jmp add push sub push sub push les ret push dec js xchg hlt es insb xchg fcmovbe test (bad) (bad) xchg popa (bad) mov in inc push je mov mov mov push loope pop mov add pop cmp out add imul jns ds (bad) add inc cmp outsl push or jl clc xchg bound pop and shl pop lcall mov push and xchg pop sub (bad) adc scas cmp push sti or mov sbb add sub xchg stos pop pushf popf outsl jge paddd xor mov aas or xchg out cli jb (bad) loop test imul push fimul adc or icebp out pop pop (bad) sub xor sbb cmp add xchg popf repnz and mov sbb cmp ret std dec testl jmp cltd stos lret dec (bad) jmp (bad) loopne es addr16 lock andb mov jbe xchg xor cmpsl pop aas adc adc add sub cmpsb out xor lock (bad) in shrb fs cli xor xor outsb and inc pop inc jg push leave jl add jmp sub xchg add loop,pt sub xor addb movsl out push scas xchg adc test adc test or mov outsb data16 lock pop add adc sahf push xchg fmuls mov mov or cmp das popa aas cmpsb shl lret xor fwait scas pop sub add sbb in stc sarl cmp cmpsb outsl xchg lock pcmpgtd int3 mov stos data16 xor mov and scas arpl dec stos mov imul fidivl dec rcrb dec out test push push inc fstpl and lock inc out outsl ljmp or and test push lahf lock imul inc shl and cmpsb outsb xchg jg xchg mov out mov or mov jo push xor jbe add popl cmp movsl push out pop imul paddq pop stc cmp cld mov mov dec ret lock xchg push cmpsb push jp cmp rorb aas add data16 push out push pop shrl jne bound push cmpsb jecxz or cmpsl sub test (bad) inc scas inc dec sti rcrl fmulp dec les xchg jp sub sbb scas ret pop (bad) scas ret frstor lock xchg lcall or cmc jl and into movsl aas das aas cmp pop divps mov shrb mov sahf push decl aad push mov lahf out inc inc scas xchg repz pushaw decb add (bad) fsubrs imul mov xlat (bad) push jle scas add pop push add xchg inc lahf fisub cmp scas in (bad) cld imul data16 into in push fidivl mov mov mov outsb daa mov and mov pop or aad je mov out aaa inc rcrl ret out pop out jle loop push xchg ss fwait cli cmp dec (bad) dec (bad) fsubs idivl scas out cmpsb outsl push adc shll gs fsubrl pop inc mov mov clc pop stos out pop je outsb out in add rorl out inc fstpt cmp insl xchg xchg mov xchg mov mov and jp outsl inc add add push sar iret inc in inc (bad) outsb cmpsb xlat push lea cmpsb out push out aas xchg inc imul dec int3 into (bad) mov scas mov mov imul or jnp out or mov (bad) inc mov adc xchg mov and iret dec sbbl fidivr outsl mov jns ss add cmpsb imul dec xchg cwtl js mov daa mov aas sbb inc push sbb mov pop subb sbb fwait sbb push lret lock leave xor (bad) lcall les loop int3 roll cld fist insl mov jno mov adc adc loop cltd (bad) idivb mov push fsubs ljmp xchg (bad) dec mov fs push cmp (bad) pop pop int fucomip mov pop add sub jne out out (bad) cmp lods mov cmpsl mov not jbe sbbl pop pop sahf cs jecxz leave rorl sahf out inc cmp xchg scas fbld mov pop sbb xchg or mov ss es add fiaddl out jmp add cs into xchg mov mov stos jns pop sub xor imulb or incl adc add add dec adc cmp or sahf lock mov inc addr16 pop mov jno xor into jmp pop stc jl in xchg (bad) cmp mov cld adc (bad) mov (bad) or adc lret xchg xchg sbb fmulp add fildll or arpl sbb mov xchg enter push inc insl ss outsl popf mov aas outsl adc lcall rcr jle xor inc js dec nop rol xor cmp add mov xchg out pop xchg stos add push rcr cmp clc test mul jae or test ret xchg jbe clc pop (bad) fwait xor outsl xchg jle rcll (bad) and rcrl xchg sub leave aas leave push sub sahf lret add shrl push call mov clc and (bad) cli inc ficomp fwait icebp cwtl test mov loop mov xchg inc mov aad xchg ja pop adc outsl jae cmp dec xlat scas out push out sub jbe (bad) es mov inc and iret scas (bad) addr16 stos aas sarl sbb rcl ljmp add cmp ljmp xchg push cmp push sub subl ljmp jecxz cli iret je icebp sub es xor ret pop mov jp cmpsb push iret lcall pushl mov mov ss jmp push (bad) lret data16 pop xor or aam and xor lret add (bad) sbb mov jnp cmpsl xchg dec loop imul sahf fisttp les ficomp test arpl sbbl push (bad) pop (bad) (bad) sub jle repnz ss push mov mov notb stos fist pop pusha pusha repz and pop popa das out es dec adc or decl or stos (bad) mov dec imul jno push or das ss inc in sbb xor push push add and jo sarl xor (bad) sbb jne push fsubrl and adc ds mov inc and sbb push test push (bad) mov ret adc jb pop mov mov movsb and xor test push rcrb iret or dec loopne (bad) lock and inc aaa mov mov outsl sub push xor idivl xchg fdiv add rorl ljmp sub lahf sahf adc imul loop pop jb jnp dec jbe (bad) adc push jp fisubl rolb ret jl jbe add hlt mov pop mov xor pop jp and adc not (bad) jmp sarb subb ret and sbb mov in adc cmp data16 xchg xor cmc (bad) cmp iret adc (bad) lods out or clc daa or arpl outsb adc call hlt cwtl lret inc cmpsl push mov inc dec das (bad) mov test adc dec pushf and jecxz xchg add pop loopne add cmp add pop mov lret insb jb test pop into xchg into (bad) add add (bad) (bad) mov push push xchg outsl insb and aam loope and ljmp rclb lds pop push addr16 add jmp icebp (bad) dec push ds push mov rorb js inc xlat mov or xchg ja nop ja xlat fidivrl pop mov mov adc psubq push add add fst adc data16 and push ret jb push test scas ljmp push xor sti dec or lds mov rol dec (bad) lahf jno rorb cmp es dec jae push (bad) fwait mov out mov push push jmp cmp jmp add push push sarb subb push inc icebp out aaa (bad) fs daa mov (bad) push in jo lahf cs leave and cld sbb fwait pop stc dec sahf out mov out add ret leave push (bad) push or pop mov gs (bad) pop and mov test dec aas mov movsl jle ss add test cmp sbb ret push adc add sbb mov mov mov dec push inc std push ljmp ds inc cmpsl adcb pop inc push jmp pop lret and add (bad) in not aad (bad) (bad) mov mov inc cs fucomi hlt cmp jo out lcall enter ds (bad) int3 cld ret nop pop xchg xchg (bad) (bad) lods cmpsl push ss xor push pop iret mov lock call nop in stos iret lods das mov push xor addl cs pop and aas stos inc push mov and cmpsl push or push pop lret (bad) jg cmpsb xchg cli or lret push cli or scas aad mov pop das mov and ds cmp sbb push push sub jmp gs jg mov notb or ret xchg adc cli pop cmp scas pop push dec and push je loop mov (bad) call scas pop add jb sahf xchg loopne scas cmpsb push insl out xchg jne test out cmp inc xchg push xchg jg xchg mov and push inc jle out clc fldl cmp std orl jg push mov mov out xor pop fs sbb mov or xchg lods and cli and jg outsb adc pop dec aaa xor adc pop jecxz nop lock bound mov inc lds cli mov pushf fcmovnb mov inc jb mov ds outsl sub jg dec fild xchg loopne test push and (bad) pop jp push int3 or arpl sbb xlat sbb mov sub jmp xchg add inc dec inc sub fcmovb test and cmp sbb mov sbb jg push data16 or or fbld (bad) adc add fwait test push xor rcrb cs out push dec movsb test lods pop outsl lods jno scas adc push lea pop mov mov and out and push clc add cmp clc fs add cmp jg je fbstp jbe sub cmp xor addr16 mov repz (bad) xchg and out shll add sahf xchg lea jmp arpl mov (bad) pop les jbe outsb pop jge loope add mov (bad) sbb or pop jb negl pop dec pop test sbbb mov add lock out cli or imul xor pop loop push push dec enter inc js ljmp add in test cli inc sbb fs mov nop jmp leave dec inc xchg pop lock pushf sub loopne or jbe cmpsl (bad) out mov leave inc lods mov dec jle test dec inc inc scas lret and cmp jmp jle xchg dec ja sub insl push ss and arpl jbe into adc mov xor sub cld or js out mov jg mov add mov adc sub push ss sub push (bad) add push add and addr16 or arpl fistp repz pop and pop into outsl out xchg dec shlb jmp mov push sbb dec mov mov ljmp jbe dec fwait imul rorb push or cli fistl ret aaa inc adc add hlt lahf clc mov add mov xor notb add mov push std add push cmpsb addb inc mov lret dec rolb push adc dec bound cli rcl cs daa jle lret pop out push mov sarb dec into cmpsl mov inc or pop or cmp jbe push add imul xchg popf pop inc rol rorl outsl sub and xchg add xor mov clc or stos mov mov rcrl push pop sbb and ds call jp cld daa cmc out addr16 imul sbbb bound out add es ds adc sub cmpl pusha imul icebp lret into sarb sub inc sub es (bad) ljmp add push loope pusha sbbb es outsl outsl mov push ret shrb dec inc mov fs clc push fsubrs aas xor cltd call outsl jecxz (bad) push ss rorl lods and push cli inc test aas out cmp outsb jmp and (bad) dec sbb jle mov inc ret inc add stos add (bad) sub mov cltd sub jbe add loope (bad) je,pn sbb orb or loopne pusha mov jbe mov inc inc add sub outsl and mov in xchg push jnp push adc inc fidivr (bad) int ds lock push (bad) add or (bad) and inc adc or aas lar cmp rol sbb cmpsb rcrb fcom mov jnp xchg ss dec xor scas and add xor xchg faddp jb iret lret in jecxz jb outsl and pusha das inc dec push ss xchg xor outsb jns enter dec mov and iret adc (bad) mov pop ljmp loop sbb jmp pop in sub nop dec mov mov call test lods rcll jp scas es repz dec je add pop xor or mov out dec dec pop js pusha mov (bad) and ljmp push mov pop pop push sbb movsl out dec pop push xchg (bad) ficom jno loope repz (bad) jo addr16 mov push cli call push sub pop movsb sbb jmp push inc js es inc es jmpw xchg call or out fwait ret dec mov inc in xchg test insl enter inc push adc sbb outsl push repz jb push xor push out push pop aam pop dec scas ror adc and je cmp mov outsl es iret mov and or aad xor lods mov ljmp pop or repz add mov js popa push push mov das loop push ds mov adc or ret pop cs pop mov xor jl sub inc aam xchg hlt ljmp das (bad) pop orb mov iret repnz mov add insb ss out add mov sbb cs rol (bad) and in jns mov inc pop je hlt mov or lock clc xchg mov data16 inc sbb mov sub or cli setbe inc jmp or jecxz negl cmpsb xor mov into ljmp dec lret out fidiv idivb test pop fs pop xor inc (bad) sahf rorl (bad) daa es sub inc in ss clc dec out pop pop repnz roll push into mov aam and push pop push ret and jmp or sahf dec mov xchg jg inc popa bsf stos sub cmpsl and push cmp pop xor (bad) xor sub outsl fimul ret cmp cmc add addr16 cwtl inc mov fcmove xchg xor decb loop adc inc ret aaa clc cs repz or and sub add cli jbe aaa pop jle adc loop jg mov xor jl push rcrb pop aas sbb jle rcrb dec call push sbb pop je aam jl xchg or dec mov or cs ret dec mov mov xchg dec test adc stc or xchg in lret addr16 cmp out and cmc dec inc sbb into lods push inc xchg icebp ret mov popa inc push pushf into mov jge imul jmp pop xor jo mov insb push dec mov inc dec inc xchg and and xchg out fwait add xchg sbb pop push je jle or std int adc (bad) jnp jo data16 or loope xor cmp ljmp dec orl mov mov add sub or std xchg push lock ss popf or pop orl and ds jmp cmpb pop outsl mov inc xchg dec mov mov fiadd xor movsl xchg adc sbb jmp push xorl (bad) jae dec sub je sub (bad) (bad) xchg mov xor push js (bad) xor out sar dec fwait jmp insl push dec inc rcll aaa cmc xor mov iret mov cmp fcmove movsl add pop inc movsb jp inc fwait das xchg sti push jle xchg out data16 pop add cmpsb inc push sbbb and mov (bad) ret jp shr fld lahf es sahf cmpsl mov sbb imul cmp and cmpsl (bad) cs (bad) mov mov inc lea xchg xor pop mov adc sub js addr16 mov pop out ljmp push inc aas sbb aas cmp out mov push loope push lock bswap cs lret sti repz cmp incb iret lods insl lahf sti xchg fild int out rcrl mov popl mov dec sub lahf inc pop ja outsl pop mov jbe or std add int3 (bad) jbe push jle add cmpsl mov (bad) cmpsb push iret pop xor mov stos out idivb in int pusha ror sub inc cmpsb sbb sbb mov rcrb lcall testb imul mov mov pop stos push scas push pop inc jl scas xorl push out mov shrl inc inc ljmp int dec push bound movsb jnp out or sbb rcll mov add inc stos add dec cltd loop push or out sahf out adc push out xor lahf popa sahf aam cmpsb fwait lcall xor ror xor inc js jae adc jle test jno or xchg into roll cli push in push mov sbb jbe jle aas aam sub pop sbb outsl test pop jl bswap xabort jns outsb stos push inc or es test pop int rolb rcll fnstsw into inc repz push mov inc sbb pop push mov push add cmp pusha push icebp inc jo ljmp adc add cmpsb push mov push outsl pop push mov push outsb pop add or ret pop or and cmp xor xchg mov out aaa (bad) inc hlt stos mov inc cltd rcrl aas pop and pushf pop movswl adc insl xchg inc outsb add push sub andl aam sub les or and faddl ret iret shr gs push incl lods sbb cmp loop sahf inc mov mov sahf in xchg jp push dec adc xor pop dec js xorl lcall jle or leave jmp loop xor cli cs lock outsb and xor adc push les js push xlat xor jp push add pop aaa jbe insl (bad) ss lret ljmp push add cmpsl push mov xchg sarb cmc or ret mov mov movsb movb add clc sti jb (bad) out cmpsb es inc pop outsb ret dec ret adc jg and setle (bad) mov jbe,pn mov cli jo mov pop loopne test nop sbbb ret movl push dec lret mov mov dec push and xor inc pop test dec (bad) jmp xchg sbb subl pop test mov sub addl es lret xor mov fimul pop stos cmp xchg rclb rclb insl loop lock ja jle aas sub iret cmpsl push xor lcall negl dec scas ss mov or insl bound mov push add div mov jmp gs xor ds push data16 sbb scas push (bad) out adc dec xchg add or or test jg decl push push xlat insb lcall bound loop jbe aad push push prefetch test lods mov pop jl and dec imulb and stos sub jo (bad) repnz jmp add mov pop push mov out pop inc sub pop dec ljmp subb cli or jo mov dec sti idiv pop mul iret xchg sbb cmpsl mov mov repz leave inc loop (bad) jg pop push call scas add das stos add lods (bad) sbb add sub (bad) (bad) fisttpl pop mov test push ret xor sbb pop call adc negb mov loop pop add jo push divb jle xor int and decb jbe imul (bad) sub or ret xchg addr16 hlt cs mov add sub rorb pop arpl xor repnz xchg xchg ds push dec xchg push jmp fidivl ss add je pop sub push jmp mov xchg into jmp icebp mov mov ficom xorl xchg sub fimul and jl jnp pop ds shrl jbe shrl jmp mov jl test stos sbb out (bad) sbb mov xor push arpl int3 cmp addr16 cli pop jecxz cmc mov adc push adc add pop (bad) ds mov loope jbe in cli push out push repnz jmp data16 sub or stos cmc negl dec and enter ljmp lods stc inc fs or mov popa popa push lahf push stos push push pop mov push out out push cli pushf jle repz add push mov adc clc pop js call adc daa mov lret xchg les jae roll loop cmpsb popf inc (bad) in sbb scas sbb test pop dec push pop bswap cli cmp out fild fwait mov stos cwtl or mov scas sar pushl adc push add push push push fs outsb outsb push xchg out xlat and outsl cmp aad push add mov xchg push pop das inc xchg repz js imulb test xor xchg mov or cmpsb sbb inc mov sbb pop into ljmp in leave lds aas lods pop sbbl mov popa cmp mov sub fdivr cwtl rcr xchg leave lods scas inc rcr cmpsb ret rol inc cmpsl outsb aaa xchg add jns mov stos loope mov xor sbb scas push dec aam pushf mov call push pop push aas insb jle lods mov mov adc mov mov push es push out fbstp cmp inc shll xchg push lahf or test scas mov mov dec inc sub (bad) (bad) fisubl sub jle jbe xor jae ret fsts popa mov or dec andl or mov repnz mov cmpsb xchg mov fsin lods push push (bad) into insl out call ret test clc cmp nop cli andl mov ds imull mov push fildll xor cmp xor sub repnz add icebp scas adc (bad) lret pop fsts add xchg mov mov sbb push inc and pop lock sub pop ja mov push insb bound jle lods sub xchg jecxz adc push (bad) or add cmc or cmpsl and cmp add xor ret cld push popf cs fisubrl mov jnp loope cmpsl and cli iret jle std lahf insl sub out sbb loope js mov inc sbb and test and shlb icebp bts lret rclb mov sub inc fistpl push push jns into sub xor sbb and test pop test lahf cmp out push mov movsbl add inc and cmp ljmp pop or ret fisubl jp and mov fsubrl xchg push fadds or mov jbe inc outsl (bad) mov sbb stos cmp push pop loope pusha int add sbb shrb sub push loope inc out sarb jle (bad) (bad) mov inc cmp das out jb pusha add lods push pop pop dec dec stos repnz ret insl test (bad) (bad) push lods js fldcw lods jb fs stc inc mulb xor inc lea idiv (bad) pushl mov lret frstor dec fstl xchg dec (bad) lcall xchg push ret xchg xor xchg add or pop das inc inc inc pop sub mov mov mov mov ret rorb (bad) jbe mov push inc bound push jmp dec sub xor add dec inc dec ret push or adc jle mov jle mov push movb cli aas sahf rol inc xor fiadd jge es mov fcmove ror lcall sub outsb outsl fsubrl aaa ds test (bad) movsb push mov outsb mov cld or dec xchg aad mov dec xchg into pop outsl sahf mov jl mov xchg cmp (bad) ljmp lods and push jbe call push ss push addl sti inc xchg nop push lret or and pop push cmp mov outsl mov dec aad inc sarb cmp push out aam push mov insb push jnp sbb sbb xor add icebp mov lahf into push repz jbe iret jp sarb (bad) cld cmp loop iret mov mov mov adc or or enter sub push (bad) jo mov and (bad) lahf pop out xor or mov mov add xor inc mov dec or test jp dec aam push hlt out push scas cmp add or decl or mov mov cmp dec in outsb push and (bad) pop dec lcall mov add adc (bad) arpl mov subl sbb or fs inc rcrl test ret jb outsl inc sub pop sbb out das std and fcmovbe fcomi jnp inc or push ret addl xchg jmp pop das inc in xchg or aaa shrb xchg inc lock or push push add ret stc lahf outsl inc jne xor pop sahf or mov add adc jp or or into leave jb sub movsl and push data16 cmpsl or push mov rolb andl mov inc rolb adc outsl push lock rolb and (bad) add sub ret rorb int bound stos push rolb xor jnp insb rclb jg fdivrp mov and cli cmovnp adc add jb bound rcrl (bad) sarl xchg test fstl sub cmc fidivr aas xchg mov xor icebp dec mov into xor mov loop or fwait outsl cli jmp push (bad) arpl jmp and sub mov (bad) push mov and ret mov and jnp inc mov jp divl pop adc push or inc and pop add cmp (bad) add aam mov rcpps (bad) bound ret push loope hlt xor jo in xchg ret scas mov negb add xor inc add idivb popf dec int3 lret pop xchg pop cmp pushl inc inc dec pop jp rol pop sbb xor cmp add dec shll (bad) jns,pt jecxz jle loop xchg (bad) aaa push fs push fisttpll lahf dec cmp into jne push push xchg aad or adc jno enter or (bad) sbb loope xor sbb inc rcl push test mov and sahf inc pop dec sub es dec loop inc pop inc adc mov adc cmc (bad) ja arpl js ss ds pop mov or push xchg in cmpl in mov mov fwait adc fdivrl (bad) and xchg rorb pop sarb mov cmp mov loopne sub jle clc and outsl mov popa dec es aad idivl mov icebp or outsl cmpsl mov mov or push pop push es or mov jp fldl jle cmpsb fldcw jb rcll or ss aas and dec cmp mov mov mov out ret outsb cmpsl mov aad testb vrsqrtps add and out rorl (bad) add ja inc sbb inc loope mov sbb mov push fidivl testb inc cmpsb (bad) jg xchg dec add dec jbe dec into mov test push movhps pusha xchg mov add mov outsl mov xchg mov fidiv push jo out cmpsb hlt or test cli and push xor shlb push xchg adc jle push or hlt mov add mov stos and push push push repz stos (bad) popl es loope mov sarl and jmp xor sbb push (bad) xchg mov xchg insl push fwait sbb mov xchg out fwait sbb outsb (bad) xchg and aaa (bad) push mov fiadd inc pusha insb mov pop xlat jb pop sahf (bad) dec or sbb push sub insl imul xchg add or (bad) pop aaa and insl ret jp mov fistpll and ucomiss fwait out data16 jecxz sub insb shl ja adc mov pop add push and fimul mov loope shll pop repz add mov xchg nop push sub mov push cmp shll jle or xchg inc push stos rorb add ss mov mov fiaddl scas jl jmp (bad) mov addr16 pusha cmp ljmp mov popa ret in adc clc ds out out add aad jbe cmp sbb int3 cld into in or ficompl lea out xor mov das add lds jg xor jge inc jmp jl xor mov push mov inc decl cmc push fisttpl cmp cld mov movsb cwtl and jecxz out adc xchg add cmc dec les push orl cmp out xchg ucomiss testb loope jb push sub decb and dec lahf mov movsl outsb dec xor jp dec add ja add sub (bad) pop stos cmp add push jbe stos retw inc push scas lahf jmp mov jbe sahf jg sar jg jno mov and pop dec mov cli es lahf movsl out mov out mov out (bad) mov add and (bad) fild mov fnstsw jp pop ret adc imul loop out sub aam add call (bad) into into (bad) (bad) sbb pop mov shrb mov and fisub pop sbb fimul test mov mov add mov push (bad) push xchg add dec add ja inc pop cmpsb cli aas addb push sbb push rcrb sti mov cli inc fcompl add bound mov push daa push scas dec sbb fist dec ds add push adc xchg fwait mov divb test fcoml mulb xor stos movsl js push into and sti pop and sub xchg inc out xchg (bad) fprem aaa push ss push lahf mov testl xchg sbb icebp rclb sub inc fldt pop jbe inc adc loope clc arpl decb cmp sub inc cmp addr16 out pusha cld push add es sbbl pop movsb push arpl push (bad) fldcw push lock popa adc cmp add (bad) inc dec in clc or pop push outsb out notl (bad) sub cld cmp xchg push daa dec outsb xchg mov pop dec cmp mulb test jge or lret (bad) and pop pop lock jo sub cwtl aaa jbe mov movsl dec pop mov adc insb mov sub ret lds sub (bad) mov pop test lret js cltd adc and lahf ficomp push pop call sbb jmp test (bad) adc iret pop (bad) push xchg mov call sbb (bad) rclb jmp bound out pop add push push outsl mov repnz and adc mov lahf cs mov push dec dec add push adcb cmp xor mov popa adc sub icebp das add dec outsb ficomp aaa jp pop push mov mov jp scas mov pop scas rcrb iret mov mov mov inc push out push ss popa sub mov push in (bad) adc push mov xchg jg cmp inc imul daa outsb push sahf pop popf (bad) xchg mov sub pop test add pop arpl mov cmp xchg aas (bad) inc jp cmpsb jp test xchg cmpl iret fdivrl mov jbe pop je mov xor enter ljmp dec or imul dec add aaa push bound and aaa jg (bad) jle dec or xchg push out lret xchg adc (bad) je adc pop push js lahf and xchg movaps lock fwait mov outsl (bad) fisubr mov cli and (bad) stc popl je mov (bad) mov jle fwait push ja sahf or mov inc jmp outsl outsb xchg ja outsb pop jecxz mov mov add xchg mov lret fdivp pop inc sub push push mov ret addr16 mov fldl into cli cmp push mov push inc stc daa cli call push das xor cmpsb mov das cmpsb inc repz shrl jmp dec mov and add loop jmp pop popa ret (bad) jmp insl ret xor scas aaa mov data16 inc sub int3 mov xchg arpl outsl clc jp ret jns dec ljmp sbb xor daa inc adc and mov into mov mov sbb addr16 arpl sahf inc adc mov add popf push inc or and pop fdiv cltd mov adc dec sub jne pop lock rclb outsb dec jl shrb xor cli adc or cmpsb xor shr repz ficomp cmpsb (bad) mov into gs jb jmp outsb testb js sbb aaa mov xor cs or mov cwtl add hlt scas xor add bound ds mov aam mov or sub leave repz ret mov lods cmp cltd roll or into movsb ss shrb xor out bound mov xor sbb cli push scas out pop push push inc xchg inc inc mov imul cmpsl sbb cmpsb xchg or (bad) inc add mov outsb jecxz into inc ret cmpsl mov repnz lcall jns cmpsl scas lea loopne jns sahf xchg push mulb mov scas aaa lods repnz in inc and cmpsb cwtl scas cmp outsl xor xchg jno scas push stos cmpsb loopne cmp daa int3 jae cmp pop sahf out mov fidivl mov mov jp mov shlb iret in push in xchg in cmp sub js iret neg iret (bad) xchg xor ja bound adcb xchg sahf lret mov (bad) mov xchg ljmp add fmul push sub push sbb adc jb inc pop jnp mov pop mov mov jbe es sahf out sbb scas ljmp dec jl cmpsl divl sahf out jae (bad) outsl scas ljmp pop sub int3 cli std xchg add iret scas push ficompl mov shlb mov xchg or aaa or data16 pop sahf xchg loop jg jbe add add cmpsl jo push repnz outsl pop scas adc lret repz inc cmpsb push shll js pop shrl xchg out add sarl cmpsb sbb jecxz sub lret jae mov inc fdivr aaa mov iret cmpsb aaa cmpsw xchg out incl iret sbb data16 notb jl sub push pop sti pop stos lahf ss dec scas das sbb sub popa (bad) leave jge aad pushf dec in cmpsl ljmp dec in popa or scas jae imulb lret test cmpsb sqrtps push stc push lock test add nop and push mov sbb xchg add je push push in out lods scas outsl pop in cld cmpsl xchg pusha nop dec repz mov sub (bad) push addl push xor cli mov repnz cmp lahf lret mov jmp outsl push inc dec in stc in lahf sahf loope cmp jl mov aaa sti push push jmp aaa xchg or cmp and sahf icebp push mov push pop fldenv add test out jnp sbb mov fwait push into stc push fbld cltd jle,pn pop in loop adc pop jg into cmpl iret dec push aad push test jb dec lock incl mov (bad) test push ds or jecxz push cmpsb imull or pop inc stc lds mov mov mov aaa xchg jg push negl pop stc cs adc cmpsb and cvtpi2ps push es pusha sub lock xchg lods pop loop std repz and stos push mov xchg cli addr16 mov push push adc fsubl es jg ficomp lret out dec out iret jp ficompl cli add lret push push pop mov cmpsl jl bound xlat out ret or dec sbb cmpl sbb jp inc pop cmpb lret or ljmp repz (bad) out ret sbb lret sub lret pop andw sar mov mov shll out fstp push testl push sbb je cld stc jl sar cmpsb hlt jg out test jbe or and fidiv xor repnz and flds decl mov xor lock js or jo sbb (bad) ds pop mov mov jle movsl push lods xchg into gs xchg outsl adc push add mov js add cmp dec lods (bad) std mov push lock (bad) cwtl test or nop out pop fisttpl icebp inc xlat imul cli lahf sub push xchg inc inc cmp push and outsl mov mov adcl jo outsl add push inc jle std es hlt out add andl js outsl icebp lods sub outsb adc push ret inc adc xor sbb lcall mov pop pop int sub ss xor inc dec loope xchg cwtl pop clc ficom mov inc fcoms pop outsb xchg fistp dec jle sarl add dec jb push stos mov sahf adc dec jg pop mov (bad) and into jnp outsl push sahf int mov inc push dec add test movsb push mov or lahf jg movl lcall mov stc adc and insb jle adc je mov xchg (bad) shlb nop lret xor aam or aas lahf sti jl mov dec push pusha lcall loop push test inc gs mov ljmp or out cli xchg adc rcrb pop or sahf pop adc leave scas push mov dec insl push movlps mov mov xlat sahf mov stos stos pop outsb lods addl push xor fisub into faddp cli push sbb setae sti fldcw push scas push mov mov arpl mov sti jnp loope add lret les pop inc push stos outsb ljmp pop xchg mov outsb mov into ds stc mov call sub sar adc pop sub aaa mov or push dec pop call jp out or xorb sbb adc add mov loopne cmp mov jge aam and and das or sti (bad) clc aaa add scas lea sbb jae notl test xor out (bad) jns sub xor inc lock movb inc add sarb out push push outsb inc loop inc dec mov xchg (bad) outsl rep fs cli test sbb test dec lret xor push xor enter add jae pop adc popa xchg jb pop lods scas add adc roll std loope clc lcall inc pop add out movsl lds stos push mov adc pop inc push jb inc insb jb fidiv pop rcrb fdivrs add scas cmpsb and mov loope xchg cmpsl popa movzbl inc xchg ret enter (bad) push pop push adc cltd cmpsb mov dec add mov push fwait and out addr16 add outsl mov pop dec and sbb jecxz push pop cmp and jno mov sbb out es mov das dec mov lret into dec clc call loopne dec or cli cmc jg push lahf sub or rorb add push jo adc adc scas cltd and mov stos fmull adc dec (bad) inc es (bad) dec jl,pn negl (bad) jg js push or ss mov add sahf mov mov data16 fsubrl push (bad) cmp movl ret push mov bound adc lret stc sti jecxz faddl fimul push fdivrp inc fsubl mov mov xchg aaa cmc das test or call inc push jbe jmp push sub mov es rolb push cld add in ret mov iret movsl fisttp jbe adc or pop fwait mov sbb pop inc aaa cld inc sbb push outsb (bad) leave notb pop mov dec jnp push clc inc jmp mov push fs mov addr16 pop jle sbb push mov xor mov mov sbb and mov outsl in (bad) and mov (bad) lcall and fisubl cmp push fucom arpl jmp mov push aad pop inc mov rorb into aas fistpll pop cs dec inc (bad) out inc jmp addl mov (bad) cmpsb ds stc fild mov ja jl inc and jae sbbl xor pop mov out jo das jo cld repnz fildl (bad) outsl push stc in out push popa cli jp mov or fs mov adc push jmp sti ficom loop push cmp jle mov xlat lret cmpsb pop push xlat ljmp aas (bad) fnsave cmpsb stc outsl int mov insb loope jle in cmp sub rcll je push cmpsb dec mov ss out das mov inc out sub add test and out and adc mov loope sub iret scas cld call push push inc sbb mov ljmp mov ficom (bad) lret pop (bad) jae int pop ljmp cltd and inc mov repz imul dec jns mov xchg adc lods add loop orl fwait aaa das ljmp seto dec data16 int3 aaa fistpll push cltd mov lcall mov les scas divb cmp xlat add dec loope xor xchg data16 xchg loope test mov sub loope pop pop mov push or mov jb je in popa cwtl inc mov mov (bad) lret incl call and loope mov (bad) out mov mov (bad) sub repnz xlat aam and pop xor jecxz dec (bad) fcomip add dec inc xlat outsl loop push cld jbe stos mov das cmp push (bad) pop xchg (bad) shll pop adc xchg cmp mov add mov push xchg add or xchg outsl cmpl xchg adc push or (bad) jae (bad) cmp xlat push cmpsb inc (bad) cmpsl mov out push mov (bad) (bad) movb push test aad mov xor xchg into fsin pushl lahf outsb push or inc mov lea push xor or sbb lret mov push loop push add loope mov imulb xchg xchg jb xchg mov cs cmpsl leave imul jnp lods data16 data16 test loopne (bad) pop dec sbb mov inc add push inc idivl sahf jg popl cli add push mov leave dec cmpb mov data16 sub lods lret pop xchg sahf pop mov dec push mov xor int pusha add and leave lahf push pop shr mov sub imul mov jp cmp cmp adc push cwtl aam shl mov mov out and add cs outsl in nop mov fiaddl mov dec xchg jp into inc es lods jo ja dec clc mov outsl inc (bad) push loopne cld imul mov enter lahf fs sarl mov pop mov push lcall mov and mov fwait lock rolb cmpsb pop outsb mov pop sahf sbb xchg sub ror inc adc add inc add insb test jmp mov imul leave es mov clc outsb loopne xorb test (bad) pop addr16 (bad) mov test inc fwait addr16 mov cmp mov push and jne fisttp adc xor dec xchg cs test mov lcall addb xchg add out repnz and arpl je jo or jle enter sub inc mov dec xchg rolb jl call push bound inc push daa push jecxz xor shlb in jle clc xchg ds shrb pop out fs mov setb and mov sub ds jae lcallw (bad) (bad) stos jns daa dec adc sub in xchg jmp mov jae lret cwtl lret mov ljmp xor jnp (bad) add (bad) mull addr16 push les lret cli icebp (bad) outsb test and (bad) and dec cmp cmp cli sti jmp mov sub jg rcrb pop xchg and or and lahf out rcrb outsl addr16 ljmp sub dec ljmp scas subb and inc sub push rorb ja inc daa cmc pop mov cmpsb ljmp add jmp cs mov test and mov inc js (bad) jbe ss mov int3 push scas jmp aas iret scas ljmp mov dec sbb insl scas mov jle popa lds inc out pop add adc jb jbe repnz sub sti aad jmp mov lcall sbb or add cmp addr16 mov add push pop adc test loop push dec inc fs push add popa sub ja movsl (bad) outsb sub orl dec and cmp sbb hlt sbb imul sbb mov mov dec int jl lock mov inc lock add test sub push dec xchg bswap cld xchg rolb enter sahf icebp add idiv xchg push test dec loop pusha xchg fcoml cmp scas lcall push outsl (bad) pop adc pop scas popf inc and jle loope movsl (bad) push sub ljmp shr aam add sub adc (bad) xchg pop stos jle sbb mov jle stos cli (bad) hlt (bad) sbb mov outsb and sbb mov inc pusha inc mov mov sub mov test push loop out mov out mov push mov mov hlt jg mov nop sbb xor cs int incb loop or pop sub sar push pop mov pop leave pop imul jne inc pop scas sahf inc mov cld sar xor mov stc out push lcall xor and (bad) mov add and pop outsl pop test mov xchg outsb pop pushl pushf pop ds jns jg ja (bad) lcall into (bad) cmp xchg aaa sahf sub mov sub push outsl mov pop outsl adc mov call adc ja push pop and popa (bad) loopne hlt rcrl pushf bound mov es jae push out inc inc insl cli jb jns idivl lds inc lods inc add mov es pop fcomi mov cmp sahf xchg aas (bad) push adc aad inc (bad) ficomp pop xor fnstsw dec (bad) (bad) pushl pop cmp add scas push (bad) into pop sub decl (bad) and or cli pop push pop adc push xor icebp nop imul push push pop dec stos daa pop ljmp (bad) ljmp aaa std stos aas pop repnz and nop jns loop push out cmp or add dec inc ret aas inc and cld ret dec sbb out cs (bad) (bad) jne nop pop aaa das ret frstor xchg es rcr xchg nop push (bad) out jbe lock pop adc aam paddd adc xchg fsts cmp dec pop loope ficoml jae sbb sti push push mov sbb aam sub sub (bad) push add sti ficom mov sahf data16 adc xor jg mov shrl cmp fadds sar (bad) (bad) mov repnz jae fsubrs insl sub cwtl sbb jne movsl inc sub es push (bad) (bad) jmp aas ds arpl mov setp ja jl and outsl sahf xor incl shll std pop pop out pop outsb mov fdiv jg sbb (bad) iret lret cld (bad) mov jbe (bad) mov push pop std js maxps gs adc (bad) pushl repz xor stos pop pop lahf push sbb aam pop (bad) aad (bad) (bad) inc pop sbb cmp notl push pop in push cmp stos inc xchg (bad) xchg pop cld stos or (bad) push and shrl sub insb test cvtps2pi jp (bad) lds es mov (bad) push push push adc data16 aas cld dec inc pushl aas les inc shlb aaa fbld in pop idiv call or out fs add test daa sub cmp sbb cmovbe adcl xor rorb dec hlt dec jecxz (bad) int push cli (bad) js adc aad xor pop adc icebp (bad) aas cmp sbb jp pusha fpatan inc mov xor (bad) aam ret (bad) jg dec mov or sbb dec sbb loop test pop push add (bad) mov jbe aad outsb sbb add (bad) (bad) fisttp fisubr lret jnp (bad) jno aam cmp pop cmc jp push (bad) cmc inc mov or cmp add adc cmp xlat xor into iret cmp in adc stos aam pop sbb sub (bad) jmp jnp in cmpsl xlat adc xor pop jmp in nop shrb push (bad) outsl mov (bad) es lret imul sub into clc das js xchg ja clc push mov push ja outsl popl cltd repz lcall jae insl sbb icebp push scas fnstenv cmp and sbb jg (bad) aaa push push mov xor cmp fmull imul retw jecxz mov aas xor (bad) mov loop mov and cmpsb fild lret popa adc jecxz jecxz push ja dec pop jle loop sahf add xlat xlat out inc nop jge xor sbb ret pop xor add leave push push push nop inc pop call dec pop dec xchg add inc inc xchg mov negb jecxz shlb ja fmul mov ljmp and out addr16 out pop aaa dec push adc fist xchg jae pop outsl inc das into adc dec sub cmc pop sbb (bad) (bad) jle add xor or (bad) push fcompl cmp lock pop mov decb loopne stos push (bad) clc out loopne and lret inc into rorl lock pavgb sbb out cmp jnp shrl jbe dec xchg pop rol outsl dec cmp into out cmp cmp iret cmc aad dec jbe cmp scas loope xor cs inc out cmp mov and pop js inc loop iret into cmp lock lock push into cmpsb and les inc mov jle add pop jle push add sahf jbe nop arpl leave fisub aaa ljmp sub aas sahf xchg sar daa into xor bswap cmp cmp sbb cmc push fcomps repnz push mov in data16 inc loopne mov mov addr16 mov add push mov mov loopne push cmp jle lahf or dec mov data16 jnp add (bad) mov leave inc nop sti push sub sarb push aas xchg aad test mov sarb sarl testb mov loopne clc push fidivl adc push popl cs push and into sbb mov cld or adc lds cs push mov push push inc in call loopne push lcall sbb adc jb pop xlat mov and xor dec div hlt adcl outsl lcall fdivrs ret addr16 fwait ret negl or data16 loopne rorl call fsubp pop jp sbb add into pop mov dec xor jnp rcl or push aas push sti dec call cli xor pushf lock jp cmp pushw push and int3 cmp xor leave mov mov stos aad call xor jbe (bad) jae scas push xchg add xchg cmp add push ja push mov push into out mov xchg add xor jae xlat out js (bad) ljmp or sub and add jae cmc push incl mov xchg push imul addr16 push cmpsl iret cmp aas and pop je paddd iret sbb cmp sahf icebp outsl add xlat inc mov sub cmp in cmp push pop add aad cmp cmp mov enter cli cmp xchg cmp test roll pop lahf dec clc lcall je popa pop ss bound pop sbb adc sbb add push imul scas push fwait in cmp adc ds fcomip mov mov jg daa icebp push js (bad) ret cltd nop push mov push ret in inc sub cli roll jecxz jae das (bad) jmp cmp adc adc insl add (bad) in mov loopne cmp lret push bound loop mov cmp aaa loope (bad) (bad) fstps jo jl ds (bad) dec mov or pop push cmc inc pop xor call aaa cld scas pop fidivl cmp sbb iret neg aaa xor dec xor cwtl xchg mov aam dec pop add mov pushl les jne jle ja lds leave xor (bad) mov iret loopne mov and and xrelease inc pextrw js sbb mov xor sahf add pop push and jg cmp mov mov stos shl test aam shr jle cmp inc push inc addr16 (bad) enter pop cs ds lds fsubl xchg adc ret xor pop mov mov jge addr16 cs cmp pop mov inc insl sti jp pop popl and jge cmp cmp jb (bad) sbb roll into pop (bad) js ret imul pop inc lea stos mov es (bad) (bad) mov pop cmp lock aaa mov loope mov xchg ficompl add xor adc xchg mov out sub sbb into loop mov fild sub (bad) (bad) or cmpsb je and mov jle data16 pop push cmp cs aas jg rolb pop pop aas (bad) ja shl add push jbe vcmpps out cmp pop jnp xchg shll fdivl mov into xor rclb add mull lds (bad) pop mov sarl xchg aaa mov mov pop xor scas pop push sti inc pop inc mov sub cmpsl mov dec pop cmpsb jecxz daa outsl bound pop test jle push fidivr sbb or data16 jmp pop inc sub cmpsb into lahf mov mov lcall xor jne out je aas idivb add push xlat into rcrb ret jo sbb outsl test scas push xor iret jb sub mov push iret (bad) outsl cmp add outsl xor lods iret ret mov stos jo push ss movb ljmp mov aaa mov sbb data16 or sahf inc xor push test adc leave mov out pop add cmpsl outsl scas stos loopne andl mov cmpsb jbe (bad) iret out fwait pop ret je ja mov cmp xlat movsb add js jl push sbb cmp lea push lcall iret imul pop push xchg sahf das xor mov pop and add pop inc mov push out push mov repz xlat xchg sub xchg cs cmp jle lds js push xor test imul pop lea push inc adc jecxz inc or (bad) (bad) pop jno sti out ret mul push inc adc outsb mov inc es adc fs (bad) mov push aaa adc pop imul sub outsb test mov outsl cmp push dec pop out stos rorb push push cmp cmpl dec sbb mov inc into gs aam xchg fistpl stc cmp xor pop xchg (bad) out decl push jae popa add adc push jae add decb stos lock out inc inc and (bad) push mov and jmp fbld rcll cmp sub leave or sbb idivl sub call pop in xor lcall je,pt jl jae jecxz test mov dec repz cmp loop mov mov pop out jle push push mov mov push jg sub mov es push (bad) outsl or aad pop mov js dec jmp imul stc dec cmpsl xlat add out aaa es jg jnp cmc adc fdiv scas jge xor sub sub les pop push mov dec bound cmp push imul fmuls ja mov and imulb cmpsb das xor and pop pop xlat push (bad) xlat mov lret sbb out jp test and add xor adc lock add nop fs (bad) adc mov pop aas sbb push cs push leave (bad) jno cs pop pop xchg pop jns aaa or aas pop aas cmp js xlat adc aad aad rol int3 mov pop or lock out adc mov push dec or dec lcall cld push outsb (bad) std cmpsb add xlat sbb push iret outsl xchg push or xchg add test mov (bad) push push mov jle data16 pop mov cmp lock in pop sbb or pop pop insl lea aas mov insb outsl inc dec clc cli jp aaa jle lahf ss incl imul mov push bound push push scas and ss icebp cmpsl sbb adc pop cmp inc or addr16 adc cmc mov cmp push mov cmpsl insl sahf jp sbb push aaa les arpl out inc (bad) ds icebp test test xchg cs xor push dec aas scas mov shrb pop negb push pop jo test cli mov adc faddl nop or inc pop push es adc rcll add adc lock pop and xlat cmp (bad) insb jbe push sub mov es jmp pop pop inc mov adc data16 faddp cs sbb pop (bad) scas daa jp mov xchg sub pop outsl iret or push and push add cmc out fld sbb es loope rcll xchg loop sahf push pop pop and cmp xchg mov pop xor je (bad) pop repz addl adc sub call outsl adc mov pushf push add jae in push rep mov clc movsl jae jae dec and data16 xor xchg cmp ret sub push inc xchg push scas in mov lods data16 mov scas pop dec inc (bad) aas sbb xor in sbb fadds fbstp lock call shrw jnp cmc push in sub sub in add adc das divb xor sbb iret (bad) and mov in jmp mov and pop jne pusha adc rorb fisubl pop add pop mov hlt xchg insl push addr16 fsubs loopne add outsl lcall fistpll cmp pop jbe stc inc mov sbb stos or push aas xlat shll aaa sbb daa dec out imul outsb (bad) (bad) (bad) (bad) jp adcb inc pop jae repnz int jb adc adc jae loop cmp add mov cmp add icebp ret push mov add outsl add mov scas subl push cmpl rol idivb push pop js andl mov mov (bad) aaa push pop pop adc lret outsb cmp jmp cmp xchg adc (bad) cli fdiv outsl js push sub fwait scas pop pop sub into inc cmp aas sub push adc outsl scas rclb sahf pop xor mov sub jle or or das scas xlat push fisttp outsl das in and loop cmpsl ret pop mov jae (bad) icebp push cmpsl and adc out cmc push mov sub adc aad add fwait cmpsl ret push jne jae sbb loopne fildll inc jp jns add bound insb mov (bad) je (bad) jne sub push ret fwait or xlat add subb ret pop fnop cmpsl add loopne addr16 stos or cwtl jg dec mov add and pop sub xor mov push and sti push (bad) fcmovnbe addr16 inc fild push cwtl stos xchg sub (bad) mov sbb out adc dec mov jl,pt inc cmp scas xchg mov push (bad) outsl pop mov xor call dec fsubrs arpl xchg mov jmp push adc inc into mov add adc xor push rclb iret push sbb outsl dec jge jl aam rorl push into (bad) shr js dec mov (bad) lock ret add push cli push aaa lret add jmp outsb shrb leave and out imul mov roll dec add push es and loopne lret testl xchg xor pop pusha xchg aas dec stos daa jmp jne ret negb push addr16 mov call add pop fidiv scas sbb pop inc push roll idivl and roll es push (bad) aam roll inc add cmp aas push adc pop push add cmc mov adc test repnz lds stos pop inc cmpsl adc out pop mov and pop outsb fisubr lret cmp add mov inc aaa je push icebp pop loop data16 sub pop aas pop mov push out jp pusha in stos ret push sarb push mov lock mov testb aas imul popf mov js ret scas sarl jg pop xchg lahf jbe into push out mov inc pop inc inc sub lahf xchg or sub clc mov imul mov jle add iret pop test add in sahf pop out cs imul mov inc adc pop xchg xchg js push mov dec (bad) jno mov lahf (bad) lods add mov cmpsl push xchg jbe jo sbb ret push sub (bad) mov lcall loope jno fbld cmpsl into push clc jno push outsb imul ret (bad) pop jno outsl inc jmp es out mov and (bad) repnz or mov push mov int mov ja inc adc xchg jne mov inc inc mov add clc lock aaa les xchg adc aas aaa adc jle psraw and (bad) mov daa jbe ficoml xchg xchg add and mov aaa enter adc (bad) pop sbb outsl xchg cmp add pop cmp movups scas jbe es adc fimull adc outsl jmp push push push rolb push rolb ret fistpll cmp mov outsb sahf cmp fisubr adc insb ret and sbb ds negb pusha push aaa lret call orb out (bad) cmp pop push mov pop outsl imul xchg push mov mov jle ds out add push aas or fs inc push lock pusha out sbb xor sub es xlat vucomisd daa sahf into pop add pop loope aaa cmp cmp pop (bad) test or push flds inc ret push clc xchg mov cmp lea lret rolb lds sbb xchg push pop and pushw stos imulb movsl or orl mov sarb rorl and cmpsb dec xor pop sub pusha mov pop add (bad) std jle out cmp push lcall and or inc pop sbb cmp push fisubl hlt jg and (bad) cli faddl adc jmp fimull cmp addr16 push loope push ret out mov into or das outsl fild das nop aaa outsl push cs (bad) or int3 mov mov push (bad) test cmpsb adc jmp sahf iret mov test xchg aaa dec (bad) (bad) xor mov inc in (bad) and xor adc popf and lret aad push and pop jb fistpl jb lods xchg js into das push aas mov test shlb jecxz jle rcrl jg or cmp repz mov cs orl rcrb outsl ds cmpsb mov fs es (bad) hlt fild lret loop mov cmp roll ret cmpsb push jecxz pop mov iret or addl (bad) ss outsb sub jbe sti ret pop jmp push jbe push mov pop pop jg push mov inc ljmp scas cmp roll sbbl ret and fwait cmp lock adc push push jae push rcrb mov push push xor out adc or xlat sbb (bad) push add jo add (bad) dec (bad) mov lods xchg and inc push into sub sbb jnp xchg subl bound dec arpl push add movsb xchg daa sub pop sbb aam ja adc mov pop jnp rolb dec (bad) cwtl leave test jnp stos inc jl adc lahf push fwait mov outsl (bad) das or pop add sub repz cmp sbb jp jle popa adc je push xchg sbb cmp jb aam push inc adc roll ficompl pop daa int3 js add inc lret jecxz mov sti and loopne mov inc xchg xor sub bound and inc subb add int3 orb or sbb lahf fwait bound sbb xchg push mov jae pop fimul mov (bad) push xchg movsb (bad) iret sbb scas cmp and cmp inc pop dec pop insb shlb sbb add inc push adc outsl mov cmpsb pop iret cld ficomp dec je mov (bad) mov xor or mov cmp rolb lret push sbb out xchg dec push daa dec pop ret lea inc lock jae push rcr xchg dec or call fnstcw scas and mov sbb out repnz xchg adc push add add outsb xor jge es ror rclb cmp dec ja cwtl dec out pop mov lcall ret pusha lds xor and cmp data16 dec rorl inc or inc out add loopne daa sbb cltd sbb or xor loopne pop lret mov xor mov out call mov pop arpl push aas (bad) dec jecxz andl mov ds sub push push jge data16 xor pop adc push inc and xchg inc sbb inc ret jb pop mov and out (bad) lret mov mov outsb data16 pop (bad) out cmpsl outsl scas insl xor cmpsl loope dec or jno push loope xchg repz cmp mov addl add adc and pop outsb and cs xor cli adc loope jecxz pop dec mov aaa push sub scas jae out mov jae clc xchg lcall daa insl test inc into mov rol inc rorl out pop jg imul js or idiv push mov jbe push pusha dec sbb outsl (bad) cmp add ret push std (bad) push cmp test inc sahf jg mov add sahf shlb push lahf xchg pop mov pop fsubrs push or (bad) xchg bound push mov sarl lock pop jb or mov enter (bad) and jle stos inc push dec adc (bad) push adc cltd mov mov inc movb xchg iret jno imul addr16 sahf test icebp (bad) negb pop xor call xchg xchg mov push xchg iret pop push jnp lods xor (bad) xor jo aad outsl scas add inc js xor out dec jo adc sub or std add fwait xchg inc rcrb arpl mov push ljmp cmc mov fldt gs fsubs pop aad ss repz out xor sub push push dec xlat xorl and mov xlat and sbb inc stos and or mov in or push movsl loopne outsl and mov (bad) lcall pop (bad) dec in punpckldq lds leave xor cmp cs fcmovbe outsl addr16 mov push lock xchg push and lahf mov xchg push add cmp mov adc inc roll fwait mov xchg mov cmp shrb dec out data16 popa ret or daa pop outsl ds les call sarb orb adc inc inc cld cmpsl mov shlb jbe or jecxz cmp movb out cli jo pop frstor cmp mov pop adc dec ja ja jle loope ds loopne,pn sbb (bad) cmp sbb cmp out lahf inc or ror dec xor fwait push call invd arpl dec add lock jnp movsl push inc movsb (bad) les dec orl mov mov jg sbb xor int3 ljmp mov jg int3 inc lahf aad popf adc pop mov mov push add dec out jl inc mov sbbl stos aaa sbb xchg push push into mov and inc iret push cmp enter pop xchg jno add inc repz insb sub scas xchg lods aaa lock inc xor or sbb (bad) call sub test xchg std fwait and sbb sub fisub add in (bad) mov outsb outsl testl cli push test pop adcl dec shr aas daa jae or adc jecxz mov pop outsb xchg test pop sbb cmp in ss sub loopne stos mov cmp xchg sub das add fildll fidivrl ret test into jl cli pop inc mov jg sbb xor pop jecxz pop xor inc push bnd (bad) aas jg sbb fisubrl cmp jbe loope in clc add jg (bad) push pop and jle mov es mov push out add sbb stos imul (bad) aaa add dec dec adc popf sahf into cs add push lea inc lea add pop inc jg loopne ljmp sahf pop jae pop pop out (bad) call incb inc neg insl sti push fs pop int3 cli jecxz rclb jmp lea push or pop (bad) xor les addr16 (bad) incl jnp out sbb mov inc shrb lock jne xchg sti cmpsb adc clc lret mov pop sub mov cs jle cli imul shll xor arpl cwtl pop or mov sbb mov push cs cwtl pop cmp mov cmp ficom fild push xor sti inc mov sub (bad) (bad) (bad) incl push push push pop pop mull rclb mull clc addr16 ljmp testb fimul sub push dec mov lds rcrl xchg daa pop out mov inc xlat lret fimull ret sub lock (bad) sti sbb lcall daa cli les xor (bad) (bad) ljmp aaa std cmc aad mov push add es sub jmp mov add fsub sub cld sub jmp jns rcll xor daa aaa add je jmp and jl cli rorl iret pop xor jb pop xor shrb jle outsl js pop daa movl push xor clc inc out xor daa shll xor (bad) (bad) lcall fisubr fs popa inc enter fcomip dec mov jbe ja fwait push ds and lcall ret xor fmuls leave cs jo cmc pop sbb decl fwait pop xor jbe add jp xor cmc lret cmp clc mov xchg lods inc sbb mov fwait xor (bad) (bad) (bad) pushl aaa fiadd push ret cld xchg jno sub test gs sbb notb fisubrl or clc jo lds sub incl shlb ja or dec rolb mov or sub mov fwait lcall mov inc and push mov sti bound (bad) (bad) mov mov sti aas mov aas setns sub mov ljmp cli mov fcmovb sbb in nop mov (bad) mov xchg ret push rorl mov jmp xchg lods repz in mov aad fcmovu lods or cld stos ljmp stos xchg das mov add dec mov mov push ja outsl cld daa movsl fdivr (bad) push arpl mov sbb call pop cmp and or jbe jne repnz (bad) push inc and mov cmpsb ret daa fimull xchg test out push push xlat stos outsl xor ret int3 incb mov lods or scas xor nop call inc lret mov xor lret out pop (bad) (bad) fild je outsl sbb or pusha mov jb (bad) (bad) lcall cmp adc lahf imul fs cli movl sub mov test (bad) jg xchg mov shr add imul cli (bad) dec dec xor sbb sbb fwait lods dec into sub cmp push (bad) or pop sbb jg std dec fisubl cmp dec or dec fwait jo int and jp movsb cmc mov cmpsb repnz xlat (bad) ja jns aam inc (bad) (bad) out (bad) sub sar js stos jo mov (bad) (bad) xor mov pop mov xchg cld cli loopne mov rcl out (bad) (bad) ljmp stc sti (bad) lcall int pop push dec dec dec repnz (bad) cmp xchg or aam add and push outsl lea cmc in lahf (bad) data16 (bad) (bad) (bad) ficompl shll loope dec push loopne mov (bad) mov dec out mov out (bad) push shl leave test pop clc out cltd outsl (bad) mov loop push incl mov dec aaa popf xchg sbb loope (bad) rol xchg (bad) incl and pop int3 js jae dec mov pop scas js pop ljmp mov mov icebp xor push (bad) lock shll (bad) (bad) js sub push pushf lock push out insb jp popf jns xor inc shr and outsb cmpsl pop adc jge (bad) (bad) push inc inc lret inc mov add adc repnz loope xchg loopne pusha enter dec (bad) icebp sbb clc loopne dec subl dec lods mov pop cld push addr16 test pop mov push imul pop jmp dec jge fisttp cmp dec adc push fs int (bad) mov outsb push outsl (bad) xor adc inc sub inc jp mov jnp add pusha xor jns fidiv (bad) jg dec pop jl mov sbb pushf je add jne repnz (bad) (bad) inc fcomps icebp mov jae rolb pop int3 adc daa std sub (bad) (bad) cmp add mov pop sub std imul leave xchg sub in and cmp movsb sbb (bad) pushl or andb jne or fsubl aaa inc in xorl push enter rclb xor in xor in fcompl inc push jle (bad) cli cmp (bad) (bad) jmp cmp mov adc push gs adc in jl pop inc sub das clc call pop adc adc notb std (bad) (bad) (bad) cmp cmpsl mov fstl push cmpsb xchg mov hlt mov lcall cli (bad) out dec iret fidiv mov push fwait or int or call hlt cmpsb test xchg (bad) or int idiv push ret mov mov addl cmpsb pop push sub add inc imul into push out xlat pop rcrb add lcall sti xorl clc push mov lods push (bad) pop es pop iret mov testb cmp pop xchg (bad) pop sti nop pop push jecxz sbb leave (bad) or cli sub mov pop xchg mov (bad) or pop mov mov cmp dec mov mov enter iret sub cmpsb es cmpsl xchg movsb push cltd out pop cs adc icebp sbb pop cmc inc mov stos jecxz sarl hlt inc fucomip jg mov xor xor push xchg push inc and mov iret pop dec (bad) mov negb dec mov das pop add add bound jge nop out (bad) repz decb adc cmc push xchg leave xor mov add (bad) jle std aad mov adc mov into pop imul cmc ljmp shrb xor data16 dec jmp push je xor outsb fldl sbb clc sub mov or jl cmc outsb aam cmp test imul cmp (bad) je mov test cli insb jb cmp cmovb pop add mov ds ficompl pop xor fisub addl adc push and (bad) lock js lcall daa cmc and and inc xchg std fisubr push repz enter and pusha pop sub inc add push mov xchg outsl incl aam mov xor mov ss (bad) add cmp xlat cmp sbb push daa shlb stos in rorb sub bound call (bad) push inc jb inc ret add test add sub pop inc push dec hlt rcll inc push add add or adc mov xchg push ret leave jns add inc xor (bad) dec lahf cmp dec mov std dec push push add push xchg mov jns gs jbe add add xchg lcall (bad) ljmp inc or ja test fbstp push scas adc cmp or jno cmpsl stos and cli lea pop xchg or pop mov jge mov add popf sti sub fdivrp decl mov lahf jecxz mov sbb pop rcrl add add insb clts mov push js str xorl cmp ss fiaddl add aas test lret mov ss fcmovu data16 lret mov jbe and jne loop aas addr16 mov dec push addr16 sbb addr16 dec add xchg in aaa sbb ret mov sbb mov add imul push jo and add cmp rol adc push inc cs nop (bad) inc inc shll ss insl push or dec faddp mov gs imul xchg inc lcall jae push push imul gs push fimull jns inc xchg gs sbb imul fidivl neg rcrl imul insl outsl popa pop or pop outsl mov sbb push outsl mov push imul dec mov out sub je pop adc mov cmpsb mov rcll stos sbb xlat push rcll xor sbb data16 insb or inc adc adc (bad) test add insl adc and jnp js repnz jns push out inc div lret das push mov jnp arpl push outsl and add lea push ds xchg clc lock push pop cli mov push jno or pop mov add dec mov mov jb sub js pop add iret insw push jae fiaddl or ja push and xor sbb add mov xchg and jae fsubrp push lret xchg popa push insb daa push cmp jo push popa xlat cmp mov adc push jne outsl xlat cmc sbb outsl stos das out cmp daa jecxz xchg pushf outsb sarl jns out fnstsw mov sub popa xlat push sub xlat insl and add add je pop xor popa jae ja pop jecxz inc push pop stos cmpsb mov cmp setg ja cmc adc fs and out push jns push sub bound or pop sub pusha mov mov loopne arpl jnp ud2 pop ret cs fimul add jecxz sti inc sub jns xchg sbb xchg outsl insb inc mov sub and add out scas fnsave sti push aas outsl ss add jge or and out out fidivl xor pop out fdivrs mov ja (bad) mov jo xchg cmp icebp ficomp push xchg mov push mov push xchg add push inc xchg adc adc xchg push jmp jbe sub push adc inc out loopne sbb dec and add jnp cli jle push (bad) push ret cmp iret ja dec arpl or mov or outsl sub mov divl ds in lea jae lret dec adc rcll aas mov addr16 xor roll mov mov add push hlt pop arpl push add inc btr cmpsb jo fisub out outsb cmp pop notl es ret and or sub sub cmp add add stos fcmovb inc ja push sbb dec xor mov ja imul dec iret insl sub pusha sub andl cmpsl xor inc mov stos insb pop jmp and stos pop or fiadd inc ret out mov lds rorl add pop pop adc cmpsb loope adc and add mov mov aaa aad mov dec es pusha lods imul das adcl inc mov ss ljmp mov or (bad) push ja outsb icebp add adc push sub arpl inc inc mov (bad) aaa mov dec out sarl mov inc xchg add mov fsubs popa outsb xchg or xor shlb pop in inc pop mov mov scas ret mov adc (bad) mov (bad) jle mov add xchg sub insb pop add dec ret mov addr16 rol sub push das dec add out jbe imul scas xchg push dec xchg cs sbb sub (bad) ja iret inc xor sbbl mov stos jns or or lret lock (bad) lds and outsb (bad) xor push push fs xor jnp pmaxsw jo inc rol xchg jb lea jno pop imul pop adc mull imul scas push inc bound (bad) mov fdiv mov das cmp dec das pop cld (bad) pop loope dec mov dec ja jbe imul cli push ds jo inc out adc mov arpl loopne mov scas (bad) outsl daa das xlat das push stos push push adc das push or adc call pop pop sub out push push xchg adc arpl stos mov int3 cwtl pop add imul fldt add dec pop lahf pop mov push popa mov leave movl xlat push icebp xchg and mov (bad) mov mov sbb mov pushf mov adc cwtl xchg cmp in imulb fimul pop inc rorl ja aas or or inc subl fnstsw jp popa mov mov scas daa inc xchg push ret and stos sub dec xchg add mov xor loope ffreep or rcrb ja adc sbb xchg lahf ret dec test lods rorl sti pop mov push lcall test jae subl dec pop and arpl and rcll daa stos nop push jecxz (bad) insb inc sbb in popa push dec imul dec mov or outsb adc jmp scas adc daa sub aas ljmp xchg cmpsl jmp ret aaa dec jmp push push jbe push leave and sbb bound jae mov jecxz,pn sbb jb ja jecxz add ja and into sbb jae xchg mov andl push cmpsl cmpsb adc cmp dec enter out loopne xchg xor jne,pn inc push mov push imul add mov fstpl in sbbl push jae or outsb daa or mov ret aas iret inc and loopne sbb movsb pop sti xadd or sbb or and das and jg pop aas jae add (bad) mov scas mov btr setp lock jns push jb imul andl loop jecxz sbb mov mov rolb test add pop dec xchg arpl dec pop data16 fimul bound and dec or lds add ds jnp jecxz lods adc cmp je outsl aas or cmp dec mov mov inc or jne cmpsb and (bad) rep nopl (bad) jbe adc add orb scas lret push (bad) mov pop dec aas cmp pushf loop or mov adc or in (bad) mov and jmp repz iret sbbl lods pusha and xor inc sarl cs push js push pop mov mov mov xchg data16 sub xor cmp sub mov sysret dec mov push fisttpl repz lret cmpsl loope adc imul mov out and fadd or mov pop cmpsl ljmp jmp test push (bad) jbe scas fwait popa push ljmp call and push shll cmp and xchg push (bad) push (bad) inc stos loopne cmpsl das mov popa pop rclb xor in mov inc pop adc or xor add iret pop adc pop pop iret adc mov sbb adc sbb dec (bad) ja das imul lods out inc (bad) cmpsl out adc and jg mov loopne mov push inc imul xchg push or mov sbb mov in cli xlat bound cmp adc pop push inc or stos push popa ret mov jecxz imul daa outsl adcl (bad) rorl xor arpl jae cmp pusha add xlat mov adc xchg mov push push sub pop push (bad) ja mov adc sub push xchg fdivs jbe addr16 or add ret data16 pop push pop xor clc cs pop adc fldt inc xchg push mov popa ret dec mov sub sarl stos push stos (bad) ret (bad) jnp aam mov das pop pop add or and or sbb push lcall popa xchg jp and push pop xlat jbe xchg cmpsl ret xchg ljmp mov add imul pop pop repz mov aam push lea movsb adc adc xchg cmpsb mov mov stos outsl mov iret popa nop pop fild fs imul sarb outsb movzbl loope lret mov push (bad) aaa outsb lahf js cs arpl jo adc add adc mov push stos arpl (bad) adc xchg dec or add popl push or (bad) daa pusha mov or in mov jmp cmp aaa mov sar inc add fwait cmp sahf xor test mov test fist add mov (bad) or cmp pop or fnstsw rorb popf adc or out mov or xor mov outsb insl cmp jecxz dec rol mov push jo decb ret push adc push push dec imul fistpll xor jae fisubl push ret adc lea jo and mov jae mov negb pop adc adc lahf push jne jae push xor xchg js adc add xorl xchg sub adc add dec sti cmpsb push mov sub sbb push xchg movsb testb dec sub xor movsl sbbl adc (bad) push (bad) pop imul int sti mov mov sbb sub fs add dec push pop pusha jge push ret pusha loopne lds push add fiaddl xor loopne sbb inc insb cmp dec add mov outsb jo aas mov jge mov push fcoml dec imul inc call cmp pop mov ss adc aam fidiv shrb jle push js adc lods lods aam push sahf push mov nop fwait pop je cmp inc inc inc insl cld out (bad) cmpsb xchg sbb test sbb daa push iret add and xchg sahf add add inc add xchg insl push pop addl or or mov xor pop bswap add xchg dec or addr16 fnstcw lret add or xor inc add push inc gs jg and xchg leave or mov mov add mov or cmpsb test fadds iret adc sahf loopne cwtl add add pop adc test add and rclb dec sbb ret pusha adc add in or sbb outsb lahf mov popa pop fwait and sbbl ficoml mov (bad) daa das xchg push push imul lahf or jmp test xchg (bad) xor push adc popw or lods inc add shlb mov or f2xm1 add push sbb xor mov or sbb add rol test xor mov mov dec jecxz push inc mov add add xor or pop leave xchg dec add add pop leave xchg add rolb adc (bad) or in adc add insb movsl fldcw adc jns adc mov mov sbb sub int3 xor es cs fcmovu pop popl sbb mov xor push dec gs adc outsl test add lods push gs sub xor and jmp pop mov add iret fildl fnsave dec inc mov sub pop fidivrl inc add sbb mov bound jbe sbb mov add ret sub movb pop roll sbb outsb insb les mov stc sbb insl sbb lock inc pop push sbb inc jae cmp mov inc gs mov or push xor mov jns sbb pop push imul fistp xlat and dec insl sbb jmp rorb cmp or push pop fld xor xor inc and lret (bad) mov fisubl std leave mov add or sbb insb push test or fs mov inc xchg and arpl pop jnp (bad) daa arpl sub inc push push test je scas xor and mov repz inc pop sbb cmp mov or inc jno cltd or and rorl or inc lret ret sbb loopne cmp pop pop pop lret push push or dec stos push mov sbb sbb mov lea cwtl inc add pop inc adc insl mov xor pop dec mov movsl (bad) cmp jne (bad) push movsb mov and sub sub (bad) gs outsl loope jns pop test fdiv adc ret loop xchg adc leave xchg adc (bad) hlt icebp loop dec mov adc outsb inc sbb push pop (bad) pop loope jae add test js push adc rorb fadds pop push aas cs push je add or adc jne lods (bad) inc insl sbb adc jp inc pop sub ret sub in push insl loopne and mov rol mov inc push adc jbe and into and cld mov dec outsl pusha pusha adc add outsl add stos sub add test or outsb sub or sub and push das (bad) roll mov shrb sub cwtl inc dec xchg mov cmp sbb mov mov popf and jecxz cmpsl and fwait lret sbb call sub cmp push addr16 js pusha and out arpl insb imul pop test js (bad) and adc mov loopne and out inc mov push dec push xor test iret inc adc gs mov or lods cmc test imul pop push and aam ficoml insb sbb lods and outsb sbb inc inc cmc je movsl mov fistl in rcrb cltd mov or cmp mov or and jo adc jmp sbb push or inc mov and mov xchg cs call or fsubs or adc push cmp (bad) lods xor out adc aam jo adc xor jbe sub xor sbb sbb mov push and sarl and pop popf and mov adc sub xor test notb jae jmp cmp pop insl lock sub or adc push cmp push pop push inc push cmp pop test gs dec data16 lock ret outsb push inc nop fs dec mov in imul lea cli or sbb gs cmp movsb icebp sbb cwtl and and add sbb push loope or enter inc xor (bad) popf add inc arpl test fs xchg movsb pop lds pushf rorb jge push faddl adc adc insb outsb sbb rol lea mov aaa xor push inc or test push xchg jb or or xchg adcl aam add sbb cmpsb mov loope in and jecxz inc and inc sbb imul gs xchg arpl pop pop add pop xchg sbb lock sub (bad) jo mov sub movl xchg rol mov int or fadds dec adc xor cmp or push aaa cmp pusha andps cmp mov dec imul pop (bad) adc loope sub push pop das stos loop add test xchg rcll ficompl fs int add inc xchg je jne dec fistl imul (bad) xor fsubrl sub push cs or jecxz lret int jae dec or xor add mov sub mov jbe std sub adc and stos sbb lcall jae add fs push and jge outsb in adc or xchg arpl add out sbb imul sub and jmp lahf or fmul jae sbb inc jb inc and data16 test sbb jae rcrb (bad) xor ret (bad) adc push jb cmpsl mov (bad) pop stos (bad) outsl cmp xor mov and sarb pop sbb frstor sbb sbb inc mov ja inc xchg sbb test inc mov lods loopne xor in mov sbb es sbb jbe sub out movsl daa inc mov adc adc rcrb shlb jmp xor mov aaa data16 insl inc cmpsb adc aad mov out mov aam sbb add inc divb mov sub into inc sub inc pop or sub sbb adc and test adc sbb out sbb sbb mov mov fdivl ret (bad) test nop lea adc insb test rol test adc fs movsb push sub inc outsb arpl insl arpl lret sbb mov mov jg fistpl xchg jp insl sbb pop fildl dec jge arpl popf jae aad (bad) rclb icebp test pop testl inc pop push mov repz xchg jnp in inc (bad) and jno cltd nop jne test test mov sbb xor (bad) lock inc fs push imul test mov add jge xorl (bad) sti movsl inc jae lods sub rorb pop mov pop fldenv cmpsl dec das add popf (bad) mov (bad) mov push pop arpl mov inc sbb mov fwait or sub movsb sbb pop push cwtl sbb inc xchg inc in cs test or sbb add imul pop and fimul popf cmpsb dec into pop sub movsl jb push lahf gs and mov lods test mov inc push dec inc and add add add sbb std lcall je push adc lock inc pop xor and loopne cmp xor insb loope mov push inc movups sub mov and push mov dec ret jo in cmpsb cmp or inc dec inc inc scas mov (bad) add and cld lock inc push push or notl in adc (bad) jmp bound or push clc dec add adc shrb fsub aam and lahf je,pn mov push lahf sbb xchg cmp enter pusha add mov gs xchg ja jns jo push jae dec in cmp cmp mov pop and into andb add dec xchg and add test pusha mov lea movl push or jmp nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jb dec add jne mov sub adc adc jmp add jne mov sub adc adc jmp xor sub jb shl mov inc xor je sar mov jmp add jne mov sub adc jb inc add jne mov sub adc jb add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov push dec repnz push call or je mov add jmp call mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp mov push dec add 