xchg pcmpgtd add adc add inc or data16 push data16 or je or data16 add pushfw leave or data16 or pushw add data16 xchg pcmpgtd rorb je or inc push or data16 or data16 or adc adc xchg pcmpgtd inc push mov pcmpgtd jne sub data16 mov pcmpgtd add dec insb push pop adc push ret outsb add test data16 xor adc jne mov data16 or data16 in out push inc xchg pcmpgtd fisttpll data16 imul add add jo inc add pushf sub add add add mov inc add and jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp push call add add add xor add cmp add add add adc pop push inc mov sbb sub sub add add add add and add outsl add add add dec xor add push ja stos dec mov jp or test fcoms dec (bad) push leave inc out dec cmp cmp xor or stos add xchg fbld add bound add adc bound insb jne outsb imul je add add add insl jo imul add and and je add add add add or xor adc add add push add add and add add call push add adc adc add add sub add out add xor add add or test add push or add and add add add sbb add adc add add add add pop and add xor add add add daa add and add add and test add outsb dec add adc add add and push pop add sub add xor add pusha add add add adc add add add lcall jmp sbb bound loop loop loop mov xor mov and bound loop ficompl loop push (bad) ljmp loop or sbb sbb sbb sbb stos sbb sbb sbb adc sbb sbb pop sbb stos sbb sbb sbb sbb sbb sbb sbb sbb sbb imul sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb jg sbb push repz sbb sbb sbb adc xchg arpl sbb sbb sbb push gs insl sbb sbb sbb sbb jo add sbb rorl sbb sbb mov sbb pop push insl jae sbb push popf gs add inc sbb lods adc or mov xchg sub sbbb insl sbb sbb push gs repz push xchg xchg lret push aaa xchg push std sbb std sbb lcall insl adc push rcrb sbb xchg gs push ljmp sbb out add xchg gs xchg xchg lcall sbb sbb xchg push xchg xor sbb sbb adc push xchg in xchg in insl push fs sbb popa xchg loop shll loop popa jno insb push sbb sbb gs push in xchg in sbb mov sbb xchg push push xchg gs sbb sbb lcall xchg xchg push lcall xchg insl sbbl lcall in jno xchg sbb insl sbb loop push icebp fisubl arpl gs add popf lcall push push gs sbb sbb lock popa gs test movsl sbb orl sbb (bad) push data16 test push arpl mov sbb xchg insl sbb push gs leave sbb rcrl (bad) in push gs cli sbb jo sbb adc pusha sbb add sbb std sbb repz (bad) test xchg popf sbb sbb (bad) jae repz mov sbb std sbb push adc sbb push sbb sbb adc sbb sbb sbb sbb dec sbb sbb sbb sbb sbb sbb sbb sbb dec dec pop pop sbb sbb lcall sbb std sbb sbb sbb negb adc adc pop push sbb sbb adc adc sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb jo sbb loop loop add loop loop sbb adc loop loope cwtl add loop loop adc and loop loop add test and and loop loop and and fsubp loop and and loop loop and int3 loop xchg and (bad) loop loop (bad) bound out fsubl ljmp loop loop jecxz loop loop loop jecxz loop in loop xchg (bad) (bad) loop loop (bad) (bad) loop loop (bad) push loop (bad) loope loop loop loop loope loop jg loop in mov in add pop in adc sbb loop loop sbb sbb loope loop and push in jne bound add adc add loop push sbb cwtl in sbb loop pusha xchg push loop in add loop and loop popa or sbb loope daa sbb in bound in inc and sbb loop sbb outsb loop sbb mov add sbb pop loop sbb loop in sbb loop in sbb loop push adc loop gs dec fstpl adc add add add add add add add adc add add add (bad) js sbb loop mov lods bound (bad) loop mov bound (bad) bound and and bound pusha sbb loop sbb loop sbb sbb call sbb sbb sbb sbb sbb sbb sbb sbb pop sbb mov sbb sbb sbb outsl sbb nopl sbb and sbb sbb sbb sbb sbb sbb bound push sbb sbb gs fstpl fisubrl sbb punpckhdq cmp xchg insl sbb sbb push sbb push hlt xchg push popf iret xchg push adc sbb pop xchg lcall sbb js rcll xchg rcl sbb sbb xchg xchg lcall sbb xchg lcall sbb adc xchg lcall sbb xchg lcall push gs sbb xchg gs xchg push popf sbb sbb addr16 push nop mov popf sbb push mov lcall inc adc std push push sbb sbb arpl sbb insl sbb insl sbb sbb lods sbb push repz sbb ja sbb or xchg popf sbb sbb sbb jmp sbb sbb sbb sbb sbb sbb sbb sbb std jmp mov sbb notb xor sbb sti sbb adc sbb and fucom add loop and add and loop (bad) loop (bad) loop (bad) loop iret gs bound jecxz loop jecxz loop jecxz loop jecxz loop jecxz loop loope loop in loop loope loop jecxz loop adc loop adc (bad) adc adc loop nop loop add loop sbb pusha pop sbb loop sbb jecxz sbb jecxz mul loop sbb loop sbb loop sbb adc add and add add add adc add add add lcall push loop jg loop push loop push loop bound (bad) icebp and bound loop loop (bad) cmp loop sbb sbb into sbb dec loop sbb sbb sbb sbb insl sbb inc sbb icebp sbb sbb push lret mov sbb arpl xchg in cli ja adc sbb push lcall add sbb mov sbb popf sbb sbb sbb jecxz sbb sbb sbb loop loop loop loop loop mov loop loop loop loop stos loop loop icebp (bad) and or out loop out jecxz loop in add add add add add sub add xor add pusha add add add add add add add add sbb fcmovnbe movsb (bad) loop bound (bad) loop (bad) bound (bad) lret bound and sub fstpl loop mov enter enter enter enter enter push jnp popf inc sbb mov enter enter enter enter cmpsb sbb sbb cmp enter enter enter cwtl sbb dec sbb enter mov mov mov dec loop sbb in das sbb mov mov sbb std mov outsl xchg mov pop fnsave sbb mov mov dec mov mov loop loop,pt popf mov dec popf mov sbb jge and jge and pop mov mov mov popf pop mov sbb cmp mov dec cmp mov loop mov mov mov dec sbb mov loop popf sbb dec loop xchg sbb std negb dec std popf xchg sbb fstpl ljmp popf sbb mov popf loope lods popf lcall popf sbb dec je xchg sbb jge sbb dec jge lcall popf cmpsl mov popf xchg sub xchg sbb mov popf ljmp push pop loop popf sbb dec sbb pop sbb mov dec sbb sbb std dec sbb dec std dec cmc sbb fisttpll mov dec sbb (bad) dec cmpsb loop dec sbb dec mov dec inc loop dec sbb sbbb sbb mov dec sbb sbb cs sbb dec pop dec sbb loop dec sbb dec cmp dec std loop dec sbb iret sbb dec sbb or add and bound std bound fnsave bound bound ss sbb std ss mov xor dec mov and loop ss mov ss dec popf test jnp push mov ss jge push stos push sbb inc cmp mov ss pop dec sbb pop ss cmp ss cmp dec loop sbb ss sbb ss dec loop xchg cmp sbb sbb sbb frstor xchg xchg bound sbb mov sbb std sbb popf sbb sbb sbb jge gs sbb ficompl pop sbb sbb sbb cmp sbb sbb mov sbb aad cs sbb test mov popf loop mov loop in loop loopne loop loop loop mov mov dec jge adc jge sbb pop loop mov loop mov adc cmp jno dec cmp test dec sbb enter enter sti sbb loop enter inc push std enter enter enter movsb sbb inc pop inc ljmp sbb sbb sbb cmp xchg loop loop sbb or adc adc sbb sbb les adc adc int3 pop adc repnz sbb adc adc adc adc adc sbb sbb adc xor adc adc adc adc sbb and push fsubr adc cmp adc pop adc adc adc adc adc adc adc adc adc dec xor fwait sbb adc adc or adc cmp adc fcoms adc adc adc sbb adc adc adc adc adc cmp sbb adc dec adc adc adc adc adc rcll adc inc adc adc adc adc adc adc adc jnp ja dec sbb adc mov pushf adc adc adc adc adc adc adc adc adc mov adc adc aad adc imul sbb arpl ret adc adc adc adc pop adc mov adc adc inc adc adc inc adc adc and adc adcl adc adc adc adc adc lret mov pop rcl adc adc enter iret or sbb adc adc adc pop adc adc clc adc pop adc adc adc push iret mov rcrl adc adc adc adc mov sub adc pop adc push adc pop pop pop pop pop adc dec adc shl rcl loop iret adc pop out mov adc pop adc adc adc adc notl iret adc pop adc iret adc adc rcll adc adc (bad) iret adc adc adc adc pop adc adc adc iret iret adc pop iret iret adc iret pop adc pop iret adc mov lcall pop pop iret adc pop sbb adc pop adc adc xor iret adc adc pop jl adc adc rcl rcll pusha dec pop inc inc inc iret pop adc adc sbb jg iret iret iret adc iret enter or adc dec iret adc outsb in ror pusha dec inc pusha pusha inc mov pop call lock pop adc and dec xchg scas shr adc cmp (bad) push adc adc adc inc pusha in imul pop sbb iret pop xor fwait js dec arpl adc iret inc pop adc in rcll mov in into adc adc arpl pop pop pop adc adc mov inc push adc mov in pusha in rcll adc adc mov mov iret iret test sbb rcll adc inc xchg fwait mov fcoml rcll fs rcl pusha adc iret into mov lahf lahf iret adc iret cmpsb iret pop sbb iret pop or adc iret iret iret push sbb adc in mov sbb pusha in cwtl push lea adc pop sbb pop pop pop pop iret iret adc rcl push shll ljmp ljmp adc iret mov iret mov lahf mov mov sbb adc ror pop adc adcb ljmp fs icebp lahf out into jge pop rcll sbb sbb pop dec iret adc ljmp pusha fs adc pop rcll into fwait adc pop push pop (bad) sbb sbb pop iret rcl adc loop ljmp pusha ljmp loop dec loop xor stc mov rcl adc sbb and pop pop adc loop jg mov loop loop ljmp loop loop jbe sbb pusha adc das sbb sbb sbb adc loop loop in pusha ljmp loop adc iret adc in imul sbb sbb iret fwait inc inc arpl push pusha lahf inc inc inc lahf adc dec and sbb sbb pusha adc inc sbb das loop mov inc inc dec dec arpl dec dec dec inc inc dec dec inc lahf pusha loop sbb sbb ljmp sbb ja jae inc arpl out dec mov cwtl dec dec dec aaa dec dec inc inc inc fwait ljmp sbb loop sbb rcrl loop mov in jg into mov dec dec mov inc add sbb mov loop sbb sbb sbb in into adc mov dec arpl fwait lahf lahf loop sbb ds sbb sbb scas fwait ljmp rcrl lahf pop iret adc fwait pusha ljmp sbb ljmp scas sbb arpl in lahf iret iret adc aad push arpl lret mov in iret sbb sbb sbb sbb sbb mov mov arpl aas aam rcrl adc sbb adc sbb sbb into sbb adc cs adc inc cmp mov loop sbb xchg sbb sahf fwait iret sbb les sbb jbe sbb fs inc mov sbb loop insl pusha sbb dec pop sbb lret iret stos rcr iret fmul es jecxz xor iret iret rcl aam lret lea adc sbb sbb sbb rcl push rcl iret (bad) xor jecxz (bad) ja mov sarl adc adc sbb xchg push sbb iret (bad) iret iret adc jecxz inc dec arpl sbb scas iret fsubs ljmp sbb sbb cmpsl sbb sbb sbb xlat sbb adc iret ror or mov sbb sbb sbb sbb adc mov adc adc adc adc movlps adc jnp sbb sbb sbb sbb sbb adc adc adc adc inc aas push sbb dec adc adc sbb sbb sbb sbb adc into adc adc lret adc jp adc lret lret adc dec xor sbb sbb or sbb adc lret into lret adc adc adc into iret adc into adc ds es sbb sbb lret jbe adc iret into into iret into xchg adc into dec adc adc adc adc sbb sbb sbb sbb into dec into adc adc (bad) into adc adc iret adc adc ror mov call add sbb sbb sbb lret iret adc iret into into iret iret pop iret iret ror pushf adc iret iret into adc lret sbb ret sbb sbb sbb lret lock and into iret adc adc adc into adc into sbb sbb sbb sbb sbb sbb into adc adc into into into iret adc in into jmp jns sbb sbb sbb loop loop pushf loop xchg loop loop sbb adc loop loop add add loop pusha in loop loop loop loope loop loop loop loope loop loop loop loope loop loop jnp loope loop loop loop loope aaa push loop loop jecxz loop loop loop jecxz loop dec loop loop (bad) (bad) loop inc jecxz loop loop loop jecxz loop loop loop jecxz loop loop dec inc adc (bad) loop sub int3 loop loop loop jecxz loop lret loop add loop shl loope loop loop loop in ret adc loop loop add inc stc ss in adc push loop loop in loop (bad) loop loope loop fwait push in arpl loop add and add bound add loop add loop add loop add loop and loop popa sbb loop xor loop in jae outsb loop loop mov loop popf sbb loop sbb xor std rcrl push std sbb loop std sbb loop in and sbb sbb loop in sbb and dec sbb loop sbb loop fnsave xchg sub add and add inc add add add add add add add add sbb (bad) loop jmp loop loop bound bound (bad) lcall pop and fnop dec sbb mov enter adc mov jnp mov enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter mov pop xchg mov dec loop dec sbb std mov mov mov dec sbb mov imul mov fnsave sbb mov mov cmpsl mov mov loop mov mov mov addr16 fimull popf sub mov mov sbb pop mov mov mov dec pop sarb sbb cmp mov and mov aad mov mov mov dec sbb mov loop popf loop ljmp sbb std popf loop fistp dec sbb fstpl mov out popf dec sbb mov popf les popf dec sbb popf popf loop popf popf mov popf popf dec sbb jge loop jge mov jge dec xchg push popf sbb mov popf mov pop popf dec sbb cmp popf out cmp popf sbb mov popf mov jge dec sbb loop loop loop mov loop dec sbb std dec loop std dec add dec dec (bad) std negl mov dec mov fisttpll sbb mov dec mov mov ss mov dec mov popf dec dec sbb jge add jge mov stos dec dec sbb arpl mov pop dec dec xchg pop dec sbb mov dec mov cmp dec sbb mov dec mov sbb dec sbb mov ss loop dec sbb std mov (bad) std jl dec std ss sbb fnsave loop fnsave mov fnsave dec sbb mov ss dec mov ss mov ss mov ss mov ss jge (bad) (bad) ss mov ss pop ss push pop mov mov ss cmp ss mov ss sbb ss dec loop dec loop sbb mov std sbb sbb mov sbb cmp mov sbb dec sbb popf sbb mov ds sbb mov sbb dec sbb add sbb dec sbb jbe aad cmp mov sbb sbb sub sbb sbb sbb jbe sbb popf jae rcrb dec sbb jge in mov loop dec jge mov rcrl mov loop dec pop loop sbb loop loop cmp loop sbb sbb mov loop enter xchg mov loop dec sbb std enter enter enter enter enter nop mov sbb inc (bad) bound loop dec loop loop loop loop,pt loop sbb sbb loop loop sbb adc adc adc jl sbb adc adc sbb adc adc push sbb pop adc adc adc adc sbb sbb adc adc adc adc mov adc adc adc outsl sbb adc adc inc push adc adc adc adc adc adc adc adc adc pop sbb ja sti adc lret adc in or dec adc rcll adc adc pop adc adc sbb adc adc adc repz adc adc adc inc rcl adc adc pop jp adc push adc adc pop pop stos push adc inc cmp iret mov adc adc sbb xor adc pop ret adc cld adc dec adc shl lret shl inc iret pushf pop pop adc sbb adc adc pop adc pop adc pop pop mov rorl inc mov pop adc sbb mov mov mov adc pop test mov lahf adc jle sbb inc (bad) lahf dec inc push sbb ror pop shl shl dec pusha mov pop sbb adc iret stos adc in fs sbb in adc iret or pop adc iret iret sbb adc ljmp add adc pop sbb stc iret out adc in adc adc inc pop lret fcmovne iret adc pop mov shr in ljmp push popa iret fwait iret pop adc dec xor lcall iret ljmp loop loop pop shl in iret pop sbb sbb loop fwait dec imul ljmp dec in ljmp ret sbb inc dec pusha inc dec andl sbb pusha ljmp sbb lahf mov fwait inc inc dec cmp inc inc lahf ljmp loop sbb cmp pusha iret ror mov dec addr16 mov adc out loop sbb repnz fwait in pop out test in adc sbb sbb sbb lret into mov popa lret add loop sarl sbb mov into stos inc mov sbb mov pop sbb sbb sbb adc jg adc adc lods xchg ljmp sbb lret iret pop imul stos cmp fcmovnbe iret movsb rorl sbb mov cmp adc lahf jg adc adc ror cwtl ljmp sbb sbb adc adc sbb adc adc adc sbb sbb sbb adc xchg adc adc adc sbb or adc lret fxch into into adc sbb sarl mov sbb sbb iret adc into iret into inc adc adc iret adc adc sbb sbb sbb iret iret xchg iret into adc iret jno lret inc adc sbb sbb adc cmpsl into into adc into mov into sbb sbb loop loope loopne loope je loope loop loope loop sbb (bad) loop (bad) loop (bad) loop psrad xchg push jecxz loop jecxz loop jecxz loop loope loop in xchg loop loope loop jecxz loop adc loop adc loop adc pop loop sbb loop push loop add loop sbb insl in loop std sbb jecxz sbb jecxz sbb loop sbb loop sbb loop sbb adc add and add add or add add add add lcall (bad) loop xchg loop bound (bad) loop bound bound (bad) bound bound and adc inc adc enter enter enter enter enter enter enter xor sbb jge ja cld enter enter enter enter enter enter enter enter enter enter jmp loop sbb jne mov enter mov mov pop (bad) dec loop dec sbb std sub mov std mov sbb fnsave mov fnsave aad mov mov dec mov and mov popf fcoms out dec sbb jge loop jge mov adc dec sbb pop mov mov mov fildll mov out cmp mov aam push dec sbb sbb mov iret sbb xlat sbb mov popf mov outsb popf xchg sbb std popf loop std cmp dec std aas dec sbb fstpl mov fstpl sbb mov popf push dec mov popf sbb mov push mov cs dec sbb jge loop jge mov jge dec sbb pop popf loop pop xchg mov pop popf dec popf pop popf sbb ret cmp popf dec sbb sbb popf inc dec sbb popf insb loop dec loop loop pop dec loop dec sbb std dec loop std dec mov std es sbb fisttpll mov (bad) mov hlt adc mov dec push loop dec loop mov dec dec sbb popf dec loop popf dec mov popf dec dec sbb jge loop jge mov sbb pop dec loop pop dec jmp pop dec dec sbb cmp dec mov cmp dec sbb mov scas mov sbb dec sbb mov mov dec sbb jge loop and ss (bad) ss mov or dec fnsave dec sbb mov ss mov ss mov ss popf ss ss mov ss jge fwait sbb pop ss fsts dec sbb cmp ss insl ss sbb mov ss sbb ss dec loop dec loop xchg dec mov sbb dec sbb fstpl mov fstpl hlt loop sbb mov mov sbb loop popf sti or sbb jge loop jge sub sbb pop sbb ds pop sbb sbb mov sbb dec sbb sbb mov sbb cs sbb sbb gs mov loop dec popf loop sbb dec loop lds mov loop sbb pop loop mov loop dec pop aad jnp loop loop loop mov loop dec cmp inc sbb dec sbb enter enter enter enter enter hlt loop mov dec sbb fnstsw les sbb inc ljmp loop sbb sbb sbbb loop loop loop sbb push adc push aaa sbb mov adc adc adc add adc adc adc adc adc adc adc xor adc adc pop adc pop (bad) mov adc inc iret iret ror adc pop dec pop push in fwait adc pop iret lahf inc lahf iret fldenv push les adc pop mov adc aas fs fwait mov pop sbb dec ljmp mov adc inc loop dec dec loop adc sbb inc dec lahf test ljmp xor mov mov lret loop sbb lahf pop fwait out in into pop xchg lea into iret adc push ljmp dec adc adc sbb iret adc adc adc pop sbb adc lret sbb jecxz sbb loop loop loop and loop loop loop loop loop loop bound ret loop out loop out out loop mov add add add add sub add xor add pusha add add add add sbb sbb loop sbb sbb loop loop loop jecxz in in in hlt vpsubsb repz data16 shrl imulb (bad) notb loopne loopne loop xlat in loop loop loopne loop loop loop loop loop loop jo mov loop loop loop loop pop jle loop clc loop loop loope loope aam in mov repz mov shrb push rol rol ja icebp lock rol mov xor stos jecxz ret jmp loop loope sbb sbb loop sbb stc loop sbb sbb loop sbb loop loop (bad) sti loopne push icebp icebp negb push (bad) pop ret rol (bad) (bad) cld sbb (bad) (bad) movb add std ret iret iret int lret cld iret adc in ljmp loop popa loop loop xor loop jecxz jecxz inc in inc call out in dec rol or repz pop inc leave into sbb cld std ret rol les std cmp inc sbb inc (bad) lret sbb lret leave iret sbb mov loopne loopne loopne loop loop loop loop (bad) loop sbb sbb loop out loop dec sbb loop cmc hlt jno adc sbb ret ret shrb repz rol sbb arpl pop sbb lock negb pusha lret leave sbb (bad) pop xchg out out sbb lock sbb std ret (bad) lret sbb ret adc or leave out (bad) sbb (bad) sbb in repnz sbb dec rol lret sbb (bad) (bad) std sbb pop clc stc sbb rcl ficompl loop loop loop loop dec sbb sbb lahf sbb sbb lret leave iret jno div sbb repz rol sbb (bad) lds sbb (bad) pushf sti clc stc sbb incl std sbb (bad) (bad) cld mov (bad) loopne iret int sbb mov int cld xchg ret mov in out in sbb into mov jmp (bad) sbb ret rol ret ret rcrl hlt hlt sbb xchg xchg pusha sbb jmp sti sbb int sbb mov sbb loop mov loop sbb sbb in lret into adc ret cmc hlt cli sbb add hlt sbb push ret (bad) lcall hlt idiv cmpsb ret xlat (bad) and sbb mov sbb lock (bad) les cli cli sti sbb (bad) stc (bad) sbb rol sbb ret inc rcrl repnz sbb (bad) (bad) lcall in repz pop rol (bad) mull sbb cld ret std cld std sbb cli ss jg cmc cli sbb int dec adc int3 rcl sbb sbb sbb loop iret int aas divl sbb enter (bad) sbb int rcrl rol sbb enter (bad) std std xor mov mov cld sbb mov sbb rol sbb xor lret sbb cld std ret iret int3 sbb iret int3 rcrb rcl aad hlt cmc sti sbb imul std fcmovne int3 rcrl std ret rol sbb (bad) (bad) lret enter lahf (bad) sbb sarb sbb leave into shrb sbb sbb sbb xchg std xchg mov rcl sbb leave and (bad) movb repnz ret sbb adc rcrb stc stc lcall cld cld ret hlt sti sbb mov sbb rcl aam adc int3 sbb jns cmc sbb hlt hlt cmc sbb mov (bad) test clc (bad) ljmp iret (bad) push cli cmc cli sbb mov int xlat aam sbb leave clc iret sbb out icebp sbb (bad) into aaa nop sbb sbb sbb loop int jg clc clc sbb stc stc stc adc aam sbb ret sbb ret sbb out out push sbb leave cwtl iret jecxz (bad) lret ret cli cmc cli sbb (bad) jmp (bad) stc cld sbb iret into loopne faddl sbb mov div sbb pop iret int3 sbb pop test sbb hlt cmc hlt sbb lret sbb cld add stc imul sbb sub int3 repz mov sbb leave into adc xchg cmp sbb sbb shl iret int3 (bad) xor mov rcrb mov ret rol into into int (bad) les mov cli cmc test rcl (bad) xor ror movsb movsl stos sbb lret lret rcl (bad) js cld std pop xlat ret (bad) jne aad sbb cld std ret push (bad) mov fucomip sbb enter xlat (bad) (bad) fcomp mov sbb stos mov sbb clc clc icebp sbb (bad) jne sbb leave iret iret sbb cld cld ret (bad) lret ret rcrb int xor sbb imul sbb fcmovnu sbb (bad) mov sbb stc (bad) cld sbb int rcrl lret into into adc pop push (bad) mov lahf ret stc rcrl int3 mov ficompl aam ficompl xlat sub sbb icebp xchg pop ret rol lret inc leave sbb jns mov sbb test mov enter mov mov ret sbb pusha fcmovu push (bad) fstpl sti stc (bad) sbb dec rol enter rcl sarb sbb sbb fcomi fnop ficomp ret insl lret into sbb mov sbb mov stc int3 rcl xchg sbb int rcrl (bad) (bad) cld sbb rcl sbb shrb sbb lret sbb rol sbb shll sbb xor lret sbb lods mov sbb lods mov jbe dec mov xor sbb popa insb push ror mov (bad) (bad) cld sbb mov add sbb (bad) imul sbb int (bad) cmc movsl sbb sbb lods addr16 sbb iret iret iret sbb iret iret int3 jne int sbb (bad) xor cli xchg sbb (bad) fcompl movsl es sbb (bad) sbb mov (bad) aam (bad) sbb lods insb aam cld inc ds iret iret dec sbb sub icebp sbb xchg sahf dec sbb fs sbb and stc mov sub repz pop mov out in xchg sbb rcl rcrb movsl stos movsb sbb mov cmp sbb sbb rcrl int sbb xor lds (bad) aam int lret cmc in sbb stc into ret icebp out xchg std cld clc dec into iret int iret int3 int rol sbb mov into iret sbb enter int3 int3 les aam fistpl fwait (bad) (bad) sbb jp clc sbb mov mov sbb ret mov sbb jbe jge and sbb js and insl in sbb (bad) fistpl les (bad) cld (bad) (bad) lret leave int sbb sbb (bad) popa lret sbb (bad) stos (bad) sbb rcr mov sbb (bad) lret fcompl lods mov rcrl fcmovnbe movsl sbb stos out es mov sbb rol sbb div cli sbb fcmovnu fstps mov (bad) lcall mov sbbl (bad) addb mov imul pop sub sbb insl jg sbb push and into iret jnp (bad) fistp into iret int3 bound int3 int sbb sbb shlb (bad) sbb mov out in jae xchg push sbb bound sbb xchg push or (bad) jne sbb int int3 sbb (bad) (bad) xlat sbb sub fistpl mov mov int insb xchg cli clc pop sbb (bad) popf std sbb je dec sbb popa jb sbb dec pop pop sbb insb xchg dec sbb jne and lahf outsb push sbb mov (bad) sbb rcl aam rcl (bad) sbb adc sbb loop sub mov lods fstps fstp mov sbb cwtl jo sbb mov jae sbb dec adc ret sti sbb lea sbb repnz sbb icebp notb pop push dec inc sbb adc mov ficompl fcomp (bad) aaa cld scas xchg sbb data16 sub sbbl aam sbb fisttpll cmpsb jo pop sbb fwait gs sbb mov (bad) mov rol sbb (bad) enter int3 rcrb sbb sbb fmuls fcmovu fcomps fldl sbb scas mov xor test jo data16 sbb jb inc sbb sub cmp cld std (bad) sbb test inc inc sbb mov mov jno fs push fwait nop sbb mov lock sbb mov mov sbb pop and sbb outsb stos pop sbb fldenv sbb mov jg aad stos sbb int3 int sbb pusha mov ror sbb sbb fnop (bad) call sbb mov int sbb mov inc aaa sbb mov frstor xlat lods push sbb mov xchg inc js push dec dec sbb push dec xchg sbb pop pop mov sbb cwtl xchg mov sbb dec inc jge jb fs cld imul sbb push and push je and sahf imul lods lret fsubl lock enter movsb cmpsl stos sbb popa fbld loope sbb sbb loop rcl pushf fcomp cmpl xlat aam sbb iret leave (bad) sbb dec lods sbb aad mov movsb fistpll sbb lahf xchg adc jae push xchg inc jl sbb insl imul dec dec sbb outsl fs sbb gs sahf sbb jbe imul jnp mov sbb aam mov cmp sbb nop bound xchg bound dec sahf inc sbb vmovq lds lret rcl sbb sbb sbb sbb loop rcl shrb fcomps rolb jno call lcall iret (bad) sbb mov mov sbb mov push dec data16 pop pop sbb and pop jmp jno sbb jne lret ja mov sbb and inc jg push jae gs aaa xor mov sar scas test xchg fcmovnbe inc sbb mov mov daa xchg mov sbb mov leave into adc fcmovnbe sbb sbb sbb loop loope loop (bad) aam mov into leave sbb (bad) mov lods mov sbb leave ror sbb stos movsl movsl sbb add jo,pt cltd test sbb ja dec inc pop push dec sbb and dec inc jge pop ficom dec inc inc out dec dec sbb dec inc inc sbb sub adc xor in repnz test fistp std stos cltd sbb enter int xchg lret iret stos sbb mov mov int3 int3 cs sbb sbb outsb loop sbb pop loop sbb sub aad fcomps (bad) mov sbb scas scas negb mov mov cmp xor and pop pop push sbb xor sub jae dec sbb xor int daa sub xor sub cwtl pop sbb inc clc dec sbb sub cs pop xchg aas sbb mov xlat rcl mov mov rcrl adc sbb rcl aad rcl aam sbb sbb sbb loop sbb (bad) loop sbb sbb loop aam (bad) (bad) fcoml mov mov sbb pop (bad) xor mov and xor xor push or dec dec inc inc sete sbb cmp cmp sbb pop and cmp dec sbb or cmp adc push sbb (bad) mov lahf lods xchg sbb mov fstpl mov test jnp int3 iret jmp pop iret sbb loop sbb sbb loop sbb mov sbb sbb sbb out rcl mov mov adc sbb outsb insl inc dec fnsave int3 test add sbb sbb ljmp mov xchg sbb or cmp push or sbb push or into popf adc or stos mov sbb in in pop aad fstps mov lea jg jbe inc bnd inc and insl jns insb sbb (bad) clc cli mov sbb sbb sbb loop sbb sbb loop sbb sbb loop sbb in inc jl ss sbb inc popf dec mov xchg pop gs sbb push push adc xor mov inc sbb cmp or sbb sbb je and js cmp and sbb adc push push push sbb clc sti dec addr16 (bad) lds mov mull arpl pusha (bad) jne jae dec dec dec inc adc dec sbb aad rcll sbb sbb push (bad) sbb sbb sbb loop sbb sbb loop sbb popf push sbb or sbb cmpsb lea mov xor sbb xchg ja sbb sub js sbb popf xor cmp arpl sbb jbe pop sbb imul push fs sbb sbb sbb sub and in in in fs jo inc sbb sbb loop xor loop fs jecxz push dec sbb pop pop sbb ror into iret sbb sbb sbb loop sbb sbb loop sbb sbb loop loop loope xchg xchg daa pop sbb xchg sbb bound sbb insb inc sub jbe cmp imul pop sbb inc add dec or sahf js sbb adcl push adc jo dec sbb add cmp jmp sbb sub loop sbb sbb loop sbb insb subl xor sbb sbb sbb sbb jmp sub loop lock loop sbb sbb rclb adc push sbb sbb mov jl mov jne sbb jle cmp dec xor popa jns xchg jae sub jge int3 sbb dec sub sbb jge aas sbb and sbb (bad) push jne and sub adc push push in in in call sbb xor loop sbb sbb loop sbb pop xchg xor sub sbb sbb sbb lds sbb jmp sbb sbb sbb loop sbbl xchg push or cltd repz and fbstp xchg sbb fdivl inc sbb jle cmp scas cs sbb shrb or adcl push sbb add cmp sti stc xor sbb sbb loop cmp loop sbb sbb out sub ret adc sbb sbb loop sbb sbb loop sbb sbb loop sbb in lret outsl jno leave or cmp mov outsl ljmp aad popa jb ficomp mov scas xchg sbb fwait jbe or pop aas sbb xchg jne sbb js nop sbb mov movsl lret mov pusha push sbb or mov adc out je sbb sbb loop sbb sbb loop arpl pop sub adc push inc sbb sbb dec sbb mov sbb sbb loop pop sbb loop sbb fldcw loope sbb (bad) or mov push xchg orb sbb out out mov arpl sbb push insb push sbb xlat imul sbb vmovhps add inc sbb scas mov je dec sbb xchg dec pop int xchg push xor sbb sbb loop nop sbb fisttpll push sbb sub loop sbb sbb loop pop sbb loop sbb sbb rcrb xchg sbb leave popf ja sbb xchg cltd push sbb movsl movsl leave sbb notl sbb imul sbb (bad) mov mov sbb hlt (bad) cmpsl sbb (bad) mov outsb sbb inc xchg mov cwtl je (bad) iret mov push sbb sbb sbb loop sbb mov outsl sbb sbb pop pop mov (bad) loop sbb sbb loop hlt sbb loop sbb js sbb push sbb loop in (bad) xchg jge adc fldcw pop sbb lock fistpl pusha nop mov dec jnp sbb mov push sbb out sti (bad) sbb jo adc jle sbbb mov sbb mov bound inc test into repz sbb sarb sbb loop sbb mov jne ja pop pop pop sbb inc inc inc scas sbb sbb sbb loop sbb sbb loop loopne loop sbb test inc mov out jnp ss int3 (bad) stos sbb lcall sbb cwtl pop inc sbb mov push sbb imul sbb sub repnz out sbb (bad) lds sbb lldt sbb ja sub mov imul sbb loop out sbb loop sbb inc out push lea or test sbb sbb sbb sbb sbb loop sbb sbb loop push sbb loop sbb add out stos mov xchg ret ror repz lods or dec jge in in sbb repnz out sbb rcr fstpl (bad) in pop cmp mov sbb ljmp sbb pusha jo insb adc dec sbb lret fadds fisubr sbb loop sbb sbb out mov jge lret sbb mov sahf out sbb sbb mov loop sbb sbb loop sbb sbb loop sbb sbb push (bad) enter stos test cmpsl movsl scas mov lods test lea mov sbb (bad) ficompl dec or lret sbb loope jbe stc sti jl sub sbb int lret mov cmpsl sbb mov ficomp inc insb ret sbb loop sbb (bad) fcomp push push int3 jge xchg add cmp dec dec inc ljmp sbb loop sbb mov sbb sbb sbb loop sbb sbb loop sbb sbb sub orl sbb mov orl lods adc in mov (bad) loope test rorb cwtl sbb orl sbb mov dec sbb cmpsb test sbb fcompp xlat subb push test inc inc jge pop sub sbb xchg pop pop xor inc inc faddl inc nopl jae pushf lods sbb loop sbb sbb stos imul loop sbb sbb sub sbb std loop dec scas pop test mov scas pop rcl mov pop in icebp sbb mov inc jl xchg inc xor ljmp sbb mov sbb cmp ficompl mov mov sbb leave mov sbb jg jo pop pop pop sub sub je int daa sub xchg xchg dec inc out dec sbb sbb loop fs loop cld sbb loop sbb ret loop lea lret sbb dec sbb loop sbb sbb aad jae sar fldcw sbb in add sbb mov std rcll hlt insb jecxz in sbb sarb or sbb jae ljmp out ret mov sbb out test call fisubr sbb sbb sbb sbb loop sbb sbb loop sbb sbb loop sbb sbb loop sbb sbb loop sbb sbb loop sbb sbb loop sbb sbb mov into mov sbb cli dec sbb std (bad) fistpl sti std int3 sbb into jp mov fwait push pop sbb clc inc rcrb sti std iret and stc enter stos cmp std sarl repnz leave sbb aad mov xor mov loop sbb xchg loop lods sbb je sbb sbb loop sbb sbb loop push sbb xchg sbb sbb sbb mov sub sbb loop sbb dec loop rcl inc aad ret sbb idiv (bad) sbb hlt stc lds clc (bad) aam cld (bad) aad rol sbb cld int fcmovb (bad) fcomps out in cmc sbb stc ret rolb clc ret and (bad) iret mov inc cmc cld leave sbb into (bad) (bad) sbb sbb mov aam sbb sbb loop sbb sbb loop sbb sbb loop sbb sbb loop mov shl sbb sbb sbb jmp sbb enter idiv sbb lret shrb sbb idiv and movl lds std pop rcrl lcall sbb (bad) iret mov sbb (bad) jns sbb ror sbb sbb sbb sbb loop sbb sbb loop sbb sbb loop sbb mov ficompl sbb aad sbb loop sbb sbb loop sbb sbb loop push nop loop (bad) (bad) mov sbb fsubrl mov adc movsl sbb int3 int3 mov sbb in lock sbb (bad) (bad) rcrl rol sbb enter push (bad) stc roll lods adc sbb sbb sbb loop sbb insl xchg sbb sbb ljmp sbb sbb loop sbb sbb loop sbb sbb loop aaa sbb loop sbb sbb imul cmpsl sbb clc add sbb mov bound enter fldenv sbb rcr lods sbb xor sbb adc into sbb cwtl inc mov test mov fadds (bad) leave fistp inc fsubr push popa sbb loop xor loop sbb sbb push xchg sbb sbb loop sbb sbb loop imul loop sbb sbb loop pop pop loop sbb sbb cmp shrl sbb (bad) jbe dec iret aad sbb lret sbb cmp cmpsb sbb clc ret cli inc sbb aad mov sbb (bad) int js jae inc mov mov iret sbb (bad) into mov repz sbb sbb loop sbb sbb sbb loop sbb cmpsb loop sbb sbb loop mov loop sbb sbb loop das sbb loop sbb sbb negl into mov sbb nop pop sbb mov int sbb enter into sbb xchg xorb adc cmpsb mov sbb scas (bad) rcrl iret xlat stos sbb aad mov into (bad) movsl sbb lret (bad) test out sbb sbb loop sbb sbb loop mov sbb loop sbb sbb loop and loop sbb sbb loop sbb sbb loop cmpsl jbe sbb sbb sbb aas (bad) int nop fcompl ror sbb fisubr stos sbb (bad) enter das (bad) xlat movsb sbb roll sbb jo ficompl std (bad) rcrl into add aam (bad) int pop (bad) rcl shll sbb and sbb hlt sbb loop rcrb push sbb sbb loop jecxz lods sbb sbb sbb loop repz loop sbb int sbb sbb sbb loop sbb sbb ljmp test mov movsb lods lret push ret enter enter enter (bad) lods sbb xlat rcrb mov sbb aad in rcr mov pop (bad) int3 mov sub pop leave jl (bad) int3 cmp shlb inc sbb sbb sbb loop sbb sbb jle sbb imul sbb sbb loop sbb in loop fucom push add loop in loop mov aaa loop loop loop in loop loop loop loope push and loop loop loop and loop loop loop loop,pt push test loop and loop loop loop (bad) jecxz loop loop loop jecxz loop loop cwtl loop loop (bad) loop into jecxz insb (bad) int3 loop loop loop (bad) loop loop loop (bad) loop loop push loop mov loop jecxz loop loop loop movsl loop and loop loop and loop loop loop add insb loop mov adc loop loop loop lret test loop in loop sbb loop loop loop jmp xor loop and loop arpl loop (bad) loop add cs add loop (bad) loop add loop (bad) loop add or loop add loop and loop add loop and loop and jmp in popa loop sbb loope loop and (bad) (bad) in loop add loop in loop sbb pop loop sbb sbb loop std sbb loop std sbb jmp jp loop sbb sbb loop in sbb loop in sbb loop in sbb loop std sbb loop fisttpll push sub add and add inc add add add add sbb sbb jecxz loop sbb loopne jbe in xlat jl lret xchg ret div cmc cmp repnz loope loope loop loop loop dec stc loop loop movsb mov push loop das movl aad nop jae rep dec inc adc rol inc sub int cli stc imul (bad) pop in int3 fdiv push loopne push mov loope loop loopne sbb sbb loop sbb cli aaa out jmp (bad) sbb (bad) lds cld std leave sbb ret sbb into int3 rcrl shr in ljmp xor adc mov sbb rol sbb rol sbb ret rol ret sbb (bad) sbb out in mov loop fs outsl loop sbb sbb loop xor cmc (bad) sbb (bad) lcall std std ret div sbb ret ret clc clc lcall cld cld popf sbb out enter into sbb ret test sbb rol sbb pop (bad) lcall cmp clc sbb stc stc lcall clc clc stc add into iret sbb lcall loop sbb sbb loop int3 lods sub (bad) ret sbb lret leave (bad) sbb std ret ret sbb (bad) (bad) les ret rol ret shr sub lds push rcl sbb (bad) std ret int3 (bad) sbb lds lret push ret sbb xchg mov std mov sub (bad) aam sbb sbb sbb out rol sbb into add lret sbb stc cli stc sbb iret int3 int mov sbb sti mov movl rcl inc sbb div int3 sbb stos mov sbb mov sti sbb (bad) je sbb rcl roll int sbb dec ret into iret int3 out sbb sbb out mov pop movsl mov sbb into iret and les negl int rcrl or (bad) lret ret rcr lret iret push int rol sbb stc leave into sbb mov adc lret lret mov sbb int3 int3 rcrb (bad) iret mov int3 int mov sbb xlat jnp rcl and fcmovu fcomps lock lock rorb int3 iret dec sbb rol sbb rcl rcrb xlat js sbb icebp icebp jne aam std sbb test mov (bad) xchg fwait sbb cmpb ret sahf lret sbb aad fiaddl hlt hlt cmc push stc stc mov sbb sub sbb mov dec (bad) rol sbb ror iret sbb aad ficompl icebp mov sbb fistl iret sbb rcl rcrl sti sti clc sbb cmp sbb xchg pop dec je sub icebp bnd stc rcl (bad) sbb jae (bad) mov sbb inc rcrb (bad) (bad) lcall lret pop lret cld (bad) aas ret rcl ret (bad) stc sbb (bad) sbb xlat aam sbb ds clc sbb (bad) fcompl stc cld fistpl jecxz lea or mov sbb xorl rcrb leave enter sbb sbb popa and imul mov jnp lods mov push sbb leave (bad) std sbb cmc movsb movsl sbb cld cld ret cmpsl cmpsb sbb rol sbb rcl aad jae inc sbb lods lcall push and sbb jb pop sbb int3 iret leave adc (bad) or fcmovu sbb insl sbb sbb xchg jne fistp fsubl sbb fwait pusha push sbb imul dec repnz in sbb mov jp sbb test movsl mov cmp add lods inc mov sahf addr16 dec sub sbb fwait jecxz sbb rcl ret sbb xlat aad sbb sbb sbb fstp stos push test scas scas scas sbb (bad) lock addl pushf pop sbb and dec sbb jle jno jnp jb arpl je sbb stos cmpsb mov mov cmpsl les mov sbb xchg gs sbb int3 pop lds int3 repnz mov sbb sbb out fnsave rclb lret aam sbb mov fcompl sbb pop pop push leave dec dec inc sbb dec orl insb outsb sbb popa pushf lcall jmp scas sbb mov jns sbb imul aad rolb aad aad mov out sbb sbb cltd fcmovnu fstps cmpsb add sbb movsl cmpsl rcrl and pop sbb pop push lods sbb push dec dec sbb push dec jle and sbb cmp push sbb data16 (bad) cmpsl movsb sbb jmp mov int fucomip sbb int3 int cltd sbb sbb sbb loop sbb jno mov mov sbb rcl dec sbb or sbb aaa xor sbb frstor ficompl sub pop pop sbb aaa and cmp sbb fcomp xlat push (bad) mov sbb (bad) rcrb (bad) xor mov fistp jb loop nop sbb mov fstp mov push sbb sbb xor sbb mov cmp dec push outsl xchg lahf outsl pop sbb mov ds sbb adc or mov test adc jp push imul stos movsb mov jmp sbb lods loop sbb sbb loop sbb sbb loop out test xor sub sbb sbb movsb xorb push and sbb sbb pop sub sbb adc aaa xchg pop sbb sbb jg arpl das out out in pusha rcl rcrb mov jns insl push pop pop xor sbb pushf xlat test pusha sbb sbb pop xchg sbb sbb loop sbb loop sbb add mov dec nop sbb arpl or dec xor jno xor xchg sbbl cmp sbb mov cmp push adc jmp sbb sbb loop sbb jne cmp cmp sbb outsb sbb scas sbb loop or sbb std mov jb sbb outsb inc sub dec sub sbb outsl dec cmp add xchg dec das or daa or lahf js sbb sahf scas inc or xor push jle lock sbb sbb push loop pushf sahf jmp push dec dec sub xor loop sbb add sbb sbb sbb and out mov sbb mov jne sbb push mov mov sbb movsl and sbb mov mov sbbb sbb sbb sbb sbb loop gs add ja (bad) ss sbb sbb sbb loop sbb sbb fdiv cld mov enter and dec scas mov jbe jne sahf sbb scas popf (bad) sbb lahf je sbb xchg mov and adc test lds sbb dec dec jg mov inc pop sbb sbb sbb loop xchg xchg jmp xor xor mov sbb loop sbb sbb loop sbb sbb loop stos mov repnz sbb mov jbe sbb or popa sbb lahf inc gs xorl stos sbb inc dec pop sbb (bad) pop lock sbb sbb loop sub sbb sbb hlt sbb loop sbb sbb loop sbb lods in jns sbb in clc icebp imul sbb lret sbb xchg int mov sbb lock notb pop dec js cmpsl cmpsl cmpsl sbb lods mov sbb loop int loop mov or lret sbb scas sbb sbb sbb loop sbb sbb loop sbb xchg mov cld inc jb xchg scas test sbb xchg cmp loope mov movsl mov sbb lret ror fxam cmpsl sbb fnop (bad) sbb rcr xchg out jnp sbb ljmp and sbb inc ret sbb loop adc xor sbb sbb sbb loop sbb movsb stos mov mov scas mov int3 into aad mov sahf sbb div push sbb lret in std sbb mov lret sbb mov mov sbb scas push bound inc dec xor cmp xor jo faddl sbb sbb sbb loop sbb sbb outsl sbb mov sbb test rcr mov mov into sbb xchg lock sbb out jecxz sbb mov insb sbb push cmp fucomi cmc movsl sbb enter lods add sbb outsb insl outsb call push push push xor sbb sbb sbb loop sbb push loop jbe loop sbb mov stos sbb sbb loop vpavgw (bad) fidiv cli ret lock lret std int3 sbb in jmp fistp mov repnz sbb sti ret xlat sbb repz out sbb sbb jp loop sbb sbb loop sbb sbb aam sbb sbb loop sbb sbb loop sbb sbb out clc les (bad) aam (bad) leave fistp mov (bad) aam imull les mov lds icebp sti rcrl enter rcl sbb sbb sbb loop sbb sbb loop sbb sbb loop sbb loopw sbb pop loop jnp loop sbb fdivrs (bad) iret mov sbb (bad) iret mov sbb adc sbb and rolb movsb sbb (bad) cmp sbb into aad pop inc fnsetpm(287 sbb sbb sbb loop sbb sbb loop sbb sbb loop pop xchg loop ficompl loop sbb sbb in aad sbb sbb and aad sbb (bad) sbb ret lret ret mov sbb iret aad sbb std (bad) rcrb cld push fdiv dec sbb xor sbb sbb sbb loop sbb sbb loop mov loop sbb sbb loop sbb ljmp fdivl sbb rcr scas stos rcr scas sbb (bad) enter fnsave sbb enter aad mov in shll adc js mov loop sbb sbb push sbb sbb loop sbb sbb loop sbb sbb loop sbb sbb out lret mov cmp pop mov lret (bad) stos sbb lret fildl lret mov sbb aad sbb (bad) stos sbb enter jecxz adc (bad) stos cmp repz (bad) shlb pop sbb sbb sbb loop sbb sbb add lcall and loope loop loope loop jecxz loop jecxz loop jecxz loop jecxz loop fbld loop (bad) call sbb bound loop and loop add loop adc loop xor loop push loop adc loop adc loop adc loop adc push pusha push loop cltd sbb loop sbb loop sbb sar sbb jecxz sbb jecxz sbb loop sbb loop das loop sbb sub add adc add and add add and add jnp out out div cmc pop ret xor sti stc xor dec sub out loope loopne loopne jmp xlat jbe divl xor ret ret pop hlt cmc pop in in loop loop (bad) iret (bad) (bad) ret sbb cli xor jp ret rcrl lds sbb ret sbb out stc (bad) sbb shlb mov shl iret mov cwtl into int repnz fcmovnb ret sbb mov mov int3 rcrb mov sbb clc (bad) cld sbb iret imul adc iret int (bad) (bad) push and stc icebp sbb lret lret iret int sbb mov sbb rcl aam adc xchg sbb ret sbb xchg iret int3 push enter rcl mov sbb mov int3 rcrl rcl rcrl aam fnsave xchg bound lahf pushw aas adc leave lret lds (bad) fidiv mov xchg dec adc jp sbb adc sbb jge jo lea mov insb jns sbb adcl fldenv aam fdivs aam jo inc (bad) xlat sbb and sbb push dec mov jne and mov mov (bad) fldt sbb into int3 int (bad) xlat aam shrl loop fsubl divl sbb add sbb dec push push sbb cmp adc fstp fstps out pop mov test out sbb sbb loope pop xor aad lahf sbb cmp pop sbb dec lds sbb cmp adc dec inc inc rol (bad) out fwait enter push dec daa xchg out mov sbb sbb icebp out sub adc xchg imul mov and insb xchg cmp inc or ljmp insl outsl imul adc sbb loop cmc fsubl xchg imul mov data16 sbb arpl dec sbb arpl adc sbb mov sbb sbb sbb pop mov push sbb xchg adc test stos fstps movsl mov adc (bad) mov gs fsubl and adc inc or sbb out loop sbb stos mov fsubl sbb (bad) xchg xchg pusha mov movsb stos (bad) cmpsb mov lods ja jge (bad) xor inc push push push (bad) sbb sbb sbb loop (bad) aam repz int3 sbb ljmp sbb in sti sbb repnz int sbb sbb sbb push sbb sbb sbb mov shll sbb std rcl stc rcl (bad) sbb and fadds jbe jno inc sbb sbb loop xor sbb loop cmpsl fucomip (bad) int and fisubrl rol int3 frstor lods sbb int3 mov adc int3 mov loop sbb psrad jecxz loop loop lahf loop iret sbb jbe xchg sbb loop lcall and stc sbb and lds sbb aad add clc sbb and add insl jo imul or add adc add add jle add inc add add add add inc add add add inc add add add ljmp cwtl ljmp dec ljmp or inc add add add jmp add sub add add add jmp add shr inc add add add add cmp inc add add add out add add add add add inc add add add out add xor add or add add mov inc add lock add (bad) decl add add add add add add jp add jne add inc add add xchg add xchg add add add add jo jb outsl jb insb gs add gs popa addr16 gs add jb je outsl add add add sbb inc add add add inc add (bad) (bad) incl add add inc add mov add add add inc add inc add add add out add add add add add add add add mov inc add mov push ja add add sbb test push add outsl add jb popa add and inc add insb add jae and sub js cmp add add add add sub add pop add jb outsl add out add out add pop add add out add (bad) (bad) incl add add add add ja add jmp inc add (bad) (bad) incl inc add js add add add jbe add inc add inc add inc add add add incl add fisttpl and (bad) incl add cld mov add add add clc mov add incl add push sub add add add inc add add add inc add inc add mov add adc add add aam inc add add add add push pop sub mov dec mov jp or test add add add add arpl add add add add push add add insl gs inc ret jp mov lea add add add add add add add popl pushf add add add jle push inc cltd adc repnz add add add sbbb add or add add add inc add add add add loopne,pt pop fbstp inc mov loopne outsl add add add add add add add add add pop bound cmp add push add add push scas pop out incl adc test movsl aad add add sbbb add add add add jl inc add add or or pop add inc mov sub iret mov add add sbb add or add add add inc add add add add add leave (bad) xor dec mov insl arpl push add add add add add add add pop pop inc add add push add add mov movsl lahf iret aas mov roll add add add add add add add add add mov inc add add add orb dec bound pushf fsub call or add sbbb add or add add add dec inc add add add add lret push xor sbb mov sbb add add add add add or add add add add push add add jnp js mov aas fbstp add or add sbbb add add add add sbb add add add daa mov sahf inc test inc xchg inc or add sbbb add add add add movsb inc inc add add enter mov sub es add or add sbbb add add add add push inc add add add add sbb inc add add add add add (bad) (bad) incl add add jecxz add inc add add add rorl add add add add testl je inc add add add add add add inc add add add add add add inc add add and mov add inc add clc inc add adc xor add int3 out inc add add add inc add test and inc add add add adc cmp add int3 out inc add add add jmp inc add add add adc cmp add int3 out inc add add add mov inc jmp inc add add add adc inc add add out inc add add push mov inc jmp inc add add inc add add add out inc add add add test push clc inc add add add adc dec add add out inc add add add add add mov inc jmp inc add add add add out inc add add add add test fs inc add add add adc push add add out inc add add add add add mov inc jmp inc add add add add out inc add add add inc add test jl inc add add add adc pop add add out inc add add add inc add test mov inc add add add adc pop add add out inc add add add mov inc jmp inc add add add adc pusha add add out inc add add add mov inc jmp inc add add add adc add add out inc add add add test int3 clc inc add add add adc push out inc add add add mov inc jmp inc add add add adc insb add add out inc add add add add test in inc add add add adc jo add int3 out inc add add add jmp inc add add add adc je add int3 out inc add add add lea inc jmp inc add add add adc js add int3 out inc add add add inc add test or inc add add add adc jl add int3 out inc add add add test adc inc add add add adc addb add out inc add add add add add popl inc jmp inc add add add inc add add add add test xor inc add add add adc mov add int3 out inc add add add popl inc jmp inc add add add adc mov add int3 out inc add add add inc add test dec stc inc add add add adc nop add add out inc add add add jmp inc add add add adc xchg add add out inc add add add nop inc add test insb stc inc add add add adc cwtl add add out inc add add add xchg inc add test jl inc add add add adc pushf add add out inc add add add test mov inc add add add adc mov out inc add add add add add xchg inc add test pushf stc inc add add add inc add add add add test lods stc inc add add add adc test add int3 out inc add add add jmp inc add add add adc lods add add out inc add add add add add inc add test enter add add add out inc add add add inc add test fdivr inc add add add adc mov add int3 out inc add add add test loopne inc add add add adc mov out inc add add add xchg inc add test call add add adc mov out inc add add add add test clc stc inc add add add adc rolb add out inc add add rclb add inc add add inc add add add add out inc add add add test and inc add add add adc enter int3 out inc add add add jmp inc add add add adc int3 add add out inc add add add xchg inc add test inc cli inc add add add adc rolb add int3 out inc add add add inc add test pop cli inc add add add adc aam add int3 out inc add add add test push add add adc fadds add int3 out inc add add clc xchg inc add test je inc add add inc add add add add out inc add add push xchg inc add test cmp add add inc add add add add out inc add add add jmp inc add add add adc in add int3 out inc add add or inc add test pushf cli inc add add inc add add add add out inc add add add inc add test lods cli inc add add add adc in add add out inc add add add cwtl inc add test sar add add add adc lock add out inc add add add cltd inc add test int3 cli inc add add add pop add add add out add (bad) (bad) incl add add add add add jmp inc add (bad) (bad) incl adc clc add add out inc add add adc test loopne inc add add inc add add add add out inc add add add add add add test call add add adc add add int3 out inc add add add lcall lock inc add add add adc add add int3 out inc add add and inc add test clc cli inc add add inc add add add add out inc add add add add add jmp inc add add add add int3 out inc add add add fwait inc add test adc inc add add add adc adc add int3 out inc add add add pushf inc add test sbb inc add add add add add add jle add inc add inc add inc add inc add inc add inc add inc add jg add jle add inc add inc add inc add jg add jle add inc add inc add inc add inc add jle add inc add inc add inc add add jle add inc add inc add inc add add jle add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add addb jle add inc add inc add inc add inc add jle add inc add inc add inc add inc add jle add inc add inc add inc add add jle add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add addl cmp inc add inc add inc add addl cmp inc add inc add inc add inc add jle add inc add inc add inc add add jle add inc add inc add inc add add jle add inc add inc add inc add inc add inc add inc add inc add (bad) inc add jle add inc add inc add inc add (bad) inc add jle add inc add inc add inc add inc add jle add inc add inc add inc add inc add jle add inc add inc add inc add add jle add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add addl jle add inc add inc add inc add inc add jle add inc add inc add inc add inc add jle add inc add inc add inc add add jle add inc add inc add inc add add jle add inc add inc add inc add inc add inc add inc add inc add test cld jle add inc add inc add inc add test cld jle add inc add inc add inc add inc add inc add inc add inc add add jle add inc add inc add inc add add jle add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add test cld jle add inc add inc add inc add inc add jle add inc add inc add inc add inc add jle add inc add inc add inc add add jle add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add xchg cld jle add inc add inc add inc add xchg cld jle add inc add inc add inc add inc add jle add inc add inc add inc add add jle add inc add inc add inc add add jle add inc add inc add inc add inc add inc add inc add inc add xchg cld jle add inc add inc add inc add xchg cld jle add inc add inc add inc add inc add jle add inc add inc add inc add add add inc add add add (bad) (bad) incl add add loop add mov add add add mov or inc add add add add add add add adc inc add add add popf inc add add add mov push movsl inc add add fs mov test inc add adc xor add int3 out inc add add add movsl inc add test movsb icebp inc add add add adc cmp add int3 out inc add add add cmpsb inc add test mov inc add add add adc cmp add int3 out inc add add add test mov add add adc inc add add out inc add add call jmp inc add add inc add add add out inc add add add add test aam inc add add add adc dec add add out inc add add add jmp inc add add add adc dec add add out inc add add add cmpsl inc add test call add add adc push add add out inc add add add inc add test clc icebp inc add add add adc push add add out inc add add add test add inc add add add adc pop add add out inc add add add test test adc inc add add add adc pop add add out inc add add insb test test sbb inc add add inc add add add int3 out inc add add add test test sub inc add add add adc add add out inc add add add inc add test xor inc add add add adc push out inc add add add jmp inc add add add adc insb add add out inc add add add stos inc add test push repnz add add add adc jo add int3 out inc add add add add add stos inc add test pusha repnz add add add add out inc add add add test insb repnz add add add adc js add int3 out inc add add add stos inc add test test inc add add add adc jl add int3 out inc add add dec lods inc add test xchg repnz add add inc add add out inc add add add add add jmp inc add add add inc add add add test mov inc add add add adc mov add int3 out inc add add add inc add test (bad) repnz add add add adc mov add int3 out inc add add add test aam inc add add add adc nop add add out inc add add add scas inc add test call add add adc xchg add add out inc add add add add test hlt repnz add add add adc cwtl add add out inc add add add scas inc add test add inc add add add adc pushf add add out inc add add add inc add test xor add add add adc mov out inc add add add jmp inc add add add adc movsb add add out inc add add in inc add test and inc add add inc add add out inc add add add add add inc add test sub inc add add add inc add add pushf mov add test cmp inc add add inc add add out inc add add add mov add test dec repz add add add adc mov add int3 out inc add add add add test pop repz add add add adc mov out inc add add mov inc add test push add add adc mov out inc add add add inc add test je inc add add add adc rolb add out inc add add add inc add test jl inc add add add adc les add int3 out inc add add add mov add test mov inc add add add adc enter int3 out inc add add add mov add test pushf repz add add add adc int3 add add out inc add add add add test lods repz add add add adc rolb add int3 out inc add add add add add mov add test mov add add adc aam add int3 out inc add add add inc add test enter pop add add adc fadds add int3 out inc add add add jmp inc add add add adc faddl add int3 out inc add add add mov add test call add add adc loopne add int3 out inc add add add inc add test cld repz add add add adc in add int3 out inc add add add test adc inc add add add adc call out inc add add add mov add test and inc add add add adc in add add out inc add add pop mov add test sub inc add add inc add add add add out inc add add add add add jmp inc add add add add add out inc add add add inc add test dec hlt inc add add add adc clc add add out inc add add add inc add test pop hlt inc add add add pop add add add out add (bad) (bad) incl add add add add mov add jmp inc add (bad) (bad) incl adc add add int3 out inc add add add inc add test fs inc add add add adc add add int3 out inc add add add test js inc add add add adc or add int3 out inc add add add add add mov test test inc add add add add int3 out inc add add add add add add test mov inc add add add add add out inc add add add mov test pushf hlt inc add add add add add inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add popf inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add sahf inc add inc add inc add inc add sahf inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add lahf inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add mov inc add inc add inc add inc add mov inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add mov inc add inc add inc add inc add mov inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add mov inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add mov inc add inc add inc add inc add mov inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add movsb inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add add add add add (bad) (bad) (bad) incl add add inc add add add add mov movsb mov add xor inc add add add add lods mov add test inc add add add mov push ret inc add add add add add add adc xor add int3 out inc add add add add add add test fs inc add add add add add out inc add add add ret inc add test je inc add add add adc cmp add int3 out inc add add add inc add test test inc add add add adc inc add add out inc add add add jmp inc add add add adc inc add add out inc add add add add add les inc jmp inc add add add add int3 out inc add add add lds inc jmp inc add add add adc dec add add out inc add add add test sar add add add adc push add add out inc add add add lds inc jmp inc add add add adc push add add out inc add add add add add add test sar inc add add add add int3 out inc add add add jmp inc add add add adc pop add add out inc add add add add add inc add test call add add adc pusha add add out inc add add add inc add test clc sti inc add add add adc add add out inc add add add test adc inc add add add adc push out inc add add add enter jmp inc add add add adc insb add add out inc add add add add test sub inc add add add adc jo add int3 out inc add add add enter jmp inc add add add adc je add int3 out inc add add add inc add test inc cld inc add add add adc js add int3 out inc add add mov inc add test push cld inc add add inc add add add out inc add add add add add leave inc add test pop cld inc add add add out inc add add add inc add test fs inc add add add adc test add int3 out inc add add add test je inc add add add adc mov add int3 out inc add add add lret inc jmp inc add add add adc mov add int3 out inc add add add add test mov inc add add add adc nop add add out inc add add add jmp inc add add add adc xchg add add out inc add add add inc add test cwtl cld inc add add add adc cwtl add add out inc add add add inc add test test inc add add add adc pushf add add out inc add add add int3 inc add test mov inc add add add adc mov out inc add add add int add test mov add add adc movsb add add out inc add add add add test sar add add add adc test add int3 out inc add add add int add test sar inc add add add adc lods add add out inc add add xor inc add test loopne inc add add inc add add out inc add add add jmp inc add add add adc mov add int3 out inc add add in into inc add test cld cld inc add add inc add add out inc add add add inc add test or inc add add add adc mov out inc add add add test adc inc add add add adc rolb add out inc add add add rolb inc jmp inc add add add adc les add int3 out inc add add add add test and inc add add add adc enter int3 out inc add add add jmp inc add add add adc int3 add add out inc add add add inc add test inc std inc add add add adc rolb add int3 out inc add add add inc add test push std inc add add add adc aam add int3 out inc add add add roll inc jmp inc add add add adc fadds add int3 out inc add add sub inc add test insb std inc add add inc add add add add out inc add add test inc add test cmp add add inc add add add add out inc add add add rolb inc jmp inc add add add adc in add int3 out inc add add cmp inc add test cwtl std inc add add inc add add add add out inc add add add jmp inc add add add adc in add add out inc add add add roll inc jmp inc add add add adc lock add out inc add add add inc add test mov add add pop add add add out add (bad) (bad) incl add add add add test inc out add (bad) (bad) incl adc clc add add out inc add add add add add inc add test int3 std inc add add add add add out inc add add add add add test fdivr inc add add add add add out inc add add add aad add test in std inc add add add adc add add int3 out inc add add add add test add inc add add add adc or add int3 out inc add add mov inc add test or inc add add inc add add add int3 out inc add add add inc add test sbb inc add add add adc adc add int3 out inc add add add inc add test and inc add add add add add inc add inc add inc add inc add mov inc add inc add inc add inc add mov inc add inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add inc add mov inc add inc add inc add inc add mov inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add mov inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add inc add mov inc add inc add inc add inc add mov inc add inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add mov inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add mov inc add inc add inc add inc add mov inc add inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add inc add rolb mov inc add inc add inc add rolb mov inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add roll mov inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add inc add ret sub inc add inc add inc add inc add ret sub inc add inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add inc add add add inc add add add add add (bad) (bad) incl add add mov add add add rorl add inc add add add add cmp inc add add add add add add inc add add add add add add inc add add add popf mov lods out inc add adc xor add int3 out inc add add add inc add test fsubr inc add add add adc cmp add int3 out inc add add add add add inc add test in out inc add add add add int3 out inc add add add test hlt out inc add add add adc inc add add out inc add add sbb inc add test add inc add add inc add add add out inc add add je inc add test or inc add add inc add add add int3 out inc add add add loop add test adc inc add add add adc dec add add out inc add add add inc add test and inc add add add adc push add add out inc add add add jmp inc add add add adc push add add out inc add add add jecxz add test xor inc add add add adc pop add add out inc add add add inc add test inc out inc add add add adc pop add add out inc add add add test dec out inc add add add adc pusha add add out inc add add add in add test pop out inc add add add adc add add out inc add add add add test push add add adc push out inc add add mov inc add test inc in inc add add inc add add add out inc add add add inc add test lods in inc add add add adc jo add int3 out inc add add add inc add test lods jmp add add add adc je add int3 out inc add add add out add test mov add add adc js add int3 out inc add add add out add test push add add adc jl add int3 out inc add add add add test (bad) jmp add add add adc addb add out inc add add add add add out add test jl inc add add add inc add add xor inc add test xchg out inc add add inc add add out inc add add nop call test movsb out inc add add inc add add inc add add add call test mov inc add add add adc nop add add out inc add add add inc add test mov add add adc xchg add add out inc add add add test int3 out inc add add add adc cwtl add add out inc add add add ljmp fsubr inc add add add adc pushf add add out inc add add add add test in inc add add add adc mov out inc add add add jmp inc add add add adc movsb add add out inc add add add inc add test add inc add add add adc test add int3 out inc add add add inc add test adc inc add add add adc lods add add out inc add add add jmp add test sbb inc add add add adc mov add int3 out inc add add add in inc add test sub inc add add add adc mov add int3 out inc add add test inc add test xor inc add add inc add add out inc add add add in inc add test cmp inc add add add adc mov out inc add add add test inc lock add add add adc rolb add out inc add add add jmp inc add add add adc les add int3 out inc add add add in inc add test pop lock add add add adc enter int3 out inc add add add inc add test push add add adc int3 add add out inc add add add add add test je inc add add add add add out inc add add add out inc add test mov inc add add add adc aam add int3 out inc add add add add test cwtl lock add add add adc fadds add int3 out inc add add add out inc add test movsb lock add add add adc faddl add int3 out inc add add add inc add test mov inc add add add adc loopne add int3 out inc add add add add add inc add test (bad) lock add add add add add out inc add add add lock add test enter sbb add inc add add add add out inc add add add add add icebp inc add test aam inc add add add add add out inc add add add add add test call add add adc lock add out inc add add add icebp inc add test hlt lock add add add adc hlt add add out inc add add add add test cld lock add add add pop add add add out add (bad) (bad) incl add add add add jmp inc add (bad) (bad) incl adc cld add add out inc add add add add add inc add test or inc add add add add add out inc add add nop repz add test sbb inc add add inc add add add int3 out inc add add add repz add test and inc add add add adc or add int3 out inc add add add inc add test xor inc add add add adc or add int3 out inc add add add test inc icebp inc add add add adc adc add int3 out inc add add add cmc inc add test dec icebp inc add add add add add add xlat inc add inc add inc add inc add add xlat inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add fadds (bad) xlat inc add inc add inc add inc add inc add xlat inc add inc add inc add inc add inc add xlat inc add inc add inc add inc add add xlat inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add flds (bad) xlat inc add inc add inc add inc add flds (bad) xlat inc add inc add inc add inc add inc add xlat inc add inc add inc add inc add add xlat inc add inc add inc add inc add add xlat inc add inc add inc add inc add inc add inc add inc add inc add fiaddl (bad) xlat inc add inc add inc add inc add fiaddl (bad) xlat inc add inc add inc add inc add inc add xlat inc add inc add inc add inc add inc add xlat inc add inc add inc add inc add add xlat inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add fildl (bad) xlat inc add inc add inc add inc add inc add xlat inc add inc add inc add inc add inc add xlat inc add inc add inc add inc add add xlat inc add inc add inc add inc add add xlat inc add inc add inc add inc add inc add inc add inc add inc add faddl (bad) xlat inc add inc add inc add inc add faddl (bad) xlat inc add inc add inc add inc add inc add inc add inc add inc add add xlat inc add inc add inc add inc add add xlat inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add fldl (bad) xlat inc add inc add inc add inc add inc add xlat inc add inc add inc add inc add inc add xlat inc add inc add inc add inc add add xlat inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add fiadd (bad) xlat inc add inc add inc add inc add fiadd (bad) xlat inc add inc add inc add inc add inc add xlat inc add inc add inc add inc add add xlat inc add inc add inc add inc add add xlat inc add inc add inc add inc add inc add inc add inc add inc add fild (bad) xlat inc add inc add inc add inc add fild (bad) xlat inc add inc add inc add inc add inc add xlat inc add inc add inc add inc add inc add xlat inc add inc add inc add inc add add xlat inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add loopne add xlat inc add inc add inc add inc add add add inc add add add add (bad) (bad) (bad) incl add add mov add add add mov aam inc add add add inc add add add cmc inc add add add cmc inc add add add cmc inc add add add cmc inc add add add inc add add add inc add add adc xor add int3 out inc add add pushf incb inc jmp inc add add inc add add add add out inc add add add incb inc jmp inc add add add adc cmp add int3 out inc add add add add test test inc add add add adc inc add add out inc add add add jmp inc add add add adc inc add add out inc add add or inc add test pushf incb or add inc add add add int3 out inc add add add inc add test test inc add add add adc dec add add out inc add add add add inc jmp inc add add add adc push add add out inc add add add add inc jmp inc add add add adc push add add out inc add add add add add add test sar inc add add add add int3 out inc add add add add inc jmp inc add add add adc pop add add out inc add add add inc add test clc incb or add inc add add add int3 out inc add add add jmp inc add add add adc add add out inc add add add add inc jmp inc add add add adc push out inc add add add inc add test and inc add add add adc insb add add out inc add add add test xor inc add add add adc jo add int3 out inc add add add add add test inc incl das add add adc je add int3 out inc add add add add test dec incl xor add inc add add add int3 out inc add add add jmp inc add add add adc jl add int3 out inc add add add test pusha incl and add inc add add out inc add add add add add inc add test jo inc add add add inc add add add add test jl inc add add add adc mov add int3 out inc add add add push inc add test mov inc add add add adc mov add int3 out inc add add test inc add test xchg incl sbb add inc add add out inc add add add push inc add test movsb incl daa add add adc xchg add add out inc add add add add add inc add test mov inc add add add out inc add add add jmp inc add add add adc pushf add add out inc add add add pop inc add test int3 incl adc add inc add add out inc add add add add add inc add test aam inc add add add inc add add add test in inc add add add adc test add int3 out inc add add add add add or inc jmp inc add add add inc add add or inc jmp inc add add inc add add out inc add add add or inc jmp inc add add add adc mov add int3 out inc add add add inc add test and inc add add add adc mov out inc add add add inc add test sub inc add add add adc mov out inc add add add or inc jmp inc add add add adc rolb add out inc add add add or inc jmp inc add add add adc les add int3 out inc add add add test push add sub add inc add add add add out inc add add add or inc jmp inc add add add adc int3 add add out inc add add add add test js inc add add add adc rolb add int3 out inc add add add add add jmp inc add add add add add out inc add add add or add test nop add sub add inc add add add add out inc add add pop or test mov add add adc faddl add int3 out inc add add add test lods add sub add inc add add add add out inc add add add push inc add test rolb add add add adc in add int3 out inc add add add add test enter or add inc add add add add out inc add add add push inc add test fadds inc add add add adc in add add out inc add add add inc add test in inc add add add adc lock add out inc add add orb add test hlt add sub add inc add add add add out inc add add fmull inc add test add inc add add inc add add add add out inc add add add adc inc jmp inc add add add adc cld add add out inc add add add test adc inc add add add adc add add int3 out inc add add add adc inc jmp inc add add add adc add add int3 out inc add add add add test xor inc add add add adc or add int3 out inc add add add add add jmp inc add add add add int3 out inc add add add inc add test dec add sbb add inc add add add add out add (bad) (bad) incl add add add add inc add jmp inc add (bad) (bad) incl add add cmc inc add add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add inc add inc add add add inc add inc add inc add add add inc add inc add inc add inc add inc add inc add inc add testb cmc inc add inc add inc add inc add testb cmc inc add inc add inc add inc add inc add add inc add inc add inc add add add inc add inc add inc add add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add testl cmp inc add inc add inc add inc add add inc add inc add inc add inc add add inc add inc add inc add add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add clc inc add add inc add inc add inc add clc inc add add inc add inc add inc add inc add add inc add inc add inc add add add inc add inc add inc add add add inc add inc add inc add inc add inc add inc add inc add stc inc add add inc add inc add inc add stc inc add add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add inc add inc add add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add cli inc add add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add inc add inc add add add inc add inc add inc add add add inc add inc add inc add inc add inc add inc add inc add sti inc add add inc add inc add inc add sti inc add add inc add inc add inc add inc add add inc add inc add inc add add add inc add inc add inc add add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add cld inc add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add std inc add add inc add inc add inc add std inc add add inc add inc add inc add inc add add inc add inc add inc add add add inc add inc add inc add add add inc add inc add inc add add add inc add add add (bad) (bad) incl add add jecxz add add add add add add add add add add add add add add add add add inc add add add add add add inc add add add jbe add hlt inc add hlt inc add adc xor add int3 out inc add add add inc add test call add add adc cmp add int3 out inc add add add add add jmp inc add add add add int3 out inc add add in sbb add test add inc add add inc add add add int3 out inc add add add inc add test sbb inc add add add adc inc add add out inc add add add test and inc add add add adc dec add add out inc add add add push inc add test sub inc add add add adc dec add add out inc add add add add test cmp inc add add add adc push add add out inc add add mov jmp inc add add inc add add add out inc add add add inc add test push cmc inc add add add adc pop add add out inc add add add inc add test pusha cmc inc add add add adc pop add add out inc add add add add add pop inc add test jo inc add add add add int3 out inc add add add and inc jmp inc add add add adc add add out inc add add add test mov add add adc push out inc add add add add add and inc jmp inc add add add add out inc add add add add add inc add test (bad) cmc inc add add add add int3 out inc add add add jmp inc add add add adc je add int3 out inc add add hlt and inc jmp inc add add inc add add add int3 out inc add add add inc add test lock inc add add add adc jl add int3 out inc add add add test add inc add add add adc addb add out inc add add add and inc jmp inc add add add adc test add int3 out inc add add add add test sbb inc add add add adc mov add int3 out inc add add add and inc jmp inc add add add adc mov add int3 out inc add add add inc add test xor inc add add add adc nop add add out inc add add add inc add test inc testb add add adc xchg add add out inc add add add add add and add test dec testb add add adc cwtl add add out inc add add add and test push testb add add adc pushf add add out inc add add add add add test pop testb add add adc mov out inc add add add and test testb add add adc movsb add add out inc add add inc es add test je inc add add inc add add out inc add add add jmp inc add add add adc lods add add out inc add add add es add test test inc add add add adc mov add int3 out inc add add add inc add test nop testb add add adc mov add int3 out inc add add add test pushf testb add add adc mov out inc add add add sub inc jmp inc add add add adc mov out inc add add insb sub inc jmp inc add add inc add add add add out inc add add add sub inc jmp inc add add add adc les add int3 out inc add add add inc add test fdiv inc add add add adc enter int3 out inc add add add add add jmp inc add add add add add out inc add add add sub inc jmp inc add add add adc rolb add int3 out inc add add cmp inc add test add inc add add inc add add add add out inc add add add test or inc add add add adc fadds add int3 out inc add add add sub inc jmp inc add add add adc faddl add int3 out inc add add add add test xchg cmc inc add add add adc loopne add int3 out inc add add add jmp inc add add add adc in add int3 out inc add add add inc add test cmp inc add add add adc call out inc add add add inc add test push testl inc add add add add out inc add add add test pusha testl inc add add add add out inc add add sbb test insb testl inc add add add add out inc add add add add test js inc add add add adc clc add add out inc add add add sub test mov inc add add add adc cld add add out inc add add add inc add test xchg testl inc add add add add out inc add add add jmp inc add add add adc add add int3 out inc add add add cs add test test inc add add add adc or add int3 out inc add add add inc add test (bad) testl inc add add add int3 out inc add add add test aam inc add add add pop add add add out add (bad) (bad) incl add add add add das inc add jmp inc add (bad) (bad) incl add add add adc cmp inc add inc add inc add inc add inc add inc add inc add adc hlt adc cmp inc add inc add inc add adc hlt adc cmp inc add inc add inc add inc add adc cmp inc add inc add inc add inc add adc cmp inc add inc add inc add add adc cmp inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add adc add adc cmp inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add adc cmp inc add inc add inc add add adc cmp inc add inc add inc add inc add inc add inc add inc add adc inc add inc add inc add inc add adc inc add inc add inc add inc add inc add adc cmp inc add inc add inc add add adc cmp inc add inc add inc add add adc cmp inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add push inc add adc cmp inc add inc add inc add inc add adc cmp inc add inc add inc add inc add adc cmp inc add inc add inc add add adc cmp inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add pop inc add adc cmp inc add inc add inc add pop inc add adc cmp inc add inc add inc add inc add adc cmp inc add inc add inc add add adc cmp inc add inc add inc add add adc cmp inc add inc add inc add inc add inc add inc add inc add sbb hlt adc cmp inc add inc add inc add sbb hlt adc cmp inc add inc add inc add inc add adc cmp inc add inc add inc add inc add adc cmp inc add inc add inc add add adc cmp inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add sbb hlt adc cmp inc add inc add inc add inc add adc cmp inc add inc add inc add inc add adc cmp inc add inc add inc add add adc cmp inc add inc add inc add add adc cmp inc add inc add inc add inc add inc add inc add inc add sbb hlt adc cmp inc add inc add inc add sbb hlt adc cmp inc add inc add inc add inc add adc cmp inc add inc add inc add add adc cmp inc add inc add inc add add adc cmp inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add sbb hlt adc cmp inc add inc add inc add inc add adc cmp inc add inc add inc add add sbb inc add add add inc add (bad) (bad) incl add add mov add add add mov add inc add add add add add add inc add add add inc add add add xor cmp add or inc add add add cmp jl inc add add add mov insb adc jl inc add adc xor add int3 out inc add add int3 cmp inc jmp inc add add inc add add add add out inc add add add cmp inc jmp inc add add add adc cmp add int3 out inc add add add test mov add add adc inc add add out inc add add add cmp inc jmp inc add add add adc inc add add out inc add add add inc add test mov add add adc dec add add out inc add add add jmp inc add add add adc dec add add out inc add add hlt cmp inc jmp inc add add inc add add add int3 out inc add add add inc add test call add add adc push add add out inc add add add test lock add add inc add add add int3 out inc add add or test add inc add add inc add add add out inc add add fs test or inc add add inc add add add int3 out inc add add add cmp test sbb inc add add add adc add add out inc add add add inc add test xor inc add add add adc push out inc add add add inc add test cmp inc add add add adc insb add add out inc add add aam inc add test inc adc add add inc add add add int3 out inc add add add add add aas inc add test dec adc and add add add out inc add add add test pop adc or add inc add add add int3 out inc add add add aas inc add test insb adc sbb add inc add add add out inc add add add add test js inc add add add adc addb add out inc add add add jmp inc add add add adc test add int3 out inc add add cld inc inc add test nop adc adc add inc add add out inc add add add inc add test movsb adc pop add add adc mov add int3 out inc add add add test mov inc add add add adc nop add add out inc add add add add add inc inc add test rclb add add add inc add add add add test aam inc add add add adc cwtl add add out inc add add add inc inc add test loopne inc add add add adc pushf add add out inc add add add inc add test in adc adc add inc add add out inc add add add jmp inc add add add adc movsb add add out inc add add add add add inc inc add test add inc add add add out inc add add add inc inc add test adc inc add add add adc lods add add out inc add add add test and inc add add add adc mov add int3 out inc add add add add add inc inc add test sub inc add add add inc add add add add test xor inc add add add adc mov out inc add add test inc add test inc adc sub add inc add add inc add add add add add inc add test push adc adc add add add add out inc add add add inc add test pusha adc sub add inc add add add add out inc add add add test insb adc push add add adc enter int3 out inc add add add inc inc add test jl inc add add add adc int3 add add out inc add add add add test mov inc add add add adc rolb add int3 out inc add add add inc inc add test pushf adc sub add inc add add add add out inc add add add add add inc add test lods adc sub add add add add out inc add add add jmp inc add add add adc faddl add int3 out inc add add add dec inc add test les inc add add add adc loopne add int3 out inc add add add inc add test int3 adc sldt add adc in add int3 out inc add add add test fcoms inc add add add adc call out inc add add add dec inc add test in inc add add add adc in add add out inc add add add add add add test lock xor add add add add out inc add add add jmp inc add add add adc hlt add add out inc add add add inc add test add inc add add add adc clc add add out inc add add add inc add test adc inc add add add adc cld add add out inc add add add dec inc add test and inc add add add adc add add int3 out inc add add add dec inc add test xor add add add adc add add int3 out inc add add add add test inc adc add add add adc or add int3 out inc add add add dec inc add test push adc add add add adc or add int3 out inc add add add test pusha adc add add add pop add add add out add (bad) (bad) incl add add add add jmp inc add (bad) (bad) incl add add inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add xor mov inc add inc add inc add inc add xor mov inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add xor mov inc add inc add inc add inc add xor mov inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add xor mov inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add xor add inc add inc add inc add xor add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add xor inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add ss add inc add inc add inc add ss add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add aaa inc add inc add inc add inc add aaa inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add cmp mov inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add add add inc add add add add (bad) (bad) (bad) incl add add jecxz add add or mov pushf dec inc add add add add add add add movsb dec inc add add add add add mov push push inc add add add add test inc add adc xor add int3 out inc add add add add test xchg add pop add add adc cmp add int3 out inc add add add push inc add test mov add add adc cmp add int3 out inc add add add inc add test mov inc add add add adc inc add add out inc add add js inc add test mov add add adc inc add add out inc add add aam inc add test enter xor add inc add add add int3 out inc add add add pop inc add test aam inc add add add adc dec add add out inc add add mov add test loopne inc add add inc add add add int3 out inc add add add pop inc add test hlt add sub add inc add add add out inc add add add add test add inc add add add adc pop add add out inc add add add jmp inc add add add adc pop add add out inc add add add pop inc add test sbb inc add add add adc pusha add add out inc add add add inc add test and inc add add add adc add add out inc add add add add add test cmp inc add add add add int3 out inc add add add pop inc add test inc add xor add inc add add add out inc add add add add test push add add add inc add add add int3 out inc add add add pop inc add test pop add sub add inc add add add out inc add add add test push add add adc js add int3 out inc add add add jmp inc add add add adc jl add int3 out inc add add add add add pop inc add test nop add sub add add out inc add add add pop inc add test pushf add add add adc test add int3 out inc add add add test mov inc add add add adc mov add int3 out inc add add add pop inc add test mov add add adc mov add int3 out inc add add add add test les inc add add add adc nop add add out inc add add add jmp inc add add add adc xchg add add out inc add add add inc add test in inc add add add adc cwtl add add out inc add add add add add inc add test hlt add and add add inc add add mov jmp inc add add inc add add out inc add add add popa inc add test and inc add add add adc movsb add add out inc add add je inc add test sub inc add add inc add add out inc add add add popa inc add test inc add das add add adc lods add add out inc add add add inc add test push add adc add inc add add out inc add add add jmp inc add add add adc mov add int3 out inc add add add bound inc jmp inc add add add adc mov out inc add add add inc add test js inc add add add adc mov out inc add add add test mov inc add add add adc rolb add out inc add add add arpl inc jmp inc add add add adc les add int3 out inc add add push fs add test movsb add sub add inc add add add add out inc add add add jmp inc add add add adc int3 add add out inc add add add test mov add add adc rolb add int3 out inc add add add inc add test les inc add add add adc aam add int3 out inc add add add gs add test fadds inc add add add adc fadds add int3 out inc add add add add add inc add test in add or add add add add out inc add add add add test add add add add adc loopne add int3 out inc add add add inc add test adc add add add adc in add int3 out inc add add add inc add test sbb inc add add add adc call out inc add add add add add jmp inc add add add add add out inc add add add add add addr16 add test cmp inc add add add add add out inc add add add inc add test inc add add add add pop add add add out add (bad) (bad) incl add add add add test inc out add (bad) (bad) incl adc clc add add out inc add add cmp add test dec add add add inc add add add add out inc add add add test pop add add add add adc add add int3 out inc add add add imul pusha add add add add adc add add int3 out inc add add add add test je inc add add add adc or add int3 out inc add add add jmp inc add add add adc or add int3 out inc add add add add add inc add test cwtl add add add add add add out inc add add add inc add test movsb add add add add add add inc add inc add inc add inc add dec inc add inc add inc add inc add inc add dec inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add dec inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add push inc add inc add inc add inc add inc add push inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add inc add push inc add inc add inc add inc add inc add push inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add push inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add inc add push inc add inc add inc add inc add inc add push inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add push inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add push inc add inc add inc add inc add inc add push inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add inc add push inc add inc add inc add inc add inc add push inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add add inc add add add inc add (bad) (bad) incl add add jecxz add add add rorb add inc add add add add add add add inc add add add inc add add add insb inc add add add inc add add add je add add and mov rolb add add add adc xor add int3 out inc add add add je add test lock add add add adc cmp add int3 out inc add add add inc add test cld add add add add adc cmp add int3 out inc add add add test add inc add add add adc inc add add out inc add add add jbe add test adc add inc add add add out inc add add add add test and add inc add add add int3 out inc add add add jbe add test xor inc add add add adc dec add add out inc add add add add add inc add test inc add add inc add add add int3 out inc add add add jmp inc add add add adc push add add out inc add add add ja add test push add add inc add add add int3 out inc add add add js add test fs add inc add add add out inc add add add test jo inc add add add adc pusha add add out inc add add add js add test test add inc add add add out inc add add add add add add test nop add add inc add add add int3 out inc add add test inc add test pushf add add inc add add add out inc add add add inc add test movsb add add inc add add add int3 out inc add add add inc add test mov inc add add add adc je add int3 out inc add add add test mov add add adc js add int3 out inc add add add jnp add test les add inc add add add out inc add add add add test rolb add inc add add out inc add add add jnp add test loopne inc add add add adc test add int3 out inc add add add add add inc add test in add add inc add add out inc add add add jmp inc add add add adc mov add int3 out inc add add add add add jl add test adc inc add add add out inc add add add inc add test sbb inc add add add adc xchg add add out inc add add add test sub inc add add add adc cwtl add add out inc add add add jge add test inc push inc add add add adc pushf add add out inc add add push jle add test dec push inc add add inc add add out inc add add add add add jmp inc add add add inc add add or inc add test pusha push inc add add inc add add out inc add add add inc add test push add add adc lods add add out inc add add add jg add test js inc add add add adc mov add int3 out inc add add add addb jmp inc add add add adc mov add int3 out inc add add add add test nop push inc add add add adc mov out inc add add fadds test pushf push inc add add inc add add inc add add xor inc add test movsb push inc add add inc add add add add out inc add add add jmp inc add add add adc les add int3 out inc add add add addl rolb add add add adc enter int3 out inc add add add inc add test rolb inc add add add adc int3 add add out inc add add movsb (bad) inc add test faddl inc add add inc add add add add out inc add add add addl jmp inc add add add adc aam add int3 out inc add add add add test cld push inc add add add adc fadds add int3 out inc add add add jmp inc add add add adc faddl add int3 out inc add add add inc add test sbb inc add add add adc loopne add int3 out inc add add add add add inc add test xor inc add add add add add out inc add add add test inc jmp inc add add add adc call out inc add add add test inc jmp inc add add add adc in add add out inc add add add test pusha pop inc add add add adc lock add out inc add add loopne inc add test push add add adc hlt add add out inc add add add add add inc add test js inc add add add add add out inc add add add jmp inc add add add pop add add add out add (bad) (bad) incl add add add add xchg xor test inc out add (bad) (bad) incl adc add add int3 out inc add add add jmp inc add add add adc add add int3 out inc add add add xchg inc jmp inc add add add adc or add int3 out inc add add add inc add test mov inc add add add adc or add int3 out inc add add add test enter push add add adc adc add int3 out inc add add add mov inc jmp inc add add add add add inc add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add insb inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add insl inc add inc add inc add inc add insl inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add outsb inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add outsl inc add inc add inc add inc add outsl inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add jo add inc add inc add inc add jo add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add jno add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add jb add inc add inc add inc add jb add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add jae add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add je add inc add inc add inc add add add inc add add add (bad) (bad) incl add add mov add add add rorb add mov add add sub inc add add add mov add add aam inc add add add mov cmp add aam inc add add add inc add add add inc add add adc xor add int3 out inc add add add test pop push inc add add add adc cmp add int3 out inc add add add add add xchg inc add test push add add adc cmp add int3 out inc add add dec xchg inc add test je inc add add inc add add add int3 out inc add add add jmp inc add add add adc inc add add out inc add add add inc add test nop push inc add add add adc dec add add out inc add add add inc add test cwtl push inc add add add adc dec add add out inc add add add test mov add add adc push add add out inc add add add xchg inc add test mov inc add add add adc push add add out inc add add je inc add test rorb add add inc add add add int3 out inc add add add xchg inc add test int3 push inc add add add adc pop add add out inc add add add inc add test fmull inc add add add adc pusha add add out inc add add add jmp inc add add add adc add add out inc add add add xchg inc add test clc push inc add add add adc push out inc add add add inc add test add inc add add add adc insb add add out inc add add add add add test adc inc add add add add int3 out inc add add add xchg inc add test and inc add add add adc je add int3 out inc add add add add add add test xor inc add add add add int3 out inc add add add jmp inc add add add adc jl add int3 out inc add add add inc add test dec cmovb sub add inc add add out inc add add push jmp inc add add inc add add inc add add add cltd inc add test pop cmovb xor add inc add add out inc add add add add add lcall push add add adc mov add int3 out inc add add add add test je inc add add add adc nop add add out inc add add add lcall orb add add add adc xchg add add out inc add add add inc add test mov inc add add add adc cwtl add add out inc add add nop fwait inc add test pushf cmovb sub add inc add add inc add add add fwait inc add test test inc add add add adc mov out inc add add dec pushf inc add test mov add add adc movsb add add out inc add add add test aam inc add add add adc test add int3 out inc add add add test in inc add add inc add add inc add add add add test lock add add inc add add out inc add add add jmp inc add add add adc mov add int3 out inc add add add inc add test or inc add add add adc mov out inc add add add add add inc add test sbb inc add add add inc add add add sahf inc add test sub inc add add add adc rolb add out inc add add add lahf inc add test xor inc add add add adc les add int3 out inc add add add add add test inc adc add add add add add out inc add add add lahf inc add test dec adc sbb add inc add add add add out inc add add add add add inc add test pop adc adc add add add add out inc add add add jmp inc add add add adc aam add int3 out inc add add add mov test jo inc add add add adc fadds add int3 out inc add add add inc add test jl inc add add add adc faddl add int3 out inc add add add test mov inc add add add adc loopne add int3 out inc add add add mov test xchg adc pop add add adc in add int3 out inc add add add add test mov add add adc call out inc add add add mov test test inc add add add adc in add add out inc add add add inc add test mov add add adc lock add out inc add add add inc add test int3 adc and add inc add add add add out inc add add add mov test aam inc add add add pop add add add out add (bad) (bad) incl add add add add movsb inc add jmp inc add (bad) (bad) incl adc cld add add out inc add add add movsb inc add test lock push add add adc add add int3 out inc add add add movsl inc add test cld adc and add inc add add add int3 out inc add add add add test adc inc add add add adc or add int3 out inc add add fsubs test and inc add add inc add add add int3 out inc add add add inc add test sub inc add add add adc adc add int3 out inc add add add jmp inc add add add add add mov push mov cmp inc add inc add inc add mov push mov cmp inc add inc add inc add inc add add inc add inc add inc add add add inc add inc add inc add add add inc add inc add inc add inc add inc add inc add inc add mov push mov cmp inc add inc add inc add mov push mov cmp inc add inc add inc add inc add add inc add inc add inc add inc add add inc add inc add inc add add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add mov push mov cmp inc add inc add inc add inc add add inc add inc add inc add inc add add inc add inc add inc add add add inc add inc add inc add add add inc add inc add inc add inc add inc add inc add inc add mov push mov cmp inc add inc add inc add mov push mov cmp inc add inc add inc add inc add inc add inc add inc add add add inc add inc add inc add add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add lea push mov cmp inc add inc add inc add inc add add inc add inc add inc add inc add add inc add inc add inc add add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add mov push mov cmp inc add inc add inc add mov push mov cmp inc add inc add inc add inc add add inc add inc add inc add add add inc add inc add inc add add add inc add inc add inc add inc add inc add inc add inc add popl push mov cmp inc add inc add inc add popl push mov cmp inc add inc add inc add inc add add inc add inc add inc add inc add add inc add inc add inc add add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add nop inc add add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add inc add inc add add add inc add inc add inc add add add inc add inc add inc add inc add inc add inc add inc add xchg inc add add inc add inc add inc add xchg inc add add inc add inc add inc add inc add add inc add inc add inc add add add inc add inc add inc add add add inc add inc add inc add add add inc add add add add (bad) (bad) (bad) incl add add in add add fmul mov cmpsl inc add add add pop inc add add add add add add add add add inc add add add add add add inc add add add in mov add inc add or inc add add add int3 out inc add add add inc add test and inc add add add adc cmp add int3 out inc add add add jmp inc add add add adc cmp add int3 out inc add add add mov add test cmp inc add add add adc inc add add out inc add add inc mov add test inc or or add inc add add add out inc add add add add add test dec or sub add add add int3 out inc add add add add add mov add test pop or or add add add out inc add add add add test pusha or sldt add adc push add add out inc add add mov inc add test insb or and add inc add add add out inc add add add inc add test js inc add add add adc pop add add out inc add add add add add inc add test test inc add add add add out inc add add add mov add test nop or add add adc pusha add add out inc add add add mov add test pushf or sub add inc add add add out inc add add add add test test inc add add add adc push out inc add add add mov add test mov inc add add add adc insb add add out inc add add add test rorb add add add adc jo add int3 out inc add add add jmp inc add add add adc je add int3 out inc add add add mov add test fmuls inc add add add adc js add int3 out inc add add add inc add test loopne inc add add add adc jl add int3 out inc add add add test hlt or or add inc add add out inc add add add test or inc add add inc add add inc add add add add test sbb inc add add add adc mov add int3 out inc add add add jmp inc add add add adc mov add int3 out inc add add add inc add test xor inc add add add adc nop add add out inc add add add inc add test cmp inc add add add adc xchg add add out inc add add add mov test dec or das add add adc cwtl add add out inc add add sub test pop or adc add inc add add inc add add add test or sub add inc add add out inc add add add mov test jo inc add add add adc movsb add add out inc add add add add add inc add test jl inc add add add out inc add add add jmp inc add add add adc lods add add out inc add add add mov test xchg or sbb add inc add add out inc add add add add add inc add test test inc add add add inc add add add test mov inc add add add adc mov out inc add add add mov test les inc add add add adc mov out inc add add fs test aam inc add add inc add add add add out inc add add add mov test loopne inc add add add adc les add int3 out inc add add add test hlt or xor add inc add add add add out inc add add add inc add test add inc add add add adc int3 add add out inc add add add mov test adc inc add add add adc rolb add int3 out inc add add add mov test and inc add add add adc aam add int3 out inc add add mov test sub inc add add inc add add add add out inc add add add mov test xor inc add add add adc faddl add int3 out inc add add add add test cmp inc add add add adc loopne add int3 out inc add add add jmp inc add add add adc in add int3 out inc add add add mov test push or pop add add adc call out inc add add add inc add test push add add adc in add add out inc add add add test je inc add add add adc lock add out inc add add add roll jmp inc add add add adc hlt add add out inc add add add add test xchg or sub add inc add add add add out inc add add enter inc jmp inc add add inc add add add add out inc add add add inc add test mov inc add add add adc add add int3 out inc add add add jmp inc add add add adc add add int3 out inc add add add add add ret inc jmp inc add add add add add out inc add add add add add ret inc add test loopne inc add add add add int3 out inc add add add test in or push add add pop add add add out add (bad) (bad) incl add add add add ret inc add jmp inc add (bad) (bad) incl add add add cmpsb inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add cmpsl inc add cmpsb inc add inc add inc add inc add inc add cmpsb inc add inc add inc add inc add inc add cmpsb inc add inc add inc add inc add add cmpsb inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add test add cmpsb inc add inc add inc add inc add test add cmpsb inc add inc add inc add inc add inc add cmpsb inc add inc add inc add inc add add cmpsb inc add inc add inc add inc add add cmpsb inc add inc add inc add inc add inc add inc add inc add inc add test inc add inc add inc add inc add test inc add inc add inc add inc add inc add cmpsb inc add inc add inc add inc add inc add cmpsb inc add inc add inc add inc add add cmpsb inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add stos inc add cmpsb inc add inc add inc add inc add inc add cmpsb inc add inc add inc add inc add inc add cmpsb inc add inc add inc add inc add add cmpsb inc add inc add inc add inc add add cmpsb inc add inc add inc add inc add inc add inc add inc add inc add stos inc add cmpsb inc add inc add inc add inc add stos inc add cmpsb inc add inc add inc add inc add inc add cmpsb inc add inc add inc add inc add add cmpsb inc add inc add inc add inc add add cmpsb inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add lods inc add cmpsb inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add cmpsb inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add lods inc add cmpsb inc add inc add inc add inc add lods inc add cmpsb inc add inc add inc add inc add inc add cmpsb inc add inc add inc add inc add add cmpsb inc add inc add inc add inc add add cmpsb inc add inc add inc add inc add inc add inc add inc add inc add scas inc add cmpsb inc add inc add inc add inc add scas inc add cmpsb inc add inc add inc add inc add inc add cmpsb inc add inc add inc add inc add inc add cmpsb inc add inc add inc add inc add add cmpsb inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add scas inc add cmpsb inc add inc add inc add inc add inc add cmpsb inc add inc add inc add inc add add add inc add add add add (bad) (bad) (bad) incl add add inc add mov add add add mov cld les add add adc inc add add add les add add add inc add add add lds cmp add add inc add add add int add add add lea and inc add or inc add add add int3 out inc add add add add add int add test inc or sbb add add add add out inc add add add into inc add test push or xor add inc add add add int3 out inc add add add add test pop or push add add adc inc add add out inc add add add into inc add test insb or and add inc add add add out inc add add xor inc add test je inc add add inc add add add int3 out inc add add nop iret inc add test orb add add inc add add add out inc add add in iret inc add test nop or add add inc add add add int3 out inc add add add inc add test mov add add adc push add add out inc add add movsb rolb inc jmp inc add add inc add add add int3 out inc add add add roll inc jmp inc add add add adc pop add add out inc add add pop roll inc jmp inc add add inc add add add int3 out inc add add add jmp inc add add add adc add add out inc add add add inc add test call add add adc push out inc add add jo inc add test lock xor add inc add add add out inc add add add rolb inc jmp inc add add add adc jo add int3 out inc add add add roll inc jmp inc add add add adc je add int3 out inc add add add test sbb inc add add add adc js add int3 out inc add add add roll inc jmp inc add add add adc jl add int3 out inc add add add inc add test cmp add add add adc addb add out inc add add add jmp inc add add add adc test add int3 out inc add add add aam add test push or add add add adc mov add int3 out inc add add add inc add test pop or add add add adc mov add int3 out inc add add add add add test push add add adc nop add add out inc add add or inc add test je inc add add inc add add inc add add add add test orb sub add inc add add out inc add add add (bad) inc add test mov add add add adc pushf add add out inc add add add inc add test cwtl or add add add adc mov out inc add add add inc add test movsb or add add add adc movsb add add out inc add add add add add xlat inc add test mov inc add add add out inc add add add fadds inc jmp inc add add add adc lods add add out inc add add add test enter or add inc add add out inc add add add fadds inc jmp inc add add add adc mov add int3 out inc add add add add test loopne inc add add add adc mov out inc add add add jmp inc add add add adc mov out inc add add add flds inc jmp inc add add add adc rolb add out inc add add add add add inc add test adc inc add add add add add out inc add add add test and add inc add add add add out inc add add add fildl inc jmp inc add add add adc int3 add add out inc add add add add add add test cmp add inc add add add add out inc add add add fildl inc jmp inc add add add adc aam add int3 out inc add add add inc add test push or add inc add add add add out inc add add add jmp inc add add add adc faddl add int3 out inc add add add faddl inc jmp inc add add add adc loopne add int3 out inc add add add fldl inc jmp inc add add add adc in add int3 out inc add add add add add test mov add inc add add add add out inc add add add fldl inc jmp inc add add add adc in add add out inc add add add add test movsb or add inc add add add add out inc add add add jmp inc add add add pop add add add out add (bad) (bad) incl add add add add inc add jmp inc add (bad) (bad) incl adc clc add add out inc add add add jmp inc add add add adc cld add add out inc add add add fild inc jmp inc add add add adc add add int3 out inc add add add inc add test loopne inc add add add adc add add int3 out inc add add add add add test in or add inc add add add add out inc add add add loope add test cld or add inc add add add int3 out inc add add add add test or inc add add add adc adc add int3 out inc add add add loope add test adc inc add add add add add inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add lds test inc add inc add inc add inc add lds test inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add movb les cmp inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add movl cmp inc add inc add inc add movl cmp inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add enter les cmp inc add inc add inc add enter les cmp inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add leave inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add lret test inc add inc add inc add inc add lret test inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add lret inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add int3 inc add inc add inc add inc add int3 inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add inc add add (bad) incl add add inc add out gs outsl pop fs pop or or add inc add add or add add add add add jbe add (bad) (bad) call jmp add add loopne inc add incl add add add xlat inc add (bad) (bad) lcall inc add inc add add add rorl add add add (bad) lcall inc add inc add add add incl add add add adc (bad) (bad) (bad) lcall inc add inc add add add rorb add add add jle add (bad) (bad) lcall inc add inc add add add rorl add add add inc add (bad) (bad) lcall inc add add add rorb add add add add (bad) (bad) lcall inc add add add incl add add add inc add (bad) (bad) lcall inc add add mov incl add add add (bad) lcall inc add add add mov (bad) incl add add add cmpsb inc add (bad) (bad) lcall inc add add sub mov (bad) incl add add add (bad) lcall inc add in add add add iret mov (bad) incl add add add add (bad) (bad) lcall inc add in add add add mov (bad) incl add add add (bad) lcall inc add in add add add rorb add add add je outsl add add jae jne outsb imul je add add imul outsl insl insl gs add jae popa popa insb jae jne imul add add jae gs imul add inc jne outsl insl outsl bound imul push outsw jb jo outsl arpl jae outsb jae add add popa je jb insb xor add dec gs outsb outsl fs add add outsw jb outsl outsb imul add add fs imul add outsb imul fs je jae add add fcoms dec (bad) push leave inc out dec cmp enter and or xor inc push pop sub mov dec mov jp or test into sub (bad) hlt out inc lahf cmp and aad or dec lods xor or stos add xchg inc outsl jb add add cs push add xor or add insl outsl jne gs gs outsb je inc jb outsb imul jae jae add pop push jb addr16 insl and insb gs sub sub arpl jae data16 push imul je imul pop push inc ss dec inc add add dec out add add add add add add add inc add inc add test or xor add add xor add or add imul gs xor add add push add add insb dec outsl jbe dec gs outsl jb add add out add out add add mov inc add or je jmp push mov call jmp add add add add gs xor add add dec outsb jae jb dec outsb jne add inc add add add (bad) mov add or je jmp push mov call jmp add add imul outsl push jns je insl push imul lock add add int3 mov add or je jmp push mov call jmp add add add add gs dec outsb jne add inc add out add add fdivs add add add mov or je jmp push mov call jmp add add outsb jne push jb jo inc js add add dec out add inc add add in inc add or je jmp push mov call jmp add add add add imul inc inc inc add add out add add add lock add or je jmp push mov call jmp add add add add inc popa fs jne gs jb je push je add add out add add cld mov add or je jmp push mov call jmp add add add add imul or add inc gs imul outsl jb add jmp inc add add or add add add mov or je jmp push mov call jmp add add add add outsb insl insl cs insb add add add add imul jb jo jb dec gs fs add inc add inc add add adc inc add or je jmp push mov call jmp add add add add je gs outsl popa jb dec popa jns jne dec popa insl gs add dec out add add and add add add mov or je jmp push mov call jmp add add add add inc add add add sub inc add or je jmp push mov call jmp add add add inc insb outsl jae inc imul jmp inc add add cmp add add add mov or je jmp push mov call jmp add add add add data16 je imul addr16 js add or inc add add inc mov add add add mov or je jmp push mov call jmp add add add add dec outsb push arpl add dec out add ljmp push mov add add add mov or je jmp push mov call jmp add add outsl outsb jbe jb inc gs jne je outsl arpl add add lock add inc add add pop mov add add add mov or je jmp push mov call jmp add add add add jne inc push imul add add inc add add add push add add add add or je jmp push mov call jmp add add jae je insl outsb imul add jae add add je jb add add add xor push add add add add cmp add cmp add inc add add add add dec add add add push add add add adc add imul add push imul add jae add add and add dec add push add dec add dec add inc add push add add add push add add add add add mov xor add push add add dec add push add dec add inc add inc add inc add inc add dec add dec add inc add add add sbb add push add inc add push add dec add inc add push add add add add add dec add add pop add push add dec add push add add add add add add add add dec add dec add inc add dec add pop add cmp and add add add xor add add add add add add add xor xor add add xor xor add add push inc inc ss dec dec add add pop pop jbe popa inc jb inc gs jb arpl add pop pop jbe popa inc jb jae add push outsl fs jne fs xor add add add add jbe popa inc gs inc jb xor add jbe popa push popa jb outsl jo add add pop pop jbe popa push gs bound jb push popa jb pop pop jbe popa inc jb inc outsl jo add add pop pop jbe popa push je inc popa je imul add add pop pop jbe popa push je inc outsl jo add add pop pop jbe popa dec gs add add jbe popa push jb outsb je bound add pop pop jbe popa dec jb jae insb je push bound add add jbe popa push popa jb jne add jbe popa inc jb gs popa jb add add jbe popa inc jb outsl jb jbe jb insb outsl ja add jbe popa inc jb gs je add add pop pop jbe popa push je dec xor add jbe popa push je dec outsl jbe add add pop pop jbe popa dec xor je add pop pop jbe popa push gs jns je insl inc jb outsl jb pop pop jbe popa inc jo xor add pop pop jbe popa dec xor jns add scas dec std cld lds inc lds mov repnz xchg adc outsb fldl (bad) add and cld inc ret jp mov lea inc ret les mov mov repnz lods xor or stos add xchg push je jb outsl outsw outsb imul inc insb bound outsl cmp inc jne imul add jo outsb gs add imul insb insb gs add jae jne imul add jne outsb je bound add jae popa jb jb add imul arpl jae add push imul imul popa gs add push jb arpl jae jae add push jne imul outsl jne push add add add outsw jb popa je outsl outsb jae outsb fs je gs add push jb jae push je arpl add jbe je imul je add push outsl arpl je gs add push popa jb jae insb outsb popa xor add add data16 arpl add push popa jo gs popa ja add pop outsl outsl insl outsl jb push data16 imul outsl outsb imul push popa jb arpl jb xor gs gs jae jb popa bound outsb fs add add imul insb gs cmp add insb je jne gs add push jb jo imul push jo fs jne jae jb jae outsl jbe jns gs add dec gs fs add add je je jb jo popa jb je jb gs add add je outsb fs add outsl jbe jb gs jb add add popa bound imul add inc gs outsb outsb arpl add push outsb imul popa bound add add push popa popa je outsb imul jae add add inc imul add add outsb gs jbe add insb gs outsw jb imul add gs gs gs add ja imul add push jb outsl jbe jb insb popa fs add fs outsb add bound jae jb add jb jo jae imul add add or sbb add mov push sbb xchg fsubl pop mov sub addb rcll pop hlt or push inc cltd adc repnz xchg pop mov dec mov mov imul imul je outsb gs gs add je js je xor add inc outsl jb insb imul fs add add dec jne imul add push jne gs outsb je popa insb xor add push outsb fs insb insb gs add jb je gs add gs imul inc jns popa outsb arpl xor add push popa jb jae outsb imul insb jbe imul add add fs insl jo add add popa fs jb imul add add jb jae imul jbe jb popa gs jae jae popa outsb gs inc popa jbe addr16 jae gs jo imul imul push imul imul imul add push gs outsb xor add dec gs insb gs jo jae je outsl outsb gs gs add jb gs jo jns outsb imul bound jb jne je add push jb outsb jae push imul je insl gs outsb fs add add jae jb popa imul dec outsb fs jae gs inc outsl outsb jbe jns bound imul jae imul add add dec outsb arpl jo jb add outsl jb push insl imul jae insl insl gs jne gs imul add add popa bound je popa insl jo add add outsb jns je jo je arpl popa add jae imul outsb jae add inc imul imul add jne insl gs xor add push imul gs outsb jae add bound imul outsb gs gs add dec jne imul jne outsb je jb xor outsb outsl outsb popa jo outsl jb imul add add dec imul outsl jb jae add add gs jb jae add inc jb imul outsb gs popa outsl gs outsb outsl insb outsl imul popa insb imul add jae popa insl data16 fs add jae outsb jae fs insb outsb gs add je outsl jae je xor push popa imul outsb gs outsl outsb outsl insb jns imul imul gs add add dec mov int3 adcl arpl in out sahf fwait xor fbstp inc mov loopne outsl add xchg daa sbb mov cmc mov popf jle push jne outsb gs ja jns add inc outsl jb gs outsl xor add inc imul jb imul fs add add jb jo imul js je arpl dec outsb je jae imul add gs popa jae imul add add bound popa popa bound popa insb insb outsl insb popa jb add push je jo jns outsl gs popa add add jae outsb imul jae outsb jae add push outsl jbe imul gs add add outsl jb outsb gs gs imul jb add outsb jae imul add inc data16 imul gs gs jb imul push outsl jae fs jae addr16 jb outsb je imul jne gs inc outsl jb fs je gs add jp addr16 jo jo jns imul imul fs add je jb je popa insb imul popa jb gs jo jo gs jo insb add add je jb add dec imul outsl insl add je outsb popa add popa insb arpl je add popa outsb fs jb je jb add add push imul jae gs add popa jae jb outsb gs add jb imul add imul imul jae add insb imul add dec outsb imul cmp push outsl insl push gs add add addr16 outsb outsb jae add outsb fs insb xor dec outsl outsb jae insl imul gs add bound popa outsb je add add arpl add popa outsb addr16 outsb imul add add add outsb popa fs jae imul push imul jns jae data16 gs imul add add popa outsw jb popa je cmp add add insb insl gs fs addr16 add jne jb jbe fs add outsb popa insb imul add add outsb outsl arpl arpl add inc jb outsb jp jb fs insl jne outsb jae add inc outsb jbe outsb fs jae jae outsl jb popa popa insb gs add add jb gs addr16 push add add inc jb push insb gs add add jp gs pop dec lods leave cmp lcall inc mov ret inc mov inc xor out incl adc test movsl aad adc dec iret jmp ljmp popa outsb imul xor add add popa outsb imul add popa outsb bound jns add bound gs insb imul imul jae add outsb je jae add fs add add imul outsb add add inc imul add add gs popa outsb fs outsl outsb jns add jae imul jb jae jb outsb addr16 gs inc popa jb push add add jae popa outsb fs outsl fs addr16 xor imul add add jb fs add add insb bound outsb outsb fs add outsb addr16 jns add add inc insb jne arpl add jb insb outsl imul jb popa outsb popa insb jns imul jb insb jns je fs add add outsw jb popa je jb je add add imul outsb je insl outsl insb outsl imul jne fs jo jae add add jb gs je imul imul add popa insl outsl jb imul push jbe outsb addr16 outsl jb insb jns je outsb fs inc outsl jb jo imul add add gs jae jae outsb outsb gs add imul jae add jae gs insl gs jae jb xor push push add push jns jo outsb jns push jb insl popa je imul add add outsb jae jo outsl jae je jbe insb jns add add jb jne insl popa je jb popa insb gs add add insb popa addr16 outsb addr16 gs add bound fs outsb outsb jae add insb push gs jns je insb jae jae outsl jbe imul add jb bound jae jb inc fs jo imul inc gs imul add arpl outsb je insb imul push jae outsb xor je jo jb outsb popa arpl add add push jo arpl imul jb gs add imul jb jne add fs imul jb add add push outsl insb insb gs outsw jae imul outsb jae add popa arpl outsl jne popa add dec outsl outsb jbe jb imul add dec outsl imul jae push imul inc imulb popf sub fwait adc and stos mov mov jge sbb jg xor pop add inc mov sub iret mov inc mov test fwait inc add addb jne je jb outsb gs jns add push je bound popa insl bound gs add jb jne addr16 gs add add popa imul arpl add add outsb imul push jo outsb outsl jb push add add imul add add add add popa outsb fs outsb gs add add gs jb add je jb popa imul add push insb popa fs outsl insb fs gs je jb gs add add jae jb gs add push jb jo imul fs jb insl imul xor add add outsb jns add add insb insl gs je add add outsb imul outsl bound popa outsb je dec outsb jbe imul add add je jb bound jo je jb outsb add add jo imul popa outsb imul gs outsl addr16 outsb insb imul jo gs add outsb imul jns insb je add outsl jne outsl outsb push imul jae add imul je jb add outsw jb jne outsb imul popa data16 jae jb je add add imul outsb add je jb jne add dec outsl fs gs add add bound imul add jo bound outsb outsb add imul jae popa je outsb add add push arpl je jb popa insb add add add jb jbe jae insb jae add outsb jae jne add add inc imul popa outsb imul add add jb jne gs jae xor add add imul add inc insb jns gs xor add add jb je je jbe add push jbe gs insl gs jb add imul insb jbe add add gs outsl jae jae imul jb outsb jae popa outsb addr16 jae add imul popa popa fs add add dec jae outsl jo jns popa xor inc imul outsb add add insl jo add add jae popa outsb jae add sbb frstor test (bad) jge mov icebp inc lea test dec jecxz add leave (bad) xor dec mov insl arpl sbb daa dec dec out outsl loope push data16 insb jns push push gs imul inc imul push outsb push imul add je jb outsb jae add add outsb gs jb gs gs add add jbe insl bound jae add inc jne addr16 imul gs gs add add add add outsb jae popa bound outsl outsb jae insb outsb je jb add add imul xor bound imul add push je insb gs popa addr16 outsb jae add push insb popa je jae outsl insl imul popa outsb fs outsb gs add jb outsb fs jae jb add outsb jne je add jne popa je add add push je data16 insl je popa outsb add add popa jae gs jo add add gs popa fs jae add jb insl bound je add push insb jne jbe jb popa outsb je jb add inc addr16 bound insb outsl imul outsb popa jb imul inc popa insb popa fs gs add add jne push je popa insb jbe imul add add bound gs imul add add outsb jp jo outsb popa jp outsb add push outsb data16 je jne xor outsb imul jae add add bound jns outsb add jo jae je bound imul add fs insl gs jae imul jae add push imul push push je jb jo outsb imul push popa insl insl outsb jb imul add add arpl jb insb jae add push gs addr16 je outsl outsb add push insb imul add add je jb jb add add push jns outsl insl jae imul add add inc popa gs gs outsl jo outsl jb jne outsb gs add add bound insb popa je add inc imul gs jae add add push gs outsl popa imul push je dec popa jae jb xor add add fs je jae bound popa insb imul imul outsb jae add inc insb popa addr16 outsb cmp add imul jae add je je xor mov pop jae dec into dec xchg jmp and cmp inc mov xchg mov pop xchg push or sbb mov movsl lahf iret aas mov rcrl pusha mov scas jecxz jecxz dec popa imul add dec outsl jb jae jae gs gs add add insb imul outsb jae arpl jb insl popa je add add jb popa insb outsb gs add outsb imul add insb popa outsb imul add add add add bound outsl outsb xor add push outsl insb outsb gs outsb outsb gs add imul outsl addr16 insb add add jo imul insl insl gs jae jb gs push imul add add dec gs imul jae gs outsb je popa insb insb jns insl gs popa outsb imul outsl outsb fs outsb outsb gs add add jb popa outsb fs gs je jne je jb xor dec jne popaw jae jae add add jo bound popa outsb imul add add outsb imul insb outsl jo je imul je gs inc outsb gs insb imul popa outsb outsl gs gs add add insb insb outsl jb imul add dec jbe jb insb outsl jne imul je fs imul je bound insb imul outsb add add imul insb gs add jae imul push outsb add add imul outsb fs add add outsw popa insb gs add jb gs jb outsb add add imul xor add fs jns outsb insb jns add add imul imul inc bound insb jne imul outsb je outsw jb add add popa insb outsl gs dec jne insb gs outsb jae add push jb je imul je jb gs add add outsl jbe jb imul je je add add inc jne imul jae jb imul add outsw jb je popa gs add jb gs gs outsb add jne jb push gs cmp dec popa insb jbe outsl outsb gs gs add add outsl jbe gs jne je insl add push jns je outsb fs add dec outsb arpl add add outsw jb addr16 gs imul add add jb gs outsb gs outsb add dec popa outsb bound addr16 outsl jbe outsb gs add add insl outsl jb gs add inc data16 jb jb outsb gs sarl xchg mov add test outsb push sahf lret lods jno (bad) xchg push push sbb dec stos repnz mov dec hlt orb dec bound pushf fsub call push out dec cmpsb pop arpl inc mov push jne bound fs add add outsb fs xor imul outsb insb addr16 add outsl bound imul add outsl fs jo gs jae outsb gs add add dec jne popa arpl imul popa outsb gs add push add add jb arpl je outsl outsb gs add add popa imul add imul imul jb outsb jae add imul add add dec jns jae insb imul popa fs add jne bound outsb xor imul outsb popa outsb je jno imul popa jbe add add bound insl gs outsb imul push imul outsb imul add dec jo je jb jae imul gs add add jo outsl je arpl je jb inc outsl outsb je jb gs add inc gs imul outsb add add outsb insb jne imul jae xor add add je add jae jne arpl imul imul popa popa fs jb imul jae popa je outsl outsb gs aaa add insb imul jae dec push insb outsb fs add imul xor add fs imul add jne gs je jp je outsl outsb add je outsb gs insb add add outsb jae outsl jb popa je outsl outsb xor push popa imul insb add fs gs outsb addr16 add add imul popa outsb imul outsl jb imul push jo gs imul popa insb gs add outsl arpl jne bound gs xor add add je outsl outsb jae popa bound insb gs add add jbe jb outsb addr16 add popa outsb outsl jne outsl jne insb jns add inc jne insb insb add add bound je jp je outsl outsb aaa add push jne gs outsl fs add add push popa imul jae imul insl outsb jae gs je add add jae popa popa je jb gs add outsb jae je outsl outsb jae jb jae gs xor push imul jb outsb jae popa jbe jae add dec test stos fildl adc cmc cmpsb push out pop xlat ljmp dec sbb and jl adc inc mov sbb insb pop dec movl push scas add add dec imul xor add popaw outsb jns je add gs popa insb imul add add insl popa jae gs outsl outsl add jae gs add add outsl jo imul jne outsb popa je jb add add outsb outsl arpl je add add outsl je imul push jb outsb addr16 dec outsl outsb outsl insl imul arpl outsb outsl jo je jns add gs jbe gs add insl outsl outsb je addr16 add add bound imul push jo popa outsb jae add jae jne arpl je outsb outsb imul inc jb insl addr16 outsb addr16 gs outsl fs add imul popa addr16 gs add add dec outsb popa gs gs add add imul add add outsl jb jb insl insl outsb add jae insl jo outsl jbe outsb add add dec popa outsb fs add add push je fs jne add add outsb imul add insl jo imul push jb jo jb gs add inc push outsb xor add add fs gs jae jb add add add add push outsb imul imul imul jae inc popa insl jo imul jb je add add bound arpl je add addr16 bound outsb fs jae jb add gs imul add add jae gs jo imul add insb data16 add add outsb popa jae add imul imul add add gs insb insb gs outsb jae add je data16 add jo jb outsb jae insb imul add add jb outsb addr16 add add push imul outsb gs add outsb outsb gs insb jae imul push jne jae imul outsb outsb jae add add arpl je add add jb je jb popa je jbe add insb gs imul add gs imul imul add insl jo outsl insb jns add add jb fs je jb insb jae jb add add mov add lret xchg clc mov notb inc movsb mov dec dec movsb xor and jnp js mov aas fbstp rolb dec iret popa dec lcall pop inc outsb imul outsl jbe outsb xor add add fs popa outsb fs insl gs outsl jb popa insb imul jb jne jae add outsb outsl jo popa gs inc jne jns push jae add add imul je jbe add add jb popa insb outsl js insl add add insl popa imul jae popa bound gs add bound add jne arpl addr16 addr16 je outsl outsb popa insb add add jne jae jns addr16 add push outsb jb fs data16 addr16 imul push jb imul jae popa bound jae add add imul outsb add add popa jb jae gs add push arpl outsb imul add add imul add jb gs add add fs outsl outsl je add push outsb bound popa outsb arpl add dec jbe jb jb push dec outsb je jb imul jne push add add arpl imul outsl jb imul dec popa jb outsl outsb imul insb imul add outsl imul popa insb imul popa insl insl imul outsb jae add inc je jae popa bound jb insl popa gs add add push jne gs outsl imul je jns add jo outsb je bound jbe je inc je jb imul add push popa outsb fs add push popa fs outsb imul add inc jns outsl outsb gs insb outsl addr16 add dec gs jo gs gs push fs insb addr16 xor add outsb fs inc imul outsb fs jae gs insb xor jb jae je je add inc jb outsb insl gs add add inc imul outsb gs outsb addr16 outsb arpl insb gs add add je outsl addr16 jo imul jbe jb gs outsl imul push arpl insl jae popa outsb imul add add insb imul outsl insl add imul fs add add jb outsb fs add add outsl insb outsl imul gs jb push pop jl cmp push inc cli pop shl adc ja out in inc cwtl in pop pop lods jmp fsub outsb inc sahf inc test inc xchg inc mov repz mov ljmp jne data16 fs add add push imul add add push popa data16 xor insb fs popa outsb fs imul je dec popa jb imul push dec outsl jbe bound gs popa jb outsb cmp add outsl jb imul add popa fs arpl add add dec jne popa imul add add push popa insb addr16 push xor outsw insb imul addr16 add arpl jb outsl jae add dec insb popa addr16 insl popa add add jb je imul outsb add add push jb bound popa jb outsb gs add add je jae outsl jb jne imul insb add add fs jbe jae add push add add jbe jb jae add add insb outsl arpl imul outsb je gs add add jb jne jae add add push outsb je arpl insb outsb gs xor add jb addr16 gs add jb jb outsb imul insl jo jb add outsb jb addr16 push outsb gs gs gs add add insb push outsl jb outsb fs outsb xor outsl jo popa gs add push popa jb popa jns add add insl imul outsb gs add jbe jb imul popa je jns gs jae jb add push gs jo outsl outsl imul add outsb outsb gs xor add add popa popa je gs add bound jae insl popa imul add jae add add insl jne je outsb imul dec imul add add popa je jb outsb add add inc insb imul add add insl jo gs gs add data16 add je jb jb popa outsb imul gs push jb outsb jae gs popa insb outsb jae add jne imul jne data16 outsb imul outsb imul add push insb popa outsb fs dec outsl jne outsb popa insb imul jne fs push gs imul popa je outsb add jp outsb insl popa jae add add imul je outsl outsb add add push jae imul daa rclb andps mov jns cld mov jp mov inc mov subl push enter mov sub es jae pushf dec hlt lahf or imul jae add jb je add imul add je jo outsb gs add add outsb jo popa jns outsb add add push outsb jns jne push gs xor inc outsb outsb gs jae outsb outsb add add push outsb gs add push jo jns insl outsl addr16 jo jns add push jb insb outsl xor inc jne jae gs outsl je gs jae outsb jae add inc gs imul je je add add inc imul outsb xor je insb popa jae add pop popa ja gs jae imul outsb xor je popa fs popa outsb insb imul outsb imul gs inc outsl outsb je imul outsb add add addr16 outsb add outsb jae outsl jb gs imul add push outsl jae je jbe jae add dec jne jae jae jb jae outsb jae add inc popa je imul jb insb insb outsb jae add add push gs imul jb bound jne add add push popa addr16 insb outsl addr16 add add imul outsb jae jo insb imul add push outsb arpl jo popa imul add fs add jo jb imul add imul jae xor add dec popa outsb popa insb imul jae add push jo gs gs add add jae popa imul add dec gs popa bound outsb xor add add popa insb bound imul outsb fs gs insl insl gs add add popa fs jb gs add inc imul add add imul add inc insb arpl fs arpl insb imul arpl outsl popa jb add addr16 gs add arpl jne imul insb imul insl imul imul jb outsb fs imul jae dec outsb outsw insb fs outsb je add outsl jne outsl jne outsb gs add add imul imul add push imul fs imul gs dec push insl insl gs imul add add int3 xor aaa jle push inc cltd adc repnz mov push sbb xchg fsubl pop mov dec lods xor or stos add xchg nop or add add add add insl insl gs add insl bound imul add add (bad) (bad) (bad) jmp add bound imul add adc add adc add or add add add add or push gs jbe imul add or push outsb imul gs or adc add incl xor add add imul outsb gs gs add or inc jb gs outsb add jae cmp mov add incl das add add or push outsl jb jne jae je xor add or inc push outsl outsb jae add adc pop adc add incl sub or inc jb imul outsb gs add gs gs add or add add or add adc push imul imul imul add add outsl jb popa je outsl outsb add push daa add add incl add add or dec outsb arpl jo jb add or dec jae arpl imul or sub add add add push add addr16 imul outsb jae add push add popa outsb outsb jns add add hlt pop adc add add or outsb jae push imul push push add adc add adc or pop add add add add adc push imul jbe insb outsb gs pop add outsb imul std add add add add add or push jne gs jb jae add push add imul add push xchg or adc add add add or add gs popa gs jae jae popa outsb gs add (bad) jbe insb gs imul jae add adc adc add or or incl sub add or add insl insl gs jne gs add add popa js add or add or incl add add imul push add popa ja xor add or add adc incl xor add push or popa fs jb imul add or push outsb imul arpl add add adc or add add or je jb jo imul add insl insb je jae add or jle push push adc add add add add or inc jne popa js je xor add add gs add add hlt or add add adc add jbe add pop add jb bound add add adc add or adc incl xor add adc outsl jo imul gs add or dec jbe jb insl jo imul fs or push adc add add add add or fs je outsb gs gs add or push jb gs popa jb xor add or push lea xchg adc adc incl das add add add fs jae gs or inc gs insl popa fs add or or adc incl das add add jne insl gs xor add or arpl insb gs push add add push jne leave push adc incl das add add or je jb gs imul add popa ja jb popa bound add or or adc add add or popa insb popa bound je popa insl jo add or push je imul add push cwtl add push add add add add or push outsb fs insb insb gs or dec jne gs gs fs add add mov pop add add add add verw arpl imul add or jo outsb jae jb outsb add adc push adc add add add add or dec jne imul add or push insb jbe outsw fs gs add push dec push push (bad) pop adc add add add add or bound jb jne je add or inc outsl jne je jns outsl arpl add add les add add add add gs outsb add or inc je popa outsb outsl insb add add or mov adc add add add add insb popa outsl gs outsb outsl insb outsl imul add jae popa je outsb fs psllq push or adc incl sub or push popa jb jae outsb imul jo outsb addr16 je fs push ljmp add add adc dec gs insb gs jo jae je outsl outsb gs gs add or inc popa jb outsb insb gs add adc or adc add add add add or gs outsb je popa insb xor add or push je jbe insb jae jae add rdmsr or pop add add add and add jae jb popa imul add pop add imul stc add or and incl cmp add and add jae imul je jne outsb je jb xor add or imul jae add adc cmp adc and incl sub add and imul add or gs jbe je outsb jae add add or adc add add add add add outsb popa outsb arpl xor add push add imul add add add and incl cmp add and outsb jbe jns bound imul add jns fs jb jae popa popa insb gs add add add adc adc and incl xor add es jo jb je jb outsb jae add or push je outsb gs outsl add add adc punpckhwd and add add or jae insb imul add add imul add add orb adc es add add sub imul outsb xor add add outsl add add or daa add add add add adc dec popa jb gs jo jns outsb imul add or inc jo jo jns popa insb add add add or add add add or inc popa imul gs add add je add or fiaddl sub incl cmp add sub add outsb popa jo outsl jb imul add adc je insl jo jb jae push fs insb add or inc add sub incl sub add sub add jb insb imul pop add push jns add adc or sub incl add add jb jae imul or jae gs fs jae add add adc incl sub add or inc gs popa insl jo add or push outsl insb outsb imul pop add sub add add or inc data16 je gs or jb jbe insb popa jb popa add push lret adc pop daa or cs add add add add fs add or popa jo insb imul je xor mov das add add add xor add gs imul adc inc data16 insb fs jb outsb imul add add adc adc xor incl sub add xor add popa insl data16 fs add or inc arpl jae xor add add daa or add xor incl sub add xor dec imul outsl jb jae add add dec imul fmull inc adc incl das add add add jae imul add or jae jns jo jb add adc aam cmpsb or xor incl das add add gs outsl outsb outsl insb jns imul inc jae popa jne je add or adc xor incl xor add ss add jno imul jns add or dec outsl insl jo outsl insl imul mov or incl sub or outsl jb push insl imul add jb popa jae add or or prefetchnta ss add add dec xor aaa add leave (bad) xor dec mov insl arpl sub test bound inc xchg (bad) jge cmp xor or stos add xchg mov add pop add add adc push outsw jb jo outsl arpl jae outsb jae add insb outsl imul imul add inc add add (bad) (bad) (bad) jmp add outsl imul imul std or add add add push add inc add add add add or push insl bound insb popa je add or push imul insl gs gs add or popl adc add add add add push add popa je jae outsl insl imul push add gs add push fimul adc add add add add lldt outsb push imul add or imul outsl jb imul sub xchg pop add add incl cmp add add add imul pop add jae jb jbe imul insl popa outsb outsl gs add push sahf push cmpsl or incl xor add add imul jae add lldt insb jbe jo imul jae add add add add add or fs jae je bound imul add add insb insb imul hlt or add adc add add or inc jne addr16 imul or inc jb jae jb jbe add or sahf or push add add add add or insl outsb jb imul add or inc js gs outsb arpl add add adc add incl das add add or inc imul gs jae add or inc jne insb gs gs add push jno push or or or incl add add or push outsb imul xor add or insb jae imul add add add add add add or outsl jb jne outsb gs add or dec jne popa jb gs add or push adc add add add add add je jb outsb jae add add push gs add adc mov pop or or incl xor add or gs gs add adc jae jb addr16 jb jae je data16 add or add add add add pop add gs gs add or jo insb jns je insb imul add push pop or or add add or gs imul add or fs jb jae je xor add or adc add add add add adc popa insb imul imul outsb jae add or dec outsb jp gs add add inc add (bad) incl add add pop add fs outsb add add outsw arpl imul add adc pop xchg adc add add add add adc outsb jae popa bound outsl outsb jae insb outsb je jb add or inc outsl jb popa addr16 add or push adc add add push add jne push or imul je jb add or add adc incl das add add add data16 je jne xor add jb bound outsb gs add or add adc incl xor add adc popa popa insb jbe imul add or push outsb jae gs imul rorl mov or adc incl sub add push or outsb outsl jbe insl bound jae add or arpl insl popa imul add add faddl adc add add or inc popa insb popa fs gs add or push outsl insl insl add or add adc add add add add or dec imul gs xor add or inc jb push jae add or int3 mov adc add add add add push add imul push outsb jae outsb fs add or or or incl sub add sbb add je je xor add or dec jo imul or mov adc add add add add or inc outsl arpl jb insb jae add or dec jae push arpl add or push adc add add add add jae popa jb popa outsb je jb add or dec gs je jae jae add pop pop add adc add add add add jb addr16 je outsl outsb add or jae jb arpl gs add or or sbb incl add add or inc insb popa addr16 outsb cmp add add push or pop movb or add add add or dec popa jae jb xor add or jae data16 gs add pop ret or adc add add add add or push je data16 insl je popa outsb add or dec jne imul add add adc adc add pop add add add add or inc gs popa fs jae add or dec imul outsl jne add add es push or and incl daa add add or bound imul add push add repnz incl cmp add and gs jb gs gs add adc inc outsb je arpl jae imul add or loop adc add add add and add je jb jb add or dec imul je add or jle adc add add add add jae fs jo add push add imul adc or and incl sub add es add fs je jae add or gs outsb fs gs add or adc and add add or outsl bound insb outsl imul add jae insb imul add or or notb adc add add add add adc push push je jb jo outsb imul or push outsl insb jae jb popa insb outsb xor add add add add add add add add adc push jns outsl insl jae imul add or dec gs jbe fs pop or add add add sub add jb insl bound je add or inc imul outsb fs add adc stos or adc sub incl xor add sub outsb popa bound imul add or fs outsb imul push fimul adc add add add add add insb outsl popa imul add xor add adc or add add add popa jb imul or popa insl outsl insl popa jae outsl imul mov pop push adc incl sub add or dec jbe insb popa je add or jbe imul add add or inc add sub add add or jb outsb fs jae jb add push add bound add or add pop add add add add push add outsl insb gs popa addr16 outsb jae add pop add imul inc or or or add add add or push push gs imul add adc popa outsb fs jae gs imul add adc add add add add pop add outsb jne je add or push imul popa jb gs add or add adc add add add add pop add jbe outsb jae add pop add arpl gs add bswap shld decl adc add add add add add imul add or push outsl insb insb insl outsl jo outsb gs add or or or or xor incl xor add xor outsb jp jo outsb popa jp outsb add or inc outsb gs outsb xor add or or or incl xor push add outsb fs outsb gs add or arpl outsl jae outsl jo xor add or xadd inc or xor add add adc fs insl gs jae imul jae add pop add popa data16 add or pop xchg add add int3 xor aaa or or pop add inc mov sub iret mov insb lret sub fwait adc and stos mov cltd iretw adc pusha rcll rorb add add add inc jne outsl insl outsl bound imul add cmp sbb add and and (bad) (bad) jmp add cmp xor dec or add add add add inc add add add add add jae outsb jns add or outsl arpl outsb fs popa insb add pop inc push clc or adc add add add add or jo je jb outsb add add add insb imul or or or add add add add add gs add adc push gs imul gs add add hlt add incl xor add add add bound jae popa outsb imul add or dec gs insb outsl jo outsb add add adc add adc add add add add jne je jb outsb gs jns add or push gs addr16 jb gs add or add add adc incl das add add or push outsb jb je je jbe add or dec jbe jb popa outsb outsb xor ds or adc add add or push jb outsb jae jne add push add gs insl jo popa je outsl outsb xor add or les push pop adc add add add add push add jns insb je add adc push push popa outsb popa gs push add or sub xchg adc add add add or addr16 imul arpl add push add jb push je addr16 jb xor add adc push adc add add add add adc inc imul insl jb popa fs add or push popa outsb outsb popa je jae add add and adc add add pop add jo gs add adc jb imul imul outsl outsb gs gs add or adc add add add add add jns gs xor add or insl outsb addr16 add push enter incl adc add add add add popa outsb fs outsb gs add or inc popa insb insb outsl jae gs add adc adc or incl add add or data16 push add or dec outsl outsb jae popa imul add add adc incl sub add ud2 add arpl je jb popa insb add add outsb add adc pop or or push add add add add or push jbe gs insl gs jb add adc inc outsl bound insb je gs fs push add pop arpl pop pinsrw (bad) incl cmp add adc add gs add sbb dec outsb je jb insl jae jbe je gs outsb addr16 gs add adc adc add add add add or outsb je jb outsl insb jbe add adc inc outsl jb popa je imul fs add adc pop or add add add add lldt popa bound popa insl bound gs add or arpl jae jae jae add add movups add add add add add imul outsb add add add gs imul add in or adc incl cmp add adc jb outsb jae popa outsb addr16 jae add adc inc outsb imul gs popa jae imul test insb pop mov adc incl das add add or outsb outsl jb push add or imul insb outsb jae add add mov incl xor add pop or dec outsl fs gs add verw gs bound imul mov add incl xor add sbb add jb jbe jae insb jae add or push outsb arpl bound gs add pop and scas adc incl sub add sbb jo add or outsl insl gs push add add add push lcall sub push add gs jb add or push outsb addr16 add or add sbb incl sub add sbb jo jb data16 jae jb je add add push add adc or or adc add add or outsw jb jne outsb imul add insb insl imul adc adc add add sbb incl add add jae popa outsb je add or fs addr16 bound aaa add add or sbb incl daa add add pop add outsb imul add push add insl gs add or push mov sbb add add or push jb jo imul gs imul (bad) or push mov incl xor adc inc fs jb insl imul xor add or inc data16 jae outsb fs add add mov (bad) movups add add add add or inc popa jb push add push add jae gs outsb addr16 gs add or or add add add adc push je insb insb gs je je outsb add pop add insb addr16 add wbinvd add pop xchg add and incl aaa add add adc fs outsl insb fs gs je jb gs add or dec insl imul jns aaa or or and incl das add add add outsb imul add or je outsb imul fs add push into push das adc or and incl das add add gs outsl jae jae imul inc insb outsb outsb outsl insl popa add or or sbb adc incl add add pop add outsb bound add or gs insb imul add or psrad in adc add add push add imul or inc outsl jne imul add or dec or adc add add add sub add jae popa outsb jae add or dec popa jne popa je outsl outsb add push add pop add add add add add or dec jae outsl jo jns popa xor add push add jb jae add or or add add add or dec outsb jbe imul add or outsb popa popa jb outsl insl push add push pop adc arpl adc add add add add sldt outsl jne outsl outsb push imul jae add or jae outsl insl insl outsb jae add or add sub incl daa add add add insb outsl jp outsl outsb add add dec popa imul pxor adc adc add add add add gs imul add gs add adc pop or adc incl xor add cs add gs outsl addr16 outsb insb imul add gs je push add add add sub add add or gs addr16 gs add or jne fs gs popa outsb fs or into or cs add pop add outsb imul or push jne imul outsl insb imul or add add add add add or jne jo bound outsb outsb add or dec outsb jae jb insl outsb je add add or xor incl xor add xor add insb insl gs je add adc push gs popa insl outsb je jb outsb addr16 add adc add adc add add add add push add imul je jb add lldt outsb imul jns addr16 add pop jne orb pop adc add add add add add jb jne gs jae xor add or push outsl je outsb je jns add cvttps2pi adc add add add xor je jb popa imul add or arpl jo gs arpl add or add xor incl das add add or je jae gs gs add or push jb addr16 insl jo outsb imul or or xor add add push add outsb imul add jne popa imul add add adc iret adc ss add add dec xor aaa lret push xor sbb mov sbb test stos fildl adc cmc cmpsb push cmp xor or stos add xchg lds add bound add add add outsw jb outsl outsb imul add imul je outsl jae outsl jo add add inc add add (bad) (bad) (bad) jmp add arpl jae gs outsl jae outsl jo add mov add inc or add push add inc add add add add adc push gs jne arpl je outsb outsb imul add jb imul outsb gs pop push xor add incl aaa add add adc inc jne push bound outsb fs jae jb add or inc outsl jb insl fs jae cmp add adc or add incl xor add add add outsl jb jb insl insl outsb add or jb push bound add or push add adc add add or imul popa addr16 gs add pop add jb imul cmp sbb lcall sub add add outsl jo jb gs add or inc popa imul clc pop loop sbb repnz add incl das add add or data16 insb gs imul add or inc outsb gs imul add add or add add add or push imul je add or addr16 insl imul add pop enter sub adc add add or inc push outsb xor add or inc popa arpl jae gs add push and adc add add add add or inc jb jae jbe gs add adc inc push outsl bound je jb popa insb gs add or pxor inc add or incl xor add or add gs addr16 outsb addr16 gs outsl fs add or push arpl data16 outsb add push mov mov or incl xor add or outsb gs insb jae imul or addr16 je gs add or pop ja adc or incl sub add or add outsb imul add add jo jae jae jae add adc or or incl sub add or gs add or dec jb outsb je je add pop mov add or incl das add add or push imul add or inc outsl insl jo jb je jae xor add or add adc add add or pop outsl outsl jo imul add gs outsl outsb imul jne xlat add movups add add add add or outsb bound imul or push jb popa fs jae jb add (bad) adc (bad) incl sub add adc add popa outsb outsl jo je jns add add outsl outsl jb add add or adc incl xor add adc add jae gs jo imul add or dec jne je jb ja xor add add pop xlat add or add add add or outsb gs jae outsb gs add or push popa imul gs insb imul icebp or mov incl sub add adc add jne jae jne add pop add outsl insb imul test mov add add add add gs imul imul add add imul xchg push rorl pop adc add adc incl sub add push pop add jo insb imul imul popa jb je add push sub loopne lea adc add add or jb je jb popa je jbe add adc jae imul addr16 gs jae popa bound xor add adc sub add add or push outsl insb data16 add or inc popa fs outsb fs add adc and or pop add add or push jne jb imul add je jb popa insb imul (bad) or or adc add add add add pop add gs outsb jae add or inc jns jb imul stos pop or mov adc add add add sbb dec gs gs jae jb add push add jae outsb jae add or adc add add add add add bound arpl je add or outsb gs insb outsb imul (bad) or adc add add add add outsl je imul dec popa outsb gs add push int (bad) adc adc incl xor add push adc jae jb fs je jb insb jae jb add add jns add add dec push adc add add adc dec jns gs outsb jae insb imul add add gs add add adc push add add add add or jo outsb outsl arpl je add adc inc push insl outsb je jb gs add adc or mov adc add add add add or insl imul jbe outsb add add inc fs jb popa je jbe jae add push pop adc mov incl sub add and add outsb je addr16 add or jns arpl imul add or adc push adc and incl sub add and add popa gs gs add or popaw jb gs addr16 add adc or adc add and incl sub add and add imul add or push gs jbe popa insb addr16 mov or and incl add add insl jo outsl insb jns add or bound jb jb outsb addr16 add adc add and incl cmp add sldt gs insb insb gs outsb jae add adc push jb jae ja jb push jae jae add add adc push adc add add or inc popa insl jo imul add add outsb gs jns outsl insb outsl imul popf pop xchg sbb inc or es add add add adc push jne jae imul outsb outsb jae add pop add push jb xor add push pop adc add add add add add or dec imul xor add or imul gs outsb jae add adc or mov adc add add add add or outsb imul adc jae imul insb imul add or or adc add add add add or dec outsl outsb outsl insl imul add push add jae jns add or adc sub incl xor add sub add imul add add pushw gs gs jb outsb add or stos or incl sub add sub jae gs outsl outsl add add jae add or or or adc incl add add or push push jb outsb addr16 add or inc jb outsb je outsb imul adc add add sub add add or dec popa outsb fs add push add insl imul outsl jne add emms or cs add add add or push imul add sldt jne gs outsb addr16 xor add add adc incl sub add xor add jb outsb addr16 add or jae popa addr16 imul pop lret or or incl sub add xor add outsb popa jae add or dec outsl je outsl outsb gs je add add add xor incl das add add or jo imul jb je add or push outsl outsl insl add adc adc xor incl das add add add arpl je add or jo jo popa bound imul adc jle push pop adc add add or push outsb imul add imul add or or xor incl xor add sldt imul imul jae add pop add imul or pop adc add add pop add je data16 add or inc gs jae outsb imul hlt pop push (bad) or ss add add int3 xor aaa daa mov sahf inc test inc xchg inc enter jl cmp push inc cli pop shl adc dec lods xor or stos add xchg fisttpl add push add add push add outsb imul inc jb bound outsl insb outsb imul inc add add (bad) (bad) (bad) jmp add jbe bound outsl insb outsb imul add add add sbb add bound add inc add add add add or push popa jb popa jns add or imul gs add add jmp add incl sub add add add insl data16 fs add pop add popa jb insb jns add or add adc or add incl xor add add dec jne popa imul add or push imul outsb jae add adc jl es adc add add add add add jbe arpl add pop add insb insl outsb jae add or add add incl sub add add insl popa popa je gs add or insl outsl je insb imul outsl add add push adc incl xor add push or push insb popa outsb fs add or push outsb outsb gs jb gs add or adc add add add or push jne jo gs gs add or push imul jae gs add push lock or incl cmp add or add insb fs popa outsb fs imul je add adc push jb data16 imul insl gs add adc adc pop add add add add push add insb push fs insb outsb gs add adc inc gs outsl outsb jae jb je outsl outsb jae popa add outsl pop test push add add add add add push add outsb jae gs popa insb outsb jae add push add jae outsb add push (bad) adc or incl xor add or add jb jb outsb imul insl jo jb add pop add jns insb gs add add adc or or incl inc add add outsb jb addr16 push outsb gs gs gs add adc inc popa addr16 arpl insb imul jae add add or or incl xor or inc outsl jb je imul outsb add str imul outsb imul jae add add push push add incl aas add add adc push jae gs jb popa outsb imul gs add adc push outsb jae jb popa data16 gs imul aas adc or or add add add add or jae outsl jb imul add or push jo fs jb gs add adc push cmp push add add add add or push imul add or push jne insb gs jae xor pop add adc add add push add je arpl insb outsb gs xor add or insb outsb jae popa bound jae add adc or add or insl popa insb imul add push add jo imul jae add add add add add add add lldt insl imul popa je outsb add add jbe outsb arpl outsb gs add or sysenter pandn adc add add add add add jp outsb insl popa jae add or popa jp insb imul add or add adc incl daa add add insl jae add or insb outsl bound outsb add adc mov push or adc incl xor push add arpl add adc fs imul jb outsb outsb xor add or inc add adc add add or dec imul add or insb popa outsb insb addr16 add push add dec or push add add add add or bound jae insl popa imul add or dec gs jb insb gs add adc or pop add add add sbb add outsb je gs add or push jbe outsb outsb fs add pop insb add sbb incl sub add sbb add arpl jb outsl jae add or push je jb popa jae jae add adc add sbb incl sub add sbb add arpl insl jae add or push push fs add push repnz adc add add add sbb add data16 xor add fs bound add or add add add popa je jns gs jae jb add or dec insl imul add add scas add add add add or inc insb imul add pop add imul pop jo push or add add add add str insb push outsl jb outsb fs outsb xor add or push outsb fs outsb je add add push adc add add pop add jne imul add outsl bound outsl imul push ficom out cmp adc add add or push popa insb addr16 push xor add jb outsb jae add adc add and incl xor add and add insl jne je outsb imul add add jae insl insl gs add or or xchg add and incl xor adc dec outsl jne outsb popa insb imul jne fs add or jae jb jo gs add push std adc add incl xor add and add je gs add add gs jae jb jb outsb arpl add or adc and incl sub add and je jae outsl jb jne imul push jb gs add adc add push fmull adc incl cmp add sbb outsb popa je jb jb outsb imul outsb imul add push add outsb gs add adc adc and add add add insb add sldt insb fs fs jae jb gs add adc pop adc add add add add or push gs jo outsl outsl imul add add addr16 jae gs add adc dec adc incl xor add sub add insb imul addr16 add (bad) jae bound jae insb gs jb jae add or add or push adc add add add sub add fs jbe jae add adc outsw jb je outsl jne push insb jns add add rorl std push adc add add add sub bound popa jb outsb gs add or gs insb popa jae outsb aaa add or push adc add add add add add jb addr16 gs add or push gs outsb popa insb imul push or jo adc add add add add outsb outsw insb popa add push add fs outsb add or push or mov adc incl xor add or inc je imul add add bound fs jb jae imul or sub add add adc dec outsl jbe bound gs popa jb outsb cmp add or gs imul add add or or add cs add add add or inc gs je jb outsb add or push je insb je imul add push mov push or incl sub add xor add push jae imul push fs addr16 add add or std adc xor incl sub add xor add jbe jb jae add or gs bound insb gs or adc xor incl add add pop add data16 add add gs adc push adc add add add add add jae add add jae jo add adc add adc add add or dec popa insb outsl arpl imul add jp insb jns imul adc mov incl xor add or push imul popa xor add or jp outsl insl outsl jb push add add repnz xor add add or dec insb popa addr16 insl popa add adc inc imul imul outsb jae add adc add ss add int3 xor aaa orb dec bound pushf fsub call sarl xchg mov add test outsb push sahf lret lods jno dec lods xor or stos add xchg out add arpl add add add insb outsb outsl fs or popa outsb imul outsb push push outsb cmp sbb add and and (bad) (bad) jmp imul outsb push push outsb cmp xor out add cld add add inc add add add add pop add outsb fs xor add or push popa popa bound je add adc movups add add lldt outsb jae outsl jb popa je outsl outsb xor add or arpl outsl jo outsb arpl add adc int3 adc adc add add add add add jne outsb fs or inc gs addr16 addr16 add punpcklwd mov add incl and add imul add add jae imul add or pop adc add add add add jo jb outsl fs add or imul gs add add adc add incl xor add push or imul insb gs add or gs imul add or push xchg or add add add add adc dec outsb jae imul insl outsb jae gs je add or insb popa bound jb outsl outsl fs add add or incl xor adc push jo gs imul popa insb gs add or dec imul add add adc pop add add add add or imul outsb insb addr16 add or push popa popa outsb outsl imul jae add pop mov cmp adc adc add add or jae popa popa je jb gs add or inc jne fs jb outsb add adc adc add incl sub add or add fs add or push jb insb insb gs outsb add or or push jnp adc add add add add add fs add or dec outsl jb popa jb outsb xor out sahf or or or incl add add outsb je jb gs add or bound jne gs gs add or or adc adc or incl xor add push adc dec outsl outsb insb jne imul jae xor add push add outsb fs add push scas add pop arpl adc add add or insb imul add add jns add or pop pop add push adc add add add add or jo outsl je arpl je jb add or popa outsb je jo fs insb add add adc (bad) incl add add or jb bound imul add add pushw insb add or add adc incl add add push add je add push add arpl arpl je jb add adc adc add add add add add insb insb add or inc gs imul lcall adc adc incl sub or jae jne arpl imul add je jo insb outsl add or jnp adc add add add add jae gs imul add push jb gs add add or push (bad) adc incl sub add push or push imul add jb outsb add add add adc add add or dec popa jae outsb fs add push add push jne imul add adc or push add add add sbb add jae je je outsl outsb gs aaa add or push outsl jb popa imul insb add or adc add add add add or dec jne popa arpl imul push add bound gs outsb je insb insb jns add add push fcoml (bad) add sbb incl sub or push arpl jo outsl jae add or dec jne imul jae add or add or adc add add add add adc push outsb jae je outsl outsb jae jb jae gs xor add or push jae outsl jo add or or adc or sbb incl xor add sbb add bound je jp je outsl outsb aaa add or imul imul jns fmull add add add add jae popa jb jae imul gs add or inc popa jbe insb insb popa add add or or pop adc incl sub add push or imul popa outsb imul popa insb bound imul das or adc incl sub add pop or jne push add pop add push insb insb jns add add or adc add add add add or push insb jne bound outsb xor add jb popa addr16 gs add add jae movss add add add add or jb outsb jae popa jbe jae add str insl outsl addr16 jo imul add adc pop or adc add add add add or bound popa jb outsb addr16 add or imul aaa add add or and incl das add add push add popa outsb outsl jne outsl jne insb jns add pop add jae popa add dec add or and incl das add add add jb imul push jb jo jb je jbe insb jns add adc add and incl add add popa outsb gs add or fs outsb outsb gs jae jb add adc adc incl sub add or push jne bound fs add or push imul or rorb push adc and add add or inc outsb je outsb gs insb add push add je gs je arpl xor add or push hlt add adc add add add add or bound insl gs outsb imul add outsl insl outsl insl gs popa outsb add adc or add or daa add add or outsl bound imul add add popa bound add adc or add add add or jne popa outsb je jno imul jo outsl arpl je gs add femms pop lds jb adc add add add add or gs imul add or dec gs insb imul or adc or or sub incl cmp add sub add jne gs je jp je outsl outsb add adc dec outsl outsb jae imul insb insb gs add adc add rdtsc or sub incl xor adc inc imul jae popa bound insb gs add or bound fs jo jb add adc movups incl sub add or imul add pop add imul push add adc add add add imul inc outsl jne push add add or cs add add add or push imul outsb imul add add jb jo gs insl imul or stos add push adc add add add add adc bound popa jo gs jae outsb gs add adc je insb insb popa je outsl outsb jae popa jb outsb gs add or jno icebp adc xor incl cmp add xor add popa imul add adc imul imul outsl outsb gs gs add add pop or or xor incl add add adc push popa imul imul jb outsb jae add or outsl jbe jb outsl outsb outsl jne jae add add rorl push adc add add add add add fs gs outsb addr16 add push add je imul gs add add pop inc pop out or xor incl das add add outsb imul popa popa fs or outsw jb outsb fs add add or adc incl sub or push popa imul insb add or dec jne je jb aaa add add push out mov incl cmp add aaa adc dec outsb outsl arpl jne bound gs xor add push add addr16 bound gs fs add adc adc adc adc ss add dec xor aaa enter mov sub es outsb dec mov jns cld cmp xor or stos add xchg jmp add pop add add or arpl fs je jae or jns outsb imul insb gs outsb je sbb add and and (bad) (bad) jmp add outsb imul insb gs outsb je xor cmp add mov adc add add add add or push je jb push add add jae add push xchg or add adc add add add add or je jo outsb gs add or jo outsl push addr16 add psubb adc add add add add or jns insl outsl addr16 jo jns add adc inc jne jae fs addr16 jb gs add or adc add add add incl sub add add add ja gs add bound insl insl outsb jae add add adc jnp adc add add add add je imul jb insb insb outsb jae add lldt gs jo je insb insb addr16 add adc or or incl sub add push pop add imul add add insb outsl outsl insl xor add add add adc incl xor add pop pop add arpl fs adc inc push jb outsl insb imul imul add push jno aad ja adc add add add add add gs add or push gs bound jb bound add or adc gs add add or outsl insl jo popa imul add insl outsl outsb imul add adc push pop add push adc add add add add pop add insb imul pop add jb outsb arpl add or shld mov incl das add add or fs popa outsb insb imul add jbe jae outsl jb add push pop adc add adc or incl sub add or add outsl insb outsl xor add or push push popa jo add syscall push cmp mov adc add add add add jae jo insb imul add add outsb jne imul std push flds fimull adc incl xor add push or dec gs popa bound outsb xor add or fs outsb addr16 add add scas add add add add or inc jns insb outsl jo imul inc outsl jb jb jbe jb add pop jo push or add add add add or push popa addr16 insb outsl addr16 add or inc popa popa outsb fs insb gs add or adc push into add (bad) incl add add add gs add pop add outsl imul add adc cmpsl or adc add add add adc add jne fs imul jae add or inc insb arpl jo jae add add or or add adc incl xor add adc je imul outsb add or je addr16 popa popa jae xor add adc cld or pop adc add add add adc add outsb jae outsl jb gs imul add adc outsb outsl outsb outsl insl gs imul add add ja ja adc add add add add outsl gs gs add or outsb arpl je gs add adc sbb lahf adc adc incl xor adc inc gs imul je je add or imul gs pop sub add adc add add or push outsl jae je jbe jae add str jo outsl addr16 jae jb outsb outsl insl jns add movhps add or push add add add add or je jne popa fs add or push jns outsb outsl fs add add adc pop add add add add pop add addr16 outsb add add add jne gs insb add add and and add add add or inc outsb imul gs add or jb jo imul add or or or add sbb incl xor add sbb add popa insb bound imul insb imul jo imul jns scas add add add add add add outsb outsb gs jae outsb outsb add adc push jb fs je outsl outsb jae imul test cwtl add jl adc add add add add jb imul or je bound insl jae jb add adc add add add push pop add jb je add add add jb outsb jo jb jns add add add sbb add add lldt imul jbe imul gs add or inc jne jae popa addr16 add or mov push add add add add lldt jns jne push gs xor add str outsb popa gs push popa insb aaa add or or xchg add pop add add add add or inc outsl ja jo popa jns outsb add add add jb bound je outsb add or add and incl add add or imul jae xor add pop add jae popa jb add add mov incl das add add or dec jns imul add or push push outsl arpl insb add push sbb es add and incl xor add and add data16 jae add push add insb gs outsb addr16 gs add add iret or adc and incl xor lldt insb jae imul outsb xor add or bound jb gs jae jb add adc roll add and incl xor add or push gs imul or outsl jbe jb outsl jb imul adc lods add incl xor or jae jae jb jae outsb jae add push add je insb gs imul add add lock es add add add adc jae outsb fs gs insl insl gs add or fs outsb je gs add pop scas add adc add add add add or imul jae popa outsb jae add or bound gs imul add pop push or sub incl sub or inc data16 popa imul add or inc jne push jae add pop into add sub incl das add add or fs jb gs add or push insb popa outsb insb addr16 mov enter rorl add add add add outsb popa insb imul jae add or dec jne je popa insb xor add or add add sub incl sub or inc imul add or jae insb outsw outsb gs jb add add es sub incl xor add cs imul imul add insl jo gs outsb xor add or sub add adc add add or inc imul outsb xor add or bound jp outsb outsb add add dec add add push add popa jae add or addr16 je jb add add add add das add add add add or popa insl outsl jne outsl jne outsb gs add or inc jae jne popa outsb fs xor add xchg lfs adc add add or imul imul add add gs je add or mov incl sub add xor add outsw insb fs outsb je add add gs add or punpckldq adc xor incl xor add xor add fs gs outsl je gs jae outsb jae add or inc gs insb gs add psubb ficoml mov adc add add add add arpl jne imul or jae outsb insb imul add add or xor incl das add add or fs addr16 gs add or fs addr16 jb gs gs add add inc adc add add add or insl insl gs imul add or push jb insb jae jb add push pop or adc add add int3 xor aaa loopne,pt pop fbstp inc mov loopne outsl add mov mov int3 adcl iret adc pusha rcll decl add push add add or jae popa popa insb jae jne imul or jo imul insb add add inc add add (bad) (bad) (bad) jmp add push gs insb add roll add loop add ficom add inc add add or imul imul add bound xor push or pop or add incl das add add or inc popa jb imul add or push gs insb jne imul adc or add incl sub add add add jae fs jae add or push jb popa jbe jb gs add pop jno clc add adc add add add add add jb popa bound add add bound bound jo popa outsb je jb gs add adc adc add incl xor add add jae jb jae outsl insl add push add je jb outsb popaw insb fs add add adc add movups incl xor add push or jo jns outsl gs popa add or push outsb arpl jo arpl add adc inc add adc add add or bound je outsb outsb jae add (bad) jne popa jb imul imul pop mov test adc add add add or add jb gs or push je je jae outsl insb gs add add add ret pop add add add add adc inc imul gs push add push add gs insb add add xor adc add add add add or gs popa jae imul add or dec popa popa outsb fs outsb outsb add or or or incl sub or inc jb push insb gs add or inc popa outsb fs popa outsb gs add push sbb adc add add add add add jb outsb je imul jne gs add or outsb je jae jb gs add or or adc add add add add outsb fs insb xor add or inc jne insb outsb fs add or or movsbl adc incl cmp add push adc outsb fs jae jae outsl jb popa popa insb gs add or jo jne imul add add push add or add add or dec popa insb insb outsl insb popa jb add or inc outsl ja addr16 fs add or cmp adc add add add add or inc popa popa outsb fs jb je jb add or dec outsl jb gs insb imul adc or or or add add add or push arpl jo imul add dec gs adc dec add or adc incl xor add adc add imul imul jae add or bound insl jne push adc or adc incl xor add adc popa jo jo jns imul add gs gs insb outsl jne add or or or push adc add add or jae bound popa outsb je add or popa jae popa jb imul or or adc add add add adc jb gs outsl xor add or push popa insb gs fs add add add adc incl xor add push str outsb jae insl imul gs add or push imul add or add jns adc add add push add je outsb popa add or popa data16 imul rolb add push add add add sbb add outsl outsb jp jb fs add pop add outsl js insl popa add or push test mov incl sub add sbb add jae gs add pop add je jo add or lahf adc or sbb incl das add add or dec outsb outsb outsl arpl arpl add or inc je outsb popa insb imul inc clts or adc sbb incl xor add sbb add outsl insb fs add lldt je jo jb je jbe insb jns add adc incl cmp add sbb add jo outsl jo jb imul fs add or je imul popa fs add pop popf or adc or sbb incl xor add sbb jae outsb imul jae outsb jae add or jae je insl fs add or out mov incl add add or dec outsb outsl jb outsb gs add imul jae add adc or sbb add add or inc outsl jb fs je gs str jne outsb popa insb imul jae add add adc push add add add add add outsb jae add or push arpl insl bound add adc add pop add add add add or push jne outsb gs ja jns add or addr16 outsb fs addr16 add adc push cmp or and incl add add or push gs add str outsb imul push add push push adc and incl xor add and add popa jae jb outsb gs add or dec outsl jne outsb popa insb imul ret add adc add add add add add jne jb jbe fs add or push popa imul data16 add push fadds adc add add add add popa outsb jae imul add add push addr16 add add or push adc incl xor add es popa fs jae imul or data16 insl insl popa outsb gs add add aam std or and add add push add je jae imul add pop add bound fs outsl jne outsb popa insb imul jae add push lret add add or add add add or jo jo gs jo insb add or insl gs gs popa je outsb add adc adc add add add add or outsb popa insb imul add adc inc insb outsl fs outsl jo popa outsb outsb gs jae add add add add add add pop add js je arpl add push add fs insl popa outsb fs add or cmp adc add add add sub add insb insl gs fs addr16 add (bad) jne jb popa insb imul insb jns add or adc sub incl sub or dec outsb imul cmp add or jae outsl imul or sub incl sub add sub arpl je add or jne ja gs gs adc sub jle adc incl cmp add cs inc popa je outsw jb popa je cmp add adc fs popa je jb popa insb imul add or or adc or sub add add sldt popa imul jb add push add jb outsl jb add add movups add add pop add arpl add or insb imul je arpl add adc adc das add add add add or jae imul gs add pop add push add or add adc add add add add push add je jb add push add insb gs add call adc add add add xor add popa outsb addr16 outsb imul add sbb push gs jae outsb je je outsl outsb jae outsl outsb je gs gs add pop mov push adc add add add add jb add adc inc insb insb gs outsl jb imul add or pop adc add add add add fs imul gs gs jb imul add or inc outsb imul add push fmull mov xor incl xor add ss insb fs jae data16 gs imul add add outsb add adc adc xor add add or jne insb imul add or inc imul add or adc or adc add add int3 xor aaa xchg push or sbb mov movsl lahf iret aas mov rorl dec into dec xchg jmp and dec lods xor or stos add xchg or add dec add add or inc gs je jb insb xor or outsb data16 jb jae sbb add and and (bad) (bad) jmp add data16 jb jae xor push pop add data16 add add add add add or gs outsb je popa insb insb jns add add imul or adc add add pop add gs gs add or jb imul popa insb popa add push dec or add incl aaa add add adc outsw jb addr16 gs imul add or dec imul je jae outsb cmp add or out in adc add incl cmp add add add jae imul je bound insb imul outsb add or dec jne insl outsl fs add push pop add adc add add add add insb jbe outsl outsb gs gs add or inc jb jbe insb gs cmp add or or adc incl xor add push or je jns je insl gs add or push outsl jae imul add add add adc add add or imul insb fs outsb jae add adc dec imul je insl outsb imul lcall push adc add add add add or push outsb fs jns outsb insb jns add or jae arpl je jb add push iret add pop add add add add or inc imul outsb add add gs jns outsl jae jne imul jb rorl push adc or incl das add add or push imul jbe gs outsb add or inc data16 outsb imul add xchg adc or incl inc add add adc dec popa outsb bound addr16 outsl jbe outsb gs add pop add outsb imul jae popa bound imul outsb xor add or add pop mov adc add add add or add jb outsl insl popa je add adc push imul outsb fs imul xor add add adc add add adc inc jne imul jae jb imul or inc outsl outsl jb jae jb add or or add add add add pop add popa insb outsl gs add or jb jo imul add or add or or or add add or outsl addr16 insb add or push imul gs add adc add adc add add add add or push outsb outsw popa insb gs adc inc jb gs jae insb popa outsb gs gs add add push adc add add add add adc jo imul insl insl gs jae jb gs add or push outsb bound jae jne add push mov popl rcll adc incl and pop add outsb imul add push popa outsb add adc adc adc incl aaa add add adc push jb je imul je jb gs add or push outsb jne insl gs je add add jo adc add add add add add jae imul push outsb add push add je popa je outsl outsb jae jo insb add adc pop loopne fimul adc add add add adc outsb gs outsb add or push push jb add add add add adc adc incl sub add push or dec popa insb insb outsl jb imul add jae add add pop adc adc add add or dec popa imul add add fs outsl insb xor jge mov or adc add add add add push add outsw jb je popa gs add pop add je outsb jae add add enter add add add add sldt jne jb push gs cmp add or inc jne je popa insb xor add add push adc add add add sbb add je insl add add imul add add add getsec adc sbb incl xor add sbb add imul xor add push add imul jb jae add add test add or jne insb popa outsb imul add sldt insl imul jb gs add add add add adc add add add add insl outsl jb gs or jns je imul add adc lret add sbb incl xor add push or imul insb gs add or data16 push jae insb outsl insl jae jae add adc adc sbb add add adc outsl jbe jb imul je je add push add popa jp insb add adc add push add add add add or jb gs jb outsb add or inc outsb popa je insl jae add adc adc push lods adc pop add add add add or dec jne insb gs outsb jae add push add jb outsl je imul je je add add or adc add add add add or fs outsb outsb gs add or popa imul jb outsb add adc add and incl xor add and add insb outsb gs outsb outsb gs add or inc popa jb jae outsb popa insb gs add push movl add or push jns je outsb fs or dec jb outsl outsl outsb je jae add add add and incl xor add and gs insb outsl jne imul or insb gs popa data16 je add add adc and incl xor or inc bound insb jne imul add jo jae je outsl outsb jae insb addr16 add push icebp pop and cmpsl or and add add push add jb gs outsb gs outsb add add popa jb add or or es add or insl gs popa outsb imul or jae outsl insb fs add or add daa add add or dec gs gs outsb xor add or inc outsl ja jne arpl jb add add or or adc add add add add add dec outsb arpl add or inc outsl popa jb outsl outsl xor add adc xor xor adc add add add add adc inc outsb gs insb imul popa outsb outsl gs gs add or jo popa gs jb popa insb add or sahf push sbb incl sub add sub add je outsw jb add add jb add or adc adc incl sub add sub je popa jae jae add or inc outsl outsb push jb jae outsb add or adc incl aaa add add adc push gs bound popa outsb imul add or jne fs imul add add sbb adc add add adc inc jb je jb jae gs fs add or dec popa je push xor add adc (bad) adc incl xor or push imul imul add fs jo imul add push lret add adc das add add add add or dec gs imul jae add or inc outsb outsb bound jb gs add add xor incl das add add or inc outsb imul add or inc outsb je popa je imul popl and jb adc add add add add or inc data16 jb jb outsb gs add or jo jb imul gs add adc add add add add add jb popa insb outsb gs add or gs outsb popa jbe gs add pop lds jns rolb adc add add pop add outsl jbe gs add adc inc gs popa je push outsl jo popa jae jns add adc add add add add add add pop add imul add add gs imul adc movsb add add add add add adc inc outsl jb popa outsb fs gs je jne je jb xor add je imul jae add add push push or adc ss add dec xor aaa dec jo arpl mov aas fbstp into add lret xchg clc mov idivb dec lods xor or stos add xchg or add dec add add or push popa fs imul or gs jae gs add add inc add add (bad) (bad) (bad) jmp add jb jae gs add popa or add adc add add add add add add arpl insb imul xor add or push popa jae imul add push rorb push inc add add incl xor or push arpl outsb imul add (bad) jae gs je jae imul addr16 add or add add adc add incl xor add add add jae jns addr16 add or popaw jo jb imul add mov mov add incl cmp add add add imul je jbe add adc outsl jb popa je outsl outsb jae gs outsl jne arpl add or mov add incl sub add add popa outsb insl gs add or dec outsl jb insb imul push adc or or add add add or outsl jbe jb gs outsl imul add jo jae je jb popa insb xor add or adc push adc add add or inc fs add add outsb imul gs xor add add push push add add add add or outsb arpl insb gs add push add addr16 jae add adc or add add add pop add insb imul or dec gs jbe insb insb cmp add add or or incl xor add or add fs outsl outsl je add push add je outsb outsb imul add or add or pop adc add add add add adc inc je jae popa bound jb insl popa gs add pop add popa insl popa imul add or adc add add add add add je jb imul push imul outsl jb insb jns add add or or or incl sub add or insb imul or jae outsl jo jne jae outsb add add adc incl xor add push pop add jp jb push add gs jns jae insb outsw js fs push add adc adc add add adc push jb imul jae popa bound jae add push add imul imul add emms adc push add add add add push add bound add adc outsl jbe jb gs data16 gs jae jae add or adc (bad) incl sub add adc add outsb fs add or push push outsb fs add pop das push adc add add add add or push jb arpl imul or inc insb outsl je gs jne insb jns add add mov incl add add adc inc imul outsb fs jae gs insb xor add jae insb imul or add adc add add push add imul jae popa bound gs add or gs jbe outsb popa je add add mov mov add or jae imul fs add pop add jne gs add add or (bad) push adc incl daa add add or push insl jb gs add add dec gs je add push fmull or add add add add or arpl insb outsl imul add outsl outsb arpl je popa je add pslld and daa or push add add add sbb add outsb je bound jbe je add (bad) jo insb popa outsl outsb gs gs gs outsb add add push jmp pop add add add add adc push jne gs outsl imul je jns add adc dec outsl outsb arpl je popa je outsl outsb gs gs add or push scas add incl xor add sbb add bound popa outsb arpl add sldt jb popa jae jb je imul adc adc add add add add push add jb fs push add insl jo jae popa je outsl outsb jae add add or mov incl xor add sbb add arpl addr16 addr16 je outsl outsb popa insb add or push outsb fs outsb gs add or add stos adc sbb incl sub add sbb imul outsl jbe outsb xor add add gs add or add or adc incl xor add push (bad) jne insl gs outsl jb popa insb imul add add jb jae insl popa jae add adc fiaddl or sbb add add or push jo imul add insl bound fs imul push adc push adc add add add add or push jb imul outsb add adc push jb gs je gs push insb gs outsb jae add pop fiaddl cmp mov incl xor add and add je jo gs gs add lldt outsb imul gs xor add add xchg add add add or push gs jae je je add or inc gs jb gs add add push pop or add and incl add add pop add addr16 jae add adc outsl insl imul imul je outsb add (bad) or or movups add add add add jns push jae add or outsw jb popa insb imul add or adc add add and incl xor add and gs jb push add push jb jae jns arpl imul add and incl xor add es push popa fs outsb imul add add outsl outsb gs jb outsb cmp add adc jl and adc add add or push arpl insl jae popa outsb imul add or fs outsb popa je outsl outsb gs add adc cmovns add es add add add or push insb jne push add adc inc bound popa je gs jb addr16 add or and les adc add add add add add fs add or push je je jae xor add or adc add add add add or inc outsl insb imul outsl insl add add jae add or add push pop add sub incl xor add sub add jb outsb fs add or insl jae jb popa outsb xor add adc or or add add add add add outsb outsl jo popa gs add addr16 fs xor add push roll adc add add push add outsb outsl outsb gs insb outsl addr16 add or jo outsl insl popa outsb imul or or sub incl xor add cs insl insl imul outsb jae add or gs imul add or rorl test adc add add or push outsl jb imul add insb insb gs jae outsl insb outsb xor add or test adc add add add add or dec insb popa jb jae gs add or inc gs imul add or (bad) push adc add add add add or dec popa jb outsl outsb imul add jb insl imul add or add xor incl add add or dec outsl fs popa outsb fs add insb fs outsl outsb aaa add or or adc add add add add or fs outsl imul push je popa data16 imul add add adc jmp incl xor add xor add addr16 imul add je jb insl insl outsb fs add add xor incl sub add xor je popa imul add or dec popa arpl outsb popa cmp add pop les es add xor incl sub or push fs insb addr16 xor add or inc popa jb bound outsb add adc or xor add add or inc outsl jb popa insb outsl js insl add push add outsl imul jae popa jbe je add add add fadds adc add add dec xor aaa and pop out incl adc test movsl aad int fs pop dec lods leave cmp lcall xor or stos add xchg sbb add push add add or je jne imul or popa jb popa outsb jae jb gs sbb add and and (bad) (bad) jmp add jb popa outsb jae jb gs xor add add inc adc add or incl xor pop add jo outsb jns add adc push imul outsl outsb jae outsl fs insb gs add or adc add or add incl xor add add outsl jb popa je jb je add or inc jb imul je add or adc add add add add pop add popa jp gs add or outsl arpl outsb popa insl imul (bad) or add add add incl xor add add add push arpl add or imul je add or mov incl xor add add jae gs insl gs jae jb xor add or push fs jae add adc lahf add adc incl xor add push or push ja insl insl imul add or arpl imul je add adc movups add add adc jae fs imul jb add or push jne fs outsb add add add adc add add add add or push jb jb fs add push add insb imul insl insl jne gs add pop jmp movups add add add add add outsb imul add add outsl jb outsb imul push or cmp adc add add add add push add outsb jae add or push jo outsb fs outsl imul push (bad) add add add add or add insb bound outsb outsb fs add or dec popa addr16 push add cmovae and js adc add add add add add insb insb gs or dec gs popa insl insl gs add pop mov insl pop jmp adc add add add add outsb je jae add add outsb popa add push sub incl cmp add push or inc push jae outsb xor add adc push popa insl data16 fs outsl outsb outsl insl imul add add or adc push adc add add push add gs add push add gs je insl popa je insb jns add punpckldq insb add adc add add add add adc push jo arpl imul jb gs add or inc jb jo outsl arpl arpl add adc add (bad) incl das add add or inc jb outsb bound jns add or dec outsl outsb outsl insl imul add or mov incl sub add adc add jne arpl add or dec gs je insl popa add add or or add adc incl das add add or jb popa outsb popa insb jns imul push imul insb add push push or or or adc incl xor add adc add arpl outsb je insb imul add gs jb arpl add push and pop adc add add add add outsb jbe jb imul add insl jo insb popa imul outsl jbe outsb gs add add push dec add add add add add add jns add or outsl je popa je imul lea adc add add verr gs jae jae outsb outsb gs add or insl jne push add or das or adc add add add add or insl popa je imul add or je jbe jb gs add add push adc add add add add adc outsb outsl outsb jae jo outsl jae je jbe insb jns add pop add outsl outsb outsb jae add add pop xchg add sbb incl add add or je popa outsb fs outsl outsb jns add pop add imul out or pop or add sbb incl sub add sbb add imul jae add or dec jbe jae jb insl xor add or (bad) add sbb incl sub add sbb add insl gs insb imul inc insb imul add add push adc incl xor add sbb jb insb jns je fs add or inc jb jae insb gs gs add or rcll stc or add add add or popa insl outsl jb imul add jb jbe outsb add or add or add add add add or inc popa imul add or push jbe insl jo imul add adc or adc add add add add or jae jb bound jae jb add adc dec outsl jne gs jb imul jns add or dec cmovp adc add add add add push add insb popa addr16 outsb addr16 gs add or je imul add push sub adc and incl xor add and add popa jo imul add or imul insb add adc ss add add add add adc push jbe outsb addr16 outsl jb insb jns je outsb fs add or push outsb outsl bound jb gs add and adc add add add add add jb jne insl popa je jb popa insb gs add or push insb jne jae jne je jb add add add and incl xor add and jb jo imul add or dec popa je jb popa jb gs add adc push pop or incl inc add add sbb dec imul je gs jae jae outsl jbe imul add str jae jne imul outsb xor add or lgs mov adc add add or imul jb jne add pop add outsl push jbe add pop and adc add add add add or jb gs je imul imul add insl gs insb popa addr16 add add add add add add adc inc imul insl outsl fs addr16 xor add insl popa addr16 bound add push lea insl or pop adc add add add add add data16 add or inc imul xor add or or adc add add add sub add outsb addr16 jns add or dec jns outsl jo jo jns add or adc sub incl add add add insl imul add or jae bound imul (bad) or sub incl sub add sub jae imul gs bound insb imul ret or add sub incl aaa add add or push push outsl imul add fs arpl outsl jb insb popa je outsb imul adc push adc add add or imul gs gs add pop add insb outsl je jae add btr sbb push adc add add or dec popa outsb imul xor add lldt gs popa outsb jae jbe outsb gs add push lods or adc incl inc add add push add bound fs outsb outsb jae add sbb push outsb fs imul jbe push gs imul xor add add push add add add xor add insb bound add or inc gs gs imul or add or adc add add add add sldt je insl outsl insb outsl imul add pop add jns je add add add or add add add add add popa arpl outsl jne popa add or inc bound imul add or adc add add add add imul outsb add adc dec bound popa je outsl outsb jae jne jae jb gs add add add adc pop adc incl cmp add adc jae imul jb jae jb outsb addr16 gs add or push je imul add or or add adc add add or jne fs jo jae add or inc outsl jb imul add add adc ss add add int3 xor aaa and cld inc ret jp mov lea cld lds inc lds mov cmp xor or stos add xchg cmp add ljmp imul outsl jae or jb outsl outsb jne xor inc add sahf add insb je add sbb add add add add add add add add add add add add add add inc jl cmp adc add and icebp pop cmp push pop cmp push mov pop cmp dec inc jmp add int push mov pop cmp cmp jmp add int push mov pop cmp push pop jmp add int push mov pop cmp jmp add int push mov pop cmp push mov pop dec inc push mov pop jmp add int push mov pop cmp push pop dec inc cmp dec inc dec inc sub add jmp add int push mov pop cmp cmp dec inc dec inc push mov pop jmp add int push mov pop cmp push pop dec inc cmp dec inc dec inc sub add jmp add int push mov pop cmp cmp dec inc dec inc jmp call dec je gs outsb outsw jb popa je outsl outsb push jb arpl jae call insb imul add xor push dec outsl je data16 arpl inc add push loop push push push mov add jmp pop jmp pop call push pushl push call cmp je call push push xor pop pushl push call jmp xor or adc cmp jne jmp mov imul pop mov mov mov mov dec cmpw jne mov mov inc mov bswap cmp jne cmpl jne sub push call push mov pop push pop jmp add int push mov pop cmp mov push pop push rep dec inc xor cmp or dec inc xor pop dec inc mov sub add xor jmp add int push mov pop cmp jmp push jmp pop inc inc inc jmp pop call push push push push call pop jmp xor or lods cmp je mov dec dec dec cmp jne mov dec dec dec cmp jne xor push push push push push addl push push push call add ret call adc add aad push push push and pusha fcmovu and pop (bad) icebp mov and pop (bad) icebp pop sbb inc jge icebp inc bound dec adc loope popa aad sbb mov (bad) pusha push mov adc mov jbe pop dec call int adc cmp rclb mov adc rcrb mov adc mov jno pop in mov rcrb cmp or add xor pop adc mov sqrtps pop adc mov popa lds or or mov mov ja pop dec mov dec adc mov jno pop fwait cmpsl mov ror call mov cmpsb inc jne bound test push and mov sub fucom pusha aad xchg fcmovbe pop adc push xchg test pop adc sub movb aad inc xor xor sub push loop pop sbb popa pop bound sub xor out jns popa aad sahf int pop adc scas pop dec arpl pop sbb popa pop adc mov mov outsb aad js sub adc mov adc rcrb cmp add aad cli sbb pop adc push stc adc xor gs in hlt jne adc pop in hlt jne adc pop push popa aad nop fst pop adc mov pop adc add and pop adc push in hlt inc pop adc or mov jge popa xchg sub xchg lahf cmc sub loop pop insb push sbb cmc aad adc cwtl sub loopne pop adc cmp or mov pop cli mov pop adc cwtl pop sti mov pop adc cmp rclb pop adc mov adc mov outsl aad fwait and rcrb cmp add aad cli movsb fistpl call (bad) mov je pop dec mov adc sbb ljmp adc cmp rclb pop adc mov dec adc mov outsl aad fwait and rcrb cmp pop popa aad cli loopne pop adc nop cmp je pop dec mov sbb ljmp adc cmp rclb cmp push popa aad sti mov cmp rcl ljmp adc cmp rclb mov pop adc aad adc pop js sub call aad inc xor mov popa aad adc popa rcrb mov dec adc mov je pop dec mov sbb mov dec adc mov ja pop dec mov push adc (bad) fwait cld dec pop adc jb call aad adc xchg adc (bad) imul adc aad adc aad ret cmpsb cltd sub xchg rclb (bad) pop adc push adc aad adc sbb in adc mov or loop pop xchg cltd aad sti call ret pop adc nop popa sti inc pop adc nop gs cwtl (bad) pop adc nop sbb imul sbb adc pop sbb mov adc rclb push popa adc add popa aad push jns popa adc aad dec ljmp push jge pop sti mov pop adc sub sahf out and pop sbb fs sbb popa test cli push pop adc nop inc xchg pop aam sbb xchg popa push mov sbb mov ja pop dec mov dec adc mov jbe pop dec sahf mov push ljmp adc cmp rclb rcrb adc sbb cmp cltd popa pop sbb mov dec adc fisubrl pusha fcmovu pop (bad) aad jb pop std adc mov jae pop dec mov adc rcrb mov adc mov insl aad stc jb add mov pop jns pop adc pushf jge sahf add cmpsb in sahf sub ss insl pop adc fwait sbb shrb pop cmpsl xchg cmpsl pop sbb popa pop sub ljmp push gs fwait bound push cli push pop adc xchg gs cmp pop shl adc jp aad adc (bad) mov push pop cltd loope,pt lea mov inc push adc rorb mov lea dec popf adc movsl rcrb ljmp adc push inc call aad std and shlb pop fwait out push adc ficom pusha aad fwait out push adc push loopne,pn mov lea pop adc sub aam lds push pop or std rclb aam inc aaa cmp add adc mov inc pop sbb sub sahf bound popa aad inc push push mov push or imul imul push adc cmpsb in xor (bad) popa mov lahf adc pop and pop or bound pop sbb pop push insl test dec loop jno pop pop pop sbb sub sahf bound popa aad insl sub adc pop cli xchg fistp cmpsb nop dec adc pop aad rcrl aad lods jne pop adc fstp popa aad inc ljmp xchg popa fstpl pusha and or insl aad inc mov adc ficomp insl aad xchg cltd aad xchg stc aad adc pop sbb rclb pop ficom insl aad xchg mov lds popa pop ficom insl aad and fstps bound sbb pop loop in pop data16 pop adc fldenv jle,pt jns (bad) adc pop xchg mov cmp rorb bound sbb pop adc not or cmpsb in popa aad dec jne out popa aad lea pop adc pop sbb pop adc push lahf push mov dec loop dec sti push sub adc pop sbb fisubrl aam xchg cmp je adc rclb pop sbb ljmp pop fcom pop adc adc ljmp bound out inc imul fisubrl aam inc call lds push sbb fwait cltd rcrb popa aad cli and pop adc sub sbb push pop sbb pop push insl test in sahf cmpb loop jno pop pop pop sbb sub call aad inc or cmpsb movsl insl fstpl ljmp js sub ljmp test pop adc aad cltd and rolb pop or call pop inc xchg mov pop test loop imul sbbl call aad fwait and rcrb pop sub pusha sbb and cs pop xor pusha aad cltd sbb shr loop adc and adc fwait cs mov pop adc lcall jno pop dec mov push adc mov imul shr sub popa pop adc call mov rorb aam je xchg dec adc adc mov mov imul cmpsb gs mov pop js mov add xor jle sub xchg sub cmpsb in ljmp adc cmp or and pop adc cwtl sub fadd pop adc cmp rclb test cltd sub mov jo pop dec mov cs ljmp js mov cmpsb movsl or mov cmpsb and sbbl cltd outsb sub inc sahf mov rolb sub ss ljmp pop cltd and lahf adc pop js sub sahf mov cmpsb and aad xchg hlt (bad) pop adc ret sub aas pop pop test adc ret cltd aad adc outsb jno pop (bad) lret pop aam in adc rorb (bad) add xor push bound push in push sub or sub pop adc add (bad) popa test cltd lds adc cwtl sub mov pop adc cmp cmpsb gs push sbb push mov adc rclb mov mov cltd ds vmulpd loop push inc ljmp xchg cltd aad xchg xchg xlat pop adc mov mov pop push push ljmp cltd sub mov outsb aad dec mov pop adc cs (bad) push in adc cmpsb ret pop sbb popa push out outsb aad adc cmp sbb jo pop adc mov mov add sub js mov cmpsb gs push sbb adc adc pop adc pop cltd sub mov outsb aad dec mov pop adc pop cltd frstor xchg cltd aad xchg cmp pop adc cwtl pop sti and cmp rclb call rcrb xor sbb push adc popa aad xchg pop sub sbb in pop adc adc mov push adc mov addr16 fwait out pop adc adc mov push adc mov addr16 fwait out pop adc push push fs adc ficom out pop adc pop add rclb or cmpsb adc mov adc sub push aad xchg fiadd adc push xchg cmc aad adc push lds popa aad out popa aad sbb popa call push xchg lret aad adc adc aad das fcmovnbe pop adc int popa aad xlat addr16 sbb popa call push xchg pop aad adc adc aad rclb aad data16 pop adc sub adc lcall adc pop adc sub adc aad das pusha aad xchg adc push adc pop sbb popa mov pop adc pop adc cmpsb movsl stc aam adc aad test into cmpsb in sahf push xor popa aam in (bad) dec pop adc out xchg pop in imulb mov push sahf (bad) adc cmpsb movsl cmc aam adc aad fimull xlat pop adc out mov pop in (bad) inc pop adc into outsb pusha aad stc into pop fisub cltd lds les mov xchg push or dec adc cs ljmp jb push icebp adc rclb pop mov adc xor (bad) fstl popa aad movsl loope pop adc mov push sub or pop adc out mov pop in (bad) inc pop adc into outsb pusha aad cltd out pop adc sbb call aam adc mov pop adc out xchg pusha aad cltd frstor sti jns cmpsb in or xor sahf andb mov frstor sti fs in mov push adc rorb call in adc sbb push sbb cltd jne bound lds pusha sbb add ss roll push fisubrl aad xor test call and adc aas cltd ja mov pop sub loop pop sub cmp sbb aad cwtl popa pop fdivrl fdivrl adc push xchg mov pop adc xchg jge outsb mov pop fcoms aad adc pop xchg outsb cmp jl fidivl sbb cwtl inc outsb stos cwtl lcall pop arpl gs shll lea fisubrl xchg fdivrl adc push xchg not pop adc test cltd adc adc fcmovnu aad adc push sbb push sbb shr push adc pop shr icebp inc lcall fsubr popa aam adc aad adc test mov xorb or cltd sbb fcom mov or push push push shr roll pop push adc jne pop ret jmp push and cmpsb pop inc fldcw ljmp adc push adc pop sbb jne mov insb aad dec loop pop addr16 add loopne pop add or adc mov arpl pop stc push pop add loopne pop punpcklwd or adc mov arpl pop cltd cmp fcom popa lds xor insb aad inc mov cwtl cltd and pop adc pop sti lahf fstps cmp jmp roll imul pop adc sub loopne pop add push or cvttps2pi loop pop push loope pop mov cmpsl push popa aad xchg pop aam sbb adc int3 xchg pop sti aaa and adc rclb pop sub loopne movsl add mov addr16 xchg cltd aam sbb lea adc push inc addr16 cltd cmp fcom popa lds pusha sbb aaa xchg adc cmp (bad) pusha mov pop aam cli pop aam xchg aam sbbb addr16 pop aam xchg aam mov aam xchg aam sbbl aam cwtl pop stc popa pop sub loopne movsl add xor or paddsw xor or cmpsb inc xor rcrb push cwtl adc pop cwtl jno dec push loop pop je in pop addr16 pop adc loopne pop or xor or xor or xor or pop adc test cltd adc fcom popa leave pop adc (bad) cmpsb inc push pop pop push loop push js andl inc aad inc sub sub ljmp adc lea mov nop push cltd jmp rcrb es mov repnz pop sub loopne pop add xor or xor or xor or pop adc andl adc fcom popa leave pop adc aad in pop rcr aam lock adc (bad) cmpsb inc inc (bad) cmpsb inc dec mov cmpsb xchg aad adc lea adc aad in adc xor or cmpsb inc xor or in pop sbb sahf cmp (bad) pusha fcmovu and ficomp cmp xchg cltd aam xchg inc sub in sahf mov and pop cltd and rclb push push push pop push cwtl adc push sbb lods je cmp fwait scas mov or pop cltd and rclb pop sbb nop cmp jecxz adc push je rcll pushf mov adc icebp push cwtl jno dec sbb push cltd adc push popa adc lahf push outsl aad loop fstpl sub icebp push cltd cmp mov pop push and push popa mov and pop cltd and rclb pop pop cltd cmp fsubrs sub or adc fsubrs sbbl mov setns jmp xchg inc aam fwait cmpsl push lahf cmp push cltd lcallw in or lea loop lods pop (bad) insl adc xchg or aad push popa xchg inc call aad ret inc rcll or xorl in adc cmpsb addr16 cmpsb xchg adc loop inc sbb pop cs mov adc aad xchg mov push fcmovbe gs pop xchg mov rcrb loop dec cltd (bad) aad adc dec sbb das cmp add xchg push adc adc xchg cwtl aad iret mov aad push jns clc and pop cltd and rclb pop pop cltd cmp loopne popa aad xchg cwtl aad add rcll int outsl pushf popa les xchg dec inc call push lcall xchg xor popa (bad) pop inc or cmpsb inc add adc aam fstpl sbb rorb aam je xchg dec adc mov adc mov push adc out adc pop js sub mov daa ss aad repnz cmc pop adc mov cmp popa mov jge stos jge popa aad ds daa ss pop rclb aad adc icebp sbb popa xchg sub push popa aad pop push daa ss pop inc adc cmc pop and mov sbb add jge popa in data16 daa ss imul popa aad stc je pop adc mov fcmovbe pop adc pop test mov lcall lds xor sub mov push loopne pop punpcklwd or popa xchg fwait mov aad adc pop sbb aad dec jmp roll imul push xchg cmpsl aad adc pop js mov pop jp aad push aaa sub call push lahf adc pop js andl inc aad inc sub sub ljmp adc pop js mov xor sahf orb ljmp push or pop adc or xor fwait sbb add mov rcll push loope cltd xchg rolb push rclb rorl fwait lcall inc or pop inc or cmpsb inc add lahf adc xchg rolb mov in adc sbb ljmp add xchg dec adc jmp popa adc mov pop jno sbb imul mov push mov xor push xor mov adc rorb rcl push inc rcrl inc fstpl sub aad xchg pop insl sub loop pop adc fldcw outsl sub ljmp fcmovnu aam adc sbb jb push fwait and lahf push fwait insl sbb loop pop adc rclb adc jmp test fldcw mov scas pop push adc sbb cmp stos adc aas xchg sbb cmpsb repnz rclb adc pop fcmovnbe pop adc xchg loop push xchg mov cmc pop adc fwait push popa pop add ss sbb rcll mov pop addr16 push and fsubs jge loop push and aad push pop (bad) sub pop push and test sub stos adc insl rclb xchg mov cmpsl xchg scas stos call sub and sub push adc sbb imul push loope pop addr16 pop push adc aad push push push loope popa aad pop adc loope popa aad rcll lcall mov inc add and cmp jbe adc jbe and adc das orb inc idivl jge mov sub xor or inc aad or sub jae mov cmp orb cmp jbe cs push pop inc idivl jge mov sub xor or inc cmpsl cmp inc mov jbe notl pop sub mov add cmp cmpsb ss mov jnp mov adc cmp adc mov sub inc cmc jbe inc testl data16 add je cli sub dec xor jnp inc negl mov cmpsb in dec cmpsl sub inc cli sub jge mov sub adc cwtl pop inc popa sbbl sbbl jecxz and pop push popa cltd pop pop popa cmp sbb xor or and aad adc adc sbbl popa call add adc pop adc dec adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc or popa aad adc pop adc pop adc mov mov cmpsb jbe mov cmp mov mov sahf xchg xor mov and mov ds sahf sub add push popa cmp sbb adc or jbe mov sub mov mov sahf xchg cmp adc mov pop cli pop cmp in es push add xor movsl push jnp mov gs cmp or or sub cs pop xchg xor aad xor xor xor mov mov sahf xchg cmp and sub mov nop cli sahf sub ja mov pop cli int3 cmp in xor sub pusha popa cmp or nop sub cmpsl adc add aas cmpsb in aaa mov xor jno lods pop cli out aas cmpsb in aaa mov xor ja mov dec clc sahf sub pusha add sub ja aad add mov xor clc sahf sub ja mov jnp mov cli dec aas cmpsb in es push or cmp mov mov sahf xchg xor jae mov ja cmp push ja cltd ss test or pop cli repnz push push mov adc adc xchg sub mov cmp cmpsb push adc xchg cmp and xor mov ss cmpsb sub mov mov sahf cmpl adc mov popa adc mov nop sub push push cmpsl sbb push pop mov popaw cmp sbb mov sbb push pop mov popaw cmp or mov adc cmpsb xor mov movsb sti sahf sub jp mov cmp mov adc mov pop cli idivl add mov cmp mov sbb sahf sub cmpsw xor xorl adc mov jge lods pop cli insl and push ja xchg ss mov xor ja mov cli popf cmp pusha add sub ja cmp pop xor sub add or sub cmp pop data16 sub jp mov jbe cmp pop xor or jbe cmp pop data16 xor adc aas inc add sub cli imul addr16 xchg cmp mov cmp cmpsb pop cli js cmpsb in xor cmp push out cli jb cmpsb in and sub ss sub mov sahf popf cmp adc cli xchg cmp in xor push push popa cmp pop ljmp cmpsb adc pop cli or aad adc aad adc and sahf sub pop mov cmpsb in (bad) icebp mov fmulp push imul dec xchg mov iret inc pop jmp cld jns mov test xor fcmovu enter adc dec dec in and aad icebp mov add lock mov add fs adc adc dec fs negb scas sub jbe cmp mov dec mov nop ficom fs in loope or std adc insl add lret jmp add inc test xlat mov in daa test lret (bad) or mov jns je stos mov inc aaa or scas cli nop push stc push rcrb (bad) xor push jp out nop ljmp mov xchg cli ljmp cltd rolb lods scas inc daa pushf sbb mov xchg sub pop adc adc sahf sub popa aad out xchg sub ja cmpsb cmp or cmp and and cmp pop adc mov mov cmpsb adc pop cli movsl and adc aad adc cmp sahf sub popa aad loopne sub cli ds pop adc aad adc add add pop inc sub fiaddl cmp pop pop rorl push push fs dec mov repz dec or aad stos cmp mov push mov push shrl mov js mov mov and movsl pop test cmpsl (bad) fs cmp fdivr push lock mov repnz mov sbb imul xchg jle jg,pt (bad) and outsb mov xor xchg (bad) mov lahf sub push push call add ljmp imul xchg push shrl bound (bad) mov mov aas add rorb inc hlt (bad) pop adc xchg int3 jmp lods repz push enter (bad) push adc leave loop mov xlat ja inc mov pop outsb pop call fs fsubrp adc (bad) adc or pop mov into scas add out outsb or aaa loopne sub jmp aas aad xor mov xchg notb clc lods sti push dec mov leave lds test arpl loopne mov enter xlat lahf and or movsl (bad) stc fsts (bad) hlt out negl rcll jb mov xchg enter fwait arpl pop dec cld inc jp insl ret jne and or lea adc inc outsl (bad) dec mov incl test and gs loopne imul ss inc into rol inc hlt daa incb imul push inc shl popl dec and push fcomps cmpb jp lods lods sbb xchg iret or sbb lods ret adc fs and xor or jge jo sti (bad) arpl xchg dec (bad) mov dec cmc iret pusha or imul clc pop xchg into inc jg mov mov mov jg jge mov adc pop mov push outsl mov jb xchg fldenv (bad) ljmp pop pop stos ljmp jno loope mov cmpsb jnp pop inc pusha clc icebp arpl loope xor sbb (bad) sbb pop scas and (bad) loop push mov mov in mov dec xchg sub or int3 hlt dec nop push inc stos xor xchg loopne (bad) ret mov fldl xchg add jp xchg xor inc imul jne loope cld je mov mov xor inc lcall jmp ss pop mov in cmc mov in mov call das adc into pop inc inc jae imul pop pop scas test lock pop lret mov xchg mov into dec lods jo ficomp jle pop mov and cmpsl pop gs mov stc popa and push daa and subb pop cmpl iret mov mov je inc ss repz inc cli pop loop cmp adc inc stc pop cwtl bound add dec cli popf je popa xchg scas mov inc push aas rcll lahf mov scas fsubrs push fldt nop mov out cmpsl cwtl arpl jg jg mov jg sub inc cwtl insb push repnz test lea add mov or mov push mov ja lahf push outsb xor lds je test mov (bad) jne cmpl ss mov jo push rorl inc or enter loope aaa lahf cmp cmp rol mov push repnz stc addr16 into dec inc mov push loope mov icebp jo arpl outsl sub mov les dec dec rolb add or push js sbb lret jno push jmp into addr16 jg insl outsl inc (bad) pop out sub (bad) push dec mov pop imul xchg dec mov adc push jns outsl lahf jmp out push cltd xchg movsb and and js pop mov pop mov pop daa cmp (bad) or xchg add loopne xor lds data16 or out mov jne ficom punpckhbw push mov cmp push xchg dec pusha cs dec inc dec push das jne mov mov pop mov cmc cwtl mov pop lahf inc sbb cmp sub mov push inc mov or add out das inc cmc cmp movsb lret adcl add sub jg (bad) aam mov or or cwtl add pop cmp call inc fdivrs leave divl divl mov pop mov adc loopne mov inc mov xchg push sbb aas lahf aaa lret ja inc popa imul negb inc cmp ds jge cltd sbb mov push loopne gs scas inc dec cmc jp pop mov loope mov lcall insb xor outsb and mov lods mov push xchg inc or sbb mulb daa nop and xchg in jmp int3 inc sub and sbb inc (bad) mov inc mov int3 mov jp je or scas adc push adc xchg mov lret mov mov movsl push xchg clc pop add es cltd add addr16 jnp dec jp into jmp ljmp and mov fisubrl adc push adc fs adc stos subl aam jne pop jecxz mov mov xor push ret sar xchg mov cwtl mov fsubr push in add push push xchg xor test (bad) loopne jmp sub pop sti aad push sti or xchg inc mov or fdivrl (bad) ss sbb adc xchg in (bad) rclb in push daa mov mov cmpsb or adc push aad jge sahf xchg cli mov push cs jg in das pop popf push (bad) nop or mov hlt cmpsl loop in sbb xor sub mov jnp push inc inc xchg adc or test scas call aam iret dec in xor jno adc pop push and daa mov and sub fisubr lcall cmp in (bad) sahf lret dec mov add sti inc imul scas dec aad mov iret lret dec pop aad mov push sub xchg bound cmp sub sbb ja mov shrb cli xor mov into sub dec jno popl aaa xchg fcoml jg mov imul hlt push daa cld lret pop out or das inc int xchg mov xor xchg paddq dec rol lds rclb push arpl pop outsb addl inc or (bad) rorl pop (bad) out in das fsubrs dec divps xchg jge mov int3 aas dec mov lret inc cmp outsb dec jae xchg cs add push jnp cmp mov mov and loopne sub push jmp mov popf mov mov out adc xlat dec addr16 and les or enter push pop add (bad) decb lret stos daa adc xchg arpl inc push lret mov mov and (bad) fdivr xchg jp sahf aaa gs ficompl insl mov or push mov sub lahf mov mov cmpsb fstpl mov stos arpl insb imul fiaddl pop addl rcr in cmpsl ds and lds ja push mov pop fs cltd inc test daa push sub movsb and outsl add int add sti jmp loopne fldt aad xchg pusha arpl push (bad) add xor jno mov jns rorb (bad) es jp push xlat cmp fwait inc pop enter out repnz mov fwait xor sub or test sbb ljmp rcl xchg cmp mov cmp lret mov lea out rcl mov fcomps mov mov cltd inc xchg dec or test cmp int mov shrl insl dec test xor (bad) adc dec sub stc mov jae testl push push pop fcoml dec jp xchg mov mov sti lcall (bad) out xor aas sub and pusha inc dec int3 xchg fcmovne lret cltd fisubrl iret push (bad) fild xchg fild push mov dec lods jbe out lret mov xchg jecxz mov add fisttpll mov cmp repz ds xlat gs adc and je adc cmp movsb cmpsb test out push nop out jle ret xchg pushf popa mov push sar mov je add (bad) pop push stos dec dec scas xchg and out inc fs sub pop adc les jl scas test mov push inc lret (bad) mov out sub xchg (bad) jae add jge mov test jge (bad) hlt xor data16 rcr fwait mov sub mov push dec scas in fs jge mov push push icebp add adc or cmp ljmp mov outsl into sub add (bad) js mov leave fwait sbb push sbb mov pop mov dec js call push mov jecxz adcb rolb lock popf (bad) push pusha mov inc mov dec xchg out pop jne loopne or push clc pop iret stos (bad) mov adc jb repnz cmp jo mov jb ljmp stc xchg leave pop jg push xor sbb lret xchg call (bad) inc fsubr push inc lods ret in loopne jnp out pop or stos xor mov pusha imul hlt push xor push popf into fidivrl push sub fisttpll cld jp lea lret mov inc out lock or lock popa cmpsl push add jp pop aam test or push mov shl pop aaa add fisttp je mov add (bad) stos mov seto mov js adc (bad) sbb ficompl (bad) mov (bad) dec test mov hlt jo push dec fs aad outsb mov imul xchg or jl aam or (bad) out repnz gs dec xchg push cmp outsb or inc sub into mov fs shl mov (bad) and jge add roll rolb sbb fild add push andl mov inc neg xlat push loopne imul aaa push scas lea inc jmp stos sub pop movsb loopne mov sub or rcl aam add ss cmpsb cmp dec jge movsb into ss mov xor lods jae cld movsb pop and (bad) aad jo xor je push nop stos out stc sbb sub jge add jae push mov (bad) mov push sub imul sub into lret add push mov test fstpt and ds pop cltd into aas jecxz and sub mov out sbb repnz cmpsb xor imul xlat int movsb mov or icebp sub xor mov les mov call dec loopne lea lcall and cmp sbb out shl icebp ret add fwait xchg popa arpl cmp pop das ss or orb (bad) xchg daa ftst fsts mov shrl popf stos out sub inc insl mov in nop mov mov ss and fnstcw imul in adc mov jecxz lds mov and dec adcl adc add sbb inc orl cwtl imul mov mov fwait cli inc mov test and cld roll test xor mov dec and mov push ss aam cmp dec leave lret repnz xor aaa mov push and mov ja mov ljmp shll loope in aas cmp movsb (bad) xor push nop cmp les in xor out jle movsl stc bsf add clc enter (bad) xchg loopne cmpsl popf shrl ficomp repnz out test adc ret and add enter xlat out cmp lret setno fdivl xchg sub jne jnp sbb mov xchg xchg pop into out cmpxchg xor lock jmp mov mov mov cwtl leave add stc or mov les jp inc fldcw push mov pop movsb mov sub test mov hlt aam in add cwtl mov xchg ret inc imul xchg pop sub xchg call sbb mov addr16 pop xchg sbb lock xchg mov push les dec sbb cmp enter mov inc pop jg cmp dec aas ret out scas out mov and xor insb insl sub pop rcl aaa ret insl push and data16 push hlt fs sub dec lcall fildl sbb test cmp pop jne mov cltd cmp fdivrl fwait add ret inc fadd sbbl fsubl push incl pop xchg leave in sub pusha add out sub cmp out pushf movl les loop int3 xchg mov mov push jmp xor mov jns insb daa les xchg inc dec pop and xchg repz fsubr daa inc mov rcrb ret dec outsb sbb sbb xor dec inc out adc mov mov adc test lds mov xor jl xor loopne addr16 xchg and rcrl mov jo adc mov lods push sub pusha cmp push or inc outsl xchg int3 jbe out inc data16 stos int aaa pushf xor adc xor mov jb (bad) (bad) scas jecxz mov sbb ja mov insw in dec cli out jp pop xor mov or add push (bad) mov data16 xor or sarb mov int3 aad push test (bad) xor js mov mov pop sbb inc pop cmp sbb inc scas hlt popa mov push or rcrb sbb imul sub iret lods mov mov mov clc nop xchg cmp test jb or (bad) dec cli ljmp rclb insb cmp dec addl cmp push idivb or idivl pop loopne add fdivl movsb or add sti lds push dec pop cwtl out in pop pop adc mov inc test scas sub cmp and int3 js dec repnz cmp jle inc ret mov cmpsl sbb jnp rclb (bad) ljmp aaa loop ljmp stc pop mov mov and shll lret mov cmp mov jns int3 shlb lods gs inc xlat fcoml sbb jbe sbb (bad) lahf icebp and ljmp aaa int lods enter push loope daa sub ljmp in xchg add push push mov test scas xchg dec cli jmp add sub in incb mov jle insl out rcll jns inc push add jno or hlt xchg cs add ret mov and or jmp loop fbld mov jnp shl add fisubrl out sbb ficomp dec shll xchg inc movsl push push push icebp loope shrb xor fistl mov decb loop inc adc pop xchg cmpsb add enter mov mov nop lcall mov mov mov add adc dec fdivrs scas mov fmuls in xor xor stos xor mov dec repnz xor lahf sub or adc dec sub sub xchg ret insl arpl gs cmc xor stos int3 mov fcoml repnz shll pop sub arpl and push fs and insl jnp push pop sub fisubr ret or movsl mov cmp mov movsl aad jb xchg jp mov pop xchg movb mov xchg mov aad bound xor sti jns adc or icebp in push mov add fildll xor cmp test jmp ja ret sarb stc ja mov pop imul xchg pop add xchg inc inc mov mov sti popf jecxz pop shrl sbb pop push outsb mov in mov cltd popf in inc mov insl add mov mov test xor pop negl jl stc outsb fisttpll test test xor push out xchg xorl and push xor sysenter jo in loope fwait mov cmpsl pop or out pusha jg cmc es std xchg fstl add push dec jecxz mov test shlb les imul test int3 insb mov or jmp dec jno (bad) mov ror test sub cmp fxch push stc adc jle lcall push add ja arpl adc jl scas jl sahf out mov inc movsl leave inc adc xchg jo sbb inc sbb cmp pop daa icebp clc insb lahf push aad mov pushf inc imul rorl std ljmp or pop outsb push fisubrl dec sbb inc cmp fsubrs ja xchg push outsb mov jns lods mov inc out mov jne sub inc or cmp xchg popa xchg jae pop inc cmpsb in sub or mov mov enter cmp mov pusha pushf jno cwtl mov ljmp sahf cwtl push mov leave movsl icebp lea daa or mov and sahf test lret aam mov dec scas cmpsl bound shrl mov and enter pop iret mov xchg mov in adc pop popf ficomp mov lods jnp or ds inc lock aaa (bad) gs pushf push push and sub fwait icebp (bad) movswl aas rcrl mov nop aaa inc mov mov push int3 dec cmp adc mov fwait or movsl sbb popf in xchg sbb jp,pn jge ja dec test inc das dec jmp jl sbb movsb (bad) (bad) dec push (bad) loope outsb lret call jae,pt jnp lret scas dec push pop leave int3 xchg stos mov cld sub inc movsl into push inc ds dec jnp adc leave pop ss daa xchg dec test loop inc pop sbb push jl pop mov cmp fldenv mov mov aad mov bound mov (bad) xchg inc pop adc nop inc (bad) notb (bad) in push mov in xor out sti inc push pop jmp and inc jns mov call push pop push pop pop icebp ret xchg pusha sbb pop insb aad mov fisubl jno cwtl mov subl mov sbbl mov (bad) negl pop imul rcll jg sbb lea shlb dec pop or or push aas push xchg xor push fwait and dec push les lahf in mov sbb sbb (bad) xlat lret inc test rclb outsl mov pushw pop mov jmp sti cmp cmp and xlat rcrl test loope call push (bad) jbe and stos add pop out scas mov sbb cmp mov pop jle fsubr sbb stos jge ret xlat lahf sub and pop out cltd ret out out roll test incb mov sub xchg push lahf adc push orl daa (bad) incb cld (bad) sub xor pop aaa push xor test xor iret lds data16 cli test lods mov push xor cmp cs push mov (bad) leave sub mov pop movsl je iret movsb add adc inc dec je nop (bad) lock xor cmp xchg fnop xchg push mov psubd push ja clc adc leave cmp fcompl out sbb push mov xchg data16 push aaa xchg shrl fwait jno xchg (bad) inc mov xchg bound out aad aaa lret insl mov bound sub nop jnp lcall out cmp fcomps clc pusha iret xor xor cmp mov and je add jp push test nop pop stc (bad) std stos dec (bad) sub jb scas pop add data16 mov test cld cltd imul mov add sbb in adc daa outsb xor fldt andb add xchg xor mov cltd xorl test xchg or imulb ljmp andb rcrb sahf hlt imul icebp mov pop je mov jne out jnp std outsl mov dec jmp adc jnp icebp cmp mov push mov lods loop dec push aam sahf lock xor (bad) pop jne xchg clc dec adc addr16 sub xchg mov fdivrs mov sub movsl xchg stc stos mov mov int lahf sub pop cmp loope xchg xchg xor mov out into lods shl ljmp jo test xchg or dec out pop jbe inc movsl popf xlat pop push xchg push xor push xchg dec mov aad hlt pop push mov outsl dec mov insb push cs adc cmp dec imul and add add (bad) fidiv inc push pop fwait iret repnz sti out cmpsl outsl jmp jnp out push push insl cmc add je mov sbb bound repz adc aas mov or dec pusha inc rcr outsl sub fs arpl sub aaa push or mov jg aad cmpsl ficom adc out adc addb cmpsb push call decl js sbb andb mov gs add (bad) cmp sub clc fdivs jo inc jno scas cmp sub aaa into loop std aas test mov cmp mov out arpl mov jle ror add out sub data16 aaa out adc mov xchg pop push (bad) adc icebp in xor pop adc or sbb xchg mov or mov mov xor or adc addr16 notl xor xchg or jecxz push dec fwait sahf gs cmp repz pop clc fisubrl fldl ds push test add test jb cmp in bound fucom mull push xchg seta popa insl clc stos (bad) dec loope std inc gs sti mov imul fwait dec add int xchg inc ja es ret enter mov arpl push hlt jecxz orl out mov (bad) mov sbb stos xchg ret mov mov (bad) fisubr xor movsb xchg mov sbb (bad) mov pusha fnsetpm(287 std sbb notl fdivl mov jne aaa push and sub push stos fsts push sbb pop cltd inc mov mov mov fist jle adc mov in mov dec and adc in out imul push scas inc push fsts nop jmp dec arpl int fist and jmp sub inc (bad) sub fistpll inc cmp mov loop fiaddl xlat into jb xchg fs faddl adc and in cld in fild iret push aad mov dec mov frstor aaa xchg add ljmp push mov fs pop std push movsl pop fmulp mov pop push fidivrl jbe call lods adc aam roll out dec addr16 (bad) push push pop or pop out sub add aaa loopne xchg pop lcall xchg add mov in mov sbb testl xor aaa xor mov sahf sbb (bad) xchg sbb fbstp je inc call cld out dec movsb jnp (bad) bound inc push (bad) mov jle jae add mov je sub aaa jecxz xchg mov jb lea push xor bsf jbe lret lahf and notb in xor (bad) in mov mov mov ds mov pop dec outsb mov rorb lods adc or in pop lcall shlb mov aad fcmovnb imul dec stc cltd add (bad) jo sbbl cmp mov imul lock and insb fwait into fnstcw lods int push sub jl (bad) in xlat outsl lcall (bad) std pusha call sbb sarl aaa sub rolb sbb outsb jg dec add roll (bad) lret and hlt push and pusha add xor cli mov jno stc vpsubb sahf dec cmp leave mov lods insl sub mov fs jo pop adc sbb xchg enter xor mov cwtl lds insb mov cmpsl ds sarl mov sbb in xor popa addr16 outsl or testb out mov (bad) gs notl pop add jns or js out pop or xor cmp and jle inc ror sub inc sarl push lods daa leave pushf adc jg add xchg movsl aad lret push adc jp pop push xor pop mov jb fwait mov jb movsb popa inc mov mov mov iret out repnz shll mov call pop and call das push mov js std shl insb add pushf faddl push js pop mov sbb jle out xor mov sub out shlb mov mov (bad) xor js sbb jnp jns push dec cmp sarl lods aad (bad) mov inc and add pop xchg jae jecxz dec dec mov cmpsb ja loop stc mov pusha out mov xchg pop rep sbb fstl clc imul pop cli add jp (bad) mov pop into aad cltd jle add lahf stc in pop cmp gs pop mov sarb jmp pop mov inc pop mov addl test outsb mov mov jnp sub jne cmp popf mov pop push test pop cld jb sti cwtl xchg mov pop push inc cmpsl adc sahf into int3 dec mov cmp jle jb sbb mov inc mov xor mov test pop pop jbe sbb xchg lret aaa and cs out cltd adc les push sbb fdivr loopne int cmc add cmp dec mov dec push sbbb aad xchg xor cwtl and dec negl sub sbb xor jge and imul inc lock and cmpsl hlt mov scas sahf mov adc pop outsb repz or sbb adc nop xchg hlt sbb inc in enter fdivl cmpsl (bad) mov wbinvd sbb out mov icebp push loope push pop ja xlat arpl jbe xor stos pop pop rol adc lahf shlb cltd sub add test cmp in mov (bad) mov lods push in adc lcall push pop mov xlat mov test into cwtl or mov cmpsb fs fstps stos mov rcl ja and cmp cmp add nop data16 pop add jmp xlat jnp icebp push push rcr or pop int dec scas std out xlat ja push or lcall add mov loopne sub sbb (bad) jae movb adc in (bad) rcll and mov and xor jne mov aad mov ds cmpsb cmpsl sbb je adc push pop mov sub cmp dec jbe insl mulb cmc dec pusha inc mov js add arpl pop or movsb inc out or cmp outsl insb pop xchg cmpsl cmp movsl in jl fwait (bad) adc and subb stos xor outsl test ret mov or mov cmpsb test adc cli int3 cmovp arpl adc sub stc hlt mov lds loopne movsl stos xor js fistp fisttpll cmpsb lods in lret adc fdivrl inc scas xor cmp loop dec fisub je add cmp xchg ja test push pop jo jp mov (bad) (bad) (bad) inc imul fcomp cld repnz nop jp or mov cmp jnp cmp dec imul inc stos cmp cmp push fcomi sar adc jae aam mov nop shl pop int mov xchg loopne sub push mov aad sub stos neg inc movsl cmp mov int3 sub xchg aaa dec dec ds sub addr16 loop mov pusha outsl sbb dec push mov xchg ret aam xlat es aam sub lcall and inc sub pop mov out jns in out sub fbld out stos jno aas cltd loopne aaa cmp jecxz mov (bad) or push push jno mov imul inc orl jmp xchg jge sbb sbb rorb addr16 sahf cmp mov lret dec fs mov data16 loop push or dec popf fidivrl or lea push sahf pop and jo mov les cwtl outsb mov jb xor push mov popf jmp aad sbb shl push xchg movsl jmp mov cmp ljmp pushf ljmp or mov cli addr16 push cmpsb push mov mov lcall shlb lcall in lds aas mov push rolb adc movsl pop xchg inc iret loope push xor or mov dec imul imul loop fsubs imul xchg lds mov pusha out lock sub jle cmp push out mov fs cmpl cli jge hlt adc push add push xchg addl divb jge mov int dec jmp pop outsl lea cmpsl data16 inc xchg lea cltd ficomp sbb pop or fimul adc inc mov mov shll add jnp loopne mov ds fwait out stos (bad) mov mov pop (bad) jnp ficom clc mov imul sub xchg hlt dec stos mov gs cld mov test dec jb sbb scas or push (bad) and dec mov mov dec sbb stos adcl push (bad) mov sbb out and add lcall push popa arpl in adc imul (bad) cmp push aad cmp sbb dec addr16 lea jge adc movsb or notb pop mov jae xor pop xchg dec pop cmp sbb pop pop push xchg xchg cmpsb pop push cmc dec xor cli pop cmc pop adc adc add cmp mov ja cli mov test adc lret mulb and or in dec mov jl sub sahf pop mov enter mov inc dec lds mov inc dec outsb fs cmp pop mov fs mov test sub das in enter mov or or scas push or shlb mov (bad) mov mov data16 pop adc sbb outsb sbb inc fistp add xchg sub movsb and mov mov adc mov bound into in (bad) fwait add inc lcall mov adc mov fistpll cmp pop ret out and pop repnz pusha cmpsl jl cmpsb scas adc jle aam lahf and mov in dec fidiv sbb mov push mov lret push adc jns ret xor jle jns fisubl jg xchg movl push aam movsb (bad) aas inc jg cltd add jge enter (bad) mov nopl xchg mov or sbb mov int3 cltd mov push std inc scas stos xchg ds out inc imul in xchg mov mov cmc mov xchg stos mov loopne push (bad) fistl movsl mov jne sub mov mov les jp mov (bad) adc mov fucom aaa lret xchg cmp cmc mov sub inc les adc std nop dec movsl rolb notb jecxz lcall sbb (bad) das loop jmp jecxz rcll fs lret in roll cmpsb or pushf xchg pop lds test lret cwtl into (bad) int3 das in js ljmp adcl push dec gs add push rcrb xor jp xor mov xor subl pop push fwait xchg lcall jecxz lock push push outsl outsb rolb outsb inc movsb ds adc leave movsl adc (bad) mov push in fsubr jmp and sub add es and adc shlb inc cmp movl sahf packuswb mov xchg lods (bad) push xchg inc cmpsb cmp adc xchg es inc in push loope inc lock pavgb test xor sbb and dec (bad) mov cmp (bad) (bad) mov lret fs lods inc and cmp jecxz movsb into sbb clc cmc mov inc xchg std push jb rcl vpshuflw bound enter jne lret out inc aas movsb scas adc enter push mov aaa xor mov imul insb pusha push js add es aad lds fildll scas in (bad) sub sarl cmpsb rcrl lods mov push ja ja stc (bad) into lahf sub bound inc cmp out in (bad) mov sub inc ljmp (bad) xlat (bad) scas mov jnp sbb mov dec pushl pushf mov fwait mov cmpsl or or mov mov xor aad sub mov sbb dec cltd (bad) pusha mov jge or adc in cwtl out insl in push mov xchg fisubrl mov pop ljmp mov bound pop or cwtl dec xchg mov pusha pop cs ljmp ja xchg (bad) dec pop (bad) lcall jo or xchg aad lods gs mov jmp pop out adc mov mov repnz cmc cmp or shlb push push gs test outsl imul dec (bad) push out jno scas lahf ss mov cmp jg,pn or xchg icebp jno xor (bad) mov cli pop jg cmp andl sbb add sub shll mov or cmpsb or adc int dec inc mov inc mov icebp xchg push popl jecxz mov xor mov xchg cld sbb insb cmpsb sbbb sbb out push test mov dec jle or movsl ficom ss or outsb frstor jno fcmovu mov addr16 inc dec (bad) aad insb sbb in (bad) call pop mov aam jns ret lea fldl shll scas (bad) scas ljmp xchg out movsb nop mov and popf insb popf clc dec pushf outsb pop sbb or cld scas mov pop test lds add add mov sub aad mov sbb mov jl push sub fiaddl push call leave sbb xchg push sbb lahf mov std (bad) test push push in insl stos add popa popa pop enter push jo jle sahf mov in aaa ret (bad) sub nop divb std dec (bad) mov (bad) shrb cmp into xchg aad mov push pop fisubl stos and lcall push mov mov bnd insb lret mov enter fistpll icebp push (bad) add adc jge push sarb dec and mov inc jae loop mov idiv movsb xor push add sbb mov idivb sbb cvttps2pi xor jnp sbb pop xchg out ja add mov fisttp cmp clc call (bad) test xchg xchg mov sti bound xorb movb push outsb ds addr16 fdiv adc test rcl (bad) dec push insl mov or sbb sub icebp ret ss test test loopne mov jge xor xchg dec leave (bad) cmp std fs push inc pop inc jg sahf sbb test jnp xchg jb pop lret (bad) icebp addb shrb add enter pop dec push andl xchg push imul ret or add dec fild mov cmp jne xchg mov mov jno test inc lcall cmovp (bad) mov or cmp adc push pop push fiadd pop and movsl aaa cmpsl inc lret mov std cltd sar ss xchg fcmovu dec xchg push dec adc lcall push and jle lret fisubrl xor aas adcl xor aas movsb test call jb and (bad) int scas and cmp mov inc jae imul cs add pop ret mov cwtl mov xchg or add (bad) cmc mov ret xor jo xchg sbb mov xchg pushf (bad) dec rclb pop addr16 mov and ret (bad) out roll in (bad) icebp js in loope mov inc insl mov push xchg gs sub pop shrl enter dec push inc mov fxch sbb andb decl jge cmp mov cmc xor repnz mov xchg sub inc mov jne inc daa mov jge dec loope sti mov inc push mov mov ljmp pop shlb gs and das jns sub mov pop xor (bad) or sub or sbb jnp lahf jg sub push movsl paddusw mov cld xor lods outsl arpl mov cmp or mov mov sub mov sub out test mov sub xlat mov test gs les lods out push dec dec or xchg pop mov mov sub ror and push popa loope fimul (bad) fnsave xor fdivr cmp cmp xor mov fnstenv cmpsb leave or mov xchg mov int3 mov add clc fcmovnbe mov fldt dec push scas dec out dec push cmpsl jno dec sbb fst or push dec (bad) out mov mov jo pop stc sub jmp lea pop pop cs mov inc in push ficompl movsl cs or stos fadds addr16 jae mov push outsl (bad) stc lock fcomps pop xor rcrb cmpsl add fcmovb xchg push xchg nopl xchg daa lret or in or pop sbb addl outsl inc sub test lods outsl fidivr pop insl jns push pop push dec test push mov mov imul push dec mov mov add sahf cmp or ljmp push jb addr16 ljmp push pop jp pusha lcall inc mov adc (bad) jp sub cli into shlb test rcrl loope cmp jo mov jb push outsb dec clc inc mov mov shlb mov xchg (bad) stc adc fcmovnb jg mov in jecxz mov cmp push addr16 sbb ret dec xchg mov sbb cli loope (bad) lods enter push inc or jmp inc sub cmpsb jl dec push in pop rorl xchg out push sar inc jo fcoms (bad) mov sub out stos cmpsl mov xor in lea mov adc pop pop repnz icebp sahf xchg jge sahf xor insl inc imul and jb cmpsl pop movsl and mov jno push rcll ja repz (bad) pop sub push cmpsl dec sti mov stos mov sub es cmp hlt arpl jo ss inc stos push sahf pusha push sti xor and (bad) xor mov jg pusha js iret test clc cmpsl lahf push mov jp or cmc or rolb sub scas (bad) les inc out bnd ret mov inc int insl cld int (bad) fsubr cmp mov popl push test cltd pop sub mov adc inc push jb jg jge xor adc int mov mov jnp cltd es add cmp movsb fsubrs jp push adc mov jne decb xor rcr dec xor and and imul sahf and xchg and cmp and es push jo jp jle scas (bad) lea mov stc adc mov (bad) out (bad) icebp jle push rcrb jmp (bad) xor mov insl jbe (bad) clc cs out int3 fldt jne mov push or xor mov or in push push mov movsb push aaa negb lahf stos test movsl dec xchg jecxz orl sub push and mov gs out out cli ficompl fldt inc pusha inc or cmp dec insb outsb push aaa ljmp or pop das out mov pop rcr ror aas ds nop lea notb jl insl stc test popf push adc frstor (bad) into inc jle (bad) pop lds std into mov xchg mov shrl rolb xchg popf nop fmul popa push or or pop sbb mov rcr jne sub aad cwtl cli pop mov (bad) aaa and dec xchg inc xchg scas mov sahf mov mov jg push sub inc test push lfs mov xchg addr16 in jecxz push pop stos jno cmp pop out jbe fidivr lret mov cmpsl push xchg xchg mov jae ret in cli sbb pop mov pop push inc stos fnop sbb mov scas jno clc cld mov repnz (bad) cs aad nop pop cld cld push xchg sbb push mov orps inc out push sub mov cmp sub sbb sub jno or inc jne sbb cmp jp dec inc mov dec or clc mov out jecxz xor pushf mov pushf push mov mov imul cmp xchg jbe inc sbb sti or sbb imul adc lds dec pop inc add (bad) and loopne cmp je xchg cli push pop out mov sub push ret push leave or aam dec out nop add std mov sbb or sub hlt es mov jns lret int3 jno rolb mov cmp fistl dec dec jp adc or (bad) lds lahf sbb fnsave imul loopne adc dec or stos jnp iret (bad) (bad) arpl in loopne push mov xchg pop shr xchg cmp jmp dec lret pop dec mov imul (bad) or mov nop test cmp hlt out mov or mov sahf lahf js and mov rolb insl cmpsl sub push cld ret xchg add test cmp sub pop xor lcall inc jnp mov push imul inc inc and or mov fcompl xchg lret and add pop fwait jl sar dec stos ss sub pop iret lods fcompl dec icebp int subl test (bad) lret mov imul dec imul testl and mulb push push addl dec push ja cli push adc dec push sbb loop adc mov sbb jne stos cmp push sub call push inc jecxz mov mov or sahf inc mov jbe mov mov sbb sub mov inc lods imul (bad) xor cmp ret push lods (bad) mov xlat cmp in dec mov in ret (bad) dec add popa test xchg xor push xchg push cli mov (bad) nop mov les aas jmp pushaw dec jl xor pusha push roll movsb mov jge lods xchg or loop stos test push in add sahf lods mov add test xchg arpl repnz stos mov cmpsb mov loop xchg add jg xor cld mov xor xchg cmpl fsubrs ja mov jge in jne loopne jl (bad) jg add leave cmp shrl push push and add test std lret call or call lahf xor sbb pop lcall lret (bad) shlb les dec and out repz (bad) mov jmp cmpsb push (bad) hlt repnz jg dec xor or in lds daa xor pop in xor push mov scas aaa dec loop sbb add addr16 lcall mov xchg (bad) or scas and rcr shrb pop add jne xchg jb das pop out add fs sbb or jb pop scas sub xchg sahf pop mov imul inc mov mov and cmc jle jbe pusha sbb push psubw cwtl inc ret mov frstor xchg pavgw and inc fdivrl imul inc mov scas movl notb int dec mov push loop lahf sbb pop faddl pop xor bnd jge daa cld push lret adc push cmp add jg add dec jb fadd scas mov push dec outsb jno mov xor imul mov int3 sub daa or jo xchg scas stc jno aaa test fcomp mov push cmpb xor mov in jge jo lds xchg lods test adc mov sub ljmp cld dec iret mov (bad) (bad) lea fiaddl push outsl pop in iret js mov sarb and movb or jecxz add push cmp push cmc insb sahf jl,pn mov and pusha (bad) les lea mov mov jle sub mov ljmp fwait adc dec xchg divl mov jb out xor cmp sti jae nop xchg xchg cs ret pop xchg int3 pop call and cli cmp inc mov xor mov cld add add adc in nop xchg scas imul scas scas nop ficoml mov lods jbe push in pop enter push lds leave and mov ljmp sbb sbb jmp push cmp imul mov jno mov sub mov dec dec fisttpl (bad) cmpsl xchg dec xor dec in fimul aam add jge adc mov jns insl sbb pop push idivb adc jbe push addr16 xor adc loop sbb fstpl cmpsl sarl and pop sbbl out mov jno and ficoml mov pop pop insb (bad) adcl (bad) jle or sub push sbb repz sub inc out (bad) pop xor pop mov (bad) or or mov fstpt dec nop cmp enter bound adc sub xor add in loopne icebp (bad) lret ja mov aas xchg inc pop enter loop pop or (bad) repnz jge add dec addl stos into or jl jb and dec lret jbe aaa imul andb stc push ret pop sahf xlat cmpsl test cmp mov inc fisubrl scas dec push xchg or push add mov dec imul lcall cli cmp sub gs cmp in jne dec loope jne sub test jne popa jo mov push icebp fsubrl push jmp fucomp je and mov adc stc ja xlat add lods pop and pusha shrl in pop mov xor out lods jnp stos dec adc lods insl call mov shlb aaa jmp add cld ljmp testb shll int3 aas jno jge nop sub xor test dec pop mov enter imul ret or je fwait daa xor mov dec inc lds xchg sbb adc (bad) nop stos sub insb ds xchg (bad) cmp mov jb (bad) adc inc sub pop aad add into in xor ljmp aas fsubl sahf stc sub lods or jg stos mov iret fidivr pop f2xm1 jne imul cmp lea ljmp lahf ror inc out cmp jmp mul add mov outsb std dec leave adc lret lret aad outsl inc sarb loopne add push aad inc loopne test and (bad) in nop cli push xchg adc dec jl adcb out cmp mov add push outsl jmp cmp cmpsb flds push out lds (bad) out xor andl sub push xor push dec sub jb nop (bad) xchg sbb cmpsb jnp cmp sbb mov ja jns fnsave mov mov add outsl repz cwtl dec lcall mov lea mov adc (bad) pop nop mov cmc adc xchg inc dec or aad lods and pop out mov (bad) and jae (bad) fs inc dec adcb xor fldl dec add inc sub test outsl (bad) aaa insl add out adc jmp pop mov outsb pop jmp (bad) inc cmp sarb mov call fistp fcmovnu into popf lock std and and insb ret pop insb pop mov mov test loopne sti scas xor lock sub repnz ljmp ds adc inc and sub stos xchg into fsts inc fsts imul pop fdivrs bound cmp fnstsw adc mov std and int3 sbb dec or ret push cmpsb push inc sti cli fwait mov mov lret or movsl pop dec mov bound mov cmpsb pop mov cmpsl popa or (bad) (bad) enter hlt (bad) test jecxz mov sbb mov cmp jmp cmc sbb pop imul arpl loop adc mov xor lahf or lods mov mov cmp call dec push sub insl cmp stos add push adc mov mov mov add pop (bad) jbe stc daa xchg cmp js cmp add mov and int pop in push sahf xchg xor and lret mov cmc cmpl mov clc adc inc add mov insb xchg out mov dec sub arpl pop sarl mov decb mov repz dec sub jle leave and int3 inc xchg add adc mov cmpsb mov dec fsubrl mov jecxz adc (bad) (bad) xchg popf loopne dec mulb cmp cmpsl inc push fidivl jecxz xchg cmp (bad) cmpsl xchg out mov lea fnstsw pop addr16 or xchg (bad) pushw (bad) sub lds jge iret inc sbb ss jnp,pt add sbbb xor cmp out imul add lea mov inc sar adc movsb and xor sti popf pop adc mov std inc xchg imul iret mov jp xchg aam pop pop pop out mov mov push add loopne add das aad rcl inc or mov aas mov inc in lea push fstps lcall xor in inc mov aas add cwtl dec cmp pop popf notl pop mulb mov arpl push fisttp mov daa in xchg pushf sub jo movsl pop in and sbb pop (bad) int je inc ljmp movsb popa bswap and scas stos call cs jb fcoml (bad) pop add fisttp int3 jmp ret sub pop shrb and xor inc jb (bad) addb fildll repz pop ret outsl mov pop insl daa ss xchg pop popf push les out dec rorl mov or pop cwtl jmp ljmp mov in push jge les in nop test push arpl jle jb cs inc cld sub rol movsb mov mov adc or addr16 mov test fbld rcrl push out mulb push mov (bad) xor js test stc lds inc mov push cmp adc pop jl call es push xchg (bad) sub cmpsl or push rol out adc mov rcll jnp (bad) xor in arpl mov jnp lock dec cmpsl mov test xorl shrb xchg mov popf xchg bound adc insb lcall dec pop xor add (bad) pop bound jne inc shrb aaa inc insl bound and ljmp (bad) xor fdivrl pop push mov sbb jb add nop inc mov adc inc inc fldl adc repnz movsl jle mov jbe stos arpl or lea fisttpll js iret int3 xchg dec xor mov lret adc aas sbb nop insb pop inc mov lds mov cwtl les pop movsl xorl xor pop leave jo in push sub loop jb lret (bad) xchg arpl inc add or std outsl stos xor lods mov mov mov sub popf lcall inc or and popa mov add mov mov std or icebp sbb jbe lock xchg cmp lret add daa inc int3 mov mov ret rorl stc addr16 lret xor dec pusha add inc pusha sahf into test out mov jns test aam adc cmp mov cmpsb push ja mov or mov insb cmp inc adc cmp push pop add dec cmpsl (bad) adc adc fwait jo je movsb sbbl push (bad) sub es lret in imul xor test leave sub and popf push push adc xor idivb dec adc imul ljmp lahf cltd sbb fisubl cmp adc dec jnp xlat inc push stos xchg sub xor testl push adc mov loopne (bad) out pop push in cmpl std (bad) (bad) fwait hlt (bad) pop jmp push jge adc mov add cmpsb or loope mov test fidivr stc es and rol push inc inc addr16 loope or dec add sub mov jg scas inc lock pop mov les adc inc sarl mov jmp clc dec adc hlt jmp iret mov loop ss mov mov add flds adc sbb xchg clc mov mov pop scas ret out out mov push mov jno and cmp pop cwtl sub cmp addr16 and jl in (bad) xchg popf inc and mov js and in lods aam adc push dec movsb dec mov out inc (bad) es out sbb add lret incl fnsave mov out leave jle mov push or in pop idivl cwtl pop inc cwtl push mov das jge enter push mov mov pop scas jecxz dec add scas and lcall in and loope fdivr out ret je jne ss dec popf lea loopne js or xlat mov sub clc xor add inc push les xchg subl jp sub mov test add enter stc mov fistl stc adc jns mov (bad) mov fwait aas jbe mov sub out fisubl mov bound xor (bad) in sub mov sahf inc dec mov aaa in lret aaa sub (bad) cwtl mov clc fwait mov xchg dec inc add push xchg lods ja incb fiaddl xchg mov sbb mov sbb jns loopne jnp pop adc ds ret mov sub jmp lock jp call jp pop add lahf dec add jns mov mov sub sbb mov xorl dec sbb arpl ds test jns scas jns mov lds add adc psubsb xchg adc fisttpll enter mov xorb imul push jle adc (bad) xchg cmp loop adc and pop push inc pop jo sti sbb arpl pop pop insl bound rcll mov cmp cli mov inc fsubrs mov (bad) or in push adc ja int3 nop fs mov jge inc jle bound mov ret call adc push xchg pop xchg lcall adc sub push cld xchg outsl shr inc cmp jns inc ret sbb loopne mov mov out push sbb daa sbb xor jecxz in dec cmp pop push add lcall adc sub dec addr16 in and test ds mov imul adc cmp dec pop repz ljmp fdivs stos lahf push mov mov sbb sbb add push subl dec cmpsb cs jno xor insl repnz inc xchg dec sbb ja sub jae xchg ja mov ret pop lea (bad) mov (bad) xor mov aad lods xrstor jb sub in dec (bad) push aaa mov out inc add mov jo flds adc negl imul mov sahf mov ja idivb pusha dec inc xchg loope mov in dec ds lods popf adc ds push mov pop gs push leave push iret stos dec sbb loop mov mov add adc (bad) jo test lea inc mov lret mull frstor xchg fwait mov push mov or insb shl mov mov push xor das mov pop adc push xorl xchg fsubrl inc sub popf inc movsb int or in cmp jno orl scas mov insb mov inc in mov in int3 (bad) push aas pop push ja insb and lods imul in mov and into insl enter jl sub pop mov xchg repnz jmp mov cld mov (bad) sbb mov and sub sub (bad) in gs mov mov (bad) aad data16 sti int sub sbb in mov lods mov (bad) cmpsl mov cmpsb pop int3 cltd enter lock cmp nop ret sbb cmp fist push leave std adc mov mov out fstpl mov dec lock mov adc repnz int sbb fcoms and mov gs mov daa ficom fwait inc cmpl push jg push or mov insb (bad) push mov push mov dec adcb push (bad) adc aad adc jmp jl rcrb jmp xor dec add cltd push sbb pop jl out in dec mov push outsl or cmpsl push shlb sub add xchg cli in or xor jmp push push xor jmp push (bad) ja out sbb mov push iret xchg add push into std sbb lods out add pop xor je jmp repz ds xchg ret pop or add sbb xchg es push (bad) out or cmc aam insb push sbb mov xor popa jae xor dec lds shll js lret into jmp cmc dec loope jno stc xchg add sub pop inc pusha (bad) mov mov jnp xchg push fsts dec shlb pop push xchg mov out icebp inc mov stos and push mov loope sbb adc sbb or dec test mov imul add test and dec dec (bad) sub dec je cmp out and mov jl (bad) xor (bad) insl sbbl push je xchg rcrl and (bad) and sbb mov (bad) hlt dec fdiv and adc ret aad out inc loop enter and mov jp rcll jne cmpsb movsb pop dec inc data16 fwait push sahf xchg pop insl jp cld (bad) sahf test movb into rorb stos push jae stos dec push repz arpl sbb cmpsb push cmpsl mov mov fcom mov xlat inc hlt xchg mov outsl mov je lcall push mov inc mov int3 push jp mov int3 xor js out fs xchg ss mov loope ret cmp push int3 es das pop js pop pop cmp or pop pushf fnstsw insb cs mov jge decb aas enter jmp pusha dec jecxz enter loope sbb fcmovnb jae lret lds dec inc sar or cli movsl lret (bad) lods aas push mov (bad) dec jno or scas push (bad) lea inc dec jg and roll lahf and cld xchg ljmp sub or outsl insl movsb (bad) (bad) imulb imul mov imul mov or dec stos (bad) jg lcall rol inc aad loope jo popf inc es cmp imul mov popa sub es pop mov push cli movl repz stos jnp test xchg or cmp and sub outsl gs lret sub mov enter aam out adc je ret gs push mov fiadd cmpsl pop xlat mov int out testb inc xor std xor jno and dec (bad) pop or mov dec stc enter (bad) adc mov dec xchg push or add (bad) mov sub jns les adc aam cwtl nop ss in pop jmp mov int sbb stc in xor mov mov fcomps inc and stos xchg pusha or add fistp jp in and and ss lods loope xor popa insb rolb lds retw xchg add (bad) sub adc jecxz mov sbbl sarl push mov call stc repz push test inc ds mov xlat xchg rorb xchg fmul or mov jbe jnp adc xor pop xor push les outsl aaa xor pop lods bound sub mov (bad) lds jbe out decb xchg or imulb out das sub imul loope stos popf xchg inc xor pop mov dec mov repz cmp je das mov fstpl cmpsb cmpl notl inc in (bad) xor mov mov repz mov (bad) movsl lahf movsb dec mov add mov (bad) jmp mov pop jl imul fdivl xor pop daa or xlat ds (bad) in mov cmp divb notb fcoml or push mov data16 jae jne pop into cmp inc inc fistpl push sub sub jecxz pop xchg xor ret (bad) (bad) mov mov sub jmp xorl cwtl pop mov (bad) sahf jg dec in xchg jb stos jge lret pushf test inc daa and mov xchg push mov roll cmpsl push mov (bad) in call popf loop sub fldcw lock je and and sti sub test out xor call push lcall jns push xchg (bad) repnz ds xchg push dec sahf pop add loopw jb mov (bad) ljmp popf mov xor (bad) stc jns jl dec xlat into cmp xchg lds mov cmp push push adc arpl gs sub mov jg inc pop push stos or js add or sbb jmp push pop add aaa cmpsl ret mov mov icebp xchg push pusha mov iret xchg icebp push push or sidtl pop rorb loopne sahf test sbb sbb dec mov sbb jne inc movsl mov mov sti ss int3 mov test lds cld mov popa insl cmp loope mov xchg inc repnz pop jmp push mov bound rcll xchg dec mov imul sub cmp nop pop xchg mov test pop dec pop stos xchg iret scas cmp inc inc jbe and pusha fcomip cmp pop or adc pushf jp movswl (bad) repnz iret es sub pushf inc pop lods xor icebp fadds icebp inc pop rol and cltd repz pop out push dec popf jle fcom sbb sub std test in pop add into popa xchg jbe push adc insl (bad) in cmpsl aad scas cmc les into lret dec lret sub daa inc jmp (bad) (bad) scas fucomi dec pushf dec fidivrl jne xor data16 sbb sub push and push sti adc mov or mov es and pop inc cmpsl or in mov mov pop popa mov xor data16 push xchg jmp mov mov mov cmpsb mov and mov mov fldcw insb xor push test fistl sub mov stc and sarb icebp adc fs sbbl and pop shl cld jmp into das add mov stos pushf lea je inc outsl loope ret sub loopne push cmpsb jle and lcall jo pop enter add (bad) sbb aad mov in out inc sbb sahf stos add sbb loope xchg and xor xchg aam jecxz adc repz pop xor cld scas (bad) fisttpll sbb insb and adc in es adc adc jle shl sub pop hlt dec xlat movsl test jp paddusb stos sbb shrb jmp sbb xchg loopne test cmp and fiadd sub addr16 and xor jns mov or adc dec fldcw (bad) (bad) js les js sti xor pop push std rcrb jne jmp jne aaa in jp rol (bad) idivb inc cmp pop inc shrb insb pop mov xor insl sub popa dec fadd sbb fdivs xchg aaa out idivb (bad) decb jne sarb jns movsl jg xchg mov add js idivl lahf mov enter divb hlt in shlb out jmp insb mov stos sbb add out scas dec cmc and lock or mov pop sub jge mov fs or (bad) ljmp jmp xchg sbb fcmovnbe push add dec pop loopne arpl sahf pop inc mov and cltd cmpsb insb adc idiv lock mov push xor cmp imull repnz and mov xchg xchg pop push popa mov cwtl mov fcmovnu inc mov je int cs into mov (bad) lret (bad) icebp mov xchg add in adc ds add sub pop pop test fistl mov dec clc and inc and es loop jl xor inc ficom or mov test mov adc lea cmp cs push mov lcall and push daa inc xchg and mov cmp aaa (bad) imul sub sbb add loope lret xchg scas dec outsb or and rcl test cwtl jne cmp mov sub andl inc inc in sti (bad) nop pop push mov add jb (bad) les int3 loopne ret adc jb xchg sub xchg adc or inc int xchg sbb mov add push in cwtl in call pop and xor sub xor lods shl (bad) lea sub inc jne das lods mov lock fidivr jmp sar out sub (bad) cmpsb ret lock shll shr jle sbb push push push or mov jmp test pop xchg lock das lods or or dec sub xor (bad) mov (bad) je lock jne mov adc shrb dec ret and and ds stos shl sub sbb cmpsb cmp xchg inc xor add fistl stc stos mov movsb sub jecxz sbb xor mov (bad) push dec rorb adc pop shl mov je scas jecxz clc jecxz push imul fbstp leave push and xor xchg and out inc cli aam sub mov in or inc imul (bad) int3 xlat jae dec mov jl fs fist pop xchg xor mov bound dec (bad) das sbb (bad) fs add pop js adcb daa adc lcall outsb aas xor dec ficompl je adc and xor sti mov lock mov mov push mov adc cwtl test iret mov jae and cmp pop or (bad) mov cmp mov xlat mov mov ss mov and push loopne cmp ja mov pop out dec (bad) push (bad) jl push ret insb (bad) xor xchg add sti or gs stos cmpsl lret out jl into and xlat add dec out xchg add cmp sub add ljmp jecxz (bad) mov divb mov cld sub mov inc xchg inc into fisubr je repnz ss sbb jmp mov cmp mov cmpsb xchg push add popf mov xchg mov test in rcr loope xchg and test ficomp rorb pop popf mov add bound mov and or arpl cld inc fimull sbb sub inc rolb mov scas sahf fdivrp jge aam movsb clc nop or pop add cmp test cltd mov hlt aaa mov push jne test fildl xchg pop (bad) xor xor imul push push fsts pop aad mov addr16 mov xor (bad) cmp dec das cmp cmp scas movsl lds push stos lcall dec lods sbb pop push pop jl enter hlt cli cmp jne aas int dec sbb and mov mov adc pop push mov jle add mov xor push out pop jmp or pusha jno mov cmp ret es or iret sub sbb incb fstps lahf ja jae cmp test iret xchg bound jl dec inc add aad scas aas pop inc les inc insl out scas std pop or adc and cmp sahf lods mov ja rcrb bswap pop mov roll stc jp add and daa or pop inc ljmp mov jns inc dec idivl into sbb shrb add je pop or in stos pop mov push cmpsb mov daa xor fs mov and (bad) push sub out pop adc inc shlb je,pt pop pop ret cltd js enter inc sti std divl mov mov repnz xchg jp sub out cmp add call cli lock or fistp push push push aad lods (bad) rorb inc mov inc dec mov (bad) in adc or aas cmp add and inc cmp (bad) mov cld push mov cmp insl mulb ljmp decl jae xchg shrb inc nop rcrb ds outsl jge lods test aaa add (bad) fucomip dec mov mov cmc rcrl xlat into sbb sahf adc xor out rcl add in sub out jb lret jle add mov xchg mov insl inc push (bad) daa ficompl dec dec xor dec push scas sub subl xchg popa aas sub mov test arpl push pop call sbb mov mov insl xor test je push mov arpl fwait inc negb jns xor (bad) mov adc and int cld jg push jo shrl pop xor test in jg mov push cs cltd pop out (bad) (bad) cmc pop cmp xchg mov xor cmp test pop push mov mov pop les push ljmp in or lods and clc jge xor pusha js outsb push adc push mov ja or es decb cld mov lock cmp mov xchg or lods sbb mov xchg imul test add fsubl xchg and jo (bad) sub adc jge and inc adc out in bound push mov insb cmpsb in nop and repz call and mov push jne (bad) (bad) jb adc and scas push adc (bad) dec and cmc cli cltd mov or (bad) iret mov inc stos repnz xor push in push pop add mov int3 push cmpsl fsubrl mov cmp in sbb or stos mov jae in inc sbb dec xchg movb add push inc hlt mov insl shlb inc mov test or fdivrl hlt or sub mov sub mov ss jbe fistpl mov xchg call inc mov lock pop inc stos stos xchg lea xchg in push adc xchg jne push lret fnstsw lods or sbb sarb inc push pop cmc das movsb adc cwtl adc xor popa repz sub ja sub cmp iret dec sbb xlat push sti sti inc scas mov in mov ss xchg loop int ret test cld mov mov mov daa push aaa add les popa das pop out repz (bad) mov ljmp test inc fild loopne mov dec push and aad jo aas sbb in iret sarl push movsb jle iret cld or repz mov iret fimull xchg imul jg mov rorl jle push mov lret adc data16 (bad) (bad) test add (bad) leave addr16 mov dec pushf test add fisubl add dec cmp push xchg add std adc aad divl (bad) iret sub or insb loopne imul jmp mov mov mov xor ror aad mov loop inc xchg push test cmpsl hlt ja or (bad) inc inc shr pop arpl and mov dec sub in sahf std mov out andl add jnp inc pop add pop sarl and mov imul and sbb popa sbb fisttpll scas inc xor fcomps mov cld jns inc add push cmp sub pop dec popf enter pop xchg in cmpsl jno mov imul loop lret test mov push fiadd push mov mov push les bound (bad) std lret pop cltd in dec fstpl popf into ss mov or repz lea shrb dec mov (bad) fmull jg (bad) mov pop jp cmpsb icebp js xchg es xchg and clc aam idivl fldenv and xchg clc and (bad) cmp out repz cmp sbb dec stos pop mov mov push jns or inc pusha stos outsl shld gs pusha pop push (bad) adc inc add pop (bad) das push dec sbb sahf mov adc mov pop das jle mov clc cld iret ss mov push cmp mov add in gs fs pop dec add nop pop sub and and rcl mov adc bound pop or fnstsw mov call add mov xchg push xor out rcrl ja add sbbl (bad) dec jo scas dec retw loop inc leave jae stc test std rcll xor shrb xchg movsl dec js outsb cmp push loopne leave jne jbe and clc mov mov rcl lods jb or sub mov test cli in mov mov push add pop jg stos icebp mov push fs in add xchg sub mov scas mov and int mov pop or mov test lret cmc outsl data16 push push pop in cmp push push in dec lret outsl push fist roll pop in movl push pop bound cwtl mov ds dec mov pop push mov fdivl test (bad) pop fwait push adc popa cmp ror adc mov mov movsl push add pop rorl enter adc and add jl sbb cmp loope in rolb (bad) jo jle mov dec call jb notl cwtl adc (bad) mov mov fwait mov lods clc sub inc jg push sahf mov fs mov add cmp cwtl popa lret inc xchg mov pop lds xchg mov push test xchg mov jle jo stos xor jo mov jge cmova iret adc lock std adc adcb fcmovnbe xchg sub cmp xor push sub xchg lods ljmp insb push inc loope in mov cmp xor jns and pop fwait jl les (bad) repnz (bad) adc imul pop pop das dec or jns scas add in push scas sub dec and or fiaddl mov out lret pop jmp fiadd movzbl ds lds add stos test test mov or (bad) sbb adc xchg push xchg sub and and into mov in cmp adc icebp and loopne or xchg cli cmpl cmpsb dec mov ds mov xchg ret (bad) sbb mov adc enter mov push inc addr16 fwait stos int pop sub xchg ret es mov in sbb sbb cld push notl pop jnp stos mov out mov mov pop int sub int add in jno or popa mov lds leave jb daa and pop inc mov sub xchg inc xor mov inc rorl outsl aad cmpsb leave dec sub sub mov sbb lret sti jne stc dec adc std test cmp bound mov (bad) outsl inc cmpl aad les rorl pop xchg or push (bad) (bad) jp or sbbl or (bad) out fsubl cmp pop sub mov sahf clc mov mov mov jbe sti jp inc mov clc mov je xchg (bad) cmp xchg adc daa cmc adc xchg aad fistl outsl adc lret adcb decb adc xor es ret adc out mov test push daa adc pop add sub mov clc pop rcll daa sbbl sbb mov jg mov adc jns cmp adc cmp cmp jbe movsb sahf ja pop mov (bad) lock adc in xor lahf hlt mov jle push jle or xlat pop cmp test pop mov fmul aaa stos (bad) dec xor subb mov cmp pop add cmp test repz mov adcl cmp mov adc outsb and and mov addr16 cmpsl imul push pop dec (bad) mov mov or add push negl cmp or fcoms dec test xchg sahf rclb cli mov sbb sti push jmp popf lea (bad) sahf push pop jae sub xor inc daa fucompp (bad) popf jmp mov pushf ret sbb pop pop push js cli cmc mov add sub sbb fsubrs xchg lcall xor dec out dec les (bad) adc adc inc pop ja (bad) stos mov mov into imul xchg cmp js pusha ljmp add out pop jmp sbb and cmpsb mov xchg pop scas dec daa or lret jne pop lods xchg jnp sbb push xor int3 cwtl and adc or lahf cmpsb pop mov mov sbb stos pop and xchg lods xor push (bad) inc js test pop pop pusha mov lahf mov das dec fcmovb cmp add inc mov in push aaa (bad) mov mov pop mov jns sbb inc aam ss xchg adc ss xchg push fnstenv popa sti subl and xchg cltd cmp lret jecxz xor sub adc mov sub dec idivb jo pusha (bad) mov js loope or jbe mov icebp mov pusha aas in popw inc pop sbb inc test test outsb inc es xchg popf mov scas mov xor (bad) push push out rcll xchg out or mov dec sub and or fildl fdiv stc add mov movhps ror sbb inc repz adc inc test mov popf std push mov pusha jnp jge dec pop xchg inc arpl mov nop mov sbb js,pn fnclex scas out jo cmp sbb mov loop imul push loop add push aas dec jbe mov pop leave push test test enter pop mov inc push jae test dec ret sbb outsb mov or push dec add pushf out lahf xor inc push jg ss jo mov dec loop mov cmp mov fldl je (bad) mov cmp jmp ljmp xchg test fnstcw pop hlt lcall sbb mov inc fwait dec cs inc stos jno fildll pop cs inc rcll mov push inc pop in mov dec xchg sub mov sbb mov mov iret xlat ret inc pop mov mov or adc test sub movl xchg and push frstor lcall cmpsb leave sub and sbb adc pop ds sbb push mov jbe jle push and pusha (bad) dec xor pop lods adc dec daa xor mov sbb mov (bad) xchg lods sub leave in jno enter sbb icebp loope gs arpl (bad) bound xchg imul nop jecxz push add lcall sbb pop decb push bound idivb xchg imul les sub pop mov aad test imul loope xchg xlat ljmp mov (bad) loopne lcall popa cli inc cwtl rorl cmp ror sub dec pop std cmpl jg pushf repz in (bad) pop mov (bad) or push mov test addr16 xchg mov in jmp mov dec aaa aaa xchg je mov test mov outsl lock push lock mov xchg or cmpsl insb sbb mov add into out inc pop jnp data16 mov pop lret adc aas int mov ds popa sbb dec push mov jbe add shrb cmpsb cli add mov fisubrl pop inc push aas xor test sbb add and leave jnp pushf add adc clc push sti lds stos sbb fcomps push mov arpl and shrl enter push xchg sub jae ret clc lods insb xchg loope in push push add mov dec cmp lods xchg pop fbstp pop inc push mov test cmp scas dec dec sbb jne popf arpl jae cli jae mov lods shlb mov mov hlt and idivb jg cmp pop js xor inc cld xor decb or inc sub out cltd call add inc adc test dec in orb mov (bad) xor js jne cmp les loope jl adc (bad) leave and in sub (bad) out es xchg in hlt ret sub xchg sti aam mov adc inc push xchg pusha sbb mov test es add add js test jmp shll insl lock xchg adc jnp mov ffree sub mov out pop xchg or and and pop cmp sti cmp rclb shlb repnz rcll int xchg jmp or test dec inc and pop xchg sub jmp dec push lods jno xchg mov loope xchg or push ja dec mov cmc sub pop (bad) jne cli xchg ja add inc imul pop inc jbe cld or mov dec nop jae jle push shlb mov call mov cmpsb int3 test out (bad) dec jnp cs cmp jg test adc into into mov jmp sbb stos mov inc sbb mov sbb fs stc push pop push je ret and and test out jl lock mov (bad) sbb insl out icebp ret adc ror ss push shlb adc jp (bad) lret push add dec outsl imulb mov shll mov adc push sbb sbb push and test std add out in lar imul cld fldl mov movsb and int3 jp sub push jne jl fucomi add addb dec jg pop (bad) pusha add or shld sub aaa xchg mov add popa fild mov dec mov inc xchg roll (bad) clc xchg cli (bad) adc bnd test cmp xchg push mov int3 ror int3 or add std pop adc (bad) (bad) repz lret mov lods lret xchg sbb daa movsl movb sbb inc xchg (bad) sbb scas mov nop jle fisttpll lock and sub mov xchg sub ss push push cld dec xchg xchg rorl sbb push mov jb,pt ret xchg jne mov or or pop fcomp dec insl pop dec and aad cmp repz pop mov mov sti dec sub push cmp xchg add push out cmpsb (bad) and test ja pop jecxz les (bad) cmp push lds adc jecxz test (bad) jne cmp push loop jns ljmp mov stos cmp sbb shrb push push test int inc cmp inc js mov jp xchg loopne adc sti out adc cld sub mov xor repnz add add sbb or repnz push xor ljmp mov les insb addl outsl sti xor adc and imull jecxz cs add repz mov and xor adc lods fmuls dec mov xchg (bad) jmp mov insb xchg nop scas pop jl mov sti xor sbb scas leave lock xor jne int mov add imul ljmp (bad) (bad) xor inc add mov popa push es loope negb addr16 jl mov cmp adc sbb sub mov sbb enter jb setp xchg mov stc ficomp popf pop repz outsb sbb mov mov (bad) sub decl or xchg lret (bad) (bad) (bad) dec sbb xor inc inc push test rcrl mov loopne aad inc jecxz daa sub xchg cltd test rol bound mov fxam repz or adc add add sub mov std adc fwait sti andb xchg xchg xor lahf mov leave xor mov add dec fiaddl xchg dec lcall add fadds add jne test (bad) ljmp mov mov mov mov push pusha out inc jg adc out xor cli dec in dec aas loop hlt mov aas aaa cmpsl int3 adc xchg xor repz lcall syscall sti cmpsl inc adc cmp dec jb mov es mov jae pcmpgtw mov addr16 dec adc sub jge nop inc dec jp sub jl dec pop jle push sbb dec pop aaa pop jp sbb fwait aad adc xchg pop call xchg sbb cmp in test out add decl adc jae imul sbb and sub ja lock or test test xor int mov cwtl fsubs bound pusha dec push jbe inc out pop push and xor sub scas sbb jns and mov mov inc sbbl mov mov cmp inc inc outsl mov scas insb sbb add inc ss sub sub into je inc push fdivrs or jno mov daa cmpsl mov push xchg loope fwait movsb xor lea out and push mov inc (bad) pop fnstsw mov (bad) (bad) shlb jbe shrb cltd imul xor inc cmc outsl aam into scas jbe mov out inc iret test outsb insb xor sbb adc adc loope iret insb addr16 ror out add sbb mov (bad) push gs or (bad) aam xchg call pop and in pop insl mov cli (bad) and loopne or mov jmp mov pop pop fwait in mov mov add push fcomip dec cmp push lret add and xor mov adc (bad) push aam add dec scas dec add ss mov in or mov xor test in addr16 inc int3 scas adc nop inc lret ss mov mov iret jmp in sub mov sahf movsb fucom inc pop mov push bnd sbb mov (bad) stos jg push (bad) sbb fbstp in ja adc jg inc imul push dec mov lock adc push pop lret jns cld clc hlt sub jbe or add (bad) mov loop sbb imul addr16 repz add mov aad add inc pop leave and xchg push mov xchg aaa pop or test or and outsb fidiv jge mov and popf push adc xchg jg fsub out sub adc ja mov add push into sub pop imul hlt mov fisttpll cs sbb xchg inc push xchg scas popa aam sarb incl inc push icebp ficompl or cmp shll cltd js fnstenv pop push lcall dec mov adc lods add xor jmp cli push jbe push pop int movsl pop mov hlt mov jb cmpsb adcb mov out dec cs mov movsb movl jge test loopne jg rorl (bad) arpl mov xor int adc or shlb insb mov push adc fstp loope (bad) int cmpsl (bad) in fnsave loop (bad) jbe lret ja ljmp xor cld bound xchg dec leave pushf jnp mov pop push add jge outsb xchg jmp mov hlt push imulb movsb mov stos (bad) fucomip dec clc add add or cld cmp push fcom mov pavgw insl inc xor scas sbb sub push jmp and mov adc imull sbb pop test pop sub arpl pushf xchg push fsub mov inc dec adc dec movsl dec in xor sbb jbe aam fistl ret and lods pushl pop stos pop sbb aas cmpsl stos fildll js xchg xchg lahf dec movsl lret pop or and cwtl pop cmp punpckhbw mov adc push lods cmp mov push jp dec xchg insb pop hlt ds push je dec add push mov loopne (bad) pop test mov or mov xor xchg push (bad) sbb cs and inc xchg mov sbb mov jae pop pop ljmp dec mov repnz dec jle out inc jns push sahf sbb xchg loope pop loopne xor aam loopne xchg dec push mov stos movsb fidivrl (bad) push jp test repz xchg iret (bad) cmc jo icebp and lods je fimull rcrl push arpl push in mov cwtl jg (bad) mov xchg je or lret jecxz fs sbb dec jns sbb jg push sbb pop mov (bad) add daa push shlb push pop xor mov xor ret jne inc lds mov movb dec bnd inc std jne fbld dec scas stos jp (bad) cltd sub lahf out mov stos hlt sbb bound aad cmp cli mov sbb lods push push mov mov iret int test out dec adc and les inc sub or sti daa loopne pop or test nop and ljmp imul cmp das jns mov push das lcall (bad) jmp sub (bad) jo xchg mov out mov xor and outsb lock pop or lahf sub xor ljmp mov pushf inc dec pop cmc out scas xchg (bad) fist ret mov aam daa pop mov mov fwait int popf (bad) mov jg loope rclb inc push imul fisub dec mov pusha bound xor cmp pop pop iret ss push addr16 enter nop push or inc inc xor sbbb inc mull (bad) mov fwait push jmp lahf fisub sbb push movsb mov aam pop das fldenv in in pushw mov push mov mov inc jbe lock mov outsb movsl cld and mov mov cmc inc vpsubb pop cmp xor pushf lea add jg add or cmp mov xchg mov cmp lods jp push and mov dec xchg hlt (bad) or pop ja (bad) aad arpl pop iret push sbb int mov ljmp mov (bad) xchg repnz stos xchg inc mov jb xchg mov or test mov sbb ret popf mov lret sarl pop mov (bad) sbb xor sbbl adc pop cmp mov (bad) push andl pushf repz test pop iret divl and int push fcompl xchg dec jo daa lods lcall fcmovnbe int fsubl and lret jns mov mov in push lea and jg or fistl movsb add insb or repz add push sub push jb inc sub xor mov insl into out jle dec shrl sbb data16 dec aam stc pushf mov (bad) out test mov mov inc sarl (bad) and mov sbbl xchg cltd popf test popf ljmp int leave xor mov ss push push jl mov scas push fsubrs inc mov cmp mov in xchg aad aad gs push mov call sub (bad) mov fisttpll jo pop mov fwait xchg xchg push push xchg sub (bad) (bad) mov adc add ds daa out adc jge jmp pop mov sub mov in xchg popf mov dec fisub push or sub push xchg jp hlt and mov mov gs sub test sti cmc push lods addl in daa (bad) int3 add xorl mov scas mov pop mov xchg sti adc fs vmwrite rolb adc mov sahf fs pop jp stos mov sti cmp mov mov xor je in xchg sub dec hlt (bad) lret arpl jo cmp repnz outsb (bad) outsb mov hlt pop into xchg mov shl enter and xchg xchg stc test mov pop imul call int3 sbb inc rorb pop test jae andl out sahf or mov in (bad) ja and lock es jle mov nop int xchg cltd push (bad) jo (bad) shll cmc adc mov or insb dec call jge loop movl xorl nop test push dec dec sti push mov imul xor and or cs icebp cmc adc mov push jmp fstl in call adc out ds movsl dec loopne (bad) repz cmp pop mov sub movups or mov cmpl inc dec cmp mov subl test dec std pushf nop test leave xchg cwtl notb sti (bad) dec xlat add sbb test mov mov int in bound sub inc lcall les jp and and stos mov dec sqrtps lret sbb aam lods scas int sub repnz popa lods adc add cmp or fildl fxch xchg xchg pushf jne pop (bad) sbb push shlb mov mov les jae jp push sahf (bad) push and call call mov test add imul dec fscale pop mov stos sub pop xchg jg adc adc in fidivrl sbb sarl mov (bad) popa dec mov ficoml mov and cmpsb cmpsb fldenv (bad) push ja xor clc outsl insb lret xor movsl push out movzwl jle pop loopne into pop lret clc cmc xor sub rolb cmpsb pop mov je inc lahf jle pop imul dec fnsave xchg push leave test jl scas sbb fimull inc or (bad) daa jg enter pop xchg pop mov rcrb xchg pop in and ja xchg mov sti in stos add cmp mov fidiv (bad) loope fdivl add daa out cmpsl (bad) repnz pusha adc sbb std pop mov out stos dec and xorb fiaddl mov ss jg icebp inc pop lret and lods iret lret add insb out sub or lret outsl arpl stos cs in add sub les loopne pop dec imul adc jg hlt insb sbb xor fs bound insb pop enter das pop xlat pop daa xchg xchg and and icebp popf jbe aam popa mov outsb adc fild test test push mov fcmovne clc (bad) arpl nop jle int xchg stc push jl in xchg push mov lahf pushf loope cmp cmp jno pop push loope push sub inc aad ljmp das inc mov xchg faddl aam cs fcoms mov lret add add mov out lret movsb dec in dec (bad) out imul (bad) sbb jge iret dec xlat xor push pop cs fs cmpsl test aam outsl inc and (bad) cmp fist cltd mov sti xor mov sbb rcrb or and jmp xchg int ja push pushf in stos cmpl pop stos cmpsb or or inc repnz js lds adc mov dec fisttp int3 test push jecxz push mov and mov and cmpsl je ret jmp mov inc int3 shrb jae out sahf call pop jl lret hlt inc hlt inc jmp jge pop xchg xor mov fs mov loop imul inc pop inc iret loopne cmp cmp into mov add push lea popa aad les cld loopne ds cwtl sbb fidivrl fnstsw cmc negl out idiv loope add sbb or inc cmp or leave and adc lds sub xorb cmp sbb xor movsl mov cli xor (bad) testl or ss mov jne sahf and adc xchg repz inc fiadd test mov dec nop jle repz cmc dec and push sbb in jo sbb inc sub dec inc daa cwtl lea repnz pop jecxz,pt mov inc mov lds mov mov lods jp jbe xor mov push mov dec loop push cltd push test popf cs daa jo mov sbb xor sub movsl int3 mov mov (bad) push faddp cmpsl rclb mov negb cmp xchg jne pop jno leave mov xor mov mov add lods outsb dec inc xor out jle call dec test mov mul xchg lahf pop push sbb sub cmp jmp mov fwait repz rorl flds dec xchg mov in fs aas and mov clc mov test dec jmp or into ret sti push mov jne cmp pushf jmp pop rol ds sbb lret inc sbb fcmove push (bad) jmp inc push or adc xchg inc mov xor fcoml addr16 push pop aad pop push mov push jb mov scas addr16 lahf js or (bad) pop adc xchg out imul lahf mov inc jge enter test pushf cmp test movsl out mov aam sbb cmp ds addl ss and mov and fist ljmp cld lods lcall pop movsl push push pop in and and out push (bad) test adc jo lea ffree dec and inc adc into sbb sub sti imul cwtl loope pop lcall test pushf movsb push loop xchg xor and xchg mov inc jge mov fcmove push or andl nop daa push mov add pop roll ljmp call daa mov in cmp pop aad fbstp mov pop clc sbb dec cmp rcrl fisubr icebp sbb sbb nop addb sbb sbb outsb mov stos (bad) mov lea mov xor mov ljmp push rcrl int3 insl out dec fdivr adc stos inc (bad) aas xchg or jmp or mov fadd enter inc aad fadds fistpll loop clc sub mov out inc sbb cli scas jl mov data16 loop jmp push xchg imul jb dec cmpsl sbb sbb (bad) mov push and cmpsb cs cmp xlat movsl xor mov dec cs rcl ss dec jns jae (bad) mov in xchg inc insl ljmp in fsts adc decb mov xchg arpl out ds mov add pop mov orb clc and cmp push inc fisubr div je pop jns lea (bad) int and or add lods mov movsb (bad) notl fisubrl mov mov mov cmp or mov inc clc daa arpl rcll mov fldl jae outsl or dec cwtl arpl outsl xchg mov cltd inc fs pop andb repz sbb jno xchg xor push movsb gs inc xchg (bad) cld pop mov pop nop fcoms pop sbb (bad) test (bad) sti clc push or nop dec out rcll mov movups pushl and insb pop lret xchg adc pop mov ljmp arpl test (bad) mov movsl popa les lea call and out push sbb popf pop jge das push out ja cmc and in mov inc imul sbb inc repz aad sarb shrl mov les sbb std popa xchg cmpsl mov enter clc loope or or sarb pop fwait jbe out xchg ret es adc lods out cmp idiv xor mov fisubrl fisub daa adc adc pop bound movsl test sbb mov test stos push mov pop jp dec cs bound pop mov rclb inc sahf lock (bad) add jb mov out cmp fildll adc push leave add and jmp mov pop add data16 adc dec lods sub inc jne mov push das inc xor sbb in pop jns mov adcb lret in jmp mov loopne or loop sbb lret cwtl inc xor dec cmp cs imul es andb cmpsb cld mov sbb pushf pop loope and dec xor push jo out mov mov adc sub data16 gs movsl inc sbb inc popa dec push je push adc in dec xlat repz inc dec loope bound rcr sub jge aad xor mov pop dec mov fsts jnp pop cli add test mul clc xchg mov push mov gs add addr16 in cmp sbb lods push push stc cs adc push ss enter (bad) jg,pn push adc sub loope pop lret (bad) fistl inc jmp nop push mov imul outsb dec pop aas test mov pushf and dec lea dec outsb test movsl push (bad) fsts dec inc fldt repz dec mov cs push pusha cltd loope inc adc imul mov adc mov insl das adc add mov and xchg push std or cli loop mov cmpsl mov and ja mov test push xchg divb inc pop lret sub sbb xchg roll loop nop movsl xchg popa sub dec aad and and dec sahf xchg or jg je outsb adc imul cmp stos cmp jle pop rcll pop mov (bad) int3 xor xchg adc ret lods test xchg insb pop add scas sbb xchg or mov sub sbb (bad) in js ret mov subb sub lea sbb pop out insb xor popa mov sarb and ds cmp pop loope mov cmp xchg adc or push rcll bound sbb pop sbb cmpsl or push mov inc mov pop dec dec mov mov jns ds loop push pop scas cmp jne negb cmc lods mov aas xchg dec or mov mov jecxz lea inc cmpsb dec xchg das in aas pushl lret push stos das push es dec and test and add gs adc add aaa decb xor xchg push mov fcom movsl (bad) lock neg adc out aas push leave or les ja sbb mov out mov push addr16 or std adc cmp mov jbe jmp gs or test test sbb scas imull or jb adc dec jl aaa mov movsl pop mov repnz lret xor out inc xor sbb xor lock mov xchg mov addr16 xchg (bad) mov pop push fstpt sbb outsl pushf loop add mov into jle inc jle push xor daa mov or xchg popa adc push stos adc dec and lods dec pop xlat movsl aad push inc pop notl inc or scas pop test push sbb inc or cmp sahf repz out or cld loopne mov cmc lret sarb push xchg lret cwtl shl call lock cs jno lock aam adc and int3 movd push lock lahf inc (bad) adc mov inc mov push mov popf xor loopne inc das sub fldz sbbl in mov gs sub roll jmp dec pop pusha (bad) cmp adc pusha dec rorb std adc int3 pop or aam in and adc mov mov xor fistl push mov cmp test and scas lods push stos cs pop or dec pop (bad) scas jle push nop or cmc (bad) xor shrl or icebp rcrb jecxz xor mov aas mov mov inc mov ficompl int jg adc jbe data16 pusha cld adc stc push mov fwait in dec loope outsl addr16 insb out adc dec mov pop repz int3 loopne add dec out and pop jg (bad) or push out push out test jecxz cwtl inc inc xor in or xchg aad scas call lcall dec lds or adc fst pop das js cmpl fs ss fldt inc mov push aas sbbb (bad) pusha mov faddl push jmp cmp add add mov push test iret jmp gs hlt sub lds cmp aad xor mov (bad) int3 jae push clc sbb push outsb (bad) xor addr16 insb stos push cmpsb outsl call in aad movsl daa mov ret jno jbe xor and in jo and in mov flds add les jecxz stc dec dec add and mov das and shrl mov scas push dec push jmp aaa rorl jl clc ljmp sub movntq cmp fistpl lret aad push cld sbb jge cmc (bad) sub pop fstpt adc push aam mov jo aaa mov int3 dec pop insl jmp add mov mov mov in adc cli add jg ret sbb mov xlat sti jbe push inc stc dec icebp or push pop jmp dec xchg bound sbb cmpsb cmp cmp icebp cmp cmp mov sbb add or mov stos xchg pop addl out push xor aam ja lea add sbb cltd inc mov jbe mov pop (bad) repz pop enter adc add and jnp imul lock aad fnstenv mov arpl test into lahf int ss fidivr dec sahf mov adc add sbb mov lret fsubrl lock mov sub sbb enter xchg (bad) sbb push rol xchg mov enter gs inc stc add adc loop mov lods add push mov mov mov hlt mul mov adc xlat push dec add sar (bad) cmp dec int push push cmp scas mov xchg aad xchg inc inc pop lret ds cmp lds cli scas fbld push pop lods adc push push mov pop hlt fiadd out cld cmp fsubl sbb (bad) xchg push pop xor push movsl mov ret scas sub test push xchg mov out sbb pop dec cmpsb (bad) shlb clc cld sub fisubrl fildll loopne lret mov fs and test in jmp adc jmp sub adc sbb mov andl xor insl popf inc cltd std xchg mov call pop jge stos je mov cs adc mov jo dec fidiv das xchg int ja scas xchg js xlat push sarb std (bad) mov repz dec and sahf movsl sub shll or xchg adc mov dec shll scas xlat subl adc xor add and and clc ljmp fmuls in int3 inc sub push int3 dec std ja mov xor int pop das scas movsl rcll mov cmpsb add jo pop lea push out (bad) adc cmpsl insl lock pushf repnz xlat push mov mov movsl lret (bad) mov cmp sub cmc out dec insl ret jns mov bound rcr std and loopne adc and clc xchg in cmp repz adc gs push outsl into push xchg jecxz mov (bad) int3 lods mov dec pop mov push cs andb outsl (bad) sub (bad) lret mov jmp fmul mov ljmp shlb sbb mov out sub jne sbb xor addr16 aam cmp pop ja dec cld aas addl cmp pop clc enter cmpsb call jl inc cmp idivb cmp shrl pop xchg jecxz jecxz jle sub dec lahf arpl dec into lahf out je cmpb push adc js mov pop and adc add imul adc cmp es outsl mov test insb mov mov pop cwtl or and loop xor jp xor dec xacquire cmp and cltd lods cltd push push cmp pusha aam inc or inc cmc push lea pop popa lock mov jp push jae cltd bound mov shrl fldcw mov pop pop sbb movsl or imulb js std scas or and lock sbb push cmp or jo adc push push dec pushf and fbstp repz pop mov fs xchg leave out out mov and cmp cmpsb iret data16 inc xchg loop cmp xor iret jmp pop dec xchg cmc call ror sarb movsb mov movsl mov jo xor push aad sub lret sbb movups mov cwtl mov inc xor (bad) fstpl shlb or push in cmp adc mov fwait outsb cmp dec fistl and sub cmp xor and (bad) jp mov aas lahf (bad) push cmp sbb fistp push movsl in inc lods push pusha (bad) and cmc adc call adc je dec or inc cmp mov lods imul dec out outsl pop outsb or mov lock sbb or out lea pop mov popa lea mov xor ljmp ret std mov sbb mov xor push (bad) (bad) std jmp mov xchg sbb jmp je movsl movsb idivb test ljmp in or hlt orl or mov enter repz pop inc jne sbb test std addr16 and add or xor dec xchg xor pop sbb xor and imul cli sbb scas push xlat rclb mov mov push imulb pop dec fsub inc lds jo rorb dec push loop popa cmp add (bad) stos xor lock imul fwait test cmp stos int3 xchg out arpl fldenv popa shrb jl pusha add cli mov mov sarb inc push cmpb popl sbb mov mov aad mov ja fistpll push adc mov push iret nop and pop notb lea push cmp jmp cld pop ljmp xchg mov loop sbb inc sahf bound out scas pop and push xchg inc or cmp push sub xchg cmc int3 std cmpsl and std repz (bad) push pushf xorl enter icebp sub mov lea cmp mov mov test scas movsb ret inc or pop int3 mov test stos lea push mov aad pop mov scas and mov lahf adc in xchg pop or sub enter cli ret xorl pop movsb test sub jo cwtl adc xor sbb cwtl (bad) (bad) cmp scas and mov mov test enter aas (bad) pusha movsb cmp push jo popf jl in xor dec into sbbl inc cmc insl mov push pop mov in ss loopne adcl pop mov ss lret pop lret dec jg inc stc lods mov push das jle (bad) pop cmpsb jmp mov jo xchg bound rcrb push loop jne jo push pop mov jmp sbb jne jb aam ret int3 push (bad) add stc insl cltd inc jne sbb (bad) inc cmp roll mov xor sti or cwtl movsl push movl dec or or das addr16 loop (bad) ljmp jl cmp pop mov scas iret aas ljmp test cmp stos int fsubrs sub pusha sub dec shll leave leavew lcall aam das push pop mov xchg push lret dec cld jg mov jmp (bad) fildl out inc pop sbb enter xor mov sti in adcl ja notl (bad) mov imulb or pop std (bad) shlb aad add push clc xor pop add sub fnstenv xchg out cmpsl fsubrs stc push call jns repz lea fbstp insb sub lods stos mov adc (bad) ljmp push cmpsl test ljmp fcomps add lea adc cmpsl dec jecxz sahf pop jb add mov dec push or pop adc mov mov cmpsl jge fsubrl in mov rclb add cmp movsl push cmpsb cmp test les lcall (bad) repnz and adc cwtl arpl lock scas pop cmpsl imul jo data16 jg push mov cmp popf push xlat mov dec cli ds sub xor test mov lret xchg mov mov cmp push (bad) icebp mov movsb adc mov mov lcall dec cmp popa iret push fisubrl pop shlb addr16 xor inc ja subl dec mov or xchg loop pop jmp xchg add loope adc mov fiaddl xor cmp enter sahf push add xchg sub mov in cmp (bad) in xlat sarl das stos sarb data16 xchg cltd out rcll repnz call nop push cmpsl jb mov mov pop sbb jne sahf sbb push scas lods sti cmpb outsb icebp jnp popa addl pop jo pusha aaa dec add fdivl ficomp sti xor out loope jl pop or dec inc (bad) jns xor repz mov or (bad) jecxz or jae mov sub lds xchg and dec cmp and repnz pop mov adc xchg pop mov loop fbstp push stos sub cmp mov xchg rorl jne and jmp dec test call int sub push ljmp push sbb int dec sub test or mov loopne xchg xor in fisubrl mov jb inc (bad) mov js sub sub fisttpl cmp add sub adc sbb or into xchg or inc in xor stc je hlt lcall mov cld jne call mov mov lock outsl into repnz lcall setge push sbbl and adc pop or add faddl push sbb dec jo jle adc add pushf jo jp jecxz lods push cs outsl (bad) ja xchg pop mov movsb inc xchg fcomps lahf inc add and sub pop mov adc (bad) mov cld inc addr16 cmp add clc cmp mov in popf testb push out scas jno mov cmp and mov dec sbb xchg add xor lret mov pop push fcmovne adc mov fcmovnbe xchg shlb cmpsb (bad) addr16 push addr16 xchg dec xchg add jmp adc or ficompl mov scas aas inc xor stos cmp out test push gs xchg pop pop push fidivrl fwait pop fsubs pop or outsb movsl jae (bad) pop mov enter sub fisub lahf mov aas push jecxz sarl insb js xchg lret out inc and gs hlt repnz ljmp call and popf add loope call dec cmp movsl xor push jnp sub cld ds mov xor adc jmp xchg pop data16 add xchg out mov lret enter mov (bad) aaa inc push ficomp adc push pop or adc add mov int iret dec pop fwait popf shrb daa jne mov xor mov fldcw cmp and mov andl popl mov int3 push pop inc xchg hlt push push lret mov xor cld or es mov imul repz out loop cmp push xchg adc xchg mov or xchg xchg aas divb mov mov lret movsl fs xor arpl cmpsb dec lea mov out and push push syscall adc xchg pushf movsl inc ret xchg mov xlat mov mov mov xchg and dec adc leave dec clc push push fsub mov cwtl popf iret sbb inc inc hlt mov xorl cmp or mov fwait cmc lcall adcl je sbb push add lds push xchg loop xor xchg mov popa mov lea ret sbb stos fcompp xor adc jnp fsubs fisubr cld pop mov mov daa test inc xor ds ljmp repnz aas push sbb sub (bad) mov and aam fnop clc jbe fdivl fidivr cli rcrb cmpsb sbb lahf xchg loopne inc sub (bad) mov mov pop ret xlat shlb jl adc mov (bad) pushf add push sarb xor scas rcrb dec loopne mov dec push ljmp jle pop int3 pop aad xor xchg dec scas rcrl jg jp mov push add mov loope ds sbb fiaddl cli pop sbb lds jge dec inc mov mov dec ud2 pop cmpsl mov push push mov adc sbb in dec dec lds xchg rcll add mov or adc mov jnp je push (bad) lret ds out pop xchg sarl cmovne ljmp pop leave xchg stos cmc push push lahf stos das xchg cmp jo cli xchg jmp dec popf xlat cmp pcmpeqw test mov pop nop cld scas mov rcrb nop testb cmc mov add add cli dec and pop lret pusha dec lret pop outsb das hlt adc jb sub mov pop pop pop stc cltd dec mov out mov xchg mov out shr inc fidivl into push jbe dec xchg (bad) or xchg mov push pop push sbb and popa repz icebp popa aas aas in pop mov lock xlat scas or inc dec sub les jo imul scas fisubl (bad) (bad) or push sarb cmp ret jae (bad) ret insl (bad) xor or mov out mov xor cltd jecxz call loop push inc xchg and int3 cltd (bad) nop nop test daa pop lahf insl mov mov jnp push cs addr16 cmc imul jae sbb int3 test sbbl mov mov out vpextrw lds mov mov (bad) pop stos stos inc fwait xlat jge stos and das int3 mov xchg out cmp dec or push lahf sbb out add pop lods cld push mov int3 jo sbb xor jl call mov pushf mov sti jnp xor out rcrl repnz imul test fiadd inc mov int3 out (bad) inc push add sbb push xchg test int3 jo call popf add add inc dec push cmovb cmpsl stc mov sahf enter addr16 pushf aam nop inc mov call gs xor stos xor jbe arpl mov mov add cltd dec inc aaa das out push ret cmpsl sbb in in dec popa call fs xchg push popa push int3 jne cmpsl sbb dec repnz mov mov dec xchg dec push sbb sbb stos (bad) sbb jno arpl mov rolb shll inc fs mov dec pop push cltd xor adcb mov pop ljmp sbb fild repz or cmpsb int cwtl (bad) adc inc cwtl sbb lods sahf fdivl or add and xchg sub cmp or jmp sahf insb scas cmpsb mov std xorl dec stc xor (bad) mov push sbb adc mov xor xchg mov (bad) clc cmpsb lret add in xlat add inc (bad) lods addr16 pop push jle xchg jbe xor xor adc sbb inc mulb cmpsl jge xchg icebp push jecxz inc push enter xor dec loop dec pop insb sbb pop jl and mov js jl mov cvttps2pi jb faddl cmpsl ja fucomp adc adc ds (bad) repnz jmp xchg mov pushf mov push enter mov xchg add cmp adc mov push call movsl cmpsl and ret test mov out std scas or push dec lret lods xor ret sbb or bswap jbe push loopne add lahf cmc mov (bad) lock in inc adc cmp f2xm1 cmp push add sub cmp and xchg scas adcl test add loope idivl jb das lods int3 cmp cmp push into es arpl stos shlb pushf outsl popf inc mov adc or sub or xor adcb or dec xchg das push scas in mov out cli in aaa pop fiaddl mov (bad) mov divl jne or mov rcr push xor adc xchg scas xor lcall adc xlat cmpsl mov xchg xor fistp outsb sbb loopne icebp inc cs xlat fdivrs xchg in (bad) out or addr16 inc sbb movsl push aam rcl outsl jb push movb mov push add mov rclb das or inc imul sbbl out xchg lret (bad) mov and (bad) pop mov adc (bad) xor frstor xlat mull pop test shl pop fidivl xchg jb mov addr16 hlt test (bad) out dec cmp push (bad) xchg enter pop pop push sti push test push jbe sbb fnstsw mov pop test sbbl inc lods fcomi rcll leave push push js cld jg imul rep clc cwtl pop adc push push fisubr jecxz (bad) sahf cmpsl mov lret xor (bad) idivl test (bad) lds push (bad) jge nop push aam cmpsl add js sub fisttpl or add cs mov bound out stos push pop ja push mov mov nop lret mov outsb inc orb nop xor adc daa xchg insl jne sbb push pop push and dec or int3 addr16 aad or push cmp loope in push mov in scas es inc bound adc das pop pop ret and adcl movl jbe popa sbb ljmp jg sbb popf test ljmp inc sti pop je cmpsl ss out scas adc dec jp aaa adc negb out xchg lock add pop sahf xchg dec and xor xchg dec insb in inc repnz cmp mov pop rcll push pfrcpit2 cmpsb stos je movsb leave in add inc scas push inc mov and cmpsl shr adc dec adc mov (bad) jb pop es or jno fs movsl mov mov and ljmp test and rorb mov scas or ret sub mov cmc sub mov pop ja movsb imul shrb add pop fdivs fwait stos push lea scas lahf sti pop pop xchg xchg jecxz enter (bad) fdivp cmp pop mov push sbb rcrl mov andb add bound mov xchg xchg ficompl xchg xchg imul dec lock pop mov cwtl sbb xchg mov sbb mov fstl xor pop push ret test dec stos jl cs sbb inc add fs (bad) xlat in xor lahf imulb ss dec mov dec outsl (bad) fdivrp jecxz ja jl jo lds lods jge js add ss incl pop and push inc stos pop pop and push push data16 push jge mov or or pop ror xor dec mov scas push sbb fbstp jno add insl lret jecxz cwtl pusha fildll mull bnd pop fcoml lret (bad) rcl rcrl mov bound mov mov adc sbb scas outsl cmp sub loop jbe mov mov pop add repnz (bad) jne insb cmpsl pop xchg xchg cld pop imul add add je mov shlb ret aad push mov cmp cmp int daa idivl stc loop mov jne and lcall fistpll mov xchg push test dec jne sub adc xor pushl mov cmc stc popa pop es es cmpsb xchg ja xchg sti fidiv sub xor cmpsl pop and inc sarl mov dec into sub push notl jnp cmpsb jle ja addr16 (bad) push adc fnstsw jp cmc int dec and stos mov xchg cwtl pop push mov or into and mov rcll xor fild add sbb popa sub loope gs xchg mov pop xchg xor aam inc ljmp mov inc fwait ret lea mov mov inc inc xor fidivr jne mov jecxz lret pop fcmovbe rep lds push int3 mov pop test jo enter shrl lret sub jns cmc (bad) in mov xchg in into adc and pop mov cli sub inc loop pop lret (bad) enter dec push inc dec adc rcll negb dec mov (bad) imul pop sub test push stos pop pop push aas cmp das cmpsl cltd sbb push stos pop adc loopne and and xor xor lds sub or add (bad) arpl push sti data16 mov mov inc stos mov lods push outsl cmp rolb xor push mov xor shrb lret mov jae hlt inc mov test stc addr16 sbb push mov xchg lcall mov xchg daa ficom in lea aas xchg sbb lret push imul popa insb xor ljmp xlat insb inc jae mov les and jb daa out pop into leave push sbb xor mov pushf subb popa jg push inc push and inc dec push std push lahf mov ret cmc pop cmc daa nop out cmp push (bad) mov pop push mov lds inc outsb outsb int3 arpl insb mov shrb add lahf push dec or adcl pop mov inc cli test push xchg in mov jl fdivs xchg add or jmp into adcl inc inc add mov cmpsb (bad) mov mov sbb ret cmpsl movsl scas jnp mov mov and test cmpsb or sti ret inc rol dec popa icebp cli mov jb hlt js inc enter mov sub push (bad) or dec mov dec jnp fs adc rol pop call xchg nop pmulhw mov lea jno add mov loop je dec (bad) mov aad int3 fimul loope test sbb cs cmp test inc (bad) sbb mov shl add pushf fidiv sbb pop add (bad) idivb repnz and push mov stc sub (bad) ss call mov (bad) nop outsl xor jnp in add scas pop mov daa and in iret in sub das mov pusha popa xor fsubs xchg xlat fldt inc scas icebp pop inc push jb mov ficoml out fistpl sbb push popl fcmovb sahf jne aam sub jne pop rolb lret in bnd and push cmpsl dec sti rorb cmp mov imul xchg ljmp pop xor pop data16 or (bad) lret leave arpl lea hlt (bad) icebp mov xchg mov dec inc mov jle int3 stos insl jmp pusha add or cmp clc pop outsb push arpl jle sub iret cwtl vcmpsd out sahf jb,pn cmp add std popf int3 (bad) je push sbb mov ret ret int3 sub or outsl sbb ds xchg jns insl iret pop mov pop notb imul sub pop jb fbstp pop sbb es (bad) hlt insb adc lods xor mov cmp sti test mov pop push jecxz adc mov or outsb and xchg pushf out lahf or add and cmp adc jae mov push fmuls xor sub loope inc fld mov jb repnz mov dec (bad) jno pop stos mov adcb imul adc call mov dec sub frstor (bad) jge push sbb imul or mov insl dec test stc pop loope ss jno in or add adc or popa xor lds in sub (bad) sarb mov sub clc xchg push and arpl jl outsb pop mov and aaa arpl adc lahf sub test fdiv out ljmp mov ret lock aam lods inc cmc into pushf jl nop mov daa dec sbb mov jg xlat pop jne xchg rol mov test and dec popa mov fdivs xchg pop xlat fs jb int and xor jmp (bad) jne scas loopne sbb imul aam mov call jg fcoms mov pop aaa cmpsb sbbb lods fisttpll xor (bad) jnp add imul mov xchg lcall testl fwait xor sub cmp outsl or imul gs iret cmp call xchg xlat andl das stos sub mov (bad) cmp xchg lods daa adc mov out mov mov (bad) enter ljmp adcb sub ficom js in inc mul or in shll mov cmpsb imul test push out xchg js sbb je (bad) out sti and and xor cmp (bad) insb fidivrl movsl (bad) stos sub fwait cwtl or push cs add fucomi bound sbb test adc int3 mov enter iret mov push sbb scas inc (bad) xchg xor pop xchg pop cmp ja cltd sbb or sub sub jmp xchg xor movsb xchg loopne fs test push sahf leave jb aaa pop outsb insb inc add cmc loopne sahf dec es cmpsl fstpt or push loopne cmp mov adc adc add sbbl push add and and and sahf fsubs imul cmp (bad) pop lds fimul pop push rorl jle mov inc movb push mov insb icebp (bad) gs fxch js mov xchg xchg (bad) push cmp push loop lods bnd pop pushf in fwait xchg push sub imul jnp loope mov add mov sub arpl aas push push jmp cmp les mov fisttpll enter jl mov mov xor inc cmp test mov outsb enter (bad) inc dec mov insl adc jecxz (bad) rep xchg jl pop xor rep ss push mov nop into push xchg add (bad) imul add aad jp cmpsb iret test mov mov mov push mov cltd jge pop adc enter mov into pushf xor push decl movhps xor cmp (bad) fildl into adc mov das in push mov (bad) fstl adc call adc int and neg loope (bad) pop add repz push push insl jns (bad) sub mov adc sbb adc ss stos popa xor es stc test cld xor jae fsubr sub test in xchg pop jecxz (bad) fisub jnp sub sbb ljmp mov jo jmp (bad) leave dec xchg push movsb scas insl push adc pushf fmuls lcall sub aam aam lods adc mov leave call push in inc and xor pop movsl or jle,pt inc add les mov pushf push cmp cmp cmp pop loope ltr lret (bad) jmp pop divl enter lock mov shrb sahf sub push test jno dec lcall shll repnz pop mov stos pcmpeqd out dec sbb (bad) sbb sahf push shll fstpl xor bound xlat xchg mov add aad push inc add ds lods (bad) bnd fdivp jg pop ss cmp mov fisttp mov rcrb cltd sbb cli imul in repz int aaa (bad) pop scas push jl xor mov rcrl add jns sbbl push xor xor shll insl cwtl fsubp xchg lds in push jb lret ret sub ffreep add test xlat sbb ret test imul fistpl subl jnp jne sahf inc mov inc add loop icebp rcl mov in pop mov scas mov mov cmp push pop mov cmpsb jno pop pop add xor mov repnz in outsl pop sbb in mov sub lods cmp addr16 adc es and repnz pop popa push xchg mov mov adc lret mov or jbe movsb movl rol (bad) xchg mov lock mov sub clc mov cwtl mov mov pop fimull xor jbe mov out aaa mov sbb dec dec fmul push (bad) sbb lock stos sub adc or cwtl cmp push fsubs pusha out inc imul movsb loope dec push push pusha (bad) mov lahf pusha pop mov adc pop cmpsl mov addr16 outsb mov das sub rclb mov lahf dec pusha push mov (bad) aaa xchg jecxz addr16 mov ret cs mov and or adc push in je mov in dec xor sbb lret (bad) adc icebp (bad) je mov frstor in popf (bad) jno repz or xlat xlat xchg mov cs fdivrs xchg dec leave mov xor into int cld mov mov pop enter jge and outsb sub fisttp mov jl pop ja xchg enter jo stc pop and jns xchg rolb lds xchg int3 cwtl out repnz mull cmp imul es inc sahf js mov cmpsb sub fs imul adc (bad) pop jl sbb (bad) cs enter mov mov int3 hlt push roll mov scas xchg popf and add cld push lcall push pop push xchg pop xchg lea (bad) fsts ljmp mov int3 aaa or lahf dec loope mov mov pop or push xchg adc cs test idivl and xchg fs pop rolb (bad) (bad) xor dec rol test mov dec and sbb sbbl and daa push or adc xchg mov imul xchg lea pop add mov mov mov adc pop ficom sub jne mov jg les addl pop stc jbe fwait data16 mov mov sub pop jnp or out stc subb scas (bad) cmc mov fdivrl pop int3 fnstenv mov mov insl cmp ds or sbb jecxz les (bad) or mov mov mov ficomp xchg sbb push hlt (bad) dec adc push dec mov jle jae in push inc in adc gs cmp lods cmp mov adc adc jne loope add rcrl ror xchg test mov jb loope aaa popf adc fsubl leave or add sub cmp adc mov mov lods sar pop mov out push xchg push addr16 stos mov push and mov mov sbb push insl xor pop pop xchg adc cmc or sub bound popf xor hlt cli jmp pushf pop mov fldt xchg xchg pusha add fisttpl jmp xchg sub xchg int3 les adc daa rcll mov daa and xchg adc or and out insb and aad rclb xchg ret adc outsb add insb push es cmp pop jg cmc pop push jp mov orl pop push dec shrl popa cmpsl push fstl das outsb pop mov or in das pop inc xchg add xchg pop mov xor dec pop aam gs sub push aam jno in cmp and shl jnp adc pop jecxz les adc orl rorl jnp imul lods or cli out daa flds cltd sub (bad) ficom mov sub pushf in pop adc adc loop rclb sub arpl (bad) pop sti cmp xor nop and movsb dec call out xor xchg je dec out clc fbstp mov xorb xor jo sti xchg lock xchg je jge cmpsb mov lcall mov loopne mov mov dec dec movsl cmp and add ret push fildl pop xchg push pop xor and ficompl xlat jg sti pop push xor cmp frstor popa mov xchg imul push (bad) movsb dec dec iret outsb push xorl outsb xor add jno xchg pushf imul and dec lods inc test std add setg xchg std or push sub fs cmp inc leave add inc sarb arpl ja xor or lods dec adc push or pop (bad) xor cs lods cmp ror xchg cmp movsl mov mov lret adc inc cmp mov push mov cmc daa outsb mov add mov and lods push ret lea hlt jge pop repnz orb (bad) test jbe lcall pusha xor cld jmp and mov mov mov xlat add add pop ret and sub fstpl lsl ret sub sahf insb sar (bad) lcall in outsl sbb fcmovbe and pop push dec inc popf in iret dec stos sub (bad) stos rorl cmp add movsb fidivl out mov cmp and iret sub jb dec push adcb adc push outsb in xchg fmull mov mov inc pop ja dec dec dec push scas out xor pop sub enter fidivr jmp xor or out (bad) mov enter add into cmp sub pop xchg push cmpsl push mov jae cmp imul xchg ret test loopne sbb bound fidivrl bound mov cmp adc rcll sbb hlt movsb imul push cltd mov mov sub and adc mov sbb ret repnz mov in add xor out lods jne scas (bad) mov bound xor add push ljmp sbb test sbb lock jnp cmp adc mov shrl (bad) mov adc ds cli addr16 and mov fadd xchg inc in ret loop and icebp sbb dec cmpsb xor jbe fadd ja and out loop cmpsl int cli pop inc or (bad) cld pop out ret lods (bad) push push insb adc cmp loopne adc icebp stc xor adc in adc aaa lods in loop mov pop js popa adc cwtl (bad) push xor ja jecxz cmp data16 outsl push fsts xchg scas test or sub mov adc (bad) (bad) mov adc fwait mov xor and sahf dec pop mov gs nop mov cltd jae push mov pop push inc (bad) std paddq cmp or mov lods xchg dec jne out mov loop xorl test mov imul push mov and fwait hlt pop or fnsave in pop pop inc gs pop sub gs out pop lcall cmp push std clc out loopne fisub cmp movsl in ds jmp sub mov jno test jbe cs push mov mov movsl (bad) jmp mov pop cmp aad jp fistl mov adc cmp fcomps and inc cwtl or (bad) jecxz gs out fidivrl adc sub dec push push xchg scas (bad) xor fsubr sub sbb or iret mov push or scas shll push cmp dec cmpsl jnp stos add sbb insl add push mov ret das lds push pop lahf mov or out jo adc sub roll sbb push pop mov lock push jmp popf add xchg hlt scas sub dec inc add and out dec cltd jp cmp pop pop jne fdivs inc push mov xchg (bad) rcll repnz inc sub popa mov jns push push pop in and scas insb sub jbe pusha test cmp stos mov or in frstor mov cmpsb fidiv push xchg aas inc jg push or aaa sbb cs mov push add cld jl push xchg loopne aas or push add sub and (bad) popa notb scas adc jns or push jmp imul sbb xor outsb push fimul stos mov jae or int xchg (bad) imulb clc ja ss mov cmp adc (bad) push mov lds mov popaw sbb mov and cmp cmp icebp loopne push or dec cli xchg jns adc loope rol stos dec pop enter iret shlb jle into lock inc dec jge cmp or cli xor pop repnz cmp insb clc and sub mov adc pop and jp jge cwtl inc jbe rorb sbb sbb in rolb mov rcll imull jp arpl sar testl stos mov jbe jmp jecxz in fsts enter lahf xchg rclb imul arpl stos xor push (bad) repz int3 (bad) movsb ret sbb dec ficoml push stos xchg add xchg (bad) fldcw sub aas xchg xor lret aad pop push xor inc inc mov fldcw fisubl fnsave sarb fs hlt loopne ficomp mov js js xchg dec (bad) pop movsl push sarl or jne dec in push sbb mov movsb and and xchg add inc lea outsl pop fiadd mov xchg scas scas pop int3 jbe jo popf insl lods mov cmc adc addr16 and adc jne nop mov movsl outsb fs dec call hlt add sbb xchg rorl inc out xchg divb stos dec pop pop call repnz fmul lret imul mov mov sbbl pop xor mov push clc imul xor mov shll js in mov or xor and adc imul and rcl scas mov imul mov fbld xchg cld cltd (bad) loope dec les sub pop sub mov dec pop in dec (bad) mov or jo lods popf or aam sbb sub or (bad) cmpsb inc push xchg push cwtl pop adc shl lcall pop xchg jge mov je stos xor jmp (bad) jo dec inc repz inc cmp insl rcll js sub icebp mov out int dec jg fcompl push outsl or jmp adc mov jno dec (bad) ljmp mov cmpb jle out push mov roll sbb sub sub adc aad (bad) xor jp (bad) in imull mov sbb jle cmp adc jne shlb add cmp dec xor inc sub mov fmulp cmpsb xchg es outsb (bad) mov fisttpl pop add imul cmp push das lea fdiv mov pop add (bad) jae cmpsb inc adc fs mov mov in and jge ljmp adc or pop in cli cwtl nop cwtl mov mov rorl pop in mov scas mov popf dec push fdivrp sbb pop pop bound sahf mov and dec dec pop cmp lcall out (bad) push sbb ja cs outsl sub push push sub xor add cmpsl or dec sbb adc xchg mov push and lahf push ds mov popf jae jbe loop into xlat push push mov jp jg aam in sub mov xlat mov into mov jbe stos jmp cld cmp xchg fstps mov fiaddl sahf sub push jbe mov add xchg adc test xor jne imul adc lods jge adc das leave mov push push int3 out lret in adc xchg pushf inc inc inc push fidivl cmc adc das adc cmp icebp dec lahf sub mov jmp dec hlt xor pop (bad) jge rorl test dec ret mov inc mov daa push jns cmp adc jle dec cwtl or fdivrl daa xor cmpsb mov jg (bad) jno adcb daa mov sub mov add icebp out inc push fs sbb push jge dec test mov adc sub lahf mov mov lock movsb ss xchg pop into cltd adc jnp je cltd jp hlt jl,pt jg inc lret decb or mov pusha loop push xchg outsb xor ja jo out adc dec mov push daa push out mov mov mov ja jl cld mov xchg xchg dec and add pop mov fs jmp inc repz arpl in stos dec nop es mov sahf aas mov outsb jle js insb xchg (bad) clc mov gs pop jp data16 dec jmp ss lea aaa mov jg fs inc test bnd fiadd fs sti fdivl sbb cwtl sbb fsts dec inc push or fs push and or sbb lods lock jns mov and icebp daa xor test push loopne mov addr16 xchg mov jno ficompl ret mov ss call insl add jmp dec ret outsl orl xor mov (bad) and ds int3 xchg cmovno sub cli (bad) outsb (bad) ret add lock test and push lcall jp jmp in outsl fistpll mov arpl mov loope cmp cmp repz nop dec mov fistl push mov movsb mov notl imulb bound sbb mov xor leave mov std inc add jns sti fldenv push sbb dec ret mov cmc dec jmp ret cli fsub es inc aas mov push cmp es mov jg mov cmp dec mov xchg fwait xchg iret inc into insl dec outsb fnop mov xchg and pop call push mov ret pop (bad) fildll xadd mov dec jmp incb int3 and sarl lret in dec aad add stc dec cmc mov out int mov push les dec add mov fcom out adc enter arpl adc mov xor int3 repnz inc das repnz ret xchg adc insb jecxz inc insb xchg test iret (bad) cld mov and sub mov es mov push (bad) outsb bound mov push loop rclb push and mov xchg std loop cmp sbb jns int sub dec jae clc rcrl mov mov sahf scas lock mov add (bad) push ret adc xor xchg mov cmpsl mov jl enter inc cltd adc mov jmp cmp in das sub bound push mov cmovno in cli cltd mov mov imul adc daa fs sbb mov or pushf and mov ds inc pop jl pop or xchg in test xor test sub notl stos mov dec imul (bad) out jmp mov add mov pop fsubrl loop pop imul je mov mov fwait lcall pop loop xor icebp mov inc test loop enter ljmp mov add mov xchg lock clc sbb mov adc icebp xchg xchg out dec ret push or rolb repz push inc add mov inc or and repz add lcall jns std out push outsb push mov mov jno loope add jo mov cmp aam or jne mov sbb mov fmull pop cmpsb push sbb xlat mov inc int jmp outsl movsb jg or jo hlt idivb sub call cmpsl mov iret test enter cmp popa in addr16 insb cwtl addr16 dec dec jl fwait cld sbb adc add xor xor sub mov iret rcrb sbb inc mov lcall test or aad enter pop imull test lret js cli add pop mov inc cmp and imul test insb cwtl faddl xorl sar xchg sbb sbb fwait mov xlat mov and cmp cli xchg fstl pop sbb (bad) mov loope or cmp (bad) popa jp mov call out repnz (bad) pop scas pop add and push movsb mov lret fs (bad) sbb sbb jecxz adc ret movsl sub enter loope sbb mov xchg cmc js xor adcl fsts pop push xchg arpl outsb inc jb sub mov sti jo jl mov mov or adc popf ror call es xor ljmp mov arpl stos cmc test movsl push pop ds mov test mov sub sti test xor insb jb jo je jp adc ljmp sub int3 add cmp push fnstenv into or xchg sbb mov jnp push push inc (bad) in inc mov ficom sbb imul sub fcmovb fwait into or sbb dec inc mov movsb mov push sub je scas cmp icebp jg push int3 cmp fidivr jb xor mov mov lods sub out cli and adc mov mov sbb notb jecxz xor jnp sbb je dec daa repnz mov push push das pop (bad) jo cmp inc add jno outsb jae ret in or mov sub mov fwait test gs mov xchg (bad) pop or lds mov mov inc in ja push mov or xchg mov fwait lea out aad or mov (bad) dec in sbb rcr cmp ljmp mov or mov imul out (bad) xchg dec pop xorl push xchg dec int3 dec scas push aam sbb dec mov push arpl test xchg jp subl in test push pop mov inc test mov cltd cli mov push pop and dec xchg sub mov cmc mov xlat call pop cli inc ret out push jl cmp lock mov xchg cmpsl sub mov stos adc inc xchg fiaddl jns jae arpl and dec xor mov jno test inc jecxz and addr16 sbb int3 cwtl call xor (bad) mov call fldl cmpsb inc pop sbb cmp sbb jmp into fsubl enter pop stos in mov mov xor inc jnp inc xchg mov les shl outsb and popf inc sarb enter mov add inc push mov push packuswb lret jle test jno mov scas out cmp add sbb inc and lahf shrb data16 xchg incb sti nop xchg ds ljmp mov xchg push aaa add into dec push sub loop lret push es cs sbb mov (bad) movsl add mov jecxz pextrw mov pop and cmc lods cmp (bad) clc insl mov push iret fistpll jle push ja mov jmp int3 pop subl jns lret mov imul cwtl mov adc imul push call cmpsb mov sbb ficomp dec int3 add push pop pop cmp mov pusha dec mov sti stos imul inc (bad) (bad) insl dec push push cmp mov inc pop sarb mov ds mov imull inc add jecxz ja xor cmp insb xchg jne or xor jnp mov loop inc dec and aam jnp orl sti int arpl ret mov or sbb lcall (bad) repnz sbb add sbb in jmp sub mov bound aas int xor sbb repz jg push std pop sub gs adc fs out into xor xchg imul sub push jno xchg (bad) ljmp test jb pop adc movsb nop pop push std sbb (bad) jge pop jbe into jge les pop mov xchg sahf (bad) aaa or add mov cli aad cmpsl je repz repz xchg cmp jae inc dec mov xchg sub xor dec stos stos jo into push scas mov inc ret adc aam in fstl jo jle notl sbb and aaa fwait xchg sti lahf ret fldenv fdivl xchg pop insl and gs nop xchg jnp in in call inc outsb (bad) aaa mov in fwait bound subl stc daa outsl cwtl mov aas or push sbbl adc dec or mov (bad) cmpsl cmp and sub daa fs dec test fildll pusha mov pop add std jmp mov lock out and and cmpsb into rclb fildll arpl loopne (bad) push in mov push lock mov bnd ljmp xchg test rorl xchg (bad) or sbbl sahf sub xor nop fildl fildll mov add movsl das dec push (bad) dec lret fimull or and in adc mov jp mov cmpsl fcomps or sub mov jae (bad) sub or or mov jo mov imulb or inc xchg jecxz push lcall or clc imul xchg ja (bad) mov and cs hlt ljmp int3 movsl jmp dec lea mov dec cmp imul and xchg mov pop gs mov xchg neg dec (bad) in mov ret mov jae or test cmp or fwait jnp loop fsts lock imul xor pop jbe leave repnz aad sub enter adc movsb cltd mov dec (bad) sbb jmp xchg cmp jnp mov push fs pushf icebp mov pop inc dec int ss sub and push sbb dec jo mov jo out xchg xchg jp addl ljmp mov fistl insl mov mov jnp movsl pop orb push mov push or inc (bad) out test inc adc leave inc mull pushf xor in scas or stos lods add leave and sub add das les scas addr16 add sub push add es mov pop sar pushf cmp js sub lock movsl ja sub adc lahf aas cltd cmp call mulb xor xchg sub lcall pop nop scas push fisub mov out popa jnp out mov nop xor rorl popf add dec xor jge mov inc pop jg shrl in repnz add lds out divb mov cmp mov enter flds pushf out jmp (bad) ds sar rcll xchg dec adc mov stos ds shr fnsave daa jne xchg mov sub (bad) jl fwait adc push stos jne adc push push push mov and (bad) sub movsl ljmp sbb push repz push dec cwtl loopne scas mov push dec insb popf pop mov ret rorl aas push clc in dec mov hlt imul mov pusha sub imul mov ffreep outsl adc (bad) ljmp arpl xor pop mov adc in sbb sbb imul loopne imul and data16 leave (bad) dec push enter pop cmp orl ljmp sahf or xchg nop (bad) ja jge bound cvttps2pi leave xor push mov add iret test sbb or or push and fstl stos jg cmpsb push imul mov sbb outsl cmp and dec cmp imul lds inc lahf or mov jae pop pop pop sahf cmpsb adcb xor les mov fs pop cmpsl sbb icebp mov mov addr16 out mov dec jg loope mov push jmp inc ljmp mov ret xor (bad) int3 aas cmc adc inc dec mov jb sub push fs repz sbb addr16 jo inc mov or in into movsb push mov sahf mov pushfw lret ljmp lret lahf aaa jne movsl dec scas lods dec dec adc and popf stos outsl inc mov insl stc lea mov int inc or je mov lret idivb adc push in mov xchg popa cli sub cmp push xchg rcrl mov addb pop sbb (bad) icebp repz nop inc add mov push or inc mov xchg xchg push push fmuls or gs sti repnz jnp adc int3 (bad) cwtl pop sub divl lods (bad) mov pop dec xlat daa icebp fstpt or test push mov add imul mov xchg add mov jge cltd repz lock dec adcb (bad) sub dec pop in fldl2e (bad) fsubrl jge,pt mov adc xchg movsl jmp and mov cmpsl cmp std lods and out add mov jae sbb pop xor dec ds jno repnz lea popa jne mov adc incb loop imul push pop int3 xchg push cltd jecxz mov cmp cmc adc pop sub jae adc (bad) sub mov xchg test jle in or daa movsb dec loop mov sahf or xchg fisubr sub sub jp sbb sbbl xchg in fdivrp jno add (bad) and outsb pop push or push les cld sub ret xchg ja sarb mov repz or xchg xor jbe mov (bad) cmp xchg inc adc sarl xor add addl mov sahf leave aas aas aam sti or les jmp (bad) mov cmpsl inc rep idivb out je (bad) call sbb xor mov cmp test inc movsl iret mov xchg jbe std sub dec test inc xor loop dec arpl sub push xchg or and xor stos es mov mov fwait push lock test ds pop hlt ds or jmp mov sub pop mov (bad) push cs xchg js jmp lret outsl ljmp mov lret push pop xchg lret adc (bad) jp hlt shl in mov int3 pop xchg stc enter scas fs xor negb add jne loopne stos js adc addr16 xor pop cmpsb movsl rcrb stos (bad) xor (bad) pushf lds xor jl adc xor mov scas sbb aam sahf popf cmp lods mov mov cltd (bad) cmp jne nop mov add out or add add stc sub xchg test and outsl mov jg inc mov neg test push add xchg rcrl (bad) lods push decb test or pushf mov out daa rolb inc cmp cmpsl mov and pop mov out mov jp jle mov into mov nop test or and dec cltd push sub popa xchg (bad) mov mov cmpsb sahf pop mov pop jne cmp rcrb or mov imul jne sbb xchg push (bad) adc cmp pop jne xchg push and push mov (bad) mov mov fistp mov pop imul movsb lret enter test push lret xor lock sbb jmp mov xor adc adc sti dec jge in xchg (bad) sub sbb mov data16 xchg punpckldq jge push enter push daa xor aaa jns fisttpl fdivp dec xor push add jg sbb rcll sbb test ja pop or lcall sbb sbb or push dec stos xchg test clc jle pop jnp mov imul add jg lods push sub lods pop pop subl out sbb adc adc int stos or mov in outsl std xorb push xchg sbb mul mov popf sub mov pop outsb sub je arpl jle mov (bad) call push insl jae rcr loopne call pusha xchg mov jge push xor jb popa nop mov jecxz hlt in jnp (bad) pop mov ret aas mov add sbb dec aad and bound push fcmovne add popf fiadd sahf test jne insb mov jb (bad) sub sbb (bad) xor fldenv cmp sub cli mov sbb push xchg frstor mov or lcall dec mov dec testl push stos add cmp jbe int ljmp adc leave xor cld xchg outsl and lea out imul incl clc and or xchg or mov inc loope pushf cmp stos movsl inc inc mov lcall jp bound bound mov es das aam (bad) cmpsb or (bad) scas adc push movsb pop adc (bad) cwtl leave jns pusha inc cs xor aaa arpl xor repnz scas xor sbb jns and daa pop fmull in ficoml sub and sbb cltd adc xor push sbb je add jge jge loope pop jl push mov add inc add (bad) (bad) es lea push call sub lock sarb push clc lods mov sbb dec mov call lcall daa mov jnp cltd out outsl push pushl push cld mov mov movsb sbb jmp jb dec dec outsb std jp icebp aas std mov mov mov cmpsl add xor xchg mov clc jno and mov mov loopne pop cmpsb and out jle ljmp sarl xchg ss iret loope mov jl test cmpsb pop inc adc xchg mov das scas lds or ljmp jne jge push push inc (bad) mov hlt fdivl push loope jo adc fsubrs inc popa mov adcb ret mov adc (bad) jno jmp mov pop scas rorl out fldt or fcoms test jb xor xchg ret xor cli fcmovnbe inc cltd pop jne mov mov cmp mov fwait xlat cltd adc int inc imul mov (bad) dec (bad) adc mov jae pop xor inc push cld iret mov ror jmp xchg xor cld adc ret pop sbb add movsb adc xor push mov sub mov pop out pusha or sub scas test pop dec outsl pinsrw jg pop and sbb xor adc jmp adc sbb and and cmpsl jg jl fs mov adc push lea dec xchg les cmp push sbb daa xchg (bad) mov orb cmpsl notb pop jbe inc xchg int3 mov lea inc scas lcall add add mov sahf cmp mov fucom in jb sub sub ret jns mov int3 (bad) jb (bad) out mov or loope in (bad) cmp outsl mov add xor das ljmp out mov and aam mov in jne mov mov and cmp outsl int3 int3 ret jmp (bad) daa and gs mov dec mov mov and push xor or outsb mulb inc (bad) rep jno int3 mov adc push jle xchg repz ja push xchg sbb lods cmp jge push nop movsb sbb inc mov xchg lods fisubrl aam cld flds dec or sub cs cltd add imul push jnp fistpl xchg incl arpl push pop adc cmpsb pop cmpsb icebp rcll inc mov sub leave push stos jnp enter daa adc (bad) lcall jg cmp shrb sar iret pop mov push loope dec lds mov jo xchg stos pop push inc cmp mov rorl add jecxz mov mov cmp sbb ret xchg popf out sti xor cmp pop (bad) leave jge xor push cwtl inc add dec adc das jecxz xchg (bad) jle add sar sbb into cli faddl in inc mov fxch xchg dec lea cmp mov (bad) imul fisubl fs test xor mov (bad) lods adc test inc xor push pop in fsubs cmp ds sbb or cld jle fucomp or jns pop xchg sbb std sti sub in xor xor dec decl mov imul (bad) xor (bad) pop mov jecxz lock sbb repz adc addr16 fcompl jecxz mov ret mov movsb sbb into add xchg test fiaddl popf jae mov loope xchg stos or (bad) lret rorb adc insb sarb pop nop int aad cwtl mov int hlt mov adc push rclb jb pop aam or cmpsl enter push cmp pop sahf cmp xchg int jnp xchg sbb push lods movl add push adc push jl cmp and ret adc fistp adc mov jnp in mov ss arpl mov sbb insl icebp push jae cmpsl ror push das jae push cmp or into push ss cltd mov es and mov xor mov mov and jo stc mov mov stos bswap jge (bad) lret arpl frstor cmpsl and jecxz mov push adc pushf test xchg cmp nop mov mov sbb jle xlat iret adcl jp inc inc mov push pop jne,pt fwait je sbb out push push or repz in in pop pop js add mov movl xchg fs cmp mov clc cmp arpl dec ja xchg ret in lahf jb iret stc rolb push aaa dec cld or dec mov mov lock repnz jg mov dec xor add pop jmp sub add xchg push out jno shl movsl xchg jg ret sbb neg clc dec sbb cmpsb dec adc and jo pop xor into dec and sbb sbb jo adc xchg jnp inc fisubrl andl jb fcomp push and dec lods icebp or dec mov std mov mov adc ret test aas xchg fist dec jl push pusha mov mov mov lds lcall adc mov arpl sbb dec cmp rcll jnp (bad) lret jmp ret jp mov lods dec daa jbe outsl pop popa and jae jne cmp leave imull mov and aas pusha jmp jne sub push lret clc iret test sub cmp (bad) fcoml repnz push xchg out (bad) fsubrs (bad) or movntq out cmp add mov in or out insl xor pop fsubrl add adc inc in movl push xor jns adc (bad) mov xorb jo ss nop xor outsb and pop repnz aam pop lcall inc xchg lahf and ljmp inc cli and fnstcw xchg sahf inc push inc (bad) loope,pn jns sub mov lea cmp lret fiadd out xor pop subb push outsb (bad) ja xlat je cmpsl in int3 lods inc repnz fisttp in cmp mov jnp loop aas mov or in pop mov fnstenv ljmp cmp xor lcall push test dec xor mov fist movsl mov xchg mov mov inc sti sbb addr16 cmp cmp lods mov or add pop adcl mov leave xor fwait mov adc xchg add mov push mov sbb and (bad) lret fdivl pop test xlat sahf sub or sbb adc mov (bad) jecxz fst mov or daa cmp inc aaa or sub mov ljmp imul vprotb push lret pop incb sbb xor cmp pop adc push nop push jmp mov inc pop je dec sub adc xchg fwait xchg das pop (bad) lret adc add pop arpl lret push cmpsb sub scas jmp push adc (bad) push xorb jle icebp add dec divb pop mov icebp mov mov int mov nop insl fwait push daa jno push mov xor mov js aas mov push in adc es sbb mov inc les mov ja jp (bad) rorb cmp inc sbb adc adcl gs repz mov enter pop mov mov pop stos (bad) push jnp sbb xchg adc xchg xchg scas dec cmp or inc mov pushf lret sti out test sbb repnz jge xlat inc xchg xchg mov lcall call int3 lret popl adc cld mov xchg mull movsl (bad) daa icebp inc cmp mov scas and cmpsl sbb pop xchg sbb or inc repnz aad push fs lods sub inc out sub mov popa add add inc loopne (bad) repz xchg enter rcrl int stos mov xlat shll pop lods push or sub das lock sbb dec out loope xchg lret mov test (bad) mov or pop les push add pushf xchg int3 jo js lods jmp fnsave mov mov fwait loope ljmp mov dec lret fsubs aaa mov outsl lret jmp rclb fldt fildll dec fldz pop pop adc stc mov outsb (bad) lds and lods jae inc mov xchg pushf inc push ret lock iret ret pushf xchg mov dec stos es jae dec xchg push add mov testl std lods gs icebp xchg mov jp fsubr mov outsl ljmp jae and xchg and pop xor jle adc shll popf mov arpl push rcr inc jp lods movsw loop scas popf sbb (bad) inc jnp dec insb in into loope inc les aas enter scas gs ret mov mov push aaa test pop jns adc sbb add insl shrl mov mov leave pop and mov push dec (bad) inc push push and je out cmpsl adc addr16 (bad) pop in inc add xchg out adc test std sti out fsubl inc push data16 addl gs mov push xchg pop inc xor xchg mov xchg xchg pop lods out outsb gs scas (bad) aad mov or in in pop movsb xchg fldt cmp inc nop gs mov jb or fldcw cli push (bad) jno sub notb sub outsl jns push mov sti sbb sub mov dec (bad) (bad) into lret add out cld test aad les popa and leave jno add sahf ficomp xchg cmpl xor cs pop xlat jp mov or lea dec lods pop adc dec sub test ljmp cmc rcrl icebp ret insl push dec and pop cli imul sub push or (bad) sub xchg push std jno jecxz mov mov sbb fxch adcl lahf or dec adc in inc imul insl mov lret dec call jmp test ds ja ret je jl cmp xor sub in bound dec imul mov sar xchg fdivrs mov mov jp lret ds and mov inc mov ss jecxz cmp cwtl pop (bad) hlt mov mov (bad) leave add add xchg and bound mov divb sbb ds rolb aad push addr16 dec in lcall mov mov xchg sahf inc push push add loop dec mov cmp xchg mov inc sbb adc loopne mov cmp divl push clc cwtl add and xchg pop sub in ficoml pop xchg pusha pop iret mov lods or or movsb fnop cmp mov mov call jmp iret idiv stos jl aaa aaa dec xor inc push xchg clc or add jle and paddb and insl rorb xchg js int3 fnstenv push aad dec out push bound push mov mov (bad) fldenv or inc vmread mov inc insl into or rclb js push xchg fistpl shl lret daa lods inc and cmc xchg mov jl aam fwait push xchg pop stos mov iret mov add or stos addr16 test xchg pop add and cmp pop adc pop dec decl not insl repnz test xchg nop xlat int3 jg loop imul inc cmp insb std jecxz int mov inc push call popf lahf aaa dec pop fisubrl das lock cmp cmp cld scas mov dec leave mov sub movsl pop test lret or (bad) stc or adc push dec out incl (bad) mov sarb pop sbb and add lock decl mov inc shl jle adc leave call push outsl add sbb mov dec popa add and sub repnz mov out push dec inc mov jg or mov and push mov loopne cli les bound dec (bad) adc mov jg js jno sub movsb (bad) push mov cltd inc decl jecxz mov push arpl stos movsb sub xor loope popf aas sbbb mov leave jne jbe in sub jo inc int sti push adc mov insb mov mov sbb mov pop aad test or push xchg mov and sbb pop add mov addr16 js cmp xchg bound imul add adc mov ret jle out outsl mov call xlat imul (bad) lahf jae pop jge (bad) icebp cmp lea pop sbb lds cmp sti pop mov pop fwait inc (bad) in adc lods push mov (bad) jp fisttpl hlt mov inc and mov mov xchg addr16 lret sub int3 mov cmp cmp dec popf push mov pop add pop ds loopne,pt (bad) negl insl lods cmp loop mov pop std mov cli push pop xchg jp aaa and dec int3 jmp xor mov dec ret fimull popf inc mov orl sbb test in iret (bad) pop insl test (bad) in add insb loope pop jge stc hlt xchg fisttpll push xchg add push arpl imul adc push add sbb mov pop cmp cwtl jle js outsl out cmc mov pop les cmp jl pop mov lret test sub mov xor pusha fwait cmpsl cltd fldl loope sahf imul lods clc add sti ds nop mov mov mov jg push ss xlat pop add add mov mov mov cmp mov push mov gs and jmp loop test lea sub dec mov ja jae jg pop test sbb lock xor das daa rclb mov and add xchg out cmpsl xchg push adc inc scas jae je imulb icebp (bad) cmp (bad) stos movb in cltd adc dec lret fwait mov xchg rcrb jne or pop cs loop out test int3 xor xlat (bad) push mov and push stc jno xchg (bad) (bad) xor pop cmpb jne fdivr jg insb xor push adc push jmp popa ds cmpsl xchg (bad) adc aam pop add stc jg sub aas ljmp dec nop add mov iret push and mov sub lds and aam pushf push push addr16 mov jne je push movsl push rcr inc enter fistpll adc push mov xor push daa pop xor xchg lcall aad mov movsb mov pop aam fsub sbb aaa sbb cli xor daa pop ret and sbb nop fbstp es sub push or jbe sbb hlt (bad) pop push pop jae ret sbb in aad (bad) leave test aam pop (bad) aas hlt dec sbb or es flds (bad) sub lcall faddl sbbl add test lds cmp std js cmp mov dec mov inc push mov push jnp sub cmp sarb pushf xor inc mov call rclb in adc jno push cld inc push popf xchg (bad) (bad) stc std sbb xor hlt and xor iret outsb aas and pop nop xor mov loop jecxz dec fs mov xchg jb hlt pusha jb dec or mov mov and (bad) pop jae jle loopne aas jno inc xor ret sub cmc imul push repnz dec ja sarb push dec inc fwait dec add inc fbld cmpsl and lret mov fcmovne inc sbb or (bad) lahf loope lea arpl icebp mov cmp add pop test xor je arpl adc jno sub and aad pop test adc inc mov jg stos xor jle pop pop push cmpsb rcll call and adc cmpsl je loop xor lods xor into clc mov mov mov pop xor push inc bound cmp mov pop (bad) test popa pop adc jne sbb and repz andl mov jl lret fdivrs aaa std or test mov mov scas pop pop fildll jge push jmp ljmp in pop cmp (bad) jno mov cmp nop push lahf adc sub es test pop lods adc pop cmp aaa aad and mov add out cltd push mov inc cmp call leave (bad) imul jns enter int jae gs jae jg (bad) mov scas popf loope and inc stc mov jge int pop mov jno jp pop cld ret call jnp out movsl add hlt lods pop sbb cltd loope enter dec xchg adc cwtl push sub fidiv add or or in mov or faddp sbb pop (bad) sti mov mov pusha xchg lods and mov pop loopne push adcl rcrl mov popf cmpsl xchg inc lock repz xor in rorl adc sbb clc stos hlt jne cmpsb sbb xlat js push mov xchg enter adc icebp lret xchg cmp in das xchg and xchg sub (bad) jle push nop mov xchg xor mov push js pop mov (bad) inc or (bad) cmpsl mov sbb gs clc mov cmp cmc sbb jmp mov jmp and outsb sub dec ljmp popf lea fdivrl out sub sarl push jb roll and fidivr jp mov outsl dec push xor inc mov jle lret test fcoms fstl push add (bad) dec mov flds inc sub mov imul xchg lods lods sbb scas dec fidiv pop clc adcl dec popf inc ds cli xchg cli and and mov and mov xor push in pop add daa aad mov cmp mov cltd data16 sub mov lahf jl jge dec xchg mov stos inc sbb into add sub jno and sbb inc sbb and push sub rorb mov outsb xor fdivl pop lods inc fldl loopne es imul fmull loope mov xchg dec mov xor xchg sbb insb sarb xor aad (bad) sub std sahf flds leave mov loope push sub sub sub jne out mov insl subb push in icebp pop mov mov lock mov mov push add sub ret iret push (bad) fld imul icebp cs push jno ds mov jns push (bad) out insb push adc test in jae incb jbe xor xor movsb sbb xor jne push xchg add xchg stos inc cmp push test cld cwtl repnz and loope mov into roll xchg xor push xor popa sbb push mov dec pop mov cmpsl inc push mov arpl push (bad) mov das dec xor xor aam push sbb cmp inc inc loopne mov or xor jns aaa movsb les clc sbb pop adc (bad) lret notl pop sub pop jae mov dec inc inc xlat mov (bad) dec hlt sub push xor repz test leave out push in lods mov pop scas xor jo inc mov adc pop ss pusha cmc push add in adc fwait mov sahf and inc test mov or jp daa and testl sbb ljmp push mov adc add xchg sbb rolb cmpsb adcl test mov jb and pusha or xor xchg add pushf xchg mov mov call aad popf outsl mov std jg inc fucomi inc push outsb stc mov mov imul jnp mov or push ror sbb cmc pop outsl mov aas out xor fwait sar jnp push mov push pop movsb mov xorb jne pop jo xorl dec insb jns jp ja int3 pop mov inc in push in or (bad) lds dec fidiv add ss jae (bad) lret ds xchg lret leave sbb xor movsb rorl inc loope mov gs lret ret cmp daa mov or stc das fcompl in pop loope mov lods sbb jnp xor push mov mov out aaa stos std ret loopne leave xchg sbbl push in adc mov insb popf fwait outsb fimull xchg dec xor adc sub test push push sbb dec pusha repnz xchg test outsl aaa cmp xchg outsb jnp mov cltd rol mov pop iret ds fadds sub std in out sub mov pop cs xor js push push inc and sti ja adc push or sbbl mov mov adc or out pushf or mov dec lods adc dec jae mov and pop push sbb sub jp mov in lods outsl bound inc mov jecxz lods scas adc xchg inc xor xchg inc or push nop mov jl sahf sbb sub (bad) push dec and jb push pop add sbb fistpl jo mov inc and cmc fxch mov lahf repz xor inc inc sbb in adc inc stos les adc push sub mov mov lock cli jb aad dec add and pop bound scas pop popa mov jle cli push fdivr outsl mov xchg lret ljmp mov gs repnz jl test lcall inc dec stos sti and sbb push push xor xchg mov iret xor mov es stos inc or negb fnstsw popl cltd in daa dec cltd push rol stos in mov pop lahf test cmp sbb cli cs mov xchg or iret jns ljmp repnz int3 int3 lret out int dec nop pop test mov aad adcl stos out sbb sub hlt pop adc test sbb test dec mov mov shrl jle push pop lret mov or jno mov push add sub jbe sbb icebp xor xor sahf mov movb sbb sub push insb (bad) ss nop jp cmp push ljmp pop movsl jg rorb lcall scas (bad) scas les mov insb push xor inc test sbb (bad) pop sbb cmpsb out loop shld je mov add xor dec iret pop loop es jno push mov or jae push or fstp in mov mov and jmp cltd iret mov fstpl sub gs xchg add fwait das clc xchg or (bad) jb int sbb mov jmp ja dec pop insb and sub inc pop inc lahf lods pop lcall xlat cmp or test loop mov or fstps mov fs int3 lret stos push xor or sub mov dec add fwait ja aas out jle (bad) sub cmpl ss mov rorl mov xor test or sub jp aad imul outsb data16 pop cld sbb and cli push pop mov lds or add dec popa jns adc mov mov adc dec in (bad) scas adc std pop xchg jl mov js movsl test mov fisttpl push arpl sbb xlat divb outsl outsb mov (bad) sub jb jmp or xor clc or jl out popf test repnz push xor pop adc mov inc and popf push lcallw mov mov enter fnstsw cmpsl ljmp out sbb dec movsl xchg sub mov es cltd push out mov and test jge xor inc mov cmc sub sti gs mov dec dec repz jbe leave inc and mov aad call mov addr16 imul loope stos pop das js inc and jb lods out dec pop mov adcl push in sbb loop mov jnp imul or arpl lcall fldl pop push cwtl (bad) sub idiv sub jb pop idivl jb repz aam sbb push cltd pop mov mov jmp lods inc out shrl cld cs movsb add ret sub sub mov inc jae adc shll mov pop cmp (bad) shr mov jbe rclb add mov clc insb jne pop out stos inc rcr rcll icebp popa mull xchg adc cli sub sbb ficomp pop mov lcall in pusha pushf jb adc dec leave insb pop adc fsts cmp dec xchg repnz jl mov sti push cmp and mov ficom (bad) or aaa or mov stc sbb cmp pusha std ret repz sbb inc push xchg adc lods fmulp rorl in aaa jge jns fwait lods fs loop hlt jb rcrl push hlt fist loop shrl sbbb dec fidiv leave sub pop xchg add roll pop or mov clc in pop subl and and stc mov pop jmp adc (bad) shlb adcl movsl lods adc enter xchg test inc xor (bad) (bad) pop lret sbb sahf and fwait jp (bad) out data16 or pop xchg into mov iret icebp sbb jb dec jb inc iret push loopne std pushf (bad) xchg fidiv fstps dec sub mov mov (bad) mov (bad) ss jp pop cmpsl lods test jns jo xchg dec lock mov icebp inc pop sbb adc and inc mov xchg adcl adc cwtl dec outsb mov js movsl out adc cli push sti test or test lea mov call inc loopne addl xor lock mov pop add pop mov xorb sbb jecxz iret mov xchg ficom (bad) ds stc pop pop pop arpl notl test add or fdivrs (bad) ja cltd fbstp daa test ss dec movsl movsl (bad) jle jmp mov pop cld xchg sarb insl sbb clc (bad) mov lcall in mov add adc pop add scas lods enter mov pop push repz repnz cmpsb mov mov push push inc sbb pop fstp add (bad) out jle mov xchg jno push mov lcall or popa mov xor ss movsb aad out adc pop fwait adc popa dec mov jmp pop mov and lock mov or jns xchg mov mov mov ficom fs lock cmpsl jb jmp lcall repnz and scas ret xor mov dec call std pop cwtl dec and xchg xchg sub mov testl nop pushf xor (bad) mov roll into int iret (bad) and push in sub mov test repnz stos js sub cmpsb jmp mov fdivrp and test push repnz inc ja xor in jl enter sbb push or aaa xchg xchg (bad) and jnp loop jo push bound pop inc ret aas mov outsl cli gs aad push call cli cld fcoml adc xor sarb cmp jb (bad) call loop mov lods mov jmp movsl stc push outsl gs cmp cltd xchg push pushf pop out mov mov mov xchg push lds clc or inc in pop mov lahf in (bad) std pop icebp and push push or scas div dec sbb fadd mov fcompl hlt jle movups mov and sbb dec push lods xchg sub add xchg cli or xchg mov dec pop (bad) shrb xchg mov mov mov xlat popa sub ljmp fistp mov stc loope add adc adc fld mov add rcrl xor cmp mov pushl cmp mov or lcall sub xor adc orb mov cmp in push pop adc jmp dec add movnti push mov (bad) jg rorl repnz and mov outsl cltd outsb ret jbe mov das mov aad push fsubs cmp xchg movb push sub mov cmpsl lahf lods or loope or mov dec lahf pop je mov push xor push cwtl push out std mov adc scas hlt jecxz inc das add popf icebp int div loop jae jne push cli fnstsw adc sbb das pop dec jl adc sbb xor adc icebp xor imul ficompl push shl mov loop pop xchg pop subl (bad) sahf or aad sbb mov imulb adc inc or mov fistl (bad) das in inc xlat mov xchg pusha movsl dec jle mov sbb cs outsl xchg mov push mov imul js push insl inc ds inc addr16 adc xchg add push mov leave adc faddl les adc xchg inc jns mov je nop xor pop sub lock mov pop cmp jbe sub les mov gs imul mov lods sub popf ret xor rclb xchg sub push cmp test sub or and inc sti in pop push cmc into scas xchg add jmp (bad) cld dec mov jmp pop cmpsb fcmovnu jge mov (bad) loope arpl stos or sbb repnz adc fxam xchg jae jo test setge loope ss cmp cli pop mov pop sbb test scas clc push jl jne decl setne inc lods jns lret inc inc xor sub repnz add pop mov xchg mov mov xorl jl mov out pusha sub fwait loop repnz aas inc movsl jmp sub mov mov out cmc add mov push cmp jge stos dec imul add jecxz cmp loope xchg lods adc push cmp in movsb test cmp adc iret stc and fwait pushf in push push lahf les int stos push add inc movsb gs sbb (bad) fnstcw stos les mov push inc out (bad) clc les dec sub cwtl jnp addb (bad) jg stos repnz inc (bad) repnz pop dec sbb or mov out adc fcoml mov xlat shlb push ja out (bad) mov push pushf lods and outsl mov iret rcrb cmp sub outsb lcall jp scas mov push sub and test pop xor (bad) xchg mulb test push fdivs (bad) pop push add enter bound xchg pop sbb lds jno add sbb addr16 sub push adc lret mov test cli sub (bad) push push mov inc stos popa fldcw sub sub xchg and fidiv mov ret fild cwtl movsb je xchg loopne (bad) sub mov fnsave out ss mov inc pushf jo imul stos jns add in cli lods dec xchg es mov cltd pop shlb mov and (bad) pop sub xchg js dec add lock mov int lds dec mov lea insb roll stc adc orb pop fcoms xchg fstpl cld hlt cmpb popa xor pop mov mov loop,pn or data16 ss mulb sub pushl out repz xor ret xor pop dec cmp xchg push push es sub xor (bad) (bad) mov int mov cmp mov lea loope push in adc es push lods js pushf imul jecxz push and pop pop lock mov push cmp imull (bad) or cmc lods cltd xor pushf pop inc cltd or xchg inc cs ja int fdivs into sbb daa cmc jb ss push daa shrl in dec inc (bad) jns pop push addb shld fs out pop and sub inc test fisubl adc add inc mov fs and lds sbb inc jno inc sub dec ljmp xor mov xchg xchg sub fs add iret int3 cmpsl sub xchg add in flds cmp int bound adc enter xchg or inc mov sub outsb xor adc cmp es push inc clc cmp and xlat fsts jle add std rcr lret (bad) aas rorb nop stos out xchg addr16 mov (bad) mov lahf dec and push lcall push jne test jne rcll rep mov push or out jno movsb push mov (bad) enter mov ja jmp adc add or repz popa and aas dec xchg sbb pop mov stos test jnp or mov dec mov and push (bad) pop mov and movsl rclb and inc push jne pop fsave sbb outsb xor insb (bad) cmp lahf loope bndldx hlt push inc adc (bad) pop cmpl xor int3 ds inc dec loope es sahf inc fwait imul sub mov aaa jp outsb pop es mov push jno mov fildll inc mov xchg out fs lock add (bad) and inc addl rorl push or mov stc cmp cmp mov mov mov fwait int inc in stos rolb and std cmpl adc sbb mov xchg sbb cmc inc push mov (bad) jnp arpl imul scas fsts dec or jae pop mov call add jno fwait (bad) pop mov jbe cmp fimul xorl fmuls js fistpl aad fistpl sbb fidiv mov push es push pop cmp inc ret stos out stc adcl sub pop insb mov push xchg or out (bad) imul arpl push jmp andb pop adcb jno imul or out shll cwtl mov fs sub adc ss mov (bad) xor out dec xor sbb dec jns jb popf push push sbb xlat outsb cmp inc shlb inc add mov outsb test sub rolb out fdivl sbb or sub aas pop (bad) mov cmp push pop pusha cltd (bad) mov nop cld push pop sbb push out sbb add push mov cli sub subb sbb idivl idivb insb out (bad) jae push fst inc sbb xor scas loop repz sti mov cmpsl lret dec std loopne xor mov mov dec in xor and jae push jbe call clc mov insl sbb xchg sti xchg sbb jp xor xchg int or arpl loop sbb push out sbb add rcll fwait or mov insl inc imul mov sbb lock fidivrl loopne and push pushf (bad) jne cmpsl xchg xchg out lret sbb bound in mov jp push insl gs sbb rcrl pushf push adc cmp and in mov xor test rorb je lret add in add out fidivr js std add xchg sub mov dec (bad) push std mov push loope mov roll ret es loopne mov mov fcomi inc loopne push vmovsd mov xor inc in mov (bad) daa push clc jb pusha jbe int3 push daa iret cmp adc pop cmp (bad) loopne adc les aas add or into (bad) out inc pop mov fst mov ds ficomp int3 lcall inc dec add repz xchg xor cltd ds insb pop insb add lds jo int3 jmp ret dec cld icebp adc bound ja fldt (bad) notl xor fsts fwait mov fistpll or or loope mov inc xchg cli jg mov mov mov pop clc xor repz cmpsl mov mov fs xchg sbb (bad) cmp jae adc aaa (bad) (bad) dec jl gs repz cwtl mov push (bad) mov arpl mov arpl les and xchg inc outsl scas push inc inc fdivrp popa nop push jp pusha popa scas imul inc or jle pusha mov xlat iret mov inc xchg mov inc lods stc stos scas les cmc pop pusha mov sub test xchg (bad) xchg dec adc cmp ret (bad) testl or movsb mov mov add mov js inc (bad) (bad) icebp pop adc sbb mov es rorl jmp push adc mov daa pop push mov jo mov into into aas int3 sbb loope iret push insb iret sbb in cmp cmpsb idiv jbe (bad) jmp aam insl (bad) clc push mov sbb push push pushf loopne sarb subl cmpsl xchg daa icebp adc test ds bound lret or pop adc fistpll push popf jmp inc mov repnz and mov jae jl xchg cmp push insb jnp inc mov jle xor test push in adc cmp add inc adc sbb xor ss jo das test ljmp lret cmpsl lods and imul test scas add loop pusha dec arpl leave xchg sub fdivrs test xor push dec popa cld sahf pop lret repz enter cmp add int3 add mov or js stc js dec pop outsl in rorb sub pop inc jae or jg push cmp test rcll scas aas push push xchg sub fistl sub cwtl test dec sbb es adc cmpl les (bad) insb dec stos fdivl cmp popf mov push arpl idivb mov icebp repz sbb jae mov in mov in pusha insb xchg xor in xchg int3 jg lret test push push mov add call insb cmp stc pop fbstp outsb cld outsl fmull push dec pusha sbb cmp gs mov adc fistl scas jle or arpl mov popf jl jns adc mov inc adc movsb ljmp (bad) sub cwtl cwtl out push lea ja or fstl jnp fstpl sbb sbb ret cmc (bad) mov adc roll pop nopl scas popa pop (bad) push cmp add jb mov cmp mov jl repnz adc daa mov add pop inc fwait jns test roll lahf cmpsb add mov xor inc sbb dec mov divl jle dec jnp xlat aam pusha sub adc ficomp insl fmul mov test inc inc fwait or or sub lret mov or mov mov sbb pop outsl push xchg jne aas imul sti scas addr16 mov pop xor jns (bad) adc cwtl and fwait mov mov lds fsubrs cwtl (bad) imul mov repz cmc push add fildl jecxz test push pop int push loope stos push cmpl cmp push jae pop rcl xor (bad) lahf mov loopne xchg mov xchg dec stos adc in subb dec cltd lods add mov loope int xor loope cli xchg and inc fldenv aam mov adc sub sub xor fisub pop add xchg xchg test (bad) clc and mov mov aad and xor addl fimull test out cmpsb pushf push push jbe mov xor cmp hlt test pop insl xor adc clc enter js lcall pop and jns gs sahf mov pop aad cltd cmp sub cmp dec das xchg pusha or xchg adc pop jp sbb mov or push ret mov pop mov (bad) lcall add hlt fsubr mov cmpsb jns pop pop rorl sub comiss add pop lret push arpl pop mov pop cmp xor adcl push mov mov sbb out (bad) rcr lods jns jne xchg mov cmpsb js (bad) xchg test mov push inc fdivs dec cld fistl jle cwtl into enter lods mov jne sbb in add insb inc sti insb (bad) adc pop sbb mov dec xor rcrl sub inc pop adc pop pop out push daa sbb xchg and inc sbb push or and cmp xor push lea and pop call xor dec in ljmp xchg xchg dec int3 stos andl mov es je bound fwait jge inc pop mov mov das aas pop inc mov mov dec jmp ja add mov icebp push mov sub (bad) cmc cld pushf inc adc dec push (bad) rcrb repnz sub mov fcmovbe out aam in and das call push test into or incb pushf shr mov add mov test (bad) rcll and mov adc xchg inc ret xchg jb jle (bad) outsl ja add adc int3 jg sbb dec xchg inc mov jmp dec inc int3 outsl sarl leave (bad) xor add pop les or dec fwait sbb pop (bad) xchg jge cmp cwtl imul lea jae cltd flds cmc cwtl iret aaa sub mov adc fwait decb cmp push fdivs sti ret mov pop jp out inc mov sub cmp pop sub sub or inc pop sub mov push lea and sub rorl or jnp xor lret cs iret addr16 lock xor adc mov dec jecxz mov int xor push xor stc adc sbb repz dec push pop pusha (bad) lods or int js jae fcomps popa icebp add sub dec pop outsl je (bad) pop and mov shl pushl or arpl fbstp in icebp sti mulb inc in aam xchg fmull cmp aad andb std stc adc mov mov or jge cmp inc mov std pop and es add das push cld jb mov inc dec (bad) push iret jecxz,pt rcl sub sahf cmp mov and sarb pushf cmp ljmp pop (bad) xor addr16 inc loope call or stos fstl mov addr16 fisubrl int mov add mov ja cmc out ret jecxz push ja mov adc popa inc xchg sub dec (bad) mov cmp int pop xor stc mov jg or jbe add jb adc out pop rcll inc xor xchg (bad) icebp aas lea adc repz ds adc mov (bad) decl cld lret and jno jge sub mov jg mov dec movb sbb fiadd push mov mov ljmp fsts dec int3 rorl hlt add call mov das lcall push frstor outsb mov out mov pop cmp add shrb ret mov pop (bad) xor dec dec mov xchg cltd dec pop mov add jae jge imul push loopne mov or or fdivp sbb lret xchg and cmp and rorl mov xchg loopne in and mov mov sub xor mov mov push and rolb dec mov push sbb leave out sahf mov pushl movb jge out and push xchg mov pop inc push iret mov test nop (bad) outsl out loopne daa and mov fidivl xchg inc les inc xlat lock adc xchg aam cmp lret jno cmpsb mov xchg jg cmpsb dec dec mov mov jbe in xchg lcall mov jns fnsave pop (bad) jl sar mov and into inc dec push iret sti mov sub add adcb add out hlt and cltd into mov and ficom (bad) lods sub sbb pop sbb add fstpt bound dec xchg jmp sub and and into (bad) mov mov jbe js jmp lods jbe mov push inc push xchg ljmp popf repz mov and leave and mov daa inc dec dec sbb fmuls out lds (bad) mov movsb loopne jg sub lahf cltd pop nop daa lret mov mov int3 sbbl ret shlb (bad) popa aas mov jmp xor pop xlat pop cmpsl push ljmp mov sbb mov and into pop pop adc inc mov movsl push cwtl mov dec ret test sub (bad) and aas adc dec mov arpl push inc ss in dec xchg outsb mov ss ds shrl and jge outsb int pop mov lcall adc bound pusha cmc scas sub into test inc icebp inc ss jno sbb mov cmpsb xrelease and xor into repz push mov jge scas sbb out outsb xor lea pop dec lods inc cmp sbb or in cmp and xlat (bad) std repz enter push insb push xchg outsb fidivr mov adc icebp (bad) mov xchg mov stos das js mov sarb sahf loopne mov push or pop cmp add ljmp sub int ja add out mov xchg push aaa ja lods xchg lds xchg mov xlat push in ret sbb pusha push cmp into roll mov sbb pop arpl mov fcoml adc mov or (bad) movsl rcrw and loop les (bad) xchg jae dec jp ret sahf pop sub divb movsl lds or rclb and sbb and lcall push addr16 xchg dec pusha and inc cltd mov outsb out mov dec inc shl jbe xchg push daa popa clc mov dec cvtpi2ps adc test roll mov test adc push jne test push test and lods pop mov scas dec jae daa add cli (bad) push insb xchg mov sbb xchg and notb jp xor stos arpl mov mov dec call popa pushf sub push inc jle jb dec hlt or push pop dec sub stos fdivl pcmpgtb fdivrs ret mov fidivr lock lahf xchg (bad) icebp jg repz aaa inc push mov mov test repnz bound add sub mov or pop lea shr adc push lock stos imul mov movsb jbe out cmp fwait jbe iret lcall mov aam sub adc insl cmp mov mov fimull sub adc dec adc sub lret jle loop cmp add jnp es inc push ljmp lret mov cltd mov add push ret pop sti jno js pop sbb push dec mov cmc jae jbe jmp inc cltd notb cmp sbb xchg cli lds cmc loop mov inc imul and add sbb icebp pop inc xchg pop mov int shlb inc nop mov xor lods in inc gs fmul in lods dec xchg or sbb cmpsb aaa outsl into lcall cmp scas and lret lock jb jp push mov lods std outsl adc cmc bound adc push icebp jnp mov cmpl mov in add int3 ret aam out mov push shlb test cltd cmpsl outsl dec test test into mov adc (bad) add (bad) xor pop sub sub fdivs stc loopne sbb and pop cmpsb rorb mov cmp (bad) (bad) xor mov mov and push lea inc sbb (bad) sti inc xchg dec cld aam adc js add pop lods pop sub orl std aas pop lds es jmp movsb pop mov mov (bad) push mov and inc jp inc cmp rolb push xor pop cmpsb dec lahf sub in push add sbb (bad) ljmp ja cs lret adc dec test addl mov daa add rorb push addr16 test inc dec arpl pop mov xchg sahf push pop sub sub and loope jbe jecxz adcb push lds or movsb jl fldcw imul rorl xchg popa mov clc dec aam push lret int adc fs sub dec sub push (bad) mov sbb rcrl or lods xchg inc scas mov lret ss cli mov out inc jmp in mov out mov stc dec jns add mov adc sbb (bad) jb xlat adc fcoml jno or push jbe out in mov add xor dec push lea inc cld cld adc jg dec or nop jb push jns lahf outsl sub cltd fisubrl add sub xor iret jno pop (bad) and int3 xor insl mov dec push push popa mov cmpsl (bad) or pop add adc xchg fs or adc push pop popf pusha or stc adc addl push add in push add mov push mov loop je or in add mov push call call lret jmp push mov loopne jg mov lcall es mov adc cmp xlat add jnp or inc repnz adc dec jb xor jg sub outsb in pop cmp xor lret bound out loop adc lea pop into cld mov jmp nop sbb sti (bad) decb test or cmp loop cmp mov xor lds mov stc dec ja add (bad) iret in or dec adc jge cmp jp mov cs and dec incl popf jle sbb aas jbe mov mov mov out add in inc bound inc inc mov push jbe mov sti stos jge mov push push inc sahf push test adc cmpsl xorl stos dec shrb add xchg adc daa jp push jnp addr16 jbe clc into arpl jecxz sub enter cmp xor mov inc lds daa push verr in pop popf inc adc je mov stc hlt mov push xchg mov pop inc int3 inc sbb test inc fnop jp sarl insl xor pusha ds cmp out test push mov popa dec popf mov mov into (bad) sbb ret add xchg xchg inc loop mov and fldl mov inc addr16 mov test mov mov lret adc jne into sbb sub dec or fcomip xchg pop jg (bad) arpl sete cmp dec xor sbb pop (bad) xchg in test and sub in cltd xlat notb (bad) insl xchg xchg aas inc cwtl lds mov cmp call cmc pop and jns pop add sbb orl jns lds fild es clc xchg rcrb repnz add jb push (bad) mov test negl les shll xor in xchg ret cmp inc pushf mov (bad) mov out inc add sbb outsl sub jl nop leave jne popl adc test add jle and pop xchg lock iret outsl pop popa mov add fcoms fsubs test push adc sub es in roll fnstenv add gs in jnp test sbb in jmp cmc push shl fnsave xlat or dec outsb mov sbb xchg (bad) mov int xchg js ficom test and sub jl mov mov cs subl scas xor dec in imul (bad) xor or (bad) fldenv sub sbb bound jge jo sbb ss sbb lock loop (bad) (bad) sbb sti jbe aam sub lods cmp fsubrp sub mov addr16 cmp mov mov jno xchg jle fs jmp lret lods inc iret pusha mov push lcall cmpsb pop fmull fwait add ja adc xchg jmp sbb cli sahf scas pop mov xchg add imul test push sub dec add sbb (bad) sbb jnp cmp test add push bound xchg les scas or clc xor mov fist (bad) push push xchg into inc add dec cmc int3 xor dec adc xor jnp aad jne js cmpsl jns jnp pop xchg mov add sub jnp jle xchg inc sarb cmp jbe adc jnp dec out stc enter or (bad) ffreep (bad) hlt mov orl cmp cmp pop lret push lret inc jmp (bad) std xchg aad rorl iret lea add dec push mov je cltd aad jp dec das push sub mov lret jae (bad) mov add stc pop jge roll cli mov (bad) lock jno int3 jns mov xor loop adc fistpl test out jbe lea in in sbb lret daa sub stc push xor int3 aas pop sub popf outsl imulb fcmovbe mov jne scas mulb or sbb sub push mov mov cmp adc sbb jbe pop je,pn sub mov xchg sub xorl (bad) daa cmp add in adc lret movsl lahf cmpsb les jne outsb adc fwait xchg push xchg fistl sub mulb cwtl stos out in inc popf sarb push imul xor xchg jne testb xlat xlat push clc pop push cmc dec sbb mov pop cltd outsb mov stos mov ja xchg jmp pop ljmp in addr16 fwait cmp dec pop mov ss fadds mov cmp adc mov mov ja lods or pusha sbb inc mov lcall mov push (bad) andl jmp mov in ds bound (bad) into pushf jb sbb sbb xorl push mov push adc xchg xchg lea out test adc insl xchg xor jge xlat jne jg (bad) cmp inc push leave je (bad) mov lret pushf add fwait mov lock repz jne mov imul dec loope xchg sbb jb sub and repnz fisubrl pop or jmp mov es pop xor push xchg (bad) imul and sub inc movsb pop orb fs ffreep insb inc notl (bad) pop jb loope sub bound sbb popf jns pop pop iret fwait xchg insl popa leave jg sbb xchg rcrl rorl sbb loop gs jo das je cmp or gs jg sarl movb lcall or sarl xor cld popa outsl dec dec sbb dec cmpsl jo xor test cmpsl jne fsubl lcall aaa mov andl scas push leave jmp popf push cmp mov or jle ficoml cli xchg mov cmpsl and sub xchg pusha or aaa add cli cmp cmp jnp mov xor mov mov cwtl push loopne fstp lds fs lock call loopne dec pop pop pop and in mov inc js inc dec xor in rorb repnz movsb leave sbb mov lods dec pop sahf dec imul jle sbb dec test sahf and int inc add lea clc lds shll aas test mov inc or faddl xorl sbb push insb mov aam sbb movsb xor js mov inc push movl push jae xor (bad) adc inc ljmp (bad) mov xor repnz dec or or fs xchg insl movsb fildl arpl movsb sahf insb into xor daa push sbb mov xor adc aaa pop daa fnstcw jae push pop aam sub sbbl inc (bad) mov cmp (bad) fnsave dec xchg xor (bad) or mov popa daa lret pop cmc ja lods addr16 cs insb subl das xchg mov push mov mov and mov and push iret adc out mov repnz stc scas jge pop dec dec ja xor fstpt inc cmc fiadd scas shrl sub jno addl jmp fbstp ss rclb (bad) sbb jnp nop sbb cwtl push std sub mov iret or and inc jb gs sub lret pop cld xor stos mov dec test cmp inc imul jmp inc outsl (bad) fcompl and cmp sbb and push sbb add pop ret jg cmc fldt inc in (bad) cmc notl fildl inc and enter push jle popf xchg aaa js cmp pop jo inc mov cmp sar add popa pop xchg inc outsb mov mov jecxz mov aas or into mov popf xor xlat neg out or insl ret mov fidiv test divb decl pop jo rcrb aam (bad) aad enter pop adc pop dec bound sub mov fisubrl jns sbb test int3 lret hlt pop push sarl ljmp out sub (bad) mov mov fbstp aas inc stos cwtl mov js lcall mov stc xchg rcrb js lret add push dec dec das stos sbb mov dec push xor daa pop rcrb (bad) dec mov xchg aaa clc add stos xchg cmp xchg ja aaa repnz ret dec fmul stos gs pop in stos xchg push sub sub add addr16 pop dec sbbb lret ret mov movsb adc mov or inc mov push adc loopne nop pop les enter adc sub (bad) popf imul shr sarl (bad) cmp add push or mov jmp inc sub cmp dec lret aas divb cld and mov cmpsl push push mov pop fs xor xor mov and lret sub jo scas xchg dec mov aas iret ss jecxz push add loop popa (bad) shll mov mov je push inc push imulb mov fild stc jo rclb mov xor cmp or cltd push cmp or push arpl (bad) cld mov iret add aaa or (bad) mov icebp out imull inc gs aaa mov xor mov cwtl and icebp repz cld lock enter mov adc outsb jle (bad) xchg out cmp nop dec xor (bad) xchg add je pop les jp vmulsd lock xor scas cmp fdivs dec cmp incb pop sbb push pop test mov ret inc mov adc (bad) stc int3 icebp rcrl negl push or hlt mov daa mov sbb inc jae out nop (bad) test jge in cltd jae (bad) sahf aam ficom hlt add mov adc mov xor das shl and aad mov fwait iret ficoml adc popa add jae jg cmc daa inc mov lahf and (bad) (bad) mov xchg clc (bad) loope mov lahf xor sbb gs out cltd subl arpl loop popf cwtl rcrb lret inc sub mov dec xor pusha ss (bad) inc fisttp cltd dec out jae inc pushf sbb cmp mov xor lret push add pop jns out sbb push xor call lcall cli test and das ljmp xchg mov xor push jmp daa jns divl std es cmpsl repnz adc dec inc or faddl outsl mov (bad) ficom cmc sbb out outsb fsubl xor pop ljmp idivb into ret cs js rcrl iret mov push push shll and jb iret jo stos paddusb in adc xor out mov lahf icebp fwait (bad) rclb dec inc std mov pop mov (bad) ljmp cltd fcoms push jl test mov ljmp push ret aaa and (bad) out lock das ss lock pop sub imul or (bad) mov sbb rclb xchg jmp test inc pop icebp jmp rcrl cmp test out jbe dec test cltd inc into pop sub iret movsl gs fidivr imul stos scas shr nop (bad) (bad) mov mov mov cmpsl outsl in xor in jno out rcrl repnz inc xchg pop add out ss mov inc xchg icebp std and push jl dec fxch inc insl cmp jne xor test cld xlat xchg jl ret gs test test dec mov mov int jns mulb or imul push xchg inc gs pop lret out mov mov sub dec xor ljmp sub dec js xlat insl sub lds stos sub dec push inc divb (bad) mov imul lret xchg push push sub pop bound lcall aad fcoms mov mov mov cmp fwait sbb imul mov cmpsl lcall clc sahf out ret ficomp or andb cmp fldt imul out xchg (bad) dec dec mov (bad) lahf mov pop movsb xor mov js negb daa sahf ja cmp jecxz int cmpsl dec mov push jg mov inc inc call cmp fnop adc mov js addr16 (bad) xchg (bad) jp mov and cld inc in xlat je jno daa xchg sbb out fisub mov fisubrl mov (bad) addl inc enter jp out repnz mov mov or inc mov adc cmp nopl xor out push test test leave jb insl xchg cmp or cmp insb or test je movsl jns into (bad) cmc inc (bad) leave push (bad) mov push loope jns loope and (bad) dec adc sbb lret pop ret arpl lret cmp sbb adc add rcrl daa shrl xor pop pop xor lock ja test add mov mov or icebp dec stc mov add loope mov mov orl sbb scas cmpsb movsl jecxz,pn dec xor or xchg jo push aad or jg pop pop cmp repz xchg cmp push or movsb fwait insb jb adc je (bad) mov sub mov out sbb (bad) popl lret je cmp push imul jo stc jo sbb add sbb popa cmc adc (bad) xor inc dec fucomip push sub jb jne add rolb rcll or xchg dec scas pushf lret loopne or mov or push mov mov repnz sub into movsl mov push pusha pop dec (bad) sbb pop lcall int faddl jg hlt sbb mov scas mov sub aaa fcoml cld adcl jecxz movsl ret push repz push lahf inc (bad) loop test jbe out clc pop inc scas adcl inc sbb clc xchg movsb imul or adcb fisubl jecxz popf stos sbb hlt dec std sbb out push xor jl rcrb sbb adc mov push lock xchg inc xchg jge add sahf pop mov push cmp cwtl xchg mov inc fisubr and aas gs sub icebp (bad) mov push xchg lahf aam push xor (bad) xor push out ds add add pop dec push pop (bad) aas cwtl fdivrs in cmp jns dec sub xor jmp lret rsqrtps cs rclb aas dec mov xchg data16 adc inc insl cs fsubrp out jb lds cmp xchg jae mov ss mov push incl mov pop aas xchg pop mov popf or xchg inc outsl (bad) sbb mov adc jne sbb aaa jle add add jbe jmp push inc (bad) dec dec out enter jnp inc (bad) jge rorl sbb jecxz sbb in rcll add push push pop push aas (bad) xor mov mov sar jb je mov mov xchg adc leave ds jo les loopne aad int into mov jne jle aas int3 out movsb mov enter lods inc dec in pop int mov sub xchg xorl xor int mov jg je or fbld hlt les ja mov ret adc ja outsb xor push ret scas int jmp iret xchg xor iret cmp xor cmpl jp sti call in xchg popl (bad) out sbb dec xchg shlb pop imul fstps sti push add out lods je daa sbb xchg sub mov popf cs xchg mov lock imul mov mov sahf or subl lret fwait aad negb cmpsb (bad) movsl and cmp xlat in pop xor inc outsb aam out sub imul and cld out ret pop test pop sbb pop cwtl pusha mov test les push sti jecxz pusha pop jecxz sub or cmp ljmp cwtl cmp jmp push mov inc xchg ret cmp xor lods cmp push xchg mov pop ficompl mov jg pushf popa pop inc pop fdivrs arpl sub insl movsl add out imul add pop xor jnp bound or cmpsb sti push (bad) sub inc ljmp sbbl and (bad) xchg daa sub fisttpl lock push std dec xor fwait sti pop xchg pop movsl mov sbb xchg xchg fadd sub out sarb inc jle jmp sub adc pop fwait dec sbb rclb dec mov rolb cmp xchg dec sarl cmpl sbb ret lock outsl inc lods dec jnp cmpsb push bound test sbb sbb aaa fdivl mov pop xchg call pop cmp cmc sbb add mov mov cwtl cli pop dec adc mov clc mov imul js (bad) das jns loopne inc scas jmp mov sub and nop into lods into imul mov jnp loop mov xchg icebp sahf push (bad) out pop pop ja insl iret jl stos jge (bad) aad sbb test sub mov (bad) (bad) orl fbstp fcomip and xorl xor xor (bad) testb fisub (bad) lcall fisubl loope outsb jmp clc popa xchg cmp jb lahf mov push loop pop iret or int3 ja movl dec test movsl (bad) dec lahf push rolb fadds cli push mov sbb add aad roll outsl xchg xlat outsb cld lcall dec or aaa int xchg addl mov push sub xchg or add xchg (bad) xchg ljmp xlat fwait sub and cmpsb cmp fnclex xor lahf cli outsl push insl lret add aad icebp gs insb mov pop push push mov inc add mov lret lods jge pushl cmp mov xchg pusha xchg push mov test popf mov lret test stc sub out sar mov push sbb popf ljmp inc fldcw or xchg mov and cmp popf mov (bad) int3 insl out fistp (bad) jle out outsl and fildll out or dec rcll sti fdivr jmp push xchg mov hlt dec arpl add bnd je cmp in out pop mov sbb sbb fldl out sbb adc bound movsb arpl jg cmp sub sub inc cmpsl jle adc pop lock lods mov and loope jb outsl add adc psrlw push daa imul pop add (bad) call and adc and rcrb sub adc outsb xchg pop mov test or and xchg fnsave push aaa mov push push dec (bad) les das mov mov in insb ds out mov and ret dec mov pop out pop (bad) enter sbb jp fsub jmp stos cmp roll jnp insl xor xchg jo ljmp clc jns pop arpl sbb sbb pop xchg ja adc mov and pop inc jge inc push outsb xor xchg iret jno or xchg cmp xchg lods push out xor (bad) lds lahf fldcw mov jae popf stos jno imulb xor out mov jne dec jecxz (bad) xchg in stos jl and (bad) insl out test outsb test push iret pop loope fwait retw call and je loopne mov stos mov je fbld dec das dec xchg cmp push inc mov and pop push in pop aam adc pusha inc lahf rorb cmp sub jmp jo test sub add sbb mov mov mov jns jl pop adc out insl je loope add fwait imul mov dec mov push outsb arpl mov inc and cmp push lahf push daa sbb jge sbb repz push mov roll cli (bad) lock imul xchg inc dec mov pop xor push pop add push insb dec jnp push cmp cwtl aas xchg sarb push mov fidivrl inc adc inc fistl shrl leave dec push or addr16 jg hlt sar inc sub mov fwait cmc push pop adc divl jg into insb leave adc inc jmp (bad) in aad mov ret dec pop cltd xchg out sub cmc rorl adc cmp in push aam mov xchg inc nop scas xor dec dec dec ret xor nop add sbb lea add fdivl in push daa cmpsb sbb adcl dec mov adc cmp sahf mov (bad) jp (bad) in pop mov (bad) mov inc sub jae loope or mov nop add mov in or xor in xlat dec data16 cmp shlb mov mov xchg test mov sub and es movl xchg out jp inc mov jmp xor push pop cmp mov (bad) sub xor mov fs (bad) push lods push std mov adc and (bad) bound pop xchg xchg ret mov nop lock mov mov add fcmovnu mov jp clc xor dec icebp xchg mov ja inc loopne add addb mov in lds test ret dec mov mov pusha gs int and shlb hlt xchg adc push xchg and jns mov test adc std inc repnz mov pop inc stos ficomp inc add icebp movsl lret sahf fwait bound nop lods xchg pop sbb negl sbb or test loope fwait push lcall imul and mov outsl or jl ljmp out and aas fcmove (bad) clc xchg fmull adc and jg xor inc jmp jl jmp mov adc inc leave jnp sub aas stos xor fdivrs mov out ret dec dec and adc gs (bad) mov dec sub in test mov push insl pop insb pop sub ret cmp insl pop hlt mov (bad) cmp movsl dec iret adc sub loop mov dec addr16 bound or pop fistp cwtl xchg pop iret sub mov (bad) popa and jg push or cmp pop sbb inc xchg push mov (bad) mov xorb push pop or outsb inc sub dec mov pop adc mov jne fcomps and les mov add lret adc cmc push inc cmp dec mov aaa frstor jl lret mov (bad) fiadd imul pop cmp or pop push jp push mov push sub inc roll push mov cmp cs sahf mov (bad) xor jo and dec bound (bad) imul lcall pop xchg push mov sbb rolb pop imul lsl adcl adc mov call sub push insb add sbb pop fs popf loopne mov stc daa sti lods add daa (bad) jo je out mov cmp aad push fildl push sub inc fnstcw (bad) das push int jns and sbb push fs test jae loope je inc lea push aam sub inc mov int3 outsb lcall cmp (bad) xor insl push ja ljmp adc xchg push xor mov jae pop fcmovbe pop test repnz lds leave lds jmp sbb cs imul mov sub repnz cmp xchg movsl cmp ret int pop pop nop dec cmpsl and sbb (bad) repz std and ljmp in xchg pop sub dec idivb pop xchg icebp sbb stc push jnp xchg mov loope push bound inc or lds mov call add inc inc int jle mov xor test xchg push adc (bad) inc sub lahf inc sbb jns into pop jae xor mov mov sub lcall mov xor sahf or loopne xchg jmp (bad) lahf test jp xchg and in mov mov ficomp test push dec repz xchg lock mov enter mov pop scas add movsb fiadd call sub push mov adc adc fisubrl pop rclb fnstcw mov pop loop repnz mov pushf and incb ds push jno pop cmp pop and pop rcrl mov js dec and jb and sub and dec inc out movsl cld dec mov sahf out sub mov mov cmp mov arpl dec push cli lcall or pusha out loopne fwait xchg fwait movsl repnz xor test xor fnstenv push testb dec pop int3 adc and xor inc mov (bad) mov sbbl pop out push ds out and mov xchg jo and inc sub xor outsb inc pop rcrl movsb fisubrl enter mov and int3 cmp test xor repnz test jle cmpsb into add jb mov in test add jmp dec mov iret (bad) jae loope cmpsb clc shlb scas int3 (bad) iret dec je adc xchg xchg cwtl pop push adc jge sbb ficoml aas push dec cld xor rcrb xchg mov dec into mov stc push cmc dec cmp aaa sub adc push loopne subl fsubrl mov mov in sub mov or inc mov jno push rorl mov addr16 sbb mov sub sub dec push pop scas hlt dec or icebp xchg cld int jle call out outsl js push fwait test mov add popf jp imul test dec cmp faddl cmpsl sub adc lea (bad) mov lea xchg xchg out jo dec xor push xchg popf xlat pushf adc push aad fdivs mov inc out sbb test in ret es add fnstenv repnz and sub adc push jnp jge cmp cmp out jne inc test in xor mov insl jne cmpl add jns subl outsl jmp cmp testl rcrl test pop mov sub or test (bad) clc sbb aas pop stos sub into lock inc and cs test ret sbb and jno pushf mov cmpsl jns pop xchg cmp movsl jmp out int3 mov mov (bad) xor sub scas jp (bad) xor cmp pop mov jnp (bad) lret xchg dec pop shrl xor push jo jns add xor cmpsl fwait daa jle stos xor jbe jmp mov mov or lods xor xor and inc add or fimul and mov pop gs adc jge jp or jb pop xor fstp jecxz or mov (bad) mov loope rcl rorl jnp fwait add xchg pop (bad) jae mov inc gs sbb jbe sbb movsl das mov push (bad) mulb pop test outsl ret pop inc aas enter pop adc add mov push xor mov sub mov or xchg mov (bad) cmpb js sub andl add lahf sub pop sub push push mov repnz mov data16 bound jecxz dec xchg xor stc jne,pt xor mov xor jl ss gs hlt ficom dec inc pop bound xchg xor int in inc repnz mov xchg mov sbb add pusha into (bad) js fist add inc sbb dec fidivr paddusb (bad) int3 (bad) push inc or dec push mov xor adc pusha xor jg in icebp ficom int mov test rcll loopne dec jmp imul inc cmp jnp push add enter popa sub adc lret aas inc cltd int3 adc scas push mov lcall scas je stc std int push mov lret jmp add jecxz rcll jg add jns sti sbb lock lea inc ffreep sub mov add sbb aas rcrb xor dec das nop jecxz cs cld inc shlb loopne outsl mov fmulp xlat gs shrb pop dec mov pusha jp pop (bad) pop clc push mov cmp mov mov sbb inc fdiv js repnz jg jbe fnstenv mov jle pop das sub call xor and inc or out mov incl call test xlat cmpsl xchg xchg sbb push sti cmpsl ljmp xor iret (bad) jae jns cmp dec sbb mov movsb inc fsubr rcrl lea or les jge fidivr inc cmc dec add mov std pop jg dec cwtl pushf push sahf out sub adc cmp test jecxz xor aad test jns sub (bad) repnz enter mov (bad) out pop xchg pop clc imul orl loope shll insb loop aas adc je sbb sub repz pop jno sbb push cmp fidivr stos pop mov and and xor or mov dec out pinsrw cld jnp mov push sbb sti imul xchg sti xor lahf mov jae call js mov jl int stos xchg sub add mov sub scas psubsw or pop push jno pushf add dec mov xor outsb rol and mov lods mov or xor mov cli test js mov push inc popa icebp and (bad) push (bad) popa sub jge jl les mov inc lods inc subl cwtl jl,pn scas repnz cmp pop jge (bad) jl cmp xchg mov test xor test loopne pop lock adc inc cmp lcall mov insb xor inc rorl out es pop cltd imul daa ja inc sahf jno xor sub aad pushf cmp xchg add mov sbb stos icebp cld nop push hlt ret iret jmp mov jb jge flds scas pop int3 jae outsb adc mov out popl scas ds stos ss fnstsw fs and out in xchg je cmp loope mov dec or mov ficomp (bad) cmpsl gs jnp jo mov sub push (bad) mov jecxz stos cmp lods cmp mov or pop sbb lcall cmp sbb inc inc into test push fimul add mov cmc mov sbb pop fdiv xchg sbb aad xorb push cmc inc cmpsb xor gs push jo adc pop mov push stos xchg or subl adc pop adc jno mov dec jg sbb daa cmp mov mov jle xchg ljmp mov mov call xchg mov mov or xor pop xchg adc xchg pop and add jmp inc jo adc (bad) (bad) in inc cwtl xchg dec or (bad) test ss jmp ds lret or sub (bad) cmp popf push dec cs mov jne test or and in idivb lds pop mov repnz cmp cmp jno (bad) jno je and push push mov testl inc pop and test xor cli stos aad (bad) in lods mov ds or pop add outsl (bad) imul iret aam dec pusha add dec lret xor push leave xchg pop and scas push (bad) dec push mov les pop push pop rol push movsb xor daa in out add loopne test cmpsb rcr adc lret sub xchg mov jne xchg (bad) call inc out iret out orl test and add sbb mov inc mov ja repz iret mov enter pop ja cmc mov iret pop aaa mul dec (bad) sahf stc test and lock cmp in bound mov sbb pushl cli cld sbb jp xor mov add mov push addr16 add mov pcmpgtb jne fstpl and std xchg push mov mov (bad) divb push cmpsb xor xchg dec repz in sbb push shlb jne fcoml outsl jl call repnz cwtl in push mov rcrb fcmove sbb inc pushf aam add dec lea mov sahf sbb and insb xchg out mov or lahf int3 sub (bad) cmp mov sbb notl int push push inc adc aam adc lret sbb adc cmp aas jl jmp mov sub sahf cmp jmp jecxz (bad) gs popf jo pop jecxz mov adc sahf fucomip jmpw loop cmpsl adc jbe and add and into lods sbb lock (bad) jo cmp lcall fist test enter push addr16 mov loop out add movb loope push add in (bad) xor or xchg loopne jl cmpl movsb sub arpl iret cmp iret jg jbe sbb sub (bad) daa in cmp loop push lcall xor mov lcall mov jnp and jae cmp dec mov mov fimull adc jne lock in or mov or cwtl fdivrs mov xchg das mov lock jp fs loopne imul mov mov mov sub faddl test mov popf hlt sub mov sub pop ret fldt mov push scas add orl imul jns mov or inc lock in je mov mov fist and push fldl jecxz push in out rolb out adc popa lea xchg daa iret adc push lock cmc mov (bad) cmp out xchg int3 mov divl inc jge hlt lahf mov insl dec fiaddl sahf pop lds add outsl sub call xor imul fimull movsl push and (bad) cli push mov cmp push ret dec aas and out inc ja pop xchg pop leave pop xor xchg inc lea ret ret je roll push push push pop push test (bad) leave bound ja and ret jnp aaa cmp dec add and shrb pop jl (bad) aam cmp push xor mov stos popa loope js inc sbb jecxz imul cmp fnop cmpsb dec sarl dec cmp adc cli xchg mov pop cli nop inc les jnp js mov (bad) cmc (bad) aam repz daa int3 movmskps push mov jnp fdivl jnp out sub mov (bad) xor insl aam pop push fstps in aam or (bad) arpl sub imul popa xchg xchg repnz and test inc push xor jg jp icebp jge test add cmp inc mov cs fsts push (bad) add push jnp jae fwait hlt cmpsl ja adc faddp sbb jns stc push lock mov int cltd test outsl pop mov fs adc aas enter popa js and push xchg add popa enter xchg push mov inc mov repz mov stos cmp ljmp lcall cmpsl ret adc es std and cltd iret in (bad) cli push outsb inc je jns in (bad) add pushf iret and cmp add andl mov (bad) mov push sbb jp test in dec jle xchg sbb sub stos (bad) pop push cmpsl xchg xchg popf push dec pop or mov popf lea aaa mov cmpsl (bad) adc jecxz divl cwtl icebp fdivl mov hlt outsb and lods add mov es sub cmc sbb insl dec sbb cs push mov shlb and adc loopne aas ret mov imul pop sbb aas aad cmp mov cmp or bound test inc or inc jbe cmpsb mov cs sub (bad) mov js clc mov cli pop movsb pop mov mov movsl jge imul fsubs out sahf mov js xor daa cmp fnstsw inc dec pop pop stos pop es push push int mov ficoml scas push jbe or pop xchg xlat notb jne fwait loope sub out inc push scas add pop roll push dec test rolb out sbb sbb push pushf (bad) mull sahf imul clc sbb mov repz in mov add shlb or cld mov ljmp push push and or scas (bad) mov es inc lock fs or stc dec jmp ret in scas outsl divl pop pusha add sub (bad) cmp ret push pop xlat add sub sbb sbb es cmpsl (bad) pop popa inc jmp inc cmp adc cmpsb sub mov pop in inc fstl xor test cltd xor pop and jp lahf push pop fsubrl clc jnp lods xchg inc adc mov mov push mov inc cld mov loope push ret mov mov cmc das pusha mov xlat test cmpsb xor jbe xchg mov int test fisubr jb clc test mov enter adc xor adc mov pop daa pop pop jg jl (bad) rolb inc cmp aam int3 pop sbb es cmp mov add fistp outsl rol daa in pop or clc shlb or push sbb scas mov xchg and pop (bad) xchg xchg xchg jmp ss and push int pop decb outsb cmpsl test push inc (bad) push xlat jnp jno aam jne test and dec scas inc stos stos lret sub rcl xor mov jmp xor cwtl mov scas mov sbb xchg stos xchg (bad) clc hlt mov inc jl repnz sahf ja cmp mov repnz sbb mov mov push mov fwait mov scas and cmpsl (bad) and loop ja std cmpsl push call lea aam pop movsb push push inc pop in xchg sbb cmp iret mov mov icebp test adc or leave sbb insb inc inc xor mov repnz notl outsb mov icebp andb mov daa lock pop xchg mov insl add pop mov (bad) stos daa arpl lcall pop sbb or or and sub test leave ds jae add repz push (bad) imul jp sahf and or lods xor (bad) jmp cmp fbld xchg add movw inc rorb gs jmp mov (bad) repnz xor mov out jl jg cmp push adc popf lret mov lods popf repz aas gs test push ret shr jb jne add in dec subl push lret popa into div insb lods jae imul xchg fisttp (bad) xchg pop adc jge mov jle xchg les cmp and xor insb nop out dec inc shrl jmp shll ja dec inc xor adc aas xor int3 inc aad mov xor stos mov in div sbb scas add fs sub (bad) (bad) das mov xor (bad) xlat mov jae jle adc lods out mov out call add and cmp sub bnd fcoml lock jl pop push fwait in mov mov adc push or iret lcall (bad) or xor insl inc pusha mov mov xchg xchg and and lret lods xor (bad) jecxz (bad) or xchg mov cmp pop in and popa sti ret call (bad) fimul jecxz xchg aad cld dec rol js (bad) pop pop aaa push adc loope push testb (bad) jbe fist pop je int sahf xor mov ss sub repz test sarb call xor dec lea or out ja cmp imul movsb add bsf je jecxz jne mov push sbb movsb xor cmc frstor pop sti iret dec incl fistpll aas dec jne lret mov mov and adc dec pop cmpsl movsb in inc pop sub inc mov xchg pushf pop testb mov add xchg mov sar cmpsl cld mov (bad) cld mov insb and mov fiaddl push sbb fsubl lock lret aad rcll mov shlb mov cld jmp popf iret lcall ret lgs (bad) mov cmc xchg xor cmp pop and lods sub push aas lods push dec dec (bad) pushf sub ljmp (bad) jno inc add push or pop xchg dec out sbb fstpt inc mov and adc repz pop pop loopne fstl jmp insl mov mov sarb aam adc push outsl lock sbb je mov leave ds xchg repz add out dec in add int push shlb adc clc lahf pop bound (bad) mov cmp xor sub pop mov jge inc aas sbb xchg outsl jno mov inc movsb out movsb mov lcall pop scas dec clc lret sub mov jbe test add push add aad adc mov adc push lea push fistp dec icebp push jg rcr outsl mov pop inc aas or mov aam lds push inc jg mov loopne sub repnz sar cmp rcrl xchg mov movsb mov sbb xorl cwtl outsl test out mov jle sbb add fcos (bad) jne add add js out mov aam fstpt into dec sbb out mov jo,pt repnz loop pop mov jns outsb sarl ficompl test mov pop mov repz lcall leave arpl fdivs mov loop (bad) jae fstpl inc push xchg mov mov lods mov and push xor mov dec pop and add repz xchg dec mov dec adc mov cmp mov cli jmp mov das push jle pop lret add sti mov (bad) pop jmp add fsubs loop push icebp shlb xlat adc jmp movsb sub ret les bound mov jl xor xor je fs mov inc testb (bad) stos pop dec sub fwait rolb mov sbb cld add pusha mov jp addl icebp pusha fwait bound adcb test fstl loopne xor or cs (bad) mov jge pop leave mov jg arpl arpl loope ljmp scas xchg data16 sub or sub daa mov je and mov div ret mov jg cwtl dec int3 jp pushf nop adc jecxz cmp xchg ja jno mov imul in inc nop push cmp (bad) jb xchg xchg inc out xor fsub in adc pop push xor push mov scas (bad) rclb ds adc xchg test lock add outsb lods inc jo xlat pop push jmp subb mov adc je cmp les sahf jb ds push mov mov inc push outsb push inc int3 cmp xor in jae jne cld adc jbe test lods cmc test mov dec arpl lret xchg jnp nop je (bad) clc insl add (bad) into daa mov scas das mov inc (bad) idiv aas mov xor (bad) lea xchg jle adc mov pop jae adc test popf (bad) or lret cltd xchg out sbb es or shrl adc ret dec xchg rcrl inc adc mov movsl in inc inc xchg cmp es pop insb mov mov ret or pop dec or sub cmpsl push pop jnp mov jb jns je mov repz xchg and sbb or pop loope js xor repz push mov pushf xor mov push sub xor insb jbe insb mov xor add icebp lock pop add pop mov push push xchg rclb or pop in stos stc fistp inc call dec cmp lret mov lea pop into xchg les sbb jo xchg gs sbb cli aas sbb xor add rcll jge lret sbb mov aas (bad) aas sbb jle ds int loop int jl fimull mov mov pop sbb jg repnz cltd xchg add inc (bad) cmc push ror cmp sbb push sbb nop outsb xor je cmp mov xlat cmp scas jae in paddb add inc dec pusha inc sub push stos xor push jge push jl lret rcrl aad sbb push mov icebp xchg fdivp add xchg pop pop dec enter aas into xchg mov and jl icebp ret mov push jbe sub pusha aas out dec and mov mov jb pop push push fdivs lret cs mov mov xor fistl jno push cmp (bad) lock popf out pop jb pop iret repz mov mov movsl dec sbb (bad) mov out bnd and xor push sub add sub pushl sbb lds adc insb adc pop xchg adc or push cmp mov ss daa mov cmpsb bound out and (bad) in mov xchg int3 mov (bad) in idivl popa inc xchg aam and ficompl js cwtl es fnsave xchg clc xchg xor inc cmpsl popa movsl popf mov mov decb popl cmp icebp std inc adc in mov aaa lods xchg pop adc stos mov fsubrl sub out mov pop inc xor fs xlat inc xorb sbb xchg xchg mov in (bad) xchg sbbl push lods adc xchg adc test mov vpcompressq aam fadd mov loop aaa test pop xchg (bad) popf (bad) test cmp stos dec lret add pop arpl ss test mov dec (bad) cmp (bad) lcall (bad) popf mov inc fisubrl jns pushf dec dec mov je repnz push ljmp in push icebp ss ret jecxz jne das inc pop das adc mov into repz int3 push mov cmp aas xchg xor pop jno mov cmp mov or loop mov sbb cli sbb or or push or loope xlat jo lahf stos ret in jne ret das int mov mov mov and (bad) xchg bound and popa push into and xlat shr mov cmpsl rcl push sub je cmpsb push fildl jne pop xchg push mov sub ret or xor jle cmp shlb jbe pop mov push cs xchg stos pop cld inc cld pop pop loopne in sbb add xchg xor adc push jp adc jbe dec ja sbb ds cmp daa mov adc mov loopne negl (bad) mov inc (bad) loop mov adc cmp pop mov push loope adc cli test (bad) sub scas push shlb (bad) stos lock cmpsl fs lds ljmp clc jnp dec jno lret push or imul insl xchg (bad) js stos mov pop mov std push out mov in out mov cmp sub sbb inc mov pop (bad) sub xor pop jns xchg ja leave loop jns jnp data16 jne je and das xor out jmp adc sbb in and mov pusha add icebp insl je loope not lahf push inc sub inc mov mov bound push aad and ds mov iret mov cmp push mov cmpsb pusha sbb (bad) or mov and fimull add loop and ds adc ljmp xchg mov push loopne xlat or adc xchg cmpl pop jae (bad) lret test out jg and rorl int dec or push pop lret mov (bad) call aas jno or mov inc lret dec add dec dec lea aam xor inc adc pop jb (bad) sub or mov dec mov paddd mov int xor and pushf mov loop sub dec xchg (bad) (bad) es push insb push movsl or fcoms xor mov push out adc cltd jo loopne mov loope sar dec lcall push add das jnp ja jae insl or inc xchg ret xchg fildll int repnz adc fstpl pop mov push mov or inc aam inc or loope lcall les pushf cmp ljmp xchg mov mov cmp add fdiv rclb std adc and mov in lock xchg in mov icebp fwait (bad) out movzbl rolb mov ret fsubrl mov or xchg daa dec sub or cs loope pop dec add xor sub lds adc enter jns mov test add les scas pop popa sub ja lds call inc jp loop and and enter sub fidivr outsl outsb ret pop push pop in test repz sub addr16 mov mov xchg fnstsw or fbld jecxz xor dec sbb call xor leave xor stc lods aaa mov sub inc dec orl int3 dec lret mov push mov cmp call push xor lret sub mov xor xchg (bad) pop (bad) les jb or in mov fisubl adc icebp (bad) xchg cli (bad) fmull mov or cld call push and (bad) rcr std nop mov iret push (bad) ljmp mov adc insb (bad) or and out jae scas or inc dec scas mov lock das pop and lcall sti icebp push pop mov pop pusha icebp xchg pop dec out xlat push ret adc xchg stc cltd xchg icebp stos ret mov inc and jle cmpsl rdtsc (bad) dec js flds mov cmpsl fwait rcll jno xchg (bad) push lret mov inc aam jl xor jns and int rol rolb je ljmp jbe (bad) cmp lods mov outsl jg in negl rorb sti adc vmovsd adc mov inc loopne inc je push shl add (bad) into dec pop into (bad) mov or cli dec sub je mov arpl repnz andb xor insl out cmp (bad) icebp lret push mov sub sub addr16 sbb repnz psubd or cltd xchg mov out xchg in aam sub xchg ret mov daa jl and arpl cmp iret lods pop inc lret xchg lds sbbl dec add js leave fidivl inc lods sub (bad) xchg add mov fisubr sbb movsb and inc pop das imul stos loop fistl rcrb popa lods js cmp push sub loope addr16 or mov push push testb icebp das leave xor fwait (bad) mov inc jbe fdivs pusha jne pop push test sub and pslld lcall mov call inc (bad) push (bad) dec and das mov sar or test cmpsb (bad) and rdmsr mov sub adc jge mov add mov xlat lahf je movsl out xlat jg imul (bad) jno out or pop jbe xchg xchg test ficomp add push cli test mov fstl or pop and inc stc dec mov adc pop addr16 leave push enter pop dec xor fisubrl cltd mov add pop and leave les jmp fldcw jne outsb aas pop enter repnz enter mov fist pop (bad) jo call sub lret jp mull cli setbe or adc arpl xchg cmpsb ficompl jle repz mov mov lods mov cmp in stos dec (bad) mov pop xor ds movsb setns xorl sbb add sbb shrb or ffreep leave jns (bad) jno movb aam mov push adc add mov jg add fbstp cmc ljmp les cs into aad fidiv cmp (bad) sbb je or xchg insb mov jae,pt cld les dec fsubs stos jecxz roll call cmpsb and jno test or xchg push push push adc into out cmc xchg stos lret fmuls mov xorb js xor sub cmp vaddps push loopne mov pushf jge add lahf out mov ret icebp add or fwait pop sbb test (bad) dec mov dec in jne,pn mov out enter lods add and sbb lcall mov xor jbe push ror test clc fdivs cwtl outsb push add jb fist pushl mov cmpl pop rorb lods mov or aad test cs dec lahf xor enter int and arpl sti mov rorl out mov mov add adc cmpl cmp adc pusha shr dec dec jle arpl data16 inc xor inc sbb mov jo icebp stc sbb fsts mov iret pop cli (bad) xchg push lds fisttpll xchg mov mov pop cwtl fnstsw sbb push xchg sub in sbb (bad) xor scas mov mov mov jmp jns stc xor push cli xchg jle out xor mov mov jmp scas lahf ljmp push pop (bad) or pop insl pop jl insl repz lods or sti mov int ljmp cmc mov je (bad) dec adc shrb add int3 pushf mov mov lahf (bad) imul movsb inc movsl ret inc dec neg sti add sbb mov adc in mov or adc adc adc xchg and cltd mov inc pop mov add xor inc lret lahf jns rorb cmpsb scas jns jl mov (bad) int3 int add mov test data16 lret mov daa xchg mov jb push sbb sbb sbbb icebp push in gs xchg dec mov xor xchg or sbb adc icebp fdivr (bad) lds mov fildl or dec bnd mov pusha cmpsb mov scas in leave push bound sti inc pusha repnz adc test sub mov scas push jno,pt inc jle pop out xor sub xchg lcall dec fwait les jo shrb sub xor and mov test xor fdivrs push inc idiv cmp xchg loope cmp aam jle lock bnd (bad) push xchg push push or fistl lret inc mov lds pop sti mov pop push inc adc push mov lock adc pop shlb (bad) xor xor and mov int and std push js popf push xchg cmp xor inc insl int inc mov dec ja mov sub bound push inc repz orl leave clc fsubs sub push les mov sbb fwait push incl cmp sub (bad) lock out faddl sbb sub fdivrl mov and pop pop fmul jg jl test ljmp ret pop test push in popf dec xorl xchg data16 xor das insl imul test mov mov xchg push aas push xor fs mov ret and int3 inc sub aad adc imulb mov dec les insl cmpsl mov hlt loopne (bad) mov lds sub xor mov sbb lea movsl out or jmp in int3 rorl mov pusha add mov mov cmp gs and fwait nop ret outsb sarb or push lods aaa push mov das xchg mov mov xchg cwtl push stos imul or addr16 lret pop mov cmp arpl outsb movsb dec ret (bad) jmp add aad (bad) (bad) mov push sbb dec insl xchg jmp imul adc cmp inc cmp push dec (bad) shrb sbb lahf xchg or sbb dec std mov or push pop dec ljmp dec popf (bad) and lret inc xchg dec mov inc jg sub movsb dec jl inc push scas add mov push fdivs sub xor stc xchg lahf mov pusha repz mov sbb lret fmuls aas xor pop aas imul xchg sahf and jno mov pop jbe pop imull out (bad) pusha les dec xchg jnp addr16 jp sub or ja adc sub push lret xlat (bad) push pushl add addr16 sbb mov pop mov add adc nop mov movsb cs subb mov mov ret pop adc daa add xchg jbe leave pop fisttpl mov sbb imul ss and rorb add add imul pop push addr16 dec pminsw xchg aas push stc jnp adc out and mov xchg dec mov mov or fsubr add xchg iret dec jecxz pop inc sub mov out jae and pop mov je adc int pop jge orl inc cmp addr16 out ss or xor (bad) pop arpl mov repnz jge jae (bad) pushl jp call jbe adc (bad) imul mov sahf mov push mov icebp lods mov int iret inc or inc mov mov test push shr movl push in addb push aaa fisttpll adc sbb push mov loope scas adc into dec and cld pop sbb pop adc idivl mov addr16 mov pop pushf mov flds imul xchg mov inc sbb scas cwtl inc mov jno inc jne xchg dec pop sub pop pop mov mov add aaa fcoms push lods xchg jns sub test cwtl mov movsl adc push cmpsl fsubp sbb lcall outsl xorl push add inc inc mov into out in adc dec push outsb add fldcw sub aas add mov fbld loope add iret cs shl fwait sub (bad) mov ret (bad) lahf inc (bad) and sbb dec add jno add xchg out cmp push in xchg lods mov ds test int mov or inc sbb dec push insb mov rclb mov movsb ljmp xchg push cmp aam fs mov and sti or adc pop jns js push imul inc addr16 and dec cmp cmp push fmuls cmpsb push mov jge adc mov jae jns lea add adc stc or lahf aas imul sub scas cmc pop push sbb lcall add mov lcall lret fwait sahf mov scas cltd mov add sub or push cmp pop ret in pop mov pop in jno inc movsb inc mov xchg loope jle loopne cwtl (bad) mov jp or jmp and adc mov je fmull call push xchg inc sahf in inc rcr ret inc (bad) fisubr inc fstl adc negl jg (bad) leave adc gs xchg icebp jmp inc adc mov in fbstp sub fidivl inc dec xchg xchg js mov fsts push lret jbe outsb in cld aad sub jae scas aas notl rcl add xor push pop and aad cmpsb (bad) jl je movsb add dec into loope or std ljmp xchg or loop es lods pusha cwtl lock sub xchg xchg shlb fidiv test pop outsb ret push scas fcom pop dec and outsb push xchg push aas testl or aaa push cltd dec (bad) sahf loopne or mov dec addr16 stos cmp (bad) push outsl pushf and test leave test aaa jb pop test rorb incl adc dec stos sbb jae jge iret stos jne rorl out sbb xor js repnz push div std fs adc pusha push jnp sahf int3 rolb data16 add stos shrb in mov cld fcoms xor sbb mov pop scas pop and jg sub dec mov pop cmp xor adc lret int3 or push mov jo fstps xchg jl sar clc lods xchg sbb lret insb pop xchg les shr add push sbb mov push adc or in outsb in and sub inc adc or dec dec sbb inc push bnd hlt out rcr xchg cwtl ljmp mov dec xchg add outsb add mov or xor mov bound and rolb int3 add lea cmp add rolb ljmp lcall movl or ret inc sbb call add mov pop fwait popf or ret cld xlat cmp out fldt push outsl rcll mov jae xchg (bad) adc inc imul leave xor jns arpl sub test or aad mov int3 cmp aad out packsswb add mov aaa jae xchg mov xor adc movsb push push pop mov int3 enter add scas mov mov outsl push xor push out adc cmc aaa mov and dec sarl popf pop inc les lea sti sub nop xchg fistpl xchg movsb arpl orl ja (bad) mov imul xor push in notb into aas outsl mov mov mov jl sub fstpt sub dec sub push sahf insb jmp test mov cwtl rol out outsl mov lahf sti mov mov int fsubl lret inc out leave jl xor mov mov xchg icebp mov jo xor and adc call jnp call mov xor mov adc dec xchg cld fdivrs sbb pop fcmovnu mov lods mov cli dec cmp ds push mov and into or and scas adc adc (bad) cmp adc nop pop fild out pop push or pop bound mov pop add dec test sti cltd mov in add (bad) popf fnstcw mov cmpsl out inc rorb (bad) dec fsubl pop out scas fiadd inc xchg fmulp inc test jmp sahf ret scas or mov or (bad) jecxz fsubs xchg dec fs adc lods xchg int3 bound (bad) cmp mov mov lds (bad) fisttpll push adc jnp mov (bad) and inc sbb test mov mov jle stc mov adc push mov pop in inc push push pop mov test jp inc push sbb add mov push push test lock jg fild sarb mov dec xor jl ja sub rclb enter add clc xchg sti or cmp sbb mov mulb int inc lods daa mov fistl subl pop adc mov jecxz sahf les sahf lret jbe insb inc jg aas cmp cmp shrl sbb push sub insl cmp ret rcrb push (bad) (bad) inc inc dec lods hlt (bad) xchg gs pop adc in fsubs cmp out shlb cld nop cmp (bad) push or hlt (bad) or cwtl push or jo sbb push inc sbbb jbe dec dec mov pop mov pop bound sbb mov cmpsl dec nop jno ss ds jno inc repnz les movsl mov sub cmc shll cmp pop mov scas lret push aam sbb imul (bad) js shrb push pop fiadd in insl scas lds mov pushl fcompl lods dec (bad) jns insb adc cwtl rol and aas sbb mov out es adc (bad) sbb xchg sbb (bad) push in repnz loopne je call dec mov and pushf mov lods push sub add loopne sub mov aam cmp add push xchg out lcall cmp lahf push xchg cli in les fdivrs dec out add ret dec mov cmp js pop sub and xor fbld cli jb mov inc pmulhuw fcomip push cwtl ror lahf inc movsb xor sbb mov jb jg jmp mull outsl loopne loopne lds (bad) mov ss loope mov jbe push mulb outsl wbinvd (bad) pop adc adc dec sahf inc mov in adc mov push add bswap push out mov fidiv xchg aaa push jge xchg lcall test movsb loopne fcmovnu mov cltd or stos inc xchg leave imul lret jp (bad) icebp xchg popf hlt insl sahf pushf mov mov fdivrl xor addr16 fs push lock cmp or std dec xor and and repz fistpl js mov in repnz das mulb (bad) ljmp push adc imul inc fnstcw ret mov and stc push xchg mov inc (bad) gs jbe fidivr ret into cli cld mov ljmp jb dec cld nopl movsb movsl fs je dec adc test aam leave lds mov xchg movsl div daa in test sti lods xchg xchg adc jecxz cmp push ja inc xor rclb sbb or and (bad) fldt jb jl jmp movsl adc and int3 outsl lret xchg movsb mov rcll nop cmpsl loopne mov data16 pop mov adc shll inc add adc sbb jbe pop adc jmp stos pop out les shlb popf mov sub add adc mov mov push add test test fdivrl aaa repnz (bad) and adc push cmp add ss jae pop fmull fisttp sbb in stos xlat call imul inc imul ret jbe adc in jne dec and out repnz xchg mov pop je outsb add adc add mov xchg mov lea jp icebp or fbstp andl (bad) mov ss outsl sbb imul lahf incl pop inc mov loop jne movl fstpl loopne cltd hlt in xor clc loopne xor sbb nop fcompl popf cmp notl lret jle push pop sbbl test adc push add mov xchg icebp test fmull repnz lea movl xor ffreep adc push mov sub sbb xchg pop dec sarl sbb out xor push sahf adc xor cmpsl adc roll enter xor mov enter jne pop cmp ds clc loop in add and dec lods pop daa and into lods in stc xor pop mov out mov xlat xorl lret xchg sub sub pop cmc stos cmp push dec mov rorl dec or dec xchg mov out cmp lods jge mov aam or push imul adc or pop mov movsb dec push push test cmc ja sub (bad) mov movsl sbb jg inc out xchg push jae mov popf mov cmp mov adc daa cwtl xor loope (bad) test or mov fstpt jmp add repz leave stos (bad) push hlt sbb inc pop or cmp cmp add xchg loope ja sbb (bad) repz dec mov sbb sbb jmp sbb sbb dec xor xchg cmp ret sarb jp xor mov push loopne cli rclb aaa ds test bound inc sub fisttp cltd in jb jl lahf jmp xchg dec fstl lahf mov dec mov mov sub cs aas in pusha jo fnstcw lds jno (bad) (bad) dec jb std adc mov sbb test int3 mov inc (bad) pop push or mov jnp lcall sbb dec les adc sbb dec ficoml subl jmp clc imul xor (bad) pop popf mov pop movsl mov sub jnp in sarb cmpsb pop add jmp push test popa scas push or push push call pop lods divl leave aas mul push test adc loope fnsave movsb sbb jbe loop ljmp imul shlb cld pushf and add mov aas lods ss jb fadds call in dec rol push dec sbb pop and loope fistp ljmp addr16 sub fildl xchg out pop lahf push mov jbe mov dec mov add shrl add mov gs mov dec inc or repz jle in mov test mov mov int rcl sbb maxps imul fstpt rol mov lock mov sub lret hlt stos ret or aam ljmp mov shrb addr16 or cmp outsl (bad) out js cs xlat lods sub add mov inc call mov (bad) jno fimul sbb loope in inc bound in mov imul jl inc xchg sbb fidiv adc in call mov mov cltd xorl mov ds jbe lret sub cmpsl xchg dec xor pop jne,pt ja inc pop aam pop rorb mov add in mov lahf add in repnz popa (bad) push inc movsb sbb clc inc enter sub lds fucomp sbb sti xlat clc pop xor pop int jl cltd and or or daa in gs inc add sub test ret push outsl es outsb outsl outsl enter dec in loopne cmp lock inc out mov jmp mov (bad) cld das lret pop jge sbb aaa add mov shrl jp lds or sbb adc sub push stc mov rolb adc mov sub inc ret or pop mov cmp cmp cmp mov ret rorb ss pop lock xchg mov icebp lods jge fwait mov pop mov ja icebp loope lcall push dec push xor adc mov mov stc cmpsl std push pusha ja add insb push into pminsw pop je movsb adc aas call pop icebp sbb ljmp aad pusha cmp pop cmp imul or cli movl fs xor bound sbb sub pushf repz pop cmp push in sbbl arpl loop aam rcll mov mov and jg cli cli cmp dec jns mov xchg push test push bound jecxz sub repz sarl pop fucomi xlat push jmp push push xor cs andb ret ss dec cmpsl popf xor icebp fcmovnb and (bad) xchg mov push dec std fcom test cmc lcall ficom add aas cmp xchg hlt push subb mov std xchg mov push stos push sbb adc sub ljmp in cmc xchg sarl xchg and adc aam fildll loopne sbb jno push loope mov pop inc aad pop add xor sub lret xchg mov jae cmp nop insb inc jmp sub adc pop stos push pushf jge pusha pusha dec jge xchg aam mov cmp and std std jp cmp or cwtl fwait xor sar mov test hlt (bad) adc pusha add je jmp aaa sbb arpl adc sbb (bad) mov adcl cli repz mov (bad) (bad) cld xchg mov test repz inc pop and inc (bad) mov out loope dec test sahf push mov jae or aaa sub ja sbb or inc pop and or jecxz cmpsb int3 les inc cltd jnp in inc scas add pop aam pop arpl popf mov data16 jmp add ret jl mov push daa fsubs dec std jg inc mov test in out ret or fisubrl push sub xchg pop inc sti loopne pop jbe call and daa popf aas aad sbb pop dec jns std jnp bound les xchg and and xchg and cmp sub adc ds cmp xchg mov lock pop cmpsl dec inc sub inc jo jg repz dec mov mov add mov popa jno mov cmp inc daa stos jmp and mov mov out mov call repz fmul (bad) lods jl iret shrl mov sahf es cmpsb sub das add mull lods add dec dec dec add out dec mov adc test aaa push stos scas sbb xchg (bad) dec daa mov dec stos out shrb leave sub call inc cld les and fcomi in (bad) xchg repz mov int ret sbb mov outsb movsb jmp adc sbbl sbb inc loopne xor jnp push or sbb mov es xchg pop jmp push jne mov das out insl inc xor mov pop mov mov jle add out (bad) ljmp pop or aaa cmp dec sbb cmp fmulp mov pop flds fdivl dec inc mov bound jl dec (bad) and mov xor and outsb xor and hlt icebp out insl lock movsl jbe xchg jmp (bad) pop shrl mov cmp sbb adc push ja dec mov repz outsl std inc mov cld push push sbb cmc mov fstl hlt hlt inc out dec lods inc bound jb je insb pop xor cmp adc cltd rclb jne xor and aaa sbb lret sub and cmpsb js adc xchg cmc cmp xchg mov bound push pushf mov lahf stc cld cmp lock icebp lret iret hlt test lahf cs adc xor lea cmpsl arpl push pop (bad) and cld or lahf (bad) in (bad) xchg push sahf xlat push aam sahf orl mov cs cmp xchg andl pop in notl jb (bad) enter sarb sti (bad) jae (bad) pop out cmp (bad) lock inc pop jo cwtl and mov adc mov into insl ffree mov jge mov pop sarb inc mov inc loopne adc ja jb roll leave xor pushf fdivl mov add insb test daa in sbb (bad) out jno rol icebp dec adc add mov pushf jne and (bad) int3 fisubrl inc inc dec jge imul data16 mov ljmp dec jle sbb mov jae xchg and dec dec jne rolb outsl test pop or lea imul jecxz jp inc jbe or popa ret adc and int3 push adc lods bound push adc bound xor add add mov addr16 dec int3 pop sti cmpsb outsb inc and aad imul std mov inc mov rorb out cmp inc xchg iret adc jle push fsts mov xor test jno loope es aam mov jp push nop in dec xchg subl fstps (bad) popl lret ljmp clc sub inc cmc pop cmp dec pop addb sub les daa stos push idivb mov lret xor outsl adc sarl add pusha leave shrl dec into sbb int3 test fcmovnu mov loope inc pusha addr16 mov sbb fwait xchg jnp cld loop xchg loope lahf popa outsb mov loop lods test inc sub cmp mov push mov cli inc leave cmp shrl pop jmp clc and mov pusha shr in (bad) arpl sbb aas jo add jno das inc xlat cmc nop ret roll adc jae dec push pop shr int dec mov xor hlt push (bad) adc aam test std xchg ret icebp testl mov fimul cmp add mov adcl or iret mov test cmc int3 mov push sbb cvtdq2ps lret adc xchg push int3 aam or mov add xor sbb or gs mov sbb shr mov mov ss adc and pop inc or (bad) adc inc sbb jmp nop sub sbb jmp sub mov ds rorl data16 loop test push inc cmpsb scas rol hlt fcomps cmpsl and fdivs mov daa fsubl xor dec dec (bad) sbb push add sbb xlat xor rcr push xor adc jno mov sub repz inc sbb jae mov gs das scas cltd and dec mov mov fistp ss daa fbstp add mov ret mov mov pop jb rolb inc stos mov rclb cmpsb mov and daa adc mov jo lea xor sub imulb jb (bad) mov stos (bad) push pop sub test push cs sti pop aam data16 add jnp out mov cmp mov fidiv push lret test jbe or lret xchg or imul ss es rolb fdivl xchg shlb cmpsl xchg pminsw or add fidivrl push adc test xor cmc es sti jno sahf pop cmp loopne call and sub sahf fs mov cld mov inc pusha inc dec inc mov out jnp insl mov icebp add insl xchg lock aam pop decl jne add imul and push push jb jns push (bad) repz jecxz jle mov push mov sub pop jns cmc int add sbb jmp call push inc jne test (bad) insl js cltd scas outsb in push je sbbb xchg in adc mov and std xlat repnz xor adc push aad test cmp or jno lds fstl test dec lock xor mov ljmp popa test daa (bad) or sbb dec or cs jp pop daa mov lock imul mov xor pop mov mov repnz cwtl mov pop mov dec xchg push mov fs add mov dec mov cmpsl mov test std insl stos rorb cmpsb in lret ret inc dec call enter loopne addr16 stc cltd and fxch pushl adc in push add jge fmulp push and push es dec push fldl stos add aad js jg pushf add sbb les cmpsb mov subb pusha es sbb mov xor sub sbb inc js rclb fwait jp inc sbb mov cltd inc bnd xor sti sub mov and or imul fs stos les ror lret in arpl fisub mov cltd inc push and fs insb sbb push add xchg shlb xchg les hlt or mov pop or sti fwait outsb lret lods push inc xor and ret daa push and jbe daa xorl xor jp xchg hlt loopne popf dec mov scas lret cmpsl dec and xchg inc xlat sub sub jne out rorl les lahf jecxz cmpsb hlt ds cmc int stos outsb xor or outsb inc pop loop cwtl push movsl test leave sbb mov mov and mov cmp cwtl ret sbb in push int3 sub rcrb pop out rcrb and mov out repnz and in inc cmp jnp fdivs dec inc xchg push xchg rcll loop cmp std fstl or iret xor out call inc adc dec xchg mov fsubr cmp out int3 jmp fwait adc inc inc out (bad) in sar jl,pn daa cltd or fcmovu insl shrl aad cmpl jecxz push adc add adc jnp subl enter or cld outsb (bad) rorb test mov js mov push cmp insb bound aaa pop repz inc inc scas ljmp dec sbb mov rcr and pop in popa mov lret jno xchg enter loopne push jb jo inc mov mov xor add leave (bad) sbb mov (bad) movsl stos jae jno xchg enter call ja cmp ljmp xchg dec popa les lret mov push inc mov xchg jo sub sahf and sub call push out vmwrite xchg sbb ret ds insb jmp stos jg test jle stos push pop nop aam pop into adc imul bound dec dec mov xchg into sbb xchg adc scas sbb clc adc or push fldcw js int3 xchg xor xor in push fnop dec andl mov ljmp lahf rol xchg adc mov in rcl jge subl (bad) dec xchg pop inc push push and cld neg aaa cmp (bad) xor jle add setae loop loope iret add aad pop ror roll iret popf adc sbb fnsave jno jo mov dec inc test inc (bad) das dec inc jmp popf pop (bad) mov dec dec fisttpll sub repz sub ljmp xchg pop xchg cmp mov mov scas mov fcmovnb int xor and popf out and imul neg mov push mov adc es push xchg mov jb inc std sub sar or push inc sbb sarb mov or popf in inc fistpl jo mov add inc mov mov and jle cmc cmp lcall and push mov cmc jl xorl ret xchg mov dec in lds out es (bad) les dec mov std xor int xor jg xchg mov dec add mov aad sbbl or cmp pop aas aas jae jmp lahf (bad) cmp pushf pop rclb repz push (bad) dec loope cmp and rcrl mov outsb (bad) iret jp and dec adc ss jl test clc sub xor addr16 scas mov pop cmp daa push pop xlat cmc pop xor push hlt and aaa or mov jb pop rolb dec push mov inc inc or dec cmp dec adc dec sahf lret loop push clc or inc cwtl pop dec cmc ljmp dec out shrl xchg xchg inc imul cli fs clc pop add out in fistl pop scas daa mov (bad) lret ljmp and fwait orl das xchg inc and add pop adc jno movsb fadd dec pop gs xor popf mov (bad) cmp (bad) xchg enter push and mov xchg sub rcrb fistl mov outsb and pushf sub test sbb ret in fdivr jns and rep lea stos lcall fbstp aad pop add stc repz inc hlt push push out cmpsl xchg push cmpb addr16 inc sahf or xor jne sahf add jne or jmp sbb dec outsb fnsave (bad) cmp mov in les cmpsl mov cmp push pop lahf jmp das and sub jle push rclb test stos push pop gs add mov out stos iret cmpsl scas mov sarl add stc push add jg sbb sub pop push imul outsb add pop outsl icebp add and add or mov sbb or insb mov in pushf adc jo dec push int3 adc adc or mov int3 fdivl ja dec mov jno das mov xor mul sub push imul jp jns xchg and cmpl inc jo ljmp popf dec mov inc pop ret (bad) cltd inc xor xlat call push sarl sahf jl test pusha mov lods push or jle pop dec push daa rclb lahf inc and mov imul jbe cmp mov ret arpl push cmp (bad) fwait and jb pop mov adc into mov fwait stos test pop pop lret xor mov (bad) xor cmp nop pmaddwd xor or push mov mov clc adc cmpsb sbb (bad) cmc hlt push mov clc lcall or push inc xor loop outsb push arpl inc or dec mov push dec arpl mov nop mov (bad) mov cltd inc (bad) inc mov (bad) int3 jns or mov pop jge add sbb xchg sbb les inc pop mov rorl mov add fsubrs loopne push mov cmpsb adc div xchg rclb lret in jp in cmpsl sbb fwait aad add pop movl lret push jl pop push xchg jp lcall es loopne test xor inc jnp push aaa lock push mov loope cmp loope pop icebp (bad) scas testb repz pop sti sub mov sub xchg cmp and pop bound jmp cs add mov xchg loope mov sti xlat sub dec mov into xor pop shrb lret shrl outsb mov adc rcll lret (bad) and or mov aaa cmpsb cld jmp stc mov cmpsl mulb pop and ljmp xchg cmp dec sbb (bad) lret out jo in in stos sub neg sub mov sub (bad) lret sar stos daa jl add xchg xor fildl jnp mov adc ss loopne imul mov mul lret mov inc lock pop lods pop call mov dec xchg push fisttp jle fidiv xchg xor inc sbb cmp pop xchg push stc sub int enter jge repnz mov std inc call jns mov xor fabs imul fdivrs pop je cmp jae aad mov ret jle (bad) adc xchg imul loop insl rol andl mov sub in sub inc mov idivl inc inc xchg outsl ljmp int3 leave call add cmpsl into dec push lar mov mov out jl cmp sub imul sub xlat (bad) cmc les cmp cld out insb push push sub push arpl sti mov loop mov cli sub jnp call push adc decb and fildl mov mov sbb pushf cwtl cmp imul movsb push add adc or xor jp jae adc in aas push push or rolb mov cmpsb jne mov out sbb jno fucomip in popa or lret mov je cmpl xchg push stos sub popa mov xor fstpl mov mov push fistp add js pop cmpsl mov stos push (bad) fucomip (bad) fdivrp xor mov xchg push sub ret push rolb mov into or jb pop fcmovbe data16 (bad) xor or mov jge lea and loop in inc rorl (bad) mov jp ss pop cmp adc sub pop push inc sar adc push mov sbb outsb xchg mov or scas mov jmp dec insl (bad) enter stos out mov sub push push mov mov imul (bad) icebp (bad) push cmp (bad) ds (bad) jbe cmp push popf add gs loope btr sti pop leave stos mov (bad) mov adc jb and dec sub fdiv imul imul sbb adcl test pop (bad) mov and and cmpsb sub std shll sub push mov or fiaddl or jmp sti jg cli ljmp nop cwtl iret ja fwait mov leave dec adc push push push in and fs and popa psllw out bound ret dec lock lahf mov pop push jae,pt ret outsl cmp fsubr (bad) in jg fsubrs jns jp or xor dec fs nop adc aam movsl add jg mov cmpl xchg data16 cmc jns mov xor xchg fisubrl ljmp cmp scas adc leave in fs adc icebp xor and fstpt adc out sub repz mov push movsb push push xchg dec call bound shrl in mov sub sbb cli or xor icebp xor cmp xor inc in rorb lods idivl enter rcr xchg loope inc add jo (bad) repz and xchg pushf cmc push jp push sub xor sbb push pop adc bound cmp sub fildl out mov js ret std mov dec ljmp mov imul (bad) ja mov mov insw jge cmc push mov dec add inc sbb repz mov push adc sbb xchg stos (bad) mov push add loop xor push inc ljmp jno add xor push mov repz dec fcmovne fldcw shrb cmp jge adc cmp sti and mov call (bad) je movsl xor jge add bound mov dec rcrb mov and pusha push mov mov nop pop pop das orl mov xchg cmpsb sub rcll lahf nopl or roll xchg add cmp je arpl mov scas xor pop repz je popa int3 inc inc mov leave jge adc (bad) sbb lret aaa or icebp stos dec xchg push cmp cs adc dec mov lods sti in pop ret inc xor les decb repz movsl mov xchg mov or xchg push xor or aam ss jns cmp pop sbb es pop xchg pminub mov stc sub inc xchg mov mov mov out mov shrb popa jnp loopne and add cmp adc cmp rclb and dec enter pop push fildl pusha jg sbb xor rorb mov insb mov pop sbb flds pop pop int jge push push jle sti and jmp sub rcr pop or xchg rcrl sbb mov sbb add loopne inc add ret add push stc cmp jne and lcall std into rcl pop adc mov das inc lods es adc dec and and add loop push sbb scas xchg dec pop adc mov inc sbb aad and jmp mov scas movsl fnop ret mov outsb sbb out pop cmp ds cmp test mov dec jle pop pushf sbb xor ds arpl inc sbb daa shrb mov pop icebp xchg push pop push xor inc mov adc js jae mov les xchg (bad) mov pop (bad) cmc mov fdivl outsb adc sub inc imul add leave out pusha lds jno repnz loop stos cwtl jno ss inc imul outsl in dec in mov push sub std sub or subb nop or dec jle add sahf popa and push lret lahf cmp mov jmp fidivrl movsb pop lods mov imul loope jg mov xor or movsl xchg addl dec das shrl xor cmp movsl ret pop (bad) mov repz mov repz inc jbe gs dec sub push jp leave mov lds in jno jg dec mov sahf call sub inc andl xlat daa sti jb popf fwait push mov xor insl lock dec sub divb mov cmp fwait sbb mov aam aas popa mov cltd (bad) mov xor ret pop mov add push (bad) or fbstp call mov inc add mov adc or lret out cmc mov lcall inc fwait xor mov xchg pop and or arpl mov enter add sbb hlt adc std add xor stos insb push add ret inc incb vmovsd sar jge les pusha (bad) xor cmp rorb xor add aas daa and pusha sub mov lock sub and bound mov mov aad pushf and movl popf cmp push inc iret js sbb ja imulb xor dec and jmp cmp imul cltd cmpsb inc fwait xchg pop and sbb sub das xor sub sbb xor loop je dec dec leave mov mov ss and or and nop das jne cmpsb sub int3 inc cmp mov xchg cmpsb lock ja enter jp or xor add je mov add xlat loopne (bad) fsubr pop into inc adc push notb enter add mov sub mov push sbb xor dec in mov cmpsb mov insb pop jmp add mov xor test rolb imul jl stc mov and rcr orb popa hlt int mov icebp test push lock dec shlb lods push call (bad) sub xor sbb fdivs push add adc pop mov (bad) and or lahf adc push fnsave mov loop push dec xor inc push stc test pop stos push pop sbb mov aam les fsts pop gs int lods xchg inc xchg repz xchg sahf adc cmp jbe fsub popa test outsl out adc (bad) pop inc mov (bad) icebp or xor jae ffreep sbb push stos jnp notb add lock (bad) push arpl lock fsubl ret pop fdivrs js rclb pop pop and mov adc dec pop push mov cmp repz pop aad inc clc in pop (bad) cmp jns sbb ljmp mov xchg dec mov es loopne jg in cwtl fcoml mov push or adc lea int3 test loop dec (bad) scas sarb dec cmc xchg and xchg cs dec movsb iret add cli cmpl or and cmp fldcw jne popa dec xchg push push cld out mov pop cld or add push jns popa jge outsl mov xor stc ret aam fiadd mov dec mov mov add pop das repnz pop out (bad) mov or xchg cmp test jb xor daa outsb inc insb (bad) mov adc std adc push add dec mov xchg mov dec loopne mov sub mov es data16 xchg (bad) rcll out cmp mov pusha or pop hlt sbb sub jns cmc int3 xor cmc popa lahf and sti jecxz jle adc scas xchg fisttpl imul (bad) inc aam sub xchg inc mov dec push and add dec push int3 push push add and and enter xlat popa mov xlat dec repnz js sti dec add mov mov dec lret popf fisub popa mov daa push push pop push (bad) or cmp faddp repz push pop add cmp out cmc js out sbb sub xchg aam mov sub jbe lret mov fs and inc xorl adc aad adc std (bad) stc cmc cmpsb femms sub xchg cmpsl adc hlt cwtl das nop mov loope in fcmovbe inc cmc imul sbb sub in rcll xor mov pop dec ss test sbb out or xor mov dec (bad) shll and pop out js jecxz mov sbb sbb in mov (bad) into pop mov outsb jge and aaa sub xchg adc (bad) pop out jl aam push pop jmp (bad) cli mov and sub pop jp clc or mov mov pop or inc pop inc pop cmpsb lds pop (bad) (bad) iret add mov ljmp jae and repnz cmpb imul decb fcom push movsl loop inc cmp aas gs fmull aad adc add scas sub das aam push cmc mov popf sbbl stc aas fisttp or lcall (bad) loopne lock roll xchg subl push das andl dec aas aam xorb push add lret push xsha1 cmpsb lret sbb push (bad) pop inc push dec pop cmp xchg fldl inc hlt cmp (bad) mov aas and sbb incb lods xchg cmp adc pop xchg mov js rclb ja xor sub in jns fnstenv lods lods pop cmp shr popa mov push popf mov stos scas das sub push into mov decb and xchg out test in mov pop jae ret and (bad) lods (bad) mov inc pop aas adc cmpl sarb adc test cmp inc push out and jg jbe fwait mov inc mov xlat sbb rclb nop mov fcoml loope jl jecxz mov out dec fidivl cmpsl or push sub and xchg cwtl and cmc (bad) dec mov mov push cwtl out sub or pop pushf bound sbb ss lret add loope stos xchg jge mov push icebp jo dec add push or xchg push mov add adc mov adc inc sub repz mov add loope xchg lret das sarl lds (bad) movsl test stos mov into cmp (bad) fsubl mov lea loop and push iret and stc mov insb sbb adc imul adc push jo mov mov cmc cmpl aam push lret (bad) outsb mov ljmp gs sub sub mov loopne sbb jbe out jae popa push lods sub add sbb or movsb int3 stos (bad) mov mov push outsb inc (bad) in dec mov cmpsb jle mov sbb sub in ret movq dec arpl lock xor (bad) or mov cmp jno repz adc repz popf cli cmp mov mov sub or mov adc xchg fsts mov (bad) cmp stos fistl jp xchg sub xor pop test push push mov and fstpl and ret lcall add adc or loopne (bad) push push inc mov (bad) fsubs cmp jae out sub sub sub divb mov pop shlb movsb mov mov inc outsl jb js rcll cmp sub loopne sahf push fisttp rcl and or pop dec jmp xchg mov in adc dec and or loopne movsl mov bound loop sub scas inc lahf lds popa ljmp fisubrl xchg sbb push jp lds faddl jnp mov sti and jge aam push push inc sbb dec pop ljmp jo stos pop jae cmpsl pop sbb je push daa mov xchg jmp mov inc loop cld lret fldt sbb ss jne scas or mov ret shlb jl mov or ret popa addl fsubs imul mov jnp cmc imul xchg add mov xor sbb jmp (bad) mov lods outsl dec xchg movsb jmp mov jmp mov jp dec fldcw jg pusha jb push arpl pop or jbe loope iret or xor adc and in mov cli push movsl sub push dec cli (bad) mov cli or mov rorl out cmp (bad) mov loope iret jae or push sbb cmp scas mov stc dec lahf sub dec out mov push push mov pushw into sub push nop add rcrl subl ds sti add lret push popf icebp add out cs cmpsl popf out push out mov js faddl mov adc sar or jnp dec pop mov mov push ds jecxz inc dec mov cmp add gs xor pop push jecxz cmp sub inc aas or cmp ss ja packssdw mov js jp es jl xor xlat cmp sarl xor repnz imul sbb clc and sub (bad) xor dec mov cmp repnz sbb add mov cmpsl pop (bad) adc mov pop xor push and lock (bad) rclb jge cmp (bad) dec leave pop jg mov mov sbb or loop mov and fimul cs ficoml add in pop stc fs xor xchg lods add or adc adc add xchg cmp xchg cmp push sub shrb pop pop sbb adc clc sbb dec fistpll xchg enter stc pop fistpl pushf andb ja shll loopne rcll xor mov jmp jbe lods jns clc adc and ja inc (bad) mov out (bad) fdivl lds lea movsl sub ret xchg inc enter enter dec and xlat loope xchg xchg inc mov xor loop xor outsb imul jae aam popa mov insl jae and leave lea mov movsb lods pop adc add lea negl mov xchg sahf jg lcall push repnz daa dec dec popa push clc pop (bad) jb leave insb add aad add mov or push inc xorl xchg fwait pushf cli mov jmp lods pop repnz mov dec cmpsl mov or adc idivl and pop out mov pop sti daa mull cmpsb int3 push push stc mov mov fcompl into jbe xor jge cltd leave out or pop adc inc fst (bad) xor push ret outsl lods inc fs arpl push push adc pop sub mov call xchg add les fwait push mov jbe ss pop std and movsl add enter adc lcall sub iret adc fdivrl loopne xchg cld mov push mov stos mov (bad) loope jmp sub dec push push test adc push mov sbb jge stc cli mov mov xchg push xor and cmp stc pop cli jmp call cs jl cld enter div rcr adc push subl out enter add enter inc jecxz sub dec jl mov test push test cli push or adc jo movsl icebp test xchg js xchg outsl push or loop lock dec push popa sub push in incl lahf xor gs pop add int3 test (bad) cmp push push les mov loop pop pusha mov mov mov popf mov xchg xor mov pop pop lcall sbb sbb cmp dec and aas mov or fldenv jecxz jbe add movsl xor mov dec inc sub leave and jle cwtl or inc cmp idivb (bad) icebp pop and call stos inc and and add xchg pop (bad) je xlat ret rep repnz push insl mov lahf and (bad) mov push rorl dec mov mov xchg leave cmp push inc fucom pop popa cmp jae mov test push shrd adc (bad) lret mov sub lods pop jb mov xchg imul orb add xor mov lock dec mov lcall mov arpl and loope prefetch push dec iret jae test (bad) push jle leave jb push hlt pop mov je and pinsrw stos jecxz out xlat stos adc dec add adc pusha xchg push pop fsubr push gs fwait mov mov xorl les mov in outsb cld xor mov mov daa mov jmp push adc and push dec inc jno jno lock addr16 adc and ds sub pop cmp rcl jno cmp push adc daa mov (bad) or aaa mov mov mov (bad) shrb xchg stos cmpl pop pop inc push adc scas jno cltd xchg jl icebp xor push ficoml mov mov xchg push popa xor mov fxch dec jmp adc stos dec jbe repnz xchg mov jnp mov std push sbb leave and cmp push divb rdmsr stos (bad) lock jne daa shlb mov ds and ds xor shrb cmp scas div cmp pop cli pop cmp call mov push out mov sbb call adc mov addb xchg pop xchg dec mov ja dec sbb fcomps xchg cmp scas xor js cmpsb push pop (bad) mov or pop lret call push jno adc ss addr16 bound sub jnp dec add cmp scas (bad) insb hlt inc cmp sbb inc inc xor push xor mov mov mov jp insb test jb pushf jge and xchg add into fs xor mov ja jmp sahf mov xchg sub sub cmp rolb mov sub mov and mov (bad) cwtl jecxz jmp mov jnp add or or je mov sub add imull leave scas inc jge shl push (bad) lret push mov sub inc cmp sti pop jl sbb lock loop sub jle into push or ljmp jno aam mov test push push jns xchg scas (bad) mov sbb xchg cmp or es in push out movsl push stos xchg inc lcall mov das imul push (bad) cmp daa push sub lcall jno cmp adc (bad) mov jg repnz jns xor xchg cmpsl nop dec inc sub repz fimull sbb dec xor outsb mov xchg inc xor out adc cltd adc xchg nop mov nop adc cmc les fwait sbb jecxz xchg lods call nop sbb or mov shl mov cmp sub xor (bad) xchg out pop sub mov pop mov loop inc pushf or insb mov add mov repnz mov iret push adcb inc push fadd insl inc scas xchg into add scas push aaa xchg addr16 sbb cmpsb dec pusha push sahf mov dec int adc cld cmp xchg push popf mov jns dec push dec outsb adc outsl fist aaa lahf hlt pushf lods mov les dec sub adc and rol jge xchg outsl lds sbbb sub xchg xor push adc xor jge das jecxz out (bad) test push inc (bad) fidivl jmp xor ds mov or sarb sbb popa mov (bad) shlb push out lods sahf push js mov xchg sti loope es dec loopne xchg and jns push mov je lea cmpsb jg jecxz shr inc xorb popf cltd cmp mov xor push mov (bad) and lods mov cwtl sub fs push fwait xlat sarl sub mov loope dec arpl loop stos pop push testb fldt (bad) mov mov add (bad) fdecstp inc inc pop add out mov and inc lret adcl jecxz sbbb inc dec scas and xor dec leave xchg push pop mov fbstp pop jp imul sti mov es mov mov add pop pop sbb jp xor addr16 inc lock test xor jo jo and sahf daa inc (bad) pusha movsb inc push xchg daa mov and repnz adc add iret xlat xchg jl and das mov fimul pop xchg xchg mov mov nop pop aam push in insl shrd and jb hlt (bad) add jns les (bad) fsubr mov mov mov popa push inc xchg mov out in xchg xchg jecxz add mov dec pop mov enter out cmp add cwtl into in lcall data16 (bad) cli mov imul xchg addl out jmp ss cmp lret loope fcmovb pop (bad) je popf dec push push in loope and mov (bad) test les pop test fcoml dec jo das aam push inc push push scas xor test xor dec xchg add mov add push xorl movsl adcb xor repnz cmp js mov shrb adc dec push inc imull or pop pop push push int3 jg or and loopne xchg xchg xchg ficom cli jge inc les and (bad) outsl sbbl js les sbb xor popa adc ss push fistpll mov adc jg dec cmp jne jns xchg mov sahf add cs add jp jp jno aad xor stos (bad) and jecxz scas and inc dec (bad) out scas add lret inc add pushf nop clc sbb into cmp mov pop fistpll sbb cs popa mov stc out pop adc pop std xchg (bad) loop mov mov jnp fldt into jmp xor push mov sbb sbbb lret xchg int3 push mov xor push push rep xchg popf or mov enter jne jle and popf sbb mov add movl ds test inc and out movsb sub push jg clc dec mov cwtl cmp jecxz test fadds ret adcb cmpsb push in sub push push xor call sbb push sub xorl adc xchg lahf imul call sub fbstp or fstp sbb dec or mov jecxz xchg mov push clc jg xchg leave inc jne lret sbb mov sahf loop jne (bad) mov mov gs mov pushf negb aaa mov mov xor mov push push xor mov mov int3 xchg divb mov int (bad) clc movsb arpl rclb stos out fwait pop stc rcl xchg add push adc pop ret add pop and enter mov das js lock rcl ss push mov loope subb js sbb sub xchg lods enter mov nop cmp stc out cmpsl jb stc movsb clc jbe out js ja adc rorb testb in imul mov outsb mov lds jo popf and ja lahf out (bad) and push pop lahf std mov xchg fldcw jl add adc pop cmp jle xor loopne push ret jle adc push roll sbb or int3 inc cmp ds loopne push sbb out push xchg pop mov (bad) jnp fs into negb pop in into jmp pop or gs adc inc push jno fwait out pop mov in (bad) push xchg cmp adc test dec jl scas lret call les (bad) mov ljmp and out icebp (bad) mov mov adcb fisubr pop popf mov fs sbbw stos adc insb or cmpsl pop mov cmpl (bad) jbe and sub mov and ret pop mov sub ljmp je adc mov stos flds cwtl lcall mov ja ja sti jnp stos inc adc inc insl in mov aam sti and inc out mov jmp lcall jno pop stos shlb lret cltd js arpl adc popf mov add jecxz das jne data16 lock jb add bound pop scas sub xchg repnz popf mov aam rcll jmp (bad) aas out scas lock jne sbb mov xchg iret sbb add fldl fist pop mov jge push or setno in sub rcrb pop sub mov add fbstp pusha jno adc or mov (bad) xor dec lea fscale jmp scas push and mov mov repnz jge mov xchg xor enter ret inc xlat mov lret pop push xorl or xlat inc lock mov cmpsb push jecxz inc loop xor loop adc add xor stos pop pop push sbb jns jno pop insl jle inc lods aad out jl mov mov movsb xor jecxz subb and xchg outsb mov mov enter rcr fistpll mov xchg xor or fstps clc lock ret (bad) dec adc insb rcrb popf (bad) pop inc adc mov pop jno mov loopne call pop add out lods (bad) cmpsb xchg mov push or push iret je fistp (bad) (bad) enter pushl push lret adc gs repz adc mov mov mov mov xor pusha (bad) push aas sub sbb aaa stc mov (bad) sarl sti (bad) (bad) pop xchg (bad) into sub cmpsb out outsb push jo pop xchg cmp jle popa mov je lret sub push popa aas subl loop sbb mov ljmp push cmp sub push sub (bad) std jne popa out cmp lret jne jecxz pop cmpsb xor divb (bad) das xchg call repnz loope movsl in dec pop add xchg ret scas jmp fwait xchg adc insb mov rcr enter inc xor mov cmp (bad) (bad) push xchg xchg test and int3 das stc inc jnp iret jns lahf stc push gs push and icebp cli dec pop (bad) cmp in daa popf jl jle xor mov in jecxz (bad) dec mov rcrl sbb jnp inc sub adc ficomp lcall xchg xor es pop inc int3 push jl mov mov and std ret je out dec cmp shrl rorl add cmp cwtl mov lret cmpl inc pop mov sub jge pop push lods aad stos jmp scas out pop dec add mov test push inc mov dec je sbb xor cmp aas xor std jle xor push jp orl aad daa push iretw lahf es push dec mov mov out pop in sti sub push push jb push or aaa aas ljmp (bad) test fsubrl pop push xor push jne push cmp mov cmp push dec jp push in cwtl stos push lock std add iret lods pushf into add lock sub in shll sarl push sbb in or inc clc push rcl cmpsl inc test shrl fdivs pop scas pop xor out gs loop pop fsubl cmpsl (bad) fild adc sub xchg xor (bad) fimul lods fdivrp leave out pop mov dec mov jl mov and mov sahf add call mov cs stc jmp ljmp outsl repz insl adc iret fld1 dec xlat int add sub sub fcoms js (bad) sbb out ss push xchg add out negb xor ljmp shrb out pop (bad) cmp fcoml jg dec lahf lret sbb lods or mov sbb fs sti stos iret popf push pop jno push pop shrl out push or (bad) push xchg cmpsl xor inc (bad) jecxz pop inc imul adc and or rcrl sub movb mov or mov cli xchg cmc add cmp cld cwtl cmp ret (bad) je sbb icebp popf cmp push mov (bad) std add std mov lds jbe jbe add imul mov sti das jnp adc push (bad) cs insl cs jmp and scas test fisub sti push cmpsb movsb loope xorb loope call fstl out out xchg and lret into (bad) mov loop pop cmpsl (bad) sub fld1 xchg call shrl xchg mov fcoml and fdivrp rolb mov mov mov (bad) std movsb sub cmp out or gs incl fcomps movsl or mov (bad) daa pop std aam mov frstor insb bnd sbb and rcrl pushl sahf test jge xchg imul mov enter shll aad and int3 jo loope sub lods fldt pusha push push mov cmp mov mov and xor lret add insl repnz push (bad) out add add mov in test mov scas stos dec lock das imul xor mov xchg jge ds lock fcompl xchg cli dec orl aad bound sbb adc fstps rolb sbb push cmpsl loope push pop pop cmc shll sahf rolb adc pop cmpsl icebp sbb fwait test gs lahf mov jle movsl mov add int3 cmpsl sahf pushf cmp xchg mov (bad) out jmp js in bound jg mov stc or mov stos mov mov addb mov int push iret cmp repnz repnz ljmp and pop xor pop mov gs dec and les push inc cmovbe pop and or sbb icebp (bad) cmpsl pop jl bound xchg mov mov xlat (bad) push jne loop jl adc mov dec inc and test jge loope (bad) in mov xchg fidivrl das xor jmp mov pushf adc pop jg xchg loopne xlat sbb test sti lds fild dec lea fdivrs cmpsb and lret mov xchg ret outsb cmp lahf mov jo (bad) cmp push jbe jmp cltd shrb imul mov jecxz dec pop cmpsb ds sub iret in mov pushf jp xchg gs jmp fiaddl mov or fmul push and mov dec pop cwtl mov ljmp fcmovu mov push into inc cmp inc pop mov mov les push sbb icebp or test dec and or unpcklps decb rclb xchg fidivl mov fistpll mov sti add ds mov xlat push test fs fistp icebp sti push ljmp cwtl insb ficomp lcall add lods ffree (bad) and pop or mov ret push pop mov push inc pop push mov mov mov xor mov lods mov mov inc (bad) or dec jle out (bad) icebp pop lock inc push dec dec adc adc pop ret inc sbb fsts idivl jne sti cmpsl loope popf ret arpl fstp xchg bound mov sbb pop fadds xchg push jecxz das jl mov cmp ja (bad) (bad) lea bound aad enter mov (bad) shrb cltd data16 pusha and xchg inc xchg push and or adc mov or or jge mov (bad) xchg les fcoml adc shlb jmp sbb in cmp jne xchg jb pop xchg call adc mov pop leave mov cmc (bad) (bad) lea or lahf add iret popa daa adc js leave jns and shrl stc mov in push mov (bad) jg loopne fdivr std pusha fs dec xchg pop rcl xor push xrelease and outsl xchg mov inc xor outsb dec jp sbb mov aam ds sbb jl mulb pop insl jge push pop or outsb cmpsl jnp out imul inc sbb test and movsl lods and lcall cltd int dec test pop fisubr mov icebp cltd sub cs sarl push dec popf pop addr16 inc ljmp or mov stc (bad) je dec mov loopne jbe mov lods inc mov mov mov rcl dec push xor inc test fldt jae out int xlat popa movaps jae sbb int out or mov inc (bad) or stos lods or mov cmp dec dec repnz cld imul jbe aad (bad) sahf mov pop rorb es fldt pop cli out jmp fildl daa cmp fxch pushf (bad) out sbb clc mov push xchg lods test pop xor push iret sub repnz enter add pop out sub pop mov cli mov add sarb mov sbb or repnz mov push fsubs xchg mov out iret jmp int push mov test out lahf jnp pop (bad) lcall cld mov sbb push jo jae sbb push xchg inc rcrl pop lret mov call (bad) sahf jp lahf dec mov mov cmpsb xor mov pop and inc push adc add cmp jb int movsb vpshuflw pop scas mov ljmp sbb xchg add xchg ss dec je push js ret lcall idivl pop inc shl jg or add je fcmovbe in (bad) rorb jmp pop dec jle and or ds bound test fstpt (bad) std jbe ret adc cmc in sub or cmp pop pop sbb pop aas sbb insb sbb jle dec mov scas js push pusha and nop push xor xchg mov imull test nop std or test insb stos repz jo jae sub (bad) fdivs call pop and push xchg mov pop push lea pop add in push ds dec push flds sub or ds jbe je andw cmc lods push sub pop jnp inc mov rcrb data16 jge pusha cmpsl sub sbb and pop ds js cmp or lea pop adc mov jo sbb adc inc inc sbb ret addr16 push mov cwtl jo,pt cmp ss ror fdivs (bad) fxch icebp mov push mov pop push xor in in test sbb and scas cmpsb or push cli dec jecxz test mov dec or pop mov ja movsl inc sub movsb dec or insl (bad) cli adc and ljmp (bad) adc out cmpl sbb ret mov pop addr16 in mov insb mov int3 push notb cmp cltd add aaa nop clc insb aaa test mov jo push ss inc das mov loop xchg fisubl and loop mov sbb (bad) loop daa sub in and cmc ret les mov lds mov jae mov xchg out xor int3 mov add bound xchg or xchg mov aam cmpsb mov sarl or dec pushl lahf fistl cmp mov mov xlat push mov out into adc jle inc add push xchg and and dec push test test imul push movsl mov iret jno jno pop cltd inc sub ds xchg je enter sub or ret movsl ret cmp movsb enter jbe cs aaa (bad) ss push mov xor clc xorl pop testl bound xchg push shl jecxz or call lsl outsl mov mov scas out rorl jno xor rclb (bad) mov push ret mov aas mov mov decb pusha sub pop test cmpsb push pop (bad) aaa stc mov (bad) out adc inc out jp in push lret mov ucomiss (bad) jle stos adc enter dec scas nop in ja shlb test cli pop push jle pop and es stos fistl lods cmp mov out out pop mov xor sbb data16 in sub rcl emms inc scas lcall xchg outsb jle in push mov imul dec adc sub mov pop int jl jae xchg ret dec cltd cmpsl nop mov mov rcrl xor fist cli push sub (bad) xor mov dec pop mov sbb and mov arpl aam (bad) dec (bad) fild repz jb jl mov mov mov xchg push inc mov xchg hlt cmp mov fldcw pop add and inc fsubrl loopne dec imul jae and sub mov repz cmp cmp js adc loopne adc fcmove stos jl (bad) cmp dec push data16 sahf mov mov xchg and daa jb jmp stc sbb arpl jmp iret divb xlat mov imul out aaa pop dec shrl and lods incl addb imul sahf pop mov roll pop aas xor and and sbb fisttpl fdecstp repz popf push dec addr16 cmp icebp mov dec mov rorb cmp insb dec pop xor aad mov xor push mov and add fdivrs jns jb push push or inc dec adc rep pusha imul xor into mov repnz xchg and mov sub call dec mov and cmpl cmp (bad) cmp fwait clc scas (bad) ret xchg pop jg imul xchg test pop sbb sbb fcomps pop and dec rcll jmp add ja xchg popa xchg imul lcall sbb stc adc sbb mov jno movsl int mov cmp xor sti scas xchg dec test cmp ljmp (bad) sub lahf pop icebp mov or lods jle cmp cmp cwtl dec lock sbb xchg loop mov jo mov mov pop push add xlat push mov and jnp (bad) js or or data16 insl jmp (bad) (bad) cld iret mov xchg ss mov mov loope xorl xchg (bad) repz jb mov jbe add adc test sbb loopne pop or into js add cs popf xchg stos inc mov adc insb (bad) arpl sub inc divb mov rclb add jmp cltd aas icebp out push test (bad) push mov sti adc test pop mov xchg (bad) int dec pop push scas andb xor (bad) test (bad) ss xchg outsb mov mov or out cwtl sub mov rol (bad) clc arpl das mov xchg add outsb fucomp push imul and mov add jmp push lods pop mov pop popa adcl xchg popf sub add jae sar popf mov mov and test out fdivrp popf cmp xchg sbb les xor fcoms mov test ficom shrb std lahf jae rolb add adc (bad) icebp ss rol mov pop subl inc xor (bad) int shrl divl sbb fnstenv mov call mov pop movsl sub das mov or flds insl fucomp movsl in push popf or or sbb lcall fs xor sti and xchg cmp insl (bad) cli fdivr les sub mov fisttpll test sub mov sub clc mov insb push ret insb push bound xor ret out lret test out cld rcrb cli icebp jmp cld daa add (bad) jb pop cmp shr and mov xor cld repnz data16 call popf int3 out clc sub push cs dec mov or cwtl loop mov push sub xchg adc push mov ja popf mov lods fistl xchg lds mov mov jg,pt jns aaa (bad) in push jnp (bad) (bad) das (bad) rcr call jp or cmp and push rcll stc (bad) mov jecxz out mov jnp in ja push arpl lock popa jno jb in inc dec xchg jns ljmp negl ret mov pop mov leave xor and aas mov xor dec hlt sub adc divl pop outsb arpl mov push mov fadds cld sbb mov and cmp out aas mov mov dec jb std mov sahf and xchg fisttpll std test mov dec es and mov dec mov aaa and cs scas loope sub pop and pusha nop (bad) test pop push in pop jae adc sbb cmp xor stc push push and fs inc jl cmova stos aam cmc inc cmp mov dec ficompl fimull dec mov std sub nop or sbb lahf jo inc mov in test (bad) or xor arpl sub in lock ljmp rolb shl mov mov add xchg mov bound and cld push mov (bad) adc xor imul aas ss pop lea jge add lret divl lea sub sbb xchg jmp inc dec and stc adc push (bad) das lahf (bad) lds mov pushf pusha loope dec rcrl jb add js outsb xchg or pop (bad) clc cmp cltd add push xchg push jle ret and cli pop add fcomp xor add push pushf lret test les js and xor ljmp mov pusha flds and cld cmpsb xchg arpl or inc je inc sub ret popf jmp xchg push movsb call in push inc mov lds (bad) imul mov inc and pop push imul jl xor mov hlt sbb imul mov decl jns jp jmp mov mov xchg adc sbb ss es pop sbb inc fstpl xchg addr16 add aam mov lret repnz aad mov mov int ret inc sbb aad cltd xchg out push out sbb cmp rorl pop mov jae pop pop rcr xor inc (bad) jl jns test fiadd scas popa pop inc ljmp int not mov jl inc fdivp int imul cmpsl jp int cli jb mov arpl lock add stos xor jae jb test mov inc add adc and sub mov or cld adc inc decl data16 movsl adc cmpsl sbb int add les xor das adc inc int3 push cmc test add jo fist pop mov inc mov mov enter stc cmp xchg push mov icebp outsl jno xchg popl lods ljmp scas pop out mov mov and xchg fidivrl insl xor rcll or jge jb aaa sahf mov mov and (bad) mov sarb (bad) into jnp xor push and pop sub adc (bad) sbb mov lcall mov in sbb inc (bad) leave ss mov std fwait ja notb rcll xchg test sub fwait hlt pop mov push call sub jno or cld cs cli adcl jb jbe iret push fidivr imul nop mov lret xchg lcall sbb incb add mov jno jno lea dec pop lods fisttpll ljmp sbb loopne lahf (bad) negl mov mov mov mov pop dec (bad) daa xchg and pop in lret sub clc pop and and pop lods daa mov sub js adc mov lods es mov xor push jno,pt or nop xchg dec cmp pop mov mov lret cwtd pop push leave pop or inc pop cmp cld cld out inc inc fldenv lods xlat test xchg push or push mov fucomi das (bad) xor mov packuswb pop int3 inc enter push xchg repz in cmp xchg pop and into je cli shl mov mov call repz rcr mov insl add mov jbe imul adcl or enter ljmp mov and sub imul movl stc xchg test adc mov push and pop xchg imul les jg push ret aam mov std in jns dec xchg sbb loopne pop in pop or icebp hlt lahf (bad) pop stos and pop push sbb sub add int3 push jae aad xchg daa fwait inc sahf rorl mov lods ret daa inc and fildll add xchg mov cmp imul inc shl sti xchg leave sub mov aam cmpsl jne call popa in mov fisub lcall ret out xlat xchg xchg aaa lret mov jl mov jge (bad) sbb test jge dec into (bad) call fcomip add sub sti out imul xchg xchg inc cmpsl dec test mov mov fsubr push push idivl xorl push mov lds faddp push adc push sub jge in push fimull lret xchg sub pop in xor rcll inc test scas fdivrp inc (bad) pop loopne mov jecxz pop push pop mov (bad) jg jns push out lret sub pushf jno jbe sti adc cmp cmp jge gs mov je repz ficompl dec xchg sbb sub out stos add push (bad) sbb sbb mov out xor hlt pushf mov rorl push ficomp sahf mov int3 cld addr16 aaa shlb (bad) xor push add lea xchg jecxz in xchg es jne dec ret popa jae jecxz icebp dec or fwait jne lds and lret mov mov test and aam add scas pop mov xchg push jmp xchg popa lret fcmovne mov test jno inc sub and inc (bad) jbe lcall mov nop mov mov xchg bound inc andb adc xchg mov (bad) mov pop sahf out sbb popf xchg xor jmp out pop daa adc jbe jno cmp test and pop insl ret repz cmp xor or sahf je repnz jb sbb mov inc stos cmc stos cmp xorl fs sbb xlat call jmp ja pop inc and popa stc insl xchg loopne xchg jbe int3 pop jno dec push lahf stos inc jp (bad) out xchg insl xchg fs cmp insl adc outsb outsl aas insl sti sti ds aam mov cmpsb sbb cmpsl test add fwait rcll inc dec dec xchg cmp int3 xchg loopne mov add push (bad) pop jg cmp push cmp jbe ljmp in push pusha xchg lret cmpsl mov ret or mov and inc add test (bad) pop xor sbb mov add jmp js cmp fist andl xor mov sub xchg aaa or inc push pop cmpsl cli and xchg inc call mov jb mov xchg or mov aam outsb inc sbbl pop rorl int daa pop mov ret incl pop lds and pop scas adc mov mov mov jbe loop cmpsl sub rorl sbb or xchg vpmulhuw pop (bad) xchg fsubl arpl dec fisubr xchg jb inc push enter add aad gs insb sub cltd mov xchg pushf (bad) adc (bad) lds lret cs scas hlt (bad) mov inc cmc in (bad) int3 stc jae call roll daa lcall test add fdivr adc (bad) aaa inc mov sub or jmp cmp clc push mov loope and sbb out sub cmp mov ret xchg and sub adc (bad) daa xchg out ror testl sbb addl push xchg inc hlt daa nop sbb ret pop (bad) add push popa fstpt enter ret xor fisub nop pop loope xchg and pop cs mov pop xlat mov xchg xor sbb dec sbb adc loope out lea sbb loope lahf pop pop lods js dec pusha mov mov sbb add int3 sub pop sahf mov cmc cmp nop loope cmpsl xor lods mov push jno jle jbe xchg mov add mov add adc inc mov lods jg lret xchg pop in sub test insl fwait inc or loope lret pop sbb arpl aam loopne jae mov dec dec fwait mov inc negl xchg sbb dec je pop outsl bound dec xor (bad) aaa outsb test out int mov cmpsl mov or or mov pop push pushf push aad nop js loopne adc je xchg jmp mov cmpsb pop pushf imul adc cld and mov jmp incb mov loope movsl js jbe xor pop xchg push repz xchg lret pop aas push enter rolb rcl (bad) ss mov dec mov push ja inc or icebp jo idivb and xchg sub mov xchg ss xchg fiaddl mov xor loopne dec std ss lds fist jge mov pop ret shl mov push movsb aaa frstor addb xchg lret lret xor aaa mov lret or or xchg pop ret add ds lcall inc (bad) repnz and sub cmp mov les fs fsubp into clc hlt and rclb lret leave sti or loop clc add cwtl jp or jmp gs xor adc sbb lret repnz (bad) cli add out inc push xchg push mov or ss inc testb aaa sub andl sbb mov jl jecxz sub ds icebp adc xchg addr16 xchg cmpsl (bad) xor imul std ds dec cmp jae sar jg sbb sti fucomp jnp in insl mov sbb dec mov and jb inc je bnd scas lods (bad) stos mov movl or fldenv lret sbb push cmp xchg stc inc lods fs jnp jp imul mov push xchg lds sahf adc inc push xchg dec jge enter mov int3 (bad) fwait mov pop xchg adcl fcomps stos imul test pop and push and push loopne jne cmp (bad) add sbbb xchg xor jge icebp xor xor lret aad adc fisttp adc sahf icebp sti loop cmpsl dec jp mov cmp test outsl (bad) fs dec jp mov mov (bad) in jae sub clc or sub frstor push iret movsl lock mov ret adc push mov test (bad) repnz jbe lret popa pop sbb popf bound cmp inc add (bad) sbb push cmp pop sub (bad) sti jb push push push sub aam js inc or mov add test xchg enter sbb jae pusha ror inc movsl out adc xchg adc mov int xor loopne ret rol sbb inc mov lds xor imul (bad) push pop add mov jg jb xchg out mov ds mov and inc fs daa pop pop and and aam jg mov ss mov jg out and pusha fwait lea pushf (bad) ja xchg insl fwait and inc fs adc mov cmp xchg xorb jns outsl add and dec ret hlt movsl jo push (bad) call inc cwtl or cli rcl xlat test mov xor lock popf leave in pop mov cmpsl jl add cs (bad) aas xor mov sub jmp mov mov sub fldenv xchg xchg loop adc mov push data16 pop inc xchg adc shll dec shl icebp inc xchg es (bad) sub mov rcr and dec (bad) repnz jo ss inc jle jnp mov rcr ljmp mov jg sub cmp loopne adc leave sbb xor fidiv out cmc and les out lods cmpsb dec leave sbb push dec cld mov or (bad) testb sbb sbb in ret insl in push inc movsb push mov ret cmpsl ffree inc in jbe sbb std (bad) pop test repnz dec push inc adc (bad) das aas imul mov mov inc icebp dec in jecxz xchg xor jbe addr16 movsb out inc cmp mov lahf int3 mull ds lock push popf cmpsb cmp mov idivb (bad) and sti std mov scas mov je jb and dec (bad) je inc stos repz outsl jp test data16 sbb or xor es xchg adc sbb call push pop and fs mov xor fs sbb ffreep sbb inc xchg stc inc es stos xchg in (bad) loop popf ret (bad) xor lret dec sub lea mov cmp mov repnz or cmp rcr push enter (bad) mov mov data16 cli rcrb loopne xor (bad) mov mov inc jb aam lahf leave in push pop daa xchg in pop fstl xor fstpt shrl adcl sahf int mov (bad) jns iret mov xchg in and insl adc dec dec pop enter cmp data16 (bad) mov ds insb push push xchg sbb adc std popf sub push stc outsl es (bad) cld mov cmovl ja jne out push inc cmpsl and jge xor pusha cld adc xlat rcl xor sub xor sarl and pop iret rolb hlt out fstp adc dec pop addr16 (bad) shrl xchg dec gs cmp popa scas loope or repz sub add push ds fild mov shrb push cmp enter dec les repz arpl loop test in xor cld mov push mov or ror xor inc push outsb cmpb pop xchg mov pop sbb out mov xor out push xchg loope bound adc pop cmp lcall lahf cmp pusha xlat sub pop xlat in mov sub mov pop scas cwtl mov mov ret pop leave addr16 push enter sti or dec add mov inc shrl pop add xchg adc stc pop dec sub outsb dec stc xchg cld push dec inc test (bad) fcoml sar xchg xchg (bad) in push pop insl stos pop mov mov psrad inc mov dec fistpl dec outsb sbb pop xor pop (bad) rorb jns or les (bad) fldenv pusha mov xchg sub test rorl imul push mov sub sbb mov mov cmp mov movsl or mov xor adc test in dec pop xchg and and jle leave and add push insl mov movsl das div call adc stos mov sub fiaddl outsl test push pop es (bad) les mov cld icebp clc jmp xchg jo dec mov pop iret inc int3 aam xor (bad) sub incb push sub dec icebp sahf mov push xchg call dec dec mov jo pop pop sbb jnp loopne out ja add js cmpl pop mul push mov mov mov (bad) es aam loopne and sbb cmpl enter mov mov stos rcrb push mov lds and and fistpll gs test flds xor out ss out icebp in cs outsl arpl aad jnp (bad) nop movsb icebp xchg (bad) cmpsb pop mov out cmpl aas test in or in test pop ja cmpl jmp pop or dec fistp rclb sub lock das push (bad) jmp sbb cwtl (bad) loopne (bad) inc dec mov jmp aad mov mov repz lock adc push aas nop mov fcmove cltd or mov add adcb in inc adcl aam lret inc int push aas in mov mov leave pusha or addl int mov (bad) repnz insl xor and cmc call iret sbb jle dec mov mov mov pop les outsb mov mov ss add ret mov mov and jmp xchg stos pop or inc jge pop adc mov or in and rorl rcrl sub (bad) pop inc xlat je fidivrl mov rorb push push sub xor es xchg int3 cmp jg xor xor push jg in fistpl gs pop sbb les xchg sbb fnstcw sti out jmp fildll jns js xor outsb mov pop inc pop jle idivb paddusw sbb ret fildl dec xor pop movsl loop insb (bad) jmp push dec jmp push in stos pop scas dec js push test lret test mov jbe lcall jno mov xor shll fist leave dec jb sysexit and popl cmp adc mov xor insl push das pop hlt popa cmp and std mov inc lcall xchg xchg cmpsl inc cmp movsb xchg in sbbb lcall clc repnz cmc sahf mov int3 xor or cmp jle in addr16 leave jl sub inc pop hlt push mov or insb icebp neg cld shlb iret out dec cmc js jecxz push inc out scas pop ret xor or lock into (bad) mov rcll hlt push pop rcl or add cmp pusha in sbb sub fdivp leave andl popa jp cs out cmpsb push sub adc cmpsb loopne add cltd addr16 cwtl out sbb mov add mov mov inc in fwait (bad) xor adc mov test mov les cmp push inc in lds movlps jp cmp mov test or andl or jp add or dec mov fstl push cmp sbb mov cmp adc dec xchg iret sbb sbbl lahf lock mov cmpsb mov stos xchg (bad) xor push int sbb sub lods inc adc ds (bad) int add adcl sub int3 (bad) cld incb pop push imul notb fprem push jmp je (bad) dec dec rcll movsb ret repnz sarb mov scas mov xor cmp dec sub mov push dec push cmpl and or xchg test popf fisubl repnz fldl divl iret add loopne repz bsf insl xor push insb and and adc incb and out pop sbb ja and pop push mov or sub adc out inc in shrl pusha lds mov ror mov dec outsl xor jno and dec inc push jge xchg mov dec cmp pop fwait into pop sahf and fwait push arpl dec add sbb adc pop inc push xchg mov jmp aas outsb cmp jo sub rcll out stos orl in data16 mov add out inc sbb mov clc out lods clc mov jne addl mov add ret add pop dec ret arpl adc add (bad) adc test hlt and push adc iret (bad) aad es fisub pop and sbb push aam bound add stc mov sbb lock adc or fisttp push in xchg xor push pusha mov outsl popa xchg xlat je aaa fwait add outsl adc inc cmc push pop std pop push and mov ret (bad) push jbe lock movups dec cli sub movsl add jne movsl fcoms push out insb shr fisub lret pop jb mov xchg adc stc imul or xor jl add mov fs sub mov or xor adc sbb sub leave je sbb add lea pushf mov test and pushl sbb push mov daa jne ja push in in pushf mov outsb push movsl pusha rcrb stos cmp xor dec sahf inc pop clc push cli inc data16 dec scas fnstcw xsaves pop out pop rorl mov aam mov adc or adc sbb inc or cmp mov idivb aas (bad) mov mov cs cmpsl mov adc pop xlat hlt adc call insb arpl adc enter pushf xchg push mov ret testb (bad) mov or icebp xor dec leave sbb add rcr fdivrp pop dec pop (bad) lods cld add lahf sub sbb sub jbe lods gs cmp sti lods insb mov jg bound xchg enter sub stos jne popa pop sbb mov outsl repz popa addr16 dec pop push jne pop jnp mov push (bad) int pop faddl fcmovnu dec imul test mov mov jge jb mov xchg sub add mov stos sbb xor push cli pop out imul xchg push cmp lret ret sub cltd data16 mov and test insl fidivrl mov adc mov add push outsb pop clc pop lret jp push out or ljmp adc lcallw (bad) test cltd jne fistpll out pop int insb mov cmpsb sub mov mov mov cmpsl sbb in inc in cmp push add cmc subb jo pop adc into cli pop mov mov sbb adc pop dec jno jmp sti xchg loope xchg movsb int decl es cmp push pop cmpxchg fstpt mov or cmp popa in aad mov mov mov push jmp mov push nop aam cmp push call popf divb cmp cs mov cmc ret iret cmpsl xor cli sub stc inc mov repz (bad) inc xchg mov insl mov lods in xchg fwait orb jno adc mov in push lds stos (bad) bound cs lea mov inc test pop cmp xchg scas dec inc stos mov call pop xchg sub xchg dec call mov fdivrs xchg bound xchg out jnp sbb xchg mov dec pop lds cmp inc or cmc lcall xchg add lods subb dec repz subl and xchg and je (bad) xchg pop cmp add (bad) pop adc xor mov inc sahf (bad) ss sbb adc xchg (bad) adc xchg sbb mov jmp sub pop in (bad) int3 rclb je jg cmp jnp adc aad pop mov mov sarl aam cld inc mov adc ficompl mov addr16 lods push cmc jae mov mov loop jne stc gs add and lods mov xchg clc dec mov loopne ja loope int jge out dec push scas or or lret sub xor inc inc fcoml sbb xor dec adc xor mov test mov (bad) jp add leave ljmp push adc pop mov xchg dec mov std loope xor out das xchg lret aam push js or das push (bad) jae add jle out mov adc dec sub inc and ret hlt out rcl and lcall jmp push and insl pop lahf cmpsl push test (bad) ret dec mov lcall out mov push pop inc sbb clc dec cld mov xlat hlt xchg jae dec pop jecxz sbb cmp or daa lock iret mov or (bad) sub adc mov loope imul das jmp aas les xor mov repnz lods pop repnz nop mov je lods xchg cmpsl lcall push aam ljmp out loop sahf imul jnp or dec mov lods dec pop jo xor adc in fdivs icebp jbe cmpsb js xlat pop pop roll jo mov fldcw es aaa fcoml mov scas int3 (bad) mov xchg inc inc rcrl addl das mov dec jmp jbe popf loope mov sarb into (bad) dec daa sub out inc adc sub insl xor xchg or push arpl xchg fdivl xchg popf cmp out lock stos mov inc outsl and imul add push stos lock cmpsl push data16 lods (bad) dec inc popf mov clc ret add movsb into aaa pushf addl and in lahf mov lds or cmc sbb pop rol cmpl imul out lahf push (bad) fildll or loopne addl inc fisttpl int3 lea xor fmuls xor sbb mov jae cli push arpl add mov fnstenv stos jp or xor loop std gs js stos ss jno add mov ja dec repz int3 loop aad fstpt shll jg xchg lds mov adc mov pop or cltd push pop pop enter mov dec sub dec lea jo mov enter stos dec imul lea jae push in in fimull mov pop addr16 add mul xor dec test test jns mov je or inc add inc bound jae jl cwtl mov add repz aad out pushl (bad) sbb mov mov xchg outsb fucom hlt xor inc cmp jbe clc in emms pop movsl test (bad) repnz test push out cs je xchg stc outsb inc or mov std jb inc subb push jns or xchg xor mov lahf pop into or sti push ret in daa data16 pop sub lock jb jmp mov cmp pop cltd mov dec mov sbb test pushf lcall sub loope subb or fs xchg cmpsl sub sbb sbb mov jle lahf lock (bad) add (bad) adc dec jle sti sbb push fdivl enter sti pusha lock pop int3 lds sub pusha jo aaa jnp inc outsl bound mov sbb imul mov jno jg ja mov xchg es mul mov adc dec pop aas ja orl pop insb mov sahf jo addb sub mov add and sahf jo or lret cmp cwtl push push out mov out into push ljmp push mov les pop out xor shl (bad) jmp jge lahf adc xor jae jmp add jl xchg xchg mov loope jg in test mov rcrb lea mov xchg mov jnp data16 sti mov movsl cld push xchg mov mov sub jg andb cld hlt scas scas jp movsb imul sub pusha or push jmp (bad) adc sub mov fcompl jne ficom rclb testb sbb mov push pop cwtl add das push dec xor jmp rcrb js mov inc idivb dec xor push xor int3 int cmc lret lcall jne loopne adc jge test pop repz movsl cltd aam mov mov fsts into push jne mov test mov pusha insb adc mov or mov add sub dec xchg xchg add cmp scas sahf cmp mov xchg shlb lods enter push xchg stos mov adc pop gs (bad) and xchg sti mov jne and cltd lcall ja ljmp dec xor mov cwtl xchg or push enter xchg xchg mov scas pop roll repz lret movlps es jno mov ret jge (bad) and adc jg ja pop and inc pop cwtl aam loop lods or addr16 jg bnd movsb fsts (bad) cld mov ret mov adc or cmpb loope push pop lahf push jg and and shr mov jp mov xor dec imul sub mov sbb and pop and popf mov sahf nop cmpsl xor ret sbb mov pop and addr16 jns aad test mov inc (bad) or push sub inc lock imul jns mov sti lcall mov test pop mov imul sub add (bad) adc sub push aad icebp mov out je les xchg cmpsl loop mov xchg sub cmp fidivr push or add xor sbb fst dec fstl jno sahf jb cld xor mov jmp fildll inc sbb mov pop mov mov add mov out push notb repz jbe addr16 imul and sbb mov fcmovnb pop sbb ret cmpsl cli cmp mov mov test push mov push mov fcomip (bad) dec daa add mov scas sbbl repz std in push or lret sbb popa sub add sbb (bad) aas data16 lds mov stos jne repnz lock mov std xchg jne xor shrl xchg jo push mov mov aas and pop jl or movmskps mov and mov jmp cmp sub hlt ss mov mov insl mov jl fldenv xorb cmp xor ret out stos out mov sbb pop and xor stos jmp inc in mov loope jl pop xor sub nop repz repnz lods shl ds adc xor test mov xchg xchg lods and jnp or mov dec push imul fwait aas or enter jnp ljmp mov cmp rcl hlt rcr lcall mov or rcll mov sub mov dec in cmc sbb push (bad) inc inc popf or mov (bad) scas jl or jmp sahf pop std outsb jp stos scas (bad) jl into push mov jl lcall pop jecxz sarb xor les (bad) mov addr16 lret adc iret fdivl dec xchg call mov fistpll jns mov and mov jecxz pop add cld sub jge in (bad) ret inc jecxz push sub sub and sub sub sub pop inc pushf dec or mov sub jl out mov addl xchg xchg sar js jmp cmp inc or jnp xchg mov ret pop out cltd push xchg jmp inc test push and push jmp incb mov push ficomp (bad) push inc xchg bound les jb lret mov inc mov outsb push sbb enter jb xchg pop sbb es or inc lods stos cmpl sbb fsts enter jmp hlt pop and repz mov push stos or mov sub mov lret cmp scas lods sbb test cmp pop or dec and jb pop movsl fldt inc jmp repz test icebp cmp iret push daa fildl cs cmp mov inc fbld stos sbb and mov jmp cmp jbe pop mov jb mov add push outsl movsl cld scas mov adc fistp std or adc add int pop mov push push lea repnz packuswb outsl sbb push cmp push out inc insb lret cmc (bad) jbe pop jp sbbb (bad) out pop cld and dec or xchg push imulb in jmp or mov xor or addr16 fdivl add cltd (bad) jbe jo lcall mov sub aad add sti adc rcll or dec adc in adc push imul loop (bad) sbb or sub inc pop testl cmp xlat jns in jmp jge pushf jns loope push or lods in xor push fbstp pop dec mov nop insl push (bad) out mov insl dec xor jno add mov repnz aas jmp pop (bad) sbb jle push out push mov dec sub mov pop and mov (bad) ja jg pop (bad) cs neg cmp add cmpb js lret fwait test ja sbb dec popf fimull jb,pn imul mov rclb pop inc jg pop xor push imul xor leave cltd lods dec mov mov movsl fidivr cltd std xchg nop in push lds add adc and sahf (bad) (bad) adc or xchg fsubs movsb cmc ror dec sti xor popf inc and add cs loopne cmp sahf test cmp inc scas xor push pop popa sub dec mov or add cld mov ja negl mov and lret sbb jnp sbb roll (bad) mov adc adc mov arpl mov fbstp mov mov stos inc aaa lock notl pop adc push int mov cltd pop pop add and test lahf cmp and (bad) sbb jecxz incb pop jle mov aas cltd das mov stos ljmp dec xchg cmp xchg int3 push add add add mov test sub mov sbb cltd scas push mov and out add clc fldt stos add cmp rol pop xchg das shrl jp stos cmc jbe cmc nop nop xor jns cltd push mov rol lock (bad) scas mov push aaa mov clc add (bad) fildll mulb imul push xor mov cmp and sub inc inc shrl hlt cmc fdivrs inc jg lods sbb leave aam cmp loop cmp pop xchg lock popf int3 push popa es aad and and (bad) mov es mov test jp fildll outsb pop fwait inc sub into or mov pusha sbb mov jns mov aaa mov push jno aam jne push repz fwait pusha fmuls add jne cld inc jnp mov stc (bad) mov sub mov jl and adc scas or aas mov pusha jns jno add es adc jne fdivrp decl aas jno rorb jo stos sbb pop out js sarl add out jge add sub sbb inc mov lods pop loop mov (bad) xor or (bad) jnp sbb movsb push addr16 loop arpl addr16 add adc hlt ss outsb mov pop and mov mov cmp or repz sub jmp mov in inc xor repz ss cmp sbb mov mov jo dec in push (bad) lret dec add popf adc aas leave and repnz (bad) cmpsb scas add and mov sub sbb push sbb stos mulb out psubusb inc cltd push jnp jmp repnz sbb ret (bad) hlt sti sbb cmp mov ret (bad) or or or jge mov popf test or ffreep stos pop das or dec pop pop ret hlt repnz insb xchg test stc movl cmp jp movsb xlat jo sbbb jo fimull push mov and (bad) xchg adc adc fsubl mov js aas mov sbb in int push push push fwait test sbb sub sahf sub outsl jecxz shlb test jnp movsl inc inc mov shrl xor mov inc xor in mov sub mov xchg jb cmc rol icebp push (bad) jo jp push imul and or out lahf (bad) test cltd or inc mov pop (bad) popa loopne outsl adc inc nop mov addr16 test push push ret test push push aad insl adc je or sbb mulps (bad) pop test inc jl jb xchg pop fdiv repz mov jl ret cmpl push or orl pop imull xor inc and sahf sbb es jg (bad) lret pop and jne sub into loop dec ja jo add ret pop mov (bad) xchg adc jmp stc mov icebp mov movsb out mov push imul push ret ljmp imul inc shrl loopne xor xchg daa jmp adc pop jno or push xchg mov (bad) data16 sahf mov or or jae rcr or (bad) jae stos sbb stc cmp mov sbb or popa cli popf std outsb jg adc repz rcll insb (bad) repz cs dec (bad) mov mov sahf inc (bad) pop mov add jg (bad) sti sub mov rorl inc dec sbb or cmpl fstpl dec add jae pusha into loope or popa mov adc or loopne mov sbb or fsubr sbb push sub cmp push enter ffreep cld in jge clc push test fldt (bad) cmc mov sub or inc ja bound (bad) rorb stos push jle mov jno scas pop popa jge pusha outsb mov mov mov mov inc push ret gs int dec imul or sub add xor or in (bad) enter leave out jge xchg wbinvd jmp clc and imul push loope (bad) cltd adc mov mov sub inc outsb imul push push mov sub pop pop add ljmp mov jge into xchg test mov aaa sub ds les cld dec dec push lods cmpsb in rclb out lods cmp xor ja lock in loope in lcall lock stc xchg cwtl xchg test and mulb push lds add test inc pushf dec sbb (bad) insl loope arpl adc sbb je leave jmp jns outsl in mov fisubr inc adc les test cmpsb (bad) xor jo and inc je inc push divl xlat outsb mov das sbb and or inc adc ljmp outsl cld xor cmp pushf lods pop pop test pusha sub pop daa xchg loopne cld fstl movb jp,pn xchg aaa je (bad) inc and rorl ficoml popa xchg fisubr scas mov je (bad) notb fcoml add dec loop insl mov jecxz cmp test mov ret cmp rolb add mov lret jnp adc lock cmp cmpsb loopne repz aaa cmpsl test ljmp lock push xchg ss outsb call aad test lods pop out mov and or faddl test mov hlt cmc jno imul aam or dec sub arpl mov add arpl movsb mov push cmpsl sub sub xchg pop xchg fistpl mov add push daa out popf xor outsl rorb inc push gs ds out movsb int push dec sub fisubr and clc inc movsb idiv fild and cld scas mov fdivs and adc aas jle mov sub js std aad lcall jp xor fisubr int repnz mov mov pushf push push test insb xchg cmp stc mov sbb jle sbb sbb fsts push mov movsl in out cltd inc repz pop xlat loopne jecxz testl mov and add rcll scas mov (bad) out (bad) adc addr16 sti (bad) dec xchg sub xchg in cwtl daa and je fdiv lret mov add fdivs adc lods ret jbe sub in sbb addr16 outsl adcl in xchg test xor loop xor cmc movsb cmp push cmpsl dec and (bad) out inc scas sbb scas sub add sub mov in pop cmp lahf and aam ret rcrl test sub cmp mov aas cmp add enter jmp insb mov mov shl cmp push pop mov add jnp sarb mov cmp xor jecxz cmc outsb lret and inc loop in and sbb xchg call loop xchg cmp pop (bad) fbld pop pop adc lds mov push jecxz ret or (bad) push adc pop jmp jae pop fwait jno dec sti jb and adc scas rclb arpl push out mov test inc xchg dec cmc mov loope insb or lahf mov add (bad) cld inc stc and mov je sbb mov loop movsb lahf (bad) je movsb js (bad) add int dec pop xchg pop fs loopne out shll push push inc aas aam sub out sti popa xchg int call in mov repnz (bad) das or lods clc adc movsl sub push fs mov adc in lret arpl rcrb and lea sbb push push sub ret push xchg fst cwtl das push push or loopne ret mov rorb inc dec lret test test lcall and icebp call add imul sbb fsubl push push xchg push adc pushf ss sti mov lret mov push jp inc dec xchg (bad) repnz sub xchg inc imul pop insl add cmp mov int3 add mov xor push out ja dec lret push jo into push and jle repz int3 mov movsb cld mov mov pusha sbb sbb jbe dec cwtl sahf repnz mov mov mulb and push test (bad) cmc stc xchg fwait push mov push ja jg lea pop xor clc (bad) xchg sbb out roll icebp out outsl ss popa shl (bad) mov hlt and jne xor out (bad) mov push test or or movsl xor (bad) or outsb jbe or (bad) inc or dec push repnz leave leave cli mov jecxz pop xor pop add je inc push in xor adc enter mov jg lea popa pusha sub cwtl jb insb and xor dec jnp rcll fcompl in bound xor add adc pusha clc stc sbb std pop pop jl ror sbb xchg lcall and stc cmp or and sbb mov das xchg imul cmp ret aam sub sbb inc js push sub lcall dec dec (bad) fldenv sbb (bad) repnz and mov data16 loopne push lock fnstcw cltd fiadd push pusha sbb sub dec push pop cmc or mov xchg fcmovnb mov mov lcall cmpsb cli xor mov dec push jae push test jmp jnp lcall pop arpl pop (bad) cmp mov cmpsb insb outsb pushf xor mov xchg cmp es push pop repz nop push mov (bad) clc jge jbe and mov addr16 xchg push es repz icebp xlat mov cmpl xchg adc xor mov mov push das jae mov mov mov stos mov mov and iret and cmpsl (bad) cmp mov cmp movaps fistpl mov notb lods lods negl sub xchg cld mov add lods std icebp dec xchg repz mov cmp sahf push sarl in sbb stc in aaa jbe adc fsts data16 in push in jl and orl repnz xchg lock aam inc xchg arpl add in gs dec or or in bound or (bad) pop cwtl out ljmp mov mov cmp mov mov shrl shll adc fsubrs mov pop xor adc and inc and scas into or dec inc push xchg adc pop in mov ret (bad) ja pop cmp cmpsb jmp insl jmp imul cmp scas mov xchg jbe adc inc or pop cmp daa mov iret je pop cmp adc sub shrd mov roll fstps ret test sbb das xchg mov js out int aaa adc cmp xor lods jo push sub jne mov lret sub cmp fdivrl jecxz inc ljmp xchg inc out bound push shl adc adc aaa or adc jl int3 into sbb mov pushf mov mov mov jl cld inc arpl jl lahf jno dec int aam xor stos je push push xchg xor ds xchg fimul mov aad xor or mov jne inc fstpt outsb rcr lods xor test push dec mov dec xchg mov pop or mov adc push mov cmp fwait push psrlw jg add xor cmc sub jp imul sbb pop mov jae data16 icebp mov mov addr16 push add in (bad) push lods es xchg ret or mov mov cmp nop xchg jae outsl add aam fnstenv rorb mov adc xchg or mov outsl shrl (bad) mov sbb push (bad) js leave out mov xor push (bad) push or pop push (bad) cmp pavgb adc pop dec inc repz mov cltd and jge callw les jp pop sbb pop popf cmc fstl pop out frstor xchg sbb pop out adc mov icebp mov mov scas hlt fisubrl aaa add mov js sti or test mov push cltd sbb xchg ret stc inc push ret aad mov pop hlt in lcall add roll pop mov shrb pushf outsl mov fcomp mov lcall lds lahf jb inc push les cmpsb push sar (bad) sbb test mov (bad) jb dec pop test cmp pop mov fnstcw fcoms xchg arpl dec cmpxchg shll push mov mov cmpl fcomps (bad) jl pop xchg sub xchg call mov data16 and add cmpsl fbstp inc inc dec jle test lahf or inc or jmp cmp (bad) in xchg mov je adc fistp nop int int xchg add das mov enter (bad) lods inc jno cmp and mov mov icebp sub out push ss or addr16 sbb dec mov dec jnp,pn ret aas jb mov fs mov ds xlat pop fsubrp add fstps cmp sbb imul dec dec mov or mov mov and push jl jl mov inc jne lods sub inc in notb neg insb nop icebp in sub jb and mov sbb cmp mov sub dec int adc andl jno imul pop lahf (bad) or cmpsb pop mov pop pop xchg cmp fsts cmpsb fisttpl mov sarb mov push (bad) in push mov xchg push push cmp test mov mov das mulb mov sahf rorb mov xor aam push pop jecxz jnp and mov pop xor jnp cmp in jmp jmp inc cmpsb aad ljmp xor into daa push mov mov shrb (bad) xor mov imul adc outsl loop test or and rcrl dec daa mov outsb xadd xor rorl inc int3 orl out pop lods rclb xor fldcw arpl imul mov xor sbb or sub outsb mov (bad) add movsl mov (bad) jns je or adc xor push (bad) jl mov scas stc sahf lahf mov addr16 xchg pop mov push add jle fisubl std mov mov pop push fwait pushf pop pop ret (bad) mov pop xor ljmp fdivr addr16 xchg mov sbb jmp notl lret and jae sti jno in sub cmpsl xchg outsb pop mov push jns dec das scas pop add sub mov arpl stc rcrl adc sub sbb inc jmp divl cltd mov fs adc popf imul int mov aaa sarb mov popa arpl hlt in out mov sbb movsb aam push fmuls xlat mov fildl leave add out inc and cmp pop push and pop out testb aas or inc push sub mov stc inc stc push pop dec mov fidivr and and aaa (bad) in ljmp mov ret out and in clc mov add sbb mov xchg adc jno pushf dec pushl mov mov mov (bad) push fsubrs or push repz shl sub jmp (bad) (bad) jnp pop hlt jb xor sbb sti add in mov ljmp (bad) lret ds scas xchg hlt cld lret push push pop (bad) mov jge data16 mov into sbbb inc sub push mull sub jbe or or les sbb jne stc mov icebp enter js dec add test icebp mov cmp mov mov cmp and jg (bad) push inc lock insl in (bad) out popa push jge setp sub faddl xor pop dec fs ret cmpl mov sbb aam stc xor mov in xor pop push push jo clc add (bad) test mov sub mov cli stos xchg ficom xor test lock inc popf xchg outsl in sti dec lcall int lret bound loope fisubl dec mov mov stos ffreep or xchg lods leave in fs in js repnz mov sub cmp test xchg aas or rep cmp xchg insl dec popf xchg push jns inc inc fstp ss jbe mov or sti scas sbb cltd cmpsl daa sahf movsb inc (bad) push pop sub cltd (bad) cmc lds mov cmp out mov lods (bad) in inc mov jnp aas dec (bad) (bad) pop stc mov lock outsb cmc or mov mov lods sub lcall jno je mov imul inc int3 ljmp dec xor sbb jecxz fmuls xchg adc add arpl out imul sub lret insl nop mov test jle mov mov inc xor loop hlt rep idivb enter sub out pop pop ss add mov imul iret js pop push dec ds imul sbb out sbb ret arpl imull pop fld loopne fidiv xchg aam test fidivr push jae decb icebp dec xor pop les insb insb or sbbb cmp or xchg je (bad) cld dec and inc in (bad) push mov sbbb lods cmp xchg hlt imul loopne mov xor aad in les xor xchg push scas in leave pop sub pop cmp pop test cmc shrb fldcw ja les cmpsb mov fdivrs cli outsb push sbb inc imul movsb jne push repz imul sti and xchg dec in adc sbb ss sub ljmp add pop xor pop pop xchg mov sahf xor fnstcw jmp push es aam pop pop insl cmp jbe push lea ret xchg sub stos lret cmp add xchg sub push dec ret cld xchg push mov xor and aam cltd cld lods lea jno out xor push icebp inc mov xlat bound stc and dec stc nop mov pop sti mov aad lahf into mov ds bound inc jne lds inc sahf pop mov (bad) hlt dec movsb ret cs push mov les movsl sbb xchg pop out pusha aaa mov jo,pt jl push repnz fsts outsl mov aad fdivrp ds fbstp data16 pop in stos inc mov push (bad) mov js or inc sti lea jmp xchg mov std jl leave (bad) fdivl js sarl sahf jge xchg mov dec pop cmpsb (bad) (bad) out aaa cmp push bound movsl test into aaa enter or incb adc scas sahf sbb jne or frstor dec pop aam push lock xor loop cmp movsl pop inc (bad) aad cwtl sahf xor inc push and push push loope je test pop mov or dec sbb cmp pusha sub xor lods aas bound out cmp fwait pop loopne es push xchg rcll fist call xchg push dec hlt clc xchg mov xchg mov jb (bad) lret dec mov pushf shrl cltd hlt push dec sbb loop ret sahf xor stos aaa sarb sub adc jne sub movsb mov dec jns adc adc fcmovnb jno xor add adc fisttpll insb push dec test push iret cmpsl inc or flds mov test pop addr16 jp inc sub inc fs inc pop mov adc cmpsl jns adc mov sub dec mov push fcomps scas dec cmpl pusha into stos fiaddl (bad) aas nop data16 mov daa pop push faddl sbb pop lods sti sub aaa popf rcl push in frstor inc jbe lds xor imul ds add test imul insb daa or jmp xorb sbbb cmpl ljmp pop ljmp pop jge add ret sub andb or pop push mov push cli mov add sub xchg push ret jae imul or lods movsl cmp ss pause inc and lods sti pop das ds into xchg cmc hlt and push push push mov lods nop (bad) mov cmp iret mov sbb in enter xor les lahf lock enter mov xchg add outsb lahf das adc cmp (bad) jno mov jl mov jp push xor xchg std test dec clc sub mov pop and dec stos in cmp add fistpl pop pop jmp or sti cmp xor pop addr16 lea cmc ljmp push stos ss and and (bad) push or std stos (bad) ja sbb or cld adc cmc sbb ja jns jle mov hlt mov scas mov mov int3 (bad) lret xchg and push pop mov out xor cmp aas sub sbb stos leave sti cmp subl and rcrb jmp fwait sbb inc and popa push andl mov cmp lret xlat lcall jle,pt sbb (bad) lds imul cmpsl xorl mov or aas dec data16 (bad) xlat adc sti icebp adc sbb inc fs adc adcl test xor xor test dec and popf jp push and ds int3 and xchg jo stc loop ja or in push in call ficom mov push sub aaa je mov enter pusha jnp cs pop push ret or pop dec lea (bad) dec lret mov xor add or push ljmp xchg push dec scas pop sub rcll jns fldenv loop push (bad) xor fistl nopl into sbb (bad) xlat push sbb cmpsl jbe jae adc xchg sub mov dec mov int3 scas cld push jge gs xchg pop jl push pop inc sub (bad) pop or sub mov cmpsl mov fcoms sbb lret or clc lods cld les jbe (bad) sub sbb mov (bad) add fisttp addps lods icebp inc fldenvs fsubr fldenv insl or pop into jbe je jecxz xchg mov push scas arpl mov sub sub xchg mov ds push or dec sbbl cwtl call pop popf (bad) mov es movsb lds add insl inc xchg sbb mov xchg jle inc test (bad) jb aaa pop inc mov js and test in test inc jle xchg fldt jl stos daa cltd push push das dec inc pop pop adc aaa test ja iret sub inc xchg aaa lea stos and fiadd push loopne fsubr stos pop mov mov mov and cmp cmp add sahf inc jp jae and insb mov and mov xlat cmp cmp fidiv test xchg cmp montmul cmpsb add mov out jmp loop push fsubrp push into aam test push inc add ret mov xchg inc aaa xchg sbb and lea call inc push or dec mov add sbb push or add cmp cwtl lret and jno lock aam mov xchg shr loope fdivrs ljmp mov dec fldcw xchg sti pushf jmp xor push adc jne iret jo imul jnp fcmovb dec sarb cmp out fwait (bad) xchg (bad) sbb xor repnz dec inc scas dec mov (bad) cwtl jl (bad) std out nop xor mov into in (bad) mov mov data16 test push pop sub cltd xor addl add mov cwtl push test mov xchg movsl sub xor ror inc or pop push mov pop dec repz insl sbb jb and mov in in sarb and mov ss jo fiadd dec pop in test xchg mov in mov (bad) pop lcall inc mov dec mov ljmp mov out jg enter shrb repz shl les mov mov adc ss inc ret arpl or cli sub stos aaa jmp mov insl fisttp or xchg sub lret inc push xchg movsb lahf es stc cmpb pop sbb in (bad) out adc call xchg adc imul xchg pop lock fist pop es lods int push cmp inc add pop aam fwait insb scas mov inc add sub push inc je subl mov (bad) cmp test push es inc lret inc adc sti xor or pop dec pushf fs xor push mov shrl jecxz loop aam hlt and fisub and and add mov push and mov push lods cmp lret es and push or out mov hlt shl push fsubrl imull mov hlt aad sbb ja ja or dec jl jnp iret ficom adc fsubrs scas (bad) or rclb jnp aam sub aas test loope bound mov gs inc jae mov xchg sbb popf sar mov ljmp jo xchg shll xor inc adc push mov mov stc mov inc mov pop popf stos insl outsb test xchg cmpsl jle sar fstl test mov insb stos xchg sbb in mov mov cltd cmp pop iret mov andl mov pop inc call adc in addb or mov inc add out xor into lret sbb pushf or lcall push push scas xchg adc pop fsubl je mov xchg cmp rol and out enter lcall and or mov loope dec inc cmp stos cs test xchg bound mov loop push stos addl mov cwtd mov in mov shr sahf add test out push lods mov aad inc movsl scas bswap adc decl insb cmpsl pop dec call bound stc mov iret in xor (bad) ss sbb mov test lret cs into jb rorb stos xor fwait pop das sub aad iret adc test mov mov mov pop nop push shrb fwait (bad) cld (bad) into mov mov lcall movsb inc jno or push in lea cmp rcrl and xchg jns inc je push mov divl scas sub into out xor icebp pop sbb ljmp jbe add rol in out sbb stos sub jge or adc xchg ret mov fstpl (bad) cmpsb shrb xor dec fcompl es adc (bad) aaa fnop and (bad) loopne adc out pop aaa lahf xor and (bad) out mov jns call stos ja aam fcoms jl mov mov faddl mov pop dec aam into cli pop rcrb mov mov jns lret scas dec push jecxz mov lahf pusha jge test cmp scas pop xchg (bad) jl add dec sti fcomps and or sub popf sbb stos push outsl popa pop adc dec es jle rolb push les loopne xchg push sbb mov lcall aad mov imul test mov jl sbb jbe adc xor add adc outsb mov popa pop or sub std jp and rcrl sub jg data16 push dec add xor push inc pop and ss imul adc scas dec xchg sbb inc sub enter mov movsb or and cli out fldt adc inc fcoms add push out xor shlb add and popa add aam xchg dec mov sti fdivrs mov in jnp hlt cmc push (bad) cmp aad adc dec addr16 dec mov lock shl xchg xchg bnd jp or xchg int mov jle xchg lock dec (bad) mov xchg jne adc inc pop xchg pushl insb inc jp mov mov xor cmp mov aam repnz add in rclb mov sub enter fsub faddl cmp fcomps xlat shlb mov insl test pop push hlt sarb push and out mov pop cltd (bad) xchg cmpsl lret popa cmpsb inc cmp iret imul mov inc or cltd js adc ret mov movsl xchg cmpsb movsl xlat mov cmovb push adc adc shrl cmp (bad) cli and adc dec mov insl fbstp push scas xchg mov push dec movsb push pop push push dec vshufps sub (bad) or and sub mov jbe mov sbb pop out bound pop dec pop dec les aam cmp push loopne pusha (bad) push push lods mov (bad) rcll lock repnz (bad) aas xor push aaa loop out cmp xor xchg (bad) cmp clc push or pop pop std ljmp inc (bad) mov sub inc pop inc cltd push ret iret fdivrs sbb xchg push jnp mov sbb jg push popf call adc pop adc add (bad) notb sarl pop sti push orl in add pop xchg movsb out mov data16 leave mov out cltd addl dec aaa cmc movb pop add pop or mov jae std adcl dec mov pop push lock inc add ret loopne jbe test ficompl sbb xor adc jg mov (bad) ds pop dec daa cmp sahf bound jo sub orl into arpl outsb cmp xchg data16 dec test outsb sub insl add leave add xor xchg mov test js loop push insl or mov in mov xchg test movsl xor stos cmc pop mov fcom test lahf lods leave adc dec mov stos sub jle movsl jl sub cmp sbb sti jae mov xchg adc push repnz mov xchg sub xor lahf mov les nop inc popf sbb cmpsl xchg lds push jmp fstpl ss lahf je mov pop test push sub cmpl jno imul mov mov ljmp stos outsb ret dec inc shrb adc push mov aad lock lods pop cmp shlb push int inc push les mov mov add mov ficomp cli aas add or in ss nop dec bound dec aam popa fcoml into pop sub cmpsb mov insl jnp mov adc popf dec ss adc fiaddl pop (bad) mov mov out out mov jl fisttpll sbb mov arpl jl enter mov sbb sub push jl lods idiv mov sub in sbb test adc cld lahf imul cli mov push ljmp xor inc and repnz cwtl mov xchg pusha stos xchg stos nop adc inc ss mov frstor arpl cmpl int scas cmpsl cmp pop (bad) adc rorb sub jp outsl mov cmp mov lock frstor and clc jp add mov mov ja mov es les xchg in aad inc popa push jg or out jbe push inc in and mov jb repz sub mov in sahf aad out (bad) cmp cmpsb jg jne fisubl inc sub das aam mov push int3 pusha push jp insb les mov or dec pop cltd jns (bad) and lret bound mov lcall clc in mov inc imul rcl aas sahf nop or lock roll jmp cmp push push sbb and inc mov xor mov sub (bad) jle popf sub cmpsl into push jnp insb dec xchg or xor out jge insl (bad) repz ret mov push sbb mov xchg mov pop or in adc xor lock push out or xchg outsl rcrl imull mov cmp jp jmp adc mov sbb lock inc popf nop imul gs loope lea loop xor xchg mov push faddl movsb inc aad push call daa aam push loopne xor ficomp iret out push xor push mov mov jnp add mov cmp xchg dec mov daa mov jecxz or cmpsl ds shrl aad dec loopne icebp lods add jle (bad) cmp adc xlat adc sbb jo cmp call daa push or push (bad) jmp fdivrl inc ds lock jns (bad) dec inc popa dec mov dec jp pop add out and xchg fsub adc sub jae (bad) mov rorl icebp mov dec xchg rorb add cld cmpsl xchg xor iret lcall flds jge cmp fcompl into jbe fiaddl jo sub and jge iret xor dec mov and test je fisubl (bad) repz out aad loop xchg add jmp dec mov push jp (bad) aaa xor idivl push xchg scas scas addr16 and test or imul insl or mov sbb leave and xor push xor xlat loop mov in movsb inc jp les push repz rcrb and int clc push add mov mov lods dec call jae sbb fisubl adc push xchg (bad) out fdivs loope mov rcll cmp and push xchg test daa test xchg lea or dec adc (bad) jg ds bound mov push add jg jmp dec jl jb fs sbb mov inc jg sbb fistpll in lods pop scas loope jge dec aad pop push iret jno sub stc cli daa adc push mov out loopne outsl mov jmpw sub loope cs out aam jl sub mov lret pop push sbb repz sbb pop pop dec xchg pop push rorl cmpsl lea imul dec and hlt mov xorl cs jecxz cmpsb (bad) xor mov xor icebp mov jno pop jns dec sbb pop sbb pusha fnstcw push lahf mov stc push sbb push (bad) sbb xorb pop jnp push jmp (bad) jbe das repnz or je add xchg xor push hlt xchg fwait add lock add xchg rolb jg insl mov ljmp sbb jmp fs js fmull push out icebp (bad) testl mov inc lods xor and cmp clc test repz xor call adc lret and jmp xchg scas dec add rcrb and pop adc xchg cmc cmpsb jl popf test mov rolb pop mov nop inc push xchg sbb push (bad) dec sbb adc jge mov mov or clc sub or jno mov pushf mov stos fdivrp incb (bad) push mov lret fcomps push js into jg mov pop adc mov idiv and clc pop loopne xor (bad) adc and out pop xrelease and loope jle in xor in fisubrl (bad) cmp cmp sbb mov mov jbe mov (bad) subl mov inc xor and sub scas or mov stc mov and pop enter cmp dec popa push xchg push push arpl jae sbb push dec fnstcw rcrb ljmp sar push pop sbb jmp inc sub mov mov lret adc das out sti insl cmp xchg sbb push mov adc and inc and fcoms in negb add mov dec stc lret idivb dec leave mov fiadd pop cwtl or in adc cmp pop icebp jbe jge shll sbb fmul sub push enter inc xchg ret sarb lock iret mov in jnp fldenv mov mov daa jg cmpl sbb lods xchg mov (bad) (bad) or inc clc push add cwtl xor outsl hlt fsubrl pop (bad) mov xchg dec and enter mov sbb lds lahf cmc sub ja test mov aad jae leave insl sub pop popf xchg pop xor push jae (bad) lcall mov adc push leave (bad) into mov dec xor inc fistp dec add call mov sahf add mov jp repz sbbb push adc sub push adc in divb sbb inc inc inc aaa push inc fcmovnu adc and das (bad) xor push flds scas mov xchg sbb je fildl ret (bad) (bad) (bad) cld lods sbb sarb outsb and adc sub icebp dec in out lock dec xor cltd push test jno dec lea mov fistp jno sahf push sbb loopne push jo nop gs mov decl mov xor sbb add and jg inc push pop ljmp push mov lods fidivl decl lea cmc ljmp mov in jne pushf daa cmp hlt imul or aad xor je (bad) mov int3 sbb lret sub loopne lcall insb xchg leave mov mov roll call mov icebp jae sbbl pop cmp call cmp mov cwtl insb in jo testb inc mov aaa js outsb push lahf or lret pop imul test stos inc or fs ret cmpsl popf outsl mov and adc ret mov push pusha cmp repnz test and mov (bad) cmp loope,pt lret sub sbb hlt jno add mov xchg mov sbb imul xor mov or iret bound mov lods rcr or sub cmc push adc jecxz sub out fistl cmpsb rolb add adc mov inc sub ds aaa imul mov adc mov loop outsb inc (bad) ja scas ficomp nop fnstenv ret sahf dec rcrb sub push lret mov lcall and cmp sbb or or test les fs movsb dec repnz dec imul cmc add testb pushf fmuls loop xor sbb outsb and incb mov je jmp gs jno xor push pop sbb insl adc push fbstp jnp jmp loop add call int sub test ret pop and adc popf iret cld push (bad) sahf in inc mov sbb jl (bad) std stos pop xchg adcb loopne sub mov cmpsl (bad) lea xchg mov bound xlat push and sub xchg add lcall sub cmpsb scas js pop push push adc push movsl test nop xchg sbb cmp fcompl push insb sbb mov xchg repnz insb fs inc (bad) xchg in adc inc xchg adc fld or mov shr pop cmpb or mov sub inc cmp mov in xlat std sub mov movsb cmp dec movsl xor loope jnp jp add inc pop loopne out xor mov sarl hlt out inc pop (bad) pop mov jbe icebp mov (bad) ret ret outsb pop lahf inc rorl or add gs mov jbe rcrl adc stc (bad) cmp test xlat pop fldl mov aad cs mov gs push inc xor xor mov jmp dec out cmc js adc pop jl imul xchg mov loope aaa stos fadds jl (bad) loopne mov out mov pushf arpl dec mov in xor les stc inc es outsb cmpsl bound sub test mov inc repz pop cmp inc jecxz push push push pop mov sbb push jl jae in xor lcall xchg lock jbe or xchg ss push xor push inc and leave cltd loop sub or xor and cmp and outsb mov pusha push (bad) add or (bad) push dec sub xchg jno into sub int3 int adc das (bad) sub pop and hlt xor and xchg mov jb loope sub and ret jae out and outsb jg sti (bad) inc lods jp lret cmp pop push roll mov out inc and mov jp sbb dec jge cmc adc push xchg sub cmp in (bad) stc and dec fimul fstps rorb xor js pop movsl dec xchg in or negb cmpsl outsb repnz sub hlt jp sbb cmp imul in mov xor lock gs in lock nop in test pop sbb jno xchg pop pop fild mov add add mov and stc fdivrl aas mov jle out ficoml xchg (bad) out neg (bad) data16 outsb mov mov test sbb mov xor xor nop inc xchg leave mov dec scas lcall dec sbb pop call push fdivrs push cmp int3 mov (bad) int3 mov mov (bad) mov xor call jns jge leave cwtl mov cmpsl xchg jge add or inc dec sbb jmp loope xchg dec sub xchg mov and (bad) fcmovnb in dec dec lea pmaxub testl push (bad) mov jecxz push shlb int3 insb jb pusha jno outsb arpl jl sub scas in adc cmpsw test (bad) in jmp jp,pt in inc outsb aad repz ret sti in push xchg and icebp nop add cld lock mov test or shrl or call movsl cmp or add stc ret mov mov mov pop lods push or les bound pop xchg pop sbb pop sbb loop fwait xor arpl jl addr16 xor loopne test sbb clc jg aam xchg lcall imul rol scas lds inc loopne loope loopne mov int3 lret (bad) jae jecxz repnz dec addr16 lret sbb or sub jg arpl stc mov or (bad) clc (bad) jno in stc sbb sub ficompl xor push rorb mov (bad) push xor mov and sub je ret mov or (bad) xor pop mov pop in sbb add out hlt jb pop lret ret fisttp adc dec ror stos push push mov mov lret pusha mov sbb out (bad) jo cmp inc bound scas into dec mov cmc ds mov cwtl fistpl fucomp sti scas or ljmp arpl mov mov (bad) xor loop mov out addl (bad) mov mov outsl cmpsb ret notl sti arpl and and jle lea repz xchg stc push and jno lret cmp jno (bad) xlat lret inc jno ss mov or sub add bnd sbb xchg adc jno jb aas jnp pop inc pop xchg andl call in mov and (bad) fdivr mov pop jae mov fisttpl mov push mov add xchg insl mov push sub and jecxz outsl pusha test int3 imulb fistpll or push lea dec xchg sub insl bound mov push pop xchg or outsl add pop jecxz inc adc fmull lods add adc (bad) xor mov add jo and stos pop scas sbb mov daa int3 pop sub inc repz (bad) fstl inc jmp jge std inc mov mov mov es je addl lods mov dec cltd test dec je in and fdivrp inc ss xor pop and inc mulb arpl add lahf cmpsb fs pushf mov sub xor jge jg (bad) (bad) es pop cs xchg (bad) lods pop ss fwait jle cli fs xor dec dec xchg enter into jg mov dec inc outsb je bound inc das or mov push cli (bad) rcl hlt cld in es and add lock fildll or data16 add (bad) xchg loop push pop push xor push pop push jmp jle shrl es arpl pop push ljmp out mov ja pushl pop fdivs xchg push sbb inc cld in fstcw mov (bad) lods pop (bad) outsb xchg movsl jno xchg cmp sar add push out push ss sub aad adc cld mov push and mov adc adc add enter mov movsb pop xchg test cmovae cltd js sarl xlat lahf int3 leave cmp inc push dec in loopne out or sub (bad) or lods mov fistpll std (bad) sbb inc cld cmp fwait jnp mov sti push mov push fistl imul jb and fmull test or movsb pop mov ret popf xchg xchg jnp fwait test mov call jbe sub add mov outsl adc fs adc fcmove in arpl jb insl jb lret es test pop inc ljmp mov subl popf dec std insl and out in mov add push mov mov incl sbb and outsl cmc in xor xlat lea divl push dec mov xor roll sti les jo mov mov inc aas push in gs dec dec mov cmp push (bad) jae in pop mov xor cmp out (bad) jg pop ljmp popa mov inc int3 fisubr cmp aas push fcmovb inc mov sbb daa push pop push in cmc in ljmp hlt js cld inc ret and ret xchg out (bad) fstpt sub sub rorb (bad) mov dec popa xor loope arpl in (bad) push xchg lret mov (bad) add mov pushf add aad ret repz and pop and fsubr scas scas (bad) and sub xor out popa jae loope iret imul pusha aad dec int3 inc mov icebp pop jb insb (bad) arpl divb xor adc jle or xor dec test cmpsb xor imul movsb inc mov cmp addr16 xchg fldl pop jge aas in jmp mov add mov imull inc push and fldcw cmc xlat (bad) aas insb mov xchg out sub mov xor ljmp sahf call mov pop sarl xchg leave shrl std add add mov adc jp mov nopl jle outsb and xor xor leave cltd outsb mov addr16 cmc ret push mov movsb sbbl push adc fnop xchg xorl push andb xchg sub fucomip adc push es js mov std mov or pop push mov les hlt mulb leave dec es ljmp add sbb gs roll rcrl mov xor and and sahf (bad) mov cli push (bad) out push (bad) push xchg jnp loope pusha or hlt inc lahf insl iret lock aam jbe sub xor cmp mov xor shr ret adc sub xchg aaa mov gs test cmp inc push dec in push ss and or inc loop je mov or sbb roll jnp sbb jecxz pushf je lods movhps push out jle pop insb enter sub out in in jmp out mov aam mov pop pop lods inc jle (bad) jb mov (bad) xchg (bad) and pop mov (bad) xchg push aaa mov sbb out inc mov sub adc fnstsw mov jg lods jbe je sbb or dec mov sub mov fiadd pop sti inc cmpsb and rcl mov movsl adc loopne jle ror out dec jne into ja aaa subl sarb out adc insb xchg xchg (bad) imul sub mov ror pop sbb rcrb popf (bad) fisttp les cmpl push adc xchg mov out mov iret adc lahf jno sbb push in add xchg push test or push inc mov repz std dec sbb xchg dec std push fwait jae mov xor jg sub (bad) cli repz (bad) lods push sub lock es mov jo mov cmp into adc mov jle pop fs lods loop and ss jo xchg inc adc mov mov xor cltd lea (bad) lods ret mov je shll test das lret and cmp sbb lret mov pop aam lret pop adc dec in addr16 sar pop in or pop lods (bad) jl and out out and shll jmp mov icebp dec adc pushf cmpsl fnop mov cmp faddl pop mov lea cmp mov add jmp in adc cli cltd fadd jmp adc popl lahf mov push test fwait cmp push das bound adc fs rorb icebp push data16 adc inc or inc push gs leave add (bad) adc push cmp pop fsub sbb adc push test mov pop dec cmp sbb lods rorb lock push xchg inc ret insb add out mov out popa add adc jle (bad) jp push lret aad lock stc sbb lret add in nop in or (bad) loope cmc xchg adc mov ret (bad) rcll push xchg sbb pop mov mov outsl push sahf rcl hlt insl test mov xchg xor jo mov sti ljmp aam jne das sbb and vminps (bad) repz inc jb mov rcrb lea inc inc dec xor fsub daa add add shll clc pop mov scas dec mov fisttp xor shrl push (bad) mov sbb loope xor sbb lret jno push inc aam inc es mov mov loope and imul cltd (bad) mov mov mov loop dec enter dec out sbb or lea ja dec and pop jge mov sub in sbb jmp add pop or notb fwait loope mov enter outsl cmp pop dec or (bad) mov imul push jmp test mov ficoml mov pop imul es aas and rclb cmp (bad) pop js addr16 pushf inc loope sbb (bad) fsubr sar sbb sbb (bad) outsb (bad) lods xor scas adc add sarl cmp cwtl push imul pop out gs std bound int pop fld stos fst fcompl push in xchg jl jno cmp mov inc sahf sbb clc push xor cmp ja movsb mov ljmp jbe popf popf fist into sahf pop (bad) mov add lahf cmp das jge test cmpsb inc add cmp and pop stos imul fucomp mov pop inc jle sub fmuls add dec dec stc xchg dec adc ljmp ja repnz mov ret jg ds mov ljmp push inc add adc movsl or loope call sbb jmp xchg loopne in ret mov cmc jmp jbe pop xchg scas aam add (bad) xchg mov lds in push jbe xchg inc mov popa (bad) addr16 sub inc jmp stc xchg lock mov insb pop push pop or arpl pop cmp notl jl pop or ficoml stos stos dec jecxz jecxz mov add cs out mov call in xor push adc cmp xchg add in insl cwtl adc xor leave pop (bad) push mov je shl and aaa xchg mov adcb cmp rcl add push popa mov dec enter mov jle inc inc pop or push jbe mov outsl neg add xchg fsubrs lea xor jecxz pop pop mov outsb push loopne shl xchg outsb inc inc mov mov and ljmp repnz add andl js (bad) jae add fbstp push inc popf and jmp pusha loope xor mov sahf cmpsl in arpl lcall mov icebp cmpsl xor jae aad mov (bad) pop lahf mov jle std xchg test jmp pushf cmpsb inc adc xchg imul loopne jnp,pt (bad) mov inc cmpsb pop jbe fcomps mov dec sub aas lret cmpsl addr16 adc movb rclb xchg mov stos rorl daa outsb std popf pop jne test adc pop sbb dec loope add mov push dec mov aaa or mov push loop xchg dec sbb mov je xchg addr16 push cwtl les outsl sbb mov or fimul jg fimul push inc cwtl or fadds sbb lcall add and cli cmp fxch mov test or rorb cld clc and xor pop lods inc int3 ljmp imul int3 jge inc iret int3 ret inc ja test stc shll add push shll jge push shrl mov shlb pop cmpb xor mov jg cwtl fidivl mov mov insb xor mov mov inc xlat cmp dec (bad) subl clc pop test movsbl daa add push (bad) fdivp stos (bad) jmp sbb out adc (bad) push repz fisub js push pop pop xor push or ljmp mov mov lret mov dec pushf mov or jns ljmp sbb andl adc (bad) into push mov cmc mov stos outsl sbb es xor ficomp and jno das aaa cmp flds jmp jbe cli (bad) lock repz fsubr sar sbb mov sahf inc and xchg dec dec imul lods mov je,pt (bad) divl dec test and add outsb pop and jae jmp mov mov out (bad) mov pop sbb movsl xor fimull jecxz push into xchg lods in or (bad) inc movsl or sub sub push inc pop jne jo addr16 mov jns cli pop mov (bad) or pop ds mov aaa or arpl sbb cmp test cwtl sbb movb leave nop repz jns fwait (bad) call xchg lret xor mov out std ljmp iret xchg bound add lret loopne pop in inc and mov insb insb or and cmp pop fwait xor jp cs call int3 add adc add (bad) sbb jle push je sbb jbe jecxz or lock shrb movsl and (bad) jp into dec inc stos push in mov jl or int pop mov (bad) cmc gs sbb mov mov shrb xchg push jg pop sub cs lds imul test pop xchg aaa dec outsb lahf insl mov add cmp lret dec xchg or adc cmpb cmp (bad) add shrb scas adc aaa mov mov mov mov push xchg inc (bad) cmpsl pop add loop cmpsb mov cmpsl (bad) jmp mov pop and int3 cld loop test lea jl sti xor inc or fs lcall xlat ss push sub mov dec or outsl jle pop adc es push inc inc or addr16 nop mov or pop adc cmpsb ds movsl test mov (bad) mov in dec imul and push mov fadds arpl mov add inc cltd test decl cmp lret or push sub cmpsb jnp (bad) xchg lock cmpsb bound or xchg (bad) rorb push dec outsl jl xchg pop inc orl mov data16 and subb popa jg outsl orb push ficompl movsb cmp dec jg dec test loop xchg or call (bad) pop inc stos sub adc (bad) xor fldenv fmul sahf mulb cmp cmovg and std fsubrl arpl call test int3 pop stc mov jecxz hlt or cmpsl dec shlb adc and xchg in xchg add out push cmp loop mov sahf pushf fwait sub dec ficomp and leave movsl jp mov mulb iret mov cmp cltd in sti pop fadds in mov inc mov (bad) pop and xor in xor aaa rcrl shll aam (bad) jns in mov xlat push pushf jg roll mov or mov and pusha data16 inc cmp xor cmp push push jl test xor sahf aaa pop ds sar rorl gs jp mov jb repz pop and aad mov out xlat inc inc ja,pn lods movsl (bad) aaa push xchg push sub cltd push or push sbb jl xchg sbb xor int lds mov inc clc imul out (bad) pop jnp dec imul xor dec xlat inc fdivr scas movsl ror fdivrl fwait js scas add mov enter fs mov xchg pop (bad) sbb sbb and xchg (bad) test leave push jl xchg sub jge inc popf pop xor sbb dec cmp cmc xor cmp pop xor mov cmp mov cmp nop add jg pop dec or xor sub jge sti notb dec fcmovnb shrb mov sbb sti cld xor cltd loopne xchg (bad) mov movups movsl sbb das sub inc xchg movsb push popf xchg sahf and repz out push repnz lret mov pop mov cmovge pop push outsl pop ss lcall ss and (bad) mov sub sub inc mov xor ds cmc lds std add cli xchg lds stos loope sub or mov sbb in in push pop adc out and gs inc mov mov mov shr push sar aad movsl addl icebp push movsl adc clc arpl xchg mov call mov insl pop add add mov sbb pop push pop push sahf mov incb jb aas sub sbbl dec dec and jp adc fdivrl fiadd movsb pop pushf add fsubl mov sub scas cmp pop and adc mov pop ret adc sti or and and or jle jno lahf sbb push sub sbb imul jns,pt jge jg mov add out mov mov jg or or mov mov test pop inc jp and inc out mov and ror mov pop push xor cli das fbstp pop push xchg faddl aaa lea mov loope inc lea adc mov add jbe test lds pop ljmp mov cmp mov aaa enter dec jge in loope mov inc in jl mov jge (bad) sbb outsl adc jl mov fwait push push out imul inc mov and in lret (bad) cltd pop mov out int dec adc jge pusha sbb ret pushf lea aas push cltd (bad) add dec mov out push imul ret lret enter xchg fldcw cld (bad) ljmp sub outsl nop sbb enter mov fistpl cmpsb nop popf rcl jnp ljmp into (bad) sub negb nop pushf xor sub cmp lock mov (bad) pop push ja popf adc sbb (bad) lret ja xor pop inc stos test into loope aaa push lahf xor mov mov (bad) jns je bound adc lods insb lcall dec push xchg leave or sbb cld xchg into ficom dec (bad) mov mov stc push ret aaa loopne call cmp es (bad) push pop in jbe mov mov mov aam dec cli and dec mov push (bad) rcrl lock and cmp lahf or int lret addr16 dec inc dec jns xchg mov jl leave cmp mov inc negb jns inc jne mov dec stc adc gs pop sbb in jnp ficomp mov in fsubrp add not pop ljmp inc inc jp addr16 ja in out in test jmp add push mov daa je (bad) stc (bad) lahf imul lock (bad) aad nop jl inc les jge add push sub dec dec mov sbb dec repnz sub dec stc lods cmp pop pop daa add in inc fcoms cmp daa cmpsl inc add xchg sbb lods mov popf test dec out mov jnp or push pop outsl push shll or sbb jo ror vpandn stos add addr16 sub dec push push aam push jmp clc stos sbb stos inc nop pop pop and mov dec adc mov mov loop ror adc test ljmp shrl inc test scas xor mov in xor cmpsl and jmp in movsl mul mov inc es pop pushf add xorb jecxz scas pop lcall fldenv cltd dec push sub fnstenv adc inc repz push test jecxz sbb mov jnp inc push repz scas ret mov sub add out inc dec stos imul lea std sbb je fildll pop loop icebp push dec sbb sbb adc sahf test add xchg (bad) push icebp add cmp push mov sub add daa call pop xor dec ds fisubr inc xchg sub cli cmp and sahf xor and push pop xchg pusha je and test mov push fdivrl inc mov dec les push add xchg ja or in (bad) loope push jnp push push lahf pushf scas pop lea repz in cmpsl lods jge xor add dec mov aam adcl adc and dec dec jmp dec adcl add jmp mov fist xchg push popf pop test adc inc mov inc rol rcrl ljmp imul lods (bad) repz cmc out jb fsubrs add mov xchg mov mulb push cmpsl aaa sti xchg pop or sbb dec jg popf test test pop aas movsl mov pop jnp mov push jo pop inc pop out stc jg jecxz xchg test icebp mov out mov mov bound fiadd mov gs call movsb inc cmp jmp hlt mov sbb push jb pop jo movsl bound and add stos mov mov fstl sbb pushf dec xchg hlt lret inc insl mov out sbb inc (bad) clc outsl rcr mov push sti adc retw (bad) mov in jmp je aad jp pop fisub lret (bad) pop add lea sub adc loop insb mov test out mov dec cmp lret jo loopne mov mov call cmp sti out sbb cmc lahf sub xchg enter or (bad) fcoms push js xlat xchg push and mov dec das hlt inc mov push jmp outsb push sub repnz loope and jae pop pop lds sub inc cli or std cmpsl in jp shrl push (bad) inc cli push shlb push add dec leave pop popa inc repnz test mov xchg inc and shrb sub jno test ds int xor cmc call fsubrs leave fs inc or insl lahf into mov mov test jp sub dec xchg (bad) and movsl jb divl ret inc mov jbe shr cmpl sub cltd adc cli nop mov out mov sbb pop pop insb lock fsub inc (bad) jge mov mov pop adc out int cli (bad) or daa inc xchg mov push sti pushf xor mov mov jae (bad) xor sbb mov in cmp test cltd mov push mov aaa test popf ds ficomp je jge jge pop pop dec jp movsl mov ljmp push ret pop mov lret jecxz int3 jb add cmpsb cmp xchg (bad) adc int3 jno mov mov cmpsb or sbb call clc test clc (bad) push xor out adc cmpxchg ret frstor rolb xor les popf aam sub (bad) orl xchg cmp out (bad) loop pop fs pop push push sahf sub jo xor outsb pushf js push mov stos xor mov rcll aam jl hlt pushf popf adc push sub shlb aas cmp popa lock jno ds push push adcl pushl jge push repnz jns push fisttp jns push out fs inc mov mov sub push (bad) inc dec mov push cmpsb mov push push dec aas mov sbb mov and lock arpl cmp jb ror inc ljmp mov pop pop xchg pop push mov adc (bad) ja sti lret into icebp inc sub mov js loop xor out data16 rolb jg sub popa in mov sarl fcmovnb in pop aaa fistpll sbb xchg xchg push (bad) loopne insl jecxz push fs mov js test cmp hlt (bad) in jb repnz incl mov imul push ds imul int3 cmp or inc mov add cmc xchg ror daa sbb repnz in xlat test pop inc jmp addr16 fildl (bad) and mov je mov push pop inc mov stos in pop xchg mov test movsb (bad) jle dec xor jmp loopne jo push xor sti rcl in cmp dec mov sbb andl push push cltd sbb test inc adc and mov loope movsl iret fnstcw inc ljmp mov fsubs popf rorl cmp mov push cmp daa je imul cwtl inc cltd fucomip xchg lcall stos stos pop cli dec out dec jbe adc inc je xchg shr xchg fildll repnz cs adc pusha pop xchg adc lahf daa mov imul shr or adc lods jg ds push out call mov (bad) mov add addr16 lahf negb cmp cs insl pop cwtl cli mov xor adc xor mov sub adc sahf call mov ror stos mov adcb mov xchg int3 pop cmp rolb add jbe nop insl add dec or sbb add stos (bad) sbb inc (bad) push cli outsl cld mov sub cmp loopne mov cltd ds aaa hlt adc mov jecxz push and inc (bad) jno dec ret dec add push and push xor sbb push and loope xor out movsb xor pop inc sbb cmp mov ror push repnz mov xchg cwtl sbb push test icebp xchg mov xor or jns mov or mov (bad) (bad) stc xor and pop cmp mov mov fist xchg add fmull and (bad) loop aad lret inc scas les mov ds (bad) adc adc cmp ret fidivl push les fiaddl pop insl ret cwtl jno mov bound es push mov mov xor mov pop stos ss std jbe jmp and sub pusha rcrl and dec adc fwait ljmp push roll lret imul adc xor pushf dec pop xor aaa lea mov adc fcmovnbe and nop insl test icebp fild mov xchg xor mov or dec cmpsb mov dec mov dec xor sub cwtl rcrb arpl inc jmp mov lock leave sub cmp enter imul push xor (bad) mov jg jge jl es (bad) cmp sti jp add mov pusha jmp cmc adc (bad) loope into repz pop push and mov lret loope pop jp (bad) frstor xlat pop sub rorl (bad) mov addb push cltd aaa xchg dec pop xchg popf not and cmpsb mov pop or mov dec lea xor mov xor cld mov mov ss or icebp jnp nop pop cmp outsb cmp ret ds pop outsb jg mov jl pushf and xor mov push daa xor call orb out mov jb push repz push sbb (bad) fiadd bound icebp sti jl lret leave rorb testb xchg inc dec lahf ret adc (bad) cmp lock insl addb or popf add test jle ja mov jp int fs aad in cli push scas mov pop pop fdivrs mov xchg or repz mov fcomp stos lcall pop and inc mov jns jno addr16 mov push pop cmp out out imul imul fld jge push adc and dec ja xchg lea adc dec push pop xor and cmp mov dec aaa cli xchg inc sbb lea mov pop push xor mov cmpsb loop aas outsb xorl aam mov pop js lahf popa jno add outsb mov mov cs adc cmp xchg data16 stos dec mov clc mov mov mov ret das push je sbb add leave adc xor jns pop leave xor sub (bad) fmulp in or adc imul pop inc inc lods or in ret out cmp cmp and lods rorb clc pop gs in mov pop lahf dec mov test jp inc arpl push test pop mov test stc loope push xchg xrelease sub adc cmpsl shrl cld dec int3 ds ret lea or movsb sub (bad) icebp mov dec imulb push mov cmp push sarl pop adc clc in (bad) mov out push push jg ja add and pop sub mov mov dec movsl mov adc sahf lahf fadds sbb push insl add mov sbb sarb test cmp adc cwtl cmp idivb push popl fildll ljmp (bad) dec iret es incl xchg jne pop pop out ss fildll sbb fcoml dec jne hlt stos cmp cli push xchg mov pushf push jno cmp add insb sbb out test (bad) repnz xchg mov pushf lahf xchg stos jg insb cmpsl sub cmpb jge sbb lcall test inc xlat out int mov xchg xchg inc and shrb scas test imul push repz (bad) in pop ret sub adc fildl loop rolb icebp mov and cli dec les insb inc rcrl mov sbb arpl mov in xchg (bad) sarl push dec (bad) pop add lret mov mov (bad) (bad) aam repz (bad) and leave (bad) and stos fs inc lcall dec lcall jae sbb xlat clc ljmp aam repnz pop dec mov fs pop xor das insl mov push hlt js insl ljmp mov jbe jo pusha pop ja mov push adc and sub xor cmp add lcall popf jae cmp fxch in mov icebp dec xchg dec lcall xchg push outsl sub dec mov and fnop das gs push lcall lds rcl jge inc jg jecxz mov and jno sbb dec add add dec or xchg (bad) clc push neg int3 inc jb inc mov (bad) insl sti pop aam pop clc (bad) out ret sahf adc add add push dec insl into hlt test sbb pop and or enter fsts (bad) xchg clc mov adc cmp and leave in xchg icebp dec dec push pop mov sub mov mov or fcomi mov mov out jne clc push mov and mov ss pusha call sbbb outsl leave ds xor inc neg jp or test fmuls xchg decl das inc jnp in pop jne sbb pop dec enter jge jecxz jb subb xor int push fcmovnbe cmpsb and or movsb pushf inc lret jl pop jp jns mov lods popa or insb or (bad) adc fs mov xchg cli pop in push and addr16 scas add push xchg xchg push mov mov mov sub cmp push loop push dec inc jae imul out fwait adc or imul sbb test xchg sbb xchg lock xor stc jp dec test icebp int push push loope or fimull or and in push jmp outsl add dec fwait negb std xor mov add adc mov xchg and cmpsl inc mov jno xchg add leave ret insl mov push cltd movsb sub inc pop adc push pop jle loop cli test jne and and add cmp (bad) sub rcll stc iretw out lods enter cmpsl hlt (bad) jno ss ret in out mov mov mov jp mov pop push xor jns mov and or mov ss das mov jae cmc mov sbb mov add mov dec pop cmc or pop sbb lret or or (bad) mov mov test (bad) (bad) or mov and sub iret (bad) rolb cwtl adc shl mov fimull jle adc leave adc add addr16 or fildl mov pop mov rorb or (bad) pop ret dec inc dec (bad) jmp xor mov or mov add fiadd jns mov in imul add rcrl in push cmp mov bswap xor xchg mov pop dec out out outsb inc stos movsb dec xor int3 (bad) xor xor sub mov lds pop xor aas aas jmp es push push cmpl jbe and dec out bound add iret es lcall in and mov push es in insl push je cmp mull xlat push mov mov sbb sub mov cmp ljmp adc adc and enter call push push jg pusha int3 pop in cmc xchg int dec shr mov xchg les fstp (bad) dec push movsl push dec insb or jg mov jns push mov inc nop jg aaa in push pop ja aaa (bad) ficomp cmpsb notl sub mov ret adc imul xlat or lods cmp pop xchg popl xlat or jb and push out or cmp cld push (bad) jns inc subl jae (bad) jo iret xor or cmpsl mov test jo je iret pop or test inc out movsl inc push rcr mov rol sbb lods stos jns (bad) fcomps std or push nop dec addb repnz jecxz ffreep in stos inc cli out loopne lods test sub jmp (bad) jl mov sbb cli pop mov adc mov dec xlat jae stos adc and out cltd rolb cltd jnp jle dec out dec push push ds push inc xor leave inc jno sahf mov jl movsb popf or xlat jg aas insl out test cmp ret adc (bad) fmul jge pop arpl jne mov sub pop sub loopne fs lret outsb decb cmp or (bad) sahf gs xchg jns outsb daa ret lret push insb or mov adc pop pop roll mov out roll xor add mov lods push sub and add and (bad) mov sub ret or into or andl enter cmpsb sti cmpsl sbb xor sub xor push ret xor inc (bad) pop aaa pushf les je arpl or inc mov jae in lock lods or pop xchg mov outsb jp stc push dec aad or (bad) and loopne fdivrp ds inc adc movsl aaa mov push dec and xchg mov out insb pop lret sbb pop sub and (bad) xor fwait jne insb mov fidiv lea push mov xchg and (bad) in pop fldcw and mov cmp cli hlt add sub ljmp push cltd adc jae xlat push ret dec sub sbb push (bad) jge ret shlb js mov pop enter jo js addr16 cmp imul aaa add push fsubs mov mov push cmp enter in xchg or jmp cmp repz fcomi sbb inc sarl aas data16 dec fisttpll pop cwtl push out out fmull lods fcompl adc cwtl cmp mov repnz lods popf fildll jnp addr16 jecxz mov add fcmovb (bad) std push (bad) shrd lock add cmp stc dec aam fcoms add (bad) in sti mov adc icebp mov xlat sarl mov lea insb rcrb push jno mov mov daa gs es or add and sbb xorl lcall lret aaa jnp les outsl fwait sbb repnz (bad) jns int xor insb pop mov pop leave vpaddusb loope push subb sub mov daa dec ret in sbb inc (bad) repz movsb je lahf and int3 enter push mov in inc in xchg mov pop mov in xchg jmp je sub pop sub or cld loop fnstenv push pushf cmp pop negl pusha dec leave je mov push jno pop js decb dec push cltd sub dec imul (bad) sub pop xchg jle or push in add mov cltd jmp fsubrl pop mov (bad) sub fwait jo test push jno test add sbb and adcb or add movsl adc (bad) pop scas pop xor iret out xlat mov add mov pop or or lods loopne jno xchg scas sbb lods mov call in sub loope add xchg xchg loope mov mov inc ficom xor jns mov fwait pop pop fwait mulb stos out sub jns out adc mov (bad) dec out shlb mov mov xchg dec popa aad mov cmp dec mov int3 dec mov mov adc mov imul mov jno aad sub cmc jg mov push pop test jge mov cwtl jle cmp push rcrb std xor rol push cmp push xor out insl sbb nop lds dec (bad) fldt sbb lods ljmp mov lcall nop pop gs lret sub lods mov mov jle divl jo lret test roll cmp pop cli fnstenv lock arpl inc jmp bound or xor lods lock pop subl and jge adc in fadd pop add xchg (bad) cmp ret jmp (bad) push jbe or push push aaa cmpsb cli repnz mov out mov sbb ret push rclb imul jmp cwtl pop lods ficom sbb xchg mov ljmp movsb jno or enter jle fcompl scas shll inc dec pop arpl (bad) sti cmp subl cmpsl jne add (bad) push icebp xchg scas add push loope js mov inc aaa call repz lods cltd push and es lahf pushf pop ret xchg sbb loope xchg loope push lcall int inc dec mov test xor lahf mov fcoms (bad) (bad) cmp mov cli aad (bad) or xchg ret sbb fwait clc or sbb inc mov mov enter stos dec test mov notb mov leave mov mov js mov cmp mov pop aad aaa xor xchg aam imul aad gs sti out mov cmpsb repnz repz mov insl mov jae cld mov fsubrl adc fdivl mov nop (bad) jp fxch popa sti cld xchg jecxz push inc or aas and sub push inc outsb inc cmp push push imul lea lcall (bad) lock add test adc sbb xor test sub dec sbb jo push add jmp dec push cs add xor orl mov push adc (bad) mov stos mov mov clc mov and addb mov dec sbb sbb mov sub lods push sbb jg lret std adc in mov inc dec sub (bad) imul add xor shlb xchg sbb dec js jnp jb dec lret pop dec stos mov fimull jle pop lcall jns cmp adc mov cmpsl imul mov xchg mov (bad) lock mov inc popa stc mov lahf pop jg icebp test insl jge and push psllw js test xchg mov xor lds dec adc or incb jecxz aaa lods xor cmp cltd adc jns pop push push cmp jmp push cmp leave pop lods mov inc cmp push mov sbb loope adc cmp inc pop pop roll loopne call xor out sbb rcll jle xor pop lods rclb je sub sub clc adc jo xchg in or xchg fstps cmovne lret aad hlt xor insl jg mov popf push xor mov loopne jne mov mov push cmpsb jecxz movsb pop int in add or add je incb sub sub test les outsb outsl outsb test adc mov or stos sub sti ds insb and push add ficom clc dec ret mov shr test addl (bad) sbb mov inc mov and movsb mov cmp divb jle and xchg xchg push push ljmp (bad) fstps jp sub popf cwtl pusha cmpsl pop std je mov jmp lock iret adc (bad) out ds enter mov iret hlt inc sbb test sti aam xlat stos xor mov popf loop mov out fsubrl sahf ds sub rorb jl repz dec lds js,pn mov push sbb or jecxz loopne xchg cli pop arpl push js shrl (bad) fldcw fdivs (bad) fistpll or lods jne xor ffreep rcl sbbl out arpl les push mov insl or jmp mulb test (bad) adc pushf push jp jbe aam xchg mov fs ja rol jnp jbe xchg popa inc repz xor or fsubrl in lock les (bad) lock cli outsl daa cmp popa icebp inc sbb mov mov lret add and push (bad) arpl fstps ret push jmp repz mov xor adc xchg sbb sbb in das or xchg test jbe stos fwait jmp arpl into xor aam push xor ret ja loope lcall add loope xchg pop mov lcall xchg xor adc pop insb test xor sub adc test xlat jnp sar test pop dec aaa outsl jle jae lea (bad) in pop inc lret xchg mov jo mov ljmp out test in pusha mov jno xchg xchg mov outsl scas test jecxz adc mov or nop and (bad) xor pop cmp inc (bad) and enter mov test cmpl js xchg popa mov pop mov insb data16 out neg pushf xchg pop pop xchg sub inc xor push js dec das (bad) movsl mov orl push pushf movsl inc in fnstsw mov adc mov fisubr clc push cmc cmp (bad) or sbb ja test rcll jne jmp (bad) into test mov and ret out fdivr push cwtl dec jbe shll sub es lods mov mov push jns add pop jnp pop in pop inc movsl inc iret mov xor or xchg push xor adc pop dec leave clc sub add fwait add adc les dec pop mov cmp es cmp cmc or and mov add adc mov test push pop test sbb call jo out cmp mov add (bad) pop nop fs shrb test cld and cs out xchg decb je repz xor adc mov lods stos iret aad lea call jecxz xchg call mov iret arpl jmp dec inc and int3 xchg js (bad) pop popf jo insl movsl inc incl cwtl xchg rorl imul mov test mov jo jp lods pop test mov adc pop sti adcl sbb mov nop jbe cmp out mov mov sbb jns sbb cmp sbb inc add test mov xchg cli enter xor insb jae mov jge loopne imul pop inc fadd lahf into adc scas cmpsl pop fistpll sub rcr lcall jns dec xchg inc test pop movsl sub push mov and mov fidivrl cmp xchg outsb inc cmpsl xchg dec cmc aas push mov xlat pop jmp sbb push mov mov fdivs scas int pop mov mov nop adc pop data16 pop fs inc and fwait add pop xchg lods pop lods cmp inc es mov push lods xchg imul mov fmuls iret sbb push stos jmp add rcrb repnz outsl sub dec sub cld pop in sbb inc pop out stos inc adc ljmp call lret cmp cs sub sub or loopne mov pop xchg (bad) or dec adc ds stos call dec lods rcrl shll gs or idivb or jo loop mov sbb adc dec fwait int int3 pop xor mov push fnop sbb cltd and aas mov sbb xor lahf and mov lret rolb and jnp sub pop jbe xor pushf and sub add es and stos iret mov std cmp xor call and out scas lods pusha cmpsb jnp out xor mov pop stc pop js shlb fs lds pop aas (bad) imull xor cmp fsubrs aad inc loopne stos leave dec call cmp add (bad) int mov pop enter rcll inc stos fs adc stc flds mov xchg or sub xchg adc cmp jmp pop shrb dec mov cmc (bad) fcomi xchg xchg out add pop das je xchg lcall ja fisttp sbb (bad) (bad) je outsl (bad) loope add rolb fdivs stc ret icebp (bad) xchg bound push lock outsl jo test mov and cmp pop call cwtl xorl sub add nop pop in (bad) lock jg je scas xchg stc push cwtl inc adc jp ds in rcl mov int jne mov push aaa xor (bad) mov (bad) dec add addr16 mov dec arpl mov icebp ljmp insl and dec lods sub out je xor sbb inc (bad) fdivl cmpsl insb test pop repz dec adc mov sub nop idivl push into push lods lahf sahf cmp jl stos add mov (bad) and leave iret dec call inc in push adc mov adc adc ljmp xorl in dec je jnp cmp mov sub mov imul adc imul negb std pop rcrb icebp std rclb sbb out mov cltd push cs add and add push mov xor xchg int3 mov stos sbb in adc push inc cmpsl or adcl dec and rcpps (bad) jl js or fsubl aad xchg fnstenv lea ljmp int shrb (bad) xor or stos adc iret dec xchg xor push ficom int3 mov js xor (bad) addr16 and inc sarl call push inc cmp rol cmpsl in mov repz push cmpsl mov jno or and cmpsb out daa jnp xchg stos rorl (bad) call push xlat pop inc push xchg inc (bad) rol lret stos fucompp cmp pusha in push jne insl sbb cmovb dec mov push cmp mov push mov push pop jp cmp aad xor mov adc insl aaa adc or add jmp mov pop pusha push cmp or loopne in daa add stos cmp sbb cmc lods imul adc xchg insl int sub dec lret mov inc out lretw or cld xor std aam mov imul sub cmp or sbb xor movsl sub orl gs cmc fcompl shr dec dec mov cmp loop inc sbb xchg inc cwtl loop leave pop jecxz pop fisubrl shrl call cld mov jbe popf add scas and scas cmpl adc hlt je outsl mov mov sbb int rolb fmull jmp lock inc jns mov pop pop (bad) xor add sub cmc cld popa daa or sbb call in jno fildl jge stc cmp mov rolb into xor lret (bad) mov jno (bad) jg jne pop sub mov xchg insl adc arpl dec jne fistpl mov repz popa pop imul mov aad arpl sub cli arpl nop or mov xchg adc mov gs repnz mov insl adc ja test adc std out outsb jmp and test out nop push push xor sub inc subb dec lods jno sbb pop inc mov and and pop cmp or adc decl jecxz jmp jmp or pop add movsl cltd mov cwtl push lea cmc and test jo xor jb in add xchg imul aaa pusha pop test dec fcomip mov jmp stc or inc pop movsl xor sbb mov dec andl cmp pushf clc imul fnstsw jge mov mov pop xchg xchg inc js push lret popa incl (bad) xor sub addr16 or mov out out lea loop xor leave std scas pop (bad) ret fisubr adc adc dec add cmp inc inc adc jns lret jge xchg push pop ret push lret aam adc lcall divb cmp nop ret xchg mov xor xor (bad) mov dec mov mov out pop in lock repnz nop mov xchg das fdivrs out je adc popa mov cmp into insl xchg adc clc bnd scas mov outsl adc jae xchg xor cmp jns or bound movsb inc adc mov push ret cmpsl fbstp fwait imul addb inc neg inc aaa (bad) pop adc add lret inc push in popa mov int3 dec mov push mov or std jns fnstsw mov inc or or dec pop mov roll clc mov sub hlt mov loopne adc adc pop negb jle xlat scas cwtl inc ror xchg stos ss enter je repz aaa lcall xor lods and inc add insl mov sbb loop ror in mov cmp cltd and ficom jae mov aam pop mov andl adc fwait (bad) insl mov push add dec loopne add ret mov les inc lods sbb add bound mov cmp fisttp in mov rol xor sbb push dec std and inc xor pop hlt fwait test sbb dec push cld (bad) xor test arpl cmp repz lods into es push push inc test dec mov adc mov push bound xchg out shr mov push push mov xor rcl in push fidivr jg sahf and dec fiaddl leave inc loopne ja mov insl scas hlt adc aam xchg (bad) jae pop mov xchg out sub mov push cli push lea cmpsb scas sub jns sbb insl and push xchg in sbb sub dec scas add or xchg lods test aas je shl sahf adc ffreep jle testb lods cmp lcall xor xchg (bad) mov inc insb test mov ss clc ljmp inc cltd fucomp jg jmp xor mov jnp stos dec loop xor xchg or pop mov push outsb pop add (bad) idivb (bad) xorl or ss in movsb inc push scas int3 xchg adc add in mov stc in mov inc jecxz pop stos arpl dec mov lret pop out sti mov imul imul jg pop in insl loop xlat (bad) mov pop stos es je inc lahf mov sub daa sbb push jae mov sti movsb inc icebp push cmp lods xchg cltd pop fnstsw enter mov test imul pop sub jge lods stc or mov aam mov aas mov xor cmp es lret loopne lret push rcl jnp cmp lods bound sub inc mov insl cmp or xor cmp mov cmp lds pop and les jb pop mov out mov mov int sti dec and jp hlt jbe cltd dec (bad) cld jo aas xlat or add or mul out push xor ds cltd ror ja imul sub xchg jecxz sahf iret sbb xchg sahf or aad idiv xor int3 fsts jmp push add pop por int iret cwtl push pop mov fimul xor stos sbb or pop call cmp dec inc repnz push mov out and stos lods sbb in mov inc shrb lods xchg push loope dec pop fidivrl jbe or sub out into stos sub ficoml shrb dec pop sahf jg,pn push mov xor xchg pop adc insl push sub addr16 mov add or lds (bad) ja pusha js and out xor sbb movsw or pushf cs mov lock push popa into gs and leave jmp jno dec mov (bad) xor ljmp loopne cmp (bad) data16 adc leave push xchg inc ret out and movsl fldt fsubr jo xchg movsl xchg push inc fcmovnb adc inc cmc inc ret in xor es xor cmp adc (bad) scas hlt mov xchg sbb xchg imul xchg nop jo adc (bad) ds fsubrp jnp popa fistl cs pop imull cmp fwait sarb push sub (bad) fsts les ret jle sub push mov dec add lahf push adc adc sub addr16 mov jbe rcrl fnstenv push dec (bad) lds mov push (bad) mov sub faddl mov adc repz xchg popa xchg lret sbb incb add push and pop stos stos cltd aas movsb and dec inc cwtl jmp packuswb (bad) mov mov mov stos push sub dec pop jle rol dec xor fisttpl imul mov int lds mov ret lea fisubrl jbe or andl (bad) adc mov pop mov loop iret jle (bad) scas mov mov pop jnp dec aad test dec hlt pop hlt cs inc jp cmp mov mov jo sub (bad) (bad) cld aam (bad) xor mov test enter call cmc push cmp shlb mov xor das pop jp mov or (bad) insb test ds pop mov mov sti mov and cmp ss dec mov repnz dec push adc or icebp mov sub dec (bad) mov sbb mov imul stos sbb aas push lods mov addr16 icebp push adc push mov and (bad) mov pop test es mov lea in (bad) pop icebp (bad) sub mov popa in rolb jl fwait pop out mov pop shll sbb jo mov dec mov xchg in test cmpsl cmp sbb add cmp jmp aad mov inc add repz and push jbe hlt pusha aas push mov mov jae sbb jp inc add cli fadds imul push in and push js divb cmp insb mov stc add popa fisttpll jae jnp mov mov out sub cmp pushf inc mulb jae in stos xor icebp sub div cmp lods jmp jne pop mov (bad) inc mov iret jp decl fsin sbb fbld xchg pop or jo cmp mov adc adc lcall movsb mov dec or dec aam outsb fxch dec rolb call lock xor mov xor insl jle push cmp sbb xchg jp test inc (bad) out jo and mov dec cmp cwtl loopne dec outsb rcrb and popf xchg mov pop cli mov adc ss gs dec jge int3 fadds rclb push clc push das jle jge mov dec push cmp sarl or mov xor push in lds jb dec repz ja push lds mov sub jle mov mov mov adc add ficompl xchg fcoml mov (bad) push sub pop or dec inc ljmp or out push loope dec cltd mov pop pop and xor cmc xchg repnz arpl inc push cmc inc popf fsubrl fnstcw test xor adc pop sbb mov inc jnp lret clc les xchg xchg push mov sub lretw (bad) xor out jae inc aam mov cmpsb mov adc pop dec lds sub mov lock daa jo inc std xlat cmp or popa jns add sar sbb add mov cmpb sub or repz mov out mov sub or sbb lods mov mov stos add dec je (bad) dec mov push pop insl jecxz int3 pushf xor jp,pt mov mov js add xchg popf or andl inc mov push push (bad) or dec test popf out fcoms xor mov xchg daa jecxz test push ss ret inc jecxz lahf jle jnp mov fwait arpl pushf lods jmp jl or adc cmp xchg xchg sti aas push pop mov xchg add xorb mov jge insb xchg mov inc int aaa mov jo fistl mov xor xchg mov repnz icebp jecxz mov adc pop stos fmull adc lock into or arpl sbb push or mov in inc std inc xchg pop popa mov pcmpeqb mov sub pop push in sbb mov push add lret mov outsl cli stos leave sub sub sub mov mov sbb xor sub fisttpll enter pop push stos je pop int adc aam insl sbb jno shrb jbe push pop iret inc ficom jp sub loop xchg xor or dec clc xchg sub dec xor and mov js mov pop aas inc movsb and aad lock xor or call xor jmp addr16 lods push xor mov adc jbe outsb movsl (bad) hlt sub push out movl push xchg mov inc push sub (bad) mov mov mov leave (bad) icebp pop xchg jbe mov cmpsl rolb out mov repnz sbb push cmp stos xor xchg outsb jb pusha or and mov push push pushf out rcrb sub imul add and mov dec sbb add outsb mov fnstenv (bad) (bad) jg xor pop loope dec add in jbe scas sub dec push pop mov mov and scas pop je sbb inc sbb cmp xchg pop cwtl sti mov and outsb lcall fild sub repz mov jo,pt jmp and cmpsl icebp and test leave jmp in mov inc dec adc xchg add jl out dec dec andb push sbb aad add pop clc int out cmp xchg mov cli mov out (bad) pop add sub cmp dec inc cmpsl or (bad) stc pop das adc xchg xchg mov push aaa cwtl or jo aas inc fisub jge insb jp data16 add xor sbb mov inc mov adc push lret push out or leave repnz dec pop mov test push mov (bad) sub xchg std ret jo xchg pushf push aaa je fnsave adc xchg xchg iret jmp push fsubrl add sbb add stc andl shll push insb and rolb adc add jno jl je mov xlat xchg push ds int test rol (bad) mov mov sub sbb mov pusha int mov pop rol inc arpl in popf jecxz ds loopne or (bad) mov mov scas inc xor cmpsb xor jmp or cmpsb xor inc and push daa add xchg dec jae pop pop mov push push aaa das and lea stos es fist addr16 jns push mov sub push adc test pop jbe pop and xor ljmp clc xor sahf mov mov mov aad loop call (bad) jp inc inc call sub dec into leave jecxz mov sub xchg pop sbb mov push sub mov mov push lock sbb xor mov in pop in dec out xchg sbbl data16 adc inc out lds idivb imul adc repz push fimul jb xchg push arpl cmpb xlat inc and add mov arpl xor adc adc dec and loop mov xchg ret jp dec mov cmc shrb push mov fs sub repz call mov dec mov and iret pop fcmovu pop xchg stc adc out or add loop add cld scas xchg iret into inc and mov xchg mov imul mull pop nop sti (bad) loopne cmp cmp cmp hlt xchg je out mov (bad) push inc push std outsl mov and sub ret xchg push into movsl roll cmp dec adc (bad) sbb cmpsb or jecxz push fadds xchg test push add lahf movsb int3 pause into dec lcall push fsub lock adc insl loop jge fwait dec pop mov incl pop arpl in dec xchg imul push lret cmp push shr xchg dec jp mov je fild dec ja jecxz jnp nop xor sub out dec ja cmp cmpsl mov xor out xchg aas (bad) or mov cli dec lods push mov dec jnp fistpll movsl das adc cmp sti jg mov or nop dec adcb cmp mov sbb mov ds imul sub fildl enter xchg arpl lods push cmp call stos aad add add and push mov stos inc mov dec in mov (bad) inc xchg popf mov ja and arpl sub mov or (bad) jecxz imul ret test or lds sbb mov sub (bad) ss adc cmp sub and shrb ja in ret cmpsb cmc pushf shl shrl lods lea ss xchg out rorl lret mov inc add push xchg daa sbbl inc ror push arpl dec and das bound add cltd lret pop adc iret xchg cmp push cs loopne lret mov dec (bad) add (bad) out push (bad) jl xchg jge mov jae mov stos incl jnp mov mov sub imul jne adc adcb xchg jne mov (bad) xor ljmp adc int3 and jb jmp cmp sarl mov pop daa cmp and cltd pop and rcr lods fwait xor arpl fdivrs adc or add inc push jl sbb ret cmpl orl aas and push fmuls jmp mov pop mov call je and cmp loop test inc sarl push test sbb out sbb mov outsb cmp dec pop mov inc std add push or push and xor fsubr fs fstpt push push enter pop hlt mov fcmovnb arpl hlt test sub or imul xchg jo xchg stos jb and (bad) (bad) and into xor fnstenv cmp shr in (bad) dec push mov mov addr16 pop sbb adc insl imul mov mov aam jno fstpl pop shl lahf hlt andb push arpl hlt cmp std ret loop mov je pop sub cmp fisub outsl xor mov fwait inc mov adc enter int3 mov add jb fildl jne aam adc inc fnop xchg fs cwtl lods push and jmp inc sbb notb mov and frstor sub scas pop xchg inc icebp icebp scas sbb popa std mov (bad) mov cmp pop xor and arpl (bad) xchg sub mov sub dec jnp xchg push arpl push in xor aad ret fmuls jnp scas sub lret (bad) out pop and push fdivrl (bad) in shrl int3 jecxz mov adc jge add icebp add or add cmp popw lret mulb scas adc pop add inc gs push jmp movsb xchg ret inc mov sahf pop dec mov scas pop push pop shl inc mov mov dec add cmp push push pusha dec xor xor scas nop nop repz xchg std pop xchg adcb push outsl test inc hlt inc das fs adc or xor cmpsl jl xchg int add push lock pop xchg jg mov pop dec push ret hlt xor fbstp fs dec sub xor les mov std scas jne inc cli add inc adc xchg sbb inc dec (bad) jecxz jbe or mov lea pop or dec cmp inc fcoml or out out push idivb xchg add adc loope jmp data16 lods lahf das stos jae inc repz aaa mov mov nop in xchg sub clc ljmp jp bound adc xor fldenv add les cmp loop bound jge (bad) add xor testb (bad) lea call mov xchg pop addb push cmpb mov leave sub (bad) pop cmp addr16 push lods (bad) ficompl pop psubb xor push popa cmp mov cmovne inc mov push dec mov mov mov sbb add (bad) loope mov fs pop xchg (bad) adc mov cltd loope xchg orb rorl cmp aaa scas jecxz jmp sbb cs enter (bad) cmp xchg test xchg fmuls fildll in push test es xor pop or xor in out daa push (bad) insl jno iret cmp ljmp mov ljmp scas push sbb jb lea icebp fdivrl scas cmpsb mov cli and mov mov test add mov pop dec cmp (bad) mov dec fiadd fldenv (bad) nop sbb stos sub mov ss and dec jle imul negb cmp rcll ret hlt and clc add aas repnz cmp daa sbb in xchg xchg mov mov loop xchg xchg and sbb mov call orl pusha inc popf adc cmp sahf shrl pop xor sbb mov in shrb loopne sti pop outsl push aam mov and mov pop scas pop dec lods mov add inc dec fsts add sarl ret and mov fwait int stos ss lcall lcall (bad) (bad) jo push inc xchg add lods pop adc mov lret dec adc mov mov mov fs mov scas mov push and cmpsl sti dec or or mov dec inc in rcrb sub push pop into wbinvd and xchg xchg cmp dec and cld push dec lret fildl aas or push adc jno pop mov ds cli repnz cli cmc lods subl shl mov mov xchg jmp push std fsub xor adc add int mov push and ljmp xor loopne jg mov popa jo lods xor enter rcrb inc jae sub pop out loope dec adc adc repz mov pop push pusha out jmp mov jns mov push cltd mov xor xchg cmp and mov pop adc scas in test pop xor les fisttpl test cmp mov mov mov fdivrl mov and enter icebp add push jbe scas js test sub stos inc cmpsb adcl xlat or iret mov xor jmp es mov movsb jp inc adc jle push mov push add and jge repz test dec pop or adc dec sub repz push ja lret rcll push mov jo popa mov and in test pop inc inc jb incb flds jne cmp (bad) mov xor fdivl ret pop aaa bound (bad) faddp mov les push mov sub jbe add ret mov sub orl inc aam pop jl bound mov popf insb pop push inc divb ljmp dec xor or inc and (bad) push lret xchg xchg mov cmp xchg adc adc call cmpsb push into test in inc mov repnz lods pop loop xchg mov jle sub imull loopne push xchg and add out ds stos lahf pop fwait jb jmp out lods sahf (bad) push adc push stos test call repz sbb sar call add enter fisub in leave cmpsb aaa aas in or inc xor sub mov add int jle enter sbb sarb aaa data16 sub or and sbb (bad) pop mov fwait jmp divl lahf mov dec enter pop xchg cs cmpsb out push xchg ss add push dec negb leave mov dec jno out adc fs repz mov aaa sub (bad) lahf mov cmp mov mov aaa mov sub pop cmp and push adcl cmpsl arpl call inc xor test es shrb in test in xchg test or dec mov jae ret add push les cmc into sub inc cmpsb sub pusha push int pop scas lcall cmp rclb aad in mov repnz (bad) xor daa lcall sub xchg (bad) decb movsb adc imul mov movsl gs mov and pop xor (bad) cli fstl popa xor pop divps mov mov dec js imul lea jae ret in mov (bad) fmull call stos dec push mov xor pusha fstps ret inc sarl out jbe movsb ret pop outsb testb push (bad) in xor pop mov aas aam xchg lods dec inc fucomp ja cmp push mov adc data16 adc (bad) sub and and add fwait lods push (bad) nop nop push sbb xlat (bad) ds imul xchg xlat (bad) out mov inc or mov push sbb gs sub (bad) lret sbb test subl pop les push aam in xor adc jb cmp sahf les push out (bad) pop arpl stc mov and lahf jns cs mov xor in inc rcr das subl jg sbb rcrl idiv mov mov popf scas mov jmp (bad) icebp cmp cmp jmp and in and push xchg ja sub push push add push and pushf lds sti rorl cmpsb shll mov scas or lods loope (bad) in (bad) shlb scas dec pop jns (bad) mov stc and je push dec xchg xchg in out mov fildll push xchg jno xchg sbb xchg jmp and into cmc and imul cmp iret stos mov scas rorb das pop jno jno (bad) cmpsl xchg jbe (bad) jge and pushf lods stc je sbb outsb jns movsl xchg rcrb dec dec pop xor sbb jle xchg aad dec iret dec dec in pop cmp dec hlt mov inc loopne mov sbb data16 xchg push inc pop dec jae dec sub imul cmp push aaa insb iret sub jae or and popa sahf lock gs push cwtl ja sub shlb mov arpl repnz movsl pusha movsb xchg dec lock sub push lahf inc and sbb mov mov sbb enter mov xchg loopne aaa sbb adc in jae daa lret out dec into cmpsl pusha mov and push pop or movsb cmc sub jg hlt xchg enter fcoms and fistp repnz mov ret xchg inc cld ret mov outsl popa xor xor test in inc out cmpsb (bad) jl es int3 push cwtl xor xchg lcall out std into xchg mov sti out xchg xor ds sub gs xchg sub sbb dec fcomp mov and hlt scas in es dec mov adc scas mov (bad) divb ja jne or add push fucomip nop fsubrl arpl sbb push adc xchg (bad) mov aaa jb mov test int3 les imul inc dec in mov hlt adc mov stos and sbb das and dec add xor and stc js and fmull sub call push cmp inc mov xchg in mov mov push sbb cmp hlt mov mov cmp adc add incb cli inc and je push test sbb mov psubsb pop jl cmp add pop stos (bad) inc push add xorb mov inc jbe or cltd adc lret shl jp cs stos xlat inc or or sub pmaddwd xor insl imulb fcmovbe lods in fs pop mov push js imul mov mov mov enter push movsb add inc xchg sub repnz ds dec add repz arpl sbb into rol or add outsb push pop add add fwait movsl xchg icebp or or push loope inc aam cmp and js movsl pop daa es mov mov js int movsb daa outsl mov mov or dec jl pop test roll jecxz rcll push popf call xchg cmp bound movsb mov mov fdivl mov mov mov pop push jb loop mov and push pop aam daa xchg add jecxz int3 jp loop aaa mov mov insb dec cld and lcall outsl cmc pop or jne cmp fisubr pop sbb inc pop fnstsw insl fiadd movl xchg jge xor mov iret mov pop push loope popf dec bound jecxz sti out adc mov aaa (bad) mov dec insb (bad) dec or dec out pop pop sbb fisubl out cmp sbb pop mov and (bad) xor dec pop scas pop mov cmp rcpps xor rorl stos mov pop aaa push jge (bad) fisttpl mov bound jbe call out scas rorb in push jbe add cwtl movsl gs fildl (bad) lock jnp or iret movsl aad enter add xlat (bad) mov pop pop (bad) sub xchg adc xor inc adc push cmp or sahf mov adc fstps pop push test pop jnp cltd mov push mov adc cmc into sbb fldl lods cmp cmpsl xor xchg mov rcr fs jg lods aam jle pop lret push ret mov mov sub sub push int3 mov aas adc xchg ret or ret fwait (bad) repz scas sub in insl in jae cmp arpl stc sub mov push xor stc fisubr dec aaa or jmp into outsl sti jp (bad) mov lret repnz aam idivb fcmovne dec or cmp (bad) cld in sub add insb jo test (bad) mov cs lret enter out sti mulb or jmp sub out loope push or addr16 enter or cmp adc mov adc cmpsl add loop dec bound push leave fnsave mov cltd jecxz add and pop pop arpl enter inc add xor decb push sub xlat pusha and (bad) jo mov or xchg push or leave jae jg and mov push mov sbb sbb lcall icebp std mov mov ja cli aam ror and inc inc cmp adc rorb jle out jmp daa gs in iret in pusha ret pop add inc sbb cmpsl mov das inc imul lock in jecxz inc push push out repnz test (bad) dec test push ja inc rorl aaa (bad) xor mov inc fwait les xor (bad) add inc fdivrs mov repz mov and scas and rcrb sub jnp or dec in xchg sti xchg xchg mov pop mov cltd gs cmp push jl push repz xchg push xchg les mov or pop push js cmp pop inc xchg mov lock or rcl pusha pop and cli sub add fmuls mov cli pop jle xchg aaa and xchg adc mov mov (bad) pop or outsb in (bad) call mov or inc jae stos pop sub out push sahf insl jns adc cld cmp mov adc icebp addb ret rcll pop inc fimul rcll and in int test into stos sub (bad) jle inc mov daa fs jl shrb push daa mov insl jnp or (bad) mov scas xchg mov push add push mov push fsts dec scas add out cmp loop adc inc sbb mov addr16 mov mov jno dec push imul stos test sarl xchg (bad) arpl inc sub add sti lret push test inc xor repnz in mov or xchg and subl roll gs and shll jb mov mov jb xlat dec fildll imul int3 and mov mov inc aad mov out lret cs ds push and jmp dec push cli lret lahf popa mov pop loopne push push fwait mov mov mov push call cmp xchg ja in sbb pop dec mov fdivrl push jmp das imul cmc mov dec pop jle cmpsb sbbl lahf or rorl mov mov mov cwtl xchg in sbb cmpsb arpl adc (bad) mov and and test clc fsubr test sarl das inc push lret adc or sbb dec or mov outsl and inc cli out int3 mov ja int pop lods pop inc insb gs data16 aad or sub add sbb stos cmp push and outsb xlat fnstenv pop and lods jg cli clc or xchg bound sbb aaa push mov or jmp xor cmp sub arpl bound add outsb adc adc jo outsl icebp frstor pop insb jmp pop fsubrs cli inc lret js pop es clc push insb cwtl fmuls dec movsb mov dec sub fisttpl fnstsw push pushf in and mov pop das pop lea pusha cmp jecxz sub xchg push aam mov andw cmp scas in cmp jb fistpll popa test or insb jp mov sub imul jns sbb (bad) iret icebp sbb notb pop dec aaa dec lods jne mov xorl pop adc jae fisubr and fiaddl add lock add xor (bad) enter mov push add (bad) or push inc pop mov pusha sub je mov jecxz adc lock int rorb loopne pop cltd negb jp cmp insl ror das dec fs and ss add fistpl mov shll sarb push test sub nop add movsb xchg lret mov leave sbb xlat sub (bad) mov (bad) cmpsl fistp mov dec fldl stos inc and mov addl or (bad) fcoml jbe stos cmp mov addr16 stos jle addr16 and mov lea rol mov div jge (bad) (bad) or and aam fcomp shlb or dec jp (bad) xor enter cmpsl push arpl and mov or in stc xchg and inc mov mov xor cmp and pop into dec popa cmc xchg mov lahf jecxz sti out and ja inc mov inc lret mov lahf mov jle aas aam jp cmp xor into jge mov mov es xor iret gs xchg mov jge int je lods lds xor incl or cmp xor xor adc sbb out adc jb adc jg dec subl xchg or scas mov or test iret and icebp pushl cld mov mov push mov test jmp sbb jae add int3 (bad) divl rcll jmp aas aas xor fs jp repz push push cmp cmpsb addr16 mov out adc in fstp stos dec adc mov mov mov xchg mov bnd push pop and mov dec imul jo in ds xchg sbb pusha pop dec push dec push xchg xchg sahf insl lcall fcmovb xchg mov inc jg adc sarb insl xor xor push sub sti jbe cmp (bad) (bad) dec stos mov popf cmp mov mov daa push push jbe es dec iret popf xchg sbb xor aas xor rolb push loopne xlat or daa push jnp imul pop fldt nop xor add pusha ja (bad) jmp and cmc dec pop ja shlb mov cmc insl loop cmc mov cmp insl push sub icebp (bad) fdivl adc pop leave mov add scas outsb adc out popf or cmp (bad) push push xchg xchg mov xchg movsl jns push dec lods imul sbb lcall orl fxch jae jmp jmp into jne sub (bad) add ja jge vunpckhps insl rorl ds sbb lret push js movsl fs sub sahf call stos inc adc jp cmp pop stos test and scas (bad) das xchg sbbl cld bound test cwtl jge icebp cmpsl mov rcr push inc jae xor ret and loope mov imul or sub (bad) cmp fwait push data16 push jno xor add jmp icebp and (bad) pop mov inc cmp repz push mov add mov xchg and stos xor mov adc jae sub xchg adc popf jge roll add mov ja adc (bad) in (bad) out push imul or repnz test fwait mov lcall sub (bad) adc arpl push lcall repnz cmp fstpt lret cmp sbbb out dec sarb inc dec std or scas jmp or jns fbld and xchg mov push and ss cmc mov repz xlat sbb mov and lahf mov mov dec je mov cli shl add lcall into jb pop lahf pop imul outsl add movsb push les (bad) cmpsb add mov clc xor inc gs daa arpl aaa rcll dec push dec push ds xchg sbb jno jle jp pop mov aaa lds bound pop adc or xor aad std xchg xchg ljmp cltd shlb ljmp jp out cltd or cmp push rolb mov jae (bad) mov cmp pop pop icebp cld loopne adc nop pop call (bad) pop mov outsb jbe lea xchg mov movsb repz and aad cld ret sub fisubrl and push jmp lfs repz cmpsl mov add fmuls fwait mov lea (bad) fisttp mov add pushf sbb dec and std (bad) cltd dec xchg scas cmc pop es fistl loop or and mov mov mov push popf mov into leave xor divb xor dec mov nop int sub mov sub sub (bad) push lea dec xor test cld lea sbb out das sub lcall outsb mov data16 xchg jae (bad) fild or jns mov mov or fmuls aam jmp inc adc lahf cs and outsb and mov aaa xchg jbe cmc pop xchg stc dec hlt dec iret inc inc imul push mov inc adc cmc aaa xchg push add sbb inc jecxz ret xlat or mov lahf or pop xchg xchg mov add cmp stos inc and movsl mov dec (bad) int3 lds loopne mov jmp cltd jmp cli adcl out cmp xlat das sbb cmp pop lcall sub stos loope popa lret loope scas and aaa lahf fs cmc jnp dec imul sbb mov and das sbb pop xchg jg sub fistpll cmp ret mov mov mov into imul mov adc flds mov (bad) mov lds arpl jne data16 jg push loop insb cltd mov test pop mov pop cs jmp adc clc nop (bad) enter mov inc jmp call sub jle jne and pop (bad) inc inc add xor pop shr (bad) sbb xlat clc and arpl mov sbb pusha xchg lds cmpsb cmc fstpt insb lea cltd fist jle js movsl daa aas fucompp push cli push je inc loop out ficom cmp not mov push repz loope jle mov test mov cmp lahf ds xchg and je (bad) cmc aas add in adc addr16 xchg sbb cmp cli sbb loope lods sub sub mov push cmp arpl or ljmp cmp fadd jne rolb mov sbb push (bad) cmp nop lods push sbbl jmp mov add xchg popf in pop loopne (bad) pop cmp aad jmp stos pop sbb mov scas push cs cld cmc mov push sub adc or roll fdivs (bad) stos mov je sbb jg (bad) inc lret movsb aad push lds pop sbb xor pop std push insl jbe push jns xlat push fidiv pop jp xor fs or pop call or cmp cld adc jge outsl pop xchg movsb fistp dec fdivp xor gs das jl pop add pop jmp jo int3 and outsb xchg jle xor or enter in and pop mov out outsb pop out jg and xorl pop mov mov out scas cltd inc mov repnz movsb add and movsb xor movaps out sub xchg inc stos add adc je cli cmpsb fwait sahf cmp lods mov pusha dec lods repz out cmp das shrl add lds or xchg mov mov pop push xchg xchg sub adc div dec enter jbe pop push jmp js inc xchg popf cmp outsb jne cmp loopne icebp mov enter iret ret jns,pt aad inc mov mov iret out xor inc mov gs add xchg int3 cli mov hlt pop mov mov push mov adc fs popf pusha or cli (bad) dec mov jno sbb daa inc dec jo test dec or popa pop fstpt in and jmp lock pushf fdivrs dec lea ja stc test fnsave imul mov or and fsts ljmp adc adc mov popf inc scas xchg mov sbb pop jge jno lret jns xchg xchg faddl mov (bad) popa sbb ja jmp popf xor mov test iret fldcw sbb dec leave cld pop mov addr16 rcl rol pop adc cwtl loope push or mov std dec ret test inc popa fdivs lahf fucomip lock push jae insb mov dec dec in (bad) repz or push loopne (bad) ljmp pushf (bad) adc outsb add and int cmpsl pop xor mov push pop and push add roll or fstl push stc xchg xchg gs sub mov hlt (bad) sub push (bad) adc push ret in xchg add ret xor addr16 cmp popf scas imul mov add mov ret fbld cmp inc enter push imul into imulb std hlt or (bad) hlt mov (bad) stos lods test inc sbb add add push out xchg enter aas mov ljmp inc insb nop in imul out mov nop adc push xlat push or scas lea xor faddl mov xorb popa data16 out fs xchg ss test divb mov sub (bad) push (bad) jge inc mov xchg jnp pop lahf mov sbb inc cmp adc lea jns stos outsb push pop inc mov es inc mov or xchg jg or insl cmc mov mov adc std mov stc pop mov sub pop mov arpl cwtl and mov sbb test in mov mov jnp mov inc add push jl sbb shr and aad mov or sbbb stos adc pop sbb test push jg mov (bad) aaa adc (bad) pop push fldcw xor sub cmpsl sbb pop jg xchg add repz dec fs arpl or popf xchg imul nop jmp cmp xor jno loope push mov xor pop jns xchg or jns loopne xor mov sti cmp xchg stos add cli sahf movl jne cmc mov (bad) aas xchg sub mov mov sti lea mov mov jge mov sti push dec popa and mov ss pop cmp fstps test aas push movsb in gs (bad) jmp cmp mov rcl mov hlt insb xchg push and scas inc dec ret fs (bad) xor aas in lods aad xchg sub cmp repz inc pusha movsb arpl hlt (bad) in into pop jns adc lods je mov xchg jge outsb outsb (bad) int3 jae (bad) mov xchg mov add psubsb fs mov subl aas sti cmpsl sub insl daa mov fwait (bad) fisubrl pop dec cmc lods rcl addr16 pop xor dec mov mov xchg push jae cwtl pop jno or push adc push adc cmp js sbb leave rorl pusha sbb sub sub mov mov mov out fsts xor xor in sub mov and shll andl and or xor ljmp pushf repnz cmpsl mov mov imull push add dec call jle sarl mov (bad) (bad) arpl (bad) xchg in fcoml xor shr fsubrs outsb or sbb push jno,pt ret clc xchg jb,pn dec imul mov sub in iret imul xchg and cmp into loope scas iret xor or (bad) ds inc mov mov push out and loop in mov sub (bad) or ds fimull ljmp push pop hlt and jb adc ret notb xchg stos lods cmp push xchg sub aaa cmp lods push in mov js (bad) jne loopne lea xor imul movsl xlat in (bad) mov pop loopne sub xchg dec adc sub mov popa cmp or mov mov pushf outsl add stos fadds sub pop lahf movsl out mov daa or (bad) in nop push mov or xor mov clc bound outsb test push mov or gs or (bad) xchg push imul mov cltd fwait xor cmc rorl sbb (bad) cld sbb jno (bad) push cmp pop dec fsts push std clc stc cmp sti jns out lds testb add insb xchg je lea inc cmp jge mov sbb fidiv subb dec mov dec and outsb lds insb push inc or jne daa jbe jecxz popa cs ds and xor ret xchg test inc mov outsl fidiv xchg sub jae jecxz adc (bad) pop jge pop scas xchg test and int cld iret lock mov push test cmp in mov (bad) or xchg push icebp and mov push cmpsb stos xchg mov test sub push push test pushf xchg xor push ret push xchg hlt das pop xchg add cld mov pop push jmp (bad) int3 test popf xor divl dec es jg mov and ror icebp jle pop stos mov outsl mov mov gs aam add cld pop mov sub add les cmpsl out sbb pop and insb mov mov lret sarl outsl jnp cmp test fimull fldenv cmovle and adc shll dec cmp mov test lods loop xchg popa jmp sbb in cwtl mov mov xor xor inc cmp testl cmp mov sbb jae mov lods inc cmp dec lahf mov mov mov adc pop mov fmuls dec mov pop (bad) testb lods jp clc lea inc cmp call out push mov sarl cmp in int in pop imul dec iret push push push mov sbb loop or addb push mov jge mov faddl sub xlat scas pop jbe cli mov cmpsb imul adc (bad) push sub adc sbb pushf or loope addb mov (bad) mov jge shr sub pushf pop stos mov orl mov sbb mov (bad) dec cld or mov call xchg adc test rcrl xchg dec (bad) jnp aas adc xchg into es or mov jl jp out aaa int pop mov fcmovb adc push mov and mov and and or (bad) movsb and push inc jo adc ret scas and icebp test dec stc in mov rorl subl into js cmp ja sbb lcall and cmp insb addr16 xchg sub jg cli pop aam popa mov (bad) (bad) ret loope rcr clc push rcrb sbb add repnz insl ja pop js (bad) mov cmp scas mov jl dec fdivrs ret dec nop into stos test mov pusha cld adc fsubrs pusha or or dec je lcall pop jecxz sbb lcall pop sub mov jge iret outsl (bad) das sub pop pop orb fildll inc das mov fisubr mov loope and pop test jle jo and jbe data16 dec push out andl fdivrp or fwait mov repnz (bad) dec or test cmp cs cltd pop aas (bad) daa int3 loopne mov lods ljmp enter sbb cld add xchg fwait xchg push iret mov push jo mov sbb shrl insl and xchg mov mov jno sbb sbb insb mov (bad) mov adc outsb adc fwait (bad) push sub ss outsb jp (bad) sti xchg inc test call mov and leave das lahf sub xor mov adc movsl adc data16 lods inc pop frstor cmp scas daa xchg push andb cmp mov inc cld sub xchg loope inc xor jle insl movsl cmp not fdivs sub out fwait jo push scas imul data16 sti mov clc stos ret dec sub add call data16 scas int out push mov fbstp in sub aad jne imul mov out pop mov pushf cld icebp fidivrl fidivrl insl sbb ljmp imul xlat ljmp lss cmova hlt or xlat sarb xor cmp cmp xor hlt movsl mov pop aaa enter outsl mov out leave std mov push int3 jne fcomps cld pop in outsb jle sbb imul hlt cld outsl sbb jnp cmp movb inc jns xor push cltd mov fisubl cltd scas fcmovbe rorb pushl dec inc and gs mov mov push mov dec fildll es fnstsw jns xchg fildl (bad) cs sub jmp mov inc inc ret xlat mov jle in es or xchg (bad) loope gs in addr16 mov sbb aam dec mov incb push mov inc dec roll (bad) clc loope shrb sar in xchg push insl mov push rclb mov and in dec mov aaa call jno dec mov push sarb sbb loope daa ljmp mov int and push lea inc pop push mov lea push sbb pop add pop mov xchg xchg xlat or mov cwtl (bad) out push (bad) (bad) repz fwait scas fisubr add mov shrb es in mov outsl lods ror movsb sbb mov mov jnp dec subl fisttpl cld or cmovo std push sbbb inc (bad) lea lahf leave mov bound pop mov out insl das je mov lret lods add outsl sarl bound xor (bad) outsb dec inc fs xchg xchg dec (bad) (bad) cmp sub ret stos fisub (bad) ja (bad) mov sub arpl or inc push jno cmpsb enter fisttpl xchg frstor into xor sbb scas roll out sub ret lret dec xchg jmp lahf jecxz insb cmp dec das inc inc rorl fildll push or add (bad) aad adc fimull xor mov jecxz mov test jne in lcall daa cmp pop sub xor sbb add fadd mov outsb popw (bad) adc sub movsb xor pop daa js inc push rcrb popa cmp (bad) sub xor je cltd (bad) or fldenv outsb inc and cltd push or dec jnp add (bad) (bad) mov aaa jecxz jecxz xor in or pop fcomps mov add xor aaa push out out lea xchg add cmp popf fisttpll fucomip in dec mov inc xor out add or idivb inc adc push loopne lahf loop jno imul out inc cli mov jne push and jns or gs lds jmp movsb pop (bad) fdivrl adc and pop xor pop lods pop (bad) aad test std add icebp cmpl push pop sbb fcompl cmp xor xchg sarl (bad) je jnp pop and add ret jbe sarl icebp push mov sub xchg xchg pusha outsl lahf push inc push jns je xchg mov ja mov xchg les and lock mov xorl dec sbbb aad push cmp xor imul data16 loopne push arpl sbb pop xchg adc xchg jo mov inc push aad jae jb movsb mov add xchg push jp add jmp (bad) iret jne lcall fimull (bad) jbe insb and imul sahf sbb lock (bad) xchg pcmpgtw xor pushf jl push repnz ds les xchg cli nop arpl add push jmp and jbe jo iret (bad) dec jne scas daa mov clc sub cmp push pop dec pop mov mov les stos lahf mul lahf lret pop xor aam lods fidiv out nop insb aad jnp faddl test pop clc push icebp clc dec repz in ss inc (bad) mov and or ss xor inc andl xor ficomp gs aaa mov xchg cmp imul ret imul push mov xchg or pushw rcl pushf test ret stos pushf mov mov (bad) lock mov add mov mov pusha push sub push mov jae test add cmc add pop pushf push mov push pop icebp mov sub cli jp add data16 pop mov fwait or cs or adc jne cmc fsubr push cmpsl jl (bad) jne inc lods lcall push lods rorb addr16 jmp xor pop xchg lret ja and dec cmp rsm push or mov in ret ret dec clc jae dec or (bad) jp and adc repnz (bad) add fbstp ret xchg dec ficom pop or xchg pavgb jbe push nop add mov popa sarb lea sahf ficom lock stos sarl mov push icebp jecxz insb movsb jg and mov mov test mov adc jae pop pusha popa or icebp push add dec xchg adc inc xchg (bad) mov mov mov pop test std outsl dec movsl sub inc (bad) jae cld sbb imul sub test (bad) sahf xchg cltd dec xor or adc sahf xchg sbb mov aas in push fs cld aad push pop pusha scas and mov dec aam shl push fwait scas fcomip cwtl push add dec ffree xchg pop mov cmp loopne andw inc es in cwtl pop sub cmp mov icebp cmp push das mov ss adc (bad) jmp shlb lods jae mov xor repnz pop mov pop pop inc ja push pusha and xor out cli mov cmp push je call lock xor mov lret jo mov mov jb dec lcall ja add fstp and ret mov dec (bad) pop mov (bad) sbb scas aaa mov cmp lea negb push xchg sbb xchg adc lret cmpsl mov add out pop rol dec movsl mov mov xor or (bad) ret data16 dec lret pop push ss or jne pop and xor (bad) sbb das dec movsl pop pop dec loopne add (bad) mov push inc imul mov xlat xor (bad) or (bad) mov mov lret rcl push rcrb pop scas mov dec (bad) lahf cs (bad) mov iret loope mov dec jecxz mov mov rcll bound scas add jg daa ljmp out push mov dec lock jl mov mov movsl cld push mov fsincos or leave lcall xchg stos lcall mov bsf lret pop das or pop shl call cmp fisttp push rclb leave cmpsl adc add insl rorl (bad) jne (bad) fsubl (bad) repz and pop cmc int3 (bad) xchg int andl int3 jae lods (bad) iret xorl sbb push in add test mov imul decl in pop loopne (bad) loope adc ds push pop pop jne fnstcw call sbb push cld (bad) (bad) aam mov fiaddl sti inc cs xchg cli sub jl testl lock mov cmp jo or nop into adc jp add jg add xor aas inc dec daa int3 fcoml mov loope jnp rep mov and jecxz or cwtl mov (bad) pop mov sub (bad) mov outsl push mov jg ds jae jns mov mov testl repnz repnz repz lret movsl (bad) adc push out clc shl dec mov ss enter mov out fisubr lret mov jns imul clc cmp jb mov dec add xchg mov (bad) gs inc hlt xchg data16 out loopne push xchg sub cmp cs mov xlat mov push iret pop push test daa pop lods dec xchg dec push sub cmp lret adc inc fs ret out jo ret pop xchg sub xor jge or or sti dec ljmp outsl mov les in add jbe popa xchg mov cmpsl sub idivb pop xor lahf jbe cmovbe loopne fs jno push cmp dec lds xor sbb fsubrs (bad) neg repnz sbb lods jno cmpsl sti push bound add adc jecxz ds and xor dec (bad) call scas push mov outsl pop adc sti mov sub mov xchg lss mov call into sti inc ljmp outsb and lods pop divb mov lcall rclb xchg push xchg sbb das cli iret in fsubl jle and bnd shlb mov or inc and xor push add xor inc jns xor or fstpl pop and push aam cmp nop mov fisttp and or xchg jb,pt mov pop dec push jae inc lret xor loop cli or add outsb sahf cmp cmp movsb inc in inc outsb and int cmp cltd or call call and sbb loope outsb or inc mov mov fstpt push (bad) xor loope arpl and and aas jge subl mov out cmpsb aaa sbb push movl (bad) enter xchg clc xor scas inc xorl xor enter pop mov adc pusha or fidivr imul mov xchg mov insb sbb jne push pop jge repz aas cmp xchg popf fs test jae mov pop std icebp push je push add or push mov mov cli enter loopne dec sub inc dec andb push jnp mov les adc push and inc roll mov xchg lods (bad) (bad) lahf imul mov cmp mov push (bad) push or inc and add dec push cmp gs outsl xor and icebp outsb jae add hlt clc lds xlat sub imull xchg stos sahf daa lcall fidivl (bad) inc jecxz lcall out addr16 push push dec pop push mov mov dec nop jbe xchg sbb int3 xor xchg pop pop test lret sbb repz fdivs jmp dec add pop lahf insb adcl jae or inc rolb inc pop pop inc and jne xor cmc xchg xlat jb push push imul sbb mov sarl lds lcall jecxz rcrb sub imul ret push mov inc dec mov lahf inc scas adc std fidivl mov fsubs das xor ljmp cmp dec call ficomp mov sbb sub mov mov jg adc sahf rcll ss xchg xchg and icebp insb push mov daa and adc sbb stos push sbb xor sbb (bad) (bad) aas cmp loopne inc lea dec adc sub pop loop inc mov lret lock test clc lahf push mov or add cltd rorl jnp mov lcall jle lea js inc aaa mov add xor inc adc popf in (bad) in xchg (bad) (bad) outsb dec dec cs push push leave or xchg stc (bad) lret sub adc push inc sbb sbb or pop xchg mov jmp lods mov fisubr call inc mov nop add cmpsl or pop mov andl loopne stos out jae pop in mov aas mov aad inc cli sub pusha jae mov push (bad) push sbb nop sbb jmp jp into insl cmpsb and cmp mov mov mov cmc loop sbb push adc (bad) jne pop jae clc inc hlt push mov lahf (bad) insb adc std (bad) call jge (bad) in aaa pop ror add fnstsw cmp adc loope pusha and cmp jge lea ss sub push pushf jb es add sbb push dec mov pop inc mov xor cli push sbb push push mov xor add jle mov xor sub sbb inc mov xor add pop or fidivr mov push push (bad) leave imul fbstp inc ret jl (bad) (bad) fldcw call mov loopne inc inc jmp dec sbb adc mov aad xchg std push mov adc movsb add push lret mov mov sahf push aaa in cwtl cmp rolb je popa xchg pop cld fisubrl dec mov mov jo mov add loope dec shlb aaa lret (bad) icebp sarl test push xchg scas es ds pop stos xor lahf xchg ja jae jge and jge (bad) popa mov or mov sub mov push int push push xchg fnstsw loopne sar fiaddl notb pop xor jne ficomp inc or add mov (bad) dec sub mov test icebp test mov dec stos add ss push sbb movsl aaa mov mov xchg adc inc cs test cmpsl mov cli into inc jns mov lret int3 fildll pop sbb mov test sub pop push aad mov mov orl pop inc jle cmove inc mov xchg pusha xchg fidivl jno jl cli mov inc jg nop icebp dec lea (bad) mov and sbb je mov xchg sub sbb movb cmp sub loop rclb insb sbb or popf pop leave aas cli cmpb pop sbb stos pop pop add xchg or arpl (bad) (bad) pop add jb adc mov fidivrl insl push (bad) jb push inc lods dec sub jge pop test jnp ficom xor mov add dec mov jae hlt and fdivrl sbbb sub popf insb push (bad) mov xchg jo je loopne pop dec hlt mov pop push enter ret sub fisubrl dec xor rolb insb into jae int3 xchg or dec mov mov int3 cltd mov loop lcall add ds fstl sbb and xchg scas mov leave das inc mov iret mov or in subl nop sahf addr16 xor inc push lret dec scas pop shrl mov mov dec into insb and adc int out into xchg jg or mov pop dec xchg (bad) jno ldmxcsr adc inc xchg das or pop mov repz mov call insl je scas ret cmpsl xchg je lods jmp arpl jne mov clc repz js lahf frstor cmp sub mov cmp ja mov lret inc sub pusha ss jne mov into cs out sub insb mov xchg or sbb xor adc xor ljmp gs or repz dec xor xor test sbb iret inc xchg inc les adc mov pusha mov mov xor fmuls movsb jp mov movsb sub insb pushf adc call push lea mov add (bad) enter ss lret int mov sbb jge nop idivb out fs and fwait sbb and std xor scas inc dec into pop sub jmp shll outsl dec and enter lahf lods cmp sub adc nop dec sbb lahf jae xor xchg sub aaa clc loop jmp loope repz mov mov add mov add in cld mov or and decl lds faddl loope aas cmp (bad) imul dec push xchg je push mov dec in les insl push mov and lods repz and arpl ljmp sbb pop jnp pop jne std inc and push inc test sahf inc cmp mov addl jle in aam xor (bad) repz mov stos mov push hlt leave sar lahf mov xor dec jnp xor pop shlb lds repz push jo mov push cmp ficomp inc (bad) int3 mov sub xor cwtl ss and cmp xor aam xor dec hlt add adc rorb into sub mov pop dec pop cmp js,pn (bad) daa mov idivb outsb mov mov lods jl mov xor cmc fild xor or call scas das inc inc enter mov xchg xor fiadd mov add mov scas das sbb stos (bad) sub adc mov mov sti mov cmp add mov loopne add scas and into xchg jg jmp aam mov rcll xlat and and ds and push mov cwtl lods push lods xchg bswap cltd mov inc xor mov jge test icebp lods mov xor jge jecxz xor les sub test lods iret aaa xchg cli pop leave (bad) rcr cmp iret in fisttpll pop pusha lock loopne xchg (bad) enter jecxz (bad) loopne mov push mov dec pop int leave leave push dec cmc jmp (bad) push int dec test mov mov insl stc fstl fisttpll cmpb sbb and or js mov xorl arpl inc dec pushf cwtl movsl aas and mov push fildl mov cmpsb xchg clc (bad) popf push outsl decb add das mov push jp mov mov loope mov test cmp mov data16 je jmp iret adc cmp fstpl in dec ret pmulhuw es sbb clc out xlat sbb or jo pop cmpsb and adc jb aam int3 dec das cltd daa mov insl loop rcrl (bad) imul mov mov cwtl push xchg dec mov mov xlat or movsl xor ret aad pop jno iret (bad) xor push jno push sub push inc mov (bad) xchg mov les fistl mov or jle xchg jge out add pop sub push loope push push decl (bad) mov imul inc sub aad nop shll jecxz imul stc in mov pop xlat pop js jnp pushf hlt std ljmp adc sub ljmp lcall or sub or pop test push (bad) cmp cmp data16 cmp bound mov add mov negb dec jle push adc jne mov pop cmp mov or es xor add (bad) cmp enter sub sbb in xor aam out pushf push or jae jle clc (bad) (bad) fsts and jecxz add sarb lods sbb dec and pushf insl test dec and in pop mov in inc sub dec scas inc inc and (bad) pusha mov cmpsl or addl aas lock out mov cld pop fdivl jb push inc and iret stos inc iret xchg lds xchg adc sti cmpsb ret fcoml adc push push or and int3 mov ljmp cmp dec cmp sub sar cmp addr16 test out les iret fcom xchg stos add push add mov xchg (bad) rorb pop outsb xchg inc or (bad) cli mov adc lods add or xchg pop add aaa xor stos mov cld adc cwtl dec je dec or aas xchg pop xchg xchg dec and popf pusha xor pop jl hlt lds pop inc xchg cmp jg iret ss cmp ljmp xchg ljmp fwait cmc faddl dec ljmp fbld out jb daa cmp or out test sahf outsl pushf cmp xchg mov lret or adc jb push sbb mov popa bnd mov mov pop sbb adc dec fsubl adc and imul outsb in pop or (bad) pop lret movsb mov mov lcall subl xchg mov imul push inc sub mov push rorl gs jmp fstp bswap and iret mov test sub sbb scas mov dec into dec dec pop push mov sbb imul into and pushf nop mov or mov (bad) jnp inc xchg pop shll cmc pusha dec cmpsl lcall out stc sbb cltd loop adc ds mov jb add into pop (bad) cmp jp pop push xor sub fmull or xchg test arpl sub dec test mov dec in push push out movsl sahf je std fcoml enter fmuls mov pop cmp pop enter xchg pushf js jo cmpl pop inc lcall lahf add (bad) je fadds sahf pop jle and cltd sub xor bound daa xor pop pusha ret dec inc insb add out nop pop movsl add pop fwait sub loop xchg clc mov push call scas or mov pop mov fdivrl sbb add mov insl loope sbb or xlat or (bad) repz sub sub insl push lock xchg cmp imul push mov stc mov mov cltd push cmp pop aas and jns xor push and pop mov inc mov push or jnp cmpsb insb faddl mov ret insl sbb inc in dec movsb mov sub mov mov lods cltd sub mov mov scas jmp shrl ret xor jl stc lds jo mov inc (bad) dec mov shrl cli data16 dec movsl cmpsl inc pop or mov int3 push pop inc sahf sbb mov aad mov xchg lcall lcall cld fnstenv popf jg cmpsb in cmp orb sub jnp adc xchg jmp cmpsb lcall dec cmp dec push pop pop mov or and inc mov insb movsb cmp cltd xchg imul push fild jp pop pop xchg cs (bad) enter nop xchg aad jae mov dec xlat mov push subb iret ret mov mov and sub leave dec and push mov sbb xor lret jbe xor in ljmp mov inc (bad) add xchg push stos outsl rolb cmc je jg cwtl sbb gs in push add imul adc xor fidiv add iret or pushf xchg int insl or hlt pushf pusha mov cli xor lcall pop and xchg adc pop test inc cmp adcl jnp sub xchg xlat test sbb mov sub sahf push sub mov ss (bad) lea shrb push push jge mov jg push fisttpll decl in mov aaa mov repz test inc cmp pushf das insb lea inc (bad) dec inc (bad) sub insb dec jo cs cmpsl (bad) (bad) jbe ss nop xchg pushf push lds enter and aas inc adcb sub orl mov jbe les and push xchg (bad) adc inc sarl push sub jecxz and sbb adc xlat and or cmp adc enter mov movsb xor dec daa cwtl pop fcmovnbe mov aam nop or lcall ficoml jae xchg outsl loop jbe loop xchg outsb ret movsb pop lods push out inc mov push outsl insl (bad) pushl jb jp (bad) ffreep pop cmp jo xchg jbe test outsl out iret dec add jns lds xor dec xlat sbb movsl mov not push inc jp in mov mov dec add xor insb or adc or xor call mov dec or popa jle (bad) mov (bad) xchg push dec push sbb ret sbb pop sbb and loop mov mov jge mov dec out push push in inc inc mov xchg fildl xor cmpsb mov ret dec repz and (bad) aam inc movsl das inc jb dec into mov aad cli pushf jle inc ja inc test mov (bad) (bad) mov pop xchg push sub loopne and or outsb js push daa cmp js jmp mov mov sub pushl fistp dec dec or ja leave mov pop stos cs fisttpll (bad) xor stos popa xchg lods push in push fstps and rcrl adcl pop sub fwait push mov cmpsl stc inc (bad) push cld jae popf outsl xor jnp mov mov add push push fild aaa test (bad) push (bad) into (bad) pop adc sbb addr16 add rorb icebp inc xlat sbb pop negb mov in jno (bad) fwait sti pop hlt sub shll mov test xor dec mov mov cmovne push mov bound sub or and (bad) cmp sub cmp sti pop ret mov mov push mov stos (bad) sub ficom in (bad) sub (bad) jl cmpsb lea pop (bad) mov cmpsb scas cmp and out loop xchg cs (bad) daa aam push mov inc jnp fmull fwait (bad) fwait cmp lcall xchg jnp (bad) push and nop (bad) in (bad) mov cmp mull (bad) push fsubrl pop adc push insl aam repz mov mov xchg arpl insl adc inc roll pop cmp mov mov add xor lret aad mov mov ds push sub inc fmull movl and movntq out xchg je pop xor sbb insb cmp jns (bad) (bad) jmp pop int3 fidiv mov cld fldenv fist and fs or lock mov mov sbb xchg cld and fstps pop dec cmp pushf rorb xchg jmp aam iret movsl (bad) aad stos mov mov mov lods pop xchg das lret add cmc pop inc add lret shll mov lret movsb jp mov test ds cmp mov sbb mov cmpsl xor sarl cmp push bound clc inc imul inc pop repz dec and cmp mov sub popa jno test or and scas sbb aam jae add ds pop inc add dec push pop sar push ffree pusha pop jmp sub (bad) into mov setns adc loopne push add pop mov outsb sbb scas inc xchg push sbb addr16 in and hlt outsb in out adc mov (bad) jb or test mov mov rorl pop je inc mov cmp sbb inc bnd pop jns jns and aad mov shlb or aaa dec (bad) jbe jbe hlt gs xchg dec out out push sub loopne jp movsb cs into push dec dec addr16 je add inc ficompl ljmp mov nop mov and into cmpl and enter or mov mov push out jmp cld or pop adc push push jmp inc jl or je ss mov rdmsr sbb push mov inc aam or jnp cmp and jecxz in stc fldcw and cwtl cmp test mov movsb scas mov inc adc mov push pop inc inc jp (bad) or fst test or xchg jecxz push stos xor mov xchg ficompl and test cwtl loope mov mov push jb and xchg in mov mov mov pminub loope mov push stos out stos push enter outsb xchg pop in in push fcmovu sbb pop cmp test mov pusha inc test inc movb (bad) lret adc xlat or into jae or inc jo lret dec lods push dec mov cs xchg pop mov jl push sarl pop fnstenv mov cmp inc (bad) data16 (bad) insb jmp and cmp sub push jl push arpl in dec cmpsl lods or hlt (bad) push mov mov push adc push sub ret imulb mov mov int mov (bad) fbstp mov scas jb jb (bad) xor adc add test outsl sbb (bad) stos movl in xchg (bad) repz mov (bad) add xchg test dec lods les aaa xchg sub xchg ljmp xchg ret add test lods pop sub jge test mov jecxz cld je fstpl push lds ret dec loop adc outsl imul fsubrp or std sub cld popl adc stos mov loop sub xchg mov jns push cld cmp or sahf enter dec add in sub insl cwtl or xchg sbb mov lock lret cli cmp mov sub or repz into adc std sbb or push dec and jl push das mov xchg movsl out cmp pop xchg pop cltd out sub push je mov test mov and sbb enter mov jmp and sarl lods adc and push lds loopne mov or in pop out scas aas fcomps clc jg fmuls jecxz cmp sysret repnz add pop inc sub cli movsb lods mov (bad) das mov jo sahf sbb jo clc push sti push adc fstpl in ret icebp mov (bad) hlt std stc inc gs popa mov push and lods int3 cmp xchg femms mov fwait adc out mov leave cmp mov (bad) dec test flds aad (bad) nop sbb cmp fildl dec sbb mov nop (bad) idivl ret stc hlt mov fbld jge push xor xchg scas in in lret pop shlb and ret fldl add cmp and mov adc pushf xlat add jns fmuls pop mov jne fildll sahf daa ljmp negl mov vmovd stc push js,pt stc (bad) movsb dec adc stc lret loopne add mov insl push inc test add fwait mov and pop jns lods ficomp ret jbe fs jne and push mov fiadd pushf cmp aam xor out jmp sbb aaa mov test xor jnp aam sahf mov push (bad) and cmpsl enter inc ss mov pop mov cmp mov dec repnz or pop dec repz sbb lea outsb or int3 stos ret insb fimull enter movsl jmp rolb dec out adc cmp mov in mov cmpsl cmpsb xchg xor cwtl cli mov and cmpsb ljmp in ret aam xor xchg cltd sub add fwait add rol cmp (bad) jns push lret mov faddl lods icebp ret add pop sub and mov je movlps int3 adc sub incl icebp fdiv mov icebp pop mov cld movsb clc dec add cs in pop repnz pop pop cmp add (bad) or xchg and cmp scas out mov push push xchg inc ljmp jle jmp ss or add popf xor mov fdivrp push adc cmp sbb sub inc aam out or lcall xchg pop shll pop scas fldpi lds adc imul xchg mov and sbb daa pop pop inc push dec ds and cmp ret sbb lea roll test dec add idivb xchg push jnp les nop add mov pop dec push mov ss dec sbb iret and dec aas pusha enter push je lock mov pop jle pop fmul mov sbb dec adc cmp outsb (bad) sbb lods pop xlat lds xchg pop pop sub repnz mov inc jns push mov sub inc fstps scas scas leave xchg pop mov out and aaa pop mov sub xchg mov mov jns scas scas in (bad) mov pop pop bound popf and mov outsl out pusha mov insl test (bad) mov mov cli ret popa movsb dec lahf int3 repnz push and adc int adc jmp xor dec fnop clc pushf mov ret fsub fnstcw lds xor and add push test add xchg js icebp imull mov (bad) loop daa jl jae test das mov dec inc or shl (bad) out pop lret divl cwtl aam es sbb mov leave scas movsl dec cs jae add cmp lahf and je mov cmp pop inc jns sbb cmpsl jb repz or data16 jecxz pop or cmp and and fnsave (bad) fistpll ficomp out mov in sbb sti xor sub out roll xchg mov cli repz outsb push xchg stos cmp into add mov adc int3 and rcrb xchg fistl popa cltd cmp push int jl popa scas dec sub int add in push aaa dec in pop les testl pop cmp fnstcw sti fcom xor movsb fidivrl and xlat pop and mov adc push jne adc pop aas xor aam pop jne dec mov pusha sub rcl adc inc pop out jno (bad) dec mov (bad) push and xor xchg aas stos dec insb xchg mov test jns in dec jge aas cltd cmpsl sbb mov movsb mov sub xor and stc int push cmp pop imul cli popa ja push and cltd lea push or xchg xchg xchg cmpsl test mov sub data16 push lcall pop mov pop test out fstl pop cmc sub sbb notl push cmpsl jg les aas pop mov mov popa fildll add inc cmp in popf cmp cld or test pop adc call jge addr16 sub ja add hlt rol inc fdivrl lea mov xchg enter mov xor sbb and inc sbbl (bad) mul mov dec add cltd xor rclb inc jbe xor (bad) je pop push xor ficompl and lcall push jmp mov xor pusha push imul or mov mov into sbb mov cmp movl fnsave aas inc int pop enter enter dec inc push outsl es xchg xchg mov mov push decl xor and out dec out mov adc shrl mov ss jo inc sbb adc pop sahf inc loope cmp xlat pop add xor inc lods out push pusha push mov in arpl dec les pushf xchg fldl and fist jle mov add movsb dec ds add adc in cmp rcr insb shlb leave xor push les stos pushf or cmp jb jl data16 or in or xor gs outsb xchg or ficoml je xchg pushf data16 negl rcrl fstl ja or adc (bad) cmc movsl insl and ss dec add (bad) stos pushf and mov sarl xor cmp jg nop int3 cs sub nop pushf std popf xchg inc mov sbb bound mov bound xor push icebp mov mov aas iret fdivrl cmpsb cmp mov arpl jb loop shr jnp sbb sub data16 int out mov inc out nop or add push pop jne jp aas cmc stc aaa fisttpl rorl ss movsb and int3 inc andl mov hlt push mov push (bad) sub mov (bad) leave xor xchg cs pop cli inc cmc cmp jae xchg push dec sbb add cmp xor mov dec out popa hlt roll jl xor (bad) leave and rcl aaa inc jecxz pop arpl push clc fsubl (bad) push in mov aaa and fiaddl pop xchg stos adc testb xchg jns mov idivl push jg pop lcall sub dec dec pop cwtl sar sbb out xchg imul jmp add lock sbb inc and xor and rcrb cmp mov (bad) loope sbb pop lret loope test sbb (bad) mov push cwtl movsl jb sti in sti aas jmp mov fcomp imul inc dec mov or cmp fsubr xor mov mov jbe add ss xchg je icebp dec sub and lods mov jb pop les lods dec (bad) adc inc sbb adc arpl cmp xor stos (bad) loopne xor mov imulb push leave xchg xor test mov insb lock and jo push or and jl adc cmp jbe push das dec cmp sub int3 rolb std dec xchg mov lds ds inc test into cs popf sti iret adc cmp jnp lods insl ljmp sbb shlb inc xor outsl inc movsl pusha adc mov mov mov daa lret dec sub aaa ret loope test ficom mov adc daa out cmp cltd xchg dec inc cmpsb xchg scas pop xor and push (bad) mov sbb pusha call pop mov (bad) push or sti int dec les push and xor shrb mov or sahf ljmp push and xor xor mov dec jae jl clc pop pop leave or mov xchg lods lods sub and aad scas (bad) repz inc pop dec pop cmp fsub shlb ret dec movb fstpt mov mov addl jg pop sub sbb or loope imul rcrb (bad) add enter test inc adc es movsl jp in cmp (bad) dec mov pop lods movsl cmpsl imul pop mov sbb fwait test aam imul sbb pop andl dec pop pop enter repnz loopne inc ret jae addb cmp in cmp jg les add lcall je rcl or inc xchg notl mov mov nop dec rol cmpsb xchg pop or add repnz xor pushf popf pop call push and adc cwtl lea mov jmp xor dec xor scas and in or out push mov outsb sbb push imulb jle push xchg lea xchg mov cmpsl roll in sbb xchg inc cld dec adc insl rorl sub lret ja dec inc stc mov cmp inc mov je rcrl cmp pusha jns ljmp mov xchg xor add cmp pop jne (bad) pusha mov add dec push mov jg mov out notl jno mov aaa dec movsl pop iret cmpsb sti lahf mov out fadd fisttpll pusha pop mov fstl push mov or aam adc xchg es (bad) outsb imul movsb sub mov xlat add cli mov pushw test xlat (bad) mov (bad) popf in hlt or sub add clc ret push aam movsl pop or mov sub sub mov add aaa adc mov fsubs popf xor cltd (bad) cmp mov or xor xlat (bad) scas xchg cli enter out loopne sbb outsl jle pop rclb aaa pop fsubl es iret push movsl mov out push nop xor jmp outsb cmp out lcall xor (bad) jp outsl repz leave sbb adc xor or cld xor xchg cltd jnp cmp cmc shl lret pop jecxz jo jge aas xchg or sub inc mov mov push std push push mov mov cltd orb cli popf jl xchg mov add dec jecxz add mov lahf inc imul cwtl or movsb sar cmp gs and es ss pusha jecxz (bad) adc out inc bound imull icebp or (bad) pop js movsb lods (bad) pop (bad) loop mov es addb push lock notl mov pop movsl pop cltd or push inc push js ljmp (bad) xor push jno,pn xchg sbb inc and mov negl jl xlat test aad mov or push movsl xchg out or jno in stos pusha mov cmp mov adc sbb xchg and lock les roll fadds pop addr16 outsl popl pop pop (bad) into std rol mov bound stos mov inc jmp mov lock xchg add sbbl andb repnz sub xchg jb loopne add mov jns loop cmp or stos xchg sub (bad) out js sub aas cli into ds mov push cwtl push jmp xchg jecxz aad lahf jae scas lods fwait mov add mov adc lcall lcall pop int3 aam out jb aaa aad notb mov mov cmp loope mov mov mov (bad) into outsb fwait add stos scas call mov (bad) ret daa jecxz sub out rclb dec mov push mov push cmp sub add (bad) ja mov cld pop rolb dec cmpsb sbb repnz shrl aaa out mov or mov jp pop pusha cmpl aam xor xchg or jmp sbb movsb das (bad) or push sbb js rol cwtl es cmp ljmp adc rcl adc sahf lahf or pop push xlat push adc test add fadds ja arpl (bad) (bad) js xchg into xchg pop inc push push xchg jle jg (bad) test hlt (bad) mov cmc or push repnz or aaa notb push std orl jl stos je in sbb push loope push rorl pop notl adc scas xchg xor stos (bad) jl xchg mov leave mov mov xchg insb adc jno jp push outsb sub std roll (bad) xchg int3 cmc sbb push jae mov mov xor enter adc sbb stos sbb lods pop lret shll jne hlt xor dec mov xchg fisubrl sbb std or mov test and fsubr fnop pop push xchg aaa rolb out or scas inc xchg or cmp outsb adcl popa gs sbb jnp cwtl sbb add lret adc inc inc in ja fbld loop mov mov mov aas ss jp test enter (bad) in mov push or or aad mov xlat ljmp jbe icebp subl rorb imul xor fidivr and aas jbe xchg or aaa sbb lods movsl jae jmp dec sub dec data16 push sub pop out movsb loop mov int3 inc cld mov xchg adc mov out sbbb cli call jno push inc push decl stos (bad) ficoml pop push adc movsl cltd add mov cs pop xor jecxz pop push cwtl and notl ror jl mov stc mov mov ja push xchg add test lods (bad) pushf or pop mov sbb cwtl push adcl inc ja mov hlt jp neg jg bound mov adc sahf sbb dec sti pop sti jo insl pop es bound xchg lea dec lret jnp,pt adc cmp scas xor ljmp push bnd nop push cmp and stos mov insb push and pop dec xchg scas clc inc out mov in cmp jns pushf leave and mov jb xor clc pop jns ret jg jg es jmp add push ds (bad) (bad) pop jle inc cltd out mov movsb dec cmpsl mov mov cmc xchg movsb mov mov jo and pop push add in sbb cli imul adc xchg fldenv negb and jbe in mov pop mov push idivl rorl pop mov addr16 loopne gs arpl jl pop sub insb mov leave xchg sbb inc jb leave iret loope and and jmp xlat cmp dec mov cmp jg jne mov or push or scas xor mov sahf jecxz in push (bad) jbe call out mov mov (bad) add add fcoms lcall pop insl add shrl (bad) mov or jg mov inc mov test push sub push add es push psrlw mov mov pop fs loop loope test shrl mov sbb mov mov cmp and int das mov inc mov push xor inc xor (bad) sti push jns jg out dec loope (bad) mov mov loope aas adc cmp insl (bad) aad aad jg cwtl jle xchg pop ret fbstp test (bad) addr16 pop mov cli scas leave loop jl (bad) adc pop mov xrelease (bad) (bad) or add jb imul fnop icebp lds lods out xor push insb mov dec or movl sub in jecxz pop pop inc fsub sub mov inc icebp mov adc pop icebp outsl dec dec js,pt dec daa das sbb pop adc add inc pop aas dec dec xchg pop ja or (bad) (bad) shrb lahf and dec stc leave hlt fnstsw add sbb out test mov sbb js lcall repnz or loopne pop xchg or push or cmp scas mov lods (bad) imul mov lods mov cmpsl in sti scas add jnp sbb imul inc aaa jo imul lret cmp sbb pop xchg stc adc outsl mov xor adcb push pop mov mov mov sub or add mov push lock adc popa nop fnstsw or mov add cmp stos dec subl and or dec adc jl mov or pop adc cmpsl xchg addl dec fiaddl pusha inc nop cli cld xor jne dec clc mov jns fnsave mov mov mov stos enter cmp ret shr scas stos jmp add dec xor push cmp push repnz pcmpgtd xchg into sbb add repnz rolb mov mov inc cltd arpl jns xor ret sub cmc in test dec dec and dec inc cli jge aad and sbb cmp nop pusha leave nop out scas cmpsl pop adc arpl add inc fcoml (bad) push cmpsl nop shlb jle mov cmpsb mov repz xor into push jmp notl outsb push and enter pushf pusha pop cmp (bad) adc cmc (bad) pop pop pop shll push adc icebp inc and push mov dec or aaa (bad) xlat jecxz js rcrb mov cmpsl cmpsb and movsl jae push or adc mov mov fiadd mov add outsl cmp push add jae ret inc enter sti ja jl test movsb mov mov adc cmp dec or es aas push rolb sbb int loop cmp inc push ja ljmp (bad) rclb jbe mov test test das adcl lret mov jp lea notb shrl push jge aam shrl adc (bad) xor andl fisubrl pop and push xor iret dec repnz (bad) mov push add mov jg push xchg sbb push and pop mov notl sbb jmp daa sbbb jl sbb in out and lret (bad) mov adc aam add mov xor add sbb rolb mov es enter cmp pop jb adc adc aad push arpl xchg sub and daa faddl pop pop enter rolb adc out pop cmpsl and mov cmp ret fldt lods mov cmpsb xor sub xlat mov or aaa sub lock jno mov imul xor add jb or insl adc (bad) leave or rclb scas scas jb add loopne inc int aad jno mov negl call mov sbb test jne or pop stos lods pusha mov mov jge pop bound xchg and sub push out push inc push xor mov repz sbb ret xchg or jge nop in lret fcmovne sub sti in and push and in sbb lret cltd jp sub jmp fs les arpl cmc pop cltd mov and mov pop out movmskps clc or jge iret add sub dec inc lock call pop sbb pop add mov insl or into pop cwtl or sbb icebp cmp fsubl jae push xchg call dec dec mov mov call mov int inc jbe movsb xor cmp call mov ret fist sub inc push and inc dec and daa arpl in into push and pop push stc jnp iret in add fwait adc mov sbb mov daa inc cwtl push mov xor mov ds pop gs jmp in clc loopne sub dec dec into sub ja imul movsb cmp aad lods ss lods pop sbb or jno icebp arpl jg mov sbb pop or push mov push jns or in fstps sti push inc je popf insl push lods pop cmp (bad) repz mulb pop dec xor mov insb jl lcall in sti (bad) mul sbb daa add test aas imul jle pop incb repz or insl jecxz dec fcompl sbb and cmc adc mov xchg stc or xor jb leave es and imul je (bad) xchg dec inc push or (bad) xchg xchg mov call orb xchg add jo add sbb jae sbbl xchg int mov popf inc fsts lods out mov jmp ja sub sub mov stos dec scas pop dec ror loope fdivp stos aad lcall pop movsb cwtl mov and leave outsb push mov mov inc jns inc sub add ds rolb sbb in repnz repnz out mov clc xchg mov jb sub fbstp xchg mov scas icebp inc pop xor jg push pop adc dec mov test mov sbb hlt adc xchg xchg add repz push mov mov int3 ss sti rcl sarl add outsl addl scas sbb (bad) call jg in (bad) lret xor add fisttpll fisttpl inc jbe add rorb lcall lock notl mov add xor (bad) sbb mov iret mov (bad) xor pop mov inc incl xchg outsl out (bad) sbb call notb stc cmp and cltd or fucomi ret sub cmp mov arpl gs add aaa push int iret icebp add jbe cmp xor stc pop into jo mov jg lods and xorl es add or ds bound gs repnz jno xchg pop rcrl das jle test clc into xchg shll loop iret mov inc rolb divb mov hlt jbe rol or adc adc inc fidiv ljmp and test bts mov je pop rcr mulb xor (bad) add mov gs sub xor aaa pop push ds pop lods pop jne sbb out (bad) push cltd or add nop sub cltd (bad) jle or arpl stc adc inc in rclb das faddl (bad) jo push xchg mov addr16 pushl iret push jo lods outsl add push imul lds stos sub inc dec mov popf lock push sub aas jae pop loop test fistp jmp testl pop fsts fs lcall push mov sub pop push outsl sbb in add inc add loope loopne popf or ret inc dec sbb (bad) xchg mov inc rorb fcoms sub cmp (bad) mov imul cmpsb (bad) mov in outsl mov ja sbb mov repz sarl divl push sub xchg dec lea dec sub mov jbe cmp xor enter mov adc dec and jecxz lea mov cmpl push daa dec loop sbb xchg insb adc and xchg cwtl mov mov lods mov fisttpl test jnp cs lret dec movsb sbb xchg lahf mov jg bound mov out lahf (bad) pushf xor data16 sahf ja mov in lahf out es daa loopne mov rorl push mov inc popa jl fildll mov sub fisubr inc outsb pop mov shl dec js inc div test lods jmp stos mov in rol inc pop mov or and ljmp decl lahf popa or inc and mov scas sub dec adc add inc imul lds and fmul add adc arpl and pop inc or add fcomps scas outsb leave lea cmpb cmp loopne jp mov pop test pop sbb dec ret dec hlt fldl mov sub jmp mov and mov bound dec push js jno xchg stc cmp (bad) rcrb add dec outsl outsb loop loope dec pop sub push into aaa pusha and sbb mov xor push shll adc sub (bad) jge mov ficom mov or sbb inc mov stc icebp int mov cmp xchg push cmp mov adc int iret call (bad) scas int3 outsl subl add clc dec jo jbe cmp lret rorl aaa inc pop sbb test loope cmp es popa in add in pusha loop,pt (bad) fchs add das rolb insl mov mov ja (bad) int3 repz xchg cmp lea les sub cmpsb int3 ja dec sub lret mov (bad) pop xchg push or inc mov insl pop add lahf insb sbb xor jg xor int insb cmp fdiv push dec add dec ret jg xor mov adc loopne jp loope lods dec pop popa aam jecxz (bad) jb jecxz mov cmpsb nop ret inc mov mov mov addr16 push jecxz,pn push aas add (bad) mov jp add fwait dec sub test pusha into in out mov mov xchg ret or xchg arpl mov sbbl push repz test ss pusha mov pop movsb cltd in (bad) xchg enter pusha adc (bad) mov or outsl mov je xchg cmp cmpsl test loop mul jbe or inc dec mov and aaa nop in inc sbb cld (bad) roll pusha push call repnz dec ljmp sub imul cld (bad) push mov in mov and sub scas mov int3 or jne adc (bad) lock pop int3 adc dec aaa inc (bad) mov (bad) leave (bad) xchg addr16 mov inc mov mov (bad) ficompl xchg mov add sub scas movsb cltd pop test inc xor scas mov (bad) jnp push or repz adc mov mov (bad) lret rorb dec scas lods inc mov mov sbb out push in fcoms sbb lahf cmp nop xor sub (bad) ja movl (bad) sbb jl (bad) repnz sub pop xor lret ja adc pop pop out jp xchg adc xor std mov jmp insb xor sti hlt adc mov std cwtl jno sti leave adc push xchg jle cmpsl jp aam adc aam push movsl call test lret sar movb scas je push add inc lret pop pusha outsb sbb test pusha dec loopne fcmovnb jo push in int push pop cli aas cld sbb or jl pop adc lods mov shrb cli popf insb divl outsb pop test pop insl push scas repnz pop movsb or movsl fsubrs jb mov inc sub dec icebp mov jbe loope test jg mov push cmp sahf std in jnp xor pop adc push mov pushf cwtl loopne sbb bound add xchg inc fisttp or push (bad) icebp xor mov roll jne (bad) mov fnstcw test ret push inc gs fmull lea hlt mov loopne mov xchg add cmp pusha fmuls ss lds int3 cltd (bad) xchg and ret fisubr fstps test and or ja mov and mov int or daa fistp data16 fimull outsl mov push push push out les jb lret push test adc mov push jle and add ret push stc out loopne (bad) jbe inc cmpsl inc movsb clc pop jecxz sbb and test pop (bad) xchg xor jg xlat jecxz lds sub xor cmp pop dec sub add stos mov dec fcomi adc and pusha add jbe dec fcomip jbe pop sbb sbbb cmp insl lahf daa mov or sbb add imul lahf push push fs sub lcall jae imul xchg mov add xchg je or enter clc push addr16 dec sbb into or lahf xor call imul syscall loope int3 or sbb mov mov in inc nop hlt cmc sbb fmuls cli iret and pop pusha mov dec (bad) lcall dec sbb xchg and outsb (bad) stos lods int3 or mov fwait (bad) nop or call rorl das imul xchg aam mov in dec sbb in into lahf loopne movsb xor push movsb test sti pop mov mov xchg pop fadds lahf jb test rol cmp outsb jb cmpsl loope (bad) cmp repnz mov push push add or jo or mov nop pop pop imul insb pop sub notb inc mov outsl je cld and add pop jge or jo cmp pushf adc or js (bad) insb sub pop stc das sub lds and and mov cmp or and test lods (bad) or inc inc jbe popf push mov mov dec mov out movb flds lcall icebp loope (bad) jno ret push stc add iret pop repz pop add mov lock daa stos lds cmc jns hlt lds cld (bad) cmpsb adc push jae icebp lcall push inc sbbb push sahf fimull fist mov bound adc lea inc sbb sub loop xor xor push pop add jno cmp push jae in test sti jns xchg aad xchg jmp negb lret cli aad mov iret out cmc jge and jle pop pop cld and int jp aaa xor jae jp dec cmp insb (bad) fisub and lock add (bad) inc sbbl shrb gs insb in out inc and aas xor mov mov xchg stos hlt nop in add push jo push ljmp mov push dec stos and xchg les adc test fimull stos daa (bad) ss sub ss add scas dec and imul pop mov inc jecxz push xchg loopne nop shl js xor daa les ss popa js push (bad) pop or lea (bad) fmull outsb les sub std sahf mov pop mov mov data16 dec cmc mov fisttpl and cmp stc or pop sbb push cltd notl mov shrb add lods mov bound jmp es test pop es cmp and mov nop out cmpsb dec or testb pop rcrb sub es mov pop xchg jecxz mov or ja sbb mov mov repz in push loope dec pop inc add jl aaa push dec in sub mov push xchg mov add jbe jno cmpsb mov aam pusha (bad) lahf call addr16 mov inc push (bad) xchg daa inc xchg fs pop xor adc xor out cltd or (bad) dec gs sub test push jno shl mov push lcall or xchg xchg xchg je or dec int3 je sub cmp and repz js push ds data16 adc jge cmpsl fld add movsl rcll add mov clc inc cmc or push (bad) jmp stc cs xchg test inc mov push loop aaa idiv cmpsb adc pushf push mov jbe in inc push fs or pusha stos popf test outsb inc repnz mov enter pop (bad) fidivl pop ret pop and jg push leave and add inc fstpt push jmp rol dec arpl in insl int loope inc out aad clc std xchg loop lahf pop xchg jae jecxz std jns mov add dec jb fdivrl jecxz pop push nop mov cld bound and sub lds fst ret mov xchg xchg jge outsb cmc adc mov mov jne repnz xchg xlat faddl inc and imul ljmp push jmp (bad) mov push dec mov cli or ljmp (bad) lds repnz das push gs (bad) cwtl jmp popa add mov insl ss push add mov aaa dec jno add sbb mov mov (bad) sbb scas push jg mov adc clc jge cs xor bnd sub jmp mov mov dec repnz cmp insl mov jle cli popa jecxz pop mov out cmp mov mov pusha add dec jmp jge push push rcrb xorb lret imul test andb mov push cmp mov jge loopne add push push fnstenv mov aas jnp jmp stc mov std lret and mov mov dec push inc add pop cmp popf jge jb (bad) lahf movsb and mov shrb mov fcmovnu (bad) lods mov icebp (bad) or xchg lock cwtl jmp fld1 xlat cmp gs lods dec int lea outsl rcll out mov push daa pop lods pop jg add rclb cmp and inc cld inc clc mov mov ret dec out xchg xchg roll mov jmp ret (bad) stc push shr das jp lock call js jecxz fdivrp bnd fwait and inc mov xor (bad) leave jmp pusha mov aad notl cmp scas stos pop xor mov dec loopne inc fimul insb jg mov jp mov pop jae lods scas lds dec dec enter adc fisubr or inc lahf xor sbb or or rorl add dec mov mov jnp jmp sbb dec push imul movsl cmp fisub popa (bad) and push inc aad adc jecxz (bad) ja in cwtl and out sub lret mov jne cmp sbb mov sbb add and and (bad) (bad) jmp add imul xor cmpsl pop add arpl add xor add add add add or inc outsb je outsb fs add push add addr16 add push decl add incl add add or jae jb popa bound outsb fs add or inc jae outsl jb jae add adc incl xor add add popa outsb popa bound imul add add bound outsl outsb popa insb je add push mov mov add incl sub add add add gs cmp add or inc outsl outsb push addr16 je add add paddusb xor adc add add add add jae popa je jb jo popa jb je jb gs add or insb imul add adc lret push adc incl cmp add push adc data16 imul outsl outsb imul add or gs jo je popa insb insl outsl jae add add adc or add add add add or push jb jo imul add or push jne fs outsb gs add adc adc incl xor add or push jne imul outsl jne push or push insb popa jae imul add paddsw push or incl sub add or add imul or push outsb jae popa insl insl gs add add adc add add or push jo fs jne jae jb add or push insb jne addr16 add adc xlat add incl xor add or add jo gs popa ja add adc gs arpl bound insb outsl imul lock or incl xor add or add je imul je add or push insb popa popa outsb bound imul add push add adc adc add add add add bound outsl cmp add add outsb add or add or incl xor add push or jae outsl jbe jns gs add or dec imul jae gs add add pop inc add adc or add add add imul add or push outsb jo jb insb gs add or adc pop push incl sub pop add jb popa jb add or push popa imul gs gs add adc pop or or (bad) incl sub push add arpl xor add or imul popa insb xor add add or adc incl xor add adc add jae je insl outsb imul add or imul outsb imul add or or or adc add add add add or inc imul xor add push add insl insl imul outsb gs add or push sbb adc incl sub or imul insb insb gs add or je gs outsb gs popa add paddusb adc add add add add jb imul or inc jb insl bound insb jns add add adc or or adc incl xor add push or jne outsb je bound add or outsb je insb outsl imul or inc pop adc add add push add jb outsl jbe jb insb popa fs add or imul add add sub incl sub or pop outsl outsl insl outsl jb push add or insl outsl jb outsw jb add or adc add add add add or push outsl arpl je gs add add je add or incl xor add sbb push popa jb jae insb outsb popa xor add or inc outsb je je je jae add pop in inc adc or sbb incl sub add sbb add popa bound add or inc popa addr16 je ja jns add push add push adc add add add add add fs jne fs xor add or inc jb je addr16 gs add or add adc add add add add popa je outsb imul jae add adc inc outsb gs imul jae gs add add add adc incl xor add push or imul popa gs add add je popa jb jae xor insb add adc adc add add push add gs outsl outsw outsb imul add add imul popa outsb je jae add push xchg adc adc adc add add push add popa jb jb add or je popa popa jb outsb gs add or lods add pop add add add add pop add gs gs add or inc outsl jb insl popa jae jae add adc or add adc and incl sub add and add insb je jne gs add or inc gs imul add push and mov incl xor add and add gs gs jb add or gs je popa je data16 add comiss or or adc add add add add add imul add or dec popa outsb imul je add psubd test add add add add outsw jb popa je outsl outsb jae outsb fs je gs add sldt je jo insb outsl imul add adc add and incl sub add or dec gs fs add pop add popa addr16 add add push adc add add or jne jae jne imul add or js insb outsl outsw outsb jae add or or adc add add add sub add fs outsb add or push gs add adc or or add daa add add add add or push popa jb arpl jb xor add jae imul je addr16 add adc incl xor add sub add outsl arpl jae jae add adc inc jae jne popa outsb arpl outsb je outsb add pmuludq add roll adc add add push add fs jbe add or je jbe outsb fs jae add add pop adc add add add add add outsl jae push je arpl add or jo insb jbe jo jne add add mov sub incl sub add sub outsb imul add imul add or adc push sub adc incl sub add cs add je jb add or jne jae arpl insb insb jns add rdmsr pop mov sub add add sldt popa outsb imul jae jae add or push outsb popa bound jae jbe add adc adc cs add add xor push je insl jo jae imul add push add push add add cmp adc add add add add add je add or dec popa outsb gs imul add or roll sub incl sub add xor add jb popa je imul push outsl insl gs imul add add or movsb adc xor incl add add verw insb gs outsw jb imul add add addr16 add push mov push pop or add add gs add push add imul or add xor incl add add gs gs gs add push add insb imul popa jo jb je add push mov add incl xor add or inc gs outsb outsb arpl add push add jo jb insb imul add or adc adc add add push add imul arpl jae add or jae jb jne popa je xor iret adc add add add add loopne inc add inc add add add add add add add add inc add add inc add add inc add add addb add inc add add add inc add (bad) (bad) incl add add add add add mov inc add add add add add add pop cmc inc add (bad) (bad) incl add add add add add mov inc add add add add add add mov inc add (bad) (bad) incl add add add add add mov inc add add add add add add push mov (bad) (bad) (bad) incl add add add add add mov inc add add add add add add test inc add (bad) (bad) incl add add add add add mov inc add add add add add add in cmpsb inc add (bad) (bad) incl add add add add add mov inc add add add add add add mov (bad) (bad) incl add add add add add mov inc add add add add add add hlt adc (bad) (bad) (bad) incl add add add add add mov inc add add add add add add sub inc add (bad) (bad) incl add add add add add mov inc add add add add add add cld jle add (bad) (bad) incl add add add add add mov inc add add add add add add lock add (bad) (bad) incl add add add add add inc add add nop add inc add add add add add add add add xchg pushf inc add (bad) (bad) incl add add add add add mov inc add add add add add add (bad) xlat inc add (bad) (bad) incl add add add add add mov inc add add add add add add sbb inc add (bad) (bad) incl add add add (bad) (bad) (bad) incl add add out add add out inc add inc add jmp in push push push mov push mov push pop call push push push mov movl push push call mov movl andl jmp mov add jo mov mov cmp jg movl fildl fstpl fldl cmpl jne fdivl jmp pushl pushl call call mov jmp cmpl jne jmp mov add jo mov push pushl lea push call call jmp mov add jo mov push pushl call mov lea call push call push push call call lea call fwait push jmp lea call ret ret xor mov mov pop pop pop leave ret call push mov xor pop ret push mov sub push mov push mov mov call push push push mov movl mov and mov mov and mov mov mov pushl call movl movl lea push call lea call movl movl lea lea call lea push call lea call movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add mov mov pushl call cmpl jne push push call movl jmp movl mov mov mov mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl mov pushl mov pushl call mov lea call mov mov add call lea call push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl mov mov pushl call push mov pushl call mov lea call push pushl push call add lea call push push push push lea push push push call add movl movl lea push pushl call mov mov call movl movl lea push pushl call mov mov call movl movl lea push pushl call mov mov call movl movl lea push pushl call mov mov call lea push lea push call lea push push call lea push push call mov lea push lea push call lea call movl fwait push jmp lea call lea call lea push push call ret lea push push call ret mov mov pushl call mov mov mov pop pop pop leave ret push mov push pop call movl movl andl jmp mov add jo mov mov cmp jg jmp mov mov pushl call xor leave ret call int3 sahf sahf sahf sahf jl push add (bad) (bad) (bad) (bad) (bad) (bad) lcall push add adc add push add push add push add push add push add mov push add mov add adc push add movsb push add movsb push add add push add add push add movsb push add movsb push add movsb push add add in push add movsl push add movsl push add push add push add add push add push add movsl push add movsl push add movsl push add movsl push add sub push add movsl push add push add push add cmpsb push add cmpsb push add cmpsb push add push add add push add push add add add push inc push dec xor inc dec dec add push add dec arpl add mov pop popa fs data16 popa outsb add cmp bound je dec xor add bound jb gs popa jb add push imul xor mov pop popa fs data16 gs xor xor pop pop jbe popa push je inc popa je sub bound gs jns je insl inc jb outsl jb rolb pop jbe popa dec jb jae insb je push bound add push imul xor add jbe popa inc jb push popa jb pop add jbe popa inc jb inc gs jb arpl cmpsl add fs imul imul popa fs imul xor imul dec jae outsb add mov pop pop jbe popa inc jb jae add outsl add jbe popa inc push add add inc dec push pop push dec dec dec pop inc fs data16 add jbe popa push jb outsb je bound or inc insb insb inc jne arpl outsb inc popa insb insb add push data16 je outsb add add jbe popa push gs push inc dec push pop push dec dec dec pop push gs gs jae add push add dec jae jb add inc push inc dec push pop push dec dec dec pop push jne jb dec outsb je jb popa arpl mov pop pop jbe popa inc js gs dec popa outsb fs gs add push data16 gs add scas add fs imul ss add bound push inc js gs imul pop inc dec insb outsl add lea pop pop jbe popa inc jb outsl jb jbe jb insb outsl ja add add jbe popa dec gs add push imul xor add push imul xor imul jbe popa push je inc outsl jo add into add jbe popa dec xor je add xchg pop pop jbe popa inc gs inc jb xor add push imul xor add stos add fs imul bound pop pop jbe popa push popa jb jne add bound jo xor pop add jbe popa push popa jb outsl jo add push add dec popa je outsb add add jbe popa push je dec outsl jbe add pop add jbe popa inc jb inc outsl jo add lret pop jbe popa dec xor jns mov pop popa insb insb insl jne add pop inc dec je outsb add push add dec gs add scas add jbe popa inc jb gs je 