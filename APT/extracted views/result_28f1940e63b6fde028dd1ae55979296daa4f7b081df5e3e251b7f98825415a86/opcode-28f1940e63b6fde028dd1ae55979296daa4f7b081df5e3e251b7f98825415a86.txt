(bad) jg push mov inc xor movzbl mov mov pop ret mov mov mov push lea sub push push push (bad) incl push call lea push push fstp (bad) decl lea push call inc mov add mov mov add inc add shrb pop (bad) sti neg mov int3 rep cmp mov mov outsb push adcb inc les pushl add xchg xchg pop push mov xchg js cmp sbb cltd pop push or inc cmp nop add dec push inc adc ret int andl test mov mov sbb clc add or or push pop mov add pop sti push fcomi xchg dec or rclb add mov mov or gs add cmp jbe insb mov movsb cmp or xor push push jmp mov imul shr push xor fidivl lret or outsl insb mov cmp dec je add sbb pop push and push repz adc or mov push fnstenv arpl bound mov insb jne sar cmp (bad) dec inc movzwl push add add pop xor repz cld mov inc xor or fsubl pop movl insl xchg insl push push es unpcklps inc jb add jl,pt pushf fldt sti sub inc inc and push das adc mov ss pop and push je insl jp push dec dec out divb cmp push cmp and mov (bad) mov adc daa add insb ret test nop or sub daa adc testl orb mov xor add insb add aaa jecxz scas fs insb mov jne push lock mov push out mov inc push ljmp add jl and nop mov or pushl (bad) mulb fs or ror je (bad) mov adc dec inc inc scas roll int3 xchg cmp ret xor scas insb and push inc push pusha popf and pop sbb mov (bad) pop das push or jbe dec cs lds std leave ret mov cmpsb sarb push or pop dec dec pusha add dec sbb xor (bad) adcl call cs ja je mov push push mov mov adc dec cmpsb xor push test fwait hlt fidiv pop fcom in push imul fcompl pop add leave les push outsb das (bad) mov push jnp cli sub sarl sti pop mov xchg add (bad) sbb es in (bad) or cmp sub or mov (bad) push mov movsb pop (bad) fstps test jmp (bad) lods dec sarb xlat mov fs pop mov mov or nop add bound and sti fildl xor cmp sub mov jbe movsbl inc inc shrl (bad) mov loopne lea lods sarl inc cmp jb pushf xor jbe sub pmulhuw out inc cmp in mov mov mov or xor xor xor mov cmp push add add pop rolb ljmp idiv or add imul xlat mov shr inc inc cmp mov push clc mov jb pop adc mov ret pop loopne shr mov or loopne call mov mov cmc loopne add fiaddl dec es lock hlt jae insb lahf outsb mov lock xor inc jmp add in rolb push or push cltd rorb or sub jmp fldenv mov rol jmp push enter out faddl jge jne cmp pop insb lods cmp or push mov mov ret and in es jno adc push fcoml pop xchg das dec cmc pop sti aam push ja imul jae out jo xor mov push lods cmp mov rcr sahf sbb fldln2 fistl inc clc (bad) cmp jne push clc push (bad) mov scas mov fsubs mov or ror or clc xor insl mov jnp pop adc fcoms jne xchg add xchg lods sbbl stos lcall fdivl nop inc mov lock notl and movl (bad) push dec push sub cmp arpl push mov cld xlat icebp icebp mov jns mov mov jg add add lea sbb stc adc pop cmp add mov mov cmp cmp ja add or jne push aaa int jae jne or jne add jne icebp mov xor or or or jne pop jp (bad) rol add adc fidivrl (bad) je sbb neg jbe cmp jmp inc (bad) jne or push lcall rorl or jns or mov jge dec xchg (bad) jne mov fsub mov xor mov movb adc mov fiaddl fadd push pop push mov and test pause out pop lds fcomp mov add or test adc inc adc sub add sub and add jmp negb xor setg mov xor je mov mov gs inc adc add imul push inc pop sar jne fisttpl push push adc cmpl lea enter in xabort sahf (bad) sbb add inc sbb push dec ds pop xchg xchg jmp (bad) fcmovnbe jmp shlb adc movb sbb add shlb in dec insb mov dec enter testl xchg inc rorb mov jecxz nop mov (bad) mov loopne dec push push addl adc insb loopne sti inc insb mulps pusha mov decl cld adc movsw data16 or (bad) cmp mov dec and dec mov inc loop jae bound es mov test fisttpl cwtl jbe test add scas std lcall mov adc fcomip test cltd and sar pop sub arpl cmpb rorb pusha or add popa push push jl pushl adc xor addr16 je ljmp mov or add insl fwait aaa mov (bad) fs xchg in (bad) setl jns repnz pop cld fsts push adc adc ja cmp mov push jb fdivrs xchg pop fs sub das arpl inc ds or jge mov lods or add pop mov pop cld gs icebp pop ret mov lods pop outsb xor pusha negl movl sbb adc test push lea sub (bad) clc fs and movsb add fimull sub pop sbb adc std insl inc sbb cmpb repz in xor lock and mov sbb subl mov dec fmuls fildl inc inc and jns push leave gs imul mov or and out fimull pusha jmp cmpsb or je pop out jnp es clc pusha pop bound les add mov mov pop dec xor es bound insb and in cmp cmp cmc popa or rol dec xlat push push jno sbb aam adc xchg push aad and mov or in mov pop inc addr16 test movsl pop sbb pushf mov inc sbb lea sbb movsl add dec mov sbb mov adc jnp adc mov push mov inc add mov mov push adc pop gs insb andl push or loope pop cltd push ds mov fdivrl jle je dec iret mov sbb mov dec jne or adc jbe mov xor xor or leave dec mov pop test negb add cmpsl roll je sub movsb and lahf mov cs add sub mov adc call sbb test or mov inc (bad) pop xchg push push add (bad) dec mov add outsb dec loope mov je clc mov daa lret lock stos push xchg dec enter les and mov insl cmp loope pop dec sub add adc sub push movsl or adcl stos jo dec (bad) mov and repnz leave pop je or jno leave add xor sbb dec aad fcomps nop in add test mov adc les push orl xchg daa xchg and or xchg mov andl push inc or push loop mov in mov sub stos bnd adc xchg hlt inc sbb mov call adc adc mov fsub or mov andb test pop mov hlt loopne insb in push cmp mov shr fimull adc ret fsubl lahf fiadd inc test dec lock stc sar push cld mov add inc dec sti mov sbb adc sub pop int repz mov int3 adc xchg movsl (bad) data16 int3 xlat add mul call insb jno addr16 pop jg pushf cmpsb and sbb sub inc daa aas xchg inc and rorl pop repnz or dec incl ficompl in cmp loope shlb mov and cmp sub jg inc and mov push and and lret in push insb add daa popa mov outsb pop push sub sub sub mov xchg fldt xor in in xor xor xchg pop aaa pop cmp cmp sub cmp cmp inc insb int insb jl inc and inc (bad) insb int inc fs dec sub cwtl int insb int dec and xchg push push lcall push imul mov pop pop push pop pop int jmp pop pop pop dec pop push pusha pop jl mov scas bound or lret lcall data16 add push adc sbb add outsb inc mov or add dec jmp push andb or insb (bad) (bad) mov scas mov mov clc cmp je push pop mov sbb xor out insb pop jo mov adc orl jne cmpsb sbb out xlat mov push mov pop add (bad) int3 pop push sbb jo lds inc inc pushl xor mov aaa je add mov push mov dec loopne sub call into sar and loopne ret outsb enter mov jnp add iret inc data16 add push sti (bad) fadds stc fdivrl test test (bad) mov push in sbb adc sbb ja pop lock sbb push inc imul push pop sub pop ret call lea push das cs (bad) dec pop sub adc mov push mov mov (bad) mov loope (bad) xor addr16 cmp push pop imul sbb sti push xchg jo,pn xor sarl flds inc mov sbb rcll jno (bad) roll cs loopne jl bound push xchg add subl jge adc and push adc in jb and pusha hlt add dec or rcl loopne dec push push mov rorb scas lea push mov pop xchg push test ja mov jo lock (bad) mov inc push in and inc sub adc or xor mov adc hlt jmp (bad) repz adc int3 shl cs pusha fldz fmuls and push hlt push (bad) lock pop mov iret test call cltd inc or int3 add mov arpl push test sub sub mov fnsave add mov and inc movsl cs xchg outsb in xor inc cwtl pop aas lea sti (bad) sti push fldt sub cld fbld out mov out dec adc fwait lea divl add jb sbb lahf adc std leave sbb insb adc in or roll inc xchg push in xor (bad) aaa lret adc call int rorb xchg mov cmp xor imul sbb lock int fs icebp pop cmp pop inc mov lret stos push mov dec push ret or and jbe and mov mov mov mov dec ret mov loopne pop cmpb jne orb inc jne leave insb xchg das add or and mov push lock jg xchg in pop hlt add call jmp xchg je in mov shl inc push xchg sub loope cmp fnstcw inc iret pushf dec or ret cli aaa pop push or add cmp jl sub xchg pop jmp (bad) xchg sti cmp fsub or xchg pop (bad) xor daa fidivrl cmp push popf lcall sub fdivl pop jge mov xor adc loopne xchg mov pop decl jmp cmp or shlb decb push sti dec add rcrb aad lock add mov clc mov fldt adc push insb and testl jmp sub arpl lods shrl cmp mov push push mov pop fnop ret jmp mov mov push data16 (bad) push dec xor aaa adc sbb and lcall pop cmp pushf test or test adc or aas dec pop das sub mov pop insb xchg or jl jle xor aam out adc add orb and aaa fcoml xchg add mov add clc inc jmp addl mov clc mov push mov data16 cmp stos (bad) je add add mov lea push hlt push sti mov add cltd add cmp and or jae push pop je push add jo jb es lds xchg inc pop mov scas outsl jb fs nop and loopne dec inc mov pop pop cmp mov and or add cli mov jb lret repnz enter adc and rcl jbe sbb enter gs dec add js rclb loop and (bad) mov or (bad) mov push xor mov xchg cltd js sub push cli pop sub (bad) mov add pushf jae xor mov pop push xchg jne inc js outsl aam pop (bad) mov aam (bad) fcom xchg xor cmp push jnp add pusha sbb or and cwtl sbb jmp in jo in push in fmuls push dec addr16 pop dec mov push pop xchg pop cmp push outsl cld inc jo or xor cmp add push pop f2xm1 add or daa roll mov push mov mov fs or dec lods movsb mov stos scas dec (bad) aam aad cmp xchg lcall sbb jne lea movb shlb loopne mov jnp push mov aam xchg int lret enter push push or js push push (bad) push pop cmp dec or enter fs xchg clc xorl das add dec pusha dec and mov push dec enter cld pop pop pop clc add dec fs pop xchg fneni(8087 sub test movsb (bad) push int xchg idivb decb push popf xor add add xor and cmp pop mov dec ret rolb jg xor add xchg negb js addb push leave fldt loop in add and inc add (bad) into rcl xchg push add push mov cmp addl mov pop mov xchg popf push inc jo pushf loop dec out lcall (bad) ja scas loopne insl dec sbb mov jge xchg test pop inc sub mov nop insb push inc cmp cltd ljmp adc and daa ss test adc aam repnz and inc add jg and call stos mov mov dec mull cld mov mov cmpsb movsl movsl movsw push test pusha push inc jl sbb out insb pop (bad) dec hlt pop shr js mov iret lea mov push mov (bad) punpckhbw adc mov fcompl ss idivb neg mov or sub mov ss fistpll cwtl adc sbb xor fcom (bad) sbb and adc sbb test cmp mov mov or pop lret or js push or lret add sub cli mov (bad) mov push dec mov xor lahf outsb cs mov sahf sbb mov jnp pop jge aaa sbb xchg add data16 jl or iret divb arpl mov sub push xor dec mov pop mov in dec fadds xchg sahf mov sub jne xchg mov adc sbb imul out jge enter inc ficoml lret (bad) mov xor sahf sbb mov sarb lea push lods inc and xchg std sub (bad) pop rorb add mov cmp xchg inc mov push popa mov push sbb inc add pop arpl sbb lahf sub add jge push push mov mov cmp dec sbb (bad) sub inc and por mov inc ret add cmp xor in in sub mov jmp cwtl std mov repnz aas rcrl mov movl outsb mov (bad) (bad) (bad) mov lret push add push mov les mov xchg jp add xchg fdivr mov out inc divl add or and pushl stos and dec ja stos inc es lock inc jae into nop out lea mov sub test inc jge,pn dec pop idivb cmp mov fxch adc xor adc pop and push push sub sbbb mov jp xchg rorb add or adc add aaa dec push or add cmp es sub cmc hlt imul daa sub ficompl enter ret ret inc add pusha inc or pushl inc or or fstl sbb nop test bound add push xor or pop imul and movsl or xor lock arpl (bad) sbbl negb adc mov ret pop jne fiaddl rcll push shl clc jbe addl lahf jecxz mov popa rorl mov xlat test cmp jne data16 push mov add mov dec or xchg push push mov and pusha mov xchg push cmp incl jo add or ljmp rcrb or inc loop sub cmc xchg inc pushl dec bound adc cmp std xchg mov movsl add je or dec test jg mov jl push add sarb movb add movsb push push pop or clc movsl and clc cld (bad) es jb adc enter mov add add push mov cmp jne jmp iret sbb pop mov cmp and push or (bad) fisubrl das lcall out negl in lods push xor dec or leave or adc enter lds outsb cmc mov cmc add mov cmc lcall pop (bad) xchg outsb or (bad) push notb sti adc popa movl imulb add (bad) pusha pop xchg push pop xor gs lods mov mov jmp push push xor (bad) or test lea subb cmpb and adc add fldt lea push loope xor and jbe pushl jmp push inc push inc inc push or (bad) push push lods js fcoml cmp leave or and ds mov inc pop jb std clc std mov ret lock movsl movsb push movsb loope addr16 push or repnz adc cld hlt cld in push enter clc jmp in mov mov pop in cli in cli inc js adc (bad) xor loop add inc xor call sub sub ljmp and outsl jne ljmp pop lods jbe rorb or or dec inc cmp clc adc enter sub lods push daa push rorb sbb push cmpsl mull mov xchg in cli sub call in clc pop mov and push and or sbb (bad) mov jns ficom jno out shrl push push nop mov and inc xchg add mov push pop in adc out push dec mov nop data16 and add xor movb clc cmp scas mov push pusha enter stos sub or sub pusha sbb jo sbb xor iret and in or add mov into or insb xor mov xchg pop (bad) ds jle lcall cwtl das add lods je enter and inc clc push je or push jno mov mov in inc add pop das leave aad das mov adcl and ja mov mov sbb cs add lea or xor adc push push dec clc jne outsl int3 popa outsb mov pop iret dec mov add fisttpl push push out push or flds sar mov subl inc pusha addr16 adcl es xorb jl out scas add es mov js pop fmuls add insb test push clc ret test push loope cmp add ret inc add jno add xor sbb lock jb xchg (bad) lret cmp inc push sbb (bad) mov call xorl add or xor push pop mov sbb inc xor add sub movsb dec and lea (bad) pop rorl mov push cwtl push mov push out or xor in dec iret cmp mov imul mov xor jns outsl aad sub arpl cld enter fs push pop enter int3 (bad) inc mov insl into pop sub cmpsb nop gs int3 sbb (bad) outsl insb in inc hlt cmpl jl inc or aam out pop mov push add add mov lock cs gs stos push or in cmp hlt loopne sub jne adc sbb and je daa fwait or call loopne mov movsl inc call cmp pop cmpsb loopne in (bad) (bad) lock mov and jmp movsbl testb ja inc mov or mov sub sahf addb jmp pushl shr or or sub (bad) sub mov pop and fiaddl and je jae adc jnp sbb repz mov lds leave add push mov add mov inc icebp inc adc pop fcomps sbb pop lods (bad) xor dec and inc add mov fstps imulb aad jmp mov lock cwtl pop mov in and ret jge nop je mov cmp mov imul adc sbb and jmp adc es sbb fdivp pop sbb push inc pop repnz and sar sar sbbb test push (bad) or cmp mov xor ss ds rorb int add (bad) mov mov and mov call (bad) ffreep sti jb dec enter loopne inc dec push sub loopne sbb sbb push push jne sub das xlat xor adc push xchg push dec (bad) adc add cmp cld cmp hlt das icebp outsl or push pop jmp mov add ds or adc jp inc add dec lea jns push add imul stos sub jo ficompl push lcall push or out adc add (bad) fstpl cmp cmp inc incl jb add sti test je and jecxz and add int3 and (bad) inc mov jge or jne jmp pop inc hlt fucomip test jge sbb push in inc xchg call aaa insb and mov push addr16 xchg hlt or test adc dec add mov dec sbb push lock loope movsl pop fdivr roll push cld (bad) jne lea mov and outsb (bad) outsb jl inc je,pn dec inc push xor fstpt imul add pusha mov mov pop jne movsb ds (bad) neg shlb jg inc mov or jne pop (bad) sti adc lods push pop pop pop add sarb push push jnp cmp sub (bad) ds data16 clc inc mov pop and mov fs sbb add push xchg xchg push mov mov adc sbb mov cmp (bad) xorl shrb test mov or push sarb push dec cmp add cli mov cld ret jae enter push push pop std fbstp inc cmp dec test jg mov push lss call sub out fstl inc sbb pcmpeqw add cmp mov inc dec cmp jg sbb and dec mov pop inc xchg jmp out xchg and dec add (bad) dec push sub inc rorl inc jne add addb pop or sub fnop inc xchg jae stos mov orl dec push jl ljmp jnp mov xor inc lcall xor addr16 ljmp pop mov clc inc jb and mov mov xor cmp jg fcomps stc and shl add mov xor add cwtl sbb cmp outsl in (bad) incl iret js shr shl add mov fstpl mov stos add sub clc ljmp mov sub dec hlt push pop mov or jmp ss out fiaddl sub incl incl outsb inc cwtl push jp pop aad pop pop add push movl pop repnz std movsl in lret mov lock dec or inc and sbb cwtl adc and in pop js rolb mov and rolb jbe in sbb and pushl cmp inc add mov mov cmp cmpsl mov add rolb scas enter data16 shlb jecxz adc inc or mov mov jb sbb mov mov je pop leave test sbb sbb push jns lods lock dec sbb (bad) sub xor inc pop mov add mov mov or js lret rol dec fsubl adc mov and mov lret push adc and (bad) and pop idiv push sbb hlt (bad) push movzbl insb fnsave mov jmp push add jl in push aad daa test testl pop jae sub push lea fiaddl popa cmpl inc jmp outsb mov and sbb sbb insl idivb pop add cmpl push sub cmp cmpb pop jg push sub sub dec loope setbe cmp sub jge push or sub cmp or outsl aad xor add and or loopne cmp push mov andl or in nop aad fcomps stc fsubr into push push into adc shll cld and std out shlb xchg es pop dec scas cmpb adc cli add jmp dec add sbb pop sbb loopne mov hlt xchg dec je clc jl fistpll mov inc cmp mov fwait pop sub stc out push stc shrb jge cld (bad) cli cs xor loop xor ret fistpl (bad) scas fdivrs insb mov push jge stc int inc mov mov test sti nop add adc or add repnz fnstsw pop inc cmp (bad) data16 xchg mov iret fimull mov and (bad) jl pop out sbb repnz cmove push mov dec mov or and mov inc jg call mov jge lock pushf adc sub call or sbb adc jbe loop pusha mov iret rolb inc pop mov xor push push outsl inc adc test repnz cld call pop inc bound jge push in int3 pop stos pop xchg push inc add add (bad) lds mov jne xor movsb insb outsl test add mov adc add pushf cmp cmpl dec pop mov je push and int rcr (bad) sahf jmp inc add daa adc aaa stos inc or mov fidivrl inc jae sbb inc or push iret mov mov sahf xchg dec mov mov pop insb decl add jno lock sbb lahf sbb enter fmuls test rcrb sub clc fidivrl push stos jge adc mov add xor inc mov xchg mov lret inc jnp fisubl shr inc or test sbb sub mov negl (bad) and cmp mov js lea out subl xchg push inc out cmpsb movsl out add xor sbb not mov xor xor xor mov sbb xor pop jmp mov mov bound jmp push enter mov mov jmp jle xchg mov jns add cmp jmp mov xlat ss and xor sbb dec std lcall cli ljmp fdivs test je and (bad) cltd mov mov push and push cmp outsb mov dec mov add push push iret rcrl or sub int3 or enter pop sbb pop xchg push and cmpsb orb (bad) movsb popa ret adcb jae test and add inc jg enter and push push movb push clc sub mov pop push or test or test int3 adc jmp push add sbb add rorl fs loop jns pop lea jnp add xchg dec push jns sbb and adc orl push pop jae xor mov adc adc and xchg mov pop add sbb or push cmp icebp push sub mov push pop add mov pushl push ficomp fisubl xchg aad aad jg xor or in fsts mov dec dec pop outsl nop movsl inc inc or and clc sti inc or sbb scas dec mov add pop or mov pusha cltd mov rclb and add test pop xor xchg mov loope rcrl add lret or adc add clc push push and jmp movsb mov lods add or jge xor mov jbe mov aad pop jmp cmp fidivr pop mov insb adc insl push leave fs pop movsb jmp dec sbb mov dec inc ds jno add dec roll push in adc and les movsl cmp push cmp ret mov push rclb imull nop mov add loop or movl je push insb pop or mov push add int3 inc adc push pop leave imul test jmp fmull bound or mov (bad) hlt fildl scas sarl gs aam push and loop cld lds mov shrl xlat or aad call in or or add (bad) stc mov pop cld mov or stc aas pop add jne ljmp in mov sarb mov add leave mov adc inc cmp jle and fdivrl cmp push and inc fbld mov scas (bad) int3 adc dec bound aas add in add mov jge add pop fldt or and jle push mov cmp fisttpl mov std inc add js bnd mov and and pop test notb push jne incl seto neg or push stc push test aam js jp push mov or push mov push add xchg inc cld xor das pushf aad cmc cmp or call xchg loop add sub pop adc mov xor xor jbe mov ret and cmp orb push mov enter in inc cmp sbb pop or std pop add add clc sub add push add pop sub in add lea dec in lea cmp push das add lcall adc fldl jle mov loope or lods push mov mov adc adc (bad) cmpsb and mov mov mov pop add push pop mov addl loope sub es in fcmovnbe push sbb sti add inc cmovae jne cmp jne mov pop notl mov push mov cmp and je push pushf xor stos lahf mov sbb ret fisttpl mov or pop or pop xchg jmp inc push stos inc or inc add pop xor dec mov pushl test push inc imul gs mov cmp jae push (bad) ficomp aaa mov push cmp inc inc inc sbb icebp pop push fcmovnbe or cltd (bad) pop fiaddl fadd (bad) jne shl dec imul out (bad) fcmovnb pop (bad) jo jl mov imul push xor mov and faddl or dec sub pop addl mov inc lock icebp insl js out dec mov dec inc or inc test js inc stos clc scas pop ja lcall daa ljmp xchg sub clc sbb dec into lea push stos dec (bad) jbe test test jb ss inc sbb mov push clc push jae mov (bad) mov xchg mov (bad) mov dec push popa sub ret rolb add fdivs add xor add test add cmp dec dec in cltd mov jae std sub loopne add mulb sbb add jne in inc in jb mov mov pop adcl call call mov mov decl or dec loopne in mov or jg inc or repnz jbe or sahf lcall es or mov sbb cmp add inc push shrb in or push jl inc lea push (bad) mov mov (bad) bound jnp add sub xchg inc add xchg leave clc pop jmp cli lret add (bad) cmp jne jle xlat pop xlat inc push and cmp add mov or mov stos jbe fwait stos mov adc (bad) ljmp xor mov inc dec loopne ret das push xor sbb jp je add fidivrl jae hlt xchg fdivrp orl mov jb lods jmp out fsubl leave jbe cmp jae mov daa xor mov push or test mov inc add arpl add inc adc into xor loop add mov pop mov dec push dec fimull and hlt pop pop jno dec in dec pop clc xor mov divb xchg pushf lcall jo dec pop insl insb pop pop and sub push (bad) dec in pop jp push invd add cmpsb or adc jne std in sbb sbb cmp popf sub sbb pop lea fs xchg mov imul mov inc sahf in in hlt in in add imul xor pop dec out adc in xor push push dec rorl repz sbb pop or jo jae pop pop lods mov mov jae inc jno mov pop lahf jne or dec jg push add ja inc jmp lea enter lea or pushw sub jbe cltd sub ret ja fdivrs mov cmp and imul cmp out popf mov arpl cmp jae jmp add (bad) mov push mov or xchg mov mov push xor out push insb pop outsb lret lods jl push add add or (bad) jmp repnz add inc add lock cmpb test jmp stos mov mov pop or push cltd mull inc jne dec mov mov js aad or mov mov mov push mov mov sti add leave mov add (bad) popa or lret bound xchg jge aaa push enter rorb movb neg (bad) sub lock adc roll lret (bad) repnz lret xor ds fistpl sahf lods mov fwait adc xor dec nop push lods mov fcoml lock push inc dec inc jle cmpb test mov and add xor in jbe push cmp dec and ret hlt cwtl data16 bound bound pop push mov or dec xor xchg lods (bad) mov fisttpll fiadd je mov aam clc daa jmp fs jo lea ret push cltd pop push lea call ror adc jp idiv mov add in or nop mov test fidivr push dec adc out mov sbb inc and inc pop incb jnp in insl ss pop jecxz sbb jmp sbb dec sub lds mov xchg pop or sbb inc les bound addb push roll dec sub jg mov add mov popl pop mov and std sbb push adc in lea jne data16 sbb adc jbe out orl adc imul lds sub std (bad) loop xchg add cld cmp push lret test jne (bad) xor cmp and and sbb repz lock push mov pusha fwait pushf sub sti sub pop (bad) xor sub fwait insb lock addl pop push cwtl sub or mov adc int3 adc pop pusha aam fwait mov or xor int3 or add and push sbb ret sub push (bad) push (bad) or adc cmp jl push sub aas sti test push inc jae dec jns push ret ja popa dec cmp or xlat add cmovp (bad) repnz add push fdivrl or movsb add push (bad) xor or push push mov or add push xor loopne test lock pop and jo pop add pop sarb aaa pop mov rolb js add pop pop cs aad dec mov aaa or mov push sub xchg movsb add add rcrb add or decl jnp fidivrl mov jbe add aam push mov insb fadds ror mov (bad) stc pop es scas mov loopne hlt mov (bad) mov fsubs lcall inc xorb inc (bad) xor push cwtl inc mov pop sub adc xlat jne in xchg test pusha jne dec lock or or push fidiv push sbb adc push xor gs dec inc jo dec outsl jb adc dec inc pop rorb cmp sub jg or xchg add jmp jo add shlb fadds push add fs xchg lret testl jge pop push push (bad) mov loopne adc arpl jge pop aaa imul add xchg mov roll in mov lea jno add push outsb mov scas sbb rolb rclb je xor xor aad adc loop cld loope mov cwtl push push sub cmp adc mov push (bad) in in nop insl push adc xor js jns aas neg sbb inc out js stos inc mov in (bad) lret fistpl std mov add sbb jo add push push sbb or inc push cmp jp ds pushl aaa mov mov shl or insl adc xchg sub dec adc (bad) sub adc ret cli lods jnp jo jo add pop and out sbb push xlat into add sub mov pop rcll pop (bad) push imul ds cli add fucomip mov ret adc pop dec adc add jmp inc addr16 push std pop pop shl or xor or mov icebp and xor add add inc andl cmp sub loope (bad) enter add shll ficompl dec cmp mov pop push add loopne subl setnp mov xchg pop or inc mov or into inc or int cmp push or add test push cs sbb inc call push loopne dec inc push push xor adc int3 sarb xor hlt mov fcoms and clc push iret inc int3 xchg mov jbe out inc mov gs xor mov push int3 pop dec push das xchg add inc pusha popf sbb test (bad) imul sub dec bnd (bad) mov lret push push sbb push adc push mov (bad) pushl jb andb lds movsb mov add test fiaddl out adc imul nopl test imul cltd pop jne fdivp call pop xchg adc cmp push inc and test (bad) sbb inc jbe int or bound lods dec jge imul enter repnz jp and sar inc pusha data16 mov add mov xchg les rcrl xchg ret xor in sbb sub pandn and add xor jns aas sbb push inc push fbld mov sbb (bad) stc fmuls sbb jge je push sti imul or insl adc or or mov fdivrs adc sbb add mulb pop or cmp aam push xchg clc jo loop add sbb fcomps inc iret push push jnp mov sar inc adc sbb jnp enter pop add mov adc fcomp push pop adc pop or mov ret pop mov outsl call and nop (bad) jne sub call mov mov ja mov xchg (bad) sbb je dec push pop les aam rolb es ds mov imul or sub pushf or fnstcw jle mov (bad) push xor cmp inc jno inc dec roll jl cwtl jnp jbe add inc cmpsb out jl xorb test and shl mov push inc in jecxz push push (bad) hlt sub sahf mov and fnop stos int add push jnp jmp ss push dec fdivr inc cmp movsl dec push pop push sub push ja inc adc test push adc or dec push dec cld vmread xor clc (bad) push xchg insl aam jo rcrb addr16 inc mov cmp add push push mov inc mov pusha ret and or call mov adc xchg sbb in movsb mov sti cmp and pop push and adc mov pop jmp adc or ja orl pop mov sbb roll fimull jne mov mov rcrb icebp (bad) mov inc push push nop jmp cmp jl push dec imul xlat ds popf push mov mov fistpl or push mov imul outsb mov sub cltd js rcrl mov jle pop or adc test add mov insl xor jle cwtl js pop sub jne dec je daa fcoms in add loope jmp pop add pusha outsb test or adc jmp push or dec cs int3 pop sub sahf pusha enter lds mov rol inc sub ja ret dec xchg add cwtl inc fcomi lea sbb or lods mov jp push loope xor sub fsts adc pop sarb push fmuls mov lea dec insl clc push push push cmp mov cmc pusha mov mov clc sar outsb fist cltd stos jg mov cld xchg std fmuls xchg jne mov mov dec (bad) call mov pop ja repnz xor outsb incl in sbb push add (bad) sti inc popf add push dec mov push ret xor cmpsl lds adc inc cmpsb mov test dec cmp orl outsb sub pop sbb inc dec les pop add lods fildl push push or imul adc sbb aas test pop into mov pop jne mov jg cmp std and cmp icebp pop mov (bad) push insb jl insb dec or cmp scas xor and call mov int inc pop and or cmp mov flds sub xor or mov add jb inc repz mov test into inc andl xor int mov cs jl sarb adc sub xor mov mov dec jnp push mov push mov in icebp or (bad) push icebp inc int3 int3 push lea adc inc jae pop xchg xchg jmp pop push test jecxz cmp cmp mov mov push cmp jne inc fldcw add inc ja jmp sub mov pop pop fldcw pop pop pop pop aam shl push mov push push pop inc sarl or inc mov arpl outsb and cld jb jb loope test add mov push lods cmp and dec push jecxz stos mov ljmp inc add xchg add mov lods cmp jne sbbb div and pop jne push (bad) or (bad) (bad) dec pop add dec add mov andl rcl (bad) jg int cmp jbe jecxz stos inc jmp jecxz stos movsl cli out inc xor insl pop jecxz mov stos shrl imul scas cltd test fucomip out dec sbb lods mov cmp cmc dec mov pop mov mov mov and sbb lea xor or (bad) test jge je xor push xchg add fdecstp (bad) or inc pop sub roll jbe test inc fwait stos adc cltd sbb mov cmp add fist jae cmpl pushl (bad) dec or xchg insb mov push dec add popa sbbb xchg fisttp mov fisub push fs adcl pop mov gs cmpb mov sbb push adc or mov pcmpeqw (bad) sub (bad) idivl mov cli jp add xor push jmp or mov ljmp push movsb push stos je mov sub or je and pop mov add cmp pop fdivs jae adc inc adc push jo repz push adc xchg ljmp leave outsl inc bound mov or xor cmp jae jge lods sub fnstenv es cmp mov or or jbe xor adc sysexit sub pop push fldenv pop cmp stos xorb bnd in mov sbb push sub fs sbb xor adc or push fs addr16 mov in mov adc mov incb jbe lea dec push xlat push daa subl icebp cmpl push push push minps outsb and jle scas bound gs cmpsb mul shr and subl jo out mov addl push andl hlt loop loop pushf fisttpl xchg insl or or mov add std bound or or scas pop xor xchg sub call sub js mov loope pop aas subl scas cmp loopne or dec jmp cld or jmp pop mov xchg loopne aam fcomp outsl lret mov adc and loope in mov and je mov inc xor pop sbb scas popa in sbb cmp push or aam scas mov cmp push or mov aaa mov (bad) out adc stos mov jmp jbe fcmovnu cmp popf push loope jne sbb mov cli or push in inc int insb jecxz rolb in jb fs outsb in ljmp cmc jge data16 testb inc inc xor out ss or (bad) jmp leave add dec imul push push adc jae jl push inc adc push mov dec mov push test je pop adc mov addr16 fisttp gs je push sub inc je inc jle inc jle (bad) fildll xchg test jmp push pop jmp sub je dec (bad) adc dec jne push lds jge jne pushf mov inc pop jb inc mov inc and out add sub loop aad bound jmp inc movsl ljmp push sub fcmovnu jg ja pop jmp jbe je add add (bad) sbb add mov dec div mov xchg invd jne push push push xor pop jne adcl mov jne out sub add sbb movsl pop test mov inc roll cld sub popf and inc test jge or sbb cmpsb mov (bad) mov divb in mov dec mov icebp aas mov cli inc cwtl jmp fsts fcoms mov (bad) xor cmpsb cwtl push cmp fimull pop mov xor in jle aam push aad sbb push mov jno push sub and (bad) sbb push mov push xor stc push insl adc push mov shrb enter jns or loopne addl cmpsb push cmp jno mov (bad) cmp push lcall xor fimul add or int shll in test xor mov cmp jnp push add arpl push test fldt and jne push add xchg cld (bad) adc push dec fmuls sarb adc sub inc add jno inc rcl inc outsb ret fistp add in fmull mov fwait aam bound sti lods cltd lea lret test in call fildl cs in add out leave fxch inc in add fdivl xlat fimul (bad) addr16 fldenv ss inc jne xchg jb sub fs (bad) push add sub into insb and fsubs adc or lea insl movsl (bad) pusha insl out pushf jno clc outsb xlat push in fcmovnu leave jne sti fld fimul adc jmp fcoms push pop add lock fldcw push outsb test lcall nop fldl add inc push add jo jp cmp mov stc adc add adc pcmpgtb push decl scas (bad) jle inc imul and je sbb rcr enter add and inc jb aaa lods test (bad) jmp shr ja jle fstpt jae scas pop or fsts mov pop ret in mov neg rcll stos sbb out xchg pop clc lods push or mov xchg and mov or in ss aam cwtl push lcall (bad) sahf mov xor cmpsb rol push mov cwtl in fcoms jmp fiadd mov adc movsl rcr xchg cmpb test inc or add xchg clc pop jne inc lgdtl mov sbb adc sbb or xchg ror fbstp inc (bad) repnz lret incl pop inc jmp push into (bad) (bad) je jecxz mov jns je sub sbb mov push sbb mov dec sbb mov xchg pop mov imul js,pt adc pop push dec divl sbb or ss add loopne jne xor (bad) mov sbb insl cmp fstps cld je cmp je adc sub adc jo xchg insb int dec xor insl and pop mov fwait mov mov pop mov sbb std fsub test adc adc or mov pop test insl ds mov notb sub test repz icebp (bad) ficompl adc or jmp cmp mov jae adc ret mov jb roll pop push mov add inc movsl dec ss add sbb xchg mov int mov inc mov (bad) aaa test push clc movb arpl popa outsb lahf cmp pop inc ret test and push mov xor dec ja push add cmp sub adc pop push push (bad) sbb pop aaa (bad) and inc mov jecxz (bad) pop pop jnp add repnz movsb and adc jb push mov mov or lds and xlat cmc andb push pusha call pcmpeqw inc stc jne jmp or xlat fcomps jb jne ret push rorl push pop or push pop mov fwait jmp sbb in mov push push lea cmp mov push ret pop fmuls inc push mov push inc xor test in inc sub cmp insb xlat add ss xchg and adc jmp test adc rcr jmp es incb outsb int3 add cltd xor sub ret or loopne mov or loope cli (bad) insb pop icebp repz adc insl and push add or fstp das adc lea or imul sbb add or pusha push jne push add jne jae outsl insl int3 outsl or or repz add adc lcall sbb cs push int ror adc in insb (bad) addr16 jmp or or or aam (bad) dec and inc push xor pop les fisubr adc sbb jmp pushf arpl fdivrp or sbb cmp and xchg sub sbb add or xor push movsl ljmp push mov add mov in cmp push ja int js repz shr and add repnz sbb jle fbstp mov sarb and cmp pop mov (bad) jbe stc (bad) pop (bad) jmp fmuls scas sbb xor cmp out (bad) scas adc jmp push subb lods in int3 sub cld add ret mov or pushf loopne mov sub and fldl2e mov inc fsubr sub ret rcr fstp adc icebp or hlt pop aam adcb pop popl mov fadds or push sub sub jo push and aad sbb push add cmp movl fsubr orb fmull and xor sbb leave je cmp jno cmp xchg dec out mov adc in cld bound into jne fsubrl push adc xchg jnp jbe mov pop sbb and outsl loope mov or roll data16 (bad) sbb inc mov and out cmp pusha fcomps add int roll or out mov cmp mov dec in push add mov jo cmp in rolb pop jne rorb (bad) mov loop cwtl cli loopne mov or mov add movb pop scas lock xchg add jae es inc xchg adc in pop add mov inc mov push out mov add mov push jecxz lock pop or int3 mov out ret add cmpb idivb cs pop adc or jne push push push push sysenter xchg cmp sti pushf jnp sub (bad) je call (bad) mov or add adc adc add addl push pop add stc orl push adc rorb out push std fist cmp je cmp jne mov fisubl movmskps mov jl sbb insl jmp ret jnp sub add and push sti push push push push adc sub dec or or lods lock cmpb call (bad) xor xchg adc ds dec in bound push cmpsb jp dec cmc sahf inc jns cmp and (bad) jne mov fist movsb pop pop inc push inc xchg and orb add aaa adc inc clc jne in adc sub mov xor mov xchg jbe lret sub fcoml stos test movl push mov xchg aam in adc push add and add clc add jb pop mov lods pop cmp sub repnz das pop idiv adc or jg das fisttp jb cmp mov pop movb push test fbstp mov mov lahf jmp repnz jp xchg fcmovnb push repnz or fldln2 sbb icebp and in flds xor xchg pop call (bad) xchg fldenv inc xchg add or scas fwait push mov adc ds or inc in push mov jb movsb add push leave cmp xchg jb inc mov test data16 aad push sub adc mov std inc push ret movsbl jg fiaddl lock xlat sbb insl and bound or adc dec cmp ja adc ljmp mov sbb (bad) je lea sub mov dec adc dec mov push mov (bad) incb fmuls shr ret mov adc rep mov and stos lret cmpsb fimull sub pop or push adc jae pop dec adc mov mov fsts cld call pop add pop push dec pop mov and push mov or iret cmp push cmpsl pop sbb or lea (bad) mov sar je sub push jbe push lea shr inc mov adc pop cli pop ficomp sub jbe pop jmp mov mov mov fisubrl push ja les adc push sub or scas stos pop lea cmp push mov dec inc in xlat sbb add bound negl or lock mov ret sbb push push push cmp adc add lods sub sbb jge push bndstx sbb xor popa add fucomi lds adc and adc sub ja lea adc sub jle lahf mov dec sti pop repnz xor pop mov (bad) push adc shrl adc ja mov sbb repnz mov test jb outsb movsb push bound add push scas mov sbb add imul add call adc mov push clc adc gs cld les loope or dec cmp sub inc inc adc mov mov cwtl in and aas out aam jmp push inc push insb sbbl mov add in xchg insb ret xchg es xor stos dec fcomps shlb pop mov or aad or roll sbbl (bad) jbe push and and outsl pop mov jb hlt add pushf or lcall cltd fstl jecxz add (bad) push sbb dec pushl enter das dec sbb inc mov dec loop mov mov mov aad xor out mov or cmc mov cmc sbb hlt mov ds sbb and ret pop scas sub adc jno sbb (bad) or push call mov xlat or or pop sbb hlt int push mov add add sub movsl (bad) fcomp enter add xor in mov popa dec (bad) lock add jnp or pop inc icebp inc pop movsl subb je jns adc add test lock sbb jg rorl push inc mov push inc add add cmp mov mov jo rclb inc and sub push test cmpsb xor adc or adc xchg sbb cwtl adc nop (bad) push add mov cmp sbb add mov jae pop sbb dec pop push mov mov inc inc dec lock mov or push add mov add and dec pop divl lret cmp add adc and xor int aam push arpl inc ss mov cmp cmp push (bad) xor sub jns inc cs or pop into or fcoml jl outsb mov outsl aaa pop pop xor nop je mov cmp addl cmpsb test loopne repz inc xchg cmp dec fsubrl outsl xchg or and pop xchg fdivs jbe add fwait xor add and (bad) lret push sub lock push sete inc mov mov ficom adc pop push fwait adc mov mov sub ss mov in sub ja jae test fistpl fnsave fiadd ja pop stc inc jne mov popa scas sbb xchg mov add mov cs insb add jae jg std push mov loope fmulp sar and jecxz je loope and sbb add insb pop xor mov pop jp or mov inc cmpb pop add mov sbb add adc mov adc xchg pop pop mov bound ret negl mov or fist je push adc (bad) jbe (bad) leave test pop inc es cmp add sti add inc push mov pop ret push fadds rcll incl pop and test sbb or dec (bad) or dec jecxz push xor pop jmp mov aaa mov add cli js or pop mov (bad) push sbb cmp cmp (bad) cmp jne inc shll adc sub cmp jae mov mov mov mov add fdivp ret mov xor flds decl aam shlb rcr sbb test sti loope mov mov jo incl data16 or inc mov movzwl add and mov jns inc push pop sahf jmp lahf dec pushf rorb xor mov push or stos push mov sbb mov push pop cld call or add sub mov and movsb stos xchg (bad) sbb invd and cmpb pop clc cwtl pop test adc jbe and xor insl mov adc add dec bound and and add inc dec dec imull mov inc inc inc and and jg das add cmp nop inc (bad) stc and mov mov into push or lret pop adc mov mov mov inc rcr jge jp nop stos ds push inc dec adc int3 out setns adc repnz jmp push sti out adc movzwl xchg cmpsb enter jns mov iret fistl popa dec mov in inc or or push pop add outsb (bad) mov jmp pop ja push sbb pop ljmp repz iret lret inc inc popa in fxch push inc sub fstpl mov icebp cbtw adc fdivs lods xchg fcomps adc jg sbb cmc sbb neg sbb xchg xor leave not jg xor jge xor je jns sub sbb dec inc shll insb inc xor sbb clc fwait je or pop mov or or cmp in cmp inc or or jne lods stos ljmp cmp or fild jle cwtl rclb cmp cmp push inc rcll fcmovnu das jne pop (bad) rcl fldl insl imul adc outsl cmp push jo cmp mov cmp jmp add add xchg cmp rcrb pushf sti push push mov dec lock std out lea incb or incb xor sbb inc add out add and (bad) mov mov and roll add xor push fildl xor dec sub mov add (bad) push int jbe mov lret in ja aas in push (bad) sub push cmp push je dec dec or pop push mov inc push sbb outsl or loop or jmp cmpsl rep adc data16 jg sbb inc xchg int3 in dec test jp call lea inc aam call popaw jg lcall push push add pop add pop cmc sub push mov scas add out dec arpl or mov sub push loop lcall lret (bad) mov dec fstpl mov mov and and inc daa cs push sub sbb daa decl notl pop xchg pop dec sub add lret add fldln2 add out pushf pop std sub out popa cmovb aaa cmp push ds inc ss xor mov add sbb pop mov cmp adc add into or icebp dec mov mov lret mov mov add or ror or rolb lea inc push stos addb scas ljmp pop fs jbe xchg test pop xor fiadd or xor push lcall into push add adcb setnp lods adc sub pusha add sbb dec sbb sbb inc inc cmp sbb sbb xor sub sbb sbb and sbb sbb sbb adc adc repnz pop pusha xor xor push xor xor sbbb mov mov nop rclb rcrb (bad) enter ja mov mov and and rcl fsubs and and loopne call in lock clc popf and and add orl movsb mov sbb sbb sbb xor xor sbb adc xor xor or add fs xor xor fs inc enter js je insb enter push xor enter test dec roll sarb mov push sbb and aaa adc stos imul or inc pop inc pop pop pop xchg aas jg pop push inc dec push inc push inc dec dec push push push divb je insl push outsl outsl je and inc push pop inc (bad) jl and pop push inc dec dec push jae cmp imul cmp dec inc dec dec dec xor push gs mov rsqrtps fs add (bad) dec jle cmp push push dec push inc pop push mov sti sar push inc inc dec inc cmovbe inc inc sbb sub dec dec sbb sti daa stc dec inc dec push dec push dec dec dec dec push dec rcpps ds sahf xor addl dec push jb fs mov jne je xchg inc out push inc push gs imul adc jb outsb je inc pop sti pop nop dec inc jne insb fs jne bound sbb mov dec popa bound outsl dec fistpll add insl gs inc push push inc rcrl arpl sti ljmp jae data16 push imul dec push pop jno push (bad) jbe push inc mov push xchg pop inc sub incl dec or inc sbb sub inc dec jo jbe mov jmp ja push pop inc out insb push sbb pop and imul outsl jne jae loopne std sbb dec push pop inc inc push inc mov inc dec jae ret fadd mov sub fldt (bad) add insb jae adc outsb out fiadd lea jae imul out outsb outsb jbe fs dec cs outsb imul scas mov test xor or out push push xor xor xor xor and xor xor jecxz xor add add cld out cwtl xchg jo inc popa je add arpl shll jne sub cmpsl movsb sub (bad) pop inc js insb outsl adc push push inc outsl lcall sbb (bad) pop gs je cmp inc jno repnz push push push imul sub packuswb pop jae nop jne lods (bad) cmc add add jg inc stos push popa jae mov imul cmp (bad) jnp fs add or popa fs int mov inc outsb call adc jbe jo xor pop jns je push mov push out adc rcrl and push inc push xor fdivs movsb push outsb jnp pushf in inc inc adc push mov daa inc and ds or mov fs xor mov push inc inc sbb push inc jae fstps dec and push push dec or jo mov jb push pop or add and lea sbb (bad) inc ret push fisub imul rcrl dec jg lock fisubrl pop jo arpl and add sbb jg,pt mov gs ja bound insb je mov fistl push ja add jb (bad) push pop cltd adc pop cmp mov jns lahf ja xor xor add sub das mov (bad) dec lds imul xor push push inc scas shrb fmull sub pop and cmpsl movsb out pusha (bad) mov push and xor inc mov je cmp ret mov jle mov inc dec push lea push inc inc sub cmp imul inc and mov pop xchg mov jno js lahf jae push push add dec aaa jmp inc testl aam ficompl mov divb pop (bad) push (bad) mov mov dec pop cs push lods mov test cs jne cmpsb (bad) out cmpsb addr16 pop insl popa push pop popf addr16 insb sbbl sub aas outsl mov mov je push pop jl mov pop popa jo arpl loopne push decl addr16 sub dec insl lcall xchg mov ja jns dec and push dec arpl ja and push mov or push inc aad push mov dec dec adc pushf pop sbb lret arpl jg (bad) fistpll push insb insl add jle jne ja jns repz xor sub push or js xor sub pop push inc cmp dec sbb sti in cmpsb mov pop xor jns aaa push int addb add xlat cmp jne xor cmp xor ss sbb gs insb out outsb arpl outsl add inc jne or bound xor jo imul mov popa and cmpl xor pop dec push mov inc push push dec sub pop jno sbb movsb lods leave add jg fistl jae arpl jae and in outsl clc and or pop and sub fs loope sbb inc inc stos lods sub and cld cwtl push add mov mov pop adc inc outsl or shrl mov sbb jns fdivs or add pusha push inc imul jmp pop testl insl or mov je insb inc sub add push mov mov cmp xor cs jb inc pop pop cs imul mov popa data16 dec sbb inc pop inc bound repnz ret shrb insb cmpsl cmpsl mov or mov jo mov add and adc and in lcall sar pop mov cmp mov and lret fnclex (bad) and and imul and data16 xor inc (bad) dec pop (bad) arpl into clc call in loopne loop in call jmp out in jmp and int in icebp in imul call sti jmp push out jmp in out and sti repnz and jmp mov jbe cmova pop les imul bnd mov lcall nop push ss and xlat push cmp dec push jne push push pop push push push xchg or imul dec jae pop jns das rcll add jg pop jo jbe arpl dec outsl jbe int mov and pop xor add or xchg data16 pop mov cmp and cmp call jae or push or sub es in in jmp lods pop cs inc xor das fsubrs cmp icebp or push jo dec xor pop mov clc lret mov cmovnp inc je cmp cli insl daa dec xor aaa inc ja xchg jle pop cmp aaa xor sti (bad) jg inc mov xor (bad) add inc seto mov pop inc mov or prefetchw or hlt in pop dec cs nop das std idivl insb dec xchg jno or xchg repnz xchg mov and inc stos and sbb mov add in imul xchg inc insl cmpsb leave outsb mov dec push in stos rclb jl xchg int leave jb xchg (bad) mov and data16 and js and popa xchg mov negl xor fbld and mov xor mov cmp xor and mov ret aas adc nop mov bound test lret pop enter or lock xor in dec rclb scas sbb cli scas and mov jne loopne incb hlt pop les test pop mov ret in repz ja sbb and enter nop (bad) (bad) nop or nop addl or xchg add shll or call xchg add addr16 cs or stc cmc lahf dec cs dec repz popa dec xchg adc inc ss lret unpckhps ss js ja and xor cmp xor das sbb or and cmc sbb test repz in or nop jmp fld1 pop inc dec repnz jbe cs clc dec ljmp out xchg inc push adc push sbb jb out adc aas adc negl or enter inc ret nop cs fcomi pop jb xchg add idivl test repnz aas daa dec xchg inc push int dec (bad) enter fbld mov pop jb cmc mov xor sub fs loop and fs insl dec xchg xor fs xor fbstp sub cmp fs jb mov ss sub (bad) jg mov xor aas outsl sbb cmp test and lahf and and nop in repz fsubs sbb repz or or pop nop or dec adc in push leave or repnz das addl xchg data16 and pop mov mov push sbb leave test in lahf xor or nop or pop loop,pn fsts and movb adc fimull mov repz pop mov out movsl clc or xchg lods pop call mov mov or outsb adc imul fs repnz shrb adc fildll movsb inc ss or dec das xchg jg stos xchg or lahf xchg and xchg pop pop aas xchg or idivl dec enter iret pop das psllq push sub lret rclb mov pop xchg and add es loopne mov frstor iret mov pusha daa pop and pop pop iret adc ss cmpb mov test and into loope cmp add flds dec faddl cmpsb stos into incb fsubs sbb das push paddd aas loopne leave nop or movsl add push leave nop or mov mov pop sbb add and xchg and xchg and mov pop sbb xchg and sbb and xchg and xchg hlt popa xchg popl pop das clc mov pop or push das sbb and pop add pause or pmulhuw fnstcw cs dec xchg or dec dec mov fildll dec lods pop or nop or stos fcoms das ret or mov fsts clc nop or test ret leave nop or scas bsr sbb sbb enter sbb fs (bad) repz dec movsb xchg mov or mov fsts pop inc outsl or cmp nop or aas add and jp cmc test hlt leave nop or imul outsl outsl sub nop or nop push das cmp hlt jge or nop or cmpb or nop lock nop or or nop or bnd push leave nop or bnd xchg addl and or and and jo xor xor fisubr xor cmp jb inc xor and leave nop xor out sub and xchg and sub test iret dec xchg pop and fcmovu popf adc fs xchg (bad) insb enter pop pusha dec xchg fmuls out dec sbb fs mov es inc repnz xchg or xchg and mov setl xor fwait lret pop jb negb inc pop cmpsl pop rorb and leave nop or dec cs nop pop jmp dec xchg push adc jns xchg ss adc xchg div icebp iret fs xchg dec in idivl cmpsb or repnz xchg or xchg and mov scas in add int3 scas sbb mov in lea das jecxz pop or test lock or dec fsts in iret xchg inc push mov xchg and mov fnstsw fs outsl (bad) pop jb xchg testb jg and xor jae dec and hlt mov sbb das sbb mov pop enter and outsl bound movsb nop pop enter add repnz push leave imul (bad) nop or cmp inc ss mov xor int3 hlt cmp insb aas or test or push clc fsts das gs or fs pop or mov bound adc mov nop or movsb das popa xor dec icebp das ss or repz outsl and aas fisttpl dec mov and aas rcrb and aas repnz pop and xchg and push mov sbb push aas sbb pop fsts stos (bad) leave nop or sub fildll xchg mov pushl lock mov inc rclb test jmp adc pop movd inc jb cmpb sti xchg mov inc aad aas jg jg mov movsb cmp shr maxps call sbbb lret inc repz adc (bad) out (bad) push fidiv dec mov inc leave (bad) jb mov pop aad jbe xor add inc ss push movzwl fs adc jns sti loope loop jb push jne jb mov movsb inc das or test dec setbe hlt out test push inc (bad) lcall mov repnz test pop cmp out fild add rolb popa stc push mov xor test out pop xlat add ljmp scas or adc pop xchg dec add scas (bad) lods dec popa push or scas int mov inc ss leave loop add add xadd sub sahf or mov loopne pop outsb xchg subl fistpl adc adc xchg jp adc inc popa arpl lods test aad arpl insb push std test cmp xor pop aad and inc dec inc push cmovge es dec mov push outsl push adc insb mov test lahf push pop and outsb popa and inc fs cmp dec xchg dec add dec mov dec dec push jne fcomps mov pop push xlat pop lods test cs jecxz adc in lds or add or and add into or pop lods test inc divb add push add and adc add xchg test and add jnp aas (bad) add add test mov sahf mov add mov xchg xor sub jbe and adc sub or adc aaa aas xchg or popf adc sub pop clc leave in fsubrs xor enter sub cmc fwait (bad) incl push pop je insb jo inc sub dec arpl (bad) jg addr16 pop imul sub dec push inc dec pushw bound outsb jb inc xor push push dec dec imul cmp xor push inc dec inc pop cli fild daa jno imul ja jns jbe xor cmp pushl xor inc inc aaa cmp dec dec dec dec inc inc dec inc push push push fdivr incl pop bound push pop push push arpl inc mov outsb insl mov rorl lods mov sub aaa ss icebp imul lret mov rcrl mov jno fucom imul icebp popa bound and fidivr dec push cmp push neg jnp xor cmp ss mov lea push dec add xchg cmp lret or nop aam adc icebp xchg inc push test pop mov mov outsl bound (bad) mov mov add jb outsb push or jns or fldt inc or xlat or jb jb or inc icebp int inc js arpl push gs jo jg (bad) sub dec popa outsb fs push dec jo pusha or arpl mov outsl or gs jo insb push arpl mov mov add inc gs jns out sub push gs pusha aas mov gs sbb jg sub dec popa jo imul aaa mov sbb popa ja mov mov push imul imul or mov mov dec push je inc jns push outsl cld fs sub loopne,pn leave in imul pop push dec sub aaa or xchg push popa mulb push jb mov fwait mov lock shrl jne jo adc adc in frstor jle dec scas inc or sub outsb jbe dec add aam popa bound insl dec push or mov cld movsb je (bad) sti push and push jb adc inc sbb jae cmp mov inc mov jecxz fabs (bad) jbe leave (bad) inc fs dec outsl mov je js mov mov lea jl or jo push imul cmp movsb outsl xor testl mov jecxz dec outsb outsw mov pop push test push inc stos or or inc fdivrs push repz xor gs pcmpeqw mov fnstcw or push mov push jns pop dec or xchg inc cwtl jg int inc xchg jg inc fimull jno pop cmp addr16 push pusha jne cwtl add mov inc xsha256 cmpsb adc (bad) fcmovu push push push or adc xchg std xor dec gs or outsl pusha pop inc sub and cmp (bad) pop movsb test jae dec das or push dec pop or inc mov inc mov xchg sub adc jne pop (bad) mov cltd push adcl sbb inc pop mov inc jl xor sbb outsl adc cmpsb insl dec pop push xor push rol out sbb mov mov sbb imul fcmovbe sbb dec popa adc push mov arpl mov push (bad) imul (bad) cmp decl add pushf pop xchg bndldx push mov push mov (bad) pop sub orl sub adc mov cwtl pop push and inc jne or fldenv cmovl ja jae cmpsb xor loopne popl arpl js (bad) fiaddl outsl dec and jmp add pop xor jae push lret mov cmp lahf push inc or add loope or cmp pop inc add add repnz or stos add push inc pop mov int3 or add pop pop and loopne add add insb pusha pop push or mov sub pop popa push mov lods mov std push cmp cs fwait sub fsts add inc cs loope adc push add daa mov adc cmc mov add test add add pusha mov lea push or jmp nop nop nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jae xor sub jb shl mov inc xor je mov add jne mov sub adc adc add jne mov sub adc adc jne inc add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp nop mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp add add add faddl add add clc inc add pop inc add add add add or add add adc add add sbb add inc add xchg inc add sub add inc add stos inc add cmp add inc add aam add in add repnz add add add add add inc add add add sbb add add add xor add add add add add add push add addb add push inc add add add bound add add add add add add add dec inc push dec inc dec xor cs dec dec add push inc push dec xor cs insb add pop push push xor cs insb add push imul outsl insb xor cs insb add inc inc push push xor cs insb add inc push dec cs dec dec add inc dec dec xor cs insb add inc push xor cs insb add xor xor fs insb add add fs imul add inc gs jb arpl fs jae add push imul jb je arpl push imul insb insb outsl arpl add jb jne insb inc jb add add imul jae add push gs jo outsb dec gs add add jns je outsb jo outsl je arpl je add inc gs gs outsl jb push popa jb insl jae add gs outsb imul add add jne push jb arpl jae jae add push dec inc gs outsl insb fs popa je inc add ja jo imul (bad) jg push mov inc xor movzbl mov mov pop ret mov mov mov push lea sub push push push (bad) incl push call lea push push fstp (bad) decl lea push call inc mov add mov mov add inc add shrb pop (bad) sti neg mov int3 rep cmp mov mov outsb push adcb inc les pushl add xchg xchg pop push mov xchg js cmp sbb cltd pop push or inc cmp nop add dec push inc adc ret int andl test mov mov sbb clc add or or push pop mov add pop sti push fcomi xchg dec or rclb add mov mov or gs add cmp jbe insb mov movsb cmp or xor push push jmp mov imul shr push xor fidivl lret or outsl insb mov cmp dec je add sbb pop push and push repz adc or mov push fnstenv arpl bound mov insb jne sar cmp (bad) dec inc movzwl push add add pop xor repz cld mov inc xor or fsubl pop movl insl xchg insl push push es unpcklps inc jb add jl,pt pushf fldt sti sub inc inc and push das adc mov ss pop and push je insl jp push dec dec out divb cmp push cmp and mov (bad) mov adc daa add insb ret test nop or sub daa adc testl orb mov xor add insb add aaa jecxz scas fs insb mov jne push lock mov push out mov inc push ljmp add jl and nop mov or pushl (bad) mulb fs or ror je (bad) mov adc dec inc inc scas roll int3 xchg cmp ret xor scas insb and push inc push pusha popf and pop sbb mov (bad) pop das push or jbe dec cs lds std leave ret mov cmpsb sarb push or pop dec dec pusha add dec sbb xor (bad) adcl call cs ja je mov push push mov mov adc dec cmpsb xor push test fwait hlt fidiv pop fcom in push imul fcompl pop add leave les push outsb das (bad) mov push jnp cli sub sarl sti pop mov xchg add (bad) sbb es in (bad) or cmp sub or mov (bad) push mov movsb pop (bad) fstps test jmp (bad) lods dec sarb xlat mov fs pop mov mov or nop add bound and sti fildl xor cmp sub mov jbe movsbl inc inc shrl (bad) mov loopne lea lods sarl inc cmp jb pushf xor jbe sub pmulhuw out inc cmp in mov mov mov or xor xor xor mov cmp push add add pop rolb ljmp idiv or add imul xlat mov shr inc inc cmp mov push clc mov jb pop adc mov ret pop loopne shr mov or loopne call mov mov cmc loopne add fiaddl dec es lock hlt jae insb lahf outsb mov lock xor inc jmp add in rolb push or push cltd rorb or sub jmp fldenv mov rol jmp push enter out faddl jge jne cmp pop insb lods cmp or push mov mov ret and in es jno adc push fcoml pop xchg das dec cmc pop sti aam push ja imul jae out jo xor mov push lods cmp mov rcr sahf sbb fldln2 fistl inc clc (bad) cmp jne push clc push (bad) mov scas mov fsubs mov or ror or clc xor insl mov jnp pop adc fcoms jne xchg add xchg lods sbbl stos lcall fdivl nop inc mov lock notl and movl (bad) push dec push sub cmp arpl push mov cld xlat icebp icebp mov jns mov mov jg add add lea sbb stc adc pop cmp add mov mov cmp cmp ja add or jne push aaa int jae jne or jne add jne icebp mov xor or or or jne pop jp (bad) rol add adc fidivrl (bad) je sbb neg jbe cmp jmp inc (bad) jne or push lcall rorl or jns or mov jge dec xchg (bad) jne mov fsub mov xor mov movb adc mov fiaddl fadd push pop push mov and test pause out pop lds fcomp mov add or test adc inc adc sub add sub and add jmp negb xor setg mov xor je mov mov gs inc adc add imul push inc pop sar jne fisttpl push push adc cmpl lea enter in xabort sahf (bad) sbb add inc sbb push dec ds pop xchg xchg jmp (bad) fcmovnbe jmp shlb adc movb sbb add shlb in dec insb mov dec enter testl xchg inc rorb mov jecxz nop mov (bad) mov loopne dec push push addl adc insb loopne sti inc insb mulps pusha mov decl cld adc movsw data16 or (bad) cmp mov dec and dec mov inc loop jae bound es mov test fisttpl cwtl jbe test add scas std lcall mov adc fcomip test cltd and sar pop sub arpl cmpb rorb pusha or add popa push push jl pushl adc xor addr16 je ljmp mov or add insl fwait aaa mov (bad) fs xchg in (bad) setl jns repnz pop cld fsts push adc adc ja cmp mov push jb fdivrs xchg pop fs sub das arpl inc ds or jge mov lods or add pop mov pop cld gs icebp pop ret mov lods pop outsb xor pusha negl movl sbb adc test push lea sub (bad) clc fs and movsb add fimull sub pop sbb adc std insl inc sbb cmpb repz in xor lock and mov sbb subl mov dec fmuls fildl inc inc and jns push leave gs imul mov or and out fimull pusha jmp cmpsb or je pop out jnp es clc pusha pop bound les add mov mov pop dec xor es bound insb and in cmp cmp cmc popa or rol dec xlat push push jno sbb aam adc xchg push aad and mov or in mov pop inc addr16 test movsl pop sbb pushf mov inc sbb lea sbb movsl add dec mov sbb mov adc jnp adc mov push mov inc add mov mov push adc pop gs insb andl push or loope pop cltd push ds mov fdivrl jle je dec iret mov sbb mov dec jne or adc jbe mov xor xor or leave dec mov pop test negb add cmpsl roll je sub movsb and lahf mov cs add sub mov adc call sbb test or mov inc (bad) pop xchg push push add (bad) dec mov add outsb dec loope mov je clc mov daa lret lock stos push xchg dec enter les and mov insl cmp loope pop dec sub add adc sub push movsl or adcl stos jo dec (bad) mov and repnz leave pop je or jno leave add xor sbb dec aad fcomps nop in add test mov adc les push orl xchg daa xchg and or xchg mov andl push inc or push loop mov in mov sub stos bnd adc xchg hlt inc sbb mov call adc adc mov fsub or mov andb test pop mov hlt loopne insb in push cmp mov shr fimull adc ret fsubl lahf fiadd inc test dec lock stc sar push cld mov add inc dec sti mov sbb adc sub pop int repz mov int3 adc xchg movsl (bad) data16 int3 xlat add mul call insb jno addr16 pop jg pushf cmpsb and sbb sub inc daa aas xchg inc and rorl pop repnz or dec incl ficompl in cmp loope shlb mov and cmp sub jg inc and mov push and and lret in push insb add daa popa mov outsb pop push sub sub sub mov xchg fldt xor in in xor xor xchg pop aaa pop cmp cmp sub cmp cmp inc insb int insb jl inc and inc (bad) insb int inc fs dec sub cwtl int insb int dec and xchg push push lcall push imul mov pop pop push pop pop int jmp pop pop pop dec pop push pusha pop jl mov scas bound or lret lcall data16 add push adc sbb add outsb inc mov or add dec jmp push andb or insb (bad) (bad) mov scas mov mov clc cmp je push pop mov sbb xor out insb pop jo mov adc orl jne cmpsb sbb out xlat mov push mov pop add (bad) int3 pop push sbb jo lds inc inc pushl xor mov aaa je add mov push mov dec loopne sub call into sar and loopne ret outsb enter mov jnp add iret inc data16 add push sti (bad) fadds stc fdivrl test test (bad) mov push in sbb adc sbb ja pop lock sbb push inc imul push pop sub pop ret call lea push das cs (bad) dec pop sub adc mov push mov mov (bad) mov loope (bad) xor addr16 cmp push pop imul sbb sti push xchg jo,pn xor sarl flds inc mov sbb rcll jno (bad) roll cs loopne jl bound push xchg add subl jge adc and push adc in jb and pusha hlt add dec or rcl loopne dec push push mov rorb scas lea push mov pop xchg push test ja mov jo lock (bad) mov inc push in and inc sub adc or xor mov adc hlt jmp (bad) repz adc int3 shl cs pusha fldz fmuls and push hlt push (bad) lock pop mov iret test call cltd inc or int3 add mov arpl push test sub sub mov fnsave add mov and inc movsl cs xchg outsb in xor inc cwtl pop aas lea sti (bad) sti push fldt sub cld fbld out mov out dec adc fwait lea divl add jb sbb lahf adc std leave sbb insb adc in or roll inc xchg push in xor (bad) aaa lret adc call int rorb xchg mov cmp xor imul sbb lock int fs icebp pop cmp pop inc mov lret stos push mov dec push ret or and jbe and mov mov mov mov dec ret mov loopne pop cmpb jne orb inc jne leave insb xchg das add or and mov push lock jg xchg in pop hlt add call jmp xchg je in mov shl inc push xchg sub loope cmp fnstcw inc iret pushf dec or ret cli aaa pop push or add cmp jl sub xchg pop jmp (bad) xchg sti cmp fsub or xchg pop (bad) xor daa fidivrl cmp push popf lcall sub fdivl pop jge mov xor adc loopne xchg mov pop decl jmp cmp or shlb decb push sti dec add rcrb aad lock add mov clc mov fldt adc push insb and testl jmp sub arpl lods shrl cmp mov push push mov pop fnop ret jmp mov mov push data16 (bad) push dec xor aaa adc sbb and lcall pop cmp pushf test or test adc or aas dec pop das sub mov pop insb xchg or jl jle xor aam out adc add orb and aaa fcoml xchg add mov add clc inc jmp addl mov clc mov push mov data16 cmp stos (bad) je add add mov lea push hlt push sti mov add cltd add cmp and or jae push pop je push add jo jb es lds xchg inc pop mov scas outsl jb fs nop and loopne dec inc mov pop pop cmp mov and or add cli mov jb lret repnz enter adc and rcl jbe sbb enter gs dec add js rclb loop and (bad) mov or (bad) mov push xor mov xchg cltd js sub push cli pop sub (bad) mov add pushf jae xor mov pop push xchg jne inc js outsl aam pop (bad) mov aam (bad) fcom xchg xor cmp push jnp add pusha sbb or and cwtl sbb jmp in jo in push in fmuls push dec addr16 pop dec mov push pop xchg pop cmp push outsl cld inc jo or xor cmp add push pop f2xm1 add or daa roll mov push mov mov fs or dec lods movsb mov stos scas dec (bad) aam aad cmp xchg lcall sbb jne lea movb shlb loopne mov jnp push mov aam xchg int lret enter push push or js push push (bad) push pop cmp dec or enter fs xchg clc xorl das add dec pusha dec and mov push dec enter cld pop pop pop clc add dec fs pop xchg fneni(8087 sub test movsb (bad) push int xchg idivb decb push popf xor add add xor and cmp pop mov dec ret rolb jg xor add xchg negb js addb push leave fldt loop in add and inc add (bad) into rcl xchg push add push mov cmp addl mov pop mov xchg popf push inc jo pushf loop dec out lcall (bad) ja scas loopne insl dec sbb mov jge xchg test pop inc sub mov nop insb push inc cmp cltd ljmp adc and daa ss test adc aam repnz and inc add jg and call stos mov mov dec mull cld mov mov cmpsb movsl movsl movsw push test pusha push inc jl sbb out insb pop (bad) dec hlt pop shr js mov iret lea mov push mov (bad) punpckhbw adc mov fcompl ss idivb neg mov or sub mov ss fistpll cwtl adc sbb xor fcom (bad) sbb and adc sbb test cmp mov mov or pop lret or js push or lret add sub cli mov (bad) mov push dec mov xor lahf outsb cs mov sahf sbb mov jnp pop jge aaa sbb xchg add data16 jl or iret divb arpl mov sub push xor dec mov pop mov in dec fadds xchg sahf mov sub jne xchg mov adc sbb imul out jge enter inc ficoml lret (bad) mov xor sahf sbb mov sarb lea push lods inc and xchg std sub (bad) pop rorb add mov cmp xchg inc mov push popa mov push sbb inc add pop arpl sbb lahf sub add jge push push mov mov cmp dec sbb (bad) sub inc and por mov inc ret add cmp xor in in sub mov jmp cwtl std mov repnz aas rcrl mov movl outsb mov (bad) (bad) (bad) mov lret push add push mov les mov xchg jp add xchg fdivr mov out inc divl add or and pushl stos and dec ja stos inc es lock inc jae into nop out lea mov sub test inc jge,pn dec pop idivb cmp mov fxch adc xor adc pop and push push sub sbbb mov jp xchg rorb add or adc add aaa dec push or add cmp es sub cmc hlt imul daa sub ficompl enter ret ret inc add pusha inc or pushl inc or or fstl sbb nop test bound add push xor or pop imul and movsl or xor lock arpl (bad) sbbl negb adc mov ret pop jne fiaddl rcll push shl clc jbe addl lahf jecxz mov popa rorl mov xlat test cmp jne data16 push mov add mov dec or xchg push push mov and pusha mov xchg push cmp incl jo add or ljmp rcrb or inc loop sub cmc xchg inc pushl dec bound adc cmp std xchg mov movsl add je or dec test jg mov jl push add sarb movb add movsb push push pop or clc movsl and clc cld (bad) es jb adc enter mov add add push mov cmp jne jmp iret sbb pop mov cmp and push or (bad) fisubrl das lcall out negl in lods push xor dec or leave or adc enter lds outsb cmc mov cmc add mov cmc lcall pop (bad) xchg outsb or (bad) push notb sti adc popa movl imulb add (bad) pusha pop xchg push pop xor gs lods mov mov jmp push push xor (bad) or test lea subb cmpb and adc add fldt lea push loope xor and jbe pushl jmp push inc push inc inc push or (bad) push push lods js fcoml cmp leave or and ds mov inc pop jb std clc std mov ret lock movsl movsb push movsb loope addr16 push or repnz adc cld hlt cld in push enter clc jmp in mov mov pop in cli in cli inc js adc (bad) xor loop add inc xor call sub sub ljmp and outsl jne ljmp pop lods jbe rorb or or dec inc cmp clc adc enter sub lods push daa push rorb sbb push cmpsl mull mov xchg in cli sub call in clc pop mov and push and or sbb (bad) mov jns ficom jno out shrl push push nop mov and inc xchg add mov push pop in adc out push dec mov nop data16 and add xor movb clc cmp scas mov push pusha enter stos sub or sub pusha sbb jo sbb xor iret and in or add mov into or insb xor mov xchg pop (bad) ds jle lcall cwtl das add lods je enter and inc clc push je or push jno mov mov in inc add pop das leave aad das mov adcl and ja mov mov sbb cs add lea or xor adc push push dec clc jne outsl int3 popa outsb mov pop iret dec mov add fisttpl push push out push or flds sar mov subl inc pusha addr16 adcl es xorb jl out scas add es mov js pop fmuls add insb test push clc ret test push loope cmp add ret inc add jno add xor sbb lock jb xchg (bad) lret cmp inc push sbb (bad) mov call xorl add or xor push pop mov sbb inc xor add sub movsb dec and lea (bad) pop rorl mov push cwtl push mov push out or xor in dec iret cmp mov imul mov xor jns outsl aad sub arpl cld enter fs push pop enter int3 (bad) inc mov insl into pop sub cmpsb nop gs int3 sbb (bad) outsl insb in inc hlt cmpl jl inc or aam out pop mov push add add mov lock cs gs stos push or in cmp hlt loopne sub jne adc sbb and je daa fwait or call loopne mov movsl inc call cmp pop cmpsb loopne in (bad) (bad) lock mov and jmp movsbl testb ja inc mov or mov sub sahf addb jmp pushl shr or or sub (bad) sub mov pop and fiaddl and je jae adc jnp sbb repz mov lds leave add push mov add mov inc icebp inc adc pop fcomps sbb pop lods (bad) xor dec and inc add mov fstps imulb aad jmp mov lock cwtl pop mov in and ret jge nop je mov cmp mov imul adc sbb and jmp adc es sbb fdivp pop sbb push inc pop repnz and sar sar sbbb test push (bad) or cmp mov xor ss ds rorb int add (bad) mov mov and mov call (bad) ffreep sti jb dec enter loopne inc dec push sub loopne sbb sbb push push jne sub das xlat xor adc push xchg push dec (bad) adc add cmp cld cmp hlt das icebp outsl or push pop jmp mov add ds or adc jp inc add dec lea jns push add imul stos sub jo ficompl push lcall push or out adc add (bad) fstpl cmp cmp inc incl jb add sti test je and jecxz and add int3 and (bad) inc mov jge or jne jmp pop inc hlt fucomip test jge sbb push in inc xchg call aaa insb and mov push addr16 xchg hlt or test adc dec add mov dec sbb push lock loope movsl pop fdivr roll push cld (bad) jne lea mov and outsb (bad) outsb jl inc je,pn dec inc push xor fstpt imul add pusha mov mov pop jne movsb ds (bad) neg shlb jg inc mov or jne pop (bad) sti adc lods push pop pop pop add sarb push push jnp cmp sub (bad) ds data16 clc inc mov pop and mov fs sbb add push xchg xchg push mov mov adc sbb mov cmp (bad) xorl shrb test mov or push sarb push dec cmp add cli mov cld ret jae enter push push pop std fbstp inc cmp dec test jg mov push lss call sub out fstl inc sbb pcmpeqw add cmp mov inc dec cmp jg sbb and dec mov pop inc xchg jmp out xchg and dec add (bad) dec push sub inc rorl inc jne add addb pop or sub fnop inc xchg jae stos mov orl dec push jl ljmp jnp mov xor inc lcall xor addr16 ljmp pop mov clc inc jb and mov mov xor cmp jg fcomps stc and shl add mov xor add cwtl sbb cmp outsl in (bad) incl iret js shr shl add mov fstpl mov stos add sub clc ljmp mov sub dec hlt push pop mov or jmp ss out fiaddl sub incl incl outsb inc cwtl push jp pop aad pop pop add push movl pop repnz std movsl in lret mov lock dec or inc and sbb cwtl adc and in pop js rolb mov and rolb jbe in sbb and pushl cmp inc add mov mov cmp cmpsl mov add rolb scas enter data16 shlb jecxz adc inc or mov mov jb sbb mov mov je pop leave test sbb sbb push jns lods lock dec sbb (bad) sub xor inc pop mov add mov mov or js lret rol dec fsubl adc mov and mov lret push adc and (bad) and pop idiv push sbb hlt (bad) push movzbl insb fnsave mov jmp push add jl in push aad daa test testl pop jae sub push lea fiaddl popa cmpl inc jmp outsb mov and sbb sbb insl idivb pop add cmpl push sub cmp cmpb pop jg push sub sub dec loope setbe cmp sub jge push or sub cmp or outsl aad xor add and or loopne cmp push mov andl or in nop aad fcomps stc fsubr into push push into adc shll cld and std out shlb xchg es pop dec scas cmpb adc cli add jmp dec add sbb pop sbb loopne mov hlt xchg dec je clc jl fistpll mov inc cmp mov fwait pop sub stc out push stc shrb jge cld (bad) cli cs xor loop xor ret fistpl (bad) scas fdivrs insb mov push jge stc int inc mov mov test sti nop add adc or add repnz fnstsw pop inc cmp (bad) data16 xchg mov iret fimull mov and (bad) jl pop out sbb repnz cmove push mov dec mov or and mov inc jg call mov jge lock pushf adc sub call or sbb adc jbe loop pusha mov iret rolb inc pop mov xor push push outsl inc adc test repnz cld call pop inc bound jge push in int3 pop stos pop xchg push inc add add (bad) lds mov jne xor movsb insb outsl test add mov adc add pushf cmp cmpl dec pop mov je push and int rcr (bad) sahf jmp inc add daa adc aaa stos inc or mov fidivrl inc jae sbb inc or push iret mov mov sahf xchg dec mov mov pop insb decl add jno lock sbb lahf sbb enter fmuls test rcrb sub clc fidivrl push stos jge adc mov add xor inc mov xchg mov lret inc jnp fisubl shr inc or test sbb sub mov negl (bad) and cmp mov js lea out subl xchg push inc out cmpsb movsl out add xor sbb not mov xor xor xor mov sbb xor pop jmp mov mov bound jmp push enter mov mov jmp jle xchg mov jns add cmp jmp mov xlat ss and xor sbb dec std lcall cli ljmp fdivs test je and (bad) cltd mov mov push and push cmp outsb mov dec mov add push push iret rcrl or sub int3 or enter pop sbb pop xchg push and cmpsb orb (bad) movsb popa ret adcb jae test and add inc jg enter and push push movb push clc sub mov pop push or test or test int3 adc jmp push add sbb add rorl fs loop jns pop lea jnp add xchg dec push jns sbb and adc orl push pop jae xor mov adc adc and xchg mov pop add sbb or push cmp icebp push sub mov push pop add mov pushl push ficomp fisubl xchg aad aad jg xor or in fsts mov dec dec pop outsl nop movsl inc inc or and clc sti inc or sbb scas dec mov add pop or mov pusha cltd mov rclb and add test pop xor xchg mov loope rcrl add lret or adc add clc push push and jmp movsb mov lods add or jge xor mov jbe mov aad pop jmp cmp fidivr pop mov insb adc insl push leave fs pop movsb jmp dec sbb mov dec inc ds jno add dec roll push in adc and les movsl cmp push cmp ret mov push rclb imull nop mov add loop or movl je push insb pop or mov push add int3 inc adc push pop leave imul test jmp fmull bound or mov (bad) hlt fildl scas sarl gs aam push and loop cld lds mov shrl xlat or aad call in or or add (bad) stc mov pop cld mov or stc aas pop add jne ljmp in mov sarb mov add leave mov adc inc cmp jle and fdivrl cmp push and inc fbld mov scas (bad) int3 adc dec bound aas add in add mov jge add pop fldt or and jle push mov cmp fisttpl mov std inc add js bnd mov and and pop test notb push jne incl seto neg or push stc push test aam js jp push mov or push mov push add xchg inc cld xor das pushf aad cmc cmp or call xchg loop add sub pop adc mov xor xor jbe mov ret and cmp orb push mov enter in inc cmp sbb pop or std pop add add clc sub add push add pop sub in add lea dec in lea cmp push das add lcall adc fldl jle mov loope or lods push mov mov adc adc (bad) cmpsb and mov mov mov pop add push pop mov addl loope sub es in fcmovnbe push sbb sti add inc cmovae jne cmp jne mov pop notl mov push mov cmp and je push pushf xor stos lahf mov sbb ret fisttpl mov or pop or pop xchg jmp inc push stos inc or inc add pop xor dec mov pushl test push inc imul gs mov cmp jae push (bad) ficomp aaa mov push cmp inc inc inc sbb icebp pop push fcmovnbe or cltd (bad) pop fiaddl fadd (bad) jne shl dec imul out (bad) fcmovnb pop (bad) jo jl mov imul push xor mov and faddl or dec sub pop addl mov inc lock icebp insl js out dec mov dec inc or inc test js inc stos clc scas pop ja lcall daa ljmp xchg sub clc sbb dec into lea push stos dec (bad) jbe test test jb ss inc sbb mov push clc push jae mov (bad) mov xchg mov (bad) mov dec push popa sub ret rolb add fdivs add xor add test add cmp dec dec in cltd mov jae std sub loopne add mulb sbb add jne in inc in jb mov mov pop adcl call call mov mov decl or dec loopne in mov or jg inc or repnz jbe or sahf lcall es or mov sbb cmp add inc push shrb in or push jl inc lea push (bad) mov mov (bad) bound jnp add sub xchg inc add xchg leave clc pop jmp cli lret add (bad) cmp jne jle xlat pop xlat inc push and cmp add mov or mov stos jbe fwait stos mov adc (bad) ljmp xor mov inc dec loopne ret das push xor sbb jp je add fidivrl jae hlt xchg fdivrp orl mov jb lods jmp out fsubl leave jbe cmp jae mov daa xor mov push or test mov inc add arpl add inc adc into xor loop add mov pop mov dec push dec fimull and hlt pop pop jno dec in dec pop clc xor mov divb xchg pushf lcall jo dec pop insl insb pop pop and sub push (bad) dec in pop jp push invd add cmpsb or adc jne std in sbb sbb cmp popf sub sbb pop lea fs xchg mov imul mov inc sahf in in hlt in in add imul xor pop dec out adc in xor push push dec rorl repz sbb pop or jo jae pop pop lods mov mov jae inc jno mov pop lahf jne or dec jg push add ja inc jmp lea enter lea or pushw sub jbe cltd sub ret ja fdivrs mov cmp and imul cmp out popf mov arpl cmp jae jmp add (bad) mov push mov or xchg mov mov push xor out push insb pop outsb lret lods jl push add add or (bad) jmp repnz add inc add lock cmpb test jmp stos mov mov pop or push cltd mull inc jne dec mov mov js aad or mov mov mov push mov mov sti add leave mov add (bad) popa or lret bound xchg jge aaa push enter rorb movb neg (bad) sub lock adc roll lret (bad) repnz lret xor ds fistpl sahf lods mov fwait adc xor dec nop push lods mov fcoml lock push inc dec inc jle cmpb test mov and add xor in jbe push cmp dec and ret hlt cwtl data16 bound bound pop push mov or dec xor xchg lods (bad) mov fisttpll fiadd je mov aam clc daa jmp fs jo lea ret push cltd pop push lea call ror adc jp idiv mov add in or nop mov test fidivr push dec adc out mov sbb inc and inc pop incb jnp in insl ss pop jecxz sbb jmp sbb dec sub lds mov xchg pop or sbb inc les bound addb push roll dec sub jg mov add mov popl pop mov and std sbb push adc in lea jne data16 sbb adc jbe out orl adc imul lds sub std (bad) loop xchg add cld cmp push lret test jne (bad) xor cmp and and sbb repz lock push mov pusha fwait pushf sub sti sub pop (bad) xor sub fwait insb lock addl pop push cwtl sub or mov adc int3 adc pop pusha aam fwait mov or xor int3 or add and push sbb ret sub push (bad) push (bad) or adc cmp jl push sub aas sti test push inc jae dec jns push ret ja popa dec cmp or xlat add cmovp (bad) repnz add push fdivrl or movsb add push (bad) xor or push push mov or add push xor loopne test lock pop and jo pop add pop sarb aaa pop mov rolb js add pop pop cs aad dec mov aaa or mov push sub xchg movsb add add rcrb add or decl jnp fidivrl mov jbe add aam push mov insb fadds ror mov (bad) stc pop es scas mov loopne hlt mov (bad) mov fsubs lcall inc xorb inc (bad) xor push cwtl inc mov pop sub adc xlat jne in xchg test pusha jne dec lock or or push fidiv push sbb adc push xor gs dec inc jo dec outsl jb adc dec inc pop rorb cmp sub jg or xchg add jmp jo add shlb fadds push add fs xchg lret testl jge pop push push (bad) mov loopne adc arpl jge pop aaa imul add xchg mov roll in mov lea jno add push outsb mov scas sbb rolb rclb je xor xor aad adc loop cld loope mov cwtl push push sub cmp adc mov push (bad) in in nop insl push adc xor js jns aas neg sbb inc out js stos inc mov in (bad) lret fistpl std mov add sbb jo add push push sbb or inc push cmp jp ds pushl aaa mov mov shl or insl adc xchg sub dec adc (bad) sub adc ret cli lods jnp jo jo add pop and out sbb push xlat into add sub mov pop rcll pop (bad) push imul ds cli add fucomip mov ret adc pop dec adc add jmp inc addr16 push std pop pop shl or xor or mov icebp and xor add add inc andl cmp sub loope (bad) enter add shll ficompl dec cmp mov pop push add loopne subl setnp mov xchg pop or inc mov or into inc or int cmp push or add test push cs sbb inc call push loopne dec inc push push xor adc int3 sarb xor hlt mov fcoms and clc push iret inc int3 xchg mov jbe out inc mov gs xor mov push int3 pop dec push das xchg add inc pusha popf sbb test (bad) imul sub dec bnd (bad) mov lret push push sbb push adc push mov (bad) pushl jb andb lds movsb mov add test fiaddl out adc imul nopl test imul cltd pop jne fdivp call pop xchg adc cmp push inc and test (bad) sbb inc jbe int or bound lods dec jge imul enter repnz jp and sar inc pusha data16 mov add mov xchg les rcrl xchg ret xor in sbb sub pandn and add xor jns aas sbb push inc push fbld mov sbb (bad) stc fmuls sbb jge je push sti imul or insl adc or or mov fdivrs adc sbb add mulb pop or cmp aam push xchg clc jo loop add sbb fcomps inc iret push push jnp mov sar inc adc sbb jnp enter pop add mov adc fcomp push pop adc pop or mov ret pop mov outsl call and nop (bad) jne sub call mov mov ja mov xchg (bad) sbb je dec push pop les aam rolb es ds mov imul or sub pushf or fnstcw jle mov (bad) push xor cmp inc jno inc dec roll jl cwtl jnp jbe add inc cmpsb out jl xorb test and shl mov push inc in jecxz push push (bad) hlt sub sahf mov and fnop stos int add push jnp jmp ss push dec fdivr inc cmp movsl dec push pop push sub push ja inc adc test push adc or dec push dec cld vmread xor clc (bad) push xchg insl aam jo rcrb addr16 inc mov cmp add push push mov inc mov pusha ret and or call mov adc xchg sbb in movsb mov sti cmp and pop push and adc mov pop jmp adc or ja orl pop mov sbb roll fimull jne mov mov rcrb icebp (bad) mov inc push push nop jmp cmp jl push dec imul xlat ds popf push mov mov fistpl or push mov imul outsb mov sub cltd js rcrl mov jle pop or adc test add mov insl xor jle cwtl js pop sub jne dec je daa fcoms in add loope jmp pop add pusha outsb test or adc jmp push or dec cs int3 pop sub sahf pusha enter lds mov rol inc sub ja ret dec xchg add cwtl inc fcomi lea sbb or lods mov jp push loope xor sub fsts adc pop sarb push fmuls mov lea dec insl clc push push push cmp mov cmc pusha mov mov clc sar outsb fist cltd stos jg mov cld xchg std fmuls xchg jne mov mov dec (bad) call mov pop ja repnz xor outsb incl in sbb push add (bad) sti inc popf add push dec mov push ret xor cmpsl lds adc inc cmpsb mov test dec cmp orl outsb sub pop sbb inc dec les pop add lods fildl push push or imul adc sbb aas test pop into mov pop jne mov jg cmp std and cmp icebp pop mov (bad) push insb jl insb dec or cmp scas xor and call mov int inc pop and or cmp mov flds sub xor or mov add jb inc repz mov test into inc andl xor int mov cs jl sarb adc sub xor mov mov dec jnp push mov push mov in icebp or (bad) push icebp inc int3 int3 push lea adc inc jae pop xchg xchg jmp pop push test jecxz cmp cmp mov mov push cmp jne inc fldcw add inc ja jmp sub mov pop pop fldcw pop pop pop pop aam shl push mov push push pop inc sarl or inc mov arpl outsb and cld jb jb loope test add mov push lods cmp and dec push jecxz stos mov ljmp inc add xchg add mov lods cmp jne sbbb div and pop jne push (bad) or (bad) (bad) dec pop add dec add mov andl rcl (bad) jg int cmp jbe jecxz stos inc jmp jecxz stos movsl cli out inc xor insl pop jecxz mov stos shrl imul scas cltd test fucomip out dec sbb lods mov cmp cmc dec mov pop mov mov mov and sbb lea xor or (bad) test jge je xor push xchg add fdecstp (bad) or inc pop sub roll jbe test inc fwait stos adc cltd sbb mov cmp add fist jae cmpl pushl (bad) dec or xchg insb mov push dec add popa sbbb xchg fisttp mov fisub push fs adcl pop mov gs cmpb mov sbb push adc or mov pcmpeqw (bad) sub (bad) idivl mov cli jp add xor push jmp or mov ljmp push movsb push stos je mov sub or je and pop mov add cmp pop fdivs jae adc inc adc push jo repz push adc xchg ljmp leave outsl inc bound mov or xor cmp jae jge lods sub fnstenv es cmp mov or or jbe xor adc sysexit sub pop push fldenv pop cmp stos xorb bnd in mov sbb push sub fs sbb xor adc or push fs addr16 mov in mov adc mov incb jbe lea dec push xlat push daa subl icebp cmpl push push push minps outsb and jle scas bound gs cmpsb mul shr and subl jo out mov addl push andl hlt loop loop pushf fisttpl xchg insl or or mov add std bound or or scas pop xor xchg sub call sub js mov loope pop aas subl scas cmp loopne or dec jmp cld or jmp pop mov xchg loopne aam fcomp outsl lret mov adc and loope in mov and je mov inc xor pop sbb scas popa in sbb cmp push or aam scas mov cmp push or mov aaa mov (bad) out adc stos mov jmp jbe fcmovnu cmp popf push loope jne sbb mov cli or push in inc int insb jecxz rolb in jb fs outsb in ljmp cmc jge data16 testb inc inc xor out ss or (bad) jmp leave add dec imul push push adc jae jl push inc adc push mov dec mov push test je pop adc mov addr16 fisttp gs je push sub inc je inc jle inc jle (bad) fildll xchg test jmp push pop jmp sub je dec (bad) adc dec jne push lds jge jne pushf mov inc pop jb inc mov inc and out add sub loop aad bound jmp inc movsl ljmp push sub fcmovnu jg ja pop jmp jbe je add add (bad) sbb add mov dec div mov xchg invd jne push push push xor pop jne adcl mov jne out sub add sbb movsl pop test mov inc roll cld sub popf and inc test jge or sbb cmpsb mov (bad) mov divb in mov dec mov icebp aas mov cli inc cwtl jmp fsts fcoms mov (bad) xor cmpsb cwtl push cmp fimull pop mov xor in jle aam push aad sbb push mov jno push sub and (bad) sbb push mov push xor stc push insl adc push mov shrb enter jns or loopne addl cmpsb push cmp jno mov (bad) cmp push lcall xor fimul add or int shll in test xor mov cmp jnp push add arpl push test fldt and jne push add xchg cld (bad) adc push dec fmuls sarb adc sub inc add jno inc rcl inc outsb ret fistp add in fmull mov fwait aam bound sti lods cltd lea lret test in call fildl cs in add out leave fxch inc in add fdivl xlat fimul (bad) addr16 fldenv ss inc jne xchg jb sub fs (bad) push add sub into insb and fsubs adc or lea insl movsl (bad) pusha insl out pushf jno clc outsb xlat push in fcmovnu leave jne sti fld fimul adc jmp fcoms push pop add lock fldcw push outsb test lcall nop fldl add inc push add jo jp cmp mov stc adc add adc pcmpgtb push decl scas (bad) jle inc imul and je sbb rcr enter add and inc jb aaa lods test (bad) jmp shr ja jle fstpt jae scas pop or fsts mov pop ret in mov neg rcll stos sbb out xchg pop clc lods push or mov xchg and mov or in ss aam cwtl push lcall (bad) sahf mov xor cmpsb rol push mov cwtl in fcoms jmp fiadd mov adc movsl rcr xchg cmpb test inc or add xchg clc pop jne inc lgdtl mov sbb adc sbb or xchg ror fbstp inc (bad) repnz lret incl pop inc jmp push into (bad) (bad) je jecxz mov jns je sub sbb mov push sbb mov dec sbb mov xchg pop mov imul js,pt adc pop push dec divl sbb or ss add loopne jne xor (bad) mov sbb insl cmp fstps cld je cmp je adc sub adc jo xchg insb int dec xor insl and pop mov fwait mov mov pop mov sbb std fsub test adc adc or mov pop test insl ds mov notb sub test repz icebp (bad) ficompl adc or jmp cmp mov jae adc ret mov jb roll pop push mov add inc movsl dec ss add sbb xchg mov int mov inc mov (bad) aaa test push clc movb arpl popa outsb lahf cmp pop inc ret test and push mov xor dec ja push add cmp sub adc pop push push (bad) sbb pop aaa (bad) and inc mov jecxz (bad) pop pop jnp add repnz movsb and adc jb push mov mov or lds and xlat cmc andb push pusha call pcmpeqw inc stc jne jmp or xlat fcomps jb jne ret push rorl push pop or push pop mov fwait jmp sbb in mov push push lea cmp mov push ret pop fmuls inc push mov push inc xor test in inc sub cmp insb xlat add ss xchg and adc jmp test adc rcr jmp es incb outsb int3 add cltd xor sub ret or loopne mov or loope cli (bad) insb pop icebp repz adc insl and push add or fstp das adc lea or imul sbb add or pusha push jne push add jne jae outsl insl int3 outsl or or repz add adc lcall sbb cs push int ror adc in insb (bad) addr16 jmp or or or aam (bad) dec and inc push xor pop les fisubr adc sbb jmp pushf arpl fdivrp or sbb cmp and xchg sub sbb add or xor push movsl ljmp push mov add mov in cmp push ja int js repz shr and add repnz sbb jle fbstp mov sarb and cmp pop mov (bad) jbe stc (bad) pop (bad) jmp fmuls scas sbb xor cmp out (bad) scas adc jmp push subb lods in int3 sub cld add ret mov or pushf loopne mov sub and fldl2e mov inc fsubr sub ret rcr fstp adc icebp or hlt pop aam adcb pop popl mov fadds or push sub sub jo push and aad sbb push add cmp movl fsubr orb fmull and xor sbb leave je cmp jno cmp xchg dec out mov adc in cld bound into jne fsubrl push adc xchg jnp jbe mov pop sbb and outsl loope mov or roll data16 (bad) sbb inc mov and out cmp pusha fcomps add int roll or out mov cmp mov dec in push add mov jo cmp in rolb pop jne rorb (bad) mov loop cwtl cli loopne mov or mov add movb pop scas lock xchg add jae es inc xchg adc in pop add mov inc mov push out mov add mov push jecxz lock pop or int3 mov out ret add cmpb idivb cs pop adc or jne push push push push sysenter xchg cmp sti pushf jnp sub (bad) je call (bad) mov or add adc adc add addl push pop add stc orl push adc rorb out push std fist cmp je cmp jne mov fisubl movmskps mov jl sbb insl jmp ret jnp sub add and push sti push push push push adc sub dec or or lods lock cmpb call (bad) xor xchg adc ds dec in bound push cmpsb jp dec cmc sahf inc jns cmp and (bad) jne mov fist movsb pop pop inc push inc xchg and orb add aaa adc inc clc jne in adc sub mov xor mov xchg jbe lret sub fcoml stos test movl push mov xchg aam in adc push add and add clc add jb pop mov lods pop cmp sub repnz das pop idiv adc or jg das fisttp jb cmp mov pop movb push test fbstp mov mov lahf jmp repnz jp xchg fcmovnb push repnz or fldln2 sbb icebp and in flds xor xchg pop call (bad) xchg fldenv inc xchg add or scas fwait push mov adc ds or inc in push mov jb movsb add push leave cmp xchg jb inc mov test data16 aad push sub adc mov std inc push ret movsbl jg fiaddl lock xlat sbb insl and bound or adc dec cmp ja adc ljmp mov sbb (bad) je lea sub mov dec adc dec mov push mov (bad) incb fmuls shr ret mov adc rep mov and stos lret cmpsb fimull sub pop or push adc jae pop dec adc mov mov fsts cld call pop add pop push dec pop mov and push mov or iret cmp push cmpsl pop sbb or lea (bad) mov sar je sub push jbe push lea shr inc mov adc pop cli pop ficomp sub jbe pop jmp mov mov mov fisubrl push ja les adc push sub or scas stos pop lea cmp push mov dec inc in xlat sbb add bound negl or lock mov ret sbb push push push cmp adc add lods sub sbb jge push bndstx sbb xor popa add fucomi lds adc and adc sub ja lea adc sub jle lahf mov dec sti pop repnz xor pop mov (bad) push adc shrl adc ja mov sbb repnz mov test jb outsb movsb push bound add push scas mov sbb add imul add call adc mov push clc adc gs cld les loope or dec cmp sub inc inc adc mov mov cwtl in and aas out aam jmp push inc push insb sbbl mov add in xchg insb ret xchg es xor stos dec fcomps shlb pop mov or aad or roll sbbl (bad) jbe push and and outsl pop mov jb hlt add pushf or lcall cltd fstl jecxz add (bad) push sbb dec pushl enter das dec sbb inc mov dec loop mov mov mov aad xor out mov or cmc mov cmc sbb hlt mov ds sbb and ret pop scas sub adc jno sbb (bad) or push call mov xlat or or pop sbb hlt int push mov add add sub movsl (bad) fcomp enter add xor in mov popa dec (bad) lock add jnp or pop inc icebp inc pop movsl subb je jns adc add test lock sbb jg rorl push inc mov push inc add add cmp mov mov jo rclb inc and sub push test cmpsb xor adc or adc xchg sbb cwtl adc nop (bad) push add mov cmp sbb add mov jae pop sbb dec pop push mov mov inc inc dec lock mov or push add mov add and dec pop divl lret cmp add adc and xor int aam push arpl inc ss mov cmp cmp push (bad) xor sub jns inc cs or pop into or fcoml jl outsb mov outsl aaa pop pop xor nop je mov cmp addl cmpsb test loopne repz inc xchg cmp dec fsubrl outsl xchg or and pop xchg fdivs jbe add fwait xor add and (bad) lret push sub lock push sete inc mov mov ficom adc pop push fwait adc mov mov sub ss mov in sub ja jae test fistpl fnsave fiadd ja pop stc inc jne mov popa scas sbb xchg mov add mov cs insb add jae jg std push mov loope fmulp sar and jecxz je loope and sbb add insb pop xor mov pop jp or mov inc cmpb pop add mov sbb add adc mov adc xchg pop pop mov bound ret negl mov or fist je push adc (bad) jbe (bad) leave test pop inc es cmp add sti add inc push mov pop ret push fadds rcll incl pop and test sbb or dec (bad) or dec jecxz push xor pop jmp mov aaa mov add cli js or pop mov (bad) push sbb cmp cmp (bad) cmp jne inc shll adc sub cmp jae mov mov mov mov add fdivp ret mov xor flds decl aam shlb rcr sbb test sti loope mov mov jo incl data16 or inc mov movzwl add and mov jns inc push pop sahf jmp lahf dec pushf rorb xor mov push or stos push mov sbb mov push pop cld call or add sub mov and movsb stos xchg (bad) sbb invd and cmpb pop clc cwtl pop test adc jbe and xor insl mov adc add dec bound and and add inc dec dec imull mov inc inc inc and and jg das add cmp nop inc (bad) stc and mov mov into push or lret pop adc mov mov mov inc rcr jge jp nop stos ds push inc dec adc int3 out setns adc repnz jmp push sti out adc movzwl xchg cmpsb enter jns mov iret fistl popa dec mov in inc or or push pop add outsb (bad) mov jmp pop ja push sbb pop ljmp repz iret lret inc inc popa in fxch push inc sub fstpl mov icebp cbtw adc fdivs lods xchg fcomps adc jg sbb cmc sbb neg sbb xchg xor leave not jg xor jge xor je jns sub sbb dec inc shll insb inc xor sbb clc fwait je or pop mov or or cmp in cmp inc or or jne lods stos ljmp cmp or fild jle cwtl rclb cmp cmp push inc rcll fcmovnu das jne pop (bad) rcl fldl insl imul adc outsl cmp push jo cmp mov cmp jmp add add xchg cmp rcrb pushf sti push push mov dec lock std out lea incb or incb xor sbb inc add out add and (bad) mov mov and roll add xor push fildl xor dec sub mov add (bad) push int jbe mov lret in ja aas in push (bad) sub push cmp push je dec dec or pop push mov inc push sbb outsl or loop or jmp cmpsl rep adc data16 jg sbb inc xchg int3 in dec test jp call lea inc aam call popaw jg lcall push push add pop add pop cmc sub push mov scas add out dec arpl or mov sub push loop lcall lret (bad) mov dec fstpl mov mov and and inc daa cs push sub sbb daa decl notl pop xchg pop dec sub add lret add fldln2 add out pushf pop std sub out popa cmovb aaa cmp push ds inc ss xor mov add sbb pop mov cmp adc add into or icebp dec mov mov lret mov mov add or ror or rolb lea inc push stos addb scas ljmp pop fs jbe xchg test pop xor fiadd or xor push lcall into push add adcb setnp lods adc sub pusha add sbb dec sbb sbb inc inc cmp sbb sbb xor sub sbb sbb and sbb sbb sbb adc adc repnz pop pusha xor xor push xor xor sbbb mov mov nop rclb rcrb (bad) enter ja mov mov and and rcl fsubs and and loopne call in lock clc popf and and add orl movsb mov sbb sbb sbb xor xor sbb adc xor xor or add fs xor xor fs inc enter js je insb enter push xor enter test dec roll sarb mov push sbb and aaa adc stos imul or inc pop inc pop pop pop xchg aas jg pop push inc dec push inc push inc dec dec push push push divb je insl push outsl outsl je and inc push pop inc (bad) jl and pop push inc dec dec push jae cmp imul cmp dec inc dec dec dec xor push gs mov rsqrtps fs add (bad) dec jle cmp push push dec push inc pop push mov sti sar push inc inc dec inc cmovbe inc inc sbb sub dec dec sbb sti daa stc dec inc dec push dec push dec dec dec dec push dec rcpps ds sahf xor addl dec push jb fs mov jne je xchg inc out push inc push gs imul adc jb outsb je inc pop sti pop nop dec inc jne insb fs jne bound sbb mov dec popa bound outsl dec fistpll add insl gs inc push push inc rcrl arpl sti ljmp jae data16 push imul dec push pop jno push (bad) jbe push inc mov push xchg pop inc sub incl dec or inc sbb sub inc dec jo jbe mov jmp ja push pop inc out insb push sbb pop and imul outsl jne jae loopne std sbb dec push pop inc inc push inc mov inc dec jae ret fadd mov sub fldt (bad) add insb jae adc outsb out fiadd lea jae imul out outsb outsb jbe fs dec cs outsb imul scas mov test xor or out push push xor xor xor xor and xor xor jecxz xor add add cld out cwtl xchg jo inc popa je add arpl shll jne sub cmpsl movsb sub (bad) pop inc js insb outsl adc push push inc outsl lcall sbb (bad) pop gs je cmp inc jno repnz push push push imul sub packuswb pop jae nop jne lods (bad) cmc add add jg inc stos push popa jae mov imul cmp (bad) jnp fs add or popa fs int mov inc outsb call adc jbe jo xor pop jns je push mov push out adc rcrl and push inc push xor fdivs movsb push outsb jnp pushf in inc inc adc push mov daa inc and ds or mov fs xor mov push inc inc sbb push inc jae fstps dec and push push dec or jo mov jb push pop or add and lea sbb (bad) inc ret push fisub imul rcrl dec jg lock fisubrl pop jo arpl and add sbb jg,pt mov gs ja bound insb je mov fistl push ja add jb (bad) push pop cltd adc pop cmp mov jns lahf ja xor xor add sub das mov (bad) dec lds imul xor push push inc scas shrb fmull sub pop and cmpsl movsb out pusha (bad) mov push and xor inc mov je cmp ret mov jle mov inc dec push lea push inc inc sub cmp imul inc and mov pop xchg mov jno js lahf jae push push add dec aaa jmp inc testl aam ficompl mov divb pop (bad) push (bad) mov mov dec pop cs push lods mov test cs jne cmpsb (bad) out cmpsb addr16 pop insl popa push pop popf addr16 insb sbbl sub aas outsl mov mov je push pop jl mov pop popa jo arpl loopne push decl addr16 sub dec insl lcall xchg mov ja jns dec and push dec arpl ja and push mov or push inc aad push mov dec dec adc pushf pop sbb lret arpl jg (bad) fistpll push insb insl add jle jne ja jns repz xor sub push or js xor sub pop push inc cmp dec sbb sti in cmpsb mov pop xor jns aaa push int addb add xlat cmp jne xor cmp xor ss sbb gs insb out outsb arpl outsl add inc jne or bound xor jo imul mov popa and cmpl xor pop dec push mov inc push push dec sub pop jno sbb movsb lods leave add jg fistl jae arpl jae and in outsl clc and or pop and sub fs loope sbb inc inc stos lods sub and cld cwtl push add mov mov pop adc inc outsl or shrl mov sbb jns fdivs or add pusha push inc imul jmp pop testl insl or mov je insb inc sub add push mov mov cmp xor cs jb inc pop pop cs imul mov popa data16 dec sbb inc pop inc bound repnz ret shrb insb cmpsl cmpsl mov or mov jo mov add and adc and in lcall sar pop mov cmp mov and lret fnclex (bad) and and imul and data16 xor inc (bad) dec pop (bad) arpl into clc call in loopne loop in call jmp out in jmp and int in icebp in imul call sti jmp push out jmp in out and sti repnz and jmp mov jbe cmova pop les imul bnd mov lcall nop push ss and xlat push cmp dec push jne push push pop push push push xchg or imul dec jae pop jns das rcll add jg pop jo jbe arpl dec outsl jbe int mov and pop xor add or xchg data16 pop mov cmp and cmp call jae or push or sub es in in jmp lods pop cs inc xor das fsubrs cmp icebp or push jo dec xor pop mov clc lret mov cmovnp inc je cmp cli insl daa dec xor aaa inc ja xchg jle pop cmp aaa xor sti (bad) jg inc mov xor (bad) add inc seto mov pop inc mov or prefetchw or hlt in pop dec cs nop das std idivl insb dec xchg jno or xchg repnz xchg mov and inc stos and sbb mov add in imul xchg inc insl cmpsb leave outsb mov dec push in stos rclb jl xchg int leave jb xchg (bad) mov and data16 and js and popa xchg mov negl xor fbld and mov xor mov cmp xor and mov ret aas adc nop mov bound test lret pop enter or lock xor in dec rclb scas sbb cli scas and mov jne loopne incb hlt pop les test pop mov ret in repz ja sbb and enter nop (bad) (bad) nop or nop addl or xchg add shll or call xchg add addr16 cs or stc cmc lahf dec cs dec repz popa dec xchg adc inc ss lret unpckhps ss js ja and xor cmp xor das sbb or and cmc sbb test repz in or nop jmp fld1 pop inc dec repnz jbe cs clc dec ljmp out xchg inc push adc push sbb jb out adc aas adc negl or enter inc ret nop cs fcomi pop jb xchg add idivl test repnz aas daa dec xchg inc push int dec (bad) enter fbld mov pop jb cmc mov xor sub fs loop and fs insl dec xchg xor fs xor fbstp sub cmp fs jb mov ss sub (bad) jg mov xor aas outsl sbb cmp test and lahf and and nop in repz fsubs sbb repz or or pop nop or dec adc in push leave or repnz das addl xchg data16 and pop mov mov push sbb leave test in lahf xor or nop or pop loop,pn fsts and movb adc fimull mov repz pop mov out movsl clc or xchg lods pop call mov mov or outsb adc imul fs repnz shrb adc fildll movsb inc ss or dec das xchg jg stos xchg or lahf xchg and xchg pop pop aas xchg or idivl dec enter iret pop das psllq push sub lret rclb mov pop xchg and add es loopne mov frstor iret mov pusha daa pop and pop pop iret adc ss cmpb mov test and into loope cmp add flds dec faddl cmpsb stos into incb fsubs sbb das push paddd aas loopne leave nop or movsl add push leave nop or mov mov pop sbb add and xchg and xchg and mov pop sbb xchg and sbb and xchg and xchg hlt popa xchg popl pop das clc mov pop or push das sbb and pop add pause or pmulhuw fnstcw cs dec xchg or dec dec mov fildll dec lods pop or nop or stos fcoms das ret or mov fsts clc nop or test ret leave nop or scas bsr sbb sbb enter sbb fs (bad) repz dec movsb xchg mov or mov fsts pop inc outsl or cmp nop or aas add and jp cmc test hlt leave nop or imul outsl outsl sub nop or nop push das cmp hlt jge or nop or cmpb or nop lock nop or or nop or bnd push leave nop or bnd xchg addl and or and and jo xor xor fisubr xor cmp jb inc xor and leave nop xor out sub and xchg and sub test iret dec xchg pop and fcmovu popf adc fs xchg (bad) insb enter pop pusha dec xchg fmuls out dec sbb fs mov es inc repnz xchg or xchg and mov setl xor fwait lret pop jb negb inc pop cmpsl pop rorb and leave nop or dec cs nop pop jmp dec xchg push adc jns xchg ss adc xchg div icebp iret fs xchg dec in idivl cmpsb or repnz xchg or xchg and mov scas in add int3 scas sbb mov in lea das jecxz pop or test lock or dec fsts in iret xchg inc push mov xchg and mov fnstsw fs outsl (bad) pop jb xchg testb jg and xor jae dec and hlt mov sbb das sbb mov pop enter and outsl bound movsb nop pop enter add repnz push leave imul (bad) nop or cmp inc ss mov xor int3 hlt cmp insb aas or test or push clc fsts das gs or fs pop or mov bound adc mov nop or movsb das popa xor dec icebp das ss or repz outsl and aas fisttpl dec mov and aas rcrb and aas repnz pop and xchg and push mov sbb push aas sbb pop fsts stos (bad) leave nop or sub fildll xchg mov pushl lock mov inc rclb test jmp adc pop movd inc jb cmpb sti xchg mov inc aad aas jg jg mov movsb cmp shr maxps call sbbb lret inc repz adc (bad) out (bad) push fidiv dec mov inc leave (bad) jb mov pop aad jbe xor add inc ss push movzwl fs adc jns sti loope loop jb push jne jb mov movsb inc das or test dec setbe hlt out test push inc (bad) lcall mov repnz test pop cmp out fild add rolb popa stc push mov xor test out pop xlat add ljmp scas or adc pop xchg dec add scas (bad) lods dec popa push or scas int mov inc ss leave loop add add xadd sub sahf or mov loopne pop outsb xchg subl fistpl adc adc xchg jp adc inc popa arpl lods test aad arpl insb push std test cmp xor pop aad and inc dec inc push cmovge es dec mov push outsl push adc insb mov test lahf push pop and outsb popa and inc fs cmp dec xchg dec add dec mov dec dec push jne fcomps mov pop push xlat pop lods test cs jecxz adc in lds or add or and add into or pop lods test inc divb add push add and adc add xchg test and add jnp aas (bad) add add test mov sahf mov add mov xchg xor sub jbe and adc sub or adc aaa aas xchg or popf adc sub pop clc leave in fsubrs xor enter sub cmc fwait (bad) incl push pop je insb jo inc sub dec arpl (bad) jg addr16 pop imul sub dec push inc dec pushw bound outsb jb inc xor push push dec dec imul cmp xor push inc dec inc pop cli fild daa jno imul ja jns jbe xor cmp pushl xor inc inc aaa cmp dec dec dec dec inc inc dec inc push push push fdivr incl pop bound push pop push push arpl inc mov outsb insl mov rorl lods mov sub aaa ss icebp imul lret mov rcrl mov jno fucom imul icebp popa bound and fidivr dec push cmp push neg jnp xor cmp ss mov lea push dec add xchg cmp lret or nop aam adc icebp xchg inc push test pop mov mov outsl bound (bad) mov mov add jb outsb push or jns or fldt inc or xlat or jb jb or inc icebp int inc js arpl push gs jo jg (bad) sub dec popa outsb fs push dec jo pusha or arpl mov outsl or gs jo insb push arpl mov mov add inc gs jns out sub push gs pusha aas mov gs sbb jg sub dec popa jo imul aaa mov sbb popa ja mov mov push imul imul or mov mov dec push je inc jns push outsl cld fs sub loopne,pn leave in imul pop push dec sub aaa or xchg push popa mulb push jb mov fwait mov lock shrl jne jo adc adc in frstor jle dec scas inc or sub outsb jbe dec add aam popa bound insl dec push or mov cld movsb je (bad) sti push and push jb adc inc sbb jae cmp mov inc mov jecxz fabs (bad) jbe leave (bad) inc fs dec outsl mov je js mov mov lea jl or jo push imul cmp movsb outsl xor testl mov jecxz dec outsb outsw mov pop push test push inc stos or or inc fdivrs push repz xor gs pcmpeqw mov fnstcw or push mov push jns pop dec or xchg inc cwtl jg int inc xchg jg inc fimull jno pop cmp addr16 push pusha jne cwtl add mov inc xsha256 cmpsb adc (bad) fcmovu push push push or adc xchg std xor dec gs or outsl pusha pop inc sub and cmp (bad) pop movsb test jae dec das or push dec pop or inc mov inc mov xchg sub adc jne pop (bad) mov cltd push adcl sbb inc pop mov inc jl xor sbb outsl adc cmpsb insl dec pop push xor push rol out sbb mov mov sbb imul fcmovbe sbb dec popa adc push mov arpl mov push (bad) imul (bad) cmp decl add pushf pop xchg bndldx push mov push mov (bad) pop sub orl sub adc mov cwtl pop push and inc jne or fldenv cmovl ja jae cmpsb xor loopne popl arpl js (bad) fiaddl outsl dec and jmp add pop xor jae push lret mov cmp lahf push inc or add loope or cmp pop inc add add repnz or stos add push inc pop mov int3 or add pop pop and loopne add add insb pusha pop push or mov sub pop popa push mov lods mov std push cmp cs fwait sub fsts add inc cs loope adc push add daa mov adc cmc mov add test add add pusha mov lea push or jmp nop nop nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jae xor sub jb shl mov inc xor je mov add jne mov sub adc adc add jne mov sub adc adc jne inc add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp nop mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp 