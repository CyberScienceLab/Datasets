push mov push call test jne push call pop ret nop nop nop nop nop nop nop push mov lea push push push push movl call mov pop ret nop nop nop nop nop nop nop nop nop nop push push push push call add push push call push mov movl call mov push call mov mov push call mov add test je lea push push push push push call mov test je mov push push call mov push push push mov push push call mov push mov call mov push call test je mov push call mov pop test pop je mov push call call pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop push mov push push call mov test jne pop xor pop ret push push push push push push push call mov cmp jne pop xor pop ret mov lea push push push push push movl call push call pop mov pop ret nop nop nop nop nop nop push push push mov xor test jle mov mov sub mov mov cmp jne inc inc cmp jl pop pop mov pop ret pop pop xor pop ret nop nop nop nop nop nop nop nop nop nop nop mov push push push push mov cmp jg xor sub mov js mov mov push lea push push call add cmp je mov inc cmp jle pop pop pop or pop ret lea pop pop pop pop ret nop nop push push push push mov mov push mov push add push mov mov push push call mov test mov jne mov push push push push call test mov jne pop pop pop pop pop ret mov push push call push call mov xor push push mov mov mov mov mov push push call mov push push push push call mov mov add mov mov push shr rep mov push and rep mov mov push mov add mov mov call mov mov add sub je push push call add push call add test je push call mov add mov test je add test je push push push call test jne push call add xor pop pop pop pop pop ret movl pop mov pop pop pop pop ret nop nop push mov push push xor mov mov movl mov cmpw lea jbe push push add cmpl jne mov mov test jle mov push push add push push call mov mov mov xor shr mov rep mov and rep jmp mov mov push push add push push call mov mov mov mov add mov shr rep mov and rep mov mov mov inc add mov xor mov mov cmp jl pop pop pop pop pop ret nop nop nop nop nop nop nop nop nop nop nop push mov push xor push mov xor mov cmp lea jbe push push lea mov mov mov shr shr mov and and shr test je mov mov push push push call jmp lea test lea mov je or mov mov test jne test je mov jmp test je mov test jbe mov lea push push push push call mov xor inc add mov mov cmp jl pop pop pop pop pop ret nop nop nop mov push mov mov add mov test jbe mov mov add test jbe push push push lea mov sub xor test lea jbe xor mov mov and cmp jne mov and add add mov inc sub add shr cmp jb add mov test ja pop pop pop pop ret nop nop nop nop nop nop nop push push push push push mov mov mov mov add mov test jbe mov push add push mov call test jne mov test je add push call mov cmp je mov mov lea push push call add mov test je mov mov mov inc mov mov test je mov lea add jmp mov lea mov mov test je test je and jmp lea push push call test mov je mov add add test jne mov push add push mov call test jne mov mov jmp pop pop pop xor pop pop ret pop pop mov pop pop pop ret pop pop pop mov pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop mov push push push mov mov add push mov mov test je mov mov add test je mov test je mov mov add add xor test jbe jmp mov mov mov add push push call add test je mov inc add add cmp jb pop pop pop xor pop ret xor mov cmp je cmp ja mov pop pop pop lea mov pop mov add ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop push mov test je mov test je mov mov push push mov push add call movl mov test je mov push xor test jle push mov mov mov cmp je push call mov inc cmp jl pop mov push call add pop mov test je push push push call push push call push call pop ret nop mov sub test push push je mov test jne mov xor lea movb rep stos stos mov xor lea movb rep mov push stos stos lea push push call lea lea push push call add test je mov push push lea mov push add xor push mov movb movb movb lea mov mov mov movb mov push push call mov add mov push call mov mov mov xor mov add shr rep mov and rep mov mov mov shr rep mov and rep lea push call mov push mov call mov mov mov xor mov add shr rep mov mov and rep xor test jbe mov xor mov and shl shr add mov inc cmp jb add lea push lea push push push call add test jne mov lea mov mov mov mov add lea push push mov push push mov mov movb movb mov movb mov movb movb movb call add cmp je mov mov mov rep mov mov add mov mov mov pop pop test je push call add pop pop add ret nop nop nop nop nop nop nop nop nop nop nop sub push push call mov xor lea mov rep stos stos mov lea rep mov lea push push push call mov mov test mov je mov test jbe push call add test je push push call add test je sub mov lea mov rep call pop pop add ret pop xor pop add ret nop nop nop nop nop nop nop nop nop nop nop nop nop sub lea movb push push movl call push call test je mov mov lea movl push push push push push call test je movb mov push call mov and add ret nop nop nop nop nop nop sub push call test jne add ret push push call mov test jne add ret push mov xor lea movl rep lea push call mov pop cmp je cmp je xor add ret mov add ret nop nop nop nop nop nop nop sub push mov xor lea movb rep stos stos lea push push call mov lea push push push push call pop add ret nop nop sub push push mov push push push push call xor xor mov mov mov lea mov mov mov push rep stos lea push stos call mov or xor lea repnz not sub push mov mov mov or repnz mov dec shr rep mov push and push push push rep mov lea push push mov mov mov mov mov mov call mov cmp je lea lea push lea push push push call push call jmp lea lea push push movw movw movw movw mov call lea lea push push call mov mov mov mov mov mov mov mov push push push push push push push call mov cmp je lea lea push lea push push push call push call push push call pop pop pop pop add ret nop nop nop nop nop nop nop nop nop nop sub push push push push xor mov xor lea mov push rep stos stos lea push call mov or xor lea repnz not sub mov mov mov or repnz mov dec shr rep mov lea and push rep call add test je pop pop pop mov pop add ret xor call cmp jae mov jmp lea movl push call mov add xor cmp sete inc mov call test je mov mov xor lea mov rep mov push stos stos lea push push call cmp jne cmp jne lea push lea push push call lea push call add pop pop pop pop add ret mov mov lea push push push call add pop pop pop pop add ret cmp jne cmp jne push call push lea push push push call add pop pop pop pop add ret mov xor lea mov rep stos stos lea push call mov mov lea push push push call mov xor lea mov rep stos lea push stos call mov mov lea push push push call mov xor lea mov rep mov lea rep stos xor lea mov mov stos lea mov push mov push push lea push push movl mov call add lea lea lea push push push push push push push push push push call pop pop pop pop add ret nop nop nop nop nop nop nop nop nop nop mov sub test push jne mov push mov lea rep lea movl push call test pop jne lea movl push call test je mov dec je dec jne mov cmp jne mov cmp jne mov pop mov add ret cmp jne mov pop mov add ret test jne mov pop mov add ret cmp jne mov test jne cmpb jne mov pop mov add ret mov pop mov add ret cmp jne mov pop mov add ret cmp ja mov pop mov add ret movl xor pop add ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop mov sub test push push mov jne lea push push call lea push push call lea push call test mov jne lea lea push push push call mov add test jne push call mov push push call test jne mov shr jne push lea push push call add lea push lea push push call add push call pop pop add ret nop nop nop nop nop nop nop nop nop mov sub mov push push push cmp push je cmp je test jne push call mov add test je push call pop pop pop mov pop add ret cmp jne pop pop pop mov pop add ret mov mov xor lea movb mov rep stos stos lea push push push call lea push call mov xor lea movb rep mov add stos lea push push push stos call mov xor lea movb rep stos stos lea push push call mov or xor lea repnz not sub push mov mov mov or repnz mov dec shr rep mov lea and push rep call add test je lea lea push push call add test je mov xor lea movw rep stos lea push push push call mov mov lea xor rep mov lea rep lea lea push push call mov xor lea add rep mov push movl movl movl mov mov movl call push push call lea push call test je mov test je push push call mov push call pop pop pop xor pop add ret lea push push call add test je mov xor lea movb rep stos lea push push push stos call mov xor lea movb rep stos lea push push stos call mov or xor lea repnz not sub mov mov mov or repnz mov dec shr rep mov lea and push rep call add test je mov xor lea movb rep lea lea stos push push push push stos call lea lea push push call add lea push lea push push call lea push call add push call push mov call push call lea push push call add test jne call pop pop pop mov pop add ret nop nop nop nop nop nop nop push call jmp int3 int3 int3 int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp push mov pushl call mov andl andl mov movl mov pop ret ret push mov call testb je push call pop mov pop ret movl ret push mov pushl call mov andl andl mov movl mov pop ret push mov call testb je push call pop mov pop ret movl ret call test je mov mov call ret xor ret pushl call pop ret ret mov push mov andl andl mov mov mov lea push call mov pop ret push mov call add push call pop ret push mov push lea push call mov call andl andl push call pop pop ret mov call sub push push mov push mov mov lea push call cmpl jne pushl andl lea pushl push call mov dec mov imul test lea jl inc mov mov mov sub dec jne mov push mov mov call mov mov pop pop mov pop leave ret mov add push call push push call push push mov mov test je push lea push call mov push mov mov call pop pop pop ret push xor cmp push push je xor cmp setne jmp push call mov cmp je mov push push call cmp mov je push push call cmp mov je push push call cmp mov je push push call cmp mov je push push call cmp mov je push push call cmp mov je push pop mov jmp mov mov mov mov mov mov movl xor pop pop pop ret push push call test je pushl pushl call jmp testb jne mov xor cmp jle cmp jle mov push call cmp jge push call cmp jl xor jmp mov pop pop ret push mov sub call test je pushl pushl call jmp testb je mov jmp pushl call test je lea push pushl call jmp lea push pushl call test je pushl lea push call jmp xor leave ret push mov sub push push call test je pushl pushl call jmp cmpl jne mov xor cmp je cmpl jb lea push push push push call test je push mov mov push mov call push mov call lea lea movsl movsl movsl cmpl push movsl pop mov mov pop jb add push push call mov jmp xor pop pop leave ret mov test jne pushl call push call ret push pushl call ret push pushl call ret call mov jmp push mov call testb je push call pop mov pop ret mov call push push mov mov movl movl call andb lea call orl lea call mov pop mov leave ret push mov call testb je push call pop mov pop ret mov call push mov movl andl call mov mov leave ret push mov pushl call mov andl andl mov movl mov pop ret push mov call testb je push call pop mov pop ret movl ret push mov pushl call mov andl andl mov movl mov pop ret push mov call testb je push call pop mov pop ret movl ret push mov call testb je push call pop mov pop ret mov call push mov movl andl call mov mov leave ret pushl pushl pushl call ret pushl pushl call ret pushl pushl pushl pushl pushl call ret push mov pushl pushl pushl pushl pushl pushl pushl pushl call pop ret push mov pushl pushl pushl pushl pushl pushl pushl pushl call mov movswl shr movswl mov mov mov pop ret pushl pushl pushl pushl pushl call ret push mov mov test je mov pushl pushl pushl pushl pushl pushl pushl push pushl call pop ret pushl pushl pushl pushl pushl call ret int3 mov push test je push push mov mov test mov jne shr jne jmp mov inc mov inc dec je test je test jne mov shr jne and je mov inc mov inc test je dec jne mov pop pop pop ret test je mov inc dec je test jne mov shr jne mov inc dec jne pop pop mov pop ret mov add dec je mov mov add xor xor mov add test je test je test je test je test jne mov jmp and mov jmp and mov jmp xor mov add xor dec je xor mov add dec jne and jne mov pop pop pop ret push mov push push push mov push mov sub push push push mov xor cmp jne pushl call pop jmp mov cmp jne push call pop jmp mov cmp jne mov cmp ja push call pop mov push call pop mov cmp je cmp ja push push push call add test je mov jmp push call pop mov cmp je mov dec mov cmp jb mov push push pushl call push call mov push push call add cmp jne cmp jne push pop mov add and mov push push pushl call mov cmp je mov dec mov cmp jb mov push push pushl call push pushl call add orl call cmp jne cmp jne push pop add and mov push push push pushl call mov mov cmp jne cmp je push call pop test jne jmp mov mov xor push call pop ret cmp jne cmp ja cmp jbe add and jmp push pop mov mov cmp ja push call pop movl lea push lea push push call add mov mov test je cmp jae mov shr push push pushl pushl call add test je mov mov jmp push call pop mov test je movzbl shl mov cmp jb mov push pushl pushl call push pushl pushl call add mov cmpl jne push push pushl call mov test je movzbl shl mov cmp jb mov push push pushl call push pushl pushl call add jmp push push push pushl call mov orl call mov cmp jne cmp je push call pop test jne jmp mov mov push call pop xor ret xor cmp ja cmp jne push pop add and push push push pushl call cmp jne cmp je push call pop test jne xor mov mov pop pop pop leave ret push mov push push push mov push mov sub push push push mov test je mov cmp jne push call pop andl push call pop mov test je push push call pop pop orl call cmpl jmp push call pop ret cmp jne push call pop movl lea push lea push push call add mov test je push pushl pushl call add orl call cmpl jne pushl jmp push call pop ret push push pushl call mov mov pop pop pop leave ret pushl pushl call test jne call jmp xor test je push call pop or ret xor ret push mov sub mov push mov mov mov movl mov lea push lea pushl push call add decl mov js mov andb jmp lea push push call pop pop mov pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push push push mov mov test je mov test je mov mov mov inc cmp je test je mov inc cmp je test jne pop pop pop xor ret mov inc cmp jne lea mov test je mov add cmp jne mov test je mov add cmp je jmp xor pop pop pop mov jmp lea pop pop pop ret mov pop pop pop ret mov cmp jne call push mov call test pop je mov xor mov and shrl mov mov shl add mov call test jne call xor jmp call mov call mov call call call call incl jmp xor cmp jne cmp jle decl cmp jne call call call call jmp cmp jne push call pop push pop ret push mov push mov push mov push mov test jne cmpl jmp cmp je cmp jne mov test je push push push call test je push push push call test jne xor jmp push push push call cmp mov jne test jne push push push call test je cmp jne push push push call test jne and cmpl je mov test je push push push call mov mov pop pop pop pop ret mov cmp je test jne cmpl jne call pushl call push call pop pop ret pushl pushl call pop pop ret cmpl ja pushl call test pop jne cmp je pushl call test pop jne xor ret push mov push push push mov push mov sub push push push mov cmp jne mov cmp ja push call pop andl push call pop mov orl call mov test je jmp push call pop ret cmp jne mov test je lea and jmp push pop mov cmp ja push call pop movl mov shr push call pop mov orl call mov test jne push jmp mov push call pop ret mov test jne push pop add and push push pushl call mov mov pop pop pop leave ret push call pushl call mov pop mov mov sub add cmp jae push call add push pushl call add test jne xor jmp mov sub mov sar lea mov mov mov addl mov call mov pop ret pushl call neg sbb pop neg dec ret push call test pop mov jne push call mov pop andl mov mov ret push mov push movl call mov pop test je push call pop push call pop pop ret push mov call testb je push call pop mov pop ret push mov sub mov push push push pop mov lea rep mov mov mov lea push pushl pushl pushl call pop pop leave ret push mov push push push push mov add mov mov mov mov mov mov mov mov jmp pop pop pop leave ret pop pop xchg jmp pop pop xchg jmp push mov push push push push push mov mov movl push pushl pushl pushl call mov mov and mov mov mov mov mov mov pop pop pop leave ret push mov sub push push push cld mov xor push push push pushl pushl pushl pushl pushl call add mov pop pop pop mov mov pop ret push mov sub mov andl mov mov mov movl inc mov mov mov mov lea mov pushl push pushl call mov mov mov mov leave ret push mov cld mov push push pushl pushl push pushl pushl pushl call add pop ret push mov sub push push push andl movl mov mov mov mov mov mov mov mov andl andl andl andl movl mov mov mov mov lea mov movl mov mov mov mov lea push mov pushl call call pop pop andl cmpl je mov mov mov mov mov jmp mov mov mov pop pop pop leave ret push mov push push push cld mov mov and test je mov movl push pop jmp push mov pushl mov pushl mov pushl push pushl mov pushl pushl call add mov cmpl jne pushl pushl call mov mov mov jmp push pop pop pop pop pop ret push mov push push push cmpl push mov mov mov mov mov mov jl cmp jne call mov dec lea cmp lea jge cmp jle cmp jne mov decl mov mov cmpl jge mov mov inc mov mov mov cmp ja cmp jbe call lea pop pop lea pop leave ret int3 push mov push push push push push push push pushl call pop pop pop pop mov pop ret mov testl mov je mov mov mov mov ret push push push mov push push push pushl mov mov mov mov cmp je cmp je lea mov mov mov cmpl jne push mov call call jmp popl add pop pop pop ret xor mov cmpl jne mov mov cmp jne mov ret push push mov jmp push push mov mov mov mov mov pop pop ret int3 int3 push push mov push mov mov mov lea push ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov test je xor mov push mov cmp jb neg and je sub mov inc dec jne mov shl add mov shl add mov and shr je rep test je mov inc dec jne mov pop ret mov ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov mov add cmp jbe cmp jb test jne shr and cmp jb rep jmp mov mov sub jb and add jmp jmp nop jmp nop lock add sbb add inc dec add and mov mov mov mov mov shr mov add add cmp jb rep jmp lea and mov mov mov shr mov add add cmp jb rep jmp nop and mov mov inc shr inc cmp jb rep jmp lea mov dec add movsb dec add pushf dec add xchg dec add mov adc add mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov fmuls adc dec add in dec add add adc leave ret nop mov mov mov pop pop leave ret nop mov mov mov mov mov pop pop leave ret lea mov mov mov mov mov mov mov pop pop leave ret nop lea lea test jne shr and cmp jb std rep cld jmp mov neg jmp lea mov mov cmp jb and sub jmp jmp nop js add cwtl dec add rorb mov and mov dec shr dec cmp jb std rep cld jmp lea mov and mov mov shr mov sub sub cmp jb std rep cld jmp nop mov and mov mov mov mov shr mov sub sub cmp jb std rep cld jmp lea adc add sbb add and add sub add xor add cmp add inc dec add push dec add mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov jo add js add mov adc or leave ret nop mov mov mov pop pop leave ret lea mov mov mov mov mov pop pop leave ret nop mov mov mov mov mov mov mov pop pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov test je mov push push mov mov or and je test je mov cmp jne inc inc dec je mov mov cmp jne mov mov cmp jne add add sub jne pop pop ret mov and shr je repz je mov mov cmp jne cmp jne shr shr cmp jne cmp mov sbb pop sbb pop ret test je mov mov cmp jne dec je cmp jne dec je and and cmp jne dec pop pop ret push mov push push push mov push mov sub push push push mov cmp jne push call pop andl mov push call pop mov test je mov sub mov jmp mov orl call cmpl jmp mov push call pop ret cmp jne push call pop movl lea push lea push pushl call add mov test je movzbl shl mov jmp mov orl call cmpl jne pushl push pushl call mov mov mov mov pop pop pop leave ret mov push call pop ret push mov push push push mov push mov sub push push push mov cmp jbe xor jmp mov cmp jne push call pop andl mov push call pop mov test je andl cmp ja push push push call add test je mov orl call cmpl jne jmp mov push call pop ret cmp jne test jne push pop add and mov push call pop movl lea push lea push mov push call add mov test je andl cmp ja shr push push pushl pushl call add test je mov push lea push call pop pop jmp orl call cmpl jne jmp mov push call pop ret test jne push pop add and push pushl push pushl call mov mov mov mov pop pop pop leave ret mov test je call push push call push push call add ret push push pushl call add ret push push push call add ret push call push pop cmp jne pushl call push call cmpl push mov mov mov jne mov test je mov push lea cmp jb mov test je call sub cmp jae pop push push call pop pop push push call pop pop test pop je call pop ret pushl mov call pop ret push call pop ret push call pop ret push mov cmp jae mov test je call add jmp pop ret int3 int3 int3 int3 push cmp lea jb sub sub test cmp jae sub mov test mov mov mov push ret push mov sub push push push push call pushl call mov pop cmp pop mov jne xor jmp test je xor mov cmp je add inc cmp jb lea push push call push pop cmp jne push andl pop xor mov cmp rep stos mov jbe cmpb je lea mov test je movzbl movzbl cmp ja orb inc jmp andl push pop xor mov lea rep shl stos lea cmpb mov je mov test je movzbl movzbl cmp ja mov mov or inc cmp jbe inc inc cmpb jne incl add cmpl jb mov movl push mov call lea mov movsl movsl pop mov movsl jmp inc inc cmpb jne mov orb inc cmp jb push call pop mov mov jmp andl xor mov stos stos stos jmp cmpl je call call jmp or push call pop mov pop pop pop leave ret mov andl cmp jne movl jmp cmp jne movl jmp cmp jne mov movl ret mov sub je sub je sub je dec je xor ret mov ret mov ret mov ret mov ret push push pop xor mov rep stos xor mov mov mov mov stos stos stos pop ret push mov sub lea push push pushl call cmp jne xor mov mov inc cmp jb mov movb test je push push lea movzbl movzbl cmp ja sub lea inc mov mov shr rep mov and rep inc inc mov test jne pop pop push lea pushl pushl push lea push push push call push lea pushl push push lea push push push pushl call push lea pushl push push lea push push push pushl call add xor lea mov test je orb mov mov jmp test je orb mov jmp andb inc inc inc cmp jb jmp xor mov cmp jb cmp ja orb mov add mov jmp cmp jb cmp ja orb mov sub jmp andb inc cmp jb pop leave ret cmpl jne push call pop movl ret push call mov xor mov mov cmp je add inc cmp jb cmp jb cmp ja call movl pop ret call mov pop mov ret cmp jb cmp ja call movl pop ret call movl pop ret call add ret call add ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov mov add cmp jbe cmp jb test jne shr and cmp jb rep jmp mov mov sub jb and add jmp jmp nop jmp nop add adc add and mov mov mov mov mov shr mov add add cmp jb rep jmp lea and mov mov mov shr mov add add cmp jb rep jmp nop and mov mov inc shr inc cmp jb rep jmp lea iret push add mov push add lods push add movsb push add pushf push add xchg push add mov adc inc (bad) in inc mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov call push add cld push add adc adc leave ret nop mov mov mov pop pop leave ret nop mov mov mov mov mov pop pop leave ret lea mov mov mov mov mov mov mov pop pop leave ret nop lea lea test jne shr and cmp jb std rep cld jmp mov neg jmp lea mov mov cmp jb and sub jmp jmp nop mov adc push add mov and mov dec shr dec cmp jb std rep cld jmp lea mov and mov mov shr mov sub sub cmp jb std rep cld jmp nop mov and mov mov mov mov shr mov sub sub cmp jb std rep cld jmp lea and add sub add xor add cmp add inc push add dec push add push push add addr16 add mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov adcb mov adc push add mov pop pop leave ret nop mov mov mov pop pop leave ret lea mov mov mov mov mov pop pop leave ret nop mov mov mov mov mov mov mov pop pop leave ret push push pushl call test mov jne ret mov andl andl push mov mov movl pop ret mov lea mov lea cmp jae mov sub cmp jb add jmp xor ret push mov sub mov push push mov mov push mov add sub shr mov imul lea mov mov dec test mov jne mov lea mov mov mov mov test mov jne sar dec cmp jbe push pop mov cmp jne cmp jae mov mov shr lea not and decb jne mov and jmp lea mov shr lea not and decb jne mov and mov mov jmp mov mov mov add mov mov mov mov mov mov mov sar dec cmp jbe push pop mov and mov jne sub mov sar push mov dec pop cmp jbe mov add mov mov sar dec cmp jbe mov cmp je mov mov cmp jne cmp jae mov mov shr not and decb jne mov and jmp lea mov shr not and decb jne mov and mov mov mov mov mov mov mov mov mov jmp mov cmpl jne cmp je mov mov lea mov mov mov mov mov mov cmp jne mov cmp mov inc mov jae cmpb jne mov mov shr mov or mov mov shr lea or jmp cmpb jne lea mov shr mov or lea mov shr lea or mov mov mov mov decl jne mov test je mov mov shl add mov push push push call mov mov mov shr or mov mov mov andl mov mov decb mov mov cmpb jne andl mov cmpl jne push push pushl call mov pushl push pushl call mov mov lea shl mov mov sub lea push lea push push call mov add decl cmp jbe subl mov mov mov mov mov pop pop pop leave ret push mov sub mov mov push push lea push lea mov mov lea and mov sar dec cmp jge or shr orl mov jmp add or xor shr mov mov mov mov cmp mov jae mov mov and and or jne add cmp mov jb cmp jne mov cmp mov jae mov mov and and or jne add jmp cmp jne cmp jae cmpl jne add mov jmp cmp jne mov cmp mov jae cmpl jne add jmp cmp jne call mov test mov je push call pop mov mov mov cmpl jne xor jmp mov mov mov cmp mov je mov mov and and or jne mov mov and and andl lea or mov jne mov incl and add mov and or je mov mov xor imul lea mov mov and jne mov push and pop test jl shl inc jmp mov mov mov sub mov mov sar dec cmp jle push pop cmp je mov cmp jne cmp jge mov mov shr mov lea not mov and mov decb jne mov mov and jmp lea mov shr mov lea lea not and decb mov jne mov mov and jmp mov mov mov cmpl mov mov mov mov je mov mov lea mov mov mov mov mov mov cmp jne mov cmp mov jge inc cmpb mov jne mov mov shr or mov mov shr mov or jmp inc cmpb mov jne lea mov shr or mov lea lea mov shr or mov test je mov mov jmp mov mov add lea mov mov mov mov test lea mov jne cmp jne mov cmp jne andl mov mov lea pop pop pop leave ret mov mov push push xor cmp jne lea shl push pushl push pushl call cmp je addl mov mov mov push push lea pushl lea call cmp mov je push push push push call cmp mov jne pushl push pushl call xor jmp orl mov mov incl mov orl mov pop pop ret push mov push mov push push push mov mov xor test jl shl inc jmp mov push imul pop lea mov mov mov add dec jne mov push shl add push push push call test jne or jmp lea cmp ja lea orl orl lea movl mov lea mov movl add lea cmp jbe mov lea add push pop mov mov lea mov mov andl mov mov mov inc test mov mov jne or mov mov shr not and mov pop pop pop leave ret push mov sub mov mov push push push mov mov lea sub mov and shr mov imul lea mov mov dec cmp mov mov lea mov jle test jne add cmp jg mov sar dec cmp mov jbe push pop mov mov cmp jne cmp jae mov shr mov lea not and decb jne mov and jmp add mov shr mov lea not and decb jne mov and mov mov mov mov mov mov mov sub add cmpl jle mov mov sar dec lea cmp jbe push pop mov lea mov mov mov mov mov mov mov mov mov cmp jne mov cmp mov inc mov jae cmpb jne mov mov shr mov or lea mov mov jmp cmpb jne lea mov shr mov or lea lea mov shr or mov mov lea mov mov jmp mov lea mov mov jmp xor jmp jge mov sub lea mov lea mov mov sar dec mov cmp jbe push pop testb jne mov sar dec cmp jbe push pop mov cmp jne cmp jae mov mov shr lea not and decb jne mov and jmp lea mov shr lea not and decb jne mov and mov mov mov mov mov mov mov mov add mov sar dec cmp jbe push pop mov mov lea mov mov mov mov mov mov cmp jne mov cmp mov inc mov jae cmpb jne mov mov shr mov or lea mov mov jmp cmpb jne lea mov shr mov or lea lea mov shr or mov mov mov push pop pop pop pop leave ret cmpl push push push push jne mov jmp push push pushl call mov test je mov push push push push call mov test je push mov push push push call test je mov cmp jne cmpl jne mov cmpl jne mov jmp mov mov mov mov mov mov lea lea mov lea mov mov mov xor mov xor cmp setge dec and dec inc mov mov add cmp jl push push push call add mov add cmp jae orb lea mov movl add jmp mov jmp push push push call cmp je push push pushl call xor pop pop pop pop ret push mov push push pushl call cmp jne mov mov cmp je mov mov push push mov mov mov mov pushl call pop ret orl pop ret push mov push push push mov push cmpl je andl lea mov cmpl jne mov push add push push call test je orl decl mov test je cmp jbe mov incl decl je sub sub test jge cmpl mov mov je cmpl jne push lea pop cmpl jne inc add cmp jl cmp jne push call pop cmp je cmpl jg pop pop pop leave ret mov mov push mov cmp jbe cmp jb mov cmp je jmp test jne mov mov and cmp jb mov mov mov mov and sub mov sub pop sar lea ret xor pop ret mov mov sub sar lea mov movzbl add andb cmpl movl jne incl cmpl jne push call pop ret push mov push push push push mov push mov cmp je mov lea mov sub sub sar shl add cmp mov jae mov mov cmp jl cmp jbe push push push call add test jne mov mov add lea add cmp mov jb jmp mov mov mov lea mov cmp mov jae mov cmp jl cmp jbe push push pushl call add test jne mov addl add cmp jb jmp mov mov cmp je jmp mov sub mov jmp mov mov cmpl je cmpl jne mov cmp je jmp mov andl mov mov sub sub sar shl add cmpl jne cmpl jge add incl cmpl je mov push shl push push push mov call cmp jne push pushl push call mov add test mov jle lea mov orb lea mov mov mov mov movl add add decl jne mov lea cmp jae cmpl je add jmp cmp sbb and mov mov mov mov sub sub lea lea mov jmp call test je mov mov lea mov mov mov sub mov movzbl sub lea jmp xor pop pop pop leave ret push mov push mov mov push push mov push mov lea cmp mov mov mov jb lea mov cmp jae add sub jmp andl lea mov lea jmp add cmpb je mov lea cmp jae mov test jne push lea pop cmpb jne inc inc jmp cmp jae cmp jne mov jmp sub cmp jb mov mov jmp movzbl add lea cmp jb lea cmp jae lea cmp jae mov test jne push lea pop cmpb jne inc inc jmp lea cmp jae sub mov mov jmp andl lea mov mov add jmp cmp jae sub cmp jb mov jmp movzbl add jmp lea cmp jae sub mov mov jmp andl lea mov mov lea imul shl sub jmp xor pop pop pop leave ret push mov push mov push mov push movzbl push mov andl mov sub sar cmp lea jbe mov sub mov add movl jmp jae mov lea lea cmp ja lea cmp jae cmpb jne inc jmp cmp jne mov mov mov cmp ja cmp jbe lea cmp jae xor mov cmp jne inc cmpb je mov jmp andl lea mov sub add movl mov pop pop pop leave ret push mov pushl call pushl call pushl call pushl call pop ret push push mov mov mov test je cmp je cmp je cmp je cmp je push call pushl call pop add cmp jl pushl call pushl call pushl call pushl call pop pop ret push mov mov push cmpl lea jne push push call mov pop test jne push call pop push call cmpl pop push jne call mov jmp call pop push call pop pop pushl call pop pop ret push mov mov pushl call pop ret mov test je pushl call test pop je push pop ret xor ret push mov push andl call cmpw jne mov test je add mov mov mov mov pop ret push mov mov call lea push push movl call test je cmpl jne cmpl jb push pop jmp lea push push push call test je xor lea cmp je mov cmp jl cmp jg sub mov inc cmp jne lea push push push call add test jne lea jmp lea push push push call cmp lea je mov cmp jl cmp jg sub mov inc cmp jne lea push lea push call pop pop cmp je push push call pop cmp pop je inc mov cmp je cmpb jne mov jmp inc cmp jne push push push call add cmp je cmp je cmp je lea push call cmpb pop sbb add pop leave ret xor push cmp push sete push call test mov je call cmp mov jne push call pop jmp cmp jne call test jne pushl call xor ret push pop ret mov push cmp push jne push xor cmp push mov jle mov mov lea push push pushl call push push pushl call pushl push pushl call add inc cmp jl pushl push pushl call pop pop jmp cmp jne mov mov mov test je push push push call mov cmp jne pushl call pop pop ret int3 int3 int3 push inc xor pop inc xor push mov sub push push push push cld mov mov testl jne mov mov mov lea mov mov mov cmp je lea cmpl je push push lea call pop pop mov or je js mov push call add lea push push call add lea push mov call mov mov call mov lea mov jmp mov jmp mov jmp push lea push push call add pop mov pop pop pop pop mov pop ret push mov mov mov push mov push call add pop ret push mov push push mov mov mov test je test jne test je andl test je mov and mov mov mov andl andl and or test mov jne cmp je cmp jne push call test pop jne push call pop testw push je mov mov sub lea mov mov dec test mov jle push push push call add mov jmp cmp je mov mov sar and mov lea lea jmp mov testb je push push push call add mov mov mov jmp push lea pop push push push call add mov cmp pop je orl jmp mov and jmp or mov or pop pop pop ret push mov sub push push mov xor push mov mov inc test mov mov mov je mov mov jmp mov mov mov cmpl jl cmp jl cmp jg movsbl mov and jmp xor movsbl sar cmp mov ja jmp xor orl mov mov mov mov mov mov jmp movsbl sub je sub je sub je dec dec je sub jne orl jmp orl jmp orl jmp orb jmp orl jmp cmp jne lea push call test pop mov jge orl neg mov jmp mov movsbl lea lea jmp andl jmp cmp jne lea push call test pop mov jge orl jmp mov movsbl lea lea mov jmp cmp je cmp je cmp je cmp jne or jmp orl jmp orl jmp cmpb jne cmpb jne inc inc orb mov jmp andl mov andl movzbl testb je lea push pushl movsbl push call mov add inc mov lea push pushl movsbl push call add jmp movsbl cmp jg cmp jge cmp jg je sub je dec dec je dec dec je sub jne testw jne or cmpl mov je mov lea push call testw pop mov mov je test jne mov mov movl mov mov dec test je cmpw je inc inc jmp movl add orl cmpl lea mov jge movl jmp testw jne or testw lea push je call push lea push call add mov test jge movl jmp sub je sub je dec je jmp call pop mov movl lea mov jmp lea push call test pop je mov test je test je movswl shr mov mov movl jmp andl mov movswl jmp mov mov push jmp jne cmp jne movl jmp cmp jle mov cmpl jle mov add push call test pop mov je mov mov jmp movl mov pushl add mov pushl mov mov mov mov movsbl push lea push push call mov add and je cmpl jne push call pop cmp jne test jne push call pop cmpb jne orb inc mov push call pop jmp sub je sub je dec je dec je sub je dec dec je sub jne movl jmp sub sar jmp test jne mov mov mov mov dec test je cmpb je inc jmp sub jmp movl movl testb movl je mov movb add movl mov jmp testb movl je or jmp lea push call testb pop je mov mov jmp mov mov movl jmp orl movl testb je lea push call pop jmp testb je testb lea push je call pop movswl cltd jmp call pop movzwl jmp testb lea push je call pop jmp call pop xor testb je test jg jl test jae neg adc mov neg orb mov jmp mov mov testb jne andl cmpl jge movl jmp andl mov cmp jle mov mov or jne andl lea mov mov decl test jg mov or je mov cltd mov mov push push pushl pushl call push push pushl mov add pushl call cmp mov mov jle add mov decl mov jmp lea sub incl testb mov je mov cmpb jne test jne decl inc mov movb mov cmpl jne mov test je test je movb jmp test je movb jmp test je movb movl mov sub sub test jne lea push pushl push push call add lea push lea pushl pushl push call add test je test jne lea push pushl push push call add cmpl je cmpl jle mov mov lea mov inc push lea push inc call pop test pop jle lea push pushl push lea push call add mov dec test jne jmp lea push pushl pushl pushl call add testb je lea push pushl push push call add cmpl je pushl call andl pop mov mov inc test mov jne mov pop pop pop leave ret daa jno adc outsl add adc add pusha jo adc jo adc jo adc adc in mov decl js mov mov mov incl movzbl jmp push pushl call pop pop cmp mov jne orl pop ret incl pop ret push push mov mov dec test jle mov push pushl pushl call add cmpl je mov dec test jg pop pop ret push mov mov dec push push test jle mov mov movsbl push inc pushl push call add cmpl je mov dec test jg pop pop pop ret mov addl mov mov ret mov addl mov mov mov ret mov addl mov mov ret int3 int3 int3 int3 int3 lea pop ret lea lea xor mov push mov shl mov test je mov inc cmp je test je test jne or push mov shl push or mov mov mov mov xor add add xor xor xor xor add and jne and je and jne and jne pop pop pop xor ret mov cmp je test je cmp je test je shr cmp je test je cmp je test je jmp pop pop lea pop ret lea pop pop pop ret lea pop pop pop ret lea pop pop pop ret push call call cmp mov je push push call mov pop test pop je push pushl call test je push call pop call orl push mov pop pop ret xor pop ret call mov cmp je push call orl ret mov movl movl ret push push call pushl mov call mov test jne push push call mov pop test pop je push pushl call test je push call pop call orl mov jmp push call pop push call mov pop pop ret mov cmp je push mov test jne push call mov test je mov test je push call pop mov test je push call pop mov test je push call pop mov test je push call pop mov test je push call pop mov test je push call pop mov cmp je push call pop push call pop push pushl call pop ret push mov sub push push push push call mov pop test jne push call pop mov movl lea cmp jae andb orl andl movb mov add add jmp lea push call cmpw je mov test je mov lea lea mov mov cmp jl mov cmp jge mov push call test pop je addl mov lea cmp jae andb orl andl movb mov add add jmp add cmp jl jmp mov xor test jle mov mov cmp je mov test je test jne push call test je mov mov sar and mov lea lea mov mov mov mov mov addl inc inc cmp jl xor mov lea cmpl lea jne test movb jne push pop jmp mov dec neg sbb add push call mov cmp je push call test je and mov cmp jne orb jmp cmp jne orb jmp orb inc cmp jl pushl call pop pop pop leave ret push push push mov mov test je mov add cmp jae lea cmpl je push call mov add add add cmp jb pushl call andl pop add cmp jl pop pop pop ret push xor cmp push push jne call mov xor mov cmp je cmp je inc push call pop lea jmp lea push call mov pop cmp mov jne push call pop mov cmp je push push call mov pop inc cmpb je push call cmp pop mov jne push call pop push pushl call pop add pop add cmp jne pop pushl call pop mov mov pop pop movl pop ret push mov push push push xor cmp push push jne call mov push push push call mov mov mov cmp je mov lea push lea push push push push call mov mov lea push call mov add cmp jne push call pop lea push lea push mov lea push push push call mov add dec mov pop pop mov pop leave ret push mov mov mov push push andl mov push mov movl mov test je mov add mov cmpb jne mov inc cmp je test je movzbl testb je incl test je mov mov inc inc incl test je mov mov inc jmp incl test je andb inc cmpb jne inc jmp incl test je mov mov inc mov inc movzbl testb je incl test je mov mov inc inc cmp je test je cmp jne test jne dec jmp test je andb andl cmpb je mov cmp je cmp jne inc jmp cmpb je test je mov add mov mov incl movl xor cmpb jne inc inc jmp cmpb jne test jne xor cmp je cmpb lea jne mov jmp mov mov xor cmp sete mov shr mov dec test je inc test je movb inc incl dec jne mov test je cmpl jne cmp je cmp je cmpl je test je movzbl testb je mov inc inc incl mov mov inc jmp movzbl testb je inc incl incl inc jmp test je andb inc incl jmp test je andl mov pop pop pop incl pop ret push push mov push push mov push push xor xor xor cmp jne call mov cmp je movl jmp call mov cmp je movl jmp cmp jne cmp jne call mov cmp je cmp mov je inc inc cmp jne inc inc cmp jne sub mov sar push push inc push push push push push push mov call mov cmp je push call cmp pop mov je push push push push pushl push push push call test jne pushl call pop mov mov push call mov jmp cmp jne cmp jne call mov cmp je cmp mov je inc cmp jne inc cmp jne sub inc mov push call mov pop cmp jne xor jmp push push push call add push call mov jmp xor pop pop pop pop pop pop ret mov cmp je test jne cmpl jne push call mov pop test je call push call pop ret push mov sub mov xor mov cmp je add inc cmp jb push mov shl cmp jne mov cmp je test jne cmpl je cmp je lea push push push call test jne lea push push call pop pop lea push push lea call inc pop cmp jbe lea push call mov lea sub push add push push call add lea push push call lea push push call lea push push call pushl lea push call push lea push push call add pop jmp lea lea push push pushl call pop push pushl push call push call pop leave ret int3 int3 int3 int3 mov mov test jne mov cmp jne or je cmp jne or je shr cmp jne or je cmp jne add add or jne mov xor ret nop sbb shl inc ret mov test je mov inc cmp jne inc or je test je mov add cmp jne or je cmp jne or je add jmp push mov mov cmpl jne cmpl jne cmpl jne jmp mov test je push call test pop je push call jmp xor pop ret push call mov ret pushl call ret push mov push mov push mov cmp je call mov testb je cmpl je cmpl jne push push pushl pushl call add jmp cmpl je cmpl jne cmp jbe mov mov test je movzbl push pushl pushl push pushl pushl pushl push call add jmp pushl pushl pushl push pushl pushl pushl push call add push pop pop pop pop ret push mov sub mov andb mov cmp mov jl mov cmp jl call push push mov mov push mov cmp jne cmpl jne cmp jne cmpl jne call cmpl je call mov call mov push push mov movb call pop test pop jne call cmp jne cmpl jne cmp jne cmpl jne call cmp jne cmpl jne cmp jne mov lea push lea push push pushl pushl call add mov mov cmp jae cmp jg cmp jg mov mov mov test mov jle mov mov lea mov test mov jle pushl pushl pushl call add test jne decl add cmp jg decl addl cmpl jg jmp pushl pushl pushl push pushl pushl pushl pushl pushl pushl push call add mov incl add jmp cmpb je push push call pop pop pop pop pop leave ret cmpb jne pushl pushl pushl pushl pushl pushl pushl push call add jmp jmp push mov push push push push call cmpl je pushl pushl pushl pushl pushl pushl pushl call add test jne mov lea push lea push push pushl pushl call add mov mov cmp jae cmp jl cmp jg mov mov shl add mov test je cmpb jne push add pushl pushl push push push pushl pushl pushl pushl pushl call add incl add jmp pop pop leave ret push push mov mov test je cmpb lea je mov mov cmp je add push push call pop test pop jne testb je testb je mov mov test je testb je test je testb jne xor jmp push pop pop pop ret push mov push push push mov push mov sub push push push mov mov mov mov mov cmp je cmp jle cmp jl call andl mov mov test je push push push call orl jmp pushl call pop ret mov orl mov mov mov mov mov mov jmp mov mov mov pop pop pop leave ret mov mov cmpl je xor ret jmp push mov cmpl push mov push push mov je pushl push push pushl call add cmpl pushl jne push jmp pushl call mov pushl pushl pushl push call mov push pushl inc mov pushl pushl pushl push pushl call add test je push push call pop pop pop pop ret push mov push push push mov push mov sub push push push mov mov mov andl mov mov mov call mov mov call mov mov call mov mov call mov mov andl movl pushl pushl push pushl push call add mov andl orl call mov mov mov pop pop pop leave ret pushl call pop ret mov andl push lea push call pop pop xor jmp mov mov mov mov call mov mov call mov mov cmpl jne cmpl jne cmpl jne cmpl jne cmpl je call push push call pop pop ret mov mov cmpl jne cmpl jne cmpl jne cmpl jne push pop ret xor ret push mov push push push mov push mov sub push push push mov mov mov test je cmpb je mov test je mov lea andl testb je mov push pushl call pop pop test je push push call pop pop test je mov mov mov add push push call pop pop mov jmp mov testb je mov push pushl call pop pop test je push push call pop pop test je pushl pushl push call add cmpl jne mov test je add push jmp cmpl mov push pushl jne call pop pop test je push push call pop pop test je pushl add push pushl call pop pop push push call add jmp call pop pop test je push push call pop pop test je pushl call pop test je testb je push lea push pushl call pop pop push pushl push call jmp lea push pushl call pop pop push pushl push call jmp call orl mov mov pop pop pop leave ret push pop ret mov jmp push mov push push push mov push mov push push push push push mov mov test je mov mov test je andl push pushl call orl mov mov pop pop pop leave ret xor cmp setne ret mov jmp mov push mov mov mov add test jl mov mov mov add add pop ret int3 push mov sub push push mov add mov mov push pushl mov mov call push push call pop pop mov pop mov push mov cmp jne mov push call pop pop pop leave ret push mov push push push mov push mov push push push push push mov xor mov call cmp je movl call call mov jmp push pop ret mov andl orl call jmp push mov push push push mov push mov push push push push push mov andl mov test je movl call jmp push pop ret mov andl orl call jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor push push push push push push push push mov lea mov or je inc bts jmp mov mov or je inc bt jae lea add pop leave ret push mov push push push mov push mov sub push push push mov xor cmp jne push push push pop push push mov push push call test je mov jmp push push push push push push call test je movl cmp jle pushl pushl call pop pop mov mov cmp jne pushl pushl pushl pushl pushl pushl call jmp cmp jne cmp jne mov mov push push pushl pushl mov neg sbb and inc push pushl call mov mov cmp je mov lea add and call mov mov mov orl jmp push pop ret mov xor mov orl mov cmp je push pushl pushl pushl push pushl call test je push push push pushl pushl pushl call mov mov cmp je testb je cmp je cmp jg pushl pushl push pushl pushl pushl call test jne xor lea mov mov pop pop pop leave ret movl lea add and call mov mov mov orl jmp push pop ret mov xor xor orl mov cmp je push push pushl pushl pushl pushl call test je cmp push push jne push push jmp pushl pushl push push push pushl call mov cmp je mov jmp mov mov test push lea je cmpb je inc mov dec test jne cmpb pop jne sub ret mov ret int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov xor or repnz cmp je dec dec cmp jae mov mov mov mov inc dec jmp mov pop pop leave ret push mov push push push mov push mov sub push push push mov imul mov mov cmp ja xor cmp jne push pop add and mov jmp xor mov cmp ja mov cmp jne mov cmp ja push call pop mov push call pop mov orl call cmp je pushl jmp xor mov push call pop ret cmp jne cmp ja push call pop movl mov shr push call pop mov orl call cmp je push push pushl call add cmp jne push push pushl call mov cmp jne cmp je push call pop test jne jmp xor mov push call pop ret mov mov mov pop pop pop leave ret push mov push mov lea cmp ja mov movzwl jmp mov push mov sar movzbl testb pop je andb mov mov push jmp andb mov push pop lea push push push push push lea push push call add test jne leave ret movzwl and leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov or mov jne mov mul ret push mul mov mov mull add mov mul add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov jmp lea mov mov push test je mov inc test je test jne mov mov add xor xor add test je mov test je test je test je test je jmp lea jmp lea jmp lea jmp lea mov test je mov inc test je mov inc test jne jmp mov add mov mov add xor xor mov add test je test je test je test je test je jmp mov mov pop ret mov mov movb pop ret mov mov pop ret mov mov pop ret mov test je mov inc test je test jne add mov mov add xor xor add test je mov test je test je test je test je jmp lea mov sub ret lea mov sub ret lea mov sub ret lea mov sub ret push mov push push push mov push mov sub push push push mov mov xor cmp jne lea push push pop push push push call test je mov jmp lea push push push push push call test je push pop mov cmp jne mov cmp jne mov pushl pushl pushl pushl push call jmp cmp jne cmp jne mov mov push push pushl pushl mov neg sbb and inc push pushl call mov cmp je mov lea mov add and call mov mov mov push push push call add jmp push pop ret mov xor xor orl cmp je pushl push pushl pushl push pushl call cmp je pushl push push pushl call jmp xor lea mov mov pop pop pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xor or repnz inc neg dec mov std repnz inc cmp je xor jmp mov cld pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov lea cmpl jne mov mov or je mov inc mov inc cmp je sub cmp sbb and add add xchg sub cmp sbb and add add cmp je sbb sbb movsbl jmp lock cmpl jg push jmp lock push call movl mov xor nop or je mov inc mov inc cmp je push push call mov add call add cmp je sbb sbb mov pop or jne lock jmp push call add mov pop pop pop leave ret push pushl pushl pushl call add ret push mov sub push andl push push mov mov lea mov cmpl jle movzbl push push call pop pop jmp mov movzbl mov and test je mov inc jmp cmp mov jne orl jmp cmp jne mov inc mov mov test jl cmp je cmp jg push test pop jne cmp je movl jmp mov cmp je cmp je movl jmp mov cmp jne cmp jne mov cmp je cmp jne mov inc inc mov or xor divl mov mov cmpl movzbl jle push push call pop pop jmp mov mov and test je movsbl sub jmp cmpl jle push push call pop pop jmp mov mov and test je movsbl push call pop mov sub cmp jae mov orl cmp jb jne or xor divl cmp jbe orl jmp imul add mov mov incl mov jmp mov decl mov test jne test je mov mov andl jmp test mov jne test jne and je cmpl ja test jne cmp jbe call testb movl je orl jmp mov and neg sbb neg add mov test je mov mov testb je mov neg mov mov jmp mov test je mov xor pop pop pop leave ret int3 int3 int3 int3 push mov push push push mov jecxz mov mov mov xor repnz neg add mov mov repz mov xor cmp ja je dec dec not mov pop pop pop leave ret push mov cmp jae mov mov sar and mov lea testb je push push call pushl pushl push call push mov call add mov pop pop ret call movl call andl or pop ret push mov push push call cmp pop jne call movl jmp pushl push pushl push call mov cmp jne call jmp xor test je push call pop or jmp mov and sar mov mov lea andb lea mov pop pop ret push mov cmp jae mov mov sar and mov lea testb je push push call pushl pushl push call push mov call add mov pop pop ret call movl call andl or pop ret push mov sub push push push xor cmp mov mov jne xor jmp mov sar lea mov and lea mov shl testb je push push pushl call add mov add testb je mov cmp mov mov jbe lea mov sub cmp jae mov incl mov cmp jne incl movb inc mov inc mov lea sub cmp jl mov lea sub lea push push lea push push mov pushl call test je mov add cmp jl mov sub cmp jb xor mov cmp jne cmp je push pop cmp jne call movl call mov jmp call mov jmp lea push push pushl pushl pushl call test je mov mov mov jmp call mov jmp pushl call pop or jmp mov testb je mov cmpb je call movl call mov jmp sub pop pop pop leave ret incl push call pop mov test mov je orl movl jmp orl lea mov movl mov andl mov ret mov cmp jb xor ret mov and sar lea mov mov and ret mov push push test pop jne mov jmp cmp jge mov mov push push call pop mov test pop jne push push mov call pop mov test pop jne push call pop xor mov mov mov add add cmp jl xor mov mov mov sar and mov lea mov cmp je test jne orl add inc cmp jl pop ret call cmpb je jmp ret mov mov cmp jb cmp ja sub sar add push call pop ret add push call ret mov cmp jge add push call pop ret mov add push call ret mov mov cmp jb cmp ja sub sar add push call pop ret add push call ret mov cmp jge add push call pop ret mov add push call ret push mov push push mov push push call mov xor cmp je push call push call pop push pop pushl pushl call pop mov test pop je push call pop jmp push call mov pop pop pop pop ret push mov mov test jne pop ret cmpl jne mov cmp ja push mov pop pop ret lea andl push push pushl push lea push push push pushl call test je cmpl je call movl or pop ret int3 push push mov or jne mov mov xor div mov mov div mov jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec xor mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov or jne mov mov xor div mov div mov xor jmp mov mov mov mov shr rcr shr rcr or jne div mov mull xchg mull add jb cmp ja jb cmp jbe sub sbb sub sbb neg neg sbb pop ret push xor cmp push push jne push call mov cmp je mov push push call test mov je push push call push push mov call mov mov test je call mov test je mov test je push call mov pushl pushl pushl push call pop pop pop ret xor jmp push push pop pushl pushl call test je xor mov pop ret push push pop pushl pushl call test je xor mov pop ret push push pop pushl call test je xor mov pop ret push call push call pop pop push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor push push push push push push push push mov lea mov or je inc bts jmp mov or nop inc mov or je inc bt jae mov add pop leave ret push mov push cmpl push push push jne mov cmp jl cmp jg add jmp mov mov push cmp pop jge cmp jle push push call pop pop jmp mov mov and test jne mov jmp mov mov sar movzbl testb je andb push mov mov pop jmp andb mov mov push push lea push push push lea push push pushl call add test je cmp jne movzbl jmp movzbl movzbl shl or pop pop pop leave ret push xor cmp jne mov cmp jl cmp jg sub pop ret push mov push push call cmp mov je push call push call pop push pop pushl call test pop mov je push call pop jmp push call mov pop pop pop ret push mov push cmpl push jne mov cmp jl cmp jg sub jmp mov cmp jge cmpl jle push push call pop pop jmp mov mov and test jne mov jmp mov mov sar movzbl testb je andb mov mov push jmp andb mov push pop lea push push push push push lea push push pushl call add test je cmp jne movzbl jmp movzbl movzbl shl or pop leave ret mov push cmp push jae mov sar lea mov and lea mov shl add testb je cmpl je cmpl jne xor sub je dec je dec jne push push jmp push push jmp push push call mov orl xor jmp call movl call andl or pop pop ret mov cmp jae mov and sar lea mov testb lea je mov ret call movl call andl or ret mov push mov and sar push push mov lea lea shl add cmpl jne push call cmpl pop jne lea push call incl push call pop mov lea push call pop pop pop ret mov mov and sar lea mov lea push call ret push push push xor call pop push pop cmp jle push mov mov shl mov test je testb je push call cmp pop je inc cmp jl mov mov add push call mov pushl call mov pop andl inc cmp jl pop push call pop mov pop pop ret push mov push call test pop je or pop ret testb je pushl call neg pop pop sbb ret xor pop ret push push mov xor push mov mov and cmp jne test je mov mov sub test jle push push pushl call add cmp jne mov test je and mov jmp orl or mov andl mov pop mov pop pop ret push call pop ret push push push push xor xor call xor pop cmp jle mov mov test je testb je push push call mov pop pop mov mov test je cmpl jne push call cmp pop je inc jmp cmpl jne test je push call cmp pop jne or mov pushl push call pop pop inc cmp jl push call cmpl pop mov je mov pop pop pop ret push call pop ret push mov sub mov andl dec push push dec push je dec dec je sub je sub je sub je sub je dec je or jmp mov mov jmp mov mov jmp mov mov jmp call mov pushl pushl call mov pop add pop mov jmp mov mov push movl call mov pop cmp jne cmpl je push call pop jmp xor cmp jne cmp je push call pop push call mov cmp je cmp je cmp jne mov cmp mov mov jne mov movl mov cmp jne mov mov add cmp jge lea shl mov add andl mov mov inc add cmp jl jmp mov cmpl je push call pop cmpl jne pushl push call pop pop jmp pushl call cmpl pop je cmpl jne mov cmpl mov jne mov mov xor pop pop pop leave ret mov mov push mov cmp push mov je lea lea add cmp jae cmp jne lea lea cmp jae cmp je xor pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov or je mov mov lea cmpl jne mov mov mov lea mov or mov je or je inc inc cmp jb cmp ja add cmp jb cmp ja add cmp jne dec jne xor cmp je mov jb neg jmp lock cmpl jg push jmp lock mov push call movl mov xor xor mov mov or mov je or je inc inc push push push call mov add call add pop cmp jne dec jne xor cmp je mov jb neg pop or jne lock jmp mov push call add mov mov pop pop pop leave ret push mov push or testb je andl jmp push call push call push mov call add mov pop pop ret push mov push or testb je push call push mov call pushl call add test jge or jmp mov test je push call andl pop andl mov pop pop ret push mov cmp push push jae mov sar lea mov and lea mov shl testb je push call mov pop testb je push call pop push call test jne call mov jmp xor test je call mov call movl or push call pop mov jmp call movl or pop pop pop ret push mov cmp jae mov mov sar and mov lea testb je push push call push call push mov call add mov pop pop ret call movl call andl or pop ret push mov push push call cmp pop je cmp je cmp jne push call push mov call pop cmp pop je push call pop push call test jne call mov jmp xor push call mov and sar pop mov lea andb test je push call pop or jmp xor pop pop ret push mov mov test je test je pushl call andw xor pop mov mov mov pop ret int3 int3 int3 int3 mov push call xor cmp setne mov ret nop nop nop nop nop nop nop nop nop nop sub push push mov push push push push push push push call mov cmp mov jne pop xor pop add ret lea movl push push movl call test je mov mov mov push push push push push mov push mov call test mov je push push push call mov add push push push push push call mov pop mov pop add ret nop nop nop nop nop nop nop nop nop nop push push mov push xor mov cmp je push call mov mov mov cmp je cmp je push call mov mov cmp je cmp je push call mov mov mov pop pop mov pop ret nop nop nop nop nop sub push xor push push push movl call mov test jne pop pop add ret push lea push push movl call mov push call lea push push call test je mov lea push push call add push call add test jne mov mov lea push push call mov mov cmp je lea push push call test jne push call pop pop mov pop pop add ret mov push call pop pop mov pop pop add ret nop push push call ret nop nop nop nop nop nop sub push push xor mov xor lea mov rep call mov cmp jne pop xor pop add ret lea movl push push call test jne pop pop add ret push lea push push movl call mov push call mov push call add cmp jl mov lea push push push call add test jne mov mov lea push push call mov mov cmp je lea push push call test je jmp mov push call pop pop mov pop pop add ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop mov push call add ret nop nop sub mov lea push push push movl call mov push push lea push push push push movl call add ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop mov mov cmp jb cmpl je push call xor ret nop nop push mov push mov push mov push push push push push push push call test jne push push push push push push push call test jne pop pop pop ret pop pop mov pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop push push push push mov test jne mov test je push push call test jne mov mov add cmp je mov mov mov add add add mov lea test je mov push push call add test je mov add add add test jne pop pop pop xor pop ret xor mov mov add pop pop pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop mov mov push push push push push call ret nop nop nop nop nop nop mov sub cmp push push push mov jne mov push call add mov xor cmp mov je push lea push push call mov push lea push push call add push call mov mov cmp jne push push call mov cmp jne push push call mov cmp jne push push call mov cmp jne push push call mov push push call push mov call mov cmp je cmp jne push push call mov cmp jne push push call mov mov cmp jne push push call mov cmp je cmp je cmp je mov cmp je cmp je cmp je lea push push push mov call push call mov push push call add push push push call mov cmp je push push call mov add test je push lea push push push push call test je push push call mov add test je push push push push push call test je mov test je push push push call add mov jmp push push push push push push push call mov neg sbb neg mov mov test pop je push call test je push call mov pop pop pop add ret pop pop xor pop add ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop sub push push push push push call mov push push call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call mov mov xor lea movl mov rep or mov mov mov mov mov push lea xor mov mov push push lea push push push mov mov mov movb movb movb movb movb movb movb movb movb mov mov call cmp jae mov lea push lea push push push push call cmp jae push lea push push lea push push push mov movl call cmp jae mov mov mov push lea push mov mov sub add mov lea lea lea push push push push mov call cmp jae mov lea mov push lea push lea push push push mov call cmp jae mov lea sub push mov call push call cmp jae mov mov mov mov mov mov mov lea mov push lea push lea push push push push lea push push mov mov call cmp jae mov cmp je mov mov testb jne mov push push call mov pop pop pop pop add ret nop nop nop nop nop nop nop nop push mov test jne xor pop ret mov test jne push call push push call mov mov mov push push push call add pop ret nop nop nop nop nop nop nop nop nop nop nop nop push mov test jne xor pop ret mov test jne push call push push call mov mov mov push push push call add pop ret nop nop nop nop nop nop nop nop nop nop nop nop push push mov test je mov test je mov test jne push call push push call mov push push call add pop pop ret pop or pop ret nop nop nop nop nop nop nop nop nop push push mov test je mov test je mov test jne push call push push call mov mov push push push call add pop pop ret pop or pop ret nop nop nop nop push mov test jne xor pop ret mov test jne push call push push call mov push call add pop ret nop nop nop nop nop nop push mov test jne xor pop ret mov test jne push call push push call mov push call add pop ret nop nop nop nop nop nop sub mov mov mov push push mov mov mov mov push lea push push mov mov movl movl call add test jne lea push push call mov add cmp je lea push call add mov test je mov pop pop add ret mov lea push mov call add pop pop add ret nop nop nop nop mov xor cmp je mov cmp je push mov mov mov mov push neg sbb push and mov mov mov push call add xor pop ret mov ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop push mov test je mov test je mov test je mov test je push push call add mov mov push push call add movl xor pop ret mov pop ret nop nop nop nop nop nop nop nop mov push push xor cmp je mov mov cmp jne cmpl jne mov cmp jne pop mov pop ret mov mov cmp jne movl mov cmp jne movl mov push push push call add cmp mov jne pop mov pop ret mov mov mov cmp mov jge mov neg movl cmp jl cmp jg mov mov shl mov mov mov neg sbb push not and push push call mov add mov mov push cmp jne call add mov pop pop ret call add xor pop pop ret push call add mov pop pop ret pop mov pop ret nop nop mov mov mov push push push push call add ret nop nop nop nop nop nop push push push mov test push je mov test je cmpl je mov xor cmp mov setne dec mov and mov mov mov cmp ja jmp mov test je dec xor mov mov inc mov mov mov mov mov mov mov mov and inc cmp mov je movl mov movl mov jmp mov mov shr add cmp jbe movl mov movl mov jmp movl mov test je dec xor mov mov inc mov mov mov mov xor mov mov inc mov mov shl add div test je movl mov mov mov movl mov jmp test jne movl mov mov jmp mov push push push call mov add cmp jne mov movl mov movl jmp test jne mov cmp jne mov mov mov lea push push push call mov add mov test je movl jmp movl mov test je dec mov mov mov inc xor mov mov mov mov shl mov mov inc mov mov movl mov test je mov mov dec inc mov mov mov xor mov mov mov shl add mov mov inc mov mov movl mov test je mov mov dec inc mov mov mov xor mov mov mov shl add mov mov inc mov mov movl mov test je mov mov dec inc mov mov mov xor mov mov add mov mov mov inc mov mov mov mov cmp je movl mov movl mov jmp mov mov mov movl mov test jne mov pop pop pop pop ret mov mov dec inc mov xor mov mov mov mov shl mov mov mov inc mov movl mov test jne mov pop pop pop pop ret mov dec mov mov inc xor mov mov mov mov mov shl add mov mov mov inc mov movl mov test jne mov pop pop pop pop ret mov dec mov mov inc xor mov mov mov mov mov shl add mov mov inc mov mov mov mov test jne mov pop pop pop pop ret mov mov dec inc mov mov mov xor mov mov add pop mov mov inc mov mov mov mov pop movl pop mov pop ret mov movl mov movl movl pop pop pop mov pop ret mov movl pop pop pop mov pop ret pop pop pop mov pop ret nop out add pop mov adc add mov add (bad) mov add aad add inc mov add mov add jmp add jae add jge add mov push mov push test je mov mov mov mov cmp je cmp jne mov mov push push call add cmpl jne mov push push call add mov movl mov mov mov movl test movl je push push push call mov add mov pop pop ret nop nop nop nop nop push push push mov push push mov push call mov add test jne pop pop pop ret mov push push push call add mov test jne mov push push call add xor pop pop pop ret mov mov push push push call add mov test jne mov mov push push call mov push push call add xor pop pop pop ret mov push add push push mov mov movl call add mov pop pop pop ret sub mov push mov push mov mov mov mov mov mov mov mov push cmp push mov mov jae sub dec jmp mov sub mov mov cmp ja jmp mov cmp jae mov mov test je xor dec mov movl mov mov shl add mov or inc cmp mov mov jb jmp mov mov and mov shr and cmp mov ja jmp sub movl mov and shr shr sub mov jmp mov lea push lea push lea push lea push push call mov mov mov push mov push mov push push push call add mov test je shr mov sub movl jmp shr mov sub movl jmp mov mov mov cmp jae xor cmp je xor mov mov dec mov mov shl add mov or inc cmp mov jb mov mov not and shr xor jne xor mov cmp mov mov je mov mov jmp mov test je mov test jne mov mov cmp jne mov mov cmp je mov cmp mov jae sub dec mov jmp sub test mov jne mov mov push push push mov call mov mov add cmp mov mov jae mov sub dec jmp mov sub mov mov cmp mov jne mov cmp je mov cmp mov jae sub dec mov jmp mov sub mov test je mov mov movl cmp jbe mov cmp jbe mov mov mov mov mov shr rep mov mov and sub rep mov mov mov add mov mov sub add sub mov mov mov mov jne mov neg sbb and mov jmp mov cmp jae mov mov test je xor dec mov movl mov mov shl add mov or inc cmp mov jb mov and mov mov and cmp ja mov and cmp ja mov push shr and lea mov push push call add mov test je shr sub movl movl jmp mov mov mov mov shr add cmp jae cmp jae mov mov test je mov xor mov dec mov mov mov add shl movl or inc cmp mov jb mov mov and sub mov mov shr mov mov inc mov mov mov shr add cmp jb mov mov cmp jae mov mov mov movl mov inc mov mov cmp jb mov push lea lea push mov push push push movl call add mov test jne mov movl jmp mov mov mov mov mov and shr and lea cmp jae mov cmp jae mov test je mov xor dec movl mov mov mov mov mov shl mov add or inc cmp mov jb mov mov and xor mov lea mov mov cmp mov jae mov sub mov shr mov mov mov inc jmp cmp mov je lea sub mov neg sbb add and mov add cmp jae mov test je mov xor dec movl mov mov mov mov mov shl mov add or inc mov mov cmp jb mov mov shr mov mov and add mov shr add mov sub mov mov mov mov and shr and lea mov add cmp ja cmpl jne mov cmp jb mov mov jmp mov xor mov inc mov mov dec mov jne mov mov mov mov shr and and lea cmp jb mov mov push push lea lea push push lea lea push mov push mov shr and and inc push add push push movl movl movl call add mov test jne mov mov mov push push mov push push push call add test je mov mov mov push push call add movl jmp mov mov mov mov mov mov mov mov mov mov sub mov mov add mov mov push push push mov call add cmp jne mov push push movl call mov mov mov mov mov mov mov add cmp mov mov mov jae sub dec jmp mov sub mov mov test jne movl jmp mov mov mov mov mov mov sub mov add mov push push movl mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub mov add push push mov mov push mov call add pop pop pop pop add ret mov mov movl add shr movl mov mov mov mov mov mov push sub mov add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov sub mov mov add mov mov push push push mov call add pop pop pop pop add ret mov movl mov push movl mov mov mov mov sub add mov mov push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub mov mov add mov movl push push mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov mov mov sub add mov mov mov push push push call add pop pop pop pop add ret mov mov mov mov mov mov mov mov mov sub add mov push push movl mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov push mov push sub mov add push mov mov mov call add pop pop pop pop add ret mov mov movl push movl mov mov mov mov mov mov push mov mov mov sub add push mov mov call add pop pop pop pop add ret cmpl jne mov mov push push call add movl mov mov mov mov mov mov mov mov sub mov mov add mov mov push push push mov call add pop pop pop pop add ret mov mov mov mov mov mov sub mov mov add mov mov push push movl push mov call add pop pop pop pop add ret mov mov push push call mov mov movl movl mov mov mov mov mov mov sub mov mov add push push mov push mov call add pop pop pop pop add ret cmpl jne mov mov push push call add movl mov mov mov mov mov mov mov mov mov mov sub add push mov mov push push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub mov mov add push push mov push mov call add pop pop pop pop add ret movl jmp mov mov mov mov mov push push push call mov mov add cmp je mov mov mov mov mov mov mov mov sub mov add mov mov push push push call add pop pop pop pop add ret movl jmp mov mov mov mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov mov mov sub mov mov add push push mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov mov push mov mov mov sub add push mov push mov call add pop pop pop pop add ret lea xor add sub add int3 mov add pop rolb lods ret jp add loope add and mov add adc ret add nop nop nop nop nop nop nop nop push mov push mov push push push call mov mov push push call mov mov push push call mov push push call add xor pop pop ret nop nop nop nop nop nop nop push mov push mov mov and shr test jne pop mov pop ret push mov test jbe push cmp mov jb mov sub cmp jl mov shr mov neg shl add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add add dec jne test je xor mov add inc add dec jne mov xor mov div mov mov mov xor div test mov ja pop mov pop shl pop or pop ret nop nop mov mov push push call add ret nop nop nop nop nop nop nop nop nop nop nop nop nop mov push call pop ret nop nop nop nop mov push push mov push call add test je mov mov mov mov mov mov movl mov mov ret nop nop nop nop nop nop nop sub push push push mov push mov mov mov mov mov mov mov mov mov mov mov cmp jae sub dec jmp mov sub mov mov cmp ja jmp cmpl jb cmpl jb mov mov mov mov mov mov mov mov sub mov add mov mov mov mov mov push push push push xor xor mov mov push push call mov mov mov mov mov mov mov mov add cmp mov jae sub dec jmp mov sub test mov je mov dec neg sbb and add mov mov jmp mov xor mov movl mov mov mov mov cmp mov jae mov test je dec mov mov xor mov add shl mov movl or mov inc cmp mov jb mov mov and mov mov lea xor mov mov mov shr mov mov mov sub mov xor mov test jne mov mov mov movl jmp test je mov and mov mov mov movl mov jmp test jne mov mov mov mov lea mov mov jmp mov test je movl jmp mov cmp mov jae mov test je dec mov mov xor mov add shl mov movl or mov inc cmp mov jb mov mov and mov add mov mov shr mov mov sub mov xor mov movl mov mov mov mov cmp mov jae mov test je dec mov mov xor mov add shl mov movl or mov inc cmp mov jb mov mov and mov mov lea xor mov mov mov shr mov sub xor mov mov mov test je mov and mov mov mov movl mov jmp test jne jmp mov cmp mov jae mov test je dec mov mov xor mov add shl mov movl or mov inc cmp mov jb mov mov and mov add mov mov shr mov mov sub mov movl mov sub mov cmp mov jae mov sub mov mov jmp mov add mov cmp jb mov mov mov test je mov test jne mov cmp mov jne mov mov cmp je mov cmp jae sub dec jmp mov sub test mov jne mov mov push push push call mov mov mov add cmp jae mov sub dec jmp mov sub mov mov cmp mov jne mov cmp je mov cmp jae sub dec jmp mov sub mov mov test je mov mov inc movl mov mov mov inc mov mov dec mov mov cmp jne mov mov mov dec mov jne movl jmp mov test jne mov cmp mov jne mov mov cmp je mov cmp jae sub dec jmp mov sub test mov jne mov mov push push push call mov mov mov add cmp jae mov sub dec jmp mov sub mov mov cmp mov jne mov cmp je mov cmp jae sub dec jmp mov sub mov mov test je mov mov movl mov mov inc dec mov movl jmp movl movl jmp mov mov mov mov mov mov sub movl add mov mov mov mov push push push call add pop pop pop pop add ret mov movl movl mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub mov add mov mov push push push mov call add pop pop pop pop add ret cmp jbe mov sub inc dec mov mov mov push push push call mov mov add cmp je mov mov mov mov mov mov mov push sub mov add push mov mov push mov call add pop pop pop pop add ret mov movl mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov and add in add fxch add pop int adc into add jp add cmpsb iret add aaa roll adc roll adc nop nop nop mov push mov mov push call add ret nop nop nop nop nop nop nop nop nop nop nop nop push push push mov push push movl mov push call mov add test jne pop mov pop pop ret mov mov push mov push lea push push mov push push push push push push push push call mov add cmp jne mov push push movl call add mov pop pop pop pop pop ret cmp je cmpl jne movl mov mov push push call add mov pop pop pop pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop sub mov push push push mov push xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov lea inc dec mov jne cmp jne mov mov mov mov pop pop pop xor pop add ret mov mov lea mov mov cmp jne inc add cmp jbe mov cmp mov jae mov mov mov lea cmp jne dec sub cmp jne cmp mov jbe mov mov mov mov shl cmp jae lea sub js inc add shl cmp jb lea mov mov lea sub mov jns pop pop pop mov pop add ret add mov mov xor dec je xor add add dec mov jne mov xor mov add cmp mov je mov mov lea mov mov inc mov mov mov inc cmp jb mov mov neg mov mov mov mov cmp mov mov mov movl mov mov mov jg mov lea lea mov mov mov mov mov dec test mov je jmp mov lea cmp jle inc mov jmp mov mov mov add inc add mov mov sub mov cmp jbe mov mov mov sub mov shl cmp jbe mov or sub mov add cmp jae inc cmp jae mov add shl cmp jbe sub inc cmp jb mov mov shl mov mov add cmp ja mov mov mov lea mov test lea mov mov mov je mov mov mov mov mov mov mov mov sub mov shr mov mov sub sar sub mov mov jmp mov mov mov mov mov cmp jg mov mov mov sub mov mov lea cmp jb movb jmp mov mov cmp jae cmp sbb and add mov jmp sub mov shl mov mov add mov mov add mov mov mov sub mov shl mov shr cmp jae mov lea mov add mov lea mov add cmp jb mov mov shl test je xor shr test jne mov mov mov xor shl mov lea mov dec and cmp je mov dec sub mov mov sub shl mov dec and cmp jne mov mov mov mov dec mov mov test jne mov mov add inc mov mov inc cmp mov mov jle mov xor cmp je cmpl je pop pop pop mov pop add ret nop nop nop nop nop nop nop push push mov push push mov push push push push movl call mov add test jne pop pop pop mov pop pop ret mov mov mov lea push push mov push mov push push push push push push push call mov add test jne mov cmpl je mov mov lea push push mov push mov push mov push push push push lea push push call mov add test jne mov cmpl jne cmp ja mov push push call add xor pop pop pop pop pop ret cmp jne mov push push movl call add mov pop pop pop pop pop ret cmp jne mov push push movl mov call add mov pop pop pop pop pop ret cmp je movl mov mov push push call add mov pop pop pop pop pop ret cmp jne mov push push movl call add mov pop pop pop pop pop ret cmp je movl mov mov push push call add mov pop pop pop pop pop ret nop nop nop nop nop nop nop mov mov mov mov mov mov mov mov xor movl movl ret nop nop push push mov push push mov mov push mov mov cmp mov mov jbe mov mov sub cmp jbe mov test je cmpl jne movl mov sub add mov mov mov test je mov push push push call mov add mov mov mov mov mov shr rep mov mov and add rep mov mov add cmp mov jne mov mov cmp mov jne mov mov mov sub mov cmp jbe mov test je cmpl jne movl mov sub add mov mov mov test je mov push push push call mov add mov mov mov mov mov shr rep add mov mov mov and add rep mov mov mov pop pop mov mov mov pop pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop sub mov mov push push mov mov mov push mov push mov mov mov cmp mov jae sub dec mov jmp mov sub mov mov mov mov mov mov mov cmp jae mov dec mov xor mov mov mov shl add or inc cmp jb mov mov mov and xor mov lea test je xor mov shr sub mov test jne test jne mov mov and add xor mov lea test je xor mov shr sub mov test je and sub mov and add mov mov shr cmp jae mov dec mov xor mov mov mov shl add or inc cmp jb mov mov mov and xor mov lea xor mov shr sub mov test jne test jne mov mov and add xor mov lea xor mov shr sub mov test je and cmp jae mov dec mov xor mov mov mov shl add or mov inc cmp mov jb mov mov mov and add mov shr mov sub sub mov mov sub mov mov cmp jae mov mov sub add cmp jb mov sub cmp jbe sub mov mov inc inc dec jne mov mov mov mov inc inc dec jne mov jmp mov mov mov inc inc mov inc inc sub mov mov inc inc dec jne mov jmp mov mov mov inc inc mov inc inc sub mov mov inc inc dec jne mov jmp xor mov shr sub mov mov mov inc dec mov cmpl jb cmpl jb jmp mov mov mov movl sub mov mov mov shr cmp jb jmp mov mov mov sub mov shr cmp jae mov mov sub mov lea sub mov mov mov add mov mov mov mov sub add mov mov pop pop pop xor pop add ret test je mov mov mov sub mov shr cmp jae mov mov sub mov lea sub mov mov mov add mov mov mov mov sub add mov mov pop pop pop mov pop add ret mov mov mov movl sub mov mov mov shr cmp jb mov mov sub mov lea sub mov mov mov add mov mov mov sub mov add mov mov pop pop pop mov pop add ret nop nop nop nop nop nop nop nop nop nop jmp jmp jmp jmp jmp jmp jmp jmp push mov push lea movl push pushl call neg sbb neg mov pop ret mov push test mov je andl cmpl jne mov call cmpl je pushl lea push pushl call jmp mov andb mov pop ret push mov push lea push push movl call push mov push xor mov mov mov mov mov call mov pop pop ret mov mov mov decl mov jne call ret mov push mov mov test mov je andl jmp andl push call mov pop ret mov imul add push call pop mov mov mov mov ret test je push mov push call pop test mov jne pop ret mov xor mov mov mov mov mov movl movl mov ret push mov call testb je push call pop mov pop ret push push mov mov test je push call andl pop cmpl mov je push mov shl push call push push push mov call add pop mov pop pop ret push mov mov test je push call andl pop mov andl andl call andl pop ret mov call push mov movl andl call mov mov leave ret push mov cmpl jne push lea pushl push call mov add lea dec test lea jl inc mov mov mov sub dec jne mov mov incl mov andl andl pop ret mov mov mov decl mov jne call ret push mov mov xor shr divl mov mov mov test je mov test je cmp je mov jmp xor pop ret push mov test push je mov xor mov shr divl mov test je cmp je mov jmp mov jmp xor pop pop ret push mov push push mov lea push mov push call test jne cmp jne push mov pushl call mov call mov mov mov mov mov mov mov mov pop add pop pop ret push mov test push je mov xor mov shr divl mov lea test je cmp je mov mov jmp mov push mov call push pop jmp xor pop pop ret mov push push mov cmp jne mov xor test jbe mov mov test jne inc add cmp jb mov test jne mov push mov xor shr div inc cmp jae mov lea mov test jne inc add cmp jb pop mov mov mov mov mov mov mov pop mov pop ret call xor ret mov mov mov ret push push mov push call mov pop test jne mov test je push call test pop jne mov pop pop ret pushl call pop ret mov mov mov ret cmpl jle test je mov push call ret push mov sub mov lea push lea push push call test je pushl lea pushl push call jmp cmpl jne movl pushl pushl pushl call leave ret mov call sub push push xor push cmp mov je mov mov call mov mov mov pop pop mov pop leave ret mov call mov ret push mov sub push mov push lea push push pushl mov call mov mov sub cmp jbe mov lea push call xor test setg jmp push mov mov add push lea push call push pushl call mov mov sub cmp jle mov push call xor test setg pop pop pop leave ret push call pushl mov mov push pushl push call test jne and pop ret call jmp push push mov call ret push call pop ret mov jmp call jmp push push mov call ret push call pop ret mov jmp call jmp push push mov call ret push call pop ret mov jmp call jmp push push mov call ret push call pop ret mov jmp push push mov mov test jne mov mov jmp push push pop cmp jg mov call mov jmp mov cmp jg mov jmp mov cmp jg mov jmp mov cmp jg mov jmp lea push call pop mov movl andb mov add mov pop pop pop ret mov cmp jne push mov call ret cmp jne push mov jmp cmp jne push mov jmp cmp push jne mov jmp call pop ret push mov mov lea cmp je add push call test jg mov sub call mov mov pop ret push mov cmp je push call test jg mov call pop ret push push mov mov cmpl jle call pushl mov call mov inc push push pushl call add pop pop ret push mov push mov mov cmpl jg cmp jle mov call push mov call pop pop ret push mov mov lea cmp je add push call test jg mov sub call pop ret push push mov mov push call push pushl pushl call mov add mov mov andb pop pop ret push push mov mov test jne xor jmp push call push push mov call mov pop pop ret push push mov mov mov cmpl lea jg cmp jle push mov cmp jge mov push mov call lea push lea push pushl call mov add push mov call pop mov pop pop ret push mov call mov cmp jne pushl call mov mov mov pop andb ret call mov test jne call mov ret mov push pop xor mov mov mov mov mov mov ret mov call push mov mov andl add test je call mov mov leave ret push mov mov push push push test pop je mov mov mov mov jmp mov cmp ja je dec dec je sub je dec je sub je sub je dec jne mov mov pushl pushl call jmp mov mov pushl pushl call jmp mov call jmp pushl jmp mov call jmp pushl jmp mov mov pushl pushl pushl call jmp sub je sub je dec je dec je dec je xor jmp pushl mov call jmp pushl mov call jmp pushl mov mov push call xor cmp sete andl jmp mov mov push call jmp mov mov pushl pushl pushl call mov mov pop pop pop ret push mov mov push push push cmp mov jne call pushl mov mov pushl mov pushl push call jmp cmp jne mov andl mov mov mov mov call mov test je cmpl jne mov mov test je cmpl je cmpl jne cmp jne cmpl jne cmpl je jmp mov test je push push pushl call add test jne mov movl mov add jmp mov jmp mov jmp cmp je mov movzwl shr mov jne mov mov mov call mov test je pushl pushl push pushl call test jne mov jmp pushl pushl pushl pushl pushl pushl push call jmp xor pop pop pop pop ret push pop ret mov ret call mov push mov mov call ret call mov push mov mov call ret mov ret mov ret mov ret push pop ret mov ret mov ret mov xor movl mov mov mov mov mov mov mov mov mov ret push mov mov test je cmpl jne mov neg sbb and add or push pushl pushl call jmp cmpl push jne mov call cmp jne pushl call push call mov test je mov push push pushl call push call mov call pushl mov call pop movl pop ret push mov push mov test je cmpl jne mov neg sbb and or push pushl pushl call jmp mov mov push push push pushl call test je mov push pushl push pushl call pop pop ret push push mov xor xor cmp mov setne push mov call cmp je cmp jne cmp jne call cmp je pushl mov push push pushl pushl call pop pop ret push mov mov test je cmpl jne mov push mov push push pushl call pushl and or pushl push mov pushl pushl call pop jmp pushl mov pushl call pop ret jmp push call mov ret call jmp push mov call ret push call pop ret testb jne orb mov jmp ret call jmp push mov call ret push call pop ret testb jne orb mov jmp ret call jmp push mov call ret push call pop ret testb jne orb mov jmp ret call jmp push mov call ret push call pop ret testb jne orb mov jmp ret push mov call push lea push push movl call add mov pop ret push mov call testb je push call pop mov pop ret push push mov call lea push push push movl call mov add mov mov pop pop ret push mov pushl pushl call mov call mov pop mov ret push mov sub testb push jne mov mov call test jne lea push pushl call mov mov cmp jne mov cmp jne push pushl call push call test je mov call test jne mov mov call test je push mov call pop leave ret push mov push push push push mov push mov call test jne mov call mov mov mov call cmp je mov test mov jne and jmp mov mov lea push pushl push pushl call pop pop pop leave ret push mov cmpl push jne cmpl je cmpl je cmpl jne mov call test je pushl call push call mov test je call push call cmp je mov call test je pushl call push pop jmp xor pop pop ret mov call sub push push push mov mov push call mov push pop lea lea andl mov mov rep mov mov mov mov mov cmp mov mov mov mov jne mov test je mov push call andl cmp jne lea push lea push push call pushl mov mov pushl push call cmp mov jne pushl lea push push call jmp call test je mov mov add push mov pushl call mov jmp andl mov call mov ret mov push mov lea pop lea rep mov pop pop mov pop leave ret push push mov call mov call mov call movswl shr movswl mov mov lea pop ret push mov push mov call pushl mov mov pushl pushl call pop ret mov call push call mov cmpl jne cmpl je push push call push mov call pop mov mov andl test je push push push call jmp xor orl push mov call pop mov mov pop mov leave ret push push push call mov pushl mov call mov push mov call mov pop pop ret push call mov xor test je pushl add call ret push mov push mov test jne xor jmp push push call mov push mov lea call push mov mov call push pop pop pop pop ret push mov push mov test je push call test je pushl lea call andl andl mov pop pop ret ret push mov cmpl push jne push pop jmp mov push call test je cmp jne pushl pushl pushl push push call jmp pushl pushl pushl push call pop pop ret mov ret mov call sub push push push mov mov mov push push call andl andl mov mov push sub pop je sub je sub je sub jne push call mov lea push lea push push call pushl pushl push push pushl call pushl mov lea push push call mov mov pop pop mov pop leave ret pushl push push call push push call push call push call jmp push call mov shr push movswl push push call xor test sete jmp pushl call push mov call push pushl push call test je pushl pushl pushl push pushl call mov jmp mov mov mov mov mov mov mov mov call mov lea push mov pushl call mov mov call mov ret push mov push push push mov call mov mov mov test je cmp je cmp je cmp je cmp je cmp jne pushl push lea push pushl pushl call test je mov jmp pushl pushl push pushl call pop pop pop ret push mov sub push mov call cmpl mov je pushl pushl pushl pushl call jmp mov push push mov push mov call movzbl mov mov test jne testb jne test jne cmpl je push push call test jne mov mov shr test jne and lea push push mov push call lea push push call test je test je push mov call mov mov call mov mov call cmpl mov jne cmpl jne mov test je cmpl je push push push push push call test mov je call push push mov call pushl mov sub push neg sbb inc call test jne pushl push push call jmp call mov push push push call cmp je mov mov mov andl jmp push push call test mov je mov mov push push call test jne pushl push push call push push call cmp jne push call mov cmpl mov jne mov push push push call mov pushl push push pushl call cmpl mov je pushl call andl mov pop pop pop leave ret push push push mov call mov mov cmp je cmpl jne call push push push push call test mov jne call mov pop pop ret push push mov call mov call cmpb je mov test je push call andl cmpl je andl xor pop ret push pop pop ret push mov sub mov push mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov call mov lea mov mov mov mov push mov call test jne mov mov call xor jmp push push call pushl pushl pushl pushl pushl pushl pushl pushl pushl pushl pushl pushl call mov call test jne mov mov call xor test setne pop pop leave ret push mov cmpl jne push call movl push pop pop ret push mov mov push test push jne xor jmp mov pushl mov pushl mov mov push mov mov sub sub push push mov push or push push pushl pushl push call pop pop pop ret mov call push push mov mov movl andl cmpl je cmp je cmp je cmp je cmp je call mov test je mov push call mov test je cmp jne andl orl mov call mov pop mov leave ret push mov mov test je mov push call andl mov call pop ret push mov sub push push push mov call mov xor cmp je cmp jne call cmp jne call cmp jne call test je push call mov cmp jne mov mov cmp je mov call mov mov push test pop je mov push call andl test je call mov test je cmpl je push lea push push call mov add mov mov lea movl push push push mov pushl call mov push pushl call mov mov call push pushl call cmp jne mov mov call mov test je push push pushl call mov call mov mov call pop pop pop leave ret cmpl mov je jmp jmp push mov cmpl jne xor pop ret push push push call pushl lea call mov mov test jne pushl call jmp mov call test mov jne mov call mov pop pop pop ret push mov push mov mov test jne mov call mov test jne pushl pushl pushl pushl call jmp pushl pushl pushl pushl push call pop pop ret lea ret push mov call mov test je push pushl call xor pop ret push call mov mov test je mov test je push push push push call cmpl mov je test je push call test jl mov push mov call pop ret push mov push push pushl mov pushl pushl call mov test je push push call mov movzwl test mov je cmpl jb mov orl orl push push push push mov mov call test jne orl mov pop jmp or pop pop pop ret push mov push mov cmpl jne pushl call test je mov push mov call jmp push pushl call test jne mov call pop pop ret push mov lea push push mov mov pushl call test je mov jmp mov call pop pop ret mov push push mov pushl call test jne mov call pop ret push mov push mov mov test je lea push call test je mov jmp mov call pop pop ret push push mov push pushl call mov xor test jle push pushl call push call test je pushl push call test jne jmp push pushl call cmp je inc cmp jl xor pop pop pop ret pushl call jmp push mov push mov cmpl jne push mov call mov cmp jne pushl jmp push call push call pushl push call test je mov push mov call jmp mov push push pushl call test je push mov call test jne mov call pop pop ret mov call sub push push mov push lea mov push pushl pushl call test jne push call test jne xor jmp call xor cmp je push call mov call pushl mov lea push call lea movb push push mov call orl push call push pop mov pop pop mov pop leave ret push call xor push push call push mov sub mov push mov mov mov push mov mov call mov lea sub push mov mov push push mov call pop leave ret mov call push push push mov call mov mov call mov call mov xor mov mov call test je mov mov call push mov push push push pushl call push push push push push pushl call mov call push mov push push pushl call push push push push push pushl call call cmp je push push push push call pushl mov pushl pushl pushl call test pop jne push push push call orl call mov call mov pop pop mov leave ret mov ret push mov push mov mov mov mov cmpl je cmp je add jmp cmp jne cmp jb cmp ja mov jmp xor mov mov pop pop ret push mov push push mov lea andl mov push pushl mov pushl pushl call test jne pushl mov mov pushl pushl call mov mov pop leave ret mov call sub andl push mov push push cmp mov jne pushl mov pushl call test je jmp cmp jne mov cmpl je mov lea push push pushl mov call test jne jmp mov cmp jne push call push pushl push call cmp jne mov shr push movswl push push call test jne mov mov call mov mov mov mov and and push xor call mov lea cmp lea mov jne cmp jne mov push mov call test je cmpl jb jmp test mov mov je jmp mov mov mov cmp jae push push push pushl call test mov jne jmp mov push push push push call test mov je jmp mov mov mov cmp je push push add push push call test mov jne mov mov test mov jne andl push call xor mov pop pop pop mov leave ret push mov call mov mov mov cmpl mov jne call mov cmp sbb and add dec cmp ja jmp pushl call push jmp pushl jmp mov shr push movswl push pushl call jmp push pushl call jmp lea call mov andl lea mov call mov mov push movb mov call test jne mov test je pushl lea call test je mov lea push push lea mov push call andl andl andb lea mov call orl lea jmp lea call mov pushl mov lea push mov movl call andl orl mov lea call jmp mov shr push push call jmp mov shr push movzwl jmp push mov call jmp push call push mov shr push movzwl push mov call jmp mov call jmp pushl jmp mov shr movswl push movswl push jmp mov shr push movzwl jmp pushl call push push call push xor cmp sete push jmp pushl call push jmp pushl call jmp mov shr push movzwl push pushl call jmp pushl jmp push call jmp mov shr push movzwl jmp movswl shr movswl push push pushl call jmp push pushl call jmp push call push jmp mov shr push push call jmp mov movswl shr cmpl mov movswl mov jne push call push pushl pushl jmp push push jmp push pushl mov call jmp movswl shr movswl push push jmp mov call jmp push mov call jmp mov push shr push movzwl jmp movswl shr movswl push push pushl mov call jmp push mov pushl call movl jmp movzwl shr push push mov mov shr push movzwl push call mov jmp push mov call mov mov push pushl mov call mov mov test je mov mov push pop jmp jg add lea add xchg add adc add adc add ja add xchg add adc add adc add adc add adc add adc add adc add adc add adc add adc add sub add xor add adc add arpl add insb add adc add jnp add movb adc add adc add adc add adc add adc add adc add adc add adc add adc add adc add adc add adc add adc add adc icebp call movl movl mov pop ret mov movl mov ret push mov sub mov push push push movzwl xor mov shr cmp mov jne cmp je lea call mov lea push push push push mov mov call cmp je mov mov push push mov pushl push call pop pop pop leave ret push mov call mov cmp je push pushl call test je push pop jmp cmp jne xor jmp push mov sub push push mov push mov mov push call movzwl mov mov push mov mov call mov cmp je pushl push call test je push pop jmp mov lea push push movzwl or mov mov push pushl mov mov call pop pop pop leave ret push mov push call test je mov call test je mov jmp push push call test je push call jmp push push call pop ret test je mov test jne xor ret push mov push call test je mov push jmp push call pop ret push mov push push pushl pushl call mov mov test je push call test je pushl pushl push call test jne cmpl push jne call jmp call test jne pushl call mov test je pushl pushl push call test jne push push call jmp xor pop pop pop ret push mov push push pushl mov call mov test je cmpl je push call test je pushl pushl pushl pushl push call jmp pushl pushl pushl push call cmpl je push call test je pushl pushl pushl pushl pushl push call push push call jmp pop pop pop ret xor ret push mov call cmpl jne and push push mov call push pushl call pop ret push mov push mov call pushl mov mov pushl pushl pushl call pop ret mov call sub push push push call test je mov lea push mov call test jne push call push mov call test je mov test je push lea call mov test je push lea call pushl andl lea mov call andl orl lea mov call mov jmp xor jmp pushl mov call mov pop pop mov leave ret push mov cmpl push je pushl mov pushl lea push pushl call cmp jb cmp ja test je mov test je mov push pop jmp pushl pushl pushl pushl call pop pop ret push mov sub mov mov cmp push ja je cmp jb cmp jbe cmp je cmp jne mov mov mov mov mov xor lea push push movzwl or push push call jmp mov xor shr push or push push push call test je mov push cmp pop je mov jmp cmp jb cmp jbe cmp jne pushl add pushl pushl push call jmp cmp jb cmp ja mov add push mov mov lea push xor push push push mov call cmp pop jne xor pop leave ret cmpw push mov je cmpw jne push pushl call test jne mov call pop ret cmpw jne call testb jne push call xor ret push mov call mov test je cmp jne mov call call cmpb jne call test je call cmp jne push mov call mov test je call mov call test jne push push push push push pushl call mov call pop ret push push mov call cmpb jne push mov call mov call test je call cmp jne mov test je call andl push push mov call pop pop ret push mov call mov test je cmp jne pushl mov call mov call test jne call push push pushl pushl pushl pushl call pop ret push push push mov call test jne call mov test je mov push call test jl push call test jl push call test jl push push push pushl call push pop jmp mov call pop pop pop ret push mov call cmp jne mov call mov call test jne call push push pushl pushl pushl pushl call mov call pop ret push mov lea push push mov mov pushl call test je mov jmp mov call pop pop ret push mov mov test je push call test jne mov call pop ret push mov sub push push push mov mov push push push lea push mov push call test je lea push call push push push lea push push jmp mov call pop pop pop leave ret push mov push mov mov lea push call test je mov jmp mov call pop pop ret push mov sub cmpl je cmpl je mov cmp je test je cmp je cmp jne push pushl call test je lea push push pushl call pushl pushl call mov cmp jne push call push pushl call push pop jmp xor leave ret push mov sub push push mov push mov call mov mov test je mov jmp testb je pushl call jmp push pushl call mov test je push push push push call test je mov mov lea push pushl call testb jne test je push push call test je test je xor test movl jne call test je mov lea push push push call push call mov lea push lea push call lea push lea push call jmp lea push push call lea push push push call push call lea push lea push call jmp pushl call mov mov lea push push call lea push push call lea push push push push call mov mov mov add sub mov cltd sub sub mov mov cltd sub mov sar sar sub mov add cltd sub mov mov cltd sub sar sar sub cmp jge mov jmp mov add cmp jle sub add mov cmp jge mov jmp add cmp jle mov sub add push push push push push mov push call pop pop pop leave ret mov and ret mov mov mov test je and mov xor push push push pushl call ret mov push mov push mov call movzwl mov mov push push call test mov jne push push call mov push call pop pop ret push push mov push push call push mov call mov test je push push xor call test jne mov mov and cmp jne call mov jmp pushl call test je mov test jne call or push call mov pop pop pop ret push mov sub call mov mov not and jne push pop jmp push push push xor push lea push push xor call mov add mov call mov push testb mov mov pop mov mov je lea movl push movl call test je push pop testb je orb lea push movl call test je or testb je lea mov push movl movl call test je or testb je push lea push push mov mov call test je or test je push lea push push movl movl call test je or testb je lea push push movl call or andw testb je lea push push movl call or testb je lea push push movl call or mov test je push lea push mov call or mov test je push lea push movl call or mov test je lea push push movl call or mov test je lea push push movl call or mov test je push lea push movl call or mov test je push lea push movl call or mov test je push lea push mov call or mov test je push lea push mov call or mov test je push lea push movl call or mov test je push lea push movl call or mov mov or mov mov and cmp jne or or mov mov pop and pop pop sub neg sbb inc leave ret xor ret pushl mov call ret mov call push push mov push push lea mov call andl lea push mov call push push mov movb movl call mov mov mov mov mov mov mov mov pop pop mov leave ret mov call push push push push push mov test mov mov jne xor mov pop pop mov pop leave ret push lea call test jne lea push call test je mov mov add cmpl jne mov jmp push call mov andl mov call mov test jne call push lea call pushl orl mov call mov mov add cmpl jne mov mov jmp pushl call push push call push mov sub push mov test je mov neg sbb test mov je push lea lea mov push lea push lea push call mov add andl cmpl jne andl mov test je mov push call cmpl jne pop lea call pop leave ret pushl mov pushl mov pushl call ret mov test jne push pushl call ret mov mov jmp mov test jne push pushl call ret mov mov jmp push mov mov test jne mov test je mov pushl pushl pushl pushl pushl push pushl call jmp pushl mov mov pushl pushl pushl pushl pushl call pop ret mov test jne pushl call ret mov mov jmp mov test jne pushl pushl call jmp mov pushl mov call ret mov test jne pushl call push call ret mov mov jmp push mov test je cmpl jne pushl call push mov lea call test je mov test je mov push mov call pop ret push push mov mov push call push mov call push mov call push mov call push mov call mov push mov call push mov call mov pop pop ret push push push mov mov push call push mov call cmpl mov je call jmp call push call mov mov push push call push push mov call push push mov call pop pop pop ret push mov push push push mov push xor mov cmp je mov push call movzwl pushl add push call test jne lea push push pushl call test je mov cmp je push call push push push pushl pushl push call push push call push mov call push push push pushl pushl push call cmp je pushl call mov pushl call pop pop pop leave ret mov call push call mov cmpl jne cmpl je push push call push mov call pop mov mov andl test je push push push call jmp xor orl push mov call pop mov mov pop mov leave ret push call mov pushl call ret push call mov xor test je pushl add call ret push mov push mov test je push call test je pushl lea call andl mov pop pop ret cmpl jne xor ret call push call ret ret push mov sub cmpl je push pushl call and cmp je xor jmp lea push push pushl call lea push push call neg sbb inc leave ret push mov sub push lea push push pushl call mov push pushl call mov test je push call cmp je push push call test je lea push push call pushl lea pushl push call test jne push push jmp mov jmp xor pop pop leave ret push mov sub push pushl call mov mov cmp ja push lea push pushl call cmp jne pushl lea push call test je pushl pushl call pop leave ret push mov mov test je push call andl pop ret push mov test je push call and mov dec test je push lea push call dec jne pop push call pop ret push call mov test je mov test je push call pop mov lea cmp ja pushl call andl pop jmp sub sub push pushl call pop pop push pop pop ret call xor pop ret mov xor movl mov mov mov ret push mov call testb je push call pop mov pop ret mov call push call mov cmpl jne cmpl je push push call push mov call pop mov mov andl test je push push push call jmp xor orl push mov call pop mov mov pop mov leave ret push call mov pushl call ret push mov push mov test je push call test je pushl lea call mov mov call andl mov pop pop ret mov call push mov movl andl cmpl je call push call mov mov leave ret mov mov ret mov mov ret andl ret andl ret push push mov xor push mov mov test je push call mov mov cmp je push call test je or pop mov pop pop ret push mov push mov mov push cmp pop je pushl push call mov test je test je pushl push call test je push pop jmp xor pop pop ret push push push mov pushl call mov mov mov xor cmp je push push call mov test je push push call push call pop pop pop ret push mov push mov xor push mov mov cmp je test je mov push push call mov test je test jne xor jmp mov push push call push call pop pop pop ret push mov or push mov mov cmp je pushl push call mov test je pushl push call pop pop ret push mov or push mov mov cmp je pushl push call mov test je pushl push call pop pop ret push mov xor push mov mov cmp je pushl push call mov test je pushl push call pop pop ret push mov push push push mov push mov mov cmp je lea push pushl pushl push call mov test je lea push pushl pushl push call mov mov pop pop mov mov mov leave ret push mov push push push mov push mov mov cmp je lea push pushl pushl push call mov test je lea push pushl pushl push call mov mov pop pop mov mov mov leave ret push mov push push push mov push mov mov cmp je lea push pushl pushl push call mov test je lea push pushl pushl push call mov mov pop pop mov mov mov leave ret push mov push push push mov push mov mov cmp je lea push pushl pushl pushl pushl push call mov test je lea push pushl pushl pushl pushl push call mov mov pop pop mov mov mov leave ret push mov push push push mov push mov mov cmp je lea push pushl pushl push call mov test je lea push pushl pushl push call mov mov pop pop mov mov mov leave ret push mov push push push mov push mov mov cmp je lea push pushl pushl pushl pushl push call mov test je lea push pushl pushl pushl pushl push call mov mov pop pop mov mov mov leave ret pushl pushl call ret mov call push call mov cmpl jne cmpl je push push call push mov call pop mov mov andl test je push push push call jmp xor orl push mov call pop mov mov pop mov leave ret push call mov pushl call ret push mov push mov test je push call test je pushl lea call andl mov pop pop ret cmpl jne xor ret call push call ret push call mov test je mov mov call test je mov test je mov pushl call pop ret push mov sub push push push xor mov push mov call lea push push call xor cmp mov je push push push pushl call cmp je mov jmp cmp je lea cmp mov je mov mov mov cmp je add mov mov test jne mov and cmp jbe cmp jbe cmp ja or test je mov jmp lea push push push lea call push push pushl pushl call test mov je mov mov cmpl je push pushl call mov push call mov pop pop pop leave ret push mov call mov test je pushl mov mov pushl pushl call jmp pushl xor pushl pushl call pop ret mov call push mov mov pushl andl lea call mov cmp jne mov push push pushl pushl call orl lea mov call mov mov pop mov leave ret push mov push mov push push test mov jne call test jne call test jne xor test mov mov je push mov call test jne test jne test je push call mov mov test je test je push call test je cmp je push push mov call jmp mov test je push push call test je push call mov jmp andl mov pop pop pop pop ret call mov ret call xor cmp sete mov ret mov ret call jmp push push mov call ret push call pop ret mov jmp mov ret call jmp push push mov call ret push call pop ret mov jmp mov call push push call mov mov xor cmp mov je call mov mov leave ret mov mov push mov mov mov pop ret push pushl push call mov test jne call mov pop ret cmpl je pushl call ret push mov xor mov mov movl mov movl mov mov call cmp mov jne call lea push call mov pop ret push push push push mov push lea push mov call mov mov cmp jge mov testb je push pop cmp jle mov add testb je inc add cmp jl cmp jl mov add test push jne mov shl push push call jmp push call mov push call mov push shl push push call mov mov test jne pushl call push call pushl call call pushl call mov mov mov imul add lea shl push push push call add mov mov pop cmp jl lea mov mov orl pushl lea lea mov call mov pop pop pop pop pop ret push mov push push push push mov lea push mov call mov mov test je cmp jge mov mov test je mov push call mov andl mov test jne mov pushl andl lea call pop pop pop leave ret push mov push push push mov push pushl call mov test je mov lea cmp jl cmpl je jmp push call test je movl mov jmp xor andl andl lea lea push mov call push lea call lea push call mov test jne mov shl push push call jmp mov push shl push push call test mov jne call mov mov imul add shl push mov push lea push call mov add mov push pushl call mov mov mov pop pop mov pop leave ret push mov call testb je push call mov pop ret ret push push mov cmpl jne mov test jne mov mov test je call mov jmp xor mov call mov mov mov pushl call test je cmp jge mov mov jmp xor test jne call mov mov push pushl call mov pop pop ret push mov mov test je mov test je push call andl pop ret mov call push push push push push mov xor mov cmp jne push call mov cmp jne call mov orl push call mov mov pop pop mov pop leave ret push call xor push push call push mov push cmpl je mov mov mov mov cmpl je mov mov push call leave ret mov orl orl movl ret push mov call testb je push call mov pop ret mov call push push mov push mov movl mov andl lea test je mov call mov test je mov push call mov mov test je push call mov test je push call mov test je push call pop mov pop pop mov leave ret push mov call ret call jmp ret push call pop ret mov jmp mov xor lea mov mov mov mov mov mov orl lea mov mov mov mov movl movl movl mov mov movl movl ret push mov call testb je push call mov pop ret mov call push push mov push mov movl mov movl test je mov push call mov lea test je mov lea push call mov test je mov push call andb lea call mov pop pop mov leave ret mov andl andl movl movl movl ret push mov call testb je push call mov pop ret mov call push push push mov mov movl mov andl push test pop je mov push call mov test je mov push call mov test je mov push call mov test je mov push call mov test je mov push call mov test je cmpl je call push call pop mov jmp mov test je mov push call mov test je mov push call mov test je mov push call mov pop pop mov leave ret call jmp ret push call pop ret mov jmp push mov call mov test jne push mov call ret call add push mov call ret push call test je mov call ret xor ret push push call mov test je push mov call movl mov pop ret xor pop ret push mov call testb je push call mov pop ret jmp cmpl push jne push pop mov call cmp jae test je mov jmp andl push call mov pop ret push xor cmp jne call cmp jne push push mov cmp mov lea jne push mov push call cmpl jne lea lea push call incl push call pop lea lea push call pop pop pop ret cmpl jne mov lea lea push call ret push call test je movl ret xor ret push mov call testb je push call mov pop ret mov ret push mov sub push push push call movswl shr movswl cmp mov jle push pop lea lea cltd sub sar mov mov sar shl add sub cmp jle push pop push pop cmp jle mov push lea push push call mov add add movl sar imul add movl lea mov mov movzbw shl incl xor not mov mov mov add decl jne lea push push push pushl push call pop pop test mov pop jne push push call mov leave ret mov call push push call pop mov mov xor cmp mov je call mov mov leave ret mov ret mov call push push mov call mov mov xor cmp mov je mov call movl mov mov pop mov leave ret push mov call testb je push mov call mov pop ret jmp mov ret call jmp push push mov call ret push call pop ret testb jne orb mov jmp ret mov call push push call mov mov xor cmp mov je call mov mov leave ret mov call push push mov mov movl mov andl test je push call mov test je push call mov pop mov leave ret call jmp ret push call pop ret mov jmp jmp call jmp ret push call pop ret mov jmp call jmp mov jmp push call pop ret mov jmp cmpl je push mov push call inc push mov call inc movl mov pop ret push mov push call push mov call andl mov pop ret push push push mov call xor push mov movzbl movzbl shl add mov mov shr cmp mov sbb pop inc xor sub cmp mov mov mov mov je push call cmp sbb inc mov mov call mov mov call mov push push call push push mov call mov xor cmp mov mov pop setne inc mov mov mov pop pop ret mov movl ret push mov call testb je push call mov pop ret call jmp ret push call pop ret mov jmp jmp push mov sub lea push call push call push pop cmp sbb neg leave ret jmp call mov ret push call test pop je movl andl ret xor ret mov ret mov call test je andl movl ret xor ret push mov call testb je push mov call mov pop ret mov call push mov movl andl call mov mov leave ret mov ret call jmp push push mov call ret push call pop ret testb jne orb mov jmp ret mov ret call jmp push push mov call ret push call pop ret mov jmp mov ret call jmp push push mov call ret push call pop ret mov jmp push call test pop je mov call ret xor ret mov ret push call test pop je movl andl ret xor ret mov ret push mov call mov test je mov call movl mov pop ret xor pop ret push mov call testb je push mov call mov pop ret jmp mov ret mov call test je andl movl ret xor ret push mov call testb je push mov call mov pop ret mov call push mov movl andl call mov mov leave ret mov ret call jmp push push mov call ret push call pop ret testb jne orb mov jmp ret call jmp push push mov call ret push call pop ret testb jne orb mov jmp ret add push call ret mov call push mov movl andl add push call mov mov leave ret call test je mov test je push push call pushl call ret int3 int3 int3 pushl call ret mov jmp int3 mov jmp int3 int3 lea jmp mov jmp int3 int3 mov jmp int3 int3 mov jmp mov jmp int3 int3 mov jmp mov add jmp mov jmp mov jmp mov jmp int3 int3 mov jmp mov jmp int3 int3 mov jmp int3 int3 mov jmp mov jmp int3 int3 mov jmp int3 int3 pushl call pop ret mov jmp mov jmp int3 int3 mov jmp mov jmp int3 int3 mov jmp int3 int3 lea jmp mov jmp int3 int3 lea jmp lea jmp lea jmp mov jmp int3 int3 lea jmp mov jmp int3 int3 pushl call ret mov jmp int3 pushl call pop ret mov jmp pushl call ret mov jmp int3 mov jmp mov jmp int3 int3 mov add jmp mov add jmp mov jmp mov jmp int3 int3 mov add jmp mov add jmp mov jmp mov jmp mov jmp int3 int3 pushl call pop ret mov jmp mov jmp mov jmp int3 int3 mov jmp mov jmp int3 int3 pushl call pop ret mov jmp mov jmp mov jmp int3 int3 pushl call pop ret mov jmp mov jmp mov jmp int3 int3 mov jmp mov jmp add inc imul add (bad) clc in loope jg outsl (bad) ret pop cli ds divl push out push rcrb mov and iret scas and mov fisttpll movsb andb push or jg adc push jecxz imul aam sahf mov inc ret xor insl pop sub xchg out lret add roll int vpshufhw add lods dec fild sbb adc call jmp mov lcall or jmp test outsb leave pop rcrl (bad) call js mov cltd loope adc and pop leave pusha mov loope cld pop out leave outsb sar xor popa iret into inc scas push dec mov wbinvd jg push repz pushf xor int3 or push mov inc loope frstor (bad) aad icebp fldcw or dec iret lret rcl icebp fldcw cmpsb pop mov sub jb lods jnp cld int into ret inc (bad) lret (bad) mov adc test andl dec sbb sub xor adc rcrb imul pushaw sub popa leave pop jge or sbb lret in xor insb in int3 in mov arpl and (bad) imul cli insl cltd mov fisubr mov sbb jae out cmp lret inc repnz or mov ficomp xor ret lock jmp dec pop cwtl fildll enter sub inc mov addr16 inc es lds inc enter shr (bad) sub jnp sub xor xor pop dec loopne lea cwtl fistpl int3 pop in inc mov iret adc xchg popf pusha ret push pop loope xlat lahf pushw jbe daa fidivl pop mov dec adc and popa (bad) sbbb leave mov stos cld mov sbb adc ficom push fdivr sbb in lcall (bad) mov mov mov dec lods add pop adc lret mov rol cmp lcall fucomp and sbb fsubrs pop pop push xchg das stos (bad) rcr stos push aam xchg sub ja xchg add shlb out push aam loopne pushf fstpt mov out stos ret cltd jnp sbb pop fistp in scas jp inc mov push fnstsw xor daa dec in cmp iret xor clc mov inc xor popf mov mov pop jmp jecxz add inc cmp jbe insb js xchg movl ds mov stos push mov jb iret mov mov js xchg mov insl ljmp jl outsb in jmp pop mov sub aad mov jge pusha movsb into xchg stc dec cltd imul xchg or jbe loope mov fnstsw mov pop sub inc in in or push sti aad mov not sarl xor push insb xchg add sub outsb mov popa lock adc bound rol pop loopne push inc imul pop lea cmp pusha mov loopne movsb mov mov push js in mov inc push push xchg jmp xor pop sbb dec (bad) jb push addr16 cmp jb repz jo jecxz jmp pop loop or cmpsb cmp lret and cmp dec push add in inc jo mov lahf push (bad) or (bad) scas cmp sub test add sarb mov scas (bad) icebp xchg std mov dec and lods incb (bad) repnz and loope or js sbb mov pusha jg std push addr16 lret je xor xor cmp icebp pop stc mov mov cli scas pop lds enter into (bad) lea or loope insl push push mov pop push and xor sbb ret push dec scas add mov and imul icebp iret jg out (bad) ja jg mov jo push (bad) sbb stc fcmovnb mov imul inc xor pop cli cld lods push arpl scas xor sbb test xor jb pop fwait insb jl mov jp femms je cwtl mov cltd cmc das jns and les int fwait pop dec ret xchg test mov cmpl jmp stc push adc dec xchg fstl xchg or xchg push xchg dec test lods pusha fistpll mov or xchg jnp sub icebp test cld jnp insb je xchg and sahf leavew mov sbb or mov out mov jnp lock xor (bad) push xchg int3 sbb or dec je arpl xlat out mov (bad) popf mov xor lods in jmp sbb mov rcll stos jns js repnz adc add mov insl imul sahf adc mov mov cmp add pop ret jo mov outsb pushf fxch aaa cmp loope inc jns cmp cli and xchg lds rol rorl mov test xchg xor (bad) xor inc sbb mov stos push push mov cmp cmp mov mov xlat mov dec es add adc scas sar or or gs out xlat and adc mov fcmovb inc mov stos push xchg cmp mov xchg inc dec aad mov cmp insb sub cmp (bad) cmp and and push add xor sbb push ffreep sbb push adc or adc and sbb adc inc lock mov mov mov cmpsl fwait in pusha mov dec push xor xchg imul (bad) jne or das into movsb cmp push sbb inc adcl mov out mov cltd fwait mov je fsts lahf clc inc test or mov or mov lret pop fiaddl add cmp cmp lret pop mov push repz and icebp (bad) mov mov mov pop inc push icebp fistpll or iret ret test ss xchg pop sbb (bad) sub pusha pop cmc jnp int jge xchg mov cmp mov leave fs adc jg outsb jno and rorl loope lret dec test mov pop loopne inc xor xchg gs outsl ss push inc jnp sbb push insb gs (bad) das das aam out loop in repnz jp adc daa jecxz bound imull repz or pop int xor aas popf add cmc push test inc mov lret stos ljmp cmpb cli sub (bad) cld adc dec xor das clc rcll xor mov rcrb cmp mov inc test push cmp sub push inc sarl std std sbb loop pop repz cmc mov fimull sbb pop aaa ljmp xor sbb cmp mov inc (bad) insb xchg mov ss mov std and add ss mov pop movsb push mov push xor mov cwtl mov icebp push (bad) ss xlat mov enter pop std sbb lret xlat or es ss jo ss arpl repnz or push xor cmc mov dec stos dec cs pop inc mov pop sbb ss stos pop dec jl or icebp and and out mov xor in movsl cld sub mov mull lahf enter scas mov movsb or inc pop fucomi ret inc aas xchg dec or cmpsl sub sbb stos dec out jae sti scas push scas lods dec push stos push pop add stos loop sbb testl sub pop and cmp icebp iret rcr push and sbb fisttpl rcr test inc dec mov lods lods lods lds pushf cld dec push sub fs rclb or dec iret push cmp jmp and push push xor inc or pop dec push sbb adc test mov movsb les lds cwtl inc scas mov mov (bad) or arpl scas mov inc jl mov divl push fidivl sti daa ficompl adc mov and xchg out andl push psubsw loope icebp sbb test nop jne pop andnps inc sub mov cli adc cmp ds inc add bound sbb mov cmp push and test push mov imul mov xlat sbb sbb out mov (bad) or gs jne push sub or les in out ljmp ds in ficomp jbe pusha sub inc scas out or ficom fcmovbe push stos mov or lret inc add and add flds out inc rolb adc ret test cmp sbb in loopne adc shrb jecxz movsb in test push fwait jnp add adc add sub imul cmp sbb mov xchg pop shrl xchg inc inc xchg (bad) cltd in add or jmp stos in jb daa cmp mov cmp dec cmp lret dec mov stos cmp dec cmpsl push inc xchg and in imul mov mov imul aad aaa imul scas loop (bad) mov jl lods push insb pop jae or pop int cmp sbb jge insb cltd or aas imul fist xor push (bad) ds loop or insb mov movsb xor cmc imul icebp cmpsb lock sbb sub mov (bad) cltd or scas sbb push ss jg icebp push movsl flds mov cmpsb popa and sbb jnp mov adc jo sub adc mov pop push aaa data16 rcrl push das push jno xchg pop outsb stos push fwait (bad) pop (bad) mov or lods and test fsubp frstor sbb imul (bad) push push ret faddp and nop push lds mov xchg jge xchg jmp movl lcall push cmp pop hlt pop es pop xchg cmp insl dec loope jbe int fnstsw mov mov mov fwait pop xchg xchg (bad) pop lods cmpsb hlt or imul pop std out push outsl lock nop pop push and pop push scas mov movsl fmull pop jg sbb cmp xor cmpl mov jnp scas mov mov jg sbb xchg es cmp and mov push jo negl mov scas push add jg sub shll adc rolb lret mov fidivr outsl imul out je push dec sub dec push push sbb lahf inc mov jb lock pop (bad) jne cmpl and in into shr adc push out aas loop fst cmc jg inc pop inc in (bad) out jg jno jbe divl sbb jae and adc in sbbl or cmovg push sbb xchg xlat pop bound in jmp mov xor stos outsb por jnp add xchg dec int in push nop xchg add inc xchg cmpsb sbb das and push or push mov out sub lock dec xchg mov pop (bad) mov or in pop sub mov cmc dec stos and jmp ja pop inc sarl std sahf addr16 test out sub outsl and aaa rcrb or fst dec cmp ret (bad) xchg mov rorl push adc stc loopne loope idivl mov dec shll or (bad) and js loopne enter mov mov lds inc sub dec lods sbb outsb (bad) push outsb inc sbb dec push push inc out jb cmp daa or cwtl ret sbb mov out dec adcb sub leave das dec (bad) mov out lock xchg dec imul sbb mov fldl pushf jb mov dec jns adc pop cmp rclb push cltd push test sub (bad) test sub and xlat mov leave and lea pop arpl xor cltd sub fdivl dec imul mov push dec pusha xchg ret push out dec sahf test or dec mov test xchg icebp mov inc rclb mov mov mov int xor push pop out cmp push clc addr16 mov pop mov push inc inc jns clc lock dec ret jmp push mov xchg push dec pop fbstp mov push lods outsl adc xor iret xor cli inc cmp (bad) das jbe mov popfw or pop add jnp fcoms or (bad) loopne sbb pushf cmp cmovns mov push pop or test out adc dec or std mov push clc js in scas outsb or clc jl xchg inc mov mov fwait (bad) out (bad) jo stos test decl dec jae cmp adc out mov lahf notb jmp sbb jns icebp sarl ds sub fsubs call rolb push popa sbb data16 insb stc mov push pop shll cmp jnp sbb push xor sbb icebp int3 mov cli push jge insl sub repnz pop dec mov stc call and pop test nop add push sbb adc inc and jg and add pmulhuw loop sub or js clc lret adc inc jg pushf mov jp xor sub fimull push mov iret int3 mov adc shrl rcll (bad) fwait and xchg roll hlt fdivr jp sbb inc mov adc movsb xor popa add pop or lea or jmp xchg fildl push movsl (bad) push pusha fnstsw cmp test sarl fs insb mov stos fninit pop imul sbb push xchg (bad) mov sahf xor pushf fs jnp jge push jle cmc mov std aad xor fs or sub inc push js push js pop pusha add sbb fbstp shrl imul into in sub fdivrl xchg and cmpl or fs adc sub lock stc rolb pop sbb andl jecxz xchg aas sbb mov inc insb loop test mov jns outsl fldl sarl popa frstor pop ja les xlat lea sub stos mov pop out xchg push and inc das call lret mov test hlt aam sub bound add sahf sub add popf arpl jmp jbe or iret jp pushw dec inc xor cmp loopne call addl sti add mov mov pushf dec das xchg add jmp xor fwait push (bad) xchg call cltd dec in and (bad) shrl push push in adc pop test push push adc loope data16 mov inc enter test xchg rcrl leave mov int jmp inc popf test inc leave les fs xchg outsb imul scas cltd push iret (bad) mov add (bad) mov push out pop push cmpsb jecxz (bad) movsl std pop popl sbb outsl sub push add icebp je iret jg sub (bad) pop iret out fstl inc loope (bad) cld stos out inc push inc mov inc sub or adc cltd or ret lods pop loop cmpsb test lods mov sti ss inc jne insl cmc mov and lret sub insb ret or ret jg sbb and or out sbb pop pop addr16 divl push cmpsb std mov pop cmp rcrl jb pop adc insl and cld jecxz out push jbe pop or sti imul xchg jnp jmp iret push andb pop idivb or xor jne cmp xlat jmp mov ret mov push or popf lcall pop pop mov lret sub stos shrl aaa xchg add rolb dec repz movsl add add in mov adc xor pop pop sbb sub movsb popa adc or cltd aaa cvtps2pd mov stc dec es (bad) addr16 pop mov pop imul outsb fldl2t in sbb push inc jge dec rol test xlat ret inc jmp std movsb mov scas (bad) fs imul outsl pop insb pop pop push jp andl sub jecxz push ret pusha test jno cmp sub or sub inc fs jp push inc sbb pop and hlt pop adc test jecxz insl test dec mov mov jmp push mov cmp test repz cmp dec popf lret push sub xor mov incl mov xor dec stc mov test in cmp (bad) std in xchg push mov mov xor icebp xchg sbb mov inc or fwait push std (bad) jb fs lock out add xor mov jle loop sbb jp hlt shlb adc dec jmp xchg adc out scas and mov adc cmpsb ss sbb sub xor pop repnz pop addr16 push sahf or fistp (bad) in rcrb enter mov mov adc sub mov and call jge into push push jnp cmp sbb gs movq sahf cmp addr16 mov sti xchg sbb sub cmp push mov popf adc xchg rolb cwtl mov jae push add jns sub test imul jae dec jae movsb (bad) enter loope pop xchg (bad) (bad) xchg mov cmpl addr16 pop sub adcb movsl xrelease mov imul jns add push mov fwait jge xchg ret cld jge (bad) in into mov dec lahf mov push xchg xchg ss sub enter xchg es mov mov inc mov xchg push sub and jle imul jns jp std inc pop jae xchg (bad) mov fisttpl insl fistpll xchg arpl or cmpsl pop or scas test sbb xor mov daa mov xchg or pop mov ja cltd rolb cmc adcb rcll in mov fnop sbb repz stos mov jo push pop mov cmpsl sbb mov mov daa fnsave fdivs jne adc out fcmovu frstor jno push adc dec mov dec push dec subl pushf push pusha xor or aad cmpsl mov xchg pop lock out add cmp (bad) jbe lods or jmp jl sbb mov nop movsl cmpsb outsl push pop es mov add mov sbbl (bad) sub push jno adc psubusw cmp (bad) (bad) cld shlb adc mov inc test shl lret bound lods adc mov pop add jle pusha pop pop jmp js das fwait jns or dec scas inc dec call rorl fcomip mov andl inc dec ds arpl and and aam andl pushf outsb dec sbb out shrl pop jb jno pop sbb (bad) bound int3 sbb out je add sub imul cmp push pushf (bad) cmc fdivl push je dec add in sbb sub xchg pop cli (bad) jno jmp adc push mov int3 pop jns ja push push dec push pop pop jge mov xchg iret push fnstsw mov std xchg cmp rcrb mov ss leave mov sub lcall rol lgdtl cltd and sub jno imul xchg in mov loopne or jmp push sub (bad) dec je nop sahf add add inc mov mov or loop es lret in xchg (bad) out lahf dec cmp fstpl xor aas fsubl lods or leave insl sub xor push ljmp and jns dec (bad) and pushl lds (bad) pop dec sub or xchg inc mov jg scas test leave js sbb fsubrl push inc jmp (bad) pop nop std xchg faddl je ret dec push mov mov ret je out jo aam xor iret jbe add adc bound ret dec aam inc push daa push jo pop fs cld xchg popf (bad) (bad) stos jg mov adc or out xchg pop loope and hlt aas inc mov adc adc test lock or mov xchg out js cmp test nop aaa fldcw cmp dec jmp pop mov movsl adc inc cli jns push int3 std (bad) repz mov pop sbb and sub push rcrb xor cmpsl scas out (bad) inc vmwrite ret lods xchg mulb shlb cld insl outsl xor cli xor nop lret nop jbe gs movsl sahf xchg dec push imul mov inc xor mov in in jnp popf (bad) out jb adc pop (bad) mov stos int3 aas and jne pop or cwtl mov and out xchg (bad) daa jo sbb gs mov and (bad) test popa leave mov stos adc jb dec int3 ret sbb fwait lret sbb test out mov loope push dec add pop clc lret cmp mov pop lahf (bad) ja arpl pop add push dec jae leave loope shrb jnp imul and add and das or push sbb push add push xchg and dec (bad) aaa test fimull add call adc bound test cwtl jmp push mov or fdivl ret jp inc aas xchg jle pop outsl and lds mov out nop mov aaa adc (bad) in cld jp push pop int3 aaa lahf nop pop sbb loop mov xchg mov push cwtl mov (bad) lahf stos jg pop inc test jmp jnp mov in sbb push loop les icebp out lea jle pop pop or in scas adc movsb pop push shl fsubl stc lods mov push mov (bad) gs xchg push push (bad) fwait (bad) mov or jno mov add mov adc fnstcw insb dec or pop daa movsb push adc int3 das push cmp mov mov xchg (bad) or mov xchg aam (bad) inc xor int3 (bad) mov (bad) mov mov std cmp (bad) js add jp stos inc test insb jmp pop push or (bad) aad add iret inc and addr16 pop sub iret xor dec mov xchg dec out lea lds fisubrl les sarl inc jbe int3 (bad) mov popf ljmp shl jg dec xchg out jecxz,pn lds (bad) jg ret arpl (bad) xor arpl pusha (bad) push (bad) xor sbb out mov sub mov add sub nop mov mov sub ja mov imul unpckhps jle push mov pusha and hlt imulb push and (bad) mov stos fnstsw xchg push add mov ret scas pop sbb mov bswap lds ja into mov jb arpl and movsb fisub and shlb or mov in or js icebp push and mov jle ljmp xchg out scas xor imull sbb inc insb adc mov repnz add jge cmpsb mov cwtl pop or (bad) cmp fldl inc add (bad) cwtl cmpsb mov ret ljmp sbb sti rcll lcall jmp rorb jle mov adc adc lods xchg xchg or add fwait push xchg and push jno xchg stos jns push mov ret fwait push fstpt add rclb addr16 inc pop push sbb (bad) or lods xor push pop insb mov xchg add xchg daa xor dec iret mov jmp movsl in popa fistp add popa clc cwtl into inc adc jnp and lods inc js xchg fs (bad) lock out xchg xchg sbb (bad) lret (bad) mov mov pop rol out push xlat lea jl cld sub outsl into sarb xchg pop lret fstpl leave xlat sub rcll dec xor fsubl mov cmpl stos (bad) stc mov inc in adc jo dec jns and cwtl xlat cli leave add sub xchg cmp mov sub sbbl fcmovbe roll sub adc cli or adc mov lret push out js mov pop leave mov xchg xor nop adc cltd lahf dec pusha xor fbstp mov pop shrb scas inc push js cmp adc push xor jno mov enter in mov or and lea mov and jns lds loope xor add mov sti xorl std push popfw or inc sbb movsl add xlat cmp ss cltd mov push xor outsb xor cmp push adc dec push mov inc test cmp adc mov push fwait in pushf frstor xchg lock add cld (bad) sub aas ds push inc xchg or cltd movsb (bad) cmc mov les inc scas das aas sarl cwtl fidiv mov call lock lcall fldl adc adc mov sbb xchg add xchg add sahf inc dec inc pop jmp test jnp mov arpl adc and lahf add in push rorb push jmp adc (bad) jmp (bad) icebp scas fsts jns (bad) fnstenv mov outsl test add or popf rcll inc rcrb and cld cwtl add lahf adc cmc leave mov push fcoms lret sub pop (bad) out push arpl std xor fdivl or lret and fisubrl xor call and push in jp add inc (bad) mov jne and pushf push add xchg (bad) adc push push sar popf repnz lods (bad) jns inc fdivl adc das in xchg xchg mov (bad) add out (bad) ljmp cmpsl in or mov repz inc adc inc ljmp (bad) test pusha inc sub mov loopne adc imul jnp dec jno mov pop stc movsb push imul mov pop or xchg inc ljmp xor sub adc jl,pn dec inc xor clc mov test jbe fs pavgb mov xchg xor mov shrb sbb sbb scas out sti lods stc test inc lahf add xchg popf or (bad) das and (bad) mov loop (bad) bound call cmp xlat push or jbe arpl mov add jg sub xchg mov lods push sti pushf xor jecxz lds inc pop stc xchg mov popa dec jno sub jae inc insb sti xor test adc arpl (bad) or sarb cltd cwtl adc add fidiv mov aas in popf movl cmp mov push xchg les xchg mov adc (bad) pop (bad) fs pusha nop aam clc scas mov dec sahf jl out jecxz std sbb mov out scas rcl outsb dec aas sub add jle cwtl fs dec scas enter outsb or sbb cmpsl dec and xchg jns or cmpsl dec xor mov jo shr jne cli pop movsl mov jecxz inc mov cmp mov das sub (bad) mov push pop pop jle add cmc jmp adc andb sub push icebp (bad) cli and xlat cltd mov shl rcll jnp lea push mov xchg mov add or negl fstpl in and je fbld add cld into xchg push js ficomp add aaa inc sahf aas iret mov sub das idivb jne push sbb sub mulb jnp insl test mov cwtl cmp and jnp ljmp jmp scas inc mov jns mov mov pop lret or cmp fsubrs jecxz push aad push inc stc mov jg push push arpl jle or sbb mov (bad) (bad) cwtl inc and xchg pop add out mov test adc push pusha adc out and mov lds nop loopne inc (bad) les leave push shrl (bad) stc jg dec cmp sbb es arpl push mov cs inc adc mov or mov in imul xchg cmp add (bad) sqrtps mov fwait loop aam ss into ret mov cmp pcmpeqb scas cmc pop out xchg pop push jae cli shrd cmc and sahf and adc mov sahf sbb mov mov in inc push xchg adc sarl xchg mov sub iret outsl add mov pop xchg data16 add jle jbe jl ficomp sub mov jb xor cmp bound adc out push mov ja xorb sahf (bad) lret test jecxz call mov or lret test pusha bound pop dec mov xorl scas fdivs ja jp popa scas and adc xchg jle adc ret fdivrs pop xchg pop (bad) sbb lret sarb mov sub sub (bad) repnz mov icebp dec stc add movsl jb and (bad) mov pushf stos xchg fwait jno push mov test out lods loop sti mov xchg xor push aaa (bad) xchg jmp mov arpl fisub jecxz mov lret arpl fldcw outsb jne (bad) iret or rcrb fdivrl adc dec jg mov mov push add mov pusha pop sub or daa mov add inc add enter (bad) cmp mov add dec shrb sarl and xchg fild push outsb sub mov andl xor or mov xchg jne sbb insl incb and xor mov ja nop adc arpl mov pop jno (bad) lock adc xchg sub mov add pop out fisttpll (bad) lock push data16 cs pop enter xor xchg (bad) adc and test sbb sbb and add push push inc cld jg pop pop dec mov add fs xchg in xchg push dec mov adc cmp add (bad) dec or jmp sub imul js push push fisubl dec ds popa lock inc push test (bad) insb in push mov fnsave into mov (bad) mov lds negl push arpl pop push cwtl mov or or mov xor out mov mov dec movsl pop pop decb loope pop sub push mov fucomp popf int out mov loope into out stos or je ljmp or mov movsl (bad) addr16 and and arpl xchg xlat mov push xchg jmp ficoml test sbb cmpsl clc sbb int xchg inc pop jb insb push mov ret push test jno clc cmp imul lea nop mov call push insb mov nop xor or sbb movsb and js push xchg shl loop mov xor dec inc mov pusha fwait loope push mov jbe dec test fcoms add xor cld scas push leave outsl mov imul pop or ljmp adc xchg mov dec adc adc out jnp mov pop test adc int add jns in lock sbb push or inc xchg daa inc out jb cmc fcomip arpl cwtl adc fildll push xor inc repz lret add sahf cmp push push adc xchg add int3 sub xor mov adc ret int3 aas hlt iret pop aad pop mov pop mov mov mov clc enter lret clc inc pop push inc bound fidivrl cli pop out pop push push push in and push mov push fwait ret (bad) xor push mov ljmp jecxz push sub shl divb pop jmp sbb sarl rol cmp or cwtl dec xchg add sarl call adc cmp cmc xchg fisttpll or gs jmp xchg jb mov dec call fistpl push adc (bad) rcrb out sbb cmp xor (bad) sar xchg and pop imul lods fnstsw outsl or call pop adc pop inc cli shrb mov fcoms fdivs aaa pop push inc and mov fcmovne sbb sti ffree jmp sbb push mov notl pop pop sbb flds mov add mov hlt pop ja jmp popf or imul sbb lea ficom ficom repz adcb adc test adc dec (bad) cmc inc out sbb sub or mov jl icebp pop daa clc stos das push gs mov out cmp hlt lcall (bad) dec jp dec mov jo push (bad) jno mov ljmp lods outsl pop sahf mov mov insb test int3 add cwtl xchg and pop mov (bad) cld and scas mov xor sbb cmp (bad) daa (bad) outsb loop,pn aam jnp adc (bad) into push adc lds scas jno or and fdivrs xor daa adc rorl jo add repnz clc iret stos lret das es mov test push pushf pop aaa je or scas cmpsl lret or imul mov jp in stc jp,pt xchg nop inc addr16 dec xor dec ffreep bound aad sti les mov push cltd pop daa leave add movsb and (bad) pop bound mov in stos jmp adc cwtl in fistp test xchg cwtl jge es (bad) sub and jbe pop mov jbe inc (bad) mov mov xchg xchg mov test test pop add testl call push ljmp push and stc push sub lds sub int3 mov outsl outsl fsts jns push aas mov fidiv subl pop shrl fs (bad) jp pushf mov jge sbb subb pop inc or pop mov pop cmp sbb mov mov sti pop ljmp call inc xchg cld pop sub jle cltd adc jae mov es mov fnstenv adc mov and push inc mov in popa int3 fsubrs cmpsl jnp (bad) mov push es cmp xlat stc scas lods add dec mov sbb dec aaa (bad) jno jnp pop enter mov in or pop pushf xchg mov lock out insl test or nop and int xchg inc (bad) addb sbb xchg mov lcall mov inc push xor ljmp mov cmp sahf jb addr16 stos out mov dec mov inc ret sbb lods mov pop call ffree mov loop inc mov sub xor test or fs lahf rorl or stc test lds cmp out fs lcall cli sub jmp lods xor dec aaa (bad) test repnz ficom in fstps push jo sti mov fucomip gs push xchg push jg pushf dec mov (bad) cmp mov es test xchg jb je rcr popa jecxz inc in cwtl rcrb js mov ret (bad) mov int imul (bad) lods xchg add sbb popa testl cmc sbb test rorb jmp inc pusha fidivrl add decb dec sbb adc or push cmp insl std pushf (bad) icebp roll hlt insl test cltd gs xchg push insb addr16 mov fsubp sub imulb pop push into dec lcall jle cltd add std cmc les jmp cmpsb xor into sbb (bad) fstpl mov fwait xchg fidiv pop or popf jno sub dec jo sbb jno idivb (bad) or leave sarb jp push flds cwtl add mov (bad) test adc dec pop add or add or sar ja outsl or mov mov cmp jge push mov into add inc xchg lds movsb movsl daa movsb pop test rolb mov daa das jno push xor (bad) (bad) arpl (bad) sbb inc (bad) rcr fldcw pop pop in sar mov outsl inc xchg aaa sbb and jmp push adc aaa cmpsl sbb (bad) in adc dec xor fadds xchg pop or mov push mov push sti (bad) stos scas lcall out ja,pt rorl mov cs xor (bad) push ret pop or inc mov fcoms push jnp jno mov popf arpl cwtl addr16 stc (bad) addr16 push jne ret (bad) xor std jmp sub inc jne ret cld and dec inc cmp gs sub xlat (bad) sbb arpl inc popa call das or lret repnz mov sbb in pop mov or fmull (bad) xor adc jmp aaa push imul add inc in or fnstenv scas sub pop add mov sbb cmp pop imul (bad) test cltd into pop into or xchg fcomi and lret arpl adc popf (bad) add mov loope dec or pop add dec inc xchg arpl push sub jge (bad) xor loopne aad negl jl push popf fistp enter std xchg cmp jmp (bad) cld shll icebp and (bad) jno jne rcl cmpsb pop jnp mov mov dec add into mov ret leave jecxz xchg faddl mov push jmp pop dec iret mov xorl int3 push add jp push daa loope mov int3 les lahf (bad) sbb jg cli loopne push xor lods stos or jmp je lods cltd xchg fimull aas adc adc frstor jle mov pop bound data16 jge (bad) push into jb lahf cwtl jo ret mov mov mov cltd xor stos mov or jb pop push aam mov cli enter adc fldenv pop add aad cmp shrb inc cwtl leave mov pop push insb int cltd test into gs jno icebp pop xchg int3 adc adc insb add lds inc hlt mov ret jle test jns add (bad) sbb cmp (bad) je sahf xchg jns aad mov lret xchg (bad) pcmpgtw inc ficoml inc div xor xchg ja sub std pcmpgtd xlat aad loop lret or imul jle int pop mov enter cs mov popa sub pushf xorl mov jnp (bad) in repz fs pop and pop push aas adcl (bad) pop jp lock jge std inc icebp pop fild (bad) aad addl js add push imul jecxz test and push test sbb shll les push inc mov inc lret movsl mov sbb stc in cmp clts inc adc add xchg lret daa test jmp dec out or xchg int3 pop nop das cli and push mov ljmp les insl sub mov pop jp scas sbb and push mov pop xchg add popf fmul inc hlt fcom or push outsl jecxz popf leave mov (bad) cltd popf inc insb add imul repz mov cmc aam adc fisttpl imul sub fldt in mov inc popa pop sahf xor in jnp or leave jmp int dec scas mov test fldlg2 outsl in out lods jmp cwtl dec lea dec lea cmp sti cmc ror sbb xorl mov scas loopne leave or leave dec (bad) popa leave inc (bad) int push jmp int inc add aaa add mov xor lock xor cld mov adc or inc inc repnz pop movsb adc or int3 pop (bad) out cmc je aam adc incb push adc jp les out cmc jmp jl hlt fs js scas lahf sbbl (bad) push addr16 lods sbb push in add leave push outsl ficomp cld jmp arpl push imul mov fwait mov xchg pushf xlat push icebp pop add (bad) in popa hlt mov in scas mov movsl xchg mov vmovupd scas (bad) mov in ret xlat add xorl jae dec lods fsubl jmp movsl fadds ror out fisttpl es pop pop mov push test mov stos jo pop fisubl adc shlb int loopne (bad) fdivl pop xchg fdivrl imul rcll cli sbb push jp fisttpll dec mov dec test fdivrs dec sbb adc xchg ret mov sub dec push (bad) mov into mov bound sti imul mov push jne lret or jnp addr16 imul rolb lahf jmp int3 ret dec mov jns insb int adc mov aam jmp push scas sahf xchg (bad) sbbl sub add scas fidiv or add aad inc (bad) sub vlddqu or push lock and rcl sub fidivl and lea rcrl fisttp test pop dec or push xchg (bad) cmp (bad) xor outsl cmp mov (bad) (bad) pop cmpsb pushf stos jmp push mov clc loope dec rcr shll xor jnp adc lock pushf mov add dec sbb loopne int3 xchg imul inc sarl ds adc mov in addr16 stc test mov sub cmpsl sub roll jmp mov ja cmpsb in stos pop movsb std sub and sti adc imul bound lcall lods scas jnp or ss clc dec clc xor push outsl cwtl leave mov mov lcall int3 mov mov lock adc cs pusha or jp jmp push pop add jecxz mov jecxz jnp ret add cmp jp out adc or lcall fsubrl pop enter fdivl aas stos inc or popa loopne jl jnp mov das test mov fidivr jbe scas push rolb adc push fstl sbb test out js pop adc add push loope xchg xlat adc fistp jo loopne je mov fidivr stos or insl adc sub jns push cmp test mov dec xor (bad) int adc jne push and addr16 mov or aas or cmpsb lcall std pushf std xor xchg and pop stos aad xlat xor cmc sahf in aas mov adc fucomi in dec adc and (bad) fiaddl push dec lods dec aam dec lret add fwait mov and jecxz sub dec or loop xchg imul stos xchg daa cmp outsb sbb lret loop xchg subb mov mov xor mov in dec roll orl fistp movsb sti add call cld inc jbe jae sub dec sub sbb out xchg (bad) std mov and ljmp adc fwait gs (bad) gs pop fildll int3 cld repz (bad) and (bad) cli lock call arpl jno mov (bad) xor ds dec ds push dec fs jecxz addr16 pop pop jne pop mov lds mov push push push out xchg dec scas in (bad) adc push pusha movsb ret int3 ljmp sti in xor cmpsl js sub sub mov ss xor adc imul std xor sbb dec add lods fistpll lret lods ljmp push or mov stc dec and (bad) fbstp test push xor movb xchg jb mov aas xor test pop test int3 das mov out mov fcomps subl or roll xchg push or xchg pop ss push or mov jmp xor jbe outsb test push mov xor mov stc sahf es mov sub hlt add and mov aad mov add pop mov leave inc mov pop enter cs jecxz repz shrb cltd pop add sub mov lahf mov jno adc pop mov out insb cmp rcll xor sbb aaa repz ret or xchg add push inc movsl inc ret or cmpl arpl mov in sbb adc add aas test push repnz jle cmpsl xor ficom pop cmp jno jg xlat adc sbb cmp add push mov testl sub xchg das xchg push fimul jne sbb mov sub decb aaa cmp mov out test je sub insb jmp cs mov pop aad out xchg rorl xor xchg sbb sub xor adcl lcall pop ret add mov popl jmp shr rcrl adc jmp cltd repnz jl push test mov rcrl jmp lea dec test xchg and (bad) leave add mov dec or daa sbb inc sub stos (bad) hlt ret adc inc fbld mov xchg ret (bad) sbb sbb fimull int3 nop outsb inc mov imul cmc xchg fistp sub std mov cli and or lcall jl fucomp sbb cmp js jg mov movsl jno mov ja push daa arpl stos mov inc and cmpsl mov stc inc popa sbb adc mov dec xor adc (bad) dec leave xor mov mov xorps adc in push repz ss inc loope sub pop sbb jb jp xchg in cmp push and or xchg daa loopne add sarb sub negb insb lock mov xchg jmp jecxz imul movsb inc cmp es mov cmpsb xchg ret test ljmp daa orl test xchg popf or xchg bnd pop jbe scas add sub push scas movsl pushf cmp pop dec sti sub jb scas clc leave fistpl or push cmpsl jae test dec xchg pop push dec jp popa or xor dec pop hlt movsb adc push or aad mov xchg arpl or mov movsb ret dec or cwtl add in mov or std inc insl cld dec cmp ret aad jle popf ud1 xorl loopne and xchg sub push ret jno sub ficom lods push pop cmp shlb jno xorl xchg dec sti sub daa mov adc cmovg lds ror sbb rol and mov pop es cvtps2pi arpl jns in cmpb iret lds jo inc addr16 stos fnstsw xchg test jge add inc (bad) adc push (bad) cltd in mov ja xchg sbb test xchg xchg lcall lds or xchg scas lret mov push lcall push lahf das jmp pusha shll fs stc cmc popa cmc lcall popf lahf mov push push mul movsb push pop cmp xchg pop dec call mov jns ficompl imul js xchg inc mov inc stc fwait sub cld insl adc xor sub inc cmp dec cmpsb dec xor mov inc outsb jge jmp neg sbb xchg leave mov out push ret scas je scas in mov xchg hlt dec mov insb push and (bad) mov pop mulb in fwait jmp cmp push repnz loope mov cs sbb xorl stos (bad) xchg (bad) aaa jmp and call jae,pn div dec pop dec mov lcall mov in pop cmc sarb pop sub sbb inc js test daa cmp push pushf push es mov or xchg push rol adc xchg test iret mov push fmul cltd add inc mov into mov enter repnz fcompl (bad) lcall or popa insl xor or inc je aam scas mov fimull mov fisub in dec pop psadbw aas pop sub scas imul dec push adc mul stc sub dec in push pop dec pop sarl or aas test inc lea push inc mov test jp sub mov dec mov nop xchg dec ss xchg (bad) push stc dec shll (bad) repnz fisttpll enter stc sub inc sub out test movsl cmp int3 jp sysexit cmpl stos in push or lret loop or jbe sub add nop push popa lcall fldl imul rclb pop jmp cltd pop lret xor pop icebp lea adc cmp movsl cmpsl dec repnz jns push mov mov lds mov cmpsl cmp hlt rolb aaa add add fmull testl jae jg or call out jle in rol pop subl test sub xchg (bad) in dec inc popf inc mov pop fwait loop aad pop cmp fistl mov std popa sbb mov sti js lea xchg jg inc jge call mov mov push mov pushf in mov inc in jmp enter jne push adc jns mull out pop pusha imulb loop andl dec jp (bad) lret roll aam jnp nop insl xchg cmpsb jmp push mov and push fisubrl inc adc jp (bad) jg fnsave xor ss mov xchg push lret js sub add xlat loopne inc sub xor ljmp lock loope jo loopne dec ret js sub (bad) (bad) lret stc stos or xchg xchg test jmp jbe lret pop mov ljmp and js sub dec adc cmp out je (bad) pop mov (bad) imul mov mov jp test cld push push mov jne jae jecxz and push roll push push andl out lcall shrb sti inc in pop xor mov mov bound pop pop jecxz repz stos imul jno inc jecxz xlat dec push lea dec shll dec popf mov cli into hlt clc sbb jp inc mov movsl mov lods adc cmp xchg mov mov clc jns push sub andb out sahf jmp xchg inc cwtl mov xchg jnp or adc lea notl sbb hlt popa js out cmpsb repnz push cltd dec into lcall add icebp mov orl adcl jno add fsubrs shl jge call jg clc push or adc out pop dec xchg ret or rcrb push dec push mov mov inc popf cwtl cmp mov mov pop or add push fistl insl stc fistpl push and lock in ficoml sub pop mov lds ljmp inc ret in fmull cmpsb jno insb (bad) cmp xchg lretw lret (bad) xchg lret fwait pop mov mov (bad) pop out jmp aaa fsubrs mov inc mov aad pop jae pop push add shrl rorb lea lock icebp inc jg sbbb shrb test adc jno repnz xchg imul enter hlt pop xchg sub mov jo cmp pop (bad) fisubl js push xchg mov aam (bad) ljmp fwait out cwtl cmp enter mov xor sbb adc xor xor inc sbb cs adc cmp mulps xor stos test push cmp cmpsb sub mov rcl scas enter jb sbb inc stos scas jae fidivrl mov mov inc jle jae enter movsl mov cmpsb (bad) mov into mov inc jle jle (bad) iret xchg mov fwait push or bound add jnp sbb into mov inc int3 and sub push rcrb lods in mov push ret cltd mov mov sbb mov out xchg (bad) mov hlt push sahf jmp mov mov mov fcoms xchg dec jecxz fcomps rol in inc pop jns jbe lods es dec and xchg add xchg lock sbb (bad) cltd sbb dec pop (bad) mov popa punpckldq cmpsb outsl cld test cmp daa inc mov jo mov test ror mov cmc pop and lret pusha adc jae lods xlat and mov fldl push fldcw mov push cmp or xor push xor pusha pop lret outsl std (bad) mov add pop push inc dec les dec out dec mov and ret ret int3 push jbe sahf lcall jno rcll insl ficom fdivs push lds cmp jg xorb add adc add fcompl imul ja dec icebp hlt scas scas dec sbb pop jl mov test adc inc lods fmuls push xor pusha mov addr16 xchg pushf shr bound out inc test mov dec (bad) jp cmc aad add cli jg adc enter mov in inc loop push mov (bad) mov (bad) dec push adc fs and mov cwtl idivl adc (bad) or add pop or dec xchg pop push (bad) jnp dec dec push cmp or dec inc pop mov cmpsl adc pop push fiadd in jb orl lret and ficomp fist out (bad) mov lret psrlw (bad) fcmovnb mov jae fisttpl shlb and (bad) mov lock js xor punpckhdq mov cltd add sbb fmuls xorb fstl lret pop (bad) movsb cmpsl inc cmpsl nop or mov push call push out rol dec mov mov dec cltd push pop stc dec mov cmp mov out push inc in sub es push jmp cwtl or clc dec pop dec adc pop jno ds int mov xor outsb jae pusha cmp jno lea sub push inc cltd (bad) negl pop fidivr lahf out fwait mov push les nop cmp cmc push vpand mov arpl pop out (bad) jge xchg test dec sub push sub fwait hlt pushf xchg ss cltd push gs outsb inc push in in (bad) mov push add sbb sbb xchg fmul mov xchg js dec daa hlt add adc gs pop or repz js xor lods int3 decl adc mov push repz data16 mov sahf gs pop popa and inc int and cmp test push nop jne (bad) stos jg ja out shrb enter dec aad cmp popf mov loopne dec (bad) xor dec cmp mov (bad) loop dec std dec test sub push (bad) jo fwait cmp push rclb aad iret cmp pop inc jge test fstps lret jne mov repz and mov repz add inc mov adc inc xlat lds inc data16 xchg (bad) enter mov lcall shr lods insl push push inc outsb mov (bad) das mov inc sbb cs mov dec lret cld orl push mov (bad) mov push outsl xchg enter sub dec popl sub roll leave adc in mov ljmp pop ljmp ret mov pop or mov pop add push sub icebp popa cli cs jmp shr mov shlb imull cld test sub int3 sahf ficom and fwait mov enter and daa out orl sahf lock popa (bad) js das imul dec pop adc sbb xchg pushf push out mov out push push pop ljmp (bad) (bad) dec pop ds xchg and fnstsw ja dec mov adc xor std fistl cmp sahf ftst ret std test sbb mov or xchg push mov aam dec inc popa jb hlt mov mov mov jle jmp inc call mov cltd dec jl xor test call arpl inc add dec arpl pop ljmp fistl dec mov cmpsl sub popa (bad) pop movb add lret inc mov xchg mov ret popa mov js push add (bad) in xchg test sbb loopne push xorb aas lods mov pop or push icebp mov cmp mov xchg orb arpl in ficomp lret loopne outsl jns push pop jno sbb loopne jne sub loop ret outsl pop popf (bad) ror test sub add jmp push jl cwtl jge mov xor mov fdivrs enter cli pop add daa pop cmp pop mov sbb and push int3 lods sub idiv test pop cli shrb mov (bad) clc xchg cmp enter popf sub pushl adc ds xchg xor pop add lret ret into inc test call dec test les les fisubr out loop pushf inc repz jno lock mov pop xlat mov stc mov enter out mov rol or jo leave stc add or lret adc dec sbb sub jmp fisttpll cmc (bad) and add cltd cmp mov lods int3 test (bad) sbb (bad) leave xchg dec loope push or jl out lahf lret mov lds arpl lea fidivr fidiv jb out mov jmp jl inc fmul or es mov lds fldpi xchg sub jns fadd aaa popa jmp nop dec movsl insl jl stos outsb or jp push pushf sbb decb sub rol stos mov jbe sbb sub in cmpsb cli jmp xor ss loopne cmp xchg adc movsl mov aam int cltd pop decl (bad) and (bad) aam mov out inc mov or mov loop cmp dec in je push test inc adc arpl push aad xlat xor mov sub or jg inc xor fistp and mov (bad) lock cmp popa mov xor and pop inc dec daa xorl push fild xchg std sub imul cmp xchg jl sti inc cmp lods xor xor repz push pop jecxz stc xchg dec cs xchg (bad) jp lods movb push decb js mov enter dec xchg dec xchg cmp inc sbb fnstsw pop in cmp (bad) mov lods push dec into xchg sub in imul lods adc into popf shl in inc mov arpl lods shll adcl or pand cltd aam aam insl pusha pop xchg cmpsl (bad) enter jb push nop movsb adc fisttpll lods aam or and mov mov add mov pop push add mov lea push icebp hlt cmp add mov iret lret push loopne nop test sahf fcomp or push cltd aad add mov sbb fldl push jl into mov aaa push mov lea es add mov pushf sbb arpl movsl adc mov mov inc mov loope mov dec ja dec shl mov jmp dec fcoml dec push mov sub mov dec (bad) call pushf xor sahf pop sbb addl sbb in loop add dec pop xchg movsl pop shlb push scas lahf xchg mov mov and loope dec mov loope mov scas mov jmp jp clc in out adc or ljmp adc xor rcrl sti test inc push shlb movsl mov aam pusha xlat rcll cwtl sbb stos (bad) sarl jno fldl mov jecxz icebp iret aad int3 push (bad) mov cld sahf repnz ja jno arpl pop lahf sbb push jns stos dec jb or cld jae int3 je out cmp int adc jmp sbb jle mov sub out mov jmp mov dec mov fidiv test push jae in mov pop mov imul mov push gs push and aam sub lods mov xchg mov into mov mov inc sub into jge je inc cmp push lret pusha and sbb pop jnp (bad) inc ss cltd push pushf int inc mov inc lret mov lcall (bad) fistp jns add jns jb in (bad) hlt mov out int test or ficompl cmp pop pop sarl push add pop pop mov call add jmp sbb in cmp fstl shr and mov ret inc mov call push (bad) mov lret daa mov insb cmp mov fwait cwtl test pop dec pusha pop (bad) int3 jge pop push sub outsl mov inc in (bad) test cltd jae (bad) adc lea icebp push dec (bad) or data16 movsb pop or cwtl imul insl dec pop addr16 test insl cs imul push xchg cmc mov imul int mov mov xchg and sbb jo pop jle in hlt sbb in pop imul mov jnp ret mov jmp jne loop inc aad cld push dec xchg xchg sub push loopne inc lcall stos jl cli push cmp loopne pop push (bad) push push (bad) neg cld inc push arpl push pop push pop out mov aam hlt ja inc cmp mov iret dec pop pop inc xchg decb cli sbb hlt mov mov aam pop sub push or enter stc dec push cmp sub push insb pop adc mov (bad) testl lea cwtl push dec adc inc jecxz cmp rcl out std loop push nop pop cmpsb lret adcl pop inc xchg hlt out cmc xor lret or pop in sbb lret call aas cmp adc push xlat push adc adcl (bad) mov (bad) push xchg lods add push inc jae movswl sbb xor mov sbb push or stc dec pop sbb aaa sti mov cmp ret sbb lock jns cli stc fnsave inc lcall iret lret in jbe pop int mov push adc loopne xchg addl (bad) jmp jns (bad) out dec jg shll sbb outsb or test mov jmp shrb sti or (bad) jle and sahf test cmp mov mov jne mov fisttp push int and inc pop inc xchg mov in sbb jb gs bound and test iret and loope leave out xor dec pop mov inc adcl xor pop add (bad) adc cmpsb add insb rol movsb xor pop sub xchg sub mov mov fnstenv cmp je adc xor cmpsb pop cmp mov lea negl add nop test inc pop push inc popa cmc gs and (bad) scas dec jae push mov inc sub addb and ljmp mov std aas cmp add fs stc loop xlat inc sbbl les (bad) adc sbb repnz les or adc imul xchg jbe push push add inc call push ljmp lcall scas imul and sub adc inc in push or lock jg xchg cld xorl lcall lods xchg pushf pop lret mov repz mov jecxz int push sub or cld mov imul cmp xor sbb leave outsl loopne mov sub cmp andb jge sub cltd popa pop stos push in sub loope lods lock js cmpsl push fisub inc jns add repnz (bad) cmc sbb pop mov add hlt sti loopne cwtl popf xchg jae fs push add mov pop pop stos mov in push rorl (bad) (bad) aas jge adc xchg push jmp mov add daa jle clc xor pop inc or (bad) (bad) mov or push jo pop cmova cmp cltd (bad) repnz notb rolb pop call cmp loopne push push mov rcrb mov or pop stc sbb mov sbb push loop xor cwtl adc stos loop mov imul in sbb cmc repz mov xchg jle fildl scas hlt rorl push (bad) jg pop mov ret sbb (bad) idivb pop inc pushf pop xchg pop add imul (bad) insl imul sub add push jns adc aam addr16 pop aas and clc mov jge lahf lret push add test sbbl pop std es and (bad) or out pushf fnstsw or outsl (bad) mov cli jecxz jne popf pusha lret ret je std nop push mulb pop fbld xchg ja stc pop nop neg jle inc inc jns pop cmpsl subb pushf into test stc hlt rcrl cltd sti add or lcall test repnz pop xchg mov (bad) cmc mov outsb hlt or jl shrb jns adc xor mov xlat jle adc in repnz jle insl pop xchg gs push and push pop jae dec mov sahf inc xor in pop push jg adc pop in sub add fiaddl mov mov cmp fs mov enter mov add cltd sbb jb sub cld test push push (bad) setae push in xchg movsl outsb push pusha lcall daa cmp fistp push push lods xor and push inc (bad) lahf loopne sub add (bad) xlat mov inc push inc roll pop cmpsl pop (bad) sbb fiaddl clc les in ds jge in and insl jbe mov inc sub rcrb out jno inc and push mov (bad) scas gs icebp jnp int (bad) cld push in ret ret es sbb ja repz xchg adc mov sub xchg pop icebp mov ja cli cmp ss cwtl pusha js xor jg movsb dec fisttpl pushf jle pop push cmp adc push xor jae xor push repnz aad sbb adc jg loope push push xchg adc mov dec pop push movsl jmp jno cmp fcoml add add insl mov and jg push mov adc dec mov mov dec fwait mov test dec fisttpl js mov lds sub pop roll add inc sahf cltd push gs pop xchg xchg stc bound push enter mov orb xchg insl mov xchg cmc xchg out shrb inc mov cmp dec cmpb rcrb add pop jno and fstps test insl pusha stos loopne and pop mov fsts xor in bound jns or sbb and fdivrl aad sbb sahf mov aas ds not ret (bad) (bad) testl dec pop jne sub ljmp aaa insl loopne (bad) push adc test in ljmp idivb scas mov sbb lcall add dec cmp cld cmp out fsubs xchg mov (bad) mov std loop mov or pop ret jo sub out push ja aaa (bad) mov arpl inc stos xlat sbb cmp imul (bad) mov dec push dec inc xchg dec scas pop inc inc sbb add jns mov aas pop das cli sub jge pusha std sbb mov (bad) dec mov sahf or xchg xor cmp sub adc dec daa mov ficoml out lahf mov pop dec mov pop mov pop (bad) stc es sbb loop jns cli pop dec xor lock lret cmp xchg mov fwait or sbb cmpl dec cmp or stc xor (bad) xchg loope,pn add push fs sbb (bad) fwait cmp mov test pop lock jp int dec ret mov mov (bad) cmp stc pop sub pop sub and cmp adc arpl mov xchg lea loopne pop adc addr16 ds sti jge vxorps cmp hlt fdivrl stos pop sub pop mov jnp inc mov sbb sarb mov jns popa js es mov sub xchg addr16 std icebp popa cmp inc sbb fdivrs adc std lahf cmp gs test pop and sti leave imul (bad) mov fwait xor xchg and xchg (bad) ss popl pop pop jle loope inc loop add div pushf jle lcall lret into bound adc xor jmp lea stc and out sahf sarl and add imul sarl clc push mov insl loopne in jnp (bad) int imul xchg cmc cs add inc sbb add aas icebp add lock in in fnstsw scas js or pop (bad) aaa mov (bad) aaa add dec mov mov lods mov mov mov jle insl ficompl out mov loopne and mov xor rcll pcmpgtd sbb sub movsb pop aaa bound std or sbb xchg sub out les shrb (bad) fcmovbe sbb push mov sahf fs mov and xor mull xor in dec xchg addr16 dec sub daa inc cmp loope push std rcl cwtl xchg fcomps ret xor movsb push sbb ficom add xchg fwait aam rcr outsl mov out dec cmp push mov mov and jne push aas enter sub cmp push sarl test xchg icebp (bad) popf pop (bad) sbb push mov mov imul in dec dec jne cld ret or (bad) lcall push outsb test cli imul enter leave and mov xor add adc (bad) jb add fldcw jne sbb adc and add int3 add lods (bad) in inc or and mov lea fcoms mov mov ror inc xchg fisttpl iret mov push mov dec jno lods pop subl data16 xchg sub adc xor int3 inc sahf sub xchg mov out sarb adc fwait xor sbb push xchg mov test mov leave idivl aaa xchg push inc and test data16 enter add sarl xchg sbb cltd add and repz js sub repz inc in push jmp nop push jne loop pop test mov add fidivrl jns in repz arpl jne cmp pop adc sub inc das jae cmp sarb pushf repz mov adc sar lret xchg ret pop push adc adc lret sbb fcompl pop add (bad) mov into (bad) jmp lahf inc cltd jmp dec loopne in sbb mov fildll jb jl push pop inc scas adc jns add xchg jge (bad) (bad) dec cld rorb jl xchg (bad) cmpsl ss sbb ja iret add mov stos fimull fisttp ljmp mov lds xchg stc or cmp add mov into je sbb cmc fistl outsl enter movsl cmp lods ss (bad) mov loop lcall sti mov lcall adc movsb fwait out test (bad) add gs push inc xchg iret and jl lea mov mov repnz test jne xorl jle lret movsl fcoms stos orl push movsb inc or popf pop scas or dec inc jecxz nop scas sub inc lock and sbb pop pop or test xor cmp clc dec inc inc ja js jae addl mov dec add (bad) rcrl and sti dec pop lahf jge dec and orb inc sbb dec or xchg sub jle mov clc sub mov (bad) pushf outsb push (bad) jp pop negb cmp imul cld sbb (bad) ret jmp sbb pop stc adc pushf je fiaddl mov push lret pushf mov mov lret pop push sub out ja movb das sbb mov insl loop jmp jo lock popl push mov (bad) jo cwtl add movsb insb outsb or int3 mov iret sub aaa jns hlt push sub out push insl stos and cmpsb adc js je pop jp inc or (bad) push dec mov (bad) and lods mov mov xchg add mov or push fs push js fisubr out rolb jno in out add add es xchg cs cs aad out pop inc iret (bad) pop mov call or add sub xchg or mov mov sbb aam jmp dec sti push call sbb fstpl ss popa daa push aad pop push scas bound aas stos popf inc aas repnz mov fidivrl sub mov add xor icebp (bad) imul cmp (bad) ja lock into je out dec cli mov adc sub cmc mov jo subl pushf ja fcoml adc pop js bound mov fs scas sub leave cmc mov fisubr mov dec mov jno les push insb jns jbe rorb adc mov ds sub cmp jp sti jecxz mov nop mov mov sti jp jb call fistpll test pop mov dec sbb bound lret aaa cs ja push pusha cmp in mov and sbb fmuls cmp ja add xor hlt js addps sarl adc xor mov (bad) jge dec xor cltd push xchg out mov stos pop movsb int add call sti jge jl sbb adc popa cli imul sub bound and imul jle (bad) icebp sub (bad) xchg aas push adc cltd in aas out aas or pop lahf (bad) clc cmp bound mov xor cwtl xor sahf mov adc jae imul push das inc sub jbe mov icebp packuswb loopne scas xor jp push inc arpl and jge lods and sub lahf xchg jl mov int3 xor rcll xchg lcall sbb push mov xchg or stc add sbb pop mov jnp fstpl cli jnp fadds pop push in lret (bad) (bad) push jge (bad) cmp lods mov les dec sub incb inc js pop cmpsl pop scas enter iret jl sub mov xor cmp iret aad ret xor into cmpsl (bad) ljmp ss lret sub cmp lret dec and mov xlat adc lcall jo adc test cmp xchg lahf add jno aas xor mov jecxz scas cmc popf push sbb subl adc or push repz (bad) imul xlat jge inc jns push inc lcall jbe xchg add xchg das xor jmp xor mov negl mov test jp adc xchg sbb push pop mov cmp xchg xchg ret fbld or lret sub decb fwait scas das loope (bad) adc xchg adc fldt jle (bad) adc pusha fnstenv lcall push dec pop arpl adc dec jmp sarl jge jmp aas xor xor (bad) fwait and sahf push mov jns cmp addl jnp es outsb loope arpl mov movswl pop cmp jb xchg loope outsl jl xchg mov call jg xor out add iret dec pushl (bad) repz in imul popf (bad) mov imul jne mov lods out jns add xchg push adc iret std rolb xchg stos push xchg sub ja in pop xchg and orl lret xchg sub (bad) insl xor xchg loop cmp mov loopne mov out in cmp jmp fistpll mov (bad) xor mov outsl push inc or sub xchg and jnp call jp (bad) sti in jg sbb xchg jae fadd fbld (bad) jmp push inc sbb in loopne xlat jecxz or or jmp pop shrb sub dec lcall inc lahf addr16 outsl push jl aaa rorl xor adc aaa (bad) mov icebp mov sub sar mov mov adc push int3 jb or jg pop outsl push sbb fcmovnb sahf mov sub jbe loopne add cwtl dec mov gs or pushl fs int xchg jnp push xchg push cli cmpsb call data16 fs cmp cmp lods sub mov xchg icebp dec cmp cmp mov lahf sub mov mov fwait aad mov fisubl pop loop mov fmull pop sub cmpl mov nop ret aaa test into inc xchg push sbb js (bad) and int3 cmc add inc stos push repnz lcall fcoms in paddusw insl loop xchg xchg cmpl and stos ret es daa fidivrl enter add hlt and sub rolb stc ror cmc sbb mov fidiv dec das mov adc aaa push mov stc inc imul jg jo outsb dec xor test (bad) lods hlt push cs or dec loop cmc push je push loopne cmp add and in movsl mov std push mov sbb je into and pop lret dec dec leave ss pop mov mov mov sub jno and jae outsb xchg sub sub ficomp xor and mov imul sub mov call cmp cld subl or je jne mov lret xchg in xchg wbinvd fsubl push popa jge or sbb cmp data16 int3 add in push xor fcmovbe push and pop in mov jl out push lock ja push xor rcrl icebp jne psubsw (bad) js or inc pushf test inc int3 aas jne mov adc jbe add jbe push sub inc sbb das push push ss cmpsl xchg fwait repnz xchg jg xchg iret ret out arpl cmp movsb (bad) jo cwtl xor movsb mov mov bound scas mov sub sub rclb mov repz push xchg mov xlat push ret jg shlb fs pushf ret mov loopne in jl jmp loop mov push lret aad mov pop shlb in and loope xor cmpsb cmp stc rcr loopne enter mov jae inc mov cmpsl push popa sbb and lods jbe into ret xchg mov bound dec decb mov adc push mov xorb std jecxz mov or loopne pushf faddl imul mov adc mov sbb push (bad) xchg test xor mov rcll push mov js dec js xlat outsl jnp stos dec jle push mov adc push dec sub movsl adc xchg mov es fsubl mov push and test ds stc ss jge hlt clc inc xor (bad) pop pop pushf cmp inc dec push hlt jl hlt (bad) pop das push push in repnz das push adc ret pusha sub sub push mov out push cmp mov je jns jmp cmp ret ds xor stc mov cmpsb or jns add push das fwait lahf jo mov xchg shrb imul loope fsub mov mov or adc mov add aad pop lods dec mov insl icebp (bad) mov (bad) mov and push mov and cltd sahf repz ret (bad) jbe jnp movsb (bad) mov mov (bad) pop jp fiadd cs mov add jae cmp jge xchg int sbb dec js fcomi xchg jbe mov push addr16 inc cmp inc jg (bad) in test mov aaa jmp sub lods jmp adc cmp mov inc aam push int pop aas inc mov inc inc cmp or cmpsl jno push jecxz jnp or mov inc xchg mov push pushf xchg xchg daa xor xor (bad) hlt test andb xchg add outsb mov xor xor mov lock cmp enter imul push pop clc mov pop lds (bad) xor xchg pop mov sahf sub jne out cmpsl gs out pop inc or out inc out jne or hlt aad das fstps adc mov adc or fs xchg jg pop lret mov fst sarl mov lret loopne out push shrl inc cmp roll push icebp push test cmpsl iret xor (bad) jge test mov fiaddl jl xchg mov or mov (bad) pop xchg clc cmpsb push cmp and cmp fildll push aam mov movsl ret enter dec adc (bad) add add cmp xor out jnp scas scas icebp mov add popf (bad) and push sub xor int3 fdivl das (bad) adc pop scas pop sub inc popf lock push enter aaa mov jmp sbb gs dec nop fcomps or cmpsb loope add xorl or dec adc mov into xor sub xchg inc jnp pop mov movsl and sub lret or int3 mov add add or add xchg xchg mov add xlat (bad) jp outsl mov (bad) dec lds mov lods xor cmpsl dec pop jbe add mov add adc sub int3 dec test mov js mov ficomp int3 sarb negl push sbb and mov and jmp cmpsl jmp std xchg lods jg (bad) mov cmp mov cwtl (bad) sub fcompl (bad) add adc addr16 fisttpl les fdivp bound or int3 inc (bad) ss outsb push cmpsl sahf xlat insl xor (bad) rol pop iret or push shl mov dec adc fwait imul sub jge rcl repz inc das call pushf loope (bad) sub add or aas jo add jl sbb and in repz jnp clc out stos add test fiaddl and ret jae mov mov mov push mov push sbb mov shrl jmp xor push std dec and psubw xor push jno jge ljmp (bad) push pop sub pop jmp rorb push ds imul pop leave pop call mov mov iret (bad) mov pop sbb xor in pusha jnp adc inc sub lcall (bad) stc arpl adc faddl movsl mov orb push xchg pop adc add out mov dec movsl and and sub mov pop jge jmp and sub dec pop push mov cmp mov arpl sbb sub mov iret into sub in or jb adc icebp arpl sti addr16 dec mov cwtl aad jae aam mov imul cmpsb in xchg jae mov mov imul or bound sub or push flds xchg cmp pop mov push inc mov (bad) (bad) push inc and xor cmpsb (bad) aam outsl pop xchg hlt (bad) into push inc mov mov jmp fsts (bad) ficom xor or xlat mov addr16 xor jg push fistl pop cmc gs inc rorl sbb inc inc add andl sub xlat push fs pop nop push mov test fwait cs jle push (bad) into into sti nop out (bad) jo mov fistpl mov push test dec and sti xorl mov clc test and bound shr lods jge out (bad) mov inc loop push movsl mov pop call jno aam aad rorb or cmp dec ja loopne lea mov jle (bad) pop add cmpsl fist xchg sub stos pop jecxz lahf push cltd imul mov xor repnz je mov xor adc (bad) mov xor (bad) aas cld shll popa std std (bad) cs lret mov loop iret add mov dec mov mov xchg out pop or roll push ficomp or out ret inc push leave jle pop mov lret out lea lret jnp pop iret sub mov loope add xchg bound lret xor sub loope sti ret mov scas daa xchg call jns add rep push rcr ret flds in js pop mov ret cmp inc outsl cli daa cmp stos movsb lods (bad) (bad) addr16 add js,pn and int3 pop je push in and sub scas mov dec loope mov add leave xchg sbb mov xchg push or out fwait pop ja out jne test mov dec out test or fnstcw (bad) ljmp addr16 mov dec lds cmp mov and mov mov je test fcmovnbe push mov cmp sarb add ds into test add jge or or fimull push jmp cmpsb loopne or shll and mov pop arpl (bad) js pop in lods out sbb pop aas mov out in xor jle shr movsb fldt ljmp scas add stc pop mov jnp out test sbb inc mov cmp mov ss mov push lods or jge inc add or (bad) les in stc and mov jo xchg idivl movsl out xchg mov inc call pop pop mov jno cmpsl scas (bad) fucomp dec adc sbb cmp pop adc mov (bad) xor jno push aad (bad) mov jl mov mov adc les nop ror jmp mov js jecxz sbb (bad) stos xorl pop gs dec (bad) and fild jns and cwtl ja sub cmp inc mov or int ja repnz cmpsb sbb sbb (bad) hlt jne sbb flds and add repnz push lret mov (bad) cmp fisttpll (bad) cld int add sbb sbb stc add ret jo push popa or mov scas popf outsb cmp stos fstpt repz stos mov or ss push jnp in or push pop xchg inc pop icebp dec push clc into cmp imul cmp mov hlt fsubl (bad) mov adc and fwait out mov (bad) lcall aas push jg call mov (bad) mull adc cmc dec cld adc xlat push inc fdivrl pop bound pop mov push das or loopne mov mov lea stos sbb std dec jns leave cld sbb dec and ljmp dec rcrb adc xchg push ss (bad) xlat arpl psubsb sub adc push xor jnp cld test rcl movsb shrb adc inc into jb testb lcall and (bad) jge inc jnp xchg fs sbb bound pop pop popf mov fsts scas mov and xchg mov inc or loope jae sbb aad mov fmull out mov xlat (bad) jmp inc out not pop xor aad fisubl mov aad pop jb iret inc sahf pusha add jnp xchg inc xor jle jl and lret mov and xchg std cmp mov adc push popa sub jecxz out cs or outsb mov scas sub push sub xchg mov mov xor aad stos fcomps mov mov inc push inc fs std dec xor fnstenv push mov adc ss enter jecxz mov mov cmpl icebp aas imul xchg cld cmp dec jle (bad) pushf inc adc and scas pop (bad) fldl cmc inc cmpsb or mov pop leave inc cmp pop push inc imul dec sbb scas mov or out xor adc imulb out mul or mov scas cmc pop xchg loope out and mov out mov lahf cmp insl add inc ret adc pop loopne ss gs (bad) add sbb jecxz insb jle push sahf or sub xor pusha fwait enter enter das call loopne dec jecxz repnz mov arpl ljmp fcmovb ljmp sti xchg push push mov sbb idivl sub mov mov jg enter imul cltd (bad) sub and xchg leave mov add inc mov fwait jmp repz dec add xchg ljmp in mov inc jecxz or in fcmovnb add pop pop mov loop ror jl imul push cld pushf push sub xor jl cmp test jl pusha sbb fidiv ret pop cs lret jo sub lahf dec and ret insb jb or scas pop sub jae not in push push mov xchg mov jmp dec aaa les cmpsl mov orl mov dec test xchg insb jge mov mov sbb into (bad) fldl mov lods add jne pop pop and inc sahf cmpb jns jp mov push or xor int3 cmpsl mov push clc cmpsl inc jno xor add xchg add (bad) pop sub cs xchg xor jno popf sub clc das stos xchg cmp xchg xchg fildl xchg jbe cmp mov xchg cld sub jno call jl cltd inc (bad) pop ficoml inc loopne fldl2e dec aas jp arpl test in push clc sbb adc mov scas nop jge mov cld int jo jg jmp adc jbe push cmp dec ret movsb les sbb mov jnp (bad) adc loopne mov stos cs xor loopne call push rcrl jo mov sbb in push lahf pop rolb aam call clc pop push call inc lret sbb fwait inc clc ficomp pusha push pushf movsb dec into jns mov mov fwait pop ss outsb jl cmpsb sahf daa jmp sbb xchg fsts xor inc mov adc popa into mov jo loop sbb lods popf xchg and mov daa fcoms movsl mov pushf xchg sbb daa push (bad) aam nop repz jecxz push sub shrl or repz xor ja sub jl and addl mov (bad) xor xchg test jns cmp cs ds jp xor lea jge cmpsb dec mov or jl sbb cld cld js dec mov notb sub lahf xlat mov lcall jnp jne cmpsb sahf jmp push mov pop add ret push pushf lods and xchg mov mov push dec push mov or nop jle mov outsl call out xchg je jns stos and push inc call lret jle pop pop xor inc add outsb adc loop jle cmp les jg mov push mov sub xor sbb lods fs push repz push xchg loope or dec xor test push lahf (bad) or mov lahf sub push sub sbb sub test xchg push fstl xchg popa cmp push lret (bad) lea addr16 pop push jae push jmp repz jp adc (bad) addr16 pop add mov in (bad) (bad) repnz out xchg pop (bad) hlt (bad) insb das repz mov xor mov lret and movb les stos dec mov cmp sbb popf xlat xchg mov cld dec xor nop shufps data16 jl (bad) or fcompl add fidivrl and push mov mov dec fwait mov in mov es xor shll or push push and jge mov out incb sahf cli jne insl aaa jp in lds fstpl (bad) lods gs out jns jl xlat outsl push cmp lcall dec cs inc sbb push adc xorl push or mov ss pop mov loope movsb sub ljmp xchg insl es outsb pop push pop cmpsl (bad) sti pop or mov stos aam pop push psrld lahf jnp rorb test bound in push cwtl xchg nop or clc or pusha insb test rcrl test lret dec aad and jno push movsl cmpsl mov mov sbb enter mov sbb loopne std xchg jecxz lahf shrb jle mov aad ss gs or sub jecxz add aad mov gs pop dec or in and (bad) out xor out xchg pop neg test pop and stos (bad) aas lods outsl cltd outsb fs imul and test push xor cmp pop mov and (bad) ja leave sar sub mov call push popf jb les dec xlat popf scas push cmp mov femms dec ss pop push lcall imul adc inc outsb inc lock popf cmp fildll lods fsubr es shr enter bound aaa push adc lea sub mov bound sbb addr16 or cltd xor lret adc mov dec add xchg iret ss shrb sbb push addr16 pop inc sbb add pusha xchg lods adc xchg adc mov jmp addr16 pushf movsl xchg test mov push cmp and fnop fcomp out sti cmc cld sbb lret cmp jo sub add ja mov daa dec fwait xchg loopne sti mov movsl add insl gs sbb test add add cmpsl test cs mov jne pop call jmp sti fiadd pop jnp pop data16 mov shrb sbb dec std dec (bad) push (bad) pop xor je js or adc mov mov add cld sbb mov mov mov or or mov nop sub dec xor sahf push dec xor (bad) (bad) scas aam (bad) jne mov aam add out shll push adc (bad) sub negl adc iret adc bound cs inc clc sbb jmp int call sub fisttp mov adcb insb and mov outsl xchg or aad test and popf popf lret xchg inc push repz mov dec stos push push and pop hlt rolb or inc mov clc cmc mulb pusha mov cmpsb cld push pushf push dec sbb xor enter mov mov inc or (bad) call or mov out cli out jmp icebp pop adc test sbb das ret test mov mov xchg pop sarl pop ja nop xchg (bad) stos xchg cmp jmp xchg (bad) incl fs pop push rcll xchg mov cmp aaa sbb testl mov movsl jecxz std add add and loope push inc mov adc outsl mov push sub add inc arpl scas mov loope stos loope arpl jbe lret jnp xchg mov sub push dec mov icebp dec pop iret xor pop rcrb rclb xlat ljmp jp push or cltd add jg cmp mov mov in mov cmp sub mov or (bad) hlt scas movsl push mov stos add adc aaa push mov push outsb rcl stos pop fcomps lahf fimull (bad) imul daa in (bad) in push pop pop shll scas in lcall mov hlt cs pop jnp mov and jl popf sub (bad) in (bad) xchg outsl (bad) scas imul xchg mov cmp mov mov fstpt xchg mov sahf incb ret repz iret xor push sub enter (bad) mov jne push push inc ficomp push rcrb mov add div imul cmpsb stos loop dec stos and jnp loope push pop adc sbb and add jae cmp push repz ja sbb pop fdivrs cmp leave sbb sbbb cltd insb xchg sti mov (bad) or xchg mov jne (bad) addr16 lcall sbb stos push lcall mov xchg in jl out xor add outsb cltd push or pushf jecxz or loope scas pop bound dec arpl popa fistl add scas push sarl negl mov mov leave lcall mov push adc inc lods jae push cli push push xchg loopne cmc decl mov ljmp rcll out sub fidivr lahf xchg fistp ret jl mov loop (bad) jne stc and and jo repnz and (bad) inc fcmovnbe lcall xor jp mov pop push cltd negl (bad) hlt (bad) test sbb or or add pop push jae jp mov (bad) xchg test repnz cmp sbb dec (bad) lods popa aam lea mov out pop frstor in push sbb xor xor sbb lds xchg ret sahf jp pushf cmp push or adc push into dec xor push cwtl cmp jns in cltd cwtl mov sbb sbb cltd xchg icebp push lock push sub xchg rcrb push (bad) cmp out push sub mov jmp xor (bad) enter lock sbb bound fidiv fidivr movsb popa sahf test mov loop push xchg and cmp (bad) lea outsl xchg fmulp jp (bad) (bad) arpl pop mov and pop jne add cmp jle mov pop imul mov clc insb (bad) ret aaa jnp xchg fwait outsb push (bad) jne dec push cld push push cmc xor xor push cmp in pop es data16 dec out loop sahf sbb (bad) jo ljmp pop pop rcrb xchg je cmp pop push aam push mov sub sub mov xchg out mov in xchg aad movsl mov out pop mov scas or adc lds and dec mov and xchg rolb push sbb lods cwtl aaa ja popf (bad) loope lods add push jnp xlat call sbb jmp ds or sbb cmpsl cs imul daa fxch inc sbb (bad) mov mov xchg jl mov rol sbb lret mov shlb mov cmp dec (bad) mov mov lods cld sub in clc testb testb imul push das fistpl pushf jno push xchg iret add xchg call inc insb outsb movsl je shlb and rcrb mov push stos push lds stc std sbb insb scas mov out addr16 lods and call (bad) popa and fdivrl (bad) loope xor mov in adc dec ror int3 inc sti add sub fwait pop sarb sarl leave fsubs int or jge cmpsb outsb clc cmc cmp or mov iret sahf push pusha push dec dec mov mov jo push sbb pop push push outsl icebp lods add loopne and inc cmpsl dec push mov test push xlat add mov aaa xchg iret outsl mov mov insb (bad) out fiadd sbb lcall jecxz push (bad) ret pop out fimul outsb shrb inc xchg in pusha sti mov hlt in cmc pop (bad) arpl mov rclb fldt icebp mov (bad) mov mov fsubs and fldcw out lahf pop sub mov or pop or mov xchg adc and mov push sbb fisub int3 loop cmpsb addr16 sbb sbb into (bad) je cld push ret dec daa ret jno add sbb adc mov loop pop mov mov sub mov not pop pop sub push lds fldcw mov cmpsl clc (bad) mov data16 jge icebp ds lret push stos adc dec mov aam jg xchg xchg mov mov mov xor push and (bad) lea arpl aas push pop scas test mov jl mov in jge sarb pop scas shrb adc inc and (bad) icebp xchg pop aad mov nopl lahf xor outsb repz aas inc fs inc cmp cmp or mov jbe inc push jg mov popa fcmovbe xchg in jle ret add jne mov sbb fwait inc mov test or cmp cmpsb stos pop pop orl push sbb mov fst or in into idivl pop sbb (bad) adc push push mov jg adc xchg fisubrl jns je and push sub loopne,pn mov sub adc or and and jl and idivb add jb nop xchg push mov push jb mov in dec mov test jnp les out pop movb lahf jnp xchg sub ja sub test jle (bad) push sbb inc cld ljmp xlat add icebp psraw es jle fcomip mov pop mov xchg leave in enter aam jno lahf (bad) outsl pop adc test sarl ret xchg mov mov cmp or (bad) ja mov inc ljmp fistp das xchg in add cwtl xor arpl mov adc xlat jg dec xchg fs jecxz mov (bad) mov out addr16 cmpsl movsl ljmp fnstcw xor sub push movsb lods and add xchg lahf fidivr cmp repz cmp mov jno outsl pop (bad) or jne or cmpsl cmp cmp sbb inc xchg (bad) icebp fadds xlat ja mov popa mov jecxz push cltd mov jp mov repz fldt jns loopne rol mov xor inc push test stos out add push lea inc nop and jno xor pushf jmp and lock rol movsb xor push fcmovne push sbb aad ret icebp cwtd (bad) cwtl rcll pop push out xor mov jg out mov mov push out jae xor mov ret mov dec pop add cmp cmp push pop and pop and (bad) outsw adcb cwtl mov sbb gs (bad) jae inc scas movsl enter jb xlat das push adc cmpsl ss pop test xor rcrb test push call cmp mov test xchg adc ljmp rorl (bad) mov fcmovb imul inc mov lods (bad) icebp (bad) leave sbb mov addl cmc mov notb push or addr16 jns jg sub repz loope cmp dec and hlt test ds sub fldcw mov xor decl test data16 popa push or (bad) mov sbb add mov or jge mov adc xchg and movsl repnz loop mov in mov adc inc mov pushf mov jl out jnp std shl (bad) frstor inc movsl loop jnp test fs lcall and push nop rorl and fmull (bad) ds sub pusha icebp or insb pusha inc sti push popa sub nop mov cmp fstpl sbb icebp push inc outsl mov fucomi bound xor test xchg dec pop ja repnz jmp lods jnp aam pop pop outsb dec push popf jae insb sub ljmp mov lods push or adc xchg (bad) and mov mov nop dec mov xchg aaa xchg sbb sbbb or push xor inc mov sar fwait jns out fldcw cmp out dec fnstsw xchg sbb iret add or pop enter xchg sbb mov ret add jecxz mov out pushl jbe lock aaa xchg xor jnp les bound mov das push sub adc jbe and xor sub push xchg fstpl sub (bad) cltd cmc sub lahf sub out insb fxam jl cmp cmp sub int3 out in inc lea pop pop mov xchg aas xchg or pushf mov shr pop jbe fs mov cltd gs xchg or shr clc jbe mov insb and jb loopne dec inc xlat add int3 arpl push jne mov es in shrb fs sbb or aas or aaa ljmp mulb jnp adc jmp fcom js mov push div sarl xor jae or and movsb cltd in xorl mov fisttp stos sahf sti dec dec xchg addr16 cmp (bad) pushf adc xchg stc popf scas lea push jbe cwtl daa cmp inc int3 mull sbb into sbb mov outsl and in mov sbb mov fisttpll mov stos ret xchg push aam mov push adc pop test ljmp and xor in cli inc adc add lcall cmp inc dec pop fist jb rorb pop roll ljmp arpl cmp and sub insl cmc inc dec dec aaa ss xlat shrl push adc imul insb les clc fcmovu cmp and or push jle jge call sbb scas pushf cwtl out sub xchg sub pop xchg sbb pop outsb stos fstp fnstenv shrl adc lock addr16 in cmp push scas in push add add (bad) out jmp mov jnp or lcall jo xlat add clc push out popf std xchg sbb cwtl (bad) or imul andl std sub leave sub dec mov pop ss out (bad) rep (bad) call popa addr16 mov leave loop (bad) mov xchg repz push sub jmp cmp jb imul mov sbb mov pop jmp inc sub ljmp (bad) stos sbb mov enter add mov fcmovb pop popa push push jl out and repnz outsb jmp fs out rol ljmp pop call negl aad sbb mov and jnp stos shlb scas pop jns xchg push xchg (bad) jmp ror jo xlat out imulb mov or das pop sub in (bad) stos sub cmp lock xor mov out jb loop (bad) push adc xchg xchg mov or jnp jno pop add or or scas and out jns (bad) sbb loop es adcl sub pop mov xlat nop test ljmp add test outsl dec hlt iret and sbb addr16 adc into fiaddl mov and inc sbb hlt je stos or (bad) jns mov jmp out test cmpsb lock pop call das lock jg in test mov das js sub jns push adc cmp lods enter out ret cwtl scas fisubl adc or and jnp lods xchg xchg mov add mov cmp rclb xchg sti and push or loopne jmp sub xor push sbb jmp xchg (bad) clc imul decl pop aam mov cmc test ja scas nop test in xchg bswap cmp mov mov mov pop push sbb xor cltd xchg (bad) jno repnz jg scas inc push popa adc mov mov flds rclb loop sub (bad) fimull movsl pop fisub mov xchg aad xchg aas adc in ret jnp xor or xor jns adc xor pop cmc jl add fbstp cltd aam fistpll adc fs xchg test and inc aad loopne das mov push lds scas sub clc cmp mov mov jmp ds sub pop jmp fdivrl pop sbbl ds push jae les xchg add outsb inc push inc cmp push popf mov addr16 (bad) mov sub and popf xor pop fbstp dec jmp push cmp (bad) test push movsl fucom js sub mov dec inc pop iret sub insb inc loop lds mov dec sub mov push mov mov dec mov adc data16 cmp out sub ja or inc cmp mov stc jp mov jns jne (bad) test aas push lds inc rclb lahf xor out stc rcll sub inc stos mov and push adc and aaa insl mov mov push jno inc aam das mov fildll xchg mov xchg lea jnp icebp insl test scas mov aad xchg xchg fsubr sbb mov arpl stos add and jo ret (bad) jne xchg dec popa jg jne sbb test and pop outsb pop pop mov lds xchg mov cmpsb or lods pop out xchg cmpsb jp out std cltd je add fisttpll sub sbbl pushf cmp in add out ljmp or pop mov jl imul mov inc cld pop mov mov popf sahf aam mov imul mov push xchg jno outsb rorl out outsb xchg pop bound and outsb xchg rcrb (bad) adc mov cmpsl cmp xchg sub ret rol aas jnp stos mov xlat jle xor sub mov xchg (bad) popf ret loopne mov mov nop lea or pop dec cs lds mov pop xor fimul mov xor incl mov sub mov xchg es cmp cmpsl fldenv mov out movsb fsubs mov call cmp shrb xchg outsb inc adc cmpsb int3 mov aas push pop mov sub int je lret mov fildl mov inc jmp (bad) push add outsb cmp xor rcll xchg or pop stc lock push imul lods push loopne mov cli mov out test test sbb (bad) sbb mov int3 mov gs dec xor mov inc (bad) out sub sub cmp xor negb or test mov sbb adc jbe leave or inc das (bad) arpl aad lret and movsb fidiv adc add negb adc movb leave cwtl jmp cmpsl lds int3 mov cltd es cmp cmp mov mov les (bad) or lds and inc xlat lods jno cmpsb cmp inc sbb pop stc jb and add (bad) or adc hlt sub or clc cmp lret xor cmp mov jg xchg test adc sub (bad) adc adc jl pop js jb jb cmpsl mov xchg shrl hlt and test mov jmp sub ljmp clc lods movb jns adc lods jle add (bad) cmc fsubrp lcall xor ficompl ljmp inc mov add sub rclb xchg (bad) in jne xchg xor or out jnp lds push and mov dec lahf popa jp ds sub mov and push xor fnsave inc leave sbb inc mov push cld mov add xor jo mov in sub loope pop add daa and cmp repnz les sub out cmp insl ds lock lods shll out pusha (bad) lods inc jbe bound aas inc (bad) dec jle sti or cwtl out or lock imulb cmp add pop or mov push mov fild call push sti gs mov mov or fmull or (bad) imul cmpsb mov das jmp jo ss adc lret xchg mov sahf cmpsb out popf mov pop cwtl aad ret dec into jle inc repnz stc (bad) lock xor sub into sbb or les cmp and pop jne adc out pop xchg fs hlt dec xor lock or jle mov xor insl insb pusha movsl pop mov jp aad ret push test test pop dec lock or add (bad) aad sub add test mov repz and and sub xchg mov pushf cmp push xchg jl dec int3 sub dec xor xchg adc movsb hlt sbb outsb test xor std add xchg dec (bad) icebp (bad) icebp (bad) icebp (bad) icebp (bad) icebp (bad) icebp (bad) icebp (bad) icebp (bad) icebp (bad) icebp (bad) icebp (bad) icebp (bad) les mov cltd push fmull mov cwtl out test fadd sub and mov repz mov in xor arpl inc add xchg sub mov imul in inc add gs ss daa rep xor les push mov mov fwait mov sub adcb xor push repz inc sbb mov cwtl outsb xorb inc adc push popf mov int (bad) sub into pop sub push fdivl sbb sbb push hlt repz jmp cmp xchg imul push xorb mov repz mov out out ret rcrl push sbb fmull and sti scas fisubl ljmp cli add ret xor sbb hlt in mov sbb inc jnp pop in sub rorl mov lcall lahf pop fbld popf dec xchg or fs daa out xchg mov sub fadds (bad) cmpb out mov mov sbb sub push sbb std push loope ss out push mov jl push insb arpl xchg clc in ds push sbb int jg xchg mov aad mov leave in sub pop mov fistp lea push sub sti xchg repnz orl repz and sahf xchg fdivs mov or or ret stos adc testl outsl lret sub lret (bad) into dec pop push xor and int3 adc mov or jp shlb sbb ret push call push mov ret repz sbb mov repz mov sahf cwtl xchg (bad) adc ljmp cmp loopne inc in (bad) mull cmpsb dec test arpl das int pop dec xchg adc sar cmp push addr16 sti pop lcall lea (bad) js in push fmull and jg std or in adc aad lcall sar call int fcmove mov lret or add out ss loop cmpsl xor and pop adc pop ret popf mov movsb pop adc jecxz add fbld sbb rorb push js int3 outsl cmp xchg fwait lret mov loope lahf fs cmpb jecxz jb pop pop iret test (bad) sub stos adc fistl popl sbb nop pushf icebp fstl fdiv sub push adc add pop or add pop pop js and push sbb adc stc sti sahf insl mov stc jecxz int3 cmp scas fstpl or out in sub lmsw dec xchg sahf test cmp cmpsl push (bad) adc pop dec cltd xorb sahf mov ljmp xchg pushf push fldenv lea xchg cwtl das sahf test mov cmp fsubs aam sbb sbb cltd repnz shrl outsl dec je into push jo loop jl ljmp ss fdivr xchg adc out lret ljmp scas and push fadds (bad) repz fisub xchg and (bad) out xor loope mov dec jge sahf sbb es pusha int3 cld cmp movsb adc in ljmp mov loope ret dec mov jbe fs mov xchg sbb pop lret push scas (bad) xor aad out imul sti push xchg (bad) mov (bad) sti sbb popf mov pop xor and fbstp push cmp xchg ds mov xchg fidivrl jl xchg push xor addr16 stc shlb xchg xchg jo in mov mov mov js fdivl (bad) outsl dec xor and fldl insb pop lret xchg mov jle sbb pushf pop addl ljmp cltd sbbb adc sub sub or sub sbb adc adcl add mov sbb push dec sbb lret adc lds mov mov dec push imul adc test hlt jg test stc lods add pushf pushf push push pop mov rcl adc xchg ret das lret dec cwtl leave add leave ret test add pusha aas pop fidiv mov mov sbb mov dec jmp (bad) insb sub adc (bad) xchg xor jecxz sub jl xchg lods cmc (bad) icebp bound sbb cmp imul lcall out (bad) xchg cmp xchg dec sarl lret push lds xchg leave int3 aad outsl aad fwait imul (bad) stc call mov shll icebp fstps (bad) lds movsl fistp mov aaa and in mov stc push arpl or loopne rol or nop xor imul mov loop mov cmp in sbb push test sbb mov inc cmc mov ljmp mov jmp push mov imul lea and imul push push and adc cli add loop dec sahf (bad) mov xor or divl xor cltd test cmp fsubrl mov push dec or add add scas arpl (bad) jecxz fnsave mov fwait inc add mov cmp in sbb sub jle out aam push xchg sbb notl xchg add scas lea mov cmp xor leave mov (bad) in or inc es gs push mov lret bound sub and xchg lret push (bad) loope xchg arpl clc or lea inc adc dec jnp inc mov out int3 sbb insb xor mov cs mov cwtl icebp mov (bad) (bad) mov insb ficomp pusha add outsl fstl inc divb in xchg nop inc repnz in sub out insl das test add (bad) repz scas (bad) lret call out insb insl mov pusha sbb dec and xor sub arpl mov jmp push dec arpl xchg cmc add mov (bad) pop xor (bad) dec std adc xchg pop pop lods pop in sub add pop insb repz mov xor or fistpl ss mov lea shl mov xor insl notl test rorb rol xor mov frstor in cmp mov in inc fwait nop mov mov push std cmp pop out fimull add mov (bad) jp (bad) outsb loopne into (bad) repnz repnz hlt mov sbb jp pop or xlat mov rclb stos jl inc insl push out cltd je mov ret pop push xchg sbb mov pusha fsubrl push lods jge jo adc jne jb maxps int std lock ljmp test pop sbb in nop sbb (bad) stc mov sbbl js stos fidivrl jg adc (bad) in mov pop and ret dec loop les cltd scas jns sbb (bad) stos mov adc push mov sub rcrb cltd (bad) mov in int rcll fwait xchg sbb adc xchg jl scas sbb pop aas les mov mov jbe mov xchg sbb rorb rcrb or mov mov std pop inc lock jmp dec lock (bad) jecxz sub add lcall test adc cli dec adc stos pop lods test ret pop jl mov hlt adcb (bad) les fwait clc sub stos pop clc jp jns cld clc cmpsl stos add dec inc inc jo inc (bad) xchg (bad) aad loope pop clc inc or mov or or addl flds pop dec stos inc sbb and bound or pop inc cli inc cli ret lahf lret pop rolb mov dec jl psrlw mov ja and (bad) pop insb mov js xor in in repnz sbb inc pop test pop jg movsb int test stos lods or shr loop out popf aad sub pop rcrl das pop rolb (bad) orl iret pop jg movsl call fstpt sbb mov pop dec mov insb into ret loope cltd cld jns test jno (bad) adc xlat stos mov mov dec adc and imul push xchg inc mov shll cltd rcrb sub insl sarl inc pop xchg enter and in pop cmp dec or ret pop loope test test xchg test jno aad test scas pop cld scas mov cltd cld imul mov lret out out jmp in pusha pop test lea popl shrb icebp dec mov pop or add mov mov gs adc lret das mov inc sub add fs jge shrb rcl out stc int inc je add adc rcrb insb jmp pusha cltd pop jns sbb lds xlat repnz pusha je jne aas (bad) movsl pop adc or insb or lea sbb sub mov or and in cli lds cli js pop inc in jg push pop gs notl add pop mov or int3 je scas mov in mov adc and push push orl lcall lods jg movsb in dec adc xchg lods aas adc mov ret adc shl in jmp in dec adc lods repz mov jge or xchg mov (bad) jne and dec and cltd decb cmpsl in rorb xchg rcrb dec loope mov push (bad) pop push sahf leave inc add mov popa adcb aas outsl dec arpl push jg sbb mov dec sbb jge adc xchg push jae mov xchg push inc inc int jmp stos rcrl add notl mov xor inc scas ljmp sbb aas test addr16 roll push roll cwtl pop dec inc push push fwait pop inc je (bad) hlt mov dec mov mov mov out or mov sti das mov je mov gs jl nopl adc sti mov xor test jl mov jnp jns xor fiaddl (bad) cs push xchg (bad) pop movsb pop cmpl xor in mov mov sti js stos loop (bad) mov sbbl push pop cmc (bad) cltd and mov lret ret pop mov mov rcrl cmp sub (bad) outsb push sub nop add lret mov mov les out popa and stos mov (bad) push and dec cmp shll stc pop test aad xchg and and pop jp mov (bad) pop iret data16 add stc adc scas sub pop push inc in xchg stc mov dec cmp mov push dec fidivr xchg lea adcb mov xchg inc mov sub cs cmp daa shll je test (bad) ljmp cmp sti fsincos push add cmp (bad) mov ljmp enter mov inc cmp xor inc push scas (bad) cli or pusha ds sub pop push or ds in push jbe jae dec addl and xlat rclb nop scas pusha mov push inc sbb stos test in dec enter sarl sbb jg movsb lea ficomp (bad) std loop loope imul and fldl call loopne mov into lcall out in or xor roll push push dec lods lret lock pop int test fstpl cli stc je mov cmpsb cmp loope sub test or xchg adc mov inc mov mov fldenv pop pop clc in test stos mov mov xchg call into push lret nop fisttpll clc xor std (bad) mov jbe jge sti push (bad) jbe scas dec stos mov loopne add or mov push mov pop and xchg repnz fs jae jae jae mov mov jl inc psrlw jns sbb jge test sbb mov cmp inc mov out (bad) cmc push or cli sub ss inc add and aad fcomip add stos ret aas stc adc mov inc sti iret icebp xchg push mov wrmsr fbld adc movsb mov push jl add jnp jne cmc scas sbb jg add (bad) sbb mov icebp movups inc push cmpsb lods dec pop lahf adc lods fidivrl mov lods fnstsw adc push or cmp shrb dec jbe loop shrb sbb jmp fs movlps leave pop jl ja rcl stc or sbb sub dec bswap pop cmc adc test jg jg movsb in movsb add and scas jnp dec fstl xor lds loop test mov push hlt in in pop jge test add test bound ret adc or ss cltd and pop or in and js lahf sub pop sub mov push pop fisubr repz and push or pop jmp push xor xor je pop xor nop xchg rcl mov mov cmc fs (bad) stc push mov mov sbb cld xchg cld addl lret sbb cld xchg (bad) das xlat (bad) aad jmp call sub daa xchg in scas lret push fistpl jg sti (bad) repnz in pop adc cmp xor mov rolb push leave iret aaa test icebp (bad) icebp (bad) icebp (bad) icebp (bad) icebp fxch rcrl mov ret jp lcall xor (bad) jns mov ljmp mov subb add or push gs aad push addr16 into int xor mov mov pop (bad) pop xchg fistpll scas fidivr pushf add jmp movsb loop jb test arpl inc jmp rorl (bad) sbb imul mov ljmp or add dec lods mov add or pusha pop mov adc lods daa enter add add sti and push mov pop mov (bad) out jnp fxam js add xor xchg in scas addr16 fiaddl mov lcall fistpl imul pop int inc mov shll idivb repnz fldenv loop out les mov dec inc dec js scas xchg dec adc test cs fstps xchg cmpsl adc out dec mov in popa int add rclb mov (bad) xchg sub inc cmp aas xor mov movl mov xlat in add xchg mov aad into in mov xor and (bad) xchg stc or jo mov int int3 cmp mov lret (bad) test adc ret movsl ficompl repnz pushf or rcll aam cmp dec mov jae sbb jmp push inc (bad) js mov insb and sub push mov insb push dec mov jbe outsb dec mov or not in sub in mov into (bad) pushf dec cmp test ss das pop movsb cmp pusha mov xlat or sub fwait test jno push xchg fsubl inc push push jb in lahf pop int3 mov mov fdiv sub ret fstps xchg inc or (bad) cmp mov sub mov fwait es pop sbb push mov add aaa iret sub mov cli add inc dec jnp in inc das xor pop into push loope test xchg popa sub sub mov sub cmpsl or xchg cwtl inc aas push enter and add push data16 sti test loopne je and clc out jno dec imul cs clc in cmp xlat push idivb ret xor test adcl dec scas push xchg xor or jno xchg xchg mov cli inc dec mov lret and jl mov xchg sub sub push xor inc inc sub pop es es jg cmp jl ficompl mov test xor cmp jno xor sub into push inc push xchg push inc push data16 dec into jmp imul sarb clc pop xchg sbb lods jl movsb test (bad) lahf sbb adc mov fst testb and pop out fldenv les and push addl (bad) icebp or sbb daa jge sub cmp xlat lea in nop inc aam cmp inc jbe pop sub ss mov push popa xlat test clc imul mov aaa cmc sub or int cmp push notl dec sub xchg shrb int3 xor test xor insl (bad) jae fidiv mov xor incb imul xor incb mov or in or cmp xchg in xor imul sbb jp cmp pop decb fmul cs xlat mov inc mov in dec mov xchg or addr16 mov fisttpl test push ja mov xor stos int3 xor outsb (bad) cmp jge mov stos lea inc arpl mov rclb push imul xlat mov jbe push cmp mov subl xor add push mulb push in lea fcomp mov xor sub cmp push insl push dec scas cs mov sbb sbb lahf add ror cmc lret add sahf inc inc mov insb jnp sbb push daa (bad) mov (bad) sub scas jno rclb mov pop or fnop (bad) inc cmp outsb out sbb xchg fild jg add and cmp aad mov jl lds or inc mov push pop xchg jnp or iret sbb inc xor adc mov pop test xlat clc jns scas ror jbe sbb jmp sbb cmpsl and ficompl lds sbb fs (bad) xor cmp push pop adc mov jne adc mov (bad) ds push inc cmpl hlt lock ds dec sbb ja dec imul jns cmp cmp stc xor or or (bad) mov (bad) xor xchg pop sbb int adc in lock mov imul (bad) int3 dec mov int3 lock xchg cmp in (bad) sbb cmc loopne gs jne out repnz nop icebp repnz sub cmpsb fwait lahf jo inc jo xor (bad) out xor mov mov out pop mov sbb in imul push mov daa negb mov xor stos xor and fsubr stos push repnz scas jb (bad) js stc (bad) inc lea mov or int3 aam loop mov (bad) lock loope mov sahf xor add or rorb mov push daa push inc inc popa mov xor and shl bound in jle (bad) push insl sbb inc fidivrl mov imul sub inc int3 adc pop (bad) inc xor inc sti into dec xor mov sbb imul push or jp outsl mov ss inc pushl pop pop jne ret mov aam cwtl ja mov xchg sub inc mov push lock call popa cmp movsl xchg push inc or loopne sarl ja or stc push out sub or push or decb mov xchg jl cmp fnsave or bswap pop lds add add cmp cli insl and cmp icebp das dec or dec jo and cmp das (bad) repnz cmp in loop xchg int jne addr16 inc imul inc dec fs add jae dec add mov ja and or out push and xor cmp cld jb sbb jle fldt pop movsl (bad) pop adc mov and cltd sahf lock mov outsb int ret xchg dec lret ja jmp mov mov (bad) enter stc js clc test and cmp aaa js cld jmp shll int3 jl,pt push cs int3 bound or or xchg jle (bad) sbb stos pop xchg rclb and hlt lds xchg sbb fcoms rolb sub inc cmp add popa ds cmp cmpsb stc (bad) pushf sbb (bad) shll in popa (bad) push pop movsb cmc aas int scas jmp test (bad) xor call lock fcomp push insb aas jno jae out adc mov (bad) pop inc or xchg mov pushf outsl leave cld pop aad js mov pushf outsl mov mov mov inc dec mov and clc fidivrl cmp inc cmpsb imul scas and add push inc sbb and jl jnp add cmpsl insl jae push sbb fnstcw xor fdivrs movsl mov inc push scas bound pusha mov addr16 push mov sub stc out iret std xchg push out jge sub loop bound jb push mov add add flds xchg outsb xor mull mov and cli ja jl js (bad) inc lret xchg mov (bad) in addr16 fisubrl pop incl (bad) mov popf bound cwtl jno imul and mov jmp mov mov mov jne (bad) movsb les push push jno xchg dec add fimull adc xchg aad inc sub loope (bad) std (bad) out in ja dec inc push xor out inc add clc cmp popf or push setg out lahf push into bound jmp cwtl and in pushf out jge outsl xchg aas mov add inc dec in inc mov cmc dec push shl out sar aad gs mov lret daa js aad shlb adc mov adc fnsave fnstsw xor aaa push or in add sub aaa dec sub popa in jmp fldt sub mov sub loopne pop test fsubrs mov scas xchg das mov scas sbb adc test push mov pusha xlat std sbb movsb xlat popf data16 adc mov jg rclb push aas repz mov mov mov sbb mov sbb stos or int3 test lahf (bad) push sahf cmc xchg scas jp pusha test mov mov mov lcall cmp push imul push inc jb test xor mov adc and mov mov adc loope insb sub mov scas stc popf scas pop and adc mov jbe push push ret rcrb stos lcall sbb insl orl repz adc scas mov jmp data16 xor popf xchg sub addr16 leave mov fldcw mov fwait jmp mov cmp enter jge test mov push frstor sub add mov mov xor std fisttpl xor inc out mov inc orb aam outsl mov push fs xchg rep inc clc (bad) rclb sbb jg movsb neg xlat pop mov mov push (bad) jne div pusha call mull mov divb gs mov int cs cmp ds push cmp es xor int jb cmp cmpsb hlt jne or xor es cmp mov mov roll mov push inc xchg ds jbe xchg jb mov imul adc cmc jo ret mov add ss (bad) cmp cmp cmpsb std xorb scas cmp idivb ret push cmp cmp mov cmp dec repnz call test fsts ss je,pn mov push dec fwait jbe in cmpsb jge cmp mov cmp mov ds push cmp cli fistl out cmpsb sti inc ss cmp fisubr arpl cmp add xor jo xor cmpsb mov (bad) rcll cmp pop mov push ljmp ds loop rclb cmpsb std adc roll jbe gs xor es nop push dec xchg cmp cmp xor jl es jne testb xchg mov cmp xor inc es xor dec idivb push pop mov cmp ss scas cmp out sbb mov les lahf cmp push mov jbe xchg cmp push (bad) xor adc ss repnz mov jo jmp mov xor jbe cmc aam int notl mov xor es adcb push cmp ds push cmp xchg cmp adc stos jbe inc ds pop es adcb push cmp push movsl push cmp ds cmp ss scas cmp lds adc dec fdivs aas cmpsb stc or jne mov ss push ret test ss cs xchg (bad) pop mov cmp mov andps sub aas mov stos ss cmp mov dec push xor and adc lcall cmp xlat add and mov xor int mov cmp inc cs xor jbe push cmp push xor cli jbe push ds mov cmp out push pop mov push int ds jne lret mov add xor cmc and and mov jbe xchg cmp gs cmp cmp pop mov lahf cmp aaa inc cs or mov int3 xchg cmp push aas mov mov mov push push lods es jo or sti xor (bad) lahf cmp add adc mov les mov flds in es cmp sub rolb inc add or roll mov push push jg cmp xor xor es adc or xor cmpsb pause ss xor es aas adc ret scas or pushl sti ss cs (bad) jnp cmp cmp xor mov ss repnz xlat inc and es push cs push xor cmp push xor dec xchg cmp pop mov ss xor pusha ss stos add sub xor ss int jnp xor es lock mov cmp rorb push (bad) mov aas loopne or xor sti mov ja pop iret dec ret mov jo adc nop jnp fs orb adc outsl in pushf mov fistp pushf stos cmp fsts xor xchg jp fdivl xchg mov test in psubusw out xchg push cld movsl cmp cmp cmc lea and cltd inc xlat pushf sti in push data16 dec jae xor add sahf fdivrl push icebp arpl fcompl dec mov (bad) into adc sbb imul fwait mov das mov cli xor xchg arpl dec fnstsw ret xor or push mov and dec cmp mov jno adc pop fpatan cmp mov mov mov popf decl xchg adc in pop scas and dec fs insb add lods inc enter mov mov dec sti push sub int3 cli xchg out sub movsb pop push mov out sub lea push btr and repz push lods lods sbb xchg les bound loopne jp adc imul mov pop daa jmp xchg pop test (bad) push xor push cmpsb dec test fcompl pop xchg jecxz inc out add mov (bad) nop sub decl rcrb enter xchg leave push sbb inc push repz mov adc in arpl push mov out es push inc mov mov loop movsb movsb mov (bad) and xor and dec mov divb push push rcl dec pop cmp fsts stc insl sbb inc mov stc cmpsl sub test inc and dec sar sub cmp or pop sbb xchg jae (bad) fiadd inc dec jns (bad) sub lods adc jp add in arpl insl cli fist jle mov mov cmp cmpsl inc insl imul sub imull (bad) jle pop mov ja cmc lods xchg xchg sub sar mov pusha ds mov add mov sub lahf sbb mov pop xor pop or fwait and dec push sub or mov in xor std (bad) pushf and mov ret loope outsb xchg mov cmpsl inc jg mov mov addr16 and mov aaa lcall jp aaa mov push and and mov jge mov sbb incl (bad) cs icebp mov pop movsb xchg xchg inc mov rcl mov fisttp pop daa gs sbb pop popf gs gs xor add out insb mov jge pop mov ficompl cs jmp mov insb push (bad) sti xchg movsb add pusha push sub dec and das out sub fildll pop cmpsb loopne mov mov sbb dec pop orl test mov adc mov mov lea xchg mov movsl jmp mov mov sub cs movsb cmp mov mov xor mulb stos sbb fist cmc mov sub mov int xor push xor cmp call lods pop dec lds js xor jl mov add push pushf jo jg mov movl rol scas push xchg test push pop mov into dec outsb inc cmpsl mov xlat dec sub inc xchg mov jmp lcall or test scas mov adc clc xchg mov in aaa inc lock pop xchg dec cli xchg and push clc or lret cmp out lods movsl sbb jge stos mov mov sub jge roll push movsb gs ljmp mov mov cmp lods (bad) leave out enter mov cs in and cli mulb stc jge xor push or ja jbe mov jge xchg cs xchg push inc icebp sub movsl xchg jne cli test pop lods sbb fwait sub sub push xchg push movsl jg jecxz pop int jmp jle out sahf inc int aad cmp daa cmp jmp hlt stos (bad) scas stos (bad) into push fldenv mov fist sub jg jge ret mov dec cwtl ds sbb inc sti rolb sbb nop int sbb lods cmp lahf mov fimul cmp adc mov mov data16 lret mov fnstenv xchg xchg gs lret inc (bad) or stos sub mov mov and xchg shrb adc cmpsb ds pop mov aad bound add (bad) std inc mov imul dec and (bad) lea aas out (bad) mov cmp loopne dec push loopne jecxz aas lret cs xchg ret ds xor arpl and or (bad) loop lret into enter jecxz popf mov xlat enter or sub rorl es mov or stos bound mov icebp mov data16 lahf (bad) in in rorb pop addr16 jo push bound sub sti fdivs inc subl xchg adc loop mov jecxz out mov sbb or (bad) mov push fnstsw jge xor adc cmp mov imul pop cmp das mov nop xchg fisttpll xchg (bad) bound sub das add (bad) jae,pn xchg push push lds leave xchg cmp cmp div xchg push mov pop mov mov stos subl jge inc xor sti imulb mov mov mov jg or jp pop cmp jle jae and pop xchg xchg push cmpsb pop pop or push das (bad) cmp aad loopne js in dec outsl adc and jb jp or xchg int3 xor push jns (bad) (bad) inc pop fimul mov jle data16 fisubr jge nop xchg testl sbb out lods fcomp mov cmp fiaddl aad jbe cmp push inc loopne push mov cmpsb dec mov push arpl lret mov loopne pop jge fidivr vrsqrtss xchg cltd sub push xor loop add ds mov dec mov ret cmp cltd xor push push insb out mov cwtl jg jo mov aad inc pusha mov mov (bad) rorb xor add inc or sti jns xor and or or pusha cmp jns xor sub mov push inc pop popf pop jecxz mov hlt popa cmpsb test jge mov test fstpl mov jmp cmpsl mov dec repz aaa jne cs inc jmp adc mov ret lock test cmp and inc int3 push and or es xchg shl in mov daa pop (bad) lock dec fimull ja jb push push push out insl leave jbe lret in mov jo adcl mov push aad out push les stos dec lea mov iret pop mov ds shlb orl push mov jb sahf mov (bad) aas mov imul iret lret inc mov jb ds stos jae insb mov int pop xchg fnstcw inc xchg push loopne into or stos cmpsl repnz js stos scas mov jle sub mov inc adc negl mov cmc cwtl lock addr16 sbb push (bad) mov syscall stos jle cmp xchg fisttpll unpcklps adc jle dec call push stos and ljmp subl (bad) ss mov cmc insb test jbe fcompl rclb fisubl mov out sub repnz jecxz cmp xor xlat mov daa int sbbb iret or stos lods (bad) fs arpl jb in dec stos hlt fwait dec or (bad) dec adc insb rcrb pop ljmp (bad) lock repnz aad cmp xlat xchg push stos insl negb enter jge cs xchg xor add movsb in push push fs mov sub lret scas push ja (bad) or xchg scas ss (bad) out iret fstl jo sbb dec add mov adc sti mov push add int push (bad) aaa cli (bad) dec (bad) outsb aam xor call push repz call and ljmp mov pop mov js xchg aam push arpl cmp loopne push and xchg nop pushf sbb sbb cmpsb jecxz in daa cltd je sbb arpl jecxz inc xchg xchg cmp lret fisttpl push ret push ret push sti cmc xor cmpsb lahf pusha xchg mov pusha test std pop cmp jecxz inc xlat icebp clc orl xor pop xchg imul hlt outsb aad cmp mov mov add cmp xor sbb test add scas (bad) icebp ficompl adc or sbb out cmp imulb shll xchg fld negl inc js outsl leave ret adc dec sbb (bad) pop test fwait jns jle std icebp xchg and add loop or pop and or (bad) jmp mov sbb adc out scas push cld movsl jp sub mov cmc pop cltd mov pop stos push push rcrb stc loope jno inc (bad) xchg add xchg sbb je jns (bad) jo mov ja test add sub stc xchg mov loopne push and xchg xchg or enter dec repnz fistl jae inc mov mov aam jnp xor pop ja lock inc es inc push pop fcmovb aaa jb test (bad) hlt incl das dec adc xchg and (bad) sub mov sbbl add test fnstsw mov imul icebp mov sbb sbb iret cli pop jbe or or fs or push add std xlat loopne ja es dec stc xor push in aad xor pop sub jl (bad) (bad) xchg ret mov arpl insb ja stos cmp loop jne daa std fbld sqrtps test outsb nop or sub sar int cmc leave lock enter in mov pop xchg dec jmp add scas dec ljmp xor mov add jae pop lods loopne ret pushf mov mov or es or pushf mov jmp sahf xlat jns hlt arpl dec jo add mov sub imul xchg lods sbb mov repz fwait mov gs mov inc or fidiv es clc xchg push sub inc mov xor xor test pop cltd std out adc out js push xor mov xchg (bad) lahf movsb push lahf xchg jp sub jge pop insb push jae sbb fs cli je and dec inc inc adc in cmpsl jne (bad) sbb or lds mov cmpsb sbb jp adc adc stos and insb aam aam lahf outsl inc sbb cld mov jl (bad) xchg mov jns cmp sub jg push dec icebp lods adc cmpsl xor mov and cs add imul inc test fstpl jno dec jg xor arpl dec movsb (bad) ret jle aad stos (bad) lcall test sbb (bad) adc aas pop push aaa loopne xor movsb xchg loopne jle int3 mov mov jmp xor add test mov icebp (bad) sub push fs jmp and push cmp jnp,pn mov loopne adc fs js adc push in mov xchg cmc enter adc fstl rolb int andl xlat loope inc sub negl push sar mov dec (bad) cmp mov lock cmp mov fidivl mov hlt incl sbb dec mov push loopne mov enter dec mov dec stc sbb dec icebp cmp jb and outsb jns in xor cltd fcompl mov outsb cwtl shl ss inc mov lret xchg pop fwait jo loope loop dec push or scas lods js movsb xchg out cld lret dec pop jge sbb jae pop push lret dec test mov sub adc loope mov and arpl adc out inc inc fidivl sahf inc sub jae inc jmp push outsl jg dec cmpl xlat lock rolb inc rcl mov js mov fs mov in aad iret imul repz inc and mov push in push xor loope adc daa test cmp je lea outsb out jnp xor pop xchg xchg pop dec int3 xor adc dec lahf lock aas add adc aam cmp xchg adc out je push jo movsl rcl aad inc pop jae mov adc pop jb int xor sub mov xchg mov bts (bad) jo inc inc mov (bad) sbb test mov lahf cmpsb int or mov aad loop cmp loope in test cvtdq2ps test test xchg lods xchg inc dec fldl pop mov ja add jnp jnp pop mov push and cmpsl pop nop clc push adc aad xlat adc and (bad) jne xor adc in push sbb es cmp popa xchg imul mov ja add inc add decb jne inc out mov andl or or les mov loop adc cs rcr push push mov and js sbb fwait cld test and mov lahf push int mov stc inc adc xorl gs cmp not or mov inc dec add cmpsl fsubr mov mov enter int3 mov lds in repz ret inc cmp mov pop mov addr16 sub push sbb (bad) mov cli or jecxz or push jnp dec aas out std lock call (bad) xor clc ss sar aaa insb cmp dec jle jmp cmp sbb sbb xchg fsubrs inc test sub inc add scas sub push push sbb data16 jne push xlat fwait (bad) orl and mov sub xchg or xor imul rorl jl lock push add pop inc mov sub loop test mov sahf insl out daa popa or lret scas push or sahf fildl and cmpsb into lock sbb les loopne bound or xchg xchg jno in jne inc and jno adc or inc negl adc nop out inc push ss mov lea bound add pop and push test aas test ja jmp std and ss inc out dec and ja xor cmp sbb jo (bad) jo sahf sub repz js stos mov adc test sbb lcall mov adcb in pop test and repz xor cmp dec outsb imul jb xor dec nop dec jno cmpsl pop gs mov mull (bad) add rcr pop fwait cmpsb cmp rcl ds and mov mov call mov mov (bad) sub sbb mov insb jmp or ds shl and push adc sub (bad) jno lds mull out inc dec cld push cmp xor add pushf or stos or and push adc cmp lret jp mov and mov jmp mov pop inc data16 lea and mov mov lock mov in (bad) sbb adc (bad) jnp (bad) adc das stos out sub jbe lods fildl and xor pusha pop xchg push fistl and xchg push sub insl dec and jnp sbb enter pushf push mov mov aam mov mov ret adc ficomp adcl cmp outsl cmp add add call cli push mov xor or mov lea pop repz push movsl mov fs test add cs or int3 push dec mov mov addr16 add repnz imull ficomp xchg lods ror fistp fld ret insb jb jno cmpsl lcall sub pushf frstor leave stc cli mov push xchg xchg (bad) sbb mov (bad) into push (bad) lods inc cli stc mov pop test mov pop addr16 ret mov lods cwtl mov mov fist mov or (bad) mov sahf ffreep nop push jo aas imul out cmp inc test repz inc cmp cwtl mov dec ljmp mov or out repnz push dec insb jmp ss scas (bad) mov mov inc (bad) (bad) leave mov dec xor popf hlt out out xorb xchg cmc push jnp dec or adc imul mov xchg stc and out push jmp enter sbb pop lock cld dec outsl (bad) mov in cs in sti inc or mov test xlat data16 mov sub jne jp xor shr jmp xchg cmp add aaa push xor push lds insb ljmp dec dec push lret and adc pop test cmp idivl push dec xor adcb cmc xor push addr16 enter sbb rolb sar add xor fdivr movsl mov unpcklps fbstp bound in repnz ljmp mov cmp ja or mov out pop cld test mov mov inc adc cmp nop fs pop out push sbb inc mov stos push inc xchg jp stc inc xor xor lcall (bad) in mov (bad) and push mov arpl dec fwait orl sbb mov loope xchg jp dec push loop es aad mov xlat pop fcom pop lahf cltd arpl add int mov aas pop cmp push sub aam in cs cmc jb test mov call fiaddl pcmpgtb inc push or add sarl adc sub dec and jns sub mov dec jmp dec into xor lret and mov push fs xor jae push adc call jbe imul int mov adc into jle lret cwtl pop and pop into inc cmpsl stc lock pop push pop pop push dec jbe aad and xchg leave push mov fsubs cmp pop push lcall pusha enter leave adc or push cli push push xchg cmp je pop and add push xchg adc jb shr in sub push out xlat adc fiadd lds or rcr and (bad) mov mov andb mov inc pop xchg cmp xchg imul movsb rorl test pop sbb sbb repnz dec shl pop mov dec outsl lss pop dec dec scas dec (bad) xlat sub (bad) cmpsl lret or mov out cmovno cli sbb je,pt in fisubrl test xchg fsubp xchg daa xor fnstenv out loope pop xchg pop fisttpll rcll push cmc cmp loope rcr fldcw leave out mov xchg jbe jecxz mov leave lahf pop mov insl popa xchg pop xchg xchg int push enter (bad) out iret push decb test ja add jp mov sub or je fmuls imul lcall fbld mov (bad) xor lock lret mov sahf dec fadd movl push ds into push rcrl mov in inc repz ffree jmp sub scas adc cmpsb adc lret test incl enter movsb mov inc push and pop sbb cs jl mov mov test push insb std repnz into cmp mov lods cltd and out adc sbb fsts jne mov nop pop jmp cmp lds push jge ret test stos (bad) repz or test mov repnz inc int3 push fist mov add pop stos adc inc jne fistpll inc out loop in loop push sub (bad) mov cmp ret add rcr out stos or ret jg sub mov (bad) mov bound xlat in int mov cmp mov pop scas inc dec popf and scas mov mov push or xor dec mov lret int3 mov xchg xchg fwait jl in jl std shlb cmp fs sar mov (bad) fildl rclb adc mov mov clc jl das div or jge cmp sbb fdivl inc jle mov inc sub push mov xchg leave xor in mov xchg dec mov pop ljmp test sahf add (bad) jnp jg je pop and and push sbb jbe pusha inc jecxz push push sub fldenv mov popf sub in mov inc xor clc cld cmc mov (bad) in mov cmp lods (bad) push icebp mov in push hlt addl dec pop sub movsb (bad) xchg lret popa jmp pop pop frstor fwait mov lds out adcl (bad) dec xor rorl popl or dec pop fadd arpl mov adcl push dec dec jnp xchg lds mov sub inc dec lahf adc xchg mov outsl push sub std ficompl pop jmp xor push mov jno stos inc (bad) popf test jl aam and mov xchg sub loop pop ljmp jnp popa je (bad) stos sbb test call and and add out dec and insb sub sbb stos cltd push insb stc ja mov inc xor mov xlat sbb outsl or lods push ja mov js adc (bad) movsb cs mov pop xchg dec ds mov sub (bad) insl mov jno setbe (bad) jge xlat jnp (bad) fnstcw inc mov xor mov dec or sub cmp ds rcll nop aaa (bad) xchg fwait inc clc mov cli out (bad) fsts mov popf (bad) scas push adc mov xchg (bad) mull cmp adc les in pushf dec movsb push arpl test add pop imul adc int3 mov gs mov fiaddl cmp into mov inc es xlat xchg push xor add add sub cmp ds push xchg pop dec and xchg cli xchg push aas pop clc aaa test std cld jmp test xor outsl xchg sbb xor lahf idiv je lret in (bad) mov dec jnp xlat in loope jns out push decb jo ret sbb inc mov in or mov lret (bad) loopne cmp or int pop popa push lods in dec inc mov jmp xchg fist push and out fcmovnu and out movl pop out cs pop xorl mov int3 in fidivl mov js test dec jae lods in outsl mov outsb aas (bad) mov enter stos push push sub cmpsb or and cmc push dec push jo,pn or mov fisubrl sbbl and add jle jmp lcall sub imul inc lea add and or jle and (bad) or push jmp cmp cmp push sbb rolb sub addr16 scas loope enter pop cli cmp lea nop mov fsub aaa sbbb movsb clc xchg cwtl push jno xchg aad mov sti jne rorl enter jg xor xchg cmp jl add or push jmp mov fwait outsl aam sub dec sbb and jne fsubrs sbb fdivrs adc pop sbb std ret mov sbb call int stos xchg shll (bad) bnd mov orl sub pop jle mov adc psubq mov xchg adc stos xchg add or rclb data16 lods cmpsb inc mov xchg cmpsl xchg insl mov and lahf ds push ljmp sub sti mov das aam mov test shl adc jae push dec js and or pop dec mov mov test sub lret leave (bad) sub and adc xor insl cmp popa movsb sub ret jecxz (bad) lret in out or cmp or (bad) mov je clc mulb adc mov data16 dec mul cmc loop movsl mov sbb leave jp pop mov xor mov je mov inc and inc cmc mov mov jne sbb repz mov daa rcrl cmp and xchg xor faddp adc cmp (bad) dec fdivs xchg adc xchg les adc inc stc fldl lcall mov fcmovne std cmp ds js ja lds sbbl mov data16 ds pushf dec mov or and mov hlt xchg push cmp or out jmp mov push int imul lahf pushf jge cltd fisub out mov or (bad) fs jmp lds shrb mov cwtl fsubs cli pop sbb scas outsb in in pop sahf dec cmp in inc xor dec test add cmp mov jle pop idivb push call jo inc pop sub int3 out mov or lahf addr16 fidiv imul lcall mov nop outsb divb jb mov or out xchg jbe jg fdivrs mov in mov and cmp jne leave xchg faddl lock inc or out (bad) cmc lret mov mov adc push insl test inc lods cmc pushf (bad) sbb popa xchg arpl dec pop int mov ret mov pop and sub outsb call test dec add sub dec dec xchg adc (bad) dec inc mov push mov xor jb repnz pop scas mov (bad) lock push cs inc or iret les jns and mov in mov push inc bound xor push or je inc sub lds sub cmc les daa gs lcall xlat data16 pop cld mov adc pop mov xor or fisttpl dec push inc jp add cmp and icebp out adc fnsave and scas push xor shll dec or jp add mov lods shr sbb or jecxz mov (bad) sbb shlb push rcrb sbb jns inc cli push push pop mov jne aaa repz fisubrl rcr inc mov lea mov fisubr scas (bad) or push cld loopne int adc ss lock add jl or jecxz xchg cmc lahf movsl jg mov lahf pop (bad) push mov add mov into lret inc pop mov mov dec decl push stos xor inc lret push xchg insl les aad xor stos sub cmp pop push lods lock mov and ds pop add jno loope xchg jbe lea int3 (bad) or and fs sbb fdivs adc out cmc rcrl lret into xchg push mull or mov push das stos xor jbe add push imul test (bad) sub aad stos and clc lods cmp test in ds enter add scas or adc arpl pop push into lahf fiadd xorb mov test int3 das insl addr16 push jmp int3 enter cmp xor ja lea (bad) cmp jno push popa data16 decl cmp lods cmp ljmp cmp negb mov les push mov aas xor clc idiv es sub mov (bad) dec jnp in jo add or adc repnz sbb sbb clc sub pop lea addr16 enter mov (bad) jb inc sub inc cwtl loop jmp and push or push lret jle dec pusha inc test inc jp or add sub std mov cld addr16 pop lahf (bad) aas addr16 jne xor dec sti xchg (bad) push aad out shr ljmp clc mov call imul lods inc mov shrl dec pop insb arpl mov mov inc dec sub and lock mov in ljmp bound mov rclb shrl mov mov xchg dec push sbb (bad) stos loopne shlb push cli xchg mov inc dec add inc sub lock jge lret mov sub adc sbb mov icebp fcmovnb inc adc icebp enter jo fwait xlat mov push cmp fimul sub sbbl xor pop lahf mov mov je push or popl out mov pop pop arpl lods ljmp xlat pop out cld jle mov dec stos adc and push movswl pushw inc test xor (bad) sub xchg sub push sti lahf jg,pn mov je add shlb sub mov sti notb inc jne xchg xchg push pop cmp cmp xchg adc push and outsb in clc jb mov notb in pop mov les imul jg sub xchg ljmp adc mov mov (bad) popf sbb push int3 js lock ret xchg jle adc arpl andl jns insl add movsb je pusha push mov es sub dec stos sbb push pop jecxz cmpl divb xor and cld into xchg mov pop sbb xor xchg ss sbb loopne jmp shlb mov jb dec js add popa inc push das jge cs jg or sub push and or enter or fsubl xchg dec mov in stos aad mov sub add inc movsb cmc jae add outsb mov mov mov xchg scas ljmp out and push stc xchg mov aas pop xchg std aaa cmc icebp int3 pop aas jle jge mov cli pop dec xor fsubs add mov add and outsb test sbb xor (bad) stos arpl movsb mov sbb sti cmp ljmp mov fsts je mov jns out dec xor loopne faddp in pop out xor pop mov mov jg rcl or dec pop jmp dec adc das std cli (bad) cmp loop dec pushf cwtl inc or push in sbb sbb or mov outsb mov jmp mov test shlb sbb add sub fsubl movsl mov adc xor inc sbb loope or jne push mov jl pop xchg push push mov bound pop mov inc in daa sbb add xor adc sub push repz mov fs rcll sub mov outsl jb cmp and les xchg sub rcrl jmp scas pop pop xchg shrl pop sbb mov movsb pop cmp adc popf xchg jno stos fs outsb fistl bound (bad) xor inc and or ljmp and ret mov fwait mov dec les sbb stos jmp add push push xor sub je,pn and jae lret mov cmpb popf adc jp xchg and roll (bad) lahf in mov dec out popf or imul or cmp rorb dec add dec outsl popf jae mov out adc or dec push push sub (bad) arpl fs xchg xchg aam jle sbb (bad) ficoml stc mov push mov scas rcr adcl xor push mov pop aas fsubs in stc xchg adc push mov subl mov out adc pusha sub in jne pop pop fild sbb out aas js mov push mov icebp jo push call mov ret jo dec mov or sub and orl pop fbld ret loope cmpsl sbb adc fldcw stos aaa test cmpsl sbb inc jnp fnstenv inc fyl2x pop pusha hlt je scas or incl mov insl test int jne iret inc (bad) aaa mov cld lcall xlat inc out sub xlat (bad) sbb xchg inc std (bad) std mov ss sbb push pop repz sub out test (bad) jno or sub xor dec mov imul mov in call xchg mov xchg xchg or mov cwtl inc pop cmpsl ss cli add xchg mov sbb cmc jne cmp and sub mov and add sbb inc bound sub mov cmc jl cmpl aam divb nop data16 lret pop ret ds jle sub mov mov into xchg pop ss and push nop mulb xor out inc popa insl inc stc push pushf fidiv mov xor jo loop mov or lods push out and (bad) mov jg mov mov add xchg sub in fcmovu bound pop shll push xchg stos imul mov fistpl mov lea enter push cmc mov xchg repnz sub add movsb cmpsl mov loope mov mov mov mov inc mov (bad) xchg lret movsb daa or aas cmp data16 xor stc test aam mov dec aaa jp jmp out pop pop mov pop pusha es push (bad) pop test mov pop js xorl fbld lea jmp push (bad) aad clc sub inc test pop sub xlat xchg int3 dec insb inc aas xor js cmp lods sub inc xor lds sahf jno xchg lret popf lcall cld or jg pop push popf mov dec test cmpsb push sbb popf nop sub push in pop pop into out outsb pop adc jo mov rorb mov inc push push mov sub sbb addl pusha fnop test subl into ret hlt in (bad) rcpps std (bad) push jns add xchg jge sbb mov sub mov sbb out mov sbb adcl dec outsb test rcll aad lcall mov xor xchg pushf mov fdivrs (bad) loope fimull jle xchg int sbb jbe jp jns mov out push add lret fsubrp push xchg ja outsl repz ret movsb fs cwtl pop and sti xchg lods ljmp in insb neg dec pop dec je arpl outsb jno sub loope mov cld dec push xor jle not inc dec dec mov sub xchg mov cmp sbb or imul mov in inc xlat ficoml in sub fiaddl test lods xchg (bad) xor pop test pop pop imul sahf push out sahf (bad) mov push (bad) xor in in xchg hlt lcall sub fimul jg in xchg int3 xor mov add clc (bad) pop pusha (bad) fstps inc mov push das lret adc pop mov in popf mov ja (bad) mov or insb add pop push cld mov xchg push pop shll mov jg add pop sub add sub out fisubrl leave xor inc mov scas mov shr jnp xor push dec fnsave ret mov sub decl or movl cmc push pop shrl popa lds mov fwait sar xchg mov cs jno and sti daa sub inc dec inc push jmp std mov ja es (bad) fnstenv add push sbb jbe pop nop inc (bad) or push adc (bad) mov (bad) out stos pop clc sbb inc data16 mov int stos mov daa xor and xchg and adc jecxz push cmp cmpl jl pop add cmpsl stos add and xchg out (bad) in push cld fildl xchg lods lea and ja cmp aas (bad) in pop aaa pop jg cmpsl push outsb xor cmp mov lock xor into in jp sbb push inc inc mov (bad) jae mov push (bad) cmp fdivrs sbb pop add das pop inc sti push lods or in push and pop adc xor imulb sbb icebp icebp shrb adc dec iret cltd cmpb fwait add cmp mov aam call fcmove imul mov or es les or mov cmp jg or inc sub mov mov push lods inc sbb ret mov cwtl xor orl xchg (bad) repz in mov xchg hlt xchg xor xor movsl popf mov cmp or mov fsubl mov lret icebp sub push hlt add push add notb (bad) fucomp xor (bad) out into out aas insl out (bad) stc mov fstl inc mull (bad) loopne out xchg in cmpsb push sub addr16 pop outsb cmp ss mov jne cmc inc pop mov push ss (bad) cli lret cmp adc adc mov adc xor in mov popf es mov stc int3 bound mov jae xchg sub push (bad) inc cld sbb loope stos in fdivrs jp ja push in mov pop jmp dec jb jl notl out xorb jns call movsb fistl mov mov (bad) sub je out fs mov or les pop mov dec and jl adc andb jb idivb or or flds push stos scas bound jl nop hlt sbb dec stos or leave cltd and dec sbb mov dec xchg out es in sbb iret pop sub sbb (bad) jae dec adc out mov push int3 mov inc stos popa sti mov sub fbstp outsl xor arpl cld (bad) faddl inc and push sti jge mov dec cli or push push jle call mov jne ds cmp aam xor inc adc orl push andl xchg inc mov inc outsb repnz loope fucomip mov or sbbl inc dec fcoms xchg negb adc (bad) add lret push pmullw insl nop push popa jnp popf add push mov (bad) test cmp cltd subb sub daa sub push insl iret push ds hlt xchg addr16 pop cmp mov outsb mov and and stos out jb ljmp cmp inc cmp pop cli outsl ret addr16 pop inc mov sub cmp sub jecxz addb pushf push insl insl mov mov inc jno (bad) data16 jb in xor fwait sub mov cmp inc lret out sub xchg xor xor lea hlt jg inc cmp cmc leave and and push xchg push hlt in jmp rcr dec sub mov sbb test test mov xchg rolb mov ljmp popf rorb mov lods sub adc pop hlt add mov pusha xchg or js push fstpl outsb outsb cltd cwtl int3 xor sbb and sub outsb lods int cmp sub sbb jmp lock aas sbb outsb arpl add mov sub aaa and js and decl fxch shrb imul pusha arpl cmpl push imul imul mov pushf pop cmpsl jge arpl push or notl inc jp lods sbb enter data16 xor sarb sub lods mov int3 lods sbb sbb cmpsl cltd in int mov cmp fimul or repnz subl rolb rcrl xchg jp (bad) cld xchg and lret jns icebp jno mov and push jmp das sti (bad) hlt mov jp xor lret lock ret fmulp xchg mov and push mov das repnz mov add andl cmp cmp aam ljmp enter lret lods pop shr movq popf lahf push pop adc inc xor xor mov mov outsb (bad) into pop lahf loop gs mov mov repz in aaa add mov xor add faddl les fimull enter xchg enter or or cli lret nop mov and inc dec adc stos cmp test repz test mov mov outsb cs pop je xchg clc and fmull cwtl iret adc mov sub jae mov sub and jecxz sub sub push and stos jg add pop stos mov pushf add (bad) (bad) jo mov and loop popa and cmp into jl jne add test test aaa adc mov ljmp sbb mov inc jno mov xchg lods fwait xor mov mov mov xor mov inc xlat int3 mov hlt pop dec cltd in and mov insb ret insb gs in sub cltd sub pop sbb fiaddl cmpsb mov cmc mov ljmp movsl cmp imul stc fldenv leave mov mov sub xor ljmp adc insl icebp mov or and ss (bad) push xchg mov mov sub mov das (bad) sbb ret inc pop insb dec hlt mov scas sbb (bad) cmp mov xorb sub cmp dec (bad) aas loop push clc mov inc mov push dec ja (bad) popa (bad) lret jns push clc mulb pop mov push (bad) xor insl jb push or pop xor push pushf or jno insb mov mov push adc aam into divl out mov cmp loop scas mov inc (bad) sbb mov mov mov enter fnstenv lret stos jnp insl enter fwait inc in rcrl dec int xchg add (bad) out inc push jo xchg (bad) aaa or fisttp inc lock aaa lahf ret pop cmp cmp push or fnstenv leave sub push and ficoml (bad) repz call subb pop lret enter cmp inc xchg add sbb mov (bad) stos (bad) rolb (bad) xor fscale ss inc mov out sti adc arpl out mov stos or scas mov cmpsl jae push in jnp call gs pop es push jp jge sub xchg popf add or inc or mov popf movsl push in mov fadds (bad) (bad) movsl lahf cmp cmpb adc or jecxz lea cmpsb adc xchg mov ja mov xor pop lock lcallw xchg imul mov in push pusha lea or dec xchg pop sti pop mov xchg add jns int xchg sbbl push pop add rorl mov inc test (bad) fiaddl mov inc xchg movsb cmpps push inc inc cmp jno aam pop jnp add and fildl in sbb fadds test mov fistl xchg jecxz pop cwtl inc push mov hlt icebp (bad) das ret es lds (bad) test js (bad) push rorl pop jno into or data16 arpl jne xchg pop xchg cmp scas (bad) jecxz std (bad) ja icebp or dec jl mov xchg and xor sbb or push mov mov sub out cmc sub push aam enter out daa add inc (bad) inc cmovs adc loope adc dec cmp mov icebp xor loop ffree xor mov in and rolb pop jbe aas pop sbb pop inc mov jb pop push (bad) mov add xor push xor and mov (bad) stc jmp frstor jmp call sbb lea push jmp fld and push hlt pop out (bad) push stos (bad) sbb mov and push mov fcoms outsb cmp out jg ljmp mov push sub lret lock or pop add push add repz mov jl sub je clc pop int3 sbb inc pusha leave mov ret add or jge (bad) jno adc loopne and out pop sahf out sbb nop sbb dec sarl sub in cltd rcll cmc pop leave sti mov ret fsubs repz test jmp stos testb cwtl aad and sti data16 leave push xchg cmp enter addl push imul ja setbe mov push shll jge mov imul jbe dec aas outsb dec repnz (bad) dec or push adc iret xor add dec pop clc loopne clc adc mov in adc lret inc arpl inc jmp mov add leave fidivl jp cmp xchg (bad) dec into call data16 inc mov push mov xchg mov cs xchg push int3 je mov ja dec mov mov push out outsl xchg jnp pop xchg sub (bad) or lret or (bad) mov mov pop inc xor mov mov mov sbb leave mov mov or pop xor mov mov stos pop ficompl ss add jmp test scas idivb sbb (bad) je inc push (bad) insb inc push lock test inc dec adc push sbb xchg push jb loope mov sub (bad) mov add ds gs es cmp imul inc ret and push cmp mov inc mov adc xchg icebp adc sub nop insb gs lcall mov xchg add sub faddl imul mov push or adc xchg mov cli sbb je loop sarb in fidiv push pop mov lret iret sub les mov je push test lret pop cmpsb inc aas jnp fstpt push fwait hlt or add sub xchg in lret xchg jmp mov cmp int3 ret sub cwtl cwtl insl fwait mov mov (bad) jnp xor fistp inc cld push xorl mov xor (bad) (bad) outsb mov clc scas aam inc lock pop iret popf stos mov int sub fs mov or mov mov xor mov out mov es (bad) pop rolb pop dec pop je sbb lods push imul pop stos xor out add cltd inc mov int xchg fidivr fbstp mov test sub cmp cmc pop lods or mov lods mov lods sbb mov cmp loop lods lret xor push push sub leave mov mov xchg push js xchg and (bad) and sarl cmc jge (bad) pop push popa (bad) lahf jge outsb pop sbb dec push (bad) xor mov xchg in lret jle pusha mov les jae push sbb leave sbb ret fstpl insl ret xchg addr16 jge leave sbb mov pop and repz or out mov adc adc (bad) out push pushf hlt mov into (bad) or cmc pushl mov pop mov dec push (bad) jne and push leave int3 sbb sub mov jbe dec push adc movsb lods cld out cmp dec push dec sbb es loope mov punpcklwd inc sbb rcl daa and and loopne inc sbb int3 arpl adc daa adc dec mov pop lock lods in leave (bad) adc (bad) pop repz mov mov pop mov sahf jecxz shl icebp dec xlat lretw xor cmp pop lcall cltd fcoml addr16 jo or aas dec xor xchg adc pop pop enter push into cmp or hlt in sub (bad) cmp lods fistpl mov add sub push jmp inc into (bad) insl adc mov xchg dec sti dec and aad (bad) mov test xor lods aam test push cs (bad) in es lock aaa mov rclb in mov mov cmp xchg xchg pop pop loope sbb push pop inc push jo push (bad) loopne push out inc sub rorl pusha adc in push push movsb icebp jecxz repnz cli pushf inc or xchg loope mov dec fcom mov pop mov addl sbb ret and outsl cmp push (bad) jns mov mov fsubr dec add inc adc dec xchg imul outsb xor inc ss xor adc gs dec dec wbinvd lods pop loope pop mov lcall cld call fadds or xchg push (bad) pop lcall add mov xchg in inc js dec add pop (bad) int3 inc cmpsb add adc (bad) xchg jecxz fsubrp mov rol stos inc dec inc test and cmp inc mov mov and or je xchg pop imul mov in outsl icebp out sbb mulb pusha cmpsb mov adc jge cwtl imul push sbb mov adc xor call in jp jo inc cmpl das mov les sub dec insl sbb (bad) jl in pop movb sub adc fstpt inc inc sub adc inc cmp addr16 imul xchg lock test mov cmp sti pop dec sub out sbb mov sbb je lea adc lcall les and pop ja call xchg (bad) test fimul mov enter lret fiadd jp sub mov (bad) add sub pushf jbe jo ss jp xchg je in sub sub jp pop xchg push (bad) xor cmp adc sub xor push cwtl stc outsl out mov xchg push xchg js fildl sbb sbb push leave idiv int daa ret push movsb out imulb inc or xchg sub bts push fistpl inc scas outsb shlb pop bound call fnstsw jmp lret push pop shll pop in ljmp cmpsb cmp fdivrs notb (bad) scas mov sub pusha fsts cmc dec xor push sbb add cmp negl jecxz mov dec or push test push arpl jmp cmp mov iret xchg cmpsl inc (bad) push fldl ss sarl lret cmp out add leave inc fsin inc outsl sbb (bad) into xor push mov push das jecxz in fsubrs fwait mov rol test push cmp ret mov mov cmp iret aas popa xchg dec ss cli push jno cmpl fcoms push mov sub dec (bad) sub cli sbb add pop lds in aad sbb jg outsl fwait mov adc mov jge xchg xor ja add mov pop mov sub out leave mov mov push adc (bad) fldcw pop jb mov or fdivr add mov popf inc out outsb arpl lock jns mov cmp add cmp mov mov push lahf call sbb fdiv std jmp cld fidivr or cmp leave (bad) (bad) lret subl nop ret inc (bad) push les lret add dec xor out aad pop (bad) (bad) nop sub outsb dec jno xlat mov ljmp ret stos hlt pop fmull stos (bad) sbb add adc mov dec dec mov xlat dec pop or lds adc outsb std arpl repnz xchg leave mov push or sbb aad inc imull sbb and sub lods mov cltd sub push sbb imul inc (bad) (bad) aad mov mov sbb insl jp jle dec mov movsl adc sub pop mov test out pop sbb mov stc lret sbb adc rclb cmp hlt sti mov xchg test clc fstpl dec fdivrp add std xchg mov shll mov mov out mov xor in cmc mov mov sti arpl aas out xor fsubrs sbb inc jmp sub outsb rorb fimul jmp mov in out inc dec sbb sbb ret cld dec out sbb xchg popf lds jmp cmpl mov and lods xor (bad) repnz sbb jb imull push sub pop xor sbbl out (bad) sti mov xor test lret jge dec shrb pop or dec imul in sbb xchg ret cmpsb dec notl sbb xchg jno mov cmpsl popf leave fs arpl cmp sbb addr16 xchg popf test addr16 inc xchg dec cmpl (bad) fistpll pop fsubrl in in (bad) adc sti xorb push stos daa mov sbb xor divl jecxz or (bad) fbld add push in int shrb pop inc data16 es xor je aas cmp (bad) mov xor sbb sbb stos inc mov xor int mov push xchg jo xor mov sbb daa mov xor adc (bad) xor ss xchg jbe jecxz inc fbld inc daa mov insl mov xlat mov mov inc cmp hlt std repnz mov addb xor dec inc fs push movsl mov insb mov sub lahf jl mov jg in adc shll (bad) (bad) xor mov daa (bad) lock jno jns fwait into jno adc xchg mov jns sub insb jno push jnp inc test inc xor stc cltd or or jmp push and xor dec inc pop push enter mov jp icebp and xchg fistl jecxz out fistpl pop pop lahf jg xor cmp jle or add fisub (bad) hlt icebp mov in mov push cmpsb popf sub cmp jecxz clc loope dec test mov or call scas dec sbb nopl mov into adc pop call inc mov xchg (bad) out pushl sub je repnz push sbb (bad) outsb inc out dec in mov jnp fwait outsl fwait rolb lret mov es leave and pop mov cmpsl out daa addr16 mov xchg test cmp (bad) insb push movsb popf mov (bad) out ds xchg (bad) lret cltd push xlat mov inc je aaa dec mov into pop outsl and aad sub lds mov jne in fistpll mov imul xchg dec pop adcl shrb fbstp loopne mov bound jecxz enter or fnop add test pop mov pop (bad) fxch jp add stos outsb iret aas aas sub sub shl jmp xor movsb pushl aas lret (bad) cmp ficompl adc out add xchg fstpt dec pop loopne shl or int3 loopne aam sub mov inc cwtl dec cmp popf stos aam jnp add jg scas push stos dec push test xor inc pop jg rcr lods jb enter ret (bad) push mov mov daa ds fstpl push push popf fcoml outsl fdivrl mov and dec inc inc pop iret adc fidivrl dec cmp aad (bad) test inc and in dec add sbb cltd std les adc std xor push (bad) jp pop jge fnstsw adc or dec xlat jnp pop cs jns cld xchg dec inc push in mov bound in cmp int ret ss push repz cmp sbb and jge iret das enter mov pop lret mov sub or movq cmpsl iret js cmc xor icebp (bad) sti jmp pop lds scas popa stc sbb xchg ret fwait sahf xchg imul sbb cld mov ljmp xchg lcall push adc mov fmull andl mov shl mov pop dec mov xchg stc mov cwtl bound cwtl xor xor lds data16 cwtl repz push inc pmuludq and (bad) jbe cmp mov sbb mov mov mov and push repnz (bad) or mov sbb inc int3 adc aad pop mov sbb xchg fwait out push and jo lret inc (bad) push or mov leave leave enter cli movsl add lret test mov dec sub lds arpl sbb dec dec adc push arpl mov cld rcll sub stc iret xchg inc loopne inc cmp xchg rcl add push mov imul aaa or scas mov (bad) lret out scas mov xlat movaps sti mov dec or lahf pop loope ret dec scas inc (bad) sahf inc xchg pop mov (bad) aas test sub push xchg sub in mov call mov dec cmpsb cld lods cmp cmp xchg lcall (bad) loope cmp xchg adc nop les cmpsb stos mov les in adc (bad) int cwtl and push mov mov and mov lock and mov xchg (bad) sahf je rol or inc incb push cmpsb mov push (bad) es xor into dec outsb sbb lret (bad) jmp fsubrs sub mov imul push and scas dec pop mov rorb or mov sbb or mov out test add mov push cltd out mov vmaxpd dec pop mov je xchg pop test add hlt arpl test aas shrb inc mov into jecxz inc or mov cmpsl mov inc cmp push out scas in push pop cmc int stos outsb add pop mov mov mov jbe and in sub xchg jecxz push inc sti xchg jne jle pop cld sarb push and jne enter cmp das int adc test jb xchg rorl (bad) pop cs out mov fidivr sub mov xor lock roll inc cmp leave push decl lds mov and notl pushf outsb icebp das aam scas (bad) mov xchg movb add popl pop leave in xor aam mov imul sub jecxz mov jmp and adc mov push mov or gs pop pop push bound in int imul aad pusha ficom pop lret push mull adc loopne inc scas fdivrs test lods adc jno mov and mov pop cmp mov imul repz jb pop xor iret sub iret mov xchg fildll loop mov out xor ficompl sbb addl dec inc loope mov aas nop es in jge aas cwtl inc inc jle jae dec out push (bad) dec fisubrl pop dec sub jmp xlat iret xchg cs mov mov fstpl and xor repnz mov pop jg push lahf inc jmp iret rcrb (bad) test lret xor lret jae and push xchg cmpsl adc pushf mov jp jg xchg repz (bad) aas lret cmc or xchg xchg and fildl stos data16 call mov jo mov leave jno fcmovb jnp in shr add mov cld daa ffree (bad) aad fsubrl iret jb inc add xchg mov jnp ret (bad) xlat popf mov outsb inc lds sarl stos call imul outsb movsb and mov test dec cld (bad) fmuls popa popa mov xchg test pop aas std popa mov cmp dec sub inc leave and push es clc js in add mov (bad) lret lret fs (bad) adc xchg inc or or or bound repz jbe push mov mov (bad) arpl inc (bad) jne (bad) imul push and sbb int ss mov scas push arpl add and aaa (bad) mov push mov dec loope mov mov fst mov or inc mov insl sub push sti mov dec cmp (bad) xor pop mov iret jne loopne stc inc (bad) dec add in mov out pop sub fadd (bad) dec sti xor (bad) xor rorb in es into out lcall add pop mov add insl sub inc sti ret xchg fadds rolb ja add inc mov dec xchg fcoms or sarb or out sub xor mov into cmpsl fsubs pop lret out imul push sti cmc or xor mov push (bad) dec in jmp stc repz inc xchg call mov inc in sub adc pop (bad) ljmp jmp outsl push rorl lds les mov (bad) mov (bad) lea (bad) jo shl inc rcrl push outsb int out jmp mov imul mov fsubs adc dec fucom mov adc add mov out std mov sti repz mov sub xlat dec js add icebp stos inc (bad) mov insb mov cmc outsl mov sahf mov les dec pop pop dec inc shrb mov push arpl adc repz xchg jae aam dec jle cmp rorl dec addl imul lock test fstps int3 in jmp in mov mov (bad) push icebp mov sub dec (bad) out aad pop cmp jp pop ret (bad) sbb mov mov fs imul push fcompl push mov sti cmc cld dec add sub lods xor ret jg insb mov cmp rcll lods test adc es pop arpl lea jbe repz adc or push movb mov jle out ret test fidivrl cmpl push mov add push adc jge dec sub fstps sbb (bad) jb js mov fwait lahf mov xchg out and push pop jl addr16 (bad) sub hlt mov or fs fcmovu mov adc outsl cmp or inc pop rcrb int3 sbb repz push add inc imulb xchg outsl (bad) sarb adc inc cs push sub test (bad) or lds leave pop (bad) mov mov into inc mov cmp push je and cmp sub cmp push les cmp les outsb pop ret out adc fcom cmp mov shll or shrb and mov and add ss mov xchg bound fisub shll movsb cmp jle iret pop clc pop inc lock pop xchg pop jle in (bad) pop jecxz or add stc dec sbb fsubrs repz aas dec dec sbb mov outsb push cmp cmpsl loope jbe lcall xlat xchg insb notb push and lahf iret pop into enter xchg xchg xchg fisttpll mov adc sbb dec cltd and cld adc mov mov jnp outsb pop inc rorb or loop loope pop out mov pop ja push inc xor push adc mov mov push out lods xchg xchg add adc push les lcall lea (bad) sbb jl adc push add andl adc xchg movsb cltd popf sub dec push cmp insb push sub aad cmp in out cmpsl jns aaa shlb mov dec cmp aam dec iret pop cmp push push int xchg ret sbb pop repz mov lcall lea cli inc movsl jp xor jo ljmp push cmp add bound xor and flds fldt xchg lods es cmpl (bad) sbb mov adc push add mov jo dec icebp add mov aam push sbbl daa dec ret sbb jle cltd dec jae sub jne push push fabs jmp test out sbb inc mov or and jb jecxz std mov sub out rclb jecxz fldenv leave aad and out (bad) ljmp push cld dec and adc shlb jp jmp stos xor mov push int3 mov (bad) push mov scas sbb fnstenv lds cmp add pusha mov or lock dec xchg fsts or insb sub fwait dec stc or stc (bad) leave mov icebp or insl sub sbb pop cli sbb rcrl mov int cli stc test shr ret pusha mov (bad) int mov or (bad) cmp in les loope mov rclb insb or xchg popf int test dec andl push sbb push or dec ljmp pop repz mov enter test leave loopne jmp adc sub ftst lahf shll sti pop dec sub xchg jle mov pop pop dec jp rcrb add ret ficomp xor (bad) xor test sub inc sbb sahf test mov imul sbb xor xlat insl int3 icebp push adc (bad) or hlt lcall cmp nop lea ret mov adc subl scas sub aad stc push std push call cmc push idiv std arpl mov sbb adc adc in iret pop sub inc sub xchg ljmp xor adc ja clc mov mov cli or push cltd mov mov push aad xchg cmp mov in and xchg cs icebp mov mov xor adc or lods mov push mov in pop jp outsl mov arpl shll cltd enter mov lret hlt shll sub aas ret js (bad) dec add inc (bad) cmp xchg mov mov jl outsb mov or or daa ljmp rcrl in cmp adc xchg daa xor xchg xchg mov sarb add in inc or jg jg fdivrl sub imul mov fcompl jns movsl push push enter iret mov test push xor movsl inc jmp lahf add add add and mov (bad) lcall cmp clc dec loope dec mov sub pop inc adc imul ret cmp mov ret cmp test mov lret je push cltd adc jecxz outsl out xchg dec dec ret shl mov xchg mov jae cld arpl int3 aad pop or popf sub sbb icebp cwtl inc ret test (bad) shrl (bad) leave cltd (bad) lret fnop test (bad) fnstsw (bad) int imul lods orb in fsts mov add (bad) orb mov in or int js dec fcompp sub (bad) fnstcw sub inc shll sbb lret (bad) fstps test in inc lret cmp out or jno loope lock sbb and jp and cmc pop lcall lcall dec int push jmp test fldl dec jo in test sbbl imul repz (bad) icebp mov cmc ror shrl subb lds int3 rorl cmp rcrl jecxz leave fcomps leave or inc fcomi stos sbbb pop test mov fisubl leave test (bad) leave dec ror shll and fucom rorl and mov mov push out sarl and dec or lock cwtl push cwtl xchg xor arpl mov or pop push jecxz out mov jecxz jnp into mov pushf nop cmp push push popf int sti int xchg mov loopne clc jae inc test xchg loopne inc sub aad int fnstenv lods xor jbe inc push pop jo pop xchg sbb mov pop mov push push stc popf xor mov dec push dec jb mov adc cmp je lea mov adc test lock mov xchg dec and cmp rclb dec and shl aad (bad) mov dec clc movsl pop push cmpb inc sbb add inc or adc mov or cltd in lret mov dec sub movb int lret or or mov adc outsl jb (bad) inc cmpsl shrb ret cmp adc push mov roll aad xor mov pop or jb loopne cmp and push repnz (bad) cmp inc into out push mov stc or ficoml adc pop xor rclb stos not sbb inc sub push push cmp lock testb pushf push test cmpsl pop mov jecxz and sub mov dec inc fs fmulp cmp adc mov cmpsl mov sub inc dec xor mov and sti mov hlt inc xchg cwtl jne cmp xchg fdivrs mov dec loope sbb push dec pop shrb add mov sbb add mov add pushf hlt add sti mov inc idivb push idivb js movsb or hlt stos push aam jbe outsb and fistp jae cmpsl xchg xchg add hlt jle out adc (bad) cmp push mov nop mov icebp xor mov mov mov xchg pop xor loopne fcompl jp scas mov out cmpsl cmp je ret jp (bad) xchg cmc dec adc jecxz cwtl xor push fnstcw jecxz call push cmp cmpsl loop xchg pop xchg fsubrp sub inc cmp sbb test mov add lahf cltd movsl (bad) dec dec movsl loope lahf sub pop mov inc in lahf and out sub icebp scas cmp inc mov jecxz outsl jnp adc leave flds rol and out dec add xchg lahf test mov cmp mov push aad addr16 xchg mov mov xchg or xchg cmp push flds ss sub leave mov lds add (bad) fwait inc jne test in cmp pop xor mov sub xor jne popf shll pop lea sti mov sbb sar jnp mov mov jne lods and aaa mov pop inc add pop ret cmp enter fwait lods lds int3 insl hlt sub dec jg ret iret lret fcmovnb and scas (bad) bound or mov inc ret lea push bound ret adc jp mov dec jmp pop repz pop push rcrb inc and xor dec (bad) push xor push fdivrs ss test cmpb pop mov es mov xlat adcb xorl cld cmp lahf sub dec sbb mov jns or fadds (bad) icebp das lods push lret lret or test pop (bad) fdivrs dec add ret cli out lcall cmp xor dec std mov scas sbb jb dec xor xor jnp sub add lds in fisubl or jb stos push or idivb lock in or lret xor cmp pop xor cltd jo dec push pop and mov mov xchg cmp pop push in push ss pop add xlat ret cmpsw test sbb lcall xchg dec jmp jp add inc iret adc sub xor stc pop mov or test sbb ret pop incl icebp add pop daa ds jb jae cmp ret sbb loopne mov dec sub mov ss lret loop mov cmpsb aas (bad) mov xchg add xor jle les in pop mov mov fsubs mov mov loopne jg loope cmc jp fcmovne cmp icebp pop adc mov mov aam push mov lcall mov add inc sub xchg inc push xchg popa and dec xlat dec xor or inc or ret fidivr and pop jecxz imul lds ljmp and fdecstp jo push jl mov xchg and out aas iret leave jecxz stos sti leave jecxz stos sti leave mov pop shll js adc lods mov (bad) xchg insl cmp pop shll inc hlt add lret lea test xor std lea aam jns mov adc pop mov cli loopne pop sbb imul ror dec jge divl xor aam shlb stos sti sbb push iret inc nop cmc mov inc dec xchg or ror dec pop sbb fdiv or mov jbe (bad) cmpsb icebp insb push cmp mov dec jge orl inc rcr insl sar add ret out and cmpsl dec mov and fadds cld repz lahf lea or into outsb outsl sub (bad) mov repz jno sub fstpl pusha adc js cmp stc out ret outsl lret inc outsl fisttpl xchg and jl mov cld jg mov add rorl aaa cli out subl into and scas dec mov jg (bad) and inc mov test in xchg or xchg pop es insb lock pop add xlat jne test sahf inc mov pop sub ficompl xchg mov aaa xchg mov repz test fwait inc mov or push shrb sbbb dec inc jg jg lcall push and mov mov bound hlt les mov pop or adc mov sarb xor pop std adc jne out bound adc in add (bad) cld push adc cmp outsl arpl sub arpl pop sbb and repz aad pop (bad) dec or sub js test sbb xchg mov jmp xor fucom (bad) test xchg shrl xor dec loop xor fsts test mov pop inc adc mov jno into mov push ja pop jg jae aad jg mov push sub xchg and xor xor lret lea or or xchg cs adc fmuls pop fldenv add add or icebp add loopne,pt mov imul push or aaa sbb ret int3 jp repz insl int3 in add dec outsl and inc xchg sub mov mov pushf pushf adc dec hlt dec adc lock icebp es mov adc cwtl xchg ja sahf push pusha cmp xchg inc xor adc add cmp mov sub push addr16 mov cs movsb idivb call pusha push xchg fmuls (bad) mov dec xchg mov mov xor outsb pop jle push outsb mov shll push hlt dec hlt or xchg les repz rcr cmp lahf es test mov inc daa or pop xor dec mov mov repz mov inc push leave scas repnz cmp lods test mov and into (bad) sbb push in fcoms cmp int cmpsb aas (bad) dec leave sub (bad) jle or lock add and les inc cmp mov into movsb jmp jle pop lods jnp arpl pop push out pop (bad) mov in out dec fld addr16 or xchg enter (bad) movsb aam mov sbbl arpl cli (bad) mov and push imul enter pop sar loope (bad) neg ret hlt inc push mov adc cmp or inc mov cmp lock cwtl push stc or std ja xchg sbb jne or or jmp or jle inc mov repz loopne jb cli mov or mov cmp inc mull jne jae xchg outsl push (bad) test mov in push dec orb bswap mov cmp mov cltd inc push jo mov mov pop jg test enter bound fnstsw rclb mov repnz into imul mov xor popa jp scas cmp sar cmp stos pmulhw (bad) fmull xor mov shll cmp cmp push add and inc ja mov cmp adc mov adc (bad) or or cmpl mov movsb dec fadd or push sub pop movsl jae mov pushf xlat push ljmp jge jns test sbb icebp adc xchg (bad) int popa pop jmp push out sub mov inc iret jge and and mov dec mov (bad) jl sbb sub lods pusha mov (bad) sub xchg sub push leave into or or pop movsb push xchg and ficomp loop sbb add inc aad sub or addr16 inc xor add call mov sub les xor lea fstl xorl aas int3 (bad) mov jne jno add push in fcom jle mov stos and rcrl cmp subl mov mov pop movsb test and imul fiaddl lods sbb stos (bad) or mov xchg test into mov adc dec in pop or imul test jg lods cmpsl stc rclb inc mov cmovs dec in fucom roll mov lahf fwait (bad) sub lahf sahf cmpsl xchg dec or push adc fmulp data16 jl adc ljmp imul mov add movsb stc mov jl mov mov scas dec sti xchg jnp dec mov enter cld orl jle xchg lret rolb shl movsb inc jle (bad) in fistpl fwait xchg iret test loop syscall xorl popa inc dec sbb in aas fwait jp movsl add das leave xchg popf jns dec lahf jmp jnp popf fadd and lea add jns rorl inc mov and sbb int3 into fldt mov out shrl jp fidivl ret or ja loop jmp mov (bad) pushl dec jbe dec mov cli push jmp add mov imul jb test jg mov jmp fdivs in test rep outsb lods mov mov push xchg sbb (bad) or pop aam test cmp addr16 pushf stc push cltd ja sub cmpl xchg lcall dec leave repnz jnp leave not cmp pop lds negl push inc jle push das lea repz xor sub aaa lds and ss imul (bad) inc pusha std or enterw lds pop imul cmpsl stc pop xchg stc adcl div bound (bad) dec xor sarl cmp in mov rcrb sub xchg stos mov insl mov lds sub inc inc lret pop lock mov xchg or movsb mov out ffreep inc sbb sub cli lock clc je (bad) jbe lahf pop ret out das aad rorb cmpsb adc sbb push nop rcrb jge stos (bad) shrl outsb ljmp lahf pmaddwd pop mov cmpsb xchg ret sub sti cs ljmpw ljmp inc mov arpl scas out in nop rcrb test pop add mov je,pn (bad) ljmp adc data16 push stos mov add sub iret sbb enter ret inc insb pop scas lcall addr16 movq jns in dec cmp cwtl in cmp mov ss aad xchg test (bad) jg into inc cmp xor enter fidiv fistpll lahf cmpsl jae (bad) jnp popa add mov and insb dec sub mov push stos jae mov pop pushf clc cmp out test pop inc or mov roll pusha outsl xlat add aas aaa cmp data16 sub ja cmpsb pop push push jb dec jl dec in pop hlt push aam std repnz adc aaa pop ljmp shrl mov pop xor repnz out sbb and pusha adc mov sub stos sub xlat push or mov imull mov jmp cmpsb jg push sub adc fsub pop add push (bad) fwait cs imul jmp popa cld and mov xor jmp jno lds cmp cwtl pop sbb cltd jecxz stos mov lds (bad) les add jle faddl adc aas imul cmp jbe cmp daa dec jp lock insl mov push and adc lcall flds iret arpl fdivrs inc in int3 cltd jmp inc loope adc and sub and sub arpl and daa adc in inc mov fcomip daa call mov ret adc sub sbb out stos arpl roll mov sbb jmp imul pop xor fdivp and aaa jnp jecxz mov xor sbb and rorb add xor xchg iret inc adc repnz pushf and mov sub pop repz call icebp inc test and or adc and mov mov out jne sti mov call inc sub fwait cmpsl mov mov xor cmc push in out inc pop aad pop loope (bad) xchg rcl xor add add mov xchg xchg test out cmp jns pop andl mov inc fnstcw mov mov (bad) jne sub mov (bad) jp cmp pop sbb rcll mov (bad) mov inc fadds addr16 mov lcall std dec jne,pn (bad) jae call fs mov test pop imul mov xor insl or cmp ljmp (bad) cmp add rorb add adc jp or mov leave add and es call xchg pop lret mov or sahf scas popa cmp shrb or dec dec out jl (bad) mov adc mov aam and lret mov (bad) stos or clc lea mov loop aam rcll call jle mov add movsb cmp mov pushf outsl clc or fs cmp je loopne gs cmp (bad) fstpl push rolb adc rcrb icebp add iret sahf out inc cs sti dec mov push in lahf xor push rcll jae jne les sti inc mov push std add and xlat into sarl inc inc adc je xchg idivl outsb jbe test pop rclb xlat repz sar lea adc fidivr loop insb inc inc ret sub int in cmp pop pop mov sahf (bad) dec push or cmc std jae dec xor jbe (bad) mov jo xchg pop rcll cli pop mov test jle mov xchg cmp xchg cmp in cmp or inc ljmp inc stos je add inc mov dec dec cmp xchg xor dec push imul rcll push mov xor mov ja jge pushl (bad) scas xchg mov mov add (bad) mov xor das stos adc sub enter cmp cmp pop adc push repnz mov gs insl adc dec lock insl mov loop inc mov lahf adc outsl adc jl incb mov mov std scas mov fwait jae in cmpsb mov ss jg imul (bad) xchg insl movsl dec jb inc dec push add pop fs dec push dec data16 sbb aaa push mov sbb es dec dec imul mov movsl (bad) xor cmp into ja pop cld and (bad) or pop es or push adc lret mov (bad) mov mov sbbl dec mov jne and lods pop mov push mov call lock add test inc or imul and mov insb sbb repnz cli or push aaa push inc jo fwait pop sbb ja loop aas adc adc pinsrw fiadd insb dec lret cltd push jo cmc sahf and (bad) inc addb and cmpsl cli jle pop rol mov inc mov xchg aaa outsb loopne scas mov and cmp dec jl ficompl push iret mov int mov (bad) sub sti jl lock lock jge cmpsb popf jge cmc sarl cmc push pop push and imul inc and das push jmp clc jb lods jecxz (bad) fild test jb aaa pop dec ficompl out mov movsl mov hlt std ret lds add xlat sbb sub push ljmp push xchg sub fwait xor imul (bad) fnstsw arpl and jmp stc jecxz icebp sbbb sbb mov orl pop and adc (bad) lcall dec icebp cmp sbb lods popf cli dec sahf ljmp jb addb cli ja cld jp scas mov mov sub daa daa inc adcb xchg scas inc decb pop stos dec je pop (bad) mov paddb cmp inc stos sbb mov shll jmp cmp out sub dec add orl push and imul insl mov cltd lret mov xlat xchg fwait test cmp out or daa jne jae cs rol push insb dec daa jp rcrb fs dec mov inc push (bad) je test mov mov les mov std lods xchg push add into or mov inc add lods ds into add pop test xchg inc add sbb cmp jmp inc cmp push cmpsb fwait push pop sbb in add push fwait aaa jno sbb pop xchg cld sub negb xchg rorl lret add popf incl cmpsb and loope sbb add gs (bad) inc test mov xor jns or aad mov (bad) (bad) out xor lret dec loopne or mov mov jge push mov lret dec and xchg or push jge xchg rclb mov fildl mov repnz xor mov push mov sti lahf popf push dec mov jecxz lods dec addb cld cmp add ror dec push lahf lea lods jle aad and adc imul add pop int data16 outsb icebp push sbb daa mov jl iret mov jne sahf jmp std dec ror pop xor push adc jnp sbb and cmp jnp arpl adc outsl xchg mov xchg mov imul insb scas int3 mov jnp scas mov sub rcl in push jns lret push cmp es adc pop cmp sbb push es fbstp shufps xor and lahf rcl adc lds notb inc sbb jl sbb dec xchg leave ljmp dec nop pop push (bad) fwait repz xchg popf stos mov sub adc add pop xchg pop cmp sub jmp mov (bad) dec add mov lods xor fdivrs adc (bad) pop jp rorl pusha loopne or negb repnz cmp lock push int and call push lods xchg xor jns sbb push pavgb jb test pop add cld sarb ljmp cwtl fsubr mov sbb arpl xor push pushf sbb outsl inc sub arpl dec xor push (bad) int3 mull sbb mov mov jg decl scas stc sbb jmp mov push adc xor outsl pop and mov js test inc or mov dec mov jmp insl xchg pop pop mov repz cmpsb in or xchg pop pop fs sarb in mov mov inc jnp cmp jle cmp pop (bad) lret in inc lods jg push push xchg les ss icebp sarb xchg lods ljmp subl fiaddl in pop fiaddl pop and mov pop (bad) out sbb pop jecxz,pt sbb roll enter mov pop fisttp das (bad) lea jecxz or cmp and mov lcall cli add dec pop mov adc stos inc adc or xor adc icebp add jge mov jle mov out rcrb addps dec jle enter test mov add aam sub es dec test fwait out or mov dec add adc push or dec icebp hlt pushf push and ds cmpsb dec add pushf lds xchg jbe or frstor ds inc mov aam mov or push sahf outsl jmp mov psllw enter pop mov bound rclb mov jo jmp scas jns mov add jle pushf cmpsb ljmp add jae push pop cmp lret sub mov sbb adc jne aam ss mov xor lods pop mov in xchg mov lea push cmp outsb outsb xchg xchg push push cmp ss aam push ljmp xchg call or stc adc cmc xchg adc inc pop ror sub dec push jbe int3 push (bad) jns loope mov mov xchg shrb mov iret pushf sub (bad) sbb outsb jns in inc sub leave inc pop mov lods sbb jnp call stos inc sbb inc xchg stos pop dec pop xor (bad) fmuls jae lret xchg or push stc insl and dec and cmp andb pop dec xchg (bad) mov mov push (bad) lock cmp jne xor ss jmp mov add push sahf ss clc sub stos subb mov (bad) jns shrb jne imul pop ljmp inc jmp aas stc (bad) insb mov push jne les lret mov lods pop cmc mov pushf xchg push je loop fsubs push bound les jmp pop fild pop jl in mov aaa push inc mov or mov mov sbb lods shlb orl jmp shl adc sbb adc mov sbb jmp sar stos test pop xchg insb popf test inc pushf les sub stos subb jne ja mov mov xor mov call sub sbb and loop pusha (bad) movsl or mov loopne inc push (bad) frstor fs sbb jne cmpsb sub cmp push xor push cmp and scas call ss mov xchg stos xor int xchg (bad) cmp cltd adc adc data16 jl pop fild push or sbb js lret xor or and sub out push push mov pop ret adc fcmovu inc repz inc dec or test aaa (bad) hlt jns out inc jg js add test or pop popf call addr16 add arpl jge push outsl arpl idiv add mov insl repz and mov movsl andb sahf add imul ret sbb push and pop imull imul xchg push stos sub or test jno daa test mov add fwait and sbb into sub in ljmp test mov mov (bad) (bad) mov stos jae divb std fistl ds addl mov dec dec pop cmp mov lret mov fiaddl cmp loopne sbb push cli pop lock fnstcw les int3 ds es fcomi dec xor adc sbb sbb idivl mov test paddw jne nop aaa push or dec lcall or loop inc in or adc lds and xchg push jle inc pop sbb sub repnz scas and add jo sub dec lahf leave xchg leave ljmp xor imul test lcall mov fcoms rorl inc stos lahf mov lret sub push dec aaa mov addr16 pop add fs jecxz jns mov pop aaa in adc push xor jmp loope mov pop jb mov cmp inc or adc mov xchg ret mov je leave mov mov das jnp out dec pop cmp jno inc out aaa xor push xor shll sbbl addr16 daa cmp mov into aam cwtl popa ljmp jmp dec addl xchg rcll jae xor ds or mov test loop repz mov fcmove js sbb ds sub insb bound dec mov mov and ds xor mov ret das dec add xchg mov stos int fstpl out jp jnp stos lock ret push add sub dec bound pop (bad) lods out dec (bad) mov mov repz sub push inc (bad) jae mov inc rsqrtps test std (bad) stos jle push dec fs pop push push lods add pop out movsb sbb cmp rcll fwait hlt and addl loop lods push sbb push pop in add insl dec mov xchg pop and cmp (bad) mov shl mov les jge movsb push inc (bad) jb lods mov rol arpl xchg lahf adc xchg js dec jo jo or movsb mov mov sub daa test int3 jle shrl and push call in pop (bad) adc rcr cs jne mov mov xchg inc cmp xchg nop add adc mov test push pop test iret sbb mov inc (bad) mov stos cmp and jo fcomip fistl loop push mov mov cs out cmp xchg or js frstor and (bad) clc add cld inc xor cmp jns flds ljmp cmp data16 cmc xor fmull cltd push inc add push cmpsl cmp outsb xchg arpl mov cs cwtl jnp jne push out outsb insl dec out sub outsl mov xor ds or stos sbb mov pop and scas push push rcrb mov jbe adc into pop fsts ss jns sub sti js lret js pop nop nop imul loop inc sti stc iret mov imul cmp ss xchg cmpsb pop imul ret out mov cmp pusha jae es aas das push mov aad pop pop jbe int3 jge in aam adc xor lods loop xchg xchg jg nop inc xchg mov inc lods and (bad) xlat mov xor int add ljmp ds add mov mov jnp in inc or sub aad pushf and mov aas and in outsb jg sub adc push cmp fwait push xchg adc sbb popa mov mov or rcll push stos clc fldcw adc adc cmp cmp or mov jecxz ljmp adc xchg inc xchg mov inc xor in (bad) dec mov xlat mov mov imul push xor or enter sarl shrl cltd push sbb jle mov mov mov pop mov fsubs add cwtl dec daa inc (bad) jno scas sbb daa push mov xchg idivb push out (bad) cli shlb xlat cmp xchg and lahf mov ret adc and scas dec adc js cli es int3 sub fild xchg call stos inc push out fidivr dec push inc stos int3 iret ljmp into xchg repz sar (bad) dec movb sbb xchg out aam movsl cld jbe dec pop popa dec dec sbb xchg rsm sbb (bad) push sub lods pop mov imul inc andps xchg into push sbb mov push ss inc pop aam jbe xor cmp lods sbb (bad) lret dec xchg lcall push out fistp fbstp xor push mov jae inc shrl inc or pop sbb jmp loop xchg insb enter cmp ja aam add fisubr pop or sub jns loop ds push (bad) lock sub adc inc psubw inc (bad) sbb mov inc inc sbb stos push test inc lret fstps lahf mov push sbb push inc jmp and mov inc (bad) jl dec mov leave out (bad) das int push mov addr16 data16 dec cmp pop inc inc sbb (bad) xor mov insb add (bad) inc or jecxz sahf xor sbb out xor inc or cmp adc flds ret xchg stos fcmovnbe cltd out push xchg sub rorb jns pop pop push xchg pushf pop mov scas lea test (bad) or lret adc mov (bad) hlt into inc mov hlt fsubrs (bad) cmp dec cmpsb stos sub mov (bad) push jl out and jmp xor push ret and (bad) mov fwait in xor jne leave ficoml xchg out sbb sub das inc mov mov aam aad (bad) and movsl popf stc cmpsl fwait call pop adc insl jno shrb in jne dec mov fldenv inc call jae aas mov push in jb lret pop mov sub jl xlat lret push (bad) (bad) std add jle aas enter sbb jecxz fidiv insl test popa daa mov gs mov xchg jne cmp add adc (bad) pop pop (bad) jb ljmp imul mov jo or arpl aaa (bad) dec outsb insl mov sub popf insl add into fs add sub or shll mov in xor sub scas jge or das xor jo mov inc mov pop jmp mov sub inc (bad) mov xchg mov push inc repnz mov cmp add lods push lahf add aas xchg pop and mov mov (bad) shl roll and out (bad) and and push push insb test inc psubusb fnstenv xlat cmp adc mov xchg fnstsw sbb daa jb pop cmc gs mov in mov xchg push mov xchg adc jbe mov fst aad wrmsr mov inc inc cmp and mov ficompl xchg ljmp mov mov xchg lock fiadd xchg sbb or inc mov test imul jmp mov add and cli les in fisub add je push or xor jmp mov out pop shufps jp inc imul stc add jb es push pop mov dec fs pop mov inc fnstenv scas push rcl pop lods sbb and inc cmp fsubrl pop shlb mov jnp sub jmp cmp (bad) ss sbb jmp movsl xor lds sub icebp jo dec xor fst push push mov dec ffree mov xchg pop shll aam jmp dec jle repnz lahf into and jecxz enter cmp stos cmp jp bnd lods mov fnstenv cmpb hlt xchg iret mov sub out bound icebp ret push mov call pusha out cmp mov dec xchg push sub fs and cmp push sbb ror test jg xchg loope cmp mov (bad) pop inc addr16 jg (bad) or clc ljmp xchg lea xchg mov sahf cmpsb inc subl mov fisub and inc loope inc dec aas add push jb xlat cmp and push arpl mov mov pop mov adc mov je or iret jns fsts add popa jle cwtl pop in or mov add mov xchg mov fldenv lods push xchg fsubl into xchg enter sub out nop mov sbb push cltd push sti sti cmpxchg dec mov push sub and inc xor insb mov sub adc lea add dec mov cli push out inc test push out test push adc mov cltd sub pushf mov aam cmp mov lcall test sahf repz cld loop popa mov mov insb (bad) lret scas xchg add add dec cmp and scas stc mov jae negl sub cmp jl lock lods and sub and push out pop lcall in xchg mov cmc sbb push xchg fwait cmpsb xchg mov cs (bad) xchg or and adc jecxz push clc mov imul xchg or add call sub stc push call push je out fstp push (bad) shlb cmp adc iret push mov jno adc xlat lock xor xor fistpl mov icebp jle jmp and std mov js jl in mov rcrl pusha sti popa adc mov sti mov repz or sti cwtl les fisubl das sti pop adc mov andb int3 push jno dec int3 daa push xor popf mov pop jns jno cmp fbstp or rcll fcmovbe fsubp pop mov pushf sub divl aas xor ret cwtl inc inc xchg cmp or pushf test jg aam jg sbb jecxz or js pop pop xchg jge mov push cmp aas (bad) push ljmp test shlb inc pop pop ret stos sbb adc fnstenv dec sbb jmp mov dec jecxz dec gs adc je sbb clc pslld shll lahf cmp sbb cld dec cltd (bad) repz or jmp je sub push repz jecxz inc fcmovu xor lret and dec adc mov jecxz adcl inc and xchg sub movsl mov fisttp sbb pop or mov iret cmpsb lock xchg call xchg test insb fwait push cmp dec jns mov shrb test or fucomp nop add cmp cmp mov jnp pop cmp ret nop cmp pop xor mov hlt push packuswb push sbb jg dec mov lcall out and out enter stc sarl mov push xor movsb sub sbb addr16 and cmpsl sbb sub mov pushf fsubs pop sub pop push mov sbb cwtl push jge sbb fcomps js aad fnstenv dec cwtl popf xor lcall xor pop jb push mov fucomp rolb pop sbb dec (bad) mov (bad) lods sbb and sub or mov push out insb mov xchg data16 loope loop mov stos mov mov andb js adcl lahf push jge xor pop daa imul scas mov lcall mov cltd push (bad) ret les jecxz mov movsb sbb jecxz mov fcompl int3 mov push popa (bad) xchg adc dec rcl mov push loop cmp repz xor dec or push (bad) xchg xchg jnp and fstl mov add sub addr16 fucomp pop lea or std frstor clc pop lods mov and fcompl push outsb jecxz push sub das insl jl (bad) repnz ja inc in lods jns jne xor es in sbb aam sub pop mulps sbb (bad) mov push dec push sub and pop aad fs sahf call in out pop lock sbb sub jnp test push stc adc int jge pop push and loope xorb data16 loope sbb ljmp dec jge mov pusha (bad) jae mov ss mov or imulb push cmp xor stos rol int fucomp in lock sub popf inc icebp add add lea cmpsl repz pop cli mov out gs lret lock js (bad) push sbb lret cmp jg mov cmc mov dec sub cltd cli pop iret fldcw xor cwtl popf xchg lret add repz jno mov sub jno add add mov adc (bad) pcmpeqw push mov loope push call xchg pop push aam dec repnz fstpl out dec sti inc insl push pop mov and ds dec jmp or push arpl orb es je push addl cmp inc lods sub xchg pop inc out jmp push inc (bad) mov test fstp stos fmul xchg pop mov mov add jge pop sub clc in cmp pop mov std sub sbb or out push jmp ffree cmp push rcrl cmp sbb sahf sahf adc pop fwait dec test xor xchg addr16 pop dec push adc jg adc cmp insl jecxz cmpl fisubr movsb dec dec addl js movsl in popw lret cs pop das mov mov fistl xor (bad) in or ret aad es in sub outsb fldt sbb and sub cmp je push ljmp gs jge add (bad) dec in cs sub mov xchg inc sub repnz test mov (bad) sar xchg cmp scas xor inc aad pusha loop test sbb in test repnz loopne in xor mov jno jnp adc push jbe cs inc mov mov and mov jbe mov or rolb ret pusha arpl cmpl call test imul outsl cwtl or test mov (bad) popa add cmc cmpsl add insb in notb or call nop fwait push jp (bad) or mov push sbb repz call (bad) fldenv cld cwtl cli hlt cmpsl jne sub jge mov in mov mov iret aaa fdivp jle lock ja mov pop enter xchg lea pop ret icebp jbe mov fnstenv pushl mov cmp mov sarb ficom mov les cltd aad ja es add xlat insb mov mov xchg and pop movsb sbb out dec xor xchg enter dec jo roll hlt or xlat mov push loop jne mov sbb adc mov xor (bad) adc adc cmp pop ss (bad) mov fisttpl aas call fiadd jno std xchg fist rorb push iret sbb scas gs pop sub mov lahf test inc test sub mov jnp lds and cmp cmp jno inc xor fiadd sub xor jge lret cmp pop ja popa sub jp adc xchg cmp sbb adc ds inc jmp scas mov pop cs or std mov pop push ds sub and xchg repz inc outsb call adc stos inc lret cmp push sbb jnp out sti pop cmp cmpsl rolb jmp ljmp push out sbb mul xor incb inc in mov jo mul aaa jb mov add ret mov pop rorb je or aam out mov xorl jae test insl xlat arpl mov (bad) pusha or repnz out lock sub std inc int3 or test xor sarb icebp sub pop sub and inc fwait bound add xor jno mul push or add lods lahf pop (bad) sbb je adc mov mov push insl and sub adc test jbe mov jne adc pop push (bad) je imul jmp pop push or add pop shll test call xor adc inc (bad) aas or imul enter enter add jmp insb insb or ret out and add popa inc loope xor sahf aad imul jbe mov (bad) ficompl push push fnsave test (bad) inc sti lods nop pop xor pop sbb mov xchg fwait out repz fildll xchg fcomp mov mov and mov jecxz add out outsl mov push and adc sbb or jecxz shlb lock inc (bad) push jne ret or lcall movb mov and pop or pop inc xchg in scas adc nop xor pop adc jge movsl leave xor int xchg sub shlb push xor add call pusha in mov ljmp pushf cli or cs or insl xor js jl cmp mov je or mull ret cmp mov in in outsl pop test jnp imulb scas inc out add stos data16 ficomp xchg movsl subl dec icebp jns sub (bad) jno daa xchg add hlt xchg mov movsl mov cld (bad) jmp fnstenv leave mov in cwtl rcl pop cld (bad) ljmp cmp push movsb adc insb jnp insl pop outsb sbb jb xlat xchg inc or fimul sub dec call xlat pop mov out test push mov in js repz fwait movl enter cmpsl sbb push sahf ss xacquire xchg xor xchg push or lea lret push je aam pop lret sub mov dec push mov mov out mov movsb adc jo cli ljmp add loop movsl rdtsc jg mov jo add lock out inc test adc lock popf movsb imul fistpl add movsb aas adc mov lcall je push inc and cmp or sbb das out jne test rcr mov sbb jb std test inc and in andl stos daa aaa jg mov inc dec pop xchg test aas outsl mov lea mov fadds push movsl stos test enter and in xor jb popf or dec sbbb mov lock cli fbstp and xchg push jno daa jge push movsb in inc mov mov jp mov into inc cld mov sub movsl pushf loopne lret in data16 push incb hlt and hlt outsl data16 pop lock out std in or cmp cs jae rcll out add (bad) xchg add fildl cmpsb sbb jne enter (bad) mov dec pop inc out enter std cmpsb or sub inc aas xchg (bad) aam add pop inc jmp sbb mov adcl movsl stos test add xor jns mov sub push push repz or xchg lahf pusha dec repz sub bsf mov xor xchg push ss or inc int mov inc mov xor add iret aas push push mov dec repz (bad) test mov cli lock jno das inc ljmp adc xor scas pusha inc (bad) ss jp ljmp insb (bad) (bad) (bad) je mov (bad) (bad) aaa lahf and clc pop dec pop gs in pop or pop (bad) mov out jno cmp xor sbb andl fstpt je scas bound out loop sbb in inc adc adc push push (bad) ficoml (bad) out dec inc xchg mulb lock cmpl xchg cs pop pop sbb xor cmp mov imul outsb movsl pop cli movsl sbb cmp lock pop leave xor cwtl pop push push add and lea pop or add ds stc sarb adc mov stc dec mov into mov pop push pop sahf cld jbe cmpsl cmc pop add icebp js je (bad) outsl mov sbb pop pop xchg enter lea fisubrl aam popl movsl mov lock and (bad) lods sbb inc movsl sbb xchg sarb fisub lds mov cltd dec sti mov pop and pop sbb sbb idivl jmp gs imul sti mov jne adc jb ljmp imul cmp ljmp xchg xor fs rcr cmp test sbb cmp lret sbb add mov mov jns inc jg mov fwait dec push xchg ds fwait movsb pop push cmp aam imul jb out inc push jmp dec (bad) repz dec (bad) call mov out (bad) jae jno gs or cld xchg bound sub push lock xor xchg and (bad) pushl sub jge push dec lock popf mov idivb mov paddd lods cmp pop ret les aad int xor inc (bad) add fldt or insb in dec adc adc mov jo pop aas mov ja mov lock mov mov jecxz mov push pop clc loope movsb dec jno pop xchg add stos adc fwait dec in adc in cmp sbb out pop test (bad) ficom mov mov fidivrl btcl lock mov mov je popf sahf repnz repz jb inc inc push out xor in repnz jl add xchg xchg aaa out xchg sbb out test repz mov test sbb and shl (bad) adc sbb fs mov cltd imul test call xchg (bad) pop xor in ja enter xchg cmpsb ds add mov inc je add lret fstpl sbb xor and pushf incb or ss je sub repz adc idivb scas mov push sti jmp mov pop and adc movsl xor stc jbe test and xchg ret loop jo xor xor outsl clc adc repz adc xor cmp add bound fildll addr16 and sub aas in dec movsl arpl push add repnz nop adc icebp push mov jmp out fmull push bound data16 rol aad sub ja into mov xchg cmovno inc sbb mov nop push jg cld pop xor imul fild xor mov daa mov push adc aas sub adc stos std mov sub dec inc dec mov insl pop test loop xchg inc ljmp adc inc mov xchg shlb std sub mov push pop xor add mov cmc ljmp stos push mov xlat sbb (bad) ds xor xor das adc out adc fmul adc (bad) jge add sub and dec sub aas jb (bad) cli lock std adc mov dec adc mov and jne add adc stos xor ljmp sbb jbe nop add sarb inc test cld enter xor jmp ss movsb sbb dec test mov jg mov mov cmp cs xor add movsl xchg mov stos ds jbe into add jge orb add or dec insl cltd loopne aas psubq xchg pop pop mov jo mov bound xlat popf dec xchg cmp (bad) lahf dec repz sub js mov dec mov in mov rorl jns dec or push adc fcmovb push cmpsl cmp outsb inc push faddl cmp fbstp dec push xorl adc sbb pop pusha mov repnz mov mov cmp pop dec pusha ja andl mov mov scas push repz sub sbb loop into dec xchg push fcmovnb cmp stos aam xor dec inc ffreep xchg aaa fbld jbe pop bound cld test iret mov daa and (bad) add or aam movsl cmp jne mov sbb ret push jae fwait adc mov nop push and loope outsb outsl and sub leave adc fcmovb jecxz mov xchg mov stos bound fwait shr cmpl cmpsl mov repnz xor pop clc test (bad) (bad) xor mov fnstcw stos frstor cmp js popf imul int into push insl pop cmpsl loopne nop cmp leave int3 ljmp pop and int3 sub pop jge movsl pop fist rcrb dec mov xor cmpl push mov int3 inc adc jmp lds add stc dec pop mov shr fstps pop inc int3 test ror fldenv jp ret ja adc cmp test stc mov pop pop push mov jo pop lds test push mov push mov jae rorb sub andl inc mov and jae lret jno nop clc in sbb sbb sti aas xor inc and push jne aas lea or (bad) pushf push sub fnstenv xorl pop xchg int pusha movsb sub add cs mov rorb add add dec test icebp pop jnp shl cmp sub pop inc or js daa js inc lods sub lea int3 (bad) arpl in mov jmp push ss xchg push dec push and dec out pop loope js or (bad) in imul jnp jns fld movsb mov xor push cmpsb popa insb mov cmp and push dec adc lahf add sbb or or outsb push jecxz rdmsr jge cmpsb (bad) aad or jbe std cmp pop mov rcr mov popf push movsl rcrb ljmp jecxz dec mov lcall push iret mov adc pop adc or arpl push sbb lret js pushf mov mov inc xor mov lds ss push cmpps and enter in add xchg adc add xchg cwtl insb and fldl arpl sbb mov or loopne outsl jle adc cmpsb fstl in push ljmp sub outsb adc inc test test sbb pop loopne mov aad sub dec rcr popf mov sub outsl mov loope dec insl stos arpl pop xchg lea sub jge xchg pop or cli mov fnstenv add sub rdmsr (bad) mov fnstenv fcompl dec and push add mov addr16 stos js adc mov jnp int3 cmpl pushf inc (bad) cmp mov jp lea inc jle imul cmpsb sub aad ja push (bad) (bad) mov push xor mov pusha dec jge aad xchg out fisubl movsl sub (bad) mov jbe out (bad) dec lock call mov je lret in xor or mov pop adc mov and sub mov frstor popa lcall jae sbb cmp inc lahf inc sbb and jecxz jae inc push sbb movsb clc xchg push pop pop or sbb arpl cwtl inc je sbb imul add mov call mov stc movsl pusha arpl xchg sti and sbb rcr pop stos negl aaa fldenv es add xor mov jecxz into fisttp or jae ljmp out ds repnz push jmp mov scas test jle cmp int3 inc push cmp leave push pusha inc xchg mov rcll and xor aam fimull stos (bad) sub popf sti insb xor pushf lods scas fnstenv pop scas test js pop lret icebp divl std (bad) test fldt repz mov mov fistpll inc (bad) femms rcrl test fild sub int3 mulb sub pop sub and push jnp aam and xchg ljmp sbb mov jmp sub push push in imul lcall enter fidivrl (bad) add jl push stc int3 sahf je stos inc cli mov pop sub (bad) enter lret insb sbb out mov (bad) je and sbb mov bound std out shr sub xchg aam mov cmp push xchg fiaddl mov jge scas mov mov fbld push pop aam jge in dec imul insb dec cwtl into stos outsb dec mov pcmpgtd hlt adc out ficomp cmpsb xlat dec dec popa ss ds xor ret repz insl or mov jl cmp or push mov out pop inc das add fincstp xor or inc sbb and or jae ret loop jecxz or icebp test or lods jne fcoml fsubp ficompl cmp and jp dec jns xchg mov jo inc jnp mov push fnsave rolb (bad) rolb mov or mov push mov negb sarb cmpsb int sub or inc dec jmp std stos sbb pop sbb ja in insb xchg popa imul or lods cmc sub xchg lcall jb and ja (bad) rcrb int3 fisubrl adc int3 in push mov push push es imul pop int leave popa jmp fmuls enter dec sti dec decl rcrb fisub pop fildll rol lock inc and shrl lcall pop push int or fcoms mov js add xchg xchg xchg aad rorl sub lea sbbl call mov data16 fistp sbb lret imul xchg cmp mov pop inc sbb sub scas pop push push dec inc dec loopne pop iret mov cld or pop add or and and xorl cmpsb rcr andb jns sysexit mov jge push gs ds scas dec repnz ret adc in call push ret sbb int3 in loope popf add or rorl mov arpl enter xchg ret dec adc mov sub lret xlat xchg negb repnz push popf jbe shl inc lods ja std dec sbb jp push scas inc scas mov and adc bnd push stos mov jp fildll ja int3 dec in lahf or cmp sub enter dec xlat xchg hlt inc into popf or cmp inc dec sub and lcall (bad) mov fcoml aaa inc pop lret in xor movsl jbe cmp jns aad sbb out sub in fdivr mov sbb jns pusha ffree out das mov inc xchg push adc adc into sbb std shrl jge lahf mov xchg mov jo xchg fildll repz test xor and stos push sub gs cmpsb sub jg icebp (bad) and dec push mull into cmp mov jno enter push dec fisubrl jg hlt or push fucomi fcoms mov cmp dec push xchg (bad) movsl jmp jns clc jb in push in mov lods adc mov xor dec lcall lret (bad) cmpsb imul mov inc int3 addr16 fsubl xor adc test sub loope fidivrl mov sub mov imul cmp lret push aam aam sbb dec or xlat loope xchg stos cmp and scas inc sub and cmp lock add add cltd jb xchg sub push push gs cmp jns lahf mov mov aad pushf sbb add mov js popa out pop xor cmpsl out pop aaa fbstp scas sub ss arpl jbe ja mov lds dec cmc fildll jp jbe sbb or mov pop ret push cmc repz imul in popf push (bad) dec mov test loopne push (bad) js testb outsb push (bad) ret ja mov cmp int add test adc push mov addr16 aam xor stos aas mov daa loope mov jp pusha sbb loop je sbb out mov loope xchg sbb inc jbe dec add pop cwtl mulb mov sub out pop mov and pop (bad) notb (bad) dec mov dec scas sarl push pushf ret repnz jae mov testl pushf (bad) loope push mov fdivp xor ret data16 and std dec push pop fidivl les cmp jmp loop stos insl nopl and add in sahf cmp adc cs repnz arpl mov sbb sub (bad) fiadd mov imul or sti pop or (bad) lahf test scas call xchg inc sub xchg ror mov sbb dec jmp mov (bad) push mov cmp mov xchg dec cmp rcrb stc jne jae jo mov sahf mov inc (bad) mov data16 std mov enter pop pop mov fs xchg or cmp sbb movsl lcall (bad) mov push inc jmp in sahf int3 inc jg xlat stos push mov cmp ja cmp pop xor push pop mov mov addr16 inc mov jecxz xor push or idivl jp adc pusha sub data16 mov daa pushf push iret push jne mov sub stc aam jbe pop inc mov adc mov fs jp lret icebp fildl or pop add rcl cmp shlb mov sub or jl pop ret mov and pop xchg fwait loope dec jnp jmp dec lcall lods pop cmpl fnstcw inc (bad) mov scas inc lea inc int mov int push leave mov jp gs into pushf insb scas int3 arpl mov sbb jnp (bad) enter jnp dec jmp movsb mov rorb stc sti sahf jns ret xlat in cltd or xor int3 cmp (bad) mov enter aam jp fldcw pop jecxz bnd xchg sbb mov jb jae xchg (bad) push outsl enter add inc aad ficom div pop outsb push pushf push pop (bad) jp ret or jo adc int hlt dec jnp xchg adc mov xchg aad pop cmc aad cli dec (bad) enter ret lods mov setg push repz call mov mov fldl aad pop ret mov push fmull loope mov lock sti in ret outsl add ss cmp repz jmp cld cwtl int cmp imul in iret mov lds orl jmp loop xor in insl sub push pop jb and std aad les aaa mov pop jl or lret stc dec insl and shrl push or adc xlat push dec mov push add lods adc dec pop xchg cs popa sbb mov daa scas cmpsb (bad) pop mov mov or pop add lret gs sub xchg inc sti xor jne push dec sahf mov mov jge xor push cmpsl (bad) (bad) repnz mov and daa popl add stc push in mov sub cltd movsl mov push mov push lock jbe xchg or and sbb sbb repz imul in (bad) jo (bad) stos mov clc sub jmp mov adc (bad) sub bound or (bad) movsl arpl outsl fbld pop fldl2t sarl or pusha int test pop pop sbb cwtl or lods lds dec ret enter popa push adc mov in in rcrl mov push fistpl mov movsl push and push mov sub ret enter push jnp call xchg or push dec cmp mov cli scas hlt ffreep xchg iret (bad) ds add mov div mov lcall (bad) jo push inc (bad) mov add inc sub daa inc sub add cmp test cmp fistl push arpl nop jae fldenv jno shr cmpsl pop frstor popf cmp les jmp je jle push xor push test adcl and mov dec cmpsb neg jae jge ret pop loop adc out cmc push addl mov push scas jp test mov movsb inc loope dec stc pop push pavgw outsl push sbb std aaa push or push inc mov mov add mov popa inc in sub fcmovnu mov mov or in stc xor inc movb mov sahf inc lea or lds adc mov jg dec inc rcrb insl mov xchg loope or test js push jmp add sahf enter js pop movsb xchg xchg shll scas and fidivrl mov mov outsl stos mov sub ds adc jno and jno fcomp mov (bad) dec jmp movsb xchg cwtl (bad) cmpsl mov mov shrl iret push push pushf ficom pushf xlat lds or cwtl call mov add sub shl and int3 xor xor aam fimull inc sub cwtl (bad) jmp jnp (bad) push repz inc loopne and cli in (bad) int3 das stos sbb in inc dec out push rorb cmp mov fsts ja bound inc lods hlt push mov pusha addr16 lahf mov dec les xor add mov (bad) cmpsb adc sbb (bad) (bad) lret (bad) pop pop fist push or pop or daa cli mov pop js cmp arpl mov xor adc or jecxz andl xchg sub dec mov stos add (bad) mov adc out adc cmpsl int3 push and push fadds add seto dec (bad) cmp jno ja pop xchg mov pushf mov ret test aad jmp cmp insl ja cli nop cmpsl or movsb and mov shlb loop loop ret lcall jmp dec ds test cltd inc inc in adc sub addb fsts cwtl fdivs arpl daa stos into sbb xchg xorb iret mov pop pop jne out sub lcall xchg loop gs fsub mov jl fnstcw sub xchg call jl pushf (bad) and enter jge sbb mov mov inc insb out js pusha call jb cmpsb mov aaa sbb or cmp and xchg std fisubr std mov dec (bad) out mov mov cltd pop mov or popa (bad) iret dec ret jmp xor dec lret mov inc orl int3 or ret cwtl push outsb mov fbstp jle orl mov dec push push cwtl mov aad sbb shl insb push imul dec data16 scas sbb cltd and pop push sub out and or cmp dec dec mov xchg cmpb je sbb sbb push push fmul nop xchg (bad) dec dec xchg push or cmp imul lds gs jbe mov dec test rcl or in adc je jmp popf xor call sbb sub mov int xchg and adc mov lock cmp cltd pop pop loope sub sub out arpl dec sbb gs divl (bad) hlt mov jne add xor movsl mov sub fisubrl and xlat sbb lock cli inc fstl xor out loop stos adc ds sub push add test sub loop (bad) stos xchg icebp inc daa push popf test mull movsb movsb sub mov or mov inc shl pop test rclb in adc and lea mov mov xchg in mov dec loop add (bad) sbb xor push test sbb in ror inc fiaddl mov xor sbb imul je mov mov arpl in push out jno sbb lahf dec xchg lret cld jb loop pop sbb push xchg stc and push lds sub (bad) lods movsl cltd jbe bound mov pop sub dec sub inc push mov arpl test dec inc sub mov test or mov test andl or mov sbbl jg sahf out cltd push sti fsubs imul push sbb aaa xchg xchg xlat outsl xorb movsb fbstp or subb arpl inc (bad) sbb xlat push cmp arpl test repz addr16 leave adc add xchg xchg cmp sub (bad) push xchg jg push fs stos xor icebp mov or outsl (bad) lahf pop movb sub lds fild or int leave mov mov jge sbb (bad) stos lods xchg lods and mov mov lret jnp add xor int3 (bad) mov xor inc add inc mov jg push fiaddl push icebp pop incl jmp add repz fmul add (bad) rsqrtps (bad) xor subb xor jp push fstl test movsb sbb push pop adc lds in jp xchg sarl xorl pop int3 das ja icebp push jb movsb and ret mov inc sbb outsb jb lds aaa movsb xchg (bad) scas inc stos xlat test dec push imul in cld ds sub in int mov and pop pop or mov adc push sub out arpl clc shl popa cmpsb dec push pushf xlat (bad) cltd or xchg aam icebp daa and sbb mov stc mov repnz bound test pop out int3 cs dec test dec cmc pop cmp pusha sbb in push xchg fldcw movsb movsb aam incb push imul dec fcmovne xor (bad) xor mov (bad) xor ljmp jmp in (bad) mov jmp je loop fwait mov lods xchg push loop stos adc cld sbb and fimul pusha dec xor cwtl sub lret sahf cmp mov mov mov cmp fnstenv xchg pop cmp dec fsub cld pop jb cmp enter sub pop (bad) xor outsb jp sub pushf aam xchg mov push lock and inc mov sbb test lcall push loopne mov push lahf push jl scas dec mov outsb sub jecxz fwait add mov xorl push add jne aad mov jl cmc push rcrb sub aad sbb or push lds cli mov (bad) aam mov mov (bad) mov add dec xchg adc and inc dec add jae and jl cmp or mov cmp mov mov adc (bad) (bad) (bad) add in adc fdivrl loope mov xor test mov andl mov div insb dec into pop test nop lret mov push xchg cmp mov fimul mov jg jae cs sub inc jg sti scas test cmp call pusha mov inc test dec arpl cld xchg outsb pop call test movsl cmp int3 inc stos out rorb jl mov lods jg test dec xor adc lret andb jge stos or adc loop mov out push adc mov scas push xchg loope jns push arpl or mov xchg and pop popa xchg aaa ljmp pop adc pop push add iret cmp cs (bad) push cltd jb out mov push jg js rolb (bad) push (bad) mov frstor mov out in aas xchg xchg in mov cltd push je fcomp mov push inc jnp ja adc and mov inc push loope pop mov mov inc mov lods ficoml mov or lods inc daa cs clc cmp inc push insl lret mov fs je jno mov jae xlat or sbb (bad) jb jae sub into sahf imull lret add js loopne scas add (bad) lret add dec in (bad) mov add inc popf outsl sbb adc loope cmpsb jb clc jae in xchg xchg scas pop pop sahf sbb jns ljmp shr in ret iret or push incb (bad) adc aas sbb lahf jecxz cwtl adc mov push (bad) mov inc lock mov mov cmp pop adc sub jae cli iret pusha ficomp add dec cmp dec fincstp lret leave leave add mov mov fstps pop push outsb xchg inc jo outsb insl es cmp insb and pop test add fidivl cmp dec (bad) mov in insb and into mov pop xchg sub xchg mov pop stc lret adc js xchg ljmp (bad) out test fstpt pop scas dec cltd js dec pop sbb dec xchg scas nop (bad) xor lock pushf cli arpl xchg mov inc movsb das push xchg jae add or cmp subl std or jno mov lahf adc scas mov xchg das mov cmc scas mov xor decl (bad) mov lea inc lret in jb pushfw xor subb dec xchg fidiv cmpsl jge mov and lods mov repnz mov push dec fistpl or mov sbb sub sub pop in fucom clc push clc push in push xorl in sub mov inc mov xchg xor cmp popa loop add insl mov add dec jecxz inc sub adc jge xchg test xchg cmp ljmp jl test add mov rorb jbe push out ss lock cltd sbb into mov arpl dec ljmp in cmp (bad) mov xor add clc and adc xchg adc dec mov xor fwait sarb aas sub cmp sub int3 loop inc push popf sub (bad) and lods pop mov xor push push add jl push mov cmc std loop and inc out xchg (bad) lock xor or push jb sub aad (bad) dec test push mov mov dec mov or imul jo add shrl sbb pop jge insb and int fcomps fs sbb mov test fiaddl sahf lods jge mov pop dec jbe loop xchg int3 loope data16 sub pcmpeqw fcmovnu jb jge or daa lea jmp incb cld push push cltd dec loop mov mov jmp jmp mov mov call xchg rorl sub push pop imul mov dec inc mov shr xchg add fsubs push pop negb push shlb pop dec jle pop adc (bad) int3 mov fsubs hlt (bad) imul push lds sbb mov movsb fucomip es push outsl test ljmp rolb insl jae and lret inc xchg in mov fisubl ljmp xor dec mov cmpsl lahf cli xor loope cmpb mov bound (bad) repz jmp jne cmp (bad) jl or stos sbb stc jp xchg mov fimull aam sbb shrb fnsave inc inc sub repnz mov mov ljmp loop and leave into repnz inc das sub mov es into repnz pop cmp int test mov adc (bad) ret fnsave or dec fs adc mov mov mov outsl ret jb sti cltd cmpsb mov int insb or jne inc inc int jb xchg jge adc imul out clc js add dec inc xchg js or inc sti cmpsl stc or and jp insb rcll (bad) cmp xlat add add jnp cmp pop jns cmpsb xchg cmpsb xor push fnstenv ss jbe rorl and push xchg cmp jecxz pop mov out dec fwait arpl cmp imul scas jo loopne addr16 fsubl jg cmp and dec dec mov jbe test fsubl jo xlat mov ret pushf jmp or fdiv sub stc inc xor sub arpl xchg xchg lahf imul jb jecxz mov xchg ja pop (bad) test and lock xchg push adc xchg call cltd push add or adcl xchg fdivl test or push insb lret jmp rol dec (bad) out fldenv int cmp mov stos pop (bad) leave mov jmp xchg mov jmp vmovapd fcomps cld out sti leave cmp add xchg push imul loop adcb push cmp pop xor inc push mov hlt cmp pushf mov jb mov inc inc push test mov pop cmp mov (bad) test fcmovnu cmp cltd fidivl test ja dec inc stc sbb lret or inc nop or enter adc adc sahf pop push jno repnz scas xor cmpsl aam mov enter hlt (bad) jae fidiv shll mov xchg mov jnp std cwtl daa lods pop ja push not add adc icebp and adc add adc and dec movb cld lods pop pop mov cmp fsubl inc mov push sbb movsb sub addr16 insl scas or orb loopne cmp add mov inc fnop loopne and pop cmp push mov out mov jo pop push jne daa fs sahf lcall shrb in pop add mov pushf jecxz jg xorl sub adc popf imul fnclex xor ja fisttpll mov jmp xor mov loop hlt insl lods stos arpl mov cmpl inc inc loope lcall pop cltd push cwtl fdivrl stc dec nop jmp and gs lret sbb arpl dec imul xor or fcom pop in jno mov mov stc pop adc lea xor bound call lahf adc fstl lret jmp mov or mov mov (bad) jb jo outsl add sub aad and dec in sbb lock lcall clc pop xor pop pop mov arpl mov xor mov mov aad test gs adc lret or leave sub inc cltd sbb mov lahf into adc int3 inc push pushf dec or data16 xlat push push in pop cmp insb pop idiv lods xor sbbl pushf mov pop pop notl jo cld out add dec in loop hlt xor cmp mov xchg mov inc inc ss stos mov xorl mov inc push mov fwait inc jbe ja (bad) (bad) xor and cmp sbb xchg shl shrb imul cli push loope add xor add rcrb cmp insl pop xchg pusha loope inc mov xor and jbe repz mov xor push ffree xor xor fdivs test push insl xchg nop mov pop sbb and pop shll popl mov push mov ret test (bad) scas je xor mov cmp loope ja sbb cli loope jg inc mov movsl vpaddd jns (bad) xchg pop jbe jbe mov in and sub lret xor mov mov dec pop sbb popa lahf js jne cli ret (bad) or repnz (bad) getsec cmp mov sarb xchg mov frstor adc xor stc cmp dec pop lret lea cli sub push push pop cmp inc aas (bad) and (bad) das fs adc add jecxz add pusha subl jb loop or and inc jmp dec jle sbb les inc fisubrl pop add jp (bad) sub push movsb (bad) dec test es test sbb pusha fnsave mov dec (bad) loopne sbb lea popa sbb push call cmp mov and les scas mov (bad) jmp (bad) (bad) xchg jnp adc cli mov push ds pop out or jg sub inc aaa dec push sbb dec mov mov mov imul rorb dec mov xor jecxz mov adc hlt jne call outsl cmp loop in xor sbb inc jmp lcall popf test push inc adc mov pop aas out imul pop jne sbb pop inc jg or mov xchg negb dec outsl add sbb les add ljmp add cs ljmp les mov stos stc lock adc inc sbb sti pop fstl mov mov pop or mov sbb (bad) pop jb mov mov gs xorl sar and add sar sbb sub das mov sbb sbb test test fs movsl sbb sub lahf in sbb arpl lret aas insl popl xor repnz sti lahf jg daa ljmp jo and lea mov pop sbb fidivl out shlb les inc mov fidivrl cs and inc jmp ja ficoml mov adc lahf xchg loopne ja idivl call or jmp test push and sbb or push mov xor hlt (bad) cmp repnz (bad) cmp adc dec xchg in sub stos in lahf fnstsw push sub inc stos jb test push mov out (bad) imul cs pop sbb out (bad) jl loopne push icebp push inc pop movsl xchg jae ror jnp aad mov or int and addr16 or fldt or shll stc jg icebp push dec xchg cmpl jne imul (bad) xor fsubrs lds (bad) ficoml sub inc (bad) in jp add mov insl jns mov cmc cmpsl scas pop xchg dec sti and jno aaa adc jge push push inc sbb sub fwait aaa fbld (bad) pusha es mov xor mov addr16 cmp sub lcall jne jne push push stc xlat outsb (bad) aam mov dec xor lret pop adc lods fwait or pop adc push cmpsl repnz loop fmuls mov xchg mov xchg adc xchg push mov lahf dec and addr16 in pop pop sbb sbb dec xor dec int3 mov (bad) scas cmp and adcl inc fisttpl (bad) stc flds ja xchg lahf stc loop mov inc xor jecxz fwait pop adc (bad) arpl mov out mov mov lods sahf and sub add jnp arpl into leave subb mov mov ss or addr16 dec lcall push pop jle sub das loop nop xchg (bad) xchg push and jp fildll inc repz and add mov outsl mov stos dec pop je (bad) sbb into jmp push push pop sub or inc fwait and pop dec pop adc mov adc rorl lret ror or fisubr out jo jae inc xor rcrl mov cmpb pop rclb ret sub fistp test mov fldenv lods (bad) ret js lea daa cmpsl loop cmpsb out test lock aam mov or cmp xor dec push sbb roll leave sahf pop jo aaa fistp inc mov mov int cmp ss das xor inc dec add mov push mov lock xchg (bad) aaa fdivs mov pusha jnp in mov rorb jle jl aaa jmp test mov cltd add cli jecxz stos or pop pop jb cmp jg mov dec test and lret fsubp sahf dec das dec lods adc dec jae jns out pushf push sahf sub pop mov xchg sti loop adc arpl or jge sub xor scas roll mov sbb mov adc leave jns rol cmp mov in cmpb and std mov movsb shlb mov dec xchg sbb in mov mov push fsubs je jle shlb pushf fwait dec xor fldt out mov mov insb jae dec jmp out aaa subl mov lea fwait cmc sbb pop xor lahf xchg sub test xor jo shr xchg mov nop hlt mov push js (bad) nop inc int3 cwtl test push fwait lret sbb repz sbb arpl ja push js sub movsl into pop sub pop sub in pop push movsb arpl push leave pop cmp cs jns xor mov add ret daa enter mov inc addl lods clc jge add or push leave mov out mov mov jns mulb xchg scas sbb and scas push faddl les sbb fnop lods stc lods sbb sub ds bound mov mov dec xorb icebp inc fidiv (bad) jo add sub sbb fcomps fs stc enter sub ja push sbb fwait push sub mov sarb jp subl hlt aam cmp lods aaa movl outsl or outsl dec mov bound push mov lret fidivl jmp lea jg push loope fimull addl fbstp mov divl rcrl notl add fdiv subl add mov ret mov pop cmpsb iret ret popa xchg mov pop fcompl dec push jmp xchg mov mov dec push dec insl jecxz adc and test jbe enter in (bad) scas jno mov pop insb js push lahf add push mov pusha add sbb jle dec in pop in sub or mov dec fisttpl mov sbb lds sbb xchg sbb push shrl daa lock imul scas lea mov iret fldl push insl test mov shl add jecxz inc loopne mov mov cmc push fldl aad mov mov bound or dec jb insb arpl test loop flds xchg (bad) shl cmc mov insl jge imul loop dec push outsl jb xlat imul jmp jp and jbe or cs inc ljmp jns aam mov dec aam pop fwait push (bad) ss mov loop sbb insl inc cmp cmpsl pop jmp stos arpl insl or sub popf es inc arpl adc loop mov or cmpsb cs in aad shld inc lock (bad) ret lea les mov pop loope mov jp imul aas pop cmp add sub push fisubl ljmp cmpsl insl jp insl sarb jge or jne cmp fsubrs insb stos add shlb test (bad) adc outsb add (bad) std mov push xchg push loopne mov and js cmc test mov mov popf cs or xchg pop loopne and cltd fwait mov es sub mov mov stc xor jmp xor xchg aad jmp jg (bad) sbb out mov dec lcall adc call mov (bad) inc ret (bad) mov js pop sub rclb push dec mov dec adc adc mov sbb lods or xor push adc imul adc mov and adc pop xlat (bad) das push cmp jle imul lea test add jo repz xorl enter add out mov fs inc mul rorl rol aaa bound jb cli inc sbb das and test fidivr sahf lock rorb int aam push xchg mov jae mov dec shr sub mov addr16 fnstenv mov mov jg stos xchg scas inc in (bad) push xor call mov rorb ret xchg lock lcall sarb lods dec pop repz dec lods daa inc ja scas xor (bad) mov stos mov or mov not dec nop sbb stc sub sahf loopne mov shrb (bad) push cmc test insl sbb call inc clc hlt mov add jmp cs inc gs fbld mov in adc inc inc fwait jns test push add clc lock xchg fsubrs int3 add cmpsl daa into push imul mov in pop xor mov lret xor xchg mov (bad) adc add das push pop pushf (bad) add leave fisttpll cmp jns push cmp xor test mov in in mov (bad) jo push push in mov aaa or repz jmp test mov lcall shr aam mov xor fmuls xchg jl fmuls mov fucomi addr16 push (bad) push das cmpsb test shrb dec jns scas cli sub cmp mov mov cltd jbe dec adc jg lcall aaa test dec pop (bad) mov aaa pop icebp shll pop and xchg repz push jmp sbb ficompl pusha cwtl in es xor fcmovnu test jl repnz xlat aaa leave jae jp cmpl cmpsb aad pop mov cmpsl gs in pop mov jo mov jns clc insl inc push inc sbb xchg jo jl xchg (bad) call adc jne xchg push jo loope addr16 out imul cld out test fs mov dec ljmp add mov pop or insl dec and test repnz mov sti fdivrl push repz jp in mov add and stc jle mov test rclb mov dec out out xchg mov pop hlt fild lcall dec insb push jno popa push adc pop mov xor cmpsl add shlb call arpl scas int xchg es loop jne fs fdiv pop lret adc pop mov jnp cmpsb pop scas xchg scas dec and les outsb int loop int3 push dec mov jnp cmp fwait push ret mov dec repz xchg (bad) mov rcl pop push flds pop repnz inc fbld clc (bad) jne fwait insl add arpl xor xchg xor (bad) aam sbbl shl imul aam scas (bad) sti das iret dec sbb mov fwait and daa faddp stc push mov out mov jecxz push xchg fidivrl leave pop fstps fs in xchg js aas sub nop pop dec icebp test test mov push pop dec xor enter dec lods fnstenv stos sahf xchg ret push xor iret lea dec jno cmp (bad) push es cmc jne xor sahf in mov shr jl jae mov jmp sbb (bad) pushf (bad) int3 mov out (bad) xor cmpsl fimul xchg mov push fbstp jge cltd xor mov xor lret clc xor lahf icebp popa jmp xor stc adc sub outsb jae mov mov sub mov pop fcmovnu cltd inc loopne iret out ret daa dec and into cmp fistpll sbb sub xchg aas cmp mov outsb pop fwait mov pop and out rcrb xor sbb das xor xor test cmpsl or and cmpsb pop fdivrl xchg movsl mov inc cmp dec jl cmp push stos insb lds jae loop push mov sbb push xchg dec fbld pop loope mov cmc lods cmpsb je jp ret enter sbb icebp jp sarb xchg pop fcoml dec fwait xchg jecxz inc xchg imul jle and pop lods sub or jns sti and sbb cli fwait jmp rcrb out jg add add out sar (bad) (bad) pcmpeqw pextrw lahf mov outsb or sbb sub stos fisubrl pop jmp xorl inc jmp cmpsb bound xlat (bad) xchg sbb call inc inc roll mov inc cmp int dec or push in pop out push std (bad) mov adc dec pop sbb test rclb std dec push and pop xchg cmpsl ret mov xchg cmpl sub mov push cltd test aad pusha loop adcl sbb fadds lcall lcall stc dec test sub ficom adc (bad) jns pop inc mov mov sti or sbb fcmovne mov adc xchg mov adc mov sahf in push push stos mov push clc xchg cld js dec outsl pop jo jns push lret push and int inc sbb or scas push inc adc daa (bad) jb out test insl dec xor pop les lahf jbe jo out in daa stc adc jmp insl push pushf gs mov inc xchg xor imul cs fiadd push dec adc xor addr16 shl sub movsb cmp loopne lret mov test mov cltd xor cmp push scas pop imul and test adc loopne cmc push push fs push push mov inc ret cmp mov dec int3 in aam popf sbb (bad) sbb test xchg loope sahf lret loope fmuls repnz adc push ja int pusha movsb popf mov or mov dec fdivrs inc int3 fcomp inc mov mov sbb cmp int3 fwait mov inc and push xchg push popa and inc and (bad) push push data16 jl lea jl xor sub sbb mov dec cmp push nop or in jmp loopne mov mov stos sahf rcll stos jge lods data16 test xchg iret push mov inc je aaa imul sub fcomp popa aaa in mov inc adc test push fisttpl (bad) addr16 or dec xchg aad adc data16 push mov pushf lcall ficom (bad) in out data16 js dec icebp xlat dec int mov scas xorl int3 xchg mov (bad) sub mov jmp xchg mov scas das or push lds dec mov sbb movsb (bad) mov push or aad lcall push add pop add fwait add jl lods mov sub inc sbb xchg fucomi inc int3 cmpsl xor and mov pop fincstp jb xlat rcrl pop aas fcomp iret (bad) hlt fsubrp and lahf lods xor xchg inc mov das aaa pusha dec scas movsb notl test push sbb sub mov add push adc hlt dec cwtl mov xchg inc fcmovnbe enter daa mov bnd jl inc pushf sub mov xor (bad) scas mov ljmp test cmc shll push xor dec add int3 dec wbinvd in inc sbb enter jg rcrl pop (bad) mov (bad) sti rolb hlt adc call or stos mov pusha xchg inc xchg sbb adc adc sbb lahf call scas inc in lock shr dec cli xor repnz les jnp lahf sub inc movsl sub mov stos imul adc lret jmp dec arpl xor cs mov jge inc addr16 sbb pop decb faddl sbb mov cli xchg xlat inc xor xchg mov arpl cltd mov dec inc fdivs push mov push mov mov loop call pop xor xchg dec pop ret mov das cmpsb (bad) scas sbb sbb xlat add imul push pop int3 xor lret or das mov xor add mov loopne sub mov jo aaa pop fcoml xchg test sbb movsb (bad) and (bad) mov cmp add outsb adc inc dec or ror (bad) icebp scas pop cld mov push clc mov dec sub push (bad) fnstsw pop inc fnstsw aam icebp movsl mov (bad) movsb jno push (bad) movb andl dec cmp xchg imul adc cmc jns ret adc dec stos enter (bad) xchg aas cmc sbb inc test (bad) aaa (bad) xchg icebp or (bad) xor ljmp ss lret dec push xchg insb mov stos test stc mov dec add (bad) mov or mov jmp adc cli xchg hlt inc mov xor addr16 in ficomp push adc call scas mov call and adc push adc dec push push cmp cmc xchg cmp rcrl dec xchg movsb pusha mov ret cld cmp adc push lds inc inc sub xchg mov or xor add mov sbb push cmpsb dec xchg fldl add ss nop stos in jne enter loope push mov jecxz inc push adc out cmovbe pxor xchg jnp mov imul outsl jecxz ret repnz shll mov lret test cli ljmp addr16 pop xchg push add std adc xchg push leave or mov ret or repz dec test jnp (bad) je sbb iret adc nop (bad) pop xchg int fs (bad) lret xchg dec or jmp fstpt dec jb push dec out pop sbb icebp mov sub push mov push cmpsl cld inc sub pop lods fisubl imul sarl mov push add out sti mov push fwait cld cmpl rcll repz stos mov int lret ja rorb dec stos mov mov or je js lods add in pop push xor movsb mov xorl sub movsb addr16 add dec (bad) jecxz push pop ret lock dec lret (bad) addr16 sahf call test pushf insb ljmp cmp pop cwtl and mov cwtl sub sub and incl inc out and jne cmp add and pusha jecxz pop cmp push adc xor mov cmp and lahf push and inc call dec outsb fistp mov push clc ja test sbb ja add xchg jo cltd inc mov (bad) movsl mov popa sub inc sbb dec push out cmpsb jmp cmp mov jae sbb cmp idiv stos cmpsl sbb insl dec sbb mov aam inc add outsb lret (bad) popf fistpll xchg adc jno or add dec je in ror lret add dec mov call movsb out lds push adc cs stos sub mov mov icebp orb add (bad) shrb dec stos mov dec and fsubrs fadds cmp call xchg lcall xchg shlb push or sbb lods stos mov jb push mov cmpsl pop outsb jg cmp jb jns mov cli or and jmp mov test rclb sbb ret mov inc test scas mov fsub iret (bad) jbe lret add xlat rcl pusha fisub sub and loope insb mov lea out jns or aad fimul pop add xor leave lds xchg arpl pop loop mov cmp or adcl je or (bad) mov ret lock aaa xchg stc xchg into (bad) (bad) and xor mov dec pop cmc in mov jo gs sbb sub aaa (bad) sbb jge dec mov sub loopne stc mov fstps cld cmp pop or inc outsb (bad) adc xor jne frstor inc lods test mov push ret arpl or mov outsb jb je fldenv and in adc mov xchg sub and xlat xlat pushf lcall adc repz mov loopne sub and loopne bound stos jmp loop cltd popa ret pop push adc xor xchg or xlat arpl test arpl pop and inc (bad) push mov jg (bad) call and jae lds out mov jno mov and add pop loope icebp cmpsl xchg and xor fisubrl outsl mov add (bad) clc arpl aad or mov out and mov stos popa jne in dec cwtl mov (bad) ficomp mov daa pop dec fmuls cs dec sarb repz lds aaa jb sub ja push (bad) roll fistpl mov loopne push loopne les dec xlat and popa add pop test fwait incl aad rolb hlt mov dec rclb in (bad) popf jo mov insl mov rcll pop jg xchg or add pop dec or movsb fistp push or movsb sbb sbb pop icebp cld repnz dec cs sbb sub or mov inc je cmp fdivl imul mov jns ret sbb int jnp jmp mov pop sub add cmp push fs dec inc inc mov test in stos mov xor xlat jae mov mov arpl out leave sarl fucomip xchg and lret xlat xchg inc adc aam sub mov rcr pop inc movsl jmp and nop pusha movsb cmp (bad) inc pop in (bad) lcall call sbbl inc nop xor mov iret dec push sub aad sub adc jo pop es mov in adc mov cs loope dec xor fcom out outsb pop loope xor lock lss mov pop mov repnz sbb fcmovnbe cmp frstor cli fbstp aaa ja jb cmp mov enter cmp cmp jae subl mov popa jle fwait insl repnz mov add adc and mov lcall adc insl or jb add in ror and pushf and mov or sub shr enter sbb in test sbb sbb sbb rcl insb sahf fsubrl shll jmp sarb mov cld icebp aaa and push (bad) jno push xor mov es sbb adc xor hlt dec xchg mov pop adc push push test push pop rcrl cmpsl nop clc outsl bound mov lret and lahf lret inc bound xchg and sti inc adc xor fwait repnz or push add jae or or rcl shlb icebp test fdivl cmc inc sub sbb mov inc fldenv jmp (bad) aaa mov sbb cltd sbb shrb adc cmp pop stc cmc (bad) mov test (bad) bnd cli cli jo fidivl xchg pop sub sbb inc xor pop or inc mov mov jmp jmp push xchg pop shr ljmp subl gs out sti cmp or add push in inc icebp xchg (bad) xchg iret mov cmc pusha lods lret fldenv (bad) sub ljmp in out inc inc sahf cmp mov fimull outsb push xchg push push movsb (bad) fildll (bad) jge xor inc popa mov mov adc inc add and icebp xchg dec insb ret lea add (bad) mov (bad) sub aas cmp arpl pop std jnp sub push mov aam push push mov sbb roll mov pop adcl xchg push mov push adc inc mov (bad) jl scas jmp mov dec jnp stos mov stc aas push inc (bad) fsubl popf adc mov lea movsb jno mov out add dec outsb xchg sbb insl dec push sbb inc xor xor por (bad) dec aas push fcmovu xor pop mov or mov rolb (bad) (bad) dec popa jge and mov sub mov cwtl (bad) push add pop xchg cmp cmc jo lret sbb movaps and pop sbb lcall adc jbe call pusha jp pop xor hlt je loop add xor jl addl mov jl in dec push scas aaa sbb jge ficompl push sbb fwait leave jecxz cmp cmpsb sub les adc sbb hlt aam cwtl xchg sahf pusha (bad) cmp mov in fsubr jle int3 outsb imul pop jmp sub daa iret (bad) jl test dec add out push push roll jle cmp fwait int3 (bad) popa in cmp xchg sbbl (bad) dec add xchg out xor push or test inc ja test enter inc test loop gs std xchg lock roll cmp out jecxz fsts mov add mov bound popf cld sub das aam mov jno decl insb loopne (bad) (bad) cmp or or in sbb mov mov adc (bad) and (bad) in stos js (bad) cmc push jecxz fsubrl out lret jle mov add pop mov jp push divb popf push jp ja jle inc jmp (bad) out popa fdivrl fstp outsb add cmpsb jecxz mov insl mov inc lea mov dec in mov mov out mov dec popaw outsb push mov out sub mov pop test sbb jne lret xlat aad out clc fwait xchg stos insl gs cmp in rclb js int3 inc (bad) sbb imul jmp inc pop pop push test adc lahf sbb adc jne pop xchg ret pop sbb aad in adc sub push fs iret pusha rcrl push pop xor test icebp arpl ja iret fwait or aam in icebp iret ret mov sbb pop push mov add xorl leave nop xor sub out adc test popf shll mov cmp or mov rolb out imul inc push mov sub cmpb add stos inc subl aaa mov mov push outsl xlat movsl push cmpl fdivrl lea lret jge leave jb into mov (bad) (bad) dec je jmp mov sub xchg mov mov in sti fnstsw jbe popa jl xchg pop adc leave mov dec clc mov or (bad) lods iret pop adc adc aam jno fsubrs mov cmpsb lds inc test dec insl inc inc fs mov outsl push inc nop jmp inc jb add int3 adc fwait xor int3 push imul stos jmp mov sub ficompl inc arpl mov dec push push imull pop and mov inc out (bad) ja enter out std cmp sahf loop inc bound in sub das scas test imul adc shll mov stos mov or js pusha mov xor lret fisttpl sarl jae dec in push mov push sbb imul mov add or inc mov mov out pop mov sbb insb stos in addr16 jb call adc or xorl fist pop pushl sub xchg lods push xchg mov or xor dec jge add iret fcompl pop sub mov sub jns add in loopne pop lods loop pop fs pop mov adc leave inc subl (bad) into or pop mov xor mov fwait cltd pop jae push push cmpsb adc je (bad) or popa jne dec push xchg sub mov dec jnp xchg (bad) jne add xchg jl xor adc aas sub sub mov or jg jle pop gs inc dec addr16 xchg xor dec cmp fidivrl andl cmp or dec fwait mov stos insb jmp dec jo ret xor adc imulb fsubrs ds loopne idivb (bad) movsb push or mov ucomiss xchg cmpsl mov mov pop jl jge in cmp imulb call xorl xor adc mov je xor jge stos xor (bad) or inc add repnz dec and inc or xchg lea xlat mov jne jmp or push push mov (bad) push loopne xchg pusha mov pop pop lret fwait dec xor jge and adc stos xor pop je cld mov pop sub push mov daa iret sub pusha mov fwait insl dec jo fldt jge jo aad insl dec jo fist addr16 pop jb sub pop or sti jle hlt cmpsl pop (bad) xor mov out dec mov inc lcall (bad) sbb mov mov in mov jge out jmp fmuls test mov outsb cmp (bad) (bad) or mov inc xor inc cmpsl pop push or pop (bad) (bad) or mov repnz arpl jo pop adc mov inc or daa (bad) or aaa fist test mov xlat test out dec stos cmp cmpsl jle adc pop mov leave (bad) cmp testb fsubrs adc xlat mov (bad) push loope (bad) fistpl pop jmp xor test mov mov xchg mov xor pop sbb js cmpsb test in jmp pop push pusha adc ljmp adc lods pop adc mov adc bound dec aas or pop enter cmpsb test mov cli add test or xchg mov mov jb sysret mov jge scas scas mov in sub xchg adc dec pop mov insb sar push jl inc ret stc jl negl push mov clc cli push gs push inc add imul dec aad lods (bad) xlat push lahf loopew mov xchg add std dec (bad) inc popf fstpl hlt or jne and push bound mov inc or pop mov inc stc adc outsb mov pop mov ljmp push mov sbbb xlat mov in inc loope push dec mov mov movsb push xchg jmp in jae movsb shrb std aaa enter loope xchg addr16 xchg xchg cmp test in dec insl ficom jnp jp gs and or dec adc nop cmp cwtl mov mov pop xchg mov (bad) sbb ja sarl pop out mov dec and jbe dec aam mov sahf test dec inc cmp sbb pop inc xor jp scas or test dec pop inc sarl or cmp std xchg sub sti dec movl mov jnp mov leave mov xor rolb push or aas repz dec pop xchg or cmp push (bad) push pop cld mov out or cmp fnstenv sub mov aas rol ljmp or jmp push add add add xor addr16 imul mov ja mov lds jne pop test xor int3 push cwtl test jmp test iret sbb and sbb push cmp dec arpl dec sbb mov xor dec xchg jb subb in jp aam and add outsb push pop mov and cwtl pusha stc sbb enter call cli scas ret test (bad) shrl jge cmp xlat stos inc clc das loop jle sarl loope inc sub mov inc adcl stos adc cmc (bad) adcl inc mov add pop xchg sub hlt loop sbb lret lahf mov xlat push int3 mov fstpt mov rclb (bad) fcomp gs insl subb mov lea leave rcrb adc (bad) jl (bad) pop lret iret or mov sub mov popa pop enter stos movsb fildll mov and pop push push adc dec adc jecxz mov aad aaa call mov ret add fcmovb jbe mov sbb sub pop fcomps jl jge xchg fcom xchg lcall aam fmuls mov lock aad add inc jno cmp fxch add popa mov les cmp mov shrb fwait leave adc push cwtl adc ss xchg push test sbb loope stos adc aad and add push int adc mov mov subl enter dec int rcr cld movsb and inc sub sti push in pop ljmp ja xchg adc imul fcmovne rorl mov pop test cmp xchg loope sub (bad) xor lea xchg dec xchg mov nop (bad) aas mov ja pop sub or cmp lret jge lret fiadd sub shl in movsb fildl pop xor loope push lret rcr inc push pop (bad) lea clc icebp or sbb ljmp add lods inc movsb gs sbb mov cmp mov adc pop mov jae mov pusha or dec inc (bad) loop in mov cld mulps out xchg fucomip xchg pop jmp rcrb cmpsb jmp lods xchg dec imul imul or cld (bad) xchg push cld push mov inc mov add mov pop into push test fmull pusha pushf enter pop lahf mov dec pop or mov sub into sbb add add es stos insl mov in mov in pop dec aam pop mov out xlat jmp iret fcompl xchg add cmpsl ja outsb aaa sub mov repnz jae sub and push cmp cltd adc int3 dec push add imul out jnp sub fldenv movb dec jmp jne xchg insb and cmc push fucomp scas roll jl xchg xchg std inc insb mov jnp inc dec push sti test js pop xor mov sbb pop aam lret movntps cmovl xchg mov or inc ja adc icebp jnp jle add xchg pop push inc and pop add fs test and rcr repz xor pop push push in add add int3 inc push clc mov pop cli inc mov imul out scas movsl xchg mov or scas and sar xorb in or jne adc pop mov jg ja sbb ja jbe jg mov (bad) cmp testl adcb (bad) call push fmuls lahf mov sub dec pushf iret mov or jg lea sbbl jg ja clc pop ret add adc gs mov dec lods pop fisubr aas (bad) or xchg lods out or jg sbb pop fistp dec or xor push push jns stc inc mov int3 mov jbe pop int3 xlat (bad) and outsl roll test xchg inc mov add or loopne and add and fcomps insl outsb int3 adc sub mov mov xchg rep mov lods lods and pop lea xor (bad) repnz dec fnstcw pushf test (bad) or dec mov rep sub cmp je pop sar popl pop faddl and xchg pop mov cmpsl add test xor (bad) test sub aaa stc and cli int3 aaa mov mov imul (bad) cmp pop sbb sub fnsave push int mov add fisubrl fwait into push and mov (bad) mov jmp mov ljmp mov cmp mov cld sahf fwait jmp in adc insl jnp adc jns in iret add pop mov or scas lcall mov sarl adc xor gs arpl test jmp cmpsb dec and arpl lcall jecxz mov sbb adc (bad) lcall pop mov adc sbb dec sub subb adc mov fcomp pusha out stos jne mov add xchg int xchg addl pop pop or vpsrad int3 adc addr16 mov inc out rclb sahf lods clc xor push out rorl js mov je push mov rcrl and fnsave jne mov popf add sub je,pt xchg jecxz aaa xchg ret pcmpgtd jmp mov imul inc cli cmp mov ret int3 dec iret popa add and lahf dec cltd cmp mov pminub dec sahf cli adc inc and int pop mov sub lods adc stos xchg arpl enter fbstp or xchg add in dec or int int pop mov es loopne cmpsb mov push pop or push shll negl xchg sub push in enter mov jl jns add int3 and insb adc fisub add pop std test std ljmp fistpll and imul lods dec rcrl sti add and lods add fldl2e loop fimull or sbb in test lods jae scas xchg into inc or inc push cmp push mov push std mov aas add repz lea (bad) mov sahf sbb dec lock dec rclb ret dec push cmp outsl or mov adc adc lret test sbb mov mov sbb cmp mov clc test push (bad) iret lcall inc out xchg and popf ffreep push (bad) loopne faddp fistp sub inc loope imulb mov xor or outsb xchg lret push outsb mov mov lcall mov lcall std mov jb add shrb pop aas cmp scas les xchg adc adc and repz int lret lcall mov repz xchg in roll or sar test jb repz test push in or jle sub xchg rorl mov lahf lock lcall loopne dec movsl icebp daa push faddp mov repz adc test int3 mov xor xchg mov call sub xchg ret popa jo mov sbb js xchg pop dec in sub sbb (bad) sbb xchg pushf mov xor jno jle sbb pop mov xor xlat mov loope push rorb sub faddl arpl mov js jne mov sub test or cmp stos dec mov imul ljmp sbb into xor jnp xchg cmp and mov and pop sub mov xchg push fidiv lea lods sub add or fcoms aaa add faddl mov xchg cmp andb add add movsb scas stos ret lock loope cmpsl sbb je lret mov dec lods sbb (bad) shr aad sbb test insb or cltd (bad) outsb cmp fisubr pop sub pop dec (bad) pop cmpsl sbb mov lock push adc mov mov and cmpsb lret inc cld mov inc mov cmp mov pop fwait or scas jne enter inc or add (bad) pop push mov dec xchg mov (bad) or (bad) in and loopne add dec imul orl or rcr or xchg sub xlat cmp cld mov jmp out inc push outsb addr16 cltd push ficoml cmp pop cmpl push out and mov addl in sbbl jne jp dec add out jecxz xchg and mov jmp addr16 mov mov int insb sarl das jg push sub mov cs push cmp in or fwait notb fistp fistl ret ret lret divl mov cmc dec into push inc loope xchg mov inc cltd push inc or shld pop addl (bad) pop int3 inc daa mov out adc int test lds xor sub popf xchg sbb jmp out cmp repz scas (bad) xor xchg mov scas push fnstsw mov lea add cwtl fmuls mov scas lret mov jl sarl rolb aad or jns or fs loop hlt inc daa dec roll aad (bad) iret lods pop mov leave (bad) mov shrl testl mov test mov into int3 jns addr16 inc mov sbb out cmp sub repz xchg stos jae test ficom or adc cli sub xchg xchg or or popf dec popa push cmp outsl push sub mov insb lock rolb lcall stos jge mov imul imull add arpl inc sbb add int mov xor rol mov (bad) repnz fisttpl xchg inc mov cmp mov dec lods add mov inc sbbl call xchg imull mov sub mov hlt sbb mov psllw jecxz mov loopne inc mov loopne int3 pop mov mov mov mov mov sub dec mov inc fimul lods mov stos mov (bad) lret in out fs int mov test dec adc lahf mov or sub bound mov aad jnp adc cmp add cmp cltd and fiaddl js jge adc (bad) mov sub mov rolb add adc call adc cmp jle push arpl add mov push dec (bad) mov int3 jge fstpl pop imul cli das fmull inc test call mov cmp or int3 leave or int3 leave or push sub mov adc jo (bad) and lcall fnstenv nop pop dec jnp xchg mul insb mov stos push aam mov and mov int cmp cmpsl loope add in mov sbb mov mov neg incl (bad) xchg push sahf out jmp sbb mov push or push test (bad) hlt pop mov outsl sub call repz dec movsb pop pop int repnz and test inc into ret mov mov mov mov dec sahf js insb std (bad) mov ret and inc popf pop les cli imul push push rol jl mov in adc add (bad) cltd outsb ja int stos jl cltd jne pop loopne movl xor or sub pop add adc (bad) in insl push lock pop mov cmp scas cmpsb dec cmp xor add pop shrb hlt jnp call sub subl pop lcall (bad) out cmp icebp pop stc fdivs faddp dec inc pusha fistp gs cmp add cmp cmp or pop mov sub js ret test mov lret fcomp jmp mov addb insl inc (bad) call sbb test dec push pop mov hlt or sub clc pop icebp mov mov xor adc dec dec mov and imul fidiv f2xm1 mov pop xor dec push ret pop repnz push or scas dec mov pop fsubp ja in inc scas mov cwtl mov cwtl ljmp sbb insb lds and inc fdivs stc pop aad fmuls cmpsb icebp jae imul and and xor repz push jno scas and mov cld xchg (bad) xor adc and aam and xchg or mov lret adc test push xchg mov push hlt sbb jle enter rcrb (bad) iret rcl cli std mov adc lods inc vmovdqu mov add xor mov pop test xchg xor cmpsl mov mov leave mov inc xor pusha fnstsw cmp (bad) dec fisubl leave sub pop sar bnd (bad) imul mov mov pop das xchg stc roll repnz and js cmpsl xor and pop dec lds or enter sub lods inc push es ret mov sub jecxz mov leave mov mov out push sbb rcl stos xchg mov xchg or inc adc mov in mov mov movl into cli cmp sub mov jo adc pushf ds repz add mov psrlw test or scas cmp cmc pop into dec jmp cmc jo mov out in xchg adc sbb sub jecxz push xchg push lea rorl jecxz mov out dec push sub mov lret pop cli mov mov cmp gs insl sub fdivrl dec pop xor fisttpll pop adc xor sti outsl fistpl fs inc cld cli jae rcrl rol (bad) xor inc rcrb xorl mov mov mov mov add xchg push (bad) jecxz out or (bad) jle imul lcall notb or xor subl data16 push lret xor sahf sbb aad push (bad) mov dec sti cli insb int mov pusha and out sbb push cmp mov lcall mov jg add adc and std lods in fimul pop ss or xor pop loope arpl mov movsl test sti fwait xchg dec sub add cmp xchg mov loope das cltd rcll cmp imul lds xor es mov xchg stos jl cs mov inc (bad) es mov mov outsb push jns pop xlat fistpl loop (bad) (bad) out sub mov inc shrl jae mov les lret pop and mov fisubr das imul xor or or mov cmp or aad stos pop xchg cli push clc shr cwtl (bad) lock sbb imul iret dec (bad) fsubrs cmp xor aad loope lea inc mov repz adc sbb dec loop (bad) jo fsubl mov movsl in xor gs jecxz jne push cmp jo pop lock vpmaxub idivl add sti addr16 cmp pushf inc popa pusha dec cltd inc sahf push pop fild arpl mov mov outsl aaa cmpl pusha cld out xchg mov mov inc js push push dec repnz test pop xorb data16 int3 sbb popf stos test imul shlb jae addr16 cmc jle,pt or rclb pop out je lss adc xchg mov call jl lds add mov insl cmpsl cmp test loope and mov mov mov ror mov inc es push jp pop mov jmp in mov je pop int3 test sub mov aas pop ret outsl lcall test imul imul shrb sahf push (bad) pop in mov iret lods jmp push cld xchg movsb push jecxz and jno (bad) lods jae dec cli dec xor and jbe ljmp mov lret pushf mov xor ljmp cli add aam xchg xlat add mov cmp jle test fistpl xchg mov inc jmp shrl cs cmp int3 leave push movsl stos xchg lahf jecxz inc aam fsubrp lcall iret push cmp cmp mov jmp fcmove xchg js push adc ja into daa push or and (bad) xor jle xlat aas int3 (bad) movsl push fwait das in sbb pop call stc jp pop cmp pop jne cwtl out and push mov xchg add in es (bad) or psrld ds adc fisttpll (bad) popf sub and push or inc test xor sbb pop fstpl (bad) mov repz push pop push data16 repnz (bad) (bad) fnstsw sbb enter add lahf lss mov xchg cmp and dec and jmp pop lods and out dec pusha inc jle add pop je pop je jb jb aam lds mov push clc mov sub inc jne fisttpl sti rol adc xchg icebp cli fxch stos mov notl add sub rep (bad) cwtl pop adc sarl mov (bad) mov popf mov push repz jmp imul lods mov nop dec xchg je push sub sub out xor pop xchg mov and sub cmp or cmp leave in sub lods subl ret cmp fstpt xlat fstpt (bad) inc (bad) popa jecxz aaa xlat adc (bad) arpl std lock and sbb vmovaps inc in fs pop test ds idivl push jae sbb cs btc pop xchg test cmp arpl sahf jb adc orl or lcall test mov mov cmp mov pop into addr16 sbb jle dec addr16 inc stc lods fisttpl inc imul out pusha mov add or and ja (bad) je outsl aad cmp es les dec fwait adc jle xor pop ds cmc in les xor pop (bad) stc fs dec mov mov adc loopne addb mov mov and jae gs pop mov aam hlt idivl mov or jno xchg adc fdivrl push inc stc xchg test mov fs or and aas push aaa mov mov rcll lcall and mov stc das lock lea arpl aad cmp call jp or lret cltd sub (bad) lock clc and rcrl lds mov repz pop fldl mov dec jbe cltd pushf in push add in jecxz mov outsb lret push in ret pop pop cmp and out pop clc imul xchg add pop call lods (bad) pusha jnp lods stos jbe scas sub scas add test insl fidiv dec popf sbb pop fstpl insb cwtl lcall pop xor in inc adc popa lods add dec insl mov mov mov std push inc out popa lahf (bad) ljmp into sub movsl push jg or sarl jge xor pop adc sub shrb sarl lock or aam (bad) and fwait push ret push int jmp out or pushf cltd cmp mov pushf lret xchg addl outsl movsb and aad fcmovb push loope lcall xchg mov push dec mov mov push xchg aaa repnz mov aaa cmp in xchg mov and cmp lock mov push shrl scas or jmp pop cmp paddusb sbb int add sbb pop nop sub jp mov aas loop fistpl push fildll xorb mov adc mov xchg icebp mov add sub mov push incb jbe jae (bad) fidiv aam adc mov xchg lcall push dec js js mov clc sarb les stc mov cmp sbb adc js das cmp xor ret frstor into aad clc aas cs xor sub sub cmp xchg arpl sub mov pop or dec shl enter int3 mov push fs aad add sbb mov xchg je (bad) mov stc or pop clc test lds idivb push in enter push xchg jl sbb xor mov dec jge sbb cmp movsb jnp add (bad) je mov add xchg add dec js insl or dec xlat pop inc mov (bad) jg dec (bad) mov int3 sti push xchg push mov mov cwtl dec dec mov mov xchg fistpll cs repnz fsubr adc (bad) lock jmp dec mov cs in xchg cmp xchg fisttpll pop pop (bad) xor inc dec rolb mov sahf sbb add add jae ret xor jmp sarl add push cmpsl push or (bad) add mov gs insb or into adc andb push ficoml mov notl stos scas cld jbe (bad) jb loop sti (bad) in (bad) clc and sbbb cmp outsl cmp xchg int3 movsl jp fs mov test aam hlt rclb ret cmp push (bad) pop (bad) insl xchg popa xchg cmpsb in je mov in repz push in sbb int loope pop add dec mov sub lret imul nop and testl nop adc push push pusha adc cmp or bound or jnp xlat push movl cld sub xchg mov (bad) in push (bad) insl mov and sbb mov rorl push xor aaa mov mov xor adc cwtl pushf les mov pop pop mov xchg insb push stos xor jne imul pop rclb aad es jecxz fist les insb mov std mov cmpl or and mov jo in cmp jbe mov and push add cmp into shrl int jne ljmp mov jb lahf xor xchg pop lds rcll sbb (bad) pop push fisttpl xor or jp dec cmp fcmovb ss push adc push or mov (bad) inc mov dec out cld cmpsl pop cmp xor arpl mov xlat imul add lret inc xorb outsl fbld xor aas jne add in insb dec outsb ljmp xchg and daa mov sub or or popa push jns data16 add adc (bad) sbb popf mov or leave add leave lods sbb or (bad) and in cld mov sub inc push inc sub cwtl (bad) ss inc aad test sbb mov mov nop ret mov frstpm(287 gs shl stos xor dec jne popf mov pop cmp push xchg sahf adc out ss mov mov cmpsl xor pushf lret dec aaa jo aaa xchg std iret and stc cltd lods mov cmp fnstcw test cltd insb mov in imul jl mov outsb mov imul xchg (bad) (bad) dec jecxz sbb push jle rclb aam dec fwait xor stos dec mov outsl ret fdivl xlat sbb inc jo (bad) push cwtl clc sbb or and test inc fstpl push ja hlt adc xchg pop js mov mov mov dec leave xchg mov sti es cltd icebp (bad) and fldt pop mov mov mov mov adc rorl fstp int xor (bad) ret sbb and pop outsb hlt rol pop dec enter ret in arpl mov insb mov lret xchg pop fdivrl cmp clc cwtl stc lret clc pop xchg cmp sub in inc movsb sbb ret mov sbb jecxz int3 rcrl je add mulb or pop and and in mov fdivrs or add aad inc lret pop inc (bad) mov repnz inc sub inc call out cs loop stc push ficoml lods xchg jo pop inc dec inc cmp inc push adc mov adc sbb jmp dec xchg pusha cmp das icebp les lock (bad) jne or xor cli pop xchg mov clc cmp (bad) jmp add aam (bad) bound xor cli (bad) clc stc test mov stc dec sub arpl and xchg leave (bad) pop dec add fmulp dec ret faddp xchg roll add sub xor jg sub enter and pop or sub lods sbb movb inc cmp js cmpsb mov mov call pop sub dec decb xor (bad) push int jg and hlt scas in jns cmc ror mov les fwait loope pop lods jle icebp fs data16 and jb xor pop push out cmp sbb imul std push pop dec sub or mov xor pop adc or push lock xchg in data16 in push lock fimul xchg (bad) cmp and pusha mov mov sub push sub int pop add sub pop push and (bad) faddp fiadd out push jmp pop jne xchg mov xchg cmp inc in or sub mov adc inc dec addr16 lock sbb and or in lret xchg and inc or pop stos jae push fisttp aad mov movsb xchg dec cs (bad) add clc dec out fidivl popl shl ljmp fmull push imul test or repz loope adc sbb or imul xchg mov xor into xchg push pminub sub jle cmpsb push fsubl cmpsl cmp ljmp dec push divl ret (bad) mov fwait stc mov (bad) jns dec dec mov into cmc (bad) mov cs xor push cmpsl or xor leave mov sbb jp (bad) sbb aas rcll ljmp clc or lret out cmpsb dec fstps inc push pop or dec dec out sub aad sti pop imul inc outsl and or idiv stc inc fdivl fcmovne lcall mov and push mov xchg mov xor xor push pop addr16 xlat push inc cmc mov push repz xchg adc lret popf or addr16 adc xchg mov jbe xchg insb movsl adc jp and sub arpl mov popf stos (bad) (bad) ficomp mov mov pop lds dec or imul iret inc jg insl fdivrs shll mov jge mov outsl test movsb xchg das jae lahf mov lds mov rorl mov sub jno insl mov in jg push popa adc je pop and dec es push ds ror aam jmp and and lods and int3 sbb stos xchg xchg mov or pushf mov enter (bad) aas in xchg or gs fisttp mov lret mov ret bound lods and cmp xchg mov adc push and push rcll inc jmp (bad) mov arpl pop adc popf sbb xchg addr16 test inc dec popa jmp or sub mov decb or xchg and cmpsb repnz mov sbb adc jns mov cmp inc es or iret sbb dec stc ficom fimull xlat lea into sub inc fmuls sub mov mov aad mov pop dec sbb stc add cwtl int3 cmp insl into cmp sbb (bad) aam mov scas into cmpsl and mull mov repnz ret out add lret mov fs stc (bad) les and adc aas leave pushf xchg fs xor sbb mov cmp or jp aam sub jecxz push rorl aad (bad) cmp inc ss mov or cmp jg arpl int3 insb stos enter loopne push inc or push or pop add sub mov adc xchg mov xchg xchg mov daa pop lds mov insl mov xor mov cmp sub or jns adc dec sub insb ds int sti fdivrs lock xchg scas hlt je push xlat push xor notl out sbb aad xchg mov jmp or sub scas fidivr or sbb push push hlt in lcall inc hlt jbe pop jecxz mov stc stos cmp movsl adc fistp pusha (bad) xchg std cmp inc stos inc jl or xchg lcall outsb add dec sbb mov mov cs mov loope lsl and (bad) fmul jnp adc test sub add in xchg pop int fadd push mov rcr jo and in pop mov stos shrb or movsb adc pop and shll jae inc pop fisttpll dec icebp pop push xchg ret mov jmp not and jecxz mov lcall movsl pusha clc loop ljmp dec or mov add mov divl and mov inc ljmp add inc jnp bound lahf rcrb ss loopne cmp jle loope and insb sub mov sbb push sub sbb stos push stos xor ljmp jb stos repz dec jns test mov or stc out mov (bad) mov xchg push push xor or clc sbb jbe adc movsl hlt stos in jne xchg sbb nop and cmc and out jb stos or pusha jb js in mov call movsl or xlat mov mov sbb (bad) decl decb loop push jge adc nop es adc daa adc lret pushf icebp jbe sarl shrl mov ret push inc fmul mov test mov icebp lcall sbb cwtl call fisub push mov scas in jge adcb fdivrl (bad) sbb xchg movsb jmp das push cld mov xor (bad) dec lahf push jb or mov mov and mov cmc mov hlt lahf xor sub jl test sbb xor stc or sbb gs inc call cmc pop xor dec mov (bad) xlat or pushf lock cmp fs insl adc (bad) mov imul mov dec sbb gs stos dec dec (bad) dec loopne or jge lods mov pop or stos ja pop out lds sbb ljmp push inc cmp inc xor das insl sbb lret (bad) mov in adc sub and xchg xchg js stos cmp and and pushf mov shr int3 ds cltd jge inc cmpsb loope,pt (bad) mov add cmpsb gs sti pushf fcompl cmp mov mov stos (bad) jno push pop js jmp cmpsb enter or mov into jmp test data16 ret stos cmp add xor push mov jo (bad) fistl pop mov pop movsl xchg das (bad) sbb sbb in es stos in lahf pop or jle mov sbb sub sub js jmp lds push test jp mov mov sbb or pop fwait sub mov sub stc inc cmp xchg xor fnstsw fidiv fnstcw push notb or outsl scas iret jns push (bad) repnz lods push daa cmp outsb test inc cmp mov (bad) and sahf xchg divl pop inc push into call mov inc dec mov int3 fs ja (bad) outsb loop inc test and aas and out adc pushf or int addr16 inc xchg out imul dec push pop popa and pop mov push mov push in mov sbb adc imul (bad) lods ss daa or push fldcw cltd test (bad) or fsubr outsb das xchg lods and sub imul cmp pop jg out fwait icebp sub pop cwtl idiv int3 sbb inc shrb into dec or call or shll push lahf cmp inc stc pop dec sub insb loope or out sarl push pushf cmp lods das push scas sub mov aam clc bound mov sub adc mov cli xlat xlat cltd out inc adc sbb add ja fdivrs mov fs lods scas pushf sub fisubrl dec lret jne dec jp xor dec cmp mov and scas dec adc xchg lret sub ffreep mov in sbb repnz std fild sbb aam mov fsubrl jge or pushf into daa rorl inc repz popa push xchg cmp and js (bad) popf idivb leave sarb test (bad) mov cmp mov or icebp jbe cmp out sub and add test ds mov in test or inc and mov jge cmp pop aas sbb in pop mov je pop stc sbb mov jae xor and clc add loope or psubq xlat pushf sub icebp (bad) sub inc int pusha cmp dec call and mov dec lds (bad) test es imul dec dec sub lods and or test push cwtl cmp cmp inc inc mov les insb loopne jecxz jle aad jno (bad) aam pop and push test ret cmp cmpsl leave and cmpsl mov imul movsl icebp roll arpl rclb mov leave enter sub (bad) mov loope ret or xchg pop adc mov add xor ror or dec push test movsb out cltd aaa cmp pop add and inc push inc cmp stos in sbb add push mov dec xchg xchg push jle fwait mov add cmp cmp mov lahf shrl test ret and adc or mov pop xlat adc sbb jne aam scas out (bad) outsl insb sub scas lahf setbe fcmovne pop jae ret pop jno test push repz inc push add ret pop and sbb cltd xlat jnp or inc mov sub fcmovb or inc incb push cwtl inc std insb fstl movsl das inc jecxz aas jmp pop scas push lret out and std lods inc mov arpl mov std adc cltd loopne enter dec test jmp rclb dec nop mov (bad) stos mov imul (bad) adc mov pop cmpsb sbb push push jmp in push xlat dec or jae out mov pop (bad) (bad) mov and inc sbb (bad) adc scas loope (bad) xchg mov xchg xor inc ss pop mov idivb xchg repnz cmpsl mov or ss fs leave pushf popf sub movsl and xchg je push test (bad) popf loopne push sub and out loope aad out out sub xor loope nop cmp lea les jns test mov dec mov mov pop or outsb adcb mov fisubl cmp lea negb daa loopne mov dec aam movsb jmp nop sub out mov das xor mov xor dec test shr adc pop mov or decb mov fldenv leave sbb add sbb rorb sub outsb adc out aaa shlb jp inc ficom inc cmp ljmp cmp jge icebp inc ljmp push mov push sbb mov mov xchg or (bad) cwtl lds ljmp sarb mov in mov mov les scas or cmp sbb loopne lods push xlat mov sbb dec daa push (bad) dec xor jg imul add and adc mov es inc inc lods mov insb jo popa out (bad) rcr pusha push fiadd and lods lret xchg dec dec jl into or add bound roll popf add ret into push cmp sbb sarl xlat push aad popa lahf leave fcompl inc add ljmp add lcall fistpll jbe adc push inc in xor sub adc or jmp jmp (bad) int3 push sub js pop cmp aad cs push int and xor jge lock inc test outsl push xchg cltd mov xchg xor push adc into (bad) pop (bad) aad sub bound or and in mov cmpsb in push xor (bad) jmp cmpl leave aas pop fsub stos lds loope xchg mov push (bad) lods cmp dec push scas and mov loope je add mov sbb fimul dec cmp mov xor xchg out pop xor ror outsl (bad) adc test add xchg aam xor or dec mov mov jne leave inc cmp es xor stc ret inc cmc mov imulb fisubrl add idiv inc jb int dec inc pop cs mov mov mov pop inc sub popa dec jns imul sub js mov mov (bad) repz pop movl jl cmp or movsl mov sbbl dec cld loope dec cmp xchg inc sub sarl or ficompl std mov int xorl (bad) push into lret add jmp rorl sahf cli daa inc data16 mov fldt cmc pop andl imul ljmp mov inc sti cld scas loope xlat push sbb std jle enter les push xchg je test mov mov jo sub dec xor mov sbb jl xchg int test and push das push popa cmp mov inc pop mov push imul jl mov fsts aad mul stos movq arpl incb aam lea dec inc lods fld pop sbb nop cmc xchg lods mov xor sub stos std fiaddl fldcw adc push mov in test sti loopne add stos das test mov sub mov jge arpl lret (bad) mov (bad) pop mov push xchg jle in cmp mov int cmp mulb cmpb mov lds add mov dec push aas clc fidivrl (bad) xor jg adc popf fstpl loopne popf fcmovne lahf call sbb pop pop jns adcl mov lods aas mov dec xor (bad) (bad) mov mov es fist jnp ret ljmp ret movsb xchg lods in dec xchg xor push or setno push jb js sub add xchg outsb mov lret data16 test inc gs pop clc in pushf mov js lea mov out dec add sbb repz inc jnp rcll xchg int aas jge outsb adc push mov (bad) lcall sahf in rcll push dec icebp ja aaa inc mov or jo les add in jno inc pop (bad) into pusha (bad) mov (bad) mov outsl (bad) test and test jno sbb cmc cmp fsubrs pushf cmpsl aaa push jb xchg adc sarb cmp loop pop fdivrs pop fcompl push push push ja cmpsb movsb flds push leave js hlt sub jp scas (bad) adc or cmp subb xchg stos jae fld rcll pop cmp mov into pushf in imul pop xor fmull lea push sbb sbb (bad) dec test pusha jns lds outsb mov arpl push jo lods inc sbbl ljmp int3 (bad) sbb leave dec loop pop add and adc pop add dec jbe xchg scas (bad) sub bound sub dec hlt js sub xor mov sbb xchg out mov das icebp das inc sahf or imul mov dec add clc inc cmp cltd ret mov add (bad) jb pop es cmp mov dec test (bad) lret or insb loop rorl inc in imul sbb inc pop jne mov adc scas xor (bad) popa addl lret cmpsb xor or and cltd ds stos jnp xchg in rolb sub sub push mov mov loop and push mov ljmp and sbb mov ds ljmp orb sbbb fisubrl ds ret add mov xor pop sub cld mov fs mov mov popf or es ljmp pop push (bad) outsb in dec inc xchg je sub loop push icebp mov jp add mov xchg (bad) aas das sub push mov movsl arpl pop jecxz jge stc and push enter mov dec scas mov sarb (bad) out pusha mov push xlat and outsb cmp fidivr ljmp xor cmp ficompl cmp xchg jae aaa out jg fistpl jbe jbe mov cmpl iret fdivrs test or in xor jge js mov mov aas jle and (bad) sbb adc mov jge rcll (bad) in push mov inc add in enter push mov shrb xor stc sub fstpt lods inc pop adc cmove aad sbb xchg lret mov aas jnp push (bad) ljmp and sub or xor test ja pop in repnz inc sub lods mov push sub popf (bad) sub add std fnstenv jg push test xchg aad divb push pushf xor push sbb scas outsb (bad) xor xor pop push out mov jg jb sub sbb fcomp loopne repnz push ljmp xchg fildll lds test add jb clc mov sub or test inc push movsb mov loopne xchg add inc pusha pop daa push dec nop pop fsubl dec mov iret jno lahf aad insl in dec js stos enter lret push aad int (bad) mov out leave and std xchg dec jb pop xchg enter ljmp pop cmpl stos (bad) xchg ds inc xchg cmp (bad) add arpl mov aaa adc repz or pop cwtl ss and ficomp aaa sbb int3 add pop xchg ss mov xchg imul lds outsb shll dec cs and push mov jg inc jg mov sub jb (bad) cmc test movsb ffreep test dec outsl shrb push outsb adc outsb ljmp cmp ljmp dec sbb mov fcmovu adc mov cmp loop mov jl sti sbb in sbb inc pop cmc mov ds lret push xchg daa into test jecxz dec sub repnz add adc popf out xchg outsl ss or cmp mov dec inc mov xchg lcall test subl pop fcom jl test jle lahf mov or xchg adc movsb insb lcall test (bad) mov (bad) push dec lcall or mov cwtl es nop mov inc mov loope dec call push adc (bad) jle test sub imul add insb inc jne stos outsb jnp adc into roll icebp add daa push mov sarb xchg enter xchg adc movsb inc xor xlat adc mov cld stos or lret xlat fidiv repz push jns or mov and cmp lea cmc (bad) mov cmpsl std pop movsb and cmp outsl outsl in fcoml loop fsubs or cmpsb jnp orb mov and insl sbb mov and movsl (bad) call inc jmp pushw aad mov jns out mov fwait sub ljmp mov (bad) repz or push dec cmc test pop pop sub jo leave xchg stc mov mov ds and fsts add in pop inc cmp jns add fxam xor mov mov xor (bad) sbb ficompl pop xorl (bad) mov iret xchg loope ss call mov xchg roll pop (bad) jnp,pn cltd cmp (bad) cmp push mov dec and ja ljmp imul dec pop dec sbbl test and inc add cmpsl mov ljmp jnp push leave nop mov inc das cmpsb adc fstps mov sub outsl in cwtl lret and cmpsl (bad) shll add sub test flds xchg in xchg aam mov jbe sbb lods mov sbb mov das fldcw mov mov jns or scas leave inc (bad) cmp xchg fldenv (bad) in loopne xchg ror cmc aas push jbe lcall les xchg sub mov xor decb dec pop data16 and add xlat adc mov (bad) jmp jno mov sbb add cwtl inc pop in rorl movsb cmpsl into cmp data16 jae cli sub lret sbb lret adc xchg mov iret xchg and addr16 mov jb loope insb dec jmp movsl xchg adc lea (bad) xlat enter enter xchg or scas inc stos out stos int3 dec inc ret pop iret dec mov jecxz out sub jmp mov push jl stc xchg push repnz sahf jp xchg push pusha or jle xchg (bad) fisttpl out ficoml or sub test test pop dec rep out dec pop out cltd add sub hlt mov test dec pop idivl add int cmc ret push lods xchg adc leave pop not mov pop sub mov push decb push cmpl mov jmp ret loopne out hlt lea lret mov ret jmp lret dec int cmc fmuls jnp arpl inc imul xor mov adc ss aad and fimull lret cld jle fsub sti mov xlat lret into push cltd pop push test cmpsl jmp cmp jnp test mov fadd mov lods leave psubsw inc sub mov ljmp or popf sarl fs cltd fcmovbe imul mov sub jae stc std jp dec push inc add mov mov mov lods dec popa mov sahf lods into and mov xchg sahf aam add inc cmc inc test enter jp scas inc push pop insb add test insl icebp pop lret jecxz lret push out lods aas outsb cmp or or scas outsb sub orb mov subl les sbbl enter add push sti ret nop les loopne adc rorb xchg sbb insb lret mov sbb or js xor leave jg cltd add and jle adc loope mov movsb cltd and sub movsl pop (bad) imul push and mov sbb mov xchg mov ja movsl (bad) jl jg fisttpll and xlat fisttp test lret xor ret mov sbb movsb subb sbb mov fnstenv jns leave jl push ja jl mov stc cwtl ss add push cmpb cmp add xor xchg test stos cmpsb hlt enter pop cmpsb dec jno hlt push iret dec sub dec movsl push dec scas and xor insl (bad) and repz fidivr add pop cmpsl mov inc flds mov xchg jp sbb je sub enter sub ljmp movsb pop cld pusha icebp mov icebp fcmovne push or push jns mov mov hlt fsts add icebp jno insl adc cmp xlat adc xor mov (bad) pop and (bad) enter aad mov cmpsl jmp pop stos repnz (bad) fndisi(8087 movsl stos test xchg jecxz push into sbb add (bad) negb xchg inc xchg subb int3 movsl into jnp adc mov sbb movsl mov mov in xor iret pop lahf push adc cmpb je mov jl js sahf jne fstl aam push adc test clc mov cmp (bad) (bad) pause outsb jbe cwtl (bad) int3 cmp sarb adc std popf mov pop out mov push mov mov das test pop pop push cmpsl test cmp mov lock jns push sbbl dec jl out inc cmp sahf cmc clc push pop push bound or shl push add dec jecxz mov popf sbb enter pop cld repnz es jle jo into jns sti scas in push pop gs sbb dec sub jne fldcw pop imul out pop cli out or push (bad) and out js push mov das (bad) shll cld jno rol xchg (bad) js adc cld fcoms mov mov into mov sub adc lcall add jg repz jl stos cld (bad) popf (bad) lods ret std sti in mov sbb enter into sub sub lods and (bad) fstl sti outsl out out cld movsb cmp lock in lock sti sbb loopne lcall fs add rcll lret repnz in lret out loop jnp lds and jno add jns fidivl outsl pusha (bad) sbb (bad) cmp insl and xchg in sub aad add pop lods insl mov lock or mov out loop push scas jo add loop in mov daa dec and inc js (bad) cltd rolb and into test imul push jno insb and xor jle int mov shll pop add pop es mov lock mulb repnz cltd dec pop ja push mov mov jmp js shl rorl mov dec sub adc xor sub scas loop cmp sbb lock mov insb clc adc mov outsl mov xor cmp rcll (bad) hlt cltd adc call cltd pop jmp or dec (bad) test insl mul lcall or ljmp push insl lods aad lahf and cmp cs jae scas mov lea jle pusha pop sbb and int3 cld repnz gs dec jmp add leave and inc dec (bad) (bad) mov leave ficomp mov test jb and (bad) cli jae int3 mov and add scas in dec (bad) xor jle mov lods cmpsl inc xchg insl add enter adc adc scas sbbl outsl mov cmp lcall stos adc push jnp mov lahf xor test or nop pusha adc fldt sub jo jnp call cli shrb sbb jg cmp xchg shlb pusha mov rcrl lods bnd xor jg in loopne flds mov adc add dec lret mov testl push and xorl xor scas lods mov add push mov push lcall ret dec popf incl ret mov scas test inc xlat lds pop fimul fs mov and cld adc ds and sub imul dec mov sub (bad) and inc sub mov mov cmpsl sbb aaa adc add bnd mov jae clc jecxz loop dec lods iret xor xlat out dec mov test js rcrb rolb adc mov mov fs call dec mov pop and and das mov shrl ds dec rcl cmc push jns gs in dec and cltd shll pop cmp xor enter push or mov pop rcll mov push mov mov sbb imul push hlt arpl into fdivrs nop pop xchg insl sub add sub push mov movl call in and cmp sbb icebp and mov jle or push lods mov xchg xchg jge sbb pushf cli inc dec imul inc scas mov xchg jno pop sbb mov or pop sub dec lea mov push xor and inc jno lods or push jno jb mov push iret in loop jb or addr16 push sub pushf xor mov xor adc push fwait sub lcall fcmovnbe xchg jle (bad) pop push test int3 lods inc in pop or dec pop jle xchg xor push add push roll sbb pop sbb es jge popa xor and add mov or std jl int3 or pop std jecxz popf cli adc in pop decl push lret push int lock xor test push ljmp or pop icebp addr16 xor dec cmp movsl repnz inc imul sbb inc lahf out outsl sub and (bad) out push lcall lret aad push aad (bad) in inc cmpsl jmp (bad) pop mov out loope into dec clc sbb (bad) cltd sahf inc mov mov xchg sbb push and out sbbb cmp flds mov leave fcomps cmp inc dec cmp jae push faddp mov scas mov pop mov scas cmpsl std inc dec cmpsl outsb xchg (bad) cmp add mov js pop fisubrl pop (bad) xor xchg popf pop mov push add dec dec dec lea adc ret fildll cld pop cmc enter test add cwtl jmp jne ja fldcw out into and and mulb xchg inc dec mov dec mov dec fcmovnu pop xchg sbb mov dec mov mov push push loopne fwait dec dec imul out mov mov add mov ljmp ret cmovo scas into clc loopne or daa imull fdivrl scas fmul lret aaa jle rclb mov or and push jb cmovo xchg mov ss jbe xor sbb jns cmc insl cld test and in xor (bad) sbb ss nop (bad) call sbb mov inc addr16 cmp fcomps pop (bad) mov inc or clc lds movsb movsb roll cs mov lret iret in mov arpl push pop cmp pop cmp insl add movlps push pushf test xor add or (bad) sbb add adc shll or sbb xchg (bad) int3 or in cmp (bad) movsl and clc dec dec je add lret dec dec mov inc sbb loope (bad) mov andb stos mov insl jecxz idivl mov sbb adcb divl pop stc inc imul js mov mov dec xor icebp xchg cmp mov popa out and (bad) faddl xchg out sbb pop ret jb fisubrl mov xlat out hlt push ficomp leave aam idivb adc fbld popa jg enter (bad) movsb dec cld cmp add cmp les inc test mov loope cld push inc cmp jnp push out adc push mov mov adc imul cltd fist dec fcoml push cmp dec sub and mov sbb pop inc fmull (bad) fildll jecxz dec aam lods cmp cmp out sbb cmp movsb add out daa cwtl icebp test je mov test (bad) ss stos pop mov adc imul xor rolb sbb cltd subl or out (bad) xlat add das loop call imul and jae sti and loop mov sbb lds sub fnstenv fnstsw cli mov xor inc mov mov out cmpsb mov jo push fist mov cwtl (bad) xchg cmp in test imul shll in fcoms xor cmp (bad) sahf je pusha (bad) xor lds (bad) dec xchg repnz push shlb insb stc xchg inc mov mov xchg dec test movsl jne xor repz mov lcall fildl mov inc adc data16 addr16 cmp pop xchg stos push clc ret fldenv add stos enter lea mov ret dec dec lcall out dec push daa pop test mov hlt rorb out enter dec mov daa es sbb cmp loopne pusha divl int mov mov xchg jecxz jne push aaa sbb pop xchg idiv pusha in into cltd in mov je loop jb outsb pusha movsl cwtl cmp jg sbb mov dec popf pop (bad) jl add jge iret mov shll xchg sbb js in xchg cmpsl ja loope sub in ds sbb adc daa movsl dec lock xchg in popf movsl sbb mov jl movsb subl jbe mov xchg mov cmpsb sahf adc outsb ja arpl xchg or insb xchg cmpsb cmpsl jb push (bad) (bad) je jg arpl test cmp js push out cli add xchg test dec and shlb xchg or rclb addr16 in push aad test pop push inc frstor insl push lret inc adc (bad) mov dec inc push sbb jbe cli push lret add fisttp add push push flds roll aam dec js fwait cmp ret out (bad) ja lods push cwtl dec lods mull sub aad lods mov xor cmc sarb and stos mov ret je sahf into aas stos leave cwtl add incl cmp (bad) and add push mov in cmc addr16 cmp xchg pusha xchg push stos test cmpsl in sub pop clc insl adc xchg push out ja push push pop jge imul subl inc ja pop and pop fprem1 out (bad) push jl or test xchg fs (bad) mov (bad) adc dec fdivs cmp push std jge pop sub rcll sarb cmp nop lea enter and pop (bad) jbe in mov pop das sub iret insb dec das jle mov stc call repnz (bad) lock xchg popf aaa enter gs pop ss idivl cmovge jp (bad) daa inc test mov loop into jns mov push pop mov push repnz cmp data16 loop movsl mov sub xor mov dec ljmp cmp lock or ror arpl popf ret jg inc cmp or in mov xchg cmc loope mov aad mov (bad) fs clc xchg in repnz jp ss ss sbb aas rorl cmp scas pop lods lret xchg mov cmp addl fs sub movsl cmp sbb add cli pop (bad) out mov or fist gs sub mov sti sahf xor fidivl mov call ljmp xor or lock es nop sbb sbb xchg movsb and xchg xor jge jle or cwtl xlat xlat fidivl mov rorl into bound mov fimul jne pop mov xlat lahf add in jecxz jbe adc movsb xchg clc outsb (bad) icebp mov mov test cmp dec cmp shlb inc mov sub movb jo vpcmpgtb insl fidivr sub xor jle bound stos dec lea jg or dec leave adc push lock inc jbe cmp cwtl dec mov sub std dec xchg jg lahf into xchg jns xor out mov sbb test bound ja sarb sbb in loop sbb cmp push adc adc inc movsl cmp sub leave arpl inc inc push dec mov pop inc mov adc aam sbb push cwtl cmp lds cmp jnp xor inc rorb push rcr jp (bad) pop pushf (bad) das adc lock popf pop shr std mov call test inc or in sub and xchg sub inc push add dec jecxz fldt pop mov test lods fdivrs aad clc and pop xor fstpl inc mov and add fs mov les xor inc add push es xor in mov xlat sbb dec mov lret testl outsl scas lea fiaddl jbe xchg bound ffree mov lret in fcomps xchg fdivs dec inc in (bad) (bad) jge inc push mov inc push mov sbb test mov movsb outsb popf hlt insb mov (bad) repz adc xor das int daa sub xor xlat sahf outsl inc mov inc je je cmp xor outsl xchg pop inc jae add (bad) or insl jle and push negl dec in sarb lods and add pusha cltd mov fwait lret int in ficompl mov insl sbb imul aas pop nop movl sub imul and lahf jl xor fwait cmp pop jne cmc xchg out add sarb out push rorl out lret lret cwtl int into fldl2t inc jmp adc fisttpll outsb adc sub or mov adc popf or test adc xor pop or lods flds ficoml sub (bad) mov ret fdivr inc mov adc iret xor data16 pop lcall jp in mov ret add dec mov lcall mov aad adc sub mov in fxch cmp (bad) jo lret push sub mov lods rcl push jnp clc push mov aas ljmp inc and sub xlat adc popf insl in ja rcrl jae pop (bad) je popf setne shll repz movsb adcb xor fdivl dec loop jle mov cmp lcall sub (bad) jg pcmpgtw (bad) dec mov or inc adc pop add out aam test je inc cld dec mov enter ss cmp lds in mov pop movsl popf mov int3 aas test push sti mov mov scas jecxz sbb arpl add lods cmpl fmulp imul pop pop jne xchg aaa test cwtl repnz mov cwtl xchg mov adc sahf sarb sbb dec lods in adc mov dec inc push dec ljmp sahf cmp add adc add xor xchg mov test roll adc sbb mov xchg push mov (bad) pop xchg adc add popa pushf lds push loop notb mov mov lcall aam xchg lods cmp xor mov data16 in adc xor mov inc xor push mov aas pop (bad) mov xchg mov jb or xor (bad) mov add fcompl lock call data16 lds mov inc int sub lods or insl jnp ds scas idivl dec inc cmp push (bad) inc push pop call xchg test ret pop cmpsb insl dec aaa xor xchg cmc lock cmp cmp in lea scas mov jmp xchg not inc inc add jno imul mov mov iret jp fcoms outsb dec les and xor call (bad) jns movl mov push adc mov fs (bad) fldenv xor cmp data16 bnd pop inc comiss std psllq int3 (bad) icebp shr mul cmp xor iret push push inc jbe dec lea xchg fnop sub push adc sub mov push or loopne add pop push gs aad inc stos ret daa addr16 pop rcrb inc xchg outsb and push add jle test repnz inc xchg add stos sub movsl jnp xchg and xchg pop mov cs in out (bad) lock cmc popa fs pop jmp out outsb ds mov clc orl dec ja pop icebp adc out lods insl jmp xchg push loope jbe stos jns ds mov and pop and jnp mov mov jo jge mov fwait or sub js push inc dec adc imul dec mov imul mov jo fsubrp popf mov lret bound into mov inc sub (bad) sub pop dec mov mov inc popa and outsl sarb mov xchg adc sahf sub mov xor and hlt mov call mov leave push mov jp fdecstp mov adc icebp xor fptan into jnp xchg cmp push sbb jne pop xor or adcl lods gs shrb pop dec add test ljmp mov xor (bad) lret bound popl subl not push push cmp jae or mov mov arpl xor popf das cmp xchg fisubl push loope dec movsb mov xchg sub int3 or jle test mov (bad) (bad) bound jns mov popf push mov dec and out pop xchg mov data16 cmp mov cmp mov out (bad) inc cmp mov addr16 iret cwtl xchg sbb mov cmpl add sahf inc xor adc xchg xchg inc repz or dec jne aas cmc clc je ds sub (bad) cltd clc mov out and xchg cmc lret mov sbb adc sub in (bad) push out adc fwait fs int3 frstor fs cmp fisubr (bad) mov and mov cwtl inc into mov inc sub aad and add fidivrl cwtl and (bad) mov add mov add pop xlat push jle cmp (bad) (bad) lock dec xor push jp shl test cmc les insl push xchg inc fisubl gs cmp add adc mov mov lahf pop sbb mov sub jns mov sub xchg xchg add ds cmpsl cmpsl add lods inc (bad) (bad) out loope daa out jecxz das lea or adc xchg or lahf push add movsb out out and mov sub mov jne sbb mov sbb ja fsubr pushf popa or xchg iret test je pop mov aas lret js sbbb jbe xor sbb lcall add test inc mov xlat jbe jmp subl ds mov ljmp js push imul jmp adc xlat sbb scas add adc xchg je aaa test and cmpsl cmp ja pop sti push or cmpsb loope movsb mov fiaddl into inc pop mov mov sbb shrl xor dec jns inc mov bound repnz leave fwait sbb mov aaa hlt push icebp das sbb les addr16 mov iret jbe push and mov insl cvtdq2ps in sub pop inc dec xchg ret fdivl je xchg mov cwtl insb stc mov addr16 jbe add and stos out and lret leave mov cmc adc out add lcall mov ljmp xlat jmp and pop movsb sahf paddd jp sub push jo mov in inc and das loope clc mov (bad) mov pop (bad) push out pop movsl jcxz pop out push out popf clc xor test jecxz dec movsl dec gs pop pushf dec je scas into jmp sub loopne sbbl or lcall ret pop arpl sarb (bad) (bad) push out out dec or loopne cltd add (bad) or add (bad) scas jns iret (bad) in push loope xchg xchg or mov inc push mov cmp lcall fistl and inc lds in or iret adcb jecxz add inc cmc daa push test or adc xlat jne ljmp xchg and cs adc dec (bad) lea xor sahf or pop lods ja lock fstpt data16 rolb push lods mov and inc adc xor popf test xor push leave outsl mov rcll pop dec jl rorl cmp ja out inc inc test in sub lods out dec mov outsb fwait int xchg sub xor add out je sub lea aam xchg cmp popa ficom jnp and add cmc push cmpsl mov sbb add xchg sub out faddl add lahf cmp or xchg push lea test fcomp fstl push lcall cmp pop mov push loope fwait jl mov sbb out xor mov movsl (bad) int3 sahf mov inc pop mov xor inc lods jl push jo pop ss not pop and iret add aaa movsb cltd scas jecxz pop add popa push sbb call xor push push inc enter mov xor mov xlat pop add and adc sti mov mov mov mov loopew sbb adc aad loop imul clc mov xor shrb jne sub xchg add inc mov mulb (bad) cmc test jo cmp outsb out test xchg aas fnstsw adc and into mov pop je xlat mov xor push adc test test int3 jp or mov mov jae pop aad lods fidivrl xor adc repnz cmpsb sub hlt ret fdivs (bad) cmp outsb lea in mov jle adc fcmovnbe ds aas sti out push push xor icebp (bad) aaa dec and and push adc movsb es push pop (bad) int3 pop add xchg cmp loope and ljmp (bad) push pop add cmp xchg inc rolb mov inc mov lods sub lahf push jb cmp clc iret js pusha and jae xchg subl jl or push adc mov or aas inc test lock insl pop cmp out popf add and cmp cli sub push adc jle add cmpsb pusha addr16 lret (bad) mull or into xor push mov mov dec cmpsl (bad) (bad) and out dec and fs adc sub mov loopne add inc ljmp and rcl pop mov mov mov testb push out rcrb call mov dec movsb push mov fwait push dec pop inc push movsb mov adc iret xor in std cmp bound in in repnz jg jmp push jb lahf in and jne jge clc push (bad) xor in gs add aam mov push cltd mov sub xchg stos sub (bad) scas sbb mov (bad) push xor mov fisttpll fsubrl xor lcall out cmp mov inc inc std xor dec xor pop aaa out not rol xchg insl and add jb mov cwtl mov dec sub repz jg inc sub wbinvd pop imul add mov into push sub mov inc push mov push sub insl mov dec fdivl mov (bad) mov mov sbb sub pop push insl push int add mov jl cwtl jmp xchg sarl fisttpl jmp push rclb xorl xchg scas sahf xor aam pop pop push push mov (bad) mov out movsb sbb cli js addr16 sbb mov fwait outsb mov jmp fsubl insl loope inc fldl sahf (bad) mov loopne lcall mov fnsave and push push fmull inc sbbl clc aas test push icebp ljmp frstor cmp xor test push jg dec sub stos das jns and mov in (bad) push cs loopne push clc pop pop cmc adc cmp mov test subl xchg nop out xchg sub imul push icebp push mov insb xor cmc pop int3 pop mov iret sub push pop out scas and and pusha sbb jo mov imul incb sub or fadd (bad) int3 into cmc adc xchg dec es and in outsb fisubrl lret cmpsl jns sub mov inc inc xchg mov pop jl jmp clc out lcall (bad) xchg pop sbb cmp mov cwtl fcmovu insb dec adc cmp das ficompl fsubl aad insl adc jns lock sub insb negl sub jle (bad) or loopne ljmp rorl sub fstpt out mov es push (bad) ficomp in fildll mov push mov jecxz sub xchg jnp and adc add fnstsw jne mov xor dec and or (bad) pushf mov cmp (bad) sub aaa push inc push mov popf mov adc aad xchg dec xchg je jle fistp in int3 adc adc jae pusha mov cwtl inc mov into add dec xchg lods lds adc inc rorl in test shlb mov out gs or dec push and jno mov jp dec cs imul ss cli or test test mov hlt sti inc xchg fidivr xor fbld cmc cmpsl push out mov mov out stc push jne add mov push test dec sahf cmpsb in inc into xor xor shrl dec pop or mov ss scas (bad) sarl push pop xchg inc data16 mov push and inc (bad) std clc mov js lret cmp imulb mov pop push dec jmp (bad) cld mov into cmc rcrb ja sbb loopne dec popa andl adc (bad) lcall fist sub int3 fisub xchg out lcall sbb mov add push pop push lcall fs faddl push dec sahf adc jnp jns aaa cmp lock pushf mov xor insl jmp jecxz xrelease mov push es mov fs sbb xor and mov repnz (bad) repnz mov xor add scas (bad) jnp pop test add push stc les dec mov dec dec leave xor arpl dec pop xor xchg and repz cwtl roll jo adc adc mov orl add in dec sarb sub shlb nop (bad) xor pushf loop pop fistp out sti mov push mov jno call ds jb lret cld rorl mov rclb jnp (bad) bound and andl popa fdivs jecxz mov mov jnp cmpsl and xchg pop jle mov or xchg inc xchg repnz mov add sbb push inc sub nop jmp xor or inc xchg jae lea inc aad data16 rolb mov fadd mov shlb in shrb movb scas xlat lea pop gs jmp jl in arpl aad pusha insl fcomp mov pop in daa insl fcomps vcvtdq2ps test mov xchg xchg jmp jl in nop popa dec jb dec insl popf aam cwtl xchg in clc sar xchg imul push adcl jl xlat or mov jl in xchg in cmp lods cs mov stos sahf movsb add lods cmp unpckhps or mov jbe fdivrl lret jecxz fs call jecxz outsb (bad) ja cmp push jo addr16 mov inc xchg and (bad) and xchg sti or mov aam movsb jnp pop loop lahf sti adcb sub adc mov mov and bound sbbb dec loop xlat xchg jns pushf repz sub insb rclb pop adc loop mov adc (bad) movsb jno sbb lea iret ret pop cmp mov stos sbb (bad) sbb dec hlt pop jnp fs mov (bad) xlat adc (bad) mov into icebp mov xchg jecxz inc es (bad) mov ret fnstenv inc adc (bad) pop test fcomp daa insb shrb loope jbe sub jecxz add mov xchg sti mov dec push dec and faddl test sahf dec push jo xor fdivrl sahf sti adcl mov xlat dec dec jnp mov jnp pusha cmp or add jmp out inc cmp lods mov dec das adc jbe fcoms jnp pushf dec cmc mov or jg and xchg scas xchg jmp add sbb push push popa jecxz rep mov fcompl pop sbb jmp add paddusb rorl push dec cwtl pushf jmp popf nop dec dec fcompl jmp repz lds insl test loopne idivl fimul loope adc sbb faddl sti enter or enter fsubrl inc bsr xor aam mov adc dec mov add ret cltd pop push jb imulb in (bad) outsl (bad) clc (bad) arpl fisttpll xchg lret lret xchg lret add xchg lret push and pusha xchg lret adc cmp mov stc fnstsw push or aad push cmpsl aas cmp sub push jp stc je inc das dec add xchg pop cmpsb scas pop xchg pusha mov xor pop add ret mov in mull xor movsb arpl test cmp mov insl fimull push jl xor add dec bound inc lods mov mov add inc jns sub idiv jp push fwait aam les ljmp mov mov divb adc pop call sbb xchg jnp dec pop jo shrb (bad) pop xor cld jp fstps dec adc sahf arpl jg dec rclb (bad) push ret test adc arpl out fcomip dec pop mov jg enter mov les stos aad fisttpll mov push icebp clc add mov bound jg pop les or sbbl add mov mov rol repz rorb lahf jecxz lods or cmp jne rcll out adc shll inc mov jne xor inc addr16 movsl cmpsl sahf adc cmc or sub loopne cmp mov inc hlt jp aas mov test mov (bad) mov jg (bad) xchg xlat lods lahf or adc adc bound lock mov dec int repz loopne cmc test inc in js push push inc sub xor cmc (bad) cmp mov ja sbb mov divb mov cmp jo fcoml repz sti dec imul or lea and pushf fxtract sub mov into iret aam lahf cmc sub gs add and pushf dec pop adc stos jo sub lcall cmc in jns inc sub push int sub clc jle orl mov adc dec jb lcall cltd sub imul inc sbb sti inc les std sbbl shr pop push ret xchg push pushf mov ss push or mov movsl jp scas sub xorl (bad) fldt xlat sbbl leave sbb outsl test das mov xchg xchg roll sbb fs push jp xchg notb xor sub jo jecxz aam sbb imul out lcall fwait push pusha xchg pusha sbb icebp iret dec sbbl (bad) int call jmp movsl add jle xlat or (bad) cmc and lret loop sub sti sbb sub cmp xchg cli jnp lds clc aam test push or test sub cmp sbb jnp xor out cmp xchg pushf add push retw (bad) icebp hlt add and scas xor sub decl or loop lods push push fsubrl dec je lock or add (bad) outsb mov ret pop int3 mov cli sub das cs popa inc ljmp and xchg idivl mov push out test mov cltd fs sub inc icebp lret and pop push pop imul cmp cld jmp into sbb push mov mov enter insb (bad) insl sbb mov mov sbb sbb mov pop sbb setnp mov cmpsb xchg adc adc jns in jmp out or mov jns gs popa or rorb out repnz mov mov jb mov (bad) xor mov fstps mov bound (bad) (bad) popf cmp nop jl inc cmp imul insl arpl dec xchg cmp outsl ffreep push mov push imul stc dec hlt adc cld scas shll jmp das fildll test cltd ljmp xchg into aad repz jns test pop jno imul adcl mov in fldcw inc or jno cld jbe jecxz les cltd (bad) jbe mov es jo out in push fnsave out in lds jb repz stos inc push mov cmpsb fldcw mov mov mov test xor or fyl2x inc shl stc cmp push ja mov (bad) lcall out xor jge movsl cmp stc mov movsb sbb pop or dec add pop iret fidivr in push inc rcr fsub mov add inc cmp fadd sbbl pop sub enter cmpb cwtl sub lods les (bad) addr16 lds xchg xchg leave (bad) pop or sub int3 iret (bad) add ret mov pop stc (bad) push xchg jnp (bad) jns repz repnz pop pop jg sub jmp les mov cmp fwait test xchg fstpl mov mov cmp and or mov loope cld mov cltd jo sub adc push and ljmp pusha loop jg js imul lret lahf mov mov push jnp or popf ret mov stos imul fstps pop aad adc negl fstp push (bad) dec mov cmp insb (bad) rorb aam add pop add push mov cwtl mov xor lret push fnstcw sbb (bad) pusha xor inc jmp divb lret push lret imul mov push test lods imul in fiaddl xchg iret in popf fxch cld test rolb mov xor dec jle (bad) repz mov mov stos mov xadd sbb pop xchg sub or fistpll pop jns lods les ja into inc sbb jmp cmc cltd test mov sbb xchg leave dec sub and clc mov add out lods inc inc fsts dec jo mov loop scas pop in jnp pop test jno sar punpckhdq out ret inc sub pop jo call clc sbb aaa and in out std enter dec mov jne cwtl test (bad) into rcrb adc in dec or ret insl andb pop test ret daa jmp hlt pop mov loope dec movsl stc and cli or mov stc pop test add add (bad) jp pop mov mov pop and push push lahf scas add loopne movsl repnz add or addl scas and ja mov pop xor movb inc push adc scas pop mov dec xor shlb sti sbb push or ret mov xor and pusha fisubl popf scas dec and aad icebp (bad) mov sub push push xchg mov les or or jne cmp pop and (bad) or inc fucomip jmp repnz cmpsl sbb test jecxz jne testb or scas cmpsl push mov dec and scas or cmp frstor mov and cmp pop mov call sti mov inc popa sub data16 dec xor dec mov add repz fwait popa leave sbb in les insb aas stos in loopne xchg test fcoml adc xchg and sub push aam bound pop mov xor (bad) jmp cmp xchg lds inc das sub mov ret adc cli ja mov data16 dec scas cmpsl sbb (bad) sub mov test jae mov ja xlat sarl stc push xor xlat jle daa aam push movsb or sarl sbb out xchg inc dec push xchg fs daa xchg push (bad) in ss dec mov xor inc not mov outsl sbb sbb cmpsl add js hlt jecxz aaa fdivl xor cs sub inc rcll mov out pop data16 mov and add lret sub testl xchg pop pop mov repz arpl lods repz dec repnz xchg xorl test outsl cld xor or push or (bad) adc (bad) outsb in pop sub xchg jb vcvtss2sd outsl lcall or and cli jg lahf fidivr lea fldt das loope jae pop adc push ja mov mov push pushf jge (bad) movsb dec pop add fistp mov test imul mov mov sub fildll sbb dec fild rclb mov dec or cmc iret subb push cwtl push sbb stc sarl fldenv inc sbb test int3 insl leave push test dec ret cmp jecxz leave sarb lcall stos out xlat ret cwtl lds leave mov aas movsl (bad) mov (bad) scas mov out leave add lret mov pusha mov sub jmp push repz subl mov add sub cmp shl pop inc fld jp sbb shlb hlt xchg pusha xchg xchg stc leave mov cmpsb repnz aam int inc movsb jns lea imul inc stos adc in addb jbe shr rcll cwtl sub iret ret sbb mov mov lahf lret ja mov mov adc mov lret jo lods sub inc cli push push mov jmp sbb ljmp xchg sbb outsl les outsb ljmp or fcmovne xchg add sbb adc or popl mov inc sbb mov (bad) pop or or in push movb fucomi lcall in inc outsl mov jl lock or push dec sub sub mov ljmp cmpsb call pop cmp mov daa inc or push pop (bad) sti mov aas jnp jae adc call flds loopne sub mov sub cmp push stos xlat xor int pop mov (bad) and dec data16 sub fnstsw fild xchg cli add (bad) and roll or dec test xlat pop lea lret jmp std add cmp mov add shrb in pusha (bad) loope iret xor les movsb aam mov leave xchg inc sub xchg test adc push xor stos mov ja push mov lret shrl jp cmp outsb xchg movsl xchg fwait sub sub les inc and lcall pusha dec int adc pushf fxtract rorl jmp loopne rolb popf adc arpl call int3 cmpsl mov push sub jmp xchg fxch mov shrl lods (bad) sub movsl int3 add enter push push (bad) mov jecxz int push mov mov int3 ffreep in xchg sarl mov sub int3 dec mov ja out sbb jmp mov ficom js std dec int movsl or out sub out push or or add pop or test test sub sub int3 cld inc pop jg mov enter or or mov imul sub cmp dec stos jno xchg xchg pop test out push stos sbb or adc cmpsl cmpsl or aas sub mov dec xchg pusha icebp dec addl or push cli inc addl das aam bound add ja push and pop sahf mov sub ja jo mov rolb inc and int3 (bad) sti rclb movsl clc insb (bad) push (bad) fiadd pop dec outsl xchg mov les mov add mov fnop mov mov stos leave dec mov dec iret test andl test into stc add xchg mov lea mov rorl pop xchg mov cmp stc mov es int lds cltd mov iret sub mov bound inc lahf (bad) lock pop fsubrp fcomp xchg dec in sub mov call pop fsubrl lret add loope repz leave push (bad) aad mov jecxz rorl pop popf cltd pop pop pop pop loop dec lock in push or scas inc rorl leave cmp jecxz enter inc fucomip mov or std mov in cltd fwait mov mov xchg mov inc lret or sbb (bad) loope scas enter out jns iret popa icebp fldcw inc fstl rcr fldpi scas aam data16 jle outsb (bad) cltd jb push bound and inc lds xor sbb add xchg cmpsl and dec iret das icebp pop mov cli mov ret sbb and js aam les mov jae jmp scas mov lods dec lea jecxz dec popf lods or ret or or inc test rorl add popa fwait push and clc ljmp loope pushf leave add clc leave inc ja fld andl adc lea test dec std fist dec cmp and fiaddl rcrl mov jae lahf xor inc sar sub mov mov or xchg xor cmp jo xchg mov and and pop rcll movsb adc ficompl scas fidiv cmp sub pop jecxz popa mov popf sub adc inc shrb icebp dec add mov dec mov jecxz fcoml in mov scas mov mov lret cli (bad) add add in mov pop cmp mov (bad) jmp add out lcall (bad) and lcall jge mov daa and clc mov cmp and stos outsb push xchg or inc (bad) aad cld xlat enter push repnz pop add lea sldt mov push fisubrl sti push stos sahf fnstsw adc idiv sbb xor icebp lods std or rcrl (bad) in rorb jmp and and mov repnz xchg gs or xor xchg es mov mov fs push fsubrp jle fcmovnu (bad) sbb lea xchg stos jb mov dec rol mov push das xor in outsl dec aam incb push in xchg addr16 insb sbb outsb cmp test (bad) pop insl stos mov pusha arpl je jae jo outsb inc mov in sbb movsl out dec (bad) in cmp mov sti inc mov push loop movsl (bad) hlt scas ficomp adc (bad) dec adc test ret inc sub (bad) mov enter cmp pop dec or jo ret inc sbb cmp cmp mov sti mov xchg aad (bad) xchg xchg xchg clc pop push hlt adc hlt add sub mov ror jge pop cmp xor jmp test (bad) xor cmpl clc sub mov test sahf (bad) mov push ficompl (bad) mull aad out pop leave mov dec inc lret js xor fldt sahf mov movsl test fsubr ficoml mov out (bad) fsubs fdivl les out push into outsb cltd adc leave sbb lahf adc sbb int jb cld (bad) jmp sti in push into push cmp jno and in dec (bad) out xchg daa push roll pop test pop mov push andl ja shrb rol (bad) sarl and data16 mov cmc push mov int3 or pushf pushf mov leave ja arpl xchg mov lock es enter pop cmp sarb cmp lods push or stos adc outsb call scas jne sbb adc sub add adc (bad) sub mov stos mov aam aam sbb cmp jno ds and je enter pop rclb jl iret xlat cs ret push mov dec stos cmc rcr ja or adc dec dec ljmp xchg pop lods cmc fsubs shll pushf xchg sub les (bad) movsb xchg aam lahf mov pop ss fcoml adc add mov pusha ret in cmp repnz or add add or jp dec neg fdivl stc xlat push push les xor stos cli inc pop and push or inc and ja mov adc (bad) and mov push inc and xor leave mov stos sub cli jns (bad) xor subl pop mov xchg xchg inc ja mov aad out scas cmp stc test stos (bad) lret cld pusha fisttpl cld adc or enter cli xchg pop mov (bad) sbb cs xacquire daa add das add xor sub out cmpsb rcrb xlat dec cmp outsb aam jbe xor cwtl sbb dec mov sti jns fs add add push in xorl cmc scas jns xlat movsl scas leave (bad) popf pop in sbb push mov js mov adc inc push sub xor jp daa fsub and test jmp lds add jb mov jg orb mov loope loop fildl and call jns sub int in fildl repz push xchg jae mov pop adc adc jb mov mov jp add jl addr16 cmpsb out fwait or xchg (bad) (bad) movl mov jp adc xor loop shr movsb push orb adc xor adcb andb test jnp cmp fisubl daa adc aas push lcall (bad) adc push cld or adc daa or mov fldcw (bad) mov mov int call dec in jmp jge mov mov push das mov push sbb jl sbb sbb push jp in iret mov mov jnp movsb pop fwait add cmp aad mov add loopne inc push cltd sbb jb cld mov sahf lds mov (bad) or negb stos dec xor shlb mov popf mov andl xor gs dec jecxz ror lods int3 cmpsb and js in in add adc shl sbb add xor xchg idiv imul pop in in gs fild out aad mov push push (bad) mov loopne (bad) cmpsl or leave stos (bad) adc fwait into fnstenv pop dec scas jb fwait mov or cwtl ds pop xchg mov cs insb vmovsd adc push jb mov pop jecxz dec xor mov jp loope xor loope mov cltd mov add pop cmpsb imul inc xor insb sub xchg mov jae xor xchg loop cmp xor dec dec fistpll enter aad inc cmp inc into ret aas mov sub mov xor push sub xchg lret insl daa out pop cmp fcmove cld push stos iret adc iret cli adc insl mov sbb inc sti add mov mov cmpsl aam (bad) aam sub push jl aad negb sub sub int leave push mov lahf mov xchg je cmpl dec add add fisttpll mov int mov jns xor mov mov cmp xor and lods sub dec cmp jge arpl cli sub mov pop insb daa jne xorl (bad) fwait or sbbl cmp pop gs out cmpl mov pop mov into aaa and (bad) lret xchg in adc push sbb jle nop pop or aaa aam push jp ljmp cli ret mov sub adc ret lock and pop adc mov stc lods adc fxch lods lock mov and add or notl ret enter rol jns mov js xlat mov es cltd push or jo pop or mov jae dec pop mov jns sahf sbb fldenv cmp icebp aas pop or inc fistpll test ret mov (bad) pop fstps xchg repnz out pop in js leave jns loop adc loope je (bad) (bad) int adc aam jb enter gs sbb xor daa in ret test lds jmp imul mov sbb jl (bad) fmull jmp push jne dec jp mov std mov out aaa aad jb mov sar fcomps dec push cli lea jbe sti mov jp,pn xchg inc sub jmp xchg cmp imul stc mov (bad) loopne mov rcl mov out xor stos imul sbb pop and and fdivrl aad mov lret je dec push scas sub jle cltd pushf out scas dec and int3 jae das xlat xchg testl shl js daa fmul in push call adc bound and mov aaa rcrl xor inc or cmpsb xchg jp cld orb mov movsb pop sub loop xchg push es jge cmpsl lods scas cltd das cs push scas mov push sub popa insl mov mov add fdivp outsb adc imul pop jge ss negb fstl loopne lock jg cmp aas aaa leave inc xor mov aam push lock sub pushf js jb clc add adc xchg scas mov imul in call pop fmuls sahf xchg mov lret sbb add js hlt loop lds cmp in push mov pop inc and in clc cs lahf fwait cmpb mov std sub xor dec cmp incl mov addr16 ficompl aad jae mov mov aas fisttp and pop mov roll movsl push clc jo and test inc mov lods lahf mov push subl mov and fisttp mov bnd xchg imul icebp add jecxz lds mov mov lcall sub mov (bad) pop inc mov jne dec scas fnstenv imul das mov dec lcall and jle cmpsb xchg lret mov movzwl push sub jo mov pop xor pop pop mov loopne lret pop scas mov test dec jp mov cmpsl sub add stos int3 aas push imul mulb mov (bad) cmp enter xorps cmp stc (bad) mov mov js dec jle insw sbb lods in xor ret cwtl mov fdivrs stc xor adc and stc xor mov add jb lock js pop cwtl jns,pt and xchg mov sub push mov les stos loop jecxz iret jle (bad) je adcl stos inc rcrb lock ret loopne mov lcall push clc pop int3 mov movsb push stos iret pop push adc inc push mov inc int3 sub jmp into sub test mov rcr dec in sub jle adc push clc mov push jecxz call popa pop mov push test jp add repnz and inc mov lret cmp insb dec lods aad jb fstl in cmp aas cltd cmp lahf cmp lret test pop and lret sub cli dec xchg dec xchg loop movsl sbb mov popf jmp (bad) lret (bad) movsb jmp pop cmp pop imul mov cltd fimull scas push pushf adcl sub adc cmpsl stos inc sub mov mov inc mov jae mov loope sti aad push (bad) jb xchg mov into pop inc jle stos shrb push outsb mov pop inc adc fistl or inc add sbb notl mov loope mov outsb inc mov (bad) push or aad pop das inc mov addr16 dec mov jmp push sub (bad) in (bad) out addr16 push call sti inc or mov decb mov jae pop and push jnp xchg in jl jecxz scas mov cmp mulb loop xchg ret mov in (bad) repnz daa shll out sub fldenv jno das sbb les add clc jge and xchg cwtl fstpt pop (bad) adc popf popf dec push or push xchg cmp lret mov push adc xchg es jae cmp pop data16 es adc addr16 mov test in testl sarl mov aas dec mov xchg push add loop inc test jg mov lret ffreep push inc cmp jns sahf ljmp and dec inc mov jnp imul (bad) and sub xchg in decb push mov or inc pop mov mov mov mov lds mov stc xor jle push push clc add ret cmp mov dec mov dec jp mov ret inc or cld rdmsr test cmc sahf gs dec cwtl mov cmp sarb out out xor mov cmp (bad) daa and loop clc push jl scas dec add add fiaddl ja cmp sti js cmp mov push adc fidivl test adc sbb push jl jl mul cmpsb mov test ds fcmovne cmpl mov pusha frstor pop add and add scas push lea das std rcrb inc push pop insl clc cmp add movsb iret dec push or scas dec loop ror imulb sub cmp outsb in adc daa adc lock sub push push dec sbb or mov pop dec push dec sahf mov test mov mov inc push cltd call mov enter cld push cmp gs outsb popa lahf sbb fwait xor xlat call fmuls mov push decb xor mov aad int3 push sahf xchg xchg push jb mov jb (bad) pop sti sub cs pushf dec ja rcrl jne inc stc mov movb int3 dec lods dec push pop lret imul add cmp xor jmp or jmp mov push sub mov jb shr adc stc subl pop je pop leave cmpsl dec icebp pop mov adc mov mov xchg mov mov (bad) nop les (bad) push add gs mov mov dec outsb pop mov fldl andl pop scas loope cmpsl iret sub pushl push icebp dec fsin out sbb rclb add mov lock pop dec xchg inc lods pop add mov mov pop inc add jo sub mov or sub inc cmp inc lds inc mov push insl mov sti sub daa adc jp pop enter clc jge xor pop xchg stos inc add imul pop test loope sbb adc stc and and in (bad) outsb sub cmp mov pop adc add add or adc pop jp cs sub fpatan mov cmp pop in gs outsl into and xchg mulb leave mov fldenv jnp sub nop fs push mov sbb aam cmp test ret (bad) sub dec (bad) inc cltd popa cmp and in (bad) outsb sti add mov leave push subl sbb out add shrl int3 push sarl or movsl jns push in fisubrl dec movswl std jno mov add iret (bad) jb inc icebp nop clc mov inc pop lods adcl jp aaa mov mov dec (bad) decl mov mov cmpsb xchg mov jge idiv xor in cmp (bad) lcall push outsl sbbb pop add lods add bound (bad) cmp (bad) (bad) mov jmp jo jecxz jp aas cli aad dec or jbe (bad) mov mov jnp pop mov lods pop fild aaa jnp xor mov movsl (bad) mov mov adc or int3 fist rcrb je mov mov mov and sarl fdivrs push xchg push jp incb int3 and pusha nop or icebp ret getsec iret adc mov repnz lahf fisttpl mov stc mov fldcw daa shrb xor mov or xchg cwtl push cmp (bad) sti rorb fisttpl sti pop sub inc and clc bound sti imul sahf insl and adc pop push push cmp push sub notb leave mov shr inc cltd adc popa aas mov mov daa cmc pop fdivp inc and hlt cs and adc (bad) xchg psraw in xor xchg push stos inc (bad) pop sub sub aaa jmp pop bound cli fildl imull adc lahf inc push (bad) xor jns adc bound xor sbb inc jbe mov xchg cld cmpsb or ja int das loopne mov imul xlat loope out sub addr16 pop scas bound mov mov (bad) aaa add loope push (bad) dec lahf pop das xchg in pop pushf adc aas jbe lock out push flds or movsl in inc adc mov xchg fidiv adc scas jb pop mov dec into mov sub jecxz rcll in je hlt cmp mov jle aaa sbb aad pop andb (bad) dec cmpsb (bad) mov mov int mov arpl jl and adcb popf into cltd (bad) jae xchg es lret ret aaa dec cld mov repz cmpsl fldcw enter adc leave cmpsl shl in aas iret shll loopne mov iret call fincstp scas fdecstp adc mov stc (bad) lahf (bad) jmp xchg (bad) push sbb sub int3 push mov jae mov test ret fnsave xor or push out movsl (bad) lcall pop daa sbb incb cltd cwtl mov lret je dec jns jmp inc js aam dec dec mov lods xchg loop adc xchg jmp jecxz clc push xchg sbb test imul popa (bad) leave ret mov dec mov sbb mov out xchg in mov ret mov inc mov nop inc xchg jb fcomps jno addr16 and out xlat dec insb push inc pop xor add rclb lcall pop imull mov hlt jmp jns aam dec pop lods movsl stos jg cltd sbb push push test mov sub lods shl imul and and pop mov mov (bad) outsl imul mov out lock std loop fcomp imul pop inc test inc addr16 (bad) and push sahf mov ret (bad) stos and jl repnz inc mulb scas jecxz je lret sbb sub aaa cmp mov jg and or xchg sti push dec or sarb dec stos out xor adc mov pusha outsl outsl in popf aam pop push adc add push lods repnz xor sbb add aam pop push pop stos out sbb xchg mov pop negb pusha mov mov push xchg into nop loop fxtract loop jns mov jne fiaddl (bad) (bad) jmp xorb sub (bad) dec incb pop pop pop popf mov pop mov jmp negb xchg xchg mov mov insb pushf (bad) lods sbb mov lea jae pop fldt addl out (bad) dec (bad) hlt lds dec mov jne leave gs movsb mov mov mov jnp call int pop dec cmc sub jp xchg lret data16 inc arpl fdivl dec dec mov daa push lcall and dec das in mov fild dec jg push inc shrb icebp stos pop jne dec jg stos std mov movsl lock dec lock sbb arpl adc and adc test in mov pop and stc pop push shlb mov repnz adc fsubs sub inc sbb pusha ret jl fldl movsb adc clc lock test push test add adc loope jnp jl and loop call hlt jno inc arpl bound sbbb ret and jns pop aam aam dec fwait cmpsb fsts cltd imul leave jb cmc mov int3 into call orl adc cli mov in stos push mov dec (bad) fcomip loop lods pushw (bad) mov stos mov xchg inc pushf push inc xchg in rcr push xchg lret mov jbe dec lret jne rep into push jo nop push mov sahf pop cltd repz xlat xchg repnz out in stc pop push mov js pop sub and sub xchg loope ja mov inc popf pop xor dec popf or xchg jmp push jae das mov loope push push popf out add or int3 sub add (bad) mov ja sahf lcall out push negb jl testl xchg xor add scas aam movsb cmc jo (bad) sbb jmp repnz mov xchg repnz cmp jl out imul mov insb aad mov stc jmp and add sub and addr16 and sbb das sub enter pop std mov mov movsl pop xor lods push (bad) data16 (bad) and aas jns clc and mov out fisubl test pusha rol in sbb sub mov push rorb inc dec sti rcrl jecxz mov aam or add mov pop scas jno mul dec push (bad) or call jge add mov or add movsl popa jmp mov dec pop notb and mov push aam shll jo pop mov test xchg inc dec gs jmp and push ret stos sub data16 add cli pop imul das call cli fadd sbb xchg ficompl cwtl js push pusha enter lods inc lret add lods leave cmp ret mov leave iret pop leave shr xlat push dec mov inc stc pop inc mov add dec sub mov out stos pop lock fdivs push and dec mov cmpb scas outsl cli insb cli xchg pop mov imul xchg mov leave xchg ror test pop and push mov pop shlb and gs xchg push or dec repnz push add test dec lock fadds and test in pop mov imul sub enter add or jp lret lahf inc fwait pop jnp test mov xlat fistpl inc rorb test lds jns lret push lds iret sbb sti iret sbb jns imul inc cltd enter or fmul cmp sub (bad) xchg xor xchg stc push dec pop (bad) ja dec test mov cmc adc push mov out pop add clc jle xchg or test or out jp xchg xchg in stc dec cld dec fwait outsl mov lods rolb xor ror andb bound cwtl sub pop (bad) iret iret or fcos les lds icebp lret jl inc add or cmp rol push mov fimull in mov push push sub lret popf pop sbb cwtl loope fild sbb mov cltd insb and cwtl push pop push pop (bad) pop push sub inc cmp sbbl ret clc xchg sub jb shll (bad) fiadd mov push mov inc or enter (bad) adc mov cmp pop dec add imul jbe movsb jmp fdivs out mov xlat dec mov in jns cs adc xchg test push jp cmpsb mov (bad) push shll imul push push out stc rclb das mov jmp stos push rorb (bad) xchg (bad) mov lock jmp fiadd loop outsl cs and cmp lret sub xchg aam pop xchg sub mov add push dec (bad) jb dec inc data16 shll cmpsb cs out push leave loopne jmp lods adc jae out enter pop je cmpsb dec lret cmp pop (bad) xor idivb jmp rolb jno (bad) out mov jp in push repz outsb fstp (bad) ja fldt in hlt adc jo jno out aas dec cmp inc adc dec fistl dec cs repz mov push sub xchg sbb xchg cltd cmpsb jno fs xchg and push sub hlt or push sti xor dec and cmp cld push jge movl sub mov sbb jl xchg xchg dec sub movsb sbb add cmp jge pop add mov sbb nop aad test push lock sub scas dec push or sbb lret push push push jecxz fstl cmpsb in repz mov in lret cmp and int3 ds mov push in push repz daa sbb mov push inc loope xchg sub mov jno (bad) mov jns xor aaa ret loope xchg push test mov mov into inc or scas int cmpsl out and je cmpsl js fwait das mov lods aaa inc cmp cmp data16 adc stc stc dec mov xchg out imul mov cmp ret xor les push shll roll aad call cmp push rorb inc pop push cmp jg cmpsb frstor inc fwait mov pop loope hlt cmp jno xchg lcall cmp xor jecxz sahf cmp test cmp xlat sbb mov fsubl subl je xchg inc mov fistl loopne in int mov rorl mov inc add fs ds inc xchg or xchg rolb ljmp lds adc cwtl pushf data16 pop xor push in push loopne mov fisttp fiadd jge test jp movsl jl (bad) cmp rorb mov dec imul mov mov pop adc mov (bad) lock not dec mov adc jl rcll cmp in rcll cmp push add shrl jg xchg xlat mov mov inc jno mov out scas inc sub push or outsl push sub test pop push das into movsb in dec mov or stos cltd repnz cmpl in aaa push rorl (bad) mov sub mov cmp cmp iret jno sub xchg clc in dec int jmp flds xchg (bad) jns das or ds push in addr16 test or mov sti sbb lds adc aam cmpsl mov insb clc add inc std jns (bad) loope (bad) icebp imul inc cmc jmp push mov (bad) push ret icebp push add add add fwait dec outsb mov rol mov push pop data16 mov pop scas add cmp dec imul xchg xchg data16 xlat push dec pop lods sbb jae cmp and xchg sbb jp in pushf sbb inc aad xchg cltd inc clc iret push push xchg jecxz mov jbe std fcompl dec ds xor outsb jmp jae out or jb jmp mov pushf inc arpl call inc mov icebp mov iret xor and push ds in mov mov test jle adc out push jae inc cs xor dec shll lret sub aaa dec jge push xchg shrl sbb push int sti push lds add xor and fbstp mov jae inc and mov mov mov aad aaa mov cmp and sbb roll adc stc (bad) sahf dec xor add push ret fldcw hlt movw mov push sub cmp lods xchg into jp fnsave pop or or cmp cmp push inc icebp outsb jmp enter mov jl in pop icebp cmpsl sbb out fsts cld xchg cld cmpsb ret mov jae inc int adcl xchg (bad) sub lret frstor movl mov loopne lods daa stc jns lcall sarl inc cmp cmp pop lds je inc fisttp (bad) push stos push sbbl pop dec and lret inc lods lods jmp push inc sub mov mov aas loope sahf and sbb jne dec lods push xchg cmp xor add aaa lahf dec fwait sub sbb orw pop add daa lds (bad) xor fdivl adc inc std notl imul dec mov pop sub in cmp jns les adc int incl ds (bad) les cltd xor pop xchg cmp mov imul dec cs dec push out pop sar jb sbb adc mov jp les ds mov sub sbb lock (bad) loope sar dec add dec add sbb addr16 xchg xlat xchg mov mov mov int addr16 xor ret xchg xchg xor stc push inc (bad) cmp mov dec shlb (bad) jb loope mov jl (bad) push aaa dec dec jno sahf stc je iret xor pop or mov jb dec aas fcmovb addr16 add ja clc lds mov xor xchg xor push xor mov mov outsl sub test test add push xchg mov adc mov daa sbb inc (bad) test sahf or cmp dec mov int stc ja inc xchg inc mov in out mov insl dec sbb int3 adc bound cs push mov ret and mov and sbb jg notb mov mov mov fcomp xchg fbld rcrb push and ficompl inc fstp xchg test dec xor int3 cs pushf mov dec xor dec idiv jmp push mov fbld mov cmp push cmp inc loop movlps out adc rcrb decb cmpsl lret fldl sbb decb sahf sub cmpl inc test pop mov inc mov cmpl push jno stos adc aas jge push mov jno stos adc mov mov push mov sahf mov js shrb aas pushf shlb test sahf mov cmc js add es sbb mov sahf mov push sbb mov pop or test push jns hlt cmp dec xor out mov jle and cmp xchg les fs sbb int std sbb sahf test ret test outsb cld push (bad) cmc add out sbb scas mov (bad) mov jp jmp fstpl sub fs je leave lret mov pop cmc jns sbb mov mov lret jle int std and ds push fcmovnbe rcl daa cwtl movsl jne cmp fs adc shlb jl inc cs inc xor cmp lret cmp add jb aaa sbb in sbb xchg mov mov int lea sub push aas in jg mov lcall xchg testl push cmc pop stos mov pop sub mov repz mov idivl aas fisubl dec out lret fidivrl in mov stos mov js mov ja mov mov test inc sbb aaa (bad) xor repnz xor pop pop or mov lret movsb fmuls adc inc (bad) scas outsb lods xchg xchg test insl cmp idivl mov (bad) stos sub sbb aas fwait enter in jno iret and ja sub add mov jnp inc sahf test fldl stc addr16 outsl sub push das sub adc outsl dec xor inc ja adc inc ja js,pt xor in push pusha jle (bad) sar push xchg pop (bad) cmc mov inc ja xor adc es or or sub lods mov jecxz add pop or sbb xor in stc mov mov stos cs cmc sarb sahf shlb mov or or jecxz iret adc adc xchg jb push movsb (bad) jbe inc in std in aas dec inc xor and cmpsl add data16 jno xchg mov test and dec push cmpsl lret (bad) jb push sub inc push addr16 cmp pop inc xor xchg pop jp adc pop scas andb lds (bad) shr and clc mov cmpsb adc push jl inc fnsave push sar xchg sub xor and xorl jp xor cmp lret fildll loope jno add movsb mov mov cmp dec cltd aaa inc add aaa inc and jo jno (bad) pop in push std lods imulb jmp rol and inc roll addl lret fisttp inc xchg sub adc mov cmp inc sub shr fstpt mov push roll add push imul je cmc lret jle cs in lea mov rclb and mov cmp inc cmp cmpsl jmp enter cmp outsl lds je xor cld outsl ja mov mov jae fstpt xor inc sti push test dec in and sbb clc inc sub cs test imul jp data16 in and sbb push lret out and loope pop (bad) mov (bad) xor jbe mov cmp ds cmc cmp cmpsl test stos (bad) cmp xchg addl jp dec jg hlt cmp xor repnz mov in cltd dec movsl hlt mov fiadd fldcw mov jle inc in icebp xchg sbb loope mov icebp (bad) sbb orl push jmp test cmp ds lock notb popf inc ficom or cmc aaa add add mov xor cmc mov aad push andb add add out xor or (bad) sub je hlt mov push ret sbb loopne lret add popa sbb ror inc cmp inc sbb sub adc mov xchg sub mov mov fadds out mov int xchg out mov negl fs leave jno inc repz orl popf in jo mov cltd out std pop xor in cmc xchg mov push fs sahf pop inc mov inc test push push sbb xchg jns icebp cmc dec cmp sbb and movsb movsb mov sarl mov int mov js add push (bad) ja and push adc adc xchg in fcoms lret or mov push (bad) lea cmp fadds xchg ret xor sub leave cmovb ret repz mov push inc ja dec addr16 into repz hlt inc (bad) std mov mov icebp clc lods add jne xor cvtps2pd sub mov (bad) and lds add fwait pop aam aam aam aam rol jecxz out rolb loopne mov pop mov fwait push sub loopne mov mov pop fnop pop call dec loopne cmp subl fwait jg jge jns orb int3 and imul mov mov lods sub orb pop pop pop jmp pop ficomp push sub adc lahf pop (bad) adc cld loop pop std pop stc pop sbb inc add pusha add loop popf pop fwait pop pop pop pop pop out loop loop (bad) fwait lahf pop inc insl inc test (bad) jb lods stos sti (bad) cmp mov rolb mov mov outsl ljmp orb push dec push enter fcmovne sti fnop sbb fdiv push (bad) repnz cli (bad) pop push mov stos je mov cmp test pop imul imul cld sub (bad) imul inc cwtl loop pop cltd jle (bad) loope loope loope loope in insl fistl inc iret ret ret jae pushf int3 mov int3 lods ret inc ret or lret adc or loope jmp ret loope loope in mov gs out out out push addl add add push mov sub sub sub and add add add pop in out out xchg out out sub (bad) repnz jne inc rol loopne xor nop test pop lods cmp outsl mov xchg jge in insl bound xchg cs addr16 mov xchg fucomp popf in push mov dec dec loopne pop xor lret cld nop add pop shrl or imul mov mov dec rcrl cmp cmp jo push mov rol aaa xchg out adc jno les inc adc ret add pop mov sbb or mov jecxz in inc andb jg movsl adc mov scas lods or mov mov add push mov clc push jmp mov mov mov push inc dec inc jbe push cs add mov pop mov adc ljmp pop test ret pop jl es jg aam (bad) mov mov rclb ja (bad) lods lock jae subl out shlb (bad) jae jg sbb stos xor cs ror outsb push test nop sbb or (bad) push ret jle fwait sub pop popf xchg jge inc inc jg add (bad) xor scas sub repnz rcll inc testl adc xchg inc les push or xor movsb cmpsb imul imul jle out clc fwait add stos lods push mov imul les mov or mov hlt aam jne dec outsl push mov push mov jns stos call or cmp xchg push dec fmull pusha and call cld fwait sti (bad) inc mov popa ja jmp cmp mov push inc dec popf xchg data16 lahf adc (bad) out repnz dec jp cmp push xlat xor or ret (bad) xor mov push arpl pushf mov outsl sub pop fwait xor jp adc cld jno jns outsb popf sub xchg inc out sub jmp sbb sbb dec dec aaa mov and sbb inc lcall sub cmp pop call hlt ret mov test out in notb pushf int outsl out andb rcl pushf xchg add jl jno xchg sahf out sbb mov jne bound stos je insb or mov add in and sbb cmp mov mov scas inc and push outsb rclb sub jb (bad) fsts xchg popa out ret pop clc sbb data16 je adc pop and repnz sub jae shlb sbb pop pop repnz dec les add mov pop cmc pop mov fdivrl push push mov imulb cwtl pop outsl dec lock add test in mov jg iret xchg mov loop pop and test cmc jg xchg lods cmc aad xor mov xor pop out push sub cmc pop mov mov jnp xor stos insb mov popf mov (bad) jne or shr sahf adc mov (bad) inc push hlt push mov xor in jno dec enter loopne mov stc and mov in or repnz pop adc push adc add lods in fs xchg mov adc stos cmp rorb fcomps xchg mov dec (bad) loopne push (bad) (bad) push jns ficompl mov cmp lret cwtl or imul rclb jmp lods neg xchg arpl (bad) xor or fbld and sub lds cltd test or enter rcll dec mov jno sub xchg int3 fmulp rcll inc idivl jmp dec or (bad) ret (bad) movb loope dec imul inc leave inc iret leave add mov xor loope call jo xor dec xor popa cli xchg push or add xchg adc mov add scas mov cli or pop or push cli jmp or add add jecxz fisttp push sub mov cli jne adc push std fisubrl xor popa cli xchg push addr16 and cmc pop out scas (bad) push push xor icebp loop dec sti lret pop xor xlat pop imul and dec fadds ret pop flds popa and icebp fsubr test fcmovne and sub data16 adc mov (bad) repnz dec popf rcl or mov mov xchg lahf imul (bad) jg push inc (bad) jne leave imul cltd ret cmp lock cmp insl sub nop sub popa (bad) mov (bad) popf sti fldcw sbb aas insb js icebp lahf (bad) test mov cmpsb stos mov xor dec and mov jp fnstsw inc std mov test jle test push movsl push cmp xchg hlt sub inc std out stos fdivrl push sti push and js lea stc xor jecxz jne add fdivl (bad) icebp (bad) adc cmpsb adc mov out adc loope int outsb sbb pop adc jns cmp pop push imul iret into mov pop out aaa int3 out bound dec mov dec mov adc (bad) cmp dec adc jl mov and mov pop xor je aaa rcll cwtl pusha push dec push fidiv lds shll fndisi(8087 cs and add mov loope cmp adc nop sbb dec mov pop arpl test or mov pop sti cmp addr16 idivl cmp inc sub push dec repz sbb rcll mov xchg cwtl aaa rcll int3 add xor mov test test jmp cmp pop daa mov push pop les adc divl sub (bad) sbb mov std push pop sbb xchg test (bad) stc test insb test cltd imull cmpsb stc push mov aad jmp push inc lret lods out mov sbb js enter rcr adcb call cmp andb arpl jae aaa add aam inc (bad) jmp cs test aam inc mov rep ret mov inc ja int lret add (bad) mov or repz in idivl push push fild jbe xchg dec es les loopne mov lds cmp pop daa stc jno pop xchg popa or xor loope mov xor inc shll lods xlat pusha iret inc fcoml pop negl (bad) hlt cmp lcall into ja pushf ds cmc cmp mov sbb add ds (bad) jno lcall push fcoms adc xchg arpl pop stc (bad) ss sbb out or inc out loope mov repz mov das adc xchg imul cmp aas (bad) mov inc jns xor mov push cmp xor sbb inc je xchg out sub xchg fnstenv aaa adc stos in pushf hlt test into mov push clc test scas mov push cs fistpl push addl sbb imul test mov aad dec sbb stc cmp test jp cmpb aaa push cmpsl icebp mov fcoms (bad) cmp cmpsb fldenv daa push inc fwait push xchg aad out push in data16 pop xlat jle aad icebp or imul jl arpl (bad) mov (bad) call adc sbb leave es cmp jmp out push add xchg repnz pop push stos enter mov (bad) and outsb pop aad out call mov outsb je int repz call dec movsb lds aas xchg mov mov repz lcall cmpsb in out lock rolb mov pop sub lds sub lds (bad) pop lods jno sbb in movsb cmp xor inc sub cmp xchg adc mov or and jp mov sub jecxz jp cld pop loopne pop inc cmp sub scas xorl jno xor leave add leave leave enter jns fmulp jp add mov in fst jmp leave pop xchg lret cltd int3 dec inc lock and stos xchg mov stos pop insl xchg mov fscale sub out xchg clc out andnps lret mov add loopne cmp push (bad) push lahf cwtl pop mov pushf (bad) mov arpl jecxz jmp mov adc rol jmp popa inc mov mov cwtl lret cmp imul or cltd dec mov int3 lds leave arpl mov cmp pop xchg sub out (bad) mov mov ret xchg jne push (bad) mov or in and xchg dec push fsubl add mov movsb (bad) cld loop inc jecxz jns pop mov test loop loop push loope ja (bad) dec cmc pushf mov mov gs inc lds insl test dec inc rcr jge leave pop jl dec loopne jno fcomps (bad) push jmp test loop push jmp aad jnp mov mov jmp imul (bad) push lret pop test leave rorl mov mov mov jmp imul xchg pop cld fistpl cmp sbb sbb pop dec dec icebp pop (bad) lock jmp adc inc shl imul popf mov mov lret fwait insl imul jp and in cwtl out jle,pt pop out stos xchg inc xchg inc sbb xchg dec xchg fwait jle js jge and loopne loopne loopne call out insl addl pop pop inc int3 ret push xor sub or inc jnp pop test int sub ror lret cmp int mov addb stc loope pop call shr inc orl mov pop fcompl adcb mov fdivrp fwait aas dec icebp js outsb stc push adc gs push icebp dec adc loopne addl push jg push adc test stos fisubrl dec inc fadd mov add pop popa xchg stos cmp mov (bad) jns sub xchg lcall mov loopne xor jl out cld mov mov xchg xorl shl out icebp inc scas pop loopne add mov cmp iret clc test mov mov bound push dec (bad) lock cmp adc sub fistl (bad) and jl fdivs jp cld fistl lret pusha fcomps dec sbb es cmc mov int mov sbb std inc sub test aas dec inc cltd out inc add dec dec in test in or fldl push lret xchg push sbb mov das adc mov or (bad) fisubrl dec in insb out and pop xchg sbb or fwait test int sub inc or movsl cmp lcall stos in adc cmp ficompl xor cwtl loope (bad) loope xor mov outsl repz lret jg jns out leave sbb call rcrl sub (bad) dec int lcall (bad) dec out stc insl fisub movsb into sbb mov dec aam or test ret inc or int test xchg add imul int xchg lret mov scas push in lret dec callw ret mov fwait push adc inc clc sub or in movsb sub std dec fsubrs in popa stc xlat mov or stc test ret mov add sbb xchg leave xchg inc stc sub sbb mov add jl subb add sub inc fstl xchg aad (bad) pop jb sub jge mov xchg pushf pop aad (bad) dec sbb call lret or das push fmulp cltd adc subl adc arpl js sahf mov out icebp mov bound and mov fimul mov rorb aas cwtl movsl mov push daa sbb nop outsl or arpl shrl inc pop js mov dec nop nop (bad) mov test pushf cmpsb inc mov cwtl nop xchg sahf lcall arpl bound mov loop inc pop cwtl dec push icebp push popf or inc incb hlt loop ret popa jne pusha jo pushf jmp lret inc or stos mov int3 mov jge sbb aam xchg jnp js inc repnz inc xchg dec jp jecxz xchg cwtl jns mov (bad) jmp inc jno,pt xchg popf int addr16 pop adc add dec incl mov fimull mov popa dec test xchg adc pop shrl jecxz out cli jecxz cli mov in adc ficompl adc inc scas xlat ret sbb icebp test push xor dec sub sti add add and daa cmp ret imul mov push push mov testl cltd clc xchg adc test test pusha mov sbb popa mov and adc mov loopne adc mov in arpl xlat xchg ret xor cld cmpsl ret xchg fldenv dec fwait in rcll mov inc push xchg sub rcll add popa out mov xchg popa dec std idivb inc clc jne xor dec je jle es mov xchg cmp stos stc incb push rolb in sub negl jmp cltd jo subl mov mov adc mov arpl cmc addr16 dec lcall dec xchg dec ljmp fistl push mov or push jb cld xchg dec or sbb pop cwtl inc (bad) data16 and cmp daa movsl and jb arpl pop push cli mov aad jmp iret out in aad lods repnz mov dec rorl dec sti jnp (bad) jno and cltd fcoms inc stc sub pop imul and or stc inc int3 aaa ret fidivrl adc dec pushl adc adc pop sbb add cli fstpl popa lahf mov int3 mov int3 jg push popa adc mov push scas inc (bad) mov push popa dec add or pop in stc inc arpl gs imul in test pop rolb xchg (bad) (bad) pop insl dec pop (bad) inc enter pop arpl fneni(8087 jecxz pop and jge xchg out loopne lret jns ret aas dec in sub in mov inc dec in jne in fstpl push jge xor int test pop adc mov add lock outsl sbb ljmp arpl test fstps push loop inc aas push fldcw test inc outsb adcl sub dec mov push mov out jecxz insb cmpsb adc mov clc sbb mov mov sbb jge xor mov daa lret movsb imul xchg jnp or shrb inc or pusha dec (bad) icebp pop int3 mov dec push fistpll sub notl push push cmpb mov mov mov mov das mov loop (bad) xor and mov mov fsubrs fs xor insb inc lcall dec and push push rclb clc jmp cmp mov inc aaa dec enter mov clc imul loope std fisubr or push hlt scas mov xor mov ret dec sbb outsl cltd mov stos cli shll mov test data16 imul adc inc enter fsts cmpsb and stos lods push fisttp js mov (bad) lret cltd icebp push insl call push fwait lods xchg add ja (bad) push in rorl inc fdivl lahf cmp ret mov sbbb mov jnp or cltd fadds push or pusha fs cmp arpl into xchg xchg aad fiaddl int adc sbb out ret fnop cli mov ljmp adc js jl call cld adc pop popf enter pop outsb cmp nop jp push das into in (bad) or aas das pop cwtl outsl mov or mov mov loope inc dec fildl or cmc cmp push test pop (bad) into icebp mov mov ret sbb fcomps xchg leave or imul fdivrl mov or mov jmp daa lcall cmpl int sbbl push dec pushf ret subb in cmp pop sahf sahf jle enter mov mov stos add loope into je ret dec sbb lret out mov push cld scas fldz lcall daa in lods in xor xor push pop sub push or pusha cmpsl push push pop or aaa ficompl or int3 inc dec push pop and fabs jns jbe jp roll xchg push aad jl mov jl (bad) sbb aad rcl loop pop repz cli xchg jmp cwtl xor dec stos xchg sub dec dec jge mov xor outsb jg aaa mov decb xchg adc popf shrl xlat jne icebp sub pop popf adc mov lret sbb pop add or sbb mov stos sbb xorl mov xchg mov daa sbb shrd imul fucomi inc stos and pop jmp xor fisttp std and lock pop je add add rep and xchg jmp jmp nop aad push xchg mov sahf stos mov jns mov (bad) mov arpl jle cwtl out mov into pop clc sub and aaa jb xchg and subl stos or mov clc xchg rorb dec lds inc sti aam jecxz fwait hlt pop orl or imul jmp (bad) enter inc stos mov cmpb cld scas ret xchg add pusha arpl mov repnz movsl jns call jl fisttpll les arpl lahf repnz popa cmp ds push imul push xorb cltd aad movsb lcall popf mov jno dec ficompl scas push xor mov jns mov mov lea xchg mov ljmp orb mov add jns movq cld pushf iret aad es mov (bad) (bad) jbe ret adc repz ret shll cli in leave into in les mov or cmp sbb mov aam pop xor (bad) negb (bad) scas adcl decb (bad) adc cmp push fstl mov sbb push lahf cmp sbb lods jge xchg rol sub pusha sahf pusha ror add in add int int3 fcmovne dec inc ror lods dec rorb (bad) out add jmp xor pop cmpsl pop imul push sbb adc or imulb pop cmpsb dec loope pop mov loope cmp push or mov fwait jne das cmpsb dec out xchg test (bad) xor sub jno jns mov ds fs jno sub inc popa insl mov xchg cli mov jmp xchg jnp imul or (bad) cmc fs addr16 inc sub loop roll cmc or loope mov xor dec cmpsl dec insl (bad) imull addr16 inc adc jne enter sbb daa pushl cltd aaa in (bad) jno inc idiv xor xor pop and enter fdivrl es outsb rorl mov sub xor and insb js pop or out test add dec cmp sbb jno fwait jns and dec mov mov int into es outsb sub adc (bad) dec lock subl mov inc xor pop fcom mov sahf dec lods scas insl sbb cld scas addr16 out (bad) out (bad) or dec (bad) xor mov movsl push inc rorb pop sahf sbb cwtl jb fcmovu cs xor push fnstenv (bad) xor lock push or in dec and pop pusha ja adc sbb dec or popf (bad) lcall addb xor or jge test out fisub outsl lcall and pop js xchg and mov jnp (bad) sbb mov sbb repnz mov rcrl mov popl pop jae outsl je ljmp mov pop jns lds int3 loope in push lds popf mov mov mov lcall mov xor mov fildl call xor pushf push call sbb push mov jae popf or in lret and jg jb dec (bad) mov pusha jae mov lret outsb aad inc in mov out aas test mov jnp loop outsl cmp insl mov cmp unpcklps ret iret rorl dec adc lret ret cwtl insl aam loope mov dec sbb aaa pop mov jnp out mov popa xchg push mov adc jp sbb loop jo push aad cmpsb lcall (bad) hlt setae cmp mov and sbb dec cld in clc and sahf xchg inc fldl jg mov (bad) std xchg lock sbb mov xor ds xor ds cwtl repz and test call xchg xchg mov movsl xor fsubrp or xor adc outsl push outsl dec push xor jb jne or add mov div inc insl ljmp sub inc add inc stos insl in movsl sar nop sub xchg loopne pusha cmp sub call loop push into push sub inc hlt push sub sub fcomps push sbb sub xchg es movl lds lds push insb fcomp sbb mov arpl mov or in jge xchg inc lods sub in ret mov out jne sbb lahf mov pop scas cmp sub ljmp pop jl inc fs arpl daa xchg mov push pop imul xchg test inc jae and in js sub call cmpsb in lock sub fnsave xchg or (bad) jp jecxz addl inc dec inc stos fwait imul pop jnp cltd inc mov and popf cwtl and out addr16 pop sarb lahf pop insb mov cmp jmp cmp inc mov fucomp add inc fildll mov cwtl iret loopne add or xchg sbb test and fldl jnp aad jg aaa xor inc add sarb inc sbb and xchg fbstp sub push jo push xor inc xchg cmp jnp mov push mov mov call pop push cmp enter pop (bad) cmc xchg ret xor push cmpsb popa xor jle ret inc addl sub ss jecxz and xlat xor cld flds xor scas xor add lock push add sbb sub (bad) sbb mov test cmpsb mov jp mov cmp fnstsw push and out aas mov push push in push mov in jbe adc (bad) cs mov pop loopne adc dec ret pop push hlt popf mov mov xor sti cwtl cmpsb leave orl out push add dec and lock into arpl aaa dec loopne add ficomp into cmp out mov adc in clc stos popa in xchg (bad) push inc ja loop rcll rolb stos xchg xor pop ja and repnz les sub sbb lret or jno daa mov lea lock push mov imul aaa mov mov cmp aam test adc ljmp mov fwait lods mov or push es sbb fwait add xor inc or inc push es iret loop cli push cmp mov lds xlat add mov jmp cmp cmp das jae jmp mov pushf sub add enter mov (bad) aam mov xchg sbb push cmp shll xchg fldl sbb cmpl or mov dec fsts add mov push rep ficompl out sbb or cmp sub clc out mov jo xchg stos mov movsb cld or mov sbb test cmp xchg push test scas pusha mov (bad) mov (bad) clc sbb mov mov push xor jmp and arpl les loope daa inc data16 nop adc rcr loopne in cs dec jo sub mov adc pop fstl (bad) jle fdivrl mov xchg or cltd and and (bad) out data16 call dec popf push and sti push (bad) mov dec mov xor (bad) cmc notl inc repnz mov test xor jecxz pop mov in into (bad) xor jnp mov cltd sbb push clc or mov jp xor and push ds loope mov in xor out mov sub push mov dec add mov (bad) icebp xor mov inc mov cmc daa movsl adc add jge aas mov jge or loope add push fisttpll adc lahf or push add insb stc cmp mov adc xchg sbb add and and pop or sti mov popf das stos add xor sti stos push popa fist mov faddl ret popf mov addl les imul and aas push dec xchg mov loope lcall in (bad) jmp push xchg mov clc andl arpl adc fsub mov mov pop outsb les cltd stos outsl push test rcl std cmc and dec and jb dec les paddsb mov and repnz xor adc push pop mov sub pusha dec and fimul lds gs sub je call mov lods fbstp mov out inc fcmovu cmp or hlt or (bad) xchg and jno mov in mov stc rclb add (bad) (bad) xor ret outsl pushf mov notl ja icebp xor (bad) push xor mov cltd xor push inc jge push adc xchg mov push cmp les ret fadds enter cltd fistp (bad) xchg dec fsts jo pop lret jb mov cmpsb jno mov mov imul jno (bad) divb mov push gs sahf adc aaa outsl adc test xchg add loope cmp addr16 cmp out push cmp jmp cmpsb mov cwtl pusha (bad) idivb ljmp sub push xorl nop ljmp mov jo sarb or dec insl js mov (bad) jno sbbl cmp push add clc cld adc mov push jmp xchg (bad) fsts pop mov and add mov or push push sbb lcall fisttpl arpl (bad) mov pushf xlat jge out add mov iret loopne adc in inc in sbb ss inc sub movsb pushf pop pop xchg push xor sar inc outsb test test icebp out dec and aad sub xchg ja inc cmpsl cs pop (bad) imul push mov add pop loopnew das rorb cmp out test (bad) fs aam pop xchg xchg push and out in mov (bad) fdiv bound sub sti cmp cmp clc lods test loope,pt sub xchg lea xchg or insl hlt (bad) inc addr16 dec cmp (bad) loopne stos sub out stos xchg cmp xchg fucomi repz xor (bad) mov scas fdivrl (bad) (bad) pop xor mov xchg or gs push mov pop and ds cmp add mov pushf cmpl (bad) repnz push sub dec and mov or test cmp std in mov (bad) icebp (bad) xor jl sbb xor sub mov (bad) xlat out dec ds popf out dec mov lret sub sub lock (bad) and pop (bad) xor inc jbe sahf aad jg out push mov lret sub mov sti dec push xor (bad) pop sbb push push sbb jnp or push jnp (bad) sub in hlt fcompl loop (bad) int3 add (bad) aam xchg sbb cltd or inc sub jae or lret push out pop add xchg pop pusha xchg outsb in inc mov mov stc xchg cmp imul scas push (bad) pop fucomp out push out int3 jnp rcr icebp mov push jge push or pop (bad) dec daa call faddl inc push (bad) outsl cmp adc das adc bound sbb out pop fsubs (bad) mov and lret push xchg pop jmp push xchg jp xlat dec cmp xor pop mov and aaa jnp pop push push push push xchg xor inc cmpsl loop jmp call pop test ds pusha stos and jns dec (bad) mov stc hlt mov (bad) lret jl sti inc mov sarl sahf mov out out add movb fs xchg in (bad) daa xchg fmul cmp insl icebp nop mov or push insb jge and add dec jle adcl leave stc lock je or lahf fmul mov inc inc fs jnp ret xor movsl xor mov pop mov push mov cmpsb in adc sub into jp push dec dec aas in loop push sbb or fs sbb dec push movsl fistpll adc scas leave fs add ret test pop clc ret mov jmp mov (bad) std scas and ficom add push int xor or mov push xor adc (bad) into or sbbl lods sub pop jne add and add pop mov outsb sahf xchg outsl cmp dec lahf fistpll (bad) dec pop mov sub fidiv pop mov push inc push xchg xor cmp sub movsl mov mov xchg xchg int3 mov icebp jns je jl jo mov cwtl xchg cmp cld jge cld sub insl cltd stos rcll mul stos mov int3 mov push xchg imul adc sti loopne icebp aaa leave inc movsb jnp out or xor mov sbb mov sbb mov test jl pop add and outsl shrl fstpl scas aaa stos vunpcklps jg int3 mov cs push xor push call dec lods ljmp or add sbb outsb outsb inc mov push pop insl bound int iret nop mov and fsts jecxz push mov pop adc xchg cmp ja sub inc push jno insb mov pop mov lret sub gs repz (bad) pop scas sbb addr16 lret out dec sbb add adc ret subl dec nop clc add pop push push imull xor movsl rcrb lret fisubr push andl mov adc inc pop mov test orl (bad) adc addb cmc add sbb cmpsb adc mov and sbb dec into fdivs cmpsl xchg mov div (bad) push (bad) adc xchg lcall (bad) sub push (bad) jnp mov loop cmp fwait and les icebp cli pop cmp xchg lock into pushf mov enter out ljmp and pandn lret pop inc fdivrl jne and pop lds cmp push sub lret repnz int push mov pop xlat leave iret pop mov jle call loop mov xchg add out mov xchg push xor sub (bad) mov dec shrl jns pushf pop test roll xchg fmuls insl or insb and sbb inc std push fimull movsb dec xchg pop pop rcrl out mov cmp pusha mov xor mov or cmp les sbb dec insb divl dec cltd xchg push jg pop clc push popf xchg cmp (bad) out fcompl ret sub mov pop scas loop mov lods or lret out mov xlat mov fistl rcr addr16 in out lock iret sbb enter add test cmp das dec repnz out add add jle pop mov out mov push xchg cs lods push mov ds xchg lea outsb mov addr16 and (bad) push jae xchg sub lods cs mov in push outsb std les dec (bad) mov loop mov mov stos iret adc test push inc jle fwait mov enter fdivr test shrl repz xor xchg daa jge rol xchg jecxz movsl mov dec sahf push divl popf push arpl cmp push fistp pop cmpsb or arpl and in inc js por xchg inc sbb jecxz push jns jne xor jle mov (bad) xchg jnp iret sbb scas bound out push rcrl push (bad) and and add lods push pop pop shrl and test cpuid cld ds nop (bad) xchg je inc enter bound push out jg popf sub imul test xchg enterw enter and mov je sbb push xchg cmpxchg fwait push les pop sbb arpl mov xchg add pop jge or xor xlat cmpsb xchg and mov and pop cwtl dec in test imul loope into xor xor and xchg data16 dec xchg xor mov dec mov adc push (bad) imul push jecxz pusha mov mov std mov push xor xchg sbb cltd mov je stos out sar sbb out sub inc cmp pusha mov sub xor sbb leave adc int leave leave scas fxch pop jmp es cwtl jl push lea adc test bound andb aam outsb mov jb mov cmp cld leave das mov add or lea movsb aad insb mov aam clc mov mov call movsl mov enter mov mov and rclb lds xchg or les cmp mov ljmp mov sub mov std daa push mov popa cmp jnp dec sub pusha mov mov mov negb leave jp xchg ret movsl mov movsb popf (bad) or fdivrl sbb insb dec push mov andb jmp add jp xchg int3 jmp and rol fwait and jnp dec test ljmp add outsl push cmpl or sahf adc push rcrl mov mov jmp push push mov inc lcall adc and sub jbe xchg ds (bad) in xor mov xor mov repz fisttpl hlt add cmp xchg dec xor pop loope lods lock fildl and hlt and cmp add adc pop pop adc lea decb out fsubl cld rclb roll and adc movsl orb cwtl mov sbb nop add rolb mov lret loope xor lret xlat or out pop loope lods es lods lcall cmc and fnsave jp loopne or test nop or mov push cmp jg dec xchg and or dec test js push cmp mov (bad) cld leave cmpsb mov push enter rorb inc mov sub fdivl mov stos push jmp aaa repz dec sahf (bad) push hlt imul nop out sub jecxz sarl jp inc cmp jecxz and push cli xor jne popa rorb subl add dec inc sub xor in (bad) fisubrl xor push push (bad) xor iret mov push inc fdivl lcall and push push test decl cltd aaa cmc aad in aam cmp pop xor fs sub sub std or (bad) sub std fbld jae fidivl hlt push and call xchg ljmp (bad) les lahf push dec in rorb mov repnz jnp mov dec movsb repz loop xchg mov xor dec inc cmpsb xchg sub pop out pop cmp in ret fnsave add sbb push sbb (bad) (bad) jp sahf in dec dec push push inc sub fdivrs dec push dec mov cmp xlat aaa in clc push andb add and int3 jmp cmp enter jne,pt aaa pop push push or sub insl lret xor add dec inc cmp ffree data16 sbb out fs mov xor mov cmp xor dec fimul mov jns stos popa fnsave xor lret (bad) es jne mov sub mov xchg pop adc xor pop adc (bad) outsb pop call aaa and add cwtl dec mov fcompl xchg aas adc push cltd mov cwtl scas lcall dec or inc int3 jns sub sti push adc push (bad) ljmp imul push fmuls ret adc test mov mov (bad) in movsl dec mov or xchg xchg inc data16 js push and jns std pop les insl aaa in mov repnz or mov arpl adc invd movsl js xor cmpsl push sahf cmc mov in xchg popa test aad dec ds or xor jb imul push test jb cmpsb cli push js push cli add pop pop cmp mov fcmovb into fnsave mov mov jns xchg pop cwtl nop push ret addr16 mov or mov cld lret sar pop pop test xchg push add lds rcrl pop cmp pusha or xor fldenv aas and and das cmp mov sbb dec xchg stos inc ret add (bad) add sbb scas cmc xor movsb mov dec adc les into mov ds sub (bad) cmpsb dec (bad) icebp mov sub fsubrl add cmp call dec xchg fmull mov cmp decl add mov stc mov loop xchg sub mov xorl cmp ja push pop mov cmp add jmp inc xor add sahf cmpsl (bad) sbb and adc cmpsl arpl punpckhbw cmp movsb mov adc mov sbb lock outsl inc xor sahf sbb xchg inc std push mov movsb shll orb push dec dec push or iret jle inc jle cmpsl push (bad) icebp dec pop enter xchg test insb pushf pop cmp mov icebp mov (bad) scas xlat sub fwait les sbb in ja inc inc jbe xlat push cmc dec jle add xchg or jg sbb adc inc dec mov cmp xchg out and pushf xchg subb mov xchg addb int test sbb out jae repz fwait xor test int3 pop pop lods mov sub lcall hlt lods inc add pop cwtl xor rorb inc mov and out push push xchg inc outsl jecxz mov call enter mov flds mov sub inc inc jbe aam jp xor inc adcl xchg and addr16 in sbb or nop pop sbb mov fisubr xor lcall xor outsb lret adc add addb xor arpl arpl inc push ljmp cwtl pop mov dec lods jge minps xchg test ret sub dec into cmp and leave ficomp ss imulb in repnz cmp or mov push cmp adc jno and jecxz mov stos add les jp mov sub in ljmp popl cmp push sbb mov pusha jne pop xor outsl jp sbb xchg out and imul test mov jo test in (bad) outsl dec (bad) jl insl pop mov das mov push sti add sbb dec fisttpll movsl mov and inc fnstsw loop cltd xchg daa test fistpl sti int3 sub hlt jl pop rolb sub pop dec repz jmp sbb sarl loopne lcall mov ret sub fldcw inc mov (bad) fwait cmpsb mov push pop add shll jae loope push stos jne lods pop xor or mov out or xor repz push pop inc mov sub imul in shl out mov fisttpll pop or idivl mov fs sahf cmp mov mov lret popa loop imul xor insb repz pop jge jmp nop (bad) lods mov je xor pusha ret cld pop (bad) ss jne enter inc in push add add and (bad) fs push xchg dec mov xor mov mov lods sub xchg lret and ds cmp mov es push repz pop in sahf jo jbe dec mov test mov xor sbb imul jns inc lock cltd divb pusha mov xlat ret stos in push sub out and imul (bad) jbe fcmove pop pop nop nop jbe cmp add loopne rolb dec jecxz outsl leave push pop in or scas xlat pop dec adc mov cmpsl mov dec lods cmp push lcall fisttp icebp lock aam ss test aam pop stc pop mov pop mov inc cwtl ja mov xor lods inc lcall addl xchg mov repz out xlat mov xchg je dec or push adc shlb (bad) in jmp mov and pop out gs lds pushf scas lret out lea add stc mov mov dec sub or cmpsl ja jns (bad) sub es cs jne hlt push popf xor mov fcompl xchg inc aaa call and bound and test insb cvtps2pi jmp and shlb xchg lea in movsb rolb stc (bad) hlt lock pop cmp andb pop (bad) scas pop dec inc aas dec sbb sbb addr16 (bad) into mov sub mov xchg sub jbe mov les outsl xor sbb cmpl pop push push mov jecxz adc out adc mov xchg or sbb xlat xchg sbb inc orl adcl xor sti cmpsb mov icebp push cmc hlt imul cmp add sub (bad) sahf enter test cmp lea cmc inc int fsts jle (bad) shr dec insb test cmp lods inc out push fistpl fmul and push cmp enter test hlt sbb iret lods test pushf dec sti aam mov in cmp and dec icebp cmp push dec and pop xor mov (bad) mov sbb fistl lods and sbb and dec stos (bad) shr addr16 xchg in call lea outsb mov mov imul xor mov pusha imul jp add fwait push fisub test push nop xor insb (bad) adc rcrb xchg ss cltd xchg mov pop mov push jno stc add jle out jp loop jb out mov jg xor or loope das fwait outsb ss add mov xchg std and (bad) xchg sub inc cmc jbe std jecxz ficom xchg cmp or xchg aaa xor sbb push fbld mov mov ja rorl mov xchg les test test mov aas fidivl into jnp mov xor fwait das stos cltd push int adc mov xchg mov adc loopne sub mov pop mov cs adc or mov adc movsb xchg xchg test push mov or fmull sub dec add dec mov cmp jg in hlt les call fcomi cld loope sti fwait dec jp add das push and xchg mov in push mov icebp sub pop xchg push add int3 insl lret loop adc push mov ret mov add mov ficompl outsl or in das adc push and xorb push loop sahf push roll lret negl loop mul dec test and roll mov fbld inc add push insb jo in add bnd ffree inc imul cmpsb xor cmp lahf mov and fild mov loopne insb pop iret lea lea stc js loop xchg push xchg push fistpl mov nop lea aad psubq ret fdivp std cmp push jmp aaa xchg pop cmp scas lret addr16 pop gs jg movsl mov mov jb fcmovb call push in icebp mov push push push subb in jmp mov rorl push (bad) sub and mov (bad) rcrl mov test and adc push out and dec xabort sub adc dec scas test pop mov mov fwait sbb insb dec cmp mov mov cmc hlt add bnd mov xchg insl loope pop les sbbb sbb and jns jmp out inc pop mov sbb dec jno (bad) dec and xchg mov cmp cmpsl or (bad) pop adc xchg and ret mov icebp lret cwtl push push mov xlat add out es mov mov and (bad) xor fisttpll aad sbb mov lea mov js ror pop enter cmp inc fnsave mov mov loop decb aad (bad) xor xlat ficompl rorl adc or lret int3 or sub fdivr cmp dec xor jl mov push test insl dec sub std cmp jecxz cmc jg or xor xchg out insb idiv int mov imul hlt pop cmpsb popf (bad) jmp mov incl push mov aaa pcmpeqw jns sbb mov sub sahf cmp jmp dec fldl or fadds inc xchg xchg sub xchg aam iret out ds shlb notb popf mov sub xor push adc xchg push (bad) fstpt cs in inc movsb fistp mov mov sbb mov loop ja adc sbb lret mov (bad) push mov nop push pop rcll fwait adc push mov jcxz mov pushf test and ret mov dec mov xor push cmp xchg shrl mov daa fsubl and lods pop imul stos dec mov imul shr push fstpl es mov jp jns push pop sbb idiv int testl inc or adc mov loopne and add push cld sub push call sbb movsb fcoml inc inc inc jl int3 xor or xorb sub cmp pop ds loopne movsb std outsb por mov int3 mov sti addl jmp subl andl xchg int dec std sbb les int sar add out sarl inc push in xchg push xor push enter jmp sar lds into mov out jne stc adc fwait mov sub pop xlat pop incl or imul popf cmpsl push pop ljmp jge push jae push mov (bad) mov mov pop sub sbb sub (bad) sub lock jae fbld or pop lahf sti iret mov sub cmp dec sub outsb dec jae out or ret pop cmp lcall aad repnz (bad) mov mov fs imul xchg add mov gs and (bad) insl aam mov pop sti pop fdivr mov popf (bad) je add xor shrb xchg loopne les sbb jnp dec test lret jno and sbb cmpsb dec fiaddl and sbb mov les jb (bad) sbb mov and aas repnz ss sbb pop js push sahf cmp sub jne sub cmp stc mov (bad) dec movsl and adc pop or dec jno mov dec pop fisubr mov xchg xchg pop or (bad) int3 and inc mov push sub out adc sub inc add dec call sub jnp sarl testb sbb add or cli xor xchg jg inc repz popf ja sub (bad) loope fiadd adc adc or or pop pop sub out in imul (bad) dec les sub lret (bad) mov or rcr mov fxtract or mov sbb movsl or xor lret push pop jg xor add das sub mov mov dec adc popa mov sub pop or mov pop or sbb std out (bad) cltd lahf stos cmpsl and jns or mov inc mov sub sub xlat call into mov or adc test mov or aad sub in sub lret (bad) mov fisttpl rclb and addl inc loop dec test xchg push lods int3 pusha or sbb (bad) or pusha jg cmp jo out insl ficompl mov loopne cmpsb cs dec mov xor adc data16 (bad) adc sbb or add cmp and or push push mov xor xchg (bad) push stos jbe xchg push mov ja sahf push and cs repz aaa aaa dec and pop es repz aaa inc add fsubr fwait dec pop xchg rcrl je iret inc movsl push push jle adc (bad) add push mov add fwait ljmp (bad) lret cld lds mov sbb les mov inc lods dec inc jns aaa (bad) repz into or mov mov iret fldt mov in in adc mov std into add sub mov (bad) mov test sahf jmp cmc (bad) lahf je inc mov pop dec arpl cpuid pushf sub arpl insb sahf (bad) repz and aaa sti push iret mov stos or pushf nop add gs ss test lock shlb xchg mov push scas cmp imul int3 addb gs cmp aaa inc lret mov mov mov push arpl cmpsl mov inc push mov out dec in push movsb mov adc add dec mov iret aad jmp mov inc lods pop jg roll es imul mov cld leave xor ljmp push push lds ds mov imul inc dec push fldz dec fisttpll popa test shlb mov movsb inc rcrb retw dec xchg pop out mov dec dec inc push xor adc incb sbb push movsl cmp sub xchg leave andl push cmp jmp loop and mov push and ss mov sub pop ret cld cmpsl push dec adc aaa sub int (bad) lret addps fbld cmp jns mov jns dec sbb and scas repnz sub out push push adc push adc lahf mov sbb dec nop xchg outsl insb xchg pop gs mov movsl mov mov push jno mov xchg bound loopne inc (bad) into mov int and fldl or out les fsubp sbb push mov cmp cli xor test sub (bad) (bad) adc iret or mov adc pop les mov stc fdiv mov add push add sub sarb sub mov mov sub mov xor pusha cwtl push sahf cmp out xor dec mov fild jne stos push add mov jl push aam cmpsb (bad) or push mov pop fldl dec (bad) ja mov sbb fwait jl std pusha test lea pop (bad) xor sbbl stos and cld jmp popa and das push sub xchg in pop jns jb sti mov loopne push popf mov pop mov out mov cmpsl cmp jg xchg cltd outsl nop mov out idivb pop nop repz das jl xlat sub mov scas inc lds jle mov arpl aaa in sbb imul ret sub loopne adc xchg out shrb xchg inc outsb je mov stc cltd idiv loop and push insb inc (bad) jle loope cltd (bad) repz mov inc inc cmp loop dec popl in int3 int3 jge gs out addr16 cltd mov sub mov insb inc and push or outsb fnstsw inc cld jns xor (bad) lret ret mov add xchg xchg lods sbb fnstsw add sbb mov (bad) push (bad) fs dec mov out les push stos xchg mov xchg mov aad add push mov mov in pop or jl mov sub inc out rol (bad) dec inc lds push mov push pop clc add xchg int leave xchg mov in fiadd (bad) jmp lea xchg mov jge leave rep mov cmpl inc sbb out inc jbe and mov inc or mov xchg scas fdivrs enter dec push pop mov fidivrl clc sbb pop sbbl push dec inc pop test outsb loopne andb pusha mov mov push mov cmp fdivl mulb mov cmp (bad) orl mov (bad) lret pop (bad) ds test pop test dec popa mov inc mov and pushf fildll inc add inc xchg mov sbb pop fnstcw jl and cmpl or inc cltd xchg cmp or int and jle xchg shrb mov gs push pop insl xchg mov jle xchg lock or out aam ljmp xor inc jne rcr xchg lds loop inc lret push push arpl ret cs int insb aaa jp sbb popf mov jns fwait jle test insl int or cltd and inc cmpl data16 out mov shlb push dec jg sahf jo sbb aaa cltd sbb aas push sbb in aad dec xchg add jg inc inc mov dec sbbl jb xchg flds cli sub (bad) in pop sub and iret push mov or sbb mov (bad) movsl cld pop sub or pop dec lahf inc cmpsl (bad) cmp je inc and repz push (bad) inc adc (bad) or xor mov sub mov or negl mov mov (bad) inc and push adc ret dec xor dec inc mov jle scas or sub push cmp mov mov or xchg pop out rorl mov les roll mov roll imul cmp inc mov mov mov dec imul stos fs pop es je jo int pusha and pop add je adc xor push mov in lds and push adc xor (bad) js adc sub enter jns push (bad) and mov adc pusha outsb mov mov repz aad mov push cmp mov dec pop ljmp leave dec sub push adc inc push fs cmp out idivl add mov xchg jl adc or mov test rcll add dec add add push push jge hlt dec lods xor or (bad) movsl inc sbb add aas test decb xchg dec test push lods jge dec lcall or not xchg das es pop sti xchg add sub lret outsl add orl sub cmc and call movsl aas sbb pop lock pop jge std loope fsubrs in adc mov dec inc cmp dec out call jbe inc adc (bad) mov (bad) dec pop enter mov lcall insl jae jns js mov sub stos insb cltd sbbb mov xchg or push xchg or movl and pop fwait jns or scas mov and adc je mov lret cmp push leave andl hlt pop or pop sbb stc (bad) je int fldt mov fimul add test addr16 mov mov or push scas push lahf sbbl leave out (bad) jge jno leave jnp insl xor mov and jge jns or push jecxz xor stos ljmp pop dec cmpb jmp int push imul shl lret mov pop lea stos aaa or cwtl cli int (bad) bound adc mov mov enter mov vxorps mov (bad) int test mov movsb popa sti enter popl (bad) xor inc add xchg sti lret pop orl inc and mov dec hlt xor (bad) sti rcrb (bad) mov push lret (bad) iret stos jmp mov dec inc push lret push mov mov (bad) leave xchg dec iret sub scas mov loope imul mov and mov (bad) notl push lock jl rcrl mov fnstcw cltd and (bad) pop decl pop inc dec pop ds call pop jecxz std test lds sbb aad iret mov (bad) fcomip pop dec ret sti stc into jne lds leave sub stc into inc or dec por rolb fsts sarb adc cld (bad) jns popw cld lods mov movsb les adc mov pop sbb stos out test lods mov adc adc stos push push sub xor jnp cmpsl add or push adc jge pop stc cmp cmp je sbb jl ret ret pushf (bad) sbb aas leave mov (bad) cmp call add cmp fadd cmpsb fs cmp in cltd out cmp push es mov fsubs and es sub and adc dec imul mov ljmp push imul mov dec push xchg mov xadd aad icebp movsl test cmpl repz movsl mov hlt jno nop js ja (bad) pop xchg hlt pop lcall add adc or jmp xchg mov popa pop dec cli lret scas iret add inc sbb lods add lods xchg jae cmc loope (bad) inc jo cmc repnz xor in adc lods add (bad) test cld lods mov xchg push jns stos pop cmc xor in pop inc fwait pop add and repz (bad) insl mov dec xchg sub hlt xchg dec std and push jns and add or push mov stos jge sbb aad inc push xchg rcrb and test and out or pop push test out or xor loopne mov jmp push or ss dec rorl and lret push rol into (bad) stc movsl or sub leave pop cmc inc pop mov mov roll test sahf pop iret dec loop xchg cmpl imul fsubs inc jecxz ror pop (bad) popl mov data16 (bad) mov xor stos xchg sub dec add fdiv lock iret mov lods roll fldcw (bad) fnstsw popa (bad) int cwtl cltd dec rol add pop loop rcr sbb dec rol mov pop clc in mov inc test in dec into arpl lds sbb dec (bad) pop sti test or inc ret (bad) test int pop (bad) or out rcrl sbb xor mov aam loop cmp push call clc ja lods (bad) mov shr add jns insb inc enter mov aaa xor jns add pop pop test mov dec (bad) (bad) lret test add adc or mov test loope in pop jge fnsave fnstcw leave into push mov popa dec xor in jg dec mov repnz js add push sbb in ret lret lea push frstor test das ret and clc mov lods sahf in pop pusha ljmp repz pop outsl xor inc sahf add push mov lret push inc push push xchg xor or cld movsl add popa mov rorl adc cmp mov jae push add fisubrl jns xor jl (bad) pop stc cld clc (bad) stos cmpsl mov push or pop in or adc xlat or jg mov mov sarl dec popf jl xchg xchg jmp in ss cmp (bad) ffreep mov test add adc jns int lcall mov sbb leave sub scas int mov lock push fnsave sbb adc rcrl mov (bad) sbb push sbb sbb or sbb push mov clc cli or mov fidivrl lret pop pop or dec das fiadd cpuid dec sub mov adc sbb (bad) mov push push jle das cmp pop aad pop fs fldl loop popa lea xor adc into jle loope mov (bad) cmpsb (bad) mov mov cmp lahf pop imul xchg in jg xchg test or xchg jmp cmpsb out mov nop cs icebp mov jne in jmp jno jge sub mov mov (bad) mov xchg inc sti inc xchg insb lds sub stc push mov push bound inc mov jle (bad) nop repnz ffree pushf and pushf das mov inc dec movsl pusha dec mov mov and insb subl xor mov inc cltd jge jle mov or lret jl xchg mov (bad) lret pop aad push sub fmuls jle dec aaa adc push jmp xor mov mov add pushf and lahf xor cmpsb push push mov push mov xchg jbe dec scas mov push jae loopne xor cmpsb out je hlt or jo daa adc (bad) add adc push dec pop xor std (bad) dec push pop aaa call nop int3 adc outsl sbb pop mov dec sbb sahf inc mov inc xchg dec rcll rcll mov rcrb jnp pcmpeqd sbb ficompl mov or dec mov push sbb popa inc mov jmp xor (bad) mov outsb cmp xchg sbb negb dec repz sub pop jns dec inc lods repz mov xor out cmpsl loop fldt push pop insb cmp cmp mov xchg push lods std out test pop daa adc (bad) mov or repz fwait push pop and out (bad) aaa cmp or popa ja adc pop jle cmpsl sbb fwait push push jno mov xor dec mov insb or popf ss xchg sbb dec ljmp cmp push icebp sbb or cmp aad or rcrl cwtl inc test or pop jg fwait mov inc cmp cmp push test in std jo iret sub out inc mov add je sarb sub (bad) sbb loopne aam adc or mov push int bound jb,pn xlat imul dec mov xor dec ja (bad) (bad) insb push fsts dec mov mov jle je xchg or push cmpsb test repnz sub jge push sub pop lods scas int3 adc outsl movsb xlat and lds adc shll (bad) int enter decl xchg push leave dec enter gs scas lods lods stos scas cmpsl stos pop mov ljmp adc out xchg cmp or inc pop (bad) ss ljmp sub jo mov and lret scas das shlb push rcl pop aas lahf pandn and pushf fcomps stos cltd clc clc sti jge icebp adc lods test lock inc ja cmovbe stos pop dec dec cmpl inc cmp mov loopne xchg lods aaa test test add add (bad) jno faddl inc sbb pop andb add push dec pop dec xor repz jmp sub cs add enter mov push push mov scas jge test test add outsl outsl loopne out jp jae adc mov mov and mov imul jmp movsl xor aam add xchg pop aas mov jbe pop adc push (bad) fs inc dec sahf sbb (bad) inc outsb mov add inc scas (bad) fildll decl push add xchg mov out or lods and int mov add lahf add xchg or cmpsl scas movsl or sub repnz (bad) repnz pop shlb sbb adc xor adc cli stos sbb jmp das ss insb insb push ret adc xor lds fbstp notb push nop mov push icebp add add adc adc xlat je xchg xchg scas pop frstor and adc rcr imul mov inc js dec aas das nop pop jae dec aam sbb rolb mov mov out mov or inc mov push pushl cmp mov loopne dec mov loopne outsb mov or pop ds mov movsb add (bad) outsl push lret add and xchg sbb dec imul mov dec sbb push and inc in jl outsl fistpll adc data16 add fcompl push (bad) sub adc push (bad) loopne mov cli cltd inc cltd cmp pop push push test sub dec mov and ljmp cmc push fs int3 inc lcall in lret aad push sub jmp mov test shll imul (bad) cmc mov dec (bad) cmp push mov or cmp cmpsl ret push cmp inc out fcomi cltd cmp cmc in in inc dec mov inc mov lcall pop mov lret mov cli or lcall or outsb outsb or fild mov mov dec lods leave (bad) fcmove xchg rcr mov fucomp or (bad) leave aas dec dec mov mov inc int sub jbe lret inc dec cwtl or or flds mov jmp lds leave ljmp stc dec inc scas push popa lock mov mov adc lcall ret push cmp (bad) hlt shll shrl lret std outsl stc xchg add inc cmpsl ret lret jp pop sbb popa xor fnsave in imul and lret adc lods mov out and jnp fs adc sub mov push repnz mov (bad) dec add fsubrl xor negl mov shld mov mov xor pop xor mov mov or sub (bad) mov xor inc not jp gs arpl pop and aad sub js subl xchg sub notl xor and pop add xor movsl hlt dec xor dec andb mov add xor data16 add and pop shr push xorb imul or (bad) or dec xchg (bad) leave add jecxz mov push popf loop dec les test sub scas dec inc cmp inc in scas jmp iret test not sub or sahf dec test test mov and lds mov test ss xchg xor jbe adc add in jno (bad) and and fsubr (bad) out lds idiv lods dec mov add cmp ss ds jns orl cmp push add cmp xor xchg cmp out into es cmp xchg xor out fidiv ss fimul sti push jmp int inc sbb add lret fisubrl mov pop pop cmp xchg movsl xor mov push aam add in test xor xor stos in incl stc sbb mov xchg mov cmpsl xchg cmp loop icebp push pop fwait adc xorb cwtl add jns gs imul aaa pop jns mov xor rcrl cmp ss cs ret cmp mov xor ss lds ret loope sbb jns test icebp push push cli outsw je cmp ds xor fdivs into pop jno xor addl cmp mov jns rorl xlat pop es cmpsl push sbb (bad) xor cmp es sbb jp test call fsubl adc mov inc outsl pop inc mov ss inc adc stc and ror and cmc inc dec mov cmpsl push cltd and scas ds push mov add stc mov pop mov int in mov std les std add push mov fidiv jle jne addl jo scas cmp rclb (bad) sti xchg js xor mov xchg lret sub ss idivb cmp xor mov dec and es into std es mov sub out xor data16 idivb or cmp mov icebp sub jecxz cmp jns ds adc in roll cmc pusha hlt and cvttps2pi cmp into ss into add repz cmp mov pop mov (bad) jbe inc xchg adc sarl movb lea fisubrl inc mov inc cs jmp push cmp cmp xchg ds dec add mov cmp inc xor adc repnz roll cmp imul mov inc repz and jle cli mov push pop xchg adc (bad) add mov dec mov loopne mov popf dec ljmp jmp xlat lcall mov ds push hlt mov test rcr pop pop (bad) xlat ss mov clc fistl xor jno (bad) enter mov add inc mov and dec sub fildll dec daa shrb mov dec in add mov lds aaa dec ret sbb or and xor cmp bound dec add sbb and cli divb test addr16 lret adc sub outsl ss test mov adc sbb jno aaa dec adc ss jo xor or mov aaa dec inc mov sbb into pop stc mov rcll inc bound dec xor adc cmp cmp push je xor mov push sbb jecxz xchg fwait scas cmpb sub adc subb xchg jmp addr16 add mov jns in cmp xchg sub in cmp lret (bad) xchg in mov mov insl adc nop outsb rcrl jnp in es in push aaa cmpsb push lret shr dec push cmp out fnstenv shlb cmp loop lds push mov jmp sbb ds dec mov sbb sub mov adcb dec dec gs xchg jnp stc js pop push stc insl mov xor mov inc lea stc ficomp roll ficomp fucomip mov (bad) cs cltd in jmp adc xor (bad) fwait xchg shl or add (bad) xor pop cmp sbb adc lret adc xchg loopne cmp ret or lahf aad stc sbb shrl rcr adc stc xchg xor sub inc cltd outsb push adc sub mov ljmp or mov sbb add imul pop dec push mov mov int inc jg sarl sub sbb rcr adc jo lcall (bad) into int stc loope in insb js mov popa adc xlat xor mov cld xchg fcoms movsb add outsl std and sbb push mov sbb or popa push (bad) pop push and shlb jmp xchg fcmovnu sub repz sbb sarb test jo nop test ss push (bad) mov xor jg inc cs repnz mov cmp repnz mov xchg (bad) movb leave clc mov ficoml (bad) sbb pop jne sbb adc sbbl pop repnz movsl lret mov out dec enter mov jmp fstpt push ss mov and xchg and sahf loope imul js inc pop stos test sbb or push cwtl fist adc mov inc push cmp push inc cmpsl cmp push cmp addr16 movsb mov xchg sbb out sub mov inc mov xchg mov (bad) inc cmp push sti out sub and or ss fisttp add push mov push (bad) cmp loopne inc shufps scas data16 subl movb dec test dec sti adc adc rol adc lds push sti lods bound js sbb mov inc xchg aas push pop xor in std outsb icebp in sbb dec jnp fisttpl mov (bad) xor stos push sbb outsb imul aad (bad) xor cmp movsl leave xor add outsb gs push push mov sub rolb rorl idivl (bad) rcl aas mov je rol pop rcl inc cmp insl pop mov aad mov lods mov sub out fcompl mov mov popa xor iret (bad) mov dec dec inc cli push add lods lods lods je outsb sti or cmpsl jo jge jo jnp jo jg leave or leave push dec int mov jg arpl js lods pop leave dec clc imul add imul mov int3 in pop sub dec lret mov inc lret push dec dec push ret loope pop clc loopne mov andl int mov xchg pop inc jo fistl xor pop out (bad) push jmp sbb out jge or inc sub negb or or out sti jns loop enter mov jno faddl icebp or inc inc stos or adc rorl sbb push stc xlat adc (bad) inc adc mov in (bad) loopne pop loopne pop loopne daa out push leave jmp add in and sub sti jb pop xor fcmovnu mov push pop imul test pop (bad) lea cmp outsb inc fdiv enter outsb inc int enter push lret fdivr cmpsl dec ror and dec rolb fildll inc xchg sbb jl insl enter push lcall cwtl (bad) imul mov inc inc inc sub sbb or xor loopne inc std or push out mov popa fxam and pop js mov add scas mov push out push scas addr16 or mov clc push popa (bad) int3 loope insb int cmp sar dec (bad) pop test leave pop fisttp loope outsb mov jg push (bad) sbb mov mov push insb xchg mov pop iretw icebp fnstenv dec je jmp leave push xlat push fbld xchg mov shl lods std std xchg dec inc add test push movl sti popf sub in mov fnsave bound sbb push test push cmp scas jmp movsb scas xchg pop repnz mov inc dec jle dec fdivr xchg test es cmp xlat test mov fistpl mov imul jo mov cmp rolb inc iret incl lds and and cli addl push das aas inc pop cmp cmp or popf out std leave jae movsl jns xlat scas push and mov push xor mov lds mov js,pn inc enter in js inc pop aas pop ret cwtl int fs add and mov sub loope test dec sbb fistpl cmp loopne,pt mov jae lret paddw push clc (bad) cmpsl js inc inc das pop add push mov add push mov (bad) or stos lods fs mov inc (bad) pop and dec jns sbb add ret adc sbb sub mov mov xchg das lret (bad) test call inc movsl and push ljmp pop jmp icebp fnstcw lds push push mov fwait pop ret jge (bad) addr16 addb jb fcomip jns mov mov xor sub mov jle stos dec (bad) out mov into xbegin ss inc lods mov popa (bad) xor js inc cltd das or dec inc ret lret cmc gs leave dec mov int lahf stc mov test mov fldl imulb push dec sbb mov stos cltd popa lret push repnz iret mov icebp icebp icebp xchg sbb test fistl into rolb xor rcr xor es mov std push pop mov sbb dec enter adc nop int3 sbb jg nop insb push cwtl ret ret fcmove leave stos flds ss jmp sub fcmovnbe in enter stos push fist outsl sbb cmpsb push mov inc push xchg insb lret adcl idiv fldl jg push sti iret sbb aam fldt loope mov pop push pop mov orl in daa aaa fcmovne jno pop pop add pop out jmp pop (bad) in int jne sbb pop pop mov sub cmc pop inc sbb dec cmp sub mov mov jg popa mov dec push mov xchg xchg inc stc pop out push mov sub push int xchg xchg xchg sbb xchg lods lret (bad) aaa aad sbb aas fnsetpm(287 ljmp fistpl idivl dec mov int xchg rcrb daa fstpt mov cmp dec xchg (bad) inc add pop cli push cmp fldcw ret mov int3 inc call faddl loope or lret mov jo mov test xchg leave pop cmpsl stos dec pop sub shl fbstp fimull mov jp add and jle (bad) stos test push fistl mov xlat rcll add dec cmpps xchg icebp mov pusha sub jmp lock sti dec cmp or cmp inc (bad) cli ret popf cld xor inc sub (bad) mov rorl and lods and mov xor xchg lods stos or sub in iret push dec bswap sar cs adc out push push cli je stos add or push daa daa sti cwtl lods sub mov push scas js fmulp pop inc xchg adc and or imul mov pushf stos push sbb mov adc leave or por jno js jno fnstenv push cmp adc mov leave cmp js mov push ret call lret push mov pop push sbb daa js into pop je test je icebp idiv or stos inc test gs insl xchg sahf icebp fnstcw mov push or inc ss xor inc (bad) add lds icebp test sarl mov stc dec push (bad) mov imul int3 shl pop (bad) lock sbb pop fs fldz outsl sub dec int3 dec lret inc rcrl test pop lahf pop pushf in in std jne clc and pop notl iret sub (bad) fnstenv sub lret mov sub ds lods mov push dec pop mov (bad) gs jo mov cmp mov mov and clc in out or popf jno cmp ja dec fistl jno leave es push push pop test inc xor inc jae test xchg dec outsl aaa into call mov ja inc mov pop in clc sub mov in lret lds insb fisubrl imul leave loope in iret stos in pop popf mov fs mov popa mov mov out enter mov inc inc (bad) jno lahf lea xchg shr test jecxz or fcoms fcoms dec push mov inc leave int3 sarb jmp outsb jmp daa aam dec ret or mov roll test lahf sub (bad) push cmp js or jg dec mov lea mov loop lea scas leave cli jmp lods sarb shrb mov lar dec sti out sbb in test rcll in mov in push icebp out or jmp fxch fildll sub stos in sbb decl fnstenv jmp leave pusha dec pop popf mov test int adc stos leave fdivrs aam int3 leave cmpsb mov dec int leave mov int leave mov lds jg leave pop test stos stos shll clc sbb (bad) sbb js cmp out clc fnstenv cmpsl int add (bad) cli (bad) stc mov lds sub add inc jno lret in cld jae ret push (bad) pushf sbb iret ljmp (bad) out rorl fpatan stc mov push test js mov mov cmp call mov (bad) test dec dec stc (bad) mov fldpi mov sbb js jb pop ret or mov stos or dec js les ret sbb flds or jp add adc xchg int3 dec std and roll lahf dec stc cltd jno stc xchg outsb rorb or inc sbb sub xor sub cmp dec xor pop jno sub roll out test jmp sub add xor aam shll add cmc lahf pop out fistpl mov jle mov ret rolb sbb repnz mov popa cmpsl in push pushf cld jo iret insl or cmp jnp pop jmp aas (bad) dec mov add icebp push lret andb ss out sarw inc mov add dec cmp dec mov aad lds inc enter ret orl (bad) xchg lcall jnp mov or mov xchg ja push cs lds fwait push xchg jo sbb (bad) je movsb sti (bad) clc mov pop (bad) jp rclb sbb out sbb sbb ficomp imul in or sti add dec out lret inc fisubl fsubr orl out and dec dec enter nop xchg rcll pop and adc repz xchg dec aad movb push mov cli int (bad) aad in out popa pop dec xor lcall (bad) push cmp loope pop mov adc mov movsb mov dec mov outsb pop push sub icebp xor adc and cmp lahf (bad) std ss cmp mov mov lds dec inc loope,pt divl rorb enter dec pop loope,pt xchg lahf push pushf xor lret pop sti scas cmp out call mul test inc lret adc push add pop push xor test inc adc add or cmpsl fbstp (bad) dec and movsb pushf xor fadds pop dec or out dec jmp ret cwtl cli xor mov and xchg aaa and stos pop loopne inc sahf inc stc rorl dec cli or int and mov sbb dec mov mov arpl dec xchg ror lret loope std leave fiaddl test into popf fsts rorl negl je push addr16 test out push cltd in into stc add in xchg aad push mov or sub data16 cmp sbb lea pop aaa pop and or ret stc mov push into cwtl add cmc (bad) sbb movsb rol inc push in inc insb sbb jnp aad add jmp call fldcw dec push pop mov dec fidiv pop dec (bad) mov mov and daa mov addb sub fnstcw ret cmp jmp lret insl dec pop xchg mov sbb ljmp out imul cmp fcomip negb fstps jmp xor sbbl mov sbb mov enter xor jbe iret and cmp jb shrb or sbb leave add adc leave adc pop call stc lods stos int3 push push das leave jae jo test dec or mov in push leave (bad) mov int3 leave pop dec test notl out cmp js dec fcomp jae add call mov test xchg inc dec movsl jmp cmp test push test arpl fstps lea lret sbb push mov orb xchg or xor test leave adc pop iret pop decl mov adc mov add into cmp scas add add and outsb xchg sub loope ret int push flds push cmp mov push outsb or push jb push mov mov movb testl rcll xor cmp mov jmp ret lret lret iret sbb leave cmc cmp mov xor andl mov das cwtl movsb pop add push sahf mov mov cmp mov mov push shll jecxz cmp mov mov dec aaa (bad) or outsb inc testb sbb in jb loopne push add iret dec add enter sbb in and pop lds rcl incl std test adc lret stos add add pop lea cmp inc fisubr dec scas cmp mov rcl mov in lea inc inc push sbb and popf jmp or add jle rcl xchg xchg fsubs (bad) push push out add or or in xchg push orl (bad) (bad) insb inc (bad) in dec in shr ret sub sahf sub popa xchg stos push (bad) shrb mov jecxz mov call cld cs arpl cmp xorb arpl roll int3 (bad) xor lods ret enter adc outsl fiaddl add push lret and rorl jae popa insb into jb pop xor (bad) movsb pop lcall out es sub push (bad) lret repnz or ja jl add (bad) jae dec jb rcl mov hlt pop dec inc std mov enter icebp dec xchg dec aaa lret add mov jo add inc mov ljmp dec add mov adc stos mov call or inc xchg mov rorl rorl add dec inc popa movsl (bad) pop int3 out out xor dec rcrl pusha loopne sub lret leave cltd jns rorb mov jmp and (bad) cmp or les out xchg arpl loope mov out adc out dec daa inc nop ret or dec xor in sar int3 insb sub jp popf popa adc aad (bad) push inc push mov pop cwtl iret in sbb adc jl cmpsb inc pop add jmp fwait dec lret sbb mov scas icebp or xchg mov mov pusha jno jmp mov lret rclb jae imul xchg dec decb fwait mov or scas fnstsw sub jmp sub jl sysexit sub jmp pop pop int jp scas fstps out test inc shr mov push cltd mov rorl dec push pop int sub mov iret test lds test add jmp pop ret fsts jg rorl pop int xchg pop int rorl lods and in or push cltd mov mov push or push pop jp lea scas fstps ja rorl fstps cmp jmp lahf inc or push (bad) mov inc cltd mov ljmp inc test stc scas fsts cs or pop int pop stc scas fstps in sub pop add in or push cltd mov rorl pop int (bad) stos leave or fsts xchg or fsub add aad lret movsb add or push out test add ljmp cltd mov rorl push rclb inc jg rorl test add inc rorl icebp sbb xchg sbb push jnp mov and repz fisubr xlat in daa xchg insl mov je mov mov push stc add out and mov and add adc pop jp je push dec out inc mov pusha push into bound pop aam (bad) lcall lahf or mov (bad) sub lock into sbb cltd mov jae dec in ja andl xchg pop decb xor dec sbb sub add add ja outsb loopne cli loop cli mov addl inc mov inc sahf inc test shrb test pop in cmp push cmc xor xchg in pusha jo and mov sbb fmuls js jb roll push mov xchg in outsl xchg and inc mov xchg xor cmp mov (bad) jecxz insb adc adc mov je lret xor jp push shl movsb xchg xchg scas push ss xchg into xchg int3 xchg xor and std rcl std add mov mov mov adc movsl es jl add push bsr mov and mov push inc jl out ret andl cmp repz jl cmp push jecxz sbb cmp aad push and lods (bad) ljmp ret sbb jne test sbb in push mov adcb fwait jle mov pop push int3 jnp int push push xchg add adc push jg popf mov or nop push sbb popa aaa icebp into cmc mov aam fcmovbe adc xchg mov inc inc pushf add sbb inc int inc inc loopne cltd ret (bad) pop daa mov xor push pushf xchg or mov fimull imul fsts pusha cmpsl mov adc and push stos sub dec in pop nop xchg inc add fstl gs adc and std sbb gs mov insb push push push push sahf int3 addr16 ja xchg push incl cmp xchg aam add sub jbe or push ljmp cmp dec lods or movsb inc pop outsl add fcoms mov push mov sbb icebp (bad) int3 pop or sub icebp push iret or fsubs jmp inc xor add mov add sbb jae iret mov das xchg dec jge inc outsl push or hlt scas movsb sub outsl jg jg jg jae repz sub xchg cmpb out push mov cld nop cmp and lahf cld stos pop testl pop pop xchg (bad) jns cli (bad) stos into stos flds scas mov 