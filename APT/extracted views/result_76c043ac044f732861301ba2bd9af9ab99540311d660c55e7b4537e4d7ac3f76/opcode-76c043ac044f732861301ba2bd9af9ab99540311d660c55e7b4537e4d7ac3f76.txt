jo or add add dec add add add add sbb add add add lret enter adc add xchg add add add adc sbb add adc push add add jae add or add or add or jae add or sub add or push sub add or imul or add or add or jae add or and adc add or or and adc add add or add push or add or or and adc add add or outsl in add sub add sub xor add add adc sub add or outsl and arpl add lea push or pop pop or outsl and outsl adc add rorb popa rcrl or mov jecxz jae add or jg add or add or sub add or les sbb outsl sub add jne add add add add sub add adc lea add add push push adc sub adc sub add mov adc adc adc adc sub add outsl sub add sub sub add outsl sub push jb add jo add sub add adc push outsl sub add pop jae add or or sbb jo add sub add adc adc sub add pop jae add or or or add or or adc sub or add or or add or or pop adc adc adc mov in or add or add xor add adc jle add or add or adc or outsl add or add or add or add add xor add add add and add or outsl and arpl add lea push or pop pop or outsl and outsl adc add rorb popa rcrl or mov jecxz jae add or jg add or add or sub add or push fistl xchg pop jg pop sbb outsl sub add jne add add add add cmp add sub push adc outsl add or add cmp add outsl cmp add sub add sub add adc pop pop lea add add push adc push shlb add add sub add mov pop adc adc pop pop adc sub add mov adc adc adc adc sub add outsl sub add sub sub add outsl sub push jb add jo add cmp add adc push outsl sub add pop jae add or or sbb jo add cmp add adc adc sub add pop jae add or or or add or or adc sub adc jle add or or add or or cmp add sub add outsl add or or pop adc adc adc mov int or push xchg and sub add sub or add inc add or or add or add or adc or outsl add or add or add or add add xor add add add mov add rolb add add sub add outsl or add jb add jo and add or push jae add or add or pop pop outsl inc add or add or dec or sbb adc or pushf or dec pop and add add or adc add mov fmull sub add add mov xchg add add or or add fimul pop sub pop outsl inc add or jle add add inc add or outsl inc add or add add adc jle add add add add add xor pop mov or add add xor add add add add add or add sub add push fiadd fsubrl or add add adc add sub add add add add add or add add add xchg add sub or pop sub add push add sub add push add sub add push add sub add add sub sldt push sub add push sub add add dec add or into jae add or jae add or jae add or jae add or jae add or sub xor add add add add adc add add push add or add xor add add add add adc add add push add or add xor add add add add adc add add push add or add xor add add add add adc add add pop add or add xor add add add add adc add add pop add or add xor add add add add adc add add add add add jge add add jnp add add rolb add add add add add and mov inc and jno sub add popl add jp add add add add sub add sbb add add add or add add adc add push pop add sbb add or in add jle add add cmp add add pop add sbb and sub add sub and adc and add je add add lea sub xchg add push jp xchg add push orb add or add pop add sbb and sub add push sub add or jnp add jne add add sub and add or cmp add adc add incb push incb (bad) adc and xchg js inc sub add lea or or cmp add sub or sub pop or cmp add sub jle add add pop add sbb and inc add push fsubrl add sub sub add add add or add add jnp insl call add adc add sbb add or (bad) push pop add sbb add or adc (bad) adc push addl push add push add or adc add or add adc add inc add push sub add sub add adc add pop add add add adc sub add sub adc add or add adc add rolb and add xor add add add add adc sub add sub adc add or add adc add inc add push sub add sub add adc add pop add add add adc sub add sub adc add or add adc add rolb add add and add xor add add add add adc sub add sub adc add adc add or mov add sbb add sub sub xor add add add adc (bad) adc push addl push add push add or adc add sbb add adc add jle add or or add arpl add jle add or push add push add or adc add cmpsl add add add add sub add add and add jae add or push add push add add mov addl push je add add add add and testl jmp test add je add add add add and sub add push je add add add add and repz and test add push je add add add add and fwait inc and popa fsubrs test add je add add add add and std (bad) fildll xchg add je add add add add and pop pop gs movsl orl push je add add add add and pop sbb sti sub add adc add and pop insb and mov mov push je add add add add and xor xor hlt sub add push add add and fs mov add je add add add add and and and mov add je add add add add and xor aaa and mov add je add add add add and lret sub add push je add add add add and add inc and push je add add add add and and xchg mov add je add add add add and cmp inc icebp sub add sbb and or and jg sub add push add add and mov xchg add je add add add add and push jae mov stos mov push je add add add add and pop push inc cmp mov add je add add add add and rolb and adcb test add je add add add add and jl dec fsubrl test add je add add add add and cmpsb add sub add push je add add add add and aas fidivr popf pop sub sub add add add add and mov jg sub add add add and push gs in sub add daa add add and push in pop sub add sub add and (bad) sbb add push je add add add add and add insb and sub add push je add add add add and cmc and dec lahf les sub add sub add and mov pop and fdivr fildll mov add je add add add add and sbb stc inc adc test add je add add add add and or dec sub add add add and arpl sub add das add add and jne xchg test push je add add add add pop jge add add and aam add add add and mov add add sub add jge add add pop sbb add push and cmp popf cmp xchg add je add add push add jge add add sub push sub add jge add add jle add or add add jae add push outsl and and add insb xchg sub add inc add add and add push and dec push sub add inc add add push jge add add push jge add add push sub add jge add add jb add jo dec add add adc dec add add sub add jge add add outsl and add sub sbb add and add add add add add add add or jnp add add inc add or or add jnp add fsubrl add add adc add add add sbb or add add xor lods add add add adc sub add add add add rolb add sub add pop sub pop sub adc pop or or imul or sub push sub push sub push sub sub and mov add je add add lcall add add add add sahf add push add sub push sub and dec mov jnp sub add mov pop sub push sub adc add pop add add add add add add add xor add add add and add jae add push or jnp add add or jnp add add outsl arpl add add jge add add jnp add add or jnp add add outsl bound add sub add xor add add adc pop sub sub add adc pop sub pop push pop and pop add adc add push je add add sub fisubrl mov add or or adc xor add add sub add sub add add add add add inc inc add add add sbb add sub add adc jnp add add sub add sub mov add or adc xor add add sub add sub add add add add add sbb add add add sbb add add add add add add jae add push jge add add pop or add ret push sub add push sub add push sub add push push sub add push sub add jge add add jnp add add sub add sub fimul xor mov add fiadd sub add add add add add push push add add add xor add add add add add outsl das add push sub add push sub add add add into add push sub add push push cs push sub add jge add add or xor mov add fiadd sub add add add add cs add add xor add add adc outsl add push or add add add sub add push cmp pop sub add push jge add add add add add add and xchg add je add add jnp add add push add pop sub add push and (bad) push and stos or mov add je add add fiadd add sub add push adc add insb add or fiadd add add add add fiadd add and cmp bound mov xchg add je add add fiadd add sub add push sub add push jge add add add add add add add incb add add add incb pusha cmp add add xor sub add push sub add push sub add push sub add push sub add push sub add push pop add add push incb pop sub pop or and jnp add add pop inc mov add int3 add add add movsl pop add movsl pop add movsl pop add dec add add pop add movsl pop add movsl pop add movsl pop add movsl pop add mov add movsl pop add movsl pop add movsl pop add movsl pop add movsl pop add movsl pop add xchg add add pop add movsl pop add movsl pop add mov add movsl pop add movsl pop add movsl pop add movsl pop add cwtl add add add add add movsl pop add movsl pop add movsl pop add movsl pop add movsl pop add jl add movsl pop add add add add add add add add add add add add pop add movsl pop add movsl pop add movsl pop add movsl pop add movsl pop add push add push add push add push add push add push add push add push add push add push add push add push add push add push add push add push add push add push add push add push add push add push add push add push add push add push add movsl pop add movsl pop add movsl pop add movsl pop add movsl pop add sbb add sbb add sbb add sbb add sbb add sbb add sbb add sbb add sbb add sbb add movsl pop add movsl pop add movsl pop add fldl add movsl pop add and add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add pop add movsl pop add movsl pop add movsl pop add movsl pop add movsl pop add movsl pop add movsl pop add movsl pop add movsl pop add movsl pop add movsl pop add movsl pop add movsl pop add movsl pop add movsl pop add movsl pop add movsl pop add movsl pop add movsl pop add movsl pop add movsl pop add movsl pop add sbb add sbb add int3 add add add add add add add add pop add movsl pop add movsl pop add movsl pop add movsl pop add movsl pop add movsl pop add movsl pop add movsl pop add movsl pop add movsl pop add movsl pop add movsl pop add movsl pop add movsl pop add movsl pop add movsl pop add movsl pop add movsl pop add movsl pop add movsl pop add movsl pop add fldl add cmp jnp add add inc add add add repnz push sub add push or and inc lahf jge push addr16 add push je add add sub add push push xor and mov adc sub add cmp and outsl xchg or or add push je add add sub add push push xor and push jle and test add je add add pop or add and stos adc mov mov add je add add sub add push push xor and or int3 outsl sub addl push je add add and add and js and test add je add add sub add push push xor and xchg and push sub add cmp or add and mov fucomi mov mov add je add add sub add push push xor and sbb or sub add add mov add or mov out and xchg stos sub add sub add push push xor and fstl add push je add add js add or xchg (bad) pop and jmp mov push je add add sub add push push xor and std lea mov addl push je add add inc or add and jp and push pop stos sub add sub add push push xor and shll and jnp sub add add or add or test movsl push and test add je add add sub add push push xor and imul and mov sub add cmp or add and (bad) insl (bad) pop sub add sub add push push inc scas or add mov pusha dec and mov sbb mov add je add add xchg or add add repnz push sub add push or jg add add add add jnp add add sub add add and sub add push sub add push or sub add push or push or add add and sub add push sub add push or aaa or add cmp dec and cmp push je add add sbb pop aas cmpsb sbb add jnp addl push je add add add add and sbb inc and (bad) ljmp test add je add add jmp pop movsb or or test add je add add iret or add jnp add add sbb mov mov dec sbb sub add cmp pop jge add add mov pop push lds xchg inc imull test add je add add xchg add and (bad) or mov xchg add je add add insl or add pop jne dec and mov add je add add push or add dec lcall out sub add cmp or add jnp add add sub or add sub add push sub add push sub add jge add add adc add add jge add add or add sub add push sub add push sub add push sub and mov and je enter add je add add adc jns push lock add je add add (bad) or add cmp shr push sub add jnp add add outsl fisubrl add add and scas mov imul add je add add pop add push or test add and out das and loope movsl sub add cmp add and out mov test test add je add add push or add jnp adc add pop test push je add add aaa or add hlt rcrb (bad) sub add cmp jnp add add jnp add add sub xor movsb sub test add je add add push add sub add push add add add incb pusha sub and mov adc push je add add int add add add add add jnp add add jnp add add adc add sub add pop fisubrl sbb add jge add add jnp add add jnp add add stos imul cld pop sub add push add sub add push sub add jge add add mov and (bad) daa push sub add sub jb add jo jb add jo cmp add add add add sbb cmpsb cld ret mov es test add je add add es add and lods stos dec and (bad) sub add cmp add add add add sbb cltd ret (bad) and ret sub add add ljmp pop dec and movsb push cwtl sub add cmp push add add add repnz push sub add push or and mov push xor add je add add sub add push push xor pop sub add push or and jp and cs sub add sub add push push xor sbb add add or and dec je out pop pop sub add sub add push push xor sbb add add or and jae fwait and lret sub add sub add push push xor sbb add add or and cwtl xor ljmp mov add je add add sub add push push xor sbb add add or and cmc into inc and add push je add add sub add push push xor sbb add add or and pop dec pop and movsl mov add je add add sub add push push xor sbb push or and add stc sub add sub add push push xor push sub add push or and xor add push je add add sub add push push xor pop or add add or and mov mov mov add je add add sub add push push inc push add add add or inc add pop add add add add or push adc sbb add add add add roll add or mov push xlat imul sub add sub add push push xor push and repnz mov add je add add and mov mov add je add add sub add push push xor push mov push je add add and pop add stc shrl test add je add add sub add push push xor outsb and test add je add add and repnz cmp add je add add sub add push push xor pop and test add je add add and gs adc je add add sub add push push xor dec and push jmp test add je add add and add inc and mov add je add add sub add push push xor sub adc test add je add add and ror and test add je add add sub add push push xor pop and xchg add je add add and fwait mov and adc fldt test add je add add sub add push push xor and int mov add je add add and stc (bad) out sub add sub add push push inc lock add fisttp or add push je add add (bad) add add jnp add add lret add add and pushf xchg add jo sub sub add add sub add push push xor sbb fadds test add je add add and cwtl fldenv sub add sub add push push xor sub mov inc in addl push je add add and aam jnp movsl sbb add push je add add sub add push push xor sub jle std mov addl push je add add and imul sub add sub add push push xor sub std sub add or mov repnz sub mov push je add add sub add push push xor and jg fnstcw sub add or push test pop and (bad) fildll xchg add je add add sub add push push xor insl and into repnz add or stos arpl cmp imul add je add add sub add push push xor cmp xor mov add je add add and icebp xchg js push xchg add je add add sub add push push xor pop and or sub add or xchg pop leave dec and sub add sub add push push xor sbb jmp sub push je add add and rorb lds add push je add add sub add push push xor sub push jl cmp mov add je add add and mov inc and add push je add add sub add push push xor adc adc xchg fisubr mov add je add add and jl and (bad) leave (bad) sub add add sub add push push xor pop and xchg add je add add and loop and sub xchg add je add add sub add push push xor jae aam jg sub add cmp and add add add add add xchg add add add mov inc push add add add inc add add add add add add add add add add imul and int3 jge mov add je add add push and inc stc rcr sub add sub and push and push jbe xor addl push je add add and jnp add add adc popa and cmp push je add add push jge add add add add add sub add jge add add jb add jo sub add push push add jnp add add into add push add add sub add or pop sub add add and add or mov add fiadd push sub add add adc add adc add pop add add add sbb add pop add add add adc mov push pop sub add push sub add sub add push push sub push sub add push push and popa dec dec movsb sub add sub add push sub add push sub mov or xor mov add fiadd sub add add add add add push push add add add xor add add adc jnp add add and add sub add push add add add xor fs and fwait mov sub add sub add push push and or add and add add add push sub add push and xor add add add add sbb add push and mov repnz push je add add push add push sub add push push xor add jnp add add (bad) scas push sub repnz lahf sub add sub add push push cmp add add pop add push add add add sub add push push cmp pop add push and push and xchg add je add add push add sub add push sub sub add and (bad) pop mov mov add je add add push add sub add sub add and aam insl imul add push je add add push add sub push sub push add add add cmp add sub add add add inc add push sub push add add add inc add push add add add dec add push sub pop and add add xor add sub add push sub add sub add and ret and mov into sub add push add sub add adc push sub add adc push sub add fimul xor mov add fiadd sub add push sub add or add push and mov test add je add add push add sub add push sub pop sbb add push and fidivr sub add push add sub add pop sbb add push and lock jo sub add add push add adc sub add sub push pop sbb add push and call std cmp add je add add push add sub add push sub pop sbb add push and jbe sarl add push je add add push add sub add pop sbb add push and fmuls inc pop sub add push add sub push sub push add add add add aas adc xchg pop fildll mov add je add add add push jge add add add jnp add add inc shll and pushf push mov test add je add add add push jge add add add jnp add add sbb sbb lcall add je add add add push jge add add add jnp add add jecxz jb and xchg add je add add add push jge add add add jnp add add cmpsl xlat mov inc (bad) sub add add add push jge add add add jnp add add sahf movsb clc sbb adc xchg add je add add add push jge add add add jnp add add mov sar out sub add push add push jge add add outsl aaa add push sub add outsl push add push jge add add add add push jge add add (bad) sub push sub add add add push jge add add add add push jge add add (bad) sub pop sub add and add jae add or cmpsl add push or push sub add push sub add add add jae add or cmpsl add push or push sub add or arpl add add add jae add or cmpsl add push or push sub add pop sub add add add add dec fstps and and sub add sub add push push cs add push sub add add jae add or cmpsl add push adc adc sub add add add jae add or cmpsl add push adc adc sub add add add jae add or cmpsl add push adc add sub add adc arpl add add add add lock and aas icebp and mov add je add add sub add push push cmp add add and into adc nop test add je add add add add and sbb xchg add je add add add add outsl xor add add jge add add jnp add add in (bad) jle dec jnp sub push je add add sub add push push cs dec add push jae add or cmpsl add push adc adc push sub add adc sub add sub jnp add add or movsl sbb sub mov add je add add sub add push push cs dec add push jae add or cmpsl add push adc adc push sub add adc sub add sub add add jae add or cmpsl add push adc or sub add adc arpl add add add add ja popa jo fimull add push je add add sub add push push or outsl and add outsl add push add add add sbb add push and jb pop jge push mov add je add add push add push sub add push push xor add jnp add add and dec and lcall push je add add sub add push push cmp add push adc add rorl jp add addl push je add add add adc push adc cmp add adc adc lcall add push sub add push cmp add add or adc and daa inc cmp je test add push je add add add adc adc push lcall movups pop lcall dec cli jnp sbb xor push je add add sub add push push xor pop add push and loope dec and aam loopne mov add je add add or push adc sub add adc sub push sub add and and push and (bad) pop sub add or push adc sub add sub add fisubr add push and mov (bad) jle sub add or push adc sub add adc sub push sub add and rcl cwtl subl add push je add add or push adc sub add sub add fimul and push adc sub add pop pop (bad) adc adc adc mov incl outsl aaa add push cmp add add add add xchg xor jl pop sub add sub add push push cmp add add adc add add add xor adc xlat push popa test push je add add add adc push adc cmp add add and and sub add push sub add push cmp add add adc (bad) adc sub add push sub add and fldt imulb das xchg sub add adc push add sub add and fwait inc and xchg add je add add adc add add and cli cmp xor test add je add add jo add sub push and adc arpl add push je add add adc push add sub add and repnz jae fidiv add push je add add adc add add and sub fldt test add je add add jo add sub fimul xor mov add fiadd adc pop (bad) adc adc adc mov incl outsl aaa add push cmp jnp add add addr16 ljmp sub add sub add push push cmp add add add add mov daa movsl push imulb mov add je add add add adc adc sub and and sub add push sub add push sub adc and sbb push je add add adc push sub add fimul xor mov add fiadd adc pop (bad) adc adc adc mov scas add add add dec enter rcrl lods sub add sub add push push cs pop and add push sub add sub pop and add push sub push adc adc push sub add fimul xor mov add fiadd adc adc xor add add add les in or daa andb mov add je add add sub add push push cmp add pop sbb add push and adc pop shll xchg add je add add push add sub add cmp or add sub add pop sbb add push and imul add push je add add push add sub outsl add or daa cmp add adc outsl jo add adc sub add push sub add adc sub outsl add or sub cmp sub add or sbb sbb xor push data16 mov add je add add or add sub adc sub add fimul xor mov add fiadd adc outsl jno add sub sub adc outsl inc add or adc outsl jno add cmp (bad) (bad) fimul daa sub adc outsl inc add or pop sbb add push and iret (bad) lahf sub add push add sub push adc sub adc adc lcall imul fsubrs and test add je add add or add sub adc sub add fimul xor mov add fiadd adc pop (bad) adc adc adc mov and add pop outsb mov and rcll push je add add sub add push push cmp and push and inc add das fisub sub add push add adc adc sub add adc add add add out or or add push je add add add adc adc sub adc sub adc or add sub pop add push and jnp inc and test add je add add sbb pop add push sub add adc pop (bad) adc adc adc mov mov add push sub add jnp add add insl adc pop (bad) sub add sub add push push cs add add push add add add test and aas sub add sub add push push and and add jae add or cmpsl add push adc pop add push adc push ficomp and push adc adc sub add push push adc sbb add sub add add inc cmp add add add add add add add add add add add add fadds add sbb add repnz add add add add add add add add add add add add add add add add add testb add add add add add add add add pushf or add add add add or add add add add add in or add add add or add add add add add add je add or add jge add or add add add add add imul add add add add add add add add add sub add pusha add add add add add add add add or add or add add add add add add or add add add add add add dec or add add or add add add add add push add add or add push add add add sbb add loope add sbb add pop sub add and add insb and mov add je add add push add adc add out nop pop and mov add je add add push add or and jno pop and out cli sub add add push add or add sahf fnstcw and out mov sub add add push add or and xchg xor (bad) nop icebp sub add add lea add or adc sub or pop lcall add push adc pop (bad) adc adc adc mov cmp add sub push sub add pop sub add push sub pop sub add fimul and push adc sub add add add adc add add add roll (bad) add add xor add add add add add xchg add push sub pop mov ficom sub mov sub add sub add adc add add add add add xor add add sbb popf add push or adc or or add push pop sbb or sub xor pop sub pop (bad) or mov fistl sub add add sbb add add outsl cmp add add sbb add add outsl cmp add add pop add push outsl cmp add sub add adc add js add add add add add add mov out icebp dec sub add sub add push push cs add add add sbb add push and xchg and or insl sub add push add push sub add push push xor sub add add add xlat cmp or fs mov add je add add pop adc test sub xor add add adc jnp add add lods add push and add add dec in inc pop sub add jecxz add sub push and pop (bad) ss sub add add and and and xchg add je add add mov push add add add push imul add push je add add sub add push push cs and pop (bad) or cs adc test add je add add daa imul cmpsl gs xchg add je add add add bound jno and sub add sub add push push cs and inc fmull lret leave sbb sub add sub dec and out repnz add add add add out cmpsl outsb and mov add je add add sub add push push sbb pop and inc push scas sub add add loop adc xor (bad) lcall add add add add or or and push sahf jbe icebp push cmp sub add adc pop sub add push sub adc sbb test adc lds test add je add add jnp add add adc sbb jmp and and xor jmp mov add je add add mov pushf arpl and addl push je add add mov mov mov lret sub add adc pop or add adc pop or sbb xchg and cmpsl sub add adc pop or add or dec mov je sbb mov add je add add sub add push sub add push sub add push sub adc pop push and mov mov add mov add je add add sub add push sub add push sub add push sub add push mov and movsb stos data16 test add je add add sub add push sub add push sub add push mov and add and mov add je add add add add add adc pop adc or dec add or xchg add je add add add add add adc pop push and sti pop and and mov add je add add add add add adc pop sbb sub pop dec and test add je add add add add add adc sub add push or outsl aaa add push cmp add add add add in ljmp adc push je add add sub add push push cmp add add add add rclb pop and cmp add push je add add sub add push push cmp sbb adc adc push and or and mov add je add add or add sub adc sbb xchg stc lock and and sub add adc sbb push mov adc das mov sub add adc sub add push or add push (bad) sub pop sub pushf add add jnp add add push cli jecxz and (bad) sub add sub add push push cmp sbb adc adc push and jl imulb test add je add add or add sub adc sbb mov and pop pop sub add adc sbb push mov lahf push cli xor cmpsl stos cmpsb jg addl push je add add add push or add push (bad) add add push adc sub in add add stos add push adc add add add scas add push adc adc add add add mov add sub add push adc sub add push add add add out add adc and push stos mov sub add or add sub or pop sbb jg cmc (bad) sub add pop add push sub add push adc or in add push adc add add add and add sub add push adc add add add movsl dec dec or push pop decb sub add sub add push push add sub push sub add push adc add add add jnp add add mov add sub add push adc adc sub add push fimul xor mov add fiadd sub add sub add add adc add add aas add mov adc add add enter add add xor add add adc aaa sub and xchg add je add add sub add push sub add push push and int and test add je add add mov cltd sub push je add add sub add fimul and push or mov add fiadd sub add add add add push push add add add sbb add and add and add add mov push and or add fimul and push or mov add fiadd sub add add add add adc add add add sbb add inc add add add adc or add or add add or add push sbb add add sub add and pop push in pop lcall add push add sub pop and push movsl sub add sbb add pop and mov and adc push je add add sbb add pop and mov and mov add je add add sbb add pop sub add fimul pop sub pop outsl inc add or sub push push sub add and test xchg pop xchg push sub add push add pop sub add push push sub add and movsb mov xor xchg add je add add push add sbb push push sub add and aas dec and roll add je add add push add sbb push fimul xor mov add fiadd or (bad) or or (bad) jmp mov add sub add push cmp (bad) (bad) incl add add add inc add add add cwtl add add add add add add add add add add add add add adc add add add adc sbb add push and lahf mov cmp mov add je add add push add sub add push cmp pop add push pop sbb add push and fdiv xchg add mov add je add add push add sub add jle add or pop and and jae mov add push je add add sub add push or and or jg stos xor sub push je add add sbb add push and ss fs xchg test add je add add push add pop sub add sub add xor add add adc ret add push or movl add add push lea push or xor add add add push sub add push adc adc push adc push push sub add push pop adc sub add pop sbb inc add push pop sub add adc add adc xor add adc add mov jae add sub add or or (bad) sub or mov add fiadd or add add add add adc arpl (bad) add add xor add add sub add push or movl add add push lea push or xor add add add push sub add push adc adc push adc push push sub add push pop adc sub add pop sbb inc add push pop sub add adc add adc xor add adc add mov jae add sub add or or xor or mov add fiadd or add add add add adc arpl (bad) add add xor add add adc jnp add add xchg add push and add and test add push je add add push add push adc inc jns and add add push je add add lea add add pop push add fisubl cmp mov mov add je add add adc lea or pop pushf or push pushf or push add push or nop sub or lcall or add sub pop add push je add sbb or add add or add add xor add add adc sub add jge add add call xor add add jb add jge add add rolb add sub add push add add jae add or cmpsl add push or push sub add or arpl add and daa add sub add push add add jae add or cmpsl add push or push sub add pop sub add and daa add sub add push and bound rol mov add je add add lea add or pop ficoml push adc wbinvd adc sub add (bad) adc add push xor and xor add and mov bound fldcw xchg add je add add jb add and pop cmp dec incb sub add push add sub add push cmp aad pop and dec push sub add jb add and (bad) and push inc js xchg add je add add push add sub add sub add push sub cltd std jne and mov add je add add pop add push sub add and (bad) (bad) pop fsubrl mov add je add add jb add and inc insl and rcr fildll xchg add je add add push add sub add and loopne and mov add je add add push add sub add fimul and push adc push fiadd add add jae add or cmpsl add push or push sub add push sub add sub add inc sbb add add add add aaa add add add add add sbb or addb add add adc jo add sub inc pop jge and aam cmp mov add je add add push add push adc lret inc and stc mov add je add add lea add add pop push add add add pop pop pop and push and scas push cmp cwtl xor xor test add je add add pop adc mov push je add add mov pop sbb imul and divl push je add add jnp add add into mov test sub add pop add push mov adc lea or pop pushf or push pushf or push pushf or sub add or nop sub add push lcall or add sub pop add push je add sbb add add add add add xor mov and test add je add add push add outsl inc add push add jnp add add movsb dec add enter sub add push add sub add jge add add jnp add add fsubrs notb push je add add push add sub add fimul and push or mov add fiadd sub add jno add jno add push add add add sbb or out or add add adc jnp add add stos add add pop sbb adc lahf outsb sub and test add push je add add or add sub adc cmpsl arpl jo std sub add add or add sub add push sub add push sub adc arpl fdivl add je add add or add sub add push sub add push sub add push mov push jns push and cwtl sub add adc add sub add mov cli xchg mov and adc sub add adc add push sub add push sub add push mov and repnz and imull sub add adc add push sub add push sub add push mov and and push rorl sub add adc add push sub add push sub add push mov and cmpsl dec and jge ljmp add adc push add add adc and inc and pushf pusha sub add adc inc add add adc sbb inc in sbb push je add add add add add adc mov es xor add push je add add add add add adc jl adc cld fnstsw add je add add add add add adc adc adc sbb xchg add je add add add add add adc mov sbb add push je add add add push jge add add mov add sub add push sub add push sub or je adc pop je sub add xor (bad) push and test add je add add mov add add push cmp add add jnp add add push xchg xlat pop and fwait adc test add je add add sub add push push cmp sbb adc pop leave notb xchg sub add adc add sub adc inc pop and adc add push je add add mov or aad add test add je add add add push add add add dec add push fldl sub add mov add (bad) add add add add lds and sub shrl mov add je add add sub add push push cs add jl in mov push je add add or add sub fstps (bad) sub add pop add push add add add push add push fldl add and push adc push (bad) add add stos add push adc add add add scas add push adc adc add add add mov add sub add push adc sub add push add add add out add adc and sub and mov add je add add or add sub mov sysexit cwtl adc mov add je add add pop add push sub add push adc add add add in add push adc add add add and add sub add push adc add add add cmpsb add pop and or sub add add sub add push push add sub push sub add push adc add add add jnp add add mov add sub add push adc adc sub add push fimul xor mov add fiadd sub add sub or pop mov add push je add add push add push adc sbb jo cmp push je add add lea add add push adc push add add add adc pop pop and push and mov shlb adc push je add add xchg lea xor sub add mov adc sbb pop hlt imul mov add je add add jnp add add xor mov and push cs push je add add pop add push mov adc adc sbb adc adc push pop pushf adc pop push pushf adc sbb pushf adc pop sub add adc push nop sub add movhps push rorb add sub pop add push je add sbb add add add add add mov dec pop and sbb test add je add add push add outsl inc add push add jnp add add xor xchg xor je add add push add sub add jge add add jnp add add mov fmull sub mov add je add add push add sub add fimul and push adc sub add pop sbb adc jge fldcw and xchg add je add add or add sub adc icebp popa and xchg stos pop sub add adc add sub add push sub add push sub adc cmpsb pop and xchg add je add add or add sub add push sub add push sub add push mov fmuls je xor test add je add add arpl add sub add mov fiaddl inc and mov add je add add sub add push sub add push sub add push mov and data16 and insb sbb xchg add je add add sub add push sub add push sub add push mov and fistp add push je add add sub add push sub add push sub add push mov and je and test add je add add add add add adc xchg decl rclb add je add add add add add adc fnstcw and addl push je add add add add add adc clc (bad) and out push cmp push je add add add add add adc sub push and jo sub add adc push add add adc (bad) push sub rcr sti aaa sub add adc push add add adc mov sbb sub add adc push jge add add mov add sub add push sub add push sub push and jno inc pop sub add in int push and push sub add mov add add push cmp add add jnp add add xchg and add push je add add sub add push push cmp sbb adc fsts pop or add je add add or add sub adc imul pop sub add adc or in pop and inc je sub add adc push add add add dec add push fldl sub or mov add (bad) add add add add faddp test and xchg add je add add sub add push push cs add andb hlt xor xchg add je add add or add sub rorb lock call xchg add je add add pop add push add add add push add push fldl add and push adc sub repnz add stos add push adc add add add scas add push adc or jnp add add mov add sub add push adc sub add push add add add out add adc and add and movsl add sub add or add sub (bad) lock and push mov test add je add add pop add push sub add push adc add add add in add push adc jnp add add and add sub add push adc jnp add add mov hlt pop and add push je add add sub add push push add sub push sub add push adc jnp add add jnp add add mov add sub add push adc or cld add push fimul xor mov add fiadd sub add add add add mov add add add adc add add add add add imul add mov add adc add add add add add ret add add add add add add add add add mov add jg add xor add sldt add add add add icebp or add add insb or add add add add add add mov add add or add add add add add add sti or add add add or add add add add sbb add xor add sub add sub add push or add imul push adc add iret add push or sub add or sub mov add fiadd adc push sub add adc add add add and or add add xor add add add add adc or and sub add or sub add pop or or xor mov add fiadd sub sub add push push incb push push incb pusha sub adc add add adc add sbb add add add adc jnp add add xor add add add push cmp add add jnp add add cmpsl ja js pushf jge pop sub add sub add push push jae,pn pop add push sub add push sub lret loop outsl and (bad) mov add je add add pop add push sub add push sub add pop add push sub add push sub dec and and pop or mov add je add add pop add push outsl dec add push fnstsw add and push or mov add (bad) add add add add sub imul pop sub add sub add push push cs add pop add push and inc imul cmp add push je add add push add sub add push cmp stos add push or jnp add add scas add push or add add add mov add sub add push pop sub add push add add add out add pop and adc rorb sub add or add sub jnp adc and sbb and push je add add pop add push sub add push pop and pop mov and jg sbb push je add add in add push pop sub push sub add and adc inc stos mov add je add add push add sub add push outsl je add or dec add add lock push or jnp add add or push and mov add je add add sub add push push add sub push sub add push or jnp add add jnp add add mov add sub add push or sub add push fimul xor mov add fiadd sub add add add add cmp add bound add fwait add add add add add add add cld add add add add add add add sbb add add add add imul push or xlat add push or push sub add pop sbb mov add push adc ficoml (bad) lea or push mov add or sub add push adc or add fimul add outsl inc add or sub add push or dec add push or sbb sub or add or fimul xor mov add fiadd adc push sub add add add add inc add dec add add add add or add add add add add add add xor add jnp add add xor add add add push cmp add add jnp add add fsubrs dec and mov add je add add sub add push push arpl sbb add push and mov test add je add add push add sub add push sub add sbb add push and lods pop std adc mov add je add add push add outsl dec add push fisttpll sub sub jns add add add add cwtl scas in and scas cmp push je add add sub add push push cs add sbb add push and mov xchg add je add add push add sub add push cmp add add stos add push or jnp add add scas add push or add add add mov add sub add push pop sub add push add add add out add pop and fsts dec and mov add je add add or add sub sub lcall sub add pop add push sub add push pop and push and sub mov add je add add in add push pop sub push pop sbb add push and push and mov push je add add push add sub add push outsl je add or jnp add add and add sub add push or jnp add add jns dec add sbb shrb mov add je add add sub add push push add sub push sub add push or jnp add add jnp add add mov add sub add push or sub add push fimul and push or push fiadd sub add add add add cmp add push add add add add add add add out add add add add add add add add add adc add addl add add add add scas lcall lahf sub add sub add push push cs sub push adc push adc sub adc adc lcall push adc or cmp adc inc sub add sub add push push xor pop sub or (bad) adc adc adc mov sub add clc mov cmp cmp sub add sub add push push cs sub or push push adc adc xchg add push adc adc and xchg js mov push je add add sub add push push xor or xchg add push adc adc xor add jae adc and pop sub xchg add je add add sub add push push cs sub add add adc adc sub adc adc sub adc and (bad) pop and lods lret xchg add je add add sub add push push xor adc push adc pop (bad) adc adc adc mov add add gs sbb jno pop or addl push je add add sub add push push cs sub push adc adc adc sub adc adc sub adc xor (bad) fwait std push sub add add sub add push push xor adc sub adc (bad) adc adc adc mov mov add fdivrp dec inc and test add je add add sub add push push cs sub or or pop push adc sub pop adc lcall add push adc adc and sub xchg inc sub add sub add push push xor adc sub push pop (bad) adc adc adc mov and lods push cmp sbb jmp mov add je add add sub add push push cs add add push and add add xor add cmp (bad) incl add sbb push add add das add adc jnp add add and add sub add push add add add incl add sub add push cmp add add outsl aaa add push cmp add add jnp add add add add push add add add push adc sub stos add push or jnp add add scas add push or add add add mov add sub add push push sub add push add add add out add push and hlt lock and xchg add je add add or add sub mov or and mov add je add add pop add push sub add push push and xchg sbb jae mov add je add add jnp add add lahf mov js lret ja call push je add add jnp add add jo add sub add push add add add out inc jbe outsb (bad) mov sub add sub add push push cmp add sub add and fidivl sahf jbe xchg add je add add push add sub add sub add and add sub add push add sub adc or add sub cmpsb add push adc adc sub add sub add push sub cmpsb add push adc adc sub add sub add sub add push sub cmpsb add push adc adc sub add sub add push sub cmpsb add push adc adc sub add sub add push or add or adc push push sub add adc adc push push sub add adc adc scas add push or pop add push and push and mov add je add add jnp add add add add and mov mov add je add add jo add sub sub push sub add and sbb mov add je add add jnp add add add add and cli xor and test add je add add jo add sub add push outsl je add add jnp add add (bad) jge add add add add add and add sub add push pop add add add inc and popl sub add add sub add push push add sub push sub add push pop add add add jnp add add mov add sub add push pop push sub add push add add or add add jle add or add add push sub mov add ficom adc sub fimul adc push fdivrl int3 cld (bad) incl add add add dec add add add add add add add add add add add dec add add add add add add add add add add add add add add add add add add add add xor add add adc or jnp add add and add sub add push add add add incl add sub add push cmp aaa add push cmp add push pop (bad) or jnp add add pop adc sub jnp add add or or cwtl add push and xchg mov in mov add push je add add jnp add add pushw cmp push (bad) jge xchg add je add add jnp add add jo add or jecxz add sub pop and int and mov mov mov add je add add (bad) lret and inc in sub add mov add add or or and adc and adc push je add add sub add push mov jae xor push pop (bad) scas sub add adc sbb or add sub adc sbb push sbb and push sub add adc sbb mov mov iret and clc xchg sub add adc sub add push or add push add add add int cwtl cmp stos ret sub add sub add push push cmp add add pop add push and cwtl cmc dec and test add je add add push add sub add sub add and jb and mov add je add add push add sub adc sub add push sub cmpsb add push adc adc sub add sub add push sub cmpsb add push adc adc sub add sub add sub add push sub cmpsb add push adc adc sub add sub add push sub cmpsb add push adc adc sub add sub add push adc add push adc add adc push sub add adc adc push sub add adc push sub add add adc adc push sub add mov lea and inc scas inc xlat sub add add jnp add add add add mov orl and and sub add adc sbb or add sub adc sbb int3 jl jns insl xchg out pusha sub add add add push sub sbb add or or sub add mov sub jb icebp paddw test add je add add jnp add add add add mov mov sbb aas push add push je add add or add sub adc sbb adc cmpsl mov add je add add add push outsl dec add push add jnp add add (bad) jge add add jle add or add add jle add or add add push sub mov add ficom adc sub fimul adc sub cmp (bad) incl add add add push add add add add add add add add add push add add add cltd add add add add add add add add add pop add add add add add add xor sahf add add add adc (bad) xor sbb xchg sub sub add jnp add add push xor or sub add sub add sub jns add or add add add jnp add add mov add sub and into push and mov add je add add mov sub add push or sub add push or add movb push fimul or or add or pop sub add pop sub add sub add adc add add or add adc add fwait add add add adc sub sub pop hlt fcmove sub add jnp add add mov cltd push dec js mov add je add add sub add sub add sub jns add or add add add jnp add add mov add sub and sbb cmp (bad) sub add mov sub push or sub add push or push push push mov push or ja add or js add sub sbb add add add adc or jnp add add and add sub add push add add add incl add sub add push cmp add add add push cmp add push pop (bad) or jnp add add add add cwtl add push add add add add add push and xchg lret cmp imull mov add je add add jnp add add inc and add imulb add push je add add jnp add add jo add or jecxz add sub pop and cwtl sbb xor fidivrl add push je add add sarl stos push and mov add push je add add mov add add push adc push and scas or lock add adc pop push sub add push mov push pop cli push and cmp add je add add or add sub adc sbb inc push push jl jnp subb add push je add add mov nop push mov xchg sub add adc sub add push or add push add add or add add jle add or add add push sub mov add ficom adc push (bad) or add cltd add push fdivrl insb (bad) (bad) incl add add add add push add add add add add or add add add add add push add add add add add or add add add add add inc add add add add add add add xor add add sub add push or sbb or push add add add pop pop and cmp pop in arpl mov add je add add pop sbb test and loopne xchg add je add add pop sub add push sub add push sub add xor add jnp add add push sub push lea pop push add add add pop pop and fstp dec and and jg addl push je add add add push sub pop sbb jg fisubr and add mov xchg add je add add add push mov add push sub add push sub add push mov add push mov add push mov add jge add add pop push sub sub adc add add pop add add sbb add add add adc out add or movl add add pop and adc or xor add add add push sub add push adc adc push adc push pop adc add push adc push adc pop nopl sub add push push adc sub add push push sbb inc add push push sub add adc add adc xor add adc add mov jae add sub add or or (bad) sub or mov add fiadd pop sub add adc add add add add add add sbb add ja add aaa add adc add imul push sub add push or add push add push or add push push sub add push adc sub add push pop push mov (bad) lea add push or fild add mov jecxz add adc sub add push adc out add or sbb add pop adc inc add or fimul or or add or pop sub add add add or add add add add add add add adc add test add cmp add add xor add and gs jns sub add add push sub add push or out add or and add add jmp add push or sub add push insb and add add add inc pop sub add push mov clc add push sub add push push or sub add push insb and add add add inc pop sub add push mov clc add push sub add push push sbb cld add push push sub add adc add sub add adc nop add push or or sbb pop lcall push add or add sub push sub pop (bad) or or add add xor add add cmp add sub add sub add push sub add or or lcall push sbb pop pop sub add sub pop (bad) or or sub xor add add adc sub add push and int and xchg add je add add into add push and pop (bad) out sub add (bad) iret stos pop and cmpsb ljmp mov add je add add add push and push adc jae pop jno test add je add add mov sbb addl push je add add mov incl add sub adc add aas add add add adc add sub add push add adc add (bad) or add adc add ficoml add or add add or adc add or add or fisubrl mov add sub sbb add mov add adc jp mov mov add je add add pusha add push and movsb pop and pop subl add push je add add pop add push and mov and pop jle test add je add add testl sub add or sub add push adc sub adc sub add je add add add add pushf lods add and mov add je add add and push sub add or add push sub push sub adc outsl inc add or or fimul and push adc push fiadd push sub add sbb add add inc cltd add add add add add add add xor mov add adc cmp dec sub add pusha add push and scas leave jnp lods (bad) jbe sub add pop add push and inc mov pop out cmp mov add je add add testl sub add or sub add push adc sub adc sub add je add add add add sub mov orl add add and push sub add or add push sub push sub adc outsl inc add or or fimul and push adc push fiadd push sub add sbb add add inc cltd add add add add add add add add add add sub add push je add add add add add add add add add sub add push je add add add add add add sub add add sti add push sub add add xor push sub add jge add add add sub add push add add add pusha add push sub xor mov add adc sub add and add add push add add add add add jb add jb add jb add xor add sub jnp add add pop sub pop add add push add add add sub add add jnp add add jl add sub add sub add jnp add add add add mov push add sub or add add push add add add sub add add jnp add add jl add sub add add sub add add add push sub xor add add add adc add add sub add push sub and call xchg add je add add push add add and cmp incl add or or add leave add add add adc add push add add add adc add add add push add sub xor add add add add sub add and fcoml imul je add add add add inc add push sub add or je add sbb adc add xor add inc add adc insl add push and je sub mov popf in sub add add add add inc add push sub add or je add sbb adc add xor add inc add adc insl add push and adc and lods stos mov addl push je add add add add inc add push sub add or je add sbb xchg jae add push sub add je add add sub add push sub add or add add add add jge add sub or add sub add sub sub add sub add sub xor add add inc add adc add add jle,pt add add pop sub sub int3 add add sbb or add adc push jne add jae add or push add push pop or add pop pop sub jle add add add adc add add add add add xor add add add add sub add sub add add push add or adc or push add add adc push add push sub add or sub add and lret cli sbb dec lds add je add add or add adc adc cmp popa add push push sub add sub add push and lods (bad) pop and sbb sub add push add or pop add push sub add and mov test add je add add pop add push and add add push je add add imul push and inc adc add push je add add insb add push adc adc sub add adc add push es adc sub add adc or or pop cmp addb push adc adc (bad) sub add adc adc adc push (bad) sub jg add pop inc lea or lea add add or adc adc sub add push adc adc push sbb adc adc adc or or addl sub mov add (bad) ret add add pop push and add add xor add jno add add sub scas add add or (bad) xor add jno add add adc outsb push push sub adc sbb jg add adc adc sub add cmp add adc push (bad) xor add jno add add add push outsb push push pop add add or (bad) xor add jno add add pop or add xor sub jg add adc adc or add push (bad) sub jg add adc and xor add inc sub add adc adc push (bad) xor add jno add add or adc or jns add or ficoml sbb adc addl lea invd adc clc add add adc pop sub (bad) adc push pop sub aas add push adc sbb xchg add add adc adc sbb mov push adc push (bad) xor add jno add add sbb or addl sbb or sbb adc pop adc mov or pop adc sub add or adc adc adc jbe,pt (bad) call or (bad) xor add jno add add sbb pop sub sub sbb or addl add push adc sbb jg add adc adc sub add or or addl add sub sub mov (bad) xor add jno add add sub push adc pop (bad) xor add jno add add jge add sub add xor add add add add sub pop outsl addl or outsl sub add outsl addl or outsb pop popa insl or xor adc popa or dec adc sti fwait dec adc push add add and (bad) incl pop push bound and add lcall sbb or incl add pop pop inc pop adc adc push aaa dec adc pop adc adc and incl add or add incl pop pop adc data16 add add pusha adc add pop pop pop adc adc add inc ja pop or add pop pop adc inc adc pop and adc and add add bound and (bad) incl pop push or (bad) incl add popa popa adc add pop and adc add imul pusha or add pop pop and inc adc pop xor incl add pop or add incl pop pop adc data16 add add pop adc add popw xor adc add inc ja popa or pop xor inc adc pop inc xor adc and add add adc incl add pop pushaw or add incl pop pop popa adc add pop popa adc pop pop adc add imul pop or adc adc pop inc inc mov add or add add or add add or jge add jle add add adc sub add or add add inc add or or or add or or outsl xchg add adc outsl xchg add adc adc adc outsl inc add or add or or or adc fild add fsubrl mov add pop outsl daa add or add or add or (bad) add pop pop outsl addl or mov add adc or or xor and pop adc rcll push adc add adc adc adc adc adc push adc sub or adc and add or adc add add pop adc adc pop xchg popa shlb adcl adc pop and add add adc adc addps add add pop rcll adc adc pop adc adc adc mov mov xor adc push sub add add sub or ret add add adc or sub movb add sub or leave add add adc or sub add or sub adc pop push xor adc push sub movl adc or arpl or or or add or jle add add or outsl popl add push sub add adc add add add clc add add add sbb push add add add add sub pop outsl addl or outsl sub add outsl addl or outsb pop popa insl or dec mov or inc adc cld rcrb push cmp add or (bad) (bad) incl pop push bound and add lcall sbb or incl add pop pop inc pop adc adc push aaa dec adc pop adc adc and incl add or add incl pop pop adc data16 add add pusha adc add pop pop pop adc adc add mov popa pop or add pop pop adc inc adc pop and adc and add add bound and (bad) incl pop push or (bad) incl add popa popa adc add pop and adc add stos mov pop pusha or add pop pop and inc adc pop xor incl add pop or add incl pop pop adc data16 add add pop adc add popw xor adc add mov pusha popa or pop xor inc adc pop inc xor adc and add add adc incl add pop pushaw or add incl pop pop popa adc add pop popa adc pop pop adc add stos mov pop pop or adc adc pop inc inc mov add or add add or add add or jge add jle add add adc sub add or add add inc add or or or add or or outsl xchg add adc outsl xchg add adc adc adc outsl inc add or add or or or adc fild add fsubrl mov add pop outsl daa add or add or add or test add pop outsl addl or mov add adc or or xor and pop adc rcll push adc add adc adc adc adc adc push adc sub or adc and add or adc add add pop adc adc pop xchg popa shlb adcl adc pop and add add adc adc addps add add pop rcll adc adc pop adc adc adc mov mov xor adc push sub add add sub or ret add add adc or sub movb add sub or leave add add adc or sub add or sub adc pop push xor adc push sub movl adc or arpl or or or add or jle add add or outsl popl add push sub add adc add add add clc add add add sbb push add add add add sub pop outsl addl or outsl sub add outsl addl or outsb pop popa insl or add pop push or and add in stc push adc push add add and (bad) incl pop push bound and add lcall sbb or incl add pop pop inc pop adc adc push aaa dec adc pop adc adc and incl add or add incl pop pop adc data16 add add pusha adc add pop pop pop adc adc add mov cmp add add pop pop adc inc adc pop and adc and add add bound and (bad) incl pop push or (bad) incl add popa popa adc add pop and adc add push mov cmp pop pop and inc adc pop xor incl add pop or add incl pop pop adc data16 add add pop adc add popw xor adc add mov sub pop pop xor inc adc pop inc xor adc and add add adc incl add pop pushaw or add incl pop pop popa adc add pop popa adc pop pop adc add push mov adc pop pop adc adc pop inc inc mov add or add add or add add or jge add jle add add adc sub add or add add inc add or or or add or or outsl xchg add adc outsl xchg add adc adc adc outsl inc add or add or or or adc fild add fsubrl mov add pop outsl daa add or add or add or test add pop outsl addl or mov add adc or or xor and pop adc rcll push adc add adc adc adc adc adc push adc sub or adc and add or adc add add pop adc adc pop xchg popa shlb adcl adc pop and add add adc adc addps add add pop rcll adc adc pop adc adc adc mov mov xor adc push sub add add sub or ret add add adc or sub movb add sub or leave add add adc or sub add or sub adc pop push xor adc push sub movl adc or arpl or or or add or jle add add or outsl popl add push sub add adc add add add clc add add add sbb push add add add add sub pop outsl addl or outsl sub add outsl addl or outsb pop popa insl or enter or and dec adc xchg fldt adc cmp add or (bad) (bad) incl pop push bound and add lcall sbb or incl add pop pop inc pop adc adc push aaa dec adc pop adc adc and incl add or add incl pop pop adc data16 add add pusha adc add pop pop pop adc adc add shlb pop or add pop pop adc inc adc pop and adc and add add bound and (bad) incl pop push or (bad) incl add popa popa adc add pop and adc add adc bound or add pop pop and inc adc pop xor incl add pop or add incl pop pop adc data16 add add pop adc add popw xor adc add shlb popa or pop xor inc adc pop inc xor adc and add add adc incl add pop pushaw or add incl pop pop popa adc add pop popa adc pop pop adc add adc bound or adc adc pop inc inc mov add or add add or add add or jge add jle add add adc sub add or add add inc add or or or add or or outsl xchg add adc outsl xchg add adc adc adc outsl inc add or add or or or adc fild add fsubrl mov add pop outsl daa add or add or add or xchg add pop outsl addl or mov add adc or or xor and pop adc rcll push adc add adc adc adc adc adc push adc sub or adc and add or adc add add pop adc adc pop xchg popa shlb adcl adc pop and add add adc adc addps add add pop rcll adc adc pop adc adc adc mov mov xor adc push sub add add sub or ret add add adc or sub movb add sub or leave add add adc or sub add or sub adc pop push xor adc push sub movl adc or arpl or or or add or jle add add or outsl popl add push sub add adc add add add clc add add add sbb push add add add add sub pop outsl addl or outsl sub add outsl addl or outsb pop popa insl or imul je or and xlat enter and add push add add and (bad) incl pop push bound and add lcall sbb or incl add pop pop inc pop adc adc push aaa dec adc pop adc adc and incl add or add incl pop pop adc data16 add add pusha adc add pop pop pop adc adc add cld aas popa pop or add pop pop adc inc adc pop and adc and add add bound and (bad) incl pop push or (bad) incl add popa popa adc add pop and adc add mov aas pop pusha or add pop pop and inc adc pop xor incl add pop or add incl pop pop adc data16 add add pop adc add popw xor adc add cld aas pusha popa or pop xor inc adc pop inc xor adc and add add adc incl add pop pushaw or add incl pop pop popa adc add pop popa adc pop pop adc add mov aas pop pop or adc adc pop inc inc mov add or add add or add add or jge add jle add add adc sub add or add add inc add or or or add or or outsl xchg add adc outsl xchg add adc adc adc outsl inc add or add or or or adc fild add fsubrl mov add pop outsl daa add or add or add or xchg add pop outsl addl or mov add adc or or xor and pop adc rcll push adc add adc adc adc adc adc push adc sub or adc and add or adc add add pop adc adc pop xchg popa shlb adcl adc pop and add add adc adc addps add add pop rcll adc adc pop adc adc adc mov mov xor adc push sub add add sub or ret add add adc or sub movb add sub or leave add add adc or sub add or sub adc pop push xor adc push sub movl adc or arpl or or or add or jle add add or outsl popl add push sub add adc add add add clc add add add sbb push add add add add sub pop outsl addl or outsl sub add outsl addl or outsb pop popa insl or das fadds or and (bad) (bad) dec adc lret sub add push add add and (bad) incl pop push bound and add lcall sbb or incl add pop pop inc pop adc adc push aaa dec adc pop adc adc and incl add or add incl pop pop adc data16 add add pusha adc add pop pop pop adc adc add mov popa pop or add pop pop adc inc adc pop and adc and add add bound and (bad) incl pop push or (bad) incl add popa popa adc add pop and adc add clc mov pop pusha or add pop pop and inc adc pop xor incl add pop or add incl pop pop adc data16 add add pop adc add popw xor adc add mov pusha popa or pop xor inc adc pop inc xor adc and add add adc incl add pop pushaw or add incl pop pop popa adc add pop popa adc pop pop adc add clc mov pop pop or adc adc pop inc inc mov add or add add or add add or jge add jle add add adc sub add or add add inc add or or or add or or outsl xchg add adc outsl xchg add adc adc adc outsl inc add or add or or or adc fild add fsubrl mov add pop outsl daa add or add or add or mov add pop outsl addl or mov add adc or or xor and pop adc rcll push adc add adc adc adc adc adc push adc sub or adc and add or adc add add pop adc adc pop xchg popa shlb adcl adc pop and add add adc adc addps add add pop rcll adc adc pop adc adc adc mov mov xor adc push sub add add sub or ret add add adc or sub movb add sub or leave add add adc or sub add or sub adc pop push xor adc push sub movl adc or arpl or or or add or jle add add or outsl popl add push sub add adc add add add clc add add add sbb push add add add add sub pop outsl addl or outsl sub add outsl addl or outsb pop popa insl or js adc popa or adc mov pusha adc add push add add and (bad) incl pop push bound and add lcall sbb or incl add pop pop inc pop adc adc push aaa dec adc pop adc adc and incl add or add incl pop pop adc data16 add add pusha adc add pop pop pop adc adc add movsl adc pop or add pop pop adc inc adc pop and adc and add add bound and (bad) incl pop push or (bad) incl add popa popa adc add pop and adc add cmpsl movsl adc pusha or add pop pop and inc adc pop xor incl add pop or add incl pop pop adc data16 add add pop adc add popw xor adc add movsl adc popa or pop xor inc adc pop inc xor adc and add add adc incl add pop pushaw or add incl pop pop popa adc add pop popa adc pop pop adc add cmpsl movsl adc pop or adc adc pop inc inc mov add or add add or add add or jge add jle add add adc sub add or add add inc add or or or add or or outsl xchg add adc outsl xchg add adc adc adc outsl inc add or add or or or adc fild add fsubrl mov add pop outsl daa add or add or add or mov add pop outsl addl or mov add adc or or xor and pop adc rcll push adc add adc adc adc adc adc push adc sub or adc and add or adc add add pop adc adc pop xchg popa shlb adcl adc pop and add add adc adc addps add add pop rcll adc adc pop adc adc adc mov mov xor adc push sub add add sub or ret add add adc or sub movb add sub or leave add add adc or sub add or sub adc pop push xor adc push sub movl adc or arpl or or or add or jle add add or outsl popl add push sub add adc add add add clc add add add sbb push add add add add sub pop outsl addl or outsl sub add outsl addl or outsb pop popa insl or inc (bad) inc or and push js add cvttps2pi add add push add add and (bad) incl pop push bound and add lcall sbb or incl add pop pop inc pop adc adc push aaa dec adc pop adc adc and incl add or add incl pop pop adc data16 add add pusha adc add pop pop pop adc adc add int popa pop or add pop pop adc inc adc pop and adc and add add bound and (bad) incl pop push or (bad) incl add popa popa adc add pop and adc add jge push pusha or add pop pop and inc adc pop xor incl add pop or add incl pop pop adc data16 add add pop adc add popw xor adc add int pusha popa or pop xor inc adc pop inc xor adc and add add adc incl add pop pushaw or add incl pop pop popa adc add pop popa adc pop pop adc add jge push pop or adc adc pop inc inc mov add or add add or add add or jge add jle add add adc sub add or add add inc add or or or add or or outsl xchg add adc outsl xchg add adc adc adc outsl inc add or add or or or adc fild add fsubrl mov add pop outsl daa add or add or add or mov add pop outsl addl or mov add adc or or xor and pop adc rcll push adc add adc adc adc adc adc push adc sub or adc and add or adc add add pop adc adc pop xchg popa shlb adcl adc pop and add add adc adc addps add add pop rcll adc adc pop adc adc adc mov mov xor adc push sub add add sub or ret add add adc or sub movb add sub or leave add add adc or sub add or sub adc pop push xor adc push sub movl adc or arpl or or or add or jle add add or outsl popl add push sub add adc add add add clc add add add sbb push add add add add sub pop outsl addl or outsl sub add outsl addl or outsb pop popa insl or je pushf xor popa or pop adc pop hlt pop push adc push add add and (bad) incl pop push bound and add lcall sbb or incl add pop pop inc pop adc adc push aaa dec adc pop adc adc and incl add or add incl pop pop adc data16 add add pusha adc add pop pop pop adc adc add adc popa pop or add pop pop adc inc adc pop and adc and add add bound and (bad) incl pop push or (bad) incl add popa popa adc add pop and adc add scas adc pop pusha or add pop pop and inc adc pop xor incl add pop or add incl pop pop adc data16 add add pop adc add popw xor adc add adc pusha popa or pop xor inc adc pop inc xor adc and add add adc incl add pop pushaw or add incl pop pop popa adc add pop popa adc pop pop adc add scas adc pop pop or adc adc pop inc inc mov add or add add or add add or jge add jle add add adc sub add or add add inc add or or or add or or outsl xchg add adc outsl xchg add adc adc adc outsl inc add or add or or or adc fild add fsubrl mov add pop outsl daa add or add or add or mov add pop outsl addl or mov add adc or or xor and pop adc rcll push adc add adc adc adc adc adc push adc sub or adc and add or adc add add pop adc adc pop xchg popa shlb adcl adc pop and add add adc adc addps add add pop rcll adc adc pop adc adc adc mov mov xor adc push sub add add sub or ret add add adc or sub movb add sub or leave add add adc or sub add or sub adc pop push xor adc push sub movl adc or arpl or or or add or jle add add or outsl popl add push sub add adc add add add clc add add add cs add add add add sub jle add add sub add add ror add add add add sub jle add add sub add add rcl add add add add sub jle add add xchg add push sub rcl add add add add sub jle add add add lcall cs add add add add sub jle add add add sahf add push sub add rcl add add add add sub jle add add mov cs add add add add sub jle add add sub add add rcl add add add add sub jle add add stos add push sub rcl add add add add sub jle add add sub add add rcl add add add add sub jle add add sub add add rcr add add add add sub jle add add add mov add sub add rcr add add add add sub jle add add sub add add rcr add add add add sub jle add add sub add add rcr add add add add sub jle add add ret push sub rcr add add add add sub jle add add movb push sub rcr add add add add sub jle add add lret push sub rcr add add add add sub jle add add sub add push sub add cs add add add add sub jle add add sub add push sub add cs add add add add sub jle add add (bad) add push sub shl add add add add sub jle add add add fiaddl add sub add shl add add add add sub jle add add add fiadd add sub add shl add add add add sub jle add add sub add push sub add cs add add add add sub jle add add out add sub shl add add add add sub jle add add sub add push sub add cs add add add add sub jle add add add out add push sub cs add add add add sub jle add add add repnz push sub add shr add add add add sub jle add add add testb push sub add shr add add add add sub jle add add cli add push sub shr add add add add sub jle add add add incb add sub add shr add add add add sub jle add add add add sub shr add add add add sub jle add add sub add push sub add cs add add add add sub jle add add or add sub shr add add add add sub jle add add sub add push sub add cs add add add add sub jle add add add adc add sub add lock add add add (bad) icebp add add add add (bad) repnz add add add sub jle add add add push add push sub add jle add add add push add push sub add jle add add add push add push sub add (bad) repz add add add sub jle add add add sbb add sub add (bad) hlt add add add add sub jle add add add and add sub add (bad) cmc add add add add sub jle add add sub add sub add cs testb add add add sub jle add add add sub add sub add (bad) testl add push sub jle add add add sub add sub add sar add add add add sub jle add add add xor add sub cs add add add add sub jle add add sub add sub add cs add add add add sub jle add add sub add push sub add push sar add add add add sar add add add add sub add jle add add sub add sub add xor add add sub add sub add cs add add add add sub jle add add add inc add push sub add sar add add add add sub jle add add sub add sub add cs add add add add sub jle add add add dec add push sub add rolb add add add add sub jle add add sub add sub add push rolb add add add add rolb add add add add sub add jle add add sub add sub add xor add add sub add sub add rolb add add add add sub jle add add add push add push sub add xor add add add add rolb add add add rolb add add rolb add add add add rolb add add add add rorb add add add add rorb add add add add rorb add add add add rorb add add add add sub add jle,pn add add pop add push sub jle add add pop add push sub jle add add pop add push sub jle add add pop add push sub jle add add pop add push sub jle add add pop add push sub jle add add pop add push sub jle add add pop add push sub rorb add add add sub jle add add sub add sub add jle or add add rorb add add add add rorb add add add add sub jle add add add imul add jle add add add imul add jle add add add imul add add add add rclb add add add add rclb add add add add rclb add add add add sub add jle add add sub add sub add xor add add sub add sub add xor add add sub add sub add xor add add sub add sub add rclb add add add sub jle add add sub add sub add rclb add add sub jle add add add jp add sub add rclb add add add add sub jle add add sub add sub add rclb add add add add sub jle add add add (bad) add push sub add rcrb add add add add sub jle add add add xchg add sub add rcrb add add add add sub jle add add add mov add sub add rcrb add add add add sub jle add add add mov add sub add add add add rcrb add add add rcrb add add rcrb add add add add sub add jle add add add xchg add push sub add jle add add add xchg add push sub add jle add add add xchg add push sub add jle add add add xchg add push sub add rcrb add add add add sub jle add add add cltd add push sub add shlb add add add add sub jle add add add popf add push sub add shlb add add add add sub jle add add add mov add shlb add add add add sub jle add add add movsl add push sub add shlb add add add add sub jle add add add test add shlb add add add sub jle add add add lods add push sub shlb add add sub jle add add add mov add sub cmpsb shlb add add add add shlb add add add add shrb add add add add shrb add add add add sub add jle add add mov add sub jle add add mov add sub jle add add mov add sub jle add add mov add sub sub add add add shrb add add add add sub add jle add add add mov add ss add add add mov add shrb add add add sub jle add add roll push sub shrb add add sub jle add add sub add push sub add shrb add add add add sub jle add add sub add push sub add shrb add add add add sub jle add add sub add push sub add cs xor add add add sub jle add add sub add push sub add cs xor add add add sub jle add add add aad add sub cs xor add add add sub jle add add sub add push sub add cs xor add add add sub jle add add add fldl add sub add xor add add add (bad) xor add add (bad) add add add add sub jle add add loope add sub jle add add loope add sub jle add add loope add sub (bad) aaa add add add add sub jle add add sub add push sub add jle cmp add add add sarb add add add add sarb add add add add sub jle add add sub add push sub add xor add add sub add push sub add xor add add sub add push sub add sarb add add add add sub jle add add sub add push sub add sarb add add add sub jle add add sub add push sub add sarb add add sub jle add add add stc add push sub push sarb add add add add sarb add add add add sub add jle add add sub add push sub add xor add add sub add push sub add rolb add add add sub jle add add sub add push sub add rolb add add add sub jle add add add push add push sub push rolb add add add rolb add add add sub add jle add add add or add sub add jle add add add or add sub add rolb add add add sub jle add add sub add push sub add rolb add add add sub jle add add sub add push sub add rolb add add add sub jle add add add pop add push sub add rolb add add add sub jle add add add sbb add sub rorb add add add sub jle add add sub add push sub add rorb add add add sub jle add add add and add sub add dec add add add add rorb add add add rorb add add add sub jle add add add daa add push sub add jle add add add daa add push sub add jle add add add daa add push sub add rorb add add add sub jle add add sub add add rorb add add add sub jle add add sub add push sub add rorb add add add sub jle add add add xor add jle push add add add add rclb add add add rclb add add add sub jle add add sub add push sub add xor add add sub add push sub add xor add add sub add push sub add rclb add add add sub jle add add sub add push sub add cmpsb rclb add add add rclb add add add rclb add add add rclb add add add sub add jle add add add inc add push sub add jle add add add inc add push sub add jle add add add inc add push sub add jle add add add inc add push sub add rcrb add add add sub jle add add sub add sub add rcrb add add add sub jle add add sub add sub add rcrb add add add sub jle add add add push add push sub add rcrb add add add sub jle add add add push add push sub add rcrb add add add sub jle add add sub add sub add rcrb add add add sub jle add add add pop add push sub add rcrb add add add sub jle add add sub add sub add rcrb add add add sub jle add add add push sub pusha add add add add shlb add add add sub add jle add add sub add sub add xor add add sub add sub add shlb add add add sub jle add add add push sub shlb add add add sub jle add add add jae add sub add shlb add add add sub jle add add sub add sub add shlb add add add sub jle add add add jnp add sub shlb add add add sub jle add add add jg add sub add shlb add add add sub jle add add sub add add push add add shrb add add add sub add jle add add add xchg add sub add jle add add add xchg add sub add shrb add add add sub jle add add sub add shrb add add add sub jle add add sub add add shrb add add add sub jle add add sub add shrb add add add sub jle add add sub add add shrb add add add sub jle add add pushf add push sub shrb add add add sub jle add add sub add add (bad) jo add add add sub jle add add sub add cs jno add add add sub jle add add add push sub (bad) jb add add add sub jle add add sub add cs jae add add add sub jle add add sub add add (bad) je add add add sub jle add add sub add cs jne add add add sub jle add add add mov add (bad) jbe add add add sub jle add add sub add cs ja add add add sub jle add add sub add push sub add sarb add add add sub jle add add sub add push sub add sarb add add add sub jle add add sub add push sub add sarb add add add sub jle add add sub add push sub add sarb add add add sub jle add add sub add push sub add jle jl add add add sarb add add add sarb add add add sub jle add add sub add push sub add xor add add sub add push sub add xor add add sub add push sub add sarb add add add sub jle add add sub add push sub add rolb add add sub jle add add add fiadd add sub add rolb add add sub jle add add sub add push sub add rolb add add sub jle add add add out add sub add addl add add add rolb add push sub add jle add add add ljmp ss add add add ljmp rolb add add sub jle add add add out add push sub add rolb add add sub jle add add add repz push sub add rolb add add sub jle add add add testl add rorb add add sub jle add add add sti add push sub add rorb add add sub jle add add sub add push sub add rorb add add sub mov add add add push sub add rorb add add sub jle add add add pop add push sub add rorb add push sub jle add add or add sub rorb add add sub jle add add sub add push sub add rorb add add sub jle add add sub add push sub add rorb add add sub jle add add add pop add push sub add rclb add add sub jle add add sub add push sub add rclb add add sub jle add add add pop add push sub rclb add add sub jle add add add and add sub add rclb add add sub jle add add add daa add push sub rclb add push sub jle add add add push sub xchg add add add add rclb add add rclb add add sub jle add add das add push sub jle add add das add push sub jle add add das add push sub rcrb add add sub jle add add add xor add rcrb add add sub jle add add add cmp add sub add lcall add rcrb add add sub add lcall add add push sub add fwait add add add add push sub add rcrb add push sub jle add add add inc add push sub add rcrb add add sub jle add add add inc add push sub add rcrb add add sub jle add add sub add sub add rcrb add add sub jle add add add dec add push sub add shlb add add sub jle add add add push add push sub add shlb add add sub mov add push push sub add sub add shlb add add sub jle add add add pop add push sub add shlb add add sub xor add add add add add add add add push push push pop sub add sub shlb add push sub jle add add bound add sub shlb add add sub jle add add sub add sub add shlb add add sub jle add add add push add sub add shlb add add sub jle add add sub add sub add shrb add add sub jle add add sub add sub add push shrb add add shrb add add sub add jle add add sub add sub add xor add add sub add sub add shrb add add sub jle add add sub add sub add shrb add push sub jle add add add jg add sub add shrb add add sub jle add add add push sub shrb add add sub jle add add add xchg add sub add shrb add add sub jle add add add push sub (bad) mov add add add sub jle add add popl add sub (bad) mov add add add sub jle add add sub add add mov add add add (bad) mov add add add (bad) mov add add add sub jle add add sub add add jle add add sub add add jle add add sub add add (bad) mov add add add sub jle add add sub add add (bad) mov add add add sub jle add add sub add add (bad) mov add add add sub jle add add sub add add sarb add add sub jle add add sub add add sarb add add sub jle add add add push sub sarb add add sub jle add add add mov add sub add sarb add add sub jle add add sub add add sarb add push sub jle add add add mov add sarb add add sub jle add add add mov add sarb add add sub jle add add sub add push sub add sarb add add sub jle add add add lds add sub add rol add add add add sub jle add add add push sub rol add add add add sub jle add add add int add sub add rol add add add add sub jle add add sub add push sub add cs add add add add sub jle add add sub add push sub add push rol add add add add rol add add add add sub add jle add add add flds add sub add jle add add add flds add sub add rol add add add add sub jle add add sub add push sub add cs add add add add sub jle add add add push sub ror add add add add sub jle add add add push sub ror add add add add sub jle add add add ljmp push ror add add add add ror add add add add sub add jle add add sub add push sub add xor add add sub add push sub add cs add add add add sub jle add add sub add push sub add cs add add add add sub jle add add add testl add ror add add add add sub jle add add add sti add push sub add ror add add add add sub jle add add sub add push sub add cs add add add add sub jle add add sub add push sub add cs add add add add sub jle add add sub add push sub add cs add add add add sub jle add add sub add push sub add cs add add add add sub jle add add add (bad) add sub cs add add add add sub jle add add sub add push sub add cs add add add add sub jle add add sub add push sub add cs add add add add sub jle add add sub add push sub add cs add add add add sub jle add add add pop add push sub add rcr add add add add sub jle add add sub add push sub add push rcr add add add add rcr add add add add sub add jle add add add daa add push sub add jle add add add daa add push sub add rcr add add add add sub jle add add add sub add sub add rcr add add add add sub jle add add sub add push sub add cs add add add add sub jle add add add xor add sub add rcr add add add add sub jle add add add cmp push sub add rcr add add add add sub jle add add sub add sub add cs add add add add sub jle add add add inc add push sub cs add add add add sub jle add add sub push sub add cs add add add add sub jle add add sub add sub add cs add add add add sub jle add add sub push sub add cs add add add add sub jle add add add push add push sub add shl add add add add sub jle add add push add push sub shl add add add add sub jle add add sub add sub add cs add add add add sub jle add add add pop add push sub add shr add add add add sub jle add add add pusha add push sub add shr add add add add sub jle add add sub push sub add adc add inc add add add jb add jo nop add or add nop add or jb add jo xchg add or push insb add push jae add or add or push pop outsl xchg add or adc xchg add or add xor add add inc add adc jne add add push sub insb add push jae add or add or push pop outsl xchg add or sub xchg add or hlt add add outsl add or xchg add or add sub jb add jo xchg add or outsl cltd add or add xchg add or call outsl add or lret push add lcall or in mov xchg and jnp dec cmc dec xlat loopne mov and nop inc adc rorl imul lret gs pushw inc int3 in popf mov mov mov dec daa neg (bad) aas pop add dec fcmove sahf and jle pop aas and pop lock sbb std mov stos jle fcomip dec inc (bad) xlat mov ja sti lahf (bad) fsub pop std pop (bad) fcmovnu (bad) cmc dec cld mov pop pushl out fdivrp mov jecxz neg (bad) push jg pop std inc (bad) clc icebp outsl clc lock std inc mov pop jg ljmp fistpll std xor (bad) jnp repz repz jge aas (bad) sub jmp (bad) aad leave aas repz inc push scas notl out (bad) sub clc jmp pop cld jge repz push jg repnz cld jmp negl cld daa push fyl2xp1 dec (bad) fwait mov lds fwait sar xchg (bad) out clc idiv mov fcomip scas cli xorl call das (bad) mov hlt pop (bad) arpl ret mov jge daa (bad) fidivr aas sti cmp pop sub (bad) in push lahf negb hlt ljmp lds out xor push mov aas mov iret jg fstpt ja imul mov jg jg jp aaa (bad) mov cli fwait (bad) ljmp jg jg (bad) repnz sbb imul icebp pushl mov aas fdivrp mov maxps (bad) fucomip shr aas std push jg outsl (bad) mov out (bad) mov push jg out (bad) (bad) jg out idiv push cli xchg jg outsl sbb jmp (bad) sar jmp xchg jge xlat decb dec ljmp mov sub jg pop cli jecxz clc outsl cwtl aas mov cmp aas notb ret lahf cld mov push das fwait jmp out (bad) mov pushl jmp lcall aam push jg call mov and jl das (bad) fnstsw jg dec incl out jle (bad) clc mov call lahf (bad) stos (bad) aas (bad) loopne in cmpsl mov mov or rep cld imul stc das ljmp std jg scas (bad) cld xchg std cmpsb jg sub stc jae cwtl aas jecxz incl jg pop repz sti das ds call inc mov jmp pop fucomp pop pop std cmp shrl sbb leave fwait dec mov mov jnp std decb repnz (bad) jmp stc lahf cld repz test loop aas push (bad) scas jnp rcr iret ljmp jmp pop jg repz clc ret (bad) lods mov pop (bad) fucomp ja add cmp dec jg mov inc ret cld dec jle aas stc outsl incl incl adc dec out jl mov adc (bad) aas sti ja xor jnp rcrb addr16 lret std mov aaa (bad) jge jecxz ljmp jg mov jle pop clc fwait das ds jae ret (bad) aaa (bad) out out loop cli hlt xchg cld jne pop ljmp addr16 (bad) (bad) (bad) lods mov cld pop idiv mov jmp outsl clc pop cld sti mov imul jg jg push mov icebp mov std xor (bad) fldcw out cmpsl idiv sarb pop std mov pop repz std jbe (bad) in icebp aad decb out call fwait jmp ljmp fwait pushl cmc (bad) sarl in das cld ja (bad) jg sar out (bad) mov repz cld outsl std cltd jg out imul fcomip aaa cli sub dec incb loopne fist inc test fild divl aam fucomip out std jmp sar out lahf std insl lcall jmp in pop cld cmpsl mov cli mov lock (bad) std jg mov lcall js ljmp idiv pop dec aas mulb in pop (bad) outsl (bad) out fcomip jg scas mov std ja inc jle dec jg lahf sti cmpsl decl incb (bad) mov negb cmc (bad) in jg imulb movsb jns mov (bad) out clc lret dec (bad) loop jg in cmp stc sti lret jle bswap (bad) push in lcall mov inc adc loope (bad) stc sar fmull ljmp mov dec pop sti mov jne aas (bad) mov jg outsl std outsl (bad) mov repnz stc fistpll mov jo dec std jnp mov icebp mov aas stc das cmp stc (bad) adc scas insb push aas insb cld jnp push (bad) sti (bad) mov sti psubb clc out iret std mov clc aas cli cmp cmp iret std (bad) out and (bad) jmp aam (bad) push (bad) jg cli lahf push incl fistp jg (bad) js outsl call loop std lret (bad) fcmovu (bad) in (bad) fidivr clc sbb icebp cmpsl (bad) out lods (bad) (bad) mov jmp adc gs call scas jg out movsb (bad) (bad) fistpl bnd (bad) lahf jge jg push cmp jg stos idiv out inc mov lcall inc out pushl idiv notl (bad) call std icebp jg fdivrp gs mov mov popa (bad) mov pushl lcall sti add (bad) mov (bad) into scas std xchg div ljmp lock jge ljmp outsl stc daa aas clc jne sarb (bad) mov mov hlt mov scas (bad) outsl ljmp sub mov stc cmp stc cmpsl pushl stos jmp dec pop stc fwait (bad) ljmp (bad) mov repnz std mov aad jg pop icebp (bad) std stos push mov fldcw xchg jg pop cli pop mov inc (bad) repnz incl (bad) fcomip das std outsb jg scas cli cmp xchg aad fbstp jg paddd (bad) stc mov out pop mov mov mov sti fwait jle out cld inc call negb cli or iret incl jle stos pop jmp ljmp fistpll cld push call lahf je (bad) push (bad) mov pop (bad) adc idivb repz sarl daa std lods mov (bad) js arpl in aas loopne clc pop inc mov jg loopne pop (bad) jp (bad) mov cld mov sti mov ja idiv cld pop push pop sti addr16 (bad) xchg jg stc fucomip std mov std out repz aas jmp incl in cmc scas std mov mov jle (bad) clc aas (bad) cmpsl jmp pop idiv (bad) xchg lahf push incl out clc pop lahf std popf mov das pop sahf pop std (bad) fbstp push std xor (bad) mov xor aaa cld (bad) fstpt sti out cld call lcall cmpsl aas icebp idiv mov sti inc in outsl (bad) ja cld mov pop call jg dec std int iret mov or mov (bad) jmp pop lock std sar outsl mov push das fstpt pop pushl mov pop xchg aas notb pop jl jg xchg dec (bad) jmp out mov push (bad) cld out jg pop std mov in (bad) call pushf pop mov (bad) mov mov jmp call jg pop das jle stos aas jmp (bad) mov jmp fcomip dec (bad) and cmc iret cli cmp jmp (bad) jge push jge idiv push outsl inc jg dec dec jg mov call mov decl out scas std stos (bad) call (bad) jg decb int (bad) icebp pop test std jg decb jg idiv ljmp sti xchg jg scas std dec decl ret jnp hlt (bad) jle xlat pop jmp clc fwait ljmp cli pop xor repz pop mov ljmp xlat cld int negb cmp (bad) stc (bad) iret (bad) xor enter out ja das std fdivrp cmc jg mov or xchg jnp (bad) cli cmp mov out (bad) jle pop xor outsl js lock in sti das cmp cli std push jg out ja jg lods in jg pop out std das daa jg out cli inc std sti (bad) in jmp (bad) jmp pop mov mov std add jg icebp (bad) ljmp icebp mov jp scas sti cmc jle pop repnz (bad) and mov lret aas sti lahf mov (bad) sti mov test imul pop scas ds (bad) (bad) pushl pop fidivr stc imul mov ficomp xchg xor outsl stc daa aas cld test arpl out cmp clc negl (bad) lahf aas aas stc and jmp add std xor aas xchg cli jmp mov cmc pop sbb icebp pop stc out push jl imul lcall iret jle enter std xchg inc jg icebp (bad) fcomip clc dec cli pop inc fcomip cmc dec cld mov (bad) call shrl cld (bad) inc loop jg pop std push jg jg (bad) std icebp jecxz pop cld pop incb rcrl ja lret (bad) out std adc hlt das stc lds inc std call aam (bad) decl incb jle xor jg stc stc gs scas dec repnz sti fist and aas inc out pushl lcall repnz (bad) ljmp (bad) adc aas jge xchg pop scas jmp leave daa jg jg (bad) (bad) divb (bad) mov popf (bad) jmp (bad) xchg mov jmp fucomip cmp push std int (bad) in pop sti xchg (bad) aam cli cmpsl (bad) xchg pop sti hlt pop stc aas lcall dec (bad) in pop std cmc mov xchg jg aas incl cmpsl jg mov jg jg dec dec incl repnz cld in mov pop scas push xlat mov decb ljmp out (bad) jmp incl fdivrp cld out mov cld negb inc (bad) iret lcall jg aas jg addr16 in inc popf pop idivl (bad) out (bad) mov aas (bad) call push std in mov jle mov repnz mov (bad) mov fild sar lahf stc scas jmp in jg jg mov aas clc iret stc push mov fistpll std xchg push pop cld fwait pushl (bad) loope repnz ljmp cmc dec inc aas clc in push push out fnstcw (bad) fwait out addr16 cld leave aas jle cli out outsl lcall cli das sarl clc cmpsl jle mov iret cli out call jg (bad) (bad) aas cld dec jg outsl int jg das pushl (bad) push mov repz jg,pt (bad) inc (bad) fdivr icebp (bad) add cmc rol aaa das call jg push mov cli ficomp lahf ljmp xchg lods mov out pop incb lahf std iret xchg (bad) lcall fistpll incb cld loop fucomip dec mov mov lds cld mov cld iret or fs decb loopne sti aad hlt out jle aaa sbb ja scas ljmp sti (bad) xchg call daa mov stc leave (bad) in sti mov xchg jg arpl aas cli (bad) (bad) fnstsw cli out scas cli in mov cmpsl dec aas clc mov mov mov negb loop pop jnp daa xor jecxz std in (bad) icebp aas pop repz sti std fidivrl jbe mov push (bad) out out sub imull xchg (bad) (bad) jae mov (bad) daa jle pop stc addr16 aas clc lahf mov jg into scas stc pop ljmp in cld out jg stos xchg fcomip loope cld mov lods push aad cld out fnstcw mov (bad) imul mov out (bad) ljmp in repnz std arpl aas cld (bad) std std (bad) stc das sub mov call aas icebp sbb sarl pop cld xchg jg fistpll aad cld std jg aas cli int xchg aas cli dec aas into pop (bad) sub mov loop jg (bad) das jg negb lcall lcall pop (bad) jg,pt lahf cld iret (bad) fadd push outsl icebp ja loope repz xor pop cld inc repnz (bad) fidivrl xchg jmp in (bad) (bad) negb fildll jg leave pop std fistp jp jg pop hlt scas cld xlat mov (bad) in (bad) pop mov xor fucomip pushl cmc out sti idiv leave jg (bad) std int fsubr icebp ja out push pop pop (bad) loopne std shrl inc mov cmpl out repz cld fstpt icebp jmp jg pop std lcall and mov outsl jle scas fdivrp repnz (bad) sub jmp out (bad) fcomps (bad) cltd jg out hlt aas (bad) jge (bad) out jp (bad) xchg lahf clc mov psubd scas incl (bad) (bad) jmp int cmc aas cli xlat cmp (bad) cld pop mov pop decl lcall repnz mov into cli scas (bad) cmpsl mov (bad) mov jle out sti xchg repnz scas int3 (bad) sti fcomip (bad) in jg xchg jg aas std addr16 sarl out dec mov sarl outsl (bad) jmp push jg icebp cmpsl (bad) jg sti mov cld (bad) fcos lret mov pop dec cld sti cmp push jg divb ds sbb or fistpll xlat mov lahf clc aad aam repnz dec out jle (bad) out std push aas icebp outsl std leave mov aas jle add out xchg adc dec sahf std decl loope rcr iret (bad) pop sbb xchg lahf clc lahf std mov popf jmp pop js (bad) test fbstp fstp in ja (bad) jg cmp mov outsl repnz cmp mov jp mov std hlt (bad) (bad) jle (bad) decb jle das (bad) test mov jg xlat jle mov js pop cld repnz repnz cld (bad) (bad) aam shrl jmp mov pop decb push mov sti pop std cmc mov mov mov hlt cld xlat sti fwait dec fstp out sti pop mov decb out jbe idiv das (bad) loope idivl pushl into (bad) stos out (bad) outsl cmc lahf std mov daa mov (bad) in dec sub in mov (bad) mov jg aas pop (bad) push outsl jle jg hlt stos mov xlat (bad) fidivr push mov out cld sub (bad) (bad) (bad) outsl cld in pop cmp das stc mov stc lahf (bad) popf (bad) cli fcomip mov mov mov jle jg scas mov addr16 inc ljmp std aam cli arpl xchg lahf (bad) repnz mov pop incb push (bad) std jmp aaa stc jne lahf out jmp mov in inc (bad) clc push jg (bad) clc cmp and jae hlt dec decl jmp std ss clc lahf cmc insb icebp cmpsl decl jg jg cli cmpsl (bad) ljmp jne std (bad) cmp lret outsl cmp in inc icebp lock sti push mov sub std fistpll (bad) aas jle idiv fnstcw mov mov paddd sti sti push aas std (bad) decb jg outsl cld jecxz call aas in cli mov (bad) in dec cld (bad) sahf (bad) jmp sti addr16 mov (bad) inc push ja jle mov push aas out and (bad) fcmovnbe inc das clc mov icebp outsl (bad) cmpsl decb fistpll mov jge adc out lods clc iret scas (bad) hlt aas sti outsl cli lahf addr16 jg repnz loop mov out mov sti mov leave outsl mov pushl mov dec (bad) mov into outsl mov push pop jmp pop (bad) aas cld xor (bad) hlt (bad) out pop jg sarl icebp call inc (bad) call ljmp pop repnz (bad) pop jg lahf icebp fistpll pushl cld ljmp aam lahf stc ja lea cmc out test xor jmp clc iret jle fcomip lahf ljmp pushl cmp fcomip scas jnp das cld je (bad) jmp jecxz testl int loopne jp cli push (bad) fstpt pop (bad) idivl icebp mov cli pop xchg jg mov fstl jg (bad) idiv loopne decl pop jg pop stc jnp call cmp (bad) sub sti cld lret jg (bad) std out mov pop imull (bad) xor std jmp cmc jg jg ja pushl push std (bad) mov jl jo lock cld xor (bad) call sti cmp rcr pop (bad) fidiv std jmp aaa jge sti stc scas cli mov pop stc lret (bad) fdivrs in stc in (bad) (bad) hlt pop pop mov mov (bad) repnz aas clc sbb mov mov (bad) (bad) in aaa (bad) sub clc pop mov das pushf (bad) fnstcw pop repnz shrl std clc psubd jg mov (bad) cs push (bad) int3 mov (bad) fucomi stc xchg pop mov mov cli mov fidivr out incb jg fucomip aas cld jae jg cmpsl (bad) and jg incl fucomp sti pop cld xchg push jg scas icebp das pushf (bad) fistpll fcomip loop xlat pop jg addr16 stc stos mov sbb fsubr loop jmp outsl decl lret push scas std les scas jnp out mov (bad) sti dec pop notb aas decb fdivrl cmpsl cld pop jg call cld cltd call outsl idiv jg mov (bad) stos pop (bad) cli out repz std int fsts lock cld sbb jg call (bad) jmp push jg lahf (bad) cld paddw ret mov mov sub mov sub (bad) call mov out (bad) stc imul xchg jg (bad) stc adc repz mov sbb in das lcall outsl mov cmp int lock dec fcomip xlat cmp iret jg (bad) cltd clc icebp out clc repnz pop sbb rcrb ljmp incb xchg test mov (bad) sahf pushl stos lcall cld xchg jmp cld pop incb (bad) jg pop lcall iret jecxz jbe jnp add out std jnp push mov ja sarl fwait xchg jg pop hlt mov out stos pop imul mov pop (bad) ficompl xchg cld mov aaa cld sbb sti out icebp pop repz cld inc in lahf icebp fistpll lock lock loop (bad) push sahf cld scas jg lahf hlt in mov testl mov jecxz cli movd stos (bad) movsl iret ljmp icebp cli lahf pop movsl pop std sub pop (bad) mov insl (bad) xchg mov cmpsl ljmp jg (bad) cmp xor mov cld divl aas jg lahf cmp out dec mov stc jmp pushf rorl mov clc repz ficomp dec jg push scas std into jg push sbb gs (bad) arpl std icebp sarl clc fcomip cmp jp (bad) fcomip in in (bad) call (bad) lods pushl jmp aas lock pop out call aas not jg stc push idiv sbb lahf sbb fistpl (bad) jg sbb imull pop cld or pop (bad) mov jg imul dec (bad) in out jl jecxz cld pop hlt pop std addr16 cmc into jg ja ds std (bad) pushl jg (bad) decb hlt jg fdecstp dec pop ljmp mov ljmp xchg (bad) jg pop cld hlt (bad) mov mov inc outsl cmp aaa ljmp std ljmp mov mov jg pop cld inc lcall mov incb mov std (bad) outsl call xlat jg (bad) js mov jle loop jp pop pop mov pop es push jg jmp push fdivrp data16 jg fwait in loop lock decb pop jg jg repnz pop in in cld mov hlt pop repz incb hlt fildll call aas mov imull sti out mov icebp repnz cli in stos (bad) jp das mov ficomp xchg std aam sahf lods idivl (bad) std pop call push fwait (bad) cmp jmp stos (bad) cli lahf sti cld dec sti jae lods mov xor das dec (bad) (bad) scas mov jg mov pop inc mov ljmp in aas jmp cli scas ds out lcall outsl cmp jmp idivb jne ds leave mov (bad) out mov cld incl mov lock mov adc mov aas in sti sti jle fstpl aaa cld cld pop cld test int in jae mov scas stc popf pop cmc aas aas js xlat call aas stc in (bad) std movsl (bad) cmp mov lock mov xchg jg pop divb loope out jecxz outsl (bad) mov in xlat decb daa std xchg inc pop mov in repz outsb jle push jnp negl movq repz cli arpl mov repnz pushl repz out sti pop (bad) test (bad) sarl fbstp pop jmp clc aaa cld idivb icebp sti cld movsl push jg pop pushl out jle (bad) stos mov lods push jg push jg outsl neg cld insl mov xchg std (bad) lahf jle pop std clc lahf cli scas (bad) imul iret pop imulb cmc pop xor jg fcomip dec pop (bad) cli jg mov lahf cld mov ja out fisub push jg pop pushl fxch cld dec jmp popf pop jmp (bad) gs (bad) lahf cli fwait std cmpsl jg repnz mov (bad) mov pop cld bnd (bad) jmp (bad) jg hlt sbb jecxz clc pop jg mov jle out sti cmp imul ljmp repnz outsl hlt scas (bad) outsb jg stc das jg mov (bad) clc mov js mov lods mov jmp loope jl cld sbb (bad) pop pusha mov fcos lock repnz out sarb cld mov mov jg mov (bad) pop popf std fcomps pop std xor outsl sti dec lcall ljmp fistp mov jg lds pop std cmpsl mov scas cld mov addr16 sti addr16 out icebp jnp lret iret (bad) jg out (bad) pop jg cmpsl ljmp push jecxz pop in out hlt mov scas (bad) arpl xorb (bad) arpl out inc mov jg outsl idiv in sti out (bad) jg lahf negl (bad) push push lahf (bad) insb icebp xchg std test cli sti idiv mov pop xchg jg xchg fcomip outsl (bad) cmp xchg lahf clc pop jg fbld mov (bad) mov std sti pop jge sti cld adc jg das std sahf jg push jmp cmc scas (bad) lock jl imull cld mov pop out cld ss call (bad) xchg aas in clc aas lods cld aas clc cmpsl (bad) dec mov xlat mov leave xchg mov std rorl mov (bad) idiv jge jle pop cld mov sti mov out (bad) mov iret mov pop (bad) fidivr in ljmp jg pop inc (bad) out rcrl mov sar xchg addr16 std ficomp imul pop lcall cmpsl std into jg jg lahf cld cmpsb mov out jg jg mov lods cmp cmpb cli scas (bad) lods iret ljmp sbb incb test clc outsl xchg (bad) jle (bad) out stc push cld clc icebp subl cmp cli mov xchg out das (bad) lods call fcomip mov cmpsl not mov pmaxsw fistpll push out sbb (bad) pushl std scas jle (bad) pop sti imul (bad) out outsl clc insl jg jg (bad) cld add dec stc or scas (bad) jnp scas cli aas jg ja cld in jp leave mov clc mov fucomip pop mov xor (bad) clc jg pop ds sbb fistpl lock in repnz cld into jg das stc scas fidivr pop sti jnp pushf jg outsl std popf jle jg outsl jl sti decl jg (bad) das sahf cld add fucomp sti aas out std in aaa (bad) pop jle (bad) call mov fwait jg push bswap (bad) clc push das pop (bad) loopne (bad) jge jg (bad) fistpll clc das jg lahf repnz jecxz (bad) jg lahf bnd ljmp aaa clc xor in loopne jg scas ljmp fnstcw cld jmp mov jg (bad) mov mov out (bad) mov mov mov hlt cmp mov (bad) fstpt mov test outsl call addr16 xchg mov cli hlt (bad) lahf (bad) mov outsl hlt adc std aas std push cld sarl cli aaa ljmp ja inc jg mov jg pop mov inc std lcall jg jecxz mov mov imul ja lock ljmp (bad) stc das cli sarl pop das (bad) in mov fldcw mov in scas (bad) out mov decb inc (bad) cld pop pop jg lds jmp hlt pop repnz incl cld mov pop call fucomip adc imull pop (bad) (bad) jg pop cld das mov int scas cli (bad) (bad) ljmp lahf mov xchg xor decl daa (bad) fdivrs pop std cmpl leave (bad) aas fmulp (bad) jecxz neg inc (bad) jg std decl ja loop jg lahf dec stc xlat fucomip xlat fsubl std lret mov in stc rcrl iret hlt pushl std pop jle mov jmp pop scas aas std fwait call cmp push pop cmc outsl call mov aas arpl jge pop lcall (bad) (bad) jmp imul hlt push dec xchg mov lds mov cld mov hlt aas dec std and fwait std (bad) dec mov jg pop std fucom in jg pop lods (bad) jmp (bad) loop (bad) in aas lcall test jmp mov adc mov jmp jmp out mov loop clc pop ljmp les jg jg std (bad) int out mov pushl (bad) (bad) std mov jg mov mov sarl fldcw imul stos aas data16 into pop std fbld out repz in xchg call mov push jg out cli outsl push (bad) jle (bad) cmpsl lcall fucomip mov push aas sti outsl inc mov call (bad) wbinvd (bad) fucomip mov jns repnz hlt sti jae out call decl jmp ds std leave mov push incl out pop cld or icebp mov pop cld aaa pop incl mov call call (bad) cld loope icebp mov cld divb cld std cmpsb mov (bad) jecxz repnz (bad) fdivrl cld aas (bad) (bad) (bad) out lods clc cmp (bad) cld mov sti mov lock cld lcall pop cld (bad) jg mov jg pop std adc cmc ret push pop dec jmp jg mov fisubr idiv decl out jg lahf (bad) xchg (bad) loopne in ja clc not decb out daa cld jg jecxz xchg sar in (bad) sub not scas jns stos (bad) and fsubr repz dec mov push mov icebp iret fild (bad) adc (bad) cmpsl jg (bad) jle jge ljmp jg pushl out push (bad) testl (bad) lcall jmp hlt std fcomip push std icebp (bad) (bad) scas repz (bad) mov scas cmpsl idiv mov out dec inc jg mov aas stc inc aam out repz decb clc dec (bad) (bad) jg aas loopne cli (bad) jg aas sti sti (bad) sbb cmc outsl lock cld lcall jg out incl sarl pushl cli dec cld addr16 cld jg leave mov fstl xor jmp jmp lret aas repz fcomip xlat clc das jg outsl (bad) aas pop std mov out lahf cli ret (bad) out loop (bad) in jg imul out repnz icebp loopne cli xchg pushf mov (bad) fstp imulb jmp loop stc sbb shr aas cmc mov in jg insl div cld cmp dec fdivr cmp (bad) jg pop jbe,pn hlt inc mov dec hlt (bad) pop stc imul push outsl dec out pop (bad) xor mov aaa clc pop aas sti (bad) (bad) fstpt std dec stc lods jg (bad) cli cmp and pop std push push cmp cmc stos (bad) sti sti (bad) stos dec aas sub mov pop sti ja cmp out xchg std out xor repnz sbb jg pop (bad) inc fwait icebp jmp jmp ret mov mov jmp or ds (bad) cmp jge pop clc iret (bad) fstpt mov aaa cld cmp outsl (bad) jle pop out cli mov pop aaa jg jg aas inc (bad) in fwait aas mov xlat std mov cmp jmp lahf stc lahf std lods mov std (bad) lcall dec jg xchg enter das fstpt pop aaa fldcw fwait pushl sub pop lret mov std das cli sub dec (bad) push jg mov std add ljmp (bad) scas pop sahf lods mov ds out std iret (bad) cld outsl jle outsl incl sbb ja jl lock mov fwait jg xchg (bad) jg ds (bad) std out lock incb in jmp jg mov xlat pop std pop mov call jecxz ljmp lea cmpsl pushl clc das clc xlat pop ljmp stc pop (bad) ljmp cmc out cld repnz mov stc fwait std popa jg pop (bad) pop std idivl out in (bad) movsl (bad) in aas std sti dec mov xlat lcall (bad) push ja stos jg cld (bad) cmp mov ljmp lahf cld mov aas (bad) jnp (bad) mov cmc out pop (bad) in cli mov repz out cld mov cld dec jle das cmp repnz std inc incl std xchg jg hlt dec std stos repz sti pop (bad) aad loopne sahf std cmp push in std xchg (bad) pushf jmp sarl imul (bad) in pop repz aas pop mov add fistp pop jmp jg jmp scas (bad) aad stc xchg inc jecxz leave aas repz icebp call (bad) call sti jg icebp (bad) (bad) xor pop in cli stos dec aas clc pop sti pop (bad) fidivrl (bad) mov in (bad) clc mov sbb sarb mov mov lcall jmp lcall fidivrl (bad) (bad) cld out clc lods jg jg aas sti pop jg (bad) scas (bad) cltd mov mov in ja push (bad) call dec std call cmp daa jg mov dec jg fcomip out fmulp daa inc (bad) pop mov call jmp xlat (bad) cmp pop inc incb jmp lock sbb (bad) iret cld mov clc scas clc xchg lcall mov outsl (bad) in pop std mov mov cmc idiv dec ljmp repnz cld xlat mov sub out mov ljmp jmp jg out clc aaa std movq lahf repnz std cmpl insb ljmp outsl sti adc sarl aaa (bad) out outsl jmp fnop idiv jecxz sti lahf sti iret inc (bad) (bad) cld pop jmp pop cli imul jg jg das jmp (bad) in popf aas out das sti mov jecxz jmp sub xchg jg mov in daa (bad) jmp cli sbb mov (bad) cli ja mov cld jno stc mov pop cld (bad) addr16 (bad) cli scas dec in dec incl lahf (bad) imul mov std fcomip lahf out cld repnz imulb adc pop ja in pop lock shl aas icebp (bad) cld jae divb ret (bad) sti (bad) mov scas (bad) xor in sarl idiv cmc decb out lahf std mov lock dec jg das sti pop (bad) out jg ja (bad) stc jl ja ja jg sar jmp dec cld jae (bad) daa (bad) in mov xchg mov jg das call icebp out std out clc inc (bad) xchg jg das std scas push mov jle fcmovnu clc (bad) outsl (bad) aam (bad) sti sub mov es sti std jle fnstsw outsl std movsl jg icebp (bad) std gs loope pop push jg leave (bad) mov sti xchg mov idiv jle (bad) std repnz pop clc imul jg jg negl mov xchg mov lds decl jmp inc outsl cld addr16 cmc scas stc hlt ja mov iret pop std int out mov stos (bad) pop std pop mov cmp fldt idiv std out std cmpsb mov aad incl fnstcw xchg pop xchg in cld imul mov push das cs mov mov call jg xchg jg outsl dec jmp ljmp lahf sti xor pop cmp std xchg lahf cld (bad) in idiv push jg scas cmc out scas (bad) (bad) mov pop (bad) in stc pop (bad) icebp lods jg loope repz std ja fcomip lahf (bad) outsl (bad) popf jg iret ds call clc jne neg sti pop jle push negb aas sti arpl into mov out popf mov pop clc (bad) cld jle into mov jmp mov aaa (bad) push call (bad) notl imull addr16 mov imul mov cmpl mov (bad) in jg dec jmp (bad) in fisub ret out mov lret in cli gs jg cld leave jg fbstp negl outsl hlt out mov mov lret jle (bad) (bad) out (bad) clc ja sub cmc idivl jg pop (bad) fstpt daa das (bad) pop jg mov jecxz aas std ja cmp mov (bad) stc mov mov stos jg pop (bad) mov sti fwait call mov mov pmaxub (bad) test inc icebp pop pop fs cld std leave daa jg (bad) in pop clc cmp (bad) jmp xlat cld (bad) movsb fcomip jnp mov std dec std mov mov aas (bad) xchg jg lahf repz cmpsl (bad) out pop stc in lock decl jmp mov fcomip mov add clc pop jmp jg outsl std push (bad) (bad) clc stc out hlt pop (bad) in (bad) mov jecxz jmp loop incb clc dec dec iret mov hlt das sti adc cli loop cld lea mov (bad) mov pop cmp push push outsl jns (bad) adc ljmp pop decl mov push incl fcmove fbstp cmp aas testl stc in pop ljmp jg mov (bad) in pop icebp jmp jmp repnz call std (bad) (bad) mov lahf fidivr dec (bad) (bad) fcomip aas sti aas inc aas mov mov repz lock jg aas cli stc scas cli mov mov fstp dec jg pop repnz (bad) fadds fistp stc push sar in out hlt out pushl jmp ljmp fldpi outsl cmp arpl in std daa (bad) mov (bad) pushf pop jmp mov (bad) sarl dec jg loope cld jmp push mov jg (bad) jge cmpsl dec (bad) mov cld xlat cld cmp jg xlat cli (bad) dec ja lds xchg lahf decl cmp bnd jg sti pop cld mov (bad) mov ja cmpsl push inc outsl notb scas std dec cld mov std lea aas inc clc pushl call in das std sarl jg hlt pop cld (bad) cmc lahf hlt xchg dec mov (bad) fnstsw fbstp addr16 dec incl jle pop cli daa (bad) icebp pop inc jmp mov jg (bad) clc xor out mov aas cli pop mov out scas sti (bad) ss cli lahf popa (bad) sti cmc mov fidiv clc aad sti aaa fbld cld mov stc (bad) jge stc mov jg into push fistpl (bad) imul std lahf (bad) sarb sti sar clc fidivr icebp inc std (bad) (bad) in pop pop (bad) cmp (bad) cmpsl ja (bad) fucomip dec cli jne cld (bad) pop mull inc jg (bad) std ja fdivr stos jg aaa inc jg stc (bad) xchg int3 pop jp jg in fcompl testb jg aas mov dec decl add or mov xchg (bad) out scas (bad) ja mov std jge (bad) jmp sarl pop jmp addr16 push mov cmp aad loopne sahf movsl (bad) cli das incb mull sbb mov lds cli jnp push das (bad) fidivr sarl aas std mov (bad) cmc outsl pushl das stc lahf jg jg pop cld icebp jg (bad) (bad) negl cld mov les jbe scas aas stc mov (bad) scas pop (bad) sbb in cli je sti ljmp aas (bad) sar mov out (bad) jecxz in jmp cld addr16 cmp scas cli stos jg cmp repz out (bad) jecxz fistpl (bad) pop cld cli jg (bad) cli fist cwtl (bad) dec cld jecxz mov clc aas cli popf lahf (bad) cmp jmp mov int aad out push (bad) xlat mov jg iret in incb cld dec jle lods jg std out (bad) (bad) lahf std inc jg jg push (bad) idivb mov (bad) shr (bad) (bad) mov (bad) in (bad) pushf jmp loope mulb incb dec in mov imul push (bad) outsl mov in cld movsl inc neg std xor outsl clc idivb imul mov (bad) pop incb dec mov push pop decl decl (bad) clc mov (bad) (bad) outsl std push incb stos incl cmc xlat ljmp dec (bad) call pop (bad) data16 jmp (bad) shrl mov iret mov pop push pop ljmp push mov aas call jg out clc cli daa scas (bad) stc push mov dec jle das mov (bad) sti mov jg pop (bad) sar outsl (bad) mov scas stc lahf hlt pop call fisttpll mov std std in clc stc outsl mov mov lock idiv cld xchg lret (bad) xlat cld sbb (bad) mov cmc call fbstp fucomip jnp jg pop icebp cmpsl (bad) out mov pop jae cmp mov (bad) hlt jmp dec clc repz mov clc daa jle lahf hlt icebp fcomip aaa jmp xchg jg lahf neg dec jg aas loop mov je idiv xchg jg inc dec (bad) pop ss fwait cld loope loope pop std icebp jmp aaa jg bnd dec jg cmc push jg cld outsl cld push jg outsl clc push inc out cld stos decb stc xchg cmpsb std fcomip xlat jl das jle addr16 fidivr jg xchg cld mov decl stc mov out mov cltd in mov loop fdivr imul (bad) xlat jg cmpsl jg pop decb cld cld fwait inc fcomip pop call fs incb jne ret pop std paddd jg negl xchg cmc dec mov jg out sti dec dec jg inc mov mov cld xchg aas out outsl lock dec jg ret aas in clc imul std push jg lahf leave (bad) cld aam jne mov (bad) stc jg outsl (bad) stos call pop dec call (bad) pop pop decl cmc jg pop clc ja lahf jg aas repnz iret out cmc mov hlt addr16 ja lock repz jl (bad) (bad) jae (bad) idivb stc (bad) sarl cmp ja idivl out inc (bad) repz sti (bad) outsl inc inc cli mov and cwtl jg (bad) scas incl jl incb push call pop imulb push jg mov icebp cli mov hlt addr16 imul inc std fnstsw clc jecxz icebp pop std outsl incb clc xor mov cli (bad) cld and xchg addr16 fidivrl jg or xchg (bad) jg outsl divl (bad) pop push ljmp out aas cld sbb xlat clc cmpl lahf clc into aas js jnp cmc outsl lock decl jg (bad) mov lods lahf dec jg lods in pop (bad) pop (bad) (bad) loopne das and in aas fist fwait cmc mov jg aas (bad) outsl cld xchg aas ljmp hlt pop (bad) fisttpll mov cmc pop lahf nop (bad) cmp popf aas insl hlt imul xchg pop notl scas stc mov mov jge (bad) les sarl mov xchg aaa insb popf cld int aad testl stc pop jg pop stc mov (bad) movsl mov decb repz mov daa (bad) fdiv idivl aas stc psubq (bad) pop cld (bad) jg jns pop incl incl pop jg into pop sar int ficompl (bad) sar jg cmc jg (bad) ljmp jg idiv or cld (bad) or negl repz cld mov (bad) jg icebp das std fidivr cld imul mov idiv lea fbstp mov (bad) call stc mov push mov pop mov or xchg in push std outsl jmp outsl lock cld cmpsl idiv leave fcomip iret cli xor out outsl sti int jg insl into (bad) mov jnp mov dec jmp cmc sti jmp iret pop stc lods mov repnz std sbb popf fcomip sarl das sti jmp mov (bad) ljmp scas cld gs (bad) pop jmp hlt cmp pushl (bad) outsl mov mov enter dec (bad) dec and inc idiv idiv cwtl cld lahf jg scas clc into scas repz cld mov std scas dec jle aas stc pop jp mov aas clc aaa std mov outsl (bad) daa call addr16 mov xchg cld addr16 jle addr16 (bad) mov notl jg imul jmp das mov aas nop in das clc outsl inc aas out (bad) hlt (bad) cld ljmp jmp lock sarl jmp mov jg jg pop clc jecxz decb cmc aas repz (bad) (bad) sti mov (bad) dec stc outsl jg aas jmp mov ljmp sub negb stc out das (bad) jnp std dec std in cld outsl stc jnp jecxz mov out aaa sti and dec push jge loopne cli in lcall std cmc enter jg lret (bad) std aas cli clc dec (bad) imul std std jge mov out ljmp fcmovnu not clc jge lret fucomip aaa clc lea aas cmp mov (bad) mov sbb (bad) test cmp push ja mov leave mov cmc xlat lcall (bad) dec decb stc test repnz pop incb idivl idivl cmc div cmp daa (bad) icebp pop icebp addr16 loope in (bad) clc aaa cmp push mov loop jg addr16 jmp mov (bad) imul jg fwait (bad) ljmp pop (bad) mov bound out push aas xor sbb int ljmp mov sti popf lcall mov out jg cmpsl jle mov fstpt (bad) pop lock idivl out mov stc jg mov shll mov std bnd jnp decl aad out jb scas sti xor in pop cld jnp xchg stos ja cmc mov (bad) mov loop cli daa jg mov dec popf (bad) jmp int or das call mov (bad) aas in (bad) jnp (bad) pop call lock decb push decl clc imul jg daa jg jg scas jge (bad) fcos ljmp push inc (bad) sti lahf (bad) fwait std mov fistpll loop clc ror idiv xchg jg push std std mov negb lock decb jg stos (bad) mov jmp sti addr16 pop jg (bad) stc addr16 push jg pop popf incb mov jle leave scas stc xchg outsl std fidivr mov repz decl scas pushf dec jg aas sti pop (bad) sarl out mov xor sti aas repz rcrl aas negb cld (bad) jg cmpsl lds mov mov mul xlat (bad) cmp psubd ja cld fucomip out stc lods call fildll leave aas hlt or pop cli mov jg das sbb cli pop (bad) loopne jo popf jg outsl (bad) mov mov (bad) clc pop pop (bad) insl jg dec ljmp pop call ljmp (bad) daa decb jp clc out stc sbb cld sti jle (bad) ljmp out idiv adc cld cmpsl jle (bad) jmp stc (bad) into jg cmpsl jmp or fcomip mov outsl cld cmp xlat repz xchg (bad) fsubrs (bad) xchg (bad) jle mov ficomp std (bad) pop mov incb scas push das sti in (bad) std push aas (bad) sti (bad) rcrb (bad) decb jg scas negl std dec jg pop std xchg add repnz cli pop scas jg das std into sar lock stc inc (bad) in aas js pop mov aas stc outsl sti loop cld inc (bad) fldpi (bad) outsl (bad) jecxz jmp fistpll stos (bad) call mov jg das std jmp sti ja jg mov (bad) fdivrs (bad) mov out xchg mov in scas cli or pop pushl aas in psubq jle hlt fnstsw xchg jnp (bad) lock (bad) mov jg pop jecxz jne aaa std mov inc dec jg aad sti out cli (bad) cld push mov daa jge scas jge repnz stc idiv mov clc (bad) jmp inc jg lahf sti push cld cli adc lahf jmp daa (bad) jmp je (bad) fwait pop cld iret mov (bad) push mov cmc jnp addr16 pop repz aas cli lods (bad) loope out ja lods jle outsl repz xlat (bad) fsubl das inc decl (bad) (bad) pop pop cld in mov aas imulb sti icebp pop cmc lret cs mov out (bad) std or jecxz std inc ss lret mov incb std div ds loop stc and mov shrl outsl std test cmp xor (bad) jp cld xchg test in iret std inc stc idivb divb cmovg pop std out (bad) cli pop inc pop repnz cld imul jg outsl hlt sti sbb ljmp stc iret (bad) mov sti (bad) fldpi cli outsl (bad) xlat (bad) lcall jg out (bad) stos jg (bad) out jecxz in jg lahf std scas std push jg out divl cld ds cmc cmpsl std mov dec out jl push std mov in clc paddw xchg mov (bad) lock in mov out pop push cld mov icebp lret rcr (bad) sarl jg in call (bad) mov not outsl clc idiv aaa (bad) in (bad) ljmp incb push lahf notl outsl repz les repnz test icebp fstpt sti dec (bad) jecxz jmp jg ja sti in push movsb pushl jle (bad) outsl inc icebp jecxz inc (bad) mov pop jge mov sti in leave decl jecxz (bad) dec (bad) mov lret scas std fidivrl stos jg lahf cmc jg insl in fcomip pop incl ljmp (bad) scas iret jg cmp hlt jmp data16 mov out clc aas jg xlat aas std mov xlat jbe xchg (bad) std pop stc mov loope neg (bad) addr16 (bad) fscale pop fmull scas scas (bad) sti pop repz fwait ljmp fwait cld mov loop mov fistpll xor (bad) xlat mov divb (bad) jae ret fwait mov pop ljmp jle icebp lahf cmc sbb mov (bad) jg outsl ljmp repz jmp out idiv push jg std pop cmp aas out (bad) cli pop push (bad) mov jg aas stc dec jle mov xchg lcall pop inc jmp pop (bad) ja adc loopne bnd jg fcomip jnp (bad) scas iret jle mov decb leave lahf (bad) clc (bad) into (bad) mov repnz jg out std imul negl out (bad) loop call cmpl (bad) (bad) jne lahf mov aas in pop dec ds out pop cld popa (bad) jmp icebp pop decb (bad) stc push cld mov outsl std lahf jg mov xchg lds (bad) aam repnz (bad) stc out jnp aaa (bad) fsub jg rcrl iret (bad) sti (bad) scas std rcr aas sti pop std mov push das inc (bad) fistp out scas dec ds mov pop jg pop sti ja loope ror inc jg scas sti xchg std lea inc (bad) mov repnz cli lahf mov ljmp std lahf std (bad) rcr in push call jg scas jnp ja fidivr negl pushl jg test sti (bad) fnstcw clc outsl cli and fadd (bad) jmp inc (bad) mov cmc mov decl icebp jnp out repnz out mov fbstp aaa ds sub repnz hlt aas cli mov pop cmc fstpt cli test aam cmc push (bad) cmc ja cld mov jmp jg pop lock (bad) mov cs incb stc mov std push (bad) xlat adc pop ljmp mov cmc dec fcomip das outsb negb incb outsl (bad) mov sti pop inc mov jle call (bad) lahf (bad) pop (bad) (bad) xchg call pop repz cld sti push outsl test aas repz jmp scas lcall (bad) fcompl dec jle jg out cld lods jg jg dec clc outsl out (bad) xchg mov mov fcomip outsl std mov ljmp repnz decl int dec out iret out stc fnstenv out fucomip mov push (bad) loopne mov and paddd icebp out lcall fldcw (bad) fwait call aas repz std in repnz mov std lahf (bad) cli hlt (bad) ljmp (bad) sahf (bad) adc jle fucomip call repz push mov push (bad) loope clc ljmp pop dec out decl std aas inc std jmp outsl (bad) stc idivl aas mov xlat (bad) cwtl jmp jecxz jb cmp cmpl jmp cli subl loopne in fistpll pop cld pop jg shrl cmpsl incl dec out (bad) and xchg inc in cld jmp roll dec cli clc lahf stc mov lahf jl pop sti cmp stos pop lcall xor aas jbe mov shr imul dec cli xor clc dec std iret pushl push (bad) jecxz out std cmp sar aas loop lds lahf jmp (bad) jmp inc xchg (bad) mov cld dec cli pop incl cmpsl call cld (bad) xchg aas stc dec (bad) sahf aas std daa call loop clc popf pop cld ret jg cld cmpsl mov std mov mov dec sahf pushl dec mov pop cld jmp aas lcall xlat (bad) mov mov mov cld (bad) xchg std jge (bad) mov jl lds mov mov (bad) in sar clc (bad) push out clc ljmp daa jg shr (bad) cld cmp aas decb das jg lahf decb mov mov xlat aas (bad) std sub cmc repnz std (bad) lahf imull pop (bad) and pop bnd jp int out hlt (bad) (bad) mov jg das (bad) cmp lcall in sti call (bad) outsl std aad leave outsl clc (bad) std (bad) xlat int mov mov das (bad) lahf (bad) xchg aas cli (bad) call jg sarl (bad) inc jecxz aas mulb jl mov jnp (bad) iret mov vpsubw loop cld cmpsl push (bad) in cmpsl out std test lahf icebp xlat jl addr16 cmpl idiv sar imul mov jg aas incl mov cmc das stc pop (bad) stc pop jmp mov loope sti add mov (bad) clc jg lock arpl in outsl sti jae cli movhps (bad) stc pop (bad) mov repz xchg idiv out idivb sti sti jg lods jg scas sti mov aas std cmpl mov jg iret jmp pop sti push std repz (bad) fnstcw lock clc in outsl std in out fcomip cmp imul jmp ljmp push call das jg outsl std pop jg pop cli aad jg das incb mov aas (bad) cmc (bad) idivb (bad) pmaxub cltd mov (bad) out mov jmp pop jg mov stos mov das stc pop ja aas call jg repz lods pop cmp jg imul incl cld fistpll jmp fdivrp dec jg out clc sub mov inc (bad) (bad) (bad) dec inc jg hlt iret cli push decb push (bad) call mov mov repnz sub outsl cld jg test outsb inc das clc js dec icebp repz (bad) lahf jmp stc aas stc cld dec clc pop out (bad) adc (bad) cmc repz push (bad) out mov in lock (bad) cld (bad) push fucomip (bad) (bad) xchg mov pop (bad) sbb cmp pop push jg pop dec hlt ljmp jg (bad) std icebp das jle aaa (bad) clc in ja mov das decl adc jg mov (bad) mov mov rcr out pop jg pushl outsl sti mov fcomip pop (bad) sbb std xchg scas mov jecxz icebp aaa popf std sbb iret (bad) cli mov mov jg aam clc inc cld (bad) (bad) pop xchg mov (bad) incl mov ja add sti std imul sbb jnp push xchg jnp (bad) int3 aas not (bad) jnp in repnz pop jg pop pushl stc sti (bad) mov std mov pop cld jne ret push mov incl jno xlat out cld xlat std xchg jg mov mov out (bad) mov (bad) mov dec jg pop sti cmp mov cltd lcall scas cld pop ficom cmpsl jg mov out aaa stc insl inc arpl mov repnz xchg adc push pop std jle inc das clc lods inc scas (bad) mov cli repnz pop jle (bad) sti ror jg (bad) jge sarb std xchg jecxz in out clc out dec jg mov sar in xchg cld adc call jg mov jle out pushl out jg out push jmp mov (bad) sbb (bad) das clc out jg fbld stc jne (bad) mov sti inc aas loope sti insl xchg cmp pop ss arpl jg mov outsl hlt (bad) stc mov sar mov jmp fcomip test mov cld sbb aas cld aaa lcall outsl cld jg jl mov (bad) lret call jg (bad) (bad) decl jo lahf clc and jg dec jg jmp jp mov jg das clc sarl mov cld (bad) pop (bad) sbb js pop sub aas (bad) in out mov outsb mov cld ret clc inc mov decb pop std sti gs sti std imul mov out pop jg repnz fcomip sarl stc xor (bad) pop (bad) sbb pop idivb push lcall mov stc das (bad) fstpt fcomip hlt jg fnstsw (bad) jmp clc jecxz cld mov outsl (bad) push mov sti lea mov incb iret cld lods (bad) pop inc lcall call stos (bad) (bad) jo call jmp fistpll cmc aaa ds sbb xchg cmp jns out negl std decb pushf call cmpsl das mov std out jg aas xchg call jg out and jge cli lahf frstor cli std bnd pop (bad) and (bad) sti (bad) fstpl dec hlt sti (bad) dec mov hlt outsl (bad) xrelease int3 out repnz and out (bad) aas push std push fildll dec inc mov ret jle pop out aaa cli pop incb (bad) out inc std popl mov aas clc add loopne fcomip cmpsl ljmp loop fucomip xchg dec jmp (bad) cli jg outsb inc push sti outsb (bad) mov aas repnz cwtl aas call (bad) mov repz (bad) daa (bad) pop scas mov mov aaa mov jg ja scas fist mov lahf daa cli push jmp mov push fnop (bad) clc test (bad) out jl cld orl (bad) std add lcall mov inc push (bad) cld out cpuid call mov inc (bad) aas lock ljmp pop cmc pop (bad) sbb fistp jns mov mov cmp iret (bad) push in icebp adc call inc (bad) mov inc inc (bad) mov sbb (bad) ficomp addr16 scas inc incl cmp push sar aad cmp std (bad) (bad) (bad) xlat stc mov pop icebp (bad) adc jmp jg sbb xchg mov mov push bound or mov fcomip scas stc fidiv mov out das call decl jg das cld jmp jle (bad) clc out sti inc (bad) scas mov and jg mov das ljmp xlat daa stc stos (bad) mov imul cli call in fcomip sti std outsb jecxz jmp clc pop cld dec cld es stc iret (bad) (bad) mov out repz push mov mov loopne fwait ds popf jle lahf sti lret aas std (bad) mov (bad) (bad) (bad) in (bad) negl lahf lock xchg (bad) cli mov jae (bad) mov mov loop mov push (bad) mov aas lods ds jle jg repz out push (bad) ljmp mov out cld (bad) in sti daa xchg jg leave (bad) jg fstpt shl fistpll das jmp mov shll aas stc arpl cmpb repz sti addr16 (bad) rcrl cld decb (bad) pushl std jg sti leave das clc or xchg mov cs pop cld push jg mov das mov (bad) int (bad) ljmp idivw xchg fbld scas cld (bad) dec push dec (bad) mov adc jecxz inc cld cmp cmpsl jg pop jmp mov ja (bad) call jle aad (bad) (bad) xor fistpll push mov jg mov repz fucomip das pop std mov sti (bad) jg js out lods push pop cld iret cld mov jecxz cmp mov mov lock stc jmp xchg in enter idiv pop dec pop jecxz (bad) xor pop (bad) fistpll cli pop mov mov mov lock stc scas jle hlt ror jl cmc mov imulb std or pop std cmp aas sti xchg pop mov fwait jg aas mov jmp add pop repnz std mov out negl pop push cld pop fstpt jg outsl std idivb cli mov jb (bad) aas (bad) (bad) ret das (bad) sarl outsl repz (bad) cli jg xlat fstpt cli cmp fstpl mov push jg pop idivb popf cld iret jmp (bad) ja insl aad repnz cld fstpt aas sti pop cld xchg jg ret stc aas (bad) (bad) (bad) jg outsl clc mov (bad) jg ret aas jmp popf repz (bad) jmp lcall jmp push incb sti lods ja aas sbb cmp or (bad) pop addr16 out stc imul aas (bad) xlat (bad) idiv sarl jle lahf jne jg cmp das clc (bad) outsl sti or pop cmc popf jne cld inc std lahf jmp inc (bad) inc jg jmp (bad) dec jmp push std (bad) jmp sti (bad) call cmc idivl pop jo mov jl xchg ds xlat std pop jg fstps cld fildll fcmovu ds mov jle mov call aas clc das mov mov decb inc loop cld jne ret lahf js push (bad) loope sti xor pushl xor outsl std lahf inc leave fstpt (bad) repz aas out ja dec cld repz ss lahf stc mov outsl repz pushl inc (bad) fildll pop mov out mov (bad) jmp push (bad) in leave pop cld push cld jnp inc repz call fldcw pop sahf mov sti inc jmp aas loopne cli mov (bad) fwait (bad) aaa mov clc jge cmc repz aas std cmp aas stc outsl lcall int dec mov mov stc (bad) (bad) decl xchg pushl cld mov into mov into (bad) mov out fcomip cmpsl sbb jge pushf jg das jge std cmpl jg (bad) sti mov xchg std cli out mov mov mov (bad) mov aad dec icebp iret jg mov sar cli xchg mov (bad) jg mov lock loope jg hlt iret std push jg icebp das std jle (bad) out lahf (bad) fisubr cmp lods push (bad) (bad) xor fcomip imul aas cld jecxz in xchg inc aas negl hlt (bad) jg in xlat ljmp stc in hlt addr16 mov incl cld xorl das jle jg das sti push aas repz std cmpl jg pop lcall jmp xchg mov aaa jg pop aaa (bad) jmp sarb cmp repnz dec incb push jg into pop hlt mov das clc sarl aas lock mov outsl negb push mov (bad) decb cmc jle in das sti imull stc sub std push lds mov call sti in jle daa jbe incb push incb pushl (bad) out lahf cli mov scas jg scas cli cmp rcr imulb jle leave fistpll fprem1 mov jg pop mov gs jl mov pop lock cltd jg clc out stos jle loop (bad) call loope sti idiv lcall ds (bad) jl imul (bad) xchg leave jg cld xlat call pop notl dec ds sarl iret (bad) push fstps repz xor xor (bad) (bad) lcall jg sti inc in (bad) out (bad) loop cmpsl call mov fnstsw xchg mov (bad) (bad) std xchg scas fcomip mov jg push (bad) cmp aas (bad) paddd imul sub (bad) inc jmp aas call mov das gs (bad) aas in addr16 pop sti outsl pushl xchg aas loope cli (bad) pop (bad) fsubrs out cli movsl jg pop xor aaa cld lret (bad) in jg pop std pop jg lahf repz cld mov incb xchg (bad) stc inc ljmp aas repnz out hlt ja insl idivl mov outsl and (bad) (bad) out mov cmp xor aam loopne clc adc std xor (bad) jg xlat cli jnp (bad) out ljmp clc cmp fnstcw mov mov cmc leave aas stc xchg cld out ljmp push (bad) call jg stc scas fistp fcomip call jmp (bad) jnp out mov out jl adc (bad) in lahf (bad) cmpsl inc out cld cmp pop repz dec jg ja jge (bad) icebp scas stc cmpsl jg ret mov aas loopne std shr push cld lock xchg cld xlat cld mov fst mov xchg jg mov mov cld fstpt aas (bad) mov jg aas clc fwait call loope (bad) dec incl jl lods pop sti loopne std sbbl sti idiv aaa cmc mov fucomi negl mov lahf std sub inc std jp movq outsl dec incl popf inc mov call mov jle (bad) call mov repz pop (bad) mov das (bad) cld mov iret incb (bad) jecxz jmp pop hlt idiv push das (bad) cmpsb aas loope sti in incl mov rcrl lock es fdivrs xlat clc jae jecxz insb jns pop (bad) jmp mov loope hlt sbb imul aas clc xor pop cld loop (bad) aaa pop mov aas loope jle paddd in push jg inc mov pop jg pop cld xlat mov fstps das aas (bad) cmp loopne clc das jl mov or jg (bad) mov xchg pop call leave mov lds cli dec std push mov jg fistpll mov ds jmp pushl sbb dec repz pop xchg (bad) sti jg dec cli xor xchg cld xor cld pop jg (bad) std insb idivb jl mov inc stc fistp dec jg pop std lret fdivrp arpl cld jge in idiv test cli pop cld adc stc in jg std std mov cld out (bad) iret pop std fcos out jg repnz ljmp aas std out (bad) pushl push std mov (bad) sar in std mov sarb mov negb clc mov inc (bad) fisubr daa cld push aad std pop fs mov out call fwait std xlat push (bad) jp iret jnp fist aas cli mov aas hlt addr16 cli idivl in mov dec data16 scas repz (bad) sub incb stc cmp rorl cld in decb mov xchg mov idivb clc cmp xchg (bad) clc outsl mul aaa decb lcall std aaa sub mov std push aas std sarl (bad) idiv out pop cli aaa aaa pop mov fdivrp mov mov pop std mov cld paddb mov dec jg aas dec fildll cli fstpt (bad) idivl pop dec stc inc cld mov loopne sti icebp (bad) (bad) int loope (bad) jmp aad loopne (bad) fwait jle lahf cmc cmpsl std xchg jg scas cld iret jle aas push cmpsl (bad) push aas in psubq out sbb xchg pop cmp roll out cmpsl push pop hlt (bad) sub loop clc arpl or stc jg fwait std jne fistpl clc mov aam mov nop fcomip repnz jg inc mov cmc mov stos iret mov inc inc mov aas (bad) cmp sti (bad) ljmp scas sti paddw jg out mov cmp push (bad) jg hlt out dec jg scas cld stos (bad) xchg aas test test stc mov (bad) cmc jg lahf movsl cmc (bad) aas jbe (bad) cli das jmp jg pop cld jle in mov lahf std xchg mov jg fcomip das decl imull mov loop mov int3 outsb inc imul jg div decb jmp cld cld (bad) inc scas (bad) popf ljmp (bad) mov int (bad) aas (bad) hlt out fstp ljmp repz sbb fbstp out (bad) out mov (bad) stc stc pop cli scas decl out cld jno into mov pop incl call cmc (bad) xlat fcomip das cli gs cld das iret (bad) fidivrl in lcall (bad) fstpt incb outsl jg cli clc dec sti jne std sarl (bad) out iret (bad) mov pop (bad) (bad) (bad) decb (bad) cld push dec aas cld inc (bad) cli (bad) jmp cld aas fistpll fucomip into loop stc sub mov (bad) (bad) arpl ljmp mov cmpsl std jnp divb mov mov call mov (bad) test mov jmp mov cld fnstsw das cli clc xlat cld xchg cld inc (bad) cmc rcrl (bad) arpl out std pop dec pop jg call mov mov out in cli dec ljmp mov sub ret aas cmc aaa ljmp jecxz idiv lret xchg jmp jg ja (bad) (bad) idiv cld outsl decb cmp pop notl std pop (bad) in das jp cmp xchg mov (bad) mov stc pop sti dec (bad) cmpsl cli mov (bad) add (bad) outsl std pop inc repz repz sub mov (bad) iret (bad) in mov jg pop negl mov cmpsl call cmp scas cli dec into (bad) out mov in mov stc ja sbb jg outsl lock icebp daa (bad) out dec xchg jg inc (bad) mov paddd pop clc inc incb in jl dec cld mov repz dec jg mov std std idiv jnp lahf lds xchg in cld es das (bad) ljmp jmp jg pop jge jg in (bad) movsb jg sti jg lahf repz cld in imulb cld fidivr mov pop repnz cld out push lahf stc scas jmp aad clc pop jg (bad) std ja dec icebp repz cld paddw mov mov dec mov cld scas mov std daa jg dec cmc out outsl call lahf lock (bad) daa mov jle lods (bad) call cmc (bad) incb (bad) pop sti xchg jg outsl dec jmp out jle lret jg ficomp fwait jg jmp push mov mov lcall mov idivb fnstsw das sti ja (bad) mov cli jge lret jg out (bad) xor xchg cli (bad) mov xlat std dec call insl icebp out xlat imul (bad) ljmp ja aam mov push pop cld scas in sbb scas ds mov stc std (bad) hlt jg fcompp hlt xlat movsb cmc aas mov mov mov lahf stc mov pop jge push std out (bad) fcomip mov leave fildll xchg (bad) fsubrs out cld jge (bad) (bad) scas icebp pop (bad) mov stc scas mov hlt xlat (bad) fistpll lods aas cld int aas stc cmp xchg (bad) into ds arpl lret stc fwait jg scas jle std xchg jg mov inc mov into fcomip aas clc arpl out pop jecxz (bad) cld jg in fildll mov (bad) jg das stc lods decb dec call pop ds stos inc mov incl out sti std jle aas std psubd (bad) mov xlat cld pop (bad) ljmp daa mov jle test scas (bad) fnstsw hlt (bad) mov hlt das out incl clc lds lret (bad) fstpt repnz cli mov (bad) mov mov jg call xlat (bad) stc loop jnp das adc mov icebp sbb xlat std dec ljmp repnz fidivr stc popf lahf imul (bad) jnp mov incb dec push inc scas mov add pop testl outsl repz pop (bad) out outsl cmc fdivrl iret cld mov xlat aas icebp xchg xchg jg scas ja cmp adc (bad) lahf int3 jle outsl lock inc mov jle pop cld loope enter (bad) idivb outsl jne fist jecxz (bad) (bad) scas jg into jg jg icebp (bad) (bad) cld fwait decl jg out jne out xchg cld lods dec mov jg pop icebp out (bad) cmpl cli (bad) (bad) jmp out clc gs (bad) std sbb push cld idivl mov neg data16 mov jg xchg jg loop aas cmc (bad) stc in jle pop out idiv insl (bad) sti jg aaa addr16 std dec in decb ret call lret (bad) sarl in (bad) cli push jg,pt (bad) fistpll mov clc aaa and stos fld1 pop std dec decb out rcrl icebp lret outsl dec (bad) test lock push cmpsl std cmpsl mov jmp (bad) loopne and cmc iret stc lods jg dec jmp jg mov mov fdivrs out sti push mov push aas je aas cli (bad) movsb cmc pop cli aaa lcall ja mov cli (bad) jl pop cld (bad) jg mov (bad) mov (bad) decb sbbl mov jg (bad) cld repz scas clc cmp clc xchg mov call (bad) gs (bad) sub in idiv sub sti pop std addr16 fdivrs (bad) imull mov hlt mov jmp idivl push pop cld push outsl ds pop mov jg jmp loope jle out decb out hlt jnp movsl push pop jno xchg rcrl stc stos (bad) jg in jle aas push cli aad outsb icebp aas std pop jg jg out insb incl fwait decb out lcall iret pop std mov stos jmp dec push outsl (bad) (bad) (bad) cld xchg (bad) fsubp outsl icebp fstpl fstl jp outsl pushl jg jg outsl incl cwtl loop ljmp mov out jecxz ds scas std in out lcall (bad) jg pushl (bad) sbb fistpll (bad) std (bad) (bad) in das clc insl mov (bad) xchg mov jg out imull aas jl idivb cld loope das cli push and (bad) ljmp in dec (bad) (bad) stc mov ds insl repz mov std aas call jmp add popf fnop (bad) (bad) mov mov stos jg (bad) scas ljmp lcall (bad) sets xchg jg (bad) cmpsl (bad) stos push fstpt mov pop icebp lret jbe ret jecxz ljmp dec jl repnz out sar jg icebp (bad) cmpsb jg outsl (bad) cli out stc fistp pop aaa jg pop sti pandn in jg pop clc cmp jmp lock aaa cld add dec hlt sti cmpsl jg scas jle jg mov out (bad) xor lahf std mov (bad) ja mov hlt scas (bad) mov push jns idiv jmp movsb jg jge pop movsl stc (bad) in mov in pop pushl lds jg outsl inc jmp mov jg loop (bad) pop (bad) in jg pop cli jb sbb cmpsb (bad) (bad) (bad) jge outsl jle cld icebp pop stc mov mov negb cmovg jg aaa cltd jge out and aas jle aas in js fwait ds xor ljmp (bad) xchg push (bad) stc (bad) lahf std test jne ret jg lahf mov mov (bad) in jg stc (bad) mov ds lret (bad) mov incb xchg dec lahf notb fstpl sarl std (bad) pop inc aas out daa (bad) ljmp pop (bad) aas std movq (bad) lcall inc (bad) std (bad) cmp outsl (bad) xlat std cmp leave jg dec cmp call cltd (bad) lahf cld mov stos call pop jmp cli roll das clc xor xchg jecxz cld sbb movsl push (bad) std xchg jle dec (bad) arpl call in dec jl cld aas mov mov clc ficomp push cmpsl mov jg pop clc repnz jb addr16 daa aas icebp scas popf (bad) mov sbb loop std icebp pop jnp jnp sarl mov sti clc jmp fstpt (bad) pushl jmp jecxz (bad) icebp jg paddw lahf cld lahf call (bad) scas cld ljmp lock (bad) cmp (bad) das cli sbb jecxz cld (bad) push jg jg in (bad) std mov das std mov cmpsl (bad) bswap decb inc (bad) xlat pop jbe jg int out loop sub jg jne movsl rcr stc iret std sbb leave (bad) out repz gs xchg cld aas cld cmpl aas jle lahf ds jmp (bad) fnstsw (bad) ljmp std ljmp mov pop jecxz cli jmp (bad) in decb out (bad) fldenv scas dec fcomip dec stc mov adc cmpsl movsb mov ljmp cs jmp outsl jle lret (bad) out mov (bad) xlat mov ds stos mov (bad) cli addr16 sti mov sub cli decl ljmp pop cld jae hlt (bad) das adc std jae dec icebp ja loop (bad) ja mov aas cld out sti xchg out ljmp das cld jae add int3 loop stc cmp cmc pop cld out jg negb fildll mov addr16 mov cld or les lahf std adc inc (bad) jg jae cmpsl jg idiv sbb xchg mov inc pop repz pop (bad) pop stos aas in stc dec dec mov std (bad) clc jnp rcrl aas cmp cmp jg mov les in iret clc xchg ljmp cmp aas lock pop ljmp jg call test cmc jmp out clc (bad) incb sarl jle out icebp dec jmp (bad) fildll bnd fistpll addr16 stc pop jmp aaa cld daa data16 sti scas mov inc (bad) stc daa mov pushl dec (bad) jmp cld inc call mov jg aas stc pop ljmp sti in aas sti jae movl jle scas (bad) jecxz clc lahf std and mov (bad) aaa (bad) mov (bad) iret cli mov std dec jg jg out dec jmp pop hlt cmp ss aas sti leave stc scas repz jg ja push jmp incl outsl decl loop mov imul (bad) cli lahf sti call leave jmp ja ret jg (bad) lahf aas std outsl (bad) fnstcw loop sti ja cli jmp arpl out std pop decl ja decb mov in cli pop mov int3 aas ljmp mov jg fcomip ja push sbb pop jle pop icebp xchg cld ret jg (bad) fcomip sub (bad) cli mov in pop sti jnp jle iret enter mov (bad) aas stc outsl jg jg fistpl inc aas decb push cld repz xlat (bad) cmp jg ja std (bad) lcall (bad) mov jmp decl clc ja jle repnz (bad) call sbb notl clc ja (bad) mov jmp cmc out imul mov repz scas sti adc xchg icebp scas jmp scas inc xchg mov (bad) xlat incb push jg aas sahf loop ja in cld lret xchg aas loopne (bad) mov decl jg scas sti xchg (bad) das mov dec aas imul (bad) (bad) (bad) stc ja loop clc aaa jle pop icebp aas (bad) mov cld int xchg mov (bad) mov in out std push jg std (bad) stc out popf std clc pop imulb cld movsl (bad) mov sti sbb cmp mov (bad) outsl stc lahf in jmp stc lahf jmp (bad) in jg pop incb jg outsl repz fnstcw jmp pop push jg lret aas in ret jg addr16 rcrb loope hlt aaa jg xchg iret jmp pop repnz cld fidiv cmpsb mov push jg outsl stc lret jg aaa clc test shr mov (bad) pop call ljmp mov pop (bad) jmp mov and jbe loope cld iret cmpsb call scas cld ja mov (bad) std fcomip xchg std dec jg cmc ljmp cld fistp mov loop repz jg lahf clc mov mov cli xlat (bad) mov push scas mov cmc pop cld mov fcomip jg imul std scas das (bad) lods repnz std (bad) lret das std fstpt jmp jecxz aas hlt xlat cld stos mov cmc aas cmc (bad) mov std out pushf jmp mov repz push mov stos in mov out fldcw arpl pop inc ds jne std sti mov jne mov jg jg divps dec jmp mov sbb test lods pop cld clc pop repz cld lret jg das cli sbb mov data16 cmc fnstcw notl fucomip ja ficomp aad clc pop (bad) push mov (bad) pop (bad) (bad) push ja lcall cs (bad) push (bad) dec aas (bad) aas std movsl inc das jns sub fstp loop fwait push jg pop jge scas (bad) in pop (bad) (bad) daa decb daa jg jg fwait std jmp (bad) mov mov cli aas repz lock pop jg out stc das jl pop cld adc stc inc jg in addr16 rcr in jg in lcall outsl lcall (bad) sbb mov (bad) fsubs fucom ja dec xchg xchg aas jmp (bad) mov std (bad) jle fldcw pop jmp mov (bad) scas clc xlat jle fistp jg incl jg dec std mov pop std (bad) mov cli (bad) fdivr sbb (bad) cld mov loopne jg scas call mov fnstsw dec (bad) (bad) aas popa sti psubb ljmp (bad) cli mov and mov (bad) std ja out jb lds hlt lahf dec in bnd mov paddd aas jmp or lahf cld push jg fcomip lahf mov dec jg lahf clc (bad) pop lahf adc (bad) fmul cld pop xlat mov mov icebp repnz jmp inc mov decl loop std pop (bad) (bad) cli out cld aas out std xchg mov stc addr16 jg dec (bad) pop jmp imul outsl clc xchg cld mov iret std test call fld fcomip aas std inc jg fbstp scas (bad) xor gs jg pop sti push cld cmc aas cmp lahf clc mov idivb mov jg hlt aaa stc adc jecxz cmp imul (bad) negl incl pop jp,pt xlat cld (bad) (bad) (bad) in sti cld iret stc pop (bad) in mov pushl std repz lahf cld sub dec jmp jg jg daa (bad) fidivrl mov lock popa mov call aas std (bad) sub ja mov insb sti (bad) (bad) jecxz shll jg push pop out cmp clc mov jmp ret pop clc loop (bad) mov lcall jnp icebp (bad) aas lock pushl idiv mov iret outsl repz (bad) (bad) fidivr mov (bad) out out cli popf jg aas cld jg lret fdivrp dec mov ret jle outsl lock cld in (bad) icebp iret incb push dec (bad) mov in jg aaa cld (bad) push std lods pop jg pop notl hlt loop std stos scas jle mov jg xchg std jge loopne cld stos jg das clc ljmp das and addr16 idiv enter out cld jp into ja repz (bad) cmc dec push call jg pop mul mov add icebp xlat cld cmp in fcomip mov pop divl jle stc (bad) call lahf (bad) iret (bad) arpl jg aas loop jnp hlt lahf dec cli jecxz iret inc jle push xchg std mov (bad) mov std pop fidivrl lahf in lcall std (bad) stc jmp pop std pop mov mov ret mov iret (bad) cltd (bad) in xchg std idiv negb cld scas decb pop in pop stc sarl mov dec jle pop idivb sbb out cli ret stos mov sbb xlat std (bad) (bad) scas jge idiv lds lahf cld iret pop pushl fdivrs jg mov ljmp ds cmpsl (bad) mov clc jne cmpsb pop out (bad) cli dec jnp,pt jle loop jmp mov aaa jmp jmp idiv scas mov lds cli pop cld pop mov pop std sahf jg out repz lahf jns pop cld ret inc das pushl (bad) fstpt aaa (bad) into pop hlt mov sar in mov cld cmpsb jg loope sti push (bad) out aad inc (bad) out ljmp scas dec jg cmpsl sar aad clc fcmovnu sti lea jg push (bad) mov push out std imul mov sahf pop (bad) mov loop sti lret dec fcomip repz js pop (bad) xchg idiv out in pop mov cmp mov leave aas std leave pop dec inc fbstp dec scas (bad) (bad) pop idivb push (bad) clc (bad) xchg jg lahf cli sub pushl out decb repz aad loope cmpsl aas std (bad) mov aas aas sti aaa decb scas (bad) push jg (bad) pop addr16 jle xor xor cmpsb cld icebp fcomip or repnz cli das clc dec jle push lahf fdivr ret decb cli ja or (bad) (bad) and lea jmp addr16 jg cli pop (bad) xchg (bad) out push (bad) fsubl dec mov (bad) stc push xchg (bad) mov mov in lcall aam mulb cld mov negl lcall jmp cmpsb (bad) pop (bad) icebp pop rep pushl cmp idiv push jg jg lahf (bad) (bad) xchg std mov sbb jg pop mov jecxz jmp in (bad) out mov lock (bad) (bad) icebp out lcall mov cld cltd in mov in iret clc int mov cmc idiv xchg fstpt lock mov aam cli mov std jmp cli cld das cmp cmc fistl jg out incb ret divl cli sub sti arpl mov mov ja mov icebp xor lahf lock std and iret dec cld pop aas mov (bad) call dec idiv (bad) icebp push sti jle call jle (bad) cld xlat dec call dec mov stc lock leave (bad) sti ja mov scas cld inc pop mov sub xchg in mov in mov aas pushl (bad) sbb lds push jg jg hlt out decb mul (bad) repnz iret decl sti inc aas jmp mov incl mov (bad) fstpt cli (bad) jg pop ds pop dec jle (bad) cli lahf cli mov (bad) mov lock (bad) arpl jg scas notl ljmp pop std add lahf pop jno push push (bad) clc pop fyl2xp1 jecxz out out jl sbb sub std pop lock pop std stc ja (bad) mov imul (bad) ret scas clc int fstp lock stc mov cltd aas std iret fdivrp pop inc jg out repnz aas (bad) btr jg mov (bad) push sbb fistpll (bad) mov cmc repz idiv insl jmp pushl fnop aas cld pop inc aas out pop clc jge mov jg outsl negl push (bad) fabs out lock lcall lcall clc xor std out movsl inc pop lcall std dec mov pop outsl std popa jg mov (bad) (bad) jmp neg lock cld jecxz in pop ljmp cli (bad) lock addr16 mov mov into pop jl addr16 mov sar jmp jg lea (bad) lcall jg jp jg scas (bad) (bad) mov stc outsl repnz fs cld jae decl add icebp aas loopne lahf decb call in (bad) in (bad) mov push cmp out out scas testl jg pop cli (bad) (bad) fsubrs ljmp xchg pop mov cld pop jg lahf stc (bad) ficompl aad (bad) je mov call mov outsl std sbb mov das aas std in and das (bad) jmp (bad) (bad) cld push mov icebp cmpl aad mov cld pop cld in outsl call mov dec jnp mov (bad) mov (bad) mov and clc (bad) std push lock (bad) mov stos cmp repz (bad) fstpt decl xor lret mov test pop std mov fsubrs scas std ret decb imul (bad) cld gs (bad) push jp pop (bad) ds (bad) mov adc (bad) mov mov inc pop repnz (bad) fildll mov clc out out std lret std icebp jmp outsl push sarl lcall (bad) ljmp call sti pop cld and popf fist jle (bad) bnd jmp jg cmc into out repz inc (bad) fsubs call and mov sar leave mov jg out mov cmc fwait mov outsl iret inc aas jmp (bad) mov or push lret jg jmp jecxz sti das jmp (bad) call xor iret jg scas clc (bad) out cld cmc daa repz ljmp (bad) repnz call (bad) xchg mov outsb cld (bad) lahf sub xchg pop ja xchg (bad) jg mov xor divb mov (bad) cld push lahf xor jg (bad) cld xlat lcall jg aas lock repz lahf lock cld xchg in lahf hlt xlat std lods pop mov xchg call cld xchg (bad) stc (bad) xchg jmp call cmc jg ficomp cmpsl cld sti jnp call pop das (bad) xchg aas stc dec jp scas std add (bad) aas jns mov push icebp pop dec (bad) mov jle das jle daa (bad) jbe jg hlt pop repnz pushl fidivr scas pop sahf dec lcall cli pop jmp cli sti call negb dec ds xor sahf jg pop stc pop xor (bad) call loop jnp pop push (bad) out pop in cld js lock iret jg (bad) clc paddd jg lahf stc xlat pushl pop std stc jg icebp xlat push (bad) in incb pop cli scas out cli das clc xchg jg lret (bad) mov fnstcw stc pop out iret (bad) jnp jg inc decl (bad) fnstcw idiv fisttp xchg mov mov insl mov sti sbb outsl mov std fnop mov lahf cli (bad) mov inc jg scas cld mov loope jg (bad) lahf stc jae decl mov (bad) arpl fwait ljmp clc aad pop cld addr16 (bad) cmp imul (bad) popf pop out aaa sti xor jg out jle xlat (bad) cmp sti pop (bad) lahf jg cmc call push dec (bad) std and (bad) fwait mov jg (bad) hlt pop (bad) jg outsl dec cld mov jmp clc pop std pop sahf std push (bad) out pop repz cld (bad) mov cld cmp lahf sti adc outsl std sarl sti (bad) cld xchg mov aas (bad) idiv (bad) pop sti orl cld into xchg mov jmp outsl cmp daa pop ljmp jmp not cld ja sar idivl sti xor in jmp std jne jge lret aas out cli repz fucomip jg sbb stc aas (bad) popf (bad) out call daa lahf std inc dec jg aad mov pop hlt ja (bad) cmp jne stos (bad) ljmp push and mov fwait (bad) cmpsl push (bad) (bad) in (bad) repnz mov std arpl in fucomip (bad) (bad) mov jmp cmp scas icebp pop cld lods mov stos fucomip pop (bad) push mov jle fnstsw paddw (bad) jg outsl mov stc jg (bad) xchg fcomip lahf cli (bad) mov in incb int clc hlt lahf (bad) clc xlat cld cmpsl push (bad) aad jmp sti leave jg icebp lahf mov fstpt jg mov mul push mov incb mov lret sahf mov cld out jg stos (bad) cli (bad) dec jg jmp sar (bad) jg jg mov lahf hlt (bad) and push (bad) cmp dec call pop repnz (bad) stos ja jecxz repz jle mov hlt fstp call jg xlat mov aas sti cmp (bad) popa jg popf (bad) sti lahf sahf jg stc push mov in (bad) sbb sbb mov pop repz sti in imulb mov aas sti idiv or sti call lds dec in scas stc cmp das stc cld out jnp paddd cmp sarl jg insl fistp rep std sub movl idivl aas pop std lcall jecxz hlt ja sar aas cmc icebp out lock jg jg (bad) jnp out inc (bad) (bad) mov jg std fisttp (bad) aas loopne sti arpl cmpsl cmp cli aas clc lahf pop cld std mov out mov incb clc push pushl in (bad) sti popf aad (bad) call sti mov jg jg cld out xlat lahf cmc xchg (bad) outsl push into mov cli ljmp cli (bad) out std dec jg (bad) mov sub mov mov cli paddw inc out repz jg mov (bad) (bad) stc (bad) jle (bad) outsl mov sub iret jnp mov out (bad) jp pop (bad) mov hlt mov mov stc repz jmp lahf clc out push mov jle (bad) in stos lds or test cld xchg xchg jg pop stc std (bad) mov cld jmp xchg aas es sarl xchg jl cmpsl mov mov aas cld imul jmp (bad) sub loopne repz std pop jle lahf dec (bad) fnstsw fistpll jmp stos (bad) fdivrl pop stc mov into pop clc clc (bad) (bad) aam in cmp ja stc mov negb repz cld sbb (bad) aad cld fwait std dec xchg (bad) icebp scas std pop sub (bad) add cld jae in ljmp repnz icebp pop push fucomip lahf (bad) sti jle aas jno lcall (bad) fdivrs loopne stc ret jle xchg (bad) imul (bad) jg rol jmp pushl ja push jg scas cmc aas aas clc imul jg gs in lcall cli jnp clc das stc cmp cld (bad) incb fidivr mov std outsl cmc lahf std sbb cmp pop imulb repnz lock push idiv cltd ret mov popf (bad) fidivr cmpsl jg mov std dec dec leave mov push jg mov mov aaa mov aas js cli (bad) int3 jle jg aaa cld push jle aad cld inc mov cld pop mov outsb pop jecxz ljmp cmpl jle clc addr16 inc jmp jg push dec (bad) loopne cmc idiv into aas stc out repnz cmp dec cld pop jg mov (bad) sti mov mov (bad) jmp mov std das jg sar daa std sbb cltd std jbe mov inc outsl idiv call std lret (bad) ljmp out fcomip das stc pop call mov lock call outsl icebp addr16 iret std xchg mov aas icebp jnp pop call cli pop std scas (bad) (bad) stc (bad) sbb xlat stc mov pushl cli dec dec lcall daa (bad) jnp (bad) es call ja hlt cld in aas mov xchg mov inc decb xchg std data16 out stc iret pushl mov imulb outsl jp aas std inc (bad) dec lcall ljmp in std imul mov jmp pop jb clc cmpsl cld mov (bad) lcall jg mov scas mov fstps mov incl mov out aas std lret rcr cmc ja mov mov cmc aaa clc mov in call jle das cli leave fistpll xlat std mov (bad) pop incl (bad) ja int jae mov jg cmp pop jne aas lcall jg out sti out out inc xchg (bad) fnstsw std scas inc mov (bad) (bad) (bad) push jecxz out iret cld lret (bad) lods mov or xchg pop (bad) sub (bad) xchg jg mov sub mov (bad) and repz push sti std fdivs (bad) pop cld out jg xchg cld cmp inc mov cmpb ret fnop std cmc (bad) mov fidivr mov mov jle in clc cmpl jecxz clc mov leave fnstsw mov xchg dec aas stc mov shrb cld (bad) scas stc mov (bad) rcr addr16 outsl jg fnstsw pop std outsl cmc mov dec jmp fucomip pop stc lahf (bad) test ja pop inc lahf incl std inc dec jle jg cmpsl idiv mov (bad) call aas inc cld gs cmp jne (bad) mov jle pop lcall (bad) cmc sti cld outsb mov repnz jl iret cmp cld xchg decl sarb jle outsl cld addr16 cld dec sti stos ds mov lods fucomip idiv (bad) decl mov pop (bad) nop fbld sbb (bad) or mov ljmp cmc pop insl movsl push mov jge call pop icebp scas ljmp lcall (bad) (bad) mov jg int jg aaa lcall fildl mov das (bad) std jg pop std dec int not cld xchg (bad) std cld (bad) pushl call jbe jmp daa jg pop lock rcr inc push dec fcomip paddw push das (bad) call pop hlt pop inc lahf sti xchg cld sarl repz jmp mov inc jmp jg cmpsl sarl dec stc mov ljmp in (bad) push jmp fbld outsl mul aaa std xor call lahf cld lods lcall sub movsl aas icebp (bad) fdivrs hlt idiv mov pop xor lahf cmc in mov jmp pop sti das cmpsb imul cld pop ja fstpt stc in stc inc mov mov repz jle fwait pop mov shrl outsl (bad) mov jg icebp mov jmp stc (bad) mov in jg fisubr stc mov mov mov (bad) jmp hlt outsl fdivr in jg lahf cld in in das std movsl (bad) cld scas mov repz mov scas clc push (bad) (bad) mov jmp aas jmp jg mov loope icebp pop movsb jg lahf (bad) (bad) call jle pop sbb addr16 out cli idivl cmp clc jne mov jl int ja fdivrp ds sti dec lahf jmp scas pushl dec std cld mov sub fistpll in xchg lahf cld cld aas sahf cld jns jmp sar aas repz (bad) scas call pop sti int mov cmp in aas out mov ljmp lahf mov (bad) dec jg pop call aas (bad) stos pushl jmp clc jecxz sarl (bad) das mov inc mov das stc dec out decb (bad) jmp (bad) cmc aaa stc jge lock (bad) jle (bad) aad loopne sti mov sti pop decl outsl jg pop jge in (bad) (bad) push pop (bad) std cmp mov (bad) and lahf cld xchg ljmp push jmp dec mov (bad) ljmp repnz cld mov xlat out sti lock std pop pushl iret sti (bad) (bad) in jg lock dec (bad) popf fucomip push pop dec mov jg (bad) call (bad) cmpsl jg idiv xchg inc push outsl stc jecxz int3 aas cmc pop jp (bad) aaa mov (bad) (bad) loopne (bad) into pop (bad) dec cld mov (bad) testb xchg mov clc icebp lahf lock (bad) fwait lods ljmp aas jmp incb jno iret cld popa push mov jg outsl clc pop cld pop mov fcomps daa mov ret int3 call jg test std sub scas pushl sbb call pop lock out in decl or (bad) cld out sti xlat jle pop jge cmp arpl jecxz cli inc push (bad) out fstp clc (bad) cli or xlat std sub xchg add jg loop call fcomip dec jne aaa xchg jg outsl clc aas cld data16 int jg sbb out dec jg outsl xchg pop (bad) in in dec call frndint pop std mov iret push jg iret stc push jmp jg imull scas aas out scas (bad) sbb aad call (bad) dec inc aas idiv (bad) popf jg mov in das outsb pop (bad) jbe jmp sti jnp inc dec cli iret dec jle pop out (bad) clc jecxz nop fbstp push dec clc add stc jecxz (bad) fwait sbb popf int bnd lds ja (bad) decb call mov sti scas incb call ja push out cld aad jg out mov in outsl cld imul mov ja cmp pop cld outsl push jg mov (bad) in out pop lock (bad) cmp mov cld lods mov (bad) test inc hlt sti sti (bad) pop mov jle jg cli outsl inc stc out repz pop pushl hlt jmp cli jg jg out (bad) jg hlt aas cmp dec idivb mov clc mov fnstsw repz call fstps test mov stc pop (bad) lock call pushl push lret stos pop cli inc pop cld movsl jg jbe scas cld imul jmp imul mov imul es (bad) adc mov in (bad) clc jl out decb std xor fdivrl (bad) fldcw leave lret sub jle loop cld mov jmp cli push sahf std add inc jecxz pop (bad) xchg jg mov dec jle jg in hlt xlat std or pop inc (bad) in das inc (bad) jecxz stc into scas std mov add mov push call (bad) out neg (bad) mov cld fnstcw dec std pop jg fcomip dec std insl mov sar (bad) mov in jmp pop cld push pop mov out mov cmp sti jmp mov loop jmp outsl sti jge (bad) call call cmp aas cld fstpt cld pop aas cli xchg (bad) jg addr16 stc call std in clc movsl jg out icebp mov mov lock push (bad) fstl fsubrl mov lret jmp fnop das call push paddd repz cld outsl stc ja mov scas imull cmp sti std incl jg outsl ret stc fwait incb jle fucomip loop sbb lret div cmp push jg repnz inc call fisubr (bad) in jmp lock imul call (bad) jmp mov ljmp std movswl mov jg mov cmc iret jp rcr idiv std rcr loop clc or cmc (bad) and std inc lahf lcall stc addr16 fsubr repz xchg mov sarb idivl iret jle jg scas cli pop (bad) repz stos leave (bad) inc call (bad) cli mov icebp iret jg jae iret std xchg scas repz (bad) lcall in std xor lahf xlat jg out (bad) das std aad shr cld cmp xchg std in lcall rcr pop pop in rcr xchg (bad) cmc dec cmp pop jle das std movd jecxz icebp out incb jle aas loopne clc and pushf mov (bad) pushf aas loope cmp int3 pop sti xchg jg mov (bad) cmp push das std dec jle jg das sti (bad) out jmp iret mov pop jg ja fdivrs aam icebp ja sti mov mov addr16 lds (bad) arpl mov std push jg pop lock std mov icebp pop cmc jmp lods mov pushl sti dec cli outsl into (bad) (bad) (bad) out (bad) lods call inc jg out dec stc fistpl scas icebp (bad) sbb jg repnz cld or (bad) div lahf ljmp repnz mov clc cmc push addr16 clc icebp idiv cmpsb push (bad) dec push (bad) and (bad) cld lahf sar (bad) lahf xlat (bad) popf mov inc jg shr mov pushl hlt idiv out sarl sti jne (bad) (bad) scas jmp xchg jg out idiv das cli pop (bad) idivb icebp cli mov cmp nop jg aas sti lea pop clc (bad) in clc imul popf mov (bad) clc lods repz dec std gs mov (bad) (bad) mov mov push jg mov jmp das (bad) pop idiv iret fnstsw xchg std inc mov inc jmp jg out cld pop std mov call jle scas std pop mov jg lahf cmc loop jg paddb jg mov stos adc (bad) clc outsl icebp cmpsl (bad) jecxz rorl les dec (bad) mov cld add out decb (bad) in dec sar jne lret pushl out cli xlat (bad) mov jg mov loope jmp (bad) out (bad) mov (bad) mov loope decl xor (bad) sti idiv xlat into push aas jb hlt sti pop decl xor decl cmpsl jno call jg pop ja mov fnstsw imul cli xlat mov idiv idivl jle push dec sti fistp sbb cld addr16 std sar cli (bad) (bad) sti inc pop (bad) xchg jg pop xor sar sarl pop (bad) idiv aam imull out xchg (bad) out pop das dec cld mov jmp jno outsl stc aas dec (bad) jmp cmp imul lock in (bad) in hlt sti mov std out jmp das cld das (bad) sti pop out sti and ja iret hlt paddd aas mov (bad) fdivrp and (bad) pop pop cld inc pop aad pushl pop cld leave mov loope imul jle ds cli std cmpsl mov lods pop es cli outsl stc test std aas incl dec mov decl mov (bad) cmp pop sar fstps pop lcall jg scas mull pop icebp jmp leave outsl jg fcomip push (bad) out in fistpll mov pop repnz jmp icebp pop jg mov dec fcomip (bad) das idiv repnz ja test jl paddd mov mov xchg jg cld mov stos (bad) mov cld jbe out repnz (bad) call arpl call sti push (bad) cmpsl std jg bnd outsl mull (bad) call jg (bad) jg cmpsl sti (bad) cld jecxz cld std jg das std out jg jg mov lret scas jle xchg decl (bad) jae lds idiv xchg jg jg pop (bad) push pop (bad) fwait mov stc imul outsl jbe rcrb fmul (bad) std scas dec (bad) mov jecxz cld pop mov std mov (bad) mov lahf jmp ja std aam cmp lret inc fbstp cmpsl popf sar decl (bad) jge out stc scas icebp ja pop sti aad jno sub std mov fcomip dec incl mov lea fcomip mov mov outsl movsl cld xlat pop cmc mov mov aas mov cmpsl sub xlat push cld pushl fldcw and repz scas lcall (bad) lcall aas out stc aad int aas cmc fistl mov cmc aas stc lods jle jg (bad) lahf inc repnz jg push leave fcomip pop decb loop lock std (bad) jg stc jmp clc mov movsl sti jmp fcomip iret cli rcrl incb fsubrl daa cmp stos jle (bad) dec (bad) fwait lcall stc mov mov jle idiv insl jg jg out clc outsl jg aas jne in fistpll (bad) int rcr jg pop stc in xlat stc in (bad) mov mov out pushl (bad) xchg fnstsw cmp pop imul ds mov jecxz in mov (bad) aas lock push jg dec std (bad) imul fcomip mov jmp jl lahf cld ljmp xlat mov jl mov imul mov into aas icebp xor fsubrl sbb fwait aas (bad) xchg std stc mov rcr cli lahf clc push jg iret in call jg idivb aas repz cld sbb cld add in jmp decb idivb sbb sbb imul jle out lcall decl aad pop lock scas imul scas icebp out cld lret jmp push out lahf jl and cmc (bad) clc (bad) out loop clc mov insl jmp jg (bad) fist mul lret mov iret cld std jg mov rorl jmp call push lahf cld sbb jge (bad) insb aas jp xlat (bad) xchg cmp fnop mov (bad) mov das mov stc jnp lds (bad) aas mov repnz mov xlat pop std mov out cld cmpsl jg das jg jnp vmovdqa iret call das cmp (bad) push out clc cmpsl decb stc xor in aas sti mov pop cld sbb aaa std push push (bad) (bad) aas decl fcomp cmc dec iret inc jg out cli push (bad) (bad) aas out scas out std out pop hlt (bad) std outsl jg pop cmc jmp in fstps jnp std push (bad) clc mov mov cmc fcomip mov pop dec out (bad) cli (bad) in push das mov into push jmp cltd cld xchg js idiv das mov call std push (bad) call lock scas jle pop (bad) mov into (bad) fwait (bad) xchg lahf mov mov bnd (bad) (bad) jg pop cli jmp arpl xchg xor sti xchg scas mov inc aas jecxz mov push aas icebp idivl stc lret (bad) hlt aas jmp jg aas dec stc xlat aas sahf repnz inc lahf lock jnp incb fistpll mov cmp ljmp loop std (bad) (bad) (bad) std xchg int xchg mov insb jbe fwait (bad) pop inc aad ja jg aas jns pop mov std sarl repnz daa jbe (bad) fstpt hlt lahf mov jg out push inc pop cmc lahf jl clc popf lcall stc stos dec pop hlt popf jg lahf cli mov xchg (bad) clc scas movq das (bad) lret (bad) std mov (bad) xchg jg pop repz (bad) pop (bad) outsl (bad) lcall ja pop ljmp cld int idivl fwait sar int (bad) out xchg aas stc jecxz fcomip out cli xlat mov mov (bad) aas std mov out (bad) cmpsb mov std mov mov (bad) js mov decb jge aas (bad) jae aas std lahf jle cmp (bad) (bad) rcrb repz (bad) lds dec (bad) mov jg std decl jecxz hlt sti cld imul mov mov fwait (bad) stos aad icebp xchg std hlt outsl lock ss sub repnz mov idivl cld mov out sti jg cld mov lahf (bad) fwait jmp std das (bad) mov in decl std lret cli scas (bad) insl jg mov fistpl pop push lahf cld scas (bad) aam repnz mov cmp (bad) imull out (bad) mov dec jg cmc inc sbb repnz jl scas int jg repnz jg pop jecxz scas sti pop (bad) loopne jmp out imul scas clc pop jmp mov mov daa jg pop (bad) fwait mov (bad) mov aad pop cld leave aas jae xchg in cld popa jg pop call std pop jg lahf hlt dec cld mov (bad) jbe jg mov jae mov jmp mov imul call jg jmp sarl std push mov cli dec clc int loopne lahf stc dec jg lahf js lahf stc das out (bad) sbb inc jle pop ja lock jge pop cli xlat inc cmp jg lods mov fild negl repnz out aaa (bad) mov clc ret inc jmp pop hlt pop std ret (bad) std jg (bad) std jbe out rep std push mov scas xchg ds push (bad) loopne loope cli mov xlat aas repnz std negb stos pop div cld shll pop sti insl jg aas lock enter inc jg idiv jmp jnp icebp jmp cld pop mov inc cld jno inc stc pop (bad) std push pop sti outsl ljmp scas stc lea inc int repnz ja mov mov incl call aas hlt mov xchg out hlt xlat daa mov xchg (bad) push cld mov addr16 scas std xchg cld pop push mov dec inc mov (bad) (bad) (bad) in mov fucomip jecxz jg in (bad) jmp sub pop lahf cld pop jg lcall std xchg jg out imulb std pop jg repnz fsubrp hlt or (bad) jg cmp fdivrl out jae ret (bad) stc pop std ret dec pop (bad) (bad) addr16 psrld loope stc and pop incb (bad) jmp lock call (bad) sahf (bad) adc pop cld popf mov jg mov push (bad) addr16 jle in aad neg mov loop call (bad) out decb xlat clc ljmp lahf jmp ljmp hlt dec cli adc mov stc aaa pushl call cld insb hlt mov shrl out (bad) loop cli pop stc cmp cmpsb pop lret cs std stc jg (bad) pop xor fistpll lret (bad) mov cld jne mov (bad) (bad) out in iret stc imul push jg jmp mov lcall lahf cmp dec pop decl (bad) decb sti jle mov out (bad) arpl jg hlt iret pop std sbb scas (bad) (bad) lcall or mov out loop jns out jne loopne (bad) jmp xchg cld lahf mov cli leave das cli in mov jmp ss cld fdivr sarl negb sar (bad) call lret xchg hlt das clc fistpll jg jg jmp xchg mov jmp std ja ret jle pop xchg fdivrp in jmp mov lahf int3 (bad) stos scas (bad) jmp cld loop repnz jnp (bad) sahf cld cli inc jns pop jp lahf std int roll (bad) pop cmp push (bad) jle lahf int3 push mov fcomip (bad) cld jmp mov dec mov (bad) sti push jmp icebp jg (bad) ja clc aas jl pop cld fiaddl fdivr dec jmp std (bad) clc mov jmp (bad) clc aad (bad) jae ret lds ja repnz std (bad) cli outsl sti fistpll out mov jle out shrl dec fcomip call cmp jg xlat cmpsl idiv fidivr call pop repz clc inc jle (bad) decb jg pop icebp jecxz cmc das sub jmp aas mulb mov idivl aas out stc in jle xlat std inc daa mov jecxz mov pop (bad) cmpsl call inc cli pushl cld (bad) (bad) test (bad) stos jg jg ja (bad) (bad) mov popf jg (bad) lahf cld aas nop push sbb in mov daa mov lods jg dec clc lahf jmp jmp loope repnz pop jg outsl hlt addr16 std std stos pop cli sub (bad) daa jg das cld or jg cli pushl aaa popf std sbb jns mov movsb pop clc xchg paddd (bad) mov (bad) mov mov mov xlat jg lret jg aaa incl (bad) (bad) (bad) fcomi (bad) (bad) cltd jg pop cld std decb pop repz stc jecxz (bad) jg ja jmp rorb jp repnz jp icebp std aas bnd aad icebp pop inc imulb mov jnp sarl (bad) inc mov mov (bad) cmc jmp scas cmp sti jg jg iret cli std fdivrp test loop mov clc and cmc sti cld xchg aas clc movsl mov pushl sbb sbb aas cli dec ljmp scas (bad) stc push pop sti cmp lret xchg mov popf (bad) mov aas loopne test cld push mov loope jg in jmp (bad) ljmp xchg lcall cmc xchg mov (bad) jae fwait pop mov scas jg pop (bad) mov cli mov std push mov (bad) fstpt (bad) call (bad) imul lods jg (bad) cli in cld stos dec jg das sti test enter jmp jnp cmc fcomip pop mov daa jmp mov sbb fnstcw pop (bad) in mov ljmp lahf icebp out sahf (bad) inc inc fistpll (bad) in jg pop std out ljmp outsl fcos and cmc push dec mov clc or iret jg out sti aad iret outsl repz cmc pop jmp pop mov std lcall jge les cmpsl (bad) cmp jg pop mov outsl sar out (bad) imul lds dec outsl sti (bad) cli mov mov (bad) fisubrl repnz (bad) cmp pop sar in mov mov stc in mov aas in mov cld mov jg icebp (bad) (bad) rcrl jg cli sti out sti sub xchg cld outsl cmc mov cld (bad) mov xchg (bad) xor out aas icebp pop jmp (bad) std data16 notb xchg das jmp jg out sti pop (bad) scas pop mov jle aas negb leave cmc out cld pop std pop ja sti popf lret fcomip aaa sbb push push mov fnstsw mov ja cli jg out idiv incb mov in jg loop jl lcall dec mov jg (bad) dec push jg ja lods incl fcomip (bad) decb std scas xchg jg pop aaa std fstpt std addr16 std scas jg mov js mov xchg outsl popf cld mov mov pop jg outsl negl scas jle ret rcr lock idivb sar scas stc or idiv aaa mov sbb jmp add jmp adc std movsl pop jmp decb cmpsl jmp push scas sti sbb jne sar fdecstp repnz cld das clc adc lahf (bad) icebp fs (bad) mov cmp xchg mov out (bad) jns sub jg pop cli fistpll inc in das clc xlat call pop cld dec push jg pop (bad) hlt outsl repz das jp mov les inc cld jge idivb clc cmp insl inc mov jmp aaa cld push jg pop hlt lahf jge push mov sti hlt mov idivl (bad) lods aas jbe pop cld imul stos aas clc das out (bad) pop repz scas cmc mov ds out mov out sar idivb inc lods (bad) mov ja daa decl mov (bad) in (bad) (bad) frstpm(287 jg pop std loopne sti outsl inc jg ja mov fstps cld pop idivb cld movsl push scas mov jmp (bad) (bad) dec sti cld mov mov in stc mov aad pop repz std xchg das call lods dec jle xchg (bad) xchg cld add std pop (bad) out out mov ss inc (bad) cwtl pop icebp idivl outsl lcall iret pop inc jg sti ljmp scas jg in xlat iret mov std jmp add scas jmp lahf cld push std jns out popf out jg idiv or lcall sbb div cmpsl (bad) cli mov push das pop (bad) jp ret das ljmp out decb leave out cld pop cld jg,pt jg lahf decl leave outsl div aas jns push std lret mov (bad) idiv arpl iret cld insl sub (bad) call mov cld scas cmc aas dec div (bad) cld lahf jle cmp sbb jg outsl call jg outsl hlt mov movsl jmp mov jecxz jg jg repnz cld xchg jg aas jl fnstsw daa jg inc mov jg pop lcall jg fcomip in pushl aaa std mov cli pop call (bad) (bad) jmp fdivrs mov repz lock in push pop icebp in pop sti cmpsl mov out mov ljmp (bad) sbb outsl call out cmc aas (bad) in aas hlt push xor inc (bad) cmp jg stc sub lahf (bad) rcr push jmp fcomip pop incb in mov call outsl jo idiv or hlt xchg dec jle (bad) call (bad) aad loopne (bad) jne test mov jae cli fnop outsl dec fnstsw iret cli negl das in (bad) mov clc mov lods jle jg cli pop pusha (bad) dec mov daa ds push decl ds push iret call lcall fnstsw jg idiv imul push jg mov mov jmp inc inc mov pop mov jmp cmp mov add clc daa mov std repnz cli das incb pop mov (bad) mov outsl cld pop in cld dec jg lahf mov sbb pop (bad) sti decl jg out clc pop pop cld or xchg sarl not cli or ja aad aas loope out repz (bad) adc aas lock out cld pop jg mov cld imul mov cld jecxz in das stc mov lret jg mov mov aam jle jg scas cli and pop cld push jg mov imul incl stc aas negb icebp push std lret pop call jg cmpsl (bad) aam std mov cmc cmp ret (bad) (bad) sbb scas addr16 ljmp (bad) ja mov pop mov jg mov sub repz ljmp int test scas (bad) sti mov cld popa aas cmc in hlt in repz jl notl scas adc out decl (bad) movsl jnp ror cld push jmp xchg out (bad) jmp mov ds cmpsl (bad) scas (bad) in (bad) pop decb movsl out (bad) ss mov mov call fwait pop std (bad) sti adc les pop sahf ljmp fucomip cld and xchg push jecxz cmp outsl jg outsl cld aad repnz cmp adc (bad) call pop repnz mov xchg (bad) jg fyl2x scas cld daa sahf ljmp repz jg jg (bad) (bad) fidivr sahf (bad) popf jg pop cmc mov pop cli fisttp jg adc (bad) jg (bad) jg in (bad) lods dec mov lahf cld ja xor push out jg xchg (bad) fnstcw outsl incl repnz jle pop jge xchg cld sub mov lahf std fwait std daa mov (bad) stc sub mov (bad) (bad) fwait (bad) sahf (bad) call fstpt loope cli (bad) sbb aas stc adc outsl stc sub lahf (bad) adc (bad) cmp and pop repz repnz clc xlat jmp in mov std cmpl mov jg dec clc test std aas cli (bad) mov mov fdivrp sub stc ljmp outsl dec mov iret pop idiv jg inc cld mov (bad) jg xor idivb dec clc incl out xchg mov stos jg fnstsw (bad) mov das (bad) pop jmp scas ljmp scas into push (bad) mov xchg mov jecxz loop fcmovnu out stc xlat (bad) fdivr call inc pop stc in repnz ficomp out mov out out ljmp jmp jg xlat (bad) call mov in jg leave aas stc pop cld arpl (bad) cld ret das cli dec decb cld push sti jg mov mov pushl (bad) out (bad) xchg jmp fstpt mov jmp jg pop adc decb std (bad) (bad) pop out das sti das (bad) fidivrl pop cmp out (bad) pop jg sti dec jle (bad) mov hlt outsl (bad) std inc jg daa dec lds push fcomip cmpsl ljmp iret fucomip call clc (bad) cld (bad) push incl (bad) cmpsb jg outsl (bad) mov idivb (bad) sbb mov jg (bad) sbb cmc pushl cmc jmp and jg pop testl sarl hlt inc (bad) xlat call outsl hlt sbb or inc icebp (bad) std addr16 repz cld ja aas in decb loope imul clc ret (bad) mov sahf mov (bad) cmp imul std xchg leave jmp leave lahf lock jge inc incl mov jmp jg psubq jle jg sti fnstsw adc outsl jb pop stc out and pop (bad) jnp sarl push lahf std jnp iret decb das mov (bad) stc inc (bad) jg int imul pop (bad) arpl fldcw lods pop mov cmp stc imul push (bad) fidivr (bad) daa pop cld xchg daa jg (bad) das lcall adc (bad) fcomip jno das std ja jg pop lock std ja (bad) jmp (bad) aaa decl movsl lahf std mov (bad) aas sti popf (bad) dec inc mov outsl call push mov lock clc pop decl ljmp std jle fbstp in mov jg pop repnz cld cmpsl mov (bad) mov jnp mov daa (bad) fdivrl out std and lds (bad) fstpl idivl cli pop pushl aas movsl cld aad not mov (bad) in stos jg aas dec dec ja aam mov jg scas sti (bad) jl aaa (bad) stc (bad) ljmp idiv fdivrs pop (bad) mov push (bad) inc jg pop hlt pop cld (bad) mov lret (bad) fsub cmp insl (bad) loopne aas out add jg scas enter scas (bad) fstpt fucomip dec decb stc iret incl xchg enter sti call fbstp leave pop hlt pop std pop mov cld jae hlt pop ja jnp cmp mov icebp lahf icebp pop cld scas scas push in cld sar icebp jg dec cmp repnz lret mov lahf (bad) pop jg lahf testb and repz mov lahf icebp repnz cmp into push jg dec (bad) ficomp (bad) std jg cld ret (bad) nop jmp aaa (bad) mov jg ljmp out jle pop mov jmp mov jg jg (bad) std gs lcall sub (bad) (bad) mov mov jmp cmp mov sti lret aas icebp idiv fistpll out out mul xchg incl repz (bad) fucomp cld adc pushl hlt mov mov jmp (bad) jge std pop (bad) ljmp outsl (bad) jecxz inc aas stc xlat mov pop clc jg dec mov (bad) fcmovnu lcall ljmp out idivl pop mov ficomp sbb sub lds cmpsl (bad) hlt pop idivb jnp fs jle pop cld xlat (bad) imulb pop pushl (bad) in pop (bad) in daa mov mov mov mov stc inc (bad) (bad) aad clc pop aas (bad) call aad jns (bad) incb (bad) clc pop jmp pop decb pushl addr16 inc sbb (bad) cli stos ds fwait loope (bad) pop out idiv mov jmp cld test std sti pop pop std mov out cmpsl aas std jne mov in stc push (bad) aad das stc sbb fnstcw (bad) mov cld pop cli iret pop call add (bad) jmp push jg hlt dec stc aad enter addr16 push inc pop imull pop jmp inc jle lret jg xchg jg pop std or inc (bad) jecxz repnz (bad) scas jg aas div (bad) xchg iret incl std (bad) mov ljmp jmp icebp xor jmp pop notb mov jg addr16 mov (bad) scas aas in iret cld dec (bad) cld in icebp aas jb mov fdivr popf xchg aas (bad) pop std jp xlat out idivb idivb call mov fnstsw loope cli jg (bad) mov call lahf dec jg jg out stc pop jle (bad) das pushl cmpsl stc mov aas std das dec rcr dec stc mov clc out imul neg std sar aas out js pop cld sti jg pop negb repz xlat pushf xchg cld cld jge out dec (bad) negl (bad) mov jg pop mov out mov cld std out lock cld stos mov arpl decb ljmp (bad) push pop repnz jmp pop cld outsb jg outsl cli pop (bad) stc jmp outsl imull push daa pop mov pop decb in (bad) push incl out jecxz jmp sti cmpl mov jge std xchg stos fcomip call addr16 push jg mov mov in cld jmp xchg decb jg fisubr xchg jg mov repnz clc sar enter fstps or sti std incl jle test mov clc dec (bad) mov imull ljmp dec mov xchg out (bad) call (bad) fdivrp sub mov mov cs cmpsl mov add stc iret xchg jmp aaa call iret inc dec jg jnp hlt mov hlt aad lock iret incl xchg (bad) pushf jg dec cld inc jle lcall outsl iret jle aas out std ljmp (bad) mov aas jle stc lahf notl idivl lcall lcall stc iret (bad) mov lock ljmp (bad) fxch jg or idivb out sti push jmp jle (bad) das (bad) mov (bad) sub fistp out xchg mov push fucomip repnz (bad) (bad) (bad) cld sarl cmpsl cld sti push jg xchg std fwait lahf xchg std cli sti jle in clc int (bad) clc leave aas stc pop push cld dec stc cmpsl jg jg jae (bad) jg sar (bad) mov stc xchg (bad) out dec (bad) out daa mov (bad) clc mov pop jg out js xlat sti std ds outsl (bad) cmc mov (bad) aam mov cltd pop imul int clc daa (bad) in (bad) call mov lock jle (bad) jmp std mov jg jecxz pusha cld outsl (bad) mov jg arpl ret jle sti xchg dec mov push jle pop std jecxz call jg pop mov pop sahf pushl out dec std jns out jg stc (bad) mov std out negb pop mov std mov pop jg mov pop repz sti paddd outsl (bad) popf jmp out call std jg mov jmp clc addr16 std sti lahf (bad) pop aad icebp mov clc lret incl stc lahf lahf mov mov cld std pop lock cmp loope inc fbstp jge push (bad) clc das call decb fucomip aaa clc and in ja or ss scas mov mov (bad) loopne sti mov aas cld xor fidivrl daa dec loope cmc das inc jg in iret lahf (bad) mov jg jg idiv lahf pushl mov xchg inc jg jmp std add lret jg outsl (bad) stos (bad) call dec ja add stos mov clc insl out (bad) adc mov cli xlat clc mov xchg in fdivr out mov lahf jg (bad) ja clc xchg pop jmp cmp scas jmp jg (bad) out in mov mov daa push scas jae scas jmp pop xchg push (bad) stc (bad) mov hlt (bad) aas repz sbb sahf pop dec cli out mov (bad) cld mov (bad) gs inc lahf stc addr16 fstps jmp jg dec (bad) popf jg pop (bad) (bad) mov jg repz (bad) mov (bad) es das (bad) push jg das cli idiv cmpl and movsb mov fcomip ja cld lock cld ret jns idivl std lods jg jg fist ljmp icebp lahf clc jnp in neg cld mov (bad) jg dec ja std jecxz clc into das jg sti decl aas std aaa in decb jg mov icebp pop repnz mov (bad) mov lock xor std mov pop std fidivrl iret jle incb ja (bad) test std aad (bad) fidivrl fistpll jns arpl mov jle pop clc aaa cmp icebp lret dec adc (bad) std inc jg scas (bad) cld idiv lahf (bad) xchg (bad) clc clc das (bad) in (bad) push dec (bad) (bad) das mov gs fnop (bad) (bad) (bad) mov insl jmp pop cld xor and cmpsl cmc (bad) mov out mov pop mov repnz mov sar xchg fcomip out cli push mov idivb cli or jnp ss pop dec cli repz das jge pop std jae int hlt pop clc outsl adc sub daa std (bad) pop std sbb shr ja push sbb pop std ret mov jns into inc mov std pop lcall (bad) ljmp inc pop std (bad) jmp cmp ja sar std in aas icebp fwait mov (bad) xchg pop icebp daa sbb adc out repz std dec jg mov std (bad) jg scas stc fwait cmp push (bad) pop std sub repnz sbb out mov leave jle jmp call jge fistpl mov neg cld fstpt aas std lahf (bad) lret pop mov jmp lcall pop es pop out cld cmp daa xchg jg cli mov (bad) jns mov pop (bad) mov sarb out dec rcr das (bad) mov (bad) in scas sti sbb in cli outsl sub std out pop lock cld lret mov (bad) cld clc outsl divl decl std (bad) (bad) idivb (bad) jge imul sti xchg cmp sti stos lcall cli (bad) addr16 (bad) or pop jmp jg ja pop jle mov mov pop icebp (bad) std int stc xlat std (bad) mov call pop cmc aas cld pop mov mov sti (bad) cmc stc out jo lds hlt ja jns out (bad) in push out idivl pop out pop (bad) xchg decb loop out cli dec jg mov out (bad) mov dec pop divl cld mov iret icebp (bad) jg out (bad) std sbb jg fstps lret cli (bad) incl int idivl imulb (bad) pushl addr16 mov mov mov rcrl (bad) cld iret std pop (bad) fdivrs stos mov push xchg (bad) cmp mov stos aas out lahf std in dec jg (bad) cwtl pop scas (bad) fnstcw decl xchg (bad) out (bad) jg addr16 jg (bad) jg ljmp outsl mov out (bad) sub std movsl (bad) (bad) std into scas icebp (bad) mov loope cli mov sti (bad) stc mov push out mov out fnstcw jmp mov cmc (bad) push (bad) in aaa stc jge movsl jg out cli jecxz aas out pop clc pop jg jg das sti push leave outsl cmc cmpsl (bad) cmpsb (bad) sti lahf incl fidivrl outsb (bad) out mov (bad) iret dec aas jmp std mov divb pop call call cli (bad) jmp sar popa jns div aas incb xchg mov push (bad) jnp or pop lock insl mov jnp aad jg (bad) idivl lods lahf cmp negl repnz jg fnstcw dec decb aas (bad) aam std das stc jne ret mov mov jg pop mov icebp push (bad) sti push std mov out call (bad) out jg xchg call cld mov pop jno cld iret js dec lcall cmp (bad) (bad) out in (bad) sub jle pop std dec push cld lahf pop jg inc std idivb outsl sti addr16 jecxz std lret fstpt mov pop out aaa lret jg stc mov std cmpsl push xlat sti aas (bad) fnstsw (bad) aam loopne clc lea mov (bad) ljmp lahf jle fcomip pop cli aas jle jg xlat std sub or sub fwait std jge fildll incb lret repnz mov cli icebp mov in std dec aas stc dec mov jg and incl lret outsl clc pop out incl outsb idivb (bad) (bad) clc pop pushl cli div jg aas icebp push fs cld cmc daa mov xor popf (bad) cli in ljmp mov jmp jge stos inc fild xlat stos pushl outsb std mov icebp pop std out mov popa pop mov clc xchg jg aad repnz in aas call mov scas dec (bad) xchg fucomip cld lock daa nop mov out (bad) loopne stc iret call pop mov std xchg call lods lahf (bad) addr16 out std inc (bad) scas (bad) (bad) das fild (bad) jmp sub imul mov fdivrp sbb mov mov pop cld loopne clc and std mov repz repnz jg cld scas jmp sti iret (bad) (bad) xchg pop (bad) mov push std lods jg lods clc cmp (bad) repnz cld (bad) fdivrp arpl mov mov mov (bad) pop (bad) fstp jecxz (bad) xchg fucomip xchg jmp out cld scas pop scas (bad) nop icebp mov aas jbe sub jg dec (bad) jb mov cld inc decb jg jg (bad) jle jg das (bad) aaa jg push (bad) pop (bad) test cmp mov icebp lahf mov jg mov aas jne std pop (bad) xchg pop std mull jle dec aas cwtl repnz mov xchg mov sti out stc imul (bad) aas repz (bad) cmpsl jg scas cmp (bad) out jnp repz stc (bad) mov add scas fucomip outsl jl xchg incl (bad) out pop mov repnz lea aaa ljmp cmpsb stc pushl dec (bad) jmp cli mov push fwait iret (bad) mov outsl xor pop std dec inc jg jnp std (bad) adc enter std scas ljmp into (bad) jg in dec fucomip push std push mov incb ret das mov clc ret mov jg out cmc mov pop stc out std dec leave das cmpsb cld out scas clc add lahf jl mov scas mov (bad) stc (bad) clc out (bad) jge cmpsl jg iret clc sub (bad) mov mov cmp aas cli das sti and clc out iret cli pop repnz xlat stos pushl cld ja ljmp sti in std jno fisubr xchg cld jge int mov dec mov dec cli arpl jecxz testb lock mov ljmp xlat sti sti jg fcomip push lcall (bad) sub (bad) idiv push jmp aas clc ja cs leave mov jg dec es jle (bad) jg pop jg pop pop stc sub in lahf cmp inc mov aam pushl std pop repz out scas imul jl stc mov out stc sarl stc xlat std pop mov jmp cld pop sti or ret imul mov xchg mov ret outsl sti imul mov incl aas incb out jle std jne aam jg (bad) cld (bad) push (bad) call jbe fnstcw enter iret cld imul out sti lret jle mov adc jg (bad) in iret sti jb xlat (bad) flds clc aaa (bad) mov (bad) mov mov cmpsl push pop divb jg repz out movsb cld xlat lahf dec (bad) repz outsl (bad) mov push push js fnop aas (bad) out sti mov sti pop cld ljmp pop jg mov cld adc mov lahf inc pop jmp jp jg dec pop mov ljmp xchg (bad) mov (bad) lahf addr16 (bad) ljmp fistpll sti aaa cld sti scas jle cmp pop jle out das ljmp ljmp push cld int or decl ja and (bad) (bad) clc hlt out stc dec jle pop mov sbb in lahf (bad) pop (bad) fidivr and imull (bad) stc (bad) in pop (bad) in jg mov clc sarl std pop cld clc lds fucomip in repz outsl lahf addr16 dec fildll pop call (bad) ljmp out pop outsl jg das sti mov mov pop dec xchg mov std push mov fdivrp adc daa (bad) jmp repz sbb pop mov idivl (bad) scas mov std dec inc pop jmp pushl psubd adc cmpsl jg jg sti std int3 pop jo push pushf inc jg jg aaa std ret jg pop mov std inc jbe into fstpl sti decb mov cld clc mov adc lods cli add movswl push mov push mov push out mull in (bad) cli icebp fbld call aas decl (bad) dec (bad) pop cld popf lcall hlt fwait cld movswl jno std cmp mulb iret (bad) out jg mov das leave jg (bad) (bad) mov cld add pop cmc inc cld les mov sbb fistpll stc xchg std out (bad) stos jg (bad) in pop std jnp mov pop (bad) (bad) jg cli cmpsb cld cld (bad) mov and and std idiv (bad) lret pop icebp pop cld scas mov scas std iret mov repnz sti repz mov jmp aas in outsl (bad) ss pushl scas (bad) jg pop lock std mov (bad) test sti idiv in fucomip (bad) stos incb lods jle out cli mov mov std mov fadd sti jg mov jg pop div (bad) jmp fldt xchg lds ja jns stc cmp out (bad) pop sti jnp aad into shrl aas std mov mov xor xor aam cli repnz jge adc leave lahf hlt out cld jnp inc xchg pop jg aas (bad) daa int3 pop pop xchg inc pop fwait std addr16 fildll mov lods (bad) cli mov std cmp mov fstpt mov jle aas sub sti xor mov mov pop daa push push dec call jg ja sarl mov jg aas dec cld sbb sti leave jg stc idivl jmp cli lods inc jg mov xchg hlt mov clc int xor scas scas (bad) mov js mov cli pop (bad) jmp dec std call jg (bad) outsl xor cld sti std leave (bad) fldt clc lods (bad) call popf mov inc repz sti pop cld lods (bad) mov or ljmp fucomip jmp cld fnstsw rorb hlt pushl sarl incl xchg jg in incb jg imull out (bad) cld (bad) lahf cld mov int3 aas (bad) in xlat stc aas out std aad les aas cli int mov idivl jmp pop movsb cmc mov jmp fstps addr16 std (bad) popf jg (bad) (bad) fnstsw das cld (bad) (bad) sti lahf (bad) fdivr in cmovg (bad) cld daa std push test out out out inc jecxz outsl lahf (bad) addr16 lahf cli call pop hlt xchg cli jg jae mov incl ss (bad) mov mov cld add int repnz cwtl mov (bad) (bad) cmp cmpsl jg jecxz push decl leave pop mov mov (bad) ljmp add mov lret das cmpsb (bad) lret cmp decb hlt xchg sti fstpt out cmc pop mov cmp repz xlat std in (bad) fnstcw std repnz test (bad) mov cmpl pop icebp mov jg mov mov jns ljmp int ja out clc inc sti jecxz in pop (bad) mov xlat sti (bad) (bad) out jg mov jg dec mov fcomip pop jg das mov (bad) iret aas jp aaa (bad) pop jg (bad) (bad) jg idiv xchg jle (bad) out (bad) std aas hlt popf lahf jl inc cld jge sti arpl mov out sbb or jmp leave out repz lods (bad) fistpl jno outsl mov (bad) cmp pop jno cmp pop push mov ficoml jne jge ja jg lahf div (bad) xor jg pop jg lahf hlt loop sti inc jle leave outsl stc out cld pop mov iret (bad) cmp dec decl jmp mov jl xchg cli jnp push mov sti imul aad dec out xchg (bad) std scas incl (bad) (bad) jmp jmp (bad) fstpt pop jg pop mul ja shr jb idivb cld cmp aas idivl (bad) neg xchg (bad) (bad) out xchg (bad) clc (bad) push push push fidivr lret jbe sub (bad) ficompl scas mov push incl aas sar sbb or xlat pop std idivb pop jle cmpl mov xlat stc xor aas cli daa sahf ljmp mov jg push pop decl fisubr cli cld ja cmc (bad) push jmp idivb lahf clc sbb fnstcw mov aad lahf idivb (bad) jecxz stc fnstsw jmp mov cld psubd mov mov std mov (bad) dec (bad) adc mov cmp (bad) push cmc incl adc cli loop in repz pop cld sbb out (bad) aas clc jmp sub scas cld stc dec scas divl jno jg (bad) iret cld sub xor xchg mov jbe pop decl aad clc jnp jg pop (bad) jg das mov xchg (bad) in iret stc sub mov clc repz aaa imul lcall cmp outsl hlt loop cmpsb clc cmc mov pop testl jg (bad) mov aaa stc std push fucomip idiv sub cmp jp lcall scas (bad) shll call pop lock clc pop cld (bad) mov ds iret aas std scas sbb mov hlt iret stc pop dec daa (bad) (bad) jp mov ja (bad) out cld test xchg mov mov out cld daa call in sti cmp fdivrs jg fcomip pop (bad) in cli jg aas cld mov stc repnz test pop mov iret decb ja incb mov ficoml lcall cli pop call sti (bad) mov pop push pop nop push aas pushl out stc cmp (bad) std pop cli inc (bad) cmp jecxz mulb ljmp rcr hlt dec jg psubw jle push das std pop jg mov lahf sahf pop (bad) and mov fisubl std ss scas icebp paddb fs incb cld iret pushl aad cli incl std aaa std lds out (bad) out fistp sti addr16 pusha outsl mulb outsl jg idiv neg jle pop std paddd mov idivl pop cli jecxz pop sti aaa (bad) mov mov jecxz imul aas decl in fucomip idiv cmp clc lods (bad) cmc (bad) into jg cli jnp out fcomps stc jnp aad leave out mov repnz cmc jg js mul scas dec leave (bad) sti sub mov cli pop call into cmp lock (bad) in cld cmpsl mov dec (bad) (bad) repz cli (bad) sti arpl push mov ja sbb nop lahf cli jmp lea loopne clc sub inc jnp,pt pop pushl (bad) fisttpll notb lahf (bad) pop jg lahf sar fwait scas (bad) mov hlt ja lods jle das clc sarl cmc mov cmp mov mov push repz fcomip (bad) (bad) inc iret cld xchg (bad) cmp aas incb out pushl sarb sti ja aas mov inc (bad) mov ret cmpsl inc jne (bad) cmp clc pop std add outsl (bad) daa decb cld jge fimull leave jg jecxz test aas inc (bad) out fucomi sub mov jnp (bad) fwait inc jg xlat incl in out cmc cmpsl xor jle (bad) cli cmp cld mov cld pop in clc (bad) (bad) in jmp in (bad) lret (bad) fnstsw cld inc (bad) jle (bad) fdivrs (bad) mov mov out pushl mov aad ficomp hlt mov mov jmp dec incl repnz (bad) sar rcr repz lods in cld imul xchg addr16 daa decb std leave (bad) std cli pop std insl jle fisttp jmp std jbe sbb sub icebp jg test shr jg (bad) (bad) fcompl pop (bad) std (bad) fcmovu (bad) loope cmp idiv sarl icebp pop inc outsl mov aas clc dec jg jg (bad) decb mov insl jle (bad) in (bad) std jg mov (bad) and lret fucomip outsl cld movsl inc lahf dec imul idiv sbb lahf clc (bad) cmpsl hlt pop stc arpl out aas ljmp daa (bad) mov jg stos in pop jmp mov jg (bad) out lcall clc imul hlt jecxz fildll jg (bad) stc pop (bad) mov aad mov in ja scas fucomip pop incb fistp popf cld mov decb pushl xchg mov jle pop enter out pop repnz cmpsb fistpll aaa cld jmp (bad) das mov mov cld pop mov jg lahf mov (bad) (bad) fidivrl cld das cld jae aad push fistpl cld push jg aas jae sti or not cld test cli jmp (bad) dec incb in mov (bad) in lahf std inc jmp (bad) (bad) jg (bad) sbb cmp mov mov icebp iret jle pop std sbb outsl decl dec jg fist mov jle stc jg iret cld mov jg icebp scas std mov mov jne stos (bad) mov pop jg stc pop out std xchg aad stc idiv test fisubrl stc pop ljmp rol scas push decl lods (bad) (bad) cmpsl decb out outsl (bad) jnp stos fcomip push (bad) cmpsl jg pop cli jmp sbb (bad) xlat cld jge mov repnz mov aas stc lds xlat inc adc std scas (bad) sar loop (bad) ja in jecxz cld mov (bad) jmp js repnz cld addr16 leave pop dec lahf std xchg fdivr (bad) sbbb cli in mov mov out clc lods jle in (bad) frstor jle in addr16 fcomip jg in jg aas jmp lahf aaa pop cld cmp sarl jg fcomip or mov stc mov (bad) jmp dec pop decl std pop sti lahf (bad) pop jg mov mov aaa stc xor fnop sar idiv out call (bad) in sar cli outsl cld repz decb ds mov fcomip aas ljmp (bad) mov stos ds sub pop (bad) jnp cld xor mov stc outsl pop mov jmp psubw out xchg decb cld (bad) leave mov out decb aas jg divl outsl decl cli push mov sahf jnp int3 fistpl pop (bad) jecxz cli rcrl scas daa mov (bad) out (bad) fwait (bad) xchg (bad) in (bad) es cmc divl (bad) jp pop cld xchg jg (bad) aaa dec (bad) stc aas mov sbb cmp jg cmp (bad) aas clc jecxz dec pushl cmp xlat (bad) scas jg jg icebp cli out cld dec jmp pop cli movd loop clc push les jg stc jmp cld negl adc std jecxz (bad) cli xchg leave das std sub out ja stc sub mov out mov mov xchg mov jle (bad) idiv daa (bad) push aas aad push jg dec dec aas pop cld ret cmc aas cli (bad) aas icebp idivl mov addr16 pop (bad) jmp (bad) aas std pop (bad) adc pop out cld mov repnz std mov std fsubrp stc pop call decl decl dec ja rcrl xchg jge daa jg iret clc lret jg fcomp (bad) jmp cld cmp aaa cld inc jg mov fistpll out cld xchg aas repz js pop cld das jg fiadd ret jle jg cld jne inc ljmp in jg loop mov jg outsl hlt out pop std xor pop std scas incb icebp jg pop jmp scas lahf push jg hlt iret (bad) jae (bad) rcr cmc int je pop cld fist cli jg pop cmc outsl cld ss clc mov mov (bad) out aas mul lahf decl jle fstpt cld imul clc pop std andl cld inc pop std xchg insl fisub (bad) fstpl neg push cld xchg push mov es pop (bad) aas out in push push jg fcomip (bad) ljmp (bad) clc aas sti aas jge add (bad) cli in das std ljmp clc (bad) jbe iret jle jg xlat decl out js aas inc jmp (bad) cld lahf repnz pop cld ljmp aas not mov out std sbb mov imul jmp ja (bad) adc cld (bad) jg mov lret add out cld push decb aad (bad) fstp out call hlt ret pop repz sti mov ds pop call in hlt pop stc dec scas jg out cli mov loope jmp dec cli iret (bad) lock pop outsb mov std jmp pop jmp std leave jg scas stc outsl (bad) daa jmp jg std call adc out (bad) stc (bad) dec mov mov idiv pop (bad) cmpsb pop div (bad) cmp repz (bad) jmp lahf std scas mov jnp pop mov scas pop in jl pop (bad) jmp (bad) mov push jg incb mov jg cmc jg mov std aad std push in std cmp lahf xor cmpsl mov idiv fdivrs popf (bad) pop jg xchg (bad) mov clc nop repnz jg out mov mov jmp xchg jg lds xchg std adc imull pop sar std jecxz cli mov addr16 cmp sub in mov decl repnz incb repnz mov icebp outsl stc addr16 movsb fnstsw mov lret incl xchg mov pop fcompl loope call mov call lret pop out movsb stc decl in mov jmp lahf cld int (bad) std mov pop cld lahf ja sub jg push cld jp std ja clc dec call (bad) dec sti aas jle mov mov repnz xchg call std out (bad) in jg out lcall mov std xor sti mov dec (bad) mov aad stc pop sti in repz sti pop jg outsl hlt mov aas cltd std push mov ret (bad) xlat fcomip iret pushf inc lahf idivl into aas repz std cmp sar int3 aas cld paddw ljmp (bad) sub fcmovnu loope cli cld dec (bad) xlat jg aas out cli cmpsl jmp cld (bad) and out clc clc out clc insl jg xlat stos pop icebp idiv jg,pn pop stc pop (bad) (bad) lahf repz ss (bad) stc iret (bad) (bad) in (bad) loopne jmp sub jg aaa std dec mov (bad) aas mul jecxz in push pop cld dec (bad) fstpt ja bnd xor (bad) std aaa jle lret incb ja insl push cld mov mov cwtl aas out clc dec mov movq (bad) daa mov (bad) repz out lods jmp push ds pushl cld jg xlat stc lds fistpll jg imul jle pop out mov pop (bad) movsbl cmp insl jg out idiv std shll (bad) out (bad) hlt das mov (bad) in scas repz std arpl sarl outsb lcall (bad) dec pushl jg in incl pop (bad) ficompl incl push in hlt out std test icebp aas sti iret (bad) clc pop cmc dec std cmp (bad) jne jg das stc clc pop (bad) jnp hlt in mov int out push iret dec (bad) out minps hlt out repz cs mov pushl cld mov aas js pop cld add rcr lret (bad) sarb mov push dec push mov (bad) fdivrl out cld (bad) fcos (bad) das jg mov fcos fsubrs idiv jle fidivrl sub icebp lds mov jg aas out ja jmp cmp sbb lret jg (bad) (bad) mov fnstsw (bad) (bad) push cld idiv loope stc (bad) iret decb imulb push fistpll lods aas jle cmp inc icebp fcmovnu icebp (bad) fcomp neg std cs mov cld lahf fcomip push xchg std std scas (bad) fnstsw mov jle dec decb call push pop ja stc xchg loop mov lock incl (bad) call in outsl stc inc mov std insl outsl ljmp mov sti pop cld hlt idiv sbb sarl lock jg inc jg mov stc movq jmp pop (bad) push (bad) mov lahf fcompl out (bad) fsubrs sti jl (bad) std mov repnz mov aaa cld cmc push aas mov mov cld shr mov clc xchg fucomip aas popf cld jp iret jg std std iret cld xchg mov inc mov (bad) movsl fildll ja call lock jmp lock mov lahf clc fwait lcall in mov mov xlat aas std pop inc mov (bad) cld arpl mov cld repz lcall xlat jmp (bad) fiaddl inc dec (bad) mov (bad) mov paddb call std (bad) xlat jl xchg lea aas lock jmp lahf std imul cld daa (bad) out jg mov aas jns lock cld lea jmp sti mov jg xchg (bad) ja xlat ljmp (bad) std outsl cli inc (bad) jnp call in std idivl jg mov aas decb jl outsl jg scas decl mov mov dec (bad) jg fcomip hlt clc scas cld lret pushl cld fistpll mov jmp jnp (bad) (bad) xlat pop (bad) push pop dec jg pop repz push (bad) and sti or mov ja cld xchg std in cld xlat ja leave out cld pop cld repz cld xchg (bad) fdivl std clc pushl push inc pop pop popf in std icebp jmp lahf (bad) fwait jge fnstsw incb repz std test scas call mov jle in pop int loop hlt out pop cld orl jg jnp loop ljmp jg out cli jge mov subl aas cli imul hlt lahf jle (bad) les cmc pop cld sarl xchg fucomip dec cmp and in jecxz aas clc lahf (bad) in (bad) jecxz out sti in (bad) xchg aas call jmp stc out cld lahf clc mov sti lea mov ds fisubr dec (bad) mov sti jg dec repz aas decl out (bad) repnz out popf xchg (bad) cld repz fucomip rcr xchg in sti aaa call fstpl (bad) in das pop xor std dec adc bnd mov stc out loope jge ja pop pop dec jg cmp ljmp cmp ret pop jg (bad) in clc out repnz cld ror repnz cld adc jmp std sarl scas stc fstpt (bad) call jl mov into pop repz call mov aas std (bad) les icebp idiv mov xchg dec jg dec std jle mov (bad) mov pop (bad) inc mov out pop std lods aas out inc outsl std dec std jnp in pop ljmp cld fwait lcall idivb ss ds out out (bad) sahf jmp out sbb adc fstps (bad) xor std test (bad) cmp or fdivr dec mov pushf hlt out cld out dec (bad) cld aad aas mov cld jns and sysret jg sarl (bad) mov (bad) mov pop ljmp out idiv loopne jecxz jg push pop cld in sar cmc out mov idiv fdivrl scas jmp mov jg lahf sti mov aad out std iret jmp jg pop std push dec inc jmp xchg pop hlt jmp jge cli outsl cli daa (bad) (bad) mov notl jg imul push mov push std xlat jg lahf mov loopne inc jle jg xchg std mov aas jbe psubd stc mov (bad) sarl hlt lahf mov jmp cld push push aas jle jmp push aas jle inc cld jge repz clc lahf std ss loop cld mov icebp rcr sti xchg jg decb lock std gs outsl sti (bad) pop std iret mov cmp sbb jg das (bad) clc mov (bad) out pop repz dec lret mov cmpsl (bad) cmc jg scas sti sbb mov dec leave call push jg mov arpl clc aas loopne jns fst dec cld push out pop call mov cmp xlat outsl mov cmp mov sti pop cld xchg testb stc xchg (bad) (bad) in mov (bad) cld int jle dec lock (bad) mov iret clc and (bad) (bad) cli dec mov jg mov jg lahf repz std lea jg iret lcall (bad) jg cmp cli cmp out std mov leave pop jno dec movsl cmc neg test icebp cmpsl (bad) pop jg pop (bad) fldcw (bad) mov pop (bad) mov sti jle negl stc out (bad) xor (bad) ljmp aas jmp mov aad repz std (bad) xchg jg xlat sti ja sti mov icebp out jp call clc (bad) scas stc sar aad std scas jg scas dec sahf std icebp mov cld in jecxz lock jg mov mov sahf jle cmc ja jmp lret idivl pop cld imul out xor ret jle aas mov call lahf lock jg sti xor mov jmp cld das imul mov mov pop icebp aad cmc iret (bad) clc aas (bad) iret jle xlat cld bnd iret jg lods in repz dec aas idiv scas cld leave mov cld mov sti in lcall jg xlat cli psadbw ret mov jle fcomip pop es stc stc lahf std cmp bnd popl in aaa cld add xchg jl stos jg (bad) call cmc jmp jg movsl mov pop decl call loop jg fcomip iret cld scas fistpll (bad) sbb negb fcomip pop xchg std jmp jle mov jg in jmp lret and loop jmp outsl mov jg lret iret jle cld lahf cli (bad) sti mov fnstcw dec shl mov xchg aas out sti and lds std das decl test stc cmc in aas std or incb dec mov jg lods jg sbb std fstpt jle (bad) jg jle out mov pop jmp loopne (bad) jle jg out sti sbb sti add fwait aas std outsl (bad) jne fdivrp fdivr (bad) cld mov (bad) scas sub rcr cmc scas std jmp mov enter aad repz cld out mov iret sti inc scas fdivrp neg cmp or mov jg (bad) (bad) (bad) in (bad) mov jmp test lcall dec in mov dec repz std insl jg ljmp jnp jg repnz arpl test jecxz clc leave (bad) lahf clc das (bad) stc mov pushl std aad inc cli imul aas imulb ja stc jae mov jg (bad) jmp xor jg pop stc out jle outsl mov imull dec inc mov stc lahf clc jge lods loop in dec icebp jmp jg mov inc (bad) out jle stos mov jne out xchg mov cld (bad) imul in inc stc mov in push jg gs aaa std cltd mov std leave mov mov out lret aaa std into lahf neg jmp scas sti sbb sarl (bad) das lahf (bad) std mov repnz cld push dec push push cmc fcomip std (bad) jg repz (bad) sti jg aas sti aaa iret push fcomip pop clc (bad) mov jmp sti cmc (bad) lock fidivr repnz pop (bad) jmp fstps cld (bad) jnp sbb mov out (bad) sub repnz (bad) cld pop fdivrp xor mov das sub iret std cmpsb dec (bad) sarl sti jg inc icebp jecxz negl mov jg ja cmc mov jg out std push daa mov fnstsw stc cli idiv jge in div jg das outsb (bad) repnz in lahf repnz aaa (bad) aaa jg fnop pop std jno mov pop cld aaa jg out cld shrl jmp cs push jg pop neg (bad) sub icebp push pop std adc out pop jg dec cld mov outsl inc jmp aas repz jg vpslld sti and out dec dec outsl hlt out (bad) std mov js jmp mov jo ja mov jmp incb call (bad) std stc scas sti jnp out (bad) jg fistpll lcall aad mov jg lret mov inc (bad) and (bad) lahf inc icebp jmp inc icebp and jg stc ret pop cld or mov pop jle jp idiv es jg (bad) jge loop test push cld not cld inc mov repnz cld (bad) jmp jmp dec pop jecxz cld lahf imul imul je (bad) jg (bad) sti lret (bad) fcmovnu out repz clc outsl jnp aad jg out stc pop std xor int3 fbstp stc fwait jle scas cmp mov mov sti pop std ja aad repnz inc jg scas cli gs mul aas std mov cmpb pop stc inc int jne dec incl clc jg inc pop std or divb std adc repz (bad) ljmp ljmp aas stc das cld mov (bad) aas sti scas stc mov imulb aad call outsl jae outsl incb out negb cld cmp fnop das std (bad) fucomip jge iret cmp mov in aaa (bad) (bad) pop stc inc out lods jmp (bad) out jg push std idivl in cld out jg scas cmc ja (bad) mov movsl jg outsl (bad) pop cld jmp jg (bad) stos call out negl pop pop jg cmp mov fstps (bad) sbb lahf imulb popf (bad) jmp cli mov and jle (bad) idiv pop jmp sub sti leave out pop cld loope fcompl mul psubw cli aas out pop (bad) cmp lahf cld cmpl lcall pop jg scas std (bad) (bad) cmp ljmp mov stos (bad) in pop hlt sti dec pop mov jmp pop and clc mov pop mov mov jnp sti cmp xor imul push icebp xchg jg aas (bad) xchg (bad) fstpt pop imul icebp out ss std (bad) jmp lahf lock cmpsb jg out lcall fdivrp inc repz lahf push sar std repz jae pop cld pop mov idiv cwtl cld inc jg mov mov (bad) clc jg outsl jmp jg pop mull shrb fnstcw jle pop jg cmp lea (bad) jmp clc idiv out rcr idiv ja (bad) out iret push cmpsl std test (bad) cld mov jg pop cmc (bad) cld into pushl cld mov rcrb pop (bad) call fstpt (bad) (bad) mov push dec mov jg pop cmc fwait (bad) cli jg aas clc stos jmp mov call jecxz div cld movsl pop std insl dec call decb out (bad) xor in cld inc push out clc pop cld ss out cli mov idiv mov outsl scas ljmp insl incb std add lahf push jg lahf hlt aas (bad) adc out jmp mov mov (bad) push xchg int lods jg (bad) int3 (bad) stos (bad) ja xchg ljmp cli jnp jae sahf pop jl (bad) cld pop out into (bad) aas clc dec (bad) in leave loope jl idivl out outsl lcall loope les clc cmp (bad) lahf cmp inc jg sar pop sti out hlt aas lock in lcall xchg (bad) jl push cld outsb xlat jg pop call std ret mov jle out cmpsb mov (bad) idiv into das cld pop dec fcomip (bad) addr16 fcomip out pushl (bad) jmp hlt pop sti das mov outsl hlt lahf fdivrp mov out std popf jmp (bad) sub mov dec aas in scas clc out jle aas call mov mov xchg decb std sub mov stc cmpsl (bad) cwtl (bad) in loop push (bad) das mov pushf mov (bad) lds in jg sbb pop cli lock out incl mov mov sti cld cmp inc repz in aaa cmp sti out std inc mov out cli mov mov clc (bad) (bad) fldcw mov lods pop sti cmpsl jg push jmp std push pop cli addr16 out sti jg jmp mov (bad) pop aas es jmp mov stos addr16 (bad) (bad) aas std sbb jg iret cld pop (bad) fdivr out fistp (bad) fistpl lahf cmp aas stc (bad) cmp mov (bad) cmpsb aas cmc mov aaa jg out lock cli jmp (bad) out call lret (bad) pop jae outsl push (bad) loope cmp aad decl (bad) mov jmp idiv mov pop dec lcall xchg dec aas out lds call popf (bad) stc xchg pop push cld clc cmp mov mov pop jmp arpl negb aaa cli out mov in aas stc (bad) out clc das cld dec jmp (bad) stc out std in idivl push mov scas stc pop aas sti std (bad) out jg shr dec jg iret mov mov std add jg push (bad) ja mov out jg aas jno cld (bad) sti mov mov cli jecxz lds pop cld lahf jg fcomip mov cli pop jge push (bad) cmp fcompl mov std mov incb jg aas lcall sbb scas stos pop mov inc cld outsl (bad) fdivrs sti aas sti (bad) pop cli fwait std ljmp call lods jle xchg jg mov mov subps les push (bad) popf jg scas imull and xlat std popa inc outsl cmp fbld cld adc out lcall in cld addr16 popa int (bad) stc scas clc ja decb repz fcompl daa push (bad) ljmp cld jle out adc ljmp inc (bad) lods jmp das cld pop jle out std jnp clc jg or ljmp out std mov ret jmp outsl repnz (bad) mov xlat cld sbb cld mov std ja stc mov xlat cld lahf mov (bad) (bad) pushl pop std aad std cmp das cli lahf dec fcomip lahf mov (bad) cli fcomip pop (bad) mov ret fcomip jmp inc repz jg inc jle rcll stc out fdivrp inc (bad) fnstcw ljmp add fist inc jmp lahf pushf into inc jg (bad) cli pop (bad) mov repnz cmp push jg clc out iret stc pop mov push movl aaa cld xor fidivr lahf std arpl cld es cmp mov cmc jg cmp ljmp push mov enter (bad) sub xlat std (bad) cld (bad) daa jl jmp jg mov mov (bad) in mov mov pop jmp jmp cld pop xchg aas cld in outsl fwait mov call ja stos mulb jg outsl std out jle pop ljmp std jge repz mov (bad) fidivrl ja xchg jle cmp pop sarb sub iret jle aas jle,pn (bad) (bad) mov ret (bad) out out (bad) jle sar jp ja mov sub cmpsl inc jg out jb (bad) decb lret (bad) mov idivl ja jmp pop mov aas (bad) pop jmp dec dec sahf xchg idiv ret inc out stc pop lcall testb aas sti mov clc cmp mov aas jae outsl cld cmp scas cli mov jg outsl ljmp hlt scas call call push sub ljmp jecxz jg fstps neg dec dec (bad) (bad) mov (bad) lahf cli mov pop inc stc cmpsl (bad) cmp cmp call das (bad) in push aaa es jg adc loopne loope scas mov (bad) pop hlt xchg (bad) xor cmpsl ljmp pop std xchg pop decb clc jg xchg mov jle lds addr16 sbb mov jmp pop jg push xchg jg paddd sarb jne (bad) std jg das pushl jnp scas cld popf mov lahf cld pop jmp in clc sub out incb imul sarl jge pop sti sarl pop jg xchg jg (bad) sti rcrl cltd pop std fwait std (bad) mov mov std pop (bad) sti (bad) sub clc aas pushl pop pop std mov jle push (bad) xchg (bad) ret out repz jg out repnz pop mov mov aad jae scas outsl std mov cld add (bad) stos jg xlat call das stc jmp mov clc lahf mov loop std fidivrl pop mov mov ret out std xor dec jge fwait ljmp ljmp call call aas icebp xchg (bad) jbe (bad) mov dec pop push std push jg fcomip mov (bad) cli jae (bad) push mov adc icebp xlat cld in cli push call jg lahf repz pushf inc xchg lcall in aad cld mov out imul sti out lock dec pop (bad) outsb aas incb aas cmc mov rol in cli adc std or outsl lock dec lds (bad) (bad) gs lahf repnz dec (bad) xchg dec (bad) movsl pop pushl aad in std dec mov lock std sahf jg pop (bad) push mov decl mov cmp cli pop (bad) mov lcall iret inc mov mov leave jg xor out incl repz insb pushl lret into scas cld out jg outsl lock (bad) shrb scas dec incb cli out lea daa jg jg call (bad) jg (bad) pop (bad) (bad) icebp lds push std xor lods mov incl pop std and ja rcr call clc push mov jg iret clc pop call cld into (bad) aas cld loope aas cld lahf pushl mov jecxz push sub in std mov ds fwait jle mov mov rcr call fwait mov (bad) (bad) hlt ljmp iret cli sti inc mov (bad) outsl jle cmp jg imull (bad) mov movq xchg xor inc jg mov push rcrl (bad) sarl jle sti dec mov cld xchg cmc pop repz (bad) fisub incl mov (bad) std aas jle paddw cmp stc ret jmp fnstsw aas jl aas jmp jg scas pop cld sarl (bad) movsbl push std pop aas pop (bad) cltd repz stc xor jmp cmpsl pop decb cli aaa call push das cli in (bad) outsl (bad) mov cli adc imul aas std lock sti leave in xchg lahf cli lahf mov sbb (bad) gs pop std mov lahf decl jmp push jle (bad) cli (bad) outsb inc push sti lcall out sti scas incl pop jg inc incb (bad) mov mov clc sub ljmp cld out jg (bad) dec inc jnp idivl mov hlt lahf cld adc jp out std ja (bad) xchg jg out dec mov (bad) stos jg mov clc in (bad) mov (bad) jmp (bad) push dec mov jmp es (bad) sahf mov (bad) sarl stc (bad) (bad) mov jl lahf imul xchg std lcall (bad) loope jmp std dec jg mov dec (bad) clc outsl fdivrp adc mov jg das js neg (bad) jae leave out cld xor fcomip sti (bad) xor aas mov inc xlat dec jg (bad) out incb cmc (bad) loop mov negb mov (bad) pop (bad) call pop sti rcr aas icebp addr16 mov div jp cli ljmp in pop (bad) in (bad) incb cmp out aas ljmp pop lock decl negl aas jnp pop gs out jb ja (bad) jmp jmp cmp pop decl pushl cmp cld dec jg clc das jge out mov leave stos jg mov clc incl call out (bad) call int idiv std and mov out hlt mov (bad) outsl std idivl out pop jp (bad) repz fldt std in jg int (bad) mov leave fcmovne (bad) popf fucomip aaa jl (bad) fistpll inc cld jno out jg std (bad) cld gs (bad) ljmp dec inc jno cmp sub call idiv into (bad) mov les setg pop cli iret (bad) fdivr out pushl push outsl cmp out cli mov iret cld mov (bad) std scas mov mov (bad) push cld (bad) or mov cld xlat stc idiv sarb xchg (bad) cmc fistpll jg leave out out inc repnz mov (bad) fwait jg jg xlat std sub (bad) cmc jg scas nop (bad) sti out (bad) repz sti fwait jmp pop inc rorl aas fsubr pushl jg out incb push std pop mov xchg (bad) pushl call mov jg mov lock cld push jmp stc out mov mull std leave mov jmp mov cli repz into repnz aas jmp leave jmp scas sti mov inc stc xchg push stc out imulb (bad) mov push jge out mov mov std mov (bad) jmp negl clc xchg incl stos jg fucomip outsl cld mov leave in aas sbb mov lods aas out paddb out std (bad) jg icebp popf lahf stc out lahf cmc cmpsl jg clc das stc (bad) jmp pop jp (bad) cli das daa fs mov negl aas (bad) imul bnd (bad) mov or lahf incb cmpsl (bad) cmpsl inc pop fwait (bad) adc pop hlt std aas jmp (bad) (bad) mov idivl jg ja xchg lcall push decb jmp std (bad) jg ficomp scas (bad) fcomps pop cwtl clc stc repz in sti cmp mov rorl push inc aas jbe pop mov shrl fcomip das clc out mov jae ljmp decl inc jg or dec outsl lock leave call ljmp lock cli ljmp clc scas stc jne aad in jg mov scas aas loopne fs aas idivb cld jg sti (bad) mov call stc ja stos dec jmp aas out sti aaa jmp pop (bad) fstps stc out lahf clc xchg mov (bad) jl outsl (bad) mov out std mov sar mov scas cld lds (bad) jbe jle pop addr16 daa jmp call mov adc out icebp out jmp paddd fstp nop lock (bad) aas ljmp iret cli push (bad) stc (bad) iret (bad) std lcall clc in out (bad) jmp das mov inc outsl jg stc lahf paddw iret (bad) fistpll and fcomip daa (bad) sub repnz icebp out out cli ja inc mov (bad) lret aas out stc xlat dec pop out jecxz jg fistpll lahf cli ret jmp lret inc mov jg psubb pop mov ljmp sbb sahf (bad) fstpt outsl dec jg cld je addr16 xchg (bad) pop imulb jmp enter in fcomip lock dec incl xchg inc mov jg icebp (bad) jge (bad) scas out incb inc pop aas stc lods (bad) fdivrp jmp rcr ja leave jg into scas pop cs std aas cld cmp dec repz lcall jg ja test in xlat cld lret push mov in xchg mov call scas aas js jnp shrl pop std cmpsb mov std scas mov mov hlt or ljmp std sarl (bad) outsl hlt mov xchg (bad) in std pop std jae mov decl (bad) call jle cmc push std jle fisubrl pop cld sti jg outsl hlt inc (bad) xlat cmp cld xchg stc mov (bad) inc jmp aas stc dec incb (bad) dec stc add cli lret (bad) sahf jg bnd arpl jg ja sti mov xlat pop inc pop jb idiv adc lcall ljmp sub (bad) clc (bad) (bad) aam jecxz cli push mov lahf cld pop (bad) clc aas in stc scas cld mov pop sti jae mov decb cmpl (bad) cld icebp jg jmp into jg jl aaa std add jg pop dec stc fstpt idivb (bad) pop lret xchg mov jle pop jg pop (bad) fwait mov cld (bad) (bad) (bad) cmp stc paddd lcall stos jmp dec sbb aas std sti inc mov outsl sti aaa pop std push (bad) in jl or outsl jge imul scas jle (bad) cli pop cli add scas dec mov mov into scas cli gs das clc mov mov lret (bad) xlat std (bad) fbstp (bad) cmp (bad) sbb clc xchg pushl clc lahf mov out adc incb jge imul pop cld iret std int3 ja aad lock lahf pushf jge and clc pop cmp loope repz std mov fistp iret lcall xlat (bad) fcos shrl (bad) fnstcw std lret dec aas loop ja sti inc stc stos mov ret lahf lock (bad) mov lock inc jg xchg (bad) hlt xchg cld cmpsl jg loope mov mov mov pop sti clc (bad) arpl jg stc inc aas stc pmaxub sahf mov (bad) jle pop cli cmpsl fdivr (bad) lret mov rcrl decl outsl jle lret dec (bad) stc inc mov mov addr16 lret (bad) rcr in fldt dec (bad) incb (bad) aas cli mov (bad) adc cmpsb mov jg int das (bad) mov call jmp std pop repz cld outsb (bad) (bad) fdivrs outsl cld mov fldcw stc aas std add xchg cld addr16 xchg mov push cld out (bad) fcomps daa jg aas repz lret jg fucomip pop daa mov (bad) jmp sti in jg in pop clc ret incl jmp (bad) lods jle aas jecxz pushl lods mov incl jle mov jg mov mov iret jle mov into inc jecxz (bad) inc fcomip (bad) (bad) lcall (bad) cmc jg mov repz idiv ret (bad) xlat pop clc imul lahf std ret adc decb sti aas cli pop mov jmp std daa jg xchg jg iret fdivr (bad) jmp mov push jg xchg fcomip out mov fcomip xlat outsb pop sahf (bad) aam imul decb mov (bad) mov mov scas cld repnz and int out (bad) sub inc jg imul inc (bad) mov repz std mov int3 ds jmp lret jmp divl mov lahf cld fnstcw std jle jg ja hlt ret jg iret std scas jmp pop sti aaa cli pop incb std mov cmc fwait (bad) ficomp jg lds pop (bad) clc pop dec stc xchg mov cmc dec jge incl scas mov pusha aas jle scas clc or in lahf jge pop inc das (bad) loopne divb (bad) in fucomip int dec icebp out (bad) (bad) jp mov stc push push mov dec push shrl lea (bad) lahf cli xlat cld movswl fistpll cmpsl fisttp (bad) movswl (bad) lods jle outsl repz push fucomip sbb mov (bad) stc (bad) std jle loop dec cld dec mov mov out out mov xor jg lahf std mov (bad) pop jg icebp mov out outsl clc (bad) notl in sub hlt in fcomip cwtl (bad) outsl sub adc jecxz sar (bad) in lcall leave lahf icebp sti (bad) cli fbld leave pop cld adc cld fcomip jmp dec outsl mov sar imul jns pop cld loope stc jge decl mov lock sbb iret std mov ret mov (bad) in mov cmc das jmp int and out xlat std sub jg cld (bad) std idivb (bad) cld xchg jp rcr mul (bad) adc fistpll outsl cli (bad) call iret std xchg push incl (bad) call (bad) jg out stc push cld icebp aas (bad) pop std xor jle jecxz lcall (bad) in (bad) int xchg std (bad) jg das jmp (bad) fnstsw frstpm(287 pop jge cld inc dec jg cltd mov push (bad) mov incl aas lcall jg sarl out mov cmc jecxz adc aaa in incb stc stos decl inc jg notb xlat lcall stc imul jg (bad) cld mov cwtl (bad) incb ud1 clc sti jmp ds (bad) adc cld xlat jecxz sti (bad) fnstsw mov incb jg fcomip pop cld mov pop decb stc das cmp pop (bad) push cmp outsl incl cld jp xor dec fdivrp ljmp (bad) in (bad) jns jnp aas icebp pop incl shrl mov xor jae cmpsl (bad) jne ret pop ljmp fldl (bad) jg pop jg out incl pop std add mov lahf mov stos (bad) call cs dec mov (bad) (bad) aas out jge jg (bad) push dec inc lahf mov notl xlat jg daa jg jg std jg daa jle (bad) xlat das call mov repz call jle pop hlt aaa (bad) mov jl out cmp sub stc out dec cli jmp fcmovu in mov lahf cli pop or pop std add mov idiv pushf jg aas std inc decb jg pop std lahf dec scas (bad) pop inc (bad) (bad) popf (bad) (bad) daa dec outsl hlt pop cld idivl das sti pop (bad) repnz pop xchg mov idiv cmpl mov jge fistp (bad) mov inc mov (bad) test mov outsl cmc inc dec mov (bad) (bad) mul lahf (bad) lahf push outsl xor cmp (bad) cli int icebp sbb cmpsb call scas icebp mov call std jecxz loopne stc (bad) fstpt cmpsb clc jmp clc mov jmp std push jg scas cld (bad) decb cmc jle pop jmp mov (bad) sti sarl (bad) cli lret mov scas mov dec lcall cli mov loopne clc xchg idivl in pop hlt dec jg leave pop jbe addr16 adc jg push pop (bad) and incl push (bad) (bad) outsl cmc out cld pop (bad) mov outsl jle out addr16 cld adc icebp lret jle mov cli out inc (bad) (bad) cld pop inc pop add call std aas loop pop (bad) jle lock or aas cli pop ljmp (bad) in imul repnz (bad) out ljmp fidivr fisttpl mov std (bad) (bad) jg sti call dec fcomip fildll popa mov cmc mov out hlt iret (bad) sarl in dec jmp iret mov (bad) jmp jmp pop cld push jg lahf sti aas mov loop aas loopne stc xor pop cmp std (bad) mov repnz jle aas (bad) insl mov cld pop mov aas insl sti xlat lcall cmpsl mov (bad) cli lahf sti iret scas test jg dec cli pop (bad) in daa and mov dec jle cld push mov (bad) cmp call jg lahf lock lock mov aas (bad) mov (bad) (bad) movsl dec inc jecxz pop stc cmpsl std adc outsl inc mov jg fbstp jmp mov pop sahf cld cmpsb mov aad cld out (bad) loopne mov dec dec jg fcomip out std mov (bad) fcomip adc jg (bad) push push pop mov cli cmp mov call out mov cld pop (bad) fidivr (bad) popa (bad) jmp call loope cmp xor call jg pop push daa push jle push mov ljmp dec clc (bad) fidivrl scas cmc fwait (bad) ljmp loope hlt addr16 jle test ja pop repz incb jg cmc call mov cld mov pushl push jg (bad) aas call (bad) movswl das (bad) mov jp mov std ds stc aas idivl (bad) mov (bad) stc mov ljmp jecxz clc in incl mov push jg jg out clc repz mov imulb cli and imul cld jp (bad) decb insl std idiv lret icebp fwait incl jg jecxz je stos (bad) mov mov sahf cld in call pop mov daa int3 jle (bad) dec std mov loop std or (bad) cli icebp aas mov jle inc dec repz pop sti xchg (bad) mov mov push (bad) fsubrl or ljmp sti aaa (bad) loop lahf decb xor (bad) repnz std pop mov jmp aaa (bad) push push addr16 cld jmp std cmpsl decl cli mov stos sub jae (bad) xchg mov (bad) (bad) mov mov clc xchg std loope rol (bad) sti jg (bad) outsl sti adc jg pop clc pop (bad) stc mov out jge (bad) (bad) fucomip int idiv cld xchg mov cld repnz jle lahf (bad) aaa (bad) jle fisubrl xchg std (bad) ljmp icebp cli jmp imull ret xchg jle cmc sti push aas lock arpl (bad) call pushl pop jmp in (bad) dec (bad) push jg subl cwtl (bad) cli aas stos incb (bad) icebp outsl clc ja xor stos lahf (bad) arpl cmpsl (bad) out jg mov jle stos mov pop sbb outsl jg aas jmp jl cli xlat (bad) cltd in aas idivl (bad) in xchg (bad) leave jg xlat sbb outsl cli jmp mov mov cld cmp lcall lock js (bad) cmp jg aas sti aaa (bad) jmp cmp aas out pop xchg repnz mov pop lock ja in cmc hlt lahf mov push lahf sti ljmp xlat (bad) jp std cmpsl jg pop (bad) icebp jg (bad) pop mov lret dec pop std inc jmp mov fdivrp iret (bad) jmp ljmp jg pop clc mov pop stc xchg mov mov jle fcomip iret cli idiv enter std pop jle pop test and call daa (bad) in cmc lahf sti outsl cmpsl clc repz sti outsl mov dec rcr and out sar loope cli sti std jle cli call aas (bad) xor cmc das cld gs scas jg cli repz jg psubq decl jge ljmp aas lock cld int3 std mov clc out cli adc pop out mov stc mov out ds mov jg xchg (bad) xchg sahf xchg jg lahf cli stos sub insb loop push fnop out mov in iret clc sar jmp hlt arpl (bad) fistpll cmc sub repz (bad) std (bad) xchg jg (bad) call mov outsl fdivrs cld div xlat cld in (bad) fisubrl lret bswap fdivrp sub mov mov fnstcw mul (bad) mov lock std out cld pop dec outsl imulb sub aaa pushl pop std fdivrs jnp dec mov rcrb mov cmc call cli out bnd hlt imul in in aas stc xchg aas mov clc jnp cmp (bad) mov das stc pop (bad) fcompl pop std xor (bad) in push mov out (bad) mov decb pop cli repz scas cli pop incl call aad call (bad) (bad) xchg pop clc sub cwtl (bad) xchg out cld (bad) mov cld dec mov jg das std into mov jg hlt cld clc aaa jl pop cld jne jmp lcall call aas cld pop pushl jg and pop mov stc aas jle fild outsl stc inc (bad) arpl aas repz xchg jg dec (bad) out aad lock lods cli (bad) rcrl repnz std es (bad) fwait in cld inc scas jg outsl hlt dec idiv xchg popf (bad) mov pop cld push mov jmp (bad) adc xchg lahf (bad) jg icebp outsl icebp cmp cld push decb mov std pop cli mov cltd aas icebp xor scas std xlat lcall (bad) cli das (bad) jge scas (bad) ja jnp mov (bad) jae cld adc (bad) jg lahf cld cmp (bad) sti cs jg lahf sti pop jle (bad) cld cmp in jg (bad) std repz (bad) out scas clc repz scas fistpll idiv idiv (bad) fnstsw (bad) ljmp (bad) (bad) call pop cld arpl rcrl (bad) clc lahf std cmpsl mov hlt aas decb (bad) mov pushl movsl jg popf (bad) pusha stc stos (bad) das ljmp clc cmc lahf jl iret push pop cmp cld mov pop repz push (bad) jg leave (bad) mov (bad) xlat fcomip call (bad) pop jg scas aas std int (bad) xchg std cltd call cmpl cld dec (bad) mov cli mov mov (bad) jmp (bad) repnz std aam imulb jg (bad) std jge neg std in mov (bad) mov stc sub ret (bad) xlat icebp pop jbe repz dec jle dec jle push mov jle dec jg scas cld into cmpl cwtl mov jle aas cli push call aas dec cmp in (bad) std mov mov mov ds mov pop sti aaa decb fwait (bad) ljmp jae (bad) out repz cld mov lock mov decl xchg dec aas loope (bad) fistp int lret pop stc (bad) (bad) mov loop (bad) and lret jg lahf jnp (bad) jmp repz fisubr std fidivrl clc clc xlat cld pop push (bad) adc pop div std mov repz mov jg ficomp sti (bad) (bad) lcall jmp cmc ja push (bad) out lahf mov popf (bad) fidivr mov (bad) das std sti jg call call incl std dec jg clc pop sti cmp mov decb jmp fwait jg (bad) ljmp jmp sti pop cld jmp leave decl repz mull jle out std jae (bad) fidivr jp (bad) cli inc jle pop je jmp fidivrl das (bad) pop jle pop out outsl (bad) fimul mov scas (bad) mov mov jg (bad) jg xor mov cmpl es stos fcomip out cld dec leave jg xor pop cld idivb shr scas std mov mov cmc aaa cld ja cli and mov cli mov jecxz fbstp (bad) cmp cmp mov cld loope (bad) dec fdivrp outsl (bad) mov (bad) incb lea outsl lcall pop lahf (bad) (bad) jg scas icebp cmpl lods decl pop dec jg mov arpl jg aas (bad) mov pop jle jg std pop jle aas (bad) cld das stc or cmp (bad) sarl pop std xchg imul jmp pop mov jg pop out (bad) xor mov out pop (bad) push call in jg (bad) std (bad) jle loop (bad) (bad) cmp (bad) scas in fcomip loope (bad) clc jecxz cld or xchg std fidivrl jmp mov hlt mov clc jge std mov jno ret fwait cld or push scas (bad) push mov std imul cli xchg inc jg into mov clc (bad) cld (bad) jle aas into icebp out push idivb push incl (bad) sbb icebp mov jnp stc pop icebp xor mov test repnz aas icebp ja jns icebp mov jno loope xor dec cld sub cmp (bad) mov iret std xchg mov lret repnz aam loope stc pop lcall cld addr16 push push jg pop lock lcall out dec cli mov jmp cmp jae sar out cli push dec aas icebp (bad) ljmp pop inc out std out mov fcomps push outsl lock (bad) cli mov fistpll (bad) fistpl lcall std mov stc icebp (bad) lds imul jg stos jmp mov std pop jg (bad) inc jl pop std scas (bad) fstps (bad) (bad) pop icebp (bad) arpl imul (bad) mov lret fucomip xlat decl xchg push inc pop clc in (bad) clc decl xchg jl imul xchg cmpsl jg pop std in xlat cli fsubrp repz cld or (bad) das clc add (bad) jg in out pop dec cld sti lahf lcall repz inc mov divl jns aam repnz mov (bad) mov mov cmc xchg (bad) xlat mov (bad) jae xlat lods icebp jg pop cld pop mov das inc jmp aam mov jg mov incl xlat in (bad) (bad) repnz jg jbe cmc mov out aam (bad) iret (bad) inc sarl ja (bad) ljmp aas jp outsl inc (bad) fcomps aas jecxz jg pop (bad) jp shr in call jmp std fucomip (bad) jge pop cld lret adc cld lret call scas cli or push dec clc dec jbe (bad) cld xchg jg (bad) sti in jle icebp hlt int hlt pop xlat (bad) (bad) das (bad) imul in loopne std mov mov (bad) jmp (bad) jg negb xchg jg fistp jae mov jmp outsl frstor pop cld into mov popf sbb stos aas ljmp icebp iret pop ss sti cld mov clc lahf cld fistpll fcomip icebp pop std pop pushl jecxz cld cmp jnp mov pop (bad) (bad) das stc (bad) xchg push mov xor fildll sti movsl inc cli (bad) lret jbe fyl2xp1 pop jmp sarl lret mov fstp shr stc pop in mov (bad) and sbb out xchg aas jmp fildll (bad) (bad) std (bad) cld (bad) jmp mov (bad) pop jecxz (bad) pushl cmp sub jg jg dec incl iret incl (bad) sahf decl (bad) mov jecxz cmp (bad) (bad) loop jecxz inc (bad) lock clc mov hlt out repnz call loope (bad) out inc icebp out cld outsl (bad) (bad) into iret cld scas dec scas idiv mov mov cli sbb bnd adc lock daa sub (bad) mov out clc out push lret jmp out xchg mov pop cld fstps out sarl sti xor push mov (bad) cld jmp xchg cmp mov fcomip pop cld fwait jle lahf clc popf jg jg push fnstsw pop stc xchg scas jg pop lock (bad) pop aas jno out (bad) stc (bad) dec fcomip lret jg daa jg mov jg daa push (bad) (bad) popf aas ljmp popf mov jae lahf fdivr adc lret push lahf std and aas sti fdivrp mov jg cli (bad) outsl inc cmpsl mov jmp (bad) (bad) mov aas stc dec cld and xchg call imul aaa call lahf pop mov mov (bad) clc aas js cmpsl movsl mov xlat jmp clc mov std daa hlt (bad) stos xchg mov inc sarl outsb cmc jmp lds out ja outsl incb jg lahf neg pop (bad) fst jmp jge hlt (bad) (bad) push (bad) (bad) ljmp popf std lods iret inc mov stc ret jmp (bad) (bad) dec (bad) (bad) cmc jmp mov (bad) jg mov call mov mov jg jg xchg stc pop jg mov or cld hlt fcomip mov aaa addr16 mov jle pop inc jmp jg scas mov lods mov bnd mov ljmp inc outsl icebp mov scas call insb decl (bad) in decl xlat std xchg (bad) fidivr lock dec aas icebp daa cld addr16 aas jne mov out idivb int3 pop notl inc dec call (bad) std in mov cld jge iret out cmc xlat (bad) lcall scas cli mov ljmp mov xchg (bad) sti jge icebp jg lret aas call incb (bad) ds and (bad) (bad) daa jg jg fistl icebp aaa out cld xlat cmp mov fsqrt push jle cmc out (bad) popf push clc (bad) jae cmp outsl (bad) outsl cld xchg jmp aas testl icebp xchg decl jg jg psrlw lret outsl icebp jg mov in (bad) (bad) jg ljmp in iret decl jne ret scas pop std dec mov jnp addr16 scas icebp cmp push scas enter lahf cmp stc cmp std mov ficomp push fcomip outsl std arpl inc (bad) aaa std mov paddw std pop cld mov out pop bnd ret lcall sti fistpll das jmp mov (bad) fwait dec pop repz daa jg push jg dec mov (bad) aas cld (bad) (bad) fnsave cli xchg jmp dec sti sbb mov pop dec cmpsl mov jg lahf cli stos das (bad) clc (bad) into pop stc paddb pop hlt jnp lcall (bad) out fildll pop call jg out sarl std xchg jg arpl out jg scas (bad) stc dec ja pop jg jmp clc jnp out (bad) paddb decb ja mov jg dec std repz repz push cld icebp lahf (bad) mov dec sti idivl outsl std push jmp test sti mov fstps mov scas jg aaa stc in (bad) cli jg mov (bad) lahf xor sti mov stc adc stos stos aas imulb jp (bad) (bad) hlt out lock cld ljmp in outsl sti in cli xlat jge jg jge mov sti dec mov daa (bad) rcrb pop out jge jg cltd fucomip idiv push jle lds divb jmp ja pushf mov shrl xchg mov pop cld ret shl mov cld jno fdivrs sti lods pop icebp aaa inc call bnd cmp mov push loopne jg (bad) ljmp (bad) jecxz cld jg outsl inc jmp mov jge mov div cmpsl (bad) scas jnp repz jmp sbb mov (bad) jecxz (bad) lahf jb mov popf pop sti (bad) std out jmp mov jecxz cld mov stc fwait cmp cld (bad) fstpt jecxz jg inc mov mov popf aaa mov aas jmp stos xchg leave scas cli push lahf cmp aas cli mov std out ja lds pop pushl ja mov outsl decb aas cld push push jmp ret (bad) enter lods aas sti out (bad) xchg lret mov mov aad div cld mov jg cmc jmp jge fnstsw mov gs mov inc (bad) std ret idiv xor jge jg scas inc imul in jg jmp sahf std lcall lock call mov jg pop imull dec cld mov sub (bad) clc aas in addr16 aas cmc (bad) pop jle jmp jmp fstpt pop cmp sub loopne out dec outsb pop (bad) pop ja mov jge incl clc icebp outsl clc mov scas lds iret mov sarl xlat dec jg fucomip repz jnp cmc mov jg jg cld ret jle xchg popf std ss (bad) cmp (bad) jg pop icebp push std idivb mov fcomip paddd icebp jg stc call fwait (bad) (bad) jg jmp jg stos aas loop sti mov mov sub jg pop (bad) cmp mov fstpt aas sti aaa cld or idiv push dec ljmp cmpsl (bad) fwait mov ds xchg (bad) stc pop hlt xlat jl (bad) paddd jmp mov (bad) jmp (bad) (bad) std lds add mov in idiv arpl jg stc pop jmp cld stos jg fcomip iret std fcos out imul std inc fldenv das clc mov dec mov lcall xchg aas in mov xchg inc mov cmpl ds (bad) mov idiv xchg sub cld inc incl jle fildll iret std or lock call jg jnp mov lahf cld divb stc mov (bad) clc int (bad) (bad) mov (bad) in loop jecxz int aas negl fbstp cmc idivl out (bad) mov fdivr pop push aas sti lahf cli mov (bad) jmp xlat mov cmp dec cld push push jg das ljmp lcall gs insl xor jg rcr cli and sarb aaa (bad) mov (bad) jecxz cld pop jg jg in idiv arpl clc push outsl stc mov (bad) mov pop std xor scas (bad) jge sub (bad) rcrl jmp aaa jl mov pop pop std idivl jg fcomip das mov mov call jmp jg (bad) stc pop call call (bad) fcomps lahf pop cld stc dec lahf cmc das (bad) mov fnstcw daa sbb lcall xor das sti idiv aam cld iret pushl aaa jle mov mov dec idivb sti outsl (bad) mov jle fucomip das cld rcr repnz jmp std mov (bad) rcrb aaa clc ret mov lds cmp push and (bad) sti mov fstpt pop outsb jbe fnstsw mov pop cld aaa jle fucomip in call scas mov (bad) mov das jle mov idiv push (bad) jmp lahf cli jmp aad call xchg jg outsl mov lcall lahf jae paddd sti scas call (bad) in fcomip imul mov aad pop cmp sub lahf cld mov repz std out (bad) dec (bad) arpl outsl cmp mov out lock mov cs aas cld lods jg ja (bad) fcompl cli in sti pop pushl fbld jnp repnz icebp lahf cld mov cmc fstpl idiv mov (bad) cmp cld paddb xchg (bad) out fistpll xchg cld out call incl cmc xlat (bad) jnp into aas icebp jmp negb fidivrl std incl jecxz (bad) in fbld daa std xchg (bad) movsl pop cli loop clc cltd std decl ja push jg (bad) std (bad) (bad) out repnz daa decb dec mov aas (bad) cmpsl sbb xlat das std stos push idivb vmaxss call xchg aas inc idivb shr fwait std mov incb cld out pop jge pop jle jmp add std scas clc fwait (bad) fnstsw sti pop cld mov ja cltd mov push mov std jne call jbe jmp dec pop inc icebp negl fstpt add ljmp (bad) repnz jg jle aas out das std dec jg jg fsts and jg jns ljmp mov hlt aas std out dec aas (bad) fnstcw outsl decl (bad) jge insb repnz inc mov in mov std xchg push scas jno ja cli (bad) stc out xor (bad) sti jg xlat (bad) fisubr fcomip dec cld into stc das pushl pushf push jg xchg loope jle fbstp mov iret daa das (bad) jnp push std cmc jg jmp hlt xchg cld ljmp aas std ja sti fwait cld ljmp aas loopne movsb icebp jmp mov sahf (bad) cmpsl jmp pop icebp pop aas pop dec mov cmp (bad) incl cmc incl (bad) pop repz stos pop mov jg (bad) (bad) lea (bad) popf mov sub mov hlt push cld cltd jg pop sti push pop mov jg cld fcmovnu ljmp jg into pop notl out icebp push lds out push (bad) out scas cli cld cli outsl std inc mov (bad) xchg dec (bad) cltd aas cld popl std ret jmp std cmp call ja imul psubd out clc sti decl incl lahf clc out sahf (bad) xchg jg pop (bad) lods pop (bad) jge xchg mov clc out cmpl jg lret (bad) dec cld aas jle jg jnp repz lahf inc jmp (bad) lret dec stos jg pop and ljmp fstp cmp pop jp scas pushl (bad) mov loopne repz test out hlt cmpsl std mov aas cld jle cmc outsl xchg jg stc (bad) aas ljmp add xchg dec pop cld movswl jg repnz (bad) out call jg fcomip iret jg fnsave jle jg stc aas mov cli pop pushl enter inc iret (bad) ljmp jg out cli cmpsl incl mov mov push push jg (bad) pop icebp addr16 mov call cld cmp (bad) cmpsb outsl std flds (bad) call cld dec jg pop cmc out xlat stc or lret sti outsl inc fucomip psubq (bad) lea (bad) lcall cli aas std jecxz jecxz pop aas cli loop (bad) std (bad) std lock repz mov (bad) xchg xchg out cli lret scas jmp mov (bad) stc jge rol fcomip idiv push jg lds fdivrp adc loop imulb pushl lahf js jecxz (bad) ljmp jg scas divl sti scas dec jg aam jg pop out push mov lahf stc dec sarb fnstsw fnop out aas divb (bad) std jg cli mov ljmp decl pop lahf cld scas jg ret mov addr16 jbe jle mov cli fistpll stc sti (bad) out pop jmp clc sti jg das pushl jl (bad) decb fldt out xchg fs lahf (bad) fnstcw dec stc mov ljmp mov jecxz (bad) lds jmp out lcall fidiv outsl jmp mov out (bad) outsl incl or pop jg dec xchg (bad) jmp ret stos jg lahf push dec jle outsl sti pop jmp fucomip pop pop jge xchg pushf call mov fs jle jg std dec call aas loop jecxz sti hlt lahf cld ret jle mov xchg (bad) fcompl mov (bad) cli aaa std loop sti pop call jg xchg (bad) outsb mov lret aaa scas jg das sti cmp dec jg mov lret aas sti pop std lret jg jg pop inc addr16 mov out int3 push call mov std fwait push jg (bad) into sub icebp clc push jle idiv std pop decb pop std jns (bad) fucomip (bad) (bad) aas (bad) mov je pop jmp jg lret pop cld (bad) scas sub sti aad stc outsl clc ljmp xlat jg psubb (bad) cld pop notb mov (bad) or aaa adc (bad) mov (bad) out lock (bad) (bad) adc jg jg clc mov repz stc push jmp pop int std stos leave jg or cld push (bad) fucomi incl jle dec aas jecxz sti mov (bad) js xchg std jge jmp mov xchg push (bad) dec pushl cmp clc loop std pop (bad) (bad) stc icebp mov jg bnd mov ljmp stc hlt out (bad) (bad) mov fcomip fistpll loop (bad) jmp (bad) daa incb into mov cld pop cmpsl xor mov das jg das clc xor mov (bad) loope lcall hlt scas outsb pop sar lds xor scas (bad) adc scas inc xchg mov fucomip aas mov lahf (bad) icebp (bad) fsubrs idiv iret (bad) fidivrl out mov xlat aas jno jnp test out xchg jg sti roll jecxz stc cmp dec jg pop sti pop (bad) out jnp fstpl mov mov cld dec (bad) fcomps cmpl imul out (bad) (bad) icebp outsl sti dec jg lock insl jbe jmp cld mov sub fisub jg psubq sti daa decl (bad) das cld xor jnp cmc outsl mov aas neg cld (bad) jmp jae xchg mov mov pop jg cld cli jg scas clc push incb (bad) fcomip mov mov xchg (bad) pop cli xchg jg in js (bad) (bad) aad pop (bad) js sti cld ja (bad) pop negb lcall (bad) lock out in mov clc pop call (bad) cli xlat mov fnstsw idiv int out decb (bad) sar fdivrp mov std sbb jne mov aas cld inc (bad) bnd pop aam lret pop std sti call jg testb repnz iret std es cli (bad) dec mov icebp fbld xchg sub xlat idiv enter ret mov mov loop mov mov cli jnp std out std mov sti push cld jp jge mov jle jg cmp xor shrl (bad) outsl hlt pop (bad) ds in mov ljmp lahf ja (bad) fldcw mov in std fcomps cld aaa stc cld mov idivb cli mov aas jp idivl jecxz mov jg (bad) clc push ret jg lcall xchg mov mov idiv std leave mov sti in lcall lcall ja stos push jmp fnop lret (bad) mov jmp aas sti sbb arpl (bad) aas decl mov jmp fistpl outsl clc pop sarb (bad) mov (bad) cli (bad) enter incb inc dec jmp std jg movsl ja (bad) (bad) cli mov xor mov (bad) jmp jecxz cld lahf jbe call (bad) ja imul sti iret lcall test sti idiv lahf addr16 std (bad) imulb lahf decb hlt fstpt ja std jbe repz std (bad) repz fdivrp aad in std jecxz (bad) jmp sbb jg xlat (bad) mov push xor cmc daa mov cld int3 dec std in aas stc out add lahf jg pop sti addr16 lahf jg in push loop cmp jnp aad cld lahf stc dec jg fbstp std mov mov jg mov xchg inc repnz cld xlat stc insl (bad) mov (bad) aad ljmp mov mov pop (bad) jge ret lock std fwait (bad) stc (bad) pop (bad) cmp cld in jle sarb jg jg xlat lcall out (bad) cmp fnop jg stos mov (bad) flds cmc aaa std push (bad) cli (bad) (bad) std push push scas cmc (bad) mov lcall in out stc lods jle imul clc cmp pop out (bad) xchg jg (bad) jge jecxz leave pop lock push mov imul cli xor (bad) jmp (bad) das (bad) in jmp pop repz iret cld lea cmpsb mov xchg cld std jbe pop cld cltd pop push mov dec jg cli aad sti jecxz fldt jg pop decb xchg jg mov jecxz cli lods decb imul mov hlt outsl clc xlat jle pop int stc (bad) std push mov jg lahf cli fwait pop incb (bad) lahf (bad) lret decl and std call (bad) pop lock lahf std (bad) ret es cmpsl mov push aas sti (bad) mov stc add pmaxub cli jmp lahf xor fucomp pop stc scas xchg aad imul pop jle mov (bad) xchg jg clc out std xlat iret inc jg fstpt jnp cli enter pushf (bad) clc sub cmp out repnz mov cld aaa cld or (bad) pushl fwait jg jg (bad) clc mov aaa jg mov incl (bad) std fwait lahf cld dec paddd sti sbb arpl mov sbb pop clc lret (bad) cmpsl jg aad sti jmp (bad) pop call xchg scas jmp stc aas (bad) jae jg lahf ljmp (bad) (bad) cmc (bad) cli mov test sti aaa mov cli cmp (bad) jmp (bad) mov and mov aas idiv (bad) mov mov lods mov (bad) jmp (bad) sti (bad) insl jg dec cmp dec addr16 lods lahf jl xlat cmp mov pop outsl (bad) out imull push outsl cld ss repnz mov out decl out out std aas stc call repz mov pop jecxz stos (bad) xchg (bad) scas stc sti jg mov jge stc aas cli pop aas cld ja cld pop leave scas ljmp aas cld iret fisub call (bad) es icebp mov loop mov incb (bad) call mov (bad) fcoms (bad) push pop cmp lret (bad) call das call (bad) outsb inc aad (bad) sti (bad) ss out inc stc xchg jmp icebp xlat cld fistpll cli cmc out repnz fdivrp fstp std lret into pushl jne idivl pop (bad) out jg cwtl pop divb cld mov mov std test out jne push jmp (bad) out pop std jecxz fcompl ret paddd mov jg pop sti pop out cld out mov int icebp out repz decb xlat scas clc sbb enter decl mov idivb mov (bad) jmp repz ds incb shrl cmp xlat imull cld in loop (bad) arpl jle jg aas sub popf (bad) mov dec lahf jg,pn in mov popf xchg push aas testl push std testb dec jg fbstp jecxz loope jecxz stc scas dec jg mov rcr hlt outsl daa cld inc mov ljmp incb arpl out aas sti aaa mov mov aas call aas dec stc aas out std idiv (bad) lahf repnz aas clc xchg loope sar int3 aas std fwait out std mov cld push call mov (bad) xchg mov mov call aas jb cld (bad) std xor outsl lcall (bad) (bad) xlat cli jecxz mov mov fnstsw iret (bad) cld scas stc iret (bad) std repz sti bound xlat inc scas sub das sub (bad) iret (bad) jp sar (bad) mov (bad) pop pop std fistpll pop cmc xlat mov aas cld iret int3 fdivrp int (bad) popf out das sub test pop cld xlat cmp hlt outsl call lahf cmp (bad) jmp (bad) jle mov fistpll cltd lock mov in dec stc sarl cld paddd aas hlt outsl cld iret jg scas negl std (bad) enter gs xchg (bad) mov out (bad) out icebp addr16 (bad) or mov cli jmp (bad) aas (bad) loop jg jmp clc std (bad) daa adc iret (bad) xchg cli ja call jg call cmc pop mov xor std in cli inc ljmp (bad) fwait std leave pop mov aas repnz (bad) aad idivl jl xchg dec mov sub dec stos mov fstpl cld mov cli lahf cld out cld test fistpl aaa lods (bad) fnstsw dec std jmp into (bad) cmp jg mov out outsl sti sbb repnz das cld pop dec in paddw test cld repz fcomip lfs jle cli pop std lods push (bad) std dec incl icebp (bad) in std cs ja stc stc push jg pop sti jmp xchg repnz cmc cmpsl std mov (bad) scas jle xchg inc (bad) inc (bad) mov jmp lahf (bad) movsl jg jg idiv jae fcomps addr16 jmp les mov lahf mov jg pop (bad) pop jg pop mov (bad) clc pop int roll (bad) jmp cli sbb jg dec jle movq iret std inc jg push mov mov push jg out inc jmp jg pop stc sbb fincstp (bad) in mov clc (bad) cld pop dec (bad) stc pusha jmp cli cmpsl lcall cmc mov outsl (bad) in pop icebp cmpsl cld jle inc aas lock pop (bad) out std outsl stc fistp out hlt mov jecxz jle fcomip aaa ljmp aad (bad) pop jle scas std adc (bad) mov jae leave outsl divb (bad) test pop cmp lods sub stc xchg jg ja jecxz cld outsb stos lahf cli pop aas cli sbb clc (bad) (bad) clc mov icebp pop clc pop jg out cmp (bad) push lahf stc imul jg iret std xor push cld mov xor (bad) fnop (bad) xlat mov jg fbstp mov mov inc jg jg imul ja jns inc std xchg (bad) fyl2xp1 aas sti pop incb ja scas mov cmpsl pop cmpsl pop mov jg mov jg dec cmp mov ret jle jmp cld jmp in (bad) scas sti movsl (bad) scas mov in cld loop std mov sti mov inc push pop jl mov jecxz icebp (bad) std addr16 pop cld mov dec mov clc pop incb jg aas ljmp (bad) mov mov cmp out std and stc aas (bad) popf fbld das (bad) out mov dec (bad) xor sti mov sbb mov ljmp ret aas cmc dec stc or aas dec std mov lock mov pushl ljmp cld adc pushl (bad) sti aaa incl sti (bad) cld (bad) (bad) mov das jge test push jmp std repz (bad) idiv aam out cld mov sti jg ja pop (bad) fdivrp std sti (bad) std repz in jmp jle jg out cli outsl call xlat (bad) in mov sti dec aas stc into mov movsbl addr16 sub pop (bad) clc jg sar idivl in fistpll (bad) in mov aas out dec (bad) ja scas jmp das cli scas lahf cld lds out jge cli fistpll inc (bad) loopne stc ja fidivrl repnz xchg (bad) das stc jnp jg mov stc mov call lahf incb xchg idiv clc js outsl (bad) pop jg pop idivb std xchg stos pop hlt pop into call jg (bad) dec popf popf jge xchg cmp daa lcall sti std xor daa call out clc sbb and lock jle hlt (bad) inc dec out cli cmp loopne (bad) hlt scas std or pushl std mov std imul daa jmp (bad) arpl out pop std repnz aas divb sti sbb dec mov (bad) jbe mov call mov (bad) jmp (bad) jp lret daa outsl jg aas jmp cld jl psubb (bad) mov pop (bad) mov movsl jg lahf sti cli out std cmpsl ljmp std icebp fbld sti and mov (bad) paddd std ja push (bad) mov cli lock stc ja mov cld gs aas negb cld inc (bad) scas mul cld cmpsb jmp outsl clc xchg inc mov mov into aas cmp (bad) mul icebp aas sarb jl clc mov in loop xchg inc ljmp pop cld cmpl jns idiv jle in std cmp (bad) (bad) jmp jg out pop (bad) (bad) (bad) cli jnp mov out lahf cld push jg jg repnz xlat pop icebp addr16 ja mov aas cld mov das (bad) test fs aaa jmp jg sti pop das out (bad) xchg mov jmp pop clc in (bad) mov jmp in sti mov (bad) aas mov cmp or dec (bad) cmp outsl clc push std mov in sti mov pop (bad) dec jmp mov incl mov (bad) dec (bad) stc pop lock jg pop cli stos decb jne (bad) sub outsl (bad) movsl lahf cld flds jecxz sti mov in (bad) jge ljmp out cli scas jmp jg idiv (bad) (bad) mov inc in icebp lahf cld jnp (bad) cmp aas stc addr16 clc aas imulb int stc (bad) stc xlat call cmpsl stos mov fldenv shrb cld mov imul (bad) insl jg scas (bad) mov mov repz std sbb lods ljmp jg fisub aad (bad) clc scas (bad) mul das stc hlt (bad) decl pop jecxz clc pop (bad) (bad) fucomip idiv icebp jb fcmovnbe cli icebp mov jg mov or jg mov (bad) mov repz xchg mov adc cld popa jg pop jnp ja cld lds (bad) pop std sbb bnd ja (bad) dec mov inc (bad) mov push xchg aas lcall (bad) rcrb jnp ds fidivr lock mov mov sti std inc jg out std or mov inc lcall push decb loopne (bad) out movsl cld jecxz pop ja mov decb sub scas pushl jnp xchg mov decb pop mov fildll out std int3 mov in mov sub paddb mov dec jg xchg addr16 fldcw mov es std xlat mov (bad) in cld push mov mov fistpll mov cmpsb mov (bad) stos mov iret aas lock hlt pop lcall scas (bad) call (bad) stos jnp cmc pushl jg push dec (bad) std xchg jg hlt (bad) cld aam incl (bad) mov pushl mov cli daa call xchg dec lahf jns (bad) (bad) mov idivl mov daa std lds aas cmp ficom in cmc out stc out outsl (bad) in idiv jmp add std pop mov cld fprem1 lahf idivl (bad) hlt push jg scas jmp cld ret stc aad pop in inc jmp cmc fidivr xchg out repz sti into outsl cld mov out mull repnz inc push jg xchg mov out mov jmp ljmp (bad) mov xchg fcomip outsl mov adc push jg aas cli push jmp jg (bad) mov pushl aas cmc pop cli out pop cmc mulb call out (bad) xor idivl (bad) (bad) sahf cld add (bad) pop lcall cld in fnstcw std mov push xchg (bad) fidivr jae jmp fistl cmpl fstpt dec fcomip jg pop shr (bad) stos sub addr16 imul aas incb pushl scas cli mov ljmp movsb mov lcall cld repz pop cmpsl clc arpl dec std dec (bad) cmc pop std push jl aaa std mov xor in decl fnstcw stos incb (bad) gs mov (bad) fbld dec pushl jg scas stc pop jle jg mov pop sub das (bad) clc call (bad) (bad) call aas negl inc das mov call lods pop xchg bnd fmuls out std clc pop sbb fdivrs hlt aas mov mov clc das sbb les (bad) pop incl mov jg daa jg idivb jmp jge sti cld xchg mov (bad) outsl jg out stc mov (bad) loope cltd jg and stc mov std jg mov call lock (bad) fcomps mov sti xor stc orl aas dec leave jg fnstsw pop std ja sti hlt ja fwait jmp fcomip scas std test inc mov push (bad) rep mov sti and stc out in std pop lahf sbb jle lret out (bad) mov lahf cli call aad stc out sbb mov pushl cmp jg mov mov pop repnz push (bad) cwtl aas xchg in out stc or jg iret out jle cmc sarl pop aam outsl hlt fucomip jmp jg sarl cli jg pop std xchg ljmp cld ja jg fs addr16 sub aas in aas clc in xlat sti out rcr (bad) out stc iret push incl jmp cmp mov aas divb jmp mov call lret jmp pop (bad) jle (bad) nop (bad) lret (bad) std dec fidivrl decb (bad) in iret mov jmp mov dec inc (bad) stc psubd lahf hlt out mov jmp cld mov out aas cli xor cmc jg dec sti add sarb in ds stc (bad) (bad) cmp jmp ljmp ret push jg repz jg dec ljmp pushl out cld sub mov ficomp jg xchg ja jg push xlat aas notb fisubr std mov idivb cli mov dec pop std mov pop (bad) pop jg das jl loopne cli movsl push jg das ljmp mov cld scas fldcw sti std fidivrl out ss jae cmc aas clc insb repnz dec out outsl icebp daa ljmp mov jmp xchg jle mov in (bad) fbld sarl inc das cld jge (bad) fcos in mull lods lahf mov mov jmp pop lahf cld aad (bad) aas hlt cld dec clc iret (bad) mov jle rcl aas divb push jg push jmp fldcw xor iret outsl stc dec cld dec jmp mov mov hlt pop testb jg lds aas call (bad) mov decl pop lock loope (bad) xlat std pop call aas lock (bad) mov (bad) std mov pop repz std (bad) jg pop jns scas sti inc inc pop jp sti cmp sbb repz into jg pop cld loopne mov cld imulb pop pushf ljmp mov out sti int clc pop incl addr16 (bad) mov jle pop std iret jnp sarb pop pushf cld lds fnop dec into lcall aas (bad) xorl fwait (bad) mov jg lahf sti cld aaa (bad) pop mov sti or jecxz cld lea (bad) js or cltd aas jmp cld jmp (bad) push pop scas call (bad) ja stos dec (bad) loop aas pop stc lahf aas outsl pop std out jecxz ljmp daa jg pop (bad) fnstsw jg (bad) aaa dec pop mov iret mov (bad) fdivp daa lcall or xlat jg (bad) push jg sti lret decl aas mov jmp cli xchg ds out inc inc loope fimul movsl jg paddd pop incl loope dec cli out lahf std clc loope mov fild into outsl cli xchg mov jmp jg jg notl stc mov push dec mov iret push icebp mov jg pop xor xor enter idiv inc mov idivl dec lcall aaa into (bad) loop in scas jl mov std in pop inc mov jg pop cld sti jl aas (bad) jbe clc mov iret mov xlat (bad) in pop pop and lods (bad) xchg jg das jp cmp cmp scas jmp call repz (bad) (bad) jg mov xlat mov jg xchg jmp mov (bad) (bad) mov icebp jg jg icebp mov fcomip mov cmc jg push paddb mov cld dec cmpsl mov std (bad) mov std icebp mov std dec jg lahf sti imul jg pop mov (bad) rcr jecxz decb mov decl mov aad (bad) (bad) (bad) ja std cli mov std sti cld push inc pop icebp sbb sub fs cmpsl std decb repz clc idiv fwait aas stc mov lock jg iret std movsl jg jmp or sti stos pushl xchg jg idiv mov cmpsl pop fdivrp xchg std repz (bad) cld (bad) sti (bad) sti daa mov icebp pop clc pop ljmp out outsl cli or clc jg xchg call pop jg (bad) paddd mov ljmp sahf (bad) das dec incb (bad) das incb lahf incb cli addr16 outsl dec mov jg dec (bad) mov call dec mov fistpll dec stc cmp paddd aas jns jmp xchg mov imul negl in std mov imull outsl pop cld sti jg pop std std fcomip pop sti lahf (bad) repz pop std pop (bad) scas pop sti int aas in scas leave decl jg jg cld repz in paddb scas aas call cli dec pop std pop jg pop (bad) xlat cld inc push fcomip jg sar ficomp setb sti push (bad) cli mov arpl enter ljmp ror fcmovnu out sti xlat dec pop fwait loop jg aaa cld mov rcrl clc mov jp (bad) (bad) sti pop inc stc (bad) std aas icebp (bad) ja cmc imul mov (bad) jns shr imull incl mov dec cld jle fisubrl cmpsl std fstpt pop decl jg out cli das std sbb jg cmpsl std adc repz cld mov sti (bad) cli dec ljmp mov in add (bad) jg mov (bad) call (bad) stc mov jge cld pop fidivr out pop cld and iret lcall sarl xchg jle push call (bad) std out (bad) dec jle aas mov bnd sti (bad) xlat jg aas call std loope lahf pop cld mov daa sar jecxz decb stc mov clc aaa (bad) jg fcomip or sarb out lcall jmp mov push aas xchg aad rcrb (bad) int mov divb std jmp jg mov outsl (bad) jne jnp (bad) ljmp lahf clc (bad) (bad) pop jg (bad) cli pop decb lods pop sti (bad) clc fwait push jg ja inc jg jg mov mov scas pop call sarb cmpsb cld lcall pop (bad) popa aas cmc sub mov icebp aas repnz ljmp lock (bad) imul das (bad) add jg pop ja aaa cld adc neg inc cld (bad) dec (bad) cmp gs call incb lahf cld mov negb xor decb (bad) jge repz cmp and cld out (bad) cli lret inc push aaa jl push cld fcmove (bad) push insb std jno jg bnd cld xchg incb iret (bad) jae jg fcomip mov (bad) dec jg pop std out std push jg dec std hlt jg mov lahf cmc lods (bad) ljmp xchg imulb call (bad) pop lret jg hlt jmp push mov ja lahf dec jmp pop lock lcall loopne cli out fcomip dec incl jg pop (bad) mov mov loopne sti xchg pop (bad) cmp cld repz decl jmp ss out call icebp das cmpsl cmc fcmovne (bad) stc out jg sbb dec jg dec ljmp mov (bad) jmp loopne (bad) push scas call fcomip int clc dec xchg cld decl fcmovu dec stc (bad) popf pop cmp (bad) xchg push pop sti xchg (bad) mov lahf pushl jg incl cmpsl mov cld jns enter xchg popf mov out imulb sub mov jg aas cli paddw sarb bnd cld repz jg shrl leave (bad) clc cmpl mov cmpsl std das jg outsl imull xchg paddd jg xchg (bad) cmp jecxz (bad) in (bad) mov mov hlt loop pop std aaa and jg lods mov lret xor (bad) pop xchg hlt imul cld das cld xor fistpll sti aas in jnp lahf cld cltd jmp lds jmp out cld daa pushl addr16 jle mov icebp mov mov in cmc fistl cli (bad) (bad) scas cld pop out (bad) icebp jg jg sarl leave lahf std ja lcall std and (bad) pushl cmc imul (bad) push (bad) jle out lcall fisubrl sti jne iret pop ljmp lcall xchg jg mov call lahf clc sbb incl idiv fdivrs aas sti scas incl fwait mov mov aas (bad) arpl pop pop mov xchg (bad) lahf cmpsl (bad) (bad) jmp cmp rcrl mov cld dec cmpsl jg pop lock loope sti cmp mov paddd sbb (bad) mov cli ja sti loopne stc inc lcall sarl stc sti dec jg jecxz testb (bad) fwait (bad) ljmp dec jg (bad) jp mov jg pop (bad) icebp sbb (bad) cmp icebp scas clc daa sahf ljmp in mov jecxz dec daa sti sti jmp pop pop adc std pop cli jnp and (bad) jg xor mov arpl das mov xchg arpl mov xchg aas out pop sti clc pop incb mov ljmp cld das jl jnp rcrb stc (bad) jg stc cmc mov (bad) jmp xor divb in das sti call ds icebp fucomip call jg into and (bad) aaa aas inc cld repz pop (bad) aas (bad) adc lahf mov (bad) jg pop pop pop cld fistpll pop ds das jg mov mov out aas in lahf cld decb out mov cmc iret decl aas sti inc pushl sbb fist mov jg outsl (bad) dec idiv mov outsl jg das mov in jg sub mov std out ds cld icebp mov jg fbld (bad) xor (bad) lcall fbld cltd (bad) xlat inc out cli mov xor dec decl outsl std cltd scas jmp jg (bad) add (bad) dec js or xchg aas stc das (bad) stos dec push idiv or out mov mov pop sar sti pop cli arpl fdivp mov jg pop std fsubrs (bad) mov aas jg aas jmp pop mov cld mov std lcall lock (bad) (bad) aas loopne (bad) sub sarl iret int3 jmp decb inc out (bad) out scas jg neg dec mov fisubrl mov inc lcall aas ja cld aad sti out in mov aaa call lret push in ja mov ret jg iret clc (bad) sub imul (bad) in (bad) lahf dec stc xchg fbld mov cmpsb incl (bad) and aas cmc sti (bad) imul aad cld dec std addr16 mov stc jecxz jmp mov stc jmp sti (bad) pushl (bad) (bad) in aas stc mov aas in outsl cli lret jmp lock xchg jg scas std scas jle mov jle (bad) iret idivl outsl cld fwait jge jg imul aas stc (bad) popf dec jmp lret pushl es cmc (bad) jl iret pushl (bad) (bad) call xlat das dec (bad) clc mov divl std jg (bad) loop in mov aad (bad) cld imul (bad) jmp clc imul shr je pop std ret mov push inc cmc lahf (bad) pop cld pop mov cmp hlt ja mov xchg aas jmp lahf lock std cs incl jmp aas jne das jmp (bad) or fidivr sti sti std sbb mov std cs sti stos call mov dec mov mov out ja ret jg (bad) jmp (bad) imul out mov jg mov out out cmpsl (bad) mov push push (bad) pushl jg xchg incl jne jecxz (bad) mov lahf jno out fdivr inc fstpt icebp fcomip pop mov pop (bad) sbb aas in psubw jle (bad) cli fldcw push aas std push out sub pop jg (bad) pop icebp lods (bad) ljmp cmpsb mov push xchg jg scas cmc jecxz call pushl mov jg dec push (bad) out xlat cli lahf jle ja xor xchg lahf pop cld sahf (bad) arpl test xchg (bad) jg cld mov icebp lahf repnz xlat jg mov (bad) (bad) aas loop sti scas (bad) nop lret jg (bad) call jg pop sti call pop lods jg cmpsl jg lahf hlt aaa push fistpll inc fcomip dec (bad) mov imul cmc stos (bad) lods (bad) stc lret (bad) dec aas loopne ljmp (bad) push pop stc ja (bad) mov in jle clc stos aas icebp mov jnp fstp test out std lahf push and std sub mov mov (bad) repz jmp (bad) jge mov sub repnz aad cmp mov repz jge (bad) xchg (bad) cli sbb das es cmp repnz cld ret das (bad) out loop lahf lock (bad) mov pop stc aas cld push pop std or (bad) sahf decl mov pop std fstpt mov outsl decb (bad) lock (bad) scas jle fcomip lahf clc ret jle scas mov out xchg fucomip scas call mov fucomi cld mov (bad) sub jecxz out lahf cld and xchg pop (bad) std pop lock std arpl ret jg lahf cld jnp jge outsl stc pop (bad) clc (bad) in iret jg aaa lahf cld icebp aas cmc cmpsl lret cli ret outsl hlt stc loope aas icebp arpl push fnop cmpsl cmpsl pop call stc cmc aas sti scas ds lea not cld pop imul jle cmp inc in xchg gs scas clc in les daa sub jecxz neg decb iret inc jg call sbb or (bad) loop cmp in sti pop (bad) mov push mov std sbb sti out incl test dec jg jg mov pop add jl lret (bad) lock lahf (bad) (bad) (bad) out decl clc (bad) incl (bad) repnz pop lock jg (bad) std idiv aam ds ljmp fwait jg psubq jg repz fwait (bad) fnstcw icebp lcall jg mov idivl mov cmc mov fdivr aas jns xor (bad) das (bad) fstpt (bad) pop aad dec mul das (bad) push (bad) xchg mov out cmp fdivrp inc jg das stc (bad) repz sti pop (bad) arpl out cld scas clc lahf addr16 out cmc xchg cld xchg mov call lret (bad) jg pop icebp (bad) mov ljmp mov dec call lret (bad) in idiv scas (bad) mov out lret xchg (bad) (bad) out pop out jle jg cmp push out sub repz jecxz cld xchg jg pop repnz std idivl (bad) loopne cli ljmp jmp (bad) rcll std imul pop pop std pop ja xchg addr16 repz daa jg mov hlt ljmp scas negl push cli dec cld fcos rorl ljmp sarl repnz dec jmp (bad) gs iret (bad) sbb aas jge jns loop (bad) cld (bad) push decb stc pop (bad) pop jg outsl dec idiv outsl cli scas (bad) fnstcw icebp lock std adc xchg cld xchg repz (bad) nop aas out daa jle cli outsl cli mov mov incl cld popf lcall scas mov sub outsl mov repz ljmp (bad) out std sbb push jg outsl (bad) stos das pop (bad) out jg iret jl mov (bad) dec jg ja (bad) out out icebp pop incl loope mov xchg std cmp loope lock push scas (bad) jmp repnz (bad) xor (bad) icebp aas not (bad) cmp lds aaa cld stos addr16 aas dec (bad) std out aas std fwait jg outsl cmc pop std xor (bad) jb aas sti jae fnstsw hlt das mov rorl imulb pop std and fstpt iret clc push dec push idiv imul (bad) cli (bad) jnp iret lahf incb scas mov jmp mov lea pop push (bad) jmp stc sub enter stc mov in pop out js lret decl cli adc cltd fucomip lock (bad) push mov xlat cli mov out sti movd pop repnz cld imul lock std mov sarl mov mov (bad) sti outsl hlt xchg (bad) sbb (bad) das clc mov call mov (bad) fadd fcomip lahf std fstp std call jg xchg xchg (bad) stc (bad) cld insl mov mov lahf stc push cld ja shlb push lahf std xchg std mov div iret incb call aas xchg repnz daa jg rorl call xchg lcall repz std out mov lcall (bad) mov in call jg (bad) loopne stc mov mov divb std mov jmp (bad) (bad) call xchg (bad) clc mov push (bad) cld outsl icebp cmp icebp dec outsl (bad) std push lahf stc cmpsl cmp aas jle pop mov xchg std stc jg icebp outsl stc icebp mov mov cld out mov cmpsl (bad) (bad) lock cmp (bad) (bad) cltd icebp jg mov inc mov lahf cld pop std outsb mov lcall lcall icebp xchg std (bad) in divl cld mov (bad) sbb (bad) incl mov (bad) and mov ret mov mov outsl call (bad) (bad) repnz (bad) imul aaa call (bad) out hlt jmp inc aas icebp das dec jle div pop stc int xchg push outsl jo iret std loope sti jg daa cld jmp push fistpll (bad) hlt jmp decl fistpll aas call jg mov jg outsl std mov icebp mov das jg scas cmc mov std in idiv sub pop jl addr16 vmovdqa lahf cld cs fcomip xchg std push jg dec call fnstenv hlt (bad) xlat ljmp std pop mov jecxz jno aaa (bad) (bad) call xchg mov pop mov mov movq cwtl aas imul sti paddd lahf stc or mov sti or jg push (bad) mov fcomip dec ljmp mov repz cld (bad) (bad) pop std cmp sar cmp out cld fidivrl jg das cli or cwtl pop incl fsubp iret jg fcomip xlat cld fistpll in jg mov call fcomip fwait es std idiv xor (bad) popf aas cld (bad) jge in push xor fdivrp mov call in dec call scas stc mov out (bad) stos decl clc pop (bad) cmp (bad) jnp (bad) out dec stc (bad) ja repz icebp mov imul mov jle outsl cli jnp std jp call inc push call lahf stc fistpll cli xor mov clc jnp sahf jmp jg cli mov jg dec std jae mov ljmp dec (bad) movsb (bad) ljmp (bad) clc (bad) cld xor jle lock jmp lahf cmc outsl jl mov lahf mov jg pop cld (bad) dec call pop cli idiv idivb (bad) outsl (bad) mov icebp pop cli outsl ljmp idiv hlt das std xchg ljmp imul pop cld jns xlat aas cmc fnstcw jmp sti cmp ja (bad) das (bad) jecxz cmpsl das (bad) shlb ja mull lahf cld cmp (bad) dec lcall lahf jns (bad) cld and out cli daa aas stc jmp cmpl xor leave das clc jmp sarl sti dec jle aas in std aas decl sti adc fwait mov mov aam hlt jnp in stos lahf test aas std ja ficom mov aas cmc (bad) (bad) xor or lea sub push pop clc movsl mov mov into outsl sti cmp mov lahf xlat (bad) (bad) std shr out call push mov jae fcomps ja idiv ljmp xlat mov jg loop lahf (bad) lods jg jg (bad) int (bad) pop lret inc aas repz cld xchg bswap (bad) (bad) fldcw sti std (bad) ljmp pushl in pop cli lahf (bad) arpl jle jg (bad) sub cmc pop std pop sar jmp stc out aas mov lret mov (bad) (bad) mov inc call popf out (bad) and and out icebp (bad) cld mov in push std mov out stc imul ljmp xor lock xor negl push cli mov sarl sti push dec sti mov mov mov jg outsl (bad) stos incl push std lods dec jg aas decl mov jg scas sahf (bad) and aam outsl hlt mov call pop stc sti cld mov xor pop (bad) fmul imul inc out (bad) jbe jg mov std jbe idivb aas call mov (bad) mov lock cmpsl cmc xchg jg pop clc fucomp in xor das jg iret std lahf jbe std fnstcw hlt jnp sbb mov sti cmc out jg in jmp int aad stc jmp jg fsubrl clc jmp scas push (bad) cmp (bad) cmp cmc scas aas clc out sti mov stc mov ljmp add mov add xlat mov outsl jl xlat (bad) xchg mov cld cmp ja jmp addr16 (bad) jmp int jecxz cld mov loop divb (bad) cli jg (bad) pop jg outsl sti mov (bad) std lahf std in (bad) mov cli xlat cli mov scas mov out stos lahf stc or (bad) cmpsb jg outsl jne sub mov (bad) idivb std scas jmp hlt mov (bad) mov lret cmp out clc lods jbe loopne repnz mov out std les stc mov mov clc mov out cmc push decl aas hlt mov pushl xchg ds inc fcomip sti (bad) std in outsl jge sbb pop xlat (bad) cld jg imul in jg lods (bad) cli mov push (bad) popf daa mov mov out sti fucomip cli lahf cli test push dec std lahf loope out (bad) mov jg dec mov pop dec mov push cld jnp mov fcomip pop aaa dec pop call mov aam scas repz cmp jecxz lcall ret jle clc pop sti int test sti pop jg fucomip ja outsl ljmp loopne jmp call sti in mov lahf push sub pop clc hlt loopne push push cld mov mov jg (bad) mov sub lret mov ljmp sbb clc pop std cmp pop jg repz (bad) lcall or push (bad) cwtl jmp fwait cld sahf mov (bad) mov sti aaa js incl aas pop cmpsl jmp pop imull test jecxz cli pop (bad) (bad) pop mov inc (bad) in dec xchg mov std inc push mov clc out dec outsl mul lock out (bad) stc (bad) iret aas loop sti mov fcmovnbe (bad) mov iret outsl stc lahf pop dec dec jle ljmp jmp stc sar out sub popf jle push xchg cld scas mov inc mov outsl jle mov jl daa cld addr16 hlt cmp xor (bad) cltd in cld loopne clc pop mov (bad) fstps std and pop aas (bad) aas jg jg ja negb incl (bad) out sarl jecxz (bad) cmp decl lcall repnz decl repz pop fs ljmp jmp push mov repnz insl hlt aas add aas sbb (bad) fcomip out or decb jle mov jg pop std jne push aas sub dec pop aas cli arpl sbb ljmp loop shr stos jg das cli pop pushl ret (bad) call out xchg jmp (bad) paddd sti aas stc inc ds fistpl (bad) jle (bad) aas std lahf incb in mov mov ficomp lock incl stc out out xchg daa sbb call out sar stc pop push cld inc jecxz jmp out std int sti jg das sti leave fnstsw ja (bad) push (bad) stos jg pop jecxz (bad) lea jg aaa stc inc (bad) nop jg idiv std decb jmp in incb js (bad) (bad) inc cmc pop (bad) sub mov xlat std or cli outsl cld sub (bad) pop decl jg fcomip jmp jle ja inc lahf std sarl ljmp mov (bad) mov mov xchg aas cmc out cld std jg lds xlat mov cld imul leave ljmp mov (bad) fwait sar sti aas repz fiaddl aad dec cld arpl fidivrl xor mov sti pop stc mov sti out (bad) out fcomp cli sub push mov rcrl dec (bad) xchg int mov iret lahf jns aas cld cmp push out stos pop sti out jge xlat fdivr pushf repnz ja cmpsb das idiv cwtl aas cld xlat sti dec jg jmp ss pop jle pop repnz std mov pushl cld scas sub mul std test (bad) cld pop jmp scas (bad) jne xchg lahf cli xlat lcall std pop call (bad) divb decb aaa (bad) sti stc jg paddw (bad) (bad) fistpll (bad) jge (bad) sar std xchg std or scas adc jg pop cld popa mov mov fdivrl aas stc (bad) incl cli lods (bad) (bad) mov (bad) (bad) clc pop aam push lret jg (bad) cli (bad) int lret pop jg jmp outsb movsl jg das clc subl stc fwait jle aas xchg bnd jle jmp cli pop jp aaa std add pop cli mov lret inc aas lock dec inc mov sub mull (bad) test in leave scas clc ja mov idiv cmc imul cmp lahf stc cmp pop std xchg call clc jecxz shrb aas gs aas stc pop xchg (bad) ljmp mov lahf stc adc push mov add lods aas sub out jle in decb icebp mov iret pop lock stc (bad) xlat clc xchg pop std cs mov (bad) mov pop xor jne ftst aaa (bad) mov mov lret movsl jmp pushl int (bad) fcos loopne clc iret ljmp jle jg scas cld aas (bad) (bad) jg (bad) sti aaa fidivrl lret (bad) cld jecxz bnd xchg (bad) jle clc pop mov cli fstpt jg (bad) jmp cld mov paddw jg fcomip iret mov std mov mov (bad) xchg jg cmpsl jg mov iret (bad) xor mov aas (bad) mov cld outsb dec scas mull cmpsb cld pop (bad) xchg jg aaa sti mov stc das std adc outsl clc jge mov pop sti (bad) inc aas out stc jne test stc sti insl pushl out (bad) outsl mov out pop stc ficomp xlat mov outsl sti pop idiv xchg mov mov cwtl aas out mov std lods jg scas jae xlat cld cmp div push (bad) mov cld repz and (bad) mov (bad) ja xchg (bad) cmpsl idivb sti pop cmc jg pop call mov cli mov iret pop hlt fwait (bad) sarb lcall mov fdivrp cmp das fwait out decl mov sti out fistp pop mov aas repz loope out cmc xchg cmp (bad) addr16 ja loop fcomip btc loop (bad) jae xchg pop repnz cld adc dec sbb mov cld (bad) jg idivl lds idiv int shrb leave pop std addr16 out icebp cmpsl push jg (bad) scas cld les lcall aad es dec std cmc (bad) popf push (bad) sti jg std jecxz in (bad) pop cld gs aaa lcall jg pop neg stc mov jmp jg hlt fildll std mov mov pop (bad) sbb and mov jg imul (bad) (bad) call fistp sti pop (bad) std jg repnz call out jg (bad) aas clc lret sub jl (bad) clc iret ja out xchg push cld repnz std mov aas std iret stc pop dec daa mov jnp repnz std lahf cld mov cmc fstpl sti push (bad) clc (bad) mov mov clc ja jge fistpl (bad) jge in pop pushl jae pushl stc iret mov sti cld dec iret inc aas pushl mov repz outsl idivb (bad) idiv into mov lahf inc jg lahf repnz aas idivb pop call pop cld fistp scas lahf cld mov pop stc inc push (bad) (bad) ficompl imull jmp aas dec jg push pushl mov out pop (bad) repz pop cld (bad) mov (bad) mov ljmp iret sbb cmp (bad) sub push lcall inc pop sti (bad) sarl lret repnz outsl sti (bad) adc out jmp lock push cld repz decb lahf jo daa std out sarl outsl std (bad) jg out repz iret (bad) mov jecxz lods aas lcall pop aaa das jle jecxz sti jg outsl (bad) in pop cmc imul jg ljmp inc mov movq jg pop std inc (bad) xchg fnop repz outsl sbb mov or sti pop stc sub (bad) xlat (bad) fdivrl imul cld pop pushl cmpsl (bad) out jg aas std or das incb (bad) (bad) lods jg push aas sbb out out outsl clc mov add (bad) cld scas std idivl jg mov (bad) lahf stc (bad) mov pop jg pop (bad) dec dec jg std dec (bad) ficompl out (bad) jg fwait vpsllw jg aaa dec jg cmc pop aaa inc cld clc pop std inc mov (bad) sti dec cld mov fcomip jg stc xchg jmp jg lock arpl aad pop out aaa lcall (bad) scas repz fucomip pop cld (bad) dec jg (bad) std rcrl aas (bad) mov cld ret mov incl (bad) in call enter mov (bad) push (bad) sti jg pop icebp sbb stc jmp (bad) xlat mov pop cmp repz push jg scas inc clc jg pop std inc (bad) fucom (bad) (bad) (bad) cld xchg (bad) fdivrs sar jnp and in icebp out rcrl push pop sti ja mov mov aas clc aaa std mov outsl cs fildll mov fdivr cli in out stc daa (bad) movsl jg (bad) mov sti stos jle scas cmc pop std fistpll (bad) fnsave idiv (bad) mov jg outsl xor cmp pop cld push std idivb iret (bad) clc das (bad) (bad) (bad) lcall sti ja lods jle das decb xchg aas out lcall jg pop cld (bad) in xchg (bad) (bad) pop std fistpll icebp lahf cld xchg jg (bad) cli lret jbe sti xor lahf cld cmp inc jg iret pushl nop (bad) fucomip lahf std imul das ljmp (bad) ds incb jmp rcll lret cld mov xchg mov fcomip out (bad) cmpsl decb push jg pop sti cmp mov sbb scas mov (bad) sti jl lahf jp out cld or movsl jg not cmp dec mov neg cli fisttp jg push lds xchg std mov fstps cli cmp addr16 jmp jmp stos (bad) sti std aas and arpl std arpl lret cs std push push mov jg (bad) fdivr popa (bad) jmp je imul (bad) in aas repnz repz std or lock and sti pop inc pop pop cld inc mov pop jg pop (bad) mov (bad) cmp iret stc inc mov lcall lret jle cmpsl jmp mov xlat fcomip ror dec incb out cld inc jg fcomip sub jmp (bad) xor loop jg xchg mov jnp xor jmp cmpsl cmc jecxz ljmp xchg jg outsl jmp lds enter cmpsl (bad) mov push mov xor (bad) sti outsl cli fwait cld (bad) mov incl mov fldcw in decl (bad) repz pop pop jg xchg int3 out cmc ja jle xor aas in lahf cld inc jle (bad) stc dec std push jmp outsl sub (bad) std mov (bad) movsl jg mov call (bad) pop dec cld jmp std ret pop incl jg pop (bad) daa in jle pop clc pop (bad) mov out std add mov jecxz call (bad) sti push pop (bad) push dec jg cli out std movd dec incl jmp pop (bad) pop mov decb sti aaa push (bad) cli psubb aas jl aas lods jmp sti test aad (bad) das stc sbb (bad) (bad) jmp (bad) in clc paddd mov stc dec jle fildll idiv sti decl pop lock stos out sub fistp fwait std loope lret or leave out (bad) mov (bad) xor rorl outsb inc pop cmc (bad) add scas repnz clc xlat jp,pt jmp in xchg aas sti out (bad) xchg call cmc paddw mov pop jg insl (bad) repnz aas pop (bad) jle in pop cmc (bad) (bad) jle jmp dec jmp out sti (bad) decb in pop decb cld cmp xlat lahf (bad) mov fdivr out mov mov jg aas call (bad) lods aas in pop cld mov aas repz mov aas jg outsl cli outsl jg lahf sar repz inc (bad) cltd mov jg jp scas jmp mov dec (bad) xchg xlat mov (bad) movsl movsb aas (bad) mov in outsl stc dec (bad) pushf mov daa jg fstpt out jg std in cld jmp pop rep sti outsl sub stc jmp (bad) mov divb cmpsb (bad) iret pushl rcrl adc fildll pop push (bad) neg clc arpl (bad) mov push lcall (bad) mov xchg mov cmpsb inc das cwtl jmp jg aas icebp (bad) div jg repnz scas repz (bad) lcall dec jg das das jle pushf hlt iret pop sti das std sar ret fildll sarl (bad) (bad) (bad) outsb stc mov mov mov pop movsb cld out jg scas cld sahf jmp lahf jnp daa xchg (bad) mov jle jge std cltd mov insl jle pop dec jmp (bad) mov dec sti mov cli and aaa lahf out sahf inc mov stos aas xchg repnz out jl (bad) xlat mov push jg dec (bad) fsubp ja out imul xor dec fdivrp out (bad) (bad) xchg jg (bad) js pop call call lcall fwait dec lahf cld aaa jg outsl lock int repnz (bad) sarb (bad) sahf mov xlat fidivr fucomip repz stc lahf dec cli jmp stc shrl jg (bad) cmpsl cld pop inc das pop std xor cld mov in mov xchg mov sub std jg icebp pop clc xchg jg pop negl (bad) fldt rcrl movsb jg repnz pop lahf ljmp jmp mov ret call (bad) scas std in jg pop out cmc out lock loop (bad) outsl incl out cli test call sarl jle inc cld jge jmp clc lahf std ss (bad) mov clc mov out cli pop mov jg (bad) pop addr16 out icebp mov outsb cli paddd lret jmp lahf cmp cld cmpsl jg pop mov out iret cld sbb icebp stc out sti cmpsl (bad) idivl aas in (bad) out mov into mov std andl mov pop mov decb jg aas stc aas (bad) mov test aas cli pop cld into mov std in (bad) pop (bad) push mov (bad) cli mov iret mov rcr loope xchg (bad) cld mov mov std xor pop (bad) xchg out (bad) mov outsl jg jmp stc aaa pushl jae jg stc aas mov decl stc outsl cmpsl (bad) std lcall mov pop push jg jmp cmc lahf std fnstsw cld lds (bad) (bad) pop jg mov push jmp inc lcall fistpll pop mov mov sti mov (bad) pop jmp (bad) out fcompp jns outsl (bad) imul fstps clc addr16 icebp jg pop incb mov out cld cmpsl jg (bad) iret cld xchg call xchg iret fcompl pop std (bad) ja out std daa jmp aas in mov sti pop hlt fwait int3 (bad) xchg fcomip rep je fistpll std (bad) cld paddd mov (bad) lcall lods jg idiv sub pop clc in lret (bad) mov daa jmp outsl negb cmpsl jg pop std pop out cld lds scas imul out clc pop inc aas xor dec jle pop lcall xchg inc jg (bad) outsl repnz inc (bad) xor (bad) cmc dec cld stos pushl (bad) pushl mov (bad) (bad) in jg mov das (bad) sti pop mov cld cmp cmp push pop std out jg xchg pop (bad) out decl sti das xlat jecxz out and imul leave pop sti iret (bad) xor ja (bad) ljmp mov fnop loop mov jg (bad) push call (bad) in hlt popf jmp aas sti insl jle outsl std cmp ds inc jle std mov pop (bad) imul lahf push cld stc mov (bad) jg aas imul mov (bad) fstps icebp (bad) (bad) ljmp jle pushl sub fnstsw push lahf jmp negl (bad) fwait mov movsb outsl std in push xlat std cmpsl (bad) fsubrs cld xlat jg pop out hlt push lods mov (bad) stc mov mov repz xor (bad) daa (bad) out int3 pop ljmp mov std jno loope sti dec cmp fnstsw mov (bad) cld jg cmp aas jle into outsl stc aas jmp repz lahf es ljmp cli fnstsw aas xchg loop fucomip aas std aad pop fwait aas in dec (bad) in scas std (bad) (bad) pop jg jg lahf lahf mov jmp (bad) mov repz cld aas incb (bad) mov jmp jae leave (bad) pop mov stos jg dec nop std cli fcmovne cs aas jg aas repz clc cmc (bad) std xor jmp std mov xchg aas stc jae xchg (bad) (bad) das pop out jle (bad) (bad) out cld xchg dec push mov fcomip xlat stc push pop pushl mov pop idivb imull (bad) ljmp fdivr fdivp stc lahf std cmpsl std adc jmp sbb out fcomip cmp push lds cli mov cmp into in cld pop (bad) sti fnop icebp fcomip aaa std push push into (bad) in sti cld iret cli cmp scas std (bad) dec mov call mov in mov rcrl sti imul mov mov aas (bad) ds cli mov lahf cld jno fdivr movsl mov in cld push outsl pushl jle jg ror jg mov (bad) inc sarl cmc aaa (bad) in lahf sti clc hlt (bad) decl jecxz sti fisttp idivl cld dec std xor lahf fsubp cld notl fbld stc iret pushl jnp mov adc jg int daa mov jg dec jg mov arpl mov mov pop cmp lret call pop hlt out pushl pop (bad) xchg (bad) imul out jae icebp fistpll lahf std xor (bad) mov std xor leave outsl cmc leave dec push (bad) out mov mov pop mov leave mov xchg inc jg outsl clc lret jg pop xor (bad) int clc std fist lahf lret (bad) mov std (bad) jns aaa cld lea mov daa jle mov repnz (bad) aam loopne sti int (bad) jle xchg mov mov jae jg pop jg out icebp dec push jmp (bad) sti mov sahf (bad) clc pop cmc addr16 fdivr jmp enter std cmp in pop mul aas cli pop push (bad) lods loopne std push lahf (bad) insl mov jg fcomip fistpll sti (bad) (bad) pop jge jmp jns das (bad) (bad) repz hlt stos out cld ret (bad) jg (bad) (bad) les clc push std movsl out jg jg movsl clc jmp jecxz stc xchg fnsetpm(287 adc iret (bad) lahf jnp mov mov out idiv add mov pop std pop jg outsl (bad) jmp cli test out jg out cmpsb (bad) (bad) jmp push jmp repnz cld xchg hlt cld ficomp outsl jg (bad) out psubq lock in cld xchg jg icebp push cmpsl mov jle cmpsl lahf into jg fistp cld dec sar xlat pop cmc pop lods push (bad) mov inc (bad) cld daa xchg (bad) clc xchg cld jnp jmp xor outsl cld (bad) cld insl jg mov iret pushl (bad) jg jge into aas lock mov out cltd movl movsl jg outsl cld jmp pop (bad) xor decl xlat pop repnz pop nop push dec std push jmp pop dec (bad) sti lahf stc imul jg lahf cli out jg outsl std lds cmpsl std sub std pop repnz pop std dec fidivr jmp outsl std icebp mov jg fucomip rcr jmp (bad) mov pop mov decb fistpll sti stc outsl cli lock std (bad) lods pop repz mov ljmp stos incl aas stc mov scas scas (bad) (bad) xor out std mov lods jmp fucomip mov jnp mov (bad) lods aas out lds ljmp ss (bad) mov jg (bad) (bad) jg std insl cmpsl lahf push cld hlt (bad) in (bad) cmp sti (bad) ljmp jle fildll (bad) (bad) ljmp (bad) sti mov add dec (bad) shl jmp aas mov repz ja pop jle cmp inc sarl jmp mov cld (bad) lret (bad) mov call pop cmc sbb jnp shrb and mov mov jg mov hlt (bad) (bad) or mov out ja mov neg idiv clc fbstp pop std paddd (bad) mov dec (bad) (bad) fbstp out mov ret scas repz iret push (bad) xchg mov (bad) call repz lcall fistpll out mov stc sti leave mov ret aas (bad) or test std imul lahf cli pop dec jle leave (bad) loop jg pop sti mov aad (bad) in push in icebp jl cli mov inc mov mov idivl fbstp out adc cmc sti push mov sti lahf jg (bad) out cli fistpll pop cmp mov divb jge test cli pop stc lods mov jg out mov repz dec jmp mov (bad) lods gs xchg cld iret jg lahf (bad) paddd mov decl std (bad) xlat mov push in mov fdivr call sub int3 mov jg pop cli in mov clc (bad) lcall jg (bad) jne (bad) mov xchg mov ljmp int3 ljmp repz fdiv pop cld jmp inc jg pop clc mov mov lret iret cld xorl dec sarb cmc pop and jmp (bad) mov call aas out (bad) (bad) lcall fbstp lock cmc lahf std ss jg out (bad) push jg icebp adc idiv mov stc pop (bad) mov (bad) cli sar sarb popa das push mov (bad) (bad) cli xor pushl pop mov jo out stc mov push or ficom (bad) outsl mov (bad) push inc (bad) out sti call mov cmp fnop idiv sbb sarl lock lcall (bad) mov popf jg pop (bad) cld fnstcw testl repnz call (bad) (bad) jg outsl icebp movswl shrl lcall repz decb leave (bad) pop jg daa jg pop divb fwait (bad) clc (bad) mov aaa cld out mov jl sti cld or jecxz cli jge cmpsl (bad) jns in jmp jg repnz (bad) in ja sbb cld pop jg pop idiv iret lds cld hlt outsl cmpsb stc sti in out lahf (bad) jl aaa fs aas neg pushl icebp ret fcomip aaa decb (bad) out lahf cld jg sar out fdivr cmpsb nop mov (bad) fdivrs std aaa cmp xchg xchg mov (bad) jnp (bad) (bad) sbb (bad) stc jg mov jg mov aas (bad) jnp (bad) jmp test (bad) call mov jle cld aad idiv pop decb std mov in bnd (bad) repz idivl out (bad) call incl (bad) stc lahf std (bad) mov fucomip divl cld jg,pt push aaa std mov jle pop div cld ret jmp loopne stc pop jg pop std mov mov mov sti mov stc jmp xlat clc cmpsl pop push (bad) std aas sti push mov pop inc (bad) call inc jg stos in aas cld (bad) cld mov icebp (bad) jmp imul aas repz popf jmp outsl (bad) in (bad) jns daa cld xchg (bad) jge mov lods aas in ljmp cli push (bad) and fcomip lahf cmp fisttpll jecxz cld popa call aas hlt mov add jg push pop std (bad) stos push das cld cmp addr16 jne loopne dec jmp mov cld jns fcomps sti (bad) decl ljmp ljmp pop jmp clc movq aas clc fwait call fucomip pop cmp sarl xchg jg aas std cmp jg rcl jg into scas std pop (bad) (bad) mov push aas decb sarb jnp cld ret out sbb pop (bad) out clc repz idivb xchg std in call push mov hlt mov ja in (bad) (bad) (bad) cld out daa daa jg pop (bad) fstpt sti (bad) jmp icebp int stc xchg mov jg popf (bad) pop jmp pop std xlat cld inc mov jg (bad) in mov popf out aad idivl div cld in pop (bad) ljmp cli jnp mov cmc out add jg icebp repz idiv out not cld addr16 jg pop (bad) ficoml sti mov out cld (bad) pop lret jg (bad) fbstp out ljmp hlt fcomip (bad) std fistp sti xor mov fucomip int clc mov jns xlat out cli outsl (bad) movsl in cld inc fnstcw out xchg (bad) dec (bad) mov mov (bad) cld and (bad) xchg (bad) (bad) (bad) std dec ljmp cmc aaa mov pop jg (bad) cmpsl (bad) jns mov pop ljmp out (bad) pop clc xchg lcall xlat (bad) pop xchg jg (bad) std mov mov std ss lods sahf std jae std repz jg ja lcall (bad) outsl stc pop std jno out std push (bad) add mov (bad) mov cltd mov jg sub (bad) mov iret sti repz scas fucomip scas cld stos (bad) mov sti das incb fwait (bad) (bad) lahf daa jmp cmpsl jle sar std out push aas repz xlat in xor (bad) das std das incb pop mov (bad) jmp (bad) xchg mov cli idiv xchg jg jg aaa std push call ljmp inc inc aas in cld xor dec repnz data16 pushl pushf std mov inc (bad) mov xlat cld cltd aas (bad) lahf cld sar leave pop cmc loopne mov stc sbb repnz (bad) cmc jg pop repz cli decl jg fcomip sti std inc fistpll stc aaa dec (bad) cld sub mov scas dec stc mov in pop cld cmp std add lahf jg jg mov (bad) cmc pop repnz aas stc daa ljmp cld out imulb adc pushl int repnz (bad) test jmp cld cmpsl incb (bad) jg imulb cmpsb (bad) jg mov jg cmpsl push (bad) fcomps cli in xor std icebp jg mov pop incl mov pmaddwd inc jae negl incb out pushf pop lock std inc mov jg cmc cmp xlat inc out idiv pushl pop jg imul call (bad) inc pop idivb std aas rcrl fucomip lahf stc adc (bad) mov in loop std inc outsl jle jg sti mov psubd jmp aas loopne mov (bad) mov (bad) bnd jne rcrl incl jle negb jl ja cmp mov pop jge imul xor jg pop lock (bad) jmp int mov (bad) lret std imul aas in icebp outsl dec cld sti daa jge ds std pop cmp sti mov jg clc icebp (bad) clc outsl jle jg idivl std ja (bad) std jns aas fxch jg jg (bad) (bad) mov std incb pop std add pop (bad) dec scas jge jg std mov stos (bad) push std fwait mov aaa sti pop pop jg xlat (bad) idiv shr cli xlat (bad) push call dec std clc outsl sti pop mov (bad) jle fucomip pop (bad) jbe es (bad) sti cmpsl lahf inc mov (bad) ficompl (bad) paddd sti pop jge sub repnz push jmp scas es repz rcr xor (bad) hlt xlat loop (bad) out dec cmpsl lahf (bad) loope (bad) fbstp xchg in decl (bad) jg jecxz call fstpt clc daa pushl pop mov jl std aas (bad) out jg mov popf mov pop jg jg xlat sti (bad) (bad) mulb int3 fstps sti mov int out xchg out inc (bad) stc sub fnstsw pop cli xlat jg pop clc or mov incb fwait idivb pop repz shrl jle mov (bad) iret sbb xor pop repz ljmp sti popf fistpll in paddd (bad) xchg aaa inc jg scas xor std icebp jg idivl mov jns in clc pop cld movq outsl std xchg dec call arpl (bad) inc jg imull jg mov jmp scas and pop std sarl out jg pop cmc mov pop cli (bad) cmpsl jg outsl stc aas (bad) mov jnp aad (bad) jp mov decl cmp or mov not outsl or lods mov cli rcr repnz clc mov (bad) stc mov test pop cld imul aas std (bad) inc jg out repz xor fisubr pop mov mov addr16 popa aas (bad) sub push add icebp arpl cld aaa jl repz call ljmp clc pop sti inc (bad) repnz cli pop std lea jg mov ljmp std (bad) lahf lcall mov imull out lock std mov xchg outsl push lcall and fnstsw call inc std mov mov mov xchg (bad) not jg loope je out mov cli sbb (bad) jg jmp cld imul incb (bad) mov loope fwait jmp (bad) xor (bad) mov mov fmull movsl (bad) std pop jns pop cld push stos fcomip out movsb (bad) mov ss aas stc xlat cld addr16 pop clc push ds lcall lahf ja not std pop mov jge lret jmp clc aas std jge (bad) mov fs sti in push jmp clc scas inc stc das jp clc (bad) std (bad) jg (bad) jmp mov mov jle xlat fs iret dec jg xlat decl lahf jle pop cmc cmp stc jg dec dec pop cmp in scas icebp out pop cmp repz loop (bad) aad repnz sti aaa std sar loopne cmpsb cld in aad mov jbe out repnz fucomip mov scas sub lock cld loope cmc loop mov aad lock (bad) dec pop jecxz cltd (bad) xchg out idiv jbe aaa incb xlat scas (bad) stos ds rorl cld testb jmp xchg in in (bad) fwait jg in jg mov aad into aas lock scas inc repz out std int std mov (bad) arpl mov clc das cld mov xor das (bad) out cld (bad) jg (bad) mov cli xchg (bad) stc out lock xchg pop std xor in iret cli into lahf incl push mov std idiv mov push stos jle (bad) (bad) pop (bad) mov sti cmp dec mov lahf stc and jg push cld in cld push mov inc sub and cmp inc (bad) mov call cmpsl lcall jg jg dec sti lret dec jmp mov mov mul icebp lcall jecxz lds dec iret pushf cld out in std jnp in repnz inc push lahf std int3 pop bnd stc mov aaa stc in jle jg outsl decl jle jg mov imul jmp (bad) ja loope ds shrd std sarb out std outsl xchg (bad) fidivr cmc adc mov sbb jg lret (bad) sahf aas (bad) clc in cld sar or leave das and std jbe icebp (bad) mov xlat das sub pop call mov out dec jmp lret call mov (bad) pop (bad) sti scas cld jmp mov mov mov test clc aad negl mov daa mov cld fcomip paddw arpl stc out cld pop dec mul in (bad) out jle fild cld jecxz inc cmc xchg mul (bad) jmp xlat push fs mov (bad) dec inc jg jg mov (bad) aas (bad) mov hlt scas cli inc mov repz out dec jmp loope out (bad) jns iret es stc ja push std pop jg fcomip pop ljmp inc cld arpl clc repz fucomip ja daa (bad) out mov pop (bad) aas push cld aad ja test lahf fdivrl cmpl pop stc add idiv mov out pop lcall sti mov mov jb sti (bad) arpl jg decl popa stc sti (bad) mov aas loope mov cld das sub push pop mov fucomip mov mov cmp lcall nop cld (bad) sub xchg aas cld (bad) std push fist idivb std sub xlat (bad) sbb xchg (bad) pop inc (bad) (bad) cld lods push fidivr stc mov jg jg (bad) sti dec (bad) mov out enter (bad) ljmp incb mov std (bad) ljmp (bad) mov dec cld not (bad) fcomp clc fstpt jg repnz jg stc out jg clc mov aas jmp outsl add (bad) mov out imull pop std std dec (bad) std push jg out hlt sti cld cmc jg idivb stc das stc adc call fwait jle aas cli ja and lcall mov (bad) decl lahf cld or jg pop push jg mov lret (bad) mov leave out (bad) mov repz cli adc fdivrs jle mov (bad) jmp (bad) fsubr cli fwait and je in dec stc mov repz lods aas mov aas jnp mov mov hlt xchg std cmpsl jg fcomip out adc cld cli jmp std daa sub xchg aas sti scas cld mov cmpsb mov (bad) rcrb aaa cli ja repz aas stc pop jg scas (bad) movsb mov decl mov jmp cwtl std sbb lret aaa cld or cmp iret das (bad) test in fbld adc jmp fmull jmp dec aad std xchg daa (bad) cld out repnz (bad) (bad) loopne lcall std es std out sti pop cld pop inc mov cmp jg daa cld xchg mov lcall cld xlat mov fcomip pop cld sbb stc jg stc xchg aas in out cmc daa cld mov lahf jg das mov repnz (bad) fstpl (bad) in mov loope fwait (bad) out dec dec fcomip (bad) (bad) rcr in std xor pop push jg das cli aas decl aas inc daa call das cmpsb cld das leave out pop repz cld cmp pop jg mov jge out fistpl push pop inc lahf cld jle (bad) mov pop lcall stos fucomp movsl inc (bad) cmp lds (bad) sbb shrl ljmp out out icebp aas jg cmp push call mov mov dec out cld aaa jg icebp lret pop repz lcall jle icebp scas call stc out mov divb cli dec jg cmpl pop (bad) loope lret (bad) mov (bad) cmc mov std std pop std shrb sbb push (bad) jecxz fcomip (bad) lcall xlat inc das ljmp imul mov cld cmpsl mov jmp ret push (bad) cld lahf jle pop cmc cmpl pop cli pop jg cld ret push dec jmp pop jmp out (bad) mov mov pushl sarb cli jg ljmp mov sbb out jnp in lock das cli jecxz lret fucomip call hlt ret (bad) mov aas (bad) dec cld or (bad) cli out pushl jg scas repz xlat jg (bad) std mov cli lahf fwait mov (bad) mov out sti das (bad) fstpt ja fwait dec mov lret (bad) fcmovnu xchg scas (bad) mov cli scas clc sbbl inc cli pop std (bad) mov iret jg out sti pop sahf std mov jecxz lock iret std lahf (bad) popf fildll sarl out dec sahf std jp out (bad) xlat cli (bad) aas hlt mov aaa clc pop (bad) stc aas cli paddw sahf (bad) (bad) repnz sti cld aas (bad) mov ljmp std push mov jg push iret dec fcomip mov fwait jmp sti std jmp hlt in mov mov cmpsl pushl jnp fcmove jle out loop std out (bad) mov (bad) dec jmp std test fcomip (bad) neg std mov aas loope stc pop daa mov jge cmp lcall icebp pop (bad) mov (bad) decb pop (bad) out pop mov scas jl (bad) sar std pop push out jne or pop jmp sti pop (bad) adc aas divl cmpsb mov mov loop loop (bad) in pop idiv mov out ljmp in jnp fnstsw stc stc sub xchg pop cld xchg cld hlt jg cld jmp inc inc jg cld mov jg cmp (bad) mov lods aas lods fsincos fstpt hlt scas stc outsl out cld mov hlt fwait incl stc adc out jle jmp mov jmp jg jg js daa cld addr16 aas in insb mov test mov std call mov and xlat cld add mov jecxz cli in aas stc cmp jmp imul push push (bad) repnz fdivr out mov popf lret jg mov inc (bad) cmp incl std xchg in cld in jg scas ja aas (bad) inc jg (bad) std test (bad) mov repnz inc cld (bad) mov (bad) cmpsb (bad) cli outsl aas (bad) fwait ljmp int mov ljmp pop lock (bad) nop sti mov push (bad) stc cmp iret jg mov or out (bad) dec sahf incb jmp (bad) std aas xchg in out stc jmp shr out cld mov incl sti jmp addr16 das sti test (bad) push or (bad) jg pop jl pop (bad) stc int cmc daa dec jmp in clc pop pushl ds test jmp pop mov decl mov mov hlt jg scas aas (bad) sti pop jmp incl out out inc outsl push mov out sarl jecxz mov jg (bad) pop dec jmp mov stc fistp and inc (bad) mov repz push out (bad) idivb lock inc mov dec fstpt lret repz stc out (bad) in dec aas repz jg (bad) mov fistpll repnz jmp inc pushf call jmp loop cs push xchg std stos jg std out std add pop (bad) addr16 sti mov xchg cld jle (bad) (bad) scas cld dec mov jg pop jmp imull push pop cld (bad) cmc out cli scas jmp push mov iret call mov lcall or (bad) pushl div mov out outsl idivl add (bad) xchg cld std xor cld div (bad) scas aas jmp popf fdivrp call (bad) mov cmp stc (bad) stc (bad) out jmp mov (bad) rorl mov mov jg out cld (bad) sub jg std cli mov std adc pushf in ja sub pop sti clc ja dec (bad) ljmp jno lahf jg aas negb mov cli fsts cli decl jle mov jg jg xchg mov cmp icebp (bad) std mov aas stc adc jg ljmp cld mov aas cld std jmp push rorl std inc pop ljmp mov iret jg int aas repnz fwait inc out repnz dec (bad) (bad) out hlt cmpsl std xchg addr16 push jg (bad) mov ljmp xlat (bad) and insb cld xlat lahf pushf std sub jl stc out pop cli inc dec xor mov int fldt jmp mov into jg dec idivl fnstsw notl jmp (bad) in push (bad) mov fldcw lock cli int mov jmp pushl jg pop stc mov int imull int aad cld inc pushl (bad) jmp xlat mov inc cld add fwait decl les cli addr16 nop aas jmp pop jecxz aas call (bad) (bad) ja std aas pop std mov std mov (bad) aas jp imul in repnz std aad jg pop xor sub pop (bad) mov jp repnz fdivrp mov cld sub cld inc (bad) test (bad) jmp (bad) outsb jmp std fisubr lock das cld add cli loop clc pop jmp clc mov lret popl loopne mov jg mov jg outsl icebp lock jg fistpll lock repz repz fnstsw jg lahf (bad) fidivrl es lahf jnp leave lds idiv icebp jg (bad) in idiv cmp fdivr jmp movsl cmc xchg outsl std push lahf std xchg jg out inc jmp push vmaxsd stc inc decl xchg mov sti mov mov jecxz cld das jge (bad) dec pop (bad) popf (bad) out sti jg out cld inc call fwait dec jle in sti outsl jmp rcr mov (bad) clc paddd jg outsl (bad) xlat addr16 fcompl clc sbb stc fstpt outsl std ss daa jg (bad) dec lcall out pop jmp movq aas cli inc shrl jg jg dec cli sbb out cli (bad) jle push pop cli jge shl psubq call repnz mov scas (bad) loopne repz stc arpl lock mov es lahf repnz (bad) fidivr idiv sahf jmp mov scas aas cli fisttp cli into outsl js (bad) cld xor mov cmp cli mov out (bad) (bad) rcl jg outsl (bad) gs mov jecxz jmp cs stc adc clc pop sbb ljmp mov jg cmpsl jg (bad) stc out xlat lcall in mov cld (bad) jle lcall push hlt jg mul std hlt lahf icebp out call jmp lahf stc jae hlt addr16 cld sarl divl sbb mov mov push mov jg fcomip fistpll ret cli cli scas incb out cli cmc dec lahf cld or jg mov repnz stc scas call into out sti sti ljmp jecxz (bad) (bad) cmc mov mov lods jle xlat clc repz xchg inc jg mov fistpll push xchg cld imul (bad) cmp (bad) cld ja sti in mov cmp das cld (bad) fcomip cmp cltd jg mov jge (bad) jmp pop std xor jle aas jmp ljmp (bad) mov cld adc push loopne jg ljmp repnz cli clc das sub aas out lds icebp xchg jne shr stc (bad) jge sarb cld dec ja xchg std aas repz stc sar cltd cmp push out fidivr outsl (bad) dec jg psubq idiv lret ljmp inc inc jg out mov jg cmp sub mov mov ds xchg mov xlat stc cmp into (bad) (bad) decl jg lahf divb sub cltd call mov cli jg jg jg stc fnop out ds fbstp pop cld out iret lcall sti mov sbb lds cld in mov fimul (bad) mov jmp jl pop cli out mov cmc mov aas repz (bad) out cld int enter cld scas dec aas cmc (bad) sbb lahf inc pop (bad) std outsl idiv ja addr16 mov jbe aas std sbb out repnz std addr16 in mov lahf (bad) scas mov (bad) jg paddd (bad) cmc aas icebp outsl imul dec outsl (bad) mov (bad) jg out hlt lret push std mov out inc jg mov jmp out stc pop cld mov in sti or (bad) stc pop (bad) cld decl stc push (bad) sti pop out xlat std (bad) jmp (bad) xlat cld pop push lahf repnz in dec pop jo mov (bad) stos fcomip push jmp (bad) out fwait (bad) jg lahf js cmpsl call int3 scas cld pop jmp out psubb sti jg mov call stos aas ja dec sti (bad) fcmovu std fnop in dec jp mov push (bad) pop dec xchg pop sti dec clc jnp repz clc into (bad) outsl icebp pop cld out jg aas cmc jmp imul outsl std sbb stc in pop (bad) pop push aas cmc mov std pop stc mov movq (bad) out clc jnp lret mov (bad) jg fnop (bad) cld (bad) rcrb negl decb ficomp pop std dec jg dec jmp lret pop std call std sarl (bad) xor jle jg (bad) cmc cmpsl cld test aas repz and cli aas in clc xchg lcall outsl sahf call jg pop pushl cld jmp fnstsw dec jmp cld aaa (bad) aaa (bad) xchg (bad) incb jg inc jg aas repz cld repz (bad) ja loope (bad) clc lahf icebp cld lahf cltd cld cli jg fcomip movswl pop (bad) in jmp mov cld test mov jle aas in mov mov pushl mov lahf stc fwait call loop icebp pop sti aaa jg mov fstpt out dec pushf cld jns lret xchg cld in cli mov fdivrl jmp test out stc out mov xchg cld (bad) jg (bad) mov pop push into loope cmc jmp inc jmp ljmp fwait decb repz (bad) pop clc xlat jl ljmp sti pop repnz ds fistpll mov rcrl clc cmp ret daa (bad) mov repz ja xchg inc jle mov push mov std cmp pop xor mov jg jg xchg mov sbb pushf std mov sub jmp lods jle aas cli out pop cmc xlat inc (bad) dec fidivr pop xor xchg (bad) mov repnz js repz sbb sbb lock stc out lahf clc mov pushl cli lahf decl jl out std jmp add sbb jmp jg call (bad) loopne sti sub xchg cld addr16 cld aam (bad) repnz jl jecxz js out xor (bad) cmc jg imul stc leave aas repnz (bad) pop out jle jg addr16 push xchg (bad) cli pop incl jg (bad) neg es icebp (bad) (bad) fistpll cmp (bad) leave (bad) fwait (bad) aas cli xchg jg aas icebp idiv inc (bad) stc mov aam imul (bad) fidivr clc iret cld mov call std push (bad) incl push clc dec jg cld xlat clc xchg pop cmp (bad) incb fucomp mov call dec into jle dec aas clc imul imul lcall into pop icebp dec (bad) xchg aas loop js idivb (bad) mov decb cmc (bad) (bad) fdivrs or stc pop mov mov jg fldcw (bad) mov (bad) jmp jg pop std mov inc jg mov das incl aas pop std adc cld mov arpl mov (bad) clc shl fistpll dec (bad) stc inc mov sti call adc xchg mov (bad) jnp jg idiv mov (bad) (bad) push jmp arpl loop decb jmp std cmpsl in push adc cld push jg incl call aas std cmpsl (bad) jmp sarl incl mov ret fwait std dec (bad) jmp sbb stos aas out aas (bad) test icebp aaa std add leave out negb jbe lock std dec mov jg mov jle mov mov leave fnstsw iret clc (bad) call (bad) in cmp aas out mov fnstsw pop and repz cld stc mov outsl jle push dec cli scas scas jg std mov (bad) jg fstpt jb idiv hlt aas std cmpsl cld gs jg sti imul (bad) in iret jl ljmp dec stc xor cmpsb jg mov (bad) std and lret jbe jle pop out jl lret dec jg in jae cmc pop repnz push mov (bad) loopne (bad) mov (bad) xchg (bad) loope jg pop jmp inc aas jmp pushl pop lock jge imull lahf stc out lahf (bad) dec ds mov popf cld mov decb fstp out pop cmp call jmp loope aam icebp lahf std mov (bad) test rcrl mov (bad) fcmovnu sti xchg pop cld ja jecxz std insl jg (bad) clc xchg dec jle aas in out stc in cmp or outsl xor std pop ja idiv mov repz std call ljmp sbbb (bad) cld outsl xlat pop jg sarl (bad) (bad) fcmovnu mov call pop cmc mov out jg (bad) imul cmc daa inc pop cmc xchg cld ds (bad) negb cli mov pop scas aas (bad) (bad) mov paddw std and outsl repz jge lahf cli (bad) fcmovb mov outsl std jmp ret repnz jmp mov out (bad) pop incb into lahf notl in rcrl pop lahf cmp fnstsw pop clc repz cwtl fucomip lret outsl dec jg lahf idivl stc xlat jle mov jle (bad) ljmp push call jg scas sti lods fucomip mov iret ljmp lret (bad) std aas call std mov rolb std inc mov aaa (bad) jno loop (bad) pop (bad) aas xchg cmp mov cmc scas std push jg pushl xor (bad) repnz cld lds (bad) hlt aas jmp jp sti cld mov pusha sti (bad) stc cmpsl (bad) call fistpll (bad) (bad) xor (bad) scas repz cli mov mov xchg sarl jle pop clc pop cmp hlt (bad) std outsl clc lahf decl repz incl std pop sbb fadds rcr icebp aas std ljmp std push dec out std cli ja std mov mov fmuls mov (bad) (bad) lcall (bad) loope (bad) clc (bad) mov call xchg (bad) clc pop fsincos jne cwtl pop (bad) fcmovnu pop sti xlat jl pop cmp sysexit dec repz jg outsl (bad) hlt pop jnp popf orl jg (bad) ljmp (bad) in sti mov dec incb (bad) sti aas (bad) (bad) repnz out push xchg (bad) jg jg xchg pop call lahf idiv decb mov pop sbb jg out das cld cmp sarl mulb (bad) (bad) (bad) jg dec (bad) mov pop stc addr16 paddd fnstsw fcomip out mov cmc pop std push push idivl push lcall icebp aas sti aas jle (bad) ja cli in jle aas icebp jnp arpl mov std mov jns idiv outsb jg mov lahf stc out dec xchg (bad) clc adc stc jmp aaa (bad) jmp xchg out std insl out jl cmp (bad) arpl jg std pop cld ret jg scas jae mov out outsl sti pop (bad) cld fucomip mov leave mov std mov xchg jg out sti pop (bad) scas pop lock fnstsw ja jae movsl lahf sub xchg div jmp jmp jecxz neg cld add (bad) pop mov test (bad) ret lcall (bad) ds xchg jg repz jae jle dec (bad) out pop push (bad) loope sti sbb mov out pop cld xchg mov cmc scas (bad) sub mov sbb (bad) jge xchg aas mul (bad) aaa inc mov (bad) (bad) ja pushl out lret jae std imul (bad) in aas clc fwait std insl mov ret lahf clc jnp jg das cld outsb (bad) std insb xor mov icebp das decb call jg mov xchg mov pop sti sbb jecxz xchg in mov mov in (bad) repz xlat mov sbb mov (bad) jg mov lods jg sti psubd call jg out in (bad) fistpll cmpsl jg jg (bad) jge mov dec jle aas ljmp (bad) repnz fnstcw out std fwait in idivb jle jg aaa stc add aad sar jne (bad) outsl cld or (bad) jg in ljmp icebp sti (bad) fidivrl lahf (bad) fadds (bad) dec cld addr16 das sub lret xorl dec jg idiv xlat leave jg ja fucomip dec (bad) pop mov mov aas in sti xor jg in (bad) mov out lahf (bad) adc out xchg decl pop (bad) mov lahf cld adc in jle lahf push (bad) xchg mov xchg cld movsl jmp lahf idivl or lcall aas repz movq incl inc jg jg movsl adc (bad) std imull fcomip dec clc cld xchg cld jno jle mov std adc cld sbb jle (bad) mov inc (bad) xchg std xor mov pop cli mov xor addr16 xor mov jmp mov hlt cmp (bad) aas (bad) jne ret mov mov pop std imul movsl aad mov movaps jle mov aas repz jb decb or fwait cld addr16 pop cli fildll lahf ds ja cs out out rcrl jmp cli (bad) (bad) aas (bad) std jle push pop cld push jmp out lock std fwait stc mov cmpsb (bad) (bad) cld scas sub xchg cld outsb jmp (bad) std sbb pop push cld decb in (bad) cld sub mov stc jge jle jmp jmp icebp xchg std (bad) call pop divl cld mov decb (bad) call jmp mov (bad) mov push inc pop hlt addr16 mov jg cli jmp incb pop (bad) mov mov sar jno lock sti in pop js daa incb mov sahf (bad) sbb mov insb (bad) addr16 push aas in (bad) gs cmc push std xchg (bad) std imul lods mov out sbb or sti add pushl ficomp (bad) fnstsw icebp dec cmc lods lahf stc add repz dec (bad) (bad) (bad) in (bad) jge,pt sbb xor pop out lock pushl std aad hlt pop cmc mov cmpsl mov jg aas std aaa (bad) mov out cld imulb dec out jg push std fstps das clc shr std pop stc mov fdivrl sti ja (bad) imul sti mov pop cmpsb cmc iret daa jg mov push pop cld (bad) popf aas cmc dec stc cmp clc movsl mov std push jg out (bad) mov pop jle pop sti cmp xlat clc (bad) mov pop mov cmpsl call mov sti dec cld mov pop (bad) stos dec fistp idivl jmp test out (bad) mov imull (bad) push jg scas js daa cld addr16 cli mov lock pop clc daa decl (bad) shr (bad) sub std imul dec (bad) sarb repz jnp (bad) push (bad) (bad) dec sti inc (bad) cld lahf hlt aas cld idivl icebp jmp pop call push mov decb push incb incl xchg dec inc fucomip int decb cld jns xlat out hlt push (bad) jmp mov mov fdivrp fdivrs std out (bad) stos sti jg addr16 (bad) jecxz cli out fldenv (bad) stc pop (bad) jnp mov add scas jg jg mov aas dec jmp jg scas cmc sbb dec mov pop jle call jecxz cld daa (bad) rcrb pop (bad) fsubrp (bad) dec dec jle neg decb clc (bad) (bad) idivl cmp (bad) (bad) lahf stc (bad) les hlt cld mov loop (bad) scas addr16 std insl (bad) cld pop jecxz clc aas jmp decl and clc pop std sub (bad) std or pop out pop clc lret jle fstpt idiv test cmp clc adc mov (bad) cmpsb inc mov pushl fistpll std lods stc (bad) jg scas sti sbb loop mov idivl push dec fcomip (bad) sub (bad) (bad) pop cmp jnp icebp mov xlat jnp or out das cli dec (bad) mov repnz sti out xchg lahf cld (bad) call push inc std (bad) rcr addr16 scas fistp jg idiv outsl mov repnz (bad) mov mov std jmp (bad) xlat incb mov insl jle (bad) in pop cli or neg sti (bad) clc xlat pushl aas (bad) pop incb cld addr16 pop (bad) (bad) (bad) idiv lahf mov sti xlat (bad) push mov incl cld adc jecxz loopne cld mov hlt lds sub das jg jg out clc in les addr16 push (bad) jmp jnp (bad) jne call mov out mov out repnz std adc stc psubd mov paddw (bad) out lods sahf (bad) adc call mov in cli out std iret lcall mov sahf std mov cli (bad) in jg iret jle (bad) mov (bad) (bad) fcomp mov jg jnp mov outsb sarl pushl (bad) (bad) jecxz jg (bad) ja pop (bad) jmp mov repz cli (bad) (bad) std adc fucomip mov mov lods inc jg ja loopne mov jmp stos (bad) cmpsl jle jg jg jecxz neg addr16 clc (bad) cld (bad) jle pop (bad) sti std pop jg (bad) idiv ljmp stc (bad) cli fwait cmpsb inc push ja mov (bad) fidivr lock (bad) jmp dec std cmp cmp out testb (bad) mov push inc repnz cld idivl std popf (bad) scas aas repz sti aas dec dec (bad) pop sti std imul lcall outsl jmp fcomip lcall std mov (bad) icebp or jg out sti int cmc jg jnp idivb pop idivb popa (bad) fldcw xlat mov jg out (bad) push sub xchg (bad) lcall fidivr aas cld jmp mov clc (bad) mov pop cli mov pop stc pop cmc fldt outsl std pop xchg ljmp out jmp ljmp divb and jg into aas cld sti std imul pop repz out sti xchg mov fdivr xor in (bad) idiv inc out jle jmp push push incl clc push (bad) jmp jl (bad) incl sar cli dec ljmp lahf repnz mov (bad) repnz mov fldcw jmp (bad) cld jg iret sti mov mov hlt mov call mov out push popf cld adc in cmp xchg jg jmp iret std dec jle mov or jg std std out std (bad) call lahf cli fwait jmp cli and mov iret jle dec (bad) in mov jmp mov call mov xchg push dec dec rcr repnz xchg cld (bad) push lahf (bad) dec ljmp sahf (bad) fnstsw loop sti ja popf jg repnz (bad) (bad) ljmp negb jge daa cld sbb pop js clc mov (bad) (bad) arpl lds mov and scas cli cmc (bad) out decl add ficomp aaa stc out mov mov cld jne fidivr aaa (bad) hlt jecxz repz mov (bad) jmp stos daa jg scas rep dec jg (bad) (bad) lahf std ss iret cli push jmp mov decl cmc (bad) cld ja leave lahf stc cmc ljmp popa (bad) jmp cli addr16 fistpll out repz std data16 lahf cli xlat cld movswl (bad) sub std popf (bad) xchg (bad) jmp stc lret mov sti aaa lcall xchg push jg das pop decb idivl jg cli ret lahf mov sti das (bad) mov std scas mov ja mov dec xchg fistpll js idiv mov lahf jb cli fwait call pop hlt (bad) std in in stos mov ljmp loop cld insl stos mov std out lock jecxz (bad) lahf lock std ss (bad) pop dec cli jnp stc mov std fucomip dec dec sahf std jae aad repnz arpl cltd and lret pop out std jecxz std stc pop (bad) mov (bad) fucomip pop (bad) ss pop repnz cld xchg jg repnz std aas incb sti xlat (bad) jmp dec cli jecxz pop std adc hlt lahf aaa jp addr16 imul push aas (bad) (bad) jg sub (bad) pusha aas (bad) mov (bad) call jle shl pop icebp out fsubrs call scas pop cs jg jne jecxz jmp mov fnstcw aas icebp jnp lds pop dec mov pop jmp fcomip jmp inc pop mov xchg and jg out repz std and jg (bad) jmp in icebp jg jg (bad) mov xchg fistp in mov aad std pop (bad) in stc fwait pop incb loop repz decl sbb stc das stc out out fdivrl incl push cli aad idivl (bad) mov pop idiv cld pop jg pop div fsubrl cli movaps clc pop (bad) movsl (bad) fsubrl loop daa stc incl rcrb cld push (bad) jmp mov (bad) jnp cmc ja jg lahf clc (bad) xor lret lahf decb jle dec cld ljmp out (bad) fcomip cmp movq aad sti hlt scas cld inc (bad) cltd daa jg jg xchg aam push cs das incl div jg mov mov inc jecxz call scas (bad) pop stc out mov cld call lods pop jg das (bad) idivl lahf neg (bad) and mov ja jg pop mov (bad) mov incl (bad) jnp loopne cli (bad) jge fbstp sti jnp cmp outsl sti sbb or (bad) std scas (bad) cli dec jg jg xor decl lret lcall repz jnp decb idivl lahf pop sar daa mov call fstp aas out xchg out (bad) aas lock jg lahf cld mov xchg fucomip xchg aas sti pop std cmp (bad) jg jg jnp fwait call out mov aas in scas cmp popf (bad) scas push cmpsl mov (bad) cli (bad) mov inc call lock scas cld sbbl fucomip fistpll inc lcall xlat stc movsb mov mov lds fwait (bad) mov iret std mov paddw decb xchg push dec push jg pop add (bad) jecxz repnz xchg cld ja lods mov xchg aas std jge sar sti dec std int lret aas std aaa jnp sbb sub hlt push icebp cli rcrl icebp in dec jle jg and mov pop std test lret ljmp aas (bad) repnz jg pop repnz div ja std out cld into jg aas sar int3 scas idivl pop lcall jg jg or mov dec push aas (bad) icebp pop cmc dec decb hlt das enter aas aas cld push push cmc decb call jmp idiv (bad) jg std mov std imul aaa ljmp popf pop jae (bad) sti outsl jg out cld lods hlt (bad) ja cmc imul (bad) fdivr popa sti fistp ss decb (bad) cld scas icebp sbb movsl lahf cld fldenv cld pop std sarl (bad) paddw jg pop call test popf (bad) scas jg pop inc in jg cli jmp decl xlat jg jmp sbb adc frstor (bad) sti ja cld (bad) clc psubq push in (bad) cmp scas (bad) aad (bad) pop mov out idiv ljmp out ljmp xchg aam cmp insl (bad) out jg aaa cltd std sarl idivb dec std into mov (bad) lock cli fcos testb jmp outsl hlt lock std clc iret sub in outsl ljmp jg pop cld std jg (bad) cli mov xchg pop out aaa cli mov xchg aas cld bswap ds xlat decb jg aas in std (bad) sahf repnz and jecxz incl pop std mov fisubr call aas call std imul (bad) call jecxz lock push cmp cld jmp cld mov mov cld mov inc daa mov decb jg mov incl mov jg sarl jmp rcrb cld int out pop testb mov out sti sub cld xlat stc insl jg aas std ja outsl (bad) sti jg idiv pop into (bad) cld (bad) jmp sti imul mov xor aaa sti ret (bad) xlat (bad) std iret lcall mov out jg push ret jle lahf cli add out divl sti add out test sbb iret cld lods mov push shr idivl scas (bad) sub (bad) aad clc jmp rcll pop cld mov repnz nop aas jecxz jmp decb xchg lahf cld icebp incb lret idivl dec (bad) jns (bad) ljmp out (bad) outsl jmp pop (bad) mov jge inc std idivb cmpsl pop (bad) (bad) decb repnz mov outsl pop call mov into mov lods stos jg pop clc mov fwait (bad) in out mov daa aas std popf (bad) in inc pop sti insl loop pop sti mov hlt out fcomip (bad) std stos call repz xor ds cmp lahf jns jmp es jg lret lahf stc or mov out lahf jbe arpl (bad) mov sti (bad) fwait mov pushl mov (bad) loopne out pushl icebp scas std mov fidivr jg out xor std jp icebp das ljmp (bad) lock mov cli lods jg das sti leave mov std xchg mov lcall repz sti lock jg paddd loopne mov mov stc pop jmp (bad) in mov jg pop cld out mov lret lds jmp jno das lods mov mov out std scas (bad) (bad) stos mov pop mov cwtl (bad) cmc xchg push lahf sti jnp sti pop decb jg aas loopne (bad) aad data16 (bad) mov std cmpsl mov out cli ja push mov mov stc jmp jg,pn loope mov cld out pop push aas hlt dec dec (bad) call jle repz ljmp sti jnp iret jnp out lahf sti imul inc jg (bad) jne sti pop clc outsl call dec lahf sti inc pushf (bad) std call loop sahf cld or std inc incl jg lahf stc pop push jg out cld cmp pop cli das (bad) fdivrp fstps clc out jecxz repz xchg inc mov jg out cld mov jg mov out sbb cli add ret loop mov outsl cld or cli aaa std mov (bad) fucomi repz jle int clc in idiv jbe mov lahf stc daa cld imul std loop stc sar scas cmc aas testb lret jg dec cld cmp jg push out jle jg xlat pop std imul hlt lcall (bad) push std pushl ja stos (bad) test outsl (bad) mov decb (bad) fstps (bad) std xchg cld cmpsl mov dec clc iret pop jge pop jge addr16 cld sar fsub mov iret xchg (bad) fldt (bad) xchg jle aaa stc idiv pop repnz (bad) aam std fistpll jecxz stc aas pop (bad) sarb daa decl cmp clc in jmp aas testb (bad) das jmp adc notl es (bad) cld xchg (bad) stc (bad) push bswap incb sti std sbb stos (bad) cld mov ljmp xchg (bad) mov mov out stc jg (bad) outsl push decb lahf es ljmp adc out jnp mov scas sti sbb xchg aas out sbb or jmp incl jmp sti incb (bad) in jg (bad) std mov fistpl addr16 mov repz inc lret (bad) das std (bad) push pop cmc outsl aam loop jmp cmp into pop std xor inc jg lahf notl jg mov test sbb xlat lret aas hlt xchg std (bad) lret aas insb cli xlat (bad) sbb cld fistpll cmc aas js rcrl jg fistp repnz (bad) pop stos mov (bad) jne ljmp (bad) daa insb incl mov jge out std mov pop mov cld lret jle (bad) stos (bad) std ja sub (bad) stc aas (bad) hlt idivl fs pop std paddd aas jmp cmp mov aas cmc pop repz decl xchg cld ljmp incl ds fwait jle icebp lahf cmp pop jg outsl stc pop std mov std mov leave mov aad (bad) out sti stos mov pop (bad) jp jo (bad) (bad) (bad) dec pop test lret jmp fldcw (bad) cld icebp ljmp jg (bad) mov call lods (bad) (bad) mov lahf cld jle loopne (bad) icebp aas in lock (bad) push std inc jmp mov fstp (bad) adc cmp dec daa push fisttp decl (bad) mov cmc ret out mov fild fcomip scas and jg xchg sarl repnz xchg jg lahf stc pop call sti mov mov (bad) fidivr jg icebp lahf mov dec jle stos icebp out repz pop scas ja lock neg scas xchg std icebp mov sti fwait (bad) ss icebp hlt ja arpl fild out (bad) das sti outsl jg cmp cli inc pop std out std cltd jg (bad) xchg out decl cmpsl cld daa push dec std fcmovnu incl jnp ljmp call out out mov in jle (bad) std popf push pop sti pop (bad) cmp clc (bad) (bad) scas pop std leave scas iret (bad) fidivr std push (bad) mov mov mov scas aas cld sub pop clc in fldt fnstcw repnz std imul idivl std in mov cmc (bad) jg pop stc aaa jg jg std mov movd das std idivb push outsl icebp fwait call fwait (bad) cmp into fcomip iret std xchg lahf cld lcall repz lcall negb (bad) pop sarb inc aas repnz xchg (bad) scas (bad) in mov in (bad) cld push sub lret push std xchg fstps pop incb ds pop (bad) out pop jle or int3 outsl sti adc fbld aaa mov pop scas imul incl aas call std push aad movsb cmc jmp in pop daa std popf cld xchg loope repz dec jg lahf js (bad) (bad) mov negl cmp jnp push cld cmc imul das mov mov lods rcrl lock aaa cld fwait jle aas (bad) xlat cld scas dec into (bad) cli aas sti lahf cli xchg (bad) loope scas stc jnp lods push jecxz cli paddw pushl in (bad) icebp (bad) out cli xchg fcomps orl aas sti (bad) dec cld mov fwait jmp xor mov call pop std jecxz aam (bad) sbb push mov dec aas jnp iret (bad) push jg mov imul stos das jle fcomip scas incb stos jg aaa decb pop std into jg lahf hlt ja jnp mov lods pop push aas notb std sar jmp lcall out jmp dec std mov push add lcall leave (bad) (bad) sub iret pop (bad) stos pop idivb lahf xchg mov jg fdivrp (bad) std fistp push (bad) (bad) scas loop jae call in decl jmp daa in idivb mov hlt (bad) mov (bad) jle fbld pop std das mov ljmp (bad) fnstcw push cld les (bad) (bad) stc jg mov jmp outsl clc dec cmpsl idivl mov aas cld inc call jg pop std ja (bad) xor paddw idiv ljmp (bad) lods out cmpsb dec scas clc into mov cld jbe cmp in ficomp out jg and (bad) jg out xchg repz aas cli aaa call jg mov fstpt (bad) std pop test nop (bad) clc pop (bad) jmp ljmp pop std imul jg fbstp (bad) cli mov xchg jg mov aas stc loop lcall ja pop (bad) mov std aaa cld or (bad) sti push jg lret jmp xchg aas cld lahf jle pop lock xchg (bad) iret mov mov pop std lods aas std jmp lds dec std outsb aas divb and stos (bad) stc (bad) imul std xchg call mov (bad) out std push mov pop incl mov xlat push pop clc jnp jno jle idiv in (bad) rcr cmpsl cld pop ljmp cmc ja call (bad) movsb pop lock (bad) pop jg stc call cmpsl (bad) ljmp jmp jnp cmc scas icebp (bad) loop icebp mov fsin jae (bad) lahf stc pop cld ja out stc out mov std in (bad) cs sti incb add cli pop (bad) cmp inc std adc lcall int lds fnstcw cmp pop jns (bad) rcrl aaa stc xor call cli (bad) jg out (bad) pop call incl jg push jmp mov and aas jg outsl sti aas cld cmp out repz fimull decl inc mov scas (bad) and stc jno fistpll push cld decl std (bad) cld (bad) jmp inc jg lahf repz jmp mov sti xor shl outsl cld mov mov out int3 (bad) stos cld aaa js je ja scas dec mov mov mov cld dec mov mov mov lahf std es jmp sti addr16 sub inc (bad) fistpll scas std pop sti mov jmp sarl (bad) mov out cli mov cmc jg lahf repz sarl fcomip iret cwtl std lods xchg (bad) cmp sarl mov mov out clc stc pop clc xlat cld mov incl (bad) jmp clc neg cli in cmpsl push outsl sti mov pop stc rcrl rcrl dec fcomip dec incl sti das cli das incb rcrl (bad) (bad) cmp fidivrl pop std jge fbld mov incl iret mov inc pop cmp clc pop mov out (bad) cld dec jg mov mov push rorl mov fwait (bad) out sti (bad) cltd aas ljmp mov out rol call mov mov div push (bad) push pop stc cmp dec xchg outsl dec pop notb ja sar icebp xchg jmp pop (bad) mov addr16 jmp jg clc out jg popf idiv mov jmp mov (bad) (bad) (bad) mov std push std adc inc jg das cli call clc sbb call in fcomip in scas std jnp std (bad) out leave (bad) clc in (bad) (bad) pushf pop clc aas (bad) push jg aas dec icebp lret jmp push call (bad) jmp outsl hlt xchg (bad) cld pop inc (bad) sti iret and aas sti push (bad) in mov (bad) outsl cli inc jmp sti std lcall call stc stc jnp ret mov decl (bad) stc pop jg repz aas cld cltd jg in das (bad) in (bad) pushf lds cmp repz stos (bad) jmp (bad) cld leave scas std pop push call pop xchg ljmp (bad) repnz fdivrp pop dec ljmp (bad) nop gs call mov mov arpl sti sti pushf pop lcall psubb in (bad) fistpll mov out addl jle aas repnz cld xchg jg lahf notl (bad) in mov jg das cli stos inc aas loop fdivrp fsts jle aaa addr16 add iret pop mov sbb out outsl mov (bad) fnstsw ja (bad) lahf fdivrs cmpsl pop incl std in into jecxz clc (bad) loopne div cld mov bnd scas pushl (bad) add pop imulb (bad) pop push cld jb jg daa adc inc int dec (bad) testl xchg call outsl hlt sub fstps or arpl iret (bad) jmp out (bad) arpl ljmp lahf jg scas repz mull cmp repz pop cld push jge aas cld cmp scas pop (bad) push (bad) pop jg scas (bad) lret dec jg mov repnz jecxz jg push pop jg push cld cmp aas cli xlat (bad) (bad) jge mov pop jmp ficomp fistpll pop out repnz int decb clc mov sti jle push mov fild cmc xchg mov jle mov std pop call iret mov iret mov std jge mov aad decb (bad) shrl cld dec clc (bad) mov jge sti std gs jmp in call jecxz fdivrp ds dec scas jle (bad) push aas out mov outsl call fcomip pop (bad) jns cli pop div sarl jmp decl (bad) (bad) in dec cli int jge (bad) push repnz jg stc lahf push (bad) out daa (bad) stc fnop lret call repnz jg aas ljmp ja push int clc xchg inc mov in negl loop inc (bad) ljmp out std (bad) cmpsb call out std (bad) jmp aas jg jg (bad) cli xor cmp mov clc xchg jg jg cvtps2pi outsl dec jg jg jmp jg fidivr std push call mov scas mov decb fwait incl jg stos aas lock std cmp fbstp outsl sti daa jg lret std iret (bad) call (bad) mov repnz std mov jle xchg jl pop cld xchg fcomip iret popa cld jg mov mov stc aaa sti xchg sahf std (bad) jg aas cld (bad) incb out repz ja ds (bad) lahf jg (bad) decl jg daa mov (bad) in mov cmp inc (bad) mov iret jle jg ja or xor mov adc (bad) jg,pt and enter jg scas negl repz call sti stc out sti (bad) out xlat mov aas sti xchg nop cld xchg mov aas std into fcomip out fidivr sub inc icebp fistpl pop std mov lret out jnp out decb (bad) out mov mov pusha mov call lahf cli daa incl std outsl and out ret scas repz ss pop sti inc incb ljmp lcall cmc lahf icebp pop cld imul call paddd sti (bad) fisubrl lcall clc pop (bad) repnz clc scas cld into scas jle aas lcall idiv mov into lahf stc outsl pop sahf std mov loope mov out idiv sar xorb dec xchg (bad) xchg out (bad) mov mov pop jmp mov negl push fcomip (bad) push outsl jg das (bad) movsl jg decl dec jmp pop cld xchg add hlt daa inc enter jg addr16 dec (bad) std dec incl cld lret (bad) jle iret std or mov test in movsbl stos (bad) in aas hlt idiv pop (bad) clc mov jle fcomip clc das sti leave jg loopne cli std (bad) mov (bad) jle in (bad) fbstp jecxz pop hlt clc outsl js cld (bad) ljmp (bad) pop lret (bad) (bad) jmp xchg and dec pop push std repnz fnstsw clc cmpsl sub cmp cld stc fcomip imul std iret jg out dec mov icebp out int inc sahf push aas (bad) in jg in jg aaa push fild mov cld aaa cli std pushl loop adc jg mov cmc dec (bad) (bad) jp jg fisttp idiv lret in inc cli jecxz (bad) scas xchg (bad) in (bad) (bad) addr16 lret idivb lods jg out mov addr16 pop repnz aas repz lcall push (bad) jg outsl sti test inc (bad) out ret dec (bad) sarl out dec jg push das (bad) out jg loopne mov dec jg out cld sub jecxz repz jl (bad) pop mov lods jmp push xchg std std sbb outsl (bad) hlt mov (bad) add mov jecxz in (bad) cmc jg fild push cld repnz std adc cmp (bad) mov daa (bad) cmc (bad) in outsl clc lahf pushl mov (bad) std jg push xchg cmpsb jg mov (bad) mov aas enter out outsl lahf std sbb sti loop cmp out sub mov aas jne mov (bad) mov ljmp xor mov call mov xchg std or aas push out neg jmp jnp sub cltd lret (bad) cld jne (bad) stc ret cmp repz jno out fdivr out test xchg repnz jg mov aas negl cld imull hlt idiv clc mov (bad) mov test in movsl clc stc aas mov (bad) icebp (bad) sti fstpt pop cli cmpsl jge cmc out mov (bad) mov mov loopne daa mov (bad) clc pop std scas cld mov das cli loop clc pop jle jg jb (bad) pop jle mov (bad) (bad) incb arpl mov leave mov xchg fwait int3 push (bad) (bad) in (bad) mov mov (bad) mov (bad) cmc (bad) stc das (bad) repnz std cmc mov adc das cli sbb repz nop std incb jg lret idiv in pop lock dec pop jo pop pushl or aas aas sarl out xchg mov jnp pop (bad) fcmove das and stc mov lock jmp mov jg ja jmp aas incb std jecxz xlat cli mov cld fistp std loop loope sti sub pushf jg (bad) cld (bad) jg jg ds mov aas cmp pop (bad) (bad) (bad) cmc scas stc imul jg fwait push lahf dec lcall mov jg mov aad (bad) leave lahf std xchg aam (bad) (bad) std pop mov cmc pop (bad) and repz cld pop jmp outsl stc xchg loop sti gs idiv lahf lock xlat std or (bad) cltd (bad) in cmc (bad) aas cli in (bad) mov loopne ljmp std mov jg sti jg repz cmpsl inc jecxz cmc lahf stc or pop movd jmp ja cli adc dec stc jecxz movsb aas jg out rcrl (bad) (bad) stc cmpsl pushl out (bad) mov nop (bad) movsb cld out aas mull cld ret mov std add jg jg jmp enter inc pop clc lret jle out std aad ljmp aas std xor lahf cld out xchg push outsl clc and in mov fstpt rcr jmp lcall ljmp cld lahf xchg jg aas icebp cld (bad) clc repz jmp jg daa push out std pop cld sbb fildll (bad) clc iret in (bad) in cld ja std out repz mov mov mov std stc cmpsl (bad) loope loop sti cmc jg dec jmp mov incb idiv (bad) bnd test (bad) cmpsl (bad) mov repz sti and stc xor pop (bad) mov shr idivl cmp cltd jg pop stc das pushl jmp mov inc lahf imulb cmc outsl push xchg jg aas jmp (bad) aas in push addr16 push sub (bad) out ret (bad) jp mov stc or das (bad) std out cmc das jl in fistpll les ds out mov repz jle rcrl (bad) pop (bad) fucom (bad) jle pop cli jecxz lock icebp mov jg (bad) sti push call bnd mov cld scas jg (bad) std aas stc fidivr cli das push cld sti ja stc pop pushl das popf mov call scas js aam std aaa mov (bad) inc fwait repnz cli jmp ror mov icebp idiv (bad) (bad) cld pop decb fwait call lock decl jg repnz jg in aas repz jns cmc out cmc cmpsl incb ret out std mov negb lahf cld mov push lods (bad) dec decl leave pop cmc pop incl (bad) (bad) loopne pop (bad) aas std fildl pop call fxch cld lcall sbb mov cmc dec incb in mov sti push stc cld mov pop xor cld daa jg std icebp mov mov clc pop pop cld jno lock sti daa lcall xchg jg add add mov mov xchg jg fnstsw jg scas (bad) lret enter mov xor cli dec incl fnstcw std out jg pop clc ja jg popf sub jg out dec mul out cli inc enter inc ljmp leave (bad) jg mov mov jg clc lcall movsb clc out cli sub jg sbb int stc pop decl mov jmp std sar sahf jnp in negl (bad) (bad) lods push (bad) outsl clc pop std mov les imul outsl clc pop decl cli pushl mov call pop adc aas sti lahf xchg (bad) jg call sar lahf cld icebp aas jecxz cli pop (bad) fidivrl in jg stos mov (bad) (bad) jnp cli mov inc stc iret mov (bad) dec aas sub (bad) jmp push pushl aas (bad) sti jmp xchg mov xchg cmp (bad) sarl (bad) std mov (bad) cli mov mov sub jecxz push lcall clc das clc xchg lret pop (bad) in lahf cld xchg lret mov cld in rcll (bad) decb or (bad) popf out rcrb mov popf jg lahf cli xor into pop negl cld repnz std aaa call mov (bad) cmc (bad) push xchg mov (bad) jg bsf add ljmp jg pop push cmc out clc idiv (bad) (bad) jmp hlt pop cld jle (bad) sarl (bad) xchg aas in aaa std mov (bad) cmp das clc popl jecxz lock mov (bad) mov cli jg (bad) bnd jg (bad) pop inc lret (bad) out (bad) decb jg pop cld outsl decb scas dec (bad) fstpt mov int3 lahf cmp cld pop (bad) jmp std or jmp ljmp das sti in out pop div outsl std mov out jge addr16 lcall hlt aaa stc (bad) mov ss stc lcall jg pop (bad) cmp sbb mov mov (bad) decb mov loop mov (bad) mov jmp fcomps (bad) loop cld das std xchg fstpl lahf icebp daa std jne lcall jmp lret pop lcall pop sti (bad) pop jg outsl cmc or push mov bnd cld cld (bad) addr16 mov lcall xlat (bad) xchg jg mov (bad) mov out sti pop cld jmp leave (bad) jle das sub iret fucomip repz mov mov decl lahf jg mov jg mov jg scas std sbb jnp lret ljmp cli jg leave pop cld stc lahf jle or mov clc repnz jg (bad) mov sti icebp scas sti jnp fsubrs aas cli (bad) jecxz imul out pop lock cld scas jmp out jbe pop (bad) jecxz sarl ljmp pop jg mov (bad) fstpt sbb mov fcomip lahf enter sti popf pop ljmp in repz push sahf (bad) pop jg outsl hlt pop incb inc cli dec dec jle fcomip aas incl ret std pop (bad) pop idiv daa repnz inc pop (bad) out cld dec in cmc out call stc mov jle mov jg lret jp call sti jg (bad) jge cli out dec stc stos jnp mov mov fdivrp cmc xor push decl dec std cld das std (bad) icebp jg outsl int3 inc loop sti movd lahf mull pop cli sub loopne lock mov fucomip aaa std insl (bad) in jnp pop mov pop clc (bad) stos mov jg cld xlat jge stos lcall jle pop stc lods jnp call (bad) es fucom call aas std imul jg pushl (bad) xchg incl pop jg xlat das (bad) fidivr aas std mov xlat aas cli loop (bad) mov std ja inc stc jmp ljmp into icebp xlat pop dec icebp xlat (bad) ja enter idivl mov cmp pop hlt (bad) xlat aas std push std (bad) out jle (bad) clc stos mov out inc incb push sarb out and call lcall (bad) mov jbe dec cmp (bad) sarl paddw fnstcw hlt (bad) cld cmc xlat sbb sar jmp push (bad) pushl mov das imul pushl fmul out call adc in fild ljmp inc sar vmaxpd mov mov jle pop decl jg lahf cld sbb (bad) popf push cld lock xchg aas push jmp incl mov aas decl lcall hlt repnz stc cmp call stos (bad) repnz cli aaa xchg aas sti test in (bad) sti in icebp jnp (bad) leave mov idivl jmp lahf cli inc (bad) in dec pop sti pop std hlt pop repz std or std sub loopne repnz out jle push pushf pop aaa mov xor dec cld (bad) ds jne (bad) fistpll ljmp repz std incl std into inc mov (bad) (bad) fdivrp (bad) out fdivrs std cmpsl nop incl idivl decl in clc lahf call xlat (bad) std (bad) mov loope mov in lret jg (bad) (bad) mov mov stc lock ja scas jg (bad) stc pop sti jecxz lret jg xchg sahf std pop push rcrl fdivr ficomp in (bad) repnz cld daa jg in mov testl stos imul push fucomip mov repz jmp pop push lahf stc (bad) fstpt (bad) (bad) dec mov lcall (bad) mov mov jg cld aaa cmp lods (bad) out repz jnp pop repnz idivl mov (bad) cmc (bad) out (bad) clc fstpt cld lahf cld jmp std mov (bad) jecxz (bad) popf pop sti outsl cli jnp loope jns mov pop inc pop icebp dec call jg leave call sarb xacquire (bad) (bad) das dec lahf stc or (bad) in (bad) jge fistpll (bad) mov aas fisubr daa mov iret cld xor iret mov jmp (bad) idiv jmp sti dec std jae sarl (bad) (bad) xchg xor fcomip outsl incb das dec (bad) fcomps jnp stos pop divb scas pushl std jge lret jg idiv ljmp divb cltd std sbb cli scas leave jg call mov (bad) fxch pop jns repz jg mov pop jbe jmp int3 (bad) mov aas repz jmp aad inc cli repz pop lcall cld jmp call sti ret inc aas fwait cld (bad) loop jg lahf js adc icebp idivl mov aaa aas cmc pop pop ljmp ljmp jmp mov sarl std scas lods jg leave aas stc xchg cld lahf mov loope icebp dec dec rcr ljmp jle das jg pop std (bad) stc (bad) adc sti jg addr16 les cld in cs in push lahf dec clc ljmp mov cld jecxz scas jmp pop jle aas cld xlat (bad) cmpsl inc jg cmpl cld fnstsw pop dec imul (bad) mov scas (bad) out aas in jecxz cld pop std jnp std iret ljmp fistpll in aas (bad) pop (bad) mov or (bad) sbb xchg mov das std ljmp jns fistpll dec cli lea in cli idivl mov mov stc and aas mov pop lahf repnz mov idivl mov push xchg (bad) cli push jg jmp pop sti incl repnz xchg mov jmp cli pop (bad) cld hlt clc (bad) cli aas inc daa (bad) out scas cmc jnp sub in mov xchg das aas stc add pop sbb in icebp arpl (bad) push push push das clc stos dec inc (bad) call std idiv fnstcw std hlt outsl cmpsb cmc xchg (bad) clc mov out fdiv pop cld mov aaa lcall ja fldcw mov cld arpl fucomip jmp jmp dec sbb mov mov mov push xchg std ss jg push jl fnstsw xchg aas jecxz std (bad) jle pop repz pushl outsl jle pop out aaa sti pop jle xlat jg lahf std (bad) fbstp xchg (bad) cli test (bad) sti lahf dec jle pop (bad) inc jg pop jecxz stc lds lds (bad) jmp ds lea aas in pop sti pop out decl hlt mov repz jmp mov mov std inc call fsubr clc (bad) push (bad) addr16 (bad) mov adc repz or (bad) dec mov jg mov cmc dec mov cmp (bad) repnz mov jae stos jg hlt fistp std mov lahf aas stc aas ds ja aaa (bad) cwtl mov jg pop std iret cld repz dec cld ljmp ret lahf (bad) out jg lahf std scas dec scas mov xlat pop decb clc jnp cmp jge cmpsb jmp cmc jg jae fwait pop jg pop (bad) jns jecxz inc jmp leave lahf lock out mov cld sar scas jnp out in call scas icebp daa cld jecxz out ja mov xchg mov pushl adc sti dec std into mov std xchg mov inc push push aas sti aaa cld adc fildll jmp incb enter jg scas (bad) sbb in mov out cld pop (bad) fcoml jg push xchg jg outsl xor sub outsl (bad) pushl jg popf pop cli xchg xchg mov icebp pop cld addr16 push in incl stos addr16 fmul cld pop aas mulb icebp scas std out std pop jg (bad) sbb or cmp outsl call jmp (bad) stc div das decb in aas stc push (bad) mov loop cli idivl jg ja idivb cmc jmp inc jg outsl notl ljmp jg out pop and jmp cli jnp clc lahf dec icebp sti jg cmp pop jg into fisubr das cld xor pop std fs imul jg mov fldt pop std xchg dec lahf jo loop lods mov inc xchg (bad) jmp decl cmpsl jle stos aas in pop sti xor in aas bnd jge in lahf cmp in jmp xlat icebp mov negl cld dec mov mov cld or cld mov and stc out mov ljmp dec cli in (bad) fidivrl cwtl in decl xchg (bad) mov aas (bad) aas cli jge (bad) mov mov pop jg outsl (bad) arpl jg aas idivl pushl fwait mov jg iret clc xchg (bad) mov (bad) ret (bad) das lcall imul mov repnz sti stos inc mov ret idiv pop daa sti repz jecxz xlat out cld xlat dec fcomip imul jg mov aas std (bad) cld (bad) iret std ret pop jg repnz mov mov jg jg imul (bad) cld scas jmp lret jg (bad) pop out incb repz call jg cld idivl std imul cmc fistpll pop mov std cmp lcall (bad) mov (bad) sar loopne pushl or imul pop std int out mov sbbb daa push jg pop fidivrl (bad) cmpl clc mov std decl ja std push jg outsl (bad) in fcomip (bad) dec (bad) pushf jg idiv fnstsw (bad) aas decb dec (bad) daa cs mov lcall std mov mov adc bnd scas incb cld cmp fdivrp inc (bad) jmp (bad) std decb jne in aaa sahf mov (bad) out scas cli cltd fcomip pop (bad) sub das jle das (bad) stc jg pop cmp pop (bad) aad jmp std das (bad) mov out call mov loope aas repnz inc mov ljmp repz cli fucomp outsb ljmp iret push (bad) sbb (bad) xlat xchg (bad) (bad) imulb pop jmp pop decb repnz cmp xlat jg (bad) pop jg fnop pop pushl fxch idiv dec mov pushl out out jae cli jecxz ja push ds (bad) int jmp fcomip xchg cld loope jmp jle pop cld cltd mov mov (bad) (bad) jg mov arpl scas cld (bad) ret call pop jg mov out lahf stc (bad) (bad) hlt aas cli out push ljmp mov hlt pop std movsl jmp idivl inc xor mov cld mov lret movsl cld stc lahf jne in iret test outsl cld cmp neg call sti cmp stos (bad) (bad) icebp jmp call ljmp cld xchg (bad) cld pop clc xchg mov ljmp sti jg pop (bad) outsl mov cmc movswl xchg decl aad clc outsl cmpsl jg das pop jge in ljmp dec pop icebp loopne aas cli mov (bad) sub lahf (bad) jmp sbb xlat fs (bad) jecxz jmp dec jl outsl std into jg jg pop popf xchg (bad) (bad) stos jg (bad) cli mov call addr16 cmpl jg paddb ja cld icebp mov inc jg out repnz call (bad) ja in cld sti jmp cld ja stc out mov mov mov repnz (bad) (bad) dec (bad) in (bad) loop jg xor clc jg cld stc jg (bad) lods inc (bad) lds dec dec rcr jmp jns xchg cli xor ljmp (bad) pushl repz mov aas (bad) clc out cld iret call push (bad) jmp jg jecxz ljmp scas cld movsl mov aas std jae pop jg pop std jmp cmc stos jmp jg (bad) pop (bad) sarl sti lahf sti das jg lret mov inc (bad) stc das std pop out (bad) icebp jg pop lock or incb sti jg xlat clc mov cld lahf jmp fcomip scas std mov std leave jg pop icebp jmp jmp insl (bad) in fwait cld scas mov maxps into jg std std jg pop cli iret jg aas (bad) lahf cld xchg inc inc repz cmpsb (bad) (bad) (bad) std idiv into jg outsl mov in pop mov stos aas in (bad) mov (bad) cld aad stc out jg fcomip pop dec (bad) clc aas sti lret jg aas std aas jge jp aaa (bad) lahf jg pushl cli dec jg jg lret (bad) dec cld pop pushl sti leave stc aas add stc arpl out cmpsl cmc (bad) fucomip xlat aas std dec sub in std xlat jmp mulb pop mov adc jge dec inc (bad) in jne out (bad) mov ret fucomip sti jmp lahf std sbb mov out idivb mov jmp xlat pop xchg (bad) cli (bad) into (bad) mov imul rcrl pop sti out lahf mov lock (bad) idivb aaa incb rcrl mov lahf (bad) daa out decl mov lret cmc iret (bad) cli mov cltd divl xlat stc jg fwait (bad) sti jg mov mov scas xchg (bad) inc rcrl scas jg mov lret ja leave aas push lahf stc btr cmc (bad) lret push out hlt sub (bad) fnstsw out cld bts test out clc sbb mov mov iret jle popf mov jmp aas cmc repnz ja ds sub mov jmp mov jne repnz mov not mov fnstsw idiv (bad) enter outsl ljmp call mov inc pop notl xchg (bad) (bad) movsl inc (bad) or icebp daa pushl sti xchg xchg lahf (bad) fsub das stc pop jg fcomip mov leave aas sti ja idiv aad mov (bad) cld fstpt fucomip repz clc idiv xor cmp (bad) mov cli dec sub fwait cld psubusw mov pop negl (bad) clc pop lcall sti sti jg pop jnp leave pop jmp (bad) cmp (bad) xchg (bad) fdivr insl jg (bad) cli psubd lcall jmp (bad) mov std mov in aaa clc sbb aaa decb jl in lahf sti dec (bad) icebp mov ds psubb jmp sti ja in ljmp jg pop lock mov (bad) std icebp jecxz lock clc daa mov in (bad) repnz std (bad) hlt (bad) iret cli cmp (bad) (bad) mov add mov sti lahf cld cmp std aas jns xchg loop (bad) mov aas stc sub cmc (bad) out (bad) cli jg popf decb (bad) xchg aas imulb cli std jle leave pop jbe aas cld xor pop (bad) cmp scas mov pop mov jg arpl les mov in fnop lret pop (bad) es lret outsl (bad) test lahf daa jmp pop mov out cld out jg mov pop cli lahf (bad) jno (bad) cmc ja stc daa (bad) cmc mov sbbl dec jmp (bad) mov stc (bad) dec ja jmp mov mov ja repnz cmc mov sub sti cmc ds repz call addr16 aas std leave lahf stc daa call mov iret jg aaa cli dec idivl mov jg fldcw stc pop icebp mov mov fcomip and aaa (bad) mov cld outsl (bad) sbb cli or (bad) jmp std mov icebp pop negl cmc mov inc jg das std pop (bad) repnz in (bad) clc mov (bad) lret pop repz jmp incb stos jle push lahf clc inc (bad) jg (bad) jg (bad) scas std ja jle pop cli aaa (bad) jns aad aas pushl dec (bad) mov cld pop jmp (bad) jmp push (bad) in aas lock push xchg das jp in (bad) pop sti (bad) lds pop lock call cmc (bad) or xchg (bad) pop stc in out std (bad) outsl stc pop (bad) cld aas jmp stc mov jg lahf clc cmp cld (bad) fcomip push std fcomip mov push cld ja ret sarl cmc dec (bad) mov das stc lods push mov (bad) out fdivrp xchg (bad) scas (bad) in ja lds jmp fucomip (bad) cli or mov aas loop cld mov mov std aad clc cld psubw (bad) cld std jle popf popf fnstcw icebp outsl mov mov std ret jmp (bad) fdivr cld lret (bad) hlt jg loop jg cmc jmp sti iret fdivrp jae fdivrs pop mov pop into inc pop out cmp cld out (bad) sti (bad) mov pop hlt das std sti pop addr16 aas (bad) stc pop std sbb scas lds mov pop sti jmp sti bswap (bad) fsub pop (bad) pop dec mov incb lea std in out lcall jg aas std daa (bad) loop (bad) jmp in lahf std add fwait pop idiv lahf clc paddw lahf cld (bad) jecxz (bad) aaa cld jecxz cmpl rcrl incb mov popf mov jg aas clc movd jmp pop sti jnp jmp mov mov loopne clc cmpsl cltd jg arpl jmp stc hlt out call (bad) mov (bad) push pop adc mov daa sti (bad) jnp pop mov mov fdivrl js cld push std idivb std fdivrs mov mov xchg fbstp cld (bad) jle pop inc dec outsl negb jmp (bad) cli fwait (bad) fldl pop aas (bad) cmp outsl clc xchg jg pop lock out lock cld mov mov iret sahf std sti mov std lcall aaa jg pop (bad) mov iret jmp aas loopne mov jge leave outsl clc negl (bad) in iret sti fsubrp outsl enter lahf (bad) scas movsb mov iret jmp mov insl hlt imul xchg pop div std xlat ds cmp fwait mov idivl pop cld add mov out vxorps mov jmp cmp mov pop std dec stos fucomip dec cli jne mov in rcrl jecxz std mov jp (bad) out dec stc (bad) aas cli ja sub mov ljmp cmp adc sahf (bad) cs fistpl pop aas stc add cmc out idiv (bad) (bad) sti aas hlt pop cli push jg pop std lahf (bad) cmp out mov lahf cld lahf (bad) jmp jg pop stc push std and dec cld stc inc out hlt aas inc fstpt jg lock push out std incl clc int cli pop cmp mov (bad) popl iret clc xlat jmp imul jg mov pop jg rcl ljmp (bad) pop jmp leave cld mov iret jle pop cld cmovg dec int3 fistp das clc mov jmp popa sbb fisttp jg clc int sti pop jg cld cmpsl fucomip xchg aas clc xchg (bad) fistl mov pop mov xchg jg das pop std movsl (bad) fs fistl aaa std in sarl jns ja jecxz loope jae jnp arpl mov mov (bad) ror fistpll jmp outsl lret outsl clc pop (bad) loope jmp push cld int lds inc std inc mov ds in jg jg hlt aaa jp sbb add aam div lahf push (bad) sbb std (bad) lea (bad) xlat sti and (bad) sub fstpl xchg jg stc (bad) (bad) stc idiv icebp aas negb mov in pop cld cld mov std repz cld das jg into cmpl out jg (bad) xor clc mov ljmp sti mov rcrl incb pop icebp ret iret cld iret jmp pop notb lahf cld addr16 call mov aas cld out mov pop repz cmp rcrl (bad) std jg,pt out cli imul mov decb dec push aas repnz out cmp daa (bad) loop repz inc mov imul pop cmc scas std mov stc sbb idiv ret jle aas jl in lahf sti mov (bad) out pop std pandn pop mov mov jg jg in std cs jge inc pushl fwait pop (bad) cmp decb (bad) bnd aas stc adc sar fidivrl std (bad) push cld (bad) sar aas stos std mov pop lcall lea (bad) clc out jg (bad) xchg in (bad) ss std pop std jae jecxz sti idiv jle call xchg ret mov jg repnz pushl aad (bad) das clc lods jle scas cld jge (bad) std (bad) cli fistpll pop std aas incb sar int3 fucomip (bad) dec lahf std pop or in pop popa std loope (bad) xchg mov cmpsb pop hlt daa std aaa call jnp mov mov jns xlat out sar rcr mov xchg (bad) (bad) outsl cli pop jg mov sti lahf pushl push cld (bad) scas incl das pushl push ja pop call mov loope jmp mov jg stos fbstp mov push jg pop cli jnp jle (bad) (bad) stc iret push pop imulb inc jg jg (bad) sbb stc iret xchg jg (bad) scas (bad) (bad) mov inc jmp mov ljmp aas stc ja sarl mov aas (bad) jg cld mov lret xlat stc pop (bad) lods sti mov mov cld pushw lahf jg aas neg out sti fcomip (bad) cli mov ljmp sti jg pop inc (bad) cmpsb jg aas sti lahf cld iret mov (bad) nop cmp jecxz xchg mov mov in pop stc lahf call fxtract paddw (bad) out jnp iret jg cli jmp jg mov call push sahf (bad) loop sti out (bad) mov repnz idivl dec std fcmovu scas clc ja lcall outsl jmp std fnop mov push mov (bad) pop (bad) loope aas lock ds cmp outsl movsl stc jnp jg ljmp decb fucomp pop clc xchg jmp jmp stc int mov fucomi ja das pop xchg std cmp outsl aas std push (bad) lock ljmp jg mov pop ds mov cld mov cmp (bad) call aas ljmp inc aas in cmpsl sahf jl fistpll incb inc std jmp pop xor jg aas sti cmp incl dec jg inc cld jp (bad) (bad) xchg cmp out (bad) clc xchg jg mov in xchg cld lcall (bad) clc dec into decl fdivr pop inc push outsl hlt mov negb std aad mov pop (bad) jb (bad) ds dec incb in std xlat sahf incb lcall std loop inc pop jnp (bad) std add idivb or or cmp jae mov out fidiv negl (bad) ficompl dec push (bad) xchg pop pushl lahf (bad) aad outsb stc aad icebp out jmp call jg aas call pop jecxz cld sar fwait pop cld fstpt (bad) cmp jg cmp push (bad) ja (bad) fnstsw (bad) jmp cli pop std jnp jg aas divl jle outsl je pop (bad) fnstsw repz jg neg std popa (bad) ljmp xlat int aas mov sti sti in pop jmp cli pop ja movsl outsl lcall jg xlat ljmp aas cli lahf (bad) mov ret jg ja (bad) jmp pushl (bad) fidivrl lahf jmp call cmp (bad) in cmp in incb repnz std inc std mov cld hlt aas cld cmp xchg cmp sti icebp (bad) std daa (bad) xchg pop jmp cmp popf incl daa (bad) mov into pop mov repz cld cs (bad) out cli out stc iret jg outsl clc lock (bad) stc cmpsl jle jmp repnz decb sarl das stc xchg (bad) negb cli lahf fidivr mov call popf out int3 (bad) fnstsw cld test mov into lahf cmc sbb dec mov jg jmp jmp aas repnz jmp xlat stc mov (bad) mov jg outsl std (bad) jg in ret jmp (bad) cld jmp std fucomip std pop jg inc scas (bad) mov jmp (bad) sti jg cli pop clc arpl out (bad) (bad) cli jae jnp cli lds std loopne dec fcomip xchg loop notb aam std or fstpt xchg jmp xlat mov stc sbb out mov (bad) (bad) lahf jge scas std mov incl (bad) cld mov dec pop mov jae lret leave fnstsw cli outsl stc inc jle adc inc xchg std lret jle out stc fstpt pop jmp stc sbb out push pop stc xor cli ja (bad) pop repz dec (bad) fnstsw dec in stc ret mov lea (bad) out jg pop cld mov aas imull mov ljmp cld imul ss icebp scas (bad) scas jg jg scas cld dec jg aas icebp lahf inc leave lahf jl call fstps mov in inc leave ret mov jle pop jg fstp in (bad) jmp (bad) std ficomp inc std or pop (bad) cmp pop idiv outsl (bad) pop (bad) out mov (bad) test jecxz jg lahf notb hlt cld pop decl jg push dec or (bad) sti mov push push call aas (bad) stc pop hlt lahf out std sub jg repnz cmpsl scas jle add dec cmc (bad) std mov sti das xor div stc gs ljmp in js divb and lods fcomip outsl cld push fiadd jg jg sar test ja pop jle mov xor (bad) jle scas jno aaa stc and std leave fcomip out mov pushl sti sub mov pop std pop scas (bad) test std mov stos ret mov call test xchg push mov (bad) jecxz out cwtl incl and daa jg xchg nop inc (bad) jmp add cli stc call mov (bad) mov lock (bad) loope out fnop jmp push daa jb loope clc mov push mov sbb dec mov ret cld sti orl jmp std out push call outsl clc pop (bad) (bad) jg lret xchg mov mov (bad) jg dec cld dec (bad) rcr idiv scas (bad) sub clc pop sti ljmp std inc (bad) scas mov cmp icebp (bad) jmp stc lahf clc mov stos jg paddw cmc in mov push (bad) mov xchg push push dec lahf std in (bad) leave cli (bad) cld inc out int fcomip (bad) dec jg mov cmp mov out cld jg sti sbb xlat (bad) cmp (bad) (bad) out jp scas sahf lods push jg jmp cmp imul call outsl dec cld (bad) mov jg mov mov iret (bad) hlt (bad) std sbb (bad) paddw (bad) clc xchg xchg jg repnz decl enter cmpsb jg lahf sti ja sti mov (bad) ljmp jmp mov (bad) (bad) outsl cld xor lds incl (bad) and cld ljmp fistpll xchg rcr jo cmp (bad) jle mov out sbb pop aas sub mov sub std cmp popa popf call mov das dec jg mov dec (bad) (bad) cld dec std clc das mov outsl stc mov cld out (bad) fimul (bad) das jg (bad) cli xchg mov cmc ret (bad) outsl (bad) repz scas jg mov cmp repz mov test stc lahf cmc fnstsw cmc (bad) lods lahf pop jle iret (bad) sbb mov scas jle out jge xchg idivl and lret inc das clc pop (bad) mov jle adc jg pop jg idiv sbb jmp cmc pop cld lcall pop lock std cmp (bad) jmp jle das (bad) sub popf mov clc out rep mov mov jg scas mov fwait pushl incb (bad) psadbw lahf (bad) and cli jmp in pop mov std cmpl pop std imul jle scas stc jg push incl and fnstcw (bad) jmp fldt call mov mov scas fdivrp iret mov outsb std cmpsl mov ljmp stc daa in fdivr cmp jg cmc (bad) lret jle aas (bad) (bad) inc outsl jg aas jmp cld out (bad) stc lahf cli (bad) (bad) mov negl lock rcrl jmp (bad) cld mov sti inc jg out cli (bad) cld gs sbb mov int icebp xor out cli cmpsl cld insl jg (bad) in stc lods (bad) mov repz scas stc jnp std sbb cld and jg cli das xchg lret jg dec stc ret (bad) fdivrs add push scas sbb sarl in pushl lds aas std push mov pop (bad) (bad) movswl sub ds mov mov aaa sbb pop (bad) cmp mov cld fnstcw cld cmp nop call xchg pushl xchg (bad) icebp jg jg inc (bad) in mov aas (bad) sti jg pop icebp fistl call clc pop jle (bad) mov mov (bad) push inc (bad) fcomps (bad) xlat sti das jbe cli mov mov adc pop (bad) out in jmp xlat push scas (bad) insl (bad) repz outsl stc mov mov cli icebp jg mov or aam cld push pop (bad) in (bad) jmp loope not call jmp mov call out mov jg stc out std aam scas sti cld (bad) decb xchg inc repz stc fildll adc ret mov xlat int lock fdivrp inc (bad) out std sar idivb jmp leave jg out cmc xchg jns in std clc xchg std loope jg daa mov lcall (bad) cmc (bad) lcall mov out std idivb dec jg psubb mov loop fdivr xchg ret mov cmpsl jmp (bad) aas insb (bad) xchg jg (bad) iret out lret lahf std mov das clc mov shrl insb jle jg aas jmp pop cmp xchg xchg cltd (bad) and scas clc lahf decb iret ljmp scas cld fcomip (bad) sarb push mov push incl mov clc cmpsl cld cmovg xchg sub mov jg (bad) mov fsubrs (bad) ja movsl jg call jmp call (bad) cli idiv scas (bad) mov lods xchg jg aas xchg mov imul ja ret out (bad) fildll cld hlt push (bad) adc fsubrl lret mov hlt ja imul push xlat jg out hlt xchg mov cld jg out mov jecxz clc fwait jg mov pop dec mov jmp lahf cmp dec jmp pop jge jnp cld std jbe ret repz cmpsl (bad) ljmp cld add stc idivl mov mull cld fwait std or mov inc das decb lahf aas and stc imul cmc lret (bad) (bad) jmp aas cld lahf jmp outsl cmc cmpsl std xchg fbld cmc outsl lock (bad) in stc jne (bad) mov lods mov lcall out aas lcall fcmovu (bad) lock and clc icebp xchg aas out outsl std ja xchg sar cli pop cli sbb loope inc jae out pop hlt sub lahf push incb (bad) (bad) mov (bad) cli mov out jnp fldt jg jg jg idiv mov (bad) pop cli lahf cld loope sti (bad) jg xlat std out jg shl das fyl2xp1 and mov xchg (bad) mov test call pop sbb adc xchg jg jg fstpt xchg (bad) incb iret pushl call (bad) jmp jns std arpl scas sti xlat dec outsl out (bad) icebp dec call jmp dec cld les daa std cmp loope stc sbb sarb (bad) cld fwait decl ljmp jle pop (bad) cld pop cld test call dec (bad) mov cld mov hlt jecxz decb cli leave fcmovnu decl fisubr dec jge repz idivb insl (bad) cmpl jg repnz pop (bad) cli out std xchg (bad) sahf in cli test jle lahf stc mov imulb fwait (bad) ljmp cld iret jg pop (bad) pop sar std pop xor and mov sti push jg scas notl fstps std sub loop clc (bad) (bad) cmp mulb mov mov imull hlt (bad) adc (bad) jg paddb push out pop decb jg mov sbb (bad) mov repz sti jge sar (bad) iret cld (bad) (bad) outsl sti jecxz sbb jle (bad) addr16 cld addr16 (bad) incb call aas bnd test jmp cli jmp movsl cld ret jg out dec cld mov cmpsl mov stc loope lock (bad) fiaddl cld ja pop (bad) mov jg pop jge pop cld pop jg pop std out int enter (bad) ja ret out repz das pushl (bad) fdivrs ja fidivrl mov (bad) jp (bad) jg cmc sbb mov (bad) fnsave stos pop ljmp (bad) sub jg scas cld (bad) decb jg das lret (bad) (bad) push xchg dec (bad) imul cld sbb icebp lock xor cli sti sahf cld sub mov (bad) jle jg aaa (bad) mov fcomip scas jmp lret imul out ljmp mov fistpll push push (bad) popf jg push xchg (bad) out leave mov std daa jg push jmp ljmp jg ja aad sti lahf sti lahf cmp das (bad) mov jae in out jg into pop hlt mov in stos fiadd (bad) sar (bad) cmp mov jle mov push decb jmp jg jmp pop incl mov out fucomip (bad) jg pop xchg (bad) sti dec xchg (bad) sti or (bad) jg pop call jg in (bad) (bad) cld mov pop (bad) ss std dec jg clc pop sti cmp jle fistpll addr16 jl aas sahf pop cld cmpsb dec jg iret mov cmp out pop cld jle lock ja xlat (bad) idiv (bad) lahf cld das cld xor sarl jg pop jle cmpsl mov pop cld scas pop ja pop lret cld sub lahf cld adc les hlt scas dec inc pop std (bad) lock stc iret (bad) in jg mov daa mov int loop cli lea jp jecxz ljmp (bad) jmp jmp leave mov loope dec cld pop pop (bad) fstpt pop repnz lcall ficomp mov jg outsl (bad) push in decl lock outsl imulb pop popf std push (bad) call out std outsb mov popf jle mov mov cld pop push dec fstp clc (bad) cld push jle out mov das (bad) insl leave (bad) dec (bad) mov stc scas (bad) and std ja (bad) pop jae movswl (bad) (bad) xchg das (bad) sahf jmp lds fwait dec (bad) fidivl jecxz stc push pop decb mov mov lods stc sti iret (bad) in push pop inc inc jg sti imul (bad) call (bad) imul idiv xchg jle mov (bad) call xchg mov mov pop popf push inc jmp out stc mov cli iret (bad) xchg mov fcompl jg sar (bad) das std sub lahf jg fstpt clc jge lret fucomip call jle jmp push mov out out mov (bad) (bad) repnz std ds in decb sti sub stc (bad) sahf pop cld or sti ret das (bad) aad stc out cli jecxz das shr out stc ljmp in fcomip lahf cld ret jle mov ja hlt push stc iret mov mov icebp aas push lock (bad) mov (bad) cmc push cmp fdivrp mov mov incl out addr16 jmp mov jl outsl sub repnz jg push imul outsl sahf (bad) es cmc out stc lahf call (bad) call inc fcomip mov (bad) stc mov jmp into pop repz mov ljmp incl stc pop imulb lods pop aam neg not decl repnz cld dec mov into jmp call sti lahf jg mov repnz dec hlt cmp push das (bad) xchg pop (bad) out cli jecxz loope std mov jg jg aas imul (bad) sarb mov jle fcomip pop std or outsl sti sbb std sarl jg xchg jg aas jmp jg out incb jg scas icebp aad hlt pop dec jg aas in lahf decb jg dec pusha std ljmp jmp stc fwait aas stc outsl (bad) mov jle jmp lahf std daa sub xchg dec call jmp jg pop cmc aaa std fnstsw std popa mov dec stc jecxz loop iret (bad) push dec (bad) pop std arpl pushl popf pushl lods decl in sub (bad) ja (bad) xchg and mov mov std iret imul std pop pop out fistpll outsb cli sti std dec mov mov (bad) push in cld insl jg mov jg mov jg scas mov (bad) dec mov fwait std lds incb sti adc ret out cli daa jg cmc mov arpl mov (bad) lcall pop stc out jbe int3 pushl (bad) aad repz pop jle pop (bad) mov cli xor negb cld xchg dec mov mov (bad) rclb (bad) push (bad) mov cmp (bad) (bad) int std daa std sti (bad) jmp decl jl cmp jmp cmp ja (bad) out outsl (bad) lahf inc pop repz dec jg mov mov stos pop dec (bad) xchg jg out decb mov fwait ds sbb repz aas divl dec jg (bad) xchg call jg fnop dec jg daa jbe sahf pop std sub scas push mov stc jg repnz ljmp pop repz das jmp insl (bad) mov (bad) mov scas jmp rcr jmp std in negb fnstcw out (bad) ret das (bad) lahf jg mov scas (bad) cmc mov jg (bad) scas cli imul sbbl (bad) mov (bad) decb lcall aaa (bad) jmp cld mov mov das lcall in (bad) cld xchg pop imul (bad) xchg scas jg dec cmp mov (bad) ljmp jle jg mov jge xchg mov icebp xor sti loop std jae int3 mov out paddd jecxz out dec sti jae in iret jmp stc jg pop inc jmp pop std jecxz mov (bad) fnstcw negl incb mov das cmpsb jmp jle jg sti imul aas hlt das stc scas jle pop jg das (bad) and lock jmp xlat cld dec push mov dec (bad) idivb std fcomip mov jmp int neg inc aas loop std mov dec ljmp jle mov adc dec call inc mov mov imul cld xlat (bad) mov hlt ja das (bad) loope out mov sub sti sbb stos fcos std dec (bad) cmp mov outsl cld mov jle mov mov lcall ljmp clc cltd mov (bad) call ja in jp std aam repz ja (bad) out clc (bad) (bad) xlat inc ret out stc daa outsl ljmp idiv lahf imul out scas lahf cld xchg daa dec (bad) incl mov (bad) stos jg (bad) (bad) std sbb cmpsl mov repz decl jg fwait jg shrl insl (bad) mov mov ljmp out (bad) xor jg nop (bad) cli jmp jmp cmc mov mov out decl mov (bad) out leave iret das stc jecxz mov lock cld aas (bad) mov aas mov (bad) out out jmp repz xor (bad) repz fcomp (bad) in xlat std (bad) mov fcomip rcr sti scas clc (bad) pop idivl ret call (bad) mov incb scas mov incl clc daa jle jg (bad) cmp mulb pop (bad) ljmp stc pop jmp (bad) mov (bad) cmp jecxz sti mov lahf mov sti call pop pop (bad) cli jmp leave jg popf aas loop es std aaa (bad) dec dec (bad) (bad) xchg pop cmc jnp icebp (bad) jmp cli (bad) jnp (bad) in call mov xchg xor cli push (bad) mov std dec in std xlat (bad) sti mov jg jg cli xchg sahf aas (bad) fistp push dec hlt dec jp pop incb (bad) mov idivl aas hlt aas cli mov out jmp jmp sub (bad) cmpsl pop mov jnp outsl cld mov outsl cli add and fwait int3 jg outsl (bad) out (bad) sti (bad) ljmp in inc pop dec repz lahf repz std fwait test scas cmc xchg mov jl ja pop (bad) jmp mulb sahf (bad) pop jmp icebp iret pop notl jg pop icebp repnz pop lcall cld push aas repz std pop jg pop lock iret pushl daa jg fnstcw cmp pop inc (bad) jg iret sti xor hlt mov std pop decb mov aaa lcall jg jg dec stc call int mov js mov jne push idiv inc jle mov scas lcall adc mov neg push cld and out pop (bad) xor idiv ljmp jmp jg inc out std mov sti leave out stc adc lds scas cld adc imulb jmp decl inc sbb stos aas ljmp (bad) mov std (bad) out (bad) mov cmpsl (bad) iret jle (bad) aas icebp loop daa cli sar (bad) mov push outsl std jno jle jg (bad) pop std mov pop cmp inc inc mov (bad) std push jg add call cli push jg aas call scas pop imulb cmp xlat cld lcall mov fucomip pop clc xchg (bad) sti mov fpatan (bad) out addr16 xchg jmp jg pop pop mov mov cmpsl std cmp (bad) inc cmp cld ret aaa (bad) out (bad) mov jecxz in stc lahf lock jne xlat (bad) cld dec jle lahf dec imul iret (bad) mov imull leave aas lock clc sar popf jg paddd hlt pop cld fnstenv cmp cltd std movsl dec ja xchg jmp pop decb aas loope insl pushl fnstsw cld xchg aas cli scas (bad) in (bad) pop (bad) adc cwtl fucomip paddd or fldcw fstpt cld cmpsl (bad) mov outsl jb jle jnp out sar in scas icebp sti (bad) pop pop (bad) in cld mov fwait push fcomip (bad) std cltd inc (bad) jg mov jle rcr ljmp in pop icebp dec jmp jg cld mov xchg xchg lahf hlt cli das stc (bad) out inc jecxz fimul daa mov (bad) clc outsl icebp cmp sar push out pop jg scas (bad) dec in jle (bad) mov xchg pushl aas jmp mov lahf sti cmp aaa mov cld stc aas idiv pop stc sbb push mov (bad) paddb pop (bad) cld jae mov pop icebp bsf add leave mov call das stos jg cmpl fcomp icebp inc std inc jg aas (bad) lret incb (bad) iret cld sub mov popf (bad) rcr jg out (bad) jmp std pop cld bnd dec cli xlat mov pushf cld xchg aas out clc mov (bad) mov fnsave (bad) scas repz psubq (bad) push push (bad) fldenv mov mov jecxz stc popf mov mov inc sbb xchg fucomip mov aad (bad) cwtl loop pop fyl2xp1 cmc (bad) jnp (bad) aas mov jg sar jecxz std xor test aas mull outsl cld pop jg fcomip cmp mov cld sbb stos jle pop mov les (bad) cli aaa cld mov jmp aas repz cld inc jg cmc lahf inc std stos (bad) sti popf jg clc lahf sti dec (bad) stos mov inc pop ja mov out das std push (bad) in iret jle jg stos pop lock lahf xor xchg mov xor lahf std (bad) (bad) push sarb call jg,pn outsl push std fcomp mov scas notl ljmp pop insb std data16 outsl lock inc mov push jg cld pop std pop ljmp xchg jg repnz sbb fcomip (bad) decl jg out clc (bad) mov loope clc cmp fnstsw jle xchg mov std repnz out (bad) clc xlat cld popf jmp repnz cmp dec clc iret (bad) arpl (bad) sti (bad) clc out mov (bad) paddb jle xchg pop out cli sbb lahf negb rorl (bad) out mov pop mov jle lret jg xchg pop jmp mov lcall jg js and test push into (bad) incb mov mov enter stc cld dec cli ja in lcall cmp lahf (bad) scas incb out fst cli sti pop je sbb paddd lahf cld mov scas popf (bad) (bad) movsl iret (bad) xchg addr16 pop std fwait ljmp xchg sar clc int xor ljmp sarl aas cmp (bad) out xchg (bad) std out sbb out fistp jg pop mul ud1 cli xchg mov loopne aas repnz cld adc (bad) pushl lock cld stc (bad) cmp (bad) sti psubq pop sbb lds sar sarl in jg cmp incb scas int adc fild (bad) aas in stc gs in stos incb push jg fcomip outsl stc mov dec lahf (bad) aad sarl out push cld cltd xchg (bad) cld cmpsl (bad) mov std (bad) jg,pn pop mov fcomip dec inc (bad) jmp icebp setae clc in (bad) out aas cmc icebp jg mov lods (bad) in lock in (bad) clc jecxz mov div mov clc pop cli pop (bad) movsb jg repnz cli add dec decb leave (bad) clc lahf jbe cmp arpl mov mov pop out incb mov fcomip pop sti dec mov jle aas sti fnstcw mov jae mov call push (bad) test clc pop stc sbb iret cmp jne (bad) dec incb fdivr sbb imul incl int3 pop jle out (bad) out pop mov int3 pop and mov stos mov aas cmpl (bad) call (bad) arpl das std pop jle pop notl push shrl mov pop stc fistpll mov mov decl leave scas (bad) arpl cwtl (bad) cld outsl push jle or sub rcr icebp jg (bad) popa jg jmp mov jmp jmp into aas cld (bad) mov clc pop mov std popf scas (bad) mov fistpll std iret jle aaa movsb cld repz (bad) in (bad) fucomi jmp cli jmp mov std mov imul pop dec mov jg push jg fcomip lock icebp iret std popf jmp repz decb aas sti sbb add inc stc aaa (bad) mov jle xlat jl pop (bad) icebp (bad) jge stc aas clc jnp mov sti (bad) cmc fcomip iret aas cld xor iret sti ret (bad) fdivrs pop cld (bad) mov xchg fnop dec cli mov scas pop cld cmp (bad) std scas (bad) jnp jmp sar cmp aas (bad) aaa (bad) outsl (bad) in aas cmc jg fistpll outsl std add aas pushl imulb dec out cmpl pop pop cld inc pop aad (bad) mov jnp daa (bad) loop in ljmp cmc jecxz ljmp dec (bad) shrl repnz clc or in decl cld mov int cmc pop std (bad) leave in addr16 jg push outsl cld out aas cmp (bad) jmp mov pop cmp int (bad) ds dec call cld cmc addr16 sar jmp jmp xchg in cli or jg stos jg (bad) (bad) aas jle pop lock pop bnd cld inc jle icebp fcomip mov out cld mov jnp pop mov aaa decb push out jnp stc jg sar out pop stc in repz iret cld cmp jg int xchg cld push cmp fstpt jg idiv xor pop pop aas std jecxz mov aas lock leave (bad) pop cld int3 outsl icebp mov jle xchg repnz cld mov std aas (bad) push repnz jmp in (bad) clc outsl xchg (bad) aas std idivb sub popf jg sti das cld out rcrl dec jge outsl lods (bad) clc mov idivl stos jg pop clc cmp dec dec daa jg dec cld scas in (bad) sti mov iret jle ljmp pushl inc (bad) daa lods fistp test fxch (bad) daa std inc (bad) jmp jg es push cld ficoml in (bad) dec cld and cld add icebp scas std das (bad) stc jg vmovdqa dec stos push push jge mov imull xlat jg push das (bad) pop pop (bad) xchg jg mov sbb lock scas std movd cmc aas clc das sar std das idiv ljmp aas jne pop cld jmp incb ljmp std jmp cltd (bad) das (bad) movsb aas lock ja add paddw pushl jg fidivr imul (bad) mov aas jle pop sti (bad) dec mov std inc mov call inc jg outsl cld (bad) sub cmc (bad) push aas fistp pop call in ljmp jg pop lahf cld lcall cli mov fistpll cmp jge (bad) dec dec pop jecxz sti clc scas clc sar sti mov jg mov fisubrl dec incb jg jg pop stc in mov cmpsl ljmp icebp dec (bad) loop std xor in ja std repnz jg mov idiv (bad) mov outsl inc (bad) pop (bad) push jg lret (bad) std pop clc dec incl pop (bad) fcompl push std jns ljmp (bad) int cld cmp ds daa (bad) fcmovnu in mov (bad) stc scas jnp ja pop dec (bad) lahf iret jmp (bad) (bad) (bad) xchg jmp loope repnz and mov mov jge mov jg scas stc outsl (bad) sbb lock sti cld (bad) cld in (bad) sarb int stc pop (bad) mov aas out lahf cli or mov decb fwait jge aaa (bad) lahf jg outsl negb das cld pop (bad) pushf pop jo xlat inc jg aas jmp cli paddd out cld pop push aas repnz std cmpsl dec call outsl std xchg cmpsl mov adc lock clc inc mov mov sarl mov (bad) mov stc addr16 cmc aad clc sbb into call pop cmc outsl insb call cmc mov (bad) cmp aas icebp paddw mov std aam loop cmpsl call aas jne paddw jg mov rolb aas (bad) das (bad) call (bad) cmc cld push (bad) idiv call dec mov lcall add decb (bad) cld pop pushl outsl cli pop (bad) sarl lahf stc aas push (bad) mov sti addr16 repnz negl clc andl pop clc mov outsl lcall jmp mov jle lods (bad) clc cmpsl (bad) jg xchg mov jg mov lds cld aaa out decl in and cli lahf (bad) fildl call lahf div iret lcall jmp std and lahf incb jg mov cmc pop incl incl iret jle psubq pop cmc dec std hlt mov xlat test das clc (bad) mov cld mov lahf dec jg das pop push cld or icebp inc adc (bad) stc ret pop cld int leave scas clc pop ljmp stc imul mov icebp dec pop (bad) rcr (bad) das jmp pop stc out cli aaa jmp mov lods imul call cld lea stc sar jecxz call outsl stc stos decb or cli idiv outsl (bad) fcos cld aaa std ret pop (bad) in mov jg push lret jbe (bad) std pop mov popf pushl jg (bad) cli sti lcall and xlat std jge lret jmp clc (bad) inc jg,pn mov stc mov fstpt out pop cwtl mov idiv popf jg pop cli repnz dec jg cmc (bad) xor inc lcall jge stc dec (bad) bnd pop jnp fnop xlat cli out jle mov inc mov lahf pop lcall aas lods clc mov fucomi mov lea outsl sti inc jle cmp inc mov (bad) mov paddd inc movd aas lock jmp mov jmp cmc mov jmp push movq stos inc iret jle mov or bnd cli xlat incl pop push mov aas cmc aad pop push mov divl std inc jg lahf stc movd in lcall lret jg jecxz jg aaa std idiv mov inc std out pop cs push pop test stc pop cld xchg clc outsl sti outsl cld mov xlat cld (bad) lahf xor sbb bnd repnz aad mov incl ljmp loope lahf cld ret incl call (bad) call ja push pop mov adc jg outsl decl jmp test cld lock std dec (bad) jmp cmc iret std xchg jg adc pop cld idiv int mull (bad) fbstp mov sti xor mov jle jg or rcrl outsl (bad) jmp inc pop repnz std dec mov loop cld sbb idivl cli and mov xlat jg aas icebp aad cld das pop (bad) jecxz repz pop (bad) ljmp lcall mulps cltd imull jle iret pushl repz lahf (bad) insl jg mov (bad) mov jg,pt leave pushl rep pushl jmp (bad) clc (bad) fwait (bad) jmp negl pop in ljmp fistpll (bad) stc inc (bad) cmp pop jg iret std xchg mov sbb mov mov lahf fidivr sti pop push fidivr ljmp xchg aaa popf (bad) pop (bad) cld (bad) (bad) pop jl pop ds icebp fcomip pop (bad) or (bad) push push cld ja lret cmpl xchg std movsl daa lcall (bad) xchg mov (bad) shll stc mov in clc lahf pushf (bad) (bad) jg lahf std daa ljmp std mov jg aas stc scas cld lahf jg cmc jg fistpll fdivr rorl lret (bad) xchg std mov pop jg mov sar jmp sub xchg mov aas mov aas cld scas cmp clc pop pop std mov xlat cld fnsave in jg idiv add lahf in std std mov call jg cld aad ja loope cli (bad) push (bad) mov xchg cmp scas rcr ljmp mov test sub pop repz dec mov jmp push jg out std lret call lahf repz xlat call icebp outsl icebp push decb mov idiv cmpl js jg mov incl mov in aas dec jle (bad) das sti (bad) lahf hlt icebp cli das std sti (bad) jmp jg neg incb daa mov or pop jae out outsl mov jmp leave mov mov ja leave aas jle mov jg mov mov inc mov cwtl in xlat (bad) pop std into jmp std jg jg jnp idivl xchg aas repnz outsl jg jg dec stc xchg cmp pop (bad) out jg (bad) inc push cmpsl jg jg outsl std mov aam repnz cld push jg neg sti xlat cld pop jnp in aas repz test repz ljmp (bad) scas icebp imul mov sahf lahf cld mov out mov sti lahf (bad) xor mov scas (bad) xchg jg mov jecxz idivl cld cmpsl std (bad) xchg in jg aaa std mov cld int jg cmp aas in pop adc ss out repnz cld (bad) pushl icebp out outsl std push std insl jg das mov repnz (bad) in call xchg jg out stc fnstenv repnz fdivrl cs jg dec sbb in aam pop scas jg push iret jle cmp jge pop (bad) negl mov dec (bad) std push jmp lds (bad) xchg out neg (bad) in cmp (bad) in jg cltd push mov imulb mov jg addr16 decl jmp das cld in mov fucomip dec std adc mov cld (bad) stc pop (bad) stc push out repz (bad) mov fsubrl mov xchg mov xlat decl mov out std loope loope cld pop fdivrp out inc out (bad) (bad) jg inc jg pop bnd repnz mov popf decl (bad) incb mov fcomip mov lahf jge cld aas stc int cwtl adc pop jg das clc sti jmp mov icebp dec stc jnp mov xor out out daa pop jl idiv out (bad) ja jg out lds (bad) push (bad) std mov cld cmp rcrb idivb jg (bad) mov std lds jg pop (bad) fsubr cli jmp inc lahf (bad) inc iret leave jle dec mov call aas jmp stc arpl icebp pop hlt pop jle out ljmp incb aas cli pop call pop hlt xchg cmpsl inc lahf negb aad jae cmpl cld cld out sti fistpll (bad) clc mov std jle mov xchg nop push pop cld inc int jg (bad) xchg (bad) aas test sti (bad) out sti jecxz jmp pop repnz fldcw jmp int dec div aas decl lds cld inc cld cli jg scas cld xchg fisttp pop clc mov stos pop out cld hlt aaa cmpsb cmc lret out je sbb sub lahf (bad) jg insl cmc fcomip jo scas cli outsl push jg ja sub das std xchg xchg (bad) call sbb fldcw idiv dec dec aas hlt iret cmpsb (bad) lahf (bad) fst mov jnp lcall scas icebp sbb mov int3 into out clc addr16 loopne cli and outsl (bad) movsb ret pop cld sti cld sahf mov scas mov jmp pop cli (bad) mov call in outsl cli jae mov pop cld mov ljmp jae mul lock (bad) stos jmp ljmp clc aaa sub pop std sti jge punpckhdq fidivr sti pop sti out dec (bad) loop in sti movq cli pop cld stos mov (bad) cli scas (bad) xchg (bad) (bad) jle (bad) ja in mov lcall iret (bad) icebp jg jg negl cld mov das std rorl loopne jecxz clc imull (bad) cmpsb push in cli pop (bad) das scas incb jle in sti lcall lods (bad) xchg addr16 das cli xchg sub push std sbb jg pop push std sbb sarl xchg cld inc mov cld mov clc iret pushf outsl std es lahf cld (bad) cli xlat cld inc call pop mov leave scas stc pop lods mov cld scas mov (bad) xchg jg out jnp repz jmp aas clc gs xchg (bad) (bad) sti (bad) jmp in cli sub inc dec fcomip jmp (bad) imul jge iret jp aas std or sahf std jae ret lahf ja leave fcomip sti xchg pushl aam cmp pop pop cld or xor lret pop clc lahf push jg negb jo outsl ljmp sbb scas incb lds (bad) std mov (bad) dec mov insl enter push lcall std pop inc lahf stc aaa (bad) xchg ja fidivrl cmc mov imul icebp arpl aas bnd cli mov cwtl aas insl sti repnz aaa ljmp in mov (bad) inc mov jg das stc cmp jg jecxz (bad) mov push pop repz inc inc scas xor aas jno xchg dec iret inc aas call push cld mov lock lock cld aad std mov pop std xchg lahf pushl std call mov in ljmp imul mov cmpsl jg lahf stc (bad) (bad) cli jmp (bad) test out std inc jle jg das sti lahf jle pop jg sti cld dec (bad) fdivr hlt lahf jg std sbb pop idiv out out aaa mov inc das cld (bad) cmpsl iret cmpsl jg (bad) pop icebp (bad) std arpl ljmp ficomp clc out std push pop repz mov in jg sarl jg pop sahf das pop jg mov aas std cmp mov in pop (bad) push lahf (bad) outsb jg out repz xchg psubd idivl jg paddb daa movaps sti or aas sti sbb std stc movd loope jl pop inc int lock dec jg lahf std inc push (bad) test aas push aas stc dec cld std jmp popf fcomip daa jg imul cmpsb cld loope cld ja fdivrs incl jmp dec fwait jmp pop cli sar fisubl mov cmpsl jg jg repnz incl jecxz call lahf cli fwait pushl (bad) (bad) (bad) fadd dec jmp ljmp xor lret push cld arpl lds dec repnz icebp dec repnz dec (bad) xchg outsl call mov idiv sahf mov inc cld xchg (bad) sti decb std mov sti adc clc in mov (bad) std gs cld mov rclb std lret (bad) fcompl stc lahf std call clc pop std or xchg clc imull lods inc xchg (bad) mov fidivr xor mov mov push (bad) in lahf icebp ja mov outsl cld or (bad) lods fbld mov (bad) jg pop stc in cmp xchg icebp jg pop hlt pop std es push pushl loop clc xlat inc aas call (bad) cli dec jle mov mov test mov imulb cmp pop (bad) mov lock fcmovu (bad) jg cli push ds hlt (bad) ja stc outsl repnz fcomip (bad) cld add push dec fcomip imul call jg std ja mov sti (bad) mov fucomip daa jg jg xlat outsl jle (bad) lods jmp fidivr leave outsl ja fistpll psubq cmp ds stos incl lods sahf cmp negl clc hlt hlt pop fdivrp mov jecxz sti aaa aas lcall jle pop out sti lret call push lds jg mov (bad) sti sbb scas fucomip ja mov (bad) (bad) out decl xchg (bad) mov movsb clc sti ficomp (bad) daa cld addr16 scas sti negl mov inc in mov (bad) xchg pop hlt cmp cmp jg daa dec das cmp stc scas stc lds daa mov hlt jmp std fsubr cmc dec mov (bad) fmul cld ss mov adc (bad) clc icebp aas cli idiv out jg jg xchg lahf clc sub lahf sti icebp pop jae (bad) (bad) pop pushl idiv iret es std mov idiv sti jle out dec mov mov stc xchg (bad) jns lock cmc pop cld ret mov std out incl loop jp pop cld ss mov outsl mov jmp ljmp cmp jg out std outsl (bad) pop mov or icebp pop cld data16 iret ds xor jg pop jns or jg cli aaa js or ljmp test das cmp clc (bad) fdivr hlt daa (bad) popf mov outsl pushl fsubrs jmp (bad) (bad) fwait mov dec ljmp out ljmp in scas cmp dec lcall jmp jg iret dec jle pop cmc push std outsl jg (bad) std scas std xchg jg aas mov fcomip call (bad) (bad) adc jmp dec push jg (bad) push pop cli (bad) mov pop imull out cld stos decl dec lcall iret (bad) cmpsb fucomip (bad) (bad) scas decb xchg (bad) lcall leave (bad) xlat ds (bad) out cld pop incb aas jge (bad) das decl aas cmc inc jmp pop adc jnp (bad) xchg ror outsl clc stos (bad) test mov dec (bad) jle (bad) cld sar stos aas stc (bad) stc ja (bad) aas cli aas sti insl (bad) xchg out jge cld scas dec pop ds scas (bad) in ljmp clc mov std ss mov xchg loop (bad) (bad) mov adc mov jg paddw (bad) stc (bad) call mov jle jg ja imul aas idivl cmpsl jle aas clc jp negl aam leave pop (bad) (bad) in push jg aaa std dec movd jnp cld pop stc jnp addr16 mov aas clc addr16 jg arpl stc sti jg out clc adc call push fisubl shrb mov sti adc idiv data16 fnstsw cli (bad) (bad) jg out fistp mov idivl std std jnp insl stos das inc mov out (bad) xchg pop sti mov in ja aaa incl (bad) sbb sti mov iret mov mov cld int fildll das cld aas jle outsl not out (bad) xchg aad push out cld pop (bad) fldcw lahf cld fnstcw pop cmc das std fdivrp aad stc pop (bad) stos pop mov icebp out jg push (bad) ljmp hlt das clc xlat jmp out xchg pop (bad) xlat std (bad) lahf popf cld lcall (bad) icebp mov ljmp sarb repz clc (bad) stc lods (bad) sti push mov mov (bad) imul mov mov mov cld sub jmp sti push mov mov aas jmp decl cmpsl not out hlt dec (bad) and cli ja lcall jg xchg std pop inc idivl in aaa incl lret (bad) pop aaa daa idivl jg mov lock clc (bad) mov aas icebp imul jg mov lahf (bad) loopne mov dec (bad) (bad) out fcomip mov pop mov (bad) mov mov out cld xchg mov jg pop imulb bnd out aad push jmp (bad) stc jg outsl pushl out (bad) popf mov jg aas pop jge pop cld mov cmc ja sti pop jle out std mov mov pop inc out std pop cli pop dec jg aas sti dec jp (bad) dec pushl stc lahf jge (bad) fwait movq mov lock stc adc scas cli dec (bad) mov (bad) outsl std mov fcomps jg ja jp xchg push dec repz mov xor pop sti outsl (bad) ja (bad) fcomip push std sarl aas sti cmpsl std xchg fldcw clc std pop decl xlat (bad) std out std (bad) jg mov jg mov cld (bad) sti (bad) xchg jg aas icebp aad cmc (bad) std mov sti out cli pop sub in jmp sti mov pop (bad) call cmpsl lret dec cli jne sti mov pushl mov nopl fcomip push cmp clc pop sahf jg psubw jg sub jg outsl cli or lahf dec outsl cmc mov clc pop mov jmp fnop outsl ljmp stc (bad) stc (bad) cld dec aas clc aas jle out jg mov repnz out js jnp gs call (bad) mov (bad) jmp cli cld dec jge mov js decl out clc clc scas cli outsl out lds std clc pop stc (bad) dec daa jg aas repnz inc xchg mov push mov imul sti out stc inc jg lahf cmc pop jle fnop cmc jle mov idivb jne cmp iret mov cld outsb jg mov out (bad) loope jmp (bad) (bad) out pop jl aas dec lahf (bad) movsl das decl (bad) dec (bad) sahf mov jg pop std jns in std pop (bad) ss dec decb sti mov clc lahf stc imul dec lahf imull incb jmp sti jnp dec out (bad) (bad) xor jge jmp push lahf (bad) mov mov jae loope (bad) daa jmp mov aas std pop std popf jg jg mov xchg ljmp stc pop jg aas out cli xchg push mov std (bad) dec push pop cli xchg mov ljmp mov pop divb xchg (bad) dec clc idiv aad insb xor scas (bad) popa mov mov cmpl mov ljmp sarb cmc dec mov (bad) fldcw lahf cmp cli aaa jle out lock cld out inc (bad) (bad) sub outsl cld mov fmuls mov dec cli addr16 std (bad) xchg jmp cli icebp jg decl inc addr16 mov jg (bad) push push pop imulb (bad) std xchg lahf pushl mov repnz decl fld lahf cld inc lahf std pop aas cmc dec cld adc das sti jmp lret xchg (bad) ja test ret paddw aas mov dec cld jmp mov jge (bad) fwait out std ljmp leave mov mov clc pop jle (bad) leave scas cmc lret jle pop dec dec cld pop inc das stc fsubrp aad lret jnp loop neg cld jge shr std repnz sti daa iret jle (bad) pop cli sti jle jg paddw stos in iret sti cmp jg dec std cmp in pop jecxz cmp sarl lahf cmc outsl call cmpsl jl leave pop lock pop repz pushf dec (bad) in out sti cmp lahf jg in call repnz dec stc xlat (bad) pop lret cld ja sub clc (bad) cld jp (bad) cmc out jg (bad) decb (bad) cli push lcall fbstp jo lahf sti popf lcall int fstp imulb daa mov scas aas out (bad) fwait (bad) jg outsl divl mov out das cli (bad) loope in ds and mov sti jnp jle aas push pop cli jmp cmc scas cmc out out aas div into jle mov jg (bad) iret dec mov xchg (bad) ja fcmovnu loop stc fstpl std adc mov clc cmp fcomip in aas clc scas pop cld fcos std aas xchg jmp enter jle xchg dec lahf std pop mov mov push jg lahf jae fstpt out dec jg (bad) clc (bad) stc test jg das sti in aas stc mov jg jae faddl jg xchg in dec ds call and std test cmc jg sarl ja fiadd sti das jle pop std aaa mov mov (bad) mov (bad) mov and hlt dec std pop (bad) cltd (bad) jmp mov cld lahf (bad) test (bad) iret cld sub mov (bad) fldt outsl jns out std push call pop lock aas icebp cmpsl decb cmp jmp std std push outsl imull loop call sbb dec dec aas cli xchg (bad) out jmp (bad) pushf into daa aad lock cltd mov idiv mov push in mov int pop clc fstpl jmp pop mov (bad) out (bad) and cmpsl jle jg iret cli sub call fistpl sub fildll icebp iret cld xor das std mov jg lahf cmc stos call outsl (bad) mov pop adc pop cld push jmp lahf cld aaa cld dec jg dec cld mov mov jg mov pandn xchg dec mov (bad) icebp jg outsl cli mov cmc dec std addr16 fcomip fwait jmp out mov aas hlt out xchg (bad) in xchg int andb ret jg mov and (bad) pop incb mov cld pop (bad) stc outsl stc sti std (bad) push inc jg aas pop lcall jg lahf dec jg outsl clc pop pop std iret inc fcomip lahf int3 (bad) fcomps cmc das fstp pop xor fucomip jg sub leave pop mov adc xlat fistpll incl mov repz sbb call imulb cli mov mov mov cmc cli outsl incb lcall loop sti stos (bad) adc push ja div cld iret cmc aas sti mov in (bad) mov xchg out jge push mov out cmp jnp xchg scas (bad) sarl jle out mov loopne cli das jl stos inc popf out jg jg das std jae (bad) fucomip pop jecxz repnz stc xor stc mov loope clc outsl push std sub lods mov out cld ja cli push mov repnz cld icebp (bad) call stos stos push (bad) dec pop jecxz (bad) lods (bad) lods pop mulb (bad) fldcw adc imul cld push (bad) fcompl jg out pushl std cmpsb pop (bad) jg dec decl pushl xlat pop (bad) outsl mov pop repnz (bad) test fwait (bad) pushf ret fldcw (bad) frstor movq iret (bad) mov lock cli mov push lret leave mov outsl cli sbb neg lahf mulb stc dec (bad) scas aas in pushf cld loop jg pop std jnp inc jg ljmp aas clc push ljmp arpl nop repnz cld jne rorl jg ja lock cld push sti push mov cmc outsl ljmp inc jg repnz in jg xchg jg scas stc push std xchg stc mov cli imul mov fisubl jnp out pop cld ljmp xchg hlt xlat cld xchg jg jecxz cmc imul leave scas notl sub imul mov aas hlt sbb mov (bad) cmpsb lahf cld cltd mov jp jnp mov sti mov test iret push mov jg aas in cmp ljmp das sahf ds sbb pop decb cld (bad) xchg pop sti mov call mov mov imul push pop (bad) jmp cmp popf mov jle push idiv inc mov (bad) jmp (bad) jnp iret aas divb incb lahf jl hlt decl std cmp pop push (bad) fwait mov (bad) ds stc aaa mov jg jmp sti push dec (bad) mov jmp sti roll xchg cld aaa mov mov sti lahf sti adc (bad) aas (bad) mov aas cld xchg jbe cld jg sarl (bad) stc psubw std hlt pop sti pop decl jg out outsl (bad) cmp mul pop clc insl inc mov aas sti vpmuludq cmpsl mov fisubr fistpll dec jle jg jnp mov (bad) dec (bad) xchg (bad) out leave lahf incl jmp (bad) mov jg xchg inc mov pop cmc mov aas sti fwait push cld dec out jle jg (bad) clc push decl fstpt imul mov popf jg std cmpsl jmp lahf cld add xchg fucomip cpuid cmc rcr idivb mov daa mov out sti adc loope cld xor fwait lahf js jmp jecxz (bad) fstps jne addr16 decl jg push mov (bad) jle jg clc das cld jp in mov jg icebp sar into mov (bad) pop cli daa (bad) pop call das sti stos (bad) mov clc imul mov pop incb jg das stc (bad) mov xchg push push in cld mov jle xchg jmp jle mov repz in jg psubd lods jg out cli xchg jg loope incl add std jg xchg (bad) std mov ljmp jg cli stos mov pushl repz jg (bad) clc fistpll jmp jnp (bad) scas (bad) out sti (bad) mov test ljmp pop jg scas stc lea (bad) out icebp (bad) inc cld imul std jne fistpll scas inc (bad) std outsl (bad) mov cltd mov (bad) movsb out std xor jg iret mov idivl outsl std cmpsl (bad) in stos (bad) (bad) mov test sti mov cmp cmpsl mov (bad) fidivr cmpl (bad) stos mov inc pop mul cld les aas mov cmp pop jecxz (bad) mov std xor outsl cld or xchg mov fmuls icebp (bad) push jg jg sti mov aas mov cltd iret jg mov jle jg pop mov (bad) jle jg mov mov call into jmp cltd mov mov out dec aas stc out push aas clc div outsl ljmp daa pop std mov ret shl aas (bad) sub mov ja jge std jg xchg aas loop call pop (bad) push jg idiv xchg daa (bad) sti jmp (bad) lahf cwtl (bad) (bad) jg out std (bad) sub jmp inc push paddd xlat pop std mov fstps std pop decl lahf cld (bad) (bad) xchg inc mov (bad) mov mov std (bad) idiv scas aas out cld jp fcmovne xchg fcomip aas inc aas out mov daa (bad) icebp jg xchg call jmp cli leave lahf imul in aaa mov out cli add call rcr repz sti jg jg icebp das stc sbb (bad) (bad) (bad) fidivrl out (bad) cmc (bad) cli popf lods pop pushl outsl clc pop (bad) sti pushl stc jne in das jle jg (bad) clc pop call (bad) out pop imul sar cmc mov fnop aas mov fcomip outsl cli out jg out cld push (bad) std outsl hlt hlt cmc inc iret (bad) call xchg (bad) jle imull stos (bad) hlt mov mov clc mov out (bad) jge ja lahf das jg jg fstpt pop cmc push std inc mov (bad) std in (bad) hlt scas sti xlat (bad) mov (bad) loop push ja lahf (bad) mov jg mov fcomip lahf cld fwait dec (bad) xlat mov sub jg lahf (bad) in (bad) idivl clc cmpsl cld inc xchg (bad) incb jnp cmpb iret std mov mov lahf cli and jnp jle aas push (bad) xor jg iret std or jle (bad) psubb fldcw adc sarl stc jnp mov (bad) popf jmp jmp aas clc int lods mov or (bad) ja loop (bad) std ljmp (bad) cli out cld dec iret mov pop (bad) pop mov std movsl mov call (bad) ljmp dec mov jle std (bad) call dec inc jmp mov (bad) xchg incl (bad) mov jg out aas std hlt ja xchg jg jmp das cld bnd aaa jle (bad) call pop out cld mov aad aas negl mov fucomip ja iret clc cld aaa inc dec out cmc (bad) es ljmp cmc fcmovnu cld das clc pop (bad) jmp lods ljmp inc fbstp mov aas loopne (bad) outsl (bad) in aas cli xchg out inc (bad) xchg incl (bad) (bad) fstpt cli pop cli pop mov lods jg lahf sti dec jg push iret (bad) xor jmp mov jecxz addr16 dec incb pop out (bad) icebp jg outsl clc ss out ds mov lahf cli movd outsl (bad) mov aas out js cmpsl cld sbb std pop dec (bad) pushf outsl std ret in hlt jg lret jg mov (bad) cmp std cld dec test stc ljmp pop sahf incl sbb std in fcomip ja mov jnp daa (bad) sti fcomip daa (bad) xor pop std dec xchg (bad) (bad) mov push mov dec decl and mov jle mov jle cld jle sti jg ja into inc ljmp jmp (bad) lea mov pop jg mov lret jnp icebp xchg jle pop mov lds jbe push popf pop jecxz jmp std (bad) jg ja icebp sbb xor outsl mov push jg outsl testl clc repz std cmp jg icebp lahf sti adc call incl stos push fnop insb cli mov fistpl jmp aas repz in stc jmp mov repz cli ss aas out pop std sbb leave out cli paddd jg out sti leave outsl lock lahf hlt (bad) insl jg dec cmc pop std out jg pop sti mov push pop std xchg (bad) iret cld sub fwait sub iret sti xchg cmpsl pushl out ds jge (bad) (bad) das cld or (bad) pushl (bad) clc cmc (bad) out mov loopne idivl sti pop das jg out decl loop repz dec stos out incb into out std xchg std xchg (bad) fcompl fdivr ja (bad) out mov fistpl sar cld jnp mov lcall mov pop cli sub push in std xchg jle (bad) jg mov test (bad) (bad) (bad) aad (bad) stc (bad) inc cld int3 xchg mov std pop jg mov mov (bad) in paddd pop divb mov out repnz std push aas idiv (bad) mov leave cmc out jp movd cld out std (bad) lahf cli fwait mov jecxz std outsl cli fwait (bad) xchg aas sahf repnz jmp lahf lock out aas stc mov cmpsl ljmp test sti outsl inc jle pushl std push mov repnz not outsb (bad) out out jmp jle (bad) pop lcall jg mov pushf repnz (bad) frstor jnp cmp fnstcw daa std push mov jmp pop incl ja cmpsl mov in incb out jle jg out sti aad outsl cld mov std sub jg cmp movsl dec jg jg (bad) jg aas and (bad) stc xchg jle jecxz sti pop std dec (bad) loopne (bad) dec jns stc scas orl cli (bad) (bad) cli aas out cli in sub imul (bad) repz in leave inc jmp lahf (bad) neg jge ss outsl into sarb sbb sub idivl mov sti std mov mul push int cmpsl jg lahf (bad) imul mov mov out cli pop dec pushl jmp lods lahf decb (bad) cmc (bad) (bad) idiv xchg (bad) call mov (bad) call clc mov aas std rorl (bad) mov pop cld or mov (bad) hlt daa jle ljmp das pop call loop mulb sbb jg negl pop inc mov sti xlat fwait (bad) sbb fcmovu (bad) (bad) (bad) aad ret cld pop jle aas out into xchg fcomip loope (bad) popf (bad) out aad (bad) cld xrelease xchg jle pop sti fildll sbb mov sti std fwait dec outsl mov (bad) (bad) das incl in jg std push jg fucomip scas std or and mov fnsave jg cmpsl jle aas stc aaa (bad) jmp ret pop hlt fwait jmp mov std cmc jg aas (bad) (bad) mov ds (bad) (bad) mov jno idivl incb iret dec aas cmc fwait cld cs ds test pop mov outsl lret xchg mov call lahf jbe loop test lcall stc mov das jmp lahf jg push ljmp jecxz cmp dec scas dec jg lahf mov cmp mov cld jp ds scas std xorl icebp aas cli loopne push (bad) cmp ret mov inc jg das cli icebp pop jg out cli jg repnz push mov rcrl paddb out in lock cld out jg leave out hlt pop (bad) in call out (bad) fwait pushl (bad) clc dec jg lahf mov pop cld mov hlt daa mov (bad) xchg fcomip mov sti cmp jns fidivr stc sub clc daa mov inc (bad) pop std pop (bad) idivb in in push (bad) pop std cmc mov das decb (bad) dec push push mov inc (bad) mov jle icebp mov std out sub decb ret push fcomip iret std xchg jg fcomip inc cld lret jg outsl (bad) cli aaa jg out jge aaa decl icebp aaa outsl decl jg outsl mov mov jmp lret iret and stc icebp rcrl ret jg iret jns jnp test notl decb (bad) sub out std cmp sar lock stc sub hlt aas jecxz clc sti (bad) fsubr mov movd aas repnz pushf (bad) std dec loop sahf push push outsl imull jg (bad) cmpsl outsl mov in cli iret jle (bad) sti jg aas (bad) in jmp stos aas neg idiv ljmp scas sti aaa xlat sarl (bad) mov mov (bad) (bad) outsl (bad) xlat cmp lret idiv subl xchg (bad) pop mov sub ljmp fdivrp addr16 mov lahf (bad) clc movswl addr16 fscale aas out clc idiv sarl pushl (bad) in iret jecxz push aas call icebp std jg jnp rcrb sahf (bad) mov std mov jg cld scas sti out flds icebp (bad) stc pop (bad) sbb stos aas fdivrp mov xchg incb lret (bad) movsl aas out into jle xlat mov (bad) incb fmulp mov (bad) negb aas out clc aaa (bad) (bad) add mov cli dec push jg idiv mov lock jmp leave push mov jg mov lock sbb (bad) mov (bad) rcr pushl (bad) pop (bad) mov jle jg cmpsl insl incl inc jg (bad) fistpll fbstp aaa mov cld (bad) hlt dec jmp jmp (bad) lods jg outsl idiv jmp (bad) in pop divl imul call sbbl mov icebp ja xor iret cld inc cmpsl fisttp ret shrl in sti cmpsl cld loope in into aad inc (bad) aaa jmp scas sti (bad) dec mov hlt iret cld (bad) mov das pushl xchg push pop stc out cld test incb adc imulb push pop jp xchg std stos jg leave iret icebp fcomip daa (bad) ljmp jnp decl pop stos cld (bad) jg idivl enter jg pop arpl out cld or aas dec sahf inc mov imul (bad) in push sti sub inc aas repz sti mov dec (bad) fdivrp in dec mov mov xchg (bad) mov cmc ja decl jmp ljmp (bad) sti pop std movswl das (bad) pop out sahf pop aas incb pop jmp in cld xor adc fdivrp pop mov das cli lea xchg pop jg repz icebp das (bad) cmp mov lods jmp lock rcrl std aad push in (bad) or (bad) dec call (bad) push jg cld and std xlat jg mov jg scas mov loop cmp cmp cmpsl jg pop hlt lret jmp sub xchg (bad) (bad) sahf jle mov ss jg aas mov mov pop inc mov mov lock sti fistpll pop push out std cmpsl jmp outsb (bad) out in idiv or cli pop jle (bad) std (bad) mov (bad) sahf decl jg popf dec decl sti out fidivr fwait (bad) and pop pop std out push pop jo dec stc mov loop addr16 fnstcw cmc dec in (bad) mov data16 dec (bad) jae loope dec jmp jnp (bad) imul (bad) stc pop rep jle mov lret cmc repz pushl dec xchg jg pop idiv cld xchg sar ljmp jmp clc (bad) call in fcomip inc jp (bad) cli out lods mov mov std and out jg pop cli aas (bad) fstpt fcomip mov das stc mov cli scas clc xchg jg xchg (bad) out and addr16 fdivrl imul mov jle repnz bnd enter jle (bad) pop cli out (bad) fdivr out mov in iret clc lahf sahf pushl aas clc aaa scas mov imulb cmpsl in cld icebp jmp pop (bad) jnp mov ret (bad) clc mov outsl stc pop push std ljmp pop (bad) rcr out sti fucomip lahf cli mov jg jnp scas mov jmp out out iret jns cmp cltd jg xchg (bad) cli mov jg outsl negl mov std pop in ret mov push (bad) in (bad) clc mov cli cli (bad) incb int (bad) (bad) jg pop mov xchg call aas repz std xchg fistpl out (bad) sbb mov fnstcw cmpsl incb icebp jg pop jmp jg lahf sar mov pushl sti aas clc mov xchg and in push repnz mov out (bad) test mov mov (bad) fldenv mov mov jg cmpsl mov ljmp leave outsl popf call xchg in jg jg lock sahf std int3 lahf clc das decl cli aas std stc jg fistpll mov fistpll pop clc inc cld fcos int3 aas jmp dec pop mov hlt mov leave rcr icebp (bad) push decl repnz cld loopne lcall mov decl loop cli mov mov (bad) cli lahf pop cld popf cmp lock call jge movd addr16 in ljmp out popf aas call std jmp aad int3 mov xchg pop (bad) cmc (bad) fldcw pop lahf std lea sti mov scas cld cmp sahf stc push cld mov stc jg cmp (bad) scas es aas jg push out sahf cld lret jg fcomip hlt leave outsl clc jmp ret push (bad) out xchg pop cld mov fldt pop dec out cld fstpt mov imul std out cld iret cld xchg mov jg enter cli dec dec scas incl addr16 scas decl jnp call decb rcr mov jg aas mov fstpt xchg push mov in out cld adc mov jg (bad) stc aas lods inc mov idivb cld dec jle fildll imul notb pop jg ja xchg jmp pop decb jge outsl (bad) mov stc xlat cld addr16 jle rcr jmp jecxz rcrl clc and pop jo mov pop inc aas jl push call loope scas icebp mov std out cld in clc inc mov push std mov jmp (bad) out jg mov (bad) aas xchg repnz aas jae neg and in lahf cld sub jne idivl mov xor pop pushl jmp dec (bad) ds inc popf aas loop (bad) pop mov xchg out cld and out addr16 jg jg pop cld aad pop negb (bad) xchg jg outsl idiv pop std (bad) call jl xlat lcall mov jle xlat jg outsl pushf cld (bad) jg lahf repnz cmp jg stc pop sti (bad) jno ljmp inc das (bad) jnp jle icebp (bad) (bad) mov jmp neg pushl out aaa cli pop inc mov jg xlat (bad) fidivrl jg mov call mov mov jmp stc lahf (bad) out mov repnz pushl notb cld push jle aas cld scas clc cmp pop repnz xchg ljmp pop imulb mov out (bad) cli cmpsl ds mov cld lahf repnz hlt out lcall sub outsl (bad) out ljmp mov repz ljmp fwait xlat jg idivl fucomip xchg (bad) sub (bad) iret jg jg (bad) cli lret inc jg fucom aad (bad) jmp les repnz outsl std adc jg lahf stc addr16 std mov std sbb jmp (bad) (bad) fsubr mov lahf incb clc addr16 pop (bad) frstor (bad) lahf repz mov inc dec lahf xchg (bad) sub mov fdivrp stos in cld das jg mov incb mov lds sbb jae (bad) cmp cli xlat jge iret in jmp movsb stc sti or out out dec pop (bad) dec xchg (bad) clc pop aas stc and call outsl cmc xlat lcall mov dec bnd outsl cli imul jns cli adc aas cli loopne stc add cld (bad) mov ds ljmp (bad) popf jg scas (bad) mov jmp scas and addr16 pop jp inc ljmp jg in scas cmc (bad) movswl outsl (bad) cmp in xchg call cmpsl sti mov std xchg outsl jmp or stc out lcall (bad) leave lahf imul call (bad) jg fwait push mov jle lahf clc jmp scas mov jle aaa (bad) (bad) jle out repz aas call das decl decb mov mov sar das dec scas jg out xchg cld sbb jg cli rcr in jnp addr16 (bad) incl dec cld mov loop repnz jle mov inc jnp lock sti ja jecxz fistpl (bad) lods jg fnop xchg idiv mov stc sub fcmovnu in sti aas (bad) aad decl aaa jle aas in call aas (bad) icebp pop hlt mov out (bad) std jnp std out (bad) push popf push aas stc fwait mov out (bad) mov insb hlt popf fucomip xchg (bad) adc (bad) iret cld mov idiv mov addr16 dec stos (bad) (bad) mov pop jg scas mull cld std jg mov cli (bad) call aaa sti sti (bad) stos fucomip xlat (bad) std aas jge (bad) jns dec mov pushl icebp pop negl clc inc cld mov cmpsl (bad) daa jg out cli jnp ljmp jge ja stc in (bad) cli jg das pop xchg fistpll repz std mov in jb pop mov out fbld stc scas cmc pop std push aas stc mov stc imul cmpsl adc (bad) mov scas mov out lcall cld loop in cld (bad) (bad) pop jg mov (bad) mov pop cld pop mov jg clc test in out lcall jg rcrl call (bad) push jle pop std imul mov iret aas jmp aad stc sti std imul pop divps fimul call mov pushl push cld loop jmp lahf dec mov lds in pop sti (bad) das (bad) sti (bad) mov aas out (bad) pop call fbstp pop repz cld ret (bad) mov imul popf mov xlat jg and pop cld cmpl push mov (bad) out loop cli lods pop cld sarl std (bad) mov (bad) cld cmpsl std idivl jg pop repz cld hlt dec cld outsl jmp pop mov (bad) lcall mov lahf std xchg push das push (bad) cld aas jle fucomip mull stc cmp call mov mov mov jg jg push (bad) mov dec (bad) push (bad) test hlt pop (bad) arpl (bad) clc push jg (bad) jg jg jmp jg pop std xchg mov pop ljmp inc jg outsl cld mov mov cli out scas incl pop std mov lret pop jg mov pop clc fwait cld in jg rcr stos (bad) cmp (bad) in mov aaa mov fcomip jg cli or sti mov jbe fistpll fistpll (bad) or int loopne cld pop scas push std stc mov incb jmp lret ja pop sti out aad jmp fcmovnb jg lahf stc das incl jg jg jns hlt ja (bad) mov outsw mov stos jg psubq lds fcmovu idivb cld imul out clc lods (bad) (bad) jge repnz cli ret stos pop (bad) out (bad) and rcrb jecxz jecxz ljmp std idiv lahf jmp (bad) cld loope sti jae push idiv fwait mov (bad) sti (bad) (bad) mov aas cmc idiv mov ret incl push (bad) pop mov insl icebp push (bad) mov fmull icebp (bad) sub in jg (bad) stos jg jg stc lahf lock cmp imul jle mov popf jle sti cld xchg fucomip mov int int3 (bad) das cli xchg fadd mov jg jg pop std mov pop (bad) mov decl in push lods aas insl pop std movswl mov call neg cld adc lahf incb (bad) stos push loope mov cld fsubrs das cld gs jle testb das inc jle out aad jg das outsb (bad) mov in std xlat incb dec (bad) loop cli leave (bad) clc pop std inc call mov mov jg xchg lcall cld sbb mov stos jmp (bad) jmp sti sub aas cmp fstp (bad) imul xchg scas mov adc outsl cmp jg pop dec dec cld (bad) aas push cld lret rcr out push (bad) out loopne jp or imul addr16 fnstsw repnz addr16 (bad) mov rcr hlt xchg mov in jmp (bad) fstpl cli setle jg lahf pushf sahf cld into jg jmp (bad) mov jg (bad) movsl clc cmc xlat cs mov mov xchg cld lods (bad) sti mov cld pushl repz cwtl aas in aaa scas dec mov aas stc mov outsb jmp fucomip ja cli in stc imul out (bad) mov icebp mov (bad) sar loopne hlt daa cld inc xchg (bad) repnz daa dec mov xchg jg pop jp (bad) jg out (bad) sbb std sti std imul les fwait dec lahf clc sbb clc xchg ljmp dec jg aas hlt cpuid clc out aaa cld inc jg fnstcw imul mov cld jnp xlat out (bad) outsl (bad) jns jg mov imul (bad) fbstp mov (bad) cli sbb jg fcomip scas std stos mov mov jecxz pushl imul mov pop in jle fwait pushf (bad) stos pop cld cmp movsl push scas cmc iret std xchg mov xchg std std push (bad) fcomps decb cmpl mov jg outsl cmc xlat pop cld pop inc cli fistpll scas (bad) fsubrs jg mov and in pop lahf out jmp (bad) call das xlat fistpll (bad) xlat (bad) nop aas in scas clc (bad) mov in addr16 mov scas (bad) out ja incl cld jmp decl sti mov pop jbe repz sti out jg das sti mov lock lahf jl cld dec incl jno xchg mov (bad) das std imul repz std cmp mov pop jecxz out cli hlt mov mov stc out clc das std sub std push jg imull xchg (bad) jno addr16 lahf jg in aas cli jne (bad) cld xchg jg xchg (bad) jno (bad) fucomip ja xor idivl aas cld (bad) (bad) xchg (bad) (bad) scas cld and aas decb jg sar scas cli sub jmp aaa jg xchg ljmp (bad) cld inc (bad) in cmc pop mov xchg lea in mov rorl lahf (bad) out popf fnop idiv iret dec (bad) cmc fcomip idiv xor add fistpll (bad) aas std mov fdivrl jmp repnz clc mov in lahf decb stc mov (bad) mov aas div dec cld sbb jg jg mov jecxz icebp (bad) (bad) cmpsb dec lret incl lock cld inc adc (bad) (bad) mov call addr16 (bad) cli cmp pop js jge (bad) xchg fcomip push jmp lahf mov idiv lahf jmp lahf (bad) shrl (bad) inc jg fcomip lds (bad) stos push std clc pop repz (bad) mov popf pop dec hlt jmp pop cld cltd fstps dec pop dec push scas cmc pop jg (bad) push jg jg das mov out loopne sti add popf pop ss (bad) loope in (bad) negl mov iret dec mov lea dec call mov mov out (bad) out lahf cli in fucomip (bad) stos jle fcomip xlat pop std mov (bad) cld pop push jg aas stc pop cld or aam lahf cli outsl dec jle jecxz in scas cmpsb cld ret mov ret aas dec stc ret (bad) jg loop cld das (bad) cli xchg (bad) fnstcw std jg mov cld stos cli cmc out sti aas cld cmp (bad) jmp mov ret xchg jg (bad) jg addr16 (bad) pop cmp std inc (bad) clc out int3 mov cld push jg cmpsl jg out stc (bad) (bad) enter jg jg (bad) cld sahf jg (bad) cld out mov mov out jmp out std inc mov decb mov jg mov clc pop (bad) addr16 fnop daa push jg pop ss scas pop popf (bad) pop cmc scas std mov in stc mov (bad) out pop mov sarl in fistp std sahf (bad) (bad) xor call pop xchg cld out cli lods jg push lret jg lds fucom cmpsl mov in dec (bad) std mov (bad) (bad) mov out ds xor cmc iret cld jle ficomp jg outsl repz mov pop cmp sbb pop repnz cld idivb jmp (bad) dec cli add sar jg mov jle into pop (bad) pop mov lock aaa cli cmp jle pop inc stc xchg div jg jmp decb pop std int3 pop lock std lds std ror cld mov in pop negl (bad) cmp xchg jg cmp pop incl into (bad) cmp add cld imul pop (bad) push lahf decb outsl incl jg fbstp push xchg (bad) sti mov dec (bad) shll pop jg das clc jge cmc iret std xchg mov call in addr16 fucomip jg in jmp sti (bad) sti jg (bad) jg mov push jg jg pop cld fstpt (bad) dec and std aas lock in cld addr16 outsl repnz (bad) stc daa mov (bad) ljmp mov jle lds icebp inc fdivr cltd mov call mov jecxz clc imul fnop fistpll sti mov paddd sbb xor pop cld cli out (bad) ja (bad) incb lret sti call (bad) iret jg dec (bad) cli jg daa out mov mov in mov out lret mov fcomip idiv movq out stc (bad) insb push (bad) out (bad) gs aas ja idiv and aaa inc mov cmpsb call outsl hlt das jle jecxz iret scas idivl (bad) lcall xor aas lock in jg in std jg cmp imulb mul lahf cli mov loop sti idiv sarb pop jg aas sahf jmp iret std popa sarl clc (bad) out cld pop jg mov jg mov pop hlt icebp jg daa (bad) loop repnz test lock std add (bad) jg pop jle mov leave mov mov fcomip scas cld repz fidivrl hlt loopne sbb mov jg jg (bad) out mov aas negb movsl mov icebp cmc dec jg dec cli xor fcomip icebp das jle addr16 inc std int jmp cld fdivrp cld (bad) call out add mov cld lods pop cld loopne std scas out std jp sarl std inc jg pop adc cld aam clc xor (bad) (bad) call (bad) aam mov adc mov lock aaa jg mov sar rcr (bad) jmp incb clc out clc divl push cld cli pop std in cli (bad) lcall movsl inc or pop int mov push mov incl and lahf cld mov loopne jg das (bad) mov lret jle pop (bad) out cli jae cld (bad) gs pop lock pop repz and jnp jle (bad) pop call (bad) neg (bad) iret sti lods jle aas std ja decb loop sti pop (bad) cs push (bad) ljmp ljmp jg div jp or mov lahf (bad) adc push mov (bad) paddb jle out jg std scas cmc out (bad) aad leave push aaa jmp (bad) mov out mull cmp mov (bad) (bad) fild out clc xor (bad) jmp popf call das (bad) push (bad) jae mov pop (bad) arpl in ja in aas decl lahf (bad) cld repnz sti push jg (bad) pop (bad) jge neg (bad) mov jg fucomip jg aas lcall clc pop incb fstpt stc addr16 xchg fnstcw cmp cs decb jg aas (bad) mov lock lock call mov lcall lock pop clc mov stc xlat call lds cld and out negb vmovdqa addr16 jne dec jg lahf dec inc (bad) ljmp pop lods pop cld pop aad stc popf aas std (bad) out (bad) in pop sti insl (bad) jg repz pushl fldcw jg jmp mov stc mov jg mov pop jg dec jle leave fnstsw aaa sti aaa jg mov pop dec jle mov dec jg lds (bad) movsl call mov cmp cmc mov aad sti daa (bad) adc sti in scas clc cmc jle in mov outsl jmp (bad) call jg addr16 (bad) in (bad) icebp pop inc jg out das ljmp (bad) aas in (bad) ljmp cli (bad) jg push (bad) jnp sub sbb out std pop mov hlt pop fdivrp inc (bad) jmp lds fucomi cld or fbstp mov in in sti jnp jmp fdivrl lret jg mov clc jnp xor std mov (bad) gs out imull pop xor pop mov xor std mov in lahf (bad) fnstsw stc das imul out cli lret cmpsb call fcomip mov (bad) jg cmp loop call dec jg cmc outsl inc (bad) (bad) cmp clc sbb leave mov sub sar repz sti push movaps stc popf jg jmp mov inc (bad) lahf jle aas cltd repnz mov call mov pop jge cmp (bad) outsb pushl mov std mov decb (bad) jg push (bad) mov pop push in jge addr16 iret sbb incb repz sti sar insl push cld ds outsl (bad) mov dec jmp jg jg daa (bad) mov mov repnz cld cmp mov (bad) mov ljmp mov xchg (bad) stos out fwait (bad) fidivr fistpll pop cld lret xlat (bad) and outsl std fwait jg (bad) or cmpl jg mov (bad) xchg pop arpl (bad) dec jle mov psubd mov icebp pop (bad) test out (bad) out lahf mov (bad) std aas cld dec jg jg lahf dec mov (bad) out mov jne repz pop ds (bad) jle pop jecxz std ret (bad) mov std ljmp cld push jg iret pushf std das mov sti stos (bad) ljmp (bad) out lahf cld sbb mov icebp xlat sti cmp stos (bad) cli mov movq pop fdivrp pop jg cmpsl jg das cli call std inc jmp mov in hlt (bad) stc dec jle aas hlt lahf (bad) jne imull pop push pop std dec jg das incb (bad) cli (bad) mov cmp shufps repnz std std jg lahf xchg cld lahf mov outsl lock jge addr16 pop scas incb jmp scas decb clc mov jmp jae lods pop jae ficom call lods aas cli pop std mov ljmp push mov testb (bad) mov aas cli repz call (bad) sarl (bad) out ljmp repnz clc into outsl imul cld cli pop cmp mull xchg inc (bad) ljmp aas lock lods (bad) mov (bad) (bad) sti in (bad) sahf (bad) scas pushl stc xchg jg in (bad) mov int mov icebp push daa std ss adc lahf repnz daa jg pop idiv (bad) (bad) out cli mov call out lahf clc iret ds gs jg lods jg jmp out mov in aas cli xchg cld xor cld in mov ljmp imull in in outsl (bad) imul das std push mov fcomps ja fcoml mov jle fucom out ja jg (bad) cld or scas std inc mov cld inc mov gs (bad) jg pop dec stc lahf dec jg pop out cld dec push aas cmc mov loop sti (bad) (bad) mov cmpsl pop cli in jg ljmp stc pop cld fwait incb stc out std jbe (bad) testl cli idiv jecxz out aas sti ja dec jle push es std scas cmp jge cli addr16 xchg jmp cld mov stc inc push mov (bad) jmp lock fdivrl repz clc and fst pop jg negb cmc push pushl mov incl out dec jle mov pop dec pop lahf std inc (bad) pop mov idiv push jg outsl lock xchg (bad) iret stc xchg jle pop hlt in jg iret (bad) fwait (bad) call popf jmp ja ja sti jg cmp pop std iret incb clc cld iret stc in xlat call (bad) stos xchg (bad) out outsl jg imul cmp (bad) stc pop jg aas dec inc scas (bad) hlt jg das cmp xchg insl push jg outsl je cld in icebp pop (bad) mov pop cld cmpl sbb (bad) xchg jg cmpsl jle (bad) dec cli sbb or dec fnop jmp (bad) cli sbb out pop clc lahf inc xchg (bad) cld daa stc idiv mov (bad) cli xchg aas out cli xchg cwtl (bad) xchg (bad) in mov call pop sti outsl mov in dec mov jg out hlt outsl out decb mov in cld cmp jg sti sarl pushl sbb (bad) mov or (bad) std (bad) clc jecxz mov adc jg mov jg psubd push mov mov (bad) scas decb iret lcall lcall (bad) jmp fdivrp cmc or lds ja imul (bad) idivl dec cld loope xlat lahf pop std jp out icebp (bad) out loope lock les sti inc scas mov fistpll ja inc jmp mov lahf std sahf pop cmc pop cld lahf adc (bad) shl xchg jg stc in cld addr16 jg fistpll cli scas iret jle push ja lcall jl ja ret incb pop jg fcomip aaa cld add (bad) cmp xor into (bad) (bad) sub mov mov icebp iret pop std dec mov jge ljmp std push mov das cli xor shrl jmp cld stc (bad) fucomp mov inc jg out jg lock in (bad) xor jg paddd and pop mov or std jnp (bad) addr16 adc loopne inc jg fxch jg dec (bad) pop out jle push das clc mov std mov loope cli mov iret (bad) (bad) jmp sarl std jp ret lret in ja add inc (bad) clc (bad) (bad) in aas call (bad) aas ljmp mov sbb dec jg pop jae mov jp sar repnz call jg hlt ja jge jne inc nop (bad) decb fcomip addr16 aaa jg negb jle pop stc ja repz mov jno shrb sti aaa jle in ja repz cld inc pop pushl mov cld addr16 das decl stc das jnp iret cld mov div ljmp mov (bad) pushf (bad) cld pop scas jle jg fistp outsl xor dec lahf sbb cmp pop mul loopne (bad) adc dec pushl repz cld push mov stos jg ljmp push fistpll mov mov jecxz cld fcos icebp cmp das jg dec dec jg cmpsl std sub fidivrl addr16 in cld sbb out cli cmp dec mov ja std scas ds push mov jg out std (bad) cmpsb jg pop cmc (bad) xchg pop (bad) ljmp and mov lahf std cs fcompl (bad) std jp sti pop stc cmp (bad) mov dec hlt iret (bad) cmp mov sarl scas cli int loop addr16 push mov xchg mov das fdivrp sbb (bad) leave pop stc pop (bad) push cmc aas cmc leave pop repz dec dec cmc lahf hlt xlat std xchg repz ljmp (bad) repnz xlat cld mov jno push lds lret cmp aas cld out inc rcll aas out (bad) cli (bad) idivl mov call (bad) stc mov jmp icebp scas cmc mov (bad) fnstenv std (bad) stos jg pop std xor scas mov aas (bad) (bad) lods lcall (bad) mov out incb ret scas jle aad xor xor testl out fsubr cmc popf aas cld push mov imulb test cld mov aas clc leave jmp cli pop jge dec std out (bad) push repz jae push out std insl jg mov jg cmp mov cld fldt jmp aas div clc sar lcall (bad) out jl xlat mov out mov mov push cld sar jmp mul call rcr decl in decl jecxz cld aas clc rorl dec loopne lcall ja hlt out and lods aas clc outsl clc ret (bad) fdivrs out std dec jg aas std das int3 (bad) fidivrl out das pushl loope sti lcall out sti or pop std iret xchg jg (bad) jae std xor fnstsw idivb jg scas cld xchg (bad) fldcw jg leave mov (bad) (bad) jg fnop xchg std cmp xchg aaa jg scas stc stos jg out std pop jg (bad) std out js hlt mov mov pop cld add pop std mov (bad) and xchg in jg cld mov lahf cld inc mov (bad) gs icebp das (bad) in jle (bad) cli lahf cli jmp (bad) aas in iret clc xchg ljmp cli addr16 and or adc (bad) sarb popf lahf cli sbb aas sub stc sub sar int lock decl xchg imul clc cmc scas jns pop (bad) mov stc aas lock call decl (bad) clc pop jb dec cld lahf (bad) in outsl cmp mov push not das (bad) mov mov loope outsl repz cld les mov aad icebp pop std ss icebp jp (bad) sarb aas jg aas decb outsb std mov jg mov jle aas loop cld insl (bad) mov (bad) and mov jle jg das dec (bad) out paddw (bad) push cli sbb mov cld pop cmp (bad) (bad) fnstsw aaa mov (bad) out outsl clc mov fildll std repz cli cltd aas adc movsb icebp xchg jg pop sti push scas pop incl sti push std adc sarl repz dec imulb pushl jg aas jecxz clc and mov scas stc fucomi incb clc das jns stc out std add cmp (bad) loope jg lahf cmp jg cld mov jg pop inc mov ljmp lret (bad) out jg pop lock cld mov arpl (bad) outsl sti mov daa jg pop (bad) jecxz std jno jle stos jg repnz jl das js stos (bad) call je ja out adc (bad) mov push sbb pushl jne fwait jg aas outsl mov jg inc incb dec (bad) xchg rcrl repnz inc jg mov idivb jae jg ja std sarl icebp out pushf cmp iret jg scas (bad) xchg jmp xchg outsl mov in fcomip mov (bad) call popf jg out stos out (bad) (bad) jg pop pop std popa jg pop pushl cld cmp cmp and out repz mov cld (bad) (bad) fdivr out (bad) mov (bad) (bad) jmp (bad) clc mov ja arpl repnz xor stc mov xlat (bad) jnp rcrl std push jg out icebp bsr arpl pop repz jg addr16 aas repz stc leave (bad) in cli mov and aad or idiv ja sarl jmp fcomip idiv out mov jnp pop popf cld xchg aas mull aas (bad) sti lcall xlat decl addr16 inc jle jge (bad) cld sub mov addr16 lds jl iret cld and cmpsb jmp das clc jnp into (bad) shl in cli cmpsl (bad) in jg pop cli (bad) (bad) cmc dec xchg xlat mov out lcall pushl fistpll jg (bad) (bad) cli dec jle mov inc jle (bad) (bad) mov stc mov push (bad) std outsl push aas std setg ja (bad) mov mov jmp dec cmp jmp and (bad) loop in psubb cli add (bad) aas hlt pop jg pop (bad) std cld sti jg aas push cld add out cli std (bad) push lret xlat jg stc iret call divb cmc rcr loope outsl jmp adc aas icebp (bad) lea repz sti lahf repz out cli mov (bad) je mov fcomip pop incl (bad) mov iret sti daa jg jg cli pop std push jg (bad) outsl stc out out idiv add jo jg xchg int3 pop lcall in dec aas xor out xchg jg jg pop cmp fcomip dec cld (bad) mov outsl jle mov out lcall enter dec inc pop (bad) pop std inc jg fnop mov test iret jg scas daa int clc sarl pop call gs out cli pop sahf dec xlat mov aaa cld jg,pt in mov hlt imul jmp std (bad) psubw mov (bad) mov (bad) (bad) (bad) sar pop repnz cld lods jg push aas cld ret (bad) ljmp fnstcw cld jnp (bad) adc jmp les out cld dec (bad) fidivr lahf inc jmp mov lahf xor inc (bad) jmp xchg daa jg push pop incb jle lahf std xchg ja (bad) (bad) and mov pop dec (bad) mov outsl mov ret outsl std jg (bad) loop call mov lock dec outsl std sbb mov mov neg stos jg cld jg (bad) call fwait call fwait cld incb jg out (bad) pop std addr16 std ffree jg (bad) repnz ud1 cld cmp lods pop decb jge or jg out clc aad mov jg cmc stos lcall xchg (bad) out cld jae sti (bad) stc cmpsl (bad) daa jg popf hlt mov clc jmp xchg aas in clc lahf ds sti out jge (bad) incb addr16 mov jmp (bad) jnp iret lcall jge daa ljmp sarl cld insl inc out clc (bad) cld addr16 stc xor int pop bnd push jg inc (bad) std mov jnp rcrb cld jno sti pop hlt xchg fistp (bad) jge jmp aas pushf ljmp sti (bad) rcrl cld xchg iret incl lret aas in jl inc dec jle iret (bad) xchg fistpll xlat pop std loope (bad) imul push (bad) jg mov sti pop (bad) stc cli xchg aas out mov (bad) (bad) leave out negb cld jmp hlt adc incl jae mov xchg (bad) es incl cld lahf mov (bad) lcall jmp (bad) dec cli (bad) jle sbb loop incb aaa (bad) pop jg lahf stc repnz cli ljmp mov aas mov int3 (bad) scas (bad) mov jecxz pop testb ds cmp mov sarl pop mov imulb scas inc (bad) sti call nop in in in pop fdivrp popa mov scas dec fwait (bad) jg jmp int mull call aas clc lahf jge xchg cld mov lret jg outsl (bad) fstl jg dec aas std imul call sbb push pop fsin in incl clc xchg incb stc or jmp cld out repnz jg clc jecxz movsb jmp xlat stc cmpsl jmp jg fcomip jnp inc (bad) fistl push scas pop (bad) stos inc jmp out pop clc cmpl (bad) out scas (bad) sti ja ret (bad) (bad) aas cld test mov ja mov leave dec out notb pop pushl xchg pop push pop repz (bad) clc pmaxub ja fstpl fcomip ljmp aad cmc jnp xlat mov aas into stc xchg xlat jg stc fistp mov (bad) in pushl ljmp pop hlt stos jmp or (bad) es cli pop icebp (bad) push jg pop repnz cld sar lret dec jg outsl in decb das sti test cmpsl jg lahf jmp sti das stc xchg fcomip (bad) in jle pop imulb dec paddd pop cld push jg pop repnz cld xchg cmc pop dec idivb jg xchg mov cli pop push jg out mull cli push out cld (bad) xchg (bad) stc scas (bad) lock jmp jmp ja sahf jg pop mov daa in (bad) pushl (bad) cmp fbstp iret jl shrl sub popf mov in cmc (bad) std outsl mov ljmp mov mov cld sahf (bad) jmp jbe icebp jmp jae leave outsl negl xchg lahf std mov out insb ja test idiv jno in cli jmp jb (bad) hlt jg (bad) jecxz cld imul out icebp (bad) pop mov pop call jg (bad) and cld aaa decl (bad) clc mov enter idiv les cld pushf (bad) movd scas js daa std cli cmp aas stc inc lcall call (bad) in ljmp repnz clc or std lret in jg dec dec out (bad) fnstsw cld inc scas sti out (bad) push (bad) jmp repz mov repz jmp aas je paddb call lahf cli int lcall mov dec int3 dec jle mov repnz std mov repnz sti lods push jmp scas decl mov idiv ret sub fwait jg jg pop mov scas mov repz lret out aas cli jne cld fcos push repnz push push jg outsl cmp call mov out call outsb inc pop jg in stc jnp pushf (bad) in repnz stos jg aas mov pop dec fildll out mov adc mov add call loope mov aas in jg cli inc (bad) fdivrl test mov (bad) mov (bad) outsl jge xlat std loope rcr cld aas lods (bad) in call icebp aas cld cmp pop (bad) loope (bad) jg vpandn jnp (bad) repz (bad) mov outsl cmc sub mov lahf std lret (bad) jmp sti cmpsl inc (bad) in fcomip push push leave outsl mov cli pop sahf cld sahf jg cli xchg sbb lcall ret out mov std or aas loope sti push (bad) scas ljmp mov (bad) fbld cmc xlat (bad) push jle pop sti pop (bad) ljmp aas pushl cwtl jmp jg xor (bad) (bad) pop dec repnz idiv lahf mov jmp stc aas jle repnz addr16 push mov std das (bad) out jg iret cld pop xchg imull addr16 clc in (bad) stc (bad) (bad) jmp std pop clc lods (bad) out loopne (bad) repnz (bad) lods jg idiv jne jg lahf mov outsl mull in out cli rcrl pop lahf cld jne cld mov mov jg pop (bad) sbb out stc jg scas ja sti dec jg aas in sti pop out (bad) cmp daa mov decl stc outsl sahf popf lods (bad) mov jle fsubrs cmp jg cld cmpsl std loop mov mov clc jmp pop mov cld sub out jns mov cmpl aas call lods (bad) addr16 stc addr16 fnstsw cli aad clc aaa cld jg,pt lahf clc pop jl out (bad) cli mov stc mov lcall inc jg fcomip scas stc lret jle cld in jg outsl (bad) mov aas stc xchg out cld sahf (bad) call lods dec decb stc test (bad) std add imul ja cmp ret mov ss jg lret incb std lahf fldcw dec icebp sarl pop cld inc mov (bad) xor mov dec std pop jg (bad) call jg jns lahf adc (bad) mov pop sti das cmp lret jg jg fstp icebp jecxz pushl cld jg std fstpt (bad) iret cli ljmp loopne jle out cld inc jg repnz lahf stc or mov loope cli jmp mov vdivsd mul outsl (bad) in jle jg xchg dec fild cld out pop std hlt pop lock pushl ljmp sti mov pop lahf std fnstsw dec (bad) rep hlt xchg loop pop sbb jle pop call sti xlat mov pop repz incb push (bad) ja sbb mov cmpsb incl mov jg idivl mov inc pushl out popf jg fnstsw jg clc daa jle lahf hlt pop lcall mov (bad) fildl sbb pop jg into in (bad) (bad) popf mov aad fistp inc cli out out jnp (bad) call enter call std outsl dec inc lahf repz push (bad) fcompl (bad) lea repnz repz imulb sti add out dec jg out xor sti fildll jmp push das sti pop push (bad) in call cld dec lcall arpl out cmc out out std iret aas clc pop mov ljmp (bad) popf mov (bad) call jecxz loopne jge aaa (bad) fidivrl stc lahf call pop repz repz sbb lods jg (bad) dec cmp arpl std arpl lret das mov pop sti ja inc mov cmpsl (bad) pop adc in lods push pop lock lcall repz (bad) sbb mov jg in ljmp cmc scas push out inc pop (bad) jg (bad) stc paddd mov std jle leave jg out decb decl mov fcomps ja (bad) ds jg lahf cli xchg push cld cli in hlt push xor aaa jg std (bad) out std into pop inc pushl inc mov pop lock (bad) xchg (bad) sti mov cmp (bad) lcall jno jmp into aas hlt daa (bad) ljmp jns icebp mov das fsincos pop push aas hlt pop cmp sarl sti aaa incl xchg push in cmp arpl (bad) fwait (bad) xchg xchg mov mov ds jmp lods out std scas pop (bad) fisubl call repnz lock inc mov cmp dec mov xchg incl jle aaa std cmc decb mov inc (bad) jmp jmp leave mov loope dec and icebp out stos pop lock cld sarl stc xchg pop fs std cmpsl (bad) sti out negl pushl rorl mov int3 pop stc fwait decl mov fnop out inc aas cli (bad) jecxz mov out cld negb mov sub (bad) push jg lahf icebp xlat jl in jmp mov cld ja out push mov clc (bad) std mov (bad) in incl (bad) sti (bad) call sar (bad) (bad) idiv adc call xor pop call jg cli jg and stc scas push pushl fiaddl dec jg xlat (bad) das jg out aaa (bad) clc pop sbb pop lock incl ret pop clc xchg pop jg in (bad) (bad) jmp lock incl mov cld arpl in pop lock cmp cmp out decb mov (bad) xchg (bad) jmp jmp adc das cltd (bad) aam js dec pushf dec push cld mov push pop cld fisubl bswap scas (bad) xchg hlt idivb movsl cmc fwait aas loopne mov mov pop (bad) lods (bad) sti out neg aas (bad) stos (bad) stos in pop std paddd aas lahf cld xchg cld mov cld xor mov xchg stc std jle jg jge iret std loopne jg jmp mov (bad) fcomip pop sti dec (bad) jmp cmp (bad) stc and fildll in (bad) push jg aad imulb jae (bad) jno ljmp setge xchg into jg fistpl (bad) incb adc std cmp incl ret fnop cmp push call (bad) std movsl push scas icebp jg mov cld fcomip lahf decb lods aas call mov jmp std ret jg fucomip pop (bad) jbe icebp mov lock decl cmp jns daa (bad) jmp sti sti cld out mov repz clc sub (bad) std inc (bad) xlat sti jg mov jg mov pop mov out sti outsl xchg fucomip dec (bad) popf jg loop fistpll jmp jg mov in idivl cld ja clc dec (bad) (bad) mov out jg loope mov (bad) push (bad) aad jb jnp and jg loop (bad) iret decb fnstsw lock xchg (bad) movsb pop jmp clc or mov fdivrp repnz push mov jmp testb iret (bad) cld popf (bad) cld mov jmp enter std xor aam mov pop mov incb fistpll stc add jg pop cli inc aas stc (bad) mov ja aaa (bad) adc inc fwait decb gs dec push aas jmp jg pop repnz lds idiv sbb scas out jle mul push (bad) cltd push leave pop cld pop jge mov repnz jg push idiv imul int3 mov aas std lcall in sti jge in in jg pop mov scas cld cmp lcall in cli xchg std scas nop jg xchg mov stc (bad) decb mov decl idivl dec jg scas decb test sti sti ljmp cmp jmp mov mov iret cld add cld idivl jl out xchg (bad) ljmp incl int std pop jg aas icebp (bad) mov cld sti scas (bad) (bad) fsub lahf hlt xchg std lods jg jg aas (bad) sti jecxz jg jg stc outsl clc aaa cld mov (bad) clc xchg aas jae imul jge idiv mov jg mov push (bad) mov rorl xlat aas icebp inc std sbb (bad) out repz das (bad) cld outsl std out sar rcrl mov ljmp fcomip jg icebp stc mov push mov (bad) inc lcall inc call (bad) std iret (bad) push mov idiv xchg (bad) scas cmp pop dec sub icebp (bad) pop mov (bad) sahf cmp fisttpll mov outsl clc pop dec inc jg iret cli sti (bad) in mov stos (bad) sti jg (bad) (bad) jmp xchg inc mov push lahf pop aad cmp lret (bad) mov cmc xlat incl lahf (bad) lahf cli dec jle jg lahf decl jmp out mov jg pop hlt xchg (bad) mov cmc fcmovnb pop jg pop (bad) nopl in pop call (bad) cli lahf sahf (bad) fnstcw rcr sti std adc idiv push jg cli iret (bad) insl mov cld (bad) jg outsl repnz (bad) out div and mull (bad) cltd sti in jg cld push mov into fistpl clc mov and (bad) (bad) fstpt in repz jmp jnp neg std das cld pop movd mov push aas das stc fstpt bswap (bad) mov imul decl jns das incb cmp out jg popf pop out (bad) adc fistpll std fwait (bad) lock (bad) stc lret jle lahf cli (bad) mov pop cli idiv or jmp push das jg aas in outsl cli lret jmp int jle das std (bad) fstpt jg mov pop mov dec inc jg das dec (bad) movsb lahf (bad) mov aaa dec pop mull test loopne js (bad) stc push scas push sarb loopne cld mov cld scas aas std imul loope std lret mov (bad) pop std push (bad) in pop je outsl cld ja outsl cmp mov jmp cmp (bad) mov jmp jg jg imul idiv movsl (bad) in outsl hlt daa cld sarl das jle mov aas jecxz (bad) aas loope std adc in mul jge pop (bad) std out lock (bad) fstpt pop repnz std dec mov decb mov cli daa std adc paddd mov push decl mov (bad) lods aas repz inc in clc (bad) xchg mov aas decb outsl insb (bad) jle repnz jg aas std aaa std mov sarl cld mov arpl ljmp mov mov stc icebp idivb iret decb out cld repnz clc mov lret push aaa mov fcomip pop std jae dec (bad) shrl out cli sbb idiv jge in ret jmp pop inc (bad) idivb mov in in out repz cld imul hlt xlat call std inc push aas cmc jnp dec push jg out pop repz sarl loopne (bad) aas (bad) (bad) jg out clc dec pop cld iret lret fucomip mov ficomp cld sbb jl clc aaa pushf (bad) cmp sti pop std paddd mov (bad) mov (bad) clc cmpsl ljmp (bad) cli bt out decb loope out decb ret outsl stc pop mov icebp fcomip loop aas jo (bad) clc mov scas sti inc incb jg cld pop clc adc out mov movsb (bad) decl jnp mov decb push std mov scas xchg (bad) repnz aas cli insl stos aas imul dec xchg aas lret cld std dec jg pop cli popf aas loop lahf std (bad) out imul (bad) (bad) mov (bad) mov aad jbe hlt shll scas clc pop ljmp std jae mov (bad) test std repz aas stc psubb das push hlt das sbb jae fcmovnb jg inc cld sti mov pop inc jg outsl bnd icebp stos pop (bad) out jnp aas (bad) mov stc outsl (bad) or aas jmp incl repz cmpsl cld jne out dec lahf std scas dec jg aas lock inc mov inc clc sti mov leave jg pop push (bad) and mov jmp xor out sti scas push sarb jg mov inc push stc outsl lock (bad) sahf jg in (bad) std jg pop clc lret jle das sti popf jle out imull aas cld paddb in imulb std xchg (bad) mov (bad) (bad) loop in cmpsl jmp repz mov icebp in jmp lahf jp imul popa mov fdivrp jge decl (bad) das cwtl dec jg lahf jbe inc cld adc mov pop std pop mov (bad) jbe aad mov lcall (bad) mov loop cli ljmp aad pop (bad) jg push jg mov (bad) fucomi cld cmp repnz decb outsl decl lahf (bad) insl (bad) in loope cld stos jle pop stc divl pop repnz std mov pop (bad) test std scas jle lahf clc jmp (bad) jmp lret lock lahf cli dec out outsb std mov in mov stc das cli xchg mov fistp (bad) jge incb jg mov aaa std fnstsw jmp (bad) loopne sti (bad) push jmp repnz dec jle outsl icebp jnp xchg jg outsl hlt mulb (bad) mov cmp stc stos jnp in aaa stc jne scas pop xchg xchg (bad) decl xor pop jge fwait cld sub jg (bad) sar lock jo das (bad) ja aas (bad) in jg dec cmp aas (bad) in (bad) psubd cmp xlat jg mov inc (bad) in ja mov mov cld sar out ds jmp cld aad sti mov movsl jg mov icebp clc (bad) jmp fwait (bad) hlt aas notl cmp mov jg std fnstsw cmpsl (bad) mov repz xor (bad) mov sti std jg jg aaa stc xlat into inc jg lds out lcall repnz inc aas out clc repnz jg cmpsl jle fucomip push pop (bad) cmp (bad) incl jg pop (bad) mov pop iret jle jg das (bad) and jg jg out in decb jmp int (bad) mov cmc pop cli arpl sarb pop stc cmpsl jle inc jl dec cld fnstcw jg mov sbb mov mov ja xchg aas hlt ja mov icebp mov decl ret jg cmp xchg call out jo sbb int (bad) std lahf decb std out (bad) in lahf cli cltd cmc dec std idivb and out daa idiv xchg (bad) das stc jnp in incb (bad) iret pushl cld mov ljmp push (bad) call in ja mov cli ja std mov jmp out scas clc cmpl addr16 jmp call (bad) loope jg icebp outsl (bad) (bad) (bad) adc pop std dec (bad) fcompp out repnz aas jmp sti push call bnd mov out cmp push (bad) ljmp leave lahf cli jnp jge hlt xchg pop clc jnp cld popa xlat jg aas lock aas imull gs jg iret cld mov add fistpll (bad) fcmovu cmc aaa adc cld (bad) stc (bad) in pop ja push std inc jg das stc (bad) sti out cmp cmpb jmp jnp sti std fnstsw (bad) mov std pop cld test (bad) jmp cld cmp fwait push cld lods mov (bad) fucomip pop sti sub outsl cli repnz inc jle aas negb sti in (bad) sti aas hlt mov jmp pop clc jnp popa (bad) jmp push pop repz cli hlt lahf pushl scas stc out jle idiv insl jle fcomip lahf incl jg mull loopne dec outsl out (bad) sar and lcall out xlat std pop jle fnstsw ja lret jg aas (bad) jg xlat pop int3 (bad) fcomps aas push jle pop sti jne repnz mov call in cld arpl les xchg jg dec repz std mov mov xchg incb mov out lahf cld aad mov xchg pop repz lcall fstps mov (bad) sti pop dec (bad) jmp cmc iret push (bad) repz stc mov cmp cld outsl stc insl scas (bad) call fcomip call cmpl stc (bad) cmpsl cld addr16 call loop call jg add mov jmp jnp mov outsl mov aas mov (bad) in outsl cli mov lahf cli inc out (bad) and or jle pop jg (bad) idivb (bad) xchg fucomip das clc in clc (bad) jg xlat std pop push jg sub jmp out pop repnz lahf jmp mov outsl (bad) jge les hlt fwait dec decb in adc (bad) aam lock std inc jg outsl cld mov (bad) sarl pushf fdivrp push jg xlat cld adc jmp (bad) mov inc (bad) pop jle pop (bad) cmpsl out (bad) clc mov fstl aam mov pop jle pop imul (bad) mov out scas sub push (bad) stc lahf sti imul (bad) outsl jl cli pop inc jg mov mov test in std or leave fnstsw pop sbb popf push fistp add repz cwtl cld jns stc push imul cld (bad) push sbb (bad) aas iret jmp sar std cmpsl incl sarl aam in scas std leave aas jecxz mov cmp fidivr aad in repnz xlat cli xor aas clc lahf mov mov notl fmul mov cld mov sar cli pop call in cli leave lahf std jnp imul cmp in (bad) (bad) sti jle fcomip (bad) cld outsl jle pop cld (bad) cld dec out jle (bad) jmp (bad) xlat jg fstpt ja sub xchg mov pop aaa jg lahf sti pop cld mov inc cmc or std sub stc pop mov jecxz std dec std add mov sub cli aas out (bad) cli pop push (bad) pop jg fisttp pop scas jle (bad) aas aas std inc (bad) stos jg xlat sti aas incb inc mov (bad) cmp dec cld aaa jg fist mov mov xchg (bad) (bad) mov jge repnz (bad) jg outsl hlt pop nop std cli arpl jg aas out mov clc mov das daa std std (bad) cld sbb push cld jp rorb ds sar iret lahf dec jmp mov jmp fwait call stc xchg clc paddw call mov imul (bad) jnp mov out cmc jmp inc xchg pop out stos mov incl jne jle aas icebp (bad) jl fstps ljmp decb lret (bad) in out cld dec sub jno (bad) repz imul out decl pop cld (bad) jg pop mul mulps xor outsl sti fistp std or fisubr cltd cld sbb outsl negb (bad) xchg jg fisub in jg outsl iret inc inc outsl lock cld inc mov in das stc cmpsl jg jg out clc dec jg jg clc cld aas decb sahf int fdivrl dec cltd jmp (bad) xchg jg pop imul das std test ja dec jle stc negl cld int in leave das sti lds xchg jg outsl repz sarb jmp decl mov lods aas in pop decl mov pop cld mov out dec std (bad) sti dec decl clc outsl (bad) ja call pop repz cld jns mov (bad) lahf jg (bad) jnp lcall out cld xor stc lret (bad) mov icebp xor cmc out cld jecxz jmp jnp mov outsb cld xchg lahf sub xchg (bad) stc push fdivr pop incl not ljmp cld sbb ficomp negl or jle repz (bad) mov stc (bad) (bad) mov aaa mov jg (bad) sti stc outsl jge aaa cld lea std sbb fcomip or aas insl hlt pop (bad) adc idivl lret lret idivb std push inc addr16 jmp clc jnp repz push cld bnd or repnz decb ljmp std mov mov pop decb int push pop decl (bad) out dec std sarb (bad) mov pop jle dec cld and sti mov sti jle pop (bad) in jg (bad) in decl pop incb clc jecxz out mov jle mov sub pop incl out mulb std mov loope lock cmp sbb pop cli jnp in out pop cld imul (bad) jecxz cli (bad) ljmp pop stc (bad) decb loop dec cld mov (bad) sbb repz push loope dec std fcomps ficom inc jg scas push cmp aas cli in (bad) in clc xor mov repz (bad) mov jmp mov cld adc aas out outsl stc xchg jg mov test (bad) mov shrb ja cli (bad) jmp jg lahf sti daa call das mov mov cld aaa (bad) jmp loope jnp,pt out cli std dec jle test gs ljmp pop jge jg dec lcall dec std fwait push add fistp ret popf aas sti scas loope cld pop mov jg ljmp cli jmp (bad) mov (bad) xchg jg div jl cld (bad) sahf jg idiv fcos ljmp loop cld scas mov push (bad) out aas mov jnp sub sub in icebp aas inc dec (bad) ds jl (bad) lcall mov call xchg (bad) pop pushl lahf sahf std inc pop mov mov pushf cld mov out mov xor (bad) cli dec (bad) mov pop cld pop mov jmp jg pop mov pop std lea leave mov or push jle (bad) outsl stc dec decb outsl dec jmp jg rcrl fisttp push cmpsl lcall aas std out lahf sti fwait int3 jle jg fdivrp xor pop incl dec dec jmp (bad) jge aaa cld lret (bad) in das (bad) fisubr sub pushf aas loope cld adc inc aas sti pop cmp sti jle pop repnz in pop sti cmp std xor pop icebp xlat push lahf and mov (bad) jg repnz cld push (bad) scas dec repnz pushl rcrl out jmp (bad) das decl inc jg push std xor pop cmc mov (bad) sti jmp out cli (bad) (bad) stos (bad) out aas xchg (bad) sarb das cld bnd lahf std inc jg addr16 lahf div cmc pop hlt xor cld lahf jle mov dec (bad) xchg aas in addr16 fisubrl or icebp idiv gs jg pop hlt inc cld aad std mov sahf pop lcall das std daa outsl jle lahf idivb cld inc inc jg daa incb mov lahf (bad) adc xchg mov sti jg out std addr16 cli mov das inc outsl hlt das cld pop call cld daa (bad) mov jg cmp lahf jg pop cli (bad) mov ljmp push push clc out stc mov ret pop jmp pop (bad) fdivrp fdivrl (bad) mov imul mov std hlt pop stc aaa decl imul stc dec (bad) out pop std loop decb cli ja std ljmp (bad) sarb call dec out lcall jg mov mov lods mov cld (bad) (bad) fistl pop cld std call je out std xlat daa movsb mov cld div loopne dec cld lahf ljmp stc jg mov jmp fcomip imul ja sarb pop cld cmp sti jae mov in lock fwait jg aas ljmp call jge jmp xlat daa (bad) fnstsw aas out (bad) fwait inc jg hlt (bad) mov ljmp (bad) sti cli lret decl icebp fwait cld and (bad) fcompl dec cld jbe jg out sti dec jg pop jbe jmp adc jg fcomip inc incl ret pop cmc push call negl cmc jg movsl mov decb idivb cmp mov fiadd inc icebp pop std push (bad) xchg pushl jg pop dec incb int idivb ficom std out mov into lahf repz hlt (bad) in clc (bad) fnstcw imul pushl cld scas scas (bad) hlt jg (bad) clc addr16 (bad) decb lock jmp test (bad) jle lahf cmc aaa cmp jle pop clc out std xchg mov test mov decb mov xchg stc aas stc ja das lahf std out mov (bad) cmpsl incl call scas (bad) loope stos std jne (bad) jg (bad) cli xlat jle (bad) stos lahf cmp (bad) xor lahf pop out cld push jg jg mov xchg (bad) idiv xor popf lahf clc in std mov pop mov in dec dec mov repz xor aas std push std sti jg mov (bad) fdivrp das sti xchg cmpsl jg jg (bad) push mov (bad) cld pop inc aas dec icebp ja ja sar lret out cli sar and jg mov scas jbe xchg fxch jg lahf decl jg jg das jl mov (bad) mov dec mov pop jg pop lock mov pop div pop std xchg mov scas sti xlat (bad) mov (bad) std mov (bad) std icebp jg idiv (bad) iret cld cmp mov (bad) psubd (bad) out stc pop inc (bad) in (bad) clc mov cmc lahf neg cld cmc and stc (bad) outsl hlt cmpsl mov aas ljmp enter dec mov mov sbb jg cld in idiv dec repnz call repz idiv mov imul std ja jecxz mov lahf repz mov lahf cld mov push adc into mov cld aas mov xchg jg sti cmpsl std cmp rorb (bad) iret (bad) (bad) pop icebp dec aas (bad) out ja repnz (bad) lods mov das pop xchg (bad) sti dec inc aas repz sbb push mov xor icebp (bad) xor and (bad) decl sti jle (bad) dec std (bad) sarl ljmp mov ljmp aad bnd fnstcw outsl cmc idiv jle shr inc stc mov repz (bad) stos jg das std push cmc mov mov daa inc jg mov inc outsl cli sbb mov std (bad) repz push push jg clc dec pushl jmp std xlat std inc mov fwait std aad lds aas imul aas in pop std (bad) adc call (bad) jg (bad) idivl sti dec fcomip dec sti jmp in mov jg iret cli movaps icebp das outsl std sti daa (bad) ficoml jg jg ja mov incl pushl (bad) sti int sti aas lods jle les (bad) icebp fucomip (bad) stc lahf (bad) sarl sti ljmp pop mov (bad) cmp xor out and jg in mov jmp inc out clc pop cld xchg pop jg aas stc cmpsl pushl mov dec pop cld adc call dec cli imul out std mov ds sub cli daa out std in cli addr16 jge clc (bad) inc out loop hlt (bad) pop mov pop incb or fbstp fnstsw out cld pop mov push popf pop sti cmpsl out std mov bnd pop call (bad) repnz jg imul in stc call add jmp dec dec jg pop (bad) push shl mov lret sub shrl mov ja jg fcomip out stc fwait jg mov enter out into ds jmp aas out pop call (bad) xchg (bad) std idiv adc mov jg lea (bad) cli (bad) (bad) jecxz icebp in fstpt decb xchg jg lret lods fistpll mov sar neg dec jmp jg cmpsl jg pop (bad) jnp fsubrs (bad) das out mov outsl cmc sti out pop std les (bad) cltd jg stc push ja movsb outsl std jbe fstpt pop cld jmp inc (bad) cli push fistpll jmp fldcw icebp lods jg pop std mov mov jnp aas stc ja cli mov mov pop xlat mov stc iret sti ja mov jle aas icebp out mov (bad) cli lahf stc aad iret aas decl xchg sarl inc fs jle (bad) pop cli shr sti mov stos mov (bad) pop jg arpl clc jnp mov xlat jle out stc push cld xchg jg cli popf jmp paddw outsl repz std push (bad) std out mov pop std lret mov (bad) pop mov std adc call jmp popf fnstcw icebp pop dec in pop (bad) (bad) pop jg pop jp sub call clc jnp fwait aas jecxz decb push cmp (bad) cli (bad) std gs jle aas clc (bad) inc jg fnstsw cld pop (bad) rcr out stc iret (bad) aad (bad) lock jle jle fwait cld mov jmp call outsl iret mov stos (bad) jmp lock gs incb fcomip mov aas stc (bad) icebp jg lret inc jg scas cld lret decl ljmp cmp pop (bad) mov (bad) jo outsl fcos or lcall ljmp (bad) lahf std lock (bad) mov sti mov xchg jg (bad) jle cmp repz jl idiv cs (bad) fmul scas aas stc mov popf rcrl out std adc (bad) imull pushl mov (bad) sahf jg jg outsl (bad) jle (bad) aas dec (bad) fucomi jg ret out std sub outsl xor pop repnz in lret cld aas cli sar lcall loop stc out jmp incl jg cli mov pop pop jle loopne cli leave pop outsl outsl idivb out jg out inc icebp sti outsl icebp scas jmp jg mov ljmp aas rep stc add cld iret jg mov jg fisttp mov jmp stc inc (bad) mov in cld adc hlt shr decb jmp outsl pushl das jle aas call xchg (bad) incl (bad) popf iret (bad) outsl xchg mov mov aaa std cltd das dec cmpsl mov std sbb aas sti xchg adc fbstp cmc inc decl popf cld mov negb sti push dec jle mov (bad) in cld push lcall rclb jle jmp sub push stc pop (bad) jg,pt cmpl sti int (bad) fstpt (bad) clc xchg jg pop lcall pop icebp mov hlt fistpll jg insl jle pop sti xlat cld cmc jg outsl repz out cld mov in lock cld in out cli (bad) (bad) out out sti cmc (bad) cli ljmp addr16 loop out (bad) (bad) (bad) jnp (bad) call jg icebp outsl icebp imul dec outsl ljmp ror orl jmp pop (bad) cmp ficompl mov cld fwait aas clc mov mov scas jle jg mov pop lahf cld in clc push clc iret cld pop fdivrp fwait mov (bad) in (bad) lahf repz sub repz jmp into pop je addr16 (bad) mov hlt pop stc sti lcall and cmp (bad) cmp out (bad) jg rcr cli ret scas (bad) stc pop cmc fstpt cmc mov jg cld out stc pop (bad) push iret ds iret jle and cmp std inc decl (bad) std aad div dec (bad) mov dec (bad) mov cmc das clc add xchg jg iret cld loop (bad) (bad) std mov out cltd std sbb (bad) cmp mov sbb pop stc xchg cld (bad) dec ret jg pop cmp scas incb iret call std mov jnp (bad) pop idivb std and sbb outsl jecxz hlt imul sarl loopne clc lahf sahf incb enter out clc in xchg fcomip cmc mov repz pop std lahf ds xor stos jle aas loope stc stos jle (bad) sti xlat clc pop jmp stc mov ja xchg aas jecxz jle pop cld cs call pop cli out cld movsl mov sub pop jle pop cli out ds lcall (bad) lcall xchg (bad) hlt mov pop mov pop (bad) icebp idiv xor clc add scas jg pop clc in (bad) xchg incb pusha aas (bad) nop icebp out cld lret (bad) xchg aas imull lods arpl out ja nop cld mov sti popf jmp mov push (bad) jmp pop jg fidivr push jg pop repz cld mov clc pop cli xchg mov aad jg pop xor lcall mov jmp sti mov (bad) fstpt mov jg outsl lcall (bad) loope div jmp jg popf aas jmp das decl xchg push lahf std and mov insb call lahf push in (bad) in decl repnz mov sar leave aas repz std fwait (bad) std (bad) lea int in push cmpsl push (bad) notb jl jmp lds fucomip ja hlt pop (bad) (bad) mov push fnstsw aas std ja xor cld lahf push jmp xchg lds mov (bad) cli aas fwait repnz lahf fdivrp aad in fnstsw lods (bad) pop jmp out lock jecxz jle ljmp (bad) sti aaa clc mov in stc pop jg (bad) (bad) cld aaa ljmp in cli add lahf repnz and sti mov in incl out jmp pop out cld or jg stc jg imulb (bad) push mov repnz std (bad) in jmp jg (bad) decb xchg out inc mov (bad) xchg xchg mov jg out repnz jmp jge cld bnd pop cld dec mov xlat (bad) aas mov (bad) pushl jp scas cli adc (bad) jno fcmovu icebp out cli popf jg aas loop dec (bad) mov dec cld out repnz paddb lds inc repnz decb cmc out cld ss out cli lahf std (bad) adc push pop decl mov push (bad) push ljmp lret mov (bad) out mov jle std inc mov cmc pop call push mov cmp rcrl mov (bad) xchg mov out lret out (bad) cmp fidivr stc jmp inc in jl ljmp (bad) cmc pop icebp out sbb cmc hlt lret (bad) (bad) pop dec mov mov stc xor lds fistp jg jb imul scas addr16 inc cli jmp jnp jnp ret out stc sti inc aas jmp jge push call jmp nop aas out jmp lock std adc pop std paddw fwait (bad) clc pop jae cmp outsl cld stos jle cmpsl stc xor pop aas cmc mov repz pop cld jp cmp out mov iret jg mov (bad) xchg std jg xchg std int out popf aas loope out mov stc loop mov (bad) stc xchg mov call push push jmp movsl jg out dec icebp iret aas icebp mov stc lahf scas call mov out aaa stc int mov movsb mov mov std mov pop push (bad) jge dec data16 loope jmp push (bad) nop pop neg incl imul mov aas (bad) mov aad loopne (bad) jmp jmp (bad) scas ja lret lahf sti dec (bad) xchg dec (bad) cld lahf stc mov in fnstsw dec stc pop sahf cld cmpsb mov (bad) xchg jg pop repnz (bad) xchg fucomip aas (bad) sti sub mov cmp in lcall inc dec cmpsl xchg pop repz out scas clc cmc out push cld clc cmp out stos aas in mov loopne cli jae xchg (bad) outsl clc popf jg jg (bad) stc cmpsl sub jnp stc call (bad) cmpsb jg loop pop cld ja out icebp (bad) cmp push aaa cld or das pop (bad) clc fstpt mov fnstsw mov jg scas repz (bad) lahf clc push push cld hlt fisttpl call stc dec jg mov aas out shrl jg std pop cmc (bad) mov push (bad) imul in (bad) in iret fstpt mov jg mulb call dec idivl (bad) pop cld jne loope stc jg jns fcompl (bad) cld daa jg idivb (bad) in in cld jecxz inc mov in scas stc daa jmp in lcall push inc pop cli mov jle ja (bad) in std ljmp icebp out lahf div pop cld push mov jno out pop cmp outsl (bad) mov sti jno mov (bad) jnp jle hlt dec call lahf cmp cmc xlat lds idivl mov inc jg xchg (bad) cmp out out divb adc incb jg scas sti mov das mov in jecxz loopne std ja repz and ret jle pop neg mov xchg mov lods xchg lahf push cld in lock pop jl pop ljmp clc mov ja jg aas xor stos (bad) cmpsb fucomip in psubd jg push std mov das jle aas std (bad) repnz jg addr16 (bad) aas out mov aas cld in (bad) jmp xlat cld jge in call pop mov (bad) mov ljmp cld mov jecxz lds hlt out cld and pop stc sarl pop stc (bad) cmp call aas icebp xchg dec jg out aas std daa call jg (bad) pop das jmp fucomip scas cld stos (bad) mov jmp clc or outsl pushl mov sahf and addr16 idiv outsb mov mov sti outsl pop cld pop call outsl repz cmc jg inc inc iret (bad) lcall iret mov pop lock pushl popf jle jg cld cmpsl out mov fistpll iret std or idiv sub hlt mov dec cld imul insl jg aas in xlat sti mov jmp repz clc inc mov xchg pop (bad) cld idivl (bad) rcrb jg push adc mov ljmp mov in int (bad) mov outsl repnz jmp outsl clc ja sti lahf jg ret aas cmc scas sti iret decb cld scas out jle jg cli jg icebp out cld inc iret jle leave pop ja sti mov clc in (bad) repz out pushf pushf (bad) jle pop icebp push jg aas cli ja dec sarb cld cmpl std (bad) cld ja (bad) in lahf lcall mov xlat fcomip mov cld dec inc pop repz cld (bad) call lahf cld xchg (bad) movsl mov call std jmp cli jg (bad) aam jg jg jg mov cld push jg aas cmc adc fnstcw dec std daa int cmp pop bswap push std and out fsin mov mov sub jg addr16 jg out std pop cmp das sti or repnz std jecxz jmp cld cld out pop cmc das pushl cld mov hlt psubq cld mov imull jg mov outsl hlt (bad) stc (bad) outsl jg sarl xchg push xchg std fstpt fnstsw cmpsl outsl std outsb daa dec (bad) adc xchg mov inc scas negl cld jae (bad) lock daa dec aas (bad) (bad) negl int3 (bad) std fucomip push (bad) imul lahf stc jnp (bad) in call (bad) mov jmp stc imul pop (bad) fidivr inc (bad) mov add cld daa mov aas std aas clc in (bad) insb lock lahf icebp dec jle outsl cli scas xchg (bad) decb jge (bad) sti aaa ds mov jbe aaa popf sbb mov clc cmpsl (bad) test out fnstsw mov jle aas jmp imul sti (bad) cmc aas jns xchg jns cmc imul aas inc stc lahf aas hlt iret cld lahf jle out jno std xchg mov jmp in xlat std mov lahf jp sti (bad) cld (bad) jg lods aas std (bad) jg out std (bad) stos outsl jmp cltd jnp aas stc jg sub clc dec (bad) mov cmc out cld add aas cmc lahf cld cmp cli jg pop decb out dec aas in iret (bad) mov in mov pop lock dec (bad) xchg cmc lahf std jnp (bad) in pop jmp cld aad repz mov ljmp mov lcall out std mov jle hlt iret and std pop (bad) aaa (bad) cwtl jmp out sti adc cld cmc mov (bad) clc add (bad) xor lahf lock std adc imul (bad) stc mov xchg inc (bad) fcomp icebp clc idiv int fbld (bad) insb jmp scas mov jg out sbb sahf call pop repz lods das ljmp stos lahf in (bad) mov incl xchg jmp pop hlt push std dec cmc mov aas stc scas aas sbb cmpsl jecxz out daa ds repz jg hlt leave jg (bad) inc outsl stc dec ljmp (bad) fst pop mov xchg jle cld jg cmpsl mov mov aas clc aaa repnz in mov (bad) pop (bad) fdivrp jg (bad) ds mov cli mov (bad) clc icebp pop cld shrl xchg std push dec scas std das dec xchg cli adc (bad) std xor mov aas clc jg daa enter aas in in (bad) out sti fstp (bad) (bad) mov stc (bad) cld mov jg (bad) outsl inc cli (bad) push jg idivl fcomip clc aad hlt mov lahf (bad) paddd mov jmp in icebp (bad) stos mov das cld gs outsl lock (bad) and jmp aas in mov pop cmc dec sub cmc lahf neg fildll cli mov repnz stc ja enter mov jg cmp fucomip out cld stos data16 imulb movsb aas ljmp sbb fist rcr loope outsl pushf (bad) sbb mov lods mov jecxz lock in jg pop cli xchg or push iret std clc popf aas out pop adc std mov jmp pop clc movsl push shll idivb pop outsb std gs clc idiv ror jle ljmp fucomip dec std sub mov notl (bad) fcomps out (bad) std lahf jg jmp mov fistl mov enter pushl out (bad) std push (bad) xchg jg aad bnd cld mov mov mov iret fcomip scas std stos mov out std idiv int xor fwait dec (bad) sub out dec out aas stc repnz (bad) jge lds aas icebp sbb scas stc cli aaa pop std mov ja std mov jg pop jl decb jg scas mov loop clc lahf push idivb aas mov mov push (bad) cmc outsl stc cmpl pop (bad) fsubrp imulb cld jmp pop (bad) aas std xchg mov repnz aas js daa std ss into pop neg (bad) pop lahf mov out repz jg push in icebp cmp or rcrb pop call pop repz clc gs (bad) cmp (bad) jmp pop cld lcall mov in idiv jge lret mov decl call jg pop mov std xor loopne (bad) test loop dec fdivrp pop (bad) fdivrs mov jg mov (bad) xlat clc ja sti out insl repnz std std mov (bad) clc std jle cmp outsl jg aas divb pop push outsl cmp std aaa mov repz out jg jge mov outsl icebp xlat jmp xor stc pop (bad) cmpsl incl icebp out push mov out mov (bad) paddw hlt pop cmc jmp ljmp (bad) fistpl icebp call outsl (bad) adc lahf dec mov xchg jg jg jge scas std (bad) (bad) hlt pop std mov pop cld jmp out fnstsw xchg repnz push jg das (bad) cltd jg mov popf aas lock (bad) sbb fyl2xp1 pop cmpsl jg lahf mul incb jg pop sti jmp jp (bad) cld xchg decb loop (bad) aaa clc paddd adc push mov fucomip mov xchg lret aas cld pop fdivrp hlt stc rcr dec stc cmpsl (bad) inc fwait pop clc out adc in dec scas (bad) mov outsl clc out decb cmp into pop cli dec (bad) out fcomip dec stc sub pushf std ljmp arpl mov out not incb mov cli mov imul das std test mov jg fmul sub das pop (bad) fstpt pop stc xlat (bad) aaa aas cmc push cli loop outsl dec sub repz cld dec std addr16 (bad) addr16 int jg sti jg jmp in out cli insl mov (bad) incb ffreep jg das (bad) scas incb xor mov xchg loop lahf jle jnp adc icebp (bad) nop std jg idiv mov (bad) outsl sti pop xchg std std addr16 mov stc idiv xor (bad) aas stc pop cld mov fstpt call lcall negl lahf mov dec lcall std adc hlt scas (bad) lahf decl call xchg aas in cli hlt in pop sti jmp push rcrb int fcomip (bad) clc int stc mov idiv mov sti jle push iret clc leave pop inc cld sti adc xchg pop adc std imul push pop jg mov (bad) std cmp mov pop jle aad std mov fucomip cmpsl push fbstp cli aaa cld xchg pop imull push in fistpll clc lock aas stc daa (bad) std sti daa jg dec sti push jmp pop cld addr16 insl mov dec cld fldcw aas cmp inc (bad) repz clc (bad) outsl jle (bad) jmp stc icebp cmpsl jg mov mov (bad) out jg pop (bad) pop cld cmp inc xchg aas cld arpl lcall ret pop mov jg in das cli leave cmpsl (bad) fcomp icebp pop cmp std fsubrs das ljmp movsl (bad) pop lds repz cmp ret (bad) mov jle fcomip scas and mov cmpsl std mov lahf lock (bad) inc aas call mov loopne outsl idivb mov out std adc mov out mov xlat cld adc lock and fistpl xchg lahf cld lret mov sti iret (bad) fcos in stc cmpsl jmp push scas sti sbb mov incb sti lods pop sti aas jle push cld mov inc cld or push decb cli leave aas inc stc scas aad (bad) stc hlt addr16 cli out jns cmpsl (bad) in stc jnp cld std mov loop bnd jp outsl icebp cmp pop outsl mov mov jle fcomip out fdivrp mov aas cli arpl (bad) scas cmc xchg std jmp pop lea leave push aas clc addr16 sarb repnz sti pop dec push pop adc stc outsl cli jnp pushl decb xchg cld mov std pop negl (bad) (bad) mov (bad) mov outsl cmc or sti outsl stc (bad) (bad) test mov out (bad) mov std inc mov into cmpsb push out repz (bad) out jg aas clc inc paddd decb std pop int cmc xchg into (bad) jmp jg pop xchg jnp clc dec cld (bad) jle leave scas inc (bad) sti outsl clc jg cli or lods jle push pop aas stc idivl aas and (bad) clc mov outsl cli jnp std cmp jecxz (bad) sarl jg fldcw pop mov scas (bad) jmp xchg jle xchg std ret pop clc std incb mov in dec clc xchg (bad) stos jg das inc (bad) icebp scas jle out push (bad) std pop icebp pop jmp out out clc aas jmp pop jle jg mov icebp leave out lock std inc call ret jmp es mov fistpll cmp (bad) addr16 cmpl scas clc aaa pop std mov stc in daa decb jnp ss jge lahf cld outsl (bad) mov call jg outsl ja sti ja es pop push pop icebp pop inc mov (bad) fdivrl idivb sti and icebp pop std cmpsl std push idiv fcmovnu cmc iret stc dec enter int out pop std sar mov cli out dec (bad) jnp rcrb jg out scas cli outsl jg mov aaa das decb jle pop notb mov stc or (bad) movsl lahf pop pushf cld in divl repnz (bad) pop jle mov mov sub ljmp aas std mov cld pop decb fnstsw jmp aas lock call jge mov fistp jg pop repz xor pop mov (bad) fnstsw js imul mov jmp jmp (bad) fcompl aas call push cld lahf clc dec imul cs aas pusha jns icebp jecxz out stc lret lahf incl mov (bad) push (bad) jmp decl scas cld xchg fbstp push fistp out hlt (bad) std push outsl inc (bad) cld bnd jg cmc mov jg aas std lahf mov idiv mov icebp (bad) fstpt push stos fucomip mov clc lahf (bad) xor repz mull jle mov rcrl idiv out iret lahf std jae idiv mov (bad) mov jmp (bad) mov jmp sti ja dec in std fist icebp mov repnz aas lock ljmp dec jg jg outsl pop dec (bad) nop aas out (bad) cli sub loop hlt out std mov hlt cld out and in decb inc sti fwait cld lods movsb jg xchg jmp iret cli lahf jmp leave jle dec mov aas mov outsl and jmp cli (bad) pop mov jle out sti (bad) cmpl mov std jnp fdivrs out int leave lcall call mov out popa hlt iret mov dec cld fwait (bad) js lahf cld mov jle lock and mov repnz jg mov out jle mov jg pop (bad) mov pop mov std (bad) outsl jmp mov std pop push imull jle lret lahf clc pop (bad) mov sti inc cld jno jecxz notl scas aas out mov cli jmp sahf ljmp aad std or sahf call rcrb mov sti ja lcall (bad) xchg and inc inc pop cld out incb fbld jnp cmp std pop (bad) in aas idivl lret fucomip in cli adc daa jmp fadd sti mov decl jg jg pop jle lahf decb idiv scas jmp out jg loop jg iret cld mov das (bad) mov loop incb out jnp jmp xchg mov mov jecxz cmpsl aas out sti sbb pop jg aas lock mov cli fildll clc idiv add pop icebp (bad) (bad) sarl inc (bad) aam jg pop (bad) jg or incb lds dec std das aas stc out jmp cld add (bad) jmp cli dec jle aas lock repnz std cmp mov dec mov mov in fnop push (bad) fdivrl mov (bad) (bad) jg xchg jg aas cmc or dec repnz cmpl decl jnp (bad) std mov sti cmc out jae (bad) jmp mov lahf stc mov ds std sbb (bad) jecxz loopne call jg fistl (bad) fdivl sti out cli add aas sti (bad) cld mov call aas out std inc (bad) push mov std (bad) jg lahf testl jg,pn lahf clc pop idivl (bad) out sti (bad) aas fildll std je mov imul pop mov insl jle jg xchg std repz lods scas into aas sahf jmp ljmp repz repnz std sub sub iret jg pop sti aaa (bad) in aas call in clc out aas hlt (bad) cld cmpsl jg das clc (bad) outsl lock leave mov in pop (bad) dec sar lret outsl clc ja sbb std push (bad) jg outsl hlt idiv sar jmp (bad) mov dec dec pop sti push ds cld cmp xchg aas decl es stc in cmc (bad) arpl sarb jg mov ljmp lret (bad) lock in aas stc xor pop ret jg jmp ret xchg jg cmp movsb aas dec jg dec scas repz (bad) xor std jg outsl ret cli jmp lahf call xchg jecxz hlt push std mov (bad) (bad) or mov (bad) stos mov leave lahf decl (bad) cli in inc call scas std pop std ret cmpsl cld dec jg (bad) mov in (bad) repnz ljmp fstpt cmc cmpsl std mov icebp aad vmovdqu pop (bad) push lret and ret addr16 jbe ret mov pop push mov out mov cmp (bad) std push mov xchg (bad) iret inc push mov hlt icebp pop dec std decl into lahf cli addr16 call fistpll leave ljmp inc aas stc pop push aas js out mov int mov loope into xchg pop aas std lahf jle mov jg pop cli dec std jecxz pushl (bad) pop js (bad) stc scas jmp mov imul negl loopne jnp inc std es (bad) mov cld cltd stc clc das mov (bad) jle pop cld ret (bad) dec jg (bad) stc (bad) push idiv (bad) aas in cli mov ja movsl das (bad) out pop (bad) out std mov mov lods jle aas repz add mov jg (bad) mov int3 (bad) jge mov xor stc and iret (bad) das std std mov xchg aas ja std (bad) call out (bad) lahf stc or lahf cmpl fyl2x pushl cld ret (bad) (bad) outsl (bad) in aas cmc dec stc or cli pop (bad) clc push cld cmpl cld pop clc mov mov scas repz (bad) mov (bad) mov cld add std mov clc leave ret aas call aam (bad) xlat (bad) fsubp idiv (bad) lahf clc imul stc xchg fcomip dec jmp lcall in aas out dec mov cli and xor (bad) out xlat (bad) ljmp xor stc sub icebp outsl cli stos pushl jge (bad) pop call dec mov movswl out xchg pop jmp sti pop incl sbb iret stc lods out int3 pop ljmp inc out (bad) ss jmp jmp mov lahf jl jecxz jg imul cld lods jg scas cli cltd (bad) lret jecxz jmp std xchg std mov fidivr inc (bad) mov out cld (bad) std lcall incb sub rcrb icebp aas std loopne paddusb lcall (bad) cmp (bad) std flds ja jns xlat outsl cli out ljmp (bad) jmp repnz mov das cld cli push aas negl sti in jle addr16 ljmp fdivrp hlt paddd jmp outsl cld ljmp cmp (bad) (bad) jmp inc (bad) jmp mov (bad) loop (bad) in call mov idiv jle pop decl pop (bad) cltd jg pop lock cld dec xlat (bad) in out shrl (bad) stc outsl mov pop fdivrp in incl dec out mull stc cmpsl jg pop std push mov std insl push aas jle iret (bad) cmp scas repz xlat cld cmc mov std xchg dec fisttp repz rcrl outsb push xchg jg lds (bad) jae jle (bad) std (bad) pop sub mov decl dec (bad) mov lods lods aas out mov aas lcall fnstcw clc mov outsl clc repz jg cmpsl jle cli mov mov stc aas std cmp aad das (bad) (bad) enter das cld (bad) sarb icebp paddd (bad) in iret clc idivl repz cmc iret sar xlat push lret aas decb out jg std jae (bad) mov jbe idiv in xchg incb (bad) cmc inc shll std scas mov push aas dec (bad) shrl stc (bad) ja sbb out scas cld mov loopne inc jg out (bad) out iret jg pop cmc paddd jmp jmp and ljmp std and mov fcomip (bad) pop (bad) xchg repnz adc jg xchg jle dec mov mov std test repz decl test jmp xchg jmp dec pop (bad) sti mov dec mov mov (bad) cmp stos mov dec jg cmpsl (bad) (bad) cmc fwait cld or mov cmpsl mov aas jp xchg ss pop repnz ljmp cmp jg (bad) clc jmp stc stos jle jg clc jnp leave mov cmpsl fcomip das sti pop (bad) xchg in fistpll ja stos cmpsl out jle aas xor sti (bad) xor (bad) clc pop dec stc cmpsl aas out (bad) fwait jmp fisttpl js xlat std sbb (bad) pop mov jmp (bad) mov (bad) aas repz dec mov dec xlat jg xchg mov jle mov sahf (bad) (bad) aad mov sarb add mov jecxz mov cld dec push imul cld daa inc aas repnz sti lea pop std stc mov std fwait call jg pop call call ljmp mov dec mov xlat pop jnp sbb jg std (bad) scas jg iret cli out lahf mov lret inc jg (bad) jmp dec mov daa (bad) jle (bad) das fdivr outsl pop (bad) jae fild rcrb jmp fisubr stc mov incb std imul cmp std push jg lahf cld inc std fisttpl cld or dec (bad) call clc (bad) jg mov lods pop and loop out jnp mov lcall lahf push outsl cmp fistpll (bad) cli sti (bad) sarl loope stos (bad) fdivrl cs mov test mov jmp std jg fbld cld jg iret jg jg idiv mov hlt in xor sti push push repnz std cmpsl jle fistp jmp (bad) in jg jg jnp repnz mov lahf cld xlat (bad) call sarl (bad) (bad) aas cld pop push fucomip mov xchg (bad) call pop jle fild in jg jg sub fwait in jecxz out stc arpl jg or clc lahf lock cld icebp mov mov mov (bad) scas jg (bad) clc pop dec jmp das cli imulb mov in cld mov mov jmp sbb xchg aas (bad) pop pop cld and stc mov jg (bad) lcall aad jmp std aaa imul cld mov pop stc push std inc push mov mov jle fnstsw call pop jb ja (bad) pushf aas xchg (bad) outsl cmpsb dec aas cmc arpl (bad) outsl stc pop cld mov out (bad) jmp out cld movsl mov pop dec into jg mov out dec std jb pop pop mov ds mov cmc (bad) pushl (bad) imull (bad) stc scas (bad) mov dec ljmp hlt (bad) sub clc cmp aas ljmp lock or out stc (bad) scas ljmp out (bad) fdivr mov pushf loop jg (bad) and out aaa clc shrl mul jl lds sahf fcomip iret decl jg icebp aaa pop cld push jg fnop ljmp repz jg (bad) lahf out decl jmp cld mov jle jnp and outsl clc mov mul jmp sar ljmp aas (bad) fdivr paddd cmp jnp pop (bad) (bad) mov out in stc pop cld jno lock cs ja pop pop mov out outsl cli pop (bad) call jnp das pop jg and sar lahf cld xchg jmp fucomip scas mov push jg (bad) push sar jg jg sar pop inc jg int repnz (bad) sahf mov jg fucomip ja hlt xlat adc pop xchg mov mov jg mov (bad) rclb cld sti (bad) jns icebp fstpl cmp in outsl cli iret (bad) mov leave hlt daa (bad) scas (bad) in fnop (bad) cmpsb jg aas stc fwait int3 (bad) jmp outsl cld xlat xchg outsl (bad) popf out jmp (bad) jp (bad) clc pop jg fcomip sbb push inc pop cld outsl xchg jg inc cli out jnp les fcomp sti xor hlt (bad) ljmp pop call out cld scas inc pop mul (bad) cli iret decb mull jecxz (bad) mov lahf cld sub pop lcall push jle fistpll scas cld mov out jg insl (bad) jg mov mov popf aas hlt aas (bad) scas (bad) cltd aas cld (bad) clc mov (bad) stos (bad) stc aaa sti int leave jg jmp jg push push pop cld (bad) (bad) push (bad) mov lret or (bad) aad jmp aas std addr16 xor dec jg jg jmp iret stc adc fist push mov jmp repz inc jg clc out ja jmp call jg jg aaa jle das std and (bad) iret lcall jl stc and aas mov scas call xchg (bad) stc pop sahf cld (bad) jg (bad) lahf clc fistpl repnz push (bad) cmc (bad) clc gs sti jle jg ja sub sti lret lahf mov in lahf decb mov call out cli popf imul incl mov out mov jle popf inc jg lret jmp mov jg pop jle lods aas jmp leave aas lcall jge (bad) jge jg idivb pop xchg std gs inc mov lahf cld dec pop cld cmp aad (bad) jmp sbb aas clc test aas in dec mov mov jg outsl incl aas cmp jg out push call pop hlt cmp pop mov iret jae mov (bad) mov pop stc (bad) hlt loop sarb out cmpsl jg mov into scas imul jl iret cli pop jle mov test cld loope mov (bad) stc scas jnp cmpsl incl sti das mov pop repz cld iret dec popf fnstsw (bad) push rcrb jmp sahf (bad) sub (bad) in lahf and cmc imul jmp ja call xchg ljmp aas loope clc outsl sub lcall out sbb clc dec daa jg pop lock std mov jecxz int3 dec std lcall pop sti mov lahf aas cmc dec inc push mov std loopne jmp mov cmp pop cld (bad) ljmp in (bad) sti mov (bad) ljmp std jne (bad) pop out cli in es (bad) js ja fdivrp cmpsl ds das ljmp lock pop clc scas cld mov lret hlt scas std negb mov stc sbb inc jg scas shll xor cld fstpt push or inc pop jmp dec cli xor lods mov incb mov (bad) pop cli idivl iret (bad) sub fnstcw (bad) ja loopne std (bad) idiv or pop cld jnp in xor (bad) jmp scas push cld dec jg fcmovnu stc mov hlt jg outsl cld sahf mov clc inc inc dec call mov (bad) fsubs xchg jg (bad) ja cld sub icebp pop sti (bad) sarb pop jns mov add fstpt hlt aas decl ret mov ljmp (bad) call lods (bad) out aas out dec (bad) jmp cld repnz cli jge loope call and pop mov jg out decb jle pop ljmp (bad) fst jg jg lods aas jmp out dec std (bad) jg scas jns sti jmp (bad) lcall std (bad) jle fcomip ja jle fcomip dec cli cmp mov (bad) das stc xchg (bad) lcall dec aas sti (bad) incb std ja (bad) lock cld mov ljmp cmp mov pop dec cld repz (bad) rcr neg cmc decb movsl mov repz lock ljmp shl outsl stc gs jg jmp lcall in cld out jg mov call aas repz inc ja sub (bad) sti (bad) mov daa aas std dec jg fcomip dec clc iret (bad) rcr imul call fcomip xchg sbb sti scas lcall mov test jne fidivr movsb cld xchg jg jmp pop cld jae aam (bad) das dec (bad) sarb in cli mov iret (bad) jg jg mov dec ljmp (bad) inc pop out scas jp inc std lahf jg push std pop cmc xlat (bad) loopne and aad icebp aas jl sti jmp aas (bad) cmpsl cld gs stc out std push jg outsl hlt addr16 xchg outsl std fidivr notl ljmp push ljmp mov jg test dec mov daa incb mov jle lret jg pop sti addr16 jg jg sub sub (bad) fdivr idiv sarb out sti stos sub repz (bad) mov call lahf rep (bad) in aas cld jg jge repz inc jg fcomip (bad) push cmp in sti mov shrl std neg aas jge addr16 outsl inc jb (bad) clc aas jle jg fcmovnu (bad) (bad) mov iret sub cld mov cmpsl aas out sti xor clc outsl dec aas cli jnp cmp dec dec inc outsl pushl jg das sti fwait push outsl jmp dec jg mov (bad) jmp repz das mov cmpsl call mov std (bad) xlat das sahf cmpsl aas (bad) sarl (bad) pop std idivb mov (bad) stc or ja mov (bad) mov cld stc lahf cld scas dec scas and imul std fcomip aas cld sbb fstl cmp idiv outsb (bad) clc mov mov das jmp aas ljmp (bad) dec (bad) (bad) pop cld sti std mov cld and ds cmc dec (bad) mov cli icebp leave pop jae das mov (bad) push jg pop repz dec sti insl (bad) cli push leave outsl push cld xchg aas cld (bad) jnp sti std xlat aas cmc cmpsl std pop mov or std xchg jg das pop (bad) cmpsl dec hlt das (bad) pop hlt inc std (bad) inc fcomip sbb dec jg pop (bad) imul jg dec xchg cld mov jecxz mov mov push pushl cmpsl cld jp jnp call pop jg das jl loopne stc pop (bad) jnp pop (bad) (bad) mov stc cmpsl cld cmc aas repz std xchg aas cmp pop ljmp jecxz negb out std fwait mov (bad) cld scas jno out (bad) mov pop jg out mov std push daa adc std outsl jg push jg cld xchg std cmpsb jg pop (bad) ljmp fucomip outsl pop aas cli xlat pushl in lahf cld (bad) ljmp mov loopne pushl (bad) loopne cld mov cld leave mov pop cld fwait pop cld adc xchg jle xor (bad) in fild (bad) pushl lret call out jmp lahf jnp (bad) cmpsl inc out idivl call (bad) daa call aas idivb (bad) jg pop mov inc jg (bad) std mov push in lcall popf fincstp lret cld or clc (bad) clc mov mov jg repz std cli jg jmp scas mov lahf jg out std ljmp stc fcomip out sti jg jg decb popa xor inc (bad) ja cld mov cli xlat (bad) idiv int lock std sar jmp lret pop std stos jg jmp ljmp (bad) std mov out std sarl out scas (bad) (bad) stc lahf (bad) push inc fcomip jmp test dec aas pushl idiv idivl popf aas jmp (bad) mov lcall icebp (bad) cli push inc jg mov outsl (bad) sahf jg iret cld cli jg (bad) mov jmp das stc outsl jg aas in mov ja cltd jg aas std int xchg stc outsl stc jne fdivr cli jnp (bad) outsl hlt das cld add jg pusha imul std sarl (bad) mov cli jg cmc (bad) out fist jecxz std (bad) ljmp (bad) daa ljmp jg sbb loop mov ljmp xchg cmp cli test addr16 in (bad) fdivp (bad) jle jmp push iret (bad) fdivrs cli (bad) sti das call std into pop cli aas int3 (bad) fdivrl (bad) loopne jne xlat std sbb ja (bad) sar cmpsl jg loop pop clc inc cld and cmc mov inc popf jg lahf cli imul out sti aas cmp cmc jle pop std das sbb in stc cmc jmp ljmp cld dec jle push das clc mov pop (bad) arpl jg outsl repnz loop out das sti mov mov icebp jg pop out call dec mov pop pop aas dec jle pop out sti aad hlt pop repz xchg jg lret aad icebp xlat std (bad) ja jg loope mul (bad) sbb sbb lds ret jg mov cld cs xchg aam (bad) aas clc inc (bad) fdivrs out aad jg stos das (bad) pushf aas in aaa pop cld insl (bad) icebp jg jg fwait jle (bad) inc fwait aas loope sti mov push (bad) call out cld mov xchg mov out idiv sub int movsl cld fnstcw icebp idivl outsl decl lock lahf mov aas out std pmaxub outsb mov cld sarl lahf cli xchg (bad) data16 fcmovu cld out inc aad hlt pop (bad) fstpt (bad) lcall cmpsl aas std xchg fnstsw aas dec icebp out mov shr decl jmp xchg aas neg std aad out fist lahf mov scas xchg cld ds sti das lcall std arpl into fcomip sbb push in cli loop iret incb notb decb idiv (bad) repnz cmp fwait mov mov in addr16 out cld or (bad) fcompl jbe (bad) fimull jg lahf repnz (bad) ds out cli daa lcall sti jg pushl insb (bad) aaa cld out jg lahf push xchg std jmp jle xlat (bad) scas jg pop divl dec jg mov mov call fild ret jg cld lret dec sbb cmpsl lret mov sti add (bad) jg out cmp cli imul std pop idiv mov idivl out decl jg imul lock xlat cmp mov bnd leave (bad) psubw jg mov cmp mov jg push jl (bad) jg aas stc popf (bad) pop mov cmc xchg (bad) dec ja pushf fucomip ja imul jg leave outsl jne iret cld or clc outsl cld arpl (bad) push aaa pop cld in mov mov call fisttpll jg lahf std ss lahf repnz std xor ja jns lahf (bad) mov loop jg scas decb xchg mov (bad) lods aas repnz std mov in pushf std sbb mov xlat dec das (bad) stos jg out decb dec incl pop ljmp pop jle lret jg pop stc addr16 sti fildll jmp std mov mov out scas cld inc pushl cld clc pop cld jb mov cli jg adc paddd mov sti adc (bad) jg ja movsb cld (bad) pushl out stc mov mov mov std jbe loopne cmc fwait mov fcomip scas sti aas jle pop mov pop std cmpsl dec (bad) cld mov pushl push (bad) (bad) jecxz mov fs pop jg jle lods aas insb out hlt push int3 jle pushl std pop jle mov icebp (bad) fcomip lahf mov sub fstpt sti clc sti jg xchg (bad) std sti (bad) std aas xchg pop std or ret cmpl sti mov repnz clc mov mov jg (bad) in lahf cld popf lcall pop mov (bad) in psubq sti ja scas jg cmpsl decl cld inc mov cld jne in pop cmc cmp ret mov mov decb (bad) in jg pop (bad) pop jle mov aas incl neg popf lahf stc or mov jg mov repnz (bad) jae out repnz std cmp xlat mov out stc divl (bad) (bad) std outsl pop mov and mov addr16 jge (bad) cld mov aas jmp out cld (bad) xchg jmp call idivl cli mov (bad) fcomip jo jle neg in xlat std idiv idivl (bad) cmp movswl mov das std mov aas stc inc lret jg xlat jp ja inc (bad) hlt scas sti adc out idivl xchg aad loopne cmp fcomip sbb out cli inc mov std loope addr16 sti ljmp xchg out cld dec ljmp cld pop inc std lahf (bad) xor nop (bad) std iret std lret jg (bad) call rcrb out (bad) std xor (bad) cli and lcall sbb test out incb mov mov xchg outsl call (bad) shrl psubq xchg pop icebp (bad) pop (bad) stc fnsave jg pop neg (bad) pop jg xchg dec (bad) out mov mov mov lahf cld loop cli dec (bad) mov stc cld mov lock cld fdivrp cld pop push incl cmc jg adc push (bad) (bad) xor lcall stc sti decl (bad) decl incb sub hlt mov jmp jg pop hlt loopne stc stos call and icebp dec cmovbe jmp mov stc cmpsl ds sbb xchg pop clc sbb and lock aam scas cli mov out cld lret out cld cmp call std cmc jmp pop clc aas std dec mov jg loop cld pop ds lret ljmp ljmp call pop out lahf (bad) jle call orb xchg cld ja cmp jae mov repz cli in (bad) (bad) mov mov repz stc xchg jmp pop (bad) mov (bad) jg pop inc lahf (bad) aas std (bad) ja std sbb xlat std incl (bad) clc imul cld (bad) mov push mov std inc mov (bad) icebp mov jge icebp stc pop stc mov idivb jg jnp cmp pop jg scas cld sti dec (bad) fdivrl out psubb mov clc icebp (bad) mov cmp out repnz cld dec mov pop (bad) jnp in lahf jg (bad) movd call loop cmc outsl pop cmp outsl lret aas in mov sti jg std aas jecxz incl idiv (bad) scas (bad) push in xchg mov popf ret iret (bad) mov jmp aad lods push neg pop sar jmp aas cld loope shrl cmp adc outsl fwait cld mov pop hlt xor (bad) (bad) mov jg stc (bad) std mov pop repz fist cmc push gs cmc out decb jmp sti pop clc ljmp pop int testl cli lahf std fistpl std sar outsl (bad) ja shl (bad) mov std sarl icebp out clc lock std pop inc (bad) cld pop (bad) fnstcw stc fwait std push (bad) cli repz cld push dec dec negb (bad) lcall stos mov outsl cld adc decl cld aad repnz cld xlat scas call cli daa mov stc (bad) lret jle pop xor repz mov mov sarl mull and std xchg std pop mov mov test pop dec mul in (bad) jg in xlat std test fdivr repnz adc cli fnop cmpsl cld ss scas (bad) pop jle pop decb (bad) jg jg repnz mov jg lahf sti aaa jmp call cwtl mov fs dec jmp jmp imul call push pop adc out testb jmp xlat std out jmp stc jmp mov stc pop cld ret jmp inc pop stc (bad) mov aas std push cld scas mov lcall mov js aas xchg push xchg cld xlat lahf cld fmulp (bad) out std jnp lock jmp jle (bad) cli repz in stc iret ret (bad) std pop mov mov xor jmp cli ja sti sahf cld data16 push lcall jg mov ja aam push push cld stc jg outsl cld idivl dec (bad) in rcrb stc aaa std (bad) jmp jg out pushl jg jg mov xchg (bad) rcr incb (bad) stc das sti xor fwait std cmp call push scas std in call ds (bad) clc (bad) push (bad) fdivrp int cmpsl ljmp (bad) mov stc mov out scas mov xchg jle addr16 jle cli out xchg (bad) out pop cli out (bad) inc pop not das dec (bad) mov jecxz jg call lds not pop mov pop incb icebp dec jmp cld mov dec jle outsl lock (bad) mov (bad) mov aam mov jg pop (bad) addr16 repz scas (bad) std (bad) xchg jnp ret sti out (bad) jg cld nop (bad) xchg cmpsl int repnz movsl (bad) fstpt in jle jmp cmpsb jns aaa cld mov std scas dec jle aas stc (bad) cld ja aaa (bad) test jle or cltd outsl decl jg pop cmc jmp std pop (bad) in aad mul pop cld (bad) fstpl clc daa call lahf cld jne std cmc (bad) arpl out cld ja pop sti (bad) pop push (bad) repz cli (bad) shr daa call jg pop cli lods inc jg mov imull push std test in sti int jmp jmp cld (bad) int3 outsl lock scas jle jmp pop cli jne cmc ljmp mov cwtl aas (bad) aaa (bad) sti decl fistpll fcompl aas cmc aas stc xchg stos push mov (bad) das jge xchg call sti mov scas pop lcall jg (bad) std ljmp aas js daa dec (bad) xchg pop hlt cmp std aas cld aaa cld xor daa into (bad) mov pusha std pop inc leave std das xlat mov jle mov lahf lcall scas stc out jg jg idiv hlt iret jmp jmp aas sti into pop negl std mov std push jg aas repz lahf icebp (bad) icebp outsl clc mov lret (bad) jg xlat inc jg jmp lahf sti jmp call lock stc cmp jmp aaa fcmovnu pushl sti jg scas cli mov aad jmp fld jg xchg push mov incl sbb mov (bad) fidivr (bad) jecxz cld imul repz xlat dec dec das incb mov cli scas cld aas jg pop div sti lahf std mov aam stc add out pop (bad) sbb inc mov leave pop jg jg jg mov setle aad jmp cld std jle jg jg mov out stc (bad) jg in std ja lcall jg leave pop sti imul mov fs jmp lahf mov jmp (bad) jp xor mov inc stc mov (bad) std jg fcomip outsl lcall push pop dec dec jg jnp aad std scas stc imul sti dec mov scas pop cld or in (bad) cli jns pop inc lahf lock cld adc jg outsl repz ja lahf pop inc fcomip (bad) les hlt paddd cli inc jg stos (bad) rcrl fadd sti (bad) fcompl decb scas pushl (bad) fidivr icebp pop std addr16 jg iret std pop out (bad) in idivl mov shrb mov xor (bad) cld cmpsl dec mov std aaa sbb xchg (bad) fnstsw std pop cld in jae or ljmp pop lcall iret push fwait std lea jg xlat std push dec inc (bad) fldcw (bad) cli pop std sbb lahf (bad) das dec mov cs mov (bad) out mov mov mov jecxz lcall mov icebp (bad) cld cld pop cli pop dec jmp out (bad) decl repz lcall jle fcomip out sti pcmpeqd (bad) ss fcomip pop jle (bad) pop aam lcall cmc (bad) push jg pop clc aas cld or aas sti out pop mov (bad) (bad) (bad) hlt pop stc xlat push (bad) ljmp lock mov (bad) ljmp clc mov (bad) dec ljmp aas icebp or test lahf icebp jnp mov (bad) std ja test cli pmaxub dec decb gs pop das iret inc insb icebp (bad) bnd mov outsl clc inc imul (bad) in mov imul pop push ljmp jg out cld idiv sbb out clc fwait cld pop jg outsl (bad) jo xchg aas dec jg (bad) ja xchg hlt aas cld jnp into ds popf (bad) fistpl mov dec xchg jg fild jge stos (bad) call cld int3 (bad) in cld xchg push aas cli jmp xchg (bad) ljmp inc ret aas jb pop cld mov mov (bad) mov repz mov aas xor ljmp xlat pop cli lods aas out cld hlt (bad) sti mov enter ja xchg (bad) (bad) jmp pop cmc jmp mov jmp std adcl scas clc xlat jle fcomip xchg sub jle das std sbb enter (bad) out jmp iret mov out in mov (bad) jg xlat (bad) cltd jmp scas call mov sti out incb (bad) (bad) (bad) clc paddd incb (bad) cmp (bad) aad aas jle inc std lahf jmp scas incb mov std ds (bad) ljmp jmp jle jg jg push mov out cld pop call (bad) daa mov pushf cmp popf (bad) lods jg (bad) clc iret push call mov aas inc inc das (bad) fidivr repnz (bad) mov in call lds std ljmp fnstsw outsl std and jg idiv xchg cmp std out push mov in (bad) mov das lahf jl (bad) ja,pt or aas (bad) scas mov cld pop (bad) icebp (bad) fcomip lahf arpl clc pop cli test jge fcmovnu hlt pop cli cmp outsl cld leave lahf stc outsl (bad) aam in (bad) in jmp aaa lcall out push cmp imull call jg stc outsl (bad) mov xchg incb lcall leave aas dec push incl ret jle fcomip das cmpsb cld shrl cmc outsl icebp leave dec std pop mov paddw add (bad) ljmp fucomip (bad) mov cmpl push (bad) cmp stos (bad) mov pop sar fistpl stc pop mov in outsl std push jg mov repnz (bad) pop sbb jg ja mov cwtl loop (bad) xchg jg repnz in (bad) stc (bad) (bad) sti jg (bad) fisubr rcr out dec and addr16 fdivrl repz out cld sbb sbb std in mov fbstp sbb jg lahf mov mov cld dec cli lahf jmp std or lock std pop stos jg lahf jl sbb mov xlat dec inc pop inc jmp (bad) xchg mov iret jg jecxz pusha cld pop cld ret cld mov lret xchg (bad) jg outsl cld ljmp fcomip push mov (bad) xchg xchg mov (bad) data16 jg fbstp paddb mov repnz jg out jnp addr16 dec inc ja xchg aas out mov mov push (bad) pop jg pop repz in fucomip (bad) cld out sub ja (bad) ja cmc fildl jg mov std sbb (bad) xlat std inc aas repz cmp incl loope (bad) lods (bad) sbb (bad) jmp cld jg xchg (bad) pop std (bad) xchg jmp jg (bad) stc (bad) ljmp insl cmc fistpll cmc ret aas in (bad) jecxz (bad) fcomps imul jg push jle fcomip mov lea decl or out mov cmc (bad) cld into jmp pop repnz ja test out clc jg std sub mov arpl repnz (bad) (bad) out push (bad) mov jg in stc cltd das jg (bad) pop clc cmpsl cs sarl negb std scas push (bad) jmp std jg (bad) stc iret cld dec xchg jg pop aaa std mov scas hlt out jp cld sbb repnz cld icebp jg pop (bad) aas sar repz xchg pushf decb push mov jmp data16 xchg jg pop jecxz ljmp out out (bad) push dec mov mov sar mov pop (bad) cmp lcall jg in jle jg idiv pop lahf std inc (bad) in cmc iret cld jp (bad) std jl leave pop incb (bad) cmpsl addr16 pop cld sbb jg (bad) sti std imul lret mov shr iret cld jnp xchg (bad) aaa fisttpl ljmp (bad) fistpll jnp outsl cld jmp ss out inc repz das rsm jg test popf inc (bad) jg lds push std stos incl dec std lret xchg pop lock cld es stc push pushl fnstcw icebp (bad) (bad) cli hlt lret aas jmp out hlt (bad) outsb notl mov out cmc jmp (bad) cli mov mov out lahf std (bad) (bad) fstpt mov repz jle in cmp push (bad) fsubr ja scas incl call into mov pushl clc cmpsl mov (bad) repnz cmc jle fcomip (bad) cli out inc jg pop clc cmp sti (bad) cld lahf repnz dec jg std fistpll imul jg mov (bad) imul mov out aas lock pop (bad) hlt out stos inc jg mov (bad) jmp aas mov aas std outsl sti mov mov out (bad) adc outsl std cmc in mov scas (bad) das (bad) hlt jg stos pop std (bad) addr16 xchg mov das std sbb pop sti outsl aas (bad) push jg lret jg mov mov push repnz pop call xchg mov scas jmp ret stos push jnp cli pop std or fstps jmp icebp scas lcall enter std (bad) ljmp call jge paddd in negb mov cld push repnz cld aam hlt fwait jmp in pop repz sbbl jge pop stc (bad) aas cli pop es pop stc scas inc icebp loope repnz test jg out mov or fnstcw hlt (bad) aaa dec (bad) (bad) xlat jnp out cld mov das aas sti cmp sti ja push mov cmp loopne sti (bad) std pop repz lds push aas icebp cld das (bad) cld int cli jmp sahf aas out jg cmp fldcw lahf push hlt das cmp pop icebp clc aas clc pop jle aas std mov lret (bad) jmp (bad) fbstp cld scas jg lahf cld xchg sbb jle xchg (bad) sub inc aas repz std xchg inc cmc lahf mov dec cld cmp divb cli negb cld in fstpt pushl (bad) adc cld loopne (bad) stos jle (bad) aas cli jge (bad) lahf (bad) daa ds sar mov pop jle jg idiv dec jle scas jmp jg fistpll std xchg int3 outsl jp jnp add pop stc (bad) std in jle pop jmp stc imul (bad) idiv push out out pushl stos jmp (bad) jg lcall jg push std pop (bad) (bad) imull daa mov cld jecxz cld popa cmc pop cmc xchg std xchg mov scas cli not dec scas dec lcall lcall mov jmp iret (bad) stos iret jg cli lahf std pop (bad) mov lcall (bad) in cld jg int jecxz jmp sti invd (bad) mov std mov fnstsw pop clc ret call and call aas jns stc dec outsl in (bad) stc jg in (bad) call aas sti xlat jge idiv jle lds (bad) ljmp fistpl cmp std jg dec dec pop cmp (bad) fnstcw std imul jg push std jnp ret out mul iret sti cmp jg and outsl cld aam cmc imul in cld pop mov fbstp pop out sti std mov jg pop sti int (bad) pop mov xlat jg (bad) pop incl xchg out (bad) roll cli addr16 push setne xor jmp call mov hlt xchg cli push aas hlt stc pop imull ljmp dec clc xchg jle jg idiv fnstsw jmp pop and lahf cld cmpl add pushl cmc decl sbb std shr (bad) fldt fistpll cld dec (bad) mov (bad) (bad) (bad) mov test fistpll stc fcomip jmp (bad) push mov int sar push jg cmc mov (bad) jmp imul cmc out pop dec imul das (bad) jae jg lret jg lahf (bad) cmc decb outsl lock repz dec decl gs out (bad) mov repz pop cmc cmp (bad) jp std out (bad) (bad) xlat sti lods call aas call (bad) clc lahf clc sti jle jg stos xchg std push mov sarl (bad) iret pop push jg aaa cmp daa idiv xchg push aaa clc sbbl outsl jg pop sti outsl mov fcomip aaa sti xlat dec fucomip fistpll incl jmp (bad) fimull mov dec sarl or (bad) (bad) icebp pop repz rcr jnp,pt fwait iret inc xchg sarl lcall aad pop mov out jg (bad) (bad) test decb (bad) mov mov jecxz std xchg ja in lahf stc sub mov mov call ljmp paddw jmp cmp stc outsl (bad) jg lahf cmc daa jg pop std pop ja (bad) jmp pop std mov fcomip pop cld jmp cmpl hlt ja incb das jle cld pop (bad) fcomps inc pushl jle idiv out cld bnd out pushl clc sbb xchg int3 pop neg (bad) fidivr imulb imul clc mov out aas sti push jmp (bad) sti outsl push std pop aas inc icebp (bad) pop mul mov aaa jle jmp mov out das cmp scas xchg mov aaa cld and mov in push (bad) gs pop incl fidivr ljmp rcr rep lcall pop cld movq lds lcall rcr (bad) dec jg icebp (bad) (bad) pop pop std mov sti jmp hlt cmpsl ds repz pushf mov jge jmp mov cmp adc fcomip mov repz outsl (bad) jge lcall pop (bad) loopne ljmp in (bad) xchg aas stc xlat cli out leave (bad) idiv in jmp fcomip dec stc mov or (bad) fstpt cmp lods (bad) out outsl icebp stos out ret scas sti cmp out fcomip xlat cmp mov leave scas ja pop std fnstcw clc (bad) hlt stos decl (bad) inc (bad) out pop cld out cli (bad) xchg call fcomip iret push pop (bad) mov fstpl (bad) aam (bad) out sti jg repnz outsl idivl pop clc inc cld lcall jl lret (bad) xchg (bad) jmp jmp imul mov fnstsw dec pop (bad) jp rcr repnz (bad) fnstsw idiv xchg stc pop (bad) fcom pop testb lods stc pop icebp scas lcall jmp jge jg cld mov dec lret cmpsl pop mov pop out cmp addr16 lret cmpsb xchg dec (bad) ljmp dec leave ja test in jl jle leave pop cli lahf std imul aaa call aaa sbb aas dec stc (bad) xchg call (bad) ljmp aaa (bad) jecxz loope aas cmc sti xchg (bad) clc mov pop sti sti jge dec pop std imul jg fcomip mov cs mov add hlt (bad) stc movzbl fdivrs jg addr16 sub lods mov push xchg out call out scas (bad) xchg aaa mov jae loop out clc inc jg scas cmc jnp icebp xchg (bad) out mov (bad) xchg pop pushl mov call jnp rorl pop cld sub sbb cmc pop in std xchg outsl negl std push mov cmp jnp (bad) (bad) fidivr xchg repz jg pop lock incl std push std xchg (bad) cld pop clc cmpsl scas jle jg mov (bad) jge (bad) std mov cmc mov jno jmp in mov jecxz lahf rep mov std jnp pusha cli (bad) add (bad) pop mov lahf (bad) in stc pop jl jecxz iret pop jb imul repz das cld (bad) jg adc out jg (bad) push (bad) fstpt pop (bad) mov cltd std cmpsl mov es rcl jmp dec decb mov call mov (bad) pop mov cld push jg idivb (bad) push decb jl addr16 aaa jg (bad) popf fildll push icebp out sub sarl cld in mov pop jg lahf decb (bad) mov (bad) push ljmp decl jmp repz clc push leave aas repz (bad) scas mov dec mov jmp out das jge std jecxz into aas clc jg cltd mov stc imul pop (bad) aaa (bad) in jg out mov push (bad) in pop jecxz cli insl (bad) sub sti xchg ds das jle,pt div outsl stc xlat (bad) fdivrs cs xchg sarl jg (bad) cld idiv mov out (bad) mov shrl mov std mov in sti call mov std idivl push iret (bad) mov enter cld scas lds cmp mov frstor (bad) aaa fidivrl lahf std in jg out inc cli sti jg inc icebp (bad) jg icebp pushl mov jg mov jg pop icebp mov (bad) (bad) clc and cld and jge outsl dec xchg das cld push dec jg jg or decb loop std (bad) push daa (bad) clc jg iret cmp ret inc mov cli pop dec (bad) incb stos stos out push cld decb lahf cld xor leave scas jle aas (bad) jnp fstpt call jmp in std and mov idivb std mov out cld fwait decl pop (bad) cmpsl (bad) clc push cld sahf jg fcomip iret inc mov (bad) adc (bad) lahf std fidivrl negb paddw pop (bad) ficomp xlat pushl (bad) cli daa aam outsl imulb jg ljmp (bad) ljmp hlt hlt cmc inc (bad) fisubr cli roll lret daa (bad) cmp (bad) mov mov cld repz idivl pop lcall lret stc out (bad) jnp call stos mov jle lret lahf cld ljmp in (bad) pop lahf cmp jg out cli jecxz (bad) nop dec jmp pop div cld movsl (bad) (bad) pop icebp inc call incl xchg push call pop negb aas (bad) cli (bad) ljmp jle mov aas ja mov sub call cmp test adc clc out mov jg mov movq out inc (bad) imul mov jne push in negb mov out incb xchg pop out cmpsb inc outsl add std das std cmp lret das cld mov std add das sti mov sti in cld std (bad) mov pop lahf pushl (bad) in mov aas stc fld1 pmaxub aas jg imul inc push mov sti aas (bad) mov mov arpl pop std xchg xor lahf ss stos pop (bad) jnp lods mov jg aaa cld pop mov pop lock stc loop (bad) mov stc outsl mov jmp lods (bad) (bad) jmp sti or (bad) aas repnz std pop call xchg push jg lahf hlt clc scas mov cmpsb aas repz sub insb (bad) mov loope repz or jg lahf sti (bad) cld (bad) in icebp mov cmpsb clc jmp dec jg dec jl (bad) mov idivl dec scas sti jmp pop stos jg mov pop (bad) cli dec out bnd jbe out outsl call pop (bad) push jg fcomip mov test daa std (bad) mov int repnz cs (bad) idivb lret aas out cld lahf lcall mov cld std ja fistpl mov cli adc (bad) sti std ljmp aaa cld xchg sahf jg out stc mov clc fnstsw scas clc cmp jg dec dec dec (bad) sbb cmpsl (bad) hlt outsl icebp cmp loop scas push in std test (bad) jg mov mov xchg jmp aas clc daa mov lret cmp add xchg jg outsl idivl iret iret inc ja out clc xlat pushf (bad) ja (bad) movsl daa push ret cmp pop repz popa jg pop std popf fcomip scas stc pop aas sti fisubr push fdivr and mov outsl jle cmpsl jg aas ljmp sbb lret (bad) fcomip jmp xchg dec pop cli addr16 (bad) fdivrl in das pushl (bad) push dec cmc orl decl rol jg mov std das (bad) jp fdivrs loopne in jle pop cld mov mov jnp xchg outsl std gs int bnd (bad) pop stc inc std cmpl cmc xchg lds (bad) clc adc jle,pt dec cmp outsl cli mov iret cld push (bad) std jmp decl (bad) jge (bad) mov hlt push jmp aas clc sar mov cld and mov mov iret outsl hlt fwait mov (bad) std hlt fcomip lahf pushl xlat jg xchg cld daa cmc mov jmp out ja cmp (bad) stos (bad) mov jmp cli xchg test sbb (bad) in pushl fstpt std ja cmc das std and icebp (bad) mul idivl in jg jmp cld loop out cld adc cld scas decb lahf jle lahf cld lret push fucomip daa inc jg scas cli pop jle mov jg fucomip aaa (bad) fwait jg iret enter jg cld pop mov cltd jg lahf clc and stos icebp pop cld out arpl pop cli (bad) xchg jg mov stos aas cmc mov outsl sti out pushl (bad) in (bad) js xlat pushf jmp (bad) in lret jg mov in aas repnz fdivrp hlt outsl (bad) xor iret pop imul scas (bad) mov sti repz cld lahf dec fcomip or mov cld sub jnp mov repz (bad) out (bad) push inc scas cli jge std (bad) lahf decb loopne jae (bad) (bad) sbb aas sti leave fucomip aaa call jg pop cmc sbb (bad) (bad) idivl jmp mov (bad) sbb out addr16 aas in cli test cmp ficomp mov pop cld cmp lock daa into (bad) mov fsqrt xchg jle out (bad) insl (bad) (bad) jg das jns cmp add lds (bad) aas decb mov dec jg mov mov mov jle in sbb (bad) icebp jg cmp (bad) mov jmp in jle ret jmp lods cld jne lcall insl (bad) out jg ja daa (bad) mov gs aas (bad) xor std sub pop (bad) aad lock fwait jg outsl cmc sti std mov std push mov push lods mov rcrl fistpll push jg fcomip pop mov (bad) fdivrs call lds lock jmp lret cld add mul mov jg pop jo iret sti sub idivb out scas cli insl pop cld sub rcr clc imul jg aas stc pop (bad) fmulp mov cli lahf decl sbb pushl (bad) paddd jg fstpt (bad) mov pop pop jl cmp cli in cli movsl (bad) in cmc out pop repz aas stc (bad) jmp cli loop (bad) icebp mov out hlt in clc lahf jmp dec (bad) in xchg jg mov rcrl push (bad) push mov pop decb repnz std mov sti (bad) out mov daa (bad) call dec cld stos (bad) (bad) out jmp clc (bad) sti xchg dec sahf cld sub scas inc fucomip pop std jmp std sahf call scas jns mov pop jg aaa cmp idivl lcall hlt ljmp call div stc sub paddw call push addr16 hlt cld outsl sbb (bad) (bad) sti out outsl clc jg loopne sti rorl pop jecxz cli add (bad) lahf stc ret mov pop divb rcrb aaa mov outsl jle sbbl xlat jg scas repz or inc icebp mov in lahf std pop cld sarb hlt xchg call cld fwait int3 mov cli pop std xor (bad) lahf cli sbb test mov stc mov das daa push pop hlt das jae out outsl stc daa (bad) clc popf aas out idiv call ljmp (bad) mov out (bad) inc (bad) scas (bad) aam cld xchg pop (bad) leave jle mov loopne (bad) idiv clc jecxz fistp repnz cld xchg jg outsl stc idiv icebp leave ja in (bad) pop push jg outsl (bad) pop pop std sti inc das lcall scas aas cli mov (bad) aas mov outsl cmpsb (bad) out out repz cli outsl iret mov std ficom aad (bad) scas (bad) stc pop sti dec mov push (bad) cmc pop clc dec out (bad) and icebp jmp ja jle in jnp mov inc mulb (bad) fistp fstps icebp fstps cmp mov pop sti dec jle xlat (bad) mov fdivrp rorb jmp ja pop jmp (bad) in aas cli sub clc repz idiv inc (bad) fidivrl repnz fbstp hlt imul jg mov out stos aas out cld ljmp xchg jmp outsl std call aas cli cmp in jecxz jno mov out cmc stos jle std jnp in div outsl (bad) mov mov pop sti fbstp fdivrp cld addr16 lea cmpsl cld inc jg icebp aas cld (bad) dec jle dec push (bad) aam aas push psubb (bad) fdivrl xlat cld cmp lahf clc cmp ret xchg push jmp ja cli cmc push jg outsl bnd lods (bad) (bad) jg pop cmp pop mov mov out mov test mov (bad) paddd jg aaa cld pop pop cld pop jmp jg lods aas out sti sbb out aas clc ja hlt iret cld inc jg (bad) clc in fucomip pop stc jae std das jg fcomip outsl cld fidivr repnz dec stc push inc mov clc (bad) std xlat decl stc iret call rcr push cli daa ljmp outsl cli fistpll cmc outsl repz std lret lahf decb fidivrl loop (bad) (bad) mov call test mov aaa ds in ja scas (bad) test (bad) pop idiv loope lock dec call cld setg sahf jg lahf cmc (bad) mov in daa out (bad) cltd pop cmc pop dec mov jle idiv pop mov (bad) out pop cmc cmpsl pushl jmp cmp pop icebp xlat std cmp (bad) fucomip mov pop (bad) cld fcomip mov sar movsl mov icebp loop sti cmpsl (bad) (bad) call pop mov mov jg scas std mov js sarl mov out std (bad) hlt mov out psubw and (bad) les push aad sti mov aad jmp ds repz jg mov sub stos (bad) in iret cli xchg repz jg scas icebp in jmp aaa clc mov jecxz mulb dec pop dec mov push (bad) (bad) cmpsl aas sti mov clc dec inc fucomip idiv daa decl jmp outsl stc push mov jg pop jg (bad) jnp cmp pop jmp cld in mov lods out inc mov cli dec std (bad) jg (bad) pushl pop std mov rcrl pop (bad) pop mov (bad) hlt aas std movq outsl std pop jg jecxz jg mov das std sbb fcomps (bad) in mov (bad) std push (bad) hlt fnop aaa pushl xchg std pop (bad) into scas cli gs outsl cmc xlat std push mov stc pop dec sahf (bad) mov pop (bad) pop (bad) call popf lahf stc pop incl (bad) xlat pop hlt aaa jl,pt xlat (bad) mov stos (bad) cmc jg ja jle das std sbb (bad) out fistp lahf std std jg ja sub jg std xchg (bad) fwait mov das clc out cld inc jg (bad) jae iret cld fwait (bad) loop jl cmp mov insb std (bad) jmp aas cmc aaa lcall or cltd aas jb addr16 test lahf inc popf mov repz popf cmpsl mov sti inc jecxz mov jmp pop cli lahf jmp jg psubd incl sbb (bad) fcompl ja sub out leave leave outsl (bad) sbb adc cld imul cld movsl jmp mov incl or jnp idiv int3 pop mov test aas arpl aaa clc mov xor sti mov pop (bad) sti mov sbb lahf (bad) clc shll jmp dec lcall aas jmp jnp (bad) loope repz out daa jg mov das jle repz iret ljmp xlat (bad) mov idiv loopne sti daa (bad) xchg jg (bad) stc daa incl sti lock mov icebp call ljmp stos fcos lock cld add (bad) jecxz sahf mov repz fcompl inc jmp sbb mov std std jg mov mov cld inc (bad) fdivrl aas icebp icebp aas icebp cmp xlat jg dec cld jmp mov mov repnz decl or cmp adc fwait jle cld das call lahf cli fwait incb inc cli scas std sahf jg push std jg das cmp push (bad) cld imulb (bad) pop jbe jg mov push (bad) mov lock cld inc mov imul push (bad) std xor aas imulb lock std mov sar aas repz pop call sarl (bad) (bad) fucomp stc rorl (bad) lock loopne incl pop (bad) sti mov (bad) call mov xchg cld cmpsl (bad) das stc dec decl inc jg pop negl std outsl jg mov jg negb std push mov es ja test in call (bad) clc psubq jle lahf mov jg cmovg test ljmp fmull (bad) clc xchg (bad) cli out repnz mov (bad) sti iret jle jg aas sti xlat jle aas std pop sti (bad) aas hlt cmp (bad) jg aas clc mov aas je sbb out (bad) ja in call mov jmp lret jp into ja lods mov jmp jmp jg std out cld sti mov jmp incb clc out clc divl aaa stc (bad) pop hlt outsl std fwait aas cmc lods jg xchg sarl xlat sti pop mov test das stc stos (bad) xchg pop jnp (bad) xchg mov (bad) (bad) xchg aas std mov pop decl int popf xchg jg (bad) jge leave lahf testl push jg (bad) mov (bad) in pop cli jnp aaa sti sbb popf (bad) jnp sarl pop hlt xchg cld lret jg jg aaa cld push jg aas cmc (bad) cld aad jmp cmc leave lahf sahf cld idivb (bad) out cld das mov adc std aas std inc (bad) cld (bad) mov in hlt mov inc (bad) out mov out mov jg (bad) inc mov std cmc addr16 mov decb adc inc fist xor mov call (bad) sarb aaa mov sti repz stos (bad) fnstsw xchg inc jg fistp loopne paddd (bad) aam std outsl jge xchg (bad) jecxz std push (bad) in pop cli fwait incb in (bad) mov jg scas divl frstor ret pop sti dec jp,pt (bad) pop jmp mov cld cmp shr stc (bad) std and aas pop call jmp (bad) cld out into jmp pop repz (bad) jns into out (bad) xchg sar rorl (bad) fdivrs std lahf call shrl jmp incb std mov (bad) mov leave fucomip aas stc aad in pop hlt out cli lods fbstp out ret lahf std jnp xchg mov ljmp loop cli stos mov cli mov in fcomip (bad) pop (bad) icebp fucomip lahf cld daa scas fwait mov scas aas stc sub stc aas stc ljmp das dec pop (bad) out (bad) stc scas mov xlat icebp aas (bad) ja jns shr cmc stos jg out mov dec cli fisubr std sbb mov clc dec (bad) adc pop incb mov dec sarl std scas clc popf xchg mov pop jle jmp scas (bad) sti dec mov (bad) stc pop negb jmp jg sub jg inc dec dec ds daa (bad) adc cld push jg out (bad) jnp lods daa xchg jg std repz inc mov mov jle dec (bad) ljmp jge outsl cld sarl cld ja mov pop jnp (bad) cmp inc jmp lahf (bad) (bad) rcrl fnstcw dec cld insl shr std push (bad) fcmovnu stc (bad) icebp cli repz lock (bad) sarl mov cli cmp cli call cld pop push mov pop cld paddb jmp mov decl pop cld xor out aas jp mov ficompl cli incl repnz negl cld cmc adc call (bad) idiv lods mov mov int3 aas je (bad) aas jg lods jg scas (bad) out jg idiv das ljmp out clc mov xchg lahf clc push aas cli (bad) rcr lock (bad) sbb pop cmc inc (bad) clc aas not outsl ljmp std mov stc mov aad (bad) jmp sti sbb xlat cld and sti xchg (bad) mov xchg jg (bad) jmp fsubrs jg pop je sahf std dec addr16 ja cli cmp aad repz std cmpsl jg mov out (bad) cltd pop jecxz clc lds aaa std sub outsl stc idivb cld in (bad) fcomps jnp ficomp fistpll mov ja sti pop out std iret mov (bad) xor icebp daa decl das out xchg mov out (bad) scas aas loopne sti jae cld in lret xchg inc dec mov lahf jmp pop fstpt aas (bad) in (bad) fdivrs (bad) (bad) (bad) cmc jle stc outsl jl mov fcomps lahf clc push jg aas jnp out pop inc mov iret in (bad) xor jl (bad) mov mov in pop std movsl call (bad) clc pop jl xlat cld es (bad) sti xchg std (bad) pop sahf pop std mov cmc aas icebp fstp out ljmp xlat shrl insb lret pop jg dec jl dec (bad) stos out cld adc fbstp aas cs xchg jmp pop lcall (bad) (bad) scas lahf std pop sti jg push (bad) std mov insb jg stc cmpsl cld add push (bad) jmp or (bad) hlt fwait popf std (bad) call push sti jge cmp (bad) push sbb icebp pop dec out cmc cmpsl (bad) ljmp mov (bad) call and jp mov stc mov loop call (bad) fcomip dec clc add fisttpl clc mov mov iret jle fistpll imul jg out std push cld pop jg mov lea ja sub cltd jmp aaa clc in jg in repnz mov (bad) xchg int scas dec stc fcmovnbe fnstsw aas stc daa fdivrp jae call scas clc fnstsw jg repnz cld popf pop decb imul pop call call jg pop aas cmc repnz lcall cwtl (bad) xchg daa cmc pop jp int daa push out cli jnp pop push pop clc jmp (bad) jg lahf std xor pop std aaa ja (bad) lahf das (bad) lods lahf jle in les aas push (bad) cmc (bad) cmpsb clc sti out stc idivl out lret out stc ljmp out sti std incb mov (bad) clc out (bad) mov ja scas (bad) in fcomip cli fildll mov cli fistpll fucomip (bad) stos incb lods mov lds clc pop cld outsl (bad) jmp sti xchg std pop jg pop cld out jmp jg loope fdivr aad in incb (bad) notb (bad) dec mov aas cli cltd jg push std pop jmp cli scas cli inc mov push int (bad) sarb out into aas std paddd jg ja imul ja pop std mov test lret xchg aad std (bad) jle cli iret jmp das pop std leave jg lret aas dec lahf icebp out push iret cmpsb in das mov fidivr das lcall popa inc out mov sahf std sbb (bad) jecxz in cli insl (bad) ljmp std in push (bad) icebp outsl clc fnstsw push imul aad jno mov mov jnp fimul std lock sti fnstsw pop (bad) jge scas mov int (bad) sub jnp mov iret jg jno stc fcomip cmpsl (bad) (bad) (bad) aas mov jle decb cld adc jg bnd jne jg aas lock (bad) lods mov sub lret (bad) mov (bad) idivl (bad) in jle jg (bad) sti mov fistpll dec cld stc jg mov mov call lea jns pop popf jge aaa jle pop cld jne clc daa push incb dec pop jnp mov mov repz (bad) jnp mov xchg aas clc in (bad) xchg mov (bad) pop jecxz push (bad) in push pop ds cmpsl cmpsl insl pop lcall jnp mov cli lds idivb inc fistpll scas cli sub push lahf (bad) mov xlat jg mov lret call fcomip rcrl aaa mov jg scas clc inc sahf cld test jmp mov dec jg aas in cwtl (bad) lcall cmp icebp pop std inc (bad) fyl2xp1 mov (bad) into lahf negl (bad) cmp lahf cld mov cmp gs mov lret mov jmp stos lahf (bad) in sub repnz (bad) cmp sar stc mov std mov jg dec pushl fstps leave xchg jnp in pop icebp xlat ljmp (bad) push imul mov cmp das inc cmpsl mov mov ficomp cli add lahf clc dec xchg mov mov out idiv inc aas std addr16 jmp fnsave rcrl mov jle lahf lock adc pushf std mov hlt out (bad) mov int jmp mov pop jge pop jle pop dec (bad) or mov sbb cmp jg mov jae sarl (bad) pop (bad) mov hlt push pushf incl aad idivb jmp (bad) jmp cmpsl mov call (bad) (bad) out ret jnp lret mov mov cmpl rorb incb cmc xchg (bad) stc pop stc sbb mov mov outsl repnz decl lahf pop std daa jg das std mov cmc mov scas (bad) jmp in std fwait pushl (bad) out pop jg mov (bad) insl jle cli outsl sti mov jecxz leave fisub incl iret stc jecxz enter clc hlt aas clc sar pop loop mov (bad) cmc xchg mov ret ja incb xchg loope mov mov sti xlat cld lods sarb in pop notl cmc jg fisubr jmp mov (bad) in jg das mov loop std pop jg hlt (bad) leave popf pop stc das jge idiv xor div jmp aas std lods aas cli das cli xchg (bad) repnz push xor jmp sti mov pop sti popf jle aas push paddw push call call lahf stc and out std stos mov aaa (bad) fstps pop cmp in aas std xor incl mov (bad) (bad) (bad) mov loopne cld or (bad) clc xlat (bad) sar mov icebp pop call mov (bad) std mov rcr lret out int idiv std jbe lcall pushf cmp jne out (bad) out das sti pop (bad) fcmovu sti pop jle cmp cmp scas pushf sahf std jae repz std popf jg out repnz aad std outsl hlt sarl pushl (bad) xchg aas imull pop sti iret clc scas incl pop jg out jbe idiv lcall popf jmp outsl (bad) mov inc jg icebp iret fcomip mov movsl push outsl cld dec (bad) fcmovbe pop std outsl cld lcall std fucomi std loope aam repnz std pop mov daa (bad) fisub (bad) jp stc push pushl (bad) nop mov adc jne aaa clc sub push fsubr ret pop lahf (bad) pop mov (bad) in aas in loop incb cli daa jmp std lahf jg mov jg jecxz jg mov jg leave pop testb jg scas sti xchg mov ja outsl ljmp sub aas repnz out fbstp (bad) push call (bad) cld pop cmc loop (bad) in xchg mov push (bad) lods mov (bad) mov lcall inc mov mov pushl (bad) fsubrp cld (bad) dec jg pop (bad) cmp fnstcw aas lcall iret (bad) jnp mov sti sar lea jns (bad) int jmp outsl cli or stos dec dec (bad) (bad) aas cld idiv movsl jg daa lret aaa (bad) outsl call mov cltd jg hlt out out lock inc mov cmp xchg scas cmp pop jle mov decb lret outsl clc or das stc repnz lcall call aas cmc push std mov lock cld stos jmp xlat stc sub ljmp in out pop repnz cld (bad) pop std dec stc jecxz mov std and popf jg int negl aas sti jecxz (bad) jg mov jg (bad) mov outsb jg aas cli ja test into out lock pushl (bad) out in loope hlt daa cld pop jg pop sti paddb mov jnp (bad) je daa cld sar sar lock arpl in lahf sti hlt pop jg jg xchg cld call (bad) std ljmp in mov inc std push mov pop jle pop jmp out jg icebp cmpl std cmpsl cld sti fs jle aas std cmp fcomp pop divl clc aas repz out aas (bad) std jg lods jmp addr16 cmpsl mov notl jle aas (bad) jg sub repnz xlat stc lds lahf cmc call (bad) pushf jg push jge cmpsb cld sti aas jge neg dec jle (bad) clc scas cli jge lds call aas repnz xchg lahf ljmp ljmp mov mov das stc adc mov jns mov leave mov aas mov fucomip cmpsl (bad) stc mov mov cli (bad) pushf dec lahf ljmp push lahf cli idivl aas std cmpsl (bad) ljmp scas std jg loop aaa cld call xor aas fdivr xchg mov (bad) idiv dec jg jg out pop sbb jg scas decl jg inc jg mov cli xchg jg pop std inc jle scas stc repz lret aas push xchg mov add (bad) jg idivl aad jne repnz sahf (bad) pop aas std outsl cld aaa jg outsl lock js arpl rcrl jg fcomip pop (bad) daa sti jg (bad) cli lahf (bad) mov out (bad) and sti aaa (bad) scas jg fcomip lahf mov fucomip dec cld stos jle pop sti outsl cli lahf scas jmp std scas call fistp ja mov std scas std gs cld icebp aas icebp aaa (bad) cli mov jecxz sti or mov stc and sti cld in jg push (bad) jge (bad) pop mov lret repz push lret ss (bad) xlat mov std ds aas mov mov ja cld ss clc loope jg cld (bad) clc psubq jmp jg out pop mov dec (bad) out jg outsl js daa std out jmp lahf std out outsl cli das pop (bad) fstpt pop clc ja pop jmp outsl imul outsl clc icebp jg cld in outsl std jae ret pop repz std (bad) mov (bad) iret cld sbb repz sti aas mov xchg (bad) scas cli (bad) (bad) lods pop repnz lahf cli adc stc pop (bad) mov inc jg pop repz loop outsl clc ja std adc mov mov pop jg inc ljmp xchg push pop (bad) cld (bad) jmp call out pop incl loope sar std std jg dec sahf lahf incl shrl cmc idiv into pop (bad) (bad) fnstsw lods cld fwait ljmp cli shrl xor sti push (bad) jmp stc stos lcall aaa jp cmp (bad) (bad) sbb in jg pop (bad) fwait jle mov pop (bad) fistp in cld add xchg mov jmp mov out pop cmc cmpsl cld into mov outsl xchg aas popa mov ja xchg inc dec dec cld pop incl cli daa push sbb cld cltd jg aas div dec lods jle psubb (bad) cld outsl cld std jg dec std cmp xchg xlat aas notb (bad) jnp leave jg call clc lods lcall cld pop incb xor (bad) rcll out xchg aas cmp sbb idivl mov out (bad) (bad) sti jg loope (bad) mov cld idiv xchg (bad) out paddb decb cltd mov incb jp,pt out std lahf pushl incl ljmp clc ja xchg addr16 jae repz std lahf mov imull jmp lahf int3 call jmp pop clc aaa es aas loope out std adc jmp sbb aas sti outsl cld cmp mov repz cmpsl cld loope cmc pop cld dec jg aas clc mov jg das sti pop call cmp pop negb cmc jg lahf repnz sti aas mov out mul aaa (bad) xchg jg icebp outsl stc mov jecxz out outsl sti addr16 jg scas cli call in (bad) dec scas ljmp lahf jle out jg ja imul inc lahf cld cltd aas out ja and fldpi out lahf decb mov cmc xlat mov (bad) mov out cld lahf jle aas (bad) fcmovnu cli clc mov test xchg std mov call popf (bad) mov stc addr16 inc aas and imul mov lods ds imul (bad) fnop inc pushl (bad) (bad) icebp jecxz fnstsw repz push (bad) aam cld push lcall outsl dec jmp cmc lahf repnz aas std mov jmp mov jle pop jg pop sti (bad) lcall iret out repnz cld xchg (bad) fstps std (bad) jbe push mov xchg pop jecxz sti daa jg aas clc xchg call fucomip scas std lahf ljmp jg mov clc addr16 adc cli leave das (bad) aad into stc pop (bad) cmp insl lcall mov jecxz sti inc inc (bad) cli bnd cli std push mov mov cli cmc cmpsb mov jg lods aas (bad) cmp xlat aas cld pop popf std dec jg scas sti ja cld dec mov dec (bad) mov (bad) (bad) mov cmc hlt scas cld inc jg lahf (bad) hlt das (bad) std call (bad) dec sti aaa jmp jg lahf clc fstpt lret (bad) stc out pop xchg cld outsb jg fcomip arpl (bad) push std mov aas cld pop mov std jg pop (bad) pop jg cli jecxz (bad) mov pop in std jne incb aas cli idiv jmp aad out sti jne test std push (bad) mov lret push cmc jg cld ret (bad) cwtl jmp mov negb cld pop std out pop (bad) mov decb out aas std sbb mov out aas icebp cmpsl (bad) movsl jecxz repz clc std pop clc pop sub jae pop std pop call aas clc dec std jmp jmp cltd repz das insl pop cld test jg pop pushf (bad) idivb call pop std (bad) cld mov jnp sarl scas into jbe rcr jmp pop (bad) (bad) (bad) fistpll fistl fnstcw cmp cmp pop inc jg mov test jnp idiv repz cld jno cmc sarl aas (bad) fcmovne jg aaa (bad) ljmp jmp (bad) jae jg lahf (bad) arpl pop divl nop (bad) clc dec (bad) fistpll mov daa jg (bad) clc outsl sti jmp int3 (bad) out dec sarb sti mov jnp (bad) daa jg lahf imull out stc out icebp popf mov std push (bad) (bad) mov and std (bad) inc jg out idivl cli aas jmp call cld ja cmc aas stc das cld mov dec scas fwait lahf cli xchg call pop push std stos jg pop (bad) jnp rol hlt inc std dec lret jg lahf cli iret dec fucomip mov stos jg lret pop negl cltd (bad) ja (bad) aas out cmp cmp aas cmc mov (bad) jg out clc das std xor out cld mov call daa jnp jmp mov repz scas (bad) pop pop and (bad) dec sub divl jbe (bad) ljmp mov pop repnz jbe ja (bad) ljmp pop fidivr (bad) aas stc out call jnp (bad) std ret jg fstpl outsl cltd cld repz in lahf decb call sarl sbb aas cli iret cli pop sahf cld rcr addl std xor push (bad) icebp (bad) (bad) icebp out es aas clc push jg aas sub out xchg push (bad) sahf dec jg outsl std jp (bad) fisttp fbstp repnz cld or negl dec xchg jmp outsl icebp out incb mov cmpl jecxz loope mov inc fild mov notl mov mov stc lds jmp out out pop std inc std jae ljmp cli scas jg loope dec repz imul loop jmp stos fcomip push std pop out dec (bad) dec jg fistp fs dec dec out (bad) aaa lahf jmp cmc pushl call jg repnz (bad) mov jle fcomip iret clc call sti fisubr std outsl std ret mov pop (bad) jle icebp pop cld pop and in ret (bad) jmp cld cmp std fnstcw pop pop std sahf (bad) jmp (bad) aam aas hlt daa std in outsl (bad) xchg addr16 inc mov (bad) xlat jg icebp into scas icebp das std inc fstpt jmp jecxz mov mov ja repz inc fistpll out and in outsl hlt in pop cwtl push mov (bad) stc (bad) cli pop mov psubd int decl mov jg mov jg repnz dec push out std dec jg mov es aas in idiv mov aas xlat jle out cld jae stc out lahf repnz std test pop hlt out out std pop push mov repz shrl lock clc ljmp in das cli aaa (bad) aam (bad) (bad) jle pop pushl pop ds call mov (bad) out pop std pop sti xchg repnz jg repnz stc mov xchg pushl outsl (bad) (bad) aas and mov mov (bad) out out out stc lods fild in decl clc scas jle jg (bad) std sub fistp andb fstp std ja push js jnp dec mov aaa std inc incl lret inc aas out aad (bad) outsl std idiv int3 mov mov repz (bad) out (bad) jns out lahf mov jg (bad) js cli jmp std xor daa cld mov aaa jg stc xchg scas in outsl ljmp xlat (bad) cli rcrl lret scas jl mov (bad) mov sbb cmpb iret stc mov aad stc sub jle mov scas pop cld sbb mov lret sar ljmp das clc mov cli popf jle (bad) jnp mulb std lcall sti pop lcall mov lcall negb aas repz jmp (bad) test xchg aaa sti in jg leave push iret cld push push outsl inc stc xchg jg sti fnstsw mov sti ficom insl (bad) (bad) mov in (bad) outsl dec jg iret movsb cmc xlat mov stos jmp icebp jg mov mov mov cmc cmpsl jg out icebp sbb jg out pushl fistp hlt lret jle inc negl in iret jg cld pop std (bad) into inc in mov jg (bad) int clc xlat push call outsl repz dec stc imul jmp xlat sti sti jg pushl imul (bad) aas sti insl (bad) ljmp mov jg outsl clc lods jg sti sar fnstsw cmc iret jns imul sti dec jle (bad) cli rcrl xlat inc scas call mov mov ja mov jg cltd in testb jecxz (bad) cli (bad) lahf repnz std or ret pop cld adc jg loopne sti das pop std pop mov jle fucomip ja (bad) idiv das mov into ficomp pop cld ret dec lahf (bad) cs mov inc lahf jmp dec push std mov loop stc cmpsl out cltd cld mov shrb jle xchg (bad) jmp (bad) jecxz imul lcall std loop out pop (bad) arpl sti ds mov push lcall aad fnstcw jge scas ljmp lret idiv in (bad) call jmp xchg jg hlt pop insl (bad) mov stc cmpl (bad) fcmovu (bad) pop cli sar into fcomip scas clc and mov sub jecxz xchg jg lahf lock incb mov cli jg and and (bad) mov neg insb das mov mov leave out decl ret mov jmp lahf icebp clc das test xchg idiv mov icebp xchg aaa jg mov xlat mov jle pop (bad) mov jecxz lock mov lahf divl outsb sub mov jmp mov xchg aas jmp xchg pop cld pop (bad) ficompl (bad) in lock cmc jg mov ret lahf (bad) mov ljmp jg mov pop lahf ljmp out iret cld es repz adc out jnp sbb loopne sti sbb cmc int inc imul pop and push lcall (bad) loop clc mov test mov pop (bad) arpl mov in pop clc arpl pop (bad) sub (bad) cld mov pop sahf cld jne lock jle fistpll in imulb out pop repz jae jmp cli xchg jmp jg mov sti xor cld hlt pop sti imul cmc fidivr aas repz cld movq lds aad sti fucomip popf (bad) fdivr stc pop std cltd aas std sub sarb paddd pop fdivr dec (bad) fnstsw (bad) sbb stc mov pushl (bad) pop dec cld repz std sar fnstsw clc cmc mov adc (bad) (bad) or xor (bad) lock jmp aas hlt aad jg aad repnz cmp lahf decl jnp or push xchg inc call fcomip pop fdivr inc sahf cld cmc mov cld daa idivl outsl pushl cli inc inc fidivr divb push mov aam repnz cli jge das outsb std int3 (bad) popf jg outsl jmp push lahf inc (bad) rcrl jg in ljmp (bad) aas (bad) cltd (bad) dec call mov xor std lret dec (bad) pop jg outsl sti fnstsw lock jg loop std lret push jg cmpsl decb stc xlat std sahf in aas lock int3 jg aas cld jnp (bad) mov fwait mov clc psubd gs mov push decl scas (bad) aad mov sti dec ljmp iret (bad) out mov iret inc dec push fwait std ss std paddw mov std in cld xor in out mov push mov push (bad) mov xor call (bad) mov add mov popf (bad) cmp aas std pop std jae jg out aas cmc pop (bad) lcall addr16 sarb repnz lods (bad) mov mov lcall sub mov stc stc in cld mov (bad) and std jbe push decb sub sarl mov aas loop jnp bnd outsl jmp fucomip pop xchg adc cld loopne cli cmpsl lret lahf cld out outsl std jle bnd cld mov fucomip (bad) std in (bad) lret fucomip incb jnp dec cld sahf dec pop div cmpsl sub dec pop cld dec jg scas clc imulb cmp stc jecxz (bad) addr16 in cmp lahf (bad) pop std or (bad) cld fwait aad cmc aad pop mov das mov aad incl clc (bad) cld mov mov fiadd loopne sti jge (bad) out cld mov cmc clc fnstcw (bad) popf jle jecxz in push lahf std (bad) inc (bad) (bad) cmpsb lahf clc in rcr (bad) ljmp repnz xchg inc das das mov mov cld push call pop icebp ja dec jg pop sti outsl std int fisubr out cld sbb loop repz (bad) jmp call stc out (bad) out sti cmpsl dec decb pushl (bad) xchg (bad) sti jmp lahf cli xor or pop incl das lcall fcmovu in stc std lahf pop call stc jmp ljmp lcall and cltd dec jg outsl cmc dec decl aas (bad) sti mov addr16 std push lods cmpsb mov std dec mov (bad) icebp out mov and xchg aas in in push (bad) pop std cmc lahf cld cmp cmp hlt das cld mov cltd aas cld cmpsl (bad) fnstcw ja incb out cli add lahf cld es dec cld (bad) push pop std xlat mov (bad) scas pop sti mov dec pop (bad) mov sar fidivr aaa cld (bad) xlat pop fdivr push jnp shrl ljmp loopne (bad) jge jg lahf (bad) fistp lds stc jg icebp (bad) fcomip mov (bad) jmp addr16 xchg mov aas jecxz and cld jecxz icebp pop (bad) ljmp cld in cmp inc (bad) fdivr std outsl std xchg out std out repz lock std daa inc scas stos (bad) mov call (bad) fstpt (bad) cli scas std inc jle aas negl hlt lods jg cld stos jle pop cmc xchg cld cmp aas ljmp out (bad) stc or pop jmp clc pop ljmp xchg (bad) mov std mov pushl xchg push icebp xlat cld outsl clc in mov icebp out (bad) xor xchg out std ljmp mov xchg repnz (bad) (bad) xchg push sti fisttpll fsub jg jo icebp out cli fwait jbe fiadd cld mov jmp out std push push mov stos jg xlat incl std and jp or mov incl (bad) pushl std ja clc mov aad jmp out aaa (bad) sar mov call in out stc push lods (bad) (bad) sti call (bad) cli scas inc mov std ret lahf (bad) xchg (bad) mov pop aas imulb int3 lahf cld mov mov xchg cli jmp cli jg idivb jmp stos (bad) call mov stc cld outsl std mov in aas repz push (bad) in pop repz cld out into out hlt in ret pop cli daa cld loope fldt (bad) clc scas jns sbb (bad) dec mov (bad) scas cli jne out mov mov jge (bad) inc mov mov dec jg loop fnstsw icebp lds inc (bad) std clc (bad) outsb jmp push mov and std loop cld xchg idivl mov mov repz incb (bad) mov aas in clc ret incl xchg jg fist mov popf jle lahf dec aas mov clc (bad) sahf aas jmp daa (bad) repz in scas clc xor aaa std (bad) (bad) movsb pop repz jge sti (bad) jl cmpsl xchg mov dec decb jnp jg aad jnp (bad) pushl sti in cli addr16 lods jg std xchg mov jg (bad) (bad) cmp in (bad) cld pop std notl sti dec ljmp and jmp outsl fdivrp int std mov cli ret jle dec in (bad) jbe aas jecxz jl mov push dec (bad) jg mov ljmp lods (bad) cld inc in (bad) and repz jae pop mov pop cld push inc mov push mov cmovns decl in mov jg aad clc out cld mov iret jl xchg push mov (bad) hlt pop (bad) psubd in das jle jmp (bad) push mov (bad) cli dec (bad) movsb mov mov jg scas decb fdivr cmc mov int3 mov std cmp int pop jns scas ljmp aam (bad) gs incb dec lcall incl mov pop ds std add jecxz (bad) sub pop clc in iret mov xchg pop out scas (bad) std (bad) out (bad) pop (bad) fwait jle (bad) das (bad) test stc (bad) mov clc out jle das cld out sarb repnz std or cld lret out lock std mov icebp dec (bad) mov mov std jbe repz std (bad) repz jg lahf repnz cld mov (bad) cli (bad) rcll xchg aas divl lahf jle (bad) jle xchg pushf out call leave (bad) std xchg pop call jg dec (bad) cli jg outsl (bad) jmp loopne std and sarl (bad) xlat enter lcall mov repz sti idiv pop jle (bad) out loop fucomip das stc aad fucomip fnop insl (bad) popf (bad) std (bad) (bad) icebp jg lds jge sti mov pop std jle mov test pminub je repz cld (bad) (bad) out icebp lods jmp in fcomip das std sarl mov jg lret insl mov aas (bad) xlat std pop jg fcomip outsl cld ss fdivrp leave jg stc xchg aas in ja clc repz aas lock jg loopnew jmp pop cld or jmp lret fnstsw in idiv pop (bad) stc mov jg fcomip idiv in jg jg out (bad) cmpsl push cli call fcomip lahf (bad) popf scas jg lret mov scas call hlt dec cli int cltd (bad) in lahf cld inc pop ds (bad) decb or xor pop incl cmc scas std mov pop incl xlat movd (bad) sti xlat jl pop jl sti (bad) xchg dec (bad) stc fistpll cld sarl imulb dec pop cmc aaa ljmp mov out lock (bad) xchg jle mov in pop std aaa call sarl jg std xor (bad) jg lahf cmc das lcall push pop testl xor mov mov in ja (bad) mov jno incb std scas jmp out fisttp push cld sti mov pop jg lahf hlt cmpsl std pop mov jg xchg inc push add fnstsw ljmp repz out jp pop decb (bad) pushl sti ja push lcall movsl dec (bad) fnstsw iret clc and aaa pop int fcmovne lahf jo dec std push (bad) lock mov pop (bad) (bad) das sti iret (bad) popa into jg sub ds cmp loope imull call stc stc ficomp incl (bad) push (bad) in jecxz loopne stc cmp idivl pop cld mov jg outsl fsubs jecxz ljmp mov hlt aas sub (bad) out inc lahf cmp (bad) stos daa mov std mov (bad) push jg push push pushf incl mov jg dec clc aas decb sti cld dec jg aas clc mov jg jmp hlt pop sti pushl out das dec (bad) shr aas std mov std sahf fistpll repnz scas cmc jnp cmp imul cmc in cld add fistp jmp lods lahf cld (bad) repnz cld xchg mov icebp jmp in outsl push dec std cmpsl jg (bad) jg repz (bad) lahf pop (bad) jmp (bad) stos mov lcall lahf mov decl (bad) inc (bad) cli cmc out dec (bad) jmp (bad) scas aas cld in scas icebp cmp (bad) call (bad) std movsl push pop negb (bad) call scas aas lock sti sbb enter or repnz in in pop sti or (bad) std data16 (bad) std jmp cld pop mov jmp fstps aaa cld arpl daa std loopne mov out cli hlt scas iret (bad) fcmovnu repz push aad fincstp into incb jnp loop cld sbb fdivrl (bad) fnop aas (bad) popf lods aas call mov incl das sti dec dec fucomip pop sti sub shll aas out clc sti push mov aas in mov repnz out ja xchg (bad) mov out sti frstor decb into outsl idivb in (bad) xchg mov sub lret mov ja jle push mov jg mov ljmp push mov fucomip mov out mov icebp aas cld scas mov fucomip (bad) cmp cmp cmp (bad) in out (bad) (bad) nop fucomip aaa aas std dec es pop clc addr16 add (bad) sarl xchg dec popf mov hlt jg outsl cli lods fisubr outsl (bad) das std ja loope scas stc xchg aaa (bad) sti out cld movsl dec aas negl sarb dec outsl cmc out sahf jg lahf mov decb aas std aas (bad) mov mov into gs ja fidivr (bad) cli ja dec pop pushl ds test cli (bad) std lock stc or repnz sti ja jle aas out sti fisubr stc jmp repz cld lds lahf testb sub (bad) in in cli add (bad) push cli addr16 test (bad) xor mov mov xlat jle mov xchg outsl sub int (bad) stc aas xchg divl repz push inc icebp jg cmp mov frstor cld pop mov jmp jns data16 cmp push mov std fidivrl lahf icebp mov idivl clc jmp cmc in dec jg repz std pop mov mov dec mov jg scas imul lahf (bad) mov jg jg cmpsl std in mov cld sarl jno ja xor (bad) clc insl (bad) repnz les repnz xchg xchg daa dec inc scas pop (bad) pop jg das stc addr16 dec loop fstps dec std fwait mov std jmp xlat pop jns (bad) cld es aas cmc sub xchg (bad) out (bad) std pop out sar lahf std aas cmp pop jmp out decb pop (bad) call lods lahf std or cmp bnd aas negl mov stc mov (bad) call std lahf cld inc mov cmc das cld lds das cli xchg (bad) mov out sti lahf idivb jle pop (bad) stos jg mov jnp das std inc lcall lret (bad) in ljmp jg clc movd ja scas lcall mov lahf faddl mov fsubrl or (bad) push daa sti dec mov jnp fcos neg cld jge cli out ljmp (bad) jmp inc mov fsubrp mov daa std dec (bad) fdivr hlt lahf ljmp (bad) pop (bad) ljmp std imul fistl (bad) incb notb jle aas sti add mov hlt (bad) cld out (bad) faddl jmp jg xor jg jnp repz (bad) cli cmp and leave inc inc loop cli insl out (bad) sub fdivrp repnz lcall jmp aas testl inc (bad) mov (bad) sahf pop inc (bad) das inc jg into das cld adc mov cli cmc pop cli pushl jbe in pop (bad) sub pop cld repnz lock scas jle iret jmp pop idiv cli jne jmp jecxz clc popf (bad) out fcomip xlat lcall in cmp pop stc sbb fistp pop sti das sub sti xlat jg pop (bad) jg (bad) jg lahf repnz mov pop jmp cld cli jg mov jg outsl cmc lods lahf cld jecxz mov and cmp mov aas jle jnp jge mov mov xchg (bad) fistpll decl fldcw out std inc fs aas (bad) mov notl jmp cmp lahf cld xlat cld sahf dec aas dec jmp aam (bad) jg in das cld in stc in clc lahf clc adc (bad) les lcall mov jg je fwait cld pmovmskb (bad) das dec (bad) popf aas ljmp lods aas in cli jnp std add xlat call (bad) pop jg aas cli (bad) jg pop std std call inc (bad) mov cltd bnd lret (bad) movswl ljmp lock idiv pop mov out cli imull decl lahf (bad) ljmp lcall je iret (bad) pop jle jmp or stc push push decb (bad) jbe mov into fcomip jg (bad) fstps fst jmp (bad) aas clc pop (bad) (bad) jmp mov cmp (bad) bnd jecxz mov popf inc fbstp aaa sti mov out popf sub mov icebp mov mov inc (bad) das aas testb jg push std jp push jg ja (bad) jg (bad) call (bad) lahf lock cld xchg (bad) mov (bad) std xchg jle mov stc mov repnz std mov (bad) jnp sti (bad) out (bad) call xchg (bad) jmp jg scas cmpsl cmc mov lahf (bad) das (bad) mov push (bad) fldl pop push (bad) jmp (bad) fnstcw ljmp (bad) pushf jg (bad) std cmpsl mov icebp out cltd incb cld das pop mov jg repz (bad) jmp mov jle iret ljmp lahf decb lahf (bad) lahf mov jg fcomip cmpsl push std inc call das int3 (bad) mov decl mov lock mov lret jg jg mov cli imul out icebp inc jl iret (bad) outsl mov mov in stc or (bad) cld inc call (bad) aas jmp jnp sarb cmc pop out (bad) fidivr mov inc ds cmc iret jle lds cmc mov jp xlat (bad) fnstsw jmp fbstp dec fdivr pop jle out (bad) mov std sbb push (bad) mov out jg aaa sti mov (bad) ja (bad) cmpsb mov hlt scas repz loop idivl aas xor cmp out iret cld cmp jg mov idivl negb jge out sub ret xchg fcomip xlat cli js (bad) xchg jg pop repnz jg outsl clc xlat jg cmp jg neg cmp jle aas (bad) fucomp (bad) jno fcmovu hlt fwait cld clc xchg jg (bad) call aas cmp lds (bad) pop jg mov sub pop jg repz stc mov mov xlat sti and jg cli adc rcll daa ja call stos mov in xchg (bad) fadd mov jg repz cmpsl mov arpl mov sbb sti cld dec paddd jecxz lahf cli mov jle push mov out lahf pop pop (bad) pop jg mov jmp stc and (bad) sti fcomip xchg ficomp jg outsl idivl and dec sub (bad) sahf cld inc call das clc jmp leave outsl icebp jecxz cmc dec (bad) ljmp pop in cltd incb jg jg jmp mov fwait mov pop out (bad) push mov imul cli lcall lds iret push cld repnz xchg mov outsl sti (bad) push jg fcomip cmpsl outsb std jle pop dec scas icebp idiv gs call lcall pop icebp pop jge inc ljmp lock stc jg sbb hlt outsl lock (bad) stc ja (bad) cmc mov das cld cmp jg out dec incb cmp in (bad) pop (bad) mov icebp (bad) ret idivl cld (bad) dec jg push (bad) mov jle ljmp aas loop cld jnp mov ljmp hlt dec stc mov aaa sti pop ljmp inc iret inc mov ja movsl mov clc (bad) cld sar (bad) fbstp aaa lods call mov iret (bad) mov cmp pop cmc fwait cld (bad) out mov cmpsl incb incl jmp jg out fidivrl pop cld icebp (bad) das (bad) mov loop cld in aas neg std mov mov sti incb lock jle pop std mov ljmp ljmp sub loop call incl ret fistpll ret jmp cmc (bad) jmp sti das cmp (bad) jmp idiv mov xlat jg das clc cmpsl call aas clc pop sti pop out decl jg pop std jmp mov xchg jg sbb movq fcomip addr16 idivl call dec idivl addr16 (bad) mov jno loope repz mov (bad) ficompl ja inc aas negl (bad) stos jmp scas pushl fdivr pop mov mov icebp sbb fistpll ljmp icebp in cld (bad) das std ljmp mov aas cmc pop cld cmpl ds cld (bad) outsl std jno in addr16 std test mov cld jno negb (bad) aas cld lahf (bad) jmp mov std notl jge stc jne jmp out jge jmp clc sbb mov mov lahf (bad) (bad) mov outsl cmc sub scas incl aad std cmp mov xchg fnstcw negl cmp out jb jmp or mov scas std push mov xlat jns fwait call sti fcomip mov decl (bad) pop out std xchg dec lahf hlt sarl (bad) std aas std stos (bad) idivl (bad) insb call mov dec mov sti aas jg sarl imulb out (bad) cli jne ffree jmp (bad) daa cld out repz jg pop push decl or (bad) in jmp xlat mov lret mov jg sti pop sarl scas decl stos push das clc adc jbe jmp out pop rep cld (bad) call outsl (bad) out xor addr16 jp dec icebp xlat lahf jmp jg (bad) jmp cmp scas push std jecxz lock (bad) sti jle jg pop std insl (bad) std ret mov ljmp test iret jg std (bad) ja (bad) idiv nop mov push rcr (bad) fnop ljmp loope ds (bad) sarb hlt push dec call (bad) cld pop std out jmp out sti in ljmp aas stc inc pop mov addr16 lcall (bad) (bad) ljmp idiv ljmp addr16 repz sti cmc (bad) incb (bad) fidivrl stc stos (bad) aad out xlat (bad) jge cld ss fldcw ja (bad) jmp outsl jmp xchg in mov int (bad) pop outsl std xlat jg pop hlt daa jge dec std ja in outsl icebp inc cld (bad) jg pop dec dec push cld std aaa cld mov stc xor int pop (bad) (bad) imul cli pop cld (bad) jg jg pop (bad) push mov out std into mov decb cmp (bad) mov xchg (bad) iret jg repnz cli (bad) (bad) call cli xchg (bad) mov repnz mov in das sti jecxz sti push mov std or cld dec std jae mov lods jle (bad) stc in in lahf stc pop cld hlt aas mull cmp aas loop fucomip xchg lcall jg outsl hlt (bad) cld (bad) test out shrl jecxz fidivrl fnstcw dec jg fstpt jge aas cld mov in std and daa lret push mov lcall int jecxz xlat clc inc ljmp jle (bad) in (bad) (bad) fidivrl out cld dec jg decb repz jmp or clc lahf cli jmp jecxz decl cmc dec clc std out call fnstcw jnp fdivrl sbb xchg outsl repnz in pop cli push cld cmpsb call lahf (bad) push cld ja ret scas notl outsl std imul insl int repnz cld repz (bad) cli inc lret jg lahf stc jecxz negl out ja inc call outsl std add mov aas repnz clc jmp mov push inc fildll xchg call jmp mov mov jg (bad) cli sti (bad) in jg pushl divl cld inc bnd idiv in clc (bad) (bad) ja out mov inc std gs mov fcompl dec inc mov mov jmp cld xor (bad) aas sti fwait std sbb dec pop add aas cli mov out dec jg pop mov cmp ljmp idivl scas (bad) call cld sub jle fistp sti mov cld hlt jg daa pushl idivb mov (bad) xchg outsl jg fucomip paddb (bad) mov std aas sti inc jle jg hlt lds jmp aaa stc popf jg out insl std hlt scas repz (bad) fild lcall mov (bad) mov dec call jg aaa xlat inc fnstsw (bad) xchg scas (bad) out icebp fbld (bad) std scas stc test mov (bad) in jg iret movsl cmc mov mov cmc cld das std stos jg rcr clc das std cmp cli ret ds std xchg (bad) clc cltd fucomip dec sbb stos cmpl mov cmpsb mov sbb xchg lcall aas pop push mov jle cmp pop arpl out std cltd imul in mov mov pop cli cmp addr16 ret incl repz std fmuls arpl outsl sar call das cld das (bad) repnz jg iret cld int mov daa std jne jecxz pop jbe sbb pop jg cmc xchg mov mov cli out cmpsl mov (bad) aam cmc mov (bad) cld adc idivl jmp repnz mov cli pop (bad) call sti outsl cld pop xchg aas jecxz lahf cli or mov xchg scas cld out (bad) pop repz (bad) stc lret mov cmpsl iret push jg daa pop cld icebp mov cld fidivr lahf icebp jnp mov outsl jb out cli (bad) jle fcomip (bad) std stos incb pop lcall or jg (bad) jle aaa sti aas std addr16 (bad) mov call popf cld pop inc lahf std cmpsl cld imul icebp aaa cld mov stc (bad) jl (bad) loopne (bad) xchg inc (bad) ljmp clc psubw jle mov std fldt mov popf stc fidivr ficomp test gs std pop cld out fstl jle mov xchg push (bad) cld gs outsl idiv std imul lock push call shrl out push cld std mov cmc pop std mov jmp icebp dec jle pop (bad) out cmc or (bad) ret jg outsl std jmp jg out hlt dec not (bad) in (bad) clc cmp out cli jnp std pop push in (bad) idiv jmpw lahf (bad) fnstenv std (bad) mov cli sub mov std repz cld pop jg in pop sti imull pushl jp pop lcall ja stos out ds sub jg pop mov mov jg mulb std inc mov call sbb popf (bad) clc clc iret pop std gs aas repz (bad) fsubr clc fwait pushl idiv cld aad (bad) pop jle mov std push mov (bad) in jg fsubp out mov mov mov das jle pop mov fldcw pop clc sti cld cmp loop jg (bad) std (bad) mov std push mov (bad) cld add paddw ljmp (bad) loopne mov ljmp das push (bad) decb jnp aas decl out fistpll cld ss push hlt out icebp pop mov jns dec cmpsb mov (bad) jae jg sti (bad) in (bad) idiv sbb (bad) iret fcomps sbb paddw cli pop sbb std xor mov fistpll std sti jle (bad) mov jg pop cld ss sarl out ja incb mov test mov jg lahf jo scas (bad) cmp out aas icebp fnstsw jmp cmc aaa decb jmp loop jecxz lock negl out (bad) cmc (bad) ljmp jg ret mov xlat cld inc (bad) jmp (bad) paddb fdivrp mov decl mov (bad) in fcomip icebp das (bad) aaa jg lahf clc sub iret cld adc cli pop (bad) xor popf fcomip mov mov (bad) jmp jg icebp fstpt out sti int idivl das sti leave jg loopne sbb cmpsl mov inc jnp mov jmp jmp inc repnz jmp cld (bad) hlt fcomip sbb or push mov outsl xchg (bad) incb (bad) aaa scas call pop dec call jg movq lahf (bad) and cli mov pop incb rcrl lcall stc (bad) push (bad) jg cmc mov cli out nop addr16 lret aas jmp cli aaa call cmp mull pop pop mov out cld add pop lods (bad) mov xor (bad) dec (bad) sarl pop stc aaa std (bad) aad mov (bad) mov call outsl repz (bad) cmp fstpl mov (bad) mov pop mov aaa jg jg mov jno in mov sti pop mov fcomip xlat cmpsl icebp call mov jle in decl jg mov lods pop jle paddb pop (bad) fistpll (bad) jmp out hlt cmp lahf (bad) (bad) jle lahf push (bad) loopne clc idivl lahf clc jge lret push lahf cli sub cmpsl out cld pop mov adc mov sti (bad) inc pop (bad) cld pop sti jecxz in pop pop xchg mov aad sti paddb clc out cmc out js (bad) dec lahf pop (bad) sti mov std dec lahf jmp stc lock inc lahf dec lahf repz decb aas std ja outsl jg call jg fwait std lahf (bad) jmp subl inc jg aas in cli jae lret jmp mov (bad) jmp cmc jle stc (bad) ret jmp mov jne in jle (bad) out movsb cmc cmpsl out int3 dec lret incb test repnz mov (bad) adc (bad) xchg jg mov pop imul pop cld sbb xchg loopne std xchg pxor gs jle (bad) in xchg jge pop stc pop inc pop (bad) aas stc cmc mov inc (bad) mov iret cmp (bad) stc (bad) jg out mov cld outsl sti movsl jg (bad) cli daa ljmp jmp scas idivl cmp repz jg fcomip iret pushl aas stc add out (bad) jle shr std addr16 push dec (bad) ljmp (bad) decb jg lahf repz jmp dec (bad) mov out stc cmp in jg mov mov ds sbb mov (bad) lock jle cld mov incl mov pop (bad) pop jg iret ds idivb ja jns jg fcomip push lcall rcrb mov jg (bad) pop mov mov psubw movd sti mov fucomip repz repz cli imulb cli fistpll mov jmp out lock pushl cmp cmp pushl divl repz jg lret jmp jns xor lahf aam jae (bad) fwait cld psubw jg negb jne lret (bad) iret push push pop (bad) fcmovnbe mov add cli fstpt out stc sbb cld arpl jg aas das sbb mov mov incl mov jecxz ljmp das jl lret (bad) scas pop mov (bad) cld scas jg outsl repz push push xchg mov out (bad) cld repnz incl jg mov fnstcw inc incb (bad) jecxz call cld arpl shrb mov jg fcomip dec mov in paddw fistpll adc mov mov pop js hlt out sti pop sub idivb sti (bad) clc add std rorl jg repz xlat stc sti fdivrp mov cli int hlt (bad) pop mov std cmpsb jg fistpll (bad) leave (bad) jmp lock std fistpll pop (bad) mov and jg fcomip pop jg out cld dec call sar ficompl cli aas lret aas out scas clc sti (bad) fcompl dec decb jmp xor (bad) std mov (bad) mov (bad) mov pop jno mov dec jmp out cmc pop jl in lahf sti stos mov cmp popf (bad) in jg das movsb cmc (bad) loop stc xor mov hlt in pop aas push dec jecxz jle (bad) idivl stc mov clc jno notl movsl in outsl sti pop cld xchg iret iret inc mov sti mov (bad) (bad) mov cmpsl (bad) lahf std xchg (bad) or mov sti lock std hlt iret mov aas out pop mov mov incl (bad) cli sarl (bad) imul dec jg jg adc jg out cld sar mov stc jecxz jmp out cmp paddd (bad) cmp ds jg pop xchg (bad) mov loope imulb mov repz aas std pop mov cli pop sti aaa pop cld insl cmc jg mov xchg (bad) dec push lahf mov mov (bad) lahf pop cld inc jg scas icebp idiv hlt out repz (bad) out (bad) dec std and (bad) lahf (bad) fdivr out (bad) imul ljmp xlat mov cli std test std iret cld cmpl shr mov clc ja les out (bad) mov pop repz mov out sti xor (bad) (bad) (bad) arpl std mov xlat call dec jg aas out pop inc lcall and loopne out das dec repnz fnstsw jmp movd pop cld jge cld cmpsl ljmp cli dec dec lahf cli movsl jg into jg mov incl out sub xchg (bad) paddd (bad) jmp sti out jle icebp clc stos push aas xor lahf sti ja pushl decb pushl jg aas mov incb cld popf mov jle jg iret cwtl std out (bad) iret imul (bad) repnz cmpsb cld shr mulb cmp out (bad) jg sarl sarl cmpl push cld std dec cld mov mov aas leave iret pop inc repnz es jmp inc das lcall (bad) sub outsl stc (bad) dec (bad) (bad) clc pop (bad) sarl and idiv arpl in (bad) clc (bad) inc jg rcrl negb cmc ja inc call scas cli push (bad) mov jmp fdivr or (bad) clc jecxz xor mov sti aad icebp lahf mov scas sahf jmp jmp inc (bad) in ljmp iret fbstp (bad) lcall repz ljmp dec decl mov hlt out sti cmc xchg aas loope (bad) lahf jle jg std inc std gs out (bad) fcmove lahf cld jmp mov sahf push fs mov mov (bad) incl sti pop std or mov cli aaa (bad) xor mov (bad) push (bad) stos mov pop jg (bad) cli stc fcomip pop incl fistp xchg push outsl jle pop stc fwait mov cli xchg (bad) gs call out (bad) push std into movsb aas jle pop (bad) (bad) cli xor aas cli mov mov hlt stos (bad) mov ljmp sarb (bad) mov xchg outsl (bad) popf ja jmp insb decl mov mov les ljmp jg pop pop lcall iret jg pop stc pop std sahf jg mov jg lret jg outsl sti dec incl std add fnop scas jle jg pop cld inc out out push mov (bad) xchg mov sti addr16 leave jg idivb pop stc aaa incb clc (bad) cld mov out aas jl clc mov add aas stc inc std jbe fucomi hlt pop std idivl imulb std addr16 dec jge std jnp xchg mov stos jmp neg (bad) fdivr jne in pushl pop push (bad) loopne cli xor lock idiv leave mov mov lahf cmc paddb mov (bad) cli cmpsl std cmp outsl icebp aas cld mov jg (bad) cmc fcomip mov stc fcomip idiv pop fistp call (bad) jg aas hlt mov daa incb in loope repnz std mov fwait ljmp inc incl addr16 fstps dec cmp pop inc pop cmc dec fs mov inc aas dec jmp jg mov (bad) (bad) pop cld imul std das iret inc mov (bad) mov jecxz mov jmp fcomip scas mov scas jg iret clc lret sub cmc call push mov out std add sti daa decb xchg (bad) (bad) cmp mov lock lock pushl dec aas jmp (bad) out out aas cli daa (bad) mov mull inc jg das pushl jg fcomip (bad) std mov fistpll (bad) (bad) cltd fcomip iret clc jmp cli xchg pop cs pushl push dec iret (bad) lcall (bad) out mov mov in clc sbb enter decl incb ret stc out ljmp cmpl idivl pop jg jmp (bad) movsl ljmp mull incl push cld lock test idiv enter jl aaa aas stc repz (bad) jle (bad) (bad) pop inc in repnz (bad) mov sbb sub out std push jg outsl hlt addr16 xchg outsl std aam clc xor arpl pop sar jg aas repnz out jg xchg (bad) mov out inc (bad) fistpll sub xlat repz lahf js popf jg outsl cli sbb clc xor in stc aas repnz std xlat (bad) out scas negl std or dec (bad) cmp aad daa cs xor jg jmp jl iret std dec mov stos (bad) (bad) ljmp lret pop decb idivl jg mov mov dec negb lahf clc outsl (bad) idivl xlat cld idivl in pushl lcall loopne mov cmc mov cmp out pop xor dec dec jecxz cmp fsincos cmpsl decb jmp in mov inc jg out lock (bad) (bad) std imul (bad) fcomip (bad) out decb cmc scas (bad) mov aad pop sti inc (bad) fdivrl in outsl sti jecxz xchg mov inc jmp jecxz repnz mov fdivrp mov ljmp loope sti add iret ljmp mov cmp fdivp push scas jge out (bad) idivl in (bad) fidivr lock cld leave enter jmp das cli sub andl repz decb psubd decb out dec sti paddb push outsl icebp ja (bad) fcomps repz idiv lret push mov rol stc ja sar (bad) stc mov popf push out cmpsl mov inc jmp out cld pop mov push jmp lahf clc ja sbb (bad) jmp stos pop repz daa aas jle jnp ja jb ja out out scas jno outsl pop (bad) mov mov jecxz bnd pop sti pop ds mov mov sti iret stos jg mov std inc sarl lret fnstsw decl cld pop cld xor lock cld mov data16 cmc jecxz jmp (bad) in jle mov out pushf std les mov cmc lahf (bad) cld pop (bad) jmp xchg in (bad) decl pop fdivrp jecxz cld outsb decl fnstcw jge in pop jecxz jg fnstcw (bad) call cld mov stc sbb (bad) (bad) insl jg jg paddd test pop jg out aas icebp ja (bad) pop jg lahf clc call std popf incb in jnp icebp das incb pop jg out stc mov jge loopne cld push das push fbstp iret (bad) cli aas icebp ljmp fnop cld (bad) aad icebp decb ja scas jle xchg jg ljmp std mov (bad) in mov mov lahf imul repz rcrl ja imul mov jg outsl std xchg incl notl inc (bad) std jae jg xchg in idiv jecxz out aas repz jecxz jg scas sti adc ret cmp lods push push repz hlt xchg std in hlt pop jl jg out push aas (bad) xlat cld sbb out into aas pop in cld jno insl repnz xchg (bad) in jg inc call rcrb out pop std push mov jmp daa shrb (bad) (bad) jmp repnz std clc out jge idiv aaa dec call aas cld jg jmp ja ja (bad) loop pop negl fdivs ja (bad) stc pop inc icebp fbld cld xchg mov (bad) fdivrp fdivrs decl popf movsb dec dec (bad) repz outsl hlt jg pop (bad) fsubrl jmp jg pop std (bad) (bad) dec jg xchg (bad) iret jle pop out cld jge lods push dec idivl lahf icebp out out pop fdivrp sub hlt mov in std popa idivl aas hlt (bad) (bad) lret call mov cld popa lahf (bad) cmp pop call cld push jmp (bad) mov lcall (bad) jnp int sti xchg jg aas clc mov mov dec fstpt jg das clc stos jg das std das dec (bad) std sbb xlat (bad) stos incb in and loope pop cld adc (bad) out clc pop cmp (bad) mov aas jg repz std ret int dec mov jg daa mov jge out sti icebp in outsl mov (bad) sub push (bad) in lahf lcall jg aas imul cmpsb cld icebp pop (bad) std jmp int lock call cmp insb (bad) out pop std pop pop mov jg fstpl test out jmp jmp mov (bad) fadd (bad) (bad) jmp repnz cld inc inc mov jg lret mov std mov hlt iret sti xor mov sarb (bad) fstpt jmp ljmp decl mov aam jg xlat lret aas call sti outsl icebp pop cld es dec lahf cli jmp repnz stc jmp stc mov xchg aad hlt (bad) mov stc scas std cmp lds lahf lock jle xlat lods out decb sti lahf jb sti ljmp (bad) pop cli pop decl incb cld mov pop cld imul (bad) iret jge sti lret jg aas jmp stos aas std lock stc ja jns idivl hlt paddd lds outsl cmc out fisubr (bad) test push mov fcomip inc cld mov fbld dec (bad) stos dec mov scas call jg scas cli in jle (bad) sti xlat cli test cld jne stos leave ja xlat push jg mov pushl pop std sar sarb aaa (bad) daa mov (bad) jbe jmp inc jg cmc in lahf sti dec (bad) mov ljmp fwait (bad) fnstcw fsubrs mov pop cmc paddb sbb out scas (bad) cmc pop pop std ret pop xlat push pop dec repnz insl call outsl clc outsl pushl jg mov std adc outsl cltd std lcall pop cld (bad) aas cld push lcall and pop stc pop incl xchg (bad) mov (bad) jle addr16 cld aas stc pop jge cli jmp pop lock mov stc iret (bad) stos jg aas icebp cld dec clc (bad) scas cli sti (bad) mov icebp mov xor jg (bad) das (bad) popf mov clc jnp hlt cli cmp out mov pop (bad) xchg (bad) idiv in cmpsl dec pop repnz sbb out daa jg lahf std jnp mov xor pop cld lret mov (bad) sbb outsl (bad) mov cld incb cmc loop clc leave ljmp jmp mov (bad) aas repnz cld jmp imul fs mov cld pop pusha std stc lret mov ret jle fnop sbb out divl sti movsl mov jle jg repnz jg mov psadbw (bad) fldcw mov sbb mov paddw mov jp (bad) cld or sti leave aas idiv out pop in sahf jge psubd incb sbb adc lods (bad) (bad) push (bad) fmuls sbb push (bad) jmp and call (bad) ljmp out mull inc jle scas clc (bad) mov jle fstpt fincstp mov push psubw ja jg (bad) jns push ljmp cld cmp scas out fxch loop stc lret (bad) xor mov std arpl out mov pop std jae in mov mov jnp (bad) clc aas ljmp sti out cli insl push leave out not (bad) sub mov jmp call fbld leave pop cmc jg mov negl jmp (bad) xor jg xor lahf dec cli jecxz cld pop xchg jg mov push call ja loop loop mov (bad) inc (bad) jmp imull and jmp stc xchg push fnop popf cmpsl das ljmp (bad) sarb inc call lahf (bad) xlat ds clc in lret jmp jmp clc (bad) clc sarl pop clc pop cld idivl scas jne xchg jmp daa cld addr16 std inc dec jg icebp out std (bad) stos pop cld (bad) xlat fist sbb mov dec pushl (bad) jnp mov cmp xchg std daa inc aas sahf incb lds fcomip dec (bad) fsubr jg inc jg ljmp out jle out clc and out push cmp ja xchg (bad) daa mov mov icebp pop stc lret (bad) scas mov (bad) aas stc xor jnp fidivr aas repz jg pop enter hlt lock js iret cld adc (bad) dec pop jl fbld pushl inc cmp lds (bad) stos (bad) mov lock in (bad) adc clc std (bad) pushf mov (bad) cltd pop lock lcall cld jg idiv (bad) jg jg std mov pop testb repnz cmp xor outsl std cli daa incb and movsb ljmp scas jg (bad) (bad) clc pop inc jg int3 inc in push sub jg (bad) jg jge jb mov (bad) jmp sti cmp std jle shlb mov (bad) fnstsw (bad) jg sbb sbb pop mov cld pop xlat decl cli sti scas stc out jg mov jg pop cld aaa adc jg mov in aas scas cli jae iret fucomip aas std in inc in out out ljmp mov inc ret fucomip mov cmc dec jle test repnz (bad) xor out (bad) stc lahf mov iret (bad) std jg (bad) cld (bad) aad out aas repz cld sub lahf (bad) cmp aas lock cld outsl push scas cld mov lahf (bad) (bad) std pop cld pop jg cld xchg das jle cmpl iret cli cmc jle dec (bad) repnz fs mov (bad) div cli sbb mov or fist in jl dec decb (bad) mov addr16 dec (bad) hlt fistpll stc (bad) mov jge mov loop sti scas jle fcomip (bad) (bad) mov stc mov repnz mov dec mov stc jne mov std lahf xchg jmp hlt idiv (bad) das mov jmp fistpl cld sbb (bad) jnp adc paddd jmp (bad) clc scas clc cmpsl (bad) cmpsl sti jg lret (bad) out in ja jmp jmp pop repnz lret jg mov shrl (bad) shl pop (bad) out outsl cmc addr16 lcall aaa incb cli sbb (bad) jmp std cltd out inc idiv sahf aas out lret mov and scas (bad) in fucomip xchg out dec jg xchg mov cld scas jg jg (bad) jle imull pushl jmp iret (bad) movsl mov (bad) mov (bad) in daa jg iret cld add cld ja (bad) cwtl push aas incl out iret inc fildll decb (bad) frstor lock sarl stc popf jmp aas loopne and jecxz call (bad) jmp leave scas xor std popl jg (bad) mov iret fidivrl and jmp (bad) fsubrl das and cmp and pop (bad) jno std pop (bad) fistpll fcomip (bad) incl mov (bad) inc aas mulb dec call (bad) jmp jge fucomi idivl decb out out pop imul scas cli mov xlat (bad) std lahf jle jmp xlat lahf (bad) jmp lock sar addr16 scas pushl pop clc arpl cmpsl fnstsw pop jle out std stos mov fnop cmpsl (bad) sti pop (bad) idivl mov icebp aas jmp jg je pop cld pop (bad) in cmc pop push cld inc push pop hlt imul aas cmc cli mov clc paddd cld repnz push aas clc lret (bad) sarl cld xlat jg ja popf jg aas (bad) lahf stc jnp cmpsl mov pop outsb jg cmp int sarl (bad) out jg sti xor jmp jg (bad) (bad) lret inc (bad) pop cld push dec (bad) pop std repnz xlat (bad) clc jg xchg call aas out sti xchg ljmp mov lock (bad) out jmp call fnstsw (bad) jle (bad) cld dec cmc outsl clc fnstsw mov mov jg (bad) mov cld test lock aam popf std ret mov push (bad) stc xlat stc or sti fwait (bad) (bad) pop mov loope imulb incb pop (bad) in pop hlt jnp lcall jnp sbb in imul mov inc dec ljmp sti insl cmp (bad) aas jmp adc jle das (bad) outsl repz pop jge (bad) dec jg aas cld (bad) cld cs (bad) in in cld test divl idivl jmp std fcompp jg in jne neg push (bad) sti aas (bad) vmread jnp sub rol std (bad) out cmc pop cld dec pop mov out and stc sbb test mov jg push push (bad) out cmp xchg mov outsl lcall (bad) repnz push dec decl (bad) test hlt idiv pop xchg jg sti sbbl inc aad cli scas std sar jmp in jg scas std lahf (bad) loop out xchg jg shll jg pop (bad) in mov sahf into sub cli jnp jnp icebp scas cli arpl lcall stc bnd jmp pop jl mov out lock cli jae push std scas das jmp mov leave mov call out (bad) insl mov lret cmp fidivrl xchg dec ds out pop (bad) xchg mov pop jl aad clc idivl cld xchg out (bad) sub (bad) scas std or in mov lahf mul das std sbb xchg jg das sti inc (bad) (bad) out out das jns movq (bad) call jg inc (bad) fnstsw (bad) pmaxsw sahf (bad) stc lahf clc cmpsl cld sbb jo mov mov loope mov (bad) xchg aas clc pop cld adc lret fcomip iret jmp pop cld and (bad) ficompl call into inc jg mov pop std jbe into addr16 (bad) xor cld ret (bad) (bad) (bad) mov xor mov cli aaa js scas cld (bad) mov pop aas cli jmp (bad) mov ficompl (bad) or (bad) std push incb pop push sbb pop dec (bad) loop decb (bad) and pop repnz (bad) lcall std mov int pushl (bad) jns jg jge into mov (bad) fidivr jg (bad) lahf cli sbb std mov in lock jg jg xchg mov jne mov loope clc jae fnsetpm(287 lahf cld mov std adc cmc sub fstpt jg aas jmp mov mov mov pop incl jmp out dec jmp fistpll jecxz lcall (bad) mov loopne decb (bad) stc mov leave lahf sti idiv fsts aas (bad) iret stc sbb cli mov in jl out (bad) cmp mov test aaa sti ret (bad) cmpsb mov pop jg imulb sti mov icebp pop std jbe jecxz lock pop mull sti aas call (bad) mov mov cld xchg (bad) out lahf stc push (bad) arpl loop fcomip repnz cmp adc aas cmc dec stc or aas dec stc xlat fucomip ja xchg (bad) stos iret iret incb fwait jle aas (bad) (bad) stc add call cli outsl cli mov aas neg jns aas sbb ja idiv pop aas std ljmp (bad) lods push fistp idiv idiv fcomip sbb and repnz stc cmpsl (bad) mov clc (bad) out push in pushl idivl jg pop std fistpll pop repz (bad) inc jl xlat call aas (bad) jnp fisubl iret (bad) (bad) (bad) cmpsb fistpll lret scas jle mov (bad) (bad) in call aad clc mov sti xchg mov (bad) push iret jg icebp idiv xchg (bad) pop ljmp (bad) std decb ds aaa pushl (bad) jp icebp fisubr into jg jg out push jg adcl out lahf cld pop (bad) stc aas jmp jg push (bad) sub pop jmp jg scas inc jg pop (bad) leave pushl shrl stc add mov jg (bad) jl pop fbld aaa jge mov sub sti popf push jg mov paddd out clc arpl xchg jg das cli jmp dec outsl lock (bad) out jg div ja xchg ret pop pushl mov popf call iret out (bad) xchg leave scas repz idiv sub out aas popf cld lcall lcall (bad) cld fstps fwait pushf decb jg jg inc lcall in mov jmp addr16 push pop (bad) imul icebp pop push (bad) fdivrl repz std lahf (bad) ljmp jg idiv in std dec cld iret jle jg aas decl in cli xor stc inc ds fnstsw decl mov out call std dec jle jg jg mov paddd mov (bad) cmc pop (bad) scas (bad) sar out cld push call stos in push (bad) dec (bad) xor das sti pop pushl clc pop lcall stos jg out (bad) aas (bad) (bad) fsubrs pop mov pop (bad) aaa (bad) mov hlt das cli inc mov dec mov lret idiv push jg jg out (bad) call (bad) test std stc pop xor jg fcomip stos inc aaa aas stc pop (bad) aad (bad) mov mov loop lahf ds out (bad) jmp arpl cmc fistp aas repnz mov stc in push pop clc lods jle fbstp idiv test inc mov rcr jmp mov cld xchg pop call (bad) fstl ja (bad) aas jle fnop mov aas out aad stc pop std xchg loop stc or mov call dec sti lahf movsl (bad) clc das stc stos jle aas jmp (bad) pop jg fcomip ljmp (bad) (bad) hlt jg das cmp mov xchg stc sti jg iret cld jp (bad) jge (bad) jle pop pushf jmp jmp mov (bad) ficomp stc adc lds cltd pop jmp jg jg xchg cld (bad) jg les push in (bad) cmp fnstsw sti inc mov pop jg (bad) pop std mov div (bad) cltd jg aas sti lahf (bad) pop jg out shr std std mov sti dec decl sarl cmp or sti out std out sti out lcall aas cmp dec fbld stc sbb movsl push scas icebp paddb in in aas std xchg jle mov mov (bad) out dec (bad) mov lahf std jno loope stc mov aas repnz pushl pop (bad) pop jg lahf idivl aam (bad) dec out mov incl push (bad) mov divb negl movsl jg lahf cld mov repz outsl imul (bad) std jbe cld (bad) ljmp icebp jg cmpsl jg jg ficomp stc xchg decb xchg ja (bad) (bad) in iret sti jne leave jg fistpll inc (bad) movsb cmc jmp incb cld mov lret xchg xchg pop mov (bad) out dec (bad) std out lds testb jno jle (bad) cli cmpsl (bad) hlt push outsl std sar neg repnz cld div jg jg pop pop pushl jle cmp mov (bad) mov cmc (bad) imul inc mov in push lods aas loop cld out aad (bad) fnstcw cli push std ja std pop iret idiv cmpl loope lahf (bad) mov jnp cmc fwait pushl (bad) mov jg aas lahf jmp daa jmp pop hlt out (bad) mov (bad) push mov in iret mov (bad) das call scas (bad) call arpl jmp dec sti aas jg (bad) scas cli call std or out lock mov (bad) lcall outsl incl ljmp icebp pop stc pop jmp popf aas push cli pop ljmp test sti into (bad) push mov cld gs push testb jg lahf cmc pop cld out jg leave aas hlt sbb (bad) jge mov das call loop (bad) scas fwait iret jg (bad) repnz jg jg ret (bad) test aas decb call xlat jg out cli idivl idiv mov std out (bad) cmp loopne ds sbb pop cld les inc (bad) mov pop ljmp dec (bad) mov incl clc lret xchg mov popf das stos fcomip cmpsl (bad) cld jg scas cli pop pushl mov jg cli (bad) push jg fwait pop call outsl (bad) cld aas jge (bad) and sti mov hlt pop std mov imul lock into pop jg pop clc xchg repz outsl lock (bad) jle ret dec mov hlt outsl jg jg jg mov aam hlt pop (bad) and jmp jg pop std inc (bad) jmp call xlat clc iret jle mov sbb std lret (bad) mov jecxz sti ret (bad) movsb push ljmp (bad) mov addr16 xchg aas lock out mov out enter clc fstpt aaa lret fucomip outsl clc cmpsl (bad) loope jmp idivl pop leave (bad) lcall fidivr out pop cld jmp jle sbb (bad) fisubr hlt aas (bad) jmp cmp iret out ljmp mov cld sbb std stc mov mov (bad) jp cld outsl sti jg jg out icebp pop mov iret cmpsl jg aas stc mov inc mov aas jnp xlat (bad) mov pushl incl add mov sahf popf arpl jg stc ja push jmp mov std mov pop repz jg (bad) iret dec (bad) cli (bad) inc lcall fbld popf cli mov aas cmc into inc inc pop ljmp (bad) jmp ljmp lock mov scas mov jecxz std imul int3 out sti pop cs inc pop cli fwait and ret aas std push jg pop hlt xor mov sti jg outsl jp lds sti int stos aas cmc aas clc idivl mov mov (bad) rcl mov cld xlat std mov ljmp cmp add cmp mov mov push (bad) (bad) xchg in repnz std mov adc lahf jle in sti push jmp mov call fcomip in mov jg das (bad) xlat mov cmp sar in cli adc loopne (bad) jge lret (bad) cld (bad) clc add cmp mov loopne jmp and daa (bad) mov xchg jg (bad) xlat aas stc xchg decb aam inc inc lahf mov jg mov aas cld in (bad) pop jns scas (bad) xor jl cli (bad) (bad) (bad) lock decl out (bad) stc lret jle mov pop (bad) lock loop out (bad) xchg pop std test push (bad) xchg jmp pop mov mov xchg mov cli inc jle aas in jg idivb xlat decb paddd pop popf cld lcall cld sub out jns jne pop jle xlat (bad) jmp int cmc pushl stc std (bad) (bad) fcomip (bad) (bad) xchg vlddqu clc sub pop insl fbld push (bad) stc dec jle pop sub (bad) xlat jg scas cli stos xchg rcr loope (bad) sbb stos ljmp icebp jg outsl (bad) hlt outsl (bad) or mov clc (bad) jg aas std les inc ds mov aad cli pop cld cmp lret cli iret (bad) sub sti std sti jmp mov mov out icebp out cld mov dec clc outsl mov jmp std mov (bad) mov push mov aas sbb fstpt cli sbb mov decl mov mov outsb pop decb mov jmp jle aas rcll stc popf cmp outsl stc daa incb jg (bad) frstor pop std in cld addr16 scas jno out into inc jg out pushl jg scas clc fwait push repnz mov (bad) cld out cld lods inc lret aaa mov mov cli lahf sti (bad) mov pushl loop aas in aas sti cmovg mov std lock (bad) cld jp icebp pcmpeqd xchg sarl and sti xchg jg lahf lock ret jg (bad) in push cld imul std out cmp (bad) jmp loope call (bad) xchg std mov aas hlt mov jmp xchg jg fcomip daa fstpt stos std mov aaa jg fucomi (bad) jle (bad) out (bad) jg aaa pop lcall xlat pop std xchg (bad) pop call outsl dec jmp inc outsl cli mov jg pop sbb jle fbld lahf inc (bad) in xchg mov (bad) mov mov decl aas out std add mov cld xlat stc sub mull (bad) pushl movsl mov inc jle xlat aas decl std and pop mov decb cli jecxz jnp fistpll scas cwtl jl (bad) movd mov mov scas scas jg lahf (bad) sbb fucomip clc push es jmp hlt scas cli mov dec jle jg int fstp sti in pop call sarl jg out std aad icebp jg xchg cld dec mov clc xlat cmp cld fwait std dec (bad) in aas jge pop (bad) jne add pop pop cld (bad) mov sti jmp ss mov (bad) rcl rcr xchg and aas sti leave outsl icebp sbb inc jg pop stc mov out jg push (bad) cmp iret mov fcomps das jle fstpt ja iret lahf cwtl incl jns in xchg cld xor call clc pop mov push (bad) cli mov movsl mov fcomip mov xor xchg incb idivb gs out js mov lret dec repz (bad) dec sbb mov (bad) (bad) cld addr16 jmp mov negl incl pop (bad) (bad) out ljmp scas clc inc inc idiv mov icebp hlt (bad) (bad) outsl inc pop cld idiv jnp ljmp std (bad) lcall daa jg daa mov lcall hlt in repz das std pop jg jg ja lcall iret out clc pop (bad) cmp aad icebp leave scas jl pop cld jne sarl fisttp cli jmp sti idiv xchg addr16 (bad) call lret xchg xlat jg outsl icebp rcpps ljmp std stos jmp mov lahf stc lods incb pop call jg psubd fistpll out fdivr pop push pop cmp fistpll mov mov std inc mov hlt ja int stc scas (bad) mov jg aas test bnd sub cld insl jg (bad) aaa inc dec mov mov das clc cmp pusha bnd sti jmp cmc int fstpt mov pop jg jg xchg mov cmc bswap mov sarl mov cmc lahf lods jg mov pop std iret xchg repnz jg dec (bad) movsl jg mov das clc mov push cld sarl cld (bad) out cld fidivrl clc arpl mov ljmp (bad) pop lock dec jmp std aas (bad) jae mov mov std cmpsl mov aas cli lods (bad) mov jmp cmc leave pop cld out pop cld ret (bad) ficomp aaa sti mov jg aaa cld movsl jg leave dec dec pop lock pop (bad) aad jg jmp cld mov aad repz std mov std aad cs in pop sti mov stos out popf cld hlt lahf sti lahf decl mov adc mov cmc mov ljmp lods mov pop (bad) fdivrs hlt push std mov jg dec dec fdivrp daa pop jg mov (bad) jns (bad) (bad) stos repz aas stc ret jg icebp mov (bad) std push cmpsl ljmp outsl pop push mov lahf (bad) in jle mov decb cld sarl outsl repz cld mov int3 aas in loope push (bad) jns xlat outsl icebp cmpsl (bad) xchg mov mov sarb icebp outsl sti fstpt addr16 sti cltd insb imul sti mov jg outsl hlt cmpsl cld (bad) dec jle jg idiv cmc stos aas ljmp jg pop push decb mov fdivrp dec xchg idivw (bad) mov icebp inc decb mov dec std mov jno das popf cld jmp enter (bad) fwait jg sbb loope sti xlat cld fistp das sti addr16 pop (bad) daa jmp imulb jg (bad) (bad) sbb mov insb icebp lahf (bad) scas (bad) fstps inc (bad) (bad) scas cld (bad) call jg iret sti mov clc pop ljmp (bad) adc push (bad) iret (bad) fcompl fstps jg mov (bad) std jmp lahf mov das (bad) fnstsw imul aam repnz incb mov push (bad) imul aas cmp std aas scas std fisubr mov out aas repz cld imul std sub jnp in push xor cmc scas std jae int3 das jbe sarl rcrl repz cmp scas (bad) (bad) pop clc pop cld fsubrs pop jle popf out into outsl sti imul jg (bad) jmp inc aas out std cmc decb stc pop outsl lcall lahf inc push iret cli aaa jle jmp in (bad) mov (bad) aas icebp dec sti lods pop out std mov fs inc mov dec (bad) (bad) clc xor leave aaa jmp outsl (bad) jg (bad) (bad) dec mov repz mov out imull pop cld mov cmpsb pop (bad) xlat mov out hlt xchg iret stc aaa pop jmp (bad) cli jg sbb mov into call pop cmc aaa (bad) xchg out decb aas out push pop std lea call aad jl inc (bad) popa push pop std jecxz jmp std incl lret dec mov fildll (bad) cmovg aas repz stc ljmp (bad) mov add pop fdivrp lret inc aas cli fisttp jg pop jmp out (bad) (bad) mov jg mov jmp pop repz std leave iret ljmp sub jnp (bad) mov and ljmp negl in dec call cmp jg pop clc xor ja or xlat mov btc ja stc in scas (bad) fcomps jmp (bad) call pop incb cli xlat inc jg ja jmp dec sarb pop cld pop std xor cmc pop (bad) xor idiv cltd inc iret push jmp addr16 iret decl std sti push std sbb (bad) popa std jg (bad) mov jmp jg repnz (bad) (bad) pop (bad) std jg pop clc inc std out rcrb (bad) loop in dec call std dec jg pop repz out jle repnz decb out stc (bad) mul ja push idiv mov idivb xchg mov lret fnop aaa sti clc lahf sbb (bad) daa scas (bad) fstpl jmp pop repnz jmp xor out lock (bad) in das (bad) incb std aaa jle mov mov outsl (bad) idivb repnz pop xchg sbb jg scas call jmp mov inc jmp xlat cld fstp mov (bad) std lahf cli jmp lahf idiv xchg mov dec pop stc das std jbe jle jg xchg cld push dec (bad) jle repz (bad) mov aas push btc jg (bad) in ja pop (bad) movsl push das cld test (bad) ja repz push mov pop inc jg pop repz pop std pop jg pop xor mov xchg jmp lods pop pushl lcall mov (bad) (bad) pop incl repz (bad) pop (bad) lcall in jne aaa pushf jle mov int mov loop sti leave jg loopne (bad) (bad) mov pop repnz ljmp out std pop (bad) incl pop (bad) cmpl repz clc in loope outsl lcall rcl jg scas std loopne (bad) pop jle jg pop out (bad) cmpsb jg in (bad) lahf test (bad) mov ss mov out aad std xlat dec push jg jg out incl (bad) out fwait aas xor jg jg mov cmc cmpsl (bad) sar aas loop decl std mov lods jle mov xchg push (bad) sti jg lock cld std mov jg lahf cmc scas decb stc outsl notb std jno (bad) scas cli fwait jg (bad) scas (bad) pop stos cmp ds mov mov lret (bad) sti fildll sahf (bad) scas jg (bad) (bad) idiv push xchg jg out fwait mov imul (bad) in mov jmp pop pop call jg jg lock icebp lahf call repz repnz cld xchg push lret aas cli ljmp daa mov sbb cmp imul pop std pop aas repz mov repz bnd fstp imul (bad) loop out hlt dec mov pop jg aas icebp inc std cmc jmp aas decl rcrb pop clc in sarb std pop jle leave mov jmp sti inc (bad) clc jg out cmp inc (bad) jmp pop cmc cmp std in aaa fdivr adc fsubl loopne (bad) addr16 jg jg icebp lret jmp in lds mov out stc out pop xor jmp lcall push lahf clc sub xchg aas call aas in lcall pop lcall clc (bad) cld iret (bad) xchg jg aaa cld or out pop inc cli out loope inc aas idiv fnstcw jnp mov xchg leave fistp mov jle fucomip aas mov aad jno lahf mov dec mov cld inc mov sti (bad) jle (bad) (bad) std pop jg das clc lret xchg pop clc mov ret rcrb std pop xor mov xchg aaa jg shr cld repnz stc add incl cli jne jg out (bad) mov repnz jge jnp cmpsl jg outsl repnz cld jge fistp cld in xchg jg mov int (bad) jg fildll dec (bad) std addr16 mov hlt push call std into aas (bad) aaa arpl xor ljmp (bad) mov mov in (bad) pop cld stc mov (bad) pop (bad) out lahf dec stc fistpll daa jmp neg icebp out scas std movd idiv sar movsl ret mov (bad) (bad) pop sti and (bad) xchg jmp dec std sub idivl xor repz repnz add jg xchg (bad) out stc mov icebp (bad) decb jmp xlat lret pop sub push (bad) mov (bad) out jg pop clc inc jle das std (bad) ror scas notl loopne clc ja inc aas dec cli mov pop (bad) stc jg mov outsl std fdivrp fisttpll xchg jg jg das incl (bad) push pop (bad) addr16 aaa xchg out clc fwait lcall rcr stc mov incl inc aas call lahf cld gs lahf repz jmp dec jg fcomip into das cld jmp es loop stc mov out dec fstpt mov pop stc xchg cld fidivr jmp jg pop repnz dec mov lret jmp fnstsw xlat sti ja sti addr16 dec jmp out stc inc std scas lahf pushl lahf iret ds jmp stc lahf repz jmp ljmp pop lahf push cmc mov icebp mov (bad) jg adc aad std pop std lret repz lock jp sti jnp adc rcrl xchg call jg ja jg aad (bad) fstpt aaa jle inc decl outsl (bad) neg std (bad) call aas lock lret push mov mov fucomip pop clc imul fcomip jl ljmp cld test push lahf call call mov cld lds sub (bad) jg das cli xor mov popf mov adc (bad) mov fdivr repnz jg pop sti ja ret iret cmp fucomip lahf stc cmpsl das push stos fucomip out (bad) cld mov inc (bad) mov (bad) sti outsl stc test pop cli loopne cli stos ljmp cli xlat sti out clc aas jmp jg scas dec jg xlat aas jno aaa lcall jg add popf aas ljmp out lret jg aas clc negb (bad) cld (bad) cmc fstpt stc gs daa mov mov lea push das dec lahf stc dec jle jecxz bnd cli lods push mov (bad) pop (bad) cld jg lahf cmpsl jg outsl idivl cld (bad) jecxz jnp fdivr cwtl cld push scas (bad) mov clc outsl mov cmpl dec push lcall lods pop fnstsw clc cmp fisttpl pop mov mov std sbb (bad) cltd jg pop sti mov or nop in xlat js idiv cmp dec decb movsb out std mov std jg sti lahf mov xchg jmp aad lock jle scas cli cmc jg mov jg mov dec fucomip outsl mov fs mov xchg (bad) mov call (bad) dec cld pop jmp mov cld lds testl sti decl (bad) incl pop mul outsl clc idiv test out aaa jl scas dec stos jg cli stos ljmp lock std jns out into dec jg iret mov sarl cld cmpsl (bad) jmp decl mov pop jg pop js imul push jg lahf jbe in jmp in repz cmp xchg jle xlat push scas fwait mov das push (bad) std ja repz (bad) fnstcw (bad) lret jmp (bad) mov hlt fistpll pop mov (bad) jmp cli lret jle mov call pop (bad) aas cli popf jle pop stc mov in jg fisubr std push mov ljmp in (bad) cli mov mov jg scas clc mov lcall icebp pop lock (bad) mov incl lock scas decb sbb fucomip mov dec pop sahf incb lock cli andl pop (bad) fdivr ljmp cld ja aad stc idiv out ds pandn xchg pop sti cmpsl cld mov dec jle fcomip daa push std arpl das incl clc xchg jg aas clc xlat mov out (bad) in jg jg jnp mov fwait (bad) aaa lret pop idivb (bad) jns jecxz stc pop mov push std mov stc mov jg ja call loop std cmpsl (bad) (bad) outsl incl pop mov mov test cmc outsl neg lcall das decl fdivrs (bad) push jg pop hlt push (bad) in lret out in xchg pop stc jmp inc jg out cld (bad) (bad) jp icebp out jb addr16 xchg scas jg cld psubw (bad) scas jg scas cld and (bad) aas neg incl jmp call ds arpl mov (bad) stos jg fidivr cmc push mov cli pop cld push jg pop hlt dec pushl (bad) mov (bad) out cli fist ljmp das mov scas (bad) jecxz sahf aas hlt outsl cld dec (bad) aam (bad) mov into scas (bad) out (bad) daa jg push pop incb int3 pop repnz push (bad) jmp mov inc mov out notb mov pop cld add lahf repz jp shrl jmp (bad) leave push idiv ds cld sbb dec pop cmc pop (bad) in (bad) jmp ja ja test jmp ret aas ljmp clc mov mov (bad) fidivrl outsl push (bad) mov cli jg iret fdivrp pop (bad) cwtl fucomip jg cmpsl (bad) xchg mov out pop jns inc ljmp aam lcall mov cld (bad) mov jg cli jg xchg push xchg jg lahf pushl call (bad) rcr hlt dec mov in jle (bad) in fldcw fnstcw lock mov (bad) and push pop cli aas jg fbstp cld out cld sar mov out pop sti and jg fwait (bad) out fcomip (bad) jmp xor shr stos jg jg xchg push (bad) (bad) out cld jecxz lea div pop cmpsl cld sti mov jmp inc sar in out cld mov inc cld aam stc fistl dec sar sar (bad) sbb xor out enter std mov out (bad) cld arpl jge pop lcall out std xchg (bad) jmp leave pop hlt ja out aas jle (bad) fistpll in cld dec jg outsl hlt cmpsl std jnp rcrb jg cmpl fnstsw paddd out decl aas (bad) cmp push mov hlt (bad) std dec (bad) ficompl addr16 xlat stc das pushl xchg inc mov aas imul lahf js das (bad) ljmp jg pop jecxz call (bad) std pop cmc fwait std cmp out call jg jg out mov aad cld repnz (bad) (bad) loop call mov mov ljmp jae std lret inc mov jg scas (bad) scas (bad) fistl popf out cld clc (bad) out das jg out repz (bad) sub pop hlt aas cld rclb js daa dec (bad) cmpsb pop hlt cmp push mov cld and in xlat (bad) scas ds test lret (bad) inc mov jmp repz xchg jmp (bad) fnstsw jg xlat jg outsl mov push xchg decb jae ljmp lret xor (bad) stc movsl idiv in cmc lahf mov xlat (bad) cmp cli fwait (bad) in call ror jmp push xchg dec mov sarb outsl stc iret jg (bad) (bad) jg divb jmp aas mulb sbb jmp mov (bad) out pop lock dec pop bnd repnz outsl xchg std aam repz xlat daa (bad) and cmpsl (bad) push dec (bad) (bad) mov divl mov cmc pop lcall test incl dec jg jg paddd sti incb jmp xchg (bad) fsubr aas ljmp fwait (bad) aad js lahf cmp (bad) cmp jg cmpsb jg dec std jmp repz ljmp adcl ljmp mov (bad) out mov dec cld in out mov popf xchg aas icebp sti (bad) sti pop jle pop clc or pop clc fistp cli aaa mov mov mulb fcomip (bad) dec dec aas (bad) (bad) (bad) jmp clc cmp cli lret jmp pop and cli out outsl mul (bad) dec jg cmc lahf sti idiv aaa aas cmp sti dec stc aaa decb lcall stc (bad) ja xchg (bad) stc or imul (bad) mov neg (bad) out fistpl ljmp scas mov mov mov loop out (bad) xor pop (bad) xchg (bad) sti sarl cld mov std sahf jg pop (bad) scas (bad) das idiv out xchg stc (bad) mov (bad) (bad) jp in jg aaa clc outsl decl std repz cli (bad) dec (bad) stc mov std ret mov jle in imulb jmp dec (bad) std out lcall movsl jg pop (bad) lock push jg out hlt iret (bad) pop jmp addr16 mov push xchg incb cld lea lahf jle stc aas cld mov jmp std in call aad aas push pop stc lahf lcall jl (bad) cld test cmp gs stc (bad) (bad) outsl aas std cmp clc mov in lcall and outsl mov aas (bad) lahf cld jecxz std fnstenv ljmp pushl loope mov sti mov fsubp xlat inc jg (bad) (bad) cmp fucomip cmc lds stos jle jl aaa incl mov pop jg outsl (bad) sbb mov jg scas (bad) mov in jns xchg std jns (bad) hlt (bad) pop lock decl clc jge std xchg into push dec cld jae jg subl sti pop jle rcrb mov lahf mov jg or clc aas cmc (bad) (bad) adc mov pop repnz imull ret (bad) aas repnz pop inc std (bad) jmp adc (bad) pop inc xor movswl jg sarl lock dec jg das cld iret incb mov jge stos jg ja int mov std sti (bad) clc into aas aad jno xor jg daa incb jmp xchg mov sar xchg aas (bad) pop std outsl mov cmc mov repz cs mov stc pop cld fistpll jg lret (bad) (bad) mov xor sti jg jg dec and out dec cmc pop pop lcall xchg sar xlat (bad) jg in call (bad) out fldenv dec pop ja push inc mov mov lret aas mov cld xchg xchg fcomip iret mov jg out (bad) dec (bad) jmp out (bad) jle mov stc pop jle mov mov xor out clc into idiv (bad) (bad) pop out (bad) hlt jnp std jae les cli pop incl jg pop sti pop call mov ds dec stos pop out dec clc iret es out push std std jmp stos jmp idiv das (bad) popf (bad) (bad) das lcall ljmp stos (bad) (bad) mov mov lea nop std std dec jle iret and fist xchg (bad) out (bad) scas (bad) xchg inc inc (bad) clc repnz clc scas push (bad) in scas stc popf jle fcomip lret scas jmp lds call addr16 int3 pop repz jmp jmp repnz lret out repnz dec jg pop repnz (bad) sarl pop cli out decb out lret mulb lahf jg jg in (bad) mov pop (bad) pop out mov jg push mov jg out (bad) or hlt aas neg aas repz std mov pushl movsl jg (bad) std outsl jle lahf dec mov inc scas (bad) pop (bad) in paddd jge (bad) out int clc mov mov call mov cmpsb mov (bad) mov loope push pop cld dec jg (bad) std iret (bad) push daa jg iret cld data16 scas clc in jg addr16 pop mov mov std inc mov dec cmpsl cld ret jg mov fcomip mov cmpl mov (bad) mov aas cld lahf cld mov pop aas cli xor fcomip cmpsl dec jg iret cld sarl push aaa sti inc ja,pn out out clc insl push adc cld push jg ret mov mov lahf jg (bad) jmp fisttpl (bad) lock jmp mov cld es aas out stc aaa aas cmp mov lahf (bad) jmp (bad) mov out jg pop (bad) das (bad) jmp fsts loope jl clc out cld idiv mov aas cmc das cli in jle mov jns pop std int3 leave scas (bad) and cld dec fistpll mov mov dec xchg aas jle sub out mov into pop jns incb sar dec (bad) sarl (bad) (bad) cld adc int lahf decb fwait jecxz mov mov add jg jg dec adc outsl (bad) scas mov (bad) lods mov jle pop (bad) or lds add ss (bad) (bad) ja (bad) aas cmc sbb lret movsb ljmp dec call lret jg aas cli ja jle incl idiv xlat mov cld clc repz loope mov outsl jmp out setp dec idivl pop cli xor cli out std cmp dec ds ljmp scas leave lahf icebp clc das cli xlat mov cmpsl fcomip lods std out jle xchg lcall pushl sbb sub jg outsl std inc mov jg pop repnz dec jg lret lahf cli (bad) jle icebp pop (bad) jg sub sub call pop cld or repz lock int3 jg mov movsl lahf (bad) xor into pop sti jnp mov out jecxz mov incl aad (bad) cld loop lcall jmp scas cld inc dec (bad) pop aas clc daa call pop jecxz (bad) fdivp scas repz push out repz lcall repz cld fwait (bad) fsubl sbb stc (bad) sbb lahf cld and std daa jmp (bad) mov (bad) jmp das iret call jg idivl dec jmp mov mov jnp pop cli jmp ja rcrb pop cld xchg jne xchg cld sahf dec mov jg fcomip imul mov fnstsw pop cld xchg movsl jecxz (bad) dec cmp sbb pop call (bad) (bad) cld mov jg scas cmp std data16 cmc push (bad) sti jg outsl bnd xor outsl inc (bad) xchg aas cmc push iret jmp out clc pop xchg jg (bad) cli sti jle mov idiv out idivl cli (bad) decl mov (bad) daa jg aas sti cmpsl in std push jg outsl cld pop (bad) imul icebp daa (bad) xchg jg scas div xlat std fwait jle (bad) (bad) cli icebp mov jg scas clc in mov pop mov pop cli pop cld imul ljmp cli mov pushf loop mov mov lcall fs icebp (bad) cld pop incb fnstcw pop lock (bad) in aas loope sub sar in idiv jmp out mov imul jle jl (bad) jnp out jns das mov jecxz out mov das sub out cld pop std cmc dec aas std jnp fnop dec (bad) imul aas repnz mov aam xchg (bad) pop ljmp mov jg xchg std fcomip (bad) (bad) xchg push popf jg ja jl pop cld pop ljmp dec (bad) xchg pop (bad) out outsl idivl (bad) xchg out out fstpt ja pop std (bad) mov (bad) js pop dec jg repnz fimul (bad) push mov imulb (bad) (bad) das jg (bad) jnp cld cld mov scas daa (bad) fnstsw insl ret in jmp hlt out dec (bad) xchg mov decb mov out lahf sti iret (bad) mov (bad) cmpsl (bad) clc xchg jg fwait and dec repnz sub push lds push jle fucomip pop incb int3 aas repnz (bad) loop jle mov fistpll (bad) std inc mov mov cmp rolb sti pop std pop mov xlat fcomip iret cli push not jg outsl xor aaa incl jne out jg (bad) popf jle xchg (bad) jg lahf cli cmpsl (bad) xchg sarl (bad) mov ljmp pop fidivrl mov fucomip mov daa decl out decb (bad) jg push out cld mov std jecxz mov stos xchg out (bad) xchg jg aas clc fisttp sti inc jg scas dec stc mov icebp jg imul lds pop std lea lahf mov stc push std inc (bad) jmp jg aaa std push mov aas in popa cli jge pop (bad) mov cld adc std ljmp jg mov lock (bad) pop (bad) std idiv cli idiv cli jmp lods pop call std (bad) decb stos jg mov in (bad) jecxz mov pop inc lahf lock cld ss (bad) (bad) mov call mov dec jmp pop dec stc jecxz mov jg xlat sti xlat dec lahf fdivrp cmpsl jle mov in jle out mov pushl stc das cld sbb incl mov call jg xlat jmp xchg outsb pop cld cmpl mov ret jg int (bad) in loop fbstp scas stc pop jle pop std paddw jg dec insb std or mov pop cmp icebp out aas cld jbe lahf jle xlat stc mov pop cli (bad) std or jmp xchg pop mov out pop clc lahf (bad) cmp fist aas cld pop sti sbb aas jecxz clc inc out (bad) out fildll outsl jge adc cmp (bad) cmpsb fstpt popf jg scas stc out adc lahf hlt aas stc test into (bad) dec (bad) icebp sti mov (bad) (bad) pop xor sub out (bad) fiadd ljmp (bad) xor lahf and dec ret fucomp std aad ficompl cmp cld ret inc mov ja (bad) pop aas js pop cld lahf das (bad) fidivr ja mov rcrl sbb dec cmp (bad) (bad) fnstcw jg leave outsl std pop jmp push (bad) call decl sti push push pop repnz mov repz cli scas jg cli out das (bad) adc fistp jg outsl clc aaa in call jg jg xchg aaa aas stc sarl nop (bad) cli cmp (bad) fbld sbb aas clc aas mov sti jg call jmp ja (bad) (bad) mov jg mov mov cld jne lret das call jg out std les (bad) fstpt in pop in std or scas clc daa jle mov (bad) out popf push pop stc int lods aas cmc fstpt (bad) jp vpsraw scas testl aas hlt outsl std fdivrp lds (bad) (bad) fnstcw repnz mov sti pop ljmp sub sar std (bad) cld cmpsl dec stos lods lods sti lahf pop cld sbb incl (bad) enter psubw pop stc call in call out stc daa das call push jg aas stc aad in sarl inc std scas dec jg out into leave out cli aas dec cmpsl inc outsl cli fwait cld dec mov jg pop (bad) pop mov (bad) cmp (bad) in mov jg jg outsl cld inc jg mov mov icebp xlat cli push es jmp mov lret scas std scas mov ljmp (bad) cmp (bad) aas repnz incb aam imulb stc sbb psubw decb jmp xchg push out sti rcrl or jmp lahf clc in sti cmc lcall mov stos (bad) in ljmp lahf sub jecxz in (bad) xlat into (bad) mov aas imulb inc mov mov lret clc outsl (bad) and (bad) inc jg mov fnstsw mov in fucomip pop cli stos sahf incb jmp jg das cld sub mov (bad) clc outsl sti lods jg mov aas loope cli aas push incl mov jg aas out cli dec aas stc mov cwtl (bad) (bad) (bad) imul cld cmp sti jg jg pop ljmp (bad) jmp idivl daa (bad) cmpsl ljmp mov jecxz jmp std cmp mov std stc jecxz out pop sti aaa call in incb mov pop icebp dec lahf ljmp (bad) jmp sbb fbld outsl mov (bad) dec std push mov aas icebp scas out (bad) mov cli mov nop jg mov jecxz pushl push (bad) in (bad) out std stc mov pushl std in das stc push xchg (bad) call out hlt (bad) clc adc cmpsb pop sti jg (bad) cmc pop jo rcll (bad) xchg mov stos cli (bad) mov scas enter jg dec mov incl inc push jg push jg out mov cld pop std insl (bad) in scas cld cmpsl enter std jg lahf push std das pop sbb cli mov lcall mov mov in call mov clc dec jg fistpll imulb popf (bad) sbb das dec (bad) lods mov in jg stos decb lahf (bad) fsub icebp scas sti jmp (bad) mov dec (bad) fwait out lcall dec jg jns jecxz (bad) fwait std xor xor fistl jmp scas std dec (bad) ja loope clc scas pop incb fs cmpsl decb out aaa jg out lcall lods jmp (bad) idiv aaa scas jg jg idiv pop lcall jmp pushl dec (bad) jmp call lds data16 sub lock into pop (bad) pop lcall lret (bad) lcall jg aas hlt xlat dec (bad) fldt sti fwait lret fistpll hlt daa (bad) out pop cld mov jmp jg cmpsl jg jg das std sub aaa (bad) mov mov repz pop hlt scas jns das incl (bad) jg outsl cld out mov jg in xlat clc (bad) mov dec (bad) sahf mov jg aas cld mov mov dec mov add fistpll cmpsl (bad) mov xor pop call mov mov (bad) mov int out aas cmc and lcall std scas (bad) jmp cli psubd pop ljmp mov jle fnstcw rep (bad) mov (bad) sarb lods cmp outsl hlt addr16 std and lret (bad) repnz std lea in call aas clc out lods push push outsl clc ret aas sti sbb mov xchg call scas cld push scas (bad) fstpt idivl pop icebp (bad) idiv mov mov stc in jle fucomip into outsl lock pushl mov sti out (bad) mov decb (bad) aas in fistp int clc psubq mov ss outsl notl out repz dec shrl cmc aas sti lock decb cld outsl cld xchg std sub int repnz lods (bad) (bad) aas stc lock cmp mov cmp xchg fucomip cmpsl (bad) ficomp imul mov repz xchg mov jg jmp std (bad) jg daa (bad) call out cmc (bad) out mov imul fxch jg psubd pop jle pop jl pop cld stos aas idivl xlat jg lahf repz repz mov in jns inc decl jmp call pop decb repz cmp push jbe cld (bad) jg jg (bad) scas jg outsl jg iret clc aas inc (bad) call pop clc push jg xchg mov sub out push (bad) loop repnz dec jle mov idiv sub out jg in lret aad idivb aas clc pop pushl jle (bad) (bad) fidivr call scas (bad) dec dec incb mov stc or aas imulb (bad) lods (bad) decb jle jg iret sti sub call icebp iret aas jp lahf (bad) cmp mov cld jecxz out icebp fwait pop aam aad (bad) aas std pop cld ja in das dec (bad) xchg lahf int3 jmp jb outsl out lahf lcall cld cmp (bad) into outsl cmc cli jg icebp jg mov jnp lock cli (bad) call lock jg aas loop incl cld movsl jg popf daa (bad) fnstcw pop decb cli (bad) fwait dec pop repz mov (bad) ljmp stc jae int3 (bad) jmp xchg mov mov incb repz out cld jno jmp les (bad) lret aas stc int std (bad) jg fwait pop icebp out add cmpsl call repz push decb xor xlat cld push jg scas cmc fistpl in hlt inc (bad) cmpsl lahf aas stc (bad) pushl jbe mov daa (bad) aam in cmp jmp lds hlt xchg xchg mov sar aas (bad) out xlat (bad) sti pop fdivrp ljmp shrl out int cmc mov aas hlt inc repz cld sbb lock jg iret sti pop jbe orl lret mov popa mov inc aas jle rcrl call mov jg (bad) jmp das clc xchg ja xlat mov repz xor jmp clc iret decb (bad) fisubl inc pop incl aaa iret dec cli pop clc pop (bad) cli (bad) ljmp aas std iret (bad) scas inc ret mov imul decb push jle in fbstp outsl (bad) mov (bad) pop jl out mov std imul pop ja mov std paddd std sahf nop push (bad) cld es (bad) dec aas cmp icebp aas in (bad) in mov mov cmpsl mov cwtl pop divb scas es jle xchg (bad) stc (bad) insl sahf jle fistpll fbld std test call stc stos lret sub std jg jnp sarl (bad) jge fstpt aas cld popa aas cmc dec jmp jmp aaa jle (bad) adc (bad) cmpsl incb push (bad) in out jo das (bad) cmp pop mov pop jle mul lahf bnd cmp nop cld or push aas pushl (bad) mov pushl jg xchg ljmp lcall lahf cld out jle dec std sarb paddd out clc xlat jg outsl std adc leave pop lock pop sti (bad) (bad) sub aas std pop jg pop jnp data16 (bad) mov out pop in ljmp pop (bad) incb mov rcr div lahf repz cld xchg out fildll (bad) inc mov int cld idiv repnz cld iret call jge idivl clc jmp jg outsl mov mov pop mov jge cli rcr clc repz jle stos jg jg push aas std (bad) (bad) das inc mov (bad) hlt neg pop (bad) ja mov (bad) call pushl sti (bad) in lahf repz jl (bad) push mov cmc hlt scas cld sub cli lahf (bad) push jle fnop outsl dec jg (bad) (bad) out cmpsl out in lahf repnz decl mov cld push xchg jg pop (bad) cmp jg lods std aas loop pushl dec mov (bad) idivl cli scas cli popf jle fcomip jg lcall pop (bad) mov cli pop jg aas in mov inc jg scas (bad) dec std lret jg jecxz mov mov das call fwait stos fucomip (bad) cli ret call aas in cmp lret mov mov jg push cld ds in sti jg jle jg aas outsb jmp jp mov (bad) jg jge out mov int icebp pop cld icebp jg pop xchg cld adc outsl cli outsl (bad) mov (bad) jle push ja clc mov jg aaa scas mov (bad) (bad) out cwtl loop aas loop pop sbb das cli cmpsl (bad) mov ja decl cmpsl jmp pop cli (bad) push cld cld (bad) test out ljmp pop mov sbb fucomp fnstsw hlt sarl stc xchg fdivrs aas clc das (bad) aad decb mov cmc jmp jg dec (bad) arpl popf cmp cmc paddb jg dec std sub scas cmc das (bad) and in sbb pop std loopne clc iret ds mov out std cmp jmp iret std lret jle aaa sbb test std push mov sti or mov mov cli ja imul call das decl jle (bad) call inc jg scas (bad) cli outsl stc call (bad) repnz lock aas out psubq mov daa call loop sbb xchg lret (bad) aas (bad) mov (bad) fmull decb cld jge sarb paddb call loop cld mov mov std pop std movq lahf notl pop pop sub stc pop mov call leave call sar jecxz hlt dec pushl lahf (bad) stc push jg pop cld inc mov out std cltd lahf cld mov xchg aad lock and cld inc push das (bad) idiv lret jg lock stc add test jmp lret stos (bad) fdivr stc lds addr16 (bad) fcomip sti sbb mov push decl (bad) mov jp inc outsl call lcall xchg jle test fdivr inc push (bad) jmp sar mov jmp aas out lds repnz mov pop mov cli (bad) jle aas loope std adc push dec jle aas icebp jo adc (bad) std xor out jecxz hlt jnp sarl pop inc icebp idivl repz cld psubq jg (bad) aas repz sub xlat xlat mov cmc stos fucomip in lahf lock cld fstpt scas fidivrl (bad) icebp stos jg iret clc fistpll leave out clc lahf mov decb cwtl aas out aaa dec pushl aad cli in mov shl add outsl (bad) das jg xchg in stc outsl (bad) pushf jg cmpsl (bad) cmpsl aas in inc jmp mov jg lahf decl repnz in (bad) mov (bad) (bad) clc (bad) jge lret mov test mov jmp cmp sbb daa jg sarl aad aad cli sti jle cmc fidivr sti scas pop inc (bad) clc aas aas cld mov idiv lock jnp (bad) stos fucomip (bad) aas sti pop out lods mov jg lahf js (bad) dec jg out decl es (bad) jmp inc inc push xlat cli jae movsb jg cli ja ljmp jg lahf cmp jnp jg stc jae xchg jg mov jmp idivl dec fisttp mov pop (bad) mov stc xchg pop sti out stc rcrl xlat mov fwait pop hlt pop and inc std lea cmp jg cld iret pop std aaa std (bad) dec (bad) jmp jmp jbe pop sar (bad) clc pop lock aas cli daa pop mov lahf cli mov repz cmc idiv fstps in std jge fistp std ret jg in in (bad) stc jecxz xor ljmp out mov clc shld icebp scas std arpl cmpsl mov xchg pushl xchg cli rcr lock cld int (bad) ljmp aas notl xchg das (bad) mov push fdivr pop push push inc inc mov ja addr16 pop jmp std jae out (bad) mov (bad) loop cli lahf ljmp repz incb ficoml repz xlat cld daa mov out cld sahf pop push (bad) icebp negl pop cld push jg lahf repnz loope dec cld loope mov mov ja cmpsl pop rep sbb jae imul ret pop sti leave mov scas clc lret mov ljmp jmp xlat fscale xchg ds out imulb addr16 pop dec (bad) pushf outsl std ret (bad) sti dec jle pop lock std idivl mov imul jg sti jge stc xchg ja leave aas repnz std lret aas std icebp (bad) std (bad) cld sbb out sahf mov (bad) mov cli jg into aas icebp jmp sar fisubrl ja lcall enter cld xchg call jg pop pushl in aas cli scas jle aas jl sti (bad) cs aas clc sbb icebp call jle scas std fcos in pop lock das (bad) pop cli iret cmp aas xchg cld (bad) fcomip lahf cld idivl push cld or pop out cmpsb push mov jg lahf icebp daa std sahf jg lahf sti push ljmp (bad) pushl sti in mov (bad) cld data16 mov cmpsb jmp dec incb shrl cli (bad) pop mov sarl cmc aas (bad) lcall jg,pn das (bad) and mov (bad) sub push jg lahf xor (bad) idiv mov cltd cld push dec cmpsl jg push (bad) mov xchg xor jmp aas mov aas std icebp pop (bad) jecxz (bad) lret mov cli ljmp std rcl aas cli fstpt jg cld mov pop clc dec lahf (bad) jmp repz sti pop jmp (bad) cmp inc pop icebp jmp mov mov (bad) mov sub mov call std and aas dec pushl pop ljmp cmpsl out lret std inc ds dec (bad) loope and cmp das out incl mov and repz iret mov lock (bad) fucomip aad cmc cmpsl push mov (bad) call jg (bad) cmp stc mov xchg std stos jg repz cld out cmp aas (bad) mov neg (bad) sti ja sarb jg (bad) popa das jg mov cli xlat inc (bad) xchg (bad) clc scas ljmp (bad) mov aaa call jg dec stc (bad) ficom in mov push aas (bad) in jle lret mov mov lret in mov scas ljmp cmpsb outsl lahf jmp (bad) sti fstpt push jmp jg pop clc pop jle stc mov ljmp addr16 mov (bad) leave into call ljmp mov (bad) and pop std aad in cmc lahf mov (bad) scas jg int (bad) mov loope cli dec cld sbb daa decb dec (bad) mov jle das pop jge neg cli pop (bad) fdivrp lock sti cmp enter repz (bad) sub (bad) jecxz xlat mov mov aas jle cld pop clc xor aas inc in sti leave ret (bad) idiv inc push pop sti outsl ljmp jg es scas stc mov adc ja push mov aad ljmp std outsl cld fstpt (bad) stc lahf std cmpl jmp stc in jmp repnz std loope pop cli aaa in outsl call aas ljmp lods cli pop (bad) call into lahf lock out cli sbb inc jg outsl cli repnz sti inc mov out pop notb repnz mov cld mov jl out jle mov paddd out (bad) mov hlt sti out (bad) outsl (bad) fwait ja fucomi (bad) pop mov mov (bad) (bad) ficompl cld out (bad) xchg mov push mov lcall aas popf cld jp rcr cmc cmp mov loopne out scas cwtl (bad) jmp ljmp in std xor mov mov jmp repnz pop and aas std cmp jle (bad) sti iret cld xor cld lds mov cwtl cld (bad) call pop cmc jg std xchg pop dec lahf cli fwait cld pop jg aas lcall push mov clc cmc pop std mov adc xor stos jg paddw lahf cli fisttpl jecxz cld fdivrp std outsl lcall addr16 add out sahf std push mov (bad) sbb inc lahf stc lock (bad) out decb xchg (bad) dec mov xchg (bad) sti mov xor lods jg fistpll repnz jg jecxz lock (bad) aam jg lahf lock pop dec push pushl pop cmp aas out std jae mov jle mov mov (bad) (bad) mov dec jnp mov loopne clc out aas jmp jle jg ja idivl xor out rcr into push pop decl std jle aas ljmp xchg push jg sbbl xchg jg mov cmpsl ds cmp out std jne rcr jmp mov pop std out in jg lahf jp sub out (bad) out cld cmp std dec cli and loope (bad) mov (bad) fistpl cld pop xlat jg gs mov cld dec jg aas cmc imul aas fs aas clc ja (bad) dec decb outsl clc loop clc jge (bad) incl lahf clc mov scas into (bad) test out xlat jl sbb std daa (bad) cld stc lahf cmc lods mov mov loope scas clc xlat jg fnstcw pop in fwait mov push repz fisubr cld ds jg push or sti fstpt aas loopne std sbbl (bad) sti dec (bad) (bad) ja loope out leave pop hlt inc (bad) sub lcall mov das std ja loop mov aad cmc scas xor pushl std loopne stc cmp (bad) (bad) lahf stc imul (bad) pop cli xchg (bad) fstp repz call call push jg sar cld psubb jle,pn pop cld (bad) cld daa mov mov jle xchg mov jg daa cld dec jg addr16 cmc xchg sub sahf mov clc ljmp cmc xlat std aaa inc pop (bad) jnp out jg psubq aas cld loop sti fnstsw jg mov fnstcw clc iret clc mov std fcomp lock xchg inc das cmp dec jg out into jg stc lods (bad) out mov paddd cli cld mov jmp (bad) ja lods jg shrd aas icebp iret cld sti lcall dec decb push aas jmp xchg mov (bad) sti addr16 mov hlt iret mov aas cld mov out (bad) pop mov (bad) pop (bad) out jg dec std pop jg outsl cli pop (bad) aad jg push addr16 (bad) ret sub lock mov (bad) jecxz out call push inc stc xlat fstp std scas (bad) pop call pop jg scas cld daa jg rcrb lea in (bad) (bad) pop std or mov out jle mov jg lahf ja push cmpsl push pop dec repnz cld (bad) dec xchg mov xchg jg mov scas (bad) aas mov hlt das test push incb icebp icebp jne aaa (bad) mov cli psubb std scas cmc pop (bad) push jg jge lcall pop hlt iret incb xchg call aas cmc pop decl jmp sub lods jg stc std mov popf pop cli arpl scas cmp jne mov stc aaa sub cld bnd clc arpl push pop xchg inc das decl lock xchg (bad) xchg cld mov mov clc xlat push (bad) stc aas clc add mov popf leave jg sti aad (bad) pop into (bad) (bad) aas icebp comiss mov sbb std xchg leave gs icebp out jg push cld push dec incl (bad) jg xlat cli mov inc mov out pop mov jge pop jle dec sti arpl clc aad icebp out ljmp loopne sti cmp loop decb test (bad) sahf mov pop ljmp jg (bad) mov pushl lahf idiv push inc mov cld and jecxz int3 mov loopne xchg (bad) sbb jg int inc rcrl pop cli dec jle paddd inc out dec std aas stc sub fiadd jg push paddw (bad) cld jg pop jl paddd aas std paddw stc lret lahf decb aaa std fucomip jg (bad) (bad) jmp ret mov (bad) stc outsl stc inc pop jl aaa std push pop aas std daa std lret call push das std aaa jg scas call std push mov jmp cli aad incb stos (bad) ljmp jl (bad) xchg push (bad) jecxz jle mov jmp das inc mov jg mov cmp xlat call mov mov decb cli gs mov incl loope out jecxz std lahf (bad) mov std ljmp fidivr lret pop sahf (bad) cmp xchg stc pop cld lahf jmp jg mov cld jecxz imul cld fistpll (bad) sarl dec mov mov (bad) fidivr mov hlt addr16 stc jg stc (bad) cld (bad) divl aas js (bad) call aas icebp idivl stc mov lock call std mov (bad) push mov jg aad jb lahf stc or std dec jg out mov (bad) rcr pop nop (bad) ljmp xlat div pop sbb repz std mov jg (bad) decl fldt (bad) mov lahf movsl cmc mov sti mov call int idivb jmp cmp lahf cmc idiv leave jg aas mov dec cmp adc aam icebp idiv (bad) dec (bad) pop (bad) ljmp cmpsl cmc mov loope ja stos call jmp std (bad) cmc lahf cld xchg loopne std pop jle mov inc (bad) sahf (bad) inc push jnp pop jg into pop repz es das cli in jle das sti dec mov in out aas mov pop ja std pop imulb std leave mov std xchg inc aas lock int int jmp (bad) movaps pop std xchg jg out jae xchg scas (bad) sti (bad) fcomip mov mov inc mov call decb (bad) fistp (bad) mov mov jg xchg call call pop jae mov pop (bad) cmp push aas cmc iret incb (bad) std out icebp iret std inc jg repz in decl movd cmp xlat (bad) faddl mov mov lcall je dec (bad) mov pop push outsl not std stos mov icebp sbb add les clc cmpsl cld insl jg out notl int icebp aas notb std imul xlat scas jp in inc lcall imul xchg mov dec aas imull pop (bad) fidivrl pop mov loop std cmpsl call fnstsw pop clc sar fcompl stc aaa decb or (bad) (bad) mov clc lahf jo mov mov sti cli mov aad dec stos fist sti mov std cmp jle pop sti gs sahf inc mov out cld stos jg jg xlat std sbb xlat out jg dec lahf xor imul cld fidivrl std addr16 lret mov dec mov (bad) clc daa cld addr16 imul lret jg in (bad) cmp lods (bad) (bad) fucomip scas incb test jecxz movsb clc stc int sti xlat (bad) mov call outsl ljmp xor popf cld pop call out jg jmp pop setnp outsl ljmp movsl jg jg fcmovnbe cli jmp std or jmp sti das (bad) in clc or in mov (bad) sbb out (bad) mov imul shr repz aas stc sarl (bad) sti rcrl aas std call xchg icebp decl jg stc pop call (bad) das push das push mov cmp aas jle lret sahf mov (bad) idivl jg jg cli xchg (bad) jg pop jmp dec mov fcompl pop mov (bad) jle out dec (bad) fisubrl stc (bad) lea stos cld inc dec jle movsb fcomip aaa jl inc cld into and mov sbb std iret cld mov xchg jg (bad) rcr std outsl stc sbb (bad) iret (bad) sar mov mov jg push pop lcall rcr cli inc call (bad) stc xchg orl mov (bad) outsl pop std pop mov in dec outsl jle lods fcomip psubw (bad) call (bad) push jle mov in idiv out (bad) (bad) jmp mov pop std add pop std lahf mov aas fdivr mov mov lock xor xchg cmpl std aaa (bad) mov cld out std sar out repnz cld int out idivl lahf (bad) (bad) out icebp mov call out ljmp xchg or cmp imul call call (bad) fucomip pop jg pop repz (bad) popf aas cmp ljmp std pop lcall mov push lahf inc (bad) (bad) jns ficompl inc (bad) addr16 mov loop (bad) mov mov jmp push (bad) scas jg loope icebp mov add and cmc out lock enter jnp jg (bad) lahf (bad) mov decb mov sti xor jmp mov icebp outsl js movd das mov addr16 cmpsb pop call fcomip aas jle xchg (bad) mov jg repz std xchg mov aas clc mov jg jg cmpsb jg mov popf pop std cmpsl cld sbb cmpsl xchg aas std or idiv out (bad) (bad) mov push mov cld daa incl fsubrp idiv aas jg xchg cld push jg aas hlt aas jge push lods jle ja cli daa (bad) call mov lods aas in cld jnp push aas sti pop jg pop cli imul jmp sti or (bad) lcall ret lods pop sti cmpsl iret decl (bad) add pop push mov jg pop mov pop (bad) pop call pop push std jp sarl jg jg aas cld xor jg jg pop dec mov jg jg aaa std out call (bad) clc mov (bad) cmp jg aas xchg ja (bad) cli btc (bad) push mov xor jnp in in cmp mov dec decb hlt daa pushl out (bad) jae mov bndcl std pop mov dec inc jg out pop icebp jg movsl jg incb clc inc incb pop (bad) stc jae mov sti scas stc out es std xchg decb xor pushl incl jg out aaa clc insl inc jg scas clc stos dec (bad) cld or out clc iret lahf jg (bad) xchg (bad) std sbb inc loop xchg clc pop cmp mov (bad) iret cli daa jle outsl cld (bad) sbb cmp fwait push (bad) call out repz std ja enter cld push das ljmp jmp push lds (bad) push sbb std icebp (bad) fsubrl sti cmp jg scas stc in ljmp add sub call ret pop into (bad) in in pop push jg stc das pop decb enter lahf std scas inc mov sti in xchg cld xor cld loope repz cld imul push (bad) jg mov dec incl mov jl idivl (bad) sbb fnstsw out xlat stc pop imul add pop std imul js jg std jle jg pushl movsl lahf clc into pop testl fildll cld hlt mov sti pop jmp call (bad) cld jmp ret scas sti sbb (bad) loopne xchg cmp es repz push (bad) icebp mov movd pop sti mov cld outsl jg mov cmp (bad) jmp jnp call aas dec imul iret stc jne std scas mov fwait out aam out icebp iret std in xchg hlt imull sti daa cs (bad) mov int cli xlat (bad) cli aas in aas (bad) outsl (bad) in jg iret stc movsl jg mov das (bad) in std outsl clc jmp std (bad) test cmc iret arpl mov pop cli xor jle (bad) fstpt decl cmc stos (bad) push pushl pop std pop idiv mov das cli mov (bad) (bad) cmpsl (bad) sbb bswap (bad) stc insl (bad) xlat aas cltd in cld daa in mov aas in ja stc incl (bad) mov pop dec repz cld mov sbb std int decb (bad) cmp fucomip iret es mov (bad) inc pushl std (bad) mov ret das ljmp aas repnz jnp mov xor aas enter idiv mov loop jg aaa imul pop (bad) jecxz out push adc mov jmp std aas in std xor jmp repz inc jg mov mov mov out aaa cli call stc (bad) mov loop sti sbb mov (bad) ja push lcall (bad) jg lahf (bad) xlat ljmp xchg (bad) push std daa (bad) stc fwait jg aaa sti mov out push scas stc mov negb lahf mov iret jg aas loopne stc mov enter dec iret cld test movsb stc lcall xor repz xlat cld push mov sar in outsl icebp mov fcos (bad) push inc insb dec jle mov outsl incl std insl jmp jmp aaa movsl icebp ljmp int3 mov inc divb cli jge in (bad) cld repnz (bad) fistpll neg fbstp jg mov ficomp outsl cli inc nop std clc and call cmp std sub pop std mov repz sti (bad) pop movsb mov push aas std fistpll pop cld hlt push popf mov push std sbb lock iret js mov mov nop mov mov (bad) repz stc daa test incb std iret cld outsb mov cld jae std mov das std out lahf aaa cli push imul jg (bad) dec rcrb xchg hlt fnop mov lcall (bad) mov jle fucomip (bad) call (bad) xchg (bad) iret pushl cld notl cld jecxz call lahf cli scas fdivr int fcmovnu loopne cli pop jle mov mov mov jg jmp jmp in sar std sbb in push xlat cli dec xlat mov out cld inc mov ljmp (bad) jge mov (bad) (bad) sti (bad) xchg mov pop sti cmp stos aas in pop adc (bad) pop jmp cli (bad) mov ljmp fstpt dec std (bad) ret push (bad) in fldcw out pop (bad) cmp pop (bad) cmp pop imul scas clc pop pop call (bad) ljmp stc aas dec jg lahf sti xor stc (bad) jge cli sbb int aas repz (bad) (bad) dec fcomip sbb or rcr in sti std mov jg into pushf loop mov cmpl decb mov sbb mov mov mov jmp loop ss cmc jle xchg dec jle ljmp lock sti xchg (bad) mov cld pop cld sti jg outsl stc daa jmp aas call jg pop std mov ret jg (bad) cld pop decl out rorl adc lock fstpt fnstsw lahf cli aas jle dec inc aas sti ja aad hlt dec ds cmpl mov leave lahf repnz fstpt lahf clc pop cld inc jg pop repz out ljmp jg lods (bad) jg jnp xlat jg rcrl cld pop mov inc inc pop jl in out (bad) out cli pop cmp cld or pop jmp push sar jmp std idiv pop movsb jg mov jbe outsl clc sti or jg jg inc cld imull stos and iret stc popf mov lea mov (bad) push jg (bad) imul mov dec push pop sar aad shr ja cld jge fnstcw pop lcall jp neg pop (bad) sub repnz iret jge repz cld dec mov mov jp imul stc shrl (bad) cld jmp cmpsl jg in (bad) mov xchg (bad) mov (bad) pop push sar std outsl (bad) aas jg outsl sub xchg lcall (bad) jmp sti sbb stos (bad) hlt mov jg aaa jge sti cld xchg mov add jg mov decl jnp aam repz (bad) mov jmp (bad) jmp out ljmp in cli (bad) cld imul std jecxz repz sti std outsb jecxz std lahf call js (bad) das cmc pop cmc lock test mov jmp mov jnp cli pop sti ja sti in (bad) jecxz (bad) call out mov (bad) jle iret push push jg mov pushl jmp cld sub xchg decl rcr out clc pop call lret loop cli negl cmpl repnz dec jl sarl decb jg cli mov mov push out cli fwait dec fcomip cmp pop dec cli jmp sti movsl jg lahf decl pop (bad) ljmp sti pop jge inc std aad (bad) outsl lock sbb inc lahf dec hlt sti in pop jg pop sti pop std mov (bad) (bad) std pop (bad) aaa inc pop and lahf fs stc pop repz sti fistpll mov add fistpll (bad) out in cli inc mov outsl std jnp in lock mov rcrl out push aas stc scas (bad) jmp repz xlat jg mov jg mov lahf lahf stc push mov mov xchg inc jg outsl cmc lcall fcoml psubsw idiv sbb cmpsb clc testl inc outsl stc ja dec and (bad) jmp (bad) out leave (bad) mov aas jecxz jg jg out clc repz cwtl jg aas data16 std clc ljmp and popf mov cld jae leave outsl negb (bad) sub idivl aas std xchg (bad) idivb (bad) mov cld (bad) pop sti jne (bad) mov (bad) cld jg ja int jns scas popf (bad) fidivr mov mov pop cli (bad) pop call addr16 fwait (bad) mov mov (bad) pop mov ljmp pop idivl mov jg out cli lahf cmp pop cli jnp out in lahf std hlt out (bad) aas std mov xchg ljmp jg pop repnz std arpl mov leave (bad) stc repz std jno int3 jg inc dec (bad) cmpsl pop std jno (bad) (bad) pop stc cmpsl mov iret jge incl cld daa std or scas cmc pop jl icebp cmp popf inc das stc iret decl movsb jg outsl (bad) (bad) stc jmp dec ds (bad) out stc xchg dec mov and mov (bad) (bad) lcall lods jmp popa icebp jmp mov in repnz nop (bad) cld xor jle pop decb icebp aaa jmp inc decb and icebp aaa clc lret xchg pop (bad) and cmc fstpt repnz std out pop std jns and aas incl sar jmp jg xchg dec jle jecxz mov xlat cmpsl lahf std pop mov popf in (bad) idiv iret leave jle xor sar hlt sbb les cld push jle fcomip dec cli or imul jmp jl mov ja mov out incl mov pop imul sti xlat cli sub icebp outsl std outsl jmp jg pop mov aam mov xlat jmp stc imul negb adc cmpsb jecxz std fwait int3 (bad) mov jg or jmp sbb rcrb inc scas sar sbb test mov clc out mov cmc (bad) mov repz clc (bad) cmpsb test das decb (bad) (bad) fnstsw repz xchg out scas popf jge (bad) (bad) (bad) stc in jge inc cld jno shr paddb xor call out cld pop cld mov xor (bad) pushl xchg jg iret stc popf dec jg aaa clc add (bad) (bad) clc mov std fimull mov jae mov aaa push pop jecxz cld mov fstps push jg das sti adc push mov cmc dec mov mov (bad) jmp (bad) xor out aas inc jmp call scas cld imul ljmp in clc (bad) dec pop cmpsl lahf sahf xchg std stc ror xor out jg int mov xchg clc out dec (bad) mov in pop push std jg fcomip das stc sbb in ja std das (bad) cmp in mov in fnstcw lock jne fstpt ds (bad) aaa jmp loope mov (bad) pushl ljmp std pop pop std aam sbbl incl cld push lahf in (bad) clc outsl decl sar cltd jg idivl mov out das (bad) sti jg jg icebp jmp ja push das call (bad) not aas stc cmp in jg jg jmp push inc incl shr scas sti lahf jle ftst xlat jl push std jg,pt jmp ljmp dec pop hlt sti cld xchg (bad) std push or xchg popf mov xor (bad) ljmp jg mov mov std idiv out push xor cld sub mov rcrl pop inc (bad) in out jnp xor aas mul stos mov aaa (bad) jg cmc fcomip jmp (bad) call mov fistpl hlt outsl lcall pop out jmp std add mov sbb sti mov (bad) decb (bad) mov imul cld pop aas clc add leave pop testl out aas jp jmp (bad) call cmp into jg idiv cmpsl ljmp xchg call aas lock mov clc test repz (bad) out pop mov jle lock mov aaa jg pop lcall cld ret (bad) nop (bad) call (bad) cli loopne leave pop cli lods mov cmp pop (bad) jg das decb mov call lret mov mov std daa pop call jg mov mov jne adc aas cld cli call outsl (bad) fwait dec (bad) std mov jg call iret (bad) call shrl sarb std adc xor xchg icebp daa jle aas in lahf movsb stc sti xorl neg negb jecxz decb clc bswap dec aas xor jp sti incl mov (bad) xchg out sti pop jle jg xlat daa push (bad) dec clc dec (bad) call mov idiv daa (bad) je pushl clc das (bad) sbb iret cld jle jg loope jg fwait outsl dec (bad) jmp pop les jg fnop ja sbb xor dec mov fnstsw (bad) stc mov jg int jg (bad) cltd mov lahf jmp das jle mov pop cld mov mov stc aas std gs out push xchg std (bad) fwait incb mov idiv dec jg scas icebp jmp test aas loopne cli mov aad cld sti (bad) (bad) (bad) out jmp imul std jg sbb scas dec cld incl fdivrp int pop mov (bad) push (bad) xchg (bad) pop cld jnp cmpl cli lcall jmp out pop inc cld mov in cld gs (bad) (bad) or incb cmc lahf cli or mov cld sub (bad) cld mov fwait jle out dec cli negl jg cmpsl jle push clc inc jmp mov cmc pop std idivb popf sar das jg pop mul push das mov std dec inc out dec icebp ret fbstp mov aas mov jg push sti repz out (bad) cmpsl dec aas lock std (bad) jnp (bad) out outsl sti sbb or (bad) in jmp (bad) sti mov mov (bad) outsl sbb mov cmpsl out jg jmp popf fcomip in pop stc paddw ret (bad) xor iret stc fcomip in sti test jg jg out mov jg lahf jle decl cli out jl imul stc iret dec (bad) cld (bad) jg scas stc test jg out loopne pop call aad lock decb (bad) sub daa (bad) lret pop jmp jg pop stc sti jle,pn aas idivl icebp mov (bad) outsl or sti lret push inc (bad) stc paddw jg outsl (bad) sti (bad) xchg mov jle mov (bad) out cld fidivrl sar std cmp pop cld hlt pop repnz cld data16 (bad) mov xchg (bad) cli inc (bad) out jg outsl repz repnz push aam mov jmp dec cli repz cld (bad) fbstp or popf xor iret (bad) jg in sti mov mov sbb xlat pop (bad) out jecxz bnd lret dec (bad) out jg cld out ljmp sti arpl lahf std daa mov cld pop push lahf cli (bad) mov jg lahf dec hlt ljmp loope enter lds scas (bad) ljmp xchg lock (bad) call (bad) std daa xlat mov mov mov (bad) (bad) mov aaa (bad) addr16 xchg pop pop cld dec inc pop cli sbbl aas decb fdivrp ss fild (bad) out xor pop mov (bad) sbb in out hlt xchg lock idivb xchg (bad) clc imull jle aas je (bad) mov cmp stc call out cli cld (bad) std mov dec fstpt mov mov pop (bad) clc pop hlt daa cld mov insl decl (bad) sti psubb jg pop cmc xchg jle (bad) pop xchg lahf stc clc fstpt (bad) mov cmc iret js mov pop mov mov std cmpsb xor dec (bad) jecxz sti add addr16 std cmpl (bad) (bad) ret aas lock sti lods push ljmp (bad) pop jno insl std das mov xor daa (bad) push in pop std xlat decb repnz sar jg jg (bad) mov xchg cmp mov fistp not clc jmp xchg push jg aas std (bad) mov stc idiv rorl aas in aad cmc push cld scas les jg push out sti std (bad) mov std lcall jno ds aas dec div pop stc inc xlat jg fnop dec call or jnp cmpsl jg daa (bad) fidivr psubb dec scas pushl call cld daa mov aas cmc inc sar das inc out aas pop sbb (bad) stc stos (bad) in jg and sub (bad) sar nop out mov out decb mov mov and repz dec hlt decl adc xchg cld mov mov out call (bad) aas out (bad) aas pop call xor jg mov (bad) (bad) clc idiv mov mov cltd mov fucomip dec and aas sti int jg dec decb repnz es repz xor jge out (bad) std fidiv jmp jle pop xchg (bad) (bad) cmp scas fbld jmp pushf cld aam repz inc rcrl mov (bad) jg (bad) cli mov push xchg (bad) (bad) test xchg test stc (bad) (bad) aas cmc imul jg das js mov xchg cld cld (bad) call idiv clc pop cld sbb std outsl lahf sar imul jg mov pop lahf cld adc repnz stc lret mov (bad) and lcall mov (bad) xchg dec (bad) loopne (bad) push pop (bad) in fsubp xlat cld sub std mov fstpt in pop inc decl jmp mov jg fucomip (bad) (bad) stos jg out cli and xchg jg lods lahf std pop idivl mov jle jg mov and sub lahf pop out testl cli (bad) psraw (bad) cmp out cld mov (bad) std mov (bad) mov mov out mov fucomip dec jmp aaa cld lahf (bad) xlat aas lahf hlt fistpll mov inc cld stos icebp out jb clc das cld std mov jmp jle mov (bad) movsl jnp (bad) jecxz in icebp aas cmp popf jg sti scas jle negl and (bad) jle mov inc mov imul xlat movsb call fimul cld mov ljmp mov jns in (bad) jmp mov (bad) loop std sbb (bad) std sub icebp jmp sbb incl (bad) fistpl mov sbb std stc fucomp (bad) fwait push fstpt das sti scas aas dec mov stos mov mov paddd (bad) in aas lahf (bad) (bad) fldcw cli inc jg mov (bad) out aas mov stc inc loopne cld pop outsl (bad) pop jp cmc sti std mov loop cld dec cmp cli push lret icebp out cmc pop add aas cltd lock inc (bad) mov mov jg iret sti push imul test cli (bad) out (bad) mov (bad) jmp (bad) out jle (bad) jne clc lahf cli adc mov inc mov add ljmp lock jg fcomip dec cld mull dec mov jg scas movsb idiv sahf out aas pushl repz fbld aas testb aam das cli call mov out cld mov loopne icebp ret outsl clc xlat dec pop lock std stc mov mov stc shrl (bad) xlat mov cli jmp leave xchg jmp (bad) cli jmp aas stc mov pop lret pop jg lahf aam pop inc out cwtl (bad) and fbstp repz fucomip outsl test cmp sbb xchg dec negb imull mul int pop icebp fwait (bad) (bad) sarl call ljmp dec jle (bad) (bad) jmp fwait mov jmp notb aas stc mov mov jg outsl repnz jmp incb cld leave mov clc mov lds repz iret (bad) fldt repz arpl jg clc dec mov jg lcall enter dec and (bad) xlat scas jle mov cli out out stc out xchg fbld (bad) decl (bad) in call (bad) std jg mov mov (bad) jle cmp xlat mov mov jg shr pop std pop in mov test mov mov sarl fcomip (bad) lcall ja (bad) jge (bad) std bound (bad) nop lahf cli cmp aam sti aas ds xchg inc cwtl lcall cmp and paddw (bad) ds mov mov sub pushl scas sti cs pop std inc js out cmp push fdivrp std pop std cltd pop (bad) ds jg repz call dec pop std sarl sti jg (bad) stc sub into aas insb (bad) lods (bad) psubd pop (bad) cmp jmp cmp inc inc jmp shrl cld hlt jg sti mov icebp lds jg sbb mov in lahf divb jns aaa lds cli test push xlat inc jle std loopne jl cli sti dec cli lods (bad) movsl (bad) aas out fisub out stc xchg push inc mov enter mov jne xor sti in (bad) xor out loop (bad) sub (bad) arpl pop cld stos jg mov xchg cmp rcr hlt dec cli jnp mov sarl fistpll pop jl dec (bad) jg xor mov cmp cli stc dec (bad) out jg mov std xchg negb mov inc ljmp mov xchg hlt (bad) mov testb push (bad) jg pop jl dec decl (bad) mov jg out icebp xchg movsl movq xchg in cld sti jg out call push mov pop xchg jmp mov stc aas jg repnz inc inc cli out psubq (bad) (bad) sbb (bad) pushl call lahf mov sar dec cli cmp outsl cli ja cld push in mov rorl cltd aas idivb lcall jle pop nop (bad) stc mov cld lret cli gs incl mov (bad) lods mov jmp (bad) dec jg xchg in cld push mov inc (bad) jno mov pop and ret out sti adc aas icebp call idiv pop incl stc scas icebp aaa pushl jmp ljmp out outsl jg aas jmp aas imul outsl mov jg mov ljmp aas sti jnp mov cmc fistpll mov jg outsl (bad) stos xchg mov pushl sub (bad) jl in mov stos jle outsl lock (bad) jmp icebp (bad) xchg jmp lahf inc jmp jg jg (bad) cld out jg pop repnz inc jg cmp ficomp (bad) xlat aas jo jg out (bad) aad jg inc mov jg jne mov jne mov cld int mov jg pop and cmc jg incl repz out aas incl cld idiv mov adc mov jg iret jecxz fistpl idivl es cld int out popf aas data16 lret sarb decl ret aas jmp clc cwtl lock cmpsl aas xchg out pop jg aas icebp (bad) adc cld dec (bad) js pop incl lahf (bad) mov nop out repnz mov (bad) jg lahf (bad) out cld das push inc fnstcw mov lahf sahf std push mov call jne fldenv jg repnz mov std push jmp aas repnz repnz imul ret aas icebp sbb paddd outsl aas (bad) pop cld jns (bad) outsl hlt in jg xchg mov (bad) jmp repnz jle repz (bad) std idiv mov sti cmp jmp xor jge dec aas clc (bad) cmpsb jg scas std xor cmpl (bad) xlat (bad) in (bad) mov clc das stc xchg fsubs les dec out xlat daa jg fcomip aaa xchg (bad) stc loop mov in stc pop (bad) jne mov inc (bad) mov das jg clc (bad) iret cli sub scas mov test push in (bad) dec jle adc cmpsl (bad) mov (bad) mov stc cmp das stc (bad) call aas js jg pop imul pop movsl cld jmp testl mov cli sbb call cli sarl out cmc stos push jg pop dec std pop mov call std xchg push pop lock mov lock idivb cli xlat cld sbb cvtps2pi lret iret (bad) (bad) mov cli ficom push out repnz std aam jg (bad) (bad) fdivrl clc mov pop dec mov inc dec mov and jle fild cli or outsb lret in jg ret das (bad) sti aas divl idivl aad std sbb ficomp xlat incl xchg mov in (bad) jmp test jmp xchg sar (bad) dec jle jg xlat inc (bad) jmp pop jg xchg cmpsl pop (bad) in jg fstpt out aas jnp mov aas stc (bad) cli cmpsl decl repz in jg pop repnz cld and lcall jmp jg push cld mov cmp std ljmp pushl ret out (bad) aas std icebp xchg mov std addr16 out pop cld (bad) cmp aas out pop (bad) sbb fstpl pop adc lret xchg mov scas stc dec jle aas in incb lahf cld xchg jg mov pop mov (bad) mov (bad) ficomp std jecxz sarb cltd stc fcomip sti aad rorb imul ds fcomip sbb std xchg pop fwait mov scas cmp lahf (bad) mov jl jg dec mov (bad) jecxz pop (bad) cli pop (bad) call cld pop jle pop cmc mov lock jmp call sti jnp mov mov out repnz cmpsl sahf cld push jg jg idiv imul inc repnz cmpsl sbb shlb push cli aas cli mov (bad) push jg pop cld pop out std in das jg push aas (bad) or pop xchg mov addr16 mov psubb aam mull jmp cli rcr pop (bad) aad aas fnstsw mov paddd aas in aas inc (bad) lcall cmp addr16 (bad) in pop adc out (bad) popf (bad) sti jg imul mov mov xchg mov popf jmp xchg fnstsw xlat jg ljmp (bad) sti sbbl sbb scas cmc (bad) lea in mov lock xchg pop icebp dec call pop cld (bad) mov fdivrl loopne out pop sti outsl (bad) fstpl mov lock (bad) cmc jle mov outsl lock hlt (bad) outsl jmp out scas (bad) mul fcmovnu pop stc cmpsl cld into (bad) jnp lock pop sti cmp (bad) (bad) in decb aaa sti scas jg pushl cli addr16 (bad) std fidivrl pop cld outsl (bad) mov incb clc adc fistp testl mov ljmp xchg (bad) fstp clc pop std cmpsl jge,pt jmp pop mov (bad) in pop std scas (bad) sar cld psubb (bad) (bad) cli xchg sahf std xor std lods jle mov aaa clc cmp sahf std movsl jg dec std or pushl ljmp jg movsl (bad) dec (bad) jl ljmp fstps out aas cmp aas loop stc mov repnz cld mov scas inc pop out (bad) mov push cld xchg mov jle jg aaa sti sar imul arpl (bad) stc (bad) repnz std xchg dec fstpl pop mov ja (bad) out fmull popf jg dec jl (bad) int3 jmp jg xacquire cld (bad) rcrl aad hlt (bad) call leave out inc cld call std pop mov pop std lret pop cld or cli sti outsl stc jge dec repnz xchg fild mov leave mov cmc mov dec mov inc mov mov jg mov mov icebp fcomip sbb dec incl (bad) addr16 repz out fnstcw jecxz stc cmpl jg (bad) (bad) cmc jg mov lcall (bad) in (bad) (bad) out hlt psubb (bad) fdivr mov (bad) xor jg daa dec lahf ljmp and mov icebp (bad) std idiv fmul sar icebp pop push (bad) out out (bad) pop (bad) pushf scas push mov fucomip js psubq jg jg pop xchg jg jmp in jle pop stc imul outsl lock mov sti std addr16 (bad) in iret jle aas ljmp cmpl stc push ljmp (bad) incl cmpsl jg call jg in mov out jmp lahf std sar (bad) std out cld sti jg (bad) cli (bad) cltd std fwait mov and out (bad) cli call aas cmc mov push (bad) dec jle jg incb jmp mov in jle jmp aas enter mov jmp sub fucomip ljmp das jle mov jg jae iret jg iret cld adc lock jg,pt aas cmc out (bad) gs (bad) and lds (bad) mov sti cmpsl (bad) aaa aas clc gs iret decl decl aas jle mov ljmp fucomip xlat pop cld int fcmovu decl icebp cmpl (bad) mov mov sub in mov (bad) ljmp fstpt repz sub ja adc stc (bad) jmp addr16 out xchg out (bad) psrlq pop std stos jmp jg pop pushl ja mov or (bad) xchg ret aas mov aas lcall lahf cld idiv jle aad dec jmp (bad) clc xchg scas jp xor push lods (bad) (bad) mov jg fnstsw idiv fwait inc lahf clc jnp mov std pop dec out stc out cld push daa inc stc pop dec cli repz cli mov incb daa push lahf cli fwait pop incb xchg push lahf (bad) out mov test pop (bad) (bad) jmp in mov sub popf ljmp pop decl aad sti arpl mov fnop cmpsl cld negb decb in paddd lahf stc addr16 (bad) jmp jl (bad) idiv xchg pop out (bad) jmp (bad) fnstsw xchg cld sarl push jg (bad) clc imul std sub pushf (bad) mov jg xlat cli stos lcall sbb rcrb xlat cld sub cmp hlt mov stos cmpl ja arpl mov (bad) sti mov ds sbb dec div aas stc aad (bad) aas hlt idiv cmpsl jg out cld pop incl mov sub jae paddd and outsl jmp dec icebp pop repnz sahf inc ja jg (bad) jmp pop icebp outsl mov cli pop jg clc ja cld fcomps xlat incb call stc (bad) cmp std cmp jg or dec jmp aas (bad) in std dec (bad) mov inc jmp mov scas std cmp xchg xchg mov mov test jmp (bad) pop jg pop cld frstor jg das incb pushl lock clc fstpl (bad) incl jecxz cld (bad) xchg dec jle aas cmc das cld ljmp std and hlt aas ds mov fstp in iret jge (bad) xchg adc (bad) fdivrp jmp pop repz cmp rcrb jbe std adc jg fcomip xlat cld pop jle mov jle iret std movsl jg mov decl arpl mov out mov repnz jg outsl (bad) mov pop std fisub mov decb fdivrp sbb sbb out std xor scas cli adc xchg mov pop dec mov (bad) and jg pop cli mov dec cld sar shrl (bad) push jg pop repnz loope rcrl (bad) std daa mov clc or call (bad) in outsl ljmp out (bad) (bad) call dec push stc lahf lock std (bad) (bad) loop idivl icebp (bad) jg fildll jg jecxz repnz das clc mov jnp out stc aas std test in inc mov (bad) js mov imul push (bad) out clc fstpt push (bad) xlat fcomip or push cld je (bad) psubd cmpl aaa std add ljmp lahf (bad) jmp jg pop (bad) mov sti pop std or (bad) aas (bad) arpl (bad) cld mov addr16 ja adc outsl (bad) fwait (bad) ljmp std pop jmp (bad) out pop cld (bad) mov iret ljmp (bad) pop js addr16 jno incl in scas arpl movsl (bad) (bad) out in cld xor jmp sti jg mov (bad) in pop lock out scas clc test (bad) cmpsl cmpsb (bad) mov fdivrs mov jg pop cmc mov jle aaa sub mov out and std test cmp xlat (bad) addr16 sti xlat clc loop cli movsl das (bad) out (bad) std xchg (bad) clc das cld and lahf cli mov (bad) paddb fcomps mov lret pop inc icebp fcmovnu (bad) pop jle cmc fnstsw test pop inc sar cli into aas pushl incl in mov out decb (bad) dec repnz mov jmp cld fistpll fcomip push cld (bad) enter jg mov mov xchg ljmp iret jle ljmp hlt mov movsb mov cmc out cli xlat mov and icebp stos (bad) fstpt (bad) clc daa clc std fucomip (bad) daa (bad) out aas std icebp mov decl jg divb mov divb sti xor in pushl cli jnp stos jg mov in decl aad or jns mov divb idiv jnp repnz aad jae cld sti pop icebp pop inc jg pop (bad) stc aas repnz cld stos push loope mov fwait jmp in aas or loope stc (bad) lahf jg scas mov pop sar jg pop cmc or ljmp std jle jg xlat dec xchg jg push cld pop xchg jg call aad fstpt das (bad) je inc fcomip idiv (bad) mov daa cld aaa jg (bad) pop aas cli ret (bad) push icebp lahf jg pop hlt loop inc (bad) idivl das std cmp xlat arpl call ret jg mov mov (bad) dec (bad) out jg pop (bad) fwait (bad) mov call cmp mov jle lcall out out clc imull ljmp hlt fbld out aas pushl jmp lret push fcos xchg cld add aad repnz cmp std cli push (bad) out repnz in in dec cld mov out (bad) mov std fstpt fstps repnz jbe jle clc lcall inc (bad) idivl cli sti lahf decl jmp aaa xchg mov pop jg lahf cld fwait std inc mov cld ficomp cld push jmp fcomip pop cld icebp in (bad) fcomps test dec jle aas jecxz out xor mov clc loope mov hlt iret xor repnz out jg dec incb movsl jg jg jl fwait mov mov dec lcall cmp rcr inc (bad) mov xlat xlat mov lcall pmaxub jmp fnstsw jmp sub mov aas popf loop sbb xlat aas cmc daa std ficoml ret aas pop hlt out jg idiv ret (bad) (bad) jg in out clc in (bad) sahf aas imulb icebp mov mov in das cld sbb inc (bad) (bad) xlat cli add mov lahf add repz cld dec (bad) ds jmp jl xchg incl jne mov movsb aas je scas clc (bad) mov cmpsl fistpll stc mov (bad) js mov loope (bad) aas jb cld scas and cld or dec mov xchg stc out pushl jg fwait mov std das decl mov testl stc xchg cmp jbe sbb jno repz jg pop icebp jg (bad) aas (bad) cmpsl (bad) fstp idivb sar jg mov inc pop dec cli repz or icebp cmp jp jle les fildll jg daa (bad) cmpsb sti jg jg imul (bad) mov out std out cld es jmp aas lock aaa (bad) mov mov mov sarl clc setp leave mov jg fcomip mov jg sub mov out cmp pop std imul fdivr pop (bad) insl int3 (bad) jg aad cli sarl fcomip pop std pop mov call std ret psubq imul and out clc fwait jmp jnp jne pop cmp fstp (bad) pop cli (bad) dec leave pop imull mov dec aas cmc idiv pop mov cmp adc out cli dec lret cli (bad) pop repz call loopne pop sti outsl cmp ds jmp mov incl push (bad) stc cmc pop (bad) test and (bad) std clc mov lahf std ja mov out jge pop push std cs pop lock decb cmc (bad) (bad) mov sarb sahf sbb outsl icebp idivb call out or loope std scas ds stos jmp cmp into jg (bad) sub sarl addr16 mov (bad) repnz dec jle jg call push leave (bad) aas lock sar jmp jmp scas stc fstpt ja mov or pop mov in (bad) (bad) stc outsl icebp (bad) mov clc (bad) fstpt loope cld pop std xlat scas jmp mov dec clc jmp (bad) jmp (bad) mov (bad) and idivb ja xchg sub stc mov (bad) clc (bad) mov sub (bad) movswl fstpt jg repnz (bad) (bad) test in (bad) clc add std jae jmp dec cmc pop inc icebp fstpt daa std jmp (bad) clc (bad) cld jp repz jg jg idivb lahf (bad) mov loop std mov jmp inc cld out mov repz cld inc (bad) mov jle lret adc inc jmp aas stc inc adc std (bad) pop repz lods into jg out pop xchg inc (bad) rcr repz call (bad) mov ja test stc pop out jmp scas out pushl out fcomip lahf (bad) and loop pop repz pop and hlt sbb push mov pop std jno lahf std stos call pop clc fbstp daa jg scas mov (bad) (bad) mov dec stc movd stc fistpll scas std sbb cli or loope ljmp loope outsl sub (bad) (bad) in cmc pop cld xlat cld cs icebp (bad) pop repnz (bad) lret (bad) scas pop out idiv jmp cli in shrl (bad) std mov aaa pop sbb xor repz mov (bad) sarb icebp call (bad) stos mov daa mov fcomip (bad) pop hlt mov cld or jecxz jnp enter (bad) ljmp push decl std mov or mov fbld dec clc dec outsl jg xlat stc sti mov imulb jg idiv sbb sti in in cmp (bad) jno nop in iret fcomip (bad) ss fisubrl and std mov mov decb sahf std imul (bad) std mov mov std or jg cli addr16 outsl lock jge mull (bad) call cli decl mov cld mov sbb (bad) sar pop not std or aas out loopne clc xchg das jg dec iret loopne adc lahf std adc rcrb mov sti (bad) cli dec ljmp mov (bad) nop incl in inc hlt out jae dec cli out fstpt std or enter daa inc dec xchg pop incb fistpl cli add push mov ljmp das std lds jg in jg (bad) iret mov mov (bad) gs pop inc icebp (bad) lahf sti cmp loopne jg cmpl mov (bad) out xor (bad) (bad) sahf pop mov xor xchg incl mov dec negb cld dec fcomip and pop push jg das stc jge cld pop call lahf (bad) aaa (bad) das mov cld sarl decl cld (bad) icebp mov jg arpl lods (bad) std addr16 mov fs out (bad) popa jg negl outsb mov mov mov cli aad icebp out fnop or stc mov (bad) mov sti mov mov in mov dec cld lcall jno cmc cmpsl jle pop out daa call (bad) ds (bad) scas imul (bad) cli cmc scas stc jmp or idivl jmp xchg jmp jg jne push stos cmpl mov (bad) fidivr dec (bad) push mov adc xchg hlt iret in (bad) sbb test cld arpl jle mov imul lahf (bad) mov jmp iret std (bad) jg scas jp scas xchg (bad) decb scas outsl std jle repnz (bad) xchg dec std shrl stos cli jmp clc insl jg aas lock std (bad) push clc out mov out cld push jle out decl jecxz sti xchg dec call jg icebp ret pop std dec decl bound (bad) xchg jg outsl ds xor aaa sti leave call stc (bad) loopne es in idiv xchg aas mov lret mov mov loop mov outsl std imul dec shl jle imul mov out (bad) call std and aas mov aas jg das (bad) icebp jg jg std clc daa jg mov jg scas mov sti addr16 mov cld mov cld sarb jg lahf mov xlat (bad) mov pop cld pop jg lahf cmc dec xchg jg push (bad) idiv in outsl clc xchg popa aas jle xlat lahf dec inc mov (bad) cmp pop clc call aam repz std out sub mov xor std ret (bad) call jg out sti push (bad) (bad) jle and scas push fcomip pop and clc mov ljmp mov dec jmp jg (bad) pop jmp call scas mov jmp stc int jle lods fcomip daa mov das jp xlat jmp out lahf cmc jmp push jmp fistpll outsl clc iret push cld (bad) pop ljmp repz aas jns negb decl lock cld scas (bad) sub aas icebp xchg nop cld (bad) pop enter dec fildll scas stc ja repz xchg aas imul sarl outsl decb iret jle sub out pop jecxz cld add xlat lcall cld cmpsl call xchg mov in outsl stc into jg (bad) cld mov idiv (bad) repz call xor fistpll aas cld jmp (bad) cli neg push idiv into out icebp imul jg pop mul (bad) cmp aas lcall fild (bad) jmp mov sbb xchg aad sti cltd mov std stos (bad) idivl (bad) fdivrs ja cmpsl (bad) lods jmp repz cli sti std xchg call sti iret dec (bad) scas js xlat cmp lock (bad) (bad) fnstcw jg repnz cmp stc mov sarb pop cld pop pop inc push cmpsl mov decb dec jle in sub pop mov cli mov lcall xchg jg lahf repz mov int jmp into jg out std addr16 iret std xor sbb mov adc fucomp xchg lret jg out pop pusha stc std dec jle aas in cli pop aas std aaa jmp std lcall cld int cmc push xlat cmp stos dec jmp ja pop sub xchg aas sti idiv shr std inc jmp outsl cmc jnp stos ja repz mov (bad) jle push dec jp imulb hlt ljmp ja scas std in ljmp repnz cld sarl (bad) mov iret stc mov cld addr16 jg pop lock (bad) stc test jno stc repz mov repz cld movq lahf repz std mov movsl jg fildll xchg pop jg (bad) xchg es jle in out pop (bad) stc scas pop cmc in lcall (bad) fistpll (bad) dec jg lahf cld scas mov std sar jmp cld xor aas sub ljmp jg fcomip sbb in aaa sti scas pop std ret leave and stc (bad) std cmp incb (bad) iret aas (bad) std lcall jg imull pop movsb aas incl sti dec pushl pop std mov (bad) flds clc imull cmc jg jnp push aad stc jg cld sti dec jmp lahf (bad) push scas ljmp jno (bad) repnz push aas cmc dec mov cld pinsrw int add aaa std dec out cld sbb int3 aas negl (bad) sbb mov add xchg or sti mov in in iret aas repnz fdivrp test dec jmp (bad) dec stc cmp incb js ja pop lock (bad) in repnz inc mov jge std jae call scas (bad) repnz in sub sahf and mov aas repnz dec (bad) mov repz int test xchg incl aad std fnstcw xchg (bad) cli sbb jg out hlt dec (bad) mov inc jle pop add icebp pop fs mov imul (bad) scas jg fucomip xchg cmpsb (bad) (bad) in cld aaa decb (bad) (bad) cli xchg incl outsl jle xchg jecxz out (bad) repnz call fldcw cli movsl mov daa mov std pop pop mov (bad) stc mov xlat xor mov aas std popf dec jg outsl (bad) fsin (bad) jns loopne cmc mov fnstcw aas pop stc sti push (bad) loop jle iret clc arpl jg cs cmp cmp mov jae sti jl daa inc jle mov clc idiv movq push jg fcomip (bad) jg fcos popf or scas jmp out outsl icebp pop cld fstpt scas icebp icebp pop repz pop cld insl lods mov jg std stc in (bad) cld jge (bad) scas dec (bad) incl jg mov or ret jg adc das sub lods jg pop std push mov pusha jg mull sub jmp cld sbb mov inc push fbld mov cmc mov out cmc (bad) std lret das stc ja cld inc mov call jg out sbb and std jnp out clc pop (bad) mov out sti aad iret outsl not incl mov mov in gs in xchg mov inc (bad) jp push popf pop cmp pop std gs jg hlt iret aas sti in decb icebp (bad) xchg (bad) cli mov out fist stc aaa pop aas cmp pop mov xor inc dec lahf icebp mov cld std cli (bad) in pop cmpsb cld sti out sti popf lcall lahf scas (bad) fcompl mov mov jmp push mov out (bad) stc iret mov dec jle mov movd sti cld xchg mov std ret iret and lcall mov dec inc aas in (bad) lods ja stc or out call (bad) hlt aas clc aaa call mov aas repnz sbb sti call stc inc jg fcomip idiv push mov cli std jne jg (bad) cld pop lcall repnz sti lahf lcall push jg (bad) decl lods (bad) cwtl mov fcmovnu daa std stc (bad) sarl dec cli out std scas pop cld push mov repnz mov in clc ret xchg (bad) aas jmp (bad) cmpsl out cld mov xlat mov cmc out stc pop std adc bnd fwait std mov jg scas decl (bad) adc and lahf (bad) cs ljmp in and xor dec (bad) ljmp ljmp hlt das std cmp jg sarl stc (bad) out (bad) cli test mov loopne dec cld sti inc jg lahf dec ds cmc call xchg jmp jg mov sub mov jmp cli out jmp mov mov popf (bad) (bad) in clc jecxz adc inc scas call (bad) jg out cld adc or mov cmp mov icebp out stc out (bad) stc aaa push (bad) std pop lock (bad) das cli sub sahf (bad) (bad) push outsl (bad) aas call jle jg icebp mov jle das lea jg dec push sbbl into jg out (bad) mov (bad) sub mov cld xchg clc fildll inc iret (bad) adc mov pop repnz xchg fs aaa clc adc pop cld leave xor lahf (bad) push jg push (bad) std fnstenv cli imul aas notb or into aas idivb (bad) jg fild (bad) jnp call mov divl mov cmp aas mov pop pushl dec (bad) fnstcw imull and scas incl repnz ja cld add (bad) jmp sbb jecxz inc sub pop cld jle cli aas (bad) call inc aas mov mov repz cld scas fs loop lahf iret decb out ja out jg cld and cmc pop call shrl xchg sbb sti outsl push mov (bad) (bad) and scas negl std insl jg jmp stos pop cmc fistl mov mov jmp loop (bad) std push std mov arpl scas cld idiv aam in jg mov (bad) imul (bad) out ljmp dec xchg jg push cmp (bad) aad or aaa mov mov stc lahf cld inc mov outsl movsb mov js outsl stc xlat (bad) mov jg aas xchg repnz cmpsl call lahf lock (bad) sti imul mov call cld (bad) (bad) jmp aas notb jo cli out inc jg aaa sti xor xchg std (bad) dec (bad) lods ljmp iret clc mov lahf (bad) ljmp fistp jg (bad) sti cmp pop (bad) cld jg mov shrl out sti cmc call cmc cmpsl (bad) xchg push (bad) loopne clc sub xchg aas cli outsl cld incb mov (bad) jmp jg outsl clc (bad) call or stos pop notl sub les repz clc push mov mov pop dec jle leave lahf cld and daa (bad) in mov dec lret clc ja in pop (bad) cmpsl decb psubw xchg aas loope (bad) fistp pushl lahf sti out inc jg jg pop std cmpsb jg (bad) mov add iret pop cld sar enter decl outsl imul icebp aad jg fucomip call cld out aas repnz std jecxz sbb std mov lret into fistpll cli lahf jg fcomip cld int dec clc lcall jg pop aam (bad) mov cmpsl (bad) fwait mov cmpsl fdivr mov pop cli sti call sti jg pop repnz sar icebp cld iret inc das mov (bad) (bad) cli dec cmpsl clc imul lock idivl loop jg fstp out ja aad hlt mov pushf pop decl push cmp or out xchg iret cmpsl mov ret inc lcall (bad) ficomp jecxz aam jbe (bad) mov (bad) adc dec jg pop mov lret imul repnz xor out cmc fincstp jmp fwait mov shld arpl lahf call inc mov cld cs jg pop mov mov mul out stc lods push fucomip jg cmpsl (bad) mov push out pop call mov aas xchg sti int repnz call dec jle sti arpl lret xchg in mov (bad) dec fisubr stc push mov pushl fcomip daa pop incl incl pop inc enter pushf aas scas (bad) cmp jg popf push (bad) sbb (bad) (bad) in aas clc fist fiaddl out std inc push jle imull aas (bad) cld pop cld fnstsw scas std in leave (bad) jle jecxz aas jle mov jnp push cmp call outsl clc daa (bad) (bad) (bad) (bad) lock fdivrl fwait cmp aas cld xchg sbb cld or mov jmp out pop repz out pop (bad) mov std scas jg push aaa std mov stc ja xchg lods mov outsl lock decl (bad) xor aas std pop (bad) stc pop jg out inc cld notl ds dec std and dec cld xchg jg scas notl iret scas int3 fdivrp cmp out cld mov ret jg fistpll mov jnp (bad) call stc ja mov jle out std push jg pop icebp (bad) (bad) std jmp mov iret (bad) stos jle fist push jg daa stos lods jg cld mov jp repz pushl jle repz (bad) push jg lahf stc addr16 sti (bad) jle aas repz aaa lahf (bad) pop jg pop stc jg jmp call jmp icebp out ljmp cli out loope idivb sti pop lcall jmp cs mov aad pop repz cltd jnp inc jg (bad) sar rcrl cmpsl jmp negl sti (bad) cld int3 xchg jmp (bad) out std popf lcall jg pop sti sbb inc sarb jg scas inc (bad) icebp outsl std cmp aas ljmp aas in loopne (bad) fidivr out icebp paddw lock sahf fcomip das decb mov xor xlat cmp ja mov cltd cld scas jg mov jmp xor fistpll lahf clc mov jg idivb jmp mov pushl mov inc cli jmp cli daa fwait (bad) (bad) lods pop hlt imul xchg pop xchg int3 mov in cld ret aas sti arpl movsb jg mov notl pop (bad) sti xor sti push or mov cld lcall inc repz inc (bad) cld inc mov lcall cmp out lcall stc jecxz cwtl in repnz leave mov mov repnz jmp call jg (bad) (bad) lods (bad) mov (bad) sahf jg or das jle fldcw cmpsl fisttp icebp iret cmpsl jg lahf push jle lock mov (bad) lcall or pop (bad) jmp negb fcomps mov lock pushl std push lcall sti mov out pop std out aas stc outsl (bad) cli mov jle pop aas decb jge stos (bad) cltd fucomip sub jg (bad) hlt iret pop stc leave in cld dec jg repz (bad) jmp scas (bad) sti pop in fisttp in (bad) lret (bad) mov (bad) (bad) sub out (bad) cmp pop std aas incb ljmp aaa cli sub mov mov lcall (bad) outsl cld das cld sub jg fnop adc loope (bad) or adc hlt pop cld xchg jg mov out insb push call mov mov xchg repnz outsl hlt sbb (bad) (bad) xor cmc testl adc cmpsl test sbb jmp fcomip (bad) clc mov shl mov xor mov call jle push (bad) (bad) dec std sbb jg pop cmp out hlt cmp mov cmp add (bad) aas jmp cli out ret iret ds mov out rcrb les jg scas lret mov pop (bad) bound outsl std paddw jg fcomip das sar dec mov jmp (bad) in das sti xor aas jmp pop neg cli in inc daa xchg jg loop aas stc ja mov ljmp jg jmp jg mov scas aas lods (bad) out (bad) pop cli frstor mov sti dec jle jg jmp repz out out paddw pop and stc or push (bad) enter daa (bad) mov cli sbb repnz fcompl lock stc mov lods lret icebp repz lcall (bad) leave mov pop std add jle idiv dec incl adc aaa jg repz (bad) mov sti (bad) fstpt lahf cmc xlat cld in jg das mov (bad) push call out clc fwait std loope icebp fcomip imul paddd pop sarl stos (bad) call xchg popa xchg in xlat into cmc aas std fwait std addr16 in (bad) fwait push repnz cli push jmp ja in stc (bad) das pushl sarb mov lret (bad) (bad) sti cld xchg aas loopne cld push jmp iret call aas cmc mov (bad) ret clc das add mov std iret push aas clc xchg jmp (bad) lods pop (bad) iret iret (bad) fnstcw jg cld jmp scas adc std aaa jle aad std mov fist out hlt das lcall aaa clc cmpsl jle cli dec dec jg mov in (bad) xlat (bad) xchg jg in std scas ljmp std ret (bad) push idiv sbb std add idivl cli jg pop (bad) aad mov iret aas in loop jp adc (bad) sti dec inc dec pop lock (bad) fcos ljmp das jg pop jecxz idiv ljmp mov cld jg (bad) fucomp cld fcmovu fdivrp cld out jle call iret (bad) popf sub clc pop aas jp daa (bad) (bad) icebp jg scas cld mov (bad) movq decl dec cld mov repz mov hlt aaa stc daa mov sti sub aas in outsl clc sub mov std pop jmp aas in idiv xchg jle lahf pop jl pop pop (bad) pop jg jmp aas std fistpll aas cli pop mov jmp aas cmc aaa jmp mov std bnd out (bad) icebp pop jne aaa cld push (bad) stc mov (bad) aas inc (bad) fisttp jle (bad) (bad) mov sbb mov imul (bad) clc (bad) cmp aaa mov jg call cli cmp or dec clc pop ljmp stc or mov (bad) xlat nop jg in stc sub lock cld push dec iret cld mov int scas mov inc (bad) loopne inc (bad) in (bad) ljmp iret out xor outsl dec jg std std stos (bad) xor (bad) clc int lret lcall mov (bad) jle jg ja clc in mov mov inc (bad) imulb cmpl dec std addr16 (bad) jl decl fsts xchg (bad) test sub and lahf cld in mov adc std outsl mov (bad) imul pop icebp aas xchg cld jl call pop std rcr sbb negl decb les sti xlat (bad) cmp (bad) mov decl stc (bad) inc xchg lahf mov dec (bad) decl (bad) mov cmc call pushl fisttp ja pop (bad) mov repz std dec (bad) in push inc pop mov sti fstpt lahf cli insb cmc lret aas stc inc (bad) mov in repnz jge cli sbb addr16 pop stc pop xchg (bad) std idiv pop jg cld (bad) pop std clc jg pop jg lods pop hlt xor (bad) lahf cld into divl (bad) addr16 repnz lcall iret (bad) test out out (bad) mov stc push cld sarl cld pop mov jmp movq xchg xchg push xchg ljmp dec fstp out sti iret inc aas data16 (bad) fwait into (bad) fwait pop jg std (bad) mov lahf cld lods mov push (bad) cli repz fnstsw (bad) call push dec jle cld (bad) call out clc aaa (bad) fstps dec jg jg addr16 jg pop mov call jg mov fistpll lods mov icebp fistpl imul das cld pop jg cmp (bad) mov mov cld std outsb ja loop in outsl stc aas pop sar decl hlt aaa adc ljmp dec (bad) fisubrl in das call aaa lcall iret sti ret (bad) xchg ret ret jg (bad) mov push into (bad) cmp (bad) repz shrl arpl jg (bad) jmp repz mov lock cmp (bad) icebp pop std notl sti jg sar (bad) aas stc imul lock (bad) idivl in (bad) movsb cld leave fcomip inc sti pop pushl testb ljmp jmp mov mov (bad) sti fwait jl xlat incb loop mov mov push jg mov (bad) in negl std loop sti dec push pop cld iret (bad) shr pop push fucomip int icebp outsl cld leave jnp fsubr clc lret (bad) fdivr in cli repz aas (bad) ljmp out stc adc clc pop std mov ret mov jmp mov dec sub fneni(8087 mov (bad) pushf clc out xchg (bad) jp jle jg daa jle pop sarb (bad) mov sub leave jmp jg sub stc adc repz cli or lock shr cld rcrl repz jmp jg scas inc cld sti lahf loope (bad) jmp mov jmp fcomip pop jge push call addr16 cld pop scas paddd clc mov mov lahf cld and xlat out jmp cld leave out cli scas pop incb repz (bad) out jmp jge jg xchg (bad) (bad) std das dec sahf inc (bad) out out out lahf stc clc das test idiv pop push aas (bad) (bad) cmc das mov jmp out aas repz (bad) mov cmc pop (bad) (bad) (bad) bnd xor repz dec outsl repz test mov ret jg pop lock ds (bad) xlat hlt out stc adc out incl in (bad) jmp jmp xchg cmp (bad) fnstsw std pop mov (bad) pop lock sbb loope jg neg cmp pop imul iret (bad) ficompl ja lods call jg nop loop dec (bad) xlat mov lds ja hlt iret jmp mov std or lods jg mov cmc jg (bad) in (bad) lahf fdivrp lahf push mov jg aas repnz mov stc insl jle pop cli fstpt pop stc cmp or pop lock pop clc pop (bad) inc lcall std pop jg scas jnp iret std idivb outsl clc paddd (bad) jmp jb (bad) (bad) and (bad) jmp pusha cli std data16 stc jg (bad) in scas std dec ljmp push cmp mov dec inc cld repnz std test cmc aas cld (bad) jg scas cmc mov push ja ror lock cmp repnz pushl jg outsl dec (bad) fistp jp cmc lods (bad) psubd jg out clc mov repz cmp sbb daa jg aas stc sbb loop iret jmp dec outsl call ds stos sarl push stc dec imulb mov sti ljmp jmp das in (bad) ss pushl mov idiv jae ja paddw jmp aas test stos dec jle repnz xchg stc das inc (bad) cli xlat lcall lahf icebp push arpl lcall mov out jle jg ja pop mov inc lock fdivr call into scas (bad) mov sbb dec movsb idiv fnstsw mov jg pop cli pop (bad) xor aas jmp outsl sar xor repz jge jmp (bad) in cmpsl clc decl sti outsl jmp (bad) das aas icebp lahf cld in cli out cld mov dec out mov push mov popf jg std xor pop icebp fildll jg dec lahf dec bnd (bad) mul (bad) aaa clc out pop adc std popa jg ljmp mov (bad) cmp (bad) out decb jne (bad) mov aaa decb cmp xlat (bad) incb cmp fisub mov push pop (bad) stc outsl hlt das cld pop (bad) fisubrl into jle xchg (bad) fucomp jbe sti iret jmp (bad) jg pop cli jnp cmp sbb (bad) outsl jmp dec (bad) cld fidivrl jg ljmp jecxz dec jg fcomip lret dec (bad) std loope icebp cmpl rcrl lock cli (bad) cld push jmp repnz out (bad) pop jge cmpsl cld push pop mov (bad) movsl jg das jg or (bad) cli (bad) pop jg out mov inc out idiv std jecxz aas sti jmp jmp stos arpl pop (bad) push jg icebp mov dec lret adc add std pop xchg out stc mov fdivr (bad) insl (bad) mov dec (bad) cmp in fcomip pop (bad) fidiv mov decl (bad) sbb jno jnp xchg mov jg sar cld das cli mov mov cli imull std pop inc jg outsl lock and xchg jg,pt ja loopne (bad) daa inc popf lods jg mull adc js sbb jecxz (bad) mov imull jmp nop aas clc pop jle fist imul call fcomip pop mov (bad) and icebp out pushl cli cmc (bad) cld fwait std outsb (bad) in pop repz std into call outsl idivl stc das jg daa mov fnstcw aas mov iret pop hlt addr16 out mov decb sub scas call outsl lock mov fisttp loope hlt jnp ja icebp out (bad) mov scas icebp sbb add ss fidivr std sbb es jg pop mov push cld lret mov mov lods aas cld loop stc loopne inc jg imul scas (bad) mov scas (bad) cmp push outsl mov incb fdivrl (bad) fnstsw cld pop repnz and cmc lahf push pop jg sbb iret scas repz fcmovb repz mov cmc in clc shr dec mul (bad) inc mov (bad) (bad) std pop decl lcall icebp lahf cli pop std and (bad) std jnp (bad) decl jmp outsl cmp cld iret out mov jnp cli loopne movsl cld xor ja (bad) cmpl inc cld sti idiv data16 jg push popf cld aam notl or fdivr pop (bad) data16 pop incb into mov adc mov mul popa std in cli jmp inc in push mov (bad) fs (bad) cwtl jg aaa (bad) stc stc (bad) (bad) mov int3 fildll lahf std mov gs aas or icebp ja mov cmp std wrmsr (bad) std ljmp (bad) aas call jg mov out pop repz sti in xchg (bad) sti scas (bad) cld pop fwait loop fucomip das js in lahf stos decl repz std cmp std mov cmp add (bad) addr16 dec lcall jmp (bad) jecxz iret decl jae int aas repz decb aas (bad) lods inc mov std inc popf cmc pop lcall stos (bad) sti jmp jmp cli mov aas lcall cmpsl incl incb jne dec cli out dec jmp mov pop mov lahf push jg xlat cmp push (bad) stos call mov mov loop cmp jg pop decl (bad) clc out jp lock cmpl clc pop cld jno (bad) outsl mov icebp pop aaa mov mov mov push (bad) in std test jae mov idivl aas in outsl xchg std sub lret ljmp push (bad) repnz cmpsb jg pop cli fwait aas dec (bad) jmp xchg jg in decl in (bad) jg daa jg aas lock incl jb lahf mov loop (bad) cmp pop cmc (bad) cmc fwait std mov cli lods (bad) xchg pop repnz out lahf clc sbb in fcomip das std xchg jg das pop pop incl mov jg pop cmc out cmpsl jg outsl imull xchg jg pop (bad) paddb mov lret imulb nop mov push out stc repz xchg jg dec sti sub es out mov int sbb repz cld ss jmp lcall jg xchg call lahf cli mov mov fwait call std aam (bad) xlat cld pop inc stc call out scas stc xchg cmpsb aas mov stc (bad) aam in cli leave mov cli fcmovnu push std xlat jg out icebp xlat cs sbb xlat out jg div jg out cld (bad) jg (bad) clc mov pop jo cli test cld ret (bad) stos xchg outsl std in cld xchg fnstsw scas stc cmp pusha inc (bad) (bad) mov cmpsl std cmp out jmp (bad) lock jg (bad) cld pop cld mov outsl negb scas mov pop (bad) clc mov lahf adc cs mov cmpsl (bad) hlt xchg fdivrp adc lcall hlt cld ja xor outsl fdivrp dec decb mov cld (bad) jmp jg (bad) incb repz sti cld sarl decl lds out je sti aaa incl jl pop std lret mov sbb (bad) cld mov (bad) fisubrl jg lahf cld das dec stos fcomip xlat cld gs fistpll jo jg aas icebp daa jmp cld out (bad) xchg mov mov addr16 cmc fwait incl inc jg jg mov aaa incl jecxz clc idiv push jmp (bad) in aas xchg sbb cld mov pop cld out std jmp repnz scas mov dec mov addr16 dec (bad) pop jle aas incb pop std iret jg jecxz clc ja push mov push cld add ja ja out jne pop incl enter incl (bad) jp cld xchg stc (bad) cld mov mov jg dec (bad) xchg lahf cld mov jmp stc aaa std xchg jg out out std mov lock les (bad) jmp jg (bad) inc push pop aas testb scas dec mov in stc pop inc push out jg inc mov (bad) pop push outsl (bad) lock into mov fnop jg inc jg mov jg pop mulb dec xlat xlat mov std mov jg pop into (bad) stos inc aas icebp daa jmp std pop inc mov (bad) out mov scas jle outsl (bad) adc cmc jg pop cld iret cld dec test repz clc int imull jmp jg lcall icebp aas jmp xor cmpsl aas stc pop decb cld lods jmp xchg loope lahf fdivrp mov stc scas fwait inc push pop ljmp scas pushl daa xlat mov jg pop cld pop (bad) ljmp sahf push inc outsl pushl jge mov clc idiv out (bad) cld mov in aas loop cld mov jg daa dec dec ret fcomip xlat cld jge test jns psubd fdivr mov stc pop incl jg aas repnz (bad) jge call aas cmc psubb push (bad) std (bad) std jg jg push ljmp sti out jle pop cmc mov outsl cld pop cld cltd (bad) mov std mov stos cmpl (bad) cld (bad) inc pop icebp mov ds add cmc jmp ja call jg dec cld aam hlt das jg jnp jmp pop daa (bad) in pop hlt aad cmc cmp sbb call xlat xchg (bad) out mov repnz (bad) aad into mov pop addr16 mulb (bad) gs ljmp dec lahf jle ja mov lcall addr16 (bad) cli iret jmp fbld push aas cld ljmp cld repz bsf dec jg mov std jg das jns (bad) add pop stc in pushl outsl stc pop mov sarb cmpsl jmp cli mov (bad) stos call cmc jg or mov aaa (bad) stc pop jecxz pop cld insl jg out cld dec cld xor jmp into aas lock (bad) sub sahf lahf cli cmpsl mov std fstpt out sti lahf (bad) scas ja sti dec jg pop hlt jmp into xchg cmc out imul pushl (bad) faddp (bad) iret imul mov call call xchg fcomip ja fwait jp,pt mov clc scas call jmp mov pop stc (bad) mov cli movd clc das cld in jg mov dec fnop mov and sbb sub jg fwait (bad) loope jmp mov icebp lahf stc sub aas loopne pushl mov (bad) ljmp mov lahf (bad) hlt xchg cld repz push mov (bad) (bad) iret mov lahf (bad) pop (bad) fistpl stos in cmp sti (bad) icebp jg lret jg in fnstsw repz int3 push mov (bad) push fistp sarl stc fwait decl dec cmc ljmp mov lret (bad) cld pop cli sub xchg sbb hlt scas icebp pop (bad) clc lahf sti out lcall icebp (bad) jmp clc icebp aas cld aaa std mov jns out test scas inc cld clc jno xor loopne notb mov imul sbb pop jg mov scas incl aas hlt xlat cld imul pop push das sti fwait (bad) in idivl sbb movsb xchg jg fcomip jnp in clc xchg fbld loop clc pop ljmp cli movd pop out clc (bad) mov fcomip xchg std jecxz std pop hlt leave outsl icebp addr16 fisttpl jmp stc scas jg outsl stc or repnz in jmp ljmp xor cld sub scas std (bad) decb cmpsl cld adc in out jg pop (bad) jge (bad) sti (bad) aaa sti inc (bad) stos aas loop cli cmc (bad) sarl sti dec jge idiv jle out xor lret (bad) cltd mov (bad) mov xchg mov fisubr cld dec mov (bad) cmp (bad) pushl std mov ja lods (bad) das cld out push aas cli mov mov aas std xlat (bad) jmp ret lret (bad) sti out stc dec call jg pop mov jge iret jle pop aas clc adc jmp loopne jmp lret outsl cld shrl (bad) repz in (bad) xor or lock jle scas pop std pop inc sarl cli cld loopne cli push jle mov lcall sbb ret pop incl mov cmc mov jo ja fistpll mov clc add mov (bad) clc mov sti cmp cli (bad) (bad) fidivrl cli pop pushl lock dec jmp leave fcomip mov stc lret jmp aas out dec incb (bad) out (bad) into pop icebp mov lahf icebp mov mov cmp popf aas stc mov cmp (bad) sti mov aas mov in in imul jmp (bad) imul cmc pop lcall pushl popf incb stc mov jne xchg fcomip pop outsb xlat jg daa fisttp lret push jg mov repnz fbld pop std divl shl cmpsl mov incl sub shll jmp fdivr inc jle fucomip aas clc idivl pop out inc (bad) cmc (bad) lods (bad) ljmp stc lret incb pop (bad) cld add mov (bad) scas (bad) call aas notl pop idivl or jg mov jg jg cld jecxz in std (bad) mov aaa pushl scas stc cld cmp cld jecxz push jg outsl cld pop ds sub aas call in push fstps pop cld jnp int dec std aas stc add mov (bad) pop mov jg pop sti (bad) std push jg out cld pop (bad) jp icebp out repnz mov std fucomip mov (bad) movsl push jg (bad) (bad) icebp lahf xchg (bad) jp in lahf hlt xlat cld arpl div xlat cli out jle lds fnstsw std and lahf jge cmp sti push jmp call imul (bad) jmp (bad) call out lock fdivrp lret lahf repnz mulb pop mov stc std jg popf mov jle rcl out jg aaa call in iret stos repnz pop out paddb jg pop cmp mov push leave jle jnp cli lahf mov (bad) call cli in out repz (bad) std mov addr16 leave sti mov mov mov jg pop repnz incb (bad) incb (bad) (bad) fstpt stc push pop mov call pop std pop jmp jg (bad) std (bad) jg outsl decb mov in das sub lahf fcomip aas sti negb bnd jecxz leave in jg mov dec dec fcomip pop (bad) in jg pop repz jmp popf loop aas je ja (bad) mov jbe inc cld cltd stc lahf std imul jg aad mov decl repz xchg das (bad) test bnd push jg divb in call (bad) pop cld jne loope (bad) sti psubq aaa fnstsw ljmp sti (bad) in sti sar cli (bad) in mov cmc (bad) cli arpl lret pop cld sub inc dec jg pop (bad) cld lret aas sti xlat clc mov mov (bad) aad aas cmc imul aas js mov mov ja mov (bad) stc mov jg mov leave fnstsw (bad) scas repz stc lahf xchg aas and lahf (bad) idivl fnop fsqrt xchg jle jg pop std (bad) std xchg aam jg shr imulb incl stc idivl (bad) repnz (bad) outsl mov jle (bad) scas incb xchg (bad) das ljmp dec cld mov loope jbe repnz xchg jg fstpt jmp mov (bad) stos aas call (bad) mov ja leave mov in xchg std sbb stc push (bad) cmp pop mov sbb fistpll cld mov out mov lcall cld fucomip (bad) movsl mov fwait call lahf cld ret call outsl incl (bad) fcomip ja cld imul mov mov pop icebp mov scas sti scas (bad) jecxz neg (bad) imul lret (bad) (bad) cltd lahf mov jg push addr16 sti repz jg pop aas (bad) paddw idiv hlt idiv cmc mov aaa hlt (bad) (bad) fbstp jge lret (bad) scas pop lock jmp cmpsl cld ss sarl out mov jne ret fucomip (bad) hlt out (bad) xor das jnp pop cmp hlt pop pop inc jg pushl sti (bad) dec mov cmc cmpsl std stos iret (bad) sti aas cmc idiv push mov (bad) mov scas cld mov stc mov in repz cmp imul (bad) clc pop cli lods pop dec call aas icebp (bad) (bad) mov mov leave jmp mov (bad) in ljmp cmc sti movsb jg out mov scas std pop jg lahf neg jl jg (bad) aas jg incb in cli popf jle pop lock std fdivrs mov clc fwait push ja test std aas sbb pop mov (bad) jg (bad) std mov div push aas pop (bad) mov sti imul pop negl pop stc lahf hlt pop cld mov lds xor stos aas imul (bad) aaa jg (bad) lods fistpll mov (bad) (bad) das cld dec (bad) repnz pop cld sar fist daa jg aas (bad) xchg std adc jmp aas loopne pop idivb jp ljmp fildll cld cmp jg out (bad) out xchg fbld idiv sar loopne sub mov std sbb outsl cmc pop adc std imul repz xchg aas std lahf pushl jle icebp fcomip pop jle negl mov stos jg psubb (bad) sarb sbb cmpsl mov iret lret pop jnp sti std dec push mov (bad) stc fstpl outsl cmc pop (bad) sub fcomps lock popf mov (bad) (bad) ljmp pop (bad) fsubr incb out lcall jg aas lock std aaa xchg aas sti (bad) movsl pop pop jge push std ret jg rcr mov xchg mov mov inc aas clc lahf push (bad) cld xlat sti cmp loope dec (bad) pop mov icebp (bad) mov negl pop mov stc pop jmp dec mov call aas in xchg in pop pop decl cld neg jge out cld jmp lret jg aas clc mov cmp sar repnz std ss inc pop dec pushl aas negb out scas cli gs lahf sti sar cli cmpsl ljmp aas cmc daa std jle fcomp mov (bad) jmp idivb clc scas cli mov jg pop repz cld out leave push iret cld mov stc das cld pop pop call (bad) add shr jno mov dec mov mov mov neg cli jnp arpl ljmp (bad) sub jg (bad) stos aas stc mov inc mov cmp jmp inc (bad) iret cld inc mov xchg mov aas dec mov iret jg lahf neg (bad) (bad) (bad) das call iret pop cli icebp shrl aad dec lahf std xchg mov jne nop pop jecxz decl aad xchg mov jg (bad) pop (bad) movsb pop jecxz clc in ljmp aas std (bad) jg jg icebp loop stc jecxz fldcw (bad) aas jle mul das clc xchg jg mov jg lahf repnz call dec jmp sti push lahf inc mov jmp idiv ljmp fcmovne fdivrl std pop jle lahf clc mov mov sub iret cli daa jle (bad) aaa std jno (bad) xchg (bad) mov stos (bad) jmp inc (bad) aad std aaa stc stos (bad) fstpl inc jl fistl out pop (bad) clc (bad) loop stc pop mov icebp iret mov sti cmpsl (bad) in jmp lea mov push repz std arpl pop std stos jg (bad) (bad) pop jg fcomip mov call cli mov pushl sarl incb jmp push mov (bad) hlt lahf icebp das (bad) ljmp cld scas (bad) xlat (bad) imull incb jg (bad) (bad) in (bad) mov in (bad) stos fucomip outsl clc lea pushl ja lahf pop std xlat cld inc (bad) jmp sti in mov aas mov inc call cmc mov or aas sti sbb or mov out jmp xchg idiv (bad) aas popa stc jg push (bad) fimul clc (bad) out lahf call jg (bad) stc jg idivl pop std (bad) cmp std bnd out into outsl std jne pop cld (bad) jg out cld das std pop inc (bad) std fimull das xchg jg pop cld jecxz in fcomip in not cld xchg push scas icebp outsl (bad) mov out cmc daa push cld cld xlat sar sti outsl sti mov xchg (bad) aaa cli inc mov rcl dec pushl repnz pop inc push xlat clc out aad cmpsb cld popf ljmp decl aad (bad) (bad) mov mov jg jg (bad) (bad) sahf out stc int xchg jg aaa cld div jg out (bad) outsl stc fstpt aas cli fwait (bad) and repnz icebp fwait std (bad) dec pop repnz incl cli pop mov cld cmpl fdivrp idiv stc cmpsl std lahf mov in push jle jecxz (bad) aas repz scas incb clc cmc aad icebp iret jmp int3 pop cmc imul cld mov xchg (bad) jne sti xlat incb pop sti cmp mov mov sub inc imul (bad) (bad) lahf (bad) out jmp cli lahf (bad) fdivr in in decb inc out clc (bad) mov cmpsl jg pop clc pop cld cmpsl scas (bad) mov mov jg stc out cli call jne call aaa pushl das mov mov pop std cmc call out jg hlt iret sti mov cmpb std aad call pushl fcmovnu repz pushl inc jg cli (bad) cld mov aas std pop decl lret jmp cmp popf aas pushl popf cld ss mov notl dec outsl repz jge mov sti gs mov xchg xchg mov hlt xlat cld xchg jle jg in std aas xchg (bad) ljmp stos jg (bad) out and cld pop (bad) idiv sti (bad) test pop dec cli decl sub (bad) and imul xchg (bad) in jg (bad) fnstsw dec (bad) ss mov (bad) lods jmp mov aaa mov das sti fisttp pop imul cld xchg shll jg jg stc repz idiv cmp mov xchg pop idivb aas cmc pop jg pop (bad) test loopne nop mov idiv imul movsl cli ret cmpsb jg sar jne idiv insl sarl jecxz clc xlat decl in lahf decb xchg pop jmp (bad) cmp repnz call incl jg jmp pop std in das lahf pop decl fstp jnp stc cmp stos push fcomip (bad) pop std popa jg pop inc sahf jmp fisubr (bad) outsl jle mov (bad) ljmp out lahf xchg repnz cld push aas imulb (bad) dec jg iret cld arpl aas lock lcall call cld lahf cli aas cld or pop cmc jmp xchg push ljmp call (bad) arpl cmpl in jg mov fcomip (bad) movsb cld dec jp in outsl cld pop jle pop cld sbb stos jmp cmc mov std pop (bad) jg das std pop (bad) loopne in lahf sti clc clc xchg cmp pop jl rcl mov negl std or cli dec ljmp jae cwtl dec jg aas divl les lahf add (bad) test dec out decb imul mov std xchg jg outsl jmp mov inc std aad jmp pop std rcrl pushl dec ds (bad) jle out cld mov out cld das call jg in (bad) jle fildll fistl (bad) cli aas clc jbe out clc arpl out lcall (bad) xor imul mov dec jmp hlt push cld jmp cmc ja test fisubr aas not scas (bad) fstps xchg out incl sub das aas clc icebp in idiv lods dec mov decb hlt out pop jle,pn dec insl std pop jg (bad) cmp rcrl cmp aas in mov xchg leave aas (bad) jg cmp xchg cld dec aas negb jbe jmp xchg sahf jge cmc das lcall (bad) (bad) cld sarl (bad) xchg pop std fstpt jg mov pop iret pushl sub rcrl mov in push scas sti pop (bad) stc xchg icebp fistpll stc sbb paddd fnstenv mov push outsl (bad) (bad) jg,pn pop repz fwait jg pop idivl negl jg inc jg scas icebp (bad) cmp mov dec aas mov xchg inc rol sti push lahf sti lahf decb inc (bad) mov call jg cmc into (bad) xchg pop mov jle cmp gs decl dec std ja (bad) loop sub xchg ljmp aas jne pop cmpsl (bad) cli pop lock (bad) xchg jg cld xchg xor jg loop cld paddd iret mov (bad) std das sti scas dec jg rcr out paddw jle fucomip cmpsl mov jnp aad incl jmp jecxz pop dec ds jmp out clc jmp jmp mov idiv les call jle repnz xlat clc pop (bad) scas push das (bad) push ljmp jle scas jle idiv (bad) (bad) fcos in cli jge cmpsb aas jecxz cld add cli daa jle xor into mov push (bad) fcmovnu loop sti idiv (bad) (bad) psubb (bad) cmpb xchg fcomip fsubrp hlt fldcw in jg xlat clc fwait lcall dec (bad) sarl ljmp into (bad) (bad) stc decl jmp jg pop jg lahf negb inc inc (bad) stc lret jg lahf (bad) cmp int3 stc lahf hlt aas (bad) push call (bad) mov fcomip sbb mov aam clc mov jecxz cld movsl jg pop lcall cld aad fcomip (bad) popa (bad) out inc jle cli test (bad) pop jecxz std cmp incl sti xlat std mov xlat inc jg aas mov sub loopne rol jecxz imulb lcall sbb pushl fistp or out std out cld out outsl jg xchg pop cmc icebp pop cld pop inc rcrl popl jg leave push mov jle loop sti xchg call inc fs daa mov jge push sti std (bad) lahf (bad) sbb fisttpll stc scas jg out mov lret test fs aas (bad) aam data16 aas pop decl jle aas loope jmp (bad) mov jecxz mov (bad) das cld int cmc mov repnz lcall rcll lahf (bad) outsb jecxz hlt pop std fwait jle stos lahf clc (bad) mov insl mov mov imull daa ljmp (bad) mov repnz (bad) aaa scas mov aad hlt lahf inc (bad) sti sub repnz std sbb inc xchg push (bad) mov inc jle pop stc (bad) cmp lahf cld in cld dec hlt (bad) scas repz (bad) xor loop xlat mov cld outsb jg out icebp out sub jg aas cli out cwtl push sti lahf incb jg aas inc dec pop lock jg call mov pop cld pop js stos insb out jge jmp mov lds xchg cld jmp (bad) (bad) rcrl paddd jmp lret jg mov push incl cli daa iret (bad) cli fbld mov (bad) clc xchg jg sbb pop out sahf cld add fwait ljmp out cmp outsl call inc mov repnz dec fcomip fwait std lret sub jge jmp xor out (bad) xchg (bad) cld in pop cld mov jnp pushl imul aas dec (bad) aam divb mov (bad) cli out (bad) cmpsl fcmovu stc xchg (bad) sub (bad) enter sbb cmc fildll loop cli cmpl pop out mov xor mov (bad) std mov jg fucomip jmp std outsl cld in (bad) idiv xchg fucomip pmaxub pop decl mov repnz popf std sbb (bad) pop mov (bad) std cs neg icebp push (bad) outsl cmp (bad) push call shl (bad) iret mov imull fucomip (bad) ds ret decl lret mov jg (bad) (bad) cld loop cld daa inc jg jg das jmp iret sahf std scas jg pop std lods aas icebp scas std in pop xchg (bad) aas jmp jg repnz aas mov (bad) in stos jg ja (bad) mov mov inc inc (bad) pop mov lahf clc mov pushl iret inc aas out (bad) (bad) jnp jg ja stc xchg jg idiv (bad) jmp das (bad) pop jle (bad) mov inc (bad) cld lahf hlt fwait std (bad) das pushl into inc mov xlat decb repz aas icebp scas and in out stc mov fcomip scas std xchg mov aaa in ljmp testl paddb nop mov lahf jle outsl fnstsw jmp mov sti stc (bad) movsbl adc paddd (bad) mov xchg cld sar stc psubb inc jmp pop pop call into scas cld jnp jns aas cld push jmp xchg aas cmc jg jg,pn sti idiv out idivl scas icebp xchg pop mov std scas fistpll fsubrs xchg cltd jne hlt idiv std jle aas out mov mov pop test mov in scas jne testb std mov cld lahf cli or xchg jg push (bad) repz addr16 jmp dec pop (bad) outsl (bad) out aas out fsincos in outsl (bad) in pushf hlt ljmp loop (bad) jae cmpsl jg das (bad) xlat jle xlat mov push (bad) mov div pop repz (bad) outsl lcall lahf (bad) xlat cld into ja repz incl dec jmp repz mov aam repnz in (bad) icebp mov outsl jg daa jg pop pushl fistp repz cmp mov sarb out cld (bad) cmpsl jg aas stc idiv clc out cmc mov aas jg jmp call addr16 sar jge jmp popf ja std aas cld pop lcall negl clc ja or (bad) cmp daa dec pop cld sub out cld lods (bad) pop (bad) cld dec fdivrp mov mov std cli jmp icebp mov mov sti mov mov (bad) sti scas repz sarl and fnstsw mov fisubr sub lods inc mov repnz aas jmp out repz inc push (bad) sti pop cmp dec (bad) mov repnz std (bad) (bad) std (bad) clc daa pushf (bad) scas mov cld pop jge pop (bad) mov std ljmp jle fistpll rcr std cli pop aas sti sub xlat clc inc ljmp sti adc (bad) repnz (bad) cmp call jg std cmpsl jg pop jmp pop (bad) jmp ss xor daa push mov fwait jg (bad) (bad) movd jg aaa scas dec pop call jae xchg in ljmp cmp cmc jg loope imul (bad) cli adc cmc fistpl out cld sar mov out ja cmp pop notb sti mov fnstcw out jg mov (bad) fst aas sti inc cmp sar int out jg (bad) decb ret aas jl iret call aas cld xor cli aaa sti xor (bad) aas pop cld rorl std mov pushf (bad) out pop (bad) fsubrs sbbl jg pop push daa jg lahf clc cmp mov inc icebp (bad) fwait jg fisttp dec call push loopne decl call pop pushl call mov (bad) jle (bad) clc stos (bad) icebp jg das and mull sbb das stc or mov (bad) fstpt fdivrp das push mov xlat (bad) fyl2xp1 fcomip fnstcw cli pop (bad) ljmp cli mov iret jg std (bad) out in std pop mov sahf (bad) (bad) mov clc dec push (bad) jg lds cld xlat (bad) pop (bad) cld mov int3 decl daa cmpsl jg (bad) jmp cltd mov (bad) std jg mov dec fcomip outsl jmp jge mov aas lock aas inc decb imulb (bad) adc insl (bad) rcrl repnz pop fdivrl clc jl std daa mov jnp ret (bad) cld outsl cwtl std fiaddl out repnz mov aaa (bad) mov cmc lahf cmc iret pop cld jno incb pop jle fxch mov pop dec dec (bad) pushl jge cmpl clc add sbb jno fildll jmp (bad) mov (bad) out cld mov daa cld push scas mov hlt imull lret jecxz (bad) sar mov mov out jnp lahf (bad) idivl (bad) out and hlt push cld dec jg fnop cld ja push incb mov call cld lahf repz dec es jns lret mov mov push jmp jg (bad) jle jle iret fdivr inc jg mov iret jg aas jmp mov fcomip xchg lea jg inc cld fstpt jg push aaa std lret pushl clc scas dec jecxz js out cld inc mov jg xchg (bad) jecxz sti cltd pop dec stc fucomip jg (bad) stc test std cli push pushl cld push mov ljmp jg mov jmp cmpsl jg outsl (bad) or loope lahf pop cmp mov pop clc ret jg aas in pop jmp mov pop jg jg xlat stc fistpll fxch fstp mov std mov out lock sub xchg aas icebp psubw ljmp jg clc fistpll sub jg das (bad) scas jg fcomip divb sti cmpsb jg jg (bad) in jp pop inc aas decb jns jle aad insl insl in std fnstcw (bad) call jg cmc aas clc mov scas clc stos ljmp lret push jg iret stc jae (bad) cmp mov fdivrp ds push aas jne (bad) (bad) (bad) (bad) mov loop stc arpl cld das jge stc fbstp xchg (bad) stc das (bad) out (bad) outsl jns lds hlt sarl mov (bad) jmp dec (bad) sti ret fstp loope mov jg psubq jmp jmp mov sub fstpl mov mov fcomps hlt in hlt stc push or ljmp jle xlat jg aas cmc sar enter cld jp cld jno lock in mov test int3 mov (bad) cltd aas ljmp jmp std mov out incl paddusw aas (bad) negb (bad) jmp hlt imul mov inc push das dec (bad) aas pushl ja std in pop inc mov mov cld jecxz sti outsl cmc inc push cld sti pop incb jb pop cld cmp jg movsl (bad) aas stc mov aad in xlat clc inc jbe in pop clc in clc adc (bad) std pop mov jnp cli aas mov dec (bad) (bad) pop jmp jmp pop repz (bad) xchg daa dec fcomip xchg (bad) cmpsl call out mov sub mov jle pop icebp lret push stc fstpt aas loopne (bad) (bad) xchg jg jg aaa jge mov std sbb aas (bad) mov int pop std dec pop pop (bad) sahf mov mov pop cmc out iret (bad) jecxz in cld test in outsb (bad) pop repnz dec (bad) mov in cli test fimull and out mov iret hlt (bad) and inc jecxz lock (bad) insl jg jg xchg aas repnz sub fstpt sti mov lock lahf (bad) addr16 jg (bad) insl call fbstp pop sar (bad) (bad) std outsl (bad) jne int3 lahf (bad) lahf mov std add add jg idiv fistl xor mov cmpsl lcall inc call pop xor aas sti cld dec std add incb ja std loopne stc sar int sti das cmp icebp leave das sti sti ljmp push mov jle aaa cli cltd dec jle mov mov jg jmp jg outsl callw (bad) std mov es jmp cmc ja mov jmp cli (bad) repz jg (bad) daa out lods push (bad) aas stc adc mov incb jg cmpl (bad) out in aas ljmp leave (bad) stc test lahf hlt (bad) push (bad) (bad) dec jg push mov cld cmp sti out imul cmp push aam (bad) cld cmpsl aas jle fnstsw cmc (bad) std sbb test mov aas loop sti stos jg fcomip mov add sahf dec in idiv xchg aas jno hlt (bad) hlt pop stc idiv (bad) mov loopne (bad) mov cmc imul mov in std sbb stc sar scas jmp out incl repz inc (bad) call sarl dec aas out mov lahf cli mov mov call jg jp in sarl jl cld inc push jg push cmovle mov idiv lahf fidivr mov jle jg jg addr16 (bad) std out std (bad) decl cmp cmc lahf repnz cld cmp cld (bad) jg ja cli jg lret loop mov jg lahf cmc jg pop stc push jg scas cli daa (bad) dec jg cmc out dec jg idivl (bad) cld out ja test hlt pop decl fwait pushl repz out cmp fucomip into (bad) clc cmp jne aas icebp outsl std jge (bad) repz (bad) dec stos fcomip (bad) (bad) xor aas pop std mov (bad) std test rcrl (bad) xor pop cmc out ljmp in mov mov jmp fbld jnp xor outsl cld leave jmp aas xor xchg lret daa lahf jle xchg jg (bad) stc lret jle jg neg pop cmc inc jg call sti pop dec in iret clc jmp (bad) mov (bad) (bad) movsl cmpsl call out sti sbb repz (bad) (bad) stc out jo sub shrl repz (bad) mov idiv jmp (bad) cli pop incl pop jg out repz fwait inc das clc pop dec xchg dec push jns fwait std (bad) jg in lcall fwait std or pop into call das (bad) fidivr in pop cli iret xlat jg push fnstcw cld iret and sub (bad) cld pop hlt sbb push addr16 dec stc mov divb icebp jno out xchg std orl loop hlt aas fidivr dec icebp (bad) in jnp das jl inc cld push call jg pop (bad) cli dec outsl sti fwait dec jg pop hlt lahf jmp jg jg paddb xchg out outsl xchg (bad) sbb mov inc pop mov fstpt fnop aas (bad) aam jg ja cld fdivp aas (bad) (bad) sti mov test sti test xchg aam imull iret pushf cld cs jmp daa in mov int (bad) daa (bad) jmp jmp xchg (bad) das cld cs (bad) std outsl pop (bad) fcomps dec (bad) pop jg outsl (bad) stos decl push cmpl lahf jle cmp push mov (bad) xchg loope stc das (bad) gs inc (bad) xchg jle pop stc arpl hlt aas fdivr jae (bad) iret cld pop jg repnz mov adc repnz cli fwait dec xchg call pop icebp (bad) add aas cld mov fnstsw pop jg repz rcrl jnp mov fnstcw (bad) jg scas fdivr (bad) mov in shld int pop repnz in repnz repnz cli iret push jg lahf bnd out std test jg aas loopne iret lcall fstps out (bad) xchg mov sub mov (bad) stc xlat (bad) daa in std mov fucomi lock lcall loope jg imul das std inc dec (bad) cld dec jge sub iret (bad) (bad) in jmp in and push (bad) clc pop lods (bad) mov and dec mov and cmp cld pop jg xchg jg das stc pop jle cmp inc pushl jg imul cmc dec jg,pn mov jmp aas lcall cmpsb cld fidivr sub clc fcomip out cld jae clc fucomip fnop aas (bad) scas aas loopne stc out cld sub fistpll scas xrelease stc cmpsl (bad) mov xchg out icebp ja mov icebp daa (bad) addr16 call std in mov mov (bad) out mull out stc push jle cmc pop sti jnp (bad) stc jg fstpt pop (bad) (bad) icebp or sbb lahf jns xchg ljmp sbb xchg jg (bad) cli pop gs cld inc jg outsl repnz (bad) dec out idivl cli xchg bnd mov sub imulb sti clc addr16 mov loop sbbl (bad) test iret stc aad into popf pop cmp xchg decl jmp negl sti lds jg das sti mov jle fucomip pop std mov outsl stos decl inc jg pop cld leave scas icebp popf pop stc mov (bad) mov das jle aas divl mov pop (bad) sar out cld pop mov negl pop lcall pop incl pop mov idiv adc (bad) loope fs mov stos jle lahf (bad) jg push jg mov clc jecxz stc add dec push cli mov in jg scas cld add out std rcrb cmpsl cld in repz fistpll out mov xlat mov pop stc jo pop clc movaps (bad) leave outsl mulb out cmpsl mov std inc jg out repnz mov jg stc (bad) call rcr (bad) cmp loopne negb jle iret jle xlat dec pop clc (bad) xchg (bad) pop ljmp repnz cld dec pop cld (bad) outsl push aas in call (bad) in jg xlat stc xchg jg (bad) cli (bad) cmpsl lret aas repnz cli in (bad) sbb jg clc xlat std arpl (bad) cld dec (bad) mov cld dec lahf not movd das std sti pushl iret sub sar loopne std add sub jg mov cmc out std fwait (bad) fnstsw jg jg incb pop in adc popf (bad) jne (bad) out lcall (bad) (bad) mov ja cmc (bad) cld mov dec (bad) cmp std hlt (bad) mov jmp (bad) addr16 pop jmp in (bad) jmp div clc imul dec jecxz clc aas mov dec mov pop stc jnp jg out inc jmp pop std cmp clc out aam (bad) mov inc (bad) mov test cld xchg mov jg aas jmp pop std dec jg outsl idivb call jecxz (bad) (bad) rcrl xchg mov dec cli call sarl in outsl stc test stc outsl call decl jmp outsl sti idiv mov mov std ljmp cmc aaa (bad) aad in ja lcall (bad) iret jle mov out sti add lret cli pop (bad) test iret stc cld idiv std jg daa (bad) (bad) mov mov ja (bad) outsl pushl pop mov stos (bad) call inc fist stc mov or mov jmp adc cmp mov call sahf (bad) and pop cli imul in jg sarl aas (bad) xlat cld dec call lahf repnz sti (bad) (bad) (bad) jmp or icebp idiv mov jmp std cmpsl aas stc in (bad) fnstsw cli (bad) out jmp jg pop fwait std mov cmc pop hlt xchg aad ljmp dec xchg test cli (bad) push jg fcomip sbb xchg jg lahf hlt fildll sti das cld mov notl fidivr fst jg pop push out cld xchg jmp scas repz aas clc jge mov sti (bad) cld add cld fwait pop (bad) mov fstpt repnz ret pop jg lods mov jg jg (bad) std jae cli cli fstpl scas cld out (bad) (bad) negb (bad) out loop cli or (bad) cld outsl stc xchg int3 jle jg lahf (bad) sbb pop call cld mov fisttp in iret std push jle aas cmp and mov out std (bad) lahf xor popf (bad) out lret lahf cli and (bad) addr16 (bad) mov incl out jle outsl sti leave aas repz out cmp les ja insl jg jg daa cld fistpl repz mov mov (bad) hlt pop (bad) out jns out sti lret jle jg pop std int cmc fs sti mov dec clc iret jle jg pop sti icebp jg lock cld jae dec les xchg pushl stc (bad) int cli xchg jg ds mov mov jg fucomip (bad) push pop aas (bad) popf jg (bad) push xchg add movd lahf fdivrp aas lret stos (bad) call jle ja outsl mov fcomip pop std sub out jmp mov jg sbb in cld das cld mov aas icebp daa incl shrl (bad) cld adc aas mul dec (bad) fsubrl cli (bad) mov xlat mov sarb sti mov into sub insl out cld fstpt (bad) mov jg xchg das cli lahf (bad) addr16 lahf std (bad) (bad) popf jg pop cmp int jg cmp cli mov push jg outsl clc fisttpl outsl sti add fwait jg btc cmp mov ljmp hlt pop std mov mov jg mov lock out cld mov sbb pop sti (bad) dec jg icebp aas stc xlat cld cmp repnz sti adc mov xlat decl mov out cld sbb ja insl pop dec lahf lock mov aas clc cmp aas mov jmp fist jg leave loop stc aas lcall in idivl stos push mov mov jmp test neg std addr16 cld cmpsl std and (bad) aaa (bad) xor nop jg aas clc movd jg stc imul mov (bad) mov ljmp mov mov (bad) fdivrs jns lahf std jns mov outsl (bad) (bad) mov arpl hlt out cld or lret (bad) scas (bad) push movd dec (bad) lahf incb aaa stc pop mov jle push inc pop imull pop push repnz jnp out lcall dec jg pop lock jmp lahf cli jne sub hlt fstpt cli hlt mov cld jp sti fcomip sti cld xchg pushl leave outsl icebp (bad) cld lret (bad) std inc jg aas out ja int in std int3 pop icebp popf jg outsl into dec jg iret clc cmp pushf cld cmp fcomip hlt das cld jmp pop mov (bad) aas incb inc lahf negb jecxz jae pop std loope cld dec mov (bad) mov imul aaa sti jnp decl fisubr mov rcrl aaa (bad) (bad) pop idivb sti xor pop sbb stos cld out in lcall jmp inc mov jmp aas loopne (bad) (bad) mov call (bad) jne (bad) mov (bad) loope pushl outsl stc xor cli jg test xlat jbe rcr decb in dec fstpt (bad) mov clc lods jle pop push (bad) dec inc std hlt pop jg out clc (bad) adc aas loope call xchg jg (bad) (bad) stos idivb iret ljmp inc dec jle fucomip dec incl das mov fmul mov (bad) sahf (bad) das dec into pushl mov (bad) jg clc out fistp (bad) out pop cli aas inc (bad) jl sub dec out (bad) std scas xchg mov mov inc in (bad) call mov rcr clc cli mov std imul fincstp ljmp jg jg xlat jg cmc cmpsl cld cli jg (bad) pop (bad) cld pop mov (bad) stc lods pop icebp sti lcall jg (bad) clc jmp mov xchg mov shrb pop std mov negb jmp in jbe mov mov xchg call push in leave pmaxsw mov clc mov iret clc mov (bad) pop neg mov out iret clc mov pushf dec (bad) ljmp cli lahf (bad) pop (bad) idivl push (bad) jecxz in mov stos sub cmc sub push (bad) jg cmp sti decb test repnz stos sarl xlat (bad) hlt xchg cld add aas xchg push sti decb cli in call push mov loopne (bad) scas sti test jle push cld lret (bad) jg stos cli cmc (bad) ja icebp scas lcall stos jg std cmpsl mov jg std mov aas cld push aas cmc pop std lds jg pop pop pop std clc aas testb cmpsl mov cmp insl mov jnp scas neg std cmc ljmp lods aas std (bad) mov jmp mov (bad) mov aaa fcmovu loope (bad) ss jg cld lret lahf jmp repz mov rol pop rep push (bad) das pop jg cld dec (bad) jmp cmc inc (bad) ds ljmp pop incb lcall xchg aas in rorl out cld pop (bad) cmp (bad) (bad) sti (bad) daa ljmp scas sahf insb inc mov decb jg sti decl stc std iret inc jg (bad) jmp pop negb psubd dec push jg lahf hlt das std xchg call iret cld mov (bad) jg mov mov addr16 imul jg outsl mov mov mov jbe notb fbstp xlat std sti mov (bad) call (bad) fnstcw lahf pushl incl data16 ficompl jmp (bad) jnp fnop pop clc mov cmpsl mov es sarb mov repnz cld ja xchg mov pop cli loop call scas (bad) mov lock pop (bad) mov (bad) (bad) xchg pop mov push incb ljmp inc jle scas cli sub sahf aas out jg idiv stos mov jle in (bad) jns lahf cld xor sti out leave jg imul (bad) outsl cld push mov repz shr cld cli ror jg fbstp sti (bad) jle fistp (bad) in cmp scas jg loopne sti paddd mov scas (bad) xor lock idiv imul lret push ja fnstcw jg mov jg aas arpl loope repz (bad) xchg mov push inc mov (bad) sahf decl mov (bad) mov fucomip dec incl stc scas pop std outsl call scas jg das clc roll imulb (bad) cld sti (bad) insl jg pop stc pop aaa jg out icebp pop mov (bad) jmp cmpl sti push (bad) jmp clc pop lahf (bad) out aad lock push (bad) clc lahf std insl leave jle stc xchg push jle lahf lcall (bad) scas jmp cld paddd cld arpl push enter adc jmp jg sar loope (bad) lahf mov lock pop into dec mov dec (bad) cs loop jp daa cld pop fcmovnbe inc stc mov xchg fbstp mov (bad) mov dec ljmp aam negb (bad) std dec jle jg psubb cli mov xchg (bad) sub sarl std pop mov icebp jg scas imul mov jecxz idivb idiv ljmp call pop notb aas sar push (bad) stc jg mov icebp outsl notb out scas cld lahf jmp mov mov mov sub (bad) push jg lahf repz daa (bad) cli push mov ja dec (bad) ljmp (bad) mov jg aas ss xor out mov inc idiv pushf aas jecxz jle fbld pop (bad) xor out std xchg aas std repnz mov std xor rorb cli aas sti xchg cld xchg jbe mov mov stos fcomip psubb (bad) mov push mov dec mov pop stc imul pop out outsl cld das cld pop mov mov lahf jle lods jg outsl cli fbld addr16 popf mov mov clc inc adc jg outsl sti add incl movsl jg mov xor movsb mov xlat cmp iret and aas icebp mov jp sarl int3 outsl xor fild inc lahf cmp aas cmc pop adc iret (bad) mov cld out jg pushl into jle fisttp stos jg (bad) jg fidivr sti pusha cmc idiv jle aad call aas icebp psubb ja idivl fcomip fwait jmp mov push mov repz aas clc addr16 fidivr dec call (bad) outsl pop cld ds (bad) (bad) lret hlt mov mov fstpt dec (bad) popf xchg pop cli iret cld inc jg mov lock out pop push (bad) cld (bad) cli jmp std sti call jmp out imul negb (bad) mov cld mov out clc ja jg mov mov imul jg push fcomip mov lock dec das (bad) iret sahf cld addr16 fcomip pop fdivrp mov int cld sarl ja jne mov mov stc pop jmp clc xchg cld outsb pop xchg push stc aas icebp (bad) sar push jg dec cld ret jmp sarb imul mov outsl jle mov mov in (bad) in in pop cli sub sarl (bad) cld jp loop stc scas out cltd cld add (bad) es daa inc fstpl (bad) fninit jmp stc (bad) sbb pop jns jnp pop ljmp jg aad cli addr16 std jg pop cmc inc mov xchg aas divl mov aas cli (bad) paddd jg (bad) mov lods xchg dec jmp sti dec cli das out cld sarl (bad) popa jg jg (bad) (bad) pop jg fnop out sub scas (bad) negb incb std das stc jmp jmp dec inc loop clc aad repz pop std ficom (bad) loope std mov xlat mov pop cld iret int movsb (bad) iret (bad) push (bad) push mov fstpt xchg mov (bad) xchg jg push decl das call mov mov out cmc aaa (bad) fstpt out pushl sti lcall ret ljmp cmc aas sti addr16 out mov pop jg jg jnp cli mov imul (bad) hlt xlat cli pop (bad) jmp jg hlt das cld inc aas (bad) sbb mov (bad) jg stc mov mov jg out cmc pop push aas cmc xlat cld data16 dec decb mov clc fistp lahf out fdivrp (bad) (bad) (bad) movsb (bad) idiv insl (bad) mov jle cmpsl (bad) mov lods aas stc (bad) rorb out clc sub mov ljmp out (bad) mov imul (bad) call cmc fwait std push outsl jle jg scas stc cmc mov in dec cld ja out icebp stc outsl (bad) std jg std mov scas (bad) stc pop in pop stc out call dec outsl ja mov mov lahf std cmp mov aas sub std call (bad) std lahf incl cld iret jmp out loop out cld mov pop cld inc nop dec jmp (bad) clc (bad) pop nop (bad) sti scas decb jg scas stc jnp inc mov mov mov jmp scas (bad) nop jg paddd mov jnp int hlt ja (bad) jmp jmp fdivr sti jle loop cli popf lcall jmp aas jecxz sub mov cld sbb fistp jmp mov jne cli jnp jg jmp jmp dec out (bad) push push stc pop cli outsl dec xchg jg hlt (bad) cli mov pop mov jmp iret mov (bad) (bad) repz lahf cld pop jle (bad) std fistpll or xchg std dec and std iret mov (bad) fistpll (bad) lahf cli out jle aaa sti push (bad) jmp or (bad) das jns mov pop sti (bad) (bad) mov fucomip idiv js in lahf sti sar std cmp push stos (bad) fisubr stc hlt ja decb dec dec daa dec scas cli push (bad) cld aas in scas pushl stc jmp lret mov mov jg mov movsl jg lods pop ljmp sarl aas (bad) cmp mov cwtl jmp mov negb loop incl ja cltd xlat aas icebp idivl stc lret (bad) call cld mov inc mov aas cmc iret stc sti pushl pop aas jbe dec es std dec jmp jg (bad) lcall fistpll xchg dec jg out idivl out hlt lret incb dec jmp mov stc pop cld dec (bad) cmc (bad) aad (bad) (bad) popf std stc jg aas sti sbb das (bad) mov (bad) sarb icebp pop sti push mov (bad) jg iret jl mov outsl (bad) iret out (bad) mov (bad) decb mov decl (bad) decb jne sub jg mov scas aas jecxz clc (bad) fist or cli scas fdivr (bad) (bad) fcomp out stc jge (bad) cld repz aas out clc inc jg pop (bad) loopne cli pop (bad) clc fucomip mov sarl arpl enter sub mov (bad) outsl ds ljmp cli aas cld addr16 mov (bad) (bad) fdivrs jg neg stc pop call pop out lret push iret and stc mov (bad) (bad) iret sti rorl scas (bad) mov std mov aad mov das clc idiv cmpsb (bad) jmp std xor xor cld jae jle das std or inc stc mov pop (bad) mov dec (bad) mov mov ljmp or in pushl lahf repz std shll loope mov jg daa jg pop icebp scas cld sub testl clc insl jmp decb jg jg mov cld (bad) pop jg ja jle call (bad) mov jp out lcall das clc lods (bad) mov xchg push mov (bad) out call pop lock negl dec jg aad icebp xor cld idiv mov jg fbstp stc lds mov idiv mov (bad) cld (bad) lcall cld cs jg pop incl scas (bad) mov dec jle mov outsl cld iret stos jg (bad) in call sti sti das mov mov test out stc out (bad) cld jnp das std in stc aad (bad) mov ret jae (bad) jg mov aaa aas cmc cmp lret jg (bad) sar fcomp jmp push std icebp jg mov mov aas out clc and das cmp hlt jmp fwait jg cmpsl mov (bad) out outsl sti dec (bad) clc cld in icebp outsl icebp sub das pop cld inc mov into push pop idivb mov jle push aas clc mov out loop jge jmp out stc fwait cmpsl jg jecxz cld mov out enter cltd repnz (bad) (bad) out jg rcrl mov jg mov mov push lcall jg aad imull out icebp sti push xchg push lock std cs cld cmc (bad) dec (bad) cmp idiv out push in cli cmpsl ljmp (bad) xlat pop (bad) in mov repnz fild std sti push mov das (bad) mov mov loopne mov cli psubq jg mov mov cwtl (bad) mov out cmc out cld pop lahf std sarl (bad) pushl loopne lods mov pop notl (bad) loop not cmp sarl stc (bad) mov xlat (bad) in repz cli ja inc jmp ja (bad) (bad) mov cli cmpsl cld xlat mov in pop stc cld (bad) clc mov ja dec lcall ja stos out scas clc ror mov lock dec out incb mov icebp xchg jg pop jb xchg pop mov sti std mov lock stos cmpsb mov jg lahf sti push cld jp xor pop (bad) jg mov jg jecxz pushl incl xlat aas in out sti pop incb (bad) fcomip loope clc call (bad) xlat jg out outsl idivl cmp cld stos lahf mov daa (bad) jge call lahf jg cld sarl mov ljmp (bad) ljmp out cld sahf aas mov cmp decb jg (bad) hlt pop std dec jmp daa (bad) call inc mov (bad) ljmp stc pop sti imul (bad) cmp mov (bad) pop sti sub mov lret iret jg loopne std jp jmp and mov cmpsb aas out stos clc imul in cltd (bad) out jg (bad) (bad) jecxz out sti daa call (bad) (bad) lea loop std pop (bad) mov cmp mov pop dec pop mov stc (bad) mov in aas cli cltd out std stos aas jb outsl cld ja (bad) in outsl (bad) adc jg (bad) cli or jg repnz mov jmp cmp scas sti test pop cli out (bad) hlt scas cli and lahf clc jecxz lock pop pop jg cmp icebp out clc lock scas (bad) push loop (bad) iret std out lock jge ja out jle mov or lcall cmc sti (bad) sbb jmp loopne clc repz dec decl mov pop cld out (bad) cli in cmc push cmpsl std mov lahf repnz lahf cld addr16 jnp push mov (bad) fldcw lcall movsb mov (bad) fsubrl stos pop imulb mov fnstsw ja or mov pop std fwait jg jnp adc in jg (bad) std repz in jg outsl repz (bad) (bad) or jg repnz clc jae (bad) jle pop js (bad) sub clc aaa cld pop decb push mov pop repz lahf (bad) mov pop jg pop (bad) (bad) mov mov sarl cmc outsl cld out pop lret mov icebp push dec push fstps cld mov sub mov xchg mov stc pop (bad) xchg (bad) std mov dec decl jg cld das iret jg (bad) ljmp pop cli pop inc ljmp xlat lahf cld xchg call mov mov push std and rcrl icebp iret lahf int3 (bad) outsb rcr jg mov jnp cmp ret xchg (bad) fstpt outsl pushl out das sti mov fnstsw mov inc mov incb imul std xlat cmp cld pop jp inc cld out jg mov mov aas call stos aas arpl ja push (bad) mov push out cli pop std aaa sti jg out mul scas (bad) arpl mov icebp outsl std push (bad) pushf sub cli (bad) das jmp jbe neg hlt (bad) sti (bad) xlat jg mov jg add movsl jecxz sti pop clc lret ds daa (bad) in ljmp ljmp sbb (bad) out clc (bad) fist sarl jecxz das cs fdivrl in cli aaa decb pushf std fidivrl cld sar iret jg pop sti bsr sti arpl push int cmc daa std stos pop mov sti push std es dec jg paddd jg loope cld xchg std add cmp std das out les (bad) pop (bad) cmpsb dec fcomip dec (bad) jns cli in (bad) icebp jecxz loopne scas repz incb jg mov (bad) jg mov xlat fcomip jmp adc clc mov loope cli scas cld dec xlat inc xchg hlt out cmc iret std popa adc das jle mov stc push decl cmpsl mov (bad) sti aaa jg,pn aas loopne scas cli pop (bad) in loope cli inc (bad) rcrl outsl decl xchg jg scas jmp mov aad out std mov iret fdivrp lret (bad) mov mov sar mov (bad) loopne jg icebp lds (bad) fisubl jmp clc (bad) scas mov mov xchg fistpll call (bad) (bad) xlat cld mov test (bad) sar fnstcw scas cld int mov mov cwtl pop jb mov (bad) es out sti mov xchg iret dec (bad) jmp stc idiv xchg (bad) jmp or dec incb in ljmp neg inc jg (bad) incb clc das mov inc into pop pop cld xor std cmp scas jg mov fst (bad) insl std sarl mov sbb out scas outsb fdivrp cmp jle fcomip mov cmpsl cmc mov xchg (bad) (bad) in mov sti aas std call in in clc iret jg jg mov pop sti psubd jg outsl jg fucomip xlat cli lret (bad) xchg cmpsl pop jnp movq aaa (bad) mov in sti cmp in mov pop (bad) sti call outsl std idiv jge (bad) idiv cmpl out cld jnp out hlt out std pop (bad) call sar leave out into fcomip das sbb pop sti jnp imul aas (bad) mov mov mov out mov lahf push std sar hlt hlt xlat cld dec jg fnstcw out ja jge iret (bad) jg jg pop (bad) cli jmp ret xlat cli (bad) out repz clc mov pushl popf (bad) in ja sub fistpll iret push (bad) jg fildll outsl (bad) call jmp mov ljmp fdivr clc ja inc jg stc cli xchg jge clc inc iret dec (bad) call lea jle (bad) (bad) int3 pop cmc sbb cmp repnz std ret jg std lods cli iret decb fucomip mov jle fcomip xlat fisubrl aas repz (bad) out outsl std xchg mov in pop sti scas std imul cli sti push std repnz jmp outsl repnz (bad) xor ficomp dec cld jae lret daa mov mov repnz std stos jmp (bad) decb rcr incb cmpl iret mov std push jg out std div mov dec lcall jbe jg idiv cmp mov negb (bad) xor (bad) fstps clc psubb jle aas jmp lahf repz mov lock decl rcr das sti mov aad repnz mov out clc out std mov hlt out and icebp mov ret xchg int3 pop repnz sbb outsl mov addr16 cld push mov mov loope lock (bad) cld aas mov cld call icebp jg aaa cld mov decl jns imul (bad) sti mov out fild sarl loope leave (bad) out lcall leave pop ljmp aas das jle aas loop std add out cmc (bad) clc scas cmp repz incl jmp xchg aas loop leave pop mov aaa cmp into (bad) jg cli rcll (bad) and mov idivl xchg std xchg aas mov sti movq jl std xor std inc cmp xchg xchg outsl decl sub cmc jecxz ljmp sti fistl in idivb out (bad) ja sti out xchg and sti outsl clc pop (bad) mov cli xchg std daa inc scas stc daa cld sarl lcall das test mov cmp mov mov stc ja cli daa or dec ja jecxz jmp in (bad) lahf jns clc int sti cmpsl cld stc jg roll sti out inc (bad) jle lret out (bad) cmp repnz stc jmp in out lcall mov out cli mov jmp lock cld (bad) push (bad) mov idiv cmp sti (bad) xchg jmp jge pop decl xchg dec mov int3 mov pop repnz cld fsubr (bad) outsl stc pop call pop mov jg into pop xchg (bad) mov repz out cld jbe (bad) in aas (bad) (bad) fstpt (bad) ljmp jg test bnd in jecxz negb hlt out shr repz iret std xor sar repnz lds mov hlt cmpsl (bad) (bad) (bad) jmp ja inc inc out jmp cmpl stc inc jle pop cld xlat pop jle inc jmp jg mov mov outsl icebp addr16 ret jae pminsw repz cli mov ja cwtl cld xlat mov ja cli repz dec jmp jmp pop cmc jg jbe outsl std lret xchg std bnd cmp out std stos (bad) mov cld popa jg mov xlat aas loop cld mov hlt loope cli dec (bad) cli jmp pop cli jge push ljmp stc repnz std mov push cmc pop xchg mov jg std and clc jg (bad) std mov mov pop push fcmovnu outsl (bad) cmp jmp (bad) mov mov repz (bad) out jmp icebp push decb neg aas (bad) (bad) push lret arpl jg lret (bad) in mov loopne cli repz ja repnz inc jg fnstsw repz jae mov ljmp out jge cmp jg jg (bad) mov notb cld push mov (bad) std (bad) std leave addr16 scas cld ficomp cld pop lahf jl pushl (bad) repnz (bad) sbb (bad) outsl clc (bad) (bad) xchg mov mov in das movsl clc stc idiv adc sar lock std arpl jecxz cli aas popf pop std cmp jg idiv pop stos pop dec jmp leave mov fyl2xp1 mov lahf lcall ljmp lock jecxz cld gs cmpsl (bad) aaa aas dec (bad) sti dec jge (bad) cld idivl push mov (bad) jg mov icebp mov jnp cli idivl std popf jle aas icebp sti fistpll addr16 scas jg out cmp repz pop sti adc jmp sub mul std pop mov ljmp cld out jg outsl jle nop cld (bad) pop (bad) lret lds cmp es mov (bad) idivb into ja aas xor mov adc lods fnop mov (bad) sarl aas incb push jmp lahf (bad) push std mov aaa call jg pop inc cli dec lcall aas stc xchg (bad) sarb paddb scas (bad) idivl stc dec std leave jg (bad) cmpsl sahf dec dec lcall (bad) aad (bad) repz pop std in (bad) out jg mov pop lock pop pop (bad) jnp aad rcr cli mov movsb mov pop lock (bad) fidivr cmpl adc (bad) push cli dec sahf incb mov out aas (bad) imul aas imul (bad) out lock in (bad) (bad) (bad) xlat std mov out (bad) (bad) pop sub fistpll xlat (bad) in dec jg scas jno jg mov (bad) in jmp push lahf cld (bad) hlt call dec imul cmpl cs xchg (bad) (bad) std out fidivrl aas decb shrb scas jle popf aas in es (bad) movsl (bad) out popf xchg jg stc pop (bad) ja jg pop (bad) fisttpll jmp mov jg fdivrp lods ljmp cmp sarl lock mov jg cmp pop dec (bad) fcompl xchg stc (bad) std das ds jmp cld mov cltd in out stc clc pop sahf dec jg lahf repz not mov cld out mov incl jp inc jg dec scas stc push sbb pop add stc inc fstpt in (bad) xchg (bad) clc mov cmc cld repz (bad) repnz mov repnz (bad) sti pop sti stos push jmp mov xchg repnz sarb clc mov jmp std mov cmc (bad) cmp mov mov paddw outsl cmc daa jmp jmp std aad (bad) jg loop decb inc iret inc mov out enter cld icebp mov cld pop mov mov (bad) xchg std jp cld lret pop (bad) iret jle xchg std imul lret jns xlat fcomip (bad) cld ljmp jge xchg cltd mov jg fcomip outsl lcall jmp mov mov dec std pop jg loope sti xchg decb hlt pop sub mov xchg mov lahf inc aas repz (bad) jnp int3 out (bad) cmp lret aas cld mov test clc fcmovnb (bad) fcomps cmpsl (bad) pop adc cld scas jg jg pop incb fnstsw out cld in (bad) lods pop push and jg outsl dec jecxz dec (bad) fstpt jg fstpt push cmp (bad) das clc lods (bad) cli mov jg (bad) fstp cli aas pushl push pop cld dec (bad) mov mov cmpsl (bad) sarl in (bad) inc (bad) (bad) mov aas repnz fnstsw push xlat xchg aas ds dec (bad) call test cld (bad) xchg jl pop pushl ljmp mov pop fnstcw repnz ljmp int sti sti jle js fnstsw mov imul (bad) in aas call ficomp mov daa (bad) fnstcw jg jg adc fistpll stc cmpsl cld push jg aas repz jg enter loopne sahf (bad) sbb stc scas push (bad) jmp out data16 in (bad) lcall jmp clc and clc cmpsl call fcomip int jg (bad) daa (bad) sti jg (bad) icebp jg repnz (bad) ja xchg pop push fcomip inc xchg cmp out outsl (bad) call ljmp jmp lcall std mov jge daa call pop hlt imul xlat jg lahf hlt and xor in mov lds jge lret ret mov lahf std and xchg (bad) push jg (bad) das std cmpsb stos jg xlat call aas sti mov loope cld ljmp jmp mov imull jns aas out jle dec (bad) push incb sti iret fdivrp scas (bad) ljmp fdivrl repnz stc jne jmp jle mov jmp jmp repz std cmp jnp stc mov lret iret mov (bad) stc mov (bad) outsl jbe pop cli cmp cwtl cmc (bad) idivb mov out (bad) ljmp (bad) cli (bad) stos aas jmp cmpsb cmc xchg fnstsw outsl push xchg jg clc xlat ds jne (bad) pop out cli aad int3 xchg mov call (bad) or in icebp in (bad) mov std fnstcw idiv jae xchg loop jmp mov repz jg xchg std adc aas sti xchg jmp cmc pushl out fistp aad cmc pop mov mov jmp cld (bad) lret (bad) aad movsb cld addr16 (bad) jmp std arpl mov das jnp fwait pushl pop (bad) (bad) sti fcomip xchg out loopne incl jg aas std lahf (bad) xlat jle xlat aas icebp hlt out stc pop jg mov lret push mov out cld xor pop std pop ljmp out out (bad) sti (bad) cmc fcomip das decl (bad) out mov aas lcall aas mov xchg mov ret repnz inc (bad) mov cmp xchg lahf mov in jle mov std clc add mov jmp clc push jg aas stc (bad) outsb (bad) test xchg cld mull shrl aaa sar jns inc repnz fildll push cmc sti cld xchg lret (bad) mov (bad) std lahf cmpsl aas clc movswl aad xlat push aas push mov call mov call std jg idiv leave out (bad) repnz cld popf (bad) sti jg pop incl (bad) (bad) mov mov aas fdivr ficomp (bad) std pop jmp cld mov (bad) imul jnp stos dec ds pmaxub cmpl sar push (bad) in jg aaa call xchg mov popf aas (bad) cld repz dec inc cmc xchg cld xor jg (bad) pop mov ljmp (bad) icebp dec incb out (bad) repz ja std mull xchg (bad) stc jge xor mov (bad) aam hlt paddd fistpll (bad) cmp inc lahf jmp jmp pop div cmp jne iret pop aas incl mov fwait (bad) cli xchg mov out aaa fstpl ljmp mov idivl out cli pop mov cmp sti call notl ja mov jmp aas (bad) aas cs fcompl pushl (bad) imul jg leave leave mov repz hlt (bad) (bad) sub cmc das scas (bad) jmp lods cmp out cld loopne scas sub std std pop jmp out scas inc pop neg sbb mov dec mov idivb std add push adc dec (bad) cltd jmp outsl pop std fnstcw sti ja enter pop aad repz mov jg cmpl pop xlat mov icebp cmpl sub mov jg (bad) clc fxch jmp cld mov cmpl out sti jg pop ljmp (bad) repz dec (bad) jg cs mov incl (bad) (bad) cld icebp idiv ljmp (bad) das cmpsb jg mov out fisttpl int3 loop mov movsl dec mov leave scas repz (bad) mov (bad) hlt jg pop das jg outsl cld mov fisttpl in (bad) cmpsl cld in jg aas cli leave mov data16 (bad) cwtl aas out aaa jmp les xchg repz jg flds and out incb pop std jmp jmp jae jecxz out repz call jg fstps paddd (bad) clc in mov (bad) jecxz divl pop lcall das mov movsb jg (bad) jle (bad) (bad) iret ds call xor fcomip pop jl mov incb (bad) cld daa mov mov xor (bad) outsl sti ja cli outsl (bad) and fcmovnu jge idiv mov xchg jmp pop sub sti jg lcall lods sub cmc xchg negw out jmp jmp aas (bad) idiv cld inc fdivrp mov cmc mov std pop mov (bad) aas (bad) cmpsl out std pop mov icebp jg (bad) imull call fnstenv (bad) (bad) mov mov pop (bad) mov repnz jg aas jg (bad) ja (bad) jg pop jle test lcall sti inc push fs out std (bad) lret fbstp std pop jle (bad) jp pop dec out mov idiv fidivr hlt aas push ja mov sar mov into out idiv (bad) (bad) jmp inc imul inc (bad) iret std sbb jg pop hlt pop cld mov fcomp icebp pop jg std std inc (bad) aas fwait loop mov imul jmp jnp xlat out bnd (bad) std sub jg xchg mov call jg outsl cli pop pushl xor push das cli mul iret aas sti cmc cs jecxz in clc rorl (bad) stc (bad) out call sti cmpl pop jmp jg (bad) (bad) out pop std jmp jecxz repnz (bad) push jmp addr16 (bad) cmp idivl sub (bad) mov loope stc ja pop jmp pop (bad) (bad) mov jmp mov mov cld ret jg (bad) pop std xor outsl (bad) lahf out lock std xchg jmp stc psubq (bad) (bad) out (bad) jg (bad) fwait mov in cld cmpsb mov inc cld jno inc fnop xchg lahf (bad) sub iret aas repnz mov jg (bad) cli and mov dec push (bad) (bad) mov mov jecxz cli lea scas pop hlt pop std push mov inc pop enter sahf jle pop mov pop adc sub daa dec aas (bad) (bad) dec jg hlt out lahf std push std (bad) ja out iret jle push scas stc push (bad) in rorl arpl jmp cmpsl lcall mov (bad) out jg pop ljmp leave pop cli (bad) (bad) mov neg cli out in (bad) std movsl (bad) sti outsl stc mul addr16 call stc gs out cmc pop std xchg (bad) mov lds aas loop decb in std iret mov sar ret jg shr aaa ds fistpll addr16 lret inc vxorpd jmp (bad) (bad) fcomps stc mov push jmp lahf mov cli fcomip mull lret daa pushl jg icebp fildll idiv ret (bad) (bad) js (bad) ja xchg lahf (bad) popa xchg mov lcall (bad) aaa (bad) stc jecxz aas ljmp stc pop (bad) clc aas icebp mov (bad) sti iret std lds xchg (bad) pop jg jg ja std inc jg mov clc (bad) cld push (bad) xchg (bad) scas cmp jg (bad) fstpl mov jg pop stc pop (bad) lods jg (bad) (bad) pop incb int sti lahf inc iret adc out notl arpl out push std popa jg pop (bad) jg incl (bad) cmc jg jg iret arpl in (bad) fdivr in and scas rcr idivl (bad) into lahf cld (bad) cli fistpl clc cvttps2pi incb notb repz testb push outsl or repz aas (bad) (bad) cmp (bad) (bad) scas mov fwait (bad) (bad) (bad) aas (bad) addr16 mov in aas clc (bad) cli cmpsl dec jg xlat clc stos ljmp inc (bad) aad out std repz pushf (bad) out lcall daa call aas jge mov out std pop pushl pop clc stc lahf cld (bad) cld loop out cld lret jg lahf (bad) (bad) (bad) das std cmp mov iret (bad) clc jg outsl into idiv xlat loop cli test dec sti aaa pop (bad) lcall (bad) (bad) (bad) out xchg push fcmovnbe mov jmp scas cmc imul jl pushl xchg movsb mov daa jg scas std jecxz in (bad) loop std loop stc repz jle stc mov int mov int jge lahf mov lahf decb in lods aas in paddusw iret jle jmp loopne std pop jg (bad) (bad) insl ljmp lahf jl (bad) psubw cld fwait (bad) mov pop sbb aas (bad) xchg (bad) (bad) movsb (bad) stc lahf clc shrl sub hlt push (bad) stc pop push jg aas ljmp std (bad) (bad) (bad) lahf ss sbb adc repz addr16 (bad) fistpll outsl repz out stc pushl in mov xchg in clc sarl mov mov jg push out lcall outsl (bad) ja ret lahf nop jmp jg dec std and out fsubrl iret outsl stc dec decb jg ja fnstcw cltd dec pop icebp outsl pushl push cmp out fmull jno (bad) out std pop jle lret mov (bad) out push mov adc hlt mov decl mov aaa and (bad) fld jg repnz stc popf jle mov mov movd dec cmp pmaxub stc idivl cmpsl mov call cltd std lea fildll mov loop out cmc ljmp adc jg das dec jle repnz push jg mov jg jg incb movq cmpsl cld (bad) sarb aas cli iret cld or stc mov mov cmp (bad) lret call jg dec jge xchg lcall hlt push cmpsl inc mov jg mov cli mov pop hlt idiv jp icebp mov shr repnz std popa jg jg lahf incl (bad) fsts jg scas cld fstpt aas jnp xor cld ljmp cmc decb mov jg scas clc push sub push std mov pop jmp jmp loopne cld xor in outsl std sti cld out shrl cmpsl xchg (bad) (bad) idiv sbb in daa decl dec jg lahf decb jg mov (bad) pop cld stc jg ret aas stc dec std ljmp (bad) repz aas cld lahf lcall idivb pop cld mov out outsl sti cmc fdivrp int3 xchg aas stc paddusw scas (bad) stos fcomip pop cli in std xlat ljmp (bad) (bad) cli aas cmc pop (bad) mov pushl fcmovnu clc jmp jmp scas and jmp aas jns pop dec dec in psubd mull pushl jg mov stos pop hlt mov (bad) cwtl lahf cli push repnz jg iret cld push mov in lods (bad) clc pop mov ret incb outsl stos (bad) xlat jp dec decb jg popf jg fsubrp hlt imul (bad) in das cld das jle pop out mov (bad) call mov (bad) (bad) aas jp mov (bad) insl jg jg idiv stc (bad) call (bad) mov std xchg sar iret xchg das push jg jg cld std pop repnz daa jle jg xlat jmp pop sti xchg mov fnop cmpl clc fnop popf (bad) fcompl inc (bad) clc aas repnz mov shrl lds std sbb stc setno (bad) mov jmp ljmp std sarl sub outsl jl sub cld fcomip das stc sub mul jecxz icebp outsl js pop dec imul jmp dec call (bad) jmp call jmp ds clc outsl (bad) mov cld push push aas hlt mov dec jnp jg (bad) jg out clc mov std into pop std add mov std mov std lahf cmc cmpsl sar xchg xchg mov pop cli movd in fnop sbb incb in mov jg scas scas jmp out jle idivb das into push jg out mov (bad) out lock stc lret jle (bad) jmp fistp jg (bad) in and push std (bad) jg outsl mov inc lahf inc icebp negl fldcw iret aas ss fistpll repz clc fidivr icebp dec jle jmp (bad) lock pop sub (bad) iret cld xchg mov jle cmpsl mov ret mov jle jmp aas inc stc fwait (bad) (bad) mov mov std imull lret hlt sar mov pop jge out cli jne jg xchg idiv lret in scas std cld aaa jl (bad) std cmp icebp pop std jae mull xlat pop jmp (bad) and jg cld repz out out idiv imulb clc repz movsl clc repz std jle jg (bad) fldt (bad) out outsl xchg call (bad) out lahf cli fwait push fbld lahf sti into ror cld cmp vaddsubps pop push cld stc icebp mov out aas cli mov sub (bad) sti pop sar icebp mov fstpl cmp pop repz xchg (bad) idiv cmp out cmpsb (bad) dec fnop ja mov out lret jmp lahf cli cmp ja hlt pop decb stc insl ds fwait jg outsl icebp decb (bad) (bad) xlat (bad) ljmp (bad) loop std mov mov xchg pushl jle out enter daa jg in incb popf jle mov jg pop cmc (bad) cmpsl clc repz sti xlat (bad) fnstsw loopne out dec icebp lret fcomip lret (bad) cmpsb fcomip idiv xlat jle mov xchg pop jg fcomip aas jmp (bad) mov aad pop jb (bad) cld test cld repz aas lahf std dec (bad) ljmp (bad) (bad) xchg inc (bad) mov sti (bad) (bad) fdivrp std (bad) push out mov lahf pushf std cmp jge test in xlat cwtl incl cld fldenv icebp (bad) out fistpl jmp cli pop incb outsl inc jg out cld xchg cld ret mov sti lahf jmp jecxz cld pop cld pop aas div (bad) sub sar ja cld fucomi std das std pop incl mov jmp pop mov mov add rep mov out xchg mov pop mov (bad) and push (bad) icebp fcomip aas jmp fbld lahf incb lods (bad) std push cld fistpll call mov xchg mov cmc aas sti repz (bad) in out idivl aas (bad) xchg addr16 jmp cld dec cmp jmp jbe scas push jg cmc push mov (bad) mov sub in xlat mov jle mov repz (bad) mov loopne clc cmpsl call fistpll icebp dec pop cld (bad) call jg icebp outsl mov lock or mov in (bad) ja jg push adc jg loope push mov and jg inc fdivr jg mov or jecxz lock lahf clc out stc in mov aas out (bad) int3 ljmp aas call out stc imul sbb ret jmp inc inc mov daa jg pop jmp mov cmpsl cld sbb mov iret js xlat cld fistp paddb out jle in jecxz out mov data16 (bad) mov mov ljmp (bad) jmp cmpsb mov in inc ja jg (bad) scas std aaa mov jg aas in xlat sti clc ja arpl out jnp loop repz mov icebp aaa cli and jecxz repnz (bad) cld fnstsw lret fucomip daa (bad) cli jg push cld pop mov icebp ret (bad) in ja xchg jg aas std push cld out loope inc test jecxz stc ja mov mov jg out std xlat (bad) stc negb cmp (bad) jecxz pusha cld outsl daa mov int ret jg jg (bad) (bad) loop inc scas std pop pushl aas std imul stc out clc mov repnz sbb push out std addr16 div (bad) cld mov hlt (bad) scas jg mov in cld cmp jno clc outsl pushl out cld mov addr16 mov in aas clc idiv arpl in aas std mov idivl aas (bad) dec lcall std jnp cmc das std cmp fcomip sub std lret shrl jg xchg jg (bad) jmp dec jecxz jg fistpll mov (bad) out rep dec mov jg insb icebp xchg xchg pop cld inc incl jg pop (bad) jg cmp xchg cmp adc inc into into (bad) sahf push scas stc xor std jnp loopne std jnp fcmovnu loope mov (bad) xchg pop push ljmp jg bnd dec jg lret mov cmp (bad) (bad) mov out cli cmp into cmp add scas cld mov jg sbb mov loop pop repnz mov fucomip mov inc push fnstsw fnstcw jl call clc aas mull pop jp fstp (bad) jmp xlat cld sbb (bad) (bad) scas inc addr16 (bad) (bad) and aaa call mov movq jp out aad decl adc mov xorl mov sti lahf mov rcr stos jg lahf call stc aas (bad) push mov idiv mov jg (bad) fistl decb inc mul pop cli idiv mov negb mov push stc pop repz std mov cld out incb mov es out jmp (bad) jns xlat mov (bad) sub ja (bad) sub stc ljmp mov jmp xchg mov addr16 mov (bad) fnstsw xchg aas loope (bad) (bad) out fldcw sarl mov mov cld ja adc fistp pop jle (bad) ja (bad) lret idivl fidivr das stc fwait ja not call decb pop lcall fsub pop dec cld daa jg mov ja popf sar repz pop cli (bad) std lret das stc loop sahf cld sbb lahf repz fnstcw pop cmc pop jle lock cld dec (bad) in stos stc mov in repz cmp pop cmc (bad) out fcomip xchg jmp mov outsl (bad) mov mov cli and les sti jmp int repz idivl (bad) aas cmp add stc mov ljmp out int sti pop lcall xchg dec aad clc pop incl ret (bad) out negl das (bad) test jecxz jmp call cmc scas mov iret (bad) xor mov call fmuls (bad) lahf clc pop cld sahf mov iret (bad) xchg daa in lahf cld mov into lret scas (bad) mov mov std cmp out (bad) push stc adc cmc adc pop imull jmp cld mov clc das std outsl push (bad) mov mov out (bad) fld mov jg inc aas jnp mov jecxz aas std pop (bad) mov in (bad) cli push mov clc (bad) cmpsl jg incl jmp repnz xchg push out stc xchg (bad) pop stc fstpt mov (bad) mov xchg xchg lcall aas clc mov jle idiv mov fstpt mov (bad) std aas (bad) push call stos aas neg std jae ljmp lcall xchg outsl clc mov inc dec mov in idiv arpl lds mov (bad) fdivrs out sti and jge jg loop clc (bad) cli pop aas cli mov incb (bad) cld cld mov arpl cwtl sti push push outsl cmc out mov pop incl (bad) out repnz jg vmaxss push incb fidivrl call cmc out ljmp aas icebp mov mov stc pop push (bad) sbb fsubr icebp loopne sti gs pop cmc lahf std cli dec outsl repnz (bad) out aas decb ljmp outsl mov iret push push dec cld in mov cltd jl idiv or mov cmp jg lock fidivr outsl aas and in cld jae idivb pop std xchg jg jg dec cli xor jmp ljmp fidivr (bad) arpl dec aas divl das clc aaa (bad) repz daa cmp dec das jg aas loope sti fwait jle stc jg iret cld inc leave scas icebp idiv mov push std pop (bad) gs out (bad) xchg lcall addr16 jmp ljmp jnp push sarb jg outsl divl cld fwait mov fdivrp sti pushl call repnz mov (bad) pop cld xchg mov subl std jge in xor cmc out fdivr test cld add fcomp repnz dec lahf mul idiv sbb (bad) jg ja stc pop (bad) in sti outsl pop xlat aas cmc mov push das into jmp fucomip aaa (bad) mov cli pop aas leave (bad) clc (bad) stc pop mov (bad) mov (bad) in aaa sti movsl jg outsl jbe xlat cmp fistpll pop jg aaa dec outsl cmc aas inc mov mov aas imul cld hlt outsl mov jecxz fimull dec out inc outsl std dec (bad) call hlt jg sbb sarl push xlat std or out (bad) (bad) cld push sbb shrl pop fsub cmc xlat jnp (bad) xchg jg sti iret inc mov pop pop jl pop std fstpt mov (bad) jg das dec decl pop std inc das mov (bad) cld stos mov (bad) aad clc dec sti in aas (bad) cmc idiv mov adc mov fxam out cld imul dec outsl imulb out decl push (bad) lods mov mov adc lret out (bad) or sbb sbb lcall loope xlat fdivr fwait call jmp mov (bad) mov std pop jg mov lock icebp pop sti ret jg daa push cld aaa sub icebp jg icebp lret (bad) stc xlat mov xchg aas repnz jg (bad) aad stc adc aad xchg cli outsl jge outsl std jae pusha jbe fwait (bad) pop xchg jg sarl mov cli out (bad) popf ljmp sti gs pop xchg (bad) (bad) std jg stc fbstp pop pop cld sbb mov clc pop cld jp cld outsb mov (bad) pop ja sbb jnp in pop lock pop out repz repnz cli out dec decl fnstsw (bad) pop jg jmp jmp std cmp (bad) in aaa cmp xchg (bad) mov lods (bad) mov divl jg dec cld iret (bad) cmpsb jg clc sbb aam imull cmc pop testb (bad) inc mov std mov out cmpsl cmc ret (bad) jmp clc mov out xlat jle aaa cld lds in (bad) (bad) cmpsl jg pop (bad) icebp push jmp xchg push shr push pop cld lcall sarl stc pop (bad) in mov sti std imul fstpl call mov xchg std outsb jg das std scas (bad) cld fcomip mov dec jle mov mov neg mov jle cmp stc xlat decl pop std jle xlat xchg out clc std incb (bad) jle jg out jg scas jne idivl sar in imul inc pop aas jnp aaa fildll (bad) rcrb (bad) jg xlat cld or mov in iret (bad) in (bad) aas jmp fwait push data16 imul pushf (bad) iret jle aaa std cmc mov cmc mov and cmc scas cld or (bad) cld xchg (bad) rol jg lahf idiv idiv popf jg aas std notl std leave mov aas repz cld daa mov jge lahf incb dec das jg aas stos clc inc jg (bad) sahf sahf cld jle (bad) sbb pop jecxz in lahf sti addr16 ljmp decb outsl jle aas ljmp dec decl (bad) shl lahf cmc scas (bad) aam (bad) lahf cld outsl incl lods mov mov cld aaa jmp outsl cli sbb mull jg das stc aaa (bad) repz clc fnstsw mov xchg lahf mov stc scas stc (bad) mov int stos (bad) jmp clc xchg (bad) cltd pop push fcomip ja pop mov inc (bad) fidivr icebp into mov cmpsb mov jmp (bad) decb std mov fildll jmp in jmp scas cmc aaa std mov pushf cld imul (bad) clc mov (bad) push std mov pop cld jnp mov jmp xchg lahf mov iret fcomip mull call xchg into out stc xchg ljmp imul jg mov pop std jnp leave jle test leave (bad) and inc call fwait lahf cld jmp inc (bad) xchg mov lds hlt pop pop in call cmp mov loopne jp fnstsw (bad) cli inc ja iret jg (bad) jle addr16 xchg jg push stos jle cmp decl les icebp ja xchg incl insl (bad) ljmp out clc jecxz cld and insl pop std out mov mov mov jl std mov jg aaa cli pop dec mov mov jle incb xchg lcall pop jbe jnp sar mul mov jnp popf aaa (bad) cld (bad) lods pushl (bad) scas outsl incl mov int3 mov out fdivrp mov pop std push cld sarl jl dec inc das mov icebp out std and outsl cmc idivb mov fldt (bad) shr aas stc popf (bad) fcmovnu loope sti (bad) xchg fisttp lret (bad) mov (bad) cmp lahf std mov jmp jg cld int in leave in pop cld add std mov (bad) out outsl mov dec pop cli mov pop icebp sbb sti call mov pop (bad) aas icebp pop (bad) cmp call iret jg mov jle xlat std lcall jl cmp sub out (bad) pop std (bad) push (bad) ficompl cld or ror (bad) cli lret lahf cld mov jmp xchg mov std imul fmuls outsl jg pop stc jg insl mov loop in mov add std ja lock decl inc push mov pop jg outsl push mov aas std scas cld xor scas incl aas inc jg lahf clc (bad) sarl scas cmc (bad) xor out incl in sti addr16 das decb mov mov pop mov jmp cli xlat lcall jg idiv shr jnp repnz lods mov enter and sbb (bad) stc aas std mov pop repnz (bad) cmp ret mov pop pushl (bad) fnstcw stc jnp sti xlat jmp stc dec jle std dec mov fldcw (bad) push (bad) mov out jg jmp iret and out call pop icebp out jmp (bad) pop inc div outsl call std int out pop (bad) (bad) (bad) pop jg mov mov fcomip xchg aas push jg out int (bad) out (bad) in dec fistpll xchg jg fcomip mov mov jnp mov mov lahf clc xchg (bad) fsubrs (bad) sub cli lret out push cld es sti pop jmp idiv scas das lcall (bad) sahf jg (bad) (bad) addr16 aam loope cli daa sub jmp push (bad) mov ret jg das std mov fnstcw in fbld inc (bad) iret (bad) hlt mov mov int jg repnz (bad) decb cld ret (bad) mov lcall out in pushl jae (bad) (bad) cli lahf stc iret (bad) fstp loop std mov cmpsb mov call jg rcr lcall lds scas scas call mov jg jmp out imul jg xlat nop std sti pop jg jg clc jg cld xchg add (bad) jmp aas mov loop call (bad) fdivrp jg mov sahf jg out dec pushf cld lds xlat std mov fldenv (bad) cmpsb jmp jmp movsl stc sti daa mov mov (bad) mov inc jle (bad) inc aas cld aas (bad) jne fucomi cmc pop cld insl jmp pop cli jg jg mov fsubrs inc scas xchg cld xchg xlat jg push mov cmc leave mov mov sti (bad) mov (bad) cli cmc jle fbstp sti ja sti xor aad outsl pushl (bad) cli dec (bad) jns pop jg out (bad) (bad) stc pop mov jmp mov (bad) aas push jmp aas stc fbld cld jg in cld das pop lods incb (bad) sahf (bad) cmp in scas stc pop jge (bad) lahf incl iret ljmp jp icebp out repnz lret (bad) push insb cmp (bad) hlt icebp (bad) dec mov aas clc lahf std and jecxz in idiv aad (bad) (bad) std push mov loope pop mov jmp cmp repnz hlt mov shrl jnp std (bad) mov arpl jg sti inc lcall lds jg (bad) (bad) mov sbb (bad) xchg mov std aas lock sti loop (bad) mov call cld jmp (bad) ljmp fdivrp jns jle std jg lahf clc mov out idiv xlat jle fcomip lahf (bad) fwait jle aas idivl or std ficomp sub decl cli fs stc lret jecxz jmp cld int (bad) fucomi negl (bad) jg pop sti addr16 lahf cld clc aas (bad) daa mov cmc sarl mov jg cmc out in dec mov jg mov iret inc (bad) idiv mov out cld icebp (bad) stc negl out mov cli jecxz xchg pop jg mov cld push (bad) fcompl cld scas std into mov ret pop cmc idiv xchg jg mov cmpl repnz idivb jmp out aas ljmp cld pop mov gs fistpl (bad) ficomp (bad) fistpll mov (bad) frstpm(287 pop testb (bad) clc dec (bad) fucomp jmp cli stos decl cld out shrl incl xchg mov (bad) loope mov mov jle pop icebp push incl outsl pushl lahf (bad) cmc jg out pushl sbb ljmp jle aas loop call mov repnz push std pop (bad) ljmp cltd mov pop repnz (bad) pop icebp mov imul jg psubb icebp pop divb cld (bad) jle cmp pop jg fisttp xlat scas icebp lock cld fwait (bad) mov sub cli (bad) in iret cli aas jle aas (bad) mov mov jmp fnsave sarl lock jmp fdivrp repnz std cmpsl cmpsl call mov iret mov in (bad) clc out jp sbb xlat (bad) cmp lcall hlt popf pop idivb (bad) adc (bad) nop jnp enter dec (bad) fstpt jle aas hlt iret cli gs push jmp mov stc mov fwait jmp dec (bad) fnsave jecxz std cmp (bad) jg rcr out pushl jg outsl mov mov jle push outsl stc pop (bad) clc lods (bad) fnstsw paddw mov neg stos aas loope pushl int and pop jle pop jl fnop loop std (bad) scas incb (bad) lret mov mov setg sbb (bad) jg aas lock (bad) ja cld cli jg (bad) (bad) pop std push and mov (bad) (bad) ljmp std pop mov (bad) sarl std icebp push outsl lock imul (bad) scas jmp jmp dec (bad) (bad) xlat ror call pop std ret mov lahf jmp (bad) push lahf mov xchg mov jge das jle jnp daa push fisttp fbld mov cmp repz mov cld pop call jmp das cld sarl (bad) std idiv lds notb jmp sti dec jle fucomip lock stc pop jle mov dec in std xchg dec jg ja aaa sarb cld xchg out jle pop std int3 aas clc mov pop (bad) sti fcomip cld idiv xor cld inc mov jmp cmc into lds push pop mov lahf incl out ljmp std sbb out sti sub dec repnz cli jnp leave aaa call outsl not incb jg jecxz sti cmpsl (bad) fstpl idiv cmc daa mov jnp lahf aas std aaa sahf (bad) xlat jg jg lret push pop cli (bad) xchg ljmp mov (bad) sti stc push pop ljmp mov lea lahf repz adc scas pop sbb outsb xchg jg out leave jg mov sti icebp imul imull aas stc insl movd into jg stos cli inc pop mov xor cld lret dec jnp incb lret (bad) xlat fucomip cmc dec in cld jno jecxz std jnp rcrl (bad) (bad) fwait jg aas test mov mov (bad) call mov xchg incl lds stc pop push (bad) out ja fwait cmc idiv in lock cld pop (bad) ljmp mov fist (bad) out (bad) (bad) stc pop cmp cmp mov mulb pop (bad) scas repz rcr in pop stc jae loope mov mov pushl divb scas decb aas push lahf call jg pop mov jg dec (bad) ds sti sub icebp pop out lahf sti mov (bad) out in pop (bad) in pop cmc (bad) out jecxz jne leave jg xchg fcomp cmc (bad) (bad) sub cld xlat (bad) in mov lock outsb (bad) cltd jg pop jle mov aas repz jl (bad) pop std fnstsw scas stc xchg (bad) jnp hlt mov iret sub dec cli ljmp out clc cmp push cld repz fwait jg pop inc cld repnz std mov mov repnz (bad) push mov (bad) cli jno lahf (bad) cwtl pop out mov add std ljmp jg pop stc lods jle outsl pushl loope repz jl xor std inc lcall aas out js cmpsl out fdivr inc mov (bad) cli inc mov jg jecxz std dec decb sti gs sub popf mov push lahf cld pop lret mov cld (bad) (bad) jecxz ljmp clc int (bad) (bad) stos shr std mov pop decb cld daa mov mov lret xlat outsl stc aas std mov xchg popf rcr xor call pop hlt aaa push (bad) pop jg out mov mov pop repz (bad) (bad) sti jg idiv mov std aaa std push aad jge (bad) mov pop jmp std mov stos mov jle push lahf decl mul push std xchg mov std (bad) (bad) push push jg jmp xchg shll pushl and repz push aas clc jnp (bad) xchg (bad) jmp ljmp repz jle mov aas repnz cli push call jmp iret dec aas cmc fdivr jge stc out cmc mov fldcw iret pop mov (bad) in stc pop stc pop (bad) clc pop xor std (bad) fstpt in push pop out push cld fimul lods aas in mov (bad) xchg jg inc jg outsl repz incl fsubrs mov sti jg out lahf cld cmpsl (bad) adc scas cld (bad) push out push mov clc scas (bad) sarb mov sti jg aas out (bad) (bad) cmpsb mov jg aaa mov in decl sti (bad) (bad) jmp mov (bad) scas cld arpl paddw jle jg mov leave lahf stc outsl (bad) (bad) repnz jmp sti inc lcall lahf std loop fs iret sti shl stc cmc (bad) popf out jle aaa std cmpsl mov jg out std cld aas and lods mov jg daa dec (bad) jmp (bad) sbb pop cld dec mov (bad) and push cld mov outsl std dec das (bad) dec repz cltd (bad) aaa jg (bad) cld out daa xchg (bad) (bad) int sarl inc (bad) jp sti pop (bad) xchg dec decl jmp jg (bad) mov mov fstpt pop in std cltd push aas testb mov imulb mov das cld lret jg mov fidivrl das (bad) mov mov movsl mov (bad) out cli xlat (bad) sub jecxz dec (bad) cwtl iret (bad) negl mov stc insl (bad) (bad) xchg dec push stos jg out aas jo cmp jg into (bad) std xor (bad) mov jecxz jp jns mov scas call loop cld test leave pop sar icebp jg aas repnz (bad) (bad) (bad) push fwait (bad) out (bad) xor imul inc aas cld sar fdivrl cmp lahf mov (bad) cltd aas out clc inc jmp lcall xchg loope outsl mulb fnstcw icebp ja sti mov jg dec (bad) mov lahf ss das jg idivl fucomip das cld pop sahf std jae clc paddd aas std aas clc jae cld jmp mov lock cld mov dec ds in jg (bad) aad call jmp aas cld in mov stc jmp mov pop repnz (bad) xor push clc das mov jg jg cmp (bad) jg sar cld out cmpsl jg aas (bad) iret mov mov fistpll out das push jg fucomp (bad) mov push xlat pop std mov icebp stos aaa mov adc cld movsl jg out negl push (bad) fnstcw ja call stos jg das std (bad) mov das sti push aas repz std test rorb pushl push (bad) scas aaa std cltd stos fbld cld popa lahf std lahf int jg (bad) cli inc jg jg pop (bad) std jnp cmc idivl jno dec clc inc jg (bad) scas cld cld pop std adc in (bad) pop cld std aas idivb jmp das cld gs cld pop mov pop sti xchg inc call mov loopne std cmp cld int xchg cld push cmp outsl lcall mov psubb (bad) fcompl mov imul iret (bad) aad ljmp das stc mov stc xlat sti and repz in sti mov mov cld pop (bad) xchg cld out sti aaa push cld cld outsl std arpl jle push rcrl stos (bad) sarb sti push cld fstpt lahf mulb (bad) (bad) aas imul cli inc pop cld sub fcomp icebp pop std jecxz sti xchg mov pop stc idiv rcr aaa cld push jle loop jp paddd dec (bad) xchg jmp lahf cli pop (bad) hlt out int3 jle repnz in ja shrl std icebp mov repz cld jmp idivb mov ljmp mov sbb repz pop (bad) jnp ss ljmp icebp dec decl fstps clc (bad) cmp mov mov scas das (bad) scas dec jmp cmc daa jg jg pop cld jne lret pop decl fadds (bad) mov mov fbld decl daa xor (bad) (bad) fidiv icebp scas jle mov jp rcl mov out cmp push push out std repnz in xchg idiv popf pop dec outsl hlt xor leave fistpll sti paddd pop cli sarl loop ds dec call lret jg jg pop ds (bad) mov or pop nop (bad) jmp negb scas inc out mov mov psubd fdivrp pop mov dec jle pop (bad) jecxz jg int jg repnz cmpsb cld lcall adc shrl cli pop (bad) ficompl cmp std xchg aas icebp ja jns fistp jg lret jecxz cld (bad) pushl add jg (bad) sti addr16 sbb jnp mov lret jg (bad) (bad) fildll call mov dec pop (bad) cmp cli mov jg repnz cld sti (bad) mov notl jle into (bad) std or hlt push (bad) in icebp pop adc jg jg dec sti (bad) fdivrl jecxz clc aas jmp (bad) scas sti frstor outsl cld clc fistpll pop (bad) psubb dec jg mov iret incl mov adc mov stc jg cld gs stc imul scas (bad) fcmovnu icebp ja (bad) jecxz sti movq aad repnz lcall push (bad) daa into push js (bad) call fstpl aas cld or test mov dec repnz out cld xchg (bad) call (bad) std sbb nopl std (bad) sarl out (bad) (bad) fnstsw lret int3 ja repz pop std in jle mov rcl jg idiv jne jmp js std push cld icebp leave stos jg jg dec jle pop (bad) push jg xchg cmp adc jmp jnp jmp pop cmc jnp cli inc stc inc (bad) (bad) in jg (bad) std into mov daa mov pop (bad) sub jle cmp imul (bad) xchg cmpsl mov (bad) jg aad repz cmc iret pop mulb cmpl iret popf fdivrp inc (bad) mov jnp mov out (bad) fcomp sti fisubr cld push (bad) xchg lahf clc outsl pushl cld push jmp pop sti scas stc cltd (bad) stc outsl ljmp incl jg fcomip aaa std addr16 push push aas std push cld lret call out (bad) mov scas lcall std (bad) jg jg push xchg (bad) aas imulb (bad) repz call scas jmp dec (bad) xlat jg lahf (bad) cmc (bad) out mov push jg jg std mov fildll stc (bad) jbe mov repnz call std inc inc lahf mov stos (bad) nop pop (bad) in sti or aas cmc ja push lahf push (bad) hlt mov (bad) clc daa std outsl jg pop cli lahf std mov ficom dec outsl cli jmp mov scas jle mov cmp lret out stc out sub ret xchg fcomip pop cli repz jecxz xchg pop std sar fldz lahf std pop xchg std cld mov sub aas js cld scas sti push jmp mov out aaa (bad) aad mov outsl jp (bad) stc dec std lahf jg test imul jg rcrl jp repnz std aad pop jmp pop jg das and pop (bad) idivb iret jle push mov mov push idiv cwtl mov mov mov mov (bad) sarb (bad) fnstsw jg jae cmc clc ja jge lret leave pop call lahf cmc xchg arpl out cli pop (bad) fwait mov incb jmp in aas loope fnop out pop mov cld rcrl pop cli (bad) rcr loopne mov clc push (bad) cmc jmp (bad) das std xchg cmpsb pop cli sarl lahf stc lock xor (bad) cmpsl lahf (bad) cmp das jg mov bnd sti repz incl hlt mov (bad) ficomp lds lock (bad) jnp lahf std scas (bad) xchg repz pop (bad) lahf jg fnstsw sub jg out push jg scas call cld gs lahf fistpll jecxz jecxz (bad) cld mov std adc outsl repnz incb mov sbb (bad) jg ljmp fldenv mov insl stc mov jmp icebp outsl icebp addr16 frstpm(287 out repnz cld outsl mov movsl jmp dec std fwait incl cli in clc clc lahf sti ret jmp jmp ja imul (bad) out std out dec aas std popf incb cmpsl (bad) adc xchg push outsl stc add mov hlt dec dec inc test clc pop sar imul negb std push leave (bad) std or stc pop stc out (bad) aam (bad) clc outsl std xchg lock jmp lock jmp std adc div cld pop dec push jmp jg outsl stc dec jle (bad) jl imul mov cld push jg jg cld pop mov jle out fdivr imul mov out cld aas jg jnp cli aaa sbb loop (bad) out jle jnp std fdivrp rcr (bad) cld jecxz xlat out (bad) imull outsb std cmpsl aas cmp (bad) (bad) std arpl scas call xchg out (bad) xchg xchg mov in inc jg jg std cmpsl cld mov (bad) (bad) pop cli test std (bad) stc cli lahf stc int jg aas repnz jecxz lcall icebp jg test cmc cld scas ret cli jmp scas clc std jg (bad) (bad) das cwtl jmp lds mov cld psubb pushl push jg out repnz dec xlat jg pop (bad) setle xor int outsl hlt pop (bad) and out stc cmp cmc xchg sub fcos or iret lahf stc paddb jg scas (bad) mov cli pop (bad) cmp dec ljmp clc movq ljmp movsl daa jg outsl inc std mov inc (bad) sbb stc outsl repz std jg,pt stc pop repz mov fisubr pop cld sbb sti fsubrp (bad) dec cld jmp cmpsl push (bad) fsubrs pushl cmpsl jg xchg push lahf sti (bad) cli idiv (bad) das ljmp sti and sar std (bad) cli cmp std (bad) jl das cld jecxz mov ja out jns aas lods ds loop clc cmpsl jle fucomip leave dec mov cmpsb mov decl hlt repnz dec clc ja mov loop cmp mov aas sti idivl mov xor jmp jg pop clc in cmpsl inc jg cld mov cld pop cld add (bad) (bad) decb aas cs loopne cld (bad) push scas das dec daa jg pushl aas in outsl cli lret jmp decl std scas std aaa mov push cld outsl push pop sti popf mov fdivrp adc ja lahf decl leave pop (bad) cli pop clc mov icebp jmp in scas lret arpl pop pop decb dec mov jg iret cld movsl pop jg std lret (bad) cld xchg (bad) out pop cli mov push mov (bad) jmp imull icebp outsl cli scas sub hlt push clc das (bad) fucomip jg ja mov fistp jg (bad) cld mov (bad) cmp pop hlt aaa (bad) mov iret mov push fwait jg (bad) (bad) ljmp cmpsl pop jecxz clc std mov aas repz hlt or out call sahf (bad) out decb mov jmp mov outsl std outsl call mov mov jno lahf mov loope mov mov in cmc decl dec jg dec inc (bad) call xchg std mov pop (bad) cmp cmc dec decl mov adc cwtl out cld adc mov jg stos mov stc scas cmc (bad) decb ja fnstcw out cld dec jg mov jg scas pushl and (bad) out (bad) (bad) jg ja (bad) sub lahf std in cmp sahf (bad) xor in (bad) aam std xchg (bad) lcall cmpl sarl xchg (bad) out push (bad) jne in aas clc popf fcomip dec jns clc (bad) std (bad) (bad) xchg jecxz jg outsl cld mov mov pop aas decb pop nop (bad) cli lahf std fwait stos fistp aas cld hlt scas jbe notl push out std int ret mov pop (bad) lcall pop incb pop mov mov pop ja jg jg dec mov aas jmp fidivr mov xor cld (bad) int repz (bad) fcomip neg std (bad) jle jmp jmp cld rcl jg sti pop mov call (bad) aas icebp imul pop aas clc jae jmp out (bad) push jg xlat mov fldenv jge xlat int in repnz into pushl pop hlt pop (bad) mov (bad) call cld fidivr out icebp in pop aas (bad) jge ljmp xor jg (bad) mulps cli call fbstp aas sti movzbl in dec cld daa mov inc jmp outsl std (bad) (bad) xchg jmp fldcw (bad) fstpt outsl (bad) fwait std add sub in cld arpl daa mov std sub fwait cld mov (bad) std call (bad) ja paddd lahf mov test (bad) aas iret ljmp in cli mov jg out cli sub rcrl sub call cmp out std ja in jge rorl (bad) (bad) jge lds cmp xor outsl js stc xchg (bad) fnstsw lahf stc jecxz jle sti (bad) daa (bad) call fstps aaa cld xchg aas icebp (bad) cld subl (bad) das out jge repnz cmpl fxch cld lahf movsb cmc out cld lahf enter out out pop sahf (bad) and aas out aaa std jnp mov lahf notb ja fstps stc sti lcall hlt jg cld push mov fidivr pop incl mov int3 pop icebp pop (bad) cmc jg das (bad) fbstp loope out imulb (bad) out push notb sbb cld into paddd (bad) mov jle std jmp incb iret aas mov outsl sti das pop std imul call mov (bad) clc (bad) pushl sbb jmp mov or fldcw mov mov std in leave aas divb lea pop sahf cld loopne mov lcall dec mov cmc aas std cli mov jg iret mov sti popf (bad) stc jmp jg and pop jle ja xchg jmp xlat mov aas icebp aas stc xlat jle aas repnz div cmpsl aas icebp mov loope (bad) mov pop xchg std lret jg out fcomip fistl (bad) fistpl lahf stc (bad) jg rcr repnz stos mov call std mov aas lock cmp xlat (bad) idivb jmp std shr sar jmp mov mov out daa jle (bad) clc das clc daa jg loop std mov dec (bad) std cmpsl jg jg shr pop dec out lock std sti xchg clc dec lcall sti aas std ficomp aas std roll clc push mov jg xlat sti in out cmc cmp repz aas cli sbb outsl hlt daa cld stc aas (bad) call sti cmp std mov imulb (bad) cli (bad) movsb pop negl cli loop jmp lock cli dec call xlat jg pop in pop stc mov scas stc sti pushf pop pushl ret mov inc mov daa std es jmp icebp mov movsl sti inc (bad) paddb add pop scas decb sti xchg jg fcomip (bad) cmp adc (bad) cmp jg mov cli lds scas mov cmp stc jg (bad) scas jle iret clc in sub std into ljmp cld aad sti scas clc push (bad) lods jg (bad) (bad) or jmp xchg mov pop jl mov std test fwait decb xchg aas ljmp out (bad) ljmp std jle rcrl scas jg (bad) arpl loop (bad) std lahf (bad) push (bad) mov pop pop cld cmpsb call mov idivb lret jmp mov pop pop (bad) mov pop std aad loop jp daa cld mov pop (bad) stos lahf sbb call mov jmp aas out push cld mov jbe (bad) dec dec out aad sub fdivr call mov (bad) cmp repnz jg out negl push cmpsl std fistpll jg mov jle aas icebp dec adc fstps (bad) js (bad) mov sti std (bad) jg mov add out addr16 pop hlt pop cld out iret pop repnz sti out (bad) jle dec std push jmp pop repz incb dec outsl decl ds sbb bnd jg cld mov xlat xchg aas stc das cld call ljmp negl ja data16 jns (bad) clc das cli push push outsl mov dec lret (bad) hlt lahf clc lahf fidivrl (bad) idiv insl pop (bad) (bad) je pop dec jg idivl cli xor idiv movsl jg aas div pop repnz (bad) fcomps ja incb (bad) lcall clc pop idiv mov jg ja sub out clc lods jg fucomip aaa (bad) fisttpl jg mov ljmp mov lock cld xor mov das in clc sti std cmp int3 out hlt (bad) std xchg (bad) sti (bad) inc jmp in cli out aam repz lds scas cld aaa jg das decl (bad) jp in outsl mov push incl (bad) daa pushl adc jmp out dec jmp jg stos mov pop insb std (bad) mov (bad) jle aas loop stc xchg lahf popf cld cmp lahf repz add (bad) out mov stos mov pop (bad) push (bad) fidivr lock (bad) mov aaa (bad) std jle aas std (bad) cmp clc outsl lcall jle pop dec repz idiv (bad) jle psubq (bad) xchg mov icebp or xchg ljmp cli jnp iret pop hlt out and pop std (bad) idiv fcmovne stc mov mov dec pushl sarl jp pop incl (bad) sti idivb and sti cmpsl (bad) movsb pop div std (bad) (bad) mov (bad) fdivrs clc mov (bad) in in sti aas jg fbstp (bad) sti loope sti std fucomip pop xchg jg loope hlt add jg jae jg outsl repz jg,pt lahf clc mov decb xlat cli cmp aad push std hlt mov cmp lahf icebp imul mov cld sbb aas cmp mov loop (bad) (bad) jg aaa cld outsb mov call jmp (bad) loopne xchg aad jg scas (bad) stos jle pop repnz sar fildll cli repz jle aas repnz mov loopne sti sub mov icebp aas mov ret leave (bad) clc lds inc pop divl sar add ljmp pop mov jmp movswl in icebp pop mov out mov cli lahf clc std jle out incl stc in mov mov (bad) fdivrs jg (bad) (bad) cmp cmp repnz int3 jg dec jmp push (bad) fcompl dec stc (bad) aas hlt iret clc lahf incb (bad) mov pop jmp out das clc int cmc pop std iret (bad) repnz in (bad) popf jg psubb mov jg mov mov (bad) cmp mov idiv sub lahf stc (bad) lods aas in sar aas (bad) mov inc fistpll cmp pop jg das stc (bad) mov std (bad) adc jmp jg jg aaa cld adc (bad) (bad) pop hlt cmpsl cld jne sub aas jg daa stos outsl dec jg (bad) out jg xor inc inc lahf incl aas in psubw (bad) fs mov aas jg push std dec push pop testb mov icebp jnp mov out fistpll std popf call jg neg incl pop jmp lds jg popf lahf sub fdivrs xchg cld jp adc mov lock clc leave loop jp mov cmpl pop cld cmp lahf repnz pushf push (bad) stc cmpsl (bad) mov cld rcrl out idivl stos aas (bad) scas std in lods mov jmp (bad) in pop pushl jg pop repnz (bad) mov jg pop pop (bad) call pop icebp xchg stc push cld mov push out dec jg outsl std fwait (bad) xor imul mov cld sar push (bad) (bad) popf pop sti outsl stc cmp pop cld jg or mov mul std scas jg cli (bad) cld sub mov aad (bad) out cmc stos dec iret es jmp stc pop xchg jg fwait jg (bad) iret jmp mov lahf (bad) fsub out sbb test mov (bad) out jnp cmc outsl decl (bad) call mov mov or std push clc jmp cli aas jbe leave push jg cld pop jbe ja (bad) sub aas sarl aas sti (bad) incl cld pop jle scas (bad) xor jg pop jge idiv sar jmp ds ret mov out clc sub inc pushl mov mov jg mov jmp mov lret (bad) outsl lcall mov cld dec inc loope std dec (bad) sar mov fwait sarl repnz imul cli popf jmp (bad) pop add jmp lret mov (bad) mov pop icebp daa xor (bad) mov jmp pop cli lock cld jp pop repz xchg (bad) in fstp clc clc int lahf (bad) jge (bad) jg (bad) cld jge fistpll fnsave incb inc jg imul mov call std fucomip (bad) std dec out std mov pop std lods mov jle out std dec (bad) jmp (bad) hlt pop stc pop (bad) jmp (bad) aas hlt daa incb jg pop hlt out cli lods push (bad) (bad) ja cli pop mov ljmp (bad) mov divb or inc cld jmp (bad) mov hlt idiv sub fistpll ja hlt aaa cld jmp shr repnz jmp rcrb jg outsl hlt jmp jge clc jne ror outsl cmc push incl ljmp sti jnp and stc pop cli repnz cli pop pushl jnp sub in aas in addr16 ficompl icebp idiv pop jg lahf lahf jg idiv (bad) cmp push scas jg aas jmp pop mov negb mov push mov sti (bad) loop pop aas cld inc push mov call push mov mov repnz jecxz cld out mov repz sub jle mov call (bad) fnstenv stc mov inc jg mov in dec stc jne ret mov inc in das dec jg loop lahf clc icebp (bad) int jnp leave outsl clc cmpsl adc (bad) daa jg lahf cld lahf inc lahf divb fcomip jnp inc jmp jg outsl cli xchg ljmp aaa std movq sti jge bsf add xchg fcomip (bad) stos jle pop sti out stc aaa (bad) call imul cs aas jne lds hlt pop cld addr16 std mov fucomip iret cld clc idiv inc (bad) cmpsl xlat jg lahf stc imul jmp jge (bad) mov pop mov jg mov fbstp jg pop (bad) sub out lahf std andl stc hlt scas decb std lahf (bad) arpl testl push repnz jno hlt sub pushf mov adc (bad) jg aas stc and in pop (bad) das std dec mov ja (bad) mov les xchg jl aas cli das pop std mov lcall in fcomip ja mov mov arpl enter std std jg pop jae or cli out sarl (bad) fidivrl (bad) xor ja stc aas sti out stc fwait (bad) fdivrs in std lret fisubr mov jg outsl jge paddd dec jle lret push dec scas cli mov jg aas jg dec stc mov lock call stc call out cld xlat cld mov lahf stc dec inc mov in mov pop (bad) arpl mov fidivr dec pushl fscale mov idivl jg dec mov aas ljmp (bad) cmp pop pushf (bad) xchg jg cmc aas clc lret (bad) fnstsw (bad) jmp fwait jmp mov pop call ror inc movsb mov stc leave (bad) das (bad) lods (bad) sti aas cmc idivl or in cld movd mov ja jmp cmc repnz mov aas in aaa jnp lahf dec (bad) mov jg pop mov (bad) outsl cltd std idiv in push sti std into pop jg xchg (bad) in mov (bad) cmp lret (bad) scas (bad) pop xchg jg cmc jnp decl inc jmp jg mov inc inc mov jg ja stc (bad) xchg (bad) clc jecxz scas aas (bad) (bad) jecxz mov jmp sti ja xchg pop (bad) mov aas jecxz std movsb dec jg pop das (bad) mov lahf std jnp test lret add lods pop (bad) cmp (bad) (bad) ljmp jg mov dec dec daa jg rcrl xor les lock mov xlat (bad) mov pop imul (bad) lcall mov (bad) into (bad) mov out (bad) sbb sub push mov push cmpl call pop negb push mov sar fwait std mov fnstsw (bad) jecxz cld lods (bad) mov inc mov das dec aas popa stc pop pushl iret (bad) (bad) mov test jg dec dec outsl jnp push pushf (bad) fnstcw aas cli lret jg neg jmp (bad) fnstcw mov icebp xlat decl sti (bad) jl pop jl (bad) cld popa mov call add scas jg aas sti pop (bad) mov daa jg outsl idivl jle cld and cld cmpsb inc (bad) aaa xchg (bad) cli clc pop pop (bad) fcos xlat (bad) cli outsl (bad) push mov xchg (bad) clc inc (bad) cmp mov fwait jg mov pop hlt scas std or jmp mov test daa push (bad) push incl std jmp out cmc (bad) std (bad) jg lret jg paddw lret dec (bad) nop (bad) call aas inc in (bad) in jg stos jmp fistp std lods jg fcomip dec ljmp (bad) stos pop cli jg (bad) mov lahf std jne (bad) fidivr repz divl neg mov mov mov out pop cld ret push push mov popf ljmp aas repz cld imul aas cmc jnp sar fsubp (bad) fsubrl fistp decl hlt fwait das (bad) cli mov jg sub (bad) jg iret jg mov xchg mov das cld mov out lock xchg call outsl cmc lods push pop movsl mov cmp lock stc pop dec dec mov call in mov icebp dec cltd incb ljmp lcall jnp fcmovnu std hlt dec (bad) mov lahf clc das jg jg cmpsl (bad) scas mov jg pop jg out std jbe es fstp fbld (bad) sti dec cld ret (bad) mov (bad) mov cld mov push sbb aad call fmuls sti pop std mov out std jnp imul incl fidivr ja adc cmp fwait mov (bad) clc paddd mov (bad) fisub mov icebp lahf cmc mov (bad) jp das jg pop mov idiv mov mov (bad) jg daa ljmp std add paddd fucomip scas jl xchg dec push mov mov push (bad) pop icebp mov lds cmc mov cld sub scas cli mov mov cld sbb jmp sti inc dec (bad) (bad) lcall hlt lret (bad) fs in negl mov adc lahf cld icebp jbe pop std jbe hlt jg push (bad) hlt fcomip sbb fucomi repz lcall inc das clc add clc mov scas (bad) ljmp rcrl jnp push lahf cmp (bad) jle aas lahf repnz push fcomip out scas (bad) (bad) pop repnz cld dec dec jg aas hlt psubw (bad) idivb lds mov (bad) out jg pop fsubr cld mov jg lahf push lcall jmp in jg dec mov enter cmc push fwait lcall scas popf sar out ljmp jg cwtl pop lahf clc out pop jg pop repnz (bad) in mov std jae leave loope repz std fstps fistpll aas (bad) arpl aad jo (bad) mov negb jg pop cmc jmp (bad) mov (bad) pop (bad) cli or lcall (bad) (bad) jno lds arpl pop std scas sub iret (bad) adc hlt aas repnz repnz fstpt (bad) (bad) mov mov xchg jge dec clc in mov stos call in cld mov (bad) mov int mov std jg (bad) scas (bad) cmc xchg mov fild aas (bad) imul mov pop dec jle lcall or iret fdivr outsl aas stc mov jecxz not lret pop cmc pop pop (bad) jnp rcrb cli pop fs std pop mov dec fstpt decl lds sti pop std mov pushl jns in jg stos jg outsl stc (bad) das jnp fdivrp sbb test std ja in (bad) lahf cld xlat jl ja aaa decb cmp fnop (bad) jg cld dec das imul jg ljmp jle xlat sti mov clc cmpsl jg ljmp jnp imul jecxz hlt pop push outsl xor incb notb cmpsl jle xchg fucomip cmpsl inc mov gs scas (bad) cmp pop stc in fwait (bad) fstpt mov decb (bad) push out inc jle xchg aas adc scas sti (bad) scas jmp jg shrl outsl std jp jmp mov (bad) aad aas repz popf jmp aaa (bad) fidivr out cli scas (bad) jge mov push (bad) in jg ja and stc pop push cld clc (bad) dec jg aas std imul loope repnz icebp cli fistp cli out cmp jnp movsb inc sti mov (bad) xchg push fcomip xlat (bad) fnstcw (bad) fstps mov xchg pop jecxz jle pop std movsl call fcomip mov jg mov cltd fucomip iret cld xchg jle lcall cwtl jnp rcrb sti ja ds outsl divb jl aad cli aas push aas repz push pop (bad) stc pop (bad) mov out decl inc das clc sti call aas cli iret jns in push mov ljmp daa mov std (bad) loope aas cmp jle mov (bad) out jmp xchg (bad) daa jg (bad) dec jmp (bad) aaa mov cmp es jecxz (bad) icebp aaa in clc out cld int3 pop cli dec push jg fwait aas out (bad) push push pop sti das pushl icebp sub mov std xlat jl std cmpsl mov ret into jle fild (bad) push out (bad) scas inc outsl hlt hlt scas movsb cld in xchg jg idiv mov cli ret cs pop ds cmpsl (bad) mov loop fwait cld loop jmp or sti sti (bad) (bad) aas std aaa insb ljmp icebp pop (bad) xor fsubr jg iret (bad) mov inc inc pop dec clc push cld mov pop xchg in decb inc lret aas in (bad) mov out pop cld shr pop lcall (bad) fwait jmp psubb stos dec decl (bad) out jg (bad) iret (bad) cld outsl cmc or mov hlt into aas repz std lret pop jge clc out sti movq (bad) clc fwait (bad) cli dec std xlat jg jg mov mov js xchg test arpl xchg incb cld cli mov aaa clc mov std jns lds rcrl mov sti pop call (bad) cli outsl repz std lcall clc daa jg dec (bad) in jg cmpsl (bad) (bad) pop cmp aas (bad) ja lret inc fnstsw iret (bad) mov jmp jg pop inc jg pop mov not jg std xlat cld mov jl mov sti aas test (bad) aas call (bad) (bad) mov pop std out cli (bad) decb jo aaa std sub (bad) fucomip out mov (bad) std push in pop std out jle mov pushl idiv aad ret popf (bad) outsl pushl cmpsl jg scas sti aad fnstsw cmp cmp lahf sar sbb push xchg std xchg scas decb ret pop jl sti das (bad) and ja imul jmp jg (bad) lock cmc (bad) fxch das (bad) jae fwait mov pop inc call pop clc imul jg pop lock xor jmp push int cltd cld cmp loopne (bad) mov repz xlat inc (bad) out (bad) mov pop jmp pop std (bad) mov in xlat (bad) mov in dec push jmp outsl sti (bad) jmp (bad) mov in (bad) fiaddl rcrl lret mov mov fdivrp (bad) fisttp mov repz dec (bad) cld out cld loope aas mulb add fistpll das jle shrl aas loope out mov pop repz stc in jle imul aaa std in in jg sbb push fstpt call mov (bad) sti pop repnz incb std loop lahf std fstpt (bad) clc idiv push mov paddb sarl call clc inc sub pop jmp (bad) cmpsl ds out (bad) fucomp in (bad) repz sti pop call icebp sub std (bad) call cld dec push (bad) aas icebp imul jmp movd pop (bad) fidivrl out dec std (bad) in jg pop std jnp cld add popf fbld stos pop lock mov fcomip aas std pop jg pushl decb lcall xchg outsl mov das pop dec push jmp rclb cmp jg (bad) (bad) xchg jg (bad) cli outsl jl std cld iret sti dec mov repnz cld pop mov (bad) cli pop jge stc stos pop imul jle std cli mov jg (bad) stc xlat xchg std clc mulb leave outsl cmp dec mov call cmp push ljmp idiv (bad) (bad) scas cmp test inc cli out js xlat cld sbb out (bad) je mov lahf (bad) mov into popf pop sti out clc mov lods fucomip aas clc jne xchg jg lds jg (bad) jmp cld fcos ljmp int stos stc fstpt pop not dec xchg in iret cld mov jecxz repz cld (bad) std mov dec into decl dec stc lahf jg mov jnp fldt pushl jg jg dec sti fistp idivl sti fwait cld inc call mov ja std mov clc fstpt lahf clc outsl jle mov ljmp jmp decl in std out lea das (bad) loopne int3 dec mov dec outsl cmc in decl jg jnp int arpl leave pop jmp cld in out sbb pusha mov pop jnp inc pop dec incb push incl mov pop cld addr16 add out hlt (bad) push inc mov cmp cld (bad) inc push (bad) in idivl aas out lret jg lahf stc add aas stc mov mov and aas cld jbe ljmp outsl std mov jmp addr16 cmpsl jg jg enter aas jmp aas sti aaa (bad) pop incb ljmp paddw (bad) in sti (bad) dec jle jg dec jle jg scas cli int jmp out out cld das jg aas (bad) cmp lock aas cld movups fdivr pop jle std (bad) call (bad) (bad) (bad) sbb call cld xchg ja (bad) dec sti jg jg out call sbb idivl clc pushl lret sti lea (bad) mov mov (bad) scas incb xchg call lahf cli fwait call aas lock mov (bad) cmp cli xchg (bad) mov jmp xchg mov (bad) sahf aas je jnp (bad) (bad) lret fstps icebp jg stc fwait mov popf incl lods ljmp mov std sbb cltd out cmpsb (bad) (bad) hlt xchg aad cld add test ja pop (bad) aas out (bad) xor mov repnz movsl xchg jne pop cld push inc mov aaa clc leave push iret incl sti sti push jg lret (bad) std das clc xchg dec lcall decl cld mov in lahf sti mov pop repnz lahf pop xor fdivrl loop (bad) (bad) push bnd test clc jmp imul outsl incl aas sti imul (bad) jne sarb in push int cmpsl (bad) lahf scas pop lcall sar (bad) in std xchg jmp mov shrl lret mov jmp jg jg dec (bad) movsl aas (bad) mov inc jmp jmp repz cld xor movlhps into call (bad) (bad) mov out lods (bad) in aas inc jmp ja int jecxz cld pop jg lahf repnz cld mov scas dec cli jmp cld mov sarb jmp cld adc cmpsb aas out cli daa jg fucomip repz das sti leave jg mov out (bad) in push mov imul mov fs (bad) ficompl dec jg lahf sti sti std (bad) mov jg repz jg mov fldcw inc cld pop mov (bad) std inc (bad) jmp stos (bad) paddw pop sti arpl std lahf jle lds sbb movsl mov mov cld mov icebp jg xlat decb lahf std loope lret push jg (bad) clc fxch lahf stc paddd (bad) xchg (bad) in push cld fisttp ja jle jg mov mov aas pushl cmc (bad) fcomps dec (bad) jne rcr dec pop sti (bad) movsb (bad) jp icebp pop cmc call xlat pop stc sti decl jmp lock lcall inc das (bad) sbb jg dec jg (bad) aas dec (bad) lods cmc out (bad) call mov imul sti sub sahf aas jmp enter cmpl mov in pop sti (bad) jg cmpsl std leave jg icebp jg dec sbb push dec (bad) ds repz call jg shrl mov sti in sti jmp sahf mov std fnstcw jg (bad) (bad) rorl jg (bad) sti incl mov push jg aas clc ljmp das sti or out scas sti cmp das clc idiv aad out inc jg (bad) fwait (bad) stos std negb pop out (bad) out outsl call dec xchg out cld mov cld icebp mov sbb outsl (bad) out das (bad) sub loopne call or hlt outsl (bad) mov decb outsl jle in jg dec mov jg pop lock push (bad) (bad) dec jmp jmp (bad) std xchg pop jecxz ret (bad) jg push fnstcw addr16 pop jg ja inc fcomip xlat out push fcos pop negb iret mov aas idivb jle lods aaa aas (bad) mov incl (bad) and jg outsl std cmp jg in mov jg lret (bad) shrl std loopne push std mov call mov icebp psubq (bad) out mov fidivr iret jl xlat std xchg pop (bad) mov lock and pmulhw std sbb cmc xchg jg idiv xchg mov mov (bad) mov arpl outsb jmp aad jbe out std cmp (bad) jg aas cld or mov in clc in cli das jle jg inc mov (bad) (bad) lcall out cld adc (bad) into mov (bad) lahf (bad) sbb call jle scas clc jnp sbbl jmp pop cld mov ljmp ja mov xlat jg pop hlt sbb or cld adc repz xchg loop lcall clc xchg (bad) lcall push psubq stc aas cld mov mov jg mov aas stc psubw jg lds mov (bad) test mov aad stc pop clc cmp fwait lahf stc jnp xlat stos lods (bad) scas incb cld inc jecxz xlat mov jg xlat cli aas (bad) fstps cld pop jg leave out rep (bad) negb pop out cld sarl lock push fdivrp lea and stos cli lahf std in call jg scas cld loope lret lds (bad) imul cld aaa (bad) in pop sbb aas clc out (bad) pop mov jg mov sar xchg loop ljmp lcall clc in dec (bad) sub in lock call sti into (bad) jge lahf push ja je out sti adc repnz ljmp frstor aas cmc dec (bad) (bad) aas out outsl stc (bad) mov mov sti push std xlat iret (bad) sarb push lret maskmovq negl (bad) pop (bad) out jg mov sbb pop cmpsl cmc idivl ja inc inc pop fdivr int out paddd mov out out mov stc (bad) std mov pop lock sbb imul das jle jg pop cmc fucomi ljmp sbb shr stc aaa decl mov loopne (bad) ficomp cli idiv (bad) jmp pushl mov jg out (bad) div aas icebp leave aas jae lahf in mov incb mov hlt (bad) pop push push push push repnz std enter (bad) mov sti push std sbb fabs pop mov divb pushl in std pop jle das (bad) cmpsl (bad) ljmp mov stos (bad) (bad) and iret cli xor lahf (bad) xchg fcomip (bad) stc cmc jle ja pop jg cld aaa jecxz clc je dec std stc in mov aas ja clc int jg pop cmc lock decl mov into out icebp scas std (bad) cld int3 push jmp xchg fdivrp scas cld xchg jg ret lcall clc dec (bad) sub cmc mov push mov jnp (bad) (bad) lret inc mov (bad) mov jmp in loope cld lret push out hlt lret out std xchg mov (bad) outsl dec jg pop xchg jg pop jno push std xchg jg (bad) stc aaa dec sarl std in jmp mov idivl cld mov (bad) cli aaa clc dec jg jg aaa cld (bad) loope aas cli mov sti (bad) lret iret cli dec scas ljmp out cld js sti jl repnz xor stc jnp pop dec xor pop clc scas ds sarl idiv (bad) push (bad) lods (bad) ljmp (bad) fidivr pop (bad) inc (bad) mov cld cmp incb les cli dec jle fild mov out jp cld fwait jg jg out stc push jg mov (bad) xor jg cld cli (bad) std aas hlt stc ljmp pop pop jg pop mov aam (bad) (bad) ds cltd loop std into fistpll jnp imull leave outsl dec stc xchg lahf cmp ret (bad) fsub idiv iret dec (bad) jmp out hlt lret inc jmp call adc rcr dec (bad) repz stc dec (bad) mov inc jle lret inc stc loope xor paddd fistpll sti xor push mov scas ja clc jge lret (bad) rcrl cld cmpsl dec idiv cmpsl (bad) xchg aas out jg jg,pn jg jg std or int mov out cld mov scas (bad) mov movsl jg lds sbb sti aas hlt (bad) cld in jg outsl repz call jg out xchg std lods jg cld das clc ror mov call in pop std ja sti sar daa call jmp jg mov jmp lds stc imul mov lret scas (bad) fmul (bad) cli pop hlt pop xchg jg pop hlt leave lahf std cli outsl cld cld in mov cmc push (bad) sti pop std in in jmp mov jae jg stos mov jle pop cld jmp jae pop aas cli push jle jg stc iret decb mov aas not call repz std xlat jg out repz cmp push out jmp out aas std push cld cmp ficompl das cld pop mov out loop cli cmp aad cld mov jg stc xlat mov lahf jge jg cld loope mov jnp sub mov leave pop cld xlat (bad) pop jg mov jg pop repz cld lcall pop mov das (bad) aam loope pushl sar mov cmp in pop dec mov fnstsw dec clc repz (bad) lahf mov jg lahf clc (bad) jmp jg cmp loopne cli dec jg (bad) cld fwait jg jmp pop cld lret out decl mov mov push pop mov stc leave mov (bad) stc mov jg scas dec decl call push cld (bad) inc aas out js repnz (bad) fnstsw (bad) xchg sar leave fcomip sti sar out pop jne in (bad) in clc repz in mov ljmp cmpsl jg out lock add lahf aas jmp aas mov in sti lret (bad) sti cmp imul mov out sti pop (bad) ljmp pop clc pop jg outsl cmc or mov xlat addr16 scas imull decb cmp fwait into fdivrp add (bad) mov mov aas cli xor divl fmull mov cld lahf sti stos (bad) xchg xchg out cli (bad) idivb out mul pop cli pop std sarb iret pushl cmc scas cli aaa decb xlat fucomip jg test cmpsl jg scas mov cli (bad) pop cli lock sti add cmp jmp jg jg dec std pop push (bad) pop jbe pop jge sub jg mov jmp cmp fistpll jg in decl jmp mov jg (bad) mov mov jmp jle mov idiv inc adc jge (bad) sbb fist (bad) pop cld repnz dec cmpsb jg in aaa popf std aaa mov decl cld jnp mov mov cltd bnd iret outsl idivl pop (bad) mov call stos aas call jg lahf incb loop notb (bad) out inc stc mov testl lret dec movsb aas jno pop int jg (bad) dec mov test mov jg aas std lahf es das cli pop jg pop imul (bad) rcrb pop std (bad) mov fdivrp xchg push test stc outsl repz outsl call (bad) std das jmp (bad) pop clc xchg jg das stc mov dec inc scas decb std mov mov fucomi dec stc mov loopne dec (bad) fstp ljmp mov cmpsl dec dec out std lret mov (bad) aam (bad) (bad) cmp out ljmp lahf (bad) cli scas popf std aad idivb jecxz std adc loop cmc lret jbe movsl (bad) in ljmp (bad) (bad) stc mov aas (bad) (bad) loopne int jae xchg (bad) sub fcomip outsl jmp (bad) cmp jg xchg std cmpsb aas (bad) or nop std stc mov push mov std push jg pop repnz (bad) mov fwait leave jg push mov (bad) jp pop decl mov jge lahf cld gs xchg repz cmc mov clc iret loop std pop lcall jb sbb fstpt mov scas jns clc dec (bad) pop pop dec out std cmc jg cmc push decb jg lahf cli and (bad) fnstsw inc xchg jg jg cld fist sbb pop xchg repz repnz cld mov in ficoml jg addr16 out jns mov std test cli dec dec lahf (bad) mov xlat stc aaa (bad) and pop push cld sarl cld repz push pop call jg outsl sti cmc nop (bad) decl mov mov negb mov aas int3 decb call (bad) (bad) jg pop lcall outsl jl (bad) movswl das sub scas repnz lahf stc xor jnp out dec jg jmp fbld (bad) gs jg pop mov (bad) std imul lahf sti and les clc sub das aas (bad) jae call call lahf repnz fcos jecxz icebp (bad) in (bad) cli aas cmc pop (bad) fcomps imul mov ljmp dec xchg lods fildll push fdivrp out fs test mov (bad) mov lahf aas cli pop call jg std cmpsl jg pop cld fidivr fbstp fnstsw shr jl (bad) jg xlat mov lret jg lahf imul push jg (bad) clc mov push jg aas lock std setno aaa fdivrp push jg idivb lcall xchg mov fnstcw aas stc cmpsl (bad) fwait mov xchg std pop mov loope cltd sbb dec std jecxz shlb (bad) pop jle ja (bad) mov incl cld arpl das cli xchg jle mov mov pop cmc scas aam (bad) jg fisubr or out pop pop mov jg cld std (bad) flds (bad) jmp push aaa pushl (bad) xchg mov sarl mov jecxz div jge addr16 add mov clc mov mov jnp mov jg mov (bad) adc sti pop mov pop stc xchg jle pop out aas (bad) mov cli jmp mov pop repnz pop clc dec incl inc decl pop inc jb sub (bad) call call cli fucomip (bad) aaa jle imul fs jle fucomip sarl jg scas (bad) aas jle aas stc jg cmc xchg jge iret std and jle inc decb mov push scas cld out jle scas push pop cld push scas incb jl iret cmp out lahf decb jg jg inc stc xchg aas stc pop stc cmp mov (bad) das jmp mov idivl cli popf jle repnz inc incb out dec lret push sbb jg neg jmp pop out das (bad) das clc addr16 out in xlat cli idiv ljmp mov aas cli scas cld (bad) lret stos lahf cld popf jle aas loop fdivrp aaa jg mov jae out lahf or sti decb (bad) fdivrl or idivl pop push incb inc cld jno incb sar rcr aas (bad) aas sti jne jmp loop clc jecxz movsb mov into insb xor cld and aad ret addr16 jl sti jl pop dec jmp xor out lock stc adc cld outsl pop (bad) cmp into scas mov jmp dec pop sti call (bad) jp outsl cld xlat cmc das incl cld mov stc das (bad) clc jmp mov jg pop lret and iret out std jp cld push (bad) jg cli fldcw sti nop dec outsl lcall (bad) mov (bad) rcrl cld pop (bad) cli scas jle rcl (bad) in loop aas std sub and std and cli jg (bad) (bad) xchg jmp ret aas loope decb mov mov sbb jmp jg pop dec cmpsl jg (bad) mov out cli addr16 jg (bad) cld pop sar call stos pop mov lahf dec cli out stc mov cli pop clc cmpsl jg aaa mov mov inc cmc (bad) aaa std ljmp jg lock repnz (bad) inc std aas ljmp out mov movswl xchg pop incl mov mov cltd (bad) call jle (bad) jmp xor das clc xchg mov iret pop cld bts mov jmp clc scas dec mov jmp loop sti adc icebp (bad) cld es in pop lahf cld sarl pushl out lock out std iret mov mov lods mov (bad) fstps cld jecxz dec mov fcomip aas aas dec pushl fwait cmc aas repnz mov mov mov aaa std sbb std (bad) cld popf jmp fcomip fwait cld fnstsw idiv mov stc pop (bad) fsubrs cld xor push leave decl pop cmc outsl std scas push dec jmp jmp out sbb xchg aas insl pop insl (bad) cmp xchg fnop lahf cli aas (bad) (bad) loope fdivrs cld addr16 pop sti mov out stc add mov fcomip push lds (bad) lcall (bad) (bad) clc cmpl into in repz in stc sti ja mov jmp pop cld lahf cld out xchg mov repnz ljmp (bad) std jg iret cld incb xlat cld pop (bad) (bad) aas pop (bad) mov idiv ljmp sahf pop lock cmc (bad) hlt ja or jmp sti add pop (bad) idivb jg inc cld jecxz imul in and icebp lods (bad) incb xlat std xchg jg jmp ja paddusw pop inc fnstsw (bad) aas stc (bad) incl mov call outsl icebp fwait std hlt mov mov aas (bad) jg std mov icebp jmp addr16 mov jg (bad) cli lods out call cli jg jg dec (bad) fstpt idivl clc mov aam out clc ljmp mov mov cld call jg jg daa dec jg jg paddd (bad) cmp std adc (bad) call sti iret jle leave ret aas hlt jg adc cld pop pop jg (bad) cld sbbl sar mov in jg jae lcall pop cld scas std lds fimul (bad) stc aas loopne stc jne or aas std idiv idivb ljmp std dec iret decb mov hlt xchg std mov (bad) xchg aas (bad) testl mov scas mov in in fcomip (bad) (bad) movsb pop pop decb out mov lcall sbb cli daa (bad) clc aas mov iret rcr cld ja sbb std push call pop xchg cld outsb jg mov pop sahf jg paddd outsl (bad) sub rep jge idivl pop std cmpsl call fnstsw dec clc mov loop scas cmp icebp (bad) repnz rcr repz jl lock xchg in (bad) out cmp xlat mov jg aas sti ja call jg ljmp repnz stc xchg fdivrs pop std mov sarl jns out cli addr16 xchg pop pop iret pop cld outsb jg aas stc (bad) iret pushl and sarb jg fcomip addr16 mov (bad) mov jnp out jecxz stc lahf jmp pop jp pop cld outsb fs cli xchg (bad) mov in mov aas idivb outsl jge pop cld int (bad) lock stc fisttpll jecxz cld int scas jg pop lock ret jmp lahf std xlat jg xchg push pop (bad) jecxz call (bad) sub sarl arpl pop (bad) iret incb ret mov mov lahf cld lret xchg sarb clc dec lcall xor std ret jg addr16 aas clc das inc (bad) frstpm(287 mov xlat ja (bad) data16 pop cmc cmp lret lahf clc cmp outsl push (bad) jmp std jmp fdivrp cmc stos (bad) imul xchg inc pop mov inc out cmc pop pushf cmp out out lahf ljmp pop lcall lret (bad) cld xchg mov jmp lods (bad) js aas cld cmp (bad) mov scas ljmp jg out imull aam mul (bad) scas mov mov std xlat push (bad) mov jle lahf incl mov cli mov movsl mov std pop (bad) pop cld hlt aas idivl decb cmpsl scas lret (bad) push fdivr sbb (bad) clc sub cli lea (bad) lods addr16 jg cld pop jg addr16 in icebp (bad) hlt mov (bad) daa inc jg pop cli lahf std mov stc addr16 fwait mov out cld scas jg fcomip fwait cld (bad) mov (bad) dec stc test push iret sti sub dec jg fucomip fnop mov (bad) idiv insl decl decl lret (bad) lahf jp repnz jg loope (bad) or out mov or mov repz call cli fwait int3 jbe pushf jmp (bad) int lods aas in aas lock (bad) mov in lahf cld pop jg out push repz das cld sarl pop jecxz sti mov insb jns repnz imul ret addr16 mov mov out mov cld sti outsl cmc idiv inc inc ret aas in mov out xchg xchg std std mov (bad) dec stc add loopne daa std cmc fwait pushf mov clc fnstsw aaa mov in lahf stc mov into cli mov cmc pop hlt pop cld (bad) inc idivb jge xlat cld cmpsb mov fsubp fbstp cmpsl sar cmc outsl xor cli daa (bad) jecxz jmp jle out std imul (bad) fnstsw (bad) loopne (bad) std jg (bad) out clc std fcomip pop cld jnp repz cltd jg aaa movsb stc fwait std mov call (bad) jg pop (bad) pop out (bad) xchg (bad) in (bad) pop cld into mov std (bad) xchg aas jno in (bad) jecxz mov cli pop into (bad) lods fucomip mull push jg mov in scas sti inc out ret negb jg (bad) pop jg outsl pop std fnstcw scas stc idiv jle ret out repz cld pop inc (bad) iret jg fildll jmp push push aas inc icebp jmp cld daa jl mov stc or ffreep mov cmc sti std outsl (bad) fsub mov inc jmp aas ljmp (bad) cli fst xchg aas pushl (bad) call pop std stc pop pushf jg test (bad) sub aad shl aas cli push (bad) mov mov inc lcall cmpb jg call fbld pushl jge cmc dec incl aas cld jae icebp out repnz jmp jle mov dec dec fistp sub in idivl cli daa scas incl mov mov aaa lcall std ljmp push cld push sti jg mov mov mov call out stc iret jle scas cli daa sahf (bad) out ljmp mov std jle lock jmp jp (bad) aas sti mov jg out xchg call xchg jg lahf cmc scas fdivr movsl push outsl stc mov loop jns scas cmp in pop ljmp pop jle cli jmp (bad) in jle jg (bad) (bad) sar mov (bad) fnstcw sarl add xchg fistpll lret mov mov dec jmp out hlt sti inc mov jg idivb stc jne repz cli (bad) pushl mov out jle mov scas aas out pop jmp xchg (bad) (bad) cmp stos aas jmp das (bad) mov mov jg aas stc sbb idiv fwait dec outsl call repnz cmpsl mov sar decb jg iret (bad) call aaa (bad) ds std scas cmc pop incl jg fstpt out clc xchg ljmp fwait (bad) cmpsl in dec cli pop (bad) cltd jmp out outsl stc addr16 repz repnz (bad) nop pop cmp insb repnz xor sti jg pop imul std cmp jg (bad) dec jg out data16 (bad) ljmp ret inc inc stc lret fnstsw cli iret sti xlat ljmp mov jmp stos mov iret (bad) mov lahf stc cmc (bad) jmp imul cld xlat call jg mov xchg fcomip daa jle (bad) fisubr in aas stc fwait std loopne clc mov stc arpl out pop icebp xchg into mov jmp movsl mov (bad) (bad) jge lret in das (bad) sub jge decl addr16 ljmp shrl (bad) ds arpl xlat pop cli mov les jg pop stc repnz clc cmp mov out loopne mul cld out jg xchg jmp pop cld mov pop lock push outsl jle sti xchg xchg leave ret cmp xchg in daa fnstcw leave dec sarl repz out (bad) sahf (bad) daa (bad) stos mov ljmp xlat jg (bad) cld dec call pop repz cld out (bad) outsl (bad) addr16 mull ljmp cld jecxz cli pop (bad) stc (bad) in pop testl push std cmp out addr16 jg ja sbb stc arpl jg fucomp pop cld call xchg scas (bad) rcr icebp (bad) scas sti pop pushl out pop (bad) (bad) mov scas (bad) sub mov push jle mov dec push lcall decb repnz pop (bad) stos lahf cld arpl clc psubd leave (bad) clc pop mov (bad) idivl xchg (bad) sti out clc idiv cmp out repz addr16 pop repnz cmp (bad) call push jg aas repz cld pop jg mov push cld dec mov (bad) xlat jg jmp stc pop sub icebp out std jg outsl imull cmpsb iret dec jmp xchg (bad) lcall (bad) cltd aas cmc jnp call sahf cld sub lahf dec (bad) mov sbb (bad) (bad) call outsl xchg pushl pop std cmp out ds (bad) jmp jg fldcw jg lahf rep jle jg fbld pop (bad) fstps xlat jle stc mov stos aas repz (bad) cmpsl scas jle jg out clc outsl jle jmp jecxz aaa stc (bad) mov mov xchg icebp jg out cld idiv xor ficomp aas aas clc popf (bad) in repz ja jle iret (bad) test out xlat decb dec push xlat stc (bad) (bad) rcr out aad mov scas jl in scas or mov jg scas icebp pop call call fwait in pop inc icebp xlat (bad) in std pop jle loopne cli out cli sarl mov call (bad) (bad) cmc mov addr16 call (bad) scas mov psubw jle call xlat cli sub cld das jg lds fstpl pop loop mov mov pop hlt pop std jmp out (bad) out idivl stc pop out mov jg (bad) clc cmpl sti in incb les pop daa jg aad clc add and std pop (bad) scas aas call std push call stc aas cli pop (bad) mov icebp (bad) (bad) call fcomip (bad) or sar cli xlat clc inc pushl cmp scas dec (bad) mov divl scas jle jmp xlat std outsl (bad) clc aas loope decl lds mov (bad) cli lret jle push inc std aad sti out std mov jecxz stc cmp fist xchg mov cli (bad) cld mov aas negb leave das dec jle (bad) fidivr aam sti xchg inc fistpll aaa cld mov aam sti fldcw stc lods stc jge rcrb repz jge stc outsl stc jecxz ret aas clc lret lcall aas in mov dec (bad) (bad) mov negl stc sar cwtl aas stos (bad) in (bad) xchg aas inc jmp mov cld dec sub repnz std mov aas repnz paddd push aas std sbb adc pop stc (bad) std push jg cmc into outsl sti notl cmpsl mov test fcomip lods in stc ret dec lds outsl stc (bad) inc inc mov dec fistpll pop inc decb (bad) ds lahf incl imul cld popf (bad) lods fucomip in sti pop xchg aas cmpsb mov call mov (bad) test jg inc pop mov jle outsl mul daa xchg das jg aas scas (bad) out scas testl sti idiv test repnz addr16 jg xlat cld outsl jmp jg std aas test aaa (bad) push (bad) scas mov das pop mov in (bad) sub aaa cmpsl cmc (bad) jg xchg (bad) jecxz sti sarl mov dec pop (bad) (bad) lahf cld ss call pop push (bad) mov das std mov (bad) lods xchg (bad) fldt cli inc jmp (bad) jmp ljmp (bad) (bad) test repz icebp daa jg lahf cld jnp repnz lahf cli mov (bad) jg pop cmc dec (bad) jg lret xchg aas in clc cmp (bad) pop cli sub sbb out push std inc (bad) xchg ds (bad) (bad) out clc push jg out repnz fldt call repz std xor inc decl dec cli jne jle aas pusha icebp dec jle ja hlt push cld scas jg push imulb stc jecxz repz pop sti maxps or clc dec std in cli hlt (bad) call hlt aaa stc pop xchg pop inc cli repz cld imul cli pop push jg cli (bad) idivl sbb std mov sarl std pop jg lahf push cld jp rcrb pop mov aas decl push mov incl jg (bad) stc paddd repnz aas xchg cld out cmp sar stc stos (bad) (bad) cld mov aas cli mov in das mov jg scas mov (bad) stc (bad) jle mov mov mov pushl dec (bad) out pop icebp push (bad) arpl (bad) fbld (bad) jg mov out fstps jge jmp (bad) jg iret dec mov aaa (bad) jge lds ljmp (bad) dec inc loop cmpsl push in cld adc out les cli mov icebp (bad) jg das std sbb in pop cld movq std and loop (bad) jmp jg lahf repnz std addr16 out pop stc cli mov in (bad) out pushl repnz jle scas mov out aaa cltd std dec xchg loop dec dec pop aas sti sub (bad) (bad) (bad) clc ja sbb aad div pop (bad) stc xchg aas stc mov cmpsl (bad) clc pop repnz nop (bad) incb iret decl stos (bad) jmp loop pushl std mov stos mov jle mov push mov xor (bad) xchg aas cmc loop jg (bad) pop mov outsl clc mov iret std outsl (bad) adc cld sarl repz cmp aas std cmp aam mul push popa repz popf jg lahf cmc idiv popa push fcomip jmp cmc out cld push in repnz incl icebp call idiv out dec std cmpsl xchg negl (bad) into mov (bad) std out cld sti pop insl popf int3 (bad) sti push das mov jg mov sti aas pop (bad) pop (bad) ficoml in jg hlt (bad) int pop lahf xlat pop push jle fcomip dec cli pop lcall idivl mov outsl not jg popf aaa in (bad) mov mov aad jne or jmp clc out fistpll negl sti aas jmp lods push jmp insb cli jnp jnp (bad) clc mov dec das cld mov stc xchg std scas mov popf pop mov cld jns loopne hlt das std dec mov mov out jmp jg fstp cli cmpsl (bad) sti pop clc push (bad) xlat mov jg lahf (bad) (bad) jg lahf clc lahf std or call pop repz dec jg push call out icebp out (bad) (bad) imulb pop (bad) xchg mov clc mov lahf (bad) sbb stc xor push (bad) cld icebp push dec incl sti lods dec aas out stc addr16 stos cld ja pop (bad) (bad) aas jnp outsl clc sti leave (bad) call out pushl ljmp repnz out cli dec mov das stc int out out das clc stos mov mov fwait pushl std (bad) jle fwait mov pop cld idivb idivl jg lahf fidivr jg mov jg mov in aas imul mov pop cmc lret (bad) sahf (bad) das (bad) xlat (bad) fwait mov pushl (bad) fidivrl aaa call out lahf rep cld aam jae (bad) aas (bad) fcos out call das jmp (bad) jmp ljmp (bad) mov out imull outsl cmc pop (bad) push adc (bad) lahf mov (bad) aas testb ds jmp scas cli inc mov push dec fbstp (bad) jle (bad) cld xchg inc (bad) fldt push scas jle aas into jg jg (bad) incb rcrl dec call (bad) iret pop std mov sub cld jg aad jge jnp rcrl cli mov nop daa dec in scas clc xchg jle in fnop hlt pop sti das ljmp cli xor sbb mov push out stc paddb cld incl lds push jl hlt (bad) clc mov hlt pop std in cmc mov sub mov jg insl fs fnstsw iret iret (bad) mov sbb (bad) (bad) sar enter aas insb cld pop std push pop jg pop cli pop jg,pn mov fistpl (bad) (bad) jmp mov stc lahf lock incl fldt sub mov mov xchg pop cmpsl cli mov pop sti cli mov pop stc fildll lret or fbstp mov repz out cli ljmp (bad) fisubr cli fistpll mov mov lret xlat out (bad) mov out cli inc stc mov (bad) (bad) mov aas cli add aad lock dec inc aas stc pop insl inc jg outsl cld push jg pop (bad) hlt idiv out jle pushl sti sar jmp std or hlt sti and std sti jg push lock sbb cmc push pop std lret dec ja sarl push push cld stc (bad) mov outsb mov ret mov push aas std outsl stc add ljmp (bad) scas jg ja scas mov lods out jg pop mov jg lret dec aas jo (bad) clc jne out aas (bad) pop fdivrp xlat jg pop pop sahf pushl cld push adc xchg (bad) stc outsl jge xchg cmpsl xchg mov in cld xchg das jmp jg mov mov in mov in aas (bad) iret (bad) xchg int pop dec stc fistpll repz jmp fwait aas (bad) addr16 das jle aas lock cli xor (bad) (bad) jmp sti jne inc call outsl lock (bad) in scas sti pop aas cli out (bad) loop out sti daa out push mov cmc pop decl loope imulb out clc pop (bad) cltd push cmp (bad) jg pop repnz pop jge fisttp mov mov fcomip sarl (bad) ficomp aas (bad) jg dec cld imul ja in pop repnz (bad) mov mov jg imulb cld cmpsl cld jns ficompl (bad) addr16 std pop push mov jg pop repnz std (bad) mov (bad) sbb std adc in idiv dec jg aaa sti test lds pop decb lret call decl ret mov mov repz (bad) fcompl (bad) aas (bad) xlat out repz icebp idiv ja insl icebp (bad) decb inc mov mov out cli aaa sti dec ds jnp (bad) cld pop inc aas cmp (bad) inc ljmp das jle decb (bad) in fdivrp xchg mov (bad) out (bad) pop decl rolb jg out incb into jg iret std popf mov cli push jg lahf cld imul aad jge cmp cmpsb mov inc (bad) jle (bad) stc jg jle mov call mov sti jg cli inc pushl (bad) jmp jmp (bad) pop mov icebp pop (bad) mov repz loope sti or fdivl mov stc inc call out lret iret cld (bad) mov push jno cmc mov (bad) gs cld outsl cld ret pop pushl out jl iret cli fwait dec aas out jg arpl std ja lock stc adc fstpt mov cmpsl ljmp clc add into outsl hlt pop decb paddd inc fcomip pop jg pop bnd std mov aas cli pop lea call cmpb aas (bad) jae (bad) in clc xor jae mov mov out clc jecxz xlat (bad) call lahf cld aaa scas (bad) (bad) fidivrl in psubb push mov repz std (bad) std mov pop hlt pop jge ja xchg mov mov (bad) jmp (bad) aaa lcall dec jg jg imul ss scas ljmp call jg pop mov scas lcall (bad) pushl scas mov push iret lahf std mov notb std (bad) (bad) fidivrl hlt (bad) cld or pop repz push jg in (bad) mov aas pop (bad) pop jmp call (bad) cmc iret (bad) cli mov hlt scas std in jg scas sti scas (bad) fwait push pop cld iret jle (bad) cli in jle aad repnz outsl inc pop xchg out (bad) sti mov (bad) ljmp jmp jg ja pop (bad) out mov stc jg jg and mov (bad) jmp cld jle enter lcall inc aas sti out (bad) and out cmp sbb mov out jg fcomip xchg mov push (bad) in mov dec push jle jg div dec jmp jle lahf cld jae jg das cmp and std dec aas icebp imul movd fcomip dec inc aas repz stc (bad) int push das clc stos dec stc aas cld (bad) jecxz incb xchg idivl imul pop cld out jg (bad) jmp out lahf jmp lahf (bad) imul ljmp push sar call pushl lret (bad) jg pop cmc xchg (bad) daa mov cld dec addr16 ja (bad) sub addr16 (bad) (bad) xlat jg mov lock cli das (bad) mov (bad) outsl (bad) in aas cmc dec sti jne lods jg inc (bad) xchg fucomip iret sahf std ss out neg std jg,pt dec std mov out std or jg std fimul aas icebp cmpsl std sarl clc mov hlt das clc xlat jg ja push out call jg jmp fnstsw ja xor (bad) out cld aaa jg pop lock std stc in daa dec (bad) mov aas stc scas dec (bad) loop std aam repnz cld dec jg pop sti xchg std ret lret (bad) xchg (bad) (bad) clc aas jno pop std shl jg push dec cld pop mov sti dec inc das dec jmp aas cld in repz mov das call lret aas loopne std idivl jg push incb mov push jle aas std addr16 xchg (bad) scas not dec outsl icebp xlat inc inc fcomip fisttpl mov idiv stos jg mov mov sub dec lahf mov clc out dec mov lret out sti jg sti out jg out push (bad) fist jns jmp mov scas stc icebp mov jg fcomip jnp jmp push out std out cld stos call lds (bad) fiadd out std xor jg cld int xlat lods pop out xlat test fnstsw std call mov call aas sbb (bad) cli (bad) lcall (bad) out mov pushl (bad) fistp push dec cld pop cld movswl out push idiv clc pop ds pushl jle fcomip outsl sti inc jg (bad) fwait int3 decb push call sahf (bad) jge das std adc jo (bad) lcall ret jno fistpll mov jg mov mov pop (bad) mov and jg idiv arpl scas (bad) scas mov jmp lds xchg jle (bad) std cmp pop stc iret sbb pop cld insl lret jg xchg jg repnz (bad) jp jg (bad) das jle aad ja lahf stc xor scas cli iret jle jg daa incb aas mov cmc fcomip cmp in fdivrl std daa outsl (bad) ds mov std lahf (bad) fdivr out fistp (bad) fstpt cld cmp mov xchg jg mov test incb jg icebp outsl clc lock sti mov std adc out push incl negl (bad) (bad) inc pop negl (bad) cmp stc ja imul (bad) jg xlat jg push (bad) clc mov jg out std daa cmpsb lahf decb outsl stc jg push (bad) clc fcomip xchg cmp popf incl xchg jle aas (bad) scas pop (bad) fcmovbe jg addr16 mov inc jge sti std fsubrs std ret mov xchg cmpsl xlat stos pop clc std mov cld cmp pop mov cld int3 (bad) cld sti cld popa dec aas std fwait decb jae jg mov (bad) sarl (bad) cltd xchg jg pop (bad) xlat jmp hlt pop pushl (bad) jle repnz (bad) (bad) scas jg idiv sbb daa jg (bad) mov call xlat (bad) aad call aaa scas decl stc sbb cmpsb call scas xchg (bad) imul (bad) (bad) dec sahf std idivl stos jg mov cmp fwait push lcall in (bad) test mov outsl stc (bad) (bad) fdivr jp dec inc inc mov jg fdivp out idivl cld int3 pop hlt xchg aas call aas (bad) cmp neg std push (bad) std outsl mov cld pop jg sar (bad) dec dec (bad) stc fucomip mov pop (bad) loopne ss xlat decb pop (bad) movd sarl repnz jg out (bad) ja (bad) ljmp or fcomip das js idivl std aas mov loop std lahf call lahf push (bad) stc outsl stc adc loop divb paddd jo (bad) out cli pop (bad) fwait cld (bad) pop repnz and sti jg mov ljmp in lock sahf mov mov (bad) clc aas (bad) (bad) (bad) push leave (bad) (bad) iret decl jle psubq out (bad) sahf jmp pop xchg decl xchg pop cld inc (bad) std dec outsl lock pop cld (bad) jg aas cld mov mov mov mov dec fcomip dec jge out pop clc mov lret mov sarl cmpl xlat jg (bad) std movsl push scas jno aaa (bad) xor jl aaa movsb mov aas call in jmp outsl (bad) sbb jmp dec sti das pop popf (bad) stos aas imul (bad) idiv cmpl (bad) cwtl daa jg out divl cld stc (bad) fidivr pop (bad) mov cld jmp idivb pop adc cmp aas hlt dec clc cmp mov mov jmp pop idivl mov loopne idiv jg lcall ja mov decb fdivrp lret (bad) lock jl std jg dec cld adc jle out jmp jmp pop sti inc (bad) mov out aaa sti lret jbe sahf fcomip (bad) jmp pop cmp fwait mov (bad) jmp (bad) mov scas jnp repz repz sbb sarl idiv push jg into ret rep aas in cli insl (bad) test lock (bad) sub int ss imul (bad) ja mov cld or outsl decl mov out incl (bad) leave jg dec ljmp (bad) stos (bad) iret stc aaa stos jg aas pushl mov jecxz daa mov jge lahf jg das (bad) rolb cld daa (bad) xchg (bad) push addr16 scas ljmp decb and sarl outsl sti out mov sti xlat mov (bad) aaa std cltd sti dec mov jg jg lahf jmp adcl aas stc sbb (bad) xchg adc call cld add aas clc cmpsl sbb loop stc adc out scas jle aas in stc (bad) mov (bad) in jg imulb (bad) jmp xchg mov (bad) jne jg pop stc jg in jg mov pop mov idivl loopne sub jb mov fcomip mov fwait cld pop jno loopne cld idivl push xlat stc aas rorb shr loope outsl ljmp jmp out pop cli xchg jg pop repz (bad) xchg ljmp ja xor pop mov (bad) aaa decb loope repz incb cld lahf jg lds jg jg idivb out incb std add daa scas (bad) mov (bad) ja std cs jmp mov inc aaa (bad) cld jecxz je (bad) std sub cli jmp pop stos out (bad) jg (bad) xchg enter leave (bad) jge in out mov dec clc ja mov (bad) repnz (bad) cmpsl jmp fcos xor aaa pop std hlt pop stc jg mov imul jg fnop dec cmp adc (bad) cmp (bad) loopne stc cmc (bad) push xchg xor scas (bad) std pop mov fcomip dec (bad) pop jg fcomip cmp into das stc out jg (bad) iret sti sar mov out mov jmp (bad) in call jg std xchg jg aas icebp iret (bad) clc outsl sti sti ds std push mov jg pop ljmp cmpsl jg out push lahf (bad) mov icebp jnp lea cmp out mov xorl sbb out repz popf cld std push das std pop push (bad) fstpt (bad) iret (bad) and sti (bad) push inc scas repz (bad) std scas ds (bad) div (bad) lahf stc iret dec (bad) iret mov fstpt in (bad) pop std sbb sbb push sarl stc inc jmp lahf stc scas sahf mov cld shrl call fsubr sti scas out nop (bad) fcos (bad) inc inc jg mov mov (bad) jg out cld scas (bad) pop leave (bad) jns stc jae mov (bad) push cld jecxz shl out stc cmpl mov iret jg out mulb sbb pop mov int aad clc pop decb idivb cld or call lcall pop jb out sbb fsincos pop call mov sti (bad) mov lcall fstpt repnz stc mov mov fs pop call (bad) aas cld mov (bad) mov neg std cmp mov ja mov decl pop cld outsl (bad) pop mov mov (bad) out std fucomip xlat clc in repnz std sarl jg outsl cld push mov pop negl cmp in out int jg neg stc xchg (bad) movsl jg jg iret shr mov (bad) mov sar mov ja mov cmpsl jg out mov idiv (bad) fucomip daa jg jecxz (bad) sbb ljmp sarl hlt imul jg loope std xchg cld (bad) jmp out std imul mov mov xchg jg das sti call decb je xlat (bad) das das jg stos pop dec stc (bad) fbstp aas inc mov outsl call std ds pushf daa xchg mov aad icebp (bad) (bad) push int mov sbbb cli dec aas clc idiv mov jecxz dec (bad) movsl jg out dec jmp jg rcr aas sti iret (bad) mov in fnop in cmpsl inc cmc outsl cmp iret (bad) cmpsb (bad) in mov sbb in (bad) and mov sti incb repnz aas cmc ljmp (bad) fnstsw ja imul pop cld mov mov hlt fistpll push call pop jmp cmp cmpsl call cltd mov lahf jg loopne mov lcall ret (bad) pop clc aas jg (bad) daa jmp mov lods push out jo pop (bad) sbb mov bnd stc cmpsl lcall data16 scas cli pop jle iret ljmp inc jno (bad) mov imul std clc pop incb jmp jg jl lahf cli dec jle stos lods jg jnp ret pop cmc in sti movsl jg das stc in jmp jnp lock mov ja pop (bad) jnp (bad) jmp divl std and clc (bad) sarl outsl std ret (bad) mov scas (bad) push mov cmp lds jnp cmp lds (bad) clc daa sbb (bad) pop icebp pop cld adc std idiv lock icebp jnp push adc imull repz lods pop aad std mov mov lahf jp paddb outsl cld jnp stos jmp cld aaa std fidivrl incb in fistpll (bad) mov das aas sti paddd shrl jg idiv sarb rcrb push mov jne (bad) jmp (bad) pop jg (bad) out jecxz into pop cli jg jle (bad) clc test adc jg out sti aad fucomip mov jg jle jmp std push (bad) std jg daa jle lahf sar pop cltd (bad) es jnp fsubr repnz mov loope pop sti fstpl incl iret (bad) sub mov decb xchg mov ja aas imul addr16 lahf std sbb sbb std popa jg jg das push (bad) out fnstsw (bad) cli aaa (bad) jp call mov (bad) xchg aas ljmp pop (bad) pop mov incb jle out negl stc call ljmp ljmp loope jecxz stos jbe mov (bad) clc frstor cli mov scas mov jg mov std ljmp lds idivl cld aaa jg out divl scas cld mov lahf cmp cmp lahf cmp out cld adc (bad) xchg fcomip clc int jle idiv mov mov psubw lahf jl mov jg mov push pop mul std es (bad) fidivr (bad) mov cmc lret push aas pushl std aaa cld jmp fcomps jmp das jmp push (bad) call (bad) mov out jg jo jge (bad) test cmpsl jge cli inc (bad) push jg aas stc jg (bad) stc push jnp cli xchg jmp pop bnd jg jg dec fdivrp jecxz in in cli xchg push lahf clc (bad) call ret push call mov (bad) sub fdivr sub mov divb pop push outsl icebp mov pmulhw jg (bad) iret cli idiv sar clc hlt dec cld arpl out mov jmp jg (bad) (bad) addr16 jmp jmp xchg popf pop icebp repnz jg stc pop jo (bad) idiv sbb scas sti pop cmp jg out sbb shrl decb sti jle mov xorl stc lds repz (bad) cli (bad) in mov jecxz (bad) stos (bad) hlt (bad) jnp cli loop fucomip xlat cli cmp in out cli sbb jle or (bad) jg pushf std cmpsb dec aas sti jmp mov stc push pop (bad) stos cmp pop icebp out dec (bad) faddp (bad) (bad) std movq jg gs (bad) cli popf jle mov (bad) jmp cld xchg (bad) aaa jle out stc fucomi inc inc mov fnop xchg pushl cli iret pop ljmp cld (bad) mov jg outsl jmp pop cld fcomps hlt sbbl decb lahf std xchg mov adc imul std movsl jecxz imulb cld gs cld pop std inc mov ret jbe cmpl cli setb out paddb mov dec daa call in mov ja ljmp cld push std jne fisttpll iret stc in lcall out (bad) mov (bad) sub cli lods jg cmpsl jg dec decb stc cmpsl mov std pop jg pop sti (bad) cli lahf std sahf mov mov xchg std fcomip loop std jnp loope negb call lock clc ja push mov xor xchg aas cltd bnd lds addr16 (bad) dec jg lahf clc pop (bad) xchg mov jg fucomip iret mov pop hlt pop std pop ja call mov pushl pop cld ret jg (bad) clc scas cld clc aas icebp idiv int lods pop and icebp pop icebp push (bad) adc ret mov ljmp std mov sti mov mov packuswb jle dec cld stc (bad) out std loopne jg xor mov std sti scas push jg mov decl jnp pop ss out mov (bad) jg aas decl mov aaa ja jle jg xlat cld out sub cld cmpsl std xchg jg (bad) imul mov sti push daa mov cmc xchg mov mov (bad) sti mov mov sub popf jmp pop (bad) jnp mov sbb pop xchg mov repnz cmp jg mov loope fidivrl ffree (bad) (bad) (bad) fidivr pop (bad) insl jg outsl clc idiv stc (bad) dec push div stc jae mov neg cli mov out cli (bad) cld out (bad) incl jne lcall scas pop nop push mov (bad) std (bad) ss pop lcall jg (bad) iret jle mov jle push dec fsqrt icebp pop jecxz cmp popf decl push (bad) ficompl or ljmp (bad) sarb (bad) jge sub sti fildll cld push outsl pop adc incb mov pop cld jno jle xchg lahf std add cmc cmpsl cld push jg aas mov iret mov (bad) pop (bad) (bad) jg aas inc das jle pop pop jge pop stc jne lahf jge jg leave mov jmp icebp pop ljmp ljmp sti xor pushl (bad) (bad) adc scas incb (bad) ds icebp paddd icebp out (bad) fucomip aad repnz pop cld fidivrl daa jg pop stc aas (bad) mov call push pop cmc xchg inc (bad) jg mov ret jg mov scas cwtl std dec ja scas mov incl jg in (bad) in mov jbe xlat mov push incl incl div ds sub jg clc (bad) pop std mov (bad) aas cld xchg std in cld push mov ljmp jg jecxz leave jg jg sub loopne repnz psubb push pop cmpsl jmp lret fcomip aaa cld cmp cmpb lcall mov jnp daa (bad) addr16 pop repnz jge pop jmp mov lahf cld mov shr (bad) xchg mov ljmp clc xchg jg push std push mov sti dec jle xchg xor aas out int3 (bad) jmp out ja (bad) stos push (bad) in jmp (bad) dec jle scas std sbb pop clc cli in (bad) in scas clc lahf jmp cmc mov pop lock aas cld outsl fdivrp cmpsl mov jnp sarl fistpll jg pslld cld cmpsl jg outsl idiv jl aaa jmp inc (bad) outsl je clc das cld pop jg stc pop jmp pushl jle jg std dec pop (bad) jecxz sti sub out sti push (bad) xchg (bad) mov push mov (bad) cli cmc jle aas inc (bad) lods jg dec cld or scas (bad) lods jg ljmp lahf mov mov out xlat (bad) sbb test (bad) outsb pushl cli lds lahf push call pop (bad) in (bad) (bad) cmp pop bnd popf das inc (bad) pop jnp out pop inc push pop ss stos (bad) jmp xlat mov pop mov lcall in clc and inc das cld stos lahf (bad) jge in mov pop idiv out (bad) outsl adc icebp fcomip (bad) cld jecxz ljmp bnd add leave mov jg cld loop stc scas (bad) xchg jg xlat lcall scas (bad) fidivrl loopne (bad) call leave in aas mul aas clc lss lret incb ds sarl fwait inc ret loop stc lods (bad) fucomip (bad) jne jg in aas std lds in (bad) pop ljmp ljmp hlt push std imul iret (bad) roll xchg mov (bad) fidivrl cli pop mov jg fcomip fcos stc aas daa ljmp in pushl (bad) jnp div jle (bad) js aas push (bad) in loop in out stc cmpsl jle loope hlt sbb in inc (bad) imul pop call movq hlt lahf clc repz xchg jg pop jae btc in mov jg repnz incl scas fwait inc jg notb cmc scas std into jg jg sti stos call jg cld aas test (bad) push jg icebp mov pop imull imul mov mov dec mov pop (bad) jmp cmp aas stc mov fistpll (bad) in in cli iret cld dec lahf push mov pop sti scas jmp jg pop decl mov cmc mov aam negb inc jg (bad) stc mov jp aaa jg pop dec stc sarl mov aas call cld bnd pop call in (bad) (bad) call jg jg (bad) (bad) (bad) dec out std mov (bad) xchg ljmp lods pop popf mov das incl pop cli fwait call icebp mov (bad) ljmp push xchg pop adc cld push (bad) jmp imul fcomip addr16 (bad) (bad) out fildll pop repz cld out out out mov leave aas lock jno cld out mov push (bad) mov (bad) cld jle std xchg jns ret sar out pop icebp (bad) (bad) jg jg cmpsl (bad) pop adc cld ja jg mov jmp idiv (bad) (bad) cli mov lcall jg hlt mov cmpsl mov jae (bad) xchg addr16 pop lock loop daa cs mov (bad) std fcomip outsl push cld lock std xchg dec pop std fwait aam dec std stos daa call (bad) cld idivl clc (bad) mov fstpt jg call out cld popa das (bad) sti jmp (bad) xchg mov ljmp mull (bad) (bad) fcmovnu mov inc std sbb decl out jg jmp les mov lret fldt mov cld push daa dec mov ljmp or aas lahf jmp (bad) jmp hlt jmp sbb out sti pop jmp mov dec ljmp pop decl jmp das (bad) jae mov std in (bad) cmp aas repnz xlat jg pop jg mov inc jg fwait xchg iret lahf (bad) jg push jg pop cmc idiv add out (bad) xchg (bad) ja lds (bad) jmp fidivrl lds sbb mov dec pop dec stc cmpsl mov mov testl pop sbb inc idivl (bad) out sti jmp mov lret lock (bad) pop repz sti mov (bad) pop cmc cmpsl std int loop icebp xchg scas (bad) sti pop clc in (bad) out out cli popf jg aas (bad) lock stc pop jle xlat std ja fdivrs stos jg pop (bad) aas (bad) (bad) jmp das incl pop call imul (bad) out pop cmc (bad) popf mov cli stos ljmp js ja pushl fisubrl pop std icebp mov outsb stc jg sar sti fistpll sti arpl jecxz loope cld in std mov fstpt lahf cli dec jg jg push std sub pop cli cmpsl incl mov dec aas std scas cld sbb xchg lret jg loope jle aas out (bad) cli mov ljmp (bad) sahf mov idivb cmp fidivrl (bad) jg lahf (bad) aas out (bad) std fcomip lahf (bad) sbb mov jle in (bad) fcmovu call decl pcmpgtd hlt mov icebp das mov fucomip aas (bad) imul (bad) out inc mov aas (bad) dec sbb das cld jge leave pop lock popf (bad) ljmp out rcr out clc in (bad) clc mov pop std mov pop cld das jge rcr jmp lret (bad) idiv (bad) mov scas mov out cld scas (bad) mov (bad) cmpsl pop std mov call xlat mov fcomip ficomp repz cld iret mov dec dec rcr test stc add jg aaa std (bad) sar out addr16 mov (bad) iret stc (bad) (bad) fcomip xlat cltd ds (bad) mov sarb jmp cld jnp ficomp cld ds pop jmp jg dec std pop aas dec jmp inc iret dec mov (bad) jge mov mov clc (bad) dec stc jmp hlt das cld lahf mov lcall out decl out cmp (bad) outsl (bad) pop aas std out mov lret jp inc pop std pop in std xor out cli (bad) (bad) jnp std sahf xchg (bad) stc mov mov call mov std das clc sar xchg jg das stc jnp jle lahf cmc imul mov std idivl in jle mov or sti lahf inc inc cmc outsl hlt out xchg ja std in loop cli (bad) idivb fcomip jecxz int3 aas cmc lds stos jg mov (bad) (bad) idivb js call sti addr16 jnp repz jb push (bad) imul call mov cmp icebp jg pop mov cld addr16 jl loopne cli in jle aas div pushf incb out pop jne dec sti mov pop cmp std pop call pop hlt xchg ja (bad) mov cld aaa std mov (bad) push mov (bad) icebp sbb scas aas decb std pop sar jmp lret fnstsw pop std jae aam clc lds (bad) (bad) fwait xlat aas icebp idiv in push fcomip pop jle cmc aas lock dec mov mov (bad) jle mov mov aas hlt out jmp aaa cld push mull enter pop fstp cli mov scas jg (bad) cld neg incb cli in clc add mov pop lock push cld cmc jmp pop cld iret (bad) out mov (bad) mov jg scas stc daa decb mov imul jecxz inc scas clc dec (bad) (bad) mov lret lahf cli stos cli mov mov iret dec jecxz in jle aaa iret jg pop stc lahf lcall std outsl sti scas pushl cmc jg lock cld insl decb stc std adc call dec (bad) sahf jg (bad) pop (bad) cmc mov (bad) jae hlt aaa mov (bad) (bad) scas cld lahf rcr stc repz pop fidivrl mov xchg jmp std paddw jg fnop xchg lcall sti aas clc dec mov (bad) pop mov fdivr outsl (bad) (bad) scas push pop std imul pop lock push lret mov inc in je scas std jmp into inc jg (bad) pop cld push (bad) fldcw call aas (bad) ljmp stos (bad) pop (bad) clc out jg pop jmp (bad) cwtl push mov xchg lcall jge ljmp mov mov notb mov (bad) scas jae out cmp bnd stc mov call repz cmc (bad) jnp fstpt outsl cld out mov sarl cld (bad) push pop js jg clc fwait (bad) idivb in icebp pop bnd jbe aaa in (bad) xor (bad) inc fnop lret (bad) cwtl jg das stc xchg hlt jg aad fbld (bad) cld mov (bad) icebp cli ficomp sti out (bad) mov jg idiv xchg fidivr jmp jmp repnz sti mov aas repz cld std jg lahf cli push jmp lahf mov cmc lock cli dec (bad) and lahf (bad) outsl cld hlt ja mov mov mov jg outsl clc imul jg cmc scas (bad) scas rcrb ljmp loop ljmp cmc jnp idiv in (bad) pushl jg out std push cld outsl jg pop (bad) dec dec jg cli imul dec addr16 loope mul idiv test decl ljmp jg push xchg (bad) lcall fistp mov (bad) repz jmp pop sti clc xor mov std fstpt (bad) scas imull (bad) mov push mov scas fnstsw jg cmpsl call popf std lds cmpsl aas mov rcrb dec clc repz lret mov rcr in push xchg push (bad) (bad) cli jg scas sti jmp (bad) lock jle iret enter stc (bad) gs lcall jno idiv lret mov pop cld (bad) jg pop mulb outsl neg cld idiv rcrb sti cmpsl in call (bad) pop (bad) lock (bad) cli jne mov loope clc jae fnsetpm(287 lahf cld mov repz jge stos jle fucomip ja inc push aas repnz std sbb mov int fistp pop cld movq lahf push cld cmpsb iret push cmp mov ret aas cmc scas stc pop jle mov pushl jg loope aad repnz sti jg in out lock push jg (bad) jmp jg pop hlt sti (bad) jnp idiv sar out mov (bad) cli mov mov jmp lahf movsb cmc mov aas ljmp das jp dec jmp or (bad) mov jecxz dec clc dec inc leave outsl cli mov lahf cld pop decl mov cli addr16 idiv mov pop std fdivrp sar jg daa out dec (bad) repnz scas cld cli jg mov lods aas adc (bad) (bad) pop out clc pop mov dec lahf scas lcall jg mov lret cmpsl jg mov add iret cld cmp jle aas call call mov push jg jg mulps (bad) aas idivb in scas std (bad) das stc add lahf dec das ds inc incb add lcall popf jg aas stc das mov stc stc dec adc decb (bad) (bad) cli pop (bad) xor jg outsl repz jg out stc push push aas push std mov mov out std sub (bad) clc hlt pop pop mov mov out pop clc fstpl std outsb inc bswap jg cmc fistpll cmpsl mov pop (bad) (bad) dec call (bad) std inc cld pop jg mov iret jl cmp popf (bad) sti dec std (bad) call jg fldt call mov pop std pop call (bad) popa mov lock icebp xchg cld data16 (bad) ljmp out outsl cmc hlt in cli mov loope cld push dec mov popf mov out cli cld scas sti xor and cmc xlat lahf ds ljmp (bad) clc fucomip iret jg idiv scas push cmpsl aas cmc push jmp cli out (bad) lcall cld adc aas lock cltd (bad) stc cmp scas sti xlat jle lahf hlt (bad) mov jg fisubr (bad) in mov cmc (bad) xchg jg lds mov cli mov call stc sub xchg mov lcall pop cld addr16 cli cmc jle,pt inc sar jmp xchg mov jg pop sti cmpsl nop std mov mov std das jns pop lahf (bad) jns out icebp fist icebp dec cld aaa dec jg mov cli ja data16 outsl cld pop mov enter repnz pop mov lahf cmc fwait pop aas pop (bad) fldt rcr jne aas decb idiv icebp cmp mov aas imulb (bad) rcrb lret jle aas in mov cmp inc jg stc addr16 jne xlat (bad) cld pop mov mov mov inc jg mov (bad) repz sub xchg (bad) das mov xor popf (bad) mov loop clc (bad) pop std add jg iret std pop cld clc das clc pop pop (bad) fcomps aas sub testb jle pop clc sbb icebp xlat cld or (bad) stc mov (bad) pop dec (bad) stc (bad) pop jl (bad) pop cld outsl in ja loope jmp cli in pop inc stc repz popf push pop pop (bad) arpl in aas imull std pop dec jmp sti xor aas cmc fstpt lahf repnz ret mov cld popf jmp dec jnp aaa cld stc ja (bad) mov incb (bad) aas repnz paddb outsl daa (bad) jmp inc jg stc out aas stc jmp mov out (bad) mov jmp (bad) in pop mov sti fldt cwtl cld lahf jg outsb std iret (bad) lcall cld dec push ljmp (bad) (bad) cld aas out sti lahf jg sti cli push mov lret ja inc idivl jg jecxz incl mov sbbl std das ljmp jg das sti (bad) (bad) jg das jnp (bad) mov pop div scas clc sbbl add lods xchg mov aaa clc mov mov ja lcall mov std in std leave jg (bad) std xlat xchg (bad) cli mov lock cmp mov daa jg pop (bad) in icebp pop clc pop fistpll lods jle xlat (bad) in icebp aas dec stc out clc jg sbb cmc daa repz aas clc pop pushl std and lahf xchg std cli (bad) jg in mov sub cmpl sti dec (bad) mov inc pushl stc fist mov out push cld cld push cld jmp loopne scas cld mov fxch jg lahf jl popf jg outsl cmp sub mov fistpll xchg mov (bad) jg loope jno ja xor (bad) in jg (bad) and (bad) aas lcall (bad) xchg idiv lock out cld addr16 das cmp scas inc mov mov out (bad) (bad) xchg mov (bad) mov aas inc (bad) movsbl sti mov (bad) loope in pop (bad) cli das jmp (bad) jmp jecxz call jg das ljmp cmpsb pop pop std popa (bad) jmp cld xor aaa clc hlt jg imul repnz cld sarl out pushl fdivr and xlat pop hlt xchg mov mov incb sar iret jg fcomip xlat jl sti (bad) imul jg dec (bad) mov pop jle fistp loop clc popf jle jg dec int mov mov stos aas in mov incl cld leave scas jle (bad) xchg out sar in repz (bad) cli lret (bad) rcrl pop std out cld push mov cmc scas cli sti decb (bad) (bad) fcomp icebp pop std mov sbb (bad) in pop stc xor jg cld into aas cmc mov fdivrl sti out xchg mov out push (bad) mov mov (bad) (bad) dec mov decb lahf cli pop jle (bad) in (bad) clc insl incl outsl negb ss mov fstp jmp cld sbb outsl stos aas sti mov stos aas loope cld add pop cld out xchg std mov sti fistpll cld insl inc mov int (bad) (bad) std repz cld dec call xchg (bad) jg ficomp lock (bad) sar mov jmp std jg pop dec das fnstsw mov (bad) jl pop jg aas scas std pop jg mov jle xlat clc lret jg mov out (bad) jge (bad) mov jb lock cli sar lcall stc iret jmp mov push lds std inc std pop mov clc jmp inc (bad) jmp cmp pop ja scas mov mov fildl dec (bad) cmc aas cld sbb mov daa (bad) mov call lcall (bad) cmp xor out repz (bad) mov addr16 push inc jg or mov jle das dec pop cmc jmp mov pop mov fucomip mov mov std xlat jg das cmpsl cld out inc jmp imul ficomp idivb pop (bad) cld (bad) pop jg pop cld scas (bad) xchg pop std pop call pop std pop std add dec repnz (bad) pop mov fiadd cmc (bad) (bad) cmp pop dec outsl jle stos jbe scas (bad) in xlat cld gs mov mov fucomi hlt pop std idiv aam cld sbb add std aaa mov addr16 loopne sti pop (bad) es (bad) jg pop inc repnz pop std (bad) out ja fbld (bad) stc pop (bad) mov dec decl aaa sti scas (bad) out aas loop clc ds sti jg imul jg mov pop jg lahf cld (bad) mov ja jmp mov pop jge (bad) cld mov scas (bad) fucomp (bad) sbb jg stc aad lret sti mov mov jg (bad) out mov test test jnp fwait jg (bad) cld cld iret stc aas jle jmp stc outsl sti jnp inc mov (bad) dec mov pushl cld leave aas out (bad) add aas test jg pop cld aas out pop pushl daa std fwait ja fmuls stc aas sub (bad) aas (bad) fstpt call imulb outsl std cmp rcrl std repz (bad) in fisttp je (bad) (bad) jmp cld mov repz std cli mov cld aad push fnstcw pop idivb pop (bad) hlt push mov jg mull mov (bad) xchg fucomip dec stc cltd fisttpll jb or xchg aas gs sahf (bad) mov decb mov cld ja int3 scas icebp ljmp jg mov jle pop cld div dec std sub mov stc mov pop repz cld and int3 fcomip cmpsl sahf (bad) fstpt aas cmc xchg cld lcall mov jns xlat cli daa (bad) lcall decl dec paddd repnz jmp fcomip pop cli (bad) jle testb call pop imull das decb jmp aad negb leave out js aas dec mov jmp xchg pop clc sti mov pop mov aas call mov sti aas fildll mull std cmpsl decb jmp enter dec std int out push das dec (bad) cmp (bad) (bad) ljmp xchg (bad) dec (bad) idivb stos call pushl out mov (bad) jnp repnz (bad) and fcomip pop std jbe les jg cli aaa jg jmp push (bad) stc repz std sub pop std loop incb popf mov mov call das std inc jg mov mov std mov icebp jmp sti jg xchg aas jecxz (bad) repz loope pop hlt out stc (bad) call pushl out out lock (bad) loopne jl cmp rcrl (bad) aas stc dec std and cmc dec jg (bad) ljmp clc sbb pop mov push mov jmp jmp sti inc mov (bad) loopne sti pop mov hlt outsl pushl ja or scas sti ja cld outsl (bad) fistpl jmp (bad) sti das sti mov (bad) out pushl jg jg ja into (bad) sti jg stc (bad) aas repnz std push mov xchg jle lahf cli loopne pop xchg pop aaa mov fwait pop push mov ja (bad) (bad) and std in sub repz in (bad) jg mov sarl (bad) mov xlat das jmp ds fwait lahf cld add iret clc out pop imul insb cli pop aaa mov jg (bad) arpl fwait aad repz (bad) fnstcw (bad) cld in imull jle aas push (bad) clc aad clc aas call mov decb (bad) hlt jg pop (bad) jmp fcmovnu ljmp repnz cli pusha pushl scas dec mov xchg (bad) jns aam cli out call push std push idiv xchg (bad) rcrl pop repnz cld shl jg repz jle aas js cmpsl cld mov ficompl lock std cmp cli outsl (bad) ja jle lahf push std das jmp std push fistp pop dec jg popf aas in mov (bad) mov lcall aas std dec push (bad) sbb jp psubd clc and jmp in icebp pop dec stc mov pop std mov imulb lcall addr16 mov (bad) jmp push push jg aad (bad) jmp xchg (bad) xchg aas xor inc (bad) stos pop decl lcall fbld mov fcomip icebp pop pushl out (bad) mov mov cwtl hlt outsl (bad) jae std fdivr ja pop loope pushl pop mov stc add cli in mov jg call aas pop (bad) pop (bad) fucomi idivb aas mov cmc (bad) sar cmpsl aas stc sub cld mov std inc dec outsl lock xchg cld jle cmpl push scas stc aaa aas fwait (bad) jnp idivl mov jne (bad) (bad) fistp mov sbb jle mov jg aas decl hlt aas cmc mov sar (bad) out mov sbb out std mov fyl2xp1 pushl idiv aad repz neg mov dec pushl mov repnz inc jg dec std jae lcall jns jnp push xlat (bad) es popf (bad) (bad) sub aas jg fild push (bad) (bad) (bad) (bad) in clc out (bad) xchg aas cmc pop dec mov std sar jge (bad) and jmp cld clc out dec ds (bad) int3 mov sti pop lcall xchg mov lret xlat cli (bad) loope jecxz jecxz incb cmpsl (bad) test sti ret (bad) fdivrs (bad) jno stc aas inc jmp call shr cmc jg add out stc lods (bad) std addr16 aas jmp jg das pushl jg out mov clc push in fnstcw aad mov std push mov (bad) mov cli mov fwait cld lahf pop cmc das cld jp int cmc icebp pop call cs fstp loop inc (bad) fdivrp stos aas in out clc cmp fidivr cmpsl clc inc (bad) fidivrl ljmp (bad) std iret cmp push jg idiv test jle push aas sti mov (bad) movsl (bad) fisub xor mov stc mov out jg outsl cli arpl divl hlt fistp inc jg div (bad) (bad) lods jg stc (bad) ja push (bad) repnz cld add out das sti repz mov in call ja stos aas cli pop sti mov stos aaa mov icebp jecxz lock cli cmp (bad) aas stc push std fidivrl cld (bad) mov arpl iret (bad) out jmp sti mov or aad hlt out lods dec dec (bad) cmc aas call jmp in pushl ljmp pop hlt mov pop (bad) in mov cld aas mov pop decb std cltd mov in jg (bad) jg jnp fwait sar fucomp repnz jmp mov out das inc call jg aas pushl jg out clc in dec inc stc idivl out dec std (bad) cmpl (bad) xlat jge cmp mov aas in push iret dec jle mov (bad) push popf cld pop jg cmc decb idiv insl pop std push jg mov (bad) pop pop std imul jle xchg xchg (bad) stc lahf cli ja loope loop jnp inc (bad) mov das cld cmp mov (bad) cld (bad) hlt aas (bad) fnstsw mov jg aas mov ljmp sbb lods dec jg lahf call (bad) jmp std imul scas jg aaa std popa ljmp lods lahf (bad) test push cld push jg pop hlt pop (bad) out out aas icebp inc (bad) jmp pop jmp out cli pop incb ja in (bad) xchg (bad) sub scas jmp xchg (bad) clc (bad) std ljmp jnp cmc fistpll jmp and jg iret cld or adc nop mov sti (bad) (bad) cmc jmp pop cld (bad) rcrl mov mov fstpl sti lahf cld dec jg mov or aas inc pushl notb hlt pop sub xchg cmp xchg pop jl idiv mov repz stos in fnop paddd jg cld (bad) pop cld insl mov pop pop mov aas jmp lea jle frndint pop sti imul pop jecxz scas (bad) paddd paddb outsl (bad) and pop std lcall loop out mov cli ja mov negl icebp out jge pop clc (bad) cmpsb lahf stc xchg cmpsb jmp pop mov jg mov jg repz out ja in call mov inc std lret jg pop cld addr16 icebp jmp pop jmp aaa stc add xchg fucomip mov movsl mov (bad) jmp mov das mov mov pop mov clc mov scas (bad) mov mov (bad) fwait aas loope loope stos fistpll (bad) jmp out jle cmpsl lahf (bad) pop dec (bad) xchg fistpll (bad) cli inc aas sti add std aas in (bad) imul (bad) sti mov jle mov repz mov lods pop jle dec lret dec lahf cld sti jg pop lock mov jg idivl (bad) jecxz std jae ret lahf icebp addr16 lods fldt out std cmp decb jg stos and test repnz cmp cld xchg inc jecxz loopne jle cs hlt ja movd outsl jo pop (bad) out mov (bad) jno std ja jns in in stc outsl pop (bad) jg xchg jg int mov xchg fnop dec (bad) std decb aas (bad) scas mov cmp scas mov mov scas fucomip pop sti sbb leave fldenv adc jg inc jg outsl cli imul push lahf repz test out cld jp into ja repz (bad) cmp mov in pop cmp idiv xchg dec clc mov in std fistpll jg outsl div aas cli int (bad) jbe aad stc xchg ds pop incl ja (bad) (bad) call cld xchg jg scas incb jle xchg xlat jg out icebp aaa cld dec mov inc (bad) in fs jg jg xchg std ret fnstcw stc iret (bad) cli xchg pop (bad) loopne fsubrp mov push cmpl das cli or aas icebp xlat (bad) cmp (bad) (bad) aas jae sti jg je jg pop jg pop lock (bad) push (bad) in std jecxz aad pop cmp pop sti mov aas decl jmp sti (bad) lcall cld mov mov call repnz jle (bad) jg push inc mov (bad) stc ja lods jg das int3 jle lahf clc xchg mov (bad) mov idiv neg inc jmp lahf incl jg push in std mov inc pop std daa das fcmovnu repnz ljmp dec ljmp daa (bad) pop mov ds stos (bad) push ret fucomip icebp fcomip out xor iret cld inc repz icebp hlt cmpsl lcall lret decl mov cld mov (bad) lcall idiv jmp (bad) fbstp aas imull (bad) repz mov pop out jp cli ljmp out (bad) scas lahf pop cld cmp popf push mov ja stos call fnstsw insl sti rcrl aas std or jle iret std push dec lahf icebp aas std sar out dec icebp (bad) (bad) idiv push xchg jg jge sarl mov idiv pop pop aas (bad) sbb das incb mov push mov jg mov call jmp psubq (bad) xor fistpll dec (bad) mov (bad) clc out push mov aaa (bad) ljmp out das cli (bad) (bad) jmp pop fdivr adc (bad) cli mov push pop std cmpl std push daa pop std daa out jg out icebp ja jns imull push out dec jle (bad) jmp popf jg ja sub vmwrite out cli lret (bad) stc fbld cld xchg jg repz jg sti pushf jle idiv mov in outsl pop (bad) mov ljmp jmp (bad) lock out imul loopne decb incb mov (bad) addr16 dec mov pop repz aad cld sub js sub mov sti sbb mov ret jg fbld aaa std popa push mov mov aas stc (bad) std addr16 fcomip lahf jl (bad) addr16 (bad) (bad) (bad) loope jecxz in lahf stc sub jg loope stc jmp xchg lds fwait jmp mov (bad) stc pop stc ja add outsl imul (bad) xchg mov in mov or in push pop call scas jg mov cld lahf (bad) stc jmp outsl (bad) jnp (bad) (bad) jle fcomip cmpsl lahf (bad) mov jg iret jg mov dec hlt lcall incl aas repz jg dec dec pushl out sub fdivr lahf ljmp inc (bad) mov (bad) decl xchg mov inc mov (bad) (bad) in (bad) daa cmp idivl lods pop pop cld repz jge fistpll stos pushl cld aad lds repz cld push jg jmp loope jg mov pop addr16 decb mov out negl mov xchg jge inc cld jno mov cld cs repz push jg dec dec pop hlt cld xlat cld loop cld (bad) fcomip ja cmpsl (bad) cld scas (bad) sahf mov (bad) cld mov hlt addr16 mov (bad) pop aas inc jmp mov dec jg pop std pop jg fs stos aas jecxz jg pop cld das jg fiadd in mov mov mov jmp std addr16 fdivrl mov pop cli inc call jg cmpsl ds xchg std lahf (bad) inc ja repz clc mov mov (bad) mov iret mov out scas stc outsl jge outsl std pop out (bad) stc mov incb xor dec push (bad) dec (bad) loop sub idivb dec jae cmpl sbb sti inc std es das (bad) sarl out mov inc mov out cld out enter mov or lcall outsl lret lcall jg push inc jg stos decl sarl das imul out cld add outsl sti fstpt cld out jg outsl xor (bad) mov pop (bad) adc cmpsb popf aas cmc aad icebp std (bad) dec stc insl dec idiv out jmp jmp outsl not pushf dec (bad) in out sti in ljmp push sti in (bad) mov (bad) clc jg sub ja (bad) mov ja jnp jle mov (bad) cmpsl int out icebp arpl les idivl aaa aas repz incb cmc ja xchg dec (bad) repz dec clc sar mov dec decb mov cld cmp mov (bad) (bad) std mov xor pop aas dec (bad) lret daa call sarl jg fistl lcall leave loop cli cmpsl dec jg xlat clc in incb das lcall ja dec push fwait std mov (bad) clc hlt mov movsb std mov cli pop (bad) sti pop (bad) sbb std pop sub fwait sbb jg fcomip aaa cld inc and aas jg (bad) std mov mov std loop cli add xor (bad) jnp ret jg leave iret in ja cld paddd fistpll mov lahf stc mov aas repnz pop lcall cld push (bad) jg jg paddd ja scas ljmp clc xor in mov lcall pop pushl sbb stc jmp dec mov cmc xchg arpl std xchg ret pop fnstsw ja std scas (bad) out call in cld in scas clc sar neg out int stc imul incl lahf cli daa sub jmp loope push aas jmp std jnp jg das cli scas (bad) std (bad) aaa (bad) pop (bad) lods lds scas (bad) (bad) adc scas pushl in sub jle cmp pop aas clc or test in push mov jg paddd aaa iret ds pop cmc push (bad) (bad) (bad) fisubrl sti push (bad) faddp mov jmp divb or mov in paddd (bad) stc jg jg sti jbe jg jmp aas icebp mov test (bad) jge cmp or mov in idiv icebp aas imulb stc jne (bad) jle mov inc jmp fcomip scas jge (bad) push fdivr push out jle,pn fucomip xlat sti and int3 jg jg das clc add ljmp cld repz scas movsb cmc cmpl scas call popf mov out (bad) aad jmp std (bad) aad decl cld inc aas repz (bad) out call scas jns cli out inc jle pop stc test notb jg out stc ja add lahf aas jmp test std fs pop cld and cli and stc hlt (bad) jnp in push (bad) cli pop pop cld out mov repnz mov adc jle repz std idiv aas (bad) mov sub sti mov call jmp aaa sti pop pushl jle pop jmp std jg,pt dec std pop (bad) jns (bad) (bad) idiv fwait pop call sbb outsl cmc in stc das cld hlt aas cmc mov idivb (bad) daa aas incb jbe das shr pop and std pop mov jg (bad) xor (bad) pop std int mov roll ljmp hlt jg (bad) mov out jg aas not cmc jg lds repnz sti push jle das ds jecxz aad call xlat iret pop xchg mov pop std sbb in stc cmc jmp cmp fldcw pop jge lahf cli mov xchg ljmp (bad) out sti pop (bad) stos aas fs cld sub ljmp cld (bad) (bad) mov pop aaa scas incl leave pop jl (bad) dec idivl aas (bad) pop jle lahf cli out scas stc jmp pop (bad) ljmp popf pop stc xchg in idiv (bad) mov stc adc jmp jnp pop cli jmp iret outsl stc movq xor cmpsb (bad) out mov in jg aas clc paddd mov sarl jecxz das (bad) mov jg (bad) cld add std jae cmpl out dec paddd (bad) in mov cmpsl (bad) mov jle pop (bad) fstpt push paddw in scas cmc xlat (bad) clc aas ja aas decb jg xchg mov (bad) fdivrs xchg inc jg in jg icebp mov (bad) cld mov (bad) mov loope repnz ljmp pop mov std std aas clc jne or sti imul (bad) push lcall (bad) cld xor xlat pop xor pop (bad) sarl iret cld xchg jg jg outsl (bad) pop jnp (bad) out cli pop mov mov pop xchg pop jecxz (bad) arpl out inc push cmpsl std xchg scas pop (bad) loop sub stc dec sub cmc hlt out cld in out aad idivl divb in sti out out push decl (bad) movsl mov call in jle pop icebp lods mov mov pop sti daa std ss aas icebp pop cld ja (bad) test ja das (bad) fdivrs pop lcall pop pop jg mov sub popf mov (bad) clc lahf cli jmp lds std aas dec stc scas jg idiv call in jg mov xchg jg (bad) cli outsl cmp mov idivl lcall lock cld std jg repnz sub xlat pop hlt aaa (bad) xchg jg pop cld lahf mov aad ja lahf stc addr16 xor jle addr16 pop icebp scas cld pop jg lahf test xchg (bad) xchg out cld push leave fucom pop std ficomp stc lret decl jle pop std ja insl jg pop cld lock js pop and (bad) (bad) stc out incl jg out stc mov push mov jg aaa (bad) jmp decl xchg mov (bad) fwait jg aas stc dec jg jg out stc aad icebp pop jge repz push ds pop jg mov push call jl sti push std sti jnp enter mov jmp (bad) jnp sarl cld testl fcomps repnz std ret pop decl iret push aas in mov (bad) fnstsw jnp sbb std sbb pop lcall xlat cld scas mov push pop fs push (bad) hlt lahf sti ret cmpsb aas xchg cld (bad) idivl pop divl cld stos aas icebp lahf inc (bad) in pop icebp jmp std push call pop cmc fwait (bad) fidivrl cld cmp jg adc mov mov jle aas clc idiv sarl incb pop cli sti (bad) out pop stc cmp push jmp jg leave cmc cli mov ljmp jae xor scas mov aas icebp fbstp (bad) jg imul std aad icebp xlat std mov repnz jmp sahf jle decl (bad) cld mov fisttp (bad) (bad) aas call fistpll leave fbstp pop (bad) in pop inc jg jmp stc jg outsl cld or fnstsw jg out dec (bad) aam mov stos jg jg idiv sub clc sbb cli jmp sar (bad) aas notl sti push (bad) sti call pop xchg mov (bad) movd fcomip outsl sti imul mov imul push lahf (bad) stos (bad) cli mov fcos lea jg mov jmp fucomip scas stos incb mov jno dec cmp fistpll pop negl (bad) sti adc cld mov scas (bad) in stc popf mov jp sbb dec fistpll cli xor cli in inc pop stc dec lahf std cli jg fcomip lahf cld cltd jmp jmp lea addr16 jecxz fdivr lock (bad) stc (bad) fdivrp scas std das decl mov cld jge fimull aas std scas decb mov jp clc ret mov (bad) call jmp aas in pop jg sar cmc aaa (bad) mov addr16 fist jg ja movsl (bad) sti mov sub out or cmc sbb or out das cmpsl cmc repz pop cld mov mov (bad) cli (bad) cli das incb jg das cli xchg jg (bad) std dec dec lret aas call std ja out cli xlat (bad) idivb fdivr or jle daa cld out inc (bad) aas movsb cld pop sub jg outsl stc pop jg lahf hlt push pop cld cmp aad icebp fstpl cld sub call jg dec std push mov mov popf das jle dec sbb jg lahf hlt mov div out stc dec (bad) cmp aas push ljmp std push pushl call push daa cld sar aas icebp ja cld lods mov ds jge rcrl outsl cmp sbb mov out clc jnp xchg aas stc xor cmc das ljmp (bad) cli inc (bad) repz lahf std outsl lcall mov outsl decl jg pop cli xchg decl loop cmp mov mov in cmc pop std lret ljmp (bad) mov (bad) in out cld repz fucomip scas js mov dec pop jns jnp push mov inc jle push std push fs dec icebp out cld cmpsl cld (bad) adc std hlt aas mul jg cli ljmp push (bad) (bad) lahf lods ljmp jg (bad) lahf call (bad) fcmovnu loop fdivr push (bad) mov (bad) stc jg aas cli arpl fucomip xchg cld cmp ficompl jecxz (bad) fistpll out aas clc ret jmp dec icebp repz jge lahf mov in idiv pop out (bad) popf repnz std sbb ds (bad) dec pop repz stc stos aas ljmp ja ja in dec jle clc pop mov std inc inc ret aas in mov cmp fldcw mov clc (bad) lahf sti sbb negl pop (bad) sbb and jle push iret jg lods lahf pop sbb pop jg outsl cli stc pop cmc fwait cld idivb out cld (bad) pop sub mov jmp repz cld in mov decb in repnz incb pop std mov mov stc sub pop cli push inc scas repz sti insl mov jg jg out mov mov mov cld out pop call addr16 ljmp hlt mov out std push lret (bad) ja in data16 iret std mov daa aas jle repnz mov xchg loop (bad) (bad) sti (bad) out (bad) sbb sub movsb push xlat stc xchg jle push jg das push stc outsl cld cld ja std mov aad stc outsl cli (bad) inc aas clc fidivr lret mov cmpl push fcomip (bad) cli jmp (bad) and (bad) mov cld das (bad) sar in xchg fwait in imul std mov cld mov pop lahf mov lret jns jle aas jmp stc xchg jno ljmp mov fstps (bad) out scas iret mov jg aaa cltd std aaa mov (bad) clc cmp fcomip jmp or push int cld out (bad) and jg pop lcall (bad) movsb icebp call jg cld idivl aaa insb incl jg pop sti aad icebp jmp inc jg pop cmp out lock (bad) mov xor jg sub repz (bad) idiv xchg pop iret call call jl addr16 repz (bad) pop cld cmpsl (bad) fidivr lock mov (bad) cmp jecxz repz fnstsw inc int3 call mov pop clc xchg jle pop sti lahf cld lea test int idivl (bad) mov (bad) std xor mov dec stc xchg decb mov sub (bad) clc out or jmp in xlat dec sahf jle sbb sub cld outsb mov (bad) (bad) std mov clc iret cld mov icebp ja jge dec std push jg cmp (bad) mov pop idiv call jg pop clc aas std dec jg scas mov mov out stc clc pop aas cli ja aas (bad) call (bad) push call aas jle jmp std mov (bad) std mov mov in (bad) pop jbe clc icebp mov dec lahf repnz cld into mov cld sti (bad) fsubrs cld jae ret pop lock mov (bad) test cld out jg pop negb std jmp jg or sub pop clc in lret leave lahf repz (bad) hlt das cld jge stc lods decb (bad) jmp jg xchg out cmc call pop cld outsl (bad) cld (bad) hlt idiv out jmp cld stos mov aad (bad) jmp pop mov ja (bad) loope std (bad) stc sbb repnz je mov sti xor cmp cmpsl jmp cltd das call (bad) (bad) mov (bad) mov lret (bad) std jg pop cld insl (bad) ss aas outsl dec aas loopne fdivr (bad) (bad) mulb call imul mov idiv xchg (bad) (bad) mov std xchg decb jnp cli cmp cmp aas ljmp xor call fxtract scas cli xchg (bad) lods mov lock incl into scas jl sbb and std jns jmp lcall in shr mov cwtl mov ja add daa jmp ja (bad) jle pop clc mov std sar push aas cld int out popf jmp das sti insl jg daa jle jg (bad) clc (bad) sti xchg call out jl sti mov inc adc std mov mov jge xchg daa mov (bad) clc pop (bad) and sarl std jmp lret fnstsw inc clc (bad) (bad) sbb xor adc loopne in das (bad) std jle aad clc pop cld sub scas (bad) mov test std lahf (bad) sti out in cld (bad) and icebp mull std sti cmpl (bad) fidivr (bad) scas inc lahf stc lret lahf cld scas jg mov dec decb mov aad iret mov hlt inc cld scas aam stos jmp mov mov in cld (bad) dec out push jg cmc push cld in lock pop cld jle cmc into into scas cmc out xlat repz repz mov repz jg scas stc ja dec (bad) mov icebp sarl divl outsl lahf cld lahf pop jg clc and cmc fucomip mov (bad) jl not mov mov jmp (bad) fnstsw jecxz call out jno jge inc ljmp std push jmp ds daa (bad) mov stc sbb (bad) out pop clc fwait mov shrb jns jecxz lock cld stc (bad) sti jg jmp inc aas stc pop (bad) fcmovu cli add (bad) cld stos jg jb into pop xor cli mov aad in scas jle (bad) pop stc sti jle mov iret mov sti sahf ljmp (bad) mov jg scas (bad) jne mov jmp div cld sbb cmpsb jg push lret out std and add mov dec (bad) aas jg aas repz pop mov sbb dec fucomip lret out call ds das std addr16 repnz push lcall (bad) aad repnz (bad) sarl fcomip (bad) cld mov mov test popf aas cli jg inc pop cld out inc out repnz std in mov std (bad) mov call (bad) out std scas mov insl sub repnz mov xchg dec outsl hlt outsl decl add cmp int lret icebp pop mul dec cld imul iret clc sar stos jmp lahf jg jnp cli (bad) std inc outsl icebp adc outsl addr16 dec incl mov clc mov (bad) xchg jg std push cld lahf pop std dec (bad) fnstsw outsl lock call fistpl cld push std or dec (bad) scas jg lahf ss pop scas lcall lock jle aas in std cld ja xchg in aas cli iret jge clc out cld inc jle jg dec cli jnp stos pop clc (bad) std pop inc out jae mov std aas sti das clc pop dec jle mov sti paddd cld paddw mov dec dec outsl clc negb leave push out decl ljmp icebp jg jg dec mov ljmp dec (bad) (bad) fucomip fnop mov cli push pop cld push addr16 fcomip lahf (bad) mov iret es mov std aas stc aad enter xlat jg outsl hlt das cld gs (bad) pop lock repnz std lret sar cmc idivl in cli jnp mov cmpsl jle mov mov adc jb scas cld mov loope ljmp xchg jg jg lock jnp jg inc jg das sti out jg fucomip pop sti sub jecxz mov in pop notb cmp hlt mov push mov fdiv (bad) je paddw addr16 jnp out lock into (bad) mov shll (bad) (bad) jmp (bad) stos (bad) jmp cmc lahf jg jnp jg outsl repz aas (bad) jmp jl repnz jle jmp mov scas stc xchg and dec out mov lahf (bad) in aas in paddw std sbb out dec div (bad) pop repz inc out dec (bad) xlat or aas in aas std cmp jmp pop enter out cld pop (bad) scas aas cmp mov jg lds inc jmp aas hlt imul dec (bad) fdivrp std in (bad) addr16 gs fucomp lock push out cld mov insl dec jg aas jl out jmp mov jle jg pop (bad) out inc aad loope repnz sbb push jg inc cld aaa xor mov call lahf pop cld xchg mov addr16 ja decl pop jle repz mov (bad) and sti cmp lcall mov sarl mov shrb lods jle jg (bad) xchg jg outsl js sbb sub insl pop jl and push jg pop cli cmpsl call call out mov repnz (bad) push daa mov decl dec pop (bad) (bad) insl mov (bad) call xchg jg lods mov dec cld imul inc jmp mov mov cli daa decb sbb outsb jge xchg mov cld mov out sti pop call mov sti icebp aas decl (bad) mov dec (bad) out lahf hlt xlat cld scas jmp mov mov in call mov std mov sti xchg data16 cli lret decl (bad) jg mov in (bad) jb out jmp inc cmp std jnp cmpsb mov jle (bad) std sar cli sti (bad) mov int3 jg iret std popa pop call pop icebp scas lahf cld xchg mov leave fist cmp jae idivl ljmp aas jg scas repz hlt loope repnz push (bad) out pop std dec ljmp pop aas sti insl jle outsl negl lret sub adc jbe jmp jnp jg jg outsl incl sar iret mov paddw (bad) mov inc pop inc jmp aas clc sarl lret jg pop mov pop not (bad) jmp mov sti (bad) mov test iret ljmp call repnz cld std aas (bad) dec jge (bad) fistpll cld popf jg push sub movsl rcr clc dec push decl jg lret in fs xchg push mov mov inc aas repz (bad) outsl lahf cld pop incl notl (bad) (bad) cld ret mov sub stos (bad) in iret cli aas jle aas (bad) aas cli std (bad) mov stc ljmp cld out xchg pop cld or lahf decb xchg jmp in fildll xlat in incl loopne stc mov fcomip imul sbb iret jg jg out std xlat (bad) mov clc fimul movsl pop cld leave enter inc ja xchg fucomip (bad) lcall jle ja in jmp cmpsl pushl (bad) pop stc mov icebp pop cld sar jne pop mov cltd loop fucomip frstor jmp mov sti aaa decl outsl decl jle inc std fidivrl (bad) movsl push dec cld iret (bad) (bad) (bad) ja imull sti pop stc xor fdivr cli call jg out (bad) lods inc jg decb pushl xchg (bad) ljmp enter mov cmc mov mov pop fdivrl push incb out cli jnp mov jg outsl clc sbb daa jg mov cli outsl sti aas jle mov lock (bad) jae lock repnz cld in icebp das std jmp in aaa cli pop incb cli fwait jle mov (bad) mov addr16 mov (bad) cli outsl cli inc (bad) fidiv mov jecxz (bad) cli cmp pop mov jg das (bad) jecxz sti in (bad) stos jg mov stos jg jg paddd (bad) aaa lret jmp mull push pop std fidivr stc mov lahf clc pop cld pop stos aas cli scas cli add mov fcomip stc jg negb push push mov jle fdivrp pop stc pop inc fucomip psubb jb negl fbstp outsl std arpl pop std mov pop (bad) cmp icebp (bad) pop sarb jle lahf (bad) repz icebp (bad) sti dec pop clc xlat jle js inc jge mov mov jg outsl std scas (bad) in jp fstp jecxz jl push jg outsl lock fidivr pop repz std xlat jg jg jmp into jg inc (bad) mov jnp cmp (bad) aas cld xchg dec (bad) fistpl pop ljmp (bad) mov pop mov addr16 incb xlat inc jg out cmc pop push cld push jg mov aas icebp (bad) mov cli mov aas mull jle jg not (bad) cli jg fistpll mov cld (bad) repz mov (bad) es jg lahf dec sarl cmc sar fcos (bad) lahf (bad) lcall std mov out repz std (bad) rcrb aas sahf mov mov (bad) jmp cli lds idivb std mov lds sbb push mov dec pop ljmp jno sbb das jg out repz std dec jmp das js pop (bad) in mov out jp lds paddd mov stos jg jg lahf cld lret jg jg sti aaa decl psubb (bad) dec lcall (bad) aaa stc aas jg push std bnd lock inc lahf (bad) mov idiv insl (bad) mov aas xlat (bad) pop incl xchg xchg dec (bad) in ja (bad) jmp cltd pushl pop xchg push sar mov cmpl decb inc jg lahf sti notl (bad) push fcomip pop (bad) pop fdivrp lret sbb fcomip xlat std popf call pop lock jg hlt in cli das (bad) loope (bad) negl cld dec jecxz cld push sti imul mov cld ja (bad) pop (bad) sbb jns lahf (bad) (bad) mov jg (bad) cld jmp mov dec std paddd jg jg scas mov dec icebp (bad) mov ljmp sti aad outsb icebp leave lahf xor jg in stc in jle mov decl cld xlat decb pop std jae mov jns,pt mov outsl mov cld addr16 call mov ja mov aas hlt jmp sbb pop cli pop lea lcall pushl mov (bad) xchg push inc mov lahf stc pop (bad) cmp xchg mov aas jmp in jb sub pop dec cld push push call sbb cld sbb cmpsb jg fcomip fwait inc scas repz xchg incl iret ds cmc ds imul mov (bad) jle (bad) mov fistpll out stc fistpll mov jg mov cmp imul jg (bad) sahf push xlat cld sbb bnd xchg mov (bad) (bad) call mov std mov jmp lock std jle mov test jl out jns leave scas sti dec jg iret (bad) cmc jg sarl out dec (bad) test lret inc mov outsl dec jg mov xlat (bad) (bad) (bad) cmp jg (bad) push jg clc in (bad) iret (bad) cwtl aas (bad) aaa (bad) clc aas std lret jg outsl cli mov jg in jmp bswap out cld mov in sbb cmpsl jg push sub mov jmp jg out std fistp into ds aaa jle push jg mov scas (bad) mov inc daa jg pop hlt out std mov jno fucomp outsl repnz sbb out mov sarb (bad) ja repz lahf (bad) daa cmpsb inc jg fwait into decb ret xchg (bad) jmp inc std fist repz std out pop jge stos jle fistp stc xchg aas cmc jg (bad) loope ljmp fnstsw lahf stc add (bad) clc mov dec js iret cli xchg jmp (bad) iret (bad) jae jg jmp sti (bad) dec decb out sbb xchg pop mov cmp stc push ljmp mov dec in loopne cli std addr16 cld cmp dec std outsl jg das fdivr push stc iret dec mov jg das cld out xchg dec repz negb (bad) daa int3 decb jmp (bad) mov mov mov (bad) clc add out int stc lahf jle push (bad) cmp aad jg jg out sbbl shrl jle cli mov arpl xor jg clc xchg pop jg sti iret jge out loope lock cld aas jge pop cld jne fldt jnp push cld sti jg outsl jns sti adc (bad) stc or mov incb lcall outsl aas sti gs lahf repnz ljmp lds jg daa outsl sub hlt fwait out (bad) aad cmc pop lock in push std popa jg jg pop lcall lcall (bad) (bad) xlat lahf cld push out dec mov (bad) in stc xchg pop pop std inc mov repnz jg scas std cmpsl std ja ret scas xor stc in fcomip mov out mov (bad) in jg cmpsl jle ret (bad) call push mov sar ljmp icebp mov fdivr fistpll push dec sbb fdivrs (bad) pop (bad) hlt push out das lahf inc das mov hlt cmpsl decl (bad) gs (bad) jmp or pop stc xchg or out dec xchg das cld jge mov pop jle scas cli xor cld fistl test pop pop cld jae out (bad) jmp jg jg (bad) fstpl decl cmp (bad) clc imul lret (bad) in idiv scas (bad) mov jnp ljmp lea stos jg paddd in (bad) out (bad) mov jmp lahf jp dec decb pop incb mov aas (bad) jnp ret jg jmp sti lahf lcall lock lods ljmp loop (bad) icebp jg dec decb decb lahf push into out sti (bad) ljmp rcrl (bad) fisubrl idiv std (bad) in (bad) pop scas jmp jg hlt idiv int jmp jg mov sti decb scas stc fwait lods mov mov jae sarl repnz cmp fistpll (bad) cli (bad) imul (bad) (bad) sbb (bad) aas mov cld lods dec in aas ds (bad) mov xchg mov (bad) mov std xchg incb sar fbld jg (bad) popf jg (bad) (bad) mov std jecxz lahf (bad) out jg cmpsl jg mov js das mov mov inc fucomip iret ljmp outsl stc mov ljmp mov outsl cli lea ljmp xlat (bad) cmpsb jg aas push cld mov ljmp (bad) shr cld adc icebp fcomip (bad) mov jns pop cld sbb mov mov cmc jg cmc (bad) jmp loopne clc cmpl jg fist sti aas repz cld addr16 incb ficomp push xchg enter (bad) stc ret mov fdivrp lds jmp lahf decl mov das ljmp jne das (bad) cmpsl jg mov pop jg,pn stc fcomip out jbe (bad) sar icebp pop sti xor jmp ss std cmp fistpll (bad) aaa dec mov xor out call pop test cld lret mov jg pop jle outsl jmp jg push jle xchg aad stc paddb mov jle outsl fdivrp mov cli das clc (bad) jg jg repnz incl dec leave jle scas mov mov std xchg jg in cli test xchg aaa std push inc pop mov ret jmp aas sti aas sar leave jg addr16 shr cld outsl jmp shrb iret fucomip ja sti sub pop sti dec call pop push inc pop clc leave ja xchg cmc lahf std (bad) ret idiv dec (bad) mov leave push (bad) jle jg out sti aad dec std lods (bad) jmp jle mov aad pop imulb stos movd lret mov dec pop std pop call aas cmp (bad) dec fbstp push (bad) cld add std mov cmpl dec (bad) xchg (bad) jmp cld pop mov fistp int pop sti aaa std fstpt fildll std pop mov push out push (bad) xlat lahf cld idiv sub xchg mov mov cld xchg jg out shr imul xchg cli iret sti sarl aas ljmp out cmpl mov out stc call cli inc std es lahf lock ljmp mov std push cmpsl lahf pushl lcall insl int rcrb jmp lret cmpsl (bad) std out idiv jle or (bad) (bad) cli push std (bad) mov pop jg fbstp std dec mov stos (bad) das clc mov rcll int3 scas cmc sub fnstsw sar jne aas cli push jle mov out ja xlat pop icebp iret std popa jmp jg inc cld xchg jg cmc fistpll jle cmp mov mov fstpt pop divb lods in (bad) aas mov cli (bad) sti adc idiv in aas fwait sahf xchg (bad) clc clc rcrl fwait cld in aas (bad) ljmp jmp (bad) mov decb stc dec sti das jg lret pop mov incl (bad) fcos jge mov das stc leave aas sti (bad) in ljmp jecxz stos pop out mov idiv out aas sti (bad) mov idivb and jg shr lods daa (bad) icebp mov out (bad) fadds std mov mov (bad) xchg adc mov ja mov xchg mov stos (bad) in jg aaa call lock mov mov jg mov xor (bad) pop sti mov jecxz cmp sbb xlat cld xchg (bad) mov cli fwait jg fcomip (bad) pop rcrl iret jge inc mov push aas clc cmpsl cld push (bad) stc aas (bad) fnsetpm(287 (bad) pop ljmp fcompl out incl ja lret (bad) out cmc aas lock (bad) out aas (bad) push push push fcomip lahf dec jg mov jnp (bad) aam repz mov das stc or jecxz decl ljmp pop sti (bad) dec push cld stc (bad) std mov (bad) repnz loopne sti aaa (bad) in fcomip icebp daa das incb dec decl pop (bad) (bad) jmp jae fucomi call jg mov outsl call cmc aas sti sbb sti xor das clc jne jne (bad) xor (bad) cmpsb sti adc jmp incl cmpsl decb decl (bad) jmp mov dec aas sti xchg aas (bad) cmpsl (bad) mov insl jg iret push (bad) (bad) hlt pop clc lcall pop lcall movsb (bad) out paddb mov sbb (bad) mov outsl std push jmp pop cli lahf (bad) sarb hlt mov fwait jmp pop ljmp movsl (bad) aas call (bad) loopne lahf stc xchg mov jmp jg lahf icebp jg stc sti call jg mov mov adc repz pop dec icebp (bad) pop std outsl std cmp call stc push jle outsl mov aas and sti jecxz incb fidivrl out (bad) aas xchg push lds push in (bad) (bad) xchg (bad) pop (bad) cmp cmpsl ljmp jg mov pop jg aas in scas clc mov mov imul fbstp std ficompl push jg fucomi and clc and les jge fwait lahf (bad) sub iret fucomip pop std lret scas jp stc (bad) std mov (bad) cmpsl cld lds ds sbb cmpsb std mov ja sarl push cmp incl icebp fistp pop fistp outsl repz lret push outsl clc mov pop imul das clc xor out cld test stc out idiv loopne call xchg (bad) std cmc scas clc mov mov negl jg out imul jg (bad) jg lods (bad) sub (bad) mov jg jge adc std (bad) (bad) cli fcomip out repz (bad) daa sub (bad) sti (bad) js xchg jns fwait jle int hlt fistl repz call fidivrl stc insl lret xor mov clc pop std push inc ja nop mov cld stos jmp stc sti xchg jg xchg (bad) call (bad) mov incb ret push daa mov (bad) lahf jns cld jmp push pop cld leave lahf std jnp sbb (bad) xchg dec iret lcall decl (bad) jg int (bad) aas cmp das dec movd pop in jle mov (bad) ljmp clc out std clc lock (bad) repz hlt aaa cld mov pushf dec jg dec pop cld popf in cld jle fistp jnp ss ljmp idivb in ljmp sub out std loopne jg in lahf pushl cld test mov lea fucomip xchg lcall inc jg mov (bad) jg out std add leave jg cmc fstpt cld (bad) pop (bad) repz (bad) (bad) hlt fistpl std mov repz jg jg xlat jl pop jg outsl cli imul dec mov idiv lret aas (bad) frstpm(287 mov mov ja movsl sti (bad) mov test mov jecxz xchg inc aas je (bad) mov lahf icebp ja jge fistpll jmp xchg lahf (bad) jns outsl stc push incl (bad) mov dec decb idiv aaa push aas imul fucomip iret std call lcall idiv lods jg mov sti mov call scas mov sbb mov iret (bad) ljmp jg pop fisub stc leave out iret cld push mov clc adc cmp cmc jecxz jg jg or (bad) fstpl xchg aas jl aaa cld (bad) pop std sbb (bad) mov jg (bad) fcompl daa fdivrp sub inc (bad) das mov pop out (bad) clc lods jg (bad) jle aas cli (bad) (bad) std jg aas stc jg repz ds repnz mov dec (bad) in lcall leave jle std jecxz sti jge in aas idiv fdivrp aas ljmp incb mov out mull (bad) in ja cmp pop repnz cld add push (bad) fisubrl fdivr sub mov mov pop stc out mov (bad) sub repz (bad) in std xchg xchg pop dec hlt sti repz jg mov (bad) dec (bad) cltd jg lahf clc daa mov pop repz push std daa pop mov iret jg outsl (bad) movsl iret push incb (bad) jg aas cli or xchg cld xor pop (bad) repz jle fcomip aas cld in aas jle das adc call jmp outsl pushl fstl (bad) fistpll lods (bad) mov lock (bad) mov pop cmc sti ljmp lahf (bad) lret jns,pt sti cld and imul mov idiv aas incb out aas cld cmc (bad) lods fucomip das cld mov dec decl stc aas push dec scas std (bad) adc das jle in xchg dec mov mov (bad) rcr loop clc scas mov outsl cld jnp xlat jg outsl lock (bad) sub (bad) or dec cli (bad) jg sbb movsl push pop sti iret std idiv enter jg paddd div ds (bad) fstpt dec (bad) jne jg jg mov jl cmpsl (bad) xchg aas out std or (bad) std pop repz repz lahf mov jg mov clc paddw loope fistpll mov addr16 (bad) js aas mov (bad) fcompl idivb (bad) push lahf cld iret jg outsl (bad) cli xlat (bad) sti (bad) fsub incb (bad) sti (bad) cs jg addr16 mov idiv jmp dec jle (bad) clc test adc incb (bad) cmp xchg jle lahf clc loopne (bad) sbb decb (bad) (bad) (bad) loope ror jecxz cld movd sbb xchg (bad) jg out repz (bad) aas ljmp jg lahf cmc shrd pop out mov aas in sti sbb idiv ljmp pop stc jecxz ret mov lahf clc rcrl push mov pushl test fsubrp (bad) cld int mov (bad) jle mov iret jg mov daa jl outsl push (bad) repz stc movsl (bad) clc pop cmc xlat lcall jg fcomip xlat call jg aas cli das std cmp stos ljmp fstpl xchg mov addr16 xor mov iret jle pop fnstsw xchg aas in idiv (bad) jmp mov iret in jg stc sti call incl cld stc jg outsl mov stos (bad) jmp iret incl mov jg ja (bad) decl test mov fstpt (bad) mov jne std xchg sbb xlat push (bad) incl sti decb xchg decb in mov (bad) out inc pop cmc xchg cld xchg scas incb sti aas cli addr16 in jg,pt daa std fistpl mov xchg jmp xchg mov decl repnz jg fild mov scas stc pop (bad) sti jg mov stc xchg pushl sarl mov loop clc aas jle mov mov ds or stos ja lds (bad) (bad) fnop test (bad) (bad) test cli jnp mov (bad) out (bad) cli outsl cld sti mov sar in stc jnp xchg push jg addr16 jle pop pushf (bad) mov iret out idiv (bad) mov std aaa cld out (bad) clc push daa cld fldenv push das pop decl xchg jg outsl jbe push jg mov jnp std ljmp out jg movq (bad) xlat mov mov std iret jg jg clc ja lret (bad) mov decb repz outsb inc leave jg (bad) fstpt outsl stc daa incb imul out clc mov jg fnstcw cli outsl push (bad) cli outsl decb xchg fnop jmp clc (bad) jle adc cld mov jmp scas sti push inc jg aaa clc inc pushl jg addl scas (bad) jmp mov out clc cmp aas loope std fnstsw aas loope sti pop (bad) mov clc int es lahf idivl push jg outsl mov das std addr16 pop mov in (bad) sbb jg icebp outsl repnz pop decl xchg leave lahf divb cmp into (bad) jg outsl hlt clc paddw jbe movswl aaa (bad) sti mov out mov (bad) jnp idiv jle aad call inc fstpt sahf std jle rcr imull ret jg mov jp daa ljmp lock jle pop cld pop jg mov out dec idiv in rorl popf pop (bad) (bad) (bad) out push std add mov mov (bad) clc mov std mov pop jg lahf hlt aaa mov out (bad) decb xlat cld movsl mov mov jg lahf cli mov jmp stc adc jle scas cli idiv loopne rep aaa inc pop lock (bad) and jg sbb or outsl cld inc sar jmp repnz negl pop mov pop jg bnd hlt das sti xlat (bad) mov jg cld pop daa (bad) sti pop imulb std ja loopne cmp fwait inc aaa mov jg (bad) std iret std insl aad mov pushl sub cltd fistpll pop jg aaa jl inc jge pop lcall mov cli idiv add (bad) (bad) std idiv imul mov cli out std (bad) loop jg outsl daa (bad) std repz paddw movsb jg pop mov fbld fwait push into (bad) loopne loopne cli ljmp lock lahf icebp out (bad) jnp ja fstpl loope push lret jg xchg mov (bad) adc lahf hlt cmpsl jl lods repz cld dec jnp push aas cli repz scas mov outsl std pop cmpsl mov xchg in outsl call mov mov jmp incb pop cli adc loop cmc pop cld cmp out incb dec scas xor lods lcall xchg (bad) fcomps push incl xlat repz loope cli insl ds (bad) jg xchg (bad) in aas negb cmpsl jmp pop not mov fucomip mov icebp iret scas idivl decb fucomip shr xlat sahf cmp jle loop clc sti (bad) clc pop das pop std cli aas std push cld jecxz fnstcw out std pop hlt xor cmpsl mov std (bad) mov jmp idivb jle mov xor decl jmp (bad) jg std dec (bad) in out cmc xlat ss (bad) out aas repnz (bad) cli xlat hlt idiv mov dec jle in mov mov mulb jg out lock sbb (bad) xchg (bad) in xlat (bad) mov int cld test jmp not decl lret lahf hlt idivl aas incb aad stc negl outsl (bad) std xlat jecxz out aaa stc sub cld aas icebp pop jge aaa incl ret das stc paddd jae out fnstsw imul mov stc out es in paddb xchg mov ljmp sub cld pop iret incl mov bnd into (bad) (bad) stc mov decl xchg and push (bad) ljmp clc aaa cld int loop (bad) in std xlat (bad) jmp gs das call dec lahf ljmp mulb adc cmp aas idivb jg xchg xor dec decl (bad) pop xchg lahf fcos push jge,pt jecxz leave aas imull icebp scas cli mov (bad) mov jp sti fistl in into jg paddw in std out (bad) scas jg mov ljmp outsl (bad) stc call mov push (bad) clc iret std popa aad icebp ja mov out cmc das std clc xchg out incl lahf push (bad) cmp in (bad) js cmp mov aas nop sar fnstcw (bad) cld mov cmpsl jle jg pop cld sbb idivb pop jg std push std out fnstcw mov mov jmp jecxz and jmp clc sar mov jg rcrl cld (bad) mov push out (bad) cwtl pop cli inc std jns jmp lahf (bad) out aas call jbe pop scas out rcrb mov cld ret inc mov jge daa jg aas repz lcall pop cmc xchg xchg mov cld pop jmp xchg aas (bad) sti pop jle stos xchg (bad) in pop cli xchg daa mov or std hlt (bad) cld (bad) das sti sbb mov push xchg lahf cld aas cli popf jle (bad) pop cmp (bad) (bad) cli xchg lahf cld cltd fnstsw in pop mov aas decl sti in std out repnz jle pop cld pop jg pop cmc ja in idivb std rcr repz stc lds loop push outsl jle mov inc pop sti in das cli inc cmpsl jg jmp push pop jge clc sti jg lcall setge fidivr mov cmpl std out cld mov (bad) and mov aaa cld xor out pop icebp jmp lds lret (bad) sti pop cld add (bad) rcr ljmp lahf lock mov xor ljmp jg insl decl mov cld aas mov xlat adc cld repz stc fwait dec decb (bad) lods ja fidivr aas std paddb iret cli or psubb lret (bad) lahf cmp cmpsl push std inc lahf (bad) out sti cld scas (bad) imul fucomip iret cmpsb cld jmp cld (bad) (bad) gs cli gs sbb lahf jmp mov dec jle lods mov mov lcall testb pop (bad) sti ja (bad) jecxz cld mov sti push icebp divl into mov sar in hlt sub cld scas mov imull sub jle scas jge mov sarl dec push mov mov out push das mov fucomip mov imul (bad) cld (bad) lods (bad) (bad) jg mov insb sti lahf sti mov mov lahf push mov aas repz (bad) cmp lods pop mul jg and outsl xchg aas clc repz cwtl aas jle daa (bad) (bad) pop cmpsb push jmp mov xchg stc lahf stc adc mov in aas decb jle ret fcos cld dec std cmpsl lds repz stc imul (bad) in jg aas cld into jg lahf lock std cmp fdivr sbb stc aas cmp sbb arpl inc mov pop testl pop cmc pusha sti out cld (bad) in pop (bad) jmp loop jg das mov (bad) sarl (bad) lahf cld repz scas pushl sarl outsl ljmp xchg movsl xlat mov mov loope ds (bad) in cld sti std loope dec mov bnd cmc (bad) sarb aad mov (bad) negb jp lahf stc stos out std iret adc (bad) outsl jmp jge leave lahf clc std jmp push call lahf negb xchg cld jle pop std or std mov cltd push aaa std mov pop repnz outsl pop std xlat mov jge addr16 dec iret mov fstpt mov sar xchg hlt push incl inc stc ja std icebp (bad) cli and pop lcall xchg mov (bad) ljmp jmp cli stc out (bad) addr16 fcos ljmp ljmp mov jg notb mov jle mov and mov jg mov call out pop cld out xchg (bad) pop call xchg mov fildll out call decb cld stc out mov lret mov das mov idivb out cld mov daa aas repz dec (bad) inc iret mov cmp aas stc daa lcall pop fidivr lahf (bad) cs iret stc cmp cli pop lcall jg movsb cld aad das daa (bad) jmp cld lahf jg jg outsl pop popf std xchg mov jg (bad) in aaa incb ret (bad) cld scas cld fistpll icebp jg aaa decb sti fwait vpsubusw mov (bad) mov lret jg lahf stc sub clc aaa jmp fwait mov enter dec pop icebp leave pop cld (bad) decl jg jmp jmp stc mov std and cmp (bad) stos jmp mov mov mov cld cli (bad) out jg xchg mov push jg aas loope fistpll (bad) jmp xchg mov (bad) repz cli jecxz xchg loop cmp fldt hlt pop cld lds (bad) (bad) (bad) (bad) jmp decb push mov lahf (bad) das ljmp stc jecxz fistpl outsl cld (bad) hlt outsl (bad) fwait out jl arpl shrl cld and jmp mov std ja in pop idivl jle,pn pop jae aas jmp push mov call mov lock ljmp outsb idiv fsqrt (bad) iret lahf std pop jmp xchg jg pop (bad) cld sar jmp cmp inc in (bad) adc pop aaa idiv call sarl repnz pop mov mov lock (bad) (bad) mov mov ja outsl (bad) xlat lcall scas pop std ret jg aas cld scas cld xlat (bad) fdivrl sar in jecxz cli xlat (bad) cmp negl jmp mov clc fwait out mov sbb call xlat pop hlt xor das pushl cld fcomip mov mov (bad) outsl jns xchg (bad) pusha hlt iret std gs cmp mov outsl incb push pop std push mov lcall (bad) jmp mov in ljmp std jmp and daa (bad) in mov (bad) imul mov repnz sti iret (bad) xchg pop cli daa jg out std stos jg out mov cli in push (bad) out jg lahf (bad) mov mov imul cld and ret cld in clc jg jle aas repz (bad) imul aas icebp cli (bad) cli in pop lcall jg jg or xchg (bad) (bad) sub loopne jo cld xlat stc das daa mov pop pop jg loope dec (bad) jmp cld lea jg fistp mov jl cmpsl (bad) adc (bad) cli cmp das jle scas js out sub pop clc lahf pop std pop push pop mov cli scas incb sbb std idiv lcall (bad) fisubrl aaa into jg pop sti or cld out in insl std mov lods ljmp mov aas loope outsb push aas idivl stc int lcall iret ds out out std out jecxz lock incb aas cli jnp push jg std jecxz imull std iret std ficomp repz test ret aas cli bswap (bad) mov lock hlt pop jl imul mov jmp mov dec lahf cld xchg jg outsl mul psubd cld xlat out ficomp cld xlat addr16 decl (bad) (bad) mov mov mov idiv iret jge mov mov jle mov cld das jle call push std data16 lahf push lahf cld idivl fnop hlt iret stc fstpt aas lock ljmp jg ret push pop cli dec les cs jmp std mov dec incb lock jg mov (bad) call ja gs xchg jno mov jmp stc in out mov jg jg addr16 pop (bad) or iret out clc jmp jg (bad) int (bad) jg jmp xchg idiv (bad) pop out fwait cld mov out cld fwait mov xchg (bad) scas jg pop lock addr16 lahf repz adc pop inc jg add (bad) daa (bad) xchg lds pop std dec mov das (bad) pop jle mov stc (bad) out mov call cmp cli cmp jg paddw das jl sti fwait out cmp outsl mov jg dec cli and mov mov outsl pushl icebp icebp out (bad) lret (bad) (bad) (bad) cld loope dec div mov xchg call out std (bad) push lret mov stc dec std rcrl std pop std idivb (bad) lcall cmp push (bad) std aas cmc pop lcall cli or repnz scas clc mov (bad) mov cmc imul inc jg out cld ss aas jno (bad) decl jecxz pop cmc cmpsl std xchg mov add xchg incl push sti jmp lcall addr16 pop sti cmp jg pop stc sti out push std fwait pop incb fstpt negl dec mov clc idivl push mov cld push inc scas clc test sbb aam stc fistpl inc cld out call idivl (bad) in mov aaa stc dec (bad) mov cld das incl xchg xchg ja sbbl pop (bad) fstpt inc pop stc mov jle stc out cltd cld cmp loop (bad) cmp out decl (bad) pop xor repz cmp rcrb jmp (bad) cmp add lahf repz jg mov mov jle mov stc test hlt mov (bad) ficom fwait cld outsl cmp repz sti scas (bad) mov out (bad) clc (bad) pop jg jmp mov pop jg aas lock std pop mov loope (bad) in icebp aas dec jmp pop jg das sti or cld dec mov cld mov inc cld sti call mov mov push (bad) stc mov mov mov cld icebp (bad) fcompl adc jns sbb popa (bad) cmp fldcw jg mov jle repz pop aaa mov scas outsb jg aas loope jg out cld mov js sbb ret outsl leave jg jae jmp aas cmc aas jge mov jg lahf je stc pop cli (bad) les xchg (bad) daa leave outsl cld daa lcall (bad) fistpll inc pushl out aad cli mov mov out int (bad) dec (bad) mov incl xchg jg imull xor and mov dec call push xor stc scas lcall mov ljmp icebp (bad) jmp int3 pushl out clc lahf cld pop jle aas out push mov mov cld popf mov jg jg lahf stc jnp icebp aas call pop ljmp std (bad) aas inc (bad) jmp (bad) lahf sahf jle jg push (bad) cli mov inc aas cmc xlat (bad) imulb mov aas std mov push scas stc xchg mov jnp aam (bad) cld loope scas stc imul mov pop std mov out incl mov out inc cmpsl jg loope cli fildll mov jg sar jne ja clc lahf xchg lahf cld add scas iret (bad) cmpsb pop cli idiv mov jle cld cmpl lret mov clc loope stc pop push lahf cld lea lahf repz iret decl mull scas cld xlat (bad) call (bad) stc pop std cmpsl cld jnp (bad) mov xor ljmp jg sbb mov aas stc jg or das js paddw push fistpll sti pop mov ljmp dec jmp lock lcall sub (bad) jnp mov xor mov push (bad) xchg sub call cli xchg jmp aas cli psubd repz cs aas jg iret jge testb jg lahf lock std idiv aam imul (bad) and aaa std shl call (bad) mov (bad) in pop aas cmc mov lock mov fstps hlt jg jg outsl lcall jg aas (bad) aas movsl clc std push pop inc jg (bad) clc pop incl jg mov daa (bad) jbe lret das cli sbb cmpsl (bad) mov jg loop push jg sti ja out push das sti leave jg loopne jns pop cld leave mov sub int jnp push in jg jg leave lahf icebp mov mov (bad) jmp (bad) clc idiv frstpm(287 sbb (bad) loopne std jg les (bad) cli xlat (bad) fidivr (bad) in out mov pop call xchg cmc idiv hlt scas scas (bad) sar lods std out mov jg fist daa jmp pop mulb dec mov jecxz (bad) jg pop repz ret cmp cmp cmc outsl xchg pop cmp jne fistpl pushl ds lahf push out clc lahf std cmpsl (bad) cltd jmp outsl pop ljmp cli xchg mov ret (bad) fdivrs loop cmp shufps das cld and cld or int out clc sti xchg aas std aaa cld sarl (bad) std mov mov jmp fucomip jg lds inc out icebp (bad) (bad) pop mov (bad) xchg mov std (bad) jle pop jge mov pop dec jg xlat test (bad) (bad) dec jnp xchg mov pushl pop das (bad) fsubrl jmp sti aas (bad) out loopne stos jle out jne jecxz scas (bad) xchg push (bad) pushl loop movsl cld rorl and fldcw jmp inc flds and repnz decb ret icebp mov cld out mov jmp neg iret in call mov sti (bad) fistpll (bad) (bad) std cli lret jmp fstl idivl push xchg pop cld sub push pop std xchg scas lcall std jne xchg mov aad jbe or aas jmp fnop daa sahf lcall xchg mov inc outsl (bad) outsl (bad) pop jmp jmp std jge scas jg jmp cmpsl cld adc (bad) (bad) lods call std xlat jg mov idiv and fistp mov (bad) out (bad) (bad) daa (bad) movsb scas fdivrp inc jg push jnp shrl out jg aas std imul jg aas std sbbl neg std int3 pop cmc sbb cmp out or pop cmc (bad) cmpsb jg pop (bad) mov aas cmc idivb aam js pop cld xor (bad) iret cld gs mov lock outsl jb inc decb call mov imul jmp lahf icebp clc aas clc pop mov mov jecxz in lahf sti addr16 pop icebp out cld (bad) inc outsl sti scas sar ret cmp xor (bad) jmp jbe out aas xchg in std cs fwait aas std dec std daa pop aas outsb inc cld fnstsw xchg jg mov clc aaa cmp pop (bad) fcmovnu call (bad) in cmpsl cld std pop cmc iret jmp lahf clc inc push (bad) call mov leave jg jg cli inc pop cld push iret dec push jg jcxz icebp hlt and pop (bad) mov imul aas cmc movswl xchg mov leave into aas std pop cld (bad) pop fidivr out int3 out (bad) outsl cld pop jg fcomip ljmp pushl in jg (bad) (bad) cmp sub mov ret pop std mov enter insl (bad) cld scas cli jnp test cmc imul sti scas decl sti pop (bad) out jg pop std call in jg xchg out daa jg fcomip xlat cmp (bad) aas xor sbb icebp imul jg aad icebp (bad) xchg leave mov aas loopne jns out (bad) sbb stc xchg sti call fcomip jg (bad) in jge pop std aad dec mov outsl std popa jg into in outsl xor push scas std out std pop ja call push pop icebp out pop pushl jg loope clc aaa (bad) icebp aas cmc xchg mov jg addr16 int aas mov mov inc jg cld pop jmp jge dec cld icebp call lahf ljmp push jg das stc imul (bad) push (bad) in loop std imul (bad) (bad) push jle out cld movsl push das cli fistpll (bad) call aas ljmp loop clc jne mov cmc (bad) aas mov imul decl fdivrl cli (bad) movsb mov pop in sti push cld cli shl idiv sub xlat cld dec pushl notl aaa aad xchg fstsw aas stc cmp (bad) jg pop jno hlt sti xor cmc jg cli pop std (bad) vmaskmovdqu in in outsl clc das jle jg (bad) js std dec xchg (bad) jg jg gs test lcall decl js pop call loop addr16 std sub xlat std pushl stc (bad) (bad) idivl imulb inc mov scas cli xlat jg fcomip shrl aas incl loopne call (bad) fnstcw mov mov std cmp sbb es mov out inc mov jle mov xlat in lds xchg jmp lahf repnz inc mov icebp push std xchg inc out (bad) jnp sub aas std mov pop (bad) std (bad) jmp ljmp std push mov jg mov sub dec (bad) call xor cmp (bad) das jle cmc adc loop fwait cld mov pop cmc aas ljmp jg mov sti jmp cmp pop (bad) cmp cld stc lahf cmc mov cmp std incb mov mov lahf decl push lahf cld jbe (bad) out mov sbb and fsubp push cld mov clc xlat cld aad repz cli jmp call fucomip cmpsl jmp ljmp (bad) repz jle ljmp pop std lret jmp pop mov jg outsl cli stos jle fucomip das sti leave lahf stc mov push pushl sti (bad) mov fstps (bad) jnp into (bad) mov mov lcall das (bad) cld aas cmc push std ror loopne clc mov jg dec call xchg (bad) repnz paddw std xor ja insl (bad) stos lahf and icebp lds repz outsl sti jecxz jg,pn fbld jnp (bad) lahf push clc (bad) movsl clc stc (bad) js std lods (bad) ljmp sti dec leave jg std decb mov ds jmp push cmc mov jae pop mov (bad) sti jmp add out mov pop repnz jl iret (bad) in idiv out mov cmp movsb (bad) stc aas dec lods jg mov dec incb decb jg jg pop pop pushl call (bad) mov daa lcall cmp lock pop push jg push jg movd (bad) cld jae cld loopne pop push dec (bad) push (bad) scas clc std jg (bad) dec popa bnd call paddd jg xchg aas loope sti xchg (bad) sti fcomip out std add into jg push sti push fistpll lret jnp icebp or push (bad) cmp cmpsl (bad) aaa ja loop mov (bad) mov out aas idivl std (bad) xchg (bad) std dec call das std (bad) pop dec idiv mov iret push (bad) sti scas call (bad) pushf (bad) fstps cld (bad) bnd loopne out icebp jg inc (bad) stc outsl cli inc jmp inc pushl lock icebp pop std mov aaa pop cld sbb sti dec decl mov sti idivb idivb out incl fdivrs mov lcall push mov jg push jmp (bad) adc (bad) idivb loope jg aas repz fisub stc and aas cmc pop call paddd xchg cld sti (bad) clc scas cmc (bad) pushl pop mov addr16 das cld mov push inc cld outsl mov mov cld in (bad) out mov scas jle mov vmaxpd leave jg mov clc xchg scas adc mov pop xchg mov dec inc aas imulb jecxz cld (bad) call pop hlt aaa cld sbb popf push cld hlt pop aas sti in mov cmp pop jg pop lock loop in ljmp outsl (bad) imul (bad) repz mov loope pop sub jg scas mov aad jg aas stc pop pushl jmp jg cmpsl (bad) fstpl pop cld sbb xchg sti mov pop in std test decl loope stc or pop clc in (bad) std mov movsb fucomip pop dec incb inc cld fnstsw cli gs xchg fcompl cli pop lcall (bad) mov jg outsl stc mov out jg imul dec (bad) out fnstsw jg pop (bad) mov xchg mov lret imul ja cld lock std inc jg clc scas std loop cltd lea aas std out scas (bad) pop stc lret jle cmpsl fistp adc dec stc ret aas in stc dec sub jp lahf call dec outsl dec div (bad) xor (bad) lods jg aas sti mov repnz lret mov daa jg stc dec fs (bad) jmp jecxz sti std call (bad) dec jnp dec ljmp mov and aas loopne clc pop jg mov fbld idiv mov cli pop movsl clc std push aaa jg jecxz jmp (bad) push (bad) mov sti jg sub inc cmpl mov xchg loope ljmp outsl stc loop (bad) push idiv sbb jb stc in hlt (bad) sti dec jle mov (bad) cmc inc mov shrd jle out fcomip xchg (bad) (bad) cli or lcall mov into outsl sti pop std mov (bad) test neg call lret out lock cld cmpsb pop jg cli idiv cmp jge icebp stc pop icebp out iret jmp icebp fnop jnp sub mov outsl out std push jmp outsl lcall jge push cld pop mov cld push mov pop cli ja rcrl iret jge iret std dec mov lahf stc imul jg outsl testb inc inc testl jmp jg aaa cld out addr16 cld xor jg scas notl ljmp aas icebp addr16 push jg in jg mov dec loop xchg mov (bad) cli jg push iret jg (bad) pop repz mov lahf stc sbb cmc (bad) mov mov lock pop cld addr16 xchg (bad) fnstsw dec push (bad) scas jg in pushl sti sbb iret (bad) ljmp (bad) stc pop sti imul mov stc pop cli dec decb div lahf std jns loope sti sbb (bad) lahf mov jle fcomip aas std xor jmp mov (bad) cld out std jle pop div (bad) xlat jg outsl cmp mov icebp mov cld jle (bad) addr16 jg setb jp sbb jg out (bad) out mov popf cmp aas incb lock jg xchg cld clc jg (bad) (bad) call jg fcomip lret lcall jnp pop aad rcrb fwait int3 jg pop sti addr16 stc mov mov aas hlt pop clc addr16 les (bad) fidivrl aas clc mov (bad) (bad) pushf cmc dec cld ja shl stc lahf mulb mov lret (bad) decb std pop pushl outsl (bad) out fcomip loope std sarl out cli addr16 mov out mov das (bad) mov out dec std or jg (bad) jg jg ds mov jmp fnstsw or mov jle aas repnz repz sti das inc jb (bad) cmpsl aas decb cld rcr (bad) call stos mov in dec std mov cli xchg (bad) out pop dec cld stc imul xchg (bad) lods pushl sub idiv stos mov (bad) mov cmp fwait sub (bad) cld lcall pop cld stos incl jg aas icebp (bad) pushl (bad) mov xchg xchg jg xlat cld in fwait ljmp fscale sbb cmc jmp push pop out lcall dec stc jmp out fcomip mov cld jecxz jb outsl jle aas (bad) mov out mov cs cmp aaa jle out lock cld out call (bad) jg lahf jg aaa dec stc pop stc sub stc inc mov icebp fucomip pop clc lret (bad) std mov cli mov push mov (bad) push aas mov cs xchg ljmp mov jecxz clc xor out aas out scas inc lret jg lahf pop ljmp lret call mov lret jg aad pop cld pop call out icebp pop std gs mov mov jle jmp jg mull es std icebp lahf hlt dec (bad) jns jg fcomip hlt pop cld pop call das jle mov pushl push incb inc dec loop cli (bad) push mov (bad) sti scas jg mov scas decb cmp cld pop jecxz psubd jg pop idiv (bad) cli mov jmp aas sti pop (bad) cmp cmc pop sti (bad) dec jg (bad) cld loopne dec mov cld push call jg pop std cmp repnz pop aas clc cmp pop jbe dec stc mov lock jle jmp std ja scas dec (bad) clc daa (bad) aaa jecxz (bad) pushf jg in pop repnz cld fstpt paddd (bad) outsl std test (bad) jmp out (bad) (bad) mov aas es jg (bad) sub aas std out std xchg pop jl dec (bad) mov lret cli lods in call out stc (bad) cld ret enter dec mov (bad) (bad) stos fcomip jmp jg mov inc lcall push jg xchg mov std into mov jmp notb fcomip fwait mov mov jg inc cld sti sti std jle repnz pop (bad) cmp (bad) std gs stc cltd (bad) jg outsl hlt addr16 xchg (bad) in aas (bad) jnp repz cld in jg lahf jbe cld sahf dec jg (bad) (bad) lods pop aas stc sub in jmp cli hlt sti das lret fcomip out pushf cld jns stos jg (bad) addr16 mov mov (bad) pop fs ljmp jle mov idiv ret pop repnz jg call stc pop outsl jmp dec fdivrp mov sti jg jl jg stc ljmp fnstsw loop mov sti jg xor aas sti ja cli aad loop (bad) xor mov mov push mov iret jle jmp loope (bad) jge mov ljmp jg daa es idiv cmpb out jl neg aas in std push jle mov jle lds out mov sti xlat ljmp call mov stc pop enter (bad) out (bad) cld xchg pop hlt dec fdivr daa decb cmpl ja fisubr sbb or lahf repz in pop std cmpl pushf in aas dec jle jg pop mov jg pop jmp loop iret lcall stc inc (bad) sbb rcrb call jg fcomip lock ficomp stc out (bad) mov push mov stc (bad) (bad) psubw out cld lret (bad) pop jle pop lock lcall stc ror (bad) mov jg outsl (bad) jecxz xchg mov imul out fstp repz mov rcr xlat cltd cld lods pop std idivl call lahf (bad) ljmp lea jle lahf jl pop cld std mov aaa (bad) in pop (bad) mov aad std out xor (bad) (bad) daa jg pop (bad) pop decb ds ja xchg das (bad) xor into outsl sti outsl aad (bad) xchg jg cld sub test sti aaa cld pop idiv fdivr jp fbld idivb stc xlat dec aas in clc out mov cmp xor mov xlat push dec (bad) std (bad) mov in (bad) cmp std sbb jg lahf repnz cld stc aas jle xlat sti std ja (bad) idiv aad (bad) lods fstps cld mov fimul pop mov jg jg pop sbb (bad) fistpl jmp push pop std in dec jg aas stc fcomip (bad) stc jmp out cld jne sarb out das (bad) (bad) pushf mov pop outsl mov imul mov pop aad repnz (bad) stos (bad) fstpt (bad) mov mov lcall cli arpl mov loopne stc in pop stc add cld popf jg outsl lock aas (bad) jp sarl bnd jle sti mov stos (bad) xlat (bad) clc (bad) popf mov push lods mov sti adc xchg mov sub fdivrl stc out xlat (bad) pop (bad) stc aas clc dec stc sar (bad) mov call jae xchg jg out movsb cmc mov inc ljmp cld xchg jg hlt (bad) lcall jg paddd mov mov cld push (bad) jmp mov or idivl fdivrs jnp call jge sbb daa (bad) mov fistp push (bad) arpl (bad) (bad) cli out dec (bad) popf add (bad) jmp aas lock out hlt stc aas negl mov cld mov (bad) out fisubl dec rcr std jnp xlat mov std jne clc iret stc pop mov and xor scas sar in mov call fcomip mov push mov push outsl std fcmovne cmp into mov cld data16 negb std xchg jmp aas jno inc (bad) repz clc xchg outsl lods mov lahf data16 stc jg std (bad) repz repnz fdivs out decl jg push out cld aaa mov pop mov jg out pop std pop jg pop clc ljmp jge testl (bad) decb jg aad icebp jg push mov call jmp lds call jnp (bad) pop cld popf (bad) ds dec cmc fcomip (bad) lcall (bad) fincstp jbe dec dec jle mov std (bad) aas icebp pop cld inc mov jecxz cld iret dec aas out dec std (bad) shll jg pop (bad) jnp (bad) fiaddl (bad) out cli pop std scas jmp pop pop into jle pop jmp outsl jmp iret dec jbe std out stc mov mov cld mov jns xlat aas cmc fnstcw das cld (bad) scas jle fucomip iret pushf mov aas addr16 imul (bad) std (bad) cli fnstsw icebp in idiv jae fwait mov out (bad) ja mov (bad) ficompl pop ljmp mov (bad) in in fistpll std push repz push cld xchg jg leave mov repnz ds (bad) lcall cld imul hlt and pop mov mov dec (bad) mov cld sbb pop decl shl mov call idiv int in jg pop cld pop jg xchg aad jbe mov jge xchg aas ljmp aas sti aaa jg mov pushl mov sahf aas out mov clc cmpsl std adc xchg and lds cmp leave in xlat incb push cli outsl (bad) pop jg jmp ljmp lret cmpsl pop cld pop jmp fwait pop lock lret mov sarl cli pop cld in lret (bad) jp sti incb call mov mov into sar jmp sti cmc decb xlat scas (bad) fwait icebp pop (bad) hlt lahf cld int fcmovnu jmp cli pop imul fstpt repz (bad) pop jmp std cs in pop jmp (bad) cli mov insl mov mov test xchg adc jge xlat jle pushf repz stc fldcw (bad) cltd inc cmpsl (bad) cli inc mov mov iret cld (bad) negl scas std aaa std xor aad lahf (bad) sarl pop cld inc cld out mov lds pop cld idivl dec stos out std sarl outsl sti idivl pop movsl stc sti fwait inc aas div cld das jg fucomip pop fdivr mov mov aad decl jmp cmpsb cld (bad) (bad) fstps loop aas lock int std sahf jg lahf sti xlat pop std fwait inc aas lock and cmc scas cld cmc mov jl sbb imulb fcomip dec (bad) push push pop repz cmpsl outsl pushl (bad) jg repz cld xchg (bad) (bad) aaa (bad) insb jmp sti (bad) (bad) fnstcw neg sti xor lcall in jg icebp cli das jl pop (bad) mov in outsl pop aas cli popf (bad) loope outsl call mov lods (bad) cld lahf stc imull jle out sti fwait jle mov (bad) mov out repnz pop jle out (bad) fstpt arpl imul jg (bad) cli outsl cld jmp aas idivl incl push call daa std outsl cmpsl lahf decb hlt pop mov (bad) mov (bad) notl in in out (bad) mov (bad) mov cs scas (bad) out pop repnz repz aas std jmp sahf jg cmpsl jg pop icebp in ja xor cwtl das (bad) in jg out mov cli cmp fsts std xchg aas jecxz (bad) repz xchg fnop out jg (bad) ljmp lahf cmc inc lods inc (bad) js (bad) fistl cmp ficomp mov mov sti lods decl (bad) xlat lds xchg mov std (bad) scas cli in jle jg ja jg xchg jg scas std cmp sar outsl mov cwtl mov paddw (bad) sti jg negb mov (bad) std psubb pop std out call loop fcomip outsl sti cmc (bad) mov xlat lcall mov insb std popa jg (bad) clc out fdivrp aaa imul xchg fnstsw loopne sti dec jmp jg int negb out repnz jle mov or cld jnp mov jmp sti out pop cld sti std sbb in inc call pop negb ja out fdivr push sahf in push sti jnp out cmp fwait jle iret cmp cld scas ljmp sti xlat dec leave aas mull xchg (bad) adc shr or jg in outsl repz jg incl lcall aad pop cld push gs fnop imul jg outsl clc hlt decb std aad (bad) out hlt pop (bad) ds repnz (bad) push (bad) cmp (bad) sub std mov scas dec (bad) clc outsl ret stc mov (bad) jmp aas mov out lret jg dec call fcompl sti pop out decl push jmp jecxz decl sbb push lods (bad) mov jg out cld das xlat mov divl cld or (bad) fistp cld loope lahf mov cld repz mov hlt (bad) aas lock imul das sti iret pop inc inc lahf (bad) jg inc jg outsl jp sbb cli shrl fidivr out cld adc repnz addr16 jmp (bad) call int3 aas push (bad) out pop mov jg cmpsl pcmpeqd cmpsl mov inc incl std idiv push call jg icebp outsl stc pop std dec jg fstps jnp inc jmp mov cld movsl lret jg stc xchg loop clc das (bad) (bad) in jmp lahf sti ret dec aas jecxz mov dec pop push shl mov std repz std fstpt pop clc stos jle mov mov std mov idiv sar mov and cld sub cld fwait std (bad) jg pop icebp addr16 imul std mov scas jg jg pop clc in aas dec jg out std sub jg sbb jp (bad) jne (bad) out loope stc aas (bad) mov repnz xchg (bad) in (bad) mov cli lahf (bad) mov pop jg aas arpl (bad) pop std in cli sub in mov jg fisubr ja mov (bad) jge fisubrl sti dec incb out aas jle lds insl jg outsl clc fnstsw outsl (bad) jmp pop (bad) out daa leave jmp in iret incb mov iret mov (bad) cmp sti xchg (bad) jmp cmc aas sti imul std scas inc jg out out pop inc push out lock pop lock (bad) in mov (bad) cmpsb mov (bad) mov aas out iret jge cli xchg ljmp (bad) mov std (bad) daa jg aas repz jns jg dec jle (bad) ljmp dec lds lcall decb std add out sahf jg loop std add popf mov call incb lock (bad) xchg jmp stos jg ja dec mov jmp jmp mov fwait std sbb (bad) cld arpl cli pop js mov sarl lock std jnp ljmp (bad) jnp (bad) ret js fnstsw out stc stos inc fcomip aas dec decb jmp lahf notl (bad) mov (bad) jmp cld mov (bad) jnp repnz sti ret (bad) cmpsb mov stos mov (bad) jg mov jg lahf stc loopne lcall cmc xchg std jg das adc data16 push incb or jg in out repnz jns in das clc loop (bad) stos jle fcomip outsl cli pop (bad) call mov sti mov pop jle aas cmc mov fucomip pop clc mov call call clc scas mov pop notb in jg lods lahf decb push incl pop std mov addr16 addr16 jmp pop jg mov dec pop std cmp sti addr16 stc mov lret (bad) cltd jmp testl outsl sti jecxz lret mov push (bad) pushl cmp pop movsb jg scas out aaa out incb repnz pop in sar jmp (bad) mov out out das cmp (bad) cmp pop std lahf (bad) stc pop cld or pop divl (bad) out jl in mov pop cmc lret (bad) xchg mov (bad) repz loop pop divl lock jle (bad) jg sarl (bad) fcmovb aas (bad) ja ja mov jg pop (bad) (bad) jge xchg cld jecxz (bad) outsl cmc xlat mov testb mov fstpt out std pop (bad) iret jg jg stc (bad) lcall out lcall rcrb jmp aas jmp fwait (bad) and fnstcw std inc std pusha cli xchg int3 jle dec (bad) lcall js,pn jle xlat clc jge xlat (bad) in stos out ljmp incl inc jle fstps xchg cld inc (bad) fnstcw sti ljmp icebp jg mov (bad) lahf stc insl cmpsb idivl jmp stc scas (bad) (bad) shrl sarl jnp xchg sar shr sti call das (bad) push push mov (bad) cld xlat jle,pt aas (bad) cmp sarb cmc sbb inc aas repz mov jg lds aas icebp in std mov std lea (bad) fisttp std and cmp inc (bad) mov std push jg push arpl out jbe xchg (bad) in (bad) out push and lahf cld hlt pop lock mov lock lcall cld jg cld (bad) stc test xlat mov cld ret (bad) lahf stc aaa lcall (bad) call std imul loopne stc daa (bad) cmp icebp pop aas cli jae nop aas lock aas jle pop js fwait std jmp repnz cli out (bad) ljmp imul test (bad) mov stc sub dec (bad) mov jg loopne push (bad) xor icebp jg lahf cld pop jg aas clc scas jl (bad) sahf jmp in jle lahf decb out sti sub jns scas std stos call dec (bad) jecxz fildll mov mov idivl loope xchg jg repz pop mov jg pop decl std mov neg hlt cmp cmpl (bad) insl decb inc sti mov inc jle ja adc scas cli inc incb dec aas std lea icebp cmpl (bad) (bad) call cli dec (bad) fstpt xlat clc sub jg (bad) outsl rep (bad) push (bad) cld mov inc mov out mov adc into cld pop cli pop jg aas cld (bad) (bad) mov fnstsw ljmp aas push lcall (bad) in pop repz sub dec jg pop sti cmpsl cld dec jg outsl notl hlt fwait cld mov pop std (bad) das daa call pop lock cltd mov std lahf stc mov pop cld pop xchg mov jg (bad) cmp (bad) xchg stos mov sbb decl push jmp jmp decl (bad) lahf cld in jg sar loop stc mov (bad) ljmp sti inc xchg jmp jg stc cmpl idivb scas clc mov lcall (bad) clc (bad) (bad) clc push fstps mov mov mov loope pushf (bad) xchg jg fnstcw clc mov cmpsl mov (bad) test cld lahf jmp fucomip (bad) xchg mov jge cli ja (bad) jecxz ja icebp fistpll lock (bad) push aas (bad) mov (bad) lods (bad) jmp fnstsw outsl (bad) cmp mov leave leave jg pop cld mov loope repz lcall out clc pop je push jp inc mov mov scas clc sbb cld arpl pop dec jg cmc xchg in (bad) fwait (bad) (bad) aad popa (bad) in aaa (bad) (bad) xchg jg cli leave das cli fistpll mov int push outsl mul aas std mov jg pop mov mov lahf (bad) pop (bad) jg jg (bad) cld push mov adc nop mov std (bad) std pop sti scas jle pop (bad) addr16 jnp mov pop insl mov out int3 lcall (bad) clc cld (bad) cmpsl mov jg mov imul mov idiv sub neg out mov repz std int3 das cli cmpl lcall std add in lcall fstpt outsb insl incl pop (bad) sarl sti into push in cmc mov rcr cmpsl push (bad) sti aas mul jg mov cli aas sti jge mov in push call mov cld std jg ljmp jbe iret clc leave jg rcr hlt lahf cld or out stc sbb scas (bad) imul fucomip mov jae or pop mov (bad) xchg jmp dec jg out stc aaa sub cld mov (bad) xchg lret (bad) stc pop stc daa jg out (bad) pop icebp xlat jmp (bad) pushl cmc pop jle pop cld add dec es idiv xchg hlt call (bad) mov jnp xor out (bad) pop aas sti mov test cld in (bad) std ja xchg or cld (bad) clc daa lahf cld push (bad) clc pop icebp or mov call idiv in (bad) sahf cmc outsl ja jecxz mul call mov icebp pop mov (bad) in hlt stos (bad) decb xor pop clc jae mul jg (bad) sarl lahf cli rcrl jg push (bad) pop (bad) clc pushl dec das std das pop inc jecxz jle in dec dec (bad) mov out jnp stc (bad) pop cld arpl (bad) mov aad jg hlt push mov lock iret jg pop ss jg sbb jmp sbb (bad) out aas lretw loop clc xlat ljmp cli aaa (bad) sti ja fdivrl icebp idiv lahf mov idivl pop (bad) aam cmp cli idiv xlat stc xchg call pop cmc push std add jle sti (bad) (bad) stc inc xor jg cmc lock outsl (bad) (bad) (bad) fcos ret outsl std idiv scas (bad) in stos dec decl outsl out lods pop mov pop jmp pop std outsl cld dec and fstpt bnd scas mov hlt xchg std ljmp loope stc mov lcall (bad) scas aas stc mov mov xchg push mov (bad) dec stc pop mov loop in cmp outsl (bad) mov pop push aas repz repnz std pop jle outsl jge mov lahf icebp fsin aas mov pop cmc paddw dec mov jg lds mov inc (bad) stc xchg (bad) daa dec pop repz cld into inc lahf cmc das (bad) arpl repnz leave aas jbe or (bad) (bad) ljmp lock incb out out (bad) fnstsw popf jnp in pop cli out hlt mov jg dec (bad) jbe mov lock mov fcomip sbb imull out lcall cld test (bad) out negb test lahf std sbb dec mov arpl sarl jg fstpt mov (bad) std push jle (bad) cli scas std adc insb hlt inc std mov stc paddw jo repz pop aas cmpsl clc call enter mov push inc jg out cld push pop (bad) popf jg repnz cld icebp (bad) (bad) jno leave aas cli stos incb jae (bad) repnz scas inc cmpsl jg repnz clc sti (bad) mov cmc cld scas mov jnp in jmp dec jmp (bad) ljmp (bad) adc clc scas stc aaa (bad) sti in imul lret dec jle (bad) dec sahf std (bad) jg jg outsl cld div aas imull notb lahf lcall inc lret loop jl dec push pop cld inc xor (bad) ffree repnz in negb mov std repz jecxz jns leave lds aas icebp das (bad) fcomip jg sar push std mov aam repnz jg mov pop (bad) icebp pop cmc repnz loopne js divl lahf clc xlat (bad) mov std push dec incl jg (bad) incb fwait icebp push jg (bad) mov out pop mov call lahf hlt jmp cld out jg loop cld (bad) out mov lret (bad) cli psubb iret (bad) call ds hlt push cld mov cmc leave aas sti fwait (bad) push jg scas sti adc (bad) jmp cmp gs (bad) (bad) push jecxz clc iret cli xor cmpsl mov icebp leave xchg jg fcomip fwait cld out (bad) mov cld xchg jg lahf (bad) stc ficomp idivl pop cld mov xchg ret jg xchg aas cli pop cmp in repz arpl mov out cld (bad) push mov fstpt out clc outsl ds sti jg loopne stc iret jmp ljmp (bad) paddd pushl jmp aas sti xlat xchg push scas icebp lds fbstp bnd outsl fildll in jmp icebp (bad) inc pop cld jecxz in repnz dec jg jg scas (bad) ja lahf nop call jg loop aas loopne clc call scas pushf (bad) fldenv into aas divl lds outsl (bad) xchg mov (bad) jmp addr16 jns sti jg aaa std addr16 lahf cli cmpsl cld push jg pop hlt jnp pop (bad) leave stos lods cmp aas repz sbb (bad) (bad) fcompl (bad) jge mov adc pop call mov repnz mov jle jg ja add (bad) pop mov iret pushl divb xor arpl aas sti outsl std test daa dec jg pop out repz mov jle jg cld das push jmp jne aas mov pop cld dec incb (bad) lahf dec stc mov std aaa cld daa mov out jno cmpsl pop sahf cld loope jg sarl jmp sti jg fldt (bad) jmp cli add (bad) mov aas out (bad) mov shrb mov sti imull jg pop das cli jmp cld inc jg pop cli lods (bad) in daa fdivrp cmpsb jg pop sar jno (bad) pop mov jmp int mov std idiv adc jg (bad) (bad) cld in (bad) cli sub sarb loope sti pop jmp out aas cld cmpsl mov xchg xor aas (bad) stos mov divb xchg jg or ja sti cmpsl jge lock psubb fcomip call mov (bad) call incb cli (bad) clc icebp out add lahf addr16 (bad) cmp idiv scas mov into call pop out lret mov push (bad) out rcr sti out pop mov xlat (bad) mov repnz clc lahf sahf cld mov sti leave mov mov xlat out aam in repnz mov sar in (bad) jge pushl inc das and jge daa (bad) jns in lahf cli addr16 xchg iret incl addr16 ljmp ljmp fisttpl push cld out call mov lret das cld out dec jnp enter lcall enter cld sti mov in repnz fnstsw lret outsl hlt (bad) (bad) pop jg jecxz ljmp pop jg jmp insb out cli mov clc (bad) (bad) test sti (bad) jle in (bad) jle jg idiv sbb in lcall scas cld jecxz jmp lahf stc std mov sti dec (bad) mov not push loope (bad) jp fstpl dec jmp pop mov jmp std push (bad) jg aas call test aas cld push pop (bad) call mov call mov sub pop out mov outsl stc addr16 xlat out pop cld aaa stc paddd jmp pop cmc arpl (bad) repz jg aaa mov push (bad) cli (bad) std inc (bad) fdivrl popf pop mov repnz jg outsl std outsl (bad) jg,pt mov mov stc sarl inc cli repz std (bad) (bad) stc jg cli pop jmp jg psubq loopne scas cmc out clc mov ljmp jbe jecxz inc jg addr16 pop std test into out lock jmp jg out in (bad) (bad) repnz adc fldcw cmp outsl jg repnz ret xor mov rcr jmp jg icebp cmpsl lea jmp idivl cld loope div mov out std das jle out aas std sti (bad) fnclex das (bad) and aas cld clc pop stc cmp test outsl dec jle cld mov lock repz out std insl ds fwait pushl mov push (bad) sbb rol mov std xchg aas in sti (bad) jbe jmp jg repnz int clc cmpsl cld push hlt (bad) das sti movsl pushl (bad) std arpl ljmp jle outsl idiv std lret cld mov xor loopne idivb jg icebp out lock std jecxz (bad) mov in cld xchg mov stc out mov pop xchg fcomip loope repz decb int3 decb call (bad) jg dec (bad) loop jp aaa inc mov (bad) in mov daa out (bad) and loop inc jmp ljmp mov call (bad) add xor lea cli pop pop js std jecxz push loop (bad) (bad) repnz pop pop std cmp repz mov mov js out out inc lahf imulb pop cld cmp (bad) daa jg lahf dec repz std adc (bad) shll je cld inc jg (bad) std mov pop jg fbstp (bad) mov (bad) clc not mov lcall aam negb std add mov lahf cld gs (bad) outsl xor icebp aas jle (bad) clc sar rcr pop idivb (bad) cmp jmp cld negl (bad) push sub dec cld inc mov adc lret jg (bad) jae std dec xchg (bad) ljmp in jg outsl jmp fistp pop repz (bad) jg out not jle outsl (bad) and mov dec jg clc out iret clc or xchg (bad) iret (bad) idivl pop ljmp cmp daa std jne jle pop std icebp call mov pop std mov hlt pop cmp clc das (bad) jge (bad) lods addr16 (bad) jecxz loop mov hlt (bad) (bad) mov pushf mov xor jg or repz clc (bad) cli pushf mov pop (bad) ljmp incl pop jle lods shr cmpl jle lods pop cld fstpt out dec decb out cli cld ja mov mov lahf cld jmp ror sub mov (bad) scas (bad) repnz and out jg cmpl dec (bad) std ja loop xchg inc mov (bad) jg pop cli aaa (bad) cmp leave pop (bad) lock clc (bad) pop aaa jmp (bad) in lahf inc push call fldcw out stc cmp and ds leave pop cld pop cld addr16 pop (bad) (bad) (bad) call out cld idiv xchg fcomip ja inc mov call popf jg mov aas cli out cld popf jle fucomip pop cli in jecxz (bad) mov cld jmp iret out cld jecxz in jg repnz (bad) aaa jg push fistp std lahf (bad) int3 mov clc pop lcall cli scas push pushl lds (bad) (bad) gs (bad) ljmp jmp loop (bad) insl mov (bad) mov pop std pop push push mov fistpll cli das lcall mov cld cli jg jg ljmp cmc pop out std aas (bad) loop int (bad) idiv mov (bad) repnz mov incb inc ret aas out (bad) cli (bad) mov xor iret incb pushl or inc mov jg outsl cld leave jg pop repnz cld jbe jg xchg in outsl inc jmp int xchg cld rep std push aas clc idivl leave jg divl cld or (bad) std and cli mov cmpsl inc fistp in cld add lods aas test fdivr ret mov (bad) fcomi aad cmc shr (bad) iret (bad) sub popf jg push std and jg (bad) (bad) mov js imul mov (bad) jle (bad) push (bad) clc fcomip jmp mov pop dec leave ja cmc cld mov jmp cld lds mov (bad) jmp jmp (bad) push mov out mov cmp pop (bad) pop fs dec jg cmc mov aas loopne out decl xchg pop std lock jns out pop call fcomip pop (bad) pop mov mov sarb idiv mov and repz jl iret (bad) xchg call out cld sarl jg pop idivb (bad) xor pop stc dec pop cld mov cld mov sarb jle mov (bad) fdivrl stc sti jg out idivb std xchg (bad) ljmp lods call in aas pusha cltd cld outsb jg call xchg out jb iret std mov incb (bad) jg pushl ds popf jle mov idiv sbb (bad) stc outsl (bad) movsl cld ret pop cld or fisttp incl call int jb (bad) sbbl lret cmpsl (bad) (bad) (bad) leave mov xchg push cld xor fdiv paddd outsl clc fstpt xlat sti xor rcr rep std pop push jmp daa mov cld push mov imul es jg jg std dec pushl jmp (bad) mov pop cli into jg sti (bad) movsl xchg (bad) sti xchg (bad) in aas jbe scas pop cld pop decl (bad) dec jg jg outsl mov mov clc mov aaa das (bad) test cli jnp jle aas ljmp cmc pop (bad) ljmp stos jg stc lahf lock fdivr sbb (bad) ja out pop dec cli ljmp std imul in sti mov hlt hlt outsl cld cmp std lahf stc dec (bad) sbb lahf daa jg mov cmp leave jecxz not pop lock incl sti jg sti cld mov jmp mov fwait cld cmpsl pop (bad) lahf std cltd mov mov (bad) xor (bad) std adc scas jle scas cld jnp jg (bad) sti lcall incb cmp in xchg fbstp mov jg ja mov mov mov fistpll lahf stc lds (bad) jnp sarl decb fdivr in sti jne xor dec sti ja push jg das clc pop fidiv ret lahf inc mov cmp xchg aas repnz stc jecxz aam notb outsl std repnz cmp fwait dec aas clc pop enter stc pop std jmp sarl std jg cmc dec cld idivl (bad) iret (bad) (bad) jmp icebp (bad) out pop std out int3 jg pop cld stc mov das (bad) test (bad) mov insl (bad) cli (bad) out scas clc lahf push std mov cli aad pop fs dec out pop cld insl mov jg aas out (bad) js push mov out xchg mov aas sti hlt out stc in (bad) repz fstps mov lret dec mov fldt cmpsl call cli aas cli add idiv xchg mov pop cld aaa std sbb mov imul test dec jle push inc cld jp mov (bad) fmul (bad) xchg inc mov iret out jg aaa decl fidivr clc scas aas cli gs ljmp fisttp out jg std daa mov call outsl jle std sti inc mov aaa sti (bad) mov mov std lods mov out mov dec decb ja std push mov pop repnz (bad) in int inc cld (bad) call mov jg cli push jle pop std mov fucomip pop clc xor aas jg mov (bad) dec stc xor ficomp cmc lret xchg (bad) dec jns loop sti aaa jg,pn fucomip scas stc or ljmp pop clc in mov aas mov xor cmpsb iret fdivrp cs fadd jg ja push mov (bad) popf jg dec (bad) cmp (bad) in es lahf mov std idivl stc mov leave push mov out mull aas out loop cld shlb lret decl iret (bad) mov pop cmp dec jle xchg push outsl clc push cld cmc aas std cmpsl cld hlt outsl nop std push fldcw dec (bad) es inc out (bad) inc jg push ja (bad) cld push pop mov aas jecxz sti cmp (bad) fwait cld sub (bad) jg mov xchg (bad) xor cld mov jg lahf cli xchg out (bad) clc jg loop cmp scas inc mov inc jmp mov push jmp fcomip mov mov lcall inc repz push (bad) ficomp std (bad) aas idivb lahf std jmp mov jbe jecxz cli movd aam sti cmp ljmp lcall xlat (bad) test out xchg push mov out std (bad) mov jg std out idivb jnp (bad) (bad) inc (bad) mov and sub mov (bad) out jmp hlt lahf cli jge std jg daa incb jmp jle jg dec (bad) fist (bad) (bad) push dec (bad) mov xchg lahf std ret out mov cltd mov (bad) mov (bad) and ja fistp lahf icebp in aas decb jg mov cld mov in lcall jg aas (bad) dec sahf cld fidivrl pop lock lcall (bad) add das decl jg jg fldt loope cld mov es cli cmpl icebp out std push mov out leave lds ja insl jg jg (bad) fimul mov decb dec jmp lahf idivl std push jg mov (bad) (bad) ljmp ljmp xchg repnz lret (bad) cld lahf cli xchg aas (bad) cmp lcall inc ret pop mov jmp (bad) imul call aas clc push push cld mov xchg push (bad) cld lahf hlt pop jg out dec jmp (bad) stc pop inc jg lods fistp jecxz repnz adc inc jmp lahf sti inc mov icebp iret pushl not cli lds repz (bad) mov aaa (bad) (bad) jg pop cli fisttp sti (bad) std clc aas dec (bad) fcmovnu icebp (bad) jl,pt out std xchg jle cmc pop cli mov jmp (bad) mov icebp jg push jg scas cmp cmp inc sti lahf (bad) xor in lock decb iret fcomip ja ficomp out jmp xchg cli jg out jo dec cli (bad) das (bad) jne (bad) jp addr16 daa jg scas sti pop (bad) sahf jg push jnp cld aas stc aaa lcall icebp idiv pop lret mov (bad) mov (bad) cltd das jg aas (bad) dec clc fs loope jle cld (bad) mov repz jne cld add fucomip scas sti xchg cmp lahf sti daa jle sti jmp out scas outsb pop (bad) cmp jle mov (bad) jg (bad) (bad) aaa popf std into das pushl (bad) dec aas clc lret decl (bad) aas std paddw loop cld out shl (bad) idiv xlat fdivrp lret pop cld pop nop aas sti or scas jg sti inc in jg iret std xchg jg stc movq (bad) cld out stc rorl adc repnz stc pop jg sar stc xlat fisubr sub cmpl cld popf inc (bad) std pop sti xor stc leave fistpll mov sti jnp xchg aas (bad) das pop (bad) imul (bad) mov lods jg aad (bad) daa sahf jg (bad) jle std icebp (bad) iret (bad) std push xor inc aas hlt iret (bad) adc cmpsl std inc adc jg lahf clc daa mov aas cld sub fmuls fcomip xchg cld out pop push lcall daa mov out (bad) inc jg jg call ljmp idiv mov pop mov pop repz (bad) pop cld (bad) jmp pop sti cmpsl cmp repz (bad) out out cli das (bad) jne std std pop jg out negb or jge std mov call jg daa (bad) daa mov jmp (bad) das cli dec push pop jecxz stc cmp aaa std jmp jg aas jecxz (bad) out dec aas mov mov (bad) inc jg aaa pop incl arpl mulb (bad) cmp cmpsl (bad) repnz cli mov out cli lea (bad) popf inc mov jmp clc push mov dec das inc mov idiv mov ja movsl (bad) fcmovnu hlt in aad (bad) out clc stos jg pop jae aas (bad) (bad) mov mov aas neg std sub lds sti xlat (bad) cld fcomip icebp pop jnp pop std out jg lahf repz (bad) das lahf jg jmp cli jnp std iret jg (bad) jg mull sbb aas repnz (bad) das idiv jbe lcall pushl hlt aas cld jmp stos pop imul outsl ljmp add aas cld idiv xor loopne stc cmp outsl stc repz in (bad) jb addr16 cltd mov paddd jg jg inc (bad) mov mov jg pop (bad) lahf (bad) das paddd jg scas inc push jg outsl cld ss (bad) incb clc aas repz out cld addr16 pop (bad) repz jle (bad) mov jg push out xchg lret (bad) stc int (bad) add (bad) ds daa lcall fnstsw out inc jg scas sti (bad) ss (bad) outsl dec stc cmpsl fnstsw das cld (bad) xchg in std push jg mov call das (bad) lahf (bad) (bad) jmp out icebp xchg aas (bad) fnstsw aas jmp std xchg jg aas cli cmpsl dec stos (bad) decb jg jmp repz repnz (bad) aaa (bad) jmp ja ljmp ljmp out pop cli imul int cli cmpsl incl (bad) scas (bad) aam jg pop jp cli (bad) (bad) mov cli xchg (bad) (bad) mov (bad) das cli (bad) fnstcw in std std call (bad) jmp sti cltd jnp aaa mov out jae (bad) (bad) popa mov jg cli (bad) jmp call repnz jle jmp (bad) dec (bad) std ljmp inc aas (bad) pop std (bad) (bad) clc pop cli xlat std fnstcw aas clc xlat (bad) ficompl call out repnz (bad) mov pushl (bad) jb cmc pop jmp call pxor jg (bad) pop incl ljmp in outsl mov jmp scas sti pop (bad) idiv (bad) pop std das (bad) fwait repz icebp aas push sub scas ja call aaa ljmp (bad) (bad) movd lahf repnz pop cld xlat jg mov mov ja xchg (bad) jg mov jmp icebp jecxz lock sti mov out jge outsl jle out sarl cld or cmp sti (bad) sti scas clc mov bnd (bad) cld add jmp (bad) iret clc int ljmp idiv std (bad) (bad) jg loope hlt jg add xchg fwait xlat aam idiv stos aas call pop (bad) push (bad) jmp mov (bad) out xchg out idivl clc cmp sar out cld lds (bad) incl aad clc out inc jg mov cmc fwait incb paddd pop dec clc std lcall (bad) ds pop (bad) std mov xchg dec shrl call and std out mov (bad) (bad) ljmp in jp aaa (bad) sbb sarl jmp sarb (bad) out aas cld xlat cld outsb mov (bad) pushf aas icebp scas ljmp out idivb std (bad) stc pop lcall jg aas sti ljmp dec pop ljmp lcall push (bad) decb dec (bad) fucomp cpuid cmc mov loope dec (bad) popf pop stc (bad) fistpll cld mov out push cld jmp std iret stc cmp cli jnp clc dec icebp iret call aas jmp dec scas xchg jg loope mov mov std mov jg outsl (bad) cld pop dec call (bad) mov int mov jno cmp ficomp stos aas imul sti jnp lods mov mov jg in cli sar pushf jg paddd cmp xor pop cli or stc das ljmp lock cwtl fucomip xlat mov push jmp aas sti faddp pop repz std es inc jg ja xlat (bad) inc (bad) ja fcomip mov repz mov lret mov mov insl cmc push inc fwait pushl (bad) in jp addr16 fnop pop cmpsb cmc out fucomip idiv adc std scas jmp lret jg mov iret call jl (bad) cli fwait ljmp inc aaa jmp mov loopne cli mov (bad) das setp clc ja jg loop sti jae aam jmp mov fnstcw (bad) stc outsl repz xchg in aas out jp cmc pop cmp mov out clc or fstps clc (bad) (bad) sbb sub shl cmc pop std popf addr16 pop clc iret incb std clc das clc mov dec mov jmp lcall (bad) jmp mov inc cld push mov mul lahf cli mov jle mov hlt pop jns out dec dec dec outsl decl (bad) jg fcomip daa (bad) hlt outsl cmp mov (bad) xchg std out cld loope int3 out hlt fstp jge addr16 out mov xacquire scas jle leave scas idiv cld int3 das sti mov (bad) xchg (bad) fcomps jg outsl jp fistp test scas (bad) (bad) adc (bad) imul mov dec (bad) sti lahf movsl mov cmp jg das outsb (bad) fdivrl daa dec jmp negl stc sub pop jle xchg mov cld popa jg pop cld scas cld gs mov mov cld gs stc pop dec xchg cld jmp sar push sti iret std mov std xchg (bad) in mov pusha jmp mov daa jg pop std xchg pop push cwtl decl fwait std (bad) mov das jmp (bad) xlat aas decb cld int incl push jg out jb push xchg cmp mov jmp ds ljmp jmp aas push negl call fdivrl in jg push (bad) fistl fistpll pop jg pop cld (bad) jmp cld lret mov cli iret out xchg divl or std add xlat mov jg xchg mov loop cld into scas dec cli imull or outsl (bad) cmp popf jg das inc jle pop clc fwait mov loope std pop std push ja push fdivrl mov mov enter call fsubrp mov (bad) std ljmp (bad) lret (bad) jl xchg imul mov cmp fild pop (bad) cmpsl (bad) xchg in std pop (bad) mov out sti in decb inc out jle cli (bad) clc (bad) xchg aad mov cli std mov (bad) cld (bad) pop sti popf call jmp aas icebp mov cli out std mov xlat fcomip cmp jmp and dec pop hlt mov stc sti cld mov cld (bad) cli daa mov add xlat std mov sarl lahf call jg pop cmc in punpckhdq fidivr jnp lahf push (bad) lock clc aad icebp std jmp pop (bad) cmp jg add ljmp lods (bad) mov (bad) sar (bad) aas ds incb int3 rcrl jmp jg mov xchg jg (bad) (bad) fistp out aad repz (bad) daa call idivl repz iret sahf in (bad) out notl pushl jg repnz decb out loope clc xchg jmp outsl xor xor xchg lahf cld mov aam cld (bad) negl (bad) mov dec dec fs xchg std cld cmc aas pop cld outsl inc (bad) inc (bad) jmp mov test std std cmp (bad) sti (bad) in in sti jmp mov std outsl mov std scas jg aas (bad) xchg jmp iret cld aaa jg fidivr cmc jg push std sub ja jl out std mov (bad) cld (bad) jle mov mov pop (bad) cmp rcrb pop cld and cld out cli inc (bad) cmc push mov lods pop lcall pop (bad) (bad) (bad) incb jg (bad) stc sti (bad) stc pop insl jg ja sti lahf ljmp ljmp aas ljmp clc mov std out adc cmpsl lcall call iret (bad) cli pop hlt pop xchg (bad) stc pop sti leave lahf std repnz stc lds pop imulb mov mov sti xchg es mov xchg aam sti xlat daa jmp repnz (bad) in (bad) cli jg das (bad) push jg fucomip hlt mov fnstcw (bad) stos addr16 in ljmp push ljmp stc inc mov fucomip pop sti sub outsl stc lea cld xor imul inc jg jg aaa jle daa std aaa xchg imulb cmp mov dec cs sarl push (bad) cmp insl sar int ficompl cli pop jle (bad) dec (bad) push jle aas ljmp stc aad neg pop out sti std incb mov iret dec pop jecxz push std mov out stc xchg jg (bad) cmpsl call jg das std pop jmp pop lret fcomip (bad) jmp daa (bad) fdiv scas cld cmpl in std (bad) out clc scas std pop mov std test scas cmp dec (bad) stc mov xchg pop out dec (bad) fnstsw mov mov sar sarl pop xchg std add int mov pop std pop mov (bad) scas jg lahf cmp mov daa fs incb outsl clc sti jg push mov mov mov jmp xchg inc push mov dec pop pop mov fstpt into lahf ss fisubr jmp dec lcall cmp aas mulb (bad) (bad) jne fstpt repz pop (bad) pop (bad) cltd inc aas lock cmp push jg pop hlt pop cld mov jle aas jl xchg pop fs (bad) fsubr mov incb mov stc adc (bad) push (bad) (bad) out inc jg out jg (bad) aam out cld out daa jg pop sti out add negb lock clc idiv repnz aas mov out cld xchg decl arpl lock (bad) cmp stc push jle pop icebp ljmp (bad) into aas cmc aas cli and hlt idivl (bad) cld lahf incb sahf mov loopne cld pop jg pop stc push (bad) std outsl cld stos decl out (bad) (bad) jg dec std cmpl mull jge fwait cmpsl mov out dec jg out mov mov repz pop jg (bad) iret jge out mov mov daa jg sarl repz pop negl and jmp (bad) fnstcw out clc idiv stos (bad) ja xchg jg jmp adc out mull fstpt (bad) jg mov fsubrl iret aas hlt mov xor out (bad) ja aaa mov (bad) in sti clc aas dec jg mov cld mov addr16 sarl (bad) call cld push icebp pop pushl aas cld push jg frndint xchg aas pushl in leave pop xor pop stc jnp shr jmp repz mov xchg jg outsl repz sar (bad) (bad) cmpsl (bad) aad iret cld sbb loopne out pop lcall aas cld mov dec aas std pop out (bad) out jg (bad) mov sti arpl pop cld pxor leave mov rcrb xor mov lahf pop (bad) ja loope cmp (bad) decb negl inc inc pop (bad) aas (bad) loope rcr das cld sbb jg pop mov (bad) in mov (bad) cmp repz mov (bad) rcr jmp (bad) int repz xchg jg aas repnz mov fcomip (bad) (bad) imul lcall clc sub (bad) (bad) decl cmpsl (bad) mov cmc pop clc mov mov ss (bad) jle fucomip aas sti cmc (bad) mov cli (bad) add mov sti pop cld ret sti pop jg jg lahf mov out (bad) (bad) mov std push inc outsl sti xchg pop in cmp lods ljmp inc jg fwait aas in outsl cld xlat jle pop call jg scas cld (bad) jmp jg or sti xor pop pushl (bad) mov idivb mov imul aas cli fistpll std hlt psubb (bad) fdivrs loop das (bad) mov in iret cld test fldcw jnp mov pushf jge fstpt jmp xchg sti dec jg xlat out jle idivl sbb stc dec jg lods jg xlat clc fwait ljmp test cs jg (bad) or jmp lds std pop cld (bad) push jg mov (bad) pop repz (bad) pcmpeqd cmpsb fcomip dec cld addr16 cmpsb sub pop jle aas divb in fnop movd in pop std das pop (bad) push mov jnp loopne hlt in jg jg jnp lret psubw stos xlat jg (bad) stc pop jmp jg loope lret call jg insl icebp pop inc pop jne (bad) out (bad) mov std mov pop jae imul fidivr outsl clc paddw mov (bad) (bad) (bad) mov ret call in mov idivb lahf (bad) xor std mov jle lods lahf stc dec jg out sti ja mov icebp cmpl pop ljmp (bad) incl out decl jl fdivrp mov sti (bad) xchg jg das cli sbb jmp inc jg pop neg (bad) jge loopne ficomp jg dec std dec iret mov sbbl fbld (bad) (bad) (bad) jg lahf repnz iret jmp fistp pop inc das jle (bad) (bad) hlt (bad) stos ja out std loopne ja fnop lcall pop sti pop push push (bad) aas idivl jl imul outsl sti daa jmp aas in cli fstpt (bad) std ljmp push (bad) fistpl scas jg pop sti xchg out call aaa (bad) aas (bad) mov icebp in icebp imul inc aas sti leave inc inc aas icebp (bad) mov stc pop sti std imul leave daa (bad) inc pop cld mov iret decl loope decl stc mov das (bad) outsl mov jg pop idiv pop cld idiv adc das sti cmp idivl lock jl inc std gs out scas cld xor lret mov outsl stc lahf push (bad) sbb xchg lods repz sti aas cmp mov lods (bad) cmpsb jmp in sti lcall push jg xchg mov (bad) iret sti (bad) (bad) test in (bad) jmp jecxz daa jg jg out adc lahf cld cmp imul (bad) decb std pop dec mov cmp jle dec push jecxz div cmp (bad) out negl in das sti idiv sarl out (bad) clc sti (bad) movsl push outsl lock jle jg sti call pop icebp (bad) gs std aaa jg aas cmp jmp outsl std (bad) (bad) cltd mov pop cld fnstcw into lahf lock pushl jmp jg iret decb cld xlat (bad) fsubr imulb jno (bad) mov paddw repz jge cmc ja out clc loop (bad) xor and lcall decl mov pop incl lock mov pop jg push jmp pop (bad) ljmp stos (bad) in mov cmpsl (bad) mov xchg std stos jg fcomip inc (bad) mov fldcw mov incb mov mov jb addr16 jecxz (bad) jg aaa stc in jle aas icebp ja addr16 (bad) sti jg pushl cli aaa dec jle out (bad) jg (bad) out push jg aas lock call into (bad) std mov pop fstpt in (bad) push jmp loop aas out pop jge jmp mov sti aaa clc dec (bad) sarb jmp pop push (bad) lcall pop decb repz sbb in jns das call mov enter ja fstpl pop das (bad) popf mov inc std or mov fstp sti out incl jo add pop std lcall cld push (bad) dec scas inc aas cmc xlat cli test addr16 (bad) sti lahf incb pop inc movd (bad) cmpsb (bad) (bad) (bad) sbb std lea std in (bad) jmp loopne cli aad out (bad) mov (bad) mov lock stc test fcomip (bad) std mov sti sbb in dec cmpsl cmc mov lock or jecxz jmp (bad) aad cli dec jmp xchg fisubr xchg mov (bad) jmp stc fwait decb sti mov loop call repnz out cld in icebp paddw out add push jg lahf lcall loope imul (bad) mov fistpll jmp xchg (bad) (bad) jle pop imul incl out aas lock mov mov clc out call jg dec cli sub outsl (bad) or ficomp icebp mov iret cld push aas (bad) push pushf lahf std out stc das mov repz (bad) stos jmp (bad) jle pop repz (bad) cmpsl call push pop and loope cld jmp iret pop lock std jne xlat lahf repz lcall fisttp dec (bad) (bad) mov in mov mov out jg idivl (bad) sub scas clc out (bad) mov jecxz leave (bad) (bad) scas cld idiv sbbl hlt ljmp hlt out sti pop xchg fnop (bad) clc cmc (bad) cmc mov dec test es sti call out cli ja call pushl mov decl std sar scas mov cld gs (bad) dec jmp mov (bad) mov loope jl pop fs outsl cld xlat std outsb jg xchg (bad) xchg incb jg outsl (bad) mov enter mov repz stos (bad) (bad) in mov cld repz fidivrl push das (bad) lods decl imul icebp (bad) sbb xchg jg call (bad) (bad) fcmovbe cmc mov loopne stc pop mov std pop (bad) outsl int mov out cld dec jg fbld fcomip aas pushf decl int in loope cli and rcr outsl out cld iret jle dec push mov call (bad) (bad) out mov idivl loop scas clc pop dec (bad) out ja fnstsw icebp pop repnz call (bad) fcompl divb (bad) daa mov cld iret jmp mov (bad) std and aas popf (bad) das (bad) xchg pop sti clc aaa sti pop mov decl jg (bad) out sti std mov in jmp jmp (bad) jmp (bad) lcall stc rcrl mov lods jg xlat (bad) test imul iret lahf cli pop cld pop mov mov daa jg jg jnp jg pop (bad) (bad) std fistpll aas inc (bad) push mov jmp (bad) push mov das stc mov das sub (bad) xchg aas cmc lahf std lds scas inc (bad) ljmp std (bad) inc jmp in std sub cmp jg jecxz aas cli mov lret jg cmpsl mov ljmp (bad) mov (bad) pop cld push scas jle aas sub lcall repz lcall push (bad) faddp jg (bad) clc repz scas jg iret sti xor lods jg scas int mov aaa jle aas call pop sar mov mov outsl std sbb loop popf mov scas dec aas loopne sti jnp mov push xchg jg jnp std push jmp jg aas std sub pop clc mov pop fdivr and stc xchg (bad) stos aas repnz mov (bad) stc xchg dec (bad) cmp movsb jg out pop outsb inc mov jnp call push xlat (bad) in mov (bad) mov in outsl std aaa cs stc aas loopne stc push movd mov sub (bad) lods aas in jecxz clc idiv mov pop jnp jmp and scas notl pop repnz cld push jg out repnz cld xchg std mov in cmp stos (bad) dec push fnop hlt sarl jecxz (bad) cmp iret mov jg out outsl icebp cld (bad) (bad) jg mov jg leave pop jle mov clc inc pushl jg out stc incb call (bad) lods (bad) in xchg aas in dec push fistp lock aas sbb fcmovne outsl mov (bad) std xchg mov scas call jl mov pop cld jae gs addr16 push jg outsl (bad) jmp cli or cmpsb aas cmc das std repnz outsl push (bad) pop (bad) aas iret jle pop jae (bad) jmp jg scas test cli sub mov inc pop repnz out pop (bad) jmp ja outsl lret (bad) cli lahf stc pop (bad) loopne idivb arpl nop pop jecxz stc daa jg mov imul incl iret pop inc (bad) cmpl out sti (bad) xchg fucomip pop std xchg (bad) mov clc lahf decl ja lea stc xor out cli dec jle lahf sti out push (bad) cld out cli cmp xlat cld xchg incb xor cmc (bad) xor sar lahf std xchg std mov jg stc mov pop std jmp repz lock inc (bad) fcomps clc addr16 (bad) idivb idiv jecxz jmp aas dec (bad) in mov mov divl cli inc mov (bad) stos lcall movswl pop xchg push jmp decb jg (bad) das fistpll mov jmp incl repz push jle fistpll (bad) lahf std push mov jp cmp and hlt stc dec (bad) scas mov jge cld mov scas (bad) negl fucomip mov pushl out dec decb sti test jmp int mov in pop repnz sub in out pop sti sbb decl lret (bad) mov cld fsubrs pop aas stc mov psubq loopne jg dec (bad) pop call outsl cmc pop jle jecxz stc dec sti js out pop pushf (bad) xor std add (bad) clc ret jg dec dec jmp mov mov std cmpsl cld mov enter mov in outsl std dec decl push out hlt idivb stc iret sar rcrl cmpsl (bad) push lahf cld iret aas clc das (bad) mov stc mov (bad) mov jno pop (bad) fidivrl jmp jmp inc cmp repnz cli (bad) jle aas in outsl cli lret idiv cwtl xchg cli out jns outsl std jae pusha neg inc jg lahf hlt mov das std into aas repnz jg sub stos mov movsb push mov (bad) scas repz in mov jg aas std add test jecxz (bad) aas xor ljmp jg ljmp mov fwait pop std mov pop div jg pushl std xchg mov lahf stc std mov out mov cld daa jg mov jecxz in out jp pop std std jg fcomip aaa std addr16 push aas call cwtl jg fnstcw cmc ljmp mov xchg cmpsl pop xchg lds jno call iret (bad) fistpll mov cld ja sti lds aas inc pop jp std (bad) incb cmp pop ljmp sti aas in mov jae test jmp je (bad) (bad) cli jmp (bad) aaa inc jg jp iret (bad) imul out stc mov sbbb (bad) fnstsw lcall and inc jmp aas lock outsl call repnz call jle mov jae loopne lahf mov cld jg jnp iret jg loop sti iret (bad) aad in idiv iret incl push inc aas imull mov jg out ljmp jecxz cmpsb cld iret scas frndint inc (bad) std sarl dec call sahf decl call mov scas (bad) out in das js mov fisttp jmp jg cli jmp xchg mov xchg jg scas sti (bad) (bad) stos pop cmc das (bad) jnp rcrb mov (bad) and pop aas (bad) pop out (bad) loopne sti cmc (bad) test out stos fucomip xchg cld sub mov mov (bad) (bad) out (bad) jmp in fnop in (bad) sahf jg repnz push jg mull pop std (bad) jg mov out (bad) addr16 cld repz (bad) dec pop repz cld out (bad) mov (bad) ljmp divl stc pop call mov (bad) rcr out negl popa jg hlt iret cli ret push pop sar fildll fdivrs in cld aad clc in cld or iret std xchg stos jg (bad) clc fwait incb (bad) xchg aas clc scas mov stc cmp pop repz cld popf decb add jle jg (bad) clc fisttpl stos aas xor roll in cli dec dec push pop sahf (bad) cli jg outsl xor stc (bad) lahf (bad) fistpll inc inc mov pop (bad) and pop decb (bad) mov dec idivl lahf clc cmc inc (bad) mov test in sarl and pop inc lahf cli stos mov cli sub dec std (bad) mov mov inc push mov clc int mov lahf std (bad) pop (bad) (bad) std mov scas (bad) cld aas cmc push std pop lahf std pop inc pop cmc jg movsl jg fisttp push mov (bad) cld fbstp cmp mov fcomi mov xlat pop jg out ja sbb xchg (bad) mov sub fstpl lock cld outsb (bad) fdivrs stc mov call cld jg loop mov loopne cli add in pushl mov jle mov repnz out stc (bad) jg jecxz cmpsb inc lahf std pop std cmp jecxz lock std (bad) (bad) std (bad) mov lcall (bad) xchg jle scas jbe cwtl pushl stc adc pop js out (bad) stc jmp cli push jg (bad) pop (bad) fsts ja pop cld xchg jg xchg fucomip idiv ret (bad) mov cld dec pop std mov outsl outsl std jne repz sbb sub (bad) lock lret mov paddb leave outsl jno pop std dec stos fnop (bad) das ds (bad) fcos (bad) (bad) fcoms jg mov (bad) (bad) jmp dec pop call shrl das incl mov imul outsl icebp push cld jecxz ljmp fldt gs ficomp clc inc xchg (bad) out xchg (bad) fstpt push fnstcw (bad) lahf (bad) fsub out clc push cmp dec lcall clc addr16 push xlat int lock and in pop (bad) push std inc mov cld outsl mov movsb jmp in out enter fdivrp stos aad jg mov (bad) fisubr daa jmp aas out fnstsw hlt (bad) jg paddw jmp cmp aam call (bad) fsubr icebp daa addr16 (bad) test decb clc repz aas in lock clc std (bad) out aas in jg scas sti arpl in (bad) push jg out icebp (bad) cld clc out cli das cmp inc sti fnstsw stc outsl incb ljmp mov out jg push jg fimull inc sub jmp jmp xchg cld push mov call decb les jg out jg outsl (bad) sti mov aas cli dec incb sarl icebp out mov imul mov faddl mov ja punpckhbw loopne cli mov xlat std test int cld jb stos (bad) fdivr not push mov (bad) fidivr lock std int3 pop cli mov out dec decb cmpsl jle pop cld mov mov jecxz jnp pop mov push decl pop sahf mov clc mov stc stc pop stc aas (bad) idivb (bad) movd outsl (bad) sarl out aas inc stc xchg aas std scas cld lods jle cmp or scas (bad) imul out ret jmp sub and lahf pushl jmp aas cmc fnstcw mov xlat aas std xlat (bad) xchg (bad) mov movl incb scas mov jg mov mov loopne (bad) (bad) lea ljmp mov (bad) loope hlt outsl std jne lahf cld fidivrl jg dec dec lahf stos pop push jg cmpsl mov aaa clc call jle dec jp sti inc inc ljmp pop cld outsl (bad) cmp loop stc mov rcl (bad) lret aas (bad) pop dec (bad) out jmp outsl pushl cli aas stc ja insl jg out cmp out inc jg fbstp icebp pop dec daa mov std stos jg loopne cli lods jle fucomip pop ja cmc inc lcall cld data16 mov sar (bad) mov jle out stc mov (bad) cmpsb fucomip in repz icebp jg pop cld jecxz jg stc mov ret icebp clc outsl cli mov pop cld icebp push in sti paddd (bad) out (bad) das cli out decb jp (bad) (bad) fnstsw fnop addr16 daa jg out (bad) shr jg out (bad) (bad) std (bad) std imul jmp std ja inc jg aas decb outsb std jno (bad) stc xlat cld cmp out hlt imul out pop (bad) cmp pop adc sti cmp mov cltd fildll imul xor jg pop divb jg lahf xor out std dec mov push cmpsl dec jg jg (bad) clc xchg jg aaa jmp mov decb gs decl paddd out mov int aas sti scas popf pushl jecxz (bad) call iret jl fwait ljmp lahf (bad) gs stc xor into (bad) in aas cmc mov sub inc imul mov xchg aas out stc pop sahf cld cmpsb dec lahf aas (bad) in lcall or cmc jnp stos jg xchg out lahf (bad) hlt (bad) jl aaa cmp lods rcrl out das (bad) gs std fnstcw jg mov fcmovnb (bad) fnstsw cld (bad) dec aas fidivrl sti jnp into aas icebp aas std and (bad) std iret (bad) in push lahf cli popf jle aas cli mov in out incl fistp aas cld or aas fwait std bnd stc push pop (bad) out (bad) mov sti jg (bad) cli jecxz mov jmp out cmc iret (bad) pop (bad) jg fstpt cwtl cld mov jecxz cli mov xchg jg ja jae pushf aas jecxz fdivrs jle out decb repnz nop mov outsl (bad) sahf jb sub jg in aas std das mov mov incl jle xchg insl incl (bad) (bad) (bad) lahf cmc cmpsl std adc jle iret (bad) mov hlt leave jg lcall aas (bad) (bad) decl in (bad) cld jecxz mov mov (bad) sti push jmp pop stos mov pop cld or jbe jg push (bad) fsubr std (bad) cmc xchg pop std and pop repz dec jle (bad) (bad) xlat loop mov cmp push stos (bad) in cwtl hlt (bad) leave jg addr16 or lahf lock data16 icebp (bad) add lahf sti out movsl jg pop repz fistpll mov jg idiv dec (bad) mov cmc (bad) std aam das push jg aas (bad) mov outsl cmc addr16 cmp std lahf cli jmp jmp cld xlat std add aas std leave out std cmp push fbstp mov aas dec (bad) mov ljmp jle aad lock pop hlt fistpll lock into (bad) stc aas cmc lahf std mov divb mov mov cs pop sub daa (bad) in pop nop std ja ficompl stc xchg pop lahf std dec call cmpl pop dec aas lock pushl adc idivb lret call jmp aaa stc mov jg loope lock (bad) in out cli xchg std arpl push repz negl lret (bad) jmp icebp pop std das out lret mov jg mov cld (bad) iret (bad) jnp xor jae jg lahf arpl out pop cli jae (bad) outsl dec mov decl jbe out std push das (bad) loope std sbb shrb idiv outsb (bad) in outsl mulb jg out mov test repz popf fisttp mov pop repz pushl leave outsl ss cmp mov in cld mov jecxz in hlt aas cli mov decl lahf (bad) sti ja aas repnz (bad) and sbb (bad) cld ret mov iret sti mov inc (bad) cmp jae (bad) jg icebp in (bad) sti push cld cltd (bad) (bad) mov jmp outsl (bad) fnstcw jg pop jg scas (bad) fistpll addr16 inc mov pushl test (bad) cmpsl jmp jg outsl hlt (bad) add xchg mov inc (bad) out lahf cld xchg ja js lahf out shrl pop cld stc mov es jg negb cmp movd lahf repnz (bad) fnsave jmp out cld mov push dec pop lock cld mov jg lahf call (bad) icebp das sti clc jg jge mov ljmp clc idiv cmp (bad) std mov mov (bad) int3 pushl hlt imul mov out cli mov lahf std cmpsl jg lcall pop call movsb aas jmp mov pop std mov jg jg fdivrp clc xlat pop std mov iret stc xchg dec jg cmpsl jle sar call sti (bad) imul shll std sar sti fcomip inc (bad) out jg cmpl aad hlt std xchg outsl std test mov decb inc std subl jg fcomip dec mov jmp dec lcall lock ljmp push jg xlat clc lea dec (bad) incb jmp jg mov fwait (bad) fsub pop idivb pop stc out lcall ja cltd outsl mov pop je jnp sbb ja push lahf call leave jg (bad) sbb dec std mov jg fcomip jnp jmp stc (bad) aas stc dec std loope (bad) fist push aas icebp paddd (bad) fisubr aas hlt dec insl fsin (bad) sub xchg mov jg loop cld push out push in pop cld clc mov into pop mov (bad) cmc divb mov pushl fistpll lods jmp pop std mov icebp call (bad) jecxz clc into aas repnz push (bad) call repz das clc xlat push call pop negb aas pushl icebp fistpll stc sub xchg std mov out (bad) out (bad) out jmp jecxz call mov roll cmc mov mov jecxz ror jg in jp mov jg cmpsl jg fcomip das clc out std je aas stc cmp into lahf (bad) jae jg (bad) pop jle,pn (bad) psubd rcrl idiv mov mov jle xor (bad) out lds lds clc cmc mov ret aas js or repnz jg (bad) stc cmp sti fwait jle addr16 mov (bad) js pop std or repnz cmc dec jle mov icebp dec movsl clc out ja xchg jmp mov fdivr cld ja (bad) cld pop incl icebp scas (bad) ja stos (bad) mov xchg inc aas icebp aas ljmp xchg in pop call mov out std mov jp jmp std xchg (bad) jg (bad) ret jmp jmp (bad) jg repz xchg out sti (bad) in xchg fistpll mov fistpll ja fidivrl nop (bad) clc lds cmpl out fucomip pop jmp cld jo (bad) std popf jg out std cmp test decb xor out lahf cld xchg scas pop jg lahf cli call (bad) incl jnp xchg movd dec mov cld pop (bad) fistpl jns xlat gs jg lret decl jle,pn mov jg jg (bad) cmp mov incl or (bad) iret incl cmc iret push xlat fdivr xchg mov lds (bad) dec (bad) (bad) aas jmp out imulb inc lcall icebp jg sti xchg stc push imul jg jg clc sar (bad) cmp jnp jne ja cmp ret pop inc jg pop mov sbb jmp stc repz mov in std lods (bad) clc xchg (bad) fldt (bad) mov jg outsl sahf (bad) mov std jg outsl cld mov pop lcall mov ficomp sti lret pop mov jmp add (bad) idiv std lcall std outsl clc push in sub fbstp pushl in (bad) fwait pop cld dec daa jg push sbb jg mov (bad) fwait aas jle or jg pop push cld icebp aaa sbb das std and in (bad) jmp idiv ljmp insl (bad) mov das pop std (bad) lock call aad lock xchg mov jle mov add iret inc pop jg jge clc out pop cld cmp lret std pop pop std loop mov mov aad stc out sahf mov sti pop cli pop popf cld lds outsl pop std dec xchg sarl (bad) jns sbb pop call outsl dec (bad) out jl or sti imul jmp push mov cli xlat (bad) sub call or neg mov fbstp pop cld idivl xchg cli jg out cmc jg mov (bad) repz (bad) stc dec jle out hlt scas (bad) pop scas jmp jle xor aas cli (bad) jmp jmp inc jg mov stc aaa cmp clc loope sti and mov mov cld push scas decb xchg (bad) stos pop out jmp decb jg outsl std dec mov arpl jg out std cltd fbstp imull cmpsb cld std (bad) in sti ret call lods mov call mov mov (bad) loopne decb loopne and xchg xchg fbstp xchg dec mov mov aas mov sub das pushl inc jecxz cmc mov push jg jg inc (bad) and fidivr (bad) daa cld out in cmp in aas clc das (bad) mov stc pop (bad) cld fcomip aaa cli or stos xchg mov jbe idiv sti mov (bad) call push (bad) ljmp clc outsl icebp addr16 jmp std xor cmc out cmc shrl pushl std mov cmc push repnz lcall int push cld dec decl stc outsl mov std pop mov icebp (bad) fwait jg mov cmpsl stos sbbl clc (bad) ljmp mov jmp cld mov fidivrl xor pop (bad) in aas jmp (bad) std jg lods aas std outsl cld fstpt dec call sti push jle mov in std rcrl fnstsw pop pop decb jg das cld das out decl (bad) stos enter mov mov stc jmp incb fsubrs lahf inc cld negl decb jg (bad) cli outsl cld lret in aas idivl adc aas js cmpsl cld movsl dec pop clc outsl lahf pop std xorl pop (bad) outsl (bad) xor clc iret pushl int hlt dec fbld jmp push jecxz out sti mov repz decl cld inc mov repz std inc xchg mov cmp rcrl pop (bad) jmp icebp scas inc (bad) cli mov cltd (bad) jg sar loop (bad) jge jle fucomip pop stc icebp mov ja dec jg ja dec jg lahf mov dec idivl aas icebp (bad) std cmp incl aas cld cmpsl pop pushf (bad) push (bad) lahf jle mov cld add mov test int out mov aas stc lahf sti and fdivr in mov aad jg (bad) aas cwtl std jno fsubrs sti aaa cs fucomip scas sti pop incl incl mov enter jg cmpl bnd out hlt notb push fwait jl in jge sar aam icebp in push iret stc sti dec mov dec (bad) lcall cli lret jle (bad) sti lahf clc ljmp (bad) fdivr lock ds adc in (bad) in aas icebp pop std int3 aas clc scas jg lods aas cld xor das cld cmp fistp cli arpl call (bad) sti mov std mov cld sbb call idivl mov mov (bad) jae call mov fcmovne (bad) std std loopne (bad) sahf jg jg lahf (bad) ds jg lods addr16 mov pmaxub sbb cmc pop cld fstps jp push dec push outsl std (bad) mov iret lahf clc (bad) add (bad) pop mov jmp std aaa pushl in push xchg repz jnp mov mov mov mov ja and clc jg ret push cld jp sarl in cli jnp movsl repz in inc outsl lcall out fcomip xchg std (bad) decb dec std mov mov hlt outsl sar sarl (bad) aas lock sti fnsave (bad) pop hlt out leave (bad) mov fucomip jg mov jg aas push lahf stc (bad) std int3 pop lock std lds call jle pop clc dec dec inc in ljmp cli pop cld mov jmp or repnz lret cmpsl and mov mov movsb pop jmp cli stos (bad) fidivr stc lahf lock cld jne in lahf repnz push mov std es outsl repnz nop (bad) std sub jp inc call or hlt jmp sahf std dec mov aas in cli mov ja movsl das (bad) out outsl std add xchg cld (bad) imul jmp std mov test jo std xchg lret aas cld pop sti lahf jg out mov hlt jecxz lock cmpsl (bad) jl lods stc addr16 mov rcrb out cmpsl dec push (bad) fdivr adc incl (bad) mov fucomip xlat clc inc ljmp cmpsb cmc xchg out (bad) adc clc xchg mov jle scas decb call (bad) pop cld jne pushf jg xlat cli iret dec ja ret jg popf fstps clc daa std ss fcomip stc daa xchg (bad) (bad) fistpll daa jg mov stc psubb out mov repnz adc jg out ljmp jg bsf imul call fcomip das decl fst jg pop inc outsl stc cmp jp std mov (bad) jmp icebp cmpl (bad) jbe push (bad) imul jle in clc repz dec jle pop sti stos jg bnd movsl addr16 ljmp idiv popf ljmp sbb pop jg arpl jle fucomip aaa call repz cli lods jg paddb clc das mov mov pop mov push aaa lahf ljmp (bad) cmpsl mov sarl negb repnz std mov lahf jns dec pop jl (bad) aaa jg mov mul call lahf negb (bad) std mov pushl stc or pop stc sub decl (bad) clc jnp mov decl fstpt (bad) jp sub sahf jg repnz (bad) adc jg (bad) clc jmp sti sub pop test (bad) fidivrl sbb adc ljmp scas cld ja (bad) xor dec dec push call mov icebp scas stc mov (bad) push pop (bad) ja sarl (bad) (bad) cmc mov fnstsw std and aas std fwait incl (bad) (bad) clc cmpsl std out cmp (bad) incl mov jg sti std inc (bad) dec (bad) sbb pop ds xor std outsl std or pop stc push pop (bad) mov push (bad) pop jle pop lock (bad) cmp push dec (bad) mov das adc cld jp aas in cld sub xchg mov cli pop sti daa fistpll out jle aaa jl mov (bad) cli pop icebp aaa std jp lcall (bad) cli (bad) sarl in mov sti out (bad) mov hlt psubw incb out push cld xor fsub pop cld daa jle fild mov pushl (bad) enter fwait push (bad) fucomp aas jne (bad) fnstsw arpl mov in sti xlat (bad) lcall jg hlt xchg sub jl scas (bad) mov xchg iret stc lahf (bad) negl scas icebp lret (bad) fdivrl (bad) iret stc dec jle jg hlt cmpl jle (bad) (bad) call fnop sbb pop jg (bad) std ljmp clc div dec jg lahf enter out lret mov in das cld push jmp mov mov cmp out out stc out sar leave jg scas (bad) stc aaa jle xlat clc pop jle mov dec jns (bad) in pop clc jne int3 aas icebp fsts lock cld fnstcw (bad) lahf (bad) cmp lods mov idiv ret out divl jg outsl icebp (bad) jg,pn (bad) xchg sahf std inc jg (bad) ja ss outsl cmc dec (bad) sub (bad) fidivr mov sub pop jg lahf cli lahf std mov jg lahf hlt (bad) idiv loop dec icebp xlat pop icebp jmp in in paddd mov in bnd fnstcw jecxz add sub lahf mov mov lahf (bad) (bad) (bad) cmp fisttp cmc das cli (bad) ljmp (bad) out cld repz (bad) (bad) xchg (bad) jnp mov loop decb jnp sti (bad) cmpsl incl out xchg (bad) mov fwait push fbld stc das jg mov in (bad) mov sub push fnstsw fucomip outsl stc or repnz inc aas mov cmp cli inc (bad) shll jle fbld imul outsl cmp push jle jg jg (bad) in (bad) xchg push outsl mul idiv pop pushl clc xchg (bad) mov jmp xchg jge cld lcall dec decl aas stc fwait jmp mov iret (bad) mov (bad) cld cli mov std mov ja add scas notl in sti iret std ret out pop jge (bad) ljmp jmp aas in dec jle repnz lahf ds inc jle pop icebp jnp (bad) stos aaa jmp pop std sbb call mov repz negb aad (bad) mov aas in mov cmc xchg aas cli fistpll mov imull stc and jmp out hlt dec jle pop std int3 hlt jg leave (bad) pop cli repz aas sti scas call out lock jle out scas negl std cmp xlat jg loope jno lock (bad) in push xlat incl jg lahf cmp push jg aas out mov jmp out sar lahf (bad) repnz jg pop cld or aas cld or ljmp iret call idiv std jle out std cmpsl std xchg lahf cmp out fsubr sti xchg jmp jg pop nop push cmp mov xlat lods lahf std pop jg add jmp (bad) cltd fcomip paddd out call jg pop mov loope mov out (bad) out ds dec mov (bad) cmp mov jne (bad) inc jmp pop clc cmpsl std cmp out cld mov (bad) std xchg (bad) pop jg das decb mov xor push (bad) fidivr ja incb incl jecxz jmp clc iret jl lahf cmp sbb stc fcomip in fucomip ja (bad) mov iret jbe cwtl aas std aaa ljmp (bad) bound std lods inc jg lds outsl cld fstpt mov iret std mov (bad) (bad) fidivr jmp (bad) mov ljmp (bad) cwtl pop mov stc out cld (bad) outsb std loope lock aas call pop inc leave mov jg outsl cld ja int fidivr out cmp xchg movq stc pop cmc aas cmp aas imul stc in xor pop mov jg,pt out leave out dec icebp fcomip cmpsl (bad) stc mov push mov incb stc repz (bad) in (bad) out mov repz cld xor pop outsl jg jg cmpl aas (bad) fidivr mov (bad) mov bnd aaa out cld (bad) jg mov aas repz pop push std (bad) jg out notb (bad) cld fbstp jg bnd mov ljmp jg mov (bad) clc lahf stc iret (bad) fcmovnu in outsl mov lahf mov (bad) test out iret stc outsl (bad) jg cmc lahf cld out pop clc gs pop dec jg (bad) stc jg jle pop std inc jmp pop inc div aaa clc pop jle (bad) jg mov and aas repz cld in jle (bad) aas stc dec mov jmp clc clc jg cmpsl (bad) mov stc idiv cmpsb das fdivrp xor outsl (bad) jecxz (bad) pop notb out hlt xlat and mov cmp aas lret jmp push (bad) mov decl (bad) fldt (bad) cmp int rcrb (bad) jg xchg fcomip pop (bad) sarl lcall jmp stc ret (bad) push in mov mov inc lahf cld aaa lret aas in psubw out lcall (bad) fdivrs sti ja inc mov std sbb icebp out sti out (bad) fistpl mov (bad) in fcomip scas std cmc jg jg (bad) frstpm(287 lds sti mov (bad) (bad) pop (bad) cld mov imul aas repz lahf (bad) (bad) mov repnz stc repz jmp stos cli (bad) incb mov in jg dec jle in sti xlat cld pop jg (bad) daa cld sub mov cmp ja scas jg aaa cld inc push decb pop pop std mov ljmp lahf cld out in jmp das sub mov out pop sti sbb outsl cli hlt in sti (bad) mov clc aaa clc (bad) int3 mov jle lret mov mov mov repz (bad) jnp in (bad) pop jmp stc mov out fstsw dec push dec (bad) stos jg lahf jl iret adc aas inc repnz lret inc xchg aas (bad) out pop call addr16 jmp in jg outsl cmc mov xchg fildll lcall daa mov fwait std sbb jle sti (bad) jle mov sti (bad) sub repnz imul cmc pop inc (bad) out incb (bad) fdivrp scas (bad) pop fdivrp or (bad) stc (bad) into jle jg lock jge (bad) jns lahf sti jmp adc repnz imul push femms (bad) out jnp bt cmpsl mov fcos js cmpsl std pop inc (bad) cld jmp pop scas jg decb (bad) jmp fucomip idiv outsl jg outsl clc fnstsw outsl push cli std push push push mov mov std fwait std sbb dec cld arpl js mov xor out dec jmp rcrl mov sti bnd xchg leave jg jne mov cli (bad) das jg aas (bad) outsl std out inc pop hlt mov (bad) mov ret mov icebp daa jl cmpsl std mov cli out jle push in xchg mov sbb mov sub (bad) sub std sti (bad) insl outsl lahf cmp jmp ja cmpsl out incb lock fistpll aaa (bad) clc aas cli outsl pop (bad) fcomps lock std mov addr16 jnp push mov sub mov loopne cmp mov call lods mov das decl (bad) das (bad) in dec jg outsl stc mov dec lret sbb mov jg outsl jns sti cld (bad) mov out repz cli out add call paddd jecxz divl (bad) mov rcrl jg outsl hlt idiv cmp scas fbstp clc daa std imul std xchg mov sti out mov xchg (bad) (bad) dec jmp pop (bad) ds out mov cli inc call lock cld imul (bad) out decb jg mov mov sbb jg xorl int in sti popf push scas (bad) jnp mov jle jg das incl fisttpll mov clc cmp jmp (bad) idivb std push cld scas mov aas clc sbb pop sti loopne sti pop jmp jg pop hlt (bad) (bad) lcall mov pushl aam aaa cli movq decl fdivrl sti mov (bad) jg stc out jg lahf jo out pushl pop std cmp lret outsl imulb (bad) fsubs jg das pop (bad) arpl aam imulb xor sbb sbb insl jg out iret lahf decl loope jg cld push jmp lcall fcomi aas pop ljmp lret ja out (bad) cld mov stos aas ljmp iret (bad) in mov (bad) clc aas pushl fucomip das cli (bad) inc aas repnz std push (bad) (bad) scas mov xlat fnop clc pop cld jmp (bad) fucomip pop ds cmp (bad) jmp popf popf (bad) addps xchg (bad) fstpl jge das stc lods decl in mov repz (bad) in lds xlat data16 sti pop std jnp xlat fcomip (bad) (bad) jg (bad) lret (bad) scas pop jo (bad) (bad) cli inc push arpl (bad) stc mov push lock hlt (bad) in aam std cmp fdivrs (bad) jg fcomip mov add cld out call (bad) fidivr repz lahf aas clc stos ljmp jmp cld out clc outsl sahf incb loopne cli mov js fistpl inc ljmp sti adc xchg aas jecxz dec jg jg cmpsl fwait mov mov std add pop call int popf jmp pop std stos (bad) mov fistpll icebp cmpsl std sti jg scas repz (bad) xor daa jg mov neg hlt fildll aas jp cmc (bad) std cmpl pop (bad) (bad) push lret push lahf jg scas pop cld stos call cmpsl cmpsl das lret (bad) sti (bad) jmp in icebp outsl jmp jnp jg mov idivl in ja arpl stos incl fbld mov mov das dec out cld arpl scas mov xchg mov aad sarl fistpll push incb or (bad) aas incb pushl lret mov mov mov stos scas jle mov fstpt mov out (bad) paddd jmp in psubq (bad) out jg paddw sarl call outsl sti lret sahf cld jne hlt pop dec (bad) fstpt sti xchg jge pop std aaa jg lahf cli addr16 std push pop cmc jmp mov (bad) mov jle ja neg lahf in iret inc push aaa jg outsl repnz hlt paddusw xor hlt cmp (bad) cld or repz iret jle mov pop lcall xchg out cli call mov repz std fdivrp std (bad) lcall fnstsw cmc jg outsl cld xlat cld push jg (bad) cli (bad) decl fldpi rol lahf cmc das incl (bad) aas out aaa std (bad) xchg in pop cli out jle fdivrp imul std daa pop (bad) aad (bad) jbe jmp jg out idivl jg jecxz jmp movsl cld (bad) (bad) cli psubb fdivrp loop clc repnz (bad) ljmp fnsave loop fisttp pop sti aaa outsb (bad) cli mov pop incl loop cli iret inc aas in aas incl idiv pop jle mov lahf out insl mov icebp das (bad) out lds ja lods jg lahf repz cmpsl jg pop icebp dec cmp jne (bad) (bad) rcrl insb cld (bad) std xor jmp push (bad) fistpl paddd sti aaa and pop aas (bad) scas (bad) lock std paddd das (bad) fcmovu (bad) xlat (bad) cmc pop (bad) out mov aas mov mov ljmp xor (bad) std (bad) jecxz ljmp inc hlt das stc icebp lahf clc sbb repnz mov fwait jg fisttp cld lret (bad) lock out aas fyl2xp1 cmpsl jg stos xlat aas icebp (bad) cmp fcomps negl and lock out jle pop out clc in (bad) gs pop jg lahf hlt xlat std pop (bad) fistpl ljmp jle mov lret (bad) mov inc jg out repz int3 jle jg scas sti paddd jg scas jle dec mov mov jmp (bad) std aas cli jnp sarl pop call (bad) (bad) push (bad) fisttpll outsl repz (bad) scas jg icebp jmp jg pop hlt aas std scas aas clc in outsl (bad) jecxz or jg aas incb outsl std mov sti xlat sub out outsl js jmp dec jg fcomip call test jg jg movsb cmc idiv call cmpl iret cli jne jp,pt clc push jg hlt stos jmp sti outsl jg mov mov call leave aas cmc push mov mov shrl stc (bad) (bad) push push scas call (bad) ja icebp fcomip mov cld inc push pushl lds jg outsl cli loopne stc out xlat jg pop not (bad) popa (bad) (bad) call mov sarb call lahf cmc outsl ss push mov pop pop jg cmp std jmp clc jnp (bad) cld aas out lahf (bad) pop out std in scas lret (bad) push cld mov repz jle aaa stc cmp mov jg outsl sub ja push jmp aas lahf lock scas (bad) mov jg fbld xlat fdivr mov cld fimul jle fistpll scas cli das (bad) sti jg outsl clc fistpl mov (bad) (bad) std scas (bad) push (bad) jmp loope out jg push std sbb jg dec mov (bad) fwait mov decl daa fistpll std ja in (bad) negb jg pop (bad) xor clc jg (bad) out aad loop sti pop call fucomip scas jge outsl std sub jo (bad) clc pop ljmp adc jg outsl ljmp xlat aaa mov jg pop jl fistl repnz cli arpl cmpl leave scas stc jnp ret jg fnsave mov sti sti cld pop lcall fwait mov lcall mov pop lods aas popf cmp popf (bad) lods jg (bad) mov ja pop jg out test cmc (bad) aad pop (bad) shrb dec cld jle lahf icebp xchg ljmp lods mov fistpll jnp shrl (bad) out js scas cld inc (bad) fstpt popf repnz (bad) call (bad) jg pop cmp jecxz jg mov in das stc aad fucomip psubd shrl sbb decb std (bad) jmp cli pop call das cli xlat out push (bad) loop std or xor std mov mov (bad) out das (bad) sarb repz clc sarl (bad) lcall negl cld daa inc stc xchg jg mov push repz clc out cmpsl cld iret pop sarb sarb cld jmp jp mov mov rcr jmp jl mov das movsl cld jmp popa das push jg aaa fnstcw mov (bad) clc (bad) pop jg into scas lcall (bad) xchg lahf (bad) adc mov (bad) mov jmp push jg out jle dec (bad) (bad) jmp idiv in mov stc loope lret mov dec pop cld sbb mov std outsb jg scas jno pop cld repz aas stc inc decl inc lahf cld leave fcomip pop cld xchg xor aas in (bad) pop (bad) lods mov dec fcomip mov (bad) imul mov sti daa mov outsl std stos mov sub das pop xchg cld std movsl mov cmpsl jg mov (bad) in jg imul jmp repnz (bad) cld leave das push (bad) cmpsl jg fist (bad) out mov gs ja sti decl icebp jmp in (bad) ljmp mov cmc mov jmp out inc fcomip cmpsl jg pop std push jle in fnop loop clc (bad) aas mov jmp cld popf mov jg jg cld push mov pop (bad) aas sahf (bad) cmp dec popf std push jg jg or mov cld popa call ljmp cli (bad) (bad) stc lahf cli and sub jmp lods (bad) ficomp mov jle out (bad) sbb idiv mov cld idiv addr16 aas jp (bad) sti (bad) (bad) (bad) push jg scas std loopne cli out jle jg pop mov jle icebp (bad) popf leave jg cmp dec mov and dec std push cmpsl jg (bad) sbb jbe js (bad) jbe psrlq ljmp jg xchg cli lret into mov mov std fucomip das stc out mov jg aas lcall sub (bad) jg mov lahf cld dec mov mov in pop repnz jp (bad) repz xor jg push jg pop repnz mov inc jg ja mov fistpll addr16 cmc rcrl (bad) stc out ljmp mov jmp hlt outsl jnp (bad) std addr16 aas divl lahf (bad) mov movsl jg jg jg decl pop dec aas cli pop (bad) cld aas insl icebp out jg pop repz mov fsubrl pop cld jmp fstp xor (bad) std ds xor clc std fucomip pop (bad) ds fcomip jg (bad) fucomip outsl cld imul sbb call in add in aad cld (bad) jg push in decl cld aad aas hlt pop cld imul (bad) fxch jg mov clc xchg repnz mov (bad) neg cmpsl cli in sub jp xchg in out pop hlt xchg mov repz mov jnp test pop (bad) aam cli lahf (bad) loop inc mov jmp cld jp (bad) out repz std loopne (bad) xor clc imul (bad) mov (bad) mov sti dec and icebp idivl ds xchg jle jg xlat cld pop jg pop stc fldt std and fdiv fcomip fstpt xchg cld call jg lahf repz (bad) mov sbb (bad) icebp pop std pop nop (bad) std xlat fdivrp and in aas (bad) imul mov pushl mov std out (bad) cld cmp jne (bad) popa push dec inc jg stos jmp clc fcomip clc aaa cld sti lcall jg in mov pop std or xchg (bad) cmp push (bad) lods jmp aas call jle jg cld lahf aas mov stc sbb jp (bad) (bad) clc aas in mov dec inc leave scas ljmp decb std pop (bad) pop jle out pop (bad) pop (bad) jmp hlt push (bad) aam (bad) (bad) ds das jg out cld stos pop div cld stc (bad) mov cmp mov pop jge pop pushl mov std jmp stc pop sti (bad) sarl loope fbld jmp lret (bad) mov lock aas std xchg sti hlt (bad) jg jnp std in call ljmp imull out std fsub mov aas mov ljmp aas cli and cmc xchg pop jmp cli sbb call and xchg hlt pop (bad) pop (bad) jns iret std xchg int3 outsl push cld cmpsl (bad) sti out negl repnz mov pop cld jns dec ljmp jmp (bad) hlt inc lret sbb fstpt lahf std in jg (bad) out call daa xchg (bad) std xor xchg (bad) mov jg mov jle jmp pop in outsl xchg popf jl mov dec repnz gs jg pop cld ja sub idiv out fdivr pop ljmp shr std ja lock pop cmpsl mov popf (bad) fnstcw xchg ds jmp xchg pop (bad) fidivr cld ja pop ljmp into jle push testl aas cli pop (bad) in cmp outsl jp pop mov jmp das sti sub pop (bad) das jle fcomip ja inc (bad) jecxz repz (bad) and jg push in dec pop std outsl (bad) daa aas std iret std out (bad) cli fnstcw (bad) pushl mov (bad) mov mov jg jge in call in aas call jmp decb pop dec pop jnp mov cmc sarl mov fidivr sti incb xchg (bad) addr16 inc jg std aaa (bad) mov outsl out (bad) xor stc push std fnstcw jg (bad) cmp pop mov mov movd mov ja mov jecxz jle scas std fidivr mov jle mov cwtl jg (bad) sti pop std inc mov xchg das (bad) fidivr ja lahf call mov iret (bad) xor ljmp pcmpgtb jns iret incl jge pop cld (bad) jmp jg out mov (bad) mov (bad) mov cli pop fdivr stc or jle aas loop clc cmp in jg ja lahf sub (bad) data16 (bad) adc (bad) icebp das (bad) sbb cli vaddsubps inc sti call (bad) mov jg jg pop cli arpl jle outsl dec jg jg out stc aad lahf repz cld cli dec sub cli cmp xlat cli stos jg fcomip addr16 (bad) std imul decl dec jg jg inc cmp mov int3 (bad) out repz clc xlat sahf std ficoml test repnz cld push jg sti das popf (bad) jle pop cli pop xchg (bad) call ret mov clc jae xchg mov (bad) fnstsw std imul mov iret (bad) out (bad) imul sti sar hlt ja sahf inc jg out incb insl mov mov xchg jg mov lahf ds xchg sub imull aam jg cld mov adc std (bad) (bad) imulb cmpsl jle aas (bad) repnz xlat fcomip ja sub imul (bad) out int inc (bad) out mov cld loope icebp aas (bad) aaa (bad) incl lahf cld jmp call inc pop jmp dec clc or jl xlat inc (bad) (bad) aas ljmp cmpl sti sbb fstpt ret (bad) dec stc pop (bad) cld fcomip paddw (bad) movsb iret idiv (bad) iret (bad) xlat (bad) sti xlat clc icebp fbld out push mov pushl jg mov icebp pop repz jmp int3 fcomip fwait (bad) adc out das stc lahf (bad) cltd lahf cld negl jle,pn in cmpsl (bad) mov mov fwait repz (bad) fnstcw xchg cmp cs clc jp mov nop (bad) in lahf pushl loopne pushf ljmp fcomip das std ja scas xchg aas idivb (bad) pop call pop clc daa (bad) fwait mov std out or in stos out std jmp idivl (bad) jmp (bad) call mov sbb (bad) aas cli fistpl ljmp decl gs scas push (bad) (bad) dec cli imul mov mov mov lahf cli sar pushf push (bad) ficompl cld inc mov aas std das jle fbld addr16 jmp cmp jg pop lock repnz jmp imul ja mov imul lock std jg,pn mov aas icebp aas jp mov jg inc incl ljmp (bad) neg mov (bad) cmc xchg jg neg mov mov jle clc jg cld ljmp addr16 fwait cld mov jmp das cld es into mov lret fcomip ja add in in iret cld mov das jmp lahf dec cld sti ja add es mov (bad) in aas icebp popf aas test cld fnstcw jl dec stc lahf iret (bad) in insb sti xchg push (bad) hlt iret pop (bad) es cld stos inc push sbb or push rcll hlt pop cld out leave call aas imul fdivrp cmpl repnz out (bad) incb clc aas repz dec and xchg jg mov repz cld dec std jns fs mov in mov mov fidivr (bad) stc push daa std pop jnp pop cmc fwait jge iret pop std pop call (bad) aad push aas dec jbe mov out mov mov outsl cld imull addr16 std sub imul addr16 aas loopne daa sti lcall int fild sti imul icebp pop (bad) loope jg pop mov push jg hlt pop cld das mov std mov sti out outsl lock sbb pop jg lds aas std lahf inc jmp mov std repnz aaa (bad) mov (bad) dec jle jg pop std push (bad) inc (bad) xlat (bad) (bad) pop std inc inc mov cld in cld addr16 scas jno xchg cli jmp cli jmp dec jmp mov lahf cld mov pop pushl pop std pop jg outsl negl lods dec dec jle jg (bad) cmp test sti ljmp std scas cld (bad) jg aas in std insb icebp jmp std fstp ds stos jle xchg out std out out std addr16 cmp cli (bad) insl inc dec push aas cli idivl icebp das stc ja cmp aas xor lahf (bad) stos cld in pop mov call (bad) out sti std fidivrl idiv sub addr16 dec cli xchg (bad) cmpsl (bad) ljmp (bad) mov inc mov lcall ljmp dec (bad) stc setg incl jle dec ds out incl (bad) idiv iret (bad) jg pop (bad) pop std aaa jg pop dec out iret call decl pushf mov jle pop cmc xchg jmp mov (bad) xlat hlt cld outsl movsb cmc (bad) aas idivl jg loop stc xchg (bad) scas daa jg push pop incb int3 pop jae (bad) mov int3 outsl mull cld mov std add out pop stc mov mov lahf sti idiv xchg fucomp std imul jg std cmp jg cld jno std in jmp fdivrp pop cld mov inc mov sti jnp adc pop cld loop std movsl (bad) in mov incl stos decb sti stc fwait cld aad leave lahf xor (bad) das std cmp aad clc repnz decl (bad) fstpt stc aaa std sub cld jnp rcrb mov call jecxz xchg mov mul jg jg sbbl aas lock aas lcall repnz sbb addr16 cmc mov (bad) jg cld mov (bad) fwait pop cmc fwait lods pushl icebp xchg mov jl pop jmp jg aas sti jnp std (bad) jg jg (bad) cmp in dec lods aas (bad) std sti decl iret aas xor in out fcomip jmp lahf jecxz aas neg jl push jg mov cmp mov gs idiv inc mov std das outsl jle outsl lcall (bad) iret jle outsl ss pop ljmp cld lahf jg das aas clc pop out std fcos sarl cmc sbb into jg (bad) imul aad cmc pop std fcmovbe jg jecxz in scas movsl cld leave outsl icebp xchg (bad) fstpt aad std jle jbe ja imulb adc div stc sub (bad) jnp jae div lahf sti ror neg mov jg cmpsl (bad) fidivr jle das cli push pop mov jg std xchg call aas stc pop std mov and idiv pop decl fistp loop fdivrs sti in jle aas loop mov inc mov std push jmp outsl std or cld pop jg fcomip mov cltd jg lahf sti xlat cld pop mov cld movsl mov jle inc cld dec mov mov idivl (bad) pop es ja out loop clc idivl idivl cld dec leave dec (bad) jge rcrl in xor call jle (bad) stos jmp sarl pushl iret mov pop pushl incb mov mov pop jl stc rcr (bad) std (bad) pop call dec jg idiv aad (bad) loope jmp sti sti movsb daa call aas std out lcall jg lahf pop jl sti jg outsl cmp hlt pop cld imul (bad) lret repnz jg dec dec jg in cmc iret std mov (bad) stc mov (bad) cli scas std insl fmulp push pop (bad) mov jg sarb pop jle lahf stc cmp mov idiv jno jg jecxz ja sarl mov inc fbld mov rcll in (bad) pushf jmp xlat cli cltd scas jle mov lret pop icebp iret cld addr16 (bad) pop pushl call (bad) jp cmp pop outsl mov (bad) test cld pop std icebp mov ja ja cmpsb mov out std jno dec jno inc cld jno jle fcomip (bad) incb mov iret aas (bad) in (bad) push mov aas icebp sbbl jecxz jg das sti pop push inc jg cmc imul jg out lahf ss sbb mull (bad) std jg sti int (bad) out outsl neg std (bad) mov inc repz loope cli mov repz cld mov sti iret sub loop jle aaa std repnz std in (bad) stc outsl cli inc ljmp jg cmpl lcall jg mov leave fistpll idivb std in aas out clc pop aas (bad) jae sbb (bad) lahf pushl xchg inc jg mov jg aas pop std push jg lahf clc mov cmc (bad) fstpt lds stc ja mov xchg (bad) ljmp xlat out hlt aaa incl mov (bad) (bad) std outsl stc pop jmp lahf decb (bad) stc xlat cld fistp push iret decl sarl (bad) fnstcw cld inc jg xchg jg ja dec ja out hlt jecxz jmp jg mov sbb daa jg sti fwait cld lahf push aas cmc mov jmp loop cmc pop (bad) mov (bad) mov jg in (bad) icebp addr16 mov jg (bad) mov (bad) fdivrl (bad) (bad) das (bad) scas mov jne incb mov incl jg fistpll mov push out jmp out dec ljmp fnstsw loopne stc mov jecxz clc pop hlt pop jge xlat (bad) idivb mov leave jmp (bad) (bad) (bad) std (bad) pop std push push out std iret jg aas (bad) fwait jmp xchg mov jg std (bad) jecxz divb cli xchg jle popf lahf cld (bad) (bad) lcall hlt lcall enter (bad) mov lahf cmp (bad) icebp pop cld imul outsl decb imul fcomip (bad) stc int xchg aas in push (bad) (bad) ret aas std mov outsl mov aad ret mov (bad) stc fcomip outsl push sahf call mov negl mov pop repnz cld aaa jg scas mull dec mov inc fidivr pop std xor (bad) cld push jle idiv mov (bad) lahf (bad) pop cld lea dec call (bad) fadds into scas xchg jg lret jg aas (bad) dec pop inc jg incl lcall hlt outsl (bad) jmp repz cld sub ja cmpl cld dec iret mov je xlat mov mov mov jmp jg lahf cmc pop ljmp lret push cmpsl std cmpsl mov jae out cmp das jp fstpt jecxz in out clc lods jg fcomip xlat cld lea lahf aas cli jg cld pushl addr16 mov repnz push cld divl cld repz (bad) jg dec (bad) neg repz mov jle outsl ja pop jmp imul jg pop sti pop cld cs inc jg out test lahf jae sti (bad) push cmc (bad) fldenv std mov fnop (bad) pop (bad) in cld aam call push lcall cmpsl (bad) cmpsb fistp mov call jg jmp push jg mov jnp cmc das cld in jle pop stc imul inc mov aas jmp fstps popf in icebp fcomip jmp std mov aad aas cli xlat call outsl cli cmp push ja out std leave jg fdivrp push std push mov cld idivl xchg std mov clc scas icebp lods aas loop pushl jmp movsl (bad) out outsl neg pop idivb (bad) push aas mulb (bad) ficomp mov std fistpll cmc addr16 cld inc jle fnop pop cli cmp fcomip cmp lds jbe fstp ljmp (bad) (bad) aas hlt dec jmp clc adc ljmp ljmp lret outsl clc lock (bad) icebp aas loopne aas lahf push jg mov cltd lahf cld pop testb leave mov dec jle outsl icebp jnp inc aas std (bad) cld ret addr16 mov repz jmp stc fwait decb xchg (bad) std jmp out stc fldt into aas decl fcmovu (bad) cmc mov call aas (bad) dec pop (bad) scas mov xlat (bad) jmp in jle mov fisubrl ficompl cld cmp lds mov leave lahf std scas (bad) aam idiv test xchg jg stc dec lret jg mov mov xchg in (bad) jmp mov loope leave jg inc cld lcall (bad) (bad) jmp jmp mov neg std (bad) das stc jmp (bad) sar hlt xlat lcall xor lea out (bad) out push push jg lahf testl movsl (bad) out (bad) std or cld (bad) jmp stc sar cld outsl repnz cmp jmp (bad) xchg jg jg xchg movsl pop cli mov in (bad) std fucomip cmpsl (bad) ljmp mov jle pop cli (bad) cld sahf lret (bad) lahf cli iret (bad) aad jmp lret jg into idivb hlt fistpll out jns cld push (bad) aaa jg in jg pop lock (bad) jno (bad) (bad) cmpsl jg mov lods jle fcomip das sti repz in decl jg (bad) pop out jle mov daa lret lret pop cld push fistp cld rcll repz les mov sub std jg xchg aaa lret jmp cmp sarl icebp cli dec jge (bad) (bad) scas pop mov inc lahf xchg (bad) lcall (bad) in jg leave scas cmc (bad) (bad) xlat mov pop (bad) mov lcall jg lods pop std (bad) jg jg sar aas push lcall mov scas jle mov inc (bad) mov xchg jg in std cmp (bad) std lret fnop lahf std cmpl jg push (bad) cld addr16 xlat mov in jg outsl mov (bad) xchg fcomip (bad) cli imul call lret jg lahf jmp addr16 in inc jb aaa (bad) pop cs test mov mov jmp (bad) test in out movsb cld leave ja mov sti (bad) lcall adc clc jmp lahf mov push jg xlat std inc mov jnp xor aas sti pop popf cld lds out jg jnp add jg out (bad) imul jmp cmp or stc (bad) repz xlat jg aas cli xor in fcomip ja mov popf xchg out cld into jg out jns pop decb (bad) jle (bad) fstpt push fwait std jne ret outsl cli lret xchg roll call outsl cli popf (bad) push (bad) std in std (bad) jle pop cld sub (bad) mov jmp sbb pop jg mov lahf mov out ljmp xor mov decb das (bad) out lahf mov (bad) in loop clc out jmp (bad) jne enter dec mov cld dec mov fstpl (bad) cli insl jg fnop jg loop pop mov sti idiv repz sub jp in cmp xor mov sti divl in cli mov jnp std (bad) call jg xlat std sbb sbb leave shrl mov sti lods jg pop cli fwait (bad) sarb jbe pop (bad) cli mov decb into outsl pop (bad) sub sti sar (bad) fnop scas incl insb (bad) fsub pop std imul (bad) fistpll das cld (bad) fst pop xchg decl mov (bad) decb xchg jle mov (bad) (bad) jg mov scas jg push div cmp (bad) lods mov divl scas call lahf cld xchg (bad) jecxz in lahf (bad) stos jg pop repnz fistpll fcomip mov test mov lods mov jle pop decb cmc mov fcomip sub cld sub ret mov pop std cld out cli (bad) cld negl out icebp cmp popf push add jg ljmp lahf stc or mov cld paddw inc lahf (bad) pop out (bad) push pop ljmp mov lea aaa clc inc pushl incb sarl hlt mov add jg push pop std jnp rcr loop lcall lock stc iret (bad) out fucomip iret clc pop call mov fstp mov dec fstpt in lahf clc mov mov idiv pop mov out lods call jmp (bad) das cwtl (bad) out jmp paddd inc (bad) fnstsw jg aad repz icebp int cmc loop mov lcall lahf cli sarl mov std xlat jmp (bad) imul cld dec mov stos aaa jg pop std ja (bad) loope (bad) lahf icebp ja cmpsl mov (bad) out std dec mov out lahf cld decl (bad) xlat jle cld movswl in aas repnz push inc das (bad) mov test std lds push das dec call dec std jns lahf (bad) jp les jmp jbe pop nop (bad) cld fstpt addr16 cltd jmp aas testl stc das (bad) repnz out (bad) cmpsl (bad) sahf jg leave jecxz mul dec clc adc jbe scas out (bad) mov (bad) stc pop (bad) jmp loope sti (bad) jle jmp (bad) mov (bad) cmp mov mov (bad) mov mov mov in lcall in out jmp dec fucomip aaa stc push jg (bad) jle out stc mov daa inc jmp rcrl fucomip dec (bad) fistpll in idiv enter cli mov repz repz fbld (bad) stc fwait jle pop cld (bad) cld inc (bad) stc mov pop repz cld cmc jg lahf cld cmp push jg (bad) std movsl push scas icebp jg (bad) mov not pop pop jle (bad) gs dec decl (bad) call call decb clc repz aas mov fwait jle notb sbb (bad) (bad) sub (bad) out insl jle outsl repnz mov sti (bad) call std fnstsw (bad) xlat sti lahf (bad) jmp pop (bad) fnstsw std test (bad) aad pop decb jg aas js mov in jg ja cld fcos imul (bad) std icebp jecxz sarl mov outsl (bad) sti cld imul stc fwait dec jle repnz dec jle in (bad) mov xor outsl imulb jg inc out (bad) das inc pop lcall decl jg outsl cli xchg std sub int3 lahf mov clc sub jmp insl ja mov cld stos jle pop sti outsl stc das (bad) in xchg fcomip out decb aad idivl clc ret jle paddb mov cld mov aas mov jg iret cmp mov cmc (bad) (bad) cltd cmp inc mov aas cld mov stos mov repz dec pushl adc sub out jg das mov push ljmp mov ljmp mov fstpt jg jg repz xchg decl sti cmpsl std idiv jne (bad) shrl xlat ds dec (bad) clc fcomip loope mov stc add das (bad) jecxz lahf sti inc jg push pop pushf std mov (bad) xchg jg pop sti pop (bad) repz fcomip sbb subl mov repz sti repz mov pusha cltd ljmp scas stc ja (bad) pop call ds arpl scas stc mov (bad) mov jg das mov cld loop xchg decb scas aas stc pop jg das sti push jle (bad) cld mov out iret fdivrp lret (bad) mov (bad) cmpsb jg jg daa inc jg outsl mov divb (bad) inc (bad) mov loop sti jmp idivl sar hlt jne lock jle inc std jns jecxz jmp mov cmpsb (bad) addr16 std mov out cld and jp negl clc repz scas fcomip scas and xchg (bad) adc pop jp aas sub mov pop jp jg ds fcompl ss cmpl xchg pop xchg std (bad) push lahf (bad) clc scas and jne sti std inc push call pop (bad) jnp mov mov pop (bad) xchg jg scas (bad) mov dec stc outsl jg jg imul jg (bad) std pop mov cltd mov call pop jge (bad) cld popa aas repz fdivrp mov sub (bad) push pop cli sar lret add pop cmp or in aas ljmp xchg pop clc sbb xor out cmp in aaa cld out ljmp notb (bad) fwait mov std push addr16 pop icebp outsl (bad) mov cld pop (bad) clc fist (bad) out (bad) cmc jg (bad) out sarl notb daa ljmp jg aas cwtl repnz imul sar in (bad) dec jg pop std inc call out pushl std xchg (bad) fnstsw repnz dec out (bad) fwait incl idiv std idivl notb (bad) stc dec repz cmp cld mov repnz (bad) push std (bad) repnz idivl fcomip lds cld outsb leave mov call pop idiv ljmp mov xchg rcrb iret (bad) mov jnp div icebp pop clc (bad) cld lods jg das sti pop icebp out cld sarl das jg in jge cmc adc cld scas xor xor stos (bad) clc paddw (bad) mov jle aas xor (bad) (bad) fcomip das cli mov dec imul mov jle pop sti rcr call jle mov (bad) sarl out negl mov in pushf cld ss lahf hlt aad pop repnz (bad) mov (bad) stos out (bad) jmp (bad) popf pop (bad) (bad) hlt aas dec repnz std sub fcomip cmpsl incl leave push fnop and mov scas cld mov incl add lahf cld xlat pop std cmpsb pop jg adc stos jg lahf cmp stc sub pop cld jecxz xchg pop jmp jge pop incl (bad) cli cmc aas (bad) (bad) (bad) hlt outsl sti insl push xchg inc aas lock loopne stc out ljmp mul pop lret aas std mov push pop inc mov jg pop (bad) call inc jg das stc (bad) repz repnz stc div (bad) rcrl cld pop fnstenv mov cmp cld add frndint outsl mov cmc jg in std jmp popf mov (bad) scas mov js ss out mov call clc (bad) popf jle mov jg iret cld sbb (bad) fcompl dec cli jnp psubq jg outsl stc jecxz (bad) jmp mov sti scas sti jae pushf jg clc stos jle (bad) jmp mov lea dec (bad) mov mov lret pop cli das (bad) aam cli (bad) idiv pushf jg dec cld cltd mov lds testl pop repz lods jle daa jg pop (bad) jnp (bad) fistpl pop mov (bad) jmp clc aad (bad) mov (bad) idiv or sti adc lock xchg inc call (bad) std movsl jg ljmp (bad) xchg lahf sub jg aas std out scas jmp (bad) decb idivl dec cli jge rcr out call jle (bad) jg (bad) clc lret jle lahf cli aaa (bad) jmp xor std (bad) neg lock jg fcomip scas std fwait out lds mov lock std pop vcvtsd2ss inc mov sbb arpl jg icebp pop mull cmc shrl idiv insl cmpsl mov adc fcomip pop pop (bad) cli jg mov mov ljmp cmpsl mov (bad) stos jg aas sti aaa call lahf mov (bad) pop std fwait jg mov fwait leave repz std aaa stc sbb iret std scas mov adc jmp dec cld (bad) fstpt test (bad) cmp mov into mov jnp aas xor inc (bad) jmp jmp aas repz (bad) js cli lahf cli cmp cli movsl jg pop std out (bad) xchg jg xchg out call stc in cld dec mov lret in jg jg mov mov in leave out (bad) pop incb ja mov xchg repz (bad) jmp loope repnz cmpsl into jle pop mov jnp cltd in mov repz cld jnp inc pop push (bad) mov push (bad) (bad) (bad) dec mov aas ljmp pop decb pop lcall repz jns into (bad) ljmp fcmovnu cmc (bad) decl fs pop std insl out std xchg das lahf scas repnz call xchg (bad) stc fcomip pop jg cli repz mov daa mov lret pop cld xchg jg mov icebp (bad) std movsl mov divb icebp iret std gs cwtl mov (bad) fsubrs call repz aas ja out std add jle aas divl clc in pop stc mov dec icebp negl jg std jmp ret call mov jae int (bad) mov (bad) lret jg lahf decb fstpt mov inc (bad) jmp data16 jg outsl call call incb repnz mov addr16 pop incl out fcomip sbb int3 scas std lahf mov and addr16 imul stc pop sahf (bad) (bad) (bad) daa (bad) out repz popf std dec (bad) out pop repz cld fcomps mov xchg cli (bad) pushl (bad) clc jmp sarl (bad) cld aas in clc cmpl out out pop mov pop (bad) mov mov (bad) xchg fcomip pop adc lods (bad) xlat lahf dec push pop repnz std dec mov std fdivs addr16 jg mov (bad) pop mov (bad) cmc jg out stc mov clc repz fcomip out stc call pushf fbstp stc pop xlat mov pop jmp int clc sub mov and cmpsb mov jg out jg push (bad) mov jg outsl icebp pop xchg cld (bad) fsubrs std (bad) jg lahf xchg (bad) das dec decb cli in clc xchg jg fnstsw jo pop clc xlat jg stc pop jno mov jge in cmc push pop std inc repz (bad) loope jl cli jnp clc fcomip (bad) jmp inc jg ljmp insb cli pop in cld adc hlt dec (bad) mov adc jle fstps pop jle (bad) jg out cld pop jg mov repz call jmp lahf clc mov aam cld pop dec (bad) cmc aas jnp pop std movsl mov (bad) loop jle aas jecxz (bad) fwait jle mov ja (bad) lret fdivrp ja lahf decb mov (bad) (bad) mov je std cmpsl cmp jno (bad) mov dec outsl cmc lret cmpsb dec rorl cld cltd (bad) sti cmpsl incl cld (bad) (bad) mov loop mov fildll lahf cli iret jle repnz (bad) pop jle aas bnd std mov daa (bad) in call mov test out aaa cld jae push cmp mov (bad) (bad) lahf stc jecxz fstpt (bad) jg mov negb (bad) mov pop (bad) outsl push scas jg add jmp (bad) mov jge insb cli shrl lcall std mov leave icebp outsl cmp icebp xchg repz sbb push jg cmc pop pushl int cmc (bad) pop mov imul outsl icebp sarl std cmpsl inc scas incb (bad) call out lret and popf aas sti aad cld repnz (bad) jmp out sarb movd aas jecxz clc mov (bad) scas jg jg pop jle jecxz (bad) stc iret std dec incb (bad) mov jmp in maxps hlt outsl pop decb cli push jg repz pop cli in std add (bad) das stc idivl (bad) xchg (bad) aad aad iret (bad) (bad) cmpsl aas fwait repnz push cli std aas jmp mov pop clc fistpl xlat mov scas outsl lret (bad) mov xchg incl jg pop (bad) mov sti mov jg out lahf jns jmp loope sti sarl jg xchg cld imul repz jmp xlat rcr icebp pop push cld lock incl dec jg lock mov std iret mov scas cli pop (bad) stc jg xlat cltd ds sub in lahf repnz cld mov outsl sti or std ret mov imul cmp (bad) negb cmp das sti idiv fdivr ljmp stos aas in std cmpsl cmpsl mov addr16 lahf icebp outsl cmpsl mov popf cmp xor cld aas in cmp repz insl ljmp xchg mov mov mov jl (bad) push inc repz popa jmp stc sarl lds stos jg in cli (bad) cli cmp hlt push jmp into aas not (bad) pop (bad) (bad) cmpsl in pop (bad) sbb (bad) (bad) mov idivl push (bad) (bad) cmp push ja (bad) fidivr mov (bad) clc and pop std int3 pop cli mov xchg fist or hlt jnp stos out data16 aas cli negl (bad) pushl xchg pop movswl sti in (bad) loopne lret std cmpsl (bad) sub in (bad) stc jg aas scas aas imul (bad) in daa dec pop cld das decl stc xchg addr16 jmp cld jo jbe cld mov negb sti xor aaa cli cld pop jmp call ret (bad) xlat jg (bad) xor aaa xor pop mov out out cld jno insl icebp aaa std jno jle cmc cli pop cld stc (bad) clc out lock (bad) in scas cli adc mov out mov inc jg out clc jecxz sti jg out incl mov fnstcw pop ljmp (bad) fdivp mov call (bad) lahf stc mov jg jg out (bad) mov das pushl mov std xchg jg in (bad) out in clc insl jle lahf repnz std jnp int3 aas cmc mov (bad) in aas repz cli sti jg mov jg xchg push pushl jle or aas je push aad notb in out mov ljmp (bad) pop jg into pop stc sub jg idiv (bad) fdivrp test rep jg ja std mov jnp (bad) stc pop call aas out hlt mov lds dec out cld pop jg out hlt idiv (bad) mov incb cli lahf jle aas in mov mov jg xchg hlt sti (bad) mov into fistpll out (bad) idiv inc (bad) mov pop repnz (bad) std mov mov out cmp mov stc mov paddd xor jl cmpsl std aam mov lcall xor imul hlt loope sti into mov pushl push decb out dec std or (bad) jg mov pop cld test (bad) mov xor ret outsl clc lock std pop jle outsl dec stc idiv in clc idiv mov (bad) cmc scas cmc pop scas (bad) fstpt outsl aas std xchg dec (bad) hlt jmp clc outsl cld idivb jg lahf pop jl paddb das jle jg fnstsw mov sar in aad cld lret mov stc scas cld pop push mov movd dec jg aas cld idiv arpl leave jg rcrl (bad) cld movsl mov jge sbb dec mov jg sub sbbl mov (bad) mov (bad) sub out cs (bad) das inc mov dec fstps pop incb jg (bad) scas cld cld iret sti fistp jg clc mov pop inc std push loopne incb jg mov (bad) int3 jg aaa std jae cmpsl aaa jg ja movsl mov push cld idiv das inc je xlat (bad) sar jmp cld out cld stos dec cld lock jl xlat std pop (bad) out aas lock outsl stc pop scas jg pop sti pop dec (bad) out lret popf out (bad) insl jg (bad) std mov test scas notl ljmp stos aas test imul (bad) clc out and loope repz jmp inc lahf cmc das cld ret mov pop aaa push into (bad) stos aas cli pop std sarl cld fidivr das incl (bad) fwait aas popa icebp pop pushl aas stc aad shr (bad) arpl jle jg out xlat cli aaa jmp arpl cmc jg in aaa cld (bad) movq lahf sti cmp fstpt jg arpl shl idiv cmpsl (bad) cld aas mov cmpsl (bad) jg out divb (bad) fstpt push idiv scas jg outsl sti aaa mov idivb sbb lahf cli mov (bad) mov cmp (bad) call dec jg ja jae (bad) jecxz mov push mov push out testb stc mov repz (bad) mov aas enter jg scas aas mov lahf cli in (bad) (bad) (bad) mov (bad) mov fstpt das incl (bad) fimul stos jg scas stc scas jle jg ja cld out cld xlat jle mov (bad) jmp mov aaa sti jnp pushf mov jle (bad) ja clc sub adc jnp cmp repz std mov out mov stc das jg clc in iret std xor cmpsl out jmp out sti outsl lock mov cli jmp (bad) cli in aas stc (bad) cli out (bad) fnstsw cmp test rcrb repnz cld mov idivb mov or mov jecxz jl lret hlt jg and jle pop jecxz popf std and fistpll xchg std mov das incl mov mov stc jecxz out sti aaa decl imul pushl idiv out lcall cld pop pop std ljmp incl (bad) cld mov mov lds cmc aas std fcom pop testl dec sar lock stc mov idiv out (bad) jmp aas decb push mov add mov icebp incl lock ljmp pop (bad) fucomi negl loop sti pop jg pop negb out cmc ja jecxz lret mov xchg aas pusha (bad) aaa jmp (bad) pop (bad) in fstpt aaa cltd in cld cmp sarl decl repnz jmp incb idivl jmp push in icebp lahf xlat (bad) fidivr jg (bad) mov (bad) cli fstp out (bad) cltd jg mov mov jg jg ja (bad) jg cld loop stc pop jle fucomip (bad) outsl std lods mov mov aad mov stc jecxz lret fnstsw outsl jmp scas pop (bad) ficomp jg das clc and xchg cld cmc jg in (bad) lods mov fdivrp mov dec cmp into aas hlt arpl cs (bad) sarl hlt sarl cmp cli dec jmp fnstsw aas cld in (bad) jge incb cmp jg (bad) das cld fistpll pop cli cvttps2pi jmp call mov pop std inc jg outsl lock fistpll lds pop cld sub les (bad) inc call pop notb mov sahf mov mov jnp (bad) push idiv rcr cmc pop (bad) mov jg lret jg ja lahf ds popf pop jg,pn stc fcomip dec mov std xor mov ljmp jge daa (bad) stos mov (bad) mov sub sahf fcomip out dec jle mov xlat jg pop idivb fs decl lahf std clc mov xchg aas icebp idiv shl fistpll (bad) cli pop clc std pushl outsl pop std btc das std pop (bad) (bad) dec stc jmp mov (bad) stc lahf cli jecxz fstpt push (bad) sar cmc pop cld leave jg div idiv xlat (bad) mov or pop in sub jmp (bad) lcall (bad) (bad) (bad) (bad) aam (bad) stc pop sar icebp mov adc scas (bad) clc mov addr16 jg stos mov jle repz jg lahf add outsl sti aas sub outsl cmp pop mov dec jg aas cld out pop idivl lahf lcall ljmp mov jmp mov repnz mov out cli cmp jle jbe aaa movsb cld leave daa cmc aas call out repz cld push mov loopne clc sub xlat call out notl dec mov push paddb cld mov in cmp stc mov (bad) clc ljmp cmpl jl das cmp in out stos jg xchg call jg clc ja das incb clc lds push pop clc in jmp or inc jg iret cld mov sti iret std mov leave push sbb idivl pop cld jne lret scas lahf pop jmp out std aaa (bad) mov in outsl cld pop (bad) fdivr loope clc push (bad) fdivrp lds pushl (bad) (bad) sarl pop std dec jle lret cmpsl dec fcomip idivl paddb push aaa call inc jg lds in push out (bad) mov icebp clc scas stc das jle pop cli sar push repnz jmp cld or outsl (bad) in jmp ja movsl mov pushf cld jbe jmp cli sbb pop aas clc cmpl jmp jg cld aad cmc stos (bad) rcr push inc fistpll incl dec jg mov xchg icebp dec pop sti xor jge cld sbb scas jg repnz std test int cld out cmpsb das (bad) stc jmp iret sti dec jmp in (bad) push push mov dec jle jg outsl clc jge lret lahf sti lea cld lcall jg fucomip pop clc sti pop std sub pop decl push cld es (bad) jge daa (bad) faddp (bad) fbld outsl mov (bad) (bad) std xchg jmp dec std int cmc pop cmp (bad) in outsl jns sti std std jg aas lock (bad) pop (bad) in mov cmpsl cmp das sti in jnp fdivp jg or mov jle outsl iret sahf lcall xchg adc outsl mov jmp lahf icebp pop cld pop jg cmc scas lcall sub (bad) hlt lahf cli aas pushl icebp outsl (bad) sbb jg pop hlt out out cld in out lahf pop jg repnz call lahf mul pop cli test lods (bad) test mov hlt in std iret ljmp icebp lahf (bad) jp fistpll cld xor (bad) popf dec out jl xchg out aaa pop jg out jle lock cli lret scas dec outsl mov lods jg xchg jle push aas cld popa (bad) (bad) aas or fildll mov outsl lcall std outsb scas jg (bad) stos ds in mov (bad) cld out cld cmpl (bad) sbb jle push ja mov cli idivl std outsl jg push cmpsl std sti jg mov mov lahf sahf cld add iret cld jnp mov bswap (bad) fwait cmpsl dec std ja mov cld les jp pop pushl dec imulb (bad) jmp test mov out mov jmp mov jle das jns push call fnstcw jnp cmp inc cmc iret cld lret jg jg mov int3 jg pop (bad) data16 popf jg outsl (bad) cmp loop (bad) push ljmp std fcomip dec fdivrp std jle mov sti addr16 (bad) cmp jnp (bad) call cld out jmp in fildll repz clc fwait decb int out hlt pop cmp (bad) jle inc call rcr mov daa call out call in outsl stc (bad) jle pop incl jg pop sti ja cmp pop std sbb lahf cmc pop cld hlt call idivl mov popf cld lcall fnstcw cltd std push mov sar (bad) jg outsl repz call (bad) fstps cli pop cld popf jg in decb ret divps idivl loop jmp paddd xlat outsl cmc xlat xchg lcall cmc sub lods jg pop mov repnz ret (bad) cld fistl out enter (bad) std idiv lahf lcall sub pop std lret pushl (bad) mov out fdivrp aaa mov jecxz jl ja mov cld mov pop ljmp stc aas (bad) in jg pop sti pop call ss (bad) fbstp aas hlt (bad) std mov addr16 (bad) cmp clc fwait (bad) stos (bad) in iret std xchg mov pushl jnp sti inc (bad) call out (bad) out std (bad) cld pop mov aas std dec decb xchg xchg hlt pop cld pop jmp aas out pop sti arpl (bad) lret mov das (bad) out cli xlat cmp (bad) call addr16 fistpll xchg push mov div aas in mov outsl jle (bad) fidivrl or (bad) (bad) xchg cld xor rcrl inc pushl pop cmc push lock std das incb (bad) cld (bad) adc (bad) mov dec scas (bad) repz lcall mov iret jmp ljmp std sti mov cld push lret cmc outsl (bad) cmp cli jecxz out out fcos out clc aad lock mov aas xchg cld icebp jg jg daa sub movsb out jle mov lock push (bad) das push (bad) hlt fnstsw ljmp mov cld cmpsl dec jg add std add mov (bad) rcr sti mov in fdivrp inc dec push out cli lods push in ljmp sahf pushl jg psubq xchg aas loop (bad) call stc mov cld (bad) pop jg in lock xor lods jle out lock std xor out sti cmp (bad) in mov xchg mov lds (bad) aaa std inc mov std es addr16 incb mov cld test std mov fwait cld movswl jecxz (bad) call aas std sti (bad) shl (bad) sti arpl mov gs lahf pushl fstpt (bad) cld or paddd addr16 (bad) aas jl jnp jle (bad) cld cs (bad) scas cld pop jle mov cmpsl dec scas jne lock cld dec (bad) idivb std outsl jg std out cld loop incl jg lahf mull (bad) lcall lahf jae (bad) cld stos pushl jae dec (bad) fwait aas in sti pop jle (bad) mov (bad) outsl cmp mov enter paddw jg paddd std jle hlt imul jg repz mov mov out (bad) jns (bad) div call iret cld jp sar divb stc cmp mov push (bad) shll jl daa jl paddb std cmpsl out ja icebp (bad) out xor (bad) (bad) xchg (bad) mov sbb aaa dec fcomip das clc xlat call lahf fdivr dec ljmp out cld or jg fxch ret jg scas (bad) (bad) cli aas loopne decb ljmp stc lret lahf jmp call dec (bad) scas aas mov pop repz lahf loope ljmp mov idiv scas std arpl jmp out fwait (bad) (bad) call sub (bad) dec decb sti out lahf (bad) fimul jg pop cld imul outsb ljmp jle pop cli insl (bad) mov jg jg,pn jg hlt pop lods decl inc call out xchg (bad) fstpt push (bad) outsl mov fistpll shr icebp dec (bad) stc mov in std mov in das std jecxz (bad) outsl mov (bad) jg pop lock stc pop incb cmc mov loopne cmc idiv cmp fnstsw hlt (bad) cld fidivr lahf cld push jg scas mov (bad) call incb lahf mov mov popf rcrl mulb cli stos jg xchg pop cmc aaa ds into (bad) jg (bad) idivb pop jne mov lahf sub (bad) jnp pop clc movsl ja jge mov pop decl jg scas pushl jns imull pop cld dec jg out (bad) pop lcall int cld ljmp jle jg mov aad notb std sbb sub movsl mov out call cli jecxz ljmp stc pop cld mov aas jns lahf jp iret pop cmp std paddb call mov mov popa sti outsl fidivrl outsl (bad) aas std pop call mov jmp lret out jnp in jg jg ja std lahf movsb mov divl sti maskmovq idivl mov negb sub aas in mov fwait jg lahf stc sarl sti mov pushl (bad) call scas sti lret (bad) stos fucomip xlat dec (bad) mov add xchg (bad) (bad) idiv (bad) rcrb mulb sahf (bad) stc (bad) out test lock jmp outsl jle (bad) (bad) leave call loope repz cmpsb mov incb in (bad) pushf fucomip aad jge push dec call aas (bad) (bad) pop jle fstps repnz pop ljmp iret push call aas repz adc pop cld pop jg ja (bad) pop sahf cld lcall adc hlt (bad) pop mov cs ja std jae ljmp jne xchg xchg outsl mov aas bnd xchg (bad) cld (bad) iret int cmc dec cld sti jg jg cmpsl cld jecxz jg pushl jle jbe lock dec (bad) sti mov daa push push xchg aas repz cld or aas call rcrl dec (bad) cld jg mov repz mov mov jg pop hlt xlat incb mov ljmp jae mov icebp aas repz aas cli popf (bad) shr jg outsl cli (bad) rcr stc out ds pop jg sarl mov mov jmp (bad) xchg dec (bad) out dec (bad) (bad) test mov into mov fstpt fcomip pop cmp sti fnstsw cmp jg cli mov pop daa std arpl fwait icebp pop inc out std ja mov push pop jg aas jg in jg std jge imul jmp jg pop jg rcrl cmc scas jl aas (bad) ss in scas xor fisttp gs fcomip out sbb in repz hlt cmp repz push mov stc popf dec (bad) addr16 std hlt ja mov jg cmp (bad) idiv ljmp outsl lock jmp jmp pushl clc insl incl std pop mov (bad) ds lods dec lcall scas (bad) (bad) jecxz (bad) jg hlt dec pop std insl mov cld xchg dec clc das (bad) aad mov out jnp lret (bad) clc jnp incb jg jne out cld pop xlat mov cld mov (bad) cli aas stc push std out in scas xor jge mov (bad) fcomip (bad) jp (bad) incb jmp (bad) jns fwait in in jle scas (bad) arpl (bad) jecxz (bad) xor rcrl jno ljmp jg jg icebp jecxz notb or ljmp (bad) arpl and pop ds repz shrb (bad) call test out clc xlat jg (bad) ljmp (bad) das jg pop jmp std (bad) test out stc (bad) rcr hlt iret cld loope lret ja cld popa mov incb lahf lahf ljmp repz gs add lahf sti mov aam (bad) jecxz lds mov (bad) fstpt ret ljmp xlat inc pop repnz cld xchg jg fsts mov in stc pop (bad) jecxz out mov iret mov dec (bad) cld mov icebp (bad) ljmp lock fnstcw sti (bad) xor jg stc xor clc lahf cli int scas mov mov ljmp scas jg lahf ss addr16 mov push pushl in clc xchg aas mov mov (bad) cmc push xlat cli dec mov ret cmp (bad) mov jno push std cmp in fbstp cmc stc (bad) bnd std fistp (bad) mov cwtl sar out clc xchg cmpb scas jg jmp idivl dec mov inc jmp mov lahf mov leave pop icebp daa (bad) out (bad) jmp cli xchg cmp in mov (bad) mov sarl xlat cmp xchg mov mov pop dec jg scas imul stc (bad) push repz in cld (bad) mov lcall jg iret std out out pop jl movd dec jle pop cmp mov lahf mov imul in sti pop std ret aas pushl (bad) jg scas (bad) repnz daa cld addr16 lahf stc aas call pop std sub paddw (bad) out fcomip xchg dec cld fstps lahf cli pop std mov sti aas cmc jnp jle sti aaa pop jg out xlat out cld dec jg std aas jno ja adc loopne cli jmp jle mov pop (bad) test repz std cmp jg lahf stc (bad) mov sbb jmp rep (bad) aad pushl mov mov lahf cmp shll jg stc fistpll mov mov and or cli mov pop (bad) loop std lahf push incb mov scas cmpsb clc sti clc jl xchg std mov outsl repz jmp test ds pop repnz std inc out cld or std cmp jg sti (bad) popf dec aas jno aas std adc mov leave jmp fwait jmp das (bad) jmp cmp repz (bad) sti jg jmp mov mov cld es (bad) cli mov (bad) gs xor cld dec pop jmp pop out mov ret incl clc fwait or mov jmp cmp pop (bad) in mov mov xchg das cli mov jl jg jne lods lret (bad) stc aas std sti jle dec movsb clc decl div dec cld fwait push repnz mov stos mov es lahf hlt imul sahf out std (bad) jg negl (bad) (bad) jg cmc (bad) incl mov jg mov mov call into (bad) clc mov lods jg idiv loop ljmp neg repnz mov outsl clc sub std mov lret jnp sarl das jmp cmc (bad) (bad) loope repz xor or adc mov loopne mov repz jl repz out (bad) cld jne mov mov iret call clc div aas sti inc decb hlt mov div scas cld lahf jle fucomip dec std push pop push call mov popf xchg lret (bad) (bad) push aas (bad) mov (bad) cmp jmp aas std das cld mov imul cld psubd jle jg mov pop jle fcomip (bad) jns mov scas dec incb lock iret mov clc mov adc jge iret sti std call (bad) mov jge dec incb clc xchg loop pop call rclb cmc or mov xlat stc aas inc jg xchg dec fistpll dec mul cmp stc pop ljmp mov push jg aaa (bad) pop (bad) xchg daa jg div outsl clc push (bad) in pushf cld movsl inc outsl cli std sbb mov (bad) out stc lahf (bad) xlat jle jmp divb ljmp lahf fdivr aaa jle (bad) std xlat clc leave aas clc psubw std jle lahf stc iret (bad) rcr in dec clc lods call call out pop repnz dec incb jne jecxz hlt (bad) ret (bad) in cld mov incb clc xchg jle addr16 jmp aas std fnstsw pop stc or (bad) cmp das (bad) mov cld pop std int (bad) imul lcall (bad) jnp sarl mov std test (bad) sti jg mov lds stc cli psubq addr16 out lret pop cld addr16 stos incb leave pop mov lcall clc iret clc push scas (bad) out ljmp xchg aas stc adc std xchg data16 out imull out std dec (bad) cli (bad) ljmp jno xlat jge xor aad aas pushl sarb sbb sbb (bad) scas lods jg pop hlt mov sti repnz aad icebp mov pop incl pop (bad) push (bad) (bad) mov sub fstpt call in jg imul jg outsl sti fwait (bad) std jg jg fisttpl scas cli dec jle jg pop cli xchg jle aas jmp jle ret fildll out push sub ljmp sti sbb add mov lcall mull (bad) lret aas jl call pop cli insl mov mov (bad) scas mov scas stc paddw in repz (bad) cli xchg mov cld jg mov call jg (bad) jge ja jmp aad mov aaa mov test clc aas (bad) cltd aas notl (bad) call inc nopl adc iret (bad) std sti jmp scas mov (bad) jecxz paddd lock and mov mov out repnz cld iret jecxz sti jecxz rcrl scas incb aaa std outsl (bad) pushf push pop cld fwait jg jg pop ss pop std xchg jg (bad) (bad) mov sti idiv outsb (bad) in jg das std mov aas stc scas jle scas cld sub aaa stc popf jg push ljmp xchg leave (bad) (bad) mov dec call (bad) in negb aaa sbb (bad) mov (bad) out repnz clc out jg mov rcll in ror dec incl hlt aas cli sarl inc (bad) (bad) clc aas hlt negl out loop stos jle (bad) out aas sti cmp nop jmp ja ret jle mov mov (bad) aas push imulb jg jnp idivl ds xor aam jmp clc insb hlt (bad) incl aas decl fstpl lods dec jle aas neg lcall out psubw jg mov (bad) cld sar sti lahf inc cld push idiv into sbb incl mov (bad) pop and (bad) cmp cld icebp (bad) clc icebp jp (bad) sti icebp aas in xchg in jle jg dec js pop inc mov fdivrs out rcr lret (bad) xchg aas in call jle fcomip das aas clc adc jmp sti pop (bad) pop cld push mov pushf das ds inc push ja int3 das imul out mov incb jmp cld lcall idivl out clc pop jg addr16 sti out std add ljmp jg out lcall sbb cld inc inc (bad) jp cld outsl std stos xchg pop clc fst out clc pop std icebp aas repz (bad) das mov in ja pop pop std fidivr adc sbb loopne cmpl in (bad) clc mov jmp dec clc in (bad) lcall decl iret (bad) mov (bad) mov leave aas dec div iret cld roll jg pop std in icebp cli dec popf lcall rcrb hlt pop mov (bad) (bad) stos (bad) rcr loopne clc (bad) jg aas stc (bad) std add (bad) aas in fisubr int3 (bad) call out popf cld inc mov (bad) fnstsw mov (bad) clc sti pop cli aas jle mov mov scas cld jge repz cld ds decb cld (bad) mov out stc movsl sti (bad) sti outsl repnz mov (bad) xchg push inc jg pop jle (bad) incb sti mov outsl idiv std jle aas cmc (bad) std (bad) aas dec jg out mov mov aaa cld sar mov cld dec std repz hlt negl push popf mov pop cld dec mov cld dec (bad) fsubrl jg out dec jg fcomip idiv push mov std repnz jmp repz xchg das (bad) ljmp mov jle dec cld jmp mov mov out std lds (bad) xlat aas add cld (bad) push xchg mov not jg popf jb fwait (bad) pop jg jmp xchg jg in (bad) (bad) jg in jg sarl stc inc jle (bad) cld paddw jmp aas icebp inc call (bad) cli jg mov repz pop decl neg cmc push decb scas mov xchg fildll addr16 jno in das stc and out push jg cli inc std gs jmp ss sti in cli inc fcmovu cmc outsl std fistpll aas push mov in (bad) icebp mov xlat (bad) icebp pop jp mov fstpt cmc pop (bad) imul (bad) ljmp bnd (bad) mov div cli in inc (bad) stc rcr stos jmp jg aaa sti fistpll (bad) jmp pop (bad) frstpm(287 stc jg imul jg pop push (bad) (bad) (bad) (bad) lock ret jg lahf clc (bad) incl std ds (bad) jg,pt jg std fcom fcomip addr16 xchg mov std loop cld int clc cmpsl cld push mov daa call jg mov std and (bad) std mov mov sti out pop jle pop (bad) fwait (bad) stos (bad) cld mov xchg ret (bad) iret sti inc jg mov and jg lahf testl cmpl pop jg out std ja (bad) (bad) and out jmp (bad) stc lahf repnz daa jg push pop incb (bad) jb out (bad) mov mov (bad) cld pop (bad) sbb rep scas (bad) in sbb stc cli aas cli movsl (bad) push jg rcrl cld mov fwait decb lret (bad) jle clc lahf (bad) jmp jns addr16 cmp jle (bad) cmc dec cld mov pop (bad) sahf mov sti (bad) outsl cmc or mov mov (bad) stc insl call jg aas sti adc imul sbb jg iret lahf div out and std fildll cmp std jge xchg aas repz (bad) cltd std sbb jg pop cld out out idivb dec repz jnp aas loope stos (bad) icebp stos (bad) paddb jg pop std jecxz int hlt hlt aas cld fistpll (bad) cld lahf stc iret jle (bad) iret clc mov ljmp std lret mov mov jns std xchg call jg pop jg incb std (bad) jl cvtps2pd outsb jg outsl call (bad) (bad) sub test cld loope jb pop mov mov aas loope (bad) neg stc mov iret cli dec (bad) (bad) pop (bad) jg lret push loope mov inc std es out clc daa incl jle mov lahf cld xlat jg das cli sti jmp jg lahf aas cli dec (bad) fnstcw clc pop mov stc mov aas std cmpl mov sti inc std gs lret jg mov std jae jmp push (bad) (bad) stc outsl repz cld daa mov ljmp jg dec mov pop stc ja std in mov (bad) fidivr jl paddw outsl hlt jmp cli (bad) scas stc dec sar std mov dec repz mov imul jnp ljmp push cld lods mov aas call fcmovnu ljmp push jg out (bad) out (bad) jg icebp div stc sub call popf cmc (bad) stc xchg cld movq mov inc outsl std (bad) xchg movq jge es mov inc pop (bad) adc push (bad) mov shr pop pushl (bad) fimul cmp clc fcomip call mov (bad) sti in xchg mov jle jg xlat dec (bad) mov cld fnop in jle mov imul jmp idivl dec lods lahf std test aam cli in jg (bad) std sarl dec mov (bad) call stos out jmp jg sti cmc jg lahf (bad) mov (bad) ljmp (bad) pop pushl std mov mov out lods jg ja jmp (bad) out mov xchg iret mov repnz cld imul fprem dec jmp (bad) sti pop std mov shrl das incb xchg inc out cmc jmp sbb (bad) mov scas (bad) call aad stc lods aas loop and jecxz jmp stc lahf jg scas sti fisttp call jle ja (bad) pushl cld ljmp (bad) dec in cmp repnz xchg mov outsl imull cmp cld sarl clc cltd fbstp std pop mov xchg fucomip lret mov jg aas cld (bad) ds movsl push in xlat (bad) outsl jg out ljmp int std (bad) fnstcw pop aaa (bad) incb (bad) ds aas div lahf cli movsl push fcomip (bad) cmp pop out stos dec (bad) in jg pop (bad) pop push jmp aas ljmp lock stc loop cli test (bad) fstl fcomip (bad) cli insl (bad) movsl jg ja imul (bad) mov stc repz aam xlat (bad) sub aas sub std mov idiv xor (bad) (bad) jecxz loope ds addr16 fstpt idiv sarl idivl (bad) clc (bad) jmp push iret cmp inc jg (bad) stc jnp scas pop cld in jg dec (bad) mov aad push cld xchg push (bad) jmp stos fisub jle (bad) or cld jg iret clc inc (bad) sti pop std jecxz cmc push aas call sahf dec (bad) call iret lahf icebp pop ljmp scas not ljmp sar out decl repnz pushl (bad) std std call pop sti ja jae fstpt xor jg pop cli xchg jns out scas mov stc pop cld push jmp pop lock std mov out decl mov lcall ljmp jg out icebp (bad) dec lcall outsl lock stc (bad) jmp dec sti popf jle fbld xlat std ljmp pop incb sbb std hlt idiv repnz js idiv xchg pushl fdivrs outsl pop (bad) icebp mov jg jne push idiv (bad) jle out into xchg mov out aaa call (bad) mov sti jnp std (bad) mov jmp outsl inc aas sbb jg dec jp mov jae jg aas div stc out inc fcomip fnop jne ret mov test paddd (bad) incl stc cmp (bad) sbb aaa (bad) hlt pop stc sub scas mov ja xchg mov sti mov insl (bad) clc fnstsw scas clc add lods repz in (bad) cli jge lret mov sahf std xlat jmp in (bad) cld pop cld out pushl (bad) push jg outsl incb dec jg lahf idiv jg pop clc and mov mov jle loop stc and stos aas in pop cld hlt lret pop repnz cli pop jle call stc leave cmc scas repz std xchg hlt scas icebp jg mov int3 jg inc decl jmp aaa decl pop decb insb std jno int3 pop imulb lahf lock push cld pushl jg (bad) (bad) sti std sti call jg loopne jle cmpsl std cli mov leave (bad) cli pop (bad) pop jg dec dec stos aas ljmp (bad) psubd jg neg aas divb pop mov leave jg (bad) cli fwait jg outsl (bad) cmp incb mov pop (bad) push lahf jge ljmp jmp popf (bad) iret cld mov and jmp cli das cld mov std cmp scas jle jnp jg mov jmp std iret jle popf hlt negl jg pop inc (bad) jle mov jle out hlt arpl fwait mov (bad) aas (bad) fstpt in sti repnz (bad) dec aas stc xchg aas out loop (bad) call (bad) jnp outsl std imul loopne incl fnstsw pop (bad) and rcrl jae ljmp decb jnp jmp jbe mov idiv inc (bad) in mov lahf call jle pop cmp es cld mov mov jnp int jmp std gs jmp fisttp lcall xchg (bad) (bad) push cld jg repnz cld out jg aas clc mov out scas decl (bad) mov out outsl fdivr jecxz les outsl jge cld add mov (bad) addr16 mov pop std mov cmc aas cmc fistpll in mov cmc jno ja push (bad) jns pop pop call repnz inc push (bad) out jg lahf hlt pop std inc mov hlt aaa cld xchg aas out incl lret fisubr outsl cld mov mov lret xchg (bad) clc aas imul pop jnp (bad) stc in sti xchg xchg out (bad) mov call outsl repz div cld mov (bad) out adc jg pop lcall incl jg ljmp mov (bad) cli pop decb call jle sti std cmpsb repz jmp scas icebp xchg mov lahf sti daa mov jg (bad) jg pop mull sahf std push iret jg aad hlt (bad) sub sti fnop (bad) into mov jle push idiv idivb mov call pop sti scas (bad) insl decb cmpsl call pop jmp int (bad) jmp xlat push (bad) pop lods (bad) call jl idiv mov push sbb paddb outsl sti cmc (bad) lcall aas insl cld sbb ljmp sti jmp cmpsb mov out (bad) in leave pop inc cli call jg mov pop jg mov std push jg aas repz dec jg pop cmc jmp cld adc (bad) std aas and daa jg out std out cs jg idivl push std mov sti pop jge xor fimul stos dec out (bad) xchg jmp (bad) cmpsl (bad) iret sub loopne rcr push lahf icebp outsl lcall enter lcall cld cmc lahf jb aaa ss das mov insl idiv out jg outsl std and (bad) fdivrs repz inc (bad) in pop repnz jg outsl lock (bad) push mov (bad) jp mov jnp repz call out (bad) das cld lret (bad) idivb mul dec cmpsl jg jb jmp (bad) fcom pop repnz incl (bad) lods aas icebp pop (bad) fdivrs dec jg lahf jmp (bad) addr16 std inc (bad) cmc jg mov mov xor scas sahf sahf cld stos lahf stc lods jle mov std scas inc (bad) fdivr jae ljmp divb decb mov std fucomip out stc arpl fxch out jmp dec repz (bad) std mov mov std add cli lahf std jns divb scas mov mov incb scas mov mov jmp ljmp (bad) movsb scas jle aas in clc cmpl jecxz (bad) in pushl (bad) (bad) mov decl std (bad) lea call call cld jae fcomip outsl pushl (bad) lahf std outsl pushl cmpl jno ljmp repz (bad) aaa jecxz stc dec std scas repz sti jmp (bad) mov leave outsl notl movsb jecxz popf fcomip iret decl push lret stc jg das clc xchg jg (bad) out std add sbbl (bad) mov cld or imul (bad) lods aas jmp aas repz sbb sub imull outsb outsl std adc cld and mov stc call cld lods mov daa mov addr16 jecxz in aas jbe jecxz iret stc lret (bad) in aas cmc xchg push fcomip stos mov std pop mov jge sti jbe ja ret call dec call icebp loope jbe push pushl xchg decl repnz mov (bad) out out (bad) aas jle (bad) jns (bad) jmp mov iret stos jle lahf cld pop std sti inc pop pop popf std out aas stc pop incl (bad) mov push mov dec cld push (bad) jmp push aas stc lods mov mov mov (bad) lahf inc out cmpsl mov pop cld in jmp pop call or std push call outsl mov pop repz mov fdivr lret jmp aaa clc icebp hlt mov (bad) fstpt inc (bad) aaa inc jg lahf hlt aad icebp out cmc aas std inc xor jg iret (bad) cmp iret sbb in out fbstp xchg (bad) std mov push cld ret cmc fnop (bad) ret stc scas std das std loopne stc (bad) mov cld xor pop aas (bad) mov lahf sti dec xlat inc jg mov call inc (bad) std repnz sti repnz (bad) arpl fdivrp stos (bad) xchg (bad) call sbb (bad) lods jle dec call in clc ret jg aas icebp (bad) dec out add sti sti pop jg pop jl lcall outsl jge das cld inc jg pop jge repnz lock pop jecxz and std jg (bad) mov jmp repnz (bad) adc jge cmp fnstsw loope cmp pop jg lret mov jmp stc pop jle pop cmc pop std lret mov xchg push iret std mov ljmp out stc lret jle mov incb cli xchg cli xchg (bad) stc (bad) mov lea jg lods repz daa ds pop (bad) aad loope pop xlat jg mov mov pop cld stos aas jmp ds jnp negl (bad) clc (bad) (bad) fdivrl jbe rcrb out pushl jg aas cli jg std (bad) fistpl pop dec call outsl sti outsl cld sbb repz out pop cld sbb jmp stc mov int (bad) fldcw cld fstl cmc fldt jg das clc aad out fcomip dec push cld jno out (bad) std mov jg aas stc jecxz (bad) scas lcall pop jle ljmp cld dec jg sti (bad) cmpsl push pop sti ja pop jg aad std idiv push jg jns (bad) aas (bad) in stc jg dec (bad) das inc pop mov (bad) std outsl ds jne ljmp mov cli aaa cli (bad) pop mov pop cld fidivr out push outsl dec inc jg cmc ret jg in clc pop jge pop jns (bad) lahf dec dec daa inc pop neg push xchg jg xlat mov (bad) in (bad) mov call ljmp scas cld jmp imulb repnz mov stc lahf hlt xchg std popf pop sarl stc idiv or mov sub lock std xchg jg pop stc divb pushl in aas lock cltd (bad) jmp das incl mov aas jecxz mov scas cld xchg aas sti (bad) daa (bad) aad (bad) sti lret (bad) fnop aas jle das sti push mov jg scas incl out jo cli out jg dec jg fucomip idiv pop jg in cld mov sti lret jle (bad) cmp jmp (bad) fidivrl jecxz (bad) mov pop int3 jmp (bad) (bad) aaa ds xchg (bad) sahf in cld (bad) pop js outsl std and and outsl xlat dec (bad) call out mov das es mov jg out std out repnz mov cli lea (bad) call out xchg decl cmc xchg xchg jnp scas clc sub xor pop mov std cmp mov (bad) xchg jl (bad) jmp (bad) push addr16 fdivrp mov loope insl pushl fwait std dec aas cmc pop cs (bad) cwtl fcomip (bad) cld imul fucomip scas decl clc into out jo aaa decb out scas cli mov das (bad) push jg xlat mov out cld cmpsl incl (bad) std xchg jmp pop cli in (bad) lahf (bad) sarl mov pop (bad) idiv jmp in cld fwait jle leave pop hlt out dec jg cld cmp std mov ficomp stc pop jg iret stc cltd aas cli ja (bad) push mov (bad) addr16 (bad) aas jle stc mov mov call fstpl repnz jmp icebp lahf hlt lock pop (bad) negl jg mov cmpsl sbb jg,pn out (bad) pop cld (bad) mov cld pop incb leave jg xchg scas (bad) sti mov fldenv (bad) outsl repnz inc jg pop sti aad icebp ja movsl lcall daa xlat mov cld aam lock push call push iret (bad) pop (bad) (bad) ljmp lret out cmp mov stos cmp pop jnp out (bad) movsl mov mov out clc (bad) jg pop ljmp aam inc mov test cmp mov (bad) xchg jg dec sti xor xchg jg pop stc das (bad) xchg push pop pop mov aas (bad) imul mov (bad) cli jmp (bad) mov jecxz mov scas idiv (bad) cli in aas cmc aaa cld popa out out negl sbb repz cld gs pop std paddsb scas jg repnz cli pop (bad) mov (bad) sahf jg aas stc inc (bad) mov call clc xlat stc (bad) inc jmp iret cld sub ja negb mov das std xchg mov mov inc out push mov jg aas jne (bad) jmp stos jg outsl ljmp jg mov xchg jle fnstsw stc aas decb stos es inc push ja lods jg stc aas cld mov loop incl (bad) out call scas incb mov cld stc jg jg (bad) jge stc (bad) call fistpll mov pushl fcomip mov jle out std imul icebp mov negl pop negb (bad) mov out fildll xlat stc (bad) mov fwait std lods mov (bad) cli xchg (bad) push std idiv enter cli dec stc add clc push jmp cmpsl mov fldt fistpll das sti pop (bad) sarl in iret sahf jle (bad) (bad) push idiv lcall out cld test or aas (bad) jne les pop (bad) aaa jg lds aas (bad) das call mov jle mov jp rcr xchg call call lahf stc imul jmp cli das decb lahf std mov cmp mov mov aaa (bad) in in cmc cmpsl (bad) in aas mov add (bad) jmp dec pop jmp ret out (bad) call das (bad) out hlt pop (bad) xchg fcmovnu outsl sti pop mov aad aas std call (bad) ja inc mov mov jnp pop decb mov notl cld (bad) dec ja loopne mov es jl aaa cld add (bad) movsb jg fwait pop cli out in mov lahf xchg inc scas stc in (bad) jg mov mov shld negl int pop lods mov lock cld jmp jnp jbe jg out stc call mov push outsb std (bad) icebp jg push idiv gs clc aas stc in jmp (bad) stc pop cld push ja mov push mov aaa jle dec cld stc jg mov mov call fdivrs (bad) fldt clc pop jg xlat dec aas jno aaa cld ret mov std fcomip pop (bad) xchg mov ljmp mov incb jp (bad) out inc stc cmp pop cld repz cld test or stc inc jg (bad) std sar lock lock call ljmp sti idiv mov (bad) aaa cld popf (bad) std aas loop sti mov idivb pop std xor cmc dec into mov ret notl jge sarl (bad) ja xor out rep jle jmp jmp in pop cmc daa sar aad (bad) test fistpl daa jg popf daa (bad) jmp dec ljmp cmc rcrl call stc lahf repz imul ljmp (bad) (bad) clc lahf call pop sti idiv push movsb mov in lahf (bad) jge lret fucomip out std cmp sti jg addr16 mov les cmpsl cld xor clc popf jle out cmc jmp cmpsb jg stos repnz std jmp lods pop std arpl out cmc popf in jnp leave lds cld ja pop (bad) in jg pop (bad) fwait idiv ret cli cltd fucomip pop clc jp jg iret cld xor pop jle lcall xchg dec incb jmp popf (bad) jmp aas loopne (bad) cmp outsl clc clc pop sti lret jle jg std ljmp repnz std dec (bad) mov fwait ljmp jecxz sti (bad) mov fistl push std sub (bad) ljmp idivb repnz idivb cli dec out cld or (bad) inc (bad) in cmc push jg stos jg mov sti lods (bad) mov (bad) pop incl (bad) movsb (bad) cli mov lahf pushl test xchg jg idiv mov jmp out jmp jnp fsubr cmc xlat pop nop std cli pop (bad) loopne std lahf (bad) lods jle jp out sti sub (bad) in (bad) fnop mov aad icebp pop mov das jmp (bad) rcr decb test inc jg pop cmp sti repz ja mov scas stc or std test pop cld repz out mov int (bad) idiv xlat incl call jmp (bad) out aas repz xlat mov iret push (bad) test negb clc out dec repz (bad) xlat mov stos lahf jle hlt sti sbb xor dec pop icebp outsl mov mov push paddw jmp repz jle jg dec std int (bad) fdivrl iret cld mov (bad) cmp stos (bad) loop cmc das cmp (bad) rcrb pop cli scas ljmp clc xlat (bad) mov push (bad) mov (bad) pop hlt push mov aas mov cld ljmp ljmp call jg pop cld out leave (bad) cli out inc cli sti dec stc pop jg pop (bad) stos (bad) mov add leave stos mov cli mov call fnop mov cli stos call (bad) ljmp push sti push pop leave fistpll jg insl jle jg ljmp push push (bad) cld paddb rcrl call in clc pop std loopne std mov hlt (bad) pushl das (bad) icebp sbbl xchg push aaa mov mov xchg lods (bad) fistpl call lahf cwtl cld mov jg jg cmp mov out iret cld pop mov mull iret mov jg (bad) cld bnd mov in icebp mov dec ds addr16 cmc lahf hlt xlat cld popf (bad) add in jmp mov add repz pop lcall mov mov repnz dec sti jmp jg pop aaa std dec decb (bad) jge lret fcomip aaa sti and icebp jg repnz jg imul cld aas incb (bad) mov std mov std push mov repnz or out arpl (bad) in ljmp in mov shl sti leave mov leave (bad) in pop inc push cld sarl lahf pop cld mov adc ljmp mov outsl (bad) ja xchg lret (bad) (bad) scas jg xchg (bad) jns rcrb mov (bad) sub jmp jg pop jnp lock jle cli imul (bad) jle jg aas clc leave ljmp decl cli das jg das std xchg scas jmp jecxz imul daa std ss into pop repz push jg pop (bad) mov pop hlt in xlat cld pop (bad) mov jg (bad) cld scas jp dec cmp adc push sarl out inc jg decb jmp sahf nop cld lcall std pop dec repnz mov cmp (bad) jnp lret cmc (bad) (bad) (bad) sti pop inc jmp jg outsl cli (bad) jl (bad) (bad) dec (bad) out pop repz mull cld addr16 cld mov jg mov xor (bad) pop mov jmp dec (bad) loope in pop jg lahf cmp jge (bad) decl mov (bad) lock dec pop jg mov aad push std stos fstps inc repz outsl decl int pop repz jle pop cmc lret (bad) mov push incl ljmp ja xchg std push adc jg lahf std aaa jle mov fwait (bad) cwtl pushl fist adc (bad) hlt scas aas lcall jle aaa outsl push pop (bad) clc icebp outsl clc das (bad) enter (bad) xchg mov sti outsl stc (bad) (bad) fidivrl aaa mov out std aad std (bad) jmp xchg inc push pop inc inc mov (bad) jecxz loop clc xchg mov das mov xchg jg jg push (bad) cmc pop push mov inc mov mov lcall std jle clc hlt nop (bad) mov jmp and cmc aas cli sbb call lcall push jg out cli out dec mov jg jmp ja and das out std popa call out repnz in cld pop mov jg aas clc jnp jg mov out fucomip std dec (bad) sarb clc in fcomip (bad) lahf jg pop cli jg jle daa jmp popf inc in cmc pop jmp xchg cmc mov out pop pop cld mov (bad) pop mov dec stc mov jg mov (bad) mov ret ljmp lock iret in cli aaa cld (bad) (bad) arpl (bad) (bad) clc out (bad) das cmp aas (bad) idivb jecxz iret cld add (bad) div jle out cld ficoml incl pop (bad) fcmovu (bad) out stc das lahf jge cmp daa cld int (bad) jge scas std pop mov out mov cld rcrl xlat cld arpl incl pushl cmc loopne clc (bad) mov arpl out jge leave pop hlt pop cld jbe (bad) pop lock cld test jmp hlt (bad) (bad) jp lret pop stc pop pushl dec lahf lock inc lahf cli and out aas jo ja movsl pop std adc (bad) out (bad) sbb mov leave (bad) jge xchg jg jg sbb (bad) addr16 push cld repz std xchg aas clc dec (bad) call (bad) cmovge mov jle out je out pushl call lahf decb adc pop divl cmp jnp lret pop cli jg leave xchg inc out imulb aaa jg jg outsl ljmp (bad) (bad) clc std (bad) outsl stc lahf (bad) jg pop bnd cltd (bad) stc mov cld and stc aas repnz decl xlat push das enter jb sbb divl in mov paddd cmp (bad) sti in cli scas (bad) sarl (bad) clc add out cmp idivb adc sarb lahf std cmp shrl xchg cld (bad) jg outsl (bad) (bad) ljmp int3 out ret mov shrb ja xlat aas cld out mov dec (bad) (bad) movd aas in cli (bad) mov lret xchg (bad) dec fcomip aas incb out cld push mov push call daa (bad) clc aas jecxz clc cld in ja fstps dec jle jmp push incb fildll negl cmc pop nop (bad) stc and iret incl pop dec lcall std (bad) xlat clc mov pop cld rcr repz clc fistpll (bad) jmp xchg jg iret fxch (bad) fcomps jg daa jbe neg (bad) psubb ljmp incl inc std inc mov sti dec std mov (bad) cmpsl jg jmp imul mov xchg aas loop aas mov cmpsl mov rcrl notb lock (bad) jmp lret jg incl mov in lahf std pop jle aas in cld icebp jmp cli outsl mov not mov cli lahf jg cli repz pop jg lahf repz in cld cmpsb mov icebp lahf clc call mov jg bnd sub outsl clc mov inc jmp in sti arpl jle aas arpl push (bad) cld aas jmp cli fucomi mov clc dec jg iret cld out pop hlt mov jecxz stc stos not stc pop jg lret jmp scas sti ja stos jg mov jg cli xchg cld pop mov out ret scas jae repnz punpckhdq repz mov decl jg out stc cmp xchg (bad) fwait (bad) (bad) call repnz cltd (bad) cmp sti stos (bad) mov fnstsw jg fisubr xlat push (bad) clc lcall pop mul ja test mov mov into pop lock push out pop std scas jg pop repz (bad) mov cld mov cmc loope js out pop call addr16 in mov jg idivb adc ret lahf stc (bad) mov jmp jg outsl icebp loopne pop xchg outsb jge das cld ret repz aaa std xchg dec mov inc std sub (bad) sti (bad) xlat mov ja lahf std ret int (bad) (bad) mov mov push in cmp std aas cli pop (bad) cld aas in pop jmp aas cld mov stc xlat clc (bad) int3 mov dec rcrl sar enter jecxz jle pop pop jmp (bad) inc leave jle cmc aas sti das mov (bad) xor idivb clc hlt (bad) sti or jecxz jecxz mov sbb out jg push cmp dec mov jg jg iret (bad) fidivrl mov clc scas and (bad) jmp hlt imul repz jecxz out jg stc stc pop ljmp jle mov cmpsl lcall nop repnz jmp (bad) das cld sar mov scas cmp adc jge jge (bad) cmp clc sbb fnstcw dec mov mov pushf mov mov lock lret mov lds xchg das (bad) out out aaa cli jnp (bad) mov addr16 (bad) ja (bad) popa (bad) jmp pop xlat fdivr shrl icebp lahf cli repz lahf nop (bad) stc leave push cli out and repz in jg sar mov idiv xlat push (bad) jmp (bad) sahf pop (bad) fistpll das clc sarl (bad) mov fdivr scas addr16 mov stos mov out int3 outsl cli lret ja jnp std es das std out jg aas cld and (bad) paddw jg (bad) cli scas std in mov jl outsl inc fcomip (bad) cld lret jmp aas repz cld lea or aaa fnstcw cmpsl cld push pop in cld xchg pop xchg push out xchg mov (bad) fdivr out (bad) pop (bad) std in stc dec (bad) push das (bad) out dec (bad) (bad) fcomip out sti fucomip aad std sbb ljmp repnz cld xchg (bad) fucomp lock inc in aas imull (bad) aas cmc (bad) jg ss lahf inc pop jle jmp hlt pop std xor jle pop clc mov and dec jle push (bad) incl pop jmp cld mov jg lahf (bad) out cld mov xor out (bad) jmp jmp (bad) out pop cld xor xchg jg idiv jge xchg ljmp (bad) adc fsubr hlt dec mov mov (bad) clc add (bad) fcos (bad) icebp aas xor pop decb idivl pop xor decl rcrl jmp mov cld negb jg aas repz ds jmp jae leave outsl rep jg pop movsl mov cld mov (bad) mov jmp aas mov fcomip pop (bad) movsl pop sbb das jmp jle cmc outsl (bad) pop lahf mov aas push sti jmp fnstcw dec cld gs popf fcomip pop clc lret ds xchg hlt aas call xchg aas lock jmp (bad) test jmp dec jg xor (bad) stc call repnz call jg fisubr std repnz std lahf idivl lahf repz lods iret mov mov jl ja xor in scas stc mov (bad) jg outsl hlt xchg in icebp idiv lret pop decl cmp (bad) (bad) in iret std inc mov jg das sti in ljmp dec (bad) lods (bad) jmp dec jle jg repnz ret mov jg ja icebp jg idiv jnp cmc xchg mov dec stc jmp lret scas clc ja cld mov jnp cmp scas testl jnp jbe xchg jg (bad) (bad) sub std mov push outsl jmp out int3 jmp mov (bad) out pop (bad) cmp mov pop cld pxor aas cmc addr16 (bad) (bad) cli in lret cld cmc pop mov stc repnz sti das (bad) sahf pop clc aad cli arpl std or mov jle loope mov in js idiv lds jg aas jnp jnp mov mov mov imul mov leave jle fildl (bad) mov jnp in cmc scas std inc jg inc idiv ja xor push jmp lock idivb jg pop sti scas mov (bad) mov (bad) lods aas in stc fstpt aas out outsl stc aas jg pop lock cld push outsl push cld pop mov fnstsw call imul aas stc scas popf (bad) fidivr aas stc (bad) std jbe out aas hlt xchg cld mov iret lahf ja std repnz std scas clc jae mov cmc psubw push (bad) sbb repz sti dec jns mov aas cmc cmp jg sbbl cli aaa incl mov jg jg jne movsl pop add repnz cld out lahf cld int cld leave (bad) ljmp iret idiv xchg jg xlat cld lods mov jg pop negb std mov icebp loopne sub stc mov mov in scas sti or movsb cmc out mov stos (bad) sti aas ljmp jg xchg jg sti pop (bad) out das jmp fcomip mov push (bad) bswap (bad) stc inc (bad) mov aas cli (bad) repnz and sti or out fnop int sti pop decb negl idiv inc pop imul cld scas notl pop ss jle jg repz cld pop inc (bad) int pop jmp (bad) in (bad) xchg aas imul and ljmp mov lret (bad) jmp cli sbb push jecxz stc loop stc sti jg loopne jg into in mov mov xchg jg mov push aas imulb sti cmp fnop fstpl fdivrs (bad) call sar lods pop jge cli cld arpl pop cmp (bad) jg mov jmp in mov icebp out pushf cld xchg addr16 fmull (bad) lods add fwait std jnp,pt (bad) addr16 pop dec stc (bad) cmp int sti cmp mov xchg pop cld out (bad) (bad) scas stc sbb ficoml jg icebp jg paddsw jg mov mov (bad) jmp out jle hlt daa (bad) fidivrl addr16 sahf mov test out cld sar (bad) repnz inc jle (bad) (bad) clc mov std negl stos pop (bad) out (bad) jbe (bad) cmpsb push out (bad) xchg decb outsl jg mov jle ljmp jg dec cld (bad) aas repz cld (bad) call idiv aam std arpl cmp movsl aam push cmpsl jg pop pop jle iret stc ja leave out cli jmp idiv mov in lahf sti icebp mov incl aaa jg lahf clc inc push decl jmp jne (bad) jle (bad) (bad) (bad) xchg mov (bad) cld idiv jmp inc stc mov mov std (bad) ret cld aas jmp in jg mov sti lods mov aas inc (bad) jmp repz (bad) push jg pop hlt in into pop lock jg inc mov mov ret jg jmp push cld daa ja imul xchg (bad) ds std sahf aad clc cmpsl std adc stos (bad) (bad) out pop std icebp fistpll fnstsw insl jmp and pushl (bad) lods fcomip (bad) jecxz loop (bad) outsl ljmp mov jle (bad) incb pop repz scas popf mov mov std repnz hlt scas cld (bad) mov mov jg sub and jmp inc push mov clc cmp enter repnz sbb scas cli in and jg jmp cmpsl fcomip fstp jg psubw idiv daa (bad) ljmp mov test stc pop stc out (bad) call cld push mov jg scas cmc daa decl cmp pop jg outsl stc ljmp jg in loopne dec jg mov jg mov xchg jg fnstcw lock into mov std lods (bad) clc xchg (bad) sti mov scas pop hlt stc das ljmp int3 pop icebp cmpsl cld ss rcrl inc (bad) (bad) ljmp fcomip pop (bad) aam cmc (bad) (bad) ljmp cmp or dec stc xlat jle pop (bad) or dec dec fbstp idiv jbe repnz lret aas decl notb fidiv xor negl lock fistpll mov (bad) mov or mov jg dec std push jg das clc idiv add inc hlt call (bad) ljmp repz pop sub (bad) push cli adc (bad) dec lahf pushl js (bad) jg mov iret (bad) pop (bad) (bad) aas bnd push stos cli sub (bad) pop imul pop (bad) push iret jmp clc fs aad fidivl pushl xlat jg fucomip pop xchg (bad) sti sbb push jg mov cmpsb (bad) cmpsb decl adc fiaddl addr16 (bad) call lods lcall pop (bad) mov lret aas in (bad) scas (bad) in aas div fcomip mov pop (bad) scas cld add lcall sti std sbb pop aam sarl inc push (bad) decb clc ljmp std inc lcall (bad) loopne loopne cld ljmp fild (bad) (bad) jmp pop xchg (bad) cld addr16 std jg jmp mov decl (bad) fidivrl cmp mov lahf jg in icebp jg jmp imul jecxz (bad) (bad) idivb (bad) mov in jmp idiv popf jg lahf xchg (bad) out mov jle cmp jle pop std imul (bad) pop std cli inc jnp lret in aaa clc ljmp dec jmp das std mov ja jle lahf cld cltd mov lcall mov lret out cmc (bad) cld jae std aas lock (bad) hlt mov mov sbb add scas jmp pushl hlt int icebp idiv or fdivr lock fs lahf jg addr16 jecxz mov out out (bad) fidivr jmp mov call idivb repnz outsl ljmp mov (bad) es jg pop cld shll (bad) cld ja xchg aas in jg pop cmc pop std repz mov pop cld idivl lahf repz std roll (bad) idiv into aas add jmp sti xor mov test in mov paddw cld push cmp mov jg pop clc out cld icebp push jg mov inc jg inc mov repnz dec popf std inc jg aaa inc aas icebp aas sub push jle lret out call stc pop inc cli cli idiv stos (bad) fadds dec outsl (bad) imul jg (bad) (bad) incb inc stos jmp xlat std paddd (bad) stc pop fdivrl sti xlat pop sar incl cld and xlat aas dec inc xchg jg xlat cld xor lahf cld int mov paddw dec mov pop ljmp mov out sti lods aas jb fstpt ds dec jle jg bnd jg nop mov fistpll push lods dec call push fcomip out sti (bad) cli iret (bad) mov aaa cli or jmp in std sub fucomp cmc (bad) in jg outsl xor test mov pop cld xchg loop pushl (bad) outsl std mov lret (bad) jnp (bad) jnp jg jge lahf aas xor hlt (bad) mov cmp (bad) (bad) sbb cmpsl mov aas repz cld test jle jg (bad) hlt out cmc jmp ror (bad) mov clc (bad) mov (bad) addr16 in lds pop xchg (bad) sti fistpll sbb sub xchg (bad) fdivrl ret outsl div std jle (bad) jg xlat cld mov repz cld mov (bad) std fimul cmp jg lahf repz mov pop jg fnstsw stc std jg jg dec js cmp bnd aas ljmp (bad) cli outsl stc das incl jmp das jg mov or (bad) lahf cli mov jnp clc cmp jg fbld stos push jg movd fcomip ja sti jmp xchg mov je iret cld out out (bad) out mov adc ret xlat mov call std out decl std push jg jg fstpt stc adc mov out sti mov data16 mov or (bad) mov mov cmp (bad) jle aas std iret (bad) cmp outsl aas std andl adc (bad) push lahf aas jns stc fbld stc (bad) jmp lret mov push cmc mov (bad) scas jg push ja mov repnz decl out jmp iret lahf jg mov mov pop jle pop out std dec dec aas (bad) xlat cld pop push rcrl (bad) clc jecxz scas push decb or pxor mov stc xchg repnz mov fidivrl outsl mov in jg out repz cli mov (bad) xor push cli aas std shr hlt fwait pop aas pop call jg jecxz loopne cli xchg jle pop jecxz stc dec (bad) fsubl repnz clc inc call (bad) sbb fcomip cmc (bad) mov (bad) popf fcomip xchg std stos (bad) ds icebp jmp ljmp cli sti dec jle cmpl (bad) fdivrl ja add inc hlt incl mov jg lahf std cmp repnz jg in aas inc cld inc stc stos aas out cli cmp pop jmp jl mov out das cld arpl rcr ljmp std and outsl mov in push push cld ja (bad) cli fcomip das std xchg jg out cld sarl inc jmp scas sti sbb std jnp jmp mov (bad) aad sti pop cld (bad) jb out repnz dec mov lret (bad) sarb idiv xlat jle fcomip jg mov repz mov jg repnz stc lods jg fnop aaa (bad) (bad) pop jbe repz mov pop pop std pop outsl incb mov jmp call cld outsb inc mov mov (bad) (bad) paddb (bad) jmp std mov (bad) loop in jl inc sahf std jmp into push jg scas cli mov mov pop (bad) aas xchg jg mov jg ja jle daa ljmp jnp jle jmp jg push aas (bad) fistpll mov jmp lahf cld mov cmp loop dec (bad) out mov daa std xor jae scas xchg aas repz cli or fnop jnp outsl jg aas jmp stc add mov (bad) (bad) std lock xchg pushl scas lcall cld cld dec mov mov (bad) repnz aad lock xchg outsl iret (bad) mov sub cld mov outsl jmp pop cmp jg out stc in mov outsl cld fwait (bad) std pop (bad) psubq pop (bad) (bad) jl hlt (bad) (bad) (bad) ja lcall mov dec mov fcomip ja xor scas cld mov ja xchg std stc inc dec jle fcomip mov xchg jle mov (bad) jmp loop cli pop (bad) lods lds scas clc add hlt (bad) jmp imul jg mov (bad) clc out incb outsl jle in stc xor idivl (bad) xchg push in lahf push in (bad) aaa pop (bad) jp jg pop cld ljmp jae pop (bad) xlat into lcall mov (bad) call in cmc leave pop jl mov jg mov cli out pop std mov test fcomip (bad) and xlat pop hlt xchg (bad) cli aas repz jnp test lcall imull lret mov cld push jg out (bad) adc xchg inc xchg jg das sbb aas stc sti cld cmpsb mov neg std (bad) outsl imulb cmc pop cld lods dec pop hlt xchg jns xchg (bad) fdivrp jmp leave icebp imull clc sti pop jmp (bad) fistpll loop icebp pop leave icebp idivl int3 outsl cmc addr16 jg (bad) (bad) cmp (bad) dec (bad) stos vxorps loope ljmp in outsl stc mulb cmc lahf xchg (bad) cli int aam decl clc jne ret xlat jg in (bad) fcmovu out mov mov jg lds les inc out pop icebp (bad) push jg scas (bad) or repz fcompl iret inc mov mov (bad) stc das jmp addr16 dec (bad) clc ja jge out pop sti out (bad) std bnd int addr16 jg jmp jecxz stc cld jg sub popf (bad) jmp jg icebp pop clc pop pop in inc inc fcomip dec xchg (bad) cli arpl fnstsw aaa (bad) and lds std pop negb cmc scas sti scas jle mov stc (bad) std aam icebp xchg cmp popf incl jmp outsl clc dec cld inc jmp jmp cld addr16 cli stc sarl adc aam dec (bad) jae xchg std jnp loopne jge xchg pushl (bad) pop jle shld sub gs in jae dec (bad) sbb cld (bad) lret popf mov ljmp lods (bad) in push hlt out sti std (bad) stos (bad) (bad) push bswap cmpsb jg jg aas dec fs jle in pop icebp push cld ja (bad) fstpt sti adc fidivr repz clc mov mov push (bad) mov std repz pop cld iret (bad) das pop jg stos mov sub repnz lret jg lahf stc mov call (bad) jnp in stc pop ds mov cmpsb (bad) (bad) outsl sti cmc jle sti cmpsl (bad) stos fnstsw ja incb (bad) xlat jg jg sti push std push mov (bad) mov (bad) imul dec jle jg pop lahf jmp sti loop sti imul (bad) decl imulb out in int jg ja pop xchg mov out cld stos mov call mov push fcomip (bad) mov clc sub cmp mov std (bad) int (bad) rcr cli in pop lcall scas lcall icebp inc int jne cmpsl jg aas out (bad) jae aam repz addr16 paddw jg mov cmp in jae imul dec mov leave hlt cli das (bad) jnp fstps aaa pushl jg das mov dec pop cmp (bad) idivl imulb cli (bad) aas cli outsl sbb aam out mov pop sub cmp stc jmp lea out std ja mov out ljmp jmp pop stc xlat pushf cld (bad) in repz dec jmp jge push (bad) cmp cld outsl (bad) rorb enter cld mov movsl jg (bad) out (bad) mov idivl push scas jg ja cwtl push faddp (bad) lcall mov cld test iret cld clc lahf inc std incl (bad) pop std dec cld cmp ljmp (bad) adc std ja aaa jg pop repz push mov jl das std cmp push jnp in (bad) sarl (bad) push aas stc (bad) cld cmpsl (bad) jg mov cmpsl jg (bad) jmp std jae aam mov jg push cmpl pushf fs clc mov xlat xchg jmp cmp (bad) fwait aas hlt stos aas in ja sub cmp fistpll fucomip std fs lods jg mov fcmovnu jmp stc dec inc ret inc int cli leave dec (bad) fidivrl out clc out test cltd pop jg stos jg mov xchg in pop jae dec (bad) fnstsw pop std hlt lahf dec cmpsb mov jle aas not (bad) aaa jg pop dec std call int3 ja rcr repz (bad) sti mov cmc (bad) (bad) mov (bad) cld out cld xor jmp mov hlt scas std (bad) idivb lahf cli jmp fdivrs repz pop cmc cmpl lcall in aas popf dec das (bad) out mov jg jg xchg xchg jg out inc stos push (bad) dec lcall aas outsb (bad) lods jg pop cld mov sti in aas out std or inc int jge cmpsl jg aas call aam jmp cld (bad) mov scas cmp cmp cmpl std mov test std add das sti stos incb lret incb std or stc dec jg pop cli mov (bad) inc aas sti decb inc mov aas ljmp hlt scas std adc pop (bad) (bad) int3 (bad) call mov lahf cmc lahf (bad) xor repnz cld stos (bad) sti aas xchg dec xchg jg fcomip lret mov jg lahf std cmpsl cld push mov dec das cli fucomip std jle mov sarl jmp jle cmc lahf jl (bad) cld cmpsl cmpsl mov cli sarl (bad) cmp scas cmc imul aas (bad) cmp std jle (bad) call jmp mov cltd dec inc mov outsl (bad) sar loopne cli sbb psubd pop cli mov mov jg fistpll push scas aas (bad) cld (bad) stc dec (bad) mov aas std imul mov (bad) popa mov (bad) jmp cld rcr inc adc cld and scas (bad) xchg incl repz cld call hlt addr16 push mov sar pop (bad) out neg popf sar jmp aas cmp inc lahf (bad) mov cld ss lahf cli pop std jp int3 (bad) jg sub mov call pop jae pop jg iret std xchg (bad) cmc aas in mov das (bad) out pop icebp jmp incb call incl icebp ljmp lahf clc xchg idiv rcr repz cmpsl std xchg in das incl mov (bad) mov sbb (bad) cli in aas xchg std and decl ret repnz push (bad) push aad mov scas std adc pushl jle jg dec jg aas daa jg idivb std ja loop sti cmp call (bad) sbb (bad) lahf (bad) mov out hlt imul scas mov mov paddd pop jle xlat sub pop jecxz pushl idiv or pushl mov ret dec fucomip (bad) (bad) fwait sahf ljmp out jmp jg repz idivb dec dec aas ljmp mov (bad) sbb mov pushf push clc mov jle pop repnz jl dec sbb (bad) fstp std aaa pop jl cmpsl incl in negl add stc outsl repnz cli fcomip xchg sbb cmpsl std data16 dec std fwait mov icebp loope repnz xor repnz xchg jg pop cld aas (bad) out in mulb pop icebp dec (bad) icebp inc loope mulb dec mov jg aas stc (bad) (bad) (bad) aas divl cld xchg in das stc pop (bad) (bad) push std scas jg pop clc repnz jns scas incl pushl out jns xchg repz dec mov jg pop stc hlt mov clc ja stc test jg push (bad) sbb jge (bad) cmpsb mov (bad) xchg pop std iret cld mov or (bad) cld or xchg lahf pop pushl mov pop mov push mov out cld push daa dec decb lahf jbe out aas out das jge pop incl mov jle lret jg addr16 loope cli mov dec pop cli or scas sti in jg jg insl mov pop jg mov mov fdivrs (bad) (bad) fnsave inc (bad) fstps icebp dec (bad) ljmp cli pop incl out jmp (bad) (bad) icebp negb clc xchg lcall cmp cmp (bad) std (bad) add (bad) ljmp std or pop cmc lret jbe popf jg (bad) std repz ds (bad) cld pop push (bad) cli lods jg aas sti insl jle pop stos aaa in jle popf in cld and push (bad) loop stc (bad) (bad) mov (bad) stc jg and (bad) dec cs sti mov sahf jl stc outsl pop std and jg jecxz hlt push std pop jg lret jg fs pop lcall jmp out scas mov iret call scas repz imul push cmp daa mov repnz repz inc fistp std outsl pop std ljmp aas std jne lret pop jne aas jmp iret sti dec (bad) out aas lock mov mov mov scas (bad) popf incb pop lcall and in jg cli push cld cmp aas cld daa cld jecxz in (bad) jg jg bnd lea scas jg fucomp aaa (bad) insl jle mov (bad) fnstsw addr16 stos push fcomip aaa popf (bad) es fmuls stc outsl jg scas (bad) out adc mov out std in imull sti fwait jle aas in lret out int (bad) cli pop jns (bad) (bad) stc jg mov mov xchg mov (bad) aam decl clc pop hlt pop std pop lahf jl imul jg lahf dec cld sub leave scas (bad) mov ljmp in mov (bad) cld mov cmc pop cld xor jg aas jle cmc lahf pop jmp cli fsubrp lock daa push call mov daa inc out (bad) lret jg (bad) clc mov dec sarl (bad) loopne cli mov out pop clc lock cli jnp push dec (bad) mov mov stc pop (bad) ficompl lds aas pop xlat jg (bad) clc das inc jg pop lcall (bad) xor inc outsl std (bad) icebp pop rep cld out mov inc push std pop repnz xchg mov sti insl (bad) clc jg lock das sti cmc incl (bad) fcomip or jle aas stc dec jp cmc imul aas icebp pop std pop mov out cli xlat inc movl sti (bad) jmp (bad) clc lahf lcall icebp (bad) push aam aas mov popf xchg lds mov stc (bad) (bad) xchg dec (bad) mov (bad) fistpll (bad) dec mov repz mov cmpl sub sar loop jg jmp (bad) sti (bad) inc pop std jle mov jle decl aaa jl mov (bad) cmp enter ja test mov cmc mov minps loope inc mov ret ja std lcall jle pop mulb clc lret mov jle aas hlt pop repz (bad) fdivrp rol pushl pop cld test and lret fdivrp pop (bad) xchg jg sarl aad stc jb xlat jp dec (bad) nop mov (bad) idivb scas std inc mov (bad) (bad) inc inc (bad) (bad) (bad) repz aaa stc divl out mull fcomip adc icebp idiv es stc scas inc stc repz in cld inc jle mov ret lea mov loope stc jmp xlat inc scas clc jmp push scas mov fistpll stc rcrl mov pop pop (bad) sti pop std xchg (bad) sti lahf std out loope in (bad) std in xlat scas jg sbb lahf mov sti incb lds fwait push dec (bad) outsl cld out call mov (bad) jg lahf pop in (bad) stc iret incl addr16 das iret dec fild aaa jge (bad) (bad) push outsl decl std cmpsb (bad) cmp ljmp addr16 jecxz loop out repz jl aad add std mov (bad) lods scas (bad) ljmp lahf pop (bad) sbb dec cld jge in std pop std inc mov std mov std hlt xlat cld mov outsl stc dec dec pushl addr16 cli in jmp stc aas clc dec sub lods push stos jmp scas fwait cld loop aas jmp cli pop incl fdivrp mov xchg lock push pushl aas (bad) jne (bad) ljmp addr16 out hlt pop sti fnstsw jg das and loope fstps cmp jb mov mov aas sti out sti dec ljmp ljmp aas stc (bad) jle xchg incb pop std mov lahf (bad) hlt outsl std shrd jp aaa clc jae incl jg sbbl std add decl scas jle mov std pop (bad) ljmp cmpsb lds jmp sti or out repnz jg ja imul mov loop mov mov xchg xor jmp mov mov mov icebp daa mov lret lahf mov cltd pop hlt das (bad) gs stc hlt loop loop aas in movsl cld ffreep outsl decl in cld dec std pop jg ja (bad) rcr out addr16 mov out cld (bad) icebp scas cmc (bad) xchg inc scas repz cld jmp mov outsb cmc sti std test fistp mov (bad) mov idiv loope in dec stc arpl jmp (bad) cli pop jle scas cld (bad) mov ja repnz sar leave repz loope aas stos add cld push (bad) jg xor loopne push std mov out sar dec mov (bad) std inc (bad) fldt (bad) std lcall cmp std jae repnz mov dec cld lcall std jmp aam clc (bad) fdivr icebp daa aas (bad) (bad) (bad) fucomip mov stos jle (bad) jg pop je sbb cld outsl (bad) fnstcw xchg (bad) decl std shrl jle iret fcmovu in fdivr jne cmpsb jg iret cld daa mov call addr16 aad stc pop lcall (bad) in jg pop call stos lahf clc jnp (bad) pushf aas in psubq (bad) mov divl pushf jge outsl cld ss dec jmp (bad) fdivrs repnz std in out repz jecxz out ljmp out mov lea push repnz repnz (bad) sarb (bad) fbld sti fldt decb jg divb pop hlt mov mov nop (bad) in push aaa cld in (bad) jg ja xor pop jg ja sbb cld mov mov clc mov loop cmp sub fnop hlt loop es std outsb scas incb ljmp out clc cmpsl fistpll std cmc jbe mov ss xlat (bad) xchg popf push mov mov aas (bad) aad ljmp negl pop ljmp repnz pop (bad) fstpt out not pop sahf jmp inc jg repz (bad) cwtl jg cld iret clc (bad) lret jmp dec cli insl (bad) ljmp call cli (bad) popf cmp xchg lahf pop repz pop clc jne (bad) fisttp (bad) (bad) popa mov std inc call scas stc jnp stos aas sti sarl (bad) mov jnp (bad) repnz movsl stc inc idivb (bad) stc addr16 push daa mov cld fwait jg icebp iret outsl hlt paddb (bad) sti cmpsl movzbl (bad) clc xlat mov into scas mov jmp cmp (bad) jp jg add fmuls jmp (bad) push jg lret mov inc jg outsl stc idiv stc push scas jl in lahf stc sub dec (bad) test xor scas cli pop sar (bad) (bad) in (bad) jg jg clc ja (bad) (bad) fnstcw stc das clc mov inc std jge lret stos aaa fistpll dec jg insl enter cmc (bad) cli lods lahf clc test div xlat cld xchg mov lock das sti add idiv out jle lahf dec jmp (bad) decb les sti xor lahf repz pop cld sbb in cli jae mov sti scas jle jg mov (bad) outsl sti loop mov iret (bad) scas pop mov fcomip jnp imul mov mov sar stc aas cld pop (bad) stc mov cld (bad) (bad) xchg mov pop std pop jmp paddb lea jmp dec decl notl cmp jmp lods mov cli mov mov das cmpsb in outsl lock (bad) test outsl ds mov cmc xchg cld ret jg mov in ja jae jg idiv imul aas cli scas jle jmp decb fsubrs shr cmpsl decl pop sahf pop jg (bad) ljmp (bad) addr16 stc inc lds jmp nop scas call jg mov cwtl in pop cmp (bad) aam stc (bad) push jle std xchg push inc mov (bad) out aas idivl add mov jg dec xchg inc fbstp cld push call fistpll iret std sarb cld jno out in incb hlt idiv jecxz lea jle icebp jg (bad) mov aaa (bad) in jmp out cld shr hlt aas cli jnp (bad) aas jns ja decb (bad) aad out cld out incl rorl dec inc dec mov (bad) jmp lock (bad) mov rcrl lahf std adc jg jle stos push mov dec cld leave call das clc pop jle mov dec jle scas mov push fbstp cmc ja add (bad) out cld dec mov mov jle mov jle pop hlt out mov fidivr cld mov lcall jg ja lahf fnstsw ss xchg (bad) repz inc mov (bad) fwait jg das ljmp xchg pop mull stc cmpl das and sti aaa adc or jle mov (bad) fstpt pop cli push das inc jmp pop clc mov leave jg imul (bad) sub jg jg mov std xchg mov std lahf std cmp into pop clc pop (bad) pop idiv out loope fidivrl incb repz std daa fimul mov (bad) (bad) in out out std pop (bad) mov idiv enter sbb jmp fwait jmp inc jne (bad) (bad) cld and std repz aas xchg out mov pop jle push aas std imul jnp popa std pop dec jg sti addr16 and std cld pop aas cld sub loopne jg jmp sbb (bad) or or push incl inc pop hlt dec call enter clc pop hlt leave lahf std ja stos (bad) ljmp jg mov outsb mov mov stc pop jle pop cld jg sti stos jle aaa mov (bad) idivb std inc jle (bad) jg inc lcall (bad) pop jg jmp clc add and jmp add outsl hlt sbb inc call das cmp push dec jg mov xlat (bad) idivl outsl cmp fldcw popf (bad) gs pop lock cld in (bad) and (bad) jmp (bad) push mov push std cmpsl pop (bad) scas mov clc (bad) jle xlat data16 jmp icebp (bad) xchg (bad) out outsl (bad) jmp (bad) icebp xchg mov lahf cld in xlat pop jg scas clc cmc incb call cld push (bad) in aas cld inc cld pop neg std adc scas std lahf jg outsl (bad) mov cli dec dec mov std sbb jmp outsl (bad) daa cld aad ret out cmp cmpsl jg das pop (bad) ja in call aaa fldenv loop mov ja pop std push mov lahf std mov mov hlt xlat movsb cmc xorl std hlt mov ret (bad) loop mov cli mov mov fstpt sti jle fbstp popf (bad) ljmp mov xor in jmp out hlt push mov lahf jg sti inc jg outsl xchg jg pop hlt pop cld lcall ljmp into push fucomip (bad) decl mov aas in (bad) fcomi das (bad) (bad) jmp jg mov xlat std or scas (bad) outsl (bad) cli xchg (bad) in int push (bad) mov jge inc std icebp mov mov sti sti jl mov push pop jmp jg jg out (bad) sahf jg lahf idiv pop cli pop incb jmp addr16 fcomip or cmp (bad) out stc arpl mov jnp mov mov (bad) cmp add (bad) out (bad) cli (bad) shl pop cld cmp (bad) mov (bad) lods pop cld push xchg aas cli popf jle jg jg lahf (bad) mov cmp (bad) out (bad) iret clc das pushl insl jg out pop sti pop jg lahf js mov mov imul jmp or (bad) inc (bad) lcall lcall (bad) scas (bad) jmp decl cld mov iret (bad) stc ret sahf cld stos fs (bad) sar out clc arpl call aaa mov lods jg fcomip out pop pop sbb inc push pop repz iret cld jnp jg outsl cmp sti in (bad) aaa decb jg dec (bad) cmp mov jg pop sti lds lods fistp (bad) (bad) aas std cmp inc cld (bad) (bad) push pushf jns pop fdivrp mov addl icebp aas clc inc call into out repnz mov out lcall push inc pop hlt out std xchg lahf stc ja cld imul jg jg cmpsl cld mov mov cmc idiv lds pop inc jg jg sti cld out mov aas (bad) sbb jno sub pushl jl (bad) (bad) stos (bad) cld aas cmc pop decl jg aas icebp fildll jmp (bad) cld (bad) (bad) fnstsw pop cmp aas out (bad) cli xchg mov loope jg mov std pop jg lahf stc iret cld les (bad) outsl cmc xlat (bad) hlt scas dec jecxz mov xchg (bad) ljmp (bad) clc out mov jg pop repnz std adc das stc std (bad) jmp cmc scas scas (bad) in mov mul outsl hlt fwait (bad) stos jg icebp out repnz jmp in fbld out push aas div lahf sti pop (bad) out mov jecxz sub stc sar clc (bad) mov (bad) cmp lahf js aaa std jge loope aas jecxz sti sbb in mov mov ds das (bad) negl imull mov mov (bad) cld lods jg scas (bad) fsubrp idivl push decl sti stos push jmp das std xchg fdivrs idiv dec mov fs jns jmp call scas decb cli xchg std dec jg pop icebp pop pushl iret pop cmp arpl in call pop std jae out std fucomi call mov (bad) pop mov dec pop push std hlt jg xchg cld mov jg mov cli (bad) out dec (bad) jmp mov ljmp std xchg mov mov jno aas jle std sub or fistpll jg pop cmc iret dec dec out imull (bad) jmp stc pop jnp ret pop std pop jge push mov aas (bad) lahf inc (bad) in (bad) cld (bad) adc iret mov dec cmp lcall (bad) stc loop cli sti (bad) loopne out iret sti jae cld ljmp addr16 sbb loopne cli stos jle aas jmp insb std (bad) pop jg pop clc aas cld pop jg lahf stc ljmp (bad) mov out clc mov negb pcmpgtb out repz std push mov cld fsubrs scas dec fucomip jg jg imul xlat aad lock cld cmc idivl fucomip jg aas jg aas imulb sti jae cmpsl pop (bad) cld std push lahf (bad) out aam incl cmp in jg aas jecxz jg (bad) mov fucomip pop clc dec incb sbb jecxz push idiv sti mov mov jmp lods lahf cld (bad) out pop stc mov out stc lods pop cli (bad) (bad) fidivr (bad) jmp mov (bad) std jg lahf mov lods iret push (bad) jmp mov (bad) mov mov hlt mov std adc jg das sti xchg (bad) cld (bad) jmp jmp pushl cld dec mov push cld lods mov int3 out icebp pop xchg (bad) pushl scas icebp jnp stos pop cld aaa decb into jmp stc test (bad) out mov incl pop cli pop cld mov (bad) cltd jg mov jg das inc (bad) out jl je incl std scas call (bad) stc das cld xchg jle jg idiv fnstsw outsl std dec xchg in pop sar cmp fcomp decb lahf lcall pop std cmp loopne sti (bad) (bad) popf mov mov mov sti jg fdivrp mov (bad) in cli pop dec pop cmc mov and out stc arpl xchg xchg in pop std (bad) das jg aas cli daa jl imul inc mov fwait call sub cli lahf cli jg pop mov cli sub iret (bad) mov dec or aas ljmp icebp xlat das push std jns jmp hlt mov fsubrl cld lahf mov inc outsl idiv cld hlt pop cli aaa jmp ret xlat lcall pop aas sti cmc jle jg repnz out pop sub cmpsl pop cli xlat (bad) and xlat jmp test (bad) aas iret (bad) jmp lahf incb jmp mov out stc (bad) scas aas stc jecxz cmc aas cmc dec stc pop (bad) idivl popf repz (bad) popf aas hlt pop mov ss clc fcomip aas cld adc (bad) fldt (bad) push (bad) mov inc mov loope out xlat (bad) sbb mov (bad) out fnstcw stc sarl ds fistpll fstpl jmp mov pop jb stos cli iret (bad) in ja hlt aas lock std or ljmp in pop cli jecxz std mov mov repnz jmp cmpl mov pop cmpsb mov (bad) jmp in std out incb lahf sahf std pop in incb dec outsl rep std mov mov mov (bad) (bad) sti std into mov pop aas cli repz rol jg dec cld dec mov sti sbb xlat clc xor jle jg jl imul (bad) out mov sarl jmp pop (bad) hlt outsl cmp in call incl idiv in aas std lahf std fcos (bad) cli paddb rcr clc (bad) cld push inc aas clc (bad) inc inc mov jnp jnp cmc fistpl out jle das sahf (bad) movsl fistpll adc fstpt (bad) addr16 iret clc add jg cli sarl clc xor out mul (bad) (bad) icebp sarl mov sarl loopne clc inc pop iret jg jmp pop clc aaa into inc jg pop clc pop jmp mov mov cmc stc loop clc mov mov jecxz rcrl (bad) cld loope cmp cltd aas xchg in stc xchg jg (bad) (bad) push enter mov fxch pop cld imul in mov push fistpll (bad) dec stc outsl decl pop (bad) cwtl dec lcall lret addr16 std cltd (bad) call lea outsl std insl int mov clc aas decl jg outsl lcall mov mov std pop mov xchg mov fbld in fcomip sub (bad) aas clc ja fstpt lock in scas stc mov jge jmp cli xor jns cmpsl (bad) cli push aas std xchg movsb mov cmpsb sti out in call mov iret lahf std clc clc loop fucomip ja inc jg jg std scas std mov icebp (bad) cld pop jg push cli out psubb fist adc dec lcall cli push inc mov pop lcall call cld mov lahf call daa inc das movsl clc imul int lock pushl push lahf icebp iret (bad) clc aas (bad) iret ds cmp jmp ljmp (bad) scas (bad) mov (bad) in (bad) stos out pushl pop dec (bad) cmc in clc lret enter (bad) mov call repz imulb mov jg and jg mov dec decb in cld push sti mov stos out xlat outsl jge ja fstpl lcall cld adc outsl (bad) icebp mov sahf cld in mull lcall lahf (bad) sub pushl cmp lods stc jecxz sar negb xchg mov jg cmpsl (bad) scas aas clc (bad) addr16 mov std mov stc out daa (bad) in mov test pop mul ja arpl lret pop sti lods iret xlat das lcall decl std cmp lcall jmp jle outsl std lahf (bad) clc cld pop sti ja cmpsl sti jg stos stos pop das (bad) idivb ja repnz push mov out (bad) pop addr16 outsl imul ljmp push mov lcall hlt lahf repnz (bad) mov jmp aas imull lahf mov std out jmp popf xchg out mov xchg aas hlt psubw icebp push scas cld mov xchg icebp scas jmp into pop repnz pop stc mov cmpsl push mov lahf call mov in rcr pop sti push out pushf jmp loope stc inc (bad) mov jg std and stc negb cli cltd (bad) scas incl xlat mov outsl (bad) xor clc sar lds mov clc stos decb hlt icebp repz hlt in pop dec aas xor sub sarb std scas jg jg fwait cld or rorl mov (bad) in hlt mov in stc decb xor repnz jecxz mov mov clc aaa (bad) test cld aas mov push (bad) std fcomip push stos (bad) cmp push mov stc ret iret jle mov pop std movsl jg mov aas stc sub (bad) call repnz (bad) mov (bad) lret incl push std pop jg outsl icebp das sbb ljmp loope clc sti mov (bad) repnz scas std repnz std add mov fistpll idiv xchg (bad) jg das lcall sti out (bad) in dec daa (bad) in pop (bad) xchg mov jmp int outsl decl ds lcall cmc arpl push jmp pop lock std sbb leave fistpll std sub xchg push cld hlt lahf (bad) fnstcw repz idiv stos mov das sti inc (bad) xchg (bad) jmp stc jne std int3 pop stc lods fcomip pop mov (bad) (bad) mov sbb aas (bad) push cld movq pop std or mov out js repnz dec jg pop repnz lea loop std or mov std aas into (bad) test ljmp std inc dec jle mov mov (bad) mov out movsbl pop (bad) mov fnstsw divl (bad) fbld sti cmc adc fistp call leave out divb aas stc lret push pop pushl jle das clc repz cld pop cld sbb ja aas jg push (bad) sub jg aaa (bad) sub inc pop lock or decl pop incl fdivrp int negl jg mov std lock icebp iret std popf (bad) fnstcw push mov movsl (bad) in aas idivl (bad) xchg pushl jmp sarl (bad) popf cmc aas sti scas dec xchg lahf cli das jle jg aas sti push decl out mov (bad) repz lcall lahf cld test std das mov mov xchg (bad) das cli jae mov cld mov std mov sti sbb xchg jmp das clc add mov jg jg dec cmp pop out mov std idiv mov daa (bad) out (bad) stc jecxz clc (bad) cld idiv push mov xor xor imul (bad) ljmp (bad) clc jecxz dec (bad) mov stc lahf jle hlt pop cmp popf incl mov jmp out (bad) and test jg fcmove out xor std push jg ret out clc dec jle decl icebp pop clc scas cld jle icebp mov lret iret fnstsw inc incl jmp loopne in jg das stc addr16 mov mov sti hlt mov jle xchg addr16 push cld xlat stc das jg fucomip lret jg cld in std mov call pop (bad) out cld jmp std or jmp aaa lcall xchg sti outsl std sarl mov mov aas sti leave (bad) cli lahf (bad) cmp idiv loope mov call or icebp (bad) repz (bad) xor ret push out lock pushl std scas (bad) push stc outsl icebp xlat cld and (bad) (bad) fildll (bad) cli xchg mov dec push (bad) in pop cli pop (bad) in (bad) cli fwait jmp cmpsl cld insl iret push aas hlt lahf mov jg cld mov jmp lret jg out mov lock repnz mov sarl fbld pushl aad clc ja mov ljmp clc mov hlt into in das stc pop jle fucomip dec (bad) (bad) popf jmp mov aaa jg mov lcall ja popf jg mov (bad) (bad) ret pop stc dec jle fldcw mov sti mov incl lods mov (bad) (bad) jmp (bad) cmp pop das fdivrp int3 sarl cld mov (bad) std scas cmc jg dec mov fnstcw (bad) std xlat mov mov iret (bad) std sti daa (bad) aam jle mov mov cld nop fcos out aas jl dec cld fnstsw out cld push jg outsl (bad) xchg movsl (bad) fsubrp jg pop cld mov aas je in scas clc sub dec aas in pop sti ds pop cmpsl pop jg out cli (bad) cld (bad) jecxz aas (bad) iret cli dec push jg sti mov cmp (bad) fcomip iret cld adc pop std fisttpll (bad) and iret pop hlt xlat cld jns fidivrl jg push mov jle (bad) (bad) cli jnp jg (bad) jle xlat cli jecxz sarl pop mov pop clc outsl cld pop jg fcomip mov sub aas sti aas std scas inc repz fstpt xchg pop stc out mov ja jns jle (bad) in das cli jge incl dec in (bad) mov inc cld scas mov aad clc aaa cld loope iret ds out cli out call jmp (bad) (bad) in in sti mov cld jg (bad) jg (bad) pop std push iret jg jg imul xchg cmp lret ljmp push out pushl jg jg jg push lret mov imull daa jg xchg addr16 mov mov call out cli idiv int cmc (bad) out hlt imul (bad) jbe aaa out push std mov in std cmpsl into (bad) mov hlt ja in jg loop out clc gs dec (bad) mov repnz (bad) stos addr16 cmc fistpll aaa cmp dec incb out mov imul cli and xchg mov lds stc outsl std (bad) mov (bad) cld fcomip call mov (bad) (bad) fisubrl fnstcw std lods daa jg das std jnp mov std stos pop jbe std fldenv jg (bad) pushl stc xchg mov lock scas (bad) cld ljmp call in fistpll cmp add mov sbb cmc pushl out ljmp std stos jmp xlat stc pop (bad) mov call (bad) (bad) out std lcall aas sti cwtl cld out out cmpsb clc out mov lods aas addr16 (bad) fstp jnp inc insl jmp hlt scas sti sbb xchg aas jmp les stc aaa decl jg hlt out mov scas push mov cmc aaa call in imul cld xchg aas in in pop stos inc jecxz loopne clc mov jle std dec xlat jecxz sti ja cmp ljmp fwait push (bad) loopne jg fwait and dec repnz jle sbb mov fcomip (bad) (bad) daa jg jg aaa call mov inc sahf ljmp jmp scas mov cmc idiv into inc outsl cmp mov push (bad) ds jl stos (bad) cli out pushl lcall sti cld addr16 call mul negl or (bad) xlat jg fcomip loopne (bad) fwait aas (bad) outsl jmp jg ja call repnz decl repz outsl cld (bad) out (bad) fcos ljmp cmc sti push jg push mov jg xlat scas jle aas stc pop (bad) jle cmpsl cmpsl dec (bad) mov clc xchg call (bad) jmp ret fcomip hlt ja repz sbb jg dec fucomip idiv scas inc jg in xlat stc sub js (bad) fcomip xchg jge in mov (bad) jns repz std pop (bad) cld fcomip jmp inc push lahf repz incb xchg (bad) std mov mov (bad) fsub pop mov aas call cmp hlt outsl cli xchg (bad) cli (bad) jmp (bad) jmp (bad) incb int jge negl mov loope sti mov out pushf mov outsl jmp mov mov (bad) int3 pop lock jg pop inc mov paddd clc lret (bad) incb aad je out icebp mov aaa stc adc pop xchg inc pop imul pop test jg loop loop out cld popf mov mov jg aas jmp das cld lea imul in jg int mull pushl xchg jno (bad) fdivrs insl jle jns pop pop fdivrl decb (bad) jmp mov sti (bad) jmp cld xchg (bad) (bad) outsl clc jnp (bad) loopne cli fnstsw mov (bad) mov popf dec (bad) jmp cmpl out insl mov cld cs jle lds in in (bad) cmc out pop jg outsl icebp jmp xchg icebp pop incb (bad) jg not jg out repz jg out repnz fistpll stc clc lret jg icebp mov loop stc stos (bad) ljmp sti jnp jae daa (bad) sub (bad) mov int cld repnz or (bad) aad icebp fidivr jmp mov (bad) fstpl das push daa mov lahf cli aaa pushl int loopne call jl jno push cld arpl jg movzwl loop sti out (bad) push ljmp std pop (bad) mov stc xchg (bad) (bad) icebp sbb (bad) pushl icebp pop (bad) sbb dec sar mov fdivrp cmp mov idivl jg jg jge fistpll loop jmp popf (bad) jmp (bad) lock clc cltd aas jmp aam std movsl inc lahf hlt aaa std int sti mov leave out cld ljmp ja cld in cld cltd xlat (bad) fstps imul pop cmc das std pop das jmp aas cli jg gs jmp cmpsl (bad) sub (bad) sti fsubp neg div lahf fdivr inc jg leave mov idivl addr16 icebp iret decb scas jg out clc xchg (bad) aam cld repnz cli ja mov mov xlat lahf cld iret (bad) call lret xchg outsl repz call aas repz call dec (bad) fstpt incl cmpsl aas repz cld jmp decb fucomip xchg jmp idiv mov cmc das cld aad fdivr lock lods (bad) fdivrl cld mov jecxz clc int scas fucomip pop sti inc jg pop std dec (bad) sbb out aaa call repz mov jg push mov scas std inc (bad) fucom aas mov idivb outsl (bad) cli xlat push (bad) sti sub call jg in (bad) imul jg outsl (bad) stos call icebp (bad) (bad) jge repnz push mov lahf std or scas mov (bad) in pop jmp cli inc mov jg lahf std inc (bad) mov stc std decl jg decb idiv sbb dec (bad) mov dec (bad) ljmp clc outsl decl pop xchg aas cli jne cltd pop push rol incb mov in div fdivrp inc ds lods call jnp lret mov xchg out std in dec mov cmc cmp in lahf cld idiv sbb inc cld sti mov (bad) repnz das (bad) fsubrp cmc daa pop cmpsl mov idivb (bad) out aad imull clc sti jle (bad) dec (bad) mov lahf dec (bad) mov (bad) std ret ja out call jg ja mov shr mov pop cmc inc jle pop inc mov jmp jg aas mov mov fucomip shr dec pop cld fnstsw in sti inc decl fwait pushl lock mov cld iret jg jg leave outsl cmc addr16 imulb mov ljmp xor cld inc mov sbb stc jecxz cwtl repnz (bad) cmp not cli sub loopne (bad) (bad) fdivrp clc daa incl (bad) jmp hlt daa (bad) lcall mov fnstcw std sbb push jmp outsl cld das cld gs outsl clc xlat fdivr jge (bad) jg outsl std jge xchg jg fistpll (bad) cmpsl (bad) loopne out jl pop sbb iret stos aas (bad) aas std (bad) incb mov mov int3 das (bad) jne jg out cld pop jle das cli xor mov sub (bad) in mov pop ljmp into outsl hlt das fcompl sti ja sti scas std in repz pop negb fstpt fistpll das imul std in (bad) (bad) stc mov aas jnp lods jmp in clc std lods cmp (bad) lahf cli in repnz fdivrp clc (bad) cli cmc (bad) (bad) pop not call jmp xchg cld mov cmc stc (bad) std mov inc jg jmp adc sarl stc sti dec jg fisubr (bad) in pushl movzbl shr les cld dec leave lahf stc std pop cld pop mov mov decl cli jg jne ret lahf (bad) fisubr in std idiv outsb (bad) in aas hlt (bad) cld cmc paddd jmp jg in leave fdivrp cmp jp lcall jg fistpll das sti out int jmp clc pop jg pop jecxz (bad) pop (bad) cld (bad) xchg (bad) movsl push das cmpsl stc sti mov dec (bad) daa (bad) sti pop daa stc das jg (bad) cli in jg jg out std push (bad) xchg jg mov in cmc paddw jg stc outsl jg dec std xor clc push call fidivr (bad) mov pop (bad) mov daa (bad) jae int out mov cli sti (bad) xchg (bad) push inc mov ret (bad) call (bad) xchg mov (bad) cwtl aas push lahf mov sti cmp cltd (bad) std pop mov mov (bad) mov cld jae (bad) cmpsl (bad) (bad) loop cld pop (bad) fcmovu (bad) out cltd nop std cld push sahf std xchg jg pop (bad) out fdivrp jnp add fistpll cmc out std xchg shrb jnp aas incl (bad) scas mov or leave pop clc cmpsl std adc fwait std jecxz,pt lock cld xor iret sub cmc lahf sar lds std outsl adc icebp ljmp cld jmp std aas fwait cld (bad) (bad) in lahf cld cmc jg mov jg cmp out lahf stc jae in mov jnp std nop (bad) scas jle fucomip pop pushl (bad) jg (bad) std xor aas stc or addr16 push mov call (bad) imul repnz cld xchg call lahf ja xchg aas decb mov pop lcall mov call jg das clc scas (bad) loop idivb lret jg cld pop (bad) xchg jg mov or pop jg scas sti stc cmpsl jg mov (bad) xchg pop dec (bad) out popf jmp scas sti lods jle stc cmpsl cld fidivrl dec dec (bad) test in stc scas repz mov inc ljmp ja cli lret outsl incb push (bad) in repz insb jg mov clc cmc cmp pop sti in lahf stos cmpsl xchg mov iret (bad) mov jae mov stc fwait cmpsl inc scas dec stc lret pop div xlat mov lds and call cld mov aad cli std repnz pop jg fucomip pop clc push dec aas repnz cltd cld dec pop std jmp aaa (bad) fstpt fistp jne clc fisubr iret ljmp (bad) cmp repnz sti sbb sbb clc stos (bad) mov pop cld xor mov (bad) in leave jg out incb jg lahf xor out stc add jle mov stc (bad) das dec mov aad mov mov (bad) fidivrl paddb iret jg aas idivb inc xchg mov jmp in test outsl stc inc jle idiv aas jle (bad) clc stc (bad) (bad) cmp jle out cli push (bad) xchg popf mov out push mov ficomp cmpsl jmp cmc pushl (bad) call fnstcw stos jmp jg pop pushf scas push ds or out iret std addr16 xchg jg jle aaa mov (bad) push jle fbstp sti cld fdivrp rcl lahf stc fldt (bad) std or jmp std (bad) jg (bad) (bad) cli out clc (bad) dec lret and negl xor test in out imul cmpsb cmc lret mov dec mov clc sti inc aas icebp aas sti insl jle (bad) stc pop (bad) aaa imul ja lahf jg fild inc jg jecxz sti aad (bad) pop clc arpl xchg das push jg outsl sti lds pop cld gs jmp pop divl cld mov jmp clc jmp jbe pop xchg jg ret jg iret sti movsl cmpsl (bad) (bad) aas lock mov std cs sar clc (bad) (bad) (bad) into fcomip iret std cmp fcomip jmp in (bad) sub dec loop jg iret dec jg icebp (bad) bnd aaa stc out jle imulb cmc sarl lock pop (bad) arpl pushl pop lock lods jg fldcw std pop std std mov std sbb jg outsl push (bad) mov stc (bad) (bad) mov cli paddw (bad) sti lds testb aas repz cld fstpl out fucom (bad) hlt scas clc jge fcompl jmp ljmp leave jg outsl jmp cli (bad) clc jmp dec (bad) fstpt std mov lcall das mov idiv mov repnz cld gs cs aas jmp sti lahf incb cmp out icebp lahf neg cld cli imul (bad) fistpl pop (bad) xchg push lahf stc xchg cmp lods jl adc inc mov notl and push cld push pushl daa jg pop hlt scas std mov (bad) cmp jp sub fildll mov (bad) ficompl cli xchg pop push fcomip jg mov xlat outsl jg fnstcw out stc test mov movsl sti mov sub aas (bad) mov loop pop jg mov das incl test sub enter stc mov pop pop jg mov mov loopne clc lds clc or hlt mov sub pop call idiv iret jg outsl std outsl (bad) fyl2x lahf sti jnp (bad) in leave fnstsw pop jg push gs inc into (bad) fistl decb lds (bad) scas incl rcrb (bad) icebp jg jns sti jl pop stc ret jle iret jmp jg out cs jg scas std addr16 lods cld ljmp (bad) ljmp in pop imul lcall out pop repz sti (bad) call (bad) dec aad bnd (bad) fisubrl bnd inc (bad) aaa in ljmp cld in idiv arpl (bad) jg in pop repnz cmp mov cmc mov stos dec mov fcomip das jp (bad) push dec sahf in (bad) movsl cmp std pop (bad) (bad) jg pop icebp addr16 lahf leave jg out xor repnz mov pop (bad) repnz pop cli fnstsw mov cld xchg mov inc mov out stc dec cld xchg imull mov mov (bad) call out (bad) out std mov fisubr inc jmp aas clc repz (bad) dec call mov push pop jle cli xchg cmpl roll xchg mov inc jg clc iret std sti dec (bad) cld add pushf jg in (bad) (bad) aad in cld xchg in cld stos (bad) sti fnop scas sti and cld out aas dec jle (bad) sti daa inc mov push mov cld icebp jg pop repz mov les cld (bad) sar std mov jg cld rcrl adc stc sti test mov cld xchg push scas cmc dec js,pt lahf addr16 std dec aas imul xchg mov out jmp aas stc pop std xchg jg outsl sti sbb mov inc pop repz cld aas pop std loopne pop (bad) aam (bad) iret inc mov push (bad) out lahf bnd (bad) stc mov cli test cmp iret jnp leave out cmc xchg inc jg xchg jecxz aas hlt psubd push (bad) out out pop hlt sti std idivb pop ss push jmp in (bad) paddb hlt das std in out lahf call mov sti pop dec jnp out cmc stos jg out outsl lock scas lcall ljmp cli daa push (bad) jmp pop inc aas call aas negb or das lahf jge das sar fstpl sti mov (bad) lock jecxz sti xor scas cs jecxz imul (bad) lcall decb cld push (bad) imul jmp jbe ljmp pop jg push arpl add jg ja pop sahf (bad) das mov (bad) lret inc jg repnz aas fdivr mov sbbb das cli ja leave (bad) xchg (bad) cmc call sarl lret ja mov jecxz cli pop jg mov mov stc stc int (bad) cmpsl mov jnp jmp mov jle shrl cli arpl (bad) lret pop sti lods (bad) mov push (bad) incb (bad) out mov lret (bad) clc scas std scas dec jg aam stc ljmp loope dec pop stc mov das cld mov sub xchg (bad) clc idiv fldt ret jle lahf icebp pop (bad) xor lahf repz or addr16 gs scas repz (bad) jecxz cli fistpll push mov movq jne in hlt mov aas stc sti jg jg mov lret push pop jecxz clc insl jg mov incl paddd aas in ja mov cld iret cli ret lcall std sti scas stc aaa jle jg aaa cli repnz outsl push jl xchg jno pop jg,pn lret dec dec jle (bad) scas cli popf jle fcomip hlt iret (bad) aaa jg mov decb neg pop lock icebp pop sbb outsl decl jg xchg push std or mov mov out and std das clc out int cld lahf std and outsl (bad) pop pop mov mov icebp int mov stc out hlt cmpsl sahf (bad) (bad) push daa mov (bad) fidivr pop std ret outsl sti jecxz int (bad) (bad) ljmp scas jmp jg daa inc jg fwait int3 decb fstpt pop std lahf cld shr std pop (bad) lock push cld mov in ljmp pop incb mov addr16 rcrl (bad) es call sahf std xlat out enter pop cld dec mov mov (bad) mov mov mov push imul jg mov mov cli loopne cld lods jg shr mov iret aas cmp pop jg outsl inc icebp (bad) repnz (bad) mov scas clc (bad) jg (bad) mov (bad) jle cli lahf inc cld (bad) fistl aad aas cli pop cld or pop inc (bad) jmp icebp fwait ljmp mov into pop (bad) (bad) ret iret (bad) cmpsl (bad) stc pop incl (bad) mov cmp ss jmp imul ljmp and addr16 call fucomi mov aas loop (bad) mov pop idivl cmc fwait lret pop repnz (bad) icebp (bad) jmp loop pop icebp out sahf xor hlt das (bad) out dec (bad) mov jecxz xlat jecxz xor or mov jecxz cld xchg stos aas sti outsl jg imul pand cmc (bad) sbb fcompp scas cmc jnp decb in cld fwait cld mov in repz jmp (bad) cmp out scas (bad) mov in mull (bad) bnd cltd aas cmc jg xor sti ja jecxz icebp outsl testb std inc mov ljmp repnz cld loop jge (bad) mov xchg out xchg pushl call (bad) call dec incb jmp ljmp (bad) loopne (bad) std xchg jmpw incl pop aas mov lahf std scas mov (bad) mov push clc jmp es idiv xchg call jnp jmp std pop cld ret roll lret (bad) jmp std fdivp pop ljmp out cld idiv cmc jg cmc pop notl out icebp fbstp mov out cld push mov inc jg xlat decl (bad) (bad) stos pop pop out mov out out (bad) dec cld roll inc out jmp (bad) stc outsl (bad) push (bad) mov mov xchg jmp in rcrl dec jmp out decb (bad) sar in pop dec (bad) repz pop (bad) repz out dec hlt sti test fcmovbe pop cld add cld pop negb (bad) sti daa mov outsl lcall scas ljmp jg jg out cld outsb push jg cld (bad) cld jmp cld insl (bad) clc mov cli (bad) jne hlt ljmp es jle ljmp mov (bad) mov lret das jg (bad) outsl jg pop (bad) out std sub fiaddl lahf sub jg lahf cli xchg mov pop sahf (bad) cmp popf jle push out stc imul aas loopne cld outsl jg mov mov mov lea stos fcomip das std mov mov cld adc (bad) ljmp (bad) cld test stc addr16 incl loopne jnp outsl (bad) and mov int3 aad mov out lret popf mov jle aas ja iret std or (bad) stc mov mov jg pop jmp jmp aas ljmp clc lods jg mov (bad) mov mov mov (bad) cmc jg inc inc pop jo aaa cld stc int3 push cltd (bad) jg (bad) pushl outsl (bad) out jmp (bad) clc mov pop cmc mov (bad) out aad mov sti dec aas clc lahf std mov pop push (bad) jmp cld pop cld push in callw out cld loopne (bad) pop repnz repnz (bad) cmc (bad) cmc fcomip aas (bad) fwait (bad) call clc push jle mov or icebp lahf js pop cld jmp (bad) das clc lods jle out lock dec pop cmc sbb ljmp jmp enter jg pushl jg out paddd fstpl fistp (bad) lcall cmpl push aas (bad) lahf cld adc outsl (bad) out jg loop cld ljmp repnz out jle incl xchg cld pop dec (bad) mov ljmp les dec mov decb in mov (bad) in in clc std mov sub scas jg lods jg aas decb lahf (bad) jae paddd dec pop mov jg pop std pop jg repz xchg jmp fstpt scas icebp pop mov cmpsl pop std cmp fbstp sar (bad) (bad) decb jle sar lock xlat (bad) in jmp aas (bad) stos jg aas loopne inc movq mov negl repz paddb (bad) fpatan mov push scas cmc jg mov cmc outsl icebp fnstcw ljmp cli mov loope jbe lock dec (bad) cmp cld pop std ljmp (bad) (bad) cmp inc out (bad) stos aas hlt loopne std aas jle scas jle fucomip pop mov jg fnstsw shr cmp jmp push mov mov pop dec divps add mov push jg std mov pop (bad) fstl dec (bad) out xchg jg lcall push jmp pop (bad) aad cli dec dec cld xlat clc sti das (bad) out pop jecxz call jg fwait (bad) cmp das jmp (bad) loopne out jnp leave (bad) sti cmp addr16 out (bad) das std lea pop (bad) fistp dec (bad) sti mov das cld repz incb (bad) mov in push cld fistp lahf icebp iret ljmp into fnop xlat (bad) cmp aad mov (bad) cli lahf stc iret jg aas (bad) cmpsl (bad) lock idiv scas dec stos (bad) cld jg lahf jg (bad) (bad) std aaa mov iret call (bad) jmp leave jmp sti out stc (bad) (bad) cmc ja jg scas stc jnp leave inc mov (bad) or out fdivr popf mov mov (bad) cli aas icebp jg push pop jg push push std push xlat jg mov mov mov cld shr cli (bad) cmp cmc ja cmp mov push decb mov jecxz repnz pop (bad) mov jmp lock (bad) lods cs test pop jmp clc repz in clc mov xchg std pop jb jg stc cmpsl daa jg push sti std add iret std leave call mov jg repnz (bad) mov scas cld sar ret out lcall cld (bad) (bad) fnstsw int sarb cmc outsl jg pop sti jnp aas incl mov cld sbb add (bad) out cli das sti icebp lahf clc or test cmc jmp clc xchg jmp idiv fistpll aas repnz (bad) popa fildll cmc inc ljmp clc out sti aas mov xchg lea shr lock mov inc jmp ret and sarl cli fwait std fstpt pop std pop in data16 std std pop jg pop hlt out dec jg mov jg iret stc sub incb (bad) jmp (bad) out xor (bad) sub ja icebp fnstsw (bad) std jmp (bad) shrl cmp dec push cld jmp sbb xor (bad) stc xchg jg pop jmp cmpsl mov lahf (bad) repnz push daa jmp in clc ljmp imull iret int3 mov in (bad) cmp mov mov stos out cld imul negl (bad) jg aas cli pop cli xor mov mov jmp nop cld cld fnstcw jg decl aas cmc cli aas mov jg mov call pop cld cld scas daa (bad) stc fwait or xchg jle (bad) clc ja xchg std pop decl jg cli xlat pop cld aad call subps ret out repnz call xchg xchg cmpsl shll lahf (bad) in push call cmc cmpsl scas pop std xlat push outsl notb jmp stc dec (bad) (bad) xchg jg cli pop cld and das outsb jg pop (bad) (bad) (bad) incb sbb lahf mull std cmc pop jg cli sti cld or inc call push aad std jmp xlat jg repz outsl jmp pop hlt sub repz ja ljmp out sti paddd (bad) scas dec repz cmp dec jmp ds jg lret jg (bad) jg xchg cmpsl sti aas (bad) mov fistp ficoml cmp pop (bad) xor enter cld cmpsb (bad) (bad) jg dec cld xor pop cmc aaa pop std in sarl in ja and std mov xor sbb out jg repnz jle loop pop clc sbb xchg cmp jg aaa (bad) mov movsl out call dec in std leave das (bad) (bad) jg repnz mov (bad) cld mov push mov lcall loop jmp jg lahf repnz jg decl fnstsw jle aas and stc xchg call xlat pop cli stos call (bad) daa cmp inc aas icebp jnp mov jecxz (bad) cli daa jmp lahf cld sub pop cld push sti jg scas std daa lcall sar fnop mov push jg out lock (bad) jg jg psubd cmp (bad) pop div pop sti fistpll inc (bad) icebp aas out iret jns popf fucomip (bad) cld and loop (bad) sti jle cli cmpsl (bad) fidivr divl cmc scas cmc imul inc scas cmc sar in mov jns in jg jge (bad) xchg pop jl (bad) std cmp jg out (bad) xchg aas dec (bad) fadds lds out repz lret inc das clc pop jle pop std out lcall (bad) cld (bad) call mov dec js lods jmp mov rep aas fwait std les out xchg ret aas std sahf call lahf cli push aas stc daa lcall hlt mov aas xor mov lahf icebp out daa leave out jle pop std mov loope pushl aaa (bad) jle cmc aad clc idiv ret aaa daa std cmc (bad) mov mov scas jmp cld xor in loopne (bad) insl jg fcomip aaa call jmp popf jg idiv sarb jle outsl cli (bad) (bad) rorl lahf sti daa xlat addr16 mov (bad) sbb jge pop jle inc cld addr16 arpl jg dec cmp out (bad) cmc repz mov fstps out push arpl pop (bad) incb pop (bad) dec jmp adc (bad) cmp or notl (bad) psubd scas mov mov fistp dec jg das (bad) sbb fistpll (bad) (bad) scas lahf cld clc pop icebp aad sti inc jle xchg mov repz icebp mov mov lahf pushl cli push dec (bad) jmp mov in cld xchg mov jg scas sti jnp mov std ljmp jg das (bad) fisttpll mov xchg jg lahf sti dec (bad) scas mov cld push jg aas sti imul jg mov out in pop clc in std stos (bad) out (bad) sti hlt aaa cld pop stos cmc out clc pop incl outsl lock pop (bad) fnstsw scas sti jnp fdivrs (bad) into (bad) xchg call lahf decb clc pop sti (bad) (bad) mov jg (bad) scas std cmpsl inc scas (bad) (bad) lcall inc jg (bad) mov cmc scas clc fisttp ret lahf cwtl scas jg jg iret cli lret aas stc sub std or fbld ljmp pop cld fistp jecxz in loop (bad) adc pop (bad) out jg das inc mov sti jg aas sti aas jmp jg mov (bad) stc jg pushf (bad) (bad) mov std or sbb cld xchg pop bnd jmp jg (bad) jmp pop push out jbe jnp repz cld insl repz std jmp (bad) pushl adc push mov popa pop std mov (bad) fnstcw das sti (bad) fnstsw stc pop sti iret (bad) fcmovnu bnd push rcr lock pushf lods jg fcomip dec sti lret aas stc sarl jg lock (bad) jmp pop (bad) call pop jle jg lock std sarl decb lock scas (bad) sbb (bad) cld arpl jg aas sti (bad) (bad) mov sti mov (bad) stc jg imul mov cmc jmp pop decl xchg jg xchg (bad) cli popa (bad) not sti fistpll cmpsl repnz out aas repz jmp pop cld cmpl std cmp out iret mov incb out cli rcrl dec (bad) movsl jg (bad) out (bad) mov (bad) lret addr16 jg jmp jmp icebp scas pushl loope sti xlat pxor fnstsw fidivr dec (bad) notb clc dec imul (bad) fidivrl jg aas cld lahf std aad rcr (bad) out jle aas cli iret jns dec jg hlt aaa cld out lods jg pop sti dec (bad) repnz mov (bad) out aas in std mov (bad) faddp xchg cld in mov dec (bad) icebp aas neg (bad) push jle lahf sti lock clc daa jl idiv iret inc jg aas sti jnp or mov (bad) push lcall clc ucomiss mov cld in cld push mov aas incl mov jl jnp out xchg mov aas std pop (bad) fsubrs stc (bad) (bad) fdivrs jg out cmc cmp out jg out cli (bad) jg idiv rcrl pop pushl sti (bad) stc jg xlat jg pop (bad) ljmp push (bad) cld jge cld mov (bad) (bad) cli loope sti idiv mov jge jnp (bad) jle idivb fcompl lahf stc (bad) (bad) fdivrs (bad) mov jmp jmp loop sti ljmp (bad) in out repnz adc (bad) fidivr (bad) ds jg pop std cmp pop cmpsl mov jg (bad) iret sti lret aas stc mov call (bad) mov popf inc idivl (bad) div jmp cli das (bad) pop dec (bad) icebp aas (bad) iret (bad) push jg lahf sti mov ficompl lcall lcall (bad) addr16 dec std (bad) fst push aas ljmp loop mov aad out jp sbb lds pop cli xchg jg neg mov mov mov ja int decb jecxz sub fbld stc mov out and decl loop enter iret decl repz adc nop push jnp into (bad) call (bad) (bad) jg icebp aas in cli mov (bad) (bad) out jg scas cli and aas cld lahf std xor dec loop jp (bad) cld mov aad in scas movsb stc incl (bad) mov std in cld mov cld xor cmpsb pop div cli ljmp (bad) fcos rcrb aad inc (bad) fdivrs sub fdivrl aaa sti (bad) fidivrl hlt psubd out std jnp cld loope in jg pop std in (bad) out fnop das std out in pop (bad) jnp (bad) mov cmpsl mov (bad) sbb cld xchg (bad) xlat call (bad) jl decl cmpsl idiv inc jp aaa movsl idivl jp jnp (bad) jge (bad) jg stc ret (bad) fldcw mov xchg jmp cli sbb mov cli ja xor xchg iret jg jp outsl cmpsb stc sti pop out jg clc mov in jg (bad) jmp cld (bad) (bad) fdivrs lock test pop dec std lahf adc mov pushl (bad) (bad) cld in ja cmc jmp sbb mov mov idiv xlat jg scas icebp daa cld loope in pop (bad) or idivb neg incl xlat out call fistpll stos jg std jno lret sbb iret lahf dec cli out mov and mov in out inc cli jmp std jge fidivrl loopne cli (bad) fdivrl in aas lret (bad) fcmovb scas cmpsl jg jg lahf (bad) lods (bad) in out dec out iret jle mov jg xchg pop std pop std clc fstp lock dec cld mov leave aas (bad) leave jg scas (bad) pop xchg std mov fidivr sti xchg clc fisttpl lret (bad) jmp call mov (bad) mov sti lock std cmp std rcr sti pop (bad) cmpsl call aas sti cmp jg test (bad) icebp ljmp cli ja adc std rcll mov (bad) mov cli out cli idivb pop cld cmpsl ljmp xor iret (bad) aas cli adc icebp cli mov imull jg push repz cld mov stc mov cld push pushl jle aaa int3 call fcomip ja jae (bad) (bad) sti pop std fisttpl (bad) mov jmp cld gs mov mov mov fistpll stc xchg (bad) pop jg mov jae cmpl jg aad aas lock std mov lahf std int jg (bad) ds call cld test aas (bad) loopne cld jge (bad) pop fwait cmc out aas std scas decb lahf dec or (bad) pop outsl pop adc aas repz decb std outsl adc mov cmp loope cli idivl mov aas stc (bad) cld sti (bad) (bad) daa jg (bad) clc in add (bad) (bad) sbb jae out push xchg inc fistp aas imul cli mov fisubrl std pop mov sub cli dec stc sub stc aas loope (bad) jg fcomip mov nop mov sar stc outsl lcall pop sti inc decb (bad) repz out (bad) stc lds ljmp iret std (bad) mov xchg cld out mov inc aas sti std aas jmp mov pop mov jg jg ja mov jg sti (bad) popa jg fcomip jg jg (bad) stc fwait mov incb fdivr (bad) (bad) icebp outsl stc sti pop mov movsb aas in neg jmp (bad) mov clc add (bad) out fdivrp daa jmp call mov repz (bad) sub test jle jg outsl ljmp lahf jp stos decl cld movsl xor aas call pop cmpsl stc sti cwtl call push aas hlt xlat js divl lret mov push jnp clc lahf sti sbb mov scas jg mov pushl stc inc scas std inc pushl (bad) stos jmp lcall mov dec jge pop sar std cmp aas loopne cli arpl dec jge mov mov std xchg (bad) fisubrl incb call mov out std movsl jg scas (bad) (bad) (bad) and decl mov aas cld mov pop repz (bad) mov inc hlt lahf cld ljmp out inc repz pushf cld push lahf cld jnp (bad) scas cmp pop jg das sti ljmp outsl stc lahf adc cld or out dec pushl xchg loop pop mov push lahf std insl lcall push jg icebp fucomip (bad) sbb jg outsl inc out ljmp lahf cld (bad) ljmp cmc idiv loope hlt mov sti jmp cld inc jg scas mov lahf (bad) mov xor jg jg mov icebp iret idivl aas pushf cli (bad) std jle scas cli icebp fisttp (bad) pushl jg fdivrp stos jg lret out std cmp aas arpl (bad) in in aas jae das mov fist jg int jge (bad) fcomi (bad) pop std cmpsl scas jle (bad) (bad) jecxz mov lahf dec hlt sti outsl (bad) aad in inc jecxz fstpt out idivl fidivr (bad) sub (bad) fnstsw loop std imul inc mov std clc ss fild stc out stc aas cltd jg int jmp sti gs mov jle repz (bad) cmpsl test pop stc (bad) (bad) sbb (bad) call mov jg pop inc cld sti pop aaa mov imul (bad) in (bad) cld jnp sbb cmp jno dec daa push mov ret jnp jns sub fidivr outsl jg fcomip jg lds sar jmp (bad) lahf mov loop out neg lock aad jle mov jle out std jecxz call stc jmp std imul clc imul not cld std cs cmc out sahf (bad) fidivrl jg pop adc pushl mov clc pop repnz sar jmp aas je in add incb aas jg lahf jnp ficomp mov lods jg lcall xor adc jmp daa call mov ds mov std out std repz daa aam mov hlt outsl data16 icebp sbb mov adc (bad) dec hlt sti inc (bad) (bad) jle mov (bad) aam inc bnd sbb sbb scas dec call call pop mov cld (bad) mov jle (bad) pop lcall jg daa repz outsl stc aas decb ds (bad) das incl dec (bad) inc cld movsl jmp divl cmpl pop (bad) xor aas inc (bad) std mov imul outsl daa (bad) jnp std or aas hlt aaa mov icebp cld das std (bad) (bad) fdivrs clc pushl std mov jp out std mov cli jecxz cld ja stos pop sti lahf clc outsl lcall ret cld icebp sti xor (bad) ja repz (bad) mov cmc scas cmp decl jle outsl (bad) mov sbb pop jg jae out mov sub out decl push mov pushl pop jg jg lahf cld test mov mov dec pop imulb rcrl jnp xchg fdivr outsl std mul mov gs jg icebp ljmp mov (bad) out dec std ja fistpl (bad) outsl (bad) cli aas jne stos dec pop jmp aas jmp leave pop (bad) leave lahf dec clc scas cmpsl push xchg mov mov mov repnz cld lds sarb sahf call mov mov jmp call pop pop incb jmp mov leave mov scas incb stc stc std mov push mov (bad) in jg lahf jno pop std jae or (bad) fild lcall aaa jg mov jg jg notl mov call popa (bad) (bad) (bad) std loope icebp (bad) aas stc lret jle out std adc (bad) jge mov push (bad) call scas and aas xchg in dec std sti jle push incl sbb leave mov inc push call jmp out cld or mov scas mov cmc in outsl stc or in cld pop call jg pop sti jmp iret jg lahf sti xlat cld lcall out out out cmc or loope idivb (bad) cmp out idivl xchg loop (bad) vmwrite adc jle fcomip aas sti and (bad) mov pop jg lahf (bad) out repnz notl lcall cmp inc (bad) pop enter jg mov (bad) paddd scas pop ljmp jae mov sub imul stc aaa (bad) jnp mov addr16 jecxz stc fistpll mov fstpl adc pop repz cld shrl jg leave pop cmp out xlat (bad) mov mov mov cli das std loop pop cld cmp fcomip xlat std fwait (bad) fcompl lret mov not pushf std out out lahf inc out jg cli lahf (bad) fstp ja das (bad) outsl lcall lahf das dec jle insb sarb int cli lahf push pop nop cld cld jmp jns cmp ja fidivr icebp pop std (bad) lcall (bad) lcall repz idiv pop idiv add fbld pop pop out cld lahf lock ljmp repz (bad) scas jae (bad) in incb (bad) push cmpsl cld lret xchg outsl ds dec aas std out out jecxz jns hlt dec inc aas std xchg (bad) lods jg aas je mov sti sub jle cmc sub and mov (bad) cli jg paddb cmc repz lret lahf cli daa out jmp iret (bad) call stc mov stos fucomip mov es (bad) mov mov (bad) icebp (bad) cld adc iret (bad) jle inc std mov repz cld hlt lahf cld cltd mov out sti pop inc fucomip aaa cld (bad) in jg cli pop cld push (bad) fisttpll out jg mov sbb jmp (bad) std lahf divb pop cmc (bad) call jg leave mov scas jle pop repnz inc (bad) fstpt (bad) mov cli pop mov fnstcw (bad) scas fnop xlat cld paddd mov mov mov mov push call mov mov jmp stc gs sar idivl call std aas jmp cld (bad) pop idiv lahf mov xlat dec aas repz std gs call lcall pop (bad) jmp stc push leave jg (bad) cmp mov call pop cli fwait xchg cld cld pop movsb aas (bad) arpl pop mov sti mov pop and test lret pop negb (bad) adc fistpll xchg in out (bad) out rcr cmc idiv jae (bad) call out outsl xchg std cli rcrl push (bad) pop jg ja repz (bad) jecxz cld xor (bad) mov xchg pop cld fidivrl decl dec push inc jg out sti das jl iret stc jmp repnz sub arpl aas cli inc std std lahf dec aas das sti addr16 mov fucomip idiv (bad) in jmp dec std mov out in mov cmp ljmp sar in scas (bad) mov pop mov (bad) push dec pushl jg fistpll out (bad) stc jg xlat das jmp mov icebp fnop hlt in pop stc dec ljmp int3 jmp xlat cld imul push imul repnz (bad) scas fnop xlat sti daa (bad) mov sti aaa std loope ret fnstcw in out pushl jle lahf stc cmpl loop clc pop fistpll sub (bad) clc jl das (bad) out mov das inc pop out (bad) call out mov out cld mov lahf (bad) pop cld xchg mov fdivrp std jg icebp repz stos rcr in pushf (bad) inc (bad) sarl dec mov or hlt paddb jle mov pop cmp and mov sti das std out ret fnstsw lahf sahf cld fcmovu (bad) and imull dec (bad) fstpt loopne decl inc divb std cmc jg lds aas (bad) cmp jg ja xchg sti xchg (bad) bnd cli (bad) movsb jg outsl imull movsb aas scas mov lea call sbb (bad) pop sti stos (bad) fnstcw clc outsl jge stos (bad) in mov lock call mov mov paddw pop (bad) in dec jle call (bad) mov std pop jg aas sti jnp (bad) fldlg2 paddw gs das (bad) fnstsw mov (bad) arpl loop jle mov sti push call fcmovnu out and xchg lock jl (bad) loop (bad) iret (bad) push or mov xlat movsb das (bad) ljmp ljmp ja pop mov repnz mov clc pop dec jmp jg scas cltd in in outsl pop (bad) stc dec (bad) mov icebp xchg dec jmp lcall mov nop in (bad) (bad) decb aas stc lret (bad) xor xchg jg std xlat addb in pop jmp cli jmp xchg (bad) pushf mov (bad) std les cmp pop std xor jg mov xlat sti iret (bad) scas jg (bad) clc jne xchg out and in cli lock mov (bad) cld aad loop (bad) dec jg (bad) dec inc scas stc push cld arpl sar iret cs adc fistpll aas std inc lcall mov (bad) jg outsl std jg icebp pop dec (bad) loopne decl in pop hlt cmpsl pop pop inc cmpsl mov jmp std aad jmp (bad) imulb pop cld pop lcall clc pop pop cld sub lahf sti scas dec repnz jle mov jecxz in scas cli push jle mov in in pop mov out nop pop divl cld mov loop out clc aas jmp (bad) stc daa jg std cmpsl pop (bad) (bad) call jp mov mov loop std xlat jg pop std imul jg negb push xor imul (bad) clc aas sti mov (bad) jne (bad) mov mov in clc xor imul cld insb (bad) pop jge paddw jg loope das jg (bad) (bad) jg sbb mov (bad) out icebp das std loop inc aas call xchg mov push psubb iret aas lock sti jnp ljmp ja subl cmc out negb mov mov aam aas cli in (bad) mov (bad) jnp adc rorl cld clc movl fcomip mov aas sbb hlt fcomip sub aas pop idiv mov addr16 jg mov jle,pn out cld sub lahf (bad) cli aas cmp jnp pop decb loopne sti xchg (bad) mov (bad) aas (bad) mov mov jmp jecxz std out stos aas cwtl cld mov repz (bad) in mov mov cmp aaa (bad) cmp das (bad) in incb in mov fisubr (bad) jg (bad) incb jle mull sti mull lds cld (bad) (bad) jns (bad) out mov inc jg out std in mov lahf lcall jne lahf cld mov icebp jg xlat (bad) fnstcw jg aas cmc daa push (bad) jmp (bad) fnstsw mov std scas (bad) out clc (bad) decb jg jmp jg imul adc inc inc pop ljmp (bad) stc dec (bad) sarb xchg pop (bad) popf (bad) fsubrp lcall pop cld cs faddl mov jmp out jbe repnz jg pop lcall mov (bad) sub xchg pop ljmp jg clc stc das cmp lahf (bad) (bad) pop cld inc (bad) in stos jg in mov loope inc into out fdivr inc call daa ja sarb jmp stc jnp lret jg ljmp std cmc jle jg pop das jmp sti (bad) dec jg pop repz incl jg jg jmp data16 pop sti mov std jg stc pop hlt fistpll jg stc stos mov aaa cld (bad) inc popf fcomip cmpsl out incb cmp pop jmp iret fucomip loop pop jge das std out (bad) mov lahf stc xchg jle (bad) std neg jmp (bad) test inc hlt daa clc pushl sti hlt pand jge xchg jg aaa sbb pop and cld imul pop mov out call (bad) mov icebp cmp xchg aas hlt jg arpl out mov (bad) icebp cmp sarl adc jg pop (bad) ljmp icebp push outsl or mov lret (bad) pushf stc aas repnz int dec out lcall iret jle lock fdivrp sbb std pop inc out jmp dec (bad) mov ljmp stc popf (bad) cli jg std ficomp xchg (bad) les mov (bad) lahf lods (bad) incl std mov fucomip sub (bad) jg std call clc addr16 ss mov repz cmp out lahf imulb (bad) mov jg (bad) cmp mov arpl imull ficomp jae (bad) (bad) loop sti lret (bad) fistpl scas clc ljmp sti sbb inc idivl mov aas stc and gs pop jecxz cli push (bad) mov imul gs std xor sti cld jg cld pop jmp fcmovnu loop lcall mov test mov (bad) stc in fsubp idiv ja fstpl out std out cld lret outsl cmp (bad) outsl mov jle jg xor call (bad) call decl lea cli (bad) cld or sti (bad) stc jecxz in (bad) cli dec decl lahf jmp ljmp jle jmp jg ja int3 fistp movsl stc sbb aas jmp iret (bad) aaa jmp ret aas stc (bad) cmp mov std pop (bad) or mov iret scas std daa jmp mov arpl out fcomip jg jae (bad) push inc jg out repz pushl decl ja loop clc lret test (bad) cli aas lock (bad) (bad) das (bad) sti (bad) ljmp (bad) hlt mov xchg jg das dec icebp (bad) mov clc std lahf clc mov (bad) (bad) pop (bad) jecxz loope (bad) fistpll fwait jle stos mov xlat std or jg (bad) aas cld iret aas stc mov push ret imull xlat lcall pop std ret fninit jmp loopne cli insl incl xlat (bad) mov jg (bad) clc sbb int notb aas insb jle jg out (bad) and (bad) clc fistpll pop inc ljmp dec addr16 rcr out decb std out pop stc mov jge pop icebp fcmovne out std icebp jmp loope (bad) mov xlat fstps stc xchg push (bad) stc aas call cmp (bad) lahf cld mov (bad) hlt (bad) scas dec (bad) in outsl std lea into scas repz push (bad) (bad) (bad) cmp pop jg not ret outsl std popf addr16 out pop (bad) cmp pusha cli sub mov incb icebp fwait lahf jmp mov (bad) (bad) in aas jl (bad) sbb dec hlt sti arpl sarl lock jge ljmp (bad) das imul loop lods jle fcomip aas cmpsb mov inc lahf cld pop lcall jg imull cmpsl std mov mov xchg mov (bad) out xchg dec jg push std movsl scas call dec mov ftst pop std addr16 das clc mov (bad) push jg push jg in fcmovu lock cli pop lahf decb dec pop ljmp cwtl out std pop (bad) in das sti movswl inc (bad) and clc jmp sti cli aaa decb push out (bad) fnstsw out (bad) (bad) (bad) ss clc cmc stc (bad) scas (bad) daa jg aas sti mov fucomip xlat (bad) xlat (bad) (bad) decb call pop incl pop decb std leave pop hlt scas (bad) pop xchg pop clc lahf das jg mov frstpm(287 outsl stc push cld loop mov (bad) in fnstsw iret std jge rcr ljmp push aas std pop (bad) (bad) xor enter (bad) fidivrl std sub aad not outsl cwtl cld loopne fdivrp in (bad) jmp mov push jg jp idiv out fldcw (bad) cmc imul outsl stc pop (bad) loop mov push fnstsw out (bad) pop call mov loop fcomip mov daa mov int std cmp mov jmp jg mov icebp pop cld sbb sahf jg idivl stos daa (bad) fcompl jp or lahf xlat mov and ljmp repz decb jg (bad) mov jecxz clc cld scas mov std mov lahf jge cld adc out fcomip imul (bad) in jg cmpsl (bad) outsb mov cmc outsl clc sbb lods dec jle jg in stc in std push jg ret aad mov sti sbb push scas (bad) nop (bad) in in jg pop decb mov jle aas out fdivr inc jg aas hlt (bad) (bad) addr16 xchg scas inc mov (bad) mov pop repz cld cmp scas cmc in mov (bad) (bad) sti outsl lock jg fcomip outsl std mov ljmp repnz std lock jmp stc pop (bad) mov jo xor stc out testb (bad) (bad) xor (bad) sarl (bad) (bad) cld inc das lcall mov (bad) out jg imull jg cli xor das clc xchg jg push std cmpl cmc sbb es mov icebp aas cmp xor stc idivb pop (bad) fsubrl sti jne mul sar jg mov dec jle loope jp (bad) std xor (bad) pushf out jmp lods xlat xchg mov in lahf fnstcw cld mov (bad) jg cmc mov es fcomip dec decl jg icebp jg daa call inc mov std inc dec into out repz std shrl (bad) pushl icebp pop std inc ljmp push lahf sti idiv and pop (bad) les divl dec cli dec pop std mov and pop pushl jg dec cld ljmp (bad) std pop into jle jg in clc in cld xchg pushl in pop cld gs aas hlt daa jns jle mov jg cmp xlat outsb jae jg aas sti jnp mov std pop jg jg inc std leave mov cli mov in loop (bad) repz jmp leave push lods aas negl into mov jg (bad) cld (bad) aam icebp pop jmp mov das (bad) sbb call jg pop (bad) (bad) decb jg pop stc ljmp hlt (bad) cmpsl pop cld mov (bad) fidivrl jg pop (bad) test rorl in cld sbb loope scas cld xchg jg iret (bad) das sti cmp inc jle mov shrb cld loop jmp aas in (bad) (bad) mov sti idiv inc jg out int3 fistpll sti fnstsw fisttp xchg sar std mov pop std sub jg pop dec lcall scas repz cld imul out ljmp into jmp mov idivl mov popf mov out out stc out jg (bad) pushl call lahf std fstpt std imul push (bad) cmpsl cld aad jp shrl arpl call fucomip pop stc adc jno cmpsl cld iret mov std loopne lcall jle decb push in std or ja loope mov cld mov jle pop hlt lret (bad) in in stc push cld xlat jmp lahf cli icebp scas incb jle push out cmp mov std xor out aas hlt addr16 inc pop cld xor in stc call (bad) lods (bad) sar in (bad) xlat cld xor fwait daa (bad) (bad) mov outsl clc arpl icebp outsl mov stc ja in in scas cmp mov idiv std ds pop cld jg hlt outsl sti fwait (bad) fcmovnbe (bad) fstps sub call clc mov jg outsl std imul clc cmc (bad) ficom not das cli pop (bad) in aas clc xlat jle fist outsl rep jle hlt cli aaa cld xor ja sbb sarl cmpsl movd jp jg imulb xchg std loop cmp (bad) clc lahf sti jge aas cmpb jg std mov addr16 pop (bad) fstpt cld xlat mov mov pop std or scas stc sbb mov fistpll ja mov (bad) pushf out in std and fstpt mov aas scas daa jg jg inc call repz xchg incl repz inc push aas std sti (bad) mov stc imul push pop dec repz dec cld js arpl ret fcomip cld ja fwait mov xchg ljmp mov fbstp mov sti (bad) gs idivb icebp divb int mov pop jg pop icebp inc decl xlat call mov (bad) jg leave lahf repnz fnstsw jnp mov out sti dec mov pop (bad) jmp paddd xor fcmovnu out std out les cld iret pushl out stc std (bad) xchg jg lahf (bad) cld pop std dec dec fistpl pop sti scas aas call out std jmp arpl repz (bad) aas cmp fucomip cld bnd (bad) jp imul fucomip dec std lahf jg (bad) pop incb in outsl stc jg jg pop call int3 out mov das cld cmp out cli (bad) mov jmp cli idiv mov icebp aas (bad) dec pop std mov pop jle jg cmc pop out in fild std xchg sti iret movq jmp out iret std inc inc mov shrb pop inc pop cld push jg pop jo aas sti jae jmp lret pop aas cli mov (bad) aas jge mov std mov lock mov out mov bnd lods (bad) jmp (bad) jmp dec jg lret inc pop xor jg das sti mov negl (bad) ja jg mov aas jle repnz decb out daa lcall mov aas cmc lahf (bad) (bad) hlt lcall (bad) out outsl hlt imul dec aas cmc daa (bad) aad adc out inc mov sbb jecxz cli pop push (bad) shr cmpsl cmp jnp enter iret fildll jnp enter pushf aas cli pop (bad) fdivrp jmp cltd fisttp pop mov push dec (bad) std (bad) pop inc in (bad) pop (bad) mov loope cmp inc ds mov xchg (bad) lock mov mov jg call (bad) (bad) mov call (bad) pushf out jmp jmp pop repz out (bad) daa jg aas sti pop (bad) (bad) fidivr jg jg pop std leave mov loop xchg jg (bad) outsl incl jle mov xor inc mov jg cmpl pop cld out (bad) cmc out icebp xchg dec aas (bad) dec mov std and icebp lahf (bad) (bad) (bad) lock ja mov xchg push mov jg outsl cld or mov jecxz jecxz mov aas cli or jg std jg addr16 rcr jmp cld mov lds (bad) stc js daa (bad) fdivr negb std pop lcall mov jle jg xlat lods ljmp mov cmp psubd cld pop jg (bad) incb sbb ljmp (bad) ljmp jg xor mov (bad) lahf mov cmc pop repz in (bad) sarl dec lret (bad) aas icebp pop std fnstsw jg dec cld rcrl jg mov icebp push fdivrl dec jg (bad) (bad) rorl lret fcomip pop jg pop bnd xor cmc lcall pop or icebp jg stc test mov aas clc outsl jle dec std adc neg loop rorl out hlt (bad) icebp (bad) (bad) fistpl lret pop std data16 mov pop (bad) paddd mov mov out std jns idivb stos jg jmp mov decl sbb scas std outsl pushl cli aad loop cli jmp fsubrs std fwait aas std in inc xchg aas repz mov js es scas repz cld std in clc xor (bad) dec lahf sti mov imul cmpsl jg mov ljmp repz dec aas lock cld cmp icebp mov out cmc cmp stc (bad) jmp mov stc mov lahf incb out lahf (bad) inc jle loop (bad) sub jg pop incl inc mov icebp aas pop cld aad ljmp (bad) sarl jecxz std jne mov std gs fcomip daa (bad) cmp push fwait fs dec sar lcall repnz cmc jo sbb (bad) fdivr ds pop cld or fsin (bad) (bad) (bad) xchg jg notb repz std std sbb aas cmc (bad) (bad) aad roll (bad) (bad) jg sbb (bad) idivl aaa jle lahf dec (bad) in out cld ds lahf (bad) loopne outsl jg (bad) dec sti shrl dec mov std cmp lret aas repnz scas incb (bad) jnp (bad) hlt ja rcrb stos (bad) fst scas stc idiv mov out cld sti cld stos (bad) (bad) iret xchg mov jg fucomip leave out inc clc call (bad) int mov gs hlt inc fistpl aaa jmp mov pop jg jg out aas clc jae inc mov cli idiv mov out (bad) mov in das out push std leave mov cwtl mov daa sti sti xlat sar std loop (bad) clc jnp sub mov cmp pop cld loope jmp fwait mov lret (bad) adc scas jle mov jg jg das imul cld sti mov leave aas rep jle pop (bad) jmp stc sti outsl dec incb ljmp cmp aaa es lahf icebp lret (bad) cmp in outsl (bad) imul jmp (bad) addr16 fmuls sti inc mov xlat (bad) stc fcomip scas std (bad) jg aas std not ja popf cmpsl mov call jg iret cld stos inc pop std xchg out outsl cmp mov (bad) xchg leave lret out cld inc push (bad) (bad) aas hlt in in ljmp mov jle jnp ljmp mov das (bad) cmp scas cld shr das cli iret (bad) fnstsw jecxz (bad) jmp fwait mov (bad) idivl ja lods jg aaa jg dec push push leave pop cmc leave addr16 add repnz std pop (bad) clc push cmp decl stc aas jg (bad) sub push jg (bad) inc cld imul call idiv pop cld jnp lods (bad) clc pop cli cmpsl mov sarl outsl lahf lcall cmp sub mov push (bad) cmp idiv enter (bad) in in cmp jg out cmc aas ljmp jg dec std xchg jg scas pop cld xchg mov jnp lds pop std pop out incb jg lds cli cld scas incb negl push mov out fcomip imul push mov (bad) sti pop cld sarl lret out repnz pop dec (bad) aad lahf cld stos mov in mov jg (bad) inc jg dec call std addr16 and fdivr daa (bad) in aas sti pop std aas enter jg lahf repz (bad) pop push daa int icebp outsl lcall mov (bad) out in std aad ret inc mov cld sub lock lods aad repnz push incl mov jmp (bad) cld fistpll pop sti cmpl jmp jle cmpsl jmp xchg cld fnstcw cli mov mov iret aam jg outsl jg imul (bad) in (bad) cld cmpsl push cld ljmp insb (bad) mov cld (bad) pop daa jg daa mov mov (bad) lcall xchg mov sti scas pushl sti pop in incb test cld mov ljmp std sub lahf std lods jle fild out cli outsl (bad) jmp in jg hlt jecxz sar repz out xchg (bad) in into aas std scas decb jle leave lret mov ljmp cmc pop (bad) mov xchg (bad) ljmp inc imull pop std (bad) lcall es jmp in out fcomip imul (bad) in out lret stos (bad) movsb fcomip (bad) dec (bad) mov decb and repz xchg (bad) (bad) mov pop cld mov icebp cmpsl jle pop repnz nop (bad) stc movq lahf dec cld jnp push cld mov xlat (bad) loopne fcomip idiv gs xor fistpll imul cld dec stc lods jle das std icebp rorl mov mov pop mov std das mov pop mov negl mov pop mov (bad) inc (bad) adc das sti (bad) (bad) mov iret outsl std pop jg jg adc cld addr16 (bad) fcmovb aas mov out (bad) ljmp jmp cld mov lret lahf (bad) mov stc shll loopne stc dec dec aas out (bad) inc (bad) pushf jg pop cmp xlat jg fcomip pop std daa jmp jg (bad) fistpll aas idivl mov out repnz cmp sti das ds mov (bad) out jmp jecxz std jbe enter jg outsl icebp xchg loop pop mov mov stos (bad) (bad) cmc pop std mov jnp xchg (bad) clc scas (bad) cmpsl lahf cld mov or mov pop push repz lcall loope cmp lret ds ljmp mov haddps pop cli lahf jg (bad) repz hlt cmp std xchg mov sub xchg pop jecxz cli jb xlat stc jae stos jg outsl cli imul xchg jg (bad) jecxz leave jg iret pop xlat stos jg lahf stc mov (bad) ljmp in fucomi pop hlt sbb outsl jg fcomip fldt sahf jg (bad) out std das std popw xchg mov (bad) sahf fnop jg aad aam clc daa gs (bad) sti aas loope std scas mov in jl cmpsl pop (bad) mov repz xchg push lahf clc cmp jg xchg (bad) loop call aaa cld mov in cld not mov mov imull cmpl iret cli inc mov out fcomip xchg inc pop sti (bad) int iret jle fucomip lahf cli pop pop std (bad) lret dec cmpsl jg jg cli xchg jmp sti stc scas sti jmp cmpsl jg (bad) out cld cltd aas popf decl jle inc std std (bad) jmp pop jg outsl mov jg aas cld stc jg imul jg aas aad out stc out xchg hlt out sti fldt jg (bad) call mov dec inc (bad) stc dec stc (bad) mov ja in pop cld lret outsl cld out cld mov cli aas (bad) imul in pop incl mov jnp stc mov repz lods jle aas clc pop std dec mov (bad) jge std mov jg outsl std lds fistpl push cld fidivrl mul fidiv mov pop cld mov aam cld mov mov outsl std stos out cld cli mov cld mov rcr mov (bad) fnstsw pop cli dec jge pop std xlat jg scas dec stc sti pop repz pushl ds sti movd aas clc sti (bad) ja (bad) jg xlat (bad) push push lahf test hlt out arpl lock pop repnz movsl jg scas icebp inc lcall loope (bad) decl (bad) idivb (bad) cli jg iret std cmc jg jmp dec cld cltd scas decb cmpsl mov xchg (bad) (bad) mov (bad) out clc sub xor lahf clc dec pushl jg jmp mov (bad) push lahf cld std das sahf std arpl aas xor mov (bad) icebp jg das (bad) fnstsw xchg jg push pop (bad) fisttpl test in pop stc push (bad) arpl shl push daa dec mov aas jecxz mov stos fucomip sti lret pushl clc outsl stc pop (bad) xchg push (bad) xor push ds std mov cmpsl mov mov in (bad) cmp (bad) icebp lahf mul (bad) stc mov dec mov inc mov (bad) jge ljmp (bad) mov nop jg (bad) sbb mov (bad) jg dec outsl dec mov int xchg aas lock sti ret decl cmpsl jle jmp (bad) in mov lock cmp es fcomip fnstsw ja cld mov (bad) imul (bad) pop jg mov push jg mov cli fistpl std stos out dec ljmp out movsl mov ret outsl clc pop gs pop clc out jg jnp mov into jle (bad) jmp cmp cld inc (bad) out (bad) ljmp cmpsb cld mov out jmp dec aas sti mov (bad) push jg out mov test cli mov mov mov out dec cli jecxz xchg push out fstp stc clc repnz stc cmpsl inc fucomip ja imulb dec jg movd (bad) in lahf pop pop (bad) imul notl sbb ljmp paddd dec (bad) (bad) call mov jg idiv (bad) jg icebp addr16 mov fldcw pop cmp xchg inc (bad) (bad) lock (bad) and rcrl (bad) hlt jg aaa out std sahf (bad) call sarl xlat std les stc mov std pop mov out pop lcall cmp hlt mov pop cld xchg cld cmpl std mov call fsts (bad) fldenv cmc pop cld jns repnz push mov or mov mov icebp ja fisttp jmp fcomip ja in lahf (bad) stos mov das (bad) pop jmp jecxz dec (bad) call cld into mov jmp jg das sbb out inc pop mov mov (bad) mov (bad) sti jl (bad) (bad) fnstsw scas cld cld mov ds iret (bad) cli push push cld cltd (bad) out cld sti jg pop repnz pop mov (bad) idiv cmpl mov out call mov loope cld dec sub daa cld mov aam mov jg stc jmp mov lahf (bad) cmc inc das (bad) in jle repnz dec (bad) clc mov idivl cld int lcall (bad) jmp decb lahf std imul std lahf jmp fcomip xchg (bad) jmp vdivsd outsb jg scas stc sti out lcall es sarl cmc das test fnop out xchg mov (bad) sarb jmp repz pop cld es sbb jecxz mov pushl aas out cmpsl jle outsl sti aas push (bad) fstps in clc fstpl cmp pop stc xchg cld jne dec icebp fnstsw jecxz call jg (bad) jg add stc mov sbb in icebp push std rcr mov (bad) jmp fwait cmpsl pop mov push pop cld les fwait (bad) ja mov cld push pmaxub into jg pop cmp xor cmpsb (bad) jg (bad) (bad) outsl cld fstpt pop (bad) (bad) sti repz psubq sar cli lret jmp (bad) mov jg divb (bad) jg (bad) stc fnstsw mov popf (bad) nop mov ds out decb lcall int jno cmp call fcomip idiv xchg idivl fucomip hlt lahf clc icebp xchg mov lcall jg lahf hlt imul cmp cltd jg outsl cli movsl jmp pop jno dec out cld mov (bad) mov notl sar pop cld cmp cmc jecxz lock mov mov mov inc aas mov mov fldcw mov mov jae std iret dec jle daa jg outsl lock out decl incb dec incb pop (bad) mov sbb cld inc stc aas lock or (bad) push jg fisttp outsl stos (bad) cld scas cld movsl mov dec mov (bad) push clc outsl mov outsl lcall (bad) std pop std adc mov sbb pop js cmp iret jmp fwait mov cltd aas repz xlat (bad) clc jg mov lret inc fcomip xchg outsl popf pushl sti iret std or idiv insl incb sub ja xor iret sti ret (bad) jle outsl (bad) popf jg pop (bad) (bad) std xchg jg mov out decl jg mov dec das aas std ret (bad) stos aas jg fnstsw ljmp fstp (bad) sbb out incl in pop jge xchg std movswl ficomp dec (bad) mov cld jg sti (bad) (bad) out jg decb lret aas out decb (bad) jl (bad) call jnp cli das cld iret jg mov (bad) mov fnstsw repnz (bad) push (bad) mov div std repz jmp pop cli or ds aas cmc push cld inc inc lahf mov outsl std cli (bad) fnstcw sti (bad) loop mov lcall in loop jle clc adc pop cmp (bad) (bad) pop sti outsl cld or cmpsl pop std std jg (bad) incl sti iret mov repnz stc jg jmp lahf sahf (bad) pop jg ljmp notb jmp jle (bad) stc jg loope (bad) mov fistpll std idiv int pop neg fcomip (bad) call in outsl pop decb idiv cmpl ds dec jle (bad) call lahf notl fstpt rcr pushl dec dec pop cmc scas (bad) xchg incl or jg (bad) scas repz scas jg lahf clc scas call jg das clc into lret mov mov neg cld and aas ja pop call addr16 mov push jg (bad) insl iret aas cli push mov call icebp aas hlt xlat sbb xchg mov fucomip ljmp icebp aas jg fwait (bad) adc fstl (bad) cld aas call cmpb outsl std std aas mov jecxz aas std idiv idivl hlt jmp inc (bad) out mov std (bad) mov push std pop call aas cmc mull lret pushl pop fidivr (bad) (bad) int ljmp jg scas cld jecxz (bad) fucomip (bad) cld imull std cmpl loop repz pop clc scas std xchg jg fnop xchg jge mov repnz mov inc cld (bad) in iret cld jmp out std (bad) decl jmp push mov repnz std lret pop std ja iret pop repz std and aam push jg pop incb dec (bad) in in dec aas cli add jnp (bad) stc leave fbstp dec shrl jg aas jge idiv pop (bad) mov data16 mov ja test fs stc mov jg rcrl imul ljmp dec std inc stos outsl lcall lret negl in bnd aam mull stc out cmc cmp (bad) icebp dec jle jg and (bad) mov (bad) mov nop jg cmpsl pushl mov aas out fnstcw out imul lahf not cld sbb icebp pop (bad) cmp lahf stc (bad) ljmp lods aas out mov aas (bad) (bad) cli cmp lret inc out repz mov lahf cld sub lds stc dec (bad) xchg mov mov push std outsl data16 pop idivl and fcomp repnz std push outsl sahf cld dec fucomip idiv (bad) xchg daa xlat (bad) out pop cld pop (bad) sarl mov stos lcall inc aas std mov lock mov aas aaa mov (bad) fidivrl ljmp xlat (bad) sti jg sar cwtl jl mov and out cld (bad) jg scas inc (bad) fcomps jg out (bad) sbb imul idiv imul outsl jmp outsl in push jg pop decb jg ljmp (bad) lahf std lods ljmp das (bad) outsl jg aas stc (bad) std aad aas (bad) out incb (bad) (bad) repz jg popf pop (bad) scas mov (bad) stos fucomip clc jg xchg mov lret lret (bad) cli mov out pop clc paddd subl (bad) jg lahf clc repz int3 jg jmp clc aad idiv cmp xlat aas sti pop (bad) sarl jecxz cli mov cld dec jmp mov mov aaa jle push mov xlat lahf cli std dec aas loop repnz stc insl (bad) cmpsb pop mov jg mov pop jl lahf clc daa inc jg mov pop std xchg pop jmp pop jbe cmc pop decb clc xor pop icebp jg jbe ljmp mov (bad) lahf mov in jmp jle (bad) in scas cld and mov in dec aas in jg out ds inc fcomip cmpsl ljmp repz lcall std stos (bad) jmp mov mov lods mov ljmp lock out cld adc out js fdivrp cmp jecxz pop jg xchg jg scas cld mov (bad) cld lea pop inc fcomip scas cld addr16 rcrl ret jmp sti out fcomip ja and in call dec pop std aam cmc pop std sbb dec mov ds fcomip loopne cld movq (bad) in cli add (bad) in loopne push lahf (bad) aas std fnstsw std (bad) repz fistp inc (bad) ljmp jg repz aaa cld stos jle xchg inc (bad) loopne ds cmpsl push pop hlt imul jg scas stc outsl call aas stc daa push mov std mov in outsl (bad) icebp (bad) pop cmp xor cld popa push aas stc lock cltd cld es idiv lds out repnz shrb fwait jmp aas imul fisubr out pop (bad) call xchg jg dec ljmp jg push inc scas std pop std xchg jg mov pop jmp stc in outsl (bad) sbb jecxz mov cmp into jg mov addr16 (bad) paddd inc jg scas cld jne les shrl das inc out popf std cmp jg pop (bad) push jg ljmp arpl pop mov outsl pushl leave outsl lock cmpsb jecxz out lahf (bad) cmp mov xor dec into out dec jg out repz lcall inc mov sarl pop hlt inc call mov or loope pop std (bad) les fnstsw jg pop lods jg (bad) push enter sub aam mov (bad) std mov jle daa cmpsl (bad) and jg in dec out cld mov lds repnz hlt (bad) pop lods jg (bad) and std mov jecxz xchg jg scas stc aas pop std in jg idivb pushl jg std adc jmp mov in je jg mov jmp fdivrp negl stc mov addr16 cmp cld push jg into fcomip addr16 mov push call scas mov (bad) test (bad) in pop call clc out stos fnstsw stc (bad) sti push mov (bad) mov stos in das cmp aas (bad) ljmp xchg mov (bad) rcr hlt das (bad) daa (bad) call in cld sar leave jg outsl cld out mov mov pop jmp stos push jmp (bad) cli jmp jmp jl addr16 push scas div aas icebp fwait sahf (bad) popf mov jge (bad) fdivrp cmp (bad) loopne cld add rep decl call push jnp jmp jmp std mov (bad) in aas mov aad cmc jnp inc (bad) sti pop pop inc das stc mov lods (bad) jmp ja mov (bad) cltd jg out sti jg jecxz lock cld dec jle fcomip jmp std adc mov (bad) inc repz das inc push xlat (bad) std inc aas loop lret ljmp (bad) push cld lret dec cld hlt fnop or (bad) adc (bad) in clc paddb inc pop lock xchg xchg jg jg fldcw jg lahf icebp repnz cli out loope clc fwait cld inc jg repz lock sti rol jg mov popf pop mov jg std jle sti pop icebp (bad) repnz std insl jmp pop jp scas fdivr adc pop call pop lock std xchg paddd cmpl test lret aas clc aas clc clc xlat sti int (bad) jg iret clc sbb pop into jg push out cld mov jg fstps ss sti decl ljmp das (bad) xchg pushl idiv mov mov sti (bad) mov lock sti sub dec cld into cmp das clc mov leave jg outsl cld addr16 aas repz incb (bad) (bad) rcrb dec lcall jg aas rep (bad) mov rcr hlt sti jg shr repnz jl lahf fdivrp mov int in idiv int jle lret jg push incb mov (bad) jle cli mov std out outsl stc mov (bad) cli pop push cld es cmc dec lret fcomip pop call cli dec (bad) lods aas and cmpsl (bad) movsb aas in sti xor cmp (bad) clc fwait incb iret pop mov jg dec lret cmp psubb mov adc (bad) psubd out lds jle ja inc mov jbe cld pop inc aas hlt pop cld push jg lret jmp out mov std fucomip mov push jp (bad) cli or (bad) pop ss xlat cli cmpsl (bad) fstpl popf jg pop out std pop ja idiv xchg (bad) mov in psubb outsl lcall rcrl jnp lea das popf pop jmp sarb sub test jnp dec cli mov std xchg fdivrp push (bad) mov mov adc lods jmp push jg lahf hlt sti ljmp dec cli imul xlat jg jg (bad) mov out jb (bad) jg dec cld sarl (bad) lcall (bad) popf hlt mov or jp pop sar dec xlat sbb jg cld pop mov cmc pop jg inc jmp mov out (bad) (bad) push push fcomip mov jg mul jle cmpsl not aas call fistpll xlat inc jecxz cli shr (bad) clc addr16 popf mov in cmc sti incb std sar (bad) ljmp cmc pop cld leave mov cmpsl pop std push fstpt outsl test push fs mov (bad) cmpsl jg idiv leave aas clc lahf sahf dec mov jmp sub mov sti (bad) stc xchg xchg mov mov jmp lret jg loop (bad) aaa jle out dec aas jmp jg jg (bad) (bad) fidivrl jg icebp out ja aaa cld xchg (bad) incb iret jle jg fistpll jg psubd out jg fucomip cli outsl decl fdivrp in (bad) pop jmp in mov (bad) fcomip das cld inc jg aas cmc dec push das call cli xchg movsb fucomip jg or aaa mov mov cld lret aas icebp lock into (bad) loopne jmp stc (bad) (bad) mov fistp fucomp mov (bad) out fildl (bad) cld pop sahf xor jle (bad) cld testl enter mov hlt (bad) call in lods aas cli (bad) mov std mov aad lret jg clc out and call push fwait pop repz (bad) stos mov jmp movsl (bad) fldt pop decl enter lcall mov sarl loopne clc (bad) dec std dec (bad) mov ja ljmp jg mov (bad) loope aas repnz cli popf jmp hlt repnz std pop (bad) fidivrl jecxz aam mov mov out icebp pop jg dec dec pushl jle mov fucomip pop std sahf lahf outsb std cmpsb call jmp cld loope decb (bad) cmpsl fcomip imull loopne jo repz std mov hlt in (bad) cli cmp cmc pop incb fstps fstpt (bad) aas (bad) in (bad) jmp add idiv hlt imul jmp stos mov aas negb int int lcall jmp stc cmpsl pop (bad) mov stc in aas ljmp in psubd aas divl (bad) jge incl mov lahf std push std ret push pop std push cld les ja sar clc icebp aas std das (bad) mov repz jae mov stc push std in cli pop (bad) fdivrs aaa jmp mov xchg ja (bad) jg vmread stos mov mov mov jg lahf pop cld xor push inc (bad) (bad) call sti mov incb icebp pop cmc pop mov (bad) aas outsb (bad) jmp call mov (bad) push mov aas (bad) push jg cli ljmp mov inc pop call mov incl call pop idivl lret icebp jl fwait std mov incb emms jle lahf cmc pop std inc mov inc push ja push out (bad) dec jg cli test xor (bad) call ret jmp jg jecxz out das cli cmp lock cli scas movd pop mov in jg jg xor psubd mov loop icebp (bad) cli out out out hlt call push pop notl sub fnstsw cld sarl outsl call cli daa (bad) in jecxz std cmpsb mov jg (bad) das std mulb inc ja popf jg mov iret dec (bad) stc idiv jge movsl aas clc mov fs cli (bad) xchg call cmp repz fdivr fstpt lahf std pop mov std out mov test outsl clc pop ljmp (bad) clc pop std not cld gs xchg sar in out cli cli cli ja mov hlt mov std mov icebp das cmp mov ss sub xlat mov outsl clc stos decl sti cld inc mov aad mov cmc jg cld dec std ret (bad) neg jmp ret mov jg pop repnz dec repnz aas jns pop dec decb mov inc cld das lds cld pop incl shr call in std hlt lahf sti aas std xchg jg pop std inc mov stc jg jecxz int3 mov into lahf clc imul pop (bad) sub (bad) (bad) lods pop decl mov jle pop cmpsl aas imulb mov lahf jge xchg std stc mov cld jae das ljmp mov repnz (bad) lods jbe fistpll jmp sti daa (bad) mov out push bswap (bad) xchg sarl std iret ss (bad) ficompl xlat aad cld push (bad) outsl mov cmpl outsl (bad) daa jle fucomip leave outsl rep icebp mov mov sti idivl (bad) lahf (bad) call hlt ljmp (bad) mov outsl cli dec jle pop std imul pop jg mov jg pop (bad) cli mov rcr jg pop imul sti iret cld mov (bad) jmp loop stc inc (bad) out mov cmc paddd aas stc pop jle in cld (bad) ret jg mov hlt (bad) fs ja push pop icebp push mov in jg cmpsl jmp (bad) (bad) pop hlt jmp sarl repz lahf std xchg std and fstpl pop mov pop out aas jle iret (bad) popf in pop clc out std xchg mov dec jmp jg push std ds std leave aas negb dec jg out jb fdivrl jg xlat cmp mov jg lret outsl std mov std mov push jg outsl (bad) in pop jg pop mov arpl jnp (bad) fdivrl (bad) fidivrl daa (bad) pushf mov mov push pop std pop inc scas std or jmp cld imul std push jle mov jle jnp mov shrb call fistp std dec (bad) (bad) jp enter xchg mov mov ss (bad) (bad) jg aas stc (bad) cld or fcomip ljmp icebp mov cs pop icebp imul loopne sti test push sbb sbb jg fstpt stc cld pop stc dec pop (bad) pop jg fcomip loop jmp mov (bad) mov jg mov pop (bad) shl jnp aas sti lahf clc daa (bad) loope out std (bad) push setl inc js pop cld xchg scas imull ja stos jle (bad) jmp (bad) mov jp clc pop jns inc dec out cmc popf pop testb icebp out int3 (bad) mov jae lret int3 mov daa jg (bad) decb sub xchg dec fistpll aas mov cli mov imul pushl daa ljmp pop icebp sbb xor fwait std pop dec mov jle clc xchg dec (bad) sti out cld (bad) call mov rcrb int icebp mov std arpl jbe lea (bad) iret cli xchg movsl mov paddb decb jg dec std (bad) mov (bad) cmpsl cld or icebp mov jg pop repnz push (bad) scas mov bnd xchg out cld hlt push xchg jl rcrl (bad) cmpsl push pop negl jle out and idivl aas out clc xchg in mov mov (bad) jle aas xrelease stc (bad) xchg pop repz (bad) outsl (bad) in aas cmc aaa call (bad) out stc outsl jo dec (bad) xlat cmp std das repz paddw jle jl hlt aaa clc pop decb std jecxz xchg negl aas idivl std mov int aas cmpsb cli fistpll (bad) sti (bad) decl cmc aas out out aas stc or addr16 aas clc addr16 lret (bad) pop inc stos pop jnp inc stc lahf mov aas std out incb lock fnstsw out sti dec repz sti scas (bad) stc mov lcall lahf jmp jg jg (bad) jg mov cmp cmp jg fcomip scas cld and std scas call imul jg clc outsl sti xchg mov sar out std idiv out push stc pop cld sbb das std dec jg jmp in cld fcmovu loopne stc out push cld mov rcr out repnz clc out out aas loopne sti pop inc jg das cli iret jle (bad) xlat decb mov jae lahf (bad) cmpsl jg cld mov out mov push xchg inc out cli sti call in jg cld jnp ficompl std mov push (bad) fnstsw cld mov dec (bad) imul std lret aas clc adc das (bad) (bad) mov test mov pop call push adc aas std cld scas ljmp ljmp out sahf lcall mov mov jmp (bad) jg aas icebp decb outsl hlt icebp rcr in cli fwait scas jg (bad) in pop clc fucomp (bad) scas (bad) icebp mov cli (bad) lcall cld (bad) nop cmc jg adc call cmpsl cld clc cmpsl push pop cmp xor repnz incb sti cltd (bad) call outsl sti lret jg pop pushl mov sti dec dec mov ljmp lahf cld xchg ds (bad) jg cmpsl decb push pop clc aaa std pop mov jg (bad) aaa sti pop (bad) lock mov ljmp cli dec inc pop notb jns (bad) jmp jle outsl pop (bad) fistpll mov scas std cmp mov pop ljmp repnz push pushl pop mov into repz decb xlat (bad) sti pop cld jge shll into jle fucomip jg mov dec jl call fstps xchg cld xor in std mov xor out out jae lahf ds test das scas decl (bad) mov jg fistpll sub out ja lea jg (bad) jnp in imulb pop jg pop decb jg cli aas jnp jmp push push pop hlt xchg std sarl daa (bad) dec aas repz xchg mov (bad) mov stc sarl sbb (bad) call cld lahf sti and mov jg xlat cli cmp sahf cld mov scas inc in cmp loop std out out pop lock (bad) mov mov (bad) (bad) cld dec cld cmpsl call lahf repz jg,pn aas jne xlat (bad) xor fstpt (bad) sti jg (bad) mov lahf idivl mov sbb pop (bad) not hlt xlat mov popf out std pop jg outsl repz das jle aas in aaa dec (bad) out jg (bad) std xchg fcomip aas cld sub ja loop cli out sti cmp jmp (bad) cli (bad) clc and jae repz cli sti (bad) ljmp cld daa ds repz jg pop std stos push pop dec jg fucomip push std btc mulb clc pop sar xlat (bad) std movsl push pop sti notl clc lahf scas dec call sti mov pop (bad) std mov jl mov mov stc mov xchg bswap mov jg cmp shr mov fnstsw iret incl fidivr lcall xor push jmp outsl jp jg out (bad) mov out out clc daa pushf cld das lahf cld pop (bad) ljmp jg pop cmc das std mov push dec (bad) mov in dec cld pop pop cld repnz stos cli (bad) ds jmp xchg aaa aas stc ja ret push pop stc das cld xchg stos mov jne fwait (bad) (bad) (bad) sarl (bad) jmp cli fnstsw fnstsw (bad) call stc fistpll xor jne clc aas (bad) xlat dec jg mov (bad) lods (bad) xchg pop repnz gs pop stc (bad) cli adc inc mov daa incl and test cli cmp lea int cld mov fucomip mov mov sti lock pop ljmp (bad) std out jmp clc mov sahf mov pop mov inc sti pushl arpl fidivr ljmp jg (bad) mov cmp iret cli incl sti ja sbbl ljmp cmpsl aas cmc idiv aad aaa lods jg cmpsb jg ja (bad) jg in cli in stc push pushl idiv sbb dec jg jg inc jg mov jg (bad) in pop iret (bad) sarb out std mov inc inc mov das cld mov jmp mov incl icebp cmpsl (bad) and decl lods jg out clc rorl leave out cmc scas incb xchg hlt aas clc mov push mov mov in clc mov iret mov in fisubr pushl std and xor lahf cld jne int3 dec (bad) jg mov jg jg pop (bad) sub (bad) (bad) lods (bad) jle and pop out decb jg xchg jg pop dec mov insb jb popf aas loop stc pop jle std inc incb mov cwtl (bad) jg jg mov jnp cmp lret lahf (bad) xor imul stc cmc call push lahf (bad) cmp shrl cli push (bad) ja jg fistl adc lcall jg pop jns adc jg jg in cmp in jle iret pushl stc pop mov (bad) mov (bad) out push jg mov mull dec (bad) and (bad) fistpll aas dec jg (bad) out iret cli iret jg das cli ret inc fbld pop mov outsl std (bad) push mov (bad) jns fdivrl xor aas cmc outsl (bad) out ja ret aad out cld scas jg ret mov (bad) repnz incb fcmovnbe fbld (bad) daa (bad) fidivrl cld movq fstpt loopne clc or ret mov out fnop sub lahf (bad) mov (bad) cmp sti (bad) incb cwtl dec (bad) jg pop cmp push scas jg lret std mov inc aas (bad) push decl std inc jg aas std dec jle (bad) outsl outsl std cli (bad) jmp cltd mov jg rcr in (bad) incb sbb jns (bad) mov pop out push mov stc out repnz les stc negl (bad) sbb idivb ja (bad) iret (bad) (bad) decl pop incl out decl loop mov (bad) in imulb aad pop cld pop mov mov decl dec (bad) jge dec aas jl mov stc jl mov fstp out (bad) in (bad) cli das (bad) (bad) scas incl pop cmc mov mov imul jg mov jnp out jg lahf std (bad) (bad) jmp icebp out (bad) in jg pop (bad) (bad) lds not scas (bad) mov out pop divl jl mov mov imul pop sahf std aad out ljmp jmp sub sti aaa jmp repnz (bad) aas call int std iret jg outsl inc cld lcall cld mulb jg aas sti pop lods (bad) out negl (bad) xor pop popf cld fsubs out out hlt pop lcall dec cli cmpsl std pop jmp std fbld (bad) out mov jmp call data16 sar in cli repz jg out (bad) cmp movsbl pop (bad) sarb in jg push (bad) (bad) pop cmc (bad) les fwait pop (bad) cmp sarb aaa fdivr (bad) (bad) jmp lahf stc pop pop jl das dec (bad) fucomi pop decl incl std (bad) cmc jg stc outsl hlt aas (bad) mov pop jmp out incl sar cli (bad) out lahf icebp jg lcall call out aas cmc jg mov lahf cld jmp (bad) loopne std xchg push pushl xchg fcomps (bad) cld push jg cmpsl mov (bad) cltd dec (bad) loop cli idiv std (bad) mov jmp stc push (bad) in vmaxpd iret in decb (bad) std or std pop sarl mov (bad) jmp mov int3 scas icebp mov pop push outsl jge jp fnstsw (bad) dec cld cli mov jmp in incl (bad) sarb (bad) mov fcomip (bad) std jmp clc pop jle lahf std mov sub call cld ljmp call pop cld gs leave inc repz fnop insl jg pop hlt lods jg clc push cld cmp fwait sbb jns (bad) call scas (bad) sbb stc aas (bad) mov addr16 mov jle fcomip out (bad) std push mov mov int3 das js sub iret (bad) stos mov pop cld (bad) (bad) push dec pop lock cld push (bad) xchg jg aas (bad) aas in out repnz (bad) xor icebp out stc aaa jle mov in cld (bad) aas std cmp lcall jle pop cmc (bad) (bad) sahf (bad) in rcll mov inc aas stc out (bad) mov mov aas out das insb dec fistpll fistpll hlt cmpsl std pop lahf std dec jg in jb xlat cld mov jle mov (bad) mov ja aaa call (bad) aaa cld js aas rcrb inc jg xchg mov rcrl idiv scas jg push jmp cmp sub fcomps (bad) mov cmc and mov arpl jnp icebp out sar in pop hlt iret push mov out cld xchg sarl sti dec (bad) mov push sar aas inc out call hlt (bad) pop dec out pop hlt (bad) aas dec out call hlt jle out fbld decl xlat hlt (bad) sbb jg out call aas jle std pop push (bad) jg cmc ljmp (bad) mov std iret test jmp std fbld decl ljmp ljmp ljmp (bad) fbld incl jg cmc decl (bad) mov std (bad) ds pop inc std lcall (bad) jg std pushl scas ljmp lds pop jle ss pop dec (bad) jle (bad) scas decb (bad) ds out fistp lcall xlat mov loop (bad) out sarl int cld outsl outsl (bad) clc aas cld (bad) sti jg out scas cli mov dec jp (bad) fdivrp xchg hlt incb std mov out call (bad) mov std call aas cmpsb idiv dec jp (bad) (bad) jg ljmp decl cmc (bad) cmp inc aam inc std (bad) mov std (bad) mov std (bad) mov std ljmp (bad) mov ljmp decl cmc (bad) cmp inc aam inc std (bad) mov std (bad) mov std (bad) mov std ljmp (bad) mov (bad) push dec (bad) lods jg pop aas cmp (bad) lcall dec std aad push outsl stc cmpsl jmp aaa movsb icebp (bad) cmp mov cmp call aas clc lahf stc inc repz (bad) cmp jg out cld test inc ljmp out pop sar pushl mov xor mov sar mov out incl mov jmp push jecxz fwait cli ljmp (bad) out push decl call incl xchg cli call (bad) mov test call (bad) incl pop fwait cli ljmp (bad) out push decl call incl xchg cli call (bad) mov test call (bad) incl mov icebp mov scas cld ret xchg movsb jg out idivb inc mov aas icebp pop cld sarl clc (bad) std mov jae jg in notl (bad) gs aas sti mov mov jg das jmp mov dec out ljmp hlt (bad) pop jp mull jg jp mov decl idiv inc jp outsl movsb idiv inc jp pop movsb idiv inc jp jg idiv out aas cli (bad) dec test sub call cmc ljmp (bad) aas dec std dec test incl (bad) call test incl (bad) mov test aas mov pop dec std jmp std (bad) cmp aas movsl (bad) call lcall movsl (bad) call inc test shld call (bad) aas movsl (bad) jg lcall pushl cld scas dec (bad) mov cmc pop cli in sbb (bad) stc lret jbe scas mov fidivr mov xchg ficom jle imul sti xlat das (bad) fdivrs aas std cmp pop sar int in imulb (bad) (bad) lahf cli fwait std mov hlt (bad) incl inc out decl (bad) aas inc out jmp hlt (bad) out dec out scas call call (bad) mov decl idiv bound jg idivl jg (bad) mov aam imul pop movsl (bad) sbb (bad) aas movsl (bad) call xlat cmpsb (bad) call inc test aas mov aas movsl (bad) jg ljmp (bad) jg cmc lcall incl (bad) aas xchg cli pushl cli pushl lcall decb lcall std dec test incl jg ljmp pop lahf cld lds mov in out scas fdivrl pop call lahf fadd (bad) stc mov xor scas std int mov push paddw scas (bad) (bad) jg ja cmc mov jg outsl stc lret (bad) sub mov (bad) fcomi (bad) incl incl decb pushl mov decl mov lcall sti sub aam (bad) push (bad) mov cli fbld lahf mov pop push (bad) jg cmc jmp push (bad) jg cmc pushl push (bad) pushl pushl (bad) aas inc std jmp aam sbb aas mov das test pop inc std call aam lahf dec std call aam fisttp rcl (bad) mov aam dec jecxz pop and jg icebp fistpll (bad) pop enter mov jmp mov stc ljmp idiv pop mov stos (bad) out std mov decb push (bad) (bad) cmc jg dec ljmp mov out incl mov jmp aas mov (bad) aas cmpsb idiv gs (bad) call das cmpsb idiv fs lahf cmpsb negl mov js aaa inc jg (bad) call mov std dec rcrb aam outsl inc std xchg (bad) clc stos ja (bad) jg cli jg std xchg (bad) sub ljmp aam out dec std decl pushl cmc ljmp push lcall cmc (bad) aas push (bad) jg cmc lcall cmc mov aam dec ljmp ljmp pop jg (bad) mov std scas (bad) jmp (bad) out inc cld ljmp call (bad) mov xchg jg pop clc arpl leave ljmp aas incl pushl aas clc iret (bad) mov mov int loope aas (bad) lahf pushl pop (bad) fbstp decl sti jg mov ja std aas xchg fdivrp (bad) sbb (bad) iret call jg out jg fdivrp or out call lahf push (bad) jg cmc (bad) jnp (bad) ljmp cmc call lcall dec std decl std decl std jmp lcall std jg std (bad) mov fcmovnbe sti pushl outsl jmp jmp std pop dec out fbld decl mov (bad) imul std fist das cli aas and mov loop aas neg std mov (bad) std lcall ficomp xchg xor aas stc cli aaa and stc ja (bad) stos aas mov aad jecxz jle out std addr16 fstpt clc lahf mov sbb lret mov mov mul idiv mov cld fcos out mov std mov pop cmc lret push (bad) jg,pt pop dec icebp ret out dec out adc cld fucomp aas fdivr imul mov pushl fwait (bad) in dec jle (bad) cli mov fistpll fninit std aas negl stc xchg idivl ljmp decb (bad) in jg inc pushl ds mov arpl mov push jg lock jnp jg cld jmp jg icebp xchg clc in inc (bad) jmp jle iret (bad) scas jg outsl (bad) mov sti inc out (bad) (bad) negb jae sti pop std jmp jnp cld (bad) (bad) dec xor push das (bad) jge mov aaa mov repnz cld test clc out fidivr out pop and push jg push (bad) (bad) jmp pushl repz jg aas int inc outsl js fisubr cli fisubr (bad) fldcw out std int mov into jle aas clc pop push aas decb pushl mul idivl icebp stos sub sti arpl jge xchg (bad) (bad) in aas std pop (bad) lcall das sti fidivr (bad) inc outsl (bad) call decl jg pop dec std xor js icebp out lds mov cld frndint int out ret aas hlt jg idivl mov neg jg test aaa loopne jnp xlat int cli cmp aad imulb mov mov pushl jmp lds cld cli aas pushl imul aas or jmp pop ret jle repnz sub repnz icebp in jmp (bad) mov repz cld jmp adc cmc (bad) mov stc out call jg xchg mov ljmp pushl in mov cmc xchg xchg std stc xchg movswl fdivr std leave jle std mov paddb dec cld mov jo (bad) adc mov cmpsl call jle pop ljmp aad hlt inc cmpsl mov inc clc xchg cld leave sti mov jns jnp push jg pop mov in fdivrp adc pushl (bad) aas cmc lahf repnz jmp (bad) scas cmc lahf decl cmpsl sarb fnstsw jmp stc xlat jg xor (bad) mov (bad) fdivrl lock clc jmp mov mov pop mov (bad) xor incl in into cmp cli inc mov mov jle jg in out pop cld out int (bad) out xchg loop mov mov jmp jg pop dec jmp ljmp inc cld repnz sarl imul (bad) rcr fcomip mov lock cmp mov jg pop cli mov xlat (bad) xchg jg scas or cmp scas std in dec jle mov hlt jle aas pushl pop (bad) ljmp (bad) divl push int3 fistpll idivl sar mov decl (bad) sti jg fisubr (bad) aad xchg in iret outsl into stc pop mov mov out outsl clc pop mov jg movsl xor cld clc push add pop sti pop inc mov xchg push aaa sar gs test inc hlt sti addr16 pop sti aas cmpsb idivl mov outsl pop std mov cmc out icebp daa jg mov (bad) std add out (bad) (bad) and add decl sti (bad) paddw (bad) (bad) (bad) scas jg outsl (bad) fstl pop inc (bad) call (bad) ljmp pop jle (bad) cmp in cld (bad) es jmp xlat cmp mov and cmc outsl stc daa aaa ja (bad) (bad) in pop push lahf jp dec cmpsb jg ret xlat das or aas call fwait (bad) fstpl sti cmc mov jg outsl (bad) lret call (bad) cmp jge aas out and clc mov (bad) aas cli bswap cmpsb mov clc paddw cs cli fistpll pop incb lahf cli decl cmpsl (bad) mov (bad) cwtl lock cmp test call pop sti sub push jmp out cli xchg ds cs scas sub mov mov test cmpsl jg clc (bad) mov (bad) mov fcos cld idiv sbb (bad) jg loop mov lahf fcomip outsl inc movsb mov jno jg imul lock incb loopne jmp repz jg into scas std movswl mov (bad) fstpl sti ja cmpsl (bad) mov stc cmp aas sbb jg imul jg call mov std outsl stc aaa (bad) ljmp (bad) out jnp (bad) aas cli mov aas icebp idiv ror pop mov (bad) loop jg outsl std int icebp aas std imul ljmp in pop idivb sar mov pushl idiv in dec jecxz or ja rcrl xchg (bad) cmc das mov mul jmp stc jnp call decl fcmovu pop sti lock add push das sti xchg or pop repz movsl clc loope std scas adc jnp repz js aas std pop aas stc in fwait pop je dec jmp lock (bad) out push and jg lahf mov sub iret (bad) sti pop cld lods aas lcall xchg pop jge mov aas call lcall ss lahf jg (bad) stc sti ja out addr16 setae clc sub out (bad) out (bad) out fdivrl stc (bad) lcall int cmc pop (bad) mov fldcw cli sbb das (bad) in call aas in push jg not mov mov jmp sti pop ljmp repz iret inc jg aas sti dec out sar xchg (bad) std (bad) clc mov jmp call cmc out lret inc mov (bad) lahf (bad) (bad) jmp stc pop mov out fistpll aas cmpsb imull (bad) fadds in dec dec fnstcw divb jmp fnstcw mov aaa test pop decl push (bad) mov pop sti vphsubwd lds dec icebp xlat outsl into clc pushl push (bad) jg aaa call movsb fistpll jns mov mov loop cld outsl int3 fcomip xlat jle std lret (bad) ljmpw (bad) in fcomip mov ficomp std xchg mov (bad) mov (bad) mov ss into (bad) rcrl lahf std push int cli stos (bad) ljmp in aas cmc dec (bad) ja mov das sti sbb fdivrp push jg jg cli xchg sti mov mov das int aas cli jecxz sub xchg negl loop mov iret (bad) ds aas (bad) popa lcall ret (bad) pop jge out (bad) fcmovbe mov das cmp sti gs mov pushl fldenv mov (bad) fmuls decl mov call fucomip cli xchg (bad) ficomp std ds aaa jg jg clc xor enter int scas mov (bad) in out repz (bad) test icebp hlt aaa cld (bad) in fistp hsubps sub aad std lock das cmp sti sbb jg pop incl decl outsl (bad) jae in jg sti imul (bad) out std dec (bad) fidivrl lahf std std pop std iret (bad) out (bad) mov incl clc out inc cli repz (bad) sbb (bad) in (bad) je idiv aaa jg push (bad) (bad) call fistp sarb loope std mov out sarl cli pop cld mov xlat jmp ljmp out lahf std int jg (bad) fisubr jg lahf cli dec jg (bad) clc jecxz jg cld outsl std test das jle jg stos inc loope mov mov jg (bad) inc jg mov cld xchg mov movsl jg pop sti aas fdivrp sar (bad) icebp pop jge xlat scas pop pop std mov out pushl out (bad) ds (bad) sarl ljmp aaa cld into fistpll daa (bad) fsubs (bad) fstpt ret jnp sub movsl aas hlt dec lret xlat mov jns (bad) pusha jp lds dec pop (bad) clc (bad) push std cmpsl (bad) fnstsw sti mov jnp imul aam (bad) scas (bad) xlat jg mov or aaa mov leave (bad) cli scas incb mov sti mov mov jmp fucomip das std cmp push (bad) mul fdivrp inc lret mov jg pop hlt lahf (bad) idiv in outsl (bad) dec mov (bad) mov ret scas (bad) (bad) (bad) ja mov xor fistpll std mov sti xor jle mov lahf jle das stc dec (bad) ljmp cld mov stc imul (bad) (bad) cmpsl push aas sti sbb inc mov push (bad) fstpt sbb fdivrp lods or aas in xchg jg pop std repz pop dec out jg call cld aaa jg pop lock (bad) lods jg mov jae cmp out adc call stc loop aas cld xchg sbb call jle (bad) jg jg xlat lods (bad) in (bad) pop sti into scas clc pop dec fcomip out outsl aam ret (bad) js jmp pop (bad) (bad) mov cld loopne clc pop push jg idiv sar std pop jecxz clc loop mov into fcomip daa std scas jg outsl clc (bad) lret jns xchg xchg mov ljmp loopne sti outsl (bad) outsb repz outsb negl into das (bad) cmp iret fbstp sbb incb call scas (bad) sbb xlat (bad) sub (bad) pop jg mov jg das std daa das (bad) paddd mov les into clc lahf and mov (bad) (bad) or pop or aas icebp xchg (bad) (bad) pop std stos (bad) and jmp (bad) std mov dec fistpll pop (bad) fistpll das sti arpl int3 jnp clc lahf sti fwait jmp iret jg pop std mov mov addr16 jg stos decl jmp mov sti (bad) stos jg loope out iret and std cmp (bad) sub jmp iret sar and cmc jp out std sti imul ja std pop sti (bad) outsl push aas cmc xchg mov pop push (bad) jg icebp iret (bad) cli scas (bad) adc (bad) sti jle leave idiv fnstsw hlt aaa and stc xchg jg push xor inc mov sub aas std iret (bad) fsts jg pop sti dec loope jecxz mul mov sti lcall aad in lock cli push mov jg pop cli cli in aad stc sub mul (bad) call xchg mov xor addr16 (bad) jge ljmp aas (bad) mov stc mov stos mov dec jle popf mov sti inc (bad) (bad) xchg lock cli loopne std imul pop (bad) iret (bad) ss inc out call cmpsl mov int ja (bad) sbb (bad) and std out dec (bad) cld cmp stc out cmc out (bad) inc pop cli pop adc jle icebp iret pop lock decb idiv lods aas not cmpsl cmc nop jg (bad) shr mov jg (bad) (bad) aas daa (bad) dec mov (bad) jl (bad) incl pop adc (bad) clc pop notb std sub fisttp call mov dec sbb mov mov into mov sar pop incb lahf dec std inc (bad) jge sub clc (bad) mov sub daa cli lcall (bad) stc dec incl (bad) icebp jg fstpt (bad) popf jg sti stos jg (bad) incl mov cld xchg movsb aas jle rorl cli ljmp stc pushl rcr lcall call (bad) cli xor out push cli lahf adc decl inc (bad) mov call fistp clc out outsl std sub cli ljmp jle jmp push fucomip inc out xchg jg pop inc repz (bad) jg xlat jle out jmp ds pop (bad) fidivrl jg push adc std ljmp jmp idivl (bad) popa mov outsl xor (bad) mov clc (bad) cld pushl aas (bad) jp aas enter lahf aas sahf fdivrp iret jle ja cmc fwait mov in sar mov dec hlt call mov dec out pushl aam out dec hlt sti and pmaddwd mov ljmp inc hlt ljmp (bad) jmp daa incl icebp out (bad) movsb aas decl in in outsl inc cli jmp pop cli xchg mov (bad) mov xor mov std cmpsl (bad) jmp (bad) ja in aas lcall adc jg rcrb (bad) cmp fistp call stc idiv fnstenv scas std mov xchg nop (bad) test cmc jg clc inc jg jno ljmp lods mov mov fld idiv fdivrl hlt sub fistpll int clc div stc pop jle aas imul loop sti lahf lcall hlt loopne (bad) stc rcrb fdivrl cld jge jg and stc jecxz jle icebp mov dec incl sbb hlt fildll div mov (bad) jg call mov xor or scas das jg aas std mov (bad) push call (bad) imul dec inc mov es stc daa dec jg cmpsb stc sti ljmp lock divl cli inc mov jg and fidivr (bad) (bad) xor jg lds out mov call out cmp inc inc mov sub out clc arpl test loope sti fwait nop cld pop mov lret imul fldcw ljmp jmp aas and (bad) cmp (bad) mov xchg std cltd std pop jg das sti cld jnp rcrb cli imul out decl mov negb notl repnz jmp (bad) decl pop cld mov addr16 mov ret lahf jp cli out ljmp fs lcall sti (bad) (bad) rclb insb mov dec mul ja inc jg mov xchg cli lcall dec jg pop (bad) out out idivb aam jg jecxz ljmp mov ljmp mov xor ja lcall lock scas lcall jmp negl (bad) mov xlat xchg (bad) clc out mov cmp cld (bad) seto add mov jle jg (bad) clc pop (bad) dec incl stc sti xor jg lcall ret negl jg js incb pop jle jmp mov (bad) dec (bad) mov das daa (bad) stc dec sub std sub pop inc cli out ja (bad) ljmp loop pop repnz pushl (bad) fistp repnz bnd (bad) nop fistpll lahf call mov repnz in mov hlt out not mov lahf std lods mov pushl (bad) and or std ds fistp jne iret adc decb mov lcall (bad) lcall ljmp repz xchg cld cld aam std addr16 (bad) pop (bad) ljmp sti dec xchg (bad) cli mov push xchg fistpll in std pop les xchg incb jg lahf sti sbb mov data16 testl aas dec cli pop mul xchg lock aas dec cld out lahf mov and repz fbld std (bad) clc pop insl (bad) fisubrl lods jg xchg jg mull (bad) mov jmp (bad) cmp in mov out daa stc cmp xchg pushl (bad) (bad) sti pop std in test cld gs (bad) jg mov incl clc mov (bad) sti decl mov (bad) cmp dec (bad) cld pop jp div mov pop jg dec jmp scas xchg (bad) sti sbb scas jge mov dec jg pop (bad) out out (bad) idivb sti aad daa mov (bad) cmp out decl jg std cmp jno pop jg das (bad) (bad) pop cli lahf adc inc aas idivl lahf decb ret in (bad) mov sarb addr16 lret leave iret lcall jmp jmp in inc cli (bad) aas es sti or fcompl hlt jnp cld repz sarl jmp cld dec cmp fcomip xlat and aas cld push aas lock lahf dec std (bad) mov testb mov std cmp repz xchg push xchg mov pop rcrl repnz jmp lods scas imul scas idiv addr16 mov test scas inc dec das and lcall fdivrs in (bad) out hlt xlat push mov call lcall out adc cld sti out sti (bad) fabs fucomi out icebp jnp repnz jbe icebp jecxz dec out lcall mov mov adc iret inc fs mov push stos jg addr16 fcomip outsl jge inc pop cli leave pop stc scas (bad) jb dec jle jg in lahf mov incl fistpll cld fidivr cli sti idiv imul iret mov inc jg xchg cld (bad) fist (bad) (bad) aas dec jg stc pop mov xchg mov xchg push fwait jle (bad) and fwait xchg (bad) sbb movsl jg pop sti inc fdivrp aas (bad) fsubrl idiv dec leave (bad) sti adc mov ljmp icebp iret (bad) jecxz xchg cld xchg fucomip ja ret mov and sysexit stc outsl mov dec stc mov cld xchg dec jg lahf jnp pop (bad) jae repnz std pop sub dec fwait aas (bad) clc (bad) aas cld outsl pushl jmp xlat std pop jg cmpsb fistp scas (bad) jnp daa les mov mov mov jg pop pushl mov (bad) out clc (bad) out ret jmp scas std lret (bad) in cld out dec jle jg lahf std cmc pushl imul mov leave lahf clc aad (bad) jecxz repz pushf lods jbe (bad) aas scas std (bad) aas stc mov lahf cld ja jg mov out icebp (bad) cli notb in repnz (bad) mov (bad) std outsl (bad) fdivrs into (bad) (bad) cmc iret dec (bad) ficomp out (bad) addr16 lcall pop jl stos jg pop out xlat std or ja pop xchg (bad) clc xchg std cld dec ds out (bad) in fucomip lahf jle mov pop (bad) sbb mov mov mov xrelease out (bad) fdivrp (bad) call dec dec outsl (bad) stos lcall pop aas and std push dec (bad) call aas and or lahf aas xchg cmc jmp jmp mov jg icebp out mov inc cli das daa std jnp loop shr das (bad) in daa std idivl fbld push mov outsl call out aas (bad) out or fistpll out lahf es cmc pop pushl cmp cld repnz xchg push mov adc (bad) aad idivb sub jecxz jmp lret fs sbb lahf (bad) cmpsl jg aas sti imul popf sar jg leave pop call call dec decb sahf (bad) fild clc ja (bad) mov mov repz sar inc (bad) (bad) sbb pop (bad) cmp fistp (bad) clc ds paddb mov pop std dec imul out idiv or lahf insl sarb xor mul das mov scas inc repnz mov in pushl (bad) mov incl aas int3 hlt pop (bad) std fnop (bad) cld inc aam mov (bad) (bad) mov cli ret jg dec jg leave fist sarb cli out out movsb clc loope daa std stc and jle popf clc std aas pushf cld (bad) pop ret idiv (bad) mov mov lods mov mov xlat std xchg jg (bad) ja sarl inc icebp fistpll in outsl jb fwait (bad) mov paddw stc (bad) cmp mov jg dec cld ljmp (bad) sarl out out clc out std stc push daa jg (bad) std leave xchg aas js jnp push ja (bad) idivl xlat mov pop stc xchg leave jle jg ret cltd jg adc and (bad) jg repz sar push in mov jle repnz ljmp pop call fldcw clc scas jg leave iret mov jmp aas decl (bad) jp call mov jg jg xchg xchg cld (bad) out mov sbb ljmp cli jmp (bad) gs std sub aas loopne std add mov jecxz std lods in std (bad) int dec testb inc dec mul aaa loop in and in cli push (bad) clc ret fistpll nop incl sti std sbb (bad) clc in aas jg jg fnsetpm(287 mov mov clc neg mov out paddb decl jmp call leave (bad) sti frstor jnp and (bad) clc mov std decl sar push xor dec dec (bad) jg loop clc iret out cwtl decl mov dec sar (bad) jle mov out aaa movsb divl jg pop cmc (bad) xchg push pop and icebp out nop std std adc jg add das xchg cmc mov icebp scas cmp mov (bad) pushl inc lcall cld icebp push xchg (bad) stc push jg jg cli out and std nop in aas addr16 sti sub lahf pop inc imul outsl (bad) icebp ljmp adc (bad) push adc dec and dec ljmp jg (bad) std pop out std movsl and iret mov pop xchg std adc cld or clc scas icebp sbb jmp rcrb mulb jg mov out jg (bad) lahf dec (bad) stc std (bad) (bad) ror pop jnp mov es in (bad) (bad) ja adc pop std ljmp mov std mov and decl mov jnp jnp xor (bad) mov hlt jmp pop jg out pop cli addr16 (bad) out outsl sti jae sub stc fnop jle iret and (bad) int std out (bad) fsubrs jg lahf jp stos pushl mov mov stc in sar lret lahf jbe cmp idiv (bad) jle outsl cmc mov in mov cmpsl jg scas repz (bad) mov (bad) std pop jg inc mov (bad) pop pop adc std (bad) in out lret outsl and add jg addr16 sti jg push (bad) fcmovnb (bad) cmc jmp out std movsl jg inc les mov clc (bad) std aas leave incb jle jecxz jmp lahf insl fwait mov stc push incl loop sub ja ja (bad) cld lahf xor mov divl sti pop nop cld (bad) jnp (bad) adc mov leave pop testb (bad) test adc out mov hlt mov cld call stc in mov jle push cld insl outsl out incb std outsl std fwait jl dec (bad) cmpsl fcomip leave aas icebp ja pop (bad) cli out sti xchg mov in iret jns pop (bad) clc jg xlat std dec (bad) std pop push stc mov out cld adc (bad) cmc pop lock jp sti inc mov popf jg jmp sti jg sarl fwait (bad) cmp (bad) jecxz jle paddw xchg jg sarl push jg (bad) outsl pop nop cld std in movsb aas (bad) jnp lahf scas adc mov stos out mov std cmp (bad) (bad) cld sbb jle lock in rcrl fldt data16 jg (bad) in outsl aas sub iret decl fisttpll incl fstpt outsb sti jg cmc lret jmp jg mov inc jg lahf cmc dec pop (bad) mov mov (bad) xchg (bad) scas jg clc (bad) cli cmpsl jle mov aas (bad) xchg jg pop (bad) (bad) popa mov std pop rcr jg jg jnp or fisttpll cmp fidivr repz (bad) std fwait jg pop repnz outsl cmp (bad) cld mov stc das jle fisttp call xchg fstps fwait pop cld push aas xchg jle idiv add fcos lds inc jle jg das and inc clc divl out in sti movswl (bad) cmp das adc mov jg repnz (bad) mov notl notb clc scas dec cli jecxz in int inc mul pop xchg push cmpsl xchg (bad) call mov sbb out mov inc jg lahf inc repz cmp negb cli sub std jno sbb lods mov xchg clc out aas cld cmc dec (bad) (bad) jns jg divb cli sbb jmp mov inc jle or pop (bad) (bad) push iret and repz repz ja fcmovne (bad) ljmp (bad) mov mov lahf or fucomip cli xlat (bad) and outsl jg in jle lcall outsl (bad) (bad) xchg jg mov xchg mov jg leave mov xchg cld cmp stc inc (bad) cmpsl inc hlt in je pop inc pop std popa jg pop sti sub (bad) fnstcw repz cld mov aas cmc fwait (bad) mov sarb mov mov pop std mov jg lret pop cmp ret (bad) out fucom idivl (bad) std daa sbb jg aas fwait cld xchg cmc das sti pop (bad) mov xchg std inc jg aas cld lock cli jae cmc aaa aas std addr16 lahf (bad) mov daa (bad) xlat jg outsl std imul push movhps lahf sti xlat cld ljmp mov lock clc cmpsl cld idiv loope repz jle stc lahf mov cld (bad) call scas jle fcomip repnz push icebp pop lock stos aas jmp (bad) loopne (bad) jnp int3 aas clc lahf mov jg repz repnz std mov jle xchg lahf hlt (bad) sbb (bad) aas mov (bad) aas jno mov cld pop mov ljmp das cli (bad) mov scas mov (bad) mov out addr16 dec inc pop cmc cmp sbb enter loop sti and mov aad ret iret jle (bad) jne (bad) mov cld (bad) clc repz jmp mov cmpsl (bad) out (bad) sti fucomip xlat sti mov (bad) cli in lret outsl stc pop adc decl pop mov std xor (bad) lcall (bad) adc jo fistpll in leave aas inc icebp ret pop dec repz sti pop jg fistpll std ljmp mov addr16 dec (bad) and push cli aaa cld sahf (bad) fmul cld into cmp (bad) pop divl shrl (bad) pushl aas loope stc (bad) dec call clc rcll cld push daa mov pop std push fdivr (bad) sti jle lcall aas (bad) mov pushl iret jg (bad) out pop test negl jne idivb sbb pop not mov sti call leave sbb decl (bad) and out jg inc out stc pop incb jg into xchg mov cld lahf call aas sti or call mov jg jg (bad) (bad) jg stos dec (bad) xlat clc or out cld arpl decl in pop call repnz decl lahf (bad) fwait pop cld ja pop mov inc nop cld fwait jg pop neg decl pop (bad) cmp cld mov push icebp fildll movsb cld shr jecxz arpl (bad) stc (bad) dec (bad) jg lock das std lret enter les (bad) fiaddl cld (bad) (bad) xchg push (bad) mov sbb iret call mov fbld leave fistp das loope rcr dec imul packsswb std cmpsl push fildll icebp out test (bad) ds stc pop aas stc out dec jmp push cmpsl std mov xchg std imul fcomip pop inc mov inc idiv aaa clc inc lahf push cld and cld aaa in jg (bad) clc imul (bad) aas (bad) clc out out mov mov lds (bad) out dec (bad) call ja std idiv xchg (bad) clc imul jg in decl (bad) (bad) pop mov decl iret out (bad) jg mov xchg out std sub pop out push cld sti sub fnstcw cli jecxz and jmp cld icebp (bad) aaa cld cltd mov inc cld sti xchg adc sbb inc (bad) out ret dec popf mov repz pushl arpl inc jg int dec (bad) out (bad) icebp fistpll div sti xchg aas xchg (bad) iret cld mov jle daa mov jle call aas cld dec leave jle xor sti cmp cli (bad) enter fs call lahf mov jle stc mov mov mov jg cld negl (bad) mov xchg repnz or (bad) jg sti das jg jmp push pop mov add decl in push xchg aas call std or jg das lret mov lock push (bad) sti jmp std std mov jle push cld cld fistl std jmp jg jnp lahf inc (bad) jecxz lock or stc sbb ss (bad) (bad) xchg lcall cmp lcall cmp aas lcall mov and lahf sti jmp mov jle mov call jg jae lahf ljmp lahf mov sti pop jle xchg xor incb in cwtl clc jmp addr16 or std fnstsw xlat mov icebp sub jg (bad) jae (bad) mov cmc pop inc out and (bad) sar jg mov ss (bad) (bad) outsl (bad) xchg jg lret fistp cld (bad) outsl icebp xlat jle icebp neg dec stc xchg jg (bad) sbb outsl std lds aas and iret mov gs inc hlt sti aas dec jle outsl xchg mov jl jnp (bad) loope loope rcrl lcall lcall cli jecxz cli mov (bad) pop push jmp in pushf push pop mov out push cld (bad) clc out das mov jecxz push (bad) in jo ljmp (bad) ds adc pop dec cld dec fdivrp out (bad) mov fcomip sti lock imul std pop xor (bad) cmp lahf mov adc ljmp jl jnp mov ficomp lret out ret jg jmp fdivrs call mov cld incl stc sti ret (bad) fstp nop cli dec leave jle push aas mov xchg (bad) clc adc addr16 sti jae cld pop xchg std add inc jg mull jg (bad) jmp dec stc out and sti fwait sub and negl inc fbstp mov jg psubw mov std pop cld clc out (bad) pop cld cmc (bad) call ds aas das push jg out cli pop xlat jg (bad) stc in jg cmp (bad) das cli sbb mov fnstsw pop cli cmp aaa pop sbb imul (bad) xchg mov xor fldcw out sti sub fidivrl aad clc jg inc inc mov mov call (bad) imul (bad) sarb out stc pop ja cld jmp daa inc aas std lds out mov out pop icebp xchg mov jl iret cli and std jg das std jne xchg pop aas clc in or lcall cmc xchg pop mov aas mov hlt pop std push jg lahf cli aas jmp loope jmp ljmp clc pop repnz cld das int stc fistpll cld sbb out cld xchg lds mov outsl std xchg in fcomip xchg jge inc mov jg lahf repnz pop (bad) fdivrl cld jmp cs out stos cli inc call mulb clc pop (bad) ficompl idivl lahf repz decl mov stos cmpsl xchg aas std (bad) cli fwait imul fistpll (bad) data16 pop stc loopne (bad) loop sti jnp (bad) fildll stc idivl in cmpl std mov popf pop pop call outsl jno das std (bad) (bad) stc mov (bad) sti out cld xchg cld scas jg cli icebp fidivr inc jg arpl ds add test adc (bad) jg xchg push pop std sbb push std adc jg jnp (bad) (bad) aas (bad) (bad) pop mov iret cli sbb loop icebp mov shrb (bad) cld in dec mov mov jg das jns sarl dec jg mov fisttp push scas sti aas jg cmpsl call outsl out jle xchg (bad) call paddd outsl sti xlat pop jg iret std push sahf sbb sar in lock (bad) fistpll stc aas notb out stc das ljmp stc aas div push stc popf jg jg outsl cli mov cld or scas cli pop cmpsl jg jg (bad) fcmovne jg xlat std movsl jg out mov out clc fisttpl mov pop repnz (bad) rcl pop cld out pushl mov iret jg popf jg aas (bad) push (bad) fisubr cli jg out std (bad) (bad) cld jg pop repnz das es pop repz das xchg mov jecxz (bad) cmp jg jmp insl mov xchg roll in jg pop cld xlat aas clc dec mov leave jg out jge jg jae mov pop out in std dec push lahf cld lahf std cmp (bad) cld (bad) iret das (bad) loope out sti pop cmpsl jg pop std in addr16 jle aas sub inc pop cld aaa jg (bad) cld jnp jle repnz out mov out scas sti xlat cmp in call jg pop (bad) lret (bad) fcmovnu out cld xchg decl cld and das (bad) or sub push incb (bad) sbb jmp loope div dec mov jl sti stc pop cld daa mov jmp mov (bad) aas cld (bad) (bad) repz jg scas dec (bad) xchg scas incb (bad) das (bad) fstps sti insl (bad) sarl jmp mov (bad) jl stc iret jg xlat (bad) movsl jg out imulb mov lret fcomip push jge clc pushl mov mov stc (bad) std add fcomps aas cld mov out cld out mov out stc das ds test cld or fstpl sbb cli (bad) fidivrl or lcall icebp fnop mov in cmpsl mov ja or (bad) push pop lcall outsb std lcall mov mov (bad) cld mov std and jg out xchg jg scas clc (bad) decl sti jmp sti daa std addr16 outsl hlt cmp pop jg pop out ljmp mov rcrl mov fistp repz aas imul jmp das std pop pop jge (bad) jle jg pop clc std iret (bad) popf (bad) std aaa std or mov jg aas ljmp aas std ja lcall mov in sti ret mov loop cli das imul clc jnp ja imulb std jae std out (bad) jg outsl cli fwait mov jg (bad) lahf repnz in jle lahf stc out jle pop ja stc push pop into (bad) stc mov loope jge outsl das jle mov xor mov into call fcomip jl pop pushl dec dec jg negl cmp movd (bad) fmull cld fwait das (bad) (bad) call aas stc pop std sbb mov mov out cmp lcall cld in iret (bad) fcmovb jecxz std (bad) lret popa mov fistpll (bad) cmpsl (bad) popa jg (bad) std dec ljmp fucomip fnop xor repnz jg pop (bad) push mov lcall decb and lock cmc repnz clc pop dec (bad) (bad) nop push sarl addr16 (bad) aas sti jnp mov popf mov out lret aas loope cld sti mov push push fistl mov aas stc adc jnp xchg sub idivl pop inc mov jmp outsl icebp dec decb aaa jle aas clc jg jne mov (bad) out loop sarl dec fild jecxz nop mov inc std pop aas jns (bad) sti (bad) ja fstpl enter leave (bad) ljmp iret sti sbbl div sar stc (bad) add clc aas cld (bad) xchg (bad) clc mov in mov imul std inc inc mov jg mov loop lock fistpll lahf cmp (bad) int (bad) mov hlt fucomip (bad) sbb xchg jg idivl outsl (bad) fwait pusha std jo (bad) sub in dec std scas jle mov (bad) mov cld push repnz add jb (bad) std pop mov lahf jge out outsl clc lds cld fistpl (bad) push scas cld dec pop std outsb les jg pop jns (bad) (bad) and cld scas cmp mov lock popf jg call repnz hlt xchg and dec jle lahf bnd sti add stc fwait mov ja mov aas dec out outsl jmp sarb ja xchg dec out sar mov jg mov decl fnop mov (bad) lcall fcomip (bad) int (bad) mov into jg ja sbbl lcall (bad) (bad) jg hlt fstpt (bad) and (bad) pop jg scas cli xchg fdivrp sbb xlat out call daa int3 (bad) out dec repnz jg mov fldl jmp pop jg pop ds sub (bad) jg pop stc repnz jmp (bad) sti jle fstps jg outsl repz (bad) test icebp dec clc push leave iret pop repz xor pop inc dec (bad) incl scas mov int lock (bad) mov fld1 aaa pop call cld lahf repz push icebp cli out (bad) fcmovu out jmp pop mov lahf std mov push jnp mov (bad) (bad) (bad) daa (bad) adc std icebp dec sahf std jne out pop icebp setge insl (bad) out stc iret cmp std clc sub (bad) ljmp repz decb jg sar mov (bad) pop out fnstcw (bad) fld lahf decb pushl mov int3 out stc test mov jg (bad) mov cld das std outsl decl decl repz jl in das cli mov rorl xlat sbb ja sub mov call mov ljmp idiv movsb leave jg sti incb or mov iret fidivrl jg popa xlat aas icebp pop std jne fidivrl adc fnstsw idivl decl mov sarl lahf hlt xor scas mov fwait (bad) scas dec incb ret out std scas ds dec inc jg jmp cld jg lahf xor mov imulb call (bad) out in iret cli (bad) call das call mov jle jns aas (bad) jge mov (bad) lahf repnz incb cmp fstp ljmp (bad) icebp mov sti iret cld idivl clc pop (bad) jne fisttp (bad) fucomip jg xor xchg (bad) clc hlt ja scas inc mov jg jg fwait jl xchg cld ja daa jg scas idivl mov mov inc fcomip mov hlt sbb pop cmp (bad) das (bad) nop jg out ss call mov dec jg (bad) sbb (bad) jg pop lock out lahf push fistp das pop pop cmp addr16 mov out repnz xchg out jle (bad) out (bad) clc call cld loop inc pop cmc pop (bad) pop stos jg fistpll (bad) mov stc idivl pop jmp cli ret decl std iret pop cld push jmp pop icebp das std ds aas xor clc repnz clc xor mov sti sub jmp push ds mov outsl call out pop mov decb ja (bad) mov js fnstsw call push mov (bad) call cld lahf sti and cmp ljmp std cmpsb inc aas jae jmp cld leave jg call jmp in (bad) std adc cld test xchg (bad) out (bad) jbe (bad) lcall stc jecxz aaa jle clc pop (bad) mov lds out cld in cmp add (bad) sar mov jmp clc (bad) das sti mov leave aas icebp mov mov (bad) push push (bad) cli sbb or cmp outsl cld inc (bad) stos mov jmp mov clc mov mov cld out fistpll pop (bad) idivb scas jae out (bad) loopne in sti gs xchg iret jle cli idiv (bad) mov lret jg sti arpl scas fcomip mov pop icebp cmp iret jg lret (bad) stc mov mov xor sti mov pop cmp and xchg cld fidivr (bad) pop (bad) call aaa dec mov jle jg mov (bad) loopne pop idivb fnstsw fild (bad) repz push sarb std scas repz pushl pop std sbb xchg jg repz in mov sbb pop lcall out mov mov ljmp incb jae jg daa inc pop stc ja mul aaa sti std jle jg cvtps2pd cld cmp lahf cld mov scas cli addr16 aas hlt out std jge ficomp pop jge mov jg aas and jg (bad) pop jg notl jg (bad) mov (bad) (bad) jnp loope repnz jg cmp rcr outsl sti in mov daa (bad) (bad) mov loop clc mov cli insl out cld repnz call cli mov in hlt lahf (bad) cmp push in xlat pop std (bad) inc (bad) in outsl repz jecxz cli pop decb call jg push dec (bad) call out hlt pop dec sub jg push jg aas repz lcall jecxz cmpsl cmpsl pushf aas sbb dec (bad) fnstsw scas (bad) ss pop mov (bad) jg aas clc mov mov icebp mov jg push jg cld adc lods mov sub in mov out std out cld into mov cli paddw pop mov aaa pop std inc mov (bad) pop push out nop pushl jg push out call sbb lods mov movd aas cmc idiv and jle push outsl test xor sti jge int sub mov clc outsl (bad) adc push icebp pop ss cli dec cmp cli out rcr loop cmp stc iret (bad) in jg aas repz pop cli mov scas stc (bad) mov jg pop cld pop incl daa (bad) fnstsw ljmp loopne (bad) test fwait (bad) xchg mov (bad) repnz mov xchg jg mov mov xlat fldcw dec jle lahf clc pop (bad) out jg mov jmp cmc pop std or (bad) aas icebp idiv push jg push ja (bad) scas jmp loope dec decb out pop hlt xlat mov sti aas jecxz cli sbb clc jnp idivl fild ja (bad) mov pushf out push (bad) mov jmp lock inc call lahf idivl jne jg stc (bad) pop jle mov mov sti (bad) clc pop (bad) fnsetpm(287 mov daa incl (bad) lock out adc jge popf jg aaa stos (bad) mov (bad) inc push stos (bad) dec jle ret aas jecxz cmp cli ja daa mov aas repz incl aas repz aad in aas repz out (bad) clc mov fild (bad) cmp leave pop repnz popa (bad) jle mov and mov std sub out lock clc addr16 incl std outsl std jnp idiv xchg outsl popf (bad) mov outsl jge cmpsl std scas mov mov icebp out fnstsw push xlat std xchg cmpl (bad) jmp jmp cld movq jmp sub addr16 ret inc mov xchg (bad) mov popa jg fisub repnz into dec mov mov addr16 xchg jg icebp mov out pop icebp mov out dec inc aas cld out clc das ja lods jmp lds lds aam mov scas cld mov jp xlat cld and cmp push call pop (bad) pop call dec decb mov std das cld je cli sti psubw push (bad) xlat call (bad) aam lock std das mov jb fucomp std das std mov pop (bad) mov ja clc incl cld repnz mov mov fistpll mov call outsl cld loop jle repz sar icebp das sti jge std jg out stc jl pop std push jg (bad) decb hlt mov loopne mov lcall shrl outsb std sbb out mov iret jg mov call mov (bad) loope lret scas not lcall cmp (bad) (bad) (bad) cld lret jl (bad) hlt idiv movd jg aaa cld (bad) fidivr xchg sbb cmc jmp cld add stc das clc lds adc std pop hlt scas call ret pop (bad) ds jge stc cmp mov mov das fdivrp pop (bad) (bad) test jg aaa cli cmp xlat mov lahf cmp in (bad) mov cli mov jg jecxz stc loope aas hlt outsl std iret incb (bad) stc scas jnp (bad) mov mov decl cmp decl in das cld imul lret aas out mov idiv xchg jle loop stc (bad) mov aaa pop ljmp pop decl mov data16 (bad) fldt iret std dec sar push push lahf negb std xchg mov inc out incb fnstcw pushl fistpll cli fwait sbb shr jg mov sub cmc jnp std mov mov out jg in iret jmp mov pop std loope out repz lahf pop jle pop cld xlat inc push iret (bad) mov mov ljmp dec clc test ljmp push jg outsl lcall fs out cld pop (bad) mov jg insl incl stc sti xchg decb cli iret mov std out (bad) movsb aas clc lahf std insl jg aas stc scas cli jge cmpb lahf std jnp (bad) pop repnz cld addr16 sbb xchg (bad) jg cmpsl inc out neg cld mov in out (bad) fistl mov std std add (bad) (bad) (bad) movsl push outsl clc addr16 jg mov mov jmp and incl jg lahf std aas sub lahf jge out xchg jle fnop mov dec pushf incb ljmp jge jle (bad) mov paddd jmp aaa stc jne aas std pop jg pop jg jg (bad) (bad) fwait mov std dec jg fstps sti pop xchg (bad) sti idiv xor ret pop jle cli dec sti adc jg jg dec push jmp xlat mov lret mov dec fcomip jg mov mov mov push jg mov jmp mov loop sti lods cs sar in das call iret jg outsl loope jg xchg lahf jg pop std push jle pop lcall stos lahf (bad) clc lahf lock cld cmc jg das std repz ljmp clc mov jmp jg paddd mov out jp iret sti and std icebp dec pop xlat push out jb (bad) clc lret (bad) fdivrs idiv or ficomp das stc repnz jns icebp (bad) aas std xchg std dec jg pop repnz lds jae cltd fnstsw jmp jg (bad) out testl out cld int xlat pop out std cmp pop sti mov imul aas std insl out cld xchg jg push iret cld xchg jg das lcall int3 (bad) out lahf sti push std icebp (bad) fstpt cmp dec (bad) (bad) fcomip je (bad) and fistp scas jge stc popf jg ja (bad) jmp (bad) cld jg sbb lret rcrl std sub fistpll psubb jg mov rcrl mull jg out stc pop cld hlt cmpsl movsb jg sarl iret (bad) hlt pop inc mov ret jg (bad) mov out xlat fidivr (bad) ret mov (bad) push pop cld lahf mov out incb clc (bad) jnp mov inc mov loopne aas sbb les jecxz decb aas cld cltd out mov mov jle jg push jg pop std popa (bad) in (bad) jg (bad) out jg in in lds inc fstpt out (bad) aas lcall mov std aaa iret jg aas repz (bad) sbb repnz jle out dec mov call enter not std aas imull cli xchg pop jg popf (bad) inc jg lahf lock (bad) ficomp out mov fwait aas cmc mov movsl jg jmp cld fisttp jg pop stos stc call jg inc push (bad) repz std fsubrp fnop pop (bad) out aas sti daa (bad) mov divl cld sub rcr jecxz std pop call insl jg aas stc aas sti lea (bad) jecxz imulb mov pop push call fnstsw (bad) aas hlt sti cld dec jg (bad) fst outsl inc icebp jmp idiv std loop in aas stc dec jg jmp push (bad) int3 mov jg dec std test repz lahf std lcall lret lahf std in jg cmpsl sub mov ljmp cmp into outsl clc dec (bad) clc jmp lcall clc sti nop (bad) (bad) aaa sahf jl pop sti outsl jle ret repz hlt (bad) pop (bad) jg push sbb popf dec jmp xchg jg shr cld out cld in iret fidivrl icebp lahf std pop decl aas mov aas cmc int jg out (bad) mov (bad) fcomip mov fistpll mov das stc aas jg cmp lock not (bad) jae out idivb std insl (bad) movq jmp std adc pop std sbb (bad) test ja bnd (bad) std stc fistp (bad) (bad) std jge adc ljmp mov hlt pop (bad) sar loopne es pop lcall mov xchg (bad) fdivrs out idiv xchg pushl jg std mov or lods call fucomip ja sar in mov add mov loop aas mov inc jge (bad) int (bad) in jecxz stos sbb arpl (bad) pop lock jne sti (bad) idiv mov loopne aas repnz and std dec into (bad) xchg das pushl std pop lcall pop pushl jg fcomip mov lock (bad) jmp mull fistl sti das jle xchg lcall (bad) data16 (bad) jle pop pushl cld jle sarb not mov out (bad) mov sub xchg lock xlat (bad) fstp jmp push std sbb daa (bad) idivl ret aas notb inc (bad) adc ss cmc jg fisttp cli out clc push jg outsl std (bad) aas stc aaa (bad) mov lret or jg hlt addr16 lcall jg jg daa std dec jg outsl imul ljmp fdiv into inc aas out sti pop pop cld mov aad cld outsb stc pop jg scas cmc sarl cmc pop jmp call (bad) std aas incl jmp hlt aaa lcall call (bad) fcomip xchg std loope int3 jg stc das incl pop (bad) std scas rep cmp call out (bad) ds (bad) in imul das sti incl int (bad) push jg loopne (bad) mov jg sarl (bad) mov in push mov jmp pop call (bad) clc sbb cs lahf jmp stc jmp xchg (bad) in imull xchg cmp hlt (bad) iret call mov jmp aas (bad) cmpsl cld cmp lcall out idivl pop cmp inc aas (bad) aas jle pop repnz (bad) lret fbstp push std cmp dec das jle mov aaa mov aam (bad) clc imul out mov (bad) fcompl (bad) (bad) and mov std xchg (bad) mov iret (bad) cmc decl pop cld insl mov fidivr pop cmp (bad) jp outsl (bad) mov (bad) rol (bad) fldcw ja stos mov pop jmp idivl hlt aaa std xchg call out fidivrl negb cld sbb iret out incl jg aas icebp xchg std ja iret fdivrp std pop (bad) fcom lahf cmc out jge ret cmpsl jg jg stc out (bad) cld (bad) aas cmc ja std xlat std (bad) jg outsl movsb icebp (bad) mov mov cld shrl cli jmp hlt aas sti ja in das (bad) clc mov dec (bad) lods (bad) int jecxz std insl lcall aas cld aaa cld jmp idivl idiv jmp icebp sti call mov decl lret dec jle fucomip ja mov (bad) aaa out fdivrl idivb repnz cld int ret pop negb loope sti outsl clc aaa ds jecxz decb negb aaa call (bad) (bad) std iret std stos jg in std aas jg ja jmp imul push xchg ljmp push loop outsl (bad) jle ja loop cmc jg jnp pop (bad) jg cmp das std daa fisub idiv mov std cli pop stc imul (bad) addr16 clc in pop (bad) jge cmpsl mov stos pop std jmp dec pushl push repnz std jge int mov neg repz ds sub (bad) aas cld (bad) cld std mov stos fcomip dec sti mov cli aaa clc iret ljmp sti clc aaa test dec stc std out call mov ljmp jg aas repnz popf ljmp outsl repnz jge pop mov push (bad) pop in (bad) fcomip (bad) cld (bad) cld stos jg int dec std mov (bad) jmp xchg call stc (bad) aas aas dec jg loop lahf stc out (bad) xchg lock scas scas jle out cmp aaa (bad) cli (bad) sti iret ds xchg jle out inc stc scas lahf (bad) cmp iret cld mov lcall sahf pop sti loop clc pop jg mov (bad) jg (bad) pop std adc jmp xchg std in mov std clc (bad) call jg (bad) ljmp fstpt sti negl and mov lds dec das jns mov popf (bad) cli psubd dec fucomip pop cld xchg aas std paddw out std sar mov jae xchg pushl clc mov sti outsl stc lret mov or push mov rcrl icebp (bad) aas stc pop std cmp loope hlt imul (bad) imul (bad) (bad) ja out push psubd jmp pop mull aas mov mov idiv fstpt hlt paddw (bad) sar and (bad) (bad) stc out stc mov loope pop std jns lcall repnz (bad) xchg mov iret mov ret ljmp pushl lock stos mov cld std mov hlt jecxz out psubd aas std cmpsl (bad) mul pop not mov sarb jg paddw xor (bad) jne xlat pop clc out (bad) lahf iret mov (bad) in push fucomip xchg incb lahf incb mov mov add das dec (bad) cld xchg inc lods aas js aas cmp cld xor dec cli stos incl jg icebp in scas lcall (bad) clc jg imul pushl fucomip xchg fucomip aas stc std (bad) (bad) pushf jmp (bad) loopne in ja in xlat pop pop (bad) jnp leave out idiv push push mov mov (bad) std loop (bad) pop jg mov push pmaxsw cltd push lahf hlt sub lcall iret pop cld ret inc pop cmc (bad) dec (bad) cwtl (bad) cld cmp xchg out shrb decb (bad) mov and sti addr16 sub xchg sahf mov cld mov aas divl cld mov fisubrl push jmp mov std iret lcall push lcall (bad) fstps mov std clc mov adc movd pop mov ljmp adc fistpll (bad) aad aas (bad) loope cmc outsl lock mov icebp sarl pop cld jecxz iret out xor call not pop std ret mov inc jg xchg pop stc lret (bad) mov (bad) cmp mov decb call ja test divl clc cmp sub inc clc jg mov mov loope std jns pop (bad) fdivrp repnz ss jbe loopne (bad) fstpl xchg decl fstpt dec jge mov popf jmp aaa cli dec scas das jle scas std dec (bad) sarb jle aas sbb ror jecxz out cli jecxz loop icebp mov cmc jmp aas int3 mov jle lods aas inc pop (bad) outsl jg fcomip sti insb std data16 hlt outsl xchg std stc daa (bad) mov cli push fbstp stc rcl sbb test mov mov loop iret cmp idiv xchg stos fucomip aas decb fldl jg aas (bad) aas (bad) movsl iret (bad) in jmp xlat decl cli mov jge sarl call pop neg cli (bad) jmp mov leave lret jg daa scas decb jg (bad) clc int xlat in ljmp (bad) idivl lret out pop dec test dec dec mov lahf (bad) push mov pop std sub movsl (bad) aas cld das cld xor iret mov iret jmp cld (bad) aas idiv ret cld sbb (bad) decb iret das es (bad) cli (bad) cmp divb in (bad) jnp jecxz in jg pop out jge pop cld rcrl xchg cld iret stc outsl lahf in push cld sti mov out cli iret mov (bad) stc stos lods fbld (bad) std xor loop stc dec scas xlat call (bad) (bad) addr16 (bad) sti fistpll decb push pop idivl jge outsl std mov das aam (bad) cld (bad) pushl das mov sahf cld out cmc outsl ljmp pop std out clc push ds out lcall aas daa repz stc (bad) popf jg aas stc jne or mov incl or negl scas cmp arpl push cld lock jno ret jg pop std push jmp pop mov aad out jle cmp inc mov aas std xchg aas lcall lret ror in sti sar mov idiv pop std (bad) sbb repz testl daa dec (bad) std ja sbb iret incb pop (bad) cli (bad) aaa sti paddd fbstp daa (bad) mov enter sub aas sar cld divb out fistpll dec push jg outsl sbb imul sahf (bad) clc ret (bad) mov ljmp lods jle jg das stc mov pop mulb push mov mov jmp (bad) mov lods pop jl stc (bad) (bad) aaa fnstcw jmp mov mov sub dec repnz push cld cld aad lahf cld stos loope ljmp stos lcall addr16 mov aad stc fildll ljmp jg jg aas jmp aas repnz decl (bad) aas lock stc lret decb les mov aas sarb int3 (bad) (bad) std xor lahf dec call dec std clc aas (bad) (bad) pushl repnz (bad) mov inc jg (bad) repnz jg lahf push adc aas out pop clc insl jle mov jnp push push (bad) fstps sarl jle fsin aaa (bad) stc aas cli lret (bad) mov out incl (bad) fidivr cmc jg lret pop lret cli cmp daa aas icebp cld das (bad) cmc jle repnz decb scas (bad) js out std cltd mov jecxz js (bad) ret (bad) mov std das sar pop repnz pop cld xlat cld xchg ljmp mov fistpll push cld icebp jmp jg (bad) mov idiv insl iret mov fstpt jmp (bad) mov add mov std mov pop (bad) aam enter ja (bad) jmp sarl jle mov loop clc or (bad) fdivr mov jg fnstcw jg into aas negb (bad) sti jg pop lock lock fcomp (bad) ja out decl lret mov stc pop std xlat (bad) cli dec dec inc out cmp mov jg mov mov cld rcrb call pushl aas repz leave xchg dec outsl push (bad) shl dec daa (bad) (bad) lahf icebp out rcr stc pop (bad) scas mov std int3 das (bad) jecxz xchg das pop jl fidivr jno stc (bad) cld xchg mov cld dec cld stc (bad) fsubrs pop jle lret pop cmp (bad) cld mov sbb adc jg incl in idiv sti jg aas js iret (bad) jns fsubrp pop out fnstsw (bad) out aas imul and pop jge idiv outsl pushl sub jmp pop mov decl sbb fucomip aas cld aad into ljmp ja cmp xlat ficomp cmp cmp (bad) pop ljmp jge xlat sti pop jg aas repz cld imulb (bad) daa (bad) sti pop out jp xor out xor out jecxz in aas cld sub (bad) jg lahf clc jnp lret mov pop repz (bad) fstpt psubq decl negl sub in push pop push cld jno cli daa dec (bad) out mov cld cli lret icebp pop repz (bad) (bad) sti (bad) (bad) pop cli sbb leave aas sti xchg std mov out aas out push std inc jg scas stc (bad) std orl arpl hlt lahf lock (bad) jecxz iret (bad) out enter repnz jmp (bad) jns sbb hlt out (bad) addr16 popa mov (bad) mov call mov call jg xlat decb call outsl jle (bad) cld ror jle mov jg fnop cmp (bad) call (bad) jnp std push jg fisttp sti pop jge mov mov jg out mov (bad) sahf (bad) loop out mov adc ljmp enter pop std or fdivrp mov or mov mov std (bad) cld in jmp fisttp lds jmp mov (bad) cld stos mov das std dec jg in jnp in pop nop cld decl cmpsl std fisttp (bad) das (bad) jge enter repnz stos jg (bad) clc mov pop mov (bad) dec std in (bad) jg das cld mov jg negb into push (bad) jns ljmp mov (bad) adc cld (bad) (bad) dec cld stc call sbb testl sbbl std dec jle sarl dec jmp scas (bad) push into pop cmp (bad) jmp (bad) jg icebp pop in out pop dec cli xchg repnz mov mov call (bad) ja mov sbb sbb sti pop std inc idivl inc jg push fwait cld xor dec leave lahf idivb mov test repz sbb cmc or mov xchg std xor incl aad std fwait jle xor in dec sbb xchg lds out and mov pop stc dec xchg (bad) dec inc cmpsl (bad) jmp imulb leave mov jno das jg aas repz (bad) ljmp jmp mov popf push out cld pop jle cld iret (bad) jle lahf mov std xlat pop std xlat jg jg cmp cmp pop imul (bad) aas imulb incl (bad) mov iret incl hlt push std push stc xchg and jg clc mov loop std fnstsw pop mov mov out cli mov mov push mov (bad) out fnstsw xchg cld lret jg in jmp (bad) in aaa clc jmp jle out std pop push pop stc lret (bad) mov sti mov std call decl cld sti out mov aas icebp aaa stc outsl jle pop sar inc mov imul jge pop lcall cli jmp decl std repz loop jg aas sti jg and inc fcomip mov ljmp jg lahf push cld inc daa repz pop and fbld (bad) (bad) jg mov cld repz mov into mov call dec scas ljmp rcrl mul cld jne sti hlt das clc out jg pop pop (bad) std or sti addr16 incb ja hlt aas add lcall or (bad) xchg jg cmpsl jg aas hlt jg sbb pop jl cld notl dec (bad) fnstcw mov aas lock lahf lock call jle ja xchg mov pop (bad) fldenv in pop repz repz xlat pop xor (bad) (bad) xlat clc mov xchg jg outsl jp xchg push jmp in (bad) xchg fcomip out stc xor jmp fidivrl cli aas sti stos jle xlat (bad) clc fcomip arpl pop (bad) iret (bad) mov jmp aas std mov jge aas pop jle fldcw pushl fwait cld add negb mov neg lcall dec pop idivb inc ljmp out fnop sub enter pushl adc pop incl xchg std sarl lcall incb mov lock std lret aaa inc cld repz decb sti mov lahf xchg stc sti adc insl (bad) rcrl insb std xchg fcos and dec in (bad) (bad) sti mov std stos mov incb pop cld push jg lahf jno stc (bad) (bad) xlat mov (bad) pop pushl jg in cmp insl jle jg aaa ljmp jle jg outsl sti cld (bad) (bad) mov das ja in (bad) out xlat dec aas stc into mov pop decb jmp outsl dec jg pop cli push (bad) insl addr16 and mov jae aas jmp lcall lcall sti xlat cld mov daa (bad) fwait lcall mov pop incb (bad) mov dec fdivrp cmp loopne cmp std jg xchg stos std jnp jo mov cmpsl fild mov inc scas repz mov das cld (bad) fdivr out (bad) cld mov (bad) fucomip ja (bad) incb jecxz clc imul fnstsw ljmp hlt idivl div pop cld std (bad) in pop cld lret jle inc daa pop mov (bad) push mov std es fistpll mov jle jg xlat fwait call (bad) pop jg jmp das dec jns cli (bad) cmpl cli out nop decb std fistpll call jmp iret (bad) and mov lcall int (bad) jg imul jg stos lahf pop (bad) sub (bad) das mov lock (bad) out (bad) incb mov (bad) (bad) clc in cli ficomp and push addr16 das clc pop iret decb das fdivr jnp jle (bad) dec (bad) clc scas (bad) jge jg lods (bad) (bad) out cli mov aaa dec scas pop pushl sarl cmc jg ja sbb cld (bad) aas std iret jnp jnp inc (bad) std scas idivl push cmc push fistl inc jg cli (bad) std out scas idivl decl aas (bad) hlt aas call mov in repz std xchg cld push fistpll sub jg mov inc jg iret stc push sub pushl jge stc out lock fwait pop mov (bad) (bad) mov std (bad) std movq aas hlt (bad) cli xor jns jmp pushl dec aas enter jg xor stos inc lahf sbb inc jg daa (bad) jmp jmp mov add icebp fistp std cmpsb (bad) inc pop (bad) fwait xchg inc mov (bad) mov out decb lret incl loop stc pop cs jg pop (bad) xlat cld out stc lahf bnd sti add lret (bad) mov loopne ss test jecxz jg jmp mov pop (bad) repnz cld pop std (bad) xchg jg sti push lahf sti or xchg das jle stc mov cmpsl decb jg outsl sti jmp int out out aaa stc jecxz mov jmp enter out cli fucom scas (bad) rcrl call decb lcall lcall jg out dec stc imul (bad) outsl dec idiv mov cmc aaa clc dec jg dec clc jmp sti (bad) dec jg jg sti cld in (bad) (bad) pop (bad) fstpl jl pop sahf std sub (bad) mov pop movq in aas dec clc ljmp cld fwait sar cmc out idivb subl sbb lcall aas cld gs std jge out inc jg pop cmc jg cld icebp or mov icebp aas jns scas cld xchg (bad) pop cld cmpsl call fcomip in mov mov loopne outsl hlt paddw aas std cmpsb in lock std out cld outsl stc xchg repnz out aas std loop mov imul sti jecxz fwait mov inc pop std in pop std ret jg (bad) pop int fcomps cld ficomp dec stc lcall inc jl pop cld or das (bad) std lcall decl jg std mov loope std sbb mov (bad) stc mov inc out (bad) daa (bad) lcall cli scas (bad) jmp cli pop clc inc push cld sbb fcomip mov xlat inc dec fcompl negl hlt into mov out sti dec mov cli push inc (bad) (bad) cld aaa out jge mov imull call call ja les popf repnz jg pop cld xchg aad notb addr16 imul cmpsl icebp lret jmp fistpll (bad) iret std repz out std sar (bad) fucomip loopne cld mov mov sti sub sbb sbb outsb push (bad) cmc (bad) cli iret cld scas incl cmc iret pop jmp mov jmp cmc jg in (bad) xchg jmp jg push arpl mov in call (bad) mov outsl movsl cld stc cmpsl mov pushl jmp jg cmp dec (bad) clc (bad) arpl rcrb std mov scas xchg pop std pop jl pop push dec dec int3 jmp xlat pop cli sti cmp pop stc iret paddd aas repnz lcall (bad) pop clc mov pop lahf std cmpsl pop std mov dec fcomip (bad) dec jg outsl clc jmp (bad) clc cmp pop cmc mov jle imul in idivl call ret frstor aas jge lds mov cld mov in mov dec incl xlat cli idiv xchg out lahf incl jg pop idivl incl jg jg adc outsl jle jg insb std pop negb jmp std sbb cld xlat push (bad) repz outsl jg mov ljmp ja stc mov stc xchg clc cmpl jecxz cld xchg movq outsl mov mov call lea mov lods mov nop push in scas std cmp idiv sarl jg scas icebp cli aas clc fistpl incl inc iret cld add jg das decb mov paddw call das sti lret iret rcrb jl (bad) pop jmp push std push jg aas icebp pop (bad) out (bad) fsubrl dec lcall iret jbe lea stc outsl std jge into call xor mov cltd push jecxz and in pop std jl (bad) xchg mov jg cmp or fwait mov dec jg iret std out dec mov jg jg out stc loop push lahf lock (bad) out xchg aas icebp jg std std push dec out mov and cld rcr outsl decl les jmp jg lahf notb dec stc jmp loopne cli or xlat std mov decl mov mov (bad) loopne mul (bad) jg pop cld bound decl mul pop addr16 fbld mov jmp cli repz not popf jg scas sti inc ljmp push aas addr16 jecxz ret pop ljmp repnz cmp (bad) ja (bad) out mov out mov lahf fistp incl lahf dec aas loope std repz aas lock cmpsl push dec push mov std (bad) lcall jg pop clc mov out ljmp (bad) sti aas inc (bad) das jmp jle fstp jne inc std imul std aaa decl sti (bad) stc (bad) std add fcomps aas cld mov aad cld out jl inc mov (bad) adc ret aas icebp aas std ja pop lahf xchg push lahf cmc xlat std dec xlat (bad) out (bad) stc adc out imull fidivrl mov mov jg loop call enter jg out clc (bad) in addr16 decl xlat jg mul iret clc xchg incl insl incl mov hlt xlat call shrb mov ljmp jmp (bad) cld (bad) pop aam pop outsl lcall in ljmp pop lcall sbb cld scas decl repnz fidivr xlat (bad) movsl jg lods jg pop jg pop incb cld inc incl push outsl notl mov jne pop decl fstps jg out lock (bad) fidivr pushl jg pop cld (bad) jle jmp jg pop cmc xlat std pop aas repz std test (bad) js idiv lret jle mov jg pop mul ja pushf (bad) aaa jmp (bad) fcmovnu repnz jns xor fldcw (bad) (bad) xchg (bad) cmp call stc outsb repz std cmpsl jg fnop scas std pop cmp loopne and sti ja jg pop aas clc das jg icebp pop repz jmp std iret lcall pushl sbb scas pop cld es pop (bad) repnz sti pop jg std iret jle aas clc sti fdivrp (bad) (bad) mov cmpsl (bad) push mov xchg aas cli and iret cld (bad) out jae aas std shll jg and lds add out std mov cld leave ret pop out jno div das jecxz fildll call (bad) mov out sti lods (bad) nop jmp xlat std imul dec fcomip inc cld (bad) jg in jle (bad) cmp pop cmc pop call aas in (bad) jl xchg mov cmp cmp cld ja enter dec jbe es fcomip fwait call jmp aas stc mov cmpsl fucomip decb pop sti idivl aas cld sti into inc out pushl std push jg lahf cld push lcall shr out aaa mov jg das cld xchg mov jae repnz cld lods sahf (bad) popa pop std sub dec in stc or es pop hlt jnp clc mov ja divl jl mov jmp mov mov loop (bad) jge (bad) mov (bad) out rol jg jmp (bad) out out fcomip dec (bad) hlt outsl idiv std int3 lahf jp aad (bad) jmp stos fcomip jg pop (bad) xchg pop (bad) jg fucomip out lahf sti out pushl mov leave jg inc dec outsl cli mov fdivrs jg jg scas stc cmp (bad) std std jg pop lock leave lahf repnz (bad) jge icebp out pop (bad) setg xchg das jle jg xlat mov (bad) ljmp cli out ja test std stos mov cli aas cli push test aas cmc pop (bad) push iret jg jg aaa and aam mov out psubd call jmp aas in mov aaa (bad) das cmc lahf lock clc add lahf cmp sarl aas clc cmpsl (bad) mov std mov clc psubb fwait jg scas jmp daa (bad) std mov clc das (bad) mov jg mov lret ljmp inc push mov jmp outsl jl or xlat pop (bad) out scas clc std mov scas cmc cmpsl cmp xchg aas clc fcos div cld cmpl rcrl jmp aas std cmpsl (bad) cmpsl (bad) aaa stc (bad) les scas mov jmp cld jecxz jle (bad) (bad) loop out cmpl outsl push repnz addr16 mov int mov decb stc (bad) cld cmp pop jge fwait xchg std (bad) idivl scas icebp sbb (bad) in out (bad) cld mov (bad) stc out jne fdivrl fwait (bad) push dec fcomip sti incl sti aas inc (bad) aas js out std mov incb sti (bad) cld stc std xchg pop mov stos pop sti das incb cmc lahf std es jecxz ljmp psubd hlt xchg mov pop std mov lahf cld pop (bad) jns lahf (bad) cmpsl jg (bad) sub repnz (bad) (bad) (bad) movsl jg cmpsl (bad) fsubr (bad) (bad) ja scas mov out inc idiv ja cld outsl (bad) jge iret (bad) decb pop (bad) fisttpl clc iret pop push (bad) arpl pop clc sti incb mov scas inc jg iret stc jmp (bad) cld das clc mov aas out cs hlt jmp xor daa movd in (bad) (bad) (bad) xlat into das adc std cmpsl sahf std add fbld loop lahf sti mov test jg in clc decl (bad) mov pop (bad) cmpsb outsl jg jmp outsl incl (bad) out das std dec xchg std lret mov decl jg lret jmp addr16 paddd jg pop jg fcomip (bad) (bad) xchg mov cmc fwait jl in repnz sub mov scas (bad) aas sub lods (bad) jg pop lock (bad) das jle fucomip cli fidivr jb cli pop cld and loope std stc pop cmc (bad) inc jmp jg push inc fistp clc iret (bad) cmp (bad) cld (bad) std scas sahf (bad) outsb pop xor dec jmp fcomip aas cld cmp dec repnz cli xor std daa (bad) (bad) lcall cmc jle incl outsl std imul fcomip scas clc push inc jg in (bad) pop jl ja movd aas imulb call xor stc dec cld ret jg pop hlt lahf mov (bad) fcomip fnstsw fucomip pop sti lods mov fdivrp mov decb aas call daa cld dec les jg idivl jg aas sti sti incb xchg cmp pop jle jmp jecxz sbbb jmp fdivr sbb test cld xlat fcomip pop (bad) out lcall fstpt mov push sti fwait (bad) sarl pop (bad) decl mov jg out repnz decl cli addr16 mov leave lahf sti idiv sar lahf neg (bad) push (bad) fidivr lock std ret lahf mov sti daa sbb clc cmpsl ja movsl iret pushl lret cli icebp leave (bad) jg (bad) mov jg das inc (bad) std psubq lds pop cld out outsl jle jg out (bad) and mov fucomip aas (bad) outsl inc call cld idivl ljmp call mov push mov (bad) stc push out pop cld dec mov (bad) call mov jg sbb loope out cli mov ret mov and icebp jg cld ja dec jg aas pop repnz push fcomip mov (bad) mov mov idiv cmp aaa test decb stos (bad) fidivrl idiv sar xchg scas clc sbb (bad) jne aas mov incb paddb (bad) mov push jle sub scas mov xlat mov std cltd jg fwait pop jmp ja gs das pop nop incl ja std outsl lock jle pop jl jecxz std cmp (bad) jbe (bad) lahf cld ja pop std jmp sub (bad) (bad) ljmp (bad) jmp push out stc pop movswl imul lahf icebp inc (bad) out jg mov pop std repnz sti push lods pop inc call jmp cmc pop std push jg pop repnz cld inc mov incb (bad) (bad) clc aas in outsl and sti mov push dec scas push sar xchg jg fbstp ljmp lret mov pop call jg pop daa mov arpl (bad) in fimul lahf lock std in icebp scas icebp daa push cld hlt inc incb ljmp inc pop fnstcw (bad) fistpl stc push mov pop mov pop jg pop clc out call mov aas hlt outsl cld iret (bad) stc fcomip dec cli xchg mov inc das imul lods (bad) mov jg daa jmp mov (bad) fwait jg xchg mov idivl (bad) fldcw (bad) xchg fs jg (bad) inc incl stc call imulb mov xchg stc scas jge (bad) mov (bad) jmp (bad) sub icebp push lock jg fbstp stc sar lods mov inc jno in stc popf scas decb mov jg fucomip fisubr hlt idiv mov jecxz cli daa push mov (bad) (bad) repz stc out pop mov (bad) pop ds (bad) push lret cmpl jge jg lahf ret (bad) cld mov decb cli (bad) push in cld addr16 jmp sarl loopne (bad) stc xor mov (bad) jmp mov (bad) pop jno addr16 mov cmc jg aas imull aas icebp icebp out icebp lret incl sti or jg addr16 ja fdivrl (bad) arpl jg mov scas fbstp jmp pop rcrb call jg cli das sti iret jle pop inc inc aas idiv aas hlt decl mov into (bad) jg pop lcall cmp into jg scas decb dec jae iret inc mov (bad) dec mov incb int (bad) fsubrp cli cmpl (bad) xor icebp adc loop into aas stc lret lcall hlt pop cmc push jg leave aas xor jecxz cld mov outsl mov pushl xlat stc mov jg aad lock lcall jmp insl incl mov mov (bad) decl out std data16 addr16 out in pop ljmp idiv mov stos fucomip scas cld xor out (bad) pop cld gs (bad) clc (bad) movsb aas jle add icebp mov clc leave jg mov cld jecxz std (bad) jle (bad) (bad) out sti lahf pop jl jmp jg aas jmp jle mov inc out (bad) mov lock aas divl decl (bad) in stos aas pushf (bad) scas sub fldenv sar (bad) push ja xor jnp mov (bad) movsl jg das cld xlat pop cld sbb sti cmpsl mov fcompl hlt out pop negb mov mov (bad) jmp mov jns pop scas enter dec (bad) call sarl idivl cmpsl call outsl out jle std jg xlat std rcrl sarl cld adc xchg decl (bad) cli dec (bad) loope xlat mov loope mov out xor push (bad) jbe loop,pt aas in clc stos decb sahf gs jg daa stos aas (bad) cli (bad) sti mov fildll cli jecxz mov imul lahf cld xchg mov icebp stos aas in ds das pop std mov xlat scas ljmp das jg leave iret outsl cmc pop cld pop jg cld setnp xchg jle icebp out cli das (bad) (bad) call icebp iret (bad) outsl sti mov stc outsl jle pop negl (bad) cmp idiv clc dec stc lahf pushl xlat stc imul aas std jmp (bad) jg mov (bad) dec (bad) mov loope call aam mov jnp jmp clc jmp outsl inc aas xchg out call incl (bad) pushl mov out std outsl mul (bad) hlt outsl repnz lahf (bad) lahf (bad) das (bad) in outsl sar sti (bad) out out stc imul (bad) in fcomip cmpsl jle stos dec pop (bad) fnstsw scas (bad) (bad) (bad) ja cld std jecxz ljmp clc idiv arpl out stc mov or mov dec inc aas neg mov mov scas jg mov mov out pop mov (bad) in nop fist xchg das decb jnp fsubrs (bad) jg lods pop out (bad) lahf jg fcomip and in clc pop dec pop lcall (bad) cld arpl fild sub std pop repnz ss pop negb (bad) mov repz (bad) outsl clc popf jg ja (bad) cld pop clc cmpsl mov sti fcomip idivl fucomip mov std fidivr mov repnz xlat lcall (bad) incl cmp mov lahf (bad) adc jle sti pop and (bad) (bad) pop incl pop aas xchg cmc repz sti (bad) (bad) repnz (bad) idivl out das stc jae out hlt cmc pop mov push lahf cld addr16 sbb repz sti scas cli outsl dec aas cmc ljmp incl repnz stc (bad) aad hlt lock popf into jg aas std xchg mov xchg cmpsb outsl jg fcomip (bad) cli lds movsl jg pop sti iret fdivrp xchg (bad) fcompl pop jge xlat scas pop out cld mov pop std mov dec repz (bad) mov dec std fisttpll sti pop (bad) mov dec lahf clc leave pop ljmp lahf jg xchg std mov rcr sti insl icebp pop (bad) in clc stc pop cli sub pop call in sti jg fcomip lahf (bad) daa (bad) in outsl fdivr (bad) out mov in aas mov lcall (bad) mov (bad) mov lahf cld arpl fbstp dec std call mov rcrb cli fwait mov xchg jg pop cmc (bad) (bad) jmp (bad) mov div clc inc lahf (bad) mov pop jg idiv inc (bad) jmp std call (bad) fstpt ljmp mov sbb xchg fdivrp mov (bad) xchg (bad) sub decl (bad) aas negb mov mov scas std sbb decb out jle xlat (bad) adc fstpt mov hlt aaa jl std arpl push jg outsl cmp incl sbb mov int cmpsb mov incl arpl in jg lahf mov out dec mov mov test pop (bad) (bad) test mov clc out negb pop std lods mov adc cwtl (bad) fistpll cld mov fwait jg (bad) inc jg mov (bad) xchg mov (bad) fdivrs (bad) (bad) cmp out fucomp (bad) lcall outsl fildll aaa cmpsb fistp out decl aas jle aaa pop std lods mov (bad) stos jg loope jmp jg sub mov cld loop fsubp cmc xchg mov clc popf jle jmp scas cld (bad) mov cld (bad) pop cmp sar enter cli and in mov jmp sti cmp sbbl imul clc loop sti cmc sbb mov sti fwait (bad) (bad) fldcw dec (bad) repz int3 sti mov pop std icebp jmp pop negb incb cmp std adc xchg fstps mov jo stc inc hlt paddb jg hlt dec jmp mov (bad) cmp cld (bad) jle mov fbstp jg pop es aas icebp lahf std lods jg mov lods jg mov jnp lods aas in cli (bad) aas cmc mov jg out jg or iret (bad) call xor in lahf sti js inc (bad) jge aaa int cmc addr16 stc (bad) out aas sti sti (bad) mov mov sbb aas notb sbb (bad) lahf idivl std out in scas jle (bad) sub pop sti (bad) scas (bad) test jge mov icebp aas (bad) cmp scas jg idiv aas inc aas loop sti in insl jle aas xor jle fucomip aaa std shrl lea (bad) push push lcall jecxz xor incl outsl mov jnp lods pop decb mov cmc outsl cld pop mov and push call (bad) lcall mov decl mov (bad) idiv cmc das jb decl pop cld mov notl std mov std scas std xchg call jle pop (bad) sbb stc jg jg inc mov call ljmp loope jns jmp pop lahf jge (bad) jnp (bad) pop cld cmp sarb (bad) std mov in pop icebp out negb out pushf mov lahf cld mov mov (bad) fistp aad aas mov lret aas stc mov sarl lock (bad) pop jle out mov dec inc pop cld dec (bad) clc pop sti out lcall out push mov pop lahf cld in (bad) out outsl std scas (bad) out push (bad) jg jb cmp (bad) jg daa mov pop sbb sti push pop in pop pop (bad) jmp aas fcomi sar popf aas jmp (bad) call jmp outsl std stos (bad) ljmp movsl mov (bad) cli push jmp mov fstp jmp cld test mov (bad) notb call jg das mov fsubr incl pushl jmp scas (bad) fidivr (bad) (bad) xchg lock mov mov outsl std stos (bad) fnstcw hlt aaa cld lods jg std cmp movsl jmp out std out std lret mov mov das inc jg (bad) std mov out repnz lahf clc aad mov mov hlt pop cmc mov mov lahf pushl (bad) ljmp (bad) ljmp cld lret aas stc fnstsw jg lock incb jg fucomip ja (bad) dec jmp clc sarl mov arpl icebp (bad) ljmp idivl push pop std mov cs mov pop jne sbb sti (bad) cld in iret dec aas stc pop mov lahf cld in mov (bad) out idivl mov aas std pop (bad) fucomp jg (bad) std cmc push pop icebp out movsl mov inc jg push jg idiv aas cld lahf std inc push mov pushl xchg das std in mov decl xchg jg stos jle jg jo outsl sti jne scas (bad) (bad) jnp negb (bad) std jmp push aas jbe lahf std mov (bad) dec cld lods jle mov mov ret aas cld lahf std ficomp mov mov lahf pushl pop (bad) ljmp pop mov (bad) fdivrl aaa cld xlat (bad) int not std mov jnp in repnz ljmp stc pop jmp jg dec cld mov loop std push jg (bad) scas std sub fidivr rcrl dec jle xlat sar dec jg (bad) test cmc mov xchg (bad) ljmp ret push out stc jne scas shrl lcall push stc fstpt jg scas jns (bad) pushl sub fsubr push mov aas cli stos mov xchg mov lret pop std mov mov repz in in mov aad sar dec inc out jo pop aas cld gs loope (bad) fisub jg (bad) notb out cld xchg jg lahf sti out hlt mov outsl stc ljmp cld lahf std pop call call outsb std pop (bad) ljmp jmp icebp (bad) decb repnz (bad) jmp clc pop jle fucomip pop push (bad) fdivrp clc sti in jg mov iret decl mov jg out (bad) xlat decb outsl jne xchg mov lock mov mov lahf pushl cli push pop cld pop (bad) decl (bad) cld mov aaa (bad) xlat movq (bad) jmp pop jg idiv out std lahf (bad) (bad) push (bad) cld lahf decb (bad) (bad) fcomp jecxz call popf jg mov mov iret (bad) lock scas std jmp idivb lahf std idiv repz mov cli push pushl clc jecxz cli ja out mov hlt aaa cli xlat movq mov (bad) jnp loop dec clc pushl cli das (bad) mov arpl stc out jle lahf sti das decb sti pop sti aaa (bad) jno std mov cld lahf std mov mov out mov pop lahf call mov dec jg mov aas std xchg (bad) in cld mov (bad) cmc ret out movsl (bad) jg sti (bad) gs in std pop mulb repnz pushl clc jae out (bad) (bad) fidivrl out std add aas cld lahf std sti call mov call (bad) cld mov pop std pop sar mov jecxz imul loope and aaa and (bad) (bad) jle jg iret pop loop fist inc (bad) (bad) jns lcall and incl mov lcall in xlat call (bad) push pop aas icebp mov fbld std stos jg (bad) std jnp dec lcall (bad) fstpt call (bad) ret (bad) fnstcw (bad) fnstsw cld (bad) iret (bad) fcmovnu repnz lods jg fcos je sbb sarl ja jge movsb mov lea lock std fwait jle fucomip (bad) std clc (bad) negl mov call lahf decb (bad) std jmp out sarl (bad) cltd jg push jg pop paddd jg scas cmpsl idivl jp aas movsb idiv inc jp pop cmpsl idiv pop jp cmpsl idiv ret hlt (bad) idiv push jp mov pushl clc push cld mov mov pop cld aad sti fucomi sar jg int mov mov stos (bad) out fcomip sar ja jecxz (bad) jg lock cli call lcall dec (bad) jmp xchg icebp (bad) in jmp lret stos mov jecxz lea aas jecxz cli imul aad clc inc (bad) clc pop xchg pushf incl dec stc addr16 (bad) push cmpsl (bad) std (bad) das pop into incb iret jg call stc mov (bad) rcr mov out loope idivb sti mov jmp jle ja add push push std pop repnz (bad) mov jecxz test nop aas cli (bad) das jle pop call scas cmc out pmaxub mov stc fwait jmp aas loope mov mov (bad) lahf testb orl fistpll out (bad) pop std sbb sti ljmp mov mov outsb push pop testl outsl fucom push imul leave lahf mov pop aas out pushl cmpsl push fcomip sti std outsb mov jle cli mov std leave scas icebp ljmp pop cld das (bad) (bad) (bad) sarl mull decl cmp outsl ljmp xchg scas fwait aas (bad) fistpll jmp cld fucomip aas jecxz std clc or pop jg daa (bad) ljmp jl clc imul mov (bad) (bad) xchg mov std xchg jg jg pop pushl int (bad) sti incl (bad) idivb jb mov xor sti jg pop stos incl (bad) cli mov aaa call repz sti (bad) mov das mov leave (bad) (bad) clc cmp jle clc aas std mov sarb jmp jg aas loopne pushl (bad) fsubs inc addr16 outsl (bad) cli pop (bad) fnstsw lahf negb scas repz (bad) mov paddb pmulhw jg (bad) ljmp jmp jg leave out jne mov mov cmpsb mov aas repnz jg mov (bad) mov mov xchg (bad) fcomps jg dec mov jg pop std out push jg fwait jg pop negl das cli idiv andl ljmp jns paddb int stc ljmp daa (bad) mov sti outsl push (bad) jmp aas out jnp ret pop jb jmp mov pop repnz (bad) cmp jg repnz clc mov stos mov fwait cld pop jg pop repz flds int lock stc sar cli mov (bad) pop std jecxz hlt outsl js das std push sarl mov aas jle jg outsl cmp fistpl idiv idiv out call fstpl shrl pop jmp push ja ja fsubp jg (bad) (bad) imul mov sub std gs jg xchg cld mov ret aas (bad) aaa incl fdivrl repnz mov cld movsl (bad) aaa jle pop aas sti cmpsl pop cld mov icebp mov jg outsl std stc jg shrl cmc jg popf cld dec inc jg pop cli pop cld imul stc aaa cld outsl mov pop sti and sti cld aas std paddd call repnz adc in aas cmc (bad) (bad) aad (bad) iret in sub mov jg out test fistpll lock pushf (bad) jle jg lahf jg out clc pop jg fcomip idiv sub in icebp ja push (bad) fmulp pop decb xchg jmp cli rcrl jmp pop std addr16 add std pop jg aas ja pop cld stos das sar out sti mov jns addr16 das std add out cmp (bad) mov lahf cld (bad) inc mov sahf inc pop hlt (bad) jnp loopne cmc pop std into jg pop lock (bad) xchg pop mov dec std and iret (bad) scas int divb jnp xchg xchg jg jg jmp into mov dec fnop cli int xor xlat dec (bad) sti jg fistpll dec jle sbb aas xchg mov lods jle (bad) pop push out jb scas std sbb fistpll outsl stc scas jg mov mov inc jmp pop sti xchg mov loope insb (bad) xchg aas insl idivb in jg jg pop lcall jg jg in outsl clc call (bad) stc mov push xchg insl addr16 xchg in (bad) aaa std stc (bad) (bad) mov outsl jp lahf jle decb jg pop pop std stc inc outsl hlt cmpsl std scas jg out clc cli mov paddd mov jg (bad) pop sti stos jg cmpsl incl scas (bad) mov out xchg in cli icebp out div (bad) callw in (bad) aas imul cmc paddd mov cld (bad) mov fnstcw fstpt pop stc dec (bad) sarl fdivrp clc out std imul popf jg iret sti xchg (bad) sti aas ljmp mov negb (bad) std out cli das clc icebp pop jg fnstsw inc std out cld jmp hlt mov lahf cli (bad) outsl cmp dec dec aas repnz (bad) jmp std hlt mov ret mov stc jg scas (bad) jmp in (bad) scas jnp iret lods jg pop decl (bad) mov mov jg iret (bad) cmp cli fwait (bad) jmp push ljmp jmp cld mov lcall fmull xor out mov imul aas hlt mov loopne fistp jg out fnstsw das jl call pushl cld pop idivb cld push (bad) ds pop jmp mov lret scas decb (bad) (bad) out cld or ljmp push jmp mov dec jmp jg jg scas jmp pop icebp out repz in mov cld mov (bad) (bad) in lahf std out push inc fcomip vmaxpd xchg pop push jmp in pop clc bnd or idiv in cld mov mov out xlat dec cmpsb (bad) lods aas clc fcmovnu sti aas (bad) loopne pop out ljmp jg scas cli xchg repz sti dec jmp out ret (bad) icebp jg scas stc dec (bad) repz (bad) xchg mov daa std aaa jg lcall lret sti das jle jg pop adc cmc leave fistpll jg das dec jg (bad) clc addr16 cmp jg fnstsw (bad) mov stos jle ja mov pop (bad) jg mov dec (bad) out aad (bad) (bad) inc std daa inc fcomip sbb cld arpl (bad) into inc mov idiv out jecxz fcomip aas sti inc mov in cmc jg mov cmpl jge (bad) (bad) jns jmp pop pop insb addr16 fldt cld xchg decb sti incb idivb pop jl (bad) aas (bad) adc aaa decb push fcomip mov scas incl fcos aad mov lods pop hlt cmp into daa jmp sar negb clc fwait mov cli loopne cli rcr cld inc jg pop cli (bad) (bad) hlt das mov jg outsl mov aas cmp mov jnp xchg lahf clc aas cld pop mov lret repz std pop cld sti (bad) scas in out decl jg jmp mov (bad) pop lahf mov cld xchg aas clc sti jmp (bad) in mov pop lret ficomp cld push inc das clc and pop (bad) jnp pop (bad) aas decb mov hlt mov dec xlat cwtl mov cld loope fcomp lock jge cmpsl cld ljmp (bad) push hlt decb cmp repnz pop clc jmp pop (bad) jns out lret sti (bad) cld (bad) clc jmp (bad) jge lret aas out dec std adc aas ljmp std (bad) jg aas sti jmp xor repz xor icebp mov mov dec iret jmp push scas cld push jle das clc aas xchg jecxz stc jg pop jge btc in fstpt lock addr16 (bad) (bad) out (bad) aad lds jmp mov in cld fcomps jmp push (bad) cli out stc xchg xlat leave (bad) jnp pop mov out cli lret jmp mov (bad) mov std push das movsb cld xlat mov cld pop (bad) sub repnz mov sbb sti jecxz loopne inc jg pop cli addr16 das clc add scas fistpll das incb in (bad) sti (bad) sub hlt pop jmp das ja dec aas out (bad) (bad) out pushl fwait (bad) fstpl imul jg fcomip sub aas xchg pop lcall (bad) push sarb cli and mov ja stc sti cld lahf clc mov cmpsl (bad) cld (bad) jmp pop insl ljmp aas clc sub lock outsl dec jle jg scas decb loope testl idiv das jg lret aas out in mov jg and cmc jg,pn mov jg stc outsl hlt dec decb cld push inc mov out scas jge cli mov cmpsl (bad) mov or out incl mov lahf cld out dec jmp in testl sarb xlat std mov cmc lds mov clc imul (bad) cwtl pop notb pop jg pop jg inc jmp ljmp jg lahf sti aas inc lret jg addr16 xor psubd (bad) scas movsb stc pop xor aad negl dec imul leave jg mov (bad) cmp aas dec mov dec jg (bad) clc (bad) (bad) cmp mov (bad) (bad) xor jg scas cli xchg mov lds cli ja xor sti jg idiv xor jg (bad) clc scas jle call in imul cld cmpl in clc xor (bad) scas jae idiv ret jmp sub imul std fdivrp pop repnz in xchg push mov add xchg mov (bad) incl fist mov aaa cld insl jg aas sti pmullw jmp lock xchg jg lahf clc daa ljmp jg pop clc lahf aas cmp or mov (bad) aad out std mov mov scas stc jnp dec shll (bad) push mov push xchg std pop inc icebp pop cmc out dec (bad) call insb lock jnp lods pop pop cld jg leave out cmc outsl cld push aad mov outsl std int3 lahf std scas jnp,pt (bad) out lods aas out (bad) pushl icebp fnstsw mov (bad) lds icebp mov movsb mov inc lret aas in mov fcomip aas lcall mov mov (bad) in jg fcomip jg incl loope (bad) sti mov xchg jg idiv mov aad ret fucomip aaa outsb jg pop sti addr16 push (bad) out jmp stc lea aas incb lock sti dec out cld gs sahf cld inc mov cmpl iret std cmp mov psubq (bad) ljmp xchg jecxz lock std sub jg idiv out decl xchg pop repnz pusha (bad) dec fnstsw xlat jnp pop dec jle xchg (bad) (bad) cli pop cld pop lahf (bad) jge xlat out lock std sahf (bad) fmul cld push adc cld (bad) movsb jg cmp out pop mulb mov iret out (bad) fidivr (bad) sarb in mov cmpsl sahf std pop (bad) ljmp jg leave fidivr leave std fcomip xchg pushl in stc sbb repz out std int (bad) sti aad mov mov push (bad) cmp pushl cli sub test cltd (bad) jns incb xchg jg outsl cmc pop jg dec ljmp jg out neg (bad) repz outsl aas cmp out movsl fistpll je dec cld loop out std ret cmp std idivl ds jnp test loop cld icebp mov pushl push mov sahf aas cli (bad) daa aas mov idivl ljmp lahf (bad) sbb jl iret cli or inc dec scas cld or in repnz xchg mov pop imull aaa scas dec (bad) call pop fdivr inc incl aas out stc pop pop (bad) ljmp fistpll xlat cld sbb pop (bad) std pop hlt push sar inc stc imul jg out idivl sti dec mov repnz (bad) pop sahf std jecxz lahf push lahf jnp comiss add (bad) fidivr out cld and out rcrb jle outsl jle jmp mov aad imull jmp (bad) jg idiv lods das ds cmc ljmp idiv (bad) xlat pop out dec dec jle (bad) push mov (bad) jmp jg fwait jg icebp jmp xor jmp jl in decl (bad) (bad) mov addr16 mov int (bad) repz mov jg in lahf lcall jg lahf hlt repnz pop enter mov (bad) stc lahf cld inc jg scas notl jge pop clc and icebp ja and sbb sub mov jg (bad) pop cli mov xchg (bad) jnp jmp mov ljmp aaa sub aas jmp (bad) jnp stc scas lcall aas std pop push (bad) fnstcw mov pusha cld jg jg push std push cmp rcr stc aad cld (bad) adc mov decl cld lahf daa iret (bad) jg pop je mov lahf jg fucomip xchg cld lret idiv dec lcall and push push outsl cli das scas jg lahf clc jnp lds (bad) cld movsl mov mov sti xlat cmpsl jg jg mov (bad) daa dec jg stc out lahf (bad) outsl jg lahf repnz aaa pop ds sbb iret cld ds sti jg pop outsl lea lds lahf repz cld pop aas stc xchg push mov (bad) (bad) (bad) jg push std mov xchg pop aaa aas (bad) outsl jmp in lahf lock or mov xchg cld cld push call jmp adc decl ljmp in mov add mul mov jl jmp sub pop stc aas cld jge int (bad) outsl xchg cld cld lea das (bad) mov lds cmp daa jg out clc jg (bad) dec mov jle fldcw cld jmp mov cli pop mov pushl jg jg iret addr16 push cmp mov scas (bad) cmpsb aas jmp aad mov cmpsl call push jmp pop std iret aas sti js jnp addr16 std sbb (bad) in lods jmp lahf jb hlt jg aaa mov in pop sti mov mov (bad) (bad) fsubrl arpl pop jae (bad) sti call mov outsl repz incb dec (bad) cli push decb in dec (bad) jle (bad) das cld sbb fcomip out jle cli inc jg pop divl inc dec std adc pop bnd into jg mov icebp pop repnz pop dec mov (bad) mov (bad) push cld (bad) jg mov incl fcomip xchg (bad) jle jecxz aaa stc cmp repnz inc jg pop aas fdivrp and movsl mov (bad) sbb jg fcomip ljmp repnz cli stos jle (bad) (bad) pop mov mov idivb jp stos jg mov mov (bad) jge or (bad) jecxz mov jg (bad) in mov xor (bad) jle das std inc (bad) call inc inc fucomip scas js outsl mov icebp addr16 rcrl fcomip push push jg lahf std out fist push outsl jns jmp call repz dec incb dec jle hlt scas ds jmp (bad) std aas (bad) sbb lret outsl push decb mov decl (bad) jmp jg addr16 ljmp jg pop dec (bad) fstps mov xchg jg sti outsl (bad) test cld out (bad) aas into (bad) (bad) cld leave inc lret aaa inc out inc jmp jg mov jg (bad) (bad) (bad) std jns aas jg aas add ret mov repz pop sti outsl in std sbb cwtl mov lahf data16 pop std jecxz jge (bad) jnp (bad) das std pop mov mov loope cld (bad) bsf mov dec (bad) push ret cmp xlat mov ds (bad) mov jecxz cld pop scas fwait aas ljmp pop cmc mov pop in lahf (bad) jg hlt std in mov xlat fdivr pop jle jmp dec cli sti pop cmp cli arpl int3 fucomp std and mov sti sarl mov mov mov jg stc cmpsl (bad) mov mov cmp stc (bad) jmp jg (bad) cld dec lcall rcrl sub push (bad) xchg fildll mov push jl mov icebp pop pop cld xchg jg push ja sti idiv pushf icebp pop icebp aad icebp xor outsl stc lahf cld jae int std outsb call (bad) inc stc addr16 mov pop decb add cmc sti pushl out icebp scas stc jl addr16 adc mov loop and sti fwait (bad) jmp jecxz pop cli jg (bad) call mov jg pop icebp iret std or mov push jg lret (bad) in mov mov fsubrp clc pop popf push (bad) jg (bad) push (bad) jle das mov out sti std call xchg cld sub (bad) movsl (bad) fnstcw mov jne (bad) cmc mov inc fucomip aaa cld (bad) leave (bad) outsl std aaa jg pushl addr16 jmp jg mov stc mov idiv clc mov leave fucomip lahf sti pop cs (bad) std jg xlat stc jne aas cmc lahf incl (bad) idiv push stc outsl xlat js mov in (bad) arpl int3 pop notb cmp fwait (bad) fnstsw xlat dec incl imul lahf ljmp xlat jg pop cli cld jg (bad) aam mov jg pop jo mov call out loopne jg das cli das decl (bad) cmp and jae fidivr out (bad) jmp jg mov cmp sti mov ret pop repnz sar fucomip (bad) cltd (bad) jmp sbb (bad) stc out cld in jg lret (bad) jg xchg mov and sub ret aas aas sti mov lds xlat std in mov decl stc cmc jmp cli jmp test jns fisttpll dec (bad) jno dec ja scas mov xchg rcl xchg pop xchg pop std lret mov jg fcomip fimul jle jg (bad) dec (bad) lods (bad) das clc aas sbb jle dec outsl lcall push aad hlt pop (bad) jge inc sti inc std out dec jle repnz cli dec jle mov dec jle lahf stc mov jg fwait jmp inc jg lahf stc sti lea jg pop mov mov pop std mov out jg jnp mov jnp mov lret jg pop (bad) fcmovu (bad) cld pop std sbb sub pop imull (bad) or (bad) jg lahf lock jg idiv aas (bad) loop loop (bad) mov mulb fsqrt cmpsl (bad) xor outsl imull inc call mov fcmovnu jmp stos pop clc adc lahf divl std arpl ja inc jg mov (bad) (bad) (bad) in dec jge inc pushl out das inc jg ja (bad) mov jg ja sub lahf lock std jg (bad) (bad) (bad) std jmp arpl call sar repz (bad) outsl jle (bad) pop jg mov repnz cli cmpsl (bad) jmp std icebp (bad) (bad) (bad) cld or fcomip cmpsl incb div lret fcomip pop (bad) in fdivrp jno (bad) aas hlt mov nop push mov cld xchg mov cli push stc sub lahf clc (bad) lods jg idiv push (bad) cmpsl pop clc pop lcall ret decb (bad) call std ja lods addr16 inc icebp out xchg jg fcomip lahf std jne mov jbe (bad) mov jg mov pop (bad) cs fcomip cli hlt mov lock cld lds cld (bad) cld iret cld sar scas incl cltd fistpll fnop jmp jg aaa lock (bad) mov xlat (bad) cltd (bad) fldl cld (bad) daa jmp xchg pop stc ja loope fucomip outsl sti xchg mov std mov lahf mov dec fcomip (bad) (bad) shl (bad) stc outsl jg iret clc mov fnstsw ljmp in std sbb cmpsl jmp fcomip hlt stos aas call xlat addr16 mov pop repz (bad) xchg mov (bad) imul ret aas arpl jp pop cld sbb sti cmpsl jle (bad) ja sti dec cld loop stc das stc push incl std pop mov iret lods jg (bad) push aaa push incl paddd aas out cmp lret sub das stc xor call sar out outsl jne xchg jp (bad) mov std scas clc lret jg pop xor jmp scas mov std (bad) jg pop push dec std fistpll mov pop test mov xlat (bad) lcall inc ret pop hlt pop dec mov aas std jmp (bad) repnz cli jne jg ja stc addr16 fdivrl cmc in pop (bad) push cmc clc pop cld repz jle jg jg jne xchg dec sahf dec mov aas in lahf cld adc mov (bad) jg pop mov repnz cld imul lcall in fldcw cmpsl aas std out std cld (bad) scas (bad) addr16 incl stc lret jg mov rcrl lods jg lds outsl hlt aad (bad) cwtl aas jmp mov mov cld mov dec push call decb in das push jg aas aas enter (bad) cld mov mov mov pop ja mov mov ljmp cld push hlt (bad) out fsubrl lahf std (bad) hlt (bad) jg ljmp sar jg popf pop sti aas cli outsl push jnp icebp sti mov mov idiv movsb pop cld lock inc stc std lahf stc outsl incb mov repnz decb scas (bad) fcomip aaa mov idiv mov std inc out hlt mov lahf clc push (bad) out fucomip das jg (bad) scas push ds aaa pushl jnp sbbl stc sbb cmc lahf icebp cmpsl incb cmc lret mov jne clc movsl mov xchg fcomip mov hlt cvtpi2ps pop outsl jle mov lcall pop cld ret stc out lahf and mov (bad) (bad) stc incl outsl (bad) jns cmp push mov incl sti add (bad) icebp scas jg (bad) daa (bad) call js aaa std mov pop cld mov neg outsl div (bad) jmp enter (bad) xchg jg das cli (bad) fwait jg jo loopne inc loope std out cli mov mov loope cld stos mov (bad) (bad) in mov jg out clc pop (bad) jae rorl hlt pop call sbb movsl call cli mov hlt call clc mov sub decb jmp pushl mov mov repnz pushl dec mov jne cld in in dec cld imull pop lcall (bad) decl int sti mov (bad) scas gs negl jg pop cli pop mov neg (bad) pop in cld decl (bad) cld mov stos lcall lahf fnstsw sti decl pop pop cli std push xor mov jge pop fdiv dec popf icebp pushl cmp mov jecxz js pushl push cmpsl jg sar (bad) cltd inc mov out test ljmp mov jg fildll jmp pop cmc stc call sti xor lahf std xchg idivl jg (bad) iret sub mov cli scas (bad) idiv out out psllw iret std (bad) sahf cld cld inc (bad) jmp cld pushl (bad) jnp xchg jg repz repz mov cld xchg xchg jg stos dec icebp lcall inc cld outsl xlat pop call aas (bad) (bad) idiv (bad) out mov mov dec (bad) jg aaa cli lret fistp mov dec insl (bad) (bad) cmp inc insl (bad) mov (bad) mov sub mov imull (bad) out sti imul mov icebp pop (bad) aas jge clc out out lock dec (bad) mov imul lea mov int3 xchg pop pop jg sti jg jecxz jg stc ljmp iret pop inc cmp cltd jnp repz in out out ja repz stos call das ss pushl jg inc push lcall cld sar jmp pop decb sti negl insb (bad) loop idiv sbb jg icebp iret daa les push (bad) fcomip scas fidiv iret push jg cld mov (bad) (bad) clc jg ljmp cmp stc xor cld pop mov mov lret (bad) (bad) iret cmc mov cmp fdivp iret dec insb cmp cmp clc out scas jmp out out cmp mov mov inc icebp iret pop in icebp iret push mov cmp stc ja (bad) stc lods jle cmpsl jg jns jg add popf (bad) stc xor hlt das fidivr scas (bad) (bad) clc das stc call pop mov pop repnz popa jg stos pop std cmpsl jnp repz stos call aas decb dec (bad) nop aas in std mov stc outsl jge repz (bad) cltd xchg (bad) stc push add ret cli jmp lcall fdivr (bad) js xlat (bad) cwtl (bad) aas pop fs sti std mov daa mov out icebp iret idivl inc (bad) mov jnp in pop mov (bad) std icebp fcomip aaa clc in push lret lahf decl jecxz mov out jg int3 fistp mov mov cmp mov xor (bad) jg clc out stc sbb pop ds nop jg aas rcrb cld pop cli cltd icebp xchg rcr (bad) cli (bad) out inc out notb lods repz repz sti ja (bad) mov icebp mov std (bad) (bad) mov jmp std cmp pop jns das call addr16 xchg inc idivl aas jecxz stc sub lock cld mov imull cli leave fcomip das jmp (bad) std xchg mov lahf pushl jmp das (bad) jne xlat pushl dec jg addr16 fdivr das jg aas (bad) mov cltd mov inc std ljmp ret aaa call jg fbstp cld jbe jg out stc cmpsl call push dec decl jmp xlat (bad) incb hlt jnp pop jg ljmp mov pop inc jecxz sub std mov jae sub aas icebp notl ja jle sbb lahf repnz (bad) out jg inc mov jg pop jge enter sub ljmp (bad) (bad) outsl sti daa std loop cwtl out cli jmp imul cld repz pop hlt iret pop pop std int out imulb (bad) ds push jecxz xor cmc ljmp call mov scas and stc and aas jg cmovs xor cmp iret pop adc dec aam aas lcall das push stc sti idiv int3 (bad) push push pop mov and jmp repz jp add inc incb aas dec repz out inc jg (bad) loopne (bad) jae std mov call dec sbb ljmp js cli (bad) cmp lcall lods aas lahf stc call clc into (bad) stc sub decl outsl cld push sar pop cld dec jg (bad) icebp daa cli std xchg jg aas cmp push (bad) (bad) cltd and (bad) lahf incb out (bad) iret jle das (bad) mov stc jnp fcmovne out dec hlt incl scas imul repnz clc ljmp out js (bad) (bad) scas lahf cmp push (bad) (bad) jmp sar fistpll outsl (bad) in aas cmc xlat cld aad xor lods fstps jg daa jg mov (bad) jmp (bad) pushl out (bad) clc mov jmp loope lahf cmp gs mov icebp ljmp imul aas cli (bad) jg (bad) std in out leave cld (bad) (bad) dec out ljmp insl jp mov cmpl std clc mov jg clc ja xchg (bad) pop std mov lcall (bad) jmp sti mov (bad) cld (bad) sub fistp cld jmp (bad) sar sub push aas cld negl jmp (bad) gs cld call aas stc push (bad) dec jmp fcomip iret mov (bad) enter (bad) mov repnz test stos call lahf clc arpl fmulp jle (bad) clc cwtl fdivrp xchg call pop (bad) out jbe cmc pop std pop addr16 enter pop jmp sti aas ljmp jg outsl (bad) cli daa (bad) (bad) jg aas std or stc pop (bad) fstp cmc xlat cld dec call jg dec std sub imul (bad) clc (bad) clc lahf or leave jle xchg pop cmc aas sar jmp sub lcall jmp int mov loope cmc das std in jg xor iret (bad) mov stos mov cld daa call pop sbb fcomip mov pushf clc out fdivp hlt xlat (bad) mov xchg sti mov fcomps (bad) mov out dec std mov (bad) clc paddw in push (bad) xchg inc (bad) in (bad) lods int dec clc sar ljmp in in (bad) lahf out mov jg aaa call icebp (bad) adc jg mov (bad) rcrl decl repz and jmp (bad) (bad) scas adc (bad) in mov or xchg repz push rcr cmc xchg fucomip xchg std lret xchg aam scas stc jnp sar (bad) dec jmp mov (bad) outsl stc fwait xchg cld pop pushl idivb jg pop std xor cmc out mov cli mov incl lods aas (bad) in pop push stc stc cmpl in pop add sti jg aas cld (bad) movsb idiv stos jg das xchg std mov cld iret (bad) stos neg mov jg sti cld lods jg scas decb aaa cld mov fist sahf popf cld sarl (bad) jg lret pop hlt out xlat (bad) jmp insl loop ja pop aas sahf std mov neg cli fwait sar mov (bad) es sti push mov mov incl (bad) fadds popf jecxz push cli lahf fisub cld ljmp decl aad xor call out icebp mov sub test jmp jmp mov stos call add add pushl cmc addr16 dec popf push mov std sti cld mov jmp out (bad) jae cld pop push pop std outsl ljmp inc jg xchg cmp out (bad) push ljmp pop jle aaa fs incl dec jle (bad) iret jle arpl aas std dec (bad) fnstsw repz pop cld mov (bad) aad cld push mov jmp (bad) scas mov mov out in loope jb cld repz push (bad) push xor sti nop cld jl sti cld xchg jg cmc (bad) std and stos (bad) fucom pop stc pop ljmp pop jp (bad) (bad) mov fdivrp imul aas test inc push (bad) lods xlat mov scas or decl and das test xor (bad) aas (bad) fildl fldl (bad) jle mov xchg das cli fisubr ret aas sti pop std xchg jg mov pushl outsl std inc mov jg fucomip mov (bad) in call aas clc scas std mov outsb icebp xchg scas jg (bad) std xchg mov (bad) addr16 outsl (bad) aad jg mov call (bad) fbld lret inc jle call cld jge cld xlat jl stos (bad) push sbb aas cli mov daa jg mov stc sti stos out std int out cmc aas lcall call (bad) aad dec test jg daa jle pop cmp cli sbb pop cld sbb (bad) xor mov incl sti mov idiv jge lret jg cli (bad) sti push fistp mov call std (bad) fnclex (bad) cld out ds mov jecxz negb fbld xchg aas stc mov push ret (bad) mov pop (bad) fucom lahf xlat sbb pop cld xlat (bad) aad jecxz xlat (bad) fsubr fistp lahf cld vcvttsd2si (bad) (bad) mov cld xlat cld or cli in es jg cmp out cmp jg (bad) fcomip dec incb jg mov (bad) out ret jg das jl iret (bad) lcall imul lahf or (bad) fistpll (bad) addr16 jecxz mov out mov pop rcr cmc idiv push mov imul lods cli jge lret mov mov (bad) fidivr xor bsr mov fcos xchg fdivrp lds jg out cld xchg jle stc sti dec pop (bad) mov std mov std xor push jecxz aas ss mov jg fiadd cld imul cmp jg pop decl out sar jmp mov lock negb sar mov sarl or fist (bad) mov stc stc or nop (bad) icebp jnp ljmp (bad) pop scas jg cld (bad) clc jg mov (bad) cld (bad) (bad) mov adc das ds mov push enter jnp (bad) jmp out pop push mov dec cld xchg aas (bad) into aas cli mov mov hlt das sti ret (bad) fucomp jmp stc sub jmp scas (bad) mov xlat in jg in push mov (bad) cld lcall fistp jg aas std pop lahf std movsl (bad) clc lahf sti ja clc scas clc arpl cld stos jle,pn fdivr in ljmp inc mov jg push lahf mov cmpsb (bad) pushl (bad) cli loope repz out push sar pushl test (bad) jg (bad) std push aas (bad) sub fsub pop std pop (bad) (bad) xchg jmp fistpll pop dec hlt ljmp call scas call pop hlt sbb hlt pop jmp movl sti add mov mov mov lahf jl idiv sarl pop dec jmp jg clc sub iret (bad) push jg sar ja clc xchg scas stc std mov fwait out idiv sbbl cld cli pop pushl jg int xor icebp adc cmpsl out stos incl push not imul sar jg aas in paddw cltd ljmp mov (bad) pop incb cmp adc (bad) jecxz cli lcall std fistp or idivb (bad) cld pushf cli (bad) mov fdivrp das jmp out inc (bad) (bad) sti ljmp jge cwtl fdivrp cmc jle out ret (bad) sti sti push (bad) (bad) scas mov in pop std xor fidivr xlat (bad) pop jg pop cld idivl pop (bad) mov inc pop cld mov sti jmp cli scas ljmp (bad) idiv mov ret lds cld scas mov int3 pop incl iret cld idiv xchg jg outsl (bad) popf jg jg das std std fdivrp xchg inc (bad) stc jg cli scas cld lods mov (bad) iret (bad) out (bad) mov lret mov daa xchg stos (bad) jnp aaa cmc (bad) aas jmp jg in stc daa std out aas stc jg jecxz shrb aas dec (bad) cmc mov cmc pop sbb lret xchg (bad) (bad) in (bad) push std mov lret cmc aaa cld mov int3 mov xchg jmp jg ja clc (bad) (bad) mov stc stos dec ds mov es cmp lahf js scas fnop or iret lds ljmp sub sti xchg dec aas (bad) btr (bad) mov out scas std lds cli dec (bad) mov pop stc ja clc mov lods push xchg ljmp cld js sbb lcall xor jg daa jg mov dec out lcall (bad) das jnp out jmp fcmovnu jecxz cld sub sahf std jae leave lahf sti imul pop (bad) jge cld fisttpll ljmp mov in push out mov jecxz dec (bad) out inc out dec in outsb sar ja aam cld pop pushl (bad) popf mov jmp mov push (bad) jnp sti (bad) sti out (bad) in (bad) (bad) cld pop cld leave mov scas idiv out icebp lcall xchg stc mov mov out jg dec pop cld das xchg lcall jmp ljmp icebp mov mov stos jp pop push (bad) call movsb idivl iret mov xchg jg aas stc push incl (bad) out inc out push hlt (bad) jg out decl hlt jle cli fwait mov (bad) xchg jle pop insb (bad) (bad) fcomip clc call ret mov aas in (bad) mov imul jg scas ss pop xor fdivrp mov arpl (bad) adc daa call pushl out fxtract (bad) out cli das std lret jg scas jns imul ja jge jg jg push mov (bad) out loop push cld repz dec (bad) pop decl popf mov inc mov jnp test out (bad) mov mov idiv repnz std sbb std (bad) cli stos dec mov std aaa mov jno cli aas clc lahf jg pop (bad) fdivrp xchg das mov aas add int icebp decl inc jg lahf pop cli lcall push (bad) jnp sti jg (bad) fcmovb (bad) jg cld jg dec push (bad) icebp psubd int (bad) std mov sbb out das cli and jecxz iret loopne (bad) std xchg les xchg mov or call lds jmp shl mov sbb aas cld (bad) (bad) mov repz fcomip out (bad) outsb adc std lcall jg lock pushl lcall lcall cld addr16 std (bad) aas jmp xchg cli out outsl ja outsl lock or jecxz cmp clc jmp lcall scas (bad) icebp lcall or aas clc dec (bad) jecxz daa decl jno jmp add jmp or call call aas cmp sbb call mov (bad) jnp (bad) adc incl sarb (bad) lcall add ljmp cld sarl mov cmp jg mov add mul cld repz ljmp hlt jmp add jg inc decl decb cld jmp or loopne fbstp lock scas frstor push cli (bad) fnstsw mov stos pop pop or mov jb std push pop bnd aaa int3 fdivrp roll (bad) cld jg mov mov jg lahf std mov repz jmp icebp xchg jge aas lcall lahf popf mov sti (bad) std lahf clc mov mov jne (bad) (bad) fildl in in std (bad) mov outsb mov (bad) sti (bad) addr16 in das (bad) push (bad) ja cmpsl mov pop jbe dec push in in mov (bad) clc mov call xlat out std jg in jg (bad) (bad) fdivrp jmp mov mov (bad) fisub test std mov fdivrp mov std outsl (bad) lret ds out cmp lret in in jg shr iret lcall cld fdivrp jmp hlt lahf std mov mov (bad) pop mov mov aas iret fidivr mov mov sti clc sar (bad) mov jns das (bad) lahf ret jg clc (bad) outsl mov ja mov (bad) in leave sbb scas cwtl mov dec cld mov out ret (bad) cmp mov sti call into jg imul std das sub stc idiv lds stc lock call outsl hlt aaa jg scas clc cltd (bad) clc in dec (bad) ja icebp mov fcomip xlat cld arpl mov (bad) iret jge clc aas (bad) imul std stos mov std jecxz call sub mov and decl repnz sub iret (bad) enter fildll idivl std sbb lds aaa cmp hlt ja movsl sti jg pop mul ja aaa decb cld cmpsl decb mov add incl paddd (bad) mov jnp hlt mov fsubrs sti dec (bad) mov aas hlt idiv sar out fcomip dec clc ret (bad) jmp scas out std btr cli pop cmp jle hlt pop decl (bad) std mov jg xlat decb jle fistp paddb jg out mov sti xlat repnz (bad) std in mov std mov xchg jge (bad) clc or mov inc jecxz decb jle sti idivl mov std test sub cld jnp adc and mull jmp jg cli imul hlt cmp imul mov idivl std sarb (bad) mov sti pop cld mov mov int cmc in (bad) paddb scas cld or std adc mov xchg fstpt cli pop std adc mov mov ss cld inc mov decb icebp (bad) mov (bad) jnp (bad) aas loop sti dec jle jg scas sti std fidivrl jecxz sti sbb mov aas out lcall sarl repz inc pop notb (bad) sahf mov daa out pop std jecxz (bad) pushl out incl jnp fucomip pop (bad) jae rcrb leave scas dec cli jmp cld pop (bad) mov insl (bad) fcomps ja imulb (bad) jg pop mov outsl mov mov clc pop sti cmp aam (bad) jg pop mov repz mov aaa (bad) mov fcomip (bad) jp dec jo mov jg stc leave das cld out enter aas (bad) dec jg mov jg jmp aas movsl (bad) jg xlat cld imul fucomip sarl (bad) jmp cmc fnop jge xchg loopne sub daa in mov (bad) mov loope into mov fucomip daa (bad) (bad) (bad) in (bad) clc inc mov incb decb cs dec jg lds imulb test std sti (bad) ss xchg jg scas neg mov in lahf cld jg jecxz fisub adc (bad) or sarb sti (bad) outsl jg jg mov (bad) ja cld xor jmp (bad) mov fdivr sub shrl clc mov (bad) jmp iret cld sbb out daa std jmp jg aas arpl daa (bad) mov pop sar jg out mov aas cli iret sti leave fnstcw out std cmp cli out lcall mov aaa (bad) pop lahf (bad) jns jmp decl aaa (bad) mov pop inc jg fild ja pmuludq pop call iret call (bad) cli out sti pop jg jg das sti std (bad) inc call cmp jge mov addr16 jge cmp or cmp jmp pop (bad) mov jg daa jg lahf cld cmp in mov jmp jecxz clc out mov push das aas sti idiv mov mov aaa jg icebp loop cld arpl xlat jg out clc lea mov fbld (bad) (bad) mov not jnp mov decb ja lahf jg lahf sti inc (bad) jecxz cmc push jmp pushl (bad) cld std pop mov cld pop mov cld jns mov std ja lods jg lahf lcall addr16 clc out cli iret (bad) fnstsw (bad) cld sbb or jg cli jecxz cld (bad) jle jg aas sti pop jg jno jg repnz imul out je iret std rcrb (bad) jmp outsl or pop (bad) lods mov (bad) mov (bad) mov mov std inc inc jne (bad) data16 mov add (bad) clc inc call aas out in fist dec jle loop out (bad) mov hlt cmpsl data16 int push push jg dec jle cmp aas incb cmc das std xchg (bad) fnstsw lock mov fnop aas jle mov int sahf out stc lahf xor xchg out std sbb (bad) fdivrs das sti leave idivb fisttp repnz cld mov pop (bad) mov hlt jg daa cld jno leave scas repz std pop jg dec adc cld mov jg ret pop or mov jmp std push imul cmc pop insb in (bad) lcall movsb (bad) decb (bad) mov sarb jg out cld daa jmp jg scas out ljmp gs jg repnz mov (bad) notl (bad) scas fucomip push std inc aam jmp lcall inc icebp out (bad) cld out (bad) cli imul mov (bad) fdivrs lret std pushl mov lcall int imul cld out (bad) ljmp call loop jg pop incb stc iret std das jle (bad) cli leave fstps mov xchg jg out cmc push sar inc aas mov out jmp sti xchg pop std inc out (bad) (bad) ljmp (bad) cli cmp (bad) (bad) sti jg (bad) out (bad) idivl jge (bad) rcr sbb xlat push (bad) push lahf sti (bad) cmp loopne lahf sub testl sar int pop cld idivl dec cmp decl fidivr jle call (bad) std fcmove aas popa std sub sub scas std jmp cld aaa ljmp jle (bad) clc mov icebp (bad) cmp pop dec out jmp (bad) mov std sti fisttpll ja mov (bad) mov std jnp fstps std sbb (bad) call popf aas clc in dec idivl out negb data16 decl data16 inc std pop cld loopne cld fnstsw pop sti xchg cld push push lahf cli (bad) (bad) cmp mov pminsw divl clc jmp std iret lcall std fwait jg sarl (bad) (bad) arpl jg cmp push push pop inc scas repz xchg (bad) and aas decl pop (bad) ficompl cmpsb (bad) mov cli out jg iret aas std (bad) (bad) fistl in das sahf push ljmp (bad) mov out std mov cmp mov clc in ljmp movsl jecxz jno pop (bad) outsw jle jg jnp push mov (bad) aam mov incl aad repz loop sti cmpsl (bad) call xor decl js (bad) mov fnstcw cli cmpsl push (bad) jg (bad) pushl incl ss or cli jmp (bad) jg std decl ficompl (bad) mov aas fdivr cmpsl jg aas xor repz fistpll idivb aas sti add (bad) mov adc stos (bad) hlt lahf in jg das ljmp (bad) mov in pushf loope aas int pushl fistpll std (bad) jns jg cmp (bad) mov aad out ljmp daa cli ljmp dec test lahf stc (bad) mov pop jbe paddw mov mov into pop mov xchg dec (bad) fcoml jmp jle mov out negl inc mov aas cld cmp sarb cli idiv repnz dec loopne (bad) call insb (bad) push decl jg mov lret (bad) ljmp imulb mull cld mov lret lahf inc (bad) jmp xchg fistpll sti pushl (bad) jg outsl sti (bad) imull sbb mov repz std ret jle idiv inc (bad) imulb clc mov aas jle jge jnp jg jle std jg das cli mov mov cli arpl in fucomip das (bad) cmc incl jmp pop (bad) jnp ds scas sti or call sarl das sti dec dec jge call xlat (bad) pushl (bad) aas sbb lcall mov mov jg (bad) cld lret (bad) cmp call fmuls ss sti lret incb mov fwait pop hlt addr16 fwait dec fucomip (bad) ljmp ja lahf std repz (bad) jp into aas sti pop cld lcall aas sti jecxz movsb (bad) pop sti xchg jg icebp aas idiv cld cmc dec fcomip outsl cmp mov mov pop outsl (bad) out jnp pop cmc lcall (bad) jg xchg jg ljmp (bad) push das clc sub out notl stc sar cwtl aas stc jmp push ja int movsb fucomip dec jnp paddw in outsl mov fidivr das inc call out jg pop jmp in (bad) (bad) mov mov pushl lcall test lcall (bad) fistpll decl ljmp ljmp (bad) out inc into jg lahf (bad) mov ret sti popf jle (bad) call std cmpsl dec lcall jmp jle aas jmp sti paddd mov aas clc jne (bad) mov lret ljmp jmp clc jmp imul mov cmp jmp xchg dec mov xlat std imul pushl xor mov mov les stos sbb sti das ljmp std jnp (bad) mov idiv mov jmp movsl jg (bad) stc lods jle jmp mov loope inc cld jnp repz cld std jbe (bad) imulb das sti stos pushl jge sti jg (bad) std push mov out (bad) negb ljmp repnz push lahf inc cld (bad) (bad) cld das std inc daa das test xor (bad) jg incb aas mov ljmp addr16 (bad) lock jae jg lahf mull mov int cmc out mulb outsl cmc mov into jecxz pop std repnz pop cld addr16 pop (bad) loop sti push jg mov paddd icebp outsl cld gs in rcrl icebp cmpsl cmp fmul outsl repz clc jnp jle (bad) jg mov das incb cld std imull mov scas std jmp cmp jg insl push jg outsl pop stc ljmp sti ljmp int call incb aas fdivr clc ja jg daa repz repnz std cmp jmp aaa (bad) out jle outsl lock xchg (bad) fnstcw imul mov mov fildll inc std jg,pn lahf ss cmp inc jle mov stc ljmp mov fdivr pop stc iret inc jg mov fstpt scas (bad) pop add cmc stos push jg in lahf std int aam aas cmp aas sahf (bad) fstpt cmc out imul outsl jmp mov ljmp mov int3 scas xor pusha ljmp (bad) in fildll scas cli dec (bad) (bad) fdivrs pushl icebp (bad) loopne pop stc xlat call std fcomip aad out div mov sti pop std imul ret mov outsl cli bnd (bad) incb (bad) movsl ljmp lds jp,pt pop std pop jg aas stc jmp xchg mov xchg jmp aas loope stc iret (bad) ficompl push (bad) fidivrl enter stc lret (bad) lcall jle out notb decb jne xlat fcomip dec clc in mov and clc jg mov (bad) (bad) sti inc (bad) jecxz clc loop cld push jg mov push jmp lahf lock std xchg mov (bad) cmpsl (bad) fstpt data16 repnz js arpl out div pop scas negb repnz (bad) lods mov mov push fcomi call mov lahf clc aaa jns jg out repnz push (bad) lahf fdivrp lea push mov aas (bad) hlt fcomip xlat stc sub daa mov jg jg iret std pop jg mov ljmp (bad) jle jmp xchg (bad) mov jg (bad) xlat jg pop jmp push (bad) adc das (bad) mov out mov in mov into pop cmc pop std inc jg outsl imul cld dec mov (bad) fnop sbb jg cli daa call (bad) (bad) ljmp out cmc pop std mov icebp scas repz jle xchg incl jg loop sti mov div ljmp fistpll fistpll jmp cli decl (bad) (bad) repz int mov std sti jg (bad) aas imull int fstpt hlt cmpsl inc mov scas sti jmp (bad) sbb cld loope and cmpsl (bad) fsubr clc (bad) jmp xchg in (bad) ljmp cmp sti fwait out movsl (bad) mov mov cld (bad) (bad) jge into pop cld imul mov idiv mov mov (bad) pushl out mov mov jg mov cmp (bad) ljmp das sahf mov lahf mov rcrb mov jg out imulb cmp in fdivr in les jnp addr16 ljmp in pop jne (bad) jge scas ljmp (bad) mov (bad) (bad) cli lret cmp pop std jnp mov sti cld push mov stc cmpsl (bad) (bad) (bad) jp ljmp fildll std mov stos (bad) in mov pop jg mov jle outsl mul iret clc iret jle das mov mov sti lds std mov hlt (bad) das cli rcl (bad) (bad) das cmp in mov out repnz aaa jg out repnz jmp call pop cld or repz out into out pushl push jg xchg cld push (bad) fldcw jg jns jg (bad) mov rcrb lock jbe (bad) incb pushl idiv pop pop pushf out (bad) fidivr fnstsw (bad) cld cmc mov stc sub outsl lock lahf icebp lahf std adc imul outsl stc or mov outsl divb insl jmp mov iret out std mov (bad) cld in test lret incl (bad) stc mov addr16 call pop std mov inc fcomip leave das (bad) cmp neg sbb in fidivrl (bad) ljmp cmpsl jge cmp insl jg repnz cld sub jl (bad) lcall out fldcw sti jnp (bad) out ja mov pushl std (bad) mov jecxz fdivr (bad) jle mov (bad) jecxz jmp jg lahf clc push ljmp ljmp xor xchg incl push scas incb out outsl data16 std (bad) mov mov cltd (bad) jg ret jg sti decl lret idivb (bad) clc fildll pop out mov out negb stos jg pop cld sub dec std (bad) das sti std inc jg out cld jmp jg hlt aaa std outsl jg fcomip mov pop pushl cmp std (bad) (bad) jmp pop mov sti mov xchg (bad) fwait push sarl idivb out icebp mov outsb jg out repz call mov mov decl addr16 mov std das lahf mov fadds sarl std leave idiv out in pop (bad) insl ljmp and aas in cmc xorl mov (bad) (bad) jle call out outsl cld sarl push std push jg outsl cli jg push ja (bad) jg clc xor out (bad) mov mov das sti ret (bad) cmpsl jg sti (bad) clc lods std xchg lret pop incb idivl sbb pop mov jg out negb cld adc shrl fwait (bad) cmp in ret mov mov jecxz decl mov mov std sub (bad) in in pop cmp cmp mov popa pop (bad) push mov lea lcall insb pushl dec jmp mov repz clc fisttpll mov cmpsl dec mov sti xchg mov jle jg inc incb out decb repnz imulb int xlat fcomip paddusb daa (bad) mov loop std pop mov inc fcmovu std idiv mov (bad) mov cmpsl push mov std out (bad) jle lret jmp scas dec outsl cmc out lods mov decl cmpsl dec mov scas popf call cli aas divb in sti (bad) xchg mov in das sti das jg scas clc sarl fldcw (bad) stos std push dec aaa lods mov jecxz pop sti pop std ret sti (bad) pop (bad) mov (bad) cld mov loop (bad) jne (bad) fisub cld outsl (bad) out pop fdivr aas icebp pop std (bad) outsl clc xlat ljmp cld pop cld gs mov or mov (bad) cmp xor lcall mov rcrl sti dec notl (bad) ljmp fldt out ljmp and xchg fcomip aad je lahf std ss (bad) scas std je mov jmp das sti ret jmp lahf (bad) sarl ds idivl (bad) (bad) cli sub jmp sahf dec jg je in lock (bad) outsb jg dec cld inc fdivr out loopne xchg dec mov (bad) out call (bad) out repnz out jmp jle fisttp cli ljmp out jg addr16 add aas lahf inc das jle fnstsw iret jl pop std fistpll dec cld cmp leave out stc sbb bnd mov stc lahf std (bad) push aas sti xlat into jg aas xchg sti jg inc cld sbb scas cli jnp out pushl out push lahf cld inc fdivr pushl mov daa jg fucomip addps push cmpsl call (bad) scas repz repnz push (bad) (bad) jnp inc std imul arpl push jg hlt decl aas cli subl (bad) fcmovu hlt mov mov loopne cmpsl mov sbb movsl stos fucomip in aas (bad) (bad) push (bad) fstpt pop pop jl xchg jg rorl lahf decb out pop repz std pop mov out dec mov jmp sub (bad) out cld aas call cld data16 jle aas icebp data16 cld cmp sar lcall jmp xor jmp jg ljmp incl (bad) repnz std mov clc das (bad) mov je pop pusha stc repz dec jmp fcomip int xchg inc rorl repnz (bad) and bnd ja scas (bad) std xlat mov (bad) push mov incl mov mov cld xor idivb call outsl cli scas icebp sti data16 mov sbb cmp pop arpl std ret jg incl aas cli in aad outsl (bad) lahf std and jg scas std outsl cmpxchg8b in psubd (bad) mov out movq hlt outsl in out in (bad) cli xor ljmp ret paddw mov rcrl jg repnz cli (bad) sti iret (bad) pop repnz adc jge mov std addr16 std jg lahf cmc jmp xor pushl out (bad) ficom (bad) stc push lahf out push (bad) push std push sub jl lret sarl jg call scas icebp cmpsl ljmp fisubr ret jmp das stos aas (bad) aas sti sbb push mov aas out jecxz cmp xor ret pop mov mov outsb mov (bad) push mov jg jg xlat (bad) mov jg jg pop sti pop jg lahf cld (bad) xchg outsl popf std std stos jg (bad) decb mov scas call mov decl (bad) jmp or icebp into scas std pop jl outsl ljmp std jecxz sarb dec jmp ljmp repnz std aaa mov (bad) cmp cld imulb lret jbe fistp mov out test aas mov pushl jg das jbe jmp jg mov xchg (bad) cmp or cmc or lahf xlat in cld aad pop cld jnp lcall cmp mov mov or aas fwait repz mov jg scas clc std stos aas jmp outsl jg jg out pmaddwd testb mov (bad) fidivr fdivrs mov outsl decl mov jg (bad) jmp ljmp jle aas (bad) sti mov (bad) stc (bad) pop clc cmc (bad) cld icebp lahf repz jg cli pop cld or divl daa inc (bad) stc loope incb scas mov les mull jg jge xlat cmp adc ret sti std fstpt pop hlt aaa cld xchg loopne jg (bad) in lret pop cwtl (bad) mov fstpl lock jmp (bad) stc scas stc movzwl (bad) lock jl lods mov daa jle sub iret std pop jmp (bad) jmp int3 out jg setnp jg lret aas loope incb out out (bad) cmp pop (bad) mov scas fwait mov clc mov hlt scas into (bad) mov decl push ja neg addr16 pop xor xor lahf js pop cld dec mov pushl sti jae mov icebp idiv (bad) jg aas out pop cli test ficomp sti dec clc (bad) lcall mov out jmp fucomip dec sub in cld xlat lret (bad) mov repnz std xchg pushl xchg lahf cld push jmp (bad) cli xchg in iret jnp hlt rorl negb jmp outsl clc pop jg (bad) scas dec jg jg ja lds jo out sti jmp mov (bad) pushl (bad) insl jg aas mov xchg std mov sar test hlt dec inc (bad) sar cmc pop (bad) jge nop lods (bad) in out mov sub jae out (bad) aas sti pop ljmp (bad) pop lock push mov jne aad call lea ret xchg (bad) pop mov call fstpt idiv cld sbb lret fcomip inc std sarl fldcw cld out aas in jg lds pop mul jg mov jg fistpll cmc jg (bad) push lcall pop std out jg aas jl paddb loop into (bad) mov in dec inc (bad) xchg pop std movzwl iret (bad) stc aas in jge idiv pop aas icebp hlt stos mov pop ja out in das jle pop call sti sbb pop out cmp cmp lahf clc pop jg (bad) decb popf (bad) mov jecxz sti out mov (bad) out lahf jge cmpsl cmp (bad) aas fdivr sahf jg (bad) cmp shll clc jg mov fdivrp or jecxz stc ja mov ficompl pop (bad) popf jle pop out mov sti jg out notl std push inc jg scas cld iret idiv mov aas sti addr16 mov fs inc cld imul pushl (bad) stos hlt (bad) jg (bad) mov std loopne incb test aas loop std pop jg jg outsl std pop jle lods pop jg jmp mov mov pop call aaa (bad) fistpl fistpl (bad) pop decb in repz jge dec cld mov in xlat cli mov ret std or jecxz jle mov mov (bad) cld xlat incb cmpsl decb pusha hlt jmp or aaa out (bad) stos ljmp clc cmc inc pop out lock (bad) in (bad) outsl call incb out cmp add aas out sti jnp cmpl std add std hlt ror js (bad) cld pop (bad) fucomip (bad) xchg (bad) ljmp arpl repz lock cld out lock mov das cli leave outsl jg cmpsl std pop inc daa jg ja (bad) fidivrl sbb and jmp mov pop movsb aas decl cld xlat jg mov add aas les lahf clc pop jg xlat lahf std xor cli in repnz (bad) sti jmp pop (bad) iret (bad) loop in aas idivl (bad) es in mov pmaxub jg jmp sti dec scas cmc stos insb cld clc addr16 xor lret pop (bad) cs (bad) xor les jmp cld and cli lods (bad) fdivl aad std or (bad) mov (bad) fnstenv (bad) in das pushl push (bad) (bad) aas std scas mov mov jecxz lcall pop pop std xor cld dec mov sar mov mov cld (bad) test cld sarl mov ss jmp pop cmc lret (bad) cld (bad) scas incb stc outsl std ds frstor (bad) call cmp idiv jg mov jmp (bad) sub (bad) (bad) shr aas out outsb jle aas out (bad) jne clc imul cmc out (bad) jnp call (bad) (bad) cmp pop ljmp ljmp jp cld movsl loope lcall cld aas and pop test invd incl std repz (bad) mov sti sarl scas (bad) lods cli pop ljmp daa call ljmp aas loop std lahf (bad) mov mov push jmp sti aas dec out decl (bad) mov std mov int mul mov jle out jns scas (bad) addr16 pop repnz (bad) ficompl repz mov fistpll mov iret cmp fidivr stc das sar ljmp inc xchg out std movsl jg ja mov out sti jnp push std cmp jle outsl repnz jg jg stos inc fucomip pop sti mov in outsl (bad) aas pushl daa (bad) mov cli cmp lahf testb mov neg mov lret incb repz mov mov (bad) fdivrp lds (bad) std pop std fnstcw cld pop jg mov xchg jg jg pop (bad) in fistpll jecxz in idiv jnp scas mov (bad) mov std cmpsl std imul mov outsl fwait cld dec (bad) (bad) fdivrp sti jmp std (bad) jecxz lock push cld (bad) outsl cmc cmpsl cld scas scas jle jmp paddw sub pop std addr16 pop clc in (bad) (bad) std clc clc pop sti inc jg push mov lret or pop mul iret sti sarl jg inc ds cld out in pop (bad) cmpsl out iret jg pop fdivrp xor iret mov jg aas repnz stc idiv mov pushl dec scas repz std dec dec das decl in dec sti inc sarb ja std sarb (bad) sbb popf mov incb mov mov in ja cmp fdivrl loope fwait dec (bad) test dec outsb (bad) in cli xchg mov mov (bad) sarb std lods (bad) out call mov (bad) cld in jmp sub xchg pushl lahf pushl divl imulb sti xchg out (bad) lahf idiv pop stos (bad) mov mov outsl ljmp jg pop popf in int3 jg jg aaa cld in cli jnp stc (bad) decb mov ljmp xchg std dec movd out sti lahf jg lahf (bad) jmp mov sti std scas (bad) fdivr hlt (bad) clc fcomip xlat cld insl mov in (bad) aad fisubrl stc lahf xchg jg scas jno mov pop jg (bad) pop jg scas xor pop cld paddb push mov ret fucomip in std cmp lds jmp mov cld inc mov mov (bad) fidivr scas mov jg aas hlt cli outsl sti add test hlt das sti pop jle jg dec lret decl stos push sti stos (bad) fsub mov mov jmp jg aaa std sub imul jg shr push jmp out cmc pop std xchg out shrb mov sti iret jle jmp pop std xlat stos fcomip idiv (bad) incb fstpt pop cli dec (bad) mov cmc (bad) clc pop (bad) mov hlt dec (bad) ret mov mov push jg lret decl fcos out fcomip mov out divb jnp cmc pop std sahf scas ljmp sub scas pop inc mov jecxz jmp scas fcomip (bad) cli (bad) jle out jo mov push jg pop imulb dec sti leave fcomip stc pop imulb inc ja aas loop scas cmc in xchg cld addr16 incl daa (bad) std aas mov (bad) clc (bad) jg aaa mov cld std mov mov (bad) fstps repnz (bad) pop sti mov fdivr aaa cld sbb mov (bad) dec cli idiv mov jmp std push enter jg out clc aaa fildll xchg lahf stc movsl pushl jmp jg jecxz fldcw (bad) mov in cld jmp test rcr hlt daa std addr16 call xlat std out (bad) fdivr leave jg inc jg dec (bad) cmpsl std (bad) out clc in imul cld or cld jl icebp push jg fcos rcrb aas lock clc iret jg aas jecxz dec (bad) notl mov lock clc (bad) mov mov in aas clc mov out clc dec (bad) out addr16 xchg std incl jg (bad) sarl dec stc cmp sti mov (bad) mov clc aas std hlt ja iret (bad) fdivrs in cli jecxz dec aas ljmp jg sti (bad) lahf (bad) sti popf ljmp (bad) stc mov stc stos jg das (bad) lcall jecxz std ja (bad) lods movsb jg jle lahf (bad) mov push sarb push sarl ja (bad) cld fstpt jmp cld ds (bad) ja in out (bad) ljmp test (bad) jge ljmp lods pop vpandn xchg (bad) jecxz int3 fbstp out les jnp sti (bad) cmc (bad) cli (bad) stc or xchg cld std jg outsl cld fwait cld push jmp (bad) std out mov iret pop mov (bad) mov jp pop (bad) jg fucomip iret cli and scas std push jg out icebp aas cld and fdivrp cmp lahf (bad) mov push mov (bad) pop mov std push idiv lret mov jmp call fidivrl and jle ja pop mov in cld xchg sbb lahf cld jge loop jnp mov out outsl in scas pop mov std clc repz pop jmp incl cmc jg pop icebp imul out (bad) scas cld jge nop leave pop lock cld imul mov loop xlat cld (bad) (bad) rcrl das sti mov lock rcrl (bad) decl aas out mov sti (bad) aad jle pop sti inc jg fucomip push std xchg dec scas repz popf (bad) pop mov call cld adc xlat pop icebp das (bad) outsl mov into mov iret push ja std jmp jne std mov sbb mov fildll mul pop jnp lock cli cmp (bad) (bad) jg in idivb (bad) jns shrl (bad) inc inc scas repz std push jg das incl leave pop std lahf std arpl out ficompl jg push jg mov scas jmp pop jge in out decl idiv fnstsw (bad) (bad) popf (bad) jmp jg outsl cmp loop jmp fwait pop jecxz (bad) hlt (bad) (bad) xlat (bad) xchg std pop scas (bad) mov popf jle outsl cmc iret decb xor (bad) lret cmpsl xchg aas (bad) aas sti mov pop sti fwait dec mov jge fwait (bad) pop dec outsl cld sbb std jg jg aaa cmp cld dec cli jno out add cli fistp decb std lahf cli xchg jg out stc ja outsb mov outsl cmc inc std add sbb mov out cmp jle jg (bad) pop inc lcall jnp std addr16 out jg negb jg iret inc jg sti xchg jae sahf fbstp incb jmp fwait jnp fistpl div aas popf (bad) hlt (bad) (bad) jg sti std outsb fld jg mov leave jg ja jne insb jbe stc (bad) (bad) aas sti mov mov ljmp fsubrp jl pop fwait std cs clc fcomip pop lcall inc ljmp lock cld mov nop stos aas insb inc out incl jnp inc cld les jmp jbe pop cld push dec out notb das (bad) xlat fucomip paddb jmp out int3 pop (bad) repnz inc jg idiv mov sti mov (bad) mov mov (bad) sarl lcall xchg push jg aad mov (bad) dec sti out in mov out lahf jle cli paddb ficompl xchg jg out negb sar outsl cmc cli xchg std es notl out sti mov test in icebp aas push decl pop std adc adc aas clc iret pop incl pop idivb out fildll incb push aaa jecxz cmc iret jge idiv aad (bad) (bad) jg pop (bad) jmp pop (bad) mov aad icebp sbb jmp cmp xchg std repnz jle pop cld lahf std popf jg jmp in das stc and das (bad) aaa jg jg xchg cld scas jg (bad) pop cld sbb sar popa lahf cmp jmp cmpsl iret dec aaa pop std pop jg sar sti (bad) (bad) (bad) decl (bad) mov cld out clc lods jle std addr16 mov dec (bad) in jmp repz pop (bad) sub pushl xchg mov mov (bad) cld mov jmp mov jg dec mov pop cmc hlt iret clc dec call std jg aas decb out stc repz ljmp jb lret iret (bad) movsl dec pushl loop sti fistpll icebp aas mov jb xlat add icebp (bad) cmpsl push jg in idivb std scas mov ret stc jnp icebp aaa mov cmp jnp repnz jg out ljmp call fucomip dec decl decb cmpsb stc jne xchg iret jg pop (bad) sti xchg jg jg (bad) xchg std sti imul pop cld daa in (bad) cmp dec clc outsl (bad) out jnp cmpsl mov (bad) jmp adc (bad) push lahf das (bad) in push repz jg (bad) aaa jg lahf mov das call jg out cli paddd mov (bad) fmull (bad) jg xchg std dec mov (bad) mov out pop out cld aaa jg mov repnz pop (bad) sub std lds fist loope icebp aas cld mov xchg daa (bad) push cmc (bad) fldt mov ret ja sbbl push icebp pop mov in mov lahf (bad) cld fbld sarb leave jg enter pop lcall dec xor in das (bad) lcall lahf (bad) pop stc and cmpb (bad) outsb ljmp sar clc xabort mov jmp (bad) stc hlt (bad) lahf jno idivl cmp ljmp hlt pop std out dec lret fildll dec jle das std stos push aaa call (bad) jmp (bad) xor aas stc pop jp inc jge push jg jg sub sarl lcall sti lods aas in xlat dec jg imul mov xchg rcr mov pop ljmp (bad) mov xor mov in pushl jle jg negl (bad) stc lret (bad) mov in outsl cld inc call sub jecxz hlt mov data16 aas icebp pop mov lahf popf std sar jmp sti call (bad) cld push call out xor mov cmpsb jg fcomip jg mov in and jg jmp mov std ljmp dec lahf inc call daa mov mov mov cmc mov cli mov jle mov out std sahf hlt (bad) fild xchg jmp movsl cmc mov jnp (bad) jg idiv mov arpl xlat (bad) lods jg inc out pushl xchg loope dec fmulp call aas (bad) fdivrp adc in sti mov call decl jmp cld pop incl jmp pop std sub (bad) mov (bad) lcall push jmp call incl pop dec out lcall (bad) push jp xlat fcomi (bad) jg out lcall (bad) out aas repz ja out inc mov cmp (bad) in mov xlat (bad) cld jg jo sti lcall mov fsin mov sbb push ds pop (bad) mov pop icebp daa nop std (bad) std (bad) mov repz clc int3 mov lret jg lahf jns cmp push psubsb (bad) mov idiv jnp call std jp (bad) idivl aas jecxz clc iret (bad) cltd aas loopne sti xlat decb ljmp std fbstp lahf std xchg jg aas js sbb decl not jg dec std and jg lahf lock std cmp pop (bad) stc cld cmpsl jmp loop jecxz call (bad) in fistpll jg pop mov ret sarl (bad) clc movsl mov aas sbb (bad) jg lahf lock pop sti imul (bad) fdivrs mov das decl loop aas call sar std lahf (bad) std jg sti jmp jg fistpll push call jg imul cmp iret incb clc ljmp sti dec jle fcomip lahf incb (bad) fldcw mov out out cld daa pushl mov outsl jmp jg xor mov cli cmp cmpsl mov outsl aaa leave fistpll hlt (bad) mov stc int std pop lahf cld lds mov jg das clc xlat jle shl aas idiv pop jns mov in std clc (bad) decl (bad) fisubr (bad) push pop ljmp std ja in mov cmp jecxz (bad) mov cld push jg pop lahf mov push pop daa (bad) cld mov lods jg mov jg je iret sbb mov (bad) cmp aad inc icebp sarl aas jg sti cmp cmp imulb lds aas push (bad) jg cmc (bad) fistl call leave pop jl cld (bad) jmp call cmp int loope jnp idiv pop cld mov (bad) aas out outsl hlt aas pushf (bad) xlat jg out icebp or in out std aas repnz mov push lahf stc ret incb into pop lock lcall lcall (bad) clc fucomip idiv into pop std icebp pop stc cmpsl scas jg (bad) cmpsl (bad) popf pop out scas (bad) xchg jle jg cld xchg (bad) (bad) cli inc push (bad) fisubrl jnp mov pop clc mov mov jg jecxz repz std or mov arpl outsl (bad) mov dec incb mov jnp pop negb mov mov cld sub hlt cmp arpl (bad) mov call in scas jmp repz (bad) std ljmp sbb jp (bad) movsl fistpll pushl cld jae out idivb decl repz jle leave pop imul xchg decl in cmpsl (bad) fldcw jg stc sub out incl (bad) mov dec clc lret (bad) fdivrs jmp cmpsl mov pop clc xchg jae lret (bad) idivb mov mov (bad) stc mov sub in jns negl bnd pop std cmpsb (bad) fldenv scas std or stos (bad) jmp fdivr adc pop std es lret (bad) iret cli int (bad) pop jp mov mov cld (bad) not mov sbbl jecxz hlt iret std push mov pop out mov mov in (bad) gs mov cmc (bad) std test sti sti lcall jmp in decb adc ljmp inc inc mov outsl jle jg jg pop lahf dec pop lock in (bad) fnstsw (bad) jecxz in psubw call cli inc jle aas lock outsb jmp incl test (bad) (bad) call fistpl std loop pop imulb stc addr16 mov lock sti jg outsl std outsl (bad) mov pop jmp hlt aas std je addr16 mov call outsl repz ljmp clc in stc pop std push mov (bad) int clc in std push aaa std addr16 ja pop sti cmp in (bad) sti iret jle mov pop imulb repnz ljmp out xchg (bad) cld aas movsb clc call idiv ret (bad) icebp inc aas icebp hlt cmpsl incl cli pop dec fucomip iret std ret ljmp (bad) rcrb cmc lahf rep (bad) repnz lahf std pop mov sbb aas test xlat sarl fnstsw shrl pushl call sar stos (bad) sti ja in ljmp (bad) stc mov dec pushl xor int3 fildll scas repz cld sbb leave das (bad) aas rcr stc aas cmp inc mov jg std (bad) std iret (bad) frndint outsl mov mov call mov jp out cld fdivrl jmp cwtl jg pop jmp mov sub jg ja out (bad) mov fucomip mov cld aaa (bad) cmp sti sar stos pop (bad) sub push lahf in cld scas mov aad (bad) mov (bad) aas jmp (bad) mov pop (bad) insl jg jg iret (bad) call cs cmp jle lahf mov std pop jg das (bad) cmp call jg aas in stc hlt (bad) decb pop push (bad) fyl2x mov mov pop jmp loope pushl (bad) mov jecxz cmp aas gs cs mov push pushl pop adc shrl addl sti scas repz das decl aas jnp aas inc (bad) fisubl pop stc aas jl mov vcvtpd2dqy (bad) stc into dec repnz aas stc mov int call aas sti xor pop icebp pop and cld addr16 cld jle hlt pop cli pop jmp mov aas mov mov call cli fwait inc fldcw mov (bad) out cld fsts cld stos aaa mov dec ja jle mov adc pop ds in mov das pushl das bswap (bad) cmp ret (bad) stc outsl std lds out ja iret cld leave aam xor push (bad) jmp fsubs xchg cli outsl test ja (bad) jmp loope lret or incl lcall call std sti dec mov jmp das jmp jg dec outsl jg lahf cli sub rcrl std dec pop inc inc idiv idivl (bad) fstpl jg jnp aas call out scas repz scas lcall aas inc out push hlt (bad) outsl scas out aas cld sti dec pop icebp pop and mov in (bad) outsl jg push xchg ljmp jg mov mov pop (bad) out std lcall hlt jecxz stc outsl (bad) repz cld inc mov aas (bad) jmp pop jg out hlt sti sar sti hlt (bad) outsl test (bad) ret std arpl lds aas cmp mov repnz clc sub cmpl divl mov repnz cmp repz fucomip jmp inc sti jg dec (bad) cltd mov das std push mov sbb lahf mov (bad) ds fdivrp rcr mov out (bad) xchg pop jg pop pop cld das jg (bad) cmp stos cmp (bad) in cli aas jnp aas (bad) pop dec rol stc scas mov pop mov (bad) jecxz aad mov fisubr cld mov cld fnstsw sar movd outsb pushl aas xor sar sbb (bad) idivl scas insb lahf cld dec jg in dec stc or jmp out aaa jl jmp cld (bad) jmp std mov sti mov mov das (bad) insl jp add repnz mov xchg cmp fcomip dec inc (bad) fwait mov cld sub in iret cld cltd out mov fucomip jmp pop cli aaa cld mov das std out mov lds xchg (bad) ljmp std fild mov jg xor das sti (bad) aas pushf (bad) imul jle jg xchg jo addr16 data16 fwait jmp aas dec sahf out call (bad) mov (bad) fsubr imulb push jecxz aas loope imul in cld lds cli cmc repz jmp sarb repz pop icebp idivl ret jle scas cmp decl mov jg (bad) scas dec aas jge out out jmp (bad) fdivrs (bad) fsubrl (bad) lods rcr jmp clc jne jg (bad) clc lret inc fstpl idivl jp icebp mov imul sti (bad) gs std jmp cli imul jg lahf lock std xor loope ljmp paddw aas js pop cld jne call dec jg jmp psubq sub cli scas jge mov mov (bad) mov xlat sahf (bad) repnz mov fstl (bad) (bad) cmp outsl js cmpsl std jecxz (bad) scas aas in dec std inc (bad) (bad) jbe ja scas addr16 aas cld mov out aas out cmpsl pop (bad) inc inc jg ja aaa (bad) mov dec jmp std ljmp shr and ljmp clc dec mov lret aas in (bad) (bad) mov cld sarl out cli xchg (bad) popa jg pop (bad) aas mov sti outsl (bad) out into (bad) mov std (bad) aaa push mov mov clc mov (bad) (bad) idivl repz jmp fidivrl neg cli mov (bad) mov mov mov cld and div pop testl mov lahf (bad) fistpl jnp mul (bad) jge push lret fnop pop pop std push xchg jmp psubb sbbl cmp pop rclb das cld and in pop cld mov ljmp out outsl sahf std mov cli mov repz dec das jge std push std mov jmp das clc mov mov gs inc std push mov idivb scas dec jle jp ja enter sbb aas out clc iret jle (bad) jle push leave push (bad) cmpsb mov jg negl mov lret das dec mov mov jle pop jbe (bad) jecxz cld dec lock (bad) sti pop jle call mov sarb push fcomip out call outsl repz jg das pop (bad) rorl xchg std (bad) sti (bad) call pop xchg push out icebp pop (bad) mov int aas jmp shll mov (bad) sti jg ja (bad) xchg jg sti mov (bad) std jg out scas incb clc sti (bad) lods mov pushf cld push lahf cld cmp ljmp pop dec das fwait xor mov (bad) loop out std pop (bad) fdivrs ficomp cld out inc (bad) call cli sbb pop (bad) fsts aas std mov (bad) (bad) das jg fwait pop std pop repnz mov cmp mov out pop incb xorl (bad) mov (bad) mov xor cld jg pop clc push (bad) mov inc rep std mov clc jg das std test stc jecxz jle scas (bad) (bad) lahf cli sbb iret (bad) sub iret clc gs (bad) xchg (bad) shl mov outsl stc lret jg (bad) xchg (bad) gs mov decb (bad) fucomip out std sti call (bad) in lahf std lods lcall mov call jmp cld cmpsl jg pop xor jle (bad) out cld stos inc loope jmp cmpsb (bad) jg pop cli imul loop cli xchg decb std incl (bad) call mov lcall (bad) jg pop cld sub ja jecxz (bad) xchg dec (bad) sti jg jg lods cmpsb mov pushl cli inc aas and call (bad) mov lcall clc (bad) jmp mov jg out sti ja inc jecxz push jg dec ljmp idivl aas jmp pop std in cld stos (bad) sti loope dec repz (bad) pushl (bad) push outsl stc pop lock lcall jg pop repnz lcall cli pop std mov dec cld mov and std jmp fucomip negb jle icebp call scas (bad) fldl clc lcall not fcomip (bad) cld lds (bad) fdivrs ficomp ret cli das decb out pop cmc lahf (bad) mov divb divl std mov push lcall cld xlat stc or stos fcomip (bad) and cmc lahf movsl icebp pop dec imul out pop cli inc pushl out iret std (bad) icebp mull cld (bad) out push jg (bad) push jg (bad) jle jg loop (bad) lods pop test aas (bad) leave das call adc fistpll inc outsl jg fcomip outsl inc fbld (bad) jg sahf lcall idiv addr16 and aam push pushl (bad) mov mov fcomip push std loop mov dec sti jae mov xchg scas aas sti jnp mov addr16 out cld ja mov (bad) std mov fcomip stc (bad) jmp mov loope iret cld stos jg loope jmp out lahf clc inc jg mov fcomip (bad) clc lds jg fcomip (bad) decb (bad) xchg aas divl (bad) xlat scas jg idiv fld mov cltd mov (bad) iret cld pop (bad) (bad) pop cmpsl stc sti daa aas stc outsl call mov clc mov cmc mov negb popf mov aaa pushl mov push scas std imul fnop out out dec cld sti lds jg lahf cli pop (bad) ljmp cmc daa jle mov stc (bad) mov cmc (bad) adc (bad) ror (bad) out jg xor out das cli jae cmc sti (bad) cli jg out std cli (bad) sti push cld cmpsl mov xchg jg (bad) aam pop std pop cld clc loope,pn imul call repz lahf inc cld sti ljmp (bad) out cmpl out mov jg dec mov cmc pop std mov cld jnp cmp out jge jmp call out (bad) std mov sti pop dec jle aam imulb push pop std ljmp repnz cmp pop ds scas call mov ljmp std cmp outsl icebp jbe pop (bad) pop mov jg xchg (bad) cld test (bad) std pop decl (bad) out movsl stc sti scas mov cmpsl imul cli cmovge (bad) dec ljmp mov (bad) cmp call hlt paddb (bad) clc ja loop aas (bad) dec insl jg scas cli icebp icebp outsl clc jnp cld std shll jg lods aas std and fisubr jnp mov mov out fs (bad) mov hlt (bad) (bad) clc mov negb jg test daa and std add repnz adc cld lret xchg jg repz repz (bad) lahf adc decl nop (bad) clc ficomp xor jg or out outsl (bad) arpl out rcrl dec cld outsl lcall icebp fbld icebp pop cmp lahf dec (bad) (bad) xor sahf (bad) cmp aaa inc pop movsl stc sti cmc fistpll hlt inc pop cli push adc dec aas div and jg and incl shr das ljmp pop jg out ljmp clc sbb jg cli xor lds or mov dec jle (bad) rcrl imull cli dec decl call scas std pop std mov mov or loop fucomip pop sti in call mov clc dec aas cmp jg (bad) std ret out std ljmp xorl scas shr push std loop aas pop repz std test inc aas inc outsl clc das decl ret addr16 jmp pop cld rcl jg lahf (bad) and lcall adcl (bad) out call and (bad) xchg out (bad) jle jg in mov aad fmuls pop std mov leave mov cli out ja cld lcall pop jmp mov cmp idiv sarl (bad) iret clc inc jg pop sti lret pop decb arpl call jle into outsl pop adc decl mov mov mov xor call mov cmc in cld incl fidivr push (bad) (bad) push jg pop std inc std clc aas lock ljmp lahf jg cmc psubw js adc sbb cmc daa jno mov iret jge (bad) fdivrp imul jg (bad) mov hlt pop daa sti cmc (bad) sar call in (bad) cmpsl scas enter test push sar pop cmpsb stc (bad) mov add aas sahf lock (bad) rcr push in out aas cli out ret call (bad) (bad) (bad) loop out std idivl pop std sar pop (bad) out jg sbb mov mov mov dec (bad) test cli ja cld cld add out daa std std call (bad) (bad) sbb incb mov lcall sar (bad) out mov in aas test jmp stc pushl out (bad) cld push lcall jg jle loopne sti std xchg (bad) call sarb (bad) std push aaa cltd std mov mov (bad) lahf (bad) xlat (bad) in outsl inc bnd negb hlt (bad) jg std ret (bad) (bad) roll movsl les xchg fildll sub stc mov (bad) fdivrs fidivr cld call cmpsl ljmp int aas stc out ds stc sti sti (bad) aam cmc xlat sbb fistp inc repnz imul loope sti std mov mov repnz inc jg leave iret mov std repz jmp ljmp shr scas (bad) push sbb jg cld sti pop decl (bad) in pop std pop movzwl clc (bad) stc outsl mov mov sar jmp (bad) mov pop sti mov cld xlat (bad) jmp pop addr16 std imul clc das jle arpl inc inc aas lock mov std fidivr notb repnz fistp out int3 call jmp lea (bad) fidivr (bad) decb mov leave mov clc out iret daa (bad) stc das (bad) rcr pushf in out incl lcall leave jle iret jg (bad) (bad) dec jg outsl (bad) ljmp aas pushl (bad) decl stos (bad) jns fucomip out pop das cmpsb mov std mov out std sarl stos mov fldt daa jmp push idivl loope sbb jle lret aas fwait xor les fisttp out (bad) icebp pop lahf in (bad) stc adc stc cmp aad cmp fildll jle in cld dec pushl stc sti and mov das (bad) mov cmp call out jle hlt iret fild out scas es jnp cli decl daa cli ret (bad) sbb cld mov (bad) fstp jnp fstps lahf cld mov cmc lret lahf clc jnp std popf jle jg test push (bad) aas (bad) lock jmp cld or lahf aas loop lahf mov hlt lcall std and pop std out hlt aas sub (bad) cmp movsl stc xchg test aas sub pop lcall pushl cld icebp jmp ss out idivl addr16 jecxz mov clc negl mul sar jg mov div sar ljmp aam dec je dec mov mov cld xchg push das cs jg pop sbb fcomip (bad) mov jg mov fcomip push push pop pop incl stc ja jnp (bad) pushl sti stc cmpsl adc cld dec sbb cmpsb mov (bad) std mov adc fnstenv (bad) inc call lahf cli push popf clc negl sti dec es fsubrp cmc iret (bad) mov jecxz jg mov mov jmp aas test notl cmp jecxz idivl clc push inc mov xlat std or pop std mov jle pop xchg cld pop adc cmp gs rcr scas outsl jg (bad) std cmpsl jg mov push jmp aas (bad) in fcomip lahf loope jg xchg jg pop std fwait mov movsb jg enter and decl jmp incl (bad) clc pop std sbb pop sti psubb lock cmc idiv aad sub fistpll fisttp (bad) ljmp ret push mov aas decl stc aas idiv into (bad) cld out sbb jmp jg xchg lahf xchg in jg mov sar call lcall decl ljmp ljmp (bad) lahf bnd ljmp decb cmp out inc test (bad) push bnd incb (bad) (bad) pop stc paddd (bad) dec (bad) std andl mov lcall stc sti sti movq jg cmp lret lahf std cli pop cli outsl push push mov out pushl movsl pop jecxz (bad) outsl jg stc daa cmc out aaa pushf mov pop imul jnp jmp cltd mov icebp (bad) std xor cld repz fwait mov (bad) jg ja sub mov (bad) lcall cmp fstp (bad) sti movsl (bad) mov rcr cli in push icebp das cld aas aas jle addr16 (bad) (bad) mov (bad) (bad) out jg outsl (bad) stos das (bad) mov call pop mov imull pop outsb sar std pop movsb aas incb lahf out call paddsw ljmp (bad) mov push lock std popf jg lret std decl clc insl out cld scas (bad) nop jmp in mov repnz stc lds (bad) fsubs fsubrl cli jae incl sarl sti paddd (bad) scas std adc mov mov mov cmp inc aas jno jmp std add cld push aaa lock aas cmc scas and jl ja cld std pinsrw repz (bad) gs sar mov dec cli sti scas daa (bad) jmp cli mov xbegin icebp pushl (bad) nop jg icebp decl push pop repz incb lcall repnz cld std leave and mov xchg (bad) jg cld (bad) jmp repnz popa cli std dec idiv dec out pushl inc (bad) call inc std mov aas (bad) mov (bad) lahf cli aas cld cmp mul mov sti jg mov (bad) mov out out sti inc xlat xor lret aas in (bad) std dec (bad) fidivrl jmp clc incl jmp ljmp pop jecxz cld push fbstp lock (bad) scas (bad) mov fbld arpl std or daa push jg sti std pop cld mov scas jg mov std mov sti aas and cmp or cmp pop (bad) push cmp jg mov jg fistpl out xlat cld fistpll push in testl jg hlt scas (bad) std mov cld daa (bad) fnstsw xor aaa in (bad) (bad) (bad) out pop mov jg out inc (bad) sbb addr16 fistpll jmp movsb mov pop idivb xor jg mov pop sarl call cmpsl or mov decl (bad) decb aas cli xchg jg mov dec cmp jg insl jle mull out xlat cli cmp pop adc cld out sti adc sar mov lods cld std dec ljmp incl (bad) movsl lods aas push aad fucomip scas (bad) mov cmp lahf das fdivrs pop (bad) (bad) sti test mov aas (bad) decl xchg push das ds dec incl (bad) jg (bad) (bad) cli jg ja aas and in mov inc cli dec mov call pop jg (bad) fcomip mov cmc iret std push stc pop push dec clc pop (bad) cmp pop jmp stc aas jg lea out (bad) fnstsw inc jecxz iret call stos ret xlat rcr call (bad) mov (bad) jle mov sti dec call (bad) call out dec stc iret pop mov jmp popf pop sti repz psubd repnz clc in std push inc ret fildll jg insl xlat adc std push movsb jg aas out decl (bad) cld or jmp lods int repnz inc int3 aas scas jle jg dec dec std lods mov cli daa pushl (bad) bound mov imul xchg push xor sbb stc (bad) fistp cli mov iret mov dec (bad) (bad) mov icebp lahf (bad) clc (bad) outsl clc mov addr16 repnz cli mov out aas and sti dec leave jle imul cld cmc inc adc cld lds insl idivb pushl sti lahf mov jg fcmovne (bad) cld xchg pop call jg sti pop mov loop fistp push daa push cld mulb nop (bad) cmp and cld pop pop (bad) mov cld ja jle mov ljmp (bad) fistp stc mov (bad) loop idiv sbb ffreep movsb (bad) out cld movsl jg jmp std popf (bad) shl jg adc stc (bad) mov nop push pop xchg push lahf (bad) clc fisubr fwait std lods mov stos repnz jg mov idivb aas je repnz fwait pop jg dec pushl imull xchg mov jae (bad) mov mov push (bad) call xchg (bad) cli dec sub std imul std (bad) jg mov (bad) cli cltd xlat cmp loop fucomip xlat (bad) mov cld mov std mov mov ss mov push cld cmp sti repz mov cld cmp lcall out inc mov das std mov jg (bad) (bad) (bad) clc (bad) adc out xchg (bad) std das nop (bad) cld dec call call aas incl (bad) call pop jle int pop inc (bad) fucomip inc std jg cld mov cmp cld repz cld sti aaa xchg decl (bad) in cs scas jg cmc ljmp mov mov std xchg mov push cld jl out xchg std mov fwait xor std (bad) cmp call fistpl imul iret es stc jmp push dec enter or fild in mov js aas decb xor mov jg in data16 pop (bad) jg (bad) jnp jecxz addr16 ja cli add (bad) (bad) cmp (bad) and hlt (bad) out (bad) std decl test daa les fstps insl push (bad) (bad) decb cli cmc or lahf data16 std push cld mov cmp scas mov (bad) cs push dec jmp out aas cwtl clc out and paddd std sub cmp cld mov es cmc out cmc out icebp idiv cmc (bad) jmp das adc (bad) push and mov outsl clc jnp cld incl jg das idivb out sar mov sar (bad) fmul push (bad) cli aas std daa sub stc (bad) dec jle xlat push (bad) cmpsl clc in mov xchg mov lret test (bad) aas dec jle push sbb popf mov repz (bad) fdivr imul push pop mov sti psrlq sub (bad) pop push (bad) (bad) cmp iret aas dec cli jmp xchg mov xor out decl inc jg lahf inc clc ljmp jg lods xchg aas clc insl sub ss (bad) aas jmp call (bad) sbb (bad) pop les dec xchg (bad) stc scas xchg (bad) (bad) inc lret mov aas xchg in stc mov sbb ljmp cli (bad) (bad) mov pop sub (bad) pop push push mov ljmp lahf (bad) outsl sar mov pop decl les lcall in jmp lods mov psubsb fist (bad) in call cld lds ljmp clc icebp mul clc imul mov (bad) jg daa call sti outsl mov jmp cld jae stc fistpll leave iret mov xor cmpsl (bad) decl fistpll loope (bad) (bad) (bad) (bad) xchg fistpll cmc (bad) jg cld lahf xor pop nop cld cld cmc inc lcall out (bad) mov ds (bad) call mov (bad) loopne lds in clc mov sub pop xchg pushl cmc dec xor jle mov pop dec cli imul cli icebp mov cmpsl pop hlt in iret std inc mov jle xchg in std mov jg jg cmc (bad) mov mov imul clc outsl mov cmp pop xchg lcall xchg (bad) sub mov scas (bad) fcmovbe jmp outsl adc aas cmc lret jle out std xchg jg dec mov pop hlt (bad) (bad) jb pop jl hlt xlat push xchg cmc cmp outsl jg mov dec call jg (bad) std pop or fist pop cld scas xor call (bad) cmp pop imull jg lret (bad) sti mov jg mov jg das jnp icebp xor ljmp jle outsl notl pop inc (bad) jecxz xchg cld (bad) cmp pop loop jg std idivl xchg repnz lahf xchg std stc jae push aas pop (bad) cli hlt (bad) lahf (bad) (bad) or psubq xchg pushl cwtl (bad) decl incb cli pop hlt sti sti (bad) aam repnz (bad) sti pop dec mov push jg into (bad) jl fdivrp xchg clc idivl lds cld jg sbb out repnz ja (bad) std iret dec jle jg das (bad) fstpt xchg imull dec leave scas in lds sti dec cmpsl xor mov xor cmc outsl icebp idiv sarl cld iret (bad) int clc ja inc (bad) clc mov out (bad) ljmp imull (bad) lcall inc mov pop std (bad) push jg (bad) sti xlat cld mov call out xchg mov out mov xchg fdivrs mov (bad) sub dec jg call jmp in aas cmc aaa mov clc mov or mov pop std lahf jg mov scas inc repnz lcall aas cmp inc mov inc stc mov std xchg enter stc pop pushl pop (bad) fistpll (bad) aas stc or repnz pop push cld inc cld pop jl stos jle jge mov std pop inc outsl jg das std xchg (bad) fnstcw icebp (bad) (bad) outsb and das leave jg fcmovnbe cld dec movsb aas (bad) call push jg clc das mov std xchg (bad) out (bad) push (bad) out (bad) mov xlat (bad) stc jg jne std pop xchg (bad) sti pop jle out call jg stc lret hlt pop pop (bad) mov jge fwait adc std mov std pop int3 aas mov repz cli jne (bad) addr16 pop (bad) leave lahf dec std lahf dec jg fucomip lahf push stc (bad) (bad) outsl stc cmpsl adc mov icebp pop dec clc jmp pushf (bad) std fwait sub aas pop stc ljmp leave jle lcall jle scas and pop cld xchg jg das fdivrp dec jmp fistpll xchg in ja stc sti jge (bad) jg in iret mov repz push call cld arpl decl lahf pop xchg push pop bnd mov in outsl stc xchg inc jmp (bad) lcall std mov outsl (bad) cld ret aam pop inc cli out pcmpgtb pop sar jg leave jg bnd imul les mov (bad) icebp mov outsl hlt (bad) fisttp aaa gs call mov cltd out mov cld (bad) jg dec hlt pushl clc (bad) stc sti cmp xchg mov std int out das and aam int3 jg xor sti cmpsl cmp jg mov inc (bad) psubd sti dec call aas imul mov iret dec jg (bad) stc jecxz imul into lahf cld add xor lahf (bad) in xchg jg lock mov add jecxz and cmc xchg call dec xor lcall icebp iret outsl dec hlt sti add cld (bad) add lcall cli pop inc das cli sbb cmp das and int scas mov imul push std xchg shr daa (bad) fidivr fdivr xor dec clc outsl incl xchg jmp outsl std int jle xchg dec incb jg jmp jmp leave out mov xchg (bad) (bad) mov sarb in out inc hlt call repnz cld pop xchg (bad) decl jle in (bad) jg daa (bad) std in dec jle pop sbb out dec repnz stos aas xchg cmc negl icebp iret das mov (bad) cmp pop (bad) xchg mov fsubrs inc jp cli out aaa (bad) mov jae call sub pop aas sar rcrl stc das push jns lahf cld push in lock (bad) xchg call outsl stc inc ljmp ljmp scas pushl dec jg pop lock std push mov mov repnz std (bad) fildll cld pop aas clc jae jg idiv stos (bad) stc jg leave lods fistpll std out inc cmpsl mov call mov scas sti jge (bad) clc (bad) stc scas (bad) and idivb decb lds xlat std icebp dec fcomip cmp push mov fstps pop jle mov mov jmp std mov scas outsl (bad) in jg aaa jle out cld dec mov pop (bad) push jnp jg outsl cld mov test divl jnp loop clc fnstsw scas imull (bad) pop (bad) ds cmp cli inc decl (bad) imul rcr aas sti in (bad) jg call into aas jmp in aaa stos into lcall sti out (bad) ja icebp outsl (bad) mov std xchg mov jg jg outsl (bad) es ljmp (bad) faddl shl iret std mov scas cli popf jle jg outsl sti ficom fwait push cld das clc outsl mov decb scas dec (bad) in pop cli sbb xlat jg (bad) (bad) xlat clc into clc psubd jg popf jg mov pop clc push mov mov call dec (bad) stc ret out jg scas cld ret jle pop repz aas out push std fidivrl (bad) scas dec in cli out pop cld clc (bad) mov (bad) jl dec std incb (bad) jg (bad) ljmp fcomip icebp das stc iret pop std loopne cli lret decb mov std imul mov paddd aas loop cld sbb (bad) pop stc dec jle (bad) mov mov mov dec jg lahf xor int std sahf mov cld cmpl fincstp decl testb mov out inc jg loope xchg decl out std xchg call jg dec cld in sar std out aas stc lret inc aas jmp hlt pop outsb jle das jg (bad) (bad) jnp mov cwtl in xlat (bad) jl jnp imulb (bad) mov push (bad) out lahf (bad) adc (bad) das cmp outsl (bad) fucomp iret std jae scas (bad) dec std daa jg aas je cmpl jecxz in incb mov cld lahf std (bad) jg fildll std cmp lock dec mov in outsl clc fwait mov std pop movd scas incl rcr idivl lds jnp (bad) mov in jg xlat jg jg pop (bad) scas jg outsl pop std les stc dec pushl lock jge imul jg popf ljmp repnz decl (bad) call ret aas (bad) clc sarl cld mov sti dec ret xlat out out (bad) std hlt in (bad) idiv pop mov jl mov lds out cmc mov das lahf (bad) movsl jg dec dec call jg mov xlat (bad) cmpsl jle jg outsl stc mov jle push push (bad) mov std inc jg out std pop mov sti (bad) jl jmp add jg outsl out dec push mov (bad) aaa stc mov sti and lahf repz sbb aas repnz cld std idiv xchg aas sti rcrl icebp fwait std xorl sti ja jns in sti outsl aad (bad) cli aas clc dec jle lahf mulb cmc jg lret mov jg fstp jecxz cli fnstsw jmp in not jmp (bad) xchg outsl (bad) mov (bad) out jg pop (bad) cli repz xchg cmp std pop idivb or std fdivrp icebp outsl inc (bad) cs jg jg lahf stc lahf (bad) lods aas out (bad) insl push mov jmp (bad) jg scas (bad) and popf ret mov (bad) jg aas decl jp xchg mov (bad) jle jmp cld fisubr addr16 aam (bad) ja sarl inc push (bad) iret ja xchg jg (bad) stc inc (bad) aad ljmp (bad) std inc mov std push jg out cli mov cmc fwait out incb mov (bad) aas out pop call pop int3 jle sarl fnstsw cli pop cld xor (bad) xchg (bad) xchg cld cmp rcrl xchg jg jecxz repnz mov pop incb push fcomip scas cld or or clc out aas cld xchg (bad) jge in lahf imulb (bad) std jne mov pop jae pop (bad) mov jg icebp in dec clc ret sahf lods (bad) mov in mov (bad) in aaa clc and lahf std imul (bad) clc inc call out cld repnz fnop out popf jmp jg dec jg pop pop std hlt lahf cli addr16 cmc inc out mull cmpsl iret ds add ja lock push jle mov cmc addr16 std inc repnz clc into push mov cld and mov lahf cld daa std mov xchg cwtl mov out lock jg pop repnz fs (bad) mov fucomip incb jg clc and decb in stc mov mov addr16 in cld pop jg aas (bad) iret std and fcomip lahf cld das jg aas ljmp mov jmp jne std aas xor pop call (bad) fdivrp repz push ja dec inc jmp mov mov dec cld lahf jle (bad) mov aas sti mov fcmovu jmp (bad) neg cld (bad) call pop cmp pop clc (bad) (bad) and icebp in pushl int jg aad clc or std xchg pop (bad) cli outsl jo mov cld mov aas (bad) movsl stc loope pop (bad) sub fcmovu negl (bad) jge scas das (bad) mov repz jmp into sti (bad) jmp cld sti jle jg outsl (bad) std jmp cld xchg pop negl jl bnd dec std rorb jg lods inc jg mov jg scas mov pop mov incl lcall xchg mov cld dec std push sahf (bad) aaa ja divb es fcomip out std das mov std stos (bad) fdivrl jmp in decl inc jmp rcr in call movsb pop (bad) addr16 jg addr16 mov xacquire lahf decb stc push inc pop stc dec lea jnp push mov mov jg idivb div pushl leave lahf jno sub ljmp std scas sbb xlat (bad) jmp (bad) pop mov jg jg out cld sub mov jg cmpsl push jg hlt push std idivl pop clc ja decb ja in in (bad) cld mov in xor sbb das pop call call mov std fwait loope pop cld xlat call aas xor paddb cmp scas push mov hlt pop sti aas popf cld sbb aas in std (bad) aad cld das ljmp jmp mov negl (bad) jne aas outsl out pushl idivl jle pop aas lcall fdivrs loop (bad) out push call mov jg insl mov (bad) fnstcw mov outsl (bad) pop cld cs rcr dec std pop jg aas imull (bad) ja xchg incl hlt jg push mov arpl scas cld mov loopne (bad) cli idiv sar jecxz jp lods fucomip pop in fcompl hlt out mov mov lret outsl xor aas (bad) outsl cli in scas (bad) aad jno hlt xlat cld jbe stc out std addr16 call gs fdivrp sbb shrl jmp ja push mov (bad) call ljmp jb (bad) std push leave out repz test hlt scas std int3 sarl cmp xlat sahf std xchg mov std sbb std inc jle out (bad) stos (bad) mov or fistpll std (bad) scas stc (bad) or (bad) sub jg jg (bad) (bad) (bad) sti inc (bad) cmc fcomip pop mov daa popf (bad) imul jmp push out (bad) sahf mov mov data16 in cld hlt mov stc cltd pop repnz jmp loope std aas ds pushl jle jg mov lods push std mov push (bad) daa ljmp (bad) imul jg out cld (bad) (bad) pushl pop (bad) scas bnd adc std pop cld sti jg (bad) cmp push xlat jg out mul std loope out mov repz pushl cmc inc jg negl pop div jmp mov pop incb mov jle jmp das jle fucomip das (bad) jmp ljmp jle psubb lahf bnd cmp lahf cmp iret out pushl out clc int loope ljmp out jmp jg jmp jg pop jle fcomip shr sti mov daa idiv ret mov cli dec out std push mov dec jle pop cli lock decb cli mov (bad) idiv aam cli mov pop icebp dec lcall pop std mov (bad) outsl clc add mov jnp decb jge cltd (bad) ljmp pop cmc iret (bad) sbb lahf cld pop (bad) (bad) mov repnz decl cltd aas stc jmp jmp aas mov outsl jmp pop (bad) cmp mov (bad) in mov das std sub jg aas gs sbb aad lret fistpll dec sti jnp decl pop cmc lds jg aas cli das decb pop cld aad idiv mov sarl mov cmc pop inc aas stc jmp std push lret aas loope std pop (bad) mov sti lds xor jg jg fwait cld jp (bad) das incb jle mov lcall ds jecxz mov int std jg inc jg push movsbl scas dec iret incl daa pushl mov (bad) std mov int cld mov test loopne cli dec scas jg out pushl stc repz sahf ret out jge jmp fwait std dec ja add stc inc lcall idiv sarl fistl fcomps aad (bad) (bad) pop mov lea pop mov lcall push mov (bad) sar hlt fucomip into aas pushl or jg (bad) (bad) xor mov lcall dec pop test mov cmpsl pushl lahf cld add (bad) lahf hlt imul decl cmp dec jl pop (bad) pushl sub cmpsb lahf jl push mov mov lds mov pop jg pop out jmp pop pop xchg mov and imul scas push (bad) push (bad) fstpl cld stos jg std idiv fstpt scas cmc pop std mov pop icebp aaa push mov jle (bad) std xlat cld pop (bad) xchg inc outsl das jle aaa (bad) jmp repz in std lret mov dec (bad) cli mov jecxz jmp pop jg repz ljmp out cld stos call pop jmp std (bad) cmp sti out jle lahf push std xchg jg xlat lcall (bad) dec (bad) daa std cmpl cli lahf std ret loope cld scas decb jmp aas (bad) sti pop call pop std mov pop std mov (bad) xchg aas out cld push jle lahf testb jg call scas pop icebp scas (bad) fdivs lret shrl jg jnp jge push mov (bad) das sbb (bad) aas loope cli jmp stc mov jg das std scas push aas clc scas clc lods jg jg cli movsl (bad) (bad) lock dec jle (bad) (bad) std jg pop imul pop cli sub jecxz in in aas mov mov fistpll call cmp in idivl popf mov loopne jmp pop sti dec into jmp popf repnz repz in jle jmp (bad) ljmp daa jle aas clc xchg idiv (bad) iret std in sahf inc jg fcomip pop cld add lcall outsl hlt jnp cli cmpsl (bad) arpl das cmp xchg dec jg stc lahf std lahf (bad) cmp xchg mov (bad) stc (bad) stos (bad) (bad) mov clc out cli xchg out pop (bad) cmpl pop dec call dec (bad) cli (bad) pop scas jmp (bad) (bad) jg push ja (bad) fbld (bad) in clc or jg scas decl in stc js jmp jg pop (bad) jmp hlt out std or (bad) out lahf negb xchg mov (bad) mov out jg in (bad) sti lcall jmp fstpt outsl push aas jl hlt hlt xlat clc xchg jle mov (bad) ja (bad) in call jg jecxz loope jnp aaa cld cmp mov mov lcall cld push push pop cli cli (bad) cld arpl jg fucomip mov ljmp jg ret (bad) call fldt out pop sbb mov loopne xchg (bad) jmp lea pop incb arpl lahf out (bad) jp (bad) push out in aad popf cld cli jg lahf idivb jg pop cmc xlat (bad) std movsb mov fdivrp mov jle (bad) out fstps lods aas jmp cld fistpll in fucomip mov cltd cld xchg fsubrp std cmpsl call in stc aaa jmp mov incb pop jg jmp cmpsl aas std icebp jg out std xor xchg jg mov ja idivb cld mov cli idiv and es decl jge pop jge adc lret aas cli in imul pop std imulb aaa cld fwait call leave lahf clc clc pop mov mov out push cld xchg push iret cld cmpsl aas stc sub sarb out cld xlat jg aas jle repz decl jmp jp pop std jae mov (bad) (bad) xor les idiv insl jg std jg idiv in paddb pop decb mov cmpsl (bad) (bad) outsl stc cmp mov fisubr outsl std xor xchg out lret outsl hlt nop push (bad) xor mov jg decb ja daa inc lahf std inc mov std int lock lcall lret (bad) das sti mov addr16 pop (bad) outsl iret jle fnstsw mov repz std pop dec lahf std pop in jmp enter jg mov fcomp jle pushl decb cmpsb loop clc (bad) (bad) (bad) pop dec repz mov hlt imul pop pushl jl xchg int jle jg (bad) clc out mov jecxz push es ljmp aas clc pop clc xchg push mov testb std cli aas stc cmp cli pop (bad) repz das std jmp jle pop sti fstpt ljmp in das sahf incl (bad) loope (bad) jecxz aas insl imul pop std outsl (bad) call xor clc mov (bad) cld jmp lahf cmp fcomip scas decb decb idiv lahf out std aam sti pop jmp clc paddd (bad) outsl out (bad) inc (bad) fcmovnu icebp out mov negl jmp outsb jmp jmp push dec aas decl xchg psubd lahf cld jle std in xchg (bad) out sti int movsb hlt scas (bad) ja int fucomip loop jle pop std push in std paddb std jmp cmc jg jg scas jg das lcall hlt (bad) std test repnz mov mov lock jg pop decb dec (bad) jmp fcomip out pushf call loop das (bad) jmp std incl stc out leave out fwait (bad) sti jg std (bad) jg lahf je imul mov cmp (bad) jg ja ret (bad) stos fucomip outsl (bad) ljmp ljmp mov popf cld xor aas repz ds sbb leave (bad) mov mov push (bad) mov imull int out out imull jmp (bad) cli xor jnp (bad) inc (bad) inc mov iret std repz mov repz (bad) imul jmp pop adc aam cld ja int (bad) mov std sar fstpl outsl sti pop inc aas call (bad) loop push sarl lcall lret ret jmp das (bad) fstpt mov scas jns mov sub pop cld push mov jp lock jmp ljmp cli inc sub lahf cld add (bad) clc jg mov pop adc ljmp lock clc mov lods out cld idiv imull stc pop cmp stos (bad) xchg (bad) clc ja insertq (bad) pop (bad) in decb mov imull loop (bad) mov movsl aaa jg push jmp rcrb aas div cli dec (bad) rcrb scas ljmp mov in dec stc int idivl out (bad) lahf cld roll jg das cli in xchg mov scas cld dec xchg lahf sti pop cld ja stc scas cmc push xor cmc jg pop (bad) mov aaa cld mov (bad) into jmp out test inc mov jmp pop decl faddp jg cli dec cld xlat call cli aaa popf std repnz in xchg in cld jge std or outsl mov fwait (bad) lahf dec jg dec ds fstpt out (bad) idiv fidivr std cltd pop jg setb rcrb idivb clc cld outsl (bad) cltd fucomip xlat jns,pt addr16 mov fistp lahf mov das (bad) int fcomip scas ljmp jg aas loopne jp imul movd jg jmp lahf std cltd aas (bad) (bad) clc sub mov inc mov outsl decb lods (bad) (bad) out (bad) clc mov mov (bad) jmp outsl jbe pop movsb mov jg mov outsl hlt loopne clc cmpl mov mov call pop cld adc fstp mov (bad) sarb repnz fcomip outsl cmp or (bad) mov stos (bad) jg ret mov in scas cmp (bad) popf jg mov (bad) mov scas cld xchg aas cld push cmp mov hlt andl daa incl cld pop cld mov cli lahf (bad) jnp stc push pop (bad) sub push jg push (bad) data16 jle xchg jg lahf mov incl pop repz pop lock (bad) fcmovne mov mov (bad) (bad) incl ficomp idivl (bad) icebp push mov xchg (bad) dec aas (bad) idiv ret outsl std ss mov mov aaa jg fucomip ja das enter push cld popf pop mov fstps aas stc pop lcall loope pop sahf (bad) fistp std mov jle das (bad) sti jg fbstp mov (bad) lcall idiv xor lahf imull stos pop cld xchg mov bnd mov icebp mov out mov mov aas sti idiv scas repz jg lahf jle out cld lea (bad) in outsl sti out pop mov (bad) icebp jg stc jg notl mov push mov lahf pushl in jmp sarl pop dec (bad) pop out in (bad) sbb clc sti das lcall (bad) in pop icebp xchg jl icebp imul mov cmc pop imulb lea scas (bad) mov sti sarl out out repz std outsl mov fistp jg mov dec jg decl jmp jmp das sbb outsl lock lahf lret dec (bad) fstpt dec cmp out dec mov jns,pt (bad) (bad) sti dec mov mov in inc jg jg aad pushl fstpl fistp cmp outsl cld push scas sar cld scas std mov aaa push std das jg scas incl cld test ja mov in das stc fnstsw (bad) icebp fbstp cmp dec (bad) (bad) (bad) std pop cli (bad) push out shl loopne push (bad) jnp mov (bad) fcmovnu cld aas (bad) mov in sti pop mov jae jmp (bad) fwait pop cld inc insl std xchg pop (bad) cld loop mov out (bad) jmp cmpsl (bad) stc (bad) mov idivl (bad) xchg (bad) mov cli mov mov jg sti idiv into aas clc imul jg sbb xchg (bad) out iret sti addr16 mov jnp (bad) xchg (bad) mov iret pop jmp clc cld das pushl ljmp fstpt cli sbb cld (bad) psubd (bad) mov std sarb ret pop repnz ja push dec mov jle (bad) sti xlat mov cmp (bad) fcomip fldpi push mov mov mov rcr (bad) (bad) clc dec jle cld in jle call iret das pop std xor out sbb in dec mov iret jle fbstp std pop mov jg insb sarl push cld into jg lahf sti loop sti das jg std in iret jns pop std leave jg loope clc jmp inc dec out stc out decl (bad) mov popa jp incl paddd cld xchg mov in out (bad) in jle pop std out jbe loopne jp jg and xchg stc jg std jecxz in sti idivl das pushf std arpl std mov fnstcw cmp push decl lods jg sti dec jg out mov fcomip jg repnz cli push (bad) repz cld push std mov in scas imul (bad) mov jge (bad) stc pop jg pop cmp dec jle fcomip popf mov call ljmp std lods (bad) stc xlat jg scas cmc mov xlat lods mov fstps ds decb mov mov std or mov mov das inc cld imulb decb call scas stc outsl ja jg mov das cld (bad) out not in sbb gs std mov (bad) lahf decl outsl mov (bad) jl jnp pop jg stc mov lahf jle ljmp ljmp push sti aaa (bad) xchg mov std adc mov cli jg jae in lret aas ljmp das cld mov pop sarl pop (bad) (bad) jg das clc or rcrb leave out mul lcall mov std addr16 std fwait movsbl xchg mov imull mov mov jae shr (bad) std push (bad) ljmp pop hlt aas (bad) (bad) (bad) (bad) movsl jg mov jg out sti sbb jmp idiv int (bad) (bad) out int jae idiv (bad) pop aas clc xchg (bad) call decb ss (bad) aas idivl jnp stos pop sti jmp sti sti mov idivl jg out stc arpl loop icebp mov popf jmp sub (bad) sti xor pop stc pop std mov daa jg idiv mov mov decb mov cld mov cmpsl (bad) cmpsl pop sti jne cmc mov cmpsl (bad) psubb (bad) jecxz in lahf lcall idiv push loope jle out cld xchg cli (bad) ljmp out jg mov movsl pop cmc pop jmp out jge in (bad) aas jg loop dec incb clc aas (bad) mov in (bad) (bad) fistpll jg aas (bad) jne mov (bad) mov xchg jle (bad) std inc daa jg fbstp pop (bad) in out hlt (bad) (bad) in pop std les (bad) mov das mov push cmpsl mov aaa mov incl mov scas mov daa std jnp (bad) lcall ljmp aas divb cld outsl decb call mov aad enter int subl (bad) jg aas lahf scas jg (bad) pop pushl xchg jg psubw mov pop jge aas std lea (bad) dec out std inc jg daa jg outsl cld scas mov jg push lret ds imul aas incl cmc (bad) clc adc decl in lcall (bad) mov icebp (bad) stc jmp cmpl ljmp jle cld mov aaa clc add fnstsw loop cld inc mov inc std sub sbb (bad) mov mov std push inc daa (bad) fcomp lock jg mov (bad) aas imull out pop notb ss mov lods mov std push jle ja clc stos aas cmc in scas mov pop (bad) dec cld scas lds jg out mov lods pop mov std mov jmp stc and pop sti out (bad) shrb jg mov sti jg sarl pop std test (bad) cmpsl jmp repz mov mov cld xchg pop jnp scas clc mov paddd popf (bad) stc outsl stos jg aas clc aas jp pop pushl mov mov outsb pop jg jno pop jg (bad) mov out clc aaa (bad) cli jmp addr16 in (bad) (bad) mov pop icebp push inc xchg sarl jnp daa jg loope std out std pop leave (bad) repz out repnz adc pop sar std rcr loop (bad) fldt push stc mov rcrb data16 fdivr call fidivr fwait stos jg ja sbb lret push jg mov jg (bad) jge aaa jge pop decb iret cld sub out pop jge cld imul std rcrl pop negb jle xlat dec (bad) stc mov push std sarl jnp (bad) idiv pop jmp inc jmp fisubr decl xchg pushl idiv cmp ja dec jg jg xchg mov std mov (bad) lcall mov (bad) jns (bad) mov jnp fnstsw jg mov lahf mov lock cli jmp ljmp lds dec jg jmp sti jg lret (bad) popf jecxz ljmp (bad) mov jns imul cld xchg jg push push cld in push addr16 jg aaa cld push jg scas insb ljmp leave ja mov lahf cli ja dec out repz sarl (bad) (bad) clc pop aas std test cmc mov cmc mov dec aas out sti hlt jg imul (bad) out call paddd (bad) mov lea dec lret aas cld psubq xchg (bad) iret cli das pop sub jge jg std (bad) jg scas icebp das jl jg inc jg out sti xor (bad) jg fcomip imul (bad) fisubr stc lods (bad) in xchg mov std or shrb call sub pop cli cmpsl std adc test daa cld push jg fistp imul inc jmp (bad) std fwait aas stc call xchg pop movq in aas (bad) outsl std std idiv (bad) jmp aas sti mov lds pop cld fwait dec jg pop fdivrp aaa jle scas jbe fidivrl paddb call cmc fwait (bad) outsb jg in std jg,pt mov icebp pop jl mov lahf jg aas sti idiv or xchg cmpsl cmpsl pop (bad) jnp loop cltd std inc (bad) ficomp incl into mov cs sti daa incb or scas jg ja idivl daa dec lahf xor cmp fistpll daa jg pop (bad) fwait in cld cli mov jg notb incb enter std out fstpl out das jnp xlat pop (bad) mov fildll das (bad) mov icebp in sti and outsl jl aaa int3 (bad) jmp jg pop jno idiv adc mov clc out sti idivl mov aas in out stc outsl decl mov (bad) xchg jmp (bad) int3 pop ja ljmp fstps dec (bad) cld fwait cld inc mov pop jg mov js jnp and pushl fstps pop out jl (bad) jmp jg mov les xchg push mov jmp jg psubq jmp jecxz cld mov cmp scas cld lret jg fcomip icebp aas cld pop std cmp out cli jecxz (bad) pop repz mov jg mov std xchg mov into aas stc aaa sti (bad) out mov repnz loopne decl pop incl (bad) es cli mov std pop outsl (bad) rcrl pushl pushl sarb jmp sarl icebp jmp idivb cmc out cmp aas out call out jg out sbb into (bad) xchg inc dec lahf mul mov icebp call scas jg xchg in std arpl int std fwait jl rcr hlt jnp mov ja xchg aas hlt pop jg stc lahf jge ja inc (bad) fistpl inc (bad) addr16 in mov xchg outsl (bad) cmp sti out sub ja xlat cld cmp lahf (bad) aas pop mov push repz lahf cmp push sub push jg pop xor inc mov imul in cld cmpsl fdivr lahf inc stc icebp outsl repz pushl lcall lock stos push outsl (bad) push inc pop cld mov (bad) mov (bad) lahf stc ret std cld jecxz cli iret jg ret mov jg pop repnz cmc fstpl push jg scas dec cld div out xor fs jge std fistpll jle (bad) cld (bad) (bad) and (bad) in mov lds std (bad) dec pop icebp xlat (bad) cltd jg outsl mov adc lea iret mov (bad) aad cmc mov jg dec (bad) fidivr (bad) mov leave aas cld imul jg inc jg pop cli aaa std xchg inc mov decl std dec pop jg scas icebp pop cld lret jg pop std dec cld les std cmpsl (bad) stos iret (bad) idiv repnz ds or cld mov iret jg aas cld fnstsw lds (bad) jg repz out mov jne out cli inc mov call (bad) std clc fstps inc (bad) ss jge (bad) (bad) mov jg not (bad) fwait cld xchg jg mov in lahf repz out je pop push jmp pop (bad) dec ljmp ret and aas sti psubd ret loopne (bad) sti pop cld (bad) call jg das std mov lcall push jg jmp in loop cld add lea insl mov aas outsb cmp dec push (bad) mov jnp insb jmp (bad) dec incb xchg rep pushl call (bad) sti das (bad) hlt (bad) into stos mov jg popf jg mov jg aas cld aas cld packuswb fwait pop hlt or jg out cli mov (bad) fimul shr (bad) (bad) mov das clc mov (bad) in pop stc lret jle out std std (bad) push mov cmpsl pop std fwait das jmp (bad) icebp outsl stc sbb sbb jbe pop std jae jg out stc push cld hlt (bad) sbb pop lahf cld sbb aaa decb push jmp fistpll fdivr (bad) (bad) negb into (bad) cli fucomip cli (bad) gs (bad) push jg aas mov incl iret daa jnp jb out incb lock (bad) idiv mov std daa int test pushl jbe aam imulb and stos cli mov dec sbb aaa (bad) fidivr das sub mov mov std mov cmc fnop pop std inc mov outsl stc decb (bad) movsl pop icebp pop decl outsl aaa cli das jg pop cli dec pushl dec repnz std and shl out lock std jne mov mov dec icebp sbb cltd out jle mov (bad) loop std loope jecxz ljmp stc mov out sti xchg (bad) mov sti aaa (bad) xor sti fstpt pop divb aas sti cmpsl and fwait es decb pop std imul jg jg dec pop (bad) mov mov aaa (bad) out repnz mov cmp (bad) dec pop jl fwait jmp addr16 mov (bad) clc movd pop sti pop fdivr dec (bad) mov sarl jg aaa jge dec (bad) pop sti jg mov mov jg (bad) (bad) shr out incl cmc jg jecxz loope mul std loopne clc sub cmpsl aas in outsl cmp xchg stos (bad) jg int lods cmp cmp mov lahf mov ljmp jg pop (bad) dec jg daa jg pop cli or icebp xchg jae hlt fldenv jg cmpsl mov xchg aas (bad) mov cmp xor hlt jg (bad) cld mov (bad) stc mov ret pop stc pop jmp cld mov cmp cld xchg mov (bad) hlt mov repz cld jmp daa outsl lcall mov pop (bad) mov mov out mov in lahf ljmp mov aas mov jns loopne stc daa (bad) mov repz scas mov xchg jg stc out cld popa cmp repz jne xchg std cmp jg xchg std push lds aas std stc pop clc jg jg aas cld daa std aad inc cmc mov cld pop clc push incb jecxz jmp out (bad) mov (bad) push xchg cmp and aam pop stc or stc cmp and outsl imull stc sub popf pop imul fistp sti mov jl lahf incl hlt mov out incb in jle xchg (bad) push (bad) in mov aas std pop jge mov ret mov incl stc pmaxsw mov jmp out cli scas dec (bad) (bad) (bad) arpl inc incl leave hlt aaa (bad) popf (bad) sti jmp in clc (bad) iret incl das int3 jle jg aad cli pop lcall std jmp (bad) (bad) cli scas cmc mov in mov fcomip das (bad) xchg ljmp cld jns jnp (bad) inc mov pop sti mov jg divl int cli (bad) jle jg mov cmc lret (bad) cli aas std mov jg (bad) pop ja or imul jle xchg test jmp (bad) cli xor jmp std and scas std aad repnz std sub (bad) decl jg out call dec scas jne addr16 decb iret (bad) fstpt mov sti lahf icebp inc (bad) out (bad) mov add mov dec clc mov in fucomip das clc mov hlt push cld xchg push aas and idivl subl sti or jg sbb lds lret jmp aas sti scas clc (bad) mov mov pushl imul scas pop icebp push into jle aas loop std sar nop lret aas out cmp clc insl sti jnp lahf cld gs icebp dec cld pop (bad) fidivrl mov jmp outsl sti (bad) jmp fdivrp fnsave dec call (bad) fistl dec out ljmp mov cld arpl jecxz hlt daa (bad) (bad) rcr jg shl imul call mov jp xlat (bad) outsl lcall mov cli lock jmp mov out hlt (bad) outsl clc stos jle out cli cmp jne bswap clc jmp mov push jg cli aas cli pop (bad) popf cmp mov icebp lahf and jns cli outsl mov in pop aas testb jle call fwait dec lcall aas lods fbld sbb xchg jg ljmp pop fidivr lahf cld out fdivr xor adc (bad) fildll (bad) dec (bad) (bad) in dec out lcall in das std xchg jmp adc call jecxz icebp jg ja std sarl cli sbb cmp inc out inc (bad) mov aad lcall lcall scas cli popf push (bad) std ja dec test (bad) mov dec jne notl (bad) jg jg hlt ljmp lds pop cli in ret pop cmp clc add sarl fcomps cmpsl (bad) xor (bad) jg pop cld iret ds mov (bad) jg sti (bad) ffreep call jp,pt out in mov adc lahf sti jg push decl ljmp mov aas hlt daa (bad) cltd fbstp (bad) (bad) cmc jle fbstp idiv stos (bad) sar in cld ljmp clc xlat cld mov sti rcrl jmp fwait jl daa cld fdivrp idiv js cld lcall cld add xlat jg pop sti sti (bad) mov ja fistp hlt outsl cld fnstcw pop cld pop push incl pop cld mov cmp shrl push mov cmc cmp dec jg push pop stc or jge adc cmc outsl mov iret js cmpsl std das jg (bad) clc inc aam rcr testb dec dec jg aas cmp cmp pop jle push popf mov fistp icebp push cld (bad) imulb cld push aas sarl std ljmp call lahf (bad) stc lahf std mov (bad) out ret jmp js paddd pop hlt aaa (bad) mov std sbb icebp pop mov ja lret jmp jg push in ds stos (bad) (bad) jecxz insb cli jg idivb inc inc scas repz cld sahf sti call (bad) in cli lahf sahf pushl ja sti lahf ljmp imul stc aaa pushl xchg fistpll pop sti aas xchg mov pop std fdivrs imull mov (bad) (bad) incb js (bad) adc jle lds dec hlt sti jae in std jg xor mov jge paddb (bad) in jle mov (bad) fldln2 aas ljmp mov lahf (bad) jnp movsb (bad) scas fdivrp jecxz xchg pop cli cmp adc fcomip outsl stc lods inc aas repz stc das jle pop jmp clc or cmp fcomip push cld cs mov cli lcall scas incb idivb pop std xchg call (bad) fadds mov (bad) (bad) scas jg lahf (bad) fistpll aas mov cmpsl scas fwait pop jg idiv icebp jmp jg scas jge xchg jg das push out cld adc test sbb xchg clc mov stos jle aas out cli out (bad) aam out dec mov jp aad lcall (bad) mov mov repnz std pop mov clc and mov jg mov jmp pop push pop cld fistpll lods ja sub mov lcall lret jle outsl hlt mov aas xchg sbb scas stc push (bad) dec mov scas addr16 fsubrl cmp aaa mov idiv adc iret (bad) out (bad) fcomip out fdivrp aas dec push pop ds pop incb repnz xlat lahf mov out (bad) mov (bad) mov rcrl das cmp sbb fcomip (bad) scas std mov data16 das (bad) pop push jg pop es pop sti cmp out xlat pop repz cld ret std idiv (bad) mov sbb mov pop lock xchg mov dec mov enter cli mov xchg pop dec cld (bad) dec (bad) jle hlt rcr lret jbe insb mov jg mov dec mov jg call insl loop (bad) mov (bad) (bad) sti ja cld inc mov and jge (bad) clc dec clc push jg das incl mov ljmp sbb lcall in pop clc out push aas cmp push cld jp cli (bad) or mov or jg aas repz jg mov mov shld cld xchg mov (bad) in aas gs cld mov iret jbe lcall (bad) in aas out out idiv xchg inc aas (bad) iret ficom mul mov mov dec (bad) daa jmp jne neg in icebp mov push outsl aaa cmp stos es jg pop clc paddd inc lahf pushf jmp (bad) cli aas notb cld movq out stc mov lock scas outsl jg (bad) out mov (bad) into mov dec mov stc dec lcall fistpll adc leave (bad) (bad) jecxz rcrl fwait ja call xchg aas stc xlat cli xchg ficomp repnz leave mov out cld neg cli cmpsl sahf jg pop std xlat mov cmc out (bad) sahf jg jg cmpsl mov fstpt std push (bad) pop jg lahf repnz jg or imul jg outsl repz cld leave cmpsl mov repnz stc pop (bad) sti mov (bad) jmp xlat (bad) ljmp jg popf jg jg dec (bad) mov cmc lahf es cmp mov das js jmp mov rcl outsl js (bad) jg das std dec data16 out xor (bad) (bad) fldenv decb ja loope lock cld push mov jmp fcmovu aas clc lahf jle stc lahf lock dec jg fucomip mov repz mov pop cli inc dec jg outsl into (bad) mov stc sarl cmp ja jecxz hlt dec jg pop std mov cli cmc jg daa (bad) jg,pn lahf jge in icebp idiv jmp pop jg cmc jg mov jg std ret (bad) cli jmp repnz cld test enter pop mov pop (bad) imul outsl stc imul jg pop clc dec cld push mov inc cmpsl mov das jge idivl xchg cld ret mov cmp jecxz stc mov jg (bad) fstpl std xchg jb ja idiv sarl jg mov mov jecxz call aas icebp dec jle (bad) ss (bad) iret call jg pop sti in repz das jge paddsb pop lahf jmp jb fwait outsb pushl (bad) jg (bad) pop mov cmc aas clc pop (bad) (bad) cli aaa sti jnp in fucomip dec sti and mov pop jg jg xchg fcomip das cld int in cld idiv cmpsl pop mov mov pop pushl setae insl mov jg jecxz clc (bad) fdivrp ds sbb std int loop cmp bnd negb repnz notb jg cmpsl jg pop frstor (bad) cmp (bad) (bad) cmc push leave aas idivb icebp outsl cld das mov call aam jg outsl repz ljmp fdivrl das mov repnz outsl cld ror (bad) pushf jg das cld arpl xchg ficoml fisttpll incb lea outsl repz pop pushl pop clc xchg mov stc push jle pop cmc jg repnz repnz cld adc jne sarl cli test iret jl pop ljmp mov (bad) fbstp push in cli lahf jp pop sti xchg fdivr call cld icebp pop aas (bad) addr16 fstpt loop cli cmpsl (bad) rcll sti (bad) (bad) out in mov (bad) lods aas cmc cli pop std stc shl pop inc lahf cltd std pop mov jg jmp aas std in cld mov outsl repnz cmc sbb scas sti fwait jge das std imul addr16 mov cmpsl inc jg jmp jne fistpl jmp incl jg out decl aad notl decb jg pop cld out mov jmp pop cmp mov mov (bad) push (bad) jmp call inc aas idivb cld out mov aas sti addr16 lods dec (bad) aad stc out decb aas fdivr wbinvd (bad) fcomip lahf dec pop in iret pop xchg (bad) incb incl cld sbb cld test lds (bad) xor mov std mov jmp clc cmpsl push std sbb call (bad) pop pop std and das clc ljmp aas inc (bad) ja xlat out cld jg aaa inc popf mov das cli pop incb cmp cmc aas (bad) scas jl pop std jns in sti pop in cld data16 pop cmc cmp iret fcomip ja das jle jg icebp aas insl in fistpll das (bad) pop mov int mov stc inc (bad) repnz pushf ds (bad) xlat jg pop std out dec icebp pop mov out in cld out (bad) sti (bad) inc mov (bad) pop (bad) mov fistp call sti push jg das jp out cld mov pop jl sub push movsl jmp jg mov cld lahf cld fwait push std fcom out jecxz jp jg lahf (bad) ljmp mov ss dec (bad) in fucomip push (bad) mov pop clc inc mov mov iret jg (bad) lcall sub mov (bad) in mov dec std push jmp (bad) in ja scas (bad) sti jg mov dec das jle lahf cld pop pop call pop std (bad) xchg outsl call mov mov aas cwtl (bad) addr16 mov (bad) js outsl sti pop jg jg movswl lahf (bad) fnstsw jmp jg dec std call (bad) push mov out iret mov bnd sub iret (bad) pop jle mov mov mov inc jmp repz pushf (bad) jbe loopne cmp inc jg hlt in idivl fucomip psubq jecxz inc jg jbe lahf incl (bad) aas hlt out clc pop icebp (bad) std cmp call sti mov fldt (bad) in incb push jg icebp iret iret cld push sarl movsb aas lcall out std mov pop cmc lret inc (bad) (bad) jnp rcrl push push (bad) sti lret sahf std out out das cld (bad) jle pop out sti jae sub cmp cli (bad) xchg (bad) cmp jecxz mov cld mov aam repnz cli insl jle lahf stc cmp mov jnp (bad) aas call std jae call out cld scas sti pop (bad) ljmp cld mov insl mov aas out icebp pop inc dec das clc jge ret jg stc pop jle decl imul std out clc cld das cli xchg mov (bad) (bad) dec xchg pop cmc xlat push jg dec jmp pop push mov hlt arpl fdivrp lahf jg in pushl jg cmp pop cld cmpsl (bad) sarl clc (bad) jle repz (bad) mov mov (bad) in pop cmp aad aam jmp xchg idiv xchg pop out pushf cld jp sti pop hlt addr16 fidivr mov xor (bad) sbb mov repnz cld (bad) out rep jg adc (bad) jmp (bad) arpl sti lahf mov sarl mov cmp jg xchg jg jg loope clc pop (bad) xlat pushf (bad) mov scas (bad) std scas (bad) mov idivl xchg outsb aas pushl ret (bad) sarl call mov cmc jle fucomip fildll bnd (bad) mov pop decb scas cld loopne cli rcrl sti jmp jg pop (bad) mov aaa std xchg lcall (bad) ret idivb es cld out cli clc das stc fucomp cld inc lahf cld mov addr16 sarl incl mov into (bad) cld aas in addr16 fisubl int cmpsb aas (bad) paddd xlat mov (bad) (bad) fimul int3 mov jle aas std (bad) aaa scas (bad) icebp push pop jle fistl shll into out clc leave xchg jg das std sub out jmp out idiv std (bad) sti shl in das cli xlat leave jg (bad) mov cmp out cmp fwait mov incb jg pop (bad) sbb ja (bad) ljmp std (bad) jecxz cld inc dec in pushl cmpsb (bad) jmp push aas std cmpsl jle aas cltd in out (bad) (bad) call stos aas jmp ljmp (bad) (bad) dec (bad) imul addr16 stc paddd pop cld call (bad) mov jmp mov (bad) pop (bad) fstpt mov out clc movq lcall jg stos leave lcall iret fucomip scas clc jmp mov jmp clc or dec cli (bad) mov stc mov fcomip mov aam aas cli mov outsl icebp imul pop (bad) aas (bad) loop clc jge jg call (bad) fcmove icebp idiv xchg mov das std es out mull test mov out call call xlat (bad) xchg (bad) jg xchg jg scas icebp (bad) std clc mov cmc out cli cmpsb cld std pop (bad) aad cld jg pop out incl clc lds xlat cld sar stc mov jg dec cld jecxz mov push decb jae pop ljmp fist cli aas jg out pop imul std mov rcr jmp js cmc arpl jmp imulb jg aas lcall icebp outsl std mov mov neg clc cmp pop decl mov jg mov pop repnz jle pop incb cmp das cld repz aas out mov scas sti out fildll cmpsl int cli pop cmp (bad) psubq lret sub mov pop mov inc popf jg ja xchg (bad) fnstsw in mov std (bad) sbb mov out stc sbb cld faddp xlat push leave mov jmp (bad) out mov jecxz sarb jnp cmc pop inc idiv dec mov (bad) clc iret pop (bad) loopne mov mov fcomip das cld fcomi das (bad) mov mov out clc lods decb aas cld (bad) jmp idivb das (bad) negl sarl out repz lods call aas fs or fdivr in (bad) push mov lcall dec decb clc mov mov iret fcomip (bad) sub aas cmp dec aas dec out (bad) fnstsw stc aad jecxz jns xchg popf negl push mov stc pop jg fistpll jmp (bad) clc scas cld sar xchg (bad) repz sahf pop std mov mov mov out aas cld repz aas loop cld xor enter cld push jmp pop repnz cld mov std jg pop decl cli xchg inc (bad) cld mov out mul inc (bad) (bad) lods mov cli repz out stc lahf stc sub jg das fdivrp inc (bad) clc scas js sti jmp aas jns out enter ljmp decb mov movq (bad) int aad negb (bad) cmp fwait pop cli daa jle mov xchg cld out aad pushl incl dec jg xchg aas jecxz mov aaa mov mov and (bad) jns (bad) xchg mov addr16 les jg fnop jg clc fistpll (bad) mov (bad) jnp iret (bad) stos mov mov pop sub int3 xchg cld cmp test (bad) in std das stc std jle (bad) jg (bad) std xchg std jbe in push (bad) ljmp jae jg hlt idiv xor repnz cli arpl mov out (bad) mov pushf iret lret pushl cld idivb (bad) mov lahf jge fnstsw (bad) fidiv in mov jle cli mov iret cli mov cmpl cmp xlat pushl (bad) (bad) jg xlat cld fwait stos (bad) into lahf (bad) out cld aaa jg outsl hlt jmp sarb cld outsl cld mov xchg idivl std aad (bad) (bad) mov fucomip das cli cmc push pop dec paddd repz call (bad) test clc out decb jmp pop decl lcall sti xchg incb sarl mov idiv shrl sub data16 cli pop pop std popa (bad) jmp repz lea out repz std ja (bad) mov (bad) (bad) jg lahf stc std mov clc jg cmc stc aas (bad) pop incb loop push (bad) cld test enter aas clc mov cli fldt (bad) loopne dec jnp cmpsl ljmp cmpsl int outsl sti out jmp dec rorl (bad) std mov int in aaa clc aas jg push movq pop (bad) mov std (bad) sar call lahf repz push jg mov (bad) (bad) fistpl pop mov test fs lahf ljmp scas jg iret (bad) push ljmp sti paddd jg (bad) imul adc (bad) jnp and out (bad) idiv movdqu std dec aas cld (bad) repnz jnp std sar shr (bad) fsubrs clc or iret mov stos pop aas jle xor jg leave pop icebp jg push (bad) fsubr std (bad) repz mov pop cmc xchg (bad) jge loopne jg in push jp cli jecxz scas ja out jg in (bad) cli jg das jnp (bad) fdivrs std sar cmp aas (bad) iret dec mov fucomip xlat iret (bad) aam icebp aaa jl repz mov pop cli scas std jbe aad fdivrp xchg mov out in fstpt (bad) sarb (bad) ficompl cmp stc in in lahf decb or iret sub lret out stc icebp icebp jg inc ljmp int jl aas cli cmp psubd mov cld (bad) fnstsw jne ja cld loope idivl push jg dec std fwait mov cmpsl iret (bad) fcomp cli ja stos jg fucomip dec std aas rcrb pop lcall cld stos (bad) fwait mov inc jg ja imul outsl mov (bad) and sti xchg clc out clc mov cmc xchg (bad) fcos in cmp sarl pop jle jmp dec dec (bad) mov (bad) and pop repnz decb cli inc call stos aas ljmp addr16 jg (bad) movsl mov idiv insl aad (bad) idiv pop inc jg xlat decl (bad) mov pop jg in push arpl xor incl (bad) fstps sti xchg jg aas in aas sti insl (bad) jmp std push push (bad) stc jg lahf idivl mov idiv neg jge mov jg cmp mov cli cli lahf stc adc jnp out jg lahf pop xchg jmp call arpl mov pop jge (bad) (bad) lcall sti out cld cmp cli xchg rcrl mov sarl call aas cli in cli sbb (bad) scas cmp dec (bad) cli lahf (bad) xlat inc stos dec mov icebp fstpt xchg (bad) in aaa call jle aas std jg (bad) mov out sti aad loop divb (bad) loop sahf cld fbld cmovle repnz dec (bad) mov sarl jnp inc lahf std cmp jg mov icebp dec lcall (bad) aas stc subl mov in stc pop icebp dec pushl hlt pop (bad) cmpsl mov imul pop hlt jg add pop clc out (bad) jg fcomip pop incl negb mov (bad) clc aas mov jg out dec aam ret aas std das std pop jg in stc push mov jg pushl (bad) pop icebp (bad) fdivr (bad) cld mov clc outsl cld in clc mov push xchg (bad) lahf call mov std pop pop (bad) ficomp xlat pushl (bad) cli lahf sti out ja scas jg pop stc xor std fwait adc in cld jno ret fwait cld or aas cli xchg (bad) cmc (bad) fisubr cmc das mov std iret pushl out jne int cld aaa cld or mov stc xchg idiv xlat (bad) cmp mov cmc scas cmc out (bad) jae ret loop clc iret (bad) out mov (bad) in jg idiv add (bad) nop aas icebp mov lods jg aaa clc popf cmpsb (bad) ficompl scas mov out std repnz lods jg ja pop jle mov jecxz fcmovne (bad) fldpi (bad) in in (bad) sti xchg mov jg jg das stc aas jle jg aaa cli mov std (bad) pushf (bad) ljmp lret aas std xlat cld mov sti jle cmpsl std fsubrs mov jmp aas mov cmp stos mov (bad) out addr16 decb cmc ja mov jg aas mulb aam repz (bad) out leave mov out (bad) (bad) pop clc lret jle pop jmp (bad) in cli sub xlat jg jmp inc jg scas (bad) jge (bad) aas sahf loop (bad) cld sarl aas sti inc (bad) (bad) (bad) insb lret lds mov (bad) (bad) clc pop jg aas pushl sarb in jg fwait jg std mov (bad) repnz jg jg paddb (bad) lock sti inc pop std (bad) (bad) call push (bad) aad leave out mulb fsubrs (bad) fstpt outsl jmp push aas (bad) mov cmp jg and (bad) mov and mov test inc mov cld push mov or pop repz std sti mov aas out (bad) cli sbb jmp jg pop jp pop dec mov mov xchg jmp in fldcw (bad) data16 (bad) repz pop icebp (bad) std (bad) idiv (bad) push aas (bad) outsl jg in outsl icebp xchg cld adc outsl fwait cmp pop jg decl dec ds decb jg xchg jg das sti leave aas hlt (bad) mov jg (bad) pop (bad) or iret (bad) mov sbb pop jg dec mov aas clc lahf std in jmp repz mov out out out cmc pop (bad) cmp jle mov scas mov jmp dec (bad) cltd fucomip int sti ja (bad) jg pop stc pop xchg cld cld addr16 fnop fildll (bad) iret cmpsb mov aas stc lret (bad) sarb jmp dec clc jmp les pop inc repnz mov aas cmp data16 pop cld jno jg inc mov std pop call fcomip aaa cld movsl mov notl cld imul cli cmpsl cld jp lcall cld imul pop cld xchg repz push push pop clc pop xchg (bad) lcall incb ljmp hlt iret pop dec test mov jg pop jg call mov out aas clc jge leave pop lock std cmpsb daa mov (bad) fiadd dec cld xor lahf pop cld cmp jle pop lock ljmp (bad) popf jle aas sti fwait (bad) cli jg lahf jae mov jg dec std jae in pop out clc fwait jg aas icebp cld ja lcall loope pop std cltd inc mov jg aas out xchg divl (bad) ss aas std fwait int3 (bad) loopne jecxz clc imul aaa js das cld out mov (bad) jno or pop repz add jmp mov scas (bad) mov loope sti gs clc in pop cld inc sbb bnd mov mov notb fs mov addr16 mov outsl repnz cld leave (bad) fistpll (bad) ja fdivrl dec dec jmp outsl std pop jle out xchg std fdivr ret (bad) mov incl mov sub or (bad) (bad) in addr16 imul jg int dec (bad) sbb out cmc (bad) xchg mov jle jmp popa jg mov out aas cli out dec scas sti lock std repnz and sti jmp int jmp in outsl (bad) fcmovnb cmpsl jg pop xor lds popf jmp fistpll (bad) ljmp stos sar loop lock (bad) stc movd push cld (bad) lahf clc fwait lcall repnz clc iret cld cmpsl jg out stc aas std stos adc pop fdivr sar mov jnp jnp mov pop cli inc jl arpl cli scas jmp mov hlt inc dec mov (bad) clc aas repnz stc push jg fcomip lahf sbb and loope (bad) pop out std and (bad) mov sbb pop std insl pop jl stc mov pop (bad) xchg sbb lahf (bad) mov push mov clc daa mov lods (bad) clc pop lahf cld push lahf cld sub (bad) mov lcall pop idivl in sti cmpsl push (bad) jmp aad jg ljmp pop std pop jmp pop ljmp std jg (bad) mov jg psubb jg repnz jle pop std pop aas cmc test scas mov cld (bad) pop hlt jnp sbb jg aas dec stc stos aas in outsl icebp daa jmp aas in incb jmp mull xlat (bad) jnp jmp in icebp lahf (bad) mov cli pushl leave scas dec stc scas mov (bad) xlat daa addr16 dec jg aas fsts out std fwait (bad) cld mov hlt das clc or push hlt outsl iret jmp aas mul pop sti dec decl mov cmc push fwait inc (bad) in (bad) (bad) ja in jg pop cmc fstpl out (bad) test sti imul or ficompl sbb (bad) and pop cld lcall in mov sub decl outsl cli pop std mov sti lahf std aas aas outsb call aas jecxz jg decb (bad) out (bad) and mov jg (bad) clc mov pushf das out movsb (bad) mov ljmp sarl outsl push clc stc hlt xlat cld dec (bad) cli fucomip pop clc lret mov mulb jmp loopne (bad) sti out std iret cmc popf (bad) inc fwait aas out (bad) std dec jg psubb call out mov std mov jg jne jg jnp lahf out cld mov ret mov xchg call scas mov out repnz iret inc aas in scas clc stos (bad) test cli arpl (bad) lahf inc stc (bad) jg aaa aas cli imul jmp push lret stos aas hlt lahf mov lahf cld sbb push mov das jmp mov jle out clc lods mov jmp (bad) mov clc sti (bad) (bad) sarb call lahf jae pop std idiv xor out psubd push out neg mov lds imul (bad) lahf (bad) daa (bad) fdivrs call jg (bad) xlat (bad) in pop cmc (bad) mov aas jge outsl incb jecxz (bad) mov push call jmp out (bad) jmp jmp fisttp inc stc stos mov lcall jle jg mov aas cli cmp aas stc xchg std sahf (bad) out popf aas loop std pop (bad) mov xchg call pop cld out (bad) pushl je scas jg das std lret xchg (bad) jecxz icebp pop fdivr stos call mov pop incl fwait aas idivb cld loope in negb (bad) sbb aas imul jle scas jp (bad) (bad) gs cld sarl scas outsl incb (bad) jnp iret daa jg daa jg call incl inc out cmc stos push mov sub xchg mov jmp scas std mov js dec (bad) scas jg lahf cld das scas pushl lahf dec (bad) repz (bad) jne loope pop mov (bad) (bad) push call mov push mov (bad) in (bad) sub xchg pop jmp mov stc xchg cmp fwait cld out pop push (bad) (bad) cmpsl jle pop stc imul mov push (bad) call cmc jmp cmp (bad) inc push lahf stc int mov daa cld in loop hlt (bad) decb std mov jg ljmp iret jmp dec jle aas clc pop pop sahf mov mov xchg std jnp ljmp (bad) mov negl std (bad) in cli jg std sarb jmp in loope sarl (bad) lahf cld imul (bad) in outsl jmp imul pushl cli out stc (bad) cltd addr16 fdivr outsl push incb cmc mov stc cmpsl out mov jg (bad) ja lods decb mov outsl sti das std cmp popf mov (bad) daa mov aas (bad) ja daa mov iret (bad) (bad) sarl out pop cld jmp in aaa ljmp mov pop lret ljmp repnz cmc dec fnop das (bad) movsl jg idivb mov (bad) in mov lds call clc dec (bad) stos push mov (bad) mov gs lahf cmc lret pop cld jmp mov lahf cli fwait call std repz cli jnp mov (bad) int pop icebp psrlq ljmp outsl (bad) idivb in aas dec stc sarl in xchg cld xchg (bad) jp xlat std (bad) push mov jnp cmc cmpsl push jg lahf stc (bad) push mov fwait aas loop std sub int jge cli or jmp das incb enter jmp aas jno pop (bad) sub imull jg (bad) xchg aas jns adc jg iret cld fnstsw mov mov jle das sti pop call cld (bad) cld lcall clc lahf jg cmpl popf pop addr16 into out cmp cmc (bad) jecxz negb cld push (bad) in jecxz cli clc dec pop cld pop mov push (bad) lahf jg idiv xlat (bad) mov (bad) std jg pop hlt (bad) (bad) ror jg jnp (bad) and cld stc jg pop cmc lahf ds adc pop sti lret dec fnstsw jno mov jg inc (bad) ficomp icebp (bad) sbb pop (bad) ljmp inc in std inc dec out mov (bad) jmp fcomip pop (bad) sti lahf lcall push hlt repnz lahf (bad) fdivr in (bad) clc sti jg lahf repnz std dec mov std mov cmc (bad) pop (bad) (bad) std movsl daa aas repz (bad) ja aas jle in decl pop (bad) adc (bad) std sbb aaa (bad) jp rcr (bad) or ljmp aad mov fucomip daa repz sbb fldt aad jmp push ja (bad) (bad) test (bad) sti (bad) mov mov jae mov pop inc pop out cld clc pop std sbb call in jecxz mov pop out das std jge fstpt loope leave ds ljmp sti jg cmc lds mov idiv test push cmpsl dec pop scas sub mov ljmp outsl clc (bad) (bad) sarb stc lahf lock rcrl xchg aas std addr16 jg rcr cld (bad) std add gs pop clc xchg jmp mov (bad) fnstsw in ja adc sti lahf jg shr pop hlt data16 (bad) (bad) sti fcomip rcll rcrb xlat cs pop sub (bad) imul jg jmp out sti repnz jmp fistp jg out ljmp mov sar mov mov jg pop cld leave pop inc sbb (bad) lahf jle pop std pop cmp cmc or mov (bad) xchg mov inc jg xchg (bad) cmc iret ljmp lcall jo daa (bad) mov std cltd (bad) ljmp lahf stc ja cli mov pop (bad) (bad) outsb call rcrl mov hlt call stc jecxz (bad) sti (bad) fldl stc pop cld xchg jg lahf clc imul aaa outsl (bad) rcl pop out clc or sti pop std pop jle mov jle jg cmp push sarl aaa stc idiv (bad) divb stos lahf (bad) outsb daa jg (bad) mov jmp mov cli jg jge mov jg xlat jg push jg clc pop stc (bad) pop ljmp cld aas std idivl mov inc test jecxz clc lahf sti cltd jg pop (bad) stos dec into xchg jmp aas cli stos jle notb sti fistp outsl stc dec cld (bad) mov daa jg pop stc cmpsl incl push (bad) fdivrl mul scas cmp or int (bad) sar jmp pushl ret or ret pop std repz mov (bad) (bad) cli lahf enter stc ja cmc mov loope sti cmp fucomip pop clc pop ljmp mov cld popa mov jecxz outsb (bad) scas mov cmpsl cld ss into (bad) out aas out mov mov sahf cld mov jmp sar jg pushl jg jg cld cmpsl fidivr jmp das std mov out pop (bad) daa iret mov (bad) fldcw push aad jg mov push lods jg mov mov xchg out jg (bad) (bad) loop sti aaa (bad) fstpt nop in (bad) lahf repnz fistpll divl sub decl cmc xchg mov stos aas divb andl stc jmp xor pop jg push inc (bad) fidivrl mov pop cli paddb fcmovnu stc mov mov jg adc mov jg xchg sahf jle std outsl push cld cld sti std (bad) das jg pop push leave pop imull adc icebp mov lahf stc lods jg mov mov mov jg or imul dec pop sti (bad) (bad) (bad) mov repnz sub jg fcomip daa incb (bad) mov loop dec clc iret (bad) lcall mov decl lods call (bad) fdivrp inc jg das stc (bad) repz (bad) out aas loopne incb jmp push pop cmc aaa cmp mov cmpsl pop decb out jp aaa cld scas (bad) fcomps (bad) not cld in scas (bad) ja mov cmc pop std pop fldt mov stc (bad) decl std pop jg pop cli mov movsl scas jle das cmp in (bad) inc jmp gs pop mov outsl jmp jnp jg popf aas std mov aas pop (bad) sbb stos incl pop aas cli out test mov loope sti jnp lret cmp mov loop repz std xchg ffreep sti (bad) fstpl cmpsl incb (bad) dec jle fistpll aad stc ja ds jecxz xchg jg fcos icebp daa jle mov sarl mov (bad) lock (bad) out imul (bad) mov mov jg outsl cli das cld jno fldt jg jg nop aam sti sub mov std mov shrl jg pop fdivrp leave lahf (bad) cmc jg aas lock cld iret outsl jno lahf cld mov (bad) incb fdivr mov call mov jg mov jg out jnp out (bad) aaa (bad) fdivrl sarl std scas jg lahf repz sbb paddd decl clc iret clc xlat pop xchg out cmp iret mov mov (bad) ljmp pop sbb paddsw stc fwait jmp aas std dec (bad) mov repz and repz rcl fcomip adc in cld mov call mov out hlt ja xchg mov jnp into mov in leave pop ljmp cld lods mov lahf cmc dec ljmp ss iret stc mov das lret pop incb (bad) xlat (bad) jmp dec cli jecxz (bad) lahf aas stc arpl out jg popf (bad) cltd (bad) incl out loop outsl cli jecxz pop (bad) ljmp (bad) mov jg sbb mov (bad) repnz pushf lcall movd idiv ss icebp scas cld ja add fstps out movsl clc cmc idiv sbb test stc jg sti xchg fwait pop mov cld gs mov mov push dec fdivr xor (bad) sarl xchg scas call jg imul std test rorl (bad) cmc cld scas cmp xchg repz mov jecxz (bad) jmp cmp std imulb xchg jno ret mov mov jb sbb pop aam jg mov clc sti ljmp xchg mov incb dec jg idiv out daa jle (bad) insl std pop jg fldcw ja cltd aas in dec sti insl (bad) cli push jmp (bad) (bad) out idivb sbb (bad) (bad) (bad) sub loopne cli lods out into outsl stos repz jnp (bad) cltd stc sti out int3 cld std stos xor out inc repz repz std (bad) ds lahf leave jg cmpsl (bad) fdivr lock mov sti fwait (bad) sahf jmp iret (bad) popf jle pushf repnz (bad) jmp iret sahf std dec adc cld pop (bad) in out stc subps icebp iret jg (bad) (bad) negb hlt daa sub jmp negb jg aad std adc lds cld hlt addr16 mov stc scas jg scas std mov jg pop jmp inc aas std pop call inc aad dec stc fistpl mov scas push jg stc jmp (bad) xchg jg mov neg mov mov decb mov jg pop (bad) jge fistpll (bad) fnstcw ja stc call outsl cmc movl push pop (bad) ljmp jg stc (bad) std push ja scas std dec (bad) aad jecxz cld mov out jg mov in ljmp int lahf cmc xchg mov (bad) iret clc fstpt fucomip idiv pop jmp jg sti das (bad) mov in lahf xchg (bad) jg cmpsl (bad) rcrl pop scas jg sarl out mov (bad) incl das lock mov fstps std jecxz enter jg aaa das pushl out idivl ja mov dec out decl mov (bad) in iret std sub (bad) jns (bad) jae loop lcall fwait (bad) call (bad) (bad) (bad) fisubrl (bad) daa cs pop repnz incl lods (bad) mov stc mov xlat (bad) fwait aas stc out jg (bad) cli in decl imull lret xchg aas clc cmp mov out ja daa push xchg std cmp lea lahf (bad) fwait jg scas repz jecxz lahf ljmp repnz in jmp out aas cld stos jg jg stc lahf lock mov (bad) mov jecxz das inc fcomip cmp aas stc idivl loop sti pop (bad) dec inc sarl aaa stc addr16 pop aas neg cld idivb out divb es mov dec scas std (bad) (bad) imul decb mov fidivrl iret mov mov ret outsl sti stos (bad) (bad) cli mov bnd dec std mov lahf lahf ret (bad) std fmuls mov repz cld jae cwtl jae jg mov idiv incb (bad) mov std jge jg lock sti test std out clc daa (bad) mov push dec outsl jne aaa lcall mov fsubrs (bad) scas mov pop (bad) call (bad) jg pop (bad) jmp (bad) out (bad) pop mov adc inc in lock inc sar ja adc std lcall adc jg cmpl loope jle pop out xlat std xor outsb cli nop loop (bad) in dec cld inc jg pop clc out mov fucomip lds int3 mov in cli mov lock icebp mov jle notl cld jle fistp (bad) ljmp push jnp sub xchg lahf cld cltd fstpl xlat jl das std loop cmc fnop out lea lock rol aas cli xlat lea outsl and stc (bad) (bad) out leave inc repz clc (bad) fstpt pop decl icebp (bad) scas sub pop (bad) idivl (bad) lahf (bad) out pop (bad) xchg mov jle das mov mov jg psubq jmp mov jg jg dec ljmp (bad) clc scas clc pop push (bad) mov das sti fstpt jg idiv repz pop clc in jg addr16 dec adc decl mov aas icebp xchg (bad) jnp cmc out idivl cli aaa mov ljmp cli mov jmp incl clc in js pop cld jne repnz notl (bad) cli xlat (bad) sti (bad) mov mov jg das stc idiv cmpl call jg mov jg mov ja out (bad) mov scas stc jecxz aam aas repz mov mov cmc (bad) sti insl imul push cld icebp pop cld (bad) jg sarl (bad) loopne mov idivl loope stc pop incl xchg jle pop std out mov int3 das sti (bad) xlat jmp jmp (bad) push ljmp icebp fild (bad) stc mov lahf std mov stc addr16 popf xchg aas pushl out inc (bad) jle pop jg out negl jne ret jg addr16 mov pop dec jg jg (bad) clc mov cmc xor (bad) mov jg out pop addr16 inc (bad) ljmp clc mov and jmp clc xchg scas jg aas stc xchg in mov icebp incl insl add ret cmc out cmc jnp cli icebp out dec mul dec cwtl jge mov cmc outsl pushl (bad) aas call jle aas repnz push cld cld xchg mov clc daa jle lock dec jle mov jbe in cld cmpsl incb adc pop inc (bad) in jg in mov xlat std lcall cld inc fwait mov packuswb repz fucomip fnop sti mov in out mov xor aas clc aas xchg stc sbb mov stc iret dec (bad) clc jg rcrl ja dec idiv sarb in sti jmp (bad) std ffreep imul rcrl stc mov repz (bad) cmc out rcrb jg lahf add jno pop cld ret mov lret mov shld jg iret clc cmp in aaa in push cmpl mov pushl mov idiv lret das cmp (bad) mov sti pop std adc cmpb das (bad) jne scas mov outsl std imul cmpsl lea in repnz mov das jg scas (bad) cmp jecxz jg stc out repz std and aas out pop sti inc decl std mov aam (bad) cld pop ljmp out iret ljmp clc scas cli aas out dec repz (bad) cmp adc call insl repnz cld push jg das daa std repz call dec incl jnp jmp scas fwait lret fcomip loope stc pop pushl fwait (bad) ljmp aas jno lahf sti dec jg mov (bad) mov sti jle in xlat cld mov mov cmc pop cld pop mov jg lahf incb (bad) fnstsw scas mov jg jmp lcall sti jg das inc cld imull cld (bad) mov cld xchg mov std imul mov mov pop icebp xchg (bad) jg,pt pop hlt popl (bad) jmp cld scas mov std push aas repz stos jg ja imul (bad) xor incl fistp xlat jg mov pop jge (bad) push cld (bad) ljmp jg jle xchg dec decb (bad) jp lcall fistp das sti dec decl jnp xlat pop cmc sar jg das sti adc fstp div clc add stos xchg jg mov (bad) dec das add cld movhps pop pop jg fistpll mov dec jg div (bad) push ljmp loop (bad) mov (bad) fdivrp push (bad) jmp aas std jno jecxz cmc sbb clc incl jg mov sti stos decl addl popf cld lds idiv repnz mov std mov scas cli mov xchg xlat cld call mov push pop cmc mov ljmp sub fstpt pop mov (bad) loope repnz stc lods jle aas hlt insb cmc in sti sbb outsl jle mov jle pop lds cld pop jg lahf cld lret out push cld negl pop mov repz sti dec lcall std (bad) out das (bad) popf mov call decb jmp aas icebp lock stc mov and lcall out mov lahf cld ds sarb (bad) std mov out aas cld test sti (bad) fcmovnb das call aas js cmpsl std fwait in in (bad) loop aas (bad) sti cld sar scas std pop decl ret aas repz aas icebp scas sahf (bad) out ror cld mov repnz jmp (bad) mov clc scas xchg push das cmp and imul jmp aas sub ret (bad) xlat lods aas in push lret push iret stc scas push incl jg outsl (bad) jp aaa cmp clc sti out std and loope lock clc outsl (bad) in mov std (bad) (bad) cmp jmp cld scas cld adc dec call out icebp out call aas cld (bad) mov cld sarl incl in mov clc sbb pop (bad) jmp mov (bad) jmp mov jmp cli inc mov das (bad) fcmovnu neg cli ret (bad) fdivrs (bad) cli inc out inc not xchg jg jmp jg aas cld mov lock clc sar out sti addr16 pushl aas push pop mov jnp jg pop mov inc cld out sti jg mov leave out sti jg (bad) mov (bad) pop jo repnz fwait jg paddd jmp (bad) lcall outsl cmc sbb jle lret mov adc fidivrl std mov cld mov add decl int3 pop sti leave jg imul (bad) pop incl fdivrp inc jmp mov hlt inc pop jmp clc repz scas jg addr16 jg das sti leave jg (bad) jle out lahf cmp (bad) pushl sar fwait jg jmp das (bad) (bad) jmp decb (bad) mov idivb dec int xchg pop out inc (bad) in iret jle (bad) jge pop in out lock xchg std stc int movsb jmp das sti leave pop sti (bad) cwtl call fcomip cld call jg inc incl idivl pop fdivrp and mov daa decb data16 icebp pop ljmp pop jmp call mov cs mov loop cli cmp fucomip jnp sti push cmpsl (bad) fstps push out out cli (bad) (bad) fstl std dec lahf sar pop lcall dec clc aaa mov (bad) (bad) icebp pop cli jecxz jg (bad) sti pop sub xlat fs (bad) push out cli pop addr16 jg pop cli pop (bad) shr mov fucomip out std and jmp incb mov fwait repnz outsl clc dec jl stc cmpsl in dec stc mov push call jg pop cmp xchg (bad) in popf fcomip out (bad) imul jb lahf (bad) iret imul clc (bad) push stc iret sti mov popl mov jg (bad) aas pop cld pop (bad) fnstcw pushl movsl dec idiv (bad) (bad) (bad) inc decl jne out lahf (bad) dec (bad) call loop decb iret fcos jne outsl sahf (bad) jle jg scas cmpsl icebp decl mov xor mov cmp lahf inc icebp jecxz clc (bad) cmpsb mov fdivrs leave jg lahf inc cli mul mov sti jmp add pop jmp stc lods xchg jg aas stc ja jns cmc pop (bad) scas (bad) mov jg cli inc daa outsl jg rcr jmp lret (bad) (bad) out lahf pop mov sar push pop std mov pop std adc in xchg aas loop dec lahf clc (bad) cld out mov (bad) icebp mov mov (bad) jle cmpsb xchg aas decb out lock cld gs jno icebp (bad) outsl clc (bad) push cld icebp push (bad) jae fxam xor jg lcall (bad) ss cli sbb scas (bad) fdivrs in psubw (bad) idiv cmpl lcall push pop mov mov jle lods call pop popf mov aas cltd in iret lahf cld jmp cmp jmp (bad) cmc scas ljmp inc adc std mov out (bad) jmp push call ljmp decl out cld dec push ljmp (bad) (bad) mov mov cld xchg ret (bad) cld push jmp in cld (bad) xchg outsl decl imul out (bad) in sarl (bad) clc push ds mov ljmp jg mov scas jle (bad) cli in aas in aaa pushl jle push aas mov decl clc rsm aas sti pop push (bad) neg js out incb mov cld cmpsl jg jmp std fwait cld push mov cmp imul (bad) (bad) movd aas imulb std add int std or hlt iret mov lret mov (bad) clc (bad) std xchg push cmp xor (bad) mov jg (bad) cli sti (bad) sub out dec pop fsubl sti paddd cli movsl jg lahf cld mov jg repnz pop cld adc dec icebp lret stc fbstp xlat fucomip aaa ljmp aad (bad) pop incb (bad) cmp ljmp ficomp mov sti (bad) dec and call decb pop jmp xlat mov lock lods (bad) (bad) fstpt aaa sti xlat jg repnz cmc scas popf push (bad) (bad) dec inc (bad) imull sti sti incb out call fistpll mov (bad) ficomp fwait std loope (bad) stc fcomip mov std adc aad clc std pop cli dec pop aaa jg scas icebp pop decb mov jecxz adc cwtl in out xchg mov (bad) sti (bad) mov stos jg pop imul jg incb pop clc pop cmp (bad) jmp scas jle stc div scas add (bad) stos fucomip mov sub jge stc clc paddb jg aas icebp mov insl (bad) mov jg inc jle pop sti movsl mov es incl repz call aas out (bad) mov cld ret in jg daa scas (bad) fidivr (bad) in das jle jecxz mov incl stc jns push insb adc aad (bad) mov push clc bswap pop repz int3 scas mov mov xchg daa (bad) stc cld psubq (bad) (bad) fcomip scas std cmp jmp (bad) ljmp ja lcall stc (bad) jle mov clc incl pop (bad) (bad) cld aaa decl xchg ja mov inc mov pop (bad) pop jg fld dec incb outsl lock jl addr16 ror decb ret pop jecxz xchg pop incb out jl sbb repz (bad) xchg aas incl sti aaa jle mov (bad) in mov (bad) ljmp mov repnz push pop cmc fwait push (bad) repz sti insl jle leave out out jp scas mov xchg jg jg cmp push mov (bad) ficomp std jecxz (bad) pushl iret jg mov pop (bad) aad jns (bad) cld outsl jg mov pop test inc fdivrs cli std xchg mov mov in mov fistpll repnz fnstcw idivb xchg push pop push (bad) jmp fidivr pop sar icebp out clc cmpsl dec aas stc xor ss stc pop (bad) out enter dec mov mov cmpsl mov pop (bad) fstpt lahf cld scas call (bad) push mov rcrl cmpl decb (bad) cld mov inc repz into dec std aad call cld arpl aas ljmp iret jmp leave mov dec cld lea xchg aas std pop inc jg outsl (bad) scas (bad) adc popf aaa mov cmc in mov fbld jle pop pop dec jg mov pop cli fistp mov aas repz cld into paddd dec mov out (bad) mov iret (bad) fsubrp testl imul mov insl pushl gs stos (bad) call stc (bad) leave lahf mov pop ret (bad) ljmp fstpt mov mov out rorl push (bad) jmp pushl mov aas cli mov cmpl sti sarl aas cld lahf std and aas std aas cld stos (bad) xchg fcomip mov test out stc pop (bad) sbb outsl mov das es inc jmp mov jo fstpt (bad) sbb in mov std jnp cld cmc (bad) mov cld pop mov gs sahf std pop mov in pop std xchg call pop std inc cld repz ret aas sbb shrl inc les fistpl mov xlat jmp sub stc cmc inc pop (bad) push cld ja enter jle stos pop dec imul das mov out add in scas jnp mov stc mov popf in dec (bad) jae (bad) sti imul inc out imulb jp (bad) repnz push stc pop jg in sti sti pop pop jg idiv cmp in pop jle xchg out jg xor gs and mov jae fdivr cmpsl xlat int jg (bad) cld icebp mov jle fwait pop (bad) (bad) sbb mov stc pop nop std cli xor lahf std (bad) cld sarl notl incb xchg (bad) sti pop (bad) jg iret mov sub fistpll mov cmpl (bad) ljmp idiv mov icebp dec js daa sar aad repz fucomip (bad) stc (bad) lahf cmp leave outsl clc lock std cmp iret mov sti dec incl adc int fbld dec std sub cli aaa push std fistpll aas out clc push lcall std mov scas in lahf inc jle jg hlt sti aas pop (bad) fistpll cld aaa das (bad) mov std cmp testl dec jl repnz call jle lcall stos fcomip aaa jl push jmp std iret jle divb aaa dec (bad) aaa cmp fcomps aas and mul pop call mov scas fwait pop stc adc enter out inc hlt decb pop mov out cmp call mov icebp sbb xchg jg pop sti (bad) std scas jg cld pop mov (bad) in aas cmc iret cld (bad) push sti pop std hlt iret cld movq daa daa jg outsl (bad) cli pop stc cmp dec clc dec mov sti jg ja jg in out push (bad) in cli shrl (bad) das std xor xor clc mov xlat outsl (bad) out mov dec (bad) cmp sti mov (bad) pop decl (bad) jg ds (bad) cmpsl (bad) cmc lahf jne (bad) jmp jg (bad) call aas ljmp notb js xchg mov in jg mov stc lahf jg call fidivr outsl fstps pop stc lahf cld push mov gs (bad) addr16 out jmp loope jmp jmp stc jmp (bad) sahf dec push dec lcall cmc (bad) idiv mov jg (bad) xchg incl idiv lcall pop jmp jg jg ja cli gs sub scas sahf cld mov ljmp out push incb outsl jle mov lahf decb (bad) in pop pushl idivb into jg mov into ret out std adc or scas mov (bad) (bad) mov xchg ja fidivr inc outsw jg push pop jge jmp mov jmp lahf pushf cld sub (bad) mov jmp dec in std int jmp scas std pop mov inc xchg mov daa (bad) jmp icebp (bad) jge pop call mov (bad) imul mov inc (bad) out mov mov clc aas clc sub sahf (bad) sbb aas inc out (bad) dec (bad) fcmovnu loope std test mov (bad) icebp outsl clc jnp lods mov cmpsl jg lds (bad) pop sahf (bad) popf jg pop icebp jmp jge mov ss xchg jg aas std mov (bad) jne cmp (bad) jg repz jmp call clc (bad) cli (bad) incb mov test jle iret jle jg mull (bad) stc aas jle (bad) mov cmpsl scas (bad) mov in jle in jmp mov das (bad) ljmp dec pop notb das stc cmp call in sub (bad) mov jle pop lcall jg xlat decb jg das cld icebp pop aas (bad) and sbbl out cmpsb clc in jle ss cmp mov imul jle clc jge lret (bad) jg pop jle fucomip pop mov (bad) or incb mov cmpsl jg (bad) jg aas or lahf xchg cld (bad) jns repz adc jg pop sti mov cld mov fcomip mov idiv mov lahf (bad) aas jbe inc jmp outsl jmp out (bad) cmp pop decb jle inc cld imul (bad) jmp idivb jg,pt mov std jmp or mov mov (bad) mov scas sti jmp mov in fistpll xchg xchg (bad) std outsl jl sti call cld lods lahf and jmp outsl jmp (bad) jg jecxz iret fisttp fildll pushl jmp sti in dec xchg jg fdivp outsl clc das incl pop jmp repnz out idivb mov idiv out cmc sti cld xchg ja xor sti mov dec xchg (bad) dec scas std outsl inc pop hlt fistl cld mov jg pop lock cld cmp dec repz lcall jg out stc daa cld addr16 leave lahf std xchg mov cmpsl std pop jg pop repz (bad) (bad) les xchg std cld ret aas inc aas xchg (bad) mov (bad) push call (bad) aas cli aad repnz int repz mov icebp pop hlt (bad) sarl aaa idiv cwtl bnd jae lods mov jle aaa jg fcos pop mov imull mov cli rcrl repnz jge jmp aas pop (bad) cmp mov (bad) pop cmp clc idiv scas (bad) push mov (bad) sahf aas cli pop cld imul sub aas std jnp decb pop std sarl cld idiv imul mov mov pop std lret xchg in (bad) xchg jg pop fstpt ds ja loopne xchg repnz sar loopne clc add loopne scas (bad) mov fcos loop mov add pop loop mov in call mov (bad) xlat fdivr fldt stos (bad) fsub iret sti add daa int jle dec mov negl dec sti iret (bad) out jge loop std pop sti pop (bad) jae mov cld outsl jg pop imulb and lahf dec jmp out (bad) cld lret hlt outsl (bad) mov test arpl sti lahf cmc out decl jg pop jg (bad) aas cli xlat std sbb mov pop fdivrp jecxz mov cmc (bad) ljmp jmp icebp outsl ljmp lea inc std sarl notl jmp out std or aad loop pop repz addr16 scas jg pop sar jmp lahf in iret mov stos (bad) out jg jae mov xor cld daa jg aas sti sysexit adc pushl lret pop adc ds mov lock sbb pop (bad) ja out out dec out repz shrl sti mov aas cltd in daa (bad) mov call jle iret sub sarl dec (bad) std lods mov aas stc pop cmpsl pop jg addr16 (bad) lret pop (bad) mov jno daa decl iret mov jg leave (bad) out std jecxz shl outsl cld (bad) cld lds (bad) sarb (bad) cld (bad) mov aas notb scas mov push jg pop cld mov repz sti idiv sarl (bad) mov jg daa push call (bad) cld stos mov (bad) xlat mov xor fistpll sti (bad) jmp pop pushf std movq mov (bad) jns aad stc xchg (bad) lahf (bad) in jg jg (bad) jp pop (bad) stos aas mov jne loope pop mov icebp loop aas call add cmp or pop mov xchg pop std mov cmc lds outsl cmc xchg shl jmp sar xlat clc jg std repz add jmp push dec mov into pop sti (bad) imul xchg aas clc leave out cli mov (bad) rolb aas mov fcomip xlat cld test mov mov in mov std jge loope jl (bad) pop lahf cmp push mov decb jmp mov imul push scas icebp dec out (bad) cld jg sahf std lea aaa movsb cmc lret outsl (bad) jp jg fnop icebp lahf lock cld mov cld test in (bad) cli std (bad) rcrb daa std (bad) mov jle aas jecxz jg dec std inc (bad) clc push ja and mov jle out (bad) ljmp jg mov fxch cld out jg aas repnz aas jg outsl std cmpsl call fucomip mov cli pop dec (bad) out push jmp jmp jg lahf cli outsl cld pop jg outsl inc jmp idiv fs mov cmc mov inc repnz repz idiv cmp pop dec jg fcomip out jg in mov pushl jg iret jg jmp (bad) cli out dec out (bad) in lcall lods (bad) cld pop mov outsl ja jg pop std inc decl sar mov lahf (bad) mov jg aas lahf in fstpt aas mov fsubrp imul outsb das jle fcomip daa dec jmp negb (bad) arpl jle mov jg mov fistpll jnp jmp xchg dec jmp fistpll pop fnstcw stc mov sahf aas lcall jg mov (bad) (bad) ljmp out cld cmp aas lock pop ljmp jg call test cmc jmp out clc (bad) incb sarl incb dec call idiv dec jle pop sti aas (bad) fwait jle jg iret stc insl jg jg mov icebp stc in scas decb stc xor stc (bad) mov out fdivrp (bad) out hlt pop pop push (bad) clc outsl stc das push ljmp cld lds cli sbb lahf (bad) pop or cld int fistpll push jg jg std stos (bad) push call jmp out pop enter aas stc movsl (bad) (bad) out std lahf std pop inc mov cld fldcw decb repz jmp jmp (bad) (bad) aas jg outsl inc mov jecxz sti pop leave (bad) cli mov out pop dec icebp fucomip outsl (bad) ja cld pop paddd das jg jg repz fldcw call sti addr16 mov std cmpsb xchg (bad) decl mov clc stc (bad) jle aas repz xchg std clc dec (bad) cmc jg cld iret pop jg leave jg inc out cli xlat mov mov aas clc iret incb aad std mov dec mov jg cmpsl jg pop icebp cmp and (bad) scas (bad) ljmp jg jg cmpsl inc out cld daa jg pop (bad) or jp pop std ss frstor (bad) (bad) fwait jmp lock (bad) xchg ljmp icebp jg das and loope cld out iret jg pop dec (bad) jecxz scas stc mov dec jg (bad) cli frstor cmc outsl std mov ljmp jg loop (bad) out jg xor clc in imul xlat fdivr (bad) out cld pop call cmp (bad) leave (bad) cli and (bad) jecxz mov add ret aas jmp pop pushl loop (bad) mov (bad) out incb xchg div mov cld leave lahf sub jle mov (bad) (bad) pop jg das outsl inc aas std icebp jg xchg push adc cld add std add stc cltd mov test cli insl dec (bad) cld stc push xchg mov imull pop push (bad) loop jge aas xchg push jmp fs (bad) loope cmc outsl sti mov cmpsl decl lahf mov sti out inc (bad) addr16 pop jg stc idivl shr repnz pushl cld jg mov and mov lock cld iret jle mov ljmp fcomip lret jg pop aas std sbb cli paddw sti mov ljmp jno xlat clc cmp mov into in repz in (bad) (bad) fild xlat das mov imull jp fwait iret jg aas mulb sti fisttp stos aas movsl cld test das (bad) out jg pop ljmp fild dec ljmp jg das push outsl repnz adc pop (bad) add sbb dec sti xlat (bad) aad mov scas fwait mov jmp js icebp xlat scas repz cld notb std (bad) cli hlt out sti std insb (bad) cld daa (bad) cmpsl fucomp std out (bad) cli cmpsl call pop hlt pop cld outsb aas (bad) sub mov pop jg jmp std icebp jg incb icebp lret das incl cmpsl push stos (bad) decl sti mov imulb sbb xchg aas sti mov sar iret mov pop cli idiv pop (bad) clc das and icebp ja xor enter incb sahf (bad) fild aas out fstpt icebp idivl int (bad) repnz jmp lahf div ja clc loope stc (bad) (bad) (bad) in outsl cli inc mov cld dec jmp ja jg loop out notl mov and icebp pop jmp enter (bad) (bad) paddd dec movsb jg lahf cli dec (bad) fwait jg scas stc mov mov cmc pop (bad) ds jle daa cld stos jmp stc lahf jmp fisttpl mov imul dec lahf jnp (bad) scas (bad) rorb rcr out pop std xchg jg pop aaa std mov xchg jg loope mov jmp jle adc xchg cld (bad) inc scas fwait cmpl (bad) sarl dec std int jg pop std addr16 cld jecxz (bad) sbb das push pop icebp cmp mov mov stc icebp lahf (bad) jmp inc lret pop idivl into pop pop std cmpsl inc push aas outsl std sbb cld (bad) lcall lcall idiv fsubrp divb push pop (bad) int pop mov aaa (bad) fisubrl cli std (bad) fnstcw mov std sbb xchg aas stos cld sar cwtl mov fnstsw jg (bad) mov pop (bad) sbb push mov (bad) lahf std sub loope jecxz cld cmp (bad) in cli dec pop lcall scas jg aas stc into aas incb jg ja add out sti lret pop (bad) aas fdivrp adc (bad) clc mov fistpll clc aaa cld mov icebp idiv test (bad) fnstsw incl cmc jg mov into dec call lahf jle rcrb std xchg (bad) pop xchg mov std mov icebp pop stc aaa cld xor jg pop stc stos cli dec jg jecxz stc aas cmp xchg cmpl sar jmp mov cmpsb push call lahf testl jg ja sub das std (bad) nop pop mov jle fcomip ja jnp and jecxz leave jbe repnz pop icebp mov aas cli aas cld psubusw jg lahf decb repz (bad) mov (bad) cmp mov std scas (bad) rcr jmp lahf cld sub arpl cli std call mov pop cld lret (bad) (bad) fcmovu decb out mov jg (bad) aas outsl (bad) cmp (bad) jmp xchg jge das (bad) scas pop (bad) cld pop clc mov (bad) (bad) (bad) fnop in dec stc out inc jg out (bad) aas jg cld ficomp decl (bad) ljmp stc (bad) call pop out call std in mov stos enter cmpsl aas dec imul ja and jg (bad) aad mov jg (bad) jge addr16 pop jg (bad) pop out idiv sub mov mov loope outsl decb repz pushl hlt mov in cld fwait decb (bad) cld (bad) (bad) mov decl jbe int3 iret (bad) jno lahf mov fbld push outsl cld pop jle fild (bad) pop cld sti push pop incl cli (bad) jg dec (bad) data16 fdivrp lret aas and out (bad) mov (bad) into jg (bad) xlat jg aad sti negb std pop inc ret jmp aas jl dec jmp out sti lret push cld fcoms decl jg das sti arpl clc bsf dec fild lret (bad) jne push ljmp clc stos pushl jge (bad) sti das (bad) cmpsl cli jo setae sti jne mov jg jg out decl stc mov out xor mov pushl jecxz mov ja outsl (bad) (bad) iret cs clc jg out cmpsl (bad) mov in clc pop jle outsl clc paddw in cld neg loop cli gs pop std imul iret ljmp mov cmpsb jg iret sti int dec fmul mov adc lahf (bad) std mov mov mov (bad) cld xorl jle aas repnz negl pushl lock sbb iret pushl pop std ja lds cli out dec inc fucomip dec sti icebp fbld outsl (bad) std decb clc sbb into lahf negl fistpll pop std int sub sar imul cld adc incl cli gs and cmc (bad) cld (bad) fstpt push jnp (bad) cmpsl jg jnp xchg jmp (bad) cli push inc jg mov arpl xchg dec jmp push in pop decb aas cld or out cmc sarl cli (bad) (bad) mov std push (bad) in in stc repz aad clc lea sarb (bad) ds (bad) pop (bad) incb fwait (bad) fdivrl pushl rcrl call mov dec aas int mov divl cld arpl (bad) aas call lcall aas sti cmpsl (bad) mov lock or loope in das jmp fbstp out cli jae sbb (bad) aas cli (bad) movsb pop repnz jg idiv mov aas cli adc jmp cmc mov outsl jl pop (bad) xlat (bad) test cmpl mov decl (bad) (bad) sbb call jge ja ss ljmp repnz (bad) pop pop std cwtl mov push (bad) sti pop std jmp cmp outsb (bad) fsubrs inc cld jno ljmp aas fwait cld jne lahf cmc daa sub lcall (bad) pop jg sarl ljmp aas in (bad) inc jle outsl cld (bad) cld jge neg repz out in sti or mov cmp in jmp mov imul mov fidivr fnstcw jg pop (bad) pop jg push das ljmp rcll loope push aas std icebp cmp pop std addr16 (bad) xchg cld lret (bad) call icebp pop cmc imul mov std mov dec notb sti sub (bad) mov mov pop mov push (bad) push aas icebp out sarl repz call jmp aas mov lahf jg (bad) std outsl call aas cmc cli push (bad) mov jg scas enter daa xchg pop cli pop cld push (bad) cli imul jg addr16 mov lock and cmc jg jecxz in jno in out stc fstpt mov sti jecxz ret xchg dec sar int repz fistp out lock std jne (bad) sti aas call clc iret jle mov cmpsl sar cmc (bad) (bad) jns aam bnd gs jg mov xchg dec lahf das pushl dec inc das jle aas idiv repz sti scas std in pop arpl jae hlt fbld cmp out inc fucomip idiv pop lcall (bad) xlat jg idiv add mov fwait (bad) in repnz std (bad) jg clc xchg cld push outsl jle das jle daa outsl std scas jmp inc (bad) cli out mov lock mov jg sub cld inc (bad) mov (bad) aaa insl jmp (bad) in pop std jecxz in pop icebp idiv xchg jg jg (bad) xchg enter repz icebp mov pop out aaa (bad) repz mov std adc dec jmp (bad) (bad) (bad) fist movsl cmc lret aaa in (bad) out cld int3 lahf repz pushl in jg aas cli mov pop pop into jle scas cmc lahf std push (bad) jmp jle lahf (bad) and clc mov jle mov call sar cld out jg or mov iret lahf hlt aad mov jmp mov mov jle lret cld mov lahf sahf (bad) jg,pt das cltd dec (bad) out paddd cmc mov jg pop cmc ja icebp imul ds inc (bad) jg mov (bad) std sbb stc iret fdivrl std out out (bad) (bad) incl mov scas cld fistpll (bad) sbb mov jmp iret (bad) das jg mov mov jecxz jmp (bad) adc std clc aas rep call in inc fucomip lods cwtl (bad) (bad) jg pop pop std popa jg pop (bad) jg jge repz cmc scas ds inc idiv sti in div jg adc xchg fistpll xlat cld and lahf jb jg scas (bad) fidivr (bad) fldpi aas out pop (bad) mov push (bad) (bad) fidivrl sub jmp cld icebp nopl adc jb jmp jg idiv cli outsl (bad) out ljmp pop cld sahf (bad) stc pop stc sti iret decl jge loope repnz ret (bad) lcall (bad) aas sti (bad) aam fcomip clc pop std addr16 (bad) std idiv push call jg jnp data16 scas sti sbb sar int aas jne ja idiv lret cmc fisttp outsl bnd jmp fwait out std sar cli xchg sub scas movsl cmc mov cld movsl incl adc sarl hlt bsf add xchg fcomip das pop pushl fld jg pop xor sbb inc (bad) fsubr (bad) js stos fdivrp (bad) repz xlat sti or jecxz aas jne jg aaa (bad) jmp mov fdivrp (bad) jg ja fwait inc jg repnz cld xchg jg pop hlt xchg xor std add pop cli cmpsl std cmp out daa mov mov out cli clc iret jmp (bad) mul jg push lahf std fistpll lahf sti out (bad) fdivrp int das (bad) jae mov jmp idiv out (bad) mov cmc imul mov jg mov icebp aaa (bad) sub dec dec das jg ja scas jecxz dec repnz std repz (bad) sarl dec (bad) fsubs jmp jg jg lahf (bad) xchg mov (bad) mov jg jg iret shr mov call jg std jmp mov lahf clc jnp mov jecxz imul cli push (bad) (bad) popa std icebp jmp loopne stc popf call outsl (bad) addr16 mov inc outsl std out jnp,pt jg mov call call jg xchg std movsl jg cmc fist outsb (bad) clc mov mov jg lods (bad) decb outsl jg (bad) stos jg fucomip idiv sti dec icebp xchg mov cld iret mov xchg mov sub pop jg fstpt sbb sti imul pop sti ja stos out ds sub aas xchg (bad) out (bad) (bad) pop out cld (bad) (bad) fistpl pop cld idivb cli popf xchg clc pop cmp ja cld (bad) int ljmp idiv stos pop (bad) mov incl iret (bad) std movsl push jg pop std clc (bad) cld out sbb popf aaa mov call out jmp bnd cld outsl sbb push jg scas std repnz daa cli std inc mov (bad) cs cld (bad) (bad) ljmp in pop imul cld xchg fistpll pop into jle ja mov psubw (bad) loop pushl aas clc push jg das sti sbb repnz loop sti pop xchg (bad) std out cli xchg jmp jmp loope cmc aas jg rcrl (bad) js nop cld inc mov std psubb pop cli fwait jle mov sbb std fdivr xchg (bad) pop jg lahf idiv cld ja bnd sti lods (bad) stc cmp cmp inc (bad) cwtl dec jg push mov and jge (bad) dec imulb (bad) xchg cmp xchg (bad) das dec pop cmc repnz gs stc (bad) dec mov cld mov incl inc push aas hlt pop into mov dec into (bad) xchg pop fdivrl jg loop mov (bad) (bad) neg in out stc push es out repz sub out pop cld sub xchg psubb call (bad) mov leave (bad) movsb jg stc outsl repz fistpll jmp jg mov jl incb cmpsl mov push call mov xchg pop cld pop ds lcall (bad) cli sarl jg aas cmp popf daa mov cmpsb leave aas cli mov sar xlat (bad) jmp daa jp,pt imul (bad) psubd incb out cli or cld pop icebp push lcall out jne or ja (bad) cmpsb pop repnz cld (bad) and fnstsw stos (bad) scas aas loop cli in xlat sti push lahf (bad) data16 ja xlat aas cld jg call lahf clc sti out idivb lahf cli lods ljmp inc jg mov push jg leave mov fistp mov (bad) dec pop jge mov jl repz fstpt jg mov (bad) stos cmp test loope clc push out cld xchg fstps push das sti dec dec mov sar repz jnp xchg aam mov cmp mov fwait out mov std mov mov psubb out fcomip iret stc mov dec cli mov ljmp idivb (bad) aaa (bad) fdivrl loopne stc movsl jg jmp cmc mov jg iret cli xchg dec pop cmc fwait es decl not cld push mov lret jg pop mov jg fstpt das cli lds lret outsl lcall (bad) ja fdivrp cmp mov out std data16 mov lods pop mov jge (bad) jp lods mov das jg xchg fcomip cmp idiv adc mov idiv mov out iret clc scas jle jg iret es mov add sti sub xlat lcall push std pop jg mov sti xchg (bad) xor mov push pop std push aas jge mov imull pop aas stc push jge iret clc jge aad fbstp pop sar icebp mov dec (bad) stos aas out cmp mov (bad) cli mov std jle repz xlat pop icebp dec jge jmp std fnstsw aaa cld mov test cmc pop and fdivrs sub pop inc icebp fistp xchg xor into repz loope sti das mov das cli aaa call clc ret (bad) fstpt sti outsl fscale movsl aas stc xor dec mov aas call stc fcomip adc mov lret mov aas out clc pop (bad) ljmp mov jg outsl lock neg cli aaa std ljmp in jp clc (bad) ds (bad) mov mov lods decl (bad) mov dec out (bad) jbe jle ret addr16 flds incb hlt lods lahf (bad) sti xchg mov jmp and jmp lahf cli mov xlat cli adc jl outsl xlat pushl addr16 paddd std addr16 pop cmp fnstsw jg in mov idivb pop icebp xor sti das jmp sahf call aas jmp mov out jmp iret pop int std push jmp aas repz clc ja lret call imul jmp jle mov dec ljmp (bad) (bad) loopne (bad) cmp idiv xchg mov jae jg jg psubd ds fwait (bad) out in aaa incl jle das cli std pop jge js std xor out (bad) jge push int pushf mov aas stc imul mov stos mov cld sub aas clc in cld xor mov repz jg (bad) mov dec scas cmc jnp jmp std in ds xchg jg fnstenv xor (bad) mov (bad) xchg fucomip das cli cmpl stos clc (bad) xchg (bad) out xor (bad) nop outsl (bad) fcmovnu cli mov repz call fucomip lock cld outsl addr16 fucomip pushl jle aad cli dec decb fucomip sarl idiv imul cli das decl pop cli xor int outsl jmp jg jmp push (bad) test leave mov mov adc aas repnz shrl stc fistpll lahf cli out in (bad) call lods (bad) out jg cld stos (bad) stos aas out sti pop mov icebp mov (bad) sarb cmpsl (bad) aad out clc pop jg pop out mov inc mov idiv in lret jg mov (bad) out (bad) into aas cld lods lahf cld push (bad) sahf aas jmp mov repnz stc out lock cld lcall shr test lret mov daa jg inc (bad) fcompl std pop jl hlt (bad) cld cmp stos jle out idiv xchg ja aas in pop stc addr16 aas jmp pop cmc call insl std push jg aas cltd std mov std out std xlat cld pusha cld pop es std int negb int popf repnz stc call jg ret mov (bad) pop notb idivl jns addr16 pop jg std leave fcomip ja mov aam repz cld add cld push mov (bad) pop idiv idivl loopne pop pushl mov mov inc dec stos jg into pop cli pop incl std jbe hlt mov xchg call xlat jg repnz fdivrp push jle fucomip pop jp pop std xlat dec out hlt lret jbe call jg fcomip xlat cld sub cmpsl (bad) push iret (bad) popa repnz (bad) ja loope jns addr16 sbb sar leave pop repz pop jg (bad) repnz cli inc jle push (bad) inc jg (bad) jmp cld inc push ficomp dec cli hlt idivl clc jnp cmp pop dec pop std cmp push cmc inc dec (bad) mov inc out lock jle in lahf stc leave ja (bad) das sti xchg (bad) xchg outsl ljmp pop (bad) mov andl decl jmp mov stos jg jg (bad) (bad) fldenv cmc repz jg das clc push (bad) fstpt (bad) stc sub cli pop call das cld dec (bad) stc pop pop cld pop jmp loop fucomip ja cmp outsl jle das push cld cld ljmp pop sti jg outsl call jmp fnop inc adc jg pop clc inc push cld lock aas repnz ljmp jg aas clc lods (bad) aaa sti dec jg (bad) stc fldt dec icebp out jg out cld ds aas sti cmpl mov cmpsl push cld mull std cmpsl jg loop pop pop pushl jle mov lcall push push jmp mov fwait jg lahf fstpt sti cmpl mov int3 mov push push (bad) jg jg aad pop lds mov sub cli outsl pushl lods pop cld sub sbb jle jmp sti jg lahf imulb std push jg (bad) pop sti iret cld pop jg paddd aas loopne stc (bad) pop icebp scas (bad) jge jmp mov sbb cmp scas mov lahf jle das std loop jecxz lods fnstcw xchg repnz jg das cld jmp std jecxz (bad) loop cli inc (bad) mov sti lahf std mov jmp mov ja cmpsl scas iret incb repz cld jnp pop into (bad) (bad) aas out (bad) cli xor jnp call push pushl lahf (bad) ds in (bad) mov clc mov sbb jg xlat std or jmp inc jg pop cld mov mov push scas decb lahf cld push mov std out (bad) ljmp inc mov (bad) cli arpl pop std cmp out sti ja imul in dec std push (bad) fstl leave lahf lock out std ljmp or daa mov pop sti ret inc pop std mov pop mov cld pop jg in incb insl jg fcomip cmpsl cld lret mov xchg aas (bad) pop push cld call jle pushl cld xlat call sti outsl jg (bad) xor scas jg scas cli in pop inc aas in clc (bad) jmp inc (bad) jmp idiv (bad) (bad) aas and out out stc dec aas cmp ljmp (bad) out fucomip idiv std bnd (bad) in lahf sti cmp mov adc icebp ja adc (bad) mov movsl (bad) daa dec mov (bad) jg mov into scas imul jl cmp lea (bad) fistpll aas (bad) fildll jg (bad) scas lcall (bad) (bad) std (bad) cld lahf cli (bad) out (bad) xor std paddw pop jno pop stc movsl in pop cli stos (bad) movsl mov mov (bad) xlat fcomip leave xchg jg (bad) (bad) test stc cmpsl mov fnstsw jg push (bad) mov pop (bad) jmp jg mov mov clc aad lock aam in jp lahf cld data16 fadd jg push fistpl push jg pop imul (bad) ja call aas jg jg hlt xchg pop push jg jb in (bad) fcomip mov in jg cmpsl out fstpt stc mov sub xchg loop stc jne fnstcw xchg decl cld cltd xchg mov (bad) jns out not cld mov std xchg add out ds mov idivl std inc idiv out not lahf hlt pop cld pop push jg loopne cld mov lahf dec (bad) fdivrl jns fnop aas jle scas sti xlat jg (bad) (bad) (bad) mov (bad) mov jg pop notb sub jno in mov (bad) pop (bad) mov mov (bad) dec jg cmp lahf sahf lcall (bad) loop jge loop cld jge loope loope clc scas jg jg (bad) sub insb decl pop (bad) cli movsl jg insb cld mov aas decl jmp inc pop cld leave outsl icebp addr16 fstpt (bad) push jg outsl clc aas scas jle ja mov in cmpsl cmc sti fucomip sarl cld (bad) jge pop std jae pop cmc aaa cld adc cmp aas jg pop std xchg jle in push jg aaa std aaa jle (bad) stc lahf (bad) mov aam in lock cld jmp repz mov (bad) mov pop jno daa sahf aas cli scas dec fist cmp jae repnz sti sbb mov (bad) outsl cld pop sahf cld and aam cmc jmp push jg stc out jg (bad) daa std push mov (bad) pop (bad) xor out sti pop cld hlt fcomip das pushl icebp (bad) pop lret mov lret (bad) dec cld addr16 jg (bad) clc cmpsl jle pop lcall cmp jg std sbb mov hlt idiv sar mov outsb jns stos (bad) pushf aas in pop lcall sti xor lcall cmc icebp scas std imul paddb idivl fwait incb jg jg scas popf sbb mov lret repnz aas cli (bad) push dec dec jle cmp cmpl dec (bad) cltd jmp in (bad) mov (bad) cld cmpsl std testl mov icebp sti pushl (bad) sti jg jg mov mov cli jg mov aaa clc mov jg out leave outsl sti out imul repnz (bad) push fstpl aaa cli pop ds fmulp jmp out sti sub jge idiv xchg cmp pop cmc lahf cld loope jmp repz mov call test clc cld (bad) sbb ja addr16 ja cmc (bad) std loop cli repnz cli stos mov call (bad) out sbb das pushl repz cld (bad) call repnz call out lahf inc imul psubd cld mov loopne stc dec jg aas stc xlat jp mov lock jmp loopne icebp daa cld and idiv scas clc gs fwait jle jg (bad) jle xlat cmp idivb ljmp aas repnz clc sti jle push jmp pop test jecxz cld pop (bad) mov xchg cld mov into lahf sti or ljmp int pop stc (bad) (bad) push aas repz (bad) jbe lret das pop decb ja sarb jg aaa (bad) (bad) fstp (bad) call decb jmp incb (bad) stc sbb (bad) mov pop aaa mov jmp mov or lahf jg stc dec xchg (bad) std xlat outsl lcall mov pop stc int cli lods cld sti jle aas icebp pop std int dec fucomip pop inc aas negb enter ljmp jae shr stc pop outsl inc mov std (bad) inc aas (bad) or std sarl scas mov loopne out clc outsl jg jg scas dec push pop (bad) mov jne cld loope stc jnp sar ljmp inc (bad) mov (bad) shrl out sarl cld xor fdivrp imul mov fstpl mov jle (bad) jns in (bad) (bad) push dec pop lock adc xor iret in mov mov jg cli mov arpl clc aas std sbb aas loope sti ja (bad) hlt mov imulb fwait cld xchg call (bad) outsl sti imul mov pop (bad) std aas hlt mov mov cli pop jbe incl outsl inc fucomip in out (bad) daa into incl sti inc jle (bad) (bad) mov mov std iret sti ret push (bad) in fucomip scas and icebp mov outsl icebp cmp clc iret jl (bad) cld clc scas sti imul (bad) jle fucomip das decl imull jg pop std ret jg dec cld jp cltd std sbb incl xchg (bad) sti cmp sarb hlt das (bad) outsl jmp sbb mov push incl std push jmp out mov (bad) loop in cld daa jg (bad) clc mov fs adc mov std hlt aas cmc stos scas (bad) mov jmp cli icebp (bad) pop (bad) xlat call fcomip dec cli ja (bad) out (bad) cmp cmpsl cld mov push sti aas loopne cld stos (bad) xchg aas icebp punpckhdq ljmp cmp lods in incb clc (bad) std (bad) sti jmp inc repz pop lock out call push jg pop neg (bad) jne icebp popf pop dec (bad) (bad) cli loopne dec jg (bad) cmc outsl mov inc (bad) xchg mov inc dec pop sti pop std mov cmpsl (bad) out (bad) jmp in sahf (bad) cli mov aas notb adc jns std aas out cli adc aas out mov lcall cmc fdivrp pop jg (bad) cmc dec jg dec cli jmp cmc incl dec sahf dec mov popf call aas lcall cmp negb mov sbb mov stc push out jle (bad) jp stc das std adc xchg push inc mov std neg daa mov mov jg outsl cli push idivb pop mov (bad) (bad) and out sti mov jle arpl in lcall mov call (bad) jg mov (bad) aaa (bad) fwait aas repnz mov (bad) (bad) sarb push jmp jg aas jns push jg imul outsl pushf cld pop jmp pop mov (bad) incb xlat jmp jg dec cmp sarl lock call sbb (bad) mov cld mov aas cmc xlat cli in inc aas loop cli xchg incb decb cmpsl jg lahf xor adc clc daa inc aas in aas lret jmp jg aas sub (bad) decl int cmc pop std push cmp cmp lahf cld imul push ja js repnz jns cmpsl (bad) mov out sti leave jg pushl dec pushl out jnp,pt sub jmp nop cli lds negl fbstp std (bad) aas lock decl jle (bad) (bad) imul inc idivl sti xlat jmp stc dec jle mov jle in mov mov daa (bad) xchg mov out in pushl jg pop sbb pop cld mov in jg outsl ljmp leave dec lahf hlt (bad) mov jecxz aas cli add repnz (bad) (bad) pop call sti aaa std cmp pop cld idiv and fistp jg pop cmc xchg dec jmp daa fdivrp add stos pushl push sar jg push addr16 (bad) call pop inc ficomp idivl xchg std sti in jmp or fisttp (bad) sar aad (bad) jmp stc (bad) call faddp jg scas sti mov iret jle imul aas repz cmp popf (bad) scas (bad) stc idivl push jmp jmp clc or mov ja sub call sarl clc (bad) lods (bad) ljmp paddd xlat stc mov (bad) pop pop (bad) adc inc mulb std ret pop sti cwtl loop jg idiv mov scas mov lret mov sti lahf std sub int3 aas icebp aas aad in (bad) in outsl incl scas inc jmp ljmp sar cmc loope jae cmp pop pushl lahf mov stc cmpsl clc mov sbb repz repz (bad) and dec std lahf iret pushl in jmp scas cmp (bad) cmpsl (bad) mov cld fnstsw out hlt addr16 lahf (bad) out fbstp stos (bad) mov jecxz (bad) aas stc outsl (bad) in jb jg decb not pop hlt cmp mov xchg out inc pop call lahf call mov jmp mov dec aas in (bad) fsubr sti mov mov (bad) repz (bad) scas jg lahf repnz jge lahf cld add popf sub stos jg daa push fcomip inc decb jg into mov jg aas icebp cld jecxz xchg (bad) (bad) clc mov call dec icebp imul jg lahf sti out std fidivr pop cli sub out mov jge inc mov pop and std jmp cld cmpsb mov jg pop idiv sti mov pushl mov stc cmp out std xchg outsl repz (bad) (bad) cli jg aas clc xchg movq fcomip push jl push std mov jg jp jmp jnp lds das and stc mov call cmpl fnstsw cmp (bad) std pop jg lods (bad) mov pop clc inc fsubl pushl mov mov pop pop pushf dec sub xchg (bad) cmp hlt outsl std imul sti loop mov icebp lahf cld sbb hlt aas repz std jne ret jg pop (bad) in push out icebp add pop jle imul sti stos jle lret divb mov (bad) jge fidivrl movq mov das sti jge pop sarb jg call scas (bad) clc (bad) jp ds dec jg xlat fdivr call mov imul fmull repz incl int popf jmp aas cld addr16 test cmpsl (bad) mov out cmpsb cmc out fcomip pop cmp stc mov xchg cld incb xchg cmpsl mov out negb jnp shr std out clc jne mov popf jle cmp outsl cli jge xchg aas stc (bad) clc add (bad) std loop jne xchg jg pop hlt mov dec jg mov aas negb std call lcall jg aas lcall sbb (bad) clc (bad) pop imul lds jg (bad) fisubrl xchg (bad) ds jge out decb aaa sub pop icebp xchg addr16 lds clc addr16 mov jg mov push push (bad) repnz sti jecxz cmc mov lahf stc or lcall into jmp pop sti addr16 pop (bad) ja sti jae fdivrl jecxz clc mov cmc scas stc hlt fildll mov mov pop jmp fcomip das cld xchg inc repz popa jmp pop gs pop lock lock push mov hlt movd imul pop call ja lret jg pushl lahf stc (bad) out cld dec cld cmp scas icebp cli daa (bad) sti mov fdivr out out lock scas std ja jge hlt aas hlt aas cld movq scas cmc imul jg repz std ss jle pop (bad) jmp ret cli das (bad) mov hlt hlt scas movsb cld jmp in mov (bad) fdivrl stc fstps repnz popa inc (bad) push (bad) jmp rcrl fidivrl fcomip inc (bad) push call rcr lahf (bad) out jnp aaa std scas mov das (bad) in jle stc xchg aas lock cli std jle jg cmc mov loop pop mov (bad) and ja sti fwait addr16 fucomip outsl cld inc (bad) sti aas popf (bad) imul sti out (bad) gs jle mov stc idiv jmp lock decb lret (bad) cld out sti xlat jle cld lahf fdivr sbb cmc inc std lea stos call (bad) in scas std xor pop ljmp jg incl pop repnz pop (bad) lahf std mov outsl std sahf jmp fcomip lahf mov fnop mov imull mov (bad) idiv or (bad) ds sub xorl mov sti jg aas cld ds idiv cld repnz leave (bad) iret (bad) es repz std int (bad) xlat (bad) mov cmc fistpll outsl (bad) inc jg scas stc mov rcrl (bad) (bad) out lahf clc daa scas pushl hlt cmpsl (bad) in aas out mov fistpll xchg push cld cmpsb (bad) (bad) (bad) jge jnp mov mov lcall jmp mov inc jg pop jnp xlat cmp mov decl test jg outsl sti xchg inc mov jl leave aas sti imul (bad) fidivrl out ds aaa decb lahf std lcall jle outsl std jmp cmpsl inc outsl dec jmp jg (bad) pop cld dec jg jg out scas sti out jg pop sti loope sti pop jmp pop dec jg popf aas ljmp idivl std xchg ja jmp clc cmp (bad) jb xchg xchg in icebp (bad) stos mov outsl (bad) cmp aad ficomp mov (bad) (bad) cli dec (bad) incb cli jae std aad fucomip xlat cmpsb cld shrl inc in xchg outsl jmp xchg std mov lock aas out pop movsb cld std jg div cld mov repz sbb lahf je paddw push outsl sti out incb mov lahf stc daa push (bad) sub jg (bad) stc (bad) jg aas loope and (bad) mov lahf lcall mov (bad) fst lahf lock aaa jg scas dec (bad) fnstsw cli (bad) incl test mov ljmp jge int3 fbstp in aaa cmp mov xor mov fprem1 (bad) cld iret std (bad) enter pushf std mov repnz pop (bad) (bad) xchg aas cld fldcw (bad) (bad) jmp daa (bad) std xlat cli iret jg lahf cld (bad) jae (bad) std pop addr16 (bad) ljmp idiv repnz cld loope rcr mov xchg (bad) cmp les push pop dec inc notl jmp out lcall fistpll stc push lcall lcall cli jmp lds dec stc in push jg outsl mull pop (bad) repz jg fnstsw lret (bad) jmp mov jmp jg icebp fbld std scas inc (bad) (bad) jg xchg cmpsl jecxz bnd jae jg mov jg repz sti (bad) imul cli movd aaa scas mov (bad) fwait (bad) adc loop pop jne cmpsl cld daa mov jg das stc arpl cwtl inc jg jge mov pop dec cld decl repz daa incl leave out (bad) dec jle lahf inc jg cli addr16 popf (bad) lods out std std jg mov mov xchg push pop jge xchg cmpl clc pop mov mov loopne in cli push mov (bad) mov int3 outsl std in lahf repz pop cld xchg (bad) stc scas cmc pop js,pt (bad) addr16 add lret aaa (bad) cld xchg cld mov clc in ret aas jl (bad) std pop jmp lahf clc out (bad) jmp mov (bad) lods mov addr16 mov out jg aas dec out scas jle xchg mov (bad) mov or das sti mov loope std pop cld (bad) std loop clc imul sti idiv cmp icebp sbb adc incb jnp fstpt das (bad) sub ret jg dec cli mov lret jg stos decb mov (bad) lret jg fildll es push dec outsl repz (bad) jmp icebp scas mov fmull (bad) js in shrl incl (bad) (bad) std repz fcos icebp cmpsl std push (bad) (bad) in pop lock xchg and push mov iret jg jmp lock cli gs das pop mov mov pop jg icebp pop mul jg iret std jmp in stc xchg lret out cli dec (bad) loopne imul aas call xor sti (bad) les mov dec mov inc pop aas cli iret decb jmp insl repz out std aaa (bad) mov out aaa cli mov xchg outsl std ljmp bnd cmpsl incb jg pop cmc fwait std fnstcw aas popf pushl pop std mov call inc aas lock mov (bad) aas sti aaa sti cmpl aad mulb std mov nop pushl sti lret (bad) mov sbb pop jg jg out jmp (bad) shlb (bad) mov ja rcr jne (bad) std jg dec lahf jmp clc sbb jmp xchg jmp lea repnz (bad) out popf dec (bad) stos xchg (bad) stc pop std dec mov stc lock sti sar in (bad) aas mov aas loopne cld (bad) jg (bad) into jmp loop cld ja mov fdivrp mov cmp (bad) mov jg cmc pop aas pushl dec mov pop incl jmp aam std cmp outsl jmp cli and (bad) in idiv mov cld imull (bad) call mov jg sti fwait out lcall outsl mov mov jbe cmc in clc pop inc mov cmpl stc push in notb pop mov decl xlat das cli sbb aas sti icebp fucomip dec sbb sub idivb cld clc pop icebp pop sar xchg fnstsw jg out ljmp idivb icebp xlat std arpl mov xlat scas pop decb je std (bad) jecxz in fistpll daa jg (bad) (bad) loope loop cmc pop std and aas repz pop cli jmp (bad) ljmp out std and (bad) lcall jg inc jmp jg mov cmc jle pop jecxz cli aas jg push repz idivl aad ficomp decb leave (bad) fdivrs mov push pop div aas mov cli iret stc bnd dec (bad) cli out (bad) repz std std jmp outsl hlt icebp loop std xchg call jg pop mov idivl pop jg sti setbe int into pop clc scas jmp jmp cmp outsl mov mov call pop jg mov jg xlat (bad) xlat lret xlat stc xor rcrl (bad) out icebp lahf std and cmp xor (bad) aaa sti cmp das stos (bad) clc pop jmp lock (bad) mov inc jg idivl lea push (bad) cmpl incl pop mov icebp rcrl (bad) jecxz std outsl push push call mov std xor ret or (bad) (bad) icebp jnp xor pop icebp adc fisubr icebp out (bad) sub negl push jg idiv mov (bad) xlat cld in (bad) push pop (bad) adc clc push sar (bad) mov popf (bad) mov xchg loop lahf sub (bad) mov (bad) fdivr loope clc (bad) ret jmp out xchg std outsl mov cld mov outsl cli pop incl aad in outsl mov addr16 sub in out jo stos (bad) test ljmp cli out rcrl lcall sarb jg ja (bad) (bad) sti (bad) (bad) fcomps jg imul out nop std incl mov mov cmpsb cmc xchg jg pop std push (bad) aad repz pop std and in fnop xchg mov jge fistpll mov pop (bad) call idivb or (bad) cld inc (bad) in outsl stc cli mov fucomip ja popf jle xchg jg loope stc addr16 jmp (bad) out out cld lds in lock jg std fcos (bad) pop imul call sar (bad) lock mov ljmp (bad) mov mov cli sti icebp pop cmp inc mov (bad) cmp (bad) stos sub repz lahf clc (bad) out pop clc fnstsw (bad) fnstcw push mov std aad ljmp sub loop std arpl icebp pop cld pop fnstcw mull lea sbb mov cld cmp (bad) fcomps jle cmpsl (bad) out mov lahf lahf incl mov mov loop stc inc jg das cmp call fdivr mov mov cld or cli ja lea aas std in xlat (bad) fwait (bad) fsubl xchg xchg in stc pop dec icebp iret jg (bad) std ret ja cld mov idivb aas inc jmp jg jg sbb loope aas in (bad) decb mov lds repnz pop xchg decl mov mulb call idivb repnz dec inc jmp pop cmc aas cld lahf inc outsl cmc fwait (bad) fnstcw fisub mov stc cmpsl fistpll icebp loop (bad) cmp cli psubq (bad) sarl lcall test aas lahf cld sarl out pop div std xchg daa (bad) jge mov fcomip outsl sti fdivrp clc out (bad) daa sti lds cli out iret cli mov fistpll or dec mov cmc push jg dec dec dec fcomip lahf stc or outsl cmpsl cmc shr dec jle mov aas decl std jge neg cmc or pop cld das std idivb repz cld int rcr mul scas xor pop mov out out stc aaa sbb stc jne ror mov sub out outsl stc daa jle negb (bad) adc jg jmp mov pushl outsl (bad) mov (bad) decb idiv mov out cmc cmpsl jg aas div xchg push daa std lcall (bad) stos mov lea cmp jmp jmp jg lods cli jmp clc in clc add hlt cpuid clc decl jns sti std in (bad) mov push sti ja repz mov cs (bad) xlat cld jge mov fs std xor outsl idivb (bad) fisttp cmpsl jmp push xchg ds inc call out repnz cld (bad) mov (bad) fstpt (bad) cld and clc jmp sbb cld push cmc jle addr16 pop mov std in mov push iret stc sti dec aas jo jg out xchg aas std idiv stos (bad) movsb icebp pop lcall leave push ja in mov ret cmp pop jg ljmp (bad) repnz (bad) dec jmp das mov pop idivl stos aas jnp fnop out lcall dec (bad) mov push hlt outsl clc repz jg jle mov fidivr dec cli adc pop decl std psubd mov (bad) (bad) incb aad std sub imul pop repz decb mov jo pop (bad) jae mov pop std inc inc std (bad) jmp std fcomip jle fucomip lahf std imul das jg leave pop (bad) sti out hlt jmp xchg rcl fstps fwait std sar stc scas clc iret call fcos imulb (bad) push pop cmp scas pop cmc sti std (bad) push jg dec cli ficomp mov (bad) cwtl push out sti add hlt pop cli xchg pushl (bad) (bad) nop jmp lahf pushl (bad) mov repz out (bad) mov das call lds call outsl ljmp iret (bad) call cmc mov out dec (bad) loop stc lahf inc in mov lahf stc dec (bad) cltd mov fnstsw jg psubq sarb jg outsl jne jg (bad) stc dec stos fistpll addr16 xchg jg aas std mov fstpt imulb jg stc rep jmp lahf pushl mov sahf decl mov cli xchg fstp icebp (bad) push jmp jg pop cli pop jg fildll mov aas hlt pop cli pop sub stc pop cld repz in jg lfs jg jecxz loopne ljmp jge (bad) scas push call jle mov dec jmp dec stc push jg out (bad) jecxz jg pop ja scas fbld mov (bad) int jl imul cld sub imul sarl scas jmp in pop cli mov test xlat incb (bad) dec cli pop xor mov push aad std stc ljmp std int repz (bad) cmp ja std (bad) or aas clc rcrl xchg popf mov pop out loopne aas cli pop decl lahf pushl push addr16 iret (bad) ljmp clc and mov aas cmc aaa xchg (bad) stc push jg cmc incl xchg jmp push pop (bad) out call imul jle mov out (bad) jmp (bad) pop nop lea jg push mov out aas cld jmp fistpll (bad) in fucomip pop (bad) stos (bad) in outsl std test imul iret (bad) out (bad) clc out cli adc mov loope clc cmp aas sti aas std mov cmp cmp (bad) out mov std mov icebp dec ljmp aam lock sahf jg push loop icebp aas (bad) ja xlat (bad) out fcomip mov inc lahf cld das (bad) pop mov idiv idivb mul (bad) (bad) es decb (bad) mov repz mov (bad) and sti aas std xor aas idiv in pop repz (bad) mov pop std inc mov cld dec mov sarb loopne jle mov ss jg daa std jns shr stc pop (bad) (bad) pop ljmp (bad) xlat out (bad) pop jne pop mov ret mov add (bad) fidivrl xor lock cli shl lock lret scas cli stos (bad) xchg lahf pop cld dec push lahf hlt sbb push pop dec jg icebp (bad) (bad) pop (bad) in scas stc cli in sti dec push pop std fs loopne std (bad) cwtl mov ja jecxz pop (bad) in stc in (bad) movsl jg pop jmp in (bad) xlat inc push loope (bad) lahf dec jg ja lcall es push call push jg push in cli in jg das (bad) jnp into aas cmc scas stc xor lcall (bad) frstor jnp sarl outsl repnz cld fidivrl std mov sti mov mov xchg decl jmp jmp std (bad) (bad) (bad) xchg jg (bad) jge jg (bad) aaa clc (bad) test icebp daa jmp arpl sbbb (bad) xchg (bad) cmpsl jg idiv mov out scas cli int (bad) push das stc mov loop cli insl call aas imul rorl pop cld ja lock mov scas std dec aas (bad) out fdivr ficomp sti (bad) mov call test in icebp pop clc imul mov aaa cmp (bad) fnstenv outsl mov iret (bad) test cld mov cmpsl push fistpll fcomip pop stc add icebp lahf (bad) repz jmp (bad) (bad) mov pop xchg inc mov (bad) fnop mov push jle mov (bad) (bad) (bad) pop cld mov sar gs cld sahf dec lahf cld push pushf (bad) adc sar mov call (bad) jmp shr icebp leave push imul scas daa mov (bad) clc aas divl (bad) in lret pop lock outsl call aas lock sti mov std repnz in iret (bad) cmp pop mull (bad) outsl decl jmp mov mov out lahf cld rcrl repz jmp jg mov sti xlat jl ja (bad) fstpt aaa (bad) xchg call aas sti idiv dec (bad) cld (bad) mov jg popf push jecxz push (bad) fdivrp scas decl xchg pop std xchg mov jl pushl aas cmc iret (bad) and pop repz std out mov scas mull (bad) aas jns cld dec mov (bad) mov imul icebp cli std lahf repnz cld pop inc push aaa clc sti jle jbe pop fdivrp cmp push (bad) das jg aad std leave pop repnz cmp (bad) jecxz repnz js pop std xchg daa jg lret jg stc jecxz jg or xchg jg cli scas lcall fbld testl mov std lods mov iret pop jg shrl cmpsl aas jnp out std ja (bad) fidivr lock sbb in inc icebp iret aas jge xor fxtract (bad) jns imul iret (bad) jmp lock aas sbb mov (bad) cli pcmpgtw clc pop sti (bad) mov mov jg idiv shlb outsl jmp jg jg aaa (bad) (bad) outsl (bad) fdivr (bad) (bad) pop dec stc out aas call lods aas jle (bad) clc sub pop lds mov dec (bad) (bad) pop js pop cld imul cmc (bad) pushl negl lock aas iret push out aas js pop cld les cmc arpl jg (bad) loop repz std loope aas cld lahf pushl jg lret jg (bad) loopne stc iret push in cld pop std sub fisubrl daa cld scas jg outsl cmc addr16 push lahf (bad) lcall mov lds stc pop fdivrp sbb out sti repnz clc and loope divb jbe jl xchg jno pop (bad) mov sub (bad) fist cli negl std xchg dec cmpsb dec (bad) cld fcomip aaa sti or mov idiv sub mov cmc mov mov jge lret aas stc jg shufps jle xlat cli dec sub sti lds std dec push pop stc aas lcall jg repz ja ljmp std aad (bad) cmp (bad) in fild jg xchg lahf cli xchg xchg fucomip mov (bad) sti adc psubw (bad) jg lahf fnstsw (bad) std fimul or mov cmp outsl stc imul and mov cmc pop std jge pop lock in mov pop std dec jge mov icebp sti (bad) idiv aam aas cli jmp jecxz in aaa sti pop ds aas hlt mov imulb imul xor idiv les in sti negb stc arpl pop mulb daa jg aas sahf into (bad) fidivrl out cmp sub out stc aaa cld pop mov incl test in in incl std push (bad) mov ja repnz (bad) (bad) mov icebp pop stc test shll pushl pop std (bad) (bad) inc (bad) incl out inc out (bad) jecxz out clc cmpsl out lret std (bad) in ret pop (bad) jmp (bad) jmp fwait mov pop jle mov (bad) test not inc jg jecxz cmc mov mov (bad) popf aas jmp icebp fidivr aas ljmp (bad) sti jg aas (bad) fldcw pop test das mov (bad) std and out mov out stc pop inc (bad) pop cld mov enter icebp fcomip sti cld xor xchg dec jg inc idiv jmp mov lahf cmp stos mov jg jg mov mov xlat jg push jg lahf negb aas std lahf (bad) xlat jg (bad) (bad) (bad) inc jg mov neg (bad) insl (bad) in in cli out ja pop cld mov clc xlat ds jecxz in jg int dec push lods pop cld xor aas push cld jge iret jns cmp cltd aas cmc sub mov in (bad) insl (bad) fsub pop std paddd pop scas (bad) cltd push divps negl (bad) mov pop (bad) jmpw (bad) std pop cld xor cld imul enter outsl icebp jecxz (bad) cld pushl imul jg scas fdivr mov jg dec xchg (bad) stc repz pop out std (bad) sar loope std mov lahf icebp clc (bad) repnz fidivr out sti (bad) movsb fucomip outsl (bad) mov std hlt out clc ljmp lahf cld add mov push xchg push pop mov jg pop cmp lahf ds cmp rcr repnz (bad) in (bad) lret lcall in push insb call (bad) (bad) mov rcl scas (bad) das sahf std jg,pt pop inc stc mov (bad) pop (bad) mov cmp adc clc (bad) rorl pop (bad) sarb negl xchg decl xor dec aas xchg repnz lahf std int loope pop cld arpl (bad) ja aas icebp jecxz std jae pop stc pop cli fldt mov hlt aas stc jecxz xchg jg (bad) (bad) test xchg inc pop repnz std push dec (bad) stc mov outsl stc cmpsl (bad) repz iret jmp ljmp in std mov dec incb repnz cld rcrb imull std loop out aas cli idiv lock mov dec std fidivrl fwait mov dec (bad) fs xlat cli lahf scas jg jg iret std imul (bad) cli pop cli add cli pop aas stc sub cmpsb mov push jmp xlat (bad) mov lcall (bad) aam in in mov (bad) idiv sub icebp and mov jg jmp lahf sahf (bad) jge jg pop jecxz call mov (bad) aas cld adc (bad) js cmp mov aas std outsb mov mov inc mov std xchg jg mov mov jl incl decb inc loope push pop mov test hlt shrl mov (bad) cmp bnd jg clc out decb call sti pop std daa mov push cld popf mov lcall in jmp in out lahf cmp aad lahf ljmp pop out mov out decb in fcomip aaa std jmp jbe in lods lods pop repnz std (bad) jmp hlt das clc (bad) jecxz lock insl xchg mov movswl (bad) pushl lahf sbb das (bad) cli (bad) iret clc rcrl out (bad) mov arpl sar cld jmp lret in mov sar std mov aas cld xchg in pop lods dec pop jg pop repz jle pop std sar das lcall jecxz jecxz clc pop (bad) ficomp (bad) repnz stos jg lahf pushl scas sti jnp out loop cli cmc jg jg out mov pop (bad) mov inc mov jg xchg fbstp es fistpll pop cld mov (bad) cmp rclb bnd aaa (bad) fcmovnb aas sbb fistp mov jg lods (bad) out aas pusha xor push jmp mov jle das decl lahf jg in (bad) jecxz in cld arpl cmpsl mov aaa stc sub jmp aas (bad) ja stos xlat dec decl jmp cli in scas ljmp lock inc (bad) jmp inc mov call dec cmovbe lcall repz cld fadds ss jg cli inc repnz popa jg popf incl scas pop jle out mov cmpsl pop push pop repnz aas sti aas dec das jle jg cmc pop std stc jg scas push (bad) out out (bad) dec sub xchg mov aas icebp ljmp aas lock (bad) stc xchg (bad) stc jae call mov cli push jg jg pop (bad) arpl fwait jg jecxz out jg idiv pop outsl ds popf xchg aas loop std outsl jg out std (bad) cs std clc (bad) sub call cld lahf clc fdivp aas (bad) (bad) jge xlat cli pop stc sbb lock jg fistpll std arpl out hlt lahf clc pop mov jg pop (bad) xchg push mov pop sti (bad) stos jg mov aas jo ja jge out (bad) lods mov test mov xlat jg scas mov inc jmp jecxz imul cld lods jg pop cmc scas push (bad) loope mov pop (bad) xor stc fildll mov sbbb stos out pushl cld aas mov push ret push (bad) push inc mov cmpl call jle fucomip idiv sti call icebp mov aas idivb jg scas negl std or clc aas icebp das clc sti pushl (bad) in iret mov dec mov lcall mulb fdivr lea push out sti paddd (bad) incl mov repnz cli std jg ja scas dec (bad) xchg pop repnz sub mov mov daa std lea mov rorl sti xlat in fmuls dec pop icebp mov jg scas cmp mov cmc in lock jecxz dec mov cmpsl jg das sti popf decb jg jg jmp das call jp aas (bad) idiv lock in pop cli iret jle aas in lahf cld cmc (bad) repnz jg daa neg mov (bad) mov cld iret std (bad) (bad) fcompl sti push dec das jmp (bad) stc iret std cmp stc iret (bad) mov mov decb nop (bad) mov push jg mov iret std or out ja test in out stc sub xlat mov sbb pop push (bad) neg sbb into lahf notb sahf push out cld pop sbb (bad) (bad) mov in aas cli mov (bad) xchg pop cld iret push aas (bad) leave (bad) (bad) ja rorl jg std (bad) dec std in mov ss mov (bad) ljmp jg mov inc pop imulb cld sub aas cli jnp decb repz xchg jmp call fstpt pop cld fnstcw mov in cli in repnz std es clc lahf (bad) dec mov pop clc in mov in cli sti (bad) imul call (bad) ss aaa cmpsb neg (bad) cmp pop (bad) jbe (bad) std clc jmp outsl repnz inc mov (bad) idiv (bad) out idivb (bad) loop (bad) cli in pop jg arpl das inc cld mul fisttpll lret mov addr16 jle in aas hlt ja jns int3 das clc lahf jmp xchg repnz icebp outsl icebp sti (bad) ds (bad) jecxz loope fcomip clc idivl imul jg lods (bad) cld jnp jecxz ljmp jg mov cli push cld sub lahf mov sarb cld outsb mov cmc xchg jg shrl jg (bad) jg adc out lahf (bad) pop jg pop icebp cmp hlt lds cld mov idiv repnz fcomip jnp lds hlt cmpsl std cli jmp out lock mov lret dec mov clc aaa cld jmp dec mov imul jg mov pop xor call xchg mov pop cld pop mov fnstcw ljmp ljmp in dec cld ja aaa cld jge hlt jg sbb pop mov aaa outsl (bad) mov jmp (bad) clc pop jge addr16 ljmp xlat inc das bnd aad test cmc imul lahf std fistpll lahf cli push std sbb cmc icebp out cli pop cld std decl divl clc movsl lahf (bad) popf mov xlat (bad) jge in repz call aas aas jge fbstp mull jae psubw iret jg (bad) incb jle pop (bad) xor push jg (bad) xchg xlat call stc call mov jecxz (bad) fwait jle fucomip (bad) jmp rcrl xlat std ret lret aas in (bad) fwait decb mov jmp jg mov xchg (bad) jnp mov idiv cmpsl dec dec jg cld aad repz lahf (bad) mov cmc aaa incl xchg std stos xchg mov dec clc in pop std lds push mov int3 mov push iret (bad) xchg decb pop jg jnp ja sarl rcrb sti popf jle mov cmc jg sarl sti ja jne pushf clc out std pop decl popa stc fwait call outsl clc dec cld adc xlat sar std (bad) pop std es leave out scas cli sbb daa jg mov addr16 dec (bad) fstpt pushl outsl (bad) mov paddd (bad) fisub pop icebp (bad) std ds pop std jg (bad) mov jmp pop cmpsl clc addr16 decl loop fcomip leave lahf jge cmpsl cld pop rcll adc lahf jg repz lock clc rorl scas jle jg (bad) (bad) mov (bad) cld lds (bad) (bad) das cld mov icebp das (bad) out lahf fcos insl sub (bad) outsl std pop mov jg (bad) pushl dec jg inc mov cld loope jle aas icebp push cld jg,pn pop cld pop and fstp in lahf cmp jle mull out out mov adc mov jmp mov jnp mov xchg call loop dec (bad) out sti or lret sti jmp jl aaa jl repz mov pop cli scas std sar jns pop sbb std movq lahf std das mov aad cli push (bad) xchg pop jg das (bad) mov jmp outsl cmc ja stos jg cld lds daa (bad) lcall jg (bad) jle mov (bad) idiv lods decb sub (bad) dec clc jmp (bad) out pop dec jmp jg aas (bad) stc out cli popf pop cmc lret (bad) in mov mov pop jg pop negb cld mov push incl jg aas clc mov push lret (bad) aaa cld mov std scas sub sbb stc fwait imul icebp (bad) aas sarl (bad) mov push ret fucomip mov (bad) aaa cld fwait dec fnop (bad) int3 fisub cmpsl jg pop hlt sti (bad) push mov (bad) cli jg (bad) mov pop repnz mov pop dec out (bad) cmp in jg out cld aas dec aas jmp cld jmp cld push (bad) popf (bad) ficompl aaa cltd std cli jg out icebp dec (bad) jle cli out repnz push mov pop ljmp std inc fisttp loop cld addr16 mov fdivrp cld aas incl jg pop idivl jle idivl jae aaa sarb stc aas neg stc sub outsl jle cmpsl (bad) out enter jg aad hlt sub jg add out (bad) mov in jg pop mov (bad) out pop inc cld mov mov leave lahf clc jmp mov aas std sti dec mov fstp jg into scas std aaa call ret lahf sti stos (bad) out xchg aas dec jg xchg (bad) mov addr16 iret (bad) push dec mov fbld mov (bad) sahf mov (bad) rcr lahf (bad) xchg jle fnstcw movsb stc gs mov (bad) stos push mov dec push das das out decl cld (bad) out clc aas stc cmpsl (bad) test jno pop inc aas mov cmp add cld mov (bad) cmp jae mov jae mov out jg sti cld xchg mov inc dec mov inc (bad) in jg inc (bad) mov cmc addr16 mov inc out jmp cli jecxz or cmc aaa cld jecxz inc mov pop mov movsb aas (bad) jmp jbe lret jbe movsl (bad) cld scas cld mov das std sub (bad) pop cld repz das cmp gs adc inc jg idiv out jg aas clc lahf mov aas cld cmp (bad) clc psubb (bad) (bad) aas jmp cld jmp (bad) cltd out cmp in call jg clc fwait std cltd mov jle (bad) pop stc sti dec (bad) pop cli pop inc (bad) ljmp (bad) mov mov decb push lahf imulb jg jg aas std cmp xchg pop pushl pop std in pop mov aas xchg fidivr popf (bad) fstpt cld call sti jmp stos push fcomip (bad) pop cmp pop cmc fnstsw outsl (bad) xor cli out (bad) jnp and ret aas std imul inc pop decb jle daa incl jg jg icebp cli dec std cmp mov mov aad jns mov aad hlt aas sti pop jmp mov jmp push jg aas cli (bad) orl fisttp lret lock clc cld outsl decl aas ljmp loop cld push mov jecxz sti add cmpsl aas in clc lea xlat cli pop imul mov lret (bad) push (bad) fstpt scas stc dec (bad) lods jg das clc jmp std (bad) ds mov xchg jg lock cmp cmp mov cmc push jmp fsubrs daa lcall jmp icebp pop std mov fst pop imul adc sarl (bad) into aas notb incl decb push outsl clc xor in mov or aam incl lcall adc dec jg das pop out incb jg pop cmc cmpsl std pop mov outsl dec imull lods cld fidivr call icebp jg outsl idivl jecxz cmp addr16 jge leave pop cld sbb out das (bad) out popa (bad) imul jg mov dec scas imull adc mov in divb jle (bad) pop out push dec out cld lret fs cld idivl mov ja sbb mov (bad) std sti (bad) jmp idiv out cmc cli (bad) clc xlat dec mov jg sarl fwait push fucomip jecxz loope (bad) jmp ljmp repnz sti rcr cmc fnstcw repz clc mov mov dec mov push (bad) stc mov cli inc iret fidivr cmc aas hlt pop inc (bad) in pop icebp in iret cmpsl (bad) call jmp jg adc scas cli daa cmpsl (bad) fnstcw std addr16 pop incb jg mov (bad) jg inc ja shrl (bad) fistpl jg clc jmp incb (bad) fistpll outsl cld cmc inc inc repz fdivr sub xlat stc pop lcall mov enter dec (bad) cld fisttp imul (bad) std inc lods mov dec jns stc jmp mov (bad) mov pop jle fdivrp idiv enter dec (bad) xor mov mov outsl ja (bad) stc aad hlt pop jb hlt (bad) fistpll jg call (bad) stc mov pusha cli inc jge mov sbb (bad) fistp paddd std dec pop (bad) js cmp jg cld xchg ds in in jp pop pop incb in pop mull pop aas cmp (bad) push paddd hlt imul call lahf repnz incl jg outsl repz aaa mov mov (bad) (bad) jmp (bad) cld ja gs (bad) sahf (bad) mov adc jg aad icebp pop cld ret std idiv into mov cmp outsl (bad) cwtl mov jg das inc aas jl das jle lock mov std pop jg das xchg cld (bad) cmp aas icebp xchg inc (bad) idivl cli jl pop cld into paddd jmp mov bnd stc scas lcall jmp std repz (bad) std aas stc aaa pushl pushl adc stos (bad) call loop sti idiv fwait (bad) mov das cli das push pop icebp stos jle out hlt push cld xchg ja (bad) (bad) sti inc aas cmp cltd (bad) mov arpl scas std in jg pop repz in (bad) out pop aaa mov (bad) (bad) icebp stc lahf pushl dec jg repz jmp jg (bad) mov lods in out (bad) pop push jg (bad) std jnp orl out pop (bad) sbb into pop jle cmpsl cld fs and xlat (bad) jae cld out outsl testl sti aas cmp cmc (bad) xchg jg (bad) jg scas (bad) mov aam mov jle mov (bad) hlt (bad) pop call cmc out stos (bad) cli xchg (bad) in jg (bad) stc cmpsl outsw jg push mov das std mov xchg std mov scas mov jle adc loopne std lahf (bad) sarb sti outsl or jmp xchg dec pushl icebp pop fdivrp (bad) cld jle fistp jecxz (bad) lahf testl jg outsl lock mov jg pop lret iret (bad) mov lock xor mov pop incb (bad) cli fcomip das cli outsl jg mov (bad) sub aas std ret jmp stos aas jmp sti xchg call dec (bad) fcos ljmp jnp pop jg mov jle (bad) pop jle fcomip push jmp idiv adc (bad) (bad) cmc (bad) out pop push ds xchg jle popf (bad) addps mov loop jg mov aas out aas std jmp or mov cmp (bad) in in xlat sti mov das mov mov jno shrl mov in icebp outsl sar icebp scas mov fnstsw jg xor iret clc aaa scas (bad) call repz scas call aas jbe mov cld jae (bad) jg stos mov cs lods jg mov jg scas clc inc xchg jg mov aas cld push mov (bad) in mov cld pop jg leave out mov fstp decb enter mov jecxz repz mov insl jg in (bad) mov jae fidivrl mov aas mov pop jle out repz mov aas stc out (bad) xchg push mov mov xchg lahf notb out clc fstp cld add scas icebp aad sti sub fsub pop std cmpsl mov les les iret idiv (bad) jmp (bad) std outsl (bad) call (bad) cld (bad) pop jle jg ja scas jg (bad) cli pop lret sti cmc (bad) std mov stos pop cli idiv xchg iret jle das js arpl aas notb mov fdivr in fnstcw jmp int jg jg dec incl hlt out decb (bad) call clc out out ret scas cmc das (bad) stos fcomip into (bad) mov pop lock std lds icebp popf fbld imul jg lahf or repz movq pushl jmp jg pop int3 decb lahf js jg cmpsl dec pop jae cmp xlat dec cld xlat (bad) mov xchg (bad) mov add mov fcomip outsl sti hlt (bad) jmp mov lahf cld lret dec lahf je pop call mov push popf cld (bad) mov push jg (bad) cli sti dec in aas ja fwait cld or jg pop cld mov jmp mov inc sti mov das cld add fildll bnd cli dec xchg push in jg bsr ljmp ljmp ds mov in lahf clc orl mov aas sti dec lods movups cld lahf mov ror mov hlt aas in outsl cli fwait (bad) in jmp (bad) cli shll loop pushl fdivr sbb clc out icebp aas call std in cld mov std movsb cli cmp std scas std rcr (bad) fcomps out push jnp repz ljmp mov mov std sar fbstp mov jle pop clc cmpsl (bad) stos aas icebp pop mov sti in call aas jmp cli mov outsl cmc xchg (bad) fcmovu icebp out les ljmp fstps (bad) out jg mov mov lahf ds pmaxub idivb aas cmp lods pop cld outsb adc (bad) jmp (bad) aam cld das stc jnp rcr out idiv lahf push dec (bad) pop into lahf mov sti mov (bad) mov fnop (bad) cli sub lds (bad) scas jg out aaa outsb lahf push cld cli aaa xor jg cmc aas sar sar (bad) (bad) ja std mov mov aas cmp (bad) repz jg or jmp aaa aas sti or (bad) mov jg jg iret cld cmp mov mov mov pop mov std aas clc pop (bad) fs xchg fcomip pop outsb mov (bad) cli (bad) out call addr16 lahf lock std mov ja sbb (bad) incb aas out aaa stc in call jg cld pop mov out pop (bad) es clc idivb fstps jle fucomip iret jp out pop (bad) repz fcomps sti jae (bad) (bad) icebp scas std cmp int cmc mov stc in dec pop aas (bad) in sahf cld inc jecxz jecxz stc outsl dec stos pop icebp jg cmp stc pop mov dec mov push jg mov out int xchg fdivrp std (bad) movsl mov iret pop incl aaa inc call in push (bad) in xlat mov adc (bad) popa (bad) stc outsl cli idiv out repnz pop jbe std int in ja ficomp jl gs out repz (bad) imul pop lock lcall aad (bad) das inc lret jg jg clc (bad) pop jg aas cld cmp mov negb scas push (bad) in paddw cwtl in (bad) lahf cmpsl cld rcr push (bad) jae (bad) outsl aad dec (bad) idiv into pop cmc xchg xor jle mov jg out icebp dec aad repz mov outsl movsb jg lahf idivb cmc mov dec pop icebp (bad) mov (bad) (bad) jg (bad) cld das jg mov cld lahf clc daa scas jg aas push std jle (bad) lock sti aas push ljmp mov pop mov mov xchg push lahf sti mov std pop std iret jg pop cld imul es imul pushl (bad) jmp (bad) std jecxz mov loop cli jne popa stc in std xor aas jmp sahf (bad) fsts jae pop call decl sub sti repz pop call icebp iret dec cld jmp (bad) lock lcall mov clc mov out lods jg ja jns sbb lock outsl cld dec idivl hlt aaa std fnop jg sti (bad) ss loop jg clc pop push (bad) out in xlat decb std daa jle xchg xchg std call (bad) pop lock fstpl negb repnz cld ret mov leave in iret clc imul mov repnz decl mov sbb cld movswl mov dec out ret jmp fstpt dec std arpl xchg aas imulb xlat out sar leave mov jg cli daa (bad) fdivrs dec lds das jle icebp mov call aas sti fwait ljmp out std adc inc mov mov lcall pop cli sarl lret pop (bad) daa push jl jmp mov (bad) (bad) cltd fucomip pop dec mov scas jmp (bad) (bad) fdivrl lahf jle psubw cld mov lahf mov cs fistp das jle mov popf fucomip iret fyl2xp1 pop dec cld jg iret (bad) xchg ja aas repnz (bad) jl repz cld hlt (bad) cli daa ds sub jmp fcomip daa (bad) xchg aas call fstps cli out adc cld pop pop mov decl cmc push mov inc std sbb (bad) mov (bad) lods (bad) clc pop call (bad) push jg lahf sbb cld mov repnz (bad) fstpt addr16 call jmp (bad) in lahf lcall dec pop (bad) cmc (bad) lahf jp out cli push fwait (bad) std lahf (bad) ja cmpsl pop jg pop mul outsl jl daa int3 jle dec lret jmp scas std (bad) fildll jg jg stc jmp lahf stc jnp cmp (bad) insl (bad) fstpl sti pop decb jg mov jg repnz aas stc mov scas pop sbb xlat pop jg out (bad) jmp rclb jg mov icebp mov or ret das cld sbb std cld idiv xchg jg jmp ja scas aas stc out xchg pop lods jle loope mov jg das stc ficomp imul mov xchg jg aas cwtl lock icebp pushl decb jg ja icebp pop std inc incl jg scas js aas std mov cmpsl cld xor std inc std push aas (bad) push jmp enter pop std sbb mov hlt loop clc pop (bad) mov clc addr16 mov popf outsl jmp iret aam jae lahf push cld pop outsl (bad) pushf aas repz aas sti xor lcall mov dec clc scas (bad) fdivr inc repz mov jmp repnz enter fcomp pop fwait (bad) pop mov inc dec cld xchg mov incl fistp (bad) mov iret (bad) fmulp lcall fwait ds pop mov outsl mov (bad) (bad) in pop repz aas mov cmc (bad) lret das cli gs jg aas incl (bad) lods jg loope cmc lret es mov repz in jg (bad) fistpl std fsubrs aas mov call mov (bad) shl idiv inc sub sti cmp xchg push pop rep jmp cli mov push push std fnstsw inc aas daa std xor cmc jg insb (bad) in or lock mov sub dec (bad) xchg fcomps fidivr out jg outsl icebp out sti aaa (bad) cmp mov aas clc mov aas (bad) mov xchg (bad) xlat push fist std xor stc icebp in pop dec mov cld sarb lahf cld jle xlat imul cld push dec clc leave jg out js adc cld out clc idiv xchg call lahf jae xlat (bad) jnp cli sbb pop jg (bad) pop mov idivb pushl repnz jg pop cld xchg mov push lahf (bad) scas (bad) rolb jg pop lock cli jecxz (bad) imul jnp loope sub inc jle mov (bad) push (bad) iret jg pop scas icebp repz adc repz (bad) stos sub cmc sti (bad) mov jle cmpl (bad) aas (bad) scas decb pop stc inc mov hlt iret clc out xchg jg pop jae scas (bad) jmp (bad) jmp lock lahf call mov jg lahf neg (bad) sbb loopne cmc mov out lock sub call jle (bad) xlat cld mov pop decb ficompl xlat dec pop cli jmp mov les (bad) xchg jg pop repz daa jg lahf stc mov mov ljmp jle lods push paddw jg (bad) cli out mov fcomps in aad icebp jmp xor outsl stc out clc out (bad) pusha hlt jg ret aas icebp push addr16 jg std decb (bad) lcall pop mov paddw fwait out push std add aaa std mov mov xor icebp ja sti (bad) jle repz mov fnop pop cld arpl mov jle mov add lods mov loope cld push jg jg cmc repz mov lahf push (bad) call cld (bad) jg xchg jmp stos jnp repz dec das push addr16 (bad) dec popa ljmp incl (bad) (bad) in mov sub (bad) rcrb stc cmc dec mov mov (bad) fmull lahf das incl popf (bad) ficompl fstpt int3 pop jecxz jg scas cld out mov scas stc push call jg jg (bad) std sbb (bad) hlt jg pop (bad) fdivrs lock mov outsl jle dec cmp in decb stos call leave pop cld (bad) test fstps pop cld mov fisubr mov iret outsl jg je jnp or sti lahf mov ja (bad) cli ja push ljmp ja mov or jmp xlat cld push ds pop dec aas jmp jmp (bad) fcos jmp jge mov out sti fwait push cld int leave jg pop (bad) fidivr (bad) mov lahf (bad) pop aas (bad) pop iret cmpsl mov xchg das pop (bad) mov jle cmp (bad) out call cli jnp movsb dec mov hlt scas cli pop jmp aas icebp sbb push jg cli pop decl jg hlt (bad) jg out clc scas cld popa (bad) fucomi incl aam std loopne cli ficomp jne (bad) cld inc icebp jnp mov mov mov repz pop lcall enter out (bad) (bad) (bad) in pop (bad) icebp outsl std cmpsl jg mov lret aas jns lcall push aas sti jmp lcall push cmc sub mov ljmp cli cvttps2pi out scas cmc shll lock (bad) ds std xchg mov pop repnz std loope lret push pop sar std fidivr loope (bad) int enter pop (bad) pop call lods mov aas cmc aad cld call cld stos lahf cli ret jg lahf sti adc jmp mov jmp dec dec pop lock lea fucomip (bad) jmp (bad) mov cmpl loope std in xchg jg lahf sti (bad) iret scas inc cmc lahf sti pop push std sbb (bad) (bad) imul mov jmp sti out cmp jne fistpl xlat js scas popf jmp (bad) sarb cli imul cmc pop jbe aas clc std jg loop sub idiv lcall pop out mov jg lahf decl mov std jmp fdivr cmpsl jle aas jns in iret mov (bad) mov (bad) jmp das (bad) outsl rcr (bad) sti (bad) cmc fcomip dec push std in lret icebp lahf divl decl (bad) std pop jns xchg push pushl clc negl adc (bad) sub jg cmp sbb jg jnp adc cli fistpll pop dec cli jecxz cli sbb fcompl in xchg (bad) lahf (bad) xchg fist jg divl hlt inc std mov push std mov jecxz sti sub mov (bad) jg aas mov mov call repz sti ja icebp ficomp scas (bad) fidivrl scas cli jge cld push cld pop jg jg cmp pop incl lcall jg arpl pushl (bad) dec fcomip repz repnz mov (bad) sti das cld pop jg out cld pop jg mov mov repnz std fcomp sti fwait (bad) (bad) xchg jg out xchg mov pop call stc pop lock cld cltd jg jbe jmp mov lahf jle (bad) xchg sar outsl cli dec stos aas out dec call leave fnstsw pop (bad) loop in mov fcomip call cld idivb pop (bad) clc aas clc call popf jmp pop decb les ja out call lds sti idiv mov repnz stc cmc jle mov in xchg call fwait std imul out jg mov fistp testb jae in jg pop pop std test lods lahf decb decb jbe sarl cld loop out ja adc aas ljmp out cli mov loop lahf cld fnstcw cmc fnstsw icebp (bad) scas mov lahf icebp inc jmp pop cli repnz sti xchg (bad) stos pop sti ja loop pop clc out jg mov aas jecxz mov jg lods jg cld xchg sbb decl inc push shrl std cmpl inc mov lock mov jg aas std outsl int int3 fcomip pop incl jg jg in jne (bad) call push cld dec mov out jl dec (bad) xchg aas clc lahf std pop push cld sbb lds outsl call sub cmc cld jg std jle jg aas jg cmpsl call cmc idiv xlat jg (bad) sar rol movaps cld addr16 jae loop xor mov lock pop std cmpsl xchg push pop divl in cld xchg jmp pop cld sarl pop cld idivl dec std sbb std jg sbb jle (bad) aas clc cli jg inc mov imull fiaddl clc jnp (bad) neg js pop cld xlat stc out mov fnstcw xlat cli das jg dec (bad) std cmc jg mov pop testb mov loope mov (bad) (bad) stc sub vmovdqa iret sti aad hlt pop cmc ja or les push std lods call jg std popf jle (bad) xchg sahf (bad) ss std fistp out scas incb fwait icebp dec cld cmp inc repz icebp aas std mov lahf sti fwait jg dec cli lea push addr16 lahf cld pop ds ja cld inc jg jg outsl pushl jg push imul fcomip out cld fdiv out mov xchg lcall jmp mov mov decb std cli jg scas ljmp sti pop std mov std cmc out call cli sti (bad) leave pop hlt iret pop ljmp mov jecxz in call mov adc cld outsl jg icebp xchg mov stos (bad) rcr hlt fsubrp inc stc scas lcall ds movsl clc jecxz cli popf inc jmp idiv xchg lcall mov inc out jg outsl (bad) jns stc jnp (bad) mov in idivb imul mov outsl jg push jmp (bad) jg dec (bad) mov scas cmp cmpsl jg ljmp out clc outsl inc (bad) mov xchg ljmp ja lea jae std in (bad) (bad) dec out imul cld outsl (bad) fst pop repnz idivl xchg mov imul push out jns lret inc jg xchg (bad) rcr sti jecxz sub mov out scas incb loope lcall icebp push scas cmc cmpsl cld dec inc lahf cld pop aas sti (bad) mov (bad) mov mov mov (bad) jg fwait mov cmpl jnp mov ja push xchg push cmpsl inc aas clc xlat stc addr16 jg out movsl clc stc dec stc sti dec jg scas clc imul ljmp idiv and add aaa clc xchg dec jg (bad) fxch fistpll jg in jg pop aaa std dec (bad) cmpsb pop (bad) int sti xlat (bad) pop jg aad repnz sahf pushl jmp pushf in imul jmp cmc mov hlt in iret cld sub stc in lahf ret mov fsts decl aas jle lcall (bad) daa (bad) mov mov out aas cmc lahf inc call (bad) repnz incl icebp cli aas sti mov sti jg jg push jg jg ja stos dec fcomip daa sub aad cmc pop std imul mov sarl cli stc scas cli sub sahf mov lcall std cltd mov cmpsl jg stos jg das (bad) mov cmp xchg lods out out cld cli mov (bad) das mov idivl mov hlt push stc or jg iret cld jecxz sar lcall out pop sti mov aad stc lds mov pop jle jg scas cli xlat incb fnstsw loopne stc mov mov (bad) out jecxz (bad) movd xlat xchg (bad) cli or cld outsl (bad) addr16 (bad) clc pop jge xlat cld insl out std popa aas icebp cmp ljmp ljmp mov sti jle dec (bad) in mov dec jg repnz stos out (bad) ljmp incb mov idiv out scas aas mov (bad) fwait jmp pop pushf inc pop sti dec jmp push movaps clc pop dec ds cmp idiv (bad) adc fildll jmp das sti pop pushl cmc pop std jmp add jle,pn (bad) lahf incb stc lahf (bad) fcompl lahf cld paddd fnstsw lcall cld js (bad) clc lahf (bad) jmp mov push (bad) mov ja cmp (bad) (bad) ficompl repnz stc daa fidivrl jmp fsqrt sub pop sti mov ja pop push lahf cld cltd dec jg (bad) idiv xchg jg pop xor imul cmpl stc (bad) mov clc aas lcall incl (bad) outsl movd jg call les pop hlt cmp cld pop jg aas in insb jle mov xchg push jg mov push std inc inc negb (bad) sbb (bad) rorl pop aas cmc xchg ds ja icebp mov fcomip pop jge ja cmc out (bad) das pushl pop pushl inc (bad) pop std jnp pop std inc lahf pushl paddb cmpsl pushl aas std movq scas clc aaa into inc jg out clc fwait pop cld and out stc idiv (bad) sub fildll repz jge call and cld in mov neg push mov jmp pop dec aas loop pop lahf std test das jmp cmp xchg cld imul mov jg out repnz inc jg scas scas jle daa jg jg (bad) sti xchg jg std jle pop std ja aad (bad) out (bad) iret clc aaa jbe (bad) decl mov lock mov cld (bad) mov or jg lahf es jg (bad) cli aaa jge (bad) mov jg mov or mov cld cld loopne sti arpl mov jg test mov in ljmp inc decb lahf mov icebp (bad) clc outsl jle cmpsl jg aas loope mov mov std iret jle out dec cli imull cmc stos lahf stc lea cld in mov aas jmp xbegin out stc lahf jle mov loop jg stc mov call fistp sti (bad) lods jg cmc aas std addr16 clc icebp idiv mov inc (bad) ljmp (bad) outsl hlt pop inc aas icebp idiv xchg outsl jl out incl jg pop icebp daa jge cmc lahf cld (bad) out cmc clc xchg std (bad) jmp das jns out jg fwait jg std hlt outsl std iret jg std pop jl out push cld ljmp mov idivl jl push aas std lahf cmp push aaa cmpsl cld out fistp repz jp jmp in fdivr (bad) incb std jg fcomip ljmp mov xorl lret (bad) jae cld daa mov jno in sti dec decl xor (bad) inc (bad) fcos in jge mov bnd outsl cli sbb xchg fisttp push inc fcomip in into idiv ljmp cld ja lds clc jmp addr16 sti std pop and jecxz into jg push jnp leave mov inc pushl outsl stc inc std inc lahf scas fdivrp data16 faddp lahf sti or jg lahf cli sub std push mov jg stos (bad) (bad) jg push out mov mov aaa sar lds clc addr16 mov imul lahf jl lock cld out lock cmc fs iret (bad) sub lods pop (bad) in incl ja lcall movsbl (bad) incl (bad) paddw jmp addr16 loopne (bad) mov inc mov push lahf sti ja sti dec mov jnp aas decl pop cmc lahf (bad) hlt mov mov dec (bad) repz cli scas sti rcrl decl (bad) bnd (bad) clc or out sti push (bad) cmpsl mov cmpsl mov pushl addr16 outsl clc iret incl jg outsl cld out xchg jg movd dec std into pop (bad) aas cld pop mov pop (bad) ljmp incb std xchg int fucomip fnop sub dec cli repz std fnstsw push mov iret jle (bad) cld jmp icebp mov (bad) ljmp clc dec (bad) pushf lahf stc mov clc mov (bad) aas hlt (bad) (bad) fstpl lcall cli rol xchg scas push (bad) xchg out lcall repz lahf hlt mov mov loopne cli and sar in jmp sbb pop std int3 lahf lock (bad) push addr16 pop aad stc sbb outsl lock cld imul jle jg (bad) out xlat clc (bad) pop repnz mov jg mov pop cli out into (bad) fcmovnu div xlat decl mov insl (bad) cmp in cld or fs std aaa jns mov (bad) jne scas icebp (bad) (bad) int3 (bad) mov sbb and sahf pop lock jle outsl decl jg lahf dec div aas std adc dec jle pop cld std mov ljmp arpl push sar in fldlg2 lahf clc mov mov rcrl cld mov jnp (bad) jmp sti cmc jle repnz sti mov ja int (bad) jg daa jg aas stc outsl jge lret (bad) lock jg push ljmp (bad) dec cmp hlt ja xchg jg (bad) sti pop jmp jg scas stc daa (bad) sti repz dec std pop push lock (bad) xchg xor jg addr16 stos push aas idiv ss cld cmc (bad) fistpl and into xchg out (bad) cmpsl jg (bad) std xchg and jecxz cli (bad) jmp int lcall cli call aas jno outsl pushl fistp and faddp outsl (bad) imul out std adc movsb push lahf cli mov cld push jg je ja repz fnop sbb lea fstps nop mov fcmovnu lock xlat cli in (bad) stc push pop std pop jg jge lahf jg jg cld mov lret jg mov jge mov in push call jg pop (bad) jmp dec (bad) (bad) push scas jmp fucomip xchg (bad) fidivr jle (bad) cld sub pop std gs stc out cld aaa mov mov and (bad) mov mov mov icebp jecxz add call (bad) jp fnstsw xlat cli out incl mov jmp (bad) mov push (bad) iret nop (bad) stc aas std int aad out (bad) pop (bad) dec jg pop call in aas mov loopne std hlt paddw call repnz sub mulb mov jle out cmc (bad) or jecxz in iret (bad) imul loope mov (bad) std dec dec lahf sti das xchg (bad) fcmovbe out ljmp pop mov icebp ja (bad) cmpl mov cli mov xor sti mov std icebp fwait mov nop (bad) (bad) inc in pushl sbb mov fwait std repnz dec cld dec cli in (bad) fisubl inc dec (bad) xchg mov cld cmp std xor lahf imul std cmp out dec (bad) lods push mov call jg div out jg (bad) insl inc daa jmp ret jg bnd cmp shrb inc (bad) cmp loopne jne scas stc xor mov jmp cmc pop popf inc jg aas neg out icebp pop cli lahf jle icebp jmp lret outsl std ds mov lahf ds out (bad) cli psubq (bad) sti jg pop jmp (bad) clc cmc push jg pop (bad) pop inc mov mov (bad) jle lret out (bad) aas std lret in ljmp push decb jmp jg aas cld ja (bad) scas sub sti sub mov lret out cld mov jg (bad) out idiv pandn pop mov cld ret call dec popf cld fistpll mov push mov ret jg xchg push cld (bad) cld lret xchg jg repnz (bad) cld scas cmc fistpl (bad) in mov decl pop lcall (bad) pop repnz cld sbb pop std jnp es ret outsl iret mov xchg jg pop cld icebp fcomip (bad) pop xchg (bad) clc xchg (bad) or aas pop jg in sahf std cmpsl scas jg in out sahf jmp stc pop repz std into jg fcomip lret (bad) mov lahf jg mov clc jg (bad) fisubl lret xchg lahf call jg scas inc repz cld dec jg pop mul idiv out jg jg outsl cli int loop xchg sti mov pop outsb std ss clc ja ret fucomip outsl clc (bad) dec sub lahf mov mov in repnz idiv rcl mov iret cmp out xchg cld xlat jg jmp cld leave imul out repnz cld int aad sti (bad) (bad) jg pop mov mov jg popf (bad) jg std dec mov loop hlt psubw (bad) cmpsl push pop jge cld jecxz pop sbb pushl jge (bad) (bad) scas mov loop dec lcall ja cmpsl (bad) idiv arpl lcall int icebp subps clc out stc sbb insb idivl lds lahf cld fistpll mov cmpsb mov std sub js mov lock (bad) dec lahf pushf cmp mov xlat fbld clc pop std pop push outsl stc ja cmp (bad) clc pop mov (bad) cmp (bad) (bad) in mov (bad) (bad) repz test pop (bad) cmp cld sbb enter lahf stc lods cmpsb jg xchg out jmp jmp (bad) addr16 jp fdivrl int incl mov mov (bad) paddd mov jecxz stc cltd jg pop std mov (bad) stc xlat std mov std idiv adcl jno jmp cmc fwait std cmp jg aas out (bad) cli (bad) lret jnp pop std mov jg (bad) mov mov idiv aam iret clc imul jae rcl out jg popf (bad) scas mov call std (bad) incl out (bad) sti ljmp mov into (bad) std idiv (bad) jg (bad) stc pop call (bad) scas ljmp call mov leave ljmp cld mov jg dec (bad) cli psubb fadds std jne dec fcomip ja xor aas xchg in xlat jle jnp movswl in sahf lcall cld dec pop cmp in (bad) jmp repnz jmp (bad) xlat call push in jmp stos jg mov (bad) (bad) cmpsl (bad) cmp (bad) outsl inc fstps xchg call aas mov int mov (bad) (bad) out sub (bad) sbb out aaa cmp iret cmpsb idiv pusha lret cli push decl sbb in lods lcall std adc jmp mov aas jle imul pop ljmp hlt jnp into call neg cli iret jmp out (bad) jp lret dec xchg jmp dec lcall (bad) cli outsl idiv (bad) xchg xchg jg outsl hlt pop (bad) adc (bad) (bad) fcmovnu out cli (bad) inc aas sti idiv repz aad outsb (bad) mov sbb cmp inc (bad) aaa jg pop jno pop ljmp (bad) ja sti (bad) call cmpsb mov (bad) cmp cld adc ret aas ljmp das jle pop std out in dec mov (bad) fstps (bad) in mov sahf cld xchg inc cmpsl mov incl aas sti negb daa dec lahf std lods push lahf mov call fnstcw jp jmp clc lahf jae outsl (bad) ja (bad) aad jle out ds jne (bad) jg pop js (bad) ficomp daa mov (bad) (bad) mov jg push iret xchg push sub (bad) clc ja push mov jg pop idivb lahf stc cmpsl aam repz ja addr16 jmp sti sbb xchg aas jmp lods mov jg pop repnz incb mov pushl xchg aas inc stc (bad) mov daa (bad) pop mov std inc mov outsl out std cs aas (bad) pop dec jg pop mov xchg mov mov inc std push lret jg cmp cld ljmp jnp sti cld test ja or jg loop inc jg mov sar lock incb push std fnstcw jge loopne das cld leave (bad) pop inc mov std ja das mov (bad) lcall pcmpeqd in cld out (bad) std mov idivb aas icebp or mov sti pop jle clc fdivp out stc pop lahf cld iret jg mov sti mov cli xor mov sti add mov (bad) repz (bad) testl iret in cli pop out pushl jmp int lahf in cld mov rcrb (bad) cli scas cli and mov aas in out pop hlt push (bad) fstpt negl ffree jg xchg (bad) mov jg repz cmp in mov aaa jg das clc mov aas out cli cmc dec pop (bad) mov push jg into jg or sub (bad) out outsl repz jle (bad) (bad) lock std jae push (bad) repnz int3 jg lahf cld lahf mov mov in pop repnz std leave rcl (bad) out daa call in stc pop movsb mov cmp lret jg pushl sbb or enter mov idivl mov decb mov pop sti dec mov sti aad pop std leave jg movd popf jg lahf mov jg mov jg outsl repz aas std sti pushl clc idiv jge repnz decb mov cmc xlat (bad) ficompl pop jg (bad) cld lahf cld rcrl cld jg daa sbb outsl mov stos jle cli (bad) das jle pop mov neg call jbe int3 jle mov loopne sti xchg lahf decb hlt iret std and (bad) cld daa lret aas hlt outsl ds jge pop fdivrs sahf (bad) fmul (bad) aas (bad) stc mov iret decl scas cmp sti sar shrl sti (bad) jmp aas loopne std das jle out repz out cld in out jmp aad repz stc aas (bad) mov je aas stc mov popf lret mov iret (bad) sti mov dec push xchg (bad) jbe repnz cmc imul jg lret (bad) out repz scas jg out lock pop mov cld mov (bad) aad cli pop push (bad) imul stc pop mov inc cld jno out mov (bad) fistpl decb mov (bad) fcomip loope cmpsl mov pop hlt scas std xchg cmc call jecxz in dec clc pop das (bad) mov sti aaa sbb dec jg aas inc (bad) lcall icebp movsbl xlat jg in ja (bad) mov loope idiv outsl js jmp std adc mov clc xor fidivr cli push (bad) jmp hlt aas cmc jecxz ror mov mov pop decb loopne stc jg ja std pop mov (bad) xchg (bad) ds fbstp sbb jmp int cltd and outsl clc (bad) sarl repnz out std push push stos lahf (bad) sbb jmp push dec cli mov cmp jg addr16 mov out idiv (bad) in jle pop std and lahf neg jl sbb (bad) icebp pop icebp xor iret das jg pop repz jae (bad) mov out ja push dec loope inc outsl cmc xlat std outsb jg cmpsl jg pop std jecxz rcrl loop sti inc pop dec jle jg mov cld addr16 jne pop mov ljmp mov dec (bad) mov out (bad) (bad) jnp jo jg inc incl daa jg xchg out jp jg jle jg loop mov jmp (bad) (bad) inc (bad) popf jg das cld aas (bad) mov repnz jg adc loopne (bad) (bad) adc out pushl sar imul cld fdivrp out insb cmc imul jg (bad) pop loope cld xchg lds mov scas push (bad) mov aas decl jg dec xor loop mov ljmp scas ficom ljmp xchg sti aas sti xchg mov mov int gs dec (bad) fwait scas (bad) mov repz aas (bad) push jg negb std into mov cld (bad) in hlt aaa std lret (bad) aas stc dec (bad) icebp mov in sar (bad) leave jg jmp das (bad) arpl (bad) cmc aas cld idiv ret (bad) jg std dec mov aas sti mov fdivrl or dec clc push pop dec imul std add addr16 xchg (bad) std aas decl sarl imul into decl clc sti lret jmp pop sti jnp jg loop pop jg sar clc inc cld (bad) mov repz pop mov sbb mov sti jle jecxz sti paddw xorl clc fistpll push jmp jg out mov (bad) fsubrl fwait sub (bad) std push (bad) mov scas call fucomip xchg pop pushl jle jg cmc outsl repz std ret (bad) imul loop (bad) (bad) (bad) xchg into scas cmc pop jmp pop hlt daa (bad) cmc xchg ret pop idivb cli mov (bad) jle xlat mov in mov test (bad) jg aas clc adc aas dec icebp sti aas stc (bad) dec (bad) out popf scas lret push decb mov mov lods jg out dec repnz leave das cli fucomi std sti jg mov inc pop (bad) (bad) (bad) mov negl (bad) out mov idiv addr16 pushl mov int jmp aas sti outsl js lcall fistl (bad) (bad) std call lods lcall js xlat lcall icebp jg sti scas (bad) and jle (bad) call das and jns out jg out mov sbb or (bad) loop cld xor (bad) daa (bad) ljmp pushl in jmp cld idivl (bad) outsl jbe (bad) insl leave outsl std daa decl mov cld push jg jg sti cld mov stc lahf clc inc ss outsl (bad) jg call (bad) movsb (bad) ja cli leave cld loopne sti mov (bad) pop pop (bad) sti push (bad) mov push lcall icebp (bad) xchg fdivrs push in (bad) out lahf (bad) hlt sar mov jg (bad) aaa mov mov jmp pushf aas out cld ja (bad) (bad) daa (bad) rcr cmc iret cli sub ljmp outsl cli and mov xor lea cli loop clc aad imulb daa jmp aas out incb scas mov arpl aam icebp sbb ja xchg cld cld adc cld ja fstpl hlt cmpsl pushf fdivrp call dec (bad) loop hlt pop call cli adc test fcomp icebp pop std xchg jg out cld (bad) or inc mov out std ja jecxz lahf sbb popa jg jg out (bad) pop lds mov mov jmp (bad) mov scas std cmpsl decl jg cld leave das (bad) mov repz dec (bad) js pop inc jg leave aas notl call push icebp jb call (bad) fstpt stc jg inc daa in (bad) stc das (bad) in decb cmpsl jl dec out add sti aas jg jg xlat std sar jecxz clc pop cld imull adc icebp out out mov (bad) fstps clc (bad) out push jmp (bad) ljmp sti repz test mov cli dec (bad) loope jecxz clc incl das stc dec dec (bad) xlat clc ja xchg jg cld cmpsl inc pop cli out pop mov cld cmp push cld shr (bad) nop aas call (bad) fnstsw (bad) stc pop (bad) leave lahf std scas cld lret repz repnz mov cld sbb dec icebp mov jnp mov cld (bad) std lds lahf fcompl out jg cmpsl jg (bad) out in leave loope repnz (bad) ds pushl add lahf sti daa jmp std mov xchg (bad) in mov sbb in pop mov push leave out stc jnp lahf cld sub mov jg inc jmp jg repz lahf movsl cld iret aas cli dec push ljmp in (bad) mov icebp xlat (bad) and jnp sbb mov push lock ja std mov iret cld fidivr jg (bad) jl aaa cld inc jg lahf (bad) xchg mov pushl jg pop cli or out jg inc push (bad) push das cld insl jg (bad) (bad) inc std sbb call jg cmc (bad) jns xchg fcomip lahf clc daa (bad) clc aas jmp aas cmp std daa call ljmp movd lcall jg dec jg ja lahf dec (bad) jge jg mull mov jle cmp out jg (bad) inc pop icebp mov mov das (bad) std call (bad) call lahf (bad) xlat ja loop out idivl cld adc out fdivrp rcrb idivb sub sub aad icebp (bad) stos aas in cmpsl cmc xlat jg pop pop std sbb (bad) jmp clc ljmp iret (bad) sti aas insl (bad) dec lahf jg daa cld es jg leave stc jg div aaa cwtl (bad) pop mov mov or jp push std mov out sarl mov decl outsl sti ja and sbb clc (bad) sti sti cld ficoml push call (bad) cmp pop jg in out lcall sti ss ja jmp popf mov cmc mov push cld std out inc jg pop (bad) cld jg pop (bad) out dec (bad) jmp std mov cli (bad) decb (bad) ljmp inc lcall lods aas jg xchg std push (bad) (bad) scas cld xlat idiv std mov jg fistpll pop out cld jge iret jg hlt xchg aam jge ffreep (bad) mov cld ret sarb mov mov out stos (bad) cltd fild hlt sti call mov int3 pop pushl dec lahf clc xchg jg pop negb (bad) test (bad) mov mov jmp jg idiv lahf (bad) fdivrl aaa std fcmovne outsl (bad) repnz std fbstp ljmp jg aas repnz (bad) outsl pop decb mov std sar mov lock clc iret (bad) cmpsb aad scas lret rcr inc std push call mov test leave fnop das (bad) insl (bad) (bad) loopne std xchg std pop arpl pop jnp addr16 push xchg mov cli aaa pop ret jle js aad icebp outsl std ret aas scas jg mov jecxz sti inc jg outsl repz pop jg out sti dec jmp jnp xlat (bad) stc dec (bad) xchg fucomp sbb out (bad) mov jl cli aas lcall inc (bad) mov jnp sahf aas loop sti (bad) incb cld lahf cld aas jle loope imul dec jmp cmpl sti mov mov fstps sti cmpsl aas stc cld jg and jg aas in cli sarl out cmpsb lret aas jmp scas aas outsb out lds jg mov pop (bad) repz negb cld jne icebp das (bad) in jmp mov rcrl fwait jmp hlt cmp ss (bad) js sti sbb sahf mov jge idiv mov minps push aas decl mov sub std sti std push pop cld cmpsl jg aas sti lods fucomip (bad) ja jle mov jle fisttp decl xlat jg out clc imul scas (bad) fld repz push std mov lock mov mov paddd inc aas mov jg test rcrb inc stc aas (bad) das std push (bad) jmp xchg in (bad) stos out neg cld pop (bad) frstpm(287 pop pop push (bad) sti xchg pushl (bad) out aas lock icebp fcomip daa sbb dec cld scas (bad) fldt inc repnz jg jg icebp decl sti (bad) (bad) fsubrp std das jg icebp (bad) incb mov daa (bad) fimul xlat aas stc mov aas call std pop scas incb jecxz aad hlt pop std movsl scas jg (bad) pop (bad) fstp popa jno icebp fldt ret mov stos aas hlt mov cld fisubr stos jg std jnp fidivrl negl icebp (bad) fstpt ds or inc mov jg lahf fdivr pop (bad) out mov cld inc jg mov mov (bad) mov lock cld hlt (bad) stc sbb pushl (bad) in lods fnstsw cli mov cwtl jmp jmp decl out (bad) cli outsl cmpsb cld fabs (bad) pop incl jle (bad) std cli enter mov (bad) in ljmp fnstcw call jg scas jle ljmp loope scas ljmp sahf std xchg jg outsl (bad) (bad) sar bnd ja scas and (bad) aas (bad) loopne sti jnp (bad) scas lcall (bad) cld fwait pop push push pop cld outsl (bad) ljmp decb sbb cmc call into out clc pop cld cli jg scas jge imul xchg mov push std mov out std leave aaa mov cmc jle out repz mov lahf (bad) pop decb out ret (bad) pop std mov incl loopne cld iret fucomip (bad) cli aas (bad) hlt jg lahf incl dec sarb test stc xlat (bad) insl (bad) std pop push cli mov dec jg idiv jg xor (bad) pushl xchg (bad) push pop (bad) cld cmpsl lahf std dec in (bad) fnstcw jecxz jg xchg std push jg outsl jle out lods lcall into out clc paddb std fnop addr16 stos push dec pushf std fsubrs jg sti mov mov dec cli out jg (bad) das std (bad) les inc mov out movq pop std mov iret mov mov idiv icebp push (bad) daa (bad) pushf fbstp (bad) jg fcomip loope push dec (bad) jmp jmp xchg jl cli pop les arpl stc pop std inc (bad) cli outsl cmc mov jmp std mov (bad) xor ljmp jmp lock das std dec jmp fnop ljmp loop sti aaa jle pop sti sub aaa pop std jae cld xor mov call aas mul jg out std mov das incb (bad) fdivr fidivr outsl call jns imul fs lahf cli cmp cmp outsb stc hlt lahf decb loopne loopne sti (bad) xchg lahf cld lret jle pop repz test enter (bad) fimul adc (bad) aaa jmp int icebp lods pop negb imul hlt inc cld jns stc outsl notl mov ret pop lret std cmp aas sti pop jg jg (bad) call out std jnp imul aas stc loop cld or leave mov inc stc scas std out addr16 outsl idiv push iret jmp jg aas icebp pushf bnd into fidivrl aaa sti ret (bad) cmpsb mov mov scas call mov cmpsl std hlt mov aas outsl std imul (bad) sti cld fistp fsubrp lcall sub test jmp out cmpsl cmc xchg (bad) mov (bad) xlat stc aas ds stos das mov clc sub jg pop lods rcr cmc imul scas decb outsl idivb std and out fnstsw icebp aas stc daa out jl sti (bad) mov xlat test push mov repz fwait in lcall rcrl daa (bad) (bad) cmc idiv mov imul jns leave pop std cmp lcall (bad) mov lahf mov inc jmp push jg outsl ljmp std jmp (bad) pop hlt iret inc push sti mov std hlt jl icebp shrl enter jg out idivl push (bad) loop push std imul dec jg call cld mov (bad) pop lret cli jg cli idiv cmpl cli xor idivl out and arpl outsl sti pop (bad) outsl ljmp incl cli (bad) jg lahf cmp push (bad) out cmp (bad) jp jg xchg mov mov pop mov lret jp ljmp in inc sti mov imul jmp pop stc in pop sti loop clc xlat ljmp test das pop cld loopne cli mov cmp jmp (bad) sbb lock insl jg jg outsl sti or fistp das incb mov (bad) loope dec icebp popf (bad) pop (bad) rcrl jmp out scas icebp mov call repz (bad) mov aas cmc aaa (bad) jmp rorl and (bad) (bad) mov fidivrl out sti sbb das sti jge mov jg imulb jg,pt mov (bad) scas aas std cmpsl dec jg fnstcw paddb jg loop mov std cmpl mov jle push mov stc insl cmpsb jg fstpl cmp mov pop hlt push jmp pop pushf pop xchg (bad) (bad) cld scas cld stos jg cmc js cmp in ljmp icebp in mov pop inc mov mov jg pop repnz cld xor add aas xchg repnz mov and xchg (bad) (bad) ja scas lcall sub cld icebp jmp sti dec (bad) in mov mov (bad) fstpt stc aaa std jne std jmp lahf sti ret cmpsb jg (bad) cld fnsave incl jg aas jae cld es fisttp out mov incb (bad) stc jg addr16 (bad) in mov xchg mov sub std jg icebp pop clc xchg jg pop negl (bad) fstpt jg lahf ss pop jg mov inc (bad) fnstsw (bad) loopne fwait aaa inc mov dec jg pop (bad) clc (bad) daa mov (bad) cmc push push lahf cli mov mov cli lahf clc adc mov aas dec outsl xchg (bad) std mov (bad) fwait mov (bad) std pop cld xchg out jecxz mov clc stc jg neg sti lahf addr16 lret (bad) lock aas icebp hlt paddb std ljmp jmp cmpsl pop jg lahf inc cli jmp dec dec repz jmp push out pop call pop clc xchg and repnz (bad) jbe icebp shrl fwait pop aas pop (bad) aam bnd (bad) rcr lcall or aas ljmp dec idiv (bad) (bad) lahf clc jge (bad) pop cmp xchg cld leave movsb aas decb pop std mov cli int mov repz das ljmp (bad) stc scas std loop ja ljmp out idiv fistpl mov lahf icebp out push repz (bad) fistpll xchg mov dec idiv fisttpll in (bad) clc out ficompl (bad) cmpsb xchg out std mov idiv iret jg out hlt scas mov mov jecxz jg out (bad) mov jnp xchg dec fdivrp ds push idiv out xchg pop lock (bad) std mov xor mul xchg out (bad) mov repz clc add xchg std ljmp ret jg stc lahf lock decb jg (bad) sub pop movd jg mov arpl icebp mov addr16 fbstp hlt (bad) jge iret std es in scas std (bad) sahf std xor sub jg pop (bad) iret incb jle jg iret stc or mov (bad) jmp mov dec (bad) (bad) xchg (bad) cld pop jge push std xor pop incl std xchg jg pop hlt push call pop sti pop cmp push jmp cmpsl call (bad) and (bad) mov (bad) call (bad) call (bad) pop jg jg sti cld xchg and mov daa jg pop jmp cli push out jbe mov cmc pop (bad) aaa (bad) stc popf fisttp (bad) (bad) jns std ret fwait loop jg out cmp cmpsl popa mov aad hlt out (bad) and pop std fstpt push jnp (bad) sarb cli ret mov cli (bad) cli pop cli xchg movq mov dec outsl hlt pop incl repz ja addr16 ja icebp dec cld jno out in iret clc mov fstpt daa mov stc lahf mov inc jmp decl clc out jg pop sar out cltd cmp mov (bad) (bad) mov mov cmc sbbl ljmp jmp (bad) fstps cld push mov xchg jg in (bad) jmp idivb outsl cld iret incb aad sti aas cmc dec std clc pop std stos jle repz shr sti jge out call jmp push outsl (bad) jle iret cld add cmpsl (bad) push mov std int aam jge psubq jle jg psubb xlat js scas (bad) jbe je jg aas (bad) stc jg into scas std push decb aad mov mov xlat mov int pop cld xchg cld ret mov xchg in (bad) xchg jg aaa cld adc (bad) aam stc daa call pop std mov icebp lret aas popf std sbb cld insl out (bad) stc paddw psrlq jg push ljmp xchg aas (bad) mov in std jnp fnstsw stc iret mov cld jmp inc jg mov aas (bad) (bad) callw lahf icebp (bad) ret mov dec cld sti adc iret push (bad) xchg mov cld adc ja (bad) xchg negl (bad) cld pop ljmp lret xchg std fwait out (bad) nop out ljmp (bad) mov aas cmc inc cld aam stc iret cld mov call out es decl pop decb aas cmc lret lahf decl fistp scas pop cld xlat jg pop cmc lahf es pop dec hlt dec sahf (bad) jnp loope (bad) jmp (bad) inc mov jg into lahf mul mov aas (bad) daa push (bad) (bad) xchg jg mov sti ljmp (bad) cli in jg jmp lahf std sarl call xchg out outsl mov (bad) std mov hlt aas clc decb dec (bad) out leave scas pushl fstpt jmp pop jmp lock mov hlt dec clc jmp rcrb (bad) idiv (bad) mov mov in aas cli xchg cmpsl (bad) (bad) fstpt sti stc scas sar leave das inc (bad) mov out std fidivrl (bad) fucomip sahf cld cli dec (bad) push push stc scas jg (bad) aas sti fwait jle out clc neg stc mov rsqrtps loop sti jecxz sarl vmaxpd pop jg out hlt (bad) (bad) cmpsl dec fistp xor jecxz sti daa aas sti ja movsl out (bad) and dec mov (bad) jl aaa cld data16 inc xchg push dec std in jp cli btr cld movsl (bad) fsubrs sti pushf jmp inc iret cld xchg scas jle push pop cld adc sti xlat (bad) shrb push push pop sti pop pop outsb incl jg clc sarl (bad) (bad) das jle jg clc fldcw stos jmp (bad) lahf cli fwait aas (bad) out lds iret jl mov popf mov popf lret stc idiv mov cli pop fidivr (bad) pop imul sbb in cmp out in (bad) std lahf inc (bad) stc iret std sbb mov std outsl cld xchg jg aaa idiv mov cld (bad) decb jb mov jg xlat and aas (bad) out out cmp and jmp mov pop cld outsl (bad) ds (bad) fcmovnu mull jle fcomip lods jns fwait cld dec push dec fcomip (bad) ret pop notb aaa cmpsb idivl ficomp lahf icebp xchg js push fidivr jg (bad) cld (bad) mov (bad) in out sti arpl (bad) (bad) in cli leave mov iret jg xchg (bad) ja imul (bad) xlat std pop (bad) incl sti fstpl (bad) adc dec pop clc pop std lret xchg mov (bad) (bad) (bad) cmp sub sti aaa cld lds mov (bad) enter (bad) mov push cld jp dec jge das std stos lcall bnd sarl (bad) out cmpl jmp idivb (bad) aas decb pushl jge int3 jg in negl fcomip out (bad) addr16 out inc testb (bad) fcompl aas je and jecxz jg aas repz jae fldcw fcomip pop decb jg pop std daa inc lds ja in pop std fwait (bad) fidivr out std ss pop dec repnz adc mov sti jle pop out mov (bad) mov (bad) dec jg pop std sbbl dec (bad) ljmp cli sarl mov ljmp inc lahf cld test (bad) outsl clc ror addr16 aas cmc imul jg clc das std push push iret jle xlat clc sbb idiv lret jle aaa clc das jle xchg lahf (bad) jmp (bad) incl (bad) jle jg mov pushl (bad) iret lahf cmp sbb scas stc (bad) (bad) sti leave lahf negb (bad) cld scas xchg lahf (bad) repnz mov int mov ljmp (bad) out jg pop cld aas (bad) scas mov xlat jg cli xor (bad) pop mov cli pop (bad) aad test lahf pop int sar loopne jae outsl clc adc vmaxpd stos enter jle out (bad) out (bad) jg outsl cld cmpsl out cld mov sarb dec (bad) (bad) loop pop icebp mov jp imul repz mov mov out xchg (bad) cld imul decl jecxz pushf jmp (bad) (bad) sahf mov in mov cld dec jg mov jg (bad) ja std lods mov mov cld mov in mov mov out std (bad) jg cli jbe (bad) jg call or in cli jg cmpsl (bad) xchg pop out mov loop and pushl incl jle call (bad) adc dec jg pop sarl hlt cmpsl (bad) in push lahf sti fsubrp icebp shrl aas jl mov mov mov (bad) pop decl fucomip std jg,pt out cld das pop std mov mov cld xchg idiv mov aas (bad) outsl pop dec decl xchg cmc ja jle aas clc inc push leave test or xchg (bad) out mull stc stc sub idiv adc pushf jg sti mov out shrb inc jle mov out std mul jg clc aas clc pop jle mov repnz cld inc (bad) fldpi (bad) in sarl jg pop lcall ljmp outsl cmp and cmc scas std xlat jmp dec std jge pop dec mov pop incb sti dec sub scas std cmpsl jg std aas call lret mov lea std mov jg cmpsb cld (bad) lahf pop jecxz (bad) outsl (bad) mov aad je push xlat fbld jmp pop jnp clc (bad) jle (bad) jle pop sti mov cld (bad) cld xchg mov jmp (bad) jge lret lahf cmp inc jg cld sti jg jmp lcall imulb stos call mov (bad) mov (bad) fist (bad) cmp das lcall mov lahf cld in jle aas std mull dec decb (bad) fnstcw rorl aaa stc jne test mov (bad) imulb pop (bad) mov incl decb (bad) in pop cmp hlt repnz mov stc inc mov std into jg jg pop ds test mov loop hlt lahf clc lret call lods jg idivl aas sti sub lahf (bad) pop (bad) mov out outsl clc jne decl sarb sti (bad) cld xor cld xor out icebp repnz mov jle nop call (bad) call (bad) fdivr repnz iret pminub stc dec cld rcll mov repnz cli fldt (bad) ficompl jecxz cld fildll (bad) mov adc jnp scas mov (bad) (bad) dec out (bad) gs mov (bad) call (bad) pop jle fcomip dec cld sarl jg jg pop cli arpl faddp mov (bad) xchg mov cld jp stc outsl xor xor xchg fucomip (bad) cli fstpt mov (bad) mov cmc aas stc mov ja stos out cli movsl (bad) sti inc push psubd mov adc pop dec xchg sti lcall loop adc mov jle jg aas std mov bnd mov std inc (bad) sarb jg sbb (bad) leave iret incb jmp lret mov dec jg (bad) cli mov cmp test std mov sarb sti aaa jmp lods mov aas jns lahf clc cmp mov daa (bad) (bad) (bad) cli cltd notb ljmp pop (bad) mov into decl hlt out mov (bad) cmp dec aas out lds jnp imul mov jle lret fucomip (bad) sti jle aas icebp lahf (bad) popf jg outsl std idiv jle ficompl (bad) stc inc mov decb (bad) imul jmp jnp fwait pop jg mov incb out pop div pop cld outsl call std jmp add stc xlat std fistpll call pop jne dec jmp dec (bad) daa cld es in cli in cli sub (bad) mov lcall add mov ret call fcomip dec outsb (bad) mov ja aas out setl cmp outsl jmp jg repnz mov pop push push daa mov jg sbbb jg out hlt or (bad) arpl (bad) std lcall jmp aas stc xor pop cli loop push (bad) in loop push decb out mov cli scas jg pop cld jne mull ja movsl aam pop icebp mov mov negb and (bad) fdivrp std (bad) mov pop aas pop std or pop hlt pop mov pop idiv mov clc scas jg mov jle jg jmp (bad) std mov call scas clc sbb lahf (bad) (bad) lea jg jg (bad) clc add (bad) (bad) sbb pop jle std aas je ja xor loop or xchg mov sti pop clc scas loopne incb cmp fcomip pop (bad) loop aas repnz decb (bad) jg fcomip hlt lahf (bad) fnstsw sbb aas cld adc lret pop inc icebp out hlt iret push jg das cli sbb out sub int in sti mov xchg (bad) jge jmp rcrl xlat pushl lret mov jg pop cld addr16 ds mov std pop in std pop mov repnz mov std xchg jmp mov mov in sub jae addr16 jg in pop pusha std repnz scas incl inc jle pop idivb xchg pop pushf jmp ljmp loop in decl leave iret stos fucomip fnop and mov incb lahf jle repnz jle push mov xchg (bad) in out cli fldcw cli jbe das clc sarl jg adc clc mov aas clc fnstsw bnd mov out ljmp xlat (bad) neg jmp (bad) xlat pop hlt xchg mov (bad) sbb repnz cld gs aas clc inc jle idiv (bad) cld aas sti idiv mov mov sbb mov dec jg (bad) cli or (bad) fs stc daa xchg (bad) sti arpl in (bad) out (bad) mov repnz fdivrp sbb pop aas stc insl pop cld outsb jge insl (bad) pop std jae mull iret pop jle (bad) fistp icebp sbb mov and lahf cmpsl mov idivl fwait cld fdivrp loop xor cli push dec icebp scas cli sbb hlt xlat pop aaa jnp lret out dec stc jecxz aad lock fucomi aas lock sti push jbe (bad) fnstcw jno outsl sahf (bad) (bad) (bad) cli mov arpl mov xchg aas out jg ja jmp pop clc pop dec (bad) jmp ja pop sti in jnp repnz xchg mov decb icebp pop ds (bad) lea popa negb (bad) out in inc stc jecxz stc jg daa sahf ljmp (bad) mov cli (bad) loopne das inc (bad) ficomp aaa cli pop mov ficompl jg lahf cli das std adc lock mov stc lahf icebp clc in paddusw sub pop aas stc iret dec (bad) std pop jg jmp (bad) ds int mov fdivrl fstpt (bad) es aas sti cmp loop loopne cli fstpt mov mov mov adc cmc (bad) cld (bad) addr16 cld jnp mov pop mov daa dec cmp (bad) mov add ja cld aad into fcomip push push (bad) jg out cmc (bad) push mov (bad) lret jg das dec jg aas stc xchg fucomip ja stos jg (bad) out paddw (bad) mov cld xchg (bad) dec mov fldcw and movsb (bad) idiv iret (bad) (bad) pop xchg cld sahf mov mov dec call outsl jle xchg repz cli fwait (bad) sarb loope stc jne jle (bad) aad dec cli sti ja das (bad) in mov (bad) mov std ret jle (bad) in mov out das (bad) xor add sbb out std idivb mov cld out (bad) gs (bad) std ss fucomp sti out std add (bad) stos mov dec jle iret pushf call repnz mov stos (bad) scas incb std inc push decl pop (bad) mov aas lahf cld mov cli daa std cmp negl int cld pop repnz (bad) (bad) mov clc (bad) mov jg lods (bad) std lcall std (bad) cld mov fucomi repnz std dec inc pop clc addr16 ficomp scas incb imull std loop pop repnz das jle aaa sti dec sub sti das dec incb pop cli pop cld (bad) in pop std inc jg pop jo aaa sti adc das scas jg loope cli rcll inc ljmp (bad) in mov (bad) aad std inc ds in pop call sarl stc addr16 cmc xlat aas notb jg jnp cltd mov (bad) std inc jg xchg mov out in shrb std cmpsb mov sub decl rcr hlt pop (bad) imul hlt dec mov mov jecxz std cmp mov jle std aas cli mov dec jg jg iret ljmp call (bad) (bad) pop dec jg pop cli test rclb mov lahf negl stc mov mov repz lahf decl mov iret jg mov out jg fldcw jnp dec sahf jle loope cld xchg jle jg lret inc neg aas lock clc mov iret mov out push outsl clc paddb fs mov add (bad) pushl repnz xchg pop repz jg push aas cld scas pop cld xchg push hlt xchg std les sti test jg pop (bad) idiv xchg (bad) pop clc movsl adc cld jbe fldt clc lods inc (bad) mov lahf pop incb loopne pop decl sti aas xchg cld lahf das jg fcomip xlat cld jnp aad sti jge testl ljmp fildll (bad) stc in pop std jecxz lock idivl stos ds popf dec out cld and pop loop jg (bad) iret std cmp lcall stc lahf call jg lock (bad) cli cmpsl jg pop std xchg jge das cmp scas pop jmp (bad) icebp out icebp mov jno mov call (bad) inc aas jmp push mov aas sti sbb mov mov push lcall lret (bad) in iret (bad) pop loop pop cld xor daa incl jae out ljmp mov in cld das jg scas std xor aas lock int (bad) jg lods (bad) lcall jg idiv ror pop js scas imul stc imulb (bad) paddb stc pop cmpsb clc stc vpmacssdd sub mov (bad) std std das mov (bad) cmp ljmp jg out pop (bad) cmpl (bad) sti call aas icebp (bad) call repz lock jg add popa repnz lcall repnz sbb jle fwait (bad) ss cli jnp dec mov jle roll mov dec jle jmp mov xor xlat incl std lahf stc das (bad) mov out jg jg popf pop out cld aas aas (bad) jge sbbl mov dec (bad) cld lahf jmp mov pop cmc jnp jle clc pop loop mov aas in clc out incb out imulb loop inc (bad) movsbl jmp cmp cli iret std and (bad) jnp (bad) fdivr notb (bad) out cmpsl loop push (bad) insl repnz clc jg cli pop pop std scas mov (bad) mov (bad) sub pop adc cld movq jecxz scas fwait lahf clc mov (bad) jnp sub pop (bad) int icebp (bad) in (bad) cli mov sar mov pop jmp cmp jg fcomip aaa std aaa aas repz jno rcr xchg inc push mov cmpsl std (bad) out jle das std into mov loope iret clc jne mov pmulhw repnz (bad) nop aas out aas std mov jg (bad) in mov std loop stc jge cli loopne call jg cmpsl cld (bad) sbb dec decl lds in lock fs (bad) cmovg xlat push push lahf sti lahf std sarb in xlat (bad) clc stos (bad) sti mov jg mov out divb incl jg cmc aas cld pop rcr push iret cld ret (bad) fldcw dec std jnp out lock jecxz sarl lahf cld loopne xlat cld dec incb pop pop jl mov mov dec mov mov pop (bad) movsl mov jle push lods pop scas (bad) repz daa push (bad) in jnp stc out clc mov iret stc icebp hlt daa jmp jg pop cmp pushl mov jg pop stc arpl mov cmp push call cwtl jg decb jnp xchg fucomip clc mov repz repz cld (bad) (bad) das clc mov (bad) data16 std lret jle lahf cld test aas sar fwait xor (bad) aam cmc in aas repz std out mov mov ret aas sti (bad) cld mov (bad) lahf mov cli iret jmp mov into scas cmc rorl cmpsl jg iret cld mov xlat (bad) jnp dec out clc cmpsl decl dec jmp clc int fcomp in pmaxub mov (bad) bnd dec aas stc mov fwait (bad) clc (bad) (bad) icebp pop or push mov sahf std ret out fsqrt inc jg scas js out test ja pop (bad) out jg pop std inc std subl aas stc sub (bad) jg lret (bad) xchg daa mov sub xor (bad) psubw (bad) repz outsl lcall ljmp jnp sar not sti (bad) (bad) mov stc cmp mov aaa jle mov fistp loop call (bad) jmp (bad) xchg out (bad) mov decb push (bad) stc lret (bad) sarl ljmp cld pop sti (bad) std or call in ja ja cmpl stc int fidivr pop (bad) (bad) cld mov push pushl aas jl das ljmp loop cli in negb cld sarl call mov insl incl mov cltd (bad) call cmpsl mov mov loop sti (bad) mov mul mov out aas sti ja pop call jg rcr out and jge out jg in jg inc imul mov hlt sti (bad) (bad) lock mov stos jg pop cld fcomps std gs pop mov repnz (bad) mov dec repnz (bad) cli mov mov (bad) sti icebp pop inc (bad) rcrl fist std jle iret push std sti std out (bad) mov cld dec (bad) mov call (bad) stc aas xchg push xchg jg outsl std popf fucomip mov rcrl leave (bad) jg cmp out mov pop stc popf push (bad) clc (bad) cld aad std jmp (bad) fsubrs aas inc (bad) inc pop clc stos jg fnstsw cmpsl (bad) fidivrl inc pop daa rcrb fnstsw jg cld repnz cli or clc dec lcall fildll jg sarl jecxz loopne cli inc (bad) fidivr cmc in mov lea lahf (bad) cmp jmp in clc lahf pushf mov jp push cld mov mov in dec aas out (bad) and cli lret jle pop lahf in negl out (bad) adc fistpll mov arpl (bad) pop clc hlt out sti pop decl repz mov sahf pop (bad) cld inc dec (bad) mov iret push jg leave (bad) repnz std (bad) inc cld icebp (bad) cld jge lret fcomip cmp cmc (bad) fisubrl leave (bad) cld pop dec mov jle pop cld in mov outsl (bad) out mov stc xchg pop out mov fcomip aas (bad) outsl (bad) in fbld std fwait mov clc aas sti idiv int out (bad) in aas in (bad) js push xchg (bad) clc xchg sbb mov (bad) jle cmp aad stc aas repz out iret es jg out cli aad (bad) std lahf (bad) jmp clc icebp psubq fistpll (bad) jmp jle scas mov (bad) jg aas cld das xchg cld pop std push (bad) fistpl (bad) aas sar iret pop sti jnp std jge mov lret es aas push dec stos mov sarl (bad) (bad) scas mov mov cmp in pop sti aas (bad) xchg jle jg lcall lods jg scas (bad) repnz jle daa cld dec (bad) in sub dec jle les out jg gs lahf dec (bad) jg,pt inc pop incl imul mov scas jg psubd int3 aas mov iret scas mov std pop dec movsb mov call inc dec or std jg daa sbb out inc (bad) xlat mov aas repz cld lcall pushf cld daa pushl xlat jge scas (bad) cmp lahf cli xlat cld fdivrp repz repnz sarl (bad) fwait dec mov pop std mov mov mov aad lock lods jg jg cmp leave lcall aas cmp arpl ss jg push out cld push aad (bad) lahf (bad) mov (bad) inc (bad) in fisubr push out jmp dec jle jg lahf jmp out stc (bad) in fcomip ja repnz (bad) (bad) xlat mov fucomip aas std in pop cmp (bad) outsl incb cmc call jmp push xchg push scas cmc aas std scas stc scas stc sti std pop scas mov xchg pop icebp iret cld (bad) out outsl hlt dec push (bad) call dec jle jg das std (bad) (bad) in fnstsw out out clc std pushl imul outsl incb outsl hlt adc jg stos mov in call mov (bad) mov mov (bad) fstsw jg sti (bad) cld lcall pop xlat jg aas cld (bad) (bad) jge in (bad) out jg pop mov fwait adc ljmp (bad) clc fistpll std sub ljmp jg pop pop std movq das (bad) (bad) cli faddp ret fbstp popf mov cld stos mov std dec jg push lds sar (bad) lock (bad) scas jg pop sti ja sbb fcomip mov outsl std idiv dec mov jmp fistp inc jg stos aaa mov mov mov and lcall out jle (bad) cld das (bad) xchg pop (bad) (bad) nop (bad) psubb mul decl out stc (bad) cld mov mov (bad) out negb adcl xchg jnp out out jg and imul jmp lods aas std out jg cld xlat jg lock jns jg mov dec sti pop cld imul imul decb jg lds out cmp and aas xor test lahf jbe jg out mov loop pop repz cld push enter jg (bad) (bad) std into scas (bad) cmc jle pop jmp sti (bad) ret rcr lock clc out fistpll xchg iret into xchg (bad) cli pop sti pop std cmpl pop decl xchg pushl (bad) out icebp cmpsl std ljmp (bad) imul mov jle shrl incb mov dec mov cld aad call jg scas clc out jle mov jp ret jg lahf jnp push std add lcall out push cld repz mov pop bnd jg aas (bad) cld jmp das mov aas std jle (bad) hlt pop (bad) cmc jecxz cmc xchg sti xchg jg jmp xlat decb jle pop in std inc decl jmp cld popa jg out cli data16 dec ds (bad) jmp ja cmpl jle (bad) jmp jl out stc mov sbb mov add (bad) (bad) paddd loop out stc jnp leave (bad) in scas repz aad ficompl dec mov sbb (bad) out pop incl aas out in out stc cmp (bad) fucomip out cld (bad) outsl stc sti cld xor es jg jle iret jle aas (bad) aaa js mov sbb icebp aas decl (bad) lods jg loope cli pop push cld jae outsl (bad) icebp in data16 stc incb cmp cmp xchg std mov icebp and xchg hlt jne aaa out jge jmp decl in xlat stc repz leave ja push std mov xlat mov scas dec lds mov cli sti jmp fdivr insl xchg jmp idivb (bad) fabs mov nop fcomip int jg nop hlt imull std paddd pop dec mov clc loop jnp stos das aas std sti dec (bad) pushl inc jmp cmpsb lcall fwait loop pushl stc pop mov cld scas aas stc fistpll pop mov sti popf (bad) cli mov jg mov xchg decl idiv (bad) jmp (bad) repnz std aas push jmp mov decl ljmp call out mov dec popf ret mov (bad) ficomp mov aad cmp idiv lret das sub (bad) sbb iret jg xchg (bad) sti mov pop pop lcall mov jmp (bad) mov mov std rcrl repnz std push idiv scas aas jmp out cmp iret clc iret mov test stc mov cmpl aaa mov std daa push jg ja jge pop cld pop (bad) fnstsw aas cmc cmpsl (bad) (bad) dec pop mov jg dec cld aam std iret cld into mov out sti insl jg out sbb loope call outsl jmp fstp jecxz sti pop (bad) jg fnop inc (bad) mov addr16 jmp ret iret dec (bad) out mov movsl (bad) fcmovnu cmp mov out cld sarl lahf repnz fnstcw decb decl add mov mov ljmp aas cld jno imull fcomip ja sub stc sub (bad) iret jle lock pop lock (bad) data16 mov push cli sti lahf cld jnp out (bad) outsl popf std jns shll icebp pop cmc lods jmp scas cld mov shrb cmpsl jge fwait (bad) cs fcomi ljmp lcall daa cld data16 out std pop cld adc aas jp jmp clc xchg push mov std loope std scas (bad) (bad) in pop sub sarl sbb das jge pop cld fidivl dec fcomip lahf fcos test jg pop cmc idiv xor (bad) (bad) cmp mov hlt scas (bad) sub ret jg paddd xchg inc lods pop jl outsl cld (bad) jg jg xchg dec jg in sarl in paddw shr lock inc mov decb cld cmpsb mov jg adc pop dec (bad) (bad) outsl sti and test (bad) adc int3 mov mov cld add aas lcall out cmc lahf jle paddw call jmp out push sarl push jg push push cld cmc lds fwait std or jle xor (bad) in aas cmp jae mov cmp jae sti das dec (bad) xchg mov lods aas dec (bad) xchg fcomip das (bad) in clc insl (bad) std mov test clc scas jle cmc gs (bad) (bad) das jle fcomip ja (bad) jecxz fwait repnz mov lcall jg scas sti push dec mov push pop std xchg (bad) sti out repz das in in pop popa sti repz push rcr imul stc lods mov pop notb mov ja decl ret mov mov out cld pop std cli jg out sti out jg pop ljmp lahf cmc dec lods (bad) fdivrs ljmp icebp jg mov (bad) lahf cld repz into fcomip pop cld loop out sti jnp aad hlt iret (bad) fwait (bad) rolb cmc (bad) mov jg sti push pop std mov jg pushf call daa (bad) and aas out sti sarl lahf jle pop jne sti (bad) jnp (bad) push sbb stc ja sub (bad) das std lods incl cli and jg aas js hlt repz out cmc ljmp fcomip outsl movsb mov pop mov jecxz repz stc jg lahf sti pop std sub pop icebp pop sbb aas stc mov lds sar (bad) jmp leave pop lock (bad) mov hlt outsl mov aas jmp mov cld idiv (bad) jl iret std popf mov leave icebp aas cmc stos push cld data16 addr16 sti pop push (bad) pop jg mov jg out sti ljmp jg mov hlt pop clc loop lcall jg idiv scas mov decb repnz cli out fdivr fwait lret out stc negl jg sbb (bad) mov loop clc fnstsw std mov ljmp (bad) xor scas jle mov jg aas in mov pop jg pop push aas clc int stos (bad) mov mov dec (bad) (bad) fbstp paddw daa (bad) sub daa jl xchg iret ljmp idivb loop clc daa pop std inc jmp in call out out cli test jg fstpt jg idiv xchg jg addr16 cmpl stc std jle repnz fdivr mov mov icebp pop stc dec std add jp hlt outsl lods decl clc dec std lcall jmp jbe outsl cli idiv jle (bad) aas rep pushl pop jl mov iret decb jecxz cld mov decl in mov sub push leave dec cld daa pop std xor fnop mov popf push aas push xchg icebp pop (bad) jmp ljmp hlt xchg (bad) dec clc aas sti ja pop std fcomps scas aad ljmp lods incl cmc out out pop cmc xlat incl std psllq cli das popf das mov jg lahf mov mov outsl (bad) hlt mov (bad) sti outsl (bad) xchg cmp into scas test daa jg aas cld or repnz cld lahf (bad) xchg jle jg jg mov jg pop sti push lcall icebp mov push mov cld lcall mov imulb jle psubw push jle xchg jle mov push outsl cld push (bad) in pop lock ljmp xchg mov pop mov mov jmp pop call rol stc daa (bad) (bad) sarl iret sti dec lcall lods lcall hlt lahf repz (bad) cwtl cld std aas std pop ljmp jecxz aas ljmp aad je jg sbb outsl stc addr16 fnstsw pop clc cmpl (bad) in idiv mov (bad) mov push mov (bad) cli jnp out mov dec std imul out std pop std xchg sti jg (bad) imul cld lcall (bad) pop ljmp in clc mov das stos pop clc popf stos (bad) jg call aas cli dec (bad) ljmp jle pop jl cmpsl jmp (bad) fwait std cli mov jae mov lahf cld mov leave jg iret cld insl jg out xchg decl icebp scas std (bad) std fwait mov std arpl lret lahf push std xor das mov mov xchg xchg pushl push iret jl dec sti pop stos (bad) (bad) fsubs cli arpl rol mov (bad) aaa mov pop sti jnp repnz decb jecxz cld xchg jg (bad) mov mov lock aas in (bad) stc sar cltd in (bad) xlat sti mov mov xor lahf sti push jle mov push jg fcomip out cld push jnp leave out cld pop adc repnz cli sub jg sub mov clc pop std (bad) mov jg fldcw cmc das sti jae fistpll (bad) fistpll (bad) int mov mov mov addr16 aaa cld repz std inc mov aaa decb iret std adc iret out cld mov sti cli pop jg mov xchg arpl decb xchg (bad) fnsave pop jmp mov out bswap dec mov jg lahf cld mov mov decl icebp out cld pop jg jg aas cld int rcrl mov std dec das jle push out dec push out (bad) out icebp addr16 andl les das mov jnp sti idiv ret rcl mov stos lahf cld imul mov in std (bad) (bad) adc decb mov repnz stc iret (bad) xchg pop lock mov jg mov mov aas cld inc jg fldcw (bad) mov lock cmp jnp mov jg (bad) sahf (bad) movsl xchg in lahf jns sbb sbb mov mov ret scas pop std bnd psubd ja cmpsb pop out cld add cli mov clc xchg mov jg cmc pushl mov sbb idivb fucomip xlat sti out mov cld out enter dec jg mov (bad) std pop hlt pop mov aas call push inc outsl lock cld out incl xchg loop cmp sbb (bad) mov jmp dec stos jle aas out pop std mov fstpt outsl clc imul jmp inc mov or lahf hlt cmp push out shr cmc (bad) cmpl xchg (bad) jbe cld sbb pop (bad) sub mov fdiv ds jne cwtl jg lahf stc leave jg in out addr16 jle (bad) mov aas ljmp pop cli outsl jg lret in cli xor xchg gs mov loope neg std fstpt mov ja sbb leave xchg aas (bad) (bad) (bad) (bad) lret in mov jg adcl jg jns mov (bad) push decl outsl incb jg popf fnstsw iret clc outsl jle pop pop std or or (bad) mov hlt push cld jnp neg pushl aad loopne hlt pop cld stc aas std outsl (bad) aam jg mov (bad) aas jle jmp aaa cmp scas dec pop jecxz and repz (bad) jmp popf aas mov push jg lahf fdivrl pop (bad) pop cld xchg mov mov std pop mov jle aas cmc pop sti sbb lcall ja jmp (bad) mov (bad) sahf jg cmc out stc clc (bad) jl sti jg push (bad) stc addr16 stos jg mov jg pop dec fidivr stc xchg fwait pop jo push insb incl fnclex aas ljmp jmp lahf (bad) loope jmp cmpb cmp jg mov ljmp jmp loope into hlt push mov jg aas (bad) daa jl pop jp push (bad) pop (bad) iret jle fnstsw pop cmp inc (bad) movsl mov (bad) std xchg fdivrs imul dec lds fsub scas sti push (bad) jmp cli (bad) fwait mov ss (bad) push (bad) xchg fnop daa lods call scas pop sbb out jg xchg mov jle xchg mov into dec lahf (bad) lods pop mov xor pop jg scas cmc (bad) out mov push mov (bad) mov gs mov sar cli pop jmp jg aad icebp fldcw dec xchg mov fucomip das stc mov fwait cmpl cli call jmp icebp jg pop hlt insb icebp dec cld add stc lahf repnz std scas jg lahf icebp cmpsl std sub jg jnp repnz (bad) (bad) std popf fcomip jg push iret daa mov cld out cmp or outsl std mov decb rcrl mov std mov aad pushl loop hlt push pop jg sarl (bad) dec fnstcw stc xchg cld push dec mov je imul cmc popf jg (bad) cli dec mov test cli idiv dec jg lahf repz call sarb fstps repnz std mov shr repz std outsb jg jecxz pop std sarl xor lahf jg scas clc addr16 aad loope clc sarl out cld stc jg in repz sub xchg (bad) xlat cmp (bad) cmc outsl lock int3 outsl mul (bad) ljmp into jmp fcomip cmpsl (bad) in fcomip aad cmp js fcmovnbe jg pop bnd jmp sti (bad) stc loop cli xorl stc sub ja sti aas movsb dec lcall jg out xlat std xchg stos pop mov (bad) sub jg repz jg int cmc daa std mov paddw inc fwait decb push (bad) stc push paddd call std in (bad) sbb out icebp decl (bad) repz das fdivr mov lahf fdivrl icebp repz clc sub sti inc push (bad) cli (bad) fcomps inc pop clc pop pop pop mov (bad) scas cmp repz cld jne ret mov call aas jnp iret std jge fdivrs mov call leave out divl lahf (bad) std (bad) sti out xor dec jle movd aas notl icebp (bad) lods inc das cld or mov in cli popf (bad) scas jg jmp inc fcomip stc pop cld paddd decb cld iret pop (bad) cmp pop push scas jle pop std ret pop decb movsl lahf cld das ljmp decl test xlat jle aas call mov jecxz (bad) fcmovne outsl hlt xor std pop jmp jns in jg aas std mov sarb aad in mov imul push mov sahf aas std (bad) jmp les fwait std ret pop sti imul jg loope addr16 clc mov repnz std in (bad) dec std sbb icebp pop sub daa jg (bad) outsb jle mov xchg mov mov mov mov (bad) jg jg mull jmp out stc clc pop out std cs decb sti jne incl (bad) decb sti jle mov psubd jmp lea pop notb imull dec mov cld jnp repnz (bad) std cmp push pop inc aas in scas cld imul aad icebp (bad) in decl aas sar shr lahf std sbb sbb loopne imulb jl (bad) jmp jg mov fbld jmp cmovs out (bad) stc int (bad) mov hlt paddd loop out outsl cli jae mov (bad) cli dec ljmp (bad) sahf jg push mov lahf push (bad) cs xchg inc outsl stc popf aas call rol std pop cld ss insb (bad) pushl negl std outsl jg mov stc or mov (bad) pop not lahf cmc xchg mov jg mov mov jnp shrl std jae stc (bad) jp cmc outsl cld pop jg scas std push cld jnp stc scas (bad) repnz cld jge out jg stc lahf lock dec aas out aas cwtl mov call outsl lock leave mov fstpl divb clc cmpsl decb lahf jle aas std jnp stos jg push mov (bad) (bad) mov cmc (bad) fst repz mov push dec (bad) jne repnz cli lret aas stc dec cld clc icebp aas push decl jg jg (bad) jge icebp pop icebp cmp or incl (bad) lahf neg fbstp mov aas hlt (bad) sti daa jmp aas in clc cmpsl jg mov xchg addr16 or std ficompl mov push mov jg fucomip pop (bad) test sbb cmpsl idivl mov decl decl std arpl mov std inc inc jg cld cmp mov out pop stos mov lock lods (bad) out icebp out cli leave (bad) (bad) popf jg (bad) (bad) out lahf incb rcrb sbb pop repnz std fmuls pop pop call jmp jg (bad) sub lods (bad) hlt icebp scas divl jmp clc out (bad) mov inc (bad) fwait dec jg hlt pop fdivrp (bad) pop decb pop dec scas mov clc mov clc jg cmovp out stc mov lock lahf stc icebp push (bad) daa (bad) pushf fcomip xlat cmp loop stc xlat call aad clc pop jmp repnz decl movsb ret jg scas sti scas pop (bad) jg pop std jp iret faddp pop cld stos aas cld (bad) (bad) sarb xlat jnp negl cli ja aad loope icebp adc std popf (bad) loopne jmp mov push in mov ja (bad) xchg jmp mov divl test in clc inc jg jg das (bad) mov mul std pop jg pop std cmp push mov xchg pop stc idiv hlt pop clc mov (bad) outsb (bad) stc outsl (bad) cli (bad) pop jmp lahf incb pop incl cld xlat dec jmp jmp sti or iret stc jne movsb clc jecxz cli and jmp iret sti xor sti movd pop (bad) cld loope cld mov lcall std mov pop decl ja (bad) mov (bad) in inc mov int (bad) aas loope sub jg iret (bad) hlt jmp stc movq pop (bad) sti (bad) sarb clc cmc jle jg pop stc out inc aas cmpsb cli ja pop mov ds arpl stc mov cld pop jg mov (bad) dec stc push (bad) out xlat (bad) fwait incl out clc sarl push rcrl pop (bad) arpl jle daa cld stos jmp stc pop cld jge fcmovb mov jl std scas jg in aaa cli pop jle jg rcrl jg inc inc push pop cmpsl icebp repz dec stc sti (bad) jnp out aas lcall lahf cld jnp stc (bad) lea out (bad) xchg (bad) scas lret dec fnop aaa jl lock jg paddb fimul cs push in cmp jnp xchg (bad) in das cld sub mov jle lahf stc cld lahf sti dec jle shr icebp iret cld lea cmpsl jg (bad) popf mov xchg mov ja in jb mov ljmp pushl push aas ljmp (bad) (bad) into (bad) cmp (bad) mov (bad) out push (bad) cmpsl jle pop out idiv (bad) enter push cld fld aas cli dec call sbb xchg mov arpl jecxz clc scas (bad) jmp fstpt in lds jg paddd jg jg in das (bad) in pop cmp (bad) decb iret std sub testl outsl std pop sar jecxz (bad) addr16 pop jg aas testl (bad) jns idiv popf jle lahf repnz incl icebp jge jg sar in iret sti repnz lret jg pop std xchg daa call jg jmp push (bad) cld outsl cld repz xchg in dec sbb (bad) xlat mov (bad) xlat aas std push std paddsw mov jmp loope clc (bad) jg mov dec jle ljmp std (bad) mov cli (bad) sub mov or std lds repz lahf jae negb iret mov stc jmp jmp push icebp out repz (bad) push jmp outsl decl jg (bad) jmp stc pop (bad) iret jl pop cld ljmp add aas jl clc dec cld test lcall pop (bad) sti pop std jg (bad) jae ret lds call jg scas decb mov fbld std xchg (bad) fistpl ja stos jg mov xor xchg push cli pop jl std lahf aas jle push (bad) imul aas std lahf push mov mov (bad) aaa lcall cli fstps pushf cld xchg aas std fwait lahf cld dec lahf (bad) cmc (bad) fidivrl pop (bad) mov jg mov repz neg sahf mov in aas cmc (bad) stc scas (bad) loope div das sti stos (bad) xchg fucomip (bad) cld imul (bad) clc aas clc pop ljmp cmpl icebp push aas negb std jg std addr16 aad stc in ja scas incl cli pop (bad) jne jg fidivr cld or mov ds fwait pop std fcomps idivb pop lock mov cmc iret std hlt jg (bad) jg out repz pop xlat push jg scas std sahf jg push std jg ja mov jecxz jmp cld in (bad) jecxz ljmp lahf std lods mov imul cli lods mov lock pop inc hlt jmp fwait aas cmc pop sti sar hlt lahf stc mov hlt dec sahf ds (bad) out xlat jle mov loope clc xchg pop ss pop sti (bad) xlat jg int3 fbstp cld fstpt mov (bad) lahf (bad) aas incl push xchg cmpl (bad) aad ljmp repnz inc jle scas std inc dec stc lret (bad) pop cmp pandn pop jg pop xor hlt ja movsl inc das cli mov cmc scas pop sti ja cmc incb mov iret decl inc cs (bad) cld jg pop jle (bad) cld in cmc pop inc std decl outsl xchg xchg (bad) mov cld std dec (bad) fidivrl (bad) ja mov mov pop cmp pop (bad) jmp sbb lock stc jecxz xchg pop not jmp dec movsb cld aad idivb out lret (bad) cli (bad) lcall pop lahf cld in cld flds inc repz pushl ret ljmp mov lcall stc lcall fidivr (bad) daa jg (bad) jp cli aaa decb cmpsb idiv in mov (bad) mov ljmp (bad) pop jle pop cld stos jg idiv push jg dec ljmp aas jge mov pop repnz inc (bad) fstl decl in in cmc (bad) cld hlt outsl cli push ds sbb (bad) ficom (bad) in mov enter (bad) fldl (bad) cld (bad) decb dec fnop pop js inc (bad) jbe pop stc pop (bad) fnstcw aas std fcomps inc (bad) mov out std (bad) fcomp (bad) jge jmp push aas sti iret pop decl jg scas sti inc incl (bad) mov fwait ds pop pushl mov xorl sub das std call jg pop push (bad) (bad) idiv daa (bad) sarb fwait std leave das (bad) mov (bad) in scas sti sbb in cli outsl std cld lds daa mov mov (bad) pop repnz ljmp (bad) out stc in les mov mul pop (bad) push jg pop mov imull idivl aas cmc pop (bad) fdivr repnz aaa stc pop imul jg jmp mov mov out pop repz dec jmp addr16 adc cld imull (bad) clc outsl decl (bad) cmp adc jge dec pop jle cmp js arpl pop cmpsb push (bad) (bad) cli pop push clc (bad) jg lret jg mov (bad) push rcrb dec std scas (bad) jmp jg scas cld sub fdivrl out inc ljmp cld dec jg aas mov in cld (bad) clc aas (bad) lcall xlat int3 (bad) jg outsl lock aad (bad) addr16 (bad) jg popf iret mov xchg (bad) rol mov hlt dec stc insl (bad) cli popf aas in mov jecxz mov jg scas cli lods jle stc mov jg dec stc mov scas dec (bad) loop mov dec (bad) jg ja (bad) cli pop hlt imul xchg jg sar lahf sti dec incb cmpsl jmp fistpll lahf (bad) mov xlat cld add jmp push aas (bad) out addr16 jg jecxz mov mov mov cwtl lahf cli in loop (bad) std pop mov std aad in pop xor jge lret fucomip (bad) cli (bad) push out std (bad) out ds ja cld pop scas (bad) out jg (bad) call daa stc movq fnstcw sar xlat pop cld daa std xor jecxz std xchg mov jns repnz hlt imul mul aas stc jmp add std sub push push out std mov (bad) jns (bad) std lcall cld sar in outsl cli imul outsl clc lds in xlat es pop pushl loop repz cmc pop cmc aaa std sub fistpll lahf (bad) dec jle mov pop decl clc aaa (bad) mov cmp pop std daa jge cmc lahf cld inc dec dec sahf std sbb cmc in std out outsl (bad) fstpl (bad) std xchg incb jg push (bad) std stos inc in push out outsb jmp scas (bad) mov push (bad) cmp (bad) out fwait mov (bad) aam call addr16 aas stc mov jmp pop (bad) mov shr idivl cmp cltd jg lahf stc lahf (bad) mov idivl lds pop lcall (bad) je lahf push (bad) repnz pop neg mov decl in pop std jecxz fdivrs sti jmp sti scas dec mov mov jle fnop lahf mov imull scas icebp mov aas cld sti (bad) out (bad) cmp mov stc iret sub sarl sar ret repnz pop std dec jecxz mov push jg sti mov fistp icebp divl movsb aas jle aas jp sbb jg jmp idiv pop inc pop cld jne cli cmc iret cld add aad cld mov into mov iret cld (bad) jg idiv pmaxub (bad) mov loope out repnz idiv in (bad) push (bad) mov std xchg std mov repz std add jnp cld dec pop (bad) out fcos repnz std jno idiv cld xorl stc pop call jg pop lock std mov cli ja fwait out std jbe lds cli pop cld add cmp lahf cld dec inc jmp jg repnz mov ret cli sti in (bad) stc ljmp jg dec (bad) out (bad) in jg mov fcomip repz (bad) mov outsl (bad) scas (bad) ja scas dec jle pop xchg std clc scas cld addr16 out jg setnp sbb jg cmc out jg ljmp jle aas repz (bad) (bad) inc pop jg jg push leave call (bad) mov cli hlt rcrl (bad) xlat daa push mov push fcomip iret std sub jmp inc fnstcw sti sar mov xchg arpl pop std (bad) (bad) cmc movsb jg mov repz cld sbb das incl out cld stos jmp lods jmp dec sti das (bad) sbb outsl stc outsl cld xchg mov lock imull scas stc mov shr cmpsb inc lahf cld pop cld dec jg cmc loope cli xchg inc push fisttp out cli and std pop clc sti decb pop jmp xor aas imulb inc iret jle repz out out scas cli ja loop aas into push lahf (bad) cmp popf loop dec call imulb idiv mov mov idiv pushl jno jg inc jbe negl fcomip das cmp (bad) cmp (bad) paddw (bad) fstpt lahf stc idivb repnz std xchg jg jg lahf clc jecxz mov dec jge stc stc mov push jg aas push (bad) popf (bad) (bad) lahf repnz cld (bad) mov (bad) (bad) mov notl pop jg lahf pop cld cmp (bad) xchg cmpsl jg out (bad) xlat jl addr16 decb (bad) (bad) xlat aas imulb outsl (bad) xchg cld dec mov jg xchg cld or (bad) pop clc fnstsw jl jle pop lcall jg pop cmc xlat int3 push lahf cld inc mov mov std and mov jmp mov jno pop daa mov mov cmp pop test clc mov jns mov mov fcomip out mov push (bad) mov sarb (bad) rcrb fwait decb jg out imul std fstpt pop icebp (bad) ret call repz fistpll adc xor idivl aas cld popf pop inc ficomp cmpsl mov ja stos (bad) mov cli jg mov aam jmp clc and push xchg mov mov out lock stc push bswap idiv cwtl mov incb ret jg dec cmp adc xlat fcomip into out clc jg sti lahf (bad) mov idiv mov push clc xchg (bad) (bad) decb sub mov icebp addr16 pop sti iret std or cmc mov loope sti cmpl xor iret incb (bad) scas mov popf fcmove pop sti dec jg addr16 subps (bad) (bad) fidivrl cld (bad) std mov cli mov (bad) cld imul rcr jmp out repnz ss jg lret fucomip xchg std dec mov decl jnp mov fxtract psubq mov loope addr16 (bad) jmp stc push push (bad) cmc (bad) cli dec (bad) pop repnz dec aas jecxz sti sbb jge mov clc icebp (bad) stc imulb mov jmp (bad) loopne cmp dec sahf out call decb int cli fld scas stc jnp scas jg outsl repz std in cld aaa jg fcomip pop xchg jg (bad) cli out jns in (bad) jnp push inc (bad) ja inc repnz incb jnp scas aas jecxz (bad) cmc decl aad loopne clc xor dec enter call (bad) mov mov cld test (bad) aas cld jge dec jno (bad) cli std (bad) cld jg cmc mov clc in repz jmp cs inc pop cmc out cld (bad) jne fcmovnu cli in cld (bad) (bad) mov (bad) decl mov std clc lahf sti sti jle out movsb cld call cli mov out std arpl (bad) out inc jmp jg pop jne out clc sar mov cld dec (bad) jg icebp in icebp neg sti lahf (bad) fnstcw dec (bad) mov jp out inc inc dec cli sti cld out outsl jg (bad) clc psubb loope std pop std sbb iret mov pop inc das std cmp mov in jmp in pop cli lds std inc call fbld out xor jg aad cld stos (bad) cld jg pop pushl imul (bad) outsl cld pop jg jg inc jg cmpsl std ficoml fidivr lock lret ffreep sti mov ja icebp aad cld movsl mov (bad) (bad) sub adc jp dec (bad) (bad) jle aas cld jmp sbb cli aas stc jnp mov call int out icebp fnstsw scas stc mov sarl out xchg (bad) mov in repnz lcall fldcw cmp outsl call pop lock mov aas out (bad) cli mov mov fisttp aad in std jge (bad) pop (bad) cld cmpsl mov (bad) or mov cli jmp mov sti std xlat aas cmc cmpsl call outsl jle (bad) cli xlat mov fcomip pop (bad) sub cwtl (bad) in mov std loopne clc cmc dec jg lock ja repnz jp dec incl lcall aas pop aas decl out not cld mov jg (bad) std dec jmp pop jg mov stos mov scas cld pop jg mov decb dec (bad) (bad) pop hlt popf mov mov sti pop std mov mov push idiv pushl jg push mov xchg jg mov mov cwtl cld mov loope outsl cli imul cmp out decl jmp jmp xchg fdivrp scas std sbb mov pop (bad) sbb (bad) fist aas mov (bad) xchg leave lahf cld (bad) out repz cld jmp ljmp mov std (bad) (bad) ljmp jg (bad) clc fincstp (bad) out jg cmc out hlt dec pop cld fnstsw xchg mov (bad) cmc pop lock incl push pop jmp das sti into fcomip sti std imul imul fldl2t in lods fldt pushl pop std jg pop jecxz stc mov stc jae cld xor mov mov (bad) dec fidivr mov out cli mov cmc jg lahf testl leave outsl clc lock std (bad) std pop repz and mov imulb std xchg jg fucomip outsl sti jae mov pop jle out js xchg jg out jnp ja aaa jg outsl test add (bad) sbb aas stc dec (bad) pop call aas stc jmp loopne cli sbb aas (bad) outsl lcall cmpsl into (bad) mov lret leave (bad) jle lahf call aas clc out jg repnz (bad) fdivrs repnz (bad) std out inc loop jecxz in out repz jg aas dec bnd test leave outsl not jl aas outsl (bad) sti dec aas std jnp mov jle mov leave in cld or pushf pop jecxz cli idivl lods cmc out jns,pt xchg cmpsb call leave out lahf hlt xchg std push jg mov sti inc inc dec (bad) std fwait std cltd mov pushl incb jmp push pop repz cmp mov (bad) fdivrs cli popf aas cld mov push jmp outsl clc aaa std adc lahf repnz std mov std lret (bad) movsb ret jg das std dec incb (bad) jmp out sti push jg dec (bad) mov xor addr16 (bad) ja jl cmpsl aas (bad) idivl (bad) pop nop std clc mov mov outsl das ljmp std lahf cmc aas repz fdivrp fwait pushl iret fucomip (bad) mov mov jecxz jns xchg mov (bad) mov jg jg (bad) sti dec jle mov mov fs inc xchg (bad) std idiv cld cmpsl mov fistp pop mul ja jge sbb mov stos xchg push mov addr16 idiv std mov aas negb pop std lcall std gs stc idivb (bad) out das stc jecxz xchg mov imul jg pop clc out jg adc std rcr sti (bad) cmc mov mov incl insl decb cmp dec pushl iret (bad) cmpsb jg aas sti aaa (bad) jmp idivl cld fsubrs aas imull ljmp push in pushl (bad) lcall mov pop jg push hlt (bad) mov sarb jnp mov repnz cli aaa jle pop out (bad) neg cld fidivrl (bad) movsb mov (bad) das jg jg lock scas (bad) sti jg mov cmp stc pop push mov rcrb jg (bad) hlt sti daa mov and jmp data16 mov mov and or enter (bad) push jg icebp mov lahf lock (bad) mov push push cld jnp jmp repnz das mov out js lahf std mov stc addr16 outsb inc mov hlt pop jnp stc pop not xchg int inc jmp (bad) out xlat ljmp lods mov stc pop icebp fldcw adc in pop cld push das (bad) in call (bad) push mov cmpsl cld lret (bad) mov jnp std jge call pop cli mov (bad) sarl cmc psubq out (bad) mov aas sti lahf std adc cmp iret (bad) (bad) fldenv inc cld jmp in movsl cmc jecxz out clc jne decl pushl ss jg daa jmp out imul nop (bad) fistpll pop out (bad) clc (bad) pushl cli clc scas clc cmc dec mov jmp push aas clc paddd (bad) aas icebp out iret ljmp idiv sar (bad) out dec xor pop cld jmp (bad) lahf cld out (bad) xor (bad) call decb in iret mov incl loope stc cmp jp lds outsl cld jnp xlat pop std mov cli fildll ja fdivrl sti ja jecxz (bad) iret js xlat xchg iret jle aas jmp lahf aaa pop xor std add mov jg jg outsl incl scas (bad) mov (bad) addr16 out idivl xchg push ficomp mov cld sbbl mov jg mov call das cld dec (bad) loope not cli out push daa std aad jg scas lcall sahf ds adc jg (bad) inc (bad) ret push (bad) int cmc pop stc out cld or dec call jle aas loopne sti aas mov cld xchg sub js paddd jg (bad) idiv fidivrl hlt sar loop sti addr16 lock mov scas mov pop cld aad fcompl fcmovnbe cld jge (bad) std mov repnz jecxz std ds repnz clc xor ljmp cld loope ficomp idiv lds push lahf popf cld sahf mov cli pmaxsw mov pop sahf jg cld aaa leave inc fbld std adc je sti sahf cld pop call outsl cmp (bad) jmp bnd fwait iret (bad) mov mov cmpl std pop (bad) (bad) cld scas std mov ja jp stos aas mov mov cld gs (bad) (bad) mov std jg das (bad) lods jge out shrl fwait (bad) incb sti xchg sti hlt ja mov mov sti (bad) jmp aas ljmp mov popf jmp pop cld pop jle aas std lahf (bad) scas (bad) fcos icebp addr16 aas std addr16 fidivr mov cld jns in outsl hlt mov repz cld sarb pushf (bad) outsl pop std mov (bad) fdivrl cmpsl sahf sar out sti aaa (bad) pop lahf ds test jp aaa cld jmp (bad) lahf idivb ret ja ja sub ljmp pushl std jle aas jle (bad) frstor (bad) ljmp jg mov out aas je aas cli (bad) movsb cmc pop cli xchg pop pushl out repnz lods jg xlat stc mov sarl cmpsl ljmp (bad) out pop hlt jg (bad) stc pop cld addr16 push jg pop mul lahf fnstsw mov pop mov outsl pop std std jmp out jge cmp scas incl aas out aas dec (bad) mov xchg lahf jl inc dec mov (bad) out (bad) jb aas cld or das cld idiv (bad) fucomip dec cld inc jg inc std cmp (bad) stc out jle jg in mov inc jle mov pop gs jmp mov mov cli pop incb in aas decb fdivrp ds sti out cld into aas js aaa std mov cld lahf sti lret scas mov jg lahf stc (bad) or dec int cld out (bad) data16 xchg pushl popa (bad) mov (bad) jle in ja ret stos pop hlt mov testl pop popf lcall (bad) std pop stc mov xchg mov std sub pop negl lret decl in aas dec dec jg daa push neg ja clc mov mov fstpt cli pop ljmp in std jecxz mov dec mov mov pop or std push jg jg sti iret decb mov (bad) dec std dec addr16 xlat lahf incl jg stc adc fcomip sbb cmpsb aas stc lahf cld push mov mov lds call push push jg lahf clc (bad) pop (bad) jnp mov mov outsl cli dec jg mov ljmp xlat (bad) clc cmpl mov imulb pop jmp (bad) scas scas jle out std mov pop out fistpll call in lock mov pop call out fstp cmc xchg jge in (bad) push cmc idiv mov rcr inc stc mov lods mov hlt repz loop mov pop fistpll sub (bad) jg aas stc test push cld into scas jg popf (bad) bswap out std ret mov fdivrp outsl das pushl (bad) cli pop jmp stc mov std lods mov das (bad) out cld or cltd jg loope (bad) ficomp jmp jg xchg fmuls ds std xchg push decl aas icebp aaa (bad) mov mov and outsb lret jecxz (bad) (bad) std pop setbe std clc pop std jecxz jg das stc xor jmp mov arpl aad push (bad) in ljmp incb xlat (bad) std lods push pop sti in pop dec jg (bad) aas cli xchg mov jg out std cmpsl call in clc inc call outsl (bad) and lahf jg stc aas cld (bad) mov aas incb aas cld pop jg lahf hlt xlat pop cld fnstsw mov dec cld fdivr jo std jecxz pop incl (bad) std and jmp push mov lcall aas sti jnp (bad) ja std sahf jg pop dec (bad) cmpsl fcomip dec ljmp jmp out cld jno (bad) mov negb (bad) (bad) outsl pop decl decl stos aas repz cld cli mov xchg (bad) mov pop cld mov out repnz jle fucomip neg decb (bad) (bad) out aas pushl out std scas jg lahf repnz cld (bad) out inc (bad) mov lods push jne aaa (bad) lahf (bad) ljmp push jmp adc (bad) addr16 lds cld scas std jno sub movq mov fucomip cmc pop dec stc fwait in pop jg pop idivb std mov jg hlt sti out pop dec hlt sti cmp lea dec std jae cmpl in (bad) rcll inc cmp cli addr16 fs cli (bad) sbb xlat out jle lahf jae cmpsl (bad) cli inc lahf std cmp push jg outsl clc xchg inc (bad) std mov pop stos mov ja test jg jg pushl cli lds incb call mov icebp jg and mov loop sub cld lahf lcall sti out (bad) (bad) clc mov pop cmc aas icebp mov mov loop cld xchg mov mov (bad) mov les scas sti and stos aas out std subl jp aaa inc mov (bad) stc xchg scas (bad) sti cld repnz cmpsl jle fistp mul dec ds call mov xchg mov outsl std xchg std or cld sti paddd call xlat dec cld pop std pop dec incb imul das movsb stc sti mov (bad) pop xor std imul push (bad) mov pop std mov cld mov in out std fwait cld out ds int jg sbb out outsl dec cld sti leave cld dec stc in pop ljmp jg aas (bad) mov inc pop jle dec icebp sti lret mov fisub push scas ds xor insl jg mov arpl in decb iret pop mov sbb sub (bad) cld mov xchg jg jg aaa ljmp in (bad) aaa (bad) xor pop jg lahf cmp fimul mov arpl std (bad) xchg jg shr mov push (bad) in aas cmc dec stc cmp dec add cmc out cmp std fnstsw fxtract xlat cld daa (bad) jmp outsl (bad) sti cld aad call std lahf (bad) jle pop jg fnop xchg dec jg das (bad) mov xchg cld xchg mov clc xchg cld clc jecxz fnop lock ljmp in pop cld push aaa xchg (bad) fisubr ljmp out call fnstcw (bad) cli movsl jg pop enter push cld jecxz aad sti dec (bad) mov mov incl pop std ret stos mov lcall mov mov (bad) (bad) ljmp (bad) cmpsl (bad) out scas std repz (bad) sti test ljmp iret fucomip (bad) sti aad (bad) mov stc jg fildll jg inc stc negl mov negb clc mov aad sarb cltd push paddd addr16 std repz aas dec lock test pop jg aas repz clc jg cmpsl cld lret (bad) ljmp aas cmp (bad) jg xchg in insl outsl std stos test sti fistpll in (bad) mov std (bad) (bad) cli iret stc mov aam aas stc jne (bad) cld adc call lds and fistpll inc das (bad) mov daa mov leave mov decb stc iret jge clc mov gs (bad) repnz jmp lahf mov imull (bad) clc scas std cmpl repnz (bad) cmp out mov popf xchg lahf jle (bad) mov loop in scas sti jae jle (bad) pop decl sti cmc out xchg mov mov bnd pop (bad) ja std jp cld scas fdivr inc (bad) mov (bad) (bad) dec decl fcmovnu sti fucomi std int jmp int3 cli jmp aas pop std jne hlt sub jg lret mov jno jo std out fcomip (bad) std ljmp outsl jg (bad) out aas imul mov mov jg in addr16 rcrl mov fcomip (bad) cli mov sub ljmp repz cld out (bad) xor lock test imul idivl movsb fnstcw stc pop sti sbb fidivr cli pop (bad) cmp jg incl (bad) cmpsl call pop std mov xchg call jg icebp jnp out imul loope repnz cld movsl jg in mov out cli out jle pop cld cmp sbb jle (bad) daa jg in cli push pop std (bad) fild (bad) cmc cmp aad cli (bad) cmc mov mov lods pop (bad) pop (bad) fprem1 (bad) cld iret std lcall idivb pop stc scas inc inc aas hlt iret (bad) das jg mov clc clc repz scas stc mov mov std decl lea pop call mov (bad) (bad) sti jg out pop jg scas stc (bad) dec jmp jmp adc mov lods jmp aas pop pop pop inc mov pop out stc pop ljmp pop jg lds (bad) (bad) out jecxz std pmulhw decl jg mov jg std iret mov mov jecxz pop (bad) popa das jg addr16 aas (bad) mov (bad) neg sti aas (bad) jmp cmc pop fldcw jg aas stc iret mov lret (bad) xchg aas clc hlt ja std stc rcrl aas (bad) (bad) repnz icebp mov pop out aaa (bad) pop call jnp mov cld repnz cld add mov addr16 push inc pop imull decb push cld sbb dec decb (bad) xchg lret fucomip (bad) pop jg aas icebp out (bad) mov sub pop pop std arpl pop sti sbb push xchg jg mov cld popa jg push push decl lret aas in mov jg aaa stc decl mov div jle scas std loop repz jmp mov pop (bad) out repz sti (bad) std dec (bad) call xchg fldcw pushl adc in fisubr cli add jecxz jle ja push mov (bad) int3 pop jo push cld arpl std in sti mov into movsb jg (bad) out hlt mov mov xchg jg outsl lcall aaa out iret (bad) cli jg cld daa (bad) aam cmc cmp outsl (bad) (bad) (bad) mov mov mov push cld inc inc mov mov fldcw sti (bad) ss jmp lahf sti addr16 mov (bad) mov (bad) lcall and (bad) cld (bad) jecxz leave pop clc daa jle clc aaa std out mov lcall pop call fnstcw stc xchg std loopne (bad) decb and daa jmp psubw (bad) negb mov pop repz lock in cli dec decl std inc out (bad) jmp (bad) cli jg cli aaa cld fwait es mov bnd cmp mov pop stc fistpll iret fucomip outsl mov std xlat stc in jle (bad) cld mov lcall incl leave stos (bad) daa inc jg (bad) std mov out out clc (bad) out aas loop std imulb jg cld aad out aas loop fldenv (bad) stc scas enter (bad) mov jg fwait cld stos pop jbe pop cld cmp dec mov (bad) mov add hlt out daa xchg fwait (bad) jmp cld pop mov pop decl pushl aaa std insl (bad) in cmp imul pop cld lahf mov push (bad) std cld xlat jge stos lcall stos aas repnz mov jmp sti cld (bad) cli cmpsl jg (bad) aas sti fucomip std loope out stc paddd jmp or sarl stc sbb std int jecxz fcmovnb mov iret mov (bad) loopne ljmp aas (bad) in jl pop call fucomip pop inc popf icebp jg xchg inc mov std dec mov mov mov dec leave jle std stc jg (bad) cld sbb jg pop stc pop ljmp stc addr16 mov mov cmp xlat mov hlt sbb jg fwait std jle mov das dec pop std leave (bad) cmpsl mov shr pop icebp idiv es in cld lret push mov push aas dec dec nop aas sti push das nop jg test fcomip jmp sarb fwait cld ljmp call lcall sti cmpl icebp xlat (bad) idiv rcrb aaa std lcall stc fistpll (bad) in (bad) mov fbstp hlt mov sti jle dec jle (bad) lahf and mov cli mov push call (bad) clc dec sti sub (bad) sti fsubrp sarl fwait (bad) adc std scas jg xchg mov cld mov imul out std fistpll cld daa jg aas imulb (bad) (bad) pop std add aad (bad) out movsl jg das decl lret xlat jmp xchg hlt (bad) (bad) std scas mov mulb aam (bad) gs out repnz xchg fcomip scas dec xchg addr16 pop cmc lahf decb pop scas sub aaa cs jmp out outsl incb jmp std inc (bad) jnp (bad) pop rcrb iret dec aas jecxz outsl sub (bad) std jp icebp pop repnz jl mov std mov cli ret (bad) xlat jmp dec outsb (bad) mov (bad) jmp incl hlt inc (bad) fucomp icebp mov jle cld repz scas jg outsl cld jge aas stc or jge popf cmp call mov fstpt mov daa jg fxch jmp icebp lock std xchg sarl jae mov pushl (bad) scas (bad) cli iret pop ljmp (bad) mov in incl hlt out jns jmp mov std sbb std imul adc lahf notl pop sbb pop (bad) imul xchg out leave aas cld jmp inc mov sbb (bad) mov jne ret jmp std ja movsl sti mov das clc out incl cmc cmpsl lret lahf cld sti jg call (bad) jmp and std push (bad) dec sti push jmp inc jg outsl sti ja (bad) cmc outsl repnz std movsl pop mov jg cli aad lods pop mov (bad) xor hlt scas mov mov int3 pop lock incl mov ret outsl icebp jmp mov ljmp cld (bad) aad stc lock cmp mov out dec and movsl outsl lcall cmp std incl idiv mov jg lods (bad) sbb outsl ja clc jg pop std imul shrb (bad) lods dec (bad) jmp cmp mov clc call mov aas jecxz incl fstpt (bad) mov jg ja (bad) jl cld push cld testl (bad) xor notl jne out mov xchg mov sti iret cld xchg mov (bad) sti incb in mov mov cmp mov xlat icebp mov iret jg paddq jmp mov cld out hlt in daa decl aas loope pop dec jmp jecxz popf std mov call pop push lcall jle xor sub repnz std lret idiv sar cwtl repnz pop std and cmc xlat jmp fcomip (bad) cld xlat (bad) ljmp jg pop rep mov pushl cmp (bad) jmp cmpsl decb fstpt aaa clc mov ffree mov stos decl ja gs (bad) dec jg aas cld (bad) inc jg (bad) sar repz cmpsl cld stos (bad) stc fcomip dec jmp mov (bad) std sarl dec push (bad) call xchg mov cld jae lock sti xchg jl addr16 dec (bad) pop stc jnp scas aas scas (bad) pop out nop push sbb mov (bad) (bad) mov cld (bad) addr16 fcompl decb (bad) adc lahf jbe mov (bad) cmpsb fnstsw dec cld (bad) out jmp aaa cmp pop jg pop clc jg xchg jg aas clc xlat jg pop clc idiv xchg aas loope jg push popf nop (bad) cld lahf (bad) mov cld mov out xlat sti (bad) mov addr16 (bad) sti ret pushl sti push (bad) fdivr jg lahf fist incl mov out lcall jb icebp pop push inc (bad) cld mov xchg (bad) call cmpl stc mov push pop hlt (bad) dec mov cs jg fcomip jnp icebp jg negb (bad) (bad) jmp (bad) fdivrs pop jle idiv push jmp addr16 push jg pop repz jle (bad) paddd fnop lock cld pop mov stos jg call pop clc mov std push jg aas cld sbb rorl stos jg lahf stc fwait (bad) pop lret sti jg scas mov (bad) mov arpl mov sub (bad) cmp cmpsl sub mov fnstcw fimul in ljmp pushl cli inc ljmp fcompl dec (bad) jmp icebp (bad) push (bad) std mov inc cli out (bad) push (bad) (bad) repz repnz call mov cmpl pushl leave fnop xchg call std (bad) in mov cmpsl (bad) out in cld (bad) scas sti jnp mov in sti pop dec (bad) in subps ljmp (bad) inc jg iret clc pop iret jle fcomip ja in mov push mov (bad) clc mov (bad) mov div idivl out decb mov jmp in jg repz iret cld sarl jnp ret outsl stc (bad) sub sti aas repnz fwait mov call pushl idiv pop leave (bad) jle add lcall pop jle stc scas cmc ja lcall lcall lea fwait jg xchg mov jle fnstsw jecxz std daa (bad) imul negl dec imul repnz sbb out pop cs xchg mov popf jg iret mov cmp ljmp lahf (bad) std jmp (bad) xchg inc addr16 je xlat std cmp out mov (bad) cmp dec (bad) sub pop stc vpsubusw divl cmp push mov cli (bad) pop div jg pop xchg (bad) cld iret (bad) sbb scas sti ja pop iret (bad) loopne out cli dec xchg aas jl mov idivl std (bad) fstpt or iret aas icebp lret out cld cmpsl jg cmc iret dec jg mov pop mov daa dec fistpll jmp mov pop std push jmp jg out mov jmp pandn mov cld lcall stc outsl cld pop mov lret sti repnz cld pop adc jle lahf inc call das dec dec pop icebp imul jg (bad) das jle iret cld mov mov mov clc psubd (bad) addr16 sti pop ljmp lds sti jg pop aaa and stc sti sarl into out notl jecxz pushl (bad) aas repnz (bad) loope loopne std scas dec jg scas sti stc outsl incb cld std jmp outsl cld das std imul cmpl das (bad) fnstcw (bad) (bad) mov loope jg inc jmp addr16 inc (bad) jmp cld jnp neg jg jg jl xchg mov hlt pop hlt das pushl cld xchg iret sahf call mov xlat pushl clc jmp (bad) sti mov jg pop (bad) cli outsl stc sbb vlddqu sti cmpsl pop std jmp not lahf inc hlt lcall sti mov (bad) xchg (bad) dec lcall pushl in (bad) cs pop ds in cld cltd (bad) mov fucomip jg mov dec clc sub clc (bad) cld es jg mov (bad) call (bad) mov clc (bad) std (bad) frstor (bad) jecxz xchg std (bad) rcrl inc aas out incb pop (bad) clc pop hlt (bad) lods jg push aas cld idivl push mov lock in cli or out ds dec jg mov incl lcall jg pop repnz std mov mov sti mov pop mov call cmp ficomp repnz clc pop cld idivb cld add pop jg (bad) cli lahf cli das jg ja (bad) jge fildll aaa cli (bad) push mov ja xchg ljmp xlat clc mov dec icebp jecxz idiv ja (bad) aas sti ja xchg (bad) sar std mov (bad) fnstsw pop cld add out xchg mov jg cmp aas (bad) pop pushl lahf cld shll mov jecxz out pop dec stc scas aas hlt das clc add jl cli not clc lahf push cld incl in fucomip push jge scas sti cmc (bad) out aas repz cmp imul pop hlt out mov lret jg bsf add xchg fcomip out pop pushl inc aas mulb sarb hlt (bad) lock cld or pop incl jge aad sti lds mov dec stc mov std frstpm(287 pop cli cmpsl std ss outsl lahf (bad) adc inc cld jp decl mov in jle pop (bad) adc incl in pop hlt (bad) mov mov (bad) xchg jg lds out std mov call leave mov out jg idivl pop pop sar rcrl fdivrp std (bad) jmp hlt pop lcall cli addr16 aas std mov mov out dec inc pop hlt inc cmp pop xchg lret aas cltd cld fistpll loop clc (bad) (bad) rcrb aas test (bad) (bad) jg mov aad sti stos (bad) fstpt movsb (bad) lahf push mov jmp mov inc (bad) clc mov repnz xchg push aas cld or out pop icebp pop call stos add in xlat sti fstpt outsl cmc addr16 sti outsl decl daa (bad) mov (bad) mov cmp mov mov (bad) std fildll (bad) xor cmp hlt out cmc ja (bad) leave loope aas out pop sti pop jg fbld sti mov push in (bad) or aas stc aad testb out push (bad) jne lahf repnz dec xchg cld jmp push (bad) jmp (bad) out (bad) jmp int mov sbb (bad) (bad) pushl jg (bad) cmc lahf push std gs cld lds mov scas pop mov adc repz pop cld adc idivb jge dec decl jmp iret (bad) sbb mov aad incl pushl test loopne jge sub mul inc scas repz push ja ret (bad) outsl std inc mov jge stc stc call lcall (bad) mov out lahf clc ljmp loop (bad) push (bad) (bad) push test hlt sub repz hlt out (bad) xor ja imul xor clc std repnz xchg (bad) std pop std gs lds call cld jge incb sub xchg xlat paddd (bad) insl jg in cld add (bad) xchg mov xlat pop dec jmp jg mov cld aaa cld or (bad) bnd lock cld jno (bad) mov repz pop clc iret jl das call fwait aas in sti pop jle jmp cld aas cmpsb clc stc paddd call jg paddb (bad) std jp les jmp xchg std sti ja int clc pop (bad) xor adc iret jle jg aas clc pop (bad) je aas cld cmp aaa clc and aas std fistpll sbb (bad) push mov dec jle (bad) in (bad) js icebp jmp testb lret jg out sti dec mov in (bad) push (bad) mov stos jg icebp fcomip jmp pop cld adc cld pop mov out std scas call jnp loope pop out pop int xchg std pop mov jg pushl (bad) xlat aas cli idiv inc test pop decb fcomip lret (bad) mov jmp clc or (bad) push stc out dec clc dec (bad) fdivrl (bad) iret clc cmp sbb xchg pop std xchg fnstcw pop (bad) jecxz dec repz scas mov (bad) cld daa decb push (bad) lahf in out lock pushl aas (bad) mov jno in repz out stc lods jle pop jno clc push ljmp jg pop std ja (bad) std jg or cli cmpsl (bad) fidivr (bad) out pushl xchg inc call fcomip pop fdivr int iret pop stc jmp (bad) in fisttp fcomip idiv mov sti adc (bad) stc mov stos pop inc stc iret aas icebp das clc add popa jg popf jmp pop jle cmpl aas jnp cs mov (bad) lret adc std in stc push std es jg outsl xchg (bad) clc mov jg pop lahf jge lahf cli iret jg mov (bad) decl (bad) lds cld rcl jmp cmc xor shrl icebp outsl sti iret pushl pop call loop scas pop aas mov ja in aad jge paddusb xlat call cmpsl stos cld das cmp dec pop push in cld xchg mov in sti (bad) lahf std scas inc pop ds repz jg aas loop (bad) std in icebp pop lcall (bad) cmp cli outsl cld jmp aas mov clc int cli jnp jne scas mov fcmovnu jge mov fiaddl adc std or lahf cld idiv int3 jg icebp outsl cmc cmpsl cld fldt std imul push incl pop outsl cmp xchg sbb pop jg stc aas dec scas jg cld pop cld ret negl pop (bad) aas lods incb (bad) pop cld aaa std popa aas icebp cmp ljmp decl adc pop push (bad) fs (bad) std test jle repnz mov paddd std jg jmp std jg,pn adc lcall jg aas (bad) pop pop lcall mov push fstpl pop std scas (bad) jle fcomip mov pop cmc pop cld jge jle fcomip ja in ljmp aas out pop clc fstpt out jnp fwait std sub aas repnz jg jg ja inc mov cld add mul ja mov xchg jg lahf std rcr xchg dec jg outsl stc daa std xor shl aas std dec jle jg into (bad) cmp mov mov mov stc out repnz push (bad) jmp mov nop hlt fucomip std addr16 jmp jae (bad) cld out dec inc (bad) call lds fisubr repz icebp rorl xchg mov jg scas clc repz stos xchg pop jmp jg cmpsl cld lret (bad) fstpt repz mov jg pop stc sbb xchg push scas cld repnz (bad) cld idivl (bad) aaa (bad) in fnstsw daa push cld loope out repz out negb cld scas xchg (bad) rcrl iret (bad) js lahf mov inc xchg mov leave scas sti mov pop cli in (bad) insl ljmp std scas (bad) dec jle outsl idivl cld pop (bad) jg outsl std popf (bad) loop mov aas cli (bad) (bad) jnp (bad) fstp sti xlat cld ja out out (bad) mov repz paddw outsl mov (bad) mov scas dec jg (bad) jg push aaa cli sarl out clc aaa lods mov fild (bad) jmp (bad) std hlt jg (bad) (bad) clc lahf and dec mov pop pushl cld fildll jg jg out stc in out stc sti (bad) mov lock push mov std jmp jle aas icebp (bad) pop std mov out dec aas lahf std cli jg scas cmc pop jmp mov cmc psubb call mov jle iret std (bad) (bad) push rcrb lret (bad) jg jae fwait pop jg jmp cld into out (bad) aaa jg ja xor rcrl jg fbstp jg jp jecxz sar fistpl pop out call aas cli xor ja pushl sub (bad) out std add pop mov mov icebp xchg jg cld (bad) jg call into push lret jg jmp jecxz sti insl xor stc dec cmp pop inc (bad) cld out sti xlat dec repz (bad) sbb iret pushl dec stc mov cli iret std paddd jnp leave jg jg sub loopne hlt fnstsw loop (bad) mov pop jg in mov clc decl mov clc xchg (bad) cli scas std mov pop std test jecxz stc (bad) cld insl jle jg pop cli out incb (bad) popa mov std mov std mull (bad) mov push jg (bad) lds jnp clc lahf repz stc jg cmc ja (bad) in push hlt mov inc push (bad) das mov loop mov leave (bad) cmpsl aas icebp mov mov jmp int3 stc mov mov push lahf (bad) fcos rorb xchg pop decb into popf aas loop std xor (bad) fucomip int sti xor call in idiv xor hlt paddw out std sbb idiv stos call in scas sti popf (bad) sarl dec mov sti in aas in dec jmp stc pop repz (bad) pop lret pop out stc and mov std aas jle mov inc pop icebp negl mov std cmpl std paddw jmp cli push incl (bad) ficompl stc xchg mov jb pop sbb pop repz push repz jg xchg mov clc jecxz mov jle leave jg pop fdivr aad mov pushl jmp cmp stc sar pop lret call out icebp out jmp shrl jle cmpsl cmp mov (bad) mov bnd lret jle aas cld (bad) jnp pushl in in pop cld hlt out cli arpl (bad) xchg std cmpsl jg scas (bad) scas jmp fdivrp fidivr daa fistp jmp mov ja sbb in sti call das cli or cmc aaa sti jmp lcall dec jmp (bad) outsl cli jae nop aas jecxz (bad) ror out std jp ljmp cli jecxz aad sti (bad) mov std (bad) (bad) mov sahf aas jp push pushl pop std idivl rcrl out clc pop decl ljmp bswap out jmp jmp movsl jg std aas push jg outsl (bad) jmp (bad) std cmp jmp outsl js out (bad) ja mov in (bad) jmp aas cmp or mov jge jmp call dec mov std idiv jbe fldt mov cmpsl jmp pushl cmpsl clc out cli inc jle jg push aas (bad) lock mov sti adc mov jg jg idiv xchg ja mov (bad) (bad) loop fistp incl cmpsl std add (bad) std movsl push push aaa daa jg lahf cli (bad) inc jg (bad) cli lahf push outsl hlt stc xchg aas jecxz ds mov inc (bad) in lahf clc mov fwait jg (bad) (bad) icebp jg stc out pop cmc mov stc fwait ds inc jg outsl cmc xchg (bad) clc fcomip out jg aas push push mov repnz stc or aas xchg clc (bad) (bad) pop (bad) fnstsw out out sub sarl lods (bad) pop cld into out clc dec inc lahf cld mov std pop mov jg fisttp out sti xchg out xchg rcr out cli push jmp jg aaa sti cmp mov lahf cld cltd (bad) (bad) out (bad) xchg pop cld arpl scas sti addr16 jmp aas imul adc cli aas std cmpsl mov (bad) paddd fnop xchg (bad) fstpt (bad) pop cmp fnstsw sarl clc in jle repz jecxz idivb daa jg pop imul dec jle fcomip aaa cli icebp pop negl jge (bad) jle push out repz (bad) push pop in cld pop lahf std fistpll idivl pop mov cld movswl daa (bad) fidivr jmp (bad) mov std jbe repz std (bad) aas jge dec std in jle pop mov jg cld xlat jg iret cli xchg jg out hlt scas insb jmp (bad) into dec cld mov sar out jp lahf cld pop (bad) mov incb in call clc jnp cld pop push jg outsl ds aas ljmp (bad) dec call push xlat mov cmp call jmp aas cld out mov ljmp jg fcomip iret dec push mov incl scas (bad) xor mov out pop (bad) pop (bad) mov mov pop (bad) call (bad) (bad) clc dec push scas repz clc cmp or fistpll idiv dec decl (bad) (bad) das cld outsb lahf int3 inc jecxz cmpsl (bad) cmp ja pop call jg jg aas cld ds fstps jg xor hlt mov mov jmp std pop mov std das (bad) mov cmp sar or rcrb xlat mov aas jnp std lcall jg jg mov (bad) xchg in out pop cld paddb fcomip jmp imul jge jle out dec mov sti div pop cld lahf mov (bad) push inc outsl dec repz dec xor ja bswap (bad) cmp push jmp aas js imul outsl sub scas mov mov jecxz cld (bad) std ja mov outsl jge xchg push cld cmc outsl (bad) stc jg outsl cli leave out sti (bad) ds out xchg (bad) mov aaa inc scas std aaa cld jae xchg mov xchg cld std gs jg pop std ret repnz cli icebp mov jle lret mov das pop (bad) arpl lds mov in pop jge neg sub (bad) repnz outsl (bad) out mov cmp repnz sub ret xchg fcomip xlat clc clc pop push (bad) in pop std sbb lret stos inc mov push xlat mov insl (bad) pushl cli jmp test pop cld not ja lahf fbstp pop mov adc (bad) mov outsl jmp dec xchg pop mov jle in clc das jle fcomip aaa sub mov jg out das jmp (bad) fwait lods (bad) jmp jg std ljmp pop (bad) clc jmp das clc sarl (bad) in in ja sub fs icebp (bad) mov scas clc push (bad) jle cmpsb cld sarl fucomip aaa stc movaps lock std pop (bad) fcomps jg pop cmc aas std adc imul xchg into inc movq jno pop cld outsb mov (bad) adc leave pop jl jnp stc cmpl std (bad) mov scas (bad) std (bad) (bad) aas hlt iret (bad) out call ljmp stc push jmp jmp jmp mov (bad) stc mov aam in cld pop jg lahf std cmpsl call js repnz (bad) (bad) je addr16 test cld mov mov fcomip pop jg inc cld jno mov fist (bad) mov (bad) pop out clc mov cld mov push dec pop jmp inc mov js push jmp jg bnd shrl cld repnz call fdivp in lahf idiv aas cmp or loop jmp ljmp mov (bad) mov jnp sarb jg das cli sbb repz xchg (bad) stc cli fbld (bad) imul daa jg (bad) (bad) mov cli sub jecxz idivl cli arpl out fxch cld (bad) aas fwait (bad) dec iret push (bad) jmp dec jg pop jg pop mul ja std fdivr das dec pop out outsl clc (bad) jle aas inc hlt (bad) fstpt mov lock xchg stc icebp mov lahf (bad) out xchg aas stc pop cld leave les in pop out pop ds out loop pop lahf and fnstsw (bad) repz hlt loopne clc jecxz jecxz cld jmp cmc out repnz std ret push std repz (bad) pop decl mov jmp ja jg (bad) arpl lds aaa cmp mov ficompl jmp sti daa (bad) jp call fistp mov clc lea das std adc loopne imul dec jmp pop cld mov scas jg jmp aas cld stos paddd out add mov xor (bad) jmp xlat xchg cmc stos jmp (bad) aad dec jmp jg je cli lahf (bad) fcompl das in std jmp idivl hlt das mov xlat (bad) xor jmp sbb loope cmc jecxz repnz ljmp aas idivb in pushl cmp jne sbb addr16 dec (bad) incb mov dec (bad) pop jg mov (bad) clc (bad) (bad) cmc out cld lods jg aas jle std jmp xchg (bad) idiv aam jne (bad) rcrl repz ljmp jmp lret pop std icebp mov cld rcr push mov stc mov loop sti fildll sti jg xchg jg fucomip fbld outsl jecxz mov inc jg (bad) cli sti push (bad) repnz ljmp sub sti imul pop adc std ja in addr16 stc call loop (bad) (bad) cli (bad) xlat stos mov stos push jecxz test clc jno (bad) aas in das jmp call ret fisttp jmp lret sub repnz daa sbb lret scas jle das sti sti incb cmc mov mov insb mov pop mov (bad) in scas sti sbb (bad) inc idiv stos fistp stc iret pop inc cli repz aas clc jmp das mov jg jg xchg aas sti in std or pop cld call icebp mov lahf lods push dec xchg jg fcomip xchg std stos xchg outsl repz repnz aaa cld (bad) or lahf loop stc pop jg daa push fcomip or mov jmp aas clc cmpsl (bad) cmpsb pop icebp aad aas std lods jle mov xchg shr (bad) mov mov lds stc fnstcw (bad) jecxz cld sub lds clc push incl fs mov scas cld pop jmp clc mov jg mov cld hlt xchg decl (bad) out pop dec repnz sti jge out ljmp icebp mov daa incl in mov aad imul mov lods (bad) mov jbe scas call ja push jp bound out (bad) lret jg (bad) jmp pop std scas std pop jg push (bad) push jg scas lcall adc mov push (bad) fidivr fnop inc inc jg xlat cli jae jmp out rcrl out mov mov icebp stos jle idivb repz lcall cld xchg pop (bad) sti push xchg decb (bad) sbb jg jg dec out lret icebp scas xchg lahf cld adc jg inc jg das push scas pop idivb (bad) jle cli jge mov in scas std inc aam das mov lahf cld inc jle repnz arpl in aas in (bad) cli dec aas call (bad) hlt scas scas incb clc outsl js xlat lcall stc inc mov mov out ret pop dec cli out (bad) jge iret fucomip call rep fdivrp jbe in (bad) pop mov sti fucomip outsl cli jae xchg xor pop mov loop int lahf std clc das cli outsl jg outsl repz mov mov jmp repz dec xchg jg add (bad) stos aas hlt scas clc pop jle hlt idivl mov ljmp std addr16 leave fs in out sarl jg outsl std or pop cmc (bad) std push aas incb or std iret cld inc lahf cld jle stc mov (bad) ljmp loopne pop cld ret xor mov pop decl mov sti out aad mov jecxz scas lcall sahf (bad) fstpt aas hlt iret incb (bad) jmp dec cld imull dec std aaa jle (bad) cld out incl mov cmp (bad) dec (bad) jg das decb jo (bad) fistp incl stc sti push (bad) in pushl rcrl pop xchg cld (bad) ds (bad) es xor iret scas cli jae mov xchg (bad) cld mov mov jge lahf push cld rep fdivrp pop (bad) ljmp mov cli fdivp xlat sti aas dec jg stos ret outsl jmp fistl icebp (bad) mov pop cld sbb jmp int out testl cld stos das jg mov cmc stos mov decl pop std (bad) jo out adc out outsl push std sbb out iret pop std jle call daa mov std pop mov iret lahf or std repz std shll std out mov sar mov cmpl call mov hlt sti or out repz fildl std (bad) sbb std (bad) adc out adc sti imul add std das mov pop cmpb aaa and std and adc (bad) sbb das mov pop cmpb ds iret add (bad) jmp std jb pop cld stos lahf push std jle iret and std sub cld sti scas jp cli std fcos sbb out (bad) std (bad) dec mov or imull std std jge adc mov add mov jg shr pop int3 jg (bad) (bad) divb fistpl (bad) fidivr (bad) movsl stos pop xchg std insl sti jmp lods jg aaa jg sbb sbbl aas cmc pop jmp pop jne sbb mov out divl jg mov dec dec cld lcall clc pop jg mov lahf jg (bad) out dec std pmaxub pop jg outsl idivb scas repz (bad) adc mov (bad) in push std mov call pop jecxz pand stc outsl repz jle call iret std (bad) xlat fcomip jmp fisubrl cli lahf std cmpsb jg jg cld inc mov iret pop jg aaa cltd std sbb call pushl ja movsl (bad) call cmp jne in (bad) rcl jg pop std lahf std arpl in jle mov (bad) mov jmp in stc push sti jg (bad) aas stc xor leave out clc ljmp (bad) cld dec adc incb std fucomip ficomp std pop adc aas std in dec jge std (bad) jns div fisttp mul scas ljmp adc (bad) (bad) cli stos (bad) fs (bad) mov (bad) jns fisttpll cld inc jg mov jg das (bad) fucomi std xlat jg pop lock (bad) ss fisttp repz fstpt cwtl ds sarl mov mov dec std cli mov jmp aas sti lahf std jnp (bad) dec (bad) adc mov pop aas clc cltd mov mov mov jg xchg sbb scas jl pop cld jmp push jmp jmp std cmpsl incl (bad) jp pop std (bad) (bad) (bad) das aas sti jae cmpl aaa ds xchg jle pop lock lods inc jg loope pop inc jg pop cld jg in call lds (bad) in pop hlt jnp add xchg inc jg fdivrp icebp (bad) pushf std and icebp pop sti aas (bad) outsb jmp mov outsl push jg jg hlt mov jmp mov popf jg loop (bad) pop jg jmp (bad) jmp rcrl sarl scas jle (bad) std and std sub je lahf call in dec stc xchg iret jle jmp (bad) std sub fnstcw clc pop ds imul jmp cli cld aaa std sub mov cli (bad) cli in jmp divb std fnstcw pop jge stos (bad) rcr cmc pop std mov sti (bad) stc das stc std (bad) mov mov jmp clc fstpt aas loopne lods decb mov jg xchg (bad) jecxz (bad) pop jle jg aas sti repnz psubw xlat fcomip scas or jle (bad) push call jg outsl cmc sub xchg pop (bad) aas mov outsl std (bad) jg call pop jg pop pop std or movsl push out std addr16 outsl repnz movsb mov sti adc xchg mov pop (bad) negb out jle das jmp jmp jg cmp mov mov stos fucomip xlat (bad) jnp mov cmc mov push cld idiv std mov inc mov repz mov jle (bad) in jnp (bad) stc cmp fistpll (bad) (bad) addr16 jg jl decb out jl scas pop aaa jnp lret ret aas loop std or mov cld jle lcall mov (bad) iret (bad) sub mov mov jg out js loop jg clc jmp lcall int3 jg outsl pushl pop int3 decl xchg jg aaa jp sar (bad) sbb or lods pop std mov (bad) sub rcrb pop std xor jg mov addr16 sti jg cmp xor std das (bad) gs stc out std aaa jecxz clc int std outsl in (bad) movq ja sti ret push (bad) out mov std jmp aas sti xchg mov dec iret (bad) fdivrs mov (bad) call mov bnd sarl incb (bad) jg (bad) mov cmc aas inc jmp push mov out cmc iret cld inc leave lahf idivl std cmp xchg jmp pop idivb mov stc mov pop call (bad) scas std in (bad) fidivr scas sti cmpsl call mov std mov incl cld shl jg loopne cli jecxz jg in (bad) mov in (bad) ljmp (bad) enter stc xchg inc (bad) ljmp pop jle outsl std imulb sti fwait ljmp aad cmc std (bad) inc fcomip stos mov incl arpl aad (bad) cmp mov ret pop std xor fs pushl std (bad) ljmp jge out jg outsl stc pop jg pop div cli push mov scas incb ljmp jmp pop std (bad) (bad) pop ja scas pop icebp pop in (bad) stos jg mov scas ljmp jg das imul hlt aas ljmp in dec jle jg (bad) (bad) icebp jg cmp pop push xchg (bad) std leave pop cld xchg cld pop jmp mov stos fbstp std (bad) jg jmp ja fsubrp lock iret std in (bad) out out mov ds test jmp mov call mov test (bad) xor cld sub into aas lock negl pop std ss scas cld inc aas cli (bad) jmp ret fucomip mov push xchg in incb mov mov ret jle fildll out (bad) (bad) stos fucomip aas clc jae cld inc pop stc das (bad) jecxz loope sti push (bad) adc jg out scas clc lods jmp push psubd decb (bad) in pop cld daa jg das sti add in pop cmp stos mov std negb jp xchg fdivrp ficomp jmp cltd mov inc inc lahf cmp ja idiv stc iret (bad) repz imul push pop aas aas incb jmp (bad) jge fcomp jecxz decb clc fwait jmp out out jge aaa (bad) scas dec (bad) mov call mov in std jne lret mov dec lahf cli sti pop cld pop (bad) (bad) cld xlat decb mov (bad) xchg aas (bad) ja jg das (bad) mov (bad) mov xor sub imul outsl (bad) lret jg aas icebp clc aaa jl lock cld jnp stos aas out stc lods mov mov pop mov mov pop incb out clc (bad) jle push pushl mov (bad) out xor cmc (bad) pop jg mov (bad) stc das jmp jle (bad) dec cmpsl cld iret pop cmc pop cld test lahf repz jmp jg pop aas divb out cmc (bad) mov (bad) jecxz mov jge jmp idivl (bad) clc mov jmp std sbb (bad) jne cmc daa (bad) mov jg outsl sti das (bad) xor mov in (bad) mov in das cmp out ljmp lds (bad) jnp lret std in (bad) mov pop mov cld iret (bad) scas adc std popf mov callw lahf (bad) jmp call jg pop (bad) pop push (bad) call mov (bad) xchg hlt outsl stc or movd xchg jg (bad) fistpll push push std scas mov das (bad) jne cltd jg aaa std cmpl clc mov mov jg (bad) and out mov inc xchg jg push scas dec aas cli sub outsb jg fnop fstpt mov pop cli jnp push jg aas cli or enter outsl ljmp jnp mov outsl jle jg clc iret cli lods sahf cld or cltd (bad) dec jg (bad) fisttpl mov xchg pop mov (bad) (bad) jmp lock cld es xchg aas cli lret jle mov pop out std or loop outsl jle dec jg repnz outsl lock pop repz outsl bnd sti daa xchg (bad) fidivrl hlt pop cld xchg jg pop stc pop cld dec mov std mov fdivrl idiv dec jg scas icebp addr16 mov (bad) paddw (bad) jmp stc push cmp dec xchg mov addr16 call (bad) adc int3 scas mov aas std inc (bad) lahf jg in decl fcomip psubw mov fucomip ja xchg push push xchg sar cmc repnz (bad) dec (bad) jecxz loop fdivrp iret out hlt mov (bad) (bad) das cli dec jle jg repz std pop mov paddd xchg iret incl cmc idiv in cld (bad) pop repnz mov jecxz sti sti mov aas clc scas cld adc cmc fistp decl clc xor jmp mov cmc lcall mov rorl rcrl idiv (bad) jg clc call cli (bad) clc idiv movsb aad jns not lahf neg inc cli jmp mov hlt iret cld jno bswap fistp lock std jecxz (bad) in jg loope movsb jg call or imul jg or in je das cli and ret fcomps jmp idivl mov lds clc lods jle mov push cld push inc pop mov mov out mov (bad) jg imul std aas cld cltd xchg aas clc jecxz nop pop cld arpl inc mov (bad) cmc jmp jg aaa (bad) cs daa pop cmp iret xchg pop out clc icebp mov lcall jg loope jg repnz mov out decl scas pop sahf std aaa mov repnz jb (bad) std ds jg xchg call aad mov xchg jecxz (bad) stos lahf clc jnp jle mov mov hlt ja (bad) jle mov mov stc sti (bad) out aad clc pop pushl mov push jmp pop jmp cmc jp cmpl mov std out std or jg pop cld (bad) jg aas decl jg or pop cld jp ljmp jg rcr scas inc mov scas jg into scas std scas cld into aas cmc (bad) jmp (bad) scas (bad) (bad) dec mov mov xlat jbe mov icebp sti decl dec pushl jle mov icebp out ds imul aas imul (bad) xor mov das mov addl pop repz cmp scas mov pop cmc mov std (bad) (bad) jge idiv les loop std jnp pop cld fnstsw out sti iret aas sti mov stc mov ljmp ret (bad) pop jg stc pop jle pop iret jg lahf cld xchg mov dec (bad) ljmp (bad) in (bad) in repnz lock hlt pop clc mov popf pop icebp aas jle,pn aas (bad) ja sbb sar jmp pop jg fbstp stc pop lock repnz (bad) hlt (bad) (bad) stos decb stc idivb dec jg in idiv push dec (bad) mov cmp inc cmc xor scas (bad) iret std jmp jmp decl clc jnp iret aas in out (bad) imulb jg loope cmc push cld lret mov (bad) push (bad) call out cli idiv repnz outsl cmc idiv jle aas stc daa cld xor mov icebp xchg lahf jmp in popf (bad) out aas (bad) mov cld mov pop mov jo (bad) adc decb lahf cld mov idivb mov xlat jg fucomip lahf jmp cmp aad int3 jg fwait (bad) icebp pop push scas cmc das cld xchg xchg mov scas cli dec mov into mov cltd jg (bad) (bad) mov (bad) ljmp xor jg jecxz (bad) pop sar psubw mov repz (bad) mov mov cli lahf mov out mov (bad) push std int rcrl in pop mov lahf pop (bad) popa inc (bad) repz jmp std xchg (bad) (bad) jg jg fwait decl mov inc fucomip vmwrite dec (bad) das jg push das cld test out stc (bad) adc (bad) fnstsw loop out cld mov mov imul repnz jle lahf sti mov lret (bad) jg cmc ljmp std int3 lahf (bad) in (bad) cmp pop inc jg jno paddd (bad) xchg out sti in pop and repz std push jg mov adc sar jg pop stc insl bnd out call mov hlt dec cmpsb clc lcall cli lea (bad) xchg aaa dec iret cld sti jg jg cmp (bad) imull mov dec (bad) jmp sarl (bad) mov ja pushl std mov cmc mov aad hlt pop sti dec incl jbe xchg jge addr16 idivl cld jb imul mov pop repnz mov aas stc jg cmp jg (bad) std mov jbe (bad) (bad) scas pop std leave mov pushl aad stc aad cld out outsb pop decb cmp (bad) mov cmp or jbe stos dec (bad) loop pop cmp aaa dec jg aaa and lahf jle std (bad) call leave xchg mov lcall jecxz lock mov and xchg fidivr jg hlt ja (bad) hlt ret aas out (bad) pop incl pop inc jmp jg mov mov mov cli mov std loop sti xor std idivb bnd ljmp std cltd jnp rorb mov clc pushl fstpt cli jecxz out fcomip out std pop idiv (bad) iret incl jnp jg (bad) mov lahf aaa jg call inc mov dec (bad) loop incb repnz jns xlat out cli stos (bad) rcrb pop cld mov scas jle (bad) fcomps mov cli mov (bad) ljmp (bad) cld aas adc jg fsubr jg dec std int (bad) fsubl dec pop sti aad sti mov lahf (bad) and out mov mov mov icebp mov cld mov loop (bad) lods fsubrp (bad) xchg xchg rcrb aas jge stc aas negl jmp pop sti (bad) mov outsl stc das aas sti aas (bad) pop lret (bad) mov call paddb mov cli in icebp push cld jnp cld sarl div (bad) pop xchg jg jge enter leave (bad) mov jg (bad) jp repz cmc mov lahf std jae out dec jmp (bad) das sahf std jg,pt lods lahf decl jg (bad) dec jg mov stc repz lock mov decl decl cld ja inc jg dec cld adc repz xor dec es lcall mov (bad) (bad) arpl scas aas in iret jl daa pop inc mov mov in in stc arpl (bad) lret fnop out cli arpl pop out pop cmp out jg das lret inc aas stc adc lahf clc jg jle sti mov (bad) scas jg pop pop decl repnz jle jg decl call outsl xor cmp aas loopne jg sbb cmc outsl clc (bad) sarl ja das pop (bad) pop jg lds stc out ljmp enter jnp fucomip mov fstpt (bad) stc jmp imul sarl (bad) decl cli lcall fcos jecxz loopne xchg in iret das stc cmp out sti dec ljmp pop in jle mov negl sti pop inc das incl (bad) fnstsw cld idiv stos dec inc jg scas clc aaa jmp ret fucomip (bad) std push dec jg das sti (bad) fdivr jmp jg dec lcall dec out cld sar ds aas sti and std mov cmc outsl fdivrp das jg popf lahf cld mov jg dec movsl cld stc movd cld lret inc aas cli pop std popf jecxz in mov pop inc ret (bad) jmp call mov cld out jl das std shll jg jg imul idiv ja sti stos dec aas clc lahf std xchg call jg call (bad) cmp mov sti pop sti scas stc mov loop cli mov fdivr lock mov mov das (bad) dec repz iret scas dec fisttp stc lahf pop (bad) out cld (bad) cli mov outsl lock (bad) idivl aas hlt iret mov fdivrl imul stc cmp fnstcw mov outsl std mov lock out sti std jle outsl mov mov cmpsb push pop (bad) pop incl ret cld jne repz repz decb clc (bad) (bad) sarb jmp stc pop clc cmpl stc das jg jg daa std sbb out stc jg xchg jg mov arpl sub pop pop mov lock int3 leave outsl repz outsl (bad) fucomp repnz incb xchg scas stc jnp stos aas ja (bad) push jg (bad) pop cli daa std (bad) aas stc pop pushl aas jmp stc out repz cld into aas (bad) dec (bad) scas jg (bad) cld jbe jmp mov mov jg mov dec decl (bad) nop mov insl call mov scas stc das cmp imul aas divb clc das jg out call sbb inc inc in jg (bad) stc mov ja jns sbb or in xlat pushl jmp scas std pop jmp repnz (bad) jnp in inc mov xchg (bad) mov scas (bad) sub (bad) cld xlat jg lahf sti sbb or mov lods js sti cmp daa call aas lock push in call (bad) jmp std adc div cld pop incl mov jg (bad) clc xlat pop std iret inc scas repz cmc mov xor dec mov mov cmpsb outsl (bad) sar ljmp pusha outsl hlt sbb push jmp push inc jg dec cld lods jg in iret js aaa (bad) mov clc outsl inc fcomip das cmpsl cld fstpt stc (bad) incl xchg push pop mov loop stos jle das jmp iret ds and mov (bad) icebp pop bnd jle jg xlat (bad) call out xchg mov std inc jg jg out mov mov in das jge inc jmp jne sti cld mov mov outsl outsl mov pop icebp inc (bad) clc pop mov sahf cld sarl pushl jecxz lahf sahf jmp push clc out daa (bad) stc scas incl repnz push aaa call mov jle aas cli pop cld lea lahf mul (bad) (bad) jmp or (bad) hlt leave (bad) (bad) outsl std stos mov sar iret fcomip cmp jp std stos call (bad) in scas std xor call adc out jnp std out (bad) sbb movd (bad) cld jmp dec aas std jnp subl inc (bad) aaa (bad) mov repnz cld (bad) fsubrs in stos jg xchg push jp (bad) clc push pushl std int3 mov ljmp aas mul decb scas (bad) in jg in repz (bad) fnstsw out aas mov ja dec incl (bad) jg in incl imull clc lods (bad) mov inc decl jecxz ror out clc paddb push (bad) ljmp incl jmp lds push icebp lahf fstpt sti jmp cli xlat jg mov pop (bad) out push fist inc (bad) int fistpll push jg pop clc stos jg addr16 aas cmc jecxz int cli aaa std pop mov sar lods (bad) out call lea cli xor (bad) jge (bad) out pop mov sar rcrl jg (bad) out (bad) es mov test mov (bad) out mov in push ja cmp in jg pop stc sbb jg push std mov leave (bad) clc (bad) mov addr16 lock loop jnp std xlat push push lret jbe lea vmwrite xchg int3 outsl inc repnz mov fwait aas loopne cld addr16 (bad) inc jg pop (bad) cmp fcomip arpl ljmp scas pop (bad) jle (bad) movaps (bad) sub cli in in outsl div std jle fucomp hlt mov cld arpl mov fcomip mov addr16 mov outsl xchg jg jg sbb aas out dec std dec (bad) mov sbb divl shrl jbe mov xor fistpll aaa mov sub jmp mov int (bad) xlat inc jg mov (bad) mov jg pop (bad) sbb lea outsl cli pop sub mov mov std jae clc notl (bad) lret inc (bad) clc scas sti sbb (bad) mov mov cmpsb cld in cmc pop std es scas jge out fstp stc xor repnz jge cli outsl cld pop std in jg out clc repz jg cld not (bad) addr16 (bad) cli mov jge fbld movq pop fs pop xor fcomip hlt jg dec (bad) mov (bad) aaa decb insl lret pop std lods dec jg xchg sar std (bad) mov and (bad) (bad) pop mov push push mov pop incl addr16 jle fsubrs sti (bad) insl push aas icebp fwait (bad) ljmp (bad) cli out stc sbb mov jle xchg jmp (bad) (bad) sti in dec pop out mov outsl sub sti fwait (bad) jge fistpl out std xchg out (bad) cmp (bad) xchg (bad) lcall jmp aas std sub pop jmp jg (bad) jnp loop fbstp hlt ljmp push das std pop (bad) (bad) fcmovnu out idiv mov xchg lcall std mov lods mov mov jg aaa cli add mov fidivrl pop std lahf jg mov sub lret out fdivr fwait out std iret dec cmpsl (bad) (bad) xchg inc mov sahf hlt (bad) jg daa std outsb jg (bad) out repnz iret (bad) cmp ljmp int out cmp jle pop daa scas jg (bad) xchg aas (bad) out incl out stc xchg incl mov fwait pushl mov std dec pop call jg (bad) adc out hlt dec shr pandn mov (bad) mov movsl (bad) std mov loop pushl mov jg mov cld repz std pop cld (bad) lahf clc xchg jle aas repz push (bad) out mov mov lahf jmp out int stc mov decl (bad) jnp hlt mov sti outsl cld hlt aas icebp cld iret stc cmc inc pop pushl lods aas mov jg push das cmp and jg hlt sub mov stc sbb jg push std add aad dec stc (bad) jg out outsl js cld (bad) jg out repnz decl aas lcall cs (bad) fistpll das jmp mov stc sti (bad) out aad (bad) pop aas cld popf (bad) stos (bad) (bad) lahf cli popf jg mov jmp dec cld inc mov int lock cmpl push ljmp insl xlat jg aas std sbb inc (bad) call clc pop jmp pop inc das das jg scas call (bad) fdiv fisttp jmp fnstcw mov push stc pop notb std xor in pop fdivr sub jg (bad) (bad) fcmovu (bad) cmc loope stc incb daa movsb jg mov inc cli jmp stc pop jle jg repnz jg sti mov (bad) xor dec cli (bad) dec std fstps inc icebp lret lahf cld cmpsl (bad) cmp aas cld (bad) ds xchg jmp aas cmc lahf jge jmp sbb push (bad) stc xchg fild fsubr jmp dec std int jge divl aas rep (bad) mov push (bad) cltd jg loope cli outsl xchg std pushl jle mov call cli rcr stc cmpsl cld jp std mov std lahf inc (bad) ljmp cld repz scas (bad) out jg aas std xchg (bad) lret mov out cld or mov sarl adc (bad) incb aaa decl lret ror incb std stc mov idivb (bad) xchg fist (bad) das (bad) stc pop inc int icebp (bad) std scas jg lahf mull (bad) lret xchg aas loop std pop idiv out pop mov call jp (bad) fisubr clc push lock cmp clc das decb aas std out push (bad) dec aad cld sti push (bad) std aad in fcomip ljmp in pop decl sub std cmp cli sbb lahf hlt out ss jg jnp inc aas std dec cld xchg jg push insb std jmp in pop stc das out incl decl mov jmp cli int cld ja inc aas push aaa cld push sub xchg inc pushl in lahf std push jg hlt aas sti xchg jle ja ficomp clc sar mov das jle pop std xchg js lahf std mov fstpl sti pop push cld mov (bad) aad call std jge loope hlt daa pop (bad) push (bad) fcomp icebp out sarl out loop cld pop repz loop sti xor aam icebp iret mov fcomi (bad) sti aaa std movd imulb jg aas cli (bad) mov (bad) loop mov jg aas jo lahf (bad) push mov cld out jmp sti xlat decl std jg jg stc imul dec pushl pop (bad) ficoml out (bad) (bad) nop and cmc or lock decb lret addr16 sti mov jle jg xlat cld ret (bad) stc mov jmp (bad) int3 mov outsl cli pop sarl (bad) bnd xor (bad) inc mov jecxz stos out push mov (bad) xchg ja jle aas stc jg repnz stc (bad) cmc pop js das (bad) fld mov jnp popf popf fistpll clc pop sub (bad) call mov push lahf cli stc aas inc jmp (bad) jmp repnz dec js ja loope fstpt mov jle pop cmc dec fstpt push fstp out mov push mov jl mov mov out jg (bad) mov loope cmc hlt out sti outsl xchg fnop aaa decl lds pop pushl mov xchg cli jg repz imul jl pop ret pop dec cld imul std adc cld mov jmp sub pop (bad) lcall jg in fistpll pop cld jne es sti das sar mov imul into (bad) sti mov dec jle pop mov jnp and (bad) gs scas mov mov (bad) clc iret jl lahf sti dec (bad) test neg (bad) aaa jg fcomip cli (bad) stc das (bad) loopne idivb hlt out (bad) mov cld leave aas sti mov sti (bad) adc mov std cmc (bad) call out cld (bad) pop sar std xchg jg outsl cld (bad) clc imull in jmp (bad) (bad) mov sti psubw loope pop cld in pusha icebp std mov stc xchg jg xchg (bad) mov test (bad) jno pop dec imul in push xchg lods pop ljmp mov inc mov jmp jg lahf decb xchg fcomip jg das jle int lock fbstp lahf jp push incl ljmp std fdivrp rcr jnp mov mov out (bad) cli dec iret jg jmp incb std mov scas inc aas std imul jmp iret cld sbb cmc daa pop std sbb lds out sbb (bad) jg mov std ret mov das cld push mov das sar stc jg inc cld addr16 out stc mov icebp mov cld gs stc fwait cld addr16 cld or out lahf std imul hlt into lahf icebp clc scas sbb push jg sarl sti aaa cld mov (bad) sti ja fnstcw jg pop mov bnd aas std mov repnz dec sti aaa jg jmp psubq lods fucomip pop clc or (bad) lods out (bad) test mov jg lahf cld pop nop std sti xchg ret jg std mov call call (bad) scas incb jg std out (bad) push lods pop jle scas cmp adc fnstcw icebp dec arpl decb clc jmp clc clc incb jg mov ret (bad) mov clc pop dec imul (bad) sarb int icebp pop cld imul mov lahf fisub out incl mov mov decl xchg jg outsl not aas cmc (bad) fnstsw in repz cld iret jnp repnz std mov call dec jmp outsl hlt fisttp (bad) cmp inc fwait outsl (bad) mov mov (bad) (bad) (bad) aad pop clc jmp test sbb out icebp fwait ljmp sti in jg jg dec (bad) cmpsl decb hlt mov (bad) fucomip out mov (bad) push cld dec call mul in std jae fcomps sti pop (bad) (bad) mov sar incl rcrl cld iret (bad) repnz ja jge push xchg cld std pop mov pop (bad) jae (bad) out out adc (bad) lea sti loop (bad) arpl (bad) clc xlat sti lea inc fistpll scas std in xchg (bad) clc push std and (bad) sti cld mov out sti dec pushl aas sti idiv scas fnstsw inc cld aaa sti mov ljmp (bad) addr16 insl (bad) jge stc mov dec pop repnz jno loop hlt (bad) sbb push jg jg lret callw jmp test addr16 (bad) std popf jg outsl incl decb das ja decb mov stos pop lods aas (bad) scas daa jg (bad) cmp popa jg fcomip jmp (bad) dec aas dec (bad) mov (bad) xlat inc fcomip out popa jg pop ljmp jle pop decl (bad) pop sti out fistpll sti cld mov out mov cmc paddd jg clc mov cld xchg mov std cmp (bad) repz ja iret jle mov pop call lahf cld cmp mov fdivp rcr (bad) sti dec (bad) std incl shrl std lds xchg (bad) mov mov xchg decl aaa cld or clc out hlt lret call aas stc das stc loop sti aaa sub iret cld xor lock call mov scas jg scas std adc cld fcos ljmp sti std xchg mov sti (bad) inc dec (bad) std fwait std cltd jg pop inc mulb ljmp (bad) stos mov (bad) stos (bad) cmc mov (bad) jge (bad) pop ds jge stc das clc lods jbe lret stc mov lcall in icebp ljmp mov mov out clc fist call dec jle (bad) dec dec adc std scas (bad) lcall std jecxz shr clc lret incl jmp pop cmpsl cmc xchg jmp xchg jg vpxor (bad) (bad) mov push jg (bad) cli fwait (bad) out dec cld (bad) pushl mov scas push (bad) jmp sahf (bad) pop pop aas inc mov push repnz stc jnp test out lds sti xchg std xchg (bad) (bad) sti sub mov pushl (bad) (bad) out idiv mov (bad) jmp push (bad) jg pop (bad) rcrl repz cld pop (bad) mov insb cli xor ret scas cli in std fisubl inc aas cld mov inc das out cld inc mov mov pop jg das sti sbb pop sti lods jle mov (bad) mov lock cmp icebp dec ljmp lds scas std cltd mov pop jg iret std int3 jg xchg test cld sub mov jecxz cld in idiv aaa ljmp idiv icebp lret jg lahf mov jg fistp icebp lret lahf icebp mov idiv mov clc in fistp mov out stc mov cld pop dec sarl jle xlat cld imul dec jmp aaa sti mov mov stc fcomip das jmp (bad) das sti xor stc std orl mov xchg movzwl mov jle (bad) stc push ljmp xor pop decl inc out loop inc (bad) iret mov ud1 sti ja std dec scas jmp sub mov jg in jg jne xchg jg lahf stc inc call mov imull lret (bad) iret sti in incb jg pop cli (bad) dec mov xchg aas loopne cli sbbl repz cmc mov (bad) pop jmp stc in (bad) mov (bad) xchg aas js idiv sub (bad) fcomp stc mov mov out cmp (bad) jmp into mov mov jmp std mov scas stc jecxz hlt pop inc icebp jmp cmp clc fwait (bad) jle lahf pop cld jae clc aas mov repz cld jne vmaxps icebp lret fbstp cmp call (bad) out decl xchg decl jmp (bad) mov stc push (bad) in lods cld in in std inc mov push cld std xor idiv (bad) addr16 lahf push dec mov ljmp ljmp std (bad) cmp loope cli jg fwait (bad) xor dec bswap (bad) mov xchg (bad) (bad) mov jle (bad) out outsl sti add in lahf ja pop stc ja (bad) mov mov mov pop jae (bad) std imul outsl cmc jg out std cmp cmp sbb lahf std jae jmp imul xchg incl pushl in lock dec sarl pop mov shrl lahf (bad) xor aas imull nop fcomip int pushl in ljmp sbb mov cmp mov aam jge pop ds ret mov (bad) aas hlt (bad) push pop std add std xchg lret mov std adc jmp sti pop (bad) out (bad) cmpsb jg dec lcall lahf (bad) bnd repnz sti lahf (bad) rcr ljmp sti mov aas in cmp cmp mov mov cld push jmp mov aad std iret fdivr or cld rcr repnz push mov dec loop stc gs scas cmc pop jmp (bad) adc ficomp imul incl jg pop (bad) (bad) lods mov (bad) iret cld sub jmp (bad) jnp sbb xor adc (bad) stc aas icebp idiv jbe (bad) hlt (bad) jns (bad) mov fisttp fdivrs cld dec mov into (bad) mov aas cmc lahf cli aad mov mov xchg fnstcw stc rcr repnz (bad) push out (bad) push jle aas loope (bad) mov cli outsl std adc aas std psubb incl bnd pop dec hlt mov jmp (bad) xchg jg (bad) std pop cmpsl js aas clc mov mov outsb jbe xchg cld and inc aas pop (bad) mov idiv icebp scas repz mov out cmp mov iret inc (bad) in pop repnz fistpll std call jg scas cli gs cld xchg inc mov pop jg out jg jg jg std xchg push inc mov cmovle int3 aas cld push jle xlat cmp fisubr mov pop clc cmp push cld fidivrl mov cld or out lret in fucomip dec sti pop jg aas out mov adc in mov out push cld add pop js aaa jg pop cld or (bad) cmp sti popf aaa pop dec pop jno aaa dec jg mov (bad) cmp arpl loope loop cld lods jle outsl negl xlat inc pop stc out daa (bad) std jg repnz out push fnstsw (bad) push (bad) jecxz cli clc idiv mov out stc add pop mov pop std sti cld das ja repnz pop jecxz stc pop (bad) out jmp cmp into pop nop pushl (bad) outsb (bad) lcall fildll (bad) mov mov leave lahf std scas (bad) push lcall aaa (bad) cmp out (bad) cld arpl jg neg cli call clc (bad) std jnp std fnstcw icebp (bad) cld scas daa aas dec stc lret aas jmp (bad) in mov into jg aas cld cmp negb call clc and call cld int rcrl aas negb push jle leave outsl cld jg push mov pop pop jg xchg pop lahf cmp pop (bad) jl push std (bad) icebp lahf hlt out cld scas (bad) enter mov ja sti incb (bad) cld sub out sub out jg aad repnz lret outsl cld out enter out out cmc push jmp cld mov lret (bad) dec push (bad) out (bad) sub out cld xor stos (bad) push cli lahf dec (bad) in cmc out divl pushl (bad) mov cmc xlat cld aad hlt lret mov (bad) idivb jle mov jmp (bad) mov mov std aas divl repnz std mov xchg pushl (bad) (bad) cltd jg aas cli push (bad) mov mov aas decb (bad) xchg jg jo xchg cld push ljmp xchg jmp jg mov in jns cmpsl cld das jg lahf cli stos (bad) in cmc mov fistpll mov xchg aas cli out pushl mov outsl sti mov movsb aas repz std inc mov loope mov (bad) jg iret sub fnstsw cld ja add (bad) (bad) out jg lahf std sbb push xchg aas clc scas jle fistpl inc (bad) in out sti cmp aas (bad) in jg pop sti xchg inc rep mov aas cli in cli sub std pop (bad) popf mov (bad) cld pushl stos (bad) stc iret cld ds in lahf sti stos jle jg jns ffreep (bad) cld or das std paddd xlat call mov push jg cli push (bad) cmc aaa add (bad) imul std fsts pop ja std xor mov stc arpl push mov inc jg aas clc addr16 mov out repz cld cmp sti cmp fwait jg mov push aas cli idiv insl xchg xchg loopne cld sbb push jle iret (bad) cmp (bad) scas fdivr ficomp idiv imul pop cld fsubrs jg inc push lahf sti pop lahf sub outsl lcall idiv das lcall stc (bad) (bad) and push (bad) fstpl decl push inc jp pop movsb idivl out jle sti lcall jg idiv or fcomps daa pushl jg mov lds cld imul std pop cld cmp test cli mov cmp fcomip (bad) fstpt (bad) call cld mov mov decl mov cld stos fnop paddb std jmp inc jmp iret sub outsl dec lcall inc out pop inc dec popf mov (bad) in mov (bad) jg mov jns lret push decl push outsl std fist jg mov ja aad iret cld aam std jecxz lahf (bad) jge (bad) jg pop aas push cld jno int3 (bad) aas (bad) jge dec jno cld imul cli ja jnp jmp scas (bad) (bad) into popf (bad) outsl cld outsl (bad) in mov shl loope (bad) jnp push push mov (bad) dec cld test mov std lcall aam mov jmp std (bad) rcrl out stc cmpsl mov jecxz mov mov push jg in icebp out idivb cld xlat jg das call lahf std imul (bad) into inc aaa (bad) push fistp fucomi push out repz (bad) arpl clc mov decb arpl out ljmp std imul scas repz sar cld mov (bad) fnstcw (bad) fwait jg jno mov outsl popf cmp and pop (bad) fcos repz in fcomip mov mov das incl loop lahf (bad) jge cld pop cli rorl repz cld inc jg icebp push scas (bad) lcall (bad) jg lahf mov jg into pop cli aaa std aaa push (bad) mov jmp mov jg (bad) cli scas lcall incl into jle jmp cld stos jg cli push jg fistpll cmpsl jg xlat (bad) call cld push lcall sarb cmpsl clc cmp aaa jg mov stos dec cmc mov ja out cmc mov repnz outsl cltd cmp jge cld ja scas (bad) out pop imulb inc push popf std loop (bad) push push in (bad) ljmp (bad) pop stc rorl repz out das stc jae mov sti jg xlat cli jnp jmp pop (bad) mov out cld pop mov test scas cmpsb icebp (bad) ds std push push pop stc mov idiv lock addr16 pop jge push std mov jg jge lcall inc (bad) std fistpll pop repz ljmp pushl mov mov pop (bad) jmp int3 cmc aas cli lahf (bad) cmp loope std mov out cmpl loop call (bad) sti aaa jg push jg (bad) lods lahf (bad) jge cld cmp clc mov repnz stc arpl out pop repnz cmp lahf (bad) sarl outsl jg ja jnp jmp scas jg (bad) std fistpll dec mov (bad) incb xchg dec repnz jl cmp xlat push jg lods aas sti mov jae popf std cmc (bad) into scas mov std call jg cmpsb idiv imul pushl clc stos lcall sti (bad) (bad) call push (bad) fsub out lock call (bad) in mov in out jge imulb jg out cld stos aas lock call pop std jmp repnz (bad) (bad) mov int3 fistpll fdivrp fucomp std pop dec cld jmp mov ljmp mov mov pop sar pushl mov mov (bad) pop dec out jg repnz stc (bad) out jg leave iret out dec out dec jg lahf popa stc std daa mov lahf std out jg lahf dec repnz fidivr std xorl aad js ja stos dec ja fisubrl (bad) call out icebp ja push loopne mov (bad) push jp stc iret mov decl pop (bad) mov pushf pop jle idiv das decb cld mov cld (bad) jge out decl cmc pop sti popf mov scas jmp int imul mov cs (bad) jmp in out sti cmpsl jle pop lock cld mov jg jg das cli inc (bad) stos mov call std mov aaa mov mov jnp rcrl jno fstps lods jg (bad) dec jg lahf dec lahf mov ja in jp sarl (bad) repnz cld imul adc idivl aas sti das clc fwait pop std out daa aas icebp lods aas out mov cmp lahf aas jecxz aas cld mov aas stc addr16 out mov mov (bad) cmp pop hlt mov scas (bad) pop ds movd pop cld pop xchg sahf leave call pop mov iret mov push adc jg lahf stc out aas sti (bad) xchg mov lahf (bad) push aad repz decl decl call mov cli jnp mov hlt fcomip aas cld cmc mov std aad jg mov (bad) out cli dec sti iret pop cld into das sahf lcall jle jmp jmp cmpsb scas mov into jg aas psubd pop cli dec jle in fcos hlt arpl (bad) std xchg xchg call out stc xchg pop mov arpl (bad) mov decl lea jg out jp cld jecxz into aas out mov cli leave out cld in lahf cld movd push dec jle fcomip (bad) (bad) fimul addr16 xchg (bad) sti jg jg (bad) (bad) aam ljmp jg mov (bad) ds aaa ljmp dec jg (bad) pop incl mov neg psubd jp fildll xchg fildll pop daa jmp out std (bad) sub (bad) out (bad) mov (bad) fildll jg jg (bad) add out divb cltd (bad) repz icebp xlat mov dec out lcall xchg push pop std insb mulb scas js addr16 ja fildll mov out incb loope push (bad) gs insl (bad) jp popf aas jmp pushl aas std sub cmc lahf (bad) jnp daa (bad) decl cmp lods paddd mov jg outsl sti (bad) imul daa jg lahf clc out mov lahf imulb (bad) (bad) lods mov or cld out fcomip xchg mov jge std dec mov pop (bad) fidivrl sti mov inc test in pop lock out (bad) call dec mov jg stc xchg mov idivb push scas std pop mov lahf clc ljmp fnstcw pop pop std mul aas loopne aas std pop popf insl std jae repz out jle dec jg das (bad) mov jmp jmp repnz sti cmpsl jle mov fistp mov cmc jg (bad) outsl std xchg fptan (bad) outsl mov mov clc scas jg pop icebp pop (bad) sarl scas (bad) jg pop (bad) out pop std das lea pop mov pop cld scas jmp ljmp dec std cmpsl mov hlt pop (bad) imul stc mov mov (bad) decb jmp aas out stc (bad) into pushl ds aad sti xchg jg outsl repnz stc adc test out test cltd mov jg ja sarl in ja sarl mov push xchg mov stc scas std mov fdivrp ret (bad) (bad) xchg call std mov jmp stos push jmp std sub jg,pn mov mov pop jl call xchg fstps cli jg std inc das (bad) icebp stos dec idiv lds cmc std mov decb incl jecxz mov std inc mov in lahf stc pop jg (bad) cli in cmc pop pop cld adc (bad) std das std mov cld mov aas clc imul pop divb cld ds rcr stc stc pop repnz decb (bad) pop clc stos (bad) call pop jg std cli iret mov aas cli gs dec std outsb mov hlt xor jg pop out loopne jmp idivl mov call cmp repz dec (bad) jmp negb (bad) mov jg stc jmp lcall (bad) notl jg in hlt mov fucomip mov jg idivl jg scas sti xchg int pushl (bad) jne jg out ss jbe jg inc jg cmc fistpl (bad) pusha jp lahf mov lahf jmp scas or fisttp out xor (bad) daa jg aas add (bad) test jg jmp xchg std and add (bad) mov aad lock imul std arpl sub (bad) scas cmp clc test stc mov inc (bad) jl inc std pop jg (bad) mov inc jp sti inc jg jp fdivl cmpsl jg call out mov mov fnstcw or aas call std pop lcall mov cld outsb cmp hlt pop (bad) paddd leave out lock jg mov dec (bad) cmp movsb pushl decl jle pop mov ljmp mov sarl idiv mov stos lods pop addr16 das lcall sbb outsl cli mov (bad) clc pop dec aas out (bad) mov stos aas in jns cmp jge dec dec in pop mov jg (bad) mov out inc mov (bad) in lahf stc inc (bad) out int cmc (bad) sbb jg sar rcr lock fwait lahf adc dec outsl lcall out mov (bad) cld xchg jg jg aaa pop jg out std cmp std mov jg (bad) push (bad) cmp lcall push cli (bad) cmp out (bad) (bad) mov repnz stc xor (bad) mov jg xchg (bad) fistpll hlt das clc outsl jg mov xor mov inc jle cld aas clc imul aaa cld pop sarl addr16 out int3 push decb (bad) push arpl clc sti inc xchg mov cmp out pop inc out cmpsl inc lahf js cli psubd xchg (bad) sar cmp shrl repz mov adc lods scas mov decb ror jg aas fdivr dec pop call and mov sar scas pop (bad) out cld idivb pop inc (bad) call dec lahf jns fwait std sub out mov jg pop push (bad) push cmp out cmp int repnz stc jae mov mov cld paddw ja std dec mov std aaa (bad) cli das stc xchg (bad) xlat fisttp repnz decl aas (bad) xor incb aas mov std sti shrd clc ljmp pop sti add (bad) arpl jnp xchg lahf idiv aas cli (bad) lcall cld pop sar call pop imulb inc (bad) fsubrp mov cmc jnp hlt idiv sarl mov clc jg push cmp pop repz scas les mov cli mov stc aaa sahf (bad) mov daa fidivr cmp xor fwait cmp loope icebp pop mov std scas jg push iret jle sti xchg stc pop jmp incb (bad) jg paddb pop lds cmc outsl imulb jl (bad) gs fld1 idivl lock clc and lahf cld push mov gs sub (bad) std mov (bad) dec incb call arpl stc (bad) cld mov pop divb std movsb incl fcomip lahf stc lret (bad) fstps pop stc idiv cli push cld sbbl repnz jg aas jecxz sti mov cld scas icebp jmp fdivrp sti jg (bad) pop stc pop (bad) mov loope std inc (bad) out fucomip jg mov (bad) lahf fscale inc call pop hlt addr16 addr16 push aas icebp mov jg pop (bad) xlat incl (bad) xlat aas adc dec inc mov iret (bad) mov clc jnp stos aas insb ja push push in hlt imull in ljmp sti mov ljmp (bad) sti fcomip lahf cli in pop inc mov jg lahf jnp mov popf leave jg addr16 (bad) jmp (bad) out (bad) rcrl iret push (bad) imul pop jl pushl lret mov call (bad) cwtl (bad) mov sti (bad) ficomp test mov jg xchg lds mov into dec cld pop push pop testl repz aaa mov (bad) lahf std out fcompl std out ja neg (bad) jp pop aas pushl idivl sti loop fdivr push jg out cmpsl jg fistp (bad) jg mov in (bad) sti xchg pop out ljmp stc pop ljmp clc jae jmp lret scas jg mov jmp mov (bad) (bad) dec cld mov lock mov jg ljmp repz mov lock jmp (bad) in mov (bad) mov iret jmp jmp fucomip daa (bad) mov cmp jp outsl mov fdivrl jg pop std sbb iret pop (bad) jnp call loop int3 std lcall out scas cli xor icebp pop std aas mov (bad) jnp (bad) iret cld ret (bad) stc (bad) pop sar jg out cli (bad) (bad) neg cli mov lahf (bad) xor loopne sti cli cmc (bad) out sti jg mov aas repz jle std ljmp mov inc dec (bad) in mov in mov xor incb jmp (bad) ljmp jmp (bad) out push (bad) sbb hlt (bad) fcomip das decl mov imul pop std fbld xlat out repz hlt (bad) mov ljmp fistpll daa dec jg (bad) clc cmp jmp mov pop push (bad) inc outsl (bad) cmpsl call fcomip in iret jnp lods fistpll addr16 jmp cmc (bad) cmpsb mov in dec decl mov cld pop mov jmp loopne cmpsl pop call (bad) inc cld ja out pop repz clc sti jg ljmp (bad) (bad) stc es (bad) cmc pop mov das cld fdivrp jmp (bad) xchg pop cld (bad) movsb mov dec jle jg outsl jle xor jo outsl (bad) cltd inc aas sti jnp pop mov das call (bad) repz (bad) jae inc repnz jg out mov aas out push in in push ja decb cld (bad) clc mov xchg fstpt pop div into aas negl mov inc fcos cmc sbb stc mov das leave pop icebp dec (bad) pushf shrl leave dec aas loop clc adc cmp cmp cmc das cli adc clc mov sub jg (bad) fucomip xchg (bad) stc pop std shll std pop stc pop pushl mov dec cld pop jle cmpl ljmp jg outsl mov mov pop cld mov stc scas clc repnz cld fstp (bad) aas clc fwait dec mov jg mov in pop hlt pushl ljmp dec cld jne iret out aas cld adc pop cld mov pushl jnp rcrb in outsl mov out jecxz (bad) out (bad) std (bad) mov aas out pop mov clc fwait (bad) test out mov lock (bad) (bad) fcompl xchg lds outsl clc (bad) fwait inc outsl clc (bad) dec decl (bad) ljmp fidivr jg (bad) mov jg out (bad) scas (bad) mov lret jg mov jmp std mov ficompl cld fwait (bad) es push pop jg out addr16 fistpl (bad) cmp dec jg push lcall jg aas std pop decb fwait (bad) sti inc outsl jnp jmp (bad) pushf (bad) pop mov push jg (bad) (bad) fildl loop or lock stc sub jg mov pop incb mov cmp scas jle fprem ja or ja mov lahf repnz clc mov pop sti xchg jg out (bad) push pop ljmp clc idiv mov std idiv cltd pop std dec jmp std pop jnp inc fdivrp jae jl pop jg mov jnp call mov mov xor repnz clc lds loop clc sbb stos aas out (bad) sbb out xchg (bad) dec sti sbb jg aas sti inc (bad) fnstcw jg clc mov mov repz std dec mov jmp cli (bad) lahf jnp into out not (bad) fstpt lahf sti idiv sarl aas idivl cld repz mov dec (bad) fnstcw jg mov (bad) mov out cld push ja mov jge xchg fbld xlat push (bad) fcomps imulb (bad) fnstcw (bad) fucom pop xchg push mov ja lret pop std dec jmp (bad) stc (bad) (bad) (bad) (bad) jg cmp loope in push (bad) out (bad) mov (bad) jg pop std loopne pushl das std std mov mull (bad) out hlt pop (bad) es jge xchg pushl std xor ljmp loop jmp popf mov (bad) fldpi popf jg pop clc loop lahf clc pop cld insl (bad) jmp iret stc aas lahf std ss xlat sahf cld xlat jmp ljmp (bad) (bad) fnstsw pop jg jg cmpsl jecxz jg aaa std mov pop (bad) pop mov sbb test clc jg jmp lea ljmp outsl repz fnstcw jg leave mov fwait jmp aas stc adc les clc outsl clc (bad) mov lods fildll lahf lcall dec inc mov (bad) std jnp out clc out inc in sti (bad) lret push call jmp in (bad) mov mov stc sti (bad) sarb (bad) (bad) out out jmp inc fcmovnu sti scas push mov ja mov clc in (bad) cld test iret mov (bad) fisttpl lahf pop repnz jg fnstcw (bad) (bad) out jmp (bad) mov aas je clc pop (bad) jmp mov push cmpsl idiv (bad) jmp inc ss (bad) pop std adc push out out clc fistpl push sti repz pop mov mov icebp (bad) cwtl (bad) fistp (bad) sbb decl fist inc (bad) inc (bad) in mov mov in aaa jl addr16 pop xchg lock mov jg pop lock daa (bad) mov jg mov mov mov lcall jg mov negl gs scas dec out mov mov sar fstpl clc jmp jle pop sti popf jg (bad) jmp or scas jg outsl sti sbb dec (bad) clc aas out clc xlat xchg cmp cltd (bad) cli pop cld add lcall aas cld adc outsl repz std sti inc cli jmp add ja out (bad) sti dec mov sbbb pop mov stos incb aas and std xor outsl inc cli jmp (bad) mov mov dec sti pop call clc pop (bad) jmp sbb jg std mov out (bad) stc ret jmp mov (bad) jns rcrl mul lahf std ja pop aas cmc mov aad pop (bad) in jg lods jg popf pop repnz (bad) std gs stc mov lret cli mov idivl pop repz or sub out mov hlt sti (bad) repz repz (bad) cmp cmc paddw jg (bad) stos (bad) xchg jg (bad) push lahf std inc int sti addr16 add lcall psubb jg pop repnz std lods inc jg pop xchg push out icebp (bad) call pop jb scas incl lahf pop push (bad) mov (bad) jecxz call jnp cld xlat jl addr16 clc dec cld dec dec mov sti std xlat ja in aas stc daa paddd in cmp outsl jo lahf lcall decb cld xchg aas lcall (bad) pop (bad) xlat jg jg push std ss call aas mulb xchg jg in call mov pop incb das sahf std aaa jg jg negl (bad) xchg jmp jmp dec (bad) mov hlt ja (bad) repz (bad) cli (bad) cld insl (bad) nop mov mov mov (bad) mov insl jle aas out jg lea mov mov cltd aas data16 iret aas std outsl incl sbb cmpsl (bad) (bad) fcos icebp xlat stc mov std pop lret (bad) clc stos ljmp fistpll mov fldl stc xchg jge cmc repz clc adc lea xchg clc pop inc aas in (bad) cli mov pop aas cld adc (bad) (bad) jl pop jg jg pop incl cmp ja stc fildll dec (bad) jmp std pop out (bad) mov das cld pop (bad) out jg daa (bad) cld (bad) jmp push dec cld jmp das (bad) jne ret dec xor lahf fild mov out (bad) (bad) fisttp incl (bad) out clc sti jle cmpsl add cld pop sti pop (bad) jg (bad) fnstcw pop pushf push aam out cld (bad) frstor jmp (bad) movsl lcall jg ret jg pop stc in leave mov popf mov loop stc mov in (bad) pop ljmp mov clc mov mov mov jge cld mov aas imulb jmp out gs out push jg (bad) (bad) idivb aas ljmp ja arpl fprem1 pop sti outsl pop cld sarl pop popf cld cmp aas (bad) fidivr push fistpll incl (bad) in das ds mov pop push std cmpl cld in stc shrl mov out (bad) stos pushl decl add scas jmp in (bad) mov aas out fist out cld (bad) inc (bad) fcomps idivb cld jmp cmc idiv jmp fs (bad) iret (bad) out lahf std loop out into outsl clc stos (bad) mov stos (bad) mov in clc decl jg idiv inc inc loop cli mov jge das incb idivl cwtl (bad) aas cli adc mov std lcall test sti mov jg lret jg mov call mov xlat mov jg fbstp dec mov jg sbb inc mov outsl mov pop std scas mov loop decb ret in arpl and icebp (bad) cld iret mov (bad) pusha std cmc arpl out and adc fwait mov clc inc mov pop jge das inc jg stc in jne das incl in cmp ret mov (bad) sbb hlt fisttp (bad) (bad) paddd fbstp daa jp repz jg lahf notl outsl ljmp pop in in das cli (bad) cltd cld iret cli mov outsl icebp jecxz lret daa sar jg fcmovnu icebp (bad) xchg jg (bad) in jg and ret push mov in (bad) popf (bad) (bad) cld jecxz data16 mov jg (bad) imul push pop icebp in incl in (bad) aas (bad) cld jg (bad) std out std pop jg lahf pop cld ja (bad) rol shll out aas std iret std das jg out hlt imul jg rorl cld mov jg fisubr sub lahf jmp das stc mov jle push std jnp out (bad) push push outsl cmc jmp fs (bad) jg out std in cld mov lahf stc call mov (bad) scas stc insl jg jg outsl cmp loopne jg jg jnp sbb inc out (bad) jmp stc fstpt dec sti int cld adc leave scas sti jnp jmp pop (bad) mov (bad) stos jg repz jmp lds (bad) std aas idivl inc in xlat scas sti jmp mov out jp (bad) pop jl mov (bad) fnstcw jmp (bad) sbb lcall cmp mov mov addr16 out dec jg jg clc cmc call (bad) jecxz std dec das ds arpl iret mov or aas xchg std sar (bad) out lahf inc hlt pop push cld sti jg dec mov divb jecxz std xchg pop dec jg pop std mov adc fistpll icebp xlat pushf decb push pop pop cld mov pop icebp mov loopne cli pop dec mov std (bad) mov lahf fcompl pop (bad) (bad) outsl jbe movl out xor jg lods jg mov ljmp out jg sbb aas (bad) idivl (bad) fldpi pop lcall std sbb aad repnz inc pop aad sti out (bad) mov call clc jmp (bad) xchg incb pop (bad) stc outsl cmc jmp jmp inc jg sahf jg push jmp jne (bad) loope std call clc jecxz lret mov inc mov jg outsb jle aas out idiv sbb jae stc scas (bad) jmp jmp cmp dec sub xchg jg pop call mov cli outsl sti or jmp fwait jg (bad) incb xchg std or insl repnz jmp fcomip outsl jmp cmpsb pop stc fnstcw sti add mov sarl (bad) mov pop pop cld fstpt out ja pop sti xchg jle pop (bad) sarl fdivrp clc (bad) mov fsubr stc cmpsl std xlat mov pop clc std pop in lcall pop (bad) mov (bad) cld jne jle pop (bad) xlat decl jmp stc or repnz sti ja jg pop decb lock jmp xchg jle cmc fwait int3 cs in aas jecxz aas clc ja neg cld ja jl loop jg fistpll cld jecxz aas mov cld leave jg xchg pushl lds (bad) sbb lret aas call out cli xchg lods mov xchg loop (bad) inc mov cld dec (bad) ja jmp pop jmp push (bad) fnstsw call out ror jg cmc xor aas (bad) clc jmp das lcall mov lock (bad) push gs icebp sti (bad) lahf (bad) push xor (bad) call fcomip scas (bad) push jg fucomip pop mov jmp push jg lahf clc das cld idivl std push jg sarl xchg jle jecxz out lahf repz cld mov pushl sti int mov (bad) into dec sar std std mov (bad) fidivrl shrb (bad) adc mov jg pop cli inc cli imul jg sti jge out push pop jecxz jg in negl hlt mov inc push jg aas stc mov icebp xor inc inc pop stc xchg addr16 jne pop cld std fildll mov pop jg aas in stc mov mov (bad) pushl fdivrp (bad) (bad) ja jle mov lcall loop aas decb pop (bad) stc ljmp cmc mov lcall aas negb and out push (bad) test (bad) std out lret lds (bad) jg pop out cld lds jg fcomip das jg imul std lcall (bad) (bad) ljmp icebp lahf cld adc aas ds mov lds xlat std in mov hlt icebp jg lret (bad) clc (bad) call clc div aaa lcall aas pop std dec jg fcomip aad leave jp out stc mov idiv ljmp jle push fcmovnu stc lahf (bad) mov dec (bad) cmp ljmp (bad) ja paddd xchg iret cli out pop fistp adc repnz outsb (bad) out mov mov std cld loope testl (bad) sti in pop repz negb stc pop incb std pushl cli mov dec aas std push (bad) sahf aas repz sti mov fnop icebp addr16 (bad) lahf std sbb stc pop addr16 jle jg pop fdivrp xor xchg imul pushl out (bad) fstp testl mov std pop call outsl repnz std movsl lahf (bad) ljmp jg aas loop sti ja (bad) pop idivb div sarl imulb in (bad) out mov pop sti sti (bad) clc (bad) loop pop decb call rcll movq pop (bad) stos es test jle cli aas lcall fcos divb stc outsl cld push cld lcall loopne cli lahf clc pop (bad) (bad) sub test stc scas stc dec jle lahf bnd stos jg out incl pop inc dec mov pop (bad) sti daa mov std fsubrs fdivrs or outsl cli idiv xor (bad) das sub xchg jecxz cld jmp in icebp scas stc lods paddd lahf lock (bad) (bad) call xlat iret cld cli xlat mov aad icebp and paddw ja lahf cld clc lahf mull std aam repnz cld pop mov lock cld inc out repnz scas out incl inc loop lcall sti lcall lea ljmp push call push jg mov jg jg xlat lods (bad) jmp jecxz jge mov cmc or lds icebp cld iret std xchg jle in pop lock jle into aas cld sarb inc cmpsl jg daa mov mull pushl pop cld cmpl (bad) in mov daa out jle (bad) (bad) and stc imul aas repz outsl mov mov mov iret cld pop mov mov jle mov and sti outsl call cld cmpsb jmp cli mull mov jo ja xlat incl (bad) stc imul (bad) iret stc iret sahf std sbb fsubrs scas ds (bad) mov outsl xchg pop std jmp std aad fsubrs aas repz cld lahf clc and xchg jg daa incl fbld ljmp paddb decb call lods mov xor (bad) (bad) neg sti lods xchg jg das cld scas dec (bad) out mov lods fbstp mov inc (bad) mov (bad) lds ljmp icebp aas divl cld fistpll pop lock (bad) cmp divb jmp iret xchg clc (bad) aas mov loope icebp pop mov (bad) pop stc stc test push mov (bad) out in fcomip aaa jge cli push jne (bad) ljmp mov sti cmc or repz std lahf (bad) fidivr cli pop cld push jg dec std ljmp pop cld sbb sarl outsl dec (bad) loopne jmp jg inc (bad) push dec pop jp iret lcall xor aas hlt clc xchg jg stc xchg jg mov jg jmp mov mov std mov (bad) neg pop decl ljmp idivb cld xlat (bad) ds fxtract (bad) std jecxz lea dec cmp std (bad) call repnz std cmp aad stc mov outsl sti imul cli inc (bad) jg jg ljmp iret cld mov push int3 (bad) aas cld imul out into (bad) (bad) ljmp out stc mov jecxz jle hlt mov fldt aas icebp mov repz (bad) cmpsl adc jecxz in aas (bad) (bad) pop (bad) or mov mov inc mov leave outsl lock std mov lcall pop movsb jmp leave xchg cwtl mov jmp pushl out jle icebp daa (bad) mov in idivl cld mov sarb mov pushl icebp pop hlt loopne incl (bad) cmp lds (bad) sti fcomip push std mov push lcall iret repz jb arpl (bad) addr16 out push ja ja mov lcall xchg aas cli mov mov jg rep mov (bad) cmpsl ja into jg (bad) das mov mov lahf (bad) jmp mov fnop xlat pop jg push std in das mov mov stc aaa clc pop cmp repz (bad) gs fstpt fist jg push dec fisttpl xlat std icebp mov call std inc jg pop add popa jne cmpsl jg jg xlat jns pop lcall inc mov (bad) idiv cmpl add (bad) clc jg addr16 leave call pop sti pop pop incl xchg cmp mov sti fucomip call mov in mov inc (bad) cmpsb out xchg jg jg outsl decl hlt iret clc iret sahf (bad) in dec fildll sub (bad) pushl clc out lea mov iret cld iret mov cli aas (bad) clc idiv addr16 push fistpll xchg xchg (bad) cmp fstpt repz (bad) (bad) jne repnz xchg cld ss cld inc repz jmp in (bad) cmp sub popf fucomip ja clc ljmp jmp psubq mov lock sbb std xchg jmp outsl cld jmp ds addr16 mov jle aas clc push incb out mov (bad) jmp lret jle ja (bad) jmp jmp fdivr push call jg outsl jmp stc call jg ljmp hlt loop (bad) mov jle pop cmc scas jg hlt das cld pop test std (bad) jmp xor (bad) cld push stos (bad) sti (bad) clc mov cmc aas in cmpsl jg lahf cli dec pop cld cmc (bad) in pop std dec mov aas and mov xlat clc adc jg (bad) cld sarl pop repz repz (bad) (bad) xchg loop inc jg pop mul paddb fidivr out call mov jmp aad jg das sti adc rcrl pushl call aas clc (bad) ret (bad) jmp idiv iret cld out jle fnstcw sti jnp pop sti lods push jmp out (bad) std mov std (bad) fldcw sti pop pop out push (bad) sti out jg lcall in push jle jg outsl sti xor scas clc sub pop sti sub aaa decl inc xchg lahf std sti (bad) fcomp cld pop dec lahf stc ja incb (bad) xor dec (bad) xchg push idivl mov xchg (bad) stos call pop jmp mov mov (bad) mov jae jg dec hlt jg icebp sti pop std cmp iret inc pop pushl lahf stc aas incb cs iret mov mov lock cld gs das push fucomi (bad) jg das mov decb jle pop std inc (bad) ficompl (bad) idivb push jle iret (bad) pop push xlat in idivb lcall std ja test inc outsl cmp xchg cli jmp (bad) cmp aad mov cld cmp std cmp pop imulb push (bad) (bad) (bad) insl idivb fs xchg mov push (bad) std paddw sub xchg aas clc iret pusha stc lcall incl cld mov pop clc cld pop fwait cmpsb jmp (bad) in mov ja pop std dec jg fcomip pop mov aam icebp jl stc pop fcomp popf jg repz jmp sbb mov (bad) jg lahf jb hlt push decl fldcw mov (bad) aas cld sarl in negl cmc addr16 cld repnz (bad) push psubq stc lahf std pop (bad) (bad) rcrl lock std fisttpll into jmp (bad) inc idivb (bad) divl pop jge daa std xchg outsl out jmp hlt fwait cld cli mov outsb jg aas pushl (bad) (bad) pop (bad) pop std in fucomp repnz std (bad) fincstp jg (bad) iret stc test call fcmovne fdivrp adc aas add push lcall mov idiv ret jmp dec cli in aas cli (bad) mov (bad) fbld std cmc cmp stos jg out jae out ljmp fstps xor dec outsl xor cmp fxch fistp jle jg mov iret ljmp cld lea (bad) popf aas in push mov clc aas call (bad) and xor sti js mov stc negl add aam fcomip xchg (bad) (bad) ja (bad) pop clc repnz (bad) fidivr out call (bad) jg aas sti aas loope jg std jg jg (bad) cld add cmp aas (bad) (bad) inc jg in xor pop jg aas sti das cli lret jle pop mov jmp loopne cli jg dec jle aas icebp mov out mull outsl mov cld mov std (bad) out cld sarl lock inc stc cmpsl decl idiv aam test rcll incb into fstpt sti (bad) fnop (bad) pop lods std scas call (bad) cmpsl call pop std mov cld xchg jg outsl jg (bad) lcall (bad) cmpsl jmp loope cli sbb in (bad) (bad) scas mov (bad) das mov sarl fwait std fnstcw fcomip ljmp dec idiv icebp push xlat jns sti mov sbb push jmp xchg push (bad) mov incb fcomp inc icebp (bad) mov sarl mov cli (bad) ljmp (bad) fcomip hlt sarl clc call (bad) cli arpl jg das sti fwait (bad) out pop cld dec (bad) fucomi hlt ja std xchg jle fbld pop stc jnp and sarl divb (bad) cld inc jmp aas jg lcall jns (bad) (bad) outsl cmp out in mov fcomip jg sub jecxz cltd aas cld jg jne dec jp ja (bad) lea ljmp (bad) outsl (bad) in jg repnz push das out in cmp das jle loop mov jg out std clc mov idiv mov (bad) out jg jecxz cmpsb clc pushl mov test std cmp sbb decl (bad) jg mov clc div gs mov aad decl idiv or decl je aas movsl std aas (bad) icebp decl cmp pushl (bad) mov icebp (bad) jns (bad) lahf (bad) icebp (bad) mov (bad) fcomip (bad) jmp iret mov in pop cli mov nop aas mov cld jg mov pop icebp decl jg out std jecxz incl sub (bad) (bad) std mov inc aas in dec aas cli jae loopne outsl jmp clc iret jg pop mov (bad) cld pop sti pop (bad) ficompl ljmp aas loope incl inc jmp int daa jmp out jmp mov (bad) (bad) js (bad) enter jl (bad) jg cmpsb aas stc fucomip cli adc iret jle pop jmp clc jnp je lahf mov idiv (bad) sub rcr mov movsl jg std jg mul cmc fwait (bad) mov movq cmp sarl outsl std jle ficompl jg negb popa std in aas clc ret jg pop inc (bad) sti pop jg aas clc inc pushl ljmp shr std pop cld push mov std ja loopne std (bad) std popa fistp std out lahf in clc jge std xchg fbstp jmp jg mov hlt jge std repz mov repz mov pushl jg mov dec ljmp icebp imul hlt aas (bad) fnstcw aas notb jbe ret mov (bad) lock sti out sti (bad) es clc (bad) scas in lahf or jmp incl outsb jg (bad) scas lcall stc aas cld pop std (bad) clc outsl pop jg repz aas notb icebp (bad) fcomip iret std test dec aas lock lret aas cmc dec clc and movsl pop cli cmpsl call pop (bad) jnp or scas jmp cmc incl insl lcall idiv leave jmp xlat cli pop jbe out inc aas neg cld jno int3 jg (bad) and mov inc (bad) cli pop stc inc cld daa jmp outsl idivb std xchg jg or iret cmp lahf mov jle cli (bad) cld test enter std jge loopne (bad) fstp in iret sti push fs out div loop mov icebp bnd call nop (bad) ljmp sub ret ja mov scas cld movsbl cli leave jg xlat cmp lret mov mov jmp jmp clc loope aas repz jmp pop sti call out jg push cld cmp das stc clc mov push ljmp rcr std cmp std scas (bad) sahf jecxz dec clc cmp call clc aad (bad) out imul rcrl hlt sbb jae rcr jbe jl xchg in xchg jle out pushl mov jnp leave outsl cli mov cltd mov jg aas jmp push loop fdivrs rcr jg cld xchg pop aas (bad) aad ficomp std cmp dec pop add cltd (bad) lcall dec into out lock hlt outsl lock cld dec (bad) jle mov inc inc leave mov (bad) dec cli call cli or aaa std dec sahf (bad) sbb mov repnz mov sti decb out cld outsl ljmp scas decb mov fucomip xlat lcall pop sti out (bad) pop daa stc (bad) in (bad) stc sti aad loop cld pop (bad) fistpll divl cmp hlt pop cli mov fsubr xchg mov lahf bnd jne call jg in jnp cmc jmp ljmp std stos mov clc test jle idiv inc dec pop jo add xor (bad) sahf jg in clc addr16 push pop sti sti (bad) out jg outsl stc pop and das push cld push pushf aas (bad) sti jg dec jl push std cltd mov mov fild icebp aas fdivrp out mov cmpsl clc adc mov jg mov (bad) cmp fwait jg pop (bad) (bad) call xchg (bad) and popf std mov dec scas cli inc scas jle repz mov mov out outsl iret lcall (bad) das (bad) popf cmp outsl pop cld fdivrp cmp cld jg (bad) lahf std (bad) in jecxz stc xor mov clc jae push repnz stc in (bad) clc pop (bad) out stc cmpsl (bad) out jg lahf mov lcall xchg idiv negb cmp jg jg lods aas sti in lahf (bad) call cmp ficomp (bad) push cld sti xor aas lock cld jae (bad) sti ljmp call fwait dec cmc cmc jg out fdivrl jp paddb jmp jg (bad) lahf std iret inc (bad) into cs std test push out repz incl aas clc mov icebp dec clc arpl out mov mov xchg jg outsl jg pop cld cmp das cld xor addr16 mov lock fstpt out idivl dec repnz jecxz clc scas jmp push pop jg pop dec out (bad) mov std aam std fwait out (bad) hlt out repz inc aas clc mov mov cld out mov xlat cld idivb out repnz sar in (bad) iret pop (bad) aas (bad) popf cmp jne aas sar scas std lea sbb mov std jns into (bad) ljmp out (bad) ljmp std out std loopne (bad) ljmp stc pop lcall fistpll jg lahf mov popf cmp fnop (bad) fstpt call jg outsl lcall fwait cli lcall scas clc sbb cld loopne jle mov sti or test mov pop inc (bad) fnstcw (bad) fwait jg in (bad) incb test (bad) fnstsw (bad) cli (bad) in cli mov jmp into jle aaa (bad) push jg in cmpsl (bad) ljmp in jg pop aas test imul lcall lcall jne sahf jg aaa cld xlat lcall (bad) ja cld fstpt jg outsl movl push cmpsb mov dec (bad) mov sarl call repnz jle scas (bad) das ja cli (bad) leave (bad) and decl arpl out mov mov ljmp jecxz stc cmpsl jg jg lahf mov jg into jg aaa std aaa push loop cld (bad) call clc daa (bad) clc out lock pop std mov std fnstcw pop cli call cld stos aas jns push jg scas mov lahf stc (bad) (bad) loopne mov aam out (bad) xchg call aas cmpsl clc inc int repz cltd mov lcall (bad) ljmp dec popf pop cmc mov aaa push lahf (bad) in jmp loope std shr lock scas call loope bnd popf pop cmc out jle scas (bad) push jnp std sti cld mov in (bad) lahf repnz cld fnstsw pop repnz push xor movsb icebp (bad) fcos leave mov pop (bad) fwait jg iret aas std (bad) call push (bad) mov pop call loope into jle scas mov cld cmpsl (bad) ljmp jg arpl cld fnstsw pop (bad) out mov in (bad) cld pop push clc lcall and jg stos cld mull cli sbb stc (bad) lahf std pop (bad) cmp ja aad dec repnz lahf out stc rorl repz (bad) cmp sarl outsl lcall decb jg aas std stc aas repz pop inc (bad) sti mov imul jg stos lahf cli (bad) call push hlt (bad) pop dec out jg out mov jmp ljmp fdivrs out decb (bad) fidivr cmpsl clc icebp mov int incl aas jge lahf std scas (bad) jmp stc stos (bad) (bad) out mov (bad) (bad) cmp in out jno cmp xlat (bad) clc jg lods aas sti scas (bad) jae jg scas out cld stos call inc loop jg fdivrp mov decl jmp ljmp (bad) jge lcall movsb idivl jp scas movsl idivl xchg lahf dec test mov pop std fist (bad) (bad) pushl lods aas jle loop aas cld xlat sti jnp jmp aas (bad) out push iret cli jmp jecxz iret mov incb data16 pop insl (bad) jmp cld fcos (bad) mov repz iret cli and (bad) mov pop xchg (bad) lcall idivl aas in cli popf dec jg push jmp xor iret pop addr16 pop idiv push jg pop divb test (bad) ds icebp ja fwait aad aas sti sarl (bad) mov std fistpll cmpl movd (bad) inc mov loope jle jg idivb clc xchg mov sbb lret jg cld dec scas inc mov jg (bad) aam idivl outsl imul std mov out std pop lcall (bad) out (bad) std dec (bad) mov stc jmp out ja scas ljmp jg pop repnz idivl std out xchg ja jg aas stc cmpsl jg iret sti mov sarl aas mov fistl call (bad) fidivr lock hlt xchg stc mov dec std int mov inc fucomip (bad) sub mov das cli lret iret push jg loop scas cli std jbe popf jg mov inc mov aas (bad) (bad) mov sti (bad) stc mov xlat scas jle loopne daa cld iret (bad) in cmc iret cld sub rcrl push outsl (bad) icebp pop sti loop cmp test sbb das jge mov loope aas stc imul jg (bad) ja sar cs rcr cli (bad) (bad) mov lahf push cld daa (bad) cld jg dec sti dec (bad) scas (bad) ja inc (bad) fnstsw ja xchg aas out out stc (bad) jle pop lock (bad) clc icebp fwait cmp mov decb in cli jecxz xchg das movq lret xchg lods jg mov (bad) mov push jle pop repnz decl repnz jmp repz out stc aas std rcrl (bad) aas in cli ret jle icebp daa (bad) fnstcw lcall pop hlt jnp jns das lcall pop repz mov paddb pop out (bad) pop clc std out std aad jne (bad) jmp std lahf mov xchg std mov jmp (bad) out clc (bad) jg xchg cmpl incb cmp mov jg lahf imul (bad) call (bad) mov pop jmp xchg pop icebp push (bad) insl addr16 scas stc pop std cmp (bad) mov fincstp cs jmp (bad) repnz aas (bad) ja jg push jmp xchg pop cld jecxz std rorl addr16 pop negb outsl icebp outsl std in (bad) inc jg lahf cmc outsl call mov jge cmc pop jle outsl cld ficoml pop mov les mov stc clc aaa fwait cmp sarl fdivr cld pop mov aas stc ja call iret jl aaa cld lahf mov mov jmp clc sarl fucomip (bad) cmp in mov jg mov stc std incl (bad) stc outsl std mov mov fcomip idiv (bad) pop std xchg out decb in xlat jns sti cld jecxz repnz not (bad) (bad) clc jg mov out lahf (bad) jg cli out mov (bad) aaa (bad) inc lcall pop jg out clc das std in pop push jg lahf std (bad) test inc push call jecxz cli iret jns jg lcall jg (bad) push (bad) cmc mov stc mov cld inc leave shl mov (bad) or cltd jg mov cmp push dec inc fistpll adc lret pop testb (bad) pop stc sbb jg aas cmc dec clc mov call mov jg mov movsl jg mov xchg (bad) lahf clc cmp das jg (bad) (bad) std jns adc dec mov xchg (bad) jmp jg jg outsl cld mov or cli (bad) mov std arpl into jg jg mov popf cmpsl mov std pop inc in dec stc out repz aaa call scas dec cld decl hlt lahf std pop inc out jle pop testl (bad) fcomps lock incl idivl stc outsl cli xlat jl das jl jecxz cmpsl clc xchg (bad) outsl jg mov incl fdivr decl (bad) std out int sti inc pop repz in inc jmp lahf repz pop mov cmc (bad) (bad) xchg mov std (bad) mov (bad) hlt jg or ja xchg test in cli adc scas jle mov and (bad) jg pop mov jl sti push (bad) lcall into jmp (bad) dec das inc jg mov movsl push jg xchg cld int3 jg idiv in fildll sub mov hlt iret std lret jle lcall std lods (bad) fnstcw push jg push call scas push lcall (bad) sti aas std cmp sarl clc (bad) imul cltd std test (bad) out sti mov ret mov icebp aas (bad) sti cld pop jg pop jb mov imul jg lahf repnz sti paddw mov decl clc (bad) (bad) mov xlat jg aas cmc jg jne les call daa (bad) out imulb sti out pushl idiv test stos aas loope cli pop (bad) aam cld scas ret out std dec (bad) push (bad) sub arpl std decl ror mov iret aas cli sar mov fidivr int std out jmp cld (bad) cli xlat jg out cld pop jle mov dec jg mov (bad) loopne (bad) aaa sti popf push aas std stc das (bad) sar cli mov sahf aas cli jg (bad) loop mov pminub push jle push out stc sti jg fbld imul mov push std repz outsl lock cmc cld (bad) cmp mov cmpsl jle mov jg imul jg pop ljmp incb lcall pop clc cmpsl ljmp xchg aas icebp lahf sti mov fucomip outsl std inc cmpsl call scas repz in cli loope hlt daa aas mov jmp cli xchg push xchg jmp lahf (bad) aas cld imul (bad) fcmovnu lcall jg mov jg jg adc cli lods out into inc inc mov pop std xchg ljmp (bad) outsl clc jae (bad) (bad) lahf clc in (bad) in xchg pushl jle mov out fstpt stc jmp jmp jg scas sti dec jmp (bad) fsubrp ljmp jecxz js cmpsl (bad) pop jg push pop incb push in idivl aas and scas mov mov cmp fucomip iret sti and mov fstpt jg call dec pop out cld (bad) fnop dec push (bad) repz hlt out std mov out aad mulb cltd dec iret cld add (bad) stc pop mov out fnstsw sti xchg jg jnp sbb std (bad) push call cmpsl (bad) jmp mov stc push std dec cmpsl jg (bad) clc sbb test lock rcrl in std lods (bad) cmpsl jg into pop icebp pop decl xor jg jb dec jg jg mov ljmp loope xchg (bad) mov mov cmpsl (bad) sti pop not cmpsl cmc fwait decl mov out lcall jg sar out ljmp loop cli fwait lcall xchg cld aam aas (bad) stos ljmp lcall jmp mov inc pop cld aaa jg mov mov lcall fucomip pop (bad) cmp lock cmc ja jg ljmp out std jecxz xchg mov mov lock iret cld inc jg fcomip pop (bad) mov xchg fcmovne pop hlt scas cld jg,pn pop decb jmp adc (bad) std subl lahf cld or lcall stc fwait cld pop outsl jg lret xchg call (bad) cmp data16 clc fcomip mov in mov jg scas jp idivl xlat mov aas addr16 (bad) cmpsl (bad) in aas std out cli push ja lock adc pop (bad) fdivrl xchg cmp jg push mov clc mov sar in aaa cli inc jg fucomip mov insl jle jg das sti fwait pushl cmc (bad) sarl lods aas imul sti (bad) pop (bad) ljmp repnz (bad) lods fidivrl icebp aaa inc jle push scas clc dec jg pop mov cld and repnz repz (bad) lahf (bad) jbe (bad) hlt sbb aas cli cmp jg icebp or jmp scas cld ret incl xchg call pop iret (bad) cli jg mov out (bad) jecxz iret push jmp ds push jg push das (bad) xchg jg mov clc call idiv leave push aaa stc popf jle in (bad) cli insl jle jg scas cli iret imul mov (bad) cltd pop repnz std outsb push fcomip (bad) std mov out jmp inc (bad) repz stc imul pop cli addr16 pop aas icebp imul xchg fcomip mov ja repz push xchg jmp jg das (bad) into pop inc stc jmp stc paddb jle aas icebp xlat std mov imul (bad) stc (bad) sbb aas cld cltd pop out pop (bad) jmp mov xor outsl jge dec cld repz clc pop jge ja jge (bad) lcall das jge jg xchg jg ja fistp pushl push decl fstps pop (bad) decl idivl sub mov jmp dec std push pop inc pop stc addr16 stos jg out lock int xor pop loop jecxz sbb push ja mov lods pop push mov stos addr16 lahf cld fistpl clc mov iret aas mov xchg sar out addr16 lods dec mov jg outsl cmc icebp mov leave jg out (bad) mov push pop frstpm(287 ljmp repz bswap (bad) repz sti mov repz ljmp stc pop jmp loope sbb xchg clc jmp decb (bad) lcall (bad) aas clc rcrl xlat out sti pop cld lahf aas mov cmpsl cmc stos pop cmp sti jmp fist imul xchg mov out (bad) mov cmc aas stc jmp (bad) (bad) mov loop mov jmp mov aas mov or ljmp (bad) mov jg (bad) pop jl icebp xchg jmp jg in (bad) lret fcomip stc out sti dec inc cli (bad) cld clc pop clc jge jmp mov ja clc sti mov jle popf aas loopne incl jmp fwait jg idiv fwait (bad) fsub paddb ljmp (bad) jne fstpt xchg dec mov fdivrp std (bad) sarl clc das jg clc out aas clc mov clc pop jmp stc idiv icebp paddd pop mov repz (bad) pop jg mov adc dec (bad) fnstcw jae jg lods mov bnd out icebp pop (bad) adc ja ss negb push pop (bad) push (bad) stc xchg sti lret ja shrb dec push pop clc scas jle mov pop pushf std jge (bad) scas inc jmp (bad) incb popf fcomip aad cld jnp xchg rcrl lahf (bad) sti mov jle mov jmp mov decb jg out cld call jg pop jmp nop pop mov aas imul fisttp cmp std mov stc rcrl mov dec jg fucomip mov xchg mov std (bad) sti (bad) (bad) jge xchg jmp ja inc jg mov idiv mov (bad) incl inc (bad) mov jmp ret aas cli dec ljmp jle fnstsw (bad) das std adc mov (bad) mov cmp pushl hlt imul mov jg shr pop std (bad) xchg (bad) std idiv mov fcmovnu lock sti cmp cli daa (bad) adc (bad) outsl std jp ljmp mov negb clc fwait std sbb fucomi dec cli mov or loop cli iret (bad) xor rcrl jp ficomp idiv mov call dec mov fnstcw iret cld in (bad) outsl adc pop std mov aas in (bad) clc pop incl sti cmp in mov adc jle aas lock psadbw aas outsl sti pop jmp iret (bad) outsl and pop xor mov cs pushl cmc lahf inc mov loope repz jg fcomip aaa std lahf jmp in (bad) cli icebp jecxz stc loopne cli int incb (bad) pop mov aas clc dec cli sbb push cld aas cli add xlat (bad) std ds (bad) repnz (bad) fnstsw jg mov idivl std paddd xchg xchg jg stos mov jg pop std pop push sar out pop std push cmp dec (bad) mov mov cld jmp jmp jg or stc lahf jle icebp xchg inc jg clc out ja sub mov mov (bad) cli lods jg jg out jle mov aaa incl dec lahf sbb sti daa (bad) popf (bad) sete leave jle pop cli pop jmp pop mov outsl std (bad) aad inc cli out push out std inc jg in jb loopne lahf sti repz xor repz mov (bad) cld std incl cmpsl lcall xchg jecxz lods jg cli push pop cld lret pop (bad) lahf mov aas ljmp cmp mov addr16 shrl daa enter pop (bad) sti scas sti xlat cmp xlat popf jg lock mov xor mov mov cmp cld in sti paddw jg repnz into jg stc fcos stc imul jg lahf repnz std jg pop decb lret pop stos call fbld lahf cld ret jg lock sbb cmc mov in decl loopne idiv sarl cmpsl cld imul cld sarl repnz cli jne repnz (bad) push mov jg cld (bad) (bad) (bad) std push pop in cld stos (bad) out aaa incl (bad) pop dec pop cli (bad) mov hlt das clc scas jle aas in aas mov add inc dec cmc fwait mov sti mov jg (bad) jne rcll mov pop jg out cmc mov pop jge sarl xchg outsl std add shr inc cli out outsl push cli mov out (bad) out push xchg aas call pop jg imul (bad) stc jae pop lods mov idiv jae cli aaa inc jmp scas std lret jg out inc mov dec fistpll (bad) dec jle fbld idiv in rorl xchg mov test decb out std cmp outsl jge lahf (bad) push mov inc (bad) in jg outsl (bad) (bad) mov fucomip paddb call jecxz (bad) incl decl jmp into jle aas jecxz aas std sub cmc jmp sarl (bad) cld das (bad) mov repnz lods pop (bad) clc (bad) dec xchg jg lahf clc cmp cs fcmovu clc cld stc pop cli pop (bad) jge push (bad) stos (bad) call idiv movq hlt (bad) push lcall jg in jg int3 (bad) call lods (bad) ja jmp fnstsw (bad) decb mov (bad) jmp clc (bad) enter sar mov xchg mov dec push clc dec sti (bad) mov (bad) das mov xchg aas in (bad) cmp dec mov out es (bad) pop pop lcall das inc fbld dec sar aas cli lahf imul jl (bad) sub pop icebp das (bad) xor repnz jmp (bad) jg icebp out fnop fistpll (bad) ja (bad) jge (bad) (bad) daa jle mov mov call cmp outsl inc (bad) mov cld jnp repnz jmp dec jg lahf sti idivl dec (bad) stos fucomip outsl push jmp rcrl decl aad clc pop dec iret push aas loope stc pop out iret pop std das (bad) sahf mov sbb lcall icebp push jmp in pop clc xor dec imul jnp ret mov xchg hlt aad cld (bad) std push push pop neg std push iret (bad) mov cli aaa jecxz jmp ljmp std scas (bad) fcmovu push cs mov (bad) fiadd repnz out cld pop jg ljmp lock aas cmp std sbb jl sarl jg fbld icebp lret pop std fdivrs push das cli inc jg das clc fwait sahf (bad) notl scas std in in divb call nop fistpll out pushl jg fwait (bad) mov jg jmp std fwait (bad) out pop clc aaa std popf mov xchg in cld sahf push shr (bad) clc mov ja cld pop pop cld outsl mov cmp push dec (bad) (bad) cld inc jg outsl mulb jg jmp cmp mov lock stc das mov incl (bad) mov sti dec cli pop stos lods fucomip cmpsl jg aas out das mov pop fldcw cmp clc lahf cld jmp dec mov nop jg stc fwait pop repz jg outsl (bad) idiv (bad) repz cmp jmp scas (bad) in pop icebp das pop popf (bad) xor fdivr jne ljmp mov in push inc push (bad) (bad) iret (bad) js pop cld scas mov jle mov aas clc jg (bad) pop (bad) out hlt into cmc jg daa (bad) fcmovne lahf popf out jns scas jg push push fcomip sti std mov std addr16 (bad) aam stc outsl jecxz iret pop (bad) cld iret lahf hlt mov das stc xchg jg ja cld (bad) out decb and (bad) clc mov fucomip push call std sahf mov mov (bad) ljmp pop std xchg push jge repnz cld shr std pop dec enter jg mov (bad) fcmovu push out jmp push clc jecxz aas in (bad) (bad) call mov xlat dec (bad) mov in jp (bad) out (bad) test aas clc mov repnz jmp scas pop push lahf xor daa jg mov (bad) lahf cli (bad) fldt (bad) stc jg outsl std cltd mov std clc jmp pop decl lcall cld testb ljmp cld sbb movsl (bad) cmp iret mov std xor clc jnp test fistp int into popf pop lahf cli pushl jg pop std inc jge sub cmpsl iret push dec (bad) in jg pop out or cmc pop cltd push out std (bad) mov call dec out (bad) mov xchg mov hlt (bad) (bad) scas std pop pushl push lahf cli pop (bad) out jg mov call jecxz ljmp push jg pop cltd and sbb scas cld (bad) lcall dec and (bad) mov lock fstl lods jg pop test (bad) mov push xchg dec (bad) lock cld into push scas dec mov aas jle outsl call mov hlt clc iret and jg repz les (bad) (bad) (bad) lcall (bad) mov mov jmp push (bad) call std lahf jg loop das ds mov sbb out cli xchg std int xlat pop std xchg mov mov aas pop repz push aas cli pop sar push pop dec hlt sti ja std jg into (bad) inc (bad) in out ret stc sarl ja xor scas xchg jg dec lahf cld rcll jp dec jle out (bad) mov mov std fcomip out std mov dec jg fnstcw imul clc iret (bad) aad jbe (bad) jg,pt mov mov dec mov (bad) repnz cmp jns scas dec inc (bad) (bad) clc pop (bad) fstpt (bad) (bad) sarb (bad) jge pop add mov fwait lahf clc jnp (bad) sarl clc fistpll out aas cmc dec (bad) aad imulb ret pushf jg cmpsb jg loope dec jle xchg jg cli pop jg push std ljmp in (bad) fidivrl (bad) (bad) fwait out std mov aaa add jg cmc (bad) dec jmp mov (bad) outsl (bad) or pop (bad) jae repz std pop (bad) clc icebp (bad) cmp (bad) aas (bad) mov mov insl (bad) ljmp (bad) arpl aas jg cmc scas stc xchg (bad) mov addr16 call mov out incb lahf mov mov (bad) jmp stos (bad) call fnstsw cli dec out cld leave (bad) ljmp in fsubrp repz adc std (bad) out clc daa pop (bad) fcomps idiv addr16 (bad) (bad) ljmp pop out jmp cli out push (bad) push mov mov jns aas ds dec and cmp lahf or mov cld imul aas cli outsl ds std addr16 scas (bad) in pop adc (bad) in pop cld iret (bad) mov jg fcomip aas and scas jg xchg lock mov in mov cmc mov pop std imul mov (bad) sar std lods push out pop cmp pop aas stc in pop std (bad) aas std lahf cld lds (bad) fstpt out das (bad) mov jge cmpsl stc (bad) push fistpll and clc pop and nop lahf pop std arpl jg incb rcr sti dec dec jmp (bad) push in (bad) sub std xchg push pushl clc sbb paddd in push push fistpll lahf nop cld xor ljmp leave (bad) jg sti cld xchg jg scas (bad) mov call aas jg out jne lret (bad) in xchg stc repz (bad) cli mov imull mov idivl dec call fucomip push aad lahf call (bad) jecxz imul fisub (bad) cld inc jle lret mov pop lcall xor (bad) icebp loope,pt (bad) icebp ljmp in jg out ljmp cmp outsl stc daa aaa mov std mov cli fdivrp cld cmpsl inc jg (bad) aas cli aas std cmp pop fdivr dec ljmp imul (bad) jmp (bad) std icebp fcomip xlat mov jecxz jnp pop (bad) clc mov divl jg aaa int pop sti xchg fistp lcall push cmc lret mov jmp jg mov (bad) int3 cli shrl call aad stc fist std (bad) pop lcall adc mov mov jg (bad) fisttp jae pop std pop call fcomip cmc lret mov pop ss mov cld mov xchg cli aas movsb idiv ljmp lcall fstpt fist (bad) cwtl (bad) fucomip das std xchg push loopne push call (bad) in and jg cli pushl (bad) jg (bad) (bad) jg int (bad) clc mov rcrl idiv mov std sarl (bad) leave cmc outsl stc das jmp pop sti pop jmp jg iret mov ljmp mov ljmp fsubr out (bad) ja in mov mov pop mov fistpll decb pop jge mov stc mov push stc std push mov jle pop sti pop inc ja sarb cwtl (bad) pushl (bad) mov mov dec push cld (bad) (bad) sarl enter hlt cld icebp pop repz in call pop ljmp stos jg das mov imulb sti inc (bad) mov pop sti dec movsb idiv fnstcw jg in pop std pop lcall pop out pushl sar (bad) pop cld (bad) sub xlat cld or call inc outsl ljmp lahf call (bad) jmp ljmp (bad) call jg lahf std mov sbb xchg popa cld mov pushl jecxz out cld (bad) lcall call aad (bad) mov mov ja mov and (bad) in pop mov mov ljmp fwait (bad) fnstcw sti push jg icebp pandn imul clc jge fdivrl aas std mov mov out pop mov ljmp scas fcomip clc aaa cld in outsl push (bad) push jmp jg ja and xor inc out std cmc jg icebp jnp ds pop sti dec (bad) jmp std lahf (bad) fadd aas cli mov jmp out std out jecxz clc mov (bad) jmp neg (bad) xchg jg jp in xchg iret (bad) (bad) jmp (bad) cli pop (bad) pop mov shr scas incl std fist (bad) scas cli jae pushl mov idiv fldpi pop hlt aaa ljmp scas jg dec std in jg pop jmp (bad) lahf cmp idiv sti jecxz cli xchg aas sti pop (bad) mov (bad) xor (bad) cld lahf pop jle lock clc jg lock (bad) jnp ljmp (bad) jg clc inc jle int sbb (bad) mov std xchg or (bad) (bad) in (bad) in call in ret mov xlat jl stos (bad) (bad) fcomip jnp negl cli mov mov cmpsl push lahf clc push adc pop jmp std xchg (bad) decl dec std decl imul jg (bad) inc outsl cli lock int xchg pop cmc imul ja in jg pop ds jno mov jg jnp negb sarl mov push jg out cli aaa (bad) idivb push jg daa decl cld pop shrb cld fdivrp gs daa jg daa jg lahf cli (bad) push xor pop push (bad) mov idiv sub mov dec jmp fdivrp mov (bad) jg aas std xchg dec jmp jne pop (bad) mov jg aaa call jg (bad) repz mov call (bad) ljmp outsl (bad) jnp xlat loopne jg pop push scas cmp (bad) jg cmc aas or (bad) (bad) fidivr cli repz pop ds mov out icebp (bad) push jg (bad) sti (bad) sahf inc outsl clc lock gs inc ja (bad) fbld fwait jg out jmp mov cld (bad) cmp mov lahf push xor pop test jg enter xchg out scas decb decl cld jmp hlt (bad) pop scas jmp jg mov (bad) shrl jecxz gs mov out dec out decl cld lahf pop pop xlat mov mov fdivrp inc (bad) push mov aas (bad) cmc mov hlt (bad) mov es lcall out jg cli repz aas push cld pop sar mov call jp mov cli xchg loop dec call sar mov out pop sar mov jp imull fidivr xchg ljmp fidivr lahf sar pop ljmp scas clc pop sar jmp jle cltd dec (bad) mov clc jg out pushl pop test std push (bad) mov (bad) sar jg sar icebp jg mov mov jg mov inc sti jbe repz aad sarl in (bad) repnz (bad) ds stos (bad) (bad) lds mull out jae daa aas stc mov clc pop incb (bad) out pop out (bad) cmp push mov inc (bad) jmp imul mov adc idiv hlt fwait call jg outsl jle div paddw (bad) jmp jmp xor aaa cmp jne int loope dec pop lock std ds je mov pop jg out cli aas (bad) not lahf clc mov scas jg mov cli pop decl fwait lcall jg outsl jnp clc loope stc mov mov in std lahf sar aas icebp imul stc push call fdecstp out repz jg mov sti (bad) jmp mov call fild jg pop jbe aad pushl dec mov (bad) lahf leave out lcall int3 aas lahf cld lds mov jg idivl leave fdivrp fcomi pop sbb mov scas jg lahf or mov sbb arpl mov or std aas hlt idiv or fdivrp aad shll mov (bad) mov std (bad) sti int inc (bad) cmpsl (bad) jmp aas mov std mov call (bad) jg xchg cs stc in jg fdivrp fisubr jmp jge scas (bad) std test decl std dec (bad) fcmovnu pop out (bad) mov clc decl (bad) fldcw jnp (bad) das cmpsb neg (bad) mov (bad) pop scas jg jp aas movsl idiv aaa jp fbld push pop repnz stos ret mov jmp cli mov (bad) call dec mov mov call and stc dec les imul inc out jmp out (bad) mov std mov sti mov ds (bad) lock out (bad) xlat (bad) fnop mov addr16 out dec out (bad) iret aad lcallw (bad) fucomi std dec jle repnz je xor clc mov sub jmp ljmp in hlt aaa cld mov pop std lret aas stc in int decl jmp jg cmp jg cmc xlat aas sbb (bad) (bad) xlat imul cmpsb jmp lahf cld out mov (bad) jmp (bad) jae imul pushl aad dec hlt sti arpl dec cld (bad) jle sar pushl incl mov (bad) mov (bad) mov aas mul (bad) arpl mov iret sbb sti clc pop (bad) cmp (bad) fcmovu lods (bad) lcall clc jg imul decl adc lcall ret (bad) loopne cmp (bad) mov in add jg add inc mov jg jg incl lcall cmp outsl dec cmp jg aas cmp pushl cli (bad) cli jno (bad) fimull add and xor pop lock pushl ret fucomip push std mov movsl (bad) (bad) sti mov add out out (bad) aaa jg loopne inc (bad) cmp aas jge std lcall jnp stc (bad) sti pop std stos or out scas movsl (bad) out (bad) mov pop fstpt aas clc mov negb jb call std fistpll (bad) out jg fnop les call mov mov repz jbe ljmp dec scas call (bad) jg (bad) cld out jg out sti mov (bad) in pop sarl aas clc mov ffree jmp jg jnp jmp iret cld (bad) idivl cli xlat div call in mov (bad) ljmp cli call cmpsl lcall cld jg (bad) mov out jmp (bad) into (bad) jnp (bad) mov in fcomip fidivr jg int3 jnp in cli (bad) call mov jle idiv fadd pop mov ss decl cmpsl jmp std xlat jg dec decb idiv push (bad) (bad) jg jecxz cld fsubrs cmc call fisub (bad) std pop vpandn cld ret outsb addr16 incl mull jmp js pop cld pop mov inc mov jg jg sti cld dec lret pop std arpl shr cmc ja jle out adc divb pop call dec pop clc sbb push mov xlat cli out daa push lahf repnz (bad) ljmp xlat aas dec stc cmpsl fist pop sub inc icebp icebp pop std xchg mov sti in lahf sti dec data16 jecxz loopne jg xlat std or jle (bad) pop icebp (bad) mov jmp pop cld push mov popf lret jg clc xchg call pop cld mov sti jmp jg cld out mov jae int pop out xlat ficomp stc sub lahf cld hlt jg stc xchg mov mov decb decb mov das (bad) loopne in (bad) clc add out in fnop pop (bad) jecxz decb stos (bad) pop mov das push (bad) fldcw paddd (bad) std sbb imul std cmpsb mov jg out mull push xchg scas jg (bad) incl dec cld cmpl cmpsb (bad) fistpll jnp cmpsb enter (bad) out pop std imul nop pop stc icebp jecxz push icebp jo fist std sahf (bad) sar jmp clc fucomp cld pop hlt jle fwait (bad) cmp mov setg or fnstcw ljmp mov pop aas ds sbb pop std loop sti pop std pop jg outsl repz hlt dec pushl pop sahf (bad) adc (bad) clc fstpt fistp jg iret std add jg imull mov out outsl clc iret into (bad) mov aas repz sti cmp out clc mov jl stc sti sbb jg idivl pop lock fdivrp fnstsw fcomip paddb xor fistpll dec ret aas loope sti hlt aaa cmp mov ljmp repz in cmc mov jp sarl cmp movd outsl (bad) jbe clc xchg mov hlt incb xlat sti repz fcomip push (bad) clc lahf cld out (bad) fildl stos (bad) mov repnz lea aas jecxz sti stos jg (bad) (bad) clc subl std jns ret repz call fcomip stc shrl jns daa cld icebp fistpll mov decl fimull negb repz pushl decl (bad) sbb incl out in push lcall hlt sti leave fyl2xp1 pop mull mov sbbl lret mov fisubr std mov idivl (bad) dec cld mov xor mov test outsl repnz std fnstsw sar std daa xchg lret jg daa sarl aas cmp pop (bad) mov cld jge mov (bad) fstpt jg icebp mov insl fwait mov jle mov push pop std mov sti into pop repnz popf jge outsl clc in lds notl jg repnz sti dec (bad) xor std imul mov incb cld xlat adc jle lahf clc popf jg aas cmc (bad) cli jmp mov jecxz pushf (bad) adc std ss js cmp fcomip (bad) call jmp xchg mov divl mov hlt out std xor inc cld idiv inc mov lcall sti std jno out notb out inc push xlat add (bad) stc pop sti mov pop cld jae jg clc lahf jnp sti dec mov ret pop incl fstpt mov cli xlat in mov xor out jle idivb sti paddd jg mov popa iret (bad) mov lahf clc sbb dec clc fidivr clc sub (bad) mov pop sahf adc (bad) (bad) (bad) (bad) (bad) mov cld (bad) (bad) jmp jecxz mov cld popf (bad) in jns vpaddb stc sti dec pop (bad) or sbb cld std mov mov outsb xchg mov movswl lahf lock test jmp loop cmc aaa (bad) fsubrp repz test lahf (bad) ficomp sti mov test mov jg scas cld sub mov push jecxz cli xor (bad) mov sti mov lds jmp seto jmp sbbl pop dec cld repz clc pop sti dec jle lret mov int3 fistp cmpsl std (bad) int3 fistpll xchg mov add pop notl (bad) mov daa inc (bad) (bad) mov add cld (bad) mov imul fnop in (bad) fiadd lcall jle fstp idivl clc in ret lahf notb (bad) jns push icebp (bad) dec repnz jmp jg aas ss (bad) mov cmp dec jle jg hlt push decb incl cld mov jg mov loop jmp hlt xchg (bad) mov sti aas in scas clc out into decl or fistpl loopne sti pop (bad) mov jg fsin sbb leave lahf sar idivl cld adc call aaa icebp in (bad) (bad) lcall fnop jge mov icebp xlat out iret cli outsl dec cli out pop cld arpl out pop stc jg cmc fcomip out cld ficompl repnz xchg fbld (bad) fdivr lcall and sti lret (bad) ljmp jg mov pop mov mov cmp (bad) (bad) aas (bad) ljmp jbe inc pushl aaa pop (bad) stos aas cmc mov pushl (bad) mov (bad) (bad) mov lahf (bad) push (bad) ljmp in out mov gs (bad) leave fcos mov iret pop call (bad) (bad) in neg mov cmc (bad) pop jns scas or mov sar mov hlt pop (bad) jae jge scas iret dec jg repz (bad) cli mov jg xchg jmp jg outsl jg ja popf (bad) mov aas jle push jg cmc dec fldcw (bad) (bad) mov (bad) jg dec xchg mov aaa aas push (bad) mov sti repnz pop decl jg pop lock scas mov shr adc pop icebp ret xchg jecxz fild xchg lret lds arpl (bad) inc xor push and mov jg cld std mov repnz (bad) in mov cld jecxz in in iret mov mov ret (bad) jns jecxz dec ret sub sti cli scas jge (bad) in (bad) sti dec jle aas jecxz incb out incb jge decl out jmp idiv lods into lret mov lahf cld add aas icebp sbb or outsl repz jle fidivrl or mov outsl incl (bad) cltd jmp dec sti das (bad) mov (bad) imul rcr out jmp shrl sti pushl std std daa pushl (bad) (bad) or mov adc cld (bad) mov fcomip pop inc out ljmp jle aas cli pop mov cmc mov (bad) mov add jmp jle hlt lahf std push dec jle outsl ss mov in decl loope lock icebp lock mov repz (bad) pushl sti jg jg shr (bad) (bad) fnstcw (bad) or jg out jnp repnz jg das clc push jmp mov std pop call pop (bad) (bad) jae ds xchg (bad) xor in stc iret sti pop mov not cld pop jg dec out jmp mov jg (bad) lcall lret pushl aas div dec pushl mov mov (bad) outsl jns jg idiv mov out xlat mov decl ljmp (bad) (bad) outsl stc fwait and stc lcall cld daa icebp ljmp pop pop aas and sar fnstsw mov inc cld icebp jg idiv cli jg (bad) (bad) in mov cli dec clc movq outsl js in cli sbb das (bad) in fdivr xchg pushl xor jg dec dec pop inc cli outsl sub pop repnz test and jge inc mov in cmc aaa std jp sarl fisttp imul (bad) std iret ficompl adc shrb pop std cmp (bad) mov jg stc roll (bad) das std lahf decb out cmp sub jmp pop sti shrl jmp ret cmp hlt lods jg pop das jg (bad) jg aas mov (bad) iret stc cmpl clc (bad) cli sub mov js xlat (bad) xchg dec jg aas (bad) in jmp aas hlt scas std pop jg scas dec (bad) jmp iret jg dec cld test (bad) mov (bad) clc clc fistp (bad) decl incl cld inc clc and loop out jg repnz es dec repz fildll fbstp lret mov push (bad) (bad) fcomps iret sar push mov dec (bad) popf (bad) ljmp jmp push std out out stc dec out cld xchg stc mov daa jg daa jg scas icebp in cli (bad) hlt mov clc pop jg (bad) in cli mov cmpl pop std (bad) stos (bad) jmp (bad) cmp cld std jno (bad) fnstsw inc das and cmc fwait adc push cld jno cld idivl (bad) aas pop decl jg mov imul xor mov repnz (bad) ljmp rcrb std fwait decl mov (bad) std fwait incl fistpll mov out neg icebp das (bad) fisub sub fstp stc scas (bad) out mov push mov (bad) std lret push push ja cli lahf (bad) std loop jo (bad) sti push (bad) clc pop cld addr16 call jg pop jg pushf repnz call mov loope hlt mov jp dec pop ljmp or sub mov leave aas mulb loop cld pop std fnstsw jecxz lahf cld loope lahf clc outsl (bad) jmp lret enter ja sarl pop (bad) (bad) cmp jp mov cli rcrl cld fnstcw mov pop (bad) call aas negb jg pop clc mov aas sub aas movsb (bad) (bad) fidivrl pop incl imulb pop out pop xor push (bad) xlat cmp repz xchg jg call in iret jle pop repz cmc outsl adc js jnp icebp idivl aas cli xchg xor (bad) adc push daa dec jg (bad) clc cmp jmp lahf cli mov (bad) dec cld mov cld xchg outsl icebp pop lcall jg out jmp (bad) ja mov int3 jg into (bad) mov lahf cld sbb fdivrs jg hlt jg fisttp mov sti fucomip daa (bad) xor inc (bad) addr16 (bad) jg shr pop cli mov mov out aas std clc push std sbb int3 jle (bad) (bad) lahf cld mov lcall std (bad) lods loop cld pop (bad) in (bad) idiv mov jmp jg imul lock incl std cmpsb jg dec (bad) fcos and call aam pop mov pop mov repz out lahf mov fwait mov out movsl clc sub jg out scas clc popf ljmp fucomi mov (bad) (bad) fwait (bad) jge hlt dec sbb push (bad) fwait mov dec jmp daa jg (bad) das (bad) jle mov jge pop leave jle lcall (bad) movq stos (bad) stc jmp mov pop repz jmp xlat mov idivl inc enter jg ljmp hlt in std adc outsl ljmp cld lcall es pop jle lret aas stc ja cmc jecxz (bad) out (bad) test sti cwtl (bad) push stos mov out cld aaa sar cmc pop imulb lret das cld mov (bad) icebp pop hlt dec (bad) jmp mov jmp jg int outsl cmc imul repnz fstps (bad) call lcall lds mov inc aas std cmpsl sar lcall out call aam fild mov mov (bad) in jg pop (bad) ss (bad) (bad) xlat call std ret mull cld jmp decl iret ljmp xlat adc pop inc lahf dec stc out idivb movsl stc stos mov adc pop aad pop cli dec push xchg jg outsl stc arpl sbb (bad) out stc aas lcall (bad) call outsl lcall cmp jmp (bad) out std into mov out and stc into ret jg call mov outsl dec cld imull jmp jg outsl repz cmp mov paddd scas jg mov call (bad) jmp decl loop sar (bad) jg decl divl clc call aas stc sti dec (bad) fistp (bad) data16 cld lahf dec repz decl repz call (bad) mov (bad) hlt das (bad) ficomp dec bnd divl clc stos call jg (bad) (bad) daa jle ljmp (bad) and decl loop cld cmpsl call aas clc punpcklwd pop inc jg mov jge clc cli loope clc mov jmp mov dec repz lahf adc cld jns lahf cld aad cmp fucomip dec repnz das sar das jmp call stc lcall jmp sbb cld (bad) jg mov jg sarl jge aas xor (bad) mov negl lcall (bad) in jle aas loopne decb out (bad) out (bad) cld cmpsl adc adc (bad) mov aas clc iret cmc hlt (bad) lcall cmp pop mov xlat movsb aas jle mov call sti mov ljmp pushl ja cmp daa jle xchg cmc out pop cld lahf pop dec jg popf pop push pop dec repz cld std bound jg repz adc std mov inc (bad) mov decb jg out (bad) mov out aas jmp jecxz hlt (bad) aas jle aas (bad) hlt (bad) xchg out mull (bad) sub in cmp std xor pop icebp cld jg popl decb mov out sub pop stc in out adc std mov hlt (bad) cmp pop inc jg mov jg pop std lods jecxz aas cld daa test (bad) push xchg mov cmp out ds lahf jg icebp mov scas incl (bad) lcall stc stc sbb pop mov and jge pushf sar mov inc aas sti stos dec mov pushl fwait cld ds incl iret (bad) mov clc out cli pop adc (bad) in pop cmc jecxz lock int sti pop sub paddd xor (bad) fisttp jmp scas stc jnp cld sbb cmc (bad) cmp leave lahf sar pushl pop aas sti mov (bad) (bad) sub pop jg in (bad) jle aas in (bad) insl call outsl cld xlat mov imul (bad) rcrl xlat stc push jg (bad) icebp enter aas ljmp idivl xor std sarl clc out cld clc aaa jp jnp mov imul jg cld adc pop divl aam js (bad) scas (bad) lock incl ljmp out xchg push pop dec repz cld rcrl (bad) mov (bad) (bad) cli iret push (bad) ljmp aad inc clc dec fldcw aas negb rcr cli scas popa mov out (bad) in (bad) mov jmp decl loopne mov mov or jg icebp ja sti xchg jg scas std arpl adc out or iret pop repz addr16 lcall std out sub fistp cld (bad) (bad) in mov inc jmp stc lahf std divl std stc mov mov ret pop ret std scas jg jg mov mov loop jmp decl out mov dec stc mov sahf aas call divl movsl idiv movsb fldl mov mov sti mov jg ja cmp jmp jmp stc (bad) lea clc aas incb (bad) in pop dec cli sti xlat ds adc pop adc cmp mov xor pop mov stc jns push rcrl dec mov adc (bad) das movsb mov incl cld notl (bad) sti inc (bad) in incl sahf xchg (bad) jg repnz sti mov clc cmc jg pop movsb cld push cld sbb dec (bad) loope fwait cld (bad) aas mov jmp pop es std ret dec (bad) std cli jg fistpll cmpsl dec (bad) call (bad) (bad) and das push (bad) mov div mull std std nop clc jg clc out and std cs iret jg cld (bad) fist jg jmp pop movsl stc sti outsl leave jle fnsave jg lods jg mov decl jmp fs (bad) push xchg (bad) fistp mov fldcw (bad) (bad) adc (bad) jmp std jg in pop and movss jg fnstcw jge sar jg cld sti in std jg cld (bad) pop and jg leave (bad) incl dec pop jle adc (bad) fisttp repz mov hlt pop dec repnz outsl (bad) jnp (bad) incb fistp out call mov (bad) mov pop mov dec std ljmp mov sbb (bad) out fistp fisubr (bad) (bad) cmp (bad) aas (bad) jge cmp mov jmp ja jg dec jecxz (bad) std repz adc jg cmc decl (bad) cli cmp lock cmpsl incl jg into outsl enter nop std sti in jg clc outsl inc mov hlt sti jae aas jmp lahf jg ret jg ja lret enter pushl sar jge jle mov fwait (bad) jmp jg loope hlt sti cld xlat fbld cld imul std aas (bad) fdivrp outsl enter leave mov pop push paddd popf in mov (bad) (bad) jmp mov std idiv cmpl out incb jbe (bad) aad jne (bad) sti cld daa jg loop fcomip out incb repz cld repz xchg (bad) cld paddd jg paddd scas mov sti mov aas loop fidivr sti mov cli pop (bad) insl mov mov cli (bad) decb fcomip (bad) cld outsl xchg cld cld (bad) call int and fistp pop xchg (bad) cmp mov jmp cld repz dec (bad) sti out repz ret jg (bad) out cld iret jg icebp loopne clc (bad) (bad) cmp out (bad) (bad) outsl das jg (bad) loope std mov (bad) cli out clc dec ds mov jecxz imul ja icebp (bad) js aas sti xchg mov out call ja mov adc icebp jg outsl jmp lcall std lock jnp hlt lcall sti add jmp lahf jg test sub shrb out inc mov addr16 shr lahf enter lcall (bad) dec (bad) pop dec decl (bad) ljmp decl ljmp push fidivr mov mov sti sarl jecxz lcall (bad) test mov loop clc cmpsl jg out out fnstsw es repz out sbb scas aas call (bad) scas pop mov in aas clc xchg aas (bad) mov std pop inc (bad) out jg std (bad) dec jle fist (bad) cli cmc enter rol dec (bad) loop std sar (bad) mov cmpsl adc pusha std std mov aas jns adc cld cmp pop std cltd xlat (bad) jg mov cld idivl cld loop cli push stc push dec inc incl jg scas stc xchg cli jmp ret aas imulb cmc std jg ja das jle pop cmp outsl mov pop jle aas (bad) mov jg ja lcall (bad) imul jmp fstps jg decb aas hlt mov mov mov das (bad) out icebp push loop (bad) aaa pushl lahf sub xor sti mov (bad) xor fucomi std gs stc imul shrl (bad) clc in jg lahf clc pop (bad) jmp ljmp push test jp pop (bad) clc lahf jge scas cld arpl jg imul adc cmp stos (bad) jnp pop incb pop jmp jmp (bad) adc paddb jmp (bad) jg mov mov lahf cld bnd xchg stc out lcall jecxz std lret cmp jg std call (bad) pop jecxz ljmp jp push push jg stc das lahf icebp clc incl sarb aas cld (bad) in mov xchg (bad) decb jg push ja pop repnz (bad) ljmp adcl jg out decl pop jg jne hlt sti xchg loop decl out inc das sub jmp pop cld fstpt (bad) jnp sub iret pop mull out mulb sar lcall or (bad) add jmp scas (bad) out loope arpl aas sub jg das (bad) jne in (bad) clc pop mov pop jg scas xlat in (bad) ss loop (bad) loope lock movsb mov push lcall push pop cld fwait decl push (bad) mov (bad) daa fs lahf imul movsl std jg sti push mov lcall xor xchg (bad) jmp popl jg jmp std (bad) push fisttp ret imul inc div jg std (bad) icebp (bad) clc jg sbb clc inc fcomip aaa (bad) in iret mov jg sar outsl cmp (bad) cli das cli ja cld xchg pop cld loopne,pt mov loop (bad) pop push (bad) daa dec decl jg sub in (bad) fistp mov stc icebp fstps imul mov fsqrt jge xor (bad) jg pop decb loop and in arpl std out mov daa sar sbb (bad) jg mov negl cli sti mov xor inc in ds stos decl aas pusha mov js scas and jno adc into aas std inc mov cli jmp (bad) (bad) out mov fistpl movsb mov mov (bad) dec and repz nop std leave test decb enter mov out fild iret scas lret div outsl fs incl mov negb (bad) decb jg imul (bad) cld (bad) adc cld xlat adc cld xchg jg loopne xchg call jg push stc jns sti cld sub mov test das das (bad) jb pop cli psadbw aaa and cmp sbb lahf cmc inc aas cmpsl clc jmp clc inc xchg sbb std push pop fdivrp stos aas xchg cld xchg cli sti mov cmc (bad) test std xchg push jle mov clc pop pop (bad) fnstsw mov jg popf sarl or jg pushl cld scas pop (bad) cld (bad) lret pop sti adc jg insl sub in (bad) fistpll dec jg push (bad) jmp ljmp (bad) out std xchg lcall mov jle xchg xor decl mov and std loope lock jb mov clc (bad) and or inc loope mov iret dec dec (bad) push mov xchg jg xchg (bad) decl mov repz adc incl lahf (bad) sbb std pop add cmp (bad) cmp (bad) out dec out incl decb icebp out lahf (bad) repz mov jnp fistpll pushl cld (bad) out (bad) fucomip mov (bad) call push jg xor mov mov jg ljmp (bad) jg aas pushl rcrb cwtl jg jg xor out jg (bad) (bad) jg repnz push mov jg mov hlt cmpsl in scas or pop xchg out jnp (bad) jg icebp fistp mov inc aas std iret push (bad) in mov jmp and in mov xchg jg jle (bad) std repz mov (bad) hlt (bad) scas movsb stc jg cli out scas in in es cmc ja (bad) in mov (bad) (bad) jns repz xchg push xor loopne jmp std add decl in jle inc aas (bad) (bad) in jg in xor jg loope ja sarl sti dec jg cld xlat cld (bad) pushl fistp (bad) in iret movsb (bad) aas and out pop std cmp sbb lock aaa lcall test pop mov stc jnp jle sub stc xor jg ss out pop sti ja inc (bad) repz aas stc mov xchg call fwait nop std cld pop jmp mov pop imul std stos decb jg and out push and jmp lret out fild jmp sbb fisttp mov std cld arpl inc aas fcmovb scas or pop (bad) jecxz pop cmc pop nop cld (bad) jmp (bad) mov les scas dec (bad) pushl in jg in sbb decl icebp out lahf testb cld sarl stc xchg in aaa and call pop nop cld (bad) mov push decl xlat aas dec cld call (bad) sarl shr mov fwait lcall dec and (bad) mov jg clc pop (bad) out mov scas cli stc iret mov jle pop and mov leave fbstp fwait in (bad) decl aaa loop jg std jg (bad) js cli jge enter jg out cli mov daa cld scas decl aas std xlat inc jg cmc (bad) aam scas dec cld lcall adc lcall (bad) jmp imulb inc sbb dec cli lcall hlt out inc stc cmpsl cmp lahf decb (bad) lcall xchg (bad) fnstcw icebp iret scas inc cld mov sti outsl sub xor (bad) clc mov scas and pushl std stc (bad) sarl pushl imul or pop out mull stc stc std into mov xlat mov aad sbb pop pop xchg aas inc (bad) out (bad) lahf pushl (bad) jg std std lret sub setb ljmp mov aas std inc call (bad) leave jle mov jg das incl addr16 jg jmp cmc (bad) out mov in jmp leave mov push (bad) ja cli aas (bad) jnp aas clc addr16 inc movsb jg stos aas clc (bad) cld incl lahf cld xor cmp (bad) cli fstpt dec icebp jmp xchg mov sub test xchg pop daa std repz push (bad) out lahf and repz mov cmp (bad) push shr idivl (bad) movsl in cmpl dec (bad) fdivrp push jmp out out inc div xlat stc jge jp lahf and mov jle jg jecxz aas cmc paddd scas jg mov (bad) sti test out pop adc jl jmp pushl cld (bad) clc imul mov adc std lahf aam fisttp pop cld inc aas clc mov lcall sub cmc xchg sti jg int ret xchg das cli push stc cmovae imul (bad) outsl std cld idivl out aad pop xchg (bad) cli inc sub je clc iret xlat pop jg ss jge sub dec decl (bad) push aas (bad) fistp cld repz nop push daa cld fstpt outsl (bad) aaa mov cli (bad) mov call cld subl mov nop in mov cli jmp (bad) std decl sarl icebp ljmp loope pop xchg (bad) stc fisttpll mov push sarb scas stc cmp loope mov jle (bad) jecxz sub xchg dec jle fbld (bad) sti dec scas (bad) int adc (bad) inc jg pop and or fistpl out pop (bad) stc std lea (bad) sti sub xrelease (bad) push repnz out jae stc and aas (bad) push fs inc mov and (bad) decl pushl xchg cld decl jmp out jg pop std or iret das and iret into jle into jg movsl cld (bad) scas inc icebp out out adc fistpll push pop sti cmp mov lcall out das stc outsl mov (bad) aas jp out push (bad) out std aam std jmp (bad) leave lahf std paddw lahf sahf jge iret (bad) mov stc mov sti sti cld data16 outsl repnz fistpll aas decl lahf clc idiv mov std dec rcrb mov das popa push (bad) decb mov (bad) iret cli push jmp inc mov aad mov aas xor mov xchg call fist (bad) jmp aas mov inc jle mov das (bad) fidivr aas cli cmp add lahf fdivr mov jecxz std dec jmp inc jg cld jecxz jg lods lahf (bad) movsl jg out inc jecxz push (bad) in mov push jg out das mov repz movsb aas (bad) sti jg pop mov stc stos decl jg aas adc incl outsl (bad) cmp out xchg jecxz loope dec hlt sti sbb mov mov jl icebp sbb mov xchg cli (bad) fisttp stc cmc outsl cmc aaa (bad) stc sub (bad) jmp (bad) mov incl pop (bad) jg,pt daa in std xchg std xor addr16 jle into in (bad) jle pop cmpsl idiv aam clc paddw xlat xchg (bad) std jecxz aas (bad) clc aas clc outsl mov dec cld xchg pop nop (bad) clc xchg lcall push (bad) cmc scas movsb (bad) out lcall cmp std jnp (bad) in and out cli out push (bad) decl stc jg cmp decl xchg lcall repnz decl jmp fist das jg out lds xchg jmp incl pop incl pop jg icebp fistp iret stc mov jae incl xlat std mov pop ret imull jb repz ljmp cld idivl (bad) lea jecxz and stc lods (bad) clc pop jg mov pop jg (bad) in add jle pop mov cld jg repnz jle rcrb clc fwait sub dec stc fwait aas xchg (bad) and xlat cld (bad) jg leave iret lahf repnz aas and fist ljmp jg adc (bad) ds mov inc repnz enter in std sbb jg into addr16 jg (bad) neg (bad) jmp lcall (bad) and jmp mov pusha std loop fcos pop (bad) jg pop mov mov jg pop inc bnd stos (bad) (bad) jnp (bad) (bad) cmp lcall mov jle xchg pop call push lret cli lahf ljmp sarb daa jmp (bad) rorl (bad) out dec incl icebp (bad) dec clc ljmp aas stc movsl in (bad) cld (bad) xor mov cli jecxz cmpsl idiv xchg in hlt idiv test aaa clc out jg (bad) cld lahf inc mov lret aad sti push stc das mov icebp addr16 sahf cld lds mov push nop call mov push out stc outsl std hlt cmpsl (bad) (bad) in mov call fucomip ja (bad) stos fucomip ja sar in mov pop push mov dec jg das clc popf ljmp call mov mov call fcomip jg mov cld pop sti cmc (bad) std pop push inc fcomip jg (bad) aas stc xchg push mov lahf jno stc add fdivr neg (bad) sti lcall decb (bad) xchg mov inc (bad) call stc outsl cld (bad) aas push jg jg jg xchg scas out (bad) loop negl mov mov lahf stc dec pop std loop call stc lahf cld push inc fucomip outsl jle addr16 xchg pop (bad) (bad) mov pop std ss scas mov out cli cmp (bad) outsl call fistpll lahf lock xchg (bad) out std out (bad) sti fildll aaa stos (bad) jg lahf cld std (bad) (bad) mov jne jg lahf lcall inc mov pop (bad) mov ja sti pop mov lret aaa std movq outsl cld in lock pop std and fcomip lahf out lret lds clc loopne inc scas stc dec dec (bad) pushl stc pop jg in pop out pop (bad) dec aas repz jg pop stc sub hlt xchg std mov aas (bad) (bad) cld outsl (bad) cltd fcomip dec sti pop jg mov jle cmpsl mov std cltd (bad) fstpt sbb push aas lock std scas jg pop bnd inc aas (bad) outsl call pop movsb out decl inc jmp stc sti dec das das mul mov cmp mov lcall repz std (bad) push aas sti sti (bad) stc call out cmc lahf jle pop js push cld imul lock (bad) lahf fistpll pop (bad) fidivr cli iret (bad) aad icebp das std mov mov jmp stc mov std rcr xlat pop cld out jg pop jbe cli std jle mov xchg icebp fcomip pop (bad) (bad) jmp std jmp lods (bad) popf pop mov xchg jg jg out jge lahf sti mov mov or sahf pushl jmp mov mov out decl arpl into pop ds jae xchg jae mov xchg mov call (bad) jg outsl std out into mov icebp lahf stc inc (bad) fidiv movsl mov mov lds stc xchg std out jl xchg push mov dec incb mov lahf not call push fcomip (bad) mov fcmovu (bad) popf pop cld xchg out cli mov out lds cld out cli push jg outsl stc pop push (bad) (bad) lahf repz dec outsl jle adc (bad) ja sti lods incl cmp aam clc clc daa jle lahf cld iret cld lahf push jg mov cmp sti mov cld leave jg mov loopne sti rcll icebp iret pushl (bad) mov mov scas cmp ljmp mov aas cld mov daa (bad) fimul sahf pushl mov jmp (bad) mov cmp pop stc cmp mov pushl pop mov hlt dec std pop push ljmp cltd jg aaa std sub repz pop (bad) (bad) mov lea mov ja jne dec (bad) cmp mov fstpt iret (bad) sti (bad) mov ret jmp fistpll inc mov mov out ja jg stos fucomip push cld fnstsw lea (bad) in iret cld cmp (bad) in loop cli adc loopne imul iret sti sub ja mov fnstsw cld dec call push (bad) (bad) in cld jle jmp (bad) mov dec outsl cmc cmp add outsl mov (bad) xlat inc mov (bad) jmp out jecxz cld jne mov lahf cmp jae mov das dec (bad) std xlat sbb imul fwait decb imul lahf lock lods (bad) mov cld idiv negb (bad) push mov (bad) stc addr16 fidivr jg fcomip cmpsl cld cmpsb mov (bad) cltd jg stc jg out cld popa inc out sti mov aad lock (bad) and aas jg aaa dec mov rcrl bnd (bad) decb jle aas loope jg fcmovnu std repz mov clc pop repz ljmp jecxz push dec std adc idivb lahf std xchg call lahf xor lret (bad) xlat in icebp ja sub lock aas mulb std jge fidivr (bad) pop cld pop (bad) cmc (bad) mov aas icebp jg (bad) mov and incb fildll sti cmp outsl jl negb pop fdivrp (bad) sahf (bad) adc cmpsl std jp mov jg das cld cmp push jg inc decb test test daa jg xchg inc pop incl stos mov xchg fucomip fnop aad outsl notb idivl cmc pop cld pop jg mov jmp jg ljmp outsb jnp jmp xlat std paddd inc lahf inc cld cmp ret lahf dec cmp std gs (bad) icebp aas in mov aam cli pop lcall lahf (bad) pop mov repnz incb inc pop jae aas (bad) shrl jg mov std adc repz out sti xor pop (bad) jmp jg ja lahf pushl pop jmp aas loop cld pop jg pop neg std push jg pop hlt cmp out mov sti std out lret lock xor or fstpl sti mov out in (bad) xlat jle pop lock jp (bad) mov (bad) mov sti jg loop ds popf sahf cld pop out jg sti jmp push jecxz lock stc (bad) (bad) pop ss test jmp fnstsw jecxz cld cmp iret cld pop mov cld pop fistpll (bad) add iret jle xlat jg mov pop dec (bad) mov pop sar mov ficomp mov das clc xchg into mov cwtl jg (bad) popf (bad) mov (bad) jge mov adc call cld pop jg movsb cmp sarl xchg jg pop hlt idiv cmp mov jmp cli in jb jmp daa jg ucomiss pop cli jg or outsb out jl lahf std lret mov lret decl jg idiv sub jmp dec std fstpt jmp pop mov push (bad) movsb sarl dec clc jmp cmpsl decb jmp (bad) mov push (bad) das mov mov data16 sarl xlat cld in fucomp icebp stos (bad) in jg scas sti (bad) pop std jge inc jnp (bad) mov sahf fcomip mov xchg jg scas ljmp (bad) lahf lock (bad) lods inc repz in pop clc loop aas xor pop pop (bad) out jg fnop outsl jl push cmp mov (bad) out sti sub mov (bad) jle pop icebp pop call idiv xor jg lahf pop std jnp jmp movswl pop jl out cmp pop icebp pop std cmp aas push pop mov aas ljmp (bad) call repnz (bad) jns cltd aas sti push jle leave mov cmp int xchg (bad) mov ja insl dec das pushl mov jmp dec data16 loop jecxz std sarl hlt out divl jmp lahf div jmp stc in sti mov fisubr (bad) std cltd jg jg pop std xchg out clc int xchg mov jne xchg mov inc jg jg addr16 scas call jg out pop sti xor out clc mov dec decb ljmp jg outsl cli fwait cld out scas jg in hlt or div pop (bad) aas cld mov aaa cli jne jg icebp push aad push decb popf sahf pushl (bad) outsl hlt xchg (bad) fnstcw mov push jg (bad) jg pop std bnd aaa cli arpl aas in out stc movd lahf (bad) int mov ljmp jg mov jle push cld imul cld rcr jg (bad) (bad) jmp xor mov jg aas lea lcall mov jecxz (bad) xor pop stc clc (bad) idiv mov repnz call aas cld or in jg jg fistpl (bad) (bad) mov cld stos (bad) mov icebp xchg cmp hlt jecxz out stc jecxz (bad) out mov idivb pop mov repz ds das incl pop (bad) mov mov mov aaa push std xchg mov pop mov (bad) outsl hlt inc mov scas std lret jmp out pop js xchg mov repnz dec fwait mov lods pop (bad) or jg addr16 mov mov out push std adc aad lock aad ficom out jg stc dec inc out mov rcrb daa cld pop mov cld outsb (bad) addr16 fdivrp icebp dec push pop scas std pop (bad) mov (bad) fcomip pop inc push jg jl test push (bad) pop mov (bad) mov popa jg lahf lock pop cmc adc outsl negl xlat pop bnd gs cmp scas std por idiv stos dec out cmp imulb pusha not cld insl mov mov (bad) (bad) fstps daa (bad) jp lds jmp push pop out aas lcall lods (bad) in pop out scas cld (bad) (bad) cli pop icebp ja dec call loope lock mov in mov icebp fcomip (bad) cld outsb mov ja jge hlt fwait cld xchg pop inc dec ds mov fwait jg iret sti pop lret pop (bad) call cmpl out jmp pushl mov pop clc lahf std xchg mov psubq incb cld (bad) pop pop cld es cld cmp in fcmovbe call mov fbstp pop (bad) push jg aas mov xor pop cmp out stos fcomip cmp ret idivl (bad) mov into jg idivl incb fwait pop (bad) imul daa jg cli loopne sbb pop repnz cld adc lods jg mov incb jg shll ficomp idivl ss (bad) clc mov cmc cmc repnz cld xor lods jmp outsl jnp jmp mov pop bnd aaa mov clc and fucomip ja rcrl (bad) cmpsb stos mov (bad) mov jg dec fdivr cmovbe pop sti xchg in (bad) imulb (bad) fstpt cli out mov jg jg out out sti cmpsl popf fdivr pop (bad) mov jecxz decb movsb pop addr16 clc fstpt cld push paddd (bad) in mov out pop sub mov dec mov xchg mov idivl cld es jle aas in (bad) out sti aas (bad) pop ja jg jg lahf cld jle lds jmp jno fucomip jbe sarl mov jg (bad) iret jle jg addr16 paddb (bad) in jmp pushl std int jg out repnz cs std push call aas clc imul xchg addr16 mov aas cld sbb pop xor push jg repz add scas imul std mov shrb sti cld (bad) (bad) (bad) rorl lahf cld pop pushl (bad) decl (bad) jg fist (bad) mov mov sahf std push jg out sti daa decb iret push jg jg addr16 push pop jg (bad) stc lock lcall jle fistpll cli in fsub fbstp jg jg addr16 movsl inc mov call jle mov sahf std push mov cld xchg aaa pop jg jg aaa fdivrl cld xor outsl mov lret fyl2xp1 mov jle cli scas cld gs pop jg mov into lahf mul jg in jle (bad) aaa dec lahf std (bad) icebp pushl idiv imul repz inc aas out pop fwait cld cli mov daa fidivrl jecxz (bad) jnp mov mov inc mov aas divb dec jle (bad) clc das jnp sub jle mov jae xchg iret decb arpl (bad) call jle daa (bad) jnp iret aas clc push mov sarl pop cld stc (bad) call fbstp das in (bad) clc push pop cld shrl cltd incb (bad) std out cli call mov pop imul jo lahf std and xchg push lahf aaa (bad) ja rol jg pop hlt sbb pop jg (bad) jnp imul std sub lahf lock jg (bad) fstps pop cld xchg mov jg hlt outsl repnz cld mov dec jg dec (bad) jp incl (bad) fistpl mov call dec (bad) clc out sti (bad) push pop jg lock hlt outsl cmc paddb les notl cld push mov (bad) inc mov (bad) gs jg lahf push mov aas loopne jg inc decb (bad) sti cld pop aas repz std rcrb rcrl outsl cld neg icebp shrl mov jmp (bad) jb sti sbb ja pop clc out push mov (bad) out std mov jg push or (bad) in pop (bad) fstpt pop stc mov mov cld idivl outsl clc das (bad) mov (bad) fnstsw (bad) jg iret sbb (bad) out jg std sti mov jge dec cld into das aas lcall xchg pop out (bad) aaa ds sbb mov daa cld ja ljmp pop ljmp (bad) mov in das push jg (bad) xchg (bad) incb push jmp push push push sti jecxz repnz aaa sti lods into incb std pop rorb iret inc pop out das clc bnd ja cmc mov dec mov mov rcrl popa mov in outsl mov push (bad) decl jg das (bad) aas dec pop jmp push in xchg mov (bad) cwtl jmp xchg ljmp push dec (bad) mov jmp aaa pop (bad) adc pop jg mov out decb fidivr push das pop std sub cmc scas cld loop stc (bad) in mov (bad) mov pop std sar push (bad) stos aas in xlat (bad) push decb or mov in (bad) pop decb mov pop lock jg jg outsl std adc call std (bad) ds fistp std in idivl push (bad) (bad) mov std pop iret xlat jg jg cmpsl cld jae stc (bad) xchg mov sbb test in jmp (bad) mov in mov mov incb shr std sti cld mov lahf cltd std sarl jp jecxz clc hlt ja cltd divb ret (bad) mov cmc idiv fldl lds decb fnstsw (bad) (bad) (bad) int aas call aam aaa jg pushl cli xor jg (bad) mov mov cld addr16 dec inc jg (bad) std popa (bad) in pushl clc jmp cmp std (bad) jmp out repz std cmp fsubr idiv add out fstpt mov mov (bad) div std cmp aas xor sbb (bad) jg aas (bad) out (bad) ffree jg outsl jnp fstpl fcmovne decl incl jg (bad) cli xchg (bad) (bad) clc (bad) movd sbb mov (bad) idivl sti idiv (bad) fcomip rcr jbe adc icebp dec fdivrp imul (bad) fucom xlat cld das (bad) mov pop dec mov call das clc xchg fcomip ljmp cmpsb addr16 cmpsl pop ljmp idiv jg pop jle pop stc mov scas clc out mov outsl repz repnz std fwait dec out sbb ja mov cmp cmp cmp std aam jae xlat lahf cld xchg jg aaa (bad) and leave jg cld pop pop lcall repnz aas repz cld daa (bad) jmp jmp xlat stc aas es in imul idivl xor lahf (bad) mov aaa dec (bad) mov jge aaa clc lods pushl cld shrl pop jl (bad) jnp add aas std lods inc idivb std leave jg call fistp (bad) leave lahf jbe hlt icebp sarl out in aas loopne incb cmpsl mov out clc pop mov incl pop (bad) sti jecxz cmpsb std dec (bad) mov xor add aas repnz jl out aas sti cmpl cld mov loop stc in scas (bad) mov jg lahf clc cmpsl incl jg mov aas (bad) cmpsl std lods inc (bad) cli (bad) ja,pt cld (bad) inc outsl sti pop cld push mov inc cld pop (bad) fisubr dec decl in dec cli idiv cmpl js incb (bad) out repnz cli xchg ljmp negl or inc cmp idiv add outsl hlt pop std insl mov jg jno xchg cmc jg (bad) std imul leave outsl repnz adc jg jno repz (bad) sarb (bad) fistpll push decl call lahf idivl jle mov leave das jmp mov fcomip fstpt sti (bad) clc repnz (bad) std jle mov mov pop (bad) cmc ja fsubrl cld in repz cmc cmpsl cld insl pop iret (bad) jmp inc lahf lock jmp pop pop (bad) incl incb ficompl iret (bad) xchg aas out outsl sti cltd dec lahf mov fistpl hlt data16 xchg std imul ret scas imul std jnp icebp jg outsl cld pop mov decb std in pop sti (bad) (bad) mov mov (bad) and (bad) movsb mov (bad) stc xchg leave jg jl cmpsl cld jge (bad) in pop incl (bad) mov icebp inc sbb dec lahf (bad) gs cmpl stc pop es stc adc das sti sbb (bad) (bad) scas and std scas (bad) jne mov lahf sti aas (bad) mov pop (bad) (bad) out xchg cld jne fidivrl scas sub neg jecxz (bad) pop (bad) clc fbld aas sti imul imul jg aas lock cli xor mov daa jmp lahf cld int mov out jg cmc call lods jle pop jnp repnz pop (bad) push aas stc out arpl aas cmc daa pushf (bad) jne (bad) iret cld cmp pop (bad) mov mov xchg mov dec mov loopne push std out jmp fcomip aaa mov mov jns lcall out pop (bad) aas std sarl jg (bad) (bad) mov pop jg lahf clc jmp push mov ds (bad) dec incl jg daa jg aas (bad) dec std sbb repz cld pop dec stc in mov test stc jecxz (bad) dec mov mov imul lods jle aas repnz js out lahf jnp pop std mov stc aas (bad) scas jg (bad) (bad) in pop lock loopne mov in pop clc xchg sti jg mov decb imul sar fcomip jnp jae (bad) aas xlat cld gs sti (bad) insl in fcomip inc cld popa pop mov stc iret sahf std inc jg out jle out jnp hlt das call ljmp cmc out std adc cmp movd mov dec pop sti repnz clc hlt (bad) clc jnp out int icebp lahf std pop (bad) fsubrp sarb std (bad) jle mov mov mov data16 aaa incl mov dec std mov loop popf call (bad) mov cld aaa call cltd aas loope cli insl (bad) out mov jge mov imull cld inc (bad) mov lret iret sti leave (bad) das clc sbb mov cld push inc jg out sti out out incl mov cmp pop jg jg fisttp add (bad) fstpl xchg imul dec lcall mov dec cli fnstsw jg dec cld addr16 jecxz (bad) lret cmp fcomip sarl jg,pn addr16 lahf jnp lods dec jg leave pop neg mov incl pop lcall std xchg jg mov mov ljmp out jle mov pop cld dec jg mov cmc mov mov cld sbb arpl pop div ljmp leave pop (bad) sti std lds idiv clc das js daa cld pop mov std jne shll std insl dec jg aaa cld addr16 decb call sti hlt jg int stos sar icebp xchg aas std rcrl aaa cld mov aam repnz jg outsl cltd iret repnz jg aas dec cld jns clc outsl cli outsl (bad) mov (bad) jnp mov loope dec jmp std mov sti cmpsl cmp addr16 dec fistpll mov fwait aas (bad) pop (bad) jno (bad) push fwait xor lock adc std fcomip (bad) std (bad) pop jl (bad) fwait std outsb inc out std ja ret fwait cld xchg jg sarl mov jg das clc repz push cld push (bad) jmp mov sarb std leave lahf lock sbb mov sti jne cld ret call pushf cld (bad) fcom mov (bad) stos jg aas cli insl (bad) xchg lahf cli xlat mov repz aas cli paddd mov cltd pop (bad) dec incb sti aas negb sti pop jg popf aas call jle (bad) lock jns mov jne out repnz arpl idivb lahf cmp (bad) int out repnz jmp (bad) fcmovnu std cld (bad) daa jle pop negl std xchg scas div lahf (bad) sub jg lahf (bad) das (bad) sbb jg fbld pop (bad) jecxz leave pop imul dec sti xchg jg das mov fcomip pop sti inc pop (bad) sarb repz sti pop out jle addr16 sbb jns pop sti (bad) (bad) sti aas in mov cltd pop repz jbe idiv jp sarb jle fucomip (bad) hlt (bad) outsl cld fwait call aas push (bad) cmp (bad) (bad) stc dec decl iret pop incb jp (bad) adc jg pop sti xor iret clc pop jg jg mov xchg sti (bad) (bad) mov push cld mov (bad) out (bad) jmp jo adc scas (bad) lahf pop cmp mov iret sti add aas (bad) ja mov jmp stc insl jg aas repnz sti fstpt sti cltd aas jne scas cli cmpsl (bad) mov clc jge in (bad) jl sti arpl jg dec cli pop lahf pushl mov push jmp pop mov sbb in cld idiv push jmp cmpsl mov cld jge rorl insb push jg jecxz testb jp std lahf lock std adc lods ljmp jg iret cld rcrb jmp push mov lock cld jmp fisubrl mov mov pop std adc jg stc or rep fdivrp sub ja jg lahf mull sbb das lahf xchg ja fidivrl jg outsl hlt sbb fistpll lahf lock ret in lahf jnp xlat pop std jle hlt cmpsl xchg push pop cwtl cld pop (bad) (bad) fdivrp xor clc sti mov xchg pop clc pop decl mov (bad) idivb decl std dec jg aas pop (bad) xor std inc pop mov (bad) sbb xlat incl jg iret cli aas (bad) mov jnp pop (bad) outsl (bad) (bad) (bad) mov daa jg rcrl repz clc lods (bad) outsl decl incb stos das mov mov push jg pop imulb out in cld dec jg pop jg jg pop std jno (bad) fisubrl lahf negl (bad) daa jg cli das sti sbb aad mov cmp scas icebp dec cld xchg mov jge sarl cli dec das jg aas std in paddw jle pop clc push ds sub repnz in pop dec jg pop (bad) (bad) aas sti (bad) (bad) lahf cld jae xchg jg jg sti iret (bad) popa jg jecxz jnp xlat call mov fdivrp sarl jmp aas cli daa decb (bad) cmpsb scas (bad) mov pop sahf inc aas jmp sbb setg jp fstps sti (bad) pop (bad) jmp stc jg jmp (bad) iret sti fwait pushl dec aas stc aaa (bad) in repnz xchg aas std paddw jg out mov sbb lcall pop jg aas icebp pop cld movq pop repz std and mov lahf mov outsl stc jmp rcr call and jg clc jecxz out ds test (bad) std scas std push cld cmpl lock ds lods (bad) mov jl addr16 adc aas cmc jg or fistp idivl fstpt (bad) ljmp jg aas decb cld out call repz clc mov popf fcomip (bad) clc pop jle hlt xlat jnp fwait cld push (bad) call out (bad) loopne mov (bad) adc cmpl std vpandn pop cld adc outsl not std ret inc dec (bad) std jg fcomip xlat int3 incl mov jg lahf lock (bad) mov loopne clc pop (bad) mov call (bad) ja cld call mov clc jmp mov cld cmp xchg daa cld loopne cld adc inc sarl (bad) ljmp mov (bad) cltd jg dec push xchg mov cmpsl mov clc in cli xor xchg jg ja mov cld repz icebp mov cli leave pop imulb std jnp std mov ljmp sti jg pop aas clc iret sahf std jne jle jg fstpl lahf cmc arpl pushl cmp lret dec out lock std jge xchg pop icebp iret (bad) sar int repz in repz sbb dec incb pushl (bad) mov cmc ffreep cld sti pop (bad) push mov loop (bad) xchg std sarb sub (bad) cmpsl lret aas out push aas repz cli dec (bad) mov fistpll lret jmp out clc sub xlat jle aas in (bad) iret incl jge mov imul je jnp (bad) pop push ljmp jmp leave out (bad) aas lock cld mov idivb idiv cmpsl fcmove in das cld test das jle scas jmp std push gs std cmp jg mov mov addr16 int3 lahf xchg cld sahf mov cld (bad) scas sti dec pop std pop mov push shrl mov out std test test (bad) mov fsubrl stos jg fcomip int ja cli sub mov repz sti fistpll sarl ljmp decl loop sti mov fs fwait push cmp fcomip in lahf xor outsw sti scas js repz std jle xchg jg fwait mov (bad) mov decl (bad) sbb cld cmp call (bad) ljmp pop cld (bad) jg iret clc jae jg aas clc aaa cli out lcall std xchg jg (bad) imulb incl mov iret cmp outsl lcall (bad) aad leave jmp xor (bad) (bad) mov sub (bad) insl jg jg (bad) sub pop (bad) (bad) cld sbb pop icebp scas dec jb pop sti cltd repz ljmp dec (bad) mov adc cld cmpsl push jg repnz outsl sbb aam hlt push cld inc call ja xchg (bad) iret std (bad) sarb shrl std hlt jg sub aam clc pop pushf (bad) fidivr pop mov cli jge mov outsb hlt fwait iret (bad) fidivr jle fucomip pop js jg (bad) jecxz stc pop cli xchg dec jmp hlt idiv in (bad) (bad) mov std inc jle out decl ljmp xor and xchg aas out std inc inc call pop idivb sbb repnz (bad) adc aad icebp pop incb sti iret (bad) mov push scas incb (bad) mov mov decl sti aad fisub jae or addr16 pop testl sub cmpsl out aas ljmp (bad) jmp loope ret mov iret sti pop lcall (bad) cmp rcrl cld (bad) in mov idivl jmp (bad) mov repz imul icebp imul aas ljmp cmpsl std leave mov decb loop aas out mov ljmp (bad) cmp (bad) cli std jle pop inc incb aaa std insl (bad) clc out test icebp call mov in fstpt cld imul outsl hlt inc cld (bad) jg scas icebp cmp iret cli sti (bad) jb scas dec aas pop pushl fcomip jmp cmpsl jg js aaa clc cltd pop cli or mov loop (bad) dec decb not cld ret (bad) pop repnz xchg pushl cld jnp ja cli (bad) (bad) mov cld outsl stc sarl (bad) in lahf sti xchg jg,pn fnop sar sarl mov (bad) pop pop std adc decl repz mov mov xlat incb roll jg (bad) sti add pushf cld dec mov (bad) mov jle iret es jle aas loopne stc sub aad (bad) dec (bad) mov (bad) fnstsw pop cli aaa jle mov incl aaa mov xlat incl decl mov (bad) ljmp ja and mov cmp jae (bad) jle outsl hlt icebp das cli testl call std (bad) mov arpl fcomip jg imul stc fisubr pop (bad) sbb (bad) mov pop (bad) mov (bad) out aaa mov mov cld leave mov lock cld xlat pop scas decl mov (bad) cli pop (bad) dec (bad) fwait jmp xchg dec inc lahf lock std mov lret scas (bad) fdivrs std sbb mov pop jg jg pop std ss (bad) dec call (bad) mov in call incb in aas in mov iret pop icebp jg or pop stc (bad) jge mov outsl imull std xchg pop (bad) fldt loop sti jae mov cld dec sti adc in fucomip loope sti jnp outsb stos mov dec (bad) in cld aaa (bad) (bad) mov lahf stc fwait incb pop pop dec lahf lock test aaa stc lret (bad) aam push in icebp aaa call push das lcall iret sti negl aas lock std loope sarl mov cmp outsl std push lahf decb jg cmc mov decb jmp inc lahf bnd xchg mov pop stc paddb in ja mov sti pop sbb ja jmp idivl jge out clc adc mov mov in (bad) pop std movq mov lahf (bad) stc mov jle aas cld pop cld lret jg daa jg jmp repnz out cli sti incb icebp pop cli lret pushl fnstsw out hlt clc cld fnstcw repnz outsb jg (bad) std out mov jmp in mov repnz mov (bad) pop incb (bad) mov out or (bad) mov addr16 ficoml sti inc cld jns sar icebp jmp out clc fcomip mov lahf pop cs das cli daa incl rcr out in stc sbb cmc call fbstp xor jg std mov in (bad) (bad) in jg xor (bad) (bad) push xchg cld jae (bad) out mov fisttpl xlat sti sub mov (bad) out out lret outsl repz outsl repz mov daa cld mov fstps (bad) aaa decl lock mov fstps scas repz cmc mov cld dec aas sti or mov mov mov lret (bad) addr16 paddb (bad) out cmc addr16 arpl lcall das lahf std popf sti jmp into scas repz lahf sti dec decb (bad) repnz mov push jmp iret jle mov scas jne jmp push inc pop divb mov fildll cld sbb std sti (bad) decl incl ret mov std cli jg idivl fld clc pop std mov mov incl int mov cld addr16 arpl pop mov out jg aas icebp scas mov jle jg (bad) cltd mov out popa (bad) jg jecxz fstpt pop sti popf push ds jle pop jbe cmp jge jg decl mov jg (bad) lock std sbb mov fcoms fstps push shl (bad) fidivrl not mov idiv mov in cld int cld jp xlat (bad) pop jno cld lahf cli hlt (bad) (bad) std jg pop jg jg loop scas incl std jle fldcw cld jmp cld stos jle jmp mov fidivr pop cli out inc jmp pop decb clc jne mov movq pop jg idivl sti mov (bad) lods call fnstsw daa pop cld cmp ja stc outsl repz std jg outsl lock (bad) mov std cmc outsl (bad) mov pop cld jle in icebp sbb loope (bad) jg lods jle (bad) out lds jmp inc mov mov (bad) dec jg aaa decb jle push cld jnp fyl2xp1 jg fwait cld fidivr (bad) hlt mov push aas call cli in lahf (bad) push lret mov and mov xlat (bad) jb ja xchg (bad) fdivrp cmc jnp jp sti repz cli idivl ret jg xchg out inc inc mov popf lcall jg call (bad) negl pushl fistl inc mov into fcomip pop cld imul ljmp xchg jmp in mov fwait (bad) dec pop mov mov pop clc or cmpsb mov jg lahf jl jg cmc xchg std (bad) (bad) sti mov cld mov (bad) ja out (bad) das decl clc sbb push cmp std sbb aas stc jg dec jg lahf imul aaa js mov in jmp (bad) stc lret jle (bad) cli (bad) shll loopne std idivl lret jg dec cld leave pop cld cmp (bad) mov enter test cli iret std (bad) mov mov jg jnp (bad) (bad) repz lds std cmpsl call scas imul ljmp int lock jg aaa cli popf jg out into iret cld sbb outsl repnz push (bad) jg mov push jg mov repz imul repz (bad) mov jmp jle fucomip movd cld jae jecxz (bad) lret (bad) mov repnz aas stc test idiv movsb fildll shl pushl sti sub in out ljmp repz call aas sti xchg std push mov jg inc jg outsl neg decb ret jg,pn mov mov rcrl sbb cli jg (bad) push mov cmc mov out stc lahf std pop outsl jle lahf (bad) or lock sar cmc repnz cld xchg (bad) loop imulb outsl jle xchg mov cld mov mov insl incl and (bad) pop jmp (bad) fldcw aad repz pushl hlt idivl sti pop (bad) fcmovu out ja xchg mov lock cmc dec pop out jecxz std pop mov mov mov out cli iret (bad) sti jg out dec jle fucomip idiv movsl cmc pop mov cli (bad) xchg (bad) jmp incl dec daa das (bad) in jmp daa std sarl (bad) in std (bad) jnp (bad) (bad) imul std mov cmc mov repz cs lahf std fcom lahf imull mov out cli fcomi jle pop sbb fwait inc imul repnz mov mov xchg mov or mov jmp les in leave jg in iret cli pop lret idiv (bad) cli mov jg mov push aas clc xlat (bad) loope in fcomip imul mov (bad) mov (bad) jmp test aas std xor ret jg stc jmp jle jg sti xchg (bad) cmp scas mov jg cs decl mov fwait jle outsl jl (bad) mov ret pop mov cmp loop sti dec scas jg mov sbb out jle jg ja sti (bad) repz clc in flds lahf clc dec (bad) xchg jg dec stc (bad) pushl (bad) addr16 jg addr16 sub out pop std (bad) aad mov (bad) in outsl xor pop (bad) (bad) jg idiv dec incb pop (bad) addr16 mov call (bad) stc (bad) (bad) out into jg pop sar mov inc cld pop (bad) in jg xchg cmpl idiv incl aas stc mov lahf testb lahf lock call jg ja stos aas jmp out (bad) (bad) cli in pop mov aas lock scas jl fistpll cmpsl cld cmc scas icebp dec idiv pushf fildll ljmp outsl mov dec mov push pushl stc adc fcmovne mov bnd sbb icebp jg jg pop lock cld std scas mov mov jg scas sbb ja icebp scas repz out jecxz cli jg jmp std sti aas std cmp outsl cmp (bad) cli sti scas movsb cmc (bad) pop repnz stc (bad) idiv mov incl lods jg add lahf pop sar divl in xchg (bad) pop jg pop aas (bad) mov call (bad) lahf cli scas stc fwait (bad) fnstcw mov std add pslld and std cld loope hlt aaa jl out call pop inc jmp jg outsl icebp xchg cld loop in std xchg sbb iret sub rcr cmc scas mov fdivrp scas imul mov lcall inc call (bad) cmp xlat dec je jge imul mov enter jmp jnp jle aas ljmp fist (bad) decl mov inc out cld (bad) cli in scas cmpsb cmc pop out call sti inc jg jg mov leave ret aas call lods jmp mov cli pop inc fstp ljmp jmp clc (bad) das cld cmp cmc mov out (bad) mov idivb idiv call aad (bad) lahf repz xchg mov (bad) (bad) out out cld (bad) push (bad) stc cmpsl cld lret mov clc (bad) mov xor jmp aaa lahf sbb leave sarl aas gs (bad) push aas clc out lret iret int3 (bad) mov ljmp aas xchg incb daa std (bad) shrb std imul stc outsl repnz (bad) ljmp xchg jg pop (bad) imul (bad) push pop (bad) jge adc dec (bad) pop jl sti lods adc jnp repz out cli xlat jl,pt hlt jmp std (bad) pop rep mov cmp cmc idivl dec fnop xlat ljmp (bad) mov loope stc scas decb cli cld scas cld loop cld in icebp (bad) out hlt xchg std mov iret mov repnz scas inc mov out std (bad) fcmovu ds (bad) fdivrp xchg jmp jmp lcall jmp hlt std incl inc push dec inc add add add add or add jbe xor xor add add add add add and add jge add push je imul add add and add add and dec inc add add add and outsl bound add add add push cmp add add add add add add add xlat add add add add add add add stos add add add add add add add inc add add add add add add add add add add add or add or add add add add add add add add add add add add add add add add add add add add add add add add add add adc push add adc adc push add movsb add add mov add cmc add add add add add add add add add add add add add push add add add add add add add add add add add add add add add add add add add add add add add add add imul mov push add add add add add add add add add add add add mov or call add add add add add add add add add add inc add add inc add add add add add xor inc add pop add nop add stos add roll add add mov push add push loop push add push mov push add add push fiaddl or testb push adc cs jns adc push pop jns or jne inc add add add pop fiaddl push add pop adc or in out pop or sbb out pop or jge fiaddl or nop or push or popf or push or pop or add add add or add add out pop or jl mov push add or or add add or pop push add push add add test push add or add add or or add push or add add add add add or or pop or sbb pop push add add mov or add add or or add or sub add push add add push add add add add add add or fimull clc or adc adc push add push add add add add add add inc add add add push push add add bsf push add movlps push add add add (bad) psrad push add psrad push add psrad adc stc pmaddwd adc or cmc add add adc add add mov push add add adc add add adc add add adc add add adc add add adc add imul add sbb ret adc push add adc add add adc adc adc adc stos adc or ret adc or (bad) adc add add add push adc add mov adc push add adc add add add adc cmp dec adc pop adc jle addr16 adc push add add add adc loopne movl addr16 addr16 push add add pop adc push add pop adc push add pop adc push add pop jns adc icebp pop or adc and or or xor add jns adc jbe lea adc (bad) sbb sbb add add add sbb add add movl adc adc mov add add add and push add dec sub add add sub push add sub add add sub add adc push add sbb sub imul inc add add adc push add add add adc push add add adc adc push add add cmp add add cmp add add cmp add add jnp add add add add jnp add add jnp add add jnp add add movl rcrb add add jns inc add add add rolb add add add jl add add jl add add jl add add add adc add add add add add add add add add add add or add adc mov add or add sbb add add sbb add add sbb add add add add sbb add add add add pop add add add pop das add std add pop add add add xor add add add add add push xor add add add add add out xor add add add add add or leave add add adc imul add add add add aaa add lea into add add add popa aaa add lea into add addb add cmp add add cmp add add cmp add add cmp into add add add add into add sarb iret add add add add rolb xchg add add add add add roll cwtl add add add add add mov add add add add add aam movsb add add add aas add add aad test add add imul add add add movsl aas add add xlat add add aas add add fadds mov add add sbb add add add add add add fiaddl mov add add add add add add inc add add faddl les add add pop inc add add fldl enter add inc inc add add fiadd int3 add add add add add add add add add add add add add add inc add add loope fadds add add sub add add add add add add add add jecxz loopne add add pushf inc add add in in add add (bad) inc add add in call add inc add add out in add add add add add add add add add add add add add add add add add add add inc add add ljmp add inc add add jmp add add add insl inc add add in add add add cmpsl inc add add in add add add add inc add add out add add add sbb add add out add add add add add add lock add add aad add add repz add add add inc add add hlt add add add add add add cmc add add add add add add add add add add add add add add inc add add clc add add add add add add add add add add add cli add add add add add add add add add inc add add std add add add add dec add add incb inc add add add add add incl inc add add add add add add add jmp add add add add inc dec add add add push add add add add add add pop add add add or arpl add add fimul add add add add add add add add add cld dec add add adc je add add aaa dec add add adc add add add add push add add add add add add dec add add sbb test add add pop dec add add sbb mov add add pop dec add add sbb mov add add xchg dec add add sbb nop add add add dec add add pop add add add add add add add add add dec add add and mov add add add and cmpsl add add add add add and stos add add add add add add dec add add add add add add sub mov add push add add sub mov add add add sub add add push add add cs add add add add add das add add add add add add add add add push add add xor roll add add sub add add add add add add add add xor fildl add add sahf push add add xor fild add add sbb add add aaa add add add add add add cmp jmp add push add add cmp out add add add push add add cmp repz add add add add cmp add add ds add add add push add add inc add add add add push add add inc add add add push push add add inc add add add add add add add add push add add inc add add add add push add add inc add add add add inc add add add add add sbb add push add add dec add add add add push add add dec add add add sub add add int add add dec add add add add pop add add dec add add add add add add push add add add add add cmp add pop add add push add add add xchg pop add add pop add add add rcrl add add dec add add add add add pop add add add inc pop add add pop add add add add add add add add pop add add add pop add add pop add add add xor add add add add add add add push add pop add add bound insl add add add pop add add arpl jno add add ds add add add add add js add add add add add mov add add add add add jmp add add add add add pop add add push add add add mov add add mov add mov add add negl add add add add add pop add add insl add add add add outsb add add outsl add add pop add add jo mov add pop add add jno cmpsb add add add add add jb stos add add add add scas add add add pop add add je mov add add add add add mov add add cmp add mov add add add ja mov add add ret add add pusha add add jns movb add add popa add add jp lret add add add add jnp into add add add add add add add bound add add fadds add add push bound add add add add addl add (bad) bound add add add add arpl add add add add add add test in add add add add add add arpl add add add add add add add add add mov std add add add add add add add add add add add mov or add add xor add add add add add add mov adc add add test add add add add add nop add add add add data16 add xchg add add add add xchg add add add add xchg add add data16 add xchg add add add add add add xchg add add add add add add add cltd add add add add add add lcall add add add pushf add add add nop push popf add add add push sahf add add add add add add add add add mov add add add add mov add add add add add imul add add add push add add add pushw add add add add add add add push add add add add imul add test jo add add push imul add test add add add add add imul add lods add add add and add lods add add add add add add add add add insb add add mov lea add add or add add add add add add mov xchg add add add insl add add mov fwait add add add insl add add mov lahf add add add outsb add add mov mov add add add mov add add add add add outsb add add mov add add outsl add add mov add add add add add xchg outsl add add mov add add outsl add add mov add add add add add add add rolb add add add add add add add add add add add add add jo add add add add add add jno add add add add add add movb add add add jno add add add add add add jb add add add add add add jb add add add add add add add add lret add add add jb add add add add add add jae add add add add add add add add into add add add add add add add add add add add add add add jae add add add add je add add add add add add add add roll or add aam adc add add je add add add add jne add add add add add add add add add add add add add add add jne add add add add jbe add add add add add add add add faddl cs add add fldl xor add add jbe add add add add add add ja add add add add add add add add loopne ds add add add add add add mov add add add add divb add add add add add xor add add add add add push add add in push add add add add add add add loopne add add out pop add add add jns add add add add add push jns add add add addb add add add add add mov add sub ljmp adc add add jl adc mov add add sbb add jmp sbb add cli add add push add sbb push adc loop flds adc outsl sbb pop add pop sbb sub inc sbb pop sbb jbe and add (bad) sbb test and add rcrl sbb repz or and add and add add and add outsl push and add mov and add mov add add push and add ljmp pop and add sbb and add xor and add dec pop and add fs and add jl and add xchg pop and add lods pop and add lds and add ficomp and add negl and add mov or add and or add and add pop and or add and add mov and add mov add add and and or add and add sbb add and or add sub add mov and add mov add add and or add and or add add and or add and or add and add and or add add add add and push and and and push adcb and and add and add jns dec or add add add and add frstor push or add and or add and or add and or add push or add and add jae and push add cs cs das and das and das and das and das mov das mov das mov das mov das mov das mov das mov das mov das mov das mov das mov das mov das mov das mov das mov xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor or dec or add xor inc xor xorl push adc pushf ss adc mov cmpsl push adc xchg cmp ljmp sub adc pop ds add add ds adc add aas push aas jp adc cmpl adc add add aas test adc xor mov inc (bad) adc add add inc out adc and adc add add adc xchg inc pop adc add inc sub adc pop inc aaa adc add dec adc add popa adc add out inc adcl add inc xchg adc add mov adc pushf inc (bad) adc add inc fsts adc adc adc dec inc add adc xchg adc mov add inc and adc xor add cmp adc js cmp adc addl inc dec adc add inc bound adc pop inc ja adc cwtl inc test adc roll adc add inc pushf adc add scas adc add add lds adc add dec aad adc push dec loopne adc lea adc add dec out adc add dec (bad) adc add dec (bad) adc add adc add add add add add add dec sbb adc int3 dec sbb adc aad sbb adc mov add dec sub adc add adc add dec sub adc jne adc add adc add add add add cmp dec inc adc add dec inc adc add dec pop adc add dec jno adc jno xchg adc stos dec fwait adc add mov add dec fwait adc add mov dec mov adc mov add dec (bad) adc add add loope adc stos dec out adc add dec add add dec add add dec add add push add add add add push adc add add xor add add push dec adc add push dec adc add pop adc add adc add add push push adc leave push push adc xor add (bad) adc add (bad) adc add add push xchg add push mov add xchg adc add add add push cmpsl adc add outsb push mov adc ja mov adc lret push ret add push (bad) adc add int3 adc add adc add add push notl add cld adc add add push cld adc add add push push adc adc sub sub sub sub pop xor xor xor xor aaa adc inc adc push adc addr16 insb adc jno adc cvtdq2ps pop mov fwait adc fwait adc mov pop lods adc mov adc xchg pop lds fcoms in adc aas pop lock lock or adc (bad) pop sbb adc divps pop sub adc (bad) pop cmp pop dec push adc negl push adc xor push adc imul adc cmpsb pop mov adc loope xchg push adc sbb push adc push pusha mov adc (bad) pusha mov pusha int adc add loopne adc aas popa repz adc jp push pop adc mov or adc mov add popa or adc das bound pop adc push sbb adc movsl bound pop adc loopne inc pop adc sbb pop adc and inc pop adc ja dec pop adc mov pop pop adc jmp popa pop adc es adc popa mov adc fwait fs pop adc (bad) fs adc adc pop adc dec fcoms adc xchg pop adc shll adc cld gs pop adc aaa data16 pop adc jb push sbb add add data16 adc and sbb add addr16 sbb add inc sbb add add addr16 sbb add push sbb jbe adc outsb push test add push push imul imul imul imul push sbb add sbb add sbb add add push sbb add imul add push sbb add push sbb add imul add adc cmp adc jne xchg sbb add add insb mov insl (bad) sbb add lret sbb add lret sbb add lret sbb add insl rcrb adc push outsb aad adc push outsb call outsb sti sbb add outsb or adc add sbb add outsl das sbb add cmp adc mov push sbb add outsl push sbb add jo sbb add imul add add jo sbb add add lea adc push jno sbb add add jno sbb add jb sbb add sbb add add add jb sbb add rcrl adc pop jae sbb add add jae sbb add je sbb add sub je sbb add add je sbb add jne sbb add jle adc test sbbl add jne sbb add jne sbb add jbe sbb add scas sbb add add jbe sbb add ja sbb add loop adc lcall ja sbb add js sbb add adc add add add js sbb add jns sbb add dec sbb and add add add add and add add add add add xchg add push xor add add xchg add xchg add add dec add add add push sbb add add add inc add push add add add add push sbb add add add add add adc sub mov adc push cmp push add adc sbbl push push add adc fwait sbb push add and adc mov pop push push add and adc int3 sbb push add add add push or sbb push push add add add push or sbb push push add add add adc mov or pop add add enter or mov add add push sbb add add add inc add add add add daa add add inc add add in daa add add addl sbb add add add add inc add add sbb add add inc add add add add add add inc add add dec sub add add add add add add inc add add je add add adc mov or or nop sub add add add sbb pop or lods sub add add sbb add add add add or xor or add add sbb add add add add sbb add add add add add fsubrs add mov add add shlb or add inc or and or add add add and add add addb and xchg adc add add addb and and add add addb and es adc add es or add add add daa sahf or add add add daa lods or add add add daa mov pop add add add push add sub das add add add push sub or add add add push add add xor add add add add add add add inc add dec add add sub add add add add inc or add add add push add add add add add jno imul add add add add add push add add push add add push add sub add add add add push add sub add add add add add sub add add pop add add add pop sub add add pop add add push add sub add add add add push add add add add push add add pop add add push add sub sub nop pop add add push add sub add add push add sub add add add add push add sub add add popa add add push add sub add add add add add add insl add add add xchg add das add add add add sub add add add add sub add add add add add sub add add push add sub add add add add add push add add jns add add add push add add jge add add add add push add add add add push add add add add push add sub add xchg addl add sub or add add add push add add (bad) add add push add sub pushf addl add add push add test add add add add add add add add push add sub cmp push add sub test push add cmpsl add push add add cmpsl add add add add push sbb add add add add xorl or add add inc add xor or add add inc add xor or add add addb and call add add xor add add add addb and xor or add and push or xor or add and push or or add add push sbb add add cwtl xchg add add add add lods xchg add add add add xchg add add adc mov add add xor add add add add push sbb add add add add xorl push pop add add add add loope or add add add pushl jnp pop add add add adc pop xor enter add adc je xor pop add mov add add or add mov add add or add mov add add or add add add or xor cwtl mov add add sbb adc rorb sbb add add enter add adc int stos push pop add mov add add or ss mov add add or aaa mov mov add add sbb add add add add addb and xor pusha add add add cmp add add cmp push add add addb and cmp outsl add add add cmp jno add add addb and add add add cmp ja add add addb and vmwrite add add addb and add add add add cmp lea add add adc add add adc add add adc add add adc add nop add cmp adc add add adc add add adc add add adc add nop add add xchg add add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor cwtl add add add add add add add add add add add add add add add add xor lcall add add cmp cwtl stos add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor pushf add adc sub add add add add xchg sbb xchg add add add add add add xor adc add adc addr16 adc add add add add add add add add add add add xor mov add add add add stos add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor movsb add stos add add adc fdivrl arpl movsb add lods add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor add add add adc pop aas jae movsl add add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor cmpsb add lods add add adc push aas adcl add add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor add add adc mov xchg adc add add add add add add add add add add add xor add add adc (bad) aas mov lods add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor lods add add adc add adc add xchg sbb adc add add add xchg sbb xchg add add add add add add xor adc add add add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor adc add add add rcll mov shrb sub add add add xchg sbb xchg add add add add add add xor adc add add add add lods add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor adc add add add inc lock add add add add add add add add add add add xor adc add add add inc call mov or xchg sbb adc add add add xchg sbb xchg add add add add add add xor adc add add add adc mov and add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor mov xor adc popf inc and mov inc lods add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor lods add add adc (bad) inc xor mov pop lods add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor mov lods add add adc adc adc add add add add add add add add add add add xor mov add add add pop adc add xchg sbb adc add add add xchg sbb xchg add add add add add add xor mov add add add lods lods add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor rolb lods add add adc mov add lods add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor lods add add adc clc inc (bad) adc add lods add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor lods add add adc xor adc add lods add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor scas add add adc insb inc mov scas add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor adc add add add adc movsl inc rclb into add add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor adc add add add adc fild adc add add add add add add add add add add add add add add xor adc add add add adc sbb rolb push add add add add add add add add add add add add xor or add add add add adc add add add add add add add add add add add add add xor adc add adc popl aad pushf scas add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor add add add inc pop add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor (bad) add scas add add adc add add add scas add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor adc add scas add add adc ds xor scas add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor fiaddl or add add adc mov adc add add add adc mov add add add adc mov add add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor fiadd dec scas add add adc testl scas add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor loopne fs add add adc das inc outsl adc add add add add add add add add add add add add add add xor add add add addl add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor scas add add adc mov add xchg sbb adc add add add xchg sbb xchg add add add add add add xor scas add add adc faddl add add scas add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor scas add add adc pop inc test in add scas add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor add add adc dec inc pushf add add mov add add add add add add add add add add add add add xor mov add add add add add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor adc add add add adc into inc cmp mov add add add inc cmp mov add add add add add add add add add add add add add xor mov add add add dec ficoml icebp add add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor adc add add add add add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor mov add add add add add add add add add add add add add add add add xor adc add adc rorl adc add mov add add add add add add add add add add add add add xor adc add mov add add add cmp mov add add add add mov add add add add add add add add add add add add add xor adc add mov add add add adc testl add xchg sbb adc add add add xchg sbb xchg add add add add add add xor mov add add add dec rolb add adc (bad) dec rolb add add add dec rolb add adc sub add add add add rolb add adc pop dec rolb add mov add add add rolb add mov add add add add mov add add add add add add add add add add add add add xor adc add mov add add add dec les stc add mov add add add add add add add add add add add add add xor cli add add add adc adc add add add add adc sub add add add add adc inc dec lret add add add add add add add add add add add add add add add xor add add add add adc cltd dec roll add xorb add add add add dec roll add add add add dec roll push add add add add add add add add add add add add add xor adc add adc push dec (bad) add add mov add add add add add add add add add add add add add xor or fdivs adc pop dec inc adc add mov add add add add add add add add add add add add add xor mov add add add add add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor add mov add add add dec push adc and xchg sbb adc add add add xchg sbb xchg add add add add add add xor or add add add dec imul add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor sidtl add add adc inc dec jle adc pop mov add add add add add add add add add add add add add xor mov add add add xchg adc add add add add add add add add add add add add add add xor adc mov add add dec inc adc mov add add adc call add mov add add add dec inc adc add mov add add add dec inc adc add mov add add add add add add add add add add add add add xor mov add add add stos adc add mov add add add add add add add add add add add add add xor mov add add add add mov add add add add add add xchg sbb xchg add add add add add add xor mov add add add dec stos adc add add add add add add add add add add add add add xor adc add add add adc add adc add add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor and pop mov add add add dec inc adc add add add add add add add add add add add add add add xor adc add add add adc jns add and add add add add add add add add add add add add add xor adc add adc mov sti adc add xchg sbb adc add add add xchg sbb xchg add add add add add add xor add (bad) mov add add add push adc sub fdivl add push adc sub call add add adc sub hlt mov add add add add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor sub sbb adc cwtl push push add add mov add add add add mov add add add add add add add add add add add add add xor adc add add add add push sbb xor push mov add add add add add add add add add add add add add xor adc add add add add push sub add add add add add add add add add add add add add add xor mov add add add cmp add add add add add add add add add add add add add xor add adc fwait push sub xor movsb mov add add add add add add xchg sbb xchg add add add add add add xor mov add add add push xor xor add add add add add add add add add add add add add xor ss mov add add add push add add mov add add add add add add xchg sbb xchg add add add add add add xor adc call add add cmp mov add add add add add add add add add add add add add xor add add add adc test add adc add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor inc add add add adc rclb add inc mov add add add push dec add dec mov add add add dec add pop mov add add add add add add xchg sbb xchg add add add add add add xor add add add add push jnp inc add add add add add add add xchg sbb xchg add add add add add add xor mov add add add add adc mov add adc mov add mov add add add add add add xchg sbb xchg add add add add add add xor inc add mov add add add push pop add loopne add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor mov add add add push pop add cld mov add add add add add add xchg sbb xchg add add add add add add xor mov add add add bound dec add mov add add add add add add add add add add add add xor adc mov add add add add add add adc enter dec add add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor dec add add add add push imul add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor add add adc cmp add add add add add add add add add add add add xor mov add add add add add add add mov add add add add add add xchg sbb xchg add add add add add add xor adc int3 mov add add add push cmp mov add add add add add add xchg sbb xchg add add add add add add xor adc call add add push stc adc clc mov add add add add add add xchg sbb xchg add add add add add add xor adc add add add adc dec push xlat adc add add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor adc add mov adc test add mov xchg sbb adc add add add xchg sbb xchg add add add add add add xor adc add add add adc rclb pusha add add add add add add add xchg sbb xchg add add add add add add xor popa add add add adc sti push inc adc push add add add add add xchg sbb xchg add add add add add add xor mov adc inc push stos adc mov adc pusha push stos adc test add add adc jns stos adc mov add add add add add xchg sbb xchg add add add add add add xor adc add add adc mov popl push add add add add add add xchg sbb xchg add add add add add add xor mov adc out push xchg add lock xchg sbb adc add add add xchg sbb xchg add add add add add add xor adc add add adc sub adc add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor insl add add add adc jne mov mov adc mov add dec mov adc cmpsl pop mov mov xchg sbb adc add add add xchg sbb xchg add add add add add add xor add push add add pop test jb js add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor mov adc xor lods add mov add add adc dec pop lods add les adc gs lods add aam add add adc jge lods add in add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor add add adc mov add mov xchg sbb adc add add add xchg sbb xchg add add add add add add xor jg or add add adc repz dec adc add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor jg sub adc cs popa adc add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor mov adc imul mov xchg sbb adc add add add xchg sbb xchg add add add add add add xor adc add add add jo add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor addl mov adc fistp adc add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor mov adc sbb add add add add add add add add add add add add xor mov adc push pop int3 add add add add add add add add add add add add xor add add add add add mov adc mov xlat add add add add add add add add add add add add xor mov adc jmp fldl xchg add mov xchg sbb adc add add add xchg sbb xchg add add add add add add xor cwtl add add add adc and add add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor mov adc pusha pop mov mov xchg sbb adc add add add xchg sbb xchg add add add add add add xor adc add add adc lcall mov xchg sbb adc add add add xchg sbb xchg add add add add add add xor adc add add adc rcrl mov add add add add xchg sbb xchg add add add add add add xor adc add add adc or add xchg sbb adc add add add xchg sbb xchg add add add add add add xor adc add add adc push pop add cmpsl add mov adc imul mov xchg sbb adc add add add xchg sbb xchg add add add add add add xor push test add add add clc mov xchg sbb adc add add add xchg sbb xchg add add add add add add xor mov adc fistp add add add add add add add add add add add add xor push stos add mov adc sbb add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor push lods add add add adc push pop ss lods add add add add add add add add add add add add xor lods add add add adc mov add add add add add add add add add add add add xor lods add add add adc (bad) pop push push lods add add add add add add add add add add add xor lods add adc add push lods add xchg sbb adc add add add xchg sbb xchg add add add add add add xor add add add pop xor mov mov add add add add add add add add add add xor mov adc je inc add add add add add add add add add add add add xor mov adc scas pop inc add add add add add add add add add add add add xor mov adc ljmp mov xchg sbb adc add add add xchg sbb xchg add add add add add add xor mov adc and scas push mov add add add add add add add add add add add xor adc add add add cmp mov xchg sbb adc add add add xchg sbb xchg add add add add add add xor mov adc cwtl pusha (bad) push mov add add add add add add add add add add add xor push mov add add add pusha fsts mov add add add add add add add add add add add xor push mov add add add add add add add add add add add add add add xor push mov add add add call mov add add add add add add add add add add add xor adc add add add add mov xchg sbb adc add add add xchg sbb xchg add add add add add add xor adc add add add popa cmp mov adc out cmp mov adc std popa cmp mov xchg sbb adc add add add xchg sbb xchg add add add add add add xor mov adc cmp add add add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor pop roll mov adc jae daa pop ret mov xchg sbb adc add add add xchg sbb xchg add add add add add add xor pop ret add add add add add add add add add add add add add add add add add add xor mov adc jmp add add add add add add add add add add add add add xor mov adc sub add add add stos adc add mov xchg sbb adc add add add xchg sbb xchg add add add add add add xor enter add add adc andb leave add mov xchg sbb adc add add add xchg sbb xchg add add add add add add xor lret mov adc mov add mov xchg sbb adc add add add xchg sbb xchg add add add add add add xor int3 add add add adc hlt arpl int sbb add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor into add mov adc das fs pop iret add mov xchg sbb adc add add add xchg sbb xchg add add add add add add xor mov adc push xchg pop rolb push mov xchg sbb adc add add add xchg sbb xchg add add add add add add xor mov adc movsb lods pop aam je add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor add add adc fbld flds nop mov xchg sbb adc add add add xchg sbb xchg add add add add add add xor pop fiaddl pushf mov adc sbb add add add add add add add add add add add add add add xor pop fiaddl mov add add adc push gs fiaddl les xchg sbb adc add add add xchg sbb xchg add add add add add add xor adc add mov adc nop gs mov xchg sbb adc add add add xchg sbb xchg add add add add add add xor mov adc lret adc add mov xchg sbb adc add add add xchg sbb xchg add add add add add add xor rolb add adc add add rolb add xchg sbb adc add add add xchg sbb xchg add add add add add add xor pop faddl and add add adc inc mov add add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor sbb add add add adc jnp mov rolb add xchg sbb adc add add add xchg sbb xchg add add add add add add xor sbb add add add add add add add add add add add add add add add add add add xor sbb add add add adc icebp cmp in add add add add add add add add add add add add add xor lock add add add adc push fadds lock rolb add adc outsb fadds lock rolb add xchg sbb adc add add add xchg sbb xchg add add add add add add xor lock rolb add adc test pop sbb add rolb add xchg sbb adc add add add xchg sbb xchg add add add add add add xor repnz rolb add adc loop outsb sbb add add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor hlt add add add adc and add roll add adc ds inc roll add xchg sbb adc add add add xchg sbb xchg add add add add add add xor roll add adc ja xchg sbb pusha roll add xchg sbb adc add add add xchg sbb xchg add add add add add add xor roll add adc mov test push add add add add add add add add add add add add add add xor roll add adc in push cwtl roll add xchg sbb adc add add add xchg sbb xchg add add add add add add xor sbb add adc daa imul roll add xchg sbb adc add add add xchg sbb xchg add add add add add add xor sbb add roll add adc bound sbb add roll add xchg sbb adc add add add xchg sbb xchg add add add add add add xor sbb add roll add adc popf imul roll add xchg sbb adc add add add xchg sbb xchg add add add add add add xor sbb add ret add adc fsubrs add add ret add xchg sbb adc add add add xchg sbb xchg add add add add add add xor sbb add add add push add add add add add add add add add add add add xor sbb add add add add add add add add add add add add add add add xor adc add add add add add add add add add add add add add add add xor sbb add add add push sbb add add add add add add add add add add add add add xor adc add adc std push add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor das add add add imul add ret add xchg sbb adc add add add xchg sbb xchg add add add add add add xor ret add adc jnp jp xor lock add adc xchg imul add ret add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor xor or add add adc iret imul add add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor add ret add add adc or xor cmp add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor ret add add adc inc insb mov cmp push ret add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor ret add add adc jle popf sbb jo add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor ret add add adc mov add xchg sbb adc add add add xchg sbb xchg add add add add add add xor ret add add adc repnz jae inc add xchg sbb adc add add add xchg sbb xchg add add add add add add xor adc mov add add adc sub add ret add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor ret add add adc jp jp inc add ret add add adc xchg insl jp inc add les add add add add les add add add add add add xchg sbb xchg add add add add add add xor adc sbb add add adc in jg dec add add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor sbb cmp add add adc pop outsb loope dec add add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor sbb push les add add add hlt sbb les add add add add add add xchg sbb xchg add add add add add add xor sbb jo add add adc xchg outsb xchg add add add add add add add add xchg sbb xchg add add add add add add xor sbb mov add add adc shrb sbb pushf les add add add add add add xchg sbb xchg add add add add add add xor les add add add outsl stos adc mov add add add add add xchg sbb xchg add add add add add add xor push add les add add add cmpsl add les add add add add add add xchg sbb xchg add add add add add add xor push add les add add add dec sbb lock add add add add add add xchg sbb xchg add add add add add add xor les add add add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor pop add lds add add add outsl pusha sbb sub add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor lds add add add jo adc inc lds add add add add add add xchg sbb xchg add add add add add add xor lds add add add mov pop add add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor popa add add add add add add add add add add add xchg sbb xchg add add add add add add xor arpl mov add add adc (bad) sbb cwtl lds add add add add add add xchg sbb xchg add add add add add add xor adc movsb lds add add add jno add mov add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor lds add add add xchg sbb lds add add add xchg sbb in lds add add add add add add xchg sbb xchg add add add add add add xor lds add add add add movb add xchg sbb adc add add add xchg sbb xchg add add add add add add xor movb add adc call add add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor movb add adc and sbb inc movb add xchg sbb adc add add add xchg sbb xchg add add add add add add xor jb dec movb add adc pop jb pop jae pop movb add xchg sbb adc add add add xchg sbb xchg add add add add add add xor adc movb add adc mov add adc mov add xchg sbb adc add add add xchg sbb xchg add add add add add add xor sbb movb add adc repz add mov add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor sbb mov add add add movb add xchg sbb adc add add add xchg sbb xchg add add add add add add xor sbb fadd add add adc push add movb add xchg sbb adc add add add xchg sbb xchg add add add add add add xor sbb hlt movb add adc mov add add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor sbb movl add jae sbb movl sbb adc add add add xchg sbb xchg add add add add add add xor sbb movl add je sbb movl sbb adc add add add xchg sbb xchg add add add add add add xor adc movl add cmp movl sbb adc add add add xchg sbb xchg add add add add add add xor sbb movl add je add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor addb movl add je sbb add add add add add add add add add add add xor addb movl add jne sbb add add add add add add add add add add add xor addb movl add jne sbb add add add add add add add add add add add xor sbb add add add fistp addl add xchg sbb adc add add add xchg sbb xchg add add add add add add xor movl add add enter add add add add add add add add add add xor enter add add jne add add enter add add jbe add add enter add add add add add add add add add add xor enter add add cmpsb sbb add add add add add add add add add add add xor enter add add add add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor enter add add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor enter add add jbe add add add add add add add add add add add add xor sbb add add add ja sbb add add add add add add add add add add add xor sbb add add add lock add add add add xchg sbb xchg add add add add add add xor sbb add adc mov add enter add add add add add add add add add add xor leave add add adc fnsave add add add add add add add add add add add add xor leave add add adc sbb add add add add add add add add add add add add xor sbb add add add adc push js sbb add add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor add add add add add push add add add add add add add add add add xor adc add add add js add add add add add add add add add add add add xor leave add add adc add sbb add add add add add add add add add add add xor lcall add add push add add xchg sbb adc add add add xchg sbb xchg add add add add add add xor add add add add pop add add add add jns sbb add add add jp sbb add add add jp sbb add add add jp add add jp add add add add add add add add add sbb add add movsb push add add movsb push add add jo add add ja add add scas pop add add inc sbb add add add sbb add add sbb add add sbb add add sbb add add sbb add add add and xor add add jp add add xchg and lods and lds or add add xor add add dec add add fs add jl add add mov add add add sbb add add xor add add dec daa add add gs add add (bad) daa add add out daa add add or add add mov add add fs add jl add add sub add add sub add add add and add add add sub add add add sub add add sub add add add add lahf sub add add sub add add add add add add add sub add add add sub add add sub push sub push sub cltd sub cld sub adc add add add add jbe add add stos xor add add add add add xor add add add xor add add add add add add add push add add add add hlt xor add add das add add or add add add dec xor add add xor add add add add jbe add add jo add add mov add xor add add xor add add add add inc sbb add add sub add add sub add add add les add add (bad) add add add add cmp add add push cmp add push add add add add les add add lds add add fidivr add add add add cmp add add cmp add add lahf cmp add add add cmp add ljmp cmp add add aaa add add les add add push add add jne add add mov add cmp add add cmp add add add add add add add pop add add cmp add add add cmp add add add cmp add add cmp add add cmp add add cmp add add cmp add add cmp add add cmp add add cmp add add cmp add add cmp add add cmp add add cmp add add cmp add add cmp add add cmp add add cmp add add cmp add add cmp add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add jns add add jns add add jns add stc jns add add add jns add add jns add add jns add stc jns add add add jp add add add add add add add add add add add add add add add add add add add add add add sbb push add sbb add pop add add add sbb sbb add add sbb add jns sbb push add add add add add add add add add add add add add add add add add add add add stc add add add add add add sbb sbb push add add add add add pop add add arpl sub lea push add sub cmpsb add sub mov add add sub cmc add dec add addl mov pop add popl sbb jnp xchg add mov add add add add add add add add add add add add adc sbb ss dec add push lret add add rolb add xchg add mov add add add lock adc jmp push lock dec push outsb add pop push outsb add add jno testl outsb add mov outsb add pushf push add inc add add push outsb add add push add sub add or popa add pop adc xchg add pop push add add pop sbb loope dec pop and jmp add add add add add add mov inc add add pop dec add add dec add add or add or add pop add add add inc or sub push or or add add push outsb add add jne sub adc jb mov sub mov add add add add or add add or add add or add add or add add or or add adc adc cmp sbb xchg add add pushf add or or or or or or or add mov add or or add add or add add or add add or or or add add fldl dec add or add sub in add inc or or add or or add pusha or add push or add add add add mov add add (bad) or add add or add add or add add or add add add add add add or icebp add add aam dec add add add loope push add jmp add or leave add or add adc add add or add add add pop or add add jo dec add jbe dec add jl loope jnp add dec add add add add add add or add out xchg add add or cmp movsb add add add add mov adc jmp add add add mov or mov add or add jecxz fadds cmp out or push push in dec add jmp push add aaa add aaa push clc add dec push incl cmp pop push add cmp gs fadds adc outsl push or imul icebp add add add add add add lds cmpsl add add push cmpsl add add add loop dec add add add movlps dec add sqrtps mov cmp push add add add add add fadds loope fs add add cmpsl add add (bad) movq adc lahf jne jnp setno test add add add add cmpsl add add add adc add add adc sgdtl cltd add add xlat add add add add dec add add add add add aaa add add add imul add les pop add add add add or mov aaa add mov add adc add add adc add add adc add add adc add add adc add add add push adc add add add clc add add adc add add adc and adc add add adc add adc add add add add add adc add add adc add add add adc adc adc add add xor add adc add add add clts add aad jp sub icebp adc adc adc dec add add cmpsl add add add dec add add rolb add adc add popa adc add jno roll mov (bad) adc add adc add add add adc add add add adc add add add add add adc add add adc sbb sub cltd add imul add adc jmp add add add add adc rclb jmp out mov add add push in add add add add add add add push add or push add or push add or and in add add push daa add xchg add add push push add add push push add in add add push or or popa add or or imul add add pop mov icebp add pop roll stc add add es addl push adc add add add sbb sub sbb mov add add add adc sbb push add sbb push add sbb push add sbb push add sbb push add sbb push add push sbb push sbb push sbb push and push sbb push sub push sbb push xor push sbb push inc add dec add push add pop add cltd add push add outsl push add jno mov add addl cli pop mov cltd add inc add add add sbb xchg add add sbb push add or add add add adc sbb xchg add add add add roll loope jle rorb insb add pop or add add add add xor add add add xor add add xor add add xor add sbb push add sbb xchg add add add add xchg add lgs flds cmp xadd cmp cmp psllw cmp cmp psllw add add cmp cmp psrlw cmp add jns jns (bad) add cmp jno add add sbb xchg add add add cmp sub add add or jnp sbb push insl jnp add jl pop add add push sbb push add sbb add popa push sbb add imul jno sbb add jns sbb add addl xchg push sbb (bad) add add add add add add add aaa or add add or add inc or add add or js mov add or add add mov rorb or mov xlat or add add cwtl add or add mov add test cli or add mov add or mov or add add rolb or add add add or add add or add add or aam xor add add or add add or add add or in inc or add add or in add or lock add add or clc add or cld add or add push add or or jb or or ja or adc jl or adc orl or add mov add add add add add add test add add add add add or add or add int3 or add or add (bad) or add or add loopne or fs or add ljmp or add hlt or add or add decb add or or or add or pop or sbb or xchg add or es sub xor xor add or aas or inc or dec or dec or push or pop or pop or bound addr16 insb or jno or fadds jbe or faddl jnp or loopne orb or mov (bad) or xchg or cltd or sahf or mov add add add add add rorl or movsb add adc insb push cs or sbb add or sbb add or jmp pop or add or or add or or add or sbb add or sbb or adc sub jae rolb add (bad) push arpl jae rolb add pushf push addl or add movsb add movsb add scas push mov add movsb add mov mov add aas pop test push rolb or cwtl pop ret add fadds movsb add fadds pop or add movsb add fadds movsb add mov inc add movsb add movsb add mov pusha add movsb add movsb add movsb add movsb add movsb add movsb add movsb add movsb add movsb add movsb add bound jecxz jae ret add or mov jmp lsl jecxz movsb add movsb add movsb add movsb add movsb add movsb add fadds movsb add fadds fadds fadds fadds fadds movsb add fadds movsb add fadds movsb add fadds movsb add movsb add movsb add fadds movsb add movsb add movsb add fadds movsb add movsb add sub mov add movsb add inc add or add add cmp push pop push fldl repnz adc and and sub cs incb push or or or or or or orl mov or or or or pop or or dec or outsb or mov or or dec or jo jg mov xchg or push sub push mov sbb jl movsl packssdw add add add xor add add add add add add add add add add add add add add sbb add xor jge add dec sbb sbb sbb xor add mov add add xor or push push add and pop push add cmp pop push add push ss push add (bad) ss aaa mov add add add add add or add add or add add add add add add add add add add add add add adc add and add adc add outsl add add add add add sbb add jb sbb add jbe sbb add add (bad) adc adc adc adc adc sbb and daa push std push add or das or clc or inc add dec and dec add and push add add inc add xchg add inc add out add inc add jle add inc add stos daa add inc add and add inc add add roll xor add ret add xor add repz add add add add cmp add add add add add add add push add add mov add add cmp or jp add iret or pop add add or add or add or jp add add add test add add mov add add or add push fiaddl add add add add popa add add add add add add adc add add add add push loop add add add add push imul add add add add pop adc add add pop add or or or or or or or add add add jnp add add add jnp add add add add add jnp add add add jnp add push and loop mov add add add addr16 outsb je js gs imul je insl add arpl add jbe insb imul imul jo imul push add jae gs cs outsl insb insb arpl outsb jae inc js gs imul imul arpl jae je jb dec outsb outsw add jae gs cs imul imul gs add jae gs cs push imul gs fs je jb add imul add jae gs cs gs dec popa imul insb imul imul jae dec gs outsl jb inc jb fs je popa insb add jae gs cs gs inc imul jns outsb outsw add jae gs cs dec add jb popa insl push jb je jb inc inc push inc jb jo outsl push gs imul imul je insl cs arpl imul je addr16 jo jns dec inc xor je push gs imul imul inc insb imul jb popa insl push gs fs push je gs insl add je arpl outsb je dec gs outsl jb push je gs insl add imul insl add jae gs cs dec cs outsl insl jo gs imul jo gs imul add je popa jo push jns je insl cs jb ja outsb add outsb popa jb push jb je jb push imul dec popa outsb popa gs jns je push je gs insl add jb jo outsl push jb outsb jae outsl jb add jns je push je gs insl dec outsl fs arpl cmp cmp imul jae dec popa outsb popa gs outsb je bound arpl popa jb push jns je insl cs popa outsb popa gs outsb je inc jb popa je push popa jb insl jae push jns je insl cs imul inc outsl jb jae push gs jne arpl popa outsb popa addr16 push jns je insl cs gs jne arpl add jae insl bound push jns je insl cs gs arpl outsb add push arpl je imul fs push jns je insl cs gs add outsb outsl ja inc outsl jb jae jo insb imul inc popa jae add arpl jae data16 push imul jae arpl inc jo insb imul push gs imul je push jae inc outsl insl jo je bound gs push outsb fs outsb add jo imul add je outsl insl jo je bound gs push outsb fs outsb addr16 gs jne je push jne add je dec jae imul jae popa outsb arpl jae je inc outsb popa bound imul jns gs jae je push popa jbe dec jns gs imul js je jae je push push ja push je insb add jne outsl ja dec outsl fs je dec popa imul inc outsl jb add add je jns gs jb insl dec popa outsb fs add outsb je insl gs jns gs popa outsb fs add outsb je imul push je insb jae dec imul je push imul jae arpl inc outsl insl jo insb gs gs imul je gs jne arpl je imul add outsl push arpl je add je jb push arpl jb jb addr16 dec outsb outsb gs js gs imul pop dec gs popa add insl outsl jbe add outsb je insl gs gs jo jb add jae gs cs jne je insl gs outsl insl jo insb gs gs imul je bound arpl insb jne add jne insb jae inc gs popa jae inc outsl fs je imul pop dec outsl popa add outsb je popa outsb fs gs push popa je add je gs jo popa je add jbe jb outsb insl outsb je inc gs outsl insb fs popa je add arpl insb inc outsl insb fs inc outsl outsb arpl add je inc js arpl popa bound popa je add je imul dec outsb je je add pop inc js insb imul jae outsl jae add outsb je outsl insb add jae outsb fs popa jns jne add outsb je imul je outsl insb add je inc jne outsl push arpl gs imul outsb jae push imul je inc jne outsl push arpl gs outsl fs je push arpl gs outsl fs je inc insb imul add jp add je inc outsl jb inc outsl jb gs je insb add jb inc outsl jb gs je insb add je dec popa js insl imul jae je dec imul inc outsl js jae je dec popa insl add je dec jo arpl jns jae je push push outsl outsb add je push push push popa jae bound add je push gs add je push imul popa je add jb push imul popa je add jae insl gs popa jns jne add jb outsb addr16 dec imul je push imul jae arpl dec outsb push je add insl jo jb dec gs outsl add bound jb outsb add gs jb jb push arpl jb jb outsl jo dec outsb gs popa insb imul gs add je jne jb outsb je jb arpl jae addr16 dec popa imul add outsl arpl jae outsl fs add je inc popa jae inc fs jae add outsb jbe jb imul inc outsl outsl insb gs outsb add gs je jb add outsb imul outsl insl jo jb dec bound arpl je jno popa insb add outsb arpl outsb popa je dec bound arpl popa je inc outsb fs imul pop dec outsl ja inc popa je push imul jo je jb dec imul je push imul jae arpl inc gs arpl add je dec gs outsl popa jb add jns outsl popa jb add je inc je insb dec gs outsl ja add je inc insb je gs outsl ja add jb add insl jo jb push je imul jo gs addr16 inc popa jo dec outsl arpl inc outsb fs imul dec outsb addr16 add je jb arpl outsb add addr16 outsl js dec jae inc outsl js gs insb je dec jae inc outsl js je insb add outsb je addr16 jae je push jae push push js arpl add je inc jne jb outsb je imul jns jae je push outsl jb imul arpl jns jae je inc imul jae je push gs add popa jb add imul jo push insb gs push jae jb dec jae outsb push outsl insb add imul add insb add imul insb gs add imul js add jo add jb gs outsl insl jo je jb addr16 inc imul insl add insb gs jns je insl push jb js add arpl jae data16 push imul jae arpl dec jns gs imul popa fs insb insb push gs add gs inc imul dec add je jo jb insl outsb je je je add popa jb insl outsb je je je add insb imul dec jae jne insb dec jb insl jo jns inc outsl outsb jbe jb add outsl insl inc popa jae ss je imul je inc insb insb inc jns gs addr16 dec gs outsl jb add je outsl jb add outsb insb outsl popa fs imul arpl jns inc gs imul inc imul imul fs outsb insb jns outsl insb insb arpl outsb pusha xor push jns je insl cs outsl insb insb arpl outsb jae dec bound arpl fs add outsb je imul pop dec gs imul outsb fs insb insb push gs add je jb arpl jae jae jns popa insl add insb insb add add je inc outsb je jns outsl imul push outsw add je outsl jb dec outsb je jb popa arpl push jns je insl cs gs dec gs outsl jb dec outsb outsw jb popa je outsl outsb add je insb insb dec gs outsl jb dec outsb je jb popa arpl add je dec gs outsl jb dec outsb je jb popa arpl jns add je outsl jb dec outsb je jb popa arpl jns add je dec jo jb je outsl outsb popa insb push je je jae dec jo jb je outsl outsb popa insb push je je jae dec gs popa addr16 outsl js push push imul jae insb je dec gs popa addr16 outsl js jne je outsb jae dec gs popa addr16 outsl js arpl add outsl jne insb add jo popa arpl addr16 dec popa insl add je inc insb outsl arpl inc insb outsl arpl addr16 dec outsl arpl push imul pop dec outsb outsw add insl jo je jb outsb outsw add je dec outsb jae popa insb insb gs dec inc jne je jb add insb je jb dec outsb outsw add jae gs cs insb outsl bound imul add je dec push inc jne insb dec popa insl add je inc jb insl add je push outsl add imul jae outsl insb insb arpl outsb add je push jne push arpl gs inc outsl fs jae je push outsl jb add je inc outsb popa bound jae add je inc jb fs je popa insb jae dec inc jb fs je popa insb jae jns outsl jae add outsb add je push imul imul outsl js add je popa insb jne add imul insb jne dec imul jb jae data16 push imul insb gs jns je insl dec outsb outsw add je inc je jb bound gs inc imul bound gs inc jb jbe dec outsb outsw add je jb jbe jae addr16 inc jb jbe push jns add jbe push jns add je jb je jb push jb je dec imul jae add je je jb bound gs inc imul insl add insb gs outsl jo add imul jns dec jo outsb push jne dec gs inc outsb arpl imul pop push outsb imul gs jns gs dec popa jae inc insb outsl jb je insl add insl jo je dec popa jae add jb jns inc inc push add je dec gs push jns insl gs imul imul pop dec outsl fs jo gs outsl fs gs je inc arpl jo outsl jb inc gs je imul pop inc push inc dec dec add gs je dec outsb jae popa outsb arpl dec gs popa je inc imul dec popa je inc gs inc push push jns add jbe jb outsb add gs popa insb insb add je push gs imul jae outsl outsb add je dec push push insb popa je outsl jb add je dec push push gs imul outsb push gs add popa fs outsl inc outsb add insb gs je gs insl add jbe outsb je add je inc je popa arpl outsb je add je arpl outsb je outsl insb insb arpl outsb add je outsl outsb jbe jb gs push outsl dec outsb je xor push jb je add je push outsl jae je outsl outsb add popa add je push push inc cmp inc gs jb arpl jae jae addr16 push jb arpl jae popa insl add outsb imul gs inc jb popa je inc imul jns addr16 push arpl outsb add jb outsb add je inc outsl jne fs push arpl insb add popa jo imul insl dec insl popa add popa add jo inc jb insl push arpl outsb add imul add bound jno gs add gs je add jo bound jno gs add jb fs je popa insb jae jae je dec gs outsl add je gs gs push je gs insl add popa fs insb insb inc jns gs inc outsl ja insb outsl popa fs je imul pop push imul jns addr16 inc insb imul add imul push jb js add je gs add je dec gs imul pop inc insb outsl arpl imul push outsb add je dec push add je dec gs imul pop push popa fs imul add add je outsl jae dec popa insl add je outsl jae inc outsb je jns dec push dec outsl jae inc outsb je jns addr16 inc fs jae dec imul fs jae add je inc fs jae inc popa insl imul gs inc popa insl imul gs cs gs push outsl arpl je add fs data16 je dec popa arpl outsb gs popa insl add je dec popa outsb popa gs outsb je bound arpl insb insb arpl outsb add je outsb jne gs je jb dec popa outsb popa gs outsb je bound arpl jne gs je jb addr16 inc jne jb outsb je dec popa outsb popa gs outsb je popa jae dec bound arpl gs dec je insl add jbe dec gs add gs je add insl bound add je jbe push imul jb popa je dec popa outsb fs add je dec popa outsb fs add pop inc jno popa insb imul jb arpl dec gs popa add data16 outsb arpl jno popa insb jae addr16 inc jae gs bound inc gs bound arpl gs imul add jae gs cs outsl outsb imul je outsl outsb add outsb arpl outsl outsb imul je push popa jbe dec jns gs imul js je inc jo insb imul push gs imul add push arpl outsl ja outsl outsb je outsl insb add arpl outsl jb jns arpl imul popa insb jne push jns add fs push push ja add jne outsl ja inc jbe outsb je popa outsb fs gs inc gs outsb je jns jae gs bound addr16 dec outsl arpl imul pop push jns je insl inc imul jns addr16 inc push inc gs popa outsb outsl insl inc imul inc push inc js outsb jae outsl outsb add je imul jns popa insl add outsb je add data16 inc insb outsl arpl outsl jo add arpl jae data16 gs add arpl jae data16 insl jae outsl jb imul xor add imul insb add insl cs insb add gs xor fs insb add jb gs xor add fs insb add fs insb cs insb add jb gs xor cs insb add mov mov mov or mov mov out mov outsl fs gs mov out lea lcall xchg jecxz xchg add je outsl outsb popa jb pusha xor push jns je insl cs outsl insb insb arpl outsb jae inc outsb gs arpl call mov mov in fwait in lea mov add mov mov jmp mov mov inc gs popa je push je gs insl add jo outsl insl popa imul inc jne jb outsb je outsl insl popa imul insb jbe inc jbe outsb je popa outsb fs gs popa fs push gs jne arpl gs insb jbe add je js arpl imul insl bound inc gs popa outsb imul jae jne arpl je gs insl add je add arpl outsl jb inc imul outsl add outsb jae jb arpl dec outsb outsw add jb insl gs jb outsb outsw add popa insl imul add jae gs cs gs arpl outsb cs insl imul gs je jb inc gs imul insl dec popa outsb fs add outsb je insl gs imul fs add insl bound dec outsb outsw add popa jb addr16 dec outsl fs add fs add jae insb jbe dec gs outsl add je outsl fs popa jae add je popa jb insl gs jb add je push popa jb insl gs jb jns add je inc arpl imul add je dec jae outsb je jb popa arpl addr16 dec jae jb popa jns inc gs dec inc outsb gs je jb dec jo outsl fs dec fs jb pop push add inc outsl fs imul push push gs addr16 inc imul add gs je inc gs gs je add cmpsl xchg ljmp mov movsb mov fwait stos add addr16 dec jae je je arpl addr16 push gs jb push jns add jb add jae arpl jae inc popa insb insb add insb insb jbe jb add mov in lcall out mov out scas mov inc imul popa fs push gs fs outsb je xor push gs fs jns gs dec inc imul insb add je popa outsb imul jae jne arpl popa insl gs push gs insb jbe inc jbe outsb je jb jae jo mov out mov mov mov mov mov outsb fs popa jb jae out cmpsb out test lods mov test mov in cltd mov ljmp xchg cltd in mov in xchg out mov mov vpmacsdqh test lahf mov cmpsl sahf int3 mov subl push inc push push inc je jb bound add jne addr16 imul jb bound add imul jae bound je jb bound add jae gs cs outsl insl jo outsb outsb je outsl fs add imul jae bound je je add je outsb je arpl imul add jne addr16 je jo push push imul outsb inc jb popa je dec popa imul inc outsb gs je fs outsl fs je jb bound add jae gs cs outsl fs outsl insl cs outsl insl jo insb gs in mov movsl sub mov mov mov out test call stos ljmp mov add xchg mov mov mov out mov add mov out xchg mov out mov jmp test xchg popf add xchg pushf out xchg jecxz mov test call scas loope pushf sub jmp and mov mov out mov cmpsb mov out cmpl and xchg jmp scas out mov mov cmpsb in scas and mov mov mov loop stos jmp mov xchg popf in xchg test in mov out mov loope mov mov mov mov out mov out scas in xchg xchg lds lods sub lods jecxz test xchg mov cwtl xchg add lahf mov mov loope test mov out mov xchg in lcall mov mov popf cmpsl call gs jo gs outsl jb inc je jb bound add jae gs cs outsl insl jo outsb outsb je outsl fs cs gs outsb add andl loope scas call xchg jmp mov out sub mov stos stos out mov scas in mov xchg cmpsl mov mov in mov xchg jmp mov mov mov sahf mov movsl lods aam add popa outsb fs jb dec outsl fs gs je jb bound add fs outsl fs gs popa insl gs je jb bound add inc outsl jb jae in mov mov xchg xchg out movsb mov xchg lods ljmp loop lods out test out mov mov ljmp gs fs je je arpl je imul andl xchg jmp mov andl sbbl jmp mov mov out mov jecxz sahf in xchg mov andl jmp mov addr16 outsb jbe arpl imul jo imul pop dec jae imul add je jbe je jb jmp xchg movsl mov sbbl dec out mov lahf out xchg lea mov mov add insl jo outsb outsb je ljmp lea mov in xchg out mov out test xchg mov les popf mov lods mov scas mov test loope mov pushf mov mov test dec jns jb jne inc outsl insb insb arpl outsb inc je jb bound add push bound jb imul xchg xchg cltd cmpsl loop xchg call mov jmp mov mov loope sahf loopne mov mov add insl jo insb gs outsb gs je fs je jb bound gs mov in mov movsl call mov inc outsl insl push imul je jb bound add jae gs cs jne je insl gs outsb je jb jo gs imul add ljmp mov mov add mov mov loope xchg mov mov outsl outsb je imul lods in mov scas xchg out and mov mov add mov out mov out mov cmpsb lods ljmp loope mov mov out mov jmp mov lods cmpsl add mov in xchg orl mov cmpsb xchg add mov loop test xchg xchg test lcall mov loope test cltd mov movsl mov mov in xchg loope popl jmp mov mov in andb mov jmp mov subl mov mov out mov out xorl movsl out mov xchg (bad) out mov out mov mov in lcall in cmpsl out lea out stos mov cwtl mov xchg mov mov jmp mov lahf add mov jecxz lods out mov test lods xchg jecxz lods add mov jmp mov fwait mov cltd fwait loope mov ljmp xchg mov test in mov out pushf loop xchg jmp xchg loope mov mov xchg popf jecxz mov out mov mov jmp mov mov in xchg sahf in mov out xchg xchg mov mov out stos in mov scas xchg out mov add cmpsb xchg jmp mov test xchg loopne mov in movsb test nop dec jecxz nop ljmp mov scas in scas jmp movsl out mov (bad) movsb loope xchg in fwait stos add mov call mov mov mov in lods popf add mov in cmpsl jmp stos call (bad) in test loope cmpsb ljmp mov in mov in xchg add popf mov cmpsb ljmp mov loope mov loope movsb out lahf call xchg call mov mov add sahf stos loope lcall out lcall out lods xchg add mov out lods in mov nop loope mov loopne mov mov loope test mov in mov mov cmpsb pushf add subl test mov out mov jecxz mov mov into xchg jmp and scas out mov xchg in sbbl jmp (bad) out test out mov loopne cmpsb jmp sub stos rcll loope mov xchg stos scas jmp stos ljmp out mov int3 mov mov in mov out mov xchg in mov loop mov lcall loop mov in test mov out mov in mov cmpb mov out cltd out mov xchg mov mov in xchg cmpsl in mov xchg mov xchg nop in addb mov lea lods (bad) (bad) mov test out pushf mov xchg xchg in movsb out mov movsl mov mov mov mov out mov out pushf cwtl call lcall (bad) ljmp xchg mov cltd mov mov add mov movsb mov stos stos out mov xchg lods out mov jecxz (bad) lahf mov mov out sub mov lcall cmpsb add arpl jae fs push push gs jns je jb bound gs mov out mov jecxz sahf out mov stos sub test in mov (bad) out mov jmp mov loop mov sahf movsl loopne test lods mov (bad) test loopne xchg mov out lods jmp mov xchg xchg loope xchg in mov loop cwtl jmp lods out popf in xchg test xchg mov xchg xchg in pushf mov call mov mov lods mov mov jmp mov xchg mov lahf scas jmp mov aam out stos stos out xchg xchg in xchg mov mov lea jmp mov scas xchg call mov mov add xchg test mov out popf sahf in mov mov in test add test jecxz stos jmp popf out scas ljmp mov aam out sbbb mov mov loop mov lea in mov out mov jmp movsl out mov out lods add xchg mov sahf cwtl out mov mov jmp xchg loope xchg loop mov mov cmpsl mov mov mov add mov jecxz stos call sahf in subb movsb out mov xchg in cmpsb ljmp mov (bad) mov lods mov in mov mov jmp mov mov loope lcall add mov mov loopne nop loop mov nop mov cwtl addl test mov mov in mov out mov mov jmp cmpsb loopne sahf loope mov mov add cmpsb mov xchg fwait mov mov jmp test mov loopne mov mov jecxz mov mov loope mov jmp mov cmpsl xchg in popf xchg out mov mov ljmp mov in stos out mov add mov jmp xchg jmp cltd loope sahf in test loope xchg xchg mov mov loop sahf loop scas in lods mov xchg call xchg in and and lods in mov jmp xchg jecxz lods out lods lahf in nop lods jmp lods in xchg add xchg mov mov ljmp (bad) cwtl out xchg mov out mov test test loope mov inc insl jo jns imul add bound addr16 outsl outsb push jae jb outsl fs je jb bound gs stos mov test movsb mov mov xchg addl xchg scas mov mov loope xchg out xchg lods add scas lahf loop mov mov enter jmp test loope mov stos mov mov jecxz and mov out mov mov out mov jmp xchg jmp (bad) in mov mov mov out mov cltd xchg out mov add push imul outsl outsl imul call mov pushf (bad) loop nop in mov test out xchg call mov sbbl (bad) jmp mov jmp xchg out mov mov out test mov add xchg (bad) loope test xchg movsb out mov jmp cmpsb loopne mov in mov mov ljmp mov movsb cmpsl ljmp push imul outsl outsl imul add mov out test mov in mov mov add xchg cmpsl call lcall in xchg xchg lahf add je jae outsb arpl jns je je add nop xchg out (bad) in test call mov mov add (bad) stos call (bad) loop lahf in popf jmp mov stos fwait out xchg out mov mov stos loop sub mov in mov mov mov jecxz lods jmp popa insb insb dec gs dec outsl outsl imul loopne mov mov fwait mov popf (bad) loopne lcall (bad) loop mov mov call mov mov mov lods mov mov (bad) and sahf in cmpsl out mov add gs gs jo push jo arpl imul subl cmpsb in mov scas movsl loopne xchg add mov ret xchg in mov lods xchg out mov loop mov jecxz stos loop lods loope lods jmp xchg out mov out mov add mov out test call mov cmpsb mov out mov xchg mov mov jmp lods out mov insl inc gs gs dec gs je je add adcl xchg in (bad) mov mov add je outsl jb addr16 jne fs imul mov in pushf mov scas mov nop movsb fsts sahf sahf out mov in xchg jecxz mov xchg (bad) jecxz mov xchg test test jmp mov mov jmp pushf call mov loope mov mov cmpsb mov xchg stos mov inc gs imul js inc add mov mov in mov test mov insb gs outsb add mov in mov xchg test stos in mov cltd xchg add mov jmp test test cmpsl mov out mov out movsl and mov popf mov mov cwtl in mov mov mov cmpl mov out mov int3 lods out mov mov ljmp test in fwait in or out mov dec inc outsb jne gs je jb xor dec outsb je xor dec inc outsb jne gs je jb jecxz mov fwait mov mov in xchg mov in mov outsb je jb jae in pushf mov mov out mov in cwtl out cmpsl lahf add cmpsb test mov in mov in mov xchg test xchg mov loopne sub mov xchg and test test out movsl movsb add mov mov fiadd mov in sahf and lcall jmp lcall loop mov in lahf movsl loope (bad) jmp pushf jmp (bad) ljmp sahf movsl loope mov out xchg mov lahf and mov stos mov xchg (bad) add mov movsl xchg out popf out test jecxz mov loop xchg in (bad) out mov stos mov mov jmp lods in scas loopne (bad) add xchg movsb out mov loop test mov out lea out mov fwait mov xchg test xchg mov in mov andl mov popf mov addl jae jb add jb outsb je jae jb jecxz lods out test out lcall jecxz stos out xchg scas add outsb jae outsl jb inc imul arpl ljmp sub mov scas mov mov xchg mov test fwait call cltd call (bad) in xchg lcall loope mov lahf sub xchg mov out xchg out mov sahf stos out xorb jmp cltd stos shll lods test fwait mov pushf out xchg add lea scas mov mov call test mov add mov loop scas out fwait call mov mov add cwtl mov lcall mov test loope mov jmp mov mov loope lods out (bad) in mov lods nop add mov in adcl test mov add mov call sub mov mov loop mov jmp mov cwtl mov cltd xchg out xchg scas in cmpsl xchg mov in mov insb arpl outsb pusha xor loop xchg in mov in lods ljmp mov out xchg add lea mov loop test test fwait sub mov call stos jmp and xchg in mov out cwtl mov mov in mov mov out scas xchg add mov call mov mov jmp popf jecxz movsb add je push imul pop dec imul (bad) loope mov mov in test xchg mov fwait mov call mov mov in mov xchg mov mov mov mov loop stos loope scas ljmp mov jmp movsl loope mov mov out mov mov jmp mov out cwtl loop mov mov out mov xchg test mov jecxz mov movsb mov in mov scas (bad) out mov mov add lea mov out mov subb mov in movsl out mov xchg sahf in mov xorl mov popf lods call xchg mov ljmp out mov call xchg in lcall enter xchg (bad) mov pushf mov popf mov (bad) sahf loopne movsl add pushf lods jmp mov test jmp mov mov out xorb mov nop mov cmpsl sub nop add cwtl mov mov in lods out mov out lcall sahf ljmp mov loopne xchg loopne xchg mov add (bad) in mov mov out pushf pushf out and xchg out mov add mov out mov mov out test mov add xchg mov (bad) mov cmpsb ljmp mov mov lcall mov xchg stos out lods mov dec popa outsb popa gs outsb je bound arpl mov out mov in mov test lea jmp mov adcb movsb call mov jecxz lods jmp mov xchg nop ljmp mov jae outsb gs outsb gs je fs je jb bound gs mov out cwtl out stos cmpsl ljmp pushf lahf in cmpsl mov push popa insb jne push jns gs xchg mov nop xchg out mov loope mov sahf mov out test (bad) mov movsl cltd loope movsb out mov jecxz xchg add mov out xchg out xchg sbbb mov mov add cmpl call mov mov add mov jmp cmpsb in test cmpsb (bad) out mov ljmp call loop mov sahf lods jmp mov inc outsb jne add insb jne pop pop add push gs jb add inc popa arpl jo arpl dec pop push jo arpl dec pop push popa bound dec pop inc jae add inc outsl outsb je outsl insb add dec inc outsl outsb je outsl insb add push inc outsl outsb je outsl insb add inc gs gs add inc outsb add dec outsl insl add dec outsb jae jb add push push dec pop dec push push dec pop push push push dec pop push popa jne add push jb outsb je arpl outsb add dec push imul imul je dec pop dec inc insb je dec pop push inc insb je dec pop dec jne dec outsl arpl dec pop inc popa jo dec outsl arpl dec pop push jo dec pop inc outsl ja add push imul dec gs dec pop inc xor dec pop inc xor dec pop inc xor dec pop inc xor dec pop inc xor add inc aaa add inc cmp dec pop inc cmp dec pop inc xor add inc xor add inc xor add inc xor add inc xor dec pop inc xor xor add inc xor add inc xor add inc xor add inc xor add inc xor add inc xor add inc xor add inc xor dec pop dec jne jo xor dec pop dec jne jo xor dec pop dec jne jo xor dec pop dec jne jo xor dec pop dec jne jo fs dec pop dec jne jo fs jne jo fs dec jne jo fs add dec jne jo cmp dec pop dec jne jo cmp dec pop dec jne pop inc fs dec jne pop inc imul pop dec jne pop dec jne je jo jns dec pop dec jne pop push jne je popa arpl pop dec jne pop inc arpl popa insb add xor dec pop xor dec pop xor dec pop xor dec pop xor dec pop xor add aaa add cmp dec pop cmp dec pop inc add inc add inc add inc add inc add inc add inc add dec add dec add dec add dec add dec add dec add dec add dec add push add push add push add push add push add push add push add push add pop add pop add pop add push jne je popa arpl pop inc arpl popa insb add mov loope movsb out mov in (bad) mov test call and mov je arpl je gs gs je add addr16 bound arpl popa jb gs gs outsl add imul add jae outsb arpl jae insb je inc jae outsb arpl insb insb bound imul outsl fs popa jb insl add jb insl add gs je inc popa insb insb bound imul gs gs je inc jae outsb arpl popa je add fs outsb jbe imul gs gs je inc jae outsb arpl jae insb je dec outsb jbe imul cltd mov mov jmp cltd loop mov out xchg mov mov in movsb sahf jecxz (bad) jmp mov fstpt mov loopne mov xchg xchg mov ljmp xchg and xchg out fwait add mov lahf mov test mov loope mov lods mov inc insb imul push imul mov in lods jmp stos jmp and scas add mov in (bad) loopne popf out test out lahf xchg in test add popa outsb addr16 insb imul inc push call cmpsl call xchg lea mov add orb mov mov jecxz scas out test stos and cltd stos jecxz mov movsb xchg out mov in xchg cmpsl mov push outsb fs gs popa addr16 mov in xchg lcall out mov in mov out mov stos mov scas movsb in xchg xchg out mov loopne popl out lods test xchg loopne mov scas cltd out pushf ljmp mov mov mov loope mov stos scas call cmpsl add mov orb ljmp mov dec jae add je push push popa jb insl add je dec push popa jb insl add inc imul add movsb sahf in xchg in mov mov out xchg xchg loop nop add mov loope xchg mov jmp mov stos xchg loop mov outsl jne arpl add arpl jae data16 dec jns push gs jne arpl add mov call mov mov mov add mov jecxz lahf in mov xchg mov (bad) pushf call addl movsb nop loopne xchg out mov mov out xchg add test scas cmpsb jecxz cltd call lahf jmp mov stos test out mov out mov loope mov mov (bad) scas in scas add movsl mov mov lods (bad) out xchg mov test fistp scas loope mov mov in stos mov in mov lea xchg cltd jmp xchg ljmp popf mov loopne mov scas xchg ljmp xchg stos loope test out mov mov out stos in mov mov add mov call cwtl jmp ljmp out xchg lahf mov mov out mov jmp (bad) loopne (bad) in sahf add mov xchg pushf jecxz (bad) in mov mov add mov lea cmpsb loope mov xchg mov out test loop mov mov in cmpsl (bad) in mov loope mov mov test lea loop cmpsb loope stos out test cmpsb mov mov in mov scas cmpsb in cmpsb movsb out mov xchg stos jmp mov xchg fwait add cmpsb out mov test mov mov add movsl xchg out nop cltd loope lods in xchg out nop loop stos in (bad) jmp mov jmp xchg fiadd mov ljmp loopne and scas in (bad) in mov stos sub sub mov loop xchg out xchg ljmp mov mov in stos ljmp mov in nop in scas add movsl cmpsl loope mov lods mov mov out xorl mov (bad) cwtl out xchg stos jmp cmpsb loope xchg add (bad) mov xchg movsl sub mov subb xchg nop jecxz mov lods mov test aad lret out mov jecxz mov mov out mov cwtl mov in (bad) out mov out mov in mov mov out mov imul jae dec gs outsl jb add cmpsb mov mov jmp lods out sahf in test out test jecxz sahf jmp pushf loop (bad) in mov sahf add mov cwtl mov sahf mov mov in xchg test shll mov xchg xchg loope xchg loopne xchg out stos loop cmpsl add jb jne insb push jb je arpl add mov call lahf loop mov test loop xchg out movsb popl call mov mov in xchg sub mov xchg in movsl in mov loop mov mov add mov jmp mov mov orb lcall popa insb inc insb insb outsl arpl add mov (bad) mov mov out movsb call mov in lahf xchg jmp pushf jmp test mov mov in popf add nop test test jmp lahf ljmp lahf fwait out stos add je push inc outsl outsb je js add nop scas in mov mov call mov mov add jae insl gs push add xchg cmpsl ljmp mov xchg lahf out mov in pushf in mov mov pushf mov mov add mov xchg mov stos lahf in addl cmpsl sub mov mov loop test mov add xchg sahf call mov mov loope test cwtl lods add cltd mov lea nop test mov jmp mov push gs fs jb arpl jae gs outsl jb add xchg mov mov jmp mov mov out mov dec je outsb insl popa jo imul arpl outsb add lcall popf jecxz sahf ljmp mov add cltd mov subb mov mov call gs push inc outsl outsb je js add sbbb xchg in mov mov movsl xchg jmp mov out lods jmp mov mov jecxz mov out stos mov stos mov mov in stos loop mov mov add mov lea cmpsb mov mov out xchg popa je push jb arpl jae add outsb je xor in xchg in mov mov mov sahf (bad) add mov and dec out mov out mov ss mov je jne jb outsb je gs outsl add je dec gs fs je push outsl imul push jb inc gs popa insb jne add je inc popa jae push je gs insl add imul gs imul inc jns add je popa insb insb imul insl bound addr16 push arpl gs popa insl add je outsl fs add jae insb jbe push imul add bound push outsl push imul imul outsl dec outsb je xor dec outsb je xor jae je dec je insl add mov mov mov push out mov mov out mov add bound out mov out mov mov mov push or out mov add out mov mov out mov mov sub ds mov mov mov dec inc aaa out mov mov dec out mov mov out mov and mov add mov mov mov mov ficoml and mov xor and mov pop out mov out mov out mov mov mov mov mov add mov out mov push cs out mov mov add add mov push out mov adc mov xor out mov add sub mov pop jo mov dec out mov mov sub mov jg adc mov out mov test test in mov stos cwtl out mov add jno pusha inc imul ljmp mov lcall mov in pushf mov scas mov xchg (bad) sub mov in xchg out mov mov jecxz stos add jno pusha inc imul jecxz mov mov loop popf out mov fidivrl in lea lods mov xchg and mov scas mov js jno pusha inc imul loop mov adcb xchg jecxz lahf ljmp out xchg xchg loop mov pushf stos in sahf add jno pusha inc imul jecxz test (bad) xchg loop mov mov out mov loopne mov scas mov mov out mov add jno pusha inc imul call mov cmpsb in sahf mov lcall mov jecxz stos in xchg nop mov subb jo push pusha inc imul in mov mov loop nop in lcall add xorl movsb out mov loop xchg call mov ja jno pusha inc imul loop (bad) jecxz mov mov in mov jmp mov xorl mov out mov ljmp jp jno pusha inc imul in nop ljmp movsl sahf out mov call scas add xorl mov mov mov pusha jno pusha inc imul loop scas out lods movsl loop cltd out lcall in mov in (bad) loopne fwait loop mov cltd movsl in mov mov push pusha inc imul jmp sub mov mov jmp mov lods mov loopne xchg in test test mov cmpsl test mov push pusha inc imul loopne (bad) in xchg jmp mov mov out xchg lahf add mov out scas loop test (bad) mov test jno pusha inc imul ljmp cltd movsl ljmp lahf mov subb scas mov xchg cmpsl loope mov test jns jno pusha inc imul loop stos out mov call movsl jmp movsl add cmpsb mov test mov xchg mov lcall jo push pusha inc imul in xchg sub movsl out movsl xchg loop lahf out mov mov mov lcall mov xchg test mov jns jno pusha inc imul in mov mov mov mov loope xchg ljmp cmpsl mov xchg mov sahf mov xor push pusha inc imul out cwtl out mov mov loop xchg lea out mov xchg mov mov (bad) jmp (bad) out test push pusha inc imul jmp scas in xchg in lahf xchg jecxz cwtl out mov jmp addb mov lea mov call mov popf sahf add jo push pusha inc imul in lcall out mov mov cltd test xchg mov in mov into mov pushf mov cmpsl sub lods jecxz mov mov jno pusha inc imul in xchg out (bad) in sub mov sahf mov cwtl xchg in addb xchg (bad) in xchg in cwtl call movsl loop mov xor push pusha inc imul loope scas loope add jmp mov mov out lea mov in xchg into mov mov add pusha jno pusha inc imul in xchg jecxz mov mov cmpsl movsl out cltd out test lahf pushf ljmp mov test add jo push pusha inc imul jecxz sahf out xchg int loope lcall in mov and xchg in mov lcall mov mov xor jno pusha inc imul out (bad) loopne lods loop mov scas (bad) out xchg stos out mov add popf mov test mov out movsl in lahf mov pushf popl xor push pusha inc imul jmp mov xchg mov mov out mov out (bad) call cwtl jmp mov mov ljmp xor push pusha inc imul out scas mov mov test xchg lods out scas fwait add lods cltd loop stos jecxz stos jecxz mov lods mov sub add jo push pusha inc imul in nop out mov stos xchg jmp mov stos mov in xchg cmpsl mov xchg stos in test mov mov xor jno pusha inc imul jecxz sub cltd out mov in mov xchg nop loop mov out movsb mov movsl out mov jmp movsl out mov xchg mov push pusha inc imul loopne xchg out mov stos cltd call mov stos mov ljmp mov out xchg call out mov jno pusha inc imul ljmp addb mov xchg mov jecxz mov mov mov in mov loope stos add jo push pusha inc imul out xchg cltd mov lahf test mov xchg add mov loope popf ljmp cmpl add aaa jno pusha inc imul ljmp lods in xchg (bad) jecxz xchg out scas mov in mov lea mov out xchg out mov outsl push popa outsl jge cmp jmp (bad) jecxz mov mov out mov call mov jecxz mov mov out scas call mov inc outsl pop popa outsl jge cmp loope test sahf sahf in scas nop loop nop out movsb out cwtl sub cmpsb out nop add xchg mov out (bad) mov fwait mov imul cmp out orl mov test mov loopne lahf add mov out popf sub test lods xchg fmuls lahf xchg add fs outsl jge cmp imul cmp imul cmp out mov mov test jecxz nop loop test out cmpl xchg out mov mov add test out cltd mov xorb mov jecxz scas in lahf out mov lea mov imul cmp out nop cwtl out mov jecxz sub mov mov mov int out mov mov ljmp cltd add push popa outsl jge cmp loop mov mov xchg mov mov out mov loop cltd call test cwtl mov loope cwtl loope cmpsl add js outsl jge cmp out mov mov out mov out lods mov lods popf iret mov mov add mov in cwtl mov stos cmpsb in mov scas loope lods add xor jge cmp in mov mov jmp mov mov out mov out lods add mov out mov test mov stos lods jmp mov inc outsl xor cmp in movsb in mov mov out xchg out popf jmp xchg out mov out test movsb mov mov in cmpl outsl sub cmp loope cmpsb fistp xchg mov loopne mov mov lahf loop cmpsb in (bad) popf jmp mov mov ljmp popa outsl jge cmp in nop lods jecxz mov xchg mov xchg xchg mov test add fwait lods out mov in xorl test lcall movsl add insb popa outsl jge cmp out movsb jecxz mov mov loope xchg jecxz mov out mov mov mov in adcb outsl jo outsl jge cmp imul cmp out sahf loope lcall out cmpsl mov mov nop mov ljmp pushf mov mov scas test movsl (bad) in andl mov mov in mov lcall popf add je outsl jge cmp loope movsl jecxz movsl in movsb mov mov loope cltd out mov add mov in mov out mov in lcall push popa outsl jge cmp out mov subb mov mov jmp mov lahf mov mov loopne test mov add pop popa outsl jge cmp jmp sahf out mov jmp cwtl out and mov xchg addb mov xchg cmpsl loop lahf out mov mov jmp insb pusha popa outsl jge cmp out lods mov mov loope pushf ljmp popf cmpsl int3 stos in mov (bad) (bad) out mov mov in movsl out orb insb fs outsl jge cmp imul add movsl xchg in xorl (bad) out xchg jecxz and xchg xchg test (bad) loopne pushf out xchg loop mov in movsl fwait in mov movsb mov xchg xchg test insb inc popa outsl jge cmp out mov jecxz mov test jmp mov out mov mov out stos test movsl and mov xorb outsl jge cmp inc insb js outsl jge cmp inc imul jge cmp inc jne popa outsl jge cmp inc jo popa outsl jge cmp inc jo popa outsl jge cmp inc push bound push cmp inc push bound push cmp jmp xchg loop mov mov in xchg mov mov add lea fwait (bad) out mov xchg jmp lcall xchg stos test xchg mov fwait mov xchg mov in mov mov ljmp mov loop mov iret stos in cwtl loope lcall in stos loopne lea out nop out xchg out mov in mov ljmp out mov test movsb mov mov in xchg add popf nop loope mov xchg nop jmp mov scas mov mov jmp xchg in mov ljmp mov mov add dec popa outsl jge cmp out xchg in xchg cltd out lods jmp mov lods test mov in (bad) mov out xchg in mov fwait xchg jecxz mov xchg mov xchg lods out mov push popa outsl jge cmp inc push bound push cmp inc push bound push cmp jmp scas jmp mov lods popf loope xchg out scas test cmpsl mov out mov xorl out xchg xchg call mov mov mov out mov mov test lods xchg out mov in mov mov ljmp popa outsl jge cmp inc jne popa outsl jge cmp inc jno popa outsl jge cmp inc push bound push cmp jmp and movsb out movsl out cmpsb call cltd jmp nop add lods xchg jmp stos out cltd in test lahf test stos pushf jmp xchg ljmp mov in stos out mov call xchg in xchg cltd mov mov in mov loope sahf out xchg xchg loop lods call mov mov xor cmp out mov in mov mov out mov xchg mov ljmp xchg mov mov out mov add sub cmp out mov ljmp mov test in sahf jmp mov movsb mov cltd mov mov add push cmp jecxz mov test mov out mov xchg add cltd xchg xlat sub lcall loop test xchg popa outsl jge cmp jmp mov mov call mov mov mov (bad) mov mov jmp insb jo outsl jge cmp loope mov movsb xchg loope lods in cmpsb stos call mov out lea mov xchg mov mov out mov popa outsl jge cmp dec in test in mov mov out lahf add mov loop mov mov call mov lods scas add push popa outsl jge cmp loopne (bad) loope cmpsl out mov jecxz test test scas mov out mov mov xchg pushf sub imul add pusha popa outsl jge cmp imul cmp imul cmp in test test mov jmp xchg mov mov stos mov xchg adc jmp xchg mov test cmpsl mov lods loop movsb call xchg xchg call xchg out movsb scas out mov fwait lods in mov lahf popl out (bad) cwtl lahf out mov movsl lahf in mov mov popa outsl jge cmp out sub mov scas lcall in mov out test out fwait xchg jmp mov xchg test mov xchg lods in xchg add inc popa outsl jge cmp loop mov test loope xchg loop mov mov call mov out lods mov xchg mov cmpsb sahf in (bad) mov stos scas out xchg mov imul cmp ljmp test in mov jmp lods out xchg mov add pushf xchg addl out nop call scas add js outsl jge cmp in mov jecxz mov movsl xchg out mov test jmp xchg add test jecxz mov cmpsl mov test in xchg jmp imul cmp out mov loop mov lods scas out mov out xchg (bad) jecxz sahf add cwtl test xchg pushf jmp lahf in xchg out mov test inc imul lahf jmp mov mov out mov mov add scas fwait jmp scas in popf jmp nop jmp mov scas mov imul cmp out popf loop scas in cltd out mov jmp xchg out mov add xchg mov in mov mov loope test popa outsl jge cmp inc imul push cmp inc imul jge cmp inc jno popa outsl jge cmp in mov xchg sahf mov mov in mov in test test jecxz nop out mov popf mov lcall scas mov lods mov mov out mov out cltd fwait out mov xchg mov sahf mov mov out mov call cmpsb mov mov mov jmp test scas test inc imul inc insl push bound push cmp out sahf mov mov jmp xchg mov in mov mov add lahf mov mov loopne xchg loopne mov lcall xchg add xchg jecxz mov mov in xchg jmp movsb add jo outsl jge cmp out lcall xchg xchg test mov jmp test fwait xchg out mov ljmp mov mov in test imul cmp jmp mov popf movsb (bad) test loop pushf out xchg jecxz movsl out lods out cmpsb in mov call movsb loope lahf add push popa outsl jge cmp jmp mov cmpsl mov mov mov add xchg xchg ljmp mov in lcall mov test pop popa outsl jge cmp ret cwtl sahf out sahf out scas in lahf mov popf sahf ljmp call mov xchg mov (bad) mov andb xchg in xchg sahf add pusha popa outsl jge cmp in mov mov jmp mov lcall mov in mov test xlat mov sahf fwait jmp xchg inc fs outsl jge cmp out mov out stos in mov mov loope mov mov scas in mov mov jmp mov mov out mov popa outsl jge cmp out xorl scas jmp mov mov add xchg lods call mov mov out mov mov inc dec popa outsl jge cmp out cwtl ljmp mov loopne pushf in test out mov in mov mov out xorl movsl add dec popa outsl jge cmp inc jb popa outsl jge cmp inc jae popa outsl jge cmp loop mov mov out test cwtl mov scas test mov add mov mov out test mov mov fnsave fwait test movsl xchg mov out movsl add mov loop test mov call mov test popa outsl jge cmp jmp mov lcall xchg in mov scas mov in mov ljmp mov loopne mov imul cmp imul cmp imul cmp in xchg lret pushf out mov loope lahf loope mov pushf mov out mov jecxz xchg out mov xchg mov cmpsl mov out mov mov in mov stos in mov add scas cwtl in xchg sub test mov in mov mov popa outsl jge cmp in xchg mov scas cmpsl out mov lcall add xchg mov test xchg mov cmpsl mov cmpsb mov inc sub jge cmp out mov loop mov mov loop xchg out mov xchg out mov xchg stos in popf mov mov in cwtl pushf add push cmp ljmp mov in mov mov out xchg mov movsb mov cmpb movsb loope test mov imul cmp imul cmp in sub lcall loope stos loopne popf out and stos add nop (bad) in mov loope mov mov jmp scas add xchg mov mov in xchg jmp call data16 outsl jge cmp in movsl out mov xchg xchg mov mov add xchg xchg mov in xchg mov call movsb call imul jge cmp in movsb call popf out mov mov mov add nop sub (bad) mov loopne mov mov out cmpsl nop add pop popa outsl jge cmp imul cmp out movsl out lods out test movsl mov xchg mov mov out lods mov in sbbl (bad) loop fwait out xchg loope cwtl jmp xchg mov mov in movsb ljmp mov mov pusha popa outsl jge cmp out stos lods in mov jmp cltd jmp fwait jmp xchg jecxz cmpsl add xchg mov mov call mov popa outsl jge cmp in (bad) out cwtl out mov loop xchg in mov stos xchg loop movsl add mov jmp mov mov loope mov mov add inc popa outsl jge cmp loop test mov call mov cmpsb mov out mov jmp test cltd mov mov ljmp popa outsl jge cmp jecxz popf loop mov xchg scas jmp mov mov mov lods loopne popf jmp sub mov mov out mov inc imul jge cmp call movsb jmp xchg out xchg fwait mov mov add scas mov mov out xchg jecxz stos in movsl in mov mov push popa outsl jge cmp out lods mov mov cmpsb mov mov cwtl xchg loop xchg add xchg test mov call mov imul cmp imul cmp imul cmp out mov in xchg test test mov mov jecxz mov mov in mov cwtl mov in cwtl mov scas mov xchg popf mov xchg loope and mov xchg lcall add push cmp loop test mov jecxz mov test in mov popf mov out mov jmp test xchg test mov add je outsl jge cmp call mov fwait xchg ljmp mov call xchg mov jmp mov xchg add push popa outsl jge cmp loope stos in mov xchg mov mov loope test mov cmpsl mov jmp mov mov xchg xchg in popf mov inc push push cmp inc push push cmp inc jne popa outsl jge cmp in mov in cwtl loopne test mov jmp xchg xchg nop add mov out test mov loop mov (bad) mov out mov out movsl mov xchg out xchg jecxz mov mov mov mov out scas loop scas in cltd nop loope mov mov add pusha popa outsl jge cmp in mov test mov in cltd cmpsl in mov (bad) mov fisub lods jecxz movsb out mov lea xchg popa outsl jge cmp inc push push cmp inc jne popa outsl jge cmp inc je popa outsl jge cmp out xchg loop xchg stos xchg mov out mov fwait scas out xchg add lods mov mov in test mov sahf add mov jmp lahf call (bad) (bad) mov out test lea cltd xchg mov ljmp in lods out nop mov movsl mov mov add dec popa outsl jge cmp ljmp cmpsl test mov in lcall mov loopne test mov loop test xchg mov xchg xchg sbbb push push cmp loopne mov mov out test movsb xchg in mov loop test lahf mov mov out scas loope mov (bad) popl imul cmp in movsl jecxz mov mov in mov xchg stos loope movsl in adcb cmpsl mov mov loopne mov xchg lahf ljmp imul cmp call and (bad) in cltd out xchg loop mov popf sub mov jmp mov stos cmpsb jecxz mov imul cmp in cltd sub mov mov in lcall mov jmp scas loope xchg loope mov mov popa outsl jge cmp in cltd mov sahf jecxz mov mov test in mov nop xchg in xchg scas stos in subl outsl jge cmp out test lods mov lods stos ljmp lods mov cltd popf out xchg xchg add mov xchg mov movsb stos ljmp xorl outsl jge cmp out stos loope mov xchg mov mov out lods out xchg stos loop addl xorb mov xchg mov mov out mov inc push push cmp inc jae popa outsl jge cmp out mov xchg mov test jecxz mov xchg mov in test mov sahf pushf loop xchg jecxz mov (bad) lods add test mov ljmp cmpsb cmpsb call jne popa outsl jge cmp out stos mov lods fwait ljmp mov mov loopne mov movsb test test jmp xchg addl jge cmp loop scas jecxz mov fwait and mov xchg sahf mov jecxz mov mov subl test xchg popa outsl jge cmp lds xchg mov movsl test sahf mov xchg mov loopne lods loope fwait jmp mov mov mov out popl imul cmp jmp mov lods (bad) loope lods out mov loope mov jmp popf out mov mov mov add inc popa outsl jge cmp out (bad) mov mov ljmp xchg jecxz lods jmp lea test mov jmp mov movsb scas add dec popa outsl jge cmp jmp mov sahf xchg mov jmp xchg xchg (bad) loope mov out stos loope cltd ljmp mov in mov imul cmp imul cmp enter mov scas mov movsl and (bad) out sahf scas add mov mov mov mov add xchg mov cwtl mov xchg test lcall xchg out mov inc jne popa outsl jge cmp call mov mov test lahf xchg ljmp mov loop mov mov add je outsl jge cmp ljmp xchg jmp xchg jecxz and lods in mov add mov mov xchg fwait ljmp sahf mov jb popa outsl jge cmp jmp xchg in movsl xchg jmp mov xchg mov mov mov in (bad) out mov out (bad) mov scas mov test add pop popa outsl jge cmp jecxz mov mov in lods mov test add sahf stos out lcall xchg sarb nop mov inc jb popa outsl jge cmp out xchg mov pushf cmpsl jmp nop loope mov mov in nop test cmpsb mov xchg sahf jmp mov test imul cmp out xchg mov out cltd in (bad) mov call stos movsl out mov in mov and lods call xchg imul cmp jmp mov mov xchg xchg out mov out mov lahf (bad) daa out mov cwtl mov test dec popa outsl jge cmp jmp mov mov in mov movsb test lods xchg mov loopne mov in sub mov lahf stos out sahf nop loope test addl stos add dec popa outsl jge cmp jmp xchg in mov xorb out mov in xchg cwtl xchg out stos sub mov mov add push popa outsl jge cmp in xchg jecxz lods out (bad) ljmp xchg scas ljmp out mov in mov jmp fwait call xchg add xor jge cmp ljmp mov jmp fwait in sbbl xchg add mov mov out mov in test imul cmp loope nop call xchg in mov mov call cmpsb mov mov mov in mov mov call jb popa outsl jge cmp jecxz test cltd mov lods mov xchg mov xchg mov lea mov lods in (bad) into mov mov in (bad) mov xchg cmpsb add push cmp in lea mov lea mov add nop jmp popf out mov mov in xchg loope nop ljmp popa outsl jge cmp call nop out mov cwtl cwtl in mov stos cltd in movsl add cmpsl xchg scas mov mov (bad) stos in mov scas scas jmp mov imul cmp call cmpsl in mov lahf cwtl in cwtl mov mov movsb loop mov mov call mov imul cmp in stos out movsb test mov popf xchg out movsl cmpsl loope lcall fwait loop mov xorl test imul cmp ret (bad) out mov out mov mov jecxz mov jecxz xchg call sub test mov add pop popa outsl jge cmp imul cmp imul cmp out mov mov mov out mov out test in xchg add popf loope mov lods xchg jecxz mov mov add mov xchg ljmp lcall xchg add pushf and sahf call mov mov out mov mov add pusha popa outsl jge cmp in mov call mov mov in mov ljmp mov in pushf cmpsl loop test xchg xchg in subl cmp loope mov mov out movsl loope test mov lcall lea mov xchg (bad) jecxz lods loop mov popa outsl jge cmp jecxz xchg call fwait loopne mov mov ljmp ljmp mov out mov xchg cmpsl in mov out scas mov imul cmp ljmp mov in mov mov out mov xchg mov mov loopne xchg out xchg mov scas mov mov popa outsl jge cmp imul cmp out mov jmp mov mov jmp mov call in fwait loop and cltd loope mov out mov mov mov jmp nop jecxz mov imul cmp in (bad) stos loope mov xchg mov ljmp xorb mov in mov call mov test add xor jge cmp in lods frstor lahf mov mov out stos loope cmpsl add mov in lcall leave xchg jmp nop add xor cmp loope (bad) in xchg mov mov jmp mov xchg scas loope mov lea ljmp fwait xchg jmp scas out cwtl in mov imul cmp out lods mov mov call lcall out mov loope fwait out pushf movsb in popf loopne test xchg xchg mov add push cmp loop mov mov out mov lods mov mov loop and mov jmp mov test mov loope mov popa outsl jge cmp out stos stos jmp mov nop test mov out mov mov add mov out xchg test mov in scas out and mov imul cmp jmp xchg out cltd mov lcall stos ljmp jmp mov mov call mov mov je outsl jge cmp jecxz test xchg mov in subb add mov mov mov mov imul add test loope xchg out (bad) in lods mov mov out mov in test mov jmp mov mov xchg mov imul add scas lods out mov mov out (bad) out mov mov mov mov out mov mov mov out mov pusha popa outsl jge cmp in scas sub cmpsb jmp test xchg mov test mov loope mov adcb movsb in test je popa outsl jge cmp jecxz lahf in xchg loopne and mov mov in mov nop out mov jecxz mov mov in mov mov inc popa outsl jge cmp out movsb out mov jmp and cltd in sahf jmp lcall cmpsl in popf in (bad) out (bad) lods out mov jmp mov stos cmpsl add dec popa outsl jge cmp out cltd loope xchg in nop out mov mov lea jecxz cmpsl out test mov test in mov popl popa outsl jge cmp jmp popf jmp scas out mov in mov lcall mov out sahf mov mov jmp mov lods mov imul add mov in mov in mov mov cwtl xchg out xchg add mov out nop mov xchg mov mov out xchg mov popa outsl jge cmp inc jno popa outsl jge cmp inc outsb dec popa outsl jge cmp out nop loop mov mov popf cltd in mov xchg mov mov lods out cmpsl scas out mov out cmpsl call pushf in xchg jmp cwtl sub mov xchg mov mov nop mov mov add mov in xchg mov loope mov mov je popa outsl jge cmp out xchg mov mov jmp scas jecxz movsl out xchg movsb add mov in mov cwtl call lcall loop mov popa outsl jge cmp ljmp mov call test stos add movsl fwait out scas mov lods mov mov jmp stos add push cmp inc push bound push cmp jecxz test xchg test stos movsl call mov pushf mov mov out xchg add mov out mov mov jecxz xchg out mov add mov xchg xchg fadds lea mov popa outsl jge cmp out (bad) out test mov call cltd jmp and mov out mov out mov in mov mov mov jo outsl jge cmp jecxz popf ljmp (bad) mov xchg xchg out mov ljmp in pushf mov mov jecxz mov xchg xchg add je outsl jge cmp out fwait mov mov fsubs test loope mov loop xchg loop sahf jecxz sahf in lods mov mov test add push popa outsl jge cmp call (bad) in mov mov out mov mov call mov in mov test out xchg scas mov imul cmp jmp mov mov out mov loop xchg in xchg lods out movsl add fwait mov mov in xchg fwait in lods loopne sub test lods addl outsl jge cmp in pushf cwtl jecxz test mov test jmp mov out addl mov mov jmp jno popa outsl jge cmp loop cwtl jmp lods loopne popf in mov mov loop pushf add test jmp sub scas out mov loop test inc jno popa outsl jge cmp out pushf mov mov loope sahf out (bad) jecxz movsb loop cmpsl fcoml out cltd nop jecxz mov mov in stos xchg in mov mov push popa outsl jge cmp loope stos in movsb out xchg jmp mov adcl movsb mov and mov xchg mov mov add js outsl jge cmp in mov mov in mov mov ljmp out mov movsl sub mov mov in scas add sub cmp loop xchg jmp cmpsl call mov xchg mov nop mov in mov lea mov in xchg jecxz movsl ljmp popa outsl jge cmp out xchg mov lods scas out mov out sahf ljmp xchg pushf add xchg mov mov call popf add insb popa outsl jge cmp in (bad) movsl out xchg cltd jmp mov movsb mov addl xchg out mov loop cwtl out (bad) out mov out mov popa outsl jge cmp imul cmp out mov out mov out cmpb mov out mov ljmp scas mov sahf mov fwait test mov out mov cmpsl (bad) out lahf popf call (bad) in lahf add push popa outsl jge cmp out lods mov mov jmp mov orl add mov mov jmp mov xchg mov inc outsb pop popa outsl jge cmp in mov mov out adcl rclb out mov mov in stos out stos mov cmpsl add pusha popa outsl jge cmp loop xchg call lods jecxz (bad) in popf mov mov out lea in mov mov jmp xchg jmp xchg in xchg loopne mov popa outsl jge cmp out xchg in mov mov out mov mov out mov mov mov jecxz xchg jecxz mov mov add inc popa outsl jge cmp jecxz (bad) jecxz and out nop call mov scas mov jecxz mov xchg or out lahf test mov loop mov inc outsb dec popa outsl jge cmp in test mov ljmp scas cltd out movsb mov mov mov mov xchg fwait out test mov loope xchg add push popa outsl jge cmp call mov stos mov fwait mov mov ljmp out cmpsb mov mov xchg mov xchg mov inc outsb js outsl jge cmp inc outsb je outsl jge cmp inc insl je outsl jge cmp call xchg mov ljmp mov lods add andl (bad) out cwtl test mov call fwait add mov out mov and cmpsb call test mov stos mov xorl loop mov inc outsb xor jge cmp loopne mov popf xchg in sahf jecxz lahf jecxz mov mov in xchg jmp xchg (bad) fwait loop mov xchg mov xor cmp loop mov stos xchg in test mov in mov add mov in mov out mov test jmp outsb sub cmp in xchg cmpsb out mov mov out lods out mov out (bad) in nop mov popf mov lahf test movsb mov fwait mov mov push cmp jmp and xchg loop xchg mov ljmp jecxz (bad) out test xchg movsb in sbbl movsl ljmp popa outsl jge cmp loopne mov scas mov mov out mov mov in mov test into (bad) loop xchg jmp mov xchg add jo outsl jge cmp in andl loope mov mov mov add (bad) mov lea mov mov inc jae popa outsl jge cmp jmp mov lods lcall loop mov sahf mov call mov pushf mov mov mov call jae popa outsl jge cmp out mov out mov mov loop mov out mov jmp xchg ljmp mov out stos add pusha popa outsl jge cmp in mov in mov loope movsb out mov scas mov out mov loope and xchg call test xchg imul cmp call nop jmp mov mov loope (bad) loop mov ljmp mov out stos jecxz mov test add inc popa outsl jge cmp out mov in pushf loope cltd jmp stos jecxz mov mov jecxz fwait add mov movsl scas in lea cmpsl ljmp imul cmp jmp mov cltd lcall loope mov test out mov ljmp andb xchg out mov jae popa outsl jge cmp jmp mov mov out xchg rcll add mov in mov in mov mov jmp pushf add xor cmp out scas jecxz xchg out mov out mov ljmp out pushf call lods out movsl sub test xchg mov imul cmp in mov (bad) mov xchg mov mov in nop out pushf add lahf mov lahf (bad) in test lea cltd mov lahf lea imul cmp imul cmp out scas pushf jecxz pushf out mov test mov out xchg in mov mov in mov mov in test ljmp mov jmp (bad) out movsl sub mov xchg test popa outsl jge cmp ljmp mov mov call mov in mov out xchg jecxz mov xchg cmpsb mov imul cmp in test addb mov xchg movsl pushf add mov loop mov test in orb test test popa outsl jge cmp call mov xchg mov mov out mov cmpsl pushf jmp mov loope test mov sahf mov mov outsl jge cmp jecxz lcall in mov mov in test fwait mov mov out lahf scas out xchg xchg xchg lods ret mov mov test add pop popa outsl jge cmp imul cmp loope (bad) in cwtl mov mov call sub mov mov mov jmp scas jmp jecxz mov movsl mov call mov stos mov mov add pusha popa outsl jge cmp out xchg mov cmpsb mov mov jmp mov mov (bad) mov loopne and fwait out mov in pushf in mov jo popa outsl jge cmp jmp mov lea mov cwtl (bad) out mov in mov in pushf ljmp andb xchg out scas mov imul cmp fildl and (bad) loope sub mov test in test mov jecxz popf in scas out xchg out xchg inc jo popa outsl jge cmp in pushf lcall jmp and mov pushf xchg call mov stos pushf jmp stos jmp mov xchg popa outsl jge cmp ret mov out mov in xchg in mov mov add test (bad) out (bad) loop lahf in scas mov mov xor cmp out mov in cltd pushf ljmp sbbl lods add movsb movsl int3 sub sub xchg out mov out cwtl mov imul cmp jmp and mov mov loope movsb out mov xchg jmp xchg mov in fwait mov cmpsl mov (bad) mov popa outsl jge cmp loop mov and mov mov mov fwait out xchg mov jmp lods in xchg call jo popa outsl jge cmp loop xchg jmp sahf jmp mov mov jmp add xchg mov mov out nop mov mov out fwait out mov imul cmp jmp mov mov out movsl ljmp mov add lods (bad) in movsb loope mov mov jmp lods jmp movsb loop xchg imul cmp in and mov stos mov mov ljmp ljmp mov out scas call mov xchg mov bound push cmp ljmp mov in xchg jmp mov mov add mov test call xchg in sbbl insl pusha bound push cmp ljmp mov call test popl out cmpl xchg lea mov bound push cmp inc insl inc bound push cmp ljmp test mov in xchg lcall add mov scas mov scas cltd call mov mov out mov in mov mov out mov mov bound push cmp loope mov popf mov mov loopne mov mov add mov in mov mov lahf mov mov mov bound push cmp out mov call lods out (bad) mov mov jecxz addl mov loope (bad) loope xchg out movsb test mov in mov inc insl js outsl jge cmp loop mov mov in xchg xchg in mov jmp mov out mov jecxz mov lahf mov test inc insl xor jge cmp in andl xchg jecxz mov cltd xchg out mov test mov mov xchg mov stos mov imul cmp fldenv mov mov stos jmp popf add stos mov mov in xchg ret mov add sub cmp call mov cmpsl mov mov mov in mov in (bad) out mov out xchg (bad) mov xchg mov inc insl push cmp in stos in lcall mov mov call mov ljmp xchg stos jmp xchg jmp scas out cwtl cmpsl lret imul cmp jmp (bad) loopne lcall loop sub mov in mov cmpsl xchg movsb popf out xchg mov sahf cmpsb add jo outsl jge cmp out mov in mov mov mov lcall mov loope lahf in mov jmp test mov in mov bound push cmp out mov in lods out fwait mov out lcall mov movsb mov xchg mov cwtl pushf loope stos jmp test bound push cmp jecxz xchg out mov out mov test stos mov jecxz cwtl loopne mov mov in orl cwtl loope lahf add pusha bound push cmp jmp cmpsl loope test popf and mov mov call mov addb mov mov ljmp bound push cmp loop xchg in xchg movsb out mov xchg in mov fwait mov loop lahf out movsl call (bad) movsl mov mov jecxz scas jmp push bound push cmp jmp mov and test mov out mov loopne xchg add cmpsb xchg in cmpsb in and xchg out mov in mov inc push bound push cmp out mov mov out mov lods test cmpsl lods out xchg add mov xchg and mov test mov add xchg xchg out movsb sub mov addl movsb add outsl arpl jae popa outsb fs add outsl arpl jae outsb outsw jb popa je outsl outsb inc insb popa jae add outsl arpl jae outsb outsw jb popa je outsl outsb add outsl arpl jae outsb outsw jb popa je outsl outsb dec outsb addr16 add je jb dec outsb addr16 add push jne jb dec outsb outsw jb popa je outsl outsb push jb arpl jae in mov test mov loope xchg mov ljmp gs outsb outsw jb popa je outsl outsb push jb arpl jae out popf in movsl jmp mov xchg loopne mov scas mov push arpl insb outsl jae dec popa outsb fs gs cltd cmpsl jecxz xchg out lahf lods out lahf and mov mov loope xchg add inc bound addr16 jb jae outsb je jmp mov xchg out scas mov mov jmp mov add je jne inc bound push je imul inc outsb jbe jb outsb insl outsb je popa jb popa bound inc popa imul popa jb insl gs jb jp fs push push je jb add je dec jae popa arpl jb jne fs mov loop movsl out (bad) loopne fwait loop lcall out mov addr16 inc jne jb outsb je push add jne addr16 addr16 dec jae je popa arpl add dec outsl addr16 pop dec jae insb imul out mov xchg test xchg mov adcl push add outsb data16 gs jns je jb bound add je imul add jae insl bound outsl insl jo outsb jns je jb bound add jae insl bound jb fs je je jb bound add jae insl bound jb fs popa jb inc je jb bound add imul jne add jae insl bound outsl jo jb addr16 jb bound add jne addr16 bound je jb bound add jne imul jae inc outsl insl jo insb popa je outsl outsb push gs popa js je outsl outsb jae je jb bound add outsb je insl gs outsl insl jo je bound imul bound add jae insl bound gs jb jo imul imul jae gs bound imul imul jae gs bound imul outsl outsb inc je jb bound add jo jb jae dec insb fs jae inc je jb bound add add add and std incl add incl add std decl std decl add jmp add decl std (bad) std incl sub dec add pop add dec add inc add add push add dec add dec add add inc add sbb dec add pop add push add inc add dec add push add and jb outsl add imul jb and add je add je add aaa inc add bound jne add add and add je add je add add add popa add popa add add add pop dec add outsl add and bound jb outsl add add add add or push ficompl push ds lret xchg add and add add add push and add adc add or and push add dec pop and add dec adc and add or add adc jno jne and add sbb add adc ds icebp xchg fcmovnb add add add add add push add add add and add sbbb andb movsl adc add add push push sbb add add adc add adc and push add add sbb add sbb add add push and add cmpb add push adc push push push add add push add add or and add adc and add sbb and add sbb and add and and add adc or push adc push or add add add sbb icebp add cmc add add add add sbb add sbb add add add add sbb add sbb sbb add adc adc add add or add add add or push add add or add push push push push add add push add add or add adc sbb add or pop add adc add add push and add andl push add add push add push push add adc add subl add xorl push push push or sub add sbb add push push push push push add add sbb adc adc add sbb add push push pop add sbb pop add adc and adc sbb and adc adc adc sbbl add push or adc push push push add gs add subl insl add push add sub xorl push and add xorl and cmpl push sbb cmpl addl and adc add push add add add adc adc and add sbb cmpl popf add push push and sbb add or andl mov and adc and push sbb sbb adc pop sbb adc sbb movsl sbb sbb adc sbb adc sbb movsl sbb add cmpl add cmpl add or add sbb and add pop and or add sbb add add push add int and adc adc or add adc adc adc add adc adc and adc or and push sbb add or sbb add adc adc add and adc or or or or (bad) adc add adc adc add addb adc add add mov and sbb adc adc push and add (bad) sub orb push add push sbb add jp push sbb mov mov pop jg aad cmp push adc or push adc push adc adc sbb add (bad) cmp sbb push and add (bad) inc pop adc or dec sbb adc push sbb adc or add adc add add imul insl or and sbb and adc add adc movsl adc add (bad) pop add adc add (bad) jne or add adc push and add (bad) jne and adc push add add (bad) pop sbb dec sbb adc push sbb adc or add adc adc add (bad) jne andb (bad) jne addl adc or add add sbb add add or add orb add add add push and add (bad) xchg or add add add add and add (bad) xchg pop add or push gs jo popa je pop cmp xor xor xor add add add add add pop push adc or push adc or push adc sbbl pop push adc sbb adc or adc or adc sbbl adc sbb add or and adc add add or pop add or add or sbb sbbl adc pop add sbb add sbb add or add or cs outsl insl jo je jb add add or add push dec jns inc jo insb imul add add sbb dec jns push jae jb add add adc add or cs outsl jb jae add add sbb add push dec jns push bound jb imul push adc add adc and add and add and and pop add add adc push add add add add adc add add add add add xor add adc add pop add add add add movsl add add add add and and push push push push pop add sbb jae gs cs imul inc outsl jb jae inc outsl jb adc gs je pop pop dec outsb jae popa outsb arpl pop adc jo jae pop pop dec outsb jae popa outsb arpl pop adc cs jns jb push arpl outsl jb jae add add jns je insl cs bound push gs imul outsl je arpl jae push outsl popa jo je jo insb imul je arpl adc gs je pop pop dec outsb jae popa outsb arpl pop adc jo jae pop pop dec outsb jae popa outsb arpl pop add add push adc add add add adc add adc add add add add add add adc add or push adc pop add add add add add add add push push add add add add push sbb push adc push sbb adc adc add or pop add xor add xor add xor and add xor add or add or sub or add or or and add or or add adc adc adc adc add add add pop add or adc or add push add add and sbb pop pop or push adc and or or adc pop add sbb sub adc adc adc adc adc sbb adc or push push push push push push push push adc push or or flds push adc push or push adc push or add adc push adc push pop and add (bad) in pop or push push sbb adc sbb pop add addl add sbb orl adc or push push push push push push adc adc adc add adc pop add xor add orl pop add sbbl adc or adc add sbb and sbb or pop or adc add sbb pop add orb add sbb adc sbb adc or pop add adc add pop adc push push push adc adc adc adc adc adc sbb add pop add dec push adc pop add adc adc adc adc add add push push sbb add pop add adc and inc pop sbb xor adc sbb xor adc sbb xor sbb or or or or xor adc and aad popa adc adc adc adc adc adc sbb push push push adc sbb push sbb adc adc adc adc adc or add and or add adc pop pop or push push push push sbb adc push add push adc or imul add sbb pop pop push push adc imul or add imul and adc or add xor sbb pop add adc (bad) add or and push push push push adc pop push adc adc (bad) or xor push adc add add add add add add add add add add add add add add add add add add add add add add add adc add add add add add add add add add add add add add add add add add add nop add add add add add add add add add add jo add add add add add add add add add add jbe add add add add add add add add add add add add add add jle add add add add add add add add add add add add add add xchg add add add add add add add add add add add add add add data16 add add add add add add add add add add add add add outsb add add add add add add add add add add add add add add add add add add add add add add add add add add add add inc add add add add add add add add add add add add add add dec add add add add add add add add add add add add add add push add add add add add add add add add add mov and or adc orl or add adc and addl add sbb pop add sbb sbb add xor pop add adc and adc orl push and add addl add adc adc add test insl add insl push add add subl sbb add sbb sbb add addb insl add add xor jae gs cs gs jne arpl cs outsl outsl insb jae push je outsl outsb insb jns jns gs gs jne arpl jne insb fs xor xor xor xor add push adc push sbb add add (bad) in pop add cmp add add cmp or adc add dec dec imul je push imul jne imul outsl jb cs gs imul imul gs imul insb gs imul popa je jb xor xor xor xor add add cmp add or cs gs imul add add add or or add or push add add sbb add sbb sbb adc add sbb add add push adc or adc sbb pop sbb sbb or add sbb sbb push push sbb push sbb sbb sbb or add adc or or add jns add pop or dec add insl or add adc adc add and or adc add (bad) imul sbb add add sbb add adc adc add or push adc and adc adc pop add push add push add adc and adc or pop and adc push adc pop add adc push adc add adc and push add add or push adc add sbb add sbb push adc and adc add sbb adc add and and add push add push add adc add sub adc addb push push push add adc push push add adc adc orb push add push add adc adc cmp nop add add inc add add inc add adc adc add adc push adc adc dec push add adc dec add adc adc add push add adc adc add adc push adc adc dec adc add adc dec adc push adc adc or add adc or adc adc dec push add adc dec add adc adc add adc push adc adc add push sbb cmpb adc jno jne add adc dec adc jne push adc adc sbb adc sbb add and adc push push add adc push add adc adc adc or and adc mov add adc mov adc sbb push adc adc add adcb aam push adc sbb and add add and and add add add adc add sbbb adc sub and add andb adc sub and adc add adc add add adc push push sbb cmp and add sbb add add sbb push adc add adc adc adc sbb add adc sbb push adc push sbb push adc add add adc sbb add adc adcl add add sbb push adc sbbl adc add cmpb add adc push adc subl sub push adc sbb add adc cmpl cmp and add adc add add adc push adc add sbb add add sbb push adc add sbb add add sbb push adc add and add add and push adc adcl push add push add adc add sbb add adc sbbl and add add and push adc andl adc subl or push add push sbb or adc xorl sbb adc adc cmpl cmc sbb add adc adc sbb add sbb push adc or add adc orl push adc adcl adc sbbl add adc adc andl push add adc or push add adc xorl cmpl add sbb add adc add les or or adc adc sbb push adc or add adc adc fadds and adc push adc and sbb andl sbb andl in push adc sub lock and adc adc adc add subl add sbb add push add adc (bad) add adc add xorl sbb xorl or adc sbb adc (bad) adc adc push push push push push add adc (bad) sbb and adc add cmpl (bad) and and add push push add add push add adc adc push adc sbb adc adc push sbb or add push sbb add adc sbb add adc (bad) cmp and adc push adc adc add addl inc push and sbb push adc adc add orl dec push and adc add adcl dec or pop push push adc add adc or (bad) push add add or pop push and push adc (bad) pop push and push sbb push push add push sbb push add adc (bad) fs and adc add andl push addl add adc adc add subl jo and adc add subl je push adc (bad) jl and push sbb (bad) addb add sbb sub sbb sub test and adc add xorl mov adc (bad) nop add or or adc (bad) cwtl pop and add xorl adc (bad) pushf push and add and sbb and mov cmpl cmpl movsb or add sbb cmpl push push sbb cmpl pop and add addl add adc sbb push adc adc add orl adc (bad) mov rolb add push push add adc add adc (bad) enter adc or add sbbl or add sbb sbb cmpl push sbb cmpl add popf add adc sbb add sbb push adc sbb pop add sbb add adc add andl adc add add (bad) in and add xorl add adc adc add sbb push adc push sbb add sbb add lock push add push add adc sbb adc sbb movsl sbb (bad) clc pop and sbb adc (bad) cld adc or adc sbb movsl sbb adc adc addl adc adc push push add adc push add adc adcl and adc adc sbbl and adc add add sbbl add sbb adc add add sbb add adc add add or adc or add sbb add adc sbb push adc xorl adc cmpl add or adc adc adc add adc addl adc add adc add sbb sbb add sbb sbb sbb push adc adcl add and adcl add sub sbb sub pop add adc adc add sbb push adc andl subl adc adc add sub xorl adc cmpl add sbb add or push adc addl sbb add sbb add adc orl add add adcl sbb push add sbb push adc add xor sbb xor cwtl push and adc adc sbb pop add sbb add adc adc add (bad) add andl and or or add or or adc adc add (bad) or push adc adc add (bad) or xorl sbb add adc adc cmpl and adc adc add and add addb adc or push adc add adc add adc adc push adc adc add orb fmuls and sbb push adc sbb push adc sbb and adc add adc and push adc add (bad) sub sbb (bad) sub in add adc xor and add add or adc push sbb adc or or or add sbb sbb add sbb add sbb adc adc dec imul je add add and xor xor xor arpl xor ss sub cmp arpl xor add add adc jo jb addr16 and xor xor add push and add addl add add add add add or add add push add add push add push jb jo outsl outsb inc js gs imul ja add add xor xor xor xor add add adc outsb data16 gs jbe cmp xor xor add add fs or jle or add add jo or add pop inc outsl jb js dec popa imul jb gs insb add add add and 