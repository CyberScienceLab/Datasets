mov add add add add add add inc add add add cmp cmp add add add xor add add add add adc add add xor add add add add adc sub add or add xor add add adc sub add or sub add push sub add adc add pop add add add adc sub add xor add add adc jle add add push add push outsl sbb add or inc and inc add or gs pop inc add add (bad) (bad) incl add add add add add add aaa adc sub add or sbb add add das add push and dec mov sub add or pop (bad) and inc add and push adc (bad) push add add outsl sbb add fsubrl add add add adc pusha jno push add add adc or adc add add add jae add push or add or push add cmp add sub add sub add add or or add cmc xor cmp add and inc or add adc add cmp add imul add add (bad) (bad) call add mov add cmp or or pop or sbb mov add add sbb add add outsl push add or add add mov or xor and push and and push (bad) (bad) call add cmp and xor (bad) decl push xor and xor cmp sub and cmp (bad) incl jnp add add add add es push incb adc pop add or add or and push and mov sbb (bad) incl sub add xor add add adc aas add push sub add or add add outsl and add or pusha and cs pop or or and gs and cmp and mov pop and add add (bad) (bad) (bad) incl add add add add add adc sub add or jle add add push add add jae add or add or or fisubr movsl adc sub add or mov sub and cs pop and push adc (bad) push pop add sbb add or sub add adc add add push add add adc or or add add or movsb in lds or test or add push or and or adc mov add and iret adc pop adc data16 push (bad) pop and leave popa pop and and inc pop add add add add add xor add dec add add add add xchg add or add add pushf adc and xor add and (bad) sbb and out lods and adc outsl pop add push pushf adc pop adc in test cmp (bad) incl jae add push or adc or push and push dec push push test cmp (bad) call add and or loopne mov and iret adc (bad) (bad) jle add add outsl pop add push jle add add outsl and add sub xor add add adc add outsl daa add or and mov adc jecxz fbld dec rcrl mov stos rolb pop pop and and add (bad) (bad) (bad) add add add add add add add sub add add add push sbb add or push or or and shrl test and lcall pop pop pop pop bound or pop or xchg in in sub and faddl adc sti lahf and cmp (bad) incl sub sbb or and add pop add adc add add push add add sub add or out add add add sub add or add add adc add add add daa add push outsl sbb add jle add add adc add add add add push outsl sbb add and mov adc add jae das xor testl mov popa pop popa and and add add (bad) incl add add add push add sub pop sub add push pop sbb or add popa lea add add or or add es add add outsl and add add and add sub sbb and xor jl or fisttp clc pop popa cmp (bad) fisub or mov and cmp (bad) (bad) fisubr es add add outsl and add add sub add cmp push adc (bad) push or add outsl sbb add fsubrl add add add add add sbb add add add add add add add add add add add add add add add add add add add add xor add add or add jle add add and add sub outsl push or and mov sbb or jle fmuls out popa popa and xchg pop inc add add adc add add add (bad) ljmp adc sub pushl pop and jne (bad) popa sub add add add and add sub add outsl and add fiadd fiadd sub add add add add add jne add or add adc add or add add add jle add add sub add sub adc add push add add add adc add or add xor add add or add add and data16 gs add add and add inc add add (bad) (bad) incl add add inc add add add or notb adc xor or and pop pop popa sub add add add add sbb add push and repnz push pop and sub add or add adc or out add or add add add or add add jae add or add add jae add or add add jae add or add add jae add or add add sub add or jnp add add or or xor add outsl xor add add add add add add xor add add add add mov pop jae add or add or jnp add add xor add or jnp add add adc add aaa add or jnp add add outsl cmp add add add add incb or cmp add outsl cmp add add add add or xor add or add or jnp add add sub add xor add add add add mov sti add add add or add or jnp add add xor add or jnp add add outsl cmp add add add add or aaa add add add or add or jnp add add aas add jo xor add add add add cmp pop jae add or add or jnp add add xor add or jnp add add dec add jo aaa add or jnp add add outsl cmp add add add add incb push add push jae add or add or jnp add add dec add add aaa add add add or add or jnp add add popa add jo xor add add add add call pop jae add or add or jnp add add xor or jnp add add jno add aaa add or jnp add add outsl cmp add add add add incb sldt push jae add or add or fwait pop je or and loop and test les pop and and xchg dec fcompl or pop inc add (bad) (bad) incl add add add add add add add add jnp add add cmp aaa add add add or add or jnp add add xchg add xor add add add add xchg add pop pop jae add or add or jnp add add outsl add or jnp add add xchg add jo aaa add or jnp add add outsl cmp add add add add incb adc add jae add or add or and add inc and add jae add or cmp pop sub add or sub add or add or and add add bound add jae add or inc add or sub add add add add inc add or sub add add add add inc add or sub add add add add inc add or and xor cmp leave jbe lods popa cmp (bad) (bad) incl sub add add add add inc add or sub add add add add inc add or and popa push pop and push imul lahf add jo add add push sbb jae add or add or pop sub add push and (bad) mov inc cmpsb movsb fsubl pop (bad) (bad) incl jb add jo xor add add add jo aaa add or add push add add jae add or inc add or push sub add sub adc add or add adc addb add addb add add add xor add add add add adc sub add sub adc or xchg add add add adc or push and add scas andl and and push add add add push add add add add add add (bad) (bad) incl add add push add xchg add add add xchg or cmpsb sti sbb lock xor sub xor and sub and add push sub and addr16 and sub and stos insl cmp (bad) call sub add adc add add add adc sub add add jae add or add add add add add dec add or (bad) (bad) incl pop or sbb add add add jnp add add dec add or or add and xor sub add adc add adc add add add add add add dec add or add add pop shrb add xor adc add add add add add or add add sub add sub add xor add add add add sub add sub add fiadd add add add fsubrl add add add add or add add add adc add or add adc jnp add add outsl dec add or add add xor or add adc jnp add add outsl push add or add add xor add add add add adc jnp add add push add or mov add add add add push add or push sub adc add push add add add adc add push sub add xor add add add adc jae add or add add sbb jge add add sub add add add push jge add add jae add or add add jnp add add outsl push add or jnp add add and outsl push add or jnp add add adc outsl push add or adc add add add adc jnp add add add add or add adc add add add adc jnp add add add add or add adc add adc add add add add add add outsl push add or add adc add or add adc jnp add add outsl push add or add add xor add add adc jnp add add add xor add add or add add add add lcall xchg pop and movq xor daa movsl pop gs and loopne lret pop and add add adc add add add lret (bad) (bad) ljmp adc push and and ss popa sub add lcall sub add sub add adc or pop add add add adc sub ret and mov shll pop and and add add (bad) (bad) (bad) call add add add add adc push and mov insl popa sub add add add add add add outsl sbb add outsl push add or adc add or add adc jnp add add outsl push add or add add xor or add adc jnp add add outsl push add or add add xor add add add add adc sub add outsl sub pop sub add xor add add add add adc sub add push sub xor pop add add add adc sub add add add jp add add add add xor add add add add adc jne add add rolb add and test jle lcall and popa gs or or add movl add and add stos add add add add add add ret add jne add add add or push and jae pop and push adc mov pop shll and dec popa sub add outsl pop add or push and inc loope and cmp (bad) incl jne add add jecxz and xor cmp (bad) incl movsl inc add add pop add or push and and xchg cmp (bad) (bad) incl jne add add sbb and mov cmp (bad) (bad) incl jne add add cs and jns mov (bad) pushl add or add xor add add adc add add add sub add jne add sbb jae add or push or roll add and pop sub cmc mov and movl pop ret lea das pop popa and xor and adc add add (bad) (bad) decl add add or or ret adc mov add sub add push movsl inc add add sub add fiadd add add add jo movsb jb fistl push and cmc mov and movl pop ret lea das pop popa and xor and adc add add add add add add add add add add xor or add or add sbb ljmp or mov addr16 (bad) jmp xor addl pop or add pop sub add add add add outsb add mov add add add xor sbb add add add add dec add add pop add or add or sub add outsl pusha add or add xor add add adc add push adcb add adc add incb or add jae add push outsl xor adc add incb or add jae add push outsl xor adc add incb pop add push jae add push outsl xor adc add incb or add jae add push outsl xor adc add incb or add jae add push outsl xor add add xor add add adc or pop and mov push push sub (bad) xor out pop popa and pushf je and pop and inc mov sbb add add pop add add add add (bad) (bad) ljmp cmp add add push xchg outsl popa add or add push push pop pop or inc pop xchg xchg cmpsb push jle add add bound add das or dec dec mov and test lea add fiadd sub add add add add addl add xor sldt add add adc add arpl add add add add sub adc add pop add add add adc sub or add xor add add add add adc add or sub adc or les add or mov add jne add add push sub mov add ja and aam popa pop gs inc push add add add add add (bad) (bad) (bad) (bad) cmp add and add add jae pop xor and pushf mov adc mov outsl data16 or and push outsb adc cmpsl jae add or add insl aas js pop and dec dec popa sub jle add add pop pop outsl push push or add or outsl imul add or pop or add or ljmp (bad) incl movsl or add sub xor add add push add adc lea add or or dec and xchg addl or pop out cli jl and ds inc pop pop and and add add adc add add add add add (bad) (bad) ljmp and pop pop sahf pop pop pop or or js sub push jb stos and xchg addl sub xor add add or add add and and pop and gs gs and fistl pop inc add add pop add add add add (bad) (bad) ljmp adc or and fcmovnbe js and test jle add add push xchg add xchg outsl insb add or add add xor add add sldt adc add or add pop pop outsl outsb add or add or sub fstpl sti adc in (bad) and ret pop and and push pop and inc pop add add add add add add add mov add add scas add add outsl jo add sub and pop pop sti and jmp aas and add jno add sub and mov mulb sarl and pop adc fwait pop popa cmp (bad) incl outsl jb add movsl push add add or arpl (bad) call add jno add outsl jae add rorb add sub add or repz test pusha sub add push xchg cld rcrl cs (bad) incl adc sub add movsl or add outsl je add adc or xor pop and mov or (bad) (bad) ficomp jne add add adc loopne adc in (bad) and ret pop and and push pop and inc add add enter sbb add add add sub or add or add inc sub test and add sub push sub add add add add adc add add add add add add xor add add adc add add add sbb push sub and or mov cli and popa and pop inc add add sbb add add add (bad) (bad) (bad) ljmp push push sub add sub and outsb add or jae add or add xor add add add add adc ja add push sub add jae add push sub add sub add xor add add or add jle add add push movsl stc inc inc or jmp enter movsl lods mov pop and xchg (bad) das and push aaa stos pop pop pop and repz and add add (bad) incl add add add add sub jo push add add pop add or add or add or push and das jns pop and push pop inc popa sub add add xor add add add add adc add add add adc add pop add add add adc adcb adc add push add add add adc add add add adc add pop add add add adc sub or add xor add add adc add push sub add je add add sub add mov add into lret add add xchg add add jae gs cs gs jne arpl cs gs jne arpl gs fs and arpl insb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push jns je insl cs gs jne arpl cs jne je insl gs gs jne arpl gs add add inc push inc inc push mov add fisubr add lret add add xchg add add jae gs cs gs jne arpl cs gs jne arpl gs fs and arpl insb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push jns je insl cs gs jne arpl cs jne je insl gs gs jne arpl gs add add add add inc push inc inc push out push test cmpsl add and inc pop mov in js add add add and add inc add add add outsl add add xor xor inc add js outsb add push add add add jne arpl aaa add add add xor push add add add add xor pop add jb aaa add dec add add add outsl add add add add add add add adc inc add add add add add arpl xor add add push add add add add add aad add and fdivr loopne adc dec inc add add add pusha add (bad) fildl inc add push push pop push add or or or or sbb adc adc sbb push sbb and daa and sub sbb sub sub xor xor daa cmp xor (bad) fildl inc add or or or or sbb xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor inc add or fwait add add and add add adc inc add add add add add add or inc add add add add add jge add add add push adc pop and xor inc mov adc xor (bad) or push pop sbb sbb sub cmp inc inc inc dec dec dec push push push push push pop pop pop arpl addr16 jne ja jns addl xchg xchg xchg xchg xchg xchg cwtl cltd lcall test stos mov mov mov mov (bad) (bad) enter rcl aad xlat fcomp (bad) loop in out call repz cmc div clc stc cli inc add add add add add add add add add add add add or inc add add add add add add add add and push adc pop popa jno and orl mov or xor adc push and loope icebp pop sbb sbb daa sub sub cmp inc inc inc dec dec dec push push push push push pop pop pop arpl addr16 jne ja jns (bad) addl xchg xchg xchg xchg xchg xchg cwtl cltd lcall test stos mov mov mov mov (bad) (bad) enter rcl aad xlat fcomp (bad) jecxz in out jmp cmc div clc stc cli (bad) fiaddl or add add add add add jmp xor pop cmp sahf fcomi test movsb xchg push je jecxz js dec mov add jno cmp jne push sbb sbb int3 mov cmp jo sbb mov cmp push adc ror sub ss xchg jno xchg test push subb test mov jp jnp cld jecxz inc or push inc test sbb inc imul dec (bad) cwtl pop xor push adc rolb xor ss sbb fldt sbb into sub cmp roll xchg movsb pop xor pop push pop xchg nop mov outsb add pushf push push mov outsb and cmpsb fcoml adc sbbl pop (bad) mov adc mov xor mov mov inc repz test mov push mov dec dec dec and cmp insb nop (bad) jp adc aas dec inc mov xchg mov and mov test push push ret movsl and and sub xchg add dec jecxz aad test cmp xor mov xor iret mov movsl mov mov jne sub mov test sub test ljmp dec mov scas jnp or in outsl movhps xchg cs push dec fcmovne arpl and fistl or mov pushf sbb repz xor or ljmp outsb sbb inc mov rcrl add sbb (bad) jecxz ret push dec xor or int sub scas mov adc cmp lcall jp stos and pop pop scas outsb stc and dec lea lods pop sbb fmul adc gs cmp push ror in stos mov int mov add push adc and int3 sbb push and dec xor sub out movsb imul aad sbb pop fdiv int sbb scas mov outsb inc xor xor push lods inc sub xchg aam mov and and cmovp shrb jb dec es sbb inc jmp push jge bound push popf pop xor sub adc imul pop int sahf xor arpl loopne xor aas pop jmp sub push and loop (bad) cmp rcll sbb cmpsb sahf in pop int push cmp inc ds or icebp cmp xchg jmp nop (bad) popf nop cmpsb fldt dec or into imul (bad) repz aad repnz mov out and sub dec adc xlat aaa in mov test jecxz mull dec xchg pusha pop adc dec call mov xchg sub lcall add mov cmp int sub inc cmp push (bad) mov inc rcrb jno pusha fwait outsl adc cmpsl jne jno scas jb fwait push xor sub mov imul dec pop lock xor adcl jnp mov je in pop push leave movsl adc (bad) mov adc add lods arpl shll push jb xchg add int3 (bad) cmc stos adc lcall repz std sub pop ss xchg or push mov sbb call mov aaa mov mov popa (bad) test outsl xor push dec xor jp xor scas mov sub lods dec arpl adc mov dec ja loop movsl sbb xchg lahf sbb sbb adc rorl inc push mov or test movsl dec mov adc fst mov mov mov or icebp pop sub aam inc mov jb inc push stos gs stos push push shlb fs push dec (bad) mov mov outsb icebp push adc popa mov int ss leave cmp cltd push inc mov push mov fyl2x sub adc push sub lea mov stc pop and xchg add andb fwait enter into xchg mov or mov mov add adc hlt lods fwait xlat push cmp dec cs mov cmp cmp inc sbb adc dec push xchg in xchg data16 cmp js les cmp scas adc push pop or push or push lret cmp jns xchg icebp lcall aaa daa out push cltd cmpb loopne mov lea mov add xchg into cmp int3 inc out xchg (bad) mov push test pop fs sahf sub mov (bad) int sbb arpl sub adc scas enter mov daa sbb inc jnp in jno insl xchg mov test cmpl inc push xor movsl das je adc add (bad) fistl (bad) jns repz cwtl mov in pop mov adc in rcr mov cwtl fistpl mov inc fstpl push (bad) repnz rcll and pop jp adc (bad) lcall pop adc into int cmp aaa jb push outsl and enter bound outsb jmp sub pop sbb stos jnp,pt (bad) (bad) mov lcall les aad cltd or push addr16 dec movsl mov adc lcall lock dec movsl adc (bad) pushf lods enter pop movsl sub dec jno ret lds faddp mov pop adc cltd push aam gs stos in sbb adc mov aam xor (bad) push cmpsl xchg test out mov pop inc ficomp inc into mov adc lods pop cmpsl cwtl imul js xchg inc mov dec cli push jl outsb nop jno xor jno mov xchg popf hlt ss mov lods jns sub sub xchg push lock jmp sub (bad) mov sbbl rorl lret xor and xlat push push jl fsub jne and sub mov add mov imul cmp pop arpl and cltd in push in sub sub sbb jnp xchg xchg pop dec fwait xchg into push cmp dec push cwtl gs rcrb push stos and repz jle insw inc xchg xchg xchg sbb nop and stos dec adc jl (bad) mov dec fwait jno sub adc test sbb xchg stc xchg cmp jge inc in cltd ret pop les adc fwait cmp sbb movsb mov mov xchg pop lea mov stc test rcrl cmp pop rcrb xchg mov sbb or in cld mov pusha cld sub dec leave mov imul sahf dec aad mov scas push insb enter or iret je xchg or or cmpsl int3 jo adc sub xchg dec and pop mov cmp popf cli adc mov stc jne sub pushf jecxz aad fldt push push stos push lahf xor subl inc stos fs add int fstps hlt mov and inc adc mov add ss (bad) mov ret int3 jmp popl fdiv imul jo jae sbb mov pop repz push lods shlb adc xor xlat fadd mull mov repz in fildl (bad) test push aam push inc daa lods addr16 sub dec pushf adc mov lods test mov sub jp,pt sbb xchg push add sbb movsb sbb gs test dec push xor dec sbb rorb mov pushf popf lds mov movsl dec or das xor mov lods or sbb lods push bnd fcmove push sub imul adc sub inc jo jae push fistpl or mov nop add push scas pop outsb xchg adc fistpl lds sub sahf fwait pop or aas and mov stos and add xor push inc insl ret xchg int3 rorl (bad) and push imul mov outsb enter fidivl (bad) cltd xchg test sahf aad mov pop pop nop and fstps mov mov hlt scas test ljmp mov jmp sub stos xchg mov pushf in lret arpl mov popa in fldenv lods mov inc int sub xor inc cmpsb rcll adc mov jnp xchg push orl fisttpll out popf xchg cwtl xchg lods sbb popa lds push (bad) and xor shrb inc jge (bad) sbb jbe arpl pop jns mov xchg scas xchg push lcall fildl shrl sbb iret shld pop cmp lea mov mov jbe xor add fwait xlat imul fnstsw and ret push mov push stc pushf insl jno add and mov ret inc dec xor (bad) push cs dec aaa xchg test sbb je xchg cmp test lods outsl adc ret xor adc cmp stos dec sub ljmp je iret shrb lret mov daa xor lret bound or scas movsb sbb xchg dec sbb xchg shl xchg fwait jp push dec xlat push test andl (bad) mov xchg in sub mov ficompl popaw push pop adcl xlat sub push lcall pushf (bad) mov xchg dec add xor xchg sub mov and repnz (bad) jb mov xchg fisubrl jbe sub outsl adc push mov daa add xchg inc push cmpsb fcmovb repnz xor loope dec add push and push ret adc push imul ret sbb stos icebp cmpsb fs lods out je xchg sub cwtl es int pusha add lods xor dec lods xchg and shll and jb,pt dec adc xor push aam lahf (bad) xchg mov (bad) mov push sub popf popa xchg lahf cs sub push add int fwait xor xchg and dec pop pop add dec xor pusha sub fisubr dec pop push pushf out movsb nop bound mov mov xchg adc outsb push mov inc test xor pop xchg or lods lods stos leave and lods jle dec outsb dec xor cmpsb or sbb xchg push adc shrb jno fisubr lcall aam test xchg lcall pushf movsl xchg test xor fldl inc movsl inc adc dec pushf popa and add lds fsubrl movsb mov adc mov xor or lret xchg dec sub int pop add imul insb enter int sbb sub push arpl je imul and add sbb mov js scas aaa ds popa lcall stos or adc orl sub push int3 aad lahf xor int loop xlat out in cmp cmpsl mov sub adc mov fadd (bad) mov daa xor push dec xchg test (bad) adc mov pop mov ds sahf push popf sahf sub push mov push push jno inc frstor jecxz jbe lds pop pop daa cmp cs jae les jl (bad) rorl out xchg lock mov popf pop stos mov push push and out movsb mov test hlt test pop out (bad) popf pop fstpl xchg push movsb cltd int3 stos lret cwtl mov push cli xor sti aad push (bad) sub or int pop add stos hlt stos sbb int3 jecxz ror push ficomp jp push jbe stc push addb mov lods into cmp jae cld push insl adc dec mov dec mov jno (bad) jle dec jg imul cltd ljmp jno add xor or loopne push test lret test mov inc nop push xchg sub xchg fiadd fidivl ss inc gs lods push rcrb mov and cmpsl adc xchg pop jg push aad jp xor push xor inc out inc inc xchg stos xlat cmp sub mov jne ljmpw add inc orl lds (bad) sub sub addl movsl push push lahf sub push lcall cwtl ret jb dec nop cmc test imul dec inc cmp cmpsl mov lods inc popf scas lds push push push jg stos negb sub mov jb inc mov jae lods pop xchg xor inc cmp mov in sbb inc add mov call adc rorl (bad) or inc pusha push test jmp or sbb push fcompl mov mov in inc push rolb lds scas fwait out imul outsl cltd jg mov test (bad) jns cmp xor sub push cs or mov and mov sub dec jbe ljmp sbb cmpl sahf cmp arpl jmp add nop cld push mov js xlat jo add fwait adc scas and stos inc mul xchg add mov jns add outsl dec je rclb dec insb xor jge jae push add movsb cmp enter mov insb pop and sub iret out testb sbb pop (bad) repnz ds fisubrl loopne and push push add mov scas fadds xor scas hlt jae xchg xchg push sahf sbb outsl test out mov out pop push loop push loope jp push add js add add xchg pushf adc mov pop xchg imul mov ss cld dec movsb (bad) cld das xchg jg es or punpcklwd movsl pop in jecxz xchg dec add repnz inc xor or sub mov mov dec sbb ret xor push inc rorl es push fisubrl dec add or xor adc add std sti mov mov xchg mull lock shlb jne mov push cmp movsl pop jmp int xchg xchg lods ljmp dec (bad) ljmp push outsl mov push outsl scas push aas jb xor in cld pop rclb mov add mov adc std or xchg jmp push cwtl jbe mov xchg adc xor add jo stos repnz loop fsubrl mov (bad) mov push mov xchg mov nop ret fisttpl rcll pmulhuw mov jecxz sbb stc pop jno inc inc bound pop and movsl in sub and call push push sbb push (bad) shrl int sub jbe mov jno jb sub popa rcll out jne adc cmpsl inc pop ljmp in mov and push push add push pop fucomi mov fdiv push loope jmp lds icebp ds (bad) clc mov cltd and dec adc mov lods out cmpb fldl divb (bad) mov outsl scas int mov cmp dec sbb popa pop movsl mov out pop repnz fisubrl repnz in pop clc loope aad nop jecxz aas cmpsb cmp fisub std in jp inc test cmp and pop pop pushf outsl mov and test push dec cli sbb (bad) adc jmp adc sub cmp icebp push xchg movups add lcall int3 adcb jle movsl pop mov test mov xchg jne or jae fadd stos out and sbb inc jmp or enter int sbb insb out or cmp incl lods enter leave mov pop repz pushf sahf imul xor aas and push add js daa ficompl xchg mov aaa mov pop addl jnp ljmp dec ljmp cmc lcall xor dec (bad) rolb mov sub (bad) in mov out push or popa xchg inc test sbb or (bad) lcall cmp in mov jae lods xor jbe pop out and test push pop (bad) or movsb xor repnz lcall fldl or (bad) ret and shrl inc sahf jl rclb inc push fisubl ljmp int3 in cli lods push (bad) push nop xor aad and xchg outsl lahf sti mov inc sbb dec setl xor mov fstpl xchg jne lret sub orb (bad) inc cmpsb lret orl pop les je pop mov jecxz mov aaa (bad) mov sub pop lock pop cmp arpl popa xor jp daa ljmp pop fidiv test test adc pop adc mov lcall jl sbb inc add mulb stos lret in cmp mov add sub inc mov popa in lcall or push adc cmp mov inc mov cltd and sbb inc adc sub sbb push sti jg push adc mov pop pop pop or push call xor jns lds sbb mov dec pushf mov lret jnp movsb cld push rorb rorb or jp (bad) pop push scas jecxz jl (bad) push cmp and dec fwait in cmp lods data16 fidiv xlat das xlat jle pop xor mov inc pop jg aad lods sbb mov push (bad) or mov mov imul gs cmp in lods inc lea xchg sub mov imul jmp cmp pop or imul inc test popa inc or sbb in pushf xchg lea inc push gs idivb es clc ficoml jno dec cmp sub rclb pop das in push add popa mov imul cmpsl rorl ss lret ljmp loopne pop loop sub cmp add cmp mov ret (bad) (bad) hlt mov adc or mov aad insl jnp sub in sub outsb outsl mov dec loope repnz cltd dec mov adc and mov mov scas lss sub push jb repnz sar push inc in movsb add lds stos cmp popa pop sahf mov push sub jb (bad) icebp mov and or ss lods mov std cmpsl aam repz xchg xchg pop inc add decl push adc pop pop mov pop push jo cld inc xchg es mov xchg (bad) sbb movsl pop aad dec fnstsw in pusha push pop mov and out push and pop dec lret out jno inc lock mov jl ret dec xchg push in insb aam aam inc xor xor pop xor cmpb dec out xchg and pop cli shlb mov and push outsl int3 pop or in lock out add test lahf inc gs dec js xchg or (bad) jno jle int3 mov jbe mov mov xor outsb aaa sbb rol push gs xor dec xchg pop xlat dec xchg mov push mov push flds (bad) insl pushl jns sahf mov pop mov jmp jo clc cmp test cmpsb aad (bad) dec imul cmc lods adc lea lahf (bad) jne cmp mov sub repz std adc jmp mov add mov in inc js adc sbb pop mov xchg in xlat push pusha pop push repz adc fcos add jg sub jg call pop xchg cmp fcmovu pop loope jno push xchg inc fldl jg or hlt pusha std xchg sub xchg xchg loop stc ret dec aaa cs lcall fs add (bad) add push xchg (bad) xor test pop out push int3 popf pop (bad) cltd sub xor inc enter jge sub mov push adc jl lahf (bad) xlat cmpsb dec fnstsw movups sarl jae out jmp lret es in mov jo xor inc ljmp leave imul in mov pop jge or pop insb push lret sub lods in cmp xor je aaa pop mov les and jecxz je lahf inc push or (bad) and sti push add mov cwtl pop lret jno mov and add xor and mov hlt dec pop cmp ds mov lahf fwait jle adcl daa dec pusha pop int dec push shr popf out adc sub pop js lods popf loopne incb leave out fsubrl sbb imul imul add bound or mov lds out loop dec clc fcompl mov jo int mov push sbb mov stc mov inc and jo pop nop xchg cmp push xor push mov cld sbb ljmp sbb push add stos add (bad) out sub cmp movl imul pop pop fadds bnd sbb push mov dec icebp decb xchg test lds into cmpsb mov outsb ds ret inc fcomps fcmovbe mov xor ja inc test rcrb jmp mov stc add mov mov cmp vinsertps lods dec data16 push movsb fsubl cli cli adc mov testb enter mov push jp add iret inc out adc push orl outsl fabs inc xchg scas aam aaa sbb int lahf loopne outsb mov mov insb xor pop cltd mov imul adc jge stc dec out int3 xor das xlat xchg out nop (bad) xchg or cwtl nop mov xchg inc mov xchg mov loopne lret loop addr16 xor (bad) mov push or and jge mov pop jmp out inc xchg rcl jecxz dec in xchg xchg imul insb mov call je bound sub addr16 push jns inc aad lcall clc fwait mov test icebp jp push mov and xchg dec xor push notb jg push stos fmulp cmpsb rorl inc jmp push out out aas mov daa xlat mov mov mov enter shll in mov lock sbb mov xchg outsl test mov lods xchg xor lcall add in imul pop push cli sbb pop sbb js jp jmp addl in out push int adc fimull cmp cmp mov aaa push aas xor ja cs ds je cltd enter inc (bad) fs in (bad) sbb addb push into inc jo lock aad lcall dec js xchg leave sahf jae and jb mov push es xchg sti dec inc js pop (bad) repz push inc xor and xor dec lret nop inc out nop stos mov (bad) je lret out push js push push jl dec stos int3 xor add dec add fsubl xor or stos or pop sahf xchg test jae pop or dec out mov xorb add test in inc frstor ret sbb mov adc push jnp stos push iret inc pop js sbb jp inc shll jne cld sbb loope jge stc je bound icebp ja push (bad) idivl cmp jmp sbb lea adc popa ja loope adc stc les push jmp cli pop loop xchg pop aaa pop jne mov sub fdivp cs adc push pop aas sub push add mov daa xor lods jns pop jns push sahf mov js jmp out ficom dec or sub int xor add and call repnz jl dec xchg add push add popa push hlt repnz pop mov inc push test sbb mov lods das adc aad mov jno dec test jnp sub lahf (bad) jmp shlb mov les xor pop subb out jecxz adcl push movsb test stc test cmp inc (bad) jmp iret sub mov fwait out mov outsl and xchg pop or or scas mov les movl in clc (bad) stos pop adc or push jne ja xor inc jge push lcall in addr16 insb in ss imul lds mov push out scas jg popf inc mov pop shll ficompl fbld xchg xor iret dec cmp dec mov rolb movmskps (bad) fildll mov or xor pop sarl mov aad pop xchg pop pop out dec xchg mov cmc and cmp cmp push imul sbb mov and ret pop push add xchg ss push addr16 push bound call push or adc sbb repnz xchg test mov std jb adcl pop sbbb cmpsb sub push lret cld rcr popa ds adc sbbb in iret mov adc inc xor xchg rorl out in les push xchg (bad) aas test xchg aad lret xlat in rorl or ja cli xor iret pushf mov add pop inc xlat mov sti push test or (bad) inc mov pop add lock test das int lret sahf stos fildll das into (bad) cli les inc pop sub inc adc lea mov xorl ss dec clc in push cmpsb flds add push mov imul fbstp lods dec xor into in mov sub cmp (bad) pusha popf test aaa aaa jae adc es repz mov dec popa mov (bad) pop rolb pop push dec xor int in push iret inc dec mov push sub lcall sbb shrb subl loopne inc (bad) outsl inc dec dec movaps xchg movsb imulb xchg jge fmull adc movsb rcr add xor or daa mov add mov jo aad push fwait inc pop cli jno push enter insl loope dec mov pop xchg add mov push fcoml inc repnz and (bad) jl sub outsl (bad) int cmpsb mov dec xor les adc lds cmp jle mov xchg divb add lret fisttpll fstps int3 and out push andb ja dec loop js addr16 push test add jbe insl mov enter push inc sbb adc push vpor mov push (bad) cmp jne cmp imul js test mov mov test pop popa fdivrs in add sti jp sahf ret mov enter jmp add ljmp fsubrs out xchg mov mov je or fstpl (bad) mov ss rcll mov ret sti fstpl bound hlt mov je subl and sbb mov data16 push xchg daa or imul icebp ret imul jl xchg jo inc xor cmp push jmp push xlat js ret stc rcrb pop movsl push sbb aas push movsl xor sti popf inc mov in jge iret push push adc mov inc add (bad) int3 or mov xor cmpsb pop jnp fstpl dec negb icebp out xchg sbb loop std hlt add imul pushf xchg cmp andb mov aam fcmovnbe (bad) mov pop leave rclb outsb jle fisubl dec dec jae lock repz iret aad cmpsl lea mov jp sub mov push mov loop push lahf fcmovu and out dec xchg cli les (bad) mov cmp mov (bad) sbb push pushf fs cmpsb jns mov divl mov rcrl cmp in loopne jnp jbe test sbb scas cli pushf sti pop addl sbb push sub pop and pop repz xchg adc loopne mov arpl dec mov sub xchg cmp faddl sub mov sbb js push stos imull dec adc cld insl int pop into mov cwtl (bad) in movsl pop push repnz push mov hlt addb cmp fs aam cwtl sub jl loopne cmpl push mov leave (bad) mov or push (bad) (bad) movsb in data16 sub int adc push repz mov jae imul jo mov popa cli es sarb mov mov jp fsts int3 (bad) flds leave test pop test push push pusha adc mov test cmp fisttp imul mov nop testb out jns dec mov popf xchg jmp les ret pop (bad) lea mov sbbl cld dec pusha rcrl pop inc (bad) cld imul outsl sti jo push jge dec push lock mov pop adc jge cmp or mov fdivr push xchg into push push cltd inc xchg and leave jnp mov mov mov cmc fwait mov std imul xchg bound xlat pop pop mov andb (bad) repz sub lods shll fidiv pop dec movl sti inc xor inc xchg in and and cs sahf out xor (bad) and xchg jp in pop cmp es (bad) in dec aad adc add loopne xor pop aas mov test pop pop pop nop adc mov movsb push mov mov sbb jmp mov in lret out aas je or jns push int3 call add or sbb jne sti divb pop insl add jg cmp popa sbb shll mov inc mov xor pop cmp add mov jmp inc adc (bad) jb sbb hlt mov dec iret inc cmp push mov inc cld shll ljmp xchg push add xlat and mov scas jo cmp xlat (bad) pop push or stos or mov inc add (bad) stc in push push in add lahf adc jne mov pop lcall inc loope push ret push or iret push jge int stos add pop jp lock sti push ficoml adc loopne int mov jge rclb add fisttp mov out mov inc pop bound jle insb subl call and xorl fs in adc test imul in and mov rep mov ret and push mov xor jne idivl xchg push adc fisttpl out cli fmull out (bad) pop or pop dec rcl (bad) rorl cmpsb mov scas or ret shlb std js insb out enter pop (bad) rcrb cmpsl inc lds mov neg test add enter into xor jns test adc push lret add icebp or xchg inc jb pusha ficompl xor sahf std pop das inc imul jnp or adc out ror xchg or loopne movsl push in push sarl scas mov (bad) (bad) in shufps dec sbb nop inc mov fs bound aaa mov sbb mov add adc lret and (bad) or rcrb and push and test cmp dec ret ret insl outsb lea cmc xor (bad) or or inc jae add cmc pop inc and cmp hlt jae fnstsw add and adc pushf pop mov and lahf xchg imul lea lret jae or cmp jmp dec push test mov jbe (bad) inc fwait lcall iret es xor loopne aaa dec pop mov pop sbb cmp clc cmpsl lods inc repz mov or jne jne push push clc and xor push inc cmp sti pusha in mov mov das clc sbbl das adc (bad) dec in shll dec xchg add and mov adc cmp jb popf xchg out jmp pop jl cmc jno imul clc jmp and pop dec xchg adc mov (bad) pop pop hlt mov xchg lret loop push push out cld or sub cmp xchg push daa or enter adc (bad) cmpsb scas popa push icebp push rorb repz loop rclb jae std gs add cltd out out std loop inc loop mov jmp mov cmp and bound cmp cwtl cmc fwait movsl xchg std xchg push ret das pop sbb pop or fs xchg in sub jg lods mov dec or pop outsb adc adc scas mulb xor frstor (bad) in push push push sub jle push ljmp (bad) and jns adc or pushf cmpsb imul int3 insb lahf repnz in out (bad) sub rorb inc and mov xchg sbb adc sub xchg inc std test pop je lret xor dec in push xor call out lahf lahf cwtl pop mov mov push mov jle mov (bad) and add or in add dec and inc (bad) test or pop (bad) jmp shlb adc or leave push xchg sub loopne lret lret mov and pushf add xchg std jl in out movb dec push add pop sbb inc lods in add int3 mov call popa test das mov pop lods loop jge popa mov mov loope (bad) js shr f2xm1 loopne dec adc jmp add in inc sub daa lds pop test add xchg das sub push push mov out push dec lahf popa je fisub das dec inc inc (bad) mov fs call jnp mov sub push (bad) jae adc ss ja xor enter add outsl push out pop and negl cmp inc jecxz sti mov testl jae data16 xor nop (bad) insl fstl push xchg xchg adc leave sub icebp mov std inc ret sarb lret lcall inc sbb loope rcr mov add lahf sbb jae push ja cmpsb mov std nop and popf pop out adc fld jge add ret (bad) loope mov cmpsl sub cwtl mov lds xchg push add push xchg inc sbb test or mov outsb pop adc dec test call jecxz inc cld popa jns ret mov add adc pop push movzbl pop pop adc lcall mov add dec pop push sbb xor inc pushf or popa mov add mov lret push call sbb ds into xor push inc aaa xor out in enter dec icebp mov push sub rclb push sub nop out scas imul cmp pop dec dec sub add ret or push cs nop adc pop pop dec jp dec push iret fs sbb pop in mov mov cmp stc mov fisub ds loop cmpsb popf inc sti icebp mov push inc out stos cmp out mov xchg idivl cmp push or mov mov mov push pop adc cmpsl jnp jle mov cmc jb sub pop sbb add or mov das jnp ljmp jg or ret incb push fisub push cmp ficoml test ja inc push data16 stos sub cmp (bad) (bad) mov rcll mov xor lahf popf mov pop ljmp pop in insl push addr16 fidivr jl push inc cltd xchg lock popa cmp cmpsb pslld dec ljmp cmovp mov dec ljmp jle xor je,pt cltd sarb adcl popa xchg dec popf cmp cmp das js and pushf jmp and mov es test and insl (bad) fistl mov es ret fsts dec add push mov pop mov inc cmp movsl sbb lret arpl out pop ja push and hlt adc add or xchg sub pop aas lds loop lock cmp sub adc mov mov in popa fdivrs pop lahf addr16 les jg and popf add xsaveopt cmp stos out lods nop imul push xor and dec xlat sub ds inc imul loope xorl xor xchg mov cmpsb mov sbb push pop pop (bad) hlt or out mov rcll adc push mov clc pushf imul xchg push and sub ljmp inc mov aaa (bad) mov mov out pop in mov repz repnz rdpmc lret addr16 das fmuls js inc pop dec shll pop (bad) pop int repz and mov out (bad) stc cmpsl addr16 icebp pusha ret (bad) dec mov sub pushf lret sbb movsl jns push fstpt roll xchg (bad) cmp sbb loop in repnz sub out mov mov dec ret (bad) pushf mov xchg push or sub fidivr out add ficomp xlat rorl xchg lds loope leave ja adc xchg stos (bad) enter (bad) inc push sarl mov adc in cmp (bad) lcall jbe aam outsb pop xchg cmp enter jnp add adc les cmc aaa mov mov or (bad) popf fwait pop mov or icebp aas cmp orl stos ror or loop,pn nop xchg stc lret push std add out in dec adc les lcall and mov xlat addr16 push dec jecxz xchg (bad) pop jmp push push push inc push xor dec popf (bad) leave aaa imul push push xchg es cmp ret gs in cs pop and aam dec jecxz cs dec movsl leave sti inc push dec sub cmpsb iret and adc mov enter mov call movsl sti dec dec jl mov repz push xor xor sbbl xchg push fadd cld aas enter inc dec xchg and sbbb add leave fcmovu mov movsb push ror (bad) mov cmp adc shll ss sbb mov push inc mov dec mov mov push lea sub or (bad) mov xor xor icebp mov into popa xor mov lret cmpsl mov addl fwait xchg xchg or or outsl sbb or cltd clc es in loope adc inc jge adc lods jnp or aas xchg in lret cli push dec dec jp cltd inc dec arpl lock inc pop add std lods mov add and gs cs lds xchg pop sbb mov out xchg je test lods mov sub in adc fidiv hlt es mov ds stc xchg pop lock xchg or adc fidivrl add test invd push mov dec push jle adc and dec aam insl addb fidivrl je (bad) xchg loopne xor mov (bad) int cwtl stos sub mov jbe adc mov add popf push mov ret fdivrl cmp cmpsb add lret out ret adc sbb lods push loopne insb fdivs dec inc mov sub fdivl jb (bad) stc fwait sbb les repz adc sti push adc inc sti xor adc pop adc add dec in pop add (bad) push push insl inc adc or mov repnz test dec sub movsb fadd loope daa mov imul dec rclb nop xor in stos imul nop xor daa and push add mov sub mov repnz scas loopne stos sbb pusha mov leave or repz xchg mov lods ret cmp mov pop pop mov pusha imul sub roll mov xchg and cs xchg adc push xor xchg xchg cld cwtl fcoml jbe mov pop push js sbb xor cmp mov aad pop mov inc mov dec fadds cwtl mov lahf inc nop loopne add int3 xchg xchg cmp dec xchg int3 je (bad) in fcmovnb sarb pushf adc ja pop adc ja das inc push js inc xor mov xor roll iret push (bad) fisttp mov mov fs dec or subl pop jb cmp insb mov fcompl push push (bad) sti dec xor sbb pop fcomps and jl in cmp stc sbb xor popf je cltd lock pop add and scas rcr sti and push sbb (bad) mov jg in cli sub jne cmpsb ja push jle loope inc sahf lds xchg rolb push xchg rcpps repz das cmp ljmp inc xchg pop popa iret add push mov mov push test jmp push mov pop and inc cwtl es stc mov add push les mov loope mov inc data16 mov insl and mov xor sbb sti movsl imul mov xchg push out cmovnp (bad) and mov mov push sub mov dec into sub cmpsl and ss lds les and pop ret mov sahf mov push xchg lcall sub test ret loopne out jnp rcl sbb xchg addr16 dec jl adc mov cmp int3 aad mov cmp rcl ret push lea icebp daa enter test pop pop stc add add mov sbb or mov daa (bad) push imul mov fdivrl push mov push jb addb and mov fbld jl and and outsb sbb cltd in mov xor mov stos ret dec or daa add push jns push push (bad) fucomip jl out das movb notl data16 push sbb push ret xchg push and xchg call mov lock bound roll jge xor mov mov loope sub mov push push or mov sub add test aas dec push sbb out mov bound movsl or bound (bad) lret mov lock sbb pop mov add push int dec or mov jge das pop adc add sbb lea mov add mov out mov dec adc cli push xchg adc bound cmpsl sbb xor xchg int3 sar sbb push pop dec sub sbb scas cmp mov mov fisttp nop pop jp mov rolb sub xchg mov pop aam rolb outsb (bad) and xor pusha xor loopne rcrl fwait jecxz mov inc and or xchg (bad) fucom (bad) jne add out pop sub pop imul (bad) cmp mov jnp xor mov jmp jbe (bad) lahf cld mov lods dec pop xlat xchg push ret hlt and dec or pushf jb imul outsb mov mov sbb dec push addr16 test pop sub aaa in push jl jno jnp sbb sbb ss les adc mov push and and icebp inc std sub cld push gs or mov leave push mov test sar hlt fisubrl mov sub push jle test inc jmp add in add pop pop js mov mov push int3 sti lret cmp out rcl push push sub mov sub adc jae jg repz shrb mov mov add or cli insl or stc mov sub or mov (bad) icebp or test mov jl out mov cmp push cld and in xlat xor insb add cmpsl sbb or shlb inc pop sub daa mov mov imul mov mov or sbb mov mov add push pop stos inc pop and jno pop pop sbb xchg das push fsubrs dec dec clc icebp (bad) jns inc lahf nop rcll xchg out aad in dec cmp inc movsl fisttpl and push jl and (bad) movsb push es push in and add je lcall sub pop es adc andb or lods movsl cmpsb sarb push jns scas adc cmpsl rclb sbb xor ret fldl cmp aam insb aas (bad) xor fiadd mov pminsw pusha (bad) lcall xor (bad) rcrb or fcompl (bad) aas aas sub or inc das das xor aaa cs dec jge jle or pushf (bad) decl je call dec dec mov pop push in in in xchg and notl cwtl aad aad mov movsb mulb fs dec clc or mov ret push dec jle (bad) lock aaa pop add call push ret out mov inc test clc aas mov sbb pop lret pop add or pop cltd imul push mov sub icebp mov rclb or pop jecxz pop cmpsl xchg (bad) jg ds rolb cmpsb sti std dec mov cs mov push dec xchg sti daa cltd sbb push ret das enter sbb sub in add sub scas push je call hlt sub inc and rolb cmp das xor pop cmp jo (bad) push xchg addr16 push outsb mov jbe lods jns insl orl adc ret hlt dec cmp pushf push dec mov jp lock sarb mov xor int jbe mov mov push xor test push xor cld mov inc xchg arpl (bad) (bad) gs insb mov repz subl jae mulb das lahf outsb and mov mov cmp sbb test aaa stos cmpsb data16 adc adc mov mov dec mov push mov inc mov xor ja sbb mov inc cmc jle int jmp dec outsl adc pop inc popa xor call out push imul and stos cmp jb mov call mov fsubp int bound mov jle ljmp mov mov test push pop aaa test gs adc sahf aas flds mov adc test (bad) daa push in popf dec pop (bad) sbb pop mov sub idiv dec popf fucomi aas in into and sub mov sub dec pop inc mov inc ret jno xor dec adc lock push dec push or dec fistpl imul cmp movsb inc adc pop pusha pop adcb aad lods add arpl loopne ja mov cli jbe test mov (bad) js push add dec fxch sti dec fwait mov jmp add fwait lret rorb mov mov adc cmp cmp test cmp ja test test test sbbl xchg jns push (bad) int3 das leave aas popf mov gs xchg dec int3 jbe (bad) dec xor je sarb std jle mov outsb inc and mov push sub rcrl insl gs jnp mov cmp dec fdivr daa mov push lcall push and aad pusha inc das nop and mov adc add lds push or mov push dec dec jb dec cltd into jg pop ss adc andl mov lds dec mov sbb inc fcoms adc and xchg aas (bad) mov xor add andl into fistl inc sbb out pop scas hlt dec push pop sbb jecxz mov inc ljmp mov xlat lcall dec loopne add inc push adc pusha data16 inc insb sub sbb push add and push cs fwait clc movsl movsl or sbb daa scas fdivrs gs pusha (bad) andl icebp adc jno xchg jae arpl rorb int mov in mov lret add rcpps mov jns xor ds or cmpsb daa pop sub sbb adc movsb and sbb (bad) xchg xchg lret pop loope push push in leave out jns mov sub mov dec cmc jg aas call repz iret ficoml enter mov push mov loop xchg mov inc mov pop nop push push rolb xchg or aaa sahf mov mov add push (bad) mov test popa add cmp dec cmpsl loop imul or call cltd mov xor in pop dec lret cmp decl push sti (bad) popa cli movsb andl pop mov repnz sub jmp imul sub fnstsw aaa push mov lahf mov mov inc add jmp xchg adc mov ljmp adc mov jl fwait push cmp imul mov jns repz pusha cltd aam jecxz jge inc hlt push lahf loope sbb std push je in mov imul mov cmpsl lret ja push cmpsb sbb fisttpl loopne adc mov cwtl cs xor shlb cmpsb imul mov xchg sbb pop aaa mov mov arpl pusha or dec jno xchg scas or mov js es mov mov pop cwtl xor add mov into or enter stos int sub sbb pop mov adc cvtps2pi int lret or xor imul aam cmp test (bad) aaa push adc mov inc dec cmp adc push push cmp aad dec and and (bad) mov jb hlt sub fldcw repz sub imul sahf xchg xor pusha xlat xchg call pop out dec push and lret dec fsubl push jne and aad mov inc js jle adc sbb mov es loop push mov sub shrd pop pop dec xor sbb adc pop jecxz out popa mov pop les jae xlat ja cmpb push testb pop xor cmpsl sti sbb inc arpl pop jp fdivs push and sub enter movsl sbb add dec pop sbb fnstsw lods xchg cmp outsl lret in rcrb negl daa das sbb (bad) bound jge,pn xchg or pusha leave add movsl fmulp repz xchg (bad) or faddl pop jecxz arpl or popf sub js sbb je mov lea loope and jbe rcrl pushf insb pop jo xor mov pop out mov cs push push pusha jne out mov mov xlat lds enter jbe add subl out cli lock pop lds push push and sub lcall scas addr16 and ja ss push shr js test ja cmp add dec leave movl sahf mov mov inc pop jns pop bound mov and add gs addr16 jmp ja mov push icebp mov xchg (bad) inc fisub adc mov jge outsb test imul inc add (bad) negl push inc and std movsl sub push ss sar idivl mov ret out mov std adc mov fwait xchg je push cs mov stc xlat xor inc push and jne int3 pop ss cli das mulb fiaddl call pop enter hlt mov xor arpl lods je jle and xchg mov outsl sub xlat xor dec xchg cwtl cmp mov pop add dec jb xor fiadd add lods xchg push sub arpl cmp loopne aam dec in (bad) arpl xor test push jnp fnsave jne xchg out das push insl mov lea (bad) sti in repnz rorb mov (bad) shr lahf movsl adc mov or push fcomps push shl cmc push andl xor (bad) push adc mov into test mov sub cmp xchg pop mov dec in lcall vucomiss mov scas cmp repz (bad) out jne add lret mov int3 dec loop pop je roll scas push and loope cmp fs stos pusha jno into push jg mov outsb mov (bad) out cmp dec and inc add nop (bad) or xorl decb or scas jg xchg xchg (bad) xor (bad) (bad) push pop fwait mov jp mov pop push imul xchg nop sbb cmc push push loop pop pop mov push cli jne cltd sub test jle je stos call sub popa gs mov and or mov ja sahf in add jb cmpxchg fistp pop jae int3 lods mov mov inc cmc pop in ja int3 insl sub cmp sub dec imul adc bound lea stos sbb mov sbb pushf xor cmp int dec xchg adc std or xchg xor les jp lret mov push or scas inc scas in mov dec fisubr int3 mov (bad) mov dec push fnstsw imul mov je pop outsb aad jbe push pop push jge fs clc in shr (bad) or (bad) stc xor push inc adc cli arpl xor (bad) xor imul mov pushf movsb lret scas lds pop push das mov imul lcall out out mov cmc ds jnp fcompl mov cmc jae jmp (bad) scas push std push push push sbb add sub sti mov out addr16 inc idivl inc push fimul add mov mov push pushf adc (bad) cmpsl lods les inc (bad) dec rorb jmp test fwait ja xor mov sarb mov sahf cmp es lock rol imul inc cmp jge daa or loop jo das out jge or loope xor into sahf popf cmp call mov pop mov outsl ljmp mov daa inc in cmp std movsb scas and and xor repz mov push out add loop ficom mov push test mov lret pop jg push fidivl popa add xchg push push repz push test mov js or frstor popf xchg jmp jge repz mov daa incl jnp adc (bad) xchg and into mov xchg inc int3 aaa pop and (bad) inc push mov add das int3 add inc pop push fstps push sar (bad) dec fcmovu jecxz jbe lret aaa sub and popf inc add jns in imul dec jb iret mov test pop shld jle xor mov cmc or xchg out js cs je cs ret lods mov iret pop outsl scas xor cmp cltd jecxz pop sub mov mov xor sbb js jge lahf gs mov mov ja,pn ficompl leave fsubr mov pop and or mov pop bound cmp mov loope pcmpeqw out dec (bad) pop enter jnp sti and fldcw fs div fwait cld cmpsl (bad) lock rcrb lds stos gs jo call inc and xor fbld dec mov mov repz jo pop shr cmpsb add mov lds bound dec adc stos add js popf mov pop test (bad) or push or mov shlb mov (bad) js mov stos mov mov jmp and insl mov mov dec stos adc add lret dec out scas cmp out inc adc jbe frstor mov mov aas or sbb cmp loopne shrl cltd push jo sbb out lods int3 aam cmp (bad) icebp lds mov stos pop jp imul jbe dec (bad) xor cld and stos adc and les adc les cmp dec sub rolb xchg xchg adc xchg (bad) cmp sub cmp add add (bad) or mov cmpsl lods xor pushf sbb cmp psubb aas sbb aas xchg jp je loopne stc lret pop add cmp jecxz cmp ret xchg lcall pop lret rcll shrb pop fst lahf stc stos or jnp xor inc and lret jg loopne mov adc inc sti daa sbbb or icebp sub pop add sub cmp ret movsb cmpsl push outsl xlat add dec in xor mov jl fldcw xlat repz outsl sti mov cmp xor jns cmp mov and (bad) cmp popa cmp or lret pushf or hlt mov testb inc lahf cmp movsb rcrb lcall aam fstps inc mov xchg mov xchg adc adc inc inc mov add dec push fbld sbb cmp cmp leave jns lret pusha jmp add mov lods dec inc leave inc outsl shrl pop push jge pop cmp mov xchg cltd sub flds pop push sbb xor adc mov stc xchg int3 add ljmp or jbe cmp mov sbb push pop sbb pop clc xchg test shlb mov das out xor push ror inc out sarb movsb sbb aaa dec adcb pop (bad) roll ret enter insl es and or pop ja rcl in fistpl push incl adc popf test xchg cs mov clc sbb xchg push imul fdivl mov outsb nop mov add and popl xor (bad) jo jle pusha std aaa repz aad mov or dec dec es scas loope mov adc (bad) jmp enter mov push push push adc loope fidivr std pop leave lods push call cli int inc mov cwtl mov adc pop test (bad) jl,pn es in and sub sub push les pop inc cmp scas xor push or mov sti stos jb (bad) ss icebp jg jno stc inc jl pop sbb add je mov dec xchg dec mov sbb lcall js insl and jecxz fs cmp test adc sub mov mov stc mov js ds pop sub mov dec ja lods jns jecxz or fwait mov push decb xlat cltd mov sti add into cmp in bound sbb stos lcall hlt dec xchg nop std bound add mov and and imul shrl shr mov mov adc add push fisttpl jle sti gs inc incb xchg rclb cmp cli inc sarb add push mov and (bad) mov and dec and loope loope sub packsswb out ret aaa loopne loope inc (bad) add aas jg int3 iret popa dec cmpsb es lret sbb test pop ds dec push and (bad) (bad) outsb and mov cltd dec and fcoml daa pop or rcrb jns mov sbb sub mov loop push repnz mov out sbb and orl sarl jbe sarb sbb ffreep cwtl xor and dec addl jno (bad) dec imul pop mov mov xchg (bad) xchg xchg (bad) rol sub shrb pop cwtl push adc sahf stc push int xchg insl cli sahf cmp xor push xchg insb mov (bad) or orl inc and (bad) pop xor movb sub test add push mov add mov jge insl or mov xor push mov ds or push inc pop aad pop subl or ret test xchg shll movsb or ljmp add loopne mov add push pusha test out cli jle adc fstpl scas pop add ror stc mov mov sbb mov jns inc daa push pop cmp mov push movsl lea (bad) data16 rorl inc xor mov dec mov jo lods js mov xchg pop or xorl divb cmpsl popa cmc mov inc jo std pop test cmpsb lret sti fisubl mov add aam int daa stc sub cmc adc inc stos (bad) xchg xchg pop insb dec mov sbb (bad) lea jnp rcrl add imul sub mov xchg aas jl rolb mov or xor push subl hlt jp sub ret and inc dec push inc dec push (bad) (bad) outsl inc mov add dec pop pop stc lahf xlat shr and (bad) xchg out inc aaa addl cwtl xor cmp jle add ficoml xchg test mov pop cmp nop int sbb adc sbb pop jb insl in mov test push inc icebp jmp mov jo inc std fildll sbb cmpsl int3 das mov out push sub outsb lahf fsubrs pushf or push fwait inc jmp imul sbb scas inc pushf lods cmp sbb cltd repz stc ret iret or adc fdivrs cltd outsl inc pop mov sub or mov mov repnz insl dec inc add dec push dec inc xor xor repnz andb stos test aaa jmp pop les fs cmp dec xor push inc (bad) in (bad) pop push mov aam pop bound pop pop dec cli loop sti out lret fwait lcall push imul cs mov in pop dec sti sub push xlat fsubrl pop lret lahf enter ljmp popa xchg xchg lock in sti mov movsb arpl pop jle xchg inc jge icebp pushf cld scas in cmp out cli add hlt pushf sbb cltd jne ret dec xor cmp stos dec push jle jecxz xchg or and ror imul enter cmpsb sbb repz movsl mov gs dec or pop and pop push and pop pop int3 ss inc jecxz pop in cmp ja sub dec inc pop xchg push inc call jbe movsb jp addr16 mov xor sub cmp test inc hlt cmp or sub cmp lods ja add mov call fist inc into mov out aam xchg clc xor sbb and icebp xchg fwait lds cld xchg or dec popa mov mov jae mov xchg cmp sahf push call add pop and fwait mov cmp ds sti or insb mov (bad) es dec (bad) mov or lahf lea jbe mov dec jno xchg xorb jbe jge and xor fisttpll or adc push rolb into add mov xor jle mov cmp scas mov push pop cmpsl iret xor sbb out mov mov je sub pop lods and mov pop xor lahf push ret xor dec scas mov stc push pop lahf sub mov add pop movsb xchg lock xor les (bad) mov sbb pop push sti arpl imul (bad) (bad) dec movsb rorl popa rcll (bad) pop mov xchg dec dec push pop and xlat scas jno in mov inc das divl jno push ret fidiv mov push inc sub leave mov xchg decb fcmovnb pop insl xlat cli jae,pt adc jmp mov mov add fsubl cmpsl pushf jecxz mov verw mov fsubr in jns cld fdivrs insb jge call inc shrl mov cmp pop iret movsb lret xor lds jp fldt inc aas add sub ficompl nop movsb das jo dec int push icebp sub lods jns mov ret inc or sub mov jg mov mov insb sub std jecxz (bad) notl inc jmp stos popl sbb xchg xor sti mov mov (bad) divl mov xor mov in stos test data16 insl outsb (bad) cmc jp bound sub and mov movsb (bad) sti mov aaa sbb mov jb sti inc out repz je sbb sarl sub nop movsb pop mov sbb sbbl ljmp lret push ficoml outsl fstl int3 jg cld adc pop stos mov add fcoms adc (bad) out lds cmp cmp nop mov inc popa mov sbb jecxz cli scas ljmp mov not (bad) daa int3 pusha mov jbe cld mov fcompl dec jnp popl scas pop popf das xor ror (bad) (bad) jne (bad) jmp adc sbb addl inc push dec mov push out movsb xchg adc lret jl jmp pushf cmpsb or sub mov iret ss jp add pop mulb cmp adc sub fisubrl mov fsts addr16 mov xchg rcl and insb pusha jnp dec pop mov jnp repnz es cmpb repz dec lock fidivrl xor mov popf daa aam iret loope dec fdivr shrl cld jge rclb jmp ret and push sub in jmp cwtl (bad) nop dec and mov fs das jns out out xlat jl xor in sahf and inc aam pop add inc arpl push xchg jne clc loopne cmp and mov pop (bad) in mov outsl inc cli jno lret pop out out and in or insb ja add mov push adc push loop testl popa mov xlat xchg pusha mov inc pop pop mov mov jmp es out mov data16 sbb sbb shlb and incb mov loop sub dec icebp jno popf scas sahf aaa mov jp dec pushf in ss inc or push (bad) mov test test daa imul scas sub mov mov sbb inc pop pusha aad pop and rol cld sbb (bad) imull and in mov adc daa pop and jg mov adc icebp mov push mov mov je outsb cmpsb hlt (bad) test movsl cmp sbbl pop loope push cmpl into imul pop dec push cmpb repnz bound test sub push dec pop pop mov sbb cmp sub sbbl adc push jae mov adc mov add pop in or fsubrs jnp adcl faddl sahf test loope je and adcb hlt inc (bad) jnp mov ret daa stc xchg sub daa out lods fsubs js in jno popa out mov adc ret jns mov jl jae jecxz ja and push lock jno subb scas cmp sbb mov test arpl ret cmp rorb mov lcall test ljmp xor mov lods sbb and sbb insb lret or data16 jecxz rorl inc sbb mov mov xorl or ret jg sub pop ja clc jmp scas fild scas addr16 inc xor jmp mov pop push insl mov xor pop ficom and lods out sbb pop nop inc imul jno inc aam (bad) pminsw dec in cmp lret arpl adc inc in jnp loopne mov and stc call dec orb rcrl push mov inc mov shl pop je hlt scas ret adc ljmp outsl daa ja loope xlat adc int jo inc push repz mov cmp adc lcall (bad) inc in and fmuls push out stos pop dec pop xor jmp (bad) cltd loop xor jecxz clc jno cmpb jle sub pop sbbl mov imul cld inc xchg scas push xor sbb enter lcall inc (bad) std aam pop lcall mov inc cld and call (bad) cmp adc add addr16 add daa xchg jbe mov popf mov fwait inc xor sbb shrl lahf int3 adc stos push xor or enter pop mov and dec int3 dec lret sbb jns or pop push xor lcall movsl sub mov push rcrl out ljmp mov cltd cltd jne scas inc cmp arpl mov add ja rcll jp mov data16 xchg adc sarl loopne cmp jbe pushf cmpsb cld add std imul addr16 test leave aad rcl pop (bad) fxtract or lcall or push add call dec movsb add and xor push iret scas gs pop imul or mov gs cmpsb mov xchg stc cmp and cmp mov data16 daa pop hlt jmp push adc js adc adc cltd push (bad) insl push cmp inc pop cmpsl dec stos mov jne inc pop lret outsb jnp dec add sbb dec shlb in dec fdiv mov cmpsl jae sbb imul push xor (bad) addl call pushf insl (bad) push and mov and adc push stc jmp and push sahf push pop adc in inc adc cmpsb dec add adc jge xor mov inc pop xchg and jne mov pusha mov pop add icebp movsl xchg pop push sbb ret loope ljmp outsb push shlb pop and idivl or cmp pop lcall stos push dec popf loope push cltd in jl imul cmp mov test (bad) iret push stc sub out sahf add enter cld lret addr16 sbbb imul cmpsb push repz cmp jmp pop cmove les add dec jne inc add loope jae ss popa jmp jns div fisttpl xchg mov and imul adc clc add push push jmp xchg rcll fimull pop jo xchg mov mov or gs cmp in iret pop mov test or jne enter out out inc repz in or les lret pop in add sub sub xor (bad) cmp fisub jne inc xchg mov (bad) jns addr16 and dec dec push or sub ja cmp mov mov adc push jae icebp je cltd mov mov dec dec mov sbb into inc ret stos push pushf lcall cwtl leave push ds pop xor loopne pop int (bad) in mov (bad) xor in shll shrl stc and pop arpl (bad) in dec add xchg adcb pop enter (bad) or movsl xchg mov sbb bound fisttp pop popf out test call stc in or cmc arpl (bad) and mov jne jo les punpckhbw mov xchg dec xor sub dec je rorb jbe stc mov stos mov mov xor movsb lret lea fcomi or pop call jle jle popa out dec lea sbb mov je inc cmp pop inc cld jo xchg cld and dec jbe cmp stos mov lcall lret data16 in mov sti or inc adc lea iret ret sbb jno sbb mov test rcrb mov sbb mov xchg dec stos sbb clts mov add sub inc jp ret mov push add mov jmp fldt xor ret cwtl pop push sub setle sub push jg sbb sbbl rol popa movsb scas inc adc fidivr loop fildl push mov cwtl (bad) push cmp cli sub cmp inc mov shl xor push xchg dec push popf sub mov rclb xchg sub (bad) fistl xor xor pushf cmc dec adc inc je adc pop (bad) mov test sbb push dec scas gs test dec call push out xchg push sub test mov daa sub loop fcompl repz sti mov pusha or js sbb push aad loope iret cmp cmp bound lahf movsb cmp push les push outsb insl test loopne cltd pop mov movsl scas pop stos dec pushf lods hlt jmp push rcll lods mov jne mov cmp add add lods or mov sub xor gs sbb lock and jne jnp sub lods lret (bad) mov (bad) sub out or mov imul or sub subl ss cli jge icebp mov or jmp inc pcmpgtb mov ror (bad) jae sub les aas xchg add aaa out xchg das test aam pcmpeqd movsb jae pushf (bad) negb mov lods int3 push jecxz mov in ret xchg mov sbb or jle adc push jp dec dec out (bad) ret sahf in mov adc xorb call (bad) scas adc insb xor mov lcall fild cltd sub cmp add xor clc xor insl rcl repnz jb lods pop push out loope stos cmpsb adc js,pn push or rcr xor pop insb in jo and gs mov jbe or xor push aad inc push rcr (bad) repz mov scas or faddl hlt scas dec sbb pusha mov pop mov js inc or inc xor cli pop jge pop (bad) insb add mov mov aad imull dec mov jmp inc pop mov in movsb das mov mov scas cmpsb pop xchg xlat out inc xor mov mov sub or xor icebp jp cmp add repnz mov dec mov mov xchg xchg and call sbb outsl in cmp daa stc push cmp sub andl xchg mov or mov aas inc jb jns dec addr16 mov in fs test add mov jecxz mulb or xor shrl and jp and fildll incb inc aas and mov in or test jns out jnp icebp dec mov and (bad) ss iret popa fcmove cmpsb lahf add fcmovbe sbb daa push adc mov push imul icebp add mov push xchg mov sbb jnp test andl and inc stc mov inc cmp xor lret cmpsl aas sub or dec pop negl mov cmp xchg pop out movsl mov shlb mov clc mov push (bad) jbe imul jo pop (bad) sub daa adc sub loope (bad) cmpsl or ret and test pop mov fs ds fistl lcall or mov in xor outsl lcall sbb clc pop stos push lods mov lock jmp push out imul jmp jo mov (bad) mov cmpsb jo jl aad xchg mov push and dec xchg sti or mov xor pop inc nop or pop mov push je fcomi rol nop xchg xchg push add (bad) mov mov lret adc dec dec mov push nop bound jns vpmaxub ror pop mov (bad) aam into arpl mov out movb (bad) ja sbb inc in out and in cwtl test cmp or inc pusha (bad) sarb repz pop push in or imulb mov nop mov sarb mov inc or inc cmp stos pop mov or mov (bad) ss pop aad insl adc movsb popa addl clc (bad) mov (bad) and jecxz dec push in sbb out or xorl push mov addr16 flds push ljmp ss sub daa pop mov cmp lea mov jbe (bad) lret icebp mov mov aaa loopne jecxz jmp adc xchg icebp notl sqrtps jno lods hlt bound pusha or xchg insl scas lcall dec fs mov mov xor sub fsubrl shrl xchg pop mov mov lock gs mov inc pushf jge or sti and das repnz sub shrb mov arpl pushf or mov jb and bound xlat push or scas mov xor (bad) loop push inc jo clc in mov mov out in call pop dec dec xorl adc adc in jmp loop fs data16 sbb aam shll xor and rcrl add ret cmp pop pop imul push add push pop sbb jnp mov sub shlb xor jae out sar push inc outsl outsb (bad) pop dec cmp xchg jo sbbl or cli sub xlat test adc jae adc test jp,pn push lcall and sub ja sbb mulb inc pop sub ret shrl fwait hlt (bad) sub test pop (bad) hlt push cmpsb out (bad) and jbe lret daa push inc imul adc scas sti mov mov in arpl cmp pop xchg (bad) mov das xlat lahf jmp xchg je inc mov daa lods push int3 cwtl lcall popa add dec (bad) mov stos sub and xchg add sti jge mov out jo jmp dec xchg out mov out clc rcll scas add aam or xchg subl (bad) popa jmp pop test dec ljmp loopne mov fisttpll and aad hlt push lds mov call popa insb cli repnz cmpsb sbb xchg lods aas imul arpl xor cmp mov mov hlt lock mov inc inc enter es xor fbld js fwait jmp xchg cld mov int3 push outsb and arpl xchg pop scas popf mov xor dec cltd pop xor repz xchg add add shl leave fild xorb into (bad) cmp (bad) jb (bad) ss dec mov sahf inc into adc pusha imul push out retw cmp bound pop je rclb mulps int pop cltd mov add lods ret aam push sar nop fwait or and or sub inc cmp popf xchg imul rcrb pop pop fdivs aas mov jno sbb dec imul in xlat cs popa adc jmp cmp test dec das aad cmp pusha dec mov pop in inc sbb jnp lods nop push jg or cld mov in and repnz mov call sbb outsl pop jecxz inc insb adcl insb jne data16 dec sahf lods mov xor mov and cltd icebp ss dec dec mov scas call bound and pusha (bad) push adc (bad) imul mov (bad) movsb xchg mov (bad) hlt dec nop les out mov push push xor loop xor sbb outsl fwait popf cli out ss xchg lods cld cmp imul aam mov push (bad) mov jo popf ljmp cmp adc inc mov fstps pop add or cmp lods and cmp inc mov add int add add mov jecxz push stc stc stos push cmp dec xchg fwait mov add fcoml push icebp sub int3 jbe int cmpsl adcl and pop dec add ja in pop icebp and mov nop insb aas lea imul mov mov bound jns fwait or cltd dec aam mov loopne scas push mov cmp sar push sub push jb cli jecxz fs cli sahf repz inc push sarl lahf imul std sub xlat lahf xor mov adc or or scas adc or fldl push push out loopne adc insl ret les inc mov inc repnz add (bad) sub adc dec add cmp call sbb jl cmpsb ljmp dec ljmp in aam dec sub daa in sub dec cmpsb mov lds xlat imul sub xchg movsb rcll fsubrp loopne or or imul or jl push sti fdivrs mov shl loop mov sarl mov push hlt dec add push aam es sahf mov adc add jle cmp (bad) testl fstl xchg push mov ret push stos movsl fdivrl es arpl mov nop sub leave inc dec in repnz aad and pop lods fs cmc movsl sub aas push loopne inc mov popf pushf lcall out jmp jmp pop xlat inc out mov scas iret cmp mov stc mov pop or dec cmp js shlb push aam cld pusha push rorb in xchg xchg push mov dec out adc arpl adc mov and sbb push jne (bad) in xor cmp pop lods mov ret jge (bad) out stos addr16 jo cmc push pop les rcrl dec into nop stos fcoml incl (bad) roll paddusw lods dec fsubrp lcall inc popa push jae pop in movsl clc ja jecxz push out and pushl call adc (bad) out nop xor pusha inc (bad) bound mov mov inc dec pop mov stc adc push cs xchg or mov cmp adc outsl mov fldcw test pop cwtl xor lock (bad) push enter xor jnp dec repnz andl jns scas negl add pop xlat rorl sbb mov push xor inc test int out in daa shl dec fiadd cltd sub (bad) je pusha mov repnz push mov (bad) fistp (bad) dec pop inc leave test jmp (bad) lret mov mov (bad) lock mov outsl inc inc pop or cmp jb mov jns stc aam mov adc mov xlat xchg fimull pop in les pop imul imul sbb mov loop lcall jmp (bad) jo and (bad) orl pop nop sub xchg jecxz das mov lcall sub pop test cmp popa dec stos das es xchg mov addr16 out add (bad) push push stc (bad) in cmpsl insb jne nop inc pop mov jne xor jp sbb inc adc out and jno push fdivp pushf stos xchg pop (bad) scas hlt fildll dec int3 cmp pop pop je scas jb in push push fsubrl adc jae mov cmp sub jge add js cli daa push pop rcrl (bad) lahf nop push sbb lock ss pusha xchg jo sti int mov stc sbb cvtps2pi cmp sub cmpsb subl das sti xchg rcrl mov pop repz test jnp xchg aam in roll andb xchg adc xor lods sarb popa cli jns or fnop loope sbbl xchg lret (bad) cs movsb inc nop out in lret fidivr andb mov int mov xchg xchg ds rcll scas out mulb cmp dec or les inc adc push push ss lods push mulb call xchg sub insl fcoml ret xor bound popa ss outsl mov xchg mov sbb push lods pop push (bad) arpl xor lret rcrl mov daa divl inc jns (bad) outsb rolb fucomi dec adc pop cmpsb aas adc pushl jg fidivr inc pop inc mov out incb insl daa push sbb mov fsubs fcomip add (bad) out xchg cmpsl shrb sub sub mov dec mov mov sub (bad) pop test add sar lea nop js jno pop out lods pushf mov lods inc or ret lock popa pushf or xor ljmp ret jp test xor adc add mov out pop es inc int3 inc addl cwtl jmp sbb xor les mov push mov dec or sbb jmp jbe push ret sub cmp and jae in dec dec add xor and and dec xor push push test push cmp mov mov xchg add mov and jmp std add adcl jbe push fild mov rclb inc test ljmp mov hlt rcl movsl aam cmp inc movsl loop repnz das inc adc pop jge mov jmp sti out inc jno push scas adc lcall sarb mov lahf adc mov mov inc js lods cwtl push add cwtl ja out mov test or xchg or push rcr hlt pop adc pop (bad) sti inc (bad) aam cld mov inc popf loop jle mov and dec inc push cmpsb (bad) mov mov xchg out inc or popf out ds jb lcall inc mov xor xchg mov mov add les cmpsl pop xor loopne jne fcoms mov push cmp pushf inc xchg int3 or test clc push (bad) mov fildl fnsave jge or into jmp jo dec cld out or and adc push fimull out hlt (bad) inc rorl sbb jns lahf or arpl jne xchg or ss sub popa jg arpl test dec mov ss test sub test sbb and cs enter (bad) aam pop in push pop mov ss mov cmp pop sbb fmuls jae (bad) adc shr mov outsl push mov cld and cltd enter add pop or sti dec and jmp (bad) sub push jae sbb iret sub pinsrw pop dec dec loope mov int3 pushf jno or pop push mov push add (bad) lods dec jl pop cmp jns cli outsl fs inc mov cmp jp jge bound es xchg adc pop hlt enter mov xchg mov lds repnz adc sbb pop cmp iret js push xor xchg pop (bad) mov stc icebp test cmpsl in int3 dec dec dec inc sbb cmpsb jno (bad) jae clc push mov into mov and pusha popl xor xchg std add movsb les (bad) gs aaa or cmp mov scas or adc pop lahf xor pop repnz adc lret sub daa mov mov mov test pop push loope std jge mov insb stc cltd cmp adc (bad) int3 pop outsl aad test lock push jo lret or cmp xchg (bad) gs mov aaa dec xor pop and xchg (bad) sbb push repz mov and and je leave xchg (bad) loop mov (bad) cmp push pop rolb ds das cld or fwait jle or pop jecxz leave or or stos (bad) mov mov (bad) data16 cs movsl arpl enter push fs mov inc dec mov sub push and inc pop adc jno xchg (bad) pop insl out mov sub or or sub pop aam mov lea lods stc jo sub (bad) cmc xchg pop fnstsw jl sub jecxz cmc mov mov push cmp popf cmp aas ljmp ret movsb movl or cmpsb sbb mov imul arpl shrb adc mov shrl rol sbb out fs movsl inc xor fldenv cltd push lea and pop fstpt jno ret divb adc mov sbb fcom es movsl push hlt into enter pop in sahf (bad) xchg mov mov int3 cs lds push sbb sbb mov cli and add inc push sbb fild and or insb push fcmovnb dec rcrl js or pop pop paddq mov jbe shlb dec fsubp in lock mov call test icebp fs mov (bad) mov jb sub loope (bad) mov jne or mov divl sub push (bad) mov add call loopne xchg fstpt jecxz mov hlt lret mov sbb lret push pop divw gs das int3 mov out ds push ja mov repz xchg push inc xchg inc sbbl add movsb jecxz push rolb mov mov push or adc (bad) xchg cltd xchg push add insb jle loopne adcl in int aaa jl test add add push std lcall or mov push sbb cmc xchg cld mov pop mov arpl test dec add rolb int cwtl push mov mov or cmpsb add test mov es fbstp jl rorl mov and jno ljmp ja (bad) sub in jge xor insb (bad) mov cli push call sahf fs add ss stc add inc push data16 nop mov cmp sahf fbstp cmp fnop fildll in adc imul data16 adc xchg loope dec add mov mov rol js popf xchg inc add pop pop push xchg loopne mov mov outsb sub rorb rclb popf sub dec adc ret repnz mov cmpsl sbb mov mulb and sbb add adc cmp rorb jge mov imul test in sub mov sub mov cmp (bad) mov mov pop int3 ficom out js popf lahf jno add push push sbb cmpsb adc fild (bad) mov mov ffree movsl leave (bad) cltd or fbstp cmc into out xor inc adc in mov push pop call mov pop jae push inc (bad) jmp fsubs scas rcrl ljmp insb pop mov pop decl jnp gs sub xor ss push jb in xchg xorl por test int lds inc sbb cli xchg cmc aaa int3 rorl icebp and mov mov lahf (bad) xor or or jae xchg pop aaa lods mov ds (bad) decl (bad) and daa cmp inc sub xor xor cltd push (bad) imul std xor mov sbb lods xor (bad) mov mov push cmp lods pop ret inc cmp and popf cld mov shlb mov inc movsb lods xor cmpsb sbb outsl xchg cli add sbb and (bad) idivl lock jns ret mov (bad) jne add addr16 lret mov push imul hlt popf ret (bad) icebp jae flds mov xchg sti arpl sbb mov pop mov mov mov xor xlat sub push pop repz lods test (bad) and sbb and jmp dec dec rorb push push (bad) repnz nop and scas sbb sbb shr mov and outsl loopne xchg jecxz push aaa sbbl xor and adc fs cmp in or pop in pop sub lods lock outsb enter aaa xchg out sub mov mov push pop mov and xchg mov outsb sbb xor mov xchg addr16 mov adc sahf push sbb jg in push ret xor hlt in mov lods repnz inc lret sub gs mov sub or sbbl or add and idivb sub mov (bad) push pop push or jne inc adc (bad) pop std jne loop or mov adc cli flds mov cmc sbb imul adc lea cmp inc arpl dec leave jg sub add jnp or or scas jg icebp and add mov pop pop scas data16 addl mov mov dec xlat jb xor dec inc sub sub pop cmp sub outsl aam aam pop pop cmp sub inc mov cmpb xchg jge xor (bad) nop inc adc out mov sbb jno stc mov loopne jecxz jnp sub dec (bad) ret cmp (bad) mov jl push sahf mov mov mov xchg mov inc je cmpsb sub xor les popw sti adc xchg out mov out mov and sbb rcl inc (bad) xor stos xor mov and test xor dec jle js (bad) adc jns loop mov lcall lock adcl scas loop icebp and rcll xor (bad) xor out mov sub cmp push xchg jecxz sub pop movsb dec aas inc out add lret mov idivl jecxz and cli dec xchg das mov lcall lea cmc pop clc jmp js (bad) in out scas in push push jmp mov pop mov push shl or out mov fsubrs fstl (bad) insb sbb or call test pusha hlt ja mov cmc inc mov je mov sti inc arpl (bad) push push mov leave in mov aad pop ds loopne gs fdivrl or cltd mov push out divl cmp hlt jb jecxz mov inc sub sbb xor aas mov adc mov call es stc mov jle mov es mov clc xlat gs mov adc cmp (bad) stos es mov pop cmp and add aas jmp inc pop aaa decl enter fxch sahf repz pusha xor push fs mov cli mov lods jnp imul push movsb or nop cli leave aaa gs addr16 aas push sub adc fs in movsl mov adc mov dec movsl daa or das pushf sub sub adc (bad) js cmpsl les jb mov pushf leave mov sarl push push call test pop test mov in and add mov (bad) jmp jno into mov dec clc les sub and push movsl and (bad) lds int3 popf adc ret ss aas xor andb ret jecxz or repz out and fstl mov dec jl (bad) pop in les mov pop fwait ja (bad) mov or pop out cld add jg xchg sbb dec aaa mov mov loop xchg add or jmp xchg negl aaa jecxz and jecxz pop (bad) int3 fmull pushf and mov add pushf and mov stos dec push mov pop jle jne inc mov mov adc add lods dec es in je pop push cli sbb adc (bad) cmp push push add das in lahf xchg jl mov xchg xor mov mov jno inc xor mov loope xchg mov and jmp mov adc push int out js (bad) and inc mov and icebp xchg out dec repnz bound push or inc loopne in out or cmp xchg sub pop xor and imul sbb inc std mov cltd mov mov mov mov jns,pn (bad) cmp sti sbb es insb sbb sub cmp mov out outsl sbb das adc push mov test cltd lcall sbb adc idivb add lock aam pop ja out xor lret loope dec inc lahf fldl mov cwtl push outsb data16 je fisttp xlat and cld mov xor xor loope ljmp mov pop push frstor into rorl mov test sub aaa dec stos cltd xlat out dec outsb push mov psraw cmc adc in push jo bound push sub mov es or insl mov sub scas rclb push (bad) mov adc or lds sbb (bad) aad fnstcw int3 call or int3 cmp sbb mov push lcall frstor loop push jle xor dec xor jnp clc push lds xchg jmp out notl lahf lods cmp xor cmc fistl mov jno jl xor mov jae xchg xchg das imul dec pop fadds lahf loope mov arpl cmp es xchg cmp jmp fisttp popa jae inc (bad) cmp (bad) test insl cmp enter push and xchg rorb mov test mov es pop push or jae lds push mov pop roll push sub sub popa gs or inc mov mov or inc mov inc mov lret gs in jp stos mov adc push addb push jecxz fs stc gs sti pop xchg or xlat arpl scas or sahf nop or pop push int sbb xchg das cmpl es je loop mov dec add xlat enter or loope hlt add vmovntpd loopne sub push jmp push ret lcall xchg push iret inc and scas sbb pop pop movsl xchg insb incl sub pop fsts mov jmp mov pushf rorb es adc ret das lcall (bad) xor arpl adc outsl mov std jl leave fidivrl sbb mov or scas aam inc (bad) mov std jae out push test xchg jo sbb jns dec cmp out push mov cltd push icebp jne lcall mov jl stc sti or orl enter and mov hlt push fsubr jnp stos pop dec cmp lods fwait push pop pop insb loope cmp pop outsl add xor xchg jmp fbstp push cmp push mov push hlt (bad) pop or data16 push fild pop mov aad pop popa push out fcompl iret dec pushw loope std jle and mov push popf sub pop scas xor sahf ljmp movsb pop xchg jmp and je repnz sbb adc sbb imul jle test mov push rorb pop jns pop push lret movq call gs sub loopne mov cmp inc cli hlt jl fist cmc lcall (bad) lods ljmp push pop push adc xchg js in shlb cwtl movhps jo push sarb adc adc cmpsl mov mov cli hlt faddl sub repnz sub jae pop inc rcll inc mov adc mov sub add adc jbe loop popa and cmc dec mov mov inc sahf (bad) push sbb fsubl daa cmc xor pusha data16 (bad) cmpsb scas (bad) cmpl stos cltd mov (bad) (bad) lret int3 imul cmp out aad jae ds mov rcl test mov sub or xchg mov (bad) and pop in sub mov push and sti sbb adc insb xchg loope pushf xchg cmp jne in fldl sti sub clc adc pop mov sub jae push pop xor lods sbb aam jo add scas sbb ret sub sbb jge sbb and fistpl dec aaa adc xchg mov fwait dec inc aas sub mov bound (bad) ljmp (bad) aad insb or jge stos adc adc adc aaa push jl xor and pop (bad) push mov pop add insl adc repz shl push ds lret push popa dec mov into mov stc mov mov cli mov cld aaa mov sub mov test sbb xor hlt xor mov push sbb lahf push push dec jnp jno xor jp je ret push cli outsb das push daa xchg jp shlb sahf cmp rol jno rcll je stc dec and xor (bad) jge dec jns mov and in push ret lea cli aad addr16 hlt cmpsb xchg push pop lret inc pusha fdivrs sub xchg jl pop stos scas push je out mov lea push dec es popf out imul hlt xchg add subl scas fnop mov xchg ret in pushf and (bad) fisubrl data16 or mov and (bad) cs sub fbld jb fdivrl in cwtl lcall xchg in popl cmp xchg repnz sbb push inc je inc clc stos mov push mov xor inc push ret fwait int add shlb ljmp pusha roll inc ds jg sub push pop pushf pop sub (bad) aam dec adc shll test pop lahf out and xchg fcoml push cmp jp cmp das dec xchg mov mov jnp mov xchg gs sbb cmpsl pushf mov mov mov mov push xchg mov pop mov inc mov adc repnz data16 jmp fwait jo push sbb push lret popa inc in bound sub fdivrs push xchg cmp repz iret pop loopne jp xchg xlat outsl subl pop je pop xchg leave pop out rcll call inc mov stc mov pop push cwtl negl sub xchg out in pop mov inc sub push outsl vpavgw out xchg mov and dec mov adc out stos or stos add cltd pop inc lock and or adcb in mov xor arpl sbb insb jno xor aad gs ret icebp clc repz xchg ret mov call jnp fisubr push mov jp jns cmp cmp xor add (bad) cs mov cmp mov sub pop and xor loop xchg shld lahf int lahf jmp ficomp mov (bad) jne loop push mov sarb fild xchg mov dec mov dec push movsb stos push pop popf lret (bad) dec or cmp mov mov cmp mov mov xchg mov ret sbb subb jae paddd mov mov insl fldenv mov adc pop add jmp mov (bad) cmp jecxz aaa pop aam dec xor and dec jno push or movsl dec cmc sub lret or mov xchg xor ds clc jo or cmp fldl lock aad es inc aad in repz mov adc jne push sbb adc (bad) push mov divb pop add lea pop xchg sbb dec inc push ds ficomp sbb jge push fcmovnbe popf outsl push sub imul xlat (bad) sarl pop pop loopne inc mov mov cmp loop push sub xchg mov pushf incb ds mov push (bad) stc pop fwait mov imul enter fcmovnu call rcr push insb stos mov and (bad) fidivr popf pop jecxz mov mov sbb mov inc xor out mov jl jo scas int dec sub lret loop in pop ret mov or fadd pop iret jbe negl repz jae push and cmc jecxz jo mov dec mov int pop xchg push negb pop or mov pop adc mov (bad) pop decb xchg sub lret sub (bad) pop jge int or fcomip push cltd adc add fwait pop cmpsb sub adc ds adc dec or outsl fnstsw push das lret cmp imul and mov fmull incb dec sbb (bad) call mov xor jp inc das lods out stos out sbb adcl orl pop jl fmuls data16 jbe popf jns inc int mov lret lcall mov adc daa jae je std rorl xor xor fldt xchg xlat mov xchg notl repz loope rcl (bad) mov fiaddl lret adc xchg push cltd fs inc and daa push testl lahf pushf or push insl ret bnd and sbb sub movsl test mov cmp sbb ret (bad) cmp fldl pop mov dec sub lods jp xchg jge (bad) xor mov in fimul pusha cld (bad) jbe loop adc lock xchg cmpsb adc data16 stc mov int3 sub push adc sbb outsl fnstsw daa test xor out mov pop or and movsl xchg insl and mov loope cs push pop sbb push pop or adc bound aas jge sub std stc hlt xchg (bad) cmp hlt movsl data16 (bad) repnz xchg stos sub inc mov fldenv adc les inc mov rcl daa loopne in movsb mov rcrl cmp adc leave aam and push outsl or jae jg inc in mull jb stos mov in add scas out add dec or jge roll jp fildl cmp mov cs (bad) jae push mov sbb push mov sub and cltd aas inc dec jle adc jns push cli or xor movsb ficompl cmp fwait into pop xlat fldt dec dec mov out mov int3 fninit add call dec sbbl flds bndstx iret mov test aam sub ja jmp lods inc lods ss sbb lea shr mov lods sub movsl mov pop push int3 stos popa lds mov cmp xchg in sbb mov repz jb mull xor andb mov jb and popf shlb out cmp pop mov sub outsl mov lret sahf mov mov lock xchg mov sub xor add mov push mov aad jo out popa jo mov arpl sbb dec nop mov sbb hlt test mov push inc jo arpl dec in xchg cmp jmp ret scas push xchg lods sti movsb push movl jb dec jno insb dec mov cmp inc sbb movsl (bad) inc nop imul cmpsb aas adc and lahf jnp leave rcrl dec xchg push pop mov push ds push ss pop jnp sti rcrl das in lock and daa adc dec jne mov leave or enter adc xor push sub jg test test inc xchg add arpl cmp arpl jmp inc cvtps2pi lcall aam je adcl push gs ret mov sti cwtl cmpsl dec cmp shlb mov sub mov sub fwait xor popa into lock sbb pop pop push test mov lahf frstor repz mov jae adc sti lcall lahf xor adc lods imul sbb seta rclb ficom dec arpl hlt xor jo cmp sbb push dec in push push mov mov mov jb cmp mov push pop (bad) (bad) mov xchg or in jbe and adc sub das nop add jg xchg and mov mov sub xchg fsub mov jb jb repz outsl and cmovge outsb dec subb (bad) cli ficoml adc lcall dec fbstp xor push mov jo stc and mov ss ret push sbb adc inc ja,pt pop push adc sbb xchg sbb cli pop data16 mov (bad) mov cmpsb pop fsts mov mov mov aam dec mov dec mov jge test arpl popf sbb ret adc fsubrs test in clc rcll jb fwait sub jge (bad) iret (bad) xchg jg push in mov xor pop cmp add inc sub mov and sbb scas je aas xor mov jb jge or out xchg shrl in out adc inc jb or push sti push (bad) fwait jmp cmc pop std nop sti (bad) rcll dec jp xchg fs pop and adcl ljmp jno int pop in pop leave outsl sub aaa ss clc (bad) in shrl (bad) rorb cmp sti icebp mov pop and push mov inc jno add push (bad) loope call arpl je sbb in mov cmp add sub sbb bound in xchg (bad) clc adc add adc sbb setae sar pop mov pop cltd sbb out push mov inc repz xchg sub pop xchg test setb mov das mov mov hlt sbb cli mov mov xor mov mov adc and and (bad) test dec test inc std cmpsb or push dec ret clc push mov (bad) pop loop and inc xor (bad) mov inc fucom std cmc in fstps test lcall xor nop cli cmp sub outsb cli xchg gs sub and xchg jne pop jae adc jo setns jnp sub or cmpsb test jno mov inc lret psubw imul es mov aas cmpsl push pop jae iret fisubrl in mov jg push jle rorl inc lahf jne mov xchg jnp fldt fisubl daa sbb jne push pop inc sub das dec and jae jecxz mov (bad) push push sahf pop cmp dec xchg lods sbb xchg cmp pop rol mov (bad) bnd add pop xchg adc mov inc lret xchg or xor mov mov repz sub push rolb cmpb sbb cmp and bound (bad) arpl daa sahf cmp repnz call rorl sbb mov out pop (bad) jns mov pop mov pop rcl jns jp xchg xor stc lcall sub dec inc dec cmpsb shl bound insl sbb insb cmc jnp xor sbb push sahf or insb clc xor sbb out cmc ror scas shrb aad roll cmpsl xchg mov mov pushl loopne push xchg xchg jnp (bad) nop mov addb out jg cmp loopne jnp lods rcll int3 mov test ret jl,pn rolb leave shrb or movsb jnp sbb gs push outsl jae clc cltd xor cltd sub in push inc into (bad) jae add lcall sbb jbe pop mov cltd pop and and hlt mov and in rcr scas bound pop data16 mov pop inc or dec adc lock sbb pop inc xor sarb std mov bound sarb pop (bad) ljmp jns xor das dec adc push fs and pop lcall pop scas js lret sbb (bad) jge fiadd pop sbb xchg add cmpsl and fstps sti dec ds std in fmuls adc lret movsb lret decl sbb mov sbb rcll jmp push sbbl icebp cld xchg cmp xchg jg out ja iret mov shll inc das aam dec pop jmp test pushf mov mov sub out jo call leave cs mov mov sbb dec imul dec adc sahf add addl pop shrb push dec cltd cli movsl notb and aad xchg movsb imul push jo cmp mov cmpsl into lcall mov cwtl fdivrs fwait mov sub add bound jecxz js stos and adc or adc inc mov test dec addb push stos mov mov popa sahf cli dec mov stos mov in pop dec cmc jo mov rorb fldcw pop inc std (bad) das xchg push insl jge jae aad sbb (bad) int3 fisttpll push inc cwtl and fidivr roll dec xchg shrb out xor jecxz aad pop adc mov (bad) mov fistpll push lods call or adc mov jns ret addr16 push xchg dec mov scas aam inc in jge shrb pop lcall hlt sbb push std sub jbe,pt pop mov mov jp mov fmul in pop pop setns adc adc lahf cld mov mov js sbb stc cld cmpsl xchg into jae inc mov fadds loopne jnp xchg push lret push xchg dec or nop push and int3 mov push sbb and pop notb daa mov pop mov dec and dec inc add pop sbbl mov push rorl mov je add mov (bad) (bad) xor idivb out fwait imul icebp imul loop inc aam add incb and sarb jp nop mov xor inc jl sbb push inc and sub mov cmp inc pop mov adc push jo ret int mov sbb or xchg push stos imul dec pushf aas ret jae addr16 mov push xor pusha das cltd dec lock adc shr jle fisubl (bad) fimull pop jne hlt pop cmp mull ss mov (bad) outsl jnp imul cmp jp dec repnz mov enter adc mov sub push xchg pop std xlat call sub in nop pushf sub ficompl fsubl pop out and into pop test mov adcl arpl popa data16 xchg add dec pop ja lahf jo cmc jl mov adc mov dec dec mov stos inc and mov or and or cmpsl xor das sbb inc cltd xor add fs adc ret jae jo loope sbb adc mov sub leave mov mov mov mov mov jae stc iret or sub pushl pop or xchg into sub gs mov test dec cmovnp dec ret dec out adc adc data16 sub rol jns cmp lds mov push rcll jmp push stc test ds dec pop inc xchg pop aad test out sub lods call adc popf mov mov popf lods xor xlat test mov dec sbb add shlb or inc inc outsl xor cmp mov js pop shll mov inc (bad) repz adc inc sub lret pop xchg jbe loopne mov andb mull dec lahf jnp mov and jnp subb mov xor or jg or mov popf push pop fwait inc adc aaa add gs (bad) lock pusha out ror loop push push push fistp jae xlat jno jnp xchg and hlt movsb (bad) jnp xchg inc mov jne fstps or insl mov sbb out inc pop sbb inc fwait jle mov cmp aas (bad) mov stos sti je xchg mov enter mov pop mov jle push mov mov loope pop jne cs mov addr16 (bad) xor push push inc pop lret mov js jbe (bad) mov das add (bad) adc arpl mov nop leave dec mov sub sbb dec popa push aad jae scas jecxz sub or out jb add dec js sbb sub mov jbe (bad) dec fbld push mov mov add and add cmp leave jno mov lahf push lcall mov andl dec xchg enter mov clc sbb addl cld mov fildl out xor lret pop shr in das aas (bad) pop es jl pop arpl mov outsb movsb and xor mov (bad) lret xchg xor nop inc xchg sub jg rcrl in movb and or cmpsl movsb mov sbb jbe cs cltd mov call push lea push sarb push adc dec mov mov test je cmp xorl pop rcrl inc xor ja or adc jo add mov ds mov jg or into (bad) fild (bad) cli insl cmp not xor inc dec movsb jg add push rcrb push mov jo dec hlt mov jmp in mov pop (bad) push call pop add push jnp je (bad) repz inc clc jge inc mov cmp sub imul psrad jo and stos fstl xchg gs (bad) icebp and lods incl les pop jno js iret scas test ljmp jecxz (bad) mov sub mov paddsb repz sub pop push push inc stos fnstsw test xor push jg int3 sub cmpb adc bound (bad) iret scas jge push mov fstl loopne gs shll mov jno xor xchg xchg pop sysret lods mov out and xchg sahf gs cmpsl xchg scas insl sbb jae fimull and cmp in pusha imul ficomp adc push pop outsb test sbb adc imul dec sarl test add int adc (bad) int jecxz stc inc push or sbb movsb push jae hlt jns int3 jp mov and cli dec lock inc inc int3 pop lods adc jns mov add mov xor dec mov stos and jle mov sbb (bad) sub nop and test jmp mov or pop or dec cmpsb popf jns adc dec fwait lcall mov stos shlb outsl cmp movsl aas repnz out js pop std nop insb jno test inc push mov out push jb out stos es test cmpsl insb or lret shll adc lcall mov dec mov xchg fmull jns sbb pop jle dec inc sbb jmp sbb pop sub inc es xchg fs out fnsave inc je sbb popf mov xor std repz sbb ds arpl in das xor das imul in and (bad) mov ljmp mov inc mov into push pop xchg mov dec orb popf sar (bad) dec movsl pop xchg xchg xor (bad) xor insl cltd fsub pop loopne lods sub pop test dec cmpb sbb rorl xor and sbb scas dec in and xchg jnp xchg lahf repnz rcll imul pop pusha or dec sub xchg jnp inc mov mov add lret movsb cmpsb movsb outsl cli or ret mov cwtl movsb movb mov xchg call dec sbb lock xchg mov pop dec std call jge inc cmp adc cmp out mov and xor arpl js xchg out adc dec mulw inc mov xchg push pop in push pop lods or cmp xchg pop pop xorb cld in ror push pop stos aad push lock stos push mov insl xorl (bad) mov sti cmpsl dec push lahf clc pop mov (bad) cs mov jg add mov rclb lea pop xchg push ljmp push pop lahf push fstps aad lcall fnstenv or mov (bad) xchg lock lock xlat es js scas cmc aas fidivl add testl popf imull xor inc dec bound xor add in insl stos ds mov sbb sahf xchg xor mov lds cmp ja dec jae mov int3 xchg xor dec mov and mov xor scas daa inc pushf sbb push sub cli xchg mov sbb xchg dec bound pop out mov cmp and in sub mov in push mov jecxz (bad) mov je and xchg jg test push add js js dec ret js add mov or setb popf mov js mov js rcr lods (bad) add (bad) lahf mov movsb mov inc mov mov xchg mov mov dec out pop nop pop sbb jb push mov pop lea daa mov add loopne mov add cli imul pop cmp sbb (bad) mov push sbb xchg inc dec xchg and dec jle call fisttpll cmc cs pop mov xchg repz jns (bad) loopne cwtl jne arpl shll mov mov dec mov sub inc xlat or add mov fimull insb jo fmuls push adc xchg pop aaa outsl xchg aas aas mov pop call add test mov or push mov dec jp (bad) jge inc fidivl jne clc inc jae or and sbb push (bad) repnz shll sub imul adc scas shll (bad) xor pop cmpsb movsb push iret mov mov push xchg pop cmp enter pop mov out into and loopne stos in stc cli into push pop inc jmp add pop (bad) int xor xor dec nop icebp es cmpsb stos fistp xchg xor mov lret in jmp dec pop pop cmpsb arpl popa cli lods push add movsb mov or push (bad) cwtl popa sub je loopne lret fdivrs outsl int3 fldenv les jecxz sbb mov xchg push mov mov sub jae and jns push inc inc int or push xchg int mov fsubrs lds dec idivb xchg aaa or mov repnz fucom movsb into sar aaa test gs cs dec cmpsl out cmp cmpsb push xchg or inc dec je pop addr16 xchg or inc jmp or arpl mov (bad) (bad) into add sub dec inc pop adc ret mov pop cmp push pop clc test mov shrb (bad) mov jnp fsubrl les mov es stos cwtl or repz stos bound xchg sub in add inc dec shll insb loope mov orl in or or rcr insb push push cmp shr and loope mov arpl stos out cmpsb mov cwtl mov sbbl mov lods inc and pop xchg stc inc sub and cltd out inc dec pop nop or icebp pop and sbb bound arpl pop adc lock adc jbe repz dec mov inc fsubl jl loope sub inc xor nop loope pushf (bad) mov dec xor jne or mov rorb loope popa jnp std sub movsb ss mov lret mov mov out loop fisubl mov ljmp stc lods add inc inc shr aaa cmpsl in push pop stc or mov dec (bad) (bad) pop and jno dec push sub xor mov int xlat test (bad) iret mov clc mov mov pop inc daa xlat mov negl loop std sbb xor lret add push pop inc mov fisubrl repz mov fldt cld and mov xor mov mov out push adc out and pop fisubl push mov ret sahf mov fisttp cltd rol mov (bad) icebp lock ss add and xchg adc (bad) xor aas mov push movsl mov inc mov and xchg mov das movsl les or jmp inc push lahf push (bad) adc cmc push xor pshufw jns lret jno test pop out xchg push lret and sub mov sbbl fcompl loopne test rol loope ljmp popa mov neg cmp push loopne sub cmp cmp dec lea pop or fisubl xchg shlb jb cmpsb stos std push jle inc outsb icebp out mov adc loop xlat sub xchg xor popa pop in popa lret mov sub mov repz adc and jg sbb push popa jnp fwait out enter and pop rol dec jg test ja pop pop enter js scas lret xor int inc loopne jge add rcrl lret call movsb icebp push adc inc or insb mov push into imul jle sarb pop (bad) daa inc lret dec jmp and adc andl pop sub sbb and jg data16 push lods dec adc scas shlb cmp bound sbb loop sub xor add inc shlb (bad) sbb sbb xchg mov cmp into fwait in mov mov mov pushf dec fdivrs (bad) daa add mov aad jecxz popf fistp mov test lea add es push fsubrs cmp es popf js loopne std sbbb fidivl fdivrs sub cmpsl cmpsb pop and loopne in jb out stos js stc xor xor sbb pop adc gs shrl jae pop xchg mov std mov xor pop push xor je xor (bad) jbe cmc xor leave loop mov adc cmc cmpsl dec xor lret lcall pop ljmp lcall mov test das mov fsubp movsb dec stos dec loope dec sbb lcall shrb sar xchg jp sbb pop push jo out inc cmp mov ljmp int rcrb xor jbe rcrb jp (bad) pop cmp lock push pop pop mov push std xchg jecxz sarb mov add icebp add std popf call mov pop push xor jb hlt inc or in xchg pop lcall bound and xor es repnz fsubs test mov aad mov xchg loope popa inc mov cmp popa insw jbe dec (bad) dec jno out data16 ds fimul loope adc jo out (bad) mov mov lahf iret movsb xchg xchg aad lock or xchg xor enter int3 outsb loopne out mov mov rep movsl scas push adc shrb lahf push xchg push es xor pop adc (bad) pop loopne inc jecxz lea popa or mov mov and and add mulb bound ret hlt jg jae push rorl and fsubl ud2 (bad) push or mov xor inc or das sub arpl xchg je out int cmp dec xchg call sbb mov xor (bad) rcll popa fwait add test pop in pusha xchg jb jecxz into sbb or and xor mov push sti nop (bad) clc dec in fwait cmp adc insl je js mov leave imul cmp pop mov int or addr16 cli dec or incl shrb mov es dec out je in dec add (bad) mov jne (bad) add mov dec cmp daa and mov scas ret inc push shrb cmp cli imul jl aaa pop fild sub add stc push mov sarb fistpll jnp jae mov popa scas jecxz mov scas inc inc fnstenv push or fisttpll xchg cwtl mov ucomiss pushf cld shlb xchg dec add adc ss adc cmp js and mov fstp out push idivl aad dec aaa dec push aaa xchg add jecxz in scas shrb adc outsb insb mov xchg inc pop mov inc fcoml mov or fbstp mov les push inc hlt shr mov pop sti pop int mov fldl xchg push dec mov jbe jl adc mov ror pop punpcklbw or sbb je mov cmp shll imulb imul shrl mov lods (bad) sbb jmp stos clc jmp and pop mov mulps or adc mov sub inc fldenv inc and xchg out inc xor adc sub jno jns jl clc mov lret mov icebp jmp push add mov cli or mov mov (bad) cmc adc sub lcall push scas inc dec push jg mov insb xchg push adc dec scas insb xchg push mov mov add inc dec popa and push dec xor or je sahf mov mov adc sub jbe cs xor (bad) mov out fistp test or inc fisubr std jo or rcll push out imul push outsb mov pop fidivr jmp push mov cmp adc sbb fnsave pop inc cmp pop adc sbb orb cmp stos in xchg jns sbb push arpl push ja insl adc std xor lods jmp imul lock pop hlt mov lds fwait pop inc xchg jle sub push (bad) push inc lods inc inc sub xchg repz add xchg xchg (bad) (bad) mov enter mov out or xor outsl or and push scas das ds ljmp hlt aas mov jg jnp clc add and and push jp fmull adc loopne or pop and shll cmp pop fidiv pop scas cmpsb rdtsc (bad) and push lock loop adc mov sbb and mov adc lock pop out ljmp leave mov test inc out sub cmpsb rorb dec cmp inc push cmpsl jbe das dec mov subl clc cmp or xchg xlat (bad) xchg popf xchg push dec xor (bad) push mov call sbb cmp cmp loope enter jecxz (bad) adc test loop sub in cmp and ss mov lret mull leave dec push xor inc jmp cmc push pusha addr16 pop mov sub and fwait jecxz mov loopne orl sbb mov or mov mov test mov jns xor jo test das push jno cmp pop ljmp mov pusha mov push bound ss mov pop popf movb lcall mov sbb inc sbb gs dec dec adc xor adc out iret and cmp aaa (bad) ja push cmp nop xchg in bound xlat pop fiaddl cltd mov mov insb push mov add sub divb inc dec xchg sahf mov int xchg sub mov push mov repz dec imul movsb cmp adc jg fsubrl xor and outsb pop daa sar arpl push inc aas stc mov (bad) cs push push adc push sbb xchg mov mov out xchg sti stos int or xor xor adc jne js mov mov addr16 push push (bad) sbb adc fsubrl cmp popf negl lahf jb sbb (bad) into jge and pusha daa xor push dec enter sub jne fcompl sbb stos bound jp sbb movsb and inc xchg mov dec xor xchg cmp cwtl jbe nop pop stos adc jno fs mul and xchg sub fistpl and cmpsl test dec lret test and fs cli faddl pop in lret push sbb xchg mov rcl mov push mov inc jne adc jmp lahf dec shll inc (bad) adc xchg cltd push mov or jb cmp fisttpll out loopne pusha cmp mov add push adc xchg repnz adc xchg sbb mov push mov cmp cmc jae das adc fcmovbe movsb cwtl lods inc jecxz jmp sbb jne lock push adcl test xor jns sbb inc jle scas inc fldt mov jno mov push push xchg (bad) ret rorl movsb mov je add rclb fldt dec outsl add mov sarb (bad) mov popf adc sbbl adc mov pop inc cmpsl leave cmp mov mov inc clc fistpl xor iret mov jp fbstp (bad) fisttpl mov or lods ds add xchg arpl (bad) cmp or rcrl sub int3 xor scas fisttpl xor call pusha mov lods loop pop mov icebp jp ret fdivrp rcl pop jp jmp xchg cmpsb pop and sti mov adc xchg (bad) ja ds cmp mov push adc lods popf mov push dec popf inc fiaddl xor in call push enter insb jo push pop fist mov push inc jno jo xchg fistpl aam dec pop sub daa daa int3 mov or mov dec jo xchg mov (bad) (bad) mov adc mov rolb pop fadds loopne daa frstor and out xchg popa jmp inc xor jnp cmp icebp xchg sub cmpsl xor add adc inc jg mov lahf fwait xor sbb bnd mov push cmp push (bad) or sarl pop mov stos jge dec fcmovnu imul rcrb iret orb loope xchg jp and dec les scas sub leave xor outsb (bad) shlb adc xchg xchg push clc bound inc lret ja push dec lahf inc xlat xor adc jb call xchg rcrb or and dec pop push pop aaa mov lds push lret fnstsw out movsl loop iret xor jp pushf or xchg jecxz jns lds cmp mov test bound inc sahf insb xor pop test mov dec pop loope sahf insl inc jns mov orb mov inc cwtl rorb pop adc enter js adc dec inc lds movsl add out push cmp (bad) stc (bad) mov mov xchg pop inc cmp or push cmpl push jne scas and add cld xor mov lcall cmp inc lahf dec stos mov mov add xor and call out out jmp flds pop arpl dec xor sbb pop out lcall aad es rcrb sti clc stc outsl or ret fmul hlt add orb inc adc fidiv (bad) jnp jp inc popf mov ret adcl imull or sub out or lret mov fld ja icebp sbb adc shrb pop fild imul lds inc sub mov mov jmp dec dec imul sbb push jno sub imul and xchg sbb int3 and add arpl mov xor pop mov and jbe leave rolb jno xlat add xchg xor cmp jo repnz iret or sub pop ret cmp or lds mov sbb inc pop jmp sbb xor arpl lods pop enter jo (bad) mov lea add and ret adc jns mov and fbstp dec (bad) popf jp or and jne outsb mov xchg inc and or mov outsb inc pop mov scas movsb dec cmp push mov push xchg push dec cmp sti push jne inc pop or enter cmp out das cmp (bad) xchg xchg fdiv ret jo and inc adc subb inc fldt push (bad) jl mov (bad) dec insb lret jecxz out push dec cmpsl in int xchg les (bad) xor cmpl adc jmp aas sub stc movsl inc jg adc in mov push sar mov xor andl int or push dec hlt sbb mov mov sbb fnstenv leave ret xchg jae and mov pop call out and or inc mov cmpsl pop jmp push mov gs inc mov pop cmp fist in push xorl mov jae rorb add popa and sub repnz shrl mov lea dec pop in inc pop in bnd pop xor mov aaa cwtl pop (bad) sub inc lods jae movsl add ret mov or pop cltd push dec xor sub ja mov enter push icebp popa daa dec mov xchg les push sbb mov inc jo test push or push adc fnstenv xchg aas pop jae out pop sub jmp cmpl sahf push adc and (bad) mov and xor ss insl mov mov repnz mov xor xchg cwtl fs mov cmp sub sub cmpsl sub pop cli daa cmpsl push mov cld fist inc mov jp scas or stos insl sbbb and and mov call jne pop inc jns fistpl mov pop jne add sub jp fcmove jecxz roll mov test jb (bad) mov stos add fsubrl inc pop jae adc push sub cmp xor push cmpsl pop xchg jl adc aaa in mov mov ds aam sbb popf pop pop cmp xlat xor or xlat (bad) add jle cmp aaa lods adc or neg cmp sbb icebp adc addr16 nop cld push xlat sbb stos daa xchg lods jle scas dec and xor inc inc push loope cmp in test hlt pop fcompl jns int3 inc push sub jmp stc jnp pop jnp pop cmpsb xchg sbb pushf mov push jmp (bad) jp ret mov inc xchg jge xchg (bad) testb mov into into dec sub mov mov push mov push sub jnp add test clc mov insl lock cmp adc inc cmp push sbb loopne and xor cmp xchg pop xchg and mov pushf adc push adc inc push jne or dec xor or out aad sub or fistp push in fyl2xp1 adc push inc add add sbb pop (bad) jge in xchg int3 add xchg cltd popf loopne pop or dec adc cmp adc fstps dec inc push mov xlat mov mov out or enter (bad) in sub (bad) jb jne mov das fbstp in shlb cmp pop jns sbb rclb out jecxz pop sub fstl cmc sbb jb stc mov je push mov mov iret xchg mov adc jecxz test xchg fisubrl cmp aas push mov addr16 jmp icebp adcb fisubr std or mov pop add popa rcr popa jl cwtl out ret sbb fsubl adc sub lea fucomp in imul push mov insl icebp jmp cmpsl sbbb cmpsb xlat pop xchg push cwtl xor (bad) fsubrl lods push in and pop mov rorl ret std push orl orb adc ss (bad) sub cmp cld cmp and jne enter push in bound test stos adc shll lock xchg sub jle xchg push aaa push adc mov lea jae jl loop inc fdivs js pop data16 pushf jge ljmp inc add int3 shrb mov stos jge add fcoms pop xor leave mov cmp scas loope xchg out jnp out lds add decl adc fsts jnp dec aam adc sub sbbb mov scas jmp xlat pop imul mov dec xchg pop dec js push rolb (bad) pop or and pop jb xorl pop call inc mov pop call lods pop stos xchg xchg or or mov mov cwtl push xor cmovnp pop push inc and xchg enter aas push scas orl sub add out imul std bound jns repz push int sbbl icebp das mov lahf ret rclb leave pop fs mov (bad) xchg mov add xchg mov int jg fstpl mov data16 int3 rorb dec gs scas pop add xor mov mov fist addr16 push sbb jecxz pushf inc pop cmpsl dec or adc lret mov pop stos xchg (bad) xchg mov arpl push mov mov mov xchg imul pushf xchg das and int mov (bad) out sbb xchg (bad) or dec leave mov add push test fisttp push sub jnp ret xchg push scas pop mov xchg lods push xor ss fbld lahf xor mov cmp out sbb cmp jb (bad) jnp inc (bad) mov xchg dec mov call iret mov mov or call push repnz rcll shr add xor xchg push adc inc adc js fiaddl add mov (bad) mov pop pop rcll es or clc loope shlb pop pop fwait pusha popa sbbl xor test div mov xor pop pop scas mov lods sub scas cli arpl es jecxz nop xlat sub add cli cmp sub (bad) xor cmpsb bound jb pop push inc jmp shrb shr rol rcl jbe pop add adc data16 pop mov insb test or jge stos pop or push xchg mov (bad) cld aam sbb add jge repnz mov movsl pop add xchg add and fnop mov lods xor sbb cmp (bad) mov mov pop or push push xchg mov sub (bad) outsl in add jle daa and cli outsl into cmpsl push xchg fnstenv out adc nop mov add pop dec mov cld mov sbb loope out fwait xchg mov adc loope push call rol lods jl jns sub sub pop repz lock cmpl xlat mov and test stos test ss je jle pusha cs pop repnz mov inc mov gs mov mov xchg push and scas mov sbb or bound mov push push fmuls mov xor fcmovbe mov xchg rcrb enter push sbbb jnp jo popf cmpsl sub push adc inc adc cltd nop xor pop enter add cmp subb pusha in cvtdq2ps mov dec rolb mov repz adc adc aad push adc push push add in insl fstpl stos cmp inc jno push cs out xchg mov lret fwait gs (bad) jne inc mov xchg fcmovb das xchg (bad) push mov mov clc push or je push pop cmpsb dec adc mov sub mov nop in lods inc sbb lcall in cmpsl sub jge and sbb cmp add sbb rcrl sbb push clc adc push push mov sbb push xor movsl mov stc cmc inc dec mov and les and sbb pop ljmp imul dec popa xchg sub popa into xor jge fisubl mov test mov repnz imul mov sti dec and test mov (bad) mov push push sub push das je or lret scas aaa pusha test push test inc insl out int3 dec test (bad) fmul aam js cmp mov aam pop pop pop lret lea cmc test dec inc arpl sub (bad) xor jge repnz dec push mov lods mov data16 pushf das sbb shrb xchg (bad) cmp hlt dec mov aaa or and gs pop push lock xor sahf les and and out outsl sar data16 pop icebp nop adc xchg movsb push mov xchg mov mov addl out adc mov cmpl enter inc (bad) into xor sub cmp add out scas mov jl inc (bad) mov iret outsb adc aam mov sub xchg in pop jne lahf lahf mov adc inc xlat mov shll scas repz call push out lods incb sbb jge cli inc mov test lods das je popa enter jg push in fidiv mov pop in decb push push mov and (bad) fnstenv inc into aad mov mov test fistl shr jbe cli loopne jmp and imul jnp or adc (bad) pop push push inc call push sbb push divl loopne call jge movsl out dec cmp pop or cmp in mov jb pop mov lea out rolb xchg mov fs (bad) addr16 xchg ljmp movsl cmp lods push xchg mov and (bad) bnd (bad) and lock sbb push jmp fildl rol add imul (bad) ja les insl adc testb jae cmpsl imul add inc pop cmpsb dec pop mov enter xchg rol jbe sbb or cmp mov mull ds inc adc repnz pop and int push mov cwtl faddl ljmp lcall or scas popf sti mov xchg jg mov sub in dec push mov popa sub mov sahf jg outsl cmp mov inc idivl cmp xchg nop repz outsl xchg enter pop pop clc cmp xchg inc mov jnp add fisttp jl xor mov xor sbb and mov jne sub xor adc or (bad) icebp add (bad) cltd xchg lahf movsb jo xor dec pop add ss or mov enter sbb insl mov out dec xor add cltd test dec inc popf popa (bad) rcrb loopne test lret sub clc pop dec fmull jb xchg mov xchg lods bound jb nop int3 jecxz pop sub jno jge push add cld addr16 or push pop and sbb xlat enter clc jl inc jp push adc push cbtw jmp lahf cwtl jo xor xlat movl fidiv in ret mov jmp js push imul xor aam dec pop and iret add rorl xchg in mov sbb dec adc out psllq movsb mov add fisttp push push and xor out and loop pop ja cmp or (bad) in int3 out dec or (bad) testl push dec nop mov (bad) mov add dec daa and add imul das outsl adc push ljmp jecxz mov add insl jmp dec xor insl cwtl push xor or es or pusha xchg dec jle repz insb sbb jbe jb aas loop xchg xor cmp movsl daa fcoms mov and fisttp testb je jbe int3 sub or sbb call gs sbb pop (bad) xor push pop (bad) adc das sbb or dec loop xchg xchg divb ds add dec sub add rcll adc push mov sbb int subl dec and pop imul mov or cmp fnsave sbb push xor mov iret xchg adc pop mov sbb jp shrb pop (bad) pop push xor imul jns iret adc ljmp mov cmp jmp ret hlt push inc mov cs mov les xchg scas or (bad) xor jecxz pop and pop jbe or clc xchg mov fsubrp hlt pop lahf push mov pop repnz xlat jle (bad) popl ficomp adc call dec test lret mov cmpsl adc int3 sbb pop cs stc sbb insb jnp lock les subl jns (bad) mov jle (bad) xor lds push test jmp insl or jg add push movsb scas sbb dec jne insb std dec (bad) fiaddl stc mov stos add mov sub inc call add dec (bad) xor in inc fcomps gs xor inc daa pop pop jae outsl dec dec jo out dec leave mov cmp ljmp fsub stos fwait (bad) mov push jg std dec (bad) jmp loop xchg and xorl fldenv and dec aaa push inc push adc mov xchg bswap mov pusha mov insl pusha nopl scas es call jl enter push (bad) lock xchg cmp pop or xchg and sar cmpsl lcall outsb psubusw mov test mov add mov push hlt inc insl (bad) pop xor (bad) xchg mov fldt icebp cmp shl push cmp or in insb iret xor cld pop push sahf hlt xor or rolb test lcall adc jns cmp fidivr push fild loopne lods rcll in xor push pop adc les gs lds jae sbbl sub adc xor mov and jge stos dec pop inc and iret mov and push (bad) sub ja stos out in in rorl mov cli popa cmp or jne divl xorl je into out xchg mov enter clc daa jns or negb dec cwtl test or ret add cmp and jae dec jno test mov sub data16 mov sbb push fwait dec push shrb in test (bad) and rorb (bad) mov dec mov cmovns cltd adcb cwtl pop (bad) cmp push pop xchg sbb ja sub pop test jbe (bad) pop outsl mov (bad) push lods sbb addb popa jns pop cmp out subl fcomp (bad) in in gs jge inc in je jmp jmp test gs or (bad) rorb imul out int3 push xchg mov aam jmp jo xor jmp call insl subb cmp cmp cmpsl fwait mov xchg dec seto imul sahf pop xchg xchg cs pop fwait (bad) xor shlb push in adc mov sub and call or lret gs bound mov test movsb xchg dec push mov popa dec sahf jbe xor addl fsubrp mov xchg mov jg test cli sti sub push dec lret mov bound mov push jns mov push test sbb lds xchg pop inc sub mov jbe sub int3 call cmp adc fdivl cltd sahf jg push pop and (bad) fldcw (bad) das scas je outsb fildl inc cltd sahf enter loopne xchg movsb orb mov pop sahf insl ja xchg dec jno dec pushf int lods lock dec stc lret loope push push (bad) push cli ja push scas sub das xchg add dec or ja iret out pop mov das add (bad) insl cs mov in stos jno ljmp xchg loop sub outsl sbb test pushf or mov and pop push ja js mov daa sub push adc sbb or cwtl inc (bad) popf in push inc out leave add and jp out popa sahf pop cmpsl add push in inc lret aad cmp leave std or jmp and clc test cmp push jno shrl mov cwtl in (bad) sahf inc lea fnstcw repz adc mov jl mov cmp mov push loope ja jbe es cs push aas fistpl xchg mov clc (bad) jle jo ficomp sbb and std leave cli popf xchg test call fidivrl lods jbe imul sub cwtl and insb test cs pop and sarl jmp adc fsts or add cmpsl mov inc pop loop jmp mov js add rcrl mov dec jl push fldenv cmpsl popa adc cltd inc xchg daa adc fimull jae dec movsb xchg pop adc jg int pop lret testl loope clc or mov outsb mov mov stos lret addr16 hlt or out mov out ljmp or xchg sub jnp lcall or scas jle sti negl cld mov mov pop pop xor mov pop pushf and mov leave (bad) (bad) lcall hlt inc jns lea jae je and inc xchg xchg fdivl roll cwtl call jno lcall int3 sbb sahf stc push cmpsl inc mov lret dec inc popf push jg and int3 (bad) fimull push shll xchg std dec jne jg cli idiv xchg test (bad) (bad) mov cli cmp (bad) ret xor jp daa in pop (bad) jmp cmpsb add rclb xor fadd xchg or mov mov jecxz ficomp xor movsb jae sub in push pop inc jns mov mov loopne loop popa jge dec mov in dec fldcw insb cmp inc push cmc test xor mov xor clc mov cs imul mov adc mov jae scas enter je loopne imul addb fnstsw push js test ds pop pop insl je stos in cli jl pop movsl nop add (bad) addr16 loope pop repz inc inc bound orl mov add out in jbe loop lret (bad) ss lock xor test js and loope cli or ljmp data16 sahf xor pusha cmpsl xchg mov movsl fcomp dec sbb sub loope mov mov mov add inc cmp pop shl or in aad ret or push das xchg xchg push js jnp dec sub loopne ror ret mov fstps and push dec addr16 lods xchg in sbb or insb movsl and dec sub mov push sbb adc inc mov sub push pop pop cmp inc cwtl insb cmp or test inc pop sub fstpl test (bad) aam cmp mov dec pusha dec and ljmp inc mov pop jne or jno not add jle jnp scas lahf jle cwtl rep jns mov insb lret add mov or sbb cmpsb jge sbb jg pop sbb ds and inc in out dec dec fdivr arpl pop sbb js add sahf scas int in sti jg imul mov push insb pop jp dec in lcall jecxz test and push inc lahf push sbb mov fmull clc cmpsl lret dec inc inc movsl xchg shrb cmp fucom jmp xor xchg inc mov fadds leave jno push leave jg sbb data16 adc adc add push scas push pop mov arpl pop or sub loop mov lret out mov push lds les xchg mov out adc and cmp rclb pop std cmpb test xchg fstpl adc cmp aad inc lcall (bad) cmp insb stc enter lret xlat aaa das pop scas movsb pop insl sbb gs in iret outsb pop int3 loope (bad) xchg outsl inc mov aaa adc push repnz aas imul add (bad) adc out pusha mov loop sti xor pop dec push dec lock jb sbb fwait cmp mov js mov or loopne pop and fldl jmp int jg cmpsl adc fs shlb fmul push (bad) jnp adcb fidivl inc mov cmpsl xchg movsl jl push xchg push inc cwtl adcb call fdivrl int3 inc idiv shrl gs pop xchg dec sbbb out fiadd jo push inc sub jnp xor imul das lret loop jl xchg (bad) fdivrs adc push lock jg push add xor mov std inc pop pop imul inc imul push aam cli mov xadd pop pop xor loope jnp jmp mov mov cltd adc jne inc rcll xchg fdivl ds add xor push xor sbb mov xchg dec add ja jns test sbb out jmp ja je ss daa ret imul cmpsb fidivrl inc js jne or cltd fcmovb jns mov sub dec mov lods and (bad) mov add arpl cs inc or lret lahf mov adc clc push (bad) loop test outsb mov push sti push test pop xchg or jae xchg mov stc push call jnp add and jbe int mov push shlb es sub and stos push mov pusha inc jecxz and nop (bad) mov mov pop pop xchg dec roll (bad) mov data16 sbb repz pop jge (bad) scas rolb inc cmp mov loop mov out fs adc sub rorl icebp cmp mul adc xor pop adc ret jmp in popf adc js jl imul into pop push push call clc (bad) jns mov lods mov (bad) adc mov sbb mov fsubs dec inc arpl leave mov and xchg dec or cmc xchg fbld adc pop push clc mov cs outsb popf test lret mov or and inc sub cs add push sub dec ret into stc sub bound or (bad) movsl push icebp data16 inc push ret xchg mov out faddl jp cmp cld (bad) in or pop push cmc cwtl lock pop ds repnz xchg cld fdivs aam daa scas jg (bad) mov lock add and mov popf mov pop adc and mov outsb jb lods inc inc enter fs lock and sbb arpl mov fmuls adc push repz stos dec adc sub xor and scas mov dec pop fcom xor push mov ja and lods fimul push and fist movsb pop (bad) dec lret adc outsb mov jne cld lods or xor xor xchg mov push pop hlt das mov push arpl or les mov mov data16 xchg (bad) outsl adc push pop (bad) fistl insb or ja and mov mov or push sub fs iret (bad) jmp and cld test jecxz cmc dec pop je push imul imul (bad) mov cmc push jecxz sbb cli sbbb out or inc xor stos (bad) idiv add mov and lods arpl inc mov adc pusha fcomp inc dec ja repnz pop xor in push icebp mov (bad) std outsb inc add or out pop xchg xchg flds pop add pop insb cs push mov stc (bad) (bad) xlat movsl jne sub (bad) xor cmpsb or jp cwtl dec (bad) rorb inc popa lret mov and dec lds xor mov cli or and pusha scas push in xchg xchg insb xchg cmp popa or daa sub xor ss dec lods mov daa das cmp push pop aad test jo sti fistp aas mov fsubrs fildll (bad) enter sbb cmp hlt hlt aam mov sbb sbb imul push bnd outsb cwtl jne scas push aad sub pop jmp movsb sub (bad) int3 inc pop cli arpl jnp int3 dec hlt movsl and cmp (bad) gs dec sub lret outsl cmp in cmpsl addr16 out sub cmpsl push jmp jb loopne fidiv dec dec cmp out iret outsb mov nop or jo sub mov rcrl std repnz xchg (bad) cs jb mov or jo test sub xor ror sar or clc mov mov lods mov or shrl repz sub add inc pop sub outsl xor jp add shlb mov dec pushf out fcmovnb mov push xchg mov jno iret aaa scas or (bad) std mov inc (bad) div fisub daa outsl sub add or rcrb (bad) loope and mov push and or cmpsb cmp dec outsl ljmp sub sub cmp cmp imul js sbb inc pushf aam mov add fcmovnb jge jg lods inc cltd out cmp sub por push (bad) xor xchg jle sbb cmp or lret iret mov adc jmp rcrb scas pop (bad) mov iret rorb cmp sbb inc mov and sub or dec pop xchg das nop daa push jns or gs sub mov sub lea jl mov pop cwtl add push lds loopne mov mov mov cltd addr16 gs jg xor lods (bad) jbe cmpsb mov mov leave lret (bad) idivl or inc mov xchg addr16 mov xor repz cmc repnz mov add and add mov mov jg jmp pop dec les loopne jle,pt push mov int3 push xor in cmpsl or add sub test push xchg mov aaa popa jl fstl (bad) mov dec mov and push stos mov xor push popa test push stos ljmp out adc out add xor xchg rolb pop inc (bad) nop popf std cmp loopne (bad) mov mov and (bad) ds movsb call sub jle iret lods pop jmp dec ficompl lea cmp xchg movl pop stos loop fimul clc into mov dec fsubrs adcl arpl iret cli or jae test add in cmp (bad) outsb push or mov iret test jb jne xor jmp pop loop in lods push adc stos cmp cmp add cmp mov mov sahf sbb jg sub lret movsl dec rcrl in cld push jae and mov dec sbb adc les imul (bad) jno push push xchg cmpsb std jp xor xor in es xchg repnz ficompl ljmp mov js pop dec and adc fstl xchg arpl out add and sub jle sbb push cld lods pop inc stos dec push dec pop divl lcall (bad) jbe cmp nop sbb inc lods jle mov sbb repnz stc fisubrl addr16 xor jg insb (bad) std rcrb mov pop xchg add pop xor fnstenv dec xchg push jae jp inc int3 inc fildl outsb out sub dec sbb shl movsb inc shll daa stos les insb (bad) sub xorl or (bad) jmp mov or mov mov mov mov xchg ret pop lret pop jnp and lock aam xchg lods sahf bswap movsl sti mov int mov lea ret sahf fdivrs ja push in out adc popa xchg fdivs fwait out cmpsl call movsl fldenv cmpl fsubs xor mov fidivrl jae test xchg fs in add ljmp cmc dec cmp mov aas (bad) mov std mov cmp jl xor shll sbb adc push xchg mov int3 jne test jns aas loope rcrb xor push push call pop jnp pop mov js iret rol loop inc pop jmp cmpsl aam dec push dec std push pop sarb mov xor mov fdivrl jns gs gs stc aad loope jg dec or ja lods mov lcall lods adc jp sub add outsl leave popf inc out add arpl lods es pop scas mov xchg mov out add jmp gs jg inc sub aas fisttp (bad) femms (bad) icebp pop cmc mov ret addr16 and inc std test lock out (bad) push xor mov ds inc repnz jns or push (bad) dec sub and lret lret or pop xchg ja xchg mov push sub in push dec out mov xor mov dec xlat ljmp pop adc mov (bad) int3 clc xchg pop sbbl daa sub lods adcl dec jl push mov enter dec cwtl cmp push popf out push lret in dec mov rolb (bad) xchg (bad) add lahf rclb inc flds es out adc push jle add addr16 mov cmpsl and inc popf outsl add cld dec xor sbbb (bad) fldcw sub outsb or scas or jle (bad) movsl dec xor inc ja mov aam into cmp mov testl sbb stos sti pushf divl mov cmc cs mov int3 dec cmp dec aas cwtl ret ljmp in mov xchg jecxz ret adc sbb adc cli ljmp enter mov ds add jle ds xchg (bad) pop sarl adc inc xor add fisttpll in xchg jle leave daa std cmpsl fmul xlat push stos push cmpsl leave movsb and test std and mov js mov mov dec mov push dec xlat or test sbb imul pop int push ds inc into sbb pop jbe fwait (bad) cmp dec fdivrl shl cs test mov cmp mov out cmp aam fsubrp xchg js in inc mov je mov movsl jno mov sbb sub mov mov xchg dec pop and pop sub inc or sbb jecxz out jmp xor mov mov cmpb push dec scas xchg sub inc push outsb or or or aas xchg push mov into ljmp stc sti in movaps shrl add push int3 push xlat insl div fiadd dec sbb or xchg sub pop lea add out clc scas add mov pop jne xchg and add cmc insb push mov lret movsb rorl repnz adc inc mov xorb cmc sub mov sti pop icebp cmp int lods sarl sti jo adc ret fcmovnb dec je add and stos xchg mov mov sub mov mov mov stc insl sbb mov push mov push sub mov stos xor pop (bad) gs shlb sahf (bad) adc jo (bad) adc mov mov sub ficomp call sahf and adc aam jnp inc push cmp int3 push or stc jg inc push cmpsb outsl or (bad) jnp cmp xor pushf xor cmp out sbb lods sbb or adc imul movsb fisttpl mov movsl out aas popf iret loopne test mov mov xchg xchg outsl stc test jnp adc arpl or inc out jp fdivrl push scas (bad) call lret loop xchg xor xor push mov in pop jecxz push movsb imul adc dec jl add and sbb mov pop je mov mov jae dec sbb pop pop loope xor imul and lret cli inc negl jle jp sub inc stc cmpsl adc adc sahf movsb in sbb push arpl loope cwtl add or mov pop pop and (bad) lock push int3 fcmovbe mov les mov ljmp ja jge divl jae fwait dec and js neg add push fst mov subl fisttpl inc incl pusha cmpsb add fcoms icebp cld ja mov add sbb lock pop aaa push cmp add jnp pop lock push xchg mov pop repnz in and add xor inc jle aad out sarb mov leave cli test (bad) mov xchg in psraw stos add pop fwait data16 dec mov pop xchg push rcrl push mov rclb popf mov je or leave dec mov cmp sub add mov jo jecxz pop insl mov cltd jg mov mov jne push push xor in mov movsb insb iret mov (bad) ja sbb mov cmp lea lcall rclb pop and insw test adc push jae add jl add shrl (bad) out aad jbe movsb push scas (bad) out out xchg nop stos ret dec lret and fdivl sti inc push lds insl rcll out hlt insl dec mov das ret stos scas push lret xchg movsb mov test daa mov xor adc jle (bad) cld sub out and aad jns sbb out stos jp pop cld cmp jno popf mov jg stos or (bad) idiv into fcompl lahf mov scas jns mov jg les mov (bad) lods mov cmp fs (bad) int sub aaa cli lods xchg push ret sub sbbl push lea mov mov nop xor mov movsb (bad) or mov loopne sbb outsl jle cmp sub dec xchg fsubp mov lcall mov push pop or mull das jns sbb femms call cmpl jns cmp xor popf xor cs rorl movsl bound pop imul inc sbb sub cmp in aad adc and xchg leave pop bound (bad) fs jmp jns push cmp test cmp loop rcrl orb add sbb inc dec jmp sub into cwtl pop scas rcrl es test (bad) cli pop shrl adc and in rorl sbb mov pushf pop pop cmp out inc loopne loop sbb mov cli sub cs xor xchg cmp (bad) out in fnstsw in push inc cmpsl mov mov sub int xchg xchg push iret xchg jl mov rcll aad int3 dec jecxz dec inc sub addr16 dec orb out dec hlt data16 es jae std cmpsb in sbb aad xchg stos or (bad) jp mov or sub cmpsl inc cmc xor mov lretw imul addr16 loope repz repnz and xor aad insb sbb inc femms lock arpl mov into cmp push pop inc xchg or sbb add cmovle mov add dec jl les aam dec aaa inc cmc data16 and inc (bad) pushl call sub out mov pop push fdivrl sub xchg das push add jge popa sbb fisttpll aaa call push adc sahf inc test jae sti popf leave les xor rorb xor loopne jg push xchg adc mov mov adc pop and sub cltd pop mov inc repnz fbstp aas jb xchg push aas stos (bad) xchg daa pop sub dec dec test dec hlt mov mov xor mov and sbb sarb cmp fldenv nop outsb call das pop outsb in enter xor outsb mov pop add int3 js jp shl inc push imul pop test push mov mov ja clc (bad) cmp pop fstl and xchg enter shll outsb xchg xchg push aaa loope mov int3 fwait mov adc call jecxz sub jo cmp cmpsl jnp pop sub les scas lcall push push lahf mov daa mov cmp sub cmp (bad) mov out pop push test jecxz (bad) ljmp mov sub push xchg xchg fidivrl or lds test gs call xor mov jp ja xchg or jne inc fs (bad) sub in fs mov ss gs pop cmpsl mov mov cli lods push pop mov (bad) test adc mov jecxz xorb shll and loope pop jp mov adc std stos mov jmp test mov fisubl sbb lahf add jae mov and inc cmp push inc sbb mov mov fs (bad) pop xchg iret iret bound out jne mov xchg push (bad) cs data16 push daa cmpsb mov fwait push inc (bad) inc adc adc divl inc push jne inc in sub and sub call cmp jns (bad) outsb cmp lods movsl vrcpps mov add sub mov and xchg ss mov xchg (bad) dec xor repnz xor divb stc cmc test dec or jns dec pop mov cmp add cld aam sub in ljmp dec mov xlat add sub inc dec jmp enter jl sub scas cltd shlb in out and inc lret add xor sbb imul cmpsl add stos les lea mov popa jecxz aam fucomip mov out fildll pop xorl into sbb sub mov sahf test out (bad) ljmp out jb shrb mov cmp or in dec cmc out fistpl arpl aad rolb push stos imul nop mov mov call or ficomp push lea or sub cmc mov push inc cmc sbb imulb dec out ja sti jnp iret cmpsl insl or cli stc shll add push out sub ds jl lock ljmp aaa stos in lds xor decb cmp ret fldcw leave xor aaa xchg jbe mov dec sbb lahf fnstcw aas mov mov fwait push xchg (bad) fwait out pop mov repz repz xchg loop cmp out (bad) loope mov in jo pop add fstpl in inc sbb jns or jne movsl dec jp push adc mov (bad) jne sub negl test fldt jae in rorb mov jns and or jge lock mov aaa leave decl jnp dec lock jno in arpl rorb push in xor insl (bad) adc xor fsubp mov aaa loop jg (bad) sbb or push leave popf nop xor inc addl stos jl cwtl mov sbb inc mov push mov outsl aad adc push lods mov rol inc hlt test arpl cmp imul mov lds jecxz int mov cltd in mov xchg mov cs fwait inc lret ja fimul mov daa bound inc imulb pusha dec push cmp cltd fistpl (bad) fbstp cmp repnz stos sarb pop popa sti mov js movsb dec fldenv jne mov inc jecxz bound mov movsl loopne and fdivl out test addr16 lods fnstsw mov sarb add dec ja jmp xchg xchg (bad) lcall out dec xchg sbb rcr adc dec idivb sti xor lds mov dec imul (bad) movsb inc push dec mov rorb jnp aaa or pop add data16 sbb (bad) (bad) in cmp fiaddl loop outsb movsb hlt sub mov sbb sub pop jne stc jnp push repz in push inc fs jp sub nop pop es ljmp inc jno insb out std and jle scas jae popa mov rclb add push lcall dec add jecxz push adc mov insb dec dec popa add inc incl mov push call ds (bad) jne fisttpl pop movsl inc es fs in aas lcall mov mov into incb imul dec xchg jne inc fwait and mov loope pop sbb fstl mov xor fwait pop lock jno aad imull sbb xor shrl xchg jbe fwait push push mov pop mov mov cwtl push adc push xchg nop xor dec sub cmp repz inc pop gs or jbe cld jnp (bad) sbb daa aam jl pop sbb adc out xchg in push cmpsl test push xchg in lods inc or mov ss pushf pop les mov cmpsl dec pop add sahf aas (bad) sub push sbb jbe mov stos push addr16 into (bad) xor imul sbb setae inc xchg je dec lock xchg loopne jle movsb cli mov mov int xor mov call adc aaa xchg xchg in scas sarl or xorb ret icebp rolb dec out dec and aaa cmpsb movsb and cmp push inc mov or decl push jno ss cmpsl sbb push in icebp daa lock mov cli (bad) xchg mov add cmp int3 add pop sbb adc push mov negb dec jmp push sub sti jl cmp xchg add sarb sub fnop jle out jmp mov movsl add div or xor jle mov loop imul fmul fiaddl add mov mov gs mov repz push dec xchg lea push arpl test and loope push lods int mov pushf pop push mov (bad) xchg test rclb (bad) loope je mov outsb and sbb decb add rorb mov pop insb mov (bad) xchg lods mov and fwait shrb in mov mov jnp imul sbbb cmp adc imul bound push mov pop (bad) icebp test fnsave add movsb sub push dec lret xor and mov dec jb stos cmpsl xchg dec addb inc adc imul lcall cmp inc mov jne ljmp cmc jle mov in nop inc cltd imul sbb cmc ret or pcmpgtd sub jecxz xchg icebp sbb iret pop fs out xorb push lods movsl add jbe push das sub cs xchg sti xorb (bad) push push and cmp jl push xchg mov int3 jne and push push sub and bound push mov adc ds daa sarl xor repz xlat and nop or jge mov jg lods iret inc lods mov mov inc loop fdivrs pushf stc sbb pop and jns xchg xchg lock in add js mov jp xorl add adc (bad) adc clc pusha (bad) movsl mov lds push jnp cmpsl mov cmpsl cmp loope lret sbb and dec push inc sub or inc scas mov lods sub dec jne lock pop cmp fprem1 push imul dec xor and int test lret iret inc cli pop vmovdqa addr16 mov xor mov jmp adc dec xlat fsubrl stos fcomip or sbb lcall popl dec mov int3 dec lea mov outsb add mov push sub mov movb jb (bad) (bad) cld push inc incb idivl sbb jle xchg xor xor imul out adc xor or and sub pop insb xchg outsl and mov jb lock inc shll xor xchg or in and xchg addl pop sub lret push mov pop sahf xchg xchg pop int3 enter iret loop je jg sarl xchg ds sub lods jge pop inc or pop testb movsl icebp or cmpsl loop jmp negb mov dec xchg xor xchg sar mov and pop inc mov and mov and leave mov test inc sbb and inc andb mov scas test pop lods repz jge iret outsl (bad) pop sub rcrb outsb lock cli stos and xlat int3 or test mov dec mov mov into movsb inc mov and clc rorb xor enter and aaa adc xchg xor xchg je jo mov mov aad das jle mov mov push mov mov xchg xor adc je fs popa sub lods in divl mov ret outsl mov mov jne mov jecxz fistp push mov lret jnp ret dec dec add outsl stc je test ror and ljmp xchg nop stos iret sbb pushf fsubrp cmp stc jp test jmp sub xor gs scas xor fmul clc or ret sub adc xchg and fisttp test xchg xchg jl dec mov mov cli sub shl movsb (bad) mov jb adc mov imul jecxz arpl ss sbb sar in inc pop mov stos mov aad jl xchg cld adc pop loope pop and inc mov add mov aas scas or hlt mov sti ss jmp add push cli fildl sub dec inc testl out jge test xchg shrl fdivl xchg subl test stc scas fisubl je mov fcom scas mov (bad) repz aas jnp mov test jae cmp daa mov xchg test cmp mov cmpsl out cmp mov jge fidiv inc sbb mov in rol fdivr outsb adc hlt les in jle jle jg adc or movsb lods mov mov rorl jne xchg into adc imul mov lods mov inc mov cltd ret sub and loopne add ret loope scas adc pop ds lods lods fxch lcall fmull xor mov or jnp (bad) push and or ret mov mul andl shlb popf mov fcoml imul xor loopne mov dec repz sbb pop (bad) and push pop dec int3 dec mov test cmp clc (bad) pop cmc aaa movsb loopne push (bad) fidivrl imull leave mov mov arpl shrb test seto aam daa aaa mov ljmp push sbb and jno outsb out sbb push pop mov fmuls je jl jb,pt icebp in inc push mov (bad) pop imul push icebp mov xor shll ljmp xor cmpb repnz lods push mov test jbe (bad) xor mov gs sbb je mov test mov or imull leave call sub sbb mov fidivrl and nop xor movsb jecxz mov adc cli mov push fsubrs or or xor sbb ja insb int jne xchg sub sbb xchg xor sti add int3 pop nop or cmp pop or xor and fistpll or vpshuflw pop pushf dec jno mov fdivrs pop mov out pushfw xor outsb stos or data16 sbb dec int3 icebp adc xchg imul int3 clc adc inc mov enter pop adc sti cmp stos rcrl stc ja cmc pop mov add mov test stos inc jno push add shrb inc add xchg mov dec jl leave or fadds das stos and bound std outsb dec (bad) dec jae addb push enter rcrl jl les adc arpl add rcll sbb or pusha jae sbb in mov mov mov jmp (bad) in mov sbb sub push negb xor dec popf sahf loope mov mov jne int dec movsl mov out icebp fldenv sub mov es out jmp out push sbb push pop je sub movsb sbb xchg lea dec repnz pop xchg in sbb pop cmp adc iret call adc aad push dec inc jge or add push push mov mov movsw fwait lods inc mov cmovae or xor popf mov mov sbb aaa repnz fistl sub push sub pop xchg shrb insl mov xchg sub rcrb jge xor movl jae cmpsb xchg mov dec lock pop ret int mov mov addr16 xchg jnp movsl or xchg fidivrl sub cmp das test in hlt sti push cmp sbb xor (bad) sub pusha out das lea xor adc (bad) and push pop imul mov outsb jg and push (bad) pop dec in les pop movsb imul das sub mov clc mov lea test leave mov pusha and test aad loope mov xchg out stos insb (bad) fimul stos repnz pop test xchg push cli cld cmpsb and jnp xor or cmp stos and ljmp dec xrelease ss lcall adc inc or xor push adc (bad) pop shr cli add pop call jae std in and and lcall (bad) xor cmp scas das sbb mov cmp sbb mov ljmp gs in shlb lods mov test out jle mov xlat pop dec loopne outsl jne cmp xor pop push fs add fwait jbe mov and pop mov lahf (bad) jno fldcw mov aaa hlt rorl or push pop adc mov xor daa cmp and jns (bad) push movsl aad mov call pushf xor push sahf or hlt divb sbb jecxz mov daa add inc mov xchg cld pop nop cmp mov clc mov popf ss xor scas or push sbb sub in scas je fistp mov (bad) out cltd ret nop xor in jg lock stos mov iret das aas cwtl jmp insl sbb das je leave addl sub pop arpl data16 or js sub mov push add push dec and outsl push inc xchg js bound in scas aam sub sub push push inc xor mov xchg (bad) fcomps jge aad cmpsb xchg bound pop lahf popa push sub adc sbb mov jnp cmp jecxz and fcmove sbb mov mov xorb pop mov add or pop mov sbb pop out test out pop sub xchg or push push mov pop out ret test repz pop push push mov xchg jbe jmp inc push in cmc fmull (bad) mov es jnp ret and pop insl mov xor xchg and sbb pushw mov leave push (bad) push insl les xor or or mov pop test or mov mulb mov push and scas jb jb clc pop jmp movsl sub cld pop adc sbb dec call out sbb sbb push in dec (bad) jmp (bad) pop pop aas fcmovu inc cld cmp ret fidivr ds jb and mov mov inc pushfw fwait (bad) in add fwait add pop or icebp mov push pushw stos hlt cmp add mov popa xlat add cwtl es adc or add dec xor lret xor or xlat je add adc add xor push pop mov and mov out rcrb push add adc cmp jne xor insl je xor mul mov add mov daa aad push push sbb add lcall fdiv jge aas ret or or stos inc or movsb loope test int3 fmuls sar into push sub add or aad loope jmp mov (bad) jp jmp mov xchg sahf insl sub lock xlat lahf cmp mov push js jnp test inc jbe push jo mov arpl mov sub and adc mov mov mov idivl cmp fisttp cmp inc out cmp leave xchg aam int ficoml cmpsb insb inc je cmp dec (bad) ljmp mov (bad) mov daa outsb inc mov pop gs cmpsb adc push mov jle xor and int (bad) enter ret mov (bad) sahf adc shll pusha jb js jo subps mov cmp loop aas mov dec (bad) fcmove mov pcmpeqb mov xchg fmull jae rcrl xchg cwtl push stos jno rclb in xchg cmc pop mov outsb mov fstpt xchg ficoml mov adc cwtl jbe mov mov jbe andl sub popa scas add lret out xorb push or add popa ja arpl cmp mov dec daa xchg mov sbb sub inc mov xor inc or mov mov lock push mov sub sub lods mov imul out mov mov xchg add push mov dec mov adc shrb and pop jge cmc enter pop dec cmp add (bad) in dec mov or add movsb repz cwtl rcl stc mov xchg stc adc xor jbe inc xchg mov mov jb fucomp xor jb add enter movsl outsl cld jp jmp pushf les (bad) push cs out pop and jge cmp js repz in or add sbb loop (bad) cmp dec pop sahf iret out cmp mov lds dec dec pop fadds push shll sti lcall push add pop xor pop inc dec loop jle lods lds mov fcoms cmpsb and adc or lret ficomp (bad) pop (bad) sbb xlat inc cmovno xchg stos cmp inc add xchg test imul scas js out sub inc les cmp icebp push cltd lret jecxz mov cmp sti dec enter rolb mul mov xchg ds jg adc push push jo cmc cwtl dec xchg jbe cwtl rep mov subps push push shrl mov push pop aam xchg add add inc rclb and les inc shl lcall dec jnp pop je fsubrl xchg dec and push std in fstp xchg jnp mov inc sbb into add repnz sbb fisttpll in sub dec mov cwtl cmp movsb lret xchg dec jge mov or lods mov xor in dec jle iret add (bad) bound in orl gs mov loopne mov sbb push outsl add sbb and lret push jne jnp mov mov lods mov lret pop and pop mov mov insb xchg lcall aam lahf mov inc or cmp (bad) aas pop cltd xchg ja sub invlpg popf xor push jbe inc stos aas xlat mov test or imul jne jae out loope test dec and mov inc movsl jo out push icebp (bad) and adc mov movsb out ficoml (bad) cmpsl lds call jbe cmp sbb dec and lds mov call mov int3 ds jecxz in pop sbb loopne popa mull push jb outsl pop dec jle and insb jp add subl mov adc out xlat (bad) push pop bound cmp inc fldenv les aaa sbb jg cmpsl xchg imul loope bts (bad) push push cli xor loop xchg mov movsl iret or cmp xchg lcall jle mov mov rcrb leave cmp xchg sbbl xor lret out into scas push leave pop cmp fcoml cmp js fldenv xor fbld or sub mov rcrb and pop sti sbb pop jns jne incb cmpsb shrb mov push mov lea and repz mov inc movsl inc inc and dec movsl std push lahf push dec jbe icebp movsb dec lret xchg dec inc pop adcl and sbb and dec sbb insb pop ss insb add inc cmp scas xchg push popf xchg sub imul imul shrl jnp,pt fisubl or test fcomps push in divb xchg pop nop push sub jne dec mov insb fs addl jb arpl bswap hlt jecxz inc popf pop mov stos jno stos cmc xchg stos into insb inc push pop fstps int into or addr16 repz sub adc pop mov fmuls sub rcrl mov mov ss jae pushf cs or je push add lcall fsubs in cs sub inc push cltd push jo pop mov mov leave push sbb xor or (bad) nop mov mov scas and jg into incb dec pop scas pop pop int pop out xchg pop clc jl cmp fs or adc ja mov pop outsb mov mov adcb subl fwait cltd das jb pop das test addr16 lret mov clc jne imul arpl jg xchg sahf xor jl test sub (bad) loop push popf xchg cmpl mov outsb mov sub (bad) in jae rcrb inc cltd jnp ss ljmp das fdiv xorl in shlb lret adc cmp push jmp les or or xchg add jl or rcll xchg push popa xchg pop mov fs lret insb (bad) mov mov push in sti cmpsb adcl mov adc add lds mov and xadd mov adc cmp or fwait (bad) dec in push mov test (bad) cmpsl mov lret xchg cwtl xor adc js sub cmc inc sbb cld lods out push into (bad) xacquire (bad) dec pop xchg sbb js xchg scas add popa mov movsl fsubrs dec imul mov lds enter sub jb sub fnstsw adc clc xor pusha sbb mov mov in sbb dec sbb mov data16 loop jmp pop push xchg loopne lea dec scas js and fstl dec mov push xor mov rdpkru out mov pshufw xchg pop testl xchg pop faddl movsb jne mov pop (bad) mov icebp ret add pop clc aad rcl push test jne pop negb (bad) xor loop rcll sub fimull adc jle out into rorl mov cmc out jp rcl sti xchg cli adc stos sbb cmovnp push std sub mov mov jno (bad) cmc sub push daa push jnp test xor mov adcb inc outsb xlat sub movsb (bad) loopne mov (bad) or cmp pop fidivr pop push cmp mov xor outsl lret (bad) xor sbb lods test dec loope std pop add sbb inc pop push daa hlt xchg push std lea mov mov scas sbb push les lret das dec and data16 insb dec or jle and in enter cmp push and mov inc inc cmp (bad) dec pop dec pop mov pop int sti cwtl rolb mov (bad) mov lret jp out push lret cld mov pop das add sbb push xor mov inc inc iret cmpsb popf outsb jl push or sub sbb data16 sub movl add sub adc or cmp push push sarl xchg dec and push xor leave insb test test stc aas in cmp (bad) test mov jnp push popf mov xchg imul iret lock add push sahf pop aaa or fwait mov push and fmull mov loopne cltd ds mov (bad) fsts rorl cmp cltd inc call insb jmp aaa sub (bad) sbb pop imulb adc mov notb js push add jbe stc mov mov scas out xchg addr16 leave fbstp lahf repz popaw (bad) repnz push stc out ljmp inc mov xor arpl lods adc (bad) push sub push or fisttpll mov xor mov cwtl jl jae ret mov jo sub push push cmpsl push lock mov das mov xor cwtl jle push push (bad) cmp xor inc (bad) pushf adc xor xor test insb mov push clc enter lods clc push push pop lret push neg leave sarb imulb cmp fisttp imul jo cli pop mov js sub pop fldl pop (bad) lret pop lcall add inc and cmpsl das test hlt ror mov jl mov outsb (bad) and push sub mov or pusha std movsb flds imul into dec jae sub fistp xchg xor and loopne inc dec mov (bad) xacquire scas push xchg rclb and add fisttp jmp mov mov jecxz jle cmp jge jle dec push push aas (bad) (bad) fadd cmp pop sahf xor mov mov cltd andl mov pop out push pop xor sbb push into sbb mov cmpsl and adc cmc adc adcl jb cmp test int ljmp dec xor inc or mov js out pop xor (bad) es mov jge in cld out fdivl xchg dec dec add jb (bad) sbb sbb sarl arpl in add pusha mov xor mov or pop xor mov mov mov sbb mov mov test inc inc xor (bad) daa stos jg cmp pop xchg scas pop movsl mov lock cmp or (bad) in or xor jge inc test (bad) mov dec jnp or pop adc repnz cwtl outsb nop aam push cmp xchg stc xor inc sub pop pop cwtl sti push and iret dec ljmp lods stos cli cmc daa cmp and test int3 jecxz mov pop dec add lods mov test push sub cmp and push push mov mov jg ret and mov push mov clc mov pusha ret pop xor mov mov addr16 and faddp movsl test add inc ficoml sbb cmc sbb mov (bad) in sbb data16 inc and xchg mov inc sbb icebp adc and sbb and dec xchg into icebp push mov das pop clc and leave sub std sub ds popf jmp inc push std adc xor test movsl adc push fldl fnop cmp dec or imul xchg pop sub push cmp adc jb dec fidivr push mov jae dec xor lock sbb pop jno sub out movsb dec add aad jno push (bad) xor push push ret loop movsb data16 jmp sbbl mov add push push push dec xchg jle cwtl push mov test cmp in imul mov scas div out xor js push cld mov push adc pusha fwait xchg inc pusha and movl pop cmp add or add rcrb out ret adc jbe icebp imul mov inc mov push int3 xchg or repz dec fistp or nop push pusha ret pop sub adc (bad) neg loopne mov int ljmp loope imul mov pop mov dec pop out loop xor aad insl jg pop cmpl test mov lea push jecxz pop lods pop dec lret cli lret xchg sbb shll arpl jno out lcall leave stos lock pop sbb aaa sub loopne daa cmp ljmp jl cmp jns faddl popf dec out sahf pop or lock add or ds loope xchg adc bound adc fabs int3 rcll or sub iret jae test xchg int mov and out int3 imul adc shlb es inc imul sbb add cs cmp (bad) out hlt push addb mov push jb repz add add xchg mov inc call lret fidivr pushf lret dec shlb iret prefetch or inc push inc (bad) das loopne inc jbe xor xchg (bad) fildll roll stc sarl cld push mov enter jne jmp jnp test data16 mov mov lea mov dec bound insl cmc dec ret jne cmpsl jecxz pop in popf cmp dec ss lods push mov pop inc mov into mov xor mov lea jmp xchg out jl mov push test ss sub leave fldenv cmpsb (bad) loopne mov dec push stos adc inc shlb and inc imul sbb inc fisttpl cmp sahf cmp daa xor outsl add fstpl xchg fs popa mov push mov and push lods lock xchg seto xor and sti sub in jmp aas or dec mov in sbb xchg mov add imul mov (bad) imul pop mov (bad) dec leave cmc xor xchg in jne push movd xchg push cmp push fwait adcl sbb lods lahf cwtl jg sub add dec stc add (bad) ret ret pushf imul sub inc movsl sbb mov test aaa test jle dec aas fisttpll add jle fidivl mov pop xor lea pop jmp in xor mov or or dec dec lcall and or in pushf push fiaddl je stos cltd push movsb adc cmpsb pop inc cmpsb (bad) jp push or mov fldl repnz sub sub gs jb cmp call insb mov mov sti loopne fild into (bad) ds call add dec or inc into lcall aam inc or inc jp sub test sbb push mov dec or jne inc (bad) ljmp jb jns icebp (bad) enter mov sub pop pop push call push sbb and sbb mov add stos push mov call scas (bad) jge jge loop dec cmpsb dec xor xchg inc das fistl add lret loop fwait movl mov out fistpll ja and call fs fiaddl scas push outsl repz fisubrl mov push xor adc into adc gs mov lret cli or xchg inc or mov dec sbb add mov jb and pop enter enter out lcall dec (bad) xor pop sub aas pop sbb pop fdivrl jge shrl dec cmp pop pop sub xchg mov cli inc sti out lcall rolb pop (bad) scas fs jg jge cltd and dec loopne sub rcr dec aaa cmp pop and lods fcmovb ljmp xor xor fnsave mov push mov and jp popf in jge gs pop imul (bad) arpl pushf movsb cwtl sbb push out or jle les aaa movsl pop shrl mov fimul lcall add mov pop aam cmp dec dec int3 mov (bad) dec int3 and jp arpl pop adc hlt (bad) xor lret rol test pushf cmp cwtl imul pop js data16 insl xor daa mov push mov jae,pn (bad) cs jbe and into adc mov (bad) gs loop dec dec mov or lret dec imul arpl sbbb (bad) or cmp das enter pop add cmpb jle std outsb into inc fs jp mov xchg push mov adc dec pop bound in daa ficoml ljmp inc dec les int push pop ljmp jne insl inc int3 add out iret movsb fidivrl fnstsw out inc shlb xchg add lret cmp mov add sub cmpl mov fnsave add cltd push cmpsl dec xor dec xor cwtl xchg xchg mov xor or sbb ret testb push mov cmp pop pop mov sub cmp xchg mov inc add mov mov xchg and pop inc aad in pop test test in jno inc cmp push inc faddl sbb xor mov jae mov xchg insb xchg push push mov adc add add mov push pop cld and sub fiadd andl mov mov pop cmpsl cmpsb cld stos (bad) mov cmp sbb mov mov xchg mov fistp xchg jno jnp sarb iret lret pop cmc cmp inc rcll int3 xchg push push pop cmp lds jns pop push andl xlat sahf fisttpl arpl dec pop aad int out mov mov pop outsl in pop cmpsl sti add sar sub sub sahf jge adc push imul and ficoml je sub nop ljmp leavew ss imul or dec daa divb adc data16 or lock cmp jb stos bnd stos mov pop adc and mov popl mov jl ret (bad) scas dec add sbb inc or outsb ja push inc (bad) push pusha cmpsb mov out xlat lcall jae int call add push movsb (bad) jecxz inc (bad) (bad) fist loop sub cld xchg lods dec in fld jecxz mov sub xor icebp (bad) inc xchg jbe lds xor hlt xor mov push mov stc imul xchg out lock add add mov dec sarl in push add je fdivrs add jl in or sub jecxz pop insb sub pop sbb sbb mov insl ja dec inc enter jnp mov mov hlt mov pop test jecxz add sub jns push inc push into (bad) aaa icebp adcl mov (bad) imul pop out ficomp (bad) flds or mov push sub mov aam shll fstpl cs mov xchg movsb mov push hlt les jbe loope (bad) call and pusha sub movl clc shrl and shr loop out std push mov mov cmc imul in jns leave clc ret and leave sbb inc mov (bad) sub and fcoml or arpl mov mov ret (bad) sti pop iret mov pop mov cwtl push ljmp mov sub ljmp jmp xor add jmp cld mov (bad) jae ja in addl lcall mov enter imul call je mov packsswb mov je cmc dec xor xchg ficom lea or loope xchg sbb inc lds sbb mov popf outsl cs in sbb cli pop mov cmp (bad) cmp insb js push insl in add (bad) stc pop mov fidivr outsl arpl cmpsl add xchg pop test push roll out or int les sahf insb ret stc inc xlat lods sbb sarb lcall dec cwtl xor jg les dec into inc jmp cmpsl loope loope and mov mov adc stos jbe (bad) push sbb imul rolb loopne xchg sub ficompl or jb lds dec sbb les stos and cmp mov mov stc jb push lods ret gs pop cld and stc in cld add or mov insb and mov cs movb (bad) pop out ret (bad) (bad) in aas push ds sbb jo fwait mov mov dec popl push fiaddl in stos jne lahf pop outsb adc cmp pop push ja add dec je aaa push ja faddl sti jno repnz fdivl pop je (bad) mov rcrl inc xor lea xor movsb mov lahf sbb lock cmp (bad) xlat push pop xor jae dec test jno inc in cld cld lock bound add andb stc fsubrs lidtl negb (bad) pop push add lea divl mov hlt add jb ss mov sub pop popa inc pop in adc aaa stc jno int3 lcall das push pop jbe hlt das repnz fistpl xlat call fcmovnb cmpb push mov icebp ja jbe fbstp aaa jmp imul movsb mov je push loope out aam fwait or pop jns adcl dec test xor ja add push imul (bad) in (bad) fwait (bad) xor icebp mov push jle mov shr je enter adc xor inc (bad) fs lret fldcw mov xchg cmp jle mov movsb sbb les aad mov and mov cltd loopne clc adc cmpsb xchg out popf out mov andl lret xchg pop hlt scas int js pop int xchg dec pop mov fisubrl push add repz inc inc cld push ret mov jmp addr16 jae dec gs int sbb (bad) out gs mov repz mov inc cmp rcrb jae and in out pop jno and inc (bad) mov push inc movsl cmp stos arpl sub out jno mov fs adc sbb vmaxps (bad) repz stos sub mov mov push fistp add mov es push bound les lods sbb jne iret and std cmp aam jmp adc stos push (bad) mov push (bad) sub cmp popa pop jle data16 out notb aam pusha and scas in jnp test addr16 adc xlat pushf push push leave mov xchg je xor inc pusha pop and mov pop adc inc std lret push jl ja dec daa lahf pop lret (bad) notl ljmp xchg popa insl cltd ds addr16 mov xchg outsb aas arpl pop dec arpl lds mov push test jne mov or ja (bad) mov inc popa mov pop fdivrl jns adc jb,pt sub mov or push idivl inc negl sbb jp jns dec idivb (bad) test test xlat ret jge (bad) sbb adc xchg (bad) mov dec cwtl daa movsb insl dec dec popa xchg sti dec mov jmpw dec or js push or xor jo jp cmpsb sub mov aad inc xor push loopne xchg fist inc xchg data16 repz inc push sub sbb xchg mov arpl aaa sbb (bad) and hlt rcll and outsb aas push je popa pop imul mov jae pop dec push pop cmpsl or lds xor imul jecxz pop add and shr pop (bad) adc dec stc inc jnp or outsb fistpl (bad) das inc jecxz scas xchg dec xchg push les dec pop pop jle bound jns in (bad) adc adc ds out (bad) lock add pop loop jnp (bad) xchg cltd and adc cmp lret cmp sub add out mov jnp add loope in out aad repz pop lret mov or jecxz aad int loop cs movsl pmaxub xor gs mov jne jg xchg mov or fwait inc add inc push push push push cmp mov dec shrl in xchg (bad) (bad) (bad) leave jne inc mov (bad) loopne mov inc or stos jbe xor mov pushf xor mov sbbl int jle pop (bad) dec cmpsl and out stc mov loopne cs mov xchg jecxz dec or sbb out add inc divl stc add ficompl cmp cmp mov mov lods cmc xchg pop pop lock out bswap xchg inc scas scas fwait xor jle or xor int3 call mov cmp cmpxchg ljmp xchg inc cmp pop add stc pusha mov and in ja hlt scas jge inc stos movsl (bad) xchg js roll mov out dec and outsl xchg addl out and pop mulps mov inc push mov popf loope popf jbe in or cs mov in dec inc xor xchg or rorb add pop adc lds pop cli pop xchg jg mov jecxz xchg xor popf xchg push add notb ja mov shlb mov mov mov (bad) int or and sbb orl mov xlat sbb clc arpl fadd icebp mov mov dec jg rcl out dec sbb lock lahf dec int3 loope cmc stos mov pop rcrb mov (bad) icebp (bad) in mov ffree pop mov lret jp movaps rolb out in and aaa mov stos xor cli enter jo gs icebp jnp mov jae xchg cmp xchg mov call mov mov jo pop xchg xchg rcrb outsb inc jo popa xchg push (bad) push dec mov hlt bound push xchg push inc sahf and xchg xlat rolb inc fldenv mov cwtl fstp inc cmp in and mov nop out test ja pop mov popl stc out inc or push popa (bad) cmp mov mov daa out (bad) hlt rorb cmp jecxz rol cmc sub jle inc pop push lahf jp lcall pop stos fiaddl push push jl insl divb jge dec movsl sbb imul aam xchg mov inc sub cmpsl decb das xchg popf mov insl (bad) jb (bad) add jle mov cld rcrb mov mov cmp inc xchg add sbb push (bad) out ret in outsl ss or sbb insl decw cmp pop and scas xor inc out mov repz clc imul lea lds mov decb test ret jbe jns sarb inc xor inc jno mov xchg daa movsl shlb mov into jbe out in sti jg loop xlat enter and dec jl ljmp cmp (bad) scas cltd (bad) jg (bad) xor mov int3 pop jb xor outsb (bad) imul in cwtl ret mov je or xor les mov push xchg outsb jp jno xor mov jl push sub hlt push popa adc int es xchg xchg xor cltd push ds dec add add je and jp or ret (bad) mov lods pop sub mov lock mov dec insl sub pop sub pop outsb jmp scas xchg cmp jbe rcr pop adc aam inc cmc sbb js and mov and pushf pop and lcall mov jns (bad) mov inc insb test xor jg sub or ficoml sub dec pop jle jns push lock adc jnp xor add jecxz sbb xchg cmp inc fidivrl imul jne xor in inc out sbb je adc rcr push jo lahf lods xor shrl out das pop int3 mov xlat rcrb xchg imul addl insl xor (bad) mov into out (bad) push cmp pop sbb hlt sbb push mov (bad) das jae xchg dec cmc xor add add jl test int insl idivb mov pop xor notl inc insb dec sub js (bad) xor fs xor push push jge xchg clc jg pop jp mov mov cmpl pop sbb push jbe loope sbb mov (bad) rcrb add jl pop xchg sbbb sbb pop or lock inc sbb dec loope ret das cs dec neg iret out cmpsl aam jno adc sub mov cmp jae pop or mov fadd mov test mov add jno xchg cmpsl add std mov mov sub dec lock repnz xor mov fbstp test scas mov cmp push les pop jmp dec add add add pusha inc dec xor mov dec push cmp mov mov test cmp dec int mov in dec or cs data16 pop push cs sub les mov add inc mov das mov imul adc mov xchg jbe adc insb mov or cmpsb inc or je pushf mov xchg addb pop jecxz cmp rorl movsl js xchg scas lods ds mov xchg mov insl xor mov push ret out js shrl inc or std jmp xchg push inc pop test in xchg mov repnz stos sti mov and mov loopne sub test add add lret test mov arpl repnz imul pop mov out lret jge ja ret inc out mov rclb scas xlat jg inc cmc inc mov (bad) pop cmp out adc mov cmpsl lds gs shl ret jge pop clc popw fisub inc rcrl xor sub stc pop (bad) cltd cmp rcrl (bad) mov jmp leave sbb push ds jl jl in subl divl leave roll xor enter ret push insl or stos xor mov out jbe repz sahf shrb pop psubusb sub inc push jecxz dec clc xor sti fidivrl rorl dec js sbb mov xchg das in pop nop ret addr16 js xchg rol or out mov adc daa loopne xor xorl fstl sub out add dec xor cmp inc inc or sub (bad) jb sbb scas mov in push pop xchg inc mov data16 inc dec cmp pop ja test (bad) es and adc ljmp pop lds cmc hlt test mov into pop xchg cmp mov mov (bad) push push stos addr16 pop loop icebp push movb adc push mov sahf add jecxz dec jg call ljmp cmpsb rorl jnp insb adc jae add adc es mov jp (bad) push add or xchg iret (bad) shrb mov pusha inc pop stc fwait addr16 mov or and lods pop dec shrl inc pop jbe outsl mov push lret pop mov fcompl cld adc aas cmpsb movsb pop iret inc jb (bad) pusha lds stos cmp mov add neg jne fildll fistp call xchg inc popa cmp jg stos out daa dec imulb jne add cmpsl lods xor xor fwait lods jle setg stc stos push rcl mov adc sub mov rorb and pop lret mov sti fcoms fnsave push sub dec lcall repz pop (bad) repz int add mov (bad) adc cs sbb (bad) cmp in repnz in jnp sub lock xor (bad) fisubr test and pop dec sub in or (bad) aad push push jle cs test sbb mov iret cmp out ret jl jno mov adc xchg or xor xchg enter mov (bad) stos fsubrl sub imul xchg stos call bound inc rcrb jns addl xor jg sub or mov test fwait sbb fdivr rcr or push pop into add ds test and fcoml and ja dec dec sbb inc adc leave fcoms pop or sahf dec mov aaa mov push mov repz jle rclb imul fiaddl test jo or mov sub das andl aas adcb push add mov ret movsl (bad) mov (bad) bound adc pop push in sti mov testl (bad) mov (bad) push fidivr ljmp push lock pop rcrl ret repz popf imull push push sub lock movsl lcall insl insl adc or les jmp dec ficom fdivr mov outsb popl aas and add add add mov (bad) jmp xor sbb sub and pop mov jl mov int3 dec outsb mov sub fcmovnbe xchg fimul sbb outsl add fstps ja ss stos sahf and fs fnstcw mov iret lret push loope cmp test daa je xchg aas sahf (bad) out jg push ret dec xchg or cmp jb pop or jne fistl mov adc cmp adc xchg inc rcll mulb cld jo add and adc push mov xchg popf push mov les sbb js xchg lahf cwtl inc mov call lcall popa out jp pop push (bad) cmpl xchg in mov mov pop js inc sbb lcall nop outsb xchg xchg and daa mov sub push cmp inc dec popl mov pop arpl cltd mov ficompl clc ret fcomps scas mov jno xor adc jae leave sbb fiadd sub mov adc mov jecxz dec mov clc int3 and sub jle xchg sub and xchg mov inc and push fistl out leave xchg call int3 cmp scas in sub xchg scas sbb and clc data16 and dec (bad) jbe cltd sarb sbbl popf jb test mov das les sub inc lcall cmp ret sbb ret (bad) mov sbb dec adc mov popf jp imul adc adc jecxz sti mov cmp repnz stos jns xor cs mov xchg add push and inc test jbe inc jbe dec mov hlt pop fs scas aam pop lods test mov call (bad) rorl ret push sahf test inc pushf imul inc push (bad) loopne mov jge lret shr inc mov xor fwait js add jmp fstpl xchg bound jecxz je out jge int push push pop mov push out cmpsb or or push popl mov (bad) dec lods push jb les sahf xchg xor add cltd mov pop call jp and stos push cmc ret sarl sbb in jle push addr16 loop dec in fstps push cmp fdivrp inc mov pop push or sbb pop jecxz out lret push pop mov es clc (bad) rcr xchg mov insb outsl and int insb mov arpl jmp test mov fcmovbe repz std jae or ss lock stos (bad) xchg in jbe lods loope shll mov mov aas or insl lahf jns jns push dec iret xchg mov sbb jno cld adc mov les sub jp aaa pusha sbb (bad) test ret inc mov daa jle cmp data16 mov je sub jno add inc fstpl leave (bad) loopne xor mov pop in mov ss ds xor pop bound push mov repz mov aaa notl jae nop inc adcb fisub out mov mov and leave fcoms xchg cli push or xor mov dec loop jl pop fisubrl cmpsl arpl xchg fstl aam int3 fs adc cwtl je add xor xor push mov (bad) mov cmp sbb inc xchg imul push into mov add sbb dec pop jnp mov jae jmp shll mov cmc adc jne fistpl daa cltd gs cmpsl pop scas xchg add movsl mov test push dec cld out lret loopne nop (bad) into or sahf lret pop add divps cmp (bad) iret lahf sub mov jp js jecxz aas push jns movsb jl mov inc add jnp xor xchg scas aam xchg gs mov incl enter pop les adc lret pusha dec popa (bad) lret dec dec push inc adc andb aaa and cmpsb pop out cld adc xor push mov cmp shrl stos sub leave clc jg add shll (bad) lcall adc clc or (bad) enter test inc addr16 sbb int3 sbb pop adc pop push or insl in lahf int3 dec test fistl loop sub adc (bad) outsb clc push mov in pop sub dec hlt jg cmp dec jne xor adc pop sbb (bad) mov js dec adc int3 jbe pop cs loopne xchg xchg mov icebp sbb (bad) mov hlt fcmovnbe sbb dec pop mov insl je std pop je into outsl clc mov pop je inc mov and sbb js push enter xchg sub addr16 jl imul adc mov ret adc lret dec fsubrp mov jmp dec mov xor es adc xlat (bad) cmc cmp outsl dec int3 (bad) adc rcrl movsb incl push in mov sahf mov ret and mov mov fsubr out dec int3 dec sub mov nop imul ja lret and jge mov sub jecxz cmp mov xchg push and jbe and and daa xchg mov lahf jg je out fwait test sub je loopne sub arpl call cmp aaa leave enter gs pusha dec mov mov rclb cmp xchg mov add enter mov (bad) (bad) lret adc call lds sub ret scas or inc mov mov adc add mov psubq ss call aaa (bad) repnz out pop add jnp hlt cmp rorb mov xchg or in mov (bad) mov adc add test fistl ljmp dec dec loopne or and rclb xor sbb insl ss and cmp clc ficomp lret arpl or js xlat inc xor ret sbb cmpsb pop mov iret push push xor (bad) and jp aad xchg inc ror inc test cmp lret push js xchg stos and pop stos fisubl cs call or sbb pop sti pop push or add add pop (bad) jl lea adc sub int fdivl cltd dec popf inc mov movsl sbb dec jo call mov adc lock xchg call popf das sahf enter inc sub rcrl push mov lods pop cmc push push cmc mov jno cltd (bad) inc jle inc (bad) push mov xor mov and pop pop xchg jmp pop (bad) sbb (bad) ja hlt sub jl (bad) jg sti in scas call das sub xor inc add mov push rorb push (bad) aaa sub sub mov dec pop movsb or cmpsl (bad) mov movsb push ss shrb ret lcall test icebp aaa mov lret cltd xor arpl push (bad) fwait push lods ds aam push call mov stos jbe aad test and jg inc mov (bad) inc push loope mov mov adc push xor popa clc mov and push jge test sbb sar notb mov mov xchg (bad) mov adc jge arpl xchg push cli arpl (bad) lahf jne cmp mov (bad) sbb imul dec adc sub fisubrl pop jbe rcl iret mov dec test enter ljmp sti repz mov out sub and leave test cmp mov jle pop lret mov test pushf push mov jmp dec (bad) outsl in adc lret lahf dec jecxz xor pop icebp mov pop push loope int3 sub (bad) les inc fildl ljmp pop in (bad) data16 ret das fnstsw movsb lods or test loope fs push xor jne enter das mov push lods fwait lods cmc mov faddl adc pop xchg inc adc icebp cmp and cmpsb cmc xchg daa fbstp sbb cs int3 dec dec aad test push outsl inc das sahf mov bound insb fs fcmovnb xchg cltd dec xor idivb scas addr16 push jl,pn push (bad) fldcw cmpsl dec lock rclb clc call xor mov or dec pop (bad) dec (bad) mov pop insl mov test cs fstpt jns setb jp orb (bad) sub ja,pn jl lret push ror loope jle mov or jns jo movsb cs pop sub fisubrl clc aas icebp xchg mov sahf mov (bad) in dec rcrl sbb dec ss jns movsl je (bad) mov imul adc dec xchg fwait xchg idivl dec (bad) cs bound mov jl sarb in outsb scas arpl inc jb outsb mov or inc cmp lcall xlat orb add ljmp (bad) cli fs iret add out jp push popf add cmp xor js,pn lds jno jl test and aam inc aam or aad in movsl fwait mov outsl sbb pop push add adc and incl (bad) xor xor push and push push adc push popa adcb cmp xor jbe insl stc jmp xor test (bad) inc jle xchg (bad) mov (bad) scas mov rclb sub (bad) or pop xchg adc jmp mov cmp (bad) stc xor sub mov out clc cld push cli and xchg add (bad) pusha jl int3 dec test push aaa stos push cmc fisubr xor push add jno,pn repnz push dec cmp jl or mov cmp mov xchg mov push test ja mov aam mov (bad) jne and add popf popf ficomp fistpl push push add (bad) and out popa ja add pop push dec mov lret je push iret push (bad) sbb popf jbe aam mov int3 sbb daa xchg and out or dec push ljmp mov dec repz fimull dec dec mov adc push aad out jbe sub ror setl stos clc inc pop push jecxz fs out aas add ret lea adc inc in dec movsb aas and dec cmp lods push sbb test outsb sub js xlat fsubl sbb lods mov mov popf mov int3 ds cmp ror push dec mov sbb xor mov jo xlat mov and mov rcrb inc push jp mov sbbb push mov sbb (bad) lret mov outsl sbb sub rolb movsl xor add inc rorb pop sub xchg mov jne cmpl cmp popf (bad) xor xchg (bad) mov loopne dec jecxz test dec dec jne cs hlt and cs jbe mov out inc inc cli mov push imul cli sbb pop dec orl add jl mov push push inc js lds fldl and pop xchg sub ja aaa (bad) lock xchg mov cmp and pop clc fs sbb popf or rorl add cmp or daa xchg and pop jns lcall hlt ljmp bound out cmc mov dec mov jnp mov std sub pop imul mov mov or pop rcr mov arpl push fucom mov gs int fadds xlat daa and je stos xchg lods pop sub xchg lock out inc div int3 stc mov xor out cltd push test cwtl and pusha pusha lcall andl mov xchg test add xchg mov pop icebp cwtl div xor fidivrl add ss les mov inc sbb aad stos (bad) pop pop testl (bad) popw mov out mov lcall test je xor (bad) inc stos addl mov fisttpl gs mov mov movsb mov xchg jp cmc push loop xchg or mov inc je mov or stos in jb mov push fmull lahf testl sub fsubs insl push pop (bad) mov push fild es fwait and fdivs notl add mov mov and aas imul sbb dec icebp popf decl daa test idivl int3 fsubs pushf mov xor lds dec push into clc jle dec xchg dec push cs loope jp bound jne sbb fsubrs clc fstl hlt outsl sub dec pushf fcmovnbe jb jl push fcmovbe mov mov inc inc xchg lods mov mov xor mov pop dec fisubrl stos pop out and fstpt aad mov add pop (bad) out jne xchg popa adc mov fstpl jg sub adc test mov pop xor push imul cltd ds test loop jmp loope mov (bad) sti pusha jle imul stos aad scas aad rcrl or xchg jmp fldenv loop icebp adc pop rcl pop xchg xor mov push dec jb mov lods mov or addl xor idivl cmp lea adc jb cltd wrmsr and sti bound mov (bad) in aam test cwtl and jae loop shll scas into repz sahf sbb mov sti mov xchg icebp pushf fisub aam or lret inc cli lods mov push lods jl sub bound lea and (bad) or sub sub and setle popf mov arpl mov cmp repnz insl adc (bad) mov mov push add and arpl out pop lods cmpb (bad) or cmp leave push in sbb test adc sub inc pop or jne pop mov ret sbb cmove js push bound ja adc rclb jmp movb mov into inc mov pop or dec (bad) dec fildll sar sub out insl mov jne test gs inc mov aam jp mov pop popf dec add xor jbe loop xchg and fisttpll (bad) xor fwait inc sub mov (bad) and xchg and mov stc scas cmp loop lahf cmpsb add insb pop inc jge inc aaa in out lock int3 imul pop jnp mov jae dec jge sti xchg test out mov shr enter movsl popa or fistpl push push int3 add popa in add mov ss mov (bad) or mov cmp xchg mov les (bad) adc dec ret sarl xor icebp cwtl lahf dec and jp insb dec jns int3 aam movaps xchg mov sbb aad std shlb pop pop xchg lea addr16 lods cmp cmp idivl pop aaa outsl and mov mov add shr jns fsubs imul mov movd popf push xor pop std jnp add popf adc in push adc dec ss imul clc push push mov into fucomi bound aas xor fdiv insl push popa lret popa outsl loop add mov xor jns ficoml ret fisub mov mov jmp add cmp mov sub leave dec jge cmp addr16 (bad) lret movsl insb add test xor inc out popa dec rcr movsb repz jle out adc xlat push and ret sub push add inc aaa inc fsubrl mov sub pop jo sub pop xor or mov out loop dec xchg add test rorb rclb push out aas outsb int3 mov or jmp out cld mov xor je fisubl mov dec jl ficom push sbb cmp enter test mov add push negl xchg push and mul xchg cmp out loope pushf inc push mov sbbl out inc gs pusha outsl adc dec add push (bad) sbb sub dec and jecxz popa push call les xchg mov inc out lods rol cmpsb (bad) sbb iret addr16 call jp popa jecxz iret cltd inc sbb mov out pop push xchg test sub xor icebp cmc mov cmp popa jmp out (bad) adc xchg cmp push and jmp add test (bad) and xchg sub jno mov mov push aad outsl paddusw repnz jp sub dec jmp in insl adc pushf xchg js dec add cld sahf xor (bad) iret inc jno jns (bad) xor stos mov ljmp jle cmp mov pop aad fsubrl or inc cmp fldt push int3 enter popf add leave gs sub call xchg pop and mov jno inc cmpsl xchg sub push mov cmpsb mov pop adc inc (bad) jb pop jns jl xchg mov rcll xchg bnd sub into xorl mov sbb orl add call and test mov int sub xor adc (bad) into sbb and fistl adc jbe lea daa nop pop push insb loop pop mov testl cmpsl test das shl push inc les fxch mov mov and ljmp into lock (bad) fidivr sbb fild (bad) xchg jae enter mov xchg cli mov xor xor das pop push and mov mov (bad) jl ficoml outsb loopne stos ficom and imul insb inc rorb lea add mov imul data16 cmpsb mov sub jg xor lret enter and subl scas mov inc sbb adc test scas out inc addr16 (bad) jl cli iret jp cld adc push pop insl into orb (bad) push pop sti fnop repz pushf mov lock dec pusha mov and arpl adc and and mov outsb out mov imul (bad) and es push sbb dec inc adc dec cmp or add push cmpsl mov cmc xchg mov add add add push push clc (bad) cmc push cltd cltd and add pop andl fs fistpll or pushl jbe rclb sub test add mov add syscall mov (bad) sbb mov push int3 les std cmc or jl pushf push dec dec push push jge insb xlat insl xchg xchg xor mov je clc pop cli arpl es mov mov push jl out pop cmc push movsl outsl ficompl bound (bad) ja mov cli sbb mov (bad) mov adc test jne push cmp or leave clc inc jecxz je movsb insb xchg mov ss jmp leave jp xor or fwait sbb rol sub inc pop inc leave xor xchg pop and jl sbb xchg adc aad mov psubusw xor sub hlt cmp outsl pusha jns cmp pop lcall push mov icebp or pop xchg cmp (bad) call ljmp or jmp inc xor mov fdivrl clc ss cmpl fbld fidivr mov adc (bad) loope or mov mov cwtl pushf pop add mulb cli xchg rorl ja dec mov loop pop bound loope pusha sar adc cmp lods pop sti push sub or cld pop inc pop cmpsl in lock fadds sub paddusw arpl push mov stos mov and dec data16 clc add add sub add int3 stc loope in add ljmp xchg lds sbb add test sub pop mov rclb cmp mov xchg and lahf cwtl sub lahf or jno xor lods mov mov rolb add cli (bad) mov out insb xchg fwait pop xchg cmp adc leave inc push aas jge sbb jge jne (bad) lock fimull push cli push (bad) pop sub push mov lret xlat jmp aad repnz jp rol mov scas imul fdiv popa cmpsl lods jmp outsb in aad pop inc js inc push out enter add in addr16 xor jmp inc out jmp xchg xchg cli xchg mov jmp add popf jne push pop or pop pushf sub in je mov dec pop mov and sti jns lds mov push lcall fidivl mov fwait js push and inc adc aam sub mov lea jb ds adc sti sbb je cmp mov jns,pn pop sbb (bad) repz push pop xor in dec aas cmp push push cmp lea jne cmp or rcrl arpl aas lock or cmpsb jle sub inc sbb add push out stos in movsb cli xchg ja cmpsb inc aas outsb mov xor and pop xchg jmp dec jno xor movsb aam mov ljmp scas cli std rcrb sbb sbb nopl scas into push lods jp imul (bad) (bad) cld cmc pop sub imulb sub pop push inc lret arpl add imul je sti popf mov jmp and pop iret mov jno (bad) adc dec dec out and hlt es ds pop inc sbb sti mov xor xchg push loopne dec cltd jae sbb insb shr mov out adc rcrb cmpsl in add (bad) icebp adc mov cwtl pop gs (bad) add mov test xor sar add inc or and pop leave jge mov dec fstpt xor dec sub outsl (bad) jb pop cmp mov add mov push je lcall cmp mov iret inc enter lcall leave (bad) les xor adcl or ljmp cmp or mov push mov cli push (bad) ss shrb or in int iret mov loop push divl jmp pop sti push cld inc andl push fildll daa test mov int3 add pop je sbb (bad) into pop cwtl je jge and mov (bad) pop bound loopne cs andl mov test mov xor jle push out inc lahf test xor cmpsb ja loopne mov push rcrb push lahf mov ss sub test xor mov stos insl inc rorb cmp add rclb not and daa out call imul (bad) pcmpeqw ja lret adc scas push cltd insb (bad) or xor pop repz mov sub mov mov call clc in dec push in inc loop (bad) and cmpsb xchg scas xor xor pushf pop or loope xchg test in push push mov or adc pop pop into push out inc push aas fisubl sahf fcom inc xor lcall push lods and xor rcll cmp mov icebp pop push data16 sbb clc test and dec sbb pop cmp ret xchg xor pop cli push mov stc sbb ret xor es fisubrl cmc in ds in jnp sbb jecxz or mov inc mov dec call and sti cli mov test stos inc dec addr16 loop push add or mov pop (bad) jl mov movsb sbb data16 movsb cmpsb pop lret pop dec imul dec xor mov sbb int3 mov add cwtl data16 sbb xchg mov add pushf sub test ret stos pop and sub push mov and movsl cli lret inc adc dec testb xorl adc out xchg les enter mov arpl mov test sbb fidivrl and pop or inc std es lea js movsb sub (bad) cmpsb aam (bad) mov leave es dec push inc and sbb pop or jge out sti cwtl sub jns mov movsl xor fcomps (bad) add add pop pop xor sbb jbe sub ja into sbb or dec jbe jl cmp sbb jecxz cmp sbb inc addl pop aaa sbb loopne mov ds sbb bound hlt add pop push scas fsubrl (bad) xor std pop mov mov sbb pop pop out pushf jg inc pop or outsl xchg cmpl ror dec xchg inc pushf push fs andl inc pop les lods imul aam pop (bad) or ret cltd mov inc (bad) mov (bad) ljmp enter jnp out stos mov sti ror in daa add push daa (bad) sbb das fsts adc and cltd std and sbb ja cmp cmp and (bad) les decb push sbb clc loop add push dec push jo add and andl pop jae fs push push and scas sti push cmp fldt jmp mov ror or insb test pop stos push xchg mov jle mov loopne dec stc stos jmp stos push ret xchg mov lock lods push out mov mov push std (bad) sub cli aam mov aam sub and adc adc lcall sub rcl hlt inc pushl jne sbb or cs adc lock mov push (bad) cmpsb test xchg int3 (bad) dec push loope xor clc mov jnp lods inc data16 or mov fimull mov add rorb mov movsb push mov pop (bad) shl push mov mov mov movsb das xchg xchg xor ja mov pushf popf je and add sub shl mov sahf imul mov cwtl xchg std push aaa pop inc xorb push jne xor sub inc add push xchg imul lcall mov mov dec pop jae enter lea lcall lret incb decb loop push (bad) mov push dec fnsave repz imul test add loopne and add orl inc outsb ss test stos cltd mov jle (bad) jle mov lret scas or inc add popa push dec cmp outsb mov mov xor dec xor daa pushf push xchg adc xor (bad) lock sbb inc mov or add insl mov pop cmp ss iret mov ja ret pop mov inc shrb jl cmpsb fdivs iret dec mov aas and outsb (bad) lock push in or add imul or mov andl aaa xor pop and sub mov sahf out lahf xor inc and push inc jge ljmp mov sub aam cmp dec xchg mov bound sbb idivl mov mov lods pop mov mov add mov daa movsl loopne sub ljmp aam iret cmp daa mov adc cmp mov mov outsl push mov test enter fisubr stos test sbb mov adc rcll cwtl in xchg adc xchg dec mov sub mov arpl jno sub lock in jae sbb dec dec sti fildl add cmp lgs dec cmp adc mov mov jno lock xor mov out or cmp sarb pop fcoml rcll pop xchg jecxz xchg lcall xlat xor mov jg cmpsb cmc pop into jo or jmp cli jnp pop test setg les mov jg test popf inc lahf sbb mov inc (bad) inc stos add int3 imul les push push pop lea arpl mov mov (bad) into xchg mov add xchg rep or inc daa shrb sbbl mov pop add cltd in cmc push mov jb mov adc adc scas daa xor scas test inc out popa mov enter push push sub add jb xlat (bad) xor dec negb mov xchg inc cwtl xor pushf imul clc out aam out shrl push push push mov jns lret jns mov push cmp cmp or mov xchg outsb loopne stos movsb ret (bad) (bad) lods test ror lcall fld cmp out cmp das inc or sbb xchg icebp mov sahf push movsb adc add jl jae mov lcall adc jns push sbb mov xor int3 sub mov or js adc scas fild sbb jo test js out mov dec test call xchg dec mov cld addl imul jne add pop push fadds sub cmp push rcrl lock cmpsb sbb push xchg in sbbl (bad) lret dec cmp mov mov leave jns iret out xor mov mov aad xchg hlt pop lods popf pop xchg and inc lret inc lret lock mov insb mov xchg popa push inc imul cld dec sbb rorl sbb ss cmp (bad) shrb dec test jb in loop mov inc mov xor xor sub and sub cli imul repnz sub outsb rolb jo fldt jg repnz pop sub in cmp add iret mov sbb jmp xchg dec mov cwtl sub movsb push sarb jl (bad) call mov xchg in mov sub ds out test mov cmp out sub inc movsb xchg outsl int ja push icebp and (bad) jne pop inc (bad) les dec je mov sub sahf jg jo fnstenv stos js add mov mov in aas fdivrs enter (bad) xchg or popf adc imul mov cltd fstps stos pop mov or adc xor (bad) cmp add rorl mov in cmp mov mov iret movl daa mov ljmp insl subl push pop loop (bad) out adc push push in push xchg sub in out dec jne and mov jp jae fmull ja mov mov mov lods dec out and lcall ja xor push (bad) out subl ret jecxz in cmp sbb jo mov push rclb hlt jp xchg mov addl xor adc jb daa hlt sahf test daa adc (bad) inc ficom loop or mov test in jmp sub ljmp out fistpll mov dec sbb lods mov mov es arpl dec mov fistp lcall inc aas es inc fistp or xor imul inc dec pop imul ds cmp repz adc fwait pop ds inc cmc sbb aaa in sbb out xchg mov sub add xchg fs mov nop lods orl in cmc scas aad imul cmp or add cli pop sbb sbb rclb jne mov cld lods fsub mov push sub daa nop scas sub pop mov pop jbe rep push lret xchg xor in faddp lcall sub push jl jmp stos stc movsl sbb xchg jae fldenv fsubrs and xor in cmp (bad) adc popf push xchg adc aad push outsb xchg repnz pusha push fsin and cmp mov mov mov and pop (bad) icebp mov sbb add xchg pop mov add mov sbb stc push mov movsb rorl lods aaa pop fdiv out mov sub aam push loop jge cmp pop cmp les lods mov dec mov adc pusha icebp movsb ret xchg lret hlt push test inc pop out and rorb int push fdiv cmp imul idivb pop adc add (bad) pop cmp js ret test lods clc les (bad) test rcll das xchg push cli cmpsb test lds insb jp and outsb icebp insb imul loopne loop outsb pop stos mov fisttp adc push int3 loope adc icebp es inc pop in adc cmpsl leave movsl or cmpsl daa dec or inc xchg lock rcl or jl ret inc push xchg jecxz push aam (bad) xlat adc dec sub movsl (bad) add cmp pop inc xchg rclb rol sub xor or xor mov ss (bad) xlat inc loop pusha mov ret push push test notl cmp mov sbb (bad) mov push fisttpl imul pop mov jno ss mov ja jecxz cmp (bad) adc jb or push icebp jge mov mov outsb pop and xchg or jp cmp mov loopne ja insl adc xor push mov stos jge cmpsl movq loopne lret push sbb stos xchg jns imul fmuls sbb arpl and mov cmpsb mov repnz ds leave fwait rcrl ret scas pop mov jle jae shlb mov or mov (bad) pusha lea iret mov pop pop hlt mov aas xchg fwait loope xchg aam mov and arpl lea fcom jmp pop ja push and xchg mov ret adc loope das jb inc dec cmp nop ljmp fiaddl jmp fcoml dec push (bad) fwait xor in mov test shr daa inc pusha into sbb icebp jge mov arpl pop push lret inc ret lds mov addl jne mov (bad) mov mov call push or leave cmp lret mov les dec mov mov bound mov aam aas push sbb xor dec pop dec xor ss inc cwtl into fdivl (bad) scas mov mov mov dec adc push scas popf aaa and cli test mov pop push xor lea imul sub xlat stc mov mov and xchg jae int3 mov loopne daa or mov jo daa fnstcw and xor addr16 add test or aaa push lcall mov es cmp push (bad) iret and inc fiaddl sahf sub mov cmpsl jo dec inc in mov (bad) mov scas das dec cltd addr16 add xchg stc push es mov repz repnz idivb pop int cmp pop mov in sarb inc fs inc xor ja push test outsb sahf fwait xor add jnp shl js and push xchg mov sub mov jb jle cld mov rolb jle jge (bad) mov lods jmp sub xchg pop out insl push loope ss test adcl lods inc mov adc rolb xor lods jae call pusha xchg pusha xchg adc jno or std outsl jno out aas int hlt lret sbb lods mov sti pop out test xchg inc jecxz adc pop (bad) cld xorl pop push int3 pop xchg pop and push and inc stc aaa jns ljmp mov out mov lahf mov or push mov push outsb mov push add push dec das or shrl inc pusha sub mov std hlt mov je mov shll adc stos je xchg mov sub je mov rcr fsubr jge sahf inc xchg inc gs push mov mov ss dec or dec sbb mov push push ret mov data16 sbb mov das mov inc mov cltd adc popf aam (bad) in push dec xchg shlb xchg addr16 cmp in cmp jle add repz dec sbb jns push das inc lret jbe or js call push mov test cltd cltd dec dec pop pop sub xor rcr hlt sub or pop imul es push jnp and mov pop jae outsb ja (bad) push lret push iret push call fisubl loope mov aad jae (bad) out shrb (bad) xchg ret cli mov sbb add (bad) xor popa test mov mov cmpsb mov fs out jge sub pop sub dec or std addl dec int inc jbe loopne mov pop mov mov inc stos orl lret mov xor mov call loopne cmp add loopne fdivrs (bad) cmp enter pop (bad) stos jnp aaa inc aas std sub outsl pop push scas jle add dec xchg jne out push mov imul je stc jne js inc ret push add test pop and outsl fistpl std (bad) xlat imul loopne and loope inc jae cld stos cli lds adc inc pop (bad) mov adc stc ds inc xor lcall inc mov in mov add mov (bad) out sbb mov into jne push setg jge ljmp mov push imul inc out adc ret test out pop (bad) jns xchg add inc mov icebp call out push fdivr (bad) jae and mov sub and jle fnstsw stos cmpl sahf outsb xchg leave add loope clc xchg pop aas cmp xchg pop mov lahf lea adc sub cmp cmp imul mov movsl into insb hlt push xchg fs pop mov jge mov iret enter sbb xor out rclb add (bad) jne sbb dec mov jmp aaa push incl mov and sbb mov xor in dec adc push pop dec jno jb fdivl nop push dec lods shrl push aaa jp adc cmp jne incb out pushf mov mov inc mov or clc and cmp inc aaa and repnz pop (bad) stc cmp cmpsl mulb push nop mov mov xchg fmuls pop int pop sub pushf mov fs pmaddwd fldt repnz lret aas scas fcmovnbe xchg in (bad) mov add jle jge sbb int3 pop mov mov imul cmc jno repnz pop mov sub fsts push adc pop imul sahf call nop fisubl mov mov ret mov lds test adc pop scas bound push mov dec mov std xor xchg test sbb jg test into (bad) insl cli out sbb add sub dec fidivr sbb push cmp add das nop (bad) mov (bad) jge roll xor ss mov movsb in outsl jp cmovnp sub inc mov hlt les xor xor push and dec out dec and adc mov inc fisttpll sbb sbb das andb fsubrl xchg mov jmp add cld cli mov imul or cli xchg (bad) lds fildll dec imul loope push and mov ror into iret cld mov pop andl jo repnz jae into sub mov fwait aas lret mov mov push mov iret fsubrl and insl bound lock lret cmpsl cmp mov sbb sbb rclb hlt sbb xchg in scas lret lcall xchg mov mov data16 add insl pop test in add cmp inc leave test fmul xchg jo dec in sub inc outsb mov ret sub sahf sub ljmp sbb sbb mov repz loope test pusha adc jmpw aas orb add xor xchg mov sbb xchg or pop or jg in mulb push repz repz aas xchg and push mov xor mov outsl sub mov fmul ja mov sbb sbb les ret arpl pop iret fdivrl push jae repnz test or cmp dec add push enter mov imul mov add cwtl stos cltd movsb and or sti or jg jp in lods out add xchg inc cmp notl (bad) jp fstl adc xor and push mov inc inc outsl and xchg mov and jle xchg xor sbb js mov sbb add sbb or cltd add es mov daa xchg out fwait xchg repnz cmp pop lods and jne lret lods movsl jae push pop mov pop sbb lock addb lahf fisubr and iret and das cmpsl dec cwtl lods test jae adc aas (bad) aad mov sbb mov add pop and lea inc scas sbb push fcomip stos adc mov arpl sarb je ja out rclb icebp repnz mov xchg shr cmpsl push pop dec fwait insb jnp jg mov mov push push (bad) or mov in sbb repz adc or enter js lcall scas jge sti mov idivb fiaddl mov and sub ds aad js (bad) inc ss sub rcrb pop xchg mov xchg xchg fldenv inc bound push sbb gs testl push roll xchg cmp std test mov lock jae cltd push sbb jg sub fisttpll cmp xchg inc ja push pushf (bad) int3 jmp (bad) stc xchg mov pop sysexit cli pop xchg rcll dec (bad) mov fmul adc pop pop in fsubrs lods and repz xor jecxz in negb sub pop aas pmulhuw cmp pop repnz lods sti sub mov xor dec push in pop lods cmp subl xchg push and push pop and xchg mov js fnstcw push inc ret scas aad jge (bad) dec (bad) xor mov sub stos pop shll jecxz mov mov lods mov stos enter jp (bad) scas jl inc dec mov inc lock lods jmp repnz jp sahf mov es cmp mov jnp call or sti dec or imul adc xchg out or cltd shrb imulb pop sub xchg pop sbb inc mov sahf dec test xlat cltd ret jb insb ret in and aas (bad) or cld xchg inc iret mov mov movsl jne sbb inc loope nop sbb and (bad) and stos pop xchg aaa outsl inc or imul pop stos sub hlt cmc fcmovnbe cmp sbb int cmp xorl pop dec mov mov shl pop ficoml dec xor and in loope inc jge outsb xor in cmpsb mov mov inc jge and and fs and adc dec pop mov popf iretw mov mov or inc fild fbstp dec fistpll movsb fstpl cmp mov inc push xacquire sub (bad) adc imul jmp pop push clc push ljmp aad xor pushf sbb inc dec aam xchg xchg jae pop mov loope aad outsl ja ret jns test leave adc or cmp and scas sub je jge xchg jb enter stos xchg cwtl fisttpl mov cmp jg push stos or negb cli pop xchg je ja push dec insl xor ficom rorb lods mov xchg test xchg aas jae xlat cmp or sub aaa push xor lock ret js jne aaa xchg jb push jle cld xor push or rcll and pop cmp js push cwtl xchg mov jb rcrl cli mov fidiv sbb movsl mov add movsb (bad) push (bad) popf or cld pop minps and popa cmp xor stos jl ror outsl test push sub in xlat out or sbbl scas clc cs inc xor fsubrl repnz pushf jb stos imul mov mov fs clc popa (bad) loopne nopl cmp test inc (bad) and sarb mov xchg sub ja adc pop test sub in cmp ja jp xor push jge in jo repnz add push imul fstpt sar ss or mov cmp enter mov xlat add sub jns insl add jg cltd pop cmc mov repnz pop movsl repz jl int3 fistpll mov mov inc xchg jmp aas pop mov dec test mov (bad) mov es fstpl enter test je cmp pop xchg icebp mov mov mov (bad) je mov mov vpunpcklqdq loop popa adc (bad) das ljmp loopne jae sahf (bad) in cs mov mov sub out cli pop mov ds push sub jmp or dec loop and push add or push into data16 xor cmpsl rclb dec add mov xchg push repz cmp rorb sbb mov sbb dec jb insb or scas sub adc bound push or lods lods stc adc cmpsb mov loopne sbbb jae je or imul xorl mov sub pop and xchg fwait cmp orl mov rorb mov je pop lret bound idivl loope push cmp and jl jae add add xchg aaa sub popf cwtl pop dec orl mov mov test iret xchg aaa jnp in in loopne xor popa sbb stc decl add out movsb rolb in xor sub xchg jecxz fdivl mov xchg pop les xchg sub pusha push push mov jmp cmc lret insb mov or int popa das mov jcxz pop dec aad sub xor sub pop lcall lds loopne popf and fisttp and clc cmp mov jecxz mov into call call pop rclb aad shll ja les push or lock loop and sub dec mov pop adcl pop and lret mov inc lea push cmc lret cli push or push int pop cmp lahf inc movsl decb fdivs repnz out shrl mov or (bad) arpl lret xor add stos pop mov sahf push fs inc mov mov lods ret das jmp ret push xchg mov cmp inc cli and push and lret mov push (bad) xor in (bad) xor je mov jl movsb in push inc pop mov imul push cli xchg aaa cli fistpll cld pop and or xor in mov out cltd imul xor pop sub lret pop inc push fnstsw jno and sarb xlat std xor inc jle and dec push je nop or xor pop mov (bad) adc push xchg arpl pop out test cmp and sbb sub jg test inc (bad) xor test aam (bad) rcrb dec fcoms fbld sbb xor iret andb cmp push mov xor repz jmp (bad) in push mov pop inc jmp xor sbb (bad) mov icebp mov and test mov (bad) int jns jb dec (bad) js fcoml lds mov xchg jno mov (bad) ljmp push xchg pop sbb (bad) mov xor mov pop sub std cmp pop test ficom sti rep sub sub cmpsb add out loope in rorl iret push out lods lea clc push stos and in (bad) push cmp lahf arpl sub pop imul pop sahf ljmp test hlt lcall pop es cmc jmp negb loop aas mov (bad) cltd test outsb insl inc test and cmp lods push mov lcall (bad) mov jae sbb and pop cmpsb jmp mov mov (bad) push test jns aad sub insl mov and std (bad) inc mov movsl lock xor iret fcmovne int dec iret ss dec (bad) jecxz push fmulp inc jecxz jge dec adc mov sbb jno mov std sub mov dec loope cmovne loopne fldl push dec mov mov xor fildl mov xor jae adc outsb sbb repnz dec dec or and and fwait popa and mov aam pop and sub or dec push pop pop stos pop (bad) pop mov pop loopne addr16 mulb or pop push mov insb (bad) mov push jmp outsb (bad) mov out inc enter imul loop popf cmp or xchg or ret xchg pop add sub sarb (bad) (bad) xor cli lock inc add adc aas mov ret stos rorb adc mov arpl cmp push (bad) adc push fwait sbb cmpsb stc add cmpsb das lret bound lods loopne ds adc jb mov les and dec aam nop popl jne mov loop or jle push push fstl or into push sti jle loopne fsts xlat jne test jne jmp int3 gs cmp mov push ja cmp jle dec xchg and icebp cmp loope sbb and stos xlat inc and push jbe pop sbb mov divb jge fwait hlt cmp push push icebp loope mov clc fnop enter add jbe jnp,pt jno adc lds inc loope mov xchg xchg pop lods push add cmp insb js xchg (bad) pop sbb sbb mov push push jmp test mov mov lds lea mov mov loope dec xor pop data16 add xor imul sbb js xchg icebp jno adc xor dec jno mov xor xor cli out adc or sahf push xor mov fadds fwait sarl movsb add cmp repz aas add imul mull push inc stc xor scas mov mov cmc adc in cld (bad) mov or mov sbb inc xor pop mov push in xor hlt sbb and or insl adc push test enter mov ja imul iret (bad) fildl fistl subl outsl insl xor mov xchg lods mov mov cli mov lock pop sub inc add inc dec pop in inc inc ds dec dec jp push lds lods out push repnz push xchg in je mov fsubs repnz addr16 fisttpl test ja mov popf pop popf mov mov orl aaa sbb mov mov shrb popa (bad) insb inc (bad) push aaa jg add mov push push loope pop dec dec jl and lods hlt mov in add inc jns sub push push xchg imul sarl pop fist call je out jp or cmpsl push int push shll or lods lcall shrl jne jg rcrb repnz xor push stc jp jnp iret cs inc mov jecxz cld lods out adc jo mov lret mov xor and mov mov xchg pop push fisubrl xchg int cmp jge dec add sub pop adc jmp mov (bad) pop stc out jo pop xchg and jmp adc xchg (bad) test ja sbb mov icebp jmp adc adc dec push xchg lret or out test cmp (bad) fsubrp and (bad) adc mov xor cltd aas mov in insb stc mov aaa cmp fldcw lds xchg xor pop xchg in add xor mov es repnz jle add cs push cli or repz inc mov fcmovu test sub call ja sbb leave and mov aam push bound xor sbb mov test movsl fs and in mov pop stos aas push das (bad) (bad) icebp cmc dec cwtl mov add outsl mov adc cmp inc fs adc aas movsb leave xor push push out outsb jns xlat jne jb,pn dec mov inc mov stc je or jnp sbb movsl test sbb xchg adc adc sahf cmp sarl mov push pop dec ret pop rcrb into out mov repz outsl and outsb lret inc jnp je (bad) cmp xor add cmp sbb cli inc lods add movsl sub pop or mov cmpsl xchg push sahf jmp adc stos sbb std dec push dec xchg je out test xor test cwtl ret adc xlat mov inc inc jnp and (bad) dec lock hlt add data16 mov mov push js pusha mov push and mov (bad) sti jae or and adc test xor adc ss xor lods hlt pop das cmpsl call cmp lret add insl jne daa jnp xor fdivrl mov jb xor pusha xchg pop mov sub lret shrb lret std mov sub aam test jo ss hlt dec lods jo add xor fstl and out lea into adc inc pop fisubr outsl enter mov and lods std ds loop repz sbb cmp inc xor loopne cmp mov ds sbbb lret adc stos mov pop ss cmp aad and jb cmp dec mov sbb push popl imul push ret lock test and push pop inc and push (bad) push imul mov mov mov test cmp mov lds test push in push stos pusha jae into cmp mov in popa cmp pusha pusha xor sbb mov push cmp mov xchg inc test outsb dec add repnz mov (bad) mov push daa (bad) repnz mov arpl cwtl std jno jl xchg dec out icebp mov pop fstpt shrb mov lret push inc imul xchg sbb add dec cmp pusha or les movsl fadd iret pop scas hlt adc dec cmc sub iret adc xchg xor orl push mov loopne jecxz xchg arpl xchg sbb pushf dec or jecxz sbb push in (bad) xchg dec add clc push jecxz fisttpll mov mov or xchg sbb imulb mov add or cmpl mov das cmp lds cmp sti daa adc lret xchg outsb fidivl add mov movsl xadd cs sbb jne insl jbe leave inc add or cmc xadd inc cmp pop pushf push cmc push mov test inc sub sbb sahf jne mov test mov addr16 sarb mov sub pop imul or sub pop sub or (bad) fwait or into mov xor adc mov ljmp outsb std hlt cmp mov dec pop xchg or and loop jmp adc (bad) bound mov xorb insb inc mov mov iret leave push jb (bad) (bad) ret push fisub je out dec mov mov fwait loope insl adc inc popw pop xor jne cmpl rcrb into imul jecxz adc pop add push or mov mov pop mov and mov imull cs je mov mov mov push push xor add add push out divb popf xor or popa xchg pop mov mov test sub dec jns (bad) (bad) stos aam pop jmp pop ret xchg add shrl std jns and int3 call mov xchg iret mov or fmuls popa sarl out mov std adc add push push dec add arpl inc adc sbb insb pop repnz lds into rol cltd push (bad) mov bound fimul adc xchg and shr lods sub int3 and (bad) fidivl pusha push mov sarb lods xor jb inc or and mov pop or in sbbl pop xchg fisttp iret add loope xor (bad) xor test fcompl fwait jg inc scas inc lds mov dec push push adc lds movsb mov sarl (bad) dec js ds sahf dec adc adc pop out jae (bad) mov arpl cltd (bad) jge mov stc sub mov adc into icebp int3 sub xor fidivrl and cwtl repnz mov cltd or jge pop xchg sti dec sbb dec or lds sub dec xchg aaa dec jnp imul sahf out jno ret add adc and (bad) xchg out ret bound pop cmp andl inc les (bad) sub gs negl inc int xchg jns sub and sub or scas mov cmpsb pop movsl mov push and cs (bad) inc ja and idiv add sbb cld cmp (bad) mov hlt mov lods int3 push push and lcall lods jmp sti mov push dec xchg push loope sub aas int3 popf or adc inc dec outsb push mov push sub push enter stos lret mov pop in js in mov (bad) jb inc enter jg jae (bad) inc cmp pop inc in out xor and repz xorb and xor jp rorl or xchg mov or lcall (bad) repnz ret fnstenv cwtl pop and imull lahf aaa sub mov daa xchg mov add cmpsb cmp popa fdivrs f2xm1 rorb movsl add test xor icebp mov push xchg mov mov inc sub mov fadd push mov push dec cli jae rcll (bad) cmc daa jl insl sub or (bad) dec push inc mov mov mov jnp inc push repz and sbb sub repnz sarb cmp jne (bad) (bad) adc mov ror xor jg loope dec push pop push pmaxsw mov repnz sar neg icebp sbb lock loope (bad) sbb dec xor jecxz xor mov jp test jmp or dec mov push lods inc stos mov imul cltd lods cmp (bad) or lea mulb push adc jle add xchg and or mov fadd imul push ss inc inc dec loope and dec push arpl pop push popf out scas push or sub dec mov (bad) lea dec cmp mov mov fs sti loope in call and add or cli mov push into inc and jecxz (bad) or dec xorb (bad) lods cmpb xchg and push mov out inc leave jmp push mov add jmp push pop mov cmpsb shrl dec and dec jge mov or call and rcrl out (bad) (bad) mov (bad) daa (bad) pusha jo push mov adc insl pop adc xor sbb hlt je hlt insb shr dec fildll mov ljmp clc sahf xor push jae (bad) sbb mov inc hlt jno daa cmp fnstsw clc out mov inc push or pop mov fcmovne in sbb scas fs imul push xor jbe or sbb or lock dec nopl pop adc cmp or popf and jae mov xchg jl pop cmc xchg jge,pt ljmp dec jo das inc or dec add int (bad) and jb jbe cwtl fldt aas negb jp mov icebp push fwait or (bad) lea test cmpsl jns mov sar cmp jecxz scas int shlb (bad) (bad) mov jmp jae repnz push cmc test jb test shlb lcall adc pop add mov jge mov dec arpl test sahf xlat mov push push idivb out movsb lret push das lea xchg scas jo call test sbb dec daa imul cmpsb dec or xchg repz mov inc sub sbb arpl fidivrl (bad) push mov ja and push pushf out dec iret xlat popf and insb pop mov addr16 popf mov mov out repnz aad cmp add add test ljmp push cmpsl and adc xchg test lea fbld lods arpl aam lahf flds shrl shrb stc mov out insl xchg pop loope cmp lret cmp xor ffreep add pop (bad) clc sbb jp pusha add adc fwait ret push jae stos fucomip fisttpll mov push push dec das sbb (bad) sub and sbb test and pop imul in cmp push jmp push nop sbb jg xchg mull push ds jbe mov and movsb xchg cmpsl pop xor fwait icebp push and xor jg je lahf mov int jb scas cmp in out jo inc in lods enter dec in cs mov dec loope cmp dec cs adc jne xor nop pop outsl push out enter cltd ret rcrl or cld mov add aas es and sub pop jmp mov pop nop in jb sbb mov nop jo jbe lahf mov (bad) enter loop mov jmp jecxz fcomip lods sbb mov mov lcall cmp ret int adc out adc aas sbb push mov mov mov xor mov mov pop mov xor sbb pop inc mov dec mov test sub cmp cld push add into ljmp mov ret xchg mov xchg ljmp int3 shr loope add in aaa sar xchg movsl gs pop gs test sbb push mov pop or (bad) mov and mov out cmp fistpl mov jbe out sub sarb sbb jle outsl pop les mov mov sahf xor enter daa cmp jle cmp pop add sahf adc sti and sub cld mov jge aam push leave test popf push dec pop cmpsb aaa mov lods mov scas inc lea push cmp and sbb lods fwait pusha stos (bad) cmp inc sub fmul xchg push hlt sub pop imul or fdivrl add inc hlt dec or push mov mov cs lahf or push adc inc sarb jle dec sbb mov in and inc mov iret jmp cmp ret jge insl inc push inc mov dec cmp mov outsb icebp fnstcw movsl mov (bad) cs dec aas dec inc cmpsb inc sbb push pop out mov mov in subl enter das inc clc cwtl (bad) cltd fldenv jno nop scas xor ficompl aad sbb push in test fidivl xchg idivl dec insb out push xchg xchg andb ds push rcrb fwait adc icebp loopne and cmp stos aaa icebp xchg je inc mov inc nop mulb imul sub (bad) pop data16 data16 mov xchg push add int test int xor pushf jnp outsb cld jecxz adc jne dec xor and or inc shrl (bad) ja lock push lea dec mov mov pusha jecxz test dec (bad) aas xchg insl mov pop (bad) inc je jns aad adc jl cs in inc pop (bad) int pop jmp mov adc push notb icebp jno (bad) jns stos sbbb xchg inc out jg js pop loop or scas (bad) icebp cmp sbbb jb add pop push scas scas xlat fldt or mov push pushf cltd push push mov fpatan inc jne xchg bound gs push jnp leave add sarb mov dec or mov idiv daa mov inc jo or cmp cmpb pop push mov sbb iret testl mov sub mov xor lock and mov mov mov dec es pop roll mov dec fistp sub leave incl aam jno daa jne aam lock mov test add push repnz xchg adc cmc dec push pop xchg dec or ret add add and outsl int push repnz notb mov (bad) (bad) iret stos pop xchg pop (bad) pop mov xor into pop sbb add and js push xor (bad) out cmp aam xor lcall fdivl and adc xor out ja mov negb add into (bad) dec mov add out push in ficoml mov push fcom jle sub push mov xor push rcrl mov lret adc jle jno pop dec iret fadds push imul xchg cmpsl fsubr push out adc (bad) (bad) (bad) fcompl dec lret inc loop cmp les hlt add xchg arpl add loop xchg push mov push sbb push pushfw xchg outsl xor mov in leave inc andl jp daa push and pop add int mov mov dec push sahf es (bad) and push mov pop adc jge test shl jns pop (bad) loopne into mov inc xor mov pushf insb cmc mov mov lret cmpsl loope jns xor pop (bad) ret jb sub test pop aam je (bad) dec rcrw inc sti xchg add dec pop push cld add mov scas cmpsb int3 or shll jg push mov mov shrl shll pop mov cmc stc ds sub mov push addr16 jp lods or mov pop outsl jns (bad) pusha cli subb call cmp fcmovne imulb pop sub add mov adc pop lds (bad) mov xchg mov sub daa dec je in fsub and je push dec rcll pushf sub aam push (bad) (bad) xchg add in bound daa ret lock jmp cmp mov adc dec out pop test xor cmp (bad) jp pop or js pop loop jge std xchg sahf sub adc mov lret (bad) loope push or or dec test add adc stos or cmp ja mov pop addr16 pop mov and add lds insb or cltd out jb pop call and fcos movaps mov adc in int3 cwtl xlat inc or data16 pop lret xlat hlt lret (bad) mov cld iret xchg pusha clc and int cmp push (bad) std insb lahf pushf enter jns pop xchg mov push outsb adc out jge loopne aaa into or and inc jp aaa inc data16 mov (bad) iret fistpll mov push cltd mov mov add push add in insb xchg mov lods jmp mov dec push pop sbb leave arpl cld jae push ret aaa xor dec cmp fcomp sub jns sbb into xor sub (bad) push sahf je dec xchg lahf push mov mov inc add mov xchg sbb mov and negb pop xor cwtl pop cmovle pop inc mov cmp ret xchg adc cmpsl sub fistpll mov push (bad) lahf ja lods cltd imul jmp js fisubr stos xchg imul pop ret push mov lods enter xor push mov (bad) ja sbb and jbe stc bound push repnz ret xorb nop imul mov lods ret fs aam (bad) roll push decb fwait or cmp pop cmp imul inc adc cwtl mov pop (bad) and xchg inc dec mov mov and cmpsb das xchg push dec pop loopne adc jno cmpsl xchg lock sub movsl outsl mov push or pop leave mov (bad) and sub push fcomi cmp xchg or xchg mov repnz fwait fwait (bad) xchg inc push adc push es jmp cmpsb mulb push push mov xchg lcall lret ret or inc test int3 ror cmpsb adc dec xchg rcrw lods push cmp loopne xchg pop (bad) sti (bad) mul cmp into sbb out (bad) (bad) in jnp rorl aas xchg and push sbb mov (bad) std sahf (bad) jl add pop push add imull and fwait xchg ss cmp pop cmpsl mov mov insl movsb shll int3 push jns out addb and adc rcl lock std fnstsw push dec rolb setl pop inc inc arpl insb adc xlat adc inc sti jbe rcr (bad) repz xchg sarl lcallw push add loop pushf mov mov mov push (bad) loop cmpsb pop lods push cwtl out push xchg xor imul vpcmpeqd xchg fidivrl inc jno test int3 lret sub cltd jle adcl lods orl popf movsl pop pushf idivl mov movd jge (bad) outsb mov shrl xchg sbb lds gs pop pushf ja xchg jmp test repz or adc icebp ret addr16 sbb aad add lods imul mov cs push cmp mov addl and cmpsb loop test cmp mov inc pop scas jmp mov dec sub jp fwait int3 ss inc push shrb sahf jae cwtl neg stc imul (bad) into iret cld mov pop mov mov pushf jl sbb sub inc lods notb mov jne or mov inc push sub in (bad) fdivl pop sbb int mov cmp sbb out jno dec push test mov xor or mov sub mov movsl fisub inc jo mov dec adc aas adc loop sti inc daa neg mov fwait out hlt xchg iret or orl add xor test dec mov push dec jge cmpsl sub aaa ret sarl fidivr jge sub pop jecxz fild fisubl rorb mov fidivrl push cld fdiv fstps or push imull pop push arpl fmulp popa fistl inc add cmpsb mov xchg je sahf jno jg sbb in inc cli popa js divb sbbl cli (bad) dec xchg xor dec lods cmp inc repz mov out inc xchg mov inc mov sahf inc push pop push dec jmp popw inc insb sbb stos aad add lods pop dec bound sbb pop push push jle mov daa cmp dec pop mov jle das jne fldl push test mov loop dec cmp inc aam out gs dec rclb inc (bad) mov pop (bad) outsb xchg dec dec das mov cmp rclb gs mov aad dec imul mov mov jl fsubs push cs pop jecxz (bad) ljmp (bad) xor aam loope sbb push or xchg ja pop stc adc mov test cltd pusha test cmp cwtl stc pop push push push std out sub lret push pop repnz lds or movsl test sbb push adc cwtl cmp cmpsl jp lds jns mov packssdw ss fstl addl inc fmul insb pop dec pop xchg mov cmp lea ja retw dec xor and (bad) xor enter inc cmp pop xchg in scas mov test push insb jp sub inc jle add xchg sbb sahf or jecxz les inc rcl in test mov mov add cmp xchg int3 gs mov inc cltd lcall sub push mov (bad) fistp mov dec repnz (bad) sub subl fcmovb dec jnp addr16 sahf pop loope pop xchg sub or fwait jle add pop pop mov xor cld add or lods lods push add sbb enter mov inc std and fs stos and jp inc mov mov mov pop in mov dec stos jg xor jle mov xlat sub sub mov fstp cmp hlt test arpl and or pop imul fmuls sub rcr mov cld sbb jno xchg push sub push mov mov xor adc xlat jle outsl sbb rclb pushl dec test sbb pop addr16 cwtl mov sub lods faddl mov cs jb push add xchg das or insb sub xor mov imul aad sub sar jo pop sub xchg xor scas jbe fwait lret ficomp pop push xchg sti cld lret and inc ja inc pop sbb jp cmp adc push pop test inc inc outsl xchg mov and (bad) lret jns or idivl xor or cld imul jmp xchg push sub sub mov test jae addr16 and mov fmul (bad) xor or sub (bad) dec mov push or push inc push xchg jo loop pop aaa sub cld xor (bad) cmp xchg cltd push in xlat fldcw mov aam (bad) sbb fildl cmpsl nop in xchg and mov cmp addr16 (bad) imul cmp pop mov roll or and mov sarl mov push jmp adc sub repnz and stc mov les push jo call es lahf jp jle pop cmp call push inc push dec adc xchg or xor xchg gs clc ja and jmp cmp and sub mov andb (bad) mov insl outsl mov hlt hlt pop push adc ss iret imul rcrb insb mov cmp xor push sub jne cmp rol push push adc jl mov xor mov push sti inc mov lcall dec insb xchg push loop out lea jae fcoml pop fwait jle das sub mov jnp enter ljmp adc sbb cwtl mov dec mov cmp divl (bad) in (bad) mov xchg clc dec xchg push gs popf xchg pop out pop sub mov jo pop mov fcomi xor clc sub push pop or fwait loop ficoml cmp fcompl cltd lods out pop push jo xchg cmpsl jne mov pop sub in out or les dec orb test fs insl into mov iret cmp jo mov (bad) (bad) std pop cld mov (bad) or rcrb mov mov test fldcw cwtl mov jg pusha aaa jo pop test push fidivr xor mov stos or out xor aas lahf lret xchg ljmp or hlt lds sarb stc add fistp icebp test outsb xchg jmp lret or xor cmp hlt pop mov in (bad) mov or subl cli insb (bad) sbb dec xchg pop jmp nop xchg inc in jge imul push test xor inc pop pushf cli fwait cmc cmp and sub in pop sub cmp sahf sub fiadd mov xor xchg and xchg leave pop jne mov push xchg (bad) (bad) lret arpl push jne push cmp sub lock jne cli roll ror (bad) mov sub sbb adc out xchg lret addr16 mov addr16 lcall lods xor div mov add aad out push pop out std sbb pop cmp (bad) (bad) mov jecxz mov (bad) clc fdivl inc push daa cmp ficompl cwtl lea gs xor push leave push lret jns add xchg mov sbb leave in cmp loop (bad) aas cmp jecxz (bad) mov xchg cmpsb add rcl enter movsl out add rcrl test imul mov lret mov jae cld sarl loopne lods xchg xor rorb sub (bad) xor pusha aaa (bad) (bad) mov xor add cs fwait jecxz mov rorl clc adc xchg inc push stc and add inc push and dec mov insb mov out insl mov and sbb inc inc scas mov rcl pop (bad) mov dec aad mov push cwtl test jmp cmp xor cvtps2pi (bad) mov in dec cmpl jbe pop mov jecxz (bad) mov inc (bad) mov pop push xor pushf push iret sbb lods fidivr jmp scas popa loopne daa sbb insl push gs sbb test arpl lods call icebp lods inc sub and andl cmpsl (bad) (bad) shrl inc dec test mov dec fwait mov xchg les and mov adc vmread xor and ds mov mov pop sti or mov xchg add popa cltd add fdivrp xchg pop (bad) (bad) loopne in xor rcll dec pushf jmp sub (bad) mov repnz sahf push imul (bad) xor int3 ror mov xor dec or dec mov in inc adc mov xlat aam lret dec jl movsl mov aad iret imul or xchg push or jg jmp pusha clc into and orb mov fwait xchg inc roll or sbb xor aas out mov out dec imul cmp add xchg mov sub mov jb sahf and mov fstl jle jb push aaa or loop xchg cmpsl arpl js xor call mov ja or imul sbb xor jl loopne xor and push fdivs cld arpl int3 in mov cmp push sbb bound adc test inc mov inc fldl2e andl aas mov sub pop data16 repz enter popa sub nop aam fs mov lods xor push xchg dec add cmpsl adc mov push mov mov imul pushf je mov mov cmp fld add out xorb cmc cmpsl mov or dec incb jmp lods inc jno (bad) (bad) (bad) push (bad) push cmp pop std bound in mov dec lcall lahf inc xlat dec inc mov sub aaa aas pop popa push sbb and sub cld xor hlt int int3 js test cmp pop out stos shll or jns sub pop cwtl shrb mov fwait pop add adc jecxz xchg (bad) lods mov or pop fdivl mov std jbe add in lcall push mov out inc jmp fdivs mov stos xor pop mov daa das insl jp push dec movsb fs xor enter mov xchg hlt xchg pop jns inc dec and pushw xor push iret adc sub and data16 mov jmp sbb mov cmp mov jg test lret xorb mov sub int outsb jo lods shll pop jg dec and mov mov cwtl (bad) lret fiaddl jg jae and and lcall icebp xor das repnz push jmp incl add sti sub mov sar dec sub sub lds into int lods pop in and xchg mov fimull fdivl int3 pop aam nop sub lahf push fcomps lea xchg cmpsl dec pop mov int3 loope push cmpsl adc jecxz sub sbb push mov stc andl pop and dec (bad) ja fldcw movl inc das fisttpl movsl mov std dec push inc jne fsubp test mov sbb push fdivrs dec jns ret and pop rorb dec outsb imul rcll push outsb test iret jbe and in push jo cltd pop stos ss ljmp adc or jne es xor (bad) dec mov les scas int nop cmp rorl fs lret int in aaa dec ja lds sub sub xor mov xchg negb cmp fdivs adc pop ds or and aaa dec jecxz or add leave mov pop inc dec add mov imul or ljmp xor pop pop dec mov jecxz imul or pop mov pop es mov int3 adc push popa inc cmp ficomp jnp push (bad) jae cwtl sbb (bad) xchg (bad) pop mov push lods sub stos inc ljmp fcoms fnstenv fcomip lahf jns sub add enter data16 pushf clc dec or arpl push adc xor in stos dec das mov insb pushf fild and push fadds (bad) xchg adc pop outsb or add sahf xor (bad) (bad) mov push ret add push (bad) (bad) (bad) cmp fbld pop sbb fmull stos rcll jl fsubrl and fsubp mov aad lcall imul add add lahf mov xorl repnz cmpsb or loop cmp mov pop cmp fs xchg ja sti sbb dec add or lock ja mov push ss mov mov jge cmp fs sbb stos push xchg cmp leave popf and jge orb mov jno adc and ss dec inc jo inc jle or jae lods sbb repz push sti inc inc cmpsl out mov sbb cmpsb arpl mov xorl test in jl inc out pop pop aas ljmp and test mov iret sub and stos and dec push sub and mov pop lods or mov test mov push fisttpl adc xor test daa outsb imul mov sahf xlat push cwtl (bad) ret sub test fisubl jle test or add push movsl int jmp hlt loopne jae xchg pop push sti mov pop mov sbb mov sbb jne xor dec in xor push mov fs xchg sahf in adcl sub data16 dec push stc repnz jmp add adc fbstp fwait mov jne,pn sbb cltd fnstenv mov inc fisttp mov jp and out or shr push fldt dec bound mov push movsl jge add xchg pop in dec sub sbb or sti pop pop cmc sub lret movsb loop cmp mov (bad) js mov and xchg xor push jns das and dec pop sub lret jbe cmp cld cmp and sub sbb paddusw mov es xor adc fisubrl push mov xchg xchg add dec dec mov pushf mov cld cmp sti push fucom push stos setns jb jle insl xchg adc gs enter in test inc int out sbb mov int and pop ret jg aad jnp push out loop fidivr add xor xor push pop lods mov sub (bad) dec pop (bad) loopne xor test pop cmpsl testl pushf call cwtl xlat aaa sti mov cltd pop cmp ss add inc hlt sahf test dec push rcrl push dec je shrl bound cs xchg push ror push ret loopne or and adc pop (bad) cmp cmp int3 jns mov cmp in mov push orl push adc sarb loope inc int3 push jge repz sbb mov aam pop insb daa inc sbb sub pushf (bad) adc inc popf cwtl (bad) js addb or adc test jae push jge mov sbb aas addr16 pop lcall cld stos cwtl or jnp pop outsl arpl xlat mov adc xchg add or pusha sbb xor insb sub ds xor (bad) (bad) ja fwait lods add stc push or push push sub inc mov out call xchg cmpsl cmpsl and mov xor push icebp in les or (bad) icebp inc enter stos adc sub mov mov sbb loope jb lcall dec mov push flds xchg ret (bad) xchg push jg jp cwtl cmp fsubp pop inc push cltd ds test cltd and insl mov mov lahf pop aas lds jo movsb das mov in jp inc and dec (bad) (bad) push cmpsl fs jae aam and xchg jnp addl push test lret jbe stos xchg adc dec lock (bad) fmuls aas fprem1 xchg mov inc sub popf daa movsb xor popa lea daa pop push cmp push or in mov cld xchg sbb or outsb dec (bad) std imul ror movsb dec js sub jp mov (bad) out jmp pop loop push ss sbb mov scas test xor and cmp nop push inc das adc stc repz adc bound pusha movsb repnz or push sub pop fsubrl fcomps popa jp sub fwait lcall out mov popf aad out unpckhps pop test imul sahf or int (bad) or or pop sbb lret push xchg dec jb (bad) sub adc popf fs addr16 inc dec mov xor dec out push leave mov cld rorb sti and adc push imul dec outsl mov mov stc or (bad) mov out test jecxz inc cmp lods xor jecxz jg insb add mov ja inc sbb xor cltd xchg jge popa dec out pop out dec jg xchg add xor cli movsl mov xor add daa mov add popf push das and cmp jg jecxz push cltd push push jle dec mov test enter jbe test in aas loope sbbb in xor js or sti adc mov mov jecxz std dec rorb mov and clc out cmp lock scas inc xchg rclb shll push add sub sub xchg je loope dec daa fs fildll cli aam les outsb or addr16 rcll pushf repnz fnstcw loop sbb psubw cmpsl jp sub xor stos add mov and mov addr16 mov (bad) dec or flds addr16 clc xchg mov adc pop dec in lret mov xchg inc add jl inc bound dec mov in fstpt pushf and out outsl test inc arpl out ret mov cmp jns or mov pop and mov mov lahf mov and pop ja outsl (bad) das dec mov icebp or gs in scas and jno or push jg add nop pop in rcll or mov int3 cmc out pop imul in dec popf imul (bad) push mov cmp aad or jnp xchg xchg add or out loope cld scas js int pop adc adc add cmc mov sbb orl repnz mov sbbb pusha fisttpl cs ret or scas ds and mov jge add sbb mov lods mov cmc mov jae mov mov rcrb pop pop pop mov hlt mov sub pushf lret (bad) jo jmp adcl out out inc mov fistpll adc int imul jecxz scas pop xor in aaa xor add out fs fidivl test sub aaa aaa stc jae lods sar mov addl inc sbb addr16 outsb cmp loope das xor iret sbb mov mov sbb (bad) pop cmpsl pop mov xor add jmp push sub stos push pop mov jo (bad) stc mov adc cmpsl lret pop not ret mov arpl pop and cmc cs jle in sub fisttpl or std ffree fnstsw (bad) and sub (bad) imul mov mov inc lret shll out aaa imul push sbb (bad) jae pushf dec dec notl mov outsl add push xchg cmp mov jnp mov (bad) pushf test mov (bad) enter jge adc fwait cmp adc inc outsb dec add jb push lahf push sbb ret dec and rcl fcmovnbe insb jbe xchg rcl pop mov push in outsl push ficomp mov mov push dec lock mov xor xchg cmp mov jg out lods insb rclb jp lea jae mov pop inc por fmul lea test out cmp push add mov int pop push ljmp mov js lods mov lods jg outsb cltd lahf test sbb out jo js movsl orl sub cmc fldl add in sub jle cmp fmull push pop dec sbb repz or daa jae daa into loop int sbb push mov push cmp mov insb cmp mov fidivr call je push scas mov jg arpl jle or push lds xchg inc (bad) dec scas nop cwtl mov shll sbb out lea mov es es test jnp push jle mov mov mov mov push adc add lds mov imul xor bound and imul rdpmc xor push ljmp mov andl dec xor pop xor cld ficom scas push shl xchg ljmp lcall push arpl jl dec push and (bad) (bad) (bad) div xor pop popl push adc pop bound scas mov lahf ljmp ss (bad) push pop jns push (bad) mov iret mov lods in enter test ss jp cmp arpl out cmp mov cs aas gs je push sbb insb jmp xchg sbb mov scas subb mov mov cltd stos add cwtl insl in popa pusha mov jae mov jg mov mov stos scas cmp stc mov mov popa lods out xor push loop inc push lods cmp mov mov fadd push repnz int3 push sbbl and les test (bad) pop in xchg lahf pushf rorl stos dec test inc mov inc je dec add jno mov xchg pop cmp hlt pop jae inc dec push enter int3 xor dec sub add movsl jmp jo lods push out push into andb mov xchg test sub pop jecxz stc leave insl and pop jg stos rcl mov jl ret xchg mov cs shr pushf mov cmpsb pop push loope (bad) add lods sub jbe or adc or ss xchg imul push arpl and stc push jb aaa pop loope sti cmpb inc int3 mov and push lods cmp mov sub cmpsb dec lret sahf jg xor (bad) push pop cmp mov add mov lds cmpsb rcrl sbb inc daa iret out fidiv pop add xchg orl (bad) ds (bad) fcoml int3 push push fs sub xor xchg lret movsb stos pop (bad) data16 and in xchg out popl (bad) bound les cmp frstor xchg in dec jp call test dec daa pop cs call int3 lahf adc sbb ffree xchg cmpl ljmp adc adcl mov nop adc xchg int sbb (bad) cmp pop into pushf fdivrp out or cli out movsb xchg xchg out ret test xor cli int sbb adcl ficoml or add push das lcall outsl cmp out sbb jl mov ret and and or or or outsb xchg jp,pt sub cmp pop stc mov xchg xor fdivs sbb sbb pop jg mov movsl loop rcll push push arpl pop pop mov (bad) icebp xchg test es adc add repnz jno mov inc mov cwtl sahf test or scas mov les pop pusha rol cmp pop aas fsubs je jno int3 div orb pop dec scas cli adc or xlat push jmp repz out loopne sub jae sbb or loope in push incb pop movsl imul add cmp fidivr test adc inc mov enter pop popa sub dec mov lock ret lret adc cltd pop mov dec xorb sub ja shll std xor fwait pop jno mov gs leave inc roll int mov sarl xchg cmc or jns cwtl xor pop in iret jp xor jmp or mov and jge sbb jle int lods imul mov fdivs mov shlb xchg xlat (bad) dec je xchg arpl cmpsl xchg scas push aas sbb jne ja sbb ss sub xchg sbb movsb roll cmc mov ret int3 popl mov xchg push js mov shrb jbe loop dec fs cmp jle les lods inc mov push lret xchg fwait mov and add popa call scas xchg jns cld jle movsb imul rclb and mov sub mov jns scas mov sbb cld adc pop mov cmc and int3 mov inc or imul xchg ljmp aaa ljmp jmp sub subb (bad) dec pop pop push push lods clc outsb push (bad) xor (bad) negb cmpsb dec add cwtl pop loop in xchg (bad) xor lods (bad) xchg std int3 dec fdivrl adc push jo cltd cli sub test xor aad xchg inc pop negl jge ljmp xchg (bad) mov scas lds insb ja aaa jge leave push sbb cli xlat jge xchg sub mov int3 int3 cmpsb fs jne (bad) push mov push dec inc push sbb dec lret jo aaa or xor cmp int3 fisttp cmpsl lods push add jno lods idivb xor mov inc and in stos cld add imul push scas pop mov pop adc pop dec mov imul lcall inc cmc insb add lods cwtl push mov xor push cmpsb adc adc fisubr push inc icebp repnz xchg mov sti jne sbb push cwtl cmp push push xor push js jbe out jg add and cmp jb shlb insl pop ror mov xchg pop es aad xchg pushf les mov (bad) push (bad) data16 movsl movlps shrl dec repz pop je inc pop jbe aad dec push fwait (bad) mov add cmpsb shl (bad) dec stos inc dec pop movsl mov pop push sub div in cmp shr jmp (bad) xor sbb pop adc test fdiv lea xchg push push xor dec jnp enter out leave push clc call pop push inc mov lods fisubl mov add iret cltd std aas or mov dec sbb jb xchg shrb xchg xchg pop and in data16 push pop adc ret jo imull popl pop addr16 dec test mov in mov mov push mov jmp or popf adc movsb inc fwait pop lcall sub xor in aas popa cmpsb adc inc or push xchg mov jns jmp loopne xor pop jne add and mov arpl mov mov mov pop jg cmp inc gs mov add xchg mov out xor sbb repz int3 adc add sub mov lods shl mov pushf sbb cmpsl fcoml sub out mov push cli push lods mov int3 mov fcmovbe push adc push mov mov and movsl loopne ja insb testb lock sbb scas lahf sub mov icebp movsb mov sbb xor adcl addr16 adc imul pop inc sub (bad) ficom jns loop lcall mov xchg das jo cli and add scas xchg jo loopne,pt stos sub aad cmpsl jp jecxz inc xchg mov jae outsb add cmpsl fsubs xchg mov sti push push xchg jo pop sahf repz pop mov push or bound sub xchg gs push and push or sub inc adc sti call inc icebp rolb and jnp push push andl mov lods call push cwtl mov add or loopne adc inc sbb push (bad) dec or test mov rcrb add ss pop xchg adc inc pop rclb (bad) mov insb xchg bound mov mov out (bad) fnstsw mov xor mov xchg cli (bad) adc les movsb jge jl inc (bad) test jo movsb stc (bad) out add dec andb inc mov cmp je in dec xlat jnp pop stos enter ss nop push lea pop sub test mov xor xchg dec push jb sbb lods jl xor dec pop in jno xlat or jg mov jmp pop mov sbb (bad) jne xor inc add in std dec decl (bad) cmp push arpl (bad) jb (bad) adc repz (bad) push pushf insb xor inc cmc push and sub subl (bad) jnp aas lcall mov dec pop jne ljmp shll jo outsb movsb gs or lret jns jecxz dec dec jecxz gs mov xchg and sti jb insb orl or xchg aaa in addb xor in inc out push pop xchg ret outsl adc mov es leave aam mov pop fisttpl minps mov cmpsb lods mov mov add mov push (bad) mov pop add mov je lahf shll xchg aaa push push outsb pop inc hlt divl ret xchg jnp movsb sbb loop cmp cltd lock insl mov mov xor das add mov out fstps bound adc mov mov fwait andl cmp xchg jmp clc pusha jle flds insb sub sarb rcrb pusha xor add je or in lock (bad) and mov inc outsl cmp push xchg or sbb daa ror daa sahf jbe,pn fsubp popa clc mov push push orl mov insb dec add sbbb adc pusha pop cmpb fwait dec mov mov mov (bad) call imul pop mov or cmc es leave bound push adc lds mov popa mov call sub sub iret jb mov in xchg bound adc sub outsl es push mov pop adc ret (bad) scas cmpsl lods adc lock cmp inc xchg dec test frstor jbe mov xchg rdmsr daa cltd (bad) out pop out jnp inc jp xchg mov mov push sbbl ret jp push out lret xchg ja add rol fmull and mov int3 sub pusha pushf mov notl mov xlat cli or jl sbbl push js pusha js addr16 stc and test mov xor push mov pop fmuls pop pusha icebp xchg iret mov dec pop or in and mov xor add addr16 dec adc fwait or scas add add fwait (bad) or pop pop out mov mov lret mov mov loop cmp mov test xor les iret insl adc jp addr16 push jnp cltd sbb push add xorl fdivrl in or cmpsb outsb shl loope jecxz push sahf xor rcrb pop outsw jmp cwtl mov mov cmp jmp sub cld add aam ss or sbb cmp in xchg cmp add jg inc adc sbb in sub dec pop int3 push adc push popf test sar cmp xlat pusha xchg xor xchg add sub (bad) insl sti scas mov push pop jae fimull jae es xchg or leave mov pushf add lea push aam andl push clc pushf rclb xor cld dec adc das (bad) push push add xchg dec mov nop mov mov test rolb sub cmp gs sub mov es pop xchg inc aaa hlt ljmp loop sbb ljmp ja cmp in mov aaa pusha insb adc sti cmpsl and sbb repz aad sub pop ljmp imul sbbl addr16 shrl mov ss sbb mov mov clc mov push pushf sub and daa rcr sbb cmpl or sbb ljmp dec mov inc and (bad) fisubr and dec into (bad) popa xor call inc iret movsl mov pop insb lea push lret idiv int push lods sbb popa pop lods add cmp imul add jns push insb stos packssdw arpl add out lcall mov push pop jno mov cmpsl mov cmc jo cli cmp adc dec mov push insb popa mov daa lds push lret sbb mov scas jecxz (bad) lahf fwait popa popa pop dec (bad) push sub in jnp stos in push loope xor xor fstl fcompl dec lahf into flds sub add adc xor pushf out inc xchg xchg xchg push call outsb jbe js mov fwait cmc sbb push in mov cmp push and sub sahf mov in dec mov rorl test ljmp ljmp fisubr jno jb fwait pusha idivl test je push mov mov outsb in insl mov cmc fistpl fdiv mov pop arpl ret mov sub test jae xchg inc push and loope or test test push xchg push xchg nop xchg cltd or in jecxz inc and loope xor incb les xlat cltd mov and jle jb sub adc or and sub add jl (bad) inc mov mov ret xor test xchg and mov scas cmp and cltd stc add data16 or and lahf xor xchg pushf xchg rcrl xor iret pop pop fidiv cltd add pusha dec (bad) (bad) lcall jg inc fdivrl pushf push ret das jge out lret mov repz jae lods add gs lret sub mov int3 xor xor lds andb push les and mov sbb les outsb push adc sti (bad) mov jmp scas or jge out push xor test inc fimul jl es ret rolb inc push xchg stos inc mov shl addr16 adc sub test outsb js ds lahf cmp std lahf jp sbb dec xor jbe daa jo pushl mov mov add xor jl pushf (bad) arpl cltd cmp or jnp out push mov dec int3 lret ret (bad) xchg mov sub insb mov xchg lahf mov leave fistpll fsubrl loope inc jecxz fcomps cmp cmp jb iret sbb (bad) mov popf jns cmp hlt nop fwait (bad) test je,pt roll popf or sbb in lock sbb (bad) sahf aam stos test daa cld mov add dec xlat sarl xor xchg mov jge jmp incb cmp push (bad) or imul cmp push lret mov leave scas mov lods dec (bad) cmc and shll (bad) jmp push arpl inc sbb cmp pop push cmp or pop std inc cmc fbstp sbb jp pushf sbb sti out push cmp fnstenv lret inc out ret sahf cmp lret movsl mov xchg test std stos imul arpl cmp lods cltd xchg add inc mov lret mov arpl popa sbb jno lret cli pop xchg mov cmp add outsl popa inc or fnstsw adc int ljmp rcrb ret mov push jb (bad) sub pop cmp jmp xchg addr16 mov xchg inc jae fprem adc sbb dec dec arpl or xchg adc pop loop shrl adc push mov and mov or aas sub insb xor mov mov mov (bad) adc jmp and ljmp cmp div dec cli insl mov sti fnstcw in dec out fs rol into jb (bad) mov ret cltd mov adc sbbl cld scas mov (bad) mov mov cmp sub ret cmp (bad) aad jp call pop xchg ds iret mov insb clc cmc sub incb or movsl popl mov pop leave xor cmp pusha adc test rorl icebp out dec pop inc lret pop call xchg push movsb cmp (bad) mov jp ja jno add jecxz das xchg mov repnz scas (bad) cmp push sub and shrb cltd cmp sbb sahf clc and push jae mov mov rolb (bad) sub enter inc test sahf xchg push imul adc mov dec and icebp adc xor push cmpsl loope jge mov mov jns adc (bad) mov sub arpl mov pushf mov fnstcw mov pop stos mov out mov (bad) xchg lahf js xchg fimul fadds pusha aam insb inc jge cwtl in dec aad mov stos (bad) nop jle fcompl pop out int cmp adc mov xchg sub mov and mov imul cld mov push and push lcall or adc into sahf sbb cmpsb or inc or leave aaa popf inc (bad) lret out mov daa mov flds mov xchg adc lds jge fldt push jp jge int3 adc aaa cmp cmp decl enter pop cmp push imul stos ss jne mov (bad) pop xchg xchg movsb loop nop cmp (bad) jp xor mov and jbe adc movsb daa cmp pop and call loopne inc xchg fnsave repnz mov int3 cmc inc sbb cld test jle inc outsb mov dec mov pop movl cmp pop pop mov add adc jmp fisttpl icebp testb push mov jecxz mov xchg fnsetpm(287 adc jge mov jmp or sub or insb out lret push cld inc mov roll movsl out das (bad) lods (bad) idivl (bad) lea mov loopne shr pop push inc cmpsb movsl ss adc out pop sbb dec arpl pop or es incb or pop xchg mov stos adc pop ljmp xchg test imul ds insl js imul mov sub lret lcall in lahf in sbb pop (bad) xchg imul paddusb push fsubrl xchg mov shr stos cmp xlat or push ror pop imul lock xchg dec jp xor jp aad dec out or sub jecxz pop inc mov jne push insl sbb orb in pushf lods mov push cli js lds cmp inc neg and clc imull repz xchg dec push cmp push pop inc push shrb fdivrs int das loope jne dec test xchg add sub shrl enter movsb sbb test sbb jg push jo ljmp (bad) out push lea adc cmpsb fdivr mov iret fs cmp jns ljmp pop mov jae pop popfw insl push cmp and daa mov mov push stc mov fwait mov cmpl aaa jle jl cwtl sub adc ficom xchg xor add or out add jno add jae fbstp repz (bad) aam and add or mov sub int3 jae jno ja fstl mov xor rolb (bad) cmp add and ss lods mov pop scas dec and mov ret adc dec mov fsubrl pop test and jp sbb and sub repz xlat faddl xor out imul sbb push lahf loope int3 push jo sbb inc mov test dec fidiv jb sti sub mov mov add movsb push dec (bad) (bad) aas sbb icebp jmp pop outsl inc or jb jmp imul vandnpd fstpl nop push mov (bad) or ljmp lret sbb sbb je pop pop pop mov mov xorb lock fiaddl pushf jbe test sub mov shrl movsl xor inc mov pop adc scas fcmovu lods sbb inc jb pusha xor rorl or cmp xchg adc xchg sbb into sahf xor js lahf lock jmp imul mov push adc test gs mov xor test lret mov inc xchg pop enter shrb imul outsb jge or mov add (bad) lock cwtl inc js call dec adc arpl cmp enter inc fwait sbb mov rorl (bad) in or dec les daa ljmp mov mov jne (bad) and scas adc in sbb stc scas pop push mov mov jl inc sub js (bad) mov mov ret inc int mov mov lret in mov and das repz jp (bad) aas cld push ret jnp (bad) dec (bad) mov sbb sbbb jo pop mov cld jae jecxz je cs andb xchg clc add jg into fcmovnu fsubr mov outsl cli in mov or or add inc shl dec push xor rcll jns pushf xchg das ljmp inc jmp nop stos cmp jmp xchg mov sub xchg cmp inc movsb out fwait adcl jmp leave push add rolb jns lret mov jbe clc addb in cmp jb int3 popf mov je mov pop mov and in jle repz mov xor jne xchg pop mov mov mov out mov sub adc push jae push inc pop pop pop pop scas add adc int pop jnp jg cld test bnd cs and movsl xchg push enter mov pop mov mov lods jnp mov and aaa inc mov pushf cli hlt repnz stos popa mov ss push mov pop xchg or les add add movsb in sbb pop rolb mov cmp xchg xchg lret clc xchg (bad) cltd xchg adc fiaddl popa popa or mov outsl int popf cltd push add mov aaa and xchg nop shlb xor loopne js into inc in loop lods push test push roll ret ljmp lds mov cmp (bad) cmpsb pop loope and roll pop fstpt (bad) mov test into nop es ss xor sub dec mov pop adc jne pop cmp pop les lods and push dec xor leave bound scas cmp mov jne gs hlt pop insl mov dec loop xor fcmovne lret and enter andb aaa sub inc and lret xchg and lock sbb clc cli push out cmpsb sbb insl sti cmp mov sub popa mov cmp xchg jmp push ds xor aaa mov in (bad) out sbb jmp jecxz and xlat (bad) xor xchg cltd lret lods test cmpsl xchg addr16 cmp mov fistpll dec mov jl in rcrb xchg push aam inc fsubr stc (bad) (bad) jne jmp cmpsl sbb fs pop mov sbb push mov inc sarl lods sbb mov addr16 je outsb mov mov and cmp jns and mov and lds into pushf sub mov dec scas addr16 dec out xor test or (bad) jmp sbb (bad) mov js dec (bad) nop mov cld add ds hlt inc ret fwait nop (bad) or jae push sub dec add jmp (bad) (bad) push cs cmp or js pop and mov sbb mov sbb mov (bad) into or adc (bad) jno decb push mov adc repnz pop ss push nop out sbb mov or iret and (bad) cmpsb aaa jbe ret iret test lock inc pop js adc and mov jmp test pop cmp push movsb int int add addr16 nop adc dec push ret push test push out ds icebp xchg and mov push nop and or add jmp xchg or mov (bad) mov adc dec test call data16 lret mov pop notb xchg jmp fldt shrb cwtl lcall loop sbb outsl xchg setp cmp ja push shll cli add rol mov test push scas into push sti data16 push jle jge cmc dec or stos sub enter cmp stos xor mov aaa inc cltd and in inc xchg stc cmp fsubrl das adc push xor pop push sti testb pop dec xor stc out and pop dec xor das cmp and jne mov aas xchg pop popf push push daa fidiv mov daa shl icebp cmp push xlat pop add cwtl popf mov push imul xchg pop shrb repz xchg arpl loopne leave pop clc sbb bound sbb sbb and aad xor sbb mov push mov faddl xchg movl jge and mov or pop jle lahf xor aas dec jmp pusha scas les cs inc imul jnp adcl (bad) fimul or dec push rep lcall inc in adc dec int (bad) aam mov adc scas ja push dec ret cmp dec test lock push pop and insl mov pop lock testl sub mov mov outsb mov cwtl mov lea cmp sti jno xor inc push adc (bad) xor inc adc lea xchg fs pop dec push dec jge rorl sbb js lret mov mov sub add mov scas je fisub xchg sbb lahf mov (bad) pop ja lret fcompl negb popa push out bound pop push mov cld mov mov and cmp lods push insb adc rcrl push xor inc sarb add das leave push scas fnclex cwtl sub iret sbb mov lods jmp pusha das notl cmp cmc mov cmp cltd push loop insb cmp popa inc or notl sub (bad) push pop xor pusha or cmp movsb and jns (bad) cmp mov jns pop mov inc (bad) sbb in imul hlt (bad) xchg sub cmp cmc jno cmpsb int3 (bad) jno jbe into pop in xor sbb nop jg sbb js and xor dec aas xchg cli cli testl add and or rcrb shll xchg pop mov inc mov ss cld aas mov or imul outsb inc sahf js fisubl jbe mov pop fisubl daa jmp jmp cli js std or sub clc xchg clc lods (bad) in add enter add mov hlt mov sbb sbb mov fs (bad) aaa push roll pop adc mov ret pop fdivrl aaa mov enter dec and add arpl mov leave jne xchg and fs (bad) fnop scas ljmp es das mov and jecxz mov jne lods (bad) pop jae imul xor jnp pusha adc fcomps fsubrs std mov jno and add xchg lea ficompl in insb or sbb xchg (bad) add into xchg test mov add jno loopne out adc sub out orl pop leave mov dec fisub mov or or sbbl dec fs xchg and inc or lahf mov mov push das inc aad dec push ss adc insb lret imul loopne mov jecxz dec jge fnstcw adc js adcb (bad) mov mov lea mov dec mov xchg and jge pop pop fs mov fcmovu fstpt fwait sbb or xor pop les push cmp mov (bad) idivl push mov mov xor sub add xlat mov jg cmpsb cmp in pop and lock ficompl arpl pop cld mov push fninit mov outsl (bad) add inc jne (bad) and orl adc scas test push cmpsb cltd loop and add pop pop imul mov adc fldl and movsb (bad) daa or mov jg out repnz push pop inc ffreep fbstp push hlt jecxz sub mov jge jle mov adc (bad) (bad) xor into std jmp imull adc movsl out and sti repz addr16 je jnp leave mov and ss xor sub adc inc je push lds aaa mul popa sub out xor xchg sub repnz push repz enter (bad) xor ss mov mov xor mov adc jge das mov lea jl cmpsl incl es outsb jb dec push hlt cmp mov adcl and push lcall and dec mov xchg inc imul pop (bad) test je out aaa (bad) arpl stos jge aaa rcrl ret (bad) push enter pop movsl mov loop xor imul pop dec std outsl xor movsl lcall mov push xor sbb xorb je add xor add pop test inc mov mov das dec mov mov dec xchg test popa inc fdivrs and fsubrs sbb mov and pop rep mov sub inc xchg (bad) and imul clc stc call pop hlt into repnz jge cwtl and xchg jp lret or mov add mov sub ffree imul icebp int pusha and sub or sub (bad) nop repz aas into xor lods xlat adc test and xchg je sub and cmp dec cli leave fdivl (bad) stc adc jge repz jbe and add repnz shrb (bad) xchg data16 clc je lea repnz cmpsl loope sti and mov adc test push popf inc fs loope pop inc scas aaa jle (bad) popf (bad) mov sub add das or cmpsb aaa int3 jl push jecxz rorl mov inc ror arpl pusha xor pop push scas pop ret bound pushl mov (bad) test incb and dec sub arpl inc mov fisub sahf nop dec add insl add or adc (bad) push (bad) out sti pop les aaa (bad) insb cs sarb push cltd aaa lea cmp push push (bad) bound pop push sub movsl pop add cmpsl sbb or push ret loope inc jae cmp clc xlat jp insl (bad) jl inc pop pop pop push cmp push xchg adc (bad) or out inc flds and fildl mov pop dec xor out sbb stos fwait data16 add cmp xlat push jecxz stos adc cmp adc ret fisubr mov mov mov aaa out cmp cmp mov lods cmp leave add or js jo inc xor cmp test add (bad) lret push sti das lcall int3 add shrb (bad) mov insl (bad) cmc stc pusha add or inc sbb jecxz mov dec xor sub sub aam test mov hlt nop popf inc jecxz mov push lods lods nop (bad) or mov cmp sub daa fbld loopne push fstp mov fisubr cli and cmc push pop fstpt sahf mov sbb adc fs repnz sub outsb stos pop xor outsb enter lcall ror push test loope add std fist test imul test rcpps les daa imul mov push cli or mov add mov sub sub jnp cmc cmp aad mov dec (bad) jl cs ljmp mov push xor (bad) lds daa sub mov sbb mov inc xor inc call sub mov mov loop pop and lods or iret xlat jp clc bound xchg fs in mov jle mov push cmp rcrl aad ffree and sti jge call cmpsb cs sar adc jge adc mov lea jp add ds dec cmp cs push in cmp pushf imul das sbb sbb add and das ss mov (bad) jbe jg rcl push lds adc dec popa fsts lret pop out or mov xor test ja cltd push jg jne imul inc imul sub mov ljmp and ljmp pop test fist ret cmpsb pop add add (bad) repz lret push xchg jae xor mov inc mov aaa stos pop push stos push shll pop pop in or popf and sub cs sub mov (bad) push lea xchg (bad) roll fwait mov inc inc loopne test loope icebp into and pop cmp jb (bad) pop imul jnp add mov push push jns lds dec aam fstpl inc mov lahf (bad) loopne add mov push in add adc xchg imulb push test push sbb xorl addr16 and push sub scas ds addl dec mov xchg neg popf push pop mov ret pop das fist or ds mov cltd arpl push mov (bad) xchg ja pop mov xchg std out and popl inc xlat nop lret mov push or mov leave (bad) xor mov push cmpl loop int3 inc inc shrb pcmpeqd cltd out ljmp pop sahf jmp rcll inc daa aam push jmp jae int lahf stos ja jle scas xchg out jns pop mov mov rcll (bad) adc add cwtl push (bad) gs sbb sub xchg mov mov pop aaa dec ja sub dec movsl jp fs inc js cmpsl mov lds pop cmp sbb adc jo gs jmp stos sbb test push push in sub adc mov dec sub mov das ret adc out xchg push inc lea mov movsb and in adc mov inc sub and fwait into outsb or add sbb pop imul (bad) in cmpsb xor mov mov mov sahf and mov or lds call aaa je add or jne loopne rcrb jns dec sbb outsl (bad) ss mov xchg loope and (bad) (bad) mov xchg sub mov fdiv cmp adc jp imul push imul jno add loope adc aaa fsubl sub cs and and xor adc test mov (bad) outsl and mov ret mov mov push mov stc jmp (bad) mov mov mov fisubrl sub cmp mov push inc lock out inc xor les pop xchg pop arpl inc sbb jmp scas out cmp sub outsb aam add push add bound dec pop cmp push fadds xchg in fsubrl adc nop into es (bad) lret cmpsb push test jp add push movsb mov fcoms xchg out xchg int fimul jb ljmp data16 jbe xlat dec xchg lret push dec jmp aam mov lret adc fidivl fnop out push cmp push cmpsb shlb pop jnp mov fs in cli pop jmp repz test xchg pop je icebp sbb fsubs not jnp dec stos mov cmp xchg mov mov or xor xlat movsb jno sti mov cmp cmpsb movsl hlt cmp ss cld rcl inc hlt pusha add xchg mov negl nop test push repz aam pushf sbb outsl mov imul decl dec sbb push mov dec syscall (bad) cli inc xchg push arpl (bad) and add push test js push sar xchg gs decb xchg dec hlt add gs mul pop or dec (bad) (bad) cmp negl rcrb mov xchg lods push test scas or push stc jl jo and or push xor cmp enter mov pop (bad) jle jbe cmp pop ljmp dec or xor dec stos icebp (bad) sbb iret xchg into ds jle fsubr cmp adc pop int inc pop subb aad icebp out adc or inc dec ljmp mov popa and sbb jp repnz inc jne sti les mov fcoml test ljmp ljmp aas dec or bound cmp movsb add das xor jg clc fdiv cmc loopne mov cmp ret negl mov jmp mov push orb xor xchg sub dec mov dec push out ljmp and mov mov mov shrl jne fcomps xchg sub jp mov mov push add cmp out fstps lahf lods inc in jmp jp or pusha mov jns add jbe dec mov inc (bad) mov push mov loope push mov hlt movsb cli push cltd add popf mov roll (bad) movsb nop (bad) push and push or loop and js and and fnstenv mov dec aad loop callw aaa xor cltd sub (bad) mulb push sub xor mov imul ret mov add jne ja ret sbb (bad) mov into test push add fsubrs lds or test push or sbb mov rcl xchg mov ss (bad) mov scas mov push xor loopne out push (bad) pop mov or outsb in imul jge adcl mov xchg dec neg imul orl lods mov sahf mov mov outsb pop cmp (bad) xor xchg rclb out and fidivrl jp sub jnp fnstsw push cltd loopne mov push cmp xchg mov mov arpl (bad) push shl jnp cmp scas ret scas sub (bad) bound lock jge fidivr inc or shrl pop dec ret cwtl and mov pop jo fs out mov adc int3 inc aas mov ja movsl stos adcl aas aaa push jge or repz jno jecxz notl mov cwtl sub pop into xchg push mov (bad) ljmp aas call inc insl movsl mov loope daa idivl hlt arpl mov icebp mov inc arpl outsb stos rorb insb (bad) aas pop xor mov sbb cmp jns inc les movsb xchg sahf push push cmpsb inc pop inc mov out jo adc cmp sub sbb (bad) xchg inc push js cmp imul push and add cmp and pop inc int xor sub mov stc push mov sbb movsb out stos out cmpsb out adc push ret ficoml mov (bad) loop repnz nop xabort mov lods adc fucomp mov xchg cmp push push syscall pop icebp pushf pop and clc mov adc dec add push (bad) xchg push and push (bad) cmp sbb push neg push adc test or rcrb in jns inc push inc pop jmp mov loope push nop mov ljmp fwait repz push test mov mov push jp in pop mov rcrb fsubs push clc repnz jecxz imul push fldl rol cmp lock or pop test out scas fcompl dec adc lock sub and fs cmp repnz pop sub jnp or movsl xchg das push mov push and pop lods xchg push dec (bad) xor add xchg scas mov push into loop (bad) lds ret inc test dec mov inc pop cmp push push pop jbe popl cmp cmp push (bad) sub inc cltd daa stos mov leave mov aas js push sti push sub xchg push adc add out lret (bad) std jmp adc les lcall jno push add mov aad test jl or or cwtl cmp std pop (bad) outsl mov out dec out inc cmp pop mov negl lret stos sbb lock vxorps dec (bad) xchg xchg adc jl stc cli les (bad) sahf dec mov push ret lods ret adc inc in (bad) rcrl mov xlat push mov jae int3 out add mov (bad) je mov arpl test mov shlb cltd add cld arpl and test pop movsb cmp inc dec mov (bad) dec cs sbb jbe cmc mov les xchg daa imul (bad) mov mov jnp mov into xchg int3 jns mov mov cltd or push imull mov (bad) mov int das sbb faddl mov cmpsb imul pop push mov test push or xchg inc push cmp in ljmp adc in ret iret jg add mov xchg (bad) push cmpsl (bad) (bad) dec divl adc sbb xchg fisubrl xor inc mov mov repnz in mov jl mov jns and (bad) mov nop jle xlat add and cmp pop adc rclb (bad) cmp adc mov mov mov mov or icebp xlat push cmp pop scas xchg xor cmp xchg in jle call in mov lds test loopne test fdivs push cmc shrl sahf or push push jle sub inc pop mov cmp or aad popf add push mov dec adc mov and out or push lcall pop jnp xor or push decb push mov iret lret sar (bad) and jl bound std sub mov or push inc mov lahf popa aad sbb imul nop es jmp inc (bad) sbb iret cmp inc scas setp adc cmp adc dec lea xchg por pop push negb movsb add dec mov fnstcw sbb je shlb lock cmp lret push je jns push scas mov mov stos data16 imul lcall jecxz mov push dec out sub ss ja xor popa cmp push or mov sbb xchg mov mov mov test idivl test sbbb loop push jb or mov lods leave mov or fcmovnu arpl in mov push and testb jp stos imul inc jmp aad (bad) adc pop lock pop in pop jmp jl fsts fildl mov push sahf pop lahf arpl jno enter pop add lods inc cmp mov in xchg stos lods mov jmp or jle cmp (bad) xchg dec and lahf std in inc lods mov jo push inc (bad) out hlt pop pusha inc mov std mov pop fmulp mov mov sub push stos pop stos (bad) pop int adc lret dec push mov movsb test dec inc ljmp mov inc or xchg ss and sbb aaa andl mov cmp data16 fisttp in ret xor adc mov iret adc push mov xchg push incb jle ds mov popf scas dec inc pop fmull jmp xchg fiaddl inc aam cmp add or aad (bad) mov out pushf cmp andl push adc push jns dec xchg (bad) xor adc mov pop int3 pop inc stos cwtl dec or xor rclb (bad) stc int and fdivrl sbb cmp cli incb icebp cmpl pop sub jle mov sbb adc scas cmp js xor mov into loope xor adc push and sub in sahf movsl jecxz and popf imul xor cs repz mov mov xor mov movsl in sbb (bad) push dec jns xor push movsl lahf lods sarl rclb outsl xlat loope mov jns mov insl or jle fimul push int jle and pop lcall dec mov rcl sbb dec decl sti sub xor shll mov jne and ljmp jbe ss cmp push movsb lea adc arpl call fcmovu insb inc scas cmpb sahf sbb mov popf inc push dec aad daa push mov (bad) lret clc xchg fnstcw loope lods jge xchg mov jle sub sbb hlt xchg adc jo or sub dec fimul jl (bad) dec ja scas jge jno jae,pt insl inc cmpsb or add das movsb stos ljmp and lds mov and inc inc je pop and pop mov sub jae das inc pop sbb mov movsb add mov lret mov sub add je and push les xor cmpsl push mov (bad) icebp and arpl adc (bad) push jl das dec (bad) outsl or fwait rorb lods push jae outsb (bad) (bad) mov lret and setbe sysexit rep dec dec fisubrl repnz and aam mov fwait jne std add scas pop int in xchg mov mov jbe lret mov (bad) imul leave fnstenv sub add and push dec xchg mov mov rcll movsb int dec xlat pop addr16 dec shlw mov pop (bad) mov lret stos sub outsb inc fsubl rdmsr adc mov xchg repnz test xchg idiv cmp cs data16 mov push div pop xchg push les mov faddp (bad) cmpsb ret (bad) fbstp movsb cmp (bad) fisub jecxz popf pop jo shrl mov es mov mov sbb xchg jb sub imul faddp adc mov int stos enter das clc ret cmp adc stc pushf movl or int3 xchg pop pop push sub mov rcrl mov mov sbbl jp (bad) ljmp lcall rorl sbb xchg add jns stos shrl (bad) push mov xorb (bad) dec call sarb ficom mov xchg sub shll pop andl cs xchg sub xchg mov (bad) push in adc cs jmp test add xor idivb dec repz imul sbb sbb cmc in dec mov neg arpl inc sub ds call int push xlat sub push jg jno pop pusha cltd xor jmp dec frstor inc and test mov inc mov int3 (bad) inc out cld xor addr16 xor inc dec mov add fwait mov (bad) pop mov ljmp xchg xchg mov lret jae je andl push xchg ss sbb cmp mov dec adc test pop inc sub push bound xchg inc fdivl loop sub inc clc outsl ret iret ja xchg out in jp lods add jl jnp sub or clc mov sbb adc sbb stos lods icebp clc imul movsl pop div mov les fdiv xchg (bad) les and xchg pop add cld sti mov mov dec leave in jg arpl sbb xchg inc int pop test jo mov pop jmp adc sti xor add or jl scas xchg jo cwtl flds mov sbb or imul pushf hlt mov ret add sarl pop cmp jg nop insl ss inc stos mov mov lret (bad) movsl push ret pushf (bad) cmp and pcmpgtb mov push and xor mov cmp out jno out (bad) fisub dec nop (bad) jnp xor ja scas (bad) fdiv cmp pop sahf push leave imul dec pusha std cmpsl es add mov nop push test mov cltd cmpsb dec aas dec or pushf test cld inc and mov dec ds mov inc jl fidivr dec insb sub mov loopne mov es push jne sbb test nop pop cmp jecxz je push jge leave adc in cld pop adc cmpsl or dec mov cmp adc mov in jae dec sti ja imul adc xrelease test push sub pop xchg jp pop out imul leave cltd aas fwait pop gs fistp mov and inc movl xor add xlat stos sbb pop jbe loopne inc js les pop push jb xchg insb mov adc test cmp push insb loop xchg sahf mov sbb cmp mov sub fadd cmp sub and inc cmp shl xor jno fdivrs add imul pop or cli ret cmp mov rcrb repnz inc xchg cmp jno int arpl push rcrl dec and jg mov repnz or sub mov mov sarb sbb pop fs (bad) dec leave fcmove ficoml outsl data16 sub cmp lcall pusha in jp ror push and add (bad) mov (bad) mov pop cltd xchg mov pusha in jg sbb xchg sbb push lea sbb lods jns pop or jl addr16 mov je cmp sub outsb in mov inc mov sub sbb repnz leave jmp mov in mov jl and fdivrl cmp int andl adc out sub dec adc rclb adcb jb lret mov pop ja jnp jno mov mov cs hlt bound icebp mov cmc out es xorl mov fcomip (bad) mov in jge add add push fidivr push cs mulb or push flds jmp lods cltd add push mov dec xor adc sbb cmp inc ror and add pop fcomps in xor out adc ss nop imul xchg and add adc mov jnp lock (bad) adc sub mov and leave or jb push mov jmp hlt jmp fs loope (bad) or bound lret mov or sub arpl ret cmp mov mov scas rorl adc test or iret stos shlb stc xchg loopne and fist ror loopne (bad) inc mov or jmp jb jns mov xor mov pop (bad) xchg cltd aam dec lods loopne int3 imul or xor out xor gs sbb inc ds add push adc divl xchg das sub inc inc inc mov repz pop shrb stc sahf pop push and andb (bad) arpl test mov add sub pop lea loope pop mov adc les arpl adc xchg aad dec xor (bad) scas jg (bad) lods sbb mov dec mov iret cmp es test inc pop cmpsb xchg cwtl and gs mov pop jb cmp ficom cmp push scas xchg pop push ja fldln2 fisttpll outsb lcall stc pushf mov add add cmpb jo jge out fwait sub lods jle lods pop mov or or shrb sub lds orl mov arpl jne je pop outsb out (bad) ja mov mov inc push adc shll aas adc (bad) jnp outsl push xor ja test mov xor loop ds sbb push rolb (bad) lret scas outsl arpl test rorl jle int mov pop jecxz jb cmpsl lcall mov xchg jbe stc ret test xor (bad) js jp or lret xchg adc fnstcw cmp mov xor jb or jno push push xchg sbb lods insb xchg test imul fdivp push jp cmp mov sub xchg push push cmp (bad) aaa mov or sub xor aas push das hlt (bad) pop inc pop mov repz aas push sub aam aaa inc call nop test clc neg jno divl loop jns inc aaa push xchg in adc leave inc daa mov pushf sbbb jecxz hlt test lock mov mov ret insl sub jg insl inc mov mov pushf icebp pop aaa andl cltd push push js and xor dec adcb into mov mov fcoms cmp (bad) or xchg sahf push adc cmp push orb pop aaa cmp loope mov imul dec jb jg jge movsl pop xchg movsl fcomip or add stos mov pushf jle sub add cwtl push mov in mov jle lea into negl hlt pop bound mov pop out into adc mov je mov inc lcall or sub imul test sub addl fidiv push ret mov xor push fldcw mov ss dec bnd adc jo movsl cmp or test xchg push dec rorl (bad) sub fstpl (bad) jnp adc iret data16 cmpsb lock or push adcl pushf pop xor xchg or (bad) (bad) testb dec sbb (bad) ret and rcrl cmp xor xor jnp idiv add adc sbb scas rcll lods popf (bad) testb insb cmp push sub mov mov push es xchg cltd fcomip add pop and roll cltd pop push cmp (bad) or shrb hlt mov mov pushf or pop sbb pop mov pushf dec mov aad mov mov pop push push je repnz lock mov bound cmp cmpsl adc dec add mov or stos fs in int sub xor and xchg shll ljmp pop inc xor xor mov push and pop mov mov jp jne aad loope clc and lcall jg (bad) cmp loopne stc shrl lahf bound mov jle add insb add je cwtl ja cmc movsb es cld addl cmovo lret mov or jno popf mov mov sbb push mov mov iret push sub shrb pusha push popa (bad) in (bad) adc cmp out sub je jmp es adcb mov sub out push std in sti jae test in add add int3 mov mov aas lret jge (bad) xor std mov out je mov inc imul cmp insb stc lea repz into stos aaa cs sarl call imul pop mov imul mov mov mov inc out cmp rol add pop jge push pop xor in mov pop jge ljmp cli movsl fistl stos pop stos cwtl fbld ss adc mov push fs nop add cmp in cmp scas dec mov push stos sub dec sahf (bad) jmp or xchg or jb cmp or adc (bad) jns shrb out inc ljmp mov pop cmp (bad) sub xor or loop push mov les adc mov fisttpl add mov and pop mov arpl loop add sub push mov fildl lods (bad) mov mov mov xor xor xchg pop and stc push call adc jecxz (bad) inc js sub pusha and addl mov out xchg add ret sbb push cmc pusha scas out and add mov ret jg out sbb jne imul jae jg stos jle in (bad) lea ss adc or cltd inc add testb cmc push cmp rorb (bad) iret push mov das movl push lds cmp outsl adc lods xlat loopne popf (bad) fstl pop cltd push pop xor inc mov xlat xor and jmp dec jmp cmp nop inc cwtl adc ret mov insl fidiv add sbb out add ljmp jl xor jecxz jl in aad xchg push cmp mov mov and push add inc (bad) or jae push int imul outsb call imul cmc int3 aam sbb or and adc mov test (bad) cltd lcall bndstx data16 in aaa test paddd pshufw cmp fwait daa (bad) push (bad) pop (bad) or cwtl dec out inc pop adc inc gs shlb mov aas ror cmpsl inc call inc ja imul jbe out fcoms (bad) call pop fmuls xor gs push sahf imul xor cmpsb dec dec inc inc aad add scas or push cmp movsl mov pop mov mov push jb jecxz dec aaa push inc cmc xor push adc imul cmp dec ret test sahf js int3 adc cltd in scas lods sbb mov push jo lret and adc (bad) sub xchg jae cltd mov test pop pusha pop cmc or add mov push insl inc scas mov out pop mov pop mov jnp mov out pop sbb mov xor out out negb test pop or scas push sbb (bad) (bad) push adc icebp mov loop mov rcrl adc cmc jecxz adc jmp lahf fsubrs int mov and mov xchg jle movsl daa cmpl loop xlat jp mov inc dec sub stc sbb mov adc into sbb mov mov mov sbb je lcall push inc mov sbb mov add push xchg lods mov lcall xchg pop adc adc cmp aam pop testb movsl xchg test sbb (bad) insl (bad) loopne aad stos dec repnz xor lret dec mov mov lret xor (bad) push add aas mov clc push xchg cltd add daa iret inc sub shrl mov dec lds push es jmp call in scas xchg mov jne test test das cld stos shl bound adc cmc es add xchg test into inc sub (bad) mov fistpll out dec cmp mov fimull dec jno rclb or daa cwtl pushf nop jmp lret mov push xor decb and lock movsb cmc and fsts arpl es fsub cmp mov sahf out mov mov sti add out mov or mov cmp mov push sbb andnps and pushl mov jle add repz cltd pop cmp dec jne mov cmp (bad) jbe dec mov jle mov xchg fidivrl add aam push add inc shrl ja xor stos (bad) scas mov jmp mull fildl push push cld test sbb shrb dec cmpsl sbb outsb or lret in mov addl (bad) pop xchg leave loope aaa inc repnz push int3 cs adc xchg je movsl enter out ja rcrl sub add fistpll out sbb arpl in xor dec movsb cmpl and into sahf loope pop scas ds jno popf mov jno sahf add aad test pop cmp adc test nop stc push push push or ljmp mov push pop cltd icebp cmp mov sbb rolb loopne lahf pop pop mov xchg cwtl pop aas cs out push gs std loop loop cmp ljmp mov cld shl sub cwtl xor xor xchg add lods add je arpl lahf dec cmc add sbb xchg in scas (bad) call xor jg call out mov dec jp sub pop pop sub push cmc or fadd in aad out arpl push lea (bad) pushw (bad) dec or daa xchg shlb fdivl lret adc nop dec sarl dec or (bad) das jne cmp sub test jecxz mov push test shrb mov test and add inc inc add arpl jp in incl and xchg and jecxz es or push pop pop jne xchg in pusha mov mov dec pop and jae fisttpl cmpsb pusha mov cld cmp es sbb lcall cmp cmc fnstcw pushf fiadd (bad) repz cld mov inc xor push ftst icebp insl int ja dec and sub mov (bad) jno bnd adc (bad) int3 pop mov out sbb out repnz mov ror je aam aad cmp xchg xlat lods ljmp enter sub and ss imul lds mov fwait scas ror cmp insl push std (bad) fsubrl cmc lcall push xchg pop xor mov sar test fstl adc fistp out or mov adc (bad) cld xor mov fs repnz xchg inc xor hlt repnz and fstpt sahf xchg jecxz xor jns fimul cmp inc push lahf daa adc mov inc xchg fwait cmp cmp mov dec loopne test or das jae mov stc and push or cmp lods cmp js jo add mov push xor fcompl mov xchg cmpsb or lret jne xchg mov imul fsubl in mov ss out int3 outsl js addr16 stos movsb cmp dec cmp inc dec addr16 inc mov jbe xor mov adc cs push mov pushf cli add dec iret scas push pop test imul ljmp sbb push das jg sti pop shrb push mov loope or addr16 loop mov cmpsb scas sub sbb cs mov xlat dec (bad) je mov loopne imul pop test (bad) sar test cwtl push sub addr16 pop imul xchg stos dec inc sbb into mov (bad) jg and pop or pop dec push pop mov in dec movsl jl ret fist or lcall or aas addr16 or jne or rclb sub push sub adc aam in jns adc stos add sbb mov cwtl lret in inc jl stc xchg xchg lods in xchg sub sahf nop inc mov sub cltd lods (bad) rcll push cli enter daa dec push outsl xchg sub pop cmpsb fcmovbe dec mov ret orl pop fucomip data16 cmp adc mov dec mov (bad) out lds jo pushf add add inc (bad) dec movswl jnp stc scas pop mov cmc xchg push sbb int3 pop in movsl mov aad jle (bad) xchg xchg lahf or and fcmove mov in xchg cmp (bad) xor inc (bad) adc adcb adc dec inc xor scas fnstsw insb push mov scas lcall adc xlat adc jae insb cltd mov fs scas dec in inc mov ffreep js xor sbb (bad) mov mov fnstsw inc pop pop out dec addb (bad) mov pop ficoml loopne pop jecxz cmpsl jne xor push inc push dec push add push cmp fadd addl fnstsw mov sbb adc in mov or cs xchg adcl lcall dec out fsubs (bad) cli arpl mov adc xchg cmp mov lahf and mov rcrl out sub mov pop mov sub add push outsb xchg ss imul ret xchg pop nop cmpsl stos lret outsl inc aad (bad) test jmp or inc aaa ficoml mov add and ret (bad) fist xor or xor dec js jbe dec adc add das dec adc mov adc mov mov test das loope,pn mov ds imul fildl aam stos imul fisub push cli fild sti jne xlat mov idivl or loop add cmpsb pop xchg cmc ffreep and add pushf fnop sub aam pop xorl mov dec or lods xchg movsb push xchg xchg mov sub push mov mov outsl dec arpl adc or push loop test dec in add lahf inc push daa xor mov and or icebp (bad) mov stc mov movups mov mov insl das repz enter mov cmp (bad) xor repnz push xchg sbb sti test sti pop in cmp mov (bad) loop xor ret das sub xchg addl mov (bad) movsl push xchg mov jg mov (bad) rolb fs (bad) pop dec int ficompl push dec sub jnp pop xchg push js push xchg inc push pop iret cld sahf loope ftst scas mulb jb lret xor inc dec sub out dec push sub repnz loopne sarb lock imul lcall movsb push xchg int xchg ret add or add imul enter sub cmpsl mov jnp xchg es enter mov test sbb push sahf sbb out xchg fdivs sti xor pushf add daa push xchg pusha xor rolb test cmc mov enter cs in in xchg clc pop aam fisub jmp (bad) dec roll test mov mov in pop xlat fwait pop mov (bad) mov xchg sbb scas inc mov cltd popa divl rcll loope xchg rolb xor call push xor xor out cmp fisubrl sub xchg (bad) xor sarb and push out lea iret rcl enter jp movsb js mov xchg (bad) jno (bad) sub jno in mov scas out (bad) push inc movups cmpsb sbb out sub popa sbb ljmp cmp jmp shrl lret (bad) icebp cmpsb pop je sub or gs lods adc add push pop popa ja loope out jo jmp aaa sbb sbb sub xchg xchg xchg xor dec mov iret sub add push nop jnp mov mov and pusha fs loop fwait inc daa or mov hlt dec in xor mov sbb jg xchg adc sti cmp jle xchg clc clc lea cmp mov inc stos in arpl jle add sub push cmp jb push gs mov cmp pop inc imul ja rorl push mov add dec (bad) mov jae xchg cmp imul or push sbb cmp dec test cmp test pop jmp mov mov jns or jge pop (bad) jg push xchg stc out add ret cmp mov hlt icebp push mov sub mov sub clc add pop mov inc test dec jbe test push mov or incb mov jnp in nop testl xor adcl (bad) aaa aad sub sub inc sub daa inc ds inc jne sub insb sahf mov sbb adc or stos cmp es test lock dec mov adc push daa in mov cmpsl into mov insl mov shll xchg xor insl jae push cltd or push test jl mov sbb dec loope daa in xchg sar push push push mov add xor sub mov dec outsl jecxz mov pop rcrl mov fsubl loopne cwtl mov (bad) pop lock je test popa add inc push icebp es out mov xor (bad) repnz jb stc push popf ds and push call dec mov loop inc sub daa adc adc ret clc sbb push add inc adc mov fmuls test mov out push mov sbb xor cmpsb dec cli imul imull dec icebp lods lcall adc pop mov inc nop addr16 ds cld mov add call inc jg call jecxz push clc clc jmp jp fldz pushf in test (bad) call outsb dec xchg scas mov shrl negb scas add xor adc sbb outsb mov pop dec dec loopne nop adc outsb mov addr16 not sub push scas fnstsw jbe add add jl inc mov popf stos adc or lds ja je adc cmp pop add mov pop cmp int3 mov push loope xor stos dec in arpl and outsb push sti loop and pop sbbb cltd push shr dec dec and inc jo add ja aaa inc mov mov mov jge test iret dec nop pop dec and movb or in test sarb inc shll or repnz dec lcall lret push or shll add pop lea fcompl in notl stos sub test iret jmp xor (bad) aas push mov lcall mov fisubr insl jle cmpsb lock mov push lods pop and imul pop mov data16 lea dec or inc test les sub in mov adc fdivrl xor cld or push out jmp push int3 push push xchg rolb push mov pop push sub jno push enter lea sti sub rorb mov xchg adc mov sbb addr16 (bad) jnp gs dec mov sbb lcall cmp pushf xchg call sub cmc jo pop fdivrp test js add xchg sbb je add add xchg push aas out mov icebp xchg jmp ljmp cmp mov sub pop xor adc jecxz clc fistp sub mov lret sub and lcall add cmpsb addr16 int ret scas or xor cmpsl jge pop cwtl add ljmp push cmp rcl xchg lds enter add jo (bad) ljmp dec (bad) aaa (bad) xor inc and aad mov fadds sti xchg pop mov inc iret xor inc loop push add inc (bad) adc or loope in test test les add jne pushf dec (bad) mov std das mov in pop outsb mov sbb sbb adc test scas push arpl addr16 sub fcoml rolb mov push repnz dec adc and jnp xor ja popa adc mov popa add push lcall aam scas ja xlat xchg out and loope js mov (bad) in inc int movsl call decb jo push out popa stos jmp jl lock pop xchg push mov pop inc mov sbb data16 mov dec fildl lods add cmp bound data16 push (bad) jl ret or pop mov mov aad or fs jae aas addl pop aad mov test outsl out xor add inc push cmc mov std in lcall inc jb gs scas jecxz sub lret xchg icebp sti cmp jecxz sbb or ficompl xchg add push es js scas mul or sub sbb in insb into mov adc inc stc lcall sbb inc out hlt and cmp sbb jbe mov xchg mov test add js cltd xchg pusha in xor cwtl jp and into ljmp loope jp xor loopw inc in pusha std adc repz aaa lods hlt (bad) cmpsl push dec es (bad) mov sub out pop mov in sbb int3 or pop pop pop cmp xchg dec sbb cwtl movsl cmpxchg dec adc xor fldenv out movsb mov cwtl xchg xor fs and stc add pop mov movsb dec loope gs push adc push pop inc inc and sub (bad) push lods data16 mov lea add outsl jge fnstsw push jnp stos adcb cmp lea movsl test jle sub mov mov and jg and mov (bad) fsubs sbb pop and data16 pop cli stos jge movsl pop mov mov aad scas aas fildll bound adcl adc push sub and mov mov fs outsl lods pop inc aad clc xchg incb inc lock or hlt sbb mov rcrb into inc out test push cs sahf stc dec xchg scas mov mov adc cmp pop pop sbbl jo leavew into stos fs js std cmp popf sub rcll add enter fwait add lret cmp andl aaa loopne mov pop lods mov fisttp lret rcrl in xor inc jnp mov ftst das gs dec xlat pop push mov or call iret push jns int3 loopne xchg aam pop sti add xchg or xor je or mov gs push push mov push sub scas fsts push mov loopne push sbb cmp rol adc outsb cmp jno dec inc lret (bad) or sbbb mov movsb nop inc mov xorl add je dec sub inc lret fcoms inc cmp (bad) mov lea lret cmp jecxz (bad) jo shlb das xor cmp mov mov lds jns xor ljmp out enter cmp test addl imul push aam pop cmpsl jge push aaa xlat (bad) (bad) inc popf pop in xor sub adc (bad) mov inc sbb out in movsl std and adc or mov sbb into lret popa xor rcrb dec ljmp outsl push inc jae mov addr16 inc ret jl cmp rcrb push idivl push pop mov pop pop sbb mov push fisttpl pop ss fist mov aad inc clc and stos hlt fmuls cltd adc xchg add das dec xlat mov sbb arpl xchg gs add lds xchg ds sub add dec sbb cmpsb xchg pop sbb lret cltd lahf mov (bad) scas push pop and jmp int add sbb faddl push notl subb sbb fidivr test enter ss push iret inc inc xchg mov jae lock push mov test mov push push mov xchg mov push test mov ret mov and dec jns lods jo xor fdivrl insb mov outsl (bad) (bad) sbb pop out mov pop scas ds sub or jp jae stos insl ds pop pop gs pop daa mov jecxz push inc popf subb aam xchg push xor mov leave sahf jl mov (bad) cmp pushf mov push xchg into insb outsb sbb call inc sarb cwtl or add dec push cmp sbb push cltd js mov pop add pop hlt push sub and lret pop gs rorl sbb jb push mov add pop add pop movsl out adc fnstcw lock in mov push rorl fs lcall in das mov jecxz inc fistl xchg cmpsl shlb notl je mov mov int pshufw addr16 test (bad) div jge sbb stc xchg inc inc ss fmuls outsb pop sub mov xlat cli ljmp adc pop gs mov push ds scas jb arpl dec xchg (bad) mov enter cmp aad mov push xor lea xchg push dec gs adc data16 popa add add mov sarl or jmp in lcall fwait sub pop std mulb xchg mov in xor mov xchg pushf outsl mov sub insl mov mov jmp mov movsb dec pop gs inc (bad) mov (bad) out xor pop mov inc lea mov push (bad) rol adc jecxz pop daa xor push push in and mov insl jno cli loop inc dec add (bad) jo int popf push fcom jge into ds out pop sbb (bad) or fwait (bad) xlat (bad) mov shrb mov lds or xchg cwtl xor loopne xchg push and sub pop jo mov (bad) jp dec and out lods icebp (bad) in pop fs lret cmp inc push add cmp sahf inc in (bad) dec cltd (bad) out popa or inc jns add cmp dec push (bad) mov stos xor stc pusha int mov adc cmp xor jns mov or cmp fisttp dec stos jp cltd clc movsl sub fdivr pop test lock pusha inc or mov (bad) mov pop pushf push jmp aam jecxz jmp aad adc sub cmp mov sub mov insl pop das and fdivrl push adc sbb sbb fwait push jge and push pop imul xchg mov iret roll ljmp testl xlat and pop cmp jb es nop mov mov or and mov adc and inc hlt and out std push mov push mov in mov mov and leave dec mov xor sbb (bad) jmp les dec and push ja jmp leave jg fldcw or fistpl outsl leave adc ud2 mov fnsave mov and jg adc jle fmuls aam mov jo aad icebp outsb adc push adc push jle icebp fcmovbe fstpl enter add sub inc adc xor mov cmp stc pusha dec pop in jmp fidiv mov dec imul xor xchg push negl ss mov sbb in inc insl rclb pop xor mov mov es dec dec popa leave loopne push push dec lea mov xor xchg mov sbb jne push adc stos jmp xchg daa xchg divb inc or mov sbb mov rclb push outsl dec cmc inc pop jnp xorl add fsubrl jl mov xchg inc cmpb rcll shl ss mov jno (bad) lcall cmp rolb fidiv repz loopne ja and push pop dec shrb sub imul test fdivrl out jb inc cmp subl mov mov test lods fsubrs and fistl xchg sbb dec cmp lods shrl (bad) add insl pop jno hlt mov ret clc pop test dec rcll popf (bad) push in (bad) in cltd cmp pop adc jno lahf ss and xor dec adc mov addr16 out xchg fist mov cli ret jle pushf lock inc ss pop sub push mov dec test daa inc xchg out inc xchg pop (bad) hlt jle sub add aad sbb dec stc imul pop mov inc pcmpgtw jecxz adc adc cs in sti mov mov (bad) mov xor jbe dec sbb xor inc in (bad) ja lds scas mov into fildl imul inc call arpl add mov or mov pop mov andl aas sub xor add add mulb pop aaa pusha jne or loope mov mov test fwait stos repnz lcall jmp pop jbe sub int mov sub cmc jnp jle xor jle scas insl fstpl negb xchg dec js add ljmp fnstenv dec outsb loop bound mov and aam mov cmpl add loop cmpsl daa xor jno jo ret scas sub icebp mov lock dec das popf orw out mov push or (bad) mov jae mov test scas mov jle cld jmp pop stos fwait push (bad) rol cmpsl cli xchg fucom adc fnstenv imul cmp cli enter test push or js imul pop cmp and or inc enter orl push mov add mov dec add push movsb outsb inc jb cld sub in add imulb push (bad) xchg repz xchg dec mov xor insl inc mov mov pop sbb cmp cmp pop lods iret cmpsb adc pop or xchg and mov mov jg movsb and or add fwait (bad) rcl pop jno fldcw and lcall mov popa mov jl std jg or mov in outsb js xor and aaa sar add pop sbb icebp inc xchg push fist fwait mov insl mov dec ljmp sub add cmp add (bad) (bad) dec lahf adcl add dec pusha push jp cmp sub mov fwait push and scas divl sub adc xor cmpsl push fistp cmp loop fld test mov mov cmp loope push push xor pop clc das pop jp mov inc aaa sbb cs push inc int3 fs fucomp or je sbb push push shrb jae ds add ds dec adc xchg pop lods ljmp or out fs fcomps lcall add outsl xchg mov sti in movsb cmpsb mov in (bad) xchg int3 dec jb dec ljmp cmp ja cmc dec rcr jns (bad) dec mov (bad) xor mov cmc lock vorps fbstp fiaddl sub imul outsb mov push dec mov lcall mov imul add les xchg movsb jo dec push ss inc add lret jns xchg pop mov sahf popa fwait cmp sub jns jp mov icebp stc sub ja outsl idiv aas adc sub gs in leave push mov and in fcoml aaa sbb mull or adc jns cmc sbb lcall pop mov (bad) lret (bad) mov (bad) xchg dec add mov mov dec or or test pop scas in xor cmpsl lcall pushl jbe add shll xor daa pop pop lcall add sub cmp bound pop (bad) adc mov orl adc popw out clc xchg cs insl inc pop dec daa pop loopne xor cmp lcall insb int aad and pop add out push push in in sub dec fcmovu out push mov insl fucomip and (bad) movsb dec jnp clc jmp push push sahf imul mov (bad) jnp xchg loopne mov dec xchg sbb int3 insb cmp adc (bad) fwait jb lret je (bad) sub ljmp mov dec test (bad) int3 enter cld clc ret aam cwtl sub ljmp fs inc jge fmuls or mov mov or xchg adc xchg add jp lods (bad) or jg jl (bad) jne data16 mov inc adc push push leave pop xorl hlt mov dec outsl add sbb subb bnd xchg xchg call in imul pop aas data16 repz in cmpsb push adc dec mov sbb stos sub xchg stc mov (bad) aas push push movsb (bad) std arpl mov inc adc arpl xor ficoml mov imul (bad) fdivp inc jle xor xchg mov sbb push popf leave fild sub es rcrl ret in cli je cmp jb in mov push jae xor lahf or add pop and adc sub dec lds popa sub in loopne mov mov (bad) mov add sub jmp push out dec je into (bad) testb inc jb dec out and xchg mov rol in outsb insl jnp dec pop add leave xchg add divb ret cli sub mov cmp inc mov jmp adc iret and ret mov pop push lret js imul sub fwait (bad) mov pop xor inc lds xchg lock jbe test push lock lcall dec push xchg lock inc (bad) fistpll outsb push inc mov mov sbb dec push stos xor mov add jle mov je (bad) (bad) shll out jo mov popa jns add (bad) adc pop sbb imul outsl orl movsb stc add (bad) pop lret adc in inc add fwait cmp repnz adc push xor mov in (bad) insl jb sbb mov insb and add or fbld aas nop sbb ss div addr16 icebp lds fiaddl push aaa mov inc push jnp adc (bad) inc cwtl pop ljmp loope ja movsb adc fs xor out pop jge iret cmpsb jecxz mov int jge jl out hlt dec in and dec loop jge,pt xor sbbl outsl add std mov fs out popa xor push ja test aas pop pushf mov cmp orl (bad) or push pop cmp cmpsl pop pop adc repz mov mov mov nop push fistpll cmc and xchg leave ret into lcall cmp lea dec lret imull outsl mull loope aad sbb or outsb or pop xor inc lret mov rcrl xchg mov inc popa daa sub mov xlat int3 xlat cld xor push (bad) jae ret clc lods mov inc ja adc loop (bad) mov fimull rcll aad adc inc fistl push fidiv les scas push jno cmp cmp dec in daa jge inc rclb js add mov mov ret jo push leave push (bad) loope ljmp popf sub sbb (bad) subb mov cli xchg rorl sbb or rclb rcrl sub mov int push push xchg cltd add dec sub or jae jecxz les dec (bad) (bad) mov cmp sbb or dec cmp shl and mov loope fdivl cmp out jbe mov and cltd add jo mov divl dec or loopne mov call cwtl dec fldt pop mov adc sbb jecxz xchg js fidivr sub inc jge pop dec push xlat cld mov inc xchg (bad) (bad) jae lret inc pop or rorb adc lea addr16 mov lods scas pop dec sbb sub js je add push into jmp cli call addr16 test adc sub mov sarl ja cwtl popa cwtl jbe xchg lret daa pop pop mov inc cli call inc mov cs sub test lret lds cli sub outsb cmp push sbb fiadd gs movsl loopne jnp dec lods cmp mov push jmp sub in mov inc icebp sbb lret cmp mov popf int3 and jle jmp and dec pushf jmp mov jnp mov hlt or mov mov nop cmp int adc inc mov push ja push stos fidivrl dec jb or add push cmp xor push ljmp sub add pusha xchg dec insl push rcll fldpi pop push jecxz inc inc shrb fadd push dec xor jo (bad) iret inc xor (bad) int das js fildl fdivs pop (bad) pop push fldz pop jmp add or ret mov cmp push sub mov and jnp pop jns jns xchg hlt mov dec xchg mov push mov pushf lahf shrb insl icebp push pushf push add lods dec hlt loope bound jo inc int scas and or mov mov loop fs push mov push xchg loop jae scas lock int add orb cwtl inc push ds mov out out mov in and je repz (bad) and outsb sub xor popf fidivr and shl jecxz sbb or inc stc pop mov adcb mulb mov orl add mov nop enter cld add ret jp pop incb mov and and mov jl jl dec popa (bad) shll xor cltd inc (bad) sbb test lods fstl push call inc jb lea jmp aam xchg or adc xchg push pop packuswb dec test jl fdiv push shr inc pushf adc arpl call push popf fnstsw or xlat call (bad) jmp mov push bnd xchg cmpsl sbb js cmpsl mov hlt enter mov aad jb xor lret mov xchg push dec scas hlt push pusha ds stos xchg xchg scas lods dec sbb insl push add fild push dec rcl xchg bound add inc xor and jle push loopne push out mov xor test data16 les (bad) xor stos insb dec cmc xchg jnp jmp aad outsb and or fistpll rolb push addr16 ret ror popa sbb inc mov and add hlt ljmp repz dec (bad) mov pop inc cmp fstl sbb fs and push sbb mov shrl addb xlat cmpsb test push icebp xchg lea sub test add ljmp pop push mov (bad) cld pop fstpl inc push fimull xchg and ja rolb jbe adc jmp push pushl push jg dec dec movsb jns out imul imul push shll push dec pop stc jbe push mov push sub dec sbb mov les cmp dec out xchg cmp xchg test bound pop in bound dec push inc and pop (bad) dec outsl roll leave rolb mov lock call loop lea scas ret mov dec mov ljmp popf sahf loope push popa sub aam dec xchg jnp ret push and dec sbb dec insl pop mov shrl lods mov sbb cmp (bad) jb pop push test xor imul inc cs fildl mov cmp lods xlat stc mov cmovne lock popf adc mov sbb dec mov jnp fwait nop js daa lock out dec in mov xor cltd lock call lds add (bad) sti or (bad) fiadd test icebp popf pop std jae adcl inc dec mov push mov dec inc dec mov inc mov xchg loope shl in and sarb add stos lock ficompl dec repz mov mov inc pop xor jae push ja test aad imul rcl into test jp inc sbb push mov fiaddl int ljmp xor cmp hlt cmpsb push aaa push and xchg mov (bad) mov push sub mov das push dec jnp insl movsb sarb lods xor cld add iret pusha int lds push push jmp gs out push ja cs vmptrld jge push popf mov mov cmp inc pushf xor and pop stos bound lock outsl daa repnz test ret repz push ljmp (bad) je cmp repnz test sarb mov mov push pop jge push nop add dec (bad) call inc jns mov ja mov subl push mov test loope and das lods pop pop clc push bound loopne jp mov jo fild adc sbb ja in or cmp repz stc mov out xchg jbe xor clc cwtl cmp cmpl mov je shrl in fwait xor mov jo es and imul mov cli push dec adc sti pop pop pop mov xchg (bad) iret daa movsl inc pushf insl push jo iret adcl pop dec or xchg inc rcrl pop out arpl jle ficomp outsl or mov pushf add mov xor sbb scas fcmovu pusha ljmp adc jo rolb stos idiv add pushf xchg mov jnp jp and xchg clc mov jp mov add jl mov pop mov adc xchg sub sub add lret add cmp cmpl or mov mov ljmp jno push jns inc fnop sub push push rcll mov adc or dec pop nop icebp iret outsl mov test mov mov (bad) dec lahf or mov rcrl dec pusha les sarl (bad) adc test or jno mov loopne (bad) dec or mov ljmp cs mov add mov dec mov cmpl fcompl roll lret shlb sbb xchg rcll xchg mov data16 cmp mov rclb sbb inc outsl mov dec sahf jo mov inc xor add adc insb sbb aam mov adc push lock hlt js push push into (bad) mov dec outsl inc or sub sti pop cmpsb bound mov std mov lcall lods jg (bad) jg repnz (bad) daa in inc cltd icebp mov out jo popf test xor loop fimull scas sub xchg jl cmp bound fcmovbe dec das push imul rorl cmc pop push dec in aas popf add pushf add mov mov stos outsb sahf pusha mov push cmp mov (bad) cpuid cli je sub in push (bad) sbb pop popf mov xchg loopne xchg jp mov push cmpsl loopne pop cmp and pop nop outsb mov dec mov loop lds mov or rol lds mov dec out push lds jmp lea rcrl mov push sbb mov leave fs fisttpl in mov data16 xor pop test test adc adc hlt cmp xchg mov stc rolb fstpt int3 sarl lahf in mov pusha sbb sub xor int mov mov loope aam jnp xchg movsl add (bad) jp out cmpsl adc xchg out xlat rcr push sbb in (bad) sbb push sub jb or mov jne test mov xchg (bad) xchg xor or sbb xchg cmp jl cwtl bound jl pop std jbe aaa jb adc adc rorb orb add xor int movsb sbb cmpsl insb loope ret mov les out xchg push les cmpsl push lods jb sbb jge jae aaa imul inc pushf sub cmpps (bad) std test cld lds das movsb ja jne inc dec jb jae or dec xor notl push subb lock fwait add fcoml or inc lret nop in into pop ret mov lret insl or sbb xor fwait iret mov cmp mov rorb mov mov sub lods cmp mov dec scas dec out and or mov push fistl je jle mov lea clc repz popf or and xchg push and xor std fisttpll jnp divl test arpl sub mov adc and sti pushf and ret insl cmp nop into cmp xor push insl aaa push add lea jecxz mov dec sahf aad das jmp sahf sahf xor dec (bad) mov push adc jbe sbb dec push mov gs or lods xchg outsb (bad) pop cmp (bad) mov sbb adc pop arpl xor add push int3 xor and test xchg leave cmp fisub insb xor jmp xchg stos push jb lcall cmp in ret ds aaa mov pop out dec shrl lret cli sub roll mov std lahf mov aas pusha mov imul push sbb and or bound in scas fldl mov popf stos ds mov das xchg insb cmc dec jp cltd add aas adc adc lock mov cld fwait lcall sbb (bad) pusha ds std mov xchg cmpsl outsl and jmp (bad) icebp mov xchg sub sahf adc adc dec jl or stc rorl xchg leave xchg fistp movsb xor sbb stc add mov (bad) cmpsb mov dec es mov hlt sub mov ret ret sub and dec sbb sub sbb ja bound outsb outsl mov mov ret rol insl lods lods inc ret push fadd and or mov and xchg ret les xlat push dec rcr sti mov scas push in (bad) (bad) push (bad) sahf in inc es dec pop flds imul inc js fcompl adc mov arpl push scas test and fist mov push insb dec (bad) popa lcall mov stc xchg sbb xchg pusha jg popf mov mov and out leave mov xchg fcoml sarb pop pop scas addr16 jp sbb pop lea push cmp rclb sbb test xor fwait popa pop cmpsl dec mov sub (bad) (bad) sbb out (bad) je dec xchg xchg sbb nop addl lods mov jbe xchg repz jo jp cmpsb mov sbb in xchg daa dec pusha (bad) cmp jo sahf mov test imul add out jbe xchg notb jo flds lea and and (bad) jae pop push roll xchg ja (bad) sti push pop add popf es sbbl cli adc xor out dec jae jae mov out adc mov mov cmp and in pminub fistp push fstpl out movsb inc sub ljmp mov mov fidivrl xchg aam ss push test mov mov cmp xor fsub dec dec ret add (bad) mov xchg fcomps inc mov mov mov or rcl loope mov pusha dec cmp lcall fdivs push stos mov std mov lock mulb orl pushf and dec bound test fsts mov inc cmp out fstpl (bad) jbe repnz xchg xadd rclb (bad) mov mov mov test call fbstp (bad) mov add outsl mov hlt xchg add decb ds lea scas push add adc imul hlt loopne adc in mov arpl mov xor loope xchg pop mov out js pushf xor cmp fldenv or js sbb fcmovb sarl or or and add add and push or cmp bound enter int sti or and adc repnz hlt pusha and ja iret lahf pop mov add xlat jl mov sbb dec ljmp cmp (bad) scas scas xor sbb mov cmpsb mov ret pop rcll xlat repz sbb fisttpl imul mov aad (bad) shll imul addr16 bound jo cmp xor fcomp repnz jmp inc pushf subl scas sbb enter cmp xor ljmp or adc repz loop fs fwait sarl (bad) cmp dec jo mov out mov cmp std nop sub (bad) pop sahf ret (bad) adc sbb add fcoml mov mov jg jg mov cmp cld jmp mov mov cmpsl cmc cmp and in aam repz in xchg mov jecxz sahf jmp repz sub lret lock jecxz dec sub out mov cwtl inc or mov and stos (bad) mov cmc dec inc loope repz sti or leave jle cmp sub pushf out adc mov mov mov loope mov mov xchg cmpsb add imul mov push or dec enter jl mov adc leave mov cmpsl loopne xor arpl loop sti sub jae mov daa iret add lds fsubs inc pop xor js add pop lods inc mov int3 aaa mov scas mov lret cmpsb out xor std and mov sti mov pop cmp in dec or imull sub arpl add sub adc in repz push inc adc cmp int outsl sti sub fisttpll mov cmpsb jae sbb jne inc movsl aas sbb push ficoml xchg fs cltd das les (bad) jo mov push cmp daa sti out mov inc test jle jb jg aaa mov addr16 sub lock fcoms push stos fmulp or pop in jb xchg shrb ss stos test cs out cli inc outsl int fdivr sbb jne jmp pop ror xchg add ret mov adc xchg sbb sti (bad) out fldcw jns jnp rcrb mov add fbld mov cmp data16 cmp incb xchg insb sahf or xchg popa mov cmpsb out pop es xor into divb lret pop mov sti loop scas and adc loop sub movsl cmp cmp dec mov (bad) loope cmpsl insb sub cmp sub loop sahf dec gs push outsb push jnp cmp ljmp mov mov dec mov xchg add jnp (bad) je movsb lods aad jle jne test xor mov inc push fwait cmp jne mov stc jge lods dec ds cmc out or or sub (bad) jne add mov mov orb outsl rorl addr16 xchg adc into lahf fwait xchg mov nop ds xchg add push add add and movsb jle dec xchg xchg dec out lock fs inc imul adc push in pop arpl insl and adcl imul in popl xor pop stos shrl nop adc adc addr16 add data16 push fstpl jo add sub mov loop popf and mov or cli pushf jecxz push call mov cmpsb loopne sub adc jns mov cmp insl bound or cs mov inc negb jo pop cltd cmc or cmpb cmc out or js (bad) pop xchg add mov aad nop ret jne in loope mov ret push sbb idivl mov cmp cwtl into mov scas pop mov out jecxz xor push out (bad) testl cli cmp pop add sahf aas icebp sbb (bad) xor rcrl pop pop dec stos mov mov mov dec xor pop push cmp cmc jns jae sub pusha xchg dec jo clc add fisttpll mov fisub adc inc loop das fdivrl mov cmp mov cmpsb adc fstpl mov into out call insl add sub mov bound imul cmp sub and cmpsb paddq add adc add adc sub sarb das lea or call hlt test or sub pop adc xor mov mov cli enter pusha fstps mov pop loop call cmovbe adc xchg push and out xor cmp in mov xchg popa fdivs scas into fwait std mov mov cli lcall test jmp test data16 imul or shr cs sbb outsb repnz popa mov mov mov loop into cmpsb ljmp sahf lret jo dec std xorl xchg cmp dec add fcmovbe ss into pop adc dec cs mov pop pop hlt sti pop xor lds add fwait pop loope jp push icebp inc rcrb stc push push incb dec jmp xchg fsts mov xchg sub xor cmp sqrtps and push aam mov aaa mov sbb cs xor push (bad) and or out out push ljmp or insb push cmp stos add mov jne clc sbb mov std jge push mov aam and mov loope (bad) adc cmp mov cmc addr16 dec xchg push push cmp mov pop lods and dec cmp cmp mov and roll cmp cmp jnp cmpsl or ja jns ret scas lret jae out cmp lea add cmpsl pop jne mov sbb sub scas mov dec mov in fwait aas imul rcrb add sub stos ljmp push cmp iret mov push out lods inc cmp je jo push mov ds xchg pop jmp iret sbb out leave mov jge xchg pop pusha mov mov pushl int mov shrb ljmp xchg lcall in pop (bad) mov push inc popa push push sarl ja push popf fisub shr jo push ret stos dec jecxz leave xchg aas test sub mov sub sarl and packsswb test mov pushf pop jne stc pop ss dec pop out outsb jecxz adc aad pop adc outsb scas jbe and nop (bad) jno mov sti jno gs mov jp test ficompl lret std push mov jae aam lock or dec mov xchg or loope faddl dec push pop (bad) adcl mov inc std rclb cmc mov adc es jae lds (bad) mov popa inc pop sbb popf hlt mov push mov pop cmpsl iret ret inc xchg mov mov cmp add call cmp inc jmp pop push mov pushf push and out cltd sub daa andl pop jl movsl jne adc mov sub into cmpsb jp repz insl call pop fcomps jbe cmp insb in push pop scas mov add cmp xchg and jecxz mov leave mov fnstsw aaa cmp pop js cmpsb out lods es and pop jb cmc add insb ret mov jnp dec loopne mov xchg out push gs inc cmpsl test test fidivrl (bad) mov out xor shrl ss cmp mov cmp dec jns ja arpl leave in mov arpl daa test testb es int sub adc mov mov pop xchg (bad) mov fsubrp xor or pushf clc sti (bad) pusha adc cmp xor inc (bad) test fcomp scas cmpsb xchg test daa es mov dec xchg xchg jg and add dec mov inc dec lahf out xchg mov dec jl test repz mov mov mov mov and mov into shr cmpsl adc cmp jg sarb je pop ljmp (bad) call mov sub mov in aas pushf add out dec cmpl repnz icebp jecxz hlt xchg pusha insb loope nop sub or pop mov aam aaa pusha mov sub push leave lea cmp jge mov push and xchg (bad) xor xchg aaa xchg pop fist and jmp push pop in add popl or stos aas (bad) mov xchg (bad) jmp test pushf aam sbb adc ret enter xchg jmp lcall pusha add clc dec stc mov cmp cmp mov cmp and cmp loope push sbb pusha xor lock andl shrl jle adc test cmp jbe rcr jbe adc inc imul das jge sbb sub xor stos mov mov mov mov (bad) ljmp xchg negl bound ljmp aad mov popf mov test add lods loop stos (bad) ja adc call das movsb mov ds arpl cmp xchg fldl mov and push and scas xchg in jge and ljmp test in dec (bad) mov lret test push jbe fstl fcompl mov pop pop je mov sub loope pop and ja cmpl (bad) arpl cmp (bad) in xchg neg stos push popf popa or pop add jnp mov sub jl andl lea xor movsl xor ficoml js imul push lret int3 mov (bad) loopne xor rclb lock flds and jae cmpb cmp (bad) aam repz je cmp and and dec push inc dec or sbb std push mov sub push push pop cli push mov repz mov inc pop mov push fisttpl push clc mov push call ss stos and inc stos add fcmovne clc lahf test popa das pushl (bad) clc int int3 and and repz xchg pop or cli mov enter in inc xor in cmp push fisubrl dec clc push test and outsl cmc rcrb int3 in xor mov push out push lcall loope ljmp outsb or push push sahf js inc outsl xchg es dec mov mov jo xor mov test inc mov jns cld insl mov xlat mov sbb sbb push pop mov int3 lret cli add add adc aam movsb int stc lock xor stc pop outsb rcl outsl sbb scas fildll and pop cmp fld jl pop add pushf hlt negb aas adc jl pop sbb xchg sub xchg cltd sub or add jp iret push mov mov push fldl rorb psrlq sti mov pop les inc call fldcw aaa mov xchg ss push out jge add out sbb stc inc jb rolb mov push pop add mov cmp lcall xchg test pop repnz stc outsb xlat cmc dec jg inc xchg int movsl pop std cmpsl sub call dec or xchg ficoml es dec add ret or hlt pop lods dec stos sub mov dec cmp int3 jmp test or das movsl popf enter shrb pop mov cmp cmp xlat daa fldl push pop cs sub fildl and adc popf inc xchg testb pop movsl and in jl rorb mov or mov cmp ljmp and movsl cli lods xor inc pop pop adcl mov shll add addr16 inc aaa call mov stos daa cmp ljmp push iret xchg std cmp dec pop stos pop adc repz dec iret dec cld push and jecxz pop ret xor add xchg lret and sbb add aaa test (bad) iret push fisttpl out inc popa mov or adcb orb sti or loopne push dec test lods into lods sbb lods notb inc jns jge jo push in scas dec imull (bad) out int sbb int3 cmp in sbb cmp (bad) icebp jo fistp cmc ds rolb sub (bad) xor (bad) lret ret test or daa sub dec jg lret and cmc nop stos or fsubl wbinvd aaa ljmp xchg adc data16 dec mov fcmovnbe push xor jle ljmp hlt lock push push jae hlt rolb adc fs mov (bad) pop call cmp xor jno stos shr dec xor fisubr adc pop fldt test daa sahf pop xchg mov pop cli (bad) adc push mov xchg mov cmpsl lcall mov std test cmp cmp push adc imul dec push icebp pusha in cmpsl fistpl out fdivrs push inc lea mov pop mov xor test and lea sbb cs leave xor (bad) cld mov cmc pop hlt shrb mov xchg enter inc jmp dec sahf cmc nop cli push xchg fbld hlt aas cs idiv push and mov pop xchg fcmovu cli (bad) iret sbb mov adc xchg mov mov adc or loopne lret xchg movsb imul add bnd pop mov cmp pusha inc lret imull pshufw add fisub sbb push mov outsb add xchg mov dec xor mov ja lahf inc mov mov sbb fild push inc gs push jmp mov rcrb inc push or shr and fs pop mov push imul mov jg je mov mov jp das mov sub ljmp cltd addr16 jecxz enter push dec cmc or mov push loopne cli leave inc or jle ret es cltd insb cli cltd pop les xlat push orl pusha daa push (bad) repz pop (bad) test add add or daa mov push lods or push dec inc dec int aaa mov jae cmp cmp pop ret add lea movsb icebp push mov xor pusha mov leave jb jecxz fxch jmp xchg stc movsl imul leave adc pop inc xor xor jno sbb xchg test dec lock xchg fcompl adc and mov mov or inc sbb addr16 mov or aam and mov sub repnz (bad) arpl popf (bad) xor or xchg mov cmp dec fcoml sbb push out dec xchg adc loopne fsubrl clc sbb popl dec pop mov and pusha pop xor out rclb lret and daa div js inc (bad) sbb out sub rorb test movsl inc jnp add jl ret dec roll andl cwtl lock insl mov lret xchg pop jns xchg mov and mov add enter push fcomi repz pop pop pop test lahf movsl sub hlt lods into imul push dec stc ficompl hlt arpl adc out (bad) cmp sub push repz sbb sbb or sbb rorl lcall cwtl cmpsb call out mov lret pop cmp fildl or insb xchg jp psrad cld cli inc jb les (bad) xor add push push mov mov mov dec adc movsb xchg mov mov das mov insl push xor addr16 out xchg insl sub push pop jb pop sbb aad incb adc gs mov or mov loopne cmp jb data16 pop and dec hlt xchg sub dec lods js cltd fildll adc jmp lcall xor cs add (bad) mov mov dec in aaa sbb rcl sbbb and xlat lahf mov or int3 mov hlt sub stos cwtl outsl mov arpl and sbb fildll xchg xor dec or jecxz pop dec cmc push pop bnd maskmovq imull inc pop mov xor pop cli loope stc movsb jge enter mov (bad) inc jmp pop mov (bad) inc mov sbb or and sub insb ljmp mov lock out movsb cli not xor adc xchg pop xor xchg pusha sbb pushf mov sti cmp mov loop mov add lcall mov or or xchg cs call mov push add sub ret mov cmp jg push test cmp or lret lahf mov cmc (bad) lret mov xor out test jb jecxz push iret aas sbb gs cmpsb xchg xor das fdivr gs add add cmp pushf adc cmp push jmp pop test in inc lods cmp test mov ljmp mov (bad) cli rorl insl lock xchg (bad) scas jae (bad) xlat dec (bad) adc stos and loopne cmp sbb jns mov mov cltd insb xchg push xor mov out xchg push pop popa or sbb jle and cltd jno scas xlat movsb pop jno ljmp xor sub lods inc icebp pop mov push or int3 loope mov inc sub mov je cmc ret dec (bad) fstpt lods nopl mov rolb (bad) dec mov (bad) aad sub pop add out jo add mov arpl in stos cmp movb test shlb enter jle adc xor (bad) mov jbe pop xor or movsb xor int3 xor imul cltd je insb imul cmp pop mov cltd cmp incl mov daa add fadds pop dec (bad) not mov arpl aad inc dec pop roll push stos or clc shlb sub inc (bad) xor jnp or or xchg jbe loope cld (bad) jb popf sti lcall dec fisubrl loop stos insb lcall (bad) (bad) mov inc dec into in and fsubs push pop loopne pop xor dec test aaa inc fcompl out push or leave (bad) leave movsb xchg popa jmp sbb fcomps mov js xor int xor sub mov push xchg out xchg mov js xlat xchg cmc push add sbb sub (bad) mov jo and fwait pop lahf add inc pop jl pushf push lea xchg fisubr ljmp subl mov dec xchg mov gs imul stos jl insl sub xlat mov mov hlt mov mov fldcw stc inc into sbbl aam sbb pop ret std sarl outsb mov xchg mov call mov test pop in das or cmp imul in int mov ja popa mov out aaa pop sub and cld popa inc sub jl dec xchg ret dec inc pop pop stos (bad) dec jbe xor aam aam jg jbe xchg ret pop outsl cmp loopne pop jo aaa idivl fldenv fwait stos jg (bad) repz test ja xchg je add cmp (bad) aaa in xor dec out (bad) jno dec jb lcall rclb ja aam (bad) iret cld xchg lods sbb stos mov jb cmc dec mov sub leave in psadbw not lock in adc and add fdivrs int3 lock cmp cmp jbe lret and lcall jae test aam cmc loope faddl subl scas lea dec xchg loop dec lret mov shrl out inc jle enter aaa xor xor and adc fsubl sbb mov pop and add dec pop lods stos sub sbb lea ja cli jecxz and or int pop mov pusha xor pop pop mov std in (bad) (bad) lds inc lcall xchg and jo and pushf bound insl pop (bad) gs xor (bad) xchg divl mov push inc mov xor and fwait push push repz or popf inc xor push sub int repz es sbb jge pop xor in es adc enter sbb movl xchg imul add xchg cld cwtl xor jmp cltd aam in sbb sbb lods xchg dec inc sbb lods xchg call mov mov das ss js insb inc xchg (bad) mov sbb sbb jb test daa imul and daa add adc test mov ret pop cmp aam mov dec fbstp xchg out inc lods (bad) out pop mov dec fildl jg jne sahf dec fcomps mull pop adc (bad) aam xor pop jno sub xchg cmp sub stc enter push (bad) xchg cld fcmovbe mov push jns shrl or mov cmp cs popa inc jl pop and int dec mov jg pop cmpsb (bad) mov addr16 jl fs scas jp dec insb sub stc fbld mov add adc int pop bnd sub xor scas and jne in xor lods lret enter jb xor aad or xchg mov push movsb fdivs add out loop push add std nop (bad) jns repnz adc or fcomps inc and rorl xor aam icebp ds rolb lods mov ficomp xchg fbld xchg test mov loop,pn push dec inc fwait (bad) mov fistpll adc xor mov inc cmp inc add cmp add push lcall in lds test cmp in loopne mov mov test lret sti popf add mov pop add popf push call test icebp leave mov add push mov pusha imul daa not cmp imul fidivr popf lods dec mov push arpl mov outsl sahf pop jae cmc in mov call fcoms and adc pop or jb addr16 lods idiv mov add mov dec jmp std dec roll dec sub cltd mov sbb mov push pushf lds fstps jbe orb dec xchg jb adc pop jecxz test jns lea pop cli pop inc inc hlt mov icebp aas pop cmc pop xor lahf push call std shrl inc fcomi push cmc cld xchg aas or dec xor mov ret mov jge out mov fwait cld (bad) imul jl inc cmp dec leave cwtl clc inc aas out pusha cmc inc mov mov mov and je sub jg pop cwtl mov pop hlt mov fldcw je cld push out fnop add ljmp adc xchg daa ss jp jge bnd push fmulp inc jno xor dec insb std push cmpsl (bad) jecxz adc lea sub push push adc jno or gs pop dec or cld cmp or mov and push inc add aas rclb movsb les jge outsl jp xchg sbb insl ficoml movsb xor mov add das sub adc jge (bad) repz cmp inc mov push orps rcl cltd out jle push test idivb fstpl std jns ja icebp leave mov fs adc in sahf aas js mov xchg mov ljmp popa bound and hlt ja ret fisubrl push int3 jmp popf mov fimull adc ljmp outsb repnz lock rcrb push lea push aam jo sbbb and sarl fisttp sbb ljmp stc mov inc jge lcall frstor pusha adc into sub sub and mov jle shr sbb xor push gs adc sbb mov pop add and jnp dec (bad) cltd aaa mov mov jg add add sarb mov cli icebp inc mov mul inc dec add and sbbb mov in xor stos jbe push cmp je dec dec js ror je outsl movsb cmc cmp mov lds or lret aas mov lea sub mov enter mov cmpsl outsl xor mov call fisttpll es std push iret popf push movsb cmp push les sbb mov aad ss or xchg pusha test push cmpsb incl push mov dec repnz pusha imul push pop sub mov test ret sub dec scas (bad) stos lods add push add cmpsl xchg bound add add std inc mov mov mov out or sbb es lcall pop mov pop add mov add sub and pop add dec int nop dec outsb icebp mov repz xchg scas jl scas ljmp ljmp mov pop xor jmp (bad) mov cmc sub fimull stc mov xchg (bad) repnz clc lock xor sbb mov mov std sbb enter dec mov adc xchg iret into in mov xchg sub push jnp jae mov inc push insb xor adc mov xchg mov lret push push sarb sti jbe inc stc jl mov movsb mov sub movsl sbb leave xor incl mov inc pop cmc aam int outsl mov lret rol mov aam push or mov mov inc clc imul adc or aad out push aas and jns outsl add dec jmp test loop xor mov cltd stos inc bound daa (bad) dec sub and mov mov fdivs gs xchg jecxz push (bad) pop daa pop jbe outsb sub jp push aad test sbbb cmp xchg or dec add je mov imul mov inc adc cmc aam mov fdivrp mov mov jle in testl mulb mov lds enter stos dec orl subb imul adc cmp sbb lds popf mov cmp or mov js insl pusha push hlt pop (bad) dec popf push fs bound or xor fwait ret mov stos iret std roll aad sub inc pop adc cld jno add xchg scas call es (bad) cld push (bad) jg push (bad) push inc lea pop aad jl pushf popw adc mul call mov (bad) (bad) xchg push xor out test and xchg shl jo inc stos push mov cmp scas andl xchg test sub sub push xchg push (bad) dec xchg roll dec and sub cmpsb jle push data16 push cmp adc lret cmp fsubs cli jno hlt lods sbb movsb aam or and repz lcall cmp xchg jb stos mov aas jo idiv dec arpl push ficoml dec sti add int3 pop mov call ljmp pop pushf sub or frstor icebp mov adc add rclb sti sarl xor pop jae cmp dec aam (bad) mov mov jl cmp xchg mov push cmc fist jle dec adc sbb cmp leave ss in push pop xchg push dec cmpsb sbb xchg xchg fildll push test iret ss xor add lret rclb push lods mov popf and add pop mov int in imul xorl push dec inc pushl sbb dec lods shlb push (bad) mov fisttpll aaa pop cli lock or rol outsb fadds sbb cmp cli and jns inc cmp push lea pop clc rorl dec gs call push paddusw inc jno sub add adc loopne shrl addr16 sub or mov pop sbb fs jnp insb lahf push out push sbb mov add xor jbe (bad) outsb mov inc xchg loopne dec sbb sbb cld adc mov mov mov push jmp hlt dec sti (bad) jo imul sbb pop gs es xchg fild out (bad) dec inc jns dec mov push inc jp (bad) hlt enter lea and pop jge or jnp push mov fwait and inc outsl fdivr xor out pop sbb jb jns mov xchg adc rclb sub add jbe mov sti iret and and adc sub xchg ja sub xchg jns fisubrl iret lcall inc and test mov insb cwtl jge out test or push lret xchg insb jmp mov mov dec and js mov je adc std cltd mov mov xchg xchg push pop xor daa pop cmp fist and jns pop push lods mov jp or iret add fcmovnbe fldl sub cmp lahf pop js fwait icebp pmaddwd pop pop or sti or mov inc inc rcl mov (bad) pop stc popf inc iret outsl push jg cmc push lods (bad) add mov xchg in ret popf out jo adc inc adc mov add xchg test (bad) mov mov jmp pop in jmp movsl mov fucomip (bad) roll xchg xor or aad jnp dec outsl xor lret cs pop sub call aaa mov dec fiaddl clc (bad) imul sub stos jnp mov fcomps out and stc push in aam sbb rcll mov cmp fsubr jo mov xor ret mov xor fs ret ja out jl clc mov jb rorl divb jecxz out cpuid movsb pop test fwait insl push jnp dec into into jp sarb mov add jg (bad) outsl sbb dec sahf mov xchg les (bad) idivl in (bad) xchg popf callw fwait notl jp pop jne scas lcall ja xchg and xor fmul je adc inc gs mull (bad) into and mov xor inc ja rorl mov and sbb in cmp or cmp (bad) ss lods or (bad) outsl cmpsb leave xchg dec add add sub stos rolb jno sub mov xor jne repnz in aas xor (bad) fstpt xor sub sub dec test cmpsb js mov mov mov decl scas test nop dec mov test (bad) cltd cmc loope xor aaa lret dec scas pop dec and shrl lahf inc mov mov adc pop and int xor adc mov rorb push push pop nop leave push xor lods js sbb jl xchg jbe addb jae pushf call andl lods ja jmp out shrb imul lea jl enter dec mov mov mov push mov pop (bad) mov jns jecxz cli out lea cld jo out mov mov mov ret inc pop in in mov xor inc (bad) lods lock add ljmp sub jl es test cwtl out movsb xchg push adc pop cs neg mov jns jns or or out call hlt xchg jle add int fsubrs mov push hlt jno std and das aas int3 fs movsl jle lret out push mov subl xor jo loop fst pop in jns cld mov mov sbb in pop or imul insl inc out mov push adc mov push mov ret stos aas scas mov jmp in mov aas jno fcmovbe jns mov movsl mov inc mov leave in aas xchg je jp ljmp das fcmovbe cmpsl (bad) adc out mov jbe adc mov jmp push cli xor punpckhdq loop scas add dec inc fwait inc push andl rolb repnz (bad) in insb insl loop mov (bad) mov (bad) jge aad fcmovnb dec push or push test pop xor imul popf sahf xchg inc push into jo ss (bad) int out or (bad) cmpsb push fmull push cmpsb es int fnsave push sub xchg jg push jne xor mov cmpsl outsb js jns mov xchg jbe push mov and mov push scas or xchg mov enter add call dec lret dec fwait xor sub addr16 inc or pop or lcall sbb dec cs inc mov jns in sti sti inc or in popf hlt test xlat scas outsl push (bad) xchg cli mov pop pop iret or adc pop andl insb dec ret cmp icebp outsb movl in jne mov (bad) test xchg inc lahf push stos mov ljmp inc jo mov push or xchg jns adc lods sub (bad) pop jmp xchg push add cmp xchg mov or arpl mov pop adc aaa push mov or mov jle lods out xor imul scas adc push xor pop and arpl jle push movsl lea out cmpsb into sub pusha adc jl ret pop aam sbb mov sahf andb pop (bad) sub dec (bad) outsb jge (bad) ljmp repnz inc jge dec leave mov iret cwtl notl mov or repz iret cmc and pop nop lods lahf rcr dec mov or (bad) xchg popa mov mov pop out push inc cmp loopne loop test lret push xchg jns xor inc out scas jbe dec pmulhw iret jmp imul sub sub lds in js mov pop pop inc dec mov pop mov xchg xchg imul lea pop imul mov test imul es pop movsl (bad) mull push in and into adc mov xor mov outsb adc xchg sbb popa mov or and adc cmpl shll lret test mov inc aas rolb stos push mov das sub push inc lds jno mov pop pop gs xchg pop xlat mov add add popa in xchg enter fisttpll or or in inc mov xchg mov mov jb dec loopne sbb aam call or (bad) xor (bad) movsb dec jns cmp ds sbbl push jns ja xchg dec jle push mov inc jle (bad) jne les lret mov dec sub dec pop pushf adc sbb dec lahf lods xor cmp cmpsb outsb mov jae sahf mov fsubr cld pop mov xor cmp es mov jo sub sbb xor mov xor xchg xchg and fimul ljmp jnp mov negb jl pop insb or lahf xor scas loop sbb mov lods fisubr and lahf dec jecxz dec lahf jae cmp xor nop test arpl daa or dec dec imul daa dec adc loopne cmc jno cld sahf mov jg mov cmp popl sub cltd push inc cltd add mov jo enter cmc ret roll adc fcmovnb ret mov cli in mov and sub daa xor push sbb stos mov sub add and insl xor lea test inc jmp es or push sbb repz enter out lds gs inc cmp ficompl je popf dec or dec xor push jno shrl or movsb or out bound rol sub cmp popf adc loop or or lock mov adc mov sbb dec jb add sbb sbb sbb cmp loope das lock cltd or inc repz cs push jnp add cmpsb jns fldcw push mov pop lahf test or cmpsb (bad) jno sbb dec pop sbb stos jbe js sarl dec and ds cmp in ret jns cmc jbe (bad) mov out mov outsb or jae adc jmp sbb mov add mov in aaa popf or loopne loop out pop movsl out cmp jne cmp out dec cmp mov daa fs pop sub and inc outsl es daa rclb shrb push fnstcw movsl clc xchg fstpt mov stos movsl jae push add pop popf out scas jl jnp cwtl imul xchg ret in cmp movsb or jg push cmp clc into hlt outsl shrb imul into ds ret cmpsb out sahf adc sbb rcrb pop cwtl in dec (bad) fsubs xor xor lahf out xchg mov popf ljmp mov jle adc xchg xor jns ud1 repz sub test or loop add iret and nop fnstenv pop in imul cmp pop lcall repnz dec xlat push sub mov push adc mov xchg xchg inc dec loop in push sub jae jb adc (bad) cli test (bad) notb xchg jmp out data16 sbb jnp lods sub gs fwait or (bad) leave adcl xchg xor (bad) or mov and pop push push testb (bad) sahf sti pushf sub movsl imull aam mov jo push sbb dec lock ljmp xchg xor cmp jg inc or rcl adc pop out testb push or shlb push push or pop (bad) dec jl out lret sub pop sbb addl xchg fmull xchg in xchg xchg fnstcw push and push or stos mov aas pusha inc insb movsb mov clc cmpl test (bad) out jle popa xchg jo psubw mov test mov int stc loope rclb mov or test jno stc mov sbb popa xchg push and sub cmp cld je dec inc cmc orb pop lret pushl jl subb daa and mov or rcl sbb addr16 jno in insb jg push out and ss push imul dec mov scas imul outsb push cmpsl or pop scas inc cmp xor or and fpatan adcl lcall mov mov repnz pop jecxz mov xchg pushaw mov jne test and sahf dec xchg js jmp mov lcall cmpsb faddp and mov sub dec idivl xlat pop adc cmc (bad) xchg cmp cwtl adc cmp imul sub mov mov jl data16 pushf movsl call xchg cmp or push adc and loopne outsb lahf (bad) mov sbb add mov and add jecxz cld mov adc push subl push mov jnp mov (bad) and ret (bad) jle and das jbe out lods jno ljmp jno sub xchg cmp push enter lods ret stc mov bound sbb mov inc movsb dec fdivl push adcb mov rorl lea jbe jno aam dec popa movsb mov fdivrl sub sbb xchg stc fistp scas mov outsb loope lcall pop cs sub ret stos inc pop and jle xchg cltd pop out pop sub jmp in jg jns aam repnz xor add inc (bad) aam dec int3 stc mov mov pop inc jmp inc jns sbb mov xchg dec stos cmpsl pop pop sbb mov je mov scas jns les js push xchg push pop pop or loopne in mov push pop into (bad) imulb push (bad) inc rorl mov xor sbb xchg test jecxz,pn adc mov pop insb and adc insb vpaddd out pop push and sub pop mov loope,pn data16 out call icebp sbb aas push mov pop add jne mov (bad) cmp decl sti mov lahf inc mov and cltd sbb sub push nop pushf mov dec pop sbb pop or mov dec lods add pop test pop mov call push mov xchg aam xlat push xor sub mov out cmp fsubl pusha or stos (bad) jae (bad) mov xchg adc mov (bad) out mov jb cs mov pop aaa dec (bad) mov or lret ljmp push xchg mov insl fwait adc daa inc lods jge ljmp xchg or or bound and add inc jmp push inc into xor imul push push ror outsb mov sub or cmp jo lods jne mov ss (bad) and inc fdiv imul mov icebp cmp scas pop adc jge lret test xor (bad) push jb das dec (bad) jo xor sbb cmp adc aad push mov outsl cmp repz xchg pop or das cli aam (bad) jmp mov xchg insb jb in xor (bad) mov mov out rcrb inc lods mov cmp jae arpl test cmpxchg dec mov xchg jp ss push icebp pop fldcw scas (bad) mov mov cmp jge cmp in push ret cs adc mov lods rcr bound sbb jmp out inc and dec mov sbb aam out cmp jnp insl loopne sbb iret dec xchg jle dec cmp out fsub push stc inc insl enter adc cmp adc fwait mov sbb fs sub loope repz sahf sub dec insb cltd pop dec xchg shrl cmpsb mov mov loopne lahf faddl lret jne in fyl2xp1 dec orl leave xor mov imul ja out mov dec cmp jmp mov lret or clc fimull aam sbb out xlat arpl (bad) xor mov pop push stc cld jmp or ret mov in cmp or xchg addl cmp adc lods push sub mov mov fucomi (bad) popa cmpsl sbb fiadd fiadd and ljmp lods add sub sub mov push add add cmp repz mov js leave fcomip jns (bad) fidivr push or sbb push or mov mov in push jno pop imul mov mov add jns and jae sub fisubrl xchg lahf setg jb dec data16 pop cmpl adcl insb mov arpl lea lock enter sbb and out mov stos mov les dec xchg fidiv cmc xchg and jl nop ds mov jbe mov mov stos dec jno mov jl ret fdivrs adc lods ja lea outsl mov jo je xlat pop pop cmp push add les inc cmp cli xor or and fistpl les mov jge mov xorl jbe mov popf sub push imul movsb das push aam cs mov add cltd fidivrl mov cmc scas test jno pop push jne xor sub (bad) xchg (bad) aad xchg push pushf repz xlat (bad) mov imull test arpl push dec mov bound xor xchg out push daa ret popf mov inc or test insl jle xchg (bad) pop dec cmpsb dec lret out sub jp loope aam nop lret das popf dec pop cmc test fdivp dec mov mov outsb dec cld push (bad) dec dec rcr clc dec sub push dec mov sub add xchg sar stos je sbb adc cmp clc stc pop lock cmpsb je js bound cmpsl jo out cld notb es (bad) ljmp and hlt pop insb loop jge es enter (bad) call scas pop insl addr16 daa clc fldcw and cmpsl sbb adcb jecxz jb out int retw inc fistp popf aam jae mov je mov sub mov jo fidivrl mov jns add mov ds pop sub insl xor dec pop cmpsl add aam outsb adc jmp jmp cmp jae icebp jp insl dec mov out clc or dec pop movsl xchg mov dec imul or jno pop mov mov mov jg mov push or dec mov jmp les pop rcll sbb loop notb adc pop and push mov icebp sub fldenv pop pop (bad) xor and movl outsl or shll pop fwait jg into into cli jne add mov mov rolb mov cmpsl mov (bad) mov imul jmp mov and lea mov aaa mov mov and les and xor out xchg or jge sub lret mov sub jp and sti xor clc dec popa out and jno pop inc push push popl or sbb in test int jmp (bad) sbb jnp cmpsl aaa pusha dec clc lahf mov daa push pop or push cmp (bad) jno and jbe mov lock repnz je (bad) out mov fs loop ja lods adc cmpsb outsl in inc pop xchg fcomps mov ffree imul jbe mov fwait mov pop ficom aas xlat mov rorl cmp sub inc imul pop scas es test inc in add sub pop data16 and dec xor fcompl xor lahf push or xor sbb xchg mov mov aas hlt leave fs sub (bad) ret cmp fdiv lea faddl xorl das int push sub ja xor outsl fisttp adc mov mov lods and (bad) stc (bad) divb jb add arpl int3 xchg arpl fsub push std stos jns mov cmp inc jne cmp mov (bad) dec xchg lret mov int push and lock and ljmp jnp mov pusha rorl (bad) add pop sub sub push pop jns jnp jo push add cli lds cmpsb stos shrb xorl pmuludq popl outsl xchg mov xlat stc inc add test jnp add mov and loope mov jne rcrl orb and lret (bad) or (bad) ds jae add pop shr lea out negb ja imul inc and push out repz mov mov stos adc sub into fcoml sbb nop and mov sub lret mov or jns scas cwtl sub ficom push out cmovb mov je mov mov lcall xchg das jp cmpsl std sti inc adc inc lods fimul (bad) jbe lret shrb mov stos cmp sub mov out out fild lods ja scas test push repnz aaa fwait inc cltd jne arpl inc ds jg movsl enter addl adc inc xor mov hlt jp enter scas lcall jle jbe adc pop mov sbb cwtl sbbl ds push xchg fdivl jmp mov pop xchg cmp xor out pop dec sub daa fistpll sub adc or ljmp ret andl cltd in iret push and and lock cmpsb stos pop mov mov aaa add jb hlt mov inc cmc icebp cmp loop and lcall cwtl cmp arpl pop pop xchg push (bad) mov hlt mov loope clc jnp data16 sub scas sbb cmpsb xlat (bad) jmp out jb ret push mov (bad) hlt mov mov cmp pop cmc sub and cwtl aaa mov mov rorb jp mov std push add mov lcall add addr16 xor push xor inc aaa ja push gs arpl xor outsl jo xor push je xor xor xor cmp inc push push jo insb pop xor jno push xor popa je dec jns dec imul dec outsl cmp xor push insl inc push inc xor dec push outsb aaa aaa insl popa arpl pop xor cmp push jne aaa cmp dec xor jb jb imul inc ja pop dec dec bound xor push jp push push inc dec jbe push or inc push xor xor jno js ja push aaa pop insl outsb popa cmp arpl xor xor cmp cmp inc jp or xor arpl pop arpl imul inc dec popa aaa push jb inc push insb bound xor dec push xor inc bound dec xor jbe inc dec jbe bound insl xor push inc dec xor pop pop push xor inc xor push dec or cmp inc pop gs dec dec push dec push ss insl jno dec xor fs xor pop ss js pop ja inc dec push bound addr16 jbe inc aaa dec jo xor push xor or push inc jns js push ss bound push push je ss push js aaa jp inc pop inc jb jp xor xor push fs jae push xor push push cmp inc dec push fs dec jne inc jo ja arpl xor xor pop dec dec cmp push push insl aaa push inc insb arpl bound push push outsb inc xor push pop insb jp fs cmp xor inc jp cmp or xor inc jb xor dec gs outsb jns jbe push push xor outsb jo imul xor xor ss xor ss cmp jno push xor inc push jo jne data16 je push or xor xor inc push popa dec insb jns dec xor push dec popa push xor jns or je dec jno xor jb inc xor gs jae push or dec imul jno xor push addr16 jne cmp jne push js ja js push cmp aaa push js xor push gs or xor je push cmp dec xor jns inc push inc pop push push xor push jb jns jne ja xor inc dec inc dec push xor xor push dec dec ja or popa je ss inc dec push dec inc push outsb jb push push dec pushw push xor jo aaa dec ss jb push dec push jbe push aaa outsl xor insb dec push xor js dec inc dec push cmp push push push imul bound xor pop inc xor jns jno data16 or push cmp jne or xchg adc add fdivr loopne adc dec inc add add add pusha add (bad) fildl inc add push push pop push add or or or or sbb adc adc sbb push sbb and daa and sub sbb sub sub xor xor daa cmp xor (bad) fildl inc add or or or or sbb xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor inc add or xchg add add and add add adc inc add add add add add add or inc add add add add add jge add add add push adc pop and xor inc mov adc xor (bad) or push pop sbb sbb sub cmp inc inc inc dec dec dec push push push push push pop pop pop arpl addr16 jne ja jns addl xchg xchg xchg xchg xchg xchg cwtl cltd lcall test stos mov mov mov mov (bad) (bad) enter rcl aad xlat fcomp (bad) loop in out call repz cmc div clc stc cli inc add add add add add add add add add add add add or inc add add add add add add add add and push adc pop popa jno and orl mov or xor adc push and loope icebp pop sbb sbb daa sub sub cmp inc inc inc dec dec dec push push push push push pop pop pop arpl addr16 jne ja jns (bad) addl xchg xchg xchg xchg xchg xchg cwtl cltd lcall test stos mov mov mov mov (bad) (bad) enter rcl aad xlat fcomp (bad) jecxz in out jmp cmc div clc stc cli (bad) fiaddl or add add add add add movsb inc repnz sub sub movsl je fdiv addr16 sub jb mov neg sbb stos negb push iret dec out pop stos out pushf pop mov dec inc mov push clc mov mov and movsl popa push mov outsb push mov lock dec sub es lods stc pop xchg inc mov movsb idivl in adc cmpl nop in push dec test pop push mov add xchg cmpsl and mov xchg add mov inc fsubl fsts test jge sub mov or (bad) xchg and lods dec in xchg inc lea pushf mov mov into or jle ret cmp jl mov inc lcall dec add pop push mov add dec mov cmpsl mov pusha push lret imull jl into push ljmp mov sti xchg mov lods dec test in cld les xor pop mov lcall pop mov xchg dec inc add movsb mov push insb mov mov lcall nop aam sub push mov add pop jb lret cltd lcall inc mov fs loope lods pop mov cwtl fst mov pop fucom mov push push mov cmp dec ds jns xor mov sub aas ja pop insl dec out jecxz out es push in insb xchg xchg adc test and xchg sub dec ljmp int3 push iret js push push outsb dec in adc lcall int push dec mov popaw inc lods mov mov push cmpsb daa int scas or aad fmull stos loop mov dec inc dec int push or xchg sub mov fisttp sbb repz mov je ret mov lods sub push cmpsb mov stos mov aad push sub mov push arpl pop mov pop mov enter jecxz jmp dec ds push cmp lcall inc mov xchg into sbb insl xor dec xor popf adc rorl pop ss shl adc (bad) cmp push pop push sub mov dec push xchg xchg cmpsl xor mov loopne or mov or cmp sub sahf lods mov add not cmc mull nop sbb aam push test add shlb cmovl fisubl (bad) and inc adc push sahf push lret mov mov add dec push popf cmp addr16 adc mov push add xor lea jl and out in cmp push movsb pop lods mov and push mov into push (bad) fistpl subl inc pop mov mov loopne push movsl leave sub xchg pop stos icebp xchg and mov xor fs mov test data16 rcrl adc xchg jns imull jmp lods and xchg mov pushw shlb dec imul xor adc and lcall stos dec mov xor mov xor addr16 push push push adc inc xor inc aad fsubrl push fcmovb pop mov ffreep pop mov push imul imul jne lea xchg gs lods xor les fsubrl clc mov ss dec push fs xchg test jb lcall xchg das xchg aad in jno (bad) or imul or dec cmp add aad fcmovb and pop out icebp push mov mov xor and push je mov and cmpsl pop imul subb (bad) push inc adc test and xor lods adc push jb mov mov and mov insl test mov lcall add lods je lahf cmp nop xor add pop push dec dec (bad) dec sub in push call jbe das adc xor sbb sub pop sbb (bad) sbb lea stc movsl ja sbbl test adcl pop clc xor lods mov insl fldenv jnp fsubrs aad pop sbb (bad) mov imul dec sbb sub dec dec adc int repnz pop pop into in push mov jle xchg jae enter adc mov test lret pop cmpsb fmuls fildll (bad) xor test push rorl sbb jb push mov xor push xchg insb ret ja mov xor pusha or (bad) mov cwtl adc xlat inc test dec adc (bad) xor movsb push es stos imul inc push mov in dec xchg add add std sub push xchg mov sub and sarb dec enter sub adc (bad) hlt xor and mov repz jns lds (bad) mov xor subl in inc inc stos push movsl add stos adc outsb or xchg (bad) aam push mov (bad) xor push cmp ja icebp pop (bad) outsb push mov jb push les pop mov lret dec mov out fwait cwtl jl cltd adc pop add fwait adc int xor bound jmp jne cltd inc pop mov mov and into xor repz jno fldt push (bad) popf cmc and adc stos mov mov cmp int lods inc and mov push pop and lds fs cmpsb xor call mov les lods sub sub ss or cmp jnp insb jecxz test cmp mov fistpll dec inc cs xchg xor mov and inc sub outsb cltd and loopne jp sbb push push xchg pop xor adc mov lods and fcoml in int nop adc scas dec lret inc popa jns repz lods in sahf cmc imul mov lods lds int popf hlt adc repnz push dec movsl push adc dec out mov xchg mov xchg scas xor mov repnz push jo fiaddl cwtl inc pushf xlat je sub xor xchg xchg pop sbbl rcrl xchg mov lea scas jnp mov inc int mov jbe pop aaa sub in int rcr add int3 outsb adc sbbl stos push adc push fwait add pop lods sub and out rclb xchg int adc mov lods aad fs lods leave imul mov jle adc dec or movsl sbb xchg cmp mov out sbb insl fldenv mov mov push (bad) xor adc sbb sub xor xor (bad) xchg test xor jmp and ja mov sub out dec imul leave pop adc cs inc mov push adc test sub sub sbb stos mov test push stc add test into lods mov xor cmp push xchg aaa push push xchg dec xchg out popf mov test mov lcall push push or or dec add push mov pop pop sbb sub push mov loope mov sbb or or dec rcrb dec dec (bad) push mov xor mov pop rorl in xchg xchg jns in bound test int xor loop stos dec call ds shrb xorl dec push inc sub fcomp xchg jge mov lret bound mov mov into dec jmp mov iret fs imul inc (bad) add test mov xchg movsl sbb scas xchg in jo jb stos lret sbb lds (bad) jmp mov xchg test sbbl or adc popa push mov orl adc jl push cmpsl mov fdivs dec push jno ffree sahf popf (bad) out jle xchg push xor cmp sti push sub jle xchg xchg xchg mov aam or sbb dec and sub xor inc mov hlt cmpsl lret push fisubl jo inc icebp pushf sbb jge addr16 xchg ficomp push xchg (bad) icebp inc mov dec (bad) mov mov insl add mov add push or sub cmp addr16 cmp out dec adc mov jo and cwtl shr test mov sub fisttpll ret pop (bad) jo and cs mov push ret addl sahf cmpsb cmp js (bad) xor lods sbb adc pop adc mov mov mov loopne cmp dec and imul dec sarl aaa and jno nop rcl dec lret xchg push lods arpl push pop jnp lea out enter mov rclb or sub mov mov mov js arpl lods leave mov jno rclb push sbb out jns adc ja mov add push mov push pop and arpl inc out xor stos rol push push rol lcall push lret inc jnp mov push insl mov nop add xchg lret ret data16 sti push inc inc fstl fcoms andb cmp loop push ljmp cmp jbe mov cs jbe push inc ficom push mov aaa xor lahf push popa add jnp pop lcall push lahf sub pop pop mov imul sbb and mov repz add lcall in jg arpl int3 movsb add xchg dec icebp xor test (bad) fimul push stc stos lock xchg mov idivb xor mov inc enter jbe repnz xchg loopne mov pop int3 sahf fildll pop (bad) dec movsb dec pop cmp or sub aam mov adc lcall dec into ja add rclb ret out aam (bad) mov jae adc ret xor jo dec enter mov xlat and stc scas lret aad and pop lods inc pushf aad jbe xor jne xor mov push push mov or jmp les aaa out mov (bad) pop jne fdivr movsb data16 fs inc jg or or fsubrl push adc push movsl push dec and or or dec cmpsl in lods push push lea pop popf (bad) fwait or sbb mov jo stos cwtl rclb xchg out dec es and push stc cld (bad) aam cmpsb or lcall lcall mov stos or movsl push pop inc adc loope dec mov mov dec sti and gs xor mov bound jecxz pop mov cmpsl xor jo mov jns jne mov in inc push aad or dec xchg mov arpl daa imul int xchg adcl mov jle dec test xor (bad) dec sbb scas test je and and sub cltd mov cmpsb lods dec xchg out xchg gs loop daa push clc test arpl lea andl lods leave lret adc inc and bound push pop dec lcall push mov push (bad) mov ret sbb (bad) dec sub mov scas xchg out dec add adc xor xchg inc adc push les adc xchg outsl pushf xchg or xor xchg int push sbb (bad) mov pop xor fdivrl push pop aaa mov and mov lret inc addr16 inc and out test popa pop clc call out add push pop pop test (bad) flds add add add dec inc add add add add or add jbe xor xor add add add add add jle add or add and jb outsb addr16 add add add and add add and dec inc add add add and outsl bound add add add add add push push mov add cli and add add add add sldt add add add add add add add push add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add jp or mov fwait add add add or movb add add fwait add add jp push add push push add pop loope push add jp push add jp push add adc add adc pop push add sbb sbb add add and push add jp push add jp push add jnp push add stos sub sub add sub sub add sub sub add sub arpl sub add add sbb add add add sub sbb add sub sbb add sub sbb add into sbb add sub sub add inc sub add into sbb add add add add sub sub add sub and subl sub mov add sub repz std sub or add add cs add add dec adc ja dec or cs fwait add add jp,pn adc std cs or add fwait add add das fwait add add cs add add add add add das fwait add add das jp push add xor add pop adc add mov add xor sub add xor push add add add xor push add jp push add xor add add add add add xor xor xor push add add jp or push xor xor sub add add add add add add add adc push add add add add add add add add add add add add add add add add adc pusha or or push add add add add sub or sbb add adc adc add add add add sbb add add add add add add push add sub adc add add add adc xor add adc mov add push add add add add add add and adc cmp add sub sub adc add add add add add xor mov pop add add add add add add and add int add add and add into add add add and push add inc add add or pop push pop add add divps push add adc add add add adc add add mov add inc sbb add add std and adc ds adc mov add sub add add add xchg sbb adc add pusha and add add add add add add add add add add add addl add inc and add add add add add add xchg add adc add and add add xchg add push adc add xor add add xchg add cmp add call add add add add add add add add add xchg add or add add add add addl push add add add addl or cld add add addl or cld add add addl or adc add add les dec or push add addl str add add add xchg inc add add add add add add add add xchg inc add adc mov add add xchg fisttpl pop add add sub add add add add sub add add add or adc and xchg (bad) adc adc cmp add add xchg jp bound adc pop sub xchg repz adc mov xchg add adc pushf sub sbbl adc or add add xchg pop push bound adc sub add add xchg aad bound adc add add add add add add xchg int xchg add add add add add add xchg loopne mov das add add xchg pop sbb pop add add add add add add add add addl sbb shrb add add add add das add add xchg inc add das add add addl sbb and add add addl sbb dec xor add add add add add add add add xor add add add add xchg inc add add add add add xchg inc add add add add add movb and add add add add add add int push add add add add add aad and mov add add add xchg inc add add add xor add add add add xor add add add add add add add xor xchg add testb add add add add add add add xchg add add sbbl add add add add add add add add xchg or add add add xchg or sub add add add add add add add add xchg inc add add add xchg sbb adc sub add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add push add add add (bad) and add add add add add add add add add add add add add add add add add add add add add add add add add or sbb enter push add adc add add add add or roll inc add add add pop add add pop add add pop add add pop add add pop add add pop add add inc add add pop add add pop add add or sub inc add add add (bad) add add or inc add leave add add or sbb inc add add mov pushf sub test xchg add enter adc inc add add ret sub leave sub inc add add fldcw loopne sbb sub pushf sub inc add inc add sub test xchg add clc sub or aam inc add add test xchg add add add add or xor inc add add add add add or cs add add add add add add add add movl sbb add cs add add add sub add das add add ss add add add adc xchg add inc add add sub inc add xchg add mov add das sbb add das inc add inc add add inc add pop add das mov add add add das adc add pop xor add add xor or cmp bound or inc xor add (bad) add add or xor inc add add leave sub jb lea add xchg add add or jno lcall xor xor add add sub ss add add roll add mov xor mov sub inc add add inc add add jb mov add add imull jmp pop add lock add cmc add add or pop add das add or cltd add xor cs xchg add add add xor xor insb add sub cmp inc add or test add add push add push add pop add or mov scas xor daa add add add add sub add sub add add add add add add add add add add add add add add add dec add add add sub add sub add sbb add das add add sub imul addl add add add add add add add add add pop adc push add pop adc push add adc push add adc push add add add add add sub add mov mov ret add add add jno jbe lods add add add add add push add add add adc add jmp outsl add add add sub sub add add add add add add add add add or add inc add add add or add and add add add add add jo jns lahf add add add add add add fsubrs add add add add or add add add add add add add add add add add add incb dec add add or add incb rdtsc add add xor add add add add add add or or add add jno cmc and add add cmc and add lcall push imul gs add arpl insb imul jb imul inc outsl fs je jb bound add jae gs cs arpl imul jb cmp outsl fs gs arpl outsl jb xor gs push pop and cmp jp and sub das cmp jle and inc je jb bound add jae gs add xor jle cmp inc cmp dec das pop jae outsl pop pop and je insl cs imul inc outsl jb jae inc outsl jb add orb mov subb (bad) loop scas loop stos loop stos loop lods loop stos loop lods loop stos loop scas loop mov subl stos loop scas loop stos loop lods loop mov subb scas loop mov subl mov subl lods loop lods loop mov subl scas add orb loop scas loop (bad) loop lods loop stos loop stos loop scas loop (bad) loop (bad) loop lods loop mov orb scas loop lods loop stos loop stos loop (bad) loop mov subl scas loop lods loop mov orb loop scas loop stos loop mov orb scas loop mov subb lods loop scas add subb loop scas loop stos loop stos loop lods loop scas loop scas loop lods loop lods loop (bad) loop mov subb lods loop scas loop stos loop mov subb stos loop mov orb lods loop scas loop mov subb loop (bad) loop scas loop stos loop lods loop stos loop scas loop lods loop mov subb inc outsl outsb je imul jae gs cs outsl insl jo outsb outsb je outsl fs add subb loop lods loop mov subb mov subl (bad) loop scas loop lods loop stos loop lods loop stos loop (bad) loop lods loop stos loop scas loop scas loop scas loop lods loop stos loop stos loop mov subl lods loop stos loop stos loop (bad) loop stos loop lods loop stos loop stos loop (bad) loop stos loop scas add je outsl outsb add orb mov orb loop lods loop stos loop stos loop scas loop mov subb stos loop (bad) loop (bad) loop (bad) loop stos loop scas loop (bad) loop mov orb lods loop scas loop stos loop stos loop stos loop scas loop scas loop scas loop mov subb loop scas loop stos loop lods loop lods loop stos loop scas add je imul loop stos loop lods loop lods loop scas loop (bad) loop scas loop (bad) loop stos loop lods loop mov subl mov subl scas loop mov subb mov orb loop (bad) loop stos loop scas loop stos loop lods loop mov subb (bad) loop mov subl (bad) loop scas add subl lods loop stos loop (bad) loop lods loop lods loop scas loop (bad) loop (bad) loop (bad) loop scas loop scas loop stos loop lods loop stos loop stos loop mov subl mov subb scas loop stos loop (bad) loop stos loop scas loop mov subl loop lods loop lods loop lods loop stos loop stos loop scas add subb lods loop stos loop mov orb stos loop mov subb (bad) loop (bad) loop lods loop mov orb lods loop scas loop mov subl stos loop stos loop stos loop (bad) loop mov subb loop lods loop stos loop scas loop stos loop lods loop lods loop (bad) loop (bad) loop lods loop scas add subb loop lods loop scas loop stos loop lods loop mov subl stos loop stos loop (bad) loop scas loop stos loop stos loop mov subb stos loop mov subl lods loop stos loop mov orb mov subl stos loop mov orb loop scas loop scas add outsb je jb jae loop stos loop scas loop stos loop scas loop lods loop mov orb scas loop stos loop lods loop lods loop (bad) loop scas loop (bad) loop lods loop stos loop lods loop stos loop lods loop stos loop stos loop stos loop (bad) loop lods loop lods loop lods loop scas loop lods loop (bad) loop stos loop scas loop stos loop (bad) loop scas loop stos loop (bad) loop mov subl orb mov orb loop lods loop stos loop lods loop stos loop stos loop lods loop scas loop mov orb loop lods loop lods loop scas loop stos loop stos loop lods loop lods loop lods loop stos loop scas loop stos loop lods loop scas loop stos loop scas loop stos loop scas loop scas loop stos loop stos loop stos loop stos loop lods loop scas add je xor push jns je insl cs outsl insb insb arpl outsb jae inc outsb gs arpl loop scas loop lods loop scas loop stos loop stos loop stos loop lods loop lods loop scas loop scas loop (bad) loop lods loop scas loop scas loop scas loop lods loop lods loop scas loop mov subl (bad) loop lods loop stos loop lods loop scas loop (bad) loop (bad) loop mov orb (bad) loop (bad) loop lods loop mov subl lods loop scas add subb lods loop lods loop (bad) loop lods loop stos loop scas loop (bad) loop stos loop mov orb lods loop stos loop mov orb lods loop scas loop lods loop stos loop stos loop lods loop stos loop mov subl stos loop scas loop stos loop (bad) loop lods loop scas loop (bad) loop stos loop lods loop (bad) loop (bad) loop scas add subb (bad) loop lods loop stos loop (bad) loop lods loop lods loop (bad) loop mov subb mov subl loop stos loop stos loop lods loop stos loop stos loop stos loop stos loop mov subl scas loop mov orb scas loop lods loop lods loop scas loop stos loop lods loop mov subl popa insl add jae gs cs dec add orb lods loop lods loop lods loop scas loop mov subl lods loop mov orb mov subl loop stos loop scas loop lods loop mov orb stos loop mov orb lods loop mov orb stos loop scas loop scas loop scas loop (bad) loop mov orb subl lods loop stos loop stos loop lods loop (bad) loop (bad) loop stos loop (bad) loop (bad) loop (bad) loop stos loop lods loop (bad) loop stos loop lods loop mov orb stos loop scas loop stos loop scas loop stos loop lods loop scas loop scas loop stos loop lods loop mov orb mov subl scas loop stos loop scas add subl scas loop lods loop lods loop stos loop lods loop mov subb mov subb scas loop stos loop stos loop (bad) loop (bad) loop scas loop lods loop (bad) loop mov subl loop mov subb mov subl lods loop stos loop stos loop (bad) loop stos loop mov subb subb lods loop mov subl stos loop (bad) loop (bad) loop stos loop lods loop mov subl (bad) loop mov subl mov subb loop scas loop (bad) loop stos loop lods loop (bad) loop stos loop lods loop lods loop mov subb stos loop lods loop stos loop scas add subb stos loop scas loop scas loop mov subl stos loop scas loop mov subb (bad) loop stos loop lods loop (bad) loop scas loop (bad) loop stos loop (bad) loop mov subl scas loop (bad) loop (bad) loop stos loop scas loop mov subl loop scas loop stos loop stos loop (bad) loop scas add subl loop scas loop lods loop mov subl (bad) loop stos loop scas loop stos loop lods loop stos loop (bad) loop lods loop scas loop mov subb scas loop mov subb stos loop mov orb lods loop mov orb stos loop lods loop lods loop stos loop scas loop stos loop scas add subl scas loop stos loop mov orb stos loop mov subb stos loop lods loop lods loop lods loop stos loop stos loop scas loop stos loop mov orb loop mov subl lods loop (bad) loop stos loop lods loop (bad) loop lods loop stos loop (bad) loop mov subb scas add orb mov subb stos loop lods loop scas loop scas loop scas loop (bad) loop scas loop scas loop stos loop stos loop stos loop mov orb loop mov subb loop mov subb mov subb mov subl loop stos loop (bad) loop lods loop lods loop mov subb outsl jae add subb stos loop lods loop mov subb scas loop lods loop mov orb scas loop scas loop mov subb mov subl lods loop stos loop mov subl mov subl (bad) loop mov subl lods loop lods loop lods loop (bad) loop scas add arpl inc imul insb popa jae xor bound arpl subb loop lods loop stos loop (bad) loop (bad) loop (bad) loop stos loop mov orb stos loop scas loop lods loop mov subl mov subl mov subb (bad) loop mov subl stos loop mov orb lods loop stos loop scas loop stos loop lods loop scas add subl scas loop lods loop (bad) loop mov subb lods loop stos loop lods loop lods loop stos loop lods loop stos loop stos loop scas loop lods loop mov orb mov orb loop scas loop lods loop mov orb stos loop mov orb loop mov orb (bad) loop scas add subl loop scas loop lods loop (bad) loop mov subb stos loop (bad) loop mov subl loop stos loop mov subl stos loop lods loop stos loop lods loop lods loop scas loop scas loop (bad) loop lods loop stos loop (bad) loop (bad) loop lods loop mov subb (bad) loop lods loop scas add orb lods loop mov subl mov subb scas loop lods loop stos loop scas loop mov subl (bad) loop (bad) loop lods loop scas loop lods loop stos loop stos loop scas loop lods loop scas loop stos loop mov orb loop stos loop lods loop lods loop stos loop (bad) loop scas loop mov subb outsl insl add orb mov subl mov orb scas loop stos loop (bad) loop stos loop scas loop mov subl mov orb lods loop scas loop stos loop scas loop stos loop lods loop scas loop stos loop (bad) loop mov subb loop mov subb loop stos loop scas loop scas add subb (bad) loop lods loop lods loop stos loop stos loop scas loop scas loop stos loop stos loop stos loop mov subl (bad) loop scas loop (bad) loop scas loop mov orb loop (bad) loop scas loop mov subb stos loop lods loop stos loop lods loop mov orb stos loop stos loop stos loop stos loop scas add subb loop scas loop lods loop stos loop scas loop stos loop (bad) loop scas loop lods loop stos loop stos loop mov subl scas loop stos loop scas loop stos loop lods loop scas loop lods loop mov subb loop lods loop scas loop lods loop scas loop lods loop stos loop stos loop stos loop mov orb scas add orb stos loop lods loop stos loop mov subl stos loop scas loop lods loop mov subb mov orb loop stos loop mov subl loop scas loop (bad) loop lods loop scas loop (bad) loop mov subb stos loop scas loop stos loop mov subb lods loop scas add push fs gs dec popa outsb popa gs jae gs cs arpl imul je addr16 jo jns loop scas loop (bad) loop (bad) loop lods loop scas loop (bad) loop lods loop scas loop mov orb stos loop stos loop scas loop lods loop scas loop stos loop scas loop scas loop scas loop scas loop lods loop lods loop mov orb lods loop stos loop lods loop stos loop stos loop scas loop stos loop lods loop stos loop (bad) loop lods loop lods loop scas loop lods loop scas add outsb popa insb imul loop scas loop mov subl (bad) loop stos loop lods loop (bad) loop lods loop lods loop scas loop lods loop scas loop stos loop scas loop lods loop stos loop scas loop lods loop lods loop lods loop lods loop scas loop (bad) loop (bad) loop scas loop mov orb stos loop scas loop lods loop stos loop stos loop (bad) loop stos loop mov subb subb stos loop scas loop lods loop lods loop lods loop scas loop (bad) loop mov subb (bad) loop mov subl mov subb stos loop mov subb stos loop mov subl lods loop mov orb lods loop lods loop stos loop mov subb add orb scas loop (bad) loop (bad) loop scas loop scas loop stos loop mov subb scas loop (bad) loop (bad) loop lods loop mov subb mov subl (bad) loop stos loop mov orb mov subl mov subl (bad) loop lods loop mov subl subb mov subl stos loop lods loop lods loop mov subb lods loop lods loop stos loop mov orb (bad) loop (bad) loop (bad) loop scas loop lods loop lods loop lods loop stos loop scas loop stos loop mov subl stos loop (bad) loop stos loop scas loop stos loop lods loop stos loop stos loop scas add subl scas loop lods loop stos loop lods loop scas loop lods loop stos loop mov subb lods loop scas loop lods loop mov subb scas loop scas loop lods loop lods loop stos loop lods loop lods loop lods loop lods loop stos loop scas loop stos loop lods loop lods loop mov subb mov orb scas add subl mov subb (bad) loop lods loop scas loop stos loop lods loop mov subb loop lods loop lods loop mov orb (bad) loop (bad) loop stos loop lods loop stos loop scas loop (bad) loop scas loop mov subb lods loop stos loop stos loop mov subl loop lods loop scas add orb loop stos loop lods loop (bad) loop scas loop stos loop scas loop mov orb loop mov subl (bad) loop lods loop mov subl lods loop scas loop lods loop mov subl (bad) loop lods loop scas loop (bad) loop lods loop (bad) loop stos loop (bad) loop stos loop lods loop scas add subb stos loop scas loop stos loop stos loop mov subl lods loop mov orb scas loop scas loop stos loop stos loop scas loop stos loop scas loop stos loop (bad) loop scas loop stos loop scas loop (bad) loop lods loop (bad) loop lods loop lods loop scas loop stos loop stos loop scas loop scas loop lods loop lods loop stos loop lods loop scas add insl outsl jb push je gs insl add subb lods loop mov subb loop (bad) loop lods loop (bad) loop lods loop mov orb stos loop mov subb lods loop mov orb lods loop (bad) loop lods loop stos loop stos loop (bad) loop mov orb stos loop stos loop scas loop mov subl scas loop scas loop scas add subl loop (bad) loop stos loop stos loop scas loop stos loop lods loop mov orb scas loop stos loop stos loop lods loop mov subl lods loop scas loop stos loop (bad) loop mov subl loop (bad) loop (bad) loop stos loop stos loop lods loop stos loop stos loop scas loop scas loop lods loop scas add subb mov subl scas loop (bad) loop lods loop lods loop scas loop (bad) loop scas loop scas loop scas loop lods loop scas loop stos loop mov subb loop lods loop stos loop (bad) loop stos loop mov subl stos loop scas loop lods loop lods loop stos loop stos loop stos loop lods loop stos loop scas loop scas add orb stos loop lods loop stos loop stos loop stos loop lods loop stos loop lods loop (bad) loop lods loop stos loop (bad) loop mov subl stos loop scas loop scas loop lods loop mov subl scas loop lods loop mov orb stos loop stos loop scas loop lods loop scas loop mov orb mov subb orb stos loop stos loop lods loop lods loop stos loop lods loop lods loop scas loop stos loop mov subl (bad) loop (bad) loop lods loop lods loop (bad) loop lods loop scas loop stos loop mov subb stos loop scas loop lods loop mov subl (bad) loop mov subl lods loop scas add subl loop stos loop mov orb loop lods loop stos loop (bad) loop scas loop stos loop stos loop stos loop scas loop mov subb loop lods loop mov orb (bad) loop scas loop lods loop scas loop stos loop scas loop stos loop stos loop scas loop scas loop scas loop stos loop scas loop scas loop stos loop scas add subl lods loop lods loop lods loop scas loop stos loop scas loop stos loop stos loop stos loop stos loop (bad) loop (bad) loop lods loop lods loop (bad) loop scas loop scas loop lods loop mov subl lods loop lods loop scas loop mov orb stos loop lods loop mov subl stos loop mov orb orb lods loop lods loop stos loop stos loop mov subl stos loop stos loop stos loop mov subl lods loop lods loop lods loop stos loop mov subb stos loop lods loop stos loop mov subb lods loop mov subb lods loop lods loop mov subl scas add jae insl bound push jns je insl cs gs arpl outsb add subl mov orb loop stos loop (bad) loop scas loop lods loop lods loop lods loop mov subl lods loop lods loop stos loop mov subl stos loop stos loop scas loop (bad) loop (bad) loop (bad) loop mov subb stos loop lods loop (bad) loop lods loop mov orb add subl loop lods loop (bad) loop lods loop scas loop (bad) loop lods loop lods loop (bad) loop lods loop mov subb mov subb (bad) loop mov subb scas loop stos loop stos loop scas loop stos loop (bad) loop scas loop lods loop scas loop mov subb loop stos loop stos loop scas loop (bad) loop scas add orb loop lods loop lods loop stos loop scas loop mov orb stos loop lods loop stos loop (bad) loop stos loop mov subl lods loop stos loop stos loop stos loop scas loop stos loop stos loop scas loop stos loop (bad) loop lods loop lods loop scas loop scas loop scas loop mov orb scas loop lods loop scas add orb lods loop lods loop lods loop lods loop lods loop stos loop mov subl lods loop mov subb stos loop lods loop stos loop stos loop stos loop stos loop stos loop stos loop (bad) loop lods loop lods loop lods loop stos loop mov orb loop scas loop lods loop mov subb lods loop lods loop scas add subb stos loop lods loop lods loop (bad) loop scas loop mov orb stos loop lods loop scas loop scas loop scas loop stos loop stos loop stos loop (bad) loop (bad) loop stos loop stos loop (bad) loop lods loop lods loop stos loop scas loop lods loop stos loop lods loop mov subl scas loop scas loop mov subb loop scas add orb mov subl scas loop stos loop lods loop stos loop scas loop lods loop (bad) loop lods loop stos loop mov subl mov orb loop lods loop lods loop lods loop scas loop mov subl (bad) loop stos loop mov subb scas loop stos loop mov subb orb scas loop stos loop stos loop stos loop scas loop mov orb loop lods loop (bad) loop scas loop stos loop scas loop stos loop lods loop stos loop scas loop stos loop stos loop lods loop (bad) loop (bad) loop mov subl scas loop mov subl scas loop lods loop stos loop stos loop scas loop lods loop scas add orb mov orb loop lods loop scas loop lods loop lods loop lods loop stos loop scas loop mov orb mov subb stos loop stos loop mov subb scas loop lods loop mov subb lods loop scas loop scas loop stos loop stos loop mov orb stos loop scas loop stos loop scas add subl scas loop (bad) loop scas loop scas loop mov subl (bad) loop scas loop (bad) loop mov orb (bad) loop lods loop lods loop lods loop stos loop stos loop (bad) loop mov subb scas loop scas loop stos loop stos loop (bad) loop scas loop stos loop lods loop mov subb loop lods loop scas add orb mov subl mov orb lods loop scas loop scas loop stos loop stos loop lods loop stos loop stos loop lods loop mov subl mov orb loop stos loop stos loop (bad) loop mov subl loop (bad) loop stos loop lods loop mov orb add fs gs orb stos loop (bad) loop scas loop lods loop mov subb mov subl lods loop lods loop mov subl mov subb stos loop stos loop lods loop stos loop stos loop mov subb mov orb (bad) loop stos loop lods loop (bad) loop stos loop (bad) loop stos loop scas add subb loop stos loop lods loop mov subl stos loop stos loop scas loop mov subb mov subl loop lods loop stos loop scas loop stos loop mov subl stos loop lods loop stos loop lods loop stos loop (bad) loop mov subb (bad) loop lods loop lods loop scas add orb mov subl scas loop mov orb stos loop lods loop lods loop mov subb loop lods loop mov subb stos loop lods loop lods loop (bad) loop stos loop mov orb lods loop lods loop mov subb lods loop stos loop stos loop stos loop (bad) loop mov subb orb lods loop lods loop lods loop mov orb lods loop mov subl scas loop stos loop scas loop scas loop stos loop scas loop lods loop (bad) loop scas loop lods loop mov subl loop mov subl scas loop lods loop (bad) loop scas loop lods loop stos loop (bad) loop scas add orb stos loop scas loop stos loop (bad) loop scas loop scas loop stos loop mov orb scas loop stos loop scas loop stos loop stos loop (bad) loop lods loop lods loop mov orb loop stos loop (bad) loop stos loop scas loop lods loop stos loop lods loop stos loop scas loop lods loop stos loop scas loop lods loop stos loop mov subb jne je arpl je gs gs je add jbe imul imul add jae outsb arpl jae insb je inc jae outsb arpl insb insb bound imul popa insb insb bound imul bound arpl outsb fs outsb jbe imul gs insb je loop scas loop mov subl mov orb loop stos loop lods loop lods loop scas loop mov subb stos loop stos loop lods loop stos loop mov subl loop (bad) loop stos loop stos loop scas loop stos loop mov subb scas loop scas loop scas loop (bad) loop lods loop stos loop scas loop scas add subb stos loop stos loop mov orb stos loop mov orb loop stos loop mov orb stos loop stos loop (bad) loop mov subb loop mov subb (bad) loop scas loop lods loop stos loop lods loop scas loop lods loop lods loop (bad) loop (bad) loop (bad) loop stos loop mov subl subb lods loop mov orb lods loop stos loop lods loop scas loop lods loop stos loop (bad) loop lods loop stos loop lods loop scas loop stos loop mov subb loop scas loop mov subl stos loop stos loop stos loop scas loop lods loop lods loop scas loop mov orb stos loop (bad) loop scas add orb loop scas loop stos loop scas loop lods loop lods loop stos loop mov orb mov orb mov subl stos loop mov orb scas loop lods loop (bad) loop (bad) loop stos loop scas loop (bad) loop scas loop (bad) loop mov subl lods loop lods loop scas loop mov subb subl lods loop mov orb lods loop lods loop lods loop stos loop mov orb stos loop stos loop scas loop stos loop scas loop (bad) loop scas loop mov subl stos loop (bad) loop stos loop lods loop lods loop mov orb loop mov subb lods loop lods loop scas add add subb mov subb loop lods loop stos loop (bad) loop mov orb mov subb stos loop lods loop scas loop stos loop scas loop stos loop scas loop scas loop mov subb loop scas loop lods loop scas loop stos loop scas loop mov subl (bad) loop mov subl subb (bad) loop mov subb scas loop (bad) loop mov subb loop scas loop scas loop scas loop lods loop stos loop stos loop lods loop mov orb loop scas loop scas loop stos loop scas loop stos loop lods loop stos loop lods loop stos loop stos loop mov subl lods loop mov orb mov subb loop stos loop scas loop stos loop lods loop (bad) loop stos loop (bad) loop scas loop scas loop scas loop scas loop mov subb stos loop scas loop stos loop scas loop mov orb loop lods loop mov subl scas loop lods loop mov subl loop lods loop stos loop scas add jae jne arpl popa outsb popa addr16 push jns je insl cs gs jne arpl add insb je jb dec outsb outsw add jae gs cs insb outsl bound imul add subl loop lods loop lods loop (bad) loop (bad) loop lods loop stos loop mov orb loop mov subl (bad) loop (bad) loop lods loop lods loop stos loop lods loop (bad) loop lods loop mov subb (bad) loop lods loop mov subl scas loop scas loop lods loop lods loop scas loop scas add orb loop stos loop stos loop stos loop mov orb scas loop scas loop lods loop mov orb lods loop scas loop scas loop lods loop lods loop stos loop lods loop lods loop scas loop lods loop lods loop stos loop stos loop stos loop mov subl mov orb stos loop (bad) loop mov subl orb stos loop stos loop stos loop mov orb mov orb scas loop lods loop (bad) loop lods loop scas loop mov orb mov subl stos loop stos loop stos loop stos loop stos loop stos loop scas loop stos loop lods loop scas loop lods loop stos loop mov subb scas loop scas add jae jne arpl add gs popa fs jb jo jb imul loop lods loop stos loop lods loop mov orb mov subb stos loop mov subb stos loop stos loop stos loop mov subb stos loop scas loop lods loop stos loop stos loop mov subb mov subl stos loop stos loop stos loop stos loop mov orb lods loop scas add orb lods loop stos loop mov subl mov orb scas loop lods loop stos loop lods loop (bad) loop stos loop mov subb stos loop scas loop mov subl mov subl lods loop lods loop (bad) loop (bad) loop scas loop stos loop mov subl scas add subb stos loop lods loop scas loop stos loop stos loop (bad) loop mov orb loop mov subl mov orb loop scas loop stos loop stos loop scas loop mov subl (bad) loop lods loop scas loop (bad) loop scas loop lods loop lods loop scas loop mov subb stos loop scas add orb loop stos loop (bad) loop lods loop mov subb stos loop stos loop scas loop lods loop (bad) loop lods loop stos loop mov subl loop mov subl stos loop lods loop stos loop scas loop lods loop stos loop (bad) loop lods loop lods loop stos loop lods loop scas loop scas loop stos loop lods loop scas add subb stos loop stos loop stos loop stos loop stos loop stos loop stos loop lods loop stos loop scas loop stos loop mov orb stos loop lods loop mov orb lods loop mov subb mov subl mov subb stos loop lods loop lods loop (bad) loop stos loop scas loop stos loop (bad) loop scas add orb mov subl stos loop mov subb loop scas loop stos loop lods loop scas loop (bad) loop stos loop scas loop stos loop scas loop lods loop lods loop scas loop mov subb (bad) loop lods loop lods loop mov subl lods loop stos loop stos loop lods loop (bad) loop stos loop scas loop scas add orb stos loop lods loop lods loop lods loop lods loop stos loop lods loop stos loop scas loop mov orb loop stos loop mov orb scas loop scas loop scas loop stos loop stos loop lods loop lods loop (bad) loop mov orb (bad) loop mov subl scas loop mov subl scas add je imul jo imul push gs imul add jae gs cs outsl outsb imul je outsl outsb add subb scas loop mov subb mov subb lods loop (bad) loop (bad) loop lods loop scas loop mov subb lods loop (bad) loop mov subl scas loop (bad) loop mov subl stos loop mov orb lods loop mov subl lods loop stos loop scas add orb loop mov orb lods loop lods loop mov subl loop mov subb stos loop (bad) loop stos loop (bad) loop (bad) loop stos loop stos loop stos loop mov orb scas loop stos loop mov subl stos loop lods loop mov subl lods loop scas add popa jne je push imul inc outsl insl jo insb popa je outsl outsb push gs popa js je outsl outsb jae je jb bound add jae gs cs jne je insl gs outsl insl jo insb gs gs imul outsb je insl gs outsl insl jo je bound imul bound add jne addr16 bound je jb bound add jae gs cs imul imul jne imul jae inc jae gs bound imul imul jae gs bound gs jb jo imul imul jae gs bound outsl outsb imul je outsl outsb inc je jb bound add jae insl bound outsl insl jo outsb jns je jb bound add jae insl bound jb fs je je jb bound add jae insl bound outsl jo jb addr16 jb bound add jae insl bound jb fs popa jb inc je jb bound add insl push imul je jb bound add jae gs cs jne je insl gs outsb je jb jo gs imul imul jne add jae insl bound imul outsl outsb inc je jb bound add insl jo insb gs outsb gs je fs je jb bound add inc push push inc je jb bound add outsb gs je fs outsl fs je jb bound add jae gs cs outsl fs outsl insl cs outsl insl jo insb gs inc bound addr16 outsl outsb push jae jb outsl fs je jb bound add imul jae bound je jb bound add imul jae bound je je add xor inc jle pop cmp inc cmp dec das pop pop jae outsl pop pop and outsl jne arpl add gs popa fs jb jo jb imul outsl jne arpl jb,pn jae jne arpl add jne gs je jb inc gs outsb jne gs je jb addr16 inc jne jb outsb je dec outsl jbe dec gs add imul insb add jb jns inc insb outsl outsb add add gs add imul je inc jne jb outsb je jne je jb add je add imul gs imul add jbe insb imul insl inc js gs imul imul je inc js je inc outsl outsb je outsl insb add jae outsb fs popa jns jne add jae gs cs jb ja outsb add imul pop dec outsl arpl imul pop dec popa insl add jp add je push imul pop push popa bound fs jae je push gs add je outsl outsb inc popa jae add je push jae push imul jns gs popa arpl outsl insb outsl jb inc jbe outsb je popa outsb fs gs popa fs inc insb imul pop push jae inc outsl insl jo je bound je je dec insl popa addr16 gs jb push imul outsb je imul je outsl insb add je inc jne outsl push arpl gs imul outsb jae jae je inc jne outsl push arpl gs outsl fs je push arpl gs outsl fs insb outsl jb addr16 push push jae je inc popa arpl outsl insb outsl jb jae je inc insb imul add je inc outsl outsb je outsl insb jae inc outsl outsb je outsl insb inc outsl insb insb arpl outsb add outsb je inc outsl outsb je je insb add popa jo imul add je inc outsl outsb je jae je inc outsl jb inc outsl jb gs je insb add jb inc outsl jb gs je insb add fs dec outsl popa add jae insl gs popa jns jne add js add add insb insb arpl popa imul imul insb imul jns insl gs imul imul pop dec gs jae je dec push add gs je inc arpl jo outsl jb dec inc jb jo outsl push jb outsb jae outsl jb add outsb jae outsl jb inc insb outsl arpl jae je dec je insl add je dec je insl add addr16 outsb je jne insb inc js gs imul dec outsl popa fs outsl fs gs addr16 dec outsl fs gs popa outsb fs add fs gs popa outsb fs add outsb je insl gs gs jo jb add outsb dec outsl fs gs outsl outsb jae jb arpl add push arpl jae outsl jae fs js gs imul gs imul jb jae data16 push imul jae arpl dec outsb outsw jb popa je outsl outsb add add je jns gs jb insl dec popa outsb fs add outsb je insl gs jns gs popa outsb fs add je dec outsl fs add je inc popa jo arpl jns addr16 inc outsl jne je dec dec imul je insl cs outsl insb insb arpl outsb jae dec inc outsl insb insb arpl outsb add je jne jo jb gs js gs imul xor add jbe insb imul inc jb je jb popa inc js gs imul arpl outsb popa jb inc outsb jne gs je jb inc imul jb inc outsb je jns inc gs gs jne arpl gs push gs jne arpl gs dec inc outsb jne gs je jb addr16 push popa insb jne add je jns add add jb popa je js gs imul insb imul add popa bound imul jns gs push gs outsl insl jo je bound gs push outsb fs outsb addr16 gs jne je push jne add je inc jae gs bound push gs imul add outsb arpl outsl outsb imul bound jne je je outsl add xor add inc add add add add and inc add insb add adc add je push add add xor add bound jne je je outsl add xor add push add add add add add punpckldq jne je je outsl add xor add add jb and add je popa add punpckldq jne je je outsl add xor add push add jo add push add add add add dec add or outsl add insl add add andps imul push add add cmp add add popa add add jb outsl add add je imul add add outsl add jb arpl add add or or popa inc subl insl add mov pop push sbb mov and add add add add add push or push adc push adc add adc push and add sbb adc add add adc add add sbb add sub or and add add add add add adc add adc add xor add adc add add sbb and add add add cmp add and push adc add add or add cmp add add adc or sbb and adc dec sbb and add inc push adc sub sub adc add add add or or adc add add dec adc add adc sbb push adc push adc add adc add adc add add push add add dec add add push add adc add adc or adc sahf add je insl cs arpl imul imul cs arpl imul jae imul imul insl jae outsl jb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push imul gs imul outsl outsb add add or add add push add add push add push jb jo outsl outsb inc js gs imul ja add or add add add add add push or add push imul add add add push inc outsl jo jb addr16 insl gs popa and xor cmp add add and arpl xor xor aaa bound sub sub ss xor add or add xor xor xor xor add push inc add xor jae gs cs gs jne arpl cs outsl outsl insb jae push je outsl outsb insb jns jns gs gs jne arpl jne insb fs xor xor xor xor add and add andb imul je push imul jne imul outsl jb cs gs imul imul gs imul insb gs imul popa je jb xor xor xor xor add pop add or add sbb adc or and adc adc pop adc sbb adc push pop push adc adc or or or add sbb sbb add add adc sbb add adc or subb or add add and sbb subb adc add xor adc or or pop add or pop and or adc or pop add add xor or pop adc adc or add or mov pop jg aad cmp or and add or and add adc and add sbb and add push and add sbb and add and add adc add sub and adc add or and xor cmp push and add xor and add cmp pop add or add add or or or and or add or add or cmp adcl adc sbb and adc or add adc add cmp andl add add sub pop push adc or add add add or add add sbb pop add or or add or pop push adc add addl lods or push adc add and adc add inc add and add add cmp add add or cmp and add adc or add sbbl out add scas out add add add mov add outsl jb js dec popa imul jb gs insb add add add and 