mov sub test push mov push push mov jne lea push push call lea push push call lea push call test mov jne lea lea push push push call add lea push push push push call mov test jne push call mov push push call test jne mov shr jne push lea push push call add lea push lea push push call add lea push push push push call push call pop pop pop add ret nop nop nop nop nop nop nop nop nop nop nop push mov sub push push mov xor lea movb rep stos stos lea push push push call mov mov cmp je cmp jne cmp je mov xor mov mov lea movb rep stos mov movl stos mov mov sub lea mov mov mov mov mov mov rep call add mov pop mov pop mov pop ret nop nop nop nop nop nop nop nop nop nop push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push push mov push push push push push push push call mov cmp mov jne pop xor pop ret push push call push push mov mov push push push push call test mov je push push push call mov add push push push push push call mov pop mov pop ret nop nop nop nop nop nop nop push push mov push xor mov cmp je push call mov mov mov cmp je cmp je push call mov mov cmp je cmp je push call mov mov pop pop mov pop ret nop nop nop nop nop nop nop nop nop nop nop push push push mov xor test jle mov mov sub mov mov cmp jne inc inc cmp jl pop pop mov pop ret pop pop xor pop ret nop nop nop nop nop nop nop nop nop nop nop mov push push push push mov cmp jg xor sub mov js mov mov push lea push push call add cmp je mov inc cmp jle pop pop pop or pop ret lea pop pop pop pop ret nop nop push push push push mov mov push mov push add push mov mov push push call mov test mov jne mov push push push push call test mov jne pop pop pop pop pop ret mov push push call push call mov xor push push mov mov mov mov mov push push call mov push push push push call mov mov add mov mov push shr rep mov push and rep mov mov push mov add mov mov call mov mov add sub je push push call add push call add test je push call mov add mov test je add test je push push push call test jne push call add xor pop pop pop pop pop ret movl pop mov pop pop pop pop ret nop nop push mov push push xor mov mov movl mov cmpw lea jbe push push add cmpl jne mov mov test jle mov push push add push push call mov mov mov xor shr mov rep mov and rep jmp mov mov push push add push push call mov mov mov mov add mov shr rep mov and rep mov mov mov inc add mov xor mov mov cmp jl pop pop pop pop pop ret nop nop nop nop nop nop nop nop nop nop nop push mov push xor push mov xor mov cmp lea jbe push push lea mov mov mov shr shr mov and and shr test je mov mov push push push call jmp lea test lea mov je or mov mov test jne test je mov jmp test je mov test jbe mov lea push push push push call mov xor inc add mov mov cmp jl pop pop pop pop pop ret nop nop nop mov push mov mov add mov test jbe mov mov add test jbe push push push lea mov sub xor test lea jbe xor mov mov and cmp jne mov and add add mov inc sub add shr cmp jb add mov test ja pop pop pop pop ret nop nop nop nop nop nop nop push push push push push mov mov mov mov add mov test jbe mov push add push mov call test jne mov test je add push call mov cmp je mov mov lea push push call add mov test je mov mov mov inc mov mov test je mov lea add jmp mov lea mov mov test je test je and jmp lea push push call test mov je mov add add test jne mov push add push mov call test jne mov mov jmp pop pop pop xor pop pop ret pop pop mov pop pop pop ret pop pop pop mov pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop mov push push push mov mov add push mov test je mov mov add test je mov test je mov mov add add test movl jbe mov mov add push push call add test je mov mov inc add add cmp mov jb pop pop pop xor pop ret xor mov cmp je cmp ja mov pop pop lea mov add pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop push mov test je mov test je mov mov push push mov push add call movl mov test je mov push xor test jle push mov mov mov cmp je push call mov inc cmp jl pop mov push call add pop mov test je push push push call push push call push call pop ret mov sub test push push je mov test jne mov xor lea movb rep stos stos mov xor lea movb rep mov push stos stos lea push push call lea lea push push call add test je mov push push lea mov push add xor push mov movb movb movb lea mov mov mov movb mov push push call mov add mov push call mov mov mov xor mov add shr rep mov and rep mov mov mov shr rep mov and rep lea push call mov push mov call mov mov mov xor mov add shr rep mov and rep xor test jbe mov xor mov and shl shr add mov inc cmp jb add lea push lea push push push call add test jne mov lea mov mov mov mov add mov mov pop pop test je push call add pop pop add ret nop nop nop nop nop nop sub push push push push call mov xor lea mov rep stos stos mov lea rep mov lea push push push xor call mov mov mov mov test mov je mov test jbe push call mov add test je push push call push push mov call add test je test je cmpl jne push call sub mov lea mov rep call mov mov pop pop pop pop add ret pop pop pop xor pop add ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop jmp jmp jmp mov test jne cmp jle decl mov cmp mov mov jne push call test pop mov jne xor jmp andl mov push push mov call incl pop pop jmp test jne mov test je mov push lea cmp jb mov test je call mov sub jmp push call andl pop pop push pop ret push mov push mov push mov push mov test jne cmpl jmp cmp je cmp jne mov test je push push push call test je push push push call test jne xor jmp push push push call cmp mov jne test jne push push push call test je cmp jne push push push call test jne and cmpl je mov test je push push push call mov mov pop pop pop pop ret jmp sub mov mov mov push push mov mov mov mov push lea push push mov mov movl movl call add test jne lea push push call mov add cmp je lea push call add mov test je mov pop pop add ret mov lea push mov call add pop pop add ret nop nop nop nop mov xor cmp je mov cmp je push mov mov mov mov push neg sbb push and mov mov mov push call add xor pop ret mov ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop push mov test je mov test je mov test je mov test je push push call add mov mov push push call add movl xor pop ret mov pop ret nop nop nop nop nop nop nop nop mov push push xor cmp je mov mov cmp jne cmpl jne mov cmp jne pop mov pop ret mov mov cmp jne movl mov cmp jne movl mov push push push call add cmp mov jne pop mov pop ret mov mov mov cmp mov jge mov neg movl cmp jl cmp jg mov mov shl mov mov mov neg sbb push not and push push call mov add mov mov push cmp jne call add mov pop pop ret call add xor pop pop ret push call add mov pop pop ret pop mov pop ret nop nop mov mov mov push push push push call add ret nop nop nop nop nop nop push push push mov test push je mov test je cmpl je mov xor cmp mov setne dec mov and mov mov mov cmp ja jmp mov test je dec xor mov mov inc mov mov mov mov mov mov mov mov and inc cmp mov je movl mov movl mov jmp mov mov shr add cmp jbe movl mov movl mov jmp movl mov test je dec xor mov mov inc mov mov mov mov xor mov mov inc mov mov shl add div test je movl mov mov mov movl mov jmp test jne movl mov mov jmp mov push push push call mov add cmp jne mov movl mov movl jmp test jne mov cmp jne mov mov mov lea push push push call mov add mov test je movl jmp movl mov test je dec mov mov mov inc xor mov mov mov mov shl mov mov inc mov mov movl mov test je mov mov dec inc mov mov mov xor mov mov mov shl add mov mov inc mov mov movl mov test je mov mov dec inc mov mov mov xor mov mov mov shl add mov mov inc mov mov movl mov test je mov mov dec inc mov mov mov xor mov mov add mov mov mov inc mov mov mov mov cmp je movl mov movl mov jmp mov mov mov movl mov test jne mov pop pop pop pop ret mov mov dec inc mov xor mov mov mov mov shl mov mov mov inc mov movl mov test jne mov pop pop pop pop ret mov dec mov mov inc xor mov mov mov mov mov shl add mov mov mov inc mov movl mov test jne mov pop pop pop pop ret mov dec mov mov inc xor mov mov mov mov mov shl add mov mov inc mov mov mov mov test jne mov pop pop pop pop ret mov mov dec inc mov mov mov xor mov mov add pop mov mov inc mov mov mov mov pop movl pop mov pop ret mov movl mov movl movl pop pop pop mov pop ret mov movl pop pop pop mov pop ret pop pop pop mov pop ret nop mov add sub adc sub adc add xchg sub adc sub adc sub add adc add inc sub adc sub adc add dec sub and push mov push test je mov mov mov mov cmp je cmp jne mov mov push push call add cmpl jne mov push push call add mov movl mov mov mov movl test movl je push push push call mov add mov pop pop ret nop nop nop nop nop push push push mov push push mov push call mov add test jne pop pop pop ret mov push push push call add mov test jne mov push push call add xor pop pop pop ret mov mov push push push call add mov test jne mov mov push push call mov push push call add xor pop pop pop ret mov push add push push mov mov movl call add mov pop pop pop ret sub mov push mov push mov mov mov mov mov mov mov mov push cmp push mov mov jae sub dec jmp mov sub mov mov cmp ja jmp mov cmp jae mov mov test je xor dec mov movl mov mov shl add mov or inc cmp mov mov jb jmp mov mov and mov shr and cmp mov ja jmp sub movl mov and shr shr sub mov jmp mov lea push lea push lea push lea push push call mov mov mov push mov push mov push push push call add mov test je shr mov sub movl jmp shr mov sub movl jmp mov mov mov cmp jae xor cmp je xor mov mov dec mov mov shl add mov or inc cmp mov jb mov mov not and shr xor jne xor mov cmp mov mov je mov mov jmp mov test je mov test jne mov mov cmp jne mov mov cmp je mov cmp mov jae sub dec mov jmp sub test mov jne mov mov push push push mov call mov mov add cmp mov mov jae mov sub dec jmp mov sub mov mov cmp mov jne mov cmp je mov cmp mov jae sub dec mov jmp mov sub mov test je mov mov movl cmp jbe mov cmp jbe mov mov mov mov mov shr rep mov mov and sub rep mov mov mov add mov mov sub add sub mov mov mov mov jne mov neg sbb and mov jmp mov cmp jae mov mov test je xor dec mov movl mov mov shl add mov or inc cmp mov jb mov and mov mov and cmp ja mov and cmp ja mov push shr and lea mov push push call add mov test je shr sub movl movl jmp mov mov mov mov shr add cmp jae cmp jae mov mov test je mov xor mov dec mov mov mov add shl movl or inc cmp mov jb mov mov and sub mov mov shr mov mov inc mov mov mov shr add cmp jb mov mov cmp jae mov mov mov movl mov inc mov mov cmp jb mov push lea lea push mov push push push movl call add mov test jne mov movl jmp mov mov mov mov mov and shr and lea cmp jae mov cmp jae mov test je mov xor dec movl mov mov mov mov mov shl mov add or inc cmp mov jb mov mov and xor mov lea mov mov cmp mov jae mov sub mov shr mov mov mov inc jmp cmp mov je lea sub mov neg sbb add and mov add cmp jae mov test je mov xor dec movl mov mov mov mov mov shl mov add or inc mov mov cmp jb mov mov shr mov mov and add mov shr add mov sub mov mov mov mov and shr and lea mov add cmp ja cmpl jne mov cmp jb mov mov jmp mov xor mov inc mov mov dec mov jne mov mov mov mov shr and and lea cmp jb mov mov push push lea lea push push lea lea push mov push mov shr and and inc push add push push movl movl movl call add mov test jne mov mov mov push push mov push push push call add test je mov mov mov push push call add movl jmp mov mov mov mov mov mov mov mov mov mov sub mov mov add mov mov push push push mov call add cmp jne mov push push movl call mov mov mov mov mov mov mov add cmp mov mov mov jae sub dec jmp mov sub mov mov test jne movl jmp mov mov mov mov mov mov sub mov add mov push push movl mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub mov add push push mov mov push mov call add pop pop pop pop add ret mov mov movl add shr movl mov mov mov mov mov mov push sub mov add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov sub mov mov add mov mov push push push mov call add pop pop pop pop add ret mov movl mov push movl mov mov mov mov sub add mov mov push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub mov mov add mov movl push push mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov mov mov sub add mov mov mov push push push call add pop pop pop pop add ret mov mov mov mov mov mov mov mov mov sub add mov push push movl mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov push mov push sub mov add push mov mov mov call add pop pop pop pop add ret mov mov movl push movl mov mov mov mov mov mov push mov mov mov sub add push mov mov call add pop pop pop pop add ret cmpl jne mov mov push push call add movl mov mov mov mov mov mov mov mov sub mov mov add mov mov push push push mov call add pop pop pop pop add ret mov mov mov mov mov mov sub mov mov add mov mov push push movl push mov call add pop pop pop pop add ret mov mov push push call mov mov movl movl mov mov mov mov mov mov sub mov mov add push push mov push mov call add pop pop pop pop add ret cmpl jne mov mov push push call add movl mov mov mov mov mov mov mov mov mov mov sub add push mov mov push push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub mov mov add push push mov push mov call add pop pop pop pop add ret movl jmp mov mov mov mov mov push push push call mov mov add cmp je mov mov mov mov mov mov mov mov sub mov add mov mov push push push call add pop pop pop pop add ret movl jmp mov mov mov mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov mov mov sub mov mov add push push mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov mov push mov mov mov sub add push mov push mov call add pop pop pop pop add ret lea add add cli das add insl xor adc add xor adc add dec cmp adc cmp adc add xchg add in add sahf add nop nop nop nop nop nop nop nop push mov push mov push push push call mov mov push push call mov mov push push call mov push push call add xor pop pop ret nop nop nop nop nop nop nop push mov push mov mov and shr test jne pop mov pop ret push mov test jbe push cmp mov jb mov sub cmp jl mov shr mov neg shl add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add add dec jne test je xor mov add inc add dec jne mov xor mov div mov mov mov xor div test mov ja pop mov pop shl pop or pop ret nop nop mov mov push push call add ret nop nop nop nop nop nop nop nop nop nop nop nop nop mov push call pop ret nop nop nop nop mov push push mov push call add test je mov mov mov mov mov mov movl mov mov ret nop nop nop nop nop nop nop sub push push push mov push mov mov mov mov mov mov mov mov mov mov mov cmp jae sub dec jmp mov sub mov mov cmp ja jmp cmpl jb cmpl jb mov mov mov mov mov mov mov mov sub mov add mov mov mov mov mov push push push push xor xor mov mov push push call mov mov mov mov mov mov mov mov add cmp mov jae sub dec jmp mov sub test mov je mov dec neg sbb and add mov mov jmp mov xor mov movl mov mov mov mov cmp mov jae mov test je dec mov mov xor mov add shl mov movl or mov inc cmp mov jb mov mov and mov mov lea xor mov mov mov shr mov mov mov sub mov xor mov test jne mov mov mov movl jmp test je mov and mov mov mov movl mov jmp test jne mov mov mov mov lea mov mov jmp mov test je movl jmp mov cmp mov jae mov test je dec mov mov xor mov add shl mov movl or mov inc cmp mov jb mov mov and mov add mov mov shr mov mov sub mov xor mov movl mov mov mov mov cmp mov jae mov test je dec mov mov xor mov add shl mov movl or mov inc cmp mov jb mov mov and mov mov lea xor mov mov mov shr mov sub xor mov mov mov test je mov and mov mov mov movl mov jmp test jne jmp mov cmp mov jae mov test je dec mov mov xor mov add shl mov movl or mov inc cmp mov jb mov mov and mov add mov mov shr mov mov sub mov movl mov sub mov cmp mov jae mov sub mov mov jmp mov add mov cmp jb mov mov mov test je mov test jne mov cmp mov jne mov mov cmp je mov cmp jae sub dec jmp mov sub test mov jne mov mov push push push call mov mov mov add cmp jae mov sub dec jmp mov sub mov mov cmp mov jne mov cmp je mov cmp jae sub dec jmp mov sub mov mov test je mov mov inc movl mov mov mov inc mov mov dec mov mov cmp jne mov mov mov dec mov jne movl jmp mov test jne mov cmp mov jne mov mov cmp je mov cmp jae sub dec jmp mov sub test mov jne mov mov push push push call mov mov mov add cmp jae mov sub dec jmp mov sub mov mov cmp mov jne mov cmp je mov cmp jae sub dec jmp mov sub mov mov test je mov mov movl mov mov inc dec mov movl jmp movl movl jmp mov mov mov mov mov mov sub movl add mov mov mov mov push push push call add pop pop pop pop add ret mov movl movl mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub mov add mov mov push push push mov call add pop pop pop pop add ret cmp jbe mov sub inc dec mov mov mov push push push call mov mov add cmp je mov mov mov mov mov mov mov push sub mov add push mov mov push mov call add pop pop pop pop add ret mov movl mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov repz add test inc add xlat inc add dec inc add jbe add pop inc add jbe add scas inc add nop nop nop nop nop nop nop nop mov push mov mov push call add ret nop nop nop nop nop nop nop nop nop nop nop nop push push push mov push push movl mov push call mov add test jne pop mov pop pop ret mov mov push mov push lea push push mov push push push push push push push push call mov add cmp jne mov push push movl call add mov pop pop pop pop pop ret cmp je cmpl jne movl mov mov push push call add mov pop pop pop pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop sub mov push push push mov push xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov lea inc dec mov jne cmp jne mov mov mov mov pop pop pop xor pop add ret mov mov lea mov mov cmp jne inc add cmp jbe mov cmp mov jae mov mov mov lea cmp jne dec sub cmp jne cmp mov jbe mov mov mov mov shl cmp jae lea sub js inc add shl cmp jb lea mov mov lea sub mov jns pop pop pop mov pop add ret add mov mov xor dec je xor add add dec mov jne mov xor mov add cmp mov je mov mov lea mov mov inc mov mov mov inc cmp jb mov mov neg mov mov mov mov cmp mov mov mov movl mov mov mov jg mov lea lea mov mov mov mov mov dec test mov je jmp mov lea cmp jle inc mov jmp mov mov mov add inc add mov mov sub mov cmp jbe mov mov mov sub mov shl cmp jbe mov or sub mov add cmp jae inc cmp jae mov add shl cmp jbe sub inc cmp jb mov mov shl mov mov add cmp ja mov mov mov lea mov test lea mov mov mov je mov mov mov mov mov mov mov mov sub mov shr mov mov sub sar sub mov mov jmp mov mov mov mov mov cmp jg mov mov mov sub mov mov lea cmp jb movb jmp mov mov cmp jae cmp sbb and add mov jmp sub mov shl mov mov add mov mov add mov mov mov sub mov shl mov shr cmp jae mov lea mov add mov lea mov add cmp jb mov mov shl test je xor shr test jne mov mov mov xor shl mov lea mov dec and cmp je mov dec sub mov mov sub shl mov dec and cmp jne mov mov mov mov dec mov mov test jne mov mov add inc mov mov inc cmp mov mov jle mov xor cmp je cmpl je pop pop pop mov pop add ret nop nop nop nop nop nop nop push push mov push push mov push push push push movl call mov add test jne pop pop pop mov pop pop ret mov mov mov lea push push mov push mov push push push push push push push call mov add test jne mov cmpl je mov mov lea push push mov push mov push mov push push push push lea push push call mov add test jne mov cmpl jne cmp ja mov push push call add xor pop pop pop pop pop ret cmp jne mov push push movl call add mov pop pop pop pop pop ret cmp jne mov push push movl mov call add mov pop pop pop pop pop ret cmp je movl mov mov push push call add mov pop pop pop pop pop ret cmp jne mov push push movl call add mov pop pop pop pop pop ret cmp je movl mov mov push push call add mov pop pop pop pop pop ret nop nop nop nop nop nop nop mov mov mov mov mov mov mov mov xor movl movl ret nop nop push push mov push push mov mov push mov mov cmp mov mov jbe mov mov sub cmp jbe mov test je cmpl jne movl mov sub add mov mov mov test je mov push push push call mov add mov mov mov mov mov shr rep mov mov and add rep mov mov add cmp mov jne mov mov cmp mov jne mov mov mov sub mov cmp jbe mov test je cmpl jne movl mov sub add mov mov mov test je mov push push push call mov add mov mov mov mov mov shr rep add mov mov mov and add rep mov mov mov pop pop mov mov mov pop pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop sub mov mov push push mov mov mov push mov push mov mov mov cmp mov jae sub dec mov jmp mov sub mov mov mov mov mov mov mov cmp jae mov dec mov xor mov mov mov shl add or inc cmp jb mov mov mov and xor mov lea test je xor mov shr sub mov test jne test jne mov mov and add xor mov lea test je xor mov shr sub mov test je and sub mov and add mov mov shr cmp jae mov dec mov xor mov mov mov shl add or inc cmp jb mov mov mov and xor mov lea xor mov shr sub mov test jne test jne mov mov and add xor mov lea xor mov shr sub mov test je and cmp jae mov dec mov xor mov mov mov shl add or mov inc cmp mov jb mov mov mov and add mov shr mov sub sub mov mov sub mov mov cmp jae mov mov sub add cmp jb mov sub cmp jbe sub mov mov inc inc dec jne mov mov mov mov inc inc dec jne mov jmp mov mov mov inc inc mov inc inc sub mov mov inc inc dec jne mov jmp mov mov mov inc inc mov inc inc sub mov mov inc inc dec jne mov jmp xor mov shr sub mov mov mov inc dec mov cmpl jb cmpl jb jmp mov mov mov movl sub mov mov mov shr cmp jb jmp mov mov mov sub mov shr cmp jae mov mov sub mov lea sub mov mov mov add mov mov mov mov sub add mov mov pop pop pop xor pop add ret test je mov mov mov sub mov shr cmp jae mov mov sub mov lea sub mov mov mov add mov mov mov mov sub add mov mov pop pop pop mov pop add ret mov mov mov movl sub mov mov mov shr cmp jb mov mov sub mov lea sub mov mov mov add mov mov mov sub mov add mov mov pop pop pop mov pop add ret nop nop nop nop nop nop nop nop nop nop jmp add inc imul add clc (bad) ljmp bnd and xor lock push cmp pushf mov std icebp test xorl dec adc and adc aam pushf mov lods or push fcompl push xor adc pushf pop aaa cmp sbb xor mov fild iret push (bad) fadd icebp std std mov pushf xchg ljmp imul cmpsl lret les xor (bad) dec dec stc lcall xchg fisub int leave fiadd int3 imull jnp dec inc mov (bad) stc dec sti pop loop ficom push lea add push sub in cli fimul mov into push (bad) dec xchg jg int dec pop aam inc movsb mov mov std ret mov (bad) sahf mov (bad) sahf mov (bad) sahf mov jmp dec dec xchg pop or add cmp movsl lcall (bad) jnp jmp and in stos jecxz fidivr add mov movsb repz loop stos test imull adc jnp mov push sub mov cmp pop sar push lds sbb or adc jle cli lret dec (bad) add jl ficoml push loopne push iret mov pop adc pop or cmpsb cmp ja mov mov cmpsl sub fs or pop iret and pop (bad) iret sub mov dec fptan xor sar pop mov mov test test out mov sub mov gs ss add lock out in insb ja mov push ljmp xchg leave sbb sbb ss test dec push scas sub fidivl dec pusha xchg ss roll int3 cwtl or xchg out test push sbb cwtl in and popf aaa sbb or xchg lahf sub mov (bad) adc (bad) into or add bound pop mov and jecxz lods test pushf push dec bound not icebp adc fsubp test loope je pop add mov imul pushf hlt dec adc test insb hlt jns out out jno push (bad) sub jmp inc or ficoml mov cmp mov pop cmp in daa sahf push sahf xchg mov sub jno out cmp cltd sub aam cmp or push push fs sbb repz jl mov pop jle popf hlt xchg fldcw int inc sar pop pop dec and in gs inc jae test fiadd mov fs in mov imul sarb sub mov dec dec into rcrl sub sbb xor sti mov cs jae jae es in test dec fwait xlat ja inc cmpsl inc aas inc out mov mov pop outsl and lret cmc movsl xor jae in loop stc insl mov into out std sub dec sahf inc (bad) cmp sahf fnop or rorb out invd add cmp jo xchg test fisubr icebp mov test mov push xor sbb mov mov mov scas mov or ja jb inc shlb jae repnz pop fcmovnbe ret test cs dec call addr16 scas inc lcall cmpsl cmpsl aam sub dec cmp aam ret dec jnp mov xor lret inc xchg add imul adc cmp push aas xchg loope jecxz insb ret (bad) or inc (bad) pop jle pop mov add in jle (bad) sbb mov bound leave lahf dec loop dec aad dec add inc imul pop ljmp dec mov ficomp mov test les int3 dec mov push dec pusha xchg fistl or xor lcall ficoml mov loope adcl notl cmpsl fistpll or push aad jns cli cltd stos stos leave xor add jbe xor and fmul fisubr (bad) movsl into jle or push mov insb cmpsb add jnp std sub jnp cld mov or cld xlat cmp or cmp es push enter push inc js jl repnz fsubr fisub mov cs (bad) jae (bad) sahf icebp or mov and or push adc mov iret (bad) pop cmpsl notb scas sbbl adc mov es sub jae in mov xor es xlat mov (bad) or addr16 cmp icebp aam xchg mov sahf test jmp mov or jge add xlat out addl scas scas xchg jmp mov fsubs fnop jle fwait mov jp push ja mov mov pusha push mov idivl pushf pop jbe jnp (bad) cmp aam lcall and add pop enter (bad) hlt mov pop push popf data16 test dec mov xor paddq and or cmpsl ljmp sbb sbb pop dec cmp fs cmp and mov loopne clc rcll xchg and fstl adc in lret in push std outsb (bad) mov hlt sub iret mov pop test cmpsb mov insl js mov shl jle imul mov mov push int3 cltd adc (bad) jg into mov pop pushf jp jle scas inc scas mov addr16 insl inc scas (bad) fwait insb jle out arpl clc rcrl add fs sbb repnz xor jbe loop mov aad insl shrb sbb out cli jae mov add jne jmp jno pop sbb add cmp lret cwtl mov push shrl sbb imul movl and push jmp push sbb xchg fidivr add or pop les dec lret mov daa cli dec pop scas push or fidivr aad mov js pop fdivrs push in xchg js mov xchg jp test mov pop loop into mov xor dec lods xor inc ret push cmp fwait mov cmp fs add jnp lret lods nop pop mov repnz inc ss mov imul (bad) mov pop xor inc shlb sub mov mov in mov mov push iret pop xor jmp push pop (bad) jae or adc sub ficompl or aas ret into mov mov leave mov or sahf sub pushf mov push adc cmp pop (bad) imul mov lahf into push xorl in out mov pop clc mov enter pop cmp pop leave dec xlat mov mov test test imul cwtl mov mov add clc push sbb push cmc push pop (bad) dec pop cmp mov jne fstpl icebp push nop xchg adc sti xor mov mov jae jo jns xchg xor test xor imul out push ja popf xor xchg int clc mov scas cmpsl stc push or std sub in jp out loop inc (bad) mov pop fmuls js rcrl jo mov in cmpsb and shrl mov out and in and xchg in and out mov xchg xlat pop clc and mov aad mov data16 sbb sbb lret rclb xor or stos sarb push fwait cmp push int3 dec je lds push fwait cmp bound (bad) mov or mov cld loopne loope mov mov add cmp xchg movsb xchg or mov mov repnz push test sbb mov xor add adc push fimul inc or mov xchg xor (bad) leave into mov mov cmp push mov (bad) inc pusha jns adc push mov jmp lea stos rcrl cmp roll jmp xchg pushf fistl add push mov xchg push dec insl aaa aas ja adc test gs adc push cmpsl adc nop movsb fist mov movsb lahf mov imul pop xchg stos fst inc dec lods mov fildl movsb xchg xor movsb lahf in mov sub add out push daa loope mov cmp dec adc push mov daa sbb xchg lock pop jb cld xchg adc inc jmp movsl pop scas mov jmp stos cmp addr16 data16 push enter outsb push sub xor loop stos cmpl cwtl mov mov fisttpll sbb scas test test mov jnp dec push iret jns cmp or adc mov in or hlt cwtl lcall mov into xchg test pmullw pushf enter inc pop movsl mov sti cld bound ficom cld mov test push sbb mov mov or bound mov add scas inc add mov in test pop lahf std sub xchg out cmpsb xchg mov jecxz repnz fiaddl int out sub les lret cmp add dec jne (bad) (bad) mov mov xor test xrelease sub cmp decl mov int3 push or lds movsl shll lcall xchg call xor mov les push aad or call (bad) dec mov adc lret jnp cltd mov cltd jecxz xor jge enter mov mov into add ret mov in (bad) rorl and fucomi lret xchg lods cmp add push jle jb inc xlat add jbe inc ss or js outsl sbb rolb sbb mov cbtw sbb dec cmp xlat sbb or movsl pop hlt divb out (bad) negb push push pop cmp icebp popf fstpl adc mov test and cmpsb push jb pop xchg jns lahf shrl sbb xchg sahf mov and mov jle adc adc mov push fdivrp fimull in test ss mov in int jnp fcompl lea es jg scas idivb and int pop das test lcall adc cmp ret pushf popf inc daa out rcl or pushf loop jb stos sub popa out xor das jle clc inc cmpsb dec scas imul adc sub lods js inc in (bad) xchg or aaa mov scas ss mov inc mov mov rorl push jmp (bad) ss or into fbstp adc icebp xchg xchg cmp fwait in xchg addr16 mov inc rcrl lret ss imul movsl std jbe aad out jnp js (bad) and jo pop aaa imul jle cwtl rorb stc std adc ret movsl mov ja pop xchg les call stc jno cmp (bad) ja jbe outsb xor and cltd pusha and and gs inc sti sub repz mov pop or mov xchg xchg and fstl adc ja lret cwtl xchg add pop fbstp mov cmp and add data16 sbb pop inc icebp mov or inc ret mov ja adc mov std pop push cwtl adc xchg inc push cmp dec out in add sti data16 orb adc insb shll mov push adc xchg pop shrl sbb pushf sub fs imul inc xchg sub cs mov test push incb out ret push dec sti push adc pop lret cmp out xchg mov int3 lcall stos iret test dec fwait rcrb fsubrp out sbb into insb (bad) out dec (bad) outsb aaa mov (bad) ja lahf push dec pop push push xlat xchg pop xchg movsb lds js es jmp xchg sub sbb sbb (bad) call xlat imul ret dec mov sahf out inc xchg movsl pop add js push dec inc sbb lods pop cmpsl rorb sbb inc inc sti xlat out mov icebp dec popf pop pop rcll sbbl dec add mov es out aas loopne dec dec leave sbb mov push dec pop std jae fmul mov loopne mov sahf or mov clc sahf in arpl inc xchg dec mov and test mov fdivrp jle or movsl push or sbb inc pop sub ja rolb les lret sub push pop jnp xchg mov sub outsb (bad) cmc hlt pop dec xor out ficoml inc outsb lds out fidivrl inc les xchg jle lcall fst lret ret cs cmpsl repnz in (bad) xchg test fstps jne leave scas and dec enter out dec leave dec push test pop add dec in pop dec jb sub dec push fcomps shlb mov xor sbb das push sbb sbb cmc test mov push out or sub cmp or jle jae adc sbb sti (bad) xor or sub mov int3 popa pop jo mov (bad) (bad) xchg lcall mov pushf jne lret ljmp movsb shll cmpsb xchg inc cmpsb lret ret insb popa add movl lret pop lock cmp lret (bad) mov ret xchg shrb loope (bad) hlt sbb lahf into std lea (bad) pop jg mov loope sub mov outsl xor mov cmc adc lock and gs pop xchg lods lahf add adcl pop shrl jae xchg pop ret loop into sub push call pop push sbb dec add ljmp xchg add popf jle imul pushf sbb adc mov or mov xor xchg jb cmc in ja jo mov xor arpl cmp (bad) or orl test xor inc sbb add (bad) mov imul mov push jo iret cmp (bad) add sub sbbb lds out push out and icebp push lret fdivl into dec add xchg leave mov imul ds dec cs xor mov mov sub outsb push mov mov dec scas loop sub ret xchg aad mov mov rorb cmp out cmp (bad) pop scas div pop call push insl and mov daa pop mov lcall mov pop dec in add test cmp mov adc in mov jne jmp lret mov fwait iret dec test cwtl inc call or daa test inc fs ret sub dec mov or dec cli pop push in ljmp scas test pop or jnp mov mov add xchg js repz mov sbb (bad) and fmuls xor andl mov loopne loopne xlat mov clc sub jb cmp pop dec push (bad) mov and pop into jae pop push cmp in push pop mov or fcomps dec pusha push or (bad) mov adc (bad) jg sub std and sub sub outsl repnz push pop inc xor aam xchg dec sub cmpsb aas jmp sbb les fwait out int fwait or jo jge cmpsb ds ss mov das push cmp sbb (bad) (bad) pop sbb (bad) rorb mulb push xor pop and adc popa subb cli dec icebp jo and ja enter lahf mov fcomps leave idivl inc adcl sbb mov fildl mov sarb inc push pop rclb nop and sahf inc out pop bound into clc add into mov push fwait aam push idivl xchg mov stos inc loope js (bad) aam test or repz mov imul inc or in sub inc scas push push inc jmp test or (bad) push lods mov clc jmp fdivrl lds push je loop sbb es pop pop pushf loopne jg loop test (bad) xchg mov pop cmp inc xor out stos jnp mov xchg cmpsb and in ret (bad) in or insb in jmp mov dec xchg cmp pop negl jae mov pop xor xchg rcrb cmpsb push mov dec pop xorl (bad) fcmovnu (bad) sbb jne pusha mov andl jns insb pushf testb mov adc (bad) cwtl icebp cs and sub daa jo imul xor jns mov daa mov xor mov mov push mov jge (bad) push dec arpl mov pushf xor mov lret mov jnp pop popa (bad) lret pop iret xchg adc les ficomp inc jl and stos sub dec push or dec nop lds hlt int inc pop popf scas xchg cmc int3 sbbl pop loope xor repz popf dec pop cld and ret pop pop xchg mov pop jmp clc push cs add sahf js and lock pop jbe imul jecxz push bound sub xchg (bad) xor stos clc jmp adc mov mov fdiv popf add mov cmp mov xlat out mov out push xchg mov cltd mov clc and leave orb loop jecxz,pt inc pop int or or outsl in (bad) lods xchg pop sub and cltd cli lock into mov jmp adc lds mov xor or mov jbe iret es sbb cmc mov insl adc adc cmp (bad) mov add negb jg pop js xchg fstps and adc pop cmp fdivs or fnstenv push inc cld and or sar repnz mov std scas cwtl das not es into out cmpsl ss pop dec mov jns or out add pop mov sub (bad) das out sub out sub inc lea cmp stos imul jle or shll dec cmpsb add scas scas add mov scas imul mov sbb lret mov repz jae lods dec mov enter mov popa push mov pop adc call popf push out sub pop mov aam call movsl adc jmp sub sbb sahf test mov andl push mov add or pop xchg int out inc rorb fcomps or inc inc testl jecxz jnp (bad) aad sbb fstps stos mov dec mov add cs imulb mov mov dec xor out push ja jp dec movsl adc xchg mov fidivr xor xchg loop pop push pusha idivl ja mov nop xor xchg jmp jl dec push scas (bad) adc hlt pushf jo add out pop and ret mov jns mov aaa jb cmp or xor add lahf or mov (bad) scas shll addr16 sub jno je fidivl or add lret ds enter in mov inc jo hlt xor xor pop fcoms mov jnp aad adcl (bad) cli es jnp out xchg imul js pop aam dec inc clc mov or arpl pop mov (bad) cld pop subb xchg add mov lret add pop subl inc jmp in cmc (bad) aas scas call jecxz push sbb dec jecxz pop push jae dec jbe cltd sub push ret add sbb imulb ffreep pusha sahf rcrl jbe lods aad inc sub mov cli inc pop mov sbb mov dec dec or pxor mov or out inc adc iret sbb xor xor int mov aam dec push icebp dec push add clc lret xor or fs xlat pop dec sbb dec lods in jmp mov sahf fisttpl or inc sbb out mov add imul xor sti out movsbl clc daa mov lret ja push sti aaa xchg mov cwtl stos and fwait mov lds pop pusha int3 mov push dec lahf enter xchg ds ffreep in fstp fs daa fildll mov (bad) push lods test pop mov popl jge movsb lret hlt call gs dec sub ds lods fs lds in jp inc ficompl dec inc sar or cwtl fsubrl orb dec test or mov pusha push lahf fwait adc sub aaa pushf pusha dec das mov dec pop xlat dec add loope (bad) aaa xchg inc sub faddl push outsl push or mov sub int dec xor push cmpsl insb inc mov (bad) lret lahf call push repz fnstsw jbe xchg inc loope (bad) dec xchg mov and dec test mov int3 jae dec lds or repnz popf mov daa inc pop pop jne nop fild out arpl add and sbb mov fwait sahf orb out xchg cmp pop xlat add mov insl out dec and dec adc jl jecxz (bad) jecxz and sub andl mov add jne adc das lods je and ret enter jecxz fist inc mov mov dec cmp fsubrl push js xor sub pop dec jg fcmovnu iret xor mov data16 fadds mov and push mov inc clc (bad) test arpl shll test sahf lods dec push scas push and dec fwait mov pushw and shll mov cmp sbb mov pushf adc arpl movsb outsb shlb loop and std sub rcrl cmp popa jl (bad) addr16 dec mov jb or and fiadd (bad) les (bad) sub pop fs lret and add int push in cli (bad) mov inc or pop mov (bad) inc cmp xor ret dec fstpl shlb fwait (bad) jmp cs cmp lahf push into cmp jbe mov lahf sbb inc sub scas or mov pop push cmp add mov out pop fimul xchg jns jno rolb and shll add stos movsl mov rorl sub ret test je repz pop out jae xor movsl leave inc lahf mov lds rol (bad) and pop in lret mov xchg adc imul aad push mov mov push insb dec mov iret and pop xchg mov ret mov lock pop dec mov (bad) mov sub pop cwtl sbb xchg movsl mov inc outsl pop loopne lcall adc in mov orl hlt inc in or dec jg jge xchg push and into mov add rorl push out lret xchg insb (bad) repz es lret jb xor shl sarb fucompp mov mov enter xlat mov mov jle add xor sahf rcl inc iret enter fsubl movsb sbb pusha add lret sub cmp pop and mov clc jle mov data16 ret aaa loope add mov and or or ja add jl lods popa xchg addl outsb addb cld pushf idivl pop mov and inc sbb pop sbb mov jg dec xchg mov push xlat pop fcomps (bad) hlt pop pop xchg sbbl inc xchg adc leave mov jbe jmp push xor and aam add cld push (bad) cli fcoml pop outsl cmp xor mov enter jge push sbb ds repz stos mov roll sub dec push inc out jle sub and loope jge xchg in in fisttpl (bad) idivl loopne loopne xor push cmc cmc mov dec mov dec mov test add shll xchg outsl rcll add imul cmc dec add bound mov int mov jne pop ret cmp popa fisubr fiaddl sub sbb inc add jae mov add ds aaa ljmp arpl addr16 sarl ljmp fxch push jl mov pop aaa xchg into dec rorb or out (bad) xchg and mov (bad) xchg mov mov mov fist inc (bad) loope jle test or scas scas add ret stos jg cmp scas adc jnp and mov xor push mull (bad) xor outsb cmp mov push loope inc (bad) sahf jne cltd xor mov cmpsb jp push jno inc jns (bad) loop int3 cmp push and push cld stc xchg int3 lock insb aaa loopne imul jns sbb js jle add iret mov es test out jl xchg outsl popf lock call mov sbb mov les adc adc ds jb xchg cld mov cltd dec sub enter mov int3 mov pop adc adc arpl sub pop xchg mov xor arpl js enter (bad) hlt (bad) sub cmpsb or or add sarb fistp mov leave cwtl mov fcomi cwtl cwtl push mov fiadd cmp aas rolb fwait pushf xor push repnz or inc das mov xlat scas xor push dec (bad) sbb jmp lret stos pop sub cli stc xchg xchg fcmove ja and sahf int imul mov add sbb call inc pop jb mov mov jg je inc inc dec lret dec insl fwait into (bad) lcall lahf (bad) pop (bad) sub inc sahf dec faddl call jmp xchg push or and push je aas sub fwait pop roll sti mov mov xchg cmc aaa (bad) leave loopne push mov cmp sahf xchg lock mov sahf aad (bad) dec mov jbe dec mov fwait mov das cli (bad) or imul loope cmc in fdivrl scas mov mov mov mov cmovg ds test imul aam repnz add std or popa or repnz pushf pop jg enter ljmp add adc (bad) push pop fldcw jg divb outsl push mov data16 cmp jns aaa jmp enter cwtl push pusha sarl (bad) int or sub push into test push jb push (bad) jmp in adc aas xchg xchg xor ja rcrl jbe call dec bound lcall add push mov cli add jne les sub dec arpl mov stos mov fisttp push fsts cmpsl cld jmp push les lret dec cmp scas mov dec out rcll std and call push mov aam sbb int3 je jmp jmp lds out push rorb sbb sub andb test popa push push dec adc sti fucomi fisubl cwtl cmp scas aad xor pop in sub test push xchg lods pop in lods xlat push insb cmpl mov in adc fisttpll das rorb addr16 sbb insb scas adc aas scas xchg pop jl sahf mov dec mov mov mov stc insb mov out cmp jp inc dec lret aaa in incl subl data16 repz pop mov pop or fidivl add or cmp mov in in mov xchg fwait sbb les movsl push in cwtl xchg lds sbb pop fucom stos pop (bad) and cmp jecxz sbb xor add mov cltd in je movsl lods xorl mov xchg lea dec add sahf cmp enter mov mov inc push jle mov shlb sub mov add (bad) pop push scas cmpl or ficom es fwait adc push pusha mov idivb popa or and jmp push test push sbb jecxz mov mov pop inc cmp in ds gs inc imul sub sbb loope xchg arpl adc (bad) fisub or fucomi pusha stos subl sbb mov mov cld pushf (bad) sub shr push out sbb xor mov sub jne stos insb jne nop inc dec ljmp int ds jecxz jno fwait out or scas repnz mov inc incl (bad) jno jno add sarb push mov lds xchg jb adc cmc inc jbe mov push mov mov ret into dec cltd lods ret mov jge rorl jp jo mov jecxz aas and js hlt (bad) (bad) sub mov push mov cld into aad dec scas or fs dec push xchg aam jp fldenv movsl and clc dec rorl add and jg or lock mov repz ds (bad) ljmp sub push or jo rclb stos mov sahf mov sub outsb (bad) cwtl push cmp push mov sub (bad) xchg ljmp mov iretw mov test mov mov lret stos push scas int3 sub ret popa int3 dec nop lahf outsl fldl xchg lret ds and scas int3 mov adc inc xchg mov mov mov sbb inc mov ss pop out (bad) sbb ret push jae ljmp sti adc cltd icebp je outsb pop add test mov push shrl lods xchg pop stc or ljmp sahf add test jl (bad) jmp in out push pop test aas sahf dec mov ss cmpsl inc inc push inc divl adc repz inc repz and xor repz lock add xor jnp dec add lods lods jmp mov lret sbb daa cmp jno jmp imull fwait rcl sbb andb push jno sub stos (bad) scas into (bad) dec lds les ret out ret sub fs lds in test dec lds pop pop sub inc aaa or fldenv adc xor xchg (bad) sbb push jl mov div dec sbb sbb shrl sahf (bad) lock fsubr cmpsl xchg or bnd loop (bad) mov aad cs rcl xor out lcall jmp push inc jecxz mov mov aam orl lret rcrl inc xor sar mov cmc aam mov mov lret push scas test inc jmp call aam addl inc es xchg stos rolb movsl sahf inc pusha clc and scas stc adc leave pop mov dec outsb sub cmp adc mov out (bad) lods sahf add js fwait mov stos into push addr16 notb xor js test cmp or jne mov mov pop adc jae cmpsb xchg sub push push mov rorl (bad) mov sahf dec mov mov outsb inc inc xor xchg std sbb les je out cmpsl or daa pop les dec bound push cltd mov pop sub inc in insl jae jns imul dec mov stc inc add popa pop sub lods mov sbb fs fnstcw xor xchg mov lret adc mov iret mov adc lds out cmp sub xor adc mov fisttp divb movzbl lcall les cmp mov mov cwtl shr and add aam mov (bad) pop xchg stos std je lds fstpl enter mov incb shrl mov cmp pop out cwtl pop cmc sahf pop scas icebp ss nop and sub jle add ja fdivr fwait jecxz sahf inc stc into out xlat sub outsl inc rcrb pop push imul jae adc ljmp lock aam iret in or mov ljmp fisttp mov repnz sbb xchg dec (bad) (bad) xor mov push jg xor or dec addr16 in rcr pop ficomp and lret mov insl (bad) xchg add pop in ja add aam jle lret or xor inc shl pop pusha (bad) inc push (bad) lcall bound mov (bad) mov ret (bad) loop push sahf mov pop or cmp add jo ss sub xchg (bad) fadd (bad) in sub stos bound sub call inc xchg shrl notb add dec js lods test imul daa sub xchg mov sbb push mov lods mov mov (bad) das cmp inc mov popa xchg ja sbb test cmc in sbb mov shll or out hlt mov pop out sbb scas ret cmpsb cmp sub lahf inc or sbb sbb iret mov inc mov popf fimull (bad) ljmp push dec or (bad) rep loop lret sub lcall inc aam fidivr lock inc movsl cmp jne cmovne (bad) int3 push pop add lds jg subl push inc xlat sbb mov pop (bad) sub sub lock (bad) cmpl adc stos xor xchg andl add nop fwait aaa jb scas imul aam mov cmp or shll mov adc dec lret cmp in mov out addr16 xchg les test int3 out and dec rorb in orl lret or and or insl inc sub js,pt xchg jge xor mov xchg fadds cmp cwtl mov es mov xor push lahf xor jg dec xchg adc bound sbb mov lcall mov jp xor incl das jp jno mov jge int3 push sahf outsl test add xchg addb movsl dec xchg into cmp fcom ficomp orl hlt sub adc xchg mov in mov add pop jbe insl out cli cmp or cs neg (bad) cmp push out sahf stos jmp jnp dec fstpt shr sub cli hlt jl into jae add aas cwtl inc pop jge xor sbb movsl mov fadds hlt in inc or out out jmp xchg sti mov mov loopne aaa sarl jle sarl imul adc dec adc ror sub (bad) int3 push xlat in ljmp out push xchg jae,pn jp or out div ljmp mov out jno stc push into shrb repz pop fisubl lds ficompl loope movsb loopne jne inc jecxz sahf decl mov fimull loopne xchg aas ret stc stos xor (bad) daa sbb shrl push stc or mov sub clc add imul imul and jecxz cltd fwait addr16 adc cmp sbb inc adc jbe mov int ret loop in push inc jle sub outsb dec pop or pop xchg mov into push aam lock and hlt cld sbb movsb and mov data16 orl je idivl cmp xchg out std jbe into pop (bad) sar (bad) es sub push test insb jle aam ret and popf jns lret ss mov cmp sarl das inc push scas sub xor sahf aam mov lcall daa ret inc out rcll xchg sub sub fiadd fs mov subl inc aam aaa loop ss or mov loopne mov leave adc daa out xor mov cmp dec adc out mov jnp jae or data16 stc cltd ret leave int push int3 mov cld lock fistl mov lds mov dec cmp mov inc pop mov lahf pop mov jmp test cmp sbb cmc enter cmpsb adc in cli add adc repz and jbe fucomip mov pop sbb pop mov clc orl into std push jns adc fidivl sub jge xchg cwtl je test sub fcoml les popa mov cmp aas push cmp in imulb mov mov mov in mov sbb sahf cmp (bad) arpl lahf cmp inc scas ret jmp cmp lock add out or loope loop dec jb les hlt sbb pop lods pop push xchg cmp xchg (bad) or imul dec test jns mov (bad) or jmp (bad) mov push mov insb add adc test and icebp fiadd mov stc pusha mov push pop lods push inc jmp test aam imull xor adc add jge je xchg dec mov (bad) icebp inc fdivrl pop ficomp sbb adc sbb ljmp in inc sahf arpl jge push push ss inc push inc leave inc lock push ja or stc fldcw pop jl rorb sbb add (bad) and pusha dec xor mov xor push add lret or stos mov and pop cltd push or out push or stc in les loopne bound jne dec lea pop sub push adc cmpsb or fcomps jle inc jnp and sahf pop jnp sbb or cmp fmuls adc sub sub add fs adc sub mov imul and test rclb sbb ja lock pop aam pusha int ljmp movsl cmpsb mov das adc inc pop shll mov in arpl into sbb leave rorl outsb xor cmpb push mov dec pop ret xlat call pop mov in add inc cltd cmpsb add (bad) int3 xor sub xchg add and jns push scas push adc jne scas mov sbb mov ds pushf adc std stos mov sbb push sub fiadd jbe mov fcmovne jecxz inc jp pop aam scas ljmp (bad) iret imul cmp xchg js aas adc mov adc cltd push inc outsl movsb js hlt sbb (bad) mul sbb mov mov mov mov xchg pusha jmp add pop aas std inc icebp add fistpll sbb mov sahf cmp jns mov rolb xor mov inc cmp out js or xchg pop lods (bad) fldcw daa sarb sbb popa jge repnz sbb push popf jp cmp mov repz flds stc lret add aas sub mov (bad) les fsubp movb icebp js sub cmp xor jo test sub cli xor ljmp shlb inc mov adc fwait inc andl mov mov xor add add idivl in jae pop dec jae pop cltd mov sbb xchg lds mov jge,pn cld cmp sbbl mov mov mov xchg mov sarb xor ds pop lret outsl mov dec xor mov jle xchg jecxz dec jl pop lret out cmp and cltd inc pop mov test mov out cld mov jb mov js loope rcrl cmc add repnz orl cmp sbb je sbb mov in mov adc inc pop sbb in dec leave icebp sub stc jg push push push and ja lock cmc repz dec mov pop pop and (bad) jo pop arpl mov pop and jl mov mov and les orl lock jl mov add pop pop push push mov shr and rcll or xchg aaa pop push jo or and inc movsb fwait ljmp push inc or push jge mov xor sbb ljmp inc mov mov lea jae,pt arpl pop mov nop or inc arpl or int3 add outsl and test (bad) jno lret (bad) iret (bad) nop (bad) dec mov mov xchg inc lods or ret adc pop out sbb dec daa sbbl divb sub dec jg jns cmp cmpsl not xchg (bad) pop push add adc and ret mov fcmovnu (bad) sub dec push or push jbe std xor roll and pop sahf xchg adc dec mov adc cld mov orb xor jl or icebp and add imul and mov adc sub pop jo add mov adc push (bad) or xchg xchg pushf xchg mov ret cmp mov sbb lds js movsb xchg inc lcall adc xchg mov loop pushl mov repz pop add push xchg inc mov out mov je lret pop xchg adc addl les jbe cmp jp jnp push pmullw dec mov jo out fistpl imul inc (bad) dec lret add mov stos dec xchg ret add imul dec mov (bad) imul (bad) ljmp push clc (bad) mov add int3 inc pusha pop xchg mov ret addr16 int mov fmull dec pushf les xorb xchg jne inc xchg dec in mov sub cmpsb adc mov je fidiv inc add loop xor fwait cltd out xchg jmp xchg jg jo or in mov adc in sbb ds pop cwtl jge sti push mov mov and add dec int3 jne jmp test xor xchg mov xor insl int scas ret push inc js or out fisubr inc adc jne aas ljmp or mov scas (bad) dec aad incl cwtl outsb adc mov ret sbb or cs sub push pop cld fwait cmpl jle sbb sub or sarb mov divb scas xor adc ds dec xchg mov sar rclb or jne jl mov outsl loop mov rol iret pextrw mov cmpsl inc sbb lret fdivrs dec jge (bad) mov add mov mov sbb or pmaddwd sbbb es and lahf icebp dec repnz dec push aam dec rorb adc cmp add jg or adc (bad) lock xchg pusha imul in repnz int in das mov and pop jbe ds enter push fwait jb adcl pop loope lock xor cmp out stos incl xor cwtl jg and jle fs (bad) sub mov xor arpl mov cmp int3 inc ds imul inc jb mov or mov pop cmp pop mov pop mull fidivl xchg cld aas mov mov mov aas sub (bad) inc jg mov icebp enter adc push sub lahf jg popa (bad) xlat sub push pop in mov and inc fs and cmp dec gs dec enter sti pop mov mov (bad) sbb jne repz push daa jne sbb repnz push mov cmpsl and push xor sub jb mov fadds mov roll out mov insb jns dec lods je fwait daa jmp and inc mov lods and in outsl in out jo popf sbb cmp data16 adc pop xor mov imul imul lahf out cmc arpl rol pop repnz pop clc jecxz test call push pop fmull sahf fmulp in sbb jne (bad) (bad) dec xlat fidivl fidiv dec adc outsb (bad) out mov or sbb jle imul sbb std push push push movsl stos pop fs (bad) inc mov xchg xchg cmp push mov pop (bad) push mov push loopne push mov sbb push (bad) sti hlt pop jecxz test push push and arpl int3 sahf mov fsubrl jg es iret add in es inc push shll imul gs sti and gs sub push jns rclb inc imul fwait lock bnd inc (bad) xchg (bad) test in daa aam lea xor lcall mov rorl icebp ficoml sub cmp insl or mov clc mov adc add mov into popa cli gs add push stos sub cmpl stos xchg and dec mov dec sbb fs or and jbe leave das out (bad) loop out jp xchg ja pop imul mov mov lods adc (bad) jmp out jnp adcb xchg mov out gs test loopne lret mov inc mov imul movsl into sbb repnz xchg dec sbb adc cmp add sub sahf movsb cmpsl aad dec xor push push faddp (bad) incl arpl jb dec test jo push jmp jge pop dec dec xchg sbb (bad) dec adc adc outsb les add jp test sub int loope cld incl aaa mov mov xchg rolb ret ja pop add jnp dec and pusha pop and nop inc inc mov pop (bad) mov lcall xchg cmc pop or sbb cli scas push xchg (bad) cltd (bad) popf dec inc scas dec bound or fucomip imul out lods fisttpl adc inc lock out test sahf loope sahf in iret iret ret out shl dec arpl jle lock scas sbb pop pop cmpsb add andl mov push test ja mov sub xchg cmp das pop jnp cld jg incl (bad) push rcl cmp or in (bad) pusha adcl insb jle adc jl arpl fwait sbb imul lea imul add or xchg push lods (bad) fldenv jns adc (bad) (bad) fdivrl fdiv movsl ror lods jmp pop cltd subb psubusw out imul (bad) sti mov push jns or dec (bad) mov pop mov dec adc jge js cmp sbb and sub mov pop das jo nop pushf mov unpckhps stos add clc lods jge dec mov mov lock mov lods xchg aad sbb mov add mov push pop ret jne fcmovnu push dec jnp (bad) lcall cmp jmp pop stos sub mov lods xchg mov out mov pop fildl comiss test dec pop sub cmp leave ret js inc aad gs fcomi lds mov (bad) mov push xor test lods mov mov (bad) adc (bad) jo bnd xor rorb add adc adc dec sub pop jge jg insb push push jmp xchg movsl std push mov lods ret repnz ljmp outsl aam je enter leave adc push cmp adc xchg ret mov jb fmull negb or int3 sbb xor daa jnp dec sbb insl adc aas jns adc mov (bad) lods data16 mov das or pop mov mov and adc stos hlt mov add jns fs hlt lret pop push ja sbbb mov or stc dec jns negl mov addr16 xchg add rcrl dec leave jno jo mov je or test xchg cmc aaa neg sub inc outsb mov out xchg dec ror (bad) addb scas lock mov ljmp push aas dec push or je or adc outsb jp shrl pushf aam pop ret fs dec xchg xchg mov jmp pop and imul jae jns inc jge test rorb mov sbb or movsl sub add sub sub bound fs out sbb (bad) out (bad) fsubrp shrl test dec enter in pop out das mov imul dec push (bad) scas sarb fsubrl fbstp pop or pop call arpl les cld outsl mov sti stos add jecxz test repnz adc fdivrp std scas ficom dec sarb adc cmpsl pop lods sub dec push scas jns add (bad) test or cltd das ficoml jmp inc test int3 add pop add pop add cld es out jno push mov icebp jae cmp cmp or inc lock cli dec sbb add cld cmpsb push cmp les mov mov jo xchg and mov and lods hlt mov jge std mov sbb fucomi mov xchg jg imul movsl data16 jle dec out lds call loop xchg xor enter sbb xchg inc jl mov das fcompl jle clc fbld clc and aas ljmp lahf (bad) sti push inc jnp in push pop (bad) mov mov popa dec jnp lahf xchg imul or daa lahf rcrl lock ficomp insl es pop aaa out lcall rcrl cmp push inc outsl scas insb or pop dec stos ret push mov (bad) jg and data16 push inc xchg sbb push jb mov clc dec cmp sahf or jl hlt int3 int daa or inc push adc and and inc sti mov out sub scas mov fisubr fnstenv divl pushf xchg int3 rcr xor lret mov lods inc mov out test shlb or pop jae jl movsb (bad) iret pusha enter out ret jbe sbb mov xor cli pop and pop ds mov mulb xrelease fs (bad) outsb pop sti push xchg sahf movsb popa stos jecxz repz mov cmp into fsubr in std xor movsb or lods (bad) mov jl inc fincstp mov (bad) jle in lret add out iret sbb dec incl int3 les jge mov dec cmp cmp push in aad aas xor push leave aam imul cmp ljmp adc inc mov ret imul into cld jb mov jns xchg iret mov mov (bad) sub xor jg add into cmp pop (bad) nop outsl loop mov rclb into or mov mov rorl fs mov push mov lret mov je or jbe adc adc les mov inc push aam xor dec jno stos push out mov adc push rep sbb add mov jns lock call add call mov inc pop push addb dec repz test and lahf stos cs mov push lea jle fwait push test (bad) data16 imul dec cmc mov sbb adc or sbb cltd shrb sub in outsb sbb incl push dec enter rcl insb popa out nop pop (bad) jmp xchg add mov jns push out or jno mov sbb (bad) fdivr sub jnp outsb sub sbb xlat in daa dec push or xchg pushl mov ficomp mov out clc mov rclb inc dec mov push xor mov adc jecxz mov loope cmpsl in int3 jp inc push sbb cs bound cmpsb clc dec cli xchg sub maskmovq mull xchg loope xchg adc inc das cmpsb jae jl add daa xchg mov (bad) out movsl mov mov mov or and rcrl or mov popf in xor mov in sbb shlb orl in fldl dec in fnstcw dec push push inc inc push (bad) leave (bad) not into fsubl test pushf inc sbb sub lret pop sub or xor dec lds push xor pop mov clc loopne enter jne dec jnp inc inc repz in int3 daa data16 mov jmp lcall sub outsl lcall shl pop test sbb js ss or cmp popa mov adc aam xchg add inc add enter mov seta add dec dec stos mov fbld mov popa addl sbb incb xor jmp das clc mov cli lea movb pop ret jns mov imul movb ret fldcw sub mov xor cmpsl mov lea adc inc cmc ficom add aad inc cli dec or inc fstl push stos in lds enter out scas jge xchg cmp clc ret sbb ja ljmp xchg mov sbb sub hlt test sbb xchg cld push fcmovb test jo fwait adc out dec (bad) mov adc cmovbe int3 jno xchg jmp inc fs (bad) push mov xchg push push dec add lods mov mov jo (bad) es pop icebp sbb push add add fidivrl seta mov or dec pop outsb (bad) dec xchg or mov in imulb pop daa aad pop sbb scas pusha pop cmp adc or repz bound fist arpl pushf ss jge rcr pop out push imull mov mov lret (bad) adc cwtl mov fldenv sub pushf push cli sbb mov ja cwtl mov out iret out (bad) mov in loope dec xlat push xor inc in mov sbb pop in pushf rorb sar ds fbld mov lea sub xlat or dec mov sub cmp sub stc pop and dec jp dec pop pop lea ds mov repnz addr16 enter xor rorb mov push dec sub iret psllq dec adc out xor xor lea dec imul (bad) (bad) rcll dec ret xor xchg sub aaa lea xchg fidiv inc das rolb call xor dec and push pop rolb ret sbb push outsl adc (bad) out xor or lret sub xor test lret push jl xchg ret gs rcrb ffree lea dec rol fucomi imul movsb js and movl jb les mov roll (bad) roll int mov fadds je (bad) sub es xor xchg orl (bad) cwtl loop push mov test out loop jno push or gs fcmovnu (bad) arpl out in nop mov push std or insl adc js adc mov jb sarb icebp repnz int3 inc add int loopne xchg decl pushf ja mov movsb stc adc cmpb jno arpl dec aad adc mov pop pop dec aad ss (bad) pop jl mulb insb pusha repz ljmp mov or loop xor pop pop pop ja xchg dec arpl scas dec push dec lret inc sahf dec mov mov jmp in fnstenv outsl popf aas notb lret add insb or jmp and add sti (bad) push mov out inc rcll icebp je pop loop dec mov lea jno sti bound mov and lret (bad) inc fcmovu std rclb arpl repnz movsb sbb jne jb,pt mov mov cmp fildl xchg mov imul and cwtl sub pop xor inc mov lahf sbb sub ja iret dec rcr ljmp mov jb mov imul sbb fwait ss mov (bad) xor insl out cmp cli outsl add mov adc xlat icebp and lods dec add dec dec lahf fmuls dec sub into pop out pop adc push mov iret orb (bad) fadds cs push sub mov fdivrs sti and aam sbb or mov xchg (bad) popa inc inc scas test inc pop fldt aas cmp pusha xchg test icebp int3 (bad) outsl cmpb inc cmpsl scas outsb xchg lods (bad) dec shrb fstps subb loope cmp and pop jmp push repnz jge aas jle mov pushf sbb inc xor adc add sarl lock mov popl shlb pop cmc dec and sbb mov cs pop mov cltd push inc addr16 sbb pusha sub aaa inc ds xlat lret jecxz mov ret inc cs jns and loop fisubrl das jo imull mov mov andl fnstcw (bad) (bad) mov sub push movsl dec mov cmpsb lock cmp scas int3 sub adc scas fstps (bad) mov cmp and ret xchg out fnstcw sarl dec fimul jle inc imul or jbe ret push lcall pop lods lret inc xchg stos pop jecxz ljmp push bound imulb jo repz push (bad) or mov in or mov mov sbb je imul or incl lock jae cltd sub add (bad) cmc jnp or and adc adc fninit leave mov fxch std mov push jne lods xchg scas or lea xor cmp jae mov faddp push (bad) daa mov jle (bad) ljmp ds stos (bad) inc mov xlat mov pop pusha pop imul inc or push nop icebp pop bound cld test mov add inc sub stos pop jle daa mov dec or in push in sbb rorl mov imul pop jg lods loop cli xchg jns repnz xchg ss fnstcw (bad) rcrl mov push push mov fstps sti loop sbb out inc test rcll push xchg into pop dec loope mov and or punpckldq mov daa loop mov pop ljmp enterw mov inc fnsave lods mov popa and mov pop dec in rolb push pop push scas mov adc icebp inc aam xchg nop popf inc imul clc es hlt (bad) jge or test inc int3 aad bound mov xor sub adc (bad) ljmp jl jg fisubl ret clc and sbb dec je stc rolb scas pop hlt add into jecxz push inc mov outsl rcl test push sbb stc push mov clc pop sub (bad) jbe in or cs cmpsl mov xchg lcall xchg pop cmp mov xadd mov leave sbb ja mov adc sarl ja (bad) jb subl xor or insb enter pop push pop sub jae iret lods nop mov sahf test icebp andl jne jmp call mov (bad) mov fs lret or sbb add adc (bad) jmp push push test lret dec ret push pop mov inc not add movsl add (bad) xor ss hlt cld jle imul mov mov and sahf push cmpsl lock push stos test push cmp jg inc mov test clc push xor add mov test cmc fcompl sbb mov aaa xchg lock inc lret js jmp shrb xchg adc pusha mov inc int3 into fmull movsb (bad) sbbb in mov lock (bad) sub push shll out stc int (bad) rorb ret and fwait scas xchg pusha les xchg jle mov mov sahf imul orl (bad) test arpl sub fldenv addr16 cs loopne sahf repnz nop popf pop fcompl xchg pop sub aas stos sbb push aas add mov adc loopne jnp and fsts std or inc cwtl xchg popf push mul mov pop pop dec (bad) jae outsl in cmp push sub aad idivl mov testl inc jae,pt popf or jl in dec jg lret cmp loope mov in nop sub hlt aam loopne jge ret fwait in lea nop mov xchg sub cmp xor lcall push jl mov ret dec loopne pusha outsl sub test movsl pop leave es push imulb int3 jp sbb mov inc jne adc cmp nop loop cmpsl sbb sub mov or dec pop pop test inc into hlt out pop rcl pop or pop pop sbb loop cmp lods inc mov mov addb push and (bad) fcmovnbe mov adc dec cltd rolb test shlb dec add and jae stc xor in sbb pop scas bound loopne lods mov (bad) mov xlat sub fucompp fimul cld insb dec aas adc into imul ret fcmovnbe cli fiaddl push pop loopne cmpsb mov loopne push dec mov pop mov lret dec cmpsl push cmpsb popa cmp mov mov (bad) push addr16 or and xchg (bad) mov out push lea mov jne and push std out lret (bad) ror int3 lods fcmove nop mov jnp call mov out xchg repnz jp xor test ss or sub or mov add jl xorl shl enter inc int3 (bad) fsubl arpl lods inc cmp push mov jmp das adc stc insb iretw mov aas pop fisttpl pop sbb jle ljmp mov push sbbl xchg mov pop adc gs stos mov jle cmpsb sub inc out sub jo inc or inc int aad xchg enter cld pop out cmp aas add adc cmp out pop shll and or jle insb clc push inc fiaddl pop push daa sarw adc loope fisttp cmpsb bound stos fldl sub sub push dec iret lock xchg mov nop clc gs xchg stos mov sbb or int fnstenv (bad) xor cli (bad) jmp cmpsb mov fidivrl mov cltd arpl jmp add shl fiaddl sub lahf aam cmp push push scas fist jbe insb rcr sbb mov inc cld inc fdivrp mov arpl (bad) jbe pop push mov xchg sbb jno int cmp (bad) ja pushf divl aad push mov jbe jmp popf jnp (bad) sbb pop add push dec inc cld mov dec jns movsl push mov dec loop mov pop sbb addr16 or push (bad) outsl lods addr16 (bad) out dec (bad) cld xlat ja sub xlat repnz or or cwtl out ret movsl (bad) je cltd jg jns adc push out pop (bad) call mov ja test pop inc jge cwtl es or add adc push push lods mov sbb inc add cmp leave test xlat hlt lea sub push mov mov (bad) jle lea and push xchg loope cltd ljmp mov push mov jmp enter pusha popf cld cmp xor inc scas inc fstl test into cs in mov and or mov push xor push cmp xchg jle es xor mov inc ljmp adc lea inc mov adc insb movsb xchg loope fdivrs imul (bad) sbb scas xchg enter or gs push push fmull fnstcw mov xchg cmp popf cld dec dec loope fmuls mov jmp out adc rclb push shl nop repnz mov ss pop and addr16 and jns imul push cwtl jo mov int je mov pop adc adc inc call daa sub xchg mov add ret loope xlat scas jo and dec xor jp mov push daa arpl in js push notb inc jecxz push mov dec xor jle iret cwtl xchg sub (bad) mov mov loope fsubl cmpsb or adc (bad) or sbb cmp push mov jl test adc adc pop dec pop jmp push out cmp and orl and mov dec das movsb lahf xchg fwait and dec test pop fisttpll mov je pop pop ret push dec pop and xchg xchg fdivrl and popa cli pop jae push dec or pop mov jns pushf clc mov mov inc nop jno jo push mov stc adc sub cmp test test lods lret pop lret fldt add cmp ret sbb out cmp shl imul sub mov fsincos dec and cmp inc inc lcall adc jecxz push adc jb (bad) sub and push or outsb and leave and leave fisttp mov cmp aad inc sbb pop mov imul imul out pop mov les inc jge push imul (bad) mov loop inc mov mov inc aaa iret in mov pop sub loope and fwait jb fcmovb fdivr xor mov adc push jmp repnz (bad) movb ljmp loop jg imul movsl cli call aas xor movsb inc or fistp stos data16 or inc stos or xlat jo fidivr sub pop pop cmp lods dec push sub inc (bad) cltd daa jl addl adc int adc and inc and and inc add fisub ja or (bad) insl and cmpsl mov mov mov mov std test jbe shlb ret or dec icebp hlt loop inc std rcrb ds out add push mov xchg rcll pop ret jge clc and movsb ss xchg aad aad mov sub insb cwtl in loopne push fiadd call (bad) cmp push mov shll push cmp pusha sbb out orb and inc or and cmc outsl sub int3 inc rol daa out clc mov (bad) cmc mov sbb xchg (bad) or stos int3 push mov or xor addr16 mov pop dec aad daa cmpsb test and lret xor cltd xor dec cmpsl call add push xchg sbb rcrl ss jno push lcall jbe inc add fs sub mov adc inc mov lahf adc cwtl scas in jne add andl lcall (bad) rclb test es pop in mov scas leave push push adc and inc repnz in out push push scas hlt call jb in mov (bad) xchg in cmp adc push inc jnp sub mov and push les mov imul in or stos inc add pop pop inc cwtl in sub adc xor (bad) mov xor insb cmp jle (bad) cmp mov push mov out add lahf ljmp adc loop std repnz add fldl ds lcall insb js adc or loop inc jmp pushf or mov cmp dec ljmp inc int test add std xor stc adc je inc bound cs sub icebp xor adc adc push and dec push sbb test sub ljmp insb mov adcl jae cmpl xchg mov jns and jmp int or mov fmulp out dec xchg (bad) (bad) inc push fst mov leave push aam jmp dec aam mov insl inc shl stos movsl mov or sub mov jbe inc dec mov out push adcb jle push movb les and cmp push into outsl push push sbbl and mov (bad) mov psrlw sbb dec popf cmp pop gs sub sbb imull adc pop sbb xor out jbe js movsb out push cwtl leave arpl test outsl pop movsb imul jae bound (bad) push xor fldt jg loope jnp mov jnp test mov sbb mov push inc inc or imul push sub adc cmp push or (bad) jge ljmp iret ss xchg lahf adc call pop int3 ret jmp out pop nop mov or xor dec adcb mov (bad) cmp cmp pop jne in mov push (bad) adc cmp dec lret orl movsb fwait (bad) mov mov mov add lret inc push inc pop mov in mov rolb and pop fnstcw dec fsts dec (bad) fildll jle xor mov aad icebp ficompl add scas xchg mov imull repz mov std lret cmp shlb movsb pop adc ja push push pushf mov and push push negb dec dec xchg cmc xor cmpsl shll dec dec repnz and ljmp or outsb jmp stos mov adc subb pop and lret mov dec pop inc mov js inc cmpsl (bad) mov pop scas mov loop push jg lahf jbe jb add pop addl xchg xor pop xchg mov ljmp cwtl add (bad) pop sbb cmpsl sub pop sub scas cmc jae inc aas inc iret insb jae jo dec or jno inc mov dec lret imul jmp or dec test mov dec pushw scas push nop cmp out dec jns insl cs adc (bad) or dec sub jmp xchg inc incl add loope jne mov mov rorb pop jmp insl jae scas movsl xor mov xchg jge mov loop pop lcall jne mov gs push arpl jmp push insl pop setb pusha daa pushf cwtl (bad) loope lret jnp jle notb fdivs add ljmp leave push loop mov enter orl dec (bad) lock adc into scas loopne lret subb xchg stos sbb mov icebp lds imul xor cld jns lock and cs js and pop adc scas sub sub fistl das int mov mov jp (bad) xor outsb push (bad) iret insl push mov jns stc aad jno mov or mov mov mov (bad) xchg jle ss (bad) ljmp sub imul dec fisubl ljmp mov mov xorl (bad) push mov mov lods xchg flds xchg int3 xchg xor insb and inc loop jmp jle fcmove aaa (bad) pop dec int3 add mov sub dec dec imul stos pop pop enter clc cmpsb mov mov iret pop or cmp ret or cmpsl xor into mov sub xor cmpsb mov lahf in flds (bad) cmpl xchg or mov nop ret loopne les sbb xchg xchg cmp ret inc and jb fidivr in lret jne (bad) push inc (bad) pop mov add mov out add outsb (bad) cli int3 or or push loope jne cmpsl add lock (bad) or cli lock daa mov adcl adc jbe xor popf inc jne jbe int xchg cmp leave fadds xorb xchg mov enter xor and jnp add imulb lcall and jle inc mov test and cltd daa cmpsb mov andl jnp lahf divb and sub pop int mov pop sbb mov ja mov pop loopne imul pop pusha lock xor inc push sbb movsl aam jg pop repnz xchg pop jecxz dec repz cmc sbb cmpsb jle inc xchg cmc dec inc mov push and and sbb ja fnstcw or pop dec sub add mov mov push mov jle mov clc sub adc fld cmp or adc sahf cs pop mov call xchg mov push out or gs sbb pop insl ds xchg pop bound shl stos jmp or add xorb push xchg and xchg xor out loopne mov aaa fdiv mov adc pop push jae pushw cmp xchg bound xor test adc cmp jg jmp (bad) (bad) (bad) mov pop push (bad) sbb loop loop std je into mov into mov movb popa add inc inc sti scas out cmp (bad) fnstcw and inc cmp outsl (bad) outsb xchg and sarl scas sub enter jae sub xchg (bad) rolb jns add fs xor inc sbb in pop nop lahf fldl and mov out cmpsl sbb push mov addr16 (bad) ret outsb cmpsl lret bswap jp lods mov out pop push cmc ljmp pop jp inc mov mov and (bad) pushf jecxz xor xor sbb jp mov icebp sbb (bad) push jp dec pop jecxz pop push sub and sbb pushf push daa aas ret xchg jnp (bad) das insl add popa mov leave xchg or fisttpll in lds push sub dec fnstsw jb inc stc lret rcl ret push inc inc subl scas or dec sub mov inc mov (bad) setne cmp sbb inc xor adc push sbb loope inc push (bad) (bad) mov arpl (bad) ret sbb mov popf pop lea mov outsb adc push stos outsl insl jbe mov out pop inc dec cltd mov add mov sbb fsub rol inc test xor jnp push into push std adc aas in pop dec imul adcb dec push sub (bad) loopne xchg orl out loopne jb aam lds push stc cmp jne or test lret push xlat mov iret add mov (bad) xor popf push mov mov adc jle push inc adc aam sbb inc push dec imulb imul adc sbb cli cmpsl pop push xchg clc sbb mov adc leave fimul loope cwtl cmpl aas inc stos mov orb xor into in and (bad) out pusha cwtl push imul clc stos js inc xchg imul nop dec fisttpll push in mov mov scas aas mov xchg add out sbb decb or and out jo xchg lock in stos les sub sti aaa repz sub mov mov cmp mov jcxz ret aas and fwait ret (bad) sbb push imul xchg test and (bad) loop push int dec roll (bad) daa aam fist and add cmp xchg jp xor idivl pop into mov lods and inc in add and scas sub loop les lahf inc (bad) jne add popf loop cmp inc cli test cmpsb inc aad stos scas sub mov mov and xchg xchg fadds xor insl (bad) outsl xchg and lret insl (bad) test jb sbb cmc std arpl xor enter jb pusha jg mov out xor mov dec and jbe,pn push in mov push int3 xor push rcrl out sub jmp push sti loop fadds mov bound xchg push lds movsb xchg dec cmp jbe adc add (bad) pop dec aas out mov dec add lea into imul cmc dec les popf imul cmpsb push std test fistp mov fs in mov jl popf lods into fxch dec shlb adc adc cmpsb push jmp pop outsl mov jns sub sbb inc fisub sti mul rcll dec mov insb leave jne test inc sbb sbbb pusha inc dec mov add xchg mov push nop lock loopne fldt lods sti sub cs jle add sarl divb scas xor or pushf inc (bad) fisttpll into nop inc movsl pop dec inc xor jge adc mov sbb cld mov mov inc in aad test push lock jge jne xchg dec inc push push add btr sbb xchg or lret xor fidivr jns cmp (bad) fimul mov cli xor and fwait or pushf ja int3 cmc mov fyl2x mov pop mov scas iret cmp jmp inc xchg cmc add addr16 rcl sbbl enter pop fnstenv mov fstl push push ss dec movl dec dec xor iret adc pop (bad) dec loopne adc cli mov lahf dec cmp jg sti clc mov mov fwait xchg ror pop push mov sarb negb pop movb lea push mov (bad) ja mov xor scas cs testl iret or lahf sti ljmp test ficoml mov sbb push cmpsb jmp lock pop mov icebp xor and xor pop test (bad) jmp mov movsb dec sub movsl xlat push mov add push xor loopne ljmp adc mov dec pop (bad) idivb loopne fidivl inc fnstenv push pop pop sub xchg (bad) jp adc jb setp pop mov add (bad) cmpsl dec addr16 (bad) jbe call inc inc jg lret ret sahf push test add lds shr loope cmp sub cmp push push sbb lea add xor xor cld sbb pop sub aam gs mov mov cmp dec and ret into lock mov xchg cs adc mov (bad) fsubr cmpsb cmp (bad) xor lods fnstcw fidivl jmp sub je dec fmull adc test aas sbb sub lods loopne dec inc sbb je icebp jbe call fcomps adc mov mov pop scas jne sub sub cmp sbb insl mov mov (bad) test addr16 cmp outsb sub dec push int pop icebp scas lock clc (bad) sub and je inc psraw xchg inc sbb mov hlt inc cmp pop mov jle enter aad mov sub or xchg lret in fsubrs jb fbstp rcll insb mov ljmp cmc adc fwait inc jae test dec popf and in decl dec insl mov mov push in dec mov out push shl test out popf dec out aam sub scas icebp loope pop add xchg sub sbb test pop jns int lret into add xor popa push dec add mov cli add (bad) (bad) repnz xor insl and adc push xchg inc (bad) ja pop inc inc cmp mov sub sub in sbb inc in hlt es or out mov out xchg repz or pop repnz daa and call push or push (bad) sub mov repnz inc rclb sbb pop cmpsl push rcll mov push out and jmp inc fistpll out pop iret mulb addr16 xchg adc push pop adc ljmp cmp jl inc out pop sahf mov fisttpll repnz mov cwtl fcmove lea pop popa subl aam mov sbb pushf mov sub push mov cltd fadd sub mov fistl js andl repnz repz add jl in aaa (bad) or cmp lds adc add dec dec xor icebp add xor cli push aas and lcall jno or mov mov imul fildl fcomps sahf adc ja (bad) loop into sub xor dec mov out idivb push dec xchg pop xchg push mov cli xchg jmp push sbb cmp shlb pop aaa jecxz jb jecxz sbb mov or aas add pop das insl adc or add sbb jne mov cmp xor push test repnz xchg test xlat and int3 jnp das cltd pop lock cmp adc xor enter inc xor call dec xor xor mov rol repz test leave xchg mov aas sbb xchg xchg add lds sbb add push (bad) dec inc inc imul hlt dec mov xchg mov out push adc pop and adc aam or mov mov js pop (bad) and xchg xor xor push jae divl inc test loopne push into jnp sub sub xchg enter jg xchg push mov pop pop in jne in in and push daa sub adc fstps and roll cmc out shlb adc ja mov pop pushf cmc pop test and add popa lods negl iret inc nop inc aas inc jge cmp out int lods iret cmp das lret mov ficoml dec fwait cmp aam fcoml mov and jecxz lock jae add rcrb into les fimul out cld mov fiaddl loop add xchg hlt inc add movsb aaa (bad) shll out mov gs push cmp pop adc push mov cs hlt xchg jle popf (bad) push jecxz sbb std (bad) out out dec jge les rol adc xor icebp or sahf jg or mov jle pop fst push addl aam rclb lods in (bad) jb cmpb mov cmp (bad) pop cmp (bad) cmc int or and cwtl inc fsubl mov sub jo add cltd cmc cmp dec xchg jo sub test orl test nop repz push cld ds fisubl or sub (bad) ljmp cltd cmpsb (bad) shrb pop cltd std sub (bad) into ss jnp add jne in pushf push in push adc or mov stc and in push shlb test cmp aaa gs xor fmull ss repz fcomip incl sbbl movsb std call add and push fisttp cmp pop sbb addl dec mov in insb jbe pop sbb sub ja mov lahf insl shrl jmp test mov inc sbb pop pop xchg mov add rclb sarb lods fcoms pop out iret sub clc in ljmp repz in cmp jbe push loop dec cmc nop and dec jg js cli dec mov inc cmp xor neg shll pop call lds inc pop sub inc sti mov (bad) mov cmp stos (bad) jecxz ret adc fs lea pop (bad) aaa les mov ret imul xchg outsl jmp and push repnz rorb mov mov stos pop div rol leave jge push xor divl cld daa lock push inc (bad) jg mov xchg (bad) mov xor mov lds push pop fimul and mov inc adc and ret push dec jo nop leave adc sub lods shr sarl rcrl dec xorl mov push mov dec mov fs rol sarb movsb add sub sub (bad) out or xchg cmp jmp pop fsubp cmp (bad) add mov ret movsb sub addb sbb jne movsb ret xor cmp test mov sub mov cli adc add (bad) ja (bad) (bad) pop jns mov jge ret jmp jecxz test add pusha push cmpb aam in jge addr16 pop pop mov or call aam (bad) fcoml (bad) adc push js add stos jl (bad) and fcomip inc mov jmp je mov inc icebp adc jbe push pop sti inc outsb sahf sti out pop movl in sub fistpl (bad) fstl cmpsb sbb loop ret add pop idiv loopne mov aam xchg or mov call add mov insb or adc ds lahf pop mov and std adc push sarl push stc push les or mov fisubr loop cmpsl fcompl mov sub lds test add inc xchg fldl jmp add jbe mov in add dec xor mov jnp aam add mov test lea adc sbb sbbl ror mov mov or ret cli stos pushf cmpsb push xchg mov stos or leave inc jo movsl xchg outsl fisttp push hlt jmp dec and out sub popa push mov lods jmp sbb outsl (bad) mov jecxz scas movsb dec pop jmp cld out aad mov outsl imul xchg cmpl daa mov lods (bad) mov xor pop rolb inc imul lock repz xor stos into fs inc int xchg dec fmuls cltd cwtl (bad) push inc (bad) int lds push push shrb in stos pop dec push test and movsl shrb jae ss dec mov mov xchg mov adc inc dec inc add data16 fstps mov push jg outsl in jle into or ljmp mov mov repnz or mov jmp (bad) push divb movsl inc lods mov out (bad) fst xchg cmp mul shrb ljmp aam and pop sub bnd jl (bad) scas pop cmp xchg add xorl push frstor jo fwait pop mov es dec xor cmp mov cmp cmc xchg sahf call sbb test shlb pop or push inc xbegin andl xor mov jo jne std push aaa mov cmp testb ja into mov mov push inc cmp ja loop sbb push inc push sub cmpsl das xchg cmp mov cmp cmpsl mov xchg cmc inc shl lods test xchg push es in adc nop test mov ss ss jno aaa cwtl sti mov aad push (bad) inc sbb or mov pop cli fdivs mov les (bad) out xor xor mov stc or testl or das (bad) icebp repz insb mov cmpsl call pop push negl data16 add lcall jmp out fdivr scas (bad) (bad) jne push mov int3 or adc in lds nop sbbl pop jns popf fsubl pop out cmp mov sub or jb lods xchg inc movsl pusha popl fistp xchg pop popf mov mov mov mov nop sbb mov sbb cwtl imul in xor mov stos andl dec or or stc aam push xchg fistpll xchg mov jecxz into nop outsl inc fcmovnb dec cmp js sub adc rcrl bound pop sub and (bad) (bad) and xchg ja jo lret xor rolb ds loopne lret aaa fildl add inc add loopne mov lods movsl mov out or mov add adc (bad) imulb push lds inc jae mov mov xor mov and ja cmp call push mov popf (bad) cltd in or dec or mov mov dec mov jle (bad) jb test sub mov xor sbb in and xor popa ret xchg push sub push push popa inc popf ret inc mov cmp sub adc dec cmp pop std dec movsl (bad) ficoml adc ljmp jns ret pop jg sbb dec adc sub xor push push fdivrl in aaa ret daa stos jle sbb scas dec jne (bad) xchg in adc mov inc hlt jecxz stc clc sub xor mov scas inc aaa xor xor ret adc xor mov adc sbb pusha adc jg imul call insl pop adc adc insl pop xor jge pop stos mov jmp int dec leave aas out and xchg and mov aam mov int3 and mov adc inc jbe xchg fwait jae jbe dec mov (bad) sbb jns xor dec mov mov dec clc jecxz sbb subl aaa jns jg adc in (bad) dec jmp mov ljmp dec xchg add sub fwait inc shrl ss popf adc aas pushf sbb (bad) mov mov and inc nop ljmp loope adc cli dec inc cmp (bad) mov aaa hlt dec nop xchg divl mov (bad) dec movsl mov adc rorb in sbb fisttpl mov call lds ss and pop add push sbb iret push ffreep fmuls out mov xor mov or rcrb cmp imul lods loopne sarb xchg aas stos ja (bad) (bad) xchg out mov sub push jno aam punpcklwd daa test inc mov jmp and sub fidiv push pushf nop mov iret add fwait mov pop int3 fiaddl push call aas clc (bad) hlt and mov (bad) inc les jno je ret add inc or inc xor cli test clc out mov dec cmp sub inc out fisubl add xchg outsl imul leave lahf xchg js cmovle in xchg adc pop ljmp sar add outsb pop pop lea jecxz cmc int3 xchg sahf or cmpsb or pop inc inc cmpsl out inc pop cwtl scas xchg add imul and js pushw fdivl aas cld sub arpl mov push repnz and aad stos (bad) and cmc fs frstor adc fimull test mov cli sub out lcall cli rorb sub and pushf mov push test pop mov std mov pop gs add xchg cmp rorl push pop xor push xor inc sub insl (bad) xor or call inc in push pop or mov pop dec jne test (bad) fisttpl pop and mov fisttp mov cmpsl jne mov enter in mov pop jae cmp (bad) pop cmp mov ret (bad) cs mov in mov inc push test daa cmp pop popf mov movsl repz xor dec pop push sbb insl call cmp push push mov cmp aas jo es lock movsl sub ja js test cmp xchg jae call push test mov ret sbb ret imul inc dec dec jecxz (bad) mulb adc in test inc dec mov aas add push sbbl scas xor add cmp sub push cmpsl sarb xchg imul mov inc push or sbb sbb xor mov (bad) dec mov cmp daa in fwait ret data16 fisttpll aaa sbb rclb in mov add (bad) (bad) je mov loope loop lock lret dec jno iret cmp mov mov jae jecxz call dec and rclb (bad) adc fisubrl push fmul int mov inc push (bad) dec pop test adc lret and imul xor into loopne inc adc hlt and dec idivl add (bad) js mov (bad) sti xchg jne pop lods gs out xchg xchg inc lea fcompl add addr16 sbb mov push mov int into mov add incb inc movsb pop lahf push mov jmp nop cmp pop dec aam sub pop mov push clc out imul lods repnz cmp push pop pop sti cmovnp jo inc and jbe adc test mulb and adc loope gs sbb pop lock xor inc daa xlat adc aam add dec lahf jg scas icebp rclb mov add fildll lahf dec adc outsb aas sbb outsb xor push sub pop inc jae (bad) out into cmc inc fsubrs subb xchg imul xor ss push sub mov cmpl push add mov dec rorl rcl sub adc cmp int3 test cmpsl jmp xchg cld out sub dec scas xor (bad) fisubl mov je adc dec mov mov sbb dec sub xor imul repz repnz jg fildll inc popa push or bound mov push movsl jnp adc out mov mov (bad) test fsubs jmp push jb push xchg (bad) mov es das mov mov nop and es xchg inc adc (bad) pop rcrl rcll inc pminsw sbb jmp mov sarb sbb mov lock add jg dec arpl mov mov fs imul rcrl pusha push add mov std outsb mov adc inc cli pop sub sub inc data16 sti mov jne mov out add bound mov addr16 cs jl pop push sub pusha loop sahf pushf push nop int (bad) (bad) in movsl (bad) mov int jl xor loopne xchg mov mov leave ds sub je pop sub ljmp sar dec jp shlb adc jle (bad) jl out je mov (bad) and out xchg xchg adc out jl dec sub divb mov (bad) push rorb mov add fyl2xp1 jo xor test popl pop fsubrs call scas mov sti cli xor pop jnp sbb andl xorl or push pop ljmp (bad) into (bad) sub cmp clc aad leave push test fsubs add or inc je and or hlt add daa lds mov jae xchg push add mov out sbb mov mov jb inc xchg popf mov adc sti imul push cltd das stc jo ja std fs nop ljmp es mov cmp xor push sbb push add mov je fnsave aad cmp push pop stos inc fs cmp xchg ret stos add cmp dec nop mov outsb je nop adc pop jnp inc xlat or xor xor sbb push sahf or jecxz pop dec dec arpl lret int test dec ret push dec imul test sahf imul jg dec mov pusha repnz jl arpl xchg out jecxz movsb testl das (bad) xor ret cld (bad) pop out out fdiv aaa fxch loopne xor das pop push pushf movsl xor ret push jmp add cmp daa imul sbb and fist pushf cmp xlat sub call xorl sub xor sbb and mov (bad) movsl or or jmp dec push neg cltd (bad) insl (bad) lock mov push stc xor jo xchg dec mov iret daa fisub jno dec jbe push cltd sub enter sub or aas testw pop mov movsl sub jno sbb or cltd and icebp lods pop rolb aaa cltd pop (bad) mov dec repz dec jmp inc sbb mov and mov push fistl adc mov cmp or xor out sub adc leave (bad) rorb push mov pop subb imul test call mov fstps (bad) jb daa in lret adc add jecxz xlat dec adc insl xlat xor xchg mov repnz loop popf sbb cmpsl mov ffree mov add or mov jp nop fnsave sub pop cmp std call je cmc add and push andb sbb pop lea jge inc jg jp mov shll gs push in xlat sbb scas pop cmp arpl and lods mov data16 dec sub jne mov (bad) (bad) ss mov (bad) gs (bad) scas insl (bad) icebp add mov sahf xchg iret or add adc xor stc cmpsl in scas adc bound stos jb fisub inc int3 test clc call mov enter daa dec and inc ja cmp out rcrb mov out push mov pop outsb push mov data16 popf ds fdivrl inc add cli out test xor add loop loop sbb sub jp pop xchg sti cmp test scas mov out jmp (bad) pop in mov insb cmp dec ljmp leave int3 and jmp nop shr loopne sarl jno insb nop dec cmpsb aaa ror mov inc lret push xlat mov divb add dec pop push bound inc push rcrb fs cmp in sbb imul aaa pop push popa cmpsl mov jae sbbl xor es mov test leave scas dec lods test pushf ret lods pop mov fwait sbb (bad) sbb mov ljmp dec cmp and mov inc ss div push cmp pop (bad) cmp aad dec shll jmp (bad) xor push cmpl mov xchg out je and not pop dec (bad) lods push stos jecxz sti jge fwait xor cmpsb and (bad) add adc pushf dec pop pop aad outsb push push cmpsl mov dec movsb lods test daa mov ret cmpsb ljmp mov (bad) jmp arpl divl mov push scas xchg ss repz loopne jno cmp popf test jo dec fimul fldt imul mov stos sahf (bad) and mov xchg mov idiv pop sbb cwtl mov fdivp lods mov and jb lcall ja sbb jmp add xchg insb cmovge test dec ds sub adc popf xchg (bad) sahf and sar les rorl icebp cld aam pop mov push sbb xlat jae aam (bad) and test inc in cmp sub out adc xor setle pop mov push stc in dec jns (bad) cmp loop sub movsl lea push push jp or push incl shr mov shrl orb jo dec mov repz (bad) and jnp imul cmp lret mov andb mov mov xchg xor push push dec mov decl jb and out and mov ja nop xor jns scas mov clc push mov push dec in rcl mov push lods jp stc or inc leave sarl mov outsl mov js enter scas push pop movsl push imul fistpll sarl cmp ja mov cwtl rorb push xchg es or sub loopne lahf mov add outsb popa mov jmpw addr16 lea js xchg add mov cmp sbb xor (bad) fidivl clc pop add add mov sub inc scas push mov bnd fildll imulb ds hlt test cmc (bad) test pop pop (bad) push js arpl enter popf dec loop fidivr xor cmp stos dec ss mov jae lret divl ljmp add faddl or shlb mov mov sub or test sbbb mov aas add jg ss sahf insl adc fsubrl fsubs mov inc outsb aad and push (bad) pusha cmp out mov popa xchg push xor repnz push mov mull cs push aas aad ja jns aas pop mov call mov push inc mov adc test push aas stos unpckhps dec imul ljmp mov fild adc faddl add int sub xor add imul addr16 aam lods cmp jecxz nop vpshlw xchg cwtl inc xchg add add dec insb pop and or xor mov in push xchg pushl aam or in sub cmpsl xchg jae insb pusha pushf xchg cmpsl add jle mov mov xchg push divb rclb cmp jno push mov ds push pop mov std inc adc xlat sbb and sub rol int push sbb stos rol xchg push popa es lret lods (bad) ret in (bad) stos adc adc and pop (bad) clc clc sub and iret repz (bad) xor out ljmp (bad) nop loopne cld and fstl inc out in test mov (bad) fdivrp call shl dec in and pop lret fsts in mov out and dec mov jnp ja cmp cmp mov in in xchg das out fsubl lahf and jg cmpsb leave cmp push insl ljmp pop mov xchg negb (bad) and imul or (bad) out les lock mov jb mov clc jl int3 dec mov jno imul call jb xor mov stos jp (bad) xchg je outsb aaa jp js andl pop xorb push fldenv outsb dec inc daa xor incw into movsb rclb and jmp inc fidivl pop repz dec jle lahf stos (bad) sbb pop xor push das mov xchg ret and xor dec cmc int ljmp aas mov sbb imul mov mov adc leave pop loope repz cmp jecxz shr sub sahf push std dec mov xchg jle mov and jb addr16 pop call pop out mov fs pop sarb test dec (bad) imul xchg jl loope out cmp (bad) push dec (bad) ret cmp stos add push lock repz inc out pushf (bad) incl out inc data16 in icebp jl scas enter in sar mov imul push clc mov mov ds sbb sub test test mov scas mov or insl jb lds (bad) out and pop jb cld loop (bad) mov cld pop jne mov enter pop rcll call mov mov xchg cmpsl nop xchg in rorb (bad) push xchg push lahf loopne les fdivl imul mov add call cwtl mov out inc cmp scas subl jmp iret mov sbb sub loopne mov mov lret xchg repnz (bad) es push fcmovnu fistl fcomip loopne xchg and fcmovb ljmp dec nop dec jmp jbe enter dec add mov mov (bad) inc aas inc mov pop add mov leave test daa dec dec xor push daa clc pop dec andl lea xchg in (bad) sub jns clc out xor getsec sub (bad) js in or bound xchg xor in into add lds fsubp outsl cmp xlat mov test mov push xlat jbe push cwtl mov mov sub dec aaa mov or orb add sub scas mov inc inc cmp mov jb lret xor (bad) xchg pop fidiv and stos mov dec push xchg (bad) pop daa sbb enter inc es mov jb add and inc js int xor and add dec lea enter mov pusha mov mov call add sti ret lods add jbe push adc sarb adc push pop cmp add inc les arpl loopne fldl inc and inc repnz adc push cmpsl mov test pop stos ret cmp clc mov mov mov mov jecxz lds pusha js out imul les je,pt aaa jl in shr sbb fcmovne jmp xchg push jl jg jno (bad) aaa cmp fdivrl cmp pop insl cmc iret jmp push (bad) jl cmpb mov movzwl mov cmpsb mov push fcmovb jl dec mov mov pop enter xchg adc mov fwait loopne xor inc cltd inc arpl fldl xchg fstpt mov mov xchg stos idivl daa pop testl xor shll and mov popf aad popf inc fildll xlat ja dec pop outsb sub jg jl cmc (bad) ja push les out ss jecxz in add (bad) pop sub pusha out and fdivl or fld sub xor fsubrl mov mov sar adc pushf push lods inc and ret scas mov jp sbb shll ret pop fcmovnb std js mov outsl (bad) push pusha cmp lea ret (bad) insb fs jne in pop movsl int loop call xor mov pop lods adc or xor adc jg pusha cmp mov sbb rorb pop stc inc inc push lret (bad) adc adc dec push pop xor dec repnz fidiv rcr mov jl xor in sub cmp sti pop pop jbe adc pushf repz add outsl stos faddl mov jge data16 jne insl or sub leave aaa daa and mov adc and lods mov rcrb adc pop cltd sbb jg or mov jns movsb inc mov xchg xchg std cmp ja sbb mov decl lds inc sub std pop lret or and mov sub push sbb insl out xor inc lcall lret and sub bound ret mov cmp mov xlat mov mov sub lods pop out out nop out outsb idivl pop sbb lods test cs ja adc add (bad) sti inc test clc fmuls jno jb sbb mov lahf push push out (bad) pop loopne xlat jo xor arpl in jnp in xor xor push ss sub cmp testl fisub xor dec sbbl or adc pop pop push sarl sahf push loopne (bad) icebp ret xor add jb lods ret clc pop mov ret xor ss sub fnstenv stos jge pop sbb outsb or mov jmp dec in push adc pop daa and dec pop ficoml js mov xchg in push push inc sub popa jnp sbb pushf pop mov mov mov fimull test cmpsl cmp mov (bad) xor cwtl or shl test push xor cmp sub fildll aaa pushf mov int3 rcrl add (bad) (bad) pop sub add mov and pop push push ljmp (bad) push lds repnz adc and loopne pop nop xchg mov cli (bad) push adc ljmp lahf js fsubl pushf pop out out sbb stos in (bad) push aad jl cmp lahf sub pop pusha nop xchg add mov fisubl pop lea rcrb out sbb dec hlt cld stos imul call mov sub repz cltd pushf std mov jge push jno cmpl pop inc ss mov mov push leave lods or mov (bad) orl lods das xchg jne js int3 sbb cwtl mov call leave cmc inc leave imul and inc aad loop (bad) (bad) (bad) inc outsl stos les hlt shr mov push mov stc hlt inc mov fwait jb add int nop lahf lret mov mov dec imul lcall loopne cmp xor mov fidiv das adc and loopne xor inc xchg and cmp loop mov pop push sbb out scas jle pop dec pop inc addl jge dec cli lods lret inc inc data16 mov cli cmpsb mov adc sbb xchg add mov scas jb push push lods xchg push sub sub pop mov fwait outsb cmp test (bad) out push push xor dec push loop pop sub lock and push cmp cmp nop inc das mov mov sbb jo push adc pop shrl jbe xchg cmpsl add in push ret xchg rclb sbb mov sbb sub fildll push push mov call in jbe in shl jbe call pop sub shr lods push mov enter push xchg sbbb test inc scas jns add fcomps xor fbld dec mov arpl or push out xor sahf js in movsb mov inc push inc call xchg into adc test add sbb xchg mov mov or adc pop and dec push lock fstpt nop icebp adc aam cmp cld rcrb mov xchg mov xchg inc cs mov pop in push cli dec push or inc loope andl push leave hlt js mov mov pop (bad) mov out popf dec xlat dec (bad) btr push jge ss or mov lret mov xor icebp outsb xchg cltd and (bad) jae cmp popf cmp (bad) and lret inc push enter out adc ror push push imul into ja cmp dec xlat (bad) mov (bad) pop or push cmpsl dec test (bad) (bad) dec xor repnz add mulb jbe lods aaa ret in push lret sbb loop xor lds or rorb inc and out mov dec (bad) addl mov push xchg sbb lret not imul scas gs popf dec insl movq stos imul mov fs cs mov movsb scas fstps jbe and xchg push fwait sahf je (bad) jb sbb stc icebp adc dec ret xchg das add into xchg and repz imul xchg (bad) dec cwtl js xor cmp fsubr mov call inc lret aas pop dec jbe mov call mov mov lods mov jb decb mov nop fmul mov in (bad) jg inc xchg (bad) xchg icebp test popf pop fiadd (bad) add inc cmpb xchg ja and imul data16 mov stc mov inc mov imul jge arpl in lods pop addl cmp das rorl lods fist int dec scas mov push sub xlat jnp inc mov pop test adc js push sub pop test add xor sbb call adc xchg fstl ret cmp sti or outsl (bad) (bad) mov loope imul in movsb jno inc cmp ljmp ret loop and push call push push (bad) aaa xlat jo hlt sbb pop cld mov adc xlat aas cmpsb mov mov and xchg mov inc (bad) and lcall scas and mov cmp inc pop pop mov xchg mov pop stc mov mov dec jo int3 mov jb sub rcrl push pop test out push leave xchg or rolb mov movsb add rcrl ja fisttpl icebp adc movsl test jl (bad) and dec push (bad) out insl push arpl mov inc jbe pop sbb ret mov push aas aam dec jecxz xchg add lea mov push shl sbb pusha pusha lods add mov add call jne cmp jno (bad) mov mov loopne mov xor jp xchg jecxz ljmp jle pushf repz jno push mov jecxz bound es xchg xor dec adc mov xchg push push jp inc dec pop jne push sub push push out test inc paddw adc pop adc nop dec add mov xadd mov cmp lret sbb loopne sbb or (bad) xor cld dec pop repnz pop and xor (bad) lret sub cmpsb xchg imul stos nop dec clc inc xchg cmp outsl insl popa std out push jae popf imul sbb xor repz pop add dec sub adc repnz popl mov sti cmc fcmovbe pushw cmpsb arpl ljmp (bad) push sbb mov mov lahf stos add inc iret popf pop orl sbb das push fnop sub fisub adc std insl (bad) insb fisub xchg xchg pop movsb adc iret or mov repnz inc push mov lods jae dec stc fwait rclb add sub in repz pop sbb push xor cmp cmpsl testl pop mov pop sti jne leave movsl xchg cmp ret (bad) sub and add sub xor cmp inc aas push xor or push es jne ror aas dec dec or shrb bound imul insl mov lods std cs add or mov cmp mov scas pushf dec (bad) test sbb adc dec pop nopl add lcall ja loope loop (bad) gs pop or out cmp adc pop pop mov lret push out roll aas das mov xor stos pop sub rorl loopne nop mov or inc pop cmp xor push (bad) imul mov cmpsl sbb mov sub xchg repz mov adc and xchg sbb cmp stos out and xchg es cmp pop mov jle adc jl jg sbb adc xchg adc imul mull adcl mov ret repnz int popf cmp cmp jg enter sub rorb pop pop psllw mov pop daa (bad) dec adcb daa pop daa cmp lods divb (bad) idiv jg inc adc aaa mov mov and or mov lret mov jle fwait cmova mov push roll mov cmp mov adc push mov stc mov adc repnz jns sar push call push leave dec jbe or mov out out sbb (bad) lods sbb adc sub xor cmp sub xchg loopne cmc stos loop sbb push inc addb cwtl out adc scas (bad) fiadd outsb dec mov ds mov leave scas jle bound mov dec cmp fstl push lcall mov lock ret xorb mov dec pop pop sub dec gs cs pop push cmp adc ret lea leave bound inc setp stos push add and movsl imul pop js enter test xlat and cmp add arpl movsl nop mov or popf add or or je mov sub loopne sbb adc cmp rorb ljmp xor into loop adc sbb arpl xor popa push xor dec xor adc mov mov gs inc mov notl fsubrl jmp xor push xor js and in pop sub les add jge inc xchg cmpsl repz jbe and sti hlt xor push popl loopne mov lods cmp ret push xchg sub in push mov or dec and lret movsb and add sub add ret push dec sub adc loope shrl xor ficom mov daa call mov aam pop pushf movsb push push out imul sbb and cmp cmpb inc lea inc pop daa lcall adc daa push inc xchg xchg xchg dec jno ljmp adc jbe loope pop mov dec add ret stos dec sub loopne cmpsl adc inc shr (bad) push (bad) sub push pop leave and cmc dec pause add inc xchg adc sarl ret notl pop cltd jnp das imul inc jg push dec pop inc xlat sbb mov outsl inc loop int3 lock ds mov loope mov push or je xchg or cwtl aad sub inc (bad) mov jmp in decl inc cmc iret sbb std (bad) shrb sbb mov (bad) stc inc rcrl xchg add jmp call add mov lret ret xchg adc lea test jle push jnp idivb xchg stos stos lods sahf testl sarb and imul imul int3 lcall pop inc push mov dec mov or xchg hlt rcrl xchg loopne das fstl insb insl leave (bad) loopne enter jmp dec out fsubl jae (bad) popf ja (bad) push in push jnp push mov test jno cmp setl scas push pop or mov jle aad cmpsb outsb pop xlat icebp mov aam push nop ds xor shlb mov ss push lods dec cmp repnz ljmp in sub stc pushf mov dec repnz mov inc jno add scas jecxz push lds push dec cmpsl inc ja push mov (bad) test mov pop decb ljmp or mov adc repnz add sbb lods mov ja sbb inc gs (bad) ja add cmp xchg inc aaa mov enter sub mov scas jae pop in jbe pavgw mov or xor je movl add mov sub add pcmpgtb js xchg mov pop cmc addr16 dec stc loopne sbb dec cmp mov roll fsubs es test aaa xchg (bad) aam add add mov cmpsl push sbb das push mov insb iret xor ret outsb adc jae mov xor adc je mov jmp cmp sbb push ficom int3 sub and add xchg lcall data16 jecxz (bad) daa xchg dec fsubs aam leave mov loop mov mov lods ret push adc movsl add sub or sub out mov jecxz sub stos (bad) iret jbe and and adc into sub int sbb mov (bad) rolb sub mov repz js enter or mov out add and movsl xor pop mov mov add (bad) xchg xor sbb lea mov sahf in sbb lea decb stos ljmp das adc test adc xor das add sub xchg (bad) andb cmp xchg jne mulb pop adc jbe cltd inc insl (bad) mov stc jl dec icebp lds inc or sbb les xor dec bnd (bad) mov pushf in mov xor sbb push and adc (bad) lcall stc mov aas xlat cmp shrl push adcl jns lods decb mov sub mov leave inc test popf ljmp cmp lahf int3 adc lds sbb insb push jbe sub lods loopne sbb sti fnstsw sub jb mov aam xor arpl out ret insl sarl stos jp ret cmp inc fwait inc out (bad) push pop cmpsl clc out xor jae ds push pushf jge inc idivl sti loopne fisubr addr16 fwait cwtl mov push stos ret xor jb adc cmp mov (bad) lahf scas rcrl add push es lods mov imul fs ret call inc out xchg pop pop mov dec gs pop adc iret cld rcr arpl pop ja pusha femms cmp pushf xchg addb mov xchg rorb xchg dec dec pusha pushf repnz xchg push and hlt test pop sti ret bound mov push fiaddl jge dec xlat arpl cmp jg loopne out dec or pop jg pop sbb arpl cmp (bad) in jecxz fcos lcall leave pop mov test test adc sbb in movsl or popa mov xchg sub rorb mov cmp mov icebp xor jnp call in sti dec popa sbb popf cvtpi2ps and addl ret add out cwtl outsb add inc or jmp aas inc divl pop sub cmc pop dec cld xor add xor sub dec sub fisubl mov es sbb cwtl test (bad) push imul xchg jb cs adc pop pop dec push xchg cmp jo out mov dec inc jge clc mov pop xor mov xsave xchg fistpll push sbb stos cmp outsl (bad) int imul iret mov lods inc out out jp testl fldcw inc push jge or mov fwait enter (bad) incb jle or push jle add scas fildll int3 dec push sub sub imul aaa jb nop loope call ds pop sub xcrypt-cbc cmpsl xchg ret daa jo pop push fnop or js,pt je push mov or das std repnz push stc xchg sub or lcall fdivrl jmp push out rcr clc or dec test cld insb dec je enter or shrb mov cmp dec pop jne fdivrs jg add (bad) cmc cmp (bad) and xlat inc xchg jb mov enter movsb test or mov ljmp fsubl loopne xor sub add mov push aad push sbb imul pop cld fdiv insb (bad) loopne bound mull lods out addr16 test adc lret rcrl mov lret cld pop xchg (bad) mov (bad) xor mov jge adc dec in nop mov lret imul sbb inc adc jp bnd or and rcr outsl in sub mov cmp fisttpl orl cltd jae pushf lock sub cmp test jb sbb sub pop sbb mov das cli mov mov insb inc sti cld inc sub jl std jb adc out adc jmp pop icebp jo mov clc lods lret add lods add shrl outsb push in mov (bad) imul shll insl int3 sub sub jge mov inc mov push in push mov push (bad) rolb ss inc xchg pusha sbb dec jnp cmp test add add pop push mov loope fwait or not jmp rorl mov xchg adc add cmp jnp sti add mov sub aam hlt push (bad) xor and (bad) jno es lods inc sbb mov adc mov fcompp mov pop std lods add mov in xor lret or xor cmp ja lret testb fsubr imul xor push pop pop (bad) mov aaa xor ret (bad) lock out mov push mov ja add pop stc mov bnd out add (bad) pop pop sub xchg lods dec xor (bad) (bad) sbb add mov adc das mov xor jno ret xchg incb outsb dec jp pxor pusha nop cmpsb xlat in mov mov cs mov dec lret pop add jle fisubl add push mov fbld loope dec out mov xchg inc aas sbb xor inc cmp mov stos xchg nop adc imul cmp dec or pop ja adc jmp out sbb cmp mov pop stc dec (bad) aaa in mov movsl xlat jno pop push xor in xchg pop scas movsb les and (bad) mov ds outsl test idivb and xchg pop jno je aaa out divb aaa lcall test sti mov xchg pop pop pusha mov add inc ret push push subl rclb mov push sbb lret inc das dec gs rorl rorl (bad) mov lret xchg or sub mov test inc and (bad) mov mov jb shlb jle lea addb repnz jnp (bad) jnp dec sahf aas ror mov jmp and push push les fbld add adc cmpsl inc or sbb out or insb mov mov fsubrs push pop sarb xchg stc xor (bad) mov dec cmp sbb push xorl outsb pop sbb xchg mov gs mov push mov leave insl cmp dec sub repz push jbe adc push (bad) xor add push cmc pushf mov ret or movsl imul inc (bad) pusha jl jmp es lea notl mov xor imul mov cltd lds mov aad mov sub sub (bad) adc add sub xor add inc pop xor xchg test xcrypt-ctr cmpsl (bad) fsubrl imul mul pop push adc icebp les dec movsl mov sti sub scas cmpsl jbe div sbb mov imul sbb outsb nop in cmp inc xor ljmp lret push sti lret and xchg (bad) dec xor int3 (bad) jg xor pop push lds js addb adc cli leave stos add and aaa sbb xchg test mov jbe and pop jl dec aas xchg enter and pop pop dec mov icebp addr16 cli sbb mov mov pop outsb repnz push ret fs out xchg and xor jb imul inc sti je inc dec mov rcrl int (bad) imul shrb ret es cld enter mov out in add inc fiadd pop repnz xor (bad) hlt lods bound ret jl inc adc pop pop insb daa imul mov cmp js addr16 (bad) xor loope xor sbb nop lret push push sub loopne add inc popf fdivrs fistl jecxz stos and or adc rcr lods push dec cmp push iret int mov push dec in int3 inc (bad) int3 (bad) out dec in int3 inc (bad) int3 (bad) out dec in int3 inc (bad) into out (bad) dec dec cmpsl jno sub popa fildl mov push mov dec inc fldt and test into push pop push mov fcmovnbe mov hlt inc das nop (bad) sub push mov (bad) and dec or out adc jmp jecxz fistp (bad) xor lret icebp rcrb mov pop or das cwtl xchg dec in mov push mov inc dec sarl mov sub inc aas pushf add (bad) and push sbb hlt jecxz iret inc ss mov inc das pushf xor imul cmp inc les iret iret jb mov ror xchg lock rcr add in mov fldt lret mov (bad) hlt movb mov popa fildl mov cs aam xchg outsb inc jae xchg fs dec rcr xchg mov hlt or push cmp xor adc add xchg shrl xor xor imul hlt stos mov mov data16 (bad) dec mov mov jb es aaa sahf or sub jbe repnz (bad) jb ds enter inc pop sub jb (bad) mov inc xchg call sub adc pop (bad) repz mov outsl or ljmp xor adc xchg outsb cmpps dec cld xchg fbstp in das mov mov jp (bad) int add shr enter ss scas add cltd shll leave jl jns dec sub arpl ljmp jmp and rorl and jnp adc bound push and sbb popa pop enter mov icebp cmpsl inc adc pop cmp sbb in or jnp imul fcomi (bad) (bad) not out mov dec dec pop repnz xchg ret test mov push repnz sbb mov xor adc repnz pop pop fldcw pop adc pop fs jnp sbb popaw jg add inc je mov sbb scas out sbb or pop mov lods movntps insl popf sbb jecxz and in jp arpl dec xor lcall push sbb ret mov fsubrl jmp xor cmp imul add cltd jne insb cmp fidivl add pop mov pusha insb pusha lods dec sub aaa insb rcll cltd xor jbe enter (bad) das sbb push xor mov (bad) xor enter add stc (bad) aaa mov xchg mov or pushf xor ja xchg and adc dec and cmc lods lret fcmovnu in jl scas stc in adc xchg mov jnp jp push cmp out mov out cmp xchg adc xchg bound xchg mov dec imul sub or mov jo clc cmp arpl mov add fld pop jl outsb je stos or fisub test xchg sbb xor adc test movsl fs or (bad) cmp mov (bad) push es adc push in mov sub xor xor cmp insl sbb aaa fisttpll popa pusha sub fwait xchg cmp mov cmpsl pop jl imul sbb mov pop cli xchg cmp mov leave adc fisub sub xchg lds jnp scas popa fdivp iret clc ja pop mov out fsubr popa imul outsb scas inc pushf push js sti aam and rol aad sarb lret xchg add mov cmpsb scas std insb mov and and lcall les enter popl bound cmp ss xor ja cltd mov hlt aam sti fwait aam popf cmp hlt test add js inc xchg daa push in imul ds xor sbb push cmp push and les rcll cmp cmpsl xchg adc pop inc dec jecxz mov int3 mov sbb out popa add add sub fisubl mov aas loopne jecxz mov push cmp mov inc pop sub mov sub lea sub xor add sbb mov jno push out xor std jno mov sub stos insl jle,pt pushf sbb jae lds jb in jnp sub sahf fwait imul inc pop pop jns push sbb dec and mov mov push mov dec ficoml mov stos sbb pop and imul push gs push dec shrl fwait xor cmpsl dec fwait mov andb hlt subb dec add cmpsl popf das pop xchg scas xchg mov ljmp int in push mov xchg popa icebp or call das and (bad) mov mov arpl inc mov adc cmp xor pop pusha xor ret mov pop push je sub loopne es into (bad) lods push sub xchg push hlt adc cli push mov inc inc repz jecxz mov ficoml iret jge inc fsub cmpsb aas popf jns push mov repz imul inc jb,pt sub sti insb pushw cmp xchg add lret hlt movsb add mov movsl sahf pop iret mov into insl movb fisub adc or test les iret das icebp fwait sub sbb jg popa daa sub lcall mov xchg movsb fs sti shll cwtl push push cmp fsubl out fwait sbb push dec dec repnz xor push cmp mov inc sti in mov fwait addr16 add or or stos xor popa popa mov ret sub xchg ret movsb shlb stos arpl pusha ret cwtl cwtl in adc pop fwait jp sub push roll hlt xchg scas outsb cmp dec inc sbb rcrl stos cmp xchg lret std movsl push mov sub stos xchg es jecxz mov jl cs dec repz fs mov int stos jg xchg iret sbb push lock mov xor mov (bad) imul and ficomp dec adc mov je jmp push sub lret insl add inc pop dec hlt xchg dec lret fmulp stos dec into (bad) scas push xchg (bad) jmp cmp int3 cmpsl fiadd imulb imulb out inc lret lret mov (bad) cwtl ret ljmp pusha icebp lret pop fwait outsl stos jl mov lret stos int3 (bad) call lret les push shrb ret les jns dec movsb sbb stos (bad) test outsb dec inc dec dec les push sahf sub scas dec pop das dec ljmp ret cmp lret imul loopne into fmulp lret (bad) or outsb xor pop repz push mov push xor or movsl dec sbb test stc inc addr16 mov ret stos test (bad) jae inc addr16 arpl pushf xchg std inc aam fwait and adc add inc daa mov jl push push hlt inc xchg mov cs (bad) loope inc arpl lahf addr16 popa aas faddl pusha mov push shrb add xchg jmp cmp adc sbb cmpsb idivl lcall cmp bound das dec stc lds outsb jecxz mov sub dec xchg mov test add das sub ss sbb jle dec add sbb sbb cld xchg loop xchg iret xchg xor dec ret stos adc loopne xchg sbb fs ds xchg jns sbb mov (bad) sub add icebp adc sub xchg fcmovu pop (bad) clc mov mov xor pop cmp mov icebp dec scas xchg cmpsb (bad) pop outsb cwtl mov lcall js add push push in sti cli bound pop adc cmp insb out lret out into dec inc (bad) pop clc or faddl xchg push push lret sbb sahf dec mov mov insb push les fldl add sbb dec imul pusha dec push (bad) in push push int call (bad) cwtl pop xchg aam push push cmpsl and or push jns pop fildll jecxz sbbb jns (bad) mov sbb mov cmc call mov (bad) loopne int mov stos xchg (bad) out dec fabs lahf cmpsb lahf aam sbb inc repnz xlat cmp test jg incb pop scas adcl call jp add inc inc cs repnz je push pop jmp sbb fsubrs mov push jo loop dec xchg sbb das mov mov dec push dec outsl or sub or mov ja fadds jb jge cs int test fdivs push dec test je jmp insl fistpl insl lds cmp lods rcl add rcll dec dec out pop (bad) mov pop ljmp les mov ret mov jne lds sub or js nop xor adc push add and xor jl je stos enter lcall jb fsub lea jbe out repz inc sahf adc aad addr16 (bad) sub cmp (bad) sub push push addr16 bound pop adc icebp push cmp sbb lods pop mov mov roll (bad) scas pop sbb (bad) mov xchg ljmp shrb ljmp mov sbb sub aad inc mov (bad) rorl adc adc inc mov add imul inc hlt adc lea notb push mov sub dec aas int jmp adc in xor lds lds dec test push mov xchg data16 inc pop or xchg jo inc or jle xchg jo fstps movsb jp fistpl inc sub jle jbe jmp dec push test add or mov stos sbb lods cli or call and cmc push insb pop xlat addl loop xchg pop mov sub push fstp imul fisttp lret bswap aas dec cs mov lret dec mov cmp jo push aad and add shll imul mov xor icebp paddb xor (bad) jo jge sub test jae test add pusha rolb mov pop dec pop inc pop dec pop movsb test lock das or sub int iret or arpl nop int3 stc ret cmp stc iret insl dec das enter test adc loope ds jge adc mov and imul add jb push mov mov xor les lret sub add jg cmp cmpsb js and (bad) in inc aam add (bad) mov jl xchg loop adc sahf stc cltd adc pop test or or add cmpsl sub xchg sahf jl push xchg pushf xor movsb xchg adc xchg inc or or push jp pop repnz jmp dec pop jmp inc repz test jecxz xchg sahf mov mov xchg mov jmp xchg into push out lods or out notl jne je add push leave jmp enter les int3 aaa rcrl mov sbb mov inc ret inc in cmpsb sub (bad) in out pop push iret es pminub mov shr cmovno cs in repnz (bad) mov loope test (bad) cli aad xorl xor notl nop jns sbb test xor (bad) mov push and leave dec and inc rolb fisubl rcll sub incl add lds jecxz cmpsb sbb inc ljmp pop int3 cwtl aam bound push ja popa aam sub scas repnz sub pop es gs outsb pop in xor test dec in das pop fdivl push lret dec (bad) sub imul xor mov sbb push lahf sbb movb out ja xlat out jge inc popl lea dec and rolb pop adc xor mul (bad) or movaps or cmpsb push dec out inc pop ret movsb imul fcmovnb (bad) pop mov pop loopne push mov and mov dec add adc mov pop bound mov pop adc loopne mov cltd stos fdivrl mov mov inc int3 push int3 mov enter sub pop jecxz push or test iret dec xchg test std rclb out out jmp push cmp addr16 sbb cmp or aad pusha pop bound ljmp fidivrl dec subl ret das inc cmp inc jmp mov ret inc mov repnz adc pop inc mov ds xor insl inc or shufps jno sub shrl inc pop test adc fnstenv out stos push popf (bad) xchg pop lahf add mov enter (bad) cmpsb mov pop outsl in inc cmp repz xchg sbb pop cmpsl pop addr16 adc xchg xchg fs rclb in inc loop cli xchg push lcall push push dec movsb sub xchg push add or (bad) xor test mov push mov out daa pop push mov fwait testl xchg cmp pushl (bad) (bad) push push lods adc jmp fwait out into jge inc mov mov push xlat mov adc jg mov cmp js pusha mov test cmpb int3 das sarb fidivrl fimull xchg mov dec iret aas add mov rcr icebp into jecxz mov xchg xchg jns,pt inc das jns test jae jge gs jae fmuls movsb cmp shlb jmp adc inc gs imul popf (bad) mov push aam mov push mov push sahf lcall jno push (bad) mov (bad) or mov jmp out push cmp out sbb inc mov push icebp nop add aaa mov inc pop or xor and and inc fdivl mov mov jae push sub std inc mov cmc xlat xor jae cmp or push push test or xor (bad) or mov mov call mov mov bound out dec sbb sub loopne sub and pop pop pop icebp xchg ljmp xchg ret dec fadds ds ret das iret mov push xchg cmp sub mov repnz push add sbb mov gs fcmovb into lock aad arpl iret and int cmp inc ret arpl stos adc loop addr16 jb bound push mov int3 mov xchg gs dec cmp sub cmp pop je das push pop in pop ret in inc cmp lret test movsb fdivrs hlt pop (bad) mov sbb (bad) pop add and and fdivs jo das mov stos cmp ror cmp aas dec ds lret adc mov into push into arpl popf dec push and loop xchg shrl mov add mov nop imul pop and mov push test push (bad) inc xlat pusha inc cltd mov cmp xchg sub sbbl leave add mov enter fs cs cs ds mov and pop mov lcall jae jge sbb xor mov inc nop lods mov xor dec fstpt mov sbb mov mov decb push shrl adc imul je push bound fs outsb mov jno pusha push cmp or mov mov xor or and pop push inc in xor (bad) pop xchg and mov rolb jbe out cmp imul jp (bad) xor or jle jle jle jle xchg shl shlb xor cmp or clc not cwtl (bad) rcrb cmp cmp xor push sub jno ss mov leave es mov out adc out repnz popf mov adc cmc lret mov xchg inc sub scas bound mov cmpsb pop cmpsb pop scas rorb adc mov lret (bad) cmp (bad) in inc std out push sti dec jp jp adc pop push add adc sarl js cmp sbb lret inc sahf and mov (bad) mov scas add or xor repnz nop pusha sbb jno enter stos sarb dec jno roll inc mov cltd out (bad) (bad) aaa shrd jno xchg mov daa lea mov repnz lods mov popf push sbb lea cmp or ret sbb lret xor imul pop and mov call mov jmp lock cmpsl ja mov mov jo and shrb aad rolb stos add shrb cs jle fdivrs adc lahf movsl loop inc outsb jnp jl xchg adc lahf movsl loop inc outsb jnp jl fimul jl dec int3 mov or fstps jge sub jg icebp (bad) out enter jne rcrb inc add cmp arpl pop mov cmpsb test inc pop jecxz push (bad) fld cmp iret sbb inc rorl les jbe jns mov or enter stos inc call jp dec (bad) pop and jp orl insb in rolb pop push cmp adc aad loopne pop cmpsl sbb xchg (bad) repz jmp sub loopne mov cmovge cmp pop pop dec int3 or fld outsb push cwtl or outsb and or into mov push and call outsl dec or dec mov bound mov mov cmp and (bad) ds clc sub pusha or ret push inc dec push cltd dec cmp fstpt inc stos sbb mov cld cmc test fidivrl imul xchg fisttpl (bad) mov out cmc jbe inc sbb in mov idiv add imul cmp loope (bad) fisttpl mov lds adc loop es rolb pop adc outsl int cmp sub mov mov loopne lahf (bad) mov add inc popf lea xchg mov insb inc pop xchg cmp stos jne mov fnsave mov push outsl push stos cmc enter sub dec and cmc movsb sbb scas (bad) out scas js cmp push hlt or xchg sbbl sub xchg insb (bad) cmp mov adc nop cmp rol xchg aas stos pushf iret fdiv xor inc outsb loope jmp dec pop and jnp adc sahf pop mov es and aad xchg sbb xchg xor mov sahf hlt mov add lock out and ficomp in jnp xor mov xchg pop ljmp out cmp (bad) jle cs aam jge dec sbbl mov xor push push fdivs lods cmp mov cmp sbb inc psubb js cmp cli mov fdiv fldl xor sub add xor dec adc shl jle mov (bad) cwtl push inc xlat push inc movsl fs sbb loop dec push mov xchg inc in add xchg pop mov nop out mov xchg int3 je dec pop push fs cs int ljmp stos movsl cmpsb pop rcrb lods dec in mov cmp aaa arpl (bad) adc adc stos push jo movsl fnstcw pushf imul (bad) mov iret jle int sbb pusha int3 iret jbe jnp and lods inc out ror movsl (bad) xchg or pop lahf inc cmp imul sub xchg enter int daa nop icebp (bad) pop or mov fcompl cmp mov out cmc pop mov xorl (bad) insb je pop orl or aaa stos movsl pop (bad) outsl jl enter push jg push add pop aaa push imul mov ja in xchg pop movsl pop jae inc or pop loope or nop mov andb xchg cmpsl add jg (bad) fucom xlat cmp sub adc ljmp inc dec adc icebp bound pop dec and mov adc mov sub cmp sbb lcallw lahf mov and jecxz in cmp test cmp out mov fildll pop icebp jae je jns push adc aas lahf mov adc outsb stos pop pushl sub sub mov dec pop mov push dec inc insl xchg jbe inc dec cmp cmp jb cmp lock inc mov sub cwtl or sbb cmp fimul ret sbb in mov mov pop scas sub push in movsbl cmp xor addr16 cmpsb inc lcall jo mov scas inc imull pop xchg sti mov scas xchg (bad) inc and xor pop fcoms stos in popa loopne subb aas cmpsl test mov test or das and pop jo sbb jl aad inc cmpsb push cmp cltd (bad) or add sbb aad movsl fstl in push loopne aas lcall cmp sub pop jle cmp or and lahf test dec insb push lock lods in mov xchg dec hlt fs add inc dec dec rorl mov inc mov dec js pusha xchg loopne mov jbe inc fadds pop sahf or sub movl in pop adc fisub mov scas lods xchg push mov jae gs adc mov mov sub int3 push push scas push int jmp sarb mov or outsb mov lods fistl les jns out dec and xchg aam pop or sub sbb jge xchg lock mov sarl hlt and and push gs adc and sub add mov adc pop or xor sbb fsubrl cwtl fidivl cmp mov fdivrl sub mov sbb ljmp push inc adc mov pop xchg roll jmp xchg mov cmp lahf mov jp lock xor add sbb ljmp mov cmp or mov push jb jmp push fmuls imul cmp sbb mov cmp loope mov push lods lret lret pushf fnstsw inc fwait clc icebp (bad) cmp mov rcrb out mov fadds push jl ds xlat inc push call call xrelease in movsb jo sti shlb mov fnstsw jbe adc dec arpl imul xor jge push daa sub iret sbb icebp stc adc xor in jb cmp jl mov mov movsb (bad) fiaddl adc mov aaa xchg jnp sub das mov pop ss aaa jns (bad) clc xchg mov (bad) loop sub pop xor xor cmp sbb inc add es inc xchg sbb jns add dec and ds mov cmp mov fstpl xchg imul fwait mov in dec pop jns push dec lea cmp jmp adcl imul stos lret xchg repz push stos decl test pop jle and xor dec daa fldl jbe call push icebp adc cmpl sbb shlb xor lea mov adc xor adc and xor and fnstcw push mov xchg imul lods or repnz mov in leave repz loope iret idivl lea cmpsl mov sti inc ss or int mov fistpll or push sbb ljmp mov lock test mov add loopne inc mov mov mov insb xchg add out add lods push fildll fadds fmull rorl or roll (bad) lcall mov test cmc mov stos lret add iret lock dec pop add mov test sbb xchg cmp jae hlt (bad) stos adc enter xchg push subb dec (bad) repz mov cli jp lret aad scas loope imul dec pop xchg (bad) sub pop (bad) dec or jmp out add out adc add repnz or stos pop nop (bad) lods mov or push sub int3 or mov and fcmovnbe sbb inc jmp cmp loope jecxz out (bad) mov cld test and sbb dec jp cs fwait sub mov dec sub subl cmp icebp mull jl adc push jns inc sarb scas push jecxz adc adc std stos xor adc lods pop sbbb xor icebp cld mov shll js or ror icebp repz sbb adc dec and (bad) jno jbe sbb bound cmp cmp shll jecxz cld repz adc inc inc dec jge add stos push cmp mov movsb out aaa xor out les imul xchg test ss (bad) int in inc cmp rcll xor arpl sahf push mov rcrl cltd adc add jne dec (bad) fldt push mov cmpsl bound pop jae mov mov adc xchg daa mov dec popf mov and mov mov sbb fwait and int3 call push in imul xchg pop stos repnz cmp dec loopne xor ret movsl lea pop pop xor push popa test jno dec fs fsubrl (bad) movsb in negb scas test pop test jnp push mov gs pop push aam ds jg adc add adc rcll jmp test dec sbb decb call cmp jno loop aas xchg dec pop push sbb in ds outsb pop cld lock inc sub aas mov xchg mov shlb aam xchg sahf push in pop cmpsb int3 icebp xchg inc jne and mov jl test mov pop popf fnstenv (bad) arpl outsb xchg push lea push adc idiv lcall mov pop cmp stos mov xor ss mov insb test div and sbb in mov divps gs or xor in (bad) cmpsl pusha lret fwait push lock negb push pop repz cs inc cmp nop fwait mov pop bound das (bad) aaa mov cltd mov add jl mov pop xor and jbe aad jb insb xor ds sbb xchg ret sub pop cwtl lds movsb fadd loopne mov push pop add xchg sbbl xchg ljmp mov cmp pop js jl inc xchg outsl pop cmp pusha (bad) sub mov inc sub cmp xlat dec fs in push cwtl jo loop rol es cld pop inc push addr16 jg mov enter inc inc mov cmc inc in imull out mov sbb aam push mull cld mov push or push jns inc and not aaa in loopne sarl pop inc mov jmp insl push (bad) mov pusha test pop mov pop xlat test dec adc test cmpl push xor and jg dec lcall jbe or int3 loopne loopne in sub mov mov aaa pusha add push cmp sti frstor xchg add adc xor in ja arpl cmp repz sub jge clc sub aaa test inc dec test je out push stc or adc pushf dec cmpsb add xchg xor cmpsb cmp push jge inc cmpsb out mov aam or dec jnp adc lahf jg (bad) call push arpl and ret data16 sbb imul mov rolb xor lret sbbl mov sub es fsubrs std mov push out into repz dec fild lcall mov lock shrb cmpsb pop xlat jp pop xlat dec (bad) pop mov xchg in arpl jbe sub cmc movsl in adc push jmp fcoms adc and lods pusha andb (bad) mov loope mov loop sti fcompl daa in mov dec cli dec hlt jnp fdivrs inc movsl data16 aaa and xchg adc aas stos test pusha pop jno int daa push icebp lret adc fwait jb roll push in pop dec pop xchg add push icebp push in sbb sub mov loopne or push inc mov mov lahf and outsb mov jb or pop jl and xchg mov jecxz ljmp xor icebp lret aad dec fisttpl test mov es cmp mov das jb cwtl rcrb jno paddb test movsl ljmp sub ds pop into and mov cmp test push push push adc js push mov pop mov nop xchg outsl sub (bad) inc dec xlat adc or cmp sarl mov out subl or xchg xchg mov sbb lahf ljmp mov or mov xchg divl nop int or adc xchg fdivl inc xchg and sub loop cmpsb call sub xchg inc (bad) sub mov xchg cmp push nop pushf adc mov or mov push mov mov in adc insb loope cld jp test cmp les adc push xchg or dec incb push dec in fisttp jne cmp sbb xchg jmp xchg popf loope mov add add push lret or xor xchg je cmpb aas xchg fidiv inc jp ss (bad) jns push icebp jg stos sbb cmp popf imul jbe test dec xchg push or or clc lcall or addr16 scas fdivr push icebp lods call test arpl or inc inc pop popf gs pop pop or popa mov mov pop dec push popf mov test cmp addb rcrl or xchg bound rcl nop or mov lock push inc (bad) (bad) imul jo or and jge inc cld jae mov push xchg jb push and out mov insl test jg or add out and lock sbb in mov dec mov jae fs push mull ja imul inc jp lret add sbbb sbbl or push jnp xchg test imul (bad) sarb sub sar outsl stos popf pop cmp jp sbb outsl es inc pushf mov rcll add dec push jne xchg mov xchg dec or push push mov int3 pop fsubr xor cwtl or xchg (bad) sbb (bad) cmp pop push int3 imul or clc aam xor mov bound les fdivrs push sti jnp out add popa scas sub jmp imul (bad) out aaa je mov xor push mov sbb mov xor xorl sub gs inc mov lret xchg daa aaa sbb fincstp xchg enter lods jbe arpl or int3 or inc iret lea xorl scas out mov add (bad) in or movsl out cld stos add mov (bad) cmp xor (bad) in in mov pop lods xlat mov mov inc outsb fdivl mov leave (bad) fs push sbb rclb jp movsl or fistpll popf mov and mov shrb mov cs jl sub mov pusha out and push xor pushf mov (bad) popf ds js jmp mov scas sbb dec loopne int cmp outsb cmp pop mov fistp pushf and push push sbb fstps lock sahf push push popf sbbl insb cwtl sbb icebp bound push imul xor sti pop data16 test xlat pop push add in inc push aas and stos movsl mov xchg nop xchg in and out and repnz jecxz iret xchg sbb fbld sub mov outsb cmc orl mov addr16 mov mov fs cmp aad xor xchg inc cmpsl xor xchg jp jecxz std add mov loopne in adc mov (bad) sbb xchg dec dec push test fidivl push push sbb ljmp and sbb mov mov add or mov or repnz jo push fs ss into pop aas js dec loope pop pop fcompl inc mov enter push inc xor movsb mov imul inc jne xor pop stos jg pop or xchg int loopne in cltd xchg lcall aas xor lods mov sti shlb xchg jbe and dec sub push sub ret js or pop popf and iret ud1 cmp aad add cmc push mov mov ss je sbb (bad) stos sbb sub pop inc je gs xchg sub stc adc mov cli fs insb lods sbb lcall pop aam cmpsl ret repz jge fwait jl dec mov jnp push int3 xchg loopne mov push pop xorb fs pop jnp leave mov xor negl adc leave cmp or pop cmc xor fcomps jnp (bad) xchg xchg dec xchg xlat inc js outsb mov faddl hlt sbb shlb outsl inc or add lock and addr16 scas or dec mov (bad) movsl dec lds mov cmpl test in lods cmp scas mov in cs popf ss out push add xchg out cmp mov iret in inc int3 sbb or and and mov sbb test popf ds cmp fimul rorl das (bad) rcrb outsl pop addr16 pop xor inc repnz xor or xchg mov test ss das fsubr in jge pop arpl ss ficoml cmpsl ficomp sub fldl dec add pop xor cmc mov push lock cmp cmp rcll cmp mov testl sub xor add lret mov xchg mov and mov int int3 jns and mov mov in and mov inc or mov (bad) dec add data16 sarl mov push cmp (bad) cmp aas (bad) xlat dec dec cmpsl xor jg mov push lret into aaa adc push stc test fdivs out cmp std cmp pop jns jge add inc (bad) pop mov sar sub (bad) hlt xor addr16 cmp popa dec arpl rcr daa mov jmp xchg icebp int3 xor xchg sti dec cld popf into test test jle lea aas pop cld mov xchg jmp into xor add mov mov inc sbb jmp dec aam ds push ret lds mov sub insb mov jb fsubp jg pop fwait ret jp data16 jg lahf in push jl enter mov ret pop jp mov mov fldl sahf scas dec flds mov aad test sub hlt popf inc and pop add xor push lds xchg dec repz or mov mov inc pushf movsb cmovle call in test pop fsubrl clc lods scas fcomi inc jg addl sbb inc jmp or and nop loope fnsave ret and test xor jmp lcall sbb cmp mov mov (bad) (bad) daa and scas insl imul xor push jecxz mov lea lahf and push pop push sub rcrl jle test jnp and add aas push and pop insb movsb jp (bad) icebp push jecxz cwtl inc adc jmp push add lock inc adc xor xchg inc xor imul js hlt cli jno fsts es mov das test fisttpll jbe int sub in popa aas movsb pop fidivrl mov ficoml adc sub push xchg std xor xor or (bad) leave dec insl xlat dec and stc pop or add sti add xchg arpl inc rcrb scas fisubrl or imul shl fbld aad ror inc in jecxz adc xor push push inc dec repz pop les jno outsl xchg call dec and add lahf push lods jg cmpsl call adc dec cmc les jbe ljmp push iret or in add insl pop nop test outsl in mov leave mov pop mov test addr16 add pop daa push add lock fidivl daa xchg test push fcompl mov lea lods ja push mov sbbb push dec sub int shrb stos imul ret dec rolb or int (bad) insl lret dec shrl xchg mov adc imul test mov int cmp adc inc xor stos jne sub mov mov xchg ja lahf aad xlat cltd sbb stos adc mov in push lret (bad) enter push rcll xchg andb mov mull repz adc inc test pop ds shlb daa test push (bad) xor das cmp fidivrl test test mov arpl xor mov sub sti adc adc repz ret fadds sub imul mov cmp subl ds cld aad arpl push pop and jns add add ret mov cmp dec sub idiv sti inc les cmc push sub xchg cld rcr xor push lret dec into adc .byte mov 