pop adc or (bad) xchg cs callq mov adc callq jne xchg test (bad) rex.WRXB cmpsl rex rex.B dec jno retq add hlt (bad) sub fdivrl in movslq sub scas ficoml mov hlt (bad) sub pop nop jns outsl sarl lahf std or xchg cmp mov xor in callq pop cmpsl rex.WRXB sbb mov jmp lret lods js sbb (bad) adc mov jb (bad) cmp lret jrcxz and push imul (bad) (bad) xor adc (bad) cltd or push or (bad) lea lcall xor movabs push cmc mov imul sbb push mov mov fs test (bad) (bad) sub add outsl jns enterq mov hlt jmpq jmpq cmpb jmpq jmpq movsbw not add mov test stc and cmp bt jne add jmpq jb stc bt cmp jmpq add cmc shr data16 testl ds bt (bad) testl cmovs jge bswap add neg clc (bad) testl mov cmc shr cmp bt clc cmp jmpq ja rol shr jbe rcl sub movzbw rol or add bts test bsr shl mov bt cmc mov cmp test repnz jmpq mov bswap jmpq jmpq jmpq jmpq bt cmp jmpq andl mov orl or imul mov (bad) lahf notb xlat mulb movabs in and sbb xor cmpsl imul (bad) (bad) incl mov cld (bad) (bad) jmpq mov and fnstcw (bad) cltd (bad) leaveq sub fsubrs sbb (bad) and imul cmp lcall or add (bad) rcll iret sbb rex.WX rex.R xor retq mov and pop roll cs pop mov stos rex.X or pushfq fs outsb mov cmp test mov lret add jge sbb imul adc rex.X mov (bad) (bad) and lret xchg push out (bad) (bad) and pop xor rex.RXB (bad) (bad) fist cwtl clc imul fs es sbb cld (bad) lcall rex.WB sti rex.WB (bad) (bad) (bad) add cmpsl rex.XB xchg (bad) cmp in jge adc (bad) xchg je sub mov adc add movsb insb mov clc cs jl sub fldenv fmull (bad) pushq ds sbb add stos (bad) jae adc movabs mov outsb rex.WRB (bad) (bad) push xchg (bad) adc xchg (bad) (bad) add (bad) insb (bad) pop (bad) mov sbb cmp xchg cmp fdivs fisttpll or movslq rclb add and sbb mov rex.X (bad) (bad) lcall mov in xchg int3 push xor leaveq je sbb enterq and lock and cmp callq and fwait cld (bad) (bad) (bad) (bad) nop rolb jno fmuls (bad) int3 rex.R mov icebp (bad) pop xchg cmp sbb mov rex.WR je push cwtl adc ss mov xchg pop callq cmpsb jmp sub nop jb stc rex.W callq in add pop add jne movabs mov jmpq callq jmpq jmpq repnz jmpq sbb sahf or mov rex.RX (bad) mov xchg add leaveq imul icebp sbb (bad) xchg jb std (bad) cli int3 (bad) leaveq pop pop fs repz pop cmp (bad) rex.RXB sbb sbb (bad) (bad) fbstp (bad) rex.RB mov (bad) flds lods cmpsl test adc fldcw lock lret (bad) xor xor sbb mov pop mov stc rex.B jnp xchg push cmp (bad) (bad) (bad) cli test (bad) (bad) fild mov ss mov jns (bad) and pop jb mov or jae sub sub xchg (bad) enterq pop mov mov incb imul add add pop push (bad) mov pushq lret fistpl xchg (bad) adc add mov xchg push loop jmpq jae stc mov xor test add not mov jmpq jmpq jmpq jmpq sbb movabs loopne adc movabs xor xchg cmp sub mov adc movslq movabs (bad) loopne std (bad) lcall sub subl rex.RB jge push jrcxz sbb mov (bad) (bad) (bad) lret movabs (bad) (bad) adcl (bad) pushfq movabs jnp (bad) rex xor (bad) in mov retq xchg cmp rcrb pushq retq (bad) sbb adc mov pop pop cmp mul and movabs sbb cmp jle hlt lods shll pop (bad) or outsl and (bad) (bad) mov icebp in push mov mov fucomip mov (bad) repz xor (bad) cmp mov idivl fsubs jo rex.XB (bad) cmp rex.WRXB (bad) (bad) (bad) (bad) mov adc pop outsl ffreep (bad) data16 ja movabs (bad) pop repz jle sahf jns pop (bad) sbb xor repz lea in imul push xchg jno add mov fist mov cld (bad) (bad) (bad) and jg jnp (bad) (bad) fisttp xchg int3 cmpsb es rex.WR (bad) pop rex.WXB rclb popfq gs cmpsb mov lret data16 in fwait es sub adc or (bad) repnz addr32 insl cmp in cmp callq sbb sahf sbb and (bad) divps mov pop scas sbb mov push jp icebp and adc rex.WB xchg cmc or shll in (bad) and add or xchg cltd sbb sub jp callq in or xchg push and (bad) (bad) (bad) jmpq mov push sbb fstps (bad) imul pop (bad) cld (bad) (bad) jg data16 cli (bad) (bad) fbstp js enterq js sbb add rex.WR sub js scas sbb addr32 cmp add mov mov mov cs adc pushq loopne mov sahf movabs (bad) jg rex.W and (bad) fmul ds movabs lods sub (bad) mov pop cmp movsbl not movzbw pop jmpq rex.RXB hlt pop fs mov or (bad) (bad) jns movsb pop imul (bad) cld (bad) and (bad) cmp in (bad) cmpb cmc pop fisttpll sbb out rex.RX rex.R jae retq (bad) lock ja push pushfq and xchg cmp movabs (bad) jrcxz and pop mov or (bad) (bad) ljmp (bad) (bad) lcall stos sbb pop add stc data16 loop test cmp cmp cli rex.R xchg ja cmp mov fstpt push loop jmpq xchg (bad) insl popfq decb and shrb repnz cwtl loopne xchg jno sub (bad) pop (bad) rex.RXB pushfq movabs rex.WR sub movabs sub adc xchg (bad) in rolb add jnp incl jno fimul out mov lret pop xchg pop lea not pop mov movzbl pop retq rex.WXB rex.RB rex.WRX rex.RB xor cs insb add stc bt ror jmpq ja jmpq jmpq clc test cmp jmpq bt push shld btr dec rcl mov bt stc sub jmpq mov (bad) mov int rex.WR int3 in mov (bad) pop (bad) scas hlt or (bad) jno jbe push push insl out gs loop sbb push rex.X jl adc repz mov shlb jbe pop test adc or cmp xor pushq rex.WR or (bad) lcall jns idivl (bad) (bad) iret sbb jae fsubs ljmp rex jbe sahf rex.WR ror fsubs cmc or jp sbb push rex.WB rex.WB out out movsl popfq rex.W pop fldt xchg outsl in cld in (bad) cmpsl mov addr32 mov jno cmp movsl std xor scas mov cmc or mov sub outsb out std add xor cli rex.WX xchg retq cltd cld mov xor lahf cli jp test stos (bad) mov lahf (bad) or push (bad) out mov add jge xor stos sti fs mov cltd lret (bad) (bad) fist std (bad) (bad) fucomip mov push movb jmp clc adc imul std xchg (bad) outsl sahf push icebp sarl (bad) cmpsb outsb push add test xchg insl cmp cmp (bad) sbb (bad) or xorl jo (bad) add mov xchg scas (bad) add jmpq mov movabs (bad) ffreep push xchg fisttpll movslq mov (bad) xor (bad) xor sbb rex.R test lock sbb (bad) movabs pushq popfq jmp sahf (bad) sub (bad) cli adc add (bad) faddp jbe movsl adc jb test pop rex.WXB addr32 (bad) (bad) lcall pop out clc jrcxz rex.WRB pop pushfq mov loop pushq adc pushq push mov clc jrcxz decl xor xlat (bad) loope (bad) shll enterq (bad) mov (bad) cli (bad) (bad) (bad) cmpsl shrl sub movabs sbb xor (bad) addr32 (bad) and (bad) rex.WB rex.WR or sub (bad) mov retq iret sbb jns shrl test hlt cmp cmp (bad) nop callq jb pushq xchg scas icebp in cmp out mov (bad) cmc lea iret xchg leaveq sbb sarl out (bad) push add scas jge rex.XB stc cmc clc cmp jmpq stc test jmpq jmpq jmpq clc clc add jmpq stc test sub jmpq jmpq cmc cmp cmp repnz jmpq ja shr sbb add add clc add ror clc clc xchg setp movsbw mov bt inc rcl inc mov bt jmpq lret push mov add stos (bad) (bad) and dec test sub (bad) xor hlt cmp rex.XB and sbb push jbe (bad) sbb pop cmp maskmovq divl (bad) mov test test (bad) (bad) (bad) jg xorb stos cld (bad) lcall es add (bad) (bad) fisttp xchg cmpsb rex.WRXB rex.WR fimul (bad) (bad) mov jne sahf imul sub rex.R rex.WX cmp test callq (bad) xchg (bad) in movabs xor movabs rex.XB clc pushq (bad) (bad) fstpl (bad) fsts movabs pop orl fcomps nop cmp rex.W push adc test jno jnp pop add rcll jp test rex.WX clc jne xchg xor mov test (bad) jmpq add add add rex.X push add add shrb add add add add add sahf str lahf (bad) clc sahf lldt pop add mov add add add adc add mov add add add add (bad) add add add add add add lahf sldt ltr verr (bad) jle str stos (bad) mov (bad) xor adc (bad) mov (bad) pushq xchg hlt adc sbb or movabs jo loop sbbb pop ja scas rex.WXB jle int and in push fcoms fiadd scas jrcxz fwait and (bad) xor adc sahf nop ja jge repnz or sub shlb cmp push rex.WR rex.RX sahf mov (bad) insl rex.W cmp xchg and pushq pop lods callq jns sbb enterq adc push pop loope adc push out cvtpi2ps test fnstsw rex.RXB mov movabs movsl sub (bad) rex.WRB adc fldl mov test mov sbb retq xor xchg sub shrb adc (bad) lret bts (bad) test in mov cli xor rex.WRXB push xchg push mov rex.R or movabs inc (bad) jge cmp hlt (bad) rol xlat adc enterq and rex.B addr32 icebp cli jae movabs jge jbe xorl insb insb ficompl mov pushq jb cld jno sub rex.RXB pushq lea cmpsb shl cmp (bad) mov bnd addb sahf fcomps test scas mov jmp sahf mov (bad) sbb shld fldenv test rex.RB rex.WRB stos xlat lahf xchg jae (bad) xchg cltd xchg gs push jae sub ss rex.WRX adc (bad) mov jae rcrl cmp insb insl rex.R cmp loop (bad) cli (bad) xor pushq mov incb (bad) mov (bad) out clc push xorb pop jae imul mul and mov adc rex.WXB mov test std push push xor push push fsts test (bad) add xchg in mov gs hlt cmpsb (bad) adc add out es in rex.WR mov (bad) rex.WRB testb enterq sub shl lods mov pop pop push mov jno popfq fisub add (bad) add cwtl lea sbb mov push mov mov add cmovl and imul sbb xchg pop sub xor (bad) jl cmp xor (bad) mov lret roll cli sti and mov jo comiss idivl je es fucomip (bad) test clc adc loop xchg mov insb xor je cmp idivl xor rex.RXB or fldenv stos jnp movabs sbb imul mov jbe rol rex.RX nop fidivrl or sbb add jbe add (bad) movabs cmpb and shl adc (bad) (bad) xor clc pop (bad) jl (bad) sub rorl fadds insl mov cs rex.WX fwait stos jmp mov in sub lahf (bad) repnz mov or cs xor loope mov (bad) mov jmp cmp adc movabs repz rex.RX stos (bad) (bad) cmpl sar mov jl mov stos and (bad) pop enterq lret mov loope add imulb sbb (bad) clc rex.RX out loopne jne pop rolb jl imul rex.X pushfq movabs icebp jg rex.RB movabs int mov push rex.XB int3 ja movslq sub popfq mov rcr sub mov fmulp mov xlat (bad) fnstsw adc jo xchg outsl adc add cli (bad) xor push andb sub xor insl xchg (bad) lret fbstp fmuls (bad) cwtl test push (bad) adc mov cwtl cld sub scas pop cmpsl pop xchg pop or loopne (bad) in int3 mov imul ficompl cmpsb sbb pop (bad) fisttpl mov pop lods (bad) stos (bad) fisubl movsb mov repz xchg movabs rex.XB sbb jne sub lock xor lret cmpsb (bad) (bad) nop in cmc (bad) fs mov and movabs (bad) (bad) xchg jo enterq shrl cmp pop add cmpl mov retq loop fs or cmp mov or in mov popfq lods rex.WX fidiv rcrl (bad) rex.RX int3 (bad) (bad) cmp push stos and xor (bad) in adc leaveq and movslq add (bad) movslq lods (bad) cmpsl adcl (bad) rcl lea addr32 xchg cmp jbe nop retq add imul push push jle xchg or ja add fildll mov rex.X xchg add movabs in cmp sbb push mov push cmp push mov adc lods pop leaveq add int3 orl rex.W clc xor lock (bad) xchg fwait mov lock in cmpsb and rex.B sub cmpl retq rex.WRB lret faddl je rex.WRX (bad) jae cmp cltd rex.RB imul pop loopne cmpsb (bad) jnp sbb (bad) sti pop sub ficomp out popfq movabs jg fisttp lea (bad) int3 sbb xor ror pushfq lods in imul (bad) mov insl sbb add jnp (bad) int int3 xor xor lret pop out (bad) mov cmovb rex.B cli out push incb xor imul (bad) (bad) add repnz jns sub idivb push mov fwait (bad) scas (bad) mov loope mov (bad) cs imul (bad) clc int xor in adcl std rclb es rex.R fs lret xchg cmp ds mov pop fwait movsb pushfq popfq addr32 xor sub jo (bad) xlat fisttpll callq loop mov (bad) jp (bad) (bad) movslq test lret (bad) jg (bad) xor xor fucom mov (bad) (bad) or lock fsubrs sub movabs (bad) enterq or jno enterq cltd jns rex.X scas js add pop add (bad) fxch (bad) mov imul (bad) mov rex.WB imul jbe xor rex and sbb xlat xor stc mov and (bad) imul jns (bad) adc jo adc sbb add sub (bad) test pop movabs push (bad) jmpq repnz in cmp incb rex.WB cmc lods jg mov pop sub (bad) mov xchg mov (bad) (bad) (bad) shlb out (bad) movabs xchg (bad) cli cmpsb cli mov (bad) (bad) ss jl (bad) mov movabs jrcxz retq rcll mov iret mov adc mov jge pop (bad) rex.R mov xchg psubsw adc mov rex.WRB (bad) vpaddusw xchg iret leaveq sub add popfq (bad) mov mov push movsb pop (bad) sub movabs out (bad) sbb cmp out sbb cli jno es (bad) pop mov xchg sarl in (bad) loope enterq (bad) sbb imul cmp (bad) icebp pop ja int3 rex.W (bad) rex.WX (bad) (bad) (bad) xor (bad) push sbb sbb rex.XB rex.WX pushq pop in movabs or sbbb jnp popfq (bad) out sbb adc sti ss xor mov out adc xor ja sbb repz rex.RX jb sub sbb jb sbb mov fcmove lods callq lods xlat and xchg pop shrl or retq js stos mov rex.RX test rex.B and jl rex.R and movsl imul movabs insb jp xchg and xchg mull pop iret fbstp mull pushq sub jnp rex.WRB out insl sub and and sub (bad) and (bad) icebp shrb pop adc rex.X jmp (bad) sub (bad) std xchg rex.WB sbb xor icebp repz movabs addr32 addb jle rex.B mov (bad) xor pop out imul mov mov xor fst xchg or mov test and mov xor outsb (bad) rex.XB (bad) shlb out xor in xor xor (bad) (bad) or jno,pt (bad) jp xchg movslq test scas movabs adc js add retq stos add movsl rex.RXB stos xor rex.RXB rex.R rex.WXB test adc fcomp jae mov movabs pushq add (bad) mov xchg add sub jno movabs (bad) fsubr or enterq mov (bad) sub (bad) shrl push and adc movslq (bad) cmp jnp es rex fiadd jmpq xchg (bad) lods adc retq lods (bad) test adc lock fmuls repz movsb and test xor jns (bad) stc and add mov jg jae outsl rex.WXB lea (bad) xchg push (bad) add callq adc jne push pop rex.X xchg xor pop lods adc in and loopne (bad) ds xchg frstor jmp mov nop xorb mov int3 jl jbe push movsl sbb (bad) and (bad) sub xlat fwait mov adc (bad) loop (bad) sbb test fistl mov gs outsl fs imul insb insb add jae (bad) insb insb add fs gs rex.XB jne je jb gs push je imul gs movslq jb add jb imul add insb outsl (bad) fs gs rex.XB jne je jb gs push je imul movslq outsl js pop insb insb add imul cs insb add add add gs mov xchg mov test jp (bad) testl mov xchg mov fist (bad) sub mov enterq jo add callq mov xor lock or push add mov ds cltd pop movabs sbb xchg mov jl pop hlt lahf (bad) icebp add movabs sbb (bad) lcall xchg cli (bad) (bad) (bad) sbb andl rex.WRX add lea rex.W rex.WRXB rex.WX fcmove sbb test (bad) (bad) and cmp movabs xor xor (bad) rex.RX enterq movslq mov (bad) jmpq dec bt cmp neg clc sub test bt shr jmpq jne cmc cmc movb clc test jmpq ja jmpq jae jmpq jmpq jle and jns mov je dec and rex.RX mov (bad) sbb jae retq test mov cmp cmp mov or (bad) divb cmp cs (bad) (bad) fist cld (bad) (bad) (bad) std or and (bad) es leaveq fstps movsb cld (bad) (bad) (bad) sbb (bad) cmc lods pop lods rex.RXB mov mov adc sbb mov mov nop lock rex.WX adc lretw fistl mov and and xchg lret fcoml retq (bad) mov (bad) icebp cmp xchg jns mov lods sbb (bad) (bad) (bad) (bad) in movsl test es pop movsl fs adc cli (bad) mov rex.XB (bad) sarl out (bad) mov cmc cmp (bad) in (bad) (bad) (bad) jg (bad) imull scas jae rex.WX mov callq fistpl std (bad) lcall pop and outsl sti (bad) (bad) (bad) (bad) cmp popfq gs andl xchg cmp (bad) (bad) lret add sbb jrcxz xchg adc sbb rex.WRX (bad) jae xorl in cmc cmpsl xchg rex.B push imul shlb cmpsb or outsl lea lods pop repz out ds test shlb fs lods jrcxz data16 jmpq sub cmp (bad) out and mov sub cmpsb out repnz ljmp (bad) mov add (bad) cli adc es gs pop xchg and mov cmpsb gs jmp (bad) out fdivl rex.WB sbb movsb fwait or xor movsb (bad) (bad) lcall cmp lret sbb or jno out or sub (bad) adc and (bad) (bad) incl jp jns (bad) (bad) fbld cltd icebp sarl mov cmpsl (bad) cmpsb rex.WRXB andw (bad) ffreep and stc pop (bad) (bad) outsb (bad) jge or nop adc in xchg add ja (bad) icebp cmpsb jb iret (bad) and sbb push insb mov mov jno xchg loope and mov mov and and es adc (bad) jb or (bad) mov pop and pop icebp outsb movsl rex mov mov xchg (bad) jmpq mov or add stc add jmpq pushq jmpq rex.B rex.R push xor cs insb add nop sbb mov test clc test add cmp stc bt bt test jmpq jmpq jne jmpq or bt mov mov cmc cmc clc stc and test add jmpq pushq jae pushq jmpq jmpq jmpq jmpq mov (bad) mov mov push jae (bad) ds rex.R jnp rcrl jg pop insl in fldt sub xchg sahf sub movabs adc adc rcrb sbb adc fistl xchg rex.RX outsl xor mov ja xchg jae adc push xchg sbb push setg test rex.WRXB sbb or (bad) (bad) jg (bad) (bad) scas jl lods rex.WR add (bad) (bad) adc mov rex.W mov out pop and and rex.WRXB (bad) in retq mov mov sti rex.WXB pop fstl (bad) and callq ds outsl loop (bad) mov sub or mov (bad) movabs movsl fs (bad) mov (bad) ss lea roll stos jrcxz pop and push rex.WB rex.WRXB xchg andl (bad) lret cwtl sti sub pop jno push movabs movabs out (bad) subb int3 rex.WRB (bad) (bad) jbe (bad) jno xor mov mov rex.X adc popfq pop imul sbb mov mov (bad) xlat out jae (bad) lods add iret jne sub (bad) lcall or gs jmp jle sbb sub (bad) (bad) cmp addr32 mov jrcxz jns out out xchg sub ss imul movabs (bad) lods lods xchg cmpsb adc stos sbb sbb mov xchg pop mov mov cmp (bad) loopne rex jg adc pop or or (bad) stos pushq (bad) in xor rex.WRX cmpl sub mov fimul jns (bad) xchg (bad) pop movsl sbb (bad) push rex.WRX ds rex.R (bad) mov cwtl movsl push adc and test sub clc stc test shr jmpq jmpq jmpq ja jmpq jo pushq jmpq adc pop jle mov (bad) out popfq in rex.XB add lods in test adc mov (bad) vpcmpgtd je sbb clc addb sub test and push fdivrp (bad) (bad) fbld (bad) scas iret (bad) vsubpd stos (bad) sub or (bad) rex.WB (bad) (bad) (bad) mov sti (bad) (bad) fild lahf pop xchg imul (bad) pop adc (bad) sbb rcrb xor jg in std fmuls add rex.WXB movsl pushfq (bad) fcompl int3 sbb rex.W callq sub xchg test mov cli mov rex.WX rex.WRX (bad) mov (bad) mov sbb mov (bad) leaveq rex.WB lahf out notb ss lea rex.W ds mov out iret (bad) in test mov rex.RX (bad) (bad) jg push adc cltd js ljmp idiv cld (bad) lcall nop adc fistp (bad) pop add mov fisubrl repz scas (bad) push rex.RX (bad) movsl mov popfq add orl cltd pushq fwait or stc (bad) add cmp add stos rorl push loopne or mov sbb nop adc rex.RX sbb push cmc (bad) jg (bad) mov (bad) movsb push mov (bad) mov xchg xor rex.WRXB mov (bad) mov cltd xor rcrb sub sbb (bad) mov xchg or (bad) es in movslq or xor sbbl jp sub push sub adc nop nop addl or cmp and lret jrcxz cmc mov icebp (bad) pop pushq movsb outsb mov (bad) lcall (bad) movsl (bad) clc cld (bad) (bad) fbstp outsl loopne callq (bad) (bad) icebp enterq cmpsb mov cmc xchg sub rex.WX mov in gs imul cmpsl push stos (bad) int (bad) loop out fwait iret out rex.WRXB mov retq jge mov xchg push push sub (bad) loopne fmul fmul clc rex.RXB rex.WRB push sub rex.WRX ds xchg ja rex.WR in je cmc rcr push sub test mov sub shr rcr cmp sub bswap movsbl lea jmpq jmpq mov jmpq jbe jne dec not test rcl mov shrd mov sub rcr mov bt bt bt sub stc pushq clc cmp jp ja test sub lea add stc mov setl test sub mov stc bt clc clc repnz jne jne stc cmp movb cmc clc jmpq callq shl cmc movsbw add and movzbq mov cmp bt cmpb jmpq jl test (bad) (bad) mov std or lods in callq movabs imul cmp rex.R loop retq or (bad) xor test xor cltd js (bad) (bad) (bad) (bad) jg jo fucomi rex.RX test sti mov (bad) pop pushq shl xchg sbb out push test cltd rex.WRXB (bad) lods jnp xor stc cmp pop lea push out cmp and js push divb int3 unpcklps movabs mov pop lea pop jmpq imul (bad) mulb sar nop (bad) xlat retq js outsl sahf jbe in sbb out rex.RXB sub xchg (bad) mov sar jns (bad) ficom movsb fs ss add cli cmpsb rex.WR (bad) (bad) jg lahf rex.RX sub (bad) mov (bad) sarb in and xor (bad) (bad) (bad) shll test (bad) (bad) fild enterq xor sub xor xchg mov lret (bad) rex.WRX sub mov and mov mov (bad) adc fisttpl rex.WRXB ja scas (bad) outsb rex.WRB rex.WRXB faddl movsb push mov (bad) mov mov test sub (bad) std fcoml iret out sbb rex.WB rex.XB iret (bad) cmc mov (bad) jg pop mov loopne jbe mov or or pop mov sbb push repnz sbb loope rorl divb (bad) bt jmpq sub bt (bad) hlt mov sar dec dec add clc mov jmpq mov or icebp mov (bad) mov lods xor (bad) cmpsb (bad) fldenv mov (bad) xlat divb outsl cmpsl data16 or jbe int (bad) scas out fs sub and (bad) (bad) mov leaveq rex.RXB mov ja ja pushfq test mov andl (bad) movsb cmc int3 jmp ds ds mov mov hlt add mov sahf data16 fdivrl pop out insl (bad) int loop sub and rex.RX fmull (bad) push mov add lods push jbe rex.WRB in lret movslq push mov mov and (bad) clc emms xchg (bad) shrl lahf (bad) (bad) movabs mov (bad) cld xlat scas pop out or xchg jle lea callq jmpq lcall rex.RX (bad) (bad) callq test movabs rex.WRB add (bad) rex.WXB xchg push (bad) sub (bad) lcall (bad) adcl or sbb rcll (bad) mov (bad) jns addr32 add sub sub rex.RXB rex.WRB test lock sbb add jae push xchg iret bnd jmpq (bad) mov mov test rex.RX xor mov data16 and sbb movabs add rex.RXB rex.RXB data16 repz adc xchg add pop cs xchg movslq cmp (bad) mov adc (bad) (bad) jg pop sub retq cmpsb pop (bad) rex.WB rex.RX rex.WRX popfq add xchg mov hlt xchg rex.X rex.WXB imul jmp push xchg ja ffree sub out outsl mov scas (bad) (bad) jl lods int3 (bad) add and push std jp sbb leaveq icebp icebp push push sbb sub clc jmpq jmpq bt stc imul bt cmp add jmpq jne bt cmc clc clc movb test bt cmp test jle je bsr sar adc sbb push and inc mov sbb adc sub not jmpq rex.R mov xchg mov mov rex.WRB pop (bad) jge rex xor adc (bad) mov add retq jge xor and (bad) jmpq jne fcomi (bad) pushq fsts rex (bad) lcall ljmp mov push lahf jg out cmp pop mov sbb (bad) and (bad) andl (bad) movsl cmpsl xor (bad) je and (bad) push add rex.WRX sub or (bad) lods xchg outsl mov cmpsl test xchg jae xchg mov out (bad) scas sub xchg rex.X and movabs add je adc (bad) push xor cmc adc fildl sub mov andl imul outsl (bad) int3 cmp (bad) (bad) (bad) jg and (bad) (bad) fucomip loopne,pt js divb (bad) mov rex.WX lea or (bad) scas clc rcrl es xchg loop (bad) cmpsl jle rex.W repz add test rex.WRX mov xor adc mov (bad) mov mov mov push or cmp cmc out mov sub movsl test cli xchg (bad) callq std in jp divb lret stos add pop rex.RB lock (bad) std sub xchg movslq cmp xchg cmp or imul stos orb (bad) std test mov lahf in xchg and (bad) outsb jbe out cwtd jmpq jmpq jae jmpq jmpq callq jmpq jmpq jmpq test jmpq jmpq jb stc clc cmpb jmpq cmp callq popfq adc fnstcw gs jno (bad) fwait (bad) adc cmp and fcmovnu and loope mov pop movabs adcl (bad) repz mov (bad) or negl clc mov xchg push or rorb jle mov mov mov enterq mov std add rex fcomps icebp shll rex.RXB push loopne and push mov or scas fcompl imul pushfq xchg add mov mov fldt xchg xor sbb notb rex.B sub test pop and orl retq (bad) int3 (bad) fisubl jns mov out add outsl insl sub in jmp xlat cs (bad) mov stos adc nop jne pop adc (bad) sub test sbb push adc xor adc sti jl add mov mov (bad) cmp add adc (bad) or (bad) jmp sub mov movabs add add add mov push adc adc movsl (bad) test jb (bad) jl rex.RX rex.WRXB cs outsb adc (bad) movabs cwtl mov xor (bad) xchg out stos adc rex.R (bad) mov push lea adc test ds retq repz xor cwtl (bad) rex.R (bad) cmc add or mov fsubl addb push mov sbb adc cmpsb pushq and (bad) fbld (bad) jbe mov jp (bad) mov mov movsb out or (bad) mov xor push (bad) loopne in movabs out jge push cmc (bad) clc and xor outsl (bad) not (bad) xchg std cmp enterq mov ds mov adc and int3 (bad) mov sbb in mov pushq sub jmp pop adc (bad) push push clc test rex.WRX mov jne (bad) (bad) idivl lahf lock cmp or lea fbld test push push mov add mov outsb or rolb lock add sbb or mov mov sub adc insl rex.WR in lods rex.WRX lods (bad) negl and cli test adc sbb rex (bad) lock xlat sub (bad) mov jne adc movabs (bad) movsl outsb int adc (bad) repz cli repnz stos xor out adc pushq nop or (bad) repz adc (bad) cwtl fcmovb adc xchg sarb rex.WXB test (bad) loope sti cs sub jb cmp fwait push jnp pushfq (bad) and or (bad) xor (bad) (bad) lahf pushq mov in xchg (bad) rex.W (bad) adc rcll enterq addr32 or or rex.WX (bad) jnp (bad) (bad) adc and xchg xlat fsubp movslq repz sub sub lods sub xor xchg fsubrs rex.X rex.WR or xchg xadd mov clc test xor adc ljmp icebp xchg cwtl fnstcw mov mov rex.W push sub or push sarb rex.WRXB repnz adc jg xchg add mov lret movabs mov (bad) (bad) jne js iret (bad) pop xchg in lock (bad) adc rclb (bad) gs (bad) (bad) adc and mov push je xchg or int3 insb test adc mov xor lock xchg rex.RX xlat sbb adc movslq rex.RB fisttpll movsb in (bad) jbe ficomp in mov adc loop and enterq fmull rex.X adc mov and loope mov rex.WRXB je or retq push (bad) pop rex.WR icebp (bad) jrcxz test loopne imul in ds std clc add loope (bad) stos push rorb (bad) pushq or lods pushq xor jbe fldl (bad) sub (bad) enterq faddl adc mov push mov or mov rex.WR shll jg clc enterq jbe ja leaveq xor iret loopne clc incb int push enterq scas (bad) jg sbb ficom jnp pop sti mov callq mov add jl (bad) mov mov adc mov decb adcb pop cmp ror pop rex.WXB jl,pt cmp adc jmpq hlt (bad) sub rex.WRB sti stos out mov or movsl (bad) add sti adc outsb repnz adc test rex.WRXB add pop adc xchg data16 lret sbb rex.WRX (bad) data16 loope lods (bad) add jle imul mov rex.RX (bad) adc cli jg lock and mov jle pop pop and (bad) xchg decl and insb cs sti (bad) and mov adc adc adc jae or fs adc repz push xchg pop jrcxz imul psubsb iret (bad) adc in rex.WX and adc xchg or std xchg movsb (bad) fistl add lods lods push lock sbb rex.WXB sti rex.R enterq adc je (bad) pushfq fild push push out rclb mov mov fsubs mov (bad) repz fimul mov sbb data16 sbb pop clc or test neg or pop adc lea test rex.WB nop sub repz push fstpt xor iret rex.RB repnz mov xlat adc jle add cmp cli xchg xchg fidivl adc js xor in pop pushq (bad) sbb jrcxz cmova push xchg test jbe repz adc mov ja cmpsl nop sub push lods rex.WX and movsb xchg xchg xorb outsl rclb callq push iret xor (bad) (bad) movntq callq (bad) (bad) out and es cmp rex.WR rex.RX (bad) push test adc rex.XB retq xor (bad) xor rex.B (bad) lock out jb jne (bad) xchg adc rcrb jge incl andl cmp xor adc adc out adc jno sbb (bad) lods insl (bad) pop test (bad) push push int3 sub (bad) pushfq lahf lret stos sub push repnz mov callq and (bad) mov vmovsd push nop (bad) jg lods insb jo or adc addr32 (bad) lret sbb clc add add or (bad) xor mov test jne in fwait cmpsl jl (bad) pop int3 (bad) or callq test sti pop jl jbe rex.RX movslq adc std scas rex.X lock sub mov out rex.RX je ja pop outsb scas push je adc andl (bad) add push (bad) cwtl test (bad) rex.RXB rex (bad) test (bad) adc (bad) push icebp pop notl es (bad) jns sub cwtl push xlat adc or adc or mov push mov fistpl fidivrl or pushfq xchg adc fdiv rex.WRXB ss sbb rorb or fwait test fcmovnbe adc emms (bad) sbb mov divb (bad) jge (bad) retq xchg (bad) jne mov pop int3 jo mov movabs out in loop add ja rex.X add adc and cmp adc rex.XB xchg retq lods lret rex.RB clc stc rex.WB mov popfq xchg sub rex.WRX xor (bad) (bad) in rex.W rex.X adc mov xchg and xchg adc xchg pop (bad) add xor pmullw cmpsl ja cld rex.WRB xchg xor adc mov push xor xchg jle lret gs mov (bad) cmc cmc vunpcklpd push push movsb xchg fdivrp push mov rcl cmc push adcl gs sub adc xchg fxtract (bad) test push lea (bad) mov (bad) mov (bad) cli add movsb (bad) mov adc xor je xor xchg fdivp adc pop imul cmp movsb xorl stc push rex.RXB sbb adc (bad) lret (bad) mov in add and (bad) xchg rorb je (bad) xchg xchg out retq stos lock jl push xchg js hlt je cmpsb sub mov add xchg je (bad) addr32 mov (bad) cld or sub add adc (bad) jo xor mov push hlt xor push es (bad) mov addr32 (bad) rex.WRXB cltd or add and std fdivs add (bad) and jle (bad) in cmp out jbe retq fcomip or add divl sub movslq or jrcxz or cmp movabs adc fnstsw xor je (bad) mov (bad) pop loopne mov (bad) pop hlt (bad) lahf jnp movabs test lods jnp add lcall xor adc pop xchg addl adc rex.R jae rex.R loopne xchg nop (bad) mov (bad) in mov in addb mul xchg pop (bad) mov notl (bad) jbe mov (bad) div iret rclb jmp or (bad) (bad) (bad) ja divl in rex.XB lret lcall or out (bad) mov je mov loop rex.WR rex.XB (bad) movhps (bad) pop (bad) mov push rex.XB rex.RX divb rcll xchg rcl (bad) not adc or mov rex.WXB rex.WR xchg mov or xchg xchg xlat repz adc rex.W push push sub (bad) jle je pop (bad) jp pand lret (bad) mov jnp rex.WXB out xchg mov adc push rex.WRXB shl xchg xchg mov rex.XB (bad) push (bad) out rcrb push addr32 xchg (bad) hlt (bad) xlat xchg out adc out (bad) unpcklps rex.R rex.WB idiv or in (bad) mov in pop rex.WXB (bad) xorl shr movl add lret rex.XB xchg maskmovq adc xchg je test xchg cmp mov andb xchg rolb mov sbb or pop rex.WRXB jae xlat lods xchg (bad) orl (bad) adc pop xchg mov (bad) jae add (bad) cmpl mov icebp add test repz sti pushfq (bad) rex.WR jnp jrcxz adc jl ss xchg cmp push xchg rolq mov rex.RXB mov pop (bad) rex.WXB pop addl xchg movb xchg jg (bad) movslq ja jae ffree xchg mov retq test gs cmp xchg jle or or (bad) xchg rex.RXB xchg rex.WRX in scas je cld adc std fucomip in xchg movb xchg or shld add iret ja rex (bad) outsb (bad) cld insb imul out mov sahf rex.WRXB outsl (bad) (bad) scas test retq (bad) mov lret je (bad) jg xor movsb mov rex.WX or (bad) icebp movabs rcl xchg sti insb sbbl retq in xchg rex.R je add (bad) ss (bad) mov pop push data16 pop mov add mov jg (bad) push xor mov add jo hlt lods movslq iret (bad) (bad) cmp rcll push sbb mov in rol lret rex.WRXB shrl mov pop xchg sub xor imull nop (bad) roll (bad) xor test lea sbb outsb in jbe jb icebp cmp (bad) cmpl (bad) push xor xchg icebp push rex.XB jl repnz lods andl (bad) (bad) xor (bad) jl,pn scas (bad) movabs sbb ja movsl (bad) jle sub xchg (bad) mov pushq xor je iret outsb in xchg (bad) je and sti cmp lret cld mov (bad) lahf xchg test ja rex.WR jrcxz int outsl jno (bad) (bad) pop std mov add mov repnz xorl scas cmpsl pop jle lods movslq add repz jb rex.RXB add xchg stos loopne xchg mov incl lret insb rex.RX in rex.RXB xchg in pushq rex.R out test or mov xchg mov lock (bad) (bad) cmp sub push (bad) rcl popfq mov rolb push cmp movsb enterq mov mov rex.B mov adc lods push (bad) rex.RB fdivrp xchg mov cmc rex.WB cwtl movabs nop notb mov xor xor movsb adc sti and cmc mov jrcxz and xor mov mov xor cmp add stos iret (bad) iret out rolb rex.WB repnz pushfq ss pop or push lahf insb jnp (bad) push add or xlat jne roll (bad) jge nop xchg (bad) xlat fisttp repz push cld (bad) add loope mov (bad) sbb movsb (bad) mov es pop xlat repz cmpl test xchg je mov jp or push lea int rex.WRX xchg out fwait in (bad) repz hlt hlt ffreep cwtl iret and mov adc fild (bad) adc mov (bad) jmpq add sub cmp in (bad) mov jno push test jb jbe mov and clc (bad) cli (bad) mov mov or sti testb push (bad) (bad) sbb xchg pop rclb mov mov or cld pop lock fnop (bad) rclb mov lods test movabs cmpb adc pop pop push push adc cmp xor adc sbb adc adc (bad) sti div adc (bad) xlat rcll mov scas stos cmpsl movabs cmpl jae outsl imul pop push push adc (bad) cmp xor (bad) sub and sbb fwait pop fs hlt (bad) rex.WR or mov xchg jbe (bad) callq nop add repnz fmuls (bad) fcmovbe rorb sbb lret or or (bad) js in adc (bad) mov stos rex.RB cmp mov (bad) or adc prefetch and orl adc or or or sbb xor (bad) xor rex.WRB lret adc and rcll int3 jns rex.WB adc or div out (bad) adc (bad) ror lret retq mov scas stos adc xchg xchg mov jp jb pushq data16 pop pop push push rex.WRX rex.WX xor sub (bad) adc or cmc icebp in jmpq (bad) ror leaveq adc mov lods test cltd xchg xchg lea jns jno imul adc xor and adc (bad) xchg mov adc scas rex.WXB mov movslq push addl fisttpl imul sti js adc cmp adc jae rex.WRXB fstpt sub xchg or xorl xor mov rex.W cmp xorl cmp jmpq jne mov fld jae sub ja adcl jnp rex.WXB mov xchg movslq (bad) je (bad) adc mov callq (bad) (bad) jae jmpq cmp rcl pop and xchg test mov cltd sbb jge lock out pushfq lods out (bad) orl mov push nop mov je sbb ror mov or iret pop imul mov data16 rex.XB xchg (bad) (bad) xchg xor pushfq jae in jnp rex callq jo decl int3 cmp jl jg lods (bad) or (bad) rorl xor (bad) jbe mov add xchg in rex.XB cmp xchg xchg pop (bad) lret lock movslq out jmp cmpsb ja sub fisttpl xchg rex.WXB sub test ss (bad) iret xchg jb mov rex.WXB pop xor insb repz enterq jg cltd test vmovhps cmp or lret xchg mov xor xchg cmp pop jg xor fistpl jne pop sub (bad) (bad) lahf and jl and in sbb mov xorb pushq ss jae (bad) lock loopne rolb and mov xor (bad) (bad) sbb xchg rex.RX fwait (bad) cwtl in ror retq insb mov hlt lahf pushq in nop and int3 (bad) (bad) push mov test fdivrl pushfq xchg nop rex.WRXB (bad) mov cmp je cmpl rex.WRXB adcl xchg lret ja out (bad) jge lret xchg cmp lods jle lret je mov callq or mov (bad) jbe mov (bad) rex.WRXB xor ja sti mov div (bad) or adc (bad) xor push adc rex.R push jo hlt movb rex.WRXB (bad) out (bad) fdivrp in hlt notb add (bad) and rex.RB push mov jne test mov (bad) rex.RXB (bad) (bad) (bad) in in xchg rex.WRXB xor movsb es mov push cmc test xchg mov neg sub not push cmc (bad) lea push (bad) movsb push fdivrp (bad) mov div xchg pop rolb mov (bad) xor xchg fdivrp mov not xchg cmc movl clc mov (bad) jbe mov xlat cmc push test push xchg cld mov fisubr movsb xchg (bad) (bad) add rex.WR je hlt (bad) movsb push sbb stos rex.RB js lret xor adc retq push push scas rex.WRXB (bad) repz xor insb movslq adc xchg (bad) rex.X or (bad) js cld jrcxz mov (bad) sub retq lock xor in pop sbb pop out repnz and out andb xchg (bad) imul (bad) push sbb decl xchg test std jno jno (bad) rex.WXB fbld adc stos lea (bad) (bad) rex.WRXB xchg ds or imul jmpq ja pop scas sti push pop sahf mov jge rex.WRXB mov xchg callq clc cltd (bad) (bad) jbe cmpl (bad) in push mov addr32 movsb jnp rex.WB rex.RXB (bad) push cld mov cltd push rex.RX mov (bad) pushq mov push movslq rex.WXB icebp cmp xor js xor lea push in (bad) (bad) rex.WRXB rex.WRX (bad) mov mov rex.XB rex.WRXB (bad) xorl (bad) push jne callq rex.XB movabs fmuls in mov pop xchg (bad) sub pop (bad) jb xchg cmpsb flds jge mov adcl fs loopne rex.WRXB mov (bad) (bad) icebp pop (bad) sbb xchg gs addr32 (bad) mov addr32 vphadduwd xchg (bad) addr32 (bad) not movabs rcr jo push out orb jmpq mov mov rex.W rex.R push lods jnp decb repz (bad) mov rex.R (bad) pushfq lock (bad) in rex.WRXB (bad) fildll notb rex.XB push sub mov divl (bad) rex.WXB hlt (bad) leaveq mov xorl callq xchg xlat loopne retq push (bad) cli xor (bad) or rex.WR or jmp or imul push cmc xor xchg xor mov insl (bad) je outsl rex mov (bad) jbe fistl pop test shll (bad) rcl leaveq in (bad) retq jo xchg jrcxz sar cmpsb jl int3 rex.RXB rex.W (bad) testb (bad) insb repz xchg mulb sahf jne rex.WRXB cmp mov (bad) mov push ficompl mov hlt (bad) lock rorb adc (bad) xchg lods xor shr jne xor mov rex.WX in add retq (bad) not mov (bad) fcmovbe mov adc or mov shlb stc scas divl mov movsb or push cmp adc xlat xchg rex.WR (bad) mov xor cmpsl (bad) out pushq xchg rex.RXB mov (bad) cs push (bad) (bad) cmpsl (bad) out decb cmc scas xchg pop (bad) out mov (bad) mov (bad) push idivl (bad) sti xor dec xchg rcl rcll (bad) (bad) test cmp scas push (bad) push int3 out add adc mov jne add rex.RXB mov cs rclb movabs xchg sbb hlt (bad) iret xorl xlat add or (bad) add (bad) movabs jne (bad) (bad) fcomi (bad) scas push (bad) push cmpsl (bad) add or cmc incl push callq nop imull or jrcxz xor mov xchg pop (bad) or nop (bad) xchg push xor (bad) jne iret mov callq rex.WRX jbe nop mov push (bad) out lret not pop xchg hlt (bad) (bad) rex.WB addr32 (bad) fisub cmpsl push push fiadd out push callq xchg (bad) hlt scas add (bad) (bad) rclb rcrb push (bad) (bad) imul push xchg xchg movabs mov (bad) push fcoms or mov xchg or jo (bad) (bad) scas adc rex.WR xor cmp jbe (bad) ficom repz fsubrs xlat (bad) (bad) mov movsb in lods or (bad) cmp adc (bad) rorl xchg in push movabs (bad) fcmovnu jo insl sub repz popfq (bad) lods fcomip (bad) ds je xchg (bad) mov imul adc cli (bad) hlt adc xchg test cmc push notb (bad) (bad) cmpsb rex.RX lret adc jo hlt shl leaveq (bad) jg xor adc adc mov hlt mov fcoms jae xor test mull sti xchg shl sub xchg (bad) testb (bad) adc repz cmc (bad) (bad) mov (bad) ss (bad) lret clc pushq gs mov mov (bad) movabs cmc add xchg in pushfq (bad) (bad) (bad) je and rolb lock mov je repnz xchg imull cmp testl rcl mov mov int3 jle lret adcb movslq jrcxz (bad) mov add (bad) bnd push test fild xor (bad) (bad) mov fwait add push xacquire ja pop (bad) xchg add xor lret mov nop xor orl retq icebp sbb and rex.B test scas sbb movsb or movsl xor imul push mov rex.WB mov mov push rolb adc cld enterq clc mov adc xchg adc adc iret rorl push test rex.WRXB icebp adc rex mov (bad) (bad) rex.XB std lahf out sbb push lahf out outsb lahf out mov mov notb adc clc xchg (bad) push enterq (bad) or xchg pop or push rolb adc adcb decb push push bts (bad) push cwtl push mov sbb xor jg stos stc mov mov movabs repz mov adc fldt jmp (bad) movslq xchg (bad) and and sti rex.WX push rex.WR int3 rex.XB xchg jrcxz mov (bad) in cmp rex.RXB loope leaveq cmp xlat pushfq and cltd or flds xlat lods add push mov addr32 mov pop cmpsb rex.XB rex.WXB out push pop ss (bad) jae rex.WXB (bad) and (bad) pop sbb xchg testl jl andl (bad) add movslq addb rol sub push rex.WXB std jg push lahf and loopne rex.RXB sbb outsl mov mov mov sarb insb fdiv imulb (bad) mov xchg mov sti addr32 jns fs fisttpl mov jrcxz cmp mov callq push (bad) jb mov frstor jnp jae sbb cli out repz rex.R mov rex.RB (bad) rex stos (bad) jrcxz or rex fisttpll movsb iret sti or mov add cli pop and jnp sbbl ds insb and out rex.RXB lods (bad) (bad) (bad) sbb fwait imul nop test movabs or sbb (bad) xor xor insb lea add pop xorl ja add xchg (bad) or mov cmp and fstpt (bad) testb movsb xchg pop adc repz callq (bad) adc push push xchg mov cmp es sub bswap rex.RXB pop pop sbb callq xchg (bad) lret movslq rex.WXB int3 movabs cmp jl repz mov (bad) scas adc movabs rex.RXB movsl xchg out xchg xor std fiadd pushq xchg rorl sub leaveq test fstpl (bad) mov adc shlb xchg and insb or mov adc lret in retq push (bad) icebp mov cmp rorl mov cmc negb (bad) (bad) pop cmc jmpq jmpq sub (bad) in push rorb xor pop mov icebp and notb xlat lea outsb (bad) callq popfq xchg or xrelease adc imul rex.X nop add add flds jg xchg adc cmc out repz enterq in (bad) mov pop jb cmpsl lret xrelease mov xchg ficomp hlt subb in adc rex.WRXB out cwtl gs mov xorl rex.R rex.WXB pop jo movl mov jo imul scas (bad) movsb lahf (bad) scas rex.WR jg rex.WXB mov rex.R clc fs test (bad) lock jg lods iret enterq push rex.WX repnz sbb jmp rex.WRXB iret sbb cmp jrcxz xchg push xor xor xchg push (bad) cmp adc (bad) jo out pop (bad) and (bad) pop sahf sti pop scas out stos push outsb adc movabs js mov mov rex.R rex stos xchg outsb fwait jo out sbb out mov add pop test push outsb iret jrcxz rcll push stc pushw add sub test clc (bad) out pop (bad) ja adc or jmp cltd xchg push cs sbb (bad) (bad) (bad) mov repz (bad) fildl rex.WRB add sub and jg mov jne pop icebp lret repz rex.WXB xchg adc xchg outsb lods movslq in rex.X mov xchg xchg mov rex.WRX mov repz rex.B mov rex.RX xor je jrcxz ds repz sbb fcom je xchg rex.WXB (bad) jo enterq jp xchg (bad) push (bad) cs mov (bad) mov subl mov add and mov pop mov pushq jno lret push or push imul rex.R iret xor or addr32 (bad) in (bad) test test pushfq adc adc add sub mov iret lret popfq mov (bad) mov repz rex.XB leaveq cmp jns xchg (bad) and xchg rex.RX rex.XB cmp outsb sbb mov sbb (bad) fadds push jmpq add (bad) mov jrcxz xlat (bad) cltd rex.XB pop popfq rex.WXB enterq repz jrcxz rex.WB adc insl nop (bad) mov adc (bad) or pushq mov mov (bad) scas addr32 (bad) cmp (bad) sub jne mov movabs adc pop js rex.WR rex.W leaveq scas (bad) (bad) rex.RB rex.WRXB ffree adc je (bad) cmp divb or jnp xchg add rol out lods jmp jo in idiv mov or sub push mov xchg pop js sub mov or imul mov or repz cmp push js jge xlat lret ficom push xchg mov mov test ja mov or (bad) rex.WRX mov jg xchg (bad) js rex.RXB rex.WXB rex.WRX (bad) ja push xor (bad) mov pop mov mov mov (bad) (bad) mov ror pop loopne test rex.WXB mov cmpsl pushfq xchg jbe pop (bad) add andb rex.WXB or in jrcxz cmc fs scas pop ss add orl mov iret rex.RB rex.RXB xor addb rex rex rex.WX insb xor mov xchg cltd (bad) stc (bad) insb jne in jb jp rcr jnp gs mov push xchg add repz test jrcxz jmp xacquire jmpq (bad) lods sub rex.WX mov mov jrcxz (bad) enterq (bad) callq sub jg xor mov imul out xor fndisi(8087 adc rex.WRXB and int jl testb mov and (bad) retq shl pop adc push fcomi int3 retq fucomip mov outsl rex.WXB mov imul repz fistp ror sub mov test adc xchg fs repz mov jae pop xchg mov pop (bad) cmc movabs imul push rex.W (bad) movsb push fdivrp (bad) mov div push test push (bad) movsb push fdivrp (bad) mov divb xchg xor xchg fimul cmc jbe push cmc mov push cmc mov rolb jne (bad) (bad) xor (bad) fdivrp (bad) mov (bad) xor hlt lea (bad) fdivrp xchg mov (bad) je jne (bad) (bad) xor movsb push fdivrp hlt rclb push cmc xchg test xor pushq fdivrp xlat mov rex.WRXB mulb fimul cmc mov push cmc mov (bad) rex.WRXB xor je sti (bad) mov lea push cmc movsb push fdivrp mov not xchg cmc je jne push movsb (bad) fdivrp ja not xchg (bad) xor movsb (bad) fdivrp (bad) mov (bad) hlt (bad) jne (bad) mov movsb mov sti (bad) mov mov adc sti je (bad) divb (bad) xchg rex.WRXB xor xor nop out push mov (bad) div mov adc orb hlt adc (bad) mov sbb (bad) mov enterq xchg push mul fld xor rex.R lock rex.WB mov xchg mov push (bad) callq and mov push add mov test (bad) and clc rex.WB rol pop movsb in fwait insb mov xor push data16 pushq idivb pushfq mov sbb sub sub mov rex xor (bad) sbb add (bad) (bad) repz sub (bad) sbb callq xor in movslq (bad) (bad) rex.WX xchg (bad) int3 movslq (bad) mov nop add je,pn (bad) xor in (bad) mov (bad) vmread cmp out (bad) mov movsb sbb cmp lock test xor cltd retq adc notl xlat push cmp rcrb (bad) adc addr32 (bad) (bad) lea sub clc jp jae jno sub xchg adc retq jbe ror xchg adc add incl jp sbb (bad) in (bad) rcrb rex.WB add rex.XB adc fsubs int (bad) xchg or sbb ja or cli hlt iret (bad) sub scas adc rex.XB fnop mov imul int3 xchg adc movl xchg add rex.XB rex.RB (bad) repz xchg (bad) insl pop popfq and push push mov xor push rex (bad) xchg cmc divl enterq xchg out (bad) (bad) xchg (bad) fisttp ljmp imul mov enterq sub stc (bad) sub js pop out fildl rex.W insb jo adc (bad) imul pop xor loope mov adc (bad) pop jno cmp mull test movsl push icebp jg insl outsb or (bad) jae pushfq (bad) (bad) (bad) stos push (bad) push rex.WRB rex.WRX mov stos mov pop shll rex.WXB mov add pushfq xor repz adc out movabs rex.XB cmp add xchg pop mov (bad) out (bad) rclb gs (bad) rex.WRXB imul and xlat mov outsl pop xchg push (bad) cs xor jae or (bad) leaveq xor xchg mov sub insb (bad) rex.WRX or callq jae add or hlt push imul rex.WRXB mov es shrl outsb mov (bad) mov cmc mov cmp jne movslq scas pushq movabs or sti adc subl rclb (bad) xor adc repz callq add sub cmp rex.WRXB rex.WXB mov xor int3 pop xchg add sbb (bad) mov xor pop rex.WR (bad) add in movabs mull pop xchg mov push (bad) (bad) xchg (bad) (bad) pop mov pop xchg repz nop xchg jmpq sub (bad) xlat cmp fwait jmp movabs fnstcw jo lock sub push xchg lret add rex.WR xlat je out xchg xchg lret sub lahf mov pushfq xor insl pop xchg pushq xchg mov in mov ja je (bad) push in rolb sbb mov mov lret mull (bad) mov out and cmp lods (bad) jge adc jnp rex.R ss adc nop int test xchg (bad) (bad) push ja insl popfq xor lret rex.WRXB sti rex.XB icebp xlat rex.WRXB xchg movslq mov (bad) cmp (bad) repz and xchg rex.XB jno outsl xchg mov iret add jmpq iret pop mov adc divl (bad) ja andb mov rol scas hlt jp xor fstpt push jno jp push nop sahf iret jae sub repz xchg movabs push adc mov jmp (bad) (bad) lret hlt adc or int3 or (bad) cmp cltd jg jrcxz adc sub (bad) cmpsb cmp (bad) (bad) icebp mov sub int3 xchg pop movslq pop mov sub pop mov stos mov sti push cmp stos rcll xor jns js mov cli sbb mov (bad) (bad) lahf adc cmpsl fwait (bad) repz iret push pop icebp cmpsl pop mov xor cmp out (bad) mov pop adc rex.WB sbbl icebp lahf cmp mov ja pop rex.RX rex.WXB movsl js mull outsl xchg pop sarb rex.RXB rex.WRXB (bad) mov mov (bad) jle lods (bad) mov rolb xchg (bad) xor lods gs iret mov retq ljmp (bad) cmpsb sub out (bad) sub fmul sbb (bad) rex.WR rex xchg xor rex.WR lea jg cld xor shll fist clc xchg test pop pushfq add loop fcmovnbe rex rex.R gs movabs jo cmp pop test (bad) je sbb and (bad) retq test or (bad) jne pop jmp roll cmp cmp addr32 xchg or xchg adc mov xor out jo rcll outsb retq cmpsl (bad) ds adc add movabs jp testb retq rclb and xchg mov gs mov mov lahf fwait test stc nop je fidivr cmc xor xor adc (bad) mov xchg cmp js movabs fstpt outsb adcb xor rex.WX xchg (bad) stos rex.XB mov fild fbstp push mov (bad) clc rex.RX xlat retq sub xlat lret insb cmc add rex.X or xlat ss (bad) xor in stc xchg out rolb or (bad) (bad) jrcxz retq (bad) xlat ljmp adc pop rex.W mov movabs in cwtl mov rex.RXB jo (bad) lock rex.WR ds xor sbbl in (bad) rex.WXB sbb imulb loope pop mov sbb in mov (bad) add add sub mov or mov rex.RXB fwait xchg mov (bad) int3 js,pt (bad) repnz xor (bad) out fxch (bad) jne mov loop pop (bad) clc lods adc movslq mov mov and and outsb add lret jmpq cmpsb or ja xchg insl in jrcxz rex.WXB rex.W or out xchg mov (bad) incl icebp or outsl sub test cmp rex.RX (bad) (bad) (bad) xchg mov or mov rex.R je addr32 xchg fnop rex.WRXB (bad) mov div addl (bad) rex.R lods (bad) (bad) rex.WR callq pop rex.R (bad) mov retq lretw loopne jl (bad) fsubrl cmpsb rex.WXB xchg rclb int int3 lret push repz (bad) jae loopne jnp mov rol (bad) add popq shrl nop mov rex.RXB rex.RX (bad) fistpl sbbb fsts rex.RX rex.WXB push xlat (bad) add mov (bad) (bad) mov or ds hlt push movsb (bad) sti cmp rex.WRXB xor ss xchg xor add rex.RXB int add (bad) sti (bad) jo (bad) ss (bad) push xlat sub sti (bad) (bad) push (bad) (bad) rcl sbb (bad) (bad) (bad) (bad) notb notb nop (bad) push sbb push callq rclb (bad) jae rcl (bad) adc (bad) (bad) xor xchg (bad) fimull push lea (bad) push xchg movsb je sbb push mov fbstp adc mov push int rorl xor movsb fucom mov in in mov xlat or gs xchg imul adc (bad) cmc xchg xchg mov rex.W pop add pop (bad) (bad) push jrcxz ja cmp movsb xchg sbb xchg lret testl adc in repz rcr sti add push rex.WRB movabs pushfq push test adc or (bad) pop mov (bad) xor (bad) (bad) (bad) test js sbb test xchg (bad) cmpsl xor add fs movsb callq or add xlat (bad) (bad) test or (bad) rcll decl pop rex.X shll add lock mov (bad) nop (bad) (bad) add js movslq mov (bad) hlt rcl mov (bad) mov (bad) xor enterq adc testl out rex.R mov xor push out (bad) xlat (bad) je (bad) (bad) fs mov jle out (bad) je (bad) xchg (bad) roll hlt add rex.WXB rex.B rex.RXB js in ss lods test (bad) movabs add mov (bad) xor rex.WRX je movslq ja xchg rex.R rex.R jl xor lret stos repz lods je xor xlat xchg repz mov xchg (bad) mov xor lret xchg lods xor ja (bad) repnz pop (bad) (bad) ss (bad) test pop shlb ror out mov retq (bad) mov rex.WRB fidivl rex.R hlt (bad) mov ds mov (bad) (bad) mov repz enterq fcom in xor ja (bad) (bad) (bad) testb jne (bad) loope callq (bad) add mov (bad) (bad) rex.R jl hlt adc movsb nop sub loope int je push adc test rex.WRX lock add cs rex.R jne test adc (bad) or movsb (bad) push jge xchg mov loopne lea add fcmovne jo xchg xor loope movabs (bad) adc movabs sbb loop rex.WRB shl or push (bad) movsb ja jo ja sub rex.B jo ffreep and movsb (bad) xor push pushq add (bad) nop out lret movsb push xchg (bad) (bad) mov jle add jrcxz movabs rex.RX mov adc rol fs iret hlt (bad) add xor mov (bad) xor (bad) out out mov add (bad) pushq mov xchg (bad) xchg (bad) (bad) xor lea ja movabs (bad) rex.RXB jo xchg xor pop (bad) cmp hlt mov outsl (bad) mov loope jb jmpq mov fiadd and (bad) ja and ja movsb clc out sub rex.W rex.R addb cmpsl adc mov mulb jno mov xor push cmpsb jo divl or ror or mov sti adc int3 jg nop leaveq hlt rex.RXB xchg mov (bad) (bad) xor rolb (bad) cmp nop add int shlb mov movslq cmp lock mull add fs out sbb add xchg (bad) mov xchg in lock xchg add and sub insl cmp cwtl bnd test mov mov xlat add negl pop lret stos push jge jno adc (bad) int shlb (bad) test push add mov nop sbb sahf orb xor rcrb movslq add push (bad) jge jno adc (bad) int shlb (bad) test fisttp shrl hlt lock je (bad) callq js cs add (bad) std loope lock (bad) adc jmp rex.WRB mov mov (bad) cltd adc scas nop adc (bad) cwtl in adcb or (bad) adc push (bad) (bad) test rex.WRX pop (bad) (bad) (bad) test (bad) add shlb (bad) test rex.RX jns movabs int3 xchg (bad) lret adc mov pushq cli (bad) cmp mull (bad) (bad) adc test rex.X mov adc jle (bad) add shr jge jno push pop rcl (bad) movabs push (bad) jge jno loope int stos rolb (bad) pop rcl (bad) movabs or add scas push xchg jnp (bad) (bad) jp add (bad) jae out imul xor rolb push cmp rorl rcrb rolb pushq (bad) rex.RX insb sub xor (bad) test sub rorb callq xor rcrl (bad) and xor shlb mov fldenv mov rcl mov lock cmp stos lahf pushfq rex loop mov lock xor (bad) mov lock xor lock mov lock and sahf xchg lret mov add mov mov mov pop push and gs (bad) (bad) add shlb (bad) test (bad) add or rex.WX mov lock mov lock (bad) lret adc (bad) cmp adc mov pop shlb (bad) test rex.WRXB rex.B loop cmp es mov test fldcw xchg rex.WR push add lock (bad) add shlb (bad) test (bad) rex.WRX pop subb nop add loop cs add insb (bad) and xor pop sar sbb popfq mov jo jno negb add sbb add xchg or test nop int shlb out je mov xchg rex.WRB nop jno negb add cmc stos mov (bad) or jge (bad) jmp in mov loopne jne (bad) cli or lret mov rex.WX (bad) stos ja (bad) movsb lret mov movl xorl cmpsl xor or mov xlat sbb jae pop cmp stos xlat xchg rex xor pop jnp and outsl fsts add pop jmpq (bad) ja lock rex.WB jg int leaveq cmpsb pop mov enterq enterq loopne test mov and rex.XB rex.RXB (bad) ss fdivrl (bad) mov sbb (bad) mov jmpq (bad) lods push pop push mov (bad) add add (bad) (bad) addr32 sbb (bad) stos (bad) jae movabs in lods xchg in jg loope sub (bad) jo rex.WXB mov mov and repz mov icebp mov (bad) rex.B xor or add insb xor push in retq (bad) sub shll mov rex fs out scas mov repz mov fs or fs (bad) or rex pop stos (bad) rex.WB out fwait lret jrcxz pop sub push push cmc xor (bad) loope lock clc xchg repz rex.WXB int jne scas xchg (bad) retq xchg (bad) cld sarl (bad) add loopne rex.WRB mov push adc cmp (bad) (bad) (bad) cmp leaveq vcvtsi2sdl fildl mov loopne mov iret rex.RB rex.WXB pop sub lock mov idiv cmp rex.WRB pop loop hlt fstpl adc sar add outsb ljmp jg mov rex.XB subl sub jbe icebp add rcrb xor cs retq push rex.WR adcb rex.WXB in repz adc jrcxz movabs xchg rex.B rex.B rex.WRB and (bad) rex.RX jnp callq rcl imul lods rex.R stos hlt (bad) dec sbb scas adc js mov (bad) addr32 xchg (bad) cmc iret push mov sbb pop lods push jo mov xchg or jnp xor xchg ss retq rex.WR lret not mov test rol leaveq sbb es adc rorb (bad) test stos pop test push mov rex.W xchg or xchg (bad) fadds sub xchg shl in ds jp xchg jg mov sub (bad) cmc mov in cmc (bad) (bad) mov and and je mov xchg retq decb repnz es (bad) rex.RX xor rex.WR cs add (bad) or (bad) (bad) rorb insb mov xor push retq mov fwait pushq lock subb repz movabs mov fistp rex.WRXB or icebp pop movabs mov sub and nop rex.WXB scas (bad) cmpsb cli and cmp pushq push rex.B rex.XB mov (bad) fbstp cmp pop test xchg repnz cmp xchg mov mov mov rex.WR rex.WRXB push int cltd jl fsubp fwait add repz sub fildll iret pop push xchg cwtl in rex.WR icebp movl rex.WRXB imul pop mov loop in cmpsb xchg push int sub or (bad) or jle je or fsubl xor (bad) jmp add sbb sahf push rex.XB fs jno cmp (bad) mov xlat fist (bad) jrcxz sub pushq xor ss (bad) or adc adc out (bad) leaveq pop cmc sbb xchg push jmpq stos cmpsl (bad) jle loop ja mov test pop mov sbb in rex.WR stc sbb (bad) out mov cmp and imul hlt insl pushfq mov jmpq movabs clc mov (bad) je adc mov repz repz fldl mov rdpmc or fbstp test (bad) rex.WX sub mov mov jp mov mov or push rex.RB rex.WR rex.WB stos hlt or mov ror pushfq iret jno fs jo repz xchg sub jbe rex.RX pand pop sti push cmc xchg jae test pop fs rex.X imul ja mov hlt pop cmp int mov push insl repnz add mov (bad) sbb out rolb mov cltd imul xor pop (bad) and repnz rex.RXB (bad) (bad) jo lcall sbb loop callq cli divl jmpq js mov xchg mov scas and mov lret rex.WRX rex.R jrcxz mov mov movabs movabs (bad) cmp mov and pop fs jp rex.RB mov pushq jmp add repz subl je ds in (bad) retq xor test rex.RXB (bad) nop xor or rex.RX nop test sti addr32 xor mov movabs cmp or insl test popfq repz int xlat in (bad) mov loop hlt jrcxz mov cmc (bad) (bad) rex.R mov lock rex.WRB mov insb xlat fiadd pop imul xor xor in rex.WRX in subl movsl (bad) add addr32 mov incl cli test xchg loop add out rex movsb es adc sbbb (bad) mov jrcxz rex.RB movslq mov adc (bad) outsl icebp iret or mov jp cmp jns fnsave lahf (bad) mov cwtl xchg mov pushfq jbe (bad) and (bad) hlt mov repnz push (bad) jl push xchg lock lret ss mov or imull rex.X mov xchg test rex.XB xchg iret xchg mov lods movabs rex.WRXB sti iret sub je jmpq xlat iret mov xchg mov out lods int3 je cmp rex.X (bad) and jrcxz jae jmpq adc inc add and (bad) scas sbb test pop sub fwait cmpsb or retq sbb movabs (bad) sub xchg (bad) mov rex.WB repz not loop lret pushq out repz xchg rex.RXB imul movabs xchg data16 pop xlat notb jo mov mov mov mov jae movsl out jg pop add (bad) cmp (bad) rex.W xlat cmp movabs mov cmp lret jge repz mov (bad) jmpq (bad) mov adc ja jg pop leaveq cwtl mov insb jrcxz add sbb retq add sti push lahf sbb insb rex.WB xchg mov movabs xor adc rex.RB repz rcl (bad) jg sub cmp (bad) rex.WRX sbb add (bad) (bad) (bad) (bad) and movabs mov jo rex.WXB push fildl fnstcw cmp iret (bad) add cmp cltd movsl adc fidivl hlt loop (bad) add mov push jge data16 (bad) mov jmp (bad) int3 div xchg (bad) mov outsl xor int imul (bad) xor mov sub rex.R ss rex cmc jle (bad) (bad) jrcxz mov lea jno mov xchg mov js xchg pop (bad) (bad) imul vpsllq mov (bad) rex.WXB xchg (bad) adc adc stos jne (bad) (bad) (bad) and retq xor jmp out idivl leaveq mov adc insb leaveq loop xor pop add add rex.RXB jp adc jmpq xchg (bad) jrcxz (bad) rex.X rex.RXB orb add (bad) mov nop fldl push movabs repz rex (bad) cmp sar mov xchg cwtl out add xor int movslq imul or push xchg (bad) (bad) mov lea add rex.WR add rex.W rex.XB cmp rex sbb xor xor lea rex.RX (bad) nop sub mov addb sub sub movsl (bad) sub mov sub xor es jno mov iret (bad) in movabs sub repz rex.WRX sub sub sbb out shlb cmpsl rex.B cmp sbb (bad) loop push or callq xor xchg and (bad) lods movabs andb jle int sbb (bad) and data16 jns int3 pop rex.WRB mov paddsw jo jnp rcll pop mov (bad) cltd scas test cltd mov jl add xlat adc jo repz ja retq sbbb (bad) (bad) rex lret add jbe (bad) (bad) rex.WRXB push adcl sahf (bad) add repz in rex.WRX and icebp sarl rex.WR (bad) mov mov clc pop fs int add mov xchg cmp mov mov (bad) sub test or ds adc (bad) xchg sarl xchg (bad) sub es (bad) iret mov rex.RX iret mov fucomip iret stos out orl rex.RB rex.WR jge (bad) xlat (bad) (bad) cmp mov (bad) in rex.WR adc xor mov pushq in mov in mov movslq adc pushfq (bad) cmc xor rex.R fcoms testl sti sbb in movabs mov mov mov insb movabs test mov subl mov xchg (bad) (bad) (bad) mov xlat mov cld je jo callq or sub enterq jge jrcxz push xchg (bad) test xchg (bad) out (bad) mov fs loopne insl (bad) xchg stos sub repz mov xchg imul (bad) enterq pop cli insb pop test and (bad) int3 sarb (bad) (bad) push (bad) (bad) outsb retq pop xor callq (bad) jrcxz lods mov push fmul sbb sub pop out retq (bad) rex.WRB sbb mov rex.WRB rex.WX (bad) mov cmp mov rex.B and or and hlt imull pop sub rex.WRB repnz mov (bad) push (bad) lock add sbb (bad) adc jo,pn or (bad) xchg fdivr repz mov stos push rex (bad) outsb shr loop cmpsb in test test sahf out (bad) ja mov (bad) mov cmovl (bad) pop sub (bad) insl je mov or fcmovnbe jrcxz pushfq push imull lods jae std xor add jae jno lea jg int3 jae (bad) pushq cwtl xlat mov and rcrl xchg pushq (bad) or rolb adc sbb and addr32 callq loopne fcoml fsubrs (bad) sti push rclb jb add shr cmc callq sub adc xchg (bad) out lock in fs addr32 movsb test mov es repnz psrld or (bad) add mov (bad) int3 lea mov add rex.WRX repnz rex.WRB imul shr mov add outsb repnz int3 insl test lods add cs int3 sub sar mov add jle jg jge mov mov (bad) int3 cmp rcr mov add pop repnz int3 pop test popfq add (bad) repnz int3 sbb rclb mov add xchg repnz int3 xchg test not rcl mov add push repnz int3 push test div (bad) repz add jb jae jno mov mov mov mov xor repnz xor mov add (bad) repnz test test add rex.X repnz test mul shl mov add (bad) movslq (bad) test mov and and adc lret ror (bad) xchg leaveq cs (bad) xchg rex.WX cs (bad) xchg rex.WB cs (bad) xchg (bad) cs (bad) xchg jmpq xchg pushq add (bad) xchg imul imull xchg test xchg sub add (bad) xchg sub add (bad) xchg cli cs (bad) xchg stc cs (bad) xchg jp add (bad) xchg jns add (bad) xchg mov xchg mov xchg cmp add (bad) xchg cmp add (bad) xchg fisubrl add (bad) xchg fldcw add (bad) xchg pop cs (bad) xchg pop cs (bad) xchg (bad) cs (bad) xchg cltd cs (bad) xchg sbb add (bad) xchg sbb add xchg test mov hlt repnz int3 je ja mov mov xor (bad) add test mov or add lock or mov fisttpl xorb in movsb or test faddl adc ror lock lock movabs clc repnz repnz add add rorb clc mov (bad) lock in xor cwtl mov xor cwtl cmc fcompl rcr sbb test int3 (bad) enterq or sarb mov shrb sbb movabs callq cmpsl mov mov shlb (bad) test (bad) mov mov (bad) mov fwait (bad) rex.WB (bad) rex.WB repnz enterq js push out pop mov (bad) cmc lock (bad) sbb jmpq std xlat lock push and adc xchg lock jmp jrcxz cmc (bad) sar out in push scas mov shrb xbeginq (bad) test xor fildl rex.WRB (bad) mov jns add pop (bad) (bad) sub scas test lock (bad) shl mov add enterq test cwtl (bad) mov pushq (bad) std lret lock rex.WXB repnz mov ja cmp (bad) xor add fist mov nop push sbb pop push xchg and je adc (bad) mov mov hlt in std xor mov fistp xchg (bad) push rex.WRXB test int3 mov adc add or mov xor callq jb jbe js or jmpq adc add (bad) mov rcll ss (bad) jp (bad) fadds (bad) xchg add es cmp mov xrelease nop sbb push adc fcompl sar lock (bad) movslq fiaddl push adc mov xchg faddl pushfq and xchg (bad) mov mov adc clc (bad) ss shlb cmp outsl notl rex.WB adc lods lods imul add or (bad) jbe xchg gs sub (bad) cld mov rex.B loop xchg adc jae test adc mov test and sti vpor add int imul sub mov rex.WRX icebp sub mov add mov shrl push mov sub popfq rcll cmc mov (bad) sbb rex.RX adc mov cs fadds or add test callq pop shl adc xchg adc (bad) adc movsl (bad) cld push adc int insb (bad) clc rcrl push xchg cwtl rex.X ds adc rex.W or xor lock sub adc movslq mov adc push imul adc or rex.WRB retq adc adc unpckhps mov adcl ss (bad) adc cltd movabs (bad) leaveq out out (bad) xchg rex.WRX xchg (bad) sub rex.RXB sub adc retq adc rex.RB jae and adc ss lods rex.WXB movabs (bad) loopne and push add add or (bad) (bad) adc rex.X rex.WX pop adc (bad) test popfq lahf mov mov jo (bad) (bad) push rex.RX stc mov adc xchg pop sub addr32 xchg or adc rex.WX (bad) adc sti shrl test add int3 adc sub movslq jbe mov test js (bad) jmp sahf clc and add fcoms mov cli ja adc adc jnp (bad) push fdivrs mov xchg imul (bad) xchg pushq lods adc jnp cltd xor fcompl fimul mov mov jne mov xchg (bad) (bad) mov xor rex.WRB fistl sub in es sbb cmp adc mov test fcomps out or xchg (bad) add xor (bad) ficomp xor jae jmpq rex.WX jmpq es int cmpb in or callq or or (bad) sub add rex.WRX adc outsl rex.WX jp sbb rex.X adc pop popfq stos push and mov mov rex.XB lret jb lock imul mov movabs adc sub ds (bad) loopne rcll nop cltd test leaveq decb movabs (bad) adc cmp pop add scas (bad) (bad) push outsl fcoms jg callq sahf sbb pop (bad) xor xchg add in xchg pop adc or or xchg jl jp adc sti jae test out outsl rcrl adc callq sub jb sahf sub sti jno fcoml and test rex.WX test cmp sub mov popfq (bad) sbb adc rex.WX ss xchg adc movabs rex.RX fsubp sbb or pop or cwtl push addr32 xchg callq sti imul (bad) sbb xchg cwtl fdivl lret push fcmovnu sub sbb mov pop imull or adc (bad) push (bad) notb xlat jns sub (bad) pop movsl (bad) adc and mov adc xchg jrcxz out int3 sbb rex.WXB pop mov notl rex.XB pop pop pop adc mov stc mov out sub mov adc rex.WR lock adc outsb mov jo out rex.WB lock outsb rorb xchg xorps xchg cmpsl in xchg pushfq xor sub mov scas rex.R xor pushq push icebp sti (bad) test mov (bad) or mov cmp loopne push mov and jnp sbb stos (bad) cltd adc popfq mov sbb pushq (bad) adc mov (bad) rex.RXB outsl jb es sbb or (bad) sbb mov sbb out (bad) lock or xchg in jne push or cmpsl adc adc stos xchg fidivl imul sbb xchg fwait push or (bad) sub sbb mov pop hlt stos adc push mov push adc push sbb xchg adc lock adc stc pushq pushfq or mov adc in cmp xchg (bad) (bad) (bad) push and sub pop cmc test (bad) fdivs or std mov push ja rex.W and push fcomps mov (bad) sbb adc xchg ficoml xchg sbb clc rex.WR mov adc push fcmovnbe sub (bad) sbb mov xchg cmpsl mov mulb mov (bad) sbb mov fnstenv (bad) adc cmp sub ja fistl hlt (bad) lock mov pop (bad) mov test pop adc push jmpq adc (bad) stos adc push pop je adc idiv ljmp jbe sub int3 push (bad) adc push jrcxz negb mov outsb pop xlat push cmc rex.W sti sbb rex.WB sahf (bad) add mov out rex.WRX in adc neg adc movsl (bad) adc sbb (bad) rex.R adc sub adc nop scas rex.WRX cmpsl mov stos adc hlt xor out mov enterq or div sbb mov mov rex.RXB adc sbb (bad) adc adc je push xchg cmc mov movabs fadds sbb mov movabs stos pop loopne push movabs (bad) movabs pushq adc rex.WX (bad) push adc callq push pop in xchg (bad) adc or pushq jmpq sbbl ja mov leaveq add or pop rclb (bad) jrcxz stos jle sub sbb out sbb cmpsl adc rex.WRXB rex.W xchg insl pushq lock je jle adc xor fs cwtd (bad) pop rex.WRX xor cld in pushq adc stos push mov adc jae cltd roll (bad) jne (bad) loopne clc adc lock lret out or push imul cld retq jno jmpq sub mov adc cwtl (bad) movabs jge fdivl insl (bad) jl pushfq mov adc rex.WRB push adc adc (bad) push (bad) (bad) adcl js rex.WR cmc mov sti rcll add hlt (bad) sbb (bad) (bad) sbbl (bad) and test es or test adc adc clc mov adc sub adc fistl sub (bad) sbb pop (bad) adc fdivr test es lret adc pop stc or pop mov (bad) mov adc subl bnd jmp lods and (bad) sar rex.X (bad) and mov xchg add (bad) (bad) fwait mov fnstsw stc push in adc xchg rex.RXB rex.WXB and mov cmpsb data16 stos pushq sub sbb fistpll rex.WR jrcxz (bad) adcl repnz ffree sti notb pop enterq stos cmp int3 push rex.WR or mov adc xchg lods push movabs iretq jp (bad) push adc mov test adc movsb rorb fist (bad) (bad) jmpq xchg mov xchg mov test cmp mov retq repz pop add jne cmp and (bad) rex.X adc (bad) and xchg rex.WB sub (bad) out push sub mov pop imul (bad) cmp adc outsl push sub and fsubrl bnd (bad) adc (bad) retq xor and (bad) mov adc retq (bad) mov cli fist jmpq (bad) nop xchg leaveq push or jmp movlps push int3 mov pop andb (bad) adc add out or rex.R out stos xchg push pop movsl fcoms cmp jbe or movabs mov xor mov jb in jp hlt movslq xchg clc (bad) jle (bad) xchg es outsb adc fidivrl fimul fsubrl (bad) lahf rex.WRXB rex.WX sub xchg adc pushq cwtl xchg and jg sbb adc pop je roll (bad) rex.WX add mov rex.WXB cmc xchg jbe sbb (bad) mov outsl (bad) jle cmp or (bad) (bad) mov and test rex.WRXB xchg rcll xchg mov test addr32 xor hlt gs in and mov movsb enterq outsl mov (bad) adc adc (bad) movabs pop (bad) movabs push in rclb mov cmpsb adc rex.R xchg adc lret or adc sbb outsb out sub (bad) int andb adc mov and insl (bad) and test movabs loopne stos xor and mov lcall loopne pop cmpsb push (bad) stc push jbe sub xor mov adc mov jge adc insl (bad) jl pushfq and sbb (bad) xchg (bad) mov rex.WXB add (bad) iret sbb rex lret pop (bad) mov push adc insl jge (bad) adc rex.WXB repz adc lret js rex.RX adc xchg xchg (bad) adc (bad) xor in mov (bad) rex.WX pop jne sbb shll xchg or (bad) cmp sub cmc cmp adc pop push pop jp sahf jg mov div sbb or adc adc push clc adc imul mov sub mov fs jge enterq add callq (bad) mov mull adc cmp adc movsb xchg retq fwait add (bad) or cmc mov mov jno xchg pushfq mov fisubl rex.WX jmpq (bad) push out sub jb xchg sub clc cmc jno out xchg adc push xlat (bad) adc pop pop cmp adc cmp pushq movabs jg cmc outsb (bad) adc adc xchg adc sbb sub callq je js xor lret cmp data16 lcall sbb fidivl xor and xchg rex.WB iret xor mov (bad) xor sub in xchg adcl (bad) xor (bad) imul mov cmc lret adc adc add cmpb and test outsb ror imulb adc push xchg jmp push (bad) adc jae outsl jnp adc in mov adc fsubrs jrcxz and in pop stos mov sub int pushq adc fistpll adc mov movabs movabs xor enterq (bad) adc retq adc out jmpq fdivrl and rorl xchg adc rex.XB jrcxz adc rex.WRB repz lock insl adc mov rex.WR or cld retq cltd shrd ss (bad) rex.WB movsb add jns,pn sub (bad) adc pop stc clc mov movabs (bad) adc jp push mov (bad) xor sub (bad) mov mov fwait cmp pop es xlat pop sbb (bad) rcr sbb js adc fdivl xor sbb jge pop sbb stos repnz add xchg xchg (bad) (bad) addr32 xchg sbb or je xchg xor and hlt stos jno gs push mov adc xchg adc fisubr fstps xchg mov or mov cmp and rex.X jno clc cmp test adc test fucomi adc adc push jmp (bad) pushq scas jb clc adc push add in je scas pushfq movabs cmc sub mov adc xor mov mov mov (bad) mov rex.B (bad) (bad) fsubrs rex.XB mov (bad) sbb adc lahf fstl (bad) (bad) out scas xchg (bad) rex push jle rex.WR xchg sbb movsl (bad) imull mov adc retq retq sbb in (bad) (bad) lods jo adc sub rex.XB jb rex.W pushq (bad) (bad) sbb clc sbb fcoms scas movsb xor pop (bad) adc jbe repz jl rex.WRXB je sub movabs (bad) cli add mov push fprem stc (bad) (bad) adc rex.WXB adc add and (bad) adc (bad) movabs imul mov adc cmp and rex.WX flds (bad) (bad) rex.WRB adc repz in fmull (bad) loop jb rex.RX sub std nop jo stos callq es sub (bad) jae mov push rex.WR repnz fwait or enterq xor test and rex.R std (bad) xor adc int3 mov rclb mov leaveq xor sub (bad) mov rex.WRXB jmp in cmpsl nopl ss xlat jl js adc pushfq rolb mov cwtl (bad) loop movups (bad) outsl out pop mov in (bad) jg rclb mov sbbl lock loope out or insl jg (bad) or xchg pop and stc push movsl pushfq push repz pop sub adc push out xor cwtl mov lahf (bad) (bad) adc mov (bad) jnp ficoml (bad) out xor adc pushq or cmp push (bad) jne mov in and out rcrl push (bad) pop ficoml test xchg adc movabs add (bad) (bad) pop rcll clc in mov notb or adc cmpsl retq lea rex.RXB (bad) mov lock cmp (bad) cs imul ds movabs rex.X (bad) es push cmp pop xchg rex.WB rex.WRXB clc (bad) popfq mov (bad) or mov (bad) movabs rex.WX lods cli fidivrl (bad) xor adc movabs push mov leaveq callq cmc (bad) imul cmp in sbb rex.X (bad) xchg test sbb xor or (bad) (bad) xlat rex.WXB adc fsubr jnp adc fwait es xchg adc loopne,pt (bad) mov xchg or push out rex.B (bad) rex.WRXB pop mov cmp cmp adc (bad) rex.WX and pop xchg js adc (bad) cmp rex.XB es jrcxz adc jne sbb (bad) mov iret movsb cmp xchg and in (bad) add sub adc (bad) mov add rol lods (bad) (bad) xor adc adc outsl jg xlat pushfq (bad) xchg sti (bad) (bad) imul notb je adc jl rex.RX adc lods lret adc rex.WB jp rex.RB retq rex.WRB ja lahf std rex.R pushfq shl adc ds xchg mov push adc push sarb pop scas insl stos pop fsub rex rcll rex.RX ja mov mov adc loope rex.RXB mov rcr or jmpq stc and mov fwait rcrb adc add fiaddl (bad) jb sti mov js pushfq rcll stc sub mov (bad) (bad) hlt retq and adc and pop (bad) in sbb xadd xchg sub test (bad) fildll pop mov push jno jge adc fsubs mov or xor (bad) xor adc jmpq (bad) callq mov movabs addr32 lea loop sbb or fistp jmpq mov push jno pushfq cmp sbb movsl lret nop adc (bad) rex.RB gs cmp movabs rex.WB adc jge fcmovbe adc or lods and rex.W pushq mov rex.WXB shr xchg fistpl add std rex.RX notb sahf cmpsl (bad) ficom (bad) in xor cmp stc push pop fwait push rcll rex.R xchg (bad) (bad) int3 jg sbb adc jbe test loopne xor adc fcmovnu xchg jo xorl stc pop xchg mov lea imul mov lock (bad) sahf mov cmp mov out pop lahf xorps mov retq cs adc rcrl sub (bad) jle or rorb or (bad) mov (bad) pop adc in jo sahf adc sub scas mov xor (bad) rex.XB retq jg lret or js (bad) adc notl sbb jno stc mov sbb hlt mov add adc rex.RB (bad) adc ja (bad) popfq and (bad) test loop jo push adc pop or xchg stc (bad) and push cmp add lret (bad) mov adc cwtl sub test adc (bad) movabs rex.WX iret fldl (bad) jns rep mov clc push movsb insl mov jns adc out (bad) and lods cmp cld mov (bad) (bad) fnstsw or movabs sbb push adc imul (bad) js test adc cmp pop xlat flds xchg xchg or movabs (bad) adc sbb xchg gs (bad) cmpb push sti sbb add (bad) (bad) or rex.RX fwait adc (bad) (bad) xor out mov push rex.XB xor test test repz sub retq jne (bad) scas (bad) xor adc add rex.RX rep sub push rex.RB retw movabs xor rex.XB cwtl cli rex.WX int3 pushq sub lahf adc nop (bad) xchg cmp mull fnop mov cmp rex.WX clc sbb xor mov outsl push rcr lret sbb in test fdivs adc and pushq adc sbb ja movsl cmpsb mov or cli push adc pushq push add xchg hlt insb loopne adc add rex.WRX rex.RX jp (bad) adc scas (bad) callq xchg adc rex.RXB hlt test cmp cltd xor pushq icebp add and sbb xchg in sub adc mov (bad) mov fcoms cld mov adc rex.RXB and flds (bad) retq adc hlt lret xor pushfq sub lods jmpq xchg cs mov sbb outsl or (bad) rorl adc (bad) pop jge adc test adc (bad) adc rex.WRX ja push movabs cmpsl imull pop callq adc movslq (bad) rolb ss rcrl adc push rex.WRX repz rex.R out rolb rex.XB xchg jne leaveq ds retq fmuls popfq outsl jp or or out fwait push jne imul hlt (bad) adc xchg stc push out loope es shr sbb push sarb xor pushq stc data16 stos adc repnz pop (bad) cmp adc imul in movabs fdivrs (bad) mov ja in mov movsl (bad) xchg (bad) (bad) test jne lods and fwait (bad) shrb mov cmp cmp sub and (bad) fsts js mov pushfq jno (bad) push xchg pushq clc test (bad) adc mov jmpq out push addl mov xchg clc in test adc pushq push or cmp xchg add notl sub xchg test movsb sub or loopne lock movsb (bad) shlb xchg push insl cmpsl test pop hlt (bad) jg mov (bad) lods (bad) je fistl sahf mov fs (bad) hlt addr32 ss test adc sbb and mov fmuls iret (bad) cmp xchg (bad) xor sbb fcompl adc (bad) add movabs je sbb orl (bad) callq mov xor xchg xchg jne add add sub xchg jne adc out cmp cli movabs adc rex.B rex.WXB sti xor (bad) pop rol cmp xchg in imul adc (bad) (bad) int adc (bad) sub lods jo lock push callq or xchg mov stos adc mov mov adc jns imul sub xchg (bad) rex.RX (bad) lret adc xor pop stos xchg cmp (bad) or jl movabs pushfq jmp movabs xchg mov movsb outsb out sbb cmp stos rex.WRB clc (bad) mov mov (bad) movsl (bad) lods xor loopne push insb mov imul je add (bad) xor cmp pop mov push (bad) imul imul popfq (bad) gs adc adc add mov xor mov outsb imul data16 push fisubrl mov rex.R movabs (bad) adc sti sub repz xchg lret push adc sbb mov rex.X or xchg (bad) or in pop sub popfq adc fsubs cmpsl add fmull jmp mov jp lods test rex.RB idivl mov adc (bad) sbb mov rex.WX ss cmpsl adc leaveq rcrl adc mov data16 rex.R rex.R add scas add rclb xor adc (bad) and int xchg ds jp pushq adc movsl and int3 pushw addl gs rex.W out (bad) or outsl rex.R out sub rex.WRXB and cld sub movsbl mov sbb adc test xchg adc outsl jns rex.WRX jp test jge adc sub and out jrcxz (bad) sub or fimul (bad) cmp jge subb movb lods movabs (bad) push mov xor xor mov mov adc rex.WX push movabs ss callq mov out xchg adc (bad) cmp or (bad) cwtl add (bad) js lock jg sub rex.WRXB movabs sbb sub cmp jns adc hlt ja cltd pushfq imul mov (bad) rex.XB jne or sarb cmp pop clc rex.RX pop adc cmp (bad) adc adc (bad) jno notb in in int xor cmp callq adc push repnz adc jnp fstsw rex.XB test cmp sbb adc stos stos iret adc mov clc pop scas (bad) and xchg jns xchg adc xor mov adc (bad) rex.WXB xor xchg pop xchg mov movabs jmpq fwait cmc in mov cmpsb xchg xchg (bad) xor mov sbb adc or andb je sti adc retq rex.RXB ficompl mov adc jle vunpckhps sbb sub cltd (bad) cmp (bad) movsb stc flds lods lahf jbe (bad) (bad) shrb adc repnz (bad) adc fidiv loop fs adc sar icebp mov outsb sahf and cmpsb rex.WRX add cmp rex.WB (bad) xchg (bad) add or adc and rex.RX xchg rex.WRXB adc jmp adc adc xor clc (bad) outsb fnsetpm(287 sbb jno jrcxz fcomps or (bad) sub xchg lret add je loope sbb (bad) push adc rex.W xchg rex.WR xchg rol lock (bad) adc (bad) (bad) incb stc adc adc (bad) fmul movabs adc xchg pop adcl add (bad) clc rex.WX and movsb (bad) pop int3 pop rex.WXB adc movabs jmpq xor out popfq sbb rex.WX lahf xchg (bad) sub clc adc push test lret jrcxz movslq (bad) (bad) cmp adc xchg push sub fdivl jle rex.WRXB (bad) movabs (bad) (bad) outsl adc pushq out scas mov mov adc movabs push (bad) adc or pop (bad) out (bad) sub or sbb orb sbb (bad) push add (bad) je push rex.WRB cmpsb fldlg2 mov adc cmp and xor sub push callq int (bad) (bad) adc add sbb or scas pop add xor sub xor test adc sub sbb clc sbb mov std xchg and jnp adc (bad) ss adc (bad) mov xchg sub adc movsl jb,pt clc rex.RXB xchg lea xlat fldt xchg push (bad) rex.WRB and xchg ja pushfq int3 mov jbe rex.WXB or mov push mov movsb adc mov retq lret mov rex.WRB stc add jge (bad) rex.RX (bad) test rex.W adc (bad) sub mov xor adc (bad) cmc lret xor pop (bad) adc movabs sbb out (bad) mov cmp outsl or fcmovnbe rol adc mov movabs adc jo ficomp (bad) mov clc or out out imul js movsb xchg stos repz push pop loop rex.RB rex.XB (bad) int3 (bad) repnz xor testb test pushfq cmp out (bad) (bad) rex.WX icebp adc sub insl adc push lahf push movslq movsl adc (bad) xor xchg adc (bad) mov loop mov out andl jae jnp and movabs lret xor add rex.WXB out ds (bad) lahf sbb (bad) (bad) jrcxz sub or jmp push iret push scas jl adc jmpq xchg (bad) rex.WR rex (bad) (bad) fidivl cmp xchg jge test (bad) out adc push callq rex.WRX adc sbb in test jmp in js movsb adc (bad) or test adc jae sahf ficompl scas adc fidiv (bad) imul mov in mov add adc add lret adc rex or mov fidivrl out (bad) xor jge adc sub (bad) rorb imul enterq adc loopne adc fimull cmc adc retq (bad) sbb (bad) out xchg addb jnp popfq (bad) cltd and rex.XB rex.WRB jno (bad) jp mov sahf pop xchg sub movsb data16 test (bad) adc out add adc xchg rex.WR sbb xor push (bad) push movabs jnp mov sbb int3 (bad) (bad) and push data16 sub roll jmp imul insb jge or mov adc xchg retq adc (bad) (bad) (bad) adc adc (bad) jb mov sub test lret adc fistp jmpq xchg and sbb xlat xchg (bad) cmp ja enterq push hlt clc jg mov (bad) mov xchg pop pushq icebp adc and pop cmp (bad) adc add adc (bad) jmp push or stc jge mov sti push pushfq lock (bad) movabs adc retq push adc in pop pop movsb (bad) (bad) sbb mov pushfq cmp (bad) (bad) xchg adc sahf cwtl sub rex.XB adc rex.RXB test rex (bad) (bad) lret fcompl (bad) (bad) rex.RX sbb cmp adc rex.WR rex.WRB mov sbb jnp ficoml and rex.R xchg rex.XB test or mov ficomp adc in sti adc rex.RXB sub insb (bad) xor (bad) adc test mov sub out cltd adc or sub lock pushfq (bad) ss xor mov (bad) rex.RB (bad) jmpq jbe add jno lret xor clc (bad) mov icebp outsl (bad) or adc nop ja (bad) adc sub movslq loope scas ds jl mov (bad) and push jge and fs jno push ja (bad) (bad) (bad) (bad) rex.WRX je scas mov lret loopel imul xorl (bad) jns mov cli adc cltd adc xor mov scas cmp pop xchg adc andl (bad) (bad) jle adc jns push movabs shl adc addb mov (bad) int (bad) rex.WB lret adc jge rclb lods rex.RB fcos (bad) rex.B (bad) pop movslq clc jbe (bad) push mov rex.RXB or pushq jmpq (bad) xchg mov adc (bad) rex pop adc rex.B int (bad) repnz add jo and movabs in (bad) adc push push gs (bad) (bad) mov cmpsb int rex fwait enterq stos es (bad) jno sbb adc movabs cmp adc (bad) cwtl rex.WRXB fdivr (bad) cmp movsb mov ss cmp or out adc stos out pop jns adc and (bad) cmpsb insb or (bad) btc adc imul jae rex.RXB mov lret adc xchg sbb xor (bad) cmpsl add (bad) imul adc test mov out adc sub movabs jb add leaveq pop adc mov int3 ficom je addr32 and fs movabs xchg adc mov stos (bad) movabs insl movabs adc in mov callq stos jbe fistp adc (bad) jo rex.RB rex.RXB adc mov push xchg (bad) add movslq cmp push xor add jne (bad) adc push fstpt clc jb and clc vcvtsd2si clc jle popfq xchg sbb nop mov (bad) or xchg mov (bad) adc mov (bad) push mov adc rol adc cmp xchg fcoms or adc (bad) xlat clc sub (bad) push xchg mov retq xor or sti imul icebp retq int (bad) movabs xchg and adc jle mov add mov rex.WR rex.WXB (bad) jnp enterq out insl movslq push xor sub (bad) (bad) and (bad) adc stos test cmp adc jmpq shr out int test or mov adc in mov adc in cmp adc sbb addr32 rex.RX pmuludq nop imul jne callq mov adc mov pushq sbb neg push es jbe divl (bad) fldcw (bad) adc mov fwait push movsb jnp lahf adc cmp leaveq adc mov movabs fcmovnb sbb and (bad) (bad) xchg je int3 cmp lcall test cmp lock sub sti push rex.RX icebp sbb (bad) (bad) jns xor (bad) popfq test xor pop push jno cmp vprolvd jmpq nop mov rex.WXB mov (bad) mov (bad) (bad) outsb (bad) pushq jmpq adc stos xchg scas leaveq adc (bad) adc adc xor repz rex.RXB nop jl adc out jmp or (bad) rex adc clc sub hlt sub (bad) jns movabs xchg or lock and push (bad) in ficoml jne jg in mov xchg (bad) (bad) sub adc adc (bad) imul (bad) sbb shll sti push pop or adc jnp movabs (bad) adc or cmp push and mov (bad) mov rex.WRXB cmp rex.W mov outsb mov cmpsb add (bad) cmp rex.RX rex.WXB enterq xchg adc rex.WX out outsb adc (bad) jb pop push xlat cmp (bad) jne (bad) adc (bad) xchg mov xor test pushfq rex.RB mov cmp cmpsl lret add lock callq adc cmpsb adc repnz sub (bad) fdivs lret xchg (bad) (bad) adc shr (bad) fsts addr32 xor adc jmpq add xchg adc test jg clc cs ffreep (bad) popfq xchg pop rex.X (bad) (bad) xor sbb fsubrl jle jbe insb callq mov fdivl (bad) outsl and movabs adc xchg (bad) movabs add cltd mov adc (bad) push loope adc mov mov bswap mov adc mov movslq adc and sub xor push adc pop rex.W mov cmpsl cmp (bad) sub mov andnps cli adc js jo adc pop (bad) (bad) es mov rex.WRB adc mov add cmp ja imul in sub jnp push mov mov in in or or adc (bad) mov loop fwait rex.RXB push (bad) pop insb or or (bad) sub mov fcompl (bad) xor in test imul retq (bad) rex.WX sub xor pop fwait pop adc push out callq addr32 stos fdivp movsl stos xor (bad) sbb adc clc push rex.WRB adc lahf rex.RX lea (bad) push fdivr test ljmp xor ficoml in mov rex.WXB adc xor jmp adc sbb or sub mov xchg adc lods movsb mov movabs sub js pushq pop scas addr32 cmpsl (bad) xchg adc stc rex adc (bad) mov add add rex.RB data16 ja jns push add in icebp lret enterq cmpsb (bad) mov ds jbe push popfq xchg rex cmp pushq adc insb adc ljmp (bad) cltd mov adc (bad) out rex.RX cmp addr32 repnz (bad) jo sbb repz ficoml movslq xchg mov rex.WR rex.WXB lock xor push pop imul sub jg fs shrb shld push adc adc and (bad) adc adc int pushq (bad) cmp push push adc sub adc retq pop xchg rex.XB mov or (bad) movsl ja push jns adc push js (bad) push callq xor icebp or rex.XB rex sub outsb xchg repz test int3 lods (bad) adc pushq and rex.WRB pop xchg insl nop cwtl mov (bad) adc mov pop adc rex.RXB cmp ja jp test loop cs adc pop testb adc ficoml or or adc lret fistl adc imul fs mov adc cld adc addb (bad) (bad) or stc iret mov icebp adc retq int3 (bad) fstl movsq and mov adc cltd pop sahf or sbb lods movslq and xchg sub (bad) test int in and test je adc jae cli lret in rex.WB pop cmc in xchg pop ja (bad) and mov incl mov movsb (bad) mov imul stc or mov mov xor push mov add cmp rclb movabs pop and adc xchg push rex.WXB or sub (bad) xor lods lret xchg stos jmpq adc gs lahf out test cmp ss jne ja pop (bad) icebp adc sbb je sbb mov adc jnp clc xor mov push (bad) icebp push adc add sbb mov fistl mov xchg movabs pushq push mov cwtl mov mov jb sub push (bad) clc scas jne ficoml (bad) sbb test adc mov adc sahf ja xor je adc (bad) cmpsl rex.WXB pop adc adc (bad) (bad) scas cmp and movsl cltd jp movsb mov adc fwait and pop adc rex.WR adc data16 (bad) sub adc sub (bad) adc or clc xchg movabs (bad) rex.WRX fwait rex.XB fdivl adc gs (bad) (bad) jb adc adc and xor fcoms mov cmp cli rorl xor adc out sub test jg and (bad) xor (bad) push loop (bad) adc mov rex (bad) or adc (bad) loope ljmp (bad) or lods (bad) sub adc out pop rcrb cmp sarl jmpq rex.WRB xor adc or cmpsb ds (bad) (bad) lahf hlt out or lret mov scas outsl adc (bad) (bad) (bad) xchg sub (bad) pop adc cs mov xchg adc out cmp addr32 sahf clc test xor xchg (bad) jl jge mov movabs xchg or fildl (bad) fs jrcxz adc push iret mov adc push (bad) jmpq out adc sbb jne rex.R repz adc test push clc je rex.B xchg adc fwait xchg roll adcl (bad) sbb adc adc (bad) jrcxz rex.X out (bad) sub cli push rex.WX (bad) imul (bad) lea callq adc mov and add rex.WRB xchg and xchg stc jp adc (bad) push std and cli xlat mov (bad) out sbb fcoml jmp (bad) incl shll in stc int jge je cltd outsb callq adc and jb adc xor mov nop movabs or jno jrcxz sub push loopne cmp fnop (bad) mov outsb lock ss mov fdivs or adc stos (bad) loope not or mov adc adc loopne sbb adc rex rex.WX (bad) js movsb add rcll mov pop movabs mov jae and mov cmp (bad) cmpsl pop adc xchg fiadd (bad) imul jmp xchg fsts and mov xchg out sbb and adcl rex adc (bad) (bad) popfq or (bad) cmp sbb (bad) sbb sub rol jb xchg (bad) or mov jge cwtl movsl in mov leaveq mov fsubr (bad) rex.WR loopne adc imul sarl jrcxz or popfq pushq adc loop cwtl xchg and adc stc ds and (bad) cmp repz mov (bad) (bad) cmp cmpsl and push push cs cmpsb ror adc stos push and pop adc jo test xchg test xor (bad) adc imul mov adc pop movabs adc pop je shlb jp (bad) rex.XB icebp cwtl cmp (bad) (bad) mov adc mov data16 sub jo and fcomip (bad) xor rex.XB rcll cmpsb xor jle (bad) (bad) mov or fldl mov xchg (bad) std adc adc rex.B (bad) cmpsl mov mov adc cmp rex movsl pop sbb adc callq and icebp adc (bad) xchg jae adc adc jns jbe callq fsubrl mov fwait push (bad) cwtl sti xchg movabs xchg adc jp sti mov movslq cwtl (bad) es (bad) repnz vhaddpd adc cs lods leaveq or fsubrl jb mov clc shll or pop (bad) jno cqto mov (bad) std adc push cld cmp (bad) cmp pushq or mov movabs cltd out int3 sbb (bad) cmc (bad) cmpsb sahf sub rex.WXB (bad) rex rex.RXB mov adc lods gs adc add cmp push jrcxz pushfq iret sub or lods sahf outsl cmp icebp (bad) out fdivl sbb es and pushq mov jnp loop mov xchg (bad) ds (bad) testb enterq add (bad) jge es cmp add cmpsb fdivr (bad) stc adc (bad) push adc fcoms sub adc (bad) sbb or add jle ss push adc mov fdivr callq xchg mov sbb (bad) mov mov adc imul adc fwait cmpsl lock sub sti push push rcl xchg movabs vmulps and sbb (bad) jae loop popfq sti mov adc cmp clc (bad) push cmpsl movsb (bad) (bad) rex.B mul lock mov (bad) sarl and bnd mov idivb (bad) shr notl or cmp adc decb or xchg push mov or js adc jp adc sbbl (bad) xchg popfq rclb callq (bad) cmp mov (bad) nop jge in sbb adc (bad) sub (bad) je in adc fsubl push (bad) js rorb rex.X xabort cwtl xchg xlat mov sarb or pop (bad) pop or adc lock jl jg rex.WRX xchg cltd lahf fild xchg cld xor sub movabs push out xchg adc (bad) jne stos (bad) in (bad) rex.WXB jl (bad) mov rex.RXB retq (bad) (bad) adc mov sub retq lods or pop rcll adcl adc cltd mov (bad) cmp scas (bad) test rex.R and roll jmpq xchg cmpsl fsubl movabs adc pushfq sbb xor clc (bad) adc xchg adc adcl push sbb fwait (bad) adc (bad) decl (bad) adc sbb push or mov fsts xchg xor mov pushq je stos prefetch scas (bad) sub mov adc and or notl rex.WRX cmpsl adc xor rex.WXB adc mov pop stos (bad) push rex.WX pushq test fcompl (bad) jbe sbb repnz imul (bad) xchg xor mov cmp ficoml mov pushfq je push int3 repnz mov rex.RB imull pop (bad) imul lods and (bad) and rex.RB stos sbb rcll movabs jnp cmp (bad) xchg (bad) cmp ffreep adc sti rex xchg lock callq in push roll pushq jae movsb (bad) je,pn xor hlt test sbb mov test lahf iret (bad) rclb pushfq out cmp (bad) jl lea rcll adc mov adc loopne (bad) mov (bad) sbb pushfq in pop leaveq xor fsts mov cmp push jp xchg xchg sbb (bad) clc cld pop testl popfq sarb adcl cwtl jo mov sti and xchg adc (bad) xchg xor adc scas rclb (bad) movabs movabs xchg rex.WRXB cmp sbb xchg (bad) fidivl cmpsb sub xchg adc and cs mov (bad) cmp or stc ss movabs push mov adc nop ja mov sub xchg lock test movabs mov (bad) add rex.WX xor (bad) (bad) rex.WRB out (bad) (bad) movabs (bad) and gs int3 push xchg cmpsb mov outsl adc movabs rex.WXB (bad) hlt adc cmc insl test or (bad) jae lret rex.WX adc cmpsl pop adc or test mov adc add xorl (bad) cmc rex.R repnz cmp add rorl (bad) int mov rex.WB push lock pop loopne scas adc mov (bad) int3 retq or movsb in (bad) movabs insb xchg ja jne (bad) imul stc fucomi pushq mov xor and pop je sub sbb or fild pop mov (bad) adc in jge push cld adc mov lea std sbb stc and (bad) cmp (bad) adc mov (bad) sbb or adc mov add sbb mov xchg adc rex.WRB push sbb (bad) clc mov add lock (bad) adc mov (bad) (bad) push adc lea xor rex.RB ds fstps xchg int3 jns xchg push adc clc (bad) rex.WRXB xchg stc movsb jge or add jle mov callq xchg mov (bad) pop mov data16 ds rex.WRB scas (bad) rex insl (bad) add stc (bad) add mov leaveq std outsl rex.WXB rex.RXB fstl lret outsb adc enterq adc ficom (bad) rex.X stc out movslq adc cld jno in adc movabs out (bad) jne sub stc xchg rex.XB xchg xor jrcxz push sub sbb adc imull mulb xor ficomp xchg jge (bad) callq rex.WX repnz adc (bad) cltd (bad) (bad) enterq cmp rex.X es loopne add sbb adc cmpsl sub xor xor rex.W outsb adc (bad) push clc mov (bad) xchg pop shrb popfq xor es adc xchg callq adc rcrl in sbb adc leaveq fstl xlat push mov push cli rex.RX vunpckhps adc add pushq push rex.RB xchg mov retq (bad) hlt mov xchg or adc mov sbb leaveq in jp sub in lea adc in clc in or fcoms (bad) mov pop (bad) xor cli xor adc add or jbe test adc sbb sub (bad) fldenv std fidiv or lahf loopne stos xchg (bad) cmc retq (bad) adc sti shlb adc pushq cmpb cmp adc lahf adc jrcxz add (bad) mov out scas or or adc scas (bad) add (bad) sub and and adc sub test adc (bad) xchg rex.WRB imul jl or movabs mov xadd out sahf mov sub jg and sub (bad) pop je cmpl cmp in fxtract rcrl push retq (bad) sbb xor push and push add fdivl and fisubrl mov pushq (bad) adc xlat cmp (bad) and scas (bad) push int3 (bad) clc pushq xlat cltd push pushq or out and mov sahf mov (bad) lods add xchg mov or (bad) rex.WRX pushq (bad) pop rex.RB adc adc jns adc clc mov stos pop add (bad) loope cli adc clc fwait xor xchg push jle rolb adc sbb rex.X gs hlt adc or stc xchg adc pushq out adcl jg xchg movabs pop jrcxz (bad) adc cmp (bad) lret fadd and (bad) add fldenv insl mov (bad) out iret repz clc cmpsb adc lods (bad) mov mov rex.WR loopne add insl callq iret xchg gs outsb xchg sub mov xor imul or (bad) adc test fcompl sub (bad) fwait mov fcoml cmp mov sbb cmpl stc mov xchg sar rex.WR mov rex.X pop fdivs adc or insb jbe and push sbb cmpsl or jb mov mov xor jmpq (bad) lret in lret adc (bad) (bad) mov and pushfq lahf adc adc cld callq and push cs rex.WRXB adc rex.RB jae jrcxz mov imul adc jp leaveq cmpsb adc mov fbstp cli in sbb mov loope adc xchg lahf adc insl (bad) (bad) loop mov pop cmpsl mov or addr32 add jne add (bad) (bad) mov sbb movsb adc rcl js adc (bad) mov rclb movabs hlt leaveq adc cmpsl xlat (bad) cli adc scas pop out xchg adc (bad) adc jbe (bad) loop pushfq xchg add retq stc add rex.X adc ss jp ja pushfq retq adc or sbb icebp outsl loope mov rex.WX (bad) nop (bad) mov push callq mov jns cwtl pop cmp pop and rex.XB xchg scas out in xor (bad) push cmp rex.RXB clc jne (bad) mov add test pop xor mov (bad) pushq notb lock icebp and es fmul pop mov outsb stos xor in sbb adc add icebp add sub rex.WXB cs cs sub nop repnz xchg mov imul adc mov xlat add adc enterq adc cmp or fisub mov xchg cmpsb xor (bad) sub retq xchg lret ja pop rorl movsb xor cwtl jno pop (bad) pop (bad) adc xchg sarl push pop adc lock sbb jbe sub xchg fcmovbe (bad) and and push adc in sbb sbb leaveq jmpq pop fstl (bad) mov out mov rcll in pop and jne (bad) or push push rex.WR jns cmp push pop ja adc sbb and adc retq and xchg (bad) js pop adc push mov pop pop jmp (bad) cmp callq scas push fistl add xor adc fwait and pushfq fildll adc mov insl adc adc (bad) rex.WRX adc xchg and fidiv adc pop movsb fisubr (bad) push lods (bad) imul adc jae or lret nop adc push adc cmc (bad) adc jbe repz adc cmp sbb xchg fwait sarl push add mov adc test xor js mov pushfq xorl stc xchg cwtl mov sub mov jle mov movsl (bad) out fsub retq retq hlt fistpll push movsl mov callq popfq adc xchg (bad) cmpsl cwtl pushq fwait adc xchg push mov xlat scas adc lods (bad) stc rclb addr32 fiadd (bad) movsl cltd shl (bad) adc xchg sub push add adc (bad) callq sti cmp (bad) sub xchg jnp or adc retq loope rex.WRB rex.WXB int xchg xor lods mov cmp adc xor (bad) mov adc mov (bad) loop (bad) (bad) lret in jg mov (bad) jle sbbl jge mov xchg adc push pop sub xchg movabs sub shr lods (bad) sbb adc or pop jne add (bad) (bad) fistpll pop xlat rex.WRXB adc adc push xchg sub adc rex.W fwait testb cmp and and mov fidivl mov sbb fstl pushq cmpsb icebp (bad) mov outsl cltd lahf adc sub sarl lret sub jne (bad) mov push adc movabs pushq retq push push jo sbb out adc lock push or (bad) fyl2xp1 mov jbe adc xor mov out movabs rex.WRXB rex.W negb fs jrcxz xchg (bad) scas jge adc pop mov or fisttp adc pop adc and mov test xor (bad) rex.X (bad) pop insb adc shlb cli jge adc lea and fisttp pop fdivs add sti push (bad) adc xor sbbb js adc test rex.W fcoml hlt sbb push push jp lods mov adc (bad) jae adc jge mov loopne (bad) fsubp cmp and (bad) addr32 callq sub mov pop jne movslq addr32 in movabs add adc (bad) adc (bad) (bad) fwait gs xchg xchg adc imul jo fs clc pushq insb adc nop pop sbb mov enterq fnstsw rclb (bad) or or rex.RB or testl mov xchg xchg retq out mov xor rex.WXB fdivrl lods outsb retq sbb lret pop jmpq adc (bad) jp movsl xor (bad) test (bad) push adc rex adc rex.RX jo cs mov clc repnz jge sti sahf push repz (bad) (bad) jl lret and cmp adc mov xor add adc loope (bad) xchg adc and gs pop xor sub jrcxz jp adc rcl xchg (bad) nop sbb out xor rex.B ds imul jrcxz out mov and xchg rex.WR jge xor ss je out add loope sbb fbld adc xchg mov mov (bad) and cmpsb adc (bad) cmp adc adc cs add adc jnp movsl adc movabs xchg (bad) imulb fisubl (bad) mov (bad) (bad) (bad) adc lods int and fidivrl sti rex.RX imul (bad) adc (bad) sbb lret rolb mov fwait (bad) xor adc icebp (bad) fdivrp mov and cmpsb fsts push icebp (bad) jbe jne cmp retq (bad) pop (bad) jo in shr pushq jne rex.WX adc mov jge clc in rex.WRB xlat pop cld adc xor rex.WR rex.WRXB out adc lock mov retq (bad) push sub mov rex.W add clc ss jbe decb rex.WXB mov mov fdivs rex.X mov adc xchg xor int3 mov cmc clc es (bad) xlat cmp mov (bad) fcomp rex.WR push sahf (bad) pop sbb fdiv adc (bad) jrcxz insb adc retq mov mov lea mov test out xchg jno sbb adc repnz lahf fcoml xchg mov adc jmpq fmul adc jg in adc pop movabs cmp lods icebp push enterq adc mov gs xchg pop (bad) xor xor fsubr lret (bad) sbb rex.WX rex.RX rex.WR lea ds push xchg movabs xchg cmp and cmp adc (bad) je fsubs push add add div cld movslq sbb cmp lock (bad) xchg (bad) in sbb mov out jg vandpd xchg add cmpsb adc scas repnz sbb cld jo (bad) retq (bad) adc adc xor rex.R mov jrcxz lret mov xchg add rex.XB (bad) add sbb and clc scas lret xlat out rex.WRB jbe rex.WB sbb (bad) clc add fdivl jo jg sbb (bad) xor pushfq sbb insb sbb notb retq jp mov (bad) pop adc add pop clc leaveq pop (bad) sti push or cld and loope (bad) rorl xchg sub lret (bad) lods callq clc (bad) sti and adc (bad) (bad) cmp fcomps mov mov (bad) faddl cmp test insl lods jns adc sub movabs je cmpb mov and or rex.WRXB xor adc in cpuid and loopne (bad) xchg stos callq rex.WRXB jp movsb outsl adc xchg ljmp add pop and xor rex.RX fdiv mov adc pop add adc data16 (bad) out or pop or (bad) jo cmpsl push imul jbe int push fcmovnbe rex.WRXB push adc (bad) lret sbb movsb rex.RXB mov rex.WR mov add (bad) (bad) loop icebp (bad) jrcxz jl in adc rex.X rex.RXB clc callq xchg mov icebp adc sbb stos adc cmp adc mov orl sbb adc stos cvtdq2ps xchg leaveq and rex.WRXB cmp jg sub or ss and js (bad) iret movabs in cmp mov cltd callq mov adc imul adc iret (bad) shll (bad) in movabs adc adc rex.XB adc pop or (bad) (bad) je xor adc out lret adc pushfq stos shll mov xor cmp mov jl insl xor adc rex.RX fwait (bad) xchg jle sub sbb adc jg xor mov fwait (bad) (bad) jne (bad) sbb loope adc cmpsb sub xchg adc or mov mov (bad) test sbb rex push (bad) jrcxz jo fnstsw rex.RXB adc jmp in adc mov pop cmp add psrlw movsl (bad) (bad) or sti callq pushq and push cli rcrl movsl adc or lods sbb pushq pushq mov retq outsb scas adc mov jp adc std adcl cmpsb rcrb out and jp fwait hlt mov (bad) fnstenv callq movsb xchg outsb jnp xor data16 jne adc pop gs in xlat insb js adc scas (bad) lock add rex.WRB mov add vpunpckhqdq pop je mull (bad) mov sbb xchg jnp xchg pop adc mov out loop (bad) sbb sahf rclb sbb jmpq pop es push ficom add js sub adc lret adc fsts (bad) std add cwtl jns sbb or push pushfq imul rex.XB xor rex.WX rex.WB fcoml (bad) sbb mov mov outsb rex.RXB sub adc nop pop mov xor jp (bad) fidiv jo iret push sti (bad) fwait sbbb repz cmp (bad) (bad) (bad) sub sbb pop pop fcmovbe stos movsb add fnop rex.WRX cltd or pop cmp mov (bad) addb adc pop (bad) ss jl xchg cli jle fwait xchg push adc adc adc fcoms jp rclb (bad) (bad) test (bad) adc andb fdivs outsb pop (bad) fstpl adc rex pop enterq add rorb push adc rex.WB (bad) adc (bad) jne pop adc test rex.WXB add (bad) xchg adc movslq hlt jne rex.WX (bad) icebp adc (bad) sbb (bad) out and outsl lock (bad) in xchg pushq mov jge sub cmc (bad) fidivr pop adc xchg ficoml adc jbe mov add mov clc pop in sar stos xchg mov or xchg rex.WXB adc mov fcomi adc sub outsl lret decl ja jmpq sbb mov jge cmp sub (bad) jmp add fisttp in (bad) (bad) ss jno roll retq cltd adc sbb pushq rex.XB mov (bad) fdivl xchg xchg mov adc lahf rex.WR adc outsb (bad) shll (bad) (bad) fsubrl movabs xor adc fnstcw int adc popq (bad) mov xchg lods nop rex.WR lret cwtl cltd enterq adc xor stc adc cmpsl (bad) int3 je,pt sbb xchg adc scas cmc movabs jns adc (bad) hlt imul mov pop lock adc xchg movabs and or out and (bad) movabs gs jp rclb adc in (bad) cmp adc xlat adc loope test sti adc movslq rex.RXB adc and or cs subl repz xchg pushq pushfq mov adc movabs sahf clc imul insb pop (bad) insl retq push (bad) movsb adc movabs (bad) and adc out adc fdivl cli mov or hlt lock nop or (bad) insb sbbb mov (bad) cmc adc int mov jle (bad) xchg sbb fistp rex.RX nop sbb lahf cs adc rex.WB ja xor (bad) sbb add rex.WXB (bad) mov lods sbb mov xor adc loope (bad) (bad) or adc and mov fidivrl cld cmpsl out cmpsb pushq xchg rex.R jl and adc add loop mov adc jl jge or sbb ss js mov faddl (bad) pop adc add adc rex.RB add movsb sub dec fildl (bad) adcl mov xchg mov sbb cmp adc (bad) add (bad) ss adc or insl loope leaveq in sahf imul adc (bad) fidivr adc hlt cmp adc out lret shlb sbb (bad) iret movabs (bad) (bad) sub pop js adc push mov xchg xor add sti pop cli adc cmc sarb adc jae push cwtl jp xor (bad) mov adc sbb (bad) adc std stc lret pop cmp sbb (bad) rex.B ss adc out sti cmp (bad) (bad) (bad) (bad) push xchg mov pop insb mov repnz or rex.RXB cmc rex.WRXB rex.WXB clc adc pushq stc nop adc jne or (bad) sub loope (bad) imul xchg in mov adc in adc (bad) iret cmpsl cmp adc xchg mov push mov adc cld or pop adc or mov adc jo sub xor adc push pop (bad) (bad) scas pop push cmp loopne ja push nop stc xchg (bad) mov add mov sbb jl adc xchg lret out adc mov (bad) clc sub rex.WXB adc xchg jge sub or (bad) rex.WX xchg adc movabs rex.X (bad) xchg or sbb xchg mov and loopne push adc (bad) pop ja jbe push lea (bad) adc (bad) rex.W rex.WRX stos adc out sub (bad) cwtl rclb leaveq loop xchg jl (bad) xchg fdivrs and adc pop adc push (bad) jle adc (bad) iret fldt adc push mov mov cmpl xlat push push imul mov stc xchg xor outsl orb adc rex.WX (bad) xchg (bad) mov int3 xor scas fadds fcoms movsl enterq and mov jb lods xchg pop cmc mov push mov rcr cli jg xchg adc push movabs (bad) (bad) (bad) add jmp jne sbb xchg fwait mov rclb (bad) adc xchg cltd adc rex.B adc test rex.WRX nop ror negb repz mov rorl sahf int3 (bad) out movabs dec loope (bad) fldl2t add idiv (bad) mov jnp repnz mov mov (bad) (bad) or (bad) (bad) pushfq loopne lock stos (bad) pushq lahf pop mov sub mov jbe mov sti data16 (bad) int xchg and jl mov xlat adc jrcxz iret add push test lods mov rex.RB jae pushq notb adc xchg xchg or js mov test in fsubrs fwait es mov movabs out lods jne mov adc jnp rex.WRXB outsb pushq sbb adc adc shll loope fdivs loop xchg sub test push clc (bad) ficomp pushq pop cli test and (bad) (bad) ficoml rclb mov insb or int (bad) pop rex.RB pushfq push push or faddl adc (bad) rclb adc fucomi roll (bad) adc fist mov hlt add sbbl test test sbb cltd adc add mov (bad) xor jae mov enterq jl pop mov push (bad) adc sbb mov retq sti fisubr xlat (bad) sbb (bad) decb adc add sar movsb out (bad) (bad) cmpsb and adc ja xchg rex mov cwtl adc test (bad) data16 out adc repnz or xor imul adc (bad) sub (bad) adc mov fsub mov (bad) imulb shll adc pushq mov scas pop jmp imul mov outsb jl movabs rex.R jp push adcl out clc adc callq (bad) (bad) (bad) push pop test adc and adc cmp xchg and (bad) rex.WRXB cs jb xchg (bad) sbb mov repnz adc fidivrl sti adc cmp pop jno sar jge movabs sub adc jnp idiv movsb fldl rex.WR sub (bad) (bad) xchg lret mov stos sub add insl vunpckhps rcrl cmp or retq (bad) (bad) cmpsl push addr32 and jo mov sub out add imul fwait jp xor jne (bad) adc lret jne or nop cmp out mov mov sub rex.RB lret mov add fcoml (bad) adc fs (bad) pushfq xor (bad) cmp jl mov clc lods int and test mov test movabs rex.XB rex.WRXB lock lret es push (bad) xchg adc mov and jge ljmp push (bad) (bad) adc xor imul test insl movabs (bad) adc (bad) pop (bad) push adc mov retq rex.WRXB hlt xor (bad) or adc rex.X jrcxz adc outsb cmpsb stc repz xchg adc mov repnz loopne rex.WXB rex.XB gs std jae movsb rcll (bad) (bad) movsb mov cmp mov cli movsl clc adc in adcl or xor xchg or rcll adc adc add fisub cwtl pop jp adc (bad) outsb adc in (bad) leaveq adc retq mov adc jnp sahf sub cs (bad) not movsb push test (bad) add cli adc (bad) insl xchg adc loope mov rex.W adc xchg sahf cmpsb ss rcr lret xor cltd fwait (bad) xchg add scas in and adc (bad) push (bad) cltd mov (bad) add shl or xlat cmp sub sub test xor adc xchg or sub callq adc rex.WRXB rex sub cs adc lock cmc xor jle test es jb mov jo xor (bad) or or movabs rcll test rex.WR (bad) adc mull jmp (bad) xor je push fadds jbe rcrb jmpq xchg add cmp mov scas mov loope rex.WRXB ss sarl (bad) adc jle fsubrs jmpq test fadds std sbb jne nop (bad) rex.WXB test jp movabs rex.R movabs (bad) adc jmpq pop xor xchg movsl stc mov push cmp (bad) mov adc lret sbb loop jle testl mov pushq cmp (bad) orl and retq cmp cwtl (bad) adc lods negl (bad) adc cmp pop adc shll insb pop push mov (bad) adc mov out cld adc rex.WRX movsb scas clc repnz movabs sbb roll push jne adc rex.W adc xor (bad) retq loope out and push cmc cmp out rex vcomisd sbb pushfq and (bad) or movsb (bad) push adc sbb mov cltd and xor enterq adc rex.WRX xchg jl add push (bad) mov (bad) xchg retq adc retq mov jae (bad) in test or stc xchg js pop mov (bad) adc pop sbb lods and test cli xchg jb fwait add rex.R adc mov xor fildll lea (bad) add push outsl adc (bad) por add sbb sub adc insb push rex.WB adc jmpq fidiv addr32 rex.X xor cmp out rex.WR xchg push cwtl rclb and sbb callq pop out adc mov rex.XB test cld xchg pop sti fadd jns cmpsb (bad) nop sbb mov adc push sbb rex.WX jp adc fimul xchg movabs xchg popfq xor push (bad) rex.WX fwait adc sbb xlat xor sub movabs cmp jp loope cmp fnsave jrcxz shll lock (bad) sbb imul or cmp callq adc cmpsl xor in lret psubsw cwtl clc xor fwait adc mov rcll retq pushq out xor (bad) adc jmp adc adc shrb out (bad) fsubs out out nop adc je leaveq add (bad) mov sub loopne adc (bad) fdivrp (bad) enterq adc js adc adc rcll push mov adc int es adc scas stos (bad) (bad) adc enterq adc mov cmp jge jb xor adc lahf pop (bad) mov xchg mov jp add push (bad) push jmpq ficom xor testl (bad) adc (bad) fadds stos fs (bad) rex.W int shrb sub (bad) jb cwtl cmp (bad) mov pushq in adc cs fsubrp mov rex.WB jb movabs xchg fwait pop jrcxz (bad) adc pushfq leaveq xlat lods add and lea xchg pop movabs ja adc pop movabs imul stc data16 xor rex.R (bad) test loopne add in retq rex.RXB rex push jmp adc (bad) push and or rolb (bad) test lret or add (bad) decl and xor push pop sbbb scas (bad) sub xchg movsb hlt sbb sbb (bad) rex.WRX (bad) cmp sub fs adc sbb stc icebp leaveq fadds (bad) sbb sbb mov adc hlt jle notb insl jae fstl (bad) fcmovne int sbb fsubrp clc mov xchg xor retq in (bad) enterq test (bad) adc rex.RB sti adc mov (bad) (bad) out and pop sarb and adc sbb adc lock or xchg jp hlt (bad) adc sbb lea jo retq ss add imul and cmpsb roll pop adc sbb adc sbb push push or (bad) and or xchg out mov pushfq popfq repz (bad) sarl mov test insb lock test rcll adc loope (bad) test rex.WRXB mov insl sbb adc (bad) cmp xlat push (bad) jns sub lahf out add sbb xchg movabs pushq push pop movabs fstpl add fmul rex.RX pushfq xchg sbb sub rex.RB fs mov xor mov int (bad) (bad) or leaveq push fadds (bad) xor and je (bad) (bad) mov faddl jns pushfq mov adc jae stc or add xchg nop jrcxz xor lock lahf fs mov movsl adc xchg jo fcoml insl (bad) cmp insb rex.RX rex.RXB pop outsl jmpq adc xchg leaveq pushq xchg icebp jnp push or adc clc push (bad) (bad) out adc or cltd rcr clc pop and lahf mov (bad) (bad) rorl adc xlat mov cld add mov vmovhpd (bad) jne rex.XB jmp (bad) sub in or repz test jns adc addr32 ja (bad) mov stc sub xchg and std and adc fcomip sbb mov add lea (bad) loope push out add scas mov fcomps cmp lret rex.R or mov (bad) add add mov movabs adc push sbb xor jp fcomps loop mov pop cmp jns retq cmpsb adc sub xchg mov xor (bad) rcl (bad) xchg (bad) adc retq mov sub adc push adc movabs movabs and jp out sub rex.WR mov or pushq cmp rex.XB sbb adc cwtl add (bad) mov pop movsl stc fcomps adc pop and xor xchg test sahf movabs (bad) xchg sub xor jge sub xor movsl rex.WX movabs (bad) (bad) jle xor xor adc xchg js jns pushq or outsl (bad) jbe pop jb leaveq clc push mov push sub sbb jg sti jle xor pushfq gs out movabs pop cmp outsl lods callq cmc (bad) or popfq pushfq add (bad) (bad) cmp nop jno mov adc jl rex.WRB (bad) mov retq fwait sub add jne and mov mov jbe cmpsl push pushq unpcklps movabs (bad) push adc cli out jo retq fmull adc xchg (bad) adc mov test (bad) adc or fstps rex.XB cmp mov adcb mov stos shrl mov repnz std fwait adc js stos hlt adc xchg sbb rex.W (bad) push (bad) (bad) int3 rex.WXB sbb pushfq push adc in cli ss sahf nop (bad) test cmp fcoml js push rclb rex.X test rex.B sbb sub rex.WB in mov (bad) sub mov clc cvtdq2ps notl test lock mov jnp lahf (bad) fsts sub or adc fimul callq (bad) cmp or (bad) mov movslq lret test sbb clc gs cltd stc xlat rex.WR rex.WB repz rcl jb (bad) (bad) add movsb (bad) add and vmovhps outsl idivl test push pushfq or rex.RX adc cli adc pop jbe (bad) adc hlt out clc lahf sub sub (bad) (bad) rex.RXB mov and sti adc jmpq and addr32 jne adc (bad) rcrb callq adc adc mov mov adc (bad) ja pop adc mov cmp rex.WRXB jns notl (bad) movabs adc xor pop cs sbb mov scas cwtl adc and or (bad) push (bad) and xor push ja pushq adc cmpsb movsb fmul adc out shrl out mov sub push hlt stos sbb rex.WXB or sbb jg push fist in enterq or push fmuls xchg (bad) sbb push fistpll pop lahf loop adc mov mov movabs cmp jp and (bad) gs (bad) stos add enterq psubusb pop fdivrl xor sub xor pop adc jbe (bad) (bad) cwtl sarb adc push (bad) or fsts jbe jge jmp sbb adc sar xor add rex pushq xor and sbb fsub and out ja xchg cmp out mov adc insb scas mov icebp adc cwtl data16 xor int3 (bad) (bad) (bad) and in mov adc in hlt (bad) adc cwtl and (bad) mov test rex.RB or out xor adc pop roll rex.B rex (bad) (bad) jge adc (bad) jbe fsts out in jmpq xchg push stos push (bad) test push adc int mov (bad) outsl adc push rex.WRB rex.WX rex.WR sub cs out or (bad) fs xor fdivrl cmp (bad) mov cmp mov icebp (bad) adc sub pushq testl sbb mov stc cmp cmp xlat lods (bad) outsl adc (bad) in cmp jl adc mov (bad) cs (bad) sbb callq sbb addb pop sub adc (bad) and (bad) adc mov mov repz (bad) sub adcl push rex.RX adc push leaveq sub mov adc (bad) sub popfq rcl rex.W xor mov out (bad) xchg stos movq xor fsts sub adc mov mov mov ja fwait leaveq or (bad) rex.WXB addr32 push retq lock test mov cmpsb push add xor rcll xorl adc sti loop lock rex.WRXB cmc cmp rex.WRB pushq jb ds fcmovb (bad) int rcl add rex.WXB inc push cmp adc adc adc repz leaveq sub adc add pop or pop (bad) adc out mov push fs pop adc (bad) mov adc (bad) insl mov sbb and (bad) rex.B push mov jne mov add sbb pop js xchg rex.RXB leaveq incl negb cmp adc out (bad) adc rex.WX xchg rorl adc rol fnop jo sub movsl roll repnz adc loop ficoml mov sbb adc (bad) movsb notb jbe add enterq (bad) adc cld rex.WX icebp sbb lods fcomps sub lret adc jne imul rex.WRX adc xchg adc pop rcr enterq idivl pop sbb adc xchg callq leaveq movb mov (bad) cmc xlat jno xor push adc xor outsb rex.X sub adc or mov lret adc xor popfq adc (bad) or sub pop jmpq jae (bad) hlt fcompl adc clc adc mov xor adc andb movabs push lea (bad) mov jne mov adc (bad) cltd jb or (bad) jne orl sbb add mov adc pushq fsub sub rex.XB (bad) cmp adc stc (bad) adc add (bad) nop pop decl test clc jne fsubl fildll add idiv jrcxz jnp (bad) jne outsl jbe movslq sub xchg (bad) pushfq pop (bad) mov mov clc (bad) adc movabs (bad) stc sub mov cmp rex.RX adc adcl jge pop stos movabs loopne fcoml and hlt pop adc sub adc rex.WRX pop mov adc int3 push fildll or push adc clc callq mov (bad) shll rex.RX xlat psrlw adc mov out xchg (bad) ja clc xchg test push or cmp jl or jne adc push sbb fcomp (bad) imul (bad) adc js cmpsl xchg callq nop cltd sbb adc jmpq and cwtl push addr32 (bad) pop adc cmp lods adc push rex.WRXB xchg js or jae rex.XB adc fwait push push mov loopne repnz xchg rex.WR pop xor adc test movsb xor adc rex.WRB mov add fimull mov (bad) adc adc and xor cmp xchg jb adc sahf xlat sbb adc subl pop pushfq pop movabs and sub adc (bad) jge (bad) adc push (bad) stos mov adc xchg and enterq imul stos pop callq stos retq adc sti and jne adc cmp sahf sbb push loop sbb xchg idivb fsubrl cmc push cmp hlt cltd movabs cs adc lret xlat pushfq cmp adc mov jo (bad) xor retq adc cld sti jrcxz fsts rex.RXB xchg (bad) add imul (bad) cli test xlat adc xor fistl adc mov pop rex.RB rex.WRB cwtl es (bad) cmpsb adc push rcll test ss in mov xchg cmovle xor rex.WRXB (bad) jge or adc test movabs rex.WR sbb adc cmp mov pop pop je pop sbb mov in pop outsb fwait pop (bad) jb lahf xor sbb outsb cmp and std jbe pop adc repz rex.WRXB mov cmpsb cmc xor adc adc (bad) mov (bad) (bad) sbb adc clc shll lock loope xchg rorb mov enterq adc (bad) rex.WRXB adc (bad) sub and lahf pop gs mov (bad) push rex.WXB xor pop adc jo mov (bad) push sbb loope (bad) adc rex.WRB rex.WX adc and adc rex.W sub jle in adc jno adc movb sub int pop sbb add adc callq repnz push (bad) fstpl rex.X in addr32 mov sub repnz jae insb incb adc add mov scas (bad) mov adc div fstpt rex.WRX mull adc adc push rex.WRXB sub adc repz mov rex.WX sub and sub movabs (bad) jae rex addr32 int3 (bad) adc stc push fmull push lods sub push adc movabs sar fmull (bad) test rex.RB jae fdivrl rex.WR (bad) lret leaveq scas fdiv rorl lock xor rex.R mov in or lret xor xchg add lea jnp (bad) (bad) shrl and (bad) push cli mov fcoms pop cmp adc pop outsb pushfq jg test out adc movabs (bad) rex.WX lock sbb (bad) or lret push (bad) mov int cli stos sub jnp repnz push cli sbb rex.RB jle lock repnz adc adc lods mov je loopne mov (bad) sub repnz popfq mov pop xchg push add (bad) imul push or fdivrs data16 push clc cmp in test push rex.B in (bad) rex.WB cmp xchg adc jrcxz jmpq mov adc mov iret adc test outsb (bad) adc jne mov mov (bad) (bad) (bad) push add (bad) adc xchg (bad) xor adc adc (bad) std clc movabs pushfq movslq or testb rex.WRB mov (bad) mov xor fwait loop xchg jmp push jrcxz push add js push adc sub adc (bad) mov xchg jo movsl and insl adc or jo pop cltd mov adc movabs addr32 fdivr rex.RX (bad) push sub iret or cmpsb adc pop sub pushfq roll stc jno retq pop (bad) adc leaveq scas rex.WX cmpsl cmp adc and retq or scas ds hlt jne adc (bad) fcmovb jg fldcw lock rex.WXB fbstp movabs in adc or pushq push push stos mov cmc adc rex.WXB pop or sbb iret push retq jno stos movabs callq xlat (bad) rcll int (bad) sub imul xor rex.WRXB mov sbb out rcll xchg std pop jle int rex.XB and sbb push cmp push in movsl jo (bad) loopne retq xchg callq pop adc movabs mov jl adc jae mov and jb (bad) push mov (bad) adc fdiv mov rex.WRXB and mov lret adc popq scas cmp sub vcmpnlt_uqps adc sarb movabs or mov xor push xor clc (bad) fisubr int adc retq mov sbb rex.XB pushq mov adc rex.RB rex.WRB in push mov and cmpsb (bad) int3 movabs clc rex.RB xchg cmpsl lea repz rex.WRXB or jne xchg xchg (bad) rex.WR adc xor cs in xchg adc xlat imul add push sub stos fisttpl push in imul insb in mov push lea movabs adc enterq adc xchg mov rex.R pop hlt nop test out xchg icebp mov stc test adc rex.X lahf in sbb leaveq movabs fstl adc shll stos xor rol pop xchg mov test xchg mov mov pop insl sti stc out xchg pop shrb mov add or lret std nop out mov out jrcxz pop rclb leaveq xchg cltd cmp (bad) pop imul je and test sub mov movabs jl rcl adc (bad) cmp lods adc and sbb add sub xor push js fwait push (bad) adc adc jmp int popfq xchg fisttp adc out cli xchg (bad) or or xchg movsl cmp and sub mov or cli (bad) nop rex.WRXB adc xor pop (bad) cmp adc lea gs (bad) leaveq or xor es mov adc (bad) mov mov xchg rex.XB rex.WXB fmull cltd cwtl (bad) (bad) rcl cmc mov mov mov icebp testb mov rex.WX (bad) adc (bad) push and pop (bad) jg sbbb sbb lods cmp adc movabs mov push (bad) adc stos sbb sub cmp insl lock (bad) sub xchg adc scas retq or adc loope mov pushq movabs cmpsb rex.WX adc cmp pushfq js repnz adc add mov je xor or mov pushfq sahf (bad) ds movsb movsl adc sub jne clc (bad) divb outsb lret jno rclb xchg rex.WXB xchg cld sbb jo int3 movabs rex.WRX (bad) insl adc movabs cmc imul pop mov test xorl test and enterq movabs adc ficoml outsl mov out fs lret lock test pop adc ds sbb sub in adc retq cmp rex.RXB movsb clc adc or out rcl sub (bad) rex.WXB popfq jne add or sbb (bad) in rcl adc or sub mov xchg ja out sbb lea fwait adc lret sub out out rex.R pmullw pop mov (bad) pushfq sub sbb mov push hlt mov rcrl cmc adc and cmp xchg xchg or and in outsl xchg adc ficoml mov movabs push cld loop (bad) pushfq imul callq (bad) add mov xor rcl lret outsl adc pushq sbb nop in adc int3 test adc xchg rex.WR mov cmp pushfq pop rex.B stc and (bad) stc rclb and mov xchg rex.XB stc add (bad) adc mov xchg rex.B in adc xchg (bad) mov xchg adc pop (bad) pop adc cld leaveq rex.WR rex.WX test rex jmpq adc pushq retq pop popfq push fdivr xor adc (bad) jns unpckhps mov mov (bad) rol xchg movabs cs adc adc scas mov std adc cli lock adc ds callq cmp adc xchg popfq adc mov push lret mov mov jge (bad) mull out mov jne adc (bad) mov fnstenv sub adc movabs push cmc (bad) jne cltd insl cmp adc std sub adc and iret cmp movabs (bad) sarl lahf es fstpt (bad) (bad) adc adc cmp in in (bad) rex.RX gs lods push xchg pop (bad) loop (bad) in adc fistpl (bad) jge adc sbbl (bad) (bad) mov sub cmc jp (bad) rex.W repnz movsl std rex.WX rex rex.WRX sub adc rex.RX (bad) xchg jnp rex.WRXB rex.XB or callq adc movabs pop (bad) push outsl cmp sbb (bad) or sbb mov out adc sub (bad) sub adc stos rcll adc or outsb (bad) mov movsl cmpsb push mov rex.WRB cwtl loope idiv gs mov movabs rex.RX rex.WXB rex.WX cwtl outsl mov sub mov retq adc (bad) (bad) push lea mov sbb mov (bad) adc movslq and adc std rorl mov pop cmpxchg (bad) (bad) and int3 (bad) rex.W outsb xchg push adc sbb xor mov sbb adc lret decl sub adc insb movsl callq movsb scas and xor lock sbb adc pop dec (bad) rex.X xchg or adcl (bad) adc insl pop mov rex.WRB pop es adc push or in rex.XB (bad) sub vpsubd rex.WR rcll (bad) lods adcb in repz push xchg sbb movsb out (bad) (bad) (bad) movsq mov adc add stos pop and movslq (bad) adc (bad) (bad) rex adc xchg fwait in imul pop lods (bad) sbb jl and mov xor push mov (bad) cmp pushq data16 or (bad) cmp cld (bad) adc stos and fcoml clc or pop adc jle xchg adc xchg int shrb mov or in mov jae clc (bad) (bad) xor fcmovnbe lret (bad) rorb out mov movabs loope rex.RX mov sti jrcxz rex.WRB out fnop cmp rex.WRXB fwait mov in (bad) sub jne or xor adc rex.RB cltd jnp addr32 int3 mov movabs (bad) or fstp (bad) sbb xchg test rcll mov unpckhps push (bad) push mov or decl mov adc fidivl test rex.WRX adc lret lahf push add fnstcw (bad) faddl mov cmp ja mov adc (bad) (bad) ds retq or mov push adc rex.WX (bad) and rex.RX (bad) adc in (bad) idivb adc sub test stos outsl add pop gs fbstp fcompl and psrlq adc cmpsb loopne cmp movsb sub popfq xchg pushfq adc repnz rcl (bad) (bad) adc rex clc stc repnz and fmull outsb jbe mov (bad) adc cwtl adc rex.WXB jo and loopne stos mov add test mov adc sub xor push retq in jbe (bad) adc lret pop fmull adc (bad) push andb leaveq xchg push callq out imul scas rex.WB pop clc packuswb pop mov fwait movabs insl adc (bad) (bad) pop adc sbb lret repz adc (bad) mov ja mov (bad) hlt push faddp (bad) lahf xchg enterq pop adc pop lock adc ficomp (bad) int3 push add adc sbb adc add mov pop lock imul xor jbe xor xchg jp (bad) mov mov shll pop (bad) add rex.B xlat unpckhps imul jmp mov and sub xchg xchg xor or mov shrb movabs shrl adc testb adcl sahf adc sbb xchg in (bad) cwtl movabs adc cmpsl adc in retq xchg (bad) loopne testb mov pushq jmpq (bad) and xlat es cs sbb adc imul xor or sub push retq (bad) adc icebp cmp mov sub adc mov adc mov cs (bad) adc mov adc sbb cmp pushfq and or sub push pushq mov pushq rex.WR (bad) jno rex mov push rex.WRX data16 fxch (bad) lahf (bad) adc mov jne or rcr movsb fnstenv sub adc pop push xor rex.WRB testb cli sub adc fisttpl (bad) adc xchg xchg retq pushfq test sub mul jmpq push xor mov adc (bad) add adc mov retq movabs es mov xor lret (bad) jbe adc stc rex.RB (bad) sbb push or mov test test mov mov (bad) xchg and xchg jne adc xor movabs lret xchg (bad) sbb (bad) (bad) rcll xchg add rex.WRXB js lahf jno test (bad) (bad) rex.X sub fcoml outsb pop or movslq paddusw push out in (bad) callq adc jle fsts sub mov loopne test sahf (bad) adc (bad) adc adc es (bad) push adc mov lretw mov (bad) je xchg sbb sti insl and jnp adc push sbb mov pushq cmp cmp (bad) xchg sub push xor rex.X (bad) mov repnz (bad) push movsl add ss xor jp pushfq adc imul (bad) adc xchg clc lret mov push (bad) xchg (bad) cmp xchg stos mov and push push sub (bad) lock cmp enterq xchg adc adc sub xor loope sub (bad) jns or cmp lods adc repnz (bad) div in adc xlat sbb movsb rex.WXB cs faddl adc loop mov cmp jg adc sbb and repz adc fistl movabs rex.WB sub cwtl push xor cmpsb adc or gs add cltd xchg sarl pop (bad) adc test adc mov xchg mov xchg jo push je fistl add adc (bad) rclb mov cmp or xchg pop (bad) adc ss iret xlat sbb cli jl jno xor cmp (bad) ja xor adc adc jnp cmc rex.WRB xor adc data16 rex.B and adc mov lret mov adc pop (bad) pop (bad) (bad) sti adc xor pushq mov xchg rex sahf sub fdivs add mov (bad) xchg loop sub es pop adc mov jge adc pushq cmp fiaddl js retq xchg adc (bad) or sbb sbb jmp jne (bad) sti out cmp je rcl movabs adcb lods or xchg mov int3 jne add (bad) stos cs (bad) movsb rex.WXB adc xor in xor and std movabs loope rex.XB xchg adc jo sub jno pop (bad) mov adc adc pushq sti (bad) adc or xchg xchg fcmovnu fcompl pop cld pop movabs jo out je outsb test sbb mov vunpckhps jns fdivs cmpsl rcll int push stos adc shll (bad) xor adc test in sub jl sub movslq rex.XB loopne jmp test adc mov mov sub (bad) and je xchg out push loopne cmc rex in mov rcrb cli neg stos enterq and divb xchg mov fstpl cmp xchg adc (bad) sbb and xchg rorb stc (bad) mov xor out (bad) fiadd vandpd hlt (bad) adc add (bad) icebp adc xor xchg rclb iret pop sbb adc rex.WRX loopne adc xchg (bad) (bad) iret adc rex.X rex.W mov hlt or xchg mov es stos rex.WRB mov pop add add adc movslq out mov shr test cwtl sbb adc jo xchg mov sub push mov cmp xchg adc jge push nop mov loop fistl in mov (bad) adc (bad) fbld out enterq mov test (bad) ficoml and mov (bad) iret adc jno cmp adc mov vmovsd leaveq div rex.WX sbb clc out int3 shr adc cmc out rex.WRB adc fmul (bad) (bad) lock rex imull insl out and (bad) adc loop test mov movabs test xchg lods repnz adc movslq cli movsb sub pop (bad) mov in adc jae rex.WXB fmuls lret xchg (bad) (bad) fsubs adc rex.WR stc pop loopne cmp gs loopne adc xchg cs test rex.WRX faddl clc (bad) cltd out mov mov rex.RXB leaveq (bad) adc add add sub and cmp scas xor ja add in rex.WRX push fsubrs (bad) jno adc and insb mov mull adc stos push adc push jmpq (bad) gs int3 rex.W xor xchg add fcoml add or mov (bad) (bad) adc adc ss and cmp outsb xchg mov lahf hlt rex rex.RX movsb adc out mov (bad) push stos xchg outsl in pushq or shll (bad) xchg rex.RB and sbbl jbe adc sbb add xor cs adc mov mov jae jmpq mov rex.RX and (bad) or push (bad) rex.WB mov adc sti xchg movsl add cld (bad) adc test int3 lods imul adc add mov mov adc and movslq pop xor add cltd cmp insl je mov (bad) movabs rex.R test cwtl xor ss adc insl test fbld retq pop je movsl incb (bad) rex.RX mull or movabs adc (bad) out xchg (bad) sbb lea out clc sbb push (bad) (bad) out (bad) in jns adc mov cmc (bad) out mov xchg push lcall jns mov mov push fwait (bad) movsb movabs insb (bad) adc jle adc shrl loop sub je (bad) ss jae in pop add mov fnop adc (bad) adc outsl fdivs (bad) imul mov fwait adc sub jno scas add clc (bad) xor mov jb push or (bad) pop pop jp addr32 adc jge (bad) xchg adc in mov movabs mov pushfq cmp rex.WRB xchg jbe gs xchg adc jae jnp and fimull xchg (bad) mov jae cs cltd nop (bad) adc (bad) cmp rex.WRXB (bad) (bad) jmp hlt lods xor mov sbb adc or mov stos mov adc (bad) (bad) cmp adc mov jno adc movsb sahf adc or sbbl sbb rex.WR adc lock fistl cmpsl adc (bad) lret rex.RB rex.WXB pop mov cmpsl add adc jnp xor jrcxz sub in and jns (bad) out add movslq int add rex.XB add std popfq adc and xor cwtl sbbl adc (bad) pushq pop (bad) push rex.WRX (bad) adc cmp adc add (bad) rex.W add mov sti mov ficomp jne test fisttpll adc scas in fdivs adc xchg mov js jle imul adc stc stos add add (bad) mov (bad) push retq (bad) push mov cmp cmc add adc rex.WX rex.RX lret insb add rex.WB adc xchg std xchg pop lock add insb mov xchg (bad) mov cmp in adc movsl xchg hlt sub sbb adc (bad) adc pop outsl (bad) cmp mov adc pop lods (bad) xlat or movabs adc outsb xor iret insl (bad) xlat sub icebp clc adc enterq scas push adc out mov cmp adc (bad) xchg (bad) and mov ss imul (bad) std rex.W push pop (bad) jo push movslq mov or idivb sub pop xchg xor callq (bad) sub adc js xor cmp (bad) and enterq xchg test xor lahf rex.X adc jl rex.RB adc mov addr32 (bad) jle (bad) ss adc add rcrb testb add jo and adc pop mov adc mov ja sub adc insb stc xchg push adc cmc (bad) adc ja pop insl adc (bad) jg int3 push ficoml imull clc repnz adc adc xchg rex.RXB push adc adc (bad) fistl sti pop imul cmc fs or mov sbb push xchg jo movsb adc mov mov add sbb xor hlt test jnp stc adc (bad) adc retq ficom (bad) push rex nop sysexit nop xchg mov rex.RB cwtl adc js callq sub pop push adc lret sti xchg (bad) jle adc movslq xchg (bad) rex.X and cli add mov jp xchg xlat push test out adc adc (bad) (bad) adc rex.WRB and or lahf mov loope adc xor gs sbb (bad) adc mov pushfq (bad) adc mov movabs negl add (bad) or jo adc cmp fcom hlt pop movabs (bad) mov hlt adc cmp rex.WRB (bad) or mov adc pushq in sbb ficomp xchg popfq fmuls rex.WRX adc and movslq jrcxz adc fldcw and rex.WXB (bad) or cmp cmp adc retq leaveq xchg sarl adc (bad) outsb clc outsl lods xchg pop ja adc push pop xor jnp and movabs adc (bad) rex.WX mov adc adc jo (bad) jbe scas stc lahf and rex.WX test rex.RB (bad) adc mov sub adc push sbb retq shlb sbb clc in (bad) nop sbb adc (bad) ss adc in mov adc sbb cli mov and movsl adc jge mov sub in and xor mov (bad) out lods and cmp pop or (bad) adc fisttp adc jl insb je ficoml movsb callq vpsubw and rex.RB adc mov mov (bad) lret (bad) (bad) cwtl xor ss callq cmpsl mov mov and xor mov and (bad) xchg xchg mov mov cmp (bad) movsb mov es add sti (bad) adc jne int3 jne pop mov adc ja mov jmp (bad) jns mov lahf mov notb cs adc std movabs push mov fdivs in mov jmpq xchg outsl movl jle in mov sub sbb scas (bad) repnz enterq outsb xchg rex.WB mov rex.RB or add test (bad) sub jnp mov adc xchg jo shl cmpsb fadd lods cmp xchg lock stos test cli adc push rcrb (bad) rex.B (bad) fcmovbe adc mov xchg int3 adc test jrcxz adc mov rex.WRXB sub adc (bad) (bad) vmovdqu xor adc fist or movabs scas fs callq or cmc sub icebp rex.WRXB xor add sub int in rex.RX sub sbb xchg (bad) iret mov roll adc (bad) xor (bad) lret jrcxz movabs add xlat sbb cmp insb jbe outsl or mov jl mov cmp adc in insb movabs xchg cld rex.R (bad) movabs adc (bad) cmp sub xchg outsl sub stos test mov test mov push sbb pop push or pushfq pop xchg (bad) xchg cmp retq pushq xor repz mov cmp lahf ja shrl rex.WX and rolb adc (bad) out jns retq adc mov push cli cmp (bad) mov jne sti mov loopne enterq (bad) (bad) sbb jbe pop jns rex.R (bad) movabs cmp (bad) push mov and push adc (bad) fwait shr pop or adc adcl sbb jmp (bad) add cmpsb (bad) rex.XB pop xchg push adc jg mov adc add cmp adc stc data16 (bad) fbld (bad) mov and or lock xchg adc rcll or jle cwtl xchg mov xchg adc (bad) fdivs (bad) (bad) ss pop ficom gs xchg rolb mov fwait mov (bad) adc imul out (bad) sub iret icebp rex.RB mov or ja jle mov test int3 in xchg sub sbb jmp insb out xor rex.WRB out ja fcoms xor cwtl loop fisub mov jns jbe adc cs cmp push (bad) mov fild js mov out mov pushfq enterq add pop adc fwait rex.RXB enterq stos adc in pop sub (bad) retq (bad) add test scas repz cmp cmpsb add sbb (bad) xchg cmp (bad) mov sub nop lea cmp rex.WR hlt adc cwtl sub cmpsl retq (bad) adc xor pop adc icebp sti repz cmc or fnstsw testl sbb (bad) fidiv mov nop adc jbe or clc (bad) loope xchg jo (bad) test in cmp rex.RX (bad) adc xchg (bad) pop (bad) fbstp adc mov rex.RB out rex.WR xchg (bad) adc lock rex.B adc sbb (bad) xchg clc (bad) xchg cmc (bad) adc (bad) imul xchg adc in movsl loop clc sbb jl (bad) ss test adc iret cmp loop or push cltd pop fwait icebp sbb clc xor rex.RXB hlt or cmpsl adc sbb adc fdivrs movabs xchg xlat (bad) leaveq add mov lea fsubl imul adc add test jg adc movabs roll xor out rex.WR (bad) xlat cwtl cmp xor (bad) adc jnp js xor pushfq mov shll jge adc xor fcomip rex.WX (bad) (bad) or (bad) out xor adc jmpq (bad) rex.WRX pop iret mov push adc (bad) jmp push push and (bad) adc adc rex.X adc push mov jnp in clc mov scas cmpsl xchg jmpq adcl pushq adc movsb js and lret mov and (bad) lock adc (bad) add adc sbb adc adc movslq leaveq and retq cli (bad) and sub out leaveq (bad) cs test int3 loope adc stos mov xlat rex.WXB int3 jmpq fnstcw rol (bad) retq xchg movsb ds jmpq sbb sar fidivl scas mov ljmp jbe adc test stos jrcxz (bad) jmp rex.R cmp cwtl cmp cli rex.WRXB es imul jns repz rcl jmp adc in mov out mov enterq push imul rex.WRXB jp lods mov fnstcw movsb (bad) and test mov lock xchg xor push sbb add iret add (bad) jge adc lods sub adcl xchg stos data16 sti movabs push icebp push test jbe add fsubrs sub adc mov pop (bad) (bad) jnp fldt std adc loopne cmp or push rex.WRXB pushfq fidivrl jl adc hlt cmpsb callq adc (bad) or rex.WRB adc sti stos and cwtl nop sbb (bad) adc or movabs mov (bad) cmc adc cmp jae fcomps jne cmp adc lods (bad) iret adc push movsb fcompl mov pop mov adc (bad) push pop jnp xchg rex.RB or jl xchg sub xor cs sub (bad) pop xlat adc rex.R xor in mov push sbb lea stc pop push sbb adc test fldenv rex.XB lock ficoml (bad) push sbb push lret add xor xor repnz rex.W mov fcoml fdivl int jmpq pop (bad) insl or (bad) lods fstpt rcll rex (bad) sti xchg (bad) adc (bad) sub stos adc (bad) je sahf pushfq xor sub (bad) push scas or mov icebp test adc adc cmp (bad) sub cmc xchg fwait adc movnti mov enterq rex.WRB add (bad) fildll pop and sbbl sbb fisubrl rex.WRXB fadd sbb add xchg ds insl cs mov fcoml mov (bad) mov sub jp push mov (bad) push (bad) movabs idivb sti callq (bad) sub (bad) sub sar lods (bad) loope xchg push or xor cmp shll xchg stos out sub test adc adc sahf (bad) cmp (bad) pop xchg (bad) adc jle adc (bad) faddp adc rex.WB rex.RXB jnp xchg adc xchg insb push (bad) sbb or mov adc test fcoml leaveq xchg js mov mov mov xchg sbb movabs loop leaveq divb adc mov mov out pop cltd int3 mov fs (bad) pop xchg lahf or rex.B movsb movabs movsl and adc push xor sub xor rex.B (bad) add adc xor lea cmpsl adc (bad) ja adc decb sbb out jle (bad) adc hlt out (bad) adc rex.B data16 adc sbb sbb idiv es clc sbb cli push (bad) xchg jrcxz rex.WX shrb and (bad) adc adc fdivr ss and test add ror or or sbb add sbb adc fistpll adc jp cmpsb jl xchg adc outsb add ffree pushfq stc nop or push sbb enterq pushq cli sub and adc mov jbe or push xchg mov ficom mov pop push push rcll cmp (bad) movslq int sub mov xor xchg rex.XB ja repnz xor (bad) mov lret out or je cmpsl pop pop add (bad) loopne out (bad) rex.WXB repz repnz js adc push fbstp fsubrs std mov rex.R adc callq ss retq (bad) rex.WX adc rex.X rex.R (bad) rcrl xor insl adc ss in mov jno movsb lahf sub rex.RB faddp lock nop repz adc pushq jae and (bad) adc mov xor rex.WRX test (bad) add out (bad) iret (bad) push clc adc sbb mov lea loopne ficomp callq sub push xchg lods adc add xlat scas adc and ds sub cmp push jrcxz mov sbbb gs imulb sub or xor mov scas rex.XB and out or sbb rclb sub imul cmpsb (bad) lock pop scas insl (bad) pushfq mov jnp (bad) sub stc adc (bad) ficoml push adc or movabs pushq adc and or push mov insl cmc adc in insb (bad) xchg adc adc sub pop lea pop mulb shrb (bad) sbb stos rex.WRB cmp sub xlat movsl mov adc xor sbb mov adc leaveq adc movabs and sbb adc pop insl sahf outsl in shrb adc adc (bad) mov rex.WX hlt ja (bad) adc lods imul icebp in pop (bad) mov adc int cli (bad) adc mov jmp adc outsb (bad) (bad) (bad) mov adc pop clc rex.WRX js mov leaveq adc (bad) rex.WRXB movsb adc cs hlt (bad) ja mov adc sbb fstl rex.WRX insl scas adc jmpq adc (bad) cmp cltd callq rcll cs jl out adc push rcr fisubl xchg sbb enterq (bad) adc popfq es mov rex.WRX rex.WB pop mov pushq fisubr mov lock movabs lret (bad) cmpsb pop adc rex.WX in jle sbb rex.RX ss or push pop (bad) movabs jae insb mov and retq (bad) xchg test jb pushq sub (bad) adc sub out (bad) (bad) or and scas (bad) sub pushq movabs adc jno movsb cmp or xchg cmp mov mov sbb jl cmc jo imul repnz in sbb (bad) xor adc retq cmp adc (bad) xor cwtl push mov adc (bad) mov retq mov add adc sbb adc xchg adc (bad) sahf adc (bad) rex.RX lods mov jmp (bad) push sbb pop xchg mov jp mov cwtl (bad) xor adc xchg cmpsb xrelease sti cmp (bad) imulb adc jle (bad) sbb push cmp clc sub mov jnp idivl insb je jb sti fmull cmp (bad) rex.WXB and jnp mov test jno jns (bad) pop mov adc jle and add adc fsubl (bad) jns cmc mov rorl (bad) repz xor sub fisttpl adc jno std jrcxz rclb and mov pushfq hlt pushq xchg fwait cmp adc adc out movabs xor (bad) test (bad) (bad) mov rex.RXB rex.WRXB rclb or rex.WX mov (bad) sbb xchg rcl xchg mov adc pop movabs jg adc (bad) jge stos adc scas cwtl mov js pop cmc adc (bad) movsb imul sahf pop popfq cmp sbb or jbe cli xor sarl (bad) mov xchg pop (bad) cwtl pop mov adc xor ss sub adc sbb push (bad) sub adc scas callq js or (bad) mov and (bad) (bad) (bad) (bad) (bad) lock test sbb or pop xchg adc sub jb rcll pushfq (bad) adc add ja jbe adc xor add push sbb jo jbe pushfq outsl jl cltd adc mov adc movabs (bad) jge pop and (bad) rex.RXB pop in sbb out movabs push int jne mov push ss stos jns std (bad) clc (bad) (bad) retq lret mov cltd pushq popfq xor jbe sbb cmp xorl adc sub mov jrcxz pop push jp (bad) or lret add adc jmpq rex.RB adc mov or and mov stos (bad) jae add imul leaveq sbb cli and pushfq out adc rex.WB cmp in push loopne adc popfq rex.WRB jge adc insl pop (bad) pushfq rex.RXB adc fwait xor or lods jno es lea jbe ja or loope hlt mov lods (bad) mov hlt retq mov nop fidivr or rcrl jbe rex.WXB adc xor or xchg rex.WRX (bad) (bad) (bad) pop or (bad) xchg mov clc test push (bad) scas rex.WX cmp out adc push xchg lret adc or jo adc mov mov adc (bad) cltd fs (bad) jbe lahf pop rex.WB or scas sahf mov adc jae lock cmp mov add fadds (bad) (bad) (bad) in (bad) repnz clc xchg loop cli ficoml out (bad) callq jp (bad) cs adc scas mov retq mov adc pop je callq and ds nop (bad) lea push iret cmp loope mov mov (bad) fdivl leaveq imul (bad) fsubs pop gs callq fcom (bad) (bad) addr32 (bad) (bad) adc mov ja (bad) xchg ss lahf movabs jo or cmp jp mov jbe int3 out adc js add adc outsb mov sti mov adc vunpckhpd xchg fwait cmp sub (bad) lods leaveq xor rex.WX mov (bad) and sarb adc mov mov pop cwtl cli stc add (bad) xchg sbb sbb leaveq (bad) sbb sub jl fcmovnbe sbb add sbb (bad) idivl xchg adc sti push sbb mov movabs adc (bad) push sub pop or xor push adc cmp or xchg sub push adc mov sbb ss rex.WRXB repz ja mov adc mov rclb push or adc fsubrs leaveq pop xchg notl xchg rex.X (bad) mov outsl rex.RXB rex.RXB add (bad) rol or int3 mov pop cwtl xchg adc push or lock rex.RXB lretw (bad) cmp add mov (bad) fcoml adc (bad) adc in xchg callq outsl add pushfq lods movabs jno loop pop cld (bad) jmp mov and in sub push pop sti adc icebp cmpsb movabs and rex.WRX push (bad) mov subl rcr xchg push test adc loopne cmpsl rex.RX or (bad) or adc pop int rclb mov or imul xchg and sub pop js rex.WXB rex.WRX fsubs cmp adc (bad) pushq push imul xor adc or in pop (bad) xor xchg mov mulb xchg cmpsl adc mov gs test out hlt and test test shrl (bad) mov lea push (bad) cmpsl rex.RXB adc jbe out cmp rex.WRX sbbb test jp adc repz mov adc adc lret cwtl and (bad) push add xchg (bad) enterq cmpsb cmp xchg movsl adc rex.WRB clc add (bad) (bad) scas mov hlt rex.WRXB rex.RB jl test mov pop (bad) adc clc mov int (bad) rex.WRXB add adc cmp adc outsb lea std adc rex.RB or sub rex rcll cmp and add repz push adc bswap imul rex.WRXB xchg fildl movabs mov dec rex.RXB xchg xor (bad) xor callq fsubrs or sbb mov nop cmpsb mov jns pop enterq (bad) icebp (bad) cli outsl test (bad) add rex.RXB and xchg rcll rex.WXB clc and sbb adc and and adc mov cld rex.WRB xchg push xlat xchg (bad) (bad) push jmpq jbe (bad) lret push sti retq sahf rex.WRX adc add (bad) scas jp in lock mov stos xchg out adc push lret xchg (bad) or test xchg adc sbb cmp leaveq cli ja test cmc jrcxz cmpsb (bad) xchg cmp int mov (bad) jmp and adc jle je jmp adc sbbl sub adc adc and add in sbb adc pushq jnp or fwait test sbb lcall xchg sahf rex rex.X rex.RXB rex.B (bad) jbe sbb fdivl xlat (bad) push popfq leaveq adc in push (bad) (bad) adc cmp pushq jge rex.XB lods (bad) xor lret adc jne (bad) adc scas (bad) sbbb lock add and mov mov stos jo rex.X subl mov loop add nop sbb (bad) xchg rex.WR ja in or pop adc out retq cmpsl addr32 pushfq sub flds fldl sub (bad) insb sub xor xchg lock leaveq rex.WRXB jge movsl xor imul fcoms add cmp adc cltd pop mov adc adc pop out adc rex.WB ss adc xchg addr32 fadds xchg adc rex.WXB cmp jg and ds repnz (bad) movabs movabs pop es jg rorb or movabs mov xor xchg adc es rex.WRXB cwtl rex.RX mov stc adc retq add sbb adc pop fidivl adc retq faddl push (bad) rex.WX mov movslq mov mov mov out in cmp xchg lret adc rex.WR pop int3 xor rcll mov push (bad) sub push movabs rex mov rex.B rex.WXB sub cmp (bad) mov lods jno adc xchg (bad) or imul lea cmp loop (bad) and test (bad) xchg outsl retq or out pop add rex.RX push sbb insl loope xchg rex.B rex.WRX cmp cltd adc rex ds in leaveq adc int adc (bad) movslq scas xchg (bad) pushfq push xor (bad) push cmp push in adc mov out and pop push adc sub jrcxz xor push int3 adc mov sti adc xor out cwtl adc mov adc jg adc xchg add (bad) out fcomp jmpq cmp mov cwtl leaveq test cli out cltd push adc clc or push movabs popfq retq (bad) or and (bad) movslq and sub and out lea cmpsb xlat movsl test (bad) adc cmp callq add stc test out in (bad) pushfq (bad) jne lods (bad) adc movabs jle gs rex.RB xor clc adc pushq adc rex.WXB cmpsb add adc lods jg outsl adc or adc rex.RXB rex.R adc imul fimul callq (bad) lret clc sbb fs push adc sbb (bad) mov fdivl repz clc xor icebp test (bad) insl lock adc (bad) rex.RB lock (bad) adc push mov cmp clc jge rex.WRXB rex callq cmp adc and ss jg insl (bad) pop xlat clc int3 cwtl add or outsb jg adc cli (bad) repnz pop or mov jb sub cmp mov notl lret outsb xor pop (bad) mov pop adc mov pop (bad) (bad) jmp adc nop rex.XB lods xchg sti or lahf adc jnp retq add rex.WRX pushq push lret adc enterq adc mov xchg or xchg jle stos sbb in movsb pushq es mov rcrb fcoms jno sub pop (bad) mov rcrl rex.X jmp sub or loop stos ss cli adc rclb adc or jne (bad) int scas or movabs xchg adcl adc jmpq rex.WB pop and sbb pop sbb stc roll fsubrs xchg (bad) rex.WX hlt adc or jnp adc (bad) (bad) push rex.RXB andb imul push xchg mov or sbb xchg (bad) stos adc idiv callq sbb rex.RXB mov (bad) adc iret (bad) xchg pop imul sbb jge divb sbb jae cmpsl pop xlat cmp rex.RXB (bad) jne mov fisubl add adc fwait pushq and adc (bad) cwtl lret mov adc ja pop cmp (bad) (bad) mov lods mov push xchg xor xor rcrb add test cmc adc nop push adc fildl rcll std fcmovu pop jg ja or movabs (bad) out rex.WRXB rex.RB lods scas add loopne mov test push jne sub divl loope adc xchg cli sub clc xchg lock add adc cmp popfq (bad) adc fcoml and mov outsb jmpq rex.WRXB mov add ds jbe pop xchg push mov or push sub icebp orb gs pop adc retq (bad) retq iret adc retq in fs xor sbb jmpq fwait and fisttpl cs push mov fnstsw add sbb rex xor adc orl sub adc sti sbb and adc ss xchg jnp mov cmp xchg adc stos repnz xchg xchg ficompl fdivl lods pushq jnp clc (bad) mov (bad) ja cmp adc mov pushq clc xor sar sti rclb movslq loope nop or vunpckhps int3 xor (bad) mov xlat rex.WRB nop jrcxz mov (bad) fcomp leaveq (bad) gs pushq outsb push (bad) or cmp mov push adc adc cwtl jmp cli rex.RB (bad) fsubs (bad) adc (bad) clc (bad) rex.WB lock mov push test stos xchg adc enterq sbb mov cmpsb test rol cmp rcrb movabs or adc movabs push or push push xchg callq adc xor (bad) (bad) iret (bad) (bad) loop (bad) out jmpq xchg (bad) shrl sbb and adc (bad) imul jno cltd jge mov (bad) rex.WRX add jle adc xchg (bad) xor int fcoms movabs js (bad) fidivrl jl (bad) hlt (bad) test adc outsb pop (bad) rol mov xchg mov pop and and push cmp adc enterq scas sbb movabs movabs cwtl fstps (bad) fcoml mov lret push or ficompl gs outsb jnp mov clc rex.B rclb cwtl push push adc ror cld popfq adc pushq mov push xchg adcl (bad) fisubrl adc adc out jns retq xor (bad) pop push test test pushq push shrl rex.RX outsl movslq xor movabs jmp rex.X jae fadds jp popfq imul mov jno adc and or mov push (bad) xchg adc sbb and xchg lret jmpq jne sbb (bad) sbb jg fistl adc rex.RB rex.WXB adc xor std add xor shrl pop adc jle cmp rclb adc add in adc rolb jns lret (bad) cmp leaveq cmp push or lea jne adc mov mov out cmp cld test jns fmul sbb add push adc xchg mov in stos ja xlat (bad) es test (bad) xchg fdivrl fdivs adc test vunpckhps out (bad) cmp push adc lret (bad) jl adc ja lock out add out xchg rex jmpq sbb lret (bad) rex.WB sbbl clc adc rex.XB fidivl jbe xor fdivs outsl (bad) movsb adc test xor gs cmc mov add (bad) in cmp pop adc test test add pop out sub and (bad) adc movabs xor movabs add sti enterq imul sbb testb loop adc and int3 adc cmpsl pop rex.XB jmpq out mov callq adc push jl sub (bad) mov adc sbb mov lods (bad) in (bad) jl push adc nop pushq xor rcr iret adc add xchg adc (bad) notl (bad) outsb out mov (bad) cmp rorb stc jg jrcxz add jmp notl adc scas push adc pop jae scas adc stos lods lahf rex.B (bad) sti imul xor in xlat adc icebp (bad) repz roll mov and rex.WRB sbb fsubrs movslq xor adc stos fistpl jle cmp in jg adc jno pop rex.WX (bad) adc shll test add sub in xor add movabs pop (bad) rex.WX rex.WX rex.WXB lock xchg divl mov sbb and loop (bad) outsl adc imul jb lods (bad) mul adc adc cmp mov movsl adc loope (bad) add mov jmp clc add scas pushq adc int sub sti and loope adc jns push fnstenv adc scas push adc sub push (bad) ss sbb stos adc or jge lock hlt fstp (bad) rex.X faddl ss push adc loopne sbb xor loope rex mov jl popq lret mov xlat mov xchg stc (bad) adc rex.B mov sbb rex lret mov (bad) sbb and insb push adc adc sub xor push jrcxz and clc mov (bad) lock (bad) cwtl (bad) cli stc cmpsb pushfq (bad) (bad) or xor popfq ficoml push cli (bad) outsl movabs cmp adc xchg iret (bad) xor adc mov xor adc mov pushq adc mov divb rex.WRXB and vandnps callq leaveq (bad) movabs xchg cmp cli jo in rex.RX mov add adc rex.XB xchg adc xlat mov hlt adc (bad) add (bad) adc mov (bad) adc sbb add bndldx iret xchg push rclb stos scas stos rorb adc or adc rex.WB mov insb or mov push adc movsl repnz adc cmc mov in sti rex.W xor push adc adc (bad) sbb pushfq cmp fisubrl jg imul mov adc mov cmp push cld jnp mov xchg (bad) sub xor adc enterq pop imul mov sbb outsb (bad) sbb cltd fbstp shll test add mov rex.WRX mov sarl jmpq adc rex.WRX adc cmpsb sub lea xchg repz lock (bad) outsl js pop xchg adc xchg xor sbb fwait (bad) lret lret mov jne addr32 test cwtl pop (bad) xchg adc xor xor xlat rex.RX cs rex.WRXB mov (bad) sub push jb,pt (bad) (bad) lret and adc push adc mov adc rex.WX xchg rex.R out jge sub enterq adc cltd sub rex.B adc callq adc (bad) nop lods xchg data16 and adc rex.WX pop adc cmc cmp or pushq in sbb sbb (bad) pop (bad) xchg jns push lods movsb sbb movsb mov shll jg adc fwait (bad) (bad) (bad) (bad) mov (bad) icebp rex.RXB jmp adc pop nop xchg add pop or pushfq mov push sub out and or push or sbb adc mov loop sysret sbb xchg xchg pop or adc xchg push mov mov cwtl sub (bad) adc or retq sbb pop rex.WX jmp mov fsubrs xor adc push sub sub or jae cmp test (bad) in adc movabs pop test imul and and je add cmp mov imulb rclb stos jae lock pop (bad) adc xor leaveq rex.RB movslq push int loop (bad) gs rex.XB js xorl add int3 pop lret mov loopne mov fist and test fisubl adc jge (bad) stos adc movsb mov fldcw callq outsl and mov adc lods fwait mov rex.RX (bad) fbld adc adc xchg scas cmp adc rex.XB mov (bad) jge mov pushfq add (bad) pop out push jg adc adc fs or repz mull and push xchg jmpq adc movabs jmp in mov sahf movabs andb rex.RXB push adcl mov pop pushfq or adc jle adc leaveq (bad) icebp mov mov or and rex.RXB lret clc xchg adc cmc add jne or rex (bad) test adc cmpsb fstpt cltd testl packsswb sub push cmp cmpsl jp adc lret lea adc sbb sbb (bad) ficoml mov sbb clc pop rex.WB xchg push movabs mov adc loope fwait add (bad) adc rex.WXB stos cmp (bad) rex.WR and leaveq loop sbb pop adc push iret rex.R mov add push and mov retq fldenv clc cmp mov cs ss adc (bad) (bad) adc or jno cmp (bad) movsl cmp rex.RB or jp ds adc (bad) cld pushfq (bad) stos or push sarb gs add (bad) xchg adc (bad) fcoms mov sub add or mov (bad) mov jns pop movabs (bad) pop adc insl insb jrcxz rex.WRB cmp sbb sbb (bad) vshufpd (bad) movabs retq mov adc (bad) jno ds cwtl pushfq mov je mov sbb jo rex.WRXB xchg icebp mov (bad) mov push ss pushfq retq (bad) adc xchg js rex.WXB adc rex.WRX (bad) (bad) lock je adc test push push adc cmp sbb mov pop (bad) and (bad) rcll rep or sub movsb addr32 cmpsl xchg jl sarb fs clc (bad) ficoml lods addr32 rex.RB jg sub push (bad) adc (bad) pop fstp stos fistl movslq adc and (bad) mov fist jne je adc in stos lahf insl icebp adc popfq push or sub mov jge addr32 (bad) gs enterq ds fisubr retq jno sbb (bad) (bad) mov jmp sbb out (bad) sti push fnstenv rex.W rex.XB rex.RB jno sub stos out or cmc (bad) add not xor or xor in (bad) sbb adc cmp adc adc stc xchg jge (bad) adc sub add pop jns movsl retq js pop movsb (bad) rex.R gs adc xchg cmp (bad) jmp add mov (bad) jp pop test adc jmpq adc xchg pop cmp (bad) jmp mov jg adc movslq xor cwtl cld and jle lret sbb sub movsb sbb lock sbb movsl (bad) sub enterq unpckhps cwtl addl add mov cld cmpl pop popfq xchg sbb out (bad) jbe loop ds push pop pop mov pop and adc rex.WRX js clc mov (bad) rex.XB sbb (bad) adc jge movslq sbbl adc sbb jbe rex rex.RB repz pop cmp pushq popfq adc jrcxz stos sahf adc out repz adc cmpsl rex.RB push cmc cmp rex.WRX (bad) mov jl retq fisub gs and cmp xchg rex.RXB pop adc movslq adc ficomp sub mov imul hlt (bad) cltd adc xor clc and movsl (bad) (bad) mov (bad) out sub cld loop mov adc notb stc sub (bad) hlt movabs xchg add cmpsl push jbe mov mov (bad) xchg stos enterq xor mov adc bnd mov pop mov sub out movsl callq (bad) xchg rex.WRB ds add (bad) jne sbb shr adc sub adc jne jle adc or xchg or cmp jbe pushq xchg scas adc mov or jp lods (bad) adc cwtl (bad) adc mov (bad) mov adc cmp movabs (bad) or xchg adc (bad) sub add (bad) push (bad) callq mov out xchg xchg rex.RX out imul xchg pop mov rex.WRB stos (bad) test sub jo add push adc mov sub fdiv jne mov and adc cmpsb jg adc (bad) xor add push cwtl pushq xorl cwtl clc retq xor jle mov adc (bad) add jnp (bad) vmovaps ss mov rex.WXB jl out loope movabs (bad) jo cmp gs adc jp sbb jl (bad) movabs jg fadds ss jo (bad) jp adc mov jrcxz popfq xchg pop adc xchg test (bad) movabs repz lods in and (bad) mov adc test xor mov cmp rex.WB data16 push outsl hlt out (bad) push jmpq mov adc lret mov sahf add out adc movsl rex.WX pop adc sub imul (bad) je adc movabs divl cmp xchg int sbb sahf test lret mov push (bad) out and or adc rex.WRX xchg rex.RB jl fs (bad) (bad) pop sbb adc mov sub sub cmp ja (bad) fidivrl adc jmp jo adc test and adc push push mov rex xchg (bad) xor adc xor rex.RB xor add pushq lock (bad) rex.WX test ror movsb xlat insl cmp (bad) ss jnp cwtl or and push pop clc sbb (bad) std jg push or not int negb roll jo adc sbb rex.RX rex.WR shll adc loopne mov lods je (bad) clc ja adc (bad) enterq adc callq xchg (bad) clc popfq xor lret (bad) callq xor cmc idiv xchg and or jmpq xchg adc mov movabs (bad) xchg jne adc rex.WRXB (bad) (bad) (bad) sbb fwait adc testl rex.RX test notb (bad) sbb jb pop adc cmpsb icebp push (bad) and and adc insb int sub add pop xor (bad) adc (bad) lock xor cmp movsb insl enterq lret (bad) fisttpll add jo push or (bad) imul (bad) outsl movsl out sub cmp sbb xchg pop adc fwait data16 rex.RXB imul movsb (bad) sti in mov pushq (bad) fdivl fmul (bad) add or outsl mov (bad) (bad) popfq (bad) cmc adc jbe fbld mov movabs loopne pop cmp mov movslq cmc or (bad) movsl push fistl cmp nop std clc stc (bad) sub (bad) and pop movslq cld mov jbe cs sbb mov mov xor ficoml mov add or pop adc leaveq mov cmpsl icebp jg (bad) sarl rolb adc sub mov jge xchg add (bad) movabs (bad) and and (bad) lahf (bad) adc clc negl movsl jge adc rex.WR mov rex.B sbb push xchg mov fisub mov jrcxz push sbb je insb or incl (bad) pushfq rex.RXB push jnp and xchg (bad) (bad) adc xchg (bad) mov out jg sbb sub cli rex.XB mov (bad) xor lret xor jnp and or push clc imul test movsb hlt sbb mov movsl xchg adc mov mov (bad) xlat sbb adc cmpsb push mov loopne jne stos sbb cmpsb and adcl jno cmpsl leaveq rorb lea adc movabs and and xchg repnz xchg (bad) mov push xor or (bad) jl (bad) insl mov cmp mov push sbb xchg xor or push mov rep cwtl movslq xor fwait mov in nop rex.WX fs mov mov xorb mov adc scas out lret adc jae in notb (bad) cltd roll (bad) (bad) xchg ror jp (bad) mov cmp imul rex repz rex.WR movsl cmp insb fimull adc mov mov fildll sub rex.WXB (bad) pop adc xchg out stos loop and test adc cmp ja adc mov or sub sub xchg adc hlt imul retq or stos xor jge adc test je lea sub std adc ss cli sub jb adc push clc sub rex.WRXB push mov jg cmpsb adc mov jno (bad) push fprem (bad) jne mov nop jmpq in adc pushq sbb rex adc rcrl rex.WR cmp or pop and out add xchg adc push cmc jnp ss mov (bad) cmp (bad) jmpq jo pop fsubr mov out add pop ds and lahf (bad) adc imul rex.W mov (bad) mov and sbb xchg (bad) pop adc (bad) mov rol orl adc lea rex.WRX imul scas test in cli xor (bad) pop mov jae clc rex.X mov (bad) std xor jbe adc loop mov cmp and insl xchg adc movsb mov cs test adc imul and adc bnd (bad) cmp in xchg pop adc xchg (bad) xor adc sub xor mov rex.X or rex.WXB sbb push rex pop adc jo push xchg adc lret pushq add cmp jle cmp sbb sti xchg or (bad) movsl fldenv fcoms sbb movsb clc (bad) nop mov lea xchg adc mov (bad) adc xor adc adc (bad) rex.RB int rex.WRXB enterq adc push adc jns (bad) notb out push pushq sarb rcll lods mov callq sahf hlt scas test adc push sub test (bad) js lods mov sub or adc movsb test not mov lock adc lret sbb (bad) (bad) mov loopne shrb (bad) (bad) pushfq sub adc mov sub adc gs cmp jg or jno sti adc jl pushq clc (bad) retq cmp lock or push or sub jle subl cmp fs out imul je push mov std ss rex fdivs clc roll or or rex pop sub xchg mov lea adc adc ja jb adc jmpq (bad) hlt xor adc pushfq int3 stc or sub and adc imul pop mov (bad) fcompl (bad) stc sub cmp mov pop mov xchg mov cmp (bad) decb adc pop (bad) or fwait rcll pushq test mov jle cmpsl fs lods jmp adc out (bad) and (bad) cmp (bad) orl frstor or (bad) pushq adc xchg fcmovu nop cltd in sub sub pop imul movabs movabs xchg adcl adc sub fildll (bad) fmul mov test add scas xchg adc fimul sbb movabs in rex.RX jns sbb (bad) movabs mov fwait in (bad) insb clc ss sbb sbb sub xor adc xchg or (bad) mov or jmpq add rex.WX lods push adc and sbb add movslq sbb (bad) mov cs stc rex.RX repnz sub movsl movsl es xorb insl jo mov mov adc pushfq stos and adc xchg push xor adc (bad) fldenv adc out sub mov sub (bad) push and movabs jg jge adc and callq scas sarl pop mov in retq out rex.WR or adc imul jmp cmp hlt rex.WRX adc adcl adc movsl (bad) cmpsb (bad) adc repz sub cmp in mov pop jno mov pop adc mov (bad) mov jno (bad) pop jg and (bad) enterq lock jbe mov (bad) fsubrs mov stos rex.WRB fnsetpm(287 adc repz and scas jo loope adc pushfq jnp adc (bad) movabs (bad) (bad) stos or mov sarb jrcxz (bad) mov test (bad) std movabs xor rex.WXB test int cltd shr int3 ja push rex.WR xor and mov adc ds test rex.R fs (bad) rex.RXB sub mov (bad) divb adc repnz mov (bad) sbb iret outsl mov stos ficoml xchg xchg or jmpq jne vunpckhps lea pop (bad) fucomp rex.XB sub adc xor sbb jb pop mov sbb cmc sub xchg xlat mov pop (bad) pushfq (bad) cmp imul sbb adc jns (bad) push adc std pop lret adc (bad) sub pop nop leaveq jae fcmovu sar mov setge mov insl fsubrl js nop pushfq push clc cmc adc je adc adc int icebp addr32 pop lods rex.XB jge add cmp (bad) add xor and adc test or pop in sub ss pop loope and adc cmpl cmp rex.WXB retq gs jb loopne mov fsubl insl mov rex.WB sub sub (bad) xor mov js pop lret fs in adc cmp pop out jmpq adc xor mov mov or push (bad) mov mov adc mov cmc fld insl xchg xor xchg rex.W (bad) adcl pushq or cmpsb movslq rex.XB ficom add insl adc in jrcxz incl mov pushq and adc repnz rex adc fs mov push out test mov xor sbb (bad) repz jmp (bad) test cmp or or pushfq add outsl fistl repz sarb adc imul scas test shll cmp adc jp insl fcoml jrcxz cwtl lret adc retq callq repz and adc mov gs mov jb (bad) imul movabs out adc or icebp adc in stos cmp add (bad) xchg (bad) rex.RXB test in fcoml sbb pop adc fbstp callq cmp rex.WRB mov outsl xchg mov adc rex.R adc rcrb ds jmpq fsubrs xchg cmp data16 xchg fs scas rex.WRXB (bad) or (bad) adc sbb out (bad) imul jnp (bad) jrcxz stc add jl mov pushq xchg (bad) (bad) mov stc (bad) imull pop push (bad) and rex.WB rex.RX add (bad) xor jge adc rorb rex.R es pop mov adc push test cltd or xchg jno (bad) ss fsubs jb mov testb adc add sbb (bad) fcoml push adc (bad) (bad) add movsb cmp adc loop (bad) loope lret xchg nop pop imull gs enterq adc repz xchg xchg and test lahf xchg sbb mov fsubrs rdtsc jns jnp xchg jmpq pop sub xchg (bad) je mov cwtl lock (bad) (bad) adc (bad) jbe sbb add adc (bad) (bad) lret cltd or sbb pop insl (bad) xor test cmc add rex.RX cmp xor (bad) (bad) jnp std in mov rex.X retq (bad) and jp fistpl pop out or sarl jl adc cli mov sbb sub mov mov (bad) adc imul cmp xchg cmp rex.RX (bad) (bad) jbe je rex.WB xchg xchg sbb (bad) (bad) mov sub jle lock adc enterq loopne xchg cwtl pop xor adc sub test mov rex.R jp mov adc imul (bad) pushq popfq movb add mov sbb adc xlat sub jne out rex.B repnz sarl adc mov (bad) (bad) adc mov adc rex.WRXB or cmp div rex rex.WR jge fldl or rex.WRX ss jne jmp fdivrl sbb out rex.RB iret pushq movsb jg mov pop or mov (bad) nop push xor mov cmp adc or jmpq add rex.B xor clc mov gs jns xchg stc cmp adc movslq cs adc rex.WX xor pop rex.RB rex.RXB pop rex.WXB cmp shlb push cwtl je (bad) (bad) rex lock rol xchg movabs pop fstpt mov xor rcll movabs out rex.WRB adc jp test clc xchg mov out (bad) sub popfq xor (bad) (bad) pop jp adc sub sub adc mov pushfq pop xorl (bad) clc in scas (bad) adc xchg sbb adc jnp leaveq jp mov jno mov adc ficom rex.WRX mov pop or (bad) adc sti push (bad) or rex.RXB or adc push movabs fcomps cmc insl jl out jbe popfq adc lods xchg je jno (bad) sub scas adc rex or push mov xor adc jne rex.X imul adc (bad) jbe movabs push or push sub test xor lods cwtl adc mov cmp (bad) test pushq jnp (bad) mov int add (bad) mov mov mov (bad) movabs sub fcoms hlt rex.RB push (bad) (bad) out adc data16 xor idivl notb or adc add rcll fstl cmp xor cmp lret pop adc loopne fcmovbe adc (bad) (bad) (bad) (bad) or push cmp lods jmpq adc mov adc adc (bad) loop movsl (bad) adc xchg insb sbb adc (bad) xchg (bad) cs and fwait adc sarl (bad) adc xor (bad) xor jp clc push or rcll push xor cwtl add xchg jmp rex.WRXB (bad) test out fnsave add lret movabs xchg out jbe adc (bad) adc cwtl adc xor mov add (bad) add fimul movabs mov lods and mov (bad) enterq clc adc sbb xchg movabs hlt push popfq lods or fmuls cs adc push (bad) (bad) sbb lahf data16 pop adc lods rex.WB sub fs adc loope (bad) jne adc or lock (bad) sbb mov int jno pop lret fdivl enterq jge cmp xchg sub rex.X rex.WR je or cld callq push add adc movsb xchg (bad) movsb hlt xchg mov test (bad) adc in in jp adc cltd jno (bad) adc mov in adc pop jbe insl push adc xor cmpsb jrcxz or sbb loopne jmp sbb popfq cwtl test adc loop stos add (bad) (bad) mov adc mov jns cwtl nop (bad) lods (bad) xor mov mov xchg xor rex sti lods xchg adc in movsb and adc mov adc stos mov adc adcb xchg gs (bad) adc imul retq test xchg rex.WRXB add (bad) outsb pushfq imul xchg sti fsubl and pop adc enterq adc lret (bad) and and mov or pushq cmpsl adc or pop cmc adc add sbb movntq lahf sbb imul callq es mov pop adc ja mov adcl sub sub (bad) adc sbb (bad) (bad) popfq lret movabs stos add faddl mov cmc sti rcl jl cwtl js pop xchg (bad) fadds cmp adc (bad) rex.XB adc (bad) rex.WRB xor (bad) adc in stc (bad) or mov je test lret jno (bad) fs mov rex.WRB adc rex.WRX jne adc sbb notb add mov (bad) (bad) leaveq jno adc lret cmp rex.RB callq js enterq (bad) push loop movabs imul pop out fwait adc fdivrp xchg cmpsl je adc cmpsb mov adc rex mov mov and sub (bad) sub jbe (bad) pop stos hlt xlat mov in adc add fcmove or (bad) jne xchg mov (bad) cmp and mov push adc (bad) sbb and pop rex.WR xchg movabs add cmc nop out sub leaveq sub xchg add rex.W jbe rex.R lock (bad) xchg xor movabs mov sbb or mov (bad) imul outsl push jno fisubr outsb adc pushfq clc sub (bad) lods cmpsl sbb in sbb mov cli insl add movups rex.RB std adc jg rex.WXB or fiaddl xor rex.WXB clc fs xchg rex.WB cmp or mov (bad) xchg (bad) or std rex.WRXB jrcxz repnz mov push cmp cmc (bad) mulps test push xlat mov (bad) lea hlt rex.WRXB adc jnp (bad) (bad) adc pushq (bad) movsb adc xor rep sub fildl adc loopne cmpsl lods fist ss or movsl xor rex.R nop or jns or adc imul jmpq (bad) jg ffree cmc xor callq outsb lahf cltd stos (bad) adc sti fwait movsl rex.B xchg push test adc add rex (bad) rex.R out rex.XB rex.WRXB fadds cltd test movabs imul shll loop mov in xchg ja (bad) (bad) sbb outsl rex.WR or repz hlt adc rex.RXB mov je pop pop (bad) mov push adc add adc rex.B ss adc push rex.WR adc adc jns adc jge lret push or data16 xchg rex.B clc (bad) mov cltd cwtl xchg and in (bad) lock pop jp pop test (bad) adc xchg test insb (bad) test and callq push clc int mov (bad) leaveq movabs add rex.RXB fistl (bad) cmpsb imul test xchg adc pop mov and rex.WX stos adc xchg fwait adc lret adc mov push gs movslq fsubl xchg rex.XB xchg mov je repz mov frstor xor add adc mov loop cwtl add (bad) jae negb (bad) add (bad) adc fbld adc imul adc rex.WB imul imull xchg pop adc (bad) je fucomp pushfq outsb (bad) stos ficompl cmp rex.WRX repz stc xor jge movabs in jmpq out sbb (bad) sub (bad) adc mov rex.WRB std clc (bad) lods adc jno lods (bad) adc lret movsl lret xor (bad) in out clc test cmp pushq movabs sub cmp adc (bad) (bad) adc je (bad) in sub push movsl loop stos cmp shrb xor rex.RB add adc pop fimull (bad) adc notl lretw mov mov mov or and xchg adc setb jae push insl jne repz push mov imul add (bad) clc xchg xchg std stos (bad) test mov (bad) xor jmp sbb adc (bad) xchg clc fstpt adc cmp loop movsl movb pushq mov xorl xor xchg add adc sub add adc or xchg (bad) adc jp (bad) notl lahf rex.R test xchg movslq xor in (bad) stc mov rclb mov (bad) out (bad) rex.W adc or sub cli lods xor adc lea (bad) add bsr mov lods hlt (bad) sbb (bad) loop adc test ss xchg ja rex.WRB movabs adc mov andl adc xor adc fiadd cld fsubl and adc (bad) sub test (bad) push pop adc (bad) rex.WRXB sbb jbe shrl adc (bad) mov (bad) sar lock rex pop adc pushq rex.WRXB adc mov xchg (bad) in leaveq rclb fcoml sbb insl sub leaveq hlt (bad) js pushq movabs jns pop in xchg js nop mov sti and (bad) rex.R lea in cmp adc xchg sbb shlb (bad) lock jl not add mov (bad) fwait adc add xabort mov xchg mov rex.RB callq jge adc sbb cmp (bad) clc mov push rex.XB adc fs (bad) xchg xor mov rex.WRB xor add rex.RXB mov scas jmpq push test js pop imul jl leaveq rclb test mov ja (bad) mov (bad) jo rex.WRXB (bad) adc mov loopne xchg rex.X test jne sbb (bad) (bad) (bad) loop rex.WXB push (bad) insb cmp mov push leaveq push cmpb adc (bad) lret or xchg (bad) insl (bad) add (bad) (bad) jns jne adc and in adc incl xor pop lret cmc mov cmc (bad) jbe adc cmpsb (bad) (bad) loop test (bad) data16 xor (bad) push adc (bad) and (bad) pop in xor lret (bad) mov jb jno jmp xchg (bad) or and int (bad) stos adc or movabs push lock cmc jmpq jno rex.WRB adc (bad) xor xchg mov je (bad) cmp mov js xor popfq (bad) xchg test jnp xor add pop rclb cmp xchg (bad) movabs (bad) or jrcxz out lea (bad) mov callq push jl adc sbb cwtl push stos mov (bad) pop repz fsts xchg adc cmp insb add int jp fs fcompl rex.X lock pushq cmp int3 jnp je xor jbe adc rex.WRX mov (bad) sub (bad) or ficomp in pushq movsl xchg mov xor pop adc rorl adc rex.WXB rex (bad) adc xchg fldcw sbb movslq ss popfq and imul (bad) mov pushq mov mov jns mov or adc pop rex.WRB adc (bad) insb push mov movsl fwait adc sti adc clc fsub cmp xchg rex.WXB stos jne clc sbb and cmp movsl mov adc rex.WXB push adc orl rex.X (bad) cmp (bad) lods or xchg cmp adc (bad) data16 or (bad) js adc imul jmp add nop pop (bad) sub adc jle jb adc xchg push xchg (bad) adc retq pop adc adc enterq xlat add shrb not callq pop cmpl notl ja fist push icebp mov cwtl add movabs shrb ja sub scas mov outsb adc lret rex.WRXB xor mov (bad) js or mov sbb xlat xchg push movsl (bad) xchg adc and movsl fsubrp je add movabs shl shr adc jae rex.WX push fcmovnu lods adc sbb hlt and mov xchg adc rex.WX jl pushq jns gs icebp adc xor es or mov mov xchg adc jge add adc push (bad) retq notl scas mov test jmpq push adc (bad) rex.WX int3 cmp (bad) push movabs int (bad) adc adc sub xchg adc (bad) jo ss sbb hlt insl (bad) imul (bad) push (bad) clc adc clc (bad) mov adc (bad) (bad) loopne (bad) mov adc jns and sti adc and mov (bad) rex.R rex.WX movsb rex.RB outsb sbb cmpsl sahf jmp push adc add vmovss push rex.WXB pop cmp mov jrcxz mov xor mov loopne movsl js adc push mov pop clc icebp (bad) sti sub pop adc test sbb xchg stos push push and fdivrs retq sbb cmp rex.WRB movsl movabs (bad) rex.WXB (bad) adc mov imul leaveq fcoms and xlat fsts (bad) mov pop xlat movl cli or (bad) mov addr32 insb loope rex.WXB callq (bad) adc pop or and faddl rex.X cmp inc pop push (bad) sbb jne adc cmpsb push xchg (bad) gs movabs rex.RX pushfq mov stos jg mov mov push sbb mov retq insl or cmp mov rcrl addr32 pop or pop cmp push pop outsl (bad) adc addr32 (bad) jns sub cwtl rex.WX or out pushfq adc cmc lods (bad) adc pop sub jne xor sub pushfq (bad) (bad) adc rex.WXB mov ss (bad) (bad) vmulsd jns notl retq loopne callq nop mov xchg adc adc gs sub scas cmpsl (bad) mov cmp sbb sbb fildll lods es sub mov (bad) push rex.WR jnp rex.RXB ss (bad) cmp rex.WX (bad) or mov fwait or sub cltd sbb mov imul test test jp sub add (bad) pop ror adc pmulhuw and adc leaveq lret adc cmpsb icebp cld jae (bad) lea cmp rex.WX mov push cmp xchg sti adc je movabs roll (bad) rex.B add stos in jo adc (bad) (bad) mov adc insb ja xchg rex.WX xor shll pop cmpsl cmpsl xchg cmp xlat sbb fnstenv sub shl push (bad) xor adc pop in jae xchg push shrd (bad) cmp rex.WX test push push adc adc fst adc fs pop rex.B sarb (bad) sub cmpsl outsb and fiaddl lods sti xchg (bad) stos adc loop rex.RB mov test or mov add cmp add pop stos loopne lods pop pop pop pop movsb (bad) xchg jmpq mov je jp or and cmpsl loopne fcmovb gs adc (bad) loope (bad) adc (bad) retq fcomp loop pop js fs sbb scas mov pushq stos rex.XB rex.XB callq xlat rex.WR in pop icebp lods sub rex.XB insl rcr jns vunpckhps sbb sub movslq out test adc scas cld gs or (bad) adc rex.WRXB rex.XB xlat test adc xor fcmovbe shlb notl in fdivrl mov jl xorl clc jge in in (bad) (bad) xor sar mov add xchg add out adc jge (bad) xchg callq (bad) pop imull cmp andl clc rorb push test (bad) xor add cltd mov mov fbstp rex.WRB retq cmpsl sbb idivb adcl rex.WR push loope or data16 jae add adc ss xlat or out xchg data16 push lret adc es scas adc gs data16 rex.WR bnd (bad) xchg adc cmpsl cli mov divb (bad) and (bad) lret movabs in rex.RB callq adc out jbe xchg add (bad) (bad) (bad) xchg or out imul adc cmp mov jge mov sub je rex.W test adc cmp fcoms mov ss mov loopne jne cld insl adc rex.WR test adc mov js (bad) (bad) mov xchg rex.WB rex.WXB movslq adc negb fiaddl repnz xchg sub adc (bad) ja (bad) adc mov test es rex.X (bad) adc rex.WRB jno fdivl xchg rorl in rclb (bad) adc jp cs cmp push xchg iret mov adc jb insl rex.WRXB repz fstpt add lock lret test jrcxz xor pop mov repz mov scas rex.WRXB fs (bad) sti mov sbb ss adc clc xor rex.XB jae mov rex.RB lods nop add fstps mov add adc rex xchg movabs lods mov rex.W test cmp outsb adc or push or mov sbb xor cmp sub sub push lods and rorq xchg imul popfq xchg rex.WB movabs subl fs mov jrcxz rex.RXB cs adc jmp or int xchg test adc rex.X rex.WXB leaveq adc lret pushq out (bad) fs testl adc mov stc adcb adc mov push (bad) adc xor fmuls repz cmp sbb mov fldcw in jbe es (bad) xor mov ljmp je mov jb rex.WX ficomp cmp fadd cmpsl out cltd adc clc (bad) pop xlat cmp adc rex.WR outsb and (bad) adc lret or rex.WRB add jne pop sbb cmp rex.X pushq mov xchg js adc (bad) mov ds sub cltd mov jge cmpsl in test pop out fwait fs adc xchg (bad) clc mov xlat rolb sub fsubl (bad) loopne cmp sub (bad) (bad) (bad) push and fidivrl jns rex.WRB xchg fcomps (bad) test jb loop sbb lods adc sub in mov ja lret and enterq outsb pop jo cmc rex.WRX rex.WR (bad) mov cmpsb cmp sbb xchg sub pop rex.WX pushfq lea in repnz jle mov in (bad) (bad) (bad) adc jge outsb adcl adc rex.WRB ja xor xchg push xor hlt (bad) (bad) mov xchg scas jb in xchg adc and and in adc nop adc lret lret adc jb pop rex.RB in xlat xchg and shlb pop fnstcw or mov movabs lods jmpq pop jb push rex.WRB adc out rex.XB xor mov in pushq adc push imul lret xorb pop pop imul iret jmp cmp or add adc push rex.WX cs (bad) pop or adc cmp in (bad) xor jl sbb int push adc ja or movsb pushq cmpsb jmpq (bad) jns mov push (bad) adc repnz fsincos mov jbe cld fs (bad) cmc push or stc outsb rex.B adc es mov add (bad) jns sbb xor (bad) cwtl adc xchg (bad) movslq (bad) rex.WX adc rex.WRXB fisubr enterq or adc stos vhaddpd (bad) or adc jns sbb data16 jp adc or (bad) test and mov (bad) (bad) gs movabs (bad) stos (bad) adc push rcl rex.WB cmc hlt scas nop je jno adc push (bad) ficoml jrcxz pop retq hlt (bad) adc outsl mov fsub in (bad) add cwtl movabs mov add add (bad) mov adc mov sahf mov shll mov rex.WRX mov cmc mov adc movabs shrb adc mov mov cmpsb (bad) icebp pushq pop mov or jns mov add test stc adc jne in push (bad) rex.RX rex.WRX jp xchg sub rex cmp lret cmp adc (bad) in test mov popfq adc xor rex.WRB adc rex.WX xor xlat mov outsb push jp sti adc pop xchg jmp pop cltd cmp cwtl (bad) cltd imul adc add lret fistl push (bad) mov adc (bad) movsl movabs fcomip xchg (bad) enterq adc cmp js (bad) xchg mov shr fdivs cld mov mov jne cmpsb mov mov (bad) in (bad) jmp adc rex.RXB cmpsl adc repz xor fdiv rex.W jb clc lret pop adc retq fnstcw in xlat fwait (bad) cmc and sub clc rex.WX (bad) testb (bad) and mov fistpll (bad) int xchg repnz lods jbe add mov xor ja faddl rex.WB scas (bad) lret adc mov or mov adc or jmpq test (bad) mov outsb add vpxor lock sbb insb (bad) rex.WRXB add or (bad) ja adc sub clc or mov jns and push jae mov test rex.WRXB jmpq rex.XB (bad) cld (bad) fcoms sahf lret adc jbe leaveq push pushfq stc imul (bad) cmp out loope pushq xchg nop and or rex.R ss (bad) callq cld loopne es jae xchg (bad) (bad) lahf push retq sbb test fcomps nop in mov shlb adc mov adc push mov stos ja out (bad) mov and pop (bad) push fsubp xor adc push xchg (bad) pop adc sbb jae cwtl (bad) (bad) mov (bad) imull xorb shrb fisttp std movabs mov and adc jnp shrl mov (bad) jl fsts or mulb xchg callq fdivl movabs (bad) rex.RB adc mov movsl mov jns ds sub adc ficom xor cmp (bad) rex rex.WRB lret xchg test rex.WX jmpq and or xchg adc jg adc (bad) pop in pop adc outsl pop (bad) jge movabs idivl rex.X fcomi retq or (bad) out (bad) sub test cmp sub negl mov add clc int3 rex.WB in adc pushq loop adc retq movabs jns xchg or insb rex.B cmp xlat or sub (bad) out (bad) clc (bad) rex.WRB fsts retq xor outsl ja (bad) (bad) mov mov hlt adc shrb adc pop (bad) pop xchg xor rex.RXB loopne (bad) (bad) (bad) xor rex.RB movabs ss lods clc pop mov xchg cwtl outsl add or jno mov (bad) js mov adc loopne test cmp insl (bad) sbb cmp je stos lods sub (bad) cld jne movslq sti xchg pop popfq (bad) push mov adc cmp movsb outsl adc rex.WRX fs adc rex.X scas push jae jrcxz add enterq push and rex.XB adc sbb mov jp adc (bad) cs cmp rex.RXB mov in retq mov (bad) adc enterq xor movsb popfq adc xchg mov adc lods cmp ds sar fdivl (bad) mov jle hlt adc adc js lock insl rex.WB imul sbb (bad) cmpsl jne adc (bad) xor mov test jbe shll movsl (bad) jne cmp mov loope mov mov or mov sbb adc std rex.WB fisub mov add fsubs or adc xor sbb xchg rex.R rex.X int fist add xchg rex.WRB cmp sbb cmpsl sub (bad) imul pushq xor (bad) mov test lret rex.WRXB (bad) adc pushfq (bad) jbe adc sti add xor sub adc lea addr32 imul rex.X scas adc sbb rex.WRB ja and in test xor out movabs jg,pn lret div (bad) lock es mov adc sub (bad) leaveq xor test fdivl lock (bad) cwtl callq stos add mov nop rex.WRX adc (bad) jnp es sbb outsb pushq addr32 rex.RXB adc outsl lret adc mov or and notl fnstenv sub pop xchg jne adc cmp rex.WXB scas adc pop jmpq test xchg rex.RXB (bad) xchg adc mov callq pop rex.WRXB sub adc jno test adc jae fcomps push fldenv rex.WXB ss cmp lods test rcll cmp test sub and std rex.WRXB (bad) addr32 hlt cltd (bad) enterq scas fs mov cli cwtl adc insb pop movsl mov add cmp (bad) adc cwtl (bad) mov jle (bad) rex.X push or jmp push add clc adcl rclb mov xchg stos cli (bad) or adc add nop (bad) adc sbb sub (bad) rex.WRX scas fimull adc and sub sbb cmp movsb xor and cmc adc jg insb adc je jmp adc xchg sahf pop sub shr or adc mov frstpm(287 clc mov imul mov jo xor outsl mov cmp (bad) mov add xor int3 (bad) adc or pop in or fisubrl (bad) fmull (bad) xor test rex.WXB push fdivr pop jne add xor mov xchg fucomi xor lahf xchg fadds int mov sub fcompl jg fimull xor push (bad) pop jl (bad) mov and or jg popfq imulb scas xchg xor rcll push clc or (bad) mov mov sti cmp sbb movsb (bad) mov and rex.RXB rex.R and or or mov mov jmp and adc and (bad) and out (bad) cmp cld loopne es (bad) negl add or jbe and lock rex.X jle rolb in test (bad) xchg or pushfq cs add out out cmpsl push addr32 movabs sbb rex.WB shll adc movslq (bad) or mov movsb lock and retq cli lea pushfq rex.WRX orl loopne or adc xchg (bad) sbb sti (bad) sbb mov or cmc fisubrl adc jns push pop adc sbb and adc sbb popfq pushq vpsubw andl retq adc sbb iret rex.RB pop rex.X push (bad) sub fsqrt adc frstor cmp adc jb pushfq add shl mov adc add jnp rex.XB rex.WRX popfq (bad) adc mov xor (bad) hlt cmp rex.W pushfq orl xchg lahf cs (bad) (bad) clc sbb xchg movslq xor or adc mov mov lods mov xchg int3 jae js adc xlat cmp cld adc addr32 mov adc xor cli jl cmpsl mov adc pop push mov retq mov out lahf adc test (bad) in mov cmp adc adc cmp xor clc leaveq xor gs (bad) ds (bad) (bad) adc xchg stos in loope (bad) lret and enterq movsl (bad) icebp lea and data16 fsubl or xchg pushfq pop push ja adc or (bad) (bad) adc xor movabs mov fs cmp adc pushfq cmp jno pushq add mov outsl sarl stos retq xchg jae (bad) xlat sbb fidivr cltd leaveq jmp lea or (bad) (bad) movabs (bad) adc jne adc adc repnz adc (bad) push insb cmp movsb and adc adcb ja push push insb out cs mov flds and mov adc lods (bad) fidivrl addr32 pop xchg or xchg cmc test xchg xor callq ds (bad) and jnp adc flds pop cwtl pop sbb cltd (bad) mov lea (bad) in movslq mov rcrb jb pushq cwtl cmp popfq test (bad) pushfq fwait xor mov (bad) sbb loopne push jl mov sbb cmp pop or pushq adc lret gs rex.W jg adc cmp xchg enterq adc rex.RX pushq mov mov fsubrs xchg retq pop cmp pushq rcll or (bad) (bad) retq mov outsb callq mov sysenter adc (bad) (bad) stos xlat and out lods rcll sub xorl push pop rex.RB add xor xchg adc repnz adc adc and xchg mov adc adc adc cltd cmp rex.WRXB loop lods test mov (bad) cmp out in movsl addr32 std (bad) retq test pop out and insl xor (bad) (bad) jb pushq pop sarb and rex.RXB rex.RB pop pop sub and cmp adc jne push or xchg in mov (bad) (bad) (bad) mov (bad) push add adc mov xchg loop cli mov push pop test xor pushq cwtl adc mov xchg (bad) testb data16 xchg add adc test (bad) adc jbe pushq insl sbb adc jnp (bad) jno stc (bad) push jrcxz add or mov adc or enterq out (bad) clc sbb outsb (bad) or add pop addr32 test movsb ss cmp jrcxz out lret sar push (bad) pop enterq (bad) cmp (bad) pop test popfq loop mov adc stos fisttpl adc lock sub (bad) mov pop clc lret (bad) mov (bad) fsubl mov test or cmc push push pop pop mov (bad) cmpsb mov push pushq imul jo rex.WB xacquire rex.XB subl sbb callq cwtl mov sbb lahf nop sub rex.XB cli jno xchg retq (bad) stc retq pushq imul ds enterq adc (bad) gs test (bad) adc (bad) sub js jmpq (bad) and pop adc jp add adc mov mov movsb jno fnstsw lods test lret adc lea or fcoml push xchg xor sbb xchg sub (bad) xor (bad) repnz addr32 std cmpsl sbb xor jb lods in loope movabs (bad) je pushfq (bad) adc xor mov jo sahf push sti adc rolb jmp sub movabs or loopne fcomi or imul rex.R fdiv test sub loop loope and add (bad) sub adc rex.RX insb adc add out xor mov adc pop add gs xor mov lock xchg iret mov mov rex.WRXB rex.R push out mov (bad) pop cld jb jnp adc (bad) jp xorl cmp adc in pushq in mov push (bad) (bad) adc (bad) and test sbb test jnp (bad) retq callq rex.RXB mov push adc sbb push fcoml jg xchg add xchg sbb or (bad) pop imul (bad) iret out (bad) adc rex.WXB or lods push adc loope (bad) jne (bad) fstl lea lods stc rex.WXB rex.WB rex ss sub scas mov xchg fxch loopne adc fs or adc xchg movabs xchg xchg mov mov cmpsl outsl rex.WX lea (bad) (bad) out cwtl mov int rex.WR cmp and xchg push rorb (bad) adc sbb fist shrl rex.B rex.RXB sub cmp push adc rex.RX loopne (bad) lea in (bad) cld rol adc roll or (bad) xor unpckhps (bad) cmpsl rex.W adc and lods mov vucomisd and cmp push jno adc leaveq pop movabs fisubrl pushfq scas (bad) adc rex.RB test sub mov cmpsl mov and sbb fs (bad) in adc xor (bad) jle rex.WXB (bad) xor mov adc xchg jne stos ja (bad) scas retq sub rclb stos mov (bad) mov xchg pop (bad) ja rcrl adc test movsb (bad) fsubr mov jno (bad) sahf push cmp mov adc jnp imul in mov (bad) ja stc adc cmp add sahf push and pop jp mov fcomps xchg stc xchg xor movabs (bad) test xor test pop adc cld rex and (bad) lock mov cli addr32 rex.X sbb (bad) mov jmp jne or test cmpsl adc mov mov or jrcxz adc ds icebp pushfq jno (bad) negl xor adc mov mov fidivr scas test (bad) or or xor test rolb adc jmp and cmpsb or xor jae stos lret fmull fisttp callq rcrb (bad) and or and sub (bad) imul in leaveq adc (bad) movabs adc and ss adc fidivr jl xlat (bad) int3 sub (bad) andl and pop push fdivrs (bad) or stos nop and xor and repz shr pop adc out mov lea adc cmp xor pop (bad) or (bad) xchg rex.XB rorl divl jle (bad) stc rorl (bad) jne mov test mov (bad) (bad) fildl pushfq sub cmpsb rex.WRXB pop xchg fsubs enterq xchg (bad) adc (bad) movabs mov cmpsl jnp clc ror test loop mov iret imull fs add mov adc rex.WX pushfq movabs jl lret cmpl and add xor mov pop mov pop xor rex.RB add out (bad) adc loop cmp push movabs sub pop fstl movslq adc leaveq jae and or pop clc jnp xchg idivl insb (bad) and push sub ds cltd sub lock lock stos stos xor (bad) xchg adc jg mov xchg orb and sub mov and addr32 movslq pushq (bad) (bad) lret std fisub rcll xchg mov rex.WRXB idivl test insl (bad) (bad) add xlat adc mov rex.RB rex.XB add in enterq or add xlat push movsl movslq adc movabs xor xchg out jge adc xchg or je cmpsl mov push outsb adc cmp test adc ficompl stos movabs or and and push pop jg adc (bad) fistp or mov push rclb push (bad) jmp adc (bad) cmc xor and sbb adc es (bad) adc rex.WXB loope jl rolb adc or mov rex.WRX cmpsb lea test adc mov sbbl add out repnz fstpl enterq adc lock push cmp jmp fdivr int3 rolb in insb (bad) xchg xor movabs (bad) js (bad) adc xchg xchg add adc mov loopne adc insl jmpq adc pop movl (bad) rex.XB sub xor rex.W push (bad) test and adc stc icebp repz adc (bad) adc lea cmp adc xchg movsl movabs pop cmp adc gs (bad) adc jb faddl adc xchg sbbl movabs mov (bad) in fsub leaveq js (bad) mov push sub adc (bad) sub xchg cmp adc fdivrs (bad) divl addr32 rex.WRXB xor sbb (bad) loopne (bad) (bad) (bad) ljmp enterq or xchg jbe pop (bad) sub xchg sahf rex jp (bad) xchg adc repz movabs (bad) imul adc (bad) enterq cmp adc lea imul sti or pop adc push in jns adc or in push sbb cs sub rex.WRB leaveq (bad) movabs (bad) rex.WXB xchg xchg adc mov js xor push push and movabs mov (bad) movsb adc es add adc pop cwtl fidivl adc fs pop clc rex (bad) cs loop pushfq adc xchg (bad) movsb iret adc ja xchg push cwtl repnz lods adc push xor pushfq movabs adc pop cmpsl jp adc ds jo jnp jno sbb sbb rex.X pop je jmp test negb push adc mov rex.WR adc scas add adc and rex.R or and push (bad) adc xchg xor retq (bad) adc mov jge adc rcrb adc pop and pop (bad) rex.X and and rorb xchg icebp lods pop callq adc jb rex.WRXB adc add and lods adc xchg push xlat mov jge xchg xor es rex.RXB xor out movabs rex.W fdivrs es int3 xchg (bad) sbb clc and (bad) jle fcoml adc fidivr adc push scas mov adc (bad) sahf cmp sub (bad) mov cli adc rex.W cmp cmp ss lea (bad) push stc xchg adc int xlat notl and callq adc rex.WB (bad) int or fdivrs out or jbe jmp adc scas xor and adc rex.XB adc scas cmp mov sub adc js sub or (bad) (bad) jge test movabs jo jno movsb (bad) retq mov adc mov or cmpsb std xchg mov sub jo push (bad) jno jbe fbstp rex.WRB adc (bad) push cmp fsub jno (bad) lea lahf adc cwtl leaveq or add fisttpll (bad) imul add sub rex.RXB addr32 movsl cs adc insl (bad) xor enterq add mov mov xchg callq adc rcll sti imul mov lods retq (bad) clc push sbb scas fcoms clc pop xchg and pop jp icebp jne mov mov (bad) outsb hlt or lret js adc jbe xchg mov (bad) clc sub mov (bad) xlat iret jge fsts rex.RX xor adc fistl out sbb and sub retq xchg push (bad) ss adc or fwait pop adc xchg xor mov (bad) nop imul pop pop lock add and cmp (bad) xchg lahf (bad) jno xchg or or (bad) lea je or or jae add sub lock fcmovnbe adc enterq adc cmp imul insb (bad) loope hlt jno mov pushfq (bad) (bad) adc jp ss mov push or adc in int lods adc mov (bad) fnstsw xchg xchg mov callq je jnp out mov insb mov mov cmp mov push test sbb icebp in (bad) mov adc mull (bad) jp rex.WRXB adc jp rcrb lock in or sub xchg xchg jbe adc (bad) in lods movsl add mov (bad) adc jle (bad) nop scas adc mov pushfq xor jne popfq adc rex.WR jmp adc or mov adc imul movabs xchg adc js sbb movabs movsl fsubr lret mov out and adc imul orl mov xor jnp rex.WRXB pop sub pop jp scas xor (bad) adc cmc rex.RX push (bad) fcmovne xchg ja jrcxz sbb out lods mov jle mov and or (bad) std (bad) (bad) adc (bad) xchg icebp cmovg (bad) stos adc xor ss adc in in or popfq (bad) (bad) push xchg add add in mov fsubrl cmp adc mov test mov pushq (bad) pop rex.RB ss cmp in xchg stc retq mov negb pushq cmp mov adc xor (bad) out xor adc pop (bad) mov fadd ss (bad) and fdivl (bad) movabs xchg int3 scas int3 add cmpsl rorb cs (bad) (bad) add and pop push or cmp (bad) mull (bad) jp rex.W (bad) cmp jg in and cli xorb outsb adc pop mov mov and movsb (bad) in sbbl movabs pop adc adc stos jl xchg (bad) or sub mov add fcmovnu xor push rex.X (bad) jbe (bad) jnp (bad) pop rcr (bad) adc sbbl mov in lock enterq or adc (bad) xlat push sbb cmp jo stos adc fisubr retq es adc outsb or xchg push sub add (bad) (bad) es adc mov hlt (bad) push mov test pushq movabs popfq jae adc and and pop jmp mov stos adc pop add mov pushq popfq sbb mov xchg or fstps out push callq test jne jno jne or icebp clc adc pushq (bad) hlt adc or fcoml (bad) xor cmpsl cmp repz xchg mov movsb sub push mov (bad) or clc adc xchg adc cwtl push xor add sub sbb ss stc mov cmp fstpt xchg faddl (bad) cmp add cmp pop sbb out mov xchg (bad) add push xor mov movslq in mov (bad) movsb pop cmp (bad) adc mov add cli stos push (bad) adc (bad) (bad) lock fcomps es xchg mov (bad) add movabs or adc pop adc (bad) push cld adc and and push icebp (bad) and (bad) cmp outsb (bad) (bad) sub sub (bad) mov lret cs subl cmp cmp xor add jp or xchg rex.WRX (bad) cmp adc fs rex.RX rex.WRB pop pop add ror xchg jnp fstps add sbb and cmp gs add sub sbb fsubrl adc jmpq sahf in stos rorl xor adc ror mov adc retq sub xor push jrcxz and cwtl rex.WR push je adc cs rex.WRXB cmp adc or jge jno xchg movsb loopne shlb in mov outsb adc sbb mov push clc int jrcxz retq scas stos or test pushq xchg stc leaveq iret js xchg jrcxz (bad) adc lods jmp fisttp jmpq cmp push or clc out xor xchg (bad) out cmp (bad) xchg hlt adc cmp jge (bad) mov adc imul add mov and test (bad) cmpsl movsb fist adc lods retq sub pop stc (bad) rex.WXB lods rex.WB adc mov retq icebp pop mov adc jle fcmovnb clc cmp sbb adc (bad) sbb adc ja jg jge adc mov jne add cmp fs fmull test adc add adc adc shr stc sbb addr32 (bad) fcoms mov cmpsl movsl lret clc stc adc adcl rcrb adc adc sub rex.WRX sub addr32 push (bad) shrb (bad) lock leaveq clc rex.XB rex.RB es (bad) pop sub fs (bad) pushfq adc rex.WXB sbb ja cmp lcall ds test adc test sbb loope xchg lret andl adc xor cmp popfq rex.WB mov leaveq jbe divb lret (bad) flds fs adc (bad) lret clc (bad) xchg (bad) sarl sti adc (bad) mov lret adc mov cli mov (bad) loope jae je mov xchg in (bad) rorl mov cmp sbb pop xlat adc (bad) adc xchg push nop retq jbe adc sbb xchg rex.RX xchg sub jne jne adc addr32 sbb (bad) imul mov (bad) (bad) adc mov mov xchg lahf rex.WX rex.R adc sbbb or cwtl ss sbb or stc rcrl rex (bad) cmp rex.WRB xlat adc fs rex.WR jge push sbb xor adc jrcxz test cmp or in adc and rex.WB and push adc mov retq gs rex.WXB adc adc mov ficompl adc fsub es rex.WRXB ds jae rex.RX hlt mov fs std lret sbb loope sbb callq adc fs push imul or fiadd insb clc (bad) adc cld mov in (bad) xchg sub rex.B (bad) iret pop rorl movabs stos clc mov imul xor (bad) or push mov loop mov lock fsubp pop clc addr32 xchg imul jne imul adc jmp je clc (bad) gs jge xchg outsb imul cmpsb sahf (bad) fldt or xchg jge int adc jmp push data16 push fnop push adc adc in push sub rex.WRB or xor (bad) pushq mov adc adc ss jp adc cmp cmp fmull or callq rex.WRB clc (bad) (bad) fmulp lret xor rex.RX rcrl (bad) sbb and stc js adc (bad) xlat or sbb retq mov xor (bad) (bad) sub insl adc jo adc cmpsl cmp adc test (bad) pop mov adc test (bad) in cmp stos xchg and push adc pop test xchg (bad) adc push out rex.WRB (bad) in movsl mull jnp std test xor mov and (bad) rex.WXB rcll (bad) (bad) sbb or adc (bad) data16 adc push cli rex.W or jb xor xor std adc (bad) shll (bad) scas cmpsl jp int retq out mov rex.WRXB incl xchg mov cwtl movabs mov (bad) and adc xor sbb pop callq sub rex.WRXB push adc in rex.WXB pop rex.WRB rex.RXB adc fdivr adc xlat jp in adc (bad) rex.RXB (bad) xchg xchg fisubr rex.WB (bad) jg in je (bad) (bad) adc jmp stos sahf fdivrl rex.RXB mov mov cwtl and je jl mov loopne and in push stc or (bad) adc fcmove addr32 roll mov std mov adc mov (bad) rex.XB fs sbb adc rex.WRX push enterq or adc mov cmp and mov mov out mov in rclb es hlt add (bad) sub movsl push faddl retq xor (bad) ss jne or mov sbb out jno out push lea rex.W pop adc jmpq pushq pop (bad) adc gs sbb sahf cmp sub repnz (bad) ficoml (bad) test clc stos push ds adc (bad) sub adc sarl xchg imul adc xchg addr32 cmp adc (bad) fcomp xor xchg enterq adc (bad) fsubr rex.R pop adc xchg lea (bad) jne mov pop movsl (bad) add (bad) (bad) jg mov (bad) jl adc jne fsubrs imul pop roll adc out or fcoml mov mov nop push cmp (bad) xor xor (bad) loopne xor rex.WR mov xchg scas adc loop je adc rex.RX push adc xor push sti sub (bad) xlat jl or (bad) or pop sub rex.RXB cwtl add fidivr adc pop sub adc in (bad) mov (bad) and pushfq jrcxz adc imul or sbb sbb pop sub adc mov rex.RX xchg jnp movsl (bad) jge cmp adc pop jmp scas (bad) jmpq test cmp pushfq test jle cltd xchg or mov (bad) notl jmp pop mov mov (bad) cmp sbb (bad) hlt (bad) jge mov adc js sbb popfq sbb sbb (bad) push adc or mov mov cwtl lock callq movabs cmp xchg sbb outsb (bad) (bad) rex.WB xor sub jnp movslq (bad) or cli mov int3 stc adc cmpsb (bad) add sbb or (bad) push lods add cmp (bad) cltd push (bad) jno jp rex.R xlat (bad) cmpsb fidivrl adc outsl xchg sbb adc mov cmp jnp movslq cwtl ss lea adc cmp mov add (bad) lahf xor adc mov adc retq pop adc clc sbb sub mov mov fmull push xchg rex.WRX fsubs movabs and and jge enterq (bad) (bad) rex in adc or rex.WRX mov psrad out pop hlt movsb adc push and sub sbb shlb test xor (bad) jo pop push (bad) lock adc (bad) sub mov mov icebp loop and xchg rex.W pxor vorps int xor (bad) xchg bnd adc pushq xchg add adc js movabs adc push adc or cmp xor out adc cmpsl push out cwtl cmp imul or adc retq or rex.RX clc adc (bad) sbb jg mov mov cmp in movsl or lock adc jge add (bad) cmpsb hlt test add pop jge (bad) mov nop rex.X pop rex cli or cmp fwait xchg xor ds retq jl xor rolb (bad) fdivrs nop rex.WX xchg (bad) sub xchg fwait adc outsl int3 lods cmp adc sub mov in adc rex.RXB (bad) insb ss (bad) pop pushq pop mov (bad) adc addl mov push (bad) pop imul sbb (bad) insb jns mov (bad) je hlt cmp (bad) adc movsb or gs cmp fildl insb cmp push cwtl rex.RB lock adc in adc adc (bad) mov faddl or cmp (bad) mov test (bad) fwait mov ds rcll stos imul movabs loope test fsubrs gs adc add int xchg (bad) clc test xchg scas lret mov callq (bad) mov lahf fnstsw lods jno add rex.X retq popfq lahf sbb adc stos pushq std clc rex.B (bad) es cmp fcompl sbb add adc adc (bad) out adc and xlat lret popfq int3 (bad) in adc mov sub add xchg cli scas lods insb leaveq movsb retq adc or outsl ds rex fmuls xchg cli repz out loop shlb pop js rex.WRX mov and mov mov callq sbb or rex.RXB (bad) jle add (bad) xchg and jge rex.X sbb scas adc (bad) jne jbe in adc xor cmp test push lods xchg mov rex adc mulb xchg (bad) adc mov sub xlat (bad) cmp fildl out sbb lret lret xor adc retq hlt rex.RB or movslq xchg fnop adc clc ljmp cmp xor lret mov adc push pop adc (bad) mov pop xchg sub xchg rex.W unpckhps push leaveq adcl fsubs fldt int3 (bad) enterq adc xchg cmp (bad) or in sub or (bad) xor jg pop outsb imul mov cmp xchg cld pop fcoms (bad) movsl sbb (bad) pop addr32 mov sub sbb jmp scas pop js (bad) movsl adc cld sub unpckhps adc mov push xor mov jrcxz retq and mov movslq jl lret idivb cmp and mov jns (bad) push clc data16 sbb push jle sbb rclb cmp cwtl jge (bad) (bad) movabs sbb rex.WRX (bad) adc (bad) test cmc lret rol mov fwait jmpq adc cli add movabs xor (bad) (bad) mov test rex.WRB and rex.WX push adc xchg (bad) cmp out mov adc sbb or mov hlt in test sub mov pop adc pushfq cmpsl rcrl fmull callq ds add jne imul jg lret mov clc push adc xchg xor and xchg adc cwtl xor pop adc fisub shl imul mov adc out jb cli mov pushq xlat push mov xor (bad) xchg and in sbb imul and xlat adc (bad) cmp xchg adc adc movabs (bad) (bad) jrcxz push jne or (bad) xlat adc fstps sub xchg adc pop fidivr mov leaveq pop jle xor adc scas sub mov push adc leaveq mov cmc fdivrl adc nop insl jnp gs push jo push retq rex cmp lret pushfq (bad) pop (bad) cld lods sbb sub (bad) repnz sbb iret adc rex.WX add int3 (bad) adc retq fstpl xbeginq mov adc in movsb (bad) adc out rorl (bad) fisubr es retq (bad) mov adc and rex.RX jae mov mov adc movabs xlat and ja xchg test cmp mov add iret stos adc sub xchg out jb pop adc fcoml loopne add std in movabs mov rex.W or callq (bad) lock pop movsb mov movsl fs mov sbb stos adc pushq xchg add (bad) cmp (bad) xchg (bad) adc mov or jle fildl rex.WXB test notb (bad) and (bad) lahf clc int or retq pop test (bad) and sub iret lods clc cmovg adc mov fs rex.X jns add add adc xor (bad) fdivrs fsubl jae or and sbb (bad) insb cld movabs sahf fcoms or rex.WB adc (bad) or add lock cmp in adc pushq testl jp loopne and iret in in fmul sub adc (bad) jnp movsl sub mov movabs sbb (bad) adc cmp adc in std add je cs (bad) (bad) (bad) out adc nopl rex.WB shrl fildll xchg clc adc add icebp (bad) test mov rex.B (bad) in sub adc (bad) add sarl (bad) push rcll rol cwtl add movabs xor push adc pop and (bad) sub push adc int3 fnstsw adc (bad) retq int movabs or in (bad) adc retq imul adc mov pushfq movsb push js fidivr (bad) mov adc out popfq lret fcomps or jne movabs int3 sbb jle sti outsl adc leaveq jg es loop add adc fucomi cmp or xchg movabs push xor pop callq mov cmp pop jnp (bad) cli cld movsl (bad) push (bad) adc in rorb fwait retq cmp xlat adc push mov (bad) iret pop xchg out xchg (bad) repnz rex.R gs adc hlt adc (bad) add mov clc rex.WX xchg push jae stc mov rex.WRB rex sbb ja (bad) adc cmp adc (bad) in xchg hlt mov enterq pop clc adc or lock xchg mov jno fwait jne adc pop pushq adc adc stos nop jno mov or movabs mov rex add push adc (bad) jno (bad) clc (bad) adc loope (bad) xchg rcrl adc movsl outsl jbe push movabs xchg xchg cwtl adc or out enterq xlat sub add mov (bad) and icebp (bad) pop lods mov mov xchg xchg mov out std adc (bad) jge (bad) jmpq leaveq adc imul jle xchg adc (bad) rex.WB jns (bad) cmpsl and in movsl (bad) adc jle ss retq shlb jp jl push adc mov stc xchg rex.R rex.WXB and repnz outsl cmp xor mov imul rex.WRX add stos scas test (bad) movsl rex.XB add mov rex.WR jo sub movslq rex.RXB es nop mov clc in sub add rex.XB xchg adc loope pushfq add mov (bad) (bad) xchg add xchg rolb and movabs scas cmpsl clc out adc or adc mov or shrl mov rclb push adc callq adc pop jae sub mov xchg jle sbb mov mov jnp idivb jo xchg adc adc adc pop sub pushfq mov loope cli fs adc jae mov cmp rex.R mov mov idiv or rcrl decb xor jbe adc roll movabs adc jns ds (bad) sub nop and fdivrs outsl adc test adc (bad) cmpsl icebp mov xor mov adc test adc adc sub sub (bad) fmuls adc sti xchg sub faddl (bad) and insl adc pop test or xor movsb or add test (bad) xlat add stos adc or adc add cmpsl cmp mov sti jne jrcxz cli jg mov (bad) (bad) je rex.WRX repnz adc fist mov xor mov scas xchg rolb pop adc xor (bad) mov (bad) stc sub (bad) mov adc test (bad) mov pop roll adc adc jne retq cmp insl imul fs movabs xor sub sbb (bad) adc mov out (bad) rex rex.RB adc fild ds or rex.WRX clc pop lret movsb (bad) fcmovne rex.WRXB fmull movabs cmp jge (bad) add enterq (bad) shll es xchg jne adc mov or xchg leaveq rex.RX adc jmpq xor sub leaveq sub fmuls (bad) rolb sahf fdivl scas jge clc (bad) or (bad) xchg loope adc pop (bad) sub rex cwtl scas mov cli adc insb xchg adc es mov and loop mov adc xchg (bad) add xlat fisttpll cmp (bad) gs movabs lods or (bad) adc xchg sbb subb out jmp cmp sets jno push cmp ror push rex.R adc jrcxz pop movabs unpckhps (bad) outsl mov adc (bad) fdivp push imull cmp push divb xor fistp jns (bad) rex.WR or stos adc cmp int mov std pop int3 sbb out jo mov adc sub cs outsb push retw and cmp push movabs adc scas xchg fnstenv (bad) lret xchg mov adc rex.W rex.WRXB adc xor mov insl push rex.WRXB jg pop xchg sbb clc out pop out (bad) mov jno adc sbb push jns (bad) out test mov in (bad) pushq mov push mov mov rex.WB ss push vmovsd jbe adc (bad) rex.W and in mov mov (bad) cwtl jae mov mov cld out sbb mov repnz (bad) push pop adc or xor (bad) addr32 lahf adc rol movsl retq xor movslq push mov test mov lahf xorl imul mov adc cld xchg (bad) imul rorl adc mulb sahf lret cmp mov cwtl jge sbb fcoms push movabs fucomp or stc scas mov cmp adc cli adc push xor rclb hlt ficoml adc rex.WRXB add enterq test sbb (bad) mov xor adc xchg pop test mov cmp jg callq retq rex.RXB jno movabs (bad) std adc adc (bad) adc jb stos rex.RXB scas adc mov fidivl cmp movsl sbb or mov xchg movabs (bad) pushfq rex.WXB rex.WRX adc (bad) gs fdivl xlat (bad) adc (bad) adc jp jae adc (bad) retq sbb mov sbb (bad) cmp fidivrl rex.WRB sbb (bad) jrcxz notb loop fimull xor loopne vsubps or (bad) jbe lods cmp hlt (bad) popfq jmp out jno clc cmc sbb gs movsl xlat jbe jl mov sahf (bad) pop adc leaveq decb adc loopne cmpsb fistl rex.RXB fisubr pop (bad) adc rex.B rex.RX adc adc test cmpsb retq sbb (bad) cwtl mov or scas rcrl jle fcomp push sar (bad) (bad) (bad) in (bad) (bad) test (bad) clc xor mov and fildl cltd lea jno rex.RB adc cwtl pop cmp (bad) sbb cmp in cltd add insb jbe (bad) leaveq in unpckhps push mov (bad) (bad) jmp (bad) adc cmc cmpsb xor mov mov cli (bad) adc or xchg lret sub and lret sbb or push mov fistl add jl adc sti sub rclb fcom (bad) rex.RXB lock rex.WX xor pop add pop rex.WR or xor rex.WRXB xor fdivr (bad) rex.RXB or mov imul mov data16 in adc xchg adc xchg insb loop adc cmp imul (bad) rolb adc (bad) jrcxz out mov ss retq sbb mov jns cmpsl adc xchg and repnz jmpq movabs jg adc (bad) pop stos rex.X mov xor jo and icebp in ficoml retq movabs mov gs (bad) push (bad) xchg adc (bad) or mov and xor adc mov adc test gs iret xchg adc sub repz movsl pop jnp adc pop fimull hlt (bad) sbb adc and mov adc cmp (bad) jb scas sbb pop jno pushfq adc adc repnz clc orb sub adc fistl (bad) sub rex.W adc sub loopne je xchg jge mov xchg rcll scas sbb push xlat adc adc pushfq add xchg adc (bad) pushfq (bad) mov rex.WR jns adc xor sbb ss clc (bad) adc loopne pop sbb std adc test adc cli xor (bad) or test adc (bad) rex.R gs mov sub adc adc test and xchg push addr32 or xor adc cmp (bad) pop sbb (bad) pushfq (bad) adc stos rcll cmp mov in sbbl mov icebp fcompl (bad) adc movabs xchg imul rex loopne sub stc add out jrcxz (bad) push (bad) adc (bad) (bad) outsl xchg clc pop jle movsl push or in (bad) (bad) fs (bad) (bad) mov mov cmc ja int (bad) cmp sbb adc sub add cmpsl xchg imul adc ror rex.R adc mov and (bad) mov adc imul out rex.W rex.RX fdivr add ficom mov scas hlt adc cmp rex.WR sub (bad) lret in pop clc (bad) xchg sub xchg mov pushfq mov fstl (bad) adc push rcll addr32 repnz lods movsb or rex.WRX push loopne xchg rcll and rcrl mov int3 adc (bad) (bad) out adc (bad) mov test xchg mov cmc rex.XB jne psubw ss (bad) mov (bad) cld (bad) xor adc mov gs sbb popfq cmp adcl cs cmp adc jno sbb xor xor lret rex.RX rex.WR or push movsl mov mov xchg xchg xchg outsl mov (bad) adcb rex.XB sbb mov fisttp movl mov adc mov add xchg adc repz xchg xchg fistp jnp adc fsin out pop or pop testb fdivrl rex.R rex.RXB fs mov cmp (bad) pop adc push (bad) stos xor mov or push ficom jb mov in stos jbe (bad) jrcxz notb sahf mov movabs lahf pushfq and movabs mov adc mov mov leaveq movsl (bad) (bad) sub sahf scas cs addr32 (bad) adc pop add in fsubrl adc fidiv data16 ds hlt (bad) jge mov (bad) (bad) xor rclb or rclb xor sahf pop movsb and adc sub adc push lahf xor (bad) xor jnp enterq iret (bad) int3 cmp cmpsb xor loopne or adc pushfq lods and adc xlat es adc cmpsl sub stc test xor adc push lret adc xchg and movabs shlb sti add xchg adc repz pushfq lahf jle adc push (bad) clc or (bad) lret pushq jo loop (bad) or cmp insb mov cmpsl std lahf (bad) (bad) rcrb pop (bad) (bad) popfq jl (bad) rex.WXB adc (bad) rex.WX jne adc cmp (bad) or sbb (bad) mov rex.WXB rex.R (bad) rex.WXB mov popfq int3 (bad) or (bad) insb lock mov adc rex.WR jns enterq cmp pop andl push adc cmp or (bad) lret jno callq adc push rex.R sbb jns add adc sbb add sub add push (bad) mov jmpq repnz push neg (bad) adc mov mov adc movabs rcll mov mov adc add mov adc ds mov pop rex.WR rex.WRXB mov mov cld test adc subl fldenv iret pop fstp hlt rex.WX pop adc cs fisubl shll (bad) adc cmp sarl (bad) adc sti retq add adc (bad) jle cwtl (bad) mov lret push in test hlt sbb (bad) adc push sbb pushq mov adc (bad) popfq adc (bad) xor adc mov xor xchg js (bad) and rex.WRX adc adc andnps or jns stos jbe (bad) fdivrs jne imul jp sti add rex.WR (bad) (bad) push xchg mov fdivl loopne lahf repz sbb (bad) (bad) xchg add (bad) adc sbb (bad) sub jge mov fdivrl data16 insb rex.RXB rex.RB pop scas jg or adc mov ja cmp jb push movslq adc mov rex.WB (bad) lahf rex.WRX (bad) clc adc negb popq adc mov (bad) std cld adc shll sub push adc sbb insb sub (bad) cmp rex.WRB mov cwtl sbbl in mov fs adc (bad) or clc out fisub repz stos adc rolb adc (bad) add fstl push es sbb mov (bad) push lock fs adc repz pop sub adc repnz movslq sub leaveq jp rex.WRB cmp addb (bad) lods mov (bad) insb xchg adc fdecstp jmpq xchg adc movabs cmc push sub adc pop and movslq xlat xchg (bad) adc push clc out popfq scas xchg mov adc test xchg adc jns jno rex.XB ss xlat fiadd adc fs adc adc sbb adc push imul jg and int3 repnz push adc cmpsl mov clc lods and (bad) xlat hlt incb push sbb adc (bad) (bad) cmp pushq vunpckhpd loop fcoml xchg rex.WXB adc out in pop (bad) adc adc xchg (bad) (bad) lret fsubr (bad) (bad) xchg xchg insl (bad) rex rex.WRB cmpsl sub int3 jge rex.WR sti lahf xchg rcrl rex.WRXB adc sbb pop loope xchg shrl fcoms adc movsb pop std push adc rex.RB adc repz icebp mov retq fwait adc jrcxz adc or adc (bad) jns mov or adc outsb sub nop cs adc lods push (bad) mov jnp pop outsb (bad) sub sub popfq (bad) outsb popfq push sub ficoml xchg shr cmp clc pushq lods rex.WRXB adc (bad) pop jae adc adc je adc sub pop sti cmp adc adc (bad) flds and leaveq nop popfq mov jbe sub mov adc adc sub mov mov ds movabs jle (bad) mov (bad) cli (bad) gs in nop callq adc ja jae or mov sub xlat ja jrcxz or (bad) xchg xor add adc sub add rcrb push jns leaveq and adc jbe movsb rex rex.W loope mov and repnz scas adc jmp out lods xlat (bad) pushfq pop xchg (bad) (bad) fmul pop callq rex.WB (bad) ja xchg cmp adcb rex.WXB (bad) lock sbb mov jb jbe xchg roll pushq cmp and jne adc mov out stc adc (bad) and retq adc roll adc movslq fistpll xor cmpsl or (bad) nop in add xor rex.WX fmul rex.X xor insb (bad) jns outsl clc add mov xor xlat cltd rex.RB test add rex.B and test xchg adc xor (bad) adc pop (bad) jo (bad) mov rep insb pop xchg sbb or movabs xchg lahf adc movabs mov (bad) sub pushq (bad) adc add mov push hlt adc insl mov and sbb stos adc xchg ss mov jle ror adc adc scas sub mov adc lods jb cwtl adc icebp lahf (bad) (bad) adc xor addr32 or push mov gs gs and data16 rex.WRX fstpt (bad) (bad) adc sarl or (bad) rex.RX sub push adc imul (bad) (bad) or iret addr32 mov mov xchg and xchg xlat cmp adc int xor adc adc clc jns jbe xchg (bad) addb (bad) pop pop push adc shll stos sbb xchg adc je out loopne adc mov (bad) rex rex.WB repnz pushq push and xor (bad) (bad) adc in int sub mov lahf or mov mov adcl cmpsl adc pop cli cli rex.WXB adc fisttp (bad) xor mov xchg out add fldl or enterq mov pop adc rex.RX (bad) ds in lea fwait mov (bad) adc cmp (bad) callq in stos (bad) insl jge mov lock rex.WRB or mov xchg xlat (bad) cmpsb adc cld (bad) movslq sbb or xor adc adc leaveq repnz fsub pop cmp cld adc (bad) stos insb (bad) adc mov mov adc fsts cmp test sbb decb fdivr data16 stos cmp (bad) cltd mov mov leaveq loope rex.WRB adc lret stc push push mov adc movsb (bad) ds (bad) callq mov adc xor rex.WXB es mov mov rex.RX iret js jne loopne cmc add (bad) out lret xchg xchg pop (bad) xor (bad) lock or cld clc or fcoml movslq movsb (bad) adc xor sbb loope ficompl clc retq stos xor add adc adc mov jnp rex.WRB (bad) and rex.WB mov and movsl mov rex.R xchg jrcxz shll test mov movslq sub rex.X scas roll jb movsl pop xchg rex.WRXB or or movabs sub push xchg movsl mov js and in leaveq or je lock es imul loopne test adc cltd or imul (bad) cmc (bad) adc push mov test push (bad) movabs mov ficom (bad) mov sub icebp rex.WR notl jp je adc mov imul rex.XB xor shrl test outsb rclb sbb cltd push sub jae (bad) cmpsl movabs test push adc rex.RB mov cmp jo push cmpsb adc movsl push xchg (bad) adc adc leaveq jnp dec gs jno sub xchg mov rclb and outsb or add adc xor clc xor (bad) jge (bad) pop rex.RXB mov in sub fstl jle jns pop adc std int3 loop test xorb or mov or mov rex.W rex.X pop in mov rex.RB movsb stos negb xchg lret mov (bad) movsl xlat push push add adc hlt pop and cmpsb pushfq mov movsl pushq pop mov mov sti (bad) rcl jbe adc push rex.X pushfq cmp pushq adc (bad) movslq (bad) adc fsubr leaveq or sbb cmpsl movsb mov adc movabs clc icebp mov adc fbstp push sbb sbb adc rclb jrcxz cmp sub rex.RXB push std (bad) je repz sbb fsubrl cmp cmp (bad) xchg lock (bad) (bad) or outsl sti cmpsl pop icebp pop mov sbb jno xchg (bad) or push add imull (bad) fnstcw adc sti retq adc cli clc fsubs rex.R cmp xlat stos mov adc (bad) xchg (bad) jmp adc (bad) jnp rex.X ds mov or mov jo mov jae push (bad) or mov push pop and mov adc movabs adc sub rex.WRX adc insb sbb push jnp or adc sub (bad) scas cli and imull mov adc (bad) (bad) xor and (bad) add or jns test pop (bad) and or pop movabs ficoml cmp adc or mov sbb mov (bad) retq (bad) adc xlat adc or cli stos jp jg,pn rex.W or (bad) mov nop push imul out outsb ss mov (bad) nop xchg lahf adc scas (bad) (bad) adc stc xchg shll mov mov (bad) fdivrs mov int3 rex.WXB repz add (bad) (bad) jmp adc cwtl adc out push rcll pushfq or xchg pushq (bad) nop data16 xchg retq cs cmc cmp rex.XB adc retq callq xor std adc sub mov mov xchg (bad) add pmulhw xor and rex.WXB clc mov enterq sbb and addr32 lock notb movabs jbe add mov xor rex.RX rex.WRXB movabs adc int adc adc stc (bad) xlat (bad) adc or pop out pushq rex.XB (bad) adc sbb rex.XB pop cmc rex.WRB or div rex.R mov imul out sub fucomi adc and loopne or int ja loope adc js xchg adc fidivl mov or pop outsl xchg and sbb or and jb (bad) mov jbe rex.WB repz (bad) insl (bad) adc jrcxz fdivl cs (bad) rorb rex.RX insl add adc (bad) cwtl push and jb lret mov push shrb orl loop fisttpl sub adc (bad) xlat (bad) adc sbb push fadd sub xor or lods (bad) mov xor movsb sub push pop adc test adc xor jg pop sbb jl cmp int loop mov (bad) jge cwtl (bad) sbb adc push add (bad) movabs jle rex.WXB adc pop loope (bad) adc (bad) xor mov jbe or and or fcmove cli pushfq adc sahf idiv xor mov mov scas test sahf add add rclw (bad) rex.WXB movabs (bad) push jle mov xorl and and mov loope sub fdivp xchg rcr sbb (bad) xor sar (bad) adc jmpq or adc jnp push xlat (bad) xor mov outsb retq or std (bad) push out jg (bad) jl (bad) test jmpq (bad) jmpq push lret idivl mov sarl cmp jl sahf (bad) sbb cwtl rcll outsl adc jae xor sbb test movsl xchg push push add cwtl mov retq mov mov jns mov movabs fsts shrl lret mov (bad) xor (bad) adc (bad) loop leaveq adc xchg je (bad) movsb (bad) mov (bad) (bad) test adc out or fsubrs mov (bad) imul cmp adc loope,pn js adc add in mov adc lods lock xchg rorl imul (bad) enterq callq or outsl push rex.WB imul ds mov adc lods sarb (bad) sbb add adc xchg neg rex.WX mul xabort cli fistpl adc adc fdivrs adc es xchg mov shr push int jrcxz adc add add mov (bad) (bad) push jge rex.XB jne lock jbe (bad) adc fcoms jl (bad) rex.WRB (bad) adc insb push cmp or xchg xor xor push lret mov adc fwait push xchg fdivrs add (bad) adc (bad) adcl std mov adc rex.WRX adc mov (bad) mov mov adc cmpsl mov add (bad) mov cmpb int add adc leaveq mov push adc iret jp ja mov adc sar (bad) (bad) test mov adc in pushq jmp rex imul and adc nop (bad) (bad) cltd jle jns adc xchg jrcxz add xchg (bad) pop mov (bad) jge cmp adc lock movabs fdivrp cmpsb retq cltd adc (bad) popfq jl adc pop or rcl jrcxz rex.X (bad) push cli adc (bad) cmp clc rex.X adc mov icebp lea sbb jo (bad) push adcl (bad) jae (bad) add or sarb adc (bad) rex.WRX pop adc sbb mov rorb sub out jnp ja mov (bad) int xlat adc addr32 adc push xchg xor negl adc fsubrl movabs xor fcmovnu es (bad) jge int xor pushq divb pop ja (bad) lahf (bad) mov cs adc loopne adc sub scas adc stc test clc jno jg nop xchg pop fdivs insl adc pop movabs mov adc cwtl add add cmp push adc mov (bad) sub test cmpsl xor xchg pop xchg pop add rex.RX rex.XB xchg jle push ja pushq mov mov sbb cmpsb rex.W adc xor pop fmulp (bad) (bad) adc adc jbe and (bad) rex.WRX cmp adc outsb jne adc (bad) movabs adc or fcom xchg outsl xor pushq push scas mov or and adc (bad) xchg xor (bad) xchg sbb out popfq xor or (bad) xchg push push cli adc xchg imull adc rcrb out adc ficom xchg adc lret (bad) jle jo mov mov cltd rex.WB adc mov mov out push pop and pop fcomip int enterq cmp xchg add pop mov fdivrl (bad) retq lock jrcxz sete sbb lret (bad) mov pop (bad) neg jno and jge (bad) je sbb popfq push adc mov cmpsl pop sbb pushq xor (bad) sub jg xchg push adc out rex retq jns cli movabs jrcxz gs rex.WRXB ss or mov (bad) cmc jl rex.WRB xchg leaveq adc in addr32 in icebp adc xchg pushfq push push sub lock in (bad) and adc jmpq jne pop cmp (bad) lret int3 jb mov adc (bad) ror mov jno loope jne cmp (bad) sbb or pop movabs mov adc movslq (bad) callq (bad) (bad) cwtl (bad) fcoms (bad) sbb xchg pop xchg (bad) notb push xchg and decb rex.B nop lret adc movabs adc movsb jae nop ficompl xchg shrl cli rex.B jmpq rex.RX (bad) xor push rorl (bad) (bad) xchg xchg rex.WXB (bad) (bad) rex.WRXB cmp and mov invd push hlt push rcl jg mov int3 mov mov adc vmovntps jp (bad) in push mov in (bad) notb punpckhwd out rex.B imul push callq cltd or adc mov in jmpq rclb (bad) in cs stos (bad) mov (bad) mov (bad) fistp ss cmp (bad) pop xchg fldl2e mov inc shlb int3 (bad) in jnp fs mov movsb or shrb jnp add (bad) decb fsts push (bad) sbb gs test push decb (bad) (bad) add out push push hlt sbb (bad) jne push mov pmuludq iret (bad) lock std push push push out (bad) (bad) hlt insl cltd (bad) rex stos adc rex.RX mov pop testb rex.WX rex.XB cmpsb push repnz xor (bad) cs mov jnp addr32 mov (bad) hlt add xchg (bad) mov push jge out adc cmc fsts mov xchg out popfq jae rex.B rcll (bad) mov callq rcrb (bad) sbb cmp mov decl out (bad) add xchg out rex.WRXB testb test pushq (bad) (bad) xchg xchg cmpsl mov lcall callq outsl fiadd (bad) notb inc rorb (bad) fistpll outsl fnstenv jae mov mov lcall outsb callq retq mov xchg std lret mov jmpq rex.X and callq rex.X (bad) (bad) push mov sub mov stc repz push movsl push test xor push adc shl loopne rex.WRXB (bad) xchg adc cmp out mov and (bad) hlt xor (bad) jle push rorl xchg xchg hlt in rex.WXB rcrb push rcr mov test cli rcrb mov lock sahf (bad) mov lcall shrl (bad) testb (bad) out scas (bad) hlt cmp sbb push notl sub adc mov stc add (bad) callq out in hlt mov push rex.XB adc mov jo ss add xchg (bad) lret callq sub incl shll incl adc ss jle (bad) add out stos (bad) hlt adc (bad) xchg es jmp push pop mov mov movsb lods mov fxch (bad) add push rex.XB sub shll fnop hlt repz rex.W mov and (bad) push (bad) cmpsl or adc cwtl jno lret push fadd callq adc adc add ja xchg mov (bad) (bad) jmpq lret gs mov mov repnz adc lret xor sub clc sub sbb rex.WX mov cmp mov jo mov (bad) (bad) pop (bad) add adc int jge lahf xchg add iret clc fstl mov pop mov scas adc decb jbe mov adc cmpsl adc movabs (bad) jg push sub jb mov loope sbbb cwtl rex and out rex.WR (bad) cmc js cmp push fsts loopne (bad) mov and mov mov sbb adc (bad) (bad) rcrb ja jg adc jns or sub ja xchg adc rclb mov cmp mov xor xor clc sbb adc adc mov rex.RB xlat (bad) scas jrcxz adc sarb movsl (bad) fs (bad) adc rcrl popfq fsubs push (bad) mov cmp xchg add fistl stc xchg (bad) cmc (bad) jrcxz rex.WRXB adc nop jge adcb mov and (bad) lea xchg fdivs (bad) cli adc out or pushfq imul pop adc incb cmp fsubl pop sbb push jne sub (bad) adc mov stc add jge mov mov cmp pop cmp movabs adc rex.WXB mov ja sbb shrl (bad) sub adc lret retq pop sti or push sub adc sahf (bad) or pop (bad) sub lret and adc (bad) xchg sbb es mov adc mov rex.W (bad) jl outsb adc (bad) push mov fistpl jp and rex.X (bad) in ss fisubl stos mov adc pop xchg jnp adc ficoml jae or in and clc xlat (bad) pop xor sbb mov mov in mov std (bad) callq adc rcrb xchg int3 push jrcxz outsb xchg adc out adc sub xchg in xchg je cltd in rcll ja fcoml (bad) (bad) clc in test mov push adc out cmp sbb rclb push movabs imul rex.WRXB adc cwtl push (bad) clc clc mov mov clc xchg out jg (bad) push pop clc movabs (bad) hlt (bad) mov adc cmpl adc jrcxz cmp hlt out scas cwtl outsb adc adc push mov mov retq mov adc jl cwtl xor jns adc out adc adc adc fwait xor sbb and adc sbb adc sbb lock mov (bad) movabs rex.WRB repnz add mov adc mov movsb rcrl fcoml jo pop push adc jge pop or cwtl cmpsl adc test mov push (bad) adc je push xchg add sbb or outsl int3 push pushq repnz in outsb mov fadds mov push pop js adc idivb jmp adc jbe adc mov (bad) jl adc clc (bad) insb xchg push adc adc retq repnz push push adc outsl xchg shll jnp xor adc jg pop adc xchg fidivl xchg adc xor adc lret mov out retq add push (bad) add retq adcb jbe xor cs add cwtl cmp je adc (bad) (bad) mov adc clc (bad) vmovntdq mov xchg in or mov adc cmp xor xchg rex.WX (bad) int rex.XB (bad) adc adc add movabs clc out push xor pushq push xor rclb lods adc out mov cld pop xor cmpsl (bad) (bad) adc (bad) push int (bad) pop or (bad) (bad) enterq push (bad) fcmovnu rex.WRB mov cmc add rex.WX xor mov decb jbe adc add or cld xor xor add retq push cli lret fcompl (bad) cmc adc jl clc jnp,pt neg mov sbb cltd loop xor adc push test std sbb rex.WRB rex.RX push fnop adc js adc leaveq mov test scas sbb mov movabs test cmpsl push pushq xchg adc sub test sbbl (bad) int test (bad) mov rcll adc add addr32 ror fldenv (bad) test rex.B jo stos in mov fwait sahf mov (bad) adc jne (bad) sub push add pop mov xchg repnz lret mov sbb (bad) adc rex.WR or icebp rex.WR rex.WX fwait test (bad) rex.WX leaveq xchg adc or int3 outsl movsb xor (bad) rex.WRXB jrcxz add movslq adc push (bad) idiv adc mov (bad) imul mov adc adc xor ja fcoml jg adc cmp push gs hlt adc adc adc sub adc mov jg movabs adc in sub or jo cmp xchg sti and test rex.W mov adc (bad) adc xchg rex.WRXB shrb adc mov lods or adc sub pop xlat cltd rex.WRXB repnz pop or add rex.WB hlt int3 sub cwtl pop cmp cmp rex.RB scas mov jb (bad) adc fiaddl xor cmp mov int xchg sub adc jbe ss adc int stc (bad) movslq push jp or rex (bad) sbb adc pop mov test callq jge (bad) xchg xor decb cmp js jno and push (bad) adc mov ss jp jo (bad) adc xchg xchg adcl mov adc xor movslq sub xchg adc (bad) cltd cmp (bad) xor cmpsl jmp cmp mov push mov clc divb xchg insl mov cwtl sbb imul pop int3 sti adc xor or xor mov lret movabs (bad) xchg jg out adc adc incb nop adc int jg adc out sahf outsl jbe test out mov adc sbb fdiv scas xor push xchg idivl jrcxz movabs ss (bad) or fdivs rex.X xchg test rex.WR sub push xor repnz callq (bad) hlt add xchg lods xchg lahf (bad) (bad) adc push jle (bad) xchg sbb out test push loop lods rex.WRX adc fdivl rcr xchg (bad) xor rcll std pushq lret (bad) sub mov adc add stos addr32 and cltd ficom jnp cmp lods xchg adc jp nop lahf roll enterq adc jg add adc rex.WRXB and and ss (bad) (bad) idiv adc clc xchg fnstcw mov jae xchg mov outsl test adc fsts lods (bad) (bad) adc rex.WR rex.WB cmp movsl adc xor fsts scas xor adc (bad) (bad) and (bad) (bad) lahf and fs ds (bad) rex.RB pushq adc icebp mov lret int3 add xor ficom fisttp (bad) imul clc popfq movabs (bad) jns adc callq adc push or adc (bad) adc cld fs rex.B xor and jbe (bad) scas and test icebp scas loop (bad) adc lret push adc addr32 rex.RXB xor leaveq xchg adc (bad) adc fidivrl xchg jns enterq or repnz rex mov movsl adc fcompl jno mov hlt sub retq (bad) mull cmc sbb rex.WRXB fidivl push repz push jbe pushfq enterq enterq mov mov mov pop sub push push adc lock jo,pn xchg mov fdivs xor mov adc lret adc (bad) clc test cmp fsts jno scas jle (bad) rex.WXB adc xchg xor mov stos (bad) adc sbb mov (bad) mov jg xor mov push pop xchg repz popfq add or movabs int faddl (bad) jo mov jbe adc rex.WRX adc and xor sub jnp xchg cmp (bad) negl sbb sub add xchg mov sarb rex.WR jle rex.WRXB adc xor jno adc rex.R cmpsl xor adc mov mov out jne (bad) xor mov adc push push push (bad) psubq fisubl adc mov (bad) sub (bad) cmp xor test pushfq (bad) and adc pushq retq (bad) (bad) push or clc sub and gs xchg adc mov int3 cmpsb lock xchg lret push adc sarb (bad) sbb lret xor jbe ficoml rex.RXB cwtl sbb mov scas cmpsl imul (bad) jrcxz and pushq or and gs adc mov rex.WRXB and xchg cmp jg jle movsl pushq out stc xor mov cwtl xlat mov movsl or mov clc (bad) or (bad) nop lahf jo callq adc lods adc xor jg movabs cld cmp addr32 xor lret push add jrcxz xrelease fistl mov rex.WRB mov and (bad) sub adc adc mov jrcxz lock callq (bad) insl rex.WRB sub adc fcmovbe fcoml clc rex.RX adc rcrl gs mov fsubrs mov cli xchg je ja cmp repnz outsl (bad) (bad) add xor adc pop (bad) mov cmp test (bad) mov rcl sbb add fs adc rcrl mov xorb jno xor sbb mov movabs mov mov leaveq sbb jne lods iret adc (bad) adc pop sbb (bad) rclb sbb sbb sub mov bswap (bad) mov add (bad) imul mov adc push in (bad) push adc adc (bad) ds callq (bad) xchg ja mov push pushq stc adc mov outsb (bad) push adc mov pop (bad) (bad) or outsb adc adcb pop push rex.XB and rex.WX xor push rcr mov iret loopne hlt mov movsb adc jmp sbb movsb (bad) cmp pushq (bad) lret jae fs insb xchg sbb fsubrs bnd test xchg (bad) mov sbb movabs adc mov push adc lock (bad) mov fprem1 in loope mov test ficom jne jmpq movsb jg lretw (bad) mov mov cmp adc rex.W xchg hlt adc rex.WRB mov pop imul movslq adc mov sub (bad) fidivrl (bad) mov adc adc je adc mov pushfq pushq (bad) or jp (bad) int3 xchg (bad) adc cmp lock sti sub je int lret sub sub pop adc rex.B ror clc ds pop (bad) fsubrp cmp jl jge movabs jg pushfq and ja (bad) in (bad) adc add roll and mov (bad) push fs adc movsb test (bad) mov jno adc pushq (bad) xor (bad) rex.XB (bad) imul shlb scas (bad) int3 (bad) sbb movabs cmp adc loope jb xchg scas mov add callq cltd jae movabs jnp sub cs rex.WX adc mov add adc ss pop adc frstor retq loop jo adc add jge fwait xor adc pop (bad) adc pop cwtl stc xchg push pop adc xor and repnz adc xchg adc in sub mul (bad) imul scas rex.R adc mov xor out icebp cmc repz mov js xor xor mov rcr and mov rex.WRX xchg (bad) cltd adc js fldenv mov sub test fisub test pop std sbb cwtl movslq (bad) sbb adc xchg incl xchg fcmovnbe and adc retq adc addr32 (bad) fstl (bad) callq cmp sarl callq (bad) adc cs jbe adc rex.WB jge in sub rex.WX adc ja adc mul mov add pushq jno sbb adc adc xchg adc jnp push xlat sub rex.WB xchg out rcrl adc or or xor int adc rcrl sbb add adc add (bad) in adc mov stc data16 std mov mov adc pushq rex.R (bad) movsb push adc ja mov retq xchg cmp adc adc jge xchg sub mov (bad) ja mov callq (bad) ficompl movslq cmc mov (bad) jmpq add lahf adc (bad) cmp push loopne callq mov (bad) adc sub rcl adc fwait outsl movabs xchg add mov xchg adc cs test jle int3 rex.WRXB xor js (bad) xchg jae leaveq jo xor mov cmp in (bad) nop repnz pop adc push prefetch adc (bad) shr adc fcoms push add loope adc pop notl mov fs push clc fnstenv je (bad) adc adc (bad) mov xchg (bad) hlt fcoms mov (bad) addr32 jb test adc jnp adc sbb movsl sarb cwtl adc jge ljmp (bad) outsl movabs mov std xchg adc (bad) and sbb jp mov xchg push (bad) adc (bad) cmc or adc out std out cmpsl test adc fisttpll lods ss xor sbb adc push (bad) (bad) cli sarb (bad) sbb mov hlt cmp test (bad) ficompl xchg rex.XB (bad) sub cli (bad) and mov mov retq adc scas std stc xor js xchg clc sub lret adc mov jns sahf cmpsl jmp adc ffreep out shrl (bad) push popfq fs adc rex.WRB push jmpq push (bad) xchg (bad) insb lea imul test xor fisttpll add mov std xchg adc or or int3 cli stc add adc push mov (bad) fcompl and jae sbb pushfq xlat sbb je (bad) (bad) adc (bad) (bad) (bad) push test cld rex.XB movsb popfq or adc pop add xor out adc sti loope,pn push adc cmp pop imull callq (bad) jne adc fidivl icebp xchg sbb adc fcmove xchg sub (bad) rex.W lock adc or cli add adc fcomps mov adcl nop (bad) rex.B push insl movabs (bad) (bad) adc push xorl dec push rex.WB or mov xor sub xchg movb fcom adc mov or mov jno mov adc cmpsl adc (bad) mov rex.RB (bad) sbb pop xchg fwait xor adc adc out out jbe or jg add adc xchg js (bad) sti (bad) mov sbb (bad) cli xrelease (bad) jae or adc shrl push sti (bad) fmuls fsts xchg (bad) xchg imul (bad) cmc xchg adc xchg adc movsb jge jp and sbb mov (bad) rcr outsl pinsrw jb in rex.W sbb adc xor and mov shr rcr cli cmp rex.RB xchg adc je movabs (bad) cmp and out cwtl mul jb adc out sahf push adc (bad) mov rex.WRXB fs lods jno xchg movabs pushq cmc rex.B cli mov mov pushfq pushq adc fsubrl mov ds mov adc cmp (bad) adc lahf (bad) lock (bad) cwtl repz (bad) addl rex.WB adc (bad) out push xlat adc movsb (bad) stc jae cli (bad) mov xchg (bad) stos mov adc leaveq movabs (bad) cltd (bad) sahf cwtl adc addr32 (bad) mov mov rex.WR adc leaveq push xchg retq sbb in (bad) imul test cmp int pop ds mov or adc data16 rex.WB addl fdivrs stc nop rex.WRXB stos (bad) adc fdivs addr32 (bad) jle (bad) rex.XB jge (bad) (bad) adc xadd lock lahf cmpsl (bad) rex.RB sub sbb mov pop sub rex.WRB push xor sbb callq xchg adc push js adc in (bad) stos clc rclb fdivrp fmull mov lock lods xor jne pop lods xor clc add pushq mov js adc (bad) mov adc push fidivl add cmp jo (bad) (bad) (bad) (bad) shlb lcall cmc (bad) pushfq loope (bad) fiadd xchg xor es sbb (bad) push adc mov (bad) and adc in sbb ja cmp push adcb (bad) adc mov (bad) push stos testb out in loopne xor sti xor mov repnz adc jnp push mov sti loopne adc repz rex.WX (bad) rex.WX (bad) (bad) enterq or (bad) xchg push push xor cmp sub fisttpll lret push adc adc and xor jle cld ficom push (bad) sti pop mov lock adc repnz stos pop (bad) mov mov (bad) adc xchg pushfq mov (bad) je xlat add jbe lods rex.WRB lahf adc in mov addr32 and sbb push mov scas xchg jns adc movabs xchg mov repz es push jle test in lahf mov test fnclex (bad) cmp lock pushfq imul mov pushq adc sub rcll stos repnz (bad) (bad) adc push adc mov rcrb cmc outsl (bad) ja mov hlt rex.WRXB adc cmp pushq scas (bad) jrcxz adc notl (bad) rex.WRB adc rex.WRXB or adcl rex rex.RXB rex.WRB jg adc (bad) loopne rcrl adc mov mov movabs adc fmull or add (bad) (bad) lods mov and adc rex.WR out clc cwtl adc sub and or (bad) jp rex.XB idiv fsts xchg (bad) (bad) xchg jno pop cmp add in and pop adc adcl adc jp mov mov jge rex.WRB sbb adc out cmpsl lahf rex.RB std movsb (bad) pop rex.X cmp jae fisubr fcoms sti cmpl test outsb cmp rorb push stc in xchg adc or clc cmp (bad) rex.WRX (bad) int and pop callq lock adc fwait (bad) add insb xchg rex.XB pop pushfq je icebp (bad) rex.WB gs xchg (bad) mov or jrcxz adc adc data16 (bad) mull adc insl rex.RXB (bad) addr32 sbb ss or loopne xlat adc jns movabs lock xchg sbb adc sub push imul (bad) (bad) rex.WR jae jg (bad) (bad) mov adc in pop (bad) adc cmp callq rex.WRB adc (bad) sbb adc adc xchg lock jle iret mov (bad) stc movabs and xchg fcmovbe out or icebp add cld xlat rex.X cs xchg jb mov cmp stos xor out push (bad) loopne rex.RX mov (bad) std rex.WB insb adc cmp test adc cmp (bad) jno mov rex.WX cmp lret push xor in (bad) xchg jg (bad) movabs adc jbe sbb test xchg mov xor and pop stos xchg jno std push mov adc push test rex.RB (bad) adc mov add (bad) fwait insl adc xor sbb (bad) jnp cmc jmpq out neg stos mov adc jl stos rex.WRX adc rcll (bad) (bad) repz pushq xlat xor mov adc xchg fdivrs pop int3 stos cmp push push pushfq cmpsb (bad) cmp and jp adc mov retq push cmpsb xchg cli adc sub adc jne xor push sbb pushq or sbb jne (bad) jrcxz fucomi mov ja ffreep cmpsb popfq mov je adc mov (bad) mov xchg frstor pushq xchg in add xchg adc or (bad) (bad) (bad) adc mov cwtl imul cmpsb fmuls mov (bad) cmp (bad) sbbl xor clc adc xchg movsb adc scas ja (bad) cli sbb out or jmpq sbb (bad) mov lahf sub lods movabs push fcomi movabs retq (bad) adc fsubrl xor adc adc adc rorl adc sbb rex.WR (bad) cwtl (bad) mov adc adc adc insl repnz jmpq rex.W mov adc adc lret sub mov adc callq jb jp outsl mov (bad) lea and sbb push incb adc es xor out sbb sar xchg adc mov push and adc xchg (bad) xchg adc iret test sub sub mov ss pushfq cmp or (bad) adc push clc movabs stos (bad) (bad) pop outsl mov sti jb fstl lea rex.XB stc adc (bad) xchg cmp adc adc sahf jbe cmp (bad) fwait xchg popfq cmpsl in jbe fdivs mov adc (bad) (bad) adc or cmc in jrcxz pop adc lods pop (bad) rex.WR and pushfq pushq addr32 fwait loope jne (bad) (bad) adc push imul adc push insl movabs adc xor adc movsl stc mov adc movabs adc sub push rex.RX jne mov (bad) pop hlt rex.WRB lods (bad) (bad) cmp jno movabs sbb lret xor outsb callq mov (bad) and mov mov xchg clc cld rex fwait cmp adc push xchg callq xor ja jnp jbe sbb fwait adc mov test adc xor mov jb mov scas lods clc adc loope jge lret (bad) fiadd adc sub incb fwait rex.X cmp and mov ja or mov adc pushfq int jle test movsb xor or or loope (bad) jne mov pushfq xor movabs fdivr xor cs mov xor movslq jne es rex.W notb or fcoml mov cmp and cmpsb push sbb fs add hlt cmc je fs adc stc sarb adc (bad) out (bad) mov (bad) (bad) adc or loope adc (bad) or nop (bad) pop adcl es adc sbb sti or rex.WX xchg push cwtl rol fildl adc rex.WRB rclb jns add adc add adc xchg mov js lret or and lods addr32 mov in adc (bad) sbb retq notb jg and outsl callq pop xor fildl xor test rcll mov pop adc ficomp je jb xor stos mov adc test fcoms xor mov push sbb pushq and mov ficompl adc (bad) cs cmp (bad) popfq (bad) jg cmp adc add jns or add mov scas pop adc test mov sub mov cmpsb lahf cmp adc cmp loopne add pop (bad) movabs divb adc mov enterq outsb adc es test iret (bad) or mov push adc mov cmp jle (bad) (bad) adc adc cmc jno lock pop sbb sub push adc cmc adc jns add adc je cld (bad) adc xor jrcxz cwtl nop jno shrl ds mov adc fs xchg and mov adc and (bad) and adc out mov adc rex.WXB push adc push stc and mov mov fcoms sbb mov pop xchg fist or (bad) callq cmp adc loope rex.XB scas adc incb mov jne cwtl mov pushfq jae adc xor ficoml rex.WRXB adc mov rex.RXB insl in add cli movabs sti adc pop ss adc add (bad) callq (bad) adc push rex ss clc sbb (bad) rex.WXB adc (bad) pushq jg sti jno fstl push std addr32 movabs push cmp or insl imul adc and (bad) cmp rex.WRX fs scas (bad) cvttps2pi test movabs adc (bad) or rex.WR fwait subl (bad) mov cmp clc (bad) (bad) (bad) ds xor (bad) xlat (bad) jg cmp mov (bad) cmp out or mov xor movabs mov (bad) push adc (bad) jl notl adc lods xor pushq adc jno jmp adc xchg and sbb push mov push callq pop (bad) movslq rorb sub out (bad) rex.R xor push (bad) (bad) (bad) adc (bad) adc rolb mov adc xchg stc adc cli or pushq xchg adc clc (bad) out pop add fcoms rcll pop xchg mov test adc adc pop xchg (bad) adc idivl imul (bad) movabs mov loop jo stos jmpq (bad) adc sbb mov scas mov rcrb pop nop subb xchg adc xchg mov movabs rex.XB xchg sbb adc iret rex.RXB jno adc or subb fistpll mov mov pushfq divb adc jge or adc outsl adc xchg push movabs outsb mov (bad) fnstcw clc xor pop push dec insb stos in (bad) mov mov cmp mov pop jne xor push push loop mov adc or (bad) xchg adc iret sbb pop mov movslq adc or (bad) and jge adc clc stc stos mov (bad) (bad) sbb out cmpl adc adc xchg sbbl (bad) ja adc icebp lahf cmc jge (bad) adc mov and (bad) sub (bad) cmp rex.WRXB adc (bad) sub mov xlat mov clc sub cmp adc or popq pop rex.W movsb lret push xchg jnp and (bad) xor iret cmp (bad) add ss adc pushq add adc xor adc movabs cmc out adc fisubl xchg fdivl mov sbb adc mov (bad) rol (bad) roll (bad) mov pop clc xlat cmp jmpq pushq push jnp adc outsl jne movsb add retq xchg lahf xchg pushfq jge (bad) xor cmp push cmp (bad) movsb adc (bad) (bad) mov fcoms mov pop cmc and adc cmpsb mov callq mov adc pop add (bad) adc cltd jnp push adc sbb (bad) pushq and mov adc cmp pushq mov xchg movslq push cli orl (bad) push mov lcall pop push mov loope mov mov sbb adc adc jno repz add fwait (bad) rex.X adc mov adc mov adc gs jge or sbb lock mov lret sub push xorb adc xchg pop xchg ds push mov callq clc jno mov mov rex.WRB mov adc adc (bad) mov add popq fsts mov (bad) adc adc (bad) adc or (bad) sti or idiv pop or pop add (bad) (bad) adc stos lock add js xchg (bad) rex.RX or (bad) pop push mov callq loop or push imul outsl movsl sahf or xor ds rex.WR rorl adc adcl sti cmpsl and adc in mov jge out imul lock fdivrs (bad) in ss push mov adc (bad) (bad) push push sbbl rcrb adc adc push adc adc jne ja (bad) adc (bad) add jae adc (bad) adc adc cmc ja loope clc sub test rex.R lods (bad) jmpq sbb adc sub sbb xchg jns mov xchg cwtl fwait rex.B mov imul sub cmp cld std icebp pop leaveq push adc andb sbb adc adc adc add (bad) mov adc loope mov cs sbb jl loope fsubrl push leaveq movabs add int fldenv and push adc pop mov push mov nop cli jle adc add loopne out xchg retq adc mov adcb iret outsl out test mov (bad) lret test mov pop pop insl rorb (bad) or (bad) xchg movabs ficomp cmp mul sbb adc andl (bad) gs js (bad) pop sbb mov or jnp cmp xchg insl (bad) rex.R pop sbb lret add fdivl xor rcll xlat stos es jp add adc fnsave pop rex.RB adc clc mov push adc int jp (bad) sti mov add xor loop add cmp xchg popfq add xor rex.RXB rex.RX fadd mov jl (bad) xchg (bad) and (bad) xchg jge adc jle (bad) movabs (bad) pushq rorl idiv cmpsl rex.WX (bad) adc cmp push (bad) icebp jnp cs adc cmp mov lods adc sbbl and and xchg lea movabs add (bad) sbb cmc adc sbb xor adc test mov jae lods rex.WRXB rex.WR andl push adc cmp jbe adc fnstsw or (bad) (bad) cmc xlat (bad) cwtl and int3 pop jo rex.RX adc rex.RB lods mov fwait rex.XB imul mov mov adc clc pop adc (bad) push (bad) or mov push (bad) sub add rcrb cmpsb jp cmp add push shll test jrcxz mov movslq sbb callq and and or in pushfq movsb (bad) jl sbb adc adc rex.RXB adc push (bad) xchg adc ss sbb stos or mov pop push xchg xchg cmc push (bad) xchg adc shll adc jae (bad) cmp adc (bad) sbb rex.WX repnz (bad) cmp pop mov push jno adc out int (bad) mov pop lock cmp sub adc outsb clc xor or pushq adc and (bad) cltd jg stos or xchg callq fisubrl pushq stos (bad) lret adc fcoms movb es jge sbb mov adc mov push add repz loopne test test (bad) adc adc (bad) jnp jbe cmp adc lock rorb or testb iret xor pop (bad) cs out nop (bad) mov xchg adc adc sarb jrcxz imul subl or out mov or xchg adc xor pop (bad) rex.RXB adc jnp je pop (bad) in adc rex.XB adc (bad) movsb (bad) cmp out fwait pop add adc adcb mov jns jl fisubrl jbe mov or loop mov movabs lcall lods (bad) jg (bad) sbb rex.R or adc rcl fstpt cli adc sub adc sti (bad) not adc jae mov out es push jns (bad) (bad) sbb adc (bad) loope xor (bad) mov push cmp fcoml xor rorl jne or add and sbb adc xor mov adc div mov clc sbb add push cld sbb mov test movabs adc jnp icebp mov jae xchg mov jge jno scas adc xchg insl adc data16 rex.WRB repz movabs adc test rex.WX lock xchg mov mov (bad) rex.RXB sbb mov pop and jno loopne iret out adc pop adc (bad) mov adc xchg adc pop mov jno cmpl jmpq mov (bad) (bad) add add jo popfq rex.XB xchg jae (bad) and sub xchg adc jb adc loop adc push xor adc pop retq adc fdivr lea addr32 cmp pushq adc xor sbb cmp adc jne and pop pushfq test add stc cmpsl js mov jbe out loop adc adc rex.RB int push cmp xlat movsb outsl imul add xchg jmp fdivl fwait sti and adc adc (bad) cwtl adc rex.RX loop mov cwtl jns loopne stc mov cmp lea rex.WXB adc roll adc add cmp mov testl repz data16 std es mov adc hlt (bad) (bad) and (bad) push xchg decb iret adc out push adc sti and lret jb (bad) outsl cmp fsts mov data16 fsubrl cmc lahf cli adc sbb push rcrb adc (bad) ss mov (bad) xchg rorl pop or sbb and (bad) (bad) mov hlt sub jno or add fwait hlt jbe push or loope add mov or outsb (bad) adc (bad) cltd adc xchg fiaddl fcom xchg xchg sub (bad) adc js mov pop sub add (bad) or and popfq fsubl mov xchg adc adcl (bad) in fnop lods xchg fcoml cld push popfq mov hlt rex.WRB xor (bad) (bad) sti (bad) (bad) (bad) adc sub cmc loopne hlt fdivs xchg jge pop adc xchg hlt cmc retq (bad) xlat (bad) leaveq sub ficomp imulb sub adc repz push (bad) cmc jne (bad) push mov (bad) sbb imulb xchg (bad) jl adc (bad) clc movsl jbe xchg push or jmp or addr32 or and (bad) cmc mov xchg adc mov push repz testl stc adc adc xlat mov xor nop rcr hlt cmpsl adc and test push xchg divl adc lret test sahf add mov hlt or mov fs sub mov adc sbb (bad) (bad) and mov xchg cmp cld push (bad) hlt push movabs add pop push or int xchg lea repz lret fdivs xchg sbb repnz insb jp int (bad) (bad) movabs (bad) mov xchg xchg je (bad) push std cmc mov sub negb in jbe xchg pop xor ss (bad) sbb in (bad) loope jbe xchg xor and (bad) (bad) out fwait div (bad) adc mov xchg sub divb cmp mov adc movsb not push push sbb (bad) push (bad) adc mull (bad) push movabs (bad) (bad) stc hlt outsb adc fwait incb push (bad) testl int in or xchg jg pop xchg scas xor add pop fs adc jl sub push cmpsl xor adc (bad) out adc push sbb sub movslq fist movsb cmc mov sub std adc (bad) cmpsl jne jbe push xchg push or (bad) (bad) ss (bad) adc je push cmc (bad) adc (bad) jle fdivs jae cmp mov not mov gs int fs js insb add test mov xchg imul push cmpsl negb (bad) xlat and in add cs (bad) add (bad) or (bad) adc pushfq rex.RXB imul mov icebp jbe push leaveq divl out and jno vunpckhpd pop je adc xor adc add pushq in (bad) fsts outsb mov jne movabs add (bad) pop mov push fdivrl (bad) movabs adc movabs or xor adc xor fcom (bad) orl adc mov sti and adc rex.WR (bad) notl lret out add sub xchg mov pop fcomp (bad) or pushw (bad) mov adc retq mov loopne sub adc or insl xchg sbb adc (bad) jo hlt sub mov mov leaveq (bad) ja (bad) fsubrl adc (bad) stos rex.WXB adc push cmp pushfq pushfq pop imul fildll adc out movabs adc adc (bad) rex.WB and xchg (bad) in and (bad) jne sbb adc (bad) or movsl xchg rolb (bad) fisttpll movabs sbb rex.W sub (bad) rex.WRB (bad) rex.X sub fist sbb adc push add xchg sub cmp outsl fwait repnz jmp add adc jrcxz stos pop andl clc adc mov mov pop orb rcr adc jrcxz or sub adc scas (bad) xchg (bad) xor xchg rex.RXB movabs out push adc loope (bad) je rex.WRX (bad) movabs add xor (bad) add or add adc movabs scas or (bad) jp rex.XB sbb (bad) mov mov adc rex.W jg adc or rex.B pop (bad) jge repnz testb add jp cmc push rcll jge,pt (bad) orb ficom xlat or push testb clc adc rcrl cwtl (bad) push adc push (bad) fnstenv cltd mov loope out mov adc (bad) fsubs std adc sub (bad) movsb wbinvd rex.WRX cmp cmp adc insl (bad) and cmp pop movabs movsb callq or jg sti rex.WR nop xchg mov and movsb popfq rol cmp insl (bad) rex.RX repnz (bad) repz rex.XB es lods rex.RXB (bad) cmpsb rex.B fdivs pmaxsw sbb jo adc mov adc cmc test adc or (bad) sbb adc pushq movabs std rex.WRXB mov int3 sbb repz add mov rex.RB xchg hlt (bad) adc test callq (bad) cmp stc in movabs lahf test (bad) push scas lock jb lret mov mov xchg cld jle in pushfq (bad) sub (bad) adc mov addr32 xchg cli xchg out rex.WXB loop (bad) movabs insb xchg callq fsubrs testb retq in fwait or xor xchg adc fidivrl sbb shr add adc lods xorl (bad) mov scas adc fidivrl mov cli (bad) sub sbb (bad) enterq or iret mov mov fistpl movsl and (bad) or adc jl lahf lret adc (bad) jle or sbb lea jbe jg and sub mov stc (bad) (bad) lret sbb and mov fsubrs pushfq and or fist cmpsl jle xchg jno (bad) add push (bad) scas movsl cmpsl int movabs xchg sbb and retq fsubrl cmp (bad) lods (bad) in movabs and adc mov stos rex.WR jns mov jge jp movabs xchg vunpckhpd movabs popfq mov sbb rex.W and xchg mov mov sahf and popfq stos fs add cmpsl adc cmp jo addr32 (bad) push sarb std adc (bad) pop (bad) pop adc sbbl adc iret jo pushq ficom sub rex.WR sbb imul stos (bad) adc lock mov clc cmp movsl loopne push mov adcl outsl cmp jge lods mov test vmovaps rex.WX sub cli rcll jge (bad) xchg adc out cmp pop xor test adc cld (bad) and mov pop mov pop xchg (bad) rex.B jne sbb retq and (bad) lock cwtl xor adc and push mov insb xchg jl adc rex.RXB outsl (bad) adc cmpsb scas mov test movl rorb adc rcll rex.RXB (bad) xchg (bad) jne mov out cmp mov mov xchg mov and (bad) jrcxz push movslq adc in adc cmp pop ror jnp clc cmpsl shl mov mov xor xchg fdivl push adc cwtl je rorl add mov xchg mov sub cld pop xor lods addr32 adc sbb and adc xchg movabs fisttpll pop (bad) sbb adc (bad) test or jmpq (bad) pop pop fstpt adc cmc (bad) and rex.WRB stc movsb xor rorb pop test retq mov push add (bad) rex.WRX cs (bad) cmp (bad) or add rex.X cmp or jno (bad) adc int mov data16 jmpq fnstenv rex.WXB rex.WRXB movsb mov pushq cmp cmp adc xchg xchg adc adc (bad) (bad) (bad) or (bad) cmc inc repnz (bad) mov loop push (bad) sub add out jbe push in es in js rcrb jl mov and mov enterq add or mov (bad) xor push or callq adc (bad) int3 fcomi (bad) (bad) adc xacquire or xlat mov nop out (bad) rex.RX rex.W xor loop (bad) (bad) mov (bad) sub xchg sbb jle rex.WX adc out xchg lods cmp retq push out and (bad) sbb and imul fdivrl (bad) lret add or sub (bad) (bad) cmp (bad) mov int3 (bad) (bad) (bad) insl push adc adc sbb and outsl (bad) sti fwait enterq sub clc fdiv (bad) xchg fstl (bad) adc gs add mov int mov sub test movabs (bad) xchg ss vunpckhps sbb stos adc and and adc jrcxz out pushq mov imul adc ror add (bad) (bad) rex.WRXB (bad) sarl (bad) cwtl pop or loop rex.RB clc mov (bad) lods lret (bad) adc retq pushfq adc xor loope (bad) pop rcrl clc loop ss (bad) mov callq (bad) stos lods sub or push rex.RXB xor ficoml rolb movabs movabs push (bad) (bad) lret sub or mov fistpl test imul adc sbb in adc push xchg cmpsl xchg cmp jle movabs out lea movabs sub addr32 fsubl jno loope (bad) mov hlt movabs cmp lret stc (bad) retq rex.WRXB adc sbbq adc rex.WR adc add in cld adc and push clc mov cmp rex sbb adc jmp in adc sbb xchg (bad) adc ficoml (bad) fcoms jo mov lea adc adc rclb clc add and jmpq or fisubl insl mov pushfq mov out push addr32 stc rex.WRB rex.W int or loopne or adc or int movabs jnp out mov in xor divb iret (bad) xor fidivrl adc (bad) (bad) repnz adc mov cmpsb adc fwait stos retq mov stos std (bad) mov mov fildl pop adc lock int fcoml sub nop adc cwtl (bad) roll outsl in sbb rex.WB sbb adc out adc pop mov mov sub (bad) ficoml sbb rcr sahf (bad) cmp sub nop mov stc rcll mov or rcll push push (bad) xor cmp (bad) mov sub (bad) adc jge fcoms mov (bad) sbb int3 (bad) rcr pop cmp in lods (bad) (bad) adc pushfq rcll pushfq add insb xchg repz (bad) adc jmp or orl movabs jns in cmp add adc and (bad) or (bad) test rex.B or add out or (bad) adc or adc adc sbb movsl and xor rex.W rex.RXB sub or jg sbb sbb cmp (bad) pop push cmpsl mov rex.WRXB lock and in rex.WRXB jb scas jne out test stos out or lods sahf fs in lret adc stc cwtl sbb outsb sbb push lea cmc stos or int int3 push adc cmp nop sti (bad) mov adc cmpsl jns sub iret out xchg fxam mov rex.RB sub je mov movb adcb jge jno (bad) or (bad) sbb pushfq adc (bad) fcoml xchg add retq xor push sbb jne fmull xchg stos ja adc hlt adc sub jo jmpq jae adc (bad) addr32 add lock (bad) in xchg xchg adc sti movb in adc and adc outsl shlb fdiv jmpq or rex psadbw retq movabs popfq cltd xor jo mov (bad) pushfq adc cmp fidivl loop jbe callq cmp xchg addr32 test rorb mov rex.WRX (bad) lret adc rex.X je (bad) repnz test stc fsts xchg (bad) and (bad) xlat or (bad) data16 (bad) mov rex.WXB push sbb add or push mov sub adc xlat pushq jb (bad) and pop adc outsb sub adc fbld sbb fwait in xor nop (bad) (bad) jl rex.WRXB stc xchg adc rex.WXB adc test sbb rex.WRX push sub fstpl adc sti xor (bad) xor scas (bad) out mov pop rex.XB addr32 sbb jne xlat movsb xchg push orb (bad) mov popfq sub (bad) adc mov jne xor sbb jmpq fsub (bad) jne sbb sbb xchg xor adc pop xchg mov (bad) movabs add repnz (bad) (bad) (bad) mov adc fidivrl cmp mov imul rex.WRXB rcll mov adc mov pushq or push adc xor mov rex.RB (bad) cmp cmp push mov sbb jae adc xchg xor xchg adc or and popfq xchg (bad) bnd push and sbb adc cmpsl stos xchg or cmpsb xchg (bad) cwtl pop int3 in callq xor in adc push (bad) (bad) jo scas xchg pop sbb (bad) in sbb and jne add hlt cmc pushfq adc icebp (bad) cmp push jle cli pushfq repz (bad) lret pop mov adc mov and pop mov push sub jmp adc movsl adc cmp lods adc leaveq callq jg xchg rex.WRX adc imul (bad) jmp movsb xchg scas sbb clc mov push or rex.XB (bad) xchg test rex.WXB mov adc (bad) pop fmull jmp xchg xchg and pcmpgtb shll fwait cmpsl mov adc push mov pop adc sub cmpsb or rcrl and sbb jrcxz movsb adc test sahf adc out retq push retq rex.B es or jg adc sbb rex.XB and xchg loope sub (bad) and mov (bad) add cmpsl ss rex fisub int3 shr movabs pop mov (bad) popfq adc lods leaveq sbb rex.WB pop fisttpl fadd cli jmpq ss out (bad) mov imul xchg add (bad) (bad) jbe rex.WR or (bad) test ss loop (bad) rex.WRB (bad) mov (bad) mov adc (bad) rex.WRXB mov sub sub adc mov rex.RB cmp push negl adc mov iret and rex.WRX repz lods cmp fdivl outsl or (bad) out adc xchg cld rex.RB lock mov (bad) sbb (bad) (bad) adc insl outsl int lret mov xchg rex.XB retq jmpq jno mov in rex.R sahf out es pop and or xchg (bad) mov xchg notl xchg xor xchg push mov (bad) cmp enterq adc cs cmpsb or (bad) (bad) jo pushq lods cmc in or sub lret insl adc mov adc and xchg out add (bad) pushfq rex.WRXB push mov xchg mov pop jmpq adc icebp and js xchg push test out movsl adc pop xor adc jb (bad) mov sbb cmp (bad) cmc mov fcomps (bad) in (bad) sbb adc xchg add (bad) add stc insb push and callq cmp xchg adc adc pushq jne jo rex.RB or movabs jo hlt fisubl (bad) xlat lret adc add roll popfq jns (bad) sub adc sub or adc push or adc adc out insl stos or add cmpsl (bad) or (bad) (bad) mov movabs adc adc jp mov sbb rex.RXB cmp xor (bad) jle cltd clc insb lock mov rex.RXB mov (bad) sub mov adc mov adc test (bad) adc cmp rex.RX adc xchg cwtl xor or fwait sub (bad) and rex.WX (bad) movslq adc or (bad) xlat adc ds mov or (bad) rex.WR push or (bad) out jle sub movabs xchg push (bad) cmp (bad) stos (bad) ror push je push adc fs fcompl adc pushq (bad) add rex.RB callq xlat adc and jmp (bad) adc push or xchg repz xor adc lods (bad) cmpsb adc rcrb decl (bad) xor (bad) movabs adc mov xlat (bad) xchg rex.WRXB adc sub rclb ljmp (bad) cld adc pushq cmp lea gs rex.R jg push (bad) lret rex.RXB rex.RB rex.XB rex.B mov (bad) (bad) and sub xchg adc (bad) movabs push xchg in outsl push push sbb adc cmp pop sub in rol lods popfq rex.WRXB rex.WXB jmp sahf jrcxz and rex.WRB or pop or (bad) js jae mov jnp adc cs rex.RX sbb fs and adc adc lea clc pushq callq lods out sti retq mov xchg (bad) adc pcmpgtd idiv jbe jb clc lahf xchg or rex.RXB pushq rex.WXB shrd (bad) fnstsw jge imul adc push fsubrl rcll add test data16 ficomp adc jno pushfq or mov jmpq fdivrs xchg mov adc and add jno (bad) pushq push repnz rex.WXB fwait xlat or push leaveq adc mov negb pop xchg lock mov lahf xor jnp or icebp adc xchg rex.WRB in adc (bad) fcompl adc mov adc cli shll jb push fdivp int mov scas out imul rex mov rex.R fadds jbe adc or leaveq (bad) adc je jg adc lahf lea out fucomip (bad) push (bad) and adc cmpsb cmpb adc sub stc mov pushfq test adc (bad) jno (bad) adc mov push xlat mov cmp lock adc out pop mov (bad) adc (bad) gs lahf adc jmpq inc sahf sub in gs mov fwait movabs (bad) and movabs mov stos adc mulb mov sub adc lods outsl sub sarb rex.WXB ss movsb cmp adc sbb mov and jb (bad) jbe (bad) and out xchg xchg and in outsb adc retq test or mov rex.XB cs adc (bad) outsb callq leaveq insl movsl (bad) rex.WX xchg adc jmpq movabs rex.WB push (bad) xchg pushfq fstl callq sub movsb sub mov adc stos jne (bad) adc (bad) jb xlat fstpt adc xchg sub cmp unpckhps rex.WRB xchg mov rclb jne sbb pop cmc out and jl popfq (bad) (bad) clc movabs std adc rex.XB pushq (bad) jb push rex.RB sbb (bad) sub or adc push xchg (bad) pop clc in punpcklwd iret push and adc in (bad) adc xchg rex.RXB rex.WR out push int3 xor rcrl cmp test pop cwtl xchg mov sbbb adc add jrcxz adc xchg rex.R clc jg (bad) mov rex.W callq imul rex.WB fldenv mov jae xchg (bad) pushfq ss sub or xor (bad) repz push xchg rex.XB es lret sub lret (bad) and or sub adc enterq adc rex.RXB imul xchg or (bad) adc (bad) (bad) adc jne rex.WX out sbb mov rex.B xchg (bad) jno mov xor add xchg xchg jge movsl adc (bad) fldt fcom loop nop adc repz (bad) rex jb xchg scas xlat or sub and rep adc mov xchg scas fsts jns cmc jnp sti xor adc movabs rcr and xchg imul sbb rex.RB lock clc or (bad) jl push js mov mov out adc divb stos adc loope outsl xchg adc sub (bad) rex.WRX rclb mov rex.RXB rex.W retq jno and push adc xlat stos xchg gs loope mov adc mov out sbb adc loopne lods or sbb fnstsw sbb adc rex.RX ss sahf lahf out adc mov jg imul lahf sbb (bad) or mov nop adc cwtl jp rex.WRXB sbb (bad) repnz adcl mov jrcxz jl (bad) movabs (bad) sbb sub push mov mov ss (bad) movsb loope or (bad) adcl mov cmpsl adc cmp or fsub subb adc xchg adc xor cld adc movabs and add (bad) cmp mov fsubl pop cwtl cmpsb negl sub jo andb js jmp lret mov (bad) fldenv or jg xchg pop cmpsl jnp lcall ja xchg adc stc adc (bad) gs mov loop add (bad) sbb cmp adc sbb in adc jge rex.RB adc lea sbb lcall lock fcmovu (bad) (bad) retq pop fsubrs adcb in or adc scas (bad) div xor xchg mov fs (bad) je adc cmpsl cmp fldenv stos cli (bad) mov add adc fist (bad) jbe jle fist rex.WRXB sbb jo nop mov adc callq (bad) xor adcl cmpsb rex.X ss fildll scas clc fwait (bad) shr push xchg jl adcl in cwtl adc rex.RXB repnz lret pop mov (bad) div mov loopne rex.WX pushq cmpsl loop adc sub add and (bad) sub xchg out sahf adc cltd imul or fcoml cmp adc scas in or clc pop rex.B rex.W and rex.XB (bad) pop push orl in lock (bad) adc sbb sbb (bad) jo (bad) (bad) mov test jge cmpsb sub xor fsts pushq adc cwtl adc adc in mov adc xor (bad) cmp mov adc (bad) repz (bad) jmp xor cmpsb pushq (bad) mov rex.WX rex.RXB movabs scas ja lea and (bad) movabs (bad) pushfq xchg fs sub mov (bad) xchg (bad) xor adc out pop (bad) enterq js rex.WR mov adc push rex.WRXB (bad) clc fsubrs addr32 decl mov lods adc mov and adc int lea (bad) jle or scas fstpl (bad) rex.WRB test xor (bad) ja and mov (bad) cmp addr32 (bad) mov xchg pushq pushfq lret mov (bad) (bad) cwtl sbb (bad) sub and adc (bad) retq gs (bad) pop clc or (bad) out mov adc (bad) mov ss movabs int3 add (bad) jbe cmp addr32 loopne push rex.WRXB cld (bad) rex.WRX mov test mov adc repz xor rex.RX fdivl popfq jno and (bad) lret adc fcomps add cwtl or mov (bad) (bad) iret jg outsl enterq adc push push sbb cltd rex.XB hlt or js clc sub push push xlat adc loopne shr adc ja insl xchg adc jge retq adc or (bad) lret (bad) or jb adc (bad) pop mov sub es (bad) std in adc cwtl (bad) push and pushfq hlt (bad) (bad) adc (bad) sub sarl lret adc divb adc movsb out or clc or mov (bad) fmuls (bad) pop and xor pop adc push cwtl sbb sub jne loop cltd push push adc in adc hlt xor pop adc addr32 jbe enterq (bad) xor movsb rex.RXB outsl jne fist mov pushfq (bad) adc pextrw push scas cmpsb ss xor adc mov adc in clc (bad) cmp rex.WB (bad) cmp jmpq pop jbe or loopne iret sbb (bad) icebp push and shrl adc (bad) cmp rex.XB nop mov fsts clc push cmp clc int rex.W mov je icebp int3 cltd loopne xchg push mov (bad) mov mov jl add xchg or (bad) and sub movsb (bad) ror add cmp or mov mov adc jae push adc push adc xor cltd js fnstcw jno xchg lret fcom repz mov sub (bad) sub rex.RXB pushfq (bad) rex.WRB rex.WRX adc insl cld adc xchg scas sbb adc and adc add fstp adc (bad) sub push adc pushq stos in sbb sti adc ja je adc or ss lock rex.WRXB push (bad) hlt movabs add xor xlat cmpsl lods (bad) or push jbe (bad) (bad) (bad) sahf sbb (bad) addb rex.RX (bad) adc lret loopne pop in adc xor cli xor insl scas adc outsb rex.WX fisttpll test sub (bad) (bad) sbb or and in adc sbb adc and xchg xor (bad) jne (bad) repnz pop (bad) rex.RXB adc (bad) (bad) and incb or mov fnsave adc and test cmp movsb imul adc stc mov adc cli or adc andl rex.WRXB stos (bad) int xchg (bad) cmp repz cmp lods cmc mov sbb adc (bad) pop mov lock add rex.WRX (bad) (bad) jp (bad) fisub stos cmp sub rex.R jg movabs lods mov cmp (bad) rcrl test jae (bad) pushq jo cmp rex.WR rex.XB jb cwtl pop xor jp enterq (bad) vfmadd231ps (bad) fsubl xor in pop fdivs gs pop sbb movslq add outsb xor sbb mov (bad) retq cmpsl movabs lret mov and movabs add adc rex.WX jl mov loopne movabs and adc mov out fwait adc pop rex.WRX adc sbbl push sub movsb (bad) ja (bad) (bad) loopne fcomps lahf sub adc rex.WX rex or mov movslq fiaddl sarl xchg add adc mov (bad) mov adc retq sub lret je repz (bad) pushq and adc (bad) cmp jge int mov mov in pop xchg adc or rex.R (bad) in pop xor rex.WB rclb cmpsl stc pop push sti addr32 popq rex.RB fimull xchg adc addr32 lret xlat rex.RXB sbb xchg xchg test rex movsl addr32 sbb rex.WRXB (bad) xor mov or rex.WXB js push iret rex.XB pop loopne scas adc and je add cmp rex.WRB imul popq rex.R (bad) mov jae scas adc pop rex.WRXB mov add pop cmp rex.WR add jae fadds mov xchg (bad) xlat xchg fidivrl (bad) mov rex.WRXB clc cld pop orl xchg push (bad) pop fdivrl shrl (bad) xchg adc cwtl or and jbe (bad) mov ljmp adc push out and xchg (bad) xchg cs in adc or in pop xor sti push (bad) popfq out add mov iret sub sbb outsl (bad) out rex.R xchg rex.B outsb add rex.WR rex.WRX movslq insb add rex.W sti movsb adc (bad) (bad) rex.W xor sub rex.XB cmc in add retq shrd rex.B or rex.RXB (bad) xor pop jo data16 icebp mov clc pop cmp (bad) pop jg jmp notb lahf es rex.RX stos xor xchg xor or mov (bad) popfq jae and sub callq cmp rex.WRXB cmp mov cmp fidiv sub ja lret or (bad) mov (bad) (bad) xchg adc adc data16 rex.WX (bad) (bad) int jno movsb cmp in jp movsl or push rol (bad) rex.R sbb movsb shll fs fnsave rorl icebp test pop adcl sti (bad) lret mov rex.W rex.WR cltd divl test sbb jno cwtl mov (bad) rex.RB rcl xor (bad) or adc or push (bad) pop adc xchg stos imul rex.WXB jle enterq test std test mov mov notl (bad) jg lock xchg (bad) lret shl mov (bad) out jge (bad) movslq mov jrcxz lods fistp pushq out scas (bad) out movabs rex.WXB mov rcll mov cmc int divl nop and movups jnp lods (bad) cwtl rex.RX int3 xor sub add (bad) mov in adc pop imul stc mov rex.XB movsb (bad) add cmp push movslq test nop int outsb jns outsb jns out sti jl or pushq xor (bad) rex.WRXB jo and in jmp retq js lock testb sarb rex.WRB (bad) and sti iret clc iret add movabs rex.WXB rex.WRXB movabs fs hlt jrcxz nop out int3 imul jl (bad) int3 addl and xlat roll rex.WXB or out retq rex.WRX gs jmpq (bad) movabs popfq (bad) out fistp outsl (bad) in mov cmp (bad) (bad) sub xchg in push xchg mov push loopne (bad) lcall in iret xchg jle fstpt std or outsl xlat rex.WXB xlat imul insl add out rclb xchg in mov mov cmp callq adc lods pushfq movabs movabs (bad) (bad) jp repnz add or rex.RX ja (bad) add (bad) adc push cld retq or mov out jg rex.X sbb and int3 or lock push rex.XB rex.RXB in xchg xor out mov rex.WR mov ja repz mov rex pop mov cmc lret ds add and (bad) pop (bad) rex.RXB cwtl adc mov rex.WXB decl cwtl rex.XB rex.RB cmpl fbstp pop sbb sbb (bad) (bad) pop out (bad) jb sub clc xor pop lods divl (bad) nop rex.WRXB rex.X in movsb and or rex.WRXB pop test sub lods lods xchg imul movslq xchg pushfq (bad) cmp and mov cmp lret xlat mov rex.WRXB adc sbb lods rex.R stc jrcxz cmpl xchg rex.WRXB xor (bad) pop rex.W or (bad) (bad) pop fnsave rex.WR lods rex.RX addr32 rex.WXB lea jmpq (bad) outsl clc sub add mov (bad) mull mulb test (bad) and scas rex.RB (bad) (bad) jno in xchg fistpll jo or rex.XB mov insb ficomp je rex.WXB out rex.RXB mov retq adc (bad) jl or (bad) int3 lods jg mov mov xchg or je fnsave mov adc rex.RX addr32 es es push movsb adc xchg rex.WRXB push movslq mov nop ja push int xor jo xchg push mov int3 xchg (bad) rolb sub out (bad) xchg xchg in addl pop (bad) (bad) in lea mov and rex.RB out xor push adc imul (bad) divl push mov jl nop jns xchg (bad) rex.RX addr32 jne (bad) (bad) xor adc in notl negb int3 test (bad) xchg push pop (bad) mov or xchg push stos push (bad) in (bad) rex.R (bad) xchg jne lcall pushq fimull (bad) (bad) lock sahf jo je popfq xchg adc adc xchg sysexit jbe psadbw (bad) es (bad) (bad) loop nop int adc or adc xchg (bad) jp push test fimull rex.RX and addr32 adc push cmc es add (bad) mov xchg xchg cmc imulb (bad) repnz (bad) lock and lret test sti out xchg (bad) out pushfq mov xor std je lret mov rex.WRX or repnz pop xchg shlb xchg rex.RB (bad) (bad) enterq adc in mov jo push xchg mul rclb mov nop (bad) rclb mov push rex.RXB fnop (bad) (bad) sbb add sub in rex.RX bnd add sahf adc jbe div mov notb movabs test mov push and xchg stos push mov or push test nop (bad) fs fmuls retq or or jrcxz sub (bad) rex.W mov (bad) hlt (bad) xchg sbb movsb add (bad) icebp nop push sti adc cmpsl stos pop (bad) (bad) mov out (bad) push lret push nop (bad) mov cmpsb pushfq (bad) pushq lret test movabs pop rclb mov (bad) retq sahf (bad) cmp push (bad) sahf jnp out nop xchg (bad) (bad) (bad) in pop adc (bad) mov (bad) std xchg nop (bad) (bad) jbe (bad) out shl repnz rcrb push cmpsl (bad) hlt fdivl (bad) add xchg mov mov (bad) push callq movsb mov (bad) sbb (bad) int3 push mov stos cmpsb add mov xchg rex.RX cwtl add jo or adc (bad) lock xchg adc mov push shlb and nop xor (bad) xchg push xchg pop mov sub callq push cmp rex.RX (bad) mov jp adc xor rex.WRB push add rex.RXB repnz cmp xchg adc (bad) adc (bad) or (bad) rex.RB (bad) rep in and mov add push out rex.W adc rcll test addr32 xchg mov out mov and mov loope or js hlt adc rex.W xor pushq adcb (bad) xor (bad) data16 (bad) (bad) mov xchg sarb sbb (bad) sbbl xor ss (bad) cmc or xor outsl (bad) inc jo divb xchg test xchg test ja adc fwait imul (bad) xchg mov fwait testb test ja ss push int3 cmc cmp (bad) (bad) hlt in lods sti hlt add (bad) mov jnp rclb sbb (bad) mov (bad) xchg sub push mov jne (bad) fwait (bad) movsl (bad) sub push xor cmc jne ja adc pop adc in add adc xchg xor xor xchg mov iret adc jle jp add (bad) push adc push fstl idiv rclb jp (bad) push and hlt ss rclb cmc xor jmp sbb lret (bad) xchg (bad) insl mov test xchg mov cmpsb jp jne popfq enterq mov (bad) mov sbb (bad) mov push insb (bad) rex.RXB gs jmpq mov jae sbb xchg push mov xchg sbb lret (bad) lea mov jbe adc int3 mov rolb sbb mov xor cmpsl int3 or callq rex.WRB xlat xor rex.WX ja xchg or jb jb (bad) mov sbb mov ja adc testb ja mov imulb xor (bad) cmpsl xor xor xchg jae fstl (bad) (bad) popfq cmc in (bad) xchg scas and leaveq repnz pushq adcb adc cmp sbb notl xor push mulb notb es cmc fmuls mov push div mov rex.WRXB push sub rex.WRXB mov or xchg repz jo xor (bad) push (bad) or div (bad) xlat test cmc adc sub push xchg jmp lret (bad) jbe (bad) jbe jmp pushq add mov (bad) test adc jbe add push retw rex.WRX test or or mov jae lret in (bad) (bad) mov jne scas retq neg mov push loope xorl mov mov js mov push rex.RXB mov jnp repz outsl (bad) mov add mov movsb ja xlat xlat lahf xchg cwtl jmpq jbe es jl fst (bad) (bad) (bad) (bad) jo xchg xor fs notb (bad) not divb or ficoml (bad) xlat cwtl xchg mov adc ja (bad) mov xchg (bad) hlt (bad) loopne rex.R (bad) (bad) push (bad) mov in jge xor xchg or iret rclb rclb enterq push in cli out mov hlt xchg movabs movsb rcrb (bad) outsl rex.R loop callq out adc (bad) int3 xor or push (bad) jne incl lock out rorb jne and fild push sarl fs mov (bad) (bad) (bad) shlb (bad) mov xchg repz (bad) out hlt (bad) cmp xchg lret out movabs or rex.WXB (bad) jo cld repz or rex.WR rex.R jg push jge adc in callq or repz xchg rex.RXB in rex.R data16 lock je (bad) addr32 xchg in cmpsb std (bad) (bad) movabs mov (bad) div xchg hlt rex.R (bad) (bad) (bad) int3 (bad) add callq mov enterq data16 repz (bad) ss mov int push (bad) xchg fadd (bad) in out adc xor mov adc push rex.R rex.WRB push fcomp xchg in (bad) (bad) hlt push clc xchg je xlat adc out push je out rex.WR push xchg or pop cld mov mov rex.RX lahf mov callq pop imul std rclb in jns shrb xchg pop mov rex.WR lret (bad) lock (bad) mov fmulp fcomps push scas pop mov sub (bad) movabs (bad) in (bad) cmc xchg or add lock mov hlt je or rex.R or pop jg jne jrcxz (bad) cmc rex.R adc push rex.WR iret xchg movsl (bad) push icebp in lock fild (bad) notb (bad) je pushq mov lock mov (bad) xchg in push xchg hlt (bad) (bad) add push lods xchg mov (bad) mov out rorb sub or fisttpll hlt gs cmpsl (bad) xor rex.RXB (bad) and rex.WR adc fcompl fadds push in mov mov pop push jae xchg (bad) rex.WR adc cld adc mov adc (bad) adc (bad) sti xor clc mov jb push rex.RX (bad) adc rex.R adc stos in pushq adc movsb push mov xor hlt xchg rex.R rex.WX push (bad) ss (bad) push add in xlat fisttpll cmpsb neg popfq hlt sbbb cwtl hlt mov (bad) (bad) xor addr32 callq jo pop jne movabs rex.WR repz addl xchg shrb or lock mov mov retq rex.R enterq movsl rex.WR xchg (bad) insl rex.RXB mov mov int rex.R adc (bad) iret push cmpsb adc (bad) (bad) (bad) int3 (bad) rex.WXB cs pop or xchg or (bad) shlb mov mov out clc push adc rex.WRB callq (bad) xlat mov fcomi adc xchg repz adc and cwtl mov jge (bad) (bad) hlt xchg loopne sbb rex.WRX adc test (bad) icebp adc add rex.RXB lock xor test push stos xchg lock sub add (bad) in rcr (bad) xor rex.WR push (bad) mov (bad) outsl xor in loope sub fbstp pop (bad) addr32 xlat (bad) push lret xchg loopne callq xchg mov add (bad) mov (bad) xchg mov rex.XB add adc add xchg test xlat jbe push movslq jg mov or hlt add or adc sbb jmp rex.WR fs mov xchg je not mov in lock xchg jg mov repnz lods (bad) (bad) insl mov mull enterq hlt int push test add sbb rex.RB adc xchg cld (bad) add (bad) in xchg push rex.RX (bad) add scas (bad) xlat (bad) pop je add jmpq adc in sbb (bad) (bad) rex.R lea fsubr xchg pop hlt ja jrcxz (bad) iret mov test retq je rex.WRXB sahf data16 in hlt movabs addr32 clc sub sub int3 xchg adc rex.RX fmuls loopne es mov adc lock hlt jo (bad) je jmp cmc imul (bad) (bad) add loopne je (bad) mov jno mov jrcxz hlt push push jg nop xchg push (bad) xlat je (bad) fisttpl rex.RB xor hlt jns jge xor hlt mov in mov hlt rex.WRB push mov callq adc mov std mov push (bad) and jbe (bad) loopne rex.RXB xchg loopne push rex.WRXB mov (bad) rex mov rex.W xchg rex.WRB xlat rex.WRB rex.WRXB movl rex.RB jrcxz not xchg cmpsl movabs pushq (bad) or hlt xchg push (bad) int3 (bad) sub hlt sarb xchg vorps fcomip push (bad) mov cld jns repz (bad) (bad) (bad) addl rorb push (bad) ljmp lea (bad) (bad) es lods xor in mov adc sbb adc in retq idiv movabs (bad) xchg rex.WR fs (bad) clc xchg xchg adc pop xchg (bad) push add lea push movl mov cwtl push add push rclb hlt jae int3 callq out adcb ja rex.X (bad) push mov add push out in mov sarb iret add xchg stc adc movsb add (bad) cs mov jle sub jae nop (bad) (bad) mov xor add in iret (bad) in mov rclb (bad) jbe fs mov (bad) push movsb fsubs jne adc lret xchg (bad) (bad) jb fcmovu (bad) ss jmpq (bad) and (bad) dec and mov add (bad) data16 or nop or sub mov ja adc add (bad) (bad) xor cwtl fs xchg (bad) (bad) adc mov add hlt and fs callq (bad) xchg int3 (bad) adc push adc imul or out in (bad) (bad) adc push sub rex.WR repz (bad) fisubl movslq (bad) mov lock adc (bad) (bad) xlat adc pop in lock (bad) (bad) (bad) lret in xchg lock rex.WR lahf lea mov adc push adc (bad) adc movsb idivl div (bad) jmpq (bad) rex.WRXB or adcb in (bad) in lock and cmp rex.WXB (bad) repnz lea hlt mov scas rex.WR movsl rex.WX xchg (bad) adc in lock idivl adc (bad) out movsb adc in jmpq fnsave (bad) sarl pop lock rex.WX lock (bad) es (bad) xor fs hlt push leaveq mov lock mov xchg xchg xor mov (bad) ffreep rex.R ss mov mov lock out in push lock cmpsb add (bad) fdivs (bad) adc movsl mov push sub rex.WR (bad) xchg test (bad) (bad) or mov adc rex.WXB rex.WRXB (bad) cmp movabs in add in rex.R (bad) (bad) (bad) jb jbe xor jmp (bad) and rclb fcoms xchg push hlt xchg mov xchg neg (bad) jae or (bad) (bad) (bad) xchg enterq (bad) cld notl jne push xchg divb test out (bad) (bad) rclb cmpsl int3 mov ja (bad) adc or push (bad) (bad) movabs test int lock mov in in xchg jo (bad) callq cld (bad) xor lock rolb test add push push int3 push int3 xchg cmp incl data16 (bad) adc mov push fbstp hlt add ss xchg xchg pop (bad) pop xchg lock lods rex.WRX movsl xor mov xlat out xchg (bad) push xchg test mov cmc testb (bad) or jo push js (bad) mov mov hlt adc jno xor fnstenv imul mov (bad) xor lods (bad) pushfq movsb cmp lock push iret add mov (bad) cmp shrl adc (bad) rex.RX (bad) jp xchg sub (bad) or cmpsb jbe adc jmpq fnsave (bad) sub xchg (bad) lock movsb idiv (bad) push repz and test es (bad) (bad) cmc xchg rex.RB clc rex.RX (bad) jo loope or xchg (bad) (bad) mov and callq fimul push jbe and xchg (bad) lock jnp testb (bad) je xchg rex.WRB mov (bad) mov icebp lret fsub roll (bad) rex.R or test xor cld push (bad) or stos fild in jp push (bad) add rex.WRX vmovups in xchg movsb (bad) push and lock rex.RB (bad) test push rex.W xor lods lock xor (bad) movl adc add jne push (bad) repnz in jl data16 lock or rex.WXB jl insb gs movsb (bad) or rex.RX and (bad) loopne fcomi xlat xchg and scas ja adc push test (bad) (bad) rclb xlat xchg jbe rex.W (bad) adc scas or in lock (bad) jne rclb (bad) (bad) hlt fcmovnb test lods xchg movabs leaveq iret out push pop mov stos lock movabs mov push sbb movabs push adc xor (bad) (bad) scas in jrcxz mov movabs movsb (bad) add mov (bad) sub loopne rcl loope xchg (bad) adc xor test fsubs rex.RXB std ja mov adc in add rex.RB in xchg lock lahf gs in rex.RX lock lahf (bad) (bad) (bad) add (bad) mov in fs lock ja rex.WRXB (bad) jo not movabs addl hlt or in rex.WR add test popfq jo jns loope and cmpsl xchg xchg mov adc (bad) in lock mov int3 hlt sahf mov (bad) adc rex.R in (bad) xchg (bad) hlt (bad) cmpsb mov insl stos xor lock fwait mov lea adc test ss callq (bad) roll add and fs cmovl push push lods jne xchg repz (bad) (bad) in and rex.RB ja cmc mull mov notl out (bad) rex.WXB (bad) cmpsb notb mov lock mov rex.RB fadds test mov mov movsl cmc push adc mov lock out add or jne imul jae je rex.RB add insb imul (bad) xor jbe pop rex.RB (bad) or xchg and in xchg hlt (bad) mov adc rex.RB repz adc out (bad) hlt (bad) (bad) out rex.RXB (bad) fisttp xchg push rex.WR pop lock (bad) mov xchg push (bad) movsl insb in mov test divb adc callq mull mov sub fistpl add sahf jbe cmp (bad) gs (bad) xchg in cmp fdivs push push callq xchg xchg xor out rex.R push jbe cmp je jne push addr32 jg cmpsb fist xor fs nop mov push mov ja (bad) enterq mov push int3 callq andl mov fistl (bad) je or lock (bad) (bad) rex.WRX add sti movabs mov xchg movsb adc cmp xor xchg lea jbe iret adc pushfq push movsb xchg lods lahf (bad) movabs xchg lock cs (bad) int3 lock xchg lock jns xor (bad) in (bad) lock cs test clc xchg scas or xor rex.WRB (bad) sbb cmpsl ja (bad) (bad) jg push lock cs xchg (bad) mov sub out xor jle (bad) xlat ja sub jae in icebp (bad) lock cmc je pop xor outsl je hlt mov test lock add rorb adc or ja cs (bad) neg shl xchg in rex.WRXB xchg mov (bad) mov es xchg test iret push xchg push pop rex.WR test neg (bad) fmull mov cmpb (bad) out repnz enterq xor (bad) in je xlat mov or and movabs clc rex.WR rcrb (bad) (bad) (bad) jnp in mov rex.R add (bad) xchg mov or rex.RXB lock (bad) mov (bad) adc rex.WRX cmp js (bad) sbb xchg pop iret es mov xorb mov mov (bad) insb test pushfq jmp mov (bad) mov test push mov shl mov in jno (bad) pushq hlt add cld adc mov movb cmc out addl mov inc retq hlt mov loopne in (bad) lret rex.WRX fs rex.WRB add (bad) roll hlt rex.R cwtl adc js insb out xchg xlat mov cmc enterq mov rex.WR or jg (bad) (bad) retq test callq jrcxz not add (bad) mov rex.RB hlt mov cmpsl (bad) (bad) ja xor roll loope roll xor insl testl xor xchg fcoml (bad) lods xchg xchg xchg lock je (bad) in int (bad) jnp addr32 in (bad) fisttp and push (bad) add test movabs in enterq mov pop callq lock xchg mov testb xor cmpsl pop iret in mov cmc out jnp (bad) lret or or add rex.R fcmovnb loop insb movabs rex.R cmc in xchg lock (bad) mov je ss rolb (bad) (bad) mov nop mov lods addr32 in xchg xchg jne cmc callq adc add je rex.RB (bad) hlt (bad) (bad) sub xor mov (bad) adc (bad) rex.WRB in lock in (bad) push add push rex.R jne (bad) xor rex.R push and mov push (bad) ja rex.WR test (bad) xorl test cmpsb mov subb not xrelease xchg xchg (bad) cld pushq lea xchg adc jge movabs (bad) enterq cmpsb jae (bad) (bad) fadd js addr32 rolb mov push (bad) lret mov imull mov add (bad) jg add insb add lock outsl xor xor rex.RXB test and mov xchg and push cld or js nop out push loop js hlt nop mov cmpsl movsb xchg div jae push scas in (bad) mov adc test xchg rex.RB int3 gs test (bad) sbb (bad) (bad) xchg iret add xchg addb stos mov rex.RXB and roll mov jb (bad) cmpsl (bad) xchg xorl rex.WR data16 in lock imull lret shrl fbstp mov mov fbstp popfq popfq (bad) test not stos cs adc push xchg xchg (bad) (bad) pop mov or add jp (bad) mov jae or rex.R adc mov push iret pop mov jo push (bad) rex.W (bad) rex.WR rex.R int push (bad) (bad) mov in mov push test stos jmp cmp rex.WR int out addr32 pushq xchg notb pop lock xchg es (bad) (bad) lock gs (bad) and shlb or (bad) imul je clc sbb (bad) nop callq sahf (bad) and jo (bad) shlb jle xchg mov add xlat repz sahf xchg jnp mov (bad) xor sbb ja rex.R rex.WR add xor insb rex.W xchg rcl and lea ss xor mov jae rex.RXB rex.WX mov add fcoml rex.WRX and adc xor js adc mov lods hlt mov rex.WRB es rex.X (bad) mov adc push xchg and nop (bad) mov callq shr sti (bad) (bad) rex.WRX push mov (bad) push movsb jl ss push adc rex.R rex.WR push enterq mov push callq out and jb (bad) fs pop add pop iret cld xchg jae mov in xchg (bad) test lock stos movsl and (bad) add xchg repz popfq mov push hlt xchg add data16 lret rex.RB mov jp rex.RB rex.RXB adc xor rex.XB xchg rex.WB movsl or out in adc mov (bad) fcoms rex.WRXB fs xchg hlt add fimul repz (bad) adc rex.WRB (bad) je adc sub iret mov (bad) (bad) (bad) (bad) jo (bad) adc mov add rex.WR rorb rclb int3 xchg repnz sub sbb adc (bad) jle rcl fs out (bad) xor negl cmpsl pop addr32 rex.WXB cmpl in rex.RXB je push rex.WRXB rex.RX push addr32 (bad) xor mov (bad) lock add xor loopne (bad) movabs adc adc outsb rex.X jbe je je cmp xor fs jne mov mov rex.WRXB mov xchg (bad) dec pop xchg mov xchg (bad) mov in pushq in ss hlt hlt scas (bad) or (bad) push (bad) (bad) fstp fsubs lret rex.RB in loop jp (bad) mov test fidivl lea adc sub stos (bad) outsb test test clc adc push (bad) push mov (bad) (bad) push test or movb rex.B (bad) es movsb adc insb rex.WRB xchg movsl lret rex.B xchg fild push (bad) int3 cmpsl jmpq xchg jg fmull jl push ja rex.R jno (bad) int3 xlat (bad) (bad) cwtl pushq jo xor sahf (bad) mov hlt or cli xchg jb (bad) neg (bad) cmp (bad) add xchg hlt (bad) add rex.WRXB (bad) (bad) fadds repnz movabs nop rex.R rex.RXB in (bad) (bad) in lock idivl (bad) rex.RXB (bad) jbe stos jp mov xchg add push push rex.WRX mov adc (bad) xchg in fwait pop (bad) je (bad) xchg push push roll mov pushfq (bad) xchg enterq test test mov adc lock outsl in or or rex.RX xchg data16 fsubr adc enterq xor rex.RXB rex.RXB ja xchg xchg adc shrb data16 rex.RXB mov and fcmovb mov adc jbe mov mov xor adc sbb movslq fadd push comiss xchg (bad) (bad) or add leaveq (bad) and or fiaddl xchg mov or icebp adc (bad) jmp in lahf lock rex.RXB rex.WRXB lods sahf (bad) mov push lret cmc out jle mov fs repz adc rorb (bad) xchg or fiadd (bad) push lea stos shr (bad) (bad) xchg mov add rex.WRX icebp jae addr32 xchg push push lods push cwtl test lret lret (bad) mov rorb cmc (bad) lea lea jge adc xchg jl jg mov out movsl rex.XB in test add xlat adc fisttp xchg xchg rex.WRB je out clc cmp mov int3 mov xchg in and push scas adc hlt cmp rex.B lock test cmpsb sti (bad) flds (bad) notb xchg push je lock repnz hlt mov (bad) loopne je mov xchg orl test fadds cmp hlt (bad) and (bad) (bad) cmp mov rex.WRXB (bad) jns push xor repz imul outsl hlt movsb jae push (bad) mov je repz scas hlt rex.WRB rex.RXB iret int3 es xlat rol and movsb lock rex.RX cmpsb mov (bad) mov add hlt push xor repnz decl incl and xchg (bad) (bad) mov test mov xor in callq repnz addr32 div hlt (bad) retq in out lock cmp adc pushq lock test (bad) mov xchg or movb fs rex.WXB movabs (bad) add mov push mov rex.WRXB test xchg xor rex.RXB pushfq push or cwtl adc icebp (bad) movsl (bad) xchg test add push sbb mov (bad) shlb rex.R (bad) in jo (bad) sarb test mov push mov jle sti or rcrb mov (bad) xchg xchg push xor cmp (bad) xlat (bad) cmc scas test je fiadd (bad) mov xor vpmacsswd pushq out xor pushq mov out movabs (bad) fs jmp (bad) (bad) mov and rex.RX xchg cmp (bad) imul mov (bad) xlat cmpsl (bad) lahf and shlb or lods cmp (bad) fcom fild jl xor xchg and xchg movabs adc pushfq (bad) (bad) cmp (bad) adc rclb xchg xchg (bad) rclb cmp retq test push mov rex.RX xchg push add rex.RXB scas mov ds rex.X lock callq movabs add in (bad) rex.WB lret mov in mov xchg ja callq insb test mov (bad) mov xor (bad) repnz sete int3 (bad) pop repnz int3 insb and push stos callq (bad) hlt (bad) insb fs push hlt int3 emms and (bad) movsb and (bad) push sbb (bad) hlt xor mov (bad) lret adc sbb jl fisttp (bad) hlt loop (bad) xchg nop add notb enterq (bad) test xchg rex.R xlat rex.WRB xchg test xchg mov add loopne xchg ds in cli lock stos push (bad) in jb xlat fcomip movl rex.WRX rex.WR hlt push mov mov scas (bad) lret (bad) mov mov adc in paddb lods jae sub (bad) (bad) in movsb xor pushq cmc scas and (bad) mov rex.RB mov out rex data16 cmpsb xor rex.R sub sbb cmpb xchg out push rclb (bad) idivb adc pop stos test (bad) icebp (bad) stos xchg (bad) fstl (bad) xchg jae (bad) hlt push insb jp (bad) jns mov sbb (bad) mov (bad) or (bad) and (bad) xor (bad) cli shlb neg lret (bad) test (bad) mov (bad) hlt xlat and push sbb add movsb sbb (bad) xchg xchg mov mov jg out (bad) xchg cmp rex.WRB lock (bad) cld in lock (bad) testl cmc jae movsb out stc and or xchg (bad) mov cld out adc mov xchg cwtl (bad) rex.W rex.WR psadbw fs (bad) xchg pushq hlt xchg sbb push push in sub adc bnd mov hlt mov adc out cmp out mov mov (bad) lock out (bad) adc xchg lock je (bad) (bad) (bad) test push mov (bad) pop (bad) xor sahf and mov cmpsl add lret ficomp xor (bad) xor xchg fisubrl cmc (bad) in rex.RXB (bad) (bad) (bad) in xchg rorb (bad) sub cmc ja adc (bad) mov (bad) push lret push test add rex.WR imul cmp gs in (bad) (bad) hlt xchg adc cmc or (bad) in int test and data16 cmc (bad) mov sarb or (bad) mov test mull (bad) (bad) rex.WRX cmpsl rex.RX xchg (bad) or cmovle in lock test (bad) mov adc or cld adc movabs xchg add rex.RX sbb (bad) mov add lea out jl lret out mov mov rex.R cmpsl pmulhw repnz rcl or scas add movslq (bad) cli mov movl fs bnd jmp xchg and adc mov or rex.RB (bad) movsb retq xlat (bad) (bad) es cmp push (bad) rex.R (bad) popq leaveq (bad) clc pop adc in adc pop (bad) mov sub int push ror (bad) add mov or in (bad) cmpsb movabs cmpsb rex.R add rex.RX pushfq fldl rex.WRXB rex.RB adc out xchg and hlt and rex.RB addr32 (bad) (bad) cmp jae,pn cmpsl (bad) xchg repnz jb in (bad) popfq inc callq cmpsb (bad) rcll jne (bad) enterq int3 adc xchg mov add sbb mov lods xor or and (bad) out mov lods fs or and rex.WX repz xchg mov (bad) and (bad) (bad) push outsl in rex.RB adc add (bad) rex.WRXB (bad) test fcomip int3 mov and lock push rex.WX rclb rex.RXB (bad) xchg rex.WRB sub mov rex.RX (bad) in mov addr32 (bad) push (bad) hlt (bad) jmp push mov xor out xchg fs (bad) mov pop xchg adc (bad) repnz stc add adc mov rcll lock mov or leaveq int3 lock jb cmc in rex.RXB cmpsb int3 (bad) mov jbe (bad) xor mov (bad) pop xlat data16 push negl and pushfq cmp repz push mov (bad) mov (bad) (bad) xchg gs pop cld rex.WRX (bad) fadds testb shr adc rex hlt adc movb rex.R (bad) adc (bad) fbld mov pushfq es mov cmc push test xchg fs callq shr xchg (bad) xchg sbb mov xchg test ds (bad) out cs mov rorb jnp jg repnz in cltd jnp xchg add cld repnz (bad) (bad) rex.WRX cld in lock notb ja xor jp push pushfq bsf (bad) test shlb mov callq cmpsl push stos (bad) cmp (bad) mov mov rex.WR push je sbb sar mov push cmp mov sub xor (bad) jg lret sbb mov adc lea (bad) out (bad) hlt nop mov (bad) xacquire mov rex.RXB lret cmpl pop (bad) rcl movsl rclb fcmovbe rol xchg mov mov push mov xlat add (bad) cmp (bad) cmpsb cwtl xor je fsubs rex.W sti rolb rol pop shr or out fmuls rcl adc xor mov rex.RXB push decl mov mov lret lock out mov test xor movsb int test (bad) push shrb push jmp rex.RXB (bad) xchg adc xchg nop repz add push xlat sub int3 es (bad) mov add callq xchg jmp rex.RB in adc (bad) xor movsb out or (bad) push adc (bad) hlt xchg lods je jae lret adc test pop rex.WR callq push rex.WR adc shld ds adc es jg adc rex.RXB jbe out (bad) (bad) (bad) (bad) fldt xor jge stos lock sbb xchg sub (bad) (bad) setae or adc lea (bad) sbb rex.WRXB ss imul mov (bad) push (bad) fmuls xchg and pushq (bad) mulb adc movabs sbb lods rex.WRXB test movslq pop (bad) rex.WX test (bad) lock out hlt ja push adc (bad) push (bad) xlat js addr32 cli nop (bad) icebp xor (bad) or xchg pop (bad) jbe test divps jo mov or push cmpsb push outsl jle rex.RXB (bad) shlb (bad) add neg (bad) xor int3 xor mov (bad) data16 iret test and iret (bad) (bad) mull movsl xchg pop popfq addr32 (bad) mov int3 fsubl xor adc mov jae xchg (bad) in (bad) lock loope sub xchg movsb (bad) cmpsl (bad) sbb rex.R (bad) vmovups mov std (bad) sbb rex.RXB ds cli (bad) js push cs repnz pushfq cmp sub adc or (bad) adc test faddl scas rex.WR rex.WX addr32 (bad) in jno insb (bad) gs gs (bad) (bad) jne or jae xchg xor ror rex.WXB adc xchg (bad) jns push jne xchg (bad) mov (bad) (bad) (bad) es rex.RB add lret xchg (bad) adc add fcmovb (bad) adc lods xor mov or push xor xor enterq mov xchg (bad) push (bad) ficom push jno xchg mov (bad) (bad) mov mul mov fldl js rex.RXB xchg adc std cmc mov insl out mov push (bad) lods lock (bad) stos movsb or lahf out lock lret in addr32 and (bad) jo imul (bad) (bad) push movsl adc movslq hlt cld stos stc movabs test fs stos je xchg jmpq cwtl rex.R push mov jle sti and or pushq sarb mov mov rex.WX ja xor cs jo adc mov xlat hlt mov stc je (bad) add xlat in (bad) push (bad) mov std (bad) (bad) mulb adc cwtl lea (bad) sbb add adc insb xlat movabs push (bad) in (bad) add (bad) jns (bad) jae mov (bad) jle add and push xlat test insb mov mov pop (bad) xchg push lret (bad) lea and (bad) mov (bad) lods rex.WRXB rex.RB rcll cmp (bad) gs pop (bad) mov rex.WRB mov rex.X fiaddl mov test mov out test movabs (bad) pop mov mov movabs mov icebp (bad) hlt fsubp xchg in lock test (bad) (bad) push (bad) rex.WRB xchg mov push je add (bad) test nop (bad) xchg (bad) pop mov js es or (bad) xchg ror sub in (bad) adcb (bad) or movabs (bad) xor cs test rorb movsl (bad) push jo fadd jno int3 xchg js mov mov push xchg rex.X (bad) (bad) (bad) sti xchg mov adc adc xlat repz ficoml add adc mov rclb ss add add clc loop push jnp idiv pop idiv or stc mov lock (bad) adc cmp fdivrs xor fmul (bad) or push pop mov es hlt in stc jl (bad) add rex.WRXB mov outsb (bad) out (bad) rex.WXB fildl xlat (bad) xchg xor (bad) je,pn pop repnz int3 insb mov xchg int add xor mov rcrl (bad) rex.R loopne or mov addr32 push hlt adc xlat rex.X cmpb adc pop rex.RXB pushq xor lods nop out rex.RXB xlat push push movsb (bad) notb jb and (bad) (bad) (bad) and (bad) pushfq cmpsl mov xchg cmc sub mov push mov fdivrp repz (bad) mov add rex.W pop jae (bad) jns rex.WRXB xchg adcb or movsl js or test push sti je (bad) xchg rex.WRXB rex.RXB shlb rex.WXB cwtl (bad) and retq jl imul push mov xlat (bad) out push push addr32 rex.B (bad) scas adc movabs (bad) xor iret imul (bad) jo addr32 pushfq xor (bad) (bad) pop (bad) leaveq out (bad) repnz callq (bad) je testl xchg add out movsl out cmp (bad) push and adc adc rex.WXB sti mov mov xchg addr32 mov xor add add cmp xlat mov ja (bad) adc cmpsb rex.RXB xchg push mov (bad) cmpsb je add xchg test divl push jl enterq and jge (bad) loope out mov andb (bad) adc lret int iret negb in fwait pop xlat add ds (bad) xchg add shlb pop rex.R test xor push popq push mov (bad) repnz mov out (bad) xchg out ja jo xchg (bad) loop cmc retq rex.WR rex.WX xor mov sbbl sti add idivl mov testb jp (bad) mov (bad) sete and or mov (bad) or push cwtl hlt xchg push cmpsl mov stos test pop nop (bad) (bad) xchg push push lock lods fmulp xor pop notb movabs push (bad) add ja and push add (bad) pop (bad) retq pop push orl and jl sub insb xchg adc xchg mov adc int test and xchg hlt cmc (bad) out (bad) (bad) mov jns (bad) push add lea rex.WXB or jo testb rex.RXB rex.WR cmpsb push (bad) pop in push fst mov xchg (bad) push fist (bad) adc and mov add out mov ficomp rex.WR xchg rex.RXB int3 rex mov pop in jrcxz pop shr rex.WRX xchg pushq nop (bad) enterq push adc (bad) shlb adc (bad) mul xor xlat pop cmp ss rex.W xchg add js push iret std hlt mov jo in test (bad) add jle (bad) stos xchg (bad) in (bad) cmc (bad) sar in sub xor movsl adc lea int3 push (bad) rex.WXB or cmp scas movsb push (bad) std jo hlt rcl sbb iret movsb (bad) (bad) stc out popfq rolb pop cmc jle (bad) out (bad) data16 gs rex.W movabs mov push push es (bad) fnop (bad) std mov adcl out test mov (bad) jo rex.RX jo,pt pushfq jge test rex.X rex.XB jg (bad) cli mov xchg loop addr32 in ds xchg rex.WRXB sub sahf mov (bad) rex.W sbb xor xchg callq movsb or adcl xor test (bad) push (bad) rex.WRX rex.WXB and (bad) fmull fidivl out rex.W xchg (bad) or insl add test (bad) inc and lahf rex.WR repz iret movsb cmpsl fisubr xchg lea cwtl hlt push cmpsq mov mov xchg insb xchg stos rex.RB (bad) (bad) lock pop (bad) rcll stc xchg cmc cmpsl mov mov hlt cmc fucomp jo sti std out mov adc (bad) loopne rcll xlat rex.WRB mov xlat mov xchg addb and iret (bad) mov add push fidiv ss movabs rex.WRB hlt sti (bad) mov (bad) hlt cmc (bad) out push movabs out lret pop (bad) mov add cli fiadd xchg or or es movabs rex.WRXB rex.RX addr32 je and mov mov (bad) rex.WRXB mov mov lock test xchg out push cli (bad) (bad) icebp or lea out pushq pushfq sahf mov rex.WX cmp (bad) lock (bad) shrb pop repnz addr32 (bad) xchg pushq mov push fsts pop xchg (bad) mov mov rolb mov xchg jg lods jo shrb rex.RXB mov retq adc (bad) (bad) (bad) rex rex.WRB (bad) mov lea decl mov adc test rex.WB rex.R add out mov mov or jbe (bad) repnz std (bad) pushq jo,pn shr (bad) repnz mov int rex.WRB adc rex add rclb (bad) and (bad) (bad) (bad) callq int3 je out jnp addr32 lea (bad) lea xchg out mov cmp jo vpaddq adc movabs retq cmc xlat jb es ds (bad) ficom xchg mulw (bad) mov mov rex.W hlt jnp (bad) fldenv (bad) pushfq mov adc roll lahf ss callq xchg (bad) in mov add (bad) push xchg gs rex.WRB push not shr (bad) xorl push xor jp rex.WRX push (bad) xor cmp (bad) push xchg ja xchg jae (bad) push (bad) idiv js test pop callq rcll int3 (bad) rex.WRXB xor xchg jmpq fs xchg mov jle in push jl jo (bad) rcl adc jns (bad) jo jp pushfq addl (bad) xchg (bad) rex.WRX and retq (bad) out lret rcr rex.WRX mov (bad) or xchg or loopne out (bad) fldl mov pop hlt add rex.RXB cmp xchg (bad) jo (bad) mov shll rex.WRX cmp jne hlt (bad) pop mov lock jbe rex.WB addr32 hlt stos rex.RXB callq jmpq push push imul movsb rex.RXB mov (bad) mov ja and in mov and cs (bad) xchg sarl xchg push (bad) (bad) mov (bad) xchg xorb rex.W rex.R rex.WR sub jp movsl mov hlt (bad) jb in mov (bad) and (bad) add scas repnz xchg or adc cmp rex.R fcomps (bad) cmp add jo in xchg pcmpeqd and mov push sbbb (bad) jle jg int3 fwait lock imull xlat lret (bad) (bad) (bad) mov movabs xor jo clc in fxtract (bad) out addl (bad) jns in xor xlat loope movslq (bad) (bad) adc (bad) (bad) lock and xchg (bad) xor rcrb ja mov xor push ficoml (bad) push (bad) popfq in pushq movsb sub (bad) jne adc cmp ja push (bad) test mov sti ss xchg test notb xor testl xchg xlat adc or push (bad) insl out je xchg or (bad) iret movabs outsl (bad) (bad) (bad) (bad) xor xchg iret out xchg mov cwtl notb (bad) and (bad) mov je mov sti xlat cmc add xlat (bad) lock mov (bad) or add xor xchg or (bad) gs fs xchg (bad) out (bad) insb (bad) (bad) adc cmpsl cmp xchg in iret xor jnp (bad) lock adc cmp rex.X int3 and enterq lea jmpq pushq pop cmp lahf movslq rex.WXB insb pop outsl adc data16 rex.WB adc jg (bad) fstl idivl fbstp or stc sub push mov push (bad) fsubl (bad) rex (bad) sahf pop lahf adc rex.WXB push sub ss adc and xchg ficomp push adc rex.WR (bad) jne rcll rex.WRX int3 rex.WRXB je xor (bad) pushfq outsl push jne sbb retq movsb stc js and loop shll int pop (bad) fisub pop xor sahf xchg mov sub and sbb pop push xchg mov lock fldl jae pop and adc hlt mov mov mov mov fs std adc mov pop popfq (bad) rex.WXB mov (bad) fnop movabs jl xchg (bad) (bad) clc dec (bad) hlt mov cs in test pop fdivrp fnop rex.WRB test pop movsb (bad) fdivrp js xor mov xor (bad) out movsl mov rclb scas test rex.WRXB scas movsb neg sti push mov (bad) popfq xor movsb rex.RX cmpsb mov sarb cmc xchg pushfq movsb (bad) mov (bad) xchg xlat mov jge lock std stc movsb (bad) hlt sti ss xor outsl test notl iret mov rex.WR jl sti lods mov imulb lods xor movsb outsb fdivrp mov not pop cmc xchg test rex.WRXB xor out adc (bad) ja jno mov insb imul (bad) addr32 cmc (bad) test rex.WRXB xor (bad) fdivrp mov loope lahf rex.WRXB xor mov sti (bad) rcrb popfq rex.WRXB xor (bad) fdivrp (bad) mov mov testl mov adc popq mov rex.WRX jle sti cmpsb mov shlb cmc push test scas xor movsb sub mov push xorl mov (bad) movsb rex.WRX cmpsb mov rcrb cmc rex.WRXB xlat xor ficom mov ds subl movsb lahf fdivrp xlat mov test int3 test jne mov std hlt xchg mov fdivrp xchg mov shrb (bad) xor mov test rex.WRXB xor movsb neg sti ja mov or test xchg popfq push movabs mov push in (bad) lea frstor xchg shl cmc rex.WRXB movsb (bad) fimul cmc mov in rex.WRXB xor scas pop jbe out hlt mov cmc es pop (bad) push scas out (bad) jle sti push pushq loope rex.WB sub in cmc (bad) cmc add rex.WR test sub xor movabs (bad) (bad) hlt sti scas adc fxam sbbl xor movabs xchg xlat fistpll or (bad) (bad) mov cmp sbb test movhps movsb test sti cmp (bad) je ss cmc popfq test movsb (bad) fdivrp (bad) jo test test rex.WRXB (bad) movsb mov sti gs adc mov lahf mov fbld (bad) (bad) (bad) or scas add icebp (bad) cmp hlt add adc sub (bad) pop jle sti notb hlt add adc (bad) out (bad) add adc out or xchg rex.WRXB add lock ror cmc loopne rex.RXB rex.WRXB or test rex.WRXB fsubp cmp cmp hlt xchg mov int hlt sarb lret mov shrb sahf (bad) (bad) pop jrcxz push in mov xchg rex.WRXB rex.WRX ror (bad) jne scas ss xchg adc cmp (bad) and subl vpunpckhdq movsb and adc (bad) sarb adc add fisubl mov sahf out out adc or jg repz (bad) push lea mov xor test rex.WR sbb js adc jmpq fwait cs movslq gs mov xchg je push lods (bad) shrb xchg cmp sti sub fsts test (bad) adc cmpsb pushfq xchg outsb xchg mov sbb (bad) iret xor (bad) in mov stc push imul clc push mov sti (bad) clc (bad) push and out sbb nop iret adc pop rex.WX cwtl mov rex.B mov sub jl or add cmp rex.X xlat cwtl je pop (bad) cmpsb mov adc and adc mov xor mov lea (bad) adc fs movabs fdivl cltd adc (bad) cmp add sub test mov xchg jne (bad) or jmp outsb xchg xchg mov adc sbb rex movabs je sbb jl (bad) mov fidivr rex.XB xorb stos (bad) adc and push rex.X xor xchg sub push clc pushfq (bad) push loope sbb (bad) sbb and pop or mov outsl rcl pushq jmpq mov xor sub retq jbe pushq int xlat xlat push mov or cmp (bad) rex.WRB (bad) lock pop fcoml lretq adc addb xchg ja cwtl imul jp add or sbb adc (bad) xor pushq (bad) (bad) xchg adc mov adc cmpsb lahf add test (bad) mov push mov and std adc (bad) mov cmpb push js outsl (bad) gs lahf mov retq (bad) rex.WRB cmp or retq pushfq rex.WRXB fcomp adc sbb (bad) (bad) cmp fs out mov rex.X test retq or pushfq rcr or vmread jmpq rex.X jnp or adc cltd cmp rex.WRB or xor adc fistpll lahf (bad) (bad) out lret (bad) incb data16 push jb xchg add test pop roll clc mov (bad) sahf callq stos pop or xchg xchg push pushfq sti scas jp push gs cmp add mov mov jne or adc (bad) cmp fs movsl int3 (bad) adc (bad) divl loopne cmp movabs add (bad) out nop sbb cmp adc clc (bad) loopne adc mov (bad) rex.WXB unpckhps adc out sub rex.XB enterq repz pop push jrcxz lea loop (bad) xchg adc rex.WX mov xor (bad) js xchg retq mov xchg fldcw or adc mov add cmp (bad) stc test rex.RXB and lods xor (bad) xor (bad) shrl sub push pushfq xchg imul sbb jno rex.WRB rex.WXB jns pop rcr mov push adc pushq jnp rex.WX in adc adc std jae mov jg sbb jns je (bad) mov (bad) test nop rex.XB jnp popfq adc mov pop pop pushfq adc int3 adc cmp movabs sub xlat adc rcll mov adc (bad) in cmpsb adc (bad) pcmpeqb gs out pop imul adc mov jne adc adc sahf je sbb rex.WRXB lret movslq scas adc imul lahf and mov or (bad) xchg adc mov (bad) (bad) adc adc or mov adc data16 mov and add (bad) (bad) rex.WR cmpsl rex sbb sbb mov (bad) retq out adc mov xchg jp jbe es lods mov adc (bad) sbb outsb adc mov ss and enterq outsl xchg test jno (bad) orl add (bad) leaveq lret (bad) insl push fs adc xor adc push cmp (bad) cmpsl out xor rex.XB pop notb and mov movsb retq pushq nop rex.WRXB adc fldcw movabs in or (bad) jne sbb pop out retq jbe orb mov rex.WX cwtl (bad) adc sub sub jae rex.X pushq sti jns or push and insb (bad) test (bad) popfq mov and xchg (bad) setbe shll test adc scas (bad) xlat rorb rex.X adc add jno mov outsb es sbb mov mov sbb xchg movslq jg xchg mov (bad) (bad) mov jae fsubp retq movabs insb xchg in lret clc cmp retq sbb cmp or or xchg (bad) insb (bad) add mov cmpsl sub imul adc js stc adc or jnp adc push scas mov enterq pop rex.WRXB push mov rex.WX loope push (bad) rex.X (bad) xchg fnsave nop fwait (bad) mov sub or (bad) and xor es callq loope jb clc xchg movabs adc xchg rex.RXB rex.X (bad) leaveq (bad) rex.WX adc rex.B callq lret mov sub sbb pop or or (bad) adc movabs rex.X cmp mov adc sbb fmull repnz rcll pushfq sub sahf or retq jmp (bad) adc push adc (bad) jmpq rex.RB or jg nop pop neg and (bad) out movsl xchg adc retq rex.B rex.XB (bad) out movhps xor (bad) mov (bad) (bad) cs (bad) frstor pop adc sbb mov jg notb jmpq cltd cmp ss lea imul add (bad) mov mov nop mov and adc in insl movslq pushq stc jg cmp imulb or push (bad) out repnz repz insb push xor in bswap loop std adc sub (bad) sub and xor iret mov adc push adc (bad) xor and xor adc (bad) clc mov xchg data16 mov repz rex.XB adc scas retq add or lret pop (bad) retq (bad) rex.RX fwait test loop clc cmpl (bad) mov test (bad) cmc rcr adc (bad) sub callq in out movsl adc push xor ja cmc repz (bad) adc test out movabs mov gs push adc (bad) je lea and add movabs mov jrcxz addr32 movabs fcom push sub ficom xor mov test popfq (bad) adc pop or adc and xchg xor adc xor in fisub mov jl test adc (bad) adc and jno mov sti mov insb and movabs fmull stc jle adc leaveq movabs nop mov adc pop scas xchg fadd xor jp test add mov rex.B rex.RXB adc enterq and imul cmp xor cmp movabs add jmpq out or (bad) cld mov adc mov sbb (bad) jnp std or add push lods adc (bad) mov adc stc and mov rex.WX and cwtl adc (bad) pop sub movabs pop jno movabs adc adc clc shlb (bad) jge (bad) cmp orl lods test rex (bad) adc pop fs jne out (bad) push adc (bad) adc popfq pushfq out sbb mov mov test clc test fnsave (bad) mov rex.RX rex.WXB fwait jge or fs sahf lods adc test adc jmp mov or cmp and pop adc pop mov (bad) adc mov sub mov out xchg mov movslq mov push rex.RB insb xor mov rcll rex.R sub repz rex.X (bad) xor rex imul push adc out rcrl mov (bad) (bad) rex.RXB adc (bad) (bad) or adc and push js (bad) mov cmp sub fcoml sbb pushq mov (bad) mov iret es sbb add pop cmpsl xor rex.WXB hlt insl in adc sbb test adc movabs jne fdiv xor cwtl add mov mov jae fiadd adc je add retq jmpq mov adc rex.W fdivrl and push xlat and fsubl sbbl adc loop fstpl cmpsl popfq xor (bad) cmp (bad) addr32 rex.R xlat sub fdivs push lods pop hlt (bad) xorl ds add sub or (bad) cmp imul sub divb rex.XB adc outsb cs (bad) xchg outsl (bad) (bad) rex.WB xchg cmp jmpq (bad) enterq adc test adc pushq idivl (bad) (bad) xor rex.RX or nop and cs loopne jo mov ss (bad) sub (bad) sbb jns rex.R data16 cltd callq or nop (bad) xchg movabs test adc ds cli push mov sbb movslq add jae sti std shlb rex.XB notb push (bad) (bad) loope (bad) cs sub (bad) (bad) (bad) jnp in sbb xor lods adc out enterq popfq roll mov fmuls (bad) push sub cltd adc pop push scas adc push rolb xchg cmpsb stos xchg test movl pop sub push sbbb fwait (bad) (bad) hlt push es adc (bad) rex.WRX sub pop xchg (bad) mov and adc (bad) retq mov rex.XB test lock add movabs or cli cmpsl stc retq push push je out ja adc (bad) insl pop movabs jo cmpsb iret out loopne pop in push or (bad) (bad) mov (bad) and rclb mov (bad) callq jmp sub jl fstp rex.R mov add adc (bad) mov pop notb sbb jae cs push mov (bad) adc or jno xor data16 sub sub adc add add insl adc rex.WRX sarl popfq movsl cmpsb xor addr32 out rex.WRB movups cmp in (bad) xor int push ficompl adc in shll movabs rex.B movabs mov lock std pushq push retq leaveq or pop sarb (bad) sbb test fcoms or (bad) (bad) or pop movabs cwtl outsl adc push in lea xchg or (bad) jnp jp (bad) addl out movabs push fdivs rex.RXB imul xchg (bad) or cmpsl rcrb rcr adc or out adc in movabs fs mov cmp mov add pop or lods xchg jno movabs add and out movsl (bad) fcoms sahf (bad) movaps andl insl jp pushq sub adc xor ficompl out add mov rex.RXB jle sarl loopne (bad) stos callq adc (bad) xchg cmp and loopne sub lock mov push unpckhps mov fucomip test (bad) imul retq (bad) pmulhuw adc movsb pushq jg jge (bad) movslq mov adc (bad) cmp jnp (bad) (bad) movsb (bad) lock out xor (bad) or adc repz jg (bad) and xchg add movsb leaveq callq (bad) xchg xchg insb (bad) nop adc xchg xor push xor test loopne fsubrs rex.X fnstcw fs fdivl andl (bad) pushfq (bad) (bad) adc (bad) mov (bad) test cld adc push rex.WRXB adc in stos lret pop sub and mov cltd add (bad) stc (bad) push (bad) sti fstpt out mov (bad) popfq or (bad) (bad) lods jmp jbe xchg psubb out lret push xchg (bad) rex.RX pushq int3 mov xchg add popfq pop push cmc hlt xor gs pushq fwait in pushfq (bad) mov je push adc sbb stos pop data16 outsl iret sbb movabs fidiv jbe adc adc cmpsl (bad) adc jle (bad) jno pushfq add mov mov repz pop add adc in push adc orb rex.XB xor stos adc pop rex.RXB imul sbb test (bad) fcompl add or sub ja retq (bad) rex.R (bad) xchg test test xchg shlb xor insl (bad) and and mov xor (bad) and adc jg (bad) rex.WXB or gs cltd cmp (bad) scas retq movabs pop xchg push push push adc pop gs clc nop in decb (bad) shlb or rex.RB sbb xlat clc rorl jrcxz xchg jl push loopne pop rex nop or cvtps2pd mov mov sub add or leaveq xchg xchg (bad) cmp adc sarl or mov sbb pop rex.WXB test push (bad) mov retq (bad) sub or ds xchg mov fs and js mov push xchg pop callq sub (bad) add pop adc movabs xor sub rcll push adc adc rex.RB (bad) testl stc add test push iret int3 adc xchg adc jbe adc xor rex add test mov mov rex.X xor xlat jne or mov adc jg addr32 rex.WX fs ja,pt fcoms scas cwtl test test push cmpsl push sbb vdivsd fdivrl rcll mov (bad) push adc xor out int3 sbb (bad) ds fildl or sub out push test fstl mov (bad) pop adc push addr32 jmpq (bad) sub loop sub or out mov fnstenv (bad) outsl and pop (bad) icebp add int (bad) adc movslq jns adc (bad) int3 pop add sub push add movsb adc sarb test mov push sbb sub lahf (bad) movabs adc xor adcl cli (bad) mov adc mov test retq or rorl test fdivrs mul (bad) cs (bad) rex.WRX xchg mov rex.WRB xchg rex.RX cmp (bad) jp rex.WB mov and movsl adc out stos (bad) insb (bad) jne mov sahf sub (bad) add mulb push mov pushq data16 sub pop push repz rcrl cmp or xchg pop sub push mov mov push loopne jbe movabs pop sbb cmp icebp callq nop lahf iret jg xchg xchg jno pop adc xor not popfq adc leaveq mov orl adc sbb rex.X xor orl (bad) mov mov jns fcoml rex.RX mov mov and stos sbb repnz and adc out retq xchg rcrl push faddl mov adc movabs or pop fstl test (bad) ss mov rex.WB sbb xorl jb jl mov pop out xchg push in add mov (bad) xchg (bad) xor xlat movsb ss jg sbb jne test (bad) (bad) jo (bad) sub (bad) sub (bad) (bad) fcoml xor cmp jge (bad) rex.B (bad) mov xor enterq adc mov sub mov (bad) or rex.RB adc add (bad) adc (bad) jp movabs imul int3 rex.W sbb and movsb (bad) adc (bad) push mov xchg jo out out and or rex.RX mov mov rorb or loopne fnstenv or lret ss movslq rex.XB in mov or decb xor pop (bad) adc (bad) adc movsl or sub jmp mov stos xchg and xchg (bad) adc int3 mov hlt negl rex xor rex.WRX cs in adc adc or (bad) outsl xor push mov rclb xchg xchg xor outsl cs (bad) adc callq adc mov (bad) rex.WRB adc notb adc or rorb (bad) cs (bad) movsb jmp and fsubrs xor adc (bad) clc adc cmp adcl rex.XB movsb pushq jle loopne movabs sub pushfq outsb push rex.RXB jo sub imul clc out lods and jrcxz leaveq xor push (bad) xor callq adc xchg outsl lods (bad) je insb (bad) pop popfq in adc mov rex.WX rex.W sbbb in test lcall (bad) add cmp sub cmc pop subl rex.WRXB and (bad) int3 mov addr32 lret lret cmc xorl cli adc add cltd rcrl push jl xor and adc adc std push cmc bt imul clc add jmpq je jmpq jmpq mov cli fs sub and (bad) cmp adcl icebp mov mov js cmc (bad) xorb sub fwait (bad) data16 adc and pushq test xchg jp leaveq add rex.WXB rex.WXB xchg cmp pop insl lea jno loope mov mov (bad) xor xchg xor (bad) repnz retq add jp (bad) mov push mov xor jo (bad) xchg hlt pop push cmp (bad) (bad) lcall xor (bad) lcall mov mov loop mov jge mov xor idivb movsl push and gs retq mov (bad) jp rex.WX out in or int mov (bad) out in mov adc lahf (bad) (bad) cmc movsl fidivl mov ljmp std rex.RB in pushq jle fs jg subb fistl cmp jmpq clc cmc test or jmpq rex.WB rex.W rex.WR push rex.WB cs rex.WR rex.WR fildl sbb hlt adc rex add loopne jg movsb int3 (bad) (bad) (bad) (bad) test lods pop and (bad) rex.WR fiadd (bad) mov push rcrl fdecstp scas xchg sub decl jle int sbb ror rex.RX ss test (bad) repz movabs addr32 mov (bad) cld (bad) lcall sbb (bad) (bad) fisttp movabs out rcrl and rex sbb sbb add jp or (bad) (bad) push xchg or sbb jp rex.W outsb jbe and sti xor hlt test add fcomps movabs outsl jle rex.RX movsl fucom jp and mov sub stos sbb sub sbb iret sbb cwtl rex.WX callq xchg add xor bt btr movzbl mov inc test add ror clc mov rol dec add inc shrd movl movsbl mov clc cmp jmpq pop jmpq neg mov cmc cmp jmpq je xor push bsf movzbw sar mov sub shld sub movsbw mov mov lea jmpq test jmpq jmpq clc cmc imul cmp add jmpq je movzbw bswap movzbl movsbq lea bswap movzwl movzbq lea bswap jmpq sub jno mov xor pop jb icebp mov int3 (bad) (bad) jp leaveq sub loope mov adcl pop or or or mov sbb (bad) xlat iret mov push je je (bad) leaveq fdivr (bad) (bad) (bad) pushq adc std (bad) (bad) mov lods sti (bad) (bad) fisttp jp mov movabs pop add andl adc pop loopne (bad) (bad) push rex.WRX ss (bad) movsl sbb (bad) push jnp jl mov jp fsubrs mov xchg in mov adc test mov insb mov (bad) adc (bad) lahf pop (bad) in cmc jne adc xchg adc mov mov stos and iret (bad) lahf outsl adc (bad) callq jmpq cmp bt movb bt cmp test jmpq jmpq jne stc clc test add cmp test add jmpq mov jmpq cmp jno sbb retq or (bad) shll mov mov outsl mov es sub (bad) cmp push (bad) movsl or pop in fidivrl sub (bad) jae add adc rcl sbb push xor sub push jl stos orl (bad) lcall movabs pushfq rex.XB popfq in (bad) std insl sbb cltd adc pop cmp rcrl push iret or sti and imul xor shrl mov add sti fimull out in add or mov int3 (bad) cmp out push xor mov repnz xchg in fimull pop lea in repnz (bad) add mov lock push test (bad) xchg stc or and add mov mov jl shll sbb or jne jmpq clc cmp jmpq jmpq jne shrd shl mov test stc add cmc cmc bt movzwl shl mov cmc clc test cmp add cmp mov bt clc bt test jmpq test stc cmp jmpq jmpq ja clc clc stc bt imul cmp add jmpq jmpq rep bswap movzbl movsbw movsbw pop jmpq jne shrd btr cmp sub clc mov rol rcl mov add bt mov test test jmpq idiv repnz xchg and (bad) add rex.W sub test fstl mov rex.XB mov int rcll lret ss jno (bad) jne xor pushq adc test cld movsb (bad) mov clc data16 movsb or loop pop xchg (bad) mul (bad) xchg mull sub insb (bad) or (bad) sbb mov mov shrb mov adc (bad) rex.RXB fdivrs scas ljmp in adc cmpsl (bad) callq iret jne jg cmpsl or (bad) xor push jb je mov flds cwtl xchg jne fwait lret sbb mov mov in (bad) cmp (bad) cmp in (bad) out outsl or rex.RXB (bad) rolb adc (bad) rex.W mov pop loopne or pop mov add repnz rex.XB (bad) add shrl jne movabs stc loop in lahf jmp lret (bad) add pop rolb test jne adc int3 retq int3 lret hlt xchg movsb adc xor fcoms loope push cmc retq jne pop in adc in rex.RXB add loopne stc adc adc or in jns je cmp movabs std or mov pushfq sbb jg js sbb (bad) jo out scas cwtl add cwtl sub in and adc (bad) rex.WR add movabs or add xchg jle es jrcxz xchg sti sbb hlt in xlat adc gs or sbb outsb int3 outsb and push cmp in or std in rex.R out add rex.W pop lods (bad) jbe jne pop adc loopne (bad) add fsub (bad) mov jmp ja movabs (bad) shl (bad) fild pop lea (bad) (bad) data16 fs rex.WXB xor push and lock mov xlat or nop cmp stc nop mov push rex.WRB hlt mov mov or jg addb mov int notb (bad) jns in ss out out clc mov divb (bad) (bad) sbb add jrcxz xor xchg (bad) out (bad) mov jne fidivl (bad) push stos rex.WR fs fiadd cmp rex.RXB add fdivs jo pushfq bnd add jne movabs jle in or cs cmp out jb cld or in (bad) sbb xchg pushq and or mov push (bad) (bad) sub rex.X (bad) fstl pop pop movslq lret xchg or cmovno (bad) (bad) cmpsb test (bad) xlat out (bad) adc fwait lahf movabs add pop or fsubrs xchg mov (bad) (bad) cmp (bad) insb (bad) xor (bad) push fisubr mov push sti jo sarb repz loopne xchg hlt mov rex enterq movabs pop rex.RXB rex.WB and (bad) (bad) rex.WRX cmpsl push cmc ficoml (bad) adc mov test in (bad) mov xchg rex (bad) out xor (bad) push rclb std (bad) sub in rex.RXB or mov rcrl repnz (bad) cld pushq cld jmpq xchg jbe imul sar test or or (bad) mov fxtract stc (bad) jmp mov mov mov (bad) cmc (bad) or repz (bad) cmp paddusw out or and mov (bad) repz (bad) mov sbb mov sub rex.WXB mov (bad) scas test cld mov (bad) sub (bad) or cld add sti rex.W rex.XB xor push mov adc xor in sub mov std adc (bad) callq add rex.WRXB std cs or jne jb add mov scas sahf push jmpq adcb repz add xor jrcxz jmp xchg sub insl or movabs push jmp (bad) pushq or retq stos jmpq std adc (bad) jno lret or loop out test add (bad) int mov mulb callq (bad) outsl (bad) cli xchg or out adc callq rex.XB sbb (bad) hlt adc shrb mov (bad) or mov adc out or add in rex.RXB (bad) jl (bad) sub or adc jno add sub rex.WXB or jl rex.WR xor iret fmuls jne cmp cmp or mov cmpsb rorb out fwait iret (bad) divl pushfq xor hlt rex.WR rex.WXB insb rclb (bad) ror (bad) (bad) pop int3 (bad) xor adc mov (bad) (bad) movabs or adcb sub rex.RX ja rex.XB jb clc cmp out xor add add movl rolb (bad) fcmovbe fs outsl shlb mov (bad) (bad) sbb cmp lret jge test adc lret hlt lret mov movslq jae fs testl fxch fsubs rex in out mov pushq repz jns xchg insl rorb mov rex.RXB adc lock cmp cli fisttpl cmp std mov or xor (bad) loop ja (bad) test jo rex.WR je cmp rex.WXB add (bad) scas pop add add (bad) lret clc movabs (bad) push mov sub fdivs in rex.RX jrcxz test rex.WRXB enterq mov jno sub sarb sbb and movabs fmuls popfq or (bad) mov fwait lahf subb divl adcb jg mov (bad) out (bad) mov divl (bad) xor rcll in loope stc (bad) xchg jl pushq cmp mov mov (bad) mov (bad) test lock shl rex.W jo rex.WR repz sbb jne (bad) mov (bad) jns push and adc movabs clc (bad) mov repz cmpsb (bad) mov jne rex.WRXB xor fs outsb repnz (bad) adc mov xor icebp movslq xchg mov callq (bad) jrcxz (bad) insl sahf pop out jne (bad) add stc and fcmovnb add lahf cld in mov mov imul (bad) test cmp clc (bad) jrcxz in es icebp insb (bad) clc stos loope rex.W cld mov mov cmc iret jge cmc lods neg test hlt lahf in push (bad) imul loop adc sub pushfq fdivs (bad) pop adcl lock and sti add out repz insb lret xchg adc movsl jg mov ss enterq js mov repnz (bad) or cwtl loop (bad) loope test jp enterq (bad) roll mov xchg (bad) nop or iret ljmp (bad) mov in sbb cs (bad) fstp lea repz and fdivl and xchg pop sbb and je xor fmull cmc iret jne (bad) callq jl (bad) rex.XB mov or add icebp in rex.R (bad) (bad) adc test xor xchg sbb loop adc jnp mov xchg add test xlat and roll rex.WRX rex.WX xchg add mov sbb (bad) rex.W mov in in jne add sti mov mov jmp test add adc cmp jrcxz push loope in jne callq xlat rex.R mov retq (bad) movsb adc mov pop (bad) cs (bad) adc jl popfq xchg retq jne loop sub rorl xor pop int vmovq push xlat rex.WRXB pop (bad) rolb lret (bad) addl (bad) xlat mov add loopne (bad) cwtl rorb rclb mov jno stos jo (bad) (bad) or (bad) add and js sub pop or sub sbb rex.WB sbb adc fcoml testb (bad) jbe rex.WRB jne (bad) and scas pushq icebp mov or sahf cli xlat add jle (bad) add add (bad) ja xlat sbbl (bad) iret xorl mov lock rex.WXB (bad) mov stos cmpb xor add or (bad) stc (bad) lahf xor movabs int rex.W out add or and xor sti mov push xor push lock adc sbb rcll movsl xlat cld xchg lret pop jg faddl adcl adc jns mov cmpsl mov pop xchg (bad) or es rex.WRXB or pop rex.RXB rex.WXB cmc xor in nop frstor xchg lret xchg (bad) (bad) mov jl rex.WXB bnd xchg xchg (bad) xchg jne and (bad) retq leaveq or test mov in je push int3 insb ficompl mov adc cld add mov movabs cli (bad) mov int3 ja sahf icebp xchg and rex.WRB repnz clc notb lods sbb ja nop jne jl add not adc rolb outsb (bad) fldl lret or lret divb in sub fdivl mov (bad) (bad) (bad) mov mov (bad) or xor js cmp mov stc add mov adc std adc sub jmpq adc pushq sub lea add sbb (bad) jmp or rorl fnop jne (bad) or repnz outsl cli (bad) je sbb pop fwait mul rex.X mov (bad) and loop jl (bad) jae scas mov cmpsb test add xchg xlat div rex.WXB sub (bad) mov cmc add adc mov (bad) (bad) (bad) loope hlt xor mov (bad) outsl sbb (bad) fcmovne imul in or je push (bad) rex.R data16 or clc stc out loop in insl repnz (bad) enterq loope pop push push (bad) jbe push sbb add pushq mov mov jbe mov or add hlt and ja and (bad) (bad) or (bad) js jne sbb jge mov outsb rex.WRX popfq je loopne rorl int3 (bad) insl adc ja pop xor js sbb jmp stc imul rex.XB (bad) rex.WRB (bad) or test adc cmp test jge (bad) out mov push xlat push adc jo and add test and add (bad) push pop (bad) sbb mov std lret fwait orb in scas jrcxz mov rolb (bad) hlt repz lret shrl push jo in pop icebp mov and xchg (bad) js jge fdivl cmpl rex.B sub or lods repz rex.XB and add movslq add ja rex.WRB rorb icebp rex.RB rex.WR clts je int xor or mov int3 cmp mov adc rex.W (bad) or mov mov test push hlt shrb xchg and addr32 callq adc pushq stos icebp xchg push (bad) retq mov repnz out pop hlt lock mov sub shlb adc xor xor mov (bad) rex.RXB xor sbb out (bad) shlb ror push jae rex.RXB jne rex.WB mov cmp mov cmpsl retq mov pop ja or jle mov stc rex.WRXB mov ja fwait xchg sub mov jmpq sbb outsl xchg xchg rcrl jge mov (bad) xlat xchg fsubrl mov imul retq sub vmovntdq mov or or imull repnz in rex jo in pop xor je pop (bad) adc push adc cmpsb pushq shlb push (bad) cmp mov sar fdivl xlat adcl adc rcr (bad) rex.WXB cmp (bad) flds add shrl rex.RXB rex.B add cmpsb repnz mov sub iret pushfq jg rex.XB adc cmp mov mov (bad) cmp xchg hlt retq rex.WXB rex.W cltd lock or xchg xchg mov es movsl test rex.X adc rex.RXB rex.R rex.WXB and mov xor add imul push mov xrelease adc in icebp js jne adc rex.WX push (bad) cwtl je jo movabs add (bad) callq (bad) subl testl fdivr fildl mov stos mov lock (bad) sahf in jl add callq cld fcmovnu jl mov js xor (bad) mov fstpl adc ds add jg rex.R repz fisttp leaveq fstl adc cmc push callq sbb push cmp retq rex.WR add mov fisttpl pop sbb xor and adcb pushq add je xlat test or test loopne jmpq imul nop loop push int3 gs negb cld jb xchg js mov rclb and (bad) or jb (bad) lods negb xchg (bad) lmsw movb mov xchg (bad) out stos ds subb gs jnp callq out cwtl jg rex.XB notb jne lret xor push stos jmpq rex.X jne xchg test out enterq xchg lods add xchg sbb jae cld jnp rex.R rex.RX data16 insb (bad) rex.RX retq scas retq or fildl lahf xlat (bad) loopne adc icebp jg es rex.WX or adc sbb popfq or cmpsb (bad) mov jmp (bad) mov mov ja xor enterq add push icebp (bad) cmp adc add jnp xchg (bad) xchg mov mov sub std out (bad) adc jbe (bad) pop movabs (bad) xchg in mov xchg lock lock mov or and rex.WX repz scas cltd adc and js rex.WRXB rex.WB out adc add movabs mov add or insb movabs sbb stos or adc pop lret idiv jne xchg rex.WR or pop mov sub pushq mov out lahf imul mov rex.XB rex.XB lahf push in jo ja callq (bad) xorl push (bad) adc (bad) xor lret mov xchg mov (bad) fs (bad) int3 rex.WRXB andl test and xor addr32 callq sub rex.WR (bad) movabs adc sti and orl jae push rex.WR mov je (bad) sub push scas add stc adc jg sysenter test (bad) (bad) adc cmpsl jg cld cld fadds (bad) mov loopne cmpsb movabs test pop xlat fstpl adc movsb popq jrcxz ja add popfq (bad) jmp nop fs fldl callq adc xchg (bad) cld out mov mov (bad) rex (bad) nop loopne mov add jne imull cmc (bad) add (bad) xchg divb neg jne add pop (bad) (bad) fdivrs lods retq sbb add sub mov rex.WX rex.XB imul adc lock jne xor lods xor callq (bad) mov and rex.RB xor adc jle (bad) nop mov scas or (bad) fmul (bad) mov fs out push sbb or xchg cld nop xor retq (bad) (bad) addr32 cmpsl out iret je out (bad) xor pop push (bad) cmp (bad) (bad) mov ror (bad) jrcxz icebp int (bad) push add mov (bad) sti jg and add (bad) sbb or gs loope cs js jg lret pushq bswap sbb loop ror sbb mov (bad) sub lea ficom (bad) xor mov xor or stc lock jp in jg mov scas adc jne loope sbb rex.XB rex.WB cltd cmp (bad) (bad) loope lods rex.WRXB jnp (bad) jmp out rex.XB jno movsb jle mov xor or jo (bad) out movabs sbb (bad) adc (bad) jl mov mov mov cmp cltd jno retq (bad) outsb repnz (bad) add add sub repz gs lret hlt mov sar in (bad) sub rex.WB add jge or nop fsubr adc (bad) testb rcr rex.WX (bad) push push cld or addr32 or fadd adc xor retq (bad) in adc lods sub (bad) hlt add je out fs pop or loopne rex.RXB stos jmp xchg lock jo add jne test or mov mov xor loop or adc cmp incb ja (bad) xor mov nop movsl (bad) movabs mov or out (bad) (bad) test pop (bad) out fstps sub data16 lods rex.RX pushq insb jle rex.XB ds adc sbb jne pop retq lret add mov or sub iret (bad) mov pop (bad) ss push js sbb fild test in jg push (bad) test (bad) mov lods push sti clc rcrb xlat pushq test adc cmp add sub in (bad) (bad) add xor xchg push and (bad) jne repnz push jb (bad) sub movb xchg xchg (bad) cmp fdivrs rex.WX mov (bad) fucom js xchg mov rex.WXB enterq sbb xlat cmpsb or xorb pushq mov jg (bad) (bad) adc adc mov or adc add (bad) repz lock and (bad) xchg push mov jrcxz adc or or rex.XB (bad) es (bad) nop xchg (bad) mov pushq rex.XB xchg movsb hlt (bad) (bad) fscale jle jns and mov add clc rex.RXB cs movslq lock ss jne xor callq rol addr32 mov sarl or fisubl xchg xchg jo (bad) (bad) (bad) in add xor add (bad) retq repnz xchg repnz test nop xor in fcomps sbb or adc xchg jae retq fs xchg callq fcom (bad) sub je rex.RX xchg add mov jno jo sbb jmp sbb (bad) jb adc adcl add xchg adc (bad) shlb mov repnz hlt iret icebp rex mov sbb icebp lock jg or nop xchg not lock ficom or jo (bad) (bad) hlt rex.B mov jne rex.WRB cmc adc nop test xlat adc repnz cli xchg (bad) pushq (bad) enterq repnz mov rex.WRB pop push (bad) mov test adc or (bad) cwtl imul movabs push out mov testb repnz rcl cmp or sti (bad) jo rex add ficom push jne xlat or (bad) xchg xor imul add xchg rcll cld out (bad) mov sbb sbb (bad) mov or cmp mov xor or mov or and mov pushq fs test subb jns push movslq jle pop repnz cld sahf pop (bad) mov lock (bad) sbb cs lock rex.WXB repnz mov or mov mov xchg out bnd and in or (bad) pop retq rex.WRXB sbb loope lock callq or cmp mov repnz mov rorb pushq int xchg mov jno add (bad) add sbb sahf (bad) xor mov adc adc jmp pop pop xchg mov rex.WRX loope fnop push or (bad) jo push (bad) mulb mov mov xor test movabs (bad) cmp and rolb or adcl sti jae fs hlt (bad) push jo std xchg imul adc cmp or movsb add repnz pop (bad) jne (bad) (bad) rclb jmp xor jge add lret (bad) data16 jno mov loop (bad) (bad) rex.WX jge jmp lret sub adc out pcmpeqw xor stc cli (bad) add jrcxz rex.RB rex.R loopne repnz lock cmp sbb xlat sbb imul add sub cmc sarb fs rex.WRB xor add out jrcxz fistp jle movsl (bad) movabs or (bad) in test (bad) pushfq (bad) imul xlat push in iret adcb push repnz cmpb xchg add rcrl lock jmpw adc rex mov outsb rex.WRX (bad) imul test fistl insb add pushq movl (bad) adc adc lahf rex.WB fwait vucomisd mov icebp (bad) mov test push pop and sub fadd adc pushq (bad) mov push clc (bad) add push xor xchg xchg in out je or (bad) sbb add (bad) push mov sub movabs cs push jne cmc push in (bad) adc rolb jbe mov imul cmc insl (bad) (bad) or cmpsl imul mov sti (bad) lret stos pop rex.WR (bad) and es notb scas nop rorl rex.B rex.W cmp add push sbb in and (bad) xchg xchg adc stc insl cld mov retq xor add retq cwtl rex.WRXB pop pushq (bad) sbb enterq rex.WRX in mov rorb js in icebp adc nop fcomps add xchg emms xchg cmpsl or (bad) rclb push mov and (bad) loop in adc shrb (bad) jp mov and js cmc cmpsl jb mov xchg nop jne push jb (bad) pushq cmpsl rex add mov and adcl idivb movsb pop out addr32 (bad) xchg jle (bad) xchg add rex.WR (bad) jo (bad) (bad) movabs out mov int3 push xchg mov jne mov cmp jrcxz (bad) adc add jne sti (bad) jbe sbb (bad) adc adc movabs imul fisubrl add xchg sub jne pop movabs jrcxz jl test jp movabs (bad) mov sub adc xchg rex.RXB (bad) (bad) jo pop (bad) jne out (bad) jae add js movabs pushq sar (bad) mov mov adc jbe jne sbb fs nop or (bad) rex.WRX lock fdivrs pop push xlat sbb lods test pop jns xchg or jg rex.X repz imul fnop adc int3 pushq ds sbb clc cwtl push jmpq ja fstpl or (bad) clc rex.RXB mov rex.WRB cmp mov (bad) fisttpl xor lea adcl jrcxz adc (bad) out std add jns mov shl cwtl jne cmp (bad) mov jne sti mov or jo push adc insl iret xor xchg add nop adc or xlat movsb sub ss in (bad) (bad) sub rex.WR add (bad) fidivl loop ss push lret movsb (bad) gs mov xor loope fs sti fisttp xchg pop push test (bad) jnp jno test rex.WRX retq xchg ja (bad) push (bad) jb jno xchg fbstp adc test pop mov (bad) cmc retq push rorb jne push rex.WXB imul cmp sbb mov mov jne fisttp iret push loop,pt sti jg loopne and push callq lahf mov addr32 (bad) or (bad) xlat fwait addr32 lret (bad) nop (bad) and jns nop xchg sub mov loop xor loope (bad) clc scas (bad) not stos add xchg and mov (bad) loope pop int (bad) ja rex.XB (bad) enterq jne add jae rex.WB std add mov cmpsb jge iret jle mov imulb cli push jg rex.R (bad) and jne cmpsl out rex.W jno not test js cmp sbb add mov test rex.RX repnz (bad) mov cmc (bad) fadds out cmc xchg and jne add imul (bad) ss cmp (bad) xor loop (bad) xlat adc jl xchg mov and ficoml retq scas xchg xchg rex.RXB adc shrb je mov mov push movabs repnz xor in add es (bad) (bad) repnz retq js (bad) mov jl mov fidiv xchg or mov mov jmp cmp (bad) rex.WR loop jne and or in (bad) (bad) cld rcrb hlt sub sub mov add xchg ja xchg or or or add cmp or test jo or sub push (bad) or movabs or lret (bad) sti mov (bad) mov pop pop fcmovb int3 rex.WRX xchg enterq rex (bad) (bad) jne pcmpeqw je mov hlt sbb rex.RB mov (bad) int3 out (bad) std adc addr32 mov jb mov mov movsb and retq cmpsl ds (bad) (bad) movabs cli rex.X mov (bad) mov rolb xor (bad) loop mov jbe jne jae in mov pushfq repnz (bad) xlat xchg test push (bad) mov xchg push add fstpt (bad) movb fwait mov mov sbb mov lods adc cmpb cmp or repnz jne pop (bad) loopne xchg add (bad) jge xchg add subl xchg push rex.WRB xchg xor xor jge fnstenv (bad) scas lea pushfq out cmovae pop sbb (bad) (bad) test sub (bad) mov sub add hlt (bad) xor loopne (bad) jne pop xor leaveq jb mul fs fmuls xor xor and mov cmp add test int3 push (bad) jae rex.WX rex.RXB sub (bad) js (bad) rex.RB (bad) out test (bad) adc (bad) or sti xlat mov mov adc rex.W sub lcall in ds (bad) rex.X xchg (bad) (bad) (bad) in mov push jo loopnel and rex.RXB jmp rclb jmp insl mov (bad) xchg add in enterq (bad) add (bad) adc (bad) gs sahf hlt (bad) xchg jle fcmovnu (bad) nop xlat (bad) cwtl cmp movslq mov pushq (bad) or xchg (bad) je xlat (bad) (bad) fxtract (bad) mov in cmpsb xor mov retq fcoml jl rex.WB cmc rex.WRB sti test or push rex.WRXB mov adcb push (bad) pushq or ja mov icebp xor adc cltd cmpsb adc add (bad) pop adc (bad) loop or xchg pop clc push in jne (bad) fdiv adc (bad) (bad) imul sub cmp (bad) adc clc sub fs mov shll rex.X cmp mov xchg or repz sub or roll outsl insb push fwait rex.WX (bad) cmpsb or out add mov orb add sub test push rorb (bad) enterq and bnd (bad) (bad) or add (bad) je or push push mov and out iret xchg out cs jne (bad) movabs enterq add add not add (bad) je or or fwait in rex.RXB fwait cmp cmp jb,pt movabs jg int3 (bad) jg adc xchg sbb jl xchg out data16 int3 mov js jmpq shr jmp mov fcomps retq mov nopl hlt mov and xchg rex.WB rex.RXB rex.WRB jbe xchg icebp pop xor and ss out es callq cwtl xor callq mov int3 loope rcr out (bad) rex.RXB rol rex.R (bad) xchg adc mov imul (bad) xchg sub rex.WXB and retq stos sub cltd (bad) movabs rex.WX (bad) (bad) adc adc add sub xchg nop cli (bad) mov jge out bnd (bad) loope xchg enterq mov in or (bad) or popq (bad) cmpsl mov callq enterq xchg movslq and (bad) cmc jbe repz sub (bad) (bad) mov add ffree or leaveq icebp stos (bad) shrd push (bad) mov loopne iret ror stc lock (bad) test rorl fs rex.XB push sarl rex.WRX in jp add lock xor push xor (bad) add insl enterq mov jne rex.WRX insl loope retq int loopne (bad) sbb mov (bad) rorb cmp lret mov push imul js out mov pushq add (bad) (bad) rex.WX (bad) sub rolb loop cmp push test fstps jbe (bad) lgdt (bad) (bad) mov (bad) scas sub test fcoml (bad) lods (bad) lea sbb pop jno sub (bad) cld jbe jne subb cmp orb cwtl iret ds fcmovbe rex.WRB mov jle (bad) mulb (bad) adc or (bad) and rex.W orl push insl lret sahf jbe fwait mov add pop add pop mov or out sahf int3 cmp mov xchg scas push push rex.WB rex.XB je notl mov sar cld or rex.W xor rex.R mov loopne lock repnz js (bad) icebp jrcxz xlat jne cmp repz (bad) add in xchg lock out divb push (bad) mov and xchg add sbb clc (bad) and push enterq rex.XB bnd data16 (bad) movabs rex.WRXB (bad) (bad) jns addb (bad) jge lods retq jp (bad) (bad) or or add outsl in fbld test ds mov jrcxz and xchg (bad) xor mov xchg add jrcxz (bad) in rex.XB mov mov mov fisttpl icebp imul setnp lahf and std lods mov or mov imul out test xchg add jrcxz scas (bad) sbb sti (bad) sbb push add rex.RX mov (bad) pop push (bad) (bad) jae test es fildll add loopne rex.WRXB xor cltd push adc adc jb cmpsb rolb imull rex.RB lock jne fdivr rex.WB (bad) movabs add mov xchg xchg rolb ja jb xchg (bad) (bad) xor push jge push sbb or add clc loop xor (bad) and test (bad) (bad) nop (bad) test (bad) mov mov jg out mov or (bad) jl test ja popfq xor (bad) cmc (bad) rex.W imulb and cmpl cmp cld rex.XB xor jne stos callq jrcxz jo sub and mov (bad) xlat decl jno (bad) test (bad) push scas add push (bad) (bad) (bad) sub mov xor outsb pop mov push shrl mov ljmp nop push sub rex.WB cmp pushfq repnz test jrcxz cmpsb (bad) xchg (bad) and and jge jae jge adc sarb lods mov nop sarb adc (bad) adc jne xor ja movsb (bad) pop (bad) loop xchg jne rex.W (bad) add sub out test (bad) shll sbb mov (bad) mov xor and adc xchg mov jne push data16 hlt fs shll int3 stc or mov enterq mov cmp pop xchg (bad) lods addb and lock pop xor lahf jae sub push js adc jne xor nop mov (bad) xchg add mov push add scas fwait cmp (bad) (bad) add sbb loopne jne rex.WB xchg rex.WR sbbb out adc (bad) xchg clc pop cmp cld rex.WR addr32 (bad) nop ficom xor jnp xchg add rex.B mov add or sub (bad) rex.RXB movabs xchg mov rex.WB sub xchg int3 int3 (bad) rex.XB rex.WRB jl (bad) out jbe or nop or lods mov mov je mov mov jno (bad) mov (bad) sub push jae cmp int3 fwait cmpsb pop (bad) jmp rex.RB (bad) fidivrl cmp mov mov cmp jg leaveq callq add retq lock shrl (bad) insb orb add sti or pop (bad) adc jp callq rcrl fsts jmpq retq xor jle (bad) rcrl retq jne (bad) rex.X mov rex ds pshufw mov roll or in adc data16 lret sub int mov mov imul rex.RXB (bad) mov hlt hlt es cmp jne movabs jns adc adc fwait lahf push xchg scas rex.WX xchg and loopne fs mov (bad) mov lock xchg xchg mov rex.RB loopne sbbl rex.WR mov mov repnz rex.RXB sub rex.R cs repnz (bad) pushq fadd movabs and idivb (bad) in (bad) in loopne push xchg xor mov push mov mov add jne (bad) lock mov add fst mov rex.B out (bad) int3 repz sub mov (bad) pop scas (bad) and (bad) xor (bad) add sub xchg adc rorl xor movabs retq (bad) (bad) add adc jrcxz (bad) movsb xchg mov sbb divl (bad) jo movabs xchg cmp fs lock out (bad) nop push lret pop jmp rex.RXB xchg push xchg retq pop fidivr xchg push int3 ss fistpl (bad) insl fistp (bad) fcomp cmp roll cmp lods or xchg (bad) add push (bad) xor hlt add sub movabs (bad) xchg lock xchg movabs clc jne adc fiadd iret push test jne add cmc and jle or nop jo rex.XB sbb cwtl adc jne cmp adc add xchg push sub mov jns jno in out out nop push or or push mov in jmp repz (bad) sub shlb out je xchg xor imul (bad) movabs (bad) add jb notb (bad) mov in notl (bad) sub pop sbb or jl not pushq loop jne movabs repnz mov mov push stos cli xchg add enterq (bad) mov jp mov in shrb jo or add (bad) out (bad) mov (bad) imulb jle adc loope std fmull jrcxz jne scas pushq fidivr xor stc test incb imul mov sub adc (bad) (bad) add adcl movabs jge jge movsb or jb in fdiv (bad) mov out test test and stos mov fsubl or rex.W rex (bad) lea adc ss (bad) jbe pushq (bad) mov rex.R movabs outsl mov (bad) repnz xor (bad) and rex.XB mov fwait xchg mov cli xchg scas leaveq cmp mov sub push (bad) add xor pop mov icebp (bad) je adc mov jl lock cltd loopne xor or lock jbe fwait icebp xor (bad) cmp mov fisttpl imul jno pushq repz or in sub and cltd loopne mov fdivr pop fwait rex.RXB notb hlt sahf push ss rex.WXB mov fist adc push (bad) adc xchg lock (bad) rex.B (bad) stos mov out and and test mov rex (bad) (bad) add (bad) (bad) rex.X out jne (bad) cwtl loope push outsb outsl or pop (bad) jl sub (bad) rex.XB pop (bad) subb jl cld xchg (bad) and push (bad) jae adc adc (bad) (bad) fs mov rex.R adc je out add leaveq lret int3 icebp pop (bad) jns fstl stos mov pop cmp callq jno mov rcr (bad) xor fs iret xor pop in clc (bad) jne and hlt add iretq jb icebp adc xchg xchg jmp add rex.XB es not outsb (bad) cmp nop rclb (bad) cmp mov icebp mov (bad) ss iret sbb test stos lods incb rex.WRX ud2 mov rex.WRX int3 out xlat fcomi (bad) loop (bad) iret (bad) out gs repnz mov clc or nop or pop loopne repnz or pop jge (bad) loopne (bad) jp movabs or rcr sahf pop fiaddl xlat out (bad) (bad) cmp (bad) mov callq test mov xor mov push clc jmpq cmpl (bad) or jp push jno scas movb scas movsb retq js fcompl repnz mov (bad) jae stos and pushfq int3 lods data16 rex.WRB xor js rex.RXB cmc jno lret ds jmpq ja shlb lods xor (bad) fdiv stos enterq (bad) adc rex.WRXB sub fisttp jne (bad) mov divb add sub addl sahf cld xor mov mov xor rex.WRB rex.XB xchg mov (bad) jle repz stos lret sbb movsl scas mov movabs (bad) xchg idivb xor (bad) xchg and sub rex.WB movabs cmp mov (bad) mov callq iret sub imul icebp or test cmp test mov out ds mov or outsl xor xchg (bad) lret rex.RX gs hlt (bad) (bad) (bad) loopne xor mov sbb movabs jae xchg fistl cmp out imul cld or add rex.WB mov adc (bad) jrcxz xlat (bad) in jns int3 movabs (bad) in or rclb mov (bad) xchg sub jae movslq outsl int add insb lock scas movabs imul pushq (bad) mov lods decb nop fadds add sbb stc and push xchg fdivs (bad) sub movsl retq xor (bad) out xchg gs movabs clc (bad) clc notb rex.WRX jo popfq mov (bad) hlt repz incl xor adc in lret rex.WX (bad) or xchg ss cmp rex.R add mov scas (bad) adc sbb (bad) mul or (bad) (bad) and outsl jne push cld adc mov rex.WRXB xor mov loope faddl in popq rex.WR rex.WR pop (bad) mov addb movabs loopne rex.WR (bad) jo mov rex.B xchg (bad) push pcmpgtb popfq add sbb scas scas mov pop add (bad) or rex.WRB pushq mov retq fistpll (bad) (bad) jmp jge lret (bad) imul add lret sub (bad) rex.R (bad) (bad) rex.WRB cwtl or clc mov int3 (bad) pushq test fdivrl adcl fsubrs jmp (bad) lret and iret out or mov insb testb iret sbb mov (bad) leaveq push mov pushq add rex.RXB jns sahf xchg rorl out lret out pop rex.WRXB jo shl mov js fildl (bad) icebp test jae mov or jne retq mov (bad) lock jb (bad) mov xor jmp cmp nop std rex.R mov rex.B scas rex.WB (bad) repnz add movsb jne push rex.WXB fsubl rex.WB sub retq jne (bad) or add add (bad) imull mov std cmp rex.RB rex.WXB rex adc or (bad) rcr pop in sub or in rex.R mov fwait adc ss mov cwtl rex.WR rex.WRXB add mov jne (bad) and (bad) outsb push push int3 (bad) je pop sbb push (bad) (bad) (bad) stos push rex.WXB (bad) push addl rex.X push (bad) decb mov leaveq (bad) fdivl mov jb rex.RX rex.WR xchg (bad) lret enterq fs (bad) enterq xlat jno orb rex.WRXB cld cmp sarb or cld popfq fisttp adc mov mov lahf in out mov mov (bad) (bad) incb sbb mull add (bad) mov rex.RX loopne pmuludq mov cmc fdivs fstp pop mov callq in mov lret lret add shlb gs flds jb xchg xlat add (bad) adc rex.WXB sub rorb xlat xchg adc out add ja lret adc xchg test movb retq lods callq test jrcxz in push jl (bad) (bad) mov xchg xor in int (bad) sbb callq je cmp mov rex.RB xor rex.RB fcmovnu mov rcll cmp and mov jle (bad) cmpsb mov xchg push push (bad) xchg sub mov je mov fisubr cwtl (bad) add movabs xchg lods (bad) push insl sbbb sbb xchg xchg add jne rol (bad) fsub mov cld sub lahf (bad) movsb je pop jmp and or (bad) mov jmp fucomi or fwait repz or (bad) adc adc sub add clc sbb (bad) xor out xchg rex.W or in (bad) adc movabs gs or and pop mov loope stc pop cmc sbb rcrb mov xchg xor in nop std (bad) and xchg pop popfq jbe je cmp fimull and addr32 mov syscall movsb stos push jno sub rex.W cmp add mov adc mov pushfq (bad) xchg (bad) je imul rex.WXB (bad) rcrb sti je mov sub xchg test fbstp pop push rex.XB (bad) mov mov (bad) adc mov sub popfq adc sbb sub lret xchg (bad) jg (bad) pushq and add sbb rex.WXB repz mov or fwait cltd idivb xchg out movaps adc mov sub xchg mov push (bad) jb (bad) (bad) icebp loope (bad) adc adc rex.RXB pushq mov jg callq or in (bad) gs xchg movsl lret jne jns movl rcrb sti mov fwait cltd (bad) in cmp (bad) add pushq sub mov mov rex.XB lock jne (bad) pop sub jmpq (bad) in stos or lahf callq add rex.B jo mov sarb movsb imul enterq jnp jb (bad) mov cltd push jnp adc test (bad) pop adc (bad) pushfq xor cmp lods in mov jnp hlt sub mov rex.WR (bad) jbe loop lahf add fdivr (bad) jne movabs (bad) sti and sbb inc hlt (bad) rcl (bad) cmc mov and mov mov repnz xchg xor (bad) jne sub mov sahf rex.RX or loopne jb loope jmpq int3 mov out push adc leaveq lret in out cmp cmc enterq (bad) (bad) push adc add enterq sub iretw in enterq (bad) (bad) outsb retq (bad) addr32 stos rex.WX hlt and cmovns popfq test imul or add mov lods movabs jo (bad) imul rex.B jbe rex movabs callq in adc ja mov sbb sub adc rex.WRXB cmp mov (bad) rex.WRB (bad) je pop add pop pop sbbl xorb shrb jo add mov xlat (bad) cs nop add cmp mov xor out enterq lea jl (bad) (bad) adc or mov pop (bad) repz (bad) nop test sub (bad) (bad) (bad) cli rolb adc pop in (bad) (bad) data16 jne mov rex.RXB jo out lods cmp or cmp rex.WR movsb add sbb retq adcl lahf ror fcomps cld pop (bad) mov xchg (bad) or lcall mov imul push (bad) out pop sub jl and fs fnop rex.W rex.RB data16 jp stos rex.WRB (bad) movslq ss push mov mov fsts adc (bad) enterq pop int3 xlat push (bad) mov (bad) rex.RXB lock fldenv (bad) fisubrl jno movabs push int lods add repnz xchg rex.W addr32 (bad) rex.RXB xor mov (bad) movabs (bad) rex.RB fs jne insl retq (bad) rex.WRXB rex (bad) (bad) xchg cld jp cmp adc sbb (bad) out (bad) rex.RX rex.R int outsl adc add add (bad) mov add add or push add or rex.R rex.WR fs and xchg mov push mov rex.W fs (bad) push adc add push divl vmovss out (bad) (bad) fwait or loopne cmc shr data16 or icebp and jne retq adc push pushq rex.B xchg pop repz fs cld and imull iret movabs outsl mov subps jrcxz enterq rex.XB cwtl in outsb adc mov mov in cld enterq subb rex.WRX (bad) int3 fcompl xchg or push (bad) mov hlt jno (bad) rcll jne hlt int add shrl (bad) adcb int3 ds mov or sbb idivl repz (bad) enterq cmp mov fwait cwtl btrl sarb pushq xchg rolb adc cmp (bad) pushq insl in pushq (bad) (bad) mov cmc (bad) out movsb sub mov jbe repz xchg (bad) sbb xchg xor jne je clc xchg fwait xlat xchg repz cmc jnp jmpq movslq stc xchg pop cwtl retq mov cmc cs rex.WR ss mov (bad) lret shrb rex.WR lahf lahf mov and mov lods (bad) movl cld loopne lret sub test sbb pop testb xchg fsts imul movabs test xchg xor (bad) out xor cmpsb and or (bad) stc insb push xlat callq xchg jne or lret insb fisubl pop (bad) fdivrp adc cs out adc and or fnstenv sbb add rex.WRXB add add (bad) pop mov lock jae notb sub xchg jo sub (bad) mov fistp (bad) idiv nop loop pop xchg repnz rclb (bad) xor cmpsb insl in adc (bad) xchg (bad) repz adc pop adc fdivs add mov cmp mov jg xor repnz jne test out int (bad) push mov xchg sub jg adc or xor adc sub mov push stos rex.XB rex.B (bad) adc decl (bad) fcoml (bad) (bad) mov push add lea ds push sbb movb mov stc or ds sub mov f2xm1 mov jl adc sarb jne scas (bad) and and xchg mov callq rex.WB mov add push sbb rolb test (bad) cld lret cmc testb and sub (bad) callq mov fdivr adc jp (bad) mov mov sub jne jo insl ds push xor (bad) or or add jne fcmove sub repz jmpq cmp shrl mov xchg pushq (bad) adc movl push rex (bad) lock pushq lods int3 movsl xchg in xor cmpb push retq jle jae test cmp cmp jno adc mov xchg and cltd lret mov movslq (bad) jb jo sbb push sbb mul xchg adc fiadd add (bad) (bad) pop xor movsb xchg rorb add xchg (bad) out popfq sub mov movabs data16 cmp xor rex.WRB in jrcxz jb jns jo jnp ror cmp add imul (bad) (bad) rex.WB rex.WRXB ds scas mov mov (bad) movabs cltd jmp hlt repnz (bad) push imul jne outsb stc (bad) adc rex.XB jae out flds xlat in and test out or out xlat (bad) (bad) hlt xchg vrsqrtps icebp mov mov adc movsb notb (bad) (bad) adc mov xchg mov adc icebp jge (bad) (bad) mov je sbb mov push mov out iret xchg add js nop sahf mov xchg fnsave rex.X cld adc add xchg int3 xchg (bad) mov fadds cmp stc add (bad) cmc add pop hlt sub (bad) or cmp jo movabs (bad) (bad) sub (bad) rex in adc xor pop pmullw push je (bad) rex.X pop loope mull or rex.WXB mov (bad) (bad) (bad) mov (bad) push mov (bad) clc out callq jo fmuls or jg movsb repnz fdivs jg add loope int3 sbb push test es cmc in add or and ljmp fwait loopne (bad) lods xor subl fbstp adc xor (bad) vmovshdup adc add int sub cmp pop retq adc cld fsubp mov data16 add (bad) mov int (bad) sub sahf rex.B add fwait pop movsb or mov js leaveq (bad) jno xor (bad) mov rex.WRXB rex.RB lock (bad) jno fidiv out adc (bad) rex.WRX jl and adc rex.B add mov lods adc or jno lret mov fsubr int pop push cmp add push push (bad) rex.XB xchg mov in cli int pushq xchg rex.XB ss or xchg jno mov jmpq add pushfq es cmpsb lods jo (bad) (bad) movabs sub or (bad) mov movabs cmp fmull sbb leaveq popfq cs imul and (bad) fcomp (bad) cmp adc and repz or test or fdivrp adc in adc in cmpsb or (bad) lahf or cmp clc imul or or sbb adc sahf (bad) (bad) test enterq jmpq lock lods rex.WR rex.WRB movabs rex.B jne mov mov fsubrs (bad) movabs pop xlat enterq loope (bad) mov cmpsw (bad) adc test insl or icebp cwtl adc pushq add jne rex.WR adc mov rex.RX and (bad) icebp lock (bad) mov loop mov cmpb lock jno (bad) repz cmp repnz or xor adc out sub mov push stos punpcklwd mov sbb cmpsl (bad) sub (bad) (bad) movsb jb cmc movabs adc pushfq cmp (bad) add (bad) icebp (bad) adc movsb and rex.R cmpsb xchg xchg retq jne movabs mov pop rex.R xchg adc movsb sbb movabs (bad) cmpsl out out test pop mov (bad) adc hlt (bad) mul (bad) hlt (bad) (bad) icebp fildl xor lret xchg retq mov in int3 (bad) (bad) add pushfq rex.RB lea nop xor xchg jns je mov cmp in not (bad) mov sahf loop (bad) mov std lret mov mov xor add adc xor xchg add mov insl and pushfq mov shr jne pop (bad) out adc icebp (bad) jno (bad) movabs ds (bad) (bad) (bad) xchg mov cmp xor jae add icebp movslq or fild cmp imul rex.R subb shlb retq xchg bnd mov jno jp lret push nop mov jno pop xchg and sub int lock xchg sbbb or scas out (bad) (bad) loope rex.WR icebp pop pushq adc cwtl repz (bad) out stos retq (bad) push add adc add (bad) int3 jp mov mov or jle rex.X rex.WXB cwtl (bad) shlb (bad) rex.WRB movslq push (bad) jle jb jrcxz sbb adc js test scas scas data16 rorl pushq (bad) lods clc push sub (bad) adc mov int3 or hlt rex.WX int3 fsubs rex.R pop xchg adc mov movabs rcl mov out rex.X lods and xchg jmpq pop mov cs rex.WB mov sbb xlat lahf gs jne cld cmp jl leaveq in mov mov cmpsl add nop (bad) mov lock data16 mov xchg int3 je push divl rex.RXB rex.XB lahf add xor jbe or (bad) movabs (bad) in (bad) pushfq scas (bad) jb notb adc add movhps jmp lret add std and xor pushq rex.WRB (bad) mov shl (bad) (bad) (bad) test (bad) sub jno mov stos xlat or cmp cmp xchg int clc jno (bad) adc rex.WX xorl ds stos gs (bad) cwtl and insb or movabs add bnd std fwait jo xor or rex.WX insb adcl clc (bad) rex pop mov loop iret lods push add clc clc repnz mov movabs outsl lock jno (bad) test int3 (bad) or and and (bad) add incb fs fcompl out push test (bad) and andb movsl xchg mov maskmovq (bad) mov (bad) or outsb fwait (bad) push adc mov jns fcoms lock outsl nop imul (bad) push cmpsl scas imull callq retq jmpq in (bad) or jg (bad) jne in rex.XB jg sub leaveq mov in std mov mov rex.WRX fst (bad) repnz (bad) fcmovne movabs and xchg xorb fadds addl (bad) clc cmp jo pushfq insb fnstsw xchg add xlat add and sbb sbb stos mov test or enterq fmul mov adc adc rex.WRXB rex.RXB imul adc stc xchg (bad) retq fs lods cld addr32 sbb fldl and movabs stos sub (bad) movsb mov xchg fdivrs lods repnz (bad) (bad) sbb cmc enterq (bad) int nop scas rex.RXB (bad) or (bad) fdivl adc jmpq movabs ss (bad) jrcxz adc (bad) (bad) cld (bad) loope or out in push xlat (bad) es pop (bad) mov rex.WRXB fdivrs rex.WRXB (bad) insb retq jno movsb rex.RB mov repnz cltd mov loop stos (bad) (bad) (bad) cmp xor add jne stc or fmull movabs (bad) mov sarl push pop adc sbb ror jne (bad) mov mov imul mov adc xchg (bad) xlat sahf xor mov rolb loope sub mov add jae (bad) out fdivrs or rex.RXB rex movabs lock adc cmp movabs xor iret rex.WR or jns fist rex.WRX rex.WX xor add mov and xchg fist add adc sbb mov (bad) je hlt (bad) outsb movsl cmpsb push adc ds (bad) rex.WR mov (bad) nop adc movslq sub cmc pop pushfq rex.X movabs data16 lret mov add xchg cmp fistpll mov jo mov scas icebp (bad) mov sbb sub mov test knotb clc or (bad) imul movabs lret (bad) cli pop (bad) sub mov jne or rex.WXB mov int movabs adc pushfq movabs mov repnz and sub jl mov (bad) cmpsl or ss fdivs rex.RXB (bad) (bad) hlt jrcxz pushq adc mov xchg push add mov rex.WRB rex.X rclb xor push xchg test clc jbe repnz push jbe mov pushq (bad) data16 orb (bad) or (bad) jmpq mov or xchg movabs adc (bad) mov sub sahf jae mov sbb sbb cmp fwait cmp stos push add insb (bad) and enterq rex.RB adc callq in hlt cld (bad) in je push divb loop hlt or pushq icebp test push mov mov enterq mov test mov or out adc gs xchg mov shll cltd rorb jle adc sub (bad) retq rcll fcmovne ja jp cmp cwtl (bad) or xchg jg lods sahf pushfq testb mov sub sti cmpsb xchg insb jbe push pop rex.X outsl (bad) or sbb (bad) je test rcll or or stos mov retq movslq sti (bad) js mov xchg mov rex.WRX iret pop lods insl jne xor cmp rex.X stos pushq addr32 add rex.RX add mov clc callq (bad) (bad) in or xchg mul in fdivrs pushq lret in shll rex.W rex.XB clc add mov shrb (bad) xchg cmp mov or sbb lahf cmpsb and or sahf imull clc imul add retq fisttpll rex.R retq cld and mov fwait pop xchg lahf addr32 lret pop xchg and xchg pop out jrcxz imul cmp sbb rorb pop test js mov mov movsb cmp ds icebp mov and cli jne (bad) fwait (bad) rex.WRB jbe clc pushfq addr32 imul test movabs or jno je mov sarl imul mov or mov mov xchg rex.XB hlt add int3 or mov xorb adcb or imul movsb test stos sahf outsb hlt cmp rex.RX xchg movsb push or mov out jbe mov (bad) push jno sub lret pop js add or out movabs cmpsl insl push pop rex.W xor add scas repnz adc and rex.XB ss (bad) movabs rex.WRB pushq in pop in mov ja (bad) (bad) jno orl mov adc add xchg mov test lahf push ficom jbe jrcxz jne in rex.WRXB je addl add hlt sbb (bad) push and repz add (bad) cli xchg adc mov out (bad) in (bad) repnz subl cli std adc push cwtl rex.XB cs in mov test lret xlat cmp rex.XB adc xlat (bad) je xlat (bad) add cltd mov loop xor (bad) sbb leaveq cmpsl movsb test jne ss sub adc adc rex.RB pushq (bad) nop imul (bad) jnp sbb mov mov retq callq (bad) jmp jno add fwait mov mov or jne (bad) or (bad) push add push mov and lea mov divb mov cmp fsubs (bad) xor (bad) jo (bad) out jno hlt (bad) int3 adc rex.RXB and cmp jns mov xor sub jne add lock sub movabs xlat pushq fwait sarb xchg movabs add enterq rex.WR (bad) (bad) or hlt rex.WRXB xchg jb (bad) (bad) imul add mov jo sahf (bad) (bad) shrl lods push insb jb rex.WRB cmpsl xlat (bad) push popfq mov cmp fdivr movabs movl pop cld add sub or vmovsd adc nop sbb adcl hlt or movslq ss loop in repz std fdivrs icebp or cmp sbb (bad) jp mov or or int or rex.RXB test retq push pop mov stos hlt ss (bad) fsubrl test (bad) or iret stc rclb je (bad) cld ds jne mov je or mov rex.XB xchg mov clc or mov or xchg adc xor rex.WB movabs rorb cmc imulb (bad) push (bad) lock rex.WR pop ss rex.WR mov loopne (bad) test shl rex.X (bad) in sarb fist lea lock jne rex.XB iret add xchg (bad) add jns imul insl jge clc (bad) jne add lock rex.XB adc sub adc test in (bad) movabs or jnp movabs fsub insb imul cltd xchg in leaveq hlt shr mov rex.X rex.XB xlat pop notb (bad) pop mov and lods leaveq sub jo nop xor retq imul (bad) in (bad) xor push (bad) callq cmpsb fldl loopne loope push (bad) cmp (bad) loope (bad) incb movabs rex.W es xchg or (bad) icebp loope xchg or imulb pop stc jne (bad) lock push int3 cmp (bad) stos lahf push stos (bad) (bad) mov int3 mov mov fcomps movabs cmpsb push (bad) jle loopne repnz push pop jb nop pop adc imulb xchg mov loopne in nop sub mov (bad) rex push and orb adc mov pop push (bad) shll xchg and rorb (bad) rex.RB hlt pushfq fwait out rex.X add movsl mov cmc retq rex.WRB mov add leaveq hlt fs adc mov movabs insb rex.RXB rex.RXB rex.X rex fwait add mov (bad) sbb xchg (bad) lea xor out (bad) (bad) fucomp lods jne xchg cld jmp mov add rex.R lock clc lock add stos xchg int3 push (bad) and mov out mov mov ja sub rex.WRXB lret (bad) xchg fcoms sbb rcrl xchg in lret (bad) fmul pop sahf push or loop loop xchg push fnstenv cmp std lock nop push loopne jbe sbb es pop adc jmp out adc rex.WRB rex.WXB jns mov (bad) (bad) cmp movabs insl (bad) mov fcoms icebp pop adc cmp sbb or cmpsb nop or test mov ss nop adc adc xchg sbb jrcxz pop mov rex.WB paddd retq adc adc mov adc adc cmp jae rclb add mov insl cmp fld repnz pop add xchg lock add sbb lods nop rex.WRX rex.WRB adc std movslq imul movabs rex.RB (bad) adc sahf or movabs cmp or scas out (bad) (bad) add push orb insl xlat lea (bad) pop jmp ss repz pushfq add pop (bad) or rex.W rclb scas int mov xor in sub cmc rolb mov callq fyl2x mov orb (bad) (bad) sbb rex.WXB jno rex.WRB cmc iret flds fcomps sbb leaveq out loopne sbb or adc movsl rex.WRX rex.WRXB pushq add sub mov (bad) test adc je pushfq (bad) cmp (bad) hlt (bad) mov mov imul cmp rcll or loopne jl cmp pushfq and sbb add xchg imull xor (bad) jmpq cmc push sbb pop mov fiaddl in push in or xchg adc mov or nop push add idivl clc fs imul jo retq jne xor jne sbb std xchg and xchg scas rex.XB mov (bad) out popfq or push mov mov je hlt (bad) fdivl (bad) imulb mov in jae (bad) fsubp adc cli (bad) mov (bad) outsl stc (bad) fwait (bad) mov and mov hlt mov sbb adc out sar movsl nop and pop push mov sub sub (bad) adc hlt loop rex.XB sbb (bad) movabs (bad) jne and hlt adc rex.RB lock jb jg fwait mov (bad) cs mov add or ds in scas and jle (bad) (bad) retq (bad) cmpsl mov shr gs fwait lock mov int sub ds add add xor lar add jg fsubl add out nop pop fiadd mov lock rol fwait lret jne psraw push xchg rex.W rex.WRXB int3 xor fldcw add jae and or rex.W xor sbb rex.XB mov xor (bad) mov adc cmc lock xor rex.XB jg in jge (bad) xchg adc loop mov hlt mov mov jne pop sub cmp and (bad) mov xchg xor push (bad) adc in and (bad) lret push lods ss movabs stos (bad) lret retq jbe (bad) ljmp nop insb (bad) cmpsb gs cli shrb or (bad) or jns sti pop (bad) (bad) and rolb push jnp mov stos fchs loope,pt movabs xchg je (bad) (bad) fcomip sarl gs jns or ljmp (bad) outsb jne xchg mov rex.XB jmp jl (bad) (bad) out pop (bad) cmp mov fisubl sar (bad) mov xchg adc pop enterq stc jno or cli pcmpeqd in (bad) mov (bad) push (bad) rorb mov sbb xchg pushq lea int3 cmp adc pop ror rex.WB or pop adc sbb pushq xor int3 (bad) (bad) nop retq add jg leaveq xchg hlt jns (bad) (bad) or lret (bad) (bad) (bad) xor notb sahf add test jae int3 and (bad) rex.R mov outsb pop jne push cli adc (bad) in je test jns mov jle lods test jge or jne pushq lahf rex.RX adc rex.R sbb movabs xchg sub (bad) loope cmp xchg rex.WRXB add movslq mov add out adc sahf mov push jne stc (bad) (bad) cmpsl (bad) rorb (bad) int3 (bad) jnp (bad) shr xchg add jbe mov cld (bad) movabs enterq imul gs jae data16 (bad) xchg xor adc rex rclb mov push lahf testb (bad) (bad) (bad) hlt loopne fistpll jrcxz test iret cmp push test (bad) sbb mov jmpq cmp adc jno and jnp adc (bad) std int pop jmpq (bad) or out bnd push cmpsl adc and imul in repz xchg leaveq jne subl hlt (bad) (bad) cmc push in rex xchg xor push cmc je gs (bad) xor mov mov mov stc hlt rex.WX fisttp xchg mov push addb pop lret jg cli clc xchg jne xor cld adc iret rex.RB hlt (bad) rcll mov int3 rex.RXB (bad) jns sbb mov (bad) sarl or mov (bad) stos leaveq sbb fldenv adc fnstenv lock mov xchg xchg ja (bad) rex.XB sbb clc pop hlt cltd fsubrl (bad) sti add (bad) movabs movabs pop repnz (bad) xor ja jne add and (bad) (bad) mov jl add rex.RXB rex.X rex.XB fcoms callq jge sbb imul jns xchg xchg lret (bad) test retq push mov mov insb loopne repnz bnd or rex.WRXB nop jne mov adc xor (bad) callq out mov push mov (bad) stos rex.R rex.WR jo xor (bad) xchg cmp mov (bad) add xchg sub pushq cwtl (bad) jnp hlt cmp xchg repz repnz movabs (bad) fnstenv outsb in pop (bad) rex.WR repz icebp es hlt xor mov mov (bad) jmp rex.RX loopne sub xchg xchg pushq cmc xchg xlat and xchg push push out rex.XB xchg int3 rex.X mov shrl (bad) mov pop xchg fdivr test je fcomi (bad) xchg icebp fmull rex.XB fs fdivr sub xor cwtl mov mov (bad) js adc out pushq rex.W rex.WR in fmuls add mov js rex.WB data16 lock xchg mov adc cld add outsl psubusw jbe shlb rex.WRX fwait xchg mov lods sbb loopne (bad) jrcxz lods and xchg add xchg scas leaveq fcomps test jrcxz rex.RX lock add lret mov (bad) subb (bad) mov pop movsl jno mov sub sar scas (bad) (bad) (bad) lret and jge in xchg movabs jne add mov cmp xchg and adc mov mov in lock mov rex.WR nop or (bad) adc add pop and in out in adc pop add jrcxz mul mov iret mov int es mov jno jne sbb xchg repz lahf icebp rex.RXB adc or lea jp and scas mov sbb and ss cmc (bad) gs int rcl mov (bad) mov movabs outsl rex.R rex.X rex.WB addl rex.WRXB or movsl cs add icebp push mov adc (bad) je (bad) (bad) rex.W fucomp iret adc adc (bad) movabs xchg rex.WR imul xor sbb retq adc adc sub (bad) jne (bad) xlat cwtl jg pop movsl and rex.WRX xchg mov mov hlt mov je notb push xchg push (bad) xor rex.RXB pop fmulp xadd (bad) jg retq rcrb (bad) scas popfq (bad) (bad) cmpsb rex.WRX rex.WRB sbb (bad) jmp adc jno (bad) in (bad) stos rex.WR add rex.R (bad) mov xchg or fdivl cltd adc push imul push adc cli retq leaveq out rex.WRX scas (bad) repz (bad) jle add movabs (bad) (bad) or (bad) imul jg (bad) rex.X xchg scas (bad) callq pop stc xchg (bad) adc jmpq pop ja fistl sbb lods (bad) lea push icebp adcl adc rex.RX mov ja jae incb xchg mov (bad) xor xor jbe mov lahf cltd jbe js mov rex.WRX sbb (bad) jno or clc and lock (bad) rex.WRXB adc (bad) xchg rex.XB xchg xlat mov add movabs (bad) adc outsl pop (bad) (bad) xlat add or jmpq xor sbb cmp dec rex.W icebp adc (bad) jne cmp hlt scas (bad) mov cmc lret (bad) cmp fsubrs xor rolb popfq movb nop or mov scas adc (bad) adc (bad) mov sub fstps jmpq rcrl mov xchg adc xor jg mov jge xchg and jo imul jne nop mov (bad) xchg movabs mov jbe (bad) xor fistpll hlt cld shlb (bad) mov iret mov jo cmp rex.WX rex.WRB (bad) jno push push jle pushq mov rex.WRXB mov adc pop nop (bad) imul rex.RXB rclb test int adc or (bad) sub imul in mov xor testb idiv in test mov repnz outsl loope out es movsb notl roll (bad) repz stc icebp xchg and xchg mov xchg adc sub xchg ss (bad) mov (bad) ja add rex.XB ja repz xor jbe xchg rex.WX ss lock (bad) mov pop cmp mov (bad) and sahf lods push or xchg (bad) sub sub sbb pop rex.WB sti add pop xchg pop jne mov (bad) (bad) rex.RXB mov cmc loope (bad) or cmpsl movabs or push jne hlt rex.WRB enterq (bad) test in pop iret rex.WRB or xchg adc psubq adc int3 fwait (bad) mov (bad) or adc sub rex.WR (bad) js mov (bad) mov data16 mov push fidivr repnz (bad) or (bad) jmp adcl pop rcrl popfq sub xchg (bad) int3 out cmc pop jmp loop (bad) sbb jne callq mov sub and rex.WXB popfq pushq imul jg sub push rex.RXB lock flds sbb rex.WRX rex.B out rcrl (bad) std loope cwtl rcr jae pop push (bad) in cmp decb (bad) nop xchg loope or (bad) and jrcxz cltd xchg roll (bad) movsb test mov imul movsl or xchg rex.RB enterq rclb jge mov (bad) xchg push enterq popfq sti std mov (bad) xchg movsb or push add cmc (bad) or int out (bad) (bad) xchg push adc xor cmpsb lods sbb or movabs mov fist and out enterq rex.RX fs (bad) rex.R jo lock pushq (bad) lock cmp mov jno mov out xrelease rex.R sub js stc cmp data16 lahf mov (bad) std jne (bad) (bad) cmp outsl (bad) jg cli (bad) imul test (bad) fdivs mov (bad) in mov test push or rex.RXB sub hlt jne rex cmp enterq mov cld je loopne mov xchg xor or (bad) sbb cmpsb (bad) or xor (bad) js xor (bad) callq lret push sub callq xchg in je cmp jno lea out rcll movl rorb (bad) or hlt xchg repnz (bad) mov sbb (bad) and rex.WRB (bad) addr32 cs mov movb (bad) je sbb mov xchg adc sbb push sub rex.WXB rex.WXB js lock jo or (bad) or (bad) lods mov rex.WX xchg (bad) cmpsb (bad) jle xor xchg or pushq jg jae in movabs int3 imul je out jae adc add sti rex.XB push insl mov std test imul cmpsb stc lods rex.R rex.XB sbb movabs sbb (bad) cmp sbb (bad) idiv lods (bad) (bad) je lret mov rex.WXB push fs cmp push mov shll rex.WX add cli jle je jg negl pmuludq bnd xchg adc sbb cs jmpq mov insb loope cmpsl callq repz jl (bad) (bad) cmp pushq push or xchg xchg add adc loope movabs xchg mov xchg push jmp pushfq nop (bad) mov jno jne xchg mov pop js fcomi hlt neg cmp or shlb shl (bad) lret cli imul jge mov push sbb adc (bad) sub in sub (bad) xor cld xchg loopne rex.XB (bad) roll insb sbb add mov or scas jae hlt (bad) rex.RX loop adc enterq in cmpsb rex.WXB lret (bad) movsb sub mov loopne int loopne sbb movsb push pop nop ss add movsb stc (bad) jo cmp jne cld jrcxz rcrl gs add iret cmc or rex.WRXB jbe movb xlat sti rex.WRXB lret imul or jo out rclb adc or rex.RX rex callq callq mov sub xor push rolb xchg ja mov test xor (bad) pushq hlt not out jne xchg orb mov add jo xchg add lods enterq mov cmpsb hlt popfq jg add adc (bad) sbb movabs jo jmp rex.WRB fs imul xchg cld mulb cmc xchg cmc lret xchg and (bad) jbe stos adc jrcxz (bad) rex.B xchg jl (bad) jno cmp cmpsl rex.WRB (bad) add rex.WR and and stos mov mov rex.WRX out mov clc rcll insl mov incl addl (bad) pushfq pushq sub adc int and ds imul callq sbb (bad) mov iret insl movabs jrcxz xlat repnz cs or js mov loopne (bad) mov js mov (bad) (bad) repz pushq rex.B imulb push es jo mov lea or xor jge or test rex.WRB (bad) rex adc in xor xor (bad) or add pushfq push xor (bad) clc jno clc callq loop xchg add or outsb mov scas clc (bad) mov movabs int3 fildl int lea rex.X pop sub mov rex.WXB xchg (bad) loop mov mov stos (bad) cltd jne cmp cli (bad) loop mov dec lods sub mov and fnstsw cmp mov std movabs rol mov mov (bad) rex.WB and lret test adc jmpq pop jge rex.B xor sti pop jb lock xchg or mov cmpsb xchg sbb nop xchg (bad) (bad) push rex.RX repnz idivl cld sbb rex.RB fnclex push add or imul cmp cmp cmp xchg and rex.WB repz rex.WRXB sub scas loopne or nop cmpsb push or rex.WRB mov movsl or ds rex.R xor mov (bad) lret sti rex.X push outsb xor mov ds fistp (bad) rex.WXB fidivl es movabs jl adc push iret rex.WXB rex.RX rex.WR or (bad) push icebp movabs movsb out loop iret cld rex.RB lock enterq (bad) rex.WX fwait push mov jae in incb push loop cmp retq adc mov imul add (bad) pop jns icebp adc cli ss ds insb sbb retq notb or (bad) lea adc lods jbe sahf mov rsqrtps pop add sub adc mov hlt pop xor mov jl (bad) xchg xchg (bad) icebp addb cli rcrl adc cmp mov mov xlat pop xlat (bad) icebp cmc adc outsl sbb cld (bad) push js insb gs sbbl (bad) sbb in (bad) xor push (bad) rex.XB (bad) pop (bad) add fadds (bad) lret test insb (bad) cmp sahf scas lock lock in jbe sub xor sbb jne hlt rex.XB jg (bad) mov stos test jne cwtl sub ja loop (bad) xchg gs xrelease sbb jrcxz (bad) cwtl in subl addr32 insb nop jle icebp (bad) js or jae (bad) mov rex.XB rex.RX rex.W retq (bad) xor imul jbe in es repz (bad) hlt xor out mov movabs rex.WX pop jmp test mov (bad) and stc loop pop (bad) sbb outsl xchg pushfq xor (bad) mov (bad) xor sbb jnp xchg loop (bad) xor scas scas scas xor in (bad) lods out jae sub sub mov loop mov in xor or (bad) outsl rex.XB cld fdivs (bad) (bad) movl cld jnp lret pop fldl fst int lock sub faddl or jae cmp rex.RB movl jle sbb fstl gs pop xchg mov cmp cmp (bad) callq jo rex.X (bad) add ds sbb sub xchg je jmpq int3 jno or loop sbb movabs push push shrb rex.RXB pop iret (bad) xor cmp js jno cltd iret insb and add and imul xchg cmc cmpl jrcxz adc sbb rex.RXB je int pop adc rex.RXB adc stc cmp add rcrl rex.RB jns xor movsb jrcxz jns rex.RX movabs gs mov sbb rex.RX (bad) repz push (bad) retq sub adc sbb rex.X sbb (bad) jne stc xlat out (bad) movabs sbb rex.X fldl data16 pop subb repz test xchg jg jb add int xor (bad) rex.X mov imul rorl pop adc mov fnop movl (bad) out add test jnp in sahf add mov lahf pop imul (bad) in mov out xor je sbb fnsave out or jmpq add (bad) and (bad) test xchg sahf faddl rex.WRX movabs cmp adc cmc xor cltd int3 (bad) (bad) int adc add (bad) icebp scas hlt rex.WRXB push mov xlat fild adc jbe rex.RXB in js pushq stc or adc (bad) cli (bad) adc sub adc pop imul and (bad) xchg or sub or adc std xor xchg test (bad) jne rorl callq push pop (bad) jns mov sbb (bad) mov jge mov jmp movabs out (bad) out incb push sub rcll sub and (bad) mov adc shll mov cmp cmp adc or (bad) sarl cli cmp adc rex.R notb mov callq (bad) rcll mov retq xchg roll pop icebp xchg test xchg fidiv jne es jb mov and sbb rex.WRX rcrb movabs sbb rcll mov jg gs cld (bad) rex.RXB fnop mov xchg nop add cld fimull (bad) retq leaveq (bad) mov cmc mov adc lods (bad) sub fcomp lahf cmc (bad) adc push movsl (bad) xchg pop in and fadds (bad) jrcxz jg push adc add rex.W cld mov mov sbb (bad) cli mov (bad) mov pop mov hlt push adc jo xor add rol iret (bad) xchg in cmc rex.WRXB pop (bad) lahf in add cwtl mov (bad) retq sub (bad) insb xchg xor (bad) in adc xchg (bad) jae and mov repnz insb lock pop repz hlt xchg rcrb xlat cmp (bad) pushfq not pop (bad) (bad) test insb int test movabs and xor (bad) orl in (bad) mov out movslq or jbe (bad) xchg shl xchg mov or mov (bad) (bad) pop jb sbb int3 xlat adc mov xchg jne clc repnz pop (bad) js jl adc out rex.B rex.WR mov and mov scas cmpsl fadds (bad) cmpsl mov rex.WRXB xlat pushq pop (bad) jae imul repz add add (bad) in pushq (bad) (bad) mov je fiadd scas xor divl (bad) (bad) rex.WRB mov imul jne cmpsl ds rex.WRX xlat or adc std (bad) sti (bad) (bad) sbb sbb (bad) int (bad) push pushfq int imul sub jae (bad) xchg in or std mov or lods sbb or cmp sub je orb fistpl mov add mov (bad) pop sub mov xchg js callq gs sbb jno (bad) jo test (bad) (bad) mov std lods (bad) jo sbb je adc or lret rex.RX sbb outsb mov int3 mov neg pushq enterq je sub fistpll lods mov insb fs retq cmp or and ss outsb (bad) adc (bad) rex.WRX jo sbb push xchg test xchg jmp cmp sub xor (bad) xor pop (bad) or push rclb mov fisubrl push xchg xlat mov (bad) jp frstor lret (bad) xor push out (bad) xor and mov or xchg push jb (bad) lahf movabs jno fsts adc add push hlt rex.WRXB (bad) divl rcrl push add nop or hlt or add jne (bad) cmp mov hlt jae mov or in rex.X lret xchg adc (bad) jne (bad) femms clc repz sub or xor callq retq pop (bad) add pop sbbb (bad) outsl jbe sbb enterq (bad) rex.RB (bad) lret lock (bad) or xor test scas xor ljmp mov cvtpi2ps (bad) cmpsl (bad) cli add mov lock push pop test mov (bad) rex.RXB roll fldt cmp iret rex.X or lods ss retq mov imul (bad) sbb lcall test retq jbe rex.WRB bnd cmp callq andb loop cmp hlt add stos loopne rex.WXB pop lock rex.XB addr32 mov push push lret out je sbb xor (bad) rex.RB jmpq fcoms cmp enterq test or out (bad) (bad) leaveq and mov jg retq push scas cmpsl movabs push push rex.XB add xchg fs mov (bad) cmc rolb retq jbe mov mov popfq addr32 xchg (bad) pushfq and rex.RB or rex.XB rex.X int3 (bad) push popfq xor xchg addl jne cmpsb cs int3 add (bad) test jg add (bad) sbb adc mov not cmc pop cmpsl add movsl rex.WR lock mov (bad) (bad) sub sub sti adc loop adc cmp add (bad) sub (bad) (bad) rex.RX or mov and imul hlt movabs (bad) retq xor lods push xchg cmpsl ss fcomps xchg (bad) stos test adc jrcxz or push je mov and idivl in (bad) sub sbb (bad) jl shl jo push sar add lods scas fisub adc or insb jmp nop sbb (bad) mov imul mov cmpsl adc push jrcxz jge xchg cs cwtl (bad) lock mov rex.R retq (bad) mov mov adc (bad) lret repnz sub (bad) add xchg jmpq rex.XB lock je icebp movabs movsb xchg (bad) rol rex.WRXB (bad) xchg add xorl adc test cmpsl fwait (bad) (bad) sar pushq or enterq jne mulps mov lret adc (bad) shrl mov pop or sbb cwtl iret or (bad) movslq mov sbb imul sub (bad) int3 divb sbb jl cmpsl iret xchg mov jo std cmp adc pushq out or lock push jno movabs add mov xor xchg out gs or (bad) (bad) add rex.WRX cmp enterq xchg add test hlt xchg fimul mov and xchg cmp fadds test loop rex.R xchg hlt xchg mov je add mull push repz (bad) enterq adc (bad) jb and mov (bad) or (bad) cmp sub imul nop jns or test je (bad) (bad) nop data16 xchg rex.RXB sub rex.WX callq rex.RXB iret jg clc push jne in lock (bad) push rex.WB and js add (bad) adc jge (bad) xchg (bad) ss rex.XB scas and ss or rex.WX (bad) in push xchg and pop fxch rex.R (bad) jno callq fnstenv rex.RX and jbe ja je jno or lret add jmpq sbb (bad) retq push add in (bad) jne in lods mov rex.XB repz enterq add nop roll (bad) in adcl cmpsb notl (bad) or rex.RX cltd popfq not xchg movabs xchg outsb mov pop repnz data16 add fldcw retq add xchg pushq shrb mov lea ss int pop imul pop (bad) in jno rex.WB gs add mov or mov out and cmp adc cmp cmpsb imul rex.RXB cmp enterq nop xchg es int (bad) sbb (bad) sbb (bad) and lock int add (bad) repz (bad) push stos int sbb and sub cmp loopne out adc add and adc xlat data16 mov rex.WX pushq rex.WB adc sbb xor lods add mov (bad) (bad) es cmp xchg repz sti test (bad) cmc rex.XB pushq ss (bad) cli hlt je fcomi (bad) stc negb (bad) adc (bad) xchg jrcxz loop and and test mov (bad) fildl rex.R je sbb nop lahf sbb (bad) or xor mov imul lods add fdivrl xchg (bad) adc jne (bad) (bad) cmp std pop cmc enterq xchg push jne (bad) cmp leaveq mov test sahf (bad) mov (bad) xor shl (bad) mov xor sbb fnop hlt imul cli hlt push repnz clc rcrl pop and es test adc pushq (bad) repnz xor and sub callq adc mov lods jmpq insb sub (bad) movslq mov xor stos cmp fldenv cmpsl repnz adc nop and sub xchg sub and in rex.XB and sbb jbe loopne mov xchg flds jns sub (bad) xor rex.RXB sub adc jg rclb (bad) adc add fild (bad) (bad) sub (bad) xchg pushfq stc rex.RX rex.WRXB movsl sbb adc sbb adc in test movabs divl (bad) rex.XB rex.WRX lret xchg xor push jl xor (bad) or shrb (bad) imul js pushq push cmp out (bad) sub cmc rex.WR push cmpsb or rex.WRX insl (bad) int3 jno pop mov jrcxz (bad) flds loope sbb jrcxz (bad) jne or adc jrcxz and push and push out rex.WX scas sbb sbb and (bad) testb ss pop jp mov (bad) sub jo icebp (bad) hlt add xlat rex.WR out (bad) add cmpsb or jle sbb unpckhps popfq (bad) cmp cld stos and (bad) scas rex.WRX and xchg mov mov mov sub xchg adc sbb push sbb fwait shrb or sub retq push jne (bad) (bad) js rex.WRXB rex.WRXB pop fcoml shrl (bad) rex.WRB iret push push loope rcl lea xchg outsl mov or sbb rex.WX pushfq fistl je push mov sbb insl (bad) cmp imul int3 mov jne jle jmp (bad) or (bad) (bad) xor (bad) jne and (bad) movabs leaveq cmc xlat out jp mov (bad) and (bad) sub retq int3 (bad) jl insl mov in adc fcmovne push test (bad) (bad) (bad) xchg retq fbstp scas es ja jle sub (bad) jbe in push imul mov pop adc (bad) xchg jmpq add stos or pop cld adc xchg jmpq (bad) imul data16 (bad) outsb ss mov mov pushq outsl mov jns mov jmp es gs rex.WXB (bad) (bad) sbb mov (bad) rex.WX rex.RX rex.RXB (bad) mov in jmpq (bad) in (bad) cmp pushq rex.WX shll rcll rex.R sti mov push ja sbb xlat add fdivl (bad) or out push scas je pop mov jbe rex.RX iret rex.B imul pop rex.R out (bad) xchg cmc insb (bad) cli out addl rex.RXB (bad) (bad) iret stos rex.WB lods (bad) add sbb stc repz (bad) cld loope pushq and mov jrcxz repz movabs xchg push mov fist (bad) in (bad) push xchg (bad) or lock rex.WRX rex (bad) sbb loopne (bad) sti mov pushfq lret or lock in (bad) add rcrb and repnz divl enterq jl or out jno or enterq and cmpsb rcrl (bad) xor mov sub xchg out or add rex.RX rex.X popfq imul retq (bad) rclb mov xchg shlb sahf adc rol vpternlogq movabs (bad) jbe and cmp jp xor mov pushfq xor (bad) (bad) lret adc retq mov jg xlat xor cmc loopl lods mov (bad) fsub in retq fldt decl (bad) rex.RXB nop movabs add int js add out (bad) movabs in mov cmp movabs (bad) mov sbb pop loope jno rex.W (bad) and rex.R mov mov pop xchg cld scas mov retq movabs testl (bad) and add (bad) fs rex.WB pop mov mov cmp leaveq pushq test outsb jp jrcxz mov sbb stos lock mov (bad) jb push xchg mov (bad) (bad) rclb ds jmpq rcrb (bad) mov ds add insl (bad) or scas push int add addr32 xlat jl (bad) nop mov (bad) (bad) gs hlt addr32 (bad) push mov rex.X jmp adc out sbb in testb sub or lea sub (bad) rex.RX xlat sub push kmovd xchg movsb (bad) in (bad) mov je or (bad) xchg xor incl push rex.RX or (bad) pushfq rex.RX push cmp testb mov retq adc (bad) test sub or (bad) (bad) jrcxz insb retq in mov mov ja fnop cmc (bad) int3 xchg out int popfq loope or movabs push out mov rex.WX ds mov (bad) popfq push iret xchg cmp push xchg hlt shlb out (bad) movsb mov adc (bad) shlb test xchg (bad) (bad) fiadd or xchg scas cmpsb callq rorb push imul pushfq std jno rex.B out (bad) push lret or adc jbe jb xchg xor repnz (bad) lock bnd (bad) and ds gs sub out pop mov xchg (bad) and rex fdivrp imul jb xchg loopne (bad) lret sub adc hlt (bad) out lods rex.XB mov retq imul mov pushq repz out loop repz (bad) jmp retq retq notl cmp loop (bad) push xchg loopne ja pmuludq jae jae pushfq lods add jne jbe rex.WRXB fwait std rex.WR pop and sbb cmpsb xrelease mov fs rex.WRX sarb (bad) jb rex.X mov (bad) fcomps xchg sub fyl2xp1 add shrl rex.X pop and sub (bad) xchg enterq rex fsubr in jne jns loopne movsl cmpsb or cs rex.WX rex.XB cwtl add or mov movabs (bad) xlat adc (bad) add mov adc fs hlt adc xor lock xchg jl add je out scas xchg (bad) jne (bad) (bad) (bad) cltd (bad) or movabs cltd rolb nop xchg jne test mov or adc mov movslq (bad) test xor clc repnz fcoms xor (bad) std xlat (bad) pushq fcomp rdpmc rex.WRX es icebp repnz rex.WRXB imulb rex.X fadds push mov pop movabs mov lea or repz nop (bad) movslq mov (bad) xchg or fwait scas adc fs pushfq push jo fist outsl jb movabs jg test rex.RB add loopne clc nop rclb rex.RXB repnz idivb jmp xchg pop mov (bad) sub push in (bad) int jno cmp outsb sub fdivrl jg ficom int3 adc jns xchg rex.WB xchg (bad) fs fdivl (bad) mov fld1 mov stc (bad) fsubrl stc (bad) test out ror loopne cs hlt callq addl data16 or ja and rex.WX push jno or repz jne sbb (bad) test (bad) (bad) push (bad) and adc and add cmpsb retq fs jns mov pop repz lahf in (bad) sti hlt add cmp mov retq insb mov push rcl stos rex.WX (bad) (bad) rex.WX movslq push stc mov scas xchg popfq (bad) hlt clc mov pushfq rex.WR (bad) and or mov (bad) cmc (bad) loop add cld push movsb mov add (bad) scas or repnz fdiv jb sbb rex.WRB pop and jmp (bad) adc cmp add push popfq std mov loop movabs repnz xchg pushq sti rex.RB outsb or (bad) add insl rex.RXB xor pop xchg loop notb pushfq hlt adc pop repnz rex.XB jne add xor repz (bad) jo rex.RB popfq movabs jo stos xchg xchg (bad) xor in sbb rex push out stc lahf sub pop sbb cmp unpcklps jae pop adc loope xchg (bad) rorb and rex.WRXB jmpq imul out pop rex.WR movabs (bad) mov mov fcmovb (bad) (bad) jmp (bad) icebp fwait xor rex.WR add (bad) clc subb (bad) jnp xor or (bad) sar and fldt sbb in xchg sbb imul jnp (bad) or rex.WR or icebp rex.XB fildl xchg adc sub rex.WRXB cli hlt int hlt sar add cmp cmc adc (bad) test movabs jl in sbb movabs jns xchg and adc loopne adc mov push sbb xchg int3 or (bad) lods xorl pop mov or icebp cld jmpq jae mov rex.R rex.WB pushfq xchg ja test xchg enterq scas lods shrb mov mov xchg (bad) hlt in decb nop mov cld je (bad) decb or and (bad) ds out mov or sbb sbb scas fistl and lods (bad) lret js or shr adc or or testl (bad) mov jmpq push mov pop mov shrl cld insb mov (bad) int lods leaveq mov adc (bad) (bad) cmp in xor fcompl jmp pop rex.WRXB lea sub (bad) fisttpl lea add cmp repnz int pushq (bad) push lret imul mov in xor and sub sarb fadds sbb popfq imul scas loope (bad) pand lock out movsb sbb rex.WRXB in jne loope mov outsl out mov retq jne mov xadd mov shrl mov (bad) xor push add clc mov outsb xchg and loope mov mov xchg xchg xor sub jmp mov jne lret pop or jmp (bad) rex.W xchg (bad) ss xlat callq test or lock fwait xchg std (bad) sbb or mov xlat cmpl cmpsl rex.R sub xchg jnp adc shlb or mov adc int3 loope (bad) int3 int3 jno or loop fisttpl clc jo push test mov mov iret (bad) jne stos and out jg and fwait xlat es push fdivl pushfq or ds push mov (bad) rex.RXB xor xchg gs jle (bad) fstl xchg push (bad) imul cmp xor loope and in push out (bad) sub movsl (bad) jno xchg jno shlb sbb and rex.WB imull shrl ror rex.RXB (bad) pop (bad) (bad) (bad) and (bad) rex.WX add and and xor or sub cwtl xchg subl and cmp imul imul jrcxz jle idivl sbb notb out and fsubrl nop jne and out imul (bad) repz xor xchg adc xchg rex.WR mov adc mov rex and sahf int3 add rex cli movabs jmpq (bad) mov loope jge leaveq jrcxz (bad) sub (bad) negb clc imul jns jmpq addr32 mov movabs sbbb (bad) xchg int3 callq roll jne push (bad) movabs faddp sar stos adc lea add ss jmpq push rorb rex.B (bad) imul xchg stos and (bad) in and xchg pop sub xchg fildl mov xor sbb (bad) jne (bad) lahf adc rex.RXB gs imul adc shrl xor pop cmc xor rex.R fs cmc leaveq addl adc sub jb or (bad) (bad) mov mov add (bad) stc mov leaveq movsb (bad) push icebp cld movslq pop fcoml jne (bad) or (bad) xor adc cld jne out adc jo fstpl xor xchg add mov (bad) xor xor (bad) add or (bad) cmc jmp sub (bad) movslq adc js rex.WR jae adcb xchg adc (bad) jle std push fcoms add sub adc (bad) sub xor cmp in (bad) out sti sbb in hlt enterq loop add movsb (bad) testl add icebp and adc lock sub xchg addr32 cmp int outsb out (bad) xchg sub pushq (bad) push in rex.RX mov rex.RXB sbb imul rclb rcl rex.W repnz jp (bad) and movsb push idiv jns hlt ja (bad) add sub sub cmp (bad) stc xchg xor adc nop lods cmp je rex.WXB test (bad) stos lock or jrcxz fs and rex.WR leaveq (bad) js lock test cmp sbb sbb rclb jp push rex.RXB rex.XB lods xor enterq rcrb cmp pop jle rex.R mov in mov xchg mov and fs (bad) nop (bad) clc hlt mov (bad) repz insb rex xlat pop enterq mov or (bad) or adc mov rex.WRB sbb stos iret fist (bad) mov and mov push xor mov not insl (bad) rex.RXB rex.WR rex.WRB fstl sub cmc enterq xchg sarb sub ja (bad) negb xor adc pop fidivrl lods or (bad) (bad) scas (bad) pop mov push int3 adc int rex.WX sbb jno,pn push out cmpl jrcxz shrl add cs push jbe (bad) adc test mov lea mov (bad) (bad) mov sahf jmp sbb icebp clc rex.RXB xor iret test adc adc mov sub mov add popq loop mov or (bad) add js sub mov (bad) fwait push xlat rex.WRXB (bad) pop jbe mov (bad) lock (bad) xor (bad) and sbb push shll push mov (bad) ror or xchg mov jne notl (bad) (bad) (bad) adc int3 add sbb test hlt jl (bad) divb iret fwait mov shrl xor sahf insl sahf imull iret data16 push iret (bad) adc (bad) jo int (bad) adc jge rex.RXB addr32 add or mov mov (bad) or movb add rex.WB xor (bad) (bad) (bad) cmc mov mov imul mov push (bad) add jne (bad) add (bad) mov mov jg enterq and sbb (bad) test insl sbb and jae jrcxz lret repz jmpq callq fnsetpm(287 rex.WRX iret pushq mov int test add (bad) cltd in icebp std rorb xchg push cld rex.WB es xchg adc out callq and or js je in jne stos shll mul ss xor (bad) movsb (bad) mov lahf (bad) neg hlt in (bad) lea sarb pushq (bad) pop stos movabs jg in cli or jnp add jae cmp movabs adc mov sbb (bad) (bad) xchg imul cld fdivrs xchg lock (bad) sub jo mov outsl (bad) movabs (bad) (bad) stos clc or movabs mov sub sub mov scas sub cmpl nopl jno lahf mov sbb (bad) jge cmpsb lock out add enterq fs sub (bad) jl push cld adc (bad) (bad) cmc movsb pop int3 fdivrl pop jns rex.RB cmpl ja jno mov int3 mov sub or outsl notb (bad) (bad) xchg stos sar je mov mov xchg push mov stos rex.WXB test je xchg ja sbb sbb test (bad) push imul add add mov pop jne jns js rcrl mov jno sub stc add rex.WR test (bad) ja cld pushfq rex.R add pop int3 or movsb movabs jrcxz sbb lret (bad) fs mov cld jbe jrcxz cmc es roll fadds fcmovnb (bad) ss imull int3 pop adc rex.WB insb cmp and rorl lret pushq xchg (bad) rex.W mov clc movabs rex.W rex.WRXB xchg icebp add sbb out (bad) or mov cmp jbe push or (bad) push movslq shlb mov rex.B repnz cld xchg rex.RX push rcrb push sbb (bad) or idivb test xchg mov movzwl imul rex.WB out fs in repnz movslq add rex.RXB test rex.XB out rex.W mov pop mov fwait stc xlat iret (bad) jno (bad) (bad) lahf mov jmp sbb pop sbb cli (bad) (bad) nop xchg (bad) jno fwait add mov xlat movsl addl cmp jge hlt jne push in xor cli (bad) ja jmp callq mov addl jo je hlt xchg out (bad) repnz hlt ss pop in mov lea shrb pop mov mov bswap (bad) stos push push add mov xor sbb jmp pushfq pushfq in rcrb xchg pop jbe or mov (bad) je cmc (bad) xchg (bad) (bad) pushfq mov pushq pop loope sub and mov xchg (bad) jbe add shrl add js cltd push (bad) je push xchg (bad) (bad) push rex.X (bad) cmp decb je int (bad) rorl jne rex.R fisubl push sub xor mov imul sub imul add mov lock mov hlt je scas (bad) movabs (bad) add and lods fsubr mov sub or mov jl (bad) sbb cmp xor (bad) jb (bad) jb enterq iret pop mov outsl ss fnop in pop jmp cmp mov or fild cmc cmc mov je roll fiadd mov rex.W xchg push ss xchg (bad) xor mov sub lock rex gs sub rex.WRX xchg mov (bad) sti movslq sbb icebp mov out (bad) rcll (bad) xchg retq jmp mov adc (bad) lret jne scas sbb pop pop (bad) movslq jle rex.B mov adc push (bad) ja (bad) loopne je popfq lea hlt xchg pop insb insb (bad) popfq rolb and sbb xchg (bad) sub jno mov cmp jne jrcxz fidivr mov insb loopne clc push (bad) stos cmpsl sbb (bad) and jb rex.WX jo out (bad) cwtl xor lock std mov xchg (bad) xchg icebp shl cld or jge lret adc sti gs jae cmp or cwtl adc cltd xor (bad) cld cmp or out movabs rex.B imul rex.R stos shrb (bad) rorb ja (bad) nop jnp clc (bad) xchg je cmc fmuls jne (bad) movabs fistpll add sub test (bad) ror sub adc rex.WRXB rex.WB outsb loopne and mov callq gs mov pushfq (bad) cmc lock sarb mov add int fwait xor repz pop pushq cmp (bad) (bad) pop cmc movslq (bad) cmp insl cmc adc sbb fcom clc rol add out rex.XB int jl mov outsl adc (bad) sti sub sbb pop rex.RXB add jno or mov xchg mov jg rex.W xor test jne (bad) adc lods imull mov jmpq rcrl jmp insl nop out adc mov and mov lock push hlt fwait mov (bad) jne mov jmpq (bad) int3 add in rex.XB (bad) pcmpeqw jae cld pop rex.RB (bad) callq rex.WXB jp,pt rolb hlt cmp jp rolb iret pushq xchg (bad) out iret mov test (bad) xchg icebp fs mov or cmc jne cmc lock test fs lock enterq std popfq cli mov enterq repnz lock clc enterq nop in lea out shl xlat jo (bad) jns test (bad) mov xchg (bad) rclb movabs test ja mov xor ror notl paddq rex.WR rcl and outsl pop fs pushq sbb xlat and xchg rex.XB repz ror movabs js cs pop cmp fstps or mov jno and cmp shrb lret or lock xor rex.RB movl rex.B pop (bad) lret rex.RX push insl pop rex.WB xchg faddp sti (bad) js and lock add sbb rex.WRB and mov mov add push add xchg jne movslq xor mov adc xor pushfq rex.RX adc retq jge js sub (bad) mov sub rex.R jg (bad) ja (bad) fistpll xor retq jge rex.X jle in rex.WX callq retq fwait adc jne push push stos movslq movabs mov push adc xchg pop jae out fldl sub icebp add push add int (bad) scas xchg adc jb jle (bad) rol mov mov jmp fimull (bad) movabs add test lock xor push fldcw push lock ja add (bad) or lea outsl xlat fsts xchg movabs (bad) stos std ficoml int3 popq rorl add loop fwait hlt loop cltd mul or cmp nop jp (bad) push rex.WRXB movsb add divb test (bad) (bad) xor repz (bad) std jl (bad) push jbe jl or jo adc std fneni(8087 mov cmc (bad) jg jne retq cmpl add jp (bad) movabs outsl rex.XB sbb sahf repnz xchg add cmp test ja test or sbb in fimul xor (bad) cmp jp fs adc xchg jae mov add push pushfq jmp out mov subb jmpq idivl (bad) mov jno (bad) (bad) rex.WRB test in lret (bad) (bad) jle insb (bad) lods (bad) cwtl rex.XB or test (bad) je jrcxz jmpq adc fdivl mov pushq adc or (bad) push fidivr fiaddl rex.WR out and xchg stc pop xor and push (bad) (bad) adc sbb in push jnp jo mov jl test push div movabs rex.WRXB (bad) movabs jnp xor cwtl or sbb callq movabs movsl xchg retq add and (bad) mov sarb rol pushfq mov adc or notb fist pushq xlat cld or cmc mov (bad) sbb (bad) repz (bad) test in mov sbb xchg test test movsb sbb (bad) and add adc sar movslq rex.R data16 adc (bad) sarl sub (bad) je out (bad) xchg (bad) lret xor (bad) lods cld xor sub or add icebp (bad) (bad) (bad) repnz pop push (bad) je mov lock out insb rex.WR (bad) insb rex.XB insl mov pop popfq sbb rolb rorb sbb cwtl xor push jo xor in sub (bad) sbb xor sti sub stos leaveq (bad) cs xor rex.WB rcl (bad) cmp xchg xor jne (bad) mov cmp xchg adc clc and (bad) pushq lret (bad) lock imul iret in decl add sbb (bad) ss xchg add adc adcl andb add sbb fisttpl sbb retq xor lock rex.B out roll and (bad) and add imul xor (bad) (bad) movslq rex.WRB mov outsl hlt fsts int3 (bad) (bad) fisttpl xchg mov add sub (bad) mov sbb nop hlt rex.XB (bad) iret enterq rex.WR jne mov ss rol xlat cmp xlat xchg enterq (bad) xor js stos cmp jo mov mov xor and neg jae rex.WRX movabs loopne mov sub fisttpl movabs cmp xchg callq (bad) or add xchg cmp lods mov jle cld mov mov cmp mov movsb cwtl rex.WB test pushq or xor rex.WRX test seta movabs je (bad) insb jno rcrl sub (bad) mov xor jrcxz push cmp and mov mov (bad) rcr movsb xchg nop or movabs mov (bad) movabs lret (bad) jns mov testb mov rex.WR add bnd gs jne sub xchg lods movabs (bad) pop movabs sub and pop (bad) (bad) jnp mov (bad) rex.W push rolb jle cmp (bad) or xlat xchg std mov retq mov rex.X jg nop out cwtl ds xlat mov hlt (bad) add cltd jo movabs out mov (bad) fiadd xchg rex.WR mov movabs xlat xchg loop xchg ss cwtl jae xor xlat add (bad) (bad) xor (bad) pop xchg xor push xchg cmp push fmuls push int3 xor cwtl mov mov pop mov (bad) (bad) (bad) (bad) (bad) sti (bad) (bad) out test mov mov rex.WRB rcrl out cmp (bad) sub jne icebp push push int3 (bad) xor (bad) (bad) enterq rex.XB adc add or (bad) jp out mov imul sbb or fcomip or rcr add jnp mov test xlat push add (bad) mulb enterq (bad) lock cmp fnop sbb enterq (bad) (bad) push cmp ficomp out std mov (bad) ss (bad) push rex.WXB in (bad) insl xlat jne pop lock rex.RXB stc (bad) (bad) adc movabs mov xchg movsl (bad) (bad) sbb (bad) push loope jmpq or lods outsb icebp addr32 cs xor outsb out jne (bad) cs jg and leaveq jle lahf (bad) (bad) mov sahf mov movabs js ja callq cmc mov (bad) xlat negl sbb adc sub movabs in lock or movsb callq icebp add lret cmp sbb and (bad) add (bad) sub js xor repnz imul loop (bad) add adc pushfq xor movabs (bad) mov sbb loop fdivl push rex.WB or je push je sbb xchg rex.WR pushq or fucomi mov clc jmpq hlt adc jmpq hlt in (bad) jp xchg fcmovb hlt and xor lret (bad) (bad) and notl sbb mov lock out rex.XB rex.XB shrl (bad) (bad) or xchg and mov mov jge out jg add or in xchg pop (bad) out in insb mov mov jle adc jb add xchg pushq test outsl jrcxz mov sbb adc in pop rex.WR and ja (bad) jns cmp movabs fcmovbe mov mov or out lret lea mov or xchg xor lock retq xchg nop ja push divb mov (bad) rex.RX jns xchg rex.WX mov or mov rex.WR xchg (bad) fwait cmp mov pop and mov adc and (bad) mov rolb es fs xor imul lock jne pop rex.WR push cwtl (bad) int jne jno cmp or hlt in xchg movabs push out pushfq (bad) (bad) push cmc callq shll outsl sub mov rex.WRXB lcall rcrb paddb xchg xchg (bad) nop cltd movslq fsub (bad) xor (bad) sti (bad) mulb push rex rex.RB cs mov in sub outsb add ja incb lods repz int movabs callq xor cmpsb stc ja scas push cs (bad) (bad) xlat pop xor (bad) shl stos rex.X idivl clc pop movabs cwtl rorl scas cmp divl fcoms fildll and jge mov cmp movsb (bad) hlt jne (bad) lock pop (bad) nop loopne ja callq (bad) adc fcoml adc fwait xchg int3 in callq add andb iret adc repnz adc add (bad) push lea cmp mov hlt mov xchg loop,pt xor shr adc vpsrlq out (bad) add and cmp rex.WRXB mov rex.WRXB fsubrl cwtl push in out repnz loope xchg and imul lahf (bad) sarl pop mov mov (bad) fadds iret mov add (bad) repz nop push (bad) test subb xchg mov rex.X sarl rorb ja rex.RXB out sahf rex jne or mov (bad) iret and callq xchg ja test xchg shrl jg outsl rex.WX (bad) hlt sbb xor negb fsubp (bad) (bad) je retq xchg (bad) add rex.XB and push sbb ds (bad) mov push or nop (bad) (bad) jge xor and insb mov xchg jb (bad) imul cs in in jne movabs je sbb jge (bad) enterq mov rex.WRX outsl jae test xchg or rclb repnz (bad) (bad) iret (bad) xchg and lahf jo pop rex.WXB jae push add retq pop (bad) stos je jl and outsb je xlat outsb or xchg push movabs pop (bad) shll mov (bad) xor mov lods jno (bad) callq lods and rorl xchg (bad) push nop cmpsl scas hlt sub jmp pop mov or push adc lret in int rex.W or rex.WB mov cmp sbb sbb lret fmul xchg lret pop xchg (bad) cmp rex.WRXB (bad) push cmpsl nop (bad) or sbb icebp test std mov add rex.RXB nop sahf jne mov je add fincstp rex.XB adc cmpsl repz pop cmp (bad) (bad) rex.W pushfq movabs repnz nop (bad) (bad) rorb add or (bad) (bad) out (bad) xor fwait pushq (bad) fwait mov jnp mov sbb (bad) (bad) shrb adc in movsb xlat movl push pop (bad) jns cmp outsl jns movsb sbb fdivs test (bad) int3 sbb outsl mov loop xchg (bad) pushq xor mov repnz in cltd push cmpsb scas mov sub push add mov jmp stc xor pop repz rex.WX jb rex.WRX push addr32 (bad) repz insb rol adc xor xchg jne or in jg mov andb andl rex.B std and mov rorb (bad) sbb rcll sbb sbb iret lock rex.WRB fwait xchg lret rex.RB rex.WRX ja sti xlat fisttp rex.RB lock mov rorb sbb sub cltd rclb rex.WRB jmpq sahf movslq movabs adc cmc cltd mov xor movabs test mov xor retq movabs rex (bad) enterq sbb repz jp rex.X andl adc xchg repz (bad) mov xchg int3 pop push pushq loopne pop sbb (bad) xchg jp sti lods push hlt rex.RXB rorl lock cmp push repnz push test (bad) push cmp adc xchg sbb (bad) data16 cmp ja rex.WRXB push push or sub sub retq fs movsb cld (bad) fadd mov cmp xorl (bad) lret out rolb movsl imul rex.RXB int pop cmpsb mov jne fiadd lods nop or test mov jrcxz pop and push in mov test mov xchg retq callq push pop cmp clc pushq or scas mov adc movslq (bad) adc jne (bad) lock fs mov rex.XB xchg iret hlt or in lock (bad) mov and (bad) lods add add movabs fsts pop idivb clc add (bad) outsb push hlt add rex.WR mov int3 or repnz jne mov rex.WX and xchg out xchg popfq add mov decb jo retq pushq fwait jb rcrl mov outsb bnd (bad) out adc rex.RXB icebp jne or rex.XB push and (bad) cmp loope cld or (bad) push jo rex.WR fwait jl push mul fdivs ja adc sub insb lret rex.WB hlt rex.R or sti (bad) push xchg sbb rex.RXB (bad) rex.W mov sbb cmp push xchg retq por loopne (bad) (bad) mov fsubs jg (bad) jae mov mov movabs jno and lret addl in mov vxorps pop sbb js in test or (bad) xor (bad) (bad) and (bad) pop (bad) cwtl mov int3 xchg and imulb mov push sbb clc mov movb mov adc jle mov push lret mov xchg pushq (bad) adc cld mov xor fwait in js or jp stos cmpsb add callq ss jl xchg rex.R mov push mov (bad) push rex.WR jmpq mov jl add insl fcmovne add in (bad) pop iret int3 jne rex.R js (bad) adc popfq adc mov rex.RB xchg movabs in (bad) jae rex.RXB lock cmp movsl out or xorl (bad) rol (bad) xchg cmc fwait (bad) and repnz paddw retq mov cltd fs xchg cwtl mov rex.WXB test nop sub mov pop pushq cmc push mov mov xorb add jbe and (bad) push mov and sbb or (bad) (bad) mov lahf in add add je scas (bad) out xor hlt test out (bad) test (bad) (bad) rsqrtps callq mov mov (bad) pushq pushq (bad) cld sub lods sbb mov adc (bad) in cld (bad) mov push mov adc in jno and and rolb and enterq adc or (bad) sbb outsb or rex.WRB xchg cmp pop addr32 addr32 (bad) xchg lock mov pop xchg sbb scas sub xor adc (bad) es mov (bad) rex.WR cmp scas cmpsb (bad) mov rex.R add lahf and (bad) jb rex.RX jne out fisttp (bad) insb test and pop movabs xchg jrcxz (bad) add xlat mov jrcxz xchg jnp cmp fmull xchg xor and (bad) fstl rex.RX shl (bad) (bad) int3 push xor (bad) sbb or andb (bad) shrl mov rex.RX rex.X xchg rex adc sbb adc push movslq and pop sbb fcoml jo mov sub add jmp fs imul lret (bad) xlat scas mov and add callq lgs hlt cmp add sub int3 sub clc (bad) jnp pop mov jne mov rex.RXB movabs incl (bad) mov imul xchg rex.RB mov (bad) cmp mov sbb adc mov pop rex.RB jne scas rex.X addr32 push test data16 pop repz sbb loop xor add repnz data16 cmc stc jbe (bad) cmp cmp fwait nop (bad) xor and out xchg sub xchg (bad) je or out or cmp push (bad) or out (bad) repz movabs and jnp cmp mov data16 sahf rex.WR out out push add je pushq xchg (bad) jle mov xchg jbe sahf insl (bad) out adc xchg fld1 rolb sbb testb sbb (bad) fs loop cltd adc out cmp or or fcmovnbe push rex.WRB pushq pop xchg add and (bad) push repz xchg xor seta rcrb loop cmp add and mov rcl (bad) stc push (bad) (bad) hlt sub cmpsl push sbb adc test jge or pop xchg push (bad) xchg xor xchg pop or add scas outsl fistpll or rex.WR and callq rorl mov or ss mov fs callq rex.RB (bad) sub and imul loop in cli out jne rcrb (bad) push jns xchg movabs fcompl rex.WX fwait mov (bad) mov push jmpq repz movabs iret fwait xchg in retq fdivl add stos xchg lret nopl divb and jle mov (bad) xorb out in mov mov mov and and (bad) divb (bad) (bad) stos jne je insl jg (bad) jrcxz sbb jl adc cwtl movabs add (bad) int notl out out fcompl sub or xchg imul (bad) (bad) leaveq pushq (bad) sub push mov add pushq int3 adc andl insl or repnz popfq movabs cmpsl iret lods and retq mov (bad) mov cld and jno movsb sti adc (bad) mov mov stos add (bad) jb (bad) rex.R insl xchg or jl or mov out cmp sbbb (bad) jnp or sub xchg movslq nop (bad) fwait data16 iret cmp mov jp cmpsb cmpsb mov out sub lea stos je sub xchg stos pop test scas xchg movsl mov adc sbb jno cmp jmp and sbb pop fldl xor push (bad) add add xor mov mov rex.RX fs sub popfq add push pushq cmp lock sti popq push popfq pop xchg in adc mov callq (bad) add xor notb jae outsl jg or ss xchg out or xor (bad) and add sbb mov (bad) out fbld jae (bad) and movabs (bad) movsl rorb mov rex.RX repnz push jno sti std add add sbb adc fnstcw sbb (bad) mov mov xchg fcoml or rex.RX pushfq lahf data16 (bad) stos movabs (bad) mov xchg test je sub fstp cltd (bad) shrb adc gs cld (bad) mov xor gs (bad) rex.WB js sub pop icebp in jmpq out rex.RXB or or pop xchg pushq mull xchg insb nop movl rex.RXB rex.WR faddp jg (bad) (bad) cwtl xchg (bad) (bad) mov mov jae es mov lock sbb add mov (bad) push xchg pop test mov or movabs xchg add rex.XB pause movslq pop xor enterq (bad) (bad) (bad) sub gs mov (bad) push imul je loop jle pushw xor cmp jne rex.WXB mov mov fsts mov sub or fwait insb adc jns int3 xor movabs pushfq clc and mov xchg loopne fidivrl icebp fs xchg iret mov cltd cmp hlt repz (bad) jrcxz adc adc or add adc add insb leaveq cmp xlat push (bad) mov mov and fwait jno ja scas sahf (bad) xchg (bad) movabs sbb sbb shl adc and sub jne and xor mull adc pop pop jmpq cmp lods (bad) hlt jno shll push and push sub imul sub pop je jle jle std xchg (bad) hlt clc cs (bad) sub pushfq cld (bad) insl (bad) leaveq lock sbb sar (bad) je int3 xchg in or (bad) int add fidivr std (bad) outsb push (bad) scas push xchg xor mov xor (bad) jno mov cmpsb mov stc and in stos in adc iret add xorl (bad) pushq sub leaveq and movabs (bad) rex.X (bad) (bad) and xor xor adc loopne and mov (bad) ss lret fs leaveq imul xlat repnz and jmpq sar rex.WRX cmp or (bad) (bad) and sbb rex.WRB adc jo and push icebp sbb retq test adc clc loope icebp lret (bad) adc movabs retq idivl adc in xor adc mov cmp mov fiaddl mov paddusb fdiv xchg rcl enterq in jno es (bad) push sbb (bad) mov add jae adc mov rex.W scas rex.W leaveq mov jno xchg fnstenv in rex.WB repz sub mov cltd cld sbb adc cs (bad) or lahf jno mov out or movabs or iret test icebp adc hlt fcom (bad) jbe rex.WXB rex.RX nop loop movabs (bad) mov cmpsb adc cltd in xor xchg adc xor repnz cmc out jrcxz and pop in (bad) jl adc loop (bad) test imul cmp (bad) js test add repnz cmp rex.R rex.WRXB mov mov sbb push pushq lods rex.B rex.RXB repnz sub xor (bad) frstor sbb or sbb xlat (bad) (bad) stos pop (bad) push add fcmovu adc stos imull pop sbb (bad) movsb sbb adc rex.XB (bad) push xchg pushq or (bad) mov cs rex.RB push (bad) hlt test push mov movslq pop iret rex.WX mov xchg rclb lea out jnp (bad) test scas xor cmp jns mov cmp jae mov mov sbb jrcxz xchg in sbb fs or (bad) (bad) adc push cltd (bad) and jge adc mov (bad) movabs xchg pushq jne loop mov xor (bad) or (bad) push xchg mov jbe jbe imul or rex.WRX std jo imulb repnz rex.WB repnz cmpsl (bad) sbb jl (bad) loopne repnz jl fldcw adc xor and (bad) and int3 mov (bad) enterq (bad) cs std mov adc or rex.RB rex.X lcall test xor (bad) fldenv in and sub push pop scas or (bad) pop (bad) jle cmp test xchg sti add rex.WRB sub fisub and out jrcxz and sbbl pop rex.WRXB or rcll mov add adc int3 (bad) sbb callq iret jne ja (bad) cmpsb add pushq (bad) xor add loope sarl mov cs rex.XB mov xchg sbb retq pop mov fs (bad) callq rex.RX ficom adc repnz adc push push pop jne (bad) je (bad) (bad) (bad) retq int rex.WR add movabs sub adc mov and xchg push lods sbb (bad) fnstcw sub sbb cmp xor jrcxz int3 sarb movabs (bad) sub cmpl (bad) push jne and movsb shll xor sbbl xchg pushq movnti xchg cld outsl lock pop jbe (bad) sbb mov pop mov lock cld (bad) mov sbb cmp adc sbb add ss xlat adc pushq (bad) push adc or (bad) outsl (bad) cltd lcall (bad) xchg repz mov imul jnp lods imul int3 sbb imul (bad) jne mov rex.WR and rex.RB and add jge enterq loope pop imul cmp int3 rorb adc mov out pushq xchg or pop fwait push adc retq (bad) push xor (bad) scas (bad) rex.W and imul xor in (bad) gs hlt mov adc adc xchg add adc mov or mov and sub and hlt rex.W jo pushq cwtl (bad) sbb lods mov mov cmp movsl or (bad) mov mov xchg repnz fsubr pop retq adc (bad) cmp xchg je insl xor or orb rcll (bad) or adc stc pop push jo (bad) push rcr shl (bad) int3 test xlat rex.RX or push jmpq jg lods clc mov (bad) div xchg pop rcrl mov adc ja adc adc pushq jbe rcrl xchg scas in add rex.R out xchg pushq cmp xchg xlat lods add (bad) mov out fimull rex.RX rex.RX ds je notb mov jo add jo insl (bad) insb callq (bad) stos xchg fs rex.R fdivl and hlt lods xor fidivl or xchg or (bad) or (bad) (bad) out rex.WRB fidivrl rex.WB (bad) sub push (bad) (bad) adc push mov in movabs int3 cmpsl (bad) (bad) (bad) movabs clc cs sbbl (bad) mov add lret stos mov and xor (bad) in rex.WRB add jmp imul rex.WR sub xchg vmovups idivb xchg mov sarb in loopne fdivr xor add bnd imul mov rcl xor mov rex.WXB imul jno jne ja cmp test (bad) int mov fisttpl movabs (bad) jae rex.WRX (bad) push adc xlat rex.WXB fs adc xchg rex.XB add rex.WRB mov xchg (bad) sub jl cld xor cmp nop (bad) repnz xchg add add mov and (bad) sbb cmpsl jo and push cmp xchg fstl sbb xor (bad) pushfq push hlt mov loope cmpsb xchg xor mov rex.WR jae xchg push mov push and pop (bad) fstpt mov inc movabs rex.WB and in imul movabs add cmp test es icebp xchg stos (bad) pop push bnd cmp (bad) js (bad) mov cmp (bad) cmp (bad) push adcb mov (bad) jae fbstp jo (bad) pop xorb fwait ja xchg loopne mov sarb movsb out add and (bad) movabs movabs repnz add movabs rex.XB adc mov enterq int3 ja (bad) jge lret (bad) rex.WR or cmp and outsl insb in fmull cmc repnz movabs pop (bad) add lret xorl (bad) rex.WRXB sub test xchg sub or loopne mov mov rex repz stos rex cmpsl jo lret mov ja test or insl add loop test (bad) mul xchg (bad) jne divl push (bad) retq loopne rcrb (bad) mov mov out pop pop lea jns,pt jmpq iret movabs (bad) es push movntq test addb jno add (bad) mov mov or push or stc add or and js outsb fsubs xchg mov xor sbb jp xchg retq (bad) xor rex.XB stc (bad) xchg sbb (bad) sbb cld rolb sub pop repz outsb pushq in pop andb out adc int3 add push notl mov out repz mov pop jne,pn (bad) in lods pushq movsb test adc xchg or pop (bad) pop pushq cmc faddl std je push and (bad) push ss fdivs add xchg adc int3 xchg sbb negb (bad) and mov (bad) sub xchg cmpsb insl cmp add sub pop mov cmp xchg (bad) pushq cmp outsb cmp out or shrl mov sbb movabs sbb mov (bad) retq nop cmp test rex.WR xchg lret fwait sub imul xchg sbb push jmpq fdivl xchg mov mov or fist ja hlt push (bad) sub in (bad) cmp out (bad) cmp mulb rcrb decl retq or rex.X xchg retq mov fstpt jae loop lret jrcxz outsb xchg (bad) xchg (bad) adc (bad) movabs stos or sub ds push (bad) int3 pop movabs add mov rex.RXB rex.WR (bad) (bad) sub cmp and and (bad) jno callq add add xchg mov fcoml adc adc xor mov jrcxz (bad) mov jp sbb (bad) in jne xor in (bad) sub (bad) retq push mov mov (bad) rex.RB jnp repnz jne pushq (bad) (bad) cmp and mov fdivrs or rex.B push xchg adc callq adcl movabs rex.RB xchg xchg jb retq (bad) out xchg mov adc add in jl mov (bad) pop jmp add adc stc imul iret (bad) pop mov fistp adc movabs (bad) jl adc addr32 (bad) imul rex.B fs jb fwait and es rex.X or rolb int pop rex.WB mov xor movabs cmp cmp pushfq out add ljmp mov sub and js fwait cld (bad) lock mov jrcxz cld outsb push lret hlt sub mov add rcll jp and shlb sbb int3 mov movabs xlat jp cmpl rex.WX ja cmp sub rex or mov jne rex.WRX cmp jo pop (bad) sti adc outsl mov pop cmpsl idivl mov fwait (bad) sbb pop repnz sbb and rex.WR xchg test (bad) xor xchg sbb mov mov rex.X test pop sbb jle je xchg push (bad) pop (bad) and popfq out retq (bad) (bad) xor (bad) jmpq sbb insl (bad) cltd callq (bad) fiadd sub loop,pn pop jl gs (bad) mov mov insl (bad) (bad) or adc (bad) movabs in (bad) mov pop cmc jbe push cmc testb push jae (bad) mov (bad) movabs push cmp scas int3 jne mov rex.WR fistpl mov add sbb sub or add or push nop (bad) test and pop addr32 test mov movsb movabs mov xchg jo rcr rex.RX cs lret add test mov rex.W iret fbstp push rex.WXB repz mov adc xor (bad) cli setp add rex.RXB in movsb adc add jrcxz (bad) rex.RB mov cmc fsubs testl cmp cltd and jo scas enterq pushfq je,pt cmpsl movabs xchg movabs rex.WX (bad) enterq pop xchg add (bad) test fistp (bad) rex.W add adc adcb (bad) (bad) mov vmovaps clc mov sub imul test sbb lods (bad) lock xor repz out (bad) rex.WRXB rex.XB push popfq (bad) xor push sbb or pop fwait cmp rex.WRXB rex.WRB rex.XB movabs (bad) (bad) rex.XB sti and not lea jl fsubr (bad) enterq pop mov jrcxz iret adc jne jl xor test out jg lock and movabs mov xlat (bad) mov (bad) sbb jo or xlat rorl in cmc push lahf and (bad) and and sub sub jge movabs out pushq (bad) rex.WRB add js mov jne sbb callq (bad) scas cmp mov adc or hlt jbe adc stc jno rcr fisub or sbb jg test imul setg jrcxz test fistpll out sbb sub xor xor out sub (bad) rex.WXB cmp or mov xchg rex.WRB pushq movabs jp push xor (bad) mov xchg xor or (bad) (bad) sub mov and cmpsb xor sbb fsubrl add retq xor (bad) rex.XB pop push repnz (bad) je sub (bad) icebp mov xchg out add (bad) (bad) jne in adc add rex.RB add mov sbb sub imul mov (bad) sub or add jge (bad) movl fldl test add jmp movabs xchg xor imul sbb imul (bad) shr callq or mov mov nop jnp not iret (bad) mov cmp push hlt movabs jae cmc xchg (bad) stc mov test or xchg (bad) fsub adc stc lret hlt iret shl sbb (bad) cmc (bad) fsubs jbe std movabs subb jne repnz xor mov mov xor jb xor push out out pop or mov rcrb (bad) enterq add pop es push add or xchg jno enterq shr loopne sbbb and cmc (bad) sbb xor rex.WB jp pop xchg mov movabs cmp adc movslq in pop (bad) push xor addr32 enterq popfq cmc rex cmpsl (bad) adcl add cmpl (bad) pushq packuswb js push cmpsl pop test add sbb (bad) fadds mul (bad) cmp (bad) fdivs retq cmp orb rex.WRX adcl push cmpsl add adc out push int3 mov popfq xor jmp mov rex.WR cli in lods lret or leaveq rex.R fwait sub xor mov pop jl pop rex.WRB mov rclb jle mov sub xor rex.RB fs popfq push (bad) and push rex.WR fcmovbe push hlt (bad) loop bnd sbb (bad) add bswap (bad) movabs icebp enterq in (bad) (bad) mov repz adc mov mov add rex.XB int3 and (bad) cmp and mov stos (bad) rex.R (bad) push fnsave sbb jne lock adc sub roll stos callq notb add hlt out jbe (bad) jne in loopne push imul test hlt repz mov cmpsl (bad) add rex.WRX lods xchg stos (bad) mov mov xor xor ja loopne xor or (bad) (bad) (bad) int cmpsb (bad) cs cmpsl jmp out jne in jmpq nop mov repnz add mov insl sar jge or subl mov (bad) callq in sub scas and (bad) jno (bad) adc sbb (bad) xchg push sbb repnz adc cltd xor adc sbb insl and hlt movabs pop mulb or test and sbb lods jno retq add (bad) fdivr rex.WR xchg (bad) repz cwtl mov sub (bad) out rex.X (bad) loop retq jp add sbb xor add cmp (bad) lods sub ficompl in movabs in lea jrcxz,pt (bad) adc vpunpckldq cli rclb xlat enterq rex.W in shrl in mov sarl jo repz sub lods mov mov rex.WX or xor (bad) sub lods lock mov mov enterq add xchg movslq rex.X xor test out in sbb mov push cmc rex.WR sub sbb in adc sbb cmpsl sub in (bad) imul nop xchg and scas pushq pop cltd cmp pushfq (bad) mov cmp (bad) cmp movsb jo or xchg jmpq (bad) movsl mov xchg fistpl icebp jnp (bad) ja push mov and rex.R rex.X lods and jns (bad) div pop addb lods rex.R push jmp rex.WRX loope div jne imul ror (bad) add sub retq or rex.WXB insl (bad) addr32 outsb (bad) and (bad) xchg (bad) iret jne retq mov maskmovq divl or fidivl add rex.WRXB data16 xchg pushq and and cld in jbe cmp add mov pushq test mov mov ja rex.WB (bad) (bad) mov js lret xchg fwait loopne or fs adc cs pushq push sbb test (bad) enterq sub jne sbb rex.WRX out rex.W cmp fistpl testb sub xor mov movslq mov and out cmp add (bad) (bad) sub mov mov sbb jno sahf (bad) iret sub sub callq divb movsb rclb lods jno rex xlat test (bad) rex.WRXB pop pushq xchg insl xchg movslq mov (bad) xor sub mov (bad) in pushfq mov jne (bad) sbb or pop icebp in lahf (bad) mov add fadds rex.WRX ja fmull jmpq jp mov jmpq sti xor (bad) (bad) jno test fisubr negl mov callq int3 out imul (bad) in loopne add cmpsl (bad) neg mov mov cmp sahf data16 (bad) jbe clc and retq rex.W jl in cltd jns out (bad) rcrb stos movslq (bad) xchg xor push fdivrp xchg nop (bad) add mov stos (bad) push xchg xlat (bad) imul push jl adc xchg outsl fmul adc imul fcompl (bad) mov xchg jno sub (bad) add ror mov adc frstor adc mov (bad) in rex.WXB or adc (bad) rex.XB fwait (bad) test std jp rex.WRX imul xor pop rcl movslq stos fsubrs popq ds xchg rex.WB jns idivl (bad) rex.WX cmpb pushq rex.WRX in lahf sbb jb (bad) cmp jmpq mov loop (bad) in xlat adc xor add (bad) (bad) (bad) (bad) jae adc and iret mov jp rex.R mov xchg fsubs pop sub mov (bad) movabs rex.WRB ss jne stc rex.WR (bad) pop pop xorb adc jrcxz (bad) xor push cmpl hlt (bad) rex.WX xchg (bad) rcl fidiv sub rex.RB and outsl and sarb in xchg push jo imul rex.WRB (bad) cmpsl scas add mov mov (bad) cmp rex.WRB rex.R stc mov adc mov push jge mov xor (bad) idiv add sub (bad) mov cmpsl push xchg hlt xchg (bad) mov add sub nop cmp cmp out pop jrcxz repnz rex.RXB adc mov and je (bad) xchg mov fidivr adcl xlat repnz andl xchg pop cmc sbb push or (bad) out jae jnp jg enterq retq out add in mov in mov loopne cmp adc hlt test repz xchg or movsb retq imul retq xor hlt mov cmpsb nop xchg sub xchg (bad) add mov (bad) rcrb push sub mov sub int3 sbb or push mov cmp test add fsts sti cs rex loop mov push sub (bad) rex.WR sub or lods vzeroall js (bad) rex.RX rclb or cmp rex.WR fisttpll pop mov jmpq insl enterq (bad) (bad) notl (bad) mov sub add mov pop (bad) (bad) int cmp sbb sti (bad) add (bad) xor notb (bad) imul (bad) push sub cwtl or mov or push mov test jl rol clc jne es (bad) jge or sbb sbb repnz and loopne cmp and out lea enterq mov mulb jae mov rex.XB and leaveq (bad) test and scas (bad) xchg and (bad) jnp std cmp sub jno outsb rex.R mov fmull mov lret ja (bad) mov fmull mov xchg addr32 xlat add mov mov rex.XB orb out xor add sub cwtl or xchg mov popq (bad) add push callq (bad) fdivp (bad) (bad) jno jae or stos jg add rex.RXB mull xchg push rex.B lock movsb (bad) mov jno jge xchg or ds ficoml rex.WRXB fs xor data16 enterq data16 pop shlb mov outsb mov jb jp test mov sahf hlt (bad) jno add rex.RXB xor movsb or idiv push (bad) movsb js (bad) add xor rex.XB sbb movabs lock jbe jo jrcxz ja add iret mov test mov scas pop movabs mov jno (bad) leaveq cltd mov int3 (bad) fdivs addr32 mov scas (bad) rex.RXB movsl nop (bad) and mov cmp mov xchg mov mov pop cwtl and lret mov test mulb mov retq std rex.WRX and int3 jrcxz repnz lret out rex.XB andl add jno add pop in push mov or hlt (bad) jns mov (bad) (bad) jne push clc (bad) xor mov cmc callq fwait xor movabs rex jge mov sbbb loopne cld push movabs movabs rex.WB stos or mov cmp sub push jl adc lock mov rex.WXB (bad) rorl xlat mov sahf xchg add sbbl (bad) movabs jge adc (bad) (bad) mul enterq loop jne mov rol loop or mov out xlat and sbb pop sbb rex.RX sub cld cli pushfq add retq push es lods xchg jne mov adc sbb shlb or adcl add or sbb addb pop imul mov or in pop cmpsb add xlat mov idivb lock xchg cld hlt adc add insl data16 add mov or xchg movabs (bad) cltd jne sbb fstpt push mov or (bad) (bad) jb out nop out xchg insb jne js rex.RXB rcr not in add sub repnz xor xchg ss xor retq jne (bad) in mov hlt add (bad) pop es xchg push or sbb xchg sub xchg jrcxz insb rex.WRX pop rol cmc rex.WRXB scas jbe mov mov mov or (bad) xchg jne xchg out (bad) pop mov jmp sarb push jbe or push mov add (bad) divb rex.WR je fwait (bad) shr jbe,pn or rex.WRB mov push adc (bad) add scas lods (bad) xor push sbb (bad) rex.X rex.WRXB insb sub fsubrs lea sti hlt ror out outsl ficom (bad) (bad) jo jbe andl scas lret mov cltd mov jne (bad) push imul cmc cmp in cli cmp vmovmskps cs (bad) (bad) fmuls jns leaveq loopne mov mov fcompl (bad) jae xchg mov cmp (bad) nop retq rcll fs rcrb insl je (bad) mov (bad) cmc cltd fbstp or jno jrcxz mov (bad) xor lahf ja and (bad) enterq enterq loopne adc test lock xlat icebp pop out push mov rclb rcll (bad) shlb or leaveq mov (bad) rclb (bad) xlat in je out xchg nop lods xchg and insb cmp (bad) jne (bad) idivl cmpsb (bad) push in test (bad) (bad) xor loopne callq ffree or retq stos (bad) mov adc add xchg sbb in andl (bad) or push repnz rex.WB (bad) xchg loopne (bad) xchg mov cs xlat stos xchg pop negl adc jno and mov movabs (bad) push (bad) mov xlat (bad) (bad) add xchg (bad) pushfq sbb rcrl add ds xorb pop push or addr32 mov in data16 in (bad) xlat jrcxz mov cli jle (bad) xchg cmp add mul movabs test xchg push pushq cmpsb xlat xor mov retq mov mov push lock (bad) in lock fsub std iret out rclb sbb int3 xchg push mov repnz ds pop in lret imul mov sub sub (bad) movabs or mov rex.RXB mov loopne rcrb mov loope fadds xor scas mov (bad) cmpsb mov retq mov shrb fidivl mov ficomp rcrb push add jg fwait std stos jno movabs and xor jne jp pop xor loopne add push mov jl mov cltd frstor adc xorb (bad) jnp (bad) jne or cltd sub xchg (bad) or (bad) (bad) add pop mov sbb shll (bad) enterq sti out (bad) je ds pop (bad) mov xchg (bad) pop rex.WRB cmpsb movabs (bad) mov fidiv out xor cmpsl hlt ja jo jl loop pop mov rorl ficompl loop sbb clc adc jle sub cmc pop cmp adc xor xor cmpb xlat xchg pop and lods push and (bad) mov pushq cld rex.RXB sub rex.RB rex.RX add adc mov jo mov rex.RXB adcb pop enterq pop ja or hlt pop (bad) add retq faddl xchg outsb mov fsubs xchg xchg idivb pop movslq sarl int xchg data16 imul lods jnp shlb imul fwait or xchg (bad) (bad) or data16 sbb stos rex.WRB mov rex.WX sub rex.W xlat fld test ja adc mov out adc or cli pushfq or (bad) jno mov or rex.WRB mov mov mov mov mov mov adc and ficomp sbb adc rcrb mov pop mov mov mov retq jmp out cmp (bad) (bad) rex.WXB pop jge lahf es cmp (bad) rex.RXB (bad) (bad) or add in (bad) and (bad) rex.WXB xor lock sub or leaveq jmpq adc ss jl (bad) int3 xchg or and fs mov rex.XB mov retq add rex.RXB in movabs (bad) in rex.RB rex.WRX fwait mov or sti pushq jbe (bad) jno jmpq (bad) add mov jl loope fistpl (bad) mov mov sub out (bad) sub fs push or jl pop jne or sbb rex.R add rex.WRX retq jl xchg (bad) sub lods adc (bad) fdiv (bad) xor cld pop push xchg scas (bad) (bad) int3 cmpsb (bad) movsl and fdivrs mov sub add hlt adc push rex.WR (bad) cltd cltd (bad) mov cld rcrb jb jo xor jne and (bad) jno (bad) adc xor (bad) sub movb int3 push pop mov mov mov sub push (bad) es nop fnop repnz test outsb adc adc shll add rex.WR adc cs leaveq loop lea mov rex.WRX je ja (bad) push fcoms add sbb movsl xchg (bad) rcrb in in (bad) shll jb icebp or (bad) fnstsw faddl js (bad) cli movabs rcl jnp (bad) mov cld lock rex.WXB pop adc xor rex.RB rcll sbb in adc stc pop lods retq pop loope xor lret (bad) jl mov xor or add xchg (bad) sarl ja cmp retq rex.WR add sahf adc xchg data16 sub adc add sbb sub movslq jo stos (bad) rex.RX rex.WR adc sub pop jl outsl (bad) sub sbb rclb rex.WX xor push jno (bad) (bad) xchg fcompl jg hlt je fildl out (bad) rex.XB scas push ss outsl nop jae psllw adc (bad) xchg out xchg retq repz or test (bad) (bad) mov (bad) (bad) cmp mov mov rex (bad) jl icebp imul gs js vsqrtps rclb (bad) icebp std leaveq mov ficom enterq nop (bad) sub (bad) pop pop rex.W gs pop jmp movabs rex.WRX or jo fidivr jne add jrcxz movsl jo js shr mov add movabs loopne mov gs hlt ss (bad) xchg add adc xchg push mov (bad) cld in rex.WRB adc icebp pop pop (bad) adc adc imul mov (bad) nop (bad) jb rex.XB rex.WX imul mov adc outsl es mov xor idiv cmp xchg jne sub xchg rex.WRB (bad) (bad) sbb add lahf jne in or movsl fldl xorb js lods and negb btc in add movabs iret (bad) push fprem xchg pop rex.WR xor mov jne test (bad) out int cmp or jge lahf data16 imul scas cli mov jmp (bad) mov jg (bad) xchg rex.WRB jrcxz or jo hlt add iret rex.RB in insl pop in ja add or or imull roll mov pop mov mov xchg scas jrcxz not push mov pop rex.B adc adc fildll (bad) cmpsl or xor lret xlat (bad) scas (bad) rcrb mov (bad) in add int cmp cmpsb push test add imul xor incl subl sbb cmp (bad) or add in mov (bad) or loop rex.WRB and psrad sbb (bad) xor adc mov (bad) or jno mov fdivrl (bad) add rex.RXB movsb sti push jae add jb or and mov cmp orl rex.RB sar adc enterq (bad) out pcmpgtw xchg retq mov (bad) movabs fwait ss xor fmulp add xchg (bad) xor scas cltd mov mov add and or (bad) fnstenv movzwl mov mov movabs push cmp cmp or adc cld cmp sub cwtl fwait xchg xor hlt (bad) (bad) lock cli (bad) (bad) callq add rex.RXB int3 (bad) (bad) lret retq or pop scas rex.X int3 mov xor xchg out mov (bad) (bad) notb jmp lods pop jl jg xchg (bad) rclb or rex.R nop mov sub retq jge addl and fmul out mov rex.B rex.WRX rex.XB lock imul pop fwait xor jb movslq mov xchg jne (bad) icebp rex.WR int3 jo movabs (bad) xchg test and (bad) (bad) stos adc add pushq add out loop iret rex sub rex.WXB xchg (bad) jnp jno fstpt sub shrl xor ja fsubr or pushfq lods std rorb jne cli clc decl in rol xchg jg fnstcw adc fs repnz mov int3 rex.WR (bad) jge out cmp pop hlt (bad) mov cli adc loope pop (bad) mov mov rex.RB jmp xor add rclb adc cmp and mov int pop adc jle wrmsr (bad) (bad) loopne flds fs hlt pop rex.RX popfq (bad) rex.WB sbb adc cs cld pushfq xor (bad) adc out sub rcrl mov in mov ror or mov cmpl mov (bad) mov (bad) adc jno mov stos and rex.XB jne rex.RB rcrl xchg fprem1 movsb (bad) cwtl xor scas mov nop mov test (bad) xor pushq rex.WX test mov cwtl xchg js jg sarb lock stc (bad) jmpq (bad) mov js (bad) mul stc icebp pop fld out rex.WB rex.R xor (bad) (bad) incb rex.WB (bad) (bad) jbe retq mov movsl add adc mov jnp jno or movl add mov xor or retq idiv fnstenv jmpq rcrl rex.WRXB xchg retq loope stos sti rex.WXB push mov int movabs icebp cs test add mov mov xchg jmpq jb or or (bad) xchg repnz add movsb imul (bad) push jl fistp scas mov adc and jnp or popfq add xchg data16 (bad) jge or jns retq int3 loopne test cltd mov test xchg std mov (bad) testb popfq xor lock adc xchg mov pop (bad) xchg adc clc add mov std rcr enterq jge mov (bad) rcrb cmpsb xchg cmp or rclb rorb outsb movslq gs neg hlt rex.RXB enterq imul add (bad) icebp (bad) cmc movsb rex.RXB xchg (bad) xchg or jns push pop jne in (bad) or (bad) (bad) fadd lods adc movsl jns (bad) scas icebp hlt in jne rex.W data16 fadds (bad) and stos cmp cmp (bad) fsub shrl stos outsl in sub std or and push in cmp iret add (bad) in hlt adc rcll (bad) loope xchg mov rclb or jmpq adc (bad) cmpsl cmp rex sbb (bad) mov (bad) jne (bad) mov (bad) test stos adc cmp sahf mov nop xchg sbb rex clc stos push jle andb and sbb mov callq (bad) mov lret mov lock jo rex.WR rex.WRX loopne rex.WX xor je cmpsl or (bad) mov cli enterq mov (bad) sub (bad) pop (bad) mov movabs popfq rex.WR (bad) ficom mov pop (bad) mov movabs xchg div mov je cli int3 adc mov mov fs mov mov sbb repz rorb stc cmp movslq jmpq mov rex.WRX std add outsl mov fisttp cmp (bad) push (bad) enterq rcr cmove adc shlb movabs lea push rex.WRX rex.WRX cmp lods lret mov lods pop rex.XB loopne std loope and jo ror mov cld (bad) hlt rolb rex.WXB pop retq out (bad) push xor jne add mov (bad) xor insl or mov sbb in lret xor hlt nop (bad) out lock or rex.RX cmp rex.X sbb pop rex.WX add icebp rcrb (bad) push stos insl (bad) cmpsb fs (bad) push stos xor stc add jne je adc pop jmp or (bad) incb jnp negl divb in divb cld iret jne adc (bad) (bad) jbe iret or mov jbe jbe xlat mov rex.XB stos icebp lock fist fisubr (bad) int3 push xchg (bad) subb retq (bad) or xor test mov (bad) and or xor xchg je rex.WXB sbb push out cmp in jne add ss sub and outsb jo xchg incb jne (bad) sbb adc sbb xchg (bad) jmp imul pushq insb jo mov add incb pushq enterq rcll mov (bad) out lahf movabs (bad) mov fnsave insl movslq (bad) (bad) push mov rex.WRX in fs xchg sbb jmp sbb es and or nop shl mov shrb (bad) repz cmc pop jno mov sahf jge ljmp (bad) cmp mov xchg and mov (bad) mov rex.WRB xor ja pop loop rex.RXB or mov push fstpt movabs shll callq addb rex.RXB and fimul (bad) push movabs (bad) callq imul and mov cmp (bad) stc iret push cwtl cmp rex.RX mov outsb mov mov (bad) jbe fwait add rex.R callq clc or and mov xchg (bad) cmp sub rex.X or or enterq xchg and imull cmpsl mov xchg rex.WRX rex.XB imul rex.RB sahf imul imul stc retq jge movabs (bad) out imul retq in jp shr (bad) fwait stc and (bad) sbb or (bad) cmpsb xor xor (bad) movups fs repz repz jbe (bad) loop ss add shr sbb stos jmp jne mov out adc mov (bad) mov icebp push pushfq pop sbb movslq xor mov addr32 xor push mov rex.XB push mov fldl (bad) fildll int (bad) test (bad) or or or movsl cmp (bad) mov sbb and cmpsb xchg push push jno (bad) (bad) push rex.WXB rclb (bad) adc mov mov rex.RB fs int sub xor mov cmp stc add (bad) fstl scas iret repz leaveq (bad) in callq mov int3 push sbb shrl (bad) test movabs adc movabs (bad) cmc (bad) and (bad) fucomi rex.W rex.RXB rex.RXB add xor jnp (bad) sbb adc jmp leaveq repnz adcb pop sub lock mov outsb adc loope std xchg add (bad) adc pushq rex adc rex.R sub int3 jns enterq add xchg pop (bad) fs push scas movsb jb (bad) (bad) adc mov pushq sbb rolb xchg retq rex.WRB retq test lods imul clc loopne rex.WB sbb (bad) test (bad) mov retq cs (bad) lahf stc sbb (bad) push xlat jne fwait and push sub (bad) (bad) jo (bad) sti (bad) sub adc mov retq test push lock xchg out adc std sub (bad) mov js xor and sbb retq (bad) mov sub (bad) lea rcll stos outsb jae int3 and fadds rex.WR js mov or or insb insb (bad) fwait and lret adc insb xor hlt lret jne (bad) loop fidivl mov cltd jo mov rex.X faddl (bad) lock (bad) pop mov fimull jne (bad) repz std (bad) sub int3 or lea stos mov sti sbb imul repnz mov mov orb rex.X rex.WRX es jno (bad) sahf jnp pop callq loopne (bad) rex.WXB fcoml imul (bad) int3 rex.WXB cmp cmp xchg out (bad) pop int orl mov (bad) and sub sbb fstpt out adcl sub push fildll out clc repnz imul (bad) loope and (bad) mov or jne mov sbb xor xor fisubl hlt pop add enterq insb (bad) (bad) (bad) out ffree (bad) jmp sbb nop sbb (bad) movsb xlat (bad) (bad) movabs (bad) cli shrb in xor test test and loop xor xchg (bad) (bad) in push (bad) (bad) (bad) jrcxz ss push push (bad) hlt in push jbe rex.WRX push pushq add int sub (bad) pslld xchg mov lret insb cmpsl rex.WXB hlt (bad) loopne fs repz cltd mov mov (bad) iret xchg cmp imul mov cltd mov xchg ror sbb xchg fild cltd (bad) rex.RXB (bad) lret test movslq sub cmp or lret popfq mov pop add add lret (bad) mov adc fs xlat in hlt adc retq (bad) add cmc sarb add jnp add ja adc (bad) xchg add pushq rex.WRB (bad) xor iret cmp adc retq jne (bad) xchg callq cmp int3 adc nop (bad) lods mov cmp lods pushq retq loope fsubs fwait ss fdiv test (bad) fiaddl rorb rex.XB sbb out (bad) nop mov cmp jbe icebp xor jno hlt stos rol adc jl nop and mov mov out adc sbb out pushq movabs lret (bad) imulb (bad) in jne cmp cmp pop (bad) loop (bad) jne outsb xor xor (bad) loopne lahf cwtl push (bad) insb xor jle lods (bad) mov addr32 add mov fnstenv insb push sub scas (bad) lea repz push (bad) cmp push mov (bad) sbb adc addr32 or mov rex.WX xor cld push cs fnop jl adc (bad) enterq push callq lock cmp fldenv jne in (bad) mov leaveq sub pop jbe movabs mov pushq nop retq in in add mov (bad) mov add or cli movabs mov sub (bad) xchg (bad) jl in rex.R mov in cmp pop test sub int3 add retq cmpsb add sbb subl nop testl nop data16 (bad) mov add add and (bad) sub sub (bad) lock repz cmp cmp (bad) sub (bad) and test push jrcxz xchg xor push fbstp decb (bad) sbb jne callq cmp decl jno (bad) xchg push fldl or insb cmpsl out movb mov jle (bad) ror or mov rex shlb int scas and movl xchg cmp push jnp jp stc jmpq js pushq roll (bad) pushq rex.WRB rex.WR push retq adc rcl xchg lods jno and clc add mov rex.RXB or movsb cmovb rex.WX cmpsb xchg (bad) scas xor xlat adc (bad) loop jrcxz repz cmp or cmp rolb iret jmp rex.XB rex.WRX jbe cld sbbb nop sub adc hlt and fsubl xor xor rex.XB test mov rex xchg jbe (bad) fdiv movsb (bad) stc stos xchg mov mov pop (bad) mov add rex.WX (bad) fstps jnp test sbb xchg fisttpll (bad) xor xor out (bad) rex.R or adc and rex.WRB (bad) cmp pushq pushfq fildll (bad) mov and or sbb xchg movabs (bad) repnz jne xchg (bad) scas repnz mov sub incl sbb mov lahf scas loopne fsubp or leaveq push (bad) adc push stos push cmp push imul cmc xchg rex.RXB rex.X rex.W sbb jb mov pop cmp scas (bad) int (bad) imul mov xor es push or repz push (bad) pushq fdivrs clc hlt in xchg fdivrs xchg sbb fsubrl movabs and jge adc repz insl in or xchg mov pop or test pushfq adc in pop sub jmpq rex.XB rex.WB cs (bad) addb outsl or push divb mov je callq or test cwtl xchg or gs xorb stos adc mov loop cmc cmp (bad) (bad) lcall sbb data16 cmp (bad) hlt or (bad) add sub rolb jne pop cmp push jg sbb outsl clc lahf add and test nop callq mov xchg callq jge rex.X movabs jrcxz (bad) fmuls or jne lret ds adc rex.X cmpsb sbb xlat lock cld (bad) in jg mov jno mov add cli cwtl (bad) callq insl out add movabs std xor push or sub rex.X cwtl rex.WR lret je mov mov rex.RXB (bad) xchg (bad) push pop (bad) gs (bad) callq enterq and in iret sbb sub loope jns rex.RXB loopne rex.X adc notl or sbb pop adc mov repz jo and leaveq xchg xchg and xchg and mov xor stos (bad) (bad) maskmovq (bad) rex.WR xchg cmc push ror rorl or adc adc jge and clc notl add pop mov (bad) jmpq (bad) rcrb mov pushq rex.WRXB in cmp and (bad) jno adc lods or (bad) (bad) pop (bad) (bad) lock cmp sub xor xorl fs add jg in in test add or jbe add push rex.RB outsb js and (bad) xchg push mov rex.WXB jne in fwait mulb mov mov jle jne fild xchg mov pushq (bad) ror and pop and imul ss pop test rex.R xchg movabs retq callq (bad) (bad) xchg in (bad) (bad) sub lods sbb (bad) jp pop rorb xor (bad) add jne lahf pop or clc es sti in rex.RXB or pushq adc adc (bad) push rex.W jmpq cmp xor mov rex.WXB (bad) (bad) sub (bad) imul fwait add out mov movabs adc pushq or callq (bad) jae loop in pop rex.WRX rex.RX xchg sub push in imul or cld jl movabs or adc add rorb xor (bad) mov clc cld mov inc fistpl xor rex.XB repz or (bad) xchg push cli cmc (bad) (bad) add hlt mov fsubrl mov imul test cmp cmovae fdivr cmp sub mov decb (bad) nop rex.WR pmaddwd xlat nop int3 xor rex.WR sbb rclb add (bad) xchg push addl (bad) je sbb fisttpll leaveq rex.WR mov adc movabs cmc hlt sarb mov add rclb sbb mov rex.WR and test mov cld mov leaveq movsb cmp pushq je adc repnz jbe out xlat (bad) mov xchg or lock repnz (bad) testb rex.WR fwait push sbb jmpq in stc xor push sbb jo mov stc mov (bad) jge mov add jge sbb jp mov movabs xor jmp adc out cmc push add push je cmp or nop hlt (bad) (bad) jne lret cmp outsb rolb enterq in rcrb xchg imul and sbb or (bad) icebp cld sarl int3 (bad) (bad) xchg mul or sarb adc adc mov adc rcll or add or and sub push add (bad) xchg add iret (bad) std add xchg movhps (bad) (bad) jmpq (bad) insl jp int (bad) mov xchg lock vpunpckhwd add in lock pop add (bad) pop in mov (bad) jmp jae xlat (bad) xchg add es (bad) int3 or add test mov movsb fbstp stc adc (bad) cs mov (bad) rcll in mov int mov fdivl (bad) hlt (bad) mov movsb test mov jl mov (bad) js (bad) sbb (bad) mov (bad) xchg add pop test add sub or insl xor xchg adcl nop std jge or iret cmpsl and cmpsb sti xor pushfq add fisub adc sub jbe fisub cmp rorl sbb jne sub xchg addb fcomip sbb jl jmp movsb iret rex.WRB test leaveq mov add addr32 xlat lock jrcxz (bad) icebp (bad) mov cld ljmp mov pushq rex.XB xor cmp out (bad) insb xchg (bad) cmp push cmp xchg sub pop (bad) decl stos test out (bad) adc jo push cmpsl xchg stc adc or lret rex.B fwait (bad) (bad) or (bad) jle adc cmp lock push jbe adc in mov movsb xor in adc jnp,pn icebp and pcmpeqw outsl (bad) pop nop jrcxz jrcxz loope add or clc jrcxz ror or (bad) add je (bad) jbe clc xchg (bad) mov mov and lea callq pop repz sbb out push push shrb insb callq (bad) (bad) rex.RX rex.RXB rex.B or push (bad) jo rcl (bad) (bad) je or cmc adc (bad) add clc (bad) xchg imulb (bad) xchg add jb (bad) cmp stos sub in push (bad) xlat in or sbb add in mov cmpb or lock or mov hlt lret xor in and (bad) jmpq rex.WX ficoml mov jne sbb lods cmp lock sub rex.W rex.XB mov lock cbtw rcrb (bad) rex.WR testb (bad) add out lods xor sbb adc sbb (bad) mov xor add test cmp sbb cmpsb mov (bad) xlat or mov sbb (bad) sti mov or (bad) sbb test loope pushq lock jno xor movabs add push iret stc jge mov sub cmp jp je lea (bad) fs push frstor pop mov mov js sbb push std jo xchg mov mov iret adc sbb loopne (bad) mov clc (bad) stos icebp sahf xchg hlt test xchg imul mov movsl iret (bad) jo fcoml rex.R pop repz callq (bad) movabs xorl xor adc jae (bad) mov pop repz rcrb xchg (bad) (bad) sub jmp in movabs jbe and lods loop jne out jge out pop (bad) mov adc (bad) orb rex.X rex.XB fidivrl in std sbb mov (bad) callq pushfq fstl andl fcmovu sbbl add lock lahf xchg (bad) (bad) in add (bad) jmpq jmp sub sub fistpl repnz fcoml lock clc xchg rex.XB sbb fidiv (bad) rex.RB rex.XB sbb retq (bad) push pushq (bad) mov jbe (bad) hlt rex.XB (bad) not add fidivr cmp adc adc jmpq or or push shl or (bad) (bad) xor (bad) mov insl testb sbb jno mov enterq (bad) lock (bad) or jno add (bad) mov rex.XB rex.R rex.W ss mov (bad) jmp (bad) xor pop and jno gs (bad) stos push rex.WB (bad) pop sbb (bad) adc jmp or push or mov scas movl lods add jmp add int3 lock cmc fwait lock scas sbb lea hlt mov int3 adc xchg or lock (bad) mov (bad) rorl sbb lret rex.XB fistl ds out test (bad) xorl push jb jne (bad) push imul (bad) hlt (bad) (bad) icebp rex.W mov movsb hlt mov (bad) rex.WRXB mov and adc or (bad) xor ss sub pushfq push adc mov (bad) rex.WR mov cs cmp (bad) lock adc in xor in rex.RXB add or movabs or cmc in mov out (bad) mov test imul out scas and lock lock clc adc repnz rex.WRB adc mov lods push pushq outsb xor (bad) jae (bad) or rcll int jns rex.XB push rex.WRX rex.XB or in xor add sub lret retq pushq cmpsb int3 xchg (bad) pop rex.WRXB rex.RB (bad) push rex.X jnp jne mov jg xlat or (bad) sub sub retq pop (bad) (bad) sbb cmp (bad) add xor adc xlat int3 (bad) sub pushq rex.XB sbbb rex.XB mov (bad) rclb jne lret lock out (bad) or je vminpd repnz or mov or cld leaveq sbb lock (bad) roll jg fwait sub mov mov xor std xchg mov jmp lods lret je ss sbbb outsl sub in jns (bad) or sbb sub frstor mov jnp rex movsb or mov mov jbe sti cmc popfq or imul (bad) callq loopne fstl (bad) sub fcomp insb mov cli add rex.XB outsb push cltd movabs add adc loope rolb in jo sub (bad) and xor shl mov fisubl loopne xor (bad) mov (bad) (bad) (bad) sbb sti xchg rex.WXB test sbb (bad) xchg pushfq sbb (bad) (bad) rex.WB push or cmp or adc mov fwait (bad) or rcl rolb mov (bad) cmp sub rex.X loop jbe repnz lods adc gs pop jne leaveq outsb in ror xlat repnz int xorb test xchg push (bad) lock xor rcrb repnz fbld callq jns movabs int3 (bad) jne pop cmovb xchg (bad) movabs fadd lret orl cltd in rex.WXB (bad) fsubs repz push (bad) sub loop movsb add stc add (bad) sub cli and jae sbb add push fwait imul (bad) popq lods xchg test pop sbb stos ja repnz fisttpl jp cmp in (bad) and xor js fistpll and (bad) rex.RX in repnz mov mov xchg hlt rex.RXB hlt repnz lock (bad) scas std imul pop sub rcrb pop mov rorl cmc pop out rex.WX cmp push (bad) stos rex.RXB rex addr32 xchg adc mov nop mov fwait or sbb repz flds imul in (bad) (bad) leaveq xchg jp faddl out xchg (bad) (bad) jmpq sub push sub cwtl or sbb rex.WXB jno rcll xor (bad) rex.WX adc xor sub or sahf lret mov out int3 mov mov cmp mov (bad) lret add mov stos cmpsl test (bad) jle mov stc movabs (bad) loope cld js mov test xor cmp (bad) lahf rex.B xor data16 xor pushfq mov fistl xchg (bad) std or sub push mov or (bad) adc loop xor pop repnz push insb int je push je xorl and es pushq rcll vcvtsd2si (bad) addr32 in sbb and jg jns rex.RXB (bad) jne subl nop xchg or popfq (bad) and movabs out cltd test rex.B scas (bad) xchg out or pop and and test mov (bad) add (bad) clc jne stos lock insb repz fcmove imul and and leaveq loope jg imul mov addr32 push retw sub adc jrcxz (bad) (bad) (bad) cmc loop cld sub adc out repz mov (bad) stos pop xchg sub or xor (bad) rex.WXB or (bad) cs rex.B in in or add jno ffree rex.RB sbb jne jns pushq and jg (bad) cld rex.WXB cmp or fldcw and mov cld (bad) sbb hlt lret (bad) jne insl jl,pt ja adc push sub add popfq std adc idivl scas stos int3 loopne fsubrp xlat shrb hlt (bad) mov fs sbb mov sarl jmpq add subb (bad) xor and mov outsl and (bad) mov test jle in mov or mov hlt rex.WXB mov mov rex.XB (bad) (bad) (bad) (bad) xor fcmovne (bad) rex scas sbb jle fnop jne rorl xchg (bad) loopne outsb ss xchg add sub mov xor clc js rex.WRXB xor add mov (bad) (bad) (bad) jae sti adc ds add xlat mov pop int3 rex.WRX add cmc push mov retq xor rcrb iret mov shlb js mov pop sbb add sub in pushq sub xchg mov mov (bad) adc (bad) cmp cwtl test sbb add cmc push fdivs movsb push cs or or mov sub lret (bad) cmp jae sbb pop jns rcl icebp rex.WR cs out xor sti loop pop (bad) loope rol pushq add (bad) notl adc rolb adc xor rex.R rex.WRB pushq sbb imul (bad) adc imul rex.RX cmpsb outsb pop rex.WB rex.WXB add push sbb mov (bad) jb movsb or retq (bad) and insl rex.WX fwait cmc repnz mov (bad) scas rex.WR or (bad) lret fidivr stc loope in mov (bad) loopne movabs sbb cld push fwait (bad) (bad) repz test cmp fcoms add (bad) mov sbb movabs test movabs test (bad) mov insb (bad) outsb orl (bad) mov push rex.WRXB ja or (bad) out (bad) (bad) sub (bad) iret stos mov rex.RB or cmpsb mov cmp rex.X push outsl mov out out (bad) lods (bad) fdivl movabs cmp rex mov std out repnz pop (bad) (bad) jrcxz popfq enterq pushq xor and lret ror hlt xor je in (bad) rex.B rex.WX mov or lahf adc (bad) push push int sbb shl int testl xchg test (bad) jbe (bad) (bad) rex.RX add data16 add xor cld xor sbb cmp loop in rex.WB add imul adc rex.XB movsb jns xor mov movabs or sub test in lret add addb xor mov and rex.RXB xchg (bad) push insl or out insb retq imul movsl gs (bad) (bad) rex.WR or clc and jmpq add add (bad) nop adc (bad) mov mov ficompl adc jle fwait jg icebp enterq xor cmp fisttpll or and sbb imul (bad) sub and xchg (bad) push or fildll adc (bad) cwtl pop scas (bad) jo (bad) adc or or pop (bad) (bad) sbb jrcxz int (bad) sub xor xchg loope imul (bad) repz lret icebp and js pop rex.WX lret adc int3 adc pushfq ja add hlt mov fwait int3 push jp mov xchg rex.W movabs cmpsb add xor sub int3 lock adc (bad) cltd lret insb push imul stos or mov push cmpsl sbb std push xor xor xchg mov xor cmp sti xchg cld xlat clc out (bad) xchg add (bad) rex.WB or movabs sbb adc (bad) sahf test out ds shl pop push scas sub (bad) cmp (bad) mov retq (bad) int3 push xchg stc rex.R (bad) retq pop es push es add neg (bad) lock pushq repnz idiv cmp callq sbb fildll stos xchg (bad) scas in and add mov add and add push outsb xchg push xor rex.WXB (bad) or je pushq add popfq fwait js and mov mov syscall fs out (bad) xor jmpq callq cmc push pop adc pushq ds or in pop rex.WRB icebp (bad) pop cwtl pop int mov mov fldl xor int3 cmp fwait out sbb clc pop cmc xor and and sub shrb stos mov fstl (bad) xchg (bad) sub rex.WRX or rex.R jo (bad) (bad) jne adc (bad) jbe divl add lods pop and mov outsb mov lods mov mov jmp adc adc cli jrcxz (bad) (bad) (bad) rex.XB mov pop scas out rex.WX rex.WB rex.WR jrcxz pop add movabs stos js xor adc (bad) (bad) (bad) or adc mov cmp test (bad) rex.WX cli in and jns and jmpq jl jnp pop rex.RX rex.B adc jbe adc jne mov push movsq adc pop (bad) test push push (bad) rcl or mov insb retq pop or jo cmp add iret (bad) retq rcrb sahf pop cmpsb fild xchg retq (bad) add pop cwtl retq fnsave or (bad) movabs mov mov jge jp mov test jg xor test jrcxz (bad) xor mov lock mov iret mov xor cli xchg int push (bad) (bad) rex.XB xor mov sbb add movabs movsb jne mov (bad) rex ja mov nop (bad) mov cmpsb retq cltd insb add push (bad) (bad) fwait pop ds mov push add mov test stos mov sub and imul (bad) adc je fcmovbe (bad) (bad) adc rex.RXB rex.RXB pop (bad) jno push or and or (bad) (bad) (bad) movsl mov lock push adc jae mov mov (bad) xchg xor sub popfq xor sbb (bad) retq mulb and rex.WRXB in repz sbb jno scas scas rex.R (bad) out cld mov and int rex.R and mov int cmp lock (bad) lret clc adc sub callq xor lock lahf xchg lock (bad) push pushq jmpq xchg add rex.RX movabs in fadd out pop sbb (bad) cs fadds (bad) callq stc sub repnz mov subl vpmaxsw rex.RX jp jb movabs cs sub fs (bad) rex.XB rex.WR (bad) pushw in add (bad) jne pop mov and insb mov rex.XB (bad) repnz (bad) xchg xchg push insb pushq cmp add rex (bad) (bad) repnz jne mov or add add cltd js xchg in or shrb push jge (bad) mov adc outsl fiadd (bad) insb fcomp or add add insb add (bad) xchg icebp lods sbb mov out adc (bad) hlt add rex.WR mov in incb rex.RXB (bad) xchg or in cmpsl outsb repnz pushq jbe jnp sub xor push xchg (bad) mul (bad) je test cmpsl movsb xor push gs jb xor (bad) pushq rex.WR and (bad) movabs rex.R imul mov mov push (bad) mov jne (bad) clc (bad) (bad) mov push and jb or xchg mov adc (bad) fisubr xchg hlt (bad) xor loopne (bad) push and jmpq lock fdivrs jge int sbb xchg insb (bad) jmp outsb rex.R test in lret (bad) (bad) addr32 rcl ds mov lods push out fwait pushfq xchg adc repnz rex.RB and callq (bad) cmp (bad) jmp (bad) (bad) movabs mull xchg xchg callq nop pushfq test and out and jrcxz jge sti ficompl add xor pop add push jmp (bad) push gs or loope (bad) ss scas xor jne jb rex.RX fst (bad) xlat popfq adc notb adc mov sub cmpb cmpsl es out je cmp movabs nop hlt cwtl rex.WR (bad) fisubrl xchg sti test fdivp rex.RXB xor (bad) fisttpl add adc jne and push fwait xor cltd out mov and js sub pushq sub mov (bad) mov movsw xor lea adc sub idiv (bad) je sub and sbb cs push repnz jo add xchg loope lock repnz (bad) test neg shrb (bad) adc pushq movabs xchg adc sbb cmp imull push and mov rolb sub mov cmp pop rex.XB fcompl rex.WR pop andl (bad) or fwait mov test jmp add (bad) mov stc or mov push sub repnz (bad) jns rex.X jmp sub rcrb and (bad) (bad) xchg loop std sub sbb push sbb int3 repz icebp cli push (bad) retq or add (bad) imul out fwait loopne add and data16 out and or jl adc rclb movabs jle jmp (bad) (bad) rex.WR rex.XB cld movabs add and sub (bad) mov add out cmp cltd callq add in sbb fucomip jne xchg movsb repnz ds mov xchg xor lods rex.WRX rex.WR test rex.WR rex.WR mov loopne idiv xchg (bad) movsb xchg fsubl loop loopne rex.RB pop or loop jns adc (bad) jae lahf adc movabs mov xor scas out jo cmc lock in cmp rex.WX es sub ffree fwait mov rex.WX or jne mov clc icebp fwait xchg (bad) and sarl jrcxz retq xchg xchg (bad) enterq xchg (bad) test (bad) lock pop iret xor cmp retq movslq sbbb cs gs movabs imul out mov (bad) insl and scas rex.WRX stos std imul sbb (bad) or retq test and int3 movsb leaveq std adc rex.XB mov mov fnstenv sbb test fs (bad) test jmpq popfq xlat (bad) nop decb lahf test in loopne sbb repz rolb clc adc notb mov (bad) retq (bad) sub push (bad) rclb xor (bad) divb lock xor mov sbb hlt sbb adc (bad) mov insl sub (bad) jns and leaveq adcl xor adc callw out sub or xlat or outsb cmp mov fnop lahf push xchg (bad) fwait sbb jne pop (bad) jge jl jmpq or jne xor push in hlt jge out rcrb (bad) (bad) test rex.W stc cli push repz sub jle sbb xchg jo adc out callq rex.XB adc sbb pushq (bad) (bad) sbb faddl imul sti sbb sub cmpsl iret hlt rex and mov jbe enterq test mov retq div push cmpsl adc in out cli jbe or (bad) (bad) mov pop data16 in adc rex.XB es cli (bad) (bad) bnd xor enterq (bad) or fnstcw jmpq cmp or pop xchg (bad) rex.WX stos xchg jne fcmove jge sbb jo hlt xchg cld fmuls scas std mov xchg pushq mov (bad) mov xor xchg fbstp jnp mov ja in stos mov xchg mov fwait rex.WB xchg in adc movslq xor xchg or rex.XB fistl rex.RXB (bad) pop (bad) (bad) scas (bad) (bad) or xchg (bad) fsubs bnd rorl repz movabs or fsubrl rex.XB fs pop mov (bad) nop (bad) jge clc push adc (bad) xchg xor fwait mov xchg (bad) or mov or cmp and fwait gs out add out or jae rex.RXB (bad) nop jne movsb sbb (bad) out fimull out lods (bad) (bad) dec or mov mov xor rex.W adc in movsl rex.WRXB (bad) cmp (bad) imul fsub sbb mov sbb mov sbb int test (bad) enterq push callq mov cmpsb (bad) callq rex.WRXB sahf callq test shlb (bad) movabs sub add lods mov je add movabs imul (bad) and mov lahf xchg jge ss (bad) jp (bad) jg sbb jb out xchg (bad) jrcxz lahf rex.WX out add add and mov fistp push mov mov rcrl push pop sbb pushfq jmpq jl loop xchg in xchg test orl xchg movl fldenv xchg sbb repnz retq stc fmuls adc icebp sub test (bad) (bad) retq icebp jrcxz stc jge adc (bad) jno cmpsl std pop mov xchg mov jo (bad) js fs jne jrcxz ror lret or (bad) (bad) rex.WRXB cmpsl cmp adc pushfq ss in ja (bad) (bad) sbb movabs rex.WR jle scas jne movabs adc imul loope (bad) imul lods xlat (bad) adc fsub adc (bad) mov adc retq sbb retq add adc mov mov rex.WR xchg roll mov (bad) lods xchg jrcxz push (bad) retq jnp retq jp rex push xchg xlat iret movabs test (bad) hlt and rex.WB out pushq add mov movabs (bad) hlt jno nop (bad) (bad) mov (bad) mov lods movsb (bad) (bad) out jne (bad) (bad) rex.RB nop rex.RX (bad) (bad) pushfq add loopne adc mov rex.WR pushq (bad) mov xchg sub jnp jne or cwtl jmpq sub push in loopne repnz movabs out and fs ss mov rex.WR jne xor and movabs add pop test push int3 adc movl rex.WRX (bad) iret movabs cmpsb orb mov jno repz adc sbb (bad) cmpsb add hlt (bad) out lock movsb movslq push mov sub lea fxtract mov out jp js or xor mov push fidivrl add mov or xor sub (bad) scas (bad) mov test push push mov fs cmpsl lock and icebp movslq loopne mov pop push jnp add int adc jp xor jmpq or pushq lahf cwtl in add movabs iret cld rex.RX rex.RXB sub ss pop jp jrcxz pop mov mov cld (bad) and pop mov cmc sarb xlat push lods cmp cmc rcl (bad) icebp (bad) mov outsl loope addb xor jmpq jg ds sbb jl xor rorl xor loop rex.RXB insl (bad) fwait sbb rex.WR addr32 (bad) ja or mov sbbl adc mov enterq (bad) (bad) (bad) retq (bad) mov (bad) movsb (bad) imul sar popfq or (bad) sub jl (bad) (bad) (bad) mov xchg or ljmp (bad) (bad) xchg sbb adc xchg jle rex.X (bad) rex.WRXB cs jge in retq jno lret push sbb cmp out push (bad) or or cltd (bad) lods shlb (bad) rex.WX (bad) adc sub (bad) add idivb mov lock data16 xchg iret mov push (bad) jrcxz mov (bad) (bad) or (bad) cmpsl push notb rex.W insl xor dec and lods nop add test movabs pop rex.XB movsb enterq in movabs mov div lcall sti adc mov out add mov repnz xchg je add rclb jbe (bad) fnstcw sub stos cmp xchg add pop (bad) rex.X sub repnz pop gs outsb rex.WB mov mov adc data16 xchg rex.X (bad) testl push add cmp insb cli in xchg movabs add pop lock xchg or add mov data16 sbb mov (bad) xor out push add (bad) (bad) (bad) sub or in in movabs add rclb pop nop out pop fimul jl add cwtl shl (bad) (bad) retq je pushq clc add xor sahf pop ja (bad) pop sub add or or or (bad) jno add pop iret (bad) clc subb (bad) (bad) (bad) mov hlt add gs push (bad) ss adc enterq je adc roll mov hlt add lahf (bad) xchg sub movsb (bad) js sahf jmp or sub pcmpeqb xchg xchg sbbb push callq outsb (bad) callq test adc insl cmpb (bad) repnz sub out movabs xchg sub mov jmpq rex.XB fmull cs push adc rorb insb je and adc jb pop sbbb (bad) xchg (bad) in rex.RXB (bad) push mov fiaddl push mov (bad) repz sti and popfq out mov mov rex.WR or (bad) (bad) mov mov push lahf jp and (bad) pop pushq sbb fwait mov (bad) rex.WB repnz mov mov mov retq (bad) fnsave js jb loope or fwait ja xchg adc out callq (bad) cmp repz sub (bad) adc js enterq sbb xchg cmp xchg xchg loopne cmp fisubrl adc test loop (bad) jo mov movabs je adc sti lock mov andb shlb jne (bad) (bad) cwtl addr32 cmp (bad) mov mov ss cld jle xorb int add push or in (bad) xchg or rol stc nop cmp add (bad) cmpsb cltd jge (bad) adc jmpq int gs fdiv or and add adc jbe push push fmul cmp push fcomip jbe rorl mov sbb enterq (bad) fisttpll rex.XB loopne out data16 loopne outsb push (bad) (bad) je in in (bad) (bad) out inc rex.RB mov xor xlat in jmp rex.WRXB test nop jl cld and jae in fsts sub (bad) cld xchg add lock (bad) (bad) and jne mov movabs imul cmp (bad) icebp out adc sub sub scas sbb xchg out data16 mov nop (bad) sbb sub (bad) or cmp sbb xchg enterq jne insb (bad) ja lock xchg sub enterq mov ss popfq sub sub adc (bad) adc pop cltd mov rex addr32 out (bad) (bad) (bad) sub (bad) mov addr32 xor fiaddl sbb rcl test add sti loopne push xchg lret loop sbb xlat push stos sbb mov and insb outsb (bad) loop jbe int rex.WX stos ss rex.R rex.XB pop rex.WX (bad) or add cwtl (bad) stos xchg int (bad) (bad) xor ror popfq mov jg repz fdivl xor in push test rex.WR rex.W xor add (bad) es scas (bad) xchg std jg (bad) callq fwait xorl xlat clc xchg xor outsb rex.WR add or pushfq hlt jp rex.W cs or leaveq in mov or sbb lahf imul (bad) rex.WXB rex.WXB mov (bad) (bad) (bad) rex.WX rex.WRX rex.XB mov lods add movsl imul sbb rex.B std adc hlt clc pop sbb cmp (bad) int3 out (bad) in hlt cmpsb cwtl add cmp callq rex.RXB (bad) movabs stc jno xor lods insl shl mov movabs mov mov (bad) fdiv js (bad) pop cmp mov push pushq rex.XB pop out cld push (bad) sbb (bad) (bad) mov (bad) push (bad) xacquire ss divb (bad) jmpq (bad) (bad) rex.WRX (bad) (bad) sub (bad) cmp fucomip imul mov mov adc jg jb movabs rex.X add and push not (bad) add pushfq enterq or add lret pushq rex.W retq xor js cmp push jae std xchg add ds mov xor fwait or pushq xor js enterq sbb sub lret or loop (bad) rex.WRXB mov (bad) or (bad) loop and xor (bad) (bad) and (bad) (bad) ja rex.R rex.RXB lahf rex.WXB pop js outsl mov (bad) cmc stos jg lret loopne rex in retq (bad) push lret jmp insl jmpq rex.X (bad) insb movsb mov cmp or test sub js (bad) sbb insl rex.X rex.WRXB and frstor jne (bad) (bad) cmc (bad) (bad) retq retq or mov fbstp nop enterq nop pop lods sub movabs (bad) pushq and jo,pn (bad) push mov imul (bad) rex.B (bad) mov (bad) cli icebp sbb cmpsl pop neg xchg mov mov test movabs pop fsts jne repz (bad) enterq rex.R hlt in (bad) sbb mov fldenv jmpq std int3 mov test stc (bad) (bad) cmc fs repz sahf (bad) popfq or fild repnz rex.WB mov and out es (bad) test imull fwait enterq jmpq movabs xor sub out push pushq leaveq add mov in cli fs jmp repnz (bad) jne jnp mov ror cmc xchg (bad) out rex.XB jmpq push retq adc adc sub popfq push and rex.WR rolb push xchg cmc retq jne scas jge push rex.XB (bad) (bad) jrcxz movabs mov (bad) retq mov mov hlt pop or or jne push xchg mov or (bad) (bad) cmc (bad) or sahf sbb insl lods xlat cli movsb stc xor mov pop lret jne (bad) enterq push cs add imul jne (bad) xchg xchg iret pop rex.RB test (bad) cmp fwait ss xchg xlat or xchg scas orb sub fiadd rex.RX adc jp (bad) (bad) rex.XB loopne mov adc lock shrl lock (bad) (bad) in (bad) push jo leaveq mov test shr imul mov (bad) rex.WRB adc iret mov push outsb mov cli lock pushq imul fild mov leaveq xchg es rex.WXB lock mov loope gs xor and jmpq repz iret (bad) xchg or mov jne (bad) adc (bad) (bad) xchg pop mov adc movsl mov rex.R mov or xchg in rclb or scas cmpsb (bad) notl outsl icebp mov add and rex.XB xchg mov mov fsubrs add mov jno out (bad) adc retq (bad) imul sbb (bad) lods or loopne or cli adc lret rex.R rex.WRX jle sti mov rex.X ss or insl jne sub enterq jge (bad) cmp rex.RX xchg rorb int3 mov imul pushfq xorb out adc clc sub movabs mov or pop (bad) mov int3 push int3 mov retq cmp pushq adc sbb out mov adc pop (bad) imul or (bad) rex.R rex.RB cs push (bad) fiadd (bad) mov sub xor (bad) (bad) lods repz imul fcoms out push js cmpsl movabs rex.XB push icebp jle or rex.WB rex.RB cmp (bad) xor sub fcoml sbb int callq rex.X sub rex.RXB (bad) push (bad) rep xchg in rex.XB pop ss (bad) clc pop add xchg add adc cli xchg sbb mov (bad) fsubrl adc xchg (bad) adc icebp (bad) popfq sbb mov pop iret (bad) xchg mov int3 loop sbb lahf or mov sbb jae rex.RXB and lret imul retq sub (bad) fcmovne in adc jl add jae or xchg mov clc imul (bad) jnp lock loope callq hlt (bad) mov (bad) lret push leaveq rclb (bad) mov ja stc adc fdivrs fdivl sbb clc push mov addr32 rex.RXB push or or mov sti (bad) cwtl (bad) (bad) addr32 stc cli cmp subb pop in int3 lods xchg int3 mov cmpsl push rex.W rex.X in out loopne (bad) cmpsl loopne mov mov jrcxz pop jmp adc jne cmp add add cli insb push mov or ficoml (bad) rex.WR rex.WR movabs lods cmpsb mov pop or (bad) jb int3 ss insb mov pop (bad) mov (bad) mov rex.RX xchg loopne xor fnstsw push cwtl stc adc (bad) mov pushq movsb cld in lods rex.B xchg push xor icebp (bad) fs (bad) out mov imul rex.W hlt orb mov jmpq pushq lahf mov or pushfq repnz movsb sbb rex.WRB negl gs jmp cli cmpl stos xchg callq pushq push rex.RB or mov add pop cmp cld sbb rex.RX push testl out mov cli add in lods jmp sub and rcrl or xor (bad) mov iret add repz or cltd jne rex.RX jmp loopne jmpq (bad) xor (bad) (bad) rcr xor rex.RXB gs xlat lods rex lea pushq repnz (bad) (bad) jb xor adc (bad) mov (bad) and cmp mov add iret lahf sbb callq in outsl xchg je (bad) cmpsb and or callq fdiv adc xchg in push cmc adc movsl ss or xchg mov add and repz rex.RXB mov jmp ss or xor out mov pushfq sbb fs rex.R (bad) sbb add jmp add (bad) hlt notb sbb je jbe fsub lret out xlat add imul out (bad) stc sti mov (bad) out cmp mov fnstenv mov and iretq int3 hlt and je addl (bad) or jge and in mov clc sarl rex.RXB popfq cmp xchg pop sti cmp add (bad) int3 sbb adc or or rex.WRX test or adc mov jne add (bad) repnz adc jp fsubp sbb (bad) clc cmp push jb rcll stc cltd or je stos stos add cmp or lods retq pop rorl and (bad) scas or (bad) mov pop data16 xchg (bad) (bad) hlt sbb movabs lret (bad) rorl push xchg fs data16 mov lret xchg (bad) nop jmp mov (bad) fisubrl shr lods stos pop mov and sub mov cmp sbb (bad) out sub (bad) mov xor movabs jns repz (bad) hlt lret pushfq rex.WX (bad) fcoms loop and push add adc adc cld adc out (bad) or mov fdivrs xchg repz (bad) xchg add lret clc rex.WRXB pop and xchg movsb add push fisubrl scas imul push loope xor hlt push icebp or (bad) mov xchg adc mov stc adc and fisttpl jmp insb adc adc icebp adc cmpsb outsb xor shll rorb cmc add add cmc (bad) sar cmc nop sar cmc shrb add sub fsub (bad) repz xor xchg mov push add lods add stos sub pushfq std and cmpsl and jl adc mov lock adc repz xchg sbb cmp (bad) (bad) xlat int3 rcll (bad) in adc pop rex.WRXB sbb xorb sarl jno pushq jmp lods retq and xlat xchg mov mov movabs cltd movabs sub fldt (bad) adc xor out mov mov jrcxz rex.WRX or cmp icebp add (bad) xchg jo mov and adc notb in or out insl or rex.RXB clc pop jg or js mov jno (bad) (bad) notl nop jno and adc cltd sub xlat ficompl (bad) jne (bad) rex.WX or out sub (bad) sub out jne push in movslq sub jl mov (bad) sti mov out fwait lods (bad) repnz iret sbb add xchg mov out adc jne rex.RB mov movabs and pushfq add jg hlt insb (bad) (bad) fwait or fbstp insb rex.WRXB retq jb (bad) (bad) std ds ja test xchg imul adc mov in rex.WXB add sbb retq (bad) sbb push mov lock mov pop rex.RXB rex.B mov js je adc and fmuls jne (bad) pop je cli out (bad) push (bad) cmp enterq out pop (bad) jnp scas insb xchg cld mov add jo pop nop loopne lock out (bad) setp pushq sub and icebp (bad) push adc jg sti rex.X out in adc push xchg lock out int3 repnz (bad) int3 ja imul rex.RXB fistl je (bad) subb movabs test push movsb fidiv icebp jl (bad) xchg cmc mov sub nop (bad) clc xor cmc or add sahf out sti xor (bad) (bad) cld scas mov and and jb loop cmpsb rex.RXB add test jbe leaveq pop mov pushq xchg fwait or lea (bad) hlt cmpsb rex.WX (bad) rex.RX movabs (bad) adc (bad) xchg rex.R sbb (bad) (bad) pushfq iret fadds lock cmp add imul jle in add adc jno (bad) adc (bad) (bad) sbb imul (bad) jmp rex.WRX lea setns mov sbbl (bad) lret and lret push rex.R insb lock or (bad) mov adc orl (bad) adc cld jmp (bad) sub xchg mov (bad) cs push adc jo xrelease mov fistl test roll enterq rex.RXB movlhps jg or or sub insb (bad) (bad) sub xor cld or (bad) gs add lret mov lods pushq int3 mov add xchg (bad) (bad) insl or jmp out iret (bad) xchg or (bad) xor pushq (bad) out jbe adc sub rex.WXB add loopne insb (bad) clc fdiv (bad) sbb mov (bad) xlat loope jbe (bad) rex.X (bad) retq iret (bad) jle rolb sub sub sub iret ffree (bad) cltd imul sti adc mov pop int3 mov lcall ficoml jno rex.WX out rex.WRX sti fcmovbe sti (bad) je fwait or (bad) stos out pop lods lret addr32 repnz mov rex.RX insb iret (bad) adc add (bad) push pop rcl repz rex.R pop jl fcompl pop outsl jge cmpsl jne rex.WXB rex.RX in mov add jne lret mov jg xor add in add xchg jno (bad) addr32 cmpsl sub mov sar ja mov add int3 scas (bad) sub jne lock (bad) push rex.RXB push mov sub loop sbb or adc mov sbb scas movsb jge shll add cmp std (bad) gs mov (bad) (bad) pushq sub imulb cmpsl xchg jl loope or cmc rorl (bad) stos adc in in jl rex.RXB (bad) mov and andb (bad) out (bad) cld (bad) out mov rex.WR scas (bad) int3 xor (bad) movabs mov add out and add adc rex.RXB jrcxz mov leaveq add movabs push (bad) pop icebp rex.B fs mov add int push jge or add (bad) xor (bad) rex.WR adc scas rex.RX in (bad) repnz mov addr32 pushq sub cmp add (bad) leaveq rex.RXB sbb (bad) cmp mov (bad) sub rex.WRB (bad) xor (bad) mov mov sub xchg adc xor rex.RB data16 push sbb xor roll sub (bad) mov cmp mov (bad) xchg imul nop jae mov mov jno (bad) (bad) mov xor iret in in out jge adc (bad) (bad) or (bad) repnz jo fstpt add out push jb rex.WB test sbb xchg cs mov (bad) ficom (bad) mov test adc or je rol xchg push enterq lret (bad) mov test cmp cmp ja repnz imul mov repz ja leaveq adc mov adc lret hlt movabs sbb (bad) mov rex.WR rex.B and mov rex.W (bad) fisttp movabs xor push popfq out add add sbb lods (bad) pushfq xor xor (bad) leaveq mov imul mov xor add mov rex.WR (bad) popq out rex.WXB lahf mov or rcl cltd add mov and movl nop xchg out mov mov push jnp cld fs (bad) rcl xchg jne (bad) (bad) or rex.B and clc adc sbb jg rex.R lahf rex bnd lock (bad) cmp test mov movsb rex.W retq jle mov in (bad) (bad) rex.WR repz or push rex.XB sbb scas (bad) lods hlt mov cwtl fisttpll std js (bad) loope mov add sbb cltd sti rex.WRXB xchg adc jno and movabs lock icebp mov in enterq (bad) stc add lock adc jb mul push jmpq ja hlt (bad) push fs outsb (bad) in jno or add je mov add notl loopne vmovq adc cltd fdiv out add lret cmp add pop int3 (bad) rex.WRX mov adc sar divb retq adc (bad) pop xchg leaveq pop pushq pushfq sbb jg nop and xchg repz cmp pop cmp push ficompl addps jrcxz (bad) cmp cld jbe fcmovnu rex.W repnz gs scas lahf repnz fwait (bad) cwtl xbeginq jg mov stos repz adc rex.XB int3 add lret cwtl mov cmc rex.RXB fadd loope test sbb (bad) mov cmp pop cmpsl xchg adc test (bad) rex.WB xlat rex.R test callq notb stos (bad) divl (bad) out add in rex.RXB lret xlat xchg push imul xchg (bad) sbb push je in hlt (bad) icebp fsubrl and sti and mov cmp stos (bad) jbe or pushq outsb cmpsb sub pop adc rex.R rex.WX jg fdivrs hlt icebp or test and push push (bad) (bad) and cmp roll add xchg sti in mov jl stos pop xchg ror es jno pushfq rorb popfq decl jl sbb (bad) cmc out (bad) hlt stos movsb cwtl jmpq adc lock pushfq add rex.WRB loop hlt or and rex.X rex.RX test add mov (bad) and icebp mov shlb mov out hlt jmpq mov rex.WXB fwait or (bad) xchg (bad) xor and hlt mov rex.WXB adc sub (bad) idiv rex.R stos loope hlt fwait rex.WRXB rex.WXB mov or repnz (bad) pushq movslq sub fsub retq mov or cltd outsl hlt addr32 or mov pushq or xor mov leaveq (bad) rex.WRB cmp add or xor testl fdivs push (bad) mov adc rex.WRB rex.WXB rex.WB insb rex.WRXB jle (bad) xchg gs cmp (bad) mov data16 sub cmpsl adc xchg icebp sbb add in bnd jp pop test int3 rex.RXB rex.WRB (bad) or lods fistpll (bad) callq (bad) fimul mov in jl rex int sbb adc addr32 mov int3 lods pushq out push nop xchg cli test movabs out add out data16 imul retq fs xchg lods (bad) or sbb push pop adc out adc out (bad) ror out cmp psrld xchg jle and scas xor jns push cs fwait adc mov (bad) (bad) mov callq xchg jbe stc (bad) hlt cmpsl retq mov sub sub or lods loopne rcl rex.R outsb jbe cmc out rex.W or mov and outsl stos or iret movabs ja or xchg sbb jmp mov (bad) xor shrl (bad) (bad) and jns adcb push test push (bad) (bad) insl fwait (bad) mov xchg mov (bad) retq shr (bad) sbb rex.XB es xchg mov adc (bad) (bad) fnstenv (bad) (bad) mov xlat imul cmp scas rex.WB movsb sub divb rex.RXB mul add or mov (bad) jp repnz mov (bad) xor (bad) adc lea test movsb or orl xor mov testl in push je out (bad) rex.WRX mov addr32 sbb mov in pushq rex.WRX lea (bad) int3 (bad) (bad) (bad) stos or (bad) xchg iret add add (bad) js scas xchg fs xor jl cs or subb mov jno xor mov hlt pop (bad) jmpq incb imull xlat fnsave fwait enterq in iret stos (bad) and enterq and mov xchg (bad) mov lods jno and ds mov (bad) je or push pushfq (bad) pushq mov fsubrl rex.WB (bad) or (bad) je stos nop jne fnstenv pop (bad) sbb (bad) mov imul mov xlat rex.RXB in adc in sbb xchg push hlt rex.X (bad) out fistpll jl je in jo (bad) imul pushq adc adc push mov push callq adc getsec rex.XB mov sti sbb sub pop rex.X xchg xor movslq sbb push pop callq push ja hlt push mov (bad) (bad) rex.RXB mov sbb xchg (bad) mov imul (bad) xor insl rex.WR lods and cmp jo mov int3 rex.WR (bad) cmp mull iret mov (bad) lret (bad) enterq mov nop (bad) xor adc xchg cltd insl rex.WRXB sbb movabs jmp push movsb push mov push je je hlt movaps cltd jo clc mov sbb (bad) hlt test (bad) retq in (bad) lods pop jne movabs pop retq ds imul nop or (bad) ss in in scas movsl in clc jno or je rex.WB mov rex.XB clc adc (bad) movabs mov mov neg mov (bad) (bad) stc xchg adc add jne rex.WX add xlat lret cmp and (bad) out adc rex.WB (bad) or mov cld cld hlt jno jb jbe xlat cmpsl je fcom (bad) pushfq decl mov stos cmp mov (bad) retq sub lret adc bnd imul add sbb mov (bad) mov outsb xchg jae add pushq fsubs retq negl hlt jne mov mov out sbb clc (bad) movsb xor or adc mov jno (bad) nop shr adc pop xchg (bad) out xchg (bad) sub jns rex.RB xlat or sbb mov jns repz (bad) (bad) cld push lods xchg rex.RXB add add jmpq xchg (bad) (bad) (bad) lahf lea cmc gs add (bad) jmpq (bad) rex.XB rex.WRB xchg shrl int3 movabs add fildll mov jbe mov (bad) mov cmp addr32 jge adc xor roll xlat jno (bad) mov and mov fidivr mov nop (bad) sub callq sti (bad) pop std cmp rex.WX fwait data16 rex.XB xchg retq rex.RXB jno (bad) in imul sar push sbb mov in mov or sub or xor imul sahf or fwait xor loope (bad) rcrb fist out xor or xorb or push (bad) lock rex idivb fnstenv xor idivb xor adcl fwait jmp sbb (bad) mov and adc sbbl pop cmp enterq movabs sub (bad) movabs mov push and stos rex.WRX mov cli fldenv (bad) stos ja rex.WRB rex.WXB adc or (bad) (bad) (bad) fucomp adc add add mov mov rex.XB adc loop (bad) leaveq out adc (bad) repz add cmc enterq cmp xor or (bad) loop sbb movabs jp rex.WRXB in fnstcw fldt sub rex.RX rex.WXB or jrcxz mov (bad) xor int mov or shrb in fmuls rex.X fsub pushq in push rex.RX cltd rex.RX rex.XB cmpsl and sub push (bad) push mov jle mov popfq adc insl jle,pn adc mov and jrcxz outsb and sub jns add sub push (bad) (bad) xor sbb (bad) add adc fs test sbb sub mov jae adc or (bad) and add jl mov std mov jrcxz pop mov and jbe xor adcb imul pushfq ja mov es push mov fadds out lock imulb jno sbbl adc stos xlat xchg xchg mov enterq std movabs loop iret rex.B xchg cmp adc sub sub repz jrcxz add (bad) rex.WRX add jo (bad) test xchg imul rex.W sbbb rex.RXB mov pop push lods jno ds sbb (bad) lock xor out cmp movslq js sub or add shlb rex.WXB movabs repz adc jp (bad) lea sbb pushq pushq frstor int3 leaveq jne and lret sub std cmp adc (bad) rex.XB fwait lock xchg pop xor rex.W mov scas rex.WX sbbb push callq (bad) cwtl outsl icebp pop (bad) imul rex.WB xchg cld in sub fadds xor (bad) xor fldenv push outsl (bad) sub (bad) mov jns ds (bad) mov nop rex.XB rex.XB add ss jo sbb sub ja (bad) push (bad) je andb rorl sbb stc xchg add shlb xorl js xchg jo push loopne sbb mov test out xor callq xlat clc callq xchg gs out clc movabs inc or frstor cmp outsl cmc fildl lock xor cmp or pcmpeqw cmp repz rex.W sub imul out in or cs adc mov cmpsl adc cmp cmpsl adc rcll sub rex.X push (bad) rex.WXB mov add rex.RXB lahf add iret sbb add mov (bad) out mov (bad) jo std loope sub enterq loop (bad) notb cmc sub (bad) jne sbbl xor push xchg fnstcw jmpq push hlt (bad) sbb rcll jne mov cmc (bad) adc push and rclb rex.W loop (bad) adc fs loop (bad) jb pushfq (bad) callq push ror sbbl int3 push sbb xlat stos sub xchg lret fsubrl rex.W (bad) lock (bad) (bad) mov out jno mov stc add push or ds movslq outsb (bad) in rex.WRB rex.WXB fwait or cmp mov xchg sar jno mov mov loopne cld mov cmc lahf cld rex.WRX rex.WR out jmpq jo (bad) (bad) mov jno xchg pop jbe sarb divl imul pop or rorb fs mov xchg sbb imul jg xchg sbb int3 or hlt sti mov add mov xchg int mov hlt sbb rex.WRXB jno (bad) popfq lock mov push sbb add fisubr cmp loopne add rex.WR movslq adc mov mov adc add divb mov xlat sbb pop sbb (bad) lock push mov (bad) repz (bad) add data16 add pop or rex.WRB movabs sub add or push xchg adc (bad) rex.W je sbb sbb rex.WRB outsl rex.RXB rex.XB push test (bad) push sub cli jno iret cmp movsb stos sbb jge in jne (bad) rex.WB mov loop int xchg (bad) sahf push rex.B pop leaveq xchg add mov pushq add xchg (bad) fs (bad) leaveq (bad) add xchg or push xchg xor cmpsb xchg (bad) cmpsl pop or adc imul jmp and rex.XB fwait adc rex.RXB std out jg ja or out test xor test xchg fwait mov js pop mov mov xchg repnz (bad) cli movsl cmp sub rex.WRXB or jmp in mov push xlat xchg jns or in cmp adc xchg jg test cmpsb fnstsw adc pop fcomp xchg or mov or pushq (bad) xor rcrb repnz nop rex.WXB rex.RB rex.W js sahf xchg sub fimul lods pop (bad) std cmp (bad) repz stc (bad) or movsb mov and fnsave (bad) sbb lea (bad) (bad) and lods (bad) sbb fiadd rex.WXB (bad) adc test push adc repz lock (bad) rex.WRXB and retq mov lea (bad) (bad) adc cli int fwait mov adc push (bad) xlat jrcxz adc (bad) cmovb fldl enterq push and mov sbb push or repnz jmpq insb fucomi test fwait (bad) mov stc addr32 rclb (bad) (bad) (bad) outsb fucomi rex.B xchg fwait push fdivl testb lret mov iret adc rorl cld std pop (bad) (bad) cld rex.WRXB pushq or xchg jb retq test (bad) and imul ljmp (bad) notb sbb xor cli jae outsb rex.B outsb lret out push leaveq (bad) fcmovne loop mov test add rex.WXB mov clc (bad) mov lret int xlat rex.RB data16 sbb out add rex.RXB xchg in mov (bad) jne std cmpsl (bad) (bad) imul mov cwtl xlat adc popfq outsb mov (bad) fist scas (bad) scas add ds sbb nop add sbb sarb fmul or adc cld icebp (bad) xchg (bad) xchg rex.WXB (bad) rex.R mov jle jb push cmp out cmpsl mov (bad) and cs retq lahf imul push in and xchg or (bad) xchg rex.WRB cs movabs pop xor sbb movsl mov and loope push (bad) adc sub pop repz repz lea (bad) shrl cltd movabs or mov cmp in int rex.RX sarq out movabs mov push (bad) sbb mov scas outsl xchg rclb xor rex.WXB rex.WB add mov (bad) rex (bad) add sbb scas movsb pushq add push imul pushfq mov movsb add outsl fdiv jne sub sti rex.WB push rex.XB cmp mov fiaddl jno mov fwait rex.WRB jae jg mov (bad) rex.B sti xor lods (bad) sar fwait jae sbb (bad) test lock mov mov (bad) sbb movabs add push add push cmp xchg push rex.WXB mov (bad) jbe xchg mov or mov xor (bad) decb jg addr32 rex.X divb int and mov cs pushfq adc (bad) (bad) xchg push (bad) iret push jno sbb cmp and movntps movabs mov rorl (bad) rolb rex.WR gs add adc xor push int3 sub rclb mov fimull (bad) and enterq mov add (bad) (bad) jg or jne (bad) callq xor hlt hlt callq adc (bad) mov add xor fidivrl mov (bad) adc roll sbb (bad) repnz rex.W rex.WR (bad) repnz rex.WRX pushq rex.RB adc (bad) jo callq test push (bad) mov lods xor sbb (bad) mov mov ja xchg xchg jl xchg loop (bad) repz lret mov rex.W (bad) and int3 and xchg rex.WRX jb add repnz jg pushq (bad) retq mov sahf fsub je test (bad) fsubr or je rorb or sub fsub rex.X lock out jne (bad) cwtl jrcxz xchg adc movabs out xchg (bad) and fsubl test fsubp out int cltd in (bad) add jg cmp push rex.WB sbb mov sbb iret adc subb icebp (bad) in fsts xchg (bad) repnz and push in fwait lock enterq in rex.XB enterq in or mov and mov fwait loope xorl cmpsl mov (bad) lea jb (bad) nop mov out sub xor push rex.RX out or imul adc int3 (bad) sbb adc rex.RXB cwtl cmp cwtl (bad) test lods cmp or sbb out add (bad) rex.RXB (bad) je sbb adc jrcxz loop es notl iret sti mull adc sub sbb cmc test (bad) test pushq mov adc add jg sti repnz enterq scas rex.XB int3 mov jmp push (bad) (bad) add pop rex.WRX rex.WRB repnz movabs mov scas (bad) (bad) (bad) rex.R cmp jle movabs sbb xchg int int and ja (bad) mov and mov (bad) (bad) add push (bad) sti insl add (bad) (bad) callq (bad) repz (bad) jno xchg (bad) rcl push cmp pop rex pop cltd (bad) mov mov adc xchg (bad) adc hlt or sahf rex.WRXB ror out mov loopne out insl retq lret jge sub loope (bad) fsubrp rex.RXB cli xorb cmp repnz xchg imul or push test in (bad) std or fs (bad) int3 and xor cld sbb (bad) loope or out fcmovne xchg mov rex.R pop xor sbb fimull jmpq cli rex.WR or outsl hlt (bad) (bad) adc sbbl jbe rex.WRX rex.RB (bad) and and rcll (bad) test adc cmc out xchg rex.X push repnz fiaddl (bad) (bad) jne sub push (bad) test sub fdivr scas in cmpsl rcrl ja rorl fidivr rcrl movsl (bad) sub push sub (bad) (bad) rex.WXB pushfq push movabs (bad) outsb lods xchg lock ds mov or out or jmp in mov add mov or lea mov cmp cs scas lock mov in jno push stos insb xor rex.RX (bad) or jbe pushfq lods loop and and add jmp mov mov adc addl or imull lods mov mov and or cmp (bad) xchg data16 mov (bad) (bad) and and test (bad) shlb mov shrb mov sbb ror push (bad) adc hlt sbb hlt clc cmc enterq (bad) test callq imul xchg mov jrcxz shr (bad) cmc add rex.WRB mov rex.X rex.W and movabs (bad) pop fisttp (bad) rex.WB pop pop jne test imul sbb push movabs rex.RB push lret cmp xor repnz ss mov cmc push (bad) jnp (bad) xor je mov push sub and jl ds idivb add jl jl lock rol adc cmp leaveq jne add shll rex.WX sbb mov repnz hlt push retq out jno xor xor sub int3 (bad) adc xchg (bad) cmc repnz mov xchg mov sbb mov (bad) mov or (bad) mov out cli (bad) retq add fwait adc loop (bad) xor rex.RB mov cwtl mov test xchg mov fsubl (bad) test stos (bad) (bad) in jge (bad) test test (bad) lock xchg rex.WRXB rex.B xor pushfq int3 imul clc (bad) adc lock (bad) mov xorps add (bad) cltd add cmpsl mov orb hlt test rolb add sub push cli xorb idivl lahf lahf or addl rolb out jne xor adc jne push js ja callq pop sub jg enterq jmp leaveq sub in jg es xor cmp or orl rcl or sahf roll sub rex.WX rex.RX xor xor (bad) movabs lret rex.WRXB mov icebp xlat jmp rex.WRXB lock movabs rex.WR je cmp lret cmp or insl add lret (bad) mov cs rex.WRXB pushq (bad) add rex.WB (bad) mov (bad) sbb push mov and stos shr xor cmp push (bad) or divl or rex.WXB testb (bad) mov jrcxz pop cmp push (bad) jrcxz xor enterq (bad) rex.WB or pushq rex.WB mov (bad) lahf or rex.WRX lock (bad) out in push test xchg jrcxz scas jl es jmpq sub lock fstps add cmp rex.XB jbe repz mov lods (bad) int push push add cmp add cmp mov int3 iret rorb mov out (bad) pushq (bad) mov movabs sub bsf iret cmp (bad) lret jo movabs mov xchg xchg (bad) iret adc rex.XB mov fimull lret out fs rex.WB fldt fadds in and sbb cli adc cmp sub gs or test cmp hlt imul and (bad) movabs mov mov jl shr retq (bad) adc out jb or (bad) pushq rex.WX (bad) xlat (bad) movabs fdivl fwait notb rex.X mov (bad) je rex.XB int3 mov mov (bad) (bad) (bad) push xchg jne es lret fiadd pop (bad) mov (bad) jle add (bad) pushfq cmp jbe hlt loop xlat imul rcrb mov jmp rex.WXB sbbl jrcxz mov movabs or rex.WX lods xchg sub mov and sbb push sbb nop or or je js xchg sbb add adc jmpq push or jl mov adc (bad) test addr32 (bad) mov mov shrb jno or rex.X movabs mov xchg rex.WRB (bad) in mov in pushq sub scas mov int3 (bad) mov movabs mov mov mov (bad) pop (bad) ds in cmpsb retq cltd test or mov (bad) movabs mov mov rex.WXB sbb (bad) xchg sahf clc jbe retq divl (bad) jmp movabs (bad) enterq iret xchg (bad) (bad) (bad) loop out xchg repnz pushq sub push and jne rex.RXB (bad) jb test (bad) pushq popfq dec (bad) cld mov rcll xorb mov movabs (bad) or rcrl push pushfq (bad) mov lods push out jmpq outsb cli enterq mov add sub rex.WRX insl lods (bad) fistl cmp cmc (bad) hlt data16 mov (bad) lea or icebp shl mov adc (bad) mul es movabs xlat and rolb (bad) (bad) (bad) adc mov (bad) ficoml mov or rex.WR xor rex.WR rex.XB ror test movd cmp pop and push rex.RB rcll adc (bad) icebp hlt popfq data16 movabs add data16 (bad) popfq (bad) adc push insb nopl mov jl (bad) or mov imul in je (bad) repnz or jmp or sar or rex.XB mov (bad) js (bad) and fs (bad) insb test or or (bad) cmp xchg cmp jmp rex.RXB imul (bad) xchg lret (bad) or lcall mov rex.WB (bad) adc add add jno gs imul or xchg out lahf mov (bad) xor rex.WB rex.XB adc repz add movabs rcll or repz sbb jne fistl jp (bad) push gs (bad) (bad) jne cmpsl mov cld loop test (bad) insb int jmpq (bad) popfq and xchg jne pop push clc fildl mov (bad) std fst jne imul xchg xchg sbb add hlt jrcxz test ror (bad) pop div and cltd adc rex.RXB add idivl in sbb gs cltd gs (bad) rex.RXB or push outsb std hlt vpmadcswd or cld mov cmp enterq pushq (bad) fdiv adc add sbb pop sbb fstl (bad) mov add push pop imulb or rex.X lahf (bad) int3 add (bad) add mov jne pop (bad) push pop rcl fwait xor (bad) (bad) (bad) (bad) add movsl xchg sbb or rolb sbb mov (bad) (bad) cmp fwait out jp or cmp rex.WR add mov jo xor rex.X leaveq lock in mov jae,pn mov rex.RB nop mov rex.X xchg and xlat popfq imul (bad) (bad) xor (bad) ss push jl rex push mov or push jbe xchg mov divl (bad) cmpsl adc in icebp mov movabs stos jbe xlat iret mov (bad) imul or (bad) xor mov (bad) cld out mov popfq mull mov sarl add xchg loope cmpb or cmp shr cmc push xchg mov and cmc and jne repz std pop jb outsl xor jae cmp sbb adc movsl test add (bad) add push adc (bad) loop adc pushq decl or jo cmp sahf (bad) mov int3 shrl loop or xchg callq lock push xchg fs adc rex.RX xlat xor hlt cmp xchg insb (bad) (bad) xor rex.RX (bad) mov add popfq movabs lods pop mov mov mov loope gs and mov push mov out mov je xchg ror loop mov pop pop rex.XB rex.WX sbb jmpq push cmp add imul or push (bad) (bad) (bad) adc hlt jno mov rex.B imul sub repz cmpl iret rex.R movsb (bad) or (bad) movabs add lods jae ja (bad) and rex add or leaveq sarb in push push jg xor (bad) (bad) xchg (bad) push xor rex.B mov shrb and or enterq (bad) lods std push mov mov sti (bad) jno sbb cmp out or xchg xor jrcxz xchg rex.RB rex.WXB in out out cld stc (bad) repnz repnz stos xchg rex.WRX push push test sbb mov pop (bad) (bad) mov (bad) pop ja imul rex.B scas data16 cmp jno mov lods insl movabs fnsave add mov enterq decl movabs (bad) movabs es or int3 mov pushq mov or callq mov rex.WRX rex.XB rex.X sub mov mov jrcxz jg rex hlt loop (bad) int neg int3 callq retq adc cltd (bad) jge retq imul hlt adc loop rex.XB lock scas fs (bad) xor jno insb adc fcom push in rex.B or out cs retq rex.RXB rex.XB (bad) (bad) mov cltd sarb fidiv scas sbb pop and rex.WR push cld lret fistl add in out repz je lods pop cli add adc adc push insl decb xchg test add add addb (bad) jmp rex.WRXB adc int add (bad) mov retq (bad) sbb mov fcmovbe rolb iret mov mov mov cmp rex rex.WRB mov ss jns and and fiaddl adc mov pop (bad) int3 lret or xor add xor int3 int3 mov xorl cltd xor mov xlat (bad) sbb xchg divb jmp mov mov (bad) mov (bad) adc insb xchg jo movsb pop mov retq adc sbb rcrb mov test or sbb push jne xor xchg or scas retq cmc add and push mov mov pop js clc scas fwait or and sbb sbb pop (bad) (bad) stos (bad) mov rol xor sbb testb adc je (bad) (bad) xlat rex.XB movabs mov test pop int (bad) mov hlt gs (bad) cmpsl (bad) leaveq in cwtl lahf callq (bad) mov push rex.XB loopne rex.WX loop adc rclb callq adc (bad) jrcxz loope xchg (bad) fistpll pop jp xlat jne xchg rex.R es mov mov (bad) xchg hlt fsts add push mov std sbb mov mov xchg or sti (bad) insl jne movabs stc imul adc data16 add lret sbb cmp mov (bad) scas out mov cld jg ss lods pushq and or mov xor cmp nop mov and add movabs movsl test outsl xchg es adc fstl pop rex.WX rex.X lods shl mov cmc adc mov cmp or add rex.WR hlt mov xchg xchg push and orb adc scas icebp rex.WRX insl add mov lret jg roll (bad) movsl (bad) insb retq int3 leaveq mov or leaveq rex.RXB repnz push rex.WRXB movabs (bad) xchg lods and sub jne (bad) xchg rex.WB movsb js cmp xchg mov sbb jg jg adc or rex.W retq adc xchg scas repnz sbb lea (bad) or adc mov loop add add rex.R xor (bad) mov (bad) sbb cmp mov mov sbb (bad) stc xor (bad) rex.RXB movabs (bad) fsts retq push adc test (bad) jmpq sbb rex.WRX rex.RXB rex.B fdiv std lods add test pushq mov adc sbb test cmc fmuls leaveq pushq mov insl push pop rex.WR pop jne rex.WRB callq xor push jg (bad) (bad) lods adc xor xor (bad) cmp stos (bad) lods mov sbb xlat fstpt jno xorl jne mov (bad) (bad) sub gs and mov rex.RXB cmpsl (bad) (bad) add in pushq retq popfq ds subl (bad) movabs scas (bad) or repz jmpq rex.RXB rex.WR (bad) (bad) lods or or rcll sub lods fdiv sub (bad) lock in test adc leaveq ror fsubrl in or test xchg (bad) cmp ja mov pop mov jno stos callq mov hlt rex.WR rcrb shr or (bad) or (bad) ja rcl (bad) ja cltd xchg pushq push retq jno add mov fnop mov ss rex.B rex.WB xchg rex.W cmp fldenv pushq lods mov sub (bad) int3 gs xor gs (bad) out adc lea cmp adc add (bad) notl jae adc or movsl std add clc movsl (bad) test rex.RXB or out mov movabs xchg or (bad) jge mov ja loope or mov repz sbb (bad) (bad) pop pop jae xchg or xchg (bad) adc in in shl rex.RXB sbb mov mov (bad) mov sbb cwtl (bad) mov (bad) mov insl mov movabs test (bad) cmp (bad) jns outsl mov retq movsl js cmp int3 (bad) mov repz stc out pop lods (bad) cmpl pushq sub test add repnz pop add or outsb fstl pop jbe adc rex.WRXB scas xor rex.WR callq adc (bad) and clc xlat and (bad) and xchg (bad) movsb jno loope rex.R gs mulps cltd rex.WRXB clc enterq leaveq add adc retq lret in rex.WXB std add (bad) jne or cltd stc jmp or jne movsl add scas imul (bad) jrcxz pop lret add rex.WR (bad) rex.XB add and movabs jmpq add movabs (bad) mov stc adc notb jne (bad) test and adc movslq cltd int3 jg lea cmpsl adc (bad) adc rex.XB jrcxz xor sub xchg in fs loopne and or add int3 or lods (bad) fstps jno sub mov (bad) (bad) push push jrcxz mov out jne sbb out sbb cmp xor idiv push bnd (bad) jne rex.W rex.B push lret adc cmp repz (bad) nop jns jo lret sbb icebp pop movabs xchg stc je or (bad) cs (bad) (bad) sahf cmp retq (bad) test je (bad) and jge adc in (bad) hlt sub mov and int in rex.WX hlt frstor leaveq stos out callq cltd (bad) (bad) xor add cli (bad) clc (bad) hlt retq icebp cmc leaveq (bad) or rex.WR add rex.WRB in or (bad) add rorb cmp push rex.WXB imul (bad) xor (bad) mov fcmovne add in rex.XB add rex.WRX xor rex.RX jo movq (bad) rex.RXB cmc (bad) add (bad) (bad) and (bad) imul icebp mov stc sbb loopne (bad) (bad) jl jae sub add stos sbb (bad) callq rex.WRB (bad) xchg mov int3 scas pushq orl (bad) xor mov jg (bad) or pushq (bad) cmp xor insb rorb std jne mov xchg push rex.RXB sbb ftst sbb sahf adc jno ficompl pushq adc shr (bad) movabs in cltd xchg repnz retq (bad) pop lahf jno jo sub in and or cld cmc sub mov add push sub js retq cmp ss test rex.WRXB mov sbb mov mov xchg leaveq std insb fwait cld out jne push (bad) sub mov mov sbb push popfq mov adc adcl mov xor fisubr fs scas (bad) stos jrcxz jne sbb xor jns (bad) lret int and rex.R jbe or sub pop mov xchg add insl add (bad) rex.RXB imull scas xlat in movabs test xchg fisttpl adc sub adc (bad) pop (bad) or cmp push rex.B rex.WRXB xchg std pop frstor movsb pop hlt nop (bad) jbe outsb fldenv repz lock mov nop out fcomi retq mov pop rex rex.WXB (bad) jrcxz ja xor xchg push pop (bad) adc (bad) adc repnz jne pop rex.X imul (bad) adc test cmp loope (bad) rex.B jmpq fimul rex.W loop int xchg (bad) scas mov (bad) add rex.X stc xchg xchg rex.WRX jo and mov callq add add insl jne mov xchg (bad) (bad) xchg (bad) jns xor cmp push rex.B push push lahf (bad) rclb shrb std pop lret push xchg rex.B outsl retq es push out icebp callq rex.R rex.WRXB mov (bad) lret sbb std cmp or pushq faddl cld and js add xor rex.RX (bad) out adc mov and adc push mov sbb cs xchg xlat pop test sub adc data16 loope sbbl rex.WRB xor rex.RB fnstsw (bad) or fwait shr push insb pop test xor xchg xchg stos (bad) cld or movsb (bad) lgs js (bad) (bad) es (bad) fisubrl push stos es xchg (bad) popfq out ja mov (bad) (bad) outsb rex.W fimul je test stos (bad) bnd movsl scas and xor (bad) sub shrb xor rex.XB rex.RXB mov (bad) outsl sbb cmp rol (bad) (bad) mov vcvttss2si cmpsb push fmull mov adc add cmpsl stos fdivs mov or rcll (bad) and adc push icebp (bad) rcll stc rex.RXB (bad) retq rex.WRB push repz (bad) xlat icebp (bad) cmp push retq or (bad) sub xchg xchg (bad) sub xchg xor (bad) (bad) (bad) icebp mov add (bad) (bad) (bad) out (bad) cmp insl adc and je fisttpll rex.XB adc pop jle pop rex.XB or (bad) stc sbb (bad) xchg movabs push prefetch int3 xchg mov (bad) adc loopne imulb cmc cwtl push rex.RX xor (bad) adc cltd mov imul lock cmpb (bad) push mov add mov xor jne jne jmp or rex.WB jae lret sub xor (bad) insl out mov xor in jg ds rex.WRX hlt loope or (bad) in sahf sti callq test out (bad) xor scas adc pop pushq xchg fildll xchg (bad) int lret lods cmp (bad) cmp (bad) jne sbb test std cltd (bad) adc sub (bad) xchg rcll mov iret (bad) cmc retq adc adc (bad) imul jbe and xchg adc pop (bad) adc mov in add je pushq or jo sub int3 cs in rcr fidiv leaveq xchg cmpsl bsr pop fimull lock xchg xor mov xchg (bad) (bad) (bad) (bad) mov je adc outsl in stos movsb add gs movabs mov ror xchg mov movabs cmc (bad) push (bad) rex.XB (bad) (bad) mov pop nop rex.WRB movslq sub (bad) cmp cld sbb jne test iret xchg iret int3 scas xchg in pop jmp pop fidivl (bad) sbb pop rex.RXB decb cld stos or rex.WR or or sub fldt lret rex.W adcb (bad) int3 jne xchg sbb push in (bad) rex (bad) hlt rex.XB push rex.XB ljmp loope jae rex.WRB iret jne (bad) in xor (bad) gs es (bad) (bad) (bad) adc ds jmp sub (bad) jne push fdiv (bad) callq hlt (bad) rex.WXB sahf push movabs out stos xchg and movabs (bad) cs xlat mov add std and (bad) test pop push jo test iret jb adc enterq (bad) (bad) jg (bad) stc cmpsl rex.WX icebp lods jno insb sbb cmp xor xchg cmc and jmp mov retq or mov rex.WRB fldenv jnp out rolb mov pushq test movabs shrb repnz xor fnsave rex.RX or xchg xor je xchg (bad) in sub jle stos adc fsubl xchg add push test jno adc or cmc (bad) rex.RX rex cmp (bad) xchg adc or movsb hlt pushq xor scas (bad) (bad) movsb (bad) jne (bad) or (bad) lret cltd insb (bad) pop retq and lret adc mov (bad) xor mov xor xchg gs fsubl hlt xchg jl rex.WR callq loope (bad) fwait (bad) push jno rol callq int3 add xchg mov fldt jrcxz rex.X push mov leaveq fldt scas test mov push add enterq loop adc xchg addr32 (bad) (bad) adc fstps adc sub loop addr32 mov adc xchg lods ja ffree mov lahf (bad) mov mov adc rex.WR and rex.XB int3 jne (bad) icebp add (bad) sbb int3 mov mov jne mov (bad) imul mov mov (bad) pop cmp movslq xchg jb cmc mov xchg imul sahf (bad) jbe clc jne xor rex.WRXB sti stos pop js cmpsb sarl (bad) (bad) rex.WRB repz and std cmpsb push repz data16 rex.RXB adc hlt xor fwait out rex.WX retq (bad) lock cmp out push jrcxz sbb (bad) or push push add cmpsl (bad) (bad) push (bad) in sub lea jp mov test insb repnz (bad) jbe repz xchg sahf xlat mov je jmpq ror es fadd xor movb movsb (bad) (bad) mov lea (bad) (bad) hlt (bad) fstl cmp cmpsb out imul rex.RXB mov xor callq jmp pop jb notb loopne shlb (bad) mov imul mov shlb movabs (bad) stc sbb cwtl mov rex.WXB (bad) cmc (bad) (bad) leaveq cmp movsl gs cmp movabs and mov data16 fwait mov je xor fmuls lret mov mov andl (bad) cmp es mov fildll mov sbb jmp in or (bad) mov (bad) mov int3 or cmc adc rcl enterq shr add xor sbb callq cmc pop jae fs shl (bad) xchg js or sahf (bad) mov push and and insb out (bad) je icebp sbb (bad) mov rorb outsb adc (bad) xchg ror repnz rex.WR cmp (bad) (bad) rex rex.WRB rex.WR addr32 sbb callq sub push sub ror (bad) imul sbb pop mov xor repnz sbb fmul movb jbe xchg xchg loop hlt mov mov xchg lret outsb mov cmp imul add cld or jne add stc nop rex pop js imul lret movabs (bad) loope jrcxz xchg out jne rex.R or pushq rex.WX jmp or in push xchg (bad) rclb mov (bad) jne adc (bad) mov jbe (bad) adc (bad) mov and fadd rex.WR out test jo pushfq stos movabs jmp jb xor stc (bad) loop sub jne,pn adc rex.WRX xor xorl mov in sbb stos movslq pushq cmp jg sahf xlat or xchg xchg rex.RXB js rex.WXB add pushq fistl lock rex.RXB xchg js or fdiv jne rex.B je test cmp retq or imul rex.WB cltd and (bad) je adc (bad) (bad) repz sbb xor push jbe and leaveq loopne mov adc adc xor scas xchg jp xchg xchg int adc rex.XB mov mov sbb in callq adc adc out cli sbb out rex.RB (bad) (bad) int3 adc (bad) (bad) sub repz add fs and lock sub fsubrs pop lea in adc sbb lret lret test stos lret fcomip (bad) mov scas add (bad) or test (bad) shlb adc add or fadds outsl push pushq mov push movabs (bad) ja adc mov mov sti rex.X loop adc insl mov std sti (bad) sub fucomi js xchg (bad) xor mov add (bad) xor xor sahf sbb xor jp icebp rex.XB mov (bad) in cmp mov jne jrcxz sbb push sbb lods mov xchg subb rex.RX retq push leaveq shrl push stos testb cmp and (bad) movabs jmpq out (bad) sub mov jne idivb test shrb movsb gs outsb cmpsl (bad) icebp xchg rex.WRB jne jno xorl lret (bad) imul (bad) imul (bad) setle rcrl gs cmp cmp adc in (bad) rex.RXB or pushfq mov jne repz cmp loopne enterq cmp jno rex.XB div or (bad) jmp hlt mov xchg clc rex.X sub fcoml icebp xchg add rex.XB rex.WB rcrb clc repz xor (bad) rex.WXB rcr rex.RX out jp scas xlat xchg shll (bad) (bad) mov adc and jno in std movsb xlat callq mov ss hlt (bad) adc stos adc cmp gs mov fisttpl lock pop sbb (bad) enterq repz (bad) (bad) je mov mov rex.W push mov outsb in fnstenv cmp cmc or or (bad) push (bad) (bad) in rex.RXB js pop adc int3 or insb xchg fild movslq jrcxz movabs jo (bad) outsl xchg rcl fdivrl hlt out xchg jo int3 adc xchg mov jmp rex.B out rex.WRB xchg adc (bad) xchg adc (bad) decl xchg in insb cmp xchg insb out (bad) jp (bad) xchg adc insl enterq jne xchg js fcmovnbe divb mov mov (bad) test jnp ss shrb xchg mov (bad) retq orb test movabs jle test rex.WRXB rcrl rex.RX xorl jp jrcxz add loope rex.WX xor fistp adc (bad) adc mov (bad) or loope test scas or mov rex.RB add (bad) loopne sub movabs out sahf pushq sub test (bad) mov scas rex.WRB xchg jno cltd scas add insb jmp rex.WX movsb and loopne mov rex.RX in xor cld jl jmp mov lahf (bad) (bad) (bad) in xchg xchg mov repnz paddusb xchg cmp rex.RXB movabs rex.XB pop pushfq sub shll jp xchg sahf xchg and (bad) mov add out adc adc lods imul (bad) in sbb jg (bad) or imul pushq mov mov (bad) loop movabs mov test iret mov out sbb ja (bad) in jrcxz pop (bad) sbb loop and rex.WRB sub jrcxz jne imull cmp add subb add mov sahf movabs mov iret mov stos repnz or scas movabs test add std rcrb mov ja lret cmp (bad) pop rex.W xor std pop jrcxz repz adc or rex.B repz enterq mov rex.WX fcoms in sub pop xor imul mov hlt stc out hlt sub test (bad) imul shlb enterq sar or rex.RXB repz xor sub out add sub fs (bad) rex.WRB fcomps shr repz es imul lock pop repz imul flds pop (bad) jrcxz cmpb xor out in fdivr jp rex.WRXB testb fucomi and (bad) sbb mov std or rex.WRXB js nop (bad) (bad) sarb pop cmpsl and push imul and int3 pop adc pushq (bad) (bad) (bad) jmp (bad) rex.WRXB xchg jl jne imulb pushq nop out mov repnz jmpq addl in add int3 (bad) scas repz int3 mov mov mov out (bad) rex.X (bad) icebp cli retq xorl xchg (bad) adc sub xchg mov xor in jns rex.WRXB rex.W insl (bad) rcll jbe movabs and rex.XB and test jge rex.WB rex.WX or ds fs rex.R sbb or rep mov fwait (bad) popfq xchg mov or mov movabs jrcxz movsl rex.X fsubr cmp out cs sti and fdivs (bad) js (bad) cmc rex.RXB rex rex.XB imul sub (bad) mov fisttp jl in cltd sbb or rex.WR (bad) fs pop rcl pop imul rex.RXB fs hlt mov (bad) fwait xor sbb (bad) test test jle rex.WR xor (bad) mov mov or notb andb mov (bad) (bad) xorl or movabs xor loop sar imul mov clc push rex.R mov xlat mov leaveq adc hlt je lock jge js rex.WRXB dec shrb rclb loop loopne rex.R rex.X (bad) pushfq (bad) add adc sub rex.RXB (bad) adc rex.WRXB rex.WRB (bad) paddq cmp and or fist sbbl fdivr (bad) mov fcoms add js out lahf cmp (bad) add (bad) sbbb sub or fldt xchg in (bad) jmp nop mov rex.W pop rcrb jo mov (bad) (bad) sub movslq (bad) cmc jns mov outsl adc or out cmpps (bad) fdivrl (bad) xchg (bad) rex.B in cld outsl mov add (bad) fs je adc lret nop cmp sbb adc (bad) cmpsl in in fs cmc nop js (bad) jne insb clc jle cmp sub fmuls stos mov sbb (bad) pushq (bad) movabs xchg xchg movsb push (bad) add cs sub in or (bad) sbb fiadd mov lods rex.RB mov rex.WRXB repz mov rex.RXB pop push sbb rex.R xor cli jo hlt test out fst jne pushq in push in jmp sub nop lahf callq iret pushfq jne roll shll (bad) rex.WRB subl xchg sub (bad) and es lods rex.WRX (bad) or xor rex.RXB test xchg loope fiadd mov pop scas ficom cmp test mov (bad) movabs pop testb pop and shrl (bad) rex.W xchg cld add notb enterq xchg xor (bad) jl fsubs (bad) xor xlat (bad) sub lahf in (bad) (bad) sti test xor and test mov insb scas roll movsl outsl (bad) neg xor std stos (bad) adcl imul (bad) stos nop rex outsl mov xor iret add sbb adc sbb lock callq shl xlat mov loope (bad) insb rex.WRXB add mov lret xchg pop add cmpsl imul out xchg xchg or (bad) jl adc (bad) mov je pop (bad) pushq push in or out shlb jrcxz sub and in push divb xchg out leaveq adc rex.WXB (bad) sub (bad) (bad) xor (bad) mov movsb rex.WRX and push mov (bad) mov push sahf jp push imul adc addr32 rex rex.RB rex.WRB movsb jno jl popq (bad) test xor sbb (bad) pushq sbb cld or adc loopne scas cmp clc retq enterq (bad) adc or cmp sub (bad) fsubl rclb ja data16 xor xlat std or push (bad) add roll cld or jb ror scas movabs (bad) int xor sbb (bad) mov add in lods jne sub shrd test in (bad) adc add je retq xor lods mov iret leaveq (bad) adcb mov and rolb in jno (bad) test sti nop add xor (bad) retq repnz rex.W lock add mov xor nop adcl out jmp sub nop lods (bad) mov hlt or (bad) int3 mov test (bad) int push jo rex.X int or (bad) add (bad) movabs xchg test pushq lods xor add add (bad) leaveq xchg jg js cltd mov xlat rex.WRXB out jrcxz fwait (bad) mov sbb pop and and ror out sub mov (bad) test push mov repz pop jae mov lock (bad) and (bad) push lods lret imul or (bad) (bad) pushfq popfq mov (bad) sub rex.WR jrcxz xchg push imul fcoml rex.RX jne xchg (bad) (bad) mov add xchg sbb (bad) movabs lods pushq pop jmp push enterq stos ja (bad) and (bad) addr32 nop jrcxz pop jbe mov sbb insl xchg pop sbb xchg rex.B jp fldt (bad) rex.WRB test jge and cmp movsb add (bad) xorl adc rolb retq jne loopne hlt rex.XB (bad) sub pop xchg and sti fistl sbb (bad) outsb lods fistl sbb cmp xor rex.XB rolb imul iret in xor (bad) sbb push sub fistpl outsb jmp xchg ja jl lock adc outsb movabs mov push pushfq hlt add stc ds cltd iret or and movabs fcmovu adc or jl in rex.WXB (bad) ffreep testb pop movslq mov push nop std (bad) adc lods xchg gs adc mov xor or push jno jmp (bad) (bad) push jl cmc mov mov mov flds fistp mov add insb cltd test mov jno (bad) lods je fildl adc mov add cmp (bad) (bad) pushq ficomp fwait sub rex push add mov movsl repz lret (bad) sti addr32 lods pop pushfq mov (bad) cmc mov je cmp jne pop cmc rclb (bad) movsb mov jno rex.X xor jo in or int test xor insb sub in in hlt lahf or addr32 add pop insb jge enterq not out xor or mov (bad) adc out jo rex.RB clc jae and or adc sahf jl pushfq push jno (bad) notl (bad) std gs sahf out mov fdivp sub in xor rex.RB adc xor jb mov insb xchg xchg ror cltd callq or jrcxz mov (bad) cwtl lret mov fdiv rex.RB es test and add sub cmpl adc add (bad) (bad) mov imul add or xor cmp (bad) je add cmpsb fwait (bad) (bad) or rex.WRX data16 (bad) mov stos jbe adc and ja xchg (bad) nop (bad) jne add insb xchg or rex.WRB fs jne loope cmp movabs lret callq cmp rex.X fcmovb jae mov loope mov es fild sbb cs fwait (bad) xchg or jle fs sbb out (bad) and lret (bad) or (bad) add xlat push mov adc mov callq in mov sarl jne scas mov xchg nop jo (bad) lods rex.WRXB (bad) out cmp rcl xchg or in xchg sbb jp test out (bad) mov jl jl xchg rex.X add sbb callq xchg jmp xor repnz movabs lahf (bad) push movsb mov rex.WRX lock cmp jo (bad) sub loopne or mov rex.RXB adc (bad) jne mov movslq jbe rex.RXB rclb imul mov rex.W add xor (bad) or je movabs jae (bad) cmp out sub jmp lock xchg outsl imul cmpsl (bad) sub testl adc lret rex.RXB cmc jno nop (bad) jne push cmp scas std pushfq adc jmp retq push insb xchg lods mov js mov lret xchg (bad) add jb rex.WB rex.R lock outsb lahf mov fcompl jae shlb test mov leaveq rex.WRXB adc mov imul jg or sub (bad) mov (bad) rex.WX sbb push repz jnp jne fiadd insl jge mov xor (bad) nop add adc repnz sbb (bad) rcrb adc lods rex.XB rex.WB jge rex.WRX rex.WRB rex.X fwait test mov jne (bad) jno outsl xor rex.WX cld out sub enterq and (bad) add mov rex.WR jmpq movabs not rex.RXB cs xchg sub jmp jb pop (bad) push sti (bad) mov jmp (bad) xorb hlt cmp jg pop adc test mov rex.WB (bad) rex.W outsl repz mov iret rcl rex.XB int3 sahf lock repz cwtl xchg rorb xchg mov lods (bad) out idivl xor pop rex.XB (bad) adc jg lea cmp sahf xchg subl add shrl sub (bad) rex.RXB (bad) or or repz movabs (bad) ja or rex.RXB or mov insl (bad) cmc mov sarb callq idivb (bad) pop xlat (bad) test adc and push cmp or (bad) xor xchg jmp imul cmpsl enterq xchg lret out or (bad) rex.WRXB push (bad) (bad) mov jo pop xor in jp (bad) fdivs cwtl sbbb movsl insb mov sbb retq jmp jmpq or rex.X sbb (bad) (bad) (bad) sbb sbb cmc mov callq test mov cli and jle jnp (bad) popfq fld decb xchg sarb mov icebp rex.W rex.RXB pop jne (bad) out jnp clc or mov cs stos (bad) pushq (bad) xchg xchg mov (bad) (bad) movslq push fdivl fnop lock jge scas out xlat mov imul xchg movabs mov adcb add sub fildll cmc js mov insb pushq mov iret jnp (bad) js (bad) rex.RXB rex.RB out out loopne fsubl outsl adc adc (bad) jo add shrb test movabs out xor rcrb (bad) xor rex sti push add (bad) movsb xor xor add (bad) sub mov scas (bad) leaveq cwtl add sub movsl cmp (bad) psllw xchg (bad) rex.RXB and int3 (bad) data16 sbb (bad) orb mov fwait (bad) add xor (bad) adc test sbb insb jno push rex.X and or fs rex.X (bad) (bad) pop std mov rex.RB xor or jbe (bad) mov push jo adc adc or (bad) pushq imul (bad) mul xchg out xlat cmp lret gs mov imul jg fcomps mov js lock rex.WRXB es mov faddl test notl xor in pushq (bad) (bad) rex.RX nop mov ja mov mov fldt and rolb popfq idiv mov mov test add stos jne xchg (bad) mov je imul pop js addr32 fbstp adc lods (bad) jne fsubs cmpsl push stc pop setne mov lock rex.R xor rex.RXB sub lea pushq sub es int (bad) or cmp mov xor or repnz movabs xor neg xchg out (bad) js callq movabs repnz rcrb loop (bad) pushq imul or rex.WRX (bad) clc add mov mov mov rorb xchg bsf lahf rex.RB loopne mov test jae (bad) (bad) (bad) (bad) enterq push cli sub (bad) idiv (bad) imul cmpb lods mov jne (bad) xchg jmp rex.X pop sub out scas lcall xchg movabs sub (bad) test int pop mov outsb xor leaveq (bad) sbb sarl sbb adc jno mov int3 int3 loope add or callq int3 jns fimull mov xchg cwtl cmp xchg (bad) and mov jne and or (bad) xlat ja adc shrb lods add rex.R (bad) rcrl out sub fiadd int3 jp insb retq rclb xchg add add or mov movsl fwait xor xchg ss or hlt in pushfq xlat cmc adc and jle ja lahf jrcxz mov imul (bad) jne fdivs out cmpsl (bad) (bad) jne pop mov (bad) movabs ja fs jmp (bad) or add movabs cs sbb sarb test jmp mov addb cmpsl test xchg rex.R adc and or mov mov (bad) adc adc xor jrcxz (bad) rex.RXB or icebp adc hlt adc sti (bad) out in or cld xlat jo pushfq (bad) (bad) jle (bad) add adc (bad) rex.RXB insl jge nop xchg callq jno or movsb fwait int leaveq (bad) mov push (bad) rex.WRB xor adc negl cmpsl movnti (bad) rex.XB lea pushq adc rex.B insb mov pop or addb mov or repz (bad) or hlt out xlat imul (bad) out cld gs mov cmc cmp in add adc loope xchg xor xchg (bad) jbe sbb (bad) (bad) (bad) hlt (bad) mov clc out in out testb add rolb mov insb rex.WRB or or add jl int3 sti add movsb in mov movsb mov in (bad) xchg and mov pop jno retq lret insl std movsl rex.WRXB pop fwait out enterq push fcomps rex.WB cs adc loope cmp cmpsb and and rex (bad) (bad) jo cmp retq push cltd xor (bad) (bad) callq and mov add xchg or lock mov movabs in sub rex.RXB lock xor data16 adc or (bad) mov add imul cmc movabs jno xchg (bad) xchg or mov stc rex.WB or bnd mov sbb out (bad) in (bad) int jae ss mov pop xor push lock adc mov rex.WXB add (bad) xchg icebp or lret xchg (bad) xlat sbb mov movabs sarl lods movabs push jmpq rex.R out mov rcl sbb iret enterq clc std fistp xchg xor xchg stc (bad) cld xor jl push push and rex.WRB int3 jno fcmovnbe xor fstl callq (bad) sbb jmp mov (bad) in shrl (bad) add imul pushq mov in mov xchg push add jne rex.XB xchg adc rex.WXB lock sbb imul xlat adc jrcxz add (bad) imul jrcxz mov add (bad) loopne mov rex.B out mov or notl fdivp xor sbb cmpl xor (bad) unpcklps shll int3 in mov sbb mov add cwtl rex.RX sub lret push rex.WR or xchg (bad) xor mulb not cmpsl (bad) or add or mov mov gs add mov lock sub movslq or jno sub and jl (bad) in xor sbb (bad) stc movabs (bad) repnz xchg clc or mov lock sub test jae insl and ss rex.WR ss jo jmp rex.XB std xchg mov pop leaveq cmp (bad) (bad) sub adc (bad) xchg rex.RXB rex.W mov xor mov int3 jne cmp sbb notb stc lods add lret jne out lock (bad) adc shl jp sbb pop push bswap (bad) out jo xchg or adc adc out push adc rex.WR rex.WXB push je rex.RXB xchg loopne mov (bad) shl push imul mov leaveq lahf xchg add cs jns in int3 sbb fld push xchg jne xor xchg mov sbb pop xor mov loopne sub test mul xchg movl or gs retq stos (bad) xor insl loop nop rex nop in (bad) (bad) cmp pushfq rex.XB (bad) retq jbe sbb je pushq movabs je test imul jo pop ja icebp rex.B cmpsl iret or add cmp rex.X scas mov in out sub fisub fdivs lea repnz fs jle pavgb and or xchg rex.RX js xor retq xor mul (bad) xchg leaveq rex.RX rex.B icebp mov (bad) xchg or (bad) or rex.W rex.RXB ja jo addr32 xchg loopne cmp notb imul (bad) (bad) in movabs fwait add sbb and rex.XB (bad) adc retq lea (bad) jno (bad) or mov rex.WR or outsl cmp rcrb js rex.XB mov shr repz ds (bad) ds ficoml cmp rex.RB loop or out cli rex.WRB jae decl sbb int3 rex.R rex.WRX pushq jno lret adc rex.WXB out (bad) (bad) xchg (bad) repnz stos add loop sbb (bad) (bad) (bad) pop jb sub (bad) sti imulb mov rex.WXB add (bad) callq out and out cwtl jno xor xchg rex.RXB loopne mov pushq push enterq add (bad) or (bad) jno and xor rex.B lock xchg gs (bad) (bad) clc iret (bad) enterq mov lret add out (bad) insl jo fs (bad) rex.R lock sahf cmp and cmp rex.WB sub enterq callq mov jne add retq push xchg push (bad) xchg fildl (bad) je jnp mov pop add rex.RX (bad) jbe (bad) xlat jne icebp callq enterq (bad) (bad) stos imul xor rex.XB mov (bad) rex.W xchg insl sub int3 mov cmp lea sbb mov test sub hlt test jle rcr fidiv or add push (bad) movsb (bad) outsl jno fdivrl (bad) clc fstl (bad) lea sub (bad) jno in rex.RB (bad) lods (bad) xlat (bad) loop and xchg mov (bad) sbb gs mov (bad) jg rex.R cs mov xor (bad) add add or mov jl pop mov push adc cld loopne fistl (bad) add psubsb push sti (bad) (bad) addr32 loope pop cwtl nop pop adc (bad) xchg sbb rex.WRB push push fwait or lock sbb adcl cltd jo movabs adc pushq xorb cmp pop std pop rcrl adc pushfq idivl (bad) lods xchg clc rex.RXB out adc (bad) or outsl (bad) scas or cld rex.XB xor mov mov pushq mov gs not and adc xor movsb repnz sub cwtl jg adc jg lock adc fdivs push divb (bad) xor lret movslq adcl (bad) in mov jne add (bad) push (bad) sarl mov (bad) addl cmp xor (bad) add jrcxz or add mov mov push flds cwtl jne add sahf jmpq (bad) (bad) mov adc rex.RXB cld mov data16 jo (bad) or pushq cltd mov imul mov mov clc xchg adc cmp (bad) (bad) repnz loopne push mov cmp jbe es repnz add jmpq (bad) in adc (bad) (bad) in and mov add xchg pop rex.WX rex.RXB int3 (bad) rex.XB mov xor (bad) out mov hlt fadds (bad) or jne sbb add (bad) jnp lock cmp loope movabs rex.X rex.X or out callq in movabs (bad) test or mov jns add out retq pop icebp repz rex.WR cmp jo or imul rex.R imull and adc add sub xor (bad) mov jmp mov or or push imul callq in push xchg (bad) icebp and rex.WRB jmp rex.WR xor cmp jae je push lret jmp out icebp xor clc jmp negb (bad) add imul push xlat rex.WR movabs mov (bad) jne or hlt dec outsl mov or iret (bad) xchg xor fsub add jo movabs (bad) notb data16 jl pushfq ja (bad) push movsl iret jne rex.WRB cmpsl movsb std insb (bad) rex.W jle stos mov rex.WB rex.R push sub rex.XB enterq outsb (bad) in sub jo jne mov (bad) (bad) movsl (bad) (bad) out add sub pop cmc sub rex pop pmulhuw fwait rex.XB push xor jbe add cmpsb mov (bad) jmp xchg jns (bad) jmpq add rex.WXB jl movabs pushq xchg sar orb mov clc xlat sub mov jno (bad) loope lret jne movslq cmp in (bad) rex.WX in fmuls orl (bad) movabs xchg addr32 cld repnz adc neg test (bad) xchg clc in rex.XB adcb add jns cld add cli cli (bad) rex.WRXB nop cmpsl rex.WRB roll adc mov pushq jo rex.RX rex.RB insl lret add movabs push ss (bad) xor jb mul pause or bnd scas in loope test fbstp xchg fmuls push xchg jno insb (bad) (bad) test add rex.WR mov or or (bad) mov movsl push fwait repnz xchg adc fmuls test rep insb (bad) shrd xor sbb add (bad) not xchg mov push mov push jbe fstpl jo int (bad) pop (bad) in pop mov add adc std int cmc fstl pushq cmc push retq add adc pop jno movsl test in xlat xor jl adc sbb stos (bad) fwait jg sbb scas je loopne mov repz nop (bad) je (bad) icebp xor or cmpsl xor jns insb add sbb hlt jne int (bad) mov adc rorb rex.WRX in hlt add or (bad) jbe sub cmpsl or add mov xor xchg rex.WRXB test sahf imul js cmp adc jl adc idiv rex.WX and imul je mov int3 add mov sub rex.WXB je mov (bad) or rex.WR jno icebp push pushq loop scas lods push insb pop es xchg (bad) imulb ja mov mov test lea (bad) xor int xchg (bad) mov (bad) add clc (bad) rex.WXB jp xchg rex.WX clc xchg adc lods jno rex data16 out mov in test pop fcomps out hlt pop or fnstenv (bad) pop (bad) idivb rcl enterq enterq outsl mov lods cwtl (bad) xor out or cmovle (bad) xchg ror mov cmp sub fimull int imul out sbb imul jle scas repnz hlt stos repnz mov (bad) pushq jno cmp rclb sub mov adc jle repz mov sub fldt xchg mov rex.XB test xor pushq popfq movb stos pop cmp in adc retq mov outsb add int xchg (bad) stos hlt hlt xchg imul xor adc (bad) xor hlt push pop in add mov cmp jbe sub mov pop sub xor std sub fmuls adc rex.WR adc xor cmpb rex.WRX (bad) or xor sub add or sbb xor sub jno mov enterq adc mov xchg sub or and (bad) sub add fsubl rex.R (bad) pop add add adc popfq in add xchg movabs pop je shr or loope xor cwtl (bad) sub out fwait or shr cmp (bad) jno sbb rex.WRX mov fcoms xchg jg add xchg in stc jbe rex.RXB sub add mov fcomi rex.WR (bad) adc (bad) in icebp jg (bad) (bad) mov (bad) (bad) rex.XB stc loope sbb xchg js add or enterq (bad) xchg adc add xor sub std jne sub sub and lea loop adc adc retq jrcxz sbb xor add (bad) cmp (bad) adc pop icebp movabs lods cmc loop je add or jg xchg and jl jl or jmpq pop cmp jbe clc fdivs push fdivp cmp or and int3 (bad) and xchg sub xlat cld int3 repz mov rex.WB push test add pop pushq rex test imul lock (bad) rex.W mov and mov rex.XB mov fwait insl xor fwait (bad) (bad) mov lock fstps jnp imul add or in adc jne cli jb test retq (bad) adc int mov push jle mov (bad) loop movabs xchg sub rcll scas xchg loopne in imul mov maskmovq negl mov xchg (bad) jo jmpq mov jne xor cld rex.WR mov pop insl rex.WRB cmpsl cmpsl pop cld cmp (bad) cmp cmp xor adc outsb imul retq ja je and or push test push (bad) jne pop js retq add xor sub pushfq (bad) clc int rex.WRXB (bad) sub xchg rex.WX fnsave hlt or fsub int cmc cltd rcrb and sti jne enterq rorb loop (bad) push lret adc rex.RXB lods (bad) cmpb sarb rcrb pop enterq out (bad) jle adc sbb lahf lret sti stos imul cmp and out (bad) retq push (bad) add out notb push fucom sbb mov insb stc or sbb movabs sub and rex.WRX lock sbb in (bad) fisttpll mov pop rex.WRB in rex.X pushq sub mov xchg in cmp pushq xchg insb (bad) cwtl add cmp lock jno lock rcl sbb imul push in sbb mov xchg and mov jne es out or in lahf (bad) out hlt int3 add sbb jle mov cmp push shrb fcmovnb sarb sarb (bad) rex.RXB in cwtl (bad) cmp xor sub push sub imull lock jns (bad) and movsl jae cmc movsl rorl scas imul js (bad) add jne mov xchg sarb rex.WXB movsb add orl mov jle pavgw stc mov cld (bad) retq jo or loop (bad) jge rex.RX orb imul test hlt (bad) imul fdiv mov jmp jrcxz adc mov sar lock add scas rex.WR in cmp sub mov je rex.RX rex.WX mov stos sahf rex.RXB cmp lfs pminsw popq (bad) int cld test rex.WRX adc (bad) sub add repnz sbb ss js cmc (bad) ss (bad) mov add imul pop pop hlt and lret xor adc mov rex.WXB xor outsb pop scas adc xchg adc lret sbb rex.RXB insb push clc sub jl int3 (bad) callq jnp int3 mov js (bad) in xchg mov add jae (bad) adc mov (bad) mov lock clc repnz push xlat cli sbb xor cltd imul rex.RXB sbb sub pop push imul xchg pop out (bad) rex.W rex.RXB fsubrl je jo jg movsl cld mov cmp xchg (bad) xor (bad) (bad) insb addr32 testb jo fsubl rex.WR pop ficomp mov in jno push out rex.B (bad) nop outsb sbb pop rex.RB rorb pushq (bad) adc jmp mov (bad) out (bad) movsl icebp mov or (bad) pop out (bad) and (bad) ja add jmpq rex.XB push add mov imul fiadd shrb nop sbb clc cmc jbe mov clc fcmovnbe jae (bad) add pop ja fidivl jp repnz adc or sbb (bad) sti add and xchg movabs jl lret or je enterq sbb js std mov add sbb mov (bad) mov mov add add (bad) (bad) adc (bad) pop xchg (bad) sub js adc fsub iret gs fcoms std movabs movsb add incl cmp sbb cmp ss mov mov cmpsb in out push jle je loop pop (bad) out rex.WRB rex.R insl loopne sub add jl (bad) cmp imul add es xor rex.RB (bad) mov xchg or repnz lock retq (bad) rex.WRX repnz add pushfq sar cwtl pop or (bad) xchg xchg or or pushfq out xor sbb push sti cmpsb mov (bad) fwait movabs xchg hlt out orb rex.XB or mov movabs xchg jmpq xchg xor je movupd xor divl jae adc (bad) mov adc (bad) repz adc or repz cmpsb sub rex.WRB rex.WXB lock jne test clc cs (bad) xor ja mov fmul (bad) pushq pop enterq mov add (bad) fbstp fdiv sub rex.WXB rex.R lock hlt out xor jg or (bad) in cmpsb mov or pop or sub sti testb xchg lods lods mov sti lock cmc rex.WRXB stos addr32 add pop rex.WRB gs xor pushq mov ja add mov imul fcmovnbe sub mov (bad) in ja lahf xlat mov jnp movabs adc retq push or (bad) pop movabs (bad) icebp notb mov or hlt xchg leaveq (bad) imulb cld orb adc sbb mov xor xchg adc or pop hlt (bad) mov (bad) movabs pop (bad) scas out pushq mov or fidivrl fs mov std jrcxz imulb movabs fcomps xchg (bad) sub cmpsl (bad) (bad) rex.W popfq (bad) (bad) and xchg add in repnz xchg repnz in (bad) out hlt fdivl int3 xor out adc cmp out push js xchg pushq jne outsb add out rex.RXB lcall insb in mov clc (bad) fs and je clc lret mov imul lock mov (bad) jne pop (bad) std iret cmp and lods shl loopne fdiv stc add or mov add mov add jne ss icebp (bad) push out loop sbb nop sub fstpl push jne mov movabs jno rex.WR rex.RX pop rorl mov (bad) callq mov leaveq (bad) xor jne cs movabs flds mov movabs mov sbb xor popfq mov in sub shll and movslq mov jb je and mov xchg sbb nop clc sahf mov retq (bad) adc pop and stos movsl or retq psrad lret mov jrcxz xchg or (bad) insb outsb js xor mov or ss sub mov js (bad) decl (bad) sahf add jno ror adc int3 movabs add jns sbb nop xor cmp sbb add callq (bad) adc rex.WRB xchg movabs movabs insl jmp jmpq sub jo rex.WR mov scas hlt adc repz jne xor or sub (bad) adc (bad) cld hlt pushq (bad) push mov cmp adc js add mov add outsl fs js jmp lahf pop or cld movabs mov and and int (bad) imul movabs testb xchg (bad) (bad) cmp xchg mov (bad) jbe retq mov (bad) mov mov rclb mov xchg (bad) cmpsl mov jne or stc pop stos sub enterq (bad) leaveq mulb (bad) repz and pushfq mov xchg (bad) (bad) (bad) imul in (bad) xchg or cmp mov sub cmp xchg jne mov stos clc xchg jrcxz mov mov adc add pop add jb xor pop mov sbb addr32 rex.WXB lahf in (bad) orl jo mov xchg js lahf rex.WRXB lods data16 rex.R rex.WR jle add add retq push out insb in mov stc insb fbld cmp rex.WRXB (bad) (bad) mov fstps xchg (bad) hlt mov adc (bad) add std scas hlt jg cmc (bad) mov imul hlt mov xchg test fisubrl pushfq (bad) imul loop mov (bad) loop (bad) fcomps mov mov retq mov (bad) mov repnz or repz xchg mov movabs enterq jae (bad) xlat cmc sub xor push ss (bad) ss rex.RXB mov sbb rex.WR callq in xor adc mov sbb hlt jge add movsb mov scas (bad) outsl lahf (bad) ja or pop cmp push out imul pop and mov cs fild adc (bad) sub xor (bad) mov mov callq adc and movabs and test xchg test pop adc insb ds (bad) mov gs outsb and add repz sbb sete jne and (bad) in xchg rex.WRX (bad) stos int3 imul (bad) xor fwait jae (bad) stos jge retq (bad) xor rex.WRXB sbb jne and mov imul add fsts decb jge sbb xchg pop rcrl xchg btc add xchg jbe movsb (bad) add or xchg fdivr out fmuls jl fsubp cli rex.RXB (bad) mov movabs xor shrb jb movabs stos pushq mov xor push xchg adc pushfq xor xor loopne (bad) rex.RXB (bad) (bad) pop jb (bad) sub fadd iret and lods imul clc in add add imul ss xor rex.X rex.WRX rorl jrcxz mov (bad) (bad) out rex.B (bad) movslq mov (bad) sub repz pop and (bad) (bad) adc rex.RXB out mov (bad) fs rcrb adc xchg xlat rex.WR adc (bad) rex.RX xor mov fldcw or movsl or xor pop xchg add loopne mov (bad) mov fstl mov or mov (bad) sub jmp (bad) insb rex.RB cs ljmp rex.WXB ds test sub movabs (bad) out out pop xor and (bad) fwait xchg mov (bad) push (bad) xor int3 sbb sahf notl (bad) and (bad) push ds int jbe mov or (bad) mov (bad) mov movsl (bad) mov (bad) mov jrcxz rex.R rex.WR hlt and pop xor (bad) (bad) cli leaveq mov mov (bad) lock (bad) repz test or sub cmp add add xor pop rex.WR (bad) test adc (bad) (bad) mov and hlt hlt outsl xchg hlt cmp mov add or or add jmp jg repnz xchg xchg pop hlt (bad) enterq fist xchg adc enterq clc mov or (bad) push xchg lods clc or xchg mov xlat cwtl mov (bad) mov rex.R push test or push iret xor nop hlt fsub test or enterq add adc imul hlt jmpq (bad) jbe loop mov sarl sub adc rex.W pop rex.WXB jbe (bad) xchg (bad) pop fs out (bad) xor rex.WRX sbb out jmpq sbb mov repnz xchg scas fmuls loop adc sti xchg ss push sub jrcxz rex.B mov or and xlat (bad) xchg mov stos mov jl xchg out fsubs add icebp std out (bad) cmovge in push add lock xor rex.RB (bad) mov callq xchg outsb xor mov mov loopne nop (bad) mov jl xchg jb adc and (bad) in adc mov push xor loopne imul (bad) je and (bad) cmpsl mov mov cmp (bad) fmuls (bad) out cwtl sti retq mov mov pushfq nop jb xchg retq xor out push in or or xchg lock movabs fdivl (bad) rcl adc outsb out sti lea push (bad) (bad) add fs lock or int3 clc (bad) mov sbb (bad) nop cltd (bad) push (bad) cwtl loop int3 (bad) xchg jae adc (bad) adc int3 adc mul in (bad) (bad) rex.B repz sbb fcomi lods pop (bad) (bad) stc xchg xchg (bad) pop imul loopne jo imull xchg adc push sarb icebp lods pop (bad) (bad) and jrcxz sub adc sub pop add (bad) xor sub sbb mov mov xchg mov js ss cmp fdivl xchg (bad) mov out mov in jne fstpt shl (bad) (bad) enterq rex.RXB je sbb jae fst mov fdivs or jne adc add in (bad) in cld jl (bad) movabs lock pop mov lret mov mov icebp (bad) or xchg jno xchg (bad) (bad) stc adc movsb jb addl jno (bad) fmuls nop cmp push add sub sbb cmpsb nop or mov xchg rcrl sub xor jno (bad) mov rolb fisttpl andl mov sub cwtl xor cmp add and fwait mov test pop scas rex.WR rex.RXB movabs clc xchg (bad) jmpq mov movabs xor cld leaveq jnp push fstpt jno rex.X rex.RXB gs (bad) push hlt adc shrb push rex.WX test or sbb int mov mov xchg ja mov push (bad) mov (bad) sbb jo xchg xchg (bad) cmp or push sbb cmpsb adc rex.B or out cmp lret xor cld jne outsb mov imul ss je adc sbb sub rex.WRX cmp or (bad) rex.XB lock mov mov jmpq and jne (bad) add adc (bad) (bad) rex.WRXB adc sbb sahf lock jo sarl out div je andb push sti pop mov (bad) repnz mov mov mov in mov push cmc callq jne sbb insl rex.WR rex.WX ds xor jg sub popfq lods jae jo and cmp ja loope movups push movsb mov mov jo (bad) int3 icebp jrcxz mov or rcrb sbb push leaveq sub and rex.WRB out (bad) sbb adc adc (bad) outsb jmpq jrcxz xchg xchg (bad) hlt out jae (bad) retq clc rcl rex.WR and xlat xor cmp sub int3 pop mov nop int3 mov rex.XB rex.RX adc or (bad) sbb sub (bad) xor xor add jl (bad) jrcxz or and pop je enterq mov cmpsb jb sahf mov xor out sub stc out or jne jbe cmp iret adc nop sbb cmp lret sub sbb push cmpsl retq andb lock mov mov jge movsb pop retq (bad) jmpq cwtl outsl jmp int push repnz hlt mov out fsubs movabs imul adc xchg sbb xor fsubs in jne fwait mov loope pop std out sbb jae rex.RX jrcxz (bad) lods rcrb movslq push jmpq rex.W mov mov and adc (bad) sahf cmp add cmp adc pushq rex.WR repnz subb xchg pop vpsrad adc pop lods rex.WXB retq (bad) jg out and cld and mov shlb fbld (bad) (bad) sbb xchg test jne fbld cmp movabs adc cld rex.WXB iret push clc jo notl xor pushq (bad) movnti out je cmpsb je test add fldcw rex.WRX jno jge (bad) int sbb mov in push stc (bad) push adc in addr32 movsl (bad) (bad) jne iret mov fild (bad) insl nop imul (bad) ds andb movabs fxtract sti sahf jmpq repnz or cli lods mov mov test sub in rex.WXB out (bad) out or mov and rcll rex.WXB rex.RXB je cmpsb xchg (bad) (bad) hlt and and fnop stos (bad) mov mov hlt idivl add es mov loopne xor jne (bad) notb fistpl (bad) movabs fdivrl out cmp push rex.WXB (bad) jne repz push cld icebp adc xlat cmpsl cmp mov imul movslq int3 adc xor lods (bad) test (bad) (bad) jne jl in xchg lods sbb adc (bad) (bad) stc rex.RB sub icebp (bad) add subb int cmpsl (bad) int mul loopne movsl sbb jl cmpsb clc mov lods push insb rex.WB (bad) mov rcrb xbeginq retq adc idiv je and pop lea sti sub sbb sub xor rex.XB fwait adc jne insl push (bad) jle mov repnz mov rex.X lret jne mov out cmp pushfq (bad) cli sub loope rex.RB rex.RXB es cmc jb movabs (bad) imul cmp or jl (bad) rorb repz rex.XB rorb imul xchg xlat xchg ds in cmpb (bad) scas rex.WRB jno sub jb adc mov movabs cmp ss ficom jae (bad) testq mov cmp cld incl fcmovnbe ss xchg fdivr push (bad) (bad) push xor pushfq (bad) mov or jno pop cmp add and incl xchg xor cmpb rex.RB or rex.WRX (bad) fwait cmpb rex.WR jno lods xor and (bad) rex.W int xor (bad) loope add (bad) outsb rex.X xchg clc xor mov jrcxz cld xor jge (bad) (bad) xor mov test repnz rex adc shll cmp shrl pop rex.WB mov jne and rclb movsl xchg jne in cwtl adc add in xor rorb cli mov xor sbb cltd mov pushq mov cld (bad) jne,pt repnz rex.XB rex.WRX mov pushq or cmp loopne jno rolb (bad) retq mov enterq loop (bad) (bad) (bad) loop enterq xor mov fwait xor in (bad) bnd sub mov adc xor rcrb add rex.RB rex.WRXB insl rex.W es pop (bad) rex.WX mov or ja pushq pop xor scas (bad) in xlat sbb jb xchg jne repnz rex.RXB mov movabs add add test je imul sub jrcxz cli and push and (bad) mov stos repnz test adc gs add pushq out (bad) and (bad) movsl loopne cld sbb insl xchg movabs in jmp (bad) mov sub mov jl int3 (bad) (bad) adc std pushq in mov xchg (bad) out mov rex.XB (bad) clc push subps fldl mov mov movsb push callq rcll jrcxz in (bad) test or in je push movabs sbb (bad) rex.WRX mov int3 push out (bad) (bad) (bad) (bad) and (bad) mov mov or add bswap mov orb fsubrs pslld rex.B imulb pushq add out xor rex.RXB mov in jno pop adc imul pop outsb out mov sbb sub rex.W push sub sarq rex.WRXB push in (bad) movsb movabs adc std hlt or add comiss or fnop mov test stos push sbb add imul jne (bad) cmp rex.R jo rex.RX jmp jb (bad) jo rex.RXB rex.WX cmp push mov repnz out incb mov xlat adc fbld (bad) jrcxz sub pop stos lahf rex.X out retq xchg xor scas iret movslq pushfq retq rex.RX int3 xchg insl add jae and jne rex.WRX xchg jge lret divl xchg hlt mov mov add jge jne mov mov or stos out push (bad) loop jno sub (bad) (bad) and loopne outsb add out rex.XB jl xchg data16 xor push pop lock adc jns mov (bad) or jae mov pop jbe (bad) rex.W (bad) cmp (bad) cmp add add xchg rex.WRX jae rol es cli (bad) es (bad) (bad) out jo (bad) lret lret rex.WXB nop sub or repz xchg repz add fdivrs xchg pop loop rcrl insl add (bad) xchg data16 repz mov addb rex.WX cmpsb int loope xchg in adc sbb cs xchg fisubr xchg jae fwait cld (bad) and (bad) and (bad) (bad) hlt fdiv xor in rex.W fs sbb xchg rex.W data16 cld not (bad) (bad) clc cmc fisttpl pop jge rex.WR sbb sbb jo rex.X lods (bad) fisttpl (bad) jl movsl shrl (bad) jns movslq (bad) and push rcrl test insl rex.WRX jne (bad) (bad) fdivs adc test or xor mov mov std rex.WX fwait add (bad) jge imul std pop cmp rex.WB nop pop xor shrb popfq push int3 jne push jg (bad) int movsl xchg ja and stos xor loope enterq in paddusw mov rcl je lock (bad) rcr push mov xchg mov movabs imul and or mov insb xor mov movabs ficompl mov xchg popfq sub adc (bad) lods movabs rolb and sub and add mov movabs xor xor add or pop imul cli sbb xor jp out xchg (bad) loop (bad) jl jne sbb mov rex.WRB xor jne js in xor mov sub and rex.WB jle jmpq jne sahf add fmuls fs lods js std (bad) nop mov xchg shrb movsl and xor (bad) sbb fwait es (bad) sub (bad) out hlt stos (bad) adc or ds in adc cmp push (bad) or add cltd repz adc xor cwtl cmc fiadd insb nop movabs (bad) adc adc std notb mov rex.XB cmpsb test int3 jrcxz sub loope repz lock and add movsl mov sub fwait repz hlt push sub in (bad) repz rex.B (bad) lock sub pop push (bad) repz adc xor sub jl test cmp in hlt rolb mov popfq rex.WR cmpsb sub cld mov test clc mov (bad) roll addb adc sbb adc loop stc addr32 hlt push add or insl shld rcrl or mov cwtl test sbb shrb xchg pop (bad) movabs sar hlt mov add jne xor callq pop iret jne (bad) clc xchg pop rex.WX popfq or gs test outsb int3 test (bad) test pushfq pop (bad) shlb pushq push or xchg jmpq cmp or xor xchg rcr test notl (bad) (bad) mov (bad) jno roll mov cmp or cs or ss or stc repnz sub rex.XB (bad) adc in cmp mov and jb lock xchg roll push add (bad) mov or cmc push mov rex.WR rex.WRX rex.B push (bad) pop jle mov cld rex.WXB and (bad) and rex.WRXB pushfq xor mov rex.RXB rex.WRXB clc repz add xor mov mov and or testb add (bad) (bad) fucomp rex.W callq add hlt popfq cmp lret rex.WB rex addr32 sub adc outsb (bad) std outsl pushfq xchg jne test movabs cli retq (bad) xchg mov jg mov push in xchg sub sbb repnz jrcxz sbb and xor rclb sysenter add imul cmpsb cltd jbe fadds jmp xchg addb (bad) add fldenv cli (bad) or imulb xor rex.RXB pop rex.WRXB cmp imul (bad) xor bnd add or hlt fistl xchg out adc fnstsw jne (bad) repz pop jl (bad) out sub and std bswap mov loope and icebp (bad) int3 testb mov add test adc loopne (bad) outsl loope sub mov (bad) leaveq or (bad) repz push push jmp add scas xor pop (bad) retq push movsb stc xor out hlt loope xchg sub mov fs mov (bad) xchg pop pop cmp (bad) jle rex.WX and lods (bad) ss sub jne xchg (bad) sub mov mov data16 pushfq loop sub cmp (bad) rex.W sbb jns add out pop lock fidivrl icebp out adc jmpq loop rclb adc cmp sub rex.RX sub xchg in or (bad) xor (bad) adc pop cltd xor fs jno or jnp rex.RX rex.WR (bad) int3 retq mov iret adc mov jo (bad) fbstp mov mov (bad) pushfq repz adc rex.WXB mov loop rex.XB lret hlt in jne (bad) and in orl repz sbb (bad) add jbe jg cmp rex.XB (bad) and push mov gs (bad) leaveq popfq out fwait xchg fimull adc lret (bad) add push adc and rex.WR xchg mov (bad) or jo rex.WRXB or jb test nop or (bad) xor xor ss pop (bad) and int3 movabs sub pop (bad) sub add and adc xchg movslq lahf xlat (bad) mov cmpsb test lahf or (bad) and pop rex.WX cmp add mov (bad) rolb loope adc (bad) adc or lahf je enterq jae rex.WB jrcxz es (bad) rorb shl pop add or mov mul movsl jp xor lret pop movabs ror mov mov xchg mov fsubs rex.XB lock (bad) fwait rex.W mov sub or jl add sbb lock cmp xchg rcrl rex (bad) (bad) popfq (bad) fisubl cli outsb (bad) pop jg lock mull rcrl mov (bad) sub and xor or rex.RX lock mov mov (bad) (bad) loope xor jo callq (bad) loopne ja scas (bad) test rex.RXB sub add retq (bad) ror mov add (bad) adc or add jnp rex.WRX sarl push jg test jae hlt push xchg mov fldt and mov (bad) out not movsl pop rex.RXB fimull mov movabs jne mov int xlat pushq jrcxz iret sahf outsl (bad) sbb sbb mov jne iret jae rex.WRX mov adc nop fdivrs adc adc rex.WXB and rex.RXB adc out add repz add and (bad) (bad) mov jrcxz fistl sbb xlat rex jnp iret (bad) iret push and repz jne (bad) iret xlat mov mov stc jae or push icebp rex.WRX stos lods (bad) xchg add push sbbb mov enterq or rex.RXB pushq jp out push (bad) mov (bad) mov or cmpsb mov (bad) out (bad) imull lods jge out cmpsl int3 adcl stc (bad) or jmpq mov cmpsl jmp nop xor (bad) lret xor ja in ficoml movsl (bad) (bad) and mov lock js sub jne addr32 jbe movsb imul cmp and jno cltd shlb cmp or xchg add cmp jmp enterq add enterq mov add xor rex jl (bad) mov (bad) or or (bad) fldt rex.XB insb pop out (bad) or cmc rex.R lret sahf or scas pushfq add mov repnz (bad) (bad) fisub mov mov (bad) jne loopne iret out stos movsb popfq jns (bad) xchg sub imul (bad) (bad) push jge xchg xor sti (bad) add xchg (bad) sbb mov push jb mov sub callq lahf xor xchg xchg in cmpsb or fucomip mov sbb push jg hlt (bad) pop lret sti rex.XB add pop (bad) cmp push scas mov adc adc fimul sbb lods or sbbb sarl cmpsb (bad) sub enterq (bad) xchg xchg sub int3 rex.XB addb adc sbb cmpsb (bad) jo (bad) rex.WRB add cltd (bad) pushfq jb rex.XB mov jno adc int3 or (bad) or movsb cmp cmp cmpsb mov loopne in shl xor xchg cmpsl rex mov in jle out push jne pop repz (bad) sbb sbb loopne shrl rex.WB mov addr32 jno fbld pop test out (bad) test mov and mov (bad) mov xor fistpll ss (bad) lea jl data16 jno mov cmp jrcxz sbb cwtl fsub out sub in (bad) gs mov add test faddl and repz rex.WXB jl fs cmc int3 pop out adc mov std iret addr32 test fs mov (bad) int icebp enterq jnp add or mov cmpsl std (bad) jl (bad) fisubrl add or mov mov repnz sbb mov adc sbb add push rolb (bad) movabs (bad) data16 rex.RB rex.RB pushq (bad) mov cmp callq lods push cmp movabs lods icebp ja mov and out (bad) rex.XB jo xlat push outsb notb callq mov xor (bad) xor xchg pop rorb (bad) mov jne fstpt cmp (bad) mov mov out imul data16 lock (bad) retq pop fsubrs cmp jno and (bad) xchg addr32 test xchg sub pushq mov jmp jae cmp mov pop cltd movabs cmpsl imul cmpsl adc jne mov or in testl add add jo hlt xchg (bad) callq retq out adc rcrb (bad) jge shrb (bad) jbe adc js (bad) (bad) jo bnd test imul div pushq orb and sbb js fstl scas stos push repnz out rex.RX mov repnz (bad) (bad) (bad) (bad) cmp (bad) (bad) mov insl (bad) fs (bad) insb sub (bad) rex.RB insl jbe (bad) jo pop lock rorl jb and and xchg repz mov addb mov pop rex.WX cmp and lret adc jno imulb mov mov or rex.X (bad) pop and sub mov incb cmp pop jo movb test lea and repnz testb (bad) ds mov idivl retq (bad) in cmc js or add cmpb or mov (bad) outsw stos rex.WR or pop cmp mov sahf in (bad) adc cmp fadd (bad) imul push notb mov rex.B add push rex.WX js testb sub imul movabs cwtl or test or mov or cmp callq notl fildll mov movabs adc jne (bad) and xchg (bad) mov adc rex.WXB or pop out mov nop mulb adc movabs mov pushfq loop xor (bad) (bad) fstps ss xor jne xor pop pushq adc sub jne insb push callq (bad) adc and sar add movabs loop repnz cld rclb push or punpcklbw cmp (bad) xchg sub fwait push sbb ror (bad) movabs cmp add rex.RXB lock nop adc out jg sbb xchg mov jge xchg xlat or pop lods scas fsubl subw jno movabs add cmpsb repnz add or xchg xchg xorl sbb sbb adc xor add (bad) pop repz jb jp (bad) mov sub loop adc (bad) xorl cmp clc mov movsb xchg push jmp mov enterq sbb fwait in sub sbb mov callq push xchg out fnstenv (bad) cmp (bad) sbb fadds insb (bad) lahf outsb (bad) mov cmp rex.WRXB xchg (bad) (bad) sbbl push (bad) (bad) push mov ficoml (bad) mov out loop mov add clc mov jne xor lret test sub (bad) in test sahf jmpq in (bad) (bad) negl or mov push rex.XB fldl rex.RX stc (bad) int3 mov xchg xor add or xlat cld xor enterq in (bad) sub fiaddl (bad) je adc rex.WRXB imul rcll in (bad) jnp fldl cmp cmp repz adc out rex.B cmc jo push and (bad) fldt (bad) or repnz adc data16 out bnd in fistl sahf movsb (bad) clc addr32 add in ds (bad) (bad) out xor push (bad) xchg callq callq xchg imul rex callq jmp adc mov or loop (bad) rolb pop (bad) rex.WRX rcr loope movsl jnp imul idivb test pop sahf je push (bad) rex.WRB (bad) (bad) xlat repz add ss andb jmpq pop sub xlat imull imul (bad) xchg xor rex.RB sub fdivs jmpq rex.WR (bad) hlt rex.WXB fs pop mulb in rex.XB xor pushq pop lods callq movabs jmp loope mov (bad) add (bad) movabs jl int3 (bad) movabs (bad) loop data16 push jns adc lea div sbb pop (bad) mov sbb out je rex.RX pushq std xor (bad) notb cld int3 movslq add ss (bad) divb (bad) idiv cld stc add retq xor testb and adc and xchg (bad) xchg insb rex.WX std fsubr (bad) out cltd (bad) xor rex.XB push (bad) outsb mov ss lods loopne rcrl mov icebp imul xchg sub sbb pop insb xchg and jmp movsb adc (bad) or cmc add hlt (bad) sub mov cmovb jo rex.WX int3 div xchg xor lods rex.WB mov imul and imul mov or add stos or add jne mov fidivr movabs int3 addl xchg ja xchg xlat jno adc jmpq add xor scas push lods (bad) xchg es scas ds loop idiv sbb movabs (bad) rex.WR adc push mov jbe mov or sub enterq data16 (bad) shrb loop outsl mov xor imul jnp int3 incl lret in rep push (bad) (bad) xor rex.WRB jb fist movabs and (bad) in cmp test in cwtl (bad) push fstps pushfq andb add mov add lea (bad) (bad) add jns out cs rex.X enterq and divl (bad) mov mov out bts fsubr jne test in (bad) adc rclb or add xchg push or pop mov (bad) fwait rex.RXB rolb hlt add adc xchg jne jne push pop push (bad) xor mov loope rex.W ss jno mov decb lret add sbb xor lret rex.RXB in or jns or lods push fwait add xchg cwtl icebp mov (bad) sbb loopne rex.WRX sub sbb jno jl rex.R adc rex.WRB cs stos jo push add nop mov jle rep jl iret movslq rcl ja pop xchg xchg mov rex (bad) lret lods sbb and push sub pop jne mov hlt xchg mov rex.WXB xchg movsl (bad) jo ficom (bad) loopne (bad) jmpq or mov es (bad) test icebp jb pop (bad) jnp in callq ficoml cmp es sub scas xchg jo jbe adc imul lods rex.XB stos (bad) rcrl add mov jo jmpq jmpq fldcw (bad) (bad) cmp (bad) jmpq test lock push (bad) fldenv pop jns cmp (bad) (bad) imul lret jle adc out repnz and (bad) xor rex.RXB gs movabs (bad) in (bad) fcmovnb not loope rex.WRXB add lock (bad) mov xchg test pop cs test lret divl mov mov (bad) xchg or pop jg ficom rex.R retq mov scas hlt (bad) rex.R (bad) ja xchg (bad) jp repz in rex.X (bad) or rex.WR cmp and fs pushq imul mov jmpq loope or orl in add lret sub adc (bad) xchg std add mov ja push rex.B (bad) cmpsb sbb divl pushq mov or rclb mov cmp sti jae out scas fdivrl ja lock xchg add enterq rex.W mov clc xor mov movabs rex nop add add (bad) rex.R test xchg imul out pop lret sub pushq (bad) iret (bad) (bad) rcrl (bad) (bad) ss (bad) cmp sbb hlt lea xor pop (bad) xchg shlb (bad) mov mov push pop sub stos ffree int (bad) (bad) push rex.XB packuswb gs sbb fcomps cltd (bad) shl fwait (bad) es (bad) mov and sub clc xchg sbb repz xchg repz (bad) callq pushq jno (bad) scas movabs mov (bad) mov or out rex.WB cmp add rex.WRX rex.WXB (bad) ffree add hlt rex.X (bad) mov fnstcw outsb adc rex.WRXB jl xchg adc jmp in rex.XB add jne and jno test fnstenv (bad) (bad) cmp fistl or test push callq enterq pop int3 or xchg mov adc pop xor rex.X jrcxz mov add sub and rex.XB (bad) je ja clc in (bad) xor add jno add out icebp imul (bad) and js insl retq shrl fsubl and pop rex.RX addr32 or and add rex.WRXB and adc xchg movabs ja mov rex.WRXB repz movabs adc mov negl out jmp jmpq out mov rex.WB rex.R lret adc jno (bad) jle rex.R cmp (bad) cmp retq jno pop sbb rex.W xchg jrcxz add test adc rex.XB or pop xchg cs rex.WRB popfq xor fadds insb test lods movabs or (bad) (bad) callq sbb add fwait jo or loop shr adc xchg sub in mov or rex.B pop (bad) (bad) icebp mov out xchg xchg mov add pushq pushq push in icebp adc test and or pop xlat mov (bad) rex.WRB fmuls pop or cmp popfq outsl add insb repnz add out jbe lock cmc mov xchg fist rex.WRB out cmpb add js xchg (bad) xor imul or jmp push jne rex.RB cs xlat mov push lock andps loopne rex.XB lock add loopne cli mov rex.XB (bad) stc enterq imul adc (bad) clc xchg sub mov lods in xchg xchg mov xchg lea mov rex.XB mov (bad) xchg (bad) mov jne mov sahf sarb outsl sbb jo xchg adc add rex.RX jno mov outsb out jl xchg push out mov jae jne movsb ja repnz mov rex.B cmp mov mov scas xchg jl lock sbb out xor repz mulb pushfq test shll (bad) (bad) int3 xlat xor movabs or xor push or repnz push jno mov test (bad) gs mov add xor imul cld repnz pushq jrcxz (bad) rex.XB sub js adc push push rex.WRB scas std jno xor or cmp cmp pop rex.WR iret jg jbe cmp add cltd jne ja mov jns adc pop clc pop pushfq sbb adc sti (bad) ja lret out rex.RXB rex push sbb (bad) out jmpq outsb cmp (bad) xor mov in jno adc mov adc test repz mov xor sub cmp (bad) mov cmpsl push popfq movsb mov lret jnp loopne adcl or ffree rolb rex.XB int leaveq cwtl jmp imul (bad) adc sub ja enterq cmpsl push sub (bad) mov jnp (bad) notb sbb jmp pushq rex.RXB (bad) scas adcl jne pop push push push add mov add cld (bad) cmp sub cld callq jbe cmpsb fild (bad) (bad) or addb js cltd (bad) add mov in and (bad) mov adc or adc stos int pand (bad) loope (bad) imul adc sub adcl iret scas push out mov push scas mov push rex.WRX loop xchg insb test repz outsb mov addr32 jmp pcmpgtd push jp std retq (bad) mov scas push cmp test rex.XB add idivb jno mov push rex.RXB retq cmc decb bnd in insb imul jo (bad) xorb rex.R rex.WR fdivrs fiaddl pop ss int3 test out pop adc pop mov (bad) enterq xchg (bad) xchg lret (bad) stos es lret js lock pop retq loop out rex.RB fistp xorl (bad) xor hlt lods (bad) (bad) xor sub mov out push mov adc xlat jns adc hlt mov pop and or xchg bnd out adc mov (bad) jne enterq sbb rex.WX mov cmp push xor rex.RX lea xor enterq mov rex.XB fwait push sar (bad) pop rex.RXB loopne mov sbb (bad) adc pop or (bad) mov jne mov sbb (bad) jnp jb add or mov out cld or test and (bad) push jge pop mov adc mov mov hlt rex.RXB jb cmp in loope xchg jbe sbb (bad) js mov (bad) sti (bad) sbb test hlt (bad) out jbe (bad) mov sbb sbb sahf xlat adc pop add xor rex.W or in je scas jp xchg add sbb (bad) or mov xor and (bad) jno cwtl jmp (bad) out xor xlat (bad) cmp push jo (bad) sub addr32 sub sbb xchg or mov fsubs sbb mov lea out adcb cltd cli add (bad) (bad) (bad) loope idivb xchg rex.RXB lods (bad) hlt (bad) gs rex.B movsb (bad) (bad) je sbb xchg (bad) stc mov sub add scas rex.RXB lods fwait xchg (bad) out and sbb (bad) xchg nop xchg add movsl (bad) testl in push mov (bad) (bad) int adcl hlt mov push add (bad) in out sub lock fstps adc faddl pop or lahf jnp cmp cmpl test nop cmc or loop shrl (bad) jrcxz mov cmpsl (bad) xor push push iret pop rex.R sub movabs rex.R mov sbb out (bad) in (bad) push fdivl mov hlt cmp add movsl mov jns (bad) mov jmp (bad) rex.WX push xchg add or rex.B or sub or (bad) push loopne movsb sbb sbb add fsubrl repz jrcxz pop test std (bad) out stos sarl mov sbb and lods rex.WX adc (bad) leaveq (bad) pop test jne xorb ds pushfq pop cmc ja rex.WXB jbe enterq adc jne (bad) pop add xor mov test out test xlat jne (bad) popfq (bad) movabs in jg and shr rex.R rex.RXB (bad) and cmp scas adc lock stc cli test clc sub or imul (bad) mov jg fnstenv or cmp je add movslq pmulhuw rex.WXB test int3 lock rex mov mov and add or xchg jmpq sbb adc lock xlat sub sahf rex.WRXB jbe xor fmull or es rex.RXB callq adc imulb sbbl mov loop jno (bad) sbb cmp mov mov movabs std or or (bad) push xor in in sub (bad) pushq cmp fs rex.XB cmp popfq rcrl lret add pop rex.WRX rex.WRB cmp rcl mov test outsl cmc cltd (bad) xlat rex.X out stos sub add (bad) callq or rex.R cvtdq2pd (bad) movabs rcl xchg cmc orl or sbb jne pop rex.WRB xchg sub retq (bad) or jo (bad) (bad) jno and (bad) sbb or xchg lock xlat jne movabs retq add hlt cmp fdivrl (bad) mov xchg retq xor add addr32 retq sub lahf adc add (bad) jl pushfq or (bad) (bad) (bad) imul adc jmpq imul (bad) shl adc jne lods sbb (bad) (bad) pop stc seto imul (bad) (bad) divl (bad) mov lret or adc sub fcomip pop add cltd sub (bad) (bad) imul mov cmp sub xchg callq xchg and cmp jo rex.X push cmpl fs pushq cmp je movabs add movabs jo (bad) mov xchg ss lea or xor lea movsb movabs or cld cmp retq (bad) pop and pop adc test in (bad) test cmp (bad) out (bad) push add pop adc xor sbb fnclex sub (bad) jmpq imul sub stos xchg and add idivl (bad) mov mov lods insb mov js (bad) and icebp movabs (bad) pop adc cmpsb test sub xchg cltd stc bswap movabs pop loope xor cmp (bad) loopne rex.B mov in lods add jns sub pcmpeqw rex.WX rex.XB jmpq stc or loopne mov jb rex.B mov add nop xchg pop jb lahf xor imul imull out rex.RX and and lods cmp mov rex.XB sti (bad) cs jge (bad) fild cli repnz rex.RXB jmp pushq and andl and jg imul rex.WXB ss (bad) (bad) cmc cmp push jle scas jmp int mov (bad) ja sbb (bad) xlat cmpsb mov push or (bad) iret or and xor or idivb pop rex.WX mov nop test jno iret xchg and push jle adcb enterq lea mov lods shrl mov and hlt rex.W adc mov flds stos cmp jne rex.WRB cmp (bad) cmc je (bad) mulb rex.W shlb and (bad) (bad) mov lea sbb je test rex.XB (bad) sub cmp sti jrcxz stos testl cmp divl adc repnz repz mov lahf imul cmpsl rex.RXB repnz jne imul mov decl sub fs cmc adc jno rcrb iret icebp (bad) add std clc cmpsl xlat mov ud2 imul cli or sti lock or sarb (bad) (bad) cli mov je test enterq xor movsl xor jns imul (bad) add stos sub gs jmpq test cld cmp rorl pop and rex.RX lahf rex.W add rex.WXB cmp push (bad) mov xor adc mov add lock scas ja adc (bad) cltd rex.XB jg (bad) test rex.RXB and mov adc in push rex.WXB leaveq je add gs sub (bad) rorl push in jne jmp mov out sahf add pop xor jnp and (bad) push lock movabs mov push (bad) pop outsl adc adc movabs add sbb cs rorb xor js divb fs rcrl callq jmp (bad) rex.WR mov (bad) push mov jle pushfq frstor fidiv sbb add rorl adc sub imul mov push hlt bnd retq enterq jp mov sub pop rex.W stc test lahf xchg add out (bad) cmp cld sbb (bad) cmc repnz mov test xchg movabs outsb jbe int3 out fwait pop clc add repnz xchg mov in xor movhps lods adc (bad) loop rex.WXB icebp sarb jbe push (bad) adc jrcxz mov fcomip repz loopne out adc jno xchg (bad) pop mov jl nop pushq in repnz or cmp sbb cs push (bad) or xchg cmp pop (bad) (bad) repz or (bad) jns xor out popfq in push movabs pop cmp sarl cmc rolb popq mov nop je test mov loop sysret adc (bad) (bad) (bad) negb (bad) rex.WRB shrb or mov adc (bad) fadds (bad) repnz (bad) (bad) lret xchg jle in (bad) repnz (bad) jo push rol rclb or mov (bad) shrb and (bad) sti jno js or in add xchg mov push sti sbb cltd (bad) mov rorb pop or cmp (bad) (bad) jge jge mov (bad) leaveq jg xor push jge repz (bad) in add pop (bad) xor adc jne nop sbb jae movsb mull adc rex.W and xchg out (bad) (bad) movsl repz rolb pushq and adcb fcomip sbb xor test (bad) (bad) lret cmc mov jge mov add in sbb rolb xorb enterq xchg xchg lret sub icebp mov jae and and pushfq rex.RXB xchg (bad) (bad) or addr32 or (bad) mov clc cmp int3 jmpq mov mov mov adc fs mov rex.RB pop (bad) nop lea mov sbb adc sbb test pop in or xchg repnz cmp loop out imul xlat lahf mov cmp icebp sub (bad) je xor (bad) (bad) enterq loopne fs jl outsl or xchg mov retq add adc imul (bad) sub (bad) fwait imul popfq xchg sbbb pop mov pop cmc xor cmp in in out rex.X mov cltd movabs test jg imul imul and sub pushq sbb enterq movslq or stos (bad) movabs (bad) (bad) jne retq sbb (bad) (bad) (bad) nop imul sti (bad) (bad) sahf movabs (bad) sbb (bad) out and cmp and js retq addr32 cmp (bad) iret mov lahf mov movslq (bad) sbb pop rex.X test xchg data16 retq rex.XB xchg addl rex.W mov fadds retq in (bad) mov add cld cmp jae ffreep lods sbb movslq jno nop (bad) xorl jmp sub in mov (bad) popfq cmp pushfq jb addr32 rex.X stc (bad) cltd (bad) fwait (bad) movabs rex.WRB rex.W xchg cli adc jne pop lret outsb lret or and jle sbb add rex.WRXB sbb xor rex.R repnz (bad) mov loopne out cmpsb lret (bad) sti loopne jne sbb and pop xchg xchg jl insb rex.WRX imul or xor idiv mov repz adc (bad) cmp jb leaveq or push and rex.B rex.RX add enterq nop repnz add jp lret movb (bad) div (bad) jne add xor xchg jae (bad) clc ss fistp insb add negb movabs jp fildl xchg (bad) repnz in push movabs mov adc jle retq test lock sbb pushq push rex.WR out retq fmull callq testl rolb mov cmp out jl jne iret outsb in mov outsb leaveq lret jae and (bad) movabs xchg cli mov hlt faddl (bad) enterq outsb icebp xor (bad) (bad) (bad) and lock popfq cmp hlt jrcxz test scas pushq push leaveq sbbl adc jmp sub adc ja in out std or jno add (bad) or push lea xor fwait mov xorl ss jb mov insb rex.B jl clc fwait movabs or (bad) and mov xchg cli imul add cmp in (bad) in sub repnz rcll imul or jne rex.R jbe hlt pop jl jae mov sub shrb or xor jmp jns pop pop mov (bad) test js test leaveq adc jne jno add lret sbb rex.WB rex.WRX movabs js xlat mov cmpsl xor jrcxz push (bad) rex.RB or jp xor add jl mov mov (bad) push cmp rex.XB rex.XB int rex.RX js mov mov adc xorb jge mov callq add loop lock fwait cmp fs (bad) and pop (bad) adc sbb sub js add sub (bad) in mov mov jne repnz es lahf negl faddl or jne (bad) js pushfq mov (bad) fstl sbb lahf rex.RXB or cmp mov adc xorb or add cmp and fcoms in and mov fs es push (bad) xchg test in fmuls icebp push cmp sti pushq rolb notb (bad) rorb jmp movabs push callq lahf retq (bad) pop or add movabs rex or (bad) lret jne (bad) icebp insl imul (bad) rex.W out adc (bad) in jmp jb ss pop jne,pn mov add imul mov rex.XB cmp push and (bad) iret (bad) adcb out pop adc cwtl and rcl testl insl push addr32 cmc jne add sbb rex.RXB rex.WXB mov sbb (bad) (bad) or (bad) mov sub int3 notl adc push rex.WXB std adc ja push fdiv in mov mov imul fnstcw (bad) (bad) std add push and sbbl int3 (bad) sbb push jo test (bad) pushq (bad) int (bad) adc hlt js or and push cmc (bad) adc xlat xchg add cs fbstp insl adc and repz int jo data16 adc push in mov sub mov callq cmp shl or (bad) (bad) rex.RB rex.RXB or je fucompp out lea cmp scas adc xchg int3 push retq jne mov jrcxz adc int3 add neg fcomps int3 cwtl cmp mov sub xchg sbb adc sbb fwait or mov and (bad) jno sbb movabs jg and mov cld nop int test push stos es (bad) cmpsl push cmp pop or rclb rex.WRXB pop movabs fdivrs (bad) jle rex.RX popfq movabs movsl (bad) lahf or rex.WB rex.X sbb test mov add and test push add loope rex.RXB (bad) xor out jle addl sahf or out sbb rex.R fwait je ficomp js (bad) push rex.XB cmp pop adc adc xor mov mov in and fstpl sub sbb addb ss xor (bad) (bad) jmp rex.WX sub insl mov (bad) jl int3 int fcomip insl sub fistl imul cmpsb ss (bad) stos adc retq cmp mov xchg adc (bad) adc (bad) xchg (bad) (bad) add nop xor rex.XB orb outsl (bad) imul mov shl in vminss jb out retq cmc mov rex.RXB sub mov push insb rcr or add je cld jmp fdivrs movabs enterq xor pop mov sahf jo xor or adc rex.RXB movabs (bad) loop adc lods rex.WXB xor jno,pn adc in add mov rex.WXB cld adc je push or shrl lods clc mov movsb rex.W repz jge push xchg out rolb (bad) or imul add nop (bad) jrcxz pop loop (bad) lods (bad) jnp rex.WRX add mov xor sahf or in (bad) mov shrb or mov (bad) or add cmp js leaveq xlat and and rex pushfq retq adc std mov (bad) jle lock (bad) mov sysenter jno and out xchg rex.XB jmp mov xchg iret shrb in scas repnz rcr fnop and imul imull loopne imul movabs hlt jno fwait push stc (bad) add in fwait mov jle or cmp test jne retq loop xor or stc push xor testb hlt (bad) movd movabs rex.RXB rex.RXB cmp retq mov movsl jmp (bad) in jl mov out xchg adc xor rex.RXB repnz (bad) (bad) jno cmp adc incl jrcxz (bad) enterq negb lods (bad) mov or in adcb push loopne add sbb rex.WRB test movb (bad) mov cs xor lock rex.XB (bad) mov (bad) xchg adc mov jl adc mov loop and jg jo adc mov rex.WX clc repnz adc mov js rex.WR jl add fbld lahf add cmp (bad) push xor (bad) int3 rcrl jae outsl (bad) jp (bad) movabs sub pop out rex.WRXB lock sbb mov loopne and mov lret sbb rex.RX rclb (bad) jno (bad) shl lret add shlb xor (bad) jmp movl imull test mov sub sbb in add adc cmp cltd cmpsl iret mov and jmp out (bad) ja mov xor xchg (bad) sub xchg cwtl (bad) rex.WRX lret lods (bad) mov (bad) stos iret mov rex.RXB sub insl adc repz (bad) jbe rcl gs loope rex.WB gs rex.XB and add adc pop mov xor movslq in pushq rex.WXB repnz and imull cmp callq xor (bad) test sbb add rex.WRX enterq and or xor adc (bad) (bad) xchg clc hlt add mov xchg movb out rcll rol jle rex.W push sbb scas xor callq add data16 (bad) cmp rex.WRX out mov fnop in rex cmp or test test xlat mov imul sar (bad) mov jno and in (bad) xor in xchg lock xor sahf fimul testl es scas or adc add rex.XB js add test callq xor fdivrs mov outsl push (bad) sbb in jns jae fcom (bad) lods sbb pop fst (bad) (bad) mov cmp sub or fsubrs je movabs (bad) rex.W xor adc out rex.XB jno repz xor cmp out icebp fstl lods sub adc rex.X int add int rex.RX rex.WRB xor std sar lock testb imull or jno adc xor retq popfq lods lea (bad) sub rex.WRX rex.WRX fdivrl stc sbb push retq mov xchg cld (bad) rex.RXB insb and hlt movabs fwait adc add lret js divl pop jns (bad) xchg sub (bad) rex.WRXB in int3 cmp and push (bad) imul cmp int3 cmpsb (bad) cmp cmp (bad) std add rex.RXB mov and imul leaveq mov rcrl xchg test callq pop mov cmp mov addr32 cwtl mov jge add mov add add (bad) movabs std bswap sbb callq cltd retq rex.B rex.X out (bad) vpsllw test (bad) stos push leaveq mov (bad) sub jp (bad) repnz mov out mov mov mov cltd iret out int3 cltd mov and cs rcll je incl add adc int3 (bad) push (bad) in mov rex.B xchg rcl js out push shl (bad) loopne test mov movslq lods mov (bad) (bad) addb sbb xor adc movabs pop (bad) movabs outsl (bad) outsb ja xchg andb sbb or jmp mov mov (bad) sub adc sbb movabs es adc out cld xchg fmulp out xchg rex.XB pushq (bad) sbbb push add mov (bad) out testl fiadd rex.RXB push fistl fdivs cmp lret notb rex.WRX add retq (bad) iret or xchg callq jle xchg jno sbb imul cmpsl xor cld xor mov jrcxz mov je je nop xchg (bad) adc add mov cmpsb insb lea mov je adc push and (bad) pop and ss add fdivp xlat push rex.B in mov retq movslq adc push rex.WRXB fucomp (bad) mov mov mov idiv adc test jnp (bad) add lahf push mov xor test (bad) fcmovnbe adc jrcxz (bad) (bad) nop mov add (bad) xor or mov (bad) pushfq in xchg cmpsb scas insb imul add push mov cmp pop xchg (bad) in jno lods add rex.R (bad) iret cmp divb xlat add enterq repz (bad) movabs or ja xchg rcrb or testb (bad) cli rex.WXB nop (bad) jg incl or cmc (bad) sub cwtl mov repnz (bad) xchg movabs jbe adcl nop jmp sti push cmc xchg (bad) out ss sbb lahf out fcomip cmc xor mov add (bad) rex.WRB push xor rex.RXB sub fcmovbe lods imulb jne mov repnz jl nop sub mov or add xor and push sti adc mov fcmovbe rex mov cwtl mov (bad) adc mov nop movabs or je push out js push xor mov add xor pop je mov fwait or (bad) push (bad) (bad) jrcxz fcomip or add add adc out xlat addr32 add lock mov mov (bad) test data16 jp mov add rex.R fs test shll jbe xchg (bad) rex.B xchg xor (bad) rex.WRB rex.R (bad) mov ja sbb fldt nop add fs fcmovbe rex.RX cwtl mov (bad) pushq rex.WRXB fs (bad) shl or cmc (bad) xor add xchg rex.WRB callq enterq loopne nop xchg mov (bad) rcr adc enterq outsl or lods enterq xor or movsl rorb fs fcmovbe je repz cwtl mov (bad) out rex.WRX cmpb test add out je rolb (bad) or movabs orb or mov loope nop in push xor mov lea ror test popfq out sub xchg xor mov add ja cmpsb push and mov sub cmc scas (bad) sbb (bad) xor adc jg mov (bad) jne test cmp in xor cmc nop mov mov add xchg rex.WRB rex.X movabs sub data16 nop mov rcrb xlat add or and cmp test (bad) rex.RB int pushq icebp mov mov (bad) rex.W cmp pushfq je pop ficoml jnp add lock mov pushfq mov xor xchg je stc ja jnp xor lahf and and lock and test in rolb (bad) pushq shlb jbe add xor gs (bad) mov out (bad) mov (bad) mov es xchg mov (bad) mov out xor adc (bad) nop hlt rolb (bad) add (bad) mov cmpsl mov (bad) callq nop je add push add jnp add (bad) adc xchg mov rol mov (bad) push nop push hlt and push push (bad) hlt test or mov (bad) mov (bad) push ja rex.RX jbe out push mov (bad) (bad) mov push cmc hlt (bad) out (bad) mov xchg notb push xchg lock mov push hlt push out xor or shl not fnop divb lock push push hlt (bad) out xor (bad) (bad) adc fsts data16 xlat mov out xchg mov (bad) ja (bad) (bad) push js (bad) (bad) mov out (bad) mov (bad) (bad) notb mov rex.R xchg lock push jbe movsb out push mov (bad) testb leaveq xor xor xchg fnclex (bad) jmpq jmp (bad) insb (bad) js rex.WRX or pop rex.WR out (bad) xor retq shrb imul xchg js imul adc cli rex.RX clc ja mov cmp rex.B rex.WRB push lock loopne mov add or enterq (bad) jmpq mov rcrb in xchg mull sub cmp movabs addr32 add cld xor rex.XB xchg stos imul adc pushq mov leaveq cmp lahf or loop rex.WRXB rex.WRB xchg (bad) jno or cmc add hlt es sbb out add mov cmpsl sahf adc xor (bad) rex.R out pushq imul (bad) sbb rex.WB pop xchg add rex.WRX add rex.WRX test mov jge add out and cmp xor xor mov neg add retq xchg (bad) (bad) push mov movsl adc or test mov mov sub insb fdivs (bad) mov out or jne pushfq sbb fs adc lods rex.XB imul out fisub (bad) jl imul rex.R pop mov movsb (bad) mov out (bad) xor out xchg sbb sub pushq insb (bad) fsubs or mov xchg jne test adc xor retq ds xchg movsb lods sbb add rex.WX es xchg adc test (bad) or jae xchg xchg rolb je mov add push idivb xor gs nop push adc lea mov test ja jge imul pushq nop stc (bad) lret pushq testb (bad) movabs cs fwait xor rex.RB rex.XB (bad) rcrb fadds icebp fwait cmp mov leaveq sbb div out pushq adc add (bad) xchg in adc repnz jb andl push xlat rex.XB or shrb rorl shr imul mov (bad) nop gs pop cld repnz pop out (bad) pop or mov jle adc mov callq mov outsl rex.WR nop insl pop mov pushq sbb jmp (bad) (bad) mov mov push cmpsl add (bad) mov (bad) push rex.WRX xlat mov and in or (bad) mov rol callq xlat mov retq xlat xchg push mov jl out adc fcmovb or fsubrs xchg (bad) iret rex.WRX mov add (bad) add adc add and push repnz callq mov (bad) and lea xchg imul (bad) rex.WRX fs mov sub cmp or mov or (bad) (bad) rex.WRB rcr xchg insl in int3 jno and mov rex in jrcxz xchg hlt es decb lahf xchg int mov cwtl jbe or not fist mov data16 (bad) insl adc stc cld lods jb (bad) hlt movabs je loopne rex.WR enterq xchg xor fdivrl (bad) (bad) rex.WXB jp movabs rex.WRXB imul push sbb jnp int3 gs cs adc nop (bad) rex.WB rex.WRX sbb (bad) shrl (bad) insb jl jge mov rex out jne push xchg cld mov and (bad) rex.R jo jne and rex.RB fwait ss xchg pop mov xor xchg push and jno int3 jne (bad) push hlt fistpll sbb (bad) mov int (bad) xchg (bad) cmp or rex.RXB popq jrcxz adc or pop or in test cmc (bad) je cmp repz push rex.WR outsl mov mov enterq imul hlt addr32 mov rex.WRXB rex.WXB add adc xor cmpsb cmp or jp out rex.WXB or xchg hlt scas or xchg (bad) movabs add movntq and and in ljmp (bad) or (bad) mov (bad) mov (bad) mov cltd mov adc stos std clc rex.RXB je fcompl iret jbe outsl jp in or xor retq rex.XB pushq (bad) cld cld (bad) sub or rex.X outsl jo (bad) cmp or sub mov (bad) int (bad) mov or neg and jmp imul push repnz sarb adc hlt repnz sub scas ss test shrl rex.RXB rex.WX lock imul (bad) rex.WR (bad) add jle jno sbb jmpq and pushfq (bad) (bad) mov mov movsl push notb adc int3 xchg out (bad) rex.WRXB std (bad) rex.R (bad) rex.XB sbb adc xor loopne fadds (bad) nop addr32 lods mov rex.W ds (bad) mov rex.RXB (bad) loop rex.RB or nop pushq retq pushq push add cwtl repz in adc mov test (bad) repnz sahf imulb callq add and xor movabs out rex.X outsb ss rex.WRX movslq sub rex.XB fimul cmp xlat stc (bad) add jne (bad) scas adc sbb rex.RXB mov insb xchg out xchg movsb lods (bad) mov callq jl nop cmp push jne (bad) movabs lahf add xor out rex push add pushq in add (bad) jno rex test retq movslq (bad) insl and mov leaveq pop lret loop cmp cmp movslq outsb (bad) pop xchg movabs adc sbb in or (bad) mov rex.RXB fdiv icebp popfq adc cmpl mov or cmc decl jp jo adc cltd push add pop idivb (bad) jnp rcl rex.W cld pop jbe add addb (bad) or jg je add xchg sub (bad) sbb xor rcrl lock jge pushq imul cmpsl (bad) (bad) fs (bad) movabs add or add cmp cmp mov xor in (bad) (bad) xor faddl loop mov sti clc cmp (bad) shrb (bad) and imul in pop xchg hlt out jo sbb sub test or mov (bad) (bad) mov out mov jne sbb (bad) add cmc lret repz vpsubusw mov xlat xchg (bad) rex.B in fmull cmpsl (bad) jne fistp sub movslq int3 movabs vphsubbw pushq addb rex.XB (bad) es add (bad) xchg xorb pushfq sub outsb cmp and test icebp idivb add (bad) xchg in or add mov repnz movsb popfq shr movabs mov (bad) repz mov outsb retq or retq (bad) fstps sbb adc rcll jg push adc xor xchg xlat ds lods test test adc pop sbb or cmpsl rcrl xlat imul mov (bad) adc rex.RX or sub add std (bad) outsb mov nop and movsb (bad) scas (bad) (bad) movsb add (bad) js lret std (bad) xchg rex.WX (bad) loopne or jge rex.RXB imul adc (bad) (bad) mov pop pushq retq in (bad) movabs sbb (bad) pop loopne retq fcoml sub mov movabs rex.R adc out mov jo (bad) cld adc rex.XB clc and std add (bad) out mov imul or (bad) repnz test jno adc cmp cmp add pop xchg mov jo in (bad) (bad) xor and movabs mov imulb adc xchg mov test (bad) cmp mov add push mov popfq (bad) rep test int cmp lods movabs in (bad) pop rex.RB (bad) mov rex.WXB rex.XB out xchg std enterq xor xchg rex.RB rex.RX lock out movsl sbb adc (bad) jo mov test iret xchg sbb rex.XB insb xchg jp cmpq cmp cld mov jb retq (bad) pop jae and sub xchg xlat fmull mov add es enterq add int icebp sub pop push fimul mov or xchg jp mov std and loopne rex.RXB (bad) popfq xor add pushq jbe fbstp test (bad) divl and test idivb out rex.W mov mov (bad) cmp (bad) rex.RB rex.WRXB adc pushq or (bad) (bad) (bad) cmc (bad) movabs (bad) movsb movabs imul or sbb mov sti (bad) rex.WB repz orl lock rex.RXB jne and lods movabs addl pop shrb in test or andb jg movabs xorl cmc (bad) repz imul pop test xchg mov (bad) rex.RXB cmp int jg rex.WR sbb insl out int3 in retq hlt xor mov lods sub sbb (bad) fisttp (bad) in mov mov xor rex.WRXB xchg push (bad) adc jns add (bad) mov ja rex.XB and fnstcw mov hlt or jno push xor (bad) mov add in rclb xor or add fmull xor test jg and xor movabs out pop or jne (bad) in test es std scas jo,pn in jmpq mov hlt cmp jp xchg push mov (bad) add (bad) xor adc xchg push jne out rex.WRXB jp lret mov (bad) lock test rex.WXB sbb outsl xchg cmp pushq push fbstp rex.WXB and outsb jl adc jmpq or cmp or paddb cli pushq push (bad) adc pop xor int3 out jns fcmovne cmp pushq add or mov nop adc enterq roll xor xchg frstor xchg js push jmp add mov popfq adc cmp hlt movsl imul (bad) cmp or adc rex.WXB sub mov cs push jo mov shrb jbe loop sub int3 push mov fnstcw mov (bad) xchg xchg lods adc rex.WR fwait sbb lahf test sahf clc jl stc (bad) (bad) rex.WRX rex.WR mov movabs pop sbbb rolb mov test int3 adc cmpsb insb mov xchg fnstenv lock (bad) mov pushq and mov faddl or xchg jns jne loopne (bad) xlat in push out add movsl jb test repnz (bad) and out movabs xor (bad) (bad) (bad) (bad) (bad) add sub test in imul pushq insb sbb adc cmp hlt loopne pop shlb popfq sub loop in add jge div cld add (bad) xchg rex.WXB jb mov test rcrl cld pushq xchg mov sub pop xlat addr32 out idivb xorb popfq and fildl rex.RB es callq (bad) mov (bad) lret and xchg es (bad) jno add mov lods xlat (bad) sub or data16 jno and (bad) xor repz callq pop adc sbb add (bad) (bad) or nop (bad) adc and push test jne int3 sahf or rex.RXB add or xor and cmp (bad) mov out add mov pushfq nop jne or (bad) xor shlb movsb ljmp mov test mov (bad) fbstp in jl sbb and xchg ss sbb sub in int3 rex.XB cmpsb sbb stc (bad) jge addr32 and loop fist mov movabs adc rex.WB fadd or (bad) subl (bad) outsb sbb loop (bad) push sbb add loopne (bad) mov mov sbb (bad) imul pushfq pushfq (bad) add icebp pushq rex.WXB rcll rex.RXB add sti callq test in jmpq loop out mov xchg rclb (bad) repnz int mov lea jno sbb (bad) or sti sub lock mov or (bad) xchg xlat movabs test add retq jg push test jbe pop (bad) xchg sub rex.WRXB lea loopne repnz fs loope adc sbb rex.R rex.WR (bad) push xchg subl mov xchg and push push xchg rex.WRB (bad) xor sub popfq xchg mov lock orb add (bad) je rex.WRX push or (bad) add and mov jbe (bad) rex.RX test sub mov jo pop xor xor (bad) mov movabs ja hlt jne add shlb nop repnz pop ljmp retq sahf and mov cltd (bad) and cmp or rex.WR stos pop (bad) jae outsb (bad) loop rex.WRX mov (bad) repz (bad) (bad) xchg divb icebp loop mov or pop (bad) enterq out cli (bad) or pop fsubs (bad) mov or jne (bad) (bad) sub rex.R rex.XB mov rex.WR sbb int3 rex.XB pushq in cmpxchg shrl (bad) sub sub cmp (bad) pushq (bad) movsl cmpsb nop rex.RB movsb rex cld enterq pop xchg hlt test (bad) icebp movslq push xchg jne jmpq fs imul sbb movabs lahf sti xchg jmpq push add rex.W hlt mov xchg pushq (bad) fwait add rex.WR iret ds ljmp loop mov cmpsb int cltd loop mov hlt cld (bad) or mov add xchg add enterq mov (bad) cmp (bad) fs fwait (bad) stos add divb scas (bad) out sub mov (bad) sbb jg jle icebp nop nop cli stc cmpsb lock adc (bad) xor test test (bad) lahf ffreep (bad) outsb jg rex.WRB or test xor int3 movl lea sub enterq movabs (bad) xchg or (bad) cwtl repnz cmp xchg lock stos mov int xor repnz mov ds sub movsb mov jmp pop rex.RXB sarb sub (bad) add jo cmp scas (bad) add rex.RXB lock clc enterq push jg or out out (bad) fcoms (bad) xor imul fsubs (bad) loop xchg (bad) xchg sbb sbb imul insb (bad) and hlt sbb movabs lret mul (bad) push push (bad) sub xchg push int3 jne mov enterq xchg pop (bad) movabs rex.X (bad) callq pop and (bad) cmp rclb out (bad) in or xor (bad) (bad) jrcxz xacquire fsubr unpcklps in adc (bad) xchg roll mov hlt mov or cmp mov rex.WRXB push shrb xlat pushq (bad) xor mov cmc imul loope add (bad) xchg mov hlt xor mov imul jne (bad) push fld movabs mov (bad) pop (bad) test movsl mov int push xor adc (bad) add rex.W (bad) js or jl test callq repnz xor fwait cmpsl xlat outsb adc add or mov cs retq jne imul in push sbb (bad) ffree xchg mov fs rex.WRB lods cli hlt adc add hlt bnd lods mov hlt iret mov (bad) rex.RXB xchg mov cmp mov and pop mov add (bad) out cmpsl xor pop jle scas mov sbb mov mov cltd xor std cld add pop mov and adc addb addr32 imul repz pop mov mov add cld or divb sbb pop out or cs push stos sub (bad) mov jg out or rex.XB movabs stos popfq lahf cwtl jg notl adcl and imul cld rex.WRXB fildll add sub fwait ja (bad) mov xchg pushq adc loope (bad) xchg cwtl out rex.RXB cltd push mov imul in (bad) fdiv cld pop icebp mov cmp shlb add hlt movsb (bad) cmpsl movabs xor (bad) (bad) pop or pushfq (bad) and pop je xchg clc mul leaveq lea out dec fbstp (bad) lods movabs cld add in out mov nop (bad) mov sub xchg (bad) out test adc sub jg jle sbb add rex.WX cmp push mov jo sbb jge jo enterq (bad) fsts repnz or (bad) int3 rorb icebp adc imul movsb enterq mov (bad) test add (bad) hlt xchg mov rex.WX sti hlt test imul cmp lods icebp xor mov in jne enterq rolb sub lods std fmuls sbb loopne gs or xor xchg or (bad) imul add js fs (bad) hlt leaveq jmp rex.RX (bad) add cmp imul mov xchg fwait rex.WX xchg jl or rex.RXB (bad) sti adc or mov pop hlt or out callq or loopne lcall iret mov sub or or jmp movsl xor sar add rex.WB rex.WXB push push jmpq cltd clc loop in adc fwait xor adc shll rex.WX mov jmp (bad) iret jne mov (bad) (bad) xor and loopne adc mov hlt lea mov mov xadd or mov js outsb mov (bad) (bad) (bad) mov jo (bad) rex.R adc mov (bad) pop mov shr ficom xlat mov (bad) in mov movabs add stos clc and add push push sub out mov imul add xchg xchg (bad) sub fsub stc (bad) pop pushq loop,pn or (bad) test imul and and jmp adc jbe (bad) adc (bad) lret mov cmp callq xchg adc pop rex.WRB shr ss rorl in or fistpll pop jnp retq fnstenv pop jo or movabs out adc sub push xor jrcxz sub fs jl jae jge (bad) movabs (bad) repz xchg in or add adc fmull hlt or movslq (bad) (bad) (bad) shrl popfq mov rclb add adc or xchg enterq (bad) or out (bad) cltd scas xchg xchg in pushq andps push sbb (bad) or sbb xor (bad) cmpsl addr32 lods test push cmpb rolb fildll pushq and mov int3 leaveq subb mov (bad) cmpsb add mov (bad) imull lods int3 ds lret retq mov adc jp in xchg adc pop jnp in pushq add xor (bad) ja out ss and in (bad) sbb mov std (bad) push mov retq fwait pop sub int3 jno pop push (bad) adc sbb out (bad) jno mov (bad) mov test (bad) outsb sbb rex.RB lea callq push imul (bad) in (bad) popfq in fwait hlt pop rex.WR shll movabs xchg fwait cmp xchg in sbb rex.WB fwait pop movslq sbb (bad) (bad) cmp sbb in mov scas jne pop fs (bad) pop xchg fbstp mov push out insb gs xor jne lods pop push cmc in xor (bad) and cwtl cmp mov in shrb cmp loopne or (bad) jae push (bad) test rcll rex.B mov push jg push mov gs add test nop rex.WRB rex.R repz adc (bad) cld xchg add (bad) pushq cld fstl cmp pushq leaveq adc leaveq int (bad) (bad) (bad) pop insb adc sahf pushq adc add out pop test lret iret or (bad) lock adc icebp iret ja cmp (bad) in out pop js neg push nop lock (bad) mov rex.RXB leaveq out adc cmp jns (bad) cmp mov repnz retq jge rex.WR pop (bad) add pop out mov retq adc pop out neg or pop js xor mov fwait sbb (bad) mov (bad) adc ss mov xorb (bad) lret push and (bad) (bad) nop (bad) jno movabs cmc adc (bad) jo xchg icebp adc adc out loopne jne sbb adcl push push loopne es sbb (bad) (bad) xor cltd cmp jmpq or (bad) xchg xor (bad) push adc push adc (bad) (bad) push out test jns xchg add (bad) add mov movabs rex.W lock cmp pop (bad) imul rex.XB (bad) xor imul insl out movsb mov lret fwait or sub (bad) rex.WRX pushfq repz mov nop or (bad) cmp xchg pushq jno pop xor gs xchg mov pushfq fistp out movabs andb movl add push mov fdivp push add (bad) sbb (bad) (bad) pop out pop cmpsl movabs or mov pushq fwait insl dec jne push retq lea stc cs addr32 mov (bad) (bad) sub movslq (bad) (bad) clc mov (bad) pushfq mov mov rcr cmp lahf rex.WXB cld xor sbb (bad) idivb push ja leaveq ds cmp xchg fldl in clc cmp (bad) (bad) lea cs (bad) xchg ror jne or (bad) int clc add xor or outsb cmp rex.W cmp stc push (bad) (bad) cmp mov rex.X iret je sub (bad) fs add mov movabs out jmp (bad) gs or ljmp xlat mov (bad) jae (bad) rex.RB rex.WRXB rex.WX sub mov jp scas scas sbb rex.RXB (bad) (bad) sahf adc add movsb mov adc gs rex.WRB movabs adc jne es hlt js xchg (bad) stc sti xor fdiv xchg mov mov scas clc callq rex.RX rex.X sub jb,pt adc sub add (bad) iret mov popfq mov (bad) sub sub (bad) lret div insb push outsb insb imul rex.WRB divq sub sbb mov ja imul sarl (bad) test out gs fistpl mov test in mov mov push rex.W push add cld rex.R rex.RXB ja xor (bad) sub test (bad) adc adc sbb xor enterq (bad) xchg shr addl lret fwait sub xor retq cld pop movabs sti xchg rex.WXB sbb test test adc jne ljmp loopne (bad) in mov fldcw out subl (bad) rex.WX faddl test cmp add mov cmp cmpsb nop iret (bad) or or jne mov sbb clc cmc fld rex.X (bad) scas jl or int3 (bad) and mov movsl or rcrl (bad) enterq fs (bad) insb and (bad) cltd rex.XB rex.WXB push add test repnz add hlt mov callq retq (bad) addr32 (bad) xchg fwait scas mov pushq adc cmp cli fs (bad) adc add (bad) xchg add xchg add cmp rex.B nop (bad) in cmp jp roll cmp (bad) jne unpcklps shrb jo retq cmpsl (bad) cmpsb imul rcrl xchg pop (bad) xchg sub (bad) roll (bad) callq retq add pop sarl test jl cwtl rex.W rex.WR sub sub xchg stc jbe cwtl rex.XB sub pushq jo int3 out addr32 fidiv shll sar pop in (bad) mov idivb jnp pop iret sub cmp jge and xor (bad) (bad) jne jo xor mov push (bad) mov xchg rex.RX mov jne fwait pop jo jmp mov mov jno notb or mov (bad) sti nop xor or sub imul testl andb pushq push adc movabs (bad) and imul loop (bad) xor lods (bad) mov add xor nop (bad) mov hlt or (bad) xchg adc mov sbb out and xor pushq test iret add (bad) fnop lret jne jg (bad) or or mov adc lods (bad) test test fwait rex.WRB xor or (bad) not mov in add sub and (bad) mov or cld (bad) rorb stc (bad) add mov jp and add repnz (bad) pop adcl xchg add repnz outsl and (bad) std callq and (bad) (bad) test jle sbb in out mov out (bad) mov (bad) jo insl mov jne cld pop es (bad) fisub jno (bad) pushq (bad) add mov test callq jmp (bad) pop or hlt and xor adc rex.RX (bad) insl data16 leaveq movabs cmc icebp rex.XB (bad) cwtl rex.WXB adc adc xchg imul (bad) add mov pop (bad) and or cmp or fs js or xchg rcl enterq movabs mov rex.XB (bad) out jne rex.XB movabs sub retq xor callq ja sar (bad) pop jne pop int3 (bad) imul (bad) xor fisttpl pop sbb adc add or add rex.RB xchg insl jno xchg (bad) xchg jnp lods cmp (bad) pushq rex.WX adc fwait clc imul or xchg adc or xor jge lods adc sbb mov ss xor lretw sub xor sub mov jmp imul rex.W push out push cmpsl movb (bad) icebp add xor jb rcrb int3 adc xor (bad) imul lahf (bad) mov out rol (bad) mov rex.W mov movabs ror or imul xor (bad) loop in jo lea mov out pop outsl xchg imul mov push loop sub je xor jp movabs int3 jne lods or rcrb imul cs ja (bad) imul sbb pop (bad) jb test ja fcoms negb xor rex.WRXB and (bad) in adc retq lock mov rcrb sbb or cld (bad) rolb sbb sbb std mov pushq xor push jno rex.X (bad) jle add lea mov lea mov (bad) adc fstp (bad) adc int3 rex.WRXB xlat (bad) (bad) sub (bad) xchg test xchg add jno lods out pushq cmp ja mov cltd outsb loopne jne (bad) pop jp add add loop jo push fistp lods mov xchg push sbb cmc (bad) or stc rex.WRX rex.WRB (bad) (bad) add lcall rex.WRX and pop int3 xchg xlat add mov (bad) jbe lret (bad) adc jne out and push std mov outsb scas mov jo (bad) loopne xlat adc push rex je je adcl fadds rex.WRB mov fisttp mov outsl and add jnp (bad) xor jne jg roll icebp std push lock rex (bad) jno sub and (bad) add xor pop mov in lods loopne test mov jae fdiv lods in addr32 gs imul in hlt (bad) rex.RB (bad) sbb (bad) add mov xor xchg jno adc mov stc adc sbb or add (bad) (bad) xchg (bad) add pop add jl jmpq test (bad) or sub jne fdivs or lret sub mov sbb jae sub (bad) (bad) (bad) sub ss movsl xchg adc cmp test enterq callq retq sub jnp fisttpl (bad) or jo pop cs xchg std pop lret nop rex or (bad) pushq pushfq rex.W or std (bad) movsb xor insl cltd sbb outsl (bad) fiadd (bad) xchg (bad) enterq test mov in adc sbb movabs jmpq (bad) (bad) enterq mov cmp or lahf (bad) es adc xor cmp mov icebp (bad) add repz or xor jne xchg rex.XB mov (bad) loopne adc rex.WR mov test enterq mov push (bad) and (bad) or jmpq xchg lret add (bad) adc or gs fsubs adc enterq cmp rex.B (bad) sub (bad) hlt push (bad) negb int3 mov cld flds (bad) sub sub imul xchg (bad) jne movabs adc or sbb (bad) (bad) (bad) cmp mov loopne add cli (bad) out rex.B repnz enterq xchg mull mov (bad) (bad) (bad) movabs xchg jbe add sub out rex.B add sahf (bad) mov sub mov sub in or loope fsubl push pop insb xchg rol jmp and (bad) and in (bad) xchg out xchg mov jrcxz jno popfq mov mov gs in (bad) repnz (bad) and movsb test mov iret callq (bad) scas mov rex.WRXB addr32 rex.RXB nop (bad) rex.X in callq (bad) movsl (bad) data16 mov movsb (bad) sbb fcoml rex.RXB (bad) in add rorb rex.RX (bad) (bad) (bad) rex.WRX mov jl add jrcxz or (bad) insb jmp (bad) je sahf fs jnp outsb retq jb movabs push (bad) out ja repnz js movsb (bad) add in in (bad) cmpb pop (bad) lods fucomi adc repnz (bad) push in xchg sub adc adc jmp (bad) (bad) mov (bad) adc mov decb jbe mov data16 xchg xchg rex.RX ss sbb (bad) (bad) (bad) rex.WR sub mov and (bad) testb notb xchg xchg fmul rex.WRXB (bad) ss int3 (bad) idivb cmc xor or nop rcl imul fimul (bad) (bad) fdivrs jo mov sbb loopne sti mov (bad) push and mov jle fnop (bad) imul xor mov rex.XB lods adc (bad) or rex.B xor cs rex.XB rex.XB jne jle mov pop pop and test adc jg adc or or adc enterq rex.XB test jbe (bad) rex.RXB or ds (bad) lret sarb rcr gs adc sbb push bnd fcompl iret or rex.WRX pop adc lods mov rex (bad) fisubl sub js fcmovnbe adc push push test and cwtl mov test sbb repnz push jl in sub movsb cld cld xchg mov rex.WR pushq add repnz lahf mov add lods fnsave sub lods rex.WXB rex.R adc fistp rex.RX xchg (bad) repnz lock xchg int3 ja push divl mov (bad) div (bad) jbe (bad) push push mov out ss jne mov adc stc pushq xchg xor jno add lods push scas pushq mov adc rex mov in push (bad) fidivr (bad) hlt test in add mov xchg (bad) jge cld not rolb mov rex.WB mov mov rex.WR rex.RXB jg mov in jnp add rex.WXB lock mov xor ja rex.WXB sahf fwait jne cmp or (bad) mov (bad) outsb leaveq sbb nop faddl jnp sub (bad) outsb bt lea lock mov (bad) (bad) in ds jmpq icebp repz mov add (bad) sub rex.WRXB jbe out movabs lret xchg rex.WRB (bad) retq sbb jae rex.RX (bad) rex.WXB and lret in (bad) enterq and xchg je (bad) divb fbld mov enterq stos xacquire out adc movslq or pushfq (bad) stos test movabs mov je or (bad) rex.WRXB icebp xlat lods (bad) add (bad) movsb outsb js sub loope fwait add cld repnz add ja rex.RXB icebp shrl sti xchg (bad) mov (bad) (bad) and xlat pmullw imul pop xlat fldt stc adc (bad) jo fbld hlt rcl (bad) (bad) jne in movabs mov pushfq int pushfq mov movsl adc (bad) or (bad) jns (bad) movslq or jb cmp mulb mov jae cld int mov mov sub test jmp data16 pop (bad) test fdiv (bad) out in cmc imul mov (bad) (bad) push add mov (bad) mov xchg fadds retq imull int3 mov in repz sbb repnz (bad) retq cmp std fiaddl (bad) pushfq rex.XB add mov lahf in pushq push rex.XB rorb push mov rex.R rex.R (bad) mov push sub rex.RX jbe,pt rex.R fs (bad) jno and (bad) adc sub lret jrcxz and add add adc adc mov shll and pushfq (bad) mov je (bad) cmp movabs sbb xchg out xchg rex.WRB rex.X ss xorl mov xor (bad) xor xchg sbb mov or rcrl movslq push pop pushq add xlat cmp mov (bad) mov push rorb xchg (bad) sbb out (bad) pslld data16 shlb int3 adc icebp cmp (bad) ds mov (bad) push stc push hlt sbb push mov scas sub in xor mov fsts pop (bad) callq mov mov repz fsubrl (bad) xchg (bad) popfq xchg rex.W icebp ds adc xor (bad) icebp or lret jo push cld int3 rex imul sbb outsl scas jnp movabs push add xchg in (bad) enterq out (bad) repz (bad) es xchg out loop in mov mov pop and rcll loopne or sbb rcr (bad) rex.RXB movsb stos es adc sbb add push addr32 movabs jmp (bad) pop xchg imul in in addr32 adc flds add outsb andb adcl (bad) (bad) (bad) and xor add nop cmp push cmp pushq faddl repnz jno (bad) loop xor retq (bad) (bad) callq enterq rex.X push loop icebp xchg add add out and insb and add and (bad) repnz ds ds adc cmpsl pushq mov pop insl cmpsb and (bad) mov (bad) shlb cmp or stos rcll adc test add rcrb int3 jmpq and or add out xchg (bad) repz fs or movb retq adc nop fbld insl sysret xlat xchg sub jbe or pushq sub or (bad) jns jrcxz pop (bad) jne sbb (bad) fldcw lahf fstl or gs xor std and adc sub (bad) rex.WRXB rorl icebp movabs rex.WRXB cmc rex.WRB adc adc nop sub hlt adc add hlt rex.WB mov and jb movslq divl xor adc pushq gs jne and add pushq xchg xchg sub xlat pop out rcr push movabs iret lret add test retq xor adc ds int ds add add (bad) jb cmp pop xchg mov out pushfq outsl stos mov add sbb retq repz addl decb repz (bad) callq sub in sbbl jae pushq jo pop xchg rex.X mov jg out mov push mov jns (bad) nop or hlt lock mov je rex.XB icebp imul rex fwait insb mov xchg mov repz decl mov int xor cmp jbe out out unpcklps (bad) jle and xchg sub stc (bad) clc sbb jle callq fs (bad) sbb iret movabs mov cmp out or adc cmpsb cmp (bad) push adc (bad) imul jns gs in nop adc jne add imul jmp jp jae mov repnz in movsb pop mov fucomip xor cwtl test rex.XB and nop (bad) rolb adc callq push insl cwtl icebp loop xchg mov or (bad) test mov in cld movsb mov pop (bad) in test xchg rcll (bad) sti mov popfq pop sub and in in pushq and hlt cmp mov rex cli callq pcmpgtb xor xor rex.RX add sbb in push or mov (bad) (bad) fwait (bad) sub rex.WB mov fidiv movb rorl xlat add mov gs rclb movabs rex.WR cmc retq adc loop rex.RXB jne ljmp sub cmp sub test push movabs rex.WRXB insb (bad) xchg push cld (bad) mov sub mov push adcb int3 adcb mov (bad) fnstenv push mov sub (bad) mov loope imul jl (bad) rex.WR adc and lods in mov adc xchg sub sub imul mov imulb iret callq std xchg test jg (bad) (bad) test xor lahf or push add (bad) xor (bad) testb movsb xor (bad) push retq sub (bad) fildll xchg adc rex.WXB adc add movabs in (bad) xchg data16 and sub popfq jrcxz jge xchg xchg push or pop jmp cmpsb out test sub push add (bad) add or (bad) icebp rex.B (bad) loope adc rex.RB rex.XB (bad) mov add xor (bad) out fdivrl push sbb adc loope mov push jae,pn decl sub jns int (bad) (bad) push rex.XB and xchg sub cmpsl adc (bad) out (bad) jo (bad) nop cmpb (bad) adcl jne rex.WRX cmp (bad) andl movabs js movabs jmpq mov (bad) add lret hlt sbb stos lods fnstsw jno fistp rex.RX mov push hlt xor in and jmpq rex.WRX lahf xor jne add or (bad) fscale callq out sbb lea add rex.WRB hlt outsl out clc mov add (bad) cmp rcl (bad) add cmc mov repz (bad) je lret push mov mov shlb and and and mov (bad) ss (bad) lods cmp lock rclb cmp xor sub (bad) rex.WRX out in sub push imul loope jne subl push cmc std movsb push (bad) jne adc mov lret and rex.RXB jne jne xchg imul mov (bad) cld nop rex.XB fwait xchg icebp mov shl or clc not mov adc adc movabs es sbb in mov mov add in adc xor movslq (bad) test rex.WRXB cltd mov iret test xor int3 push xchg rex.X cmp mov (bad) test int jno jg (bad) insb xchg stos sti stos mov xchg pushq (bad) pop fs and fadds mov cmp sbbl js xor in jne repnz jno (bad) (bad) add or pop jne adc out push mov add movabs cmp imul adc jge mov sbb xor retq repz lahf rex.WR nop testl sahf adc xor in (bad) mov enterq rex.X sub je hlt loopne out sahf je rex.WR hlt sbb or jmpq rclb mov mov or retq xchg jge xchg (bad) jb mov push cmc (bad) (bad) cmc jl fist and or sbb adc fldt rex.RB mov outsl rcrb (bad) movabs mov sbb repz pushfq adc add pushq outsl insb or mov leaveq je adc movabs mov xlat (bad) (bad) insl pop retq mov and xchg or and (bad) adc xchg (bad) in (bad) adc rex.R (bad) movsb add (bad) jo (bad) pop fwait and in xor callq (bad) sub out adc (bad) sub rex.WXB cmp in mov insl gs (bad) js shl jne iret rcl stos (bad) iret mov sub stos (bad) xchg nop test popfq lock mov adc cld jne (bad) (bad) fwait jb rex.WRX xor (bad) (bad) pop movabs jrcxz pushfq jrcxz adc (bad) rcll sbb adc movabs (bad) xor (bad) mov (bad) rolb (bad) movabs rex.WXB cmp add int3 in add movsb (bad) fimul (bad) mov rex.W mov xor or adc (bad) shlb adc mov (bad) or add rex.WRXB lods add test adc mov fimul sbb mov retq retq in and icebp push (bad) pop sbb pop (bad) jrcxz neg adcl xor movsb mov sti (bad) nop in sub rex.R mov retq fninit fadd xchg js jae mov adc rex.RXB movabs xor or nop adc xor sub adc and pop (bad) xor imul mov or jnp rex.XB or and fistl test fldcw xchg (bad) mov enterq cmp loopne stc or (bad) xchg ds lock out in out stc out movsb rcl bnd stos jmpq (bad) xchg xor or icebp mov (bad) mov (bad) cld xor rex.RX or or std jo stos int3 test pop xchg (bad) out jmp lods or xchg lods test (bad) (bad) mov (bad) and or xor sbb (bad) pop mov movabs (bad) sub imul clc cs fsubrs jle cmc nop (bad) sti fdivrs (bad) fdivr fiaddl jb (bad) mov sbb xchg (bad) jno (bad) (bad) int jb (bad) xor mov mov pop add gs fwait adc vbroadcastf32x8 addr32 push rolb mov pop rex.RXB or (bad) (bad) callq xchg imul movsb mov sbb sub and push icebp addr32 (bad) adc repz outsl xor jl (bad) add retq mov mov rex.WXB cs cli jno addr32 push test mov rex.XB mov cmpsl sbb scas sub orb pushq rex xor imul sbb xchg movabs data16 gs ss cmp (bad) loopne push enterq rex.WB (bad) jge fnstsw push jp andl es jno mov sub callq (bad) loopne (bad) and hlt mov rcrb or subps mov movabs push ja icebp int3 mov and hlt imull sub cs (bad) adc or repz sarb adc imul cs movabs retq jg add jg pushq xor jbe mov mov mov push repz mov cmpsl cs nop in and imul stos (bad) sub (bad) (bad) mov insb cmp mov (bad) and loope xchg rex.WRB jge test adc fist (bad) cmp cmpsl (bad) xchg mov test (bad) addr32 rex.X jmpq mov addb jno imul sbb repnz (bad) jp incl pop repnz or imul rep ja xor (bad) or hlt rex.WXB retq mov pop hlt add shl rex and iret hlt addl add rex.WR xchg or cmp andb xor pop not test shl push xchg and imul fdivrl mov (bad) rex.RXB outsb cmc adc fistl mov or sub (bad) adc add (bad) xor xlat pop in adc divb orb add jns push hlt rex.WB xor sub pop jb mov scas lods mov mov push loopne add loopne push repz mov mov (bad) fdivs (bad) (bad) mov sti je (bad) movsb rex.WRX outsl iret (bad) cld sub push hlt jmp rex.RB mov xchg or xchg sub mov xlat (bad) int add add in jae mov rex.R rcl (bad) lock fcoml fdivr or lret (bad) repnz or sbb xor fwait mov loopne xchg rolb pause cmp loopne adc sha256rnds2 xchg int ficom lahf (bad) jb push mov rclb push fabs or in out lods (bad) cld xor jae test (bad) imul sbb jrcxz xor and cli in icebp rex.W sbb insb cmc add (bad) xor rex.R lock rex.XB shrl cld rex.RXB imul mov adc xor rolb callq mov add mov or movsb add sub mull sbb shr fsubp sbb (bad) repz xor rex.WX testl mov or in hlt jg adc xlat (bad) subl add insl pop cli out flds push jb mov adc fld sbb (bad) (bad) add rex.WB repz (bad) std subb movabs popfq xchg rex.WRX and out jo xor mov cmp sbb push (bad) sbb add or pop push insl (bad) hlt out ja retq lret mov popfq iret imul push lret cmpsl int3 adc xchg rex.XB mov mov adc mov adc push in (bad) cmp xor (bad) negl jbe pop callq (bad) xor js cld xchg fwait jl lods xchg or rex.WXB data16 lret (bad) mov (bad) hlt iret mul add (bad) push mov or jrcxz fs insl in add xlat sub stos add xchg mov xor jmpq mov (bad) clc js test (bad) (bad) xchg jbe (bad) adc retq (bad) jns jb mov mov mov jne in std (bad) (bad) (bad) hlt xchg es xchg insb fmuls xor int test rorl mov jrcxz adc (bad) (bad) out jmp ficom test push (bad) sbb (bad) mov (bad) adc (bad) adc xor (bad) mov loop popfq or add es lahf loope movsl (bad) in jmp rcr popfq push mov adc sbb repz jl hlt je (bad) (bad) enterq in xchg repz mov stos icebp (bad) enterq mov ss (bad) fs (bad) add out (bad) leaveq sbb xchg pop mov faddl mov cmpsb stc add fs lcall (bad) jne sub testb (bad) mov mov add div subl mov enterq (bad) sbb hlt jmpq adc xor movabs fpatan in nop rex.B scas retq jge add es imul cmp mov xchg (bad) int fsubrl xchg (bad) pushq (bad) xchg ja lahf fnsetpm(287 add cld mov adc int3 push cmc movslq (bad) insb cltd jbe lret mov xchg xor and rclb mov cmp addr32 add movabs rex.R movsb insb pushq jnp fs add push adc xchg and pushq mov (bad) rex.RXB rex.X jge imul pop cmp (bad) (bad) std mov add lock in (bad) in (bad) cmp callq iret adc mov (bad) sub xchg fwait retq outsb bts cmp js jmpq jns (bad) sbb lock sbb setb stc scas xchg cmpsb or jge or add out mov in lret sbb callq (bad) rex.WR xchg test pop jge rex.WRXB stc hlt rex.XB and sbb jrcxz mov (bad) pushq cmp (bad) or and movsl fnstcw movsd rex.WRX rex.XB rex.RB repz mov cs (bad) adc cmpsb out pop (bad) repz (bad) mov out ja mov xchg sub jmp rex.WRX sbb insb cmc pop in (bad) in sub loopne jge movslq lea adc mov lock mov mov fdivl xor cmp and (bad) test icebp rex.WX push movabs icebp jo mov push pop sub rolb (bad) jbe jb imul lods jbe jae gs pop jno (bad) xor add (bad) test enterq rex.R xorl xor (bad) xor xchg rep in hlt cmp adc test hlt out (bad) sub lods xchg add lock cld shrb (bad) xchg xor rex.WR (bad) hlt (bad) or mov adc push cmp (bad) pop xor outsb pop rex.WRX subb mov loop add addr32 mov loop es mov (bad) nop adc jbe movabs repnz mov pop hlt or (bad) add loop (bad) pop pushq je (bad) pop push lret pop xchg (bad) imul test (bad) test xlat pop int xor (bad) cltd bnd jb or rex.XB add mov adc (bad) mov rcrl popfq (bad) (bad) jbe sahf (bad) xchg (bad) adc jbe imul (bad) rex.WR scas shr push jl out mov and mov test rex.WR rex.RB and rex.X (bad) movabs rex.W outsb rex.WR xchg out or mov and or adc xchg add sbb mov jrcxz mov movsl push xchg rex.R fcomps mov or (bad) (bad) adc fildl lock (bad) mov movsl push or movsl xchg stos adc cmpsb adc mov mov and pop cli (bad) or jl (bad) movsb repnz shrl add rex.XB rex.WX sbbb pop nop or mull mov (bad) and xor fsubr ja mov (bad) rex.XB repz pushq (bad) (bad) test je out sahf or rclb int3 sub mov or es cmpsl add mov (bad) (bad) (bad) xor repz (bad) movslq jrcxz jge jle rex.X enterq stos xlat popfq int3 rex.XB rex.RXB jne lahf mov rex.RX (bad) clc retq movabs xchg and xchg ss outsl mov scas sbb (bad) (bad) hlt cmp (bad) (bad) (bad) repz stos imulb leaveq pop jge icebp sbb xchg xchg cmc xchg callq hlt adc iret (bad) (bad) std adc icebp ja (bad) pop sbb rex.WXB lock rex.XB out cmp adc adc xor cmc fcoml je pop hlt xor jge (bad) and xor sub loope frstor setb (bad) rex.RXB out in divb retq repnz jmpq rex jl outsl hlt xchg fcomps sub pop push xchg sub ftst xchg xchg stc xor fstps gs lret xor callq add jl rex.RB in int3 (bad) push js push (bad) (bad) jne sbb push rex.XB rex.WRX pop jl mov mov mov rex.RXB rex.RXB jae jne rex.WRX sbb push or xlat adc (bad) sti (bad) rex.XB (bad) movabs pop (bad) push mov pop add (bad) rol js or xor scas pop icebp retq or mov imul loope sub adc xchg xchg sbb mov rclb jns mov sbb mov jge je xchg movl and je mov jo ror cmp int (bad) pushq (bad) (bad) add lods test push or jo pop (bad) stos rex.WR repnz out pop retq scas gs enterq outsl sbb retq mov in jne sbb rex.XB pop test sbb (bad) (bad) pop push xchg data16 jo cwtl (bad) xor cmp add xor (bad) not test jmp cmpsb adc adc add xchg xchg push retq rcrb in in (bad) (bad) mov push sub xchg and (bad) jno mov insb xor je fdivrl (bad) mov adc movsb (bad) in xchg cmp fsub mov fcom or cwtl or sub fist lret cmpsl rex.R (bad) jne mov xor fwait outsb (bad) xor (bad) lock jmpq (bad) xor (bad) bnd rex.WXB xchg jb or mov mov iret cmp inc andb movabs or jmpq jl and (bad) jbe push test hlt (bad) sub sub jnp adc rcl mov out adc rclb callq rex.WB xchg (bad) out repnz or fs add add mov jl mov scas sbb in shr xlat add test mov xlat or lock je sub or jg movsl or hlt div loop sti jl rex.RB mov decl pop jl fdiv je cltd (bad) add push sub rex.WXB int cmp xor std or cmp rex.WR rex.R and fdiv pop lods (bad) sahf push fistpll xchg (bad) (bad) rex.WRB jl fidivl mov lods jns pop out or lret xchg insl mov retq sbb (bad) sub (bad) xchg pop loopne adc add rex.RXB adc pop mov adc xchg or loop push sbb movsb cmc cmp mov (bad) adc stos movsb mov mov mov or pop (bad) sub pop lahf std jp rex.RB fdivrp out je adc xor retq push xchg or cwtl icebp (bad) rex.WRXB test sub rex.WRB sbb lahf mov or rex.W rcl add xor cmp xor pop push rex.XB add movabs je or push (bad) cli adc sbb jns mov (bad) sub loop lods imul or mov jnp cltd movabs pop (bad) sbb std mov (bad) cmc out mov rex.WRXB mov lock cmp or (bad) pop cmp jae cmp (bad) lahf pushq out xlat ss rex.X xchg rex.WRB je pop xor mov pop pushq push push mov (bad) rex.XB test cld imul mov mov sbb test stc loopne or cltd nop hlt (bad) (bad) (bad) retq cwtl mov mov jne push cmc xor xor test (bad) std fisttpll jmpq and out lock cli movabs scas movabs xor rex.WR outsl icebp (bad) sbb repz adc icebp xchg rex.RXB rex.WRB or adc xor (bad) sub sub testb adc add xlat adc ss rex.R or insb add out or stc mov fidiv loope sub hlt and pop (bad) xlat fwait mov mov add cmp fbstp mov mov sub (bad) mov push movslq mov test mov jne jmp lea (bad) (bad) pop mov mov callq js mov add movsb (bad) (bad) stc cmc retq and cs pushfq xlat in (bad) (bad) movsb (bad) out xchg rex.RB loopne cmc fs movl rex.RB mov cs jbe enterq nop or adc cmc rex.WRX out (bad) push scas mov sbb test rcl or (bad) fldenv push mov ds add cld nop scas insb mov js hlt mov fcoms imulb repnz lock add lock rex.XB or outsl rex.WR (bad) add jge cmpsb (bad) sbb cmp and sub jmp xchg mov loopne hlt (bad) movabs adc repnz out sub (bad) rex.B pop add mov xchg jno xlat mov and xlat add sub mov enterq and insb insb (bad) loopne movabs or cmp xor (bad) mov xchg out repnz addl xchg xor std iret outsb adc (bad) imul test cmpsl je push lahf stos sub je adc (bad) lock sub lahf (bad) rcrl je pop (bad) xchg and pop adc (bad) or rex.XB rex.X (bad) xor mov (bad) rex.WX xor push (bad) mov pop (bad) sbb rex.WXB mov add add or (bad) ja test cmp (bad) xchg rex.WXB out out add hlt rex.WRXB (bad) cmc jne icebp fistp pop jle jo cmp int3 nop movsb xor (bad) imul mov pop and test retq mov mov addb sub jrcxz int int3 add mov repz jrcxz sbb test pop stc test pop retq mov (bad) scas jmp je (bad) mov retq movabs (bad) cwtl sbb jbe mov lock imulb mov xchg xchg and cmp push idivl push (bad) (bad) out enterq cmc xor mov (bad) stc or clc (bad) jmp lret push mov loope je xorl sub fwait sub (bad) (bad) test hlt stos (bad) xchg sub fadds ficom js or fstps retq in xor push mov adc cmpsl jnp adc (bad) or loop (bad) (bad) jno mov (bad) push adc adc divb jmp imul fcoms out sbb nop std or (bad) pop adc adc mov sbb rex.RXB mov add xor and sbb mov test retq xor (bad) testb sbb sbb scas scas push sbb imul fwait adc out hlt xchg add icebp (bad) mov fnsave xor rex.XB jae adc sti (bad) jmp mov mov push or (bad) xor retq rcr (bad) mov rcr sahf add (bad) adc mov fs (bad) jne fadds sbb nop mov or lock sbb jle mov lret push pop lods fildl test xchg add retq xor (bad) mov fs movsb movabs (bad) push repnz pushfq mov push (bad) repnz (bad) insb adc (bad) mov rex.RB (bad) lock insl sbb out jmp fdivs adcb fcmove adc mov rex.WR (bad) cmp out hlt mov xchg push sub mov cli pop rex.WRB rex.RXB sbb movabs movsl stc hlt pop xchg (bad) fcomp (bad) sbb or xchg push or (bad) jle xchg out sbb mov jp iret (bad) fbstp fcmove sub add rex.XB repnz in ss mov test shl movabs lock (bad) test out fcoms and mov pop out mov sbb mov retq fild repz xchg (bad) (bad) (bad) jo adc (bad) jg outsb insb (bad) xor sbb sti sti movsl sbb retq sbb fcmovne push adc cmp mov in (bad) xchg (bad) (bad) test movabs sub cmpsb rex.RX (bad) sarb push xchg and add rex.WR callq iret xchg xchg mov (bad) std rex.WRX sub rorb (bad) jbe (bad) (bad) adc add pushq mov fwait pop and mov nop shl jae js lahf and sbb loop push xchg lret (bad) es xor jnp test xlat mov and (bad) sub pop fnstsw insl pop rex (bad) adcl add popfq add xor pop jne int pop (bad) test push lock sub test (bad) add jmp sub sbbb add orl roll (bad) mov add fdivrp retq shll xchg (bad) popfq xor or jnp (bad) mov (bad) jmpq and rcll je rex.WR scas retq mov xor outsb cwtl mov sub lret data16 push sub xor cmpsl xchg je ss mov mov cmp int3 fs jg rex or and (bad) testb rex.WR repz sub sbb (bad) mov ficom jno mov sti adc rcl js sbb rcll sbb or cmp jg pop (bad) add jae xchg jrcxz cmp (bad) pop jmp ja pop (bad) cld shrb mov (bad) mov and push mov adc (bad) (bad) jmp adc (bad) or negl (bad) testb add fadds mov push add adc sbb negb rex.RX (bad) and in es (bad) xlat (bad) or repz jg test jb cmpsl xchg or test and cmp movsb adc add mov xchg or leaveq movsb push pop jne outsb mov sbb (bad) adc push xor (bad) test cwtl pushfq je imul stos push int (bad) or jmpq retq add addl jg xor sti fadds movabs jmp rex.RXB divb xchg sub mov add roll movsl or and cltd test or sbb repz jg jmp cmpsb test xchg sbb push scas cmp xchg (bad) sti fbld cmp rclb xlat hlt and and (bad) ja int3 fwait push mov mov jae mov sahf sbb (bad) out iret push lahf pop mov lock (bad) mov adc add scas lret jmp add or xor callq xor imulb mov sub fdivrl adc (bad) test cwtl lock roll sbb rex.RX jl shrl (bad) lock cmp xlat add repnz (bad) sbb mov and (bad) (bad) ficom mov divl cmp (bad) push out and mov adc mov add rex.RB rex.R mov xchg enterq div out adc cmp and test loopne rex.WB mov imul sub callq (bad) sub test rex.WRXB xchg add imul js (bad) test pop addl rex.RXB gs xchg (bad) xor bnd outsl imul add (bad) stc add imul int3 or sbb and (bad) push or cld cld in mov rex.WXB movabs rorb jo or (bad) rex.WB jbe rex.WRX and fnop rex.WB push mov (bad) std outsb (bad) fild push (bad) movabs orb shl mov out in (bad) (bad) int jae mov (bad) push lock lods (bad) cmp callq pop (bad) fnsave (bad) xor nop fcoms insb rex.XB push in mov out xchg fisubl fwait jnp retq add fdivs or jae mov ds mov lea ja repnz and push xchg loope imul jo sub shlq push xchg repz and and xor mov mov sbb mov fnop ss or mov sti sub push push ja cltd or jmp (bad) gs pop fdivl cltd xor jno add add insb sti and pushq (bad) ja mov or cmc rex.WB jge xor mov xor lahf adc scas (bad) insb (bad) je mov add and xchg loopne mov (bad) movsl mov push in cmc cmp and cmp push in rex.RB cmp insb sarb mulb (bad) (bad) xor rex.WR add push out mov xchg (bad) (bad) (bad) or std lock mov or hlt fbstp movl or xchg push out movabs gs adc adc adc cmp lods add xor lods push jb xor xchg repz (bad) sub (bad) imul push rex.WRXB add in or or out movabs sub jg mov adc pop and fs rex.X out mov xchg adc neg movsl (bad) lea mov pushfq or mov (bad) sbb mov push rex.XB (bad) mov pop mov movl movabs (bad) sub add cltd repnz and adc test int3 adc cmp data16 rex.WRXB repnz or shrb in add mov int3 cld mov int3 clc mov rclb push or cmpsl mov add je fs mov callq mov adc add testl mov mov add or xchg pushq test mov mov callq mov lods and pop add pop repz (bad) push (bad) (bad) (bad) (bad) rclb and rcll pushq in pop loop cmc mov mov rex.W loopne or pop andb mov sbb loope (bad) add mov fildll rex.B std (bad) mov (bad) sahf rex.RX hlt mov fucomi rcr sbb sub mov jmp rex.RXB and xor add adc retq cli lock cmpsb test jne rex.RX ja int es ljmp out in (bad) es and sbb mov movabs sbb movl outsl xchg sbb cmp xor rex jno sbb jbe out repnz lea xlat (bad) mov add (bad) jmp (bad) mov in mov xchg stos adc xor movabs (bad) push cli (bad) test iret movsb (bad) rolb test (bad) (bad) (bad) add lret hlt xchg or add jbe add xor callq mov (bad) shll or rex.WRB (bad) addr32 add test in jp jo (bad) jle add (bad) (bad) popq out xchg add mov mov mov xchg (bad) xchg xchg add cmpsl or lea (bad) ss add rex.RX mov test add ss add cmc pop nop in (bad) callq mov push xor or lea (bad) gs add rex.RB mov add ss nop in (bad) callq mov test ja movsb jmp pop packsswb iret sub cs mov adc (bad) mov out push outsl xor rex.XB movsb mov adc hlt fs test fmul jg stos rex.RXB repnz mov pop js rcr in nop push (bad) test es add rex.WRB loopne nop rex.RB rex.WRXB cmp add xor rol rex.W sub out or (bad) xor callq loop push repnz cmpsl (bad) xor mov movabs xchg (bad) fldt (bad) loop,pt ja cmpsb (bad) mov push (bad) lea cwtl xlat pop roll xor fwait jp xor rex.X rex.WB mov hlt sarl xchg rex.RXB xchg cmpsl jp in imul mov mov (bad) mov insb out mov cmp or js fs sub lock xchg sbb rclb push lret lods rex.R js push lcall sub lret adc fs sub (bad) xchg addr32 adc sub and mov push (bad) movabs xor lret movabs add add or xchg loop jle (bad) pop rex.WRB add test add bnd jrcxz (bad) lods mov retq jmpq push mov (bad) mov outsb or enterq and (bad) jne mov fnstenv (bad) add and cmc scas push cmp pushfq rex.W jg (bad) rex.R (bad) add (bad) rex.X mov xlat (bad) cld mov add subl in mov or cmpl loope mov xlat hlt test xlat test movabs repz and (bad) mov out (bad) pushq loope (bad) push fisubl push xchg mov cmp cltd add rex.WXB bnd loopne mov js add (bad) rex.WRB sbb in sbb xchg jmpq rex.XB mov xor mov hlt rex.WXB roll (bad) cmp mov (bad) leaveq subb gs int callq sub cmc cmc adc jbe callq jno idiv (bad) or xchg stos rex.R retq (bad) (bad) xchg mov or add out shr mov cld (bad) movabs js lahf xchg xlat (bad) adc (bad) jbe icebp xchg imul popfq stos cmc popfq int3 js rex.WX rex.WRX rex.WB sub (bad) cmp mov js xchg adc jp pop xchg loope push mov adc pushq cmp adc mov scas fnstcw push xchg or rex.RXB rex.RX sbb sti xor (bad) or test (bad) adc mov mov pop in test push sahf cmp rex.WRX adc vmovsd adc lock jo (bad) jne (bad) mov out xor sbb sarl add mov xchg xchg jo xchg imul lea rex.WRX out and adc xchg (bad) rex.WXB jb addr32 xchg sbb jne jmp jbe jle mov jnp xacquire idiv cmp sub vsqrtss out cmp rex.WXB cmp rex.WXB rex.WR add callq (bad) jrcxz int rex.WXB jmp (bad) lock xorps divl movabs movabs (bad) rex.WB scas repz xor cmp loop (bad) add mov mov rex.WR sbb adc (bad) shl (bad) xchg (bad) add jne adc mov adc (bad) loop stos (bad) stos movabs and in insb orb js push (bad) adc mov push add rex ss xorb (bad) (bad) cmovs (bad) or lods xchg out adc hlt movsb and (bad) callq in and sbb (bad) xchg or cltd stc mov (bad) (bad) jmpq (bad) (bad) add mov cmp loope js (bad) add (bad) sbb adc (bad) adc mov xor xchg jge test (bad) rex.WRB sbb mov sbb jmp pop iret es rex.RXB lock mov shr movabs jmp pushq xchg jmpq movl and (bad) (bad) xor (bad) (bad) xor (bad) iret (bad) rex (bad) cwtl jmp retq pushq out xor (bad) push cmpsl xlat (bad) lretw cmp jbe repz (bad) mov repz outsb out (bad) cmc or jae (bad) (bad) mov pushq jae xchg pop mov lock sub sub and rolb push mov or movsl cmpb cmp sub (bad) jne xchg andb rorl xor jmpq jmp test jb xor add pop sarb out sti (bad) insl repz push js mov loopne add sbb jmp and imul retq cmc (bad) pushfq movsb fildll push xchg adc (bad) movabs xchg mov sahf cmp mov jp xchg imul out xchg rex.WRB rex.WR and movsb pop pop jl (bad) out rclb lea push fimul or fnsave xor cmp adc iret mov or stc mov mov loopne int xor retq (bad) cltd (bad) add in in pushq cli (bad) xchg jrcxz stos lea mov movslq test mov and jo (bad) int sbb shll pop sbb or or sbb and jne (bad) icebp and movsb out (bad) fistpl xor stos gs sbb sub mov insl xchg loope addr32 rex (bad) fs (bad) out fild jmp push rex.RB (bad) imul repz movabs add cltd mov sub jnp lods out xchg roll add or rcll rex.WR out loopne (bad) hlt jmp movabs mov adc lret loop sub sub (bad) int add retq jmp in sti outsl mov js (bad) sbb js pop push jno jl enterq push insl mov (bad) out in sbb pop rex.WXB (bad) je xlat xchg out pushfq fnop iret (bad) pop push xchg (bad) idivb pop (bad) rex.R sub or push test repz rex.XB xchg (bad) rcr (bad) sub rex.RX push pop fimul out (bad) xor mov (bad) mov xor xchg fisubl sbb adc (bad) jge (bad) rex.WX mov jmp (bad) xor (bad) gs rex.RX (bad) add mov loopne pushfq sbb mov hlt or fstps (bad) (bad) xor out mov int3 (bad) (bad) jmpq jl (bad) js (bad) xor cmp pushq jl out shld loop xor xchg push mov (bad) outsb adc (bad) lock loope sbb add (bad) or stc in movups enterq mov cld or rex.WRX std rex.RXB sbb outsb and movabs cld mov leaveq and cmpl pop repnz mov and (bad) mov std mov imul add xor insb test jg jl loopne leaveq cld data16 xlat std push orl cmpsb cmp jae add mov jmpq cld and push (bad) cmp sahf orl push repz (bad) ds pmuludq and repz mov clc (bad) std mov sbbl fdivrp add and (bad) negl mov int3 cld clc hlt mov out mov mov xchg jo mov insb outsl out in push mov retq adc test fmuls pushq cmpsb jrcxz movsb add sti sbb pushfq rex.RX rex pop mov sub movsl cmp add xchg bnd push mov movabs rclb xor mov mov outsl sahf mov jne xchg rcrb or out sbb pushq movabs mov and mov movabs rex.WR (bad) xchg roll rex.WR (bad) (bad) push xor test pushfq or in or loope addr32 sub adc sbb icebp pop jrcxz lods rclb int3 pushq out mov adc jrcxz enterq (bad) rex.RXB movabs jmp sbb add outsb repnz test rcr add loope push clc (bad) or rex.X pop rex.R rex.WR mov adc shll callq jae shrb sbb loope sub cmp int and jns out pop (bad) cmpsb loop jnp int3 mov fidivrl iret rex.RXB adc adc (bad) xor or (bad) cmp std cmp cmp cmp xchg or cmp imul mov fwait xor out fimul je and and rex.X lods in outsb and (bad) fsub jbe xchg rclb sub (bad) jmpq add es xor jp (bad) sub cmp pushq sbb faddp sti jl pop add rex.XB hlt add push fsubrs (bad) (bad) mov clc jbe out lods (bad) pushq (bad) (bad) scas imul mov (bad) xor (bad) sub mov jmpq movsl clc imul xchg sub jb and and (bad) pop sub cmpsb insl hlt divb lret jmp mov js cmpsl rex.RX mov iret mov sub (bad) xchg mov fcomps in (bad) sbb fist icebp xorl add adc int lods xor mov ja and fsubs mov jle in stos xchg test rex.R in adc loopne cmp out fcoml rex.W icebp cmp stos and pop imul insl (bad) jae jmp leaveq xor ror rex.WRXB (bad) cmp xor loope adc icebp or push sbb outsb pop ja pop (bad) lock mov push mov fdivrs divb es enterq sbb add push (bad) mov (bad) jl mov or jecxz loopne (bad) callq fwait adc pushq xor sub xchg rex mov sbb (bad) mov (bad) adc int3 faddl iret rex.B xchg xchg retq pop adc test mov sbb shl clc mov or movabs fldenv cmpsl cwtl lods out add push fmuls (bad) lahf xor (bad) xchg mov hlt xorl (bad) retq jo (bad) pushfq (bad) add xor rex mov adc xchg rex.WRX callq (bad) outsl cmpsb or movabs (bad) (bad) loop sub sbb cs (bad) cltd (bad) (bad) sub xchg lret push xchg repnz jbe (bad) pop test mov rex.X scas push (bad) (bad) popfq incb test rex.RB rex.WRX gs pop push icebp xlat test mov mov and divl rorb lret pop addr32 mov and and rex.WRX add sbb sar lcall cmc lods rex.RXB imul mov xchg loopne (bad) sub mov lahf cmp imul mov xchg (bad) cld lock (bad) (bad) mov xor sbb rex.W adc out int rex.B sbb (bad) icebp repz test (bad) sbb jbe cwtl rex.R mov fidivl movabs out in setl add jmpq mov int3 fwait repz sbbb and lock rolb (bad) cmpsl out cmp jb test (bad) (bad) jne (bad) sahf mov jae outsb in pushq mov popfq add rex.X (bad) imul push (bad) (bad) enterq lods and jmp pop adc or or cmc rex.WRXB jnp mov xor xor xor (bad) or rex.RX rex mov ficomp mov es (bad) pop add (bad) and jle enterq or (bad) mov outsb (bad) sbb (bad) (bad) (bad) mov pop iret int mov cltd (bad) adc sub (bad) stc repz out (bad) xor movsl cmp mov or hlt mov clc (bad) or xchg pop adc rex.RXB (bad) mov or add in sub or cmc cli adc lods cmp mov gs cmp in fcomip pop test mov (bad) mov rex.RXB sub lret and hlt movsl xor xor out cmc test mov xchg sbb or out fcoms add xchg xor adc flds fadds adc out and add movabs add xor in iret and add cmp lret insb je cmpsl add iret sub cmp and in test rex.RXB xor (bad) jnp int3 push fsub in outsl in cld in xchg sbb (bad) push jbe add or rex.RXB (bad) je cmp sahf and and mov (bad) stc or (bad) adcb movsb sti and (bad) mov mov sarb (bad) push (bad) adc (bad) cmc ja jmpq fsubrs and (bad) jl fcmovne jrcxz (bad) or imul mov adc test pop in xchg stc clc hlt in lret fcomps push xchg (bad) jne iret outsb cli push (bad) cld jp push jmpq (bad) sub test and mov add pushq subb sbb nop outsl jrcxz (bad) jb push popfq imul push pop (bad) mov and sbb or xchg mov leaveq callq cmpsl bswap sbb loope data16 (bad) ja mov (bad) or (bad) and sbb pushfq adc rex.WX add xor ds mov add std or gs fwait pushq out jo cmc mov cmc rex.X rex.WB pushq out xor lret out or jp rex.RX xlat hlt (bad) mov out repz idivl lods and add and (bad) movslq jg (bad) add (bad) xor test popq (bad) adc xchg adc rolb (bad) stc sbb sbb sub gs add out movsb in and in rolb sbb sbb lods sub xor or sbb sub mov cmpsl ja fisubl int in add xor or leaveq (bad) mov jge movabs (bad) out icebp mov (bad) popfq jrcxz,pn (bad) (bad) mov xchg (bad) rex.RXB pop add and xchg jmp push movaps sbb or cmovo (bad) mov sub jmp push rex.XB lock lcall int3 (bad) xchg rex.RXB and int3 test push out adc scas test rex.WR (bad) (bad) rex.RB test add jmp cmc mov addr32 sbb (bad) mov repz and mov (bad) mov cmpsl or in cwtl mov rex.WRX xchg pushq push or or sbb sbb jo sbbl mov cmc test (bad) push (bad) andb xor cmp (bad) test test pushq xchg je out add mov (bad) (bad) (bad) sbb mov (bad) insb je std add sub rex.XB popfq movslq sbb (bad) add hlt sub xchg repnz (bad) movabs popfq test in (bad) clc or callq sbb and (bad) sub mov sub add sub icebp (bad) adc or or (bad) mov repnz xor (bad) movabs callq xchg movsb sti (bad) xchg xchg add (bad) xchg pushfq je nop adc (bad) mov ljmp add jge push pop fidivl mov adc out pop adc xor xchg iret lret idiv (bad) loope mov scas add sbb jne mov out rcll adc cmc divb cmpsl push mul adc cmp punpckldq (bad) xor add shlb in hlt nop fadds cs xlat imull jae loopne or je test sbb out js jb add (bad) insb mov jne pop rex.WR cmp rex.WX int3 xor rex.WR movabs (bad) add jrcxz rex.RB repz in addb sub ss (bad) xor pop retq xor mov xchg insb xor rex.B pop rex.XB push or (bad) je nop imul in movsb test mov in xchg rolb pushfq repnz ds sbb int sbb xor in (bad) mov lret or adc in cmp cmpsb and push rclb jae cltd (bad) (bad) in lock add jmpq rorl (bad) rex.WRX (bad) xlat rex.XB and out (bad) rex.RXB rex.X xor addr32 test in or (bad) (bad) add rex.WR insb push (bad) xchg outsb movabs int add or fs cmpsb out hlt loopne (bad) std retq mov jnp negl bnd loopne rex.RB sub add out pushq pop retq jne adc (bad) mov jo rex.WRX (bad) mov (bad) (bad) rex.X sub sub fcomp (bad) (bad) repz mov (bad) idivb (bad) test out mov mov shrb xchg add retq mov std adc (bad) fcom subb rex.RB mov jrcxz (bad) adc xchg jo jmp xor lods int and in (bad) movabs lods nop or cltd icebp xchg movabs rorb addr32 (bad) jmp and rclb or add lock stos rclb xchg pop sbb pushq lahf jbe or rex.WB enterq or in (bad) xchg imul and mov rex.R retq add rorb fsubrs enterq push mov imul add add or xor rex.RB rex.RX fst movabs loop loop rex.B imul imul sub fwait or pushq repz mov rex.XB xor add jne sbb in or sar (bad) or mov or sub mov fdiv nop xor xchg repnz mov lea rcr and xor (bad) in movabs rex.W scas (bad) mov rex.WXB mov (bad) rex.XB mov jl fisub (bad) popq movslq rex.WRX cmp add icebp je in (bad) int andb jbe or or in sub imul rex.RB (bad) or mov int3 clc pushfq add faddl in sbb enterq pushq sbb (bad) add int (bad) mov rex.XB (bad) xchg repnz (bad) rex.WRX out int3 (bad) add and and int out or or sar xor mov popfq nop repz outsl and repnz (bad) xchg pop and adc xlat jb movsl or xlat callq jrcxz loopne add or (bad) fsubl sbb sbb rex.RXB xchg cmc or rcll rep cmc in hlt int3 adc mov (bad) rex.WRX add test cmp enterq movabs paddd imul (bad) ficoml mov (bad) rex test cld popfq imul shrb idivl punpckldq add out cmp cmp retq rex.WRB (bad) rex.WXB adc in xchg sti xchg popfq iret add add xor divb (bad) xchg fucomp cltd sti mov lods rex.WR xchg push test iret adc jo test movsb cwtl (bad) ja out cmp xor test movsb push rex.RB fistpll add jne out xlat (bad) lods in movabs (bad) pushq or (bad) cltd (bad) in rolb (bad) (bad) mov xor push rex.WRX or hlt jrcxz add cltd iret and cltd jne out push (bad) fldt gs xrelease (bad) fstps cmpsb faddl je data16 movsb push add sbb add or fs mov mov or xchg rex.WXB rex.WX xchg (bad) stc andl stos test and add (bad) jne (bad) (bad) add movsb rex.RB (bad) (bad) (bad) icebp mov pushfq or sahf mov mov mov std je (bad) (bad) xlat popfq mov (bad) fmull movabs test (bad) test icebp add and add mov cld retq jnp jle rex.B idiv iret sbb frstor (bad) cwtl fs (bad) out lret (bad) loope mov mov cmpsb in (bad) adc rex.WX in or stos adc je xlat fs and popfq in mull fnstenv iret mov mov and (bad) movsb xchg movsl xchg xor int3 mov lahf icebp fs xor jo push push sahf (bad) push push in (bad) mov xor test popfq in adc sbb mov (bad) push mov int3 jno lock rex jbe (bad) cltd sub mov (bad) and jae jl cmp not cli rex loopne je loopne push sti xchg mov rex.W movabs (bad) sbb adc addb (bad) out or (bad) movabs mov rorl lock cmc rcrb addl lock ror rcrl (bad) rex.W movabs sbb xlat add jle idivb gs jo lea rex.WX mov jae je fxch (bad) icebp test adcl stos fisttpll fild repz (bad) nop or rex.WRX jae add in pushq add (bad) je push mull sarl push adc mov mov repz test rcll pop test lock pushq mov xchg (bad) hlt and xorb add adc jb,pt mov (bad) rex.XB or iret adc (bad) adcl test add hlt insl lret xor fcom std callq push (bad) sarb and lods je icebp rex sub xlat stos test adc push icebp xor xor and hlt mov (bad) (bad) movabs ja mov or mov or sbb (bad) or or nop xchg sbb mov scas sub (bad) repnz cmp push loope cmp vpsubusw (bad) fdivl sbb mov rex.RX pop movsl pop sub (bad) lret movsl out rex.RXB or mov stc xor callq rorl xchg sbb callq imulb cmpsb pop rex.RX gs frstor hlt mov pop out xchg rol rclb pushq cmp mov fs retq jne icebp in in addr32 mov and rex.W mov cltd mov subb rcl jle testl xchg jo add rex.RXB hlt xor fwait jb mull jnp lods xor jmp jb iret fild repnz or (bad) imul cmp repnz rex.WR mov mov push data16 addr32 push jb fnstsw rex.WRX mov jae fildl orb hlt jbe callq retq jl lret clc rol jmp nop (bad) xchg add xchg out xor mov sub mov fs hlt add mov ss fwait test shll nop (bad) push xchg rex.X mov add (bad) mov (bad) stos cli rorl (bad) lods rex.X fs add cltd gs loope jl scas mov adc lods div xor rex std out and (bad) gs rex.WRXB out pop add outsb mov (bad) xlat jb lret cwtl rex.WRX (bad) (bad) in test and in nop (bad) (bad) xor jnp fs int push fcoml rex.WX test in callq add rex.B imul addl (bad) ja cmp (bad) (bad) rex.WXB (bad) cmp xchg jo xor and mov (bad) rol in rex.WRX imull je movabs imul test rex.WR shlb lret lods mov jl pushq fxch jg pop rex.WXB rex.RX rex.WRXB cli out cld jge push sti add xchg callq jne (bad) rex.B sarl mov and or (bad) enterq adc pop jmp retq jns jle mov add mov adc mov xor add sbb rex.WRX bnd or add (bad) push movabs sar mov mul sbb adc rex.WRXB nop xchg jo repz fiadd cmp xor jns in push xchg outsl addl pop rex.WB es out pop push retq in mov (bad) xchg jbe out mov mov add (bad) (bad) xchg out cld mov (bad) shll sahf (bad) outsb cmpsb mov retq (bad) (bad) sbb and rex.WR mov rcrb ja or mov mov (bad) cmpsl sub mov mov mov (bad) or sub repz retq pushq push orl mov fs (bad) jg sub add rorl jb xchg rex.WX repnz pushq mov ja in pop (bad) mulb jne in shlb out fldcw rex.W js in iret push (bad) rolb shl jns js cmpsb cmp cltd xchg out jb repz and cli xor xchg add test movabs mov push mov xchg add jo xor js xchg out add pushq shrl (bad) jnp gs rex.RX imul rex.WR stc jnp test mov xlat loope test (bad) callq rcll sbb jmp jo iret in push rex.WXB repz (bad) xor rex.R mov es jns fcomi or imul or (bad) jmpq mov xchg (bad) pop (bad) data16 sti (bad) divb sbb test or xor repz rex.R cmp test rex.B test jb add (bad) mov push repz insb jmpq xlat lret (bad) sub or cmp (bad) jp imul or adc out pushq es push xor shll cwtl pop cmpsb retw jo xor andl mov je lret (bad) lret movntq out mov retq rol jp (bad) cmc adc mov jrcxz cmp xchg int je mov add retq enterq movslq es js rex.WB (bad) (bad) js mov jmp (bad) sub es (bad) rex.RXB or rex.WX cld movabs jno jp lods (bad) lea rex.WRB fwait (bad) repnz icebp add jne (bad) sbb sbb sub cmpsl cs pop mov sbb jne (bad) rcrb add outsl xor in js and mov lahf lock mov in xor mov jno loop (bad) (bad) movsb retq sub callq add (bad) in movabs xchg adc lahf mov (bad) sbb (bad) jge sub fcompl jne pop fstpt jmp (bad) or mov jno mov (bad) movabs fidiv movabs (bad) pop or flds imul mulb (bad) adc in xchg add mov mov mov fildll mov (bad) jne mov push (bad) cmp movabs iret int3 movsb nop push jmpq xchg pushq adc and and rex.XB loope movsb sbb mov in xchg rex.X jl nop movsb fidivl and rcrl or (bad) cld leaveq sub mov icebp enterq rex.XB int outsl pop movabs loope add fstl jne cld (bad) shrl (bad) pop es in adc mov rex mov (bad) rex.WRX es jne (bad) and lret jmpq rcl mov mov test jmpq mov cmp mov sbb stc jne rclb (bad) sbb in loop push mov pushq out xor sbb repz jp and movslq push fwait out fisub movabs mov xor adc (bad) (bad) add loop xchg loop or loop sbb vmovupd sub (bad) retq (bad) cmp rex.RX insl movabs (bad) jnp mov test and xchg fcmovbe movabs jp xchg stos insl cmp scas jo add push pop cmc sbb (bad) in add or jne mov (bad) js test mov fldenv xchg cltd ja add sub rex.W rex.RXB pand jle (bad) repz push (bad) cmc adc idivl sub push jbe repz int3 rex.XB gs enterq pop rcrb mov (bad) imul ror hlt mov rolb test out in mov adc add sbb movabs (bad) mov jae mov cs rex.B xor in cmp leaveq add add mov es (bad) mov add imul jne scas cmp lahf mov pushq out notl sub fadd loop (bad) (bad) testb or mov out xchg scas (bad) rex.W jnp (bad) xor (bad) sti retq rex.WRB sub push int3 imul ss rex.RXB retq fsubr mov (bad) mov mov mov jne xlat bnd rex.RB (bad) mov lods loopne or movsb add push xchg add (bad) mov push jbe sub clc mov xor insl xchg rex.B insl rolb cs push jno (bad) fmuls fadds retq jae add shl pop clc push add repnz (bad) sbb adc rex.B ss (bad) (bad) movsl sbb repz sub (bad) pop sub or sti add in mov xor loop jp in (bad) sub adc ss rex.RX stos (bad) or rex.WRX neg fcomi (bad) movsl jrcxz cltd iret mov jne pop iret rcrl sub divb (bad) mov xchg stos (bad) (bad) std xchg mov sbb movabs (bad) enterq retq rex.WRB add lods add out cmpsb xchg xchg or in (bad) fcomps rex.X or adc and fisub jne outsl (bad) in (bad) add pop lods mov (bad) push add (bad) int3 xor (bad) mov fwait movabs rex.WRX popfq lahf mov std push and cmp adc stos (bad) cmp loopne mov icebp mov xchg add rex.WB add mov (bad) pop or in fwait cmp stos rex.B loop (bad) push mov (bad) jne out rex.RXB or cmp adc je adc in in test sbb in fdivr (bad) mov cmpsl and cmp and insb lea cmpl adc rex.RXB mov fistl lods pop pop adc rex.RX xchg (bad) or rex.X mov in imul push pop movabs int3 add jbe mov xor sbb rex.B in mov xlat adc (bad) (bad) rex.X adc and int3 push sub add rex.XB add hlt out (bad) (bad) xchg (bad) and adc callq (bad) rex.XB and jne add or lret (bad) jae and push mov pushq pop in idivl movsb mov push adc stos mov (bad) nop adc push std add (bad) lahf and test (bad) lret (bad) push insb enterq jno in sbb jne add push and add rex.RXB repz callq (bad) int3 mov pop jp (bad) fstpl (bad) xor stos and fwait and (bad) iret jno adc rex mov (bad) popfq or faddl adc jl push pushfq or sbb cld imul repz (bad) mov or (bad) mov mov mov iret hlt jge in mov in jrcxz rex.WR stos testl outsb pop (bad) icebp data16 fadd pop jb test int outsl add xchg sub callq cmp (bad) rex.RXB xlat decl test (bad) mov imul push pushq rex.WRX fs mov stc xchg cld and jne sbb (bad) (bad) repz push popfq mov and jrcxz rex.RX cmp jbe movabs loope jmp mov (bad) adc mov negb sbb loope,pt adc int adc stc jmp sub (bad) add sub (bad) nop pushw rorb out addr32 or xchg cltd mov (bad) insb and (bad) jne (bad) notb (bad) jrcxz cmp (bad) jne jp sti sbb adc push sbb jnp (bad) push xchg jne movabs mov hlt add (bad) loopne iret je cltd (bad) movslq xlat push xor (bad) in stc (bad) (bad) jae mov add lret int adc rorl jne (bad) (bad) (bad) mov cltd (bad) pushq nop (bad) jle js and movabs xor iret mov fwait xchg (bad) test xchg callq xchg or xchg push adc mov add loopne int3 fist add xchg lock sbb rex.XB (bad) out sub lea lock sbb lods xor cwtl (bad) mov (bad) rex.WR mov rex.RXB nop enterq mov jbe cmp rex.RX mov mov and rex.R lock (bad) rex.WRB loop xchg xchg stc mov or cmp sbb fs mov mov imul int stc sub mov jne rex.WRB clc int3 cmpsl add cmpl stos adc rex.WRB or lock mov mov lock cmp jnp (bad) and gs callq mov pop clc cmp test xor xchg in ror icebp mov sub adc icebp and jno fsts (bad) sbb fildl shl movsb leaveq mov (bad) je mov js (bad) (bad) (bad) push sbb xor lahf sub imul sbb in fldl jne faddl stos rex.RXB mov rcr pop out in mov sbbl movabs (bad) out add add (bad) cmp rex.WXB push cmc add clc rex.RX jo out mov (bad) out cld test mov sub (bad) fwait mov push jmp jrcxz lods cltd in mov stc mov mov notl mov in (bad) (bad) rex.RXB sub mov jne (bad) int3 pop stc shlb add add lret adc mov xchg (bad) add (bad) fsub lret hlt in (bad) lret sub (bad) rex.WR cmp jne xor mov rex.W add (bad) ja hlt nop in mov xorl test cmp test mov clc sbb jb test or stos sub jbe hlt xor fnop mov pop xchg lock fsts mov (bad) std mul sahf loop (bad) mov addr32 xor shl fcoms sub es rex.RB sbb cmc adc mov lods (bad) sbb (bad) sbb xor mov cld xchg sub sete (bad) jne and jge add retq ss xchg add add xor enterq enterq cmp (bad) icebp insb imul loope cmpsb frstor (bad) (bad) retq mov mov mov out push rex.R jns (bad) je rex.R adc fbstp cmpsl cltd icebp loop (bad) repz pop cmp mov test jg fnstenv cs (bad) sub movq or repnz movabs mov jnp rex.RB add sub test add (bad) movabs (bad) cmpsl xor lahf pop rex.RX pushq jrcxz mov mov (bad) (bad) (bad) xchg rex.WRB iret clc pushq clc gs jmp retq (bad) add fsub pop xchg fwait icebp sub mov (bad) lock je sub int3 in retq popq rex.RX jp pushfq (bad) jg sub mov stc cmpsl jp (bad) cmpxchg (bad) pushq (bad) int and and pop ja and movabs lock roll adc rex.XB push (bad) lock in add rex.RX adc sub xor cltd scas mov push mov cwtl divl xor js out js rex.RB mov in test mov out cmc (bad) and loop or (bad) jmp mov mov mov (bad) rclb adc insl mov sahf mov xor cmc sbb xchg push and xlat addr32 scas in or rolb (bad) or shl in (bad) jl adc enterq jne gs and (bad) je mov clc out fisub iret (bad) out (bad) iret js (bad) int3 (bad) lock rex.XB in xchg movabs (bad) cmp loop mov (bad) adc rex.XB or (bad) (bad) mov xchg sahf stos xor xor (bad) (bad) cmp leaveq jns gs pop std xor push mov (bad) (bad) (bad) pushq ja cltd test adc mov (bad) sbb pop jne add insl in jge sbb retq sti (bad) rex.WRX adc movabs mov sahf loopne (bad) jne adc in cmc out rex.R push or mov or sub sbb sub and lret je (bad) (bad) loope fmull (bad) fldcw in fdivrs int3 addr32 jae push xchg sbb cltd rex.RB scas insb es fwait rex.RB and xor push lods sar scas sub mov in out (bad) add jne jmp cmp jmpq jne mov xchg cmp xchg std lock (bad) jns retq repz lods and add pop (bad) sbb jle cli (bad) imul rex.RXB lahf mov mov (bad) xor test in push imulb je iret movslq cs lahf (bad) sub imull rex.R xchg shrb jno rex.WRX lods jno mov movups pop neg (bad) push or ja rex.WRXB (bad) rex.WXB fwait outsl in popfq hlt sbb test cltd rorl jno (bad) movslq xchg adc xor nop or mov sti mov iret sub jnp mov rex.WR (bad) mov or sbb fldcw (bad) movabs (bad) add adc test (bad) hlt (bad) jmpq lock mov scas jrcxz mov (bad) sub mov fnstcw (bad) rex.RX add cmp jge (bad) mov push icebp cmp mov outsl rex.WR gs rex.WXB sbb rex.WRXB sbb mov (bad) (bad) (bad) xor (bad) mov sub add or (bad) clc or leaveq xchg rex.W test insb callq mov adc mov adc cmp fmuls add lret sbb jb lods pop icebp rex.X rex.XB mov fisubrl shlb mov xor lock or mov add test xor sahf jno outsb in xchg xchg xor (bad) cmp xor rex.WRX imul jne jns lret (bad) lret pop pop (bad) clc mov mov xchg lea fdivl jmp jmpq (bad) cs xchg mov rex.XB add sbb (bad) push mov (bad) lahf push or rex.RXB jne (bad) int or mov shll rex.RXB ds mov rex.WB insb pushq test mov in cmpsl jmpq adc leaveq imul scas push pushq repz (bad) rex.WXB std rex.XB adc lahf jb lret loope add (bad) sbb repnz rex.XB rcr xchg cltd xchg shrb stos (bad) rex.RX movabs or mov lret ja push (bad) in or (bad) jno add pop pushq int cmp (bad) movabs pop and xor (bad) rclb (bad) sti mov rex.R in (bad) add (bad) cmp rex.WR adc sub mov (bad) adcb xor rex.XB adc or imul stos or (bad) rex.RX jbe,pn xchg rex.XB jne or (bad) rex.X sub jge xor loopne (bad) adc adc mov (bad) rex.WRB pushq mov retq rex.WRXB rex.WX rex.XB or sub xchg pushq hlt cltd orb fild jmpq pop outsl pop or adc jne in (bad) mov (bad) (bad) es lret (bad) repz cmp data16 jo addr32 adc sub popfq xor sub loopne callq jne outsb mov sbb mov test add in sub mov xor jns mov jne (bad) (bad) (bad) hlt xchg movsb es cli sub or sbb lea ficoml xor push iret xchg add scas pop outsb sub add xor (bad) mov stc movabs movslq sub mov jl test adc cmp mov pop push stos insl nop mov (bad) callq (bad) sbb mov (bad) xchg fbld movsb mov (bad) (bad) repz movabs sub mov leaveq callq sub addr32 in (bad) jmpq shll mov not (bad) test test notb xchg add mov jmpq push push lahf rex.RXB callq (bad) add lock (bad) mov movabs or or imul push lret cld (bad) (bad) or rex.WRB mov scas sub test adc add mov ss push movabs (bad) (bad) (bad) (bad) xchg add loopne push jmp adc movsl imul push mov mov cmp mov add in (bad) int3 sub push xlat sbb pop mov xchg xor cs cmc add (bad) jne enterq sti or loop mov (bad) mov int3 jle pop mov sub (bad) cmp std movsl fwait jrcxz (bad) movsb jl stos nop (bad) sbb rorb xchg mov adc imul fisttpl or outsb cwtl fnstcw nop sbb (bad) movabs adc or fwait adc mov xor (bad) adc jne push lods mul jne ja (bad) fldenv or adc loopne or (bad) mov mov sub or jbe fstl icebp addr32 in (bad) mov (bad) add out jg adc jae cld adc (bad) pop pop jmpq fadds sbb (bad) rex.WRB movabs callq (bad) xor sbb mov jae xor or mov or (bad) test and rex.RB rex.WRX roll imul xor rorb in lods jnp or int cmp add sbb (bad) xor out cmp push jnp mov jae fdivrs movabs rex.WB bswap divb (bad) (bad) xchg lock jne mov mov mov sub outsb jae cmpl mov sub lock add cmpsl jg jne push test lods (bad) cmp (bad) ja repnz nop rcrl pushq int3 (bad) in imull adc mov stc scas and in jbe add push subb stos int sub push xchg std and (bad) lret cmc leaveq in std (bad) je (bad) xlat add cs push hlt repz adc cmpsb repz cmpsl xchg iret retq sub out xlat lea (bad) loop jrcxz mov out int3 push sbb jnp and add mov cmpsb lods repz or ud2 jns add js rex.WB (bad) and and jno or test stc pushfq sbb in lret movabs xor psadbw (bad) mov adc mov and pushfq movabs xchg mov lea fadds lret ja (bad) lock xchg jne (bad) (bad) out outsb or shrl je js sbbl (bad) es (bad) cli (bad) out xchg (bad) sbb sbb (bad) rex.WR adc lods icebp movsb (bad) xchg xchg adc (bad) neg adc cmc add rex.WRB test push div out cs or out (bad) loop repz test adc repz or cwtl std shl jg lods sbb push sbb lea lret mov xor fild or test sbbb hlt in std sti or jb int jns mov mov cmp (bad) fsubs cmp scas push ja push xchg (bad) pop cli or out loope mov jnp or (bad) cltd rcll idiv repz (bad) scas xchg addr32 or out (bad) sti rex jl (bad) cs xor out in push mov cmc imul stos and xchg rex.XB imul rex.WX xchg (bad) (bad) mov mov sub jo sub mov loop cmp mov (bad) mov (bad) test jl fadd or jg add in or adc or (bad) sub or jb adc xor adc xchg ja adc lret mov xor cvtps2pi icebp jge jle sbb callq jrcxz mov in or cmp xor or pop adc mov xchg in xor xor sbb movsl fidivl fs (bad) rex.WRX adc rex.WRXB jmpq (bad) jp int3 mov int fisubrl fildll mov jmp mov icebp fist xorl cmpsb push jne jp mov jo subb adc (bad) insl fwait cmp mov cmp add mov stos push adc mov and adc mov (bad) fsubs mov loopne (bad) in (bad) lods lahf add pushq (bad) outsl retq fwait rex.WRXB mov cmp retq jne repz sub mov xor fildll (bad) (bad) rex.WRX lret test insl or adc add (bad) sub int movabs fldl js mov xchg out or enterq add je (bad) shl lock (bad) sbb push and (bad) cli mov mov nop imul (bad) cmc push push add scas rex.R rex.WRXB sub (bad) (bad) mov stos lret cld mov xchg jo rex.WR je mov jb fs cmc xchg or or outsb rex.XB mov sbb js (bad) adc rex.WRB jno add jne clc stos repz enterq test negb and enterq orl pop (bad) mov pop out jbe adc sub divl movabs rex.WRXB add xor (bad) xchg fsubs and and (bad) icebp or test or mov int3 adc (bad) rex.WRX rex.R pop (bad) ja or std adc (bad) scas jb mov rex.W rex.RXB loopne rex.WRX out push jns ja add ja rex.WB enterq loopne sbbl insb divb sbb in add movsb loop rex.RB mov (bad) movabs movsl mov (bad) repz push pushq movabs hlt test xor xor mov xchg adc pop mov jle cltd sti outsb (bad) (bad) (bad) mov cmp adc jne xor mov rex.WX jne push mov retq add div xor jmpq movslq jo out enterq push pop (bad) or sbb int xchg test add xchg in lahf mov xor rex.RB rex.RXB cmp cmp xlat rorl add repz add loope divb fwait pushq loopne mov xlat cltd mov xchg mov jne push mov mov push imul sbb xchg rex.RXB fcomip jg or nopl leaveq cwtl adc jne sub mov add repnz in int3 or sbb (bad) push faddl clc outsb pop rex.WXB xchg fistpl jno rex.RX sarb callq rex.WRXB jmpq movslq (bad) xor pop sbb (bad) lock rex.WB (bad) enterq rex.R jmp add (bad) mov retq movsl stos lock pop movabs xchg in cwtl addr32 jne push and or jbe rcr jge mov fwait xchg pushfq (bad) lods rex.XB adc fimull imul fistpll loopne mov or in in or fsts (bad) fwait rex lods mov cmp sbb int3 icebp sub mov adc cli push mov sub and xchg (bad) rcl rex.X lock sub add repnz cmp or imul mov adc divb iret lret rcl (bad) xor jmpq adc test in lods rex.RXB lock sbb xor (bad) hlt rex insb mov cli sbb or mov (bad) jne sub clc (bad) fsubrs std loopne (bad) push or rex.RXB rex.B rex.XB mov mov pushfq jmp jne (bad) int lret test push nop clc add es add cmp cld out add pop add rex.RX (bad) cld rex.XB add mov or adc je (bad) in cmp mov in callq mov or test fstpt (bad) loopne lods xchg stc rcll mov jge test pop adc adc shlb sar leaveq xchg stos lods repnz mov fsubl jno rex.WX mov ficoml add rorl adc callq stc int3 repnz or rex.WXB fiadd test jns adc push cmp pop js jne std int3 sbb jmp sti int nop rex.WRB adc xlat sar jrcxz jg loopne jne movsb mov out mov repnz sbb xchg (bad) fildl hlt jne xchg and movabs jrcxz xchg xchg xor or mov rex.R movabs jns mov js shll out (bad) outsl jbe sbb jl fadd jno retq js sbb rex.WRB adc jo (bad) fildl adc mov mov or or mov out insb pushq rex.X push je and jo std adc stc mov rex.WR mov (bad) cmc mov imul and (bad) (bad) or rex.B push rex.WR xor push add pushfq fadds rex.XB (bad) (bad) (bad) jno int add cmp (bad) (bad) lock out loopne (bad) in lahf sbb sbb (bad) rex.B (bad) sub insb stos rex.WX or movabs adc movsb adc jrcxz sub rex.WRXB insb cs and shrb insb (bad) (bad) or divb test lock fdivr rex.WRXB (bad) push mov movabs cmpsl (bad) (bad) std (bad) out xadd (bad) (bad) fwait jg nop or cmp mov jmp sbb nop push add xor adc es loop fstps (bad) (bad) std rcr adc add cmp out (bad) xchg imul mov rex.W rex.RB jns xlat jl mov hlt icebp out mov add jo fucom mov jne sub (bad) sti or mov or mov (bad) and add (bad) mov sbb in popfq add stc clc rex.WXB rex.WXB jo (bad) xor popfq nop (bad) sub iret scas notl mov (bad) push pop xor pop and retq add lea and (bad) loop and or cld add int3 mov mov rex.W xchg mov mov loop xor mov mov mov mov xchg xchg fcompl jge and in fbstp add cmpb fwait rex.WB imul adc mov in imul push mov adc (bad) imul add (bad) callq xor frstor mov xchg and loopne mov (bad) jmpq movabs (bad) and push (bad) (bad) pop xchg cmp jno insl nop push movsb mov mov and lods mov jae sub adc xchg add roll mov rex.WB fwait mov rex.XB rex.RXB pop (bad) movsl add imul pop rex.XB movabs es (bad) adc jne xchg or add mov lods int3 pop jno xor pop fwait jne add lods data16 cmp and xor in rex.WX lods cli (bad) jbe push xor (bad) movabs movabs test push cmpsl retq (bad) (bad) scas adc xor data16 repnz fwait jg std pop xchg add nop mov in fiadd xchg (bad) shr fadds or sbb push jae sbb or (bad) scas sahf sbb insl movsb add and stos xchg (bad) lods xor mov jg out xor push rex.XB cmp pushq sbb repz lods adc fadds fnsetpm(287 mov mov (bad) movb push or xor cmp mov sub mov insb cltd sar rcl mov jnp rex.RX mov (bad) loopne decb fisubrl mov sub iret out movslq sub jrcxz pop imul adc sti (bad) in out sbb jg cwtl repz repz ror out insb pop xchg div lods scas (bad) cld (bad) fnstcw test hlt addr32 (bad) pop subl stos add xor rex.RXB and movsl mov fwait rex.WRX sbb rolb xlat mov scas xchg xchg sbb loopne cwtl iret jae std (bad) fcomp repz data16 vpcmpeqw jmp (bad) cli cmpsb int hlt sub xchg lea callq mov and xor out repnz rex.XB fs rex jmp loop sbb xor (bad) sbb pop push fcomps loopne cwtl imul rex.R (bad) callq jmp xchg mov (bad) or push vmovsd rex.WXB and test (bad) lods rex.XB xchg imul (bad) fist (bad) (bad) rex.WRB xlat add cld mov xor rorl lret xor cltd (bad) movabs rex.R int (bad) jne notl insb gs (bad) stc (bad) pushq sub mov mov test cmc (bad) fmuls retq gs mov jrcxz leaveq xchg add (bad) or add (bad) mov (bad) jp divl nop in adc adc rcl scas mov (bad) fisub xor cmc (bad) cmp add (bad) leaveq fisttp movabs pop insl std or out push rex.RB js out mov retq jle and out je mov jae adc retq ja in nop jp and pop adc inc (bad) loopne out addb push in js rex.RB or iret push gs test add rclb sbb movabs fcomp sbb jnp rex.R rex.WB repnz mov int3 xchg fadd movabs xchg sub jns movsl xor or sbb rex.R pushq and xor add leaveq xchg cld (bad) mov (bad) or in clc fs repz rclb jge (bad) scas xchg rex.X (bad) mov add rcl popfq or xor test movsl notb add pushq push repnz shl outsb lods rep or (bad) and mov loope jbe movabs insb (bad) (bad) cmc mov inc hlt outsl mov rcl rex.WXB (bad) (bad) xchg rex test movsl je (bad) mov and jo int xlat lock fwait mov pop adc jbe movabs lret cmp mul rex.WRX add or int or (bad) scas xchg jp outsl imul adc mov sub (bad) mov out jbe retq (bad) add movabs ja mov outsb loope jle sbb in rex.WRB test (bad) (bad) add hlt mov xor (bad) bsf or and movslq add pop mov push mov jno jrcxz push insb mull roll jl pop and lret movsl (bad) insb leaveq (bad) rex.RXB jrcxz xor rorb int rcl adc ficom nop out sub (bad) repz out sbb (bad) (bad) (bad) mov (bad) pushq sub mov rex.XB sbb (bad) or (bad) or cmp lods pushq push adc in jne gs mov clc cmpsl out in in outsb xor (bad) jb insb pop (bad) in rex.RB (bad) imul jmp (bad) mov out pop ss out fcmovu (bad) sub test rex.WXB in (bad) xor outsb sbb or neg xchg (bad) jge xchg stos outsl lock add or add jrcxz mov jp hlt retq mov jg and (bad) pop sub sub mov and retq and cmp add and pop popfq xlat xchg jmp outsl test lods cmpsl cli mov adc jne jne push in push add add imul xor shrb stos icebp (bad) sub retq and xchg (bad) cmc (bad) xchg add enterq imul xlat popfq mov popfq xchg pop add cmovb sub cwtl (bad) xor xchg or mov fadds fcoml xor int3 sub sar (bad) in and in test fsubl test or fsubrp xchg pushq add in xchg cli mov mov cld int3 (bad) jno xchg leaveq jrcxz pushq add orps push (bad) imul and lods sub mov outsl xchg movabs add data16 fldenv cmp sbb scas jo loop jno rex cmp pushq jno add icebp fadd cmp (bad) outsb icebp jno xchg (bad) orb xchg xchg repz adc pop (bad) cmp or (bad) fld rolb rex.X (bad) stos pushfq fdivr xchg jb rex.WXB mov (bad) jo out loopne (bad) js or ja mov psubw fcmovne incl rolb and sahf add (bad) lock push push mov add test adc or sub add (bad) rex.RX in add sub cmp jrcxz mov loop mov mov fistpl rex.WRB lods jno sahf mov (bad) (bad) je xor loopne rex.RXB xchg repnz xchg (bad) imul lock cmp xchg mov cli jb hlt mov test sub xlat (bad) mov adc pop mov imul out (bad) loop imul push lock movabs (bad) (bad) xchg rex.RXB adc loopne retq adc and sub fdivrs xchg in movabs (bad) mov push stos bnd cwtl enterq sbb and (bad) jns or (bad) rcrl iret mov divl fdivrs leaveq cld mov f2xm1 jmpq sbb adcl ss orb sbb (bad) or add and or add cltd stos jnp test (bad) pushq cld stos (bad) add mov (bad) jg test pop mov punpcklbw add repz or shl out js (bad) loopne retq add (bad) cld mov add shrb (bad) or es xchg rorl add or in rex.XB fisubl xor adc ds pop test (bad) mov sub push icebp rex.WRXB push or insb retq flds xchg sbb pushq cmp or hlt (bad) icebp rex.WR movabs (bad) mov icebp mov fwait cli mov jmpq test (bad) mov rorb rex.WRXB subb mov fildll or cltd rcrl in cmp jb jbe jno mov mov pop or rex.RXB enterq data16 sbb outsb mov cmc mov fdiv xor (bad) je sbb add add lahf and retq out sbb jle (bad) (bad) xchg xchg and loopne add (bad) hlt enterq cmp xchg push mov hlt sub outsb mov xor push ficompl rex.RXB rex.RB adc rex.WX rex.X (bad) (bad) hlt rex.RXB test pushq sub sub jmpq sub test retq cmp callq push nop pushq mov add (bad) sbb mov rex.WX insl cwtl in pop mov (bad) popq std callq repnz rorl cmp in sbb cld (bad) outsl xchg (bad) xor xor (bad) loope xchg (bad) movslq popfq xchg mov divl jno xchg jnp int3 imul int3 insl in (bad) repz int3 cs cmpsl rex.XB xchg mov test add imul jl pop in fsqrt stc cmp jmpq loope xor rex.XB add push gs repz fnstenv mov push rorb and jrcxz test and rex.X imul mov rex.X jle push je xchg (bad) rex.RX jg rcr retq lods mov imul xlat and sbb popfq adc js imul mov sbb pop insb xor rex.RX and fs mov (bad) imul and int3 (bad) adc add rex.WRB sub jg dec mov sub fcom std cld (bad) or (bad) fwait sbb (bad) mov jle sbb repnz xor xchg push pop rorb adc in stos jo adc or lea out xchg (bad) (bad) or xchg mov sbb cmp sahf fdivr sub add or (bad) hlt mov rex.WRXB rex.RXB add rorl movsb adc je cmp fs pop bnd int movabs push jrcxz pushq add lock sbb int fistpl sarb sbb mov and add rex.WRXB outsb cwtl jns mov add add mov pop (bad) (bad) test sub rex.WR cs pop add (bad) mov mov cmp (bad) lock or outsb cmp out pop xchg xchg add or adc add rex.WX (bad) mov in jg rex.RXB jno loop sub add nop stc (bad) imull rex.WR (bad) clc retq repnz jnp cmpsb lock sbb rex.WR xchg (bad) jrcxz loop fcomip sub retq xchg (bad) jno xchg mov sbb jns fs pop imul fimul out in es insb cmpl (bad) sbb xor loop sbb push push sarb imull push mov (bad) (bad) rex.WX rex.R xor and or pop (bad) add push repz add push leaveq mov jp fnop divl xor movabs xor rex.WRXB imul rex.XB stc fdiv (bad) fsubr jmpq jno fbld add rex.WR (bad) mov push fldcw rex.WRX rex xchg pop rex.WR hlt xlat and or mov (bad) fsts fnop mov adc jmpq imul mov adc and mov andb rcll rex.R (bad) imul adc cmpsl hlt sub (bad) (bad) pop rex.RXB leavew pop rex.B lock (bad) and pop sbb je push cwtl mov pop gs or int rcrl jno std fs (bad) or repnz jae or cli mov adc outsb (bad) push mov or mov jrcxz je mov orl int cltd repz mov (bad) mov stos mov or shrb rclb fnstcw sbb (bad) cld (bad) outsl ja cmp sbb cld (bad) movslq jo icebp in icebp loop test add movabs mov jne xchg cwtl cs mov sub lret lock add test (bad) (bad) or (bad) sub mov mov rex.B rex.W mov adcb (bad) xchg (bad) xor and in mov mov mov xchg xor cmc sahf (bad) repnz clc mov imul hlt movabs pushfq cmp jns cmp loopne xchg rex.WR repnz jrcxz int3 (bad) mov in test jb pushfq push (bad) mov mov test movslq std addr32 out add jns rex.RX push push mov movabs out rex.WRX fwait xor (bad) (bad) lock (bad) (bad) fmuls rex.RX paddsw (bad) rex.X add rcrl rex.WRX jb adc mov xor add (bad) sahf mov mov jrcxz jmp fldl jle,pn in cmp movslq jno add (bad) add in (bad) jl mov pop or movslq sub callq movabs xor int (bad) test rcrl sbb adc rex.WB rex.WX fsubl or or (bad) (bad) jge and or fbld repz mov je divl jl mov frstor retq retq out add out adc mov cld mov xor or mov jne retq movabs mov lock xchg adc mov (bad) add xor (bad) retq es out sub xor add jrcxz sbb rex.WRB cmp lock movsb jl,pn sbb rep (bad) cs pop rcrb rex.R addr32 push (bad) (bad) mov (bad) test icebp or and (bad) jg jrcxz ss lods loop cvtdq2ps sub sbb out add loope xorb cmp mov and pop fistl jne push sbb rex.RXB imulb jne cwtl rex.RX callq adc (bad) lahf insb rex.XB imul cwtl movabs rex.R nop mov retq retq add cwtl rcrb cmp loop test pavgb in loop movslq cld pop mov rex.WB rex.R clc add pop ds test (bad) icebp mov and (bad) adc enterq xor adc rex.W test adc (bad) not sub (bad) cmc sub adc (bad) xchg sti loop je (bad) xchg mov in orl xchg movslq adc push (bad) imul jg xor push out in sbb int3 rex.WB adc rorl add mulb rex.WRB or std (bad) hlt shr jno sub movabs (bad) outsl js loopne divl std or (bad) mov clc movslq rex.XB adc insl jno mov flds mov add mov hlt adc (bad) (bad) test jo hlt stos (bad) rex.WRB repnz lods push (bad) lods imulb out adc or outsl (bad) outsb sub notl cld (bad) jne lods sbb jmp rex.WRXB (bad) jno movsl xchg nop fcoml fnstcw insb adc add retq jne rex.WRXB rex.XB sub pushq sbb rex.W adc adc or or test xchg test jns hlt callq xchg mov callq pop int3 xor add (bad) lret in rex.WRB int3 or sbb stos pop pop xchg js (bad) imul (bad) sbb jp (bad) add test jmp insl test or sub rex.WR hlt xchg or repz (bad) repz test xchg ss test mov rex.W rex.WR fnsave (bad) lock in add hlt sub lret (bad) (bad) icebp rex.WR adc sbb add in movsb fstps (bad) cmp adc cmp add mov or notb cmp add fnstcw loope (bad) (bad) xchg pushq pop jmpq mov sti rex.R je ss in mov xchg (bad) mov lods jp iret adc mov sbb rex.XB rex.WR add cmc sub sbb movabs jne rclb out cmc ss (bad) out mov mov add xchg and adc add sbb repz repnz cmc mov jo mov or xor rex.RXB pop rex.WRB rex.WB mov (bad) imul fwait int3 shlb adc or fstl (bad) lahf (bad) stos in in and push mov xchg lock (bad) sub cmp fdiv loope mov mov sub rcl jb (bad) rcl shl lret add jnp (bad) loop (bad) add out test mov mov in mov mov jp jg (bad) movabs adc rex.XB jp rorb adc cld (bad) repnz (bad) in jne lods (bad) mov or mov (bad) bnd iret mov (bad) xchg push jne iret lods lods push jne mov jno (bad) iret stos (bad) (bad) adc cli (bad) jne mov lods mov ss sub and rex.XB pushq adc jne iret push mov roll hlt jne out pushq iret (bad) mov add fs push xchg jne sub mov loopne xor mov add add (bad) repz sub xchg mov pop nop faddl sub jo mov and (bad) sub (bad) mov in ffreep (bad) and test (bad) fstpt cmc callq js sti adc fimull add or (bad) cli mov lods adc rex.W retq push (bad) adc movsb pop (bad) iret cmpsl (bad) add jno div rclb adc jne (bad) div push lret and jo movsb jnp mov out mov cmp push cmp add in (bad) sub (bad) (bad) movsb adc xor or (bad) out add (bad) sbb (bad) insb add cli (bad) enterq jbe mov movabs (bad) xchg in jne xchg sbb adcl callq gs xchg jne pop sbb sbb rex.WRXB (bad) insb retq clc rex.W xor jo bnd enterq ja cmpsb xchg mov lock fidivrl mov sub or sbb adc mov in lods loopne nop mov xor shlb lock pop mov rex.XB adc out insb loopne sub push clc gs jne (bad) (bad) pop cmp rex.RB rex.W sbb shrb movabs (bad) test jge rex.WX cs mov cmp enterq push pushfq movabs (bad) rex.W sub (bad) sbb and push mov jmp jne mov sbb jns add loop mov jne xchg pushq (bad) je stos lods and rolb xchg rep mov andb add or nop nop xchg adc jne mov xor rex.B add or nop adc (bad) test xchg movabs xchg xlat mov xchg hlt jno rex.RB xor mov callq leaveq in adc (bad) (bad) xor mov repz (bad) or lods (bad) pushfq mov adc iret or ss mov retq js (bad) (bad) hlt mov xor iret adc out (bad) int sbb stos sbb (bad) imul xchg rex.RXB (bad) xor out (bad) popfq pop and pushq test add xchg test mov rex.XB ficomp lea (bad) in fdivrp xchg mov rclb outsb test je (bad) (bad) lret or (bad) mov add rex.R sahf (bad) xorb mov out sbb (bad) push fcoms add ja or jns insb pushq scas fwait xor insl pop mov pushq mov insb jno repz fcoms xchg lret (bad) push rex.WRX (bad) xchg imul rex.WRB add xchg (bad) andps sahf (bad) (bad) push mov rex.WRB jne (bad) or adcl (bad) mov rex.RB mov adc fistl repz adc push xlat lret xchg jne roll xor (bad) rex.WRX add mov ds (bad) fdivl callq rex.XB in sbb je icebp jle rex.RB adc test cmpsb xchg (bad) sbb push push in rclb xchg and or xlat sahf (bad) xchg adc push rcl xchg sub lea retq (bad) cmp xor and xchg (bad) mov push and xchg push xchg sahf stos (bad) mov outsl (bad) lahf rex.WR pushq push sbb loopne scas movsb (bad) nop (bad) xor je xchg movabs callq (bad) outsb or std cmp std movabs xor (bad) mov push xor sub xor mov (bad) int3 adc (bad) (bad) xchg rcl xchg xchg cmpsl (bad) ja (bad) test sub sub adc add jne or mov sub adc rcll (bad) lods jo mulb pop (bad) xchg adc mov repz (bad) stos xchg jle add jno cmc (bad) ds (bad) xlat jns (bad) test loop (bad) rex.RB adc adc rol xchg xchg test and xor jno rex.R rclb (bad) pushq (bad) (bad) xchg mov xlat push and sub mov (bad) mov xor (bad) sbb (bad) (bad) xor pop xor in outsl stc test sub (bad) xchg (bad) jno (bad) sahf fnstcw (bad) (bad) loop (bad) push xchg test sub (bad) jbe (bad) (bad) rcll (bad) or cmc cmc add xor (bad) test adc xchg add callq (bad) retq or cmp add rcrb fldl (bad) je adc test rex.WR rex.R add sub fcoml mov (bad) imul mov int3 pushfq mov xchg rex.RX sub pop rex.WB add cmc rex.R rex.WXB loopne rclb (bad) (bad) rex.WB rex.RX add push mov (bad) (bad) cmp mov mov mov pushq insl fdivs rcll cs sbb push (bad) rex.XB sar mov (bad) (bad) (bad) cmc (bad) imul js mov (bad) add addr32 add (bad) or rcll sub nop lret cmpsb gs xchg jl jo gs sti push pop test fs or rex.RX test sar hlt jl rex.WX rcrb (bad) movabs out rex.RX xchg mov (bad) (bad) (bad) sti jrcxz (bad) xchg (bad) xchg (bad) rol rex.WRX movsb notb stos adc add cwtl (bad) push insl hlt movabs (bad) idivl (bad) push adc lahf (bad) jl (bad) int3 adc shrl nop and cmp jl data16 push or adc stos (bad) xchg test sub push movabs (bad) jne mov adc rex.RX mov out xlat or adc rcl rolb mov rex.X sub xor leaveq rex.WRXB xchg nop (bad) pop xchg (bad) nop rex.RB xchg mov out (bad) nop xchg (bad) (bad) (bad) xlat (bad) (bad) jbe push xor (bad) (bad) (bad) hlt (bad) adc (bad) in adc rex.RXB add (bad) add popfq (bad) mov xchg (bad) (bad) hlt icebp and push xor (bad) (bad) (bad) sub sub clc xchg mov (bad) mov (bad) iret jp notl jmp rex.WRXB sub add outsb xchg mov fucomip (bad) notb pop (bad) jae and add sbb mov xchg mov xlat lock and (bad) callq rex.WXB gs rclb hlt test (bad) add mov rex.B bnd xchg pop mov xchg jne pop or rex.WXB divb xchg rex.W rex.W sub and in jl mov enterq hlt xchg in xlat jne lret out xchg xlat (bad) sub out movabs adc in (bad) (bad) xor xchg cmp add in ja add enterq (bad) (bad) xor xor jo in and xchg (bad) adc (bad) push (bad) es (bad) (bad) loope clc jne rcrb cmpsb je and es jno (bad) out orl xchg (bad) xlat flds test repz sbb mov and add xor push gs pushq (bad) mov test std push (bad) stc add or and (bad) js in fdivrs xchg mov enterq and lahf jne rex.RX (bad) (bad) and (bad) hlt push rex.WRXB loopne loop jne movabs xchg xchg lods stos mov adc fisubl sbb jle or (bad) add (bad) and pop sub (bad) stos nop xor (bad) xlat stos jne xlat cltd popq mov or pmulhw push test jnp rorb pop xlat (bad) add mov add lods push mov scas lret (bad) push movabs scas xchg or add notl jbe test cmc jae outsl pushq or sbb nop pushfq (bad) xor lahf enterq rex.WRXB add movsb movabs (bad) shl rex.WRB loopne ja jne ss rex.XB mov lods (bad) movsb (bad) imul adc (bad) rcrl and movabs mov (bad) adc (bad) mov in adc pushfq (bad) mov mov in and mov lock fbld cmp in adc lea not mov xchg lea xchg mov jmpq jne btr sub bt mov rol add or cmp mov clc cmc test jmpq sub stc jmpq cmp jmpq add rex.XB (bad) je rex.XB insl jo je (bad) insb imul movb clc clc cmp stc test jmpq jae stc jmpq callq setg add rol lea test setle mov bt cmpb jmpq jne clc sar mov cmp jmpq xchg xlat ja sbb xchg xor or (bad) xchg ss scas xlat mulb movsb movslq cltd or icebp adc adc fs rclb cmp insl (bad) xchg movabs movslq rex.XB or rex.XB rex.RXB lahf movabs sub sbb (bad) out rex.WRB jle fisub sbb cmp jrcxz outsb std fdivrl (bad) std movsl adc mov cmpsl (bad) (bad) sbb out (bad) std or xor (bad) (bad) (bad) pop (bad) in pop rex.RB rex.RB in movabs icebp pop xchg loopne adc div data16 imull test jno mov (bad) mov rex.WRXB loope retq lret imul sbb fdivrl cmp bt clc stc test jmpq jne rol mov test add clc bt jmpq ja jmpq rex.R rex.WRX push rex.WB cs insb add stc cmp cmp bt cmp jmpq jmpq jmpq jmpq jmpq loopne rex.RB sbb jl cli rolb jmp scas (bad) cld movabs (bad) xchg cwtl pop (bad) mov int3 xchg cmp mov out (bad) push jns in xchg (bad) (bad) mov fnstcw sub push ss sub sub mov (bad) mov (bad) cmpsb in (bad) (bad) addr32 movsl movabs pop mov fdivp shll jp imul (bad) mov leaveq stc test (bad) (bad) (bad) fild fiaddl push std (bad) (bad) fnop insb shrb mov xchg in lock shlb (bad) outsb mov repz roll (bad) lods xor xor sub mov imul push ja xchg rex.RB cmp (bad) mov mov callq jns pop fisttp rex.X xor (bad) xchg je hlt nop (bad) xchg rolb xor xor jmpq jmpq mov jmpq cld sbb xchg rex.RX movabs xchg xchg movabs retq movslq clc (bad) xchg xor (bad) cmpsb ficom (bad) decl jmp cld (bad) (bad) fbstp xchg (bad) pushq movabs or (bad) pop cmp ja mov sbb (bad) repnz iret sbb addr32 movabs mov or xor popfq rorl (bad) adc retq pop out int sub adc shr sar (bad) iret nop xchg sti (bad) or cmc rex.WX sti pop cli movabs and fisubrl cld fildl imul push push loope push xchg in cmp and xlat adc outsb out mov jp rex.W shlb sbb rolb movsw adc cld add rex.WRXB rex.WX cmp mov pushq fnstenv add pop outsl (bad) jge (bad) test xchg (bad) push xor and lock push out mov (bad) pushq rex.WB xchg rclb jbe test pop shl test xor rex.WRX (bad) (bad) jg sbb test jp jo decb push rex.WR cltd rex.WRXB test xor stos cmp movabs push xchg iret sbb mov (bad) iret xchg and pushq rex.WRB test jmpq xor bt repnz jmpq mov sbb sar sub (bad) pop sub pop outsb fsubrp rex.WRB rex.WXB in out (bad) es pop (bad) test or (bad) xchg or add pushq (bad) (bad) (bad) loopne jno adc (bad) lcall jbe outsb pop cli cltd js fbld out frstor cld (bad) (bad) fbld cli (bad) (bad) ffreep mov xchg sbb outsl loopne and adc data16 outsb popfq mov mov mov lret mov mov imulb nop rex.WRXB add sub or (bad) negb mov mov cmp jns rex.WRXB jb ds lea sbb cltd or scas (bad) fisttp rcl sbb mov cmp mov rclb (bad) sbb movabs cwtl mov (bad) mov rcll lods cmp pop jmpq jmpq jmpq sarb orl (bad) notl xchg imul stc pop xchg notl push jne sbb in fcompl jno clc seta out scas cmove lret mov fsubr rex.WRXB adc (bad) (bad) ficompl std (bad) (bad) (bad) jmpq (bad) mov fstl cmpsb rex.RX (bad) ss (bad) ja pop movabs jns cld (bad) (bad) (bad) in pop repz push fdivl sub lods xor fsubl pop rex.WX push movabs sti pop xchg stc (bad) imul outsl mov push push xor es in loopne addr32 rex.WRX out jno push push rex.WB cs rex.WR rex.WR test cs (bad) jmpq movabs rex popfq in movsb movslq fidivl xchg std sub rex.WRX jmp (bad) sbb (bad) rex.WR out xor sub imul add (bad) (bad) (bad) sti sub retq roll or movsb cmp lcall (bad) cli (bad) (bad) fisttp cmp (bad) pop rex.WRB sbb (bad) leaveq cli sub pop movabs mov cltd rex.WRXB (bad) in xchg sub mov xchg or and (bad) and retq rex.X imulb (bad) (bad) push mov adc outsb mov or in xchg lret push (bad) loope test rex.B nop add lret and push (bad) jns pop (bad) or jae add mov ja add cmp mov bt movsbw sbb mov cmp cmp sub cmc stc repnz jmpq lret movslq (bad) rex.WXB iret (bad) ds mov out jl (bad) rex.WRXB and adc ss test rex rex.RX sbb pop mov mov repnz pop mov rex.RB mov (bad) rex rex.XB fwait icebp xchg scas jle rcrb ja (bad) push or stos in sbb (bad) mov fisttpll (bad) (bad) insb xor fistpll callq jo nop cmp lods add scas cmp xchg jle (bad) xor (bad) std mov fbstp xchg leaveq movabs sub add jbe (bad) (bad) jmpq push rcl fwait or fnstcw (bad) push xor sbb (bad) (bad) jbe (bad) xchg (bad) fcoml mov add imul add test xchg (bad) mov add seto inc adc mov dec inc add test mov shr (bad) cmc (bad) mov stc stc cmc xor jmpq stc xor sbb (bad) stos repz setg ficom addr32 mov and adc test or push or rex.RXB or sbb cmpsl push or (bad) (bad) (bad) (bad) mov mov lock rex.WRX adc popfq cld (bad) lcall rcll lock sub cld (bad) and scas roll push cmpsb rex.R cmp icebp (bad) xor (bad) (bad) xchg push xor imul (bad) adc loopne cmpsb ds sbb xchg sub jo fimul jb sbb fidivl jne mov fnsave jb xchg sub xchg or add lock or cmp sub rcr jmpq jne or bt btr mov bt bt cmp stc add cmp cmp movzwl add mov cmc test add cmc cmc mov clc jmpq adc rex sbb sbb jae leaveq int3 adc cmp mov std lret rex.XB cs mov add bnd pop pop sub (bad) rex.WRXB xchg rex.WXB xchg jno and cs out mov mov scas mov sbb cmpsb cli rex.B scas stos jae mov or push xchg cli flds fistpl lahf rex.WRXB ds movabs or or jle xchg std (bad) lcall jge jmpq fistp cmp (bad) (bad) mov stc imul xor pop in sti xchg (bad) add jbe add mov callq cmp cmp rex.W jbe jl and rex.WX (bad) fild pop subl sbb rex.WRB xor test mov (bad) (bad) add decl movabs or movzwl movzbw movsbw mov clc cmp cmc add clc mov cmc bt stc test jmpq sbb movsl cmovle mov f2xm1 xor (bad) movabs jle sub adc mov sub and cltd cld mov add add sub mov (bad) cmp (bad) sub pushq rcrl lock outsb leaveq sub sbb cltd (bad) (bad) (bad) mov pushq sbb (bad) rex.WRX (bad) movsl or repz in (bad) lcall rex.B (bad) cmp (bad) (bad) (bad) sub jnp pop cmp adc movsq int pop lret or fs mov xchg loope imulb int3 mov pushfq add pushq addr32 (bad) pop rex.RXB (bad) je jp movsq in cmp jmp cltd and cmpsl (bad) jg rex.W rex fwait (bad) xchg (bad) and rex.RXB mov or outsb mov and movslq cmpsl and (bad) mov fnstenv mov cmpsl (bad) mov rex.WRXB xchg cmp adc and xor push cmp movsb movslq sub push (bad) repz popfq insb mov popq (bad) ds fs (bad) (bad) lcall sbb ja (bad) out or fist fs nop mov out mov mov insb mov jle (bad) jbe shlb pushq (bad) jle (bad) add in movabs movl xor sahf jge sub fadd cltd push movsb (bad) in cli add jmp sub jae xchg sub (bad) shr fsts clts pop pop (bad) (bad) rex.X retq jrcxz push or (bad) in or cmp sbb callq sbb add out hlt test mov pushfq jl mov retq movabs sarb push sbb xchg xor sbb or adc xchg add gs xor rex.WRXB rex.WX in jns mov gs cwtl leaveq fisttp pop out outsb (bad) lret decl out negb xor fstp sbbl repz (bad) (bad) fistp pop sub and cmp sub jae in mov (bad) pushfq jl mov outsl mov mov (bad) negl rex.WRX adc jno rex.WX mov mov setg pop lea push and (bad) jl jns (bad) hlt adc push jmpq mov sub cmp stos and (bad) enterq pushq push sbb sub sbb adc fucomip jle rex.RB callq js fistpl jno movsb je sti ficomp out mov sbb rcrb rex mov pmulhw fnstsw (bad) sbb nop and rolb or or jge retq fwait int3 xor cmp jge addl xchg cltd movsb cld (bad) (bad) mov stc cli (bad) (bad) fildll sub lods rclb mov (bad) in mov mov ds push jl add jle sbb nop lahf outsb jae fdivrs scas add movabs and andl sub jnp sbb mov mov rex.WXB xor lock (bad) jg cmp push scas jl cmp xor outsl adc (bad) mov and (bad) sahf pop rex.RX fisttpll adc imul (bad) (bad) mov hlt xor mov movabs jmpq mov incl jmpq sar xor bsr adc add jmpq jle retq sub jmpq and push rex.R (bad) (bad) (bad) (bad) mov or add (bad) movsl xor pop test cmp jb cmp pop pop out (bad) (bad) (bad) (bad) (bad) lcall callq loopne cmp lcall cmp andl outsl sti retq (bad) (bad) (bad) in movabs mov rex.WRB data16 cmc pop mov xor movabs push (bad) fcoml and (bad) cli mov (bad) mov push or pop mov jae jrcxz add movsb jmpq jne and cmp shr mov bsf cmp sub bts btc shr mov jmpq jmpq jmpq cmp clc cmp sub jmpq bt movb jmpq xchg (bad) cmpsl adc out cltd f2xm1 movabs jle in sbb movabs sbb decl mov shll lock lods sub std (bad) lcall mov sbb (bad) lcall retq cli mov mov mov sub mov or (bad) (bad) rolb andl (bad) cli or leaveq jmp xor rolb lea std not adc and movabs jb shlb out mov test mov callq sub je iret fidiv loopne and sahf (bad) lods push xchg xor sub cmpsb test mov lock cmp rex.WX vpunpckhqdq sbb sub adc xchg push in pop (bad) push sbb xchg fidivr cmp fsts adc lods pop cld xlat (bad) (bad) mov (bad) out rex.RX mov (bad) mov rex.X rex.WB mov add jp (bad) (bad) pushq iret clc fs (bad) fdivl jb fidivrl cld (bad) (bad) inc fsubrl (bad) fist mov cmp rex.WRXB xor (bad) loope scas repnz hlt pushfq mov (bad) (bad) cmc popfq rex.RXB xchg xchg std xchg add add pop subl sbb (bad) in cmp (bad) rex.RX rex.XB loope lahf outsl mov mov pop lea rex.WXB cmp cmpsl in imul jmpq imul or (bad) clc cwtl push notb movl mov loop test ficoml callq xchg jb stos rex.WXB lcall test rex.WRXB test stos rex.W xchg push movsl cmc rex.WRXB or cli imul jle in in (bad) out push (bad) fnsave addr32 rex.WRX cld (bad) (bad) (bad) xor push sbb or cli (bad) (bad) fildll sbb retq mov ds sbb sbb rex.WX lahf scas jl fs xchg sub jo mov add fs stos xlat vpmullw jnp mov xchg sub pop mov sub cmp in cmp lret jmpq mov bswap jmpq jmpq jne xchg mov or sar sub and bt mov cmp cmc cmc sub stc clc stc clc pushq test jmpq je jmpq mov cmc add bt not cmp cmc cmc xor jmpq jne xchg mov rex.W testb sub ror mov cmc cmp test bt sub cmc clc stc pushq test bt bt stc cmp jmpq jp jb retq cmc movb cmc test bt test jmpq jne jmpq add add xor mov add adc cltd add and imul movabs rex.WR lcall test sbb (bad) cmp notl add in mov movabs mov mov push mov jrcxz xchg leaveq fmull (bad) int3 jmp (bad) rex.WX xor imul sub mov cld (bad) (bad) fisttp adc xchg sbb xor test sbb lahf xchg leaveq jrcxz pop xor repnz mov imul (bad) xchg or jge cmovbe divl cwtl ss adc lods mov enterq rex.WX rex.RB mov mov xchg push test (bad) (bad) in jge sub insb mov xor rclb jbe and rex.WX (bad) mov movsl int insl mov out rex.RXB jmpq jmpq jmpq jmpq callq setno add bts add bsf clc mov cmc stc bt cmpb jmpq pushq jmpq mov cmp clc cmp test jmpq (bad) test rex.WRXB sbb (bad) test mov mov adc (bad) out (bad) mov adc add rorl lret add mov (bad) retq test xchg pop movabs pop sub adc mov callq sbb idiv (bad) (bad) lcall rex (bad) (bad) fistpll (bad) pop out rex.RB jmp icebp movslq rex.WX enterq shl xchg xor sub (bad) cmp sub and scas jl xchg imul rex.WR scas add addl jne xor sti (bad) shrb insl (bad) (bad) pop cmp and push callq adc in lret add cmp rcrb retq xorb imul cmp (bad) jo xlat (bad) lret clc or pop sbb mov repnz and cltd cld xor add add loope xchg add (bad) data16 xor pushfq ficompl xchg repnz push cmp prefetch (bad) (bad) lcall add movsb adc int3 adc adc int3 or test std (bad) (bad) (bad) lahf add mov sub xchg xor push xchg pop push pop or fcomp add pushq lods insl mov scas pop (bad) retq movabs (bad) out (bad) or rex.X cmp in xchg mov or add sbb lea fisttp imul adc rex.WXB fistl jns addr32 test and movabs push or or (bad) xor mov movabs rex.WRB cmp (bad) scas pop (bad) (bad) (bad) (bad) (bad) mov shrl je and rex.B mov (bad) (bad) jbe add in adc (bad) mov jb rex.R (bad) jns outsl rex.WRX movabs rex.WRB andl jg xor out and jl and mov add (bad) rex.X fwait xchg pushfq test sbb imul mov test testb or push cltd add outsl adc sbb jle,pn out rex.WR or loope mov adc sahf (bad) outsb mov int3 (bad) (bad) and mov lret and sahf out adc insb and rex.RXB sahf es (bad) xchg xor xlat add loopne ds je rex.B rex.RXB (bad) and in es cltd (bad) (bad) scas test popfq jne lock jg (bad) rex.WRXB sar mov gs movabs or rex.XB imul sahf xor mov fist (bad) movabs xchg pop rex.R sub pop mov in sub fsubl rex.WB negb lea je and mov ja rex.WRB imul fistpl xchg outsl mov rex.X push fcomi sbb movabs pop sti adc fcoms push sub iret jae xor pushfq push fdivs fiaddl and int outsl (bad) cmc sti rex.XB mov sub rex.X in fstpl and mov mov fnstsw test orb (bad) (bad) (bad) pushq and (bad) (bad) (bad) dec retq rex.RXB in mov pop in movabs add cwtl mov push data16 sub push rex.R mov lods pushq lea cmp (bad) xchg (bad) (bad) mov pop xlat outsb movabs out add jno pushq mov cmp loop sbb (bad) out outsl out (bad) or fild (bad) (bad) and fwait mov movabs jb adc rcrl or (bad) mov xchg (bad) shl cmp popfq add outsb (bad) sbb or jg paddusw jmp test (bad) gs lods mov xchg jnp rcll add jmpq je mov bswap lea not xchg not not movzwl bswap lea not bswap lea mov jmpq callq rcl add rcl btc add bts mov jmpq jmpq jmpq dec jmpq mov sbb sub sets lea jmpq ss rcrb popfq jl xor rex.X sbb rex.RX sub out cmp movslq rex.WRXB fldl cmp pop test (bad) movsl sbb adc (bad) mov xor (bad) rex.WB (bad) (bad) sarb fisubl (bad) (bad) mov lret (bad) fistpll mov (bad) cli cmc adc in retq jle mov rcrl in and (bad) (bad) sti sub (bad) (bad) mov adc movabs mov pop mov (bad) push pushq xor imul out cmp pop xor (bad) pop mov adc cltd or jbe fs jns rex.RX imul ss push xchg sbb leaveq es mov sub rex.W in rex.WRB in movabs outsl pushq imul insl sbb (bad) stc fdivl movslq movslq rex.WB rex.WR jp fdivs jb add pop add rcll std (bad) (bad) mov add addr32 push enterq test adc pop in lods loopne jns stc movabs fnsave test and mov cmp (bad) (bad) (bad) jle mov (bad) fistpll rex.WR rex.WRX rex.WX in lods push ja rex.WRXB (bad) int3 popfq fistpl cmpsb push xor (bad) (bad) in xor sar xchg sahf push sti xor (bad) xchg imul jg adc loop (bad) movabs or rex.WX jmp mov xor outsb insl rex.WR xor cltd sbb jle je test jmpq test cmc cmp jmpq bswap pop movzbl not bswap pop movsbl xchg pop js pop jmpq iret (bad) and insb fstl lret (bad) ds xor push rex.XB leaveq imul rex lods movsb sub add lret (bad) cmpsb and jp mov (bad) mov mov and mov fwait sub (bad) jg mov mov cld pop push (bad) int3 jo or enterq std (bad) lcall enterq (bad) cld (bad) (bad) ljmp or pop iret popfq jl xor rex fsin cld cmpsb rex.B cmp rex.WRXB je push fistl push push cmp (bad) push (bad) sub (bad) rex.WRX stos movslq loope (bad) or adc out cmc mov adc push (bad) retq (bad) nop rex.WRXB or sahf scas mov callq and add andl cmp pop cmp retq pushq addr32 (bad) jmpq jle sbb or and xlat mulb add stc imul sti cmp jp callq fcoml xchg je mov pop insb lock cmpsb pop insl cmc lods loop rex.B (bad) (bad) lcall in and mov sbb jg xor std (bad) (bad) mov cmp (bad) fbld add (bad) rex.WR gs rorb mov je movslq hlt push xchg cmp outsl (bad) (bad) (bad) add pushq movslq and test cli rex.WX sti in sub (bad) xor sub jo lret push mov push cmp jno fwait cmp movabs rex.WR callq rcr clc add or shld test mov bt cmpb jmpq cmp clc xor clc jmpq ja bt not inc sub ror setp add cmc add cmp bsr rol rcl mov sub mov jmpq ja jmpq je clc push stc rol test mov rcr sub bswap jmpq jmpq add sbb cmpsl data16 pop xor ss sub pop outsb (bad) mov mov mov or jrcxz repnz (bad) iret test (bad) in pop clc xlat mov out cmp rex.WXB push cmp jbe jle and (bad) jb rex.RB or loop jl cltd (bad) outsb and mov fcomp sahf rex.W rex.WRB jbe xchg xor (bad) lods std (bad) (bad) ffreep loopne sub cld (bad) (bad) fisttp sub mov fcoml mov fcompl mov push (bad) sbb rex.WR in mov pushfq movabs mov jrcxz add imul and rex.RX sahf (bad) jle je rcl bt neg add movzbw bt lea bsr mov jmpq callq neg inc add test not sub mov cmc test cmc cmpb jmpq pushq (bad) stc (bad) sbb in fidivl (bad) jg outsb popfq (bad) rclb mov insb fwait cmp fsubr jae test cmpsb push jne fisubrl addr32 rex.R pushq je movslq lods rex.R mov fiaddl xor adc mov xor rex.R add xchg (bad) mov xor int3 movsb jle (bad) lret sub cld (bad) (bad) dec fsubrs (bad) (bad) movabs (bad) test xchg fidivr retq scas (bad) push int (bad) cld cmpsl jg stos cltd cmp rex.WRB (bad) pushq sbb (bad) scas jl fisubl or out (bad) scas ss rorl movabs je jle xor xor cwtl mov movabs imul bt add jmpq jmpq jne bt btr mov bts shl sar sub bsf bts sbb cmp mov clc test bt sub stc pushq test cmp cmp jmpq pushq jmpq add jmpq (bad) movabs (bad) rex.X rex.W mull mov nop mov movslq out cs rex.RXB rex.WRX test (bad) mov xor (bad) fisttpl or enterq mov or pop repz xchg xor pop rcrb enterq movabs sub sbb in subb mov test sub mov and jrcxz sbb sub imul (bad) es movsl test shrl (bad) repnz (bad) rex.WX int3 andl fwait cmp adc xchg int3 shrd (bad) mov (bad) out rcl mov (bad) (bad) rclb ds rex.R sub js rex.WRXB shl test xor adc jne sti cmpsl sub and cmpsb test nop fmuls jno sbb xor mov (bad) push mov (bad) cmpsl insl pop mov (bad) movsb mov pushq sbb cmpsb fucomp in rolb movsb cld nop (bad) repnz rex.WRXB movsl mov fcom mov adc adc jmpq sahf (bad) xchg movsb mov mov and sbb stos retq (bad) stc (bad) data16 adc int3 (bad) or (bad) scas js jg cmc rex.WRB xor jns mov (bad) or rclb movsb pop lods int movabs lahf xchg rex.X sub or sarl (bad) pop lods insb callq (bad) fsubrp popfq jl (bad) movsl cmp rex.WXB xchg (bad) and scas lea mov mov cmpsb lahf orl (bad) or movabs movabs movabs or test (bad) push nop cmp or retq (bad) int lahf cmp add xor (bad) scas addr32 push popfq jp lret jg mov xchg (bad) int sahf cli xchg std xchg jnp out int sahf rex.WXB rex iret int sahf movsl xchg jp es movabs cs (bad) push nop mov hlt mov (bad) mov orl pushq mov pop sbb add mov popq sub (bad) lcall mov jnp cld (bad) (bad) (bad) fadds (bad) rex.RB or addr32 cmpsl push stos mov (bad) loope xlat fdivrl (bad) adc mov fs or (bad) (bad) data16 add push sbb cmpsl (bad) iret xlat pop lea xchg movabs pop test popfq (bad) pushq or sbb jg mov jge in sbb sbb mov sbb rol xor outsb (bad) adc xchg or mov mov andb sbb fsubl jle add cs mov and xor leaveq test mov pushfq std (bad) (bad) (bad) (bad) sub leaveq add movabs clc rex.R adc btl (bad) test rolb xchg test pop fwait push or divb mov lock lret andb callq pop test ds rex.WR rex.RX test (bad) not cmp rex rex.RB cmc jge pushq mov pop retq jmpq add jl add bt stc stc sub jmpq jbe jb cmc stc cmp jmpq jmpq jae stc test jmpq jmpq leaveq jns subb pop cmp xlat scas pop (bad) cli rex in pop rex.WXB xchg (bad) mov (bad) jl fwait sbb movslq adc (bad) out adc (bad) shlb out insl notb sbb sbb movabs mov orb (bad) (bad) ljmp (bad) (bad) lcall add (bad) int movabs and outsb (bad) xchg es pushfq fistp cmp add rex.WX repnz jae (bad) pushq adc (bad) hlt int3 stos push imul xchg xor sbb (bad) add fcmovne jrcxz movabs in movabs cwtl rex.WRX es pushq (bad) jrcxz xor adc pushfq sti cli (bad) jmpq movzbw mov rol mov test cmc mov test cmc cmp stc xor clc bt bt bt repnz jmpq je movsbw cmp bswap mov push and neg neg test mov inc clc (bad) lock movsbw lea movzbw lea jmpq jmpq pushq jmpq (bad) jg jns sbb adc or jrcxz jb cmp icebp sbb rex.WB rex.WR xor movsb movslq loopne fdivrs adc sbb (bad) pushq sub mov jle pop lea (bad) jl (bad) movabs stos std (bad) movsl std push xor repnz cli (bad) jp retq int retq jae sub (bad) (bad) mov (bad) sub pop rex.RX adc fs (bad) fsubrl add pop add sti jmp adc adc cmc or jmpq sbb mov ds rex.WB jge in (bad) pushq sbb movabs mov movsl rex.RB (bad) (bad) cmp xor movabs push fxch sub test fs rex.WXB xchg cltd adc adc callq (bad) lcall insb sti (bad) (bad) fisttp rex.WR rex.WRX rex.WB insl sahf mov data16 mov (bad) fidivrl pop pushq out outsl out sub enterq test pop rex.WRB pushfq mov pop jle movb pop (bad) in cmp sbb cwtl fmuls (bad) (bad) es jb (bad) cmpsl test sub mov rex.RXB jg in mov push lock or jnp insb jmp pushq (bad) adc rex.WRB mov jg (bad) sarl shrb jno xor (bad) (bad) sub fs (bad) lret jmp lret (bad) je (bad) ja mov push lret (bad) or sbb rex.X (bad) (bad) (bad) lcall cmc (bad) rex.WRB addr32 std and enterq mov mov xchg (bad) rol adc (bad) (bad) fcomip enterq hlt retq iret js int3 lret push iret or ja test outsb rex.WRB jl cmp (bad) sub rex.X (bad) push movabs and stc (bad) ja fnstenv stc mov mov movabs and rex.XB in or add loope push (bad) fisttp (bad) (bad) push (bad) mov rex.RB rex.X or or push jnp (bad) (bad) mov movsb (bad) int3 lods xor push lcall mov adc movslq jns or xchg (bad) jno pop cmp or leaveq add cmpsb outsb imul loope mov (bad) hlt pop push lock repz stos leaveq pop std sbb (bad) lcall rcll sbb movsl or cmpsb (bad) imull push cmp adc cld jge lods mov int scas rex.W (bad) (bad) jg sbb (bad) (bad) fistpll loope jbe (bad) mov rclb (bad) out (bad) sti ficompl mov jno add xchg or or movslq icebp or (bad) add mov mov (bad) ljmp jns rex.RXB mov lret rex.WX adc incb ficom push push rex.WB rex.WRXB rex.WRX cs insb add test lea lea mov movzwl jmpq or mov xchg xor adc icebp stos pop cwtl sub or and mov movsb and pop cmc pushq lods std lret sti xor in pushfq loop (bad) (bad) fbstp movsb rex.WRXB movabs xchg (bad) std (bad) (bad) (bad) mov lock fistpll stc (bad) fs rex clc movabs shll insl retq xchg scas (bad) std push rex.WRB ss jnp sbb icebp mov sub in stos pop out hlt pop rex.R imul rex.XB rorb (bad) rclb in sbb out nop iret add popfq fbstp stos xor movabs loope movabs divb xchg mov push mov rex.WXB adc pop gs stc stc stc bt imul clc cmp test clc add jmpq jb cmp cmp jmpq je rcl push shr neg shr mov cmp sub lea movzbw lea jmpq imul mov mov push rex.R rcll sbb adc (bad) (bad) lods in (bad) repz and cmp xchg loopne divl mov mov and mov flds (bad) test in (bad) movabs rex.WRXB adc xchg mov shl rclb (bad) (bad) fnstsw mov adc loope pop retq mov rex.RB (bad) mov jrcxz sub adc movabs lret (bad) pushq mov stos cmp add mov std rex.R rex.WX xor test mov jp pop callq (bad) (bad) lods xor add cmc jmpq (bad) ja xorl and fistpll (bad) jae fcomi adc lea and imul je sbb movabs imull orl rex.WRB mov pushfq (bad) mov sbb sar movabs ja rex.WRX lret push stc orb (bad) (bad) callq (bad) (bad) (bad) ljmp icebp test xchg int3 repnz sub rex.WX fmull mov pop add add retq sub xchg mov loopne pop mov cmp xor (bad) sub lahf movsb rex.WR cmp mov (bad) xchg std add repnz incb in adc adcl sbb mov retq retq sub divl imul add xchg push int stos xlat (bad) in mov repnz (bad) pop xorb out cmpsb test sub mov cli jmpq mov add add rex.RX sub rex.WXB cmp (bad) (bad) mov or pop icebp (bad) addr32 (bad) sub js fwait icebp or add cs stc and mov push (bad) (bad) lcall lods cld (bad) (bad) incl xor loop nop cld (bad) lcall push pop fs xchg (bad) xlat incl fistl rcrb sbb (bad) pop insl lea mov mov xor or pop rex.RXB rex.WRB fsts xchg icebp icebp jns (bad) int imul add mov js jle and add jmpq es xchg std jno mov mov movabs cwtl sti fwait xor imulb outsl (bad) (bad) data16 and imul sbb rex.RX lea insb int3 xor scas pop sar imul rex.R adc cmpsl fwait mov pop std (bad) (bad) dec fldz clc mov (bad) (bad) fild (bad) xor lret pop add xchg sub (bad) adc rex.WRXB lock pushfq and mov rex.WX cwtl rex mov in xchg push out ja cmpsl mov imul adc (bad) mov rex.RXB and cltd stc (bad) pop xchg in push xchg lret xlat (bad) (bad) xchg or pushq movabs mov pop ds cmp int3 add xor (bad) test mov pop cmp movabs sub pop cmp imul mov mov xchg push test add (bad) js (bad) (bad) (bad) jg (bad) sbb repnz mull and mov or sbb shr es lods std sub cmc movsl and or retq rex.XB pop push rep and mov (bad) (bad) incl test (bad) (bad) (bad) ds push add out rex.WRXB jb rex.XB xor add adc pop lea cmpl or out mov jno sti (bad) (bad) jg je movabs push xchg sub in (bad) (bad) rcrl and mov addl (bad) pop cmp sbb loop lock loopne sahf (bad) data16 fsubl xchg push push adc (bad) (bad) (bad) fmull (bad) and xchg add out insb jmpq sahf out push int je jmpq bt jbe cmc movb bt jmpq jmpq adc jmpq not lea jp movzbq setne mov pop jmpq jb bt cmpb jmpq jmpq stos jmpq jmpq ja stc clc cmc imul clc clc clc cmp add jmpq jg jne movzbl mov jmpq pushq jmpq out cld data16 mov lock xchg sbb mov movsl gs add retq jl xchg mov outsl movl and (bad) adc (bad) movabs jbe cmp sbb (bad) (bad) (bad) decl sub movsb jrcxz (bad) cld (bad) repnz and mov or (bad) (bad) lcall (bad) xchg lods rex.WRB js mov movabs stc add mov icebp sarb sub cmp mov pop fstps mov and and rex.RX mov enterq (bad) in retq loopne (bad) (bad) (bad) (bad) rex.R sbb add cmp jg add jg (bad) pop (bad) (bad) mov je rorl or add jmpq je jmpq ja stc stc imul test stc jmpq jae seto test mov mov rcl and shrd mov movzbl shl shr add mov cmc cmp xor jns cmc repnz jmpq jne sar sub sar mov sbb add inc rcr mov cmp test jmpq jb cmc stc clc clc cmp jmpq je clc clc cmp stc add test cmp jmpq push push push push xor cs insb add cmp ja mov pop jbe,pt (bad) scas (bad) jp sub xchg (bad) scas sub mov movslq adc (bad) dec push cli (bad) sbb out int3 sub (bad) test jge mov rex.RB cmp scas rex (bad) (bad) fildll ficom pop movsb sar (bad) (bad) xchg adc rclb xchg pop mov fdivs scas pop rex.WRX mov push (bad) push (bad) mov movabs or mov xorl cmp xchg (bad) pop cmc sub (bad) enterq rcl pop pushq fnstcw ds int3 jno (bad) xchg outsb xchg in loop rex.W (bad) (bad) (bad) in jl (bad) jb mov jle (bad) jb add insb (bad) xchg jne rcl sub sub mov adc add shr adc rcr rcr mov jmpq jmpq jb je bt clc jmpq xchg rex.WRXB ds shrl push ja sbb jbe loope addb in or jnp notb mov stos lret fstpt fistpl (bad) or movabs rex.W out sub negl (bad) lods xchg addr32 (bad) lcall leaveq (bad) (bad) (bad) (bad) fild test fwait rex or (bad) and pop (bad) clc mov mov loop out mov rex.WB out mov negl xor mov ds cmp (bad) (bad) sub mov jae (bad) mov stos mov (bad) rex.WRB movabs xchg push divl ffreep iret test rex.RX movabs ja test test sub cmp stc cmp jo ja cmc cmc stc cmc imul clc test jmpq jmpq jmpq jne test stc movb jmpq clc add jmpq je jmpq jne jmpq rcll xor mov rex.WRB rex.W divl mov out mov mov or cmp in adc movabs mov xor shl outsl cltd cmpl (bad) mov (bad) cld (bad) (bad) (bad) mov and or adc (bad) hlt lahf (bad) adc ja (bad) mov ds and cmpsl test cld (bad) (bad) (bad) sub cwtl fnstenv rex.WR je pop nop sbb sub jae xor (bad) sub movabs cmp and rcrl cltd rex.WRXB retq mov cli jmpq mov bt clc imul stc clc add jmpq jne jmpq mov sbb cli adc in movsb movslq retq jmp es sarb mov adc movabs mov (bad) sub jmp sub jno xor push (bad) add cmpsl sar (bad) (bad) mov adc imul and mov rex.XB fcompl (bad) rcl (bad) leaveq movsl sti (bad) (bad) fistp sub lea adc sarl retq cmp (bad) (bad) stc or sub not jle hlt xor and cwtl fbld add es add movabs adc enterq enterq movabs pushq (bad) or sub je mov lods retq sub sbb (bad) add lret pop and (bad) outsl pop (bad) in mov mov or decl test add stc bt add add mov jmpq cmp jmpq add rex.RXB gs outsl fs imul add orl scas (bad) in mov sub addr32 add (bad) mov (bad) movabs sub movabs (bad) pop (bad) xchg rolb (bad) divl cmc xor mov adc loopne (bad) (bad) (bad) (bad) jg jbe cld jl ss mov cmp mov movsb xchg fnstenv jg xchg mov test test pop mov jmpq (bad) (bad) (bad) (bad) movsl out mov (bad) (bad) fild cld and and jb sub (bad) movabs xor insl jne mov push mov adc lods movabs (bad) ss mov mov rex.WR and jmp retq callq mov callq (bad) rex.WRB fwait sbb jle (bad) adc and callq push cltd fnstenv mov adc fsubrl rex.XB add add cmp jmpq jmpq je bswap cmp not shld push add inc adc jmpq je movzbw shld bswap push rcl rcl xor cmp mov dec shr bsf sub jmpq je cmp cmc bt cmp jmpq jne not rcl shl bt xor add mov jmpq jmpq add push gs jne jb push (bad) insb jne add (bad) (bad) (bad) add test (bad) add in inc and sub bswap rcr cmc add mov xor rol shl sub add add mov cmp cmp clc cmc test jmpq jmpq ja (bad) lock stc sub shl bsf shr add neg clc test mov cmp (bad) lock bt clc stc stc repnz jmpq jmpq fs jns jge mov out sbb add pop jp loopne mov (bad) (bad) (bad) out movabs (bad) ficompl (bad) leaveq icebp in repnz cs xchg jrcxz add mov imul push lods sarb scas es andl fisttpll sub mov in cmp jl (bad) sbb lods ds outsl mov sbb jmp cmp pop mov (bad) lea (bad) lret callq sub imul callq idivl sub loope js pop (bad) hlt mov cmpsb (bad) std xchg xor jae (bad) jle notl rex.RX mov mov (bad) (bad) decl mov lahf adc sub stos sub jmp movsb rex.WRXB movsl and in sbb (bad) lret hlt not adc sub (bad) sbb (bad) adc mov cs lock data16 (bad) jg in movabs rclb (bad) sahf imul xchg push movsb (bad) repnz test frstor rex.WRXB pop sahf scas insl or rcl cmp (bad) (bad) (bad) add fdivs jg mov out insl cs lods pop sbb push movabs (bad) je xchg cli adc iret (bad) (bad) pop insl std lret jmp (bad) mov mov iret rex.WRXB in adc (bad) (bad) (bad) (bad) jg xchg jp (bad) sub fldenv enterq sti int mov mov mov rolb xor mov adc jb push in cmp (bad) out xchg rex.R sbb cmp rex es cli cmp add fstl and cmp movsbw mov lea jmpq jae stc clc jmpq jmpq jmpq jmpq ja lea mov lea pop jmpq je pop movb jge sbb rex.X rex.WB push push dec stos rex.XB mov int out ja xchg sub in xchg (bad) cmc (bad) sub movabs rex.RB rorl out (bad) scas (bad) jl sub cmc mov jmpq outsb sbb jns fldenv test sbb mov movsb movabs jrcxz stos and and pop (bad) stc or cmp and sbb (bad) (bad) rex.WB and push lcall (bad) (bad) movabs enterq rcrl clc and (bad) (bad) sub or rcl mov out testb sbb cmp sbb in shll cmp add xchg (bad) cmp rex.RB xchg rex.X rex.WX sar stc stc repnz jmpq jmpq ja stc clc imul test cmp cmc add jmpq jae clc sub jmpq out pop movb addr32 mov mov pushfq cld or sub movslq mov xchg cmp out (bad) fidivr jmpq fidivl test pop lea mov jbe (bad) push (bad) (bad) (bad) (bad) mov mov adc jrcxz cld (bad) (bad) jg push (bad) adc sti (bad) (bad) (bad) (bad) jle mov add and jo jge movsb addl loope mov shrl sbb ss pushfq push mov rex.WB xor jne mov pop in sbb pop popfq int3 in sbb repnz add and pop stc xchg (bad) ror paddusw sub cmp xor push out ss mov jl jrcxz imul in imul scas jl rex.RXB insl (bad) push (bad) sbb decl (bad) xchg decl data16 mov out stc push (bad) (bad) ficoml sbb cltd xor divl (bad) pop decl mov movabs push xor cld in jbe rorl jmp cltd rex.WRXB mov (bad) mov jmpq sub in rex.WRXB jle (bad) add cld (bad) lcall sbb es (bad) (bad) fcomip mov and pop jl movabs pushq cld add pop popfq mov repnz mov jmpq nop outsl (bad) leaveq je je (bad) insl adcb pop push mov mov (bad) jno xchg stos mov xchg or and rcrb iret xlat (bad) lahf rex.RXB or xchg (bad) (bad) (bad) pop cmp (bad) adc rex.RXB sub adc mov rex.WRXB repz pause and xor dec bt bt neg cmp clc stc test sub jmpq jmpq ja xor rcr not sub clc jb (bad) lock add btr btr or mov test rol or mov cmc repnz jmpq jne bt shld inc mov clc cmp or jmpq callq bsr shrd add dec lea mov jmpq add insb jae jb jo add jb test mov pop cmp (bad) xchg xor es stos ja leaveq lock (bad) (bad) cmpsb out (bad) in mov (bad) push lods sub (bad) movsl (bad) push (bad) (bad) ds sub ss sub xor mov xor (bad) xor and or (bad) (bad) (bad) cld test sub mov sub adc or adc mov fcomps movabs add mov sub push xchg rex.RX mov sbb (bad) fwait jne and push cltd stc (bad) sbb fdivl push cmp rclb enterq cmpsl xchg and cmpsl and scas mov (bad) insb addr32 pop std (bad) cwtl mov sbb cmp sbb pop ds (bad) push jle fstps add movabs (bad) adc sub rex.XB (bad) xchg repz loopne sahf rex.WR rex.WB pop rex.RXB and push movslq mov add ja cltd and test mov loopne or imul xchg cli adc movabs jns lret cmc loopne rex.RXB (bad) decl rcrl add pop cmp addr32 int rex.X (bad) lcall pop clc xlat (bad) jp push (bad) xchg and (bad) loop leaveq fnsave fisttp jo mov notl in movsb xchg cli pushq mov neg lock std (bad) lcall sub (bad) (bad) fbld andl scas rcrb push (bad) out rex.W gs rex.WX jo add rex.B (bad) or (bad) movabs rex.X sbb jns jg fstpl cmp add mov pop xchg imul and push cwtl xor (bad) mov xchg lods int3 sbb test incl add mov push jmpq adc mov clc cmc add clc bt movzwl cmp cmp mov cmc add cmc mov bt cmc test jmpq jmpq sbb std or mov adc and insb test (bad) rex.WRX outsl (bad) mov movabs jg mov cmpsb jns push cwtl mov jbe jne pop pop loope sbb je popfq (bad) movsb fdivl movsb cmc xchg mov testl pop cmp cmp retq fucomip mov jle push callq pop lahf jle es out scas rex.WRB xlat (bad) out ss data16 int3 (bad) lods xor (bad) cmp pop rex.RXB cmc in push xchg jnp pop nop push popfq adc add test and cmp mov movabs (bad) sub pop mov (bad) rclb ljmp and in jmp loop rex.WB rex.B mov add xor mov xchg add neg mov shrd mov test shr ror mov cmc xor test repnz jmpq test jmpq jmpq jne jmpq jmpq lods jmpq stc jno mov jl xchg cmp icebp and and jns (bad) rclb loopne movslq sub sti cmp in sbb movsb and push cld movsb mov or (bad) add jmpq data16 (bad) (bad) lcall (bad) xchg rex (bad) ja (bad) jno (bad) outsl cmpsl fistp pushq jnp and fdivrs movabs xorl or lahf sbbq (bad) mov jbe jp jp pop cld (bad) lcall and (bad) (bad) fildll (bad) mov loopne push int (bad) out xlat rex.WXB pushfq (bad) (bad) fcompl sbb sbb rex cmp callq sbb fmuls rex.RX cld xor fstps mov (bad) outsl mov cmp mov lret outsb out divb jno (bad) add add jl lahf ljmp mov mov movabs xchg insl popfq jmp lret cmp (bad) (bad) mov xchg (bad) xchg xor iret push rolb fmull jp xor (bad) (bad) (bad) fimull lods gs test (bad) lcall mov scas mov or rex.RX (bad) sbb add rex.RB rex.B adc mov jrcxz,pt mov and in (bad) retq (bad) nop or fmuls rex.RXB divb adc std (bad) lcall and (bad) (bad) fild xlat retq vcvtps2pd or in int3 sub jb out jle xchg movabs sbb ja (bad) sub or (bad) cmp rex rclb imul sahf rex.WR hlt sbb cli (bad) rex.WX (bad) ds mov (bad) pop (bad) iret sbb callq test clc test cmp jmpq jmpq je clc bt stc sub bt clc jmpq je test clc jmpq add add imul mov mov in sbb (bad) (bad) ficom mov mov in lods sbb movslq scas sbb movslq pop testl cli pushq (bad) fs xchg sub (bad) lcall (bad) mov cmp adc xor (bad) test (bad) (bad) jnp xor cmp mov rex.B mov ljmp stc (bad) (bad) rex.RXB (bad) sbb (bad) (bad) fbstp or movabs sub and mov rcrb mov xchg int3 out gs cli fstpl cmpsb out test jne sbb mov cmp (bad) cmpsl mov (bad) adc and (bad) out lock test add movslq std (bad) (bad) mov mov xor jmpq movsb insb addr32 push lret mov mov pop clc rep rcrl cmp mul push (bad) sub nop es xlat sbb (bad) rex.WB fnstsw xor mov xchg fwait rex.XB mov (bad) (bad) mov sub lea in cmp js rex.WRX fcompl and movabs rex.W out rex.R xor mov leaveq cmp jg jae xadd xor mov shr movzbw setne mov shl xor cmc setg mov cmp jmpq rep not pop jmpq bt jmpq xor mov fucomp sub jae movb cmp fwait sbb (bad) movsl and insb mov repz in gs insl movabs mov (bad) in cld (bad) (bad) fildll negl (bad) rex.R (bad) xor push or (bad) movsb insb pop xor js (bad) sbb and (bad) fadds jae jb jrcxz xor out lret (bad) out and (bad) test (bad) cmp in push mov jo add push (bad) cmp out sbb cmc xchg jae in test div (bad) sub movabs scas pop xchg in xchg rex.XB or adc xchg (bad) (bad) (bad) sahf (bad) mov mov divl lahf rex.WRB (bad) (bad) pop mov and test (bad) lcall add (bad) (bad) rcl dec push bswap or not mov seto shld sar sub movzbw lea jmpq data16 add sbb imul (bad) rex.WRXB jl mov insl pushfq int3 (bad) (bad) (bad) (bad) (bad) mov addr32 sub pushq jmpq (bad) data16 rex.R mov (bad) push or mov (bad) jg pop in jmp rex.RXB jg cmp iret mov push out sbb mov jp mov ffree icebp cmp fs (bad) (bad) jg rex.WX mov loop ja or repz xor fimull and fildl rex.RXB cmp pushq jns fs sbb add hlt pop pop add andl pop hlt mov test in je cld sub rex.B or (bad) add rex.WRXB adc xchg (bad) fidiv leaveq (bad) push shr sub shl data16 (bad) add bts mov (bad) lock stc test cmp repnz jmpq sub bt jle cmc repnz jmpq movabs (bad) mov repnz mulb xchg nop and add pushq or imul cmp loopne xchg pop sbb lret pop insb xchg lcall cmpsb test js jmpq (bad) (bad) lcall (bad) fldcw clc out rex.WRX mov xor (bad) stc fadds imul (bad) mov out (bad) xor cltd rex.R fs jno in insb mov or outsl (bad) fs cmp mov cmpsb popfq xor out rex.WXB pop out mov sarb test sbb sub add stos enterq (bad) sets mov jmpq ja test add cmp sbb test stc add test xor xchg dec mov ror rcl bt mov test test bt jmpq cmp movabs test callq imul rex.X popfq sub add (bad) (bad) xchg retq mov callq sahf jnp movsb iret mov roll (bad) rex.WX fstpl (bad) pushq and xor negl jmpq cld (bad) lcall jae incb (bad) (bad) fistpll jmpq (bad) (bad) xchg (bad) jb add xchg or insl xchg out rex.XB std sub push push test and adc test (bad) add xchg push add mov (bad) pop icebp ds mov stos (bad) enterq pop xchg stos cmp or (bad) cltd adc xchg icebp xchg sbb andb or rex.RB rex.WRX cs insb add sbb mov rex.WXB (bad) mov clc jo (bad) (bad) (bad) mov sar (bad) cmc sbb sbb movabs movsl cmc and shrl and repz cmc sbb (bad) xchg cmp int3 lret orb (bad) (bad) fild adc (bad) (bad) (bad) pushq adc or mov cld pushfq sbb test xchg cltd (bad) jns (bad) sub mov adc xlat (bad) retq pop int adc sbb or add add mov jae or jo jg (bad) xchg add shll or callq movabs cs adc (bad) (bad) jg in (bad) outsl mov fsubs (bad) rex.WRX fldt fwait add rex jle cmp push xchg retq enterq (bad) xor idivl js pop shrb (bad) add rex.WR movslq rex.RX add movabs rex.WRXB add addb int int3 sti pop jb adc xchg testl cmpsb (bad) std pop sub sub (bad) rol pop ds xor test or adc mov mov cmpsl mov (bad) lcall in fimul lret mov (bad) (bad) (bad) mov xor (bad) (bad) fistpll add lret movabs (bad) (bad) mov (bad) jmpq or (bad) std (bad) callq imul push mov rex.WRB in shlb rex.WB (bad) or js pushfq rcr mov and (bad) xchg out imulb mov push (bad) sub std push rex.WRB rex.WXB or pop mov xor xchg or fnstcw out ja movabs (bad) (bad) (bad) (bad) mov pop xchg sbb (bad) rex rex.XB rex.WXB rex.WRX leaveq cmp or mov mov jno sbb movslq xchg sub (bad) (bad) jne sbb (bad) (bad) lcall scas cs movntq xchg jns fisubl fdivl add mov (bad) (bad) (bad) and mov out push xchg adc out es cmp mov mov cld or mov loopne xchg (bad) sahf out cmp pop add adc lods jp imul and fdivs mov popfq shlb xor pop mov (bad) clc adc (bad) divb (bad) cmp movabs (bad) xchg sbb (bad) xchg std or (bad) cmpsl (bad) (bad) (bad) lock mov movabs (bad) ss or xchg xorl cmp xchg jne hlt rex.R scas rex.WRB and (bad) es pop sbb pop xor iret lret movabs pop in movabs adc push (bad) ss cmp rex.RXB (bad) (bad) ss loopne mov fiadd cmpsb stos adc (bad) fs jnp iret add (bad) cmpsl out lods and rex.B cmp movabs (bad) xchg (bad) rex.WXB (bad) adc mov mov jno lock test xchg sbb xor data16 rex.WRX ja add callq xor add test outsl adc adc test test test cmpsl sub jno cmp cmpsl add (bad) fwait movsb mov int push lods sub push xchg (bad) std jge (bad) xchg je cs mov xchg add cmc cmpsb sahf sub out jb lcall popfq push movabs in pop iret cld xor out pop xchg notb imul movabs repnz mov push push (bad) xor rex.WB mov in pop cli movsl (bad) prefetchw (bad) test jbe xor pop (bad) std shlb pushfq movabs stc movabs (bad) mov outsl out cmpsb test (bad) cmp fstps and mov rex.RB mov sysret adc mov lods mov clc mov fldenv cli outsl movabs rex.WRB (bad) jb or lret retq and scas rex.WRB (bad) xchg jne iret (bad) imul lods stos adc (bad) (bad) (bad) (bad) loopne (bad) lret cld jnp lahf cld (bad) (bad) push mov or movabs js (bad) cltd (bad) xor rex.WRXB (bad) test jo xchg add out mov pushq rex.W jbe cmp stos xlat (bad) add jo callq push ror add sub (bad) (bad) jbe je jmpq mov sbb out (bad) xchg cmp cmp add jmp and sbb adc rex.X xchg xor sbb (bad) sbb jle mov (bad) lahf rex.WRB nop mov jg sbb rex.WRXB xchg adc sub xor movabs rex.WR adc sbb xchg rex.WXB lea and mov (bad) (bad) (bad) cmp adc nop push pop andb test rex.WB cld (bad) (bad) callq cli (bad) (bad) fist fstl cwtl and (bad) loop or repnz (bad) enterq out sbb mov rex.WRB mov and rex.XB push jae (bad) jo sub xor fmuls and test xor sbb (bad) xchg andl jne mov xor loopne adc bt jmpq rex.WXB (bad) lret mov movabs cltd loope js (bad) out xor clc and cltd xor push or add (bad) movsl (bad) sbb shl fnstcw es (bad) (bad) (bad) (bad) xchg mov jg (bad) xchg shrl in int3 rex.R cmpsl add xchg nop sarb test or (bad) in or lahf xchg xchg push jbe callq jrcxz and rex.RX (bad) retq test loop push cld (bad) (bad) decl xchg pop push test (bad) (bad) fisttp cmpsl ljmp rcll fdivrs (bad) js retq cmp sbb sahf divb cmpl fsubr ficomp xchg sbb jp (bad) push pushfq add rex.WB out xchg push fldt sub jbe cld lods jp mov xchg seto mov mov and test xchg (bad) in lret jmpq je jmpq jne sub xor movsbw btr mov (bad) lock sar stc add bt stc rol mov jmpq test mov outsl sahf out test sub sbb fstl nop add retq (bad) cmpsl ja mov jns xchg mov loop out pop cmp pop retq jrcxz js cmp fdivr (bad) (bad) mov (bad) mov rex.XB adc and rex.RB xrelease add std (bad) lcall int3 xlat and fucomip mov shrb mov punpcklbw cmp (bad) cmp (bad) out jl sub mov retq jrcxz mov mov adc jb adc nop push ficom repz xor and mov fimull pop mov (bad) loopne movabs mov scas sub addr32 xor fbstp jbe cmpl add jmpq sub cmp clc stc bt pushq cmc cmp stc cmp cmp jmpq movabs stos cs je sar rex.X xchg sub (bad) xor scas pop mov leaveq and cmpsl cmpsb outsb popfq pop cmp outsb rex.WRXB (bad) (bad) cmp test in loope pop orl jno push fsubl (bad) lcall (bad) rex.WRB fwait subb shl cld (bad) lcall or (bad) cmp (bad) (bad) fbstp push rex.WR sub jrcxz mov test (bad) mov push add push xchg in insl sarl sub pop popfq test (bad) rex.WXB (bad) push test mov push add test fwait movl pop add (bad) psubusw iret sbb imul out vpcmpgtw rex.W rex.RX (bad) cli xchg adc (bad) rex.X mulb mov ss pop lea test bt pushq test cmp jmpq jae stc cmp cmc test cmp jmpq (bad) rex.WRXB ss sbb lock fild repnz xor jb imul lods out cmpsb gs add fistp push rex.XB rex.XB out rex.WXB (bad) mov pushq pop in loop jge jbe (bad) (bad) (bad) adc pop (bad) mov xchg pop loopne pushq cld (bad) (bad) jg mov nop rex.WXB (bad) (bad) fild int3 (bad) imul push lahf movsb je rex.WRX jae mov lret fisttpl and rex.B test pop sub add cmova mov rex.R rex.WR test xor rex.RB adc leaveq adc jmp imul (bad) adc sub jp rex.WXB mov (bad) test (bad) jmpq cmp cmp cmp cmc add cmc sub jmpq callq not bt add sar mov test cmpb jmpq callq sbb pop sub or (bad) and or ja fstl rex.WB lahf (bad) rex (bad) decl push jne sbb mov xor loopne mov adc mov movslq pop fdivrs (bad) (bad) (bad) fild mov cltd mov sti jmpq (bad) retq fld mov (bad) lcall pop es (bad) sti (bad) (bad) fisttp rex.WR ds rex.RXB movsl rex.WRX xor sbb jge and int mov lret xchg int fdivrl rex.WRX push push (bad) mov (bad) std test rex.WB (bad) paddusw mov (bad) pushq and repz (bad) repz data16 mov shrl add test lods int add mulb (bad) fdivl add clc cmp jmpq out lret xor mov mov (bad) ss cmp jmp fidivl (bad) lahf push in sbb xchg jmp rex.WB ja rex.WRX mov (bad) test jae loope or add fcom fldt (bad) lcall adc adc add jmpq xchg pushfq or mov sub xchg xor rex.XB mov (bad) rex.WX rex.W sti (bad) (bad) fisttp sbb sbbl lods sti (bad) fidivrl mov xchg adc mov orl add rclb pop mov and outsl ja je cmp fiaddl callq scas mov (bad) rex.WRX fs mov imul push add rex.W rex.XB rex.R pop rex.WR or movsl jg pop repz cmp rex.X xchg ljmp clc mov and cmpsl (bad) iret repnz scas fimul sbb (bad) fimull out (bad) ds fsubrl test mov mov movabs icebp negl retq incb or cltd sub test mov (bad) jnp out jrcxz (bad) lcall adc add or xchg fldl (bad) mov rex.RX jge jnp cmp fcomps test jge ja sub (bad) and (bad) (bad) fildll mov (bad) fildll imul cld jmp jb gs movsb fwait in and leaveq fisttp mov (bad) rex.WR and pop mov adc (bad) mov and add mov out insl and out mov mov movabs add cmp or jmpq jrcxz imul sbb nop pop scas sub mov (bad) ja mov sbb icebp (bad) test iret ja mov (bad) ds insl add pushq pop insl mov scas mov icebp (bad) imull scas xor retq jp (bad) retq (bad) (bad) (bad) (bad) iret scas outsb sub movabs mov xor mov or add movsb mov cmp xchg (bad) cmp xchg shrl rcl imul pushfq enterq movsb rex.X icebp (bad) pop and (bad) adc push test xchg testl cmp repz (bad) xor in loop rex.RXB and callq (bad) jmpq adc and cmp sbb add bt sub cmc bt cmp jmpq callq sbb mov setbe add xor and mov test cmp cmp cmpb jmpq sarl mov ss test cmp callq (bad) test in xor jae cmp pushq (bad) jg rex.WRB rex.W jrcxz or nop cld (bad) (bad) (bad) or cmpsl cmp lods in je sub loope cmp outsl sahf faddp (bad) xchg callq cld es mov cmp (bad) notb sbb jge fiaddl and xor addl mov xlat popq out add ja in cmp and stos jmp push push test callq enterq scas (bad) cmp rex.WB push xchg adc mov jle data16 je jnp adc or jmpq je bsf btc inc add not bts btc adc sub cmc jmpq jb clc stc cmp jmpq jmpq clc test cmp add jmpq jmpq (bad) rex.WRX sbb (bad) repz push jne add rex.WRXB mulb or (bad) mov fwait retq or xchg jge or loop mov mov (bad) and (bad) icebp jmp or adc add (bad) lcall push push (bad) pmuludq rorb cld (bad) lcall cmp (bad) (bad) fistp ja lods rex.WR jge sbb adc jp je adc xchg cmp es rex.WRX push icebp add fist and int3 lods jrcxz cs rex.X mov movslq (bad) cmc pop cmp mov iret nop rex.X adc retq gs or js ds rex.R adc pop rex.W xor sbb jg mov pushq jmpq je bsf ror btr push btr adc mov or sub lea movsbq lea jmpq cmp sub rex.WRB ja adc pop xchg (bad) movabs rex.WRX rex.W fist (bad) rex.WRB (bad) pop or cmpsl and xchg clc cmp flds (bad) repz retq pushfq fsubr xchg adc out cmpsb test adc sbb add mov mov retq fisubr (bad) xor jge lods mov out movsl ffree sbb stos jmpq out clc mov mov xor mov jg mov movabs and sbb mov js mov or mov pop fimul out pop push (bad) rex.WRX in ss out mov jo subl fstl add mov outsb xchg sub add (bad) jbe je sti leaveq xchg xor and (bad) (bad) (bad) ljmp adc adcb (bad) imul (bad) rex.RB or cltd (bad) lret cmpsl xchg in mov xor (bad) xor movabs cwtl rex.WRX ss sub xchg scas fimul loope scas rex.WRXB fisttp mov icebp icebp movabs movl sub (bad) callq jmpq jmpq test or jmpq callq jne adc jmpq sbb mov retq (bad) pop outsb sahf in and sub lret imul rex.WB xchg cmc cmp ficoml rex.WXB (bad) and jb jp xor (bad) (bad) mov (bad) (bad) (bad) fbstp repz xor stos (bad) callq rex.RX (bad) (bad) fild xor sti (bad) (bad) pushq lret lahf xchg fs pmaxsw add or add mov xlat (bad) pop std sub sub (bad) std test add push js (bad) mov (bad) cld add (bad) (bad) test (bad) (bad) add outsl es mov (bad) enterq xchg xor adc rex.WXB mov rex.RX xchg or mov cmpsl ja sbb add add add add shrd setle shrd ror mov rol bsr btr mov movzbw bt bt bt mov bsf xor mov btr cmc push rcl mov adc sub stc btc shrd sub bswap mov not lea mov mov mov xchg xchg movsbl mov jmpq lahf fbstp sbb mov movabs cltd (bad) iret (bad) lea leaveq jno (bad) push xor rex.XB punpckldq retq fcompl out xlat imul sti movsb int3 mov lock cmpsb outsl out cmpsb gs jl (bad) loop lret xchg jne cmc rex.XB xor mov or (bad) (bad) pushq (bad) (bad) lcall push je rex.WB rex.WRXB fistpll cmc rex.RB cmp or jbe (bad) cmp ja imulb jmp or add fldenv test test in adc rex.RXB int subl push jmp or (bad) mov int3 jno xlat push scas jbe cmp (bad) add je (bad) ss out scas (bad) xchg shr jmpq push (bad) rex.WR sbb rex.W rex.WXB rex.RX push (bad) xor and rex.W rex.RX data16 enterq jge push mov cmp pushq jno (bad) rcrb fcmovu pop movabs clc cmpsb xlat test adc mov jae (bad) (bad) fild sbb movsl mov push sarl (bad) jmp (bad) lcall rex (bad) (bad) fcomip xchg jrcxz shrl clc fdivs out push (bad) jmpq sub rex.RX in (bad) andq add pop movsb pop cmp movslq and test and sub loope xlat (bad) xchg and (bad) ljmp cwtl or ss and cmp in rex.R movabs loop ja stc imul cmp add jmpq mov clc bt stc mov dec mov sbb mov cmp dec jmpq add push jns je insl push (bad) jb insl gs jb rex.WB outsw add sbb cmpb jmpq cmp mov stc cmc clc test jmpq ja cmc add test or jmpq callq adc bt clc not add xor rol mov clc test bt cmp cmpb jmpq jmpq jmpq repnz ljmp sbb rex.RXB lods (bad) xchg ss fldenv (bad) sub adc movabs (bad) pop sub pushq out (bad) cmp adc jl loop lock add mov xchg clc jg jle (bad) (bad) jg xchg shrl cmpsb movsl adc repnz mov sub or psubusw xor rex.RX or mov fdivrp (bad) (bad) (bad) jbe (bad) xor (bad) (bad) jmpq add (bad) or data16 sahf xor fsubs add cmpsl pop data16 (bad) jne movslq (bad) xchg sub int icebp loope shlb andb fs (bad) fs jae xchg pop icebp icebp sub (bad) (bad) push (bad) or repnz sahf rex.WB rex.WB cs add mov add add jge xor cmpl xor add test stc jo add cmc clc cmc cmp jo jb cmp cmp jmpq je stc cmp jmpq xor sbb out rex.RB fistl jns (bad) jg stos mov mov xchg rol std or movabs sbb mov or cmpsb xor xchg rex.RX jnp iret fistpll fwait rex.WRX (bad) (bad) (bad) retq rex.XB xchg (bad) lret (bad) (bad) (bad) push rex.WXB sti (bad) (bad) fbld movabs fiadd jbe (bad) add mov (bad) cmpsb jg data16 mov sti fimul cwtl sub cmpsb data16 je cmp iret psadbw cmp add pop (bad) int jne rex.X cmp push xchg rorb xor cmpsl (bad) ljmp add movabs (bad) xchg push lahf fmuls jge (bad) rex.WR movabs sub sbb adc idivb mov adc cmp sbb xchg out cltd shll hlt mov or outsl enterq or push mov push in (bad) xchg jp clc fildl xchg push jne mov scas fldl jo (bad) xlat mov pushfq movabs (bad) or out imul loope int sar icebp (bad) repnz (bad) (bad) fisttp mov mov mov mov (bad) (bad) es cwtl addr32 mov jl xor pxor sub rex.B fs ss out jp (bad) cwtl (bad) (bad) mov sbb rex.RX mov mov pop fsubrl outsl out in cltd cld sbb fwait stos sbb and or sub xor (bad) adc movslq pop (bad) jg push (bad) mov shrl pop or loope rex (bad) (bad) scas out (bad) ds cmc mov jbe test jnp lret sbb cltd sub and pop gs retq sbb sub sub shll xor (bad) jne and (bad) xchg xor movabs xchg (bad) (bad) mov clc rex.X mov adc retq rex pop jrcxz pop xor out in cmp movabs stc adc (bad) std pop (bad) ja (bad) lock mov rcl sub shl add (bad) lock mov mov setge rol neg mov stc test test repnz jmpq add jmpq jmpq jmpq cmp sbb (bad) (bad) sub and (bad) mov mov push in rex.XB in pop cmp sub mov pop in xchg jno fmull or xchg pop in jnp ficompl enterq (bad) or mov or (bad) (bad) lcall sub (bad) xchg (bad) or vpsrlq mov jrcxz jnp in movabs jmpq rex.WRX rex.WR flds mov and jo jae jno rolb movabs callq rex.WRB xacquire clc xor pop (bad) jmp fimul movsb (bad) cmpsl sahf pop mov xor or pop lea icebp imul ficoml rex.W and (bad) fdivl (bad) pushq (bad) je (bad) (bad) jbe,pt adc fdivs adc add data16 add jnp (bad) lods sbb je jnp sub movslq (bad) mov fcomps push leaveq pop sbb jl (bad) rex.X (bad) cmc and rex.RX (bad) fnstsw lock iret lret sub scas movslq cltd orb (bad) (bad) callq (bad) pushq rcll shl andl (bad) (bad) mov adc jmp icebp rex.WB cltd mov mov pop fldcw xor (bad) in push rex.WX rex.WX repnz xor mov adc test mov test cmpsb test rex.XB cltd shrl rex.XB push out outsb mov mov (bad) jo sub jno leaveq rorl rolb (bad) mov (bad) lods sbb and mov and jae rex.WX mov outsl fistpll sbb jmp jb cmp rex (bad) rex.WRX hlt xchg sbb xchg test (bad) pop jno xchg (bad) pop es sahf sar (bad) (bad) mov pop (bad) mov callq xchg rex.B (bad) lcall outsb sti enterq (bad) fist sahf or movslq (bad) rex.W rex ja mov sub push cmp mov mov push xchg int3 fs repnz xchg jl mov sbb pushq fstl sbb lret hlt fadds push jl movsb or cmp xchg push xor (bad) add cmpsl (bad) leaveq (bad) seta (bad) mov (bad) mov (bad) (bad) (bad) xchg push adc test cmc (bad) int3 scas sbb jae repnz fs xor cmp sub rex mov or iret nop sbb xchg fsts jg in (bad) pop jle xchg rex outsb mov adc (bad) addr32 (bad) lcall movabs or lret or movsb mov lret add rex.R (bad) mov xor sub sbb mov mov jle in int3 add (bad) iret and (bad) sti (bad) (bad) fistpll cmp (bad) loop rex.WRXB icebp xchg sbb sub cmc imul or jae repnz outsl sahf out xchg push add adc and mov push scas shrl pop mov outsb (bad) int3 or adc push xchg ficom retq sbbb outsb fcompl fadd movslq mov imul xchg jmpq jmpq adc or xchg rex.WRXB or shr lock mov mov hlt xor repnz sub lock mov out int3 mov in mov out (bad) in push rcrb out push mov (bad) rorb mov mov rcl std lock mov xchg push jle (bad) hlt movabs sahf lock cmp mov hlt lock in mov fbstp xlat sarb in add push test rex.W addr32 mov test cmp movabs movsb jb (bad) (bad) rclb (bad) hlt cwtl std hlt (bad) mov in in lock pop nop cltd push xchg (bad) hlt in in (bad) std rolb test rex.W mov mov cmpsl xor or rol xchg out (bad) jl add jb rolb (bad) js push xchg data16 lock sub mov lock xor hlt (bad) mov mov je rex.RB hlt jo adc hlt mov xchg hlt jg lock div hlt mov jl mov xchg pushq in rex.WRXB lock mov hlt (bad) lock mov out fs cmpsb in xchg rcl xchg (bad) hlt int3 (bad) cmp es mov shlb xchg in ror in push std sarb hlt jg push push rorb sbb mov (bad) hlt mov paddb xor (bad) adc xchg jno (bad) adc movsl in mov xchg idiv or xlat repz out (bad) add mul push (bad) sarb repz mov rolb adc jrcxz,pn data16 paddb (bad) xlat mov add repz xor hlt scas mov hlt and xchg lock mov rex.W movsl mov add adc rolb fcomip jg mov (bad) xor xlat adc mov rex.R mov lock (bad) rcl xor hlt ja mov mov lock mov jg lock add retq test xchg in in lock (bad) jbe enterq (bad) mov hlt or add fwait jbe (bad) hlt or push hlt rex.W lock hlt out lock idivb scas or mov shl stos data16 push (bad) fnop (bad) lret sarb (bad) (bad) jg xchg rclb lock repz nop cld jg lock mov hlt (bad) lahf (bad) xchg (bad) (bad) jbe adcb rex.WR lock notb hlt repnz pop out adc rex.WX xchg lods xor rex.RXB (bad) mov mov mov hlt jb xlat (bad) mov rex.W lock mov xchg (bad) jnp mov lods (bad) negl enterq (bad) lock jle push rclb push hlt (bad) retq (bad) ss rex.R sbb rex.WX mov rolb mov mov (bad) hlt rex.W lock add hlt jno lock rex.XB xor (bad) shlb psubusb xor jbe mov jg lock mov hlt sbb (bad) hlt mov mov hlt rex.W imul loope out enterq lock outsl push add out jae lock mov hlt sbbb add (bad) jl es jb (bad) lock push mov jb (bad) (bad) xor (bad) cmc mov rol mulb test repnz xchg mov rcrb test movsl test xor movabs jl rolb in hlt (bad) movabs (bad) (bad) sarb (bad) (bad) (bad) xor jmp (bad) sar rcrb loop adc (bad) fnop mov test (bad) rolb fimul adc rolb (bad) (bad) in cld hlt and ja (bad) hlt bnd xchg fnop rex add hlt imul mov push repnz jne rex.WX mov div (bad) rex.WRX add cmpsb cmc mov rolb out (bad) push repnz add cmc cmc xchg hlt jg lock add (bad) out rolb mov jno movsl add push ror xor ss mov mulb in mov rorb xor add rex.RXB xchg adc loop in test rex.WRXB mov retq (bad) (bad) rcr mov mov sbb lock add cli loope je (bad) hlt (bad) mov hlt jg lock fnop gs retq cmp mov mov out in cmc mov idivb cmc xor rex.WRB add (bad) (bad) (bad) data16 sarb jrcxz xchg hlt sahf hlt int3 xchg hlt hlt pop mov shrb (bad) ja,pn push adc and outsb hlt test mov rex.WXB idiv (bad) ror (bad) in (bad) xchg push pushq xor or jne jg sarb sbb jbe hlt sbb pop (bad) (bad) paddb or xchg mov negl (bad) adc (bad) mov cmpsb (bad) paddb pop lock mulb lock push (bad) test div rex.W xchg add hlt xchg loope (bad) mov hlt sbb iret (bad) jb rorb add popq xchg rex.X push (bad) (bad) (bad) sarb (bad) in xchg lock (bad) jb rex.RXB lock jl (bad) lock mov mov lock mov mov cmp rex.W lock hlt je ss paddb xor xchg adc xchg (bad) je hlt cld jrcxz xchg paddb mov (bad) sbb int3 jge,pn adc fcmovnu lock retq (bad) lock (bad) int3 sub rorb jo cwtl xlat mov gs mov and mov mov jl and adc hlt add mov mov loop (bad) (bad) xor hlt pop sub (bad) mov rex.W rex.B lock mov or sbb push (bad) sar (bad) (bad) adc (bad) rorb test xchg test (bad) in xchg add and (bad) or shlb xchg rolb hlt cld add mov xor hlt mov lock rex.W rex.R lock hlt mov hlt rex.W lock add hlt mov std rex.RXB (bad) adc sbb lock xor mov xlat push xchg shrb lret in jg rcr lock div mov lock mov hlt mov hlt sbb pop divb lock xlat shlb loope push mov mov test hlt push (bad) repz shr (bad) in rcrb in repnz (bad) rorb test in sarb lret mov lock repz rolb out jg lock repz or ja (bad) lods (bad) fildll xlat shrb out outsb lock (bad) mov rex.W data16 mov add jo push xchg (bad) hlt jns hlt (bad) (bad) push (bad) rcrb test addr32 adc xchg out adc (bad) ror (bad) jo movabs (bad) repnz mov fs (bad) and adc in lock mov insb (bad) pop jne mov rex.W push xchg mov (bad) in xchg fnop adc (bad) mov ficom jae (bad) out rolb push push rcrb xchg addr32 sarb mov shr xor (bad) mov cmp xchg sub jg rcrb cmc rex.WX (bad) mov (bad) sbb vunpckhps fst mov sub jg lock mov mov lock mov jg lock mov hlt rex.B cld hlt cld loope mov (bad) hlt fwait or lea shl add shlb insb imul rol rex.RX lock fcomip or hlt mov mov hlt sahf mov in xchg rorb xchg mov push sarb mov push mov loop push in lock hlt test cli (bad) out sarb test mov mov hlt in mov sarb (bad) hlt movsb lods loope xchg mov hlt xchg rex.R lock mov hlt (bad) add mov add cmp hlt jg lock repnz rex.RB lock pushfq or out xchg rclb imul hlt out push push shrb mov xor lods mov mov vunpcklps je or push xchg push rolb xorb (bad) (bad) jl (bad) retq (bad) cmpsb out addr32 push in push ror jg hlt (bad) push (bad) xchg (bad) xor push adc mov pushq shrb mov movsl movslq movslq (bad) mov mov xchg (bad) (bad) rex.W cmc (bad) push push sarb xor rcrb or mov rex.XB idiv not jg lock div fldt (bad) (bad) mov xchg lock mov xchg enterq ds cmp mov push xchg hlt push jae mov insl sbb mov shr dec cmpsb repnz (bad) out std sti hlt cmpsb in (bad) rcl repz out fnop gs hlt rex.W mov mov and out hlt (bad) mov hlt push scas lock mov hlt cmp ja mov mov lock (bad) mov (bad) cmp add callq shlb xchg rolb and test hlt cmpsl jrcxz mulb paddb xchg sbb add hlt (bad) in gs (bad) mov rcr jrcxz movsb (bad) wbinvd hlt loopne ja mov mov lock incl xchg and rolb cld push shrb hlt jg (bad) (bad) xor (bad) rcrb or scas out notb rex.WRX lock jno push out shl xchg and (bad) sarb lock loope rex.R hlt xchg rex.R lock (bad) hlt push (bad) lock jle rex.X lock mov mov lock lock mov (bad) or addl (bad) lock (bad) jbe idivl in xlat hlt jnp ja cmp movsb ja scas data16 xchg rcrb jle xchg sarb and sbb mov (bad) rolb data16 jg rcrb hlt mov not and (bad) mov rex.W rex.WRX lock hlt fucom lock mov testb xchg sbb shl pop je rex.RX shrb hlt repnz push (bad) xlat xchg int3 hlt fs mov mulb adc rclb hlt mov rex.WRXB mov rex.WRX (bad) mov rex.RXB xchg addr32 rorb (bad) mov adc xchg (bad) lock hlt push (bad) mov (bad) rex.W rex.R mov (bad) add xchg mov push rclb xchg push sarb (bad) mov (bad) cmpsb (bad) push (bad) rclb adc (bad) add mov mov out stc or add cmpsb (bad) fcmovbe jnp (bad) sbb or xchg (bad) hlt cmp (bad) out mov rol mov test xchg (bad) xor xchg add pop (bad) mov push push fcmovbe (bad) lret mov shlb xchg rex.WX repz rex.WR rex.RX hlt repnz hlt (bad) loope divb (bad) testl mov xchg shlb hlt xor ja mov repnz scas pop data16 adc test lock (bad) mov stos mull movabs xchg xchg mov (bad) adc cli xchg repnz test hlt push push lock (bad) jle icebp mov (bad) add (bad) mov fnop in (bad) mov cwtl (bad) xor test jg shlb xchg rolb xchg rorb mov lock enterq lock push rolb out hlt out rex.RX pop sub jrcxz out sarb iret push in adc sub hlt loop scas (bad) jno (bad) xor hlt rex.B lock hlt (bad) mov hlt pop lock hlt rex test rorb out movsl add hlt sbb xchg mov hlt pushfq rex.WX xchg (bad) repz fs hlt rex.W lock mov cld repz xchg (bad) adc xchg scas lock (bad) div shl mov xchg or xchg xchg mov orl addr32 lock sbb push push rcr (bad) mul (bad) in fdivp xchg in (bad) rorb mov rcrb xchg ror icebp push out or rex.WR xchg in add mov mov shrb cmpsb in (bad) shlb hlt cmp jb jae lock adc (bad) sarb scas in (bad) (bad) jo shl mov (bad) hlt vpmuludq pop fnop es hlt rex.W xchg add hlt add mov repnz mov push (bad) adc jns lock enterq lock add mov (bad) xchg (bad) mov addr32 rolb push shrb data16 (bad) scas sarb (bad) fisubl movabs callq push fnop adc xchg out rclb xor mov rcrb jmp int3 shrb jne xor pushfq insl jg push xchg rol imul lret jbe (bad) rolb (bad) hlt push out xchg mov hlt mov xchg mov add push add rclb repz or std stos lock (bad) shlb movabs in mov xchg rolb push push shlb rex.WX push rcl and sarb or push rorb hlt (bad) movsl test std (bad) (bad) or insb rex.R in mov div mov (bad) (bad) cld loopne jp scas rolb addr32 loope (bad) hlt in push fst (bad) xor (bad) add out retq (bad) mov rex.W rex.RX lock add (bad) notb push hlt rex.W hlt cmpsb rex.W rorb out mov mov mov sbb hlt hlt mov (bad) rcrb hlt mov lock mov ja mov shrb hlt cmp rorb in xlat out sarl lods hlt jle adc adc lock idivl lock mov out fdiv jbe mov (bad) ss lock mov loope add (bad) hlt (bad) shrb hlt popfq lock mov stos rex.WB lock addr32 movabs (bad) rex.WXB pop in movsl mov repnz shlb fnop not mov rex.WR (bad) lret sarb mov shlb stc loope xchg (bad) hlt sbb rolb push mov mov (bad) ja rorb movabs nop (bad) xchg in (bad) jo icebp mov mov (bad) jb shlb fcmovbe add rex.W mov xchg lret rex.RX (bad) rorb rex.W xlat rorb testl (bad) (bad) repnz mov hlt jle hlt xchg (bad) hlt mov sbb mov hlt jg lock mov adc out je hlt (bad) jp (bad) hlt mov sbb push add out mov xchg rorb (bad) in adc lock or sti lock mov jg lock (bad) notb add jne paddb xchg lock mov repnz sti (bad) push mov hlt xor hlt lods lock mov mov lock (bad) mov (bad) callq mov shrb adc mov (bad) test adc mov rclb lock hlt xchg lock mov out jrcxz add jae rex.RB mov sub rex.W test lock push jo rcll iret xor rorb mov mov (bad) hlt rex.W lock mov xlat std xchg rcrb scas cmpsl xchg push stos lret cmp retq repz lock xchg repnz jmpq mov fist out push lock mov mov (bad) hlt xor mov rclb hlt (bad) leaveq mov out ror lret xchg jg lock xchg hlt mov lock mov (bad) jg hlt jg lock hlt scas mov movsl mov enterq cmc mov rclb push mov xchg hlt jg lock mov hlt mov xchg ror ja addr32 mov lock mov xor mov or xchg in (bad) sarb adc push std push rolb adc mov push rolb repz gs (bad) sarb xchg (bad) cwtl rcrb xchg in adc (bad) xor jne shlb rex.WXB mov movabs hlt xor (bad) stc lock in hlt repnz pop add adc repz mov xlat test adc mov rclb push hlt rex.W lock add hlt jbe (bad) xchg (bad) paddb popfq lock xchg add sbb test push (bad) sar adc pushq callq (bad) jp rex.RX mov rex.W xchg jns hlt mov lock (bad) mov int3 or cmp add adc rex.WX rex.WRB mov pop lock pushq mov ss repnz sub sbb (bad) mov cmc push callq mov mov add (bad) repz xor mov rorb (bad) hlt xchg (bad) shr out (bad) in rorb sbb rex.RXB loop hlt push mov hlt xor ja mov (bad) mov (bad) mov (bad) xor cs rex.RB rcr (bad) jg repz shlb cmp (bad) rex.WR test addr32 and hlt out mov fnop xchg (bad) mov xchg fidiv cmp (bad) mov jnp rolb in push push shlb jg (bad) jg sarb fs jnp shr xchg inc rolb sarb lock rorb (bad) (bad) mov hlt mov push ror stos rex test xchg (bad) hlt (bad) movsb cmpsb in hlt sbb mov jp in rorb or xor jmpq mov rex.WRX hlt and mov jl (bad) (bad) std test imul rex.RB (bad) ss xchg hlt jo xchg in in fcoml sarb (bad) rcl in hlt test mov (bad) mov hlt xchg in (bad) rcrb orl repz (bad) jle mov mov push lock notb jp mov mov rcr rex.WRB out in pushq mov repz shrb cmpsb shlb (bad) rcr data16 xchg rol retq (bad) (bad) mov mov insl pop scas adc mov (bad) mov adcb mov rolb rex.WRB (bad) rex.RXB repz (bad) rcrb fs cmp rex.XB lock (bad) mul rex.RX rex.R (bad) repnz (bad) data16 (bad) std rcr (bad) hlt jg mov shlb adc jg rorb xchg push rex.RX int ja push shrb push movsl shlb scas hlt (bad) mov hlt test data16 fnop or divl mov mov (bad) mov jrcxz out mov rclb hlt fs in adc cmp fsts jnp shlb rex.WX data16 test (bad) fs hlt cwtl sub mov rcrb rcl xchg mov rcl int mov (bad) sarb lock mov out adc (bad) repnz shrb push in vmovlhps mov (bad) xor adc mov in (bad) int3 rolb mov mov jne stos lods lret cmpsl (bad) mov rex.RX popfq lock rep rolb data16 jnp rclb in popfq jae xor hlt out cltd xorb rex.WRB push rex.WRB rorb in mov shlb adc add rcrb rex.W lock xchg jne loopne mov rolb lock rex.RXB add out xchg hlt push (bad) and hlt mov xrelease mov rolb (bad) (bad) icebp in xchg div gs push out hlt jg lock (bad) (bad) jg lock add sub incl rcr pop mov push (bad) (bad) sarb cmpsb mov sar pop xchg jnp rclb in push incl lret scas in rex.RXB cmp shlb cmpb mov jnp or xor rex.B fs push add sar (bad) (bad) out rorb cmp test repnz fnop es mov hlt int3 cmp out xchg (bad) (bad) (bad) mov hlt cmp xor mov rclb and out rex.WR clc hlt add (bad) std cmc shrb sbb cltd hlt mov rex.RX rolb lock out mov rcrb mov rex.W lock mov add stos xchg iret rcrb jno retq gs je hlt in mov mov (bad) hlt gs xor stos mov (bad) cwtl ror mov rcl mov (bad) fild in rex.RX (bad) hlt in (bad) mov out rcr pushfq (bad) rex.WX rex.W (bad) mov add adc rolb shlb push div rex.WRXB xchg shl cmc out imul gs sub rex.WX rex cwtl rol sub hlt in and (bad) jb xchg shrb cmpsb std rcl sbb ja mov (bad) cmc jo xchg hlt cmpps or (bad) adc sarb push xchg (bad) jo or in out movsb fnop pop (bad) mov push sbb fnstcw rolb std in mov fwait rex.WR test shlb mov hlt push hlt rclb hlt jg lock push add adc (bad) in xchg rcrb lock push mulb xchg shr jmp hlt and es (bad) (bad) data16 (bad) hlt and hlt push xchg xlat std (bad) mov hlt xor fcomi jg mov sarb lock mov (bad) cmp jbe (bad) out shr mov rex.WX sbb (bad) mov jg mov test out rcl stos in mov rex.W hlt and ds mov sarb icebp hlt test rcl movslq mov shlb push rex.RX xchg pop test adc idivb hlt (bad) mov hlt (bad) push xchg (bad) idivl imul mov (bad) in jp (bad) cmc push jbe loope rex.RX andb xchg cmp iret xor jl sub adc jl and (bad) loope cmc mov rcrb sarb shl je hlt icebp sub rcl (bad) ss hlt out pmuludq cmc rcr jrcxz ss shlb jg push push sarb (bad) xor mov rex.WRXB rex.WRB ror sbb mov sti xor repnz push ss out cmp push out push (bad) mov xchg mov repnz adc (bad) repz fs fnop cmpsb (bad) not hlt (bad) iret shl push hlt rolb (bad) repz lock add xchg xchg repz xchg lea cmp push test jnp mul ja sarb xchg movabs shlb rcrb (bad) xor lret adc std scas rex.WRB xor cmp jl cmpsb mov add (bad) lret add jmpq in push je rclb sahf hlt adc jbe rex xchg xor push out repnz out shrb (bad) pop xchg push (bad) cmpsl (bad) ror pushq rex.X ss movsb push not mov jnp rorb in and and push push push repnz lock push shlb mov (bad) jo shlb (bad) (bad) jbe (bad) hlt (bad) mov rorb loope add pop out cmc shrb jle add xchg (bad) jle xchg mov sbb int test rclb jp lock hlt mov test cmpsb ror repz out shlb xor (bad) (bad) in jge ss jne lea test jo outsb push mov shlb (bad) push clc hlt cmpsb icebp sub xchg rex.WR shrb mov shr pushq in fnop lret gs hlt data16 hlt rex lock add pop (bad) (bad) cmpsb callq retq mov rolb (bad) xchg or test rclb lock mov mov (bad) icebp data16 rol push (bad) callq rex.RX push shlb out test xchg xor jnp rcrb in mul rex.WRB rex.R cmp xchg push mov fisubr lret sub push out mov sarb (bad) hlt test rex.XB mov xchg rcrb (bad) notl (bad) jnp rorb and (bad) mov lock (bad) clc xor std adc rex.W cmpsb test fdivrl movb in rcrb in xchg add adc movabs xchg jg (bad) shlb xchg and shrb rex.R (bad) mov hlt sub or hlt int lock xchg xchg std shlb push hlt mov lock mov adcl rolb xchg (bad) xchg rclb std shl xlat mov pop lock cmc hlt (bad) add hlt pushq push repnz test data16 mov rcl in mull loope test in (bad) test mov rclb repz hlt (bad) in rex.RXB repz shlb lock push hlt out loope add mov rex.W ds mov push std (bad) rolb adc stos (bad) rex.W test and push int in int3 sahf mov hlt hlt lock (bad) ja enterq lock mov test (bad) mov lock (bad) hlt iret int push rex.WRB hlt mov lock mov jl shlb or (bad) rclb in push lock jbe mov (bad) mov mov xchg (bad) jrcxz data16 pop mov rorb in idiv xchg shlb rex.WRB mov mov xchg mov mov (bad) (bad) repnz push scas lock mov hlt cmpsb lock mov mov lock mov mov push mov mov push push (bad) je jrcxz (bad) shlb (bad) xchg test jbe jl movsl data16 mov lock hlt sub lock mov movabs cwtl lock insb hlt jg lock scas lock jl std lock mov xchg popfq or xchg push repnz lea mov mov xchg mov hlt movb jp lock push push rolb mov (bad) in or test push hlt rex.W (bad) add hlt jmp jns (bad) paddb lahf lock mov mov lock mov (bad) (bad) adc xor mov rorb lret (bad) rcrb shlb repnz test mov push ror iret pop push xchg rclb push push pop hlt ja mov mov lock mov (bad) (bad) push out rex.RX (bad) stc rolb jmpq rolb in (bad) lock (bad) mov rex.WR lock out rorb rex.B cld not jg lock hlt pushq (bad) xlat xor cmc mov imull pushq test hlt cmp lock (bad) div xor jnp shlb (bad) jae lock pop sub hlt out lock xlat repnz icebp rex.R repnz sub (bad) scas rclb jg lock repnz (bad) mov xchg repz xchg rex.R lock es (bad) mov shrb push (bad) paddb pop lock mov mov lock mov mov hlt jnp lods xor testb and in lock rorb syscall (bad) movsl addr32 je mov xlat xchg push scas shl hlt mov (bad) mov fnop mov push hlt sbb enterq lock mov add lods cld hlt mov mov xlat xor stos fs sarb mov rex.WRB (bad) in rex.R rex.RB hlt mov xchg shrb hlt sbb mov hlt sub (bad) in fcomi xchg mov shr rex.RX hlt mov lock mov rolb xor add lods test wbinvd hlt (bad) mov out pop lock cmc mov shrb hlt push jg hlt xor scas lock in (bad) jrcxz lock (bad) hlt sbb mov callq mov rex.W (bad) add hlt and hlt (bad) mov hlt out mov ja (bad) rcr movsb or ja rex.RX mov rclb retq rex.RX lock add hlt cmp lock movabs mov (bad) sarb lock repnz loop lock jl sahf lock add pushfq hlt (bad) xchg hlt test cwtl gs adc hlt mov xchg test lret lret cwtl rolb pop xchg in (bad) loope in (bad) hlt sbb hlt fbstp int3 cmc pop cmc fwait xchg hlt rex.W mov gs hlt imul not test and prefetch or push (bad) adc rex.RXB mov (bad) repnz jbe hlt mov lock mov rex.W hlt push add hlt adc lock mov hlt (bad) rex.WR lock mov mov je add lock push hlt out jo (bad) (bad) mov rex.WR lock rorb in hlt out loopne (bad) (bad) adc hlt nop rex.W lock repz rex.W xchg add hlt (bad) pushq mov lock mov and adc leaveq push xlat jo insl in push enterq xchg rolb sarb lock (bad) div mov scas xor mov jg lock repnz jno lock mov hlt jg (bad) rorb clc hlt xchg mov push shlb (bad) std xchg ror gs hlt (bad) hlt rex.R cmp ja mov mov lock mov jg lock jbe push rex.RX (bad) rclb rorb xchg subl sbb rex.WX sarb in shlb (bad) (bad) in (bad) rolb cmp adc popfq retq scas rex.RX xchg rolb hlt callq mov (bad) sbb pushq sar mov (bad) int3 rex.WB repz sub (bad) in (bad) shlb xchg mov push lock push rex.RXB out rorb add mov sbb (bad) mov mov mov pop hlt or es shl in test xlat rcrb (bad) fcomip mov fnop add rex.RX rcl xchg mov es adc mov shrb icebp mov rex.W jnp cmpsb push repz rorb jae in mov rolb jb mov hlt rex push mov rclb andb rex.WRXB data16 mov fnop xchg retq xchg repnz mov push movsb rex.XB and push xchg repnz fs fs ds (bad) sbb jns cmpsb push rex.RB mov push fnop mov (bad) out rclb in ss std ror (bad) nop in (bad) rclb in in jae lock (bad) (bad) ja mov imul lret (bad) mov (bad) rolb scas xchg add icebp push add (bad) rclb fs mov (bad) (bad) (bad) paddb (bad) lock push (bad) jae lock div mov repz ror addr32 (bad) mov add pop cli xlat mov (bad) repnz mov hlt fmuls out (bad) rex.WRB fs (bad) (bad) xor rex.WRB and rclb fidivr cmp fidivl (bad) in fcom data16 (bad) std shlb xor add hlt jg mov (bad) jo (bad) in add (bad) jp (bad) cmpsl xor jbe iret rex.WRX cs (bad) rclb rex.WX movsb imul rcrb (bad) rex.WX sbb sbb out retq int in int3 cmc mov (bad) imull hlt in add in hlt (bad) fs hlt jo in hlt lret xchg in hlt (bad) jle adc cmpsb jrcxz or add leaveq rex.R hlt gs hlt in in ss hlt (bad) and hlt jo in hlt lret stos in xchg sti sub mov jrcxz,pn or lods int3 xor (bad) hlt rex.R hlt jmp xchg imull push (bad) (bad) jne (bad) hlt push cmp mov (bad) cs mov mov sahf lock xchg xor hlt rex.RX (bad) int3 jns in hlt sbb hlt rex.WB rclb es (bad) (bad) rex.WRB jb mov push shlb cltd xchg jno shrb and repz (bad) rex.WRX adc xchg fnop ffree test push rolb push shrb lock in rclb mov (bad) repz sbb out iret push rex.WR shlb adc repnz data16 fsub (bad) notb in push callq rcrb loop (bad) (bad) repz or in shlb mov push mov jmp push mov push lock (bad) repz mov push stos mov rcl out lock mov shlb orl mov std cld (bad) lock mov mov stc mov xchg jnp shlb rolb lock xchg lock add hlt and cmp shlb (bad) icebp or repz icebp sub jo sbb jbe fst jl rex.WRXB rex.R gs (bad) (bad) jno cmc push divb in adc pop out (bad) repnz movsb xor adc xor in repnz lock hlt jg lock mov hlt (bad) sti test xchg hlt jg lock mov (bad) in jmp jg shlb or mov (bad) lret scas in xchg sti (bad) adc (bad) jle or or rex.R out out rex lock (bad) mov rex.W ja mov repz mov ss (bad) (bad) fs adc mov and adc (bad) jmpq movabs jmpq jne movzbw movzbw mov jmpq bt stc repnz jmpq repnz mov cmpsl data16 lods pop cld or fisubrl out jle in sbb adc out scas sub jns rolb movabs adc fldenv lret test cmp callq sub cmp (bad) cmc xor cs std (bad) lcall test (bad) (bad) fild rex.XB rex.WRB jae movabs xor xchg sbb fisttpll xor pop adc xchg stos rex.R mov stos stos movslq popfq xor sbb (bad) rex.WRXB rex.WRXB popfq rcrl xchg (bad) rorl test lret rex.X (bad) (bad) retq insl or in jmp pop cltd or cmp cmpsb (bad) or (bad) (bad) lods xor in cmp mov in cmp (bad) mov jo (bad) sbb fildll rex.WXB adc sub rex.WB mov in lahf in cmp lock and sub fldenv (bad) sbb (bad) (bad) (bad) rex.R xor xchg pop sub shrl sahf retq mov pop rex.WXB (bad) stc rex.WX roll je insb repz (bad) lcall rex.W (bad) (bad) fistp mov out rex.W xchg and leaveq loopne jno push push xchg repz repnz or xchg pop fmul enterq and jae lret loop mov (bad) callq xchg addr32 (bad) sbb test out int xchg pop sub push push mov jnp fmuls jns sub mov fistpl mov mov addr32 cli pushq adc lods jl mov rex.W (bad) xlat imulb (bad) (bad) (bad) outsb (bad) rex.RXB (bad) pop jle (bad) mov or clc and loopne cmp xchg cmp (bad) (bad) (bad) cmc (bad) sub callq jmpq mov cld (bad) (bad) lcall test adc (bad) (bad) fist (bad) rex.RX shrl rex.B rex.WRB mov sub add jb js push cmp jge movsb mov fmuls mov and xor icebp movabs push cs notb fwait sub (bad) and lahf (bad) (bad) mov cs in cli icebp (bad) rex.RXB push movsl cmp pushq (bad) (bad) pop mov push xchg sub sub mov cld rex.XB cmp rex.X (bad) or mov in (bad) ficoml shlb test stc fadds movsl adcl fcomps mov out push (bad) out (bad) mov or jb add scas pop xchg cmp xchg sub iret (bad) xchg xor (bad) pushq clc cmc (bad) lods (bad) jg (bad) int3 pop jle (bad) lcall (bad) adc xchg mov popfq add xlat pop adc (bad) (bad) adcb (bad) (bad) mov (bad) sti (bad) (bad) fucomip mov cmp adc xchg lods (bad) movabs imul rex.WRX sub scas decl (bad) rcrl (bad) push mov mov mov loop movslq jne shll (bad) add lretw jae mov imul pop (bad) (bad) add and xchg jo sub rex.XB jno push xchg lods or and (bad) (bad) callq jmpq jmpq xor setns mov jmpq cmc xor test repnz jmpq cmpb jmpq movzbw and sub shrd rcr lea mov sar add sar add cmc neg mov test cmc stc test jmpq movslq nop cli fcomps mov cmc (bad) xor (bad) rex.WB sbb (bad) (bad) cli adc loopne xchg cmc push je add push mov (bad) scas rex.RX rex.R test (bad) int3 adc fidivl clc adc mov or or or (bad) lcall fidivrl nop and mov sahf test adc adc adc in push pminsw rex.RXB mov add push xchg rex.WRB (bad) test xchg rorb movabs movsb imul cmp mov movsl jrcxz repnz jo gs or (bad) cld sub sahf out cmp imul sbb mov (bad) mov or push mov sbb jmp stc (bad) jg xchg stc add mov rex stos or sar test xor mov movzbw lea mov pop jmpq je bt add clc cmp jmpq pop sbb movabs xor iret (bad) ficomp pop imul rex.X enterq rcrl js stos jle,pn rex.WRB rex.W pop jb or xchg rex.R insb (bad) fdivl sbb adc (bad) lcall test fisubr and mov icebp jmpq rex.WRXB repz (bad) mov (bad) (bad) (bad) jo hlt rex.R (bad) (bad) fisttp jrcxz nop loopne sub rex.W (bad) jns adc lods mov scas movsl fs repnz insb mov leaveq and (bad) push (bad) or (bad) xor push movslq (bad) rex.WRX movslq xor lods xchg fstpl mov and gs xchg ja fidiv or mov adc movabs jrcxz movabs sub in insb mov rex.WRB fwait xor (bad) rex.X imul mov sbb test pushfq cli push bt movb cmc test jmpq inc cmp cmc xor stc cmp not stc cmc sub jmpq jne bsr data16 icebp add lods loope rcr mov cmp cmp jmpq stos jmpq jmpq jne inc rcr bsr mov mov not movsbl sub add add mov jmpq add rex.R gs jb jns outsb jbe jb outsb insl outsb je insb outsl movslq clc cmc movb test test jmpq jmpq push lock std std mov xchg pushq mov retq jb out retq sbb mov (bad) cmc ss callq js in fmuls retq (bad) push pop (bad) add jmpq xchg es test sbb mov rex.RX movslq xchg (bad) scas rex.R add repnz rex.WR jmp sbb rex.RX clc jmpq jae cmp clc mov not rcr test cmc add not not jmpq clc pop cmc pop fstpl mov repnz sub rex.RX mov rex.WRXB ss mov (bad) xchg add xchg (bad) jle in xchg ror (bad) lods (bad) xlat jle (bad) fnsave outsl (bad) std std (bad) lcall sbb (bad) insb (bad) or adc (bad) jmpq cli (bad) (bad) (bad) (bad) rex.R mov (bad) mov fidiv cmp adc popfq int3 (bad) xchg fdivrl mov pop or mov fmuls divb leaveq fxch xor (bad) lahf out cmp sahf je (bad) retq xchg lret (bad) cld (bad) adc jb scas fsts jae rex.B pmaxsw icebp sub rex.WRXB rex.WRB fwait sub rex.WB ss cmp icebp mov fisttp rex.RXB gs gs imul jp sbb (bad) in pop insb xchg pushq movabs add (bad) cmp push ja mov stc mov cli mov gs retq nop mov test imul pushfq (bad) (bad) (bad) ffreep (bad) (bad) add push ss xchg je mov shlb stc insb mov or (bad) (bad) sub (bad) hlt pop hlt sbb (bad) pop (bad) retq movabs ds gs (bad) xlat std (bad) lcall pushfq sub sub or sti fistpll movabs mov jne cmp jno (bad) not rex.WRB fimull shlb pop mov mov and xchg rex.RX (bad) fdivrl and rcl or rex.WR push (bad) (bad) in rex.RB mov xchg mov mov mov jb rorl mov sub jb lea xor xchg (bad) outsl cmovbe and test (bad) lret movsb jbe push (bad) (bad) lcall jmp jb movabs lahf int3 sub sub mov xor xor loope leaveq cld (bad) lcall jge jae (bad) sti (bad) (bad) fisttp mov mov (bad) movabs mov xor mov fnsave (bad) ds scas xchg (bad) jg jp cmp (bad) (bad) cmp xchg push nop (bad) cmpsb pop mov adc outsl (bad) cmc pop movsb sub xchg adc pop in sbb movsl addl movabs mov xor (bad) xchg jne ja scas lea (bad) jmpq sub cmp cmc test bt cmp jmpq ja cmc imul stc bt add jmpq jmpq jmpq (bad) (bad) push mov rex.RX rex.RX and mov sar jns mov xchg hlt mov repnz and jns mov rex.WX lahf fucomip (bad) mov jae roll sub out stos (bad) mov movabs test rex movslq (bad) (bad) (bad) lcall cmpsb fcoml movsl clc std (bad) (bad) (bad) cmp jl and (bad) cli retq outsb (bad) mov pop and xchg repnz pop sub xchg retq (bad) fimull sub mov jg sub mov (bad) (bad) hlt cmp stos rex.RXB lods mov rex rclb xchg and lahf jg in xchg sbb pushq insb hlt rex.WXB fwait push mov jrcxz jp clc nop pop in xchg or sbb xchg (bad) and rex.B ds xor clc stc repnz jmpq retq add sbb and movslq rex.WR sbb loope mov stc adc adc rex.WR mov rex.WXB sahf push (bad) int3 cmp mov stos add push sahf jle rex.WRXB xchg (bad) (bad) fild xor fwait (bad) push std fsubrl sbb cmp push adc sahf push sti fs sub mov mov (bad) mov mov pushq lahf rex.WX mov cld (bad) (bad) jg pop mov (bad) fbld push jne sub sbb rex.WRX fdivs jmp (bad) sub mov jbe push or (bad) rex.WRXB add out rex.X shll cmc mov or fstpt jp rex callq jbe addl vcvtdq2ps jp andl jmpq clc jmpq jmpq jmpq jne cmc bt clc clc movb jmpq test cmpb jmpq inc bt cmp jns xor test bt test not jmpq add clc cmc stc mov and mov clc cmc cmp jmpq jmpq add rex.XB rex.XB (bad) je rex.WB jae (bad) outsb movslq jmpq xchg jns and mov decl notb cmp test pop (bad) mov (bad) fwait movabs mov xor sub (bad) movabs mov cld push jae cli mov pop movabs cmp pop rex.WRX cmp (bad) (bad) mov jmpq xorl cld (bad) (bad) fcomip movsl in test sbb andl sti jns movabs rex.RX repnz scas fnop jbe out fdivs ficomp add jns or add jb ficomp or xchg cld mov popfq (bad) (bad) rex.RX cmp lea cmp cmp cmc xor lret and jle mov cmpsb test enterq andb movabs lea jmpq jae adc xadd stc movsbw mov lea lea mov movzbl rol xor add mov cmc cmc cmp jmpq jne btc mov bsr rcl jmpq callq jmpq jmpq or js sbb movabs rex.R fwait add js (bad) mov sbb xchg int3 mov mov movabs add mov jrcxz fildl (bad) (bad) lcall or xchg rex.WRB mov lea lahf sbb xchg (bad) (bad) pop (bad) mov testb cmp rcrl clc cs (bad) (bad) jg enterq sti (bad) (bad) (bad) movsb fsts (bad) (bad) mov outsl pop cltd js cmp rcrl (bad) mov (bad) cmp or jo sbb or rex.WB outsb imulb and (bad) (bad) rcrb pop adc pushq and pop mov jmpq rex rex.RX sbb movabs maxps mov movslq testl rex.W xchg (bad) inc enterq sti movsbl bsr add lea mov ror seto rol neg mov stc stc repnz jmpq jmpq jmpq jmpq rex.RXB xor sbb int3 (bad) ja and cltd xor (bad) push jp mov xchg cmp mull jbe sbb insb in movabs repnz je pushq test cld (bad) (bad) jmpq xchg in lret and (bad) pop hlt jne adc sub sarb jrcxz stc fadds movabs ja cld (bad) (bad) fisttp rex.RB (bad) pop movslq (bad) outsl ja or adc cltd rex.WRXB lock mov (bad) callq out (bad) hlt mov sub mov sbb cmp lahf cs rex.R addr32 jge add cmp ss sub fidivr push pop add rex.X shrb jns imull sub sub jnp and rex.R addr32 (bad) (bad) lcall xchg (bad) mov shll in (bad) divb cs or adc or (bad) (bad) (bad) adc and adc add fldenv std (bad) (bad) (bad) add or cld (bad) (bad) fbld (bad) rex.X or add addr32 xchg rorl fildl (bad) icebp icebp jno or rex.WRXB rex.WRB bnd rex (bad) int3 and repz lock mov (bad) (bad) int lea cmp (bad) sub mov jne (bad) jge cmp rex.R adc jmpq lea jmpq or mov pushfq sub movsb in pop cmp or orl callq rex.WRX rex.WB nop jo out pop (bad) sbb in xchg pop cmp nop lods in (bad) mov (bad) (bad) (bad) jb cmp xchg and cmpsl clc mov lahf mov adc (bad) lcall xchg xor addr32 (bad) (bad) fistp out pop (bad) enterq in cld rex.RX movabs rex.WB jl xchg movsw xor jbe xor pop (bad) jne enterq ss xchg rorb clc je xor (bad) scas push mov shll add jmpq out xchg fldt add incb int3 test (bad) cld jl cli (bad) mov rex.R xor stos cmp repnz jmpq (bad) (bad) mov rol neg or neg sub shr btr rol mov bt sub test pushq jmpq jmpq (bad) xchg xor sbb (bad) add sar mov loope pushq icebp movabs clc movabs jmp pop xor rex.RXB and mov jg fsubrs (bad) (bad) (bad) jg cltd xchg ss hlt movabs shll xchg mov xchg (bad) loopne pop fistpll callq fisubr std (bad) (bad) jg (bad) ds (bad) cld (bad) (bad) fistpll mov (bad) push push pop in cld movsl repnz (bad) rex rorb sbb sbb out jle std in sub (bad) mov add repnz (bad) retq movabs adc (bad) jg (bad) std movsl mov (bad) outsb mov (bad) and pop mov xchg jbe cwtl fistpll test outsl ja rex.R out mov rex.RB pop rex.WRX (bad) repz notb (bad) mov addl add movabs rex.WR jp lods rcrb (bad) fnstsw fcomps or (bad) (bad) mov movsb jmp adc cmp mov cli cmp (bad) imulb rex xchg (bad) (bad) and (bad) lcall and sti push xor xor mov push movsl cli (bad) (bad) fistp (bad) stc cltd adc and cmp adc stc adc movabs jp stos cmp cmp shrb and sarb callq rex.RX data16 int3 sbb mov (bad) cmp (bad) cmp or data16 testl add (bad) mov (bad) sbb lret rcr rex.R rex.WRXB and mov (bad) cmpsl clc cmp mov in sbb imul jle rex.WRB cmp (bad) (bad) jmpq cld (bad) (bad) ffreep mov jno fdivrl (bad) movabs incl (bad) cmp sarl and cmp nop lods push xchg add cmp ja (bad) (bad) fucom pushfq mov pop cwtl and repnz mov rex.R std repz sub rex.WRXB movsb rex.R pop lahf add mov mov cld mov adc jb cmp (bad) stc cwtl ja rex.WB scas sbb movabs (bad) xchg pop out push lods (bad) and (bad) sbb std xchg psadbw sbbb sbb (bad) in (bad) stc add bt stc cmp jmpq jne jmpq jne btr cmc xor lea mov jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq add rex.RXB gs gs imul jmpq bswap movzbl lea jmpq jmpq rex.WRXB rex.WR sbb cmpsl data16 movsb jl sub mov xor movslq out outsl (bad) (bad) pop insl lea cli xor jns outsl ja int3 pop jg pop mov xchg rex.WRB decb jg (bad) (bad) lcall (bad) repz loop jb enterq std (bad) (bad) fisttp jnp jae (bad) (bad) (bad) outsl rex.WX sub (bad) xchg (bad) sub jne loop mov outsl data16 mov (bad) jle add lret ja (bad) notb mov test fldcw loop sahf movsb and (bad) (bad) in xchg xor and cmp cmp js or outsb jbe rex.WXB fwait pop mov (bad) sbb out pop callq xlat insb (bad) adc lahf sbb hlt pop es cmpl sbb movabs (bad) outsl decl rex.RX callq push or movsb push xor cmc add mov (bad) and sbb fwait repnz adc (bad) (bad) mov (bad) (bad) (bad) jg mov rex.W pop loopne (bad) lcall xor stos jno shr mov (bad) iret fiadd (bad) retq or pushq xchg (bad) sub sub xor insl mov lock frstor xchg or rex.WB stc jmpq lahf (bad) loope outsb cmp adc mov fnstcw je add insl or mov movabs sbb sub mov fwait incb vpcmpeqb (bad) (bad) pushq (bad) push (bad) in adc pop adc out movabs push sahf sub movslq fdivl and mov sbbl mov mov (bad) (bad) (bad) loope movabs sbb cld mov mov cmp jg outsl sbb js xchg mulb rep (bad) out fistpll jmp es cwtl movabs (bad) or mov mov xor movsb (bad) lock addr32 je movslq retq xor (bad) sbb mov retq and loope test (bad) (bad) sbb (bad) rex mov (bad) pushq ds rclb (bad) and scas fimul sbb movslq in movsb xor (bad) hlt pushfq sub ds leaveq xchg lret lods sbb (bad) (bad) fstpl ds adc retq push std add (bad) cmpsb mov (bad) (bad) jmpq std (bad) (bad) lcall rex.WRX sbb retq cmp mov (bad) (bad) bndstx (bad) lcall mov (bad) in mov rex.WRX cs sub mov movabs (bad) push sub mov (bad) sub sub xlat adc (bad) mov and jrcxz push test (bad) rex.WXB and stos push in cmp stc jmpq clc test pushq stc cmp jmpq ja cmc bt cmc imul cmp test cmc add jmpq rorl out sbb jbe rex.RB rex.XB rex.WXB push movabs and test test adc xor lahf rex.WRB out int3 jl (bad) (bad) pushfq xor jbe sub (bad) (bad) jmpq (bad) pushq adc fistpl adc repz jbe rex.WXB stos enterq rcll shrb or mov mov xor mov in out cpuid jb cld (bad) (bad) fbstp cli (bad) (bad) fistpll (bad) xchg jno rex.WB repnz in cmp sub pop in mov push cld or and mov test loop or (bad) int jp jmpq xchg push rex.WRX movsb ljmp rex outsl cmovbe lea (bad) and (bad) rex.WR loop mov pop lret mov rex.XB icebp (bad) out adc mov mov pop jno enterq jns ja ds sbb (bad) push jne xchg (bad) movabs in mov (bad) pop fistp sub out pop int rex.WXB rex.WRX fcomps scas (bad) out add jrcxz ss sbb or scas pop rex.WB or (bad) rex.RX add sub cmp xor push lods insb rex.WXB add xlat (bad) (bad) (bad) add xchg and orb (bad) (bad) callq std mov or (bad) (bad) jg repz rex.WXB push sub ja mov jrcxz rex.X rex.XB loopne notb mov add mov shr in int in int3 xor repnz (bad) jmp or (bad) xchg and push (bad) imul pop cmp cmp mov xor loopne xchg and repnz or clc rex xor (bad) jns xchg fdivl add cmpsl test rex.B sbb pushfq push adc push (bad) leaveq out xchg imulb loope (bad) lahf movsl cmc hlt rex.WX rex.WRXB or (bad) notl movb and (bad) mov and scas cs insb xchg rex.WX jnp lret mov sbb sbb sbb mulb (bad) (bad) jg adc lock (bad) lret test stos rex.WXB test jl outsb xchg mov sbb cltd cmpsl rex.RB movsb fs xor jge shll or fildll std gs imul (bad) add mov mov sbb fbld scas ss sub push hlt cltd (bad) and (bad) int rorb cwtl xchg add jmpq sub xchg repnz mov and and js test and rex.R jae fidivl scas rex.WRXB mov pop cli cwtl rex.W jne xor imul push adc xor iret lahf sbb add (bad) and (bad) (bad) (bad) mov sti (bad) (bad) fild push pop rex.WRX rex.WRX cld imul clc (bad) (bad) sub jae mov (bad) and stc jmpq pushw retq fwait cs sub imul loop cmp push add (bad) jmpq clc pop cs push or mov jb shlb lods sub lods gs cmp rex.WB rex.WRXB adc rex.WRB adc push jmp mov movabs jmpq lret adc sbb or sbb movabs (bad) outsl sahf ds push movsb cmc sub std lea add out sahf xor sbb movabs (bad) fbld (bad) adc cmp (bad) (bad) jmpq (bad) out rclb movabs add jrcxz adc lret rex.WX (bad) out cmpsb callq movabs jae out mov cwtl sti xor (bad) enterq cmc or jge sbbl rex (bad) sahf outsb jbe push adc movabs or stos fidivrl mov sbb mov xchg clc js (bad) (bad) rex.WRX add xor push sahf sub scas sub mov fildl lret std xchg cmc fldt mov stos (bad) or mov or (bad) (bad) mov lret jrcxz rex.X movsl and (bad) rex.WRX pxor mov mov cmp mov mov fisubrl ljmp nop outsl xchg push rex.WRXB out cmc (bad) xchg xor (bad) jmp or (bad) mov xchg cli (bad) (bad) (bad) test nop adc fisubl jno pop xchg (bad) stc (bad) jb rex.WB repnz xchg rex.W es clc (bad) xchg imul pop mov in jae rcrl icebp (bad) rex.WRXB mov (bad) jo or stos cmp popq lahf (bad) fistp insl and xchg shrl or (bad) jmpq jmpq jo je cmc jmpq not lea setno lea jle callq bsf dec add (bad) div (bad) or rorl mov test stc cmpb jmpq je cmp cmc clc jmpq jb cmp cmpb jno ja jmpq jmpq ja jmpq je clc cmp cmc test cmp jmpq jle callq cmp add bsr rcr sub shl mov clc jmpq jmpq rex.WX xchg add sbb sbb or stos (bad) cmp mov rex mov mov (bad) rcrb mov cmp fbstp cmp (bad) jb xor (bad) (bad) stc adc sbb std (bad) (bad) mov cmp cmp xor int pop je cmp jg (bad) (bad) mov (bad) cli (bad) (bad) (bad) rex.WRXB lret jae sbb outsb or (bad) shrl movslq mov lods jp (bad) outsl (bad) rex.RX or push xchg (bad) in rex.WRB popfq fs jmpq xchg jp fisubr jp jg movabs rex.WR xchg or xchg rex.WRX push jmpq cmc in test fidivl add xor cmp repnz ja not xchg bswap lea not mov xchg xchg movzwl not lea mov mov lea lea lea mov jmpq push not lods jmpq jmpq (bad) jle rex.RB mov sub sbb loope (bad) (bad) xchg rex.WRB rex.W negl scas (bad) jl sbb or jb or adc add cwtl mov in xchg push lret rex.WX gs (bad) lcall mov mov add gs (bad) adc movsb cmp incb sbb fs (bad) std (bad) (bad) ffreep fstpl (bad) (bad) lods add cmp cmp jns xchg xchg (bad) mov scas (bad) add xchg sarl or insl add cmp (bad) out cmp rex.WX or data16 hlt xor addr32 int loope (bad) pop add imul retq pushq cmp test in imul rex.X pushq mov sbb je pop mov (bad) lea cmp xchg fs (bad) jno (bad) ficoml add test lret (bad) data16 test sbb rex.XB (bad) jge insb addr32 (bad) xchg movsb rex.WR (bad) lcall adc sarb (bad) decl adcb sub adc jg outsb cmpsb lock divb pushq adc xor rex.RX test shrl decb cltd pop pushq enterq jb mov (bad) lret imul fs ror icebp mov rex.WRB adc rex.RB rex.RB push and mov rex.WB push and rex.WRXB rex.RB mov popfq add mov rcl or (bad) out jl (bad) push out jg xchg rex.RXB rex.RX rex.RX lretw pop stos xor cmp cmc cmc sub bt stc cmc cmp mov jmpq sub test cmp jmpq jb (bad) cltd stc sbb notl jle pop insb in push jp imul (bad) pop add movslq or idivl test jns retq addr32 int (bad) scas sbb rex.WB gs (bad) (bad) incl cld (bad) (bad) (bad) mov shr enterq movabs jge (bad) (bad) rcrb push cltd and rex.WB loope (bad) xchg sub xor rorb outsl (bad) int mov (bad) (bad) push xchg or sub rex.WR jp mov in lods jp lock (bad) in imul rex.WRB jbe cli sbb or pushq jmpq mov (bad) add notl (bad) leaveq push js jbe,pn int je out jle and cmp mov cmp rep cld test (bad) lcall cwtl sub in repz xor pop test add fwait or (bad) fistpll push es outsl test test movabs xchg (bad) mov (bad) jmp push movsl movslq bnd xor jne sti xor lahf pop rex.RXB insb adc (bad) imul xchg xstore-rng cmpsl test cwtl loopne and xchg paddusw lahf jb mov sbb mov clc cmp jmpq jmpq jmpq jp callq cmc test or jmpq xchg xor mov xchg xor rex.WX rex.WX loope jo xor (bad) (bad) sbb cli movabs xchg ds adc (bad) decl rex.RXB sub push jrcxz jbe std (bad) (bad) jg (bad) (bad) retq nop (bad) rex.WRX negb sub pushq cld (bad) (bad) jg (bad) mov rex.WXB (bad) xor rex.WRB movabs movabs xchg cs pop ds adc sbb mov push in movsb stos xor lahf (bad) scas push imul cmp jbe (bad) fwait data16 fistpll scas jge xor movabs insl mov adc ja test xor movabs sbb rex.B (bad) mov icebp sub stc bt cmp jmpq je stc stc jmpq lahf movl (bad) fiadd test callq stos fcomi and sarl (bad) cmpsl (bad) stos sar imul mov pop out repz fucomip scas (bad) mov cmpsb je div lahf cmp (bad) (bad) in add stos (bad) jmpq or sub mov (bad) (bad) or data16 adc sbb leaveq sub cmpsl fwait (bad) rcll callq jo (bad) jg mov roll (bad) scas mov or repz mov rex.WR rex.X sahf pop cmpsb (bad) ja (bad) (bad) outsb jbe test outsl ja mov cmp movabs jnp cmp addr32 (bad) and (bad) subl popfq (bad) lret (bad) test scas loopne setge movsbl lea jmpq stos push cli fs sbb pop cmp out cmp (bad) (bad) xchg scas xlat (bad) orl add sbb punpckhwd add icebp mov (bad) test data16 in sub add rorl adc in sbb sbb jmp test xor lcall sub jge jrcxz (bad) es movabs cli adc jb cmc add sub sub out push in cmp rcll outsl (bad) adc stos xlat (bad) sub sub jno xlat xchg xchg movzwl push add in jae out (bad) (bad) (bad) add adc adc int3 and bt mov cmc cmp shl jmpq fwait jmp lret (bad) sbb loop imul adc loop xor data16 adc (bad) movabs (bad) sub sbb (bad) (bad) cmc icebp std (bad) (bad) mov nop fld callq (bad) cmp jle pop in sbb xor stos mov cmc sbb retq (bad) (bad) sti (bad) (bad) fucomip mov (bad) pop add (bad) (bad) fucomip int3 adc cmpsl out rex.WRX xchg (bad) (bad) (bad) rex.RB in (bad) sbb sbb jmpq jb add (bad) push test insb test rex.B rex.X (bad) test nop cmpsl rex.RXB je retq idiv (bad) fucomip mov rcrb rex.XB rex.WRX sbb (bad) (bad) mov jae adc mov mov xchg in (bad) (bad) (bad) js fwait jne hlt (bad) (bad) incl icebp (bad) pop cmp in mov cmpsl in cld sub mov out insl rex.WR rcll or pop push mov (bad) in push pushq (bad) scas cmpsl xchg movabs rex.WB (bad) pop cmp add jb xchg sub pcmpeqd loope mov xchg xchg adc stos adc test scas (bad) mov (bad) ficompl (bad) mov mov loope xchg xor pop mov idivb rex.WR pop movabs movabs lret stos rex.WX lcall mov xchg (bad) pop sub mov fnstsw mov rex movabs rorb rex.WXB or jmp lock mov rex.WRX mov jg sbb mov mov sti jl mov jrcxz mov jne add (bad) cmpsl mov add rex.WRXB fisttp mov nop adc es xchg in test xor loopne (bad) (bad) in test sahf mov jl (bad) xchg adc shr jns decl test retq decl xchg jmpq jmpq callq clc bsf ror add add xor sar mov test clc bt cmp cmpb jmpq bt xchg clc bt sub test stc shl setno setne lods cmc jmpq and (bad) in add leaveq test cmovg adc cwtl adc in insb pop (bad) xor rex.WRXB (bad) in (bad) mulb ds rex.RB fwait cmp (bad) mov mov xor mov outsl (bad) mov sbb push xor pop ds movsb cmp push lret lahf pmulhuw xor mov cltd rex.WRXB (bad) pop (bad) in retq nop or out movsl test adc jo test sbb rex.WRB and (bad) sub pop iret and iret incb mov scas test movsb jl rex.WX rcrb cmp (bad) (bad) inc pop scas lock fidivl test (bad) and outsb jmp out sbb and icebp divl rex.WRB sbb adc xchg rex.RX add sub mulb or sub lock push lods jp mov ss (bad) jmp test xor and rex.RXB rex.WRXB (bad) in movslq stc jbe lods out (bad) iret xchg pop (bad) push mov (bad) add adc ja adc shrl mov (bad) cs jo (bad) (bad) ds sub rex.W rex.RX movsw rex.WRB jle or incb stos mov rex.WRX es (bad) mov (bad) (bad) jg xor (bad) (bad) (bad) fdivs xor imul add sti (bad) (bad) ljmp mov jne pushq (bad) mov fdivr enterq (bad) add enterq mov jrcxz and adc push jmpq or push xchg rex.R (bad) (bad) push jmp mov (bad) xchg add mov xchg retq or outsb jbe and sarb callq movabs mov jnp (bad) and (bad) jp (bad) movabs xlat rex.WRXB mov cmp xchg push jp mov (bad) xor xor add jno xor jg adc adc (bad) (bad) fild xchg rclb adc mov cwtl xchg pop retq xchg cld (bad) (bad) fistpll imul out (bad) (bad) fist pop xchg (bad) (bad) (bad) fsubs clc gs and lahf mov push sti movslq (bad) fsubrl mov and mov fcoms xor enterq hlt fwait shl jns lret shrl cli gs movsl js leaveq mov xlat (bad) out std or and push rex.R rex.RXB movabs and (bad) in sub sub mov add retq add rex.WRX sub mov add mov and or lods (bad) sar cmp xchg mov shr add movsbw mov jmpq (bad) iret test add lret jbe mov xor (bad) std test loopne xchg add jne push sub rex.WX pop cld or lock jo test lret lahf (bad) lahf (bad) int3 icebp and (bad) (bad) (bad) (bad) mov xor insl pushq xchg jne mov or retq fmulp and adc or rex.R pop mov gs sbb rex.B mov out cmp cld (bad) (bad) lcall (bad) jno cli (bad) (bad) fist outsb and fidivl (bad) scas cmp mov mov (bad) sub adcb leaveq add fisttpll movabs outsl out cmp sbbl test lea std sub jmp or mov clc mov int3 insb and outsl es sbb or stos add mov je rex.RB or jne pop imul pop (bad) xchg cmp lock pop imul jp jmpq cs repz mov add jmpq mov stos mov sbb cmp rex.WX sub rex.XB (bad) repnz jno jns cli (bad) (bad) lcall jge cs or mov sarl enterq mov fldt push in cmp outsl out js and xchg push mov (bad) enterq loop movsb addl rex.RX (bad) int3 fs xchg in (bad) push test cs movsb cmp movabs lods jnp movabs scas lea and push and mov mov jo addr32 lock decl cmpsb xor clc test fcomi cmp adc f2xm1 mov mov ss xchg xor adc (bad) hlt lahf (bad) rex.WRXB or (bad) (bad) jbe add xor (bad) (bad) lcall test data16 or imul mov mov (bad) (bad) (bad) xchg (bad) stos je cli (bad) (bad) fistp or jg (bad) fcmovbe jp sbb ss jl enterq push movslq xchg repnz scas pop rolb cld (bad) pop movsl xchg xorps mov int3 adc cltd adc adc sub stos add rex.WRXB add (bad) pop rcrb gs (bad) rex.WR retq adc lret and retq pop out push retq sub (bad) addr32 cld sub lock sbb or rex or cmp jmpq enterq (bad) sbb rex.RXB es pop and or xlat (bad) xchg and cltd out (bad) (bad) fisttpll ficompl jo (bad) jo (bad) mov sbb (bad) jp or mov incl rex.XB repz cmp cld (bad) (bad) fbstp fdivl (bad) imulb pushfq sub (bad) sub es (bad) lcall hlt mov pushfq movabs cmp pop cmp sbb scas jge movabs rex.WRX xchg jns (bad) outsb (bad) je retq or stc (bad) xchg outsl (bad) fs sub cmp add adc xchg pop cwtl rex.WRX (bad) jns rex.X push xor xlat iret (bad) cmc lea jne bt movb stc test jmpq jmpq jmpq jmpq cmpb jmpq jmpq neg jmpq mov movzbw not movzbq mov mov xchg jnp mov seta movsbl jmpq stc test jmpq in (bad) adc add adc add mov add rex.R scas ja add add add xchg adc add (bad) adc add add addb add add add push rcrb pop mov add (bad) adcl rex.RXB adc add movsl adc add add rclb add adc mov add (bad) sub add add add adc add xchg adc add (bad) add add xchg scas adc add add rex.W add orl push or (bad) pop sub sub adc rex.WR (bad) jmp stos and fcmovb decl scas jbe popfq test out (bad) cmp retq (bad) hlt mov fidivl in clc sbb test icebp rorb data16 (bad) in xor cli sahf xor xor data16 lock sbb mov mov in out sub je adcl frstor mov icebp xchg mov insl repz push retq (bad) rex xchg nop (bad) add pop and rex.R sti dec retq gs xor or (bad) imul adc repz stc pushfq cmp fwait vmovhps jno rorb sub rex.WR lea shrb (bad) lahf xor mov push xor out pop leaveq (bad) xchg xor cld sbb mov xchg fnstsw adc clc add in mov data16 ss incl (bad) out sbb or mov xchg cmc gs jmpq (bad) (bad) movabs pop pushfq (bad) stc push icebp (bad) rex.XB push adc mov enterq ds sub jge test rex.XB or mov imul jbe ficom movsb adc sub movslq rex.RB hlt data16 (bad) imul rcll sbb lock imul push sahf iret xchg mov jmp and int3 xlat sub fistp sbb (bad) xor or movabs ficomp jl out cmp push jrcxz (bad) pop jmp (bad) movabs lretw jmp lods fcomps and frstor xor clc fldl sub imul cmpsl std mov rex.R (bad) (bad) (bad) cmp std rex.WR rex.WRXB scas xchg sub fwait mov (bad) divl sub in sbb (bad) xorl movslq lahf imul fisubrl jp pop push (bad) jb rcl lock push jo xlat (bad) (bad) icebp sar jnp or mov (bad) test xchg lock js movabs sbb (bad) xchg outsb movabs adc mov add jb scas cmp push jne insl (bad) rcrl xor rex sahf add (bad) fs test push jmp xchg xor (bad) pop xor sbb fisub xor (bad) xchg retq lret ficomp rex.WXB cmp sbb repz cli and rex.WR or es cmp pushq xchg pushq rcrl pop or pop xor (bad) cli (bad) mov (bad) (bad) clc and out js rex.RX xor leaveq outsb and mov push lods icebp jne (bad) mov mov shll out mov xchg cmc idivb sub jmpq fldenv (bad) es imul mov mov jmp int3 rex.W mull mov loopne sbb mov pop and (bad) jl push adc in adc add subl pop adc (bad) (bad) xchg jo stos sbb mov retq out jl outsb push gs rex.W pop mov xor rolb cmp pop int cmp sub sahf outsb jg fadd push (bad) push cmp sub push or jb cli rex.W (bad) xor cmpsl add sbb xchg iret or push mov (bad) xlat rex.WXB xchg data16 mov adc sub vunpckhps sub pop xchg sub rex.WX xor or icebp (bad) gs outsl sub lret rex.X out or (bad) (bad) mov jo gs retq jbe decb (bad) mov or jg sub pop or jne (bad) xchg lahf leaveq push subb add sbb sub pop std sbb clc cltd in adc retq jg test (bad) insl cltd (bad) (bad) callq stc jmpq rex.X pop pushfq mov mov push jns (bad) stos mov nop cmpsl xchg gs ds adc (bad) adc insl mov movabs or loope movabs jl in jnp push ficomp mov movsl movsl movabs movslq (bad) (bad) icebp callq rex.WR sbb outsl sbb or and sahf cli sbb and leaveq int leaveq js pop rex.WRX fs and add loope pop rex.WX sub es xor rex.WR rex.R (bad) adc adc adc rcrb adc in decl retq mov mov icebp (bad) mov test cmc (bad) xor (bad) fcomps rex.B pop pop (bad) add jns nop scas movabs (bad) iret (bad) xor imul out pop nop xor (bad) push (bad) pop or faddp xchg (bad) retq cmp jg xchg pushq mov js cs rex.RX cmp nop rex.RX pop movabs retq jp or hlt mov jmpq int retq (bad) cld mov rex.W insb rex.W imul mov stos in (bad) movsl xchg (bad) nop insb shl cwtl outsl xor (bad) fnstsw or pop jae test rex.WR (bad) outsb repz sbb (bad) adc in (bad) rcr xchg and movabs fimul sbb out adc xor pushfq sti cli xchg loop sbb fwait rex.WR movabs jge xchg (bad) add sub jns or movabs movabs stc rex.WRXB mov mov jg add fsubr in lret mov adc data16 stc (bad) or add (bad) sti (bad) icebp rex lret (bad) xchg lods xlat movabs mov repnz int3 push mov xor rolb sub xor xchg sub pop push cmp pop xor int push iret xlat mov fnstcw fidivl repnz imul sarb (bad) jns sbb or fwait pushfq sbb (bad) pop (bad) and stos in or cmp fiadd retq pushq in negb or xchg (bad) adc mov jp test movabs shrd jp (bad) adc sbb cmp (bad) callq push lret pslld rcrb (bad) add (bad) and hlt mov (bad) mov (bad) cmp std push leaveq test sti int adc jno fcomps cmp jl,pn lods repz jb jg out add stos (bad) lret sub cli in icebp mov mov imul sbb movabs adc add xor cltd mov (bad) mov mov rex.WRB rex.RXB movslq xlat (bad) add and (bad) sub mov push rclb retq mov pop stc movslq sub sub (bad) pop enterq (bad) fcmovu sbb iret in sbb cmp sbb scas outsl ds mov and movabs mov (bad) sub rorl add sbb cmc fmull test xchg jmp mov rex.W gs (bad) (bad) and mov lea jb push jnp (bad) fsubrl pop retq cmp jle push movslq lock or insb adc push (bad) fnsave sub fnstsw xchg jns popq out mov std in (bad) jae lods jno xor in ficom rex.XB repz push out sub scas adc and pop cmp mov out movsl push clc add (bad) mov rex.WX enterq fisubrl rex.WRXB out xchg (bad) cmp rex.RXB xchg mov push pop (bad) fiadd (bad) (bad) mov rex.W sti test cwtl lods and add (bad) repnz xor sahf rex.XB rex.WXB in pop mov imul jnp sarb xor sbb sub nop lock jne xchg jno jo jns std cmpsl (bad) cld jle pop (bad) sub rex add insb xor (bad) or out iret mov fwait decl cmp rex rex.WRX adc cltd in es rex.X cs in (bad) clc lods movabs xchg sbb push rex.X stos (bad) mov push lock xchg in and mov repz mov pop ja (bad) jns leaveq mov mov jnp cmpsl rex.RXB fcomp mov mov nop pop repz js rex.X rex.R push orb cmpsb push rex.WRX out loope (bad) xchg lods add test popq mov movabs adc movabs fiaddl test xor pushfq mov xor cmp sub rex.B (bad) (bad) scas rex.WR cmp loope (bad) out rex.RX mov jg or sbb (bad) (bad) (bad) push jrcxz (bad) rex.WXB or mov mov test cmp mov rex.WRXB ss jnp push out fwait and rex.WXB stc rolb sahf fdivrs cmp or mov lret or cmc rex.RXB rex.WXB fmuls sbb mov movsb rcrl out (bad) adcl loop insl (bad) subl jl pop rex.RB sbb es (bad) (bad) mov pop xor in fisubrl jne and xlat mov xlat int in cli subb sar fidivl rex.RB lock (bad) mov rcll sub rex.WX icebp jno gs pop sbb or retq cmp and cmpsb cwtl add lea sub incb pop fistl xor sar mov nop sbb lea rex.WX adc rex.WRB out stos int imul loopne retq or (bad) movabs and lods lahf cmp movslq mov data16 testl stos outsb (bad) sarl xorl test jae iret lods adc mov (bad) rorb (bad) xchg sbbb push int3 test jmpq push insl loop cmp add sti loope xchg lods hlt fcompl push data16 addr32 ror sbb xorl pop and add jo out add cmp and xor shlb (bad) add (bad) outsb jge sub add rex.WRXB (bad) mov iret out int3 out cmpsb xorl sub pop (bad) push enterq mov ds out cmpsl pop push cmp push mov add mov cmpsb (bad) shlb js cli sahf xchg add mov jb mov pop sahf rex.WXB sbb xchg mov icebp movabs decb mov (bad) add add cmp rex.R add and sub xchg (bad) cmp jg insl xchg push mov and mov jb cmpsb xchg mov je or rex.WX sub xor jle add rex.RX (bad) (bad) mov mov out andb (bad) and out jns cmp pop push rex.WXB mov cmp jle gs rex.WRX addr32 adc pop sbb movsl lret (bad) push sti std movsb loopne push js jp movabs add imul retq rex.W cmp adc (bad) rex.RB rex.WRX cmp jne (bad) enterq and jno (bad) ficom incl mov push faddl mov and sbb (bad) xor and fldcw (bad) push (bad) pop data16 cltd test mov jo cmpsb mov (bad) sbb fwait shl in out je lods xchg rcr lret cltd (bad) insl or sub cld (bad) outsl callq rex.WB and and movabs sbb rol xchg adc and xor (bad) (bad) cld mov push sahf gs xchg xchg out push iret addl xchg xchg sub cltd xor ficoml pop mov retq fwait xor stc fwait sbb (bad) ja es clc mov jo add mov add add sub je or rol gs xor mov cli mov test sbb (bad) pop xchg xor mov mov xchg (bad) mov cmc mov stc (bad) rex.RXB es or adc (bad) (bad) lcall hlt mov (bad) sub jg mov cmp insb test or cwtl (bad) retq pushq sub ds push xor std (bad) (bad) mov sbb (bad) (bad) fisttp mov cmp xchg xchg cmp (bad) (bad) outsl divl cmp popfq or pushq push stc (bad) outsl mov (bad) bswap mov (bad) (bad) adc ficoml (bad) (bad) jns rolb xor jo xchg rex.B jno cltd rcl sbb sahf rex.WR add in (bad) incl (bad) (bad) pop movsl pop mov test add and ja test rcl sub dec or shrd add btr mov mov inc shl mov jmpq jmpq (bad) leaveq rex.WRX xorb lret (bad) fstl cmp push rex.X xorl add add insb jle or push mov pushq sbb and push jp rex.B cld xor jb rex (bad) (bad) lcall es sub add mov (bad) in retq xchg cmp retq or sti cmpsb (bad) jmp mov stc (bad) sbb movabs std xchg xor data16 xlat leaveq mov (bad) (bad) (bad) cli repz leaveq stos cli sti fisubl jle,pn hlt mov rex.W cmpsl (bad) xchg and out sbb mov sbb test out testb mov fs xor add mov sub mov sbb push scas push xchg insb je fwait movslq add and cmp data16 adc jns pop xchg andl bswap lea jmpq bt imul stc stc test add jmpq jmpq retq cmp sbb (bad) mov lret push cmp xchg cmc mov or (bad) in movabs cmpsb not adc sub jp or (bad) mov rex xchg loop pop rex.W stos push in sbb stos push jg movabs hlt ja mov rex rex.X cmp or stos jo sbb popfq (bad) rex.R mov movabs rex.WB sub cmp add lcall (bad) movabs js out add (bad) (bad) cmp mov or vpsllq (bad) mov stos sbbb stos cmpl adc jl fstps (bad) and pop int3 xor fwait adc test pop (bad) rex.RB (bad) jbe int enterq sub pop repnz sub cmp or xchg enterq int movabs cmp or rex.WRXB cmpsb or xchg jo push rclb out mov or rex.X (bad) icebp sbb adc (bad) out mov retq fisttpl mov stos or add mov mov and enterq cltd xlat test (bad) (bad) (bad) out xchg out mov orl (bad) pushfq pop imulb sar (bad) fistp (bad) xor mov (bad) and sbb pop (bad) push clc (bad) in shlb xchg je mov mov pushq (bad) push mov sti fidivrl gs sub leaveq fstps mov mov mov xchg divl mov xchg push fbstp and xchg pushq (bad) sbb pop xchg pop fs out cld data16 mov in rex.RXB outsl xchg sar movabs outsb (bad) xchg imul out xchg enterq push jp jo pop lret lock addr32 jmp (bad) out fidivrl jno (bad) (bad) (bad) (bad) xlat jle (bad) std mov mov (bad) jns jg or sarl pushq xchg movabs (bad) or (bad) jg xor test (bad) (bad) fist rex.WR mov fcmovne ds push (bad) xchg sar pushq fsub add push xchg (bad) mov (bad) rex.RB stc (bad) lods jo and pop rex.RB xchg jnp andb callq rex.RXB jne retq sub cmpsb rex.XB jno (bad) scas (bad) cmc or cmp shl mov movabs mov (bad) (bad) fidivl leaveq add out cmp and jo rex.RXB and imul mov fistl rex.X popfq push cmp cltd sbb mov (bad) (bad) lcall jp mov (bad) jns mov mov movabs outsl (bad) add flds lahf retq loopne pop sti (bad) (bad) (bad) test out and mov rcll cmp xorl xchg jl repz rex.WR or or xchg pop sub rex.XB adc rex.WB rex.B data16 cli pushq js pop jrcxz cmp callq imul cmpsb jb bt clc test cmp jmpq jmpq je clc add clc clc bt cmp jmpq push lock std std andl jbe repz mov (bad) sbb (bad) lock pop in fnstsw cltd in pop rex.WRX rex.XB rex.B (bad) pop pop leaveq add callq nop (bad) ja lret xchg roll xor out shr xchg (bad) movsw add hlt mov mov int3 xor jmp adc and sub mov stc rcl add mov bt test test stc sub jmpq jne clc bt stc clc movb bt stc test test jmpq je bt sub cmc stc cmp cmp jmpq jmpq jmpq clc add test bt jmpq jmpq push (bad) pop (bad) mov stos (bad) cmp mov insl in sbb in rex.R rex.R rex.X and mov jno cmpsl data16 faddl rex.WXB (bad) rex mov mov (bad) lcall (bad) scas in std (bad) (bad) lcall test (bad) mov (bad) stc fadds imul mov cs (bad) callq jno push in lods in pop add jns jg cmc xor leaveq fsts xchg stos sbb pushq movabs sub (bad) addr32 jbe and movabs push rex.WB incl sbb pmaxsw xlat (bad) xchg or imul lods sub mov mov and fsubr xchg ss fldcw loopne mov xor scas lea and (bad) (bad) lcall retq cld pop sub stc jl (bad) (bad) cld (bad) (bad) mov xlat cli (bad) (bad) fbstp (bad) rorb outsb rex.WRB or lods (bad) stos rdtsc adc (bad) push (bad) jge mov pop movabs cmc rex.RB retq rex.WRB xchg and rclb clc callq adc sub adc (bad) enterq lret mov lret enterq rex.RX xor (bad) rolb xor mov mov negb xor jmp xchg add enterq pop callq sar cltd xor scas movb scas decb (bad) fisubr (bad) add pop cmp and xlat loope hlt out xchg (bad) (bad) (bad) mov lods je (bad) sarl xor or (bad) fistp cli or (bad) (bad) fist mov jmpq test retq lret loop pop callq sarb pop out (bad) jle rex.R sub mov sub or mov rex.X ds (bad) scas loope scas addr32 (bad) xor rex.WX imul pop (bad) (bad) rex.WXB retq sub rex.WB fwait add xchg push xor loope rorb fmul callq xchg adc jo lods jrcxz add (bad) ds or xor (bad) (bad) cmpsl xor lock scas pop out vhsubpd and cltd lahf xlat (bad) in rex.XB (bad) xchg in enterq xchg and mov xchg jo sub cltd cld lods (bad) xchg fs (bad) rorb rex.WR cmp (bad) test out (bad) xchg out jg and (bad) xchg scas rex.RX sahf push sbb movabs test mov sbb (bad) mov movabs rex mov xchg retq sub cmp fidiv insl fs je xlat fsubrl (bad) (bad) movsl gs jp icebp (bad) pop xchg cld lret stos pop push xor rolb or add add xchg (bad) jmpq or mov sub ja (bad) mov cmp std test jrcxz mov in (bad) lcall cmp lret xor xchg iret fiaddl movabs adc adc xchg and test pushfq cmp rex.XB rex.WB fsubrp cld cmpsb in int3 (bad) fisttp stos push ds test add sub test jo sub xchg pop rex.RX fcoml imul (bad) rex.WR fmull pop nop cmp mov cmpsl fisttp adc mov xchg and imul (bad) ja jmpq jmpq callq rol sbb xor rol add and ror mov bsr mov bt cmc bt cmpb jns jne or shld ror cmp sub xor mov shl shr sar neg add rcr neg not mov clc stc test test jmpq rex.WRB mov jb lods sub orl rex.W negl xor jp sarl (bad) cmpsb (bad) xchg leaveq add sahf cs sti add mov xchg push xchg and lahf push loop (bad) lcall repnz rex.WB mov mov (bad) rex.WXB std (bad) lcall in xchg jns sti (bad) (bad) fild fwait repz loope rex.RXB fldl cltd adc or fiaddl jmp leaveq or psadbw mov in sub movabs mov (bad) movabs sbbl lea in movabs mov movsb (bad) movabs test (bad) pop mov xchg (bad) jo (bad) scas (bad) data16 push rex.WRXB mov push cmp jmpq ja ror inc sub bt ror seto add btc mov inc mov jmpq ja rol sub setg and add not rol mov cmc stc cmp jmpq mov xorb pop xchg pop and shrl enterq int3 sti xor sub rex.R sti adc test add imul pop add (bad) rex.X (bad) cmp push rcrl xchg jg cmc pop jne cmp xchg movabs idiv (bad) (bad) fildll cld mov movabs mov (bad) (bad) xor rex.WR xchg cmp rex.WXB imul icebp pop fsubrs js (bad) add pop data16 movabs not jle shrb rex.WRX (bad) pushq jns jg jl movabs rex.X mov (bad) jo pop out cmp and insb jmpq rorb (bad) jp (bad) scas callq jmpq stc bt cmc bt sub std popfw jmpq pop lret sub sbb lret cmpsl out (bad) add mov repz mov notl cmpsb lods pop int3 (bad) pop cmp sub rex.RXB (bad) ds fidivrl out (bad) (bad) (bad) int3 mov (bad) roll (bad) (bad) (bad) (bad) pop pop loop shr xchg xor lret shl add (bad) jge (bad) rex.WRX rex.WB fwait std xchg (bad) std push xchg cmpb nop cmp lahf fbstp movsl jg xchg rex or cld (bad) (bad) fistp cli (bad) (bad) fildll and out and jae movsb rex.XB and push in pop mul test mov enterq in pop mov sub movsb rex.R sub movabs (bad) rclb icebp mov rex.WR (bad) scas ss sarl rex.WB sbb es rex.WRXB fs xor rcll and mov or xor sbb add stc jns cld mov callq nop enterq jae (bad) (bad) lcall (bad) jl add sti cmp pop cmp lock jo cmpsl outsb (bad) fcoms mov rex.WRXB cmp (bad) mov lcall scas cli (bad) (bad) fistpll lcall xchg outsb js mov or (bad) pop fistpll rex.WRX pushq xor sti or pop idivb (bad) hlt cld fldt adc movslq icebp icebp xor lahf rex.WRB shrb xor xor sbb loopne sbb (bad) sub mov mov mov (bad) (bad) (bad) xor repz btr xor add test mov test cmc cmpb jmpq jmpq je cmp jmpq jmpq jmpq (bad) stos scas sbb sbb mulb (bad) mov lahf cmp adc adc push fldt xor fsubl imul jns or scas sub loopne adc (bad) mov repz cmp (bad) (bad) mov mov pop jg pop nop shlb cmpsb cld (bad) (bad) incl push mov shrb cmpl mov pxor jmpq cmp xor adc cs jmpq jmpq sub movabs orl sar cmpsb (bad) rex.RXB rex.RXB fisub and push lods sub jge adc jbe push scas retq (bad) (bad) (bad) jg add pcmpgtw icebp jo sti stos mov movabs (bad) (bad) mov jae push test mov lock scas jl cmp jae add mull out rex.RB jb rex.W (bad) and rorl rorl test in push mov bt cmp cmp bt neg bt jne cmp sub cmc shr jmpq jb stc stc jmpq (bad) ja xchg sbb movslq cmpsb and adc (bad) rex.WR fdivrl movabs lods (bad) sub lahf ja cmp rex.RB adc sub (bad) (bad) (bad) (bad) (bad) outsl es mov cmpsb (bad) lahf negl xchg xchg test (bad) (bad) mov sub add (bad) (bad) fcomip stc rcll and cwtl ja xchg rex lods mov sub retq (bad) adc sub sub push push mov sub cld jne andb jg rex.WRX and pop insb sub stos outsl push (bad) stc movsb in cmpsl psubusw mov jrcxz test mov cld lret callq (bad) rex.WRXB gs lret sub mov (bad) rex.RX scas jl adc testl test sti push callq je test jmpq jmpq jmpq rex.WB cmp mov sbb push loopne cmp mov adc rex.WB lahf jbe,pn test (bad) mul stos sub mov jb add mov add jp (bad) in sub cs jnp (bad) (bad) (bad) jg ss cmp repz insb (bad) lcall push rex.WRXB fbstp xchg pop loopne mov (bad) repz icebp adc fild movabs fdivl sub rclb imul sub int idivb mov mov mov jae (bad) adc xchg ficoml rex.W divb (bad) sub cld cmp int3 jno (bad) xlat sbb and xor (bad) (bad) pop mov cmp outsl (bad) cld xchg (bad) mull fs lea mov mov movsbw mov lea jmpq je jmpq mov movzbw lea jmpq jmpq clc bt movb clc jmpq mov or sbb push out cmpsb xor pushq movabs mov fs pop stc add rex.W movabs rex.R sub loop xor xchg loopne add cltd imul rex retq mov lahf rex.XB nop rex.W out (bad) adc xor outsb retq adc andl sub cmp fild fs adc in and (bad) pushfq je adc (bad) rex.R cmp jle jl sub lods std xchg outsl mov in lea sbb jl retq or cmp adc mov (bad) jb and int (bad) mov nop cs cwtl stos bswap scas and push xor (bad) mov hlt adc adc not je add lret xor and imul (bad) leaveq cmp cmpb xor stos (bad) mov xor out (bad) hlt and sbb push in je (bad) (bad) sbbl cli xchg pop mov (bad) (bad) jle sti sub (bad) cmp cmp mov cmp rex.WRX cmpl movabs retq leaveq add rcrb xor mov fimul sbb clc or nop add idivb (bad) adc out pop mulb mov (bad) (bad) movabs rorl es fildl (bad) push push xchg fs (bad) pop jmpq (bad) cli adc add push ficoml cwtl or ss cmp roll jns sbb cmp add outsl mov movabs lahf cld lahf rolb rex.WRXB push and pop lret xchg pushq mov cmp fs xor rolb mov (bad) jns or cmp ds insb cmp sbb sub xor jo decl pop insl add cli (bad) test push jp mov xor sub fnsave adc cmp jnp fnop out rex.WB jo jrcxz mov jns ja sub adc mov (bad) sti fisubl push int3 xor repnz jnp stc mov nop xchg (bad) cld (bad) lcall (bad) rex.WRX lcall xchg mov mov callq pop cmc (bad) test mov mov out mov and pop lock add (bad) push sbb outsl mov pushq std rex.RB (bad) push test (bad) xor add movsb push stos sti xor jle sub cwtl mov push push adc ss or sub mov (bad) (bad) mov sbb (bad) rex.RB sub fwait or mov mov (bad) adc in and js or test mulb fistp addr32 rex.WX outsb cmpsb and pop fildll xchg stos (bad) mov cwtl (bad) mov mov add lcall icebp movabs lea lea xchg addr32 xorl jmpq in (bad) (bad) (bad) mov push xor movabs sub cmp cmp cmc cmp (bad) mov adc adc pop rclb rex.X fmuls pop mov adc pop (bad) in sub sbb addb popfq test andl movslq cld sahf not (bad) lods push (bad) pop lods (bad) adc jo fimul hlt insb mov sahf mov add xchg adc test lock sbb rolb xchg or xchg lret (bad) mov fidiv int3 mov mov out cmp je sub sahf lahf movslq (bad) fmull mov rex.WRB sbb mov fdivrs rex.WB decl rex.RX rex.R rex.WX or sti clc paddq (bad) jle fisubl (bad) mov sbb jmp xchg int sbb rex.WX (bad) fwait push mov rex.WB cmp mov vandps callq adcl mov sbb (bad) mov pop retq sub test loopne (bad) rex.B hlt xchg pop cmp stos (bad) loope enterq out mov movabs xor out (bad) jp xchg xor jmp xor rex and leaveq stc adc fisub (bad) vunpcklps adc (bad) (bad) fild (bad) and stos mov scas js fwait pop cmp (bad) (bad) jmpq cli (bad) (bad) fisttp stc outsb xchg mov (bad) mov pop add adc lods in mov cmpsb movabs mov rex.WRX fdivl jb fsubrl scas je (bad) or jnp or cmp add mov divb hlt adc in xchg sub (bad) in xor xor pushq (bad) add adc sbb sbb mov xlat imulb cmp sub pop (bad) push xor (bad) xor sub jrcxz sub jg rex.W rex.WXB fisub mov in sbb sub lret adc mov fcoml mov lahf lea hlt lods jb jae addb cli cwtl add ja xor push test out mov rex.WXB add xchg and rcr sub or js out lea xchg shl notl and adc in mov in mov xchg push mov xchg (bad) decl test jbe add movabs xor push jl (bad) jmpq add mov push rex.R pop adc je push jp callq insl cs out fdivrl mov js mov cmp mov cmp in xor mov fbld push ss sub movsb xor mov cld (bad) (bad) fist mov sar (bad) (bad) fistp (bad) lret cld mov pop icebp jno loop or pushq jp or int3 pop pop rex.WRXB sarl (bad) std cmp mov mov movsl data16 ss int sbb clc pushq rolb cs adc (bad) and rorl or cmp mov cmpb mov or icebp test fldenv (bad) jmpq (bad) (bad) sarb (bad) fdivs add mov sbb rex.RX rex.RX or pop rex.WB or mov iret (bad) int or (bad) mov sbb ljmp sbb rex.RX adc (bad) scas (bad) push mov movabs pop xor fildl xor outsb fsubrl jmpq rex.XB (bad) mov push notl (bad) xchg sarl xchg and jp xor mov lea jge je fdivr (bad) (bad) fild in xchg movabs (bad) (bad) leaveq and jb cld jo (bad) out sarb lea (bad) repz mov mov (bad) jno or rex.X leaveq test ds faddp (bad) adc (bad) lods shll (bad) (bad) pop movsb fnstcw and (bad) test je loop or pop mov (bad) (bad) sti js push out sub (bad) rex.WB btc mov jmpq add jp rex.R shrl adc sub xchg pop pushfq sub adc sbb jnp adc (bad) outsl and push imul movabs movsb sbb pop outsl (bad) mov jmpq xor out (bad) mov (bad) add sub sahf movabs jmpq jg cmp fmull adc test (bad) cmpsb fildl jmpq scas insl and mull cmc mov cli pushq rex.WRX add cmc (bad) mov rcrb mov cwtl outsl mov mov sbb rex.W iret mov retq (bad) (bad) mov lock cmc mov rex.WRX (bad) add cmc mov mov scas lea fstpl mov callq (bad) mov (bad) jg std or (bad) pop xchg cmp jrcxz addr32 (bad) (bad) jg xchg rex.WB cmpsb jbe rex.X fnsave sbb movabs (bad) jle repnz out movsl test sbb std (bad) (bad) fucomip out push out (bad) in cmp jp (bad) cmp test test mov (bad) popfq cmc and test idivb rex.WX cmp (bad) jns (bad) retq cmc cmp rex.W rex.WRB scas out sub (bad) orb push popfq gs jae icebp icebp sub pop xchg int3 sbb (bad) shr (bad) cltd rex.R (bad) push sub in add jmpq add pop leaveq rex.RX cmpsb test add or push movsl fs sar orl mov loop jae stc test movabs (bad) (bad) (bad) incl xor movabs test (bad) lcall push mov fidiv in test (bad) or rex.WRXB rex.RXB rex.RXB (bad) fwait rex.RX iret out adcl (bad) sbb in (bad) test push mov mov pushfq je sub mov (bad) rex.RX rcrb sub pop xchg push xchg test in xchg adc rex.B rex.WRXB in sub and sub fcompl cmp lret add rex.XB (bad) in sbb rorb cwtl ds add rorl icebp ror shl push shrd mov or movsbl bswap sete sub setne lea jmpq cmp cwtl add mov mov out sahf out rex.R mov jl,pt callq std (bad) xchg cwtl not (bad) popfq (bad) sub int3 scas or fistp (bad) pop imul rex.WXB rex.WRX mov xchg cmp and test mov or cmc jmpq cmpb rex.WR cmp (bad) (bad) (bad) out int3 or (bad) faddl jnp out mov sbb adc in insl stos adc outsb xor mov jge scas push xchg in jrcxz loop (bad) adc mov andb ds cwtl clc pop fimull cwtl outsl in or or int3 ss adc push jp mov adc cmp push int jg pushfq (bad) in adc movabs scas or jns mov scas (bad) push decl (bad) cmc rex.RB addb cmp jns pushq scas (bad) mov cwtl enterq movslq or (bad) (bad) incl je repnz addr32 pop xor cmp mov cmpsb test rex.W fmulp jp shrb imul ficompl fsts xchg (bad) (bad) and xor adc jbe cwtl outsl (bad) xchg lods insl mov rex.WR rex.WB sub js xchg cmp mov stos sarl fstpt mov (bad) mov retq movabs cmc shrb (bad) (bad) popfq (bad) xchg add pushq jmpq (bad) ds decl mov retq cld ds xor push test pop sub jl push in rex.RXB mov and paddd (bad) mov icebp std (bad) (bad) mov mov imul hlt (bad) popfq (bad) mov pop outsb or (bad) movabs (bad) sti rcr jno or pop rex.W rex hlt negb push jg (bad) (bad) je fdivrl loop data16 (bad) xchg je add pop in popfq fwait add pushq push (bad) (bad) rex.WB scas xlat and xchg imul fcmove or retq rex.RX rex.RX test jmpq int mov pop xchg rcll xchg (bad) test pushq cmp cld in mov or mov divl stos jle sub sub (bad) (bad) fs jmpq jmpq jne xor bt sub xor or movzbw dec mov sub adc add jmpq jmpq retq adc rex.WX xchg mov out in outsl mov fsubl rex.WX jae imul leaveq mov in (bad) mov rex.WRXB out scas ds xchg jb rorl mov repz xor xor and leaveq sub lcall nop (bad) rex.XB (bad) lcall adc fiaddl lea jae movslq mov callq adc fisubrl sub sbb movsb ss add xchg push pop cltd xchg add lahf adc and movabs std rex.WRB fwait jae lock sbb and (bad) enterq scas (bad) (bad) (bad) int3 xor mov movabs ja add mov (bad) jo movsl cmp jmpq jmpq jmpq jmpq retq in sbb shll xor sti adc xchg (bad) es mov movsb (bad) mov repnz sbb pushq scas outsl fldl iret es sbb jmp fwait cmp (bad) (bad) cmp loop cld xchg jb rcrl (bad) fcomip fmull addr32 fdivr (bad) lcall lock sbb sti (bad) (bad) fisttp (bad) ficomp (bad) cmc movsl rex.R adc movsb (bad) (bad) sbb insl cmc fild or es lcall lock (bad) pop rcrb cmc xor mov add enterq jle in xchg push repnz (bad) fimul rex.WX enterq sub mov (bad) mov int pop rex.RB jne push jmp and (bad) (bad) rorl out xchg xchg jnp jne movsbw mov rcl shl mov cmp or jmpq stc bt repnz jmpq jmpq jmpq fbstp mov xchg xor outsl notl xchg add mov (bad) std sbb cmp push rex.R (bad) mov (bad) psadbw jmpq mov fmull (bad) lret ds (bad) (bad) (bad) (bad) rex.X (bad) (bad) repnz rex.WRXB rex.RXB and movsl (bad) sub cli (bad) (bad) fildll pop (bad) rex.WXB rex.B (bad) rex.RB leaveq rex.WB (bad) test rex.W mov cmp movsl rex.WRB fwait sti xor (bad) lahf pop lea out (bad) add or repz xor push (bad) rex.W imul imull subb lea repz imul fisub add lods jnp movabs mov adc callq mov setns mov lea mov movzbq pop seto mov mov bswap mov mov lea lea mov lea mov retq jne test cmc cmp movb stc clc bt test jmpq rex.WRB mov rex.WRX cld fistl (bad) rex.R pop jno and (bad) mov scas pop es cmp imul sbb jne (bad) (bad) (bad) jg (bad) rclb movabs (bad) lods rex.RB jo add imul rex.WB mov jnp fldenv mov loope rex.WX cmp sub loopne xchg sbb sar fdivs pop sarb mov decl test cld (bad) (bad) jg cmp rex.XB add pushfq jnp hlt retq jmp jp andl lock mov mov rcrb (bad) in sbb (bad) mov (bad) (bad) es adc fsincos cmpsb (bad) lods mov mov xor (bad) (bad) sbb and add rex.WR repnz pop mov (bad) adc jne (bad) out sub rex.RXB (bad) lss add push jne jb pop add sbb (bad) jns clc movabs imul jrcxz outsb popfq rex.WRB jg stos repnz (bad) movsbl cltd jno (bad) cmpsl jg cmp pushq add rcll mov (bad) adc (bad) (bad) (bad) (bad) mov cmp (bad) jg (bad) ss loope pop pushfq lret rex.WRXB movslq fdiv adc (bad) (bad) mov data16 (bad) (bad) fbstp imul (bad) outsb jns in or cmp xchg add rex.WXB jo sbb idivb fwait or sarl pop rex.RX rex.WRX push xchg adc mov jle in repnz sub jae cmp (bad) (bad) jp mov or cltd loope cmpsl test (bad) (bad) callq scas mov in cmp xchg je mov lea lea movzbl lea movsbl movzwl not movsbw movzbl lea not mov jmpq adc jmpq ja rol setb sub shld add shld neg bt mov (bad) lock shl mov bt cmc repnz jmpq cmpsl (bad) push mov jp sub in jrcxz retq ss jmpq mov in rolb pushq mov pushq out rex.X out cs ja (bad) xor jg mov jg sbb mov adc callq hlt adc mov add enterq test cld (bad) (bad) mov pop jb and cmp (bad) lcall movabs sbb sub lea lods add cmp (bad) (bad) mov mov roll idivl (bad) std mov xchg jo jns idiv (bad) (bad) jmp jge (bad) (bad) cmp (bad) (bad) mov jmp mov mov (bad) rex.WRX adc in xor popfq (bad) cmp pop mov mov (bad) rex.RX (bad) (bad) mov pop cs xchg sub rex.X rex.WX or (bad) stc ds (bad) mov movaps out (bad) (bad) mov rex.WB (bad) ds add in cmp or (bad) and mov in rex.RB movabs and in (bad) lcall (bad) scas fidivr rex.WRX nop clc or icebp cltd or mov cmpsb ds add rex.WRX repz mov loope push lods out cmp (bad) (bad) mov pop popfq rex.WRB fidiv adc jns leaveq pop cwtl rex.XB (bad) cmp repnz mov add mov mov lods push sahf mov (bad) (bad) pushq pushq sub cli mov popq pop xchg pmaxsw mov and (bad) xor cmpsb fs in pushq jae (bad) mov or imul mov jrcxz (bad) xchg stos rcl and sub paddusw add mov mov and rcrl xchg (bad) (bad) jnp mov sbb jnp (bad) cmc sbb adc leaveq hlt je xor rcl movzbw push sub mov sar sub not jmpq jne jmpq jmpq je jmpq jmpq je not movzbw movzbw mov jnp lea jmpq clc cmc jmpq stc jmpq jmpq movsl vpxor mov rex.WB (bad) sarb scas jbe cld sti iret or pop rex.WRXB xor jb imul or rex.RXB es rex.WRB xchg jmp adc (bad) and int3 mov movabs rex.WR lret add leaveq int3 test movabs xchg rex.WB fnstcw scas sub (bad) (bad) sarl rex.RXB in add pushfq insb movabs sub sbb jns rcr (bad) sub insl jl jl fldenv retq or (bad) mov cmpsb fildl stos fsubrs lret movslq iret sbb stos mov adc (bad) sbb jnp callq (bad) int xchg cmp fucomip rex.RX rex.R rex.WR cltd or (bad) mov (bad) rorl (bad) notb loope mov xchg jl (bad) rex (bad) push std sbb jp fnstsw push js cmpl rex.B (bad) out rex.WRXB xchg add and (bad) (bad) lcall mov rorl iret jp in mov jmpq data16 xchg add cli xchg (bad) (bad) (bad) jns out sbb clc and out mov movslq (bad) mov rex.X rex.XB scas in and jae movb xchg outsb cli rorl jno fs (bad) mov adc pop lods movsb rex.WRXB mov add mov out mov mov (bad) mov (bad) jbe adc hlt in rex.WR sbb cmp addl and cmp pop jmpq stc jb stc test or jmpq movslq cmp pop (bad) mov jbe (bad) sbb jnp add fucomip rex.RX vmovd mov out (bad) rex.WR rex.W rex.WXB loope xlat (bad) int cmp rex.WXB lock movslq jae std (bad) lcall clc sub and lret callq (bad) mov xchg push mov add (bad) pop cld (bad) lcall mov (bad) (bad) fistp loope lea jp mov sub mov sbb int3 mov (bad) jmpq sbb cmp cmpb icebp outsb sti subl addl rex.WRX out xor (bad) imulb clc xlat xchg push mov adc rex rex.RX pop mov movabs (bad) or or adc (bad) rex.R mov cli rex.WX (bad) mov (bad) divb push jbe jmp push sbb xor jne push jae mov (bad) popfq mov jmp pop xor cmpsb lods sbb negb xchg sbb and pop push lcall scas movb retq xchg in outsb roll cmp (bad) mov jb pop iret push mov stos jns callq and xchg rex.RXB fwait mov in lods (bad) sbb xchg jno xor push adc loope paddd (bad) jmpq (bad) movabs lods mov lret push pop add (bad) jp pop (bad) or rex.WRX pop add mov (bad) jo out cmp movabs sbb mov repz push loope xchg (bad) fild jl rex.B jbe test (bad) jmpq jae and or xadd rcr mov mov rcr add mov not setnp mov jmpq jmpq or jmpq jmpq jne test jmpq jmpq jne lea lea ror inc mov bts rol sub btr mov bt cmp jmpq je movsbl push movsbw lea mov jmpq xor mov pop cmp leaveq rex.WB rex.WR jae mov or sub push ja in pop or jb adc test push mov int callq or lods lods (bad) (bad) lcall es test mov subb (bad) cmc lock jmpq xor mov or lret sbb fsubrs addr32 and (bad) xor xchg adc (bad) sti (bad) (bad) fbstp xchg (bad) (bad) pop or jo xlat (bad) mov (bad) pop cmp rclb pop fwait lahf (bad) (bad) retq movabs lods jp mov pop loop pop in insb and rex.X (bad) mov adc loope out cmp icebp icebp add jg pop jmp scas movslq xchg scas addl callq jmpq mov sbb out push rex.R bnd (bad) xchg jp rorl mov int test jnp cmp xchg add stos cmp rex.WX rex.B movabs ds xor (bad) (bad) (bad) adc push cwtl lock sub and incl rex.WRX out or pushq (bad) (bad) sbb (bad) adc movslq jns jg mov addr32 movsb adc xchg push push xlat fcmovbe cli (bad) (bad) (bad) mov retq mov (bad) (bad) cltd mov pop mov out mov (bad) int rex.WXB repz lods (bad) (bad) (bad) xchg push callq lahf push or imulb mov (bad) (bad) in xchg push stos orl jmpq (bad) lock xchg xlat adc fcoml (bad) or (bad) movabs ja sbb push xor leaveq xchg sbb (bad) test adc notb lret add add mov rex.RX rex.R sub subl int sbb loopne nop cmp (bad) (bad) lcall or sub (bad) mov mov rex.RX (bad) jns cld (bad) (bad) ljmp cli (bad) (bad) fbstp pop sub in xor pop movabs cwtl ja (bad) mov rex.WR mov ljmp divb cmpsl ds adc adc movabs mov push andb ds sbb rex.X rex.RXB cmc rex.WR shll gs cwtl enterq mov movntq hlt cmp cmp movabs and mov pop sub lea sub movsl xor xchg adc (bad) fisubrl and sbb movabs adc test movsb stc (bad) xor cmpsb (bad) and and (bad) (bad) (bad) mov callq enterq loope test add out imulb mov in cmpsl or rex.RX add ss cld (bad) (bad) (bad) jl xor cli (bad) (bad) fild jg enterq (bad) xor xchg xor xor xchg lods negb rex.WRXB pop jrcxz movabs retq sub cli pushq xor jo and (bad) out (bad) pop xchg push fwait push icebp icebp rex.WB mov (bad) scas (bad) rex.WR add rex.RXB gs outsl fs imul add test rex.RXB add xchg add jne bsf xor test xor bt dec mov shl (bad) lock dec mov test test jmpq jmpq jmpq jae dec movsbw rcl setbe mov lea neg and cmp mov sbb not bts mov test clc sub cmc test repnz jmpq jmpq jne jmpq addr32 insl xlat pop sbb mov (bad) (bad) es mov scas sub lock (bad) cwtl (bad) idivl (bad) (bad) out (bad) fsubr add lret mov retq sarl sbb callq (bad) (bad) callq add (bad) (bad) scas out std fdivrs outsl cmpsl data16 popfq nop push lock enterq std (bad) (bad) jg xchg (bad) cmp (bad) fist jns imulb xchg rex.WR xchg je and mov xchg fwait xchg je retq pop sbb cmp (bad) sbb subl cs insb mov (bad) int3 or rex.X rex.RX push xchg imul mov ffreep pop lods sub cs rex.XB paddusw (bad) and (bad) xchg (bad) xor cmpsb cs (bad) add xor add rex.WR movslq rex.B insb outsl movslq cmp jmpq cmp jmpq jne setle pushfw ror seta mov clc clc cmc ror jmpq jmpq jb test cmp jmpq jmpq jo gs pop sbb lods mov rex.XB rorl (bad) movsbl subl rex.RX jne js mov fucomp and and (bad) rex.WB add jns jp and cwtl addr32 push mov loope lock (bad) outsl (bad) (bad) lcall negl mov outsl mov jg add pushfq sub notb mov loopne mov (bad) test mov rcr xlat rex.WRXB cmpsb (bad) icebp sub mov mov or movabs xchg xor ja cmpsl test mov jmp fxch adc sub rex.WRX cs rex.R fstpl callq fstps sub cmp adc mov push mov (bad) rex.RXB rex.RXB cmc jmpq clc test cwtl jo rex sbb sbb add outsl sahf movsw int test mov and cmp jg movabs test jg movsb sbb (bad) int and adc cmp imul (bad) callq icebp and cmp adc add fild mov jg rex.WRXB (bad) lcall rex (bad) (bad) fisttp add loop rex.WRX (bad) pcmpgtd add (bad) cs rex.WX (bad) fimul sub hlt fwait jp jl retq mov mov and xor retq leaveq jns xchg std movsl fstl subl sub lock (bad) jo (bad) data16 outsb mov callq mov xor (bad) loop jmpq fsts lods rex pop lea add mov leaveq shr not xor movsbl bts mov clc bt jmpq jmpq jne clc neg cmp xor not inc dec movsbw mov setl cmp add sbb stc mov clc stc test jmpq and (bad) pop sbb (bad) (bad) decb mov jb stc mov nop (bad) scas xlat rorl movabs (bad) in sub jae add addb jp cmp push ja cli sub xor rex.R ds stc fdivrl fwait mov jg (bad) insl (bad) push xor rex.WXB cltd pop sti cmp subb (bad) lahf jle test mov fwait pop callq (bad) xchg emms xchg (bad) cwtl adc rex.RX mov jbe mov mov pushfq movabs jne (bad) pushq pushq divl clc xor cld orl fadds rex.W bswap scas ss movsb fwait pop adc cmp add or (bad) sbb mov jp cwtl out es jl gs hlt movsb mov mov rcl mov jo iret xchg enterq (bad) decb out cmpl fidivr movslq mov lcall or rcr mov scas out and movabs clc cli (bad) (bad) (bad) scas (bad) (bad) (bad) (bad) rex.R rex.B int retq js movsl cmpsb cli fstps (bad) adc sub (bad) (bad) in and push leaveq pop or add mov (bad) (bad) xor faddl vcvtps2pd test retq and movsl jg (bad) push xchg rex.WRXB push ljmp sub paddusw cmp sub xchg rex.WRX (bad) nop push in or sbb movabs cs sub out (bad) in adc subl push roll or push test idivb xchg decl fsubrp sbb (bad) in pop jb mov jl rex.XB adc push fstpt lock jns rex.XB jns mov add mov mov sarb xor out iret rex.WRXB mov mov xor jb or (bad) jno js mov (bad) outsb jbe fs stos xlat rex.RXB sbb cmp or mov pop (bad) mov cld xchg mov clc mov adc (bad) jp add sbb mov xor add sbb jge and (bad) fidivr scas movsw xor add cmpsb push jne sahf rex.RX in (bad) ja movabs sub jrcxz pop mov in sbb jmpq cmp (bad) icebp (bad) (bad) (bad) mov xlat (bad) insb mov lahf pop or rex.X gs (bad) (bad) ljmp pop rex.WRB lret (bad) rcrb test and mov (bad) fild jbe xor cld sub and (bad) fisub rorb push scas jl jns stos popfq in repnz je mov adc xor insl or pop (bad) jmpq push and sbb xchg sahf cmp stos cmp sub add push rex.W rex.RXB gs outsl insb fs (bad) je add cltd (bad) mov js callq jmpq (bad) adc movabs adc (bad) xchg add pop cmp mov mov push mov out andl and (bad) in jbe movsl jb adc pop sbb jrcxz (bad) jbe add imul sub or lcall (bad) in loopne sbb cmp (bad) (bad) mov mov fistpl or pop (bad) sub loop cmp xchg push jae add (bad) adc test (bad) (bad) fbld sti (bad) (bad) mov add jmp xchg imul (bad) mov scas jbe or rex.XB jo jnp cmpsl jne data16 mov lea mov rex.WRB add movslq or jo mov cli pushq xor loope outsb jbe add xor sub xor rex.X outsl mov (bad) and shrl xchg xor rex es jge ja sbb push decl imul mov cmp jrcxz (bad) std sbb mov or rex.WXB (bad) outsl xor cmp data16 jrcxz xchg or or rex.WR jno and xchg cmp (bad) rex.WX (bad) (bad) (bad) fistpll jl rex.WR (bad) lcall pop xchg outsb movabs mov mov (bad) jns mov mov and mov rex.WB xchg lods std (bad) ds xor xor mov pushq out mov sub leaveq test fisttp int mov sbb rex.WB add scas jge fiaddl fwait jrcxz jns (bad) in and (bad) xor xchg adc sbb cmp sbb jle gs (bad) iret ja or xor vpcmpeqb repz sbb mov sbb mov xor rex.WX movabs test push sub (bad) xchg sarb fcoms lret mov decl int3 stos repz mov fisttp xlat and (bad) (bad) cld mov or insl or (bad) jns adc rorl push sbb movslq push lret (bad) add in mov (bad) xor fdivrp jb sub (bad) jrcxz fwait cmp mov jno sub loope jno add test push rex.WR mov in popfq add callq mov (bad) (bad) mov retq std xchg xor xor add outsl (bad) jge data16 (bad) movsw cmc rcll mov cmpsb out push js rex.B out jle icebp sbb mov mov stos sbb rex.B stos sbb fdivs cmp xor pop (bad) push (bad) and (bad) (bad) jg loope (bad) (bad) fdivl xchg or movabs clc cli (bad) (bad) fistpll rex.WRX repz cmp gs or jmpq movq sub or out jle (bad) push (bad) lea adc xor lods xor cmpsb (bad) (bad) cmp and cmpsl hlt fldl2t xchg or mov (bad) data16 sbb jmpq add and rcll scas (bad) addr32 rex.XB rex.WRB fwait imul fistpll ss (bad) ss (bad) jle,pn hlt cmp je xor repz rex.WRX add (bad) or mov movzbw mov add add mov stc repnz jmpq pushq jmpq (bad) sbb xchg addr32 jae xchg add ds pop in hlt shrb push rex.RX popfq add (bad) (bad) xchg adc (bad) test cs (bad) jne icebp outsb or insl jne rex.XB rcrl (bad) lcall sbb or mov mov xchg rex.WRB mov sub (bad) (bad) mov repz divb callq idivl jmpq mov (bad) lcall add (bad) (bad) fistp jo scas (bad) pop or sub add in push gs (bad) rex.WRXB (bad) cmp movabs cmp rex scas mov imul add xlat mov mov (bad) pop mov cmp rex.RX ja insb (bad) add rex.RXB gs fs jo gs rex.WB outsw add cld mov addr32 (bad) mov jno clc js cmpsb (bad) cmc and decl (bad) movslq sbb mov xchg xchg rorl (bad) rex.WRXB sbb mov sub jp rcrl ja fs stos cmp add mov push (bad) adc add (bad) fstps sbb shlb retq sub jl movabs data16 adc andb loope jnp icebp movabs cld (bad) lcall rex.X (bad) (bad) fbstp outsl int rcl rex outsl mull or xchg or and leaveq pop cs cli cmp xchg test xor push hlt jb (bad) lret nop add shrl mov out sbb je roll xlat adc push insb xchg xor lahf data16 xchg psubd bt stc stc imul cmc jmpq push not mov mov lods jmpq cmp cmp jmpq je jmpq callq jmpq jmpq (bad) xchg stos push cmp out rex.RXB jne fsubr mov (bad) and xor cmc xor cli jle hlt stos in rex.R hlt mul xor insb jb mov (bad) je (bad) stos adc (bad) fimul mov rex.B loopne adc (bad) (bad) mov loope (bad) lcall pop jg pop outsl xchg movslq imul or cmp in mov push mov cmp sub jb lahf pushq rex.XB xchg stc (bad) in cmp in retq and jle hlt pushfq rex.W in push add cwtl lock rol (bad) xor (bad) or gs stos (bad) jle in cmp (bad) outsl mov sub rex.WR loope and outsl mov retq sub stc add (bad) (bad) mov rex.X callq imul rclb loope pushq mov jb in fstpt xor xor pushfq sub mov (bad) fucomip mov cmpsl outsl xor add (bad) rex.WRB ja jmp fstl (bad) pop (bad) sahf fidiv rol or xchg shrb mov mov add mov cmc and xchg adc jnp ftst int subb cmp rex.X (bad) imul push or cmpsl xchg roll cltd adc (bad) (bad) (bad) (bad) jl jae or cli add mov cli xor lock scas (bad) (bad) pop adc andl and fdivr xor fsubr cmp loop (bad) mov (bad) addr32 repnz movslq loop (bad) xor or xor test out ds movsl (bad) xchg out (bad) out ss lods rex.WXB sbb mov jo loopne push movabs rex.WB (bad) (bad) int xchg sti (bad) (bad) incl pop (bad) rex.WX sti imul (bad) jns rex.XB (bad) adc (bad) cld out popfq sti std fcoml push or stos and (bad) lcall cmp push iret fnop (bad) (bad) fistp push and push iret js mov adc and lock (bad) in gs jae push push (bad) push rcl cwtl cmpsl jle xchg (bad) adc rex (bad) xor xchg (bad) loop mov or jns cmpsl out mov (bad) cmp scas (bad) add jo xor add jl cmp imul mov idivb push and shl lahf sbb push (bad) ja data16 push cltd push insb je bswap xor sub ror xor not mov sar or ror mov jmpq jp bt ror jmpq jae test cmc bt cmc sub jge callq jmpq jmpq ja rol not clc rcl sub setnp add sub bswap mov cmp mov bt repnz jmpq jmpq mov movsbl movzbw not movsbw pop retq jl pop retq insl sbb movabs loop (bad) mov xchg in rex.WXB rex.WRX (bad) xor add adc mov adc movabs push (bad) mov (bad) (bad) (bad) (bad) (bad) fdivl rol adc and es xor (bad) (bad) fbstp stos out sti (bad) (bad) (bad) pop add sub rex.WB xacquire rex.RB and in or int fwait sbb out in movabs rex.X xchg xchg decq xchg add out addb cmc adc ds rex.W xlat repnz callq mov xlat xchg jae add sbb outsl and pop movsb pop cltd push add xchg push xchg sbb push outsb sbb (bad) fisubl (bad) negl scas outsb (bad) push rex.X rex.WB and rex.RXB rex.WXB jmpq rex.RX rex.RX (bad) rcr mov jnp retq int3 movsb (bad) adc mov std (bad) (bad) (bad) movsb and pushq movsbl sub jmp loop pushq cmp loop test xchg fisttpll fdivrs (bad) jle lea push rex.B (bad) lcall jno jae xchg cli (bad) (bad) (bad) mov movabs or jp addr32 jg (bad) add sti xchg adc add stc cltd push cmpsb test sti (bad) mov mov jns fwait (bad) fdivs jge push callq sarl jrcxz fstp imul mov in xor movslq rex.WB xlat adc clc cs fwait retq nop or cs mov xchg test sbb (bad) std lods pop hlt adc and (bad) (bad) fidiv movabs or fwait (bad) sahf sub (bad) mov and stc jns adc sti xchg cld (bad) (bad) (bad) lcall sbb retq fstpt push (bad) loopne cmpsb cmpb es (bad) sbb cmp xchg jmp mov add cld (bad) (bad) jg iret cli (bad) lret cli (bad) (bad) ljmp jrcxz int rex.WB mov (bad) rex.RB xchg add mov out outsl jle xor pop (bad) mov sub jnp sti stos orl callq jo mov jne orl cltd push scas ss rex pushfq rex.WX lahf jne jmpq bts adc mov clc jmpq test stos adc sbb icebp sarb fwait imul rex.WX add fsubrp movsl xor lock movsb cld lret mov es je in int xor mov enterq lcall outsl jmpq (bad) cmp and movabs sbb (bad) sub cmp (bad) jbe js (bad) (bad) pop mov jp cld rex.WB jne (bad) (bad) (bad) sbb cli (bad) (bad) fistpll pop xlat test imul lahf adc (bad) push (bad) jge movsb push xor clc pushq push cld in (bad) fsubs mov mov (bad) movabs rep orl sub ss lods lods xor rcr (bad) sti pop (bad) (bad) std rorb outsb icebp loope callq (bad) sbb sub add and movb jmpq add rex.WR rex.RB jne gs je rex.WR outsl outsb push gs imul rex.WR (bad) imul add je sub mov jmpq je jmpq jmpq jmpq out add jno mov callq pop sbb outsb (bad) cld or mov xchg decl pop cmp sub (bad) sbb out cmp test (bad) rex.RB movabs (bad) (bad) lcall pop pop adc pop lods sbb xchg sbb (bad) (bad) (bad) test mov notb rex.RXB cli mov stc xchg (bad) sarl int (bad) (bad) fbstp fimull push jl mov cwtl (bad) cld (bad) (bad) (bad) out pop mov fcomip mov decl jl rex.WRXB cmpsl scas pop loopne push cmpsb orb sub or xchg add scas xor pop jmpq stc (bad) outsl (bad) (bad) fcoml cltd push push and (bad) push adc mov add sbb rex.X paddusw sti xor (bad) vminpd (bad) or movabs rex.RX add xchg add jmpq jmpq cmc cmc add jmpq add sbb je movabs rorl mov (bad) mov cmp rex.WXB lahf rorb add int3 rex.RX mov cmpsb out and or push stc adc fildll fwait xor icebp movabs cmp xchg jo pop fldt fldcw cmp pop sub jle (bad) in cmp enterq mov fnstenv rex.X not (bad) ss sbb push mov imul pushq retq rdmsr adc pushq icebp mov (bad) retq test stc cmp stos test (bad) pop jmpq xor std loope insl cmovns mov popfq in imul fdivrl in adc xchg xor imul sub rex.R xchg push movsl jl lock jl cmc std sub jns test in retq pop pop clc cmp sbb push pop movabs imul or int3 subl lods and cmpsl (bad) cmpsl cmovbe mov andl xchg (bad) pop (bad) fbld movslq sub mov test pop xor xor push in jl lret imul (bad) (bad) leaveq sub insl rex.WR (bad) push gs or push int3 rcrb mov (bad) cmpsl out pop (bad) leaveq mov test mov gs gs lcall stos rol xchg cld (bad) (bad) (bad) jns (bad) and (bad) sbb cmp rex.WRX pop sbb std push xor rex.B rex.RXB xor (bad) jmpq jno (bad) rex.WRXB (bad) int jne int test xchg addr32 xor stc rex.W jo scas fistp (bad) data16 rex.XB jae jmpq shl adc lock rex.XB rex.WB mov jge in fisubrl pushq movsl in and scas lock stc imul sarl mov int cmp cmp (bad) (bad) (bad) mov pop hlt cli add icebp sbb loop sub or (bad) lcall (bad) sti (bad) (bad) fistp mov jne add mov cmp add adc lret push lock fimul or loopne and sbb (bad) lahf out cmp fwait or jmpq (bad) scas jge jmp movslq je and leaveq add fdivl (bad) cmp test jns mov xchg out mov rex.RB rex.WXB jl (bad) adc rex.R out test (bad) add mov (bad) (bad) callq jmpq jne xor sbb xor bswap bt mov mov mov not add cmp sub mov jmpq jmpq jmpq push rol not sub sar mov test sub jmpq outsl insb xor cs insb add push mov push mov ds out fldcw stc jge (bad) pop int3 (bad) cmp xchg rex.RX mov mov (bad) sarb sbb rex.WR rex.WB fwait pushq jbe (bad) (bad) adc sub jae xchg mov std js cmp fiaddl add icebp stc sbb xchg (bad) rex.WB rex.WRX pop (bad) mov (bad) imul fimul mov clc or add movabs jae or xchg ds adc mov loop (bad) stc int mov and mov icebp (bad) jge mov out cmp pop rex mov cmp fstl test xor cmpsb mov rex.RXB ss jge in movabs rex jmpq jne sar test xor lea bts sbb mov test inc adc add ror (bad) lock mov test jmpq test movabs jbe jmpq mov test movabs mov rex.WX rex rex.W movb sub sti cwtl stos mov jbe add movsl pushfq rex.R rex.WRXB (bad) (bad) (bad) fisttp mov popfq sub add (bad) cwtl sbb (bad) cld (bad) (bad) jg fxtract jno sti (bad) (bad) fist mov xchg and jae sbb jns jg sbb cmp (bad) rex.WRX cwtl or test mov rex.X out mov movabs movslq mov jo sahf xchg movslq popfq xor and mov mov stc lock mov adc rex.X loop sahf mov scas js xlat adc xchg push pop mov mov mov or pop clc xchg push xchg sbb jb cmp sbb mov pop xchg stc test (bad) push jae mov and maxps (bad) in lret retq movslq loop in or movabs (bad) jo mov and sbb js out (bad) movabs jmpq int3 sbb jmp and jmpq gs movabs (bad) (bad) fbstp sti (bad) (bad) lcall popfq (bad) xchg imul test (bad) (bad) in out (bad) xor adc (bad) (bad) (bad) mulb pop (bad) lret imul mov sub pop movabs rex.WRB (bad) and movsl push decb mov (bad) sahf rex.WR out lahf rex.WRB pushq jmp xchg push xchg sbb pop (bad) std lods jnp loopne mov shll pop stos orl (bad) (bad) decl jge jmpq clc stc cmp jmpq jmpq lods loope jns mov mul imul pushq jb cmp push jbe rex.RB gs pop loope cwtl (bad) rex.WRXB jnp jns and jle rex.R rex.WRXB in cmp xchg push (bad) cltd enterq (bad) callq gs (bad) callq jg rcrb sti (bad) (bad) fildll pushfq jl adc and (bad) (bad) rex.B (bad) lret sub xor out pushq rex.W (bad) (bad) rex.WX orb (bad) (bad) sub mov pushq add mov add (bad) cmp sbbb shlb loopne (bad) jge outsb mov (bad) rex.R lahf sbb mov push mov mov and xchg rex.R sub cmpb jae loope pop (bad) mov stc jbe add pop clc xchg (bad) mov out (bad) add mov add push or mov or (bad) lock mov jmpq jmpq je clc clc cmp jmpq jmpq movsbw bswap setno mov not not movsbw mov bswap bswap lea lea jmpq stc stc stc test jmpq je cmp clc bt sub cmc jmpq cmp pushq sbb rex.RXB repnz vpaddusb cmp lods sub mov in lods pop mov mov mov iret incb in adc stos scas addr32 or pushq (bad) sbb imul insb jo loope (bad) out (bad) jle (bad) mov std xor jo mov rex.W repz and pop insl rex.WR mov out rex.X (bad) lcall (bad) cld (bad) (bad) fbld not popfq or jmp mov pop mov lock mov cmp push and ss or xor rex.RXB fstl mov lret leaveq cmp (bad) scas rex.WRXB (bad) (bad) push (bad) add sbb lods int mov rex.WX fwait jrcxz mov (bad) (bad) (bad) test cmp push xchg in cmc mov (bad) jnp mov cli frstor and icebp in stos and sub xor push jbe jns pxor test adcl test (bad) in mov cmp (bad) (bad) (bad) sbb sti adc sub lret (bad) sub mov lahf addr32 in idiv (bad) (bad) ffreep (bad) rex.WRX rex.R rex.R rex.R cmp rex.X out rex add mov mov mov mov insb cld xor (bad) lahf movsb sub mov sahf (bad) (bad) sarl in (bad) push insb push add sahf and scas out gs adc xchg repnz (bad) adc sbb fsubrl cld rex.XB xchg or cmp sub jmp add jmpq loop sub nop imulb lock (bad) mov sti xor sbb rex.WR fisubrl loope jo (bad) (bad) rolb adcb ficom cmp sbb add jrcxz and (bad) std (bad) lcall mov and sub fistpll (bad) (bad) mov (bad) cli (bad) (bad) fucomip rex.WXB rex.WRB push decb (bad) mov cmpsb mov mov lock nop pop (bad) xchg mov data16 stos in add mov mov callq retq rex.XB lods hlt add rex.W add add rex.WB sub hlt sbb sarl jmp (bad) stos pushq or cli (bad) rex lock (bad) mov rex.X gs jrcxz rex.WX rorl ja (bad) int sti xor mov data16 es xchg cld in pop sub (bad) (bad) cmpsb jle cmp sub rex.R push lret jbe (bad) jbe mov (bad) jp rex.WB mov mov callq sub out stc (bad) cmpsb push push orl scas rex.WR fmull (bad) stos cmp adc movabs mov cwtl cmp lock outsl sahf out sbb mov popfq xor (bad) jg adc (bad) (bad) incl loope pushfq and rex.RX rex.WR cmp std movsl jb add (bad) rex.WRXB mov lcall stos add cmc je push je pushfq add sbb cli xor es sbb pop adc movabs notb hlt cmp pxor sti rex.X cli rex.WX and ja stc imul clc cmc clc clc add jmpq jmpq jmpq or pushq scas pop stos sub sti ficomp xor cltd xor fimul mov es pop cmc adc push (bad) and xchg mov xchg roll stos (bad) lret scas (bad) (bad) (bad) (bad) jb loope rex nop or add sub push std jrcxz xor lods xchg sbb repz movsb lret adc xor push leaveq sbb andl mov rex out (bad) sbb mov mov lcall paddb (bad) ffreep in fcmovnbe loope (bad) pushfq cmp push lea rclb out rex.WRXB in sub pop pop cmp (bad) add pushfq adc insb mov pop int3 sub pop (bad) (bad) pop push test ss in (bad) adc (bad) ss xchg jae sbb fisttpll sub adc js movabs and loope mov adc mov (bad) std gs adc and add pushfq adc add faddl cmp movsl movq in lret fcomi xchg cmp mov mov sub fwait cmp (bad) repnz roll shrb idivb rex.RXB fdivl sbb lods pop xor and xchg add pop cmp sub (bad) xchg push stos (bad) (bad) (bad) lcall fisttpll shr mov shr (bad) in pushq rcll (bad) rex.RXB addr32 scas (bad) (bad) mov fdiv rex.WRX pop add cmp rex.W lretw adc or test cwtl movsl int sti jmp mov rex.RB pop xchg adc cmove and adc stos ficoml andb jrcxz sbb lods pop (bad) add test (bad) add mov out mov loope push xchg mov bts rol sub jmpq cs fimul sbb and xchg rex.WB rex.WRXB sub test jle int insb addr32 ficom lea or outsb popfq in cmc or sub jae add push rex.WX (bad) lcall adc cmpsl xor sbb push jl sbb cld (bad) lcall sbb jg sub rex.X lods hlt insb adc orl cmpl cmp mull int fidivl cmc sub cmpsl fistp xchg mov nop rex.WRXB pushq or sub fidiv add sbb cmp jl xchg (bad) lods push mov (bad) sub scas push std fdivl sub xchg (bad) add scas jge sbb mov cld sub pop rex.W lock movsb fwait jae xchg sarb (bad) andb jbe (bad) rex.WRB cmp pushq rex.WXB (bad) xchg add pop (bad) and cmpsl data16 cmc cmp rex.WX jns out (bad) pop jmpq jae (bad) stos (bad) xchg cmp (bad) rex.WXB leaveq add pop mov jg nop mov cltd js xchg add (bad) (bad) mov test (bad) (bad) fist pop sub setle mov add cmp xchg movsl add xor pop js callq pop pop mov insl test shrb cld cli or scas jns jbe sub xchg repz xor mov je (bad) movabs (bad) adc adc jbe in push mov loope (bad) (bad) ja in lods jnp (bad) cmp fwait jae mov or push rolb int3 rex.WR and and mov push jbe cmc popfq sub decl or jl push jrcxz f2xm1 mov push in rex.R ss sub es (bad) (bad) (bad) push adc clc sbbl add sbb std (bad) lcall movabs (bad) sbb es insb ja out jae xchg jp retq in sub push or xor (bad) adc sarl pop cmp repz and pop rex.WRX es xchg adc push add xor (bad) jns iret (bad) mov (bad) cmp rex.W rex.WRB sub rcll xchg sti xor (bad) outsl ja cmp stos subl xchg popfq rex.B callq movabs sarl (bad) (bad) mov clc or in stos rex.WRX cld insb pop sbb (bad) ja jle jge xor add lret (bad) (bad) adc (bad) adc imul addr32 (bad) lcall hlt pushq sahf push cmp (bad) mov test out (bad) lcall cmp (bad) (bad) fild (bad) mov pushq movabs push nop loope (bad) (bad) jns pop ds sbb sub jle xor mov or cltd adc mov jp outsl (bad) mov lods (bad) lret jno mov sub movabs cmc (bad) sub (bad) imul xchg retq cmova pushq popfq push add cmp or jmpq jb cmc stc stc bt cmpb jmpq jmpq add rex.RXB gs outsl fs rex.WB outsw jb (bad) je outsl outsb add fsubrl add movabs sbb sub jle fildll adc fidivl (bad) xchg sub and ss jns (bad) sbb xchg outsb or adc sbb fiaddl (bad) (bad) (bad) (bad) (bad) std movsl subl fs movabs std (bad) (bad) push sbb push mov cmp pop iret mov lea fadds mov out cmpsl rex.RB (bad) pop rex.WX outsl sti (bad) (bad) fbstp rex.WRXB test mov fisubr add rex.X rorb jns mov and xor outsl mov andl subl (bad) cs negb xchg xor cmp or jl push (bad) sbb jnp icebp rex.B lret bt neg ja stc cmc sub stc test bt cld popfw jmpq jo jae test stc clc cmp jnp ja shl add rcl or shl neg add rcr ror sbb rol xchg bt rcr shrd btc mov or add add not mov test jmpq movabs jns or pop add sbb callq rex.RB hlt rex.WR rex.X cmp adc mov insb fstpt jg mov (bad) (bad) fbstp (bad) ja cwtl shlb xchg sar (bad) (bad) jno rex.RXB es fs fs xor ss cmp (bad) (bad) test push xchg lret or and cmp cmpsb test add sbb xlat pop mov lret adc (bad) cmp jbe lock jne shll cmp xchg push movsb mov pushfq rex.RX test adc add jmp xchg imul (bad) xchg (bad) sub sbb (bad) scas (bad) rex.RXB sub jp mov add push imul (bad) inc mov stc inc mov shl bswap setb xchg mov bt bts dec mov jmpq add push (bad) je rex.WRB je pushq add adc test out jge in mov testb repz in mov cli adc in pmovmskb xchg mov (bad) data16 ss retq jrcxz sub sbb lea adcb (bad) lcall icebp adc add mulb lahf (bad) outsl retq mov divl test cld (bad) (bad) (bad) loop leaveq lahf mov (bad) (bad) fcomip mov es in (bad) cltd rex.R or jmp push out fisubr imul fmull cmp add retq outsb mov rex.RB popq lahf out mov or sbb rex.RXB in jge (bad) in sub rex.WRX rex.B (bad) jl repz out outsb mov shll negl and mov mov xor iret test pop jb movabs sbb test clc cmc sub jmpq loopne enterq mov insl pushfq rex.WR mov sbb mov mov je or jp in int3 (bad) (bad) (bad) fucomp test push mov test mov ss mov pop ds pop mov jns js (bad) stos or orb fcoml (bad) xor jmpq fnop jno jmpq mov pop xchg (bad) jg lahf add (bad) mov fimul subb cld (bad) (bad) jg out sub (bad) ffreep insl (bad) jne insb add add xor mov cmpsl (bad) cmp out gs stos sbb xor rex.WRB adc insl jmp rex.WR jnp xor repnz cltd stc (bad) jmpq mov (bad) jbe pop fwait push movabs fs mov popfq (bad) or sbb leaveq test stos rex.XB icebp imul hlt push (bad) cmpsl data16 sbb pop jno sub fistl (bad) adc (bad) (bad) mov xor std in cmc jrcxz jl (bad) (bad) (bad) fistpll sti (bad) movabs xor and rorb jmpq (bad) cmova pushfq movabs pop rex.RX (bad) lcall movabs fwait (bad) fcmovne gs add idivl push cmp retq lret sbb insb mov pop movabs in xor (bad) (bad) mov adc lods (bad) jb xor push rex.WRX in ficompl adc imul or rex rex.W nop mov rex.R nop enterq clc imul clc bt jmpq fidivrl push mov or test push movsl xor push fdivl add push repnz mov mov xor shrl cmp movsl fs push adc retq cmpsl (bad) (bad) (bad) (bad) (bad) jg in mov rcrb rex.WRXB pop test in movsb cmpsb out sqrtps cmp (bad) jle jb fstpl popfq or pop retq out cmpsb negb push test jbe rex.RB (bad) out jo lret xchg cmc (bad) fimull add stos jl add movabs insb je in (bad) (bad) (bad) jnp setbe sti (bad) (bad) fild icebp cltd iret xchg in lret sbb outsl loopne rorb rex.WXB gs mov cmpsl (bad) movsl (bad) scas sbb mov ss fwait push jmpq stos lret push mov rex (bad) fmull test (bad) push lahf scas sub insl jne (bad) rex.R movsb (bad) or add stc cmp cmp jmpq repnz jmpq jl pushq jmpq je bt cmp bt sub clc bt bt cmp jmpq jne add and mov test adc or sub cmp sub rol shld mov clc cmp bt bt sub cmc jmpq cmp jmpq mov mov mov iret insl cmc loopne sbb mov mov fdivrs movsl fs or mov fsubr add and pushq je mov repnz cld sub fwait or (bad) jg (bad) (bad) (bad) (bad) pop out cmpsb test sub sbb (bad) out (bad) xor xchg rex.WRXB in add es mov xor (bad) add gs (bad) (bad) mov xchg sti (bad) (bad) jmpq lods mov mov rex.WRX pop leaveq adc mov fwait sbb rex.RXB es fs cmpsb test sbb (bad) cs mov out mov movsl pushfq hlt xor rex.W pop and jne (bad) repnz sub push xor popfq rex.B cmp rex.X fs jp mov add sahf sub decl jmpq xor scas pop cmc adc addr32 movsl fs cmpsl ja and (bad) je out cmpsb (bad) mov (bad) scas sub and cs rex.WXB (bad) pop outsb mov (bad) rex.R fs mov sbb sahf rex.W jne mov xor mov xor cmp rex.WX jrcxz rex.RX gs xchg pop and jb sbb cs adc (bad) xor std (bad) lcall jo (bad) (bad) fist fimull mov xor or mov mov cltd rex.R rex.R or js and mov (bad) sub cld jl (bad) cli movabs jrcxz cli add mov hlt mov repnz test (bad) jbe (bad) movabs or bt jmpq adc sub sbb (bad) cmpsb (bad) mov scas pop ds flds cld or xchg es mov lret pop outsb popfq push rex pop outsb mov mov (bad) cmp mov leaveq (bad) xchg and adc cmp (bad) lcall insl mov incb stos imul xor or lret shll sub mov jo lret (bad) (bad) (bad) cmp in in addr32 (bad) (bad) callq int3 pop adc (bad) jp outsl mov adc push adc xchg cld xchg jb int3 stos rcll adc and std or test pop subb lahf jle push (bad) (bad) movsl and and movabs in sub rex.X and fwait test (bad) imul (bad) in mov retq repz (bad) mov add push xchg cmp test sub add loopne xor vpcmpgtd cmp jmpq jmpq jmpq jne not not bswap movzbl mov jmpq add neg mov clc cmpb jmpq int pop (bad) (bad) sbb movabs (bad) mov mov sar pop jo stc and adcb xchg adc sub rcl stos out mov sbb fstpt mov cwtl or (bad) (bad) (bad) mov and callq or pop add lret mov pshufb sbb cld (bad) lcall mov push in rex.W stos or rex.RXB pushq fsts jo loop cmp push rcll add lret (bad) cs rex.RB rex.RXB (bad) jge jae push loope mov (bad) out fs cmp mov jnp (bad) xor (bad) mov mov push xor nop pushq add lret jne sub rol mov or bsf adc sub jmpq fldl mov rex.WRXB and ja rex.XB jnp lret mov data16 out loopne and (bad) mov (bad) jae jle out jnp mov lret (bad) (bad) lcall fild push pop cmp repz loopne std (bad) lcall adc (bad) (bad) mov cwtl ja (bad) outsl cmpsb jg movabs subq (bad) imul fisttpll sbb xchg (bad) xchg adc cli pop mov pop (bad) int3 mov (bad) stc in rep fs rex.RX rex.RX imul test mov (bad) (bad) nop cmp rex.W add movabs push sbb es pop stc rex.W (bad) adc (bad) cltd push out push cmp or jl (bad) jl rex.X callq add jmpq callq jmpq add add add add add add add add cltd sldt rex add add rex add rcrl add rex add scas sldt adc add sbbb push rex add test adc add rex add stos adc addb cmp add add add rex.R nop rex add adc movabs add add add add out adc mov adc add sbb rolb jns sbb and add rex add (bad) adc loopne adc add adc lock add cltd sldt rex.B add cltd lldt rex.B add sub sub add mov mov mov movabs movabs pop insb xchg xor fisubr test lock mov movslq mov (bad) mov in (bad) (bad) (bad) fbstp movabs mov int xchg sarl mov cmpsb enterq (bad) (bad) cmp (bad) sti (bad) (bad) fild js mull jle push scas (bad) push cmpsb in add mov cmpsb push (bad) pushq push in pop out jge cmp movabs loop (bad) rex.WR push (bad) (bad) rex.WRX pop pop (bad) cs movsb mov (bad) (bad) xor push cmc add (bad) (bad) in rex.WXB rex.XB add mov rex.WX test in (bad) jmpq jne neg sar sub rol jmpq rex.X test gs cmp outsb sahf sub outsl sahf es outsl (bad) sub sub xchg cmp notl xchg xor (bad) lock add xchg cmp lock (bad) (bad) (bad) (bad) fldt enterq retq movslq push add xchg push (bad) cld (bad) lcall and (bad) (bad) fildll fistpl (bad) (bad) xchg (bad) cmpsl or shrb jp loopne (bad) (bad) retq mov andl in cmc or add xor out ds and adc (bad) scas (bad) mov movabs mov lret xor movabs (bad) (bad) jp retq xchg (bad) pop shll retq mov (bad) rex.RX js rex.X fidivr cld (bad) jmpq jmpq clc jnp test sub cmp cmp jmpq jne dec setno mov cmp clc sub btc shr cmc neg mov cmc test stc test sub test bt pushq jmpq jne stc btc neg ror sub movzbw bswap mov jmpq test stc sub cmp test test test cmp jmpq (bad) scas pushfq (bad) xchg sbb jrcxz cmp mov decl xchg in cmp lret add sub rcrb rex.X movsb rex.W jnp shrl mov decl jnp loop sub loop nop fdivrs adc (bad) sahf (bad) sahf sub mov pop xchg sbb lods sbb (bad) out pop loop test in rex.WRB cmp cs sub rex.X rex.WX hlt cmp (bad) clc mov callq push cmp xor callq (bad) test (bad) out (bad) xchg sbb repz xor ror cwtl ja incb stc mov retq add mov rex.RX xor rex.WR rex.RXB jbe adc (bad) xchg rex.X rex.W xchg ficom add iret (bad) (bad) in movslq int fdivl sub stos sub (bad) (bad) (bad) ss mov (bad) sub mov pushq (bad) scas pop mov cld cmpsl idiv adc scas pop mov or mov mov xor pop loop cmp (bad) (bad) jmpq sbb data16 int jne push rex.X mov rex.RB pop (bad) (bad) shlb (bad) xchg xlat (bad) xchg push flds rex.WX in push cmp (bad) and adc nop push imul mov (bad) nop cs (bad) xchg es or cmp add cwtl or out pop (bad) and sub scas cmpl sub xchg adc (bad) (bad) sbb adc push cs sti (bad) jne jns callq jmpq test jmpq mov movabs nop (bad) fildll mov push or loope out (bad) or imul xchg sub mov iret push jbe sbb imul mov outsb out popfq rex.WXB fldenv movslq (bad) (bad) jg (bad) cwtl mov jrcxz (bad) (bad) fist sti (bad) (bad) fistp mov push test pop sub xchg callq sbb sub repz xchg push (bad) jg (bad) cmc or mov lea lods stc shrb std (bad) cmp and fldl pop (bad) jnp jle (bad) sarb (bad) and (bad) and sub rex.R movslq rex.WB (bad) lahf rex.WRB (bad) cmp (bad) sub and imul icebp sub push (bad) cs sbb or not or cmp cmp insb pop retq rex.X rol int3 (bad) ja (bad) mov notl (bad) cmc xchg jae (bad) rorl loop mov add in movabs (bad) ficomp (bad) mov pushq sbb repnz (bad) xor or sub fdivrp cld (bad) (bad) jg enterq sti (bad) (bad) fbld cmp adc imul xchg rex.WRX (bad) (bad) adcl jp mov push sub mov (bad) (bad) out movsb (bad) rcl pushq rcl cmp mov push stos (bad) out lock es mov movabs mov jae repz or js loopne add rex.RB je jb movslq jae (bad) fsubrl (bad) adc adc mov fwait jae movsb jg adc xlat movsb mov or add mov add loopne cld div sar mov sti hlt mov (bad) in movsb cmc callq or (bad) out (bad) repnz jrcxz or out adc sti or rex.R iret mov lret hlt cmpl addr32 movslq xchg int3 push test rex.WR (bad) xor out movd rcl mov sahf (bad) pushq push cmc jp cmp fnsave (bad) (bad) mul rex.R rex.WRB mov xchg (bad) idiv mov (bad) hlt xchg xchg sbb lret (bad) mov jbe hlt and mov (bad) loope xchg int (bad) ja xlat lret mov in (bad) push pop xchg ja sbb and adc jl rex.WXB xchg (bad) stos (bad) xor (bad) (bad) not or push rclb pop sbb in (bad) sub or gs adc jg ja adc pop pop push push adc (bad) cmp xor (bad) adc add sti notl jrcxz fcmovnbe adc retq mov scas ljmp int add xchg (bad) mov xor hlt callq xchg cmovg lret nop xchg (bad) jle hlt (bad) xchg (bad) xchg adc adc (bad) jg xchg movsb adc mov sbb rex.X movabs js clc cmpl (bad) xchg jbe roll stc lock lahf fs fwait outsl push add leaveq mov xchg adc push iret (bad) sub (bad) out or in cmpsb hlt xchg movsb out sti mulb fdivrp (bad) mov xchg cmc xlat test xor rex.R push fdivrp mov cmc xchg test (bad) fdivrp in hlt ss rclb testb (bad) in hlt (bad) fdivrp mov xchg cmc (bad) test rex.WRXB xor movsb xchg fdivrp xlat sbb push ds (bad) mul mov jle sti xor push (bad) je xchg test out jne (bad) (bad) ss jbe (bad) rex.WRXB gs xor ja sti xchg mov test xor push movsb xchg fdivrp hlt (bad) xor xchg add hlt movsb xchg fdivrp (bad) mov rclb rex.WRXB (bad) movsb xor xor rex.RB xchg lret rcll (bad) sbb add (bad) rex.RB cmpsb (bad) popfq push add xchg addr32 mov sahf (bad) push (bad) int jle sub adc cmp pop sar rex.RB movabs pop fisubl sbb jno (bad) (bad) addr32 or mov xchg adc rex.RXB (bad) sbb or ja jo je pop rex.XB rex.RXB fwait jne jge adcl repz pushfq mov xor fwait sti lods adc pushq mov pop add rex.WRXB push lret xor xor test adc hlt jne (bad) movsb je movsb xchg loop xchg jg (bad) (bad) es pop mov push adc movabs cmp or xor xchg je jo push xor rex.WR test and xlat pop out push in addr32 rex.XB (bad) sbb (bad) (bad) xor sbb jno or movslq notl es adc sti test xor rex.XB push (bad) xchg testl pop pop (bad) loop mov imul out mov xchg je hlt movsb push lcall (bad) (bad) ss xchg test rex.WRXB xor movsb push fdivrp mov hlt divb mov cmc movsb ss jbe mov stc mov jne (bad) (bad) push xor hlt sti (bad) mov rclb xchg test rex.RXB divl (bad) sti xlat jo hlt (bad) mov mov jne push shrl rolb mov rex or add hlt repnz int3 sbb push or adc in add hlt sub in hlt xlat or mov rex.RB adc mov xchg es mov add fiadd (bad) in gs leaveq (bad) fist push pushq movabs clc (bad) mov or push mov faddl loop pop sahf push xor or fidivl and jle fstps repz (bad) (bad) xor out (bad) icebp sti cs add js xor cmp (bad) or movabs outsb rcll mov rex.WRB pop (bad) adc (bad) mov or imul xchg out (bad) retq adcl pop xchg mov mov in adc jge adc or jp adc sub rex.WRX lret cmp andl scas sbb push xchg xchg (bad) adc xchg shll (bad) rex.WRXB adc xor xor cmc rex.RB out or addb loope xchg add push and mov (bad) xor cltd fnclex mov rex.B mov clc mov cmp push (bad) (bad) fmuls clc data16 (bad) adc jae,pt addr32 add cmp imul (bad) add jns (bad) and fstl pushq test jrcxz (bad) (bad) cwtl retq pushfq (bad) adc loope and popfq jnp (bad) xor (bad) pushfq sub and lea push sub (bad) (bad) (bad) jne adc lret (bad) int3 sub fwait adc cld (bad) (bad) add push (bad) jno jge fsubrs jbe (bad) and test adc movabs (bad) cmp sbb sub (bad) mov data16 repnz xor sti mov sub test jne (bad) sbb or clc ds rex.XB movsb and mov scas xor cli (bad) (bad) mov mov lea sarb (bad) adc fs adc lret pop (bad) ficoml popfq (bad) and adc jns scas mov xlat or (bad) and and (bad) or mov (bad) (bad) jmp out ss (bad) mov fisubrl push push rex.WR rex.W rex.R cmp callq rcr or fistpll orb (bad) xchg testl fnop in iret (bad) or mov adc (bad) xchg xchg fs rex.WXB xor add (bad) (bad) nop mov mov rex.WRXB jnp pop stc movabs pop xor add movabs stos cltd (bad) mov gs xchg mov iret je hlt (bad) or xor (bad) xor fdivrp (bad) mov (bad) jbe xor xchg popfq nop (bad) sbb lock push adcb je pushfq rcr rex.WRB mov movsl push or (bad) or movsl push sbb mov rol (bad) pop or (bad) (bad) test mov (bad) rclb adc (bad) (bad) hlt (bad) int3 movl hlt nop push (bad) lock xchg adc rex.WRXB xor out (bad) fmulp adc jo adc cld cmc mov mov (bad) jl adc sub (bad) rcl mov (bad) ja je push cmp sub xchg rex.WRXB add (bad) mov pushq fdivrp cmc mov rolb rex.RXB xchg (bad) xor xchg jne (bad) sti hlt mov mov (bad) mov shlb cmc and mov xchg mov fs ss in in xchg rex.WRXB xchg xor sti iret test adc xor rex.WR (bad) mov rorb rex.WRXB fdivrp test sti scas mov (bad) rex.WRXB (bad) fdivrp outsl mov cmc in test rex.WRXB xor add sti mov ss adc sti (bad) jo adc in adc jl sti data16 sar cmc incl lahf rex.WRXB xor (bad) mov movsl cmc test pop rex.WRXB xor movsb (bad) sti fimul adc adc sti push mov (bad) rex.WRB xor adc lea mov mov sti (bad) cmc xor sti jae jo rex.WRX mov repnz repz retq fiadd xlat (bad) or cmc rex (bad) sbb orb test rex.WRXB sbb movabs movsb lods fcmovbe movslq (bad) test rex.WRXB loop jrcxz sti sub xor rex.WXB std sbb mov xchg (bad) or pop adc test sub pushq fdivrp (bad) mov sarb fdiv cmp sti jnp js pop cmc clc test rex.WRXB xor mov xor movsb sbb sti popfq cmc pop test (bad) xor movsb fcmovu sti fstpt sbb xchg xor sti rorl sbb push sbb cmc jno sti mov mov (bad) xor cwtl cmc (bad) sbb sbb shll cmc loope sti (bad) rex.WRB sbb movabs sbb sbb mov sbb rex.WRB imul test sub sar and sbb cmc cmp fiaddl xor sti sbb mov add xchg (bad) mov (bad) in xlat stos (bad) (bad) adc mov add or jo adc or movl iret repnz scas enterq movabs or mov pushq xchg (bad) (bad) adc add push je out loopne in adc fild xchg callq adc (bad) sbb popfq (bad) adc cwtl mov incb xchg adc rex.WRXB (bad) push (bad) je lret and xchg pushq int mov test mov hlt (bad) test add xor jo or fsubp and fdivl lahf addr32 insl scas jl mov add xor push movl lea pop mov test fdivl or push (bad) cli mov fs xchg rex.RX pop lret xchg sbbq iret pop adcb jmp cmp jae jo xor or pop mov or or ja jge addr32 adc shrl rex.RXB mov xchg or jb xchg jl rex.RXB jg repz lret mov test test movabs lods sub sub fs xlat retq (bad) add rcrb jge (bad) (bad) jnp jmp lret jo iret testl (bad) cmp or mov orl enterq shll repz repnz fs mov (bad) jge (bad) clc hlt test mov clc in test adc sbb cmpsl jo (bad) test out (bad) imul jnp pushfq nop (bad) xchg rex.RXB cmp hlt rex.RX add and mov cmpl (bad) xchg or and lock insb test movslq test mov xor test test movsl sub xchg ss (bad) test fild icebp push stos addr32 lock rex.X movsb fadds fcoml jg enterq lock xchg test out xchg (bad) out (bad) retq ds push (bad) iret addl je test push push push jo ja fdivrs (bad) ficomp rex.W or jbe (bad) out lret push test sbb xchg in hlt jmp in jrcxz (bad) rex.WX jo in (bad) pop xchg hlt test cli repnz rex.XB sbb addr32 test or add insb mov in mov rex.WRX repz cmp in iret movsb test add rex sub (bad) test mov rex.XB mov test addr32 (bad) roll (bad) xchg sub in iret test adc retq pushfq addr32 push lea mov or cmpl (bad) jno mov jge or (bad) xor lods divb cmpb or and add add rex.RX mov retq in testl (bad) out fbld data16 pop xchg (bad) xlat cmp lock (bad) adc callq scas and or pop mov add mov rex.R fwait jnp cmpsq movsl notl not movsb xor test (bad) loopne (bad) rex.WR (bad) testl fdiv cmpsl mov fnsave test (bad) mov xor (bad) hlt xor xchg mov xor rex.RX test xchg or cltd xor div xchg ja (bad) rolb enterq rex.XB rex.RXB leaveq mov hlt callq (bad) rclb jnp lods xchg cmp js (bad) hlt test test rex.WXB rex.W xchg insb mov xchg cmpsb fildl adc jae (bad) xchg mov movabs pop cmp mov rex.XB rex.WXB mov lods repz rex.WRXB xchg rex.RXB (bad) (bad) sub add lods in test or cmp xchg test lret addr32 push xor movsb (bad) repz and int3 addl test (bad) mov jmp es rol (bad) stos sub (bad) scas imul mov repz (bad) pop int pop imul imul mov mov xrelease pushq (bad) add repz add jl xchg (bad) popfq movsb idivb out rex.RXB jl rex.WB repz rex.WXB adc mov rex.X data16 xchg rorb jbe out (bad) movabs xor (bad) adc pop (bad) rcr xor mov jrcxz gs (bad) hlt sti mov hlt divb mov cmc movsb fisubr rex.WR mov sbb fs (bad) adc jmpq (bad) mov (bad) lock (bad) rex.RXB cwtl mov adc jbe xchg xor movsl mov nop adc (bad) sbb notl shrl or xorl xchg outsb ja (bad) cmp jp pop and (bad) sahf iret mov add movabs sub (bad) xchg sub adc nop cmpsb in popfq adc fdivr cld add loopne enterq (bad) mov xchg and push (bad) rex.XB sbb (bad) (bad) xchg movabs fistpl jp mov or pop and adc clc cmpsl rex.RB rex.WRXB xchg leaveq mov (bad) adc xchg scas (bad) cli adc ja out adc loop pushq adc mov nop cmp movslq fdivr and loop pop fs jmp xchg pushq xchg mov adc mov rex.RXB sbb xor out js sub jmp rex shlb adc sti mov loope or fidivrl and (bad) jmpq mov icebp imul adc jp adc jmp mov fs stos cwtl (bad) xchg pop (bad) adc pop (bad) (bad) push adc and rex.WR sbb (bad) imul adc (bad) fdivl (bad) adc adc mov shrb icebp fs fstl in stos mov jns and fidivl and repz add mov imul rex pop mov pop shll add lret adc rex.XB xor fistl adcl adc (bad) (bad) (bad) adc loope sub lods rex.WRXB adc jb stc mov sbb rex.RXB (bad) leaveq enterq out add movabs rcll scas mov adc jmp (bad) pop and movsb retq (bad) hlt xchg notl movsb add ficom mov mov rex.WX adc fdivs repz pop popfq push xchg (bad) sbb pushq cmpsb (bad) xchg lret scas loopne rex.RB rex.RX movslq sbb (bad) loop fsts adc fildll and mov test or int3 mov adc add xor (bad) rex.WRB (bad) (bad) cwtl jnp rclb rex.RX adc (bad) pop repnz adc test lods pop retq cmpsb lea rex.RB stos retq fmuls imulb adc adc fstps sub pop pop (bad) (bad) je test gs adc testb es popfq stc (bad) (bad) adc (bad) or pop fsubrs sub imul sti and (bad) adc mov xor adc fwait ja loope movabs movabs mov rex.WR (bad) callq pushfq pop (bad) (bad) push xchg neg lea clc xchg (bad) mov adc adc push jg add adc (bad) mov adc cli sbb adc (bad) pushfq mov adc sub adc xor xchg insl orl add pop (bad) jmp loope or scas adc (bad) cmpl js (bad) xchg adc (bad) int3 xor sbb adc xorl or push mov mov rcll test and int3 or push pop mov lea adc in (bad) cmp add rex.WRB rcll xchg push xchg sbb adc pushq mov adc mov mov rex leaveq (bad) cmp imul repnz adc cmc fcom stos rex.RXB fstpl rex.XB rex.WX sbb jl (bad) adc mov movntq jle rex.WRXB jmp jbe adc stos or rex.RXB jns int adc (bad) sarb add adc mov cmpsb (bad) cmp (bad) loop sub out mov add cmpsl cld and rex.WR and ds sbb rex.WR sbb cltd adc mov mov sub lcall cmpsl (bad) stos gs rex.X jno pop cmpsb or cmp punpcklwd lret (bad) add xor add sub movsb fldt add mov (bad) js hlt adc in pop adc sbb addl pop mov fwait adc pushfq (bad) loopne rcr pop test stc (bad) mov idivl scas clc jmp fbld mov jrcxz add add test sbb adc rex.RB sahf (bad) movsl sub adc stos rex.WX rex.WB mov rex.RX jne movabs rcll outsb sub mov pushq rex.XB imul sbb pushfq ds pop (bad) or sti (bad) xor and ss mov fimul (bad) jns add movabs add mov and test loopne rex.XB adc rex.WRX pop adc rex.RX (bad) rex sub xchg sbb adc (bad) (bad) mov adc cmp jne jg (bad) rex.RXB fidiv clc incb adc repnz jrcxz and adc loop adc adc or mov cmc movabs jo adc lret vandpd xchg adc outsl rex.WX lock pop adc xchg jmp (bad) lock insl rex.XB andb retq xor imul lret jbe adc lods gs loopne loope or adc sbb (bad) jge icebp sub rex.WRXB xchg (bad) sbb rex.WX rex.RXB jb lret rex.WR (bad) pop rex.WRXB movabs xor mov (bad) rex.RXB adc mov lods pop adc adc nop sub adc jno adc sti cwtl enterq push jns (bad) fwait sub xor cmc in or and loope rex.WRB fisttpll or xchg icebp lock faddl (bad) adc lahf mov loope xor add mov cmp cmpsl adc fs adc scas add orl rex.W fisubrl xchg sub leaveq adc retq mov clc xchg adc fldz push (bad) adc icebp add cmp test insl (bad) cmc int xor movabs pushfq or (bad) lret xor flds (bad) imul mov adc shrb lret adc out jb pop adc push xor or imul push shlb lods int3 mov jle cmpsl rex.WRX adc (bad) mov mov adc sbb adc retq fmuls (bad) testb push jp mov xor mov outsl (bad) mov rex.WRB adc (bad) jle mov xor jnp adc cltd push mov adc (bad) (bad) sbb iret push adc fs add mov cltd (bad) (bad) rcl (bad) clc movsb repz jg (bad) fs mov movslq adc sub enterq adc lods jbe adc xor sbb fs rex.RB leaveq jb iret loope adc int3 icebp adc sub shll shlb movabs stos or (bad) jne push icebp adc jb fisttp jns mov rclb mov adc adc adc jne (bad) rex.WRX rex.WRX rex.W cwtl (bad) xchg sahf xor adc icebp nop mov or jrcxz (bad) pop popfq mov (bad) jmpq mov (bad) adc xor add xchg outsl js insl adcb cmp xchg adc jae jle rex.B stc fsubrl mov leaveq adc and cmpsl imul lret rex.RX xor (bad) mov sarb mov add (bad) (bad) push in movabs jrcxz mov cmp (bad) xor xchg sub adc cmc lods stos (bad) adc jae (bad) movsb gs cmp xchg jno (bad) cmc (bad) out ss imul or xchg adc lods ror rex.XB and lea (bad) movsb mov (bad) adc add rex.WRXB adc xor fucomip adc popfq cmp mov jge adc push rex.RX ds (bad) sbb xchg (bad) adc fisubl cmp mov pop xchg sbb lret fwait pop add gs adc imul lea pushfq push movabs insb js or rex.R adc push (bad) (bad) pop (bad) adc xchg rex.RB test (bad) cs mov ficom movabs rex.RXB jg sbb mov scas nop or hlt pop adc pop out mov add add (bad) jne adc rorl jg es mov (bad) ss rex.WR (bad) int3 mov pushq mov jb data16 pushq fs and jae adc xor mov pushfq loopne and in or vcvtss2si and repz movb pop (bad) in adc adc (bad) xchg (bad) adc push pushfq rcll mov out lock sub xchg insl jno movabs out adc es jo push sbb adc (bad) rex.WB cmp lods je lahf sahf pop (bad) adc sbb cmp rex.WB rex and enterq outsb adc (bad) mov rex.RX mov xchg xchg (bad) pushfq std adc mov enterq fistl adc jo clc (bad) rclb icebp test and or xor in push lods push adc xor sbb notb sub pushq jns leaveq mov enterq add rex.RXB xchg fwait xcrypt-cbc cmpsl push push (bad) out mov mov add ds enterq adc (bad) icebp (bad) sbb mov adc and push ja jmpq adc and in clc (bad) in fistl (bad) rorl popfq pop xchg nop lea xor (bad) or mov rex.RX sbb xor jo fsubl mov adc (bad) leaveq (bad) sub lahf xchg rex.XB out (bad) stc (bad) add outsl cltd scas adc rex (bad) rex.RXB xchg push test rex.RB insb (bad) test (bad) scas jbe lret adc mov adc xor fildll (bad) xchg xor and jns sub mov cli rex.RXB cmpsl in lods retq (bad) pop xchg cltd xor rex.X stc jge mov add rex.R adc mov out xor and (bad) stos sti (bad) mov idivl cmp xor adc and clc icebp and fcoml pop jmp xor pushq outsl clc rex.RX mov cmp cmpl rex.WRX cwtl int3 mov adc cld cli adc test sub retq adc (bad) add adc rex.X insl decb rcl mov adc cmpsl adc movslq in adc lods std adc clc lahf cld (bad) xor rex.WXB cmp rex.WRXB mov and mov xchg js (bad) cmp adc or nop sahf adc cmp add jmp mov std testl enterq clc (bad) cmpsl pop push fiaddl jnp sbb adc lods push or adc jno (bad) jrcxz cmp xor sbb rex.WX pop cld in pop movabs (bad) sbb lock (bad) loope pushfq test xchg out adc repz rex.XB sbb adc jle pushq (bad) (bad) cmpsb mov adc rcr mov and adc lret rex.RXB out fbld adc in (bad) cmp sub and (bad) (bad) loop stos out add outsb (bad) lods (bad) (bad) xchg lock pop jl (bad) adc fdivrs push rex.X clc ds retq (bad) push iret adc cwtl rcl sub push rex.X or movabs xlat rcrb test int3 pushq mov rex.WX sahf fs sub mulb adc outsb movabs (bad) jp adc adc (bad) jnp sub rex.RX rcr add rcrb test pop lock or callq ss and xchg sbb adc jl scas mov lret retq sbb jno mov adc push adc clc xchg jbe (bad) test xchg sub rex.XB xor shlb (bad) gs adc add movabs sub mov jne sbb (bad) (bad) cmp fsubl xchg jmp mov adc pop pop movabs mov (bad) movabs loop test (bad) movsb stc mov adc outsb xor mov cmc test (bad) adc jb rex.WXB adc movsb adc (bad) in adc jrcxz mov adc cmpsb rex.WRXB mov repnz (bad) fidivr je (bad) lahf xchg (bad) sub push rex.WXB loopne pop cmp or add adc (bad) pop nop movabs and and cmc int3 rex.WRB test push je orb adc add (bad) movsb xchg sbb jle mov mov adc cmp loope adc sahf xchg mov (bad) stc and xchg clc pop loop sbb sub movslq (bad) xchg cmc adc xor mov movslq sti xchg add mov jmpq push in adc (bad) or (bad) test or xchg stos movsl xchg sub lods xchg (bad) (bad) add out (bad) mov loopne repz out mov mov repz rex.RB xor xlat or jae popq enterq jmp fbld push rex.WXB (bad) negl or rex rex.R (bad) cmp cld pop sti jae pushq pop outsl xchg addl rex.WRXB sti rex.WXB sub rex.XB mov mov adc xchg notl fstpt rex.RXB adc mov mov mov xlat imulb adc mov adc xor fisttpll gs xchg pushfq (bad) jne rex.W sbb sbb popfq lret sbb lahf rex.WRX cmp pop rex.XB outsl fnstenv rex.RXB fwait mov sbb (bad) lods pop test out cwtl popq xorl retq mov ja jns xor fs cld rex.WRXB rex xchg out movabs jl (bad) sub rex.WXB (bad) sbb jb push mov pop xchg popfq cld divl pop pop rex.WR xor xor cmpsl (bad) (bad) add out loop movslq cli iret scas cmp xor xchg cwtl out (bad) adc insb test popq adc pushfq fdivl (bad) sub movslq cwtl (bad) or rex.XB rex.WRXB mov rex.WXB icebp mov testl push or (bad) mov adc rex.RXB push sahf out loop rex.XB sub jmpq callq clc add sub cmp shld lea mov bt cmc cmc cmp cmpb jmpq jmpq ja clc clc jmpq fisttpl mov int (bad) push fistpll (bad) std test mov xor (bad) (bad) iret (bad) ds (bad) jg in sbb cmp adc shrb push movsl push cmpsl cs movsl test jno xor ss (bad) (bad) (bad) pushq std sub jne mov out or (bad) pushq insl imul rex.WRXB mov and pop rex.RXB (bad) (bad) (bad) adc add jno lock rorb icebp or retq rex.WRX pop hlt sub mov sub cmp fiaddl push lahf cli and movabs adc sub (bad) add cmp lock (bad) out cmp xchg scas rex.RX mov rex pop shrb xchg je sub shl mov not add shr xor sub or mov cmp cmc bt test jmpq jmpq je movsbq shl not shrd push lea bsf mov sar mov not sub bswap movsbw jmpq or jmpq cmc lea add xor es shlb cmpsb rex.WRX rex.WB xor (bad) mov xlat notb push (bad) out sti addr32 rolb (bad) int xor sub jge lret (bad) jg mov (bad) jmpq fisttpll scas out adc jg push rcrl loop mov jl,pn std (bad) (bad) fild nop mov mov mov mov xchg adc and sbb mov (bad) xchg iret xlat rex.WRXB int3 rex.WR cmp (bad) push mov and and (bad) adc scas addr32 mov cmp sbb repz fadds (bad) xchg cmp sub in sbb adc (bad) std adc retq (bad) ficomp jns xchg insb (bad) (bad) lcall imul mov popfq add jne (bad) xor mov xor jbe or shlb pushq lock (bad) pop mov (bad) std (bad) (bad) jg lahf out js cld (bad) (bad) fisttp loop and jno rex.XB (bad) je je imul cmp sbb (bad) scas pop (bad) adc adc jg out xchg (bad) fsubl mov enterq stc xor (bad) or rclb fimul and jno (bad) xchg adcb cmc xor insl cmc xchg adc add fcoms mov (bad) jmpq movabs leaveq xor (bad) retq adc scas in fadds repnz es pop jl cmp cli rex.RXB rex.WR jnp std xor test xchg insb std jns mov adc std jae mov mov cltd fild repnz test add jns loope ds rex.X movslq pop fildl shr jae (bad) clc add mov rex.WRX (bad) movsl std pop push sbb subl pop (bad) fwait jge xchg test pop sbb cmpsl push out int mov (bad) lods cld mov xchg sti in pop cmp pop movabs scas mov and cmpsb mov sub cmp out movabs rex xchg mov lock (bad) callq setge add movzbq mov stc stc bt cmpb jmpq callq jp add ror add mov test jmpq fldt pop rcrl (bad) xchg movl es mov cmp rex (bad) (bad) xor (bad) shrl movabs fucomip and xchg (bad) hlt in stos push sti mov add jrcxz (bad) in mov add (bad) mov (bad) (bad) (bad) cmp nop and std (bad) lcall push (bad) add cmpl jo out test lret cmp icebp (bad) adc or jno rex.RX retq lods rex.WR rex.RXB rex.WRXB (bad) lcall pushq mov or xchg jno test lahf js xor stos push mov test cmp pop pop scas push xor std js (bad) rex.RB rex.WXB repz jo flds movabs (bad) sub rex.WX rex.WX rex.WRXB insb mov (bad) sbb pushq callq (bad) cmc test rolq (bad) jb jns mov add jae stc cmc cmp bswap lea bswap movzbw pop jmpq rex.RX sbb push xor (bad) test add movsw jne cld xlat (bad) in rex.WRB rex.W rex.B xchg push je sbb test (bad) sub popq scas jno (bad) (bad) (bad) (bad) jg add cld (bad) rex.WRX lea mov cld (bad) (bad) pushq jb cmpsl (bad) sti (bad) (bad) fbstp stc push mov (bad) (bad) fsub in push add addr32 jbe adc xchg adc mov ljmp sbb out mov shrb lods (bad) mov pushq sub mov movslq or (bad) rcrl jae rex.RX rex sahf rex.RXB rex.WB rex.B mov jrcxz cmc push (bad) not jne lods fnsave cmp rex.WB rex.WXB mov lret shlb or clc add xor not mov bt cmc test jmpq jmpq cmp movzwl rcr btc btr add mov stc cmc bt add bt test mov stc cmp clc test jmpq (bad) lahf scas sbb sbb idiv sub (bad) (bad) es mov int test (bad) sarb rorl shlb fcomi mov rex jrcxz cli and testb fdivrs sub loop pop clc movabs adc mov test (bad) movabs int3 rex.WXB lea or (bad) iret (bad) cmpsb test push mov mov (bad) lods rex.WX adc movabs (bad) xchg int cmp push mov subl fldt add fsubrl (bad) pmaxsw lock xor (bad) out rex.B jp mov (bad) test mov (bad) mov int xor (bad) push std jge sahf retq jb (bad) xor or movabs test leaveq sbb mov cltd jns popfq rex.WXB cmpsl (bad) rex.WX cmpsb pushq lods movsb xor cmpsb and lods cmp xor cmp js rex.WXB add pop lea (bad) cmp push rex.WXB fstpt shll rex.RX jnp sub or (bad) xor movsl movabs jmpq jne cltd jns push xor jmp push xor (bad) xor mov mov (bad) movabs sbb lahf and xor (bad) shlb sbb xor movabs movsb jmp xor rex.RB mov or in xchg (bad) (bad) fs icebp pushfq sub iret cli and sbb mov xor sarb rex.WRB xchg jge mov add rex.WX (bad) sub jp movabs adc rex.RXB (bad) adc rex.B cmpsb in and sti outsl sub movabs xchg (bad) (bad) pop push mov (bad) (bad) jmpq rex.WRB lret (bad) (bad) lcall lock lahf cld (bad) (bad) incl jl mov cmp xchg retq pop cli mov ds in stos lods out in mov xchg pop loopne cmpsb popfq jne fistpl loopne rex.WRX push xchg jp cli xor cs and in rex.WB rex.RXB add sbb scas in hlt cld and push add push rex.WRXB (bad) (bad) lret sbb adc cmp rex.WRXB rex.WX xchg pop xchg adc jge cmp rol cmp pop jb shll (bad) sub jno xlat pop xchg mov xor or movslq std (bad) (bad) (bad) or (bad) xor out mov cmpsl or jle (bad) (bad) (bad) rex.RX (bad) mov cli (bad) (bad) fildll cmp xchg roll or rex.X clc (bad) mov pop mov repz xor cs rex.R jmpq out push (bad) lea (bad) fldl jb enterq push mov mov cmp jmpq and mov data16 cld sub adc cs sbb pop pushfq movabs cli xchg psrad (bad) sbb rex.W fimul loope imul insl sbb xor pop jo rcll mov add (bad) jne sbb (bad) loopne (bad) rex.WRXB hlt sbb (bad) mov jne push or and insb and (bad) mov xor (bad) lcall adc (bad) in lods pop lods jrcxz (bad) mov gs lcall rex.WR (bad) (bad) fist add pop enterq xchg sub jp push and (bad) (bad) rex.WRXB cmp cmpsl test mov leaveq push jrcxz scas adc lock and lret popfq insl mov (bad) push stos fdivl xchg cli sub jb jl xor mov jnp pushq (bad) sbb sub imul pop fsts (bad) mov push (bad) xchg sub add and (bad) jbe test sbb (bad) stc adc and rex.WR add mov jrcxz retq jge imul popfq jg mov (bad) add icebp out nop cld (bad) (bad) fisttp data16 jp xchg (bad) sahf rex.WRX cmpsb data16 cmp add fst pop cmp adc cmp stc cmp icebp in mov sti test fist cmpsb ja repnz test lods gs cmpl in ja (bad) in push ss sbb fnstenv rex.RB movabs sarb lea movabs movsb cmp sub rcll sub (bad) fdivrl leaveq sbb pop add leaveq xchg cli adc and (bad) (bad) push movabs adc xor clc (bad) (bad) notb out and xor pop add add lcall loope cmp or imul cmp (bad) or stos (bad) and (bad) cs (bad) (bad) nop rex (bad) xchg mov (bad) lcall ja (bad) (bad) fildll (bad) or pushq addr32 mov pop mov repz enterq and imul ja pushfq xor pop rex.WB pop adc (bad) scas cs hlt fwait pop jne sbb jrcxz pop adc lret (bad) out cmpsb push add rex.WX add sbb and (bad) fbld jp (bad) cmpsl out movsb and pop pop sub jmpq mov leaveq sbb xlat mov mov (bad) lods adc enterq lret mov rex mov add fucomp or adc mov rex.XB add push (bad) (bad) (bad) mov scas cld (bad) (bad) pushq clc xchg out out adc mov (bad) leaveq in jrcxz mov or retq (bad) test mov andb mov (bad) (bad) fbld mov mov rex.B icebp xor lahf (bad) rex.WRXB scas jge sbb movabs mov (bad) (bad) jle sbb shll rex.WX (bad) rex.WX sbb xchg jo sub sub rex.R movslq xchg cmc cmp sub (bad) std sbb repnz (bad) mov rex.X rex.WRB pushq (bad) sbb retq (bad) (bad) (bad) jg sahf rex.RB pushfq rex.RXB ss jl imul pop lods outsb mov stos pop std rex.WRXB (bad) lcall repnz (bad) ffreep pushq sub xlat movsl test push jbe push mov mov sahf je insl jge jp mov jns (bad) rex.RXB scas jge push mov test movsl mov (bad) mov pop lret or jrcxz in hlt lods ja jl out push xor data16 (bad) and cld mov addl fldt loopne and pop fisubr nop sbb cmc xchg adc pushq jmpq jmpq cmc ror jl dec bt cmp cmp jmpq scas es int3 sbb insl sbb jns callq je mov (bad) cmpsl data16 leaveq imul (bad) lods push fwait adc cmpsl in or lock push lock (bad) (bad) (bad) lcall pop add mov (bad) and push add in (bad) lods sub push (bad) sub sbb add imul adc repnz adc xchg lods cld (bad) lcall add (bad) (bad) fistp pop sub rcr cmpsb lods in hlt cs pushq pushfq pop ds sbb int3 mov and xor rex.WX mov cmp adc rex.B (bad) xor sub in (bad) cmp (bad) xor in in fdivl out sbb nop rex.WXB sub (bad) shrb ds rex.WX (bad) int3 or add add rex.W es and mov cmpsl mov adc repnz movabs mov repz bswap mov movsbw mov pop jmpq jmpq jmpq or mov adcb and adc jno (bad) sub jae xchg and movabs jne cmp fisubrl movl in fwait xor retq insl pushfq insb fwait jnp lret adc (bad) (bad) mov jnp jae movsb ror es rex.X cmp (bad) and jle ss shl retq jnp mov jge add loop or jns mov (bad) (bad) fisttp std or (bad) (bad) (bad) fistp jrcxz jnp jmp imul jnp sub (bad) and or push jns or jne sub push fmulp push mov or iret or fstpt or add fildl lods or xlat adc rcl jnp add fs clc cs jrcxz push mov imul es fcmovne lret fistl fldenv outsb jmp (bad) xchg (bad) sub int3 jno hlt (bad) pop (bad) (bad) sbb movabs addr32 imul (bad) (bad) sahf sub loope push jbe lods (bad) bswap (bad) outsb movabs xchg or jmpq fbld push and sub imul (bad) imul or add adc lret callq or scas mov je test add (bad) or xor jne ja rorl retq test roll jg decb mov (bad) (bad) jl ficompl (bad) mov incb (bad) faddl xor cmpsb test in xor adc jo out cmp stos cmp (bad) adc fnstsw rex.WB ss mov setp lea jmpq add sbb imul jae mov callq (bad) insb movsb and seta rex clc rex.W rex.WXB jno and xorps and jns rex.RX xchg rex.WRX (bad) (bad) (bad) jns xchg nop rex.WR xor rex.RX or (bad) (bad) (bad) mov sti (bad) (bad) ffreep mov addr32 enterq xchg sbb mov (bad) cmpb jp test cmp ds icebp (bad) lahf rolb addr32 mov pop sti (bad) shr mov rorb icebp pushq leaveq or xchg enterq cmp andl jp rex.W pop cmc xor andb loopne or pop rex.RX cmp pop rex.RX data16 or mov iret xchg jae (bad) pushq repz movabs rex.WXB rex.WXB (bad) xor rol (bad) pop outsb out mul pushq push mov (bad) (bad) jle test cmc lods pop mov movabs jo (bad) in adc pushfq pop mov fldl outsl jne divl lret out (bad) decb (bad) pushfq (bad) (bad) (bad) (bad) lcall imul (bad) fisttp fidivrl sbb add adc xor and gs add mov jmpq sbb adc push in gs retq sub je fstps mov rex.RB lock (bad) int3 test jp mov rcrl (bad) fstl fimul (bad) mov callq lret xchg (bad) fiaddl (bad) lret and mov sub xchg pop insb mov mov test xorl pop loope pop (bad) (bad) (bad) fisttp fdivrl cmp mov stos cld (bad) lcall mov sti (bad) (bad) (bad) sbb push sbb fisttpl fdivrp fidivr lods jmp fistpl mov adc jmp stc sub (bad) pop sbb rex.W movsl adcl rex.B rex.WRXB xor rex.X rex.B rex.WB (bad) sahf out pop rex.RX fcoml sub cmp imul cmpsl retq hlt pop shll sub sbb adc mov xchg loopne repnz movzbw movabs lea pop jmpq btc ror mov stc and clc add jmpq push bt cmc add mov or mov mov mov jmpq retq or rcrb mov mov mov jbe lods int and push jbe sub rex.XB test (bad) (bad) scas (bad) mov insl cmp xor lahf (bad) (bad) movsl rex.WXB sbb and (bad) movsl gs and (bad) incl rclb fildll fidivr rcr andl int3 mov jno mov add (bad) stos retq pushq (bad) adc pop rex.WXB (bad) and or xlat clc js push xor div xor xor adc rex.WRX cmp pop (bad) ja rex.WR lret cmpsb (bad) mov scas (bad) adc cltd imul pushfq add mov std sub fidiv adc mov adc xchg lahf cs std test test (bad) (bad) cmp imul xor mov mov (bad) ds jge rex.WXB fwait imul mov jb xor mov (bad) and (bad) (bad) lcall push or insb (bad) mov jp xchg cmp rex.X (bad) lcall stos sti (bad) (bad) inc (bad) and (bad) sub movabs (bad) cltd and add mov cmpsb gs es mov xor cwtl rex.WRX rex.R out sti xor mov mov (bad) cld cltd outsl (bad) rex (bad) jae icebp sbb retq or (bad) or push add adc loopne sub jl xor jp add xchg ja clc bt imul test clc stc clc add jmpq fdivl jl sbb pop idivl pop insl std or movabs pop jb sbb iret (bad) push xor mov test sbb rolb cmc repnz (bad) xor repnz fcomi out adc (bad) lcall (bad) pop jle xchg retq lahf pop sub add mov stc mov mov mov push movabs fstp (bad) enterq mov in rex.RX mov sbb xor add callq cmpsl (bad) (bad) cld (bad) lcall xlat jg xchg cli (bad) (bad) fist retq fstpt pop rex.WRXB mov rex.WX mov adc je or mulb cmpsb (bad) mov sub cmp mov xchg pop mov je sub sbb jg adc imul mov jge jb loop sahf xchg sbb sub mov adc xor retq (bad) sbb movabs idivb rex.RB outsb pop cmp sbb mov push enterq jp rex.WB movslq (bad) in pushq mov xchg xor movabs (bad) addr32 adc cmpsb out xor cmp cmp (bad) (bad) (bad) pop stc and leaveq cmp adc nop mov loope ja cmp mov test xor fmuls pop jl fist jno xor loopne mov (bad) lcall jle (bad) (bad) (bad) retq jnp popfq data16 rex.WRB and movslq (bad) outsl (bad) push xor sbb mov lret std jne (bad) loop mov (bad) add subb (bad) cmp repnz ja (bad) mov int lods (bad) lret and sbb mov (bad) mov sub fsubs rex.WX (bad) ffree push rex.WRB test add (bad) (bad) jmpq ja clc clc add jmpq jmpq jmpq jmpq rcr test test mov ror sub seto lea jmpq rex.WR data16 in sbb push out lods pop mov (bad) (bad) rex.X mov or mov faddl rcrb adc mov ss pop (bad) int sbb std (bad) (bad) mov outsl in lret pop add mov rex.WR (bad) lcall leaveq cli (bad) (bad) fbstp xchg (bad) pushq push and (bad) lock cmpsl je jae nop js xor xchg cltd js movabs je push xor (bad) mov rorb xchg adc add mov mov icebp out (bad) (bad) pop mov retq sub data16 and jmpq test jo gs or xor lahf (bad) in mov rorb add add rcll decl xchg scas (bad) (bad) stc neg rcr add rcr mov and add bt xchg or mov shl bt not adc mov bt bt clc push test mov btr mov test stc clc sub jmpq test test test cmp retq or btc mov rcr mov jmpq rex.XB adc sbb out (bad) (bad) mov rex.XB add repz (bad) jbe pop insb (bad) xchg sbb rex.W (bad) test rex.XB rex.WB cmp data16 xchg (bad) jge mov fmull cwtl js mov lods cmc adc movl rex.RX (bad) (bad) fbld sti (bad) (bad) fild fimull jrcxz fiadd or push and cmp pushq loope (bad) (bad) hlt rorl mov adc mov jns (bad) mov mov push push add jg (bad) adc loope cmpsl rex.XB (bad) callq rex.RXB rex.RB jle in int3 or mov and mov (bad) mov mov callq (bad) cmp fsts xchg fnstcw test popfq rorl xchg setb jmpq iret addr32 xchg fstps outsb or (bad) cmpsl data16 jle (bad) sub (bad) jbe xchg pop sar movabs sub outsl xchg test push ljmp (bad) or rex.W std (bad) (bad) fist cmp (bad) (bad) mov outsl movabs add callq mov bnd jmp (bad) nop jl fsub stos xchg rex.RXB lret ja mov mov test sbb stos cmp ja rex.B sahf lods xchg mov add sub push mov sub push (bad) scas in pop xchg int3 push mov movabs repnz pop iret sbb test (bad) xchg data16 (bad) (bad) repz leaveq (bad) iret sahf je je cmc clc test test sub stc cmp jmpq jmpq jmpq jne ror sar clc bts mov cmp stc stc or jmpq mov rex.RXB sbb mov (bad) xor rex.WR rex.RXB cli mov (bad) xor movabs ja repnz std and (bad) ds jae loopne rex.W mov jno rex.WRXB (bad) (bad) mov jns loopne jg mov cmp cld (bad) (bad) fisttp fwait (bad) pop xor (bad) (bad) fbld out rex.RX retq mov stos andl (bad) xor loope rex.R movsl jge rex.XB (bad) sbb sub cmpsb popfq pop xchg sub (bad) mov gs rex.XB add pop mov or push cmp (bad) add jnp push mov (bad) rex.RB xchg lret movsl in out (bad) cmpsb sbb loope insl cmc rex.W rex.R js pop (bad) (bad) data16 push cmp popfq rex.RXB pop add rex.WX or mov rorb clc mov imull std test cli jae movzbl and bsf mov bsf cmc sub shld mov movzbq mov bt jmpq (bad) add mov sbb nop add mov adcl sbb rex.X rex.WRXB (bad) mov push movslq stos mov out sub add (bad) ficom sbb stos (bad) sub sahf es (bad) xlat cld adc jg (bad) (bad) lcall roll pop mov mov xchg popfq frstor and repz gs mov (bad) in push mov clc xor dec cmpsl jg testb sahf rex.B movsl sahf movabs push in lret movslq sbb xor ss lea push mov (bad) (bad) add mov fiaddl rex.RB adc (bad) outsl xlat adc leaveq (bad) outsl mov mov out outsb adc rex.WB or (bad) cmpsl pop (bad) cmc (bad) (bad) lret jb leaveq iret (bad) cmc push xchg lret nop test cmp add jmpq or test lock adc mov leaveq int3 pushfq sub adc (bad) adc (bad) jno and xor retq or add (bad) jno cmpsb test jb lock xchg pop pushfq push stos (bad) icebp (bad) push xchg (bad) adc push mov xor cmp rex.RB (bad) (bad) (bad) mov (bad) rex.WB pushq mov jmp mov cmp (bad) lods xchg rex.WRX rex.WRB sbb or stos sbb jb push xor callq (bad) (bad) rex.WRX insb push and push push xor insb movsb xor stos sub ss cmp stos rex.WX (bad) (bad) xchg rex.WRX rex.WR jne push and rex.WRX test test callq sub rex.WR pushq pop cmp cmp rex.WRX test lret add push xchg lret sbb adc cmpsl addl test jmp rex.RXB jg rex.WRB cmpsl (bad) rclb rex.WR xchg mov lods mov movslq rex.WXB cmpsb add pop test rex.WXB rex.WX movabs add mov cmp test es adc mov jle (bad) xor sahf scas mov cmpsl (bad) lods or sub mov imul mov push jns (bad) push rex.WX rex.XB rex.WXB popfq cmc pushfq jnp and xor rex.RXB movabs rex.WX movabs (bad) (bad) rex.WB mov mov (bad) movabs jb cmc push movabs movabs (bad) movabs mov mov rex.XB rex.R xchg push or rex.W jns lret leaveq fnstcw iret sbb movabs retq (bad) andb sub iret sbb rex.WB and (bad) mov xor rex.B lahf push lock test (bad) sub sahf mov xchg mov pop rex.WR cwtl callq (bad) sbb sub or out rex.WRX or sti imul rex.WB rex.RX fwait and and (bad) add movabs (bad) (bad) lcall int3 andl cmp sub cld (bad) (bad) (bad) cmp cmp cmpsl mov pop add push stos sub mov mov mov rex.B adc mov xchg insb cmp push rex.WR jp push sub cs add xchg sub mov xchg adc sbb (bad) in push rex.WRXB (bad) rex.RXB test mov add cmp or jmpq ds sub sbb lret rcrb xlat sbb repnz (bad) (bad) rex.WB cld mov es pop (bad) lret jge (bad) (bad) mov jae xor or rolb insb mov mov rex.R (bad) pop xchg add cmpsl (bad) addr32 pop test (bad) cmp repz xchg outsb out (bad) (bad) (bad) rolb jb mov mov and (bad) cmpsl sahf rex.X cli cltd rex.R rex.WR (bad) (bad) jp (bad) mov mov add imul pop stos mov and xor xor cs orl mov out (bad) (bad) fnstenv xchg mov std test psubb stos mov int3 and data16 cwtl outsl in mov mov (bad) (bad) (bad) and cmpl fnsave jb (bad) fldenv in (bad) (bad) jg adc (bad) (bad) incl rex.XB or xchg in je lahf rex.RXB rex.WX (bad) jle rex.WRB mov xchg cmp pop or (bad) loopne (bad) leaveq mov stos jo pop movabs xchg push push lret test rex.B movabs jge movslq sbb jbe,pn xor in fisubl gs fsts addl xchg sub lahf rex.WX push mov test jmpq jbe sub mov sub bts lea mov shrd mov data16 testl mov (bad) sbb shr jp shld xadd mov sub sar bsf add not jmpq jmpq sbb test loope mov in jg mov (bad) outsb popfq fucomp adc jge jl shll rorl adc mov (bad) cmc movsb in sti cmp adc (bad) (bad) pushq add push iret rclb pushq xchg lock movslq xchg pop ds data16 je xor nop xor fs xor rex.R or movabs addl movabs jmp pop fdivs (bad) mov jge shll or mov sbb loopne pop sub out and (bad) jno xchg lcall or push (bad) (bad) rex.WXB imul cmp sti or callq movsl (bad) mov (bad) cmp mov icebp sbb rorb lahf add repnz jmpq xchg movabs rex.WRXB cs repz ja int adc and cmp and and nop mov jmpq (bad) (bad) lcall jo wbinvd (bad) (bad) (bad) callq movabs (bad) or rex.B rex.WX mov outsb stc or mov repnz (bad) sbb lret rex.WXB jmp pop mov ficompl fcomps (bad) pop mov mov xlat iret (bad) std gs hlt or rex.WX xchg push or push push and test or je and mov jnp adc cmc stc or jmpq stos jmpq jrcxz rex.W sbb (bad) sub jbe pop cmp jns cmp (bad) fnstsw rex.RX sbb addb jg ss xor mov add (bad) shrl clc cs test std (bad) (bad) pushq (bad) sbb cmp mov data16 callq cld (bad) lcall or cmpsl mov fwait (bad) mov cld insb hlt popfq rex.WRX roll (bad) mov cmp rex.WB imul xor seta xor test js cs fs push cwtl shrb (bad) lret and push (bad) (bad) pop hlt jne mov movabs jns je mov mov loop xor fisttpl cs mov adc mov imul add xchg pop nop sbb lea jmpq lea movsbw lea jmpq callq bts sar inc add rol mov test cmc clc cmc cmpb jmpq and sbb adc and (bad) rex (bad) scas sbb rex.RX stc adc out jne mov mov loope mov outsl pushq movsl (bad) xchg loop sbb xor (bad) jp mov (bad) add fcoml in (bad) (bad) (bad) (bad) scas mov jl sbb rex.WRB mov (bad) rex.RX gs scas cmp in sbb jne mov (bad) (bad) (bad) (bad) (bad) loop pop xchg (bad) stc clc scas fs pushfq ss mov (bad) (bad) or sti (bad) (bad) fist or andl jp sahf out xlat jb mov (bad) or pop or cs rex.B rex.B cmpsb test mov mov lahf rex.WRB mov sub (bad) xchg (bad) fildll test cli (bad) sbb jl mov rcrl icebp mov in mov pop xor (bad) in fwait (bad) cs (bad) cmp adc sub rex.RB hlt cmp fild sbb lods loope leaveq cmp repz cmp hlt nop enterq sbb (bad) cwtl or (bad) (bad) push fs xchg (bad) mov ja fnsave xchg test cmp sub lods or mov cld (bad) (bad) incl movabs int3 and movabs (bad) sbb jae (bad) cmpb push rex.RX data16 mov or and iret jp fwait pop xchg or jg sbb pop movabs xor mov imul loope in (bad) in (bad) pop mulb xchg sub scas fimul sbb and cld add retq or xor rex.X mov cmp movabs jb pop stos callq test rex.WRXB mov cmpsb jnp (bad) lcall (bad) (bad) sub xchg cmp nop pop scas fstpl fistp mov (bad) push sti (bad) (bad) fildll icebp rex.WB or loope js xchg (bad) (bad) mov movsb fmull sub pop or insl and mov or add incb (bad) add jo fistpl shll add xor icebp add push xchg cmp sahf pushfq insb mov ja rex.WRX rex.WR xor scas jge rcll jns stc (bad) xchg push lea movslq imul data16 mov sbb jne movzbw neg lea shrd xor adc sub add lea mov rcr not cmc neg add neg not rcr mov jmpq (bad) sub mov (bad) (bad) push jns outsl xchg add callq rex.XB adc lods (bad) xchg mov (bad) callq and sub add push sarl shll jno (bad) jne jmp xchg sbb add adc sbb mov mov pop mov retq adc rex outsb mov movabs xor rex.WX jmpq callq sbb cwtl out movabs and rex.RB cmp sbb jne sbb rol in movabs lret add sub movabs movsb (bad) jnp rex.RX rex pop (bad) repz rex.WRB or (bad) lcall test cld (bad) (bad) decl rex.WB adc fwait lea mov outsb or cmp (bad) and sub or cmpsl test insl (bad) adc cwtl js rex.RX fcoml leaveq fldenv stc ss stos cmp xor sti xchg (bad) ja or jns cmpsl out cltd rcll lret retq and je imul mov movsb int3 (bad) or stc sahf bt repnz jmpq je jne neg jge sub not inc bsr mov clc add bt mov test test jmpq fdivl sbb xchg cmp (bad) outsb imul loope xor out rex.RXB sub sbb (bad) (bad) and in mov fs sbb faddl test xchg divb sbb (bad) (bad) ljmp cmp test cmc sub callq lods sbb stos add test shlb add divl lock int3 adc rex.WR (bad) (bad) jns mov (bad) (bad) fistp cli (bad) (bad) (bad) jmp (bad) mov mov jl sti iret scas out mov rex.B xlat (bad) (bad) fstpl fistl rcrb enterq or jo rex.RB movabs mov or xor cmp shll xchg lret add sbb fidivr mov or sub sbb jnp or pop xchg adc fmull xchg xor rex.X add rex.B test repnz jnp popfq (bad) xchg (bad) movslq (bad) (bad) mov xor mov test lods gs movabs fstpt repnz loop (bad) rex js je and lock movabs idiv (bad) (bad) fcomip std rex.WX (bad) adc jmp data16 cmp rcll mov (bad) sahf scas mov add add (bad) insb xchg sti sti ficoml rex.RXB xchg idivl xor pop rex.RX cmp jns xlat (bad) mov mov fcmovne imul (bad) (bad) pop xchg or jmp imul fsubs lret xor (bad) jns pop (bad) in insl nop je stc cmp test cmp jmpq jmpq mov cmp jmp mov pop cmp xchg and rol pop (bad) rex.RXB xchg (bad) roll mov scas pop (bad) std jge in movabs (bad) out xchg out push xor movabs cmp clc sbb add xchg xchg (bad) (bad) mov fldl or mov sbb xor rex.WXB xchg jmpq xchg (bad) lcall data16 lods add ja pop rex.RB rcll in sarb testl enterq fimul jb loopne sbb movsb adc fmuls rex.RB jmpq lods push cli fs sbb rex.B pushfq notl mov icebp xor mov push sbb movabs f2xm1 push ja push xchg mov (bad) shr jae pop cli cltd js scas rex.WRXB jge pop lock mov jl loop (bad) or (bad) (bad) jg callq xor (bad) mov sbb sbb (bad) (bad) mov jo (bad) (bad) ffreep rex.RX sbbl rex.WRX cmp ficompl andl outsl sahf pop jrcxz lock xor rex.X icebp xor push enterq int cmc push (bad) sub adc movslq fstl movabs mov adc xchg xor repnz je setl xchg lea xchg mov lea movsbl lea xchg mov mov jmpq (bad) ja xchg sbb movslq test mov out mov xlat lahf cli xchg lret jnp jno stos and mov sar add movsb lret addl (bad) mov leaveq (bad) addr32 adc rex.XB out (bad) (bad) (bad) jg cltd (bad) xchg or rcr std (bad) (bad) jg or or and mov add xchg rex.X xchg cmp test mov add (bad) jge callq scas es rorl test adc sbb sbb cmc add movsb ja enterq je adc xchg (bad) (bad) in xor push (bad) out test and jl xor sbb es rex.RX int3 (bad) rex.R in push mov sub jg divl movslq jbe and movsl jne or jb jmpq xchg jrcxz sbb sbb not (bad) vunpcklpd rex rex.R movabs jbe (bad) repz fs retq adc roll lret mov add (bad) (bad) (bad) (bad) rex.WXB (bad) rex.WRB (bad) (bad) jmpq cmpsb cmp (bad) cmpsb push cltd adc xor (bad) cmp (bad) jp jmpq movabs add (bad) (bad) fbld out rcr and fiadd mov xchg pushq cmp rcll ljmp loope ss rex.R jno (bad) (bad) pop loop enterq (bad) (bad) jmp mov out (bad) sahf divb movabs repnz adc jns hlt fild movb std fdivs xlat cmpsl xor add sub (bad) repz lods (bad) fbstp fnsave pop jb sarb stos mov retq (bad) (bad) (bad) jg jb mov rex.W cmp (bad) push lods (bad) add cli (bad) (bad) fild pop (bad) (bad) sahf or (bad) leaveq fnop (bad) rex.XB (bad) xchg je sbb (bad) out cmp add adc jbe pop xchg rex.WRX (bad) mov movabs (bad) loop sar mov mov jmpq outsb cs jmp rex.WXB lea jmp jns xlat adc push xchg xor test cmp jne in mov and loope lahf rex.WRB andl int loop jl insb (bad) lock mov jb sub je movslq sbb es sti orl xor iret (bad) scas out jmpq pop lock and jl shrb (bad) add jl (bad) (bad) (bad) (bad) pop rex.RX mov or rorb repnz xor enterq rex.RXB repz cmp and cld (bad) (bad) fistpll pushq movabs int3 jo stos (bad) pminsw (bad) jg (bad) popfq rex.RXB rex.WRX loopne iret add mov (bad) mov push or adc (bad) out movabs jl cli xor test sub outsb mov scas in adc xchg imul rex.WRXB (bad) ja stc (bad) stc bt imul clc jbe add jmpq jge mov add add xor (bad) je stos sub rex.X and (bad) rex.R (bad) test out int imul jne rcrl pop add and sbb hlt pushq sub and (bad) lcall sbb (bad) test add (bad) decl and (bad) fildll sbb movabs test rex.WX insl xor pushq push cmpsl or (bad) (bad) ffreep divl (bad) test enterq rex.WRX cmp pop (bad) (bad) (bad) sbb xchg jg rex.WX retq mov fdivl rex.XB mov (bad) cmc mov add sbb xor repz pop (bad) mov icebp sbb (bad) jo rex.RXB std cmp sub mov push rex addl stc add js out xchg add loopne (bad) std xor and ficoml nop rorb lcall lods in (bad) lock rex.RXB je add (bad) test (bad) (bad) (bad) fist mov sub subb pop add cmc retq rex.RB lret cmp movsb pop mov (bad) fisttp mov divl or mov (bad) rex.RX cld in loop or retq test iret fidivr (bad) or (bad) (bad) icebp in scas rex.X pop rex.WX push (bad) addr32 (bad) imul sub pop setg cmpsl out int xchg jbe (bad) (bad) loop push sub sbb and enterq sbb int3 stos rex.WXB (bad) xor sub cmpsl data16 lods adc cmp outsb sbb cmpsb mov jnp sub mov icebp mov (bad) jp int cmp mov (bad) jp rclb rex.WB sbb cmpsl pushq or (bad) (bad) jg sub or (bad) (bad) (bad) (bad) callq test (bad) mov adc fnstsw mov push fs fbstp pop xchg jno add test (bad) loopne fdivs adc fs add rex.WRB sbb rex.X mov loope mov push leaveq xcrypt-ctr cmpsl fdivr or mov repnz pop enterq (bad) jmp push test (bad) in lret cmp rex.X sub xor push push loop fbld (bad) jae test add mov rcrl rex.WB cmp scas jge rex.X mov jl jno sub mov xchg sbb xor add sbb fucomip fnstsw add rcrl xlat retq and push (bad) xchg push hlt push jns mov iret (bad) scas ss rex.RXB lock (bad) (bad) lcall pop xchg jg out fucomp test imul je xor rex sub rex.XB xchg cld fistpl in (bad) std (bad) (bad) (bad) fimul (bad) (bad) jmpq rex.XB sbbb xchg mov mov adc js mov scas rex.WX jne sub mov pop (bad) ljmp xor rex.B rex.RXB (bad) and lret and (bad) lahf push pushfq (bad) sub fdivl xchg jrcxz out popfq movabs (bad) incl (bad) mov clc clc sub cmc clc pushq cmp test cmp jmpq jmpq jmpq add rex.RXB gs outsl fs gs outsb fs add repz sbb shrb test test fiaddl leaveq sbb rex.RXB int3 and fwait xor (bad) (bad) mov cs and xchg mov lret rex.RXB rex.WRB xchg jns lods jne and (bad) (bad) fildll or mov xchg enterq sbb jae sbb jo (bad) lcall cmpsl (bad) rex.XB (bad) fistp vunpckhpd fisttp or rex.WR scas (bad) ss cmp adc scas jg out (bad) psadbw cmp movabs (bad) or (bad) xorl cmpl and callq out jno (bad) fisubl imul push or lods hlt cs lods xor prefetch and lods rex.WX rex.W cs je (bad) jmpq enterq out (bad) incl jrcxz sbb rcrb fdivl rex.WB rex.WR rex.RXB and xor mov pop ljmp cli fisttpll push sub fist cmp (bad) (bad) ljmp (bad) (bad) fbstp xchg add mov divl xor sub mov mov fisub or sbb pop mov sbb adc movabs (bad) jno xlat rex.WRXB (bad) rex.WR ds push sbb jmpq cld movsb flds cmp lret js (bad) adc jmpq adc stc xchg (bad) je pop sbb add xor outsl xchg jmpq pop iret test negb lret stos repnz sahf (bad) (bad) mov movsw push je mov pushq (bad) cmc test or loop andb (bad) lea clc xchg jb movsl int pop xchg sbb (bad) (bad) (bad) (bad) xchg cmp mov rcrl js push rex.WR repz (bad) (bad) pushq and cld (bad) (bad) fist xchg mov imul adc adc rex.WRB adc mov jne xor fidivl shrb (bad) jb (bad) mov add in int3 rex.R out icebp std lods in rcll mov movabs jg push rex.WRX cmp imul leaveq (bad) outsl mov and scas jge imul clc cs push and pop (bad) (bad) (bad) xchg mov rex.WRX rorl mov fwait adc mov loop callq icebp xor dec mov sar dec sbb sub sub bt jmpq add cmp bt cmc bt cmp jmpq ja jmpq stos jmpq ja rex.WR sbb xchg jb add rclb (bad) rolb leaveq (bad) addr32 xchg (bad) test mov repz or sbb lock icebp pop mul (bad) pop rex.RX test cli fmull jg (bad) lcall xchg out lea sbb add cmp (bad) cld (bad) (bad) ffreep loope sub fisttp sti mov mov add mov (bad) scas jrcxz xchg or rex.WXB in int3 sub in repnz and mov sub rex.WRB sbb add lret movabs cmp pushq rex.W imull mov cli (bad) ljmp icebp icebp mov icebp icebp andl push sbb add push xchg int3 sbb and loope rex.RB sub cltd rex.WRXB pushq jmpq mov cmc pop stc sbb cmp mov rex.WR xor cmpsb mul mov (bad) int rorb lahf rex.WX (bad) in int outsl jns (bad) jb rex fucomip scas pop lea add movb lret loop iret rex.WRXB mov mov sbb sbb add xor enterq imul (bad) rorl sub (bad) cmc (bad) push add (bad) xchg rex.WXB mov incb (bad) clc rex.WX (bad) (bad) fildll retq mov mov shlb sbb adc stos fimull in movsl fs (bad) in movsl push sbb fidivrl and mov test mov (bad) mov insb sti cltd rorl int movslq movabs lret fistpl test (bad) sbb pop loop sbb mov pop test push (bad) test fadd jno pushq push xchg lret testb cwtl ss sar xor sub and stos (bad) cmp lea movslq out add test mov ffreep rex.RXB mov mov ja ds fwait cmp jb rex.RXB movabs push lret adc test lcall rex.RX (bad) insb clc cli (bad) (bad) (bad) clc mov cmpsb movabs (bad) rex.R movabs lea fdivs movsl scas (bad) xchg mov ss movsl sub (bad) cmp scas mov and xchg push xor or or (bad) jle scas ss xor sbb jno addr32 xor int3 rex.WR mov pop clc cs rex.WR mov (bad) rex.WXB (bad) push xor (bad) fsubrs jnp sbb pop pop scas pop adc xchg mov es jne push jae rex.X jmp pushq js outsb out jmpq sub or jrcxz (bad) cmp jns or (bad) (bad) jg sbb cmp sub cmc orl jle int3 pop fldl cs lods cmp test cld insb and (bad) (bad) mov mov pop cwtl or jb (bad) (bad) fbld icebp mov mov fcomip and lret stos and jb scas insb cs jl and sub mov gs mov lock or (bad) xlat insb sbb fxch rex.WB (bad) rcrl sub je fiaddl mov frstor lods cld sub ficompl add rex.RXB gs gs imul (bad) insl add rex.X rclb callq jmpq jmpq je bt stc clc jmpq ja bt stc bt imul test clc add jmpq ficoml movsb jno jo or jne,pn jbe (bad) (bad) (bad) movsl cwtl adc rex.B sub cld xor (bad) iret push ficompl xchg rex fdivrl push (bad) testl rex.WX rex.B jno mov (bad) adc xor fimul (bad) clc adc add nop jl leaveq loope (bad) out enterq rex.WX pop mov pop xor repz mov xlat in jno mov (bad) test fsubr rex.RX xchg sarl push out mov std and jne adc adc rex.X lcall mov cmp fstl add out xor mov adc adc and mov cld cltd sbb cmpl adc idiv jbe leaveq rex.WB cld mov (bad) adc (bad) jmpq std xchg sahf or int cmp out in jg (bad) and xlat sbb push or loop vcvttpd2dq pushq jmpq cld fadd adc ds negl leaveq rcll fdivs sub add cmp cmp cmp pushfq mov add xchg je fdivp and adc icebp ds (bad) (bad) xor adc (bad) cmp (bad) (bad) incl mov fnsave pushfq out jno xchg adc je xchg out int3 xor or in test gs mov sub or adc jbe and test add (bad) icebp roll or mov rol push sub movsb jne (bad) int rex.XB cwtl lods sub in fwait cld xchg imul shrb pushfq mov pop push mov xlat adc sbb adc mov mov (bad) push out rex mov (bad) rex.W (bad) add in pushq sbb (bad) cmp (bad) push cltd pushfq test cmp fsubrs cmp (bad) (bad) (bad) mov in (bad) mov cmc xchg shrb insl xchg popq stos test (bad) fxch stc xchg jns movabs xor jno sbb jg (bad) adc mov cmp hlt (bad) adc jge and add int mov push and (bad) push rex.WXB shll stc clc icebp fbld in std insb or retq (bad) (bad) cmp adc rex.R clc pop sbb movabs (bad) fnop cmc scas add add repnz adc adc retq repnz and jo xchg (bad) hlt and mov sub ficoml jg pop sbb xchg mov mov adc xchg (bad) xor push rol sub or mov (bad) stc movabs sbb mov mov (bad) or movslq fldenv fcmove (bad) and scas adc mov sbb (bad) cmc clc (bad) sbb lea cltd movsl movabs or jl ja mov outsb adc adc movabs (bad) (bad) xchg insl or in mov pushq (bad) sub push fsubl je rex.WRB test in int fsubrl jp lock mov rex.WRXB xchg jmpq push mov fs push int cli stos add jno insb pushq (bad) int3 lock (bad) adc jo add xorb pop pushfq bswap cmc repz nop iret rex.X ja mov repz jbe xchg cltd sub cmc sbb jno je test cld (bad) movsb xchg add fdivrs movslq and hlt lods push adc (bad) mov test mov in xor clc cmp cld cs mov (bad) or adc (bad) xor mov movabs mov sbb sub (bad) (bad) cwtl jno jo in (bad) movsb (bad) rcl je lods xorb jl int3 pop insl movabs xor cmp mov rex.R rex.WXB sub mov xlat and vpaddusb mov and lock or cmp out rex.W rex and mov (bad) loope jnp lret shr mov sbb in pop (bad) out cwtl or (bad) int3 scas and test jmp out push or sarb addr32 (bad) or lods mov mov jl outsb movslq mov pushq repz xor fisubrl sbb idiv lock and or push jno outsb je (bad) (bad) out out out mov pop shrb xchg add scas (bad) xor xchg mov int idivl adc adc cmp mov insl add je xchg mov (bad) or stc fdivrs fldenv fistpll sbb cltd mov jns insb and cltd or mov jne loope lods adc add adc fstpl mov fsts shll callq xchg (bad) xor jo andb es adc cmc sbb cs mov retq hlt xor jo (bad) (bad) loopne sub je (bad) cmp adc addr32 mov fs lods push hlt xchg cmp or in rex.RB loope nop hlt leaveq int3 divl movsb lock push shl cltd retq or jge (bad) xchg out fdivs sub mov scas mov sti mov add xchg sub out (bad) (bad) rex.WRB xor insb jne (bad) jbe loop nop push or (bad) push mul push cli mov (bad) and push hlt jp jb adc hlt stos mov xchg jne (bad) mov pop (bad) (bad) mov sub (bad) mov cmpsl jne (bad) mov mov xchg (bad) add mov iret lret xchg jo xor push xchg in cmc xlat pop sub push mov (bad) push cmpsl (bad) rex.WRX loop jo or sbb xchg lods insb jne test clc xchg jnp mov mov je push setbe xchg mov fcomi (bad) out or adc cmp (bad) (bad) stos je jbe or xchg movabs fcoml repnz out mov mov rclb divl (bad) mov xchg enterq xchg push adc (bad) mov popfq jbe jg xor add xor add popfq mov cli push (bad) lret int ja (bad) sahf xchg ja (bad) rex.WRB rex.R pushq (bad) hlt repz jns sub (bad) (bad) (bad) (bad) (bad) xchg je rex.WXB pop (bad) shrb cmpl (bad) popfq mov push jl movabs cmpl mov movabs add cmpsl (bad) xor (bad) movabs sub je xor jbe jbe or and outsb cmc movslq push sarl rex.RX hlt rex.WX (bad) jl xor testl iret hlt cli (bad) adc movabs xor push (bad) (bad) push test (bad) push rex.WRX rex.X push xor cmc and mov xchg (bad) rclb adc ja xlat sahf movsb or push int pop (bad) in rorl clc and and rex.WR mov loop and xor loopne lea fsubs leaveq rex.WRXB jno stos pushq fdivl rex.B xchg push or cld mov (bad) hlt pushq std rex.WX retq pop fs (bad) or or add push movabs (bad) sub testl pop (bad) imul rex.WRB mov lret ficompl cmpsb push rex.WRXB fdivrs mov nop ficomp fsubrl xchg mulb negb ds xchg repz add (bad) outsl pop (bad) ja mov js imul mov adc pushfq insl scas jg fadds adc popfq xor jmp (bad) mov adc and js fwait mov add add fsubrl push stc mov (bad) adc movabs or neg test fdivr push (bad) cwtl mov xchg out rex.X in mov pop cmp or and movabs mov pushfq mov jp jle pop mov test int3 cmp add jnp and outsl retq rex.WXB rex.R in (bad) mov adc fistp pushq int cmp sub (bad) stos cmp xlat in or or rex.WXB rex.RXB (bad) (bad) cmp sbb lret repz data16 test notl rex.WR mov xchg mov add jnp or loop (bad) add xchg or je add and rex.RB out (bad) mov out popfq sub rex.WX movslq xchg mov adc movsb cmpb xor push lods mov (bad) adc (bad) mov push movabs sbb and int3 movsb mov mov mov in in cmp hlt push lock add ss and mov jp add jg (bad) add (bad) rcr adc jo cmp jae add addb xchg (bad) cmp sub cmpsb clc std jrcxz leaveq sub bnd retq push in in in mov js lea mov sub cmp xlat int jo shrl cmp repz (bad) jnp (bad) (bad) repz jne (bad) clc test clc test jo (bad) (bad) push iret cmc mov cld pop adc sahf retq (bad) mov sub adc cld scas je rorb (bad) mov loop or xor stos repz xorb movabs retq jne pop (bad) jmp (bad) rex.R sbb adc (bad) adc clc push fmulp sbb jl adc cmp mov mov rex.WRB sbb sub loopne add rex.WR ja (bad) lret (bad) rex.WB out cld (bad) (bad) jp outsb scas insl (bad) pop in sbb mov clc mov xor insb push (bad) scas adc bnd sbb (bad) rex.WRX xlat sub test lods lods jmpq test movslq callq jo xor jrcxz xchg jno jg (bad) (bad) xchg test mov in mov jns lret pop data16 cwtl (bad) stc or add shlb sbb (bad) in mov jle (bad) hlt mov fnstcw and pushfq fnstenv cwtl (bad) (bad) imul (bad) jge bnd rex.XB adcl (bad) movsb retq mov rex.WRX stos out (bad) add adc (bad) shrl rex.WRXB repnz repnz rclb jne jmpq jp stos or (bad) test rex.XB fiaddl (bad) and pushfq mov jmp outsb (bad) cmc out push sbb rex.WRB mov rex.W repz mov rex.WB mov add outsb xchg rex.RB clc jl rex.WX sub cmp mov out (bad) imul enterq lahf lret cwtl pop (bad) adc fsubp repz lods mov movabs vpaddq jl popfq repnz leaveq js (bad) shll mov jmp loopne (bad) (bad) enterq xchg mov (bad) (bad) out xchg add adc xchg mov pop fildll (bad) (bad) (bad) sbb cltd sti and loop mov gs xchg rex.RXB (bad) (bad) adc jnp (bad) insl (bad) std mov fcoms pop push (bad) lret rex.X add cmpsb rex.W mov jbe xlat lods insl (bad) movabs rex.RB lods and in and repz pop je cltd jge idiv (bad) js test rex.WRB push repz rex.RB lahf cs rex.R mov mov and rex.WB lret movabs callq (bad) xchg push jmp (bad) (bad) repz fimul stos add cld sbb out adc (bad) push repz xor cmp mov out sahf fcoms or (bad) rorl sbb adc testb (bad) ficomp rcll push outsl std add int mov jmpq shlb xchg insb xor (bad) push add mov mov cmc sub xor or jne movabs repnz out addr32 loope mov cmpl adc push cmp cmpsl (bad) mov or rorb mov repz jmpq rex.X (bad) mov mov push gs (bad) pop (bad) adc sbb xor cmp (bad) sbb (bad) loope vpminud (bad) repnz nop ror (bad) add shrl lret fsubl xchg mov xchg out pop fstpt in cmpsl retq rex.WRB lahf fnop cmpsb stc (bad) sbb xor or xor scas (bad) je shrb ja and and out (bad) (bad) or (bad) xchg rex.B xor repz sbb in mov mov add outsb roll imul adc rolb jne mov lcall xor popfq (bad) xchg in cli mov out xchg or imulb lods js mov (bad) (bad) test xor in cld stos jmp rex.WB xor leaveq mov mov popfq cmc mov or pop imul (bad) (bad) xor enterq retq lahf leaveq jmp scas adc icebp cmp adc imul hlt loopne xor test (bad) test and fs pushq rex.RB add mov popfq (bad) jmp cmpsb movabs (bad) xchg sbb pop shlb push ror jns (bad) push mov xor stos ss int3 xchg (bad) cld loope add mov jge sbb rex sub or add pushfq movsb (bad) adc imulb rex.WRB adcl pushq lret incl gs mov xchg mov xchg clc pop push sbb xlat nop retq in rorl cmp push (bad) mov xor and ror cltd lea adc (bad) xor cli (bad) addr32 and (bad) loopne xor cmc xchg rex.RB (bad) mov (bad) sbb lahf int3 mov ds ss lret (bad) (bad) imul (bad) mov stc sahf xor add mov rex.XB cmp addr32 jmp mov (bad) or mov rex.RB and jo movabs (bad) (bad) lret mov xor sarb sub rex.WX sarl lods add (bad) jno or repnz movabs cmp fnop ja xor scas or xchg mov test repz cld rex.W cli ja xchg mov xor jg lock js rex.WB xor mov mov cmp add (bad) cmp (bad) xor rex.WB pop in add cmp (bad) (bad) sbb mov retq callq or xor mov xchg clc loopne (bad) jbe xchg and std xlat (bad) mov cmpsl add not callq xor (bad) xchg mov mov jge rex.W rex.XB rolb push js pushq lret push add xor pop pushq (bad) rex.RB (bad) cld xor (bad) or in cmpsl mov pop (bad) cmp or callq outsl icebp ja test xchg movsl lods enterq (bad) pushq jb (bad) jp xchg xor mov pop negl add movabs mov mov icebp add rol push in imul jge or insl (bad) (bad) out adc and cmpsb and xchg mov rcrl pop rex.WRX rex.WB rex.WR sahf mov xor mov jmpq mov mov int3 mov loope repnz cld (bad) or lahf sub sbb lret mov pop callq adc cltd in cli pop retq rex.W or and push imul cld std xor callq lea jmp js and and mov (bad) pop sbb imul addw test cld adc (bad) mov cmp in mov vcvtss2si ds sub pop push (bad) mov push jae es jne fistp in (bad) mov mov cmp xor adc (bad) sarl push lock jno (bad) jmpq (bad) mov jo mov jle retq pop jne (bad) mov (bad) rolb rex.XB fmuls sarl cmp fwait movswl rclb rex.WR fs xchg xchg and mov jrcxz ds sub pop addl push rex.RB lock (bad) mov pop xor xchg mov add lahf (bad) xchg out xchg add cmpsl add incl (bad) scas clc rex.W rex.WRXB jnp mov (bad) fs xor out xor stc (bad) pop push cli lea mov movabs rex.WX rex.WX clc addl in adcl mov callq jne (bad) adc rex.RXB cmpsb (bad) jrcxz rex.WXB repnz sub adc xadd xchg cmc adc or pushq xchg fsubs sub cmc fsubl (bad) (bad) idivl xlat (bad) cmp lods rorb mov cmp (bad) (bad) int adc stos in out cmp (bad) cld add add rex.X or test adc rex (bad) in rex.R test (bad) sbb rex.WB in mov (bad) rcrb cmc pop mov jmp rex.RXB neg rclb repz jl fwait (bad) pushq out xor adc mov int3 jbe js xchg rex.WB rex.R rex.WR (bad) popfq cmc sub clc pslld enterq rex.WB std mov adc rex.WR add sbb (bad) xorb (bad) rex.WR test push cld insb test push rcr fadds incb loop scas imul std imul adc mov rex.RB (bad) (bad) scas sub or cld movabs adc pop and (bad) (bad) cmpsb add push in pushq imul cmpsl mov mov jbe movabs divb jg push (bad) pop lods xchg movabs push in andl jne add retq (bad) int3 (bad) jo cmp or lret and cwtl (bad) cmp rex.R add pop mov and adc mov xor rex.B scas jns mov mov push sbb rex.WRB scas bswap cmp int pop notb sbb mov (bad) (bad) or scas add clc mov add xor add rex.WR je (bad) cmp rex.RB adc pushfq idivl shrb gs and jg std rorl xor and lock icebp push roll test ss push (bad) in ds sub rex.WX (bad) (bad) (bad) mov mov pop pushq add (bad) leaveq retq movabs mov rex.RXB (bad) adc rex.RX repnz jns fs jo (bad) xlat sub (bad) (bad) adc (bad) mov mov jl sarb push cmp (bad) lock (bad) jae rex.WXB out rclb cld mov cmc xchg mov xchg leaveq pop rex xchg adc and (bad) jge and leaveq int sub or in rcrl mov sub xor fimull (bad) fiaddl movabs insl mov push sarb xor roll (bad) jbe shr rex.X or sarb sub (bad) mov rex.WRXB jne insl (bad) divl (bad) shlb cwtl addl (bad) xchg or andl fwait cmpsb js rex.RX xchg divb sub rex.WR gs imul lret mov rex.W lahf repz (bad) (bad) mov rex.B (bad) rcrb (bad) rex.XB js or rcrb add adc in js xchg mov xor cld sbb jo mov sub sub lret (bad) mov test lods rex.XB sbb rex.WB lods callq sub mov lock jge pushq push or out (bad) jle (bad) sub in lock clc xchg clc popfq sbb cmp repnz fcoms jrcxz xor push rex.RXB movslq cmp mov (bad) in (bad) jo cmp add movsb loope xchg jnp outsl cmp xor cmc rex.RX hlt add rex.RXB mov and std (bad) or in (bad) out cmpsl fimul test jbe or iret xchg movabs movaps adc (bad) gs pop sbb jno subl xor fistpll pop (bad) (bad) repz add test mov in (bad) and (bad) and adc in or or mov push rex.W repnz adc mov and and xchg jae jrcxz add cltd and sahf lret mov sar sahf xor and test (bad) jne push rex.RB xor in adc add cli sub xchg jb adc retq jae loope jg pop je movabs pop rex.XB jae fsubp cmp imul callq cmc andl (bad) out and push retq rex.WRB fdivl stc jno repz mov mov (bad) xchg fnsave (bad) pop scas lods shl add outsl jmp roll (bad) mov test adc callq xor in (bad) cs in xchg mov (bad) (bad) sbb lret in pop notl add adc and add mov (bad) rolb and movabs int3 (bad) add and adc rex.B xor xor loope xor add cmp rclb adc (bad) std insl mov mov xchg sub cmp xor clc (bad) pmulhuw sub int retq xor cmc nop jmpq icebp retq mov adc (bad) xor cmpsl push int xor (bad) sbb jno fstpl jmpq sub (bad) mov jb cmp jrcxz push out xor add mov sbb sub cltd xor adc jmpq rex.WRXB movabs loop add ficoml cmp fcomi stc stos retq sub adc faddp retq mov or cld mov or and xor rorb fnstenv rex.B (bad) loopne sti in add cmp xchg jno lret xchg out rex.B rex.WXB rex.R or or rex.WRB xchg cmp shrb add and movsl (bad) (bad) (bad) shlb (bad) jge jae cli mov sahf mov repnz mov and jrcxz shrb lret (bad) cmp sbb in movabs rex.WRXB xchg add add fwait (bad) cmc mov fisttpl rex.WRB callq add es jae add jo xchg jno jbe rex (bad) sub push out xor (bad) push es es sbb (bad) out add ds mov sbb cmp cmpsb rcrl rex.WB add jmp (bad) or pushq mov in adc mov xchg imul rex.WRB (bad) jmpq xchg cli mov (bad) stos lock and mov (bad) sbbb pop fs cmp in fs jno rex.WRX cmp adc fs xor (bad) mov mov sbb jrcxz add jne rex.XB (bad) lahf (bad) sahf andl outsl or std (bad) rex.X pop (bad) insl cwtl fisubrl xlat rol push imul outsb gs loope jo mov insb cmp jmp clc sub lret jg (bad) mov sub (bad) or (bad) cmp (bad) leaveq mov pushq gs sti rcll movabs nop gs iret pop (bad) mov addb fwait adc retq insb and lret mov lock (bad) xchg data16 cli adc bnd callq (bad) movabs jg ss movsl lock or leaveq rcll sbb mov mov rex.WB pushq (bad) sub stos out cmp enterq rex.RB gs mov int3 cmpsb int xchg (bad) pop cmp leaveq loop (bad) jrcxz (bad) jmpq or jp add (bad) adc (bad) je or callq pop rex.RX es js loope (bad) (bad) in and xor leaveq jmpq cmpsl (bad) jae rex or lea rex.XB pop mov or (bad) enterq sub jrcxz fiaddl xlat fcoms cli mov push pop (bad) (bad) mov pop callq lea rex.RX es callq mov out or mov cwtl insl movabs xchg sbb stos idivl push lock and cmp (bad) sbb mov lret (bad) mov rex.RX (bad) push mov (bad) mov (bad) scas jg (bad) mov mov (bad) (bad) movabs cmovge add callq mov jne (bad) (bad) fxch rex.XB adc movslq imulb stos (bad) lret pop js rex.RX jnp xchg (bad) (bad) mov test sub cmpb cld int repnz sarl movabs cmp fcoms insl (bad) jrcxz (bad) insb xadd pop mov (bad) clc xchg (bad) pop lret rex.R xchg jge retq movabs test sbb test icebp leaveq outsl push add xor jle out pop shr in lea movabs sub xchg rex.RX pushq out repnz rcrl movabs push (bad) movabs cmp or in (bad) mov rex.WRB shrb enterq pushq cld (bad) jmp add fstl xor rex.B jle sub int3 cmc fdivs or mov and icebp mov push sub xchg cmp cmp mov insl adc mov and (bad) jp test adc fildl add popfq sbb (bad) outsl rorb test jne fs xor (bad) (bad) out rex.WRXB (bad) jo in xor xor sbb jo jno and insb push or (bad) (bad) add jbe add je cmc popfq jns mov (bad) lret mov push xor popfq xlat push (bad) xor (bad) or jmp mov cmc xor addr32 or lea fidivrl (bad) mov mov iret out out cmpsl fist sbb in xchg cwtl mov jmp rorb xchg (bad) and nop adc (bad) rex.WR and xchg rex.XB rex.X icebp sub lret xchg mov loopne mov movslq pop out (bad) gs sbb clc repnz xor or rex.RB (bad) xor jnp sub (bad) imul test sub rex.B jo mov adc xchg lock and loope rex.RXB movabs xor idiv ja icebp cmp cmp (bad) cmp mov xchg xchg (bad) sbb loop ss (bad) sub mov pop int loope mov xchg adc and loop sub mov int3 mov fsubl or cmpsl int loopne (bad) int mov xchg mov in jge cmpsb adc ffree (bad) mov mov lock (bad) test mov mov mov pop xchg scas mov cli and fadd stc vcmpss jge sbb pop jle ds (bad) stc es adc rcr (bad) je fdivp enterq fxch jo mov movsb and out (bad) (bad) jbe (bad) jno (bad) mov gs (bad) rorb sub imul (bad) lods xchg nop or testb rex.RX in rcll and cli mov and push fucomp pop pushq (bad) mov out cld lret rex.WX rcrb movabs js enterq add rex.R out add cltd xor rex.WRB callq addr32 (bad) in mov rex.W rex.WRB js xor (bad) repnz and (bad) loopne jnp pop jne test out pushfq out pop jle jo test leaveq rcll nop xchg insl repz and out movabs cli add add (bad) fs xor adc xchg push rorb (bad) (bad) stos mov adc or mov jl sbb xor mov adc popfq outsl adc lea xchg test outsb and mov stos cmp lock je add hlt add xchg adc rex.WRB rex.RXB rex.X movslq pushfq in (bad) cmpsl cwtl rcll (bad) outsl xor xor jo mov je add jbe (bad) (bad) rex.R mov and fistpll repz movsl or xor add sarl iret test xor add shll jbe ss shrb (bad) (bad) callq rex.WR jl rex.WX fs and or fildl jb or mov jmp rex.WXB sbb rex.RX leaveq cmp stos test mov movslq or rex.B scas in movabs mov in insb (bad) mov ss in in fldenv jp cmp xchg xor fwait nop adc cs and (bad) jp xor sbb loopne adc mov mov decb add and repnz xor adc (bad) xor (bad) int jno mov adc test xor cmp (bad) es pop jne (bad) loope or cmpsb or pop mov jrcxz jmpq push mov cltd add jb rex sbb push pushfq pop pop stos jno jmp or mov (bad) clc sbb pop xor jl mov iret jo sbb (bad) xor popfq adc sbb rex.B lock adc jne mov fs scas pop jno sbb movabs in and mov adc gs xchg jle movabs rex.WR adc adc and xor (bad) gs stc (bad) lods add ds mov (bad) (bad) (bad) xchg sub jmpq jl or lret sbb (bad) ror push (bad) mov adc lea imul test jg rex.W gs (bad) cs lahf mov (bad) out sbb push retq cmpsb imul sbb rex insl mov mov outsb jl add js setb leaveq int3 scas sbb loope mov enterq push adc movabs rcrl adc or (bad) shl lock adc sub (bad) movabs adc mov movsb leaveq cmc xor (bad) push pop xchg lock (bad) pushfq scas adc movabs mov rex.WRXB out sub mov add lahf (bad) or in push retq jno out cld sbb mov xlat rcrl mov sbbl (bad) xor cmc fistp (bad) lea rex rex.B cmp std jns out adc icebp rex.W test rex.X mov movsw (bad) rex.WX xor cli (bad) sbb shlb in rex.WRX rcr mov and iret int pushq jmp jge xor loopne fcomp (bad) jne rex.WX sbb adc lock (bad) mov xchg jae xchg add rex.B imul incl mov jno sbb and cmp repz push loop rolb pop add (bad) jg mov iret xchg add mov fadd mov mov int3 rcrb movsl (bad) xor pop push gs and nop add sbbb (bad) jrcxz and (bad) popfq rcll mov jmpq rex.WXB (bad) mov in test lret jl cs sbb cmp adc clc (bad) mov jge xor and (bad) mov lods gs int (bad) sbb (bad) xor mov std xor cmp retq movabs pop adc (bad) fdiv mov sub jne or sub rex.WRB loopne xor (bad) or (bad) jbe or movsl fisttpl mov mov es pop test push add adc mov sub mov or mov jae test cmpsb movabs (bad) iret jl mov int stos str mov xchg (bad) xchg (bad) rex.RB mov (bad) out (bad) adc lods rclb (bad) icebp xchg stos xchg xchg xor repnz ficom xor jno rex.B (bad) movabs (bad) and ljmp addr32 test sub fmuls repnz nop (bad) sub push cmp loopne (bad) unpckhps sub fucomip movlps (bad) loope (bad) sbb fimull mov mov mov xor or xlat xchg cmpsb fwait repnz stc (bad) jle pushq pop mov push rex.WR in enterq xchg sbb repz (bad) gs mov push push rex.RB push xor adc stc cmpsb fsubrs repz jo or (bad) callq xlat add in jmp clc cmp test adc push (bad) pop scas (bad) xor xchg (bad) sub enterq cwtl (bad) sub add cmc icebp xchg rex.RXB mov movsb (bad) int or add mov (bad) notb testb xchg pop nop rex (bad) xor addb mov jle rex.WR icebp add lods js jle je xor jne rex.WRB shlb ud2 fdivr loopne adc rex.WRX (bad) adc jg (bad) jmp pop out cmp push xchg adc fstl retq lock jno pushq (bad) push enterq and push (bad) push lahf test mov insb js test int (bad) and jb mov jg pushq xchg fcmovne rex.RB ds or icebp mov (bad) add pushq out roll mov push callq (bad) rex.WRXB (bad) stc callq rex.RB std pop xchg test popq sub fcomps xchg or mov jmp (bad) fwait sbb ror mov adc jge std mov cmpsl lret incl (bad) out nop imull sub or lahf shll (bad) outsl imul xchg jo or or (bad) fnstcw test add (bad) test (bad) (bad) mov push (bad) imul or int3 or or jle,pt sub sub faddl in leaveq adc fsubr xor outsb xchg (bad) (bad) push and std cmpsl movabs (bad) xchg push movsb rorl int3 repnz cmp cmp or je fimull push (bad) mov and or in and insb repnz sbb je mov add ds stc rex.WR (bad) mov movl sub mov sbb imul xchg jmpq (bad) (bad) or push and (bad) or (bad) mov cli adc mull and xlat add xchg movabs rex.RXB xchg xchg adc adc imul xchg mov adc and jno (bad) and (bad) outsb or adc movabs es loop add adc outsl (bad) test hlt clc mov adc and rol xor push rex.WXB clc jmp sbb repnz sub cmp jns frstor (bad) and movsb (bad) or negb adc rex.WR (bad) pop mov insl out (bad) clc jnp fidivrl (bad) push xchg xor mov xor stos int add xchg movabs adc cmp adcl mov or (bad) sbb clc (bad) push cmp adc sahf mov outsl pop push inc add repnz imul out or mov shll movsb adc jrcxz adc stos jno nop xchg xchg callq roll jns pushfq sbb enterq push mov stos mov cmp mov pop mov imul (bad) mulb xchg mov xchg test mov or mov xchg (bad) xchg shll fcoms movabs fisttpll (bad) (bad) xchg shl rex.W (bad) frstor imul callq sbb sbb fwait loop mov jns (bad) (bad) mov movabs cmp stc pop out rex.RXB hlt xchg out sub jmpq (bad) movabs xchg ds fistp (bad) (bad) rex.X mov enterq pavgw test adc rcl add test add cltd mov repnz add or sub (bad) mulb (bad) xchg xchg jbe and jmp add out push mov jae in sub es mov (bad) adc lret (bad) jrcxz xor paddq (bad) jbe (bad) sbb sbb or and add cmp orps notb and sti rex.XB jp xchg jno adc out rex.WRB or data16 jge xchg adc (bad) rex.WR adc and movabs (bad) jno,pn in or fs callq imul mov loope jno push (bad) hlt (bad) push fsubs add hlt jns push add (bad) push or popq loope rex.RX lret mul mov jmp push vmovmskps sti iret popfq add (bad) cmp out xlat lods cmp or nop and add (bad) in add ja movsb jrcxz add mov imul or ss and or and psrlq mov push mulb neg fs (bad) cld (bad) push add xchg loope (bad) fwait (bad) rex.RXB or jg cli js jne add and sbb shlb (bad) out mov sub mov out xlat adc xchg ss cmp adc gs fsubr adc lret xchg cmc lret and (bad) div sub (bad) xchg pushfq jo (bad) adc (bad) jno push mov mov (bad) sub rex.W jo repnz callq (bad) retq ja stos movabs movabs push (bad) (bad) pushq in lods pushq mov mov out (bad) rex.XB (bad) push mov jmpq movsb clc or xchg adc mov fstl lods or (bad) test out adc repnz callq (bad) mov push test rex.RXB pop seto or pop (bad) xchg cmc pop jmp sbb push mov jbe movabs adc pop cmc stos retq pop rex.WB xchg sub xor pop (bad) adc in leaveq imul cmpsb and jmpq cwtl pushfq or pop retq add xor rex.RX push mov xor mov add in rex.RB push mov out (bad) outsl pop fimull (bad) adc rex.RXB mov mov lea test pushq popfq roll add (bad) icebp clc cld rex.X addr32 jne sahf xchg pushq mov ja movsl or stos push mov cmp xchg outsb or fcompl data16 ds rol (bad) mov (bad) popfq lock fild and sbb rex.X in mov mov mov (bad) adc mov notb (bad) (bad) hlt push jge paddw (bad) xchg (bad) ja add sub (bad) fcoms rex.WR and and jg sahf (bad) cli xor jno rolb (bad) popfq rex.X cs jmp rex mov repnz xchg xor jle fmul in cld fadds (bad) stos (bad) xor rclb fildl sub jae mov xchg (bad) ja and imul clc mov mov mov data16 (bad) adc (bad) rex.XB lea rex.RX (bad) (bad) (bad) (bad) cli repz cmpsb int3 jnp sbb and loopne jb mov and shlb cmp jbe mov mul stos fadds lock cmp (bad) mov xor xor add mov sub callq fidivl cmpsb mov ds (bad) imul cld add push sbb cld (bad) (bad) fisubr fldt movabs cwtl out cld (bad) callq movsb outsb xlat cmpsb (bad) imul lea add add rex.X (bad) ss popfq fidiv repz jb sbbl (bad) pop xlat (bad) sbb cmpb xor xchg test movabs jb mov shll (bad) xchg jbe fs callq push cwtl xchg icebp xor adc push sbb mov outsb xchg rex.WRB and (bad) lock mov rex.RX sar callq jmpq out in (bad) jne sub mov ss hlt xchg js fdivr pushq xlat pop xor callq in jae rclb cmpsb loopne out repnz (bad) or (bad) mov fcmovu (bad) js adc jno jbe xorb rex.WXB pop or (bad) (bad) (bad) adc xor jae (bad) iret out rex.XB xchg (bad) stc add ss mulb cmp je lock jae movabs mov stc imul jns or adc pop (bad) rclb in cmp (bad) mov icebp or (bad) rcrl lret iret or movabs mov (bad) jb out mov loope (bad) sub jae (bad) sbb mov (bad) jb test jae in xor adc subl add xlat (bad) (bad) or (bad) add (bad) mov adc mov (bad) sub jmp or lods sbb cmp xchg sbb mov xor (bad) pop fstl mov (bad) jo movsl xchg add pushfq push pop sub xchg out loopne cltd or rorl sub add retq or ss in (bad) shlb pop pop (bad) lods (bad) adcl data16 lea xor xchg repnz (bad) cmp add movslq rol mulb pop rex.WRXB mov retq sti mov movsb adc xchg xchg push fisubrl mov ja mov pop outsb (bad) jge (bad) movabs (bad) jno rex.WRXB (bad) (bad) (bad) data16 mov adc loopne jno insl mov (bad) (bad) in fcoml push repnz add (bad) xor movsb add movsl rex.WRX rex.RB lock jnp rex.XB rex fs xor rex.WR enterq adc jbe jg xchg pop callq xchg movabs xlat xchg cmp and add negb rcl lret (bad) ja rex.RX ss jl sub and icebp xlat test or sbb pushfq xlat push and mov rex.RB pop (bad) mov jl or fwait and and (bad) push cmp sarl xor sahf out outsb loope mov fcompl (bad) push cmc insl or (bad) retq mov (bad) xchg mov sub cmpsl cltd mov mov and xchg adc bnd lock imul divb hlt jbe cmpsb push (bad) rex.RXB es mov leaveq movsb adc repz (bad) adc and or cmp (bad) (bad) xor (bad) jmpq sub (bad) mov cmp in lods adc cmp in pop out mov rex.WB lock repnz xchg jrcxz enterq repnz int sbb fsubrp sarl negb mov add (bad) jo (bad) in popfq push out mov enterq sti xor (bad) mov loopne out jb (bad) mov rex.X rex.WB pop cltd xor (bad) and xchg ds push in out xor (bad) jnp stos (bad) xchg xor movabs push sub fwait (bad) mov je test es (bad) adc add mov rcl ss scas adc repnz addr32 fistp (bad) xchg and mov lret stos flds retq (bad) jg lret pop add movabs movslq (bad) out movabs add retq sub sbbl fstl or or (bad) adc (bad) adc cld (bad) js mov rol and in xor sub sbb xor fldenv xchg rex.WR mov add retq mov sbb add sub pop (bad) mov movabs (bad) fiadd xchg xchg xchg (bad) (bad) cmp rolb mov std lock icebp adc test xchg (bad) rcrl rex.WR callq movabs and pop rex.R repz mov cmp (bad) jne add out mov push (bad) xor and (bad) mov push fidivrl push jmp (bad) idivl sarl repz outsb mov (bad) shlb in xchg jg cmp (bad) (bad) mov lods sub adcl idivb retq jl push adc out add adc (bad) notb xor test pop xchg (bad) addr32 jb pushq lret fs rex.R rex.X ds push retq xchg (bad) add insl rex.RXB imul (bad) (bad) pushq es push (bad) (bad) pop (bad) clc jno (bad) xchg xchg ds xchg (bad) cld fs xchg xlat out mov sti out jg (bad) callq (bad) sarl sbb mov nop mov sbb jo adc jl negl stc (bad) or (bad) out stos pushq (bad) xor lea lea movabs fidivrl jo mov rcrl scas cwtl callq ja pushfq sti (bad) fwait mov repz (bad) mov adc mov movabs callq sbb sub sbb sbb repz int lret add and rclb jno (bad) mov mov sbb enterq mov cmovae jbe lods clc jl sahf retq (bad) rex.RB and (bad) addb (bad) sti enterq add ror cmc hlt (bad) (bad) out cld js add sub enterq callq mov pop sbb (bad) in cld and or or pop jg or push add rcll enterq pop or sbb movsl (bad) loope sbb mov lock cmp and callq mov jo mov test outsl xchg in (bad) sbb and adc (bad) pop pushq test jge cli ss xchg mulb add (bad) (bad) xchg or scas (bad) mov fwait leaveq int3 ss loope andl (bad) mov repnz in jo or mov jrcxz xchg push xchg cld adc int rol adc adc push cmc add adc jbe (bad) test add adc out out or or jne jno jae (bad) (bad) lahf retq lahf or xchg std fwait (bad) sbb (bad) cmp jmpq jbe,pt (bad) lret notb jns syscall add decl div adc pop ficomp (bad) (bad) addb rclb sarb lock lods movabs hlt lods cmpsl clc in push pop pandn rolb mov add data16 enterq (bad) adc in (bad) adc (bad) hlt jg hlt add mov and fdiv movsl addr32 jne (bad) (bad) jnp loope hlt push pop rex.WB repnz adc popfq add add xchg push adc xor divb sahf in xlat popfq cmp out or push stos push cmpsl (bad) mov adc (bad) test stos movsb popfq clc in xor xchg mov and mov add (bad) mov (bad) int3 (bad) (bad) xchg add adc and add (bad) test (bad) rex.XB (bad) (bad) xchg xchg sbb sbb (bad) test jb mov movsb es scas fwait pop (bad) xchg (bad) (bad) cmp mov xchg rex.RX sub divb cli imul outsb test (bad) pop test add test add or sarl fist scas test divb out lods nop lret xor pushfq add rorb and xor jle jmpq cmp lods or xchg rex.WR mov sbb fisttpl and fnsave or or lock (bad) imul sti add adc rex.RB in movslq nop and fst imul cmpsl jne sarl xlat rex.W or sahf movabs int3 add adc (bad) (bad) or or jbe lock or movabs mov xchg (bad) lahf movabs fiadd xchg xlat fidivl xchg setnp mov enterq cmpsl cmpsl sub (bad) jle xor mov mov mov rex.WRX test mov xor mov or or in testl icebp lret popfq sub or jbe sbb xlat adc adcl fdiv or test (bad) (bad) mov or jl (bad) out movabs nop int3 fcoms jmpq (bad) (bad) mov add adc test mov cmp movslq sub xchg rcll xchg (bad) mov cld andl xchg pushfq jne (bad) icebp ss cli (bad) ja xchg add lods rex.WRX rex.B xor push clc (bad) add lahf mov (bad) xchg (bad) add pop rex.X pop mov push notl xchg (bad) and icebp mov mov sbb in int3 movsb xchg or in jno test (bad) (bad) sbb and push retq (bad) (bad) imul cmc jnp xchg (bad) loopne rex.WR jne (bad) mov in pushq ja xchg js out nop jg pop rcr movabs out (bad) jmp jge out jrcxz (bad) xlat movabs mov add mov sbb (bad) jbe stos out (bad) cmc rex.X rol (bad) mov pop (bad) cmp cmpsb sub jnp icebp rex.WX or mov (bad) (bad) push addr32 or es xchg cltd cmp xlat lahf (bad) and cmp clc adc loopne test jmpq xlat sbbl cmp int3 iret xor (bad) mov pop pop rex.R fs decl fmuls (bad) ss mov rcl mov lea mov in insb shr (bad) nop test je movabs pushq mov add adc fsubl adc out (bad) sar test or add xchg (bad) cmp sub jno (bad) (bad) xor and cmp xchg stc add mov out rex.R rol xor jnp (bad) rex.W cmpsb jg xchg ss or mov out repnz add (bad) cmpsl mov enterq pop jno rex.RXB xchg (bad) in clc (bad) pop addl push lock jno xor sbb cmp mov clc movabs mov xchg (bad) add cmpsb push pushfq cwtl (bad) xchg or hlt push shlb outsb rex.WB hlt xchg imul xorb jge fdivrs loope (bad) mov adc add (bad) test in clc push lods cmc (bad) and cwtl out lock mov (bad) cli mov cmpsl fstps xchg in lahf or and mov pop push jp jmpq andb imul rex.R lret sbb stos andl mov (bad) insb adc add push clc (bad) in je bswap or pop (bad) sar rex.RB mov cmp sbb out cmp orb fdivl xor xchg add (bad) mov std test shrb and callq (bad) add out (bad) rex.X jnp cld icebp push clc add mov movabs rex.XB or xchg je rol repnz sub (bad) mov (bad) js xlat mov pop stos (bad) test out hlt push sahf adc xchg mov loop (bad) jmpq sar xchg fdiv insl (bad) jae ficoml jmpq mov (bad) sub jo adc loope icebp rex.RXB sub leaveq insl xor sbb (bad) lock flds mov ja rex rex.WB rex.RB movabs add (bad) xchg retq xor gs add add rex.WRXB (bad) add int3 loop js out lahf cmp mov cld sub or repnz (bad) rcll cwtl ficoml push sbb loopne sahf mov mov pushq lea scas rolb sarb pop clc lods movabs insb clc xchg std jg loopne mov fs (bad) cmpsl jl add jae jb rex.B jbe scas movslq (bad) xor xchg loopne or out (bad) (bad) xor fwait sub vmovlpd push (bad) pop mov or movabs jb jns cs xor or cmc retq test xchg push xor rex.XB fs rex.W sub or repz jge je adcl imulb iret out fisttpl iret xchg cmc xchg jno (bad) (bad) repnz sbb or neg rex rex.B pop (bad) mov (bad) xchg (bad) rex.WRB (bad) movabs rex.WRB jo or rex.WRXB repz pushq (bad) rex.WR jno xchg pushq vpsubq xchg push fcomip jp (bad) mov mov xor rex.RXB mov push sbb out (bad) rex.RXB jp cmp push sbb mov (bad) sti retq adc insl jmp xchg outsl repnz sub rex.R js mov sbb (bad) (bad) callq stc (bad) movslq mov rex.B xchg jne mov enterq pop leaveq es std or sub sub in pop add add xchg movabs cmpsb (bad) pop vmovmskps repz fistp enterq (bad) mov cltd mov mov rex callq (bad) jrcxz or sti movslq shr adc rcrb mov xor fldenv (bad) outsb (bad) xchg out pop (bad) sub mov rex.WB repz movabs sbb iret xlat xchg sbb in add and callq cmc hlt rex.R (bad) std (bad) xor xchg in (bad) fs jg scas in sahf jg xchg rex.WRXB int push cwtl cmp (bad) adc (bad) fcompl lods push loope sub sbb mov lret insb (bad) repnz insl mov hlt jbe mov jne add push out mov test (bad) lods stos push idivb xchg ss xchg rex.W insb xchg pushq je (bad) (bad) enterq (bad) (bad) cmp push mov cmpb iret sub rex.B lret cltd add cmp clc idivl std (bad) jmp (bad) mov js in mov icebp mov mov adc in xor adc pop (bad) jrcxz adc (bad) repnz (bad) callq movslq sub sbb and xchg xor (bad) or xor (bad) ds movabs xchg mov cmpsb mov lret out (bad) in mov jrcxz mov fstpl (bad) movabs (bad) sti rex.WX (bad) pop (bad) adc addl pushfq test mov cmp movslq stos jmp imul (bad) adc mov rcll pop sbb xchg movsb mov rex.RXB pop mov ss rex.B (bad) (bad) (bad) ss gs rex.WRX xchg pop lea lock stos xor push sub and punpckhbw or xchg nop mov fcomps xchg mov stos add ja fcmovu (bad) xchg fs add (bad) hlt (bad) adc lret fcmovnbe add and add xor adc adc insl rex.WRB add or std sub or xchg mov sub ja fwait push cmpsb je xor xchg addr32 mov femms push jne add lahf add cmc rex.XB outsl in cmp add adc (bad) shr stos mov rex.RXB cli jmpq out xchg addr32 (bad) xchg orb fucomi repnz fwait jno and rex.WRX (bad) loopne rex.WRB jmp jb xchg mov outsb rex.XB mov in xor imul and mov sbb adc pushq xor sub (bad) test lock in lods push or sti movabs mov rex.WRX push adc rex.WX int3 (bad) adc add out adc enterq adc rex.WB rex.RXB (bad) (bad) or xor ds idivb clc popfq mov (bad) adc cmpsb sub fsubr stos push icebp fcoml adc or cmp stos sbb xchg sbb push adc or lret push (bad) cwtl stc (bad) jp (bad) stos sub imul xor fdivrl sbb rex.RB rex.WRXB mov sbb js test pop xor adc mov out and sub (bad) out mov adc cmc clc cmp outsl js out test sub cmp adc (bad) rex.WRXB enterq (bad) lret (bad) (bad) adc sahf in js (bad) xchg in (bad) movabs add scas roll rex.RX pop (bad) leaveq jrcxz mov sub rex.WX int3 sarl (bad) mov sub idivb sub (bad) mov and callq movabs lock xchg xchg stos xor mov out adc (bad) je xchg xlat jne or xchg xchg (bad) (bad) cmp xor divb imul add rex.RX sub ror stos rex.RX addr32 or movsl jmp iret je sbb ja stos fcomps in (bad) movslq fist rex.WX icebp xor rex.WRB (bad) xchg xor nop rex.WXB mov (bad) jrcxz,pt rcrl rorl mov xchg adc add movsl dec loopne (bad) pop cmp or jo cld retq lods cld outsb sub addr32 loope retq xchg mov xchg pushq out iret scas xor add test add (bad) (bad) sbb pop fdivrp sub mov xor xor add pop fwait icebp rclb cmp push mov mov mov stos sbb gs mov (bad) adc fistpl std mov (bad) jno adc xchg sub push mov cmp out ds sbb jb (bad) (bad) (bad) jmpq adc or pop jae sarl (bad) pop lods xor adc mov (bad) rex.W lock jbe pop or stos xor (bad) lock jnp (bad) mov callq movsl xlat sbb mov (bad) sbb clc andb rcrb mov test xchg add out mov rex.XB fcomi push pushq lahf sub xor fidiv movsl adc (bad) hlt (bad) fucomp and (bad) je cwtl and jg adc pop fwait cwtl clc or xchg leaveq mov out sub adc (bad) loopne or (bad) ror push mov mov push es lcall int3 sbb adcl mov add mov adc popfq lahf cmp adc sub add xchg xchg scas (bad) fsub es adc push adc sarb jb in vunpckhpd (bad) callq vmovhps (bad) rex.WRX pushq iret adc lea adc push pop movabs and fsts retq insl out scas sub push xor clc adc xchg negb adc mov sbb (bad) xchg add sub hlt adc (bad) (bad) je and imul mov enterq pop jne add fild push cmpsb xchg hlt adc sbb test jl or ror lock xchg (bad) xor sub xchg imul lea adc rex.RXB cs xor jl rex.WX adc add (bad) adc clc mov cwtl fnop rex.WB xchg push incb cwtl cmp add lock incl adc add xchg xchg push xor icebp jbe cli adc lret sbb cld clc cwtl lods xlat (bad) pop adc rex in hlt popfq fistp xchg or push lock or test xchg hlt sub xor (bad) adc (bad) rex.WB pop and sbb xor data16 movsl jbe,pt add mov cltd (bad) lret add lret and sbb outsb add lock cs out fld (bad) jne enterq (bad) clc mov xchg imul (bad) adc addr32 and push rex.RXB (bad) xor retq xchg mov push jmpq add mov retq js jb lock cwtl cltd adc pop js jae shrb mov mov and callq pop mov in lods mov cmp loopne clc (bad) adc (bad) sar add xor rex.RXB adc icebp (bad) rcll pop cmp (bad) pop std shufps pop xchg cltd xlat int3 jg mov rex.RB mov int3 clc js add add enterq mov or movabs cld nop stos jrcxz add (bad) lret lret loop (bad) or sbb (bad) lock std cmp pop xchg fistl xchg (bad) movsl pushq shlb mov push cmp rex.WX adc mov (bad) (bad) lahf lock adc xchg rex.WRXB pushq cmp or ds (bad) (bad) jmpq jrcxz mov ficom bnd cmc jnp jge mov or mov in enterq (bad) (bad) lods mov mov sbb outsb scas (bad) stos rex.RX out icebp or push (bad) jg mov and adc lods outsl in jmp adc (bad) test xchg movabs hlt in adc (bad) xchg cmpsl add lahf stos fstps (bad) enterq mov adc cld (bad) (bad) in xor jbe and or scas (bad) rex.B repnz cli mov jmp shr (bad) rex.RB repnz int3 rcr mov insl (bad) jp movsl (bad) jo mov add hlt out push xlat fisttpl rex.RX negl pop xchg pushfq repnz sarb add cltd (bad) mov ja callq pop xor scas callq rol (bad) mov (bad) add test getsec push sbb out retq rolb jmp lock in push not mov lret and fnstsw push adc loop add sub rcrl hlt (bad) mov and cmp mov (bad) push rex.X adc mov stc mov fisttp fisub popfq rolb add iret out pushq fucomi (bad) lock and mov lea movsl jbe xlat retq rex.X pop fnop sbb rcl es pop icebp sbb adc adcl rex.X adc out imul mov xchg ficompl (bad) sahf rep sub jp rcrb xor lock cli sti (bad) icebp push pushq xchg fwait (bad) or fcoms cld rex.WRX push ss pop xchg nop cmp xchg iret addr32 (bad) pop outsb imul sbb mov jp rex.WRB or push test mov push (bad) (bad) or add (bad) test jo pop cmp es fcom mov mov icebp fcomip (bad) jno mov rex.WX adc in (bad) xor lods iret lahf (bad) (bad) stos (bad) js rcrl lea clc notl (bad) ss mov insl out and xlat rex.RX in sub xor in add jrcxz and (bad) or (bad) adc out ja xchg fidiv jmp rex.RB lret xchg (bad) mov orl sub callq push pop add data16 ja pop jrcxz (bad) fdivrl insb inc (bad) repnz or (bad) push mov cwtl nop (bad) insb (bad) je fnstenv stos mov fstl cwtl lret es mov sbbb ja mov loopne cmc jmpq movabs mov adc cli fcoms hlt jge add (bad) (bad) in adc repz adc fwait jmpq xor movsl mov mov pop pop rex.WR adc or rex.WRX cmp outsl (bad) jmpq sbb push cmp stos rex.X in pushq (bad) and (bad) fcomp (bad) icebp ss in and push jmp loop movabs jbe (bad) psubsw jae pop or sub or mov cmp stos decl push cmpsl repz mov jge mov (bad) (bad) adc faddl adc rex.B loop cld mov mov (bad) mov repz adc xchg movsb or push (bad) jbe movabs movabs adc or stos lea rex.WRX rex.RX movsl mov push icebp mov fwait push (bad) fadds int3 sahf xor rex.RB stos adc mov jle stc cmpsb test xchg or pushq jmp (bad) rex.RXB (bad) xor movabs test rex.WR push mov js rex.WRX xor negb fsub and or rorb adc pushq push cli fcomp xchg adc fist jrcxz rex.WX in rex.WR or rex.RX adc addr32 int3 fiadd xchg (bad) jge adc (bad) push pop cmp push add adc mov rex.WR (bad) mov adc xchg adc pop je fs or negl mov adc out lods mov rex.WRB jo pop or cmp sbb icebp (bad) push jo add negb pop (bad) test cwtl xor (bad) or rex.R repnz lock mov cltd retq clc js pop callq outsb xor xchg mov pop in mov outsl vmovups cwtl pop jge movsl xlat push adc movabs stos jmpq adc rcll adc push or (bad) adc xchg (bad) (bad) imul adc rex.RB in adc jne (bad) or (bad) nop xchg out adc adc pushfq rex xchg adc icebp sbb sbb or rcrb cltd (bad) movsl adc mov rex.W mull jge jrcxz leaveq adc scas xchg rex.R fidivr prefetchwt1 scas (bad) notl out (bad) bswap push mov fsqrt in rex.R lret adc lods scas sbb loop rex.WR (bad) jmpq jle sti repz lock jp (bad) xchg mov add pushfq cmp clc or (bad) loope adc ja cmp sub cmp adc iret fcomps pop int3 in and cmp rorl xchg sub scas rorl (bad) xchg and or hlt (bad) rolb xchg mov scas (bad) shrl or (bad) push add cs push rex jne rex.WXB jno jo fistpll lret xor mov push nop xor retq rex.RX xchg fucomip cmp (bad) mov mov cmp (bad) jle int xor (bad) adc push stc (bad) subb insb test ss cmpsb sbb test fs cli movabs jb jg in int (bad) sbb mov (bad) mov xor jp jmp test jmpq adc xlat xor jbe (bad) xchg adc callq sub std std adc (bad) xchg mov mov fistl xor adc (bad) (bad) xchg retq mov int add push retq ja (bad) and mov xchg out lea sbb retq cs push jbe mov sbb (bad) (bad) repnz movabs rex.WX rex.W pop jmp cvtdq2ps ds nop lock repz (bad) fdivs (bad) jne or jb movl or imul rex.RB mov (bad) push jl (bad) movabs pop stos adc lret clc add or cmp scas or js test adc (bad) out (bad) add lods xchg pop pop mov or xchg (bad) (bad) je pop adc (bad) sbb (bad) push jbe mov xchg mov xchg xor je mov out sbb mov test (bad) (bad) push (bad) or icebp (bad) (bad) je not repz xchg lret int3 outsl xchg (bad) mov push cmp callq (bad) fistl mov rex.RXB mov add adc jno (bad) (bad) cwtl (bad) (bad) or mov outsl sub adc cli frstor adc in jne fisubl (bad) movabs and bswap xor or cld icebp adc mov jl cld adc cmp adc sbb jl or lret push cmp insb rex.WRXB mov repz movabs pop fsubl enterq in rex.RXB rex.WX mov fdivs jb movsl jae cli push sbbl xchg (bad) fistl cmp xor push mov or (bad) rex.WB ds add (bad) add addl lahf in (bad) out xchg or rex.RB lods cmp sub cli pushq rex.WXB pop xchg add sbb (bad) hlt es sub imul mov jl rex.RB int3 adc callq sub mov jg retq leaveq rex.WRXB mov xor mov (bad) cmp add rex.WB sbb and rex.WXB movsb rex.RXB fwait adc loope mov fistp xchg sbb push push adc mov lahf sub (bad) cwtl clc rol mov movabs and jnp xchg ficompl adc scas xor jb retq sub imul je lret lahf or rex.WB sbb add sbb cld test (bad) pop loope adc (bad) sbb adc xchg jp and add or (bad) ja repz es lret or push xchg adc stos sub adc repz mov addr32 sub stc addb mov movslq adc mov xchg push fnstcw add adc retq rex.WX adc (bad) xor (bad) test mov mov hlt adc ficompl rcrb stos data16 xlat (bad) rex.XB pop mov rex.RB (bad) nop in clc adc fs mov or push (bad) insl xchg mov fildl roll (bad) pop cmpsb xchg push scas scas nop rex.R clc (bad) mov retq fdivs sub xchg mov out addr32 rex.WRX ds test (bad) (bad) push pop or (bad) (bad) rep xor (bad) xchg lods (bad) imul out cmp (bad) mov (bad) movhlps test (bad) (bad) and (bad) out int ds mov fisub jo ja jmpq (bad) sbb incb push rex.RB insb adc add pushq mov (bad) xor pop cld callq mov or stos test fistpll mov (bad) and adc cmc jo xchg cmp movabs stos (bad) and xchg jne jp mov cli callq xchg push out add xor jp push pop (bad) scas xlat rex.WRX rex.WR xchg fwait pop (bad) lea (bad) mov rex.B rex.RXB or mov jo cmp fmull rorl fsubrl (bad) enterq (bad) iret or hlt retq in add ds clc or pop clc in sbb sub hlt xlat cmp adc jle mov (bad) std or fcomps fcompl mov es outsb push lods rex.WRXB and mov or test mov and cmp (bad) pop scas movsb ja (bad) adc (bad) fistpl xchg rex.WRX movabs fmuls adc push adc fadd lahf out jo cmp retq adc adc mov lcall add sbb adc adc or ja xchg adc pop jo adc rex.WR js cltd (bad) jns adc gs sub cmp add imul (bad) pop adc push xchg je xchg rex.WRB and mov (bad) sub sbb rcll imul std repz movsl (bad) callq jnp xchg mov adc (bad) cmc (bad) movabs pushfq or movsb rex.R callq (bad) adc rcrl rex.XB and mov scas insb cs xchg adc neg (bad) je adc leaveq xlat rex.X cvtps2pi leaveq sbb clc rclb push jo push lods rcl (bad) mov pop (bad) mov fs (bad) out fwait callq pop and and retq pop (bad) mov or or jno fnsave rex.WRB (bad) pushfq and xchg adc and add popfq xor xor sub (bad) test rex.WRB fs (bad) xor or stos movsb adc mov js (bad) insl or (bad) fcoml int sbb push mov cmp cwtl fidivr (bad) xchg xor or test (bad) (bad) sahf mov fs adc cmp movsb cmp fldl add jl rcl adc jne or movabs xchg sbb pop adc add rex.RX rex.WRXB mov and js (bad) pushfq add in xchg (bad) (bad) adc movabs (bad) insb jae (bad) mov pop shr add xor rex.WXB mov jne mov (bad) jrcxz adc add int3 pushq idivl shll mov repz retq cmp rex.W sub pop cmp hlt mov callq mov mov jmp lock gs sbb int mov cltd (bad) sbb iret (bad) int xchg (bad) cld pop and rex.WX xor scas fbstp (bad) xor out xchg mov cmc push or jnp retq lods or jmp xchg repnz (bad) rex.R mov jns (bad) (bad) scas pop adc (bad) push jbe xchg sub and out (bad) jb rex.RXB sub int3 rcll rclb mov int adc stc push ja mov xchg test out mov (bad) xor rex.XB in mov scas push xor stos (bad) push or jne movabs fbld (bad) (bad) movsl adc mov push ficompl stos (bad) or je data16 add adc mov pop adc jl xor cltd jp fldenv sub push xor fwait sar push (bad) adc adc and sub pop bnd rex.X (bad) and rex.RXB repz or cmp cmp pop mov cmp repz rex.RB ds (bad) add and imul imul and mov xor adc or xorl out std cmp (bad) ficoml (bad) cwtl sar (bad) (bad) xchg xor rex.WR repz jne es pop nop mov (bad) test (bad) mov movabs add fisubl pop enterq jrcxz popfq fcmovnbe jno or (bad) or (bad) clc hlt add fstpt xlat add movabs jge scas jle repnz rex.WRX test mov and (bad) rex.R mov sbb repz or sbb adc out pop lock in movntq mov imul jns sarb hlt (bad) sub cmpb out and mov test sub rex out enterq mov or sbb (bad) mov lahf jmp in (bad) je sbb testb mov js add pop movabs (bad) fdivr and scas or push mov hlt es lock scas xchg out fdivrl fldl int (bad) loop clc jp callq sub movabs insb adc lock jmp pushq (bad) xor xor pop push (bad) test mov shll mov (bad) lods std cmp cs jmpq (bad) push fwait (bad) rex fildll icebp mov pop je mov test mov (bad) mov mov fsub cwtl sbb jge mov fstpt rex.XB rclb mov fwait ror (bad) sbb hlt (bad) adc js jne popfq adc pushq test add cmc mov jo cmp enterq lock fdivrs mov cmc hlt clc mov xchg xchg stos sbb or mov retq out rex.X (bad) ja clc test or (bad) sub (bad) xor add movsb (bad) je mov (bad) lock xlat rex.WXB sub mov (bad) (bad) cmp jnp pop sub in scas (bad) pop mov ss nop (bad) xor adc push mov fsts rex.XB hlt sbb (bad) ss push test cmp fdivr add (bad) jne xor sbb imul movsb rex.X mov adc notl or rex.RX mov xchg adc retq rex.WB (bad) and rex.WRXB in (bad) retq cltd mov xchg pushfq rex.XB xlat fsubl js movabs cwtl loop add adc (bad) adcb cmp and icebp rcll push mov xlat cmp cmp lret (bad) in (bad) xor rex.WB (bad) or movsb (bad) sub adc fcomip mov pop cli scas (bad) cmpsl out (bad) xchg mov clc mov insl pushq or adc adc sahf cld cld pop lret leaveq mov clc stc (bad) rcrl (bad) test rex.WR clc (bad) int3 (bad) js movabs mov sub ds sbb mov jle test add rorb mov pop shl pop adc sahf sbb jmpq sbb xor nop pop and retq or rex.WRX and out jmp rex.RXB cmp jge movabs sbb lret mov in and (bad) ror mov test pushfw rex lock in rex.WRB or add lret (bad) jbe mov cmp sbb add sbb jl mov xor cli and in es xor pop movsl js decb pushq adc lret add sbb (bad) and add cmpsb imul jne fist (bad) pop rolb mov jl mull sub mov push and out or xchg and es in cld xchg add adc callq and sub (bad) hlt xchg hlt shlb adc stos test rex.B jp sbb loope or (bad) (bad) adc (bad) push mov rex.WX scas and sub (bad) lods xchg (bad) mov sbb adc push adc sbb imul stos adc mov (bad) fwait pop imul pop (bad) (bad) sbb (bad) adc loopne js enterq adc and (bad) retq shrl mov (bad) pop pop es add adc test mov xchg movsb in xchg xchg fildl xor notl mov iret (bad) rex.RXB sbb sub rex.RB push sub jg sti adc (bad) (bad) mov enterq cmp in lods movslq scas lea lahf adc imul (bad) push fstps adc callq jae fsubr (bad) movslq subb mov jns mov lock mov (bad) outsb retq adc xor (bad) pop add rex.WX movabs jae sub adc lods retq sbb sub (bad) adc or rex.WR mov pushq adc jae cmp xchg out mov stc lahf movabs or (bad) (bad) enterq retq pushfq sub rex.XB mov sbb and add sub insb (bad) mov and adc (bad) in (bad) adc iret (bad) movsl test rolb retq or mov rex.WRX (bad) in or cltd loopne movsb movb push out xor jmpq adc lahf and ds xor or cld add (bad) mov jb pop adc in xchg mov lock mov outsb xchg xor out xlat push xchg cli mov sti rex.WRB xchg push cmpsb or in lret pextrw test rex.X rex.RX jno outsl (bad) repnz lock fadds movsl mov sbb test jno fcmovb jb (bad) rex.XB rex xlat adc lods (bad) out loope pop outsb out pop in in ds mov (bad) push (bad) (bad) jp xchg nop (bad) testl mov push jg (bad) lea ss sbb movabs rcrb int cmc cli idivb jb mov jp cmc repnz imul or jae xor adc add cmp fsts mov (bad) mov add (bad) mov jg (bad) test jae fcmovbe lret retq rex.WRXB sbb push imul xchg nop jo jnp mov pushq adc xchg repnz int add rex.WR rex.X rex.X rex.WRXB in movsl cmpsb cwtl or jae out cwtl fcmovb cmpsl cmpl xlat imul ja rex.RB rex.RB (bad) mov leaveq push retq cmpsb movabs (bad) jns mov jmpq jne insl flds cmp movabs xchg cmp (bad) jns movslq ja cmp or div js insl je rex.WX xor push out jg scas adc (bad) push popfq pop add (bad) mov (bad) or stos sahf sub (bad) retq add push loop in outsl testb (bad) (bad) repz cmp rcll cltd sarl test sbb insl jmpq (bad) xorl ljmp (bad) mov scas out pushq rex.WB lock jno (bad) (bad) add pop nop xchg rex.RX adc mov xor hlt or clc (bad) repz pop (bad) rorb retq in (bad) mov jmpq sbb adc push cmp (bad) (bad) scas adc repz add movslq sti idivb retq int lock cmp pushq add (bad) pop js jae push rex.WB (bad) (bad) movsl xor jmp xchg (bad) lods in (bad) ficomp (bad) sub adc rex fdivrs rex stos xor out add enterq callq loop sub and scas js stc mov or cmp imul mov (bad) and cwtl packuswb repnz mov xchg fistl jne push mov outsl xlat and add xor xchg test rex.WX adc (bad) cmp sub xchg js sahf std stos sbb pushfq cmpsl adc rex.RXB movslq cmpsb cmp jrcxz jle mov insl or push adc (bad) cmc je pop (bad) sbb pop popfq adc (bad) cmp sbb fs ds and pushq adc jle xor cli jg pop (bad) push ss (bad) hlt lods (bad) sub (bad) std or and rex.WX mov movabs ficomp or mov shl add mov add test pcmpgtd popfq jl cmpsb xchg movabs scas xor cld out addr32 adc jp sbb cmpsl jnp enterq (bad) pop add mov (bad) push pushq test scas (bad) mov or sbb add lods jne and in mov mov (bad) cld mov sub adc mov (bad) xchg add mov mov rex.RXB rex.RX fwait int3 or lahf cli or and mov cltd cmpsl (bad) push add outsl pushq enterq in (bad) sub push rex.WR iret (bad) (bad) adc (bad) (bad) rex.RX xlat fistpll callq jbe pushq rex pushq rex.B (bad) cli xorb (bad) movabs fcoms ror mov cmpsl fadd add adc cmp xor adc (bad) js cli add cmp (bad) (bad) cmp fwait mov (bad) mov jne movsb sbb (bad) imul lahf mov sub mov rol test je (bad) fcmovnu or or (bad) out out enterq push movabs cmp (bad) out data16 fs and sbb retq (bad) sbb add (bad) jbe (bad) jno movabs lods fdivrl iret adc adc leaveq (bad) (bad) mov fdiv sub (bad) sti rclb adc cs (bad) xor mov test mov callq test mov or rex.XB addr32 adc cmp mov enterq jp repnz cmp rex.RB (bad) hlt cmp rex.WR push outsb fistl or mov sub cwtl adc xchg lahf xchg cmpsb in xchg cld fcoms and repnz (bad) (bad) pop rex.R mov and (bad) callq shrb enterq (bad) (bad) mov loopne xor or shr data16 lods cmp iret rex.WX outsb shll push xor mov xchg cmp (bad) cld ficomp pop mov lret xchg and jge pop enterq xor jl outsl imul xchg or mov movslq rex.W add xchg xchg xor test mov sbb rex.RB movabs rolb or and mov (bad) push sub pop mov mov sub out jle mov (bad) or xor movsl rex.WRX rex.WB add fs (bad) (bad) sbb (bad) rex.WXB add (bad) repz mov hlt mov (bad) adc lret fs insb add insl pop mov pop fstpl (bad) pop data16 xor or ficoml lods xlat int3 add add loope mov ja ja movabs or rex.WRXB rex.RX fcmovnb mov in repnz (bad) andl rorb (bad) sbb jp jbe test sbb popfq rex.W fcom lods xor movsb and (bad) mov lods rex.RX jmpq adc (bad) xchg jbe in adc (bad) (bad) cltd pop (bad) pop and retq movb jp js vcvtdq2pd (bad) mov mov cmp jle mov incl pop (bad) (bad) xlat cmp (bad) es adc xchg (bad) movabs test ficoml rex.RX add lret sbb cmp mov or (bad) orb repnz (bad) test mov add outsl cmp mov add xor sub out int3 fwait movsb hlt rex.WRB rex.RXB mov movabs lret push sarb (bad) adc add rex.W rex.WX lret nop add mov stos outsl ja je sbb scas movslq ss mov xor or or cmp sub jg bnd imul or mov mov scas std xor es test mov callq cmp jnp movabs add adc sbb rex.WR mov adc adc (bad) cmp (bad) (bad) (bad) add lock sub add mov in notb jno xchg popfq in or xor shrb rcrl (bad) or cwtl or out fsubr (bad) in add mov jmpq adc jg jns repnz rex.B repnz xchg add jns add add (bad) mov xor adc addb xor mov or adc insb mov pushq out imul loopne (bad) rex.WB xor (bad) gs sbb rex.WRB (bad) (bad) adc mov ds rolb jno rex.WRX or xchg xor jnp fistpll ja stos (bad) adc jne rex.W cs push xchg (bad) mov test push xlat xor outsl sub (bad) mov leaveq sub cld (bad) (bad) rex.WXB adc mov (bad) lea adc rex.WRB adc mov lret xlat xor jno xchg and mov adc sub fnsave out adc (bad) (bad) imul cmp out pop rex.W loop pop (bad) cli or mov callq enterq es jp sbb pushq roll xor cmp (bad) xchg (bad) mov xchg movabs push rex.WB gs push push fsubl mov (bad) or rex.XB movabs sbb jle xsave rex.WRX idivb (bad) push repnz rex.XB lock retq cmpsb imul sbb or leaveq xchg mov and pop (bad) loop addr32 mov (bad) cmp or (bad) (bad) and shr sub movsb push jg mov xor fldl rex.WRX adc movslq sub callq iret (bad) xchg ja sub (bad) (bad) xchg rex.X insb push mov sarl (bad) push fsts ds in pop callq sub (bad) mov or mov xor adc jne retq int3 scas sbb pop and out (bad) and (bad) mov (bad) rex.WB xchg imul sahf movabs adc out ja (bad) add (bad) movsb (bad) (bad) imul adc mov pop mov (bad) sbb (bad) repnz shrb movsl add stos jmpq (bad) or mov pushfq mov out sub ja fdivr (bad) xchg js xchg movabs or (bad) jb stc (bad) cmc jbe fs int mov decb add in or (bad) ja out cmpb or test lea (bad) shrl adc (bad) retq sub out fs (bad) (bad) sti ljmp rex.B add add xchg rex.X decb mov mov data16 xor mov or xor mov rex.WRX in cli cwtl xchg decb cmpsb (bad) sub pop je mov pop jbe fisubrl cmp repnz adc js mov retq mov sub mov jne jb (bad) icebp xchg mov fwait mov fidivrl pushfq cwtl or xor nop data16 (bad) fsub rex.WX negb xlat mov jnp (bad) fcoms jb xchg (bad) int3 (bad) leaveq ja loop test add and std rex.WX add xor adc lods lea sti leaveq (bad) mov adc pushq test pop xchg sub test scas insl cmp es mov jb xchg cmc sbb (bad) adc pop mov jns insb xchg xor pop sbb movabs cltd adc stos movabs addl sub (bad) nop rex.RX cmp lea push loope addr32 mov rex.WRX adc sbb or adc sub pop ficom rex.XB insb add sub xchg mov jp (bad) fnsave pushfq adc adc (bad) xchg cld mov jle data16 ja push rex.WR rex.RXB rex.RX mov test sub cwtl (bad) (bad) sbb (bad) rex.RB rex.X (bad) (bad) push and jge (bad) or loop adc scas (bad) xor clc (bad) and leaveq shrb (bad) adc xchg stc pop cmp fisubl out xchg xchg movabs push push xlat jne xchg jle sbb (bad) fldl push (bad) (bad) adc (bad) sbb pop jrcxz test out mov (bad) out mov and sbb lret jmpq (bad) repnz sub pop or (bad) repz lods (bad) jl and or test jmpq mov addr32 ja stos rex.WR hlt (bad) in (bad) xor adc scas pop lods iret adc enterq mov (bad) (bad) mov pop cli or xor imul or mov mov xchg lahf ficomp (bad) sbb (bad) idiv (bad) adc jae (bad) mov adc nop cmp mov stc (bad) cmc (bad) rex.WRX lods adc adc fstpt xchg adc xor adcl xchg add rex.RB cmp xchg stc or xchg sub cmp out cmp rex.WR rex.XB or add insl rcrb (bad) sub adc pop pop retq add adc jg jmp adc rex.WXB rex.WX mov push pushfq adc retq and adc sbb movabs rex.RB and pop rex.WR cld hlt adc rex.WX out sti xchg mov sub stc cltd cs movabs add sbb pushfq in pop xchg and cmpsl adc xchg mov gs add fcmovnu adc mov insl or adc push xchg int3 rex.WXB adc mov sbb loop (bad) fdivl jns lret push push sub cmp and rclb pop loopne or (bad) fstps mov pop push loop adc loope lods (bad) adc add rex.R rex.WRB rex.WRXB rex.WR or adc cltd pop cmp rex.XB sbb (bad) or rorb adcl mov fisub (bad) rex.WRB ss in (bad) sub cwtl xchg movl add (bad) insb xchg (bad) cwtl je (bad) add (bad) (bad) fsub pushq (bad) rex.WB sbb fistpl add or adc mov and fistl push (bad) add mov or sti xchg or mov in (bad) mov jnp push retq test (bad) rex.XB pop js or xcrypt-cbc cmpsl nop pop add callq (bad) sub repnz repnz hlt add xor add lock js scas or (bad) adc imul add xor rex.WR (bad) pop jne nop lock cmpsb sbb (bad) sarb lods (bad) (bad) cmp cmpsb rex or retq xchg cmp sbb scas (bad) (bad) or std fdivr sbb jno (bad) or (bad) xchg xchg (bad) xor int xchg imul loope cmpsl sbb fucomi push (bad) fs mov add fisubr jge jrcxz cli adc testl out (bad) xchg mov test mov adc push mov hlt adc mov and add out or rex.X adc (bad) adc es movsb (bad) sub addl adc insl cmpsb out rcll xor rolb (bad) sbb jo stos stc jle sahf mov pop adc push test imul (bad) cmp fs mov sub adc mov test jne adc std mov mov (bad) stos or jl fs mov adc push icebp (bad) add mov retq (bad) lret cmp mov mov movslq jp std (bad) adc xlat pop lods sbb xchg (bad) mov or js (bad) (bad) (bad) rex.WRB lods rex.WRX rex.WR xor mov iret and rex.RXB sub imul int add mov mov and cmpsl sbb and adc enterq push add int3 ss rex.XB rex.WRB andl mov mov adc shlb (bad) hlt mov sub pop rex.RXB movabs (bad) jge (bad) jne (bad) or hlt fadd pop int mov insl jo clc jl add data16 push jb adc pop (bad) callq repnz jmp mov outsb push mov (bad) movsl add (bad) and rex.WRX jl ss notb (bad) cmp sub movabs callq lahf add add jg mov push or fadds repnz notb xchg rex.WRB (bad) fidivl sbb cmp (bad) icebp adcb adc sub (bad) mov and add cmc ds and je lahf push xchg std roll adcl pop or div movsb cwtl xor rex.RX (bad) xor pop xor sub jl or mov (bad) (bad) xchg (bad) cmp (bad) in testb xchg adc punpckhwd imulb (bad) and mov add xor lock jg and sbb retq retq sbb push je (bad) clc retq add scas adc xlat (bad) movabs rex.RX repnz movsb mov decb popfq and xchg (bad) (bad) sbb (bad) (bad) outsb scas retq repz (bad) mov rex.X xchg xlat sbb stos in mov xor xchg xchg sub icebp sarl cmp adc rclb adc cwtl (bad) xchg sbb in jg lods (bad) or popfq pop mov rex.XB (bad) rcrb repnz loopne (bad) sub retq mov lea pop sbb jnp repnz xchg retq mov (bad) adc or loopne test fbstp jmpq fwait clc test movsb rex.WB mov out xchg add callq jbe,pt cs (bad) in sub js movabs add loopne pushfq xchg xor lea cmpsl fisttpl cmp adc cmp rex.WRX sbb or (bad) xchg or jg (bad) lret retq movabs fcoms sbb xchg adc xchg adc cs xor mov (bad) mov sub mov and fmull ds jns out adc popfq movsl cli pop adc pushq lret movsb add mov stos callq adc emms (bad) (bad) rex.RB adc rex.RB repnz fimul (bad) rex.WX nop adc js rex.XB or repnz or rex.RB rex.WX (bad) pop (bad) test adc fistp (bad) data16 jbe (bad) test clc xchg (bad) sub (bad) pop or and and adc sub mov add mov add mov pop (bad) mov in es js or cmp mov (bad) test rex.RB in (bad) push or push lahf (bad) pop and in or (bad) rex.X xchg push or rex.RX xchg (bad) xor cmp sbb cmp jno (bad) fnsave stos push cltd out (bad) mov rex.WB ss push (bad) negb (bad) add (bad) andb out repz sbb iret fdivp movabs ss push (bad) or and (bad) popfq jmpq add mov outsl mov (bad) adc rex.X xchg in jb adc rcll lret push cmp out js mov and insl rex.RX retq test pushfq scas lahf mov push push mov sub mov (bad) adc and jbe fwait js incl rex (bad) cli (bad) stos lret push mov xor sub (bad) adc adc insb mov jne (bad) lods (bad) repz adc sahf (bad) rex.X rex.WXB mov stos pushq jbe xchg callq incb sbb mov push push cmp loopne retq rex.W xchg andb (bad) in out insl out pop add adc push movabs jo and adc sbb (bad) shrb insl or clc (bad) mov or jae adc rex.RXB and scas rex.WXB cmp int3 movabs xchg lock xor (bad) jns adc cmp (bad) adc int3 xchg hlt xor imul std sbb test cmc jmpq fmuls jp popfq xor cmpsl adc mov addr32 (bad) (bad) adc mov fcmovbe sub adc lret adc es stc pop fistpl adc clc mov lods adc mov (bad) pop lock jbe adc xchg adc in cmp adc popfq jmp pushfq test fstps add (bad) int3 retq jo rex.WRB (bad) xchg sub pop lahf lret repnz adc add adc cmp (bad) int sbb (bad) lock (bad) add pushq sub rex.X movslq mov mov cmovne (bad) jmpq xchg cmp mov cwtl rclb fsubrs (bad) movsb jrcxz js xor sub rex.WX and (bad) sub lock repz mov enterq out rex.XB fs (bad) pop jns cmpsl sub mov repnz (bad) callq in push (bad) fimull ja (bad) rcll mov lea iret lods cld (bad) (bad) mov lods movslq out mov add cs lock lods rex.XB add (bad) xlat pop adc jbe orb orl add in cmp movabs notb (bad) rorl in adc mulb xchg fs xchg insl sbb mov sub rex.WRX and loop xchg rex.R lock jmpq add sti xor (bad) cmp cmp add fldl jle orl clc callq nop enterq or js (bad) outsb movslq xor xchg mov popfq loope fistp add adc divb rex.WRXB (bad) scas mov and insb repz mov fnstenv rex.WRXB fsubs mov (bad) fisub adc mov or pop sbb xchg xchg (bad) out mov mov pushq (bad) pushq test mov mov push lock mov mov (bad) rolb movabs mov sti sub add mov mov out (bad) std xchg fidivrl fildll (bad) adc cmp jg ss (bad) mov je cmp add jge je testb hlt add (bad) fsub (bad) or notl rex.RX rex.RXB sub xchg movabs adc adc rex.RXB gs adc lock lods adc std lcall fcoms cs insb ficoml repz icebp mov rex.WRX (bad) adc cltd pushq (bad) (bad) jbe and roll sbb sbb vunpckhps xorl (bad) test test (bad) adc rex.WRX ss and out jp sub mov loope xchg xor cs push (bad) outsb cmp repz adc (bad) mov rex.RXB ds out adc (bad) (bad) (bad) xchg cmp cmp fbld and lock sbb (bad) add out mov cmp sbb addb sbb outsl xchg cmp fucomi fsubs int mov hlt push stos out (bad) cmp rorl add or cmp xchg push add insb (bad) idivl xchg mov push jne lahf cmpsb insl mov loopne rex.RXB fsubrs push ds jne shll addr32 notb movsb in imul rex.RB ficompl adc fnstcw (bad) movsb fsubl adc sbb adc fcmovb jrcxz xchg and cmpb adc push cmp and lods mov (bad) scas (bad) xlat (bad) mov adc rorl rex.WB push div fdivl add adc cmp retq scas (bad) (bad) pop mov pop mov test xlat mov retq xchg push adc sub shrb cld repnz add fs movabs xchg movslq sub adcb imul (bad) cmpsb iret lods fcoms in in (bad) sub and sub sub sarb mov cmp sub jmpq lods xor cmp xchg lahf and sub leaveq test adc stos enterq mov rex.RB (bad) xchg sbb pop decl mov test in lock es movslq or repnz mov xchg cmpl adc std lahf jg (bad) jno jae addr32 pop ljmp (bad) (bad) lods lods and sub or (bad) (bad) sbb hlt cmp mov rex retq stos cmp rex.WB js mov add pushq cmpsb rex.RXB lea mov mov jbe callq mov add add retq jno (bad) add mov cmp out sti cmp addl test sbb xor xchg pop or xchg (bad) addl roll icebp xchg jmpq jmp cmp jrcxz (bad) stos or int3 jmp idivl push or rex.R fcmovb loop sarb adc cltd pop cmp bnd push jb rex.WRB (bad) xchg int3 cltd adc std popfq ds xchg lock clc pushfq movabs (bad) or jp movabs mov popfq cld jmp (bad) sarb rex.RB xor (bad) sahf out js and (bad) clc lret vucomisd adc adc or rex.RB mov int movabs xchg outsb push sbb sbb xchg adc mov scas in rex.WR rex.WX imul fdivrl retq (bad) test lret insb imul sub xchg fcompl add (bad) int (bad) add xlat and int out adc xlat pop (bad) rex.XB addr32 or faddl xchg icebp out movl push cmp outsb xchg in iret out js orl jb sbb add (bad) hlt cwtl fwait pop adc mov (bad) nop push (bad) repnz mov (bad) sbb (bad) add int3 data16 jg insb (bad) mov adc add jp shlb mov add mov jmp jae (bad) jne (bad) (bad) lea adc test sbb rex callq sbb cmp xchg sbb xlat cmp mov add add pop push fdivl cli and fs (bad) imul lahf retq lea or fdivl (bad) movsl enterq sbb cmp mov int push (bad) (bad) fcmovnbe rex.RXB xchg jge or cmpsl adc sbb adc fsubs loopne adc add gs xor ds xchg cltd int xchg hlt ror (bad) rex.X (bad) mov cmpsl (bad) rex.WX es rex.XB (bad) adc jo xchg notl xor mov pop pop sub js test mov adc or movabs push pushfq cmp clc in hlt pop js push (bad) (bad) xchg js (bad) (bad) adc gs adc sti retq push clc sbb or cmp es xchg movabs int gs cmpsl pushq mov (bad) insl (bad) cmp adc lea jns movabs (bad) pop (bad) jmpw (bad) sub callq xor lret mov xlat mov jp (bad) outsl rex.R xchg adc ror push add fist loope jns mov push (bad) and (bad) rex.XB callq (bad) push mov pushq rex.R sbb jmpq mov std js,pn in std (bad) subl scas adc pushfq (bad) enterq sub mov adc xchg add outsl fs stos sbb fbld (bad) push mov lret mov and movsb xchg pop movabs mov fisubr insb stos sub shll (bad) stc movabs cmp mov hlt and ja repnz jns xor rex.R (bad) rex.RXB adc sahf (bad) xchg mov loop pop (bad) mov lret movabs ja add (bad) and or ja xchg repnz in sarb xchg (bad) xor scas jae cli and mov rex.XB cli lock imul rex.WRB pop (bad) fbld mov js add (bad) push rex.X pop (bad) jl add js mov pushq (bad) sar repnz cmp cmovg lahf pop lret sbb pop out in enterq enterq leaveq (bad) xchg shlb (bad) adc stc cld pop add hlt push clc test or (bad) (bad) sbb stc cld test rcll sub (bad) hlt mov cmp fs adc (bad) cld mov pop jle rex.WRX rex.XB fsubrl rex.RB push xor rex.RXB callq fsubl enterq nop adc push pop rex.RXB gs xchg (bad) adc fs rex.WRX je or and xchg stos sbb fdivrl rex.WRXB xchg cwtl (bad) (bad) adc (bad) jmpq adc jnp lods mov jmpq sti jl adc (bad) in and out pushfq lea cmpsb (bad) adc pop sub out or pushq idivb shr movabs adc xchg lcall insl sub mov mov scas sbb xchg (bad) sub std test or jo cmp xchg shll xor fs movsb out bnd cmpsb addr32 retq push callq (bad) (bad) rex.WRX rex.R sarb addr32 mov push sbb enterq jae fistpll fsubs adc fwait pop movsl or mov sti out lret or sbb adc ss mov mov (bad) adc cmp and pushq repz and fwait fwait adc jmp (bad) add notl (bad) adc std rcll or rex.WRXB adc ja jmp adc rcrb sub enterq rex.X popfq movsl sti (bad) push fs and or stc pop cld test jnp add rex.RXB xchg sbb mov mov xor callq (bad) iret rex.X rex jl rex.XB ss stos mov rex.XB (bad) jbe cltd retq (bad) mov or mov adc lea xchg js imul jne xchg jrcxz out (bad) xor fwait pop movabs sbb add rex.WRXB (bad) xor in hlt lea mov jl mov rex.WXB icebp mov adc shlb fmull (bad) sub (bad) out jrcxz or and jb pop (bad) sarb clc pop rclb cmp jno data16 cmp xor jae pushfq hlt cmp rex.WB std test (bad) imul push mov pop insb callq mov rex rex.RX fwait (bad) stos push enterq bnd or xchg shll lods rex.R sahf test lahf ja xchg cwtl add cmpsb (bad) mov lock (bad) int3 js mov lock (bad) jl mov pop test movabs test int3 bnd jae hlt loope callq js fistl adc xor not std sub loope jb lret xchg (bad) sbb xchg int3 mov notl xor rex.W jb test callq jnp cmpsb fwait int3 adc mov movabs mov out int ds (bad) out mov repz push adc mov fidivr outsl push (bad) stos test fild enterq mov sbb (bad) mov jb cmpsl scas lahf mov xlat add lock imul cmpsb in jp sub (bad) movabs cvtps2pi rex.WXB add rorb add lahf lahf sbb nop xor add movabs sub cld lret movabs stos in (bad) rex.WX xor and (bad) es add xor jge,pt add (bad) (bad) xor or test sbb or iret push (bad) (bad) fcmovnbe test fisttpll std movabs enterq imul movabs cmp fsubr gs (bad) (bad) mov push pop adc rex.X repnz mov rex.R rex.WB (bad) push mov (bad) xor sahf jg mov rex.R callq (bad) cmp add lods push push adc repz inc cmp jmp and jmpq test outsl mov (bad) (bad) adc movb ss xor pushq (bad) jrcxz xchg hlt jge (bad) movl add lret mov subb xchg pop lods adc add movsl cmpsl adc mov rex.XB adc sbb rex.R add adc xchg or or fbld sbbl loope movsb pushq sub rex.WXB xchg addr32 repz and cmp rex.X adc movabs (bad) pop cwtl jle jno sub xchg xor rex.RB or pushq pop sbb mov or fidivrl (bad) fidivr repz or in movsl gs js popfq mov pushfq rep or icebp incl add mov fucomp rex.WB pushq in test (bad) iret (bad) ss xchg addr32 (bad) loope add mov scas add gs or or cmp mov cwtl jrcxz xor xlat push fisubl or xchg (bad) pop repnz repnz push mov movabs cld xor cld rex.X jmp or mov idivb and sub lods add jo push mov add mov callq rex.XB test lret rcrb add nop pop callq or ja loope std cs movabs xchg sbb jge clc mov mov hlt adc popq pop outsl xchg in add ja push movabs jo xchg adc mov movabs and rex.R pushq xor (bad) xlat out adc rorl and adc jge jp adc addl je push xchg out rcll jl popfq (bad) std fcoms rex xor add pop addr32 adc mov pop or (bad) fcomps movsb (bad) enterq lea adc mov (bad) add mov popfq (bad) fsubs insl in rex.WB cvttps2pi cmp cmpsl add movabs insl scas sub mov xchg (bad) adc mov test rex.WRB insb and mov push ror ds ds mov out lock loopne cmpsl js mov jb cmc rex.RB repnz fsubs adc mov (bad) rex.XB (bad) cli out pop adc (bad) or sub retq sarb mov (bad) je rex.WRXB xor (bad) (bad) (bad) test sbbl cmp sbb adc retq bnd xchg popfq (bad) mov (bad) xchg xor xchg jmpq pop mov pushfq (bad) mov sbb out int xor out fsubrl xor clc and leaveq out xor ds cmp rex.WRB ss rex.RX gs callq (bad) mov movabs repnz (bad) adc and rex.WX or pushq push add adc push sar mov mov mov rol xor (bad) sbb jrcxz (bad) out rex.W sti jo push ds rex.XB lock xor lret sbb out (bad) xchg xchg adc sti fwait adc push fmuls sbb cmp adc (bad) sahf subl sub jge adc (bad) outsl sub xor adc and push jl adc mov adc test icebp xor sbb sbb adc out jo (bad) test sub cwtl rex.WRB stc (bad) data16 div xor sbb jns pop retq mov sbb adc ss cmp lock pop insl (bad) (bad) rex.WB add sub adc rex.RXB (bad) adc insb lock jne stc jnp sbb and in rex.WXB lret (bad) (bad) movabs (bad) mov adc add (bad) adc sub jle push jbe stos nop in cmpsl sbb enterq xchg (bad) cmp adc rcll adc xchg sti mov movabs movsb mov and or cmovge adc mov add xchg and add pop fdivl movsb add push retq jrcxz out jg sub mov repnz (bad) lea popfq mov or (bad) pushfq mov push xacquire int3 jp (bad) in jne addr32 (bad) mov lret jo (bad) push mov rex.WRX repz xchg lret ficom add xchg rex.WXB mov cld mov add jge xor out pop sub pop (bad) cmp enterq mov movsb sbb fnstsw js test xor in lods (bad) imulb in (bad) sbb cld test add or xchg scas ds shlb rex.WRB subb fwait (bad) jbe fldenv rex.XB cld mov add jnp insl xor lock xor add pushq movsb mov (bad) mov rolb hlt mov sahf int3 sbb loope mov callq int3 fimul rex cmp jle add stos mov repnz jb and (bad) test (bad) scas bnd hlt adc rex.WB sub rcll sub in and scas push shrb push rex.WRXB rex.WXB rex.WXB ss add (bad) (bad) pminsw mov (bad) mov not out lret (bad) rex.RXB (bad) (bad) icebp mov mov ja fadds mov adc cltd cmc mov (bad) fild mov rex.WRB lock add ficoml iret fistpll repnz mov stos or imul cltd mov retq adc adc push or push (bad) xor lahf stos rex.WRB int3 (bad) (bad) sub sub repnz (bad) fimull (bad) (bad) mov cmp pushq int rex.WX push jp add outsb or incb (bad) mov and (bad) (bad) adc cmpsb jbe (bad) cmp add add or mov xchg adc nop (bad) add jl js repnz int3 enterq add repz mov add jae in mov sub (bad) jb out (bad) pop je (bad) mov repz imulb or push out pop rex.RX rep lahf (bad) (bad) mov js repz mov je,pn (bad) repz add imul (bad) cli rex.R jrcxz pop int rex.RX mov pop (bad) pushq add xor (bad) cwtl rex.WRX cmp test loopne lock (bad) int3 leaveq xchg jns (bad) rex.R (bad) add jmp mov jno (bad) sub sub in mov cmp icebp divl or sahf add push pushq scas cmp (bad) (bad) push cmp std (bad) jge shr sbb rex.WRB ss (bad) push sbb sbb or mov fisttp (bad) rex.WRX rex.WRX negb (bad) rex.WXB add stc rex.WB (bad) mov mov (bad) cltd sbb or push mov loopne mov mov mov sbb ds pop jmp cmp mov (bad) lret loopne jmp or (bad) push adc (bad) xchg fildl rex.RB out rex.WRXB (bad) fcmovu and test push push adc adc cwtl pushfq rex.RB cs rex.WX (bad) fwait mov cmp (bad) add cld sub rex.RB repnz rex.B fsubl enterq sbbl nop test pop push fnstcw xchg and imul xor xor test hlt (bad) and mov push push or test and sub std (bad) loope (bad) jle repnz outsb jno (bad) repz push movabs insb negb loope mov cmpsb scas movabs rex.R rex.RB push jge jno (bad) (bad) or push fdiv add mov jb rex.WB rolb push rex.RB cmp mov stos rex.R jb sub xchg roll (bad) (bad) push sub test callq jns xor (bad) (bad) (bad) imul xchg (bad) xor xlat in or jns repnz (bad) (bad) jne negb mov test (bad) sbb (bad) pop lods mov rex.B or ja add cld out (bad) add mov cmpsl fidiv (bad) pushq cmp (bad) out jmpq cmpsb rex.X (bad) (bad) fwait retq cld int3 movsl jg ds rex.WRX mov insl (bad) pop lahf (bad) in test movabs push add jmpq cmc xchg fidivrl cmp movabs ja (bad) xor xor jg (bad) jg (bad) lahf fcoms test rex.RB es adc in ja cmp leaveq mov mov adc out push rol outsl adc rex.RB (bad) cmp fsubrl enterq mov in ja out mov rex.RB adc mov cmp fwait mov rex.WRB fsubrs jnp subb jmp jns rex.WRXB add rex.B stc rex.RXB mov and adc nop sub (bad) jno nop cmp (bad) in callq mov mov adc out xor adc (bad) (bad) sub shlb adc fcmovnb gs fs mov data16 mov ficoml (bad) adc (bad) mov sbb push stos lock (bad) test and push push fcoms xchg clc (bad) add pop mov push (bad) adc xor jle adc idivb imul (bad) adc add rex.RB fcompl xlat sub add rex.R (bad) xlat (bad) adc push mov test popfq lods (bad) (bad) adc mov or adc mov addr32 rex.RXB cmp test pop je mov int3 adc adc (bad) ficoml mov or movabs cmc xor fldt sti cwtl cltd (bad) jbe mov adc cmp mov fsubrl pop sbb sub mov vmovddup rex.WB ficoml rcll rex.RX fs mov adc rex ja (bad) (bad) test xchg sub fldl or xor (bad) jo mov rcll lea push xor mov in or cld add rex.WRXB rex.XB movslq movabs fstl movslq stos fs movl sbb (bad) xchg and sbb iret add adc jb mov in rclb mov mov retq xchg (bad) cmp jmp xchg xchg mov in sub mov loopne ja xchg clc popfq rex.X sub pop (bad) insb sub or js add xchg mov adc movabs sbb rex.WRB (bad) xchg rex.WB test mov scas cwtl rex.WRB rex.WR (bad) push (bad) cmp repz xchg mov adc pushq loopne clc or push cmp fidivl (bad) cwtl cmp loopne (bad) fdivl pop loop (bad) push divl mov mov fdivrl add mov movabs (bad) rcrl adc add mov out xchg or in fwait (bad) xchg or fbstp xor ss callq add (bad) fidivr rex.RB rex.WXB rex.WX clc std clc (bad) add jge xchg or (bad) xchg clc jrcxz adc andb loope mov movabs or rex.X retq jrcxz xchg pop sub (bad) lret je adc jae mov ss movabs enterq rex.WX sbb rex.X (bad) and (bad) mov push (bad) mov or sub jrcxz xor mov stos stos adc jl in adc or mov xor rex.RB lret cmp imul int add xor adc cld cs rex.WRXB and xor adc rex.RX push clc push pop or mov jmp mov je imul rclb add cmp jp push (bad) pushfq cmp fisub adc nop push (bad) cmp add mov (bad) xchg pop and jl push int3 jno pop sbb (bad) mov ds add jae test sub cltd pushfq jb rex.W rex.RB cmp stc callq (bad) and gs fdivrl movsb mov mov jne sbb or lods cmovl callq mov fwait pop mov xchg cltd cmp adc scas push adc cli (bad) rclb jg lock (bad) adc movabs orl icebp adc adcb or rex.WXB rex.RXB cs push movabs jge xchg push xor xchg popfq cmp rex.WR push sbb clc cmpsl movabs push jae pushq es sub adc push sahf pop not xor movslq data16 stc mov pushfq xchg xchg jns adcb (bad) add jmp push lock callq (bad) (bad) push push adc loopne sub rex.RB pop leaveq pushq sub and push cmp push rex jb (bad) movabs mov jno xchg lods outsl (bad) roll callq lret pop mov int3 (bad) rcll (bad) pop mov scas jbe (bad) mov incl add iret jae (bad) movabs sahf hlt rex.B mov test pop jmpq rex.B rex.WRB fwait adc out fs push mov (bad) callq (bad) rex.WX and (bad) fsubrs xchg cmpsl xchg mov gs fcomp int sub (bad) cmp loopne add mov movabs (bad) xlat adc push test adc xchg sub xchg adc repnz jp fistpl sahf gs mov clc rex.WR outsb repnz movabs adc or out mov lock retq movsl (bad) adc push lahf int3 jae adc movabs cmp sub push jae lods repnz rex.WX (bad) rex.R push gs sub es rex.WRB fistl (bad) (bad) jl adc movsl mov adc xor callq jnp jns (bad) mov movb (bad) retq mov or xchg sahf sub rex.WRB adc pushfq (bad) cmpsl cmpsl mov (bad) cltd decb (bad) mov sub adc (bad) out lods ficoml xchg test sub outsl jb rex.WRX xchg clc (bad) rex stc adc pop (bad) xchg or adc xchg mov jbe pop adc movsb mov (bad) enterq mov nop xor out (bad) movsl adc jg callq xchg leaveq xlat fistpl fldcw sub (bad) (bad) jno fdivrl pushq movsl test enterq add jg or sahf xor or or out std outsl (bad) xor (bad) add (bad) in sub imul in and mov retq fisttpll hlt lock mov mov int3 jrcxz loopne (bad) out loopne jmpq sbb rcr scas cmp js (bad) jl nop (bad) rex.WRXB rex.WXB test xor imul rol add xchg stos or mov and xchg fldenv fiadd cmpsl jne or jae popq push mov callq mov mov mov pop push mov outsl rex xor rex.WRB retq (bad) fnsave and xchg rex.RB adc adc mov (bad) leaveq nop xchg adc (bad) mov notb rex.W insb pushfq xchg lock (bad) adc movsl js pop add clc fsubrl adc pop fs pushq mov movsl xchg xchg je hlt mov or insl (bad) pop (bad) rex adc jo cmc jnp mov setno retq adc xchg xchg movsl in movlps xchg scas rex.RX rex.RB enterq cwtl jns jnp push pop sub sarl mov rorb adc scas sbb fwait add nop and adc or repnz (bad) (bad) and rex.R int3 outsb or subb icebp int movabs (bad) add pushq sbb jge adc and xchg (bad) loopne pop insb adc sbb loop test callq int js mov add stos (bad) push fcoms xor adc and adc cli int3 insl adc divb lahf adc rex out int3 pop (bad) (bad) sbb cmp push xchg xchg jb adc imul out in insl jp adc loopne movabs cmp je (bad) jmp fcoms add movabs mov sub add cmp (bad) or rex.B (bad) or fnstcw xchg xor callq add or (bad) jge int3 (bad) fs mov stos movsb xchg repz pushq fldt rex.R leaveq xor mov imulb lahf or cmp (bad) popfq xchg adc outsb rex.XB and fwait lock in fsubr psadbw pop pop or rex.WXB and pushfq je pushq jmpq jnp scas (bad) (bad) (bad) jg cmp jae mov lock js loope iret test adc rex.WXB ss addb fsubl rex.XB rex.WX (bad) jg movabs je mov rex (bad) (bad) rex.B mov pop pushq mov rex.WB rex.WR jns loop and stos jno add xchg adc nop jrcxz mov mov in fmuls (bad) rex.WRX movabs and jo pop sbb rex.WRB outsb and adc cmpsb xchg push (bad) lock cltd clc (bad) sbb jbe adc int3 rex.WRX push clc (bad) jle jno jb (bad) and iret xor (bad) outsl movabs sbb in int3 mov js int decl ja imul adc pop pushq cwtl sbb jno and jbe ds mov add movabs callq rex.WRXB retq xchg sub fimul callq clc out cmp mov cltd insb jbe push cmp pop push rex.R cmpsl cmp fnstcw iret sub enterq pop fsubr (bad) (bad) jbe icebp sbb mov jle jl xorl cmc mov outsl gs (bad) mov nop xchg retq jb (bad) xchg and jbe xchg and add int3 out and and xor gs cmpsl xchg adc jl adc cld pop xchg es rex.WX xor cwtl mov loope (bad) jge out cmp stc pop scas jno lock jb (bad) sbb pushq test push sbb or jne sub adc in rex.WRB rorl data16 (bad) (bad) test sub mov sti (bad) sub fsubs pop rex.XB fsub push std and (bad) adc adc lock insl retq faddl data16 or stos imul cmc rex.WXB adc repnz lods sbb adcb clc add sub jbe xchg rex.WRX rex.RB rex.R jb je rex rex.WRX subl and (bad) in jae ja xchg adc mov xchg mov lret or in sbb (bad) push js in sahf (bad) repnz mov cmp or clc jge adc movsb mov mov xor mov insl fbstp jb adc in jne,pt adc scas jg lahf xor mov xchg (bad) jb clc mov xor pushq (bad) adc lods cs lahf cmp jae mov fwait pop es lods adc push push fcompl sub xor (bad) xchg pushq es movsb (bad) callq cmpsl clc xor lea fcmovu movabs rcll enterq sbb icebp cmpsl loopne lret or add loopne mov xchg movsb xor callq rex.WRB sbb sbb idiv lods jmpq repz (bad) push jo sub stc cld lahf xor divb (bad) test rex.X xlat mov lock (bad) adc cmp (bad) pop faddl rex.WRB cmp repz (bad) rex.WRXB lock jne cmc test (bad) push jb enterq ss (bad) adc xchg mov fnstcw stos adc xor stos jae (bad) pop and mov push adc sub sbb movabs rex.RXB stc (bad) mov lods rorl jns adcl push mov callq sbb sbb jmpq (bad) (bad) xor out fwait mov push jne in callq mulb mov push rex.WRB shlb xor mov xor out (bad) repnz rcrb mov (bad) pop mov (bad) mov rex.WXB xchg (bad) rcrb insl in and mov scas xor imul mov add out rex.XB int (bad) cmc fstp sbb adc fcomps loopne es fwait jns or mov ds mov xchg adc movabs (bad) adc (bad) stos cmc xchg fdivrl lahf movabs faddl adc xchg test or incl cmpsb repz stos (bad) and adc jle rex.RX rex.RXB cltd sti (bad) add insb adc pop (bad) xchg (bad) xor je mov rex.WR (bad) xchg adc fdivl adc mov cmp loope add in mov cwtl adc and out icebp movsl pushq fwait or sti addl hlt (bad) scas xor push rex.RB rex.RXB sbb (bad) sbb jle mov sbb add cmp rex.RXB cs retq push leaveq xchg or or mov add or cwtl cmp imul rex.WB and shrb cmp mov jrcxz jg adc adc cmp xchg (bad) jmpq jb (bad) ja cmp jo mov pop popfq popfq repz pushfq fstpt (bad) (bad) (bad) cltd sbb rolb sbb jp rolb in sub sbb add rcll orb out push sub jne test or (bad) rcr cmp (bad) rex.W add callq or pop (bad) mov fisubrl add shlb cmp (bad) jg xor or nop (bad) cmc push rex.WXB shr movabs jbe rex.WR mov nop rex.WB notb (bad) (bad) icebp xchg repnz (bad) and mov jge adc rex.RB sub adc and or mov and clc adc (bad) fcomip xor stc int pushfq ss rcrl test imul (bad) xchg jno js push imul (bad) rex.RX rex.X gs xor push mov sbb in outsl xchg jae jp sti (bad) cwtl mov in mov mov jrcxz andb or (bad) sub js mov cwtl or cltd (bad) add rex.RB gs mov notb (bad) in movabs clc callq (bad) adc pop (bad) jge xor (bad) xor sti nop in cmc callq (bad) roll rex.WB fwait cmp xchg std rex.RXB adc lods (bad) xlat fs sbb (bad) jmp mov nop push adcl and adc add or lret sbb mov cmovbe xchg jbe in push jne mov mov movslq fldl xor loopne adc xchg ja pop adc xchg push cmp movsb movabs (bad) add mov lcall jno in mov (bad) sub jno repz loop rex.X lock pop mov psubusb rex.RXB mov out pop movabs loopne fsub (bad) sbb mov shrl rex.XB outsb (bad) fldt add rex.WRX jbe (bad) leaveq pushq jp js rex.RB or outsb outsb (bad) mov imul (bad) mov push outsb fcmovbe mov (bad) sbb mov outsb xor xor (bad) imul xchg xchg xchg jrcxz std mov (bad) int3 mov add cmp ficom mov xor sub (bad) jge pop pop (bad) (bad) rex.WRB mov por mov stos mov pop lahf cltd xor adc ja and add sbb adc mov mov lock mov sarb callq out (bad) iret add add sub lret test (bad) repnz repz pushfq mov icebp adc jo (bad) add mov callq add (bad) sub sbb cs sub stos in fist mov shrl (bad) mov cmpsb xchg (bad) cmp cmp rex.R iret std nop (bad) (bad) cltd insl adc in movabs (bad) or add jo mov ss lea (bad) jl pop enterq rorb sub xor xor test xor sbb mov rex.RB mov in loopne adc xchg cmp mov (bad) rex.WRX bswap ja mov repnz int3 jne and or mov (bad) movabs mov cmp xor js mov fstpl xor (bad) fistl rex.RB mov push adc in and (bad) jno pushq mov lahf add adc sub loop (bad) rex.B fwait imul cmp push insl rex.R enterq movabs adcb push adc ds int3 pop mov pushq and push xchg cmp and or xor and jb jns pop rex.WXB fsubrl (bad) (bad) xor adc (bad) stos sbb push pop and (bad) rex int3 movabs xor mov sub add data16 int and rex.X repnz mov (bad) (bad) jno xlat (bad) movslq in int3 sbb (bad) or or test cld (bad) sbb sahf (bad) movabs fsubs (bad) or insb push add adc sbb fstps (bad) loopne mov addr32 shrb jl stos adc or (bad) sub and (bad) leaveq insl es and movsl pop data16 xchg sub xlat and sarb scas add hlt (bad) rex.WB popfq mov sbb (bad) in fucomi sub test shl cmp mov lret rex.WX movabs (bad) in sahf imulb or add add out pop and stc cli mov sbb xchg jne lret (bad) xor mov mov pop movabs sbb stc out imul cmpsb (bad) and sub adc in iret xor mov lret rex.WRXB loopne movabs and mov (bad) stos imul or or clc pop ds mov cmc jb fwait adc scas outsb adc xchg mov iret rex.WRX in push fidivrl xchg (bad) mov mov movabs cwtl mov adc iret xchg jmpq sarl fistpl out adc sub mov (bad) (bad) xchg xor adc add mov (bad) sub je andb movabs rex.RXB data16 mov or cmp jnp (bad) movsb xchg jge (bad) (bad) (bad) mov (bad) cmp sbb mov push and add fwait rex.RX add (bad) xchg adc add in sbb adc sbb cs nop jrcxz xchg ja imul stc (bad) (bad) sti (bad) sbb cmpsb mov sub int jnp in or mov xchg (bad) (bad) xchg shr adc stos xchg push sbb mov movslq rex.WRXB xchg js sbb imul xchg sbb pop js jo xchg stos rex.X rex.XB or mov add adc jge adc (bad) lea rex.B ja add fildl fs rex.RX sbb (bad) jae (bad) out jb mov insb rex.WX ds push sub movabs xchg sub test imul mov adc adc push in pop imul shrl cmp xchg retq callq xor sub jb rex jp adc sub pop jbe xchg or mov push rex.RB mov (bad) insl mov cmc pop (bad) rex.WRXB xchg xor (bad) add callq (bad) cli mov insl movabs cltd imul add (bad) iret fwait adc xchg rex.R (bad) jnp xlat rex movabs cmpsb cmp cmpsl or test adc mov movsl push mov movabs cmpsl adc xlat ja jns fist (bad) test cmc (bad) js (bad) vhsubpd (bad) mov xchg sub pop mov fsubr repnz jno and imul (bad) hlt (bad) (bad) mov repnz rex.RX (bad) jmp xchg insl js out (bad) sbb pop push or repnz jmpq movsb (bad) xor cmp and cmp fcmovnb jmpq frstor jge (bad) pop testb xchg iret pop (bad) mov flds jns rclb and (bad) cld add movslq hlt movabs jae lock test in jg pop add in rex.B rep mov (bad) int3 mov push stos cmp xchg (bad) sbb adc rex.R (bad) int3 xchg add stos (bad) roll clc (bad) and (bad) rex stos pushfq jo xchg test mov out pop gs cmp cmc push adc add rol mov lea rex.X insb or ja add (bad) out (bad) and adc sahf and xor in shrd jrcxz sbb jae imulb push mov adcl add (bad) rol out rcrl lret push stos (bad) scas xchg mov xor jnp leaveq xor cmp (bad) xor (bad) (bad) or mov callq pop xchg test (bad) out sub int (bad) movsl xlat or and adc outsl cmp mov sbb wbinvd sbb mov insl cmpsl clc sbb (bad) adc sbb jbe jmpq (bad) hlt pminsw stos fistpll fistl je (bad) lahf (bad) stc (bad) push (bad) sbb sbb mov shr lea (bad) ja sbb rex.RB data16 cmp push adc jge sub (bad) adc movabs hlt mov out out push (bad) rex.WRXB rex.B mov cwtl (bad) ss vunpckhpd out lods cmp test xchg jl adc mov rex.R adc test (bad) or mov jb in pop js add lock std add sub (bad) push jne fwait adc (bad) cmc adc xor clc cli addr32 lods adc outsl (bad) faddl jne (bad) popfq in (bad) cmp xlat sbb mov sub fadds clc mov clc iret mov (bad) (bad) mov cmp fxch std (bad) es or add xor repnz jmp pushq sub mov cmp jb clc sarb rex.WXB ds movabs jo xor int3 je add jno mov retq mov add mov xchg and and sbbl rex.X lea jp rex.WRB rex.WR xchg push and cmpsb and retq sbb popq (bad) (bad) jbe sahf jle (bad) fcmovne cmp lcall js adc jmp (bad) (bad) in ja jns adc jae hlt sbb sbb jl stos jmp (bad) divb cwtl pop frstor loop cmpsb out cmp rex.WXB adc mov outsl int xlat rclb cmp mov add xor sbb rex.WRXB cmp flds in xchg rex.WRXB sub add stc (bad) movsl in outsb (bad) adc mov (bad) and nop cmp sbb rex.WR cli rex.WX (bad) rolb sub mov and push lods sar (bad) int jns jno fwait mov lods repnz (bad) stc stos fildl (bad) repz jne (bad) cmp cmp fcomp (bad) js xchg sub adc lret xor pop (bad) mov lods pop loopne rex.XB rex.RXB adc xlat and xchg mov fcoms mov sti pop movabs cmpsl rex.RX adc in sti (bad) xchg imul or jns outsb push xor adc mov pop retq adc in movabs jno movabs roll leaveq stos lock lahf pushfq adc (bad) xchg (bad) (bad) or and xchg push stc stos xchg jne mov (bad) enterq pop sbb test mov (bad) popq int or jmpq mov adc pop (bad) fwait add cs movsb xor pop xchg (bad) and test (bad) sub callq xor xchg xchg fdivr pushq int out scas rex.WRXB lock rex.WRXB add rex.X jrcxz fwait (bad) add add or (bad) (bad) or pop adcl out mov outsl fwait out movabs push sbbb adc movabs (bad) insl mov xor xor sbb (bad) (bad) pushq in (bad) (bad) mov lea xchg insb lock jle rex test rex.W je stos mov hlt mov mov push cmp cmc xor sti out retq (bad) sbb shrl and scas rex.R retq (bad) or sbb test push xchg mov lret lahf add mov cwtl adc add mov pop fs pop mov insb mov test mov or push jno (bad) (bad) rorl xacquire xchg (bad) int or (bad) pop and test xchg (bad) or cld push pop jbe xor and repz pop nop (bad) js (bad) mov push mov push adc in mov cld lods clc lret adc test xchg mov scas push out xchg push adc or (bad) (bad) xor incl addb xchg xor push sbb pop mov icebp add push stc or outsb retq loop xorb cs adc (bad) mov mov loopne rex.WRB (bad) jns lods shll (bad) rex.WB (bad) (bad) jge sbb pop andb xor cmp rep xor add sbb xchg (bad) (bad) cld pop fdivl add xchg rclb rex.WR retq or rex.W push or xor jp (bad) cmp movsl (bad) gs nop sbb mov pushq cld (bad) (bad) movsb adc adc in push jg adc rex.X rex.B retq add push xchg (bad) pop data16 int3 in push test adc adc fcomp sbb adc movlhps xor adc sbb push jns fwait and shr es rex.WR rex.WXB cli repz mov shlb mov fucomi mov stos (bad) pop push (bad) rex.B mov add shr push rex.RB cwtl fildl fs out (bad) lret (bad) ss and (bad) test and rex.WR rex.WB (bad) sbb fwait cmp fidivr jo xchg stos mov mulb lea and (bad) ficoml sub scas (bad) mov (bad) add pushq rorb pop clc xchg fcom (bad) adc movabs mov or add movslq jbe mov (bad) (bad) mov callq lods mov or pop (bad) repnz jmp lahf jne rcl jle js add movsl (bad) push sar xchg scas movsl push adc leaveq (bad) faddl stc lods rex.RX frstor test add stc incl add (bad) (bad) rex.WR sub rorl pop (bad) rex.RB rex.WB movabs loope gs adc (bad) pop lock mov (bad) popfq rex.RX out test jae rex.RB je adc (bad) in adc vunpckhps stos mov test (bad) (bad) mov or mov jrcxz (bad) (bad) minps adc (bad) mov (bad) adc mov rex.WR pop fdivrp mov pop callq xlat iret retq jrcxz in movsb (bad) out (bad) cmp cltd adc idiv or (bad) lret mov (bad) or jl cmp je cli mov out gs (bad) in pushfq popfq push adc cltd cmpsl adc shlb fist jno (bad) push divl cld (bad) mov scas pop insb in cmp (bad) sub add shrl add or lods outsb lea sahf test mov xchg jnp jg scas rex.B data16 adc xsaveopt int (bad) (bad) or xchg je rorl adc cmp jp jb push adc ja lahf in stos fucom imul xor adc sub or in add adc fmull pop mov cmp ficomp cmove adc (bad) cmp pop jge addr32 jl out int3 xor sbb (bad) mov pop pop adc adc pop pop adc jb add adc cltd stc xchg sar out jg in fdivl add xchg callq jno ss outsb add or stos (bad) adc fnop popfq mov fldenv jrcxz jno pop xchg je mov scas je or (bad) jno sahf jne movd callq ja lret insb jbe mov vcvttpd2dq (bad) adc rex.WRB insb mov add outsb pop pop sub rex.RXB mov sbb mov xor cmp rex.RX xchg (bad) jbe fcmovb jbe lock test jne (bad) in icebp cld faddl test callq adc xchg sahf xchg adc (bad) rex.R jge (bad) push sub movabs imul xchg mov and movsb lods in fsubl rex.WR mov cld rex.WR (bad) cmpsl mov outsl (bad) mov fcoms sub mov movabs rex.WRXB repnz mov add je test xor sub cmp lods cmp xor xchg (bad) sub mov sub retq add scas cmp callq mov add xlat fildl pop sbb xor rex.WR roll mov cmp in fsub ss retq pop sub cmpsb or callq adc add mov xchg xor cmpsl (bad) shlb int jo imul xor (bad) jle rex.WRXB retq in sbb (bad) push loope cmp icebp movabs or add sbbl scas and add ja adc add add mov (bad) and or int3 icebp cmpsl add xchg shrl scas xchg mov mov sbb or or xorl lock mov idivb rex.WRB rex.WRX adc (bad) fcmovnb rex.RXB (bad) imul or xchg (bad) repz mov sbb cmp adc ss rex.WXB rex.X lea (bad) or (bad) rex.XB adc add fs mov pop scas xor insl xchg repz jp jl (bad) test adc and retq rclb (bad) loopne xor test (bad) adc mov fcomps lods (bad) rex.W adc andl push push (bad) movabs hlt popfq (bad) data16 adc add sub (bad) xchg adc push sub jrcxz movabs loope push movabs cmp mov or (bad) retq (bad) (bad) lea (bad) cli sub movabs mov rex.RXB xchg mov sbb push fstpl add movabs in mov mov jne rex.WX mov loopne xchg rex.WR in lea add mov jg xchg test js fldcw fstl jge pop xor (bad) sbb (bad) push rol and add (bad) mov cmp cmp (bad) jbe (bad) fstps adc lods out lea out sbb (bad) outsl mov jne and cmp out (bad) mov adc (bad) rex.WXB xchg (bad) (bad) sub (bad) insl xor or jno jno or and fsts xchg adc and adc pushfq add scas callq out (bad) ja or xlat xchg and (bad) out and mov jg minps and repz shlb notb out and mov add sbb push (bad) (bad) out (bad) notb xlat rcl stos mov movslq mov xchg mov xlat and retq lret xor cmp divb movsb and (bad) lea movabs sub (bad) and (bad) mov hlt rex.RB (bad) or add stc xor adc rcl xor popfq (bad) in fwait (bad) (bad) (bad) lea or lods in xchg cmp and rex.WX adc adc out jmp push callq in fwait mov add rex.WRX adc xor cmp movhps xlat jbe std (bad) fcomps or (bad) mov pop (bad) rex.RXB lret notb xchg test (bad) mov pop pop cmp (bad) lret rex.WXB mov pop mov (bad) jl jne cltd imul jrcxz jne (bad) mov sub lea jno adc and repnz loop adc rorl (bad) xchg (bad) jno pushfq test out (bad) test (bad) add pop or test rex add (bad) cmp leaveq movabs lock jae push add (bad) rex cli rex.WRXB cmp fwait pop data16 rex.RB fs stos movslq pop push or jle adc sub and (bad) leaveq rex.WX push test mov out sub or adc fsubrs cmpsb test and rex.W or jge movabs sub adc or jle in (bad) shrb add out (bad) cli mov mov or pop mov push mov mov mov outsl mov (bad) (bad) (bad) stc mov xchg adc and lock fnstcw (bad) ja sub stos callq insl jnp adc (bad) and rex.WRB fisubr (bad) test xchg mov (bad) sbb sbb test cmp mov movabs (bad) mov add sbb (bad) (bad) mov jae xor jb sahf stos rex.WB sbb (bad) subb mov test pop push rex.WRX mov jle movslq lret (bad) fdivs ds rcll out sbb mov or lock sub sub or xor mov add out xor push or pushfq xor or rex.XB fsin movsl jae xchg lret in mov jno fwait retq sub mov out sbb loope (bad) mov outsl adc test (bad) je (bad) mov adc (bad) (bad) hlt xchg (bad) add (bad) mov cld (bad) outsb xor and cmp cli fcoms push fcoml stos sub add stos or adc imul stos out xchg repz adc sub fldenv rex.RB ss adc cmp adc xchg stc sbb cli adc (bad) movsb in (bad) adc sub mov mov xchg xchg lret xor jns movabs cs xchg (bad) (bad) ss orb out push sub pop mov push xchg rex.WRB mov loop callq mov rex.WXB rex sbb (bad) jmpq (bad) cmp mov xor out pop cmp or mov scas fld (bad) incb rex.WX adc pop lock xor add jno cs rex.WB (bad) push rex.RXB notb pop (bad) in mov je pop (bad) xor (bad) (bad) push movabs xor xchg (bad) xchg lret xchg gs add (bad) adc and xchg or add mov sbb cmpb repnz rex.RXB rex.XB sub sub jbe xchg xchg movabs cmp add mov lods (bad) lahf jno (bad) (bad) sub xorb rex.WRXB rex.RB (bad) xor insl (bad) (bad) rcrb lock cmpsb rcll (bad) sub and xchg std in xor (bad) (bad) xchg rex.B data16 push test js add jns jmp sub gs in xor jmp insl addr32 and mov cmpsl xchg xor sti (bad) mov xchg cmpsb (bad) rex.RX (bad) mov add imul callq xlat imul mov imul cmp adc rex.WRXB callq add andb callq cld hlt cltd jb fcmovne push (bad) pop sub (bad) pop lea insb lret movabs stos push movabs shrl add ds out mov xor (bad) mov fstpl push cli mov or in rex.WRB fwait (bad) (bad) (bad) es repz pop test jne frstor add test cmp movabs sbb retq out rex.WR rex.X mov (bad) xchg lock and mov add (bad) sbb mov jno cmp mov and or mov stos test nop rex.XB (bad) adc sbb mov cmp out add pop popfq (bad) xlat stos jp jbe mov callq (bad) (bad) sub sub adc movabs lock (bad) or jae or idivb mov (bad) (bad) or sbb scas lahf mov movabs xor or std xor rex.WR (bad) pop repnz loop incl lahf ds sti (bad) push fwait mov mov movabs cmp loopne sub (bad) cwtl jno int3 hlt movslq xor jp cwtl (bad) (bad) sbb jmp (bad) fild pop lret jp,pn in xchg and test (bad) rex.R sub sub add (bad) popfq cmpsl or and add fidivr lods push int3 add cmp jb rex.RX sub (bad) add rorl mov pop icebp adc xchg rex.RX pop enterq sub in mov mov (bad) movabs cmp sbb (bad) outsl mov (bad) fnsave fcom xor rex.RB imul push mov jne mov (bad) sub pushq (bad) imul pop adc outsb (bad) ficoml sbb movslq push mov cmc jmpq (bad) and rex.B fwait sarl adc add movabs pop pop cmp rex.WX retq adc rcr pop pushq (bad) xlat xchg test (bad) lock cmpsb (bad) cwtl cmp (bad) mov fnop clc (bad) lods cmp xor loopne rex.WXB (bad) sub pop mov (bad) movabs (bad) callq (bad) sub xchg jmpq nop (bad) xchg fldl adc sarb push xorps jge stos divb adc add rex.R add pop mov and rex.WRX xchg xchg sbb scas imul sbb mov (bad) je xor (bad) xor icebp (bad) (bad) lea push fstps jbe lahf sbb test loop fisubl cli push jg (bad) xchg scas cmp movslq rclb (bad) out mov rex.WXB fldenv mov jne callq (bad) adc mov js icebp mov mov or adc test or (bad) xlat in xchg or fcmovu outsb mov callq pop imul and pushq insb movabs std xchg xchg fistpl rex.WRB repnz in jns mov (bad) mov sub mov int pushq add fsubrl std repz lea rex.X cmp xchg add cld (bad) (bad) jmpq pop adc lods insb enterq mov (bad) add gs jle lods xor popfq adc (bad) cmpsl sbb movabs imul mov in (bad) loope rex.WX leaveq adc rex.WR adc sbb fsubrl rex.WX rex.W mov or out pop xor loop cld adc mov sbb mov test xchg mov lea (bad) (bad) adc jbe (bad) retq (bad) xchg orl mov mov xchg mov jl cltd and sbb movslq neg and (bad) and (bad) (bad) sbb jle mov mov imul pop push lods adc push mov retq hlt (bad) or sub vpsllw mov clc jge mov js (bad) jg pushfq loope notb clc jle movsb sbb (bad) sub lret rex.RB fisubr lods clc or rclb or xchg mov xchg in push insl xor mov iret fbstp push (bad) scas and add xchg (bad) rclb fcomps sar push jae cmc adc mov int push fs pop adc sub sub imul sbb repz mov cmp in xor mov iret popfq push sar movsl mov add int outsb add lods ss retq lret (bad) (bad) callq prefetchwt1 cmp (bad) lret xor adc out cs unpckhps gs mov (bad) sub nop push ficoml (bad) sahf pop cmpsl test rex.WX fmull add add rex.WRXB (bad) mov loop fidiv cltd sub int rex.WRB fld adc sub in adc xchg sbb sbb ja adc adc cmp retq mov sub adc (bad) xchg scas cltd (bad) adc movsl pop movhps adc (bad) sub xor clc and xlat lretw xchg pop pop es sbb sbb mov fsubl mov in mov adc stos pushq stos sbb jmp (bad) (bad) rex.WRB jne and and jbe cli fs jbe rex.RX repz mov fiadd pop (bad) out mov (bad) out movabs cltd (bad) or sub (bad) jns imul nop jrcxz js retq adc jg movsl rcll (bad) retq (bad) movabs rex.X scas fmull xlat insb retq push (bad) adc (bad) mov sbb fcoms jo or jge faddl mov mov (bad) fistl sbb in or loop (bad) pushq mov jmp test (bad) lock fnstsw mov (bad) push mov xor rex.RX hlt (bad) sbb imul rex.R (bad) movsl xor sbb sub push (bad) push stos callq mov in xchg push lfs xlat sbb mov pop fidivr out in (bad) sbb cs rex.WRX rex.WRXB xchg rex.WX fstl jno cmpsb insb (bad) scas sbb jnp (bad) lods pop mov movabs jbe cld adc push nop adc sbb and adc sti adc je ficom in mov xchg repz imul add lock sti cmp mov jno or negl (bad) in sti or (bad) sub mov xchg in cmp xor or sub mov js rex.RB (bad) lock rex.R mov cmpsl ffree cmp (bad) jmp pop cld pop sti es (bad) adc mov xchg (bad) repnz and sbb repnz add mov pop imul or addb or outsb callq and rex.XB lock roll xor (bad) add popfq or jbe or add rex.RX out sbb (bad) (bad) mov (bad) push mov movabs lock rex.WB pop xchg int mov in xchg add mov gs in rex.WRB mov sub (bad) movabs movabs (bad) push cmp out or (bad) movsl es or (bad) insl movslq add fmull lods adc sub and xor pushq jmp xor pop movabs rex.RB rex.WX rex.WRB pop ficoml scas jl hlt cmp sbb movabs pop cmp push rex.WRXB rex.RXB adc (bad) (bad) xchg (bad) rex.WRX adc ficoml adc rex.WR (bad) test xchg fistp xchg lahf mov or in push rex.WRB gs add cwtl (bad) sbb xor xchg cmpsl adc stc xchg movabs data16 jb xchg sbb rex.X outsl sub jbe movabs sbb mov cwtl mov adc sub jno pop (bad) ja jmp (bad) ds pop push or pop add clc (bad) cmpsl pushfq cmp mov int3 (bad) lock mov mov push xor (bad) lea mov jmpq test movabs popfq xor mov xor jge adc sbb stos jge adc mov retq clc out add rex.R (bad) (bad) int push xlat adc mov adc mov adc xor push cmp imul mov dec or sbbb out subb pushq cmp js add cmpsb outsb mov fs (bad) cs lea jno fidivr mov mov mov or rorb add xor cld icebp retq rex.X (bad) sbb xchg movsb mov push mov or mov push fdivr (bad) fsubrp or (bad) fist movabs jp test out imul or jg xor testb sbb or adc ds imul push and (bad) in (bad) (bad) lret cwtl (bad) mov out repnz cwtl insb pushq hlt sbb (bad) and add (bad) or or sbb divl fs rex.RXB pop orb fild cmp fldenv rex.WRXB mov sar xchg (bad) (bad) (bad) loop in sbb fs sti push pop or movslq (bad) out out loop imul notb test cmp (bad) sti xchg lea adc mov imul pop rcr rex.WB xchg (bad) test loop fwait (bad) fistl mov retq add and pop jg rep mov mov je (bad) rex.RX xchg xorl xchg int3 out (bad) sarl add sbb rex.WXB mov (bad) mov sbb sub jno iret jp rcrl rex.WB fcoms or out rex.WXB mov mov jl mov repz (bad) mov jmpq xor (bad) mov push gs movabs (bad) and add rex.WX imul sarl retq xchg (bad) push fidiv fstpt (bad) popfq test cmp movslq stos and and jle fdiv push mov (bad) in and neg jl ja jno (bad) or cltd std or xchg lret retq cmpsl sahf cmp cltd mov (bad) cli (bad) (bad) or movsb rcr mov outsb (bad) sbb or rex.XB cmp mov movsb and cmp adc out loope (bad) xor add push stos rex.WRX (bad) and xlat rex.RX push int3 and pushq rex.WXB rex.R pushfq (bad) xchg and add xlat movabs pop ja rex iret mov rex.WB jb pop mov rex.RX orb jb or fdivl callq repz imul mov (bad) mov loop stc std in (bad) jrcxz ficoml (bad) int std or push lret enterq (bad) sbb fdivr sti xor movabs out xor and fildll push repnz and (bad) rex.WRB mov xlat sahf hlt sub jae retq icebp mov jrcxz callq test ja movabs sub callq xchg int js xchg xchg pushfq (bad) in (bad) mov and fiaddl mov (bad) fucomp fwait pop fwait mov loopne adc ja notb loopne adc sbb callq (bad) xor xor sti scas pop cmp enterq push lods mov (bad) rex.WXB jp xchg movabs xchg jns scas and rolb (bad) repnz and shll test outsb mov (bad) push jne and or fiaddl mov (bad) sub pop add pop adc neg (bad) push fidivrl enterq (bad) lret (bad) fcomps (bad) adc jrcxz sbbl repnz pop cmc bnd rex.WXB (bad) in (bad) jno (bad) sub rolb rex.B push (bad) retq jmp (bad) push pop lods jbe mov (bad) ja pushfq movsb mov loop xchg (bad) sub rex rex.WRXB (bad) adc add add sub cs scas iret (bad) xchg xchg push (bad) mov cmp jmpq pushq repnz fsubs mov (bad) jae repnz insl add rex.WRX sbb scas adc rclb adc (bad) ficompl enterq js (bad) cli pop sbbl sub pop and and retq (bad) lahf (bad) sbb push (bad) push (bad) (bad) xor (bad) ljmp or add repnz mov ja adc push pop iret retq xlat jno negb (bad) cmc (bad) jg ss pushq rex.WXB (bad) callq mov rex.WR cli adc (bad) popq xchg lock test mov (bad) out (bad) lock sub rex.X xchg stos test sbb rex.R sub neg (bad) sbb push mov lods out mov test jno retw gs (bad) gs adc add rex.XB lock (bad) and (bad) adc sub lret hlt jge pop hlt callq icebp jrcxz rolb push push mov rex.WRX nop movsl and fisttpll rex.X fs out stos rex.WB xchg rex.XB rex.R and and rex.WXB adc repnz int3 jbe rolb sti (bad) mov and repnz clc stos or and jmpq pop jb scas jg (bad) rorl (bad) mov xchg stos fcomps (bad) xchg or hlt ficompl fisttpl xor movb (bad) movabs pop cmp hlt test mov ss in rex or stos fwait ss loop cs iret mov (bad) insb or sbb rex (bad) lea sub hlt hlt (bad) or out (bad) shl jp xorl repnz pop mov lret xchg movslq rex.WR imul sbb jge xchg cwtl xor (bad) scas (bad) xchg fs or shlb xor fs fisttpll outsl out shr add rcrb lock fcoms mov xchg data16 repnz cltd movsb mov xchg and loope loope test (bad) hlt xchg pop mov (bad) cmpsl (bad) test xchg sbb scas xchg adc push jmp callq jge mov enterq rex.WX cld mov ja jb sar fistpl callq adc jle (bad) adc rex.WR push push loop or (bad) cmp ror fld mov addr32 clc mov hlt add jle add movabs ss mov popfq loope (bad) nop outsl movabs mov es icebp addl fldenv rex.WRXB out std jae pop jo (bad) negl (bad) (bad) push cmp pop mov xchg xorl (bad) jp cmp pushq enterq and sub and fadds stc (bad) cmp pop (bad) add (bad) repnz xchg std pushq in jne enterq jmpq roll shr (bad) (bad) movabs fs jb lock mov adc (bad) movsb loopne scas push leaveq mov or rex.X jg js icebp jno (bad) (bad) pushq je lods jmp add add stos sbb (bad) sub movabs push (bad) rex.XB adcl add (bad) jo pop and (bad) add xchg mov cmpsl lret cs (bad) addb sbb iret div mov rex.R add push jle js add add iret mov or add add (bad) (bad) mov xchg (bad) lock lahf loopne (bad) fimull adc mul (bad) lock rcl rex.XB jbe movsl sbb in (bad) cmovns movsb jp data16 scas repz retq sbb lods mov test add imul pop rcrb cmp rex.RX lock and fisub movabs cmp xor sub xor stos sub sub scas add push movsb rex.WRB adc push movabs mov lea (bad) (bad) xchg sbb (bad) wbinvd pop jl (bad) (bad) sbb mov jp pop (bad) sahf test xchg mov mov jge adc xor or (bad) sbb (bad) jle add push mov (bad) xchg (bad) xor cmp xchg lahf pop movsl loop adc ds test rex.RB mov mov (bad) (bad) enterq or (bad) adc adc sub adc xchg int pop sbb adcl jns or jbe mov movabs (bad) xchg rorl jbe vsubsd in insl (bad) fildl cwtl mov add (bad) rex.B rex.W (bad) (bad) lods lods xchg push xchg xchg adc adc cld (bad) jnp rex.R adc sub or (bad) mov pop cmp rex.WRX mov icebp add pop xchg fcomps xchg (bad) scas sbb jnp (bad) callq pop lret enterq cmp sbb (bad) or push push pop in sub (bad) movsl outsl or or (bad) (bad) (bad) js fs stc xor mov js and (bad) xlat and cli pop (bad) iret lret xchg xchg jae jae cmpsl push outsb repz data16 mov mov int3 (bad) xchg icebp in adc es jo movabs addb (bad) (bad) std cld leaveq fwait rex.WX pop fsubrl push jp or cmp (bad) (bad) mov add int3 xchg xchg sub mov jg retq icebp jae (bad) rclb adc or sub (bad) xchg rex.WXB jns test or in fsubs hlt out jns int cmp lea movabs sub lea (bad) andl ficom adc rorb (bad) insb adc jmpq imulb (bad) mov cltd jmp xor insl (bad) rex.WRXB rex.RXB rex.WXB jno (bad) rex.WRXB pop callq xor sbb in repnz jns mov cwtl fwait (bad) xchg (bad) lret pop js mov push xchg lods leaveq xlat nopl (bad) jae sub (bad) xchg cmpsb (bad) lret rex.XB adc sbb mov fstpl std add loopne js (bad) jno es ja xchg mov (bad) sbb ror shrl lfs push push loope jrcxz insb (bad) rex.WRB mov (bad) mov jno out hlt adc test sbb iret test adc cli add (bad) (bad) int insb jge mov pop mov imul adc in scas fdiv int (bad) xor shll (bad) jne add and pop loopne or sbb xchg movslq retq mov rex.XB repnz cs rex.XB movabs retq data16 jbe add (bad) mov mov or pop jae roll in sti callq mov fdivrs xor add jmpq (bad) adc in rex.WB popq cmpl sub xlat (bad) rclb adc push insl push hlt clc rex.WX test (bad) (bad) decb fcomip sarl clc (bad) adc sahf (bad) cmpsl popfq sbb lea (bad) loopne mov or sub jo lea lret leaveq (bad) in (bad) hlt rex.B rex.RB sbb rex.XB jae add adc cmp xlat fimul idivl rex adc push adc add out xchg xor sahf jl xchg adc movabs sahf xchg jnp adc rex.WX scas jp xchg rex.WRXB lock gs iret adc xor xchg or or adcl mov enterq (bad) loopne xor lock icebp and mov pop subl rex (bad) (bad) xchg repnz and (bad) jb lret jnp mov mov leaveq cmp jno iret icebp int3 (bad) jo outsb jmpq mov mov rolb out sti es xchg scas std sub add pop (bad) (bad) rex.WRXB lock icebp mov sbb (bad) out sbb movabs lock cmp add (bad) sbb mov xor movabs negb scas and mov sub rex.WRX (bad) lret mov adc xchg and add mov (bad) (bad) stos cmp (bad) cmp jle (bad) andl rex.RX fwait mov (bad) scas or (bad) mov stc adc iret hlt sarb add jrcxz js in and mov cmp mov jne retq out xor stos or mov (bad) adc pushq fdivrl rex.B stos in pushfq addl xor mov mov mov sahf jg int3 cmpsb sti out addl rex.WX rex.X (bad) cwtl out (bad) xor (bad) sti movsl fiaddl jle add mov lock enterq (bad) sub int or pop (bad) xor cmpsb test (bad) sbb gs fwait rex.WB xchg mov sub (bad) ds cs jg push rcll or repnz adc enterq mull mov pop jg out movabs pop adc xchg mov and movslq mov test stc jp cmp clc rclb (bad) stc jns callq test movl sbb rex.WX (bad) sbb mov jnp mov rex.X sub jbe add or repz pushq gs lret sbb xchg sub adc (bad) out lock callq xchg outsb imulb cld lock add cltd (bad) loope fcomps jns or scas lret out or test mov or roll je fbld nop add (bad) pop push (bad) mov and testb adc fstps movabs (bad) sbb sub (bad) (bad) xchg push mov (bad) mov and test imul or pop je movabs (bad) movabs xchg rorl sahf or movabs imul (bad) push pop rex.RXB je (bad) rcr push lcall movabs pop hlt (bad) or jg xchg xchg pushq nop mov fdivp fild hlt repnz and pushq enterq sahf jns sub cmp mov lods movabs sub cmp (bad) cmc negb (bad) mov in add in syscall fdiv movsl mov test data16 (bad) xchg mov lods mov std jmp (bad) jmp xchg push xor cmp sbb rorl rex.R rex.WR rex.W add xlat (bad) sbb test rex.XB or js (bad) (bad) lret negb xor stos sub enterq sub jo fiadd test lret jle sti movabs fwait scas (bad) (bad) mov and xchg int3 retq repz mov mov (bad) (bad) rclb ss cmc xor rcll adc jnp imul leaveq lock jbe push push iret add (bad) div adc jo rex.WXB rex.WX sub jle loopne pop sbb cmpsb enterq xor fs ds cmp add loopne or js mov imulb (bad) xchg (bad) sub xchg cmp ja add enterq mov mov imulb adc xchg add sbb pop pushfq xor gs not outsl mov mov callq sub sub mov scas es callq rex.WR rex.B xor (bad) jae cmp add mov (bad) jmp ss int3 leaveq jp or mov adc fsubrl lods ja lock pushfq and fwait shlb mov adc outsb out jrcxz int3 (bad) jne (bad) xchg adc jns and push mov lahf jrcxz push jns clc (bad) (bad) (bad) mov pop andl lock movsw rex.B rex.WR xchg jle and rex vmovsd imul xchg movabs stos push xchg xchg xor movslq rex.WRB jbe out rex.WRXB cwtl jg in pop pushfq (bad) in xor mov scas in loop rex.RB xor jb (bad) mov (bad) vunpckhps sbb adc add sbb or adc movslq rex.WRXB cs rcll xchg jns pop cmp adc cld test xor xor fwait adc add ss jmp and stc rex orb cs adc cmp (bad) rcl lock out push iret and imul js add xor (bad) adc pcmpgtd jne std (bad) (bad) cs push jrcxz lods add icebp xchg or xchg mov cmp mov retq mov add rcrl mov (bad) clc and (bad) xchg xchg xor sbbb mov add or xchg mov out or fist pop (bad) xlat (bad) movabs (bad) rclb mov mov fldt pop cmp enterq rex.WRX cmc psubsb xchg cmp clc mov sub (bad) push and mov xchg xor (bad) fild retq retq add jg (bad) retq icebp leaveq cmp mov (bad) (bad) add loop out imul (bad) add (bad) (bad) and repz add sub jle std pop mov mov stc lea xchg lret in (bad) xchg push loopne ja shll or pushfq (bad) repnz mov push pop or and (bad) lahf push (bad) sti iret fadd (bad) imul in xchg or cmp (bad) scas pop pop (bad) push sub xchg ds popq js sub movsb shl xlat mul rex.W (bad) cmp and rex.X jmp xchg (bad) (bad) push (bad) imul in lock xchg mov xchg clc and gs sbb mov in rex.WRB out lock movabs movslq or movabs outsl mov (bad) mov lahf mov lret fwait retq cmpsb add sbb or pop or lock xchg imul loop jo (bad) mov pop xchg (bad) push jge sub roll movsl xchg cmp add test test rex.WB rcrl enterq (bad) out mov sbb cld sbb mov (bad) adc xor fsub test (bad) add (bad) movl xor pop out xchg sub (bad) movabs mov cmpsl (bad) mov rex.WX insl fwait adc adc lea repnz sar stos pop (bad) mov or lret faddl push push (bad) sub mov cltd (bad) add and test enterq out ss out cmpsb jne movabs (bad) icebp cltd (bad) mov cmp and stos leaveq rorl push (bad) rex.XB pushq adc cld lock mov fmull (bad) rex.WX test add adc or incl add rex.WXB mulb or push lock mov or (bad) jb mov sub fwait mov adc xchg pop push adc jae push rex.X xor mov or jle sub pushq jns notl jnp adc cmp adc adc repnz xchg cmp outsb nop adc rex.XB scas loop (bad) in (bad) repnz enterq jrcxz out add (bad) rex.W (bad) cmp rex.WRB and insb divb mov imul sub outsb rcll lock ja cmp jno mov testb js cmp mul cmp rorb imul or xchg pop jbe cmpsl (bad) jmpq sub pop or xchg (bad) jge mov ss (bad) jbe rex popfq mov mov cmp test adc pop out adcb in sbb repz mov jae in cwtl (bad) (bad) ja xlat cmp push mov sbb xchg and pushq pop vrcpps adc sbb adc es and (bad) int3 (bad) (bad) rex.WR pushq adc nop pop (bad) mov callq (bad) sbb stc (bad) rex.R rex.WRB rex.WRX jge and or mov jp in sub shrl insl data16 cmp xchg je rex.RX movabs (bad) xchg callq pop xchg mov outsb push (bad) movabs (bad) test hlt or loopne pop mov xor std jl stos int3 imul add movabs xchg fcomp sbb and mov lods mov (bad) (bad) sub (bad) lea hlt and or sub adc fwait addr32 xchg stos (bad) pushq in mov cmpsl mov clc mov xor adc rex.X xlat xchg adc mov jp cld or xchg xor sub pushq sbb cmp decb retq sahf jg ja (bad) fnstsw add or mov push (bad) gs movabs out pop sbb jmp xchg mov orb xor repnz ds adc add hlt jl sbb lahf ja and rex.W out loope (bad) sub cs test test lahf xlat pop sub fcoms movabs adc movabs sbb add scas pop out leaveq callq mov scas push pop push jnp roll jbe fcmovnbe (bad) push hlt lock sti out jne,pt sub pop loop icebp rex pop and in sub js (bad) sti pop test or (bad) jl movabs sbb rol rex.RXB repnz cmp mov rex.RB (bad) cmpsb ss (bad) (bad) idivb mov xor callq stos cmpsl clc js adc (bad) ss mov xchg jp mov mov cli adcb enterq rex.WRXB sub cmpsb out rcl adc ds add adc push mov stc clc add fwait jb stos (bad) mov push loopne popfq pop xchg sahf stos adc jns jne xchg adc (bad) push push lret (bad) adc loope retq movabs out sub (bad) adc fimul stc cmpsl jl (bad) (bad) add (bad) mov retq xor mov cmp xchg xchg loope movsl adc mov jp (bad) cli or xor cli test (bad) stos rclb cmp pop sbb or int3 sub je adc clc gs xor lahf mov rex.RXB data16 xchg sub (bad) jns dec fnsave or sti callq fsts sarb rex.RB bswap stos mov (bad) lock and punpcklbw lret shrb jnp xchg mov mov movabs addl or (bad) xchg movabs pop adc rex.WR rex.RB rex.RXB (bad) rolb mov jae jno callq in or (bad) rex.WX or mov xor (bad) scas jmpq notb iret (bad) (bad) mov (bad) xor repz scas ja jne nop jne movslq fadds movsl mov push sbb cmpsl jb mov decb fnop out rex.WRXB fistp adc xchg sub (bad) sbbl (bad) in loope (bad) lahf repnz cmp adc jnp mov movabs rex.W rex.RXB or mov xchg stos enterq xchg int3 in ja js rex.WXB lock xor (bad) mov loop mov (bad) or add out push cmp lock add or int3 repz (bad) rdmsr xchg cld (bad) stos fwait jno test mov gs repz pop (bad) je adc xor (bad) jns fistp (bad) jl callq cwtl (bad) (bad) movabs pop (bad) jmpq xchg or add sub nop xchg (bad) jne hlt (bad) (bad) rex.XB lock (bad) fwait movabs pop sbb or (bad) mov (bad) mov movabs stos pop jb mov js sub mov adc rex.WB xor (bad) ds pop popq (bad) sarl (bad) push iret (bad) fwait sub add (bad) lea lret out in and je fs lahf xchg rex.RX movsb mov xchg sub scas sub fcmovnu (bad) adc (bad) push (bad) pop xchg push imul nop mov mov adc xor rex.WRB fs (bad) adc ss clc (bad) jne pop rex.WRB adc negl cmp test and rex.WB (bad) movabs xor scas push xor (bad) adc faddl mov addr32 rex.WRB rorl jne cwtl (bad) fcoms mov mov fcomi lock mov loope out adc (bad) jl sbb sbb pushfq mov callq fnstcw in rex.WR (bad) ss shll jb xchg notb lahf frstor mov adc cmp add adc rex.WRB (bad) jne xchg ficompl mov iret rex.WR rex.RXB mov (bad) pop adc mov add popfq (bad) mov movabs ud2 adc fisttp mul adc int or out int3 jbe add loope rcrb insl loop shlb and lea (bad) jl idivb rcll xchg movsb popfw cmpsb (bad) push adc ficompl lcall mov jo or jbe cs add mov pop cmc fldt lea js movabs int iret rex.WXB out mov jne adc xor mov (bad) mov loop mov int3 fsubrp cs fs rex rex.RXB out lock rex.X xchg lahf clc enterq (bad) cmova fsubr jl gs and sub jae lret (bad) movabs movsb sbb add push xor rcr test movabs mov xorl add pop push jmpq imul icebp insb movabs sub cmpsb adc jmp add callq (bad) add (bad) mov callq xchg lock cmp std mov fidivr cmp andl (bad) lret rolb in fstpt and (bad) incb push rex.WB hlt mov rex data16 pop and or js fwait mov sarb jno rex.WRB loopne adc cmp rex.WRXB scas sub jge rcll repz lock (bad) cmp mov (bad) leaveq retq pop add (bad) sub hlt mov (bad) lods std (bad) cmc retq pop cmpsb rex.RB in push cli cli xor add and insb out sahf repz cmp fs js movslq callq (bad) rex.W add notb (bad) in sbb rex.R and in sti adc std callq rex je cmp (bad) rex.XB or sub add adc jge mov sub and adc jg jrcxz in iret (bad) mov (bad) jbe mov or (bad) adc jno movabs rcrb add mov loop (bad) add rorl add notb xor in add mov cmp icebp iret (bad) (bad) lret lock (bad) js mov (bad) (bad) prefetch int3 scas pop int3 mov out (bad) es (bad) movabs (bad) je ds mov adc rex in movabs or push std rolb icebp xchg mov (bad) retq es adc cmp bnd push (bad) (bad) (bad) test (bad) xor pop pop adc pop cmp xchg lock push cld (bad) (bad) or lahf (bad) mov cmp iret xchg addl add and in js scas push and jge ds es incl pop (bad) rex.WRB fwait xor (bad) jle je loopne stos repnz pushfq sbb xor rex.X lea cmpsb xor repz loope callq sbb add mov (bad) (bad) rex.WRB xor sbb test cmpsl out in cmp mov jne std test iret pop (bad) pushq in or push cmp pop orl push cli orb mov (bad) pop cmc ds jnp mov xor sub mov xor rep rex.WRXB mov pop jmp cmp fmul (bad) fwait mov outsl insl adc xchg jmp pop xor (bad) mov cmpsb out jbe cmpsl cli std insl lret mov out rex.WR rex.RXB xor out push rex.W lock mov cmc movabs clc rcrb fwait sub fdivp andl in sbb xor (bad) (bad) (bad) mov mov xchg mov (bad) divl (bad) and xchg fcmovnb (bad) cmp adc repnz or sbb rex.RX adc retq or cmpsb (bad) xor adc add rex.WRX imul rclb out mov rex.XB outsl mov (bad) std cmp (bad) fild push jl sbb or xchg adc lret xlat sub mov test (bad) sti imul mov mov bnd mov movsb (bad) js in pop cltd retq emms enterq adc rex.XB push (bad) cs test stos mov xlat outsb cmp rex.WB or (bad) rcrl rolb jno cmp fs jp fwait test rex.WRXB xchg sbb xchg jrcxz jno fidivr (bad) rclb rex.X pop xor cmpsb push add rex.B lock add add fidivrl sub iret lods je mov rex.RB sarb mov movsl (bad) insl (bad) clc mov cmp (bad) test rex.WRX sbb push (bad) xchg jmpq mov (bad) in xor mov bsf (bad) iret frstor adc and (bad) push scas or rex out jrcxz (bad) (bad) fstps mov rex sbb adc fwait cmpsl rex.X adc push adc jbe scas cs (bad) jb xchg ss add pop and adc rex.WB lock mov sti gs xor adc sahf mov push cmp addl (bad) cld jl enterq adc (bad) xchg (bad) pop adc mov jmpq movsl or movabs mov (bad) mov adc jbe fcmovnbe mov or repnz test add imul (bad) mov stc rclb rex.WXB sub fs nop adc adc (bad) xchg adc js fidiv sub add adc outsl xchg xchg add pushq std ds out enterq jns (bad) rex.RX clc (bad) int3 stc sub push fstpt xchg adc cmpsb movsb outsl sub or mov rex.WX xchg (bad) jl add jns adc sbb imul outsb xchg out (bad) in scas fmuls or mov rex.RB int3 or cmpsb and mov retq add mov mov cmp rex.RX repnz (bad) (bad) rcll pop (bad) add cwtl pop scas or (bad) out xor (bad) xchg (bad) jae mov rex.B jmpq lock mov rolb rex.XB callq or add movabs rex.WB ss add add lea jbe sti rex.W orb (bad) (bad) pushq out callq pop mov std insl mov loopne xor sbb mov adc fldlg2 outsl cld outsb adc mov loope jns (bad) rol cmp es loopne (bad) add (bad) imul cmpsb sbb cmp (bad) push nop sbb (bad) fcmovnu (bad) xor outsb xlat sti retq loopne test jrcxz jbe in (bad) mov (bad) (bad) (bad) ds mov (bad) mov icebp (bad) int mov fbld cld xor insl (bad) mov movabs mov (bad) movslq cmc (bad) rex.XB pushq rex.RX rex.R je (bad) (bad) pop std or jrcxz retq rex.RX or and add jmpq adc or sarl lahf xor mov (bad) push insb (bad) (bad) add mov (bad) fistp xchg rex.B repnz sbbb push sub fs enterq rex.RXB std cmp andb and rex.WXB rex.WR sub scas add (bad) movsb adc mov jne add (bad) clc vpandn (bad) jmpq mov mov xchg rex.RXB int push mov adc push lahf and (bad) jb adc mov je (bad) movabs out insl adc sub jbe mov (bad) jns adc dec (bad) jo adc movabs fs repnz fistp sbb movabs pop mov repnz icebp lock ds (bad) adc test incl (bad) jbe cmp fist mov and std int mov movsl or ja add lahf jl mov add (bad) fwait pop push jbe push leaveq int jb (bad) mov (bad) push add rex.B pop and and mov jge cli ficompl xor adc (bad) in idivb movsb (bad) jl adc mov (bad) or (bad) mov cmp movabs sti xor (bad) fbld scas stc rex.WRX (bad) push (bad) mov pushq fcomps mov add retq int3 lret cmp sbb add adc (bad) std sbb mov pop cmp ja cmp std sub jle std (bad) adc fistpll xor rcr pop xchg loop stc mov rex.WB js (bad) int adc mov adc xlat xchg stc vmulps addl movsb cltd lock sbb cld and js rclb sub rex.WRXB lock mov stos callq test stc mov xchg jo xchg mov int3 sbb jbe (bad) (bad) pop jns or fstpl cmp leaveq retq rclb sbb rex.WX rex.WXB mov repnz cs (bad) push push sbb sbb (bad) sbb repz rex.RB cwtl (bad) add (bad) jo xor (bad) rex.B rex.XB imul jne or and pop ss rex.WRX clc (bad) nop sbb fidiv sub rex.RB imul sub sahf vpmaddubsw callq mov scas (bad) sub add lret test sbb mov imul (bad) hlt adc or sub rcll lea addb adc adc pop add adc jne clc leaveq adc xchg (bad) mov (bad) (bad) fwait (bad) lahf add (bad) xchg (bad) xchg mov mov (bad) (bad) clc sti add sbb (bad) fwait rex.WXB jno adc imul or je xor movabs int3 (bad) xlat jbe jrcxz adc cmp adc push adc mov int3 or adc jrcxz mov rex.W cs mov xor rex.WR adc (bad) imul add adc cmpsb mov and rex.RXB and rorb test rex.WB mov adc cmp rex.R cld adc rex.RB rex.WX (bad) std hlt fmull fistp mov xor jp pushfq adc sub add sub cmp fist movsl sbb movsb (bad) and sub jge add jl icebp fildll xchg fist pushq (bad) out (bad) cli movabs movslq sub pop ds test rex.R (bad) fwait sbb xchg mov lahf imul rex.XB mov (bad) loope or ljmp rex.WX mov push (bad) xor lea jg (bad) xchg rex.WRB in xchg xlat mov in outsl (bad) adc add adc rex.R adc lock mov add add push (bad) fadds rex.RB gs and lods xchg (bad) pop adc leaveq stc out adc sub rcr adc add mov mov jp pushfq adc rcll hlt push adc cmp (bad) mov pop mov sti (bad) out sub rex.W push (bad) int3 xchg imul in int rex.RX rex.RB adc sbb rex.R negb mov xchg (bad) mov and je and sbb (bad) mov rex.RXB rex.WRX clc cmp (bad) je movabs lahf loope outsb callq add (bad) rol xlat jmp shll xor clc mov hlt add movsb rex.B mov cmpb jp test (bad) jl jmpq lea (bad) rex.R (bad) hlt push cld or imul movabs rcrl fdivl push enterq imul xchg push lods movsb push jl sbb push (bad) rex.RXB outsb add iret sub mov (bad) outsl enterq and push rcrl jae roll fcomps cmpl sub xor lret rex.WXB cmp pushfq and retq adc cmp adc leaveq std (bad) xor je cwtl (bad) xchg (bad) retq pushq adc or (bad) mov cli or and int3 xor push rcrl addl sub xchg xor out adc (bad) movsb (bad) imul fucomp fsts lods nop jmpq movsl xchg rclb lea outsl (bad) int3 scas in scas jns (bad) rclb xor (bad) mov pop enterq clc mov and jne shll fs rex.WR push lock loop (bad) fsub xor (bad) (bad) ja xchg fistpl (bad) (bad) mov or xchg jne add shlb jp fwait test rex.WRXB lret and mov je rsm jge or subl push cmpsb stos lods cs or mov xchg fwait mov fs adc jg add and mov (bad) lods adc mov pop mov adc movslq adc (bad) mov mov in and sub rex.X push nop adc out lea xchg push mov stos mov cwtl jns rex.B mov div mov rex.RB cwtl sbb cmp jge shlb jp add cmpsb mov movabs add loopne jl xor adc rex.WRB bnd pushfq cmp hlt sub fcoms test jrcxz ss fsubs (bad) mov icebp (bad) xor cmpsb and push pop push adc mov mov add std jae fstl outsb sub sbb (bad) cmp and (bad) lret mov or (bad) jmpq rex.WR (bad) adc fsubr fisubl or (bad) loop xchg iret icebp rex.WR fmuls add pop lock mov loop int3 mov movabs (bad) repz add jp pop adc fldenv or jne negl mov js (bad) movl xchg and leaveq (bad) loopne sti cwtl add jno mov subl pushq and (bad) xor int3 rex.WXB mov rex.B fstps sarl (bad) pop xchg mov out rcrl (bad) xchg in fmuls in nop ss ror in mov (bad) pop add adc push ficom (bad) mov (bad) sbb xor jl or lock or sti sub jl rcrl movslq push retq and insb mov lods push (bad) insl jo jg rex.W (bad) pop (bad) and (bad) (bad) (bad) mov pop or fs loope lock (bad) xor fwait (bad) subl sbb rex xchg test (bad) adc rex.X jp xchg rex insb fmulp shrl in jo jnp adc retq (bad) (bad) mul sbb (bad) add add repnz add add sbb and lea (bad) xor add push int3 xchg add add rex.WRXB in or movabs test push jne mov callq xchg js clc paddsw lods and push or cwtl or int xor movabs fmull rex.X xchg stc or (bad) je (bad) xor sub mov int rex.WX fdivr sub and ja,pn in pop (bad) rex.WRXB (bad) repnz cmp hlt shrl jnp rex.RB mov loope enterq and sub (bad) leaveq mov mov cmpsb adc retq rex.WRXB lock addps mov (bad) in popfq jle adc out divl (bad) sbbq movabs lea movsb sub lahf xor ja add shlb push fdivl fxch adc (bad) lods lahf (bad) sub sbb rorl roll (bad) mov movsl sub out and mov callq test xor mov (bad) xor xchg jb push pop cmp and callq mov xor loopne jl movslq sub adc (bad) ja adc adc mov rex.RXB iret in (bad) mov sub cmp cmp add faddl unpckhps xchg (bad) mov negb xchg adc fstpt rol mov pop xchg mov (bad) fbld rdpmc pop stc sbbb mov push cmp adc ja loope adc stos sub (bad) lock or mulb lret rex.RXB in xchg sbb nop xchg cmp sbb fwait std (bad) retq test in (bad) adc rex.XB and push outsb (bad) cmp rex.WR stos insl xlat sti sbb sub sbb pushfq and fcompl and sub (bad) and scas and pop xchg (bad) rex.RXB repnz xor cltd (bad) lahf cmp add mov add (bad) loope pushq and std add jle (bad) mov (bad) xor (bad) add mulb sub js adc xor nop mov xchg jp and (bad) scas (bad) add xor (bad) jbe stos jbe push fildll (bad) callq (bad) adc loope xchg rep insl sub lahf test rex.XB xchg adc mov andb stos (bad) lock and hlt or xor in test mov xchg adc (bad) sub or xchg or rex.WB mul test movabs lcall xor (bad) jb pop rex.WRB cmc jno cmpsl push mov cltd fsts stos jmp rex.WRB jrcxz add jp pop fiaddl pop (bad) (bad) xor sub out adc rclb outsb jne sbb push pushfq adc mov pushq fstpl in callq and rex.WRX (bad) jne jmp sahf lods push adc mov (bad) xor mov (bad) adc outsb retq rex data16 (bad) xlat (bad) xor rex.WX xor callq jno sub ja sbb xchg xlat enterq rcll lods or adc movabs (bad) pop fildl push js xlat callq mov xchg mov mov mov (bad) mov clc jge pop ds sub pop jno and mov movabs or and adc xchg cmp xor sbb pushq rex.XB (bad) in adc xchg rex.X fstl ljmp pushfq or (bad) addb push cmp mov (bad) out (bad) sbb adc cld adcl add (bad) pop xchg cli cmp adc fdivrs cmc insb adc test mov adc and pop notb icebp lahf or xchg retq add ss fist adc rex.WB rex.RB test pop scas in jo sti out (bad) outsl mov adc (bad) test int3 (bad) retq (bad) test add movabs adc (bad) ds push test adc (bad) (bad) adcl adc notl push xor cmp rex.RB rex.R data16 xchg (bad) xor hlt mov ss movsb in rex.WR fwait push movsl js rex.WX stos sbb (bad) fidiv mov fdivr (bad) movsb or in int3 js and (bad) sbb fidivl (bad) in xor pop icebp add movabs or (bad) mov (bad) xor pushq adc icebp push std fsub cs cmc lea movabs push xchg icebp movsb push mov movabs mov cli pop adc rex.X movsb (bad) pushq mov mov (bad) hlt jns (bad) movslq rex lret (bad) out test mov fnstsw lret (bad) jmp pop (bad) push adc jnp and pushq jo (bad) pushq es jl (bad) mov popfq rex.RB test in cmpsl movabs nop test roll adc or (bad) sarl xchg jns int push (bad) sbb mov adc cmp jle adc xor and pushq jp (bad) pop jb xor push test int or pushq or mov mov or jbe xchg fstps outsb (bad) in lahf and (bad) jns (bad) add stc clc add sti mov js mov cmp xor stos (bad) jb lock insb mov js rex in retq lret push fdivrs repz cwtl jbe loopne movsb (bad) xchg xor cs lods or mov pop xchg pop shr popfq (bad) adc leaveq (bad) ds shrl shlb or rex.W (bad) sbb (bad) ror or sbb adc (bad) (bad) add mov adc roll xchg stos pop (bad) xchg stos imul rex.RXB in cmp jno mov fucom leaveq in lret rex.XB outsl xchg mov pop sarb cmpsb std rex.WX push or lret testl lods or xor (bad) std add adc jle (bad) addr32 mov add sub movsb sub fs fcoml hlt jno adc orb xlat pop cmp mov out add (bad) push callq (bad) movslq (bad) jmp (bad) xchg stc (bad) (bad) in sbb cwtl cltd xchg int scas xlat (bad) (bad) mov rex.R mov and loop int (bad) cmp sahf adc int3 adc adc jb or push movl out jl adc jmpq mov pop (bad) (bad) cli loop int3 mov cwtl mov rex.W push (bad) adc sbb adc or add fmul sub xor jmpq scas mov (bad) jno sbb jmpq rex.XB cmp ud2 (bad) (bad) sub repnz xlat or loopne mov rex.R add add cs hlt xor repnz cmp and pop cmpl sbb (bad) pop mov (bad) loope adc cmp sbb popfq pop jmp int adc mov fs movabs rcl adc int3 mov enterq mov mov jl push cmp sbb in fs push rex.WRXB sbb addps rex.RXB (bad) mov mov jb xchg loopne (bad) repnz cltd xlat mov out rex.RX pushq mov repnz sarb retq mov pop add push sbb andb sbb (bad) rex.B loope int3 sbb rex.WRXB and add sbb cs (bad) loop int3 movabs cs imul rex.RX repnz cmp lret adc out (bad) mov rex.XB push (bad) adc jg (bad) movabs mov or orl pushfq icebp cs cld movabs jl iret mov int3 add cmp movslq xor (bad) movabs mov jo fwait jno rex.W out cmpsb sub jl fs mulb jmp cmp movabs and sub je fmul repnz push jmpq cmc lods xchg mov shll cwtl mov pop push adc and rex.R rex.WR cmp rolb in cmp repnz stc ds mov push fwait rex.R lock mov xlat (bad) mov movsb mov (bad) test or rex.XB je sbb fnop out icebp pop (bad) push test out cmp rex.WRX and rex.WRB mov rex.WRX test and pushq xor adc out lods adc nop fsubrs movabs sub jg sub fist movabs cmc fnstsw add pushq xor or mov adc add lahf and in xchg (bad) sbb pop cmp and nop lahf (bad) rex.WXB adc cmpsb adc pushq hlt adc add or enterq pop (bad) sub pop mov sbb cltd add (bad) ror xchg and cmpb cmp (bad) mov vcomisd (bad) push mov (bad) out cmp sub jo add cmp jnp in mov or rex.RX rex.W rex.RXB push push jp fstps add scas rex.RX pop mov mov mov stos rclb popfq mov add movsb add sub rex.WXB retq mov or xchg callq adc (bad) rex.WXB je adc xchg test pushq push (bad) rex.RB in (bad) sbb out or mov (bad) mov shlb lods cwtl mov pop adc (bad) repnz es (bad) out int3 (bad) xchg int3 (bad) stos lcall push pop cmp test rex.RB rex.WRB mov (bad) mov scas in (bad) fstps sub add xchg (bad) jge pop push mov adc jle sbb rex.XB (bad) or shrl retq orl (bad) (bad) scas cmpsb (bad) or pushq (bad) xchg push (bad) sahf hlt in add pop lret jg loopne divl xchg adc or pop (bad) (bad) push movabs mov hlt xlat adc (bad) mov ss pop cmp in (bad) (bad) fsubrl (bad) xor lea cld adc mov and and movslq (bad) rex.WRX movabs cmp rex.RXB clc xchg xor popfq rex.WB rol push adc repz add xor adc jb ficompl and push jmpq adc mov mov rex.RXB fnstsw rex.RB fs cli fs popq (bad) rex.RXB xor mov mov and and sub movabs int3 out (bad) cmp fcoms adcb retq and jno retq adc ds push mulb in mov xor sub adc jl idivb push lock stos rex.RX sbb (bad) callq rex.B xchg (bad) fild add out lods retq iret insb pop mov adc (bad) mov sbb movslq sub sub repnz and jrcxz pushq cmc xchg (bad) (bad) shll fistp mov orb add lea sub mov push (bad) movsl movabs (bad) pop xchg clc rex.WB rex.RXB sbb (bad) in (bad) jmp fdivl movabs (bad) scas sub (bad) bnd mov (bad) xchg leaveq adc rex.WXB repz add out jae movsl int3 clc int3 hlt idivb xchg sti jae and loopne rex.W cmpsb mov mov add scas test rex.R test (bad) stos mov or std callq (bad) (bad) fmull mov (bad) mov rorl jae cmp and or add out adcl leaveq add ds sbb (bad) xchg stos or int3 jmpq push jbe xchg jmp or loop add sbb loope in movabs (bad) pushq cmpsb (bad) add jl sub ds adc xchg adc mov or mov test insb pop divb mov mov mov and push mov mov rex.R ror (bad) mov vpmaxub add imul sbb fiadd jno repz mov lea xchg cli ja rex.B sbb jbe rex.RXB (bad) fdivs sbb adcb out callq out cmpb mov callq enterq or and rex.X stos rex.RB add andl and and sub (bad) cld (bad) (bad) add movabs ss xlat out (bad) (bad) rex.W nop add pop push pushq (bad) out mov add add xchg lret (bad) cmp popfq insb add jge rex.WX (bad) jnp,pn movabs test cmp leaveq scas jno mov add xchg std mov pushfq addr32 add retq (bad) xrelease jnp in (bad) jmpq test xorb in and rex.WRXB insb mov rex.RXB push mov cmc in mov (bad) push in xorb pop push jbe out rex.RX neg or (bad) add sar (bad) mov pop mov fstpl sbb addl xor rex.R or mov sub or rex.WB rolb xchg mov retq (bad) rex.WB test icebp test fwait je pushq mov push (bad) add xchg (bad) lahf scas jp xlat imul shr push mov cmp (bad) addb fs andb cmp pop cs push sub xor cmp je orl mov pop (bad) movslq cltd push jae adc jae int3 (bad) or out fistpll jecxz repnz sub jl negb (bad) cmp mov in adcl (bad) xchg jg fistpl test pop (bad) or jrcxz loopne mov rex.RX rex.X rex.WX xlat and std jae rex.X out movabs mov mov or jl callq ss scas xchg (bad) mov mov callq xor or (bad) hlt sub int callq fdivrs rex.W rex.WB rex.WRB mov notb movabs xchg jbe,pt retq roll add add sbb adc (bad) (bad) gs mov popfq xchg jmp jmp pushq jmpq popfq sahf int3 retq mov cmp mov pop xor jmp sbb (bad) roll cmp rex.WXB sbb notb (bad) (bad) xor mov or je rex.XB rex.XB fcoml cmp stc mov ss (bad) addr32 sub xchg adc mov ja adc in adc mov jrcxz rcll mov sbb stos adc data16 push jno (bad) test adc jl cmp add jg adc (bad) sub (bad) adc rex (bad) or mov sub (bad) test add sub pop stos (bad) rex.RX adc cmpsb add ds and mov movabs add out adc and fstps loop in sub je retq loopne imul mov mov (bad) outsb adc xchg cmp (bad) (bad) push lock fiaddl lods mov push gs push retq pushq xchg pop lods xchg push scas jnp cmp xor or rex.RXB push cltd lods icebp lahf movabs mov cmp out out jne add mov push (bad) sarb cmp push or loopne jp (bad) xchg cmp push jnp push jg movabs movsb out imul rcl (bad) push (bad) or push adc adc and adc scas sbb xor insl jo xor add mov roll add push loope jo cs sub sub rex.X adc jmp cmpsl xlat and or stc xchg lock pushfq scas xchg ficoml in mov movsb rex.WR rex.WRXB cmp cwtl mov adc adc idivb cmp and (bad) loope shrl mov adc rex.RXB (bad) xor pop idivb rex.RB (bad) and test mov int3 (bad) jns scas push imul lea adc rex.RX in jne mov cld sbb rex.WX fwait je insl adc int3 fstl or cmovne data16 pushq push ja or sbb (bad) mov in push callq jge adc mov (bad) xchg mov loop push (bad) (bad) sbb xor (bad) lahf pop and or or sub not push xor test adc add movslq (bad) stos rcll jle outsl pop adc int3 gs adc rcrb and (bad) or xor mov mov fs add lahf (bad) jle (bad) sbb (bad) fcoms subb loope divb (bad) sbb (bad) rex.RX rex.RXB xor push pop mov (bad) jg,pn hlt and fwait lock cmp (bad) pop pop and (bad) xchg sub pop cwtl (bad) rex.RXB je cld mov add iret sbb mov in data16 fistp movabs adc mov add (bad) mov cmc xchg xor jae lods (bad) rorb cmp (bad) jo and xchg in mov (bad) (bad) (bad) lock push (bad) in (bad) test (bad) mov ja ficoml mov outsl jl jb adc mov sub add pushq cmp and adc es or outsb outsl xchg adc fdiv mov add mov ss adc (bad) mov fcomp cmpsl adc push sbb ss rex.WRXB sub mov rex.WRXB push sbb add (bad) (bad) repz clc clc mov jg retq in imul lret rex.WX rex.X out (bad) cmp cmp (bad) leaveq and or add xchg pop es int mov sbb scas stc test and mov in pop or rex.WR andb (bad) movabs outsb (bad) add (bad) ss adc adc iret xchg rex.XB rex.RB cmp mov lods adc cwtl sbb sbb int adc orl pushfq std cmp or jo ss scas sub rclb (bad) (bad) movabs gs sub jns adc adc xor out mov negl pop push or cmp inc or mov mov cmp enterq xor (bad) movsl (bad) int out lods mov adc shl rex.B push clc adc std sub enterq add mov pushfq (bad) (bad) insb adc imul cmp mov enterq xor and sub pop xor mulb sub (bad) pop or int sbbl rex.RXB fsubl es sahf (bad) icebp (bad) (bad) testb je xchg int3 (bad) fcomp shlb and repz xor (bad) cmp movabs mov push push or mov sti add clc add (bad) (bad) in lock nop adc movabs (bad) adc mov fbld rex.XB retq mov mov (bad) movabs add sub fs adc jp (bad) rex.XB (bad) movsb fimul mov mov int3 add adc cli and jl ss xchg (bad) push adc push push jp mov rex.RXB imul adc flds jle adc and xor and jb movabs sti jmpq cmc adc (bad) movabs xor jrcxz repz js mov sbb sbb je mov negb out int rex.RB pushfq (bad) (bad) test xlat mov jge fs mov push (bad) dec mov adc rex.RX pop (bad) sub rex.XB leaveq stos (bad) xchg fsubr int3 outsl mov adc (bad) cmp cmc jg rex.RB stos sbb mov adc (bad) xor outsl loopne sub adcl adc cmp xlat lock or jb adc mov adc (bad) mov xchg xor rex.WXB and rex.RXB xlat rcrl xchg insb in mov jle fstps cmpsl and jg rex.X rex.R (bad) (bad) add nopl fiaddl adc leaveq xchg sbb (bad) xchg mov rex.WB (bad) adc cmpsb out xchg test pop xchg sub adc adc cmp test enterq or cmpsl (bad) add enterq enterq int3 and ds fsub rex.WRXB push rcll loop lea je pushfq lea cli mov xor mov nop cmp add (bad) pmaxsw popfq in cmp je enterq jmpq in mov jg clc lods sub scas add jo mov ss and mov xchg (bad) jae movsb cltd jmp mov mov or mov pop adc popfw sub insb (bad) cli fucomi rclb push pop add mov mov js (bad) lea adc out lock adc (bad) lahf or jl jbe xchg adc mov and sbbl sbb lahf (bad) rcll movsb mov fimul or cmp sub xchg mov pop (bad) incl mov gs and (bad) sbb cmp pop (bad) out repz retq fucomp (bad) int in std (bad) mov out (bad) pop add xchg sbb imul sti stc mov rex.WRXB rex.WXB xchg or or add rex mov mov jne adc retq add push gs sub mov push rex.WRX movslq jo (bad) callq mov lock xchg in shrl cmc cmp add fildl mov push out rex.WRXB rex.XB js cmp movsb pop (bad) (bad) (bad) movabs push (bad) mov pushfq and insl (bad) xchg push add movslq sbb iret lea stos xor fucom sbb adc cmpsl mov jns push xchg sub cmp retq or lock test movabs sbb nop or rcl jge rcrl pop add (bad) cltd sub sbb movslq mov cmp or jbe jl xchg and rcrl and fdivr rcl or addb inc pop adc fsubl sti or std push fadd (bad) (bad) pop movl cli add rdpmc in movabs vcomisd test pop lahf pop movsb (bad) sbb lods and fcoml xchg adc jl (bad) adc rorl push jg mov repz jmp cmp mov (bad) lret xor or adc movabs push hlt sti jl (bad) clc cld mov popfq (bad) std rex.RXB cmp addl fmuls cmp jbe jb addr32 mov pushq mov pop ds and movabs fildll cmpsb and or pushq lret (bad) or adc mov jae lret (bad) mov cs repz (bad) rex.RXB cmp xchg callq negb add sbb andb mov int3 pushq and fcomps repnz movabs (bad) add (bad) sbb push pop shrb fidiv add repnz xchg (bad) outsb gs cltd push jo callq adc je mov rex.WRXB xchg rex.W lock rex.W popfq sbb jbe lods add (bad) mov rclb sub (bad) sbb cltd (bad) scas add shll sub rcr sub xchg scas xor jrcxz (bad) pop rex.WRX jne xor pushq (bad) pop mov pushq sarl jg (bad) xchg enterq push mov sub adc pop sahf movabs (bad) xor fnstsw leaveq (bad) (bad) notb jb jl imul (bad) jmp rex.XB test (bad) (bad) add adc xor icebp xor or es rex.WB lock insb xchg xchg add cmp (bad) adc push jrcxz rex.WB rex.WXB imull adc hlt mov add adc xchg insb (bad) imul repnz (bad) fwait mov push gs or (bad) (bad) and movsb cmp rorl (bad) add add insb (bad) cld add rex.RXB out (bad) xchg hlt add (bad) (bad) cmp xchg jmp add (bad) xchg or (bad) xchg sbb or jb repz pop callq (bad) xor std or in fs movabs mov (bad) mov js ficom in imul fcomps add jno es add (bad) and test (bad) scas cmp imul mov jg adc rex.XB (bad) (bad) movabs mov rex.X jbe imul xchg (bad) jp cmp subl (bad) int3 mov nop xor rex.WB clc shr setle and mov push cmp pop (bad) in mov mov sbb jno and lock rex.WX xor xchg xchg mov cmc sub or add test jns sbb add (bad) (bad) jo out orl push rex.WRXB rex.X pop mov sub xlat notb pop xor imul imul jno rex.WRB (bad) mov add fistl xchg fcomps (bad) xor pushq xchg ss lods (bad) retq cmc (bad) out icebp adc xor pushq fwait repz je mov shll jbe loope push pop out (bad) add cmc sbb sub movsb adc movabs leaveq stos (bad) in rclb jno xor xor or roll mov nop cmp rcrl movabs cmp in sbbl movabs (bad) (bad) sub mov (bad) cmp faddl mov imul repz sub movsb popfq and adc pop scas loop adc rex.XB in in xchg and pushq rex.WRX adc xchg callq mov nop cmpsb mov imul adcl adc sbb (bad) (bad) jge add imul gs adc outsl test movabs rex.WRB pop cmp sbb mov in cmpsl xchg jns (bad) or scas rex.RB adc cs adcb or iret out cmp roll or (bad) cwtl cltd sbb int pushfq cmp adc (bad) movsb adc jno pop jp xlat sub (bad) xor push ja and xchg adc or xchg adc xor or shlb pop push lahf pushfq mov es (bad) pop adc mov rclb (bad) repnz sti xchg xchg xor add jno (bad) and jmp rex.RB andl int mov xor fistp cmpsb rclb hlt insb sahf adc cmp (bad) jmp (bad) xchg mov rex.RXB insb (bad) adc clc jrcxz pop push std xchg movabs lret rex.R data16 mov and (bad) fsubl fisubrl movabs ss cmp imul clc sbb mov jb xchg (bad) mov repz mov jo xor cmpsl adcl (bad) outsb lea pushq (bad) movsb rex.RX rex.WRXB adc lock push sbb outsb or mov sarb divb cwtl add addr32 cs cmp (bad) push js clc sub mov stos stc int sbb (bad) jno sbb xor (bad) jne (bad) mulb (bad) int mov sbb mov (bad) mov hlt movsb rex lock rex.WRXB rex.WRXB jge xor fwait jnp rex.WRB rex.XB stos jne (bad) (bad) cmp (bad) xor rcll in gs sbbl sub cmp and fs and in cmp scas or xchg (bad) rex.RB jbe (bad) mov sahf (bad) jg sbb loop stos cmc push (bad) sti hlt xor (bad) xchg or test mov rex.X xchg std ja mov lahf pop add mov add rex rex.RXB mov sub leaveq and rex.WRXB and js fisubrl out mov (bad) cmp and adc rex.XB rex.WRX (bad) add mov xchg xor cmp mov callq (bad) rex.RXB xchg outsb jbe callq rex.WR rex.RB or mov sbb rex.WRXB mov push fisub adc in (bad) jno add (bad) jg movabs sbb rex.RX add adc (bad) mov pop jno popfq cmp rex.WX or rex.XB imul fs callq mov rex.R xor (bad) jbe lret imul cmc rorb add (bad) outsb xchg mov jmp mov adc sbb lahf sub (bad) mov fadds (bad) cmp std push out rex.RXB push rex.WRXB sbb adc pushq repnz jno mov add (bad) add adc (bad) push rex in sbb callq icebp mov sarl mov (bad) mov adc shrb or push rex.WRX ds js sub mov xor (bad) jp ss (bad) movsl cmp push pop iret or movsb xor in xor jg mov scas icebp adc rex.B sbb cmpsl jmp xchg and enterq rcrb (bad) mov cmp stc mov imul adc or and add (bad) sar rex.B sarb jne mov (bad) callq pop xchg rex.WXB fwait sahf mov push xchg xchg jo (bad) jmpq cmpsl add xor out or cltd push cmp or fcomps decl repz jmpq sbb or cli callq mov mov jb jrcxz movabs xor xor fs cld adc sub sub (bad) rex.RXB xchg (bad) cmp faddl mov roll or data16 in mov fisubl sbb sar xchg mov icebp add add rex.WRXB movsl mov je mov and fstpl (bad) scas rex.XB mov cmpsb cmp (bad) pop cmp pop or mov enterq mov (bad) (bad) in sub push jrcxz out callq imul mov or push and sti ja (bad) sbb xor in mov pop xchg stc in ja test and pmaxub and push stc jo or pand adc sahf out cs sahf movabs xchg (bad) lret pop js jbe rex.R repnz push cmpb mov pop rex.WRX sub (bad) mov outsl xor lock repnz rex.RXB pop rex.WRXB add pop jo enterq jrcxz addr32 xchg fmull sarb mov mov jl rex.WB ja,pn std adc mov push (bad) xor adc mov rex.WX rolb adc rex.XB rex.WR xchg adc xchg xor pop xchg cld movsl (bad) xchg push (bad) test fidivrl mov adc (bad) insb psllq test sbb rex.WRXB iret (bad) rex.RXB (bad) sbb outsl sahf jmpq sbb (bad) (bad) (bad) lods adc mov hlt pop movsb movabs pop add (bad) sbb mov push mov mov pop adc cmp adc jle cld add (bad) jge in lea (bad) pop and sub mov hlt sarb movabs sub fistpl adc xor cld mov adc and or fidivr pop mov fchs adc pop rex.WRX and pushq hlt add or pop and xor test adc (bad) scas cmpsl (bad) or mov test repnz and sbb xor (bad) rcll (bad) retq lods mov xor rex.B rex.WX xchg mov xchg mov (bad) cmp or lods cltd sub jns add add pop (bad) sahf (bad) xor gs movabs hlt cmp xchg (bad) xchg pop out adc sub pushq (bad) or notb out mov incl (bad) (bad) cli cmc xchg out (bad) (bad) (bad) adc in or fidivr mov add (bad) xor cs and cltd push fcmovnb pop xor cmpsl and cmp mov xchg movabs lock sbb js cltd xchg rex.RX jl (bad) and jge loope cmp movabs sbb ja jae push icebp insl cmc xor fcoml mov callq (bad) fdivrp add rex.WRXB pop add pushq or xorl adc or stc xor out enterq mulb cmp stos clc lret pushq (bad) (bad) rex.X rex.R rex.R lock fwait cli stos mov (bad) mov (bad) int pop (bad) rex.RX add (bad) int3 andb (bad) or ds jo or (bad) scas (bad) jmp cmp cs js rex.WX pop ds movsl data16 cltd punpckhbw and retq lahf (bad) in (bad) (bad) (bad) mov in scas jns xchg mov sbb rorb test mov nop ja cmp or lock push xchg push ds rex.XB add fdivr mov iret xor rex.R (bad) sbb rcrl enterq fs retq add add fmull sarl sbb xchg adc or mov repnz out jrcxz test xchg insl pop rex.WB fcomps lret rex.B push add scas pop sbbb (bad) (bad) fwait xor cmp out (bad) sbb add cmp sub jl adc fnstsw (bad) sbb (bad) sbb subl (bad) mov stc or popq cld add fsubs push sbb sahf (bad) adc lfs adc gs callq mov cltd fwait shrb rcrb sbb out gs xorl (bad) test (bad) icebp (bad) jns adc fisttp es cmp adc (bad) mov repnz (bad) js or xor movsb sbbl js test sub sahf xor pushq jl rex mov xchg or and mov cmp ror xchg ss or add in shlb mov mov pop (bad) mov sbb pushq sub shr out retq cmp sahf jbe out nop mov pop or adc jo mov push (bad) adc rex.X popfq loopne sub pushfq (bad) mov fs xor jbe fs xchg sub out ficomp mov js test rex.XB test (bad) scas (bad) (bad) test mov callq sbb adc or ja cmp (bad) insb pop movabs mov adc (bad) pop cmp sub and (bad) or (bad) cmp sbb (bad) sti and movsl jae sahf mov adc jp lahf in jrcxz and (bad) retq (bad) or add (bad) or sbb (bad) or xor fisubl cmp mov lock rex.WRB enterq enterq xor (bad) (bad) mov stos scas pop je rex.WXB fwait (bad) int js icebp int3 jmpq xchg scas or add sbb leaveq out fild jae mov jrcxz outsb mov cld rex.B jae je jmp fcomp (bad) sub ss mov mov movabs jp insb sahf jmpq faddl pop out cld (bad) (bad) xchg mov cmp retq scas popfq (bad) jmpq jmpq cld cwtl cmp adc ja sbb and or add and mov pop jg jmp retq mov rex.WRB fcoms rex.WRX push jno (bad) out lahf ss jbe jo or mov loopne pop stos or or in stc sbb add (bad) (bad) sub lret fnop mov movsb (bad) (bad) pop mov (bad) (bad) in xor movabs sarb cmp and je sbb add in cld jrcxz test push adc (bad) rex.WX pop fstps add stos lret gs xchg jb int3 in pop rex.RX xchg (bad) and (bad) std (bad) add stc js add (bad) and sbb or rorl addb xor cwtl push xchg sbb shrl in rex.RXB callq add adc (bad) add xchg mov jno add (bad) pop in mov (bad) and and (bad) leaveq or (bad) (bad) leaveq (bad) (bad) rex.WRB lock sbb cltd rex.WRB xchg sub lret (bad) (bad) outsb dec callq lods or sub fwait adc xor (bad) xchg addl lret rex.WRB icebp divb (bad) loope sub rex.WXB outsb mov jbe push sub (bad) xor (bad) movslq adc sahf in rex.X adc test or out mov or leaveq sub or sub xor mov clc fcmovnb (bad) cmp or (bad) pop setp mov rex.WR mov sub adc (bad) nop adc (bad) sub retq rex.RXB int sub xchg gs movslq (bad) rex.WRXB mov pushq int3 mov outsl andl adc jb mov orl lcall (bad) jl std cmp pop sub mov adc (bad) icebp je (bad) adc (bad) in rex.WRB or callq pop pop cmpsb mov cmp sbb (bad) xorl movabs fisttpll pop add xchg rex.WX icebp fildll cmp hlt rex.WR or lahf adc es movlhps movsb cmc enterq or cmpsb iret jl div pavgb callq out (bad) fs (bad) xchg push in retq (bad) (bad) lahf push movabs or movabs movabs retq std mov pop and sbb cltd outsb pop push rex.WB callq cli or jle lock movabs adc sub imul shrl (bad) retq imul pushfq or stos xor lea orb rex.B (bad) (bad) (bad) shrb hlt jmpq add lret repz js pop pop mov fisubr (bad) mov out rex.WRXB cs jno repnz mov (bad) fisubrl imul mov movabs lret fsubrs pop out mov (bad) adc adc (bad) scas imul rex.WRB repz mov mov and rcll (bad) push mov (bad) test sbb (bad) or and enterq pop (bad) rex.RX popfq adc notb js jle push cmp (bad) rcrb movabs and (bad) xchg (bad) push rorl (bad) mov mov or push cmp movslq xchg rex.WXB clc adc push jo fimull pop rex.WRXB data16 lods outsl stc pop clc and callq js test (bad) mov cmp add sbb cmp and (bad) movsl adc vpunpckhwd repnz rex.RB fimul mov (bad) adc cmpsl add insl jp test fcmovnb cs je pop retq gs xchg sub adc jp (bad) je mov test (bad) add push test negl rex.XB and fdivrs pushfq xchg cmp pop push jrcxz loopne (bad) ficom or and add (bad) movabs rex.WRB mov xchg mov rex.B orb jae mov retq xor xchg jno rex.XB callq pushq cmp xchg pop sti rex.WX (bad) mov cmp rex.RB pushq (bad) rcll in jp out gs (bad) jge clc or mov lahf (bad) (bad) hlt push sbb or popfq rex.WRXB (bad) (bad) enterq (bad) adc xchg jle fsubl add mov adc (bad) and xor and int jbe (bad) xchg ss fs mov mov in fcoms jp addl mov negl and pushq outsl push push fdivrp cmp addb mov fnstsw enterq movabs js movslq adc rex sahf (bad) add (bad) adc out jrcxz jne jmpq test loop push int3 fldcw (bad) je sub movslq xchg int3 (bad) es push mov cmp int3 cmp (bad) mulb shr cmp stos in outsb xchg rex.WRB fwait test repz jp enterq cmp repz and mov (bad) jmp jne mov cmp (bad) xchg xchg xor (bad) xchg in fidivrl add cmp pop (bad) notb pop insb adc adc cmp adc callq shlb or movabs je or stos in jbe fsubl push (bad) ja callq jmp shlb out cmp (bad) xor adc xchg mov (bad) addr32 loopne stos rcll out (bad) std xchg mov rex.XB lods adc movabs data16 mov jns test movb imul sbb cltd (bad) jrcxz lret push leaveq adc cmp cmpsb xchg or jge (bad) pop or (bad) roll rex.WXB push addr32 sub outsl mov xchg sub push std lock in sub iret sbb rex.X adc sub fisubl push add cld dec jae insb cltd callq mov ja and xor cld ja (bad) fild ja loope test xchg repz hlt popfq divb mov addr32 movabs in nop negb add lret cs cmp mov mov push xor (bad) and add data16 rcrb jno pop push (bad) mov pushq sub (bad) (bad) xor pushfq (bad) pushq mov (bad) (bad) mov mov jl rex.XB xor pop scas pop cmp jp fisttp fldenv xchg neg (bad) jge test hlt xchg adc mov cmp rex.WXB jno sbb clc mov xchg sahf pushfq (bad) gs adc test (bad) movslq mov lret adc int3 mov or (bad) jrcxz pop mov pop jb nop jne cltd (bad) retq adc push mov and xchg and pop sbb popfq jge jl adc mov scas fs stc fmul xor movabs adc mov ja xor ja adc or xor sbb mov ljmp cmp pop adc mov adc xlat xor es xchg xor rex.R and movsl add (bad) movabs (bad) adc rolb jmp adc out mov push mov rex.WRXB fdivrl notb (bad) std (bad) loope adc mov rex.RXB xor insl rex.B (bad) (bad) adc callq push stos sub mov rcr pop mov movsl adc mov (bad) push mov (bad) push push divb sub cmp adc pop fucomi (bad) sub (bad) jno lods xor (bad) fsubs test adc iret scas add adc xchg add jmpq cmp clc push je fwait mov lret cwtl (bad) adc xor imul cmp ss gs mov jnp sbb rex.RX (bad) (bad) mov popfq movabs outsl movabs xlat clc gs mov movsb cltd clc jae or add push (bad) imul mov sbb adc test adc test popq lock test add adcl or fdivr int3 adc ss sub iret out mov (bad) mov and fimull cmp (bad) fdivl push (bad) sub cmp and or xlat xchg sbbl (bad) cwtl cld add adc adc mov sub rex.WXB cmc rex.WXB xor xchg (bad) rex.WRB (bad) rex.WRXB ds out and jmp or pop fnop fdiv adc (bad) (bad) scas in or clc js rorb jnp xchg imul outsb adc mov mov jnp (bad) subl data16 jmp pop (bad) and cmp (bad) movsl xchg outsb mov icebp fucomip mov sub jge pop jl cmp rex.XB rex.R xchg (bad) iret pushq add int3 mov lret mov sahf pop mov cmpb sbb repnz (bad) sub mov sub pop pop or mov add sbb movabs (bad) popfq out rex.RB in lret ds scas (bad) loopne (bad) jns add or scas mov fwait shll rcl movabs callq cmp loop xchg adc xchg (bad) imul xchg xor callq ss push scas add mov adc fwait leaveq (bad) movsl and mov push in add imul sub push clc push adc pushfq idivl insb lret js (bad) pop lods sub adc stos adc movabs and pop rcll rex.WRB je (bad) xor movabs adc mov data16 or mov fsubrs rcrb jno stos push addr32 insb leaveq (bad) out cmc rolb fwait (bad) lods fild movl pop mov pushq in rex.WRB (bad) jo add jge fsqrt jl xor mov rex.B push icebp fcmovbe rex.WB (bad) fdivr pushq in cld mov fisubl iret rex.WRB clc lret and rorb in or jg (bad) rex.RXB push or adc or xlat adc popfq (bad) movabs jo test in fs in (bad) jne imul jle test mov add (bad) mov sarb std adc rex.W rex.RXB cs xchg sbb mov sub sub jnp or repz sti andl xchg xchg and rex.WRX movslq cmpsb out mov icebp mov adc sub (bad) loop mov stos mov callq add out pushq pop add (bad) mov add adc xchg sti sbb rex.WR leaveq subb adc imul add mov pop rex.B flds xchg (bad) or jl imul or je test mov mov bswap xor js nop (bad) rex xor add (bad) mov test enterq lock adc or in and (bad) add adc pop pushfq std mov and test push rclb fs sahf or (bad) rex.WB sbb adc (bad) fnstcw adc lret clc xor lods (bad) (bad) movslq rclb mov mov pop sti iret insb (bad) hlt mov or scas sbb hlt (bad) rex.WX cs mov xlat es rex.RXB or hlt nop adc insl icebp mov lock rex.WR fwait stos repz (bad) mov test mov add clc mov (bad) xor add in loop sub (bad) and rex.WRX or xor fcoms (bad) and lret imul test mov (bad) add push cmp jne rex.RX nop adc push test stos sbb add (bad) pop and add (bad) or mov callq lret (bad) out leaveq adc out out loop sub pop callq movabs pop roll lock movabs (bad) (bad) movsb jle adc insb gs (bad) (bad) andb pop lret (bad) insb iret adc mov and mov xchg sbb ja (bad) movslq mov lock addr32 out cmp or sti xchg jp (bad) rex.WB (bad) jmpq rex.WRXB (bad) out add hlt sub (bad) pushq or ja (bad) fneni(8087 int mov (bad) rex.WRB (bad) cmp movabs xlat (bad) (bad) jg cmp movsb mov notb add mov lods movabs jae cli loop movabs mov xor mov (bad) cwtl adc xor ja scas testb (bad) pop rex.WX (bad) (bad) rex.WRB or test jmp add xchg sub fild or out (bad) cli addr32 sar mov xchg xor rex.RXB push (bad) (bad) test movabs nop out push rex.W repnz (bad) (bad) rex.RX leaveq and push lahf (bad) lods ss gs adc (bad) mov rex.WRXB (bad) adc xchg cltd out mov adc push push mov addl loope add mov xor mov pop pop cmp enterq rex.WXB (bad) rex.WX (bad) adc ss sub add sbb add sub mov ja fdivrs or jp or fsubs jmpq pushfq in add sarl rex.RX rex.WX repnz adc mov enterq pop mov (bad) subb insb mov sub (bad) fwait jnp lea enterq mov int xchg jns sbb push mov rex.WXB xor pop movabs (bad) add (bad) (bad) (bad) xchg (bad) (bad) decl pushfq and xchg cmp test xchg (bad) sub sbb cmc cmpb mov (bad) and xor add stos rex.WRXB rex.WRX lods add xchg in lret rex mov xor idiv jle fwait (bad) iret mov adc int3 sub mov loope rex.X xlat or in loopne addb scas xor or (bad) test in push fldl cmp imul push imul adc xchg in adc imul mov sub or test sub sbb add xchg xchg or scas adc or xchg lahf xor xchg pop xor pushq divb adc jp int push imul cmp sbb sbbl add (bad) sbb jae sub lock roll (bad) (bad) mov and or fwait (bad) rex.RX fistl sti sub jae xlat xor callq rex.XB repnz adc test mov sar (bad) (bad) rex.RX jno xor fcomps sahf mov xchg (bad) (bad) xchg push cmp jrcxz imul retq cwtl movabs enterq cmp repz adc pop rex.RX adc push rex.WRB gs rex.RXB add (bad) sbb cmpsb jmpq add (bad) (bad) (bad) pop loop adc rex.WRXB addr32 mov (bad) fbld (bad) out or int pushfq imul or and (bad) movsb in scas (bad) or frstor ss and adc mov pop mov (bad) (bad) adcl callq (bad) insb mov pop clc out (bad) and iret or pop (bad) vucomiss mov (bad) xor loop or jnp (bad) mov xchg cmp gs jl,pt and jrcxz mov lahf adc adc jge rolb sub rex.R addr32 shr adc leaveq std pop movabs test and mov (bad) and push cmp xchg or retq jl adc fnstenv (bad) adc retq (bad) adc and adc adc rex.R xchg rex.X in xor adc xchg or enterq jrcxz rex.B cmc cmp cld mov xchg adc movabs pop ja (bad) push fstpt sbbl add (bad) movabs and adc sub rex.WRB xor pop test loopne mov mov adc scas or xchg (bad) xchg imul adc jrcxz hlt jmp insb lea sbb (bad) mov movslq sbb (bad) mov adc xor rex.R imul or push stc stos sub mov jb adc pop out (bad) adc rex.XB cld cwtl in ja (bad) iret mov rex.WR data16 rex.WB movabs sub mov xor xor rcrb (bad) mov sbb fsts popfq gs test adc xchg mov (bad) rex.WRB (bad) rex.WXB push (bad) test mov (bad) cmpl sub (bad) mov jmpq mov in cli adc sub test sub out (bad) and (bad) sub (bad) pop mov adc retq add add and test fstps mov (bad) mulb test and jge mull mov adc or movsb (bad) xor sarb sub cmp es vsubpd clc loop (bad) jmpq mov in out movsl rex.WX push int3 std add jp lods ss mov out or test scas and mov mov xlat jl rorl (bad) (bad) rex.RXB in and sub mov (bad) iret push (bad) xchg sti sbb mov bnd fstpt add callq movsb nop xchg cli adc stos (bad) jno adc fwait sbb rex.RXB rex.R lods int3 clc mov pop sbb cltd (bad) (bad) js adc data16 sub cmp callq hlt jne sbb and xchg movabs rex.X xchg shrl lret xchg and mov jl faddl js movsb sbb fistl (bad) jns cld fbld movsl (bad) clc rex.WB je (bad) incl rex.X pop rex.R repz mov es (bad) outsl in mov fwait xchg mov adc jrcxz or popfq adc sti fcoms xchg popfq and fs (bad) pop pop scas sbb sub jb out notb sbb ss sbb mov mov sub xor and adc sti xor es callq xchg cmp jl (bad) movabs iret (bad) scas (bad) adc rex.B rex (bad) fstl xchg mov (bad) mov enterq jno clc adc sub rex.RB lock cltd (bad) lods movabs rex.RX hlt (bad) (bad) std fsubl adc add pop adc ss or ficomp rex.RB adc and mov sub mov rclb jno sub icebp sbb and rex.RXB in scas xchg add mov pop pushq (bad) lock rex.WRB (bad) sbb mov jne (bad) (bad) sbb adc rex.WRXB mov pop in popfq mov lea and stos (bad) pop pushq xor adc mov adc (bad) fiadd in or roll pop sti (bad) or cltd jnp callq mov adc pop jbe in jb xchg jns sub adc push fcomp (bad) and adc rex.WRXB fnstcw mov idivl sub (bad) fist pop jl (bad) fs xor pop add cltd clc std (bad) (bad) push push jae callq retq (bad) mov mov push lods xchg retq sub jno imull imul adc iret cltd sub (bad) xchg out xor or (bad) and sbb rex.B pushq mov es xor mov imul (bad) pop rclb rex rex movabs (bad) (bad) fimul lahf (bad) (bad) xor or (bad) mov (bad) fmuls add adc or (bad) data16 sub sarb rex jne and rex.R rex.WRXB mov hlt xchg es or sbb jbe add in adc in add outsl sarb sub xorl subl push mov xchg cmp mov (bad) xchg or (bad) movsl sahf cmpsl xchg mov scas mov (bad) pop xorb in or mov sbb jae (bad) fistp mov adc cmp jrcxz rex.WXB fstps (bad) lret (bad) sub lods iret sub (bad) sahf (bad) fldenv addl mov (bad) out jb stos movabs test (bad) lock xchg fstl xor adc adc sbb clc jnp sbb fisubl fs (bad) movabs test incl push push push adc cmp (bad) adc incb adcw pop mov or xor loop clc sbb callq and mov insl xor insb pop cld (bad) push sub hlt add test imul lods data16 push shl ja mov (bad) add (bad) mov mov sbb (bad) or push (bad) mul cmp std retq sbb sbb sarb out (bad) callq ficoml enterq add mov xchg cmp or (bad) xor rex.X xor mov (bad) (bad) (bad) push mov cmpsb sub sub jns rex.WRX fildll xor popfq xchg jmpq rex.XB pop fidivr or or jmpq lret outsl (bad) out lea mov pop (bad) pop ficomp adc testb lea pop mov sbb stc rex.WRXB sub push sub and add cmp (bad) and cli adc mov xchg je fwait clc std pop jae xchg rex.RXB enterq sbb mov sbb data16 xchg cmp xchg xor (bad) adc mov jae and push loope in vmovss jp rorb fcomps mov movabs mov negb stc int (bad) mov pushfq mov (bad) (bad) cmp (bad) xor cli movabs callq xchg test sahf mov cmp or out mov enterq enterq (bad) xor xchg nop cmpsl fwait out sub cwtl mov fwait cs adc xchg lock rex jle fwait callq test (bad) or cltd out fldlg2 sbb add or rex.WB pushfq outsb movabs sbb adc ja xchg mov sbb cs mov imul pop stc xor (bad) add (bad) xlat sub add (bad) (bad) mov cmp pop clc sub mov push sahf scas icebp std rex.XB xchg rol in xor cwtl mov rex.WRXB repnz (bad) pop adc ds out sbb fist and mov rex.RX fist cmp (bad) (bad) xor out (bad) fsubrs (bad) xchg retq mov rex.X jle rex.RB xchg in (bad) mov movabs add adc rex.RXB in (bad) cmp adc loope xor (bad) rex.RB push cmp rex.WXB mov rex.XB (bad) push jns rex.WRXB adc jb rex.WB (bad) ss rex.W insl mov mov jp rex.WXB iret (bad) rex.WRB mov lret jge sub mov nop clc mov rex.WRB xchg cld fsubl in rex.WR js rex.W fisubrl pop fdivrl gs out movslq fcmovnb cs jne adc or cltd sbb sbb xorl xlat mov (bad) leaveq pop (bad) adc fidivr and (bad) or sub xchg cli es cmc (bad) sbb imul (bad) jb cmpsb xor cmpsl fcoml add sbb sbb es pop mov push out jle sarl mov (bad) pushq shr sub mov movabs pop jo adc data16 out rcll mov adc movsl (bad) (bad) rex.X ja in (bad) enterq (bad) (bad) adc adc and outsb repnz push (bad) xchg jno adc push mov callq xchg lret sub rex.X rex.XB scas fwait xchg retq cmp mov adc jnp out out int push mov jno (bad) orb int3 pop add mov jae adc fucomip and push jno sbb retq add retq jns (bad) (bad) lock cmp fbld push jne rex.RB (bad) (bad) cmpb scas mov cmp psrad mov rex.WX (bad) lock jo xchg (bad) sbb add add out xlat je pop data16 test mov (bad) shrl movabs xor cmp mov adc cli rex.WR push adc fnstcw mov adc or push lods mov std jne (bad) mov mov adc (bad) push mov std adc movabs sub gs rex.R mov (bad) (bad) rex.WB rex.WXB xchg fisttpll (bad) sahf jl add clc (bad) mov rex.WXB fcmovnu mov retq xor leaveq (bad) mov rcl icebp cwtl cltd jl push int3 je adc add cwtl (bad) out (bad) cmpsl and or stc pop sub repnz sub add mov jne mov out mov (bad) hlt rex.WX (bad) mov jo leaveq cmp (bad) nop cmp jns ja mov cmc fwait (bad) (bad) (bad) push in (bad) mov cmp adc adc sub cld rex.WRXB addr32 (bad) sbb test popfq divb out (bad) fsubr rex orb mov mov (bad) cmc jb loope cmc out (bad) insb repnz fldt (bad) lods mov rex.RXB loopne pop ficoml sbb repnz fsubr outsl rex.XB ror pushq add or adc out fwait (bad) es (bad) rcrb subl cmp cmpsl or in mov (bad) cmpsb sub je fdivrl and xchg (bad) fwait or addl cmp xchg fnstcw mov rclb (bad) or add xor (bad) fstpt iret (bad) xchg jns mov movabs mov adc lea mov (bad) clc cmp and cmpsb adc and repz ss jge (bad) mov (bad) data16 or lret (bad) pop cmp movslq (bad) add mov mov loopne fisubr iret rcrb rex.WB je xor pop rex.WRX xchg jb mov test or test xor bnd callq fwait push adc enterq fisub lods (bad) movabs fild js mov (bad) (bad) and rex.WX xchg sub retq lret imul movsl adc xor (bad) lock xchg fidivrl (bad) cli sti vpcmpeqd sbb fs jrcxz pop addl rex.R test pop out (bad) (bad) add out xchg sbbl sbb pushfq ja sub xor test xor repnz out (bad) hlt adc sbb mov mov mov cli out add sbb mov fnstenv add add outsb adc int3 sahf jbe mov retq sub out pushq loope rex push out jmpq movsb mov rex.X (bad) sbb pop mov callq lods or adc lahf clc add and mov scas (bad) movabs imul jns xor je mov in sbb cmp (bad) (bad) pop iret cmpsb jge js add out xchg xchg cmpsb ficompl std and cwtl and (bad) insb sbb stos sti (bad) push in cmp cmp add (bad) test mov cs and xlat lret retq (bad) insb xchg jmp imul hlt movsl (bad) or fidivrl (bad) (bad) js movsb xchg lock cmp mov lea fistpl je mov xor xlat outsl or (bad) (bad) push insb pop and cltd addl in jae adc lock cwtl test push sub rex.WB loope cmp rex.X jb (bad) (bad) xchg callq (bad) jmpq fcomi cwtl jnp sub movsb rex.WRB rex.X or pop es jb,pn iret push fadds rex.W (bad) jg (bad) pushfq pop mov and cmp xor mov shll (bad) sbb icebp mov movl movsb cs (bad) xchg mov fisttpl (bad) jrcxz out clc sbb (bad) mov je and rclb (bad) jae push adc icebp jbe scas adc mov cld push fistl push (bad) (bad) adc mov repz adc mov xchg loope ss sbb push rex.WRXB pop pushfq adc jbe xchg adc xor xor (bad) gs rex cmpsl adc jbe loope adc (bad) (bad) mov push push (bad) or addr32 orb repnz fcomps (bad) stc sbb xor cmp js rex.WRB rex.R mov cwtl and repz and int test sbbl scas sbb pop repz xor stos adc xchg cs rex.WRX rex.W (bad) popq jmpq mov sbb enterq sysexit adc movabs test (bad) (bad) (bad) lods (bad) scas adc retq push movabs add cmp jne jno int3 std xchg or (bad) in (bad) es in push out xorb adcl add pop mov test enterq rex.W sti rex.WRB cmp pop cmpsb or adc sbbl pop outsl adc rex.X xchg jnp movsl psllq test (bad) adc sbb unpckhps xchg sbb (bad) (bad) mov adc pop movabs pop retq and movabs (bad) ds mov (bad) or movsb rex.WRXB push (bad) xlat xchg push fbstp rex.RX pop (bad) adc push repz scas insb adc in rex.W rex.WB lods out mov (bad) rex.XB in fdivrl (bad) cs movsb rex.WX rex.B rex.XB xchg sti pop push sbb (bad) xchg (bad) (bad) and and xchg (bad) xchg lahf rex.WR test jnp in lret push push mov (bad) (bad) jp adc and sbb callq mov rex.RXB push jl lret loop adc mov cld rclb test rex.RB lea jge xor cmc icebp or cs (bad) mov lret mov (bad) jno mov movabs mov (bad) jl or stc (bad) (bad) push (bad) je rex.WRX (bad) xor (bad) mov mov flds repz mov mov flds mov xor push mov inc sub or loope push add faddp loop rex.WRX rex.WRX add (bad) (bad) (bad) rclb jno outsb or out cmpsl (bad) or xor (bad) cmp xor imul fidiv and mov pushq sub xor mov sub retq rex.RX sbb mov mov jns enterq and and add add es mov or mov or shlb enterq adc jno out cwtl jbe add (bad) ja (bad) or mov adc imul adc rex.X xlat adc push adc xchg (bad) fistpll push add cmp (bad) xchg cmc mov adc lods rex.WR xor or out insl nop icebp adc lock rex.B iret retq jg nop cld movsl fs add (bad) adc test sahf and or sub vmread mov add jne jns xchg or rorl add sbb rex.X xcrypt-ecb cmpsl (bad) rex.XB xlat lret js mov mov (bad) sarb pushfq fild add rex.WRXB (bad) (bad) cmc (bad) pop clc sbb (bad) int3 (bad) mov shl rex.WX stos adc jbe (bad) (bad) xchg imul jmp rex.WB lock out movabs cli sbb or cmpsl mov and (bad) push stc xor outsb negb test int3 rex.X jl or pop xchg sbb (bad) mov insb retq fdivs adc cwtl test fwait jmp mov jne mov ja fs rex.WXB ds fstpl or mov push (bad) (bad) fistp (bad) jne fwait sub testb nop decl hlt hlt cli jbe cmpsl add adc xchg xor (bad) mov outsb push xchg jo movslq stc je sub and fmull pop rex.WB loope stos gs xchg (bad) sbb scas mov xor mov mov rcrb jle popfq and mov or cmc jge sub jmp jo faddl jne pushq push imul mov incb (bad) movabs and add sub test push cmp rex.WRB enterq jg pop mov imul adc mov enterq (bad) out rex rex.WRX (bad) nop (bad) jmpq imul clc callq rex.XB or mov insl (bad) xchg clc (bad) insb (bad) or (bad) cmp mov jl stc lods jo adc (bad) rex.WX (bad) enterq (bad) mov adc (bad) rex.WR adc adc push mov cmpsb insb (bad) sbb fistpl (bad) imul cmpsl adc imul insl movabs mov jo int retq and cld test outsl lock mov (bad) int (bad) movabs adc add xor movabs mov jbe icebp rex.RXB fistp push cs loope jae rex.WRX fdivr ud1 jo (bad) pop test mull loope (bad) jns sarl xchg sbb adc out mov add xor scas rex.WB icebp rex.WX fwait lock cmp sub fdivr je mov test add pop insb sti sub rclb pop pushq int xchg rex.WXB add mov xor mov in lock sbb mov movslq in fsubrs jge (bad) jmp int3 (bad) test mov fist pop sub (bad) mov cs cmp mov scas sbb sbb adc jbe (bad) andb movsl cmpsl imul rclb out in adc pop pushfq mov ja adc adc retq xor mov outsb in movsb ja insl callq sahf loop es movslq and (bad) rex.W fwait mov add pop rex.B pushq (bad) xor adc jnp rex.WXB imul test xor sbb shl rex or movsb cmpsl out rex.WRX (bad) adc loopne add push in adc push icebp cwtl fistpl or xor jg jns sti fs mov rex.R fcom mov movb std add (bad) stc lret jbe (bad) enterq lock nop movabs mov sti and cs movl lahf (bad) mov add orl push pushfq loopne adc retq jmp (bad) sbb pop stos movsl xchg (bad) gs add adc push test in mov mov cmpsl stos jb cmp ficomp push outsb jmp pop imul cltd outsl out jbe sti (bad) and in callq sbbl (bad) (bad) (bad) rcl push scas icebp (bad) mov rcll push out add test mov pop out iret rex.R pushq stos push (bad) fst test sar mov xchg push cmp int3 mov sbb rex.R (bad) fwait push and (bad) (bad) idivb mov fldenv (bad) (bad) shrl add pushq cmp movabs xor (bad) rex.WB xchg shrl iret (bad) mov (bad) lock mov adc loopne callq xor pop jb xchg push (bad) sti lock gs fcoml or pop xor fdivrs adc (bad) and addr32 (bad) (bad) cmp sbb add (bad) (bad) enterq lahf out movabs or roll pop pushq insb adc push push mov lock ss sub jl shlb add fnstsw cmpl xor xchg repnz sub cmp repnz cmp (bad) cmc push or sub out xchg movabs xor (bad) (bad) rex.WRXB movslq std add in shrl (bad) rex.WR jl sub out lock push rex.B scas or fmul lods adc test mov lea sub (bad) cmp xchg push (bad) or iret je sbb sbb xor (bad) push add (bad) cmp fildl imul xchg fcompl roll movsl (bad) add movabs xor imul (bad) sbbl leaveq (bad) pushfq (bad) (bad) mov or or add out jp test push int3 rex.WRX mov sub imul rex.X (bad) rex.WRX and ficom pop loope sub (bad) or imul rcl adc sbb mov add (bad) movsl callq imul sub test pop (bad) (bad) add adc mov jle js xchg (bad) pop mov std cltd icebp push callq mov adc rex.RX mov ds mov callq pop imul (bad) je data16 (bad) jg (bad) fsub jno xchg repz xchg xchg rcll xor scas in (bad) int3 xor (bad) movabs (bad) repnz mov js (bad) (bad) (bad) pop sbb rclb (bad) cmp fsubrs (bad) adc mov loop imul movb test in pop xchg loopne sbb cvtdq2ps fstpt popfq lcall xchg clc lret stc cmp cmp nop lahf andb js mov cld adc lahf scas cltd cmc and popfq in (bad) cmp xchg mov insb (bad) (bad) (bad) shlb adc movslq push push pop (bad) and add addb gs xor je adcl (bad) rolb out mov repz (bad) imul rex.RB fwait ja repnz lods int3 iret cli (bad) int3 (bad) push and je xchg cmc rex.B jne hlt mov rol mov sbb (bad) mov repz mov (bad) (bad) rolb lahf (bad) fist xor callq movslq mov (bad) or fmuls shl mov out rcr data16 stos adc fidivr and or (bad) xchg iret shrb fstpl (bad) xor icebp imul and je in sarl retq adc std rex.XB xor insl mov in adc test (bad) adc xchg sarl sbb in movabs repz out rex.RX fwait adc out (bad) cmc push add insl push jno (bad) (bad) (bad) adc rcrq (bad) retq cwtl sub mov shll mov pop sti adc (bad) lods in lock rex.W mov xor test mov rcrb sub (bad) fistp cmp orl push clc (bad) jnp add jmpq mov adc scas (bad) adc lea (bad) int (bad) mov sbb sbb push (bad) movsl rex.WB mov (bad) xor mov pop (bad) in mov jl and adc xchg lahf imul lock rdtsc adc movabs mov fimull scas mov adc fiadd xor (bad) rex.WR cmp jae (bad) (bad) out fisubl add (bad) jbe jno in xchg xor (bad) (bad) cmp sbb push mov mov adc mov jns adc lock or add movabs xchg idivb sahf mov icebp hlt adc adc cmc adc sbbl xchg adc add mov (bad) or (bad) rex.WRB or rex.RB insb cmp test mov jo ss (bad) xchg jns pushfq sub mov in sbb adc rex.B rex.X cmpsb fcomps xchg negl adc and push (bad) adc fidivrl pushq xor mov sbb pop (bad) (bad) (bad) lods (bad) movabs mov xchg pop scas int (bad) ja rex.RB rex.WRXB (bad) cmpsl pushfq cli or push push jrcxz retq push cmp sbbl xchg xchg add movabs xorl rex.WRX rex.WR mov leaveq cs (bad) insb xchg rex.B cmpsb roll jbe cmp (bad) repnz lock pop idivl push xchg lock std mov pop lods repnz rex.WRXB pushfq rex.B (bad) jbe or rclb mov pop movsb scas or mov rex (bad) outsb (bad) adc or icebp popfq rex.XB lret mov pop in xchg (bad) mov jb stos movsb xor (bad) (bad) gs fstpt jl repnz (bad) cltd jg (bad) or pushfq (bad) movabs jae xor push add gs (bad) pop adc insb (bad) mov js int3 test rex.XB retq (bad) pop icebp add (bad) pushq adcl loopne loop (bad) mov jns xorl cli or or in xchg stc (bad) out (bad) rex.WRXB cs pop mov addr32 mov mov and rex.B movsl pop sar xor fs rex.WRB (bad) retq test xlat xor clc cs (bad) (bad) or xlat push jns jl lahf cs fwait pop (bad) or iret in movabs popfq (bad) (bad) movsb rex or mov pop vunpcklpd cmp push rex.WRX rex.RX xlat ss jle callq xor cmp sbb cmp es (bad) xchg sub gs adc push sbb rex.WRB fistpl cmpb mulb pushq std (bad) (bad) (bad) xor xor and mov push stc mov mov bt int3 mov rex.WRX int add adc xor mov retq out jrcxz fs cmp add movsl rex.R sub jl adc in lods mov lahf (bad) movsl fnop movabs mov int3 fstpt es adc or adc retq adc xor pop push sbb retq push rex.B pop rex.WX xchg mov idivl add rex.W or rex.XB cmpsb push es adc mov rex.WRXB ss pushfq ds jg adc std movsl gs sbb xor (bad) mov adc ja stos fnsetpm(287 adc movabs adc js and jmp hlt push pushq or divb (bad) vunpcklps mov adc sub outsb xchg or pop movsl fwait rex.RXB (bad) lahf add rex.RXB out adc xor push or or xchg negb mov sub adc vunpckhps leaveq mov (bad) clc and lea xor nop (bad) (bad) int stc rex.X rex.WB cmp callq shrb mov (bad) shrl lods mov xchg adcl movabs push sbb adc cmp mov or xchg add lods incl xorb int xchg mov fwait cmp rex.WRB and insl divb (bad) jg rex.WRXB xchg std sti (bad) mov cld (bad) repnz in sbb pop fwait push mov (bad) pop adc mov sub adc callq mov retq (bad) (bad) int and cli jnp sbb (bad) (bad) addl test pop adc (bad) jne cmpb rex.X (bad) leaveq (bad) add sti lods cmp mov imul xchg pop (bad) push xchg mov rcr xchg (bad) add (bad) (bad) jmp push out (bad) xchg (bad) insl movabs (bad) jb mov or lret outsb loope rex.RX jnp int enterq idivl shl rex.W xchg stc flds pop (bad) push ja add add jno je mov and mov movsb gs out outsl clc movslq add add lock adc je xor fsubrl lock (bad) adc jnp mov cmp pushq gs pop and mov stc paddw in jno sbb jne clc push shl imul out rex.RXB mov jl jae ss mov sub adc lahf ds adc xchg shlb adc pop mov clc jb rex.WRXB out mov repz adc (bad) sti (bad) xchg or movsb nop mov mov push xchg scas adc (bad) leaveq repnz in jmp cmpsb (bad) rex.W (bad) add stos sbb rex.B adc jnp jno pop xor jmp push xor ss js (bad) xlat push (bad) fwait cmp adc (bad) adc mov lock and out cmp (bad) lock pop (bad) push ltr jmpq or out repnz pop mov lods sub mov jge push hlt adc ss test shlb rex.WR je pop retq mov (bad) lock loope in and and (bad) sbbb cltd enterq fistpl rorb xchg jrcxz rex.W (bad) push hlt clc mov mov cmp adc (bad) jae ss adcl je (bad) rex.WRXB ffree out mov outsl cmp push movabs int3 lods pop pushq mov stos (bad) pop xor (bad) je or adc callq rex.X cmp and cmc rex.WR pushq retq xchg loopne enterq (bad) js iret mov fucomp (bad) iret ss sbb sub (bad) (bad) and push or xchg fsts sub jp and mov rex.WRXB mov (bad) in sbbl mov xor std and callq (bad) and lock pop rex.RX sub test sub rex.RXB (bad) incb ss scas or shrl jl cli out fdivs xchg push xchg je callq fwait (bad) xor mov lahf adc movl adc jle retq and (bad) cli xchg fdivrl enterq xor jbe rex.XB movabs sbb addr32 clc and imul rex.R xchg adc rex.WB sbb (bad) fsts sub js cwtl std cmpsl popfq sti (bad) out rex.W mov mov xchg cltd rex.XB push fdivrl sahf sbb rex.WXB clc mov adc add xor pushq in push stos movsb mov push or cwtl pop and adc jae xor rex.WRX in (bad) mov push (bad) sbb sub testb mov sti cltd add (bad) pop rex.WRB insl in rex.X push add in or add rex.W rex.RX js movl add cltd mov push fcoms pop jl not jmpq fiadd imul mov in add unpckhps incl js movabs push adc sub mov add (bad) mov or cmp xchg mov shrl (bad) out scas xor fmull mov (bad) cmpsb rex.R jo or jrcxz fwait (bad) pushq sbb out (bad) lea imul (bad) or iret (bad) (bad) mov incl xor cmp rex.RX repz mov enterq pop lock movb mov rex.X xchg ja enterq push or rex.WB add (bad) add in cmp hlt rex.RX callq xlat rex.X xchg int retq cmp rex.WRX mov or push cmp fwait mov or and in stc cwtl stos mov sbb lret fsubs (bad) rex.RB repnz (bad) sub or add xrelease insb xlat cmp in jbe pop xchg sbb rex.RXB (bad) jno and xor (bad) rex.B push adc (bad) rex.XB cltd (bad) push notb xchg movabs cs andb and lock test fistl fwait (bad) pushq mov rex.RXB push (bad) movabs and callq and mov clc cltd popfq or push clc (bad) jne or sbb sbb sarb (bad) iret cs lods jge pop xchg pop (bad) data16 pshufw outsb mov sbb enterq (bad) fild or sarb (bad) sbb (bad) cmp push or and idivl imul xchg sar add adc xor je fmul loop nop jmpq mov xchg (bad) data16 mov std stos (bad) pop rex.RXB xchg sti cmp pop mov add adc xor (bad) fisttp adc movabs jno adc add adc icebp jbe jp fcoms jl (bad) mov pop lahf sbb loope rex.WXB sbb out xor cltd cmp (bad) repz std fwait jrcxz fistl es ficomp (bad) lods loope scas push sbb add stos cltd mov (bad) stos and enterq xchg decl push sbb pop (bad) retq lods (bad) push pop (bad) or rex.RXB (bad) out sub cld (bad) adc frstpm(287 cmc adc leaveq rex.WXB cmp and popfq (bad) jbe xor pmulhw or fwait cmc es imul js adc fmull leaveq fldenv or rex.RXB or pop in (bad) hlt stos cwtl xchg callq jnp leaveq add cmp repz subb rex.X hlt push cmpsl (bad) mov jo (bad) lock xor ss sub mov (bad) jb or imul pushq imul xor jno imul xchg (bad) mov ss adc (bad) mov in and add cmpsl stos sbb rolb enterq ds rex.XB rex.R sub rex.WB int3 fbstp sbb mov mov rex.WB rex.X (bad) xor adc insl push scas push rex.W adc movabs outsl (bad) xor repz test mov (bad) cmp push sbb xchg adc adc add lods scas adc fisub jb (bad) push sbb fs retq rex.W rex.WRX or test movabs sti (bad) (bad) (bad) cmc push xor fucomi ss fildl or mov xchg cltd cmp outsb (bad) cmp adc cmc mov ficom xchg lock testb adc movsl (bad) adc test outsb rex.WRXB pop sub xchg (bad) (bad) (bad) add movabs and rex.X cltd pop gs mov sti jp pop mov push push (bad) adc rex.WRB (bad) clc push test fbld jmpq leaveq test rex.WRXB fisubrl pop push xchg push (bad) mov adc in pop fild addr32 push js adc in je popfq mov test hlt (bad) cld (bad) gs test movabs rex.R outsb mov mov cmp iret and rex.RX cltd (bad) mov rex.WB fnop jne jge js or movabs movsb (bad) (bad) mov lret test xchg xor adc cmp rex.X xchg mov (bad) mov mov mov jno rex.RB js push stc scas scas pop insb rex.WX fisubr mov (bad) mov xor repnz lea je add lock mov (bad) mov jmpq cmpsb out lea jl,pn (bad) jns mov add adc or xor (bad) gs add sub xchg (bad) jno push cmpsl je rex.WB (bad) cltd js lahf xor test loopne adc rex.RX pop out test xchg or data16 callq enterq mov lods xchg or test mov sbb jl jmp int3 add and insb cltd mov movabs or jae mov push jbe popfq js mov push lock lahf and (bad) decl (bad) out xchg insb ja jmp xor mov callq or rex.WRX rex.WB insl movsb nop roll adc enterq xor lock push fdivrs insb scas xor pop (bad) mov fcoms jmpq jp icebp add enterq xchg xchg or mov push xchg cmc rex.WXB popfq rex.WB add retq xchg and in mov xor jmpq xchg jp (bad) adc add (bad) lock add or stos mov fcomip push xor clc mov movslq (bad) fdivrl cmp (bad) in sti (bad) fwait rex.WX lret sarb add xchg insb cmc leaveq popfq retq jmp xchg push outsl rex.WX (bad) adc add stos rex.X rex.RXB sub insl callq xchg movslq out rcrl or and (bad) retq (bad) adc callq add and (bad) jne push jmp sbb shlb (bad) ja jrcxz rex.WR rorb (bad) sub cltd adcl rex test lret push pop mov loopne sbbb mov (bad) xchg fs rex adc pop sub xor (bad) psubusb push mov loope leaveq loopne xlat std (bad) rex.WRXB std js or (bad) adc and or sub callq mov (bad) or (bad) (bad) mov outsb std rex.WRXB mov push sbb rex.WXB fwait jne adc and push jmpq add addb or push cmc mov cmpb movabs sahf mov add (bad) and push mov mov ficompl sub jno (bad) js adc test test sbb out enterq or lock or jg and mov or pushfq (bad) or in stos stos sbb cmp sarl fstpt scas clc out repz movabs stos or cmp movabs jnp xchg repz mov or (bad) sbb add movslq rex.XB cmp gs rex.WX mov and xchg xor cli fnstcw fsubrl xor xor (bad) clc insl in adc xchg (bad) (bad) (bad) adc (bad) mov cs negb mov jno pop (bad) mov sbb test adc rcrb lock sub ficoml cmp (bad) adc js pop cmp mulb add mov (bad) mov (bad) mov cmp rex.WRXB (bad) js push rex.X es add and add js jle cli adc adc mov cmp rex.WR mov (bad) adc adc mov pop adc out fstps movsl cmp js rex.RB xchg add repz loopne scas jle pop in push mov test push rex.WRB jmp adc cld and xor add and pushq and pushfq or push lock rex.RX and loopne push jns pop fsubs push jge mov rex.WXB (bad) movabs (bad) rex.WRX ss out rex loop mov (bad) xchg mov (bad) sbb sbb adc and fsubl adc jne sub xor rex.WRX ss (bad) xchg (bad) scas push je (bad) (bad) (bad) movsb xor ficompl in xchg callq xor xor pop (bad) add or movsb sub bnd cmp adc xchg rex.RXB movabs and rex.WX movabs xor mov repz rex.WRXB rex.WRB and out mov jo mov (bad) sub lods (bad) xchg lock fcoml rex.WX rex.WRB cmp (bad) add push mov (bad) mov ja movabs mov (bad) jg mov (bad) adc mov push idivl insl std adc in negb pushq punpcklbw imul fdivrs push adc subl rex.X js ss mov (bad) adc mov (bad) out xchg adc std stos fiadd xchg (bad) fsts pushfq movsl sub (bad) adc fsubs sbb clc xor and xchg hlt fs rex.RB mov sahf icebp adc sbb int3 mov mov cld pop pushfq cmpl jg add adc jge (bad) mov popfq (bad) jle adc (bad) addr32 sub and rex.WR icebp add int3 rex.WRX clc lret (bad) xor (bad) cwtl fsubrl (bad) in or adc and sbb adc push sub pop movsb rclb (bad) mov pushq xchg cmp pop jl add clc outsb insl xchg xchg xchg and adc sbb cmp fbstp xor adc xchg loopne adcl out mov jne fs scas adc add adc rex.XB mov or test (bad) push add (bad) mov andl sbb retq insl or mov fs cwtl insb adc imul pushfq test mov nop lods rex.WRB stos out addr32 loope adc lret rex.WR push adc adc fildll mov imul js jmpq (bad) xchg mov xchg pushq adc sbb or movsb pop cmp xchg or jae outsb (bad) pop fs loop or std movslq (bad) push push not (bad) or leaveq pushq (bad) (bad) test sbb jg jb (bad) ficomp rex.W callq add pop lret in (bad) adc (bad) pop add imul out out ja sbb int adc jbe and (bad) insl decb shrl and rorb gs mov ror clc pop (bad) (bad) rex.WRB sub (bad) jrcxz rex.X ja scas andl mov data16 imul and mov cmpl loop add mov rex.WRB ja scas jno xlat and cmp (bad) xor and repnz adc loopne jge outsl add sub (bad) (bad) shrl rex.WX mov add sti fcomi fcoms insb iret shrl (bad) addr32 fwait rex.RX adc xorb jrcxz movabs xchg (bad) int3 (bad) callq (bad) cs repnz (bad) lea push xchg sbb std add je (bad) mov rex.WX adc or xor (bad) mov test pop push mov pop je (bad) sbb lock add (bad) (bad) xchg or pop es xchg hlt pop xorb (bad) (bad) pushfq movabs mov pop jbe,pn lea mov rex.WRB es push (bad) xchg pop icebp test cmc cwtl adc fstpt out scas add sub and jle pushq mov pushq mov leaveq xor (bad) (bad) sub adc (bad) mov add mov pop add outsb (bad) fwait cwtl loopne hlt sub (bad) mov stc sbb sub rex.WR out rcrl cmp mov pop imul mov xor lret rex.RX rex.WX pop shlb adc mull xor (bad) pop idivb (bad) int3 lods cmp decb (bad) rex.W scas jno stos stos rorb fcmovnbe (bad) repnz jmp je lea mov mov rex.WR jmp lea (bad) fmull push (bad) mov rcll rex.WB repz mov icebp repnz sbb lods jmp testb hlt gs jbe add jbe jmpq cmp rcrb fwait pop xchg (bad) (bad) fcomp rex.RXB movabs fwait hlt pushq xchg sbb (bad) rorl rcl adc insb test (bad) push je retq (bad) in mov sbb jle pushq rex.XB sarb or jns mov insl data16 int (bad) retq js push mov (bad) movabs std (bad) sbb cmp sbb outsl rex.WRB add rex.WRXB cmp (bad) lock repnz (bad) jg sub add lea push push (bad) (bad) out icebp addr32 or mov (bad) and (bad) or mov mov mov rex.RX out (bad) xor (bad) es (bad) lea add cmp sbb mov out jae cmpsl movabs int int3 ficompl adc fsubrl rex.WRB movabs orl lods fcomi shrl cli add callq mov adc (bad) adcl pop sbb mov repnz and rol cmp iret mov (bad) fsubs mov xchg insl push xchg (bad) xchg cmpsb test mov push out movabs add mov fwait mov (bad) xor sbb mov rex.WR (bad) (bad) rex.WX (bad) pushfq andb adc fwait pop pop movabs (bad) (bad) adc adc outsl mov sbb pop addr32 cmp or lock sub jbe js out jmpq movsb in (bad) pushq adc mov mov rex.WRX fsubs pushq pop ds or sub jmpq or leaveq (bad) fcompl sahf mov nop rex.W jrcxz (bad) sbb mov cmp (bad) jbe or mov xor pop imul cmp xchg xchg fdiv mov sub repz (bad) add (bad) sti sbb cltd push pop (bad) clc cmp add rex.RB rex.R mov testl adc scas sbb and in or mov imul fxtract mov push rex push and pop fcmovu add movabs push xor jle fstpl jne xchg movslq sbb rex.WRB xor or adc xor mov rex.WB or rex.WRXB adc ja leaveq cmpsl sub push outsb sub sub add enterq sub adc (bad) push callq (bad) lods fwait enterq stos xor outsb (bad) (bad) (bad) cmc sbb icebp add (bad) or adc xchg fstps mov (bad) xor (bad) rex.W jp xlat popfq in add cli cwtl xchg andl lahf xchg fmull movabs mov jnp ds jne clc sub rex.X adc test jl out pushq (bad) mov rex.X rex.WRB (bad) adc add mov mov fsubrs lock or mov (bad) in fmull or movsb cmpsl repz shl (bad) xor (bad) push push adc setae mov outsb rex.WXB xor rex.B (bad) (bad) (bad) mov rex.X adc pop fmul leaveq xchg (bad) mov sahf pop rcll insl out scas pop (bad) fucomip lods (bad) jl (bad) ficom sub (bad) divl insl mov sub (bad) callq cmp push (bad) in (bad) ds jns callq orl sub jns sub nop pop out or repnz test cmp loope mov mov add or in mov xor mov (bad) mov pop nop popfq jo add and pushq outsb mov out push xorb adc add adc mov fldcw (bad) cmp rex.X (bad) (bad) xor mov mov retq (bad) xor lock mov ja jo icebp adc rex.XB (bad) cld push movabs callq xchg (bad) mov repz enterq pop enterq rex.R jno (bad) sub loop insl out mov mov xchg in mov rex.X movabs jp (bad) (bad) jrcxz sarl cltd hlt fyl2xp1 cmp and outsb movabs cmpsb rex.B rex.WRB pop rex.WB mov pop subl add cmp mov loopne mov or mov pop lods sbb push repnz (bad) (bad) movabs cmp add sub fstp and stc rorb mov repz xchg cmp retq movl sbb xchg sub movabs add adc sbb adc sbb or movabs jmpq add ja int3 jrcxz hlt add xchg add test in (bad) xchg (bad) rex.WB rex.RX int3 test sti mov (bad) and pop loop mov adc in mov fst insb (bad) xor pop loopne mov movabs add add popfq sahf sti rcr rex.WRX xchg enterq (bad) and (bad) retq (bad) (bad) fsubr repnz xchg rex.RB cmpsl stc jo ja lock (bad) jno mov movabs or mov jg jrcxz add rcll test js (bad) iret fisub notb jmpq scas ss sub lock xchg rex.WXB mov (bad) xchg or (bad) loope jrcxz movsb cmp adc (bad) test stos pop and mov adc (bad) mov (bad) rex.XB rex.WRXB popfq sbb in jae int adc leaveq test push (bad) (bad) callq (bad) sbb adc jg and (bad) (bad) sarl (bad) insb clc cmp rex.XB lret adc movsl sub adc jge out int3 jno leaveq jmp jg insl push and seta cmp push xor sahf je bnd xchg rex.XB pop sahf (bad) hlt lea adc mov xlat pop jne mov adc jb or pop push rex.WR ror rex.WRXB cmp (bad) jo (bad) std jg mov movabs push rex.XB cmc (bad) (bad) (bad) nop rex.RX or clc xor mov mov gs jbe add rol adc cmp adc ds (bad) outsl (bad) xchg fwait minps callq adc (bad) xchg mov fdivrs movabs cmp pop pop loope (bad) sbb (bad) rex.B cmp je rex.X flds adc push rex.RXB or (bad) jne or test (bad) xchg mov in addr32 xor popfq lahf jmp cvttps2pi fdivrs mov fcoms insb (bad) xchg stc and or sbb push cmc sub xor sbb retq addr32 adc or callq addl (bad) es jle mov sti (bad) xor callq xor add rclb (bad) movabs stos mov and mov fistp je loop rex or es xorl rex.RB push xorb imul fdivrl xchg popfq pop (bad) jrcxz sbb fwait movslq jp cmp xorb sbbb lock mov rex.RXB (bad) je cbtw xchg lret lods mov xchg pop fldt or movabs nop or rex.W fbstp rex.X push jae (bad) rex.WRX test mov sub (bad) push pop jle rclb mov (bad) (bad) mov int3 cmpsb (bad) lahf rcr pushq (bad) jno outsl retq (bad) sbb int3 mov ds sbb jmpq pop sub and sbb jb cmp mov (bad) std sbb int in and rex.WRB xor (bad) jg int3 fdivr int3 sub xor in (bad) sbb and pop pushfq mov callq stc (bad) iret std shlb int gs cltd mov pop push sub roll (bad) jmpq retq pop (bad) cmp (bad) xor rex.X repz jp and cmpsl mov pop out scas lahf pop mov lahf jnp insb test xchg loope mov callq (bad) cmovno mov mov add jmp or out sbb jb nop xlat mov (bad) pop fcoms cmp add (bad) test cmp push pop rcl test rex.B sub movsl or (bad) jno (bad) (bad) xchg out xchg rex.RXB vcvtdq2pd fsubrl cltd xchg shlb add insl (bad) cld sub (bad) xor mov test gs or jge callq lret pushfq and jp (bad) sbb sub je or add jb and (bad) incl jge (bad) retq sti int3 or mov lods lea xchg es retq out adc adc xor cmp out jrcxz es test clc push in rex.WRB fwait jrcxz push icebp (bad) mov (bad) adc mov adc vmovaps mov and add sbb and cmpsl enterq jp (bad) sarl test mov or leaveq sbb stos jmpq xchg scas cmp (bad) adc cld jns lea cmpsl rex.WRXB sahf stos (bad) imul adc jne rex fistl (bad) test cmpsb decl cs imul pushq add rex.WR stc adc fwait jl lahf int3 scas jno movabs sbb hlt insb sub add in and adc fnstsw pop test cmp shrb repz pop push popfq shl or fwait (bad) (bad) cld mov movabs pushq lock mulb jns cmp (bad) jno enterq rex.W (bad) and gs or cmp (bad) and cmp leaveq (bad) rex.WR sbb incb movabs adc movsl imul rex.X mov adc pshufw rex.WRB jmp (bad) xorl (bad) sub outsb fistpl jmpq mov mov repz xchg (bad) jb (bad) push loope sub xor (bad) rex.WRX add lods mov cli popfq adc callq retq lret mov mov and retq (bad) outsl sub ds es mov jp jl loope adcb rex.WRX sbb push cwtl (bad) mov lock jle fbld in add add test or (bad) jno mov stos (bad) mov mov xor and pop mov rex.B push or adc out lahf and (bad) stos (bad) add or loopne mov pushq pop cmp (bad) jno mov push jge lahf lcall retq hlt imul adc jle enterq sbb adcl and push movabs (bad) add imul push femms sbb cmp (bad) (bad) rex.X addr32 movsb js rcr insb (bad) fnstsw std (bad) (bad) popfq retq decb mov (bad) incl pop mov retq rex.X pop pop scas movabs jnp and loope data16 lock rcll retq mov xor sub int3 retq cmp fidiv or (bad) cmp or test cmp (bad) (bad) adc fistp iret int (bad) (bad) jle stos pop sub movabs pop rex.RX adc sbb jmp mov or popfq cmpsl or sarl xlat jmpq sbb push push retq and cmpsl xchg mov repz int3 mov (bad) cmp lret push cmp sub (bad) cmc add xchg mov fldenv mov callq or xchg rcl xor in or sahf adc xchg xor stos rex.WR adc fcomps insl xchg adc test adc adc rolb sub cld callq adc icebp int3 (bad) sub (bad) rcll (bad) mov int mov rex.WRXB lahf scas (bad) jbe sub pop pushfq add jae stc sti out (bad) pop (bad) xor jo mov adc mov and (bad) fisubrl movabs mov push adc add cld rex.WRXB inc clc rex.RB repnz push (bad) jo sti stos jnp jns js and sbb jmp cmp (bad) fistpll test insl and or int3 push psraw xor adc xchg xlat (bad) rex.B or jb xchg fistpl adc notb and cmc push mov loop loopne fs xor rex.WRXB rex.WRB lahf mov sbb mov pushq scas outsl shlb push rex.WXB fdivrl (bad) rclb pop icebp insl cmp pushfq nop icebp (bad) or stc retq xchg adc xor dec adc lods pushfq mov mov jle (bad) cmpsb adc or adc sub cmc (bad) cmpsl mov xchg or pop sbb cmpsb xchg repz cltd loopne test adc je rex.WXB (bad) int3 jno or sub callq add rex.WRB (bad) (bad) jnp test (bad) (bad) xchg (bad) jo (bad) mov int3 int3 xor repz pop (bad) rex.WRXB fs lret sbb and jo push sbb (bad) mov xchg rex.B rex.RX rcl xchg fild fisttp and xor xchg movabs fdivrl xor cmp pop out out rorb sub (bad) sarq or mov lods mov lea (bad) push xchg rex.RB mov leaveq retq mov sub sub mov loope cmp push xlat jno add jmpq jmp movabs cwtl (bad) pushq (bad) sbb cmpsl outsb push (bad) addr32 cmp jbe add rex.WRB fisubrl push js jno rex.WB lea push (bad) mov nop rex.WRXB (bad) and fcom xchg (bad) cmp lahf mov fs sub lock or in retq mov fcom fnop in movslq test (bad) and loope negb xor sbb icebp sub popfq mov sub and mov imul scas icebp int sub fildll jo fisubr cltd outsb lret mov retq cwtl out pop (bad) adc or xchg retq xor add pushfq add out nop test xchg rex mov outsb out test mov or popfq stos repz testl pop or movsb xchg pop (bad) stos or add pop pushq mov mulb mov (bad) sbb sub cs gs (bad) fistl lods cmp (bad) xor (bad) imul mov pop xchg xchg cmpsl clc sub cmp (bad) adc pop jno (bad) (bad) mov adc movsl stos imul cmp mov pop callq sbb in popfq and movabs hlt push sub rex.RX xchg xor pop cmp lods out sub (bad) outsl scas jp add (bad) pop (bad) xor rex.WR fwait or (bad) nop repnz (bad) sbb sti fcomps rex.RB pop (bad) sbb jae leaveq adc cmp rex.WX push (bad) enterq cs (bad) xchg (bad) xchg mov mov or jrcxz rex.B adc out xchg xor (bad) xchg test (bad) test setne ss jae callq and rex.X pop in cmc mov enterq hlt xchg pop (bad) or (bad) stc jne rex.RX mov sbb mov insb rex.WRX or outsl (bad) xchg std and xchg adc retq es sbb (bad) subb repz adc (bad) movsl push int3 lods mov adc add movabs clc pushq (bad) mov xchg and xor mov jl or (bad) cmp pop and cmp adc movabs icebp cwtl stc xchg (bad) (bad) test pushfq in jbe lock (bad) add push lcall and jle and mov ds (bad) mov fimul push andl xor lea add (bad) add fs or pushq fdivrl mov ror fdivrl (bad) (bad) rex.WRX loopne sarl (bad) (bad) xor xchg idiv (bad) fs or cmp imul adc repnz fdivr push lahf (bad) rex.WRB pop (bad) and push xor fisttpll jmp (bad) movabs movsl push (bad) rex.WX movabs xor push lock cld add rex.RX std lock rex.X loop test retq ss fstp adc sbb xchg adc sub fisub movabs imul fbld outsb xchg mov lods (bad) (bad) je out or ljmp jge sbb xor jb jp mov xor fisttpl and fwait rex (bad) or movabs movsl in lock ss cmovp mov pushfq sbb rex.X rex.B jno lods cs sub jnp (bad) mov and adc sbb shlb rex.WRX pop outsl push sahf add pop and (bad) xchg and mov cld adc movabs xlat rex.WX rex.RXB xor sbb ds cmp jbe adc mov jno jmp imul retq (bad) rex.RXB (bad) (bad) rex.WRX sbb adc loopne pushq xchg cltd and adc out pop cmp leaveq (bad) fcoml or jg sub sub and (bad) adc xor hlt (bad) mov vmread xor movsl imul (bad) fist je mov adc test or (bad) icebp adc cmpsb addr32 rex.R andl (bad) adc jmp paddsw sar sbb xchg cwtl (bad) and add retq or sbb (bad) fistl (bad) movabs mov or sti (bad) and nop adc fbld mov rol mov (bad) je adc sub out (bad) in jo xor adc xchg scas sbb repz sbb or (bad) xchg ja rex.RXB and pop fstps out shr xchg xchg addb sti cmp imul cmc fadds out or (bad) (bad) (bad) hlt out out imul (bad) (bad) nop in mov insb sub std out xchg lock cmp pushq (bad) and add (bad) (bad) (bad) sti pushq sbb push es repnz jb mov cmpsl rex.WR jp add icebp mov xchg jbe pushq (bad) adc mov sub add in cld push (bad) shll (bad) cmp rorl (bad) mov stos cmp in out mov (bad) leaveq mov cli xchg in rex.WRB repnz movslq hlt jb adc mov rex.RX add movsl out jmp (bad) rex or and retq adc pop imul rex.RXB fwait test adc add rex.X fdivrl xor xlat or iret sub mov pop mov mov mov pop push repnz movabs pop xor (bad) orl mov sbb mov insb retq pushq (bad) stos sub imul movl outsl adc cmpsb sub insb movsb roll imul and mov (bad) xchg xchg cmpsb push adc cmpsl cld scas retq adc cmp pushq xchg fs out sub push pop (bad) ss add mov adc std pop and ja outsb push pop (bad) fild or fldcw in add adc repnz cld pop fistpll adc mov rex.WR sub adc mov pop sbb (bad) sub retq clc xorb and adc xchg adc pushfq loopne test int3 rex.WRX and rex.WRB (bad) movabs add sub adc in adc stc cld pop jrcxz xchg pushq lods (bad) adc mov repz int mov test movabs mov cmp lods cmpsb (bad) out xchg insl mov xchg nop ds mull xlat pop rex.WR push movabs pushq mov data16 sbb repnz ficom (bad) rex.WR (bad) xor out (bad) rex.W rex.WB rex.WX nop in sbb sbb xor push push cmp sub push xor jle andl (bad) insl cmp sub or adc xlat sub sub test clc or adc (bad) movabs stos fsubr rex.WRX jne gs mov ss mov jo andl (bad) loop pop rex.R add icebp adc adc cmc fnstsw xchg (bad) movabs adc xor (bad) test icebp adc mov push adc add stos adc mov sbbb add ds enterq xchg fldt pop add fist mov mov adc stos js and lahf lock (bad) retq (bad) mov pop callq movabs cmp (bad) clc js cmp lock ud2 cmp jmpq pop idivb sbb xor (bad) movslq push and sub xchg sbb mov cmp adc push and retq mov ds add (bad) sbb add sbb xor outsl add test movsb jle add sbb (bad) mov cmp pop lea cmp sahf stos xchg (bad) outsl fsubr test sub lret (bad) clc fmul shlb cmp mov jge movabs pop pop imul cltd cld loope insb mov negb xchg add sub or sbb cld shll popq rex.WX adc jno xor jmp (bad) mov rex.WRX mov (bad) mov outsl (bad) movabs stos jrcxz pop cmp cmp adc sub mov or sub fcoms movabs cs rex.RB or mov pop (bad) (bad) rex.XB rex.WRX fwait rclb fnop (bad) pop outsb add orl mov or (bad) addr32 cmp fs out xchg shlb xor mov mov (bad) test push mov push mov pop sahf mov jmpq (bad) mov xchg xor ss lock push rex.WRB adc cmp adc add rex.WRXB ss jo mov scas stos in (bad) mov retq psubb rex rex.WB mov rex.B rex.R adc (bad) (bad) repnz adc sbb fs jmp (bad) outsb adc mov push fwait loop and (bad) mov xchg mov add and addr32 jno (bad) mov scas (bad) outsb (bad) mov sub retq (bad) test (bad) or ja push jmpq adc (bad) stc rex.RXB fs (bad) and rex.WXB repz mov jmp jae in add pushq mov fcomip jge jmp sub loopne imul jne jne push pushfq jrcxz ss enterq data16 (bad) mov (bad) (bad) (bad) (bad) rcr loope sarb (bad) out rep shr in mov fdivl xor fistl fucomp stos div test imul pop stos (bad) shr int3 (bad) sub rex.R fadd std loop clc (bad) fadds out imul add xlat cmpsb (bad) or rex.WX xchg push (bad) movabs rex.RX pushfq loope ficompl xor (bad) sbb movabs movabs mov jl stc rex.WRX sub cmp jb nop cli movnti or retq sub push out (bad) and cmp push rcrl jne pop (bad) test lods or pop pushfq jg push adc xlat scas cld adcl clc fucomip fwait mov adc rcll mov clc (bad) imul js sarb (bad) enterq adc mov movsb xor pop add lret push (bad) and fsubrs ds mov xlat kaddb addl (bad) mov popfq fisub movabs (bad) pop adc (bad) js mov rex.WXB sbb mov sti xchg stc xchg pop push jg adc mov cmp fidivl pushfq (bad) iret xchg or xchg mov fild rex or xor sub adc xchg (bad) lret callq adc pop adc and lods adc (bad) push loope stos mov push pop fistp adc imul xchg mov pop movabs sub cwtl fistpl pushfq add test int3 cmp cmpsl add in mov test int3 repnz pop loopne ror adc (bad) (bad) adc pop (bad) adc adc lret pushq cmpsl and add mov mov adc shrb imul or (bad) cltd xor xchg push jb (bad) loopne scas and add mov (bad) mov jmp mov pop (bad) cmp mov pop xchg rex.W movabs imul or jne adc cwtl clc mov mov es fsubr icebp stos rex.WRXB rex.RB cmp lods sbb rex.B push (bad) (bad) adc mov xadd int3 in cmp cli (bad) rex.WB rex.WRB in pop movsl fwait mov push push mov fs xlat cmp retq xlat rex.RX push and pop adc add cmp iret pop xor xchg xchg jrcxz pop movsl push rex.X movslq rex.RXB sbb add out outsb fstp and vmovsldup rex.X add (bad) lahf sti orl retq mov callq sbb iret sbb mov (bad) in imul jmpq or iret hlt cmpsb int callq (bad) cmc sbb clc add cli adc and add mov movabs lock push xor jne imul xchg cli (bad) xchg stc xor adc (bad) (bad) mov (bad) (bad) lock (bad) (bad) adc mov clc cmp mov adc pushq enterq (bad) adc add add mov push rex.RXB ds in jno adc scas or pop stc xlat lock mov sbb test and push cmpsb fs adc rex.WRB sbb adc (bad) and adc cmpsl rex.XB movslq jbe fcom (bad) mov adc cltd jl fnop cld test insb or (bad) (bad) retq xor xlat adc (bad) movabs xchg jp rex.R rex lock (bad) (bad) mov std push (bad) or adc mov pop data16 adc pop rex.RX jmpq mov jmpq (bad) popfq int3 lock ss or retq (bad) fwait jno (bad) mov test jle adc (bad) mov (bad) int3 test cmp sbb push jl xchg cmpsb (bad) scas adc adcl rex.W sub movabs rex.WRB out cmp jge (bad) or fiaddl cmp rex.WX xchg retq sbb popq icebp lret in enterq rex.R or adc je imul sarl (bad) rcrb std shlb jns enterq pop movsl fdivp iret shlb jb (bad) pushq cmp or leaveq (bad) fsubl frstor adc mov push int mov loope sbb imul roll sbb (bad) add scas fisub data16 mov (bad) and insb test repnz lea jne lock push or rex.R iret pop (bad) rex.WRB out scas lock (bad) ss and fildll and (bad) jg rcr repz mov pop pop adc adc mov jle stos std callq jrcxz clc (bad) sbb fimull fidivr (bad) mov mov mov lahf xchg xor fisub (bad) lahf jl sub mov sub mov push mov (bad) jge cmpsl sbb jmp pop movabs and mov push int test test pop push xchg rex.WXB cmc sbb push push ds rex.RX (bad) mov pop pop (bad) sti cs int3 adc pushq xor enterq (bad) pop mov xchg (bad) adc cmpsb mov adc add adc (bad) rex (bad) loop mov mov jge movabs xchg push or sub movslq movsb (bad) (bad) (bad) xorb jl xor repz imul callq jns sbb xchg icebp and rex.RXB fwait mov nop movabs (bad) add lods loop repz mov addb scas mov (bad) std mov (bad) je sarl (bad) jno jb cmp pop xchg jmpq fcmovne (bad) xor repz xchg add clc rex.WRB mov mov pop sbb mov stos adc (bad) and psubq jrcxz scas addr32 cmpsl cwtl xlat (bad) add imul add jns sub (bad) rex.WRX or out cmp movabs (bad) mov adc push rex.RXB icebp sub adc mov sbb (bad) cwtl repnz or add jnp (bad) movabs mov cmp adc jg int fistpll (bad) bnd movabs decb (bad) xor mov int3 sub (bad) fisubl movabs (bad) cld int xchg xor out or mov outsl (bad) mov nop rex.B mov movsb jns ffree pop (bad) (bad) jrcxz rex.WRX cltd repnz test pop push lods lock push icebp or out jae movabs mov repnz (bad) (bad) jg out (bad) lock adc jp jrcxz adc in popq je (bad) sub scas jnp ds jle pop stos xchg mov sub jnp adc sbb test mov clc es jl jge stc push xchg adc movabs movabs and lods (bad) insb (bad) sub cmpsb hlt xor gs pminsw (bad) adc xor (bad) sbb movabs and movslq and (bad) sub rex.WRB jl std jge js rex.WRXB sub cltd imul bnd mov xlat mov (bad) (bad) and (bad) in add out or (bad) add mov cli adc mov or rex.RB adc mov jns push (bad) sti stc add in cld (bad) stos (bad) (bad) cltd adc std enterq pop jb cmp (bad) pop xchg ficompl callq adc rex.RXB pushq imul test rex.WRB cmc rex.R js or mov adc (bad) scas xor adc rex sahf adc (bad) movabs std cld sub jae cs pop xchg orl pop repnz js mov cli cmp adc nop js (bad) mov iret retq (bad) cmpsb mov sbb mov (bad) je fnstenv iret adc adc (bad) je out sub test movslq rex.RB or lahf sub jnp nop (bad) or sbb fs out hlt pushq stc fwait (bad) retq sbb (bad) pop out pushq in movsl adc setg adc lret xchg xor div adc push sub mov mov jne jno adc jnp jrcxz xchg sbb fildll pushq (bad) and cwtl (bad) callq (bad) mov adc scas mov (bad) jge (bad) jp icebp int3 adc sub jp sub test nop pop rex.X rex.XB rex.RXB pushfq pop (bad) cld icebp mov test rex.RB xchg sub adc orl (bad) xchg lock xor xchg sarl mov push cmp rclb mov mov lock enterq or movabs mov (bad) pop mov js mov sarb popfq mov (bad) mov (bad) icebp rex.WRXB rcll (bad) sti (bad) ds (bad) pushq sub xchg je adc jle rex.RX mov sub rclb cltd pop fsubl (bad) sbb subb insl (bad) add rex.WRXB test retq out iret (bad) adc ss fadd fsubs rex (bad) movabs (bad) (bad) rex.WR or xchg mov cld mov je xor movabs out adc mov fstl xchg mov pop lea sub insl xchg jp iret or rex.WRX push adc test sub rex.RX cli pop cmp adc je cmp adc xor and cmpsb adc leaveq lret mov adcl test mov xchg adc fisubr popfq add leaveq rex.WRB scas mov rex.RX (bad) mov callq (bad) js pushq scas mov or (bad) mov movsb andl push jmpq (bad) movabs rex.RB jp enterq imul (bad) (bad) (bad) push sahf int3 or push iret fstpl addl fsub pcmpgtb sbb push lret mov and (bad) sbb adc and (bad) in mov push sub out lret cwtl test (bad) jrcxz cmpsl pop add pop jge cwtl rex.WX mov js lahf rex.WRB xchg add out rex.WRXB pop int3 icebp jmpq cmp enterq push iret rex.WXB (bad) (bad) movslq xchg mov subl mov lret sahf and sub jmp imul push movabs faddl xchg adc and sub jbe std (bad) adc je sub pop (bad) pop adc mov push ss lods cs (bad) out out adc (bad) movabs jrcxz test in push rex.WRXB mov rex.WX jnp xchg lahf rex punpckhdq std jge sbb mov or fcomps cmp pop pushq mov fisub mov and prefetch or stc push pop cmpsb movabs or lret and (bad) (bad) rclb mov fstpt sbb xchg test sbb (bad) movabs xchg add stc js sub or lret sbb xchg xchg in mov sub adc cmp movabs xor enterq outsb andps (bad) xchg and or adc pop mov cld mov imul rex.B adc (bad) cmp clc xchg sbb pushq (bad) rex.W pop mov cmp cmc frstor repz (bad) sbb callq icebp je pop sahf or test movabs (bad) in ja xchg (bad) mov push sub popfq jmpw int popfq xchg (bad) jmp out cmp rex.X pop adc repz lock movslq stos and mov sbb adc rex.WRB jns sub add vpackuswb cmc and and xor leaveq (bad) sub xchg adc adc frstor movsb (bad) (bad) not add add js (bad) jno mov (bad) push fstp adc cli add rex.WXB rex.X jne (bad) scas (bad) and (bad) pop fsub rex.WXB out sti or (bad) sub jle and (bad) adc cmp in cmp xchg jl loopne rex.B es lods (bad) ja negb fisttpl rex.XB out rex.WRB hlt mov loop sub sbb push je pop rex.WRB cld test sub xor (bad) mov jo jnp lahf pop rex.WRX lock movabs ss xchg (bad) (bad) in (bad) fs outsb xchg movabs add cltd (bad) rex.B hlt mov adc (bad) jmp test xlat (bad) mov pop (bad) (bad) (bad) pop fs (bad) mov adc fcompl jo mov (bad) addr32 mov pushfq in add pop cmp rcrl rex.RXB pop (bad) xchg sub movabs popq jb rex stos pop sahf jae (bad) rex.RXB (bad) lret out rex movsb cltd faddl jmpq sub jge adc jg int3 rex.WB mov mov outsb out xchg pop cmpsb xchg ffree (bad) int3 xchg xchg cmpsb (bad) (bad) cmpsl (bad) jmpq add in (bad) roll shll cmp fucompp sub in pop (bad) mov lock in (bad) (bad) adc (bad) xchg push xor add leaveq sbb sub xchg xchg (bad) adc sub adc xchg (bad) pop loop and (bad) (bad) adc xor ud2 insb lods movabs fwait cli push sbb fadds (bad) push test hlt adc int3 push (bad) adc jnp (bad) mov icebp (bad) pushfq add (bad) enterq outsb (bad) rcll in (bad) mov jno cmp push (bad) adc loop add xor rcrl adc jge add sub mov sbb out rex.WRB divb cmp xchg xchg rclb push (bad) (bad) ror adc xlat and insb adc (bad) (bad) add adc sti cmp scas (bad) and push retq (bad) xchg adc shr sub (bad) insb lock mov rorb push test (bad) rex.WR pop out jns pop and fidivrl fsubr jno rex.WR rcl jmpq jbe pop jmpq hlt movabs mov sub test out and cltd sub retq mov pop andl es pop movabs rex.XB pop jne mov enterq or (bad) stos xor cmp (bad) outsl cwtl (bad) repz cltd fsubs stos and mov mov rex.W pushq jp mov mov sbb rex.RXB out (bad) mov sbb iret jg cs and push mov out cwtl add (bad) in imul sbb (bad) mov mov js pop (bad) rex.WRX (bad) xlat adc cmp add push xor (bad) mov pushq rex.WXB fs (bad) mov jrcxz add cld in sub rorb rex.WR push xchg callq scas mov adc push loope mov sub fadd adc popfq in rex.WRX adc ss mov add add movabs out rex.WRXB or ss push jrcxz mov (bad) ja (bad) (bad) rex.RX clc adc push (bad) in cmp addr32 mov (bad) push or sahf je jmpq fsts (bad) jge jl (bad) cli xchg (bad) (bad) hlt pop xor xor mov rex.WRB repnz lods imul loopne mov lret cmp add pop mov mull rex.WR pop pushq rex.WR rex push or jp rex.WRB (bad) xchg movabs mov out (bad) outsb jg push insb sbb add rex.WRXB (bad) mov cwtl rex.WR rex.XB callq jp cmc adc jne (bad) out mov callq sbb xor mov sar pop rex.XB add sub jno (bad) sub or pop cmp in ds rex.WRX xchg (bad) sbb jo cmc mov xchg clc adc callq (bad) and insb cltd sub sub outsl int mov out mov es movd (bad) out add (bad) std add xchg fistpll mov jb sbb xor xor mov mov out (bad) cmpsl xchg rex.R data16 stos mov mov (bad) xchg scas jnp in adc (bad) mov fistl mov stos (bad) int3 mov jmp ja mov retq stos mov or lea (bad) fwait sbb andl rex.XB (bad) leaveq adc push mov rex.X jne add fsubr cmp sub mov rex.WXB outsb mov (bad) adc retq xchg (bad) cmc negl test mov (bad) fisub xchg push cmp mov jne jg adc fsubs cwtl cmpsb push rex.WRB add (bad) in mov cmp callq sub cmp callq jmp repz (bad) movsl imul fmulp wbinvd mov movabs fiaddl or sbbb test callq pop or jl hlt (bad) xchg jb and or clc pushfq retq int xchg repz xor push (bad) movsl cmp scas pop pop je adc mov adc jmpq fcoms rex cmc cmp jae,pt out add jrcxz jae and mov stc mov jb mov (bad) add rex.WRXB and (bad) movslq mov (bad) jo hlt push jmp enterq loop sub (bad) adc adc add icebp imul jl lock rex.RX sub or cltd pmulhuw pop addl pushq fcoml pop and imul (bad) pop add stos mov push xchg test xchg mov pushq jbe xchg fdivr mov or push in mov xchg pushfq int3 callq repnz or mov js movslq jl or (bad) fwait pop rex.WX jno push lahf (bad) (bad) lret jl pop xchg pop lock adc (bad) movsl jb xor push popfq jne push es fist data16 (bad) and (bad) jne (bad) xchg xchg pop rex.B cmp out test es test cltd sahf and in (bad) mov subl (bad) out or (bad) (bad) xchg stos and mov sahf xchg int3 (bad) and pop fs add or pop sarb cmp jg mov clc xchg out pop fstl fsubl test mov lahf sbb jno sub cmp hlt or sbb (bad) push int3 test mov mov (bad) push mov and cmp mov or or (bad) push and mov enterq sahf mov jns js fisttpll rorl (bad) rex pop pushq add pop (bad) or (bad) add cltd pop sbb cmpsl test sbb jmpq movsl (bad) rex.WRX jge mov lock jb jo xchg or cld outsl mov push or rcrb sbb pop mov (bad) jl (bad) mov lret bnd xchg enterq (bad) ffree push rex.WRX cwtl imul rex.WRXB add rex.WRXB (bad) mov callq push rcrb lods mov (bad) xchg (bad) gs or fs out outsb pop rex.R rex.WB adc repnz rcr adc push andl enterq cwtl sub add mov cltd clc std jl adc xor xor and (bad) movsb test stos sub in xchg (bad) fcompl out sub mov shll movabs xlat pop adc adc jae cmp loop or rex.RB mov andb sub push or adc cmp out (bad) (bad) out clc (bad) test xor fidiv xchg pop mov (bad) int3 pop movabs cmp outsl adc xchg jne adc (bad) mov idivl clc movslq xor loopne xchg jo cmpsb cmpsb pop pop jo jbe rex.WRX es rex.R mov xor (bad) mov hlt xor (bad) sbb push clc callq pop insl mov ds sub sbb push retq lea push jns (bad) rclb in pushq stos in addr32 mov xchg jrcxz pushq cli mov movabs (bad) stc xor and xchg (bad) mov vmovshdup mov cmp (bad) pop repz pop rcrl mov or gs in (bad) mov jge mov sub sbb addl (bad) jns jns jb fwait jbe mov insb stos iret nop xchg gs fisttpll push loopne sbb sub push cmp mov rex.RXB insb rex.WRX bnd (bad) mov neg and sbb add int3 pop je stos xor cmp movabs add scas mov js or shlb rex.WB jb add mov or rorb subb mov or mov enterq and pop mov imul fs hlt repz (bad) lods fisubr adc and movabs or imul xor push mov adc nop mov fsub sub adc popfq test (bad) clc jge cmp adc jp fwait cld ss scas mov loopne xor scas or pop (bad) mov or mov (bad) (bad) (bad) sub (bad) in (bad) sub ficoml fnsave adc xchg or sahf adc fidivr (bad) adc or (bad) mov mov push hlt adc movabs jmpq cmp addr32 movsl xchg add mov (bad) cmp rex push (bad) and adc jb xor or push xchg movabs (bad) xor fisubl fisttpl movabs leaveq rcll cmp cmp or retq cld sbb add out retq xchg adc sub ss lock and fsubrp cmp (bad) movabs in pop sbb rex.W clc adc add fsubrs lahf repz pop add push xor push pop cmp cmpsl out addl xlat or rex.RX scas lea rex.B cmp insb jne mov add sub jge xchg sub or mov sub xor idiv (bad) rex.RX jo mov (bad) push rex.WR rex.WB or push push pop out rex rex.W sub mov xlat cmp rex.RXB loopne rex.WRXB adc push in jp mov xchg stos cld mov adc rex.R pop xor mov loopne jge sbb jge mov fbld mov push adc mov cltd (bad) adc fstpt movabs sub jl cmpsl test sub gs cs fadds rex.RX rex.WRXB fs xchg lock mov loop std push rex.RXB add push jp psubsw add loopne stc ror fldt (bad) mov (bad) add jle enterq jmpq rex.WB push repz or cmpsl xchg (bad) adc and lcall xor jno enterq mov jbe (bad) shl hlt (bad) scas stos pop add fwait mov xchg (bad) cmp subb sbb sub mov fwait (bad) sbb adc rex.WRB jp xchg rex.X rex.WRX (bad) xlat in rex.RXB and fs push rex.WR mov rex.RX mov (bad) jp adc fadds addb (bad) and jns pop cmp add pop jge enterq fnstsw jp lret add icebp rex.WX (bad) pop repnz add (bad) jl callq cltd rex.WXB or rex.WXB fisub (bad) (bad) jne xor xchg (bad) mov enterq sbb mov add std pushq (bad) adc mov adc lret sub test cmp rex.RX xlat fwait repnz (bad) rolb mov cli fmuls rex.X (bad) fisub movabs mov retq adc rorb mov push stc pop cltd mov fidivl in push jb lahf jno rex.B (bad) xchg sbb pop enterq jb out in (bad) mov jrcxz xchg div or jo add add mov xor test xchg jmp adc divl pushfq pop mov cmc push rex.XB (bad) retq (bad) lret add outsl pushfq adc stc mov (bad) (bad) or sub xor add jp add outsb rex.WB faddl rcrb add cs js mov (bad) rex.WRB mov rcl mov adc rcl and rex.RXB sbb lret mov sahf frstor rex.RX movabs pop push rex.XB add loopne (bad) adc lahf out adc fs (bad) fistpl (bad) (bad) fcomip pop xchg int3 movslq rcll sbb jmpq sub (bad) mov (bad) pop mov retq sub xor jmpq mov (bad) push callq vmaxpd jae in movabs sbb fwait (bad) out and xchg insb mov pop icebp (bad) (bad) mov (bad) (bad) lock clc loopne pushq jns mov add callq adc ja rex.X rex.WX ds repz (bad) add or (bad) js hlt mov and sahf push rex.X sbb outsl xor cmc test sbb data16 bswap (bad) xor xchg movslq (bad) fwait jno pop leaveq jg or imul int3 scas jne xchg lea mov xchg cs pushq xor movl jl (bad) repz retq pop int3 jne (bad) negl xchg jo pop jl test or scas in (bad) jb fsubl lods mov (bad) push retq add (bad) xchg scas (bad) insb es (bad) (bad) sbb incb sbb rcrb rclb fidivr cmp shlb movabs rex.WRB cmc rex.B mov cmp (bad) (bad) adc in iret sbb in shll xchg adc push sti (bad) retq adc rex.RX stos sbb ds adc adc out push add iret callq lock mov (bad) lahf mov notb mov int lock jg (bad) and sbb ss mov pushq and movabs add sub (bad) xor es mov push pop (bad) movsb std push and (bad) pop adcl (bad) mov pop mov add test jae loope cmp rex.WB pop and out lods sub movabs rex.W pop cltd push (bad) scas xlat rex.RXB (bad) cmp fcoml leaveq repnz or sbb pop mov and xchg fstps scas pop rex.RX fldl movsl clc leaveq xchg sbb rex.XB movsl xchg loope adc jae mov stos sub xchg mov cmp lock bsr or jns pop insl icebp adc lods push mov adc (bad) mov mov or scas sub test (bad) fsubrs cmp or cmp (bad) outsb add faddl push xor ss imul mov sub rcrl mov jb cwtl imul ror jae (bad) jne sub or adc xor shll insb sahf and movsb cmpsb add adc repnz movabs adc or add adc rex.X or sub xchg pushq rex (bad) outsl (bad) sbb xchg cmp (bad) add cwtl movabs fistpl mov ss mov es mov js rex.XB out (bad) pop fnstenv fscale sub cwtl fistp shrb pop movsl out addr32 rex.X rex.WRB and cltd pushfq mov loope add stos movsl mov (bad) cmp movsb or and jns and and fcoms and (bad) fisubrl cmp add xor negb int rex.WRX out (bad) repz rex.WB mov repz xchg cmc (bad) in and out xor mov (bad) cli lock add or jmpq rex.X mov lods insb jo (bad) (bad) pop adc jl mov loopne shll fs movabs mov cli (bad) add pop rex.WRB repnz test pop stos and pop sbb (bad) movabs cmpsl xlat mov (bad) callq clc sub or jge rcr insl notb and gs retq fstl outsl jbe push jne sarl mov sbb rex.XB xor ds cmp vprotq xor int3 mov data16 mov cmp xor idiv lock mov mov lock mov xchg lret insb (bad) and pop cltd xchg ja cld add sahf (bad) jbe movabs push lock (bad) imull pop adc adc lods rcrl (bad) jmp js clc xor imul mov or add shlb cmc and (bad) (bad) (bad) or fmul (bad) mov data16 xor movabs add mov cmc fiaddl rex.RB rex.R (bad) lea and sbb repnz movb sbb imul int js sbb jle xorb mov and adc sbb callq movsb (bad) stos add repnz jrcxz push stos sub loopne mov adc sub mov rex.RXB push mov sub lahf and sub and (bad) scas nop (bad) mov sbb pop adc and movsl lahf outsb jb adc jbe jp jg xor xchg sti pop (bad) pop pop push rex.WR (bad) pop repnz jp adc or or js rex.RB rorl xor xchg rex.WXB and adc imul adc and scas add rex.RB cmp sahf in pop (bad) adc (bad) and cltd adc mov adc adc jmp ss add or adc or jno outsl or adc mov pop rex.RB add iret mov test stc adc (bad) adc xor insl repnz loopne (bad) out and repz (bad) (bad) jle js mov (bad) pop cmp pop cmp movabs (bad) mov insl test adc mov (bad) jmpq xchg (bad) pop out adc in fist rolb lods xchg rex.WXB xor adc pop faddl jo sti (bad) cld jl rex.RXB mov (bad) cmp pop fistp sub (bad) or movabs rorl adc jbe ds adc retq loope and adc jl callq add (bad) iret adc (bad) (bad) fidivrl pop adc cli stc fs mov jns jbe xadd mov jrcxz rex.WXB (bad) mov and or hlt or sbb repnz xor add push (bad) add xchg out sti cmp adc pop xor or (bad) callq callq (bad) repnz vpaddb push mov lret or repnz stos fdivrp fmul xchg (bad) push pop push xor lret movabs xlat (bad) imulb std and mov jl icebp (bad) nop mov cwtl in movhps pop (bad) and imul imul mov pushq xchg fdivl notl adc clc js rex.XB fs je adc (bad) fcomi mov sbb mov xlat adc lahf cmp or popfq xchg mov pop lahf add in in rex.WXB adc movabs enterq sbb add sar pop (bad) jge cmpsl stos rex.RB adc rorl idivl callq jge,pt rex.RX js js xchg (bad) rex.X pushq xchg out outsl (bad) cmp (bad) out fstl test adc add shufps cmp scas shrb or jno fs sub sub jns cmp or or adc mov xchg sub in xchg mov and jg es sbb fmul (bad) movabs mov fildll or imul lret rex.W repnz adc in add imul (bad) lock sub cld rex.W callq push and sub xchg and sahf xlat sbb loop mov sub pushfq cmp clc enterq xchg movsb (bad) rex.WX stos in jae fucomp rex.WRB mov fwait mov push popfq jmpq rex.X mov sbb mov cltd mov adc xor sub cmpsl adc pop int and mov or (bad) leaveq sbb retq (bad) xchg xchg fist mov push adc out push add fs in in sbb movabs rex.WX xor cli movsb (bad) or movzbl or cltd (bad) fist pushq cs (bad) mov mov push rex.XB callq and lock notl test shll (bad) push (bad) pushfq mov mov lea mov callq mov sahf (bad) roll xor sub (bad) rex.WB adc xor addl jl lea cmp (bad) adc mov rex.WXB adc fidivr xor repnz loopne (bad) and sub nop adc xor jle sub (bad) mov outsl in rex.W fcoml mov fbstp rcll mov mov (bad) fsubrs fwait pop (bad) movsl (bad) cmpsl fs std popfq movabs andl or out (bad) xchg mov fsubrl cmp je fcmove jg xchg test fcomps std and (bad) cmpb sti cwtl addr32 sub (bad) test test lahf cmp mov repnz in rex.RB jno jg adcb pop mov movabs mov cltd rcrb jrcxz rcrb fs callq scas push push nop and in add jg loop sub rex.WX pushq pop mov rex.RB push cld decb fwait cltd pop cmp (bad) or (bad) rex.RX retq insl jbe mov rex.R in jmpq in cs rex out or movsb rex.RXB rex.XB jge mov pop adc xlat xchg fwait sub iret cmp mov pop or mov or pop (bad) loopne movabs rex.WRB add sbb xchg out (bad) jmp pushq lret test jno (bad) adc pop mov push or stos or or pop rex.RXB mov es rex.RB mov imul adc leaveq rex.WRX pop and rex.WXB rex.WB (bad) sub or int3 enterq lret jbe leaveq sub or fdivrs imul jo scas push xor jmp jne nop out xor rex.WRXB int3 or test (bad) shll or jrcxz adc cmp andl (bad) adc (bad) push mov or test sbb sti (bad) push xchg cmp xor sub jo cmp rex.RB cs fdivr jmp add sbb (bad) cltd (bad) adc hlt popfq incl mov mov mov mov jge xchg outsl (bad) xlat mulb xchg pop imul cmp or fsubr or (bad) xchg js scas rorl callq (bad) (bad) jmpq jmp and movabs xchg movabs retq mov (bad) out rex.W int3 jno imul (bad) outsb movabs rex.X retq jge mov mov add (bad) adc fbld ss xchg pop fcmovnb (bad) sub retq (bad) pushfq test pop (bad) mov lea rex.XB jne sub rex.WRX mov pop or retq (bad) cmpsb (bad) movabs cmp (bad) (bad) rex.RXB movl adc sub (bad) xor pop cwtl iret outsb fdiv (bad) pushfq mov (bad) test movslq out (bad) stos int3 add adc callq cmc hlt in out jae cli (bad) and adc and (bad) adc (bad) jb or fidivl clc sahf in clc jge (bad) xchg rex.RXB cwtl pushq mull (bad) jle rex adc (bad) (bad) mov rex.WRB test jbe xchg push cmp adc (bad) pop rex.WXB mov (bad) xor sbbl rex.WXB je adc cmp cmp add jge hlt or xor int3 (bad) (bad) xor icebp lret movsb (bad) int js popfq vpmovmskb fs mov je (bad) sahf js rex.WX jno fwait test rex.RB jae pop xlat sub add retq add rex.WR push jle mov shrl sbb icebp jae (bad) mov cmpsb movslq mov lret jbe movabs (bad) ss adc adc outsb rex.WR cmp jg sbb mov clc add (bad) or mov adc mov addl mov fwait and adc xchg mov push shr lock xchg pop xchg pushfq movabs adc sbb adcl and (bad) lock cltd cmp nop lods jno pop (bad) (bad) pop movabs xchg movabs test adcl test lret fnsave sub (bad) mov mov retq (bad) clc mov or cmp andl adc retq sbb loope jrcxz lock (bad) add ja bnd pop retq jnp mov mov (bad) (bad) callq jnp adc jno (bad) fcoms cmpsl subl in stc (bad) (bad) (bad) icebp mov xchg pop jp mov mov jno ds push xchg jmpq push cld (bad) fisub std add (bad) movsb mov (bad) rex.RXB rex.WRB jge push and stc fildl mov adc push mov adc (bad) jl cmp movabs lret mov push rcl pop or adc mov add (bad) rex.RX or and stos pop mov (bad) sar or adc push push xchg stc clc js add (bad) jbe or out rex.B movabs mov lahf pop rclb stos mov int3 sbb adc jno insb cmp (bad) add in movabs rcll sbb mov gs clc scas xchg sbb fsts add cmpsb (bad) or pop jg rex.XB pushfq movb callq rcrb and add or add adc movabs xor fs pop adc (bad) (bad) mov adc sti fwait push in (bad) mov pop push lahf (bad) jmpq shr js xchg jne sbb rex.WRB jl (bad) in nop js ja loop adc retq mov ds popfq std pushfq xchg mov sub clc xchg (bad) mov in or js loopne shrl rex.WR (bad) pop xor pop retq in pushfq rex.XB (bad) (bad) repnz add jl mov outsb nop in lock movabs mov pop jbe (bad) gs (bad) movabs rex.RXB rex.R sbb add cld gs mov add xchg or add out fildl (bad) sub (bad) cmpsl push xor sti xor cmp mov sbb fs jmp fdivrs rex.RX iret sahf cmpsl (bad) (bad) lock rex.WXB sub rex.XB adc mov mov pushq repnz mov add movabs mov fmuls icebp xor or xor xchg cmp pop and (bad) test pop xlat or mov stos pop sbb callq mov cmc (bad) in adc shl (bad) pop out movsb or (bad) mov in jno jb mov jns pop jrcxz iret es (bad) (bad) rex.WRXB adc pop sbb pop cmpsb lret pop xlat sub pushq (bad) mov adc rex.X cmpsb cs movsb cli es pop mov or js std cmp movb (bad) xchg std or outsl mov addl rex.R (bad) rclb movsb adc sbb adc pop (bad) rex.WRXB (bad) jbe insb cmc and (bad) subl lock (bad) or adc int frstor adc mov (bad) lahf incl pop xchg (bad) push ror adc fnstsw mov pop fsubrp lock or jbe pop movsb push scas (bad) xor stc rex.RX add jno movabs adc callq loop clc pop (bad) rex pushq sahf (bad) pushfq xorl add pushq stos xchg xor rclb jmpq rex.WRB in add sbb and (bad) rex.RB imul adc xlat out (bad) mov or (bad) jns,pn or sub jnp mov jmpq (bad) push fsub xor push jmp mov and retq (bad) out (bad) rex.X push gs (bad) clc movabs mov and int3 (bad) sbb pushfq fbld adc pop jp add or (bad) lock sub gs addr32 iret mov sarl mov (bad) adc cmc (bad) fadds cmp mov movabs (bad) out fcoms (bad) xchg xchg loopne xor sti sbb pushq (bad) adcl fldcw (bad) pop jle insl (bad) test or (bad) jg (bad) stos rex.W mov jge addl fwait pop enterq adc sub lea test sbb sub movabs xlat mov adc mov mov fcomps jmp (bad) adc rex.RXB outsl adc (bad) cltd (bad) xchg adc or orb outsb sbb movabs add cmp callq rclb push push adc or cmpsb (bad) add or mov add jae cmc cs enterq rclb adc movslq (bad) cltd rorl lret mov rex.XB repz enterq push adc lahf retq sarl cmp add imul cmp fistl adc movabs lods xchg mov adc (bad) rex.RXB gs movslq pop push lahf in rex.WX push movsl fs sub test xchg adc lahf fs rex.WXB in (bad) adc mov pushq (bad) (bad) (bad) fsubl xchg sub xor flds xor mov mov pop sarl gs adc out rex test clc sub lea sub (bad) sbb (bad) addl xchg push movsl lods adc retq movabs xor mov lods rex.WR cld mov lods movsb lea sbb or rex.WRX push mov jae (bad) xor out fisubrl sbb jo (bad) jo (bad) scas rex.WX outsb cli shrb xor rolb and pushq (bad) (bad) xchg movslq (bad) movabs add imul movabs test clc clc and sub iret xor rex.W rex.RXB cld add in rex.RX jmpq adc outsl adc adc or xor movsb pushq lods fwait push xor in sbb ficoml pop (bad) fs sub adc pop fwait (bad) and or imul xlat jno cli sbb (bad) add or or jl gs jbe enterq lock (bad) cld enterq sbb jno and lock or callq cmpsb mov jp cmc sbb lret xchg and lock push ds pop add add sbb cli callq insl or xchg jmp clc (bad) fnstsw adc mov cmpsb jno pushfw scas stos stos jo adc insb (bad) test or (bad) jle (bad) (bad) (bad) movabs xor scas out jnp rex.WRB bnd mov (bad) (bad) rex.RXB nop js or cli cmp stos sbb gs or (bad) ds (bad) (bad) repnz pop insb or xchg mov sub xchg jp mov es callq in jno lods or outsl add mov out jnp (bad) roll fstps add in cwtl and (bad) mov xchg mov (bad) scas add add fs mov mov (bad) sbb psubsb xchg out sub hlt (bad) (bad) adc xchg xchg callq pushfq in outsb fsubr xchg je adc mov cmpsl xor test xor sub fsubl (bad) sbb int3 sub nop hlt or (bad) and adc xor or int3 insl xor xor ja (bad) scas lahf pop jge mov push rex.RX insb je cmp imul or sahf or movabs adc rex.RX stos outsb enterq int3 (bad) fucom sub (bad) or cmc nop js rex.X (bad) cmp mov ss xchg sbb jo movsb out rex.RXB repnz jns jmpq ror pop or add xor mov push add ss xlat repnz jne movsl mov lahf mov idivl (bad) jae xchg mov insb sahf rex.WR mov sahf mov pushfq or repnz repz sarl leaveq cli cwtl mov pop rolb insl sub jl rex.X xchg lods scas fwait jg es mov rex.RX retq leaveq movl clc pop nop (bad) adc repnz or sbb mov cmp loop movsl int3 sub and and jnp jl mov jmp outsb cmpsb in cmp jl (bad) mov sti sub rex.WR (bad) adc jrcxz adc test rex.RX data16 cli and enterq adc in adc cmp int mov adc out xchg xor pushfq mov rex.RB (bad) add clc test xchg add js loopne cmpsl (bad) add cmp in rex.WX cli (bad) cwtl ss in mov mov hlt stc repnz enterq (bad) xor push mov rex.RB rex.WRX cld xchg int mov fcoml pushq add (bad) sub (bad) adc cmp (bad) rclb rex.RXB adc mov (bad) addr32 (bad) sub push test sbb or cwtl ss (bad) or sub (bad) (bad) (bad) mov int and mov sti pop add clc add loop sbb lea and mov (bad) jne mov jle movabs (bad) jmpq cmp and (bad) adc and leaveq rex.WRX rex.WRB (bad) mov rex.WRX jg fwait jp sar rex.WRB xchg and frstor addr32 mov sub or jp sysenter mov xor pop loopne popq mov xchg xchg sub (bad) es sub (bad) movabs jno lahf test sbb test callq (bad) (bad) lea fnop sbb jmp je pop or jg out (bad) push out cmp mov fnstsw mov mov out jl hlt (bad) xchg movslq (bad) adc (bad) cmp rex.RB shl (bad) adc andps test rex.B (bad) cld jmpq xchg adc (bad) pop fadds leaveq lret jno (bad) cmp mov (bad) retq (bad) rolb add rclb fwait leaveq cltd in adc push xor jne mov adc adc test in (bad) push callq mov addl addr32 rex.RX adc mov adc sbb andl jne jno lea movabs in xchg mov mov cli (bad) cmc int xorb push or (bad) in insl fwait jge mov callq rex.XB mov xchg cmp mov test outsl rex.B or cmp enterq (bad) movsl movabs sub mov mov gs adc out xor mov repz lock (bad) pop lock lahf sbb shr jp cmp rex.WRX sbb cmp insb lock mov xlat (bad) adc (bad) movsl loop adc insb idivb test add scas in repnz xor sub repnz jg jrcxz adc test jbe (bad) and (bad) push (bad) (bad) in loope rex.W (bad) xchg rcll (bad) adc out outsl repz xchg jmp (bad) movsb in (bad) lods rex.WRX rex.XB rex.WR mov xchg jbe clc leaveq mov sbb xchg sarl push out mov adc retq lea gs push sbb (bad) add jb xchg bswap jmpq notb (bad) adc subl jp nop repnz (bad) xor sbb retq push and fcomps andl xchg mov (bad) pop (bad) (bad) (bad) (bad) rex.WX fisttpl add rorb xchg out (bad) in jo movabs mov mov xchg cmpsl sbb jg add fucomip mov (bad) insb decb mov roll cmp sbb jg js (bad) mov psubsw jrcxz rex.XB (bad) cmpsb sarb pop adc mov lahf xor lea xchg rex.WRX out xlat in ja mov push mov movabs push xor cs loopne pop jo and ja push and or rex and or sbb (bad) xchg (bad) sub js sub (bad) adc rcr lea push pop test xchg lods rclb or (bad) xlat sbb (bad) (bad) jge movsl rolb push callq push pop movabs adc (bad) mov and rex.WRX adc mov and out rex.B (bad) push mov in xchg lret movl rex.X fsub fstpl xor (bad) retq mov out fnop outsb ljmp (bad) xchg and rex.WRB rex.WRX or cmpsb sub xor iret jnp pmaxsw mov (bad) rex.WRX or sub (bad) (bad) cmc clc lahf rex.RX mov add or (bad) (bad) rorb sbb mov (bad) mov fwait rex.WX shrb rcrb outsb (bad) adc jno (bad) mov or and adc cs pushq pop mov fsubrs movabs or mov pop movsl insb adc rex mov add fcompl push push (bad) cs pop rex.RXB (bad) xchg ja mov (bad) adc (bad) test test (bad) sub retq mov pop lods mov leaveq sbb (bad) mov and mov (bad) jns (bad) (bad) pop frstor rex.RX es stos rex.RB fisttp mov adc fcomps pop xor hlt movabs fwait pushq lock es cmp cmp jp rex.B out sub (bad) int3 repnz test push (bad) ja leaveq adc leaveq and pop push test incb add rcll jle jbe or (bad) xor sbb sub iret (bad) add jrcxz (bad) data16 incb popq xor rex.WR adc adc fcomps (bad) (bad) (bad) icebp (bad) mov mov es rex.W xchg and adc rex.XB cmp add hlt jns cmc mov lods adc mov sbb xchg js andb mov movsb pushq rex.WRB (bad) adc xor imul (bad) adc mov xchg in (bad) shll in adc or pop js cmp (bad) push adc movsb cs pop adc adc ficompl callq (bad) jo cli (bad) movsb sub popq mov pop (bad) fmul fisttpll (bad) mov adc cmp jge adc mov ds in sbb cmp cmc pushfq mov xchg adc lret (bad) xchg repnz mov fcomps cmpsl adc or fmull in lods insb add in adc cmp vmovupd mov jmpq cli rex.WRX stos rex.WRXB fisubrl lea lea lock (bad) xlat outsl sub rex.XB outsl gs rex.RX (bad) jno icebp mov in stc (bad) xor mov add (bad) leaveq in or outsb and pop movsb test lock sub fbld mov fdivrs cld pop insl pop imul leaveq fdivrs es add xchg mov cmp (bad) (bad) jno js movabs movsl xchg add pop sub and adc jrcxz js cmp mov jl (bad) xor andl in lret movabs (bad) mov or cmp imul sbb rex.XB fdiv shrb callq lock pop ljmp ss adc mov (bad) mov jg movsb je jle push cmp shll es out movsb hlt jne (bad) (bad) push icebp cmp rex.XB add and rex.X fwait (bad) callq (bad) sub adc fmuls pushfq (bad) (bad) cmp retq jae fcoms pop nop (bad) cmp mov and xchg (bad) (bad) (bad) add jmp mov rex.RB mov ficoml scas lods cmp (bad) jo and rex.WX mov (bad) out adc test adc xchg rex.W ficompl pop fs (bad) xor jmpq sub adc iret xor rex.WRXB mov (bad) xchg (bad) out retq adc xchg pop fnop popfq andb test (bad) mov jne movslq nop or pop and lea adc sti mov xor sub mov jb repz mov pop cmp movabs jae es push or adc test pop mov je xchg jb or test mov ds ds (bad) out adc xor (bad) adc sbb or pop push adc insb (bad) and pop out push or sub mov (bad) sbb roll lock in (bad) (bad) mov jnp div clc cld cmpsb mov push sub (bad) std pop rex.B mov pop (bad) mov mov out rex.WRX adc (bad) (bad) test mov (bad) mov lock enterq movabs jl adc add sub insb shlb rex.RXB and sbb mov or in mov ja push xor and mov jp rex.WRB (bad) rex.X (bad) in jmp clc (bad) insb xchg lock lock retq test xchg sub or rex.W (bad) div mov cltd movabs movb (bad) mov (bad) sbb and loop divl loope movabs adc test pop sub test mov lahf adc fwait cwtl cwtl loope rex.WXB mov adc (bad) cwtl je rex.XB movabs mov fiaddl adc insb cmp enterq add (bad) outsl (bad) (bad) (bad) int push (bad) and rex.RX xchg add repz push icebp jbe xor outsb callq pop (bad) stos mov movsb callq int push pop (bad) lods sbb test (bad) rex.WRX pushq xor adc out jae adc retq sub cmc adc adc sbb push and push push movabs lea lret add sbb loop out rex.WXB xchg repnz adc rex.RX or lock insb cmc (bad) xchg (bad) jne mov divl lcall sahf insl (bad) fs rex.XB rex.WXB jrcxz lock pop and adc rex.RX (bad) lahf int add cmp scas (bad) negl rex.RX adc (bad) sbb jl scas rex.WRXB adc xchg rex.WRX mov repz pop js sti xchg mov popfq jbe or int3 es fs cmp jge add (bad) and mov adc insb adc cwtl xor mov or movabs sbb imul (bad) jbe mov add (bad) and (bad) cs rex.R gs push xchg and in (bad) mov hlt cli jg xor fucom xchg mov push add out cmpl cmp fsubl adc add and pop (bad) mov ss rclb (bad) pop xor (bad) andb adc xor ja fdivrl (bad) movabs repz xchg gs fsubs mov adc fstpt pop cltd add pushq rex.RB (bad) cmp add jb (bad) push rex.B rex.W enterq rex.RX add add outsb notb mov sub sbb js sahf fnstsw adc rex sbb or rcr sub rex.WRB (bad) rex.WRX (bad) mov xor cmp sahf push (bad) or add (bad) repnz rex.RB in repnz push jp jg mov movsl loope fwait mov retq (bad) lahf shll (bad) fsub pushq pop data16 sbb shll std je rex.WX (bad) mov pop js rex.RB (bad) add and scas xor add sti cmpsl es xor mov mov jns imul mov pop rcl stos jns mov (bad) mov (bad) xor adc sub in cmp callq in pushq adc sub rex.WX (bad) sub (bad) rex.WRB jmpq jmp popq mov mov sbb mov jrcxz fs shrl cmp (bad) scas addl (bad) test xor xor enterq out movabs sub mov test pop data16 stc adc push cmp ja pand nop (bad) mov (bad) jmpq or (bad) negl jnp rorl lret movmskps out xchg jl add clc rex.B iret (bad) cmp mov or (bad) mov paddsb push (bad) mulb xchg sbb cmpsl (bad) mov jns and rex.WXB setge insl jp pop mov jb add (bad) leaveq or mov movabs or jrcxz movabs cli stos loopne jmp add or shlb out adc mov rex.WXB (bad) not pop fstps (bad) in rex.WX adc jbe cmp or movabs add (bad) gs (bad) movabs lret rex.WR rex.WRB std add mov callq push or mov pop and cmpsl mov loope (bad) push jb scas cmpsl movb sbb ds cmc adc (bad) (bad) test movabs xor (bad) and (bad) mov (bad) outsl (bad) jno sub lea (bad) jg push pushfq cmp ja fbstp out sub (bad) movabs adc and (bad) (bad) or jnp insl jnp sahf xchg mov rex.WB lods or xchg div rex.XB jbe out stos mov (bad) mov (bad) add int hlt lock and xchg add sti jnp cltd mov enterq sbb (bad) push int3 test pop (bad) jne int or rex.B push adc insb lret mov (bad) fwait loopne sub addr32 or pop imul adc or test pop push add mov (bad) sub pop or adc (bad) popfq mov cli rex.WR jle add movabs push jo sbb out cs rex.R retq adc cmp (bad) mov (bad) (bad) (bad) sbb ja jrcxz (bad) cmp xchg mov ffree (bad) jl (bad) clc jge adc xchg sbb lock jbe mov in mov and movsb rclq rex.RX rex.WRXB (bad) xchg xchg fisubr nop in xor jl xor (bad) adc icebp loopne and cs mov adc stos adc cmp rex.RX addr32 gs xor and jle mov cmp adc insb (bad) adc scas xor jrcxz out sbb sub pop and (bad) push test xor (bad) rex.WB add sbb hlt rex.WX cwtl (bad) xlat xor mov rex.RB and retq rex.RB hlt pop add fistp mov (bad) icebp mov xchg jae mov sbb sbb sarb ds addr32 jb sbb pushq repz pushfq xor rex.WX mov (bad) (bad) cmc (bad) loop (bad) xor jno ja sbb (bad) push sub or xchg (bad) (bad) mov movabs int3 sub decb scas (bad) or mov xor (bad) insb add out xchg repnz rex.R rex.WRXB (bad) shl sbb (bad) fwait mov mov rex.W adc stc adc divps mov (bad) rex.B out and ffreep imull sbb xchg add cs hlt (bad) push xor (bad) icebp cmp (bad) (bad) rex.B xor (bad) xor (bad) or cmp mov gs and cmp jne fidiv (bad) and mov ds sub loopne sbb pushq repz lock rex.WXB cmpsb add movabs mov out pop xchg xchg clc out mov pop gs add (bad) test rex.XB mov rex.WX add (bad) rex.RXB loopne adc es adc add insl rex.WRXB push mov (bad) movsb cwtl movslq xchg mov add repz imul adc insl icebp jae adc xchg in pushq add sub rex.WRXB test out clc adc movabs xlat xchg mov (bad) sbb xchg (bad) (bad) lods push jle add cli popfq cld in (bad) test js clc sbb (bad) retq (bad) lods xchg mov jne pop sahf lahf (bad) movslq and rclb add test insb adc int3 xchg in xchg jg push (bad) and cmp (bad) jno jmp int3 sbb cwtl test mov rex.WRB (bad) in jns cmpsb data16 rep incl rex.WXB xor (bad) add pop (bad) rex.RB divb sbb or cmpsb (bad) mov stc shl mov leaveq movabs out adcl adc xor rclb out adc int3 (bad) pop sahf push xchg test sbb incl adc xchg hlt roll sbb (bad) in adc cmpsw stos ds out xor sbb push popfq (bad) (bad) sbb (bad) (bad) lods outsl xor insl add cmpsl scas adc pop sub (bad) xchg sbb sub xchg ss adcl clc jae sti jo (bad) movslq outsl adc (bad) insb (bad) stos and adc add add mov (bad) loop (bad) rex.WR iret mov cltd xchg movabs int test std and cmp je pushq (bad) cmp scas pop xchg (bad) stos rolb fcomp je add outsl jae js or idivl xor xchg (bad) (bad) nop outsb adc rex.X cwtl retq gs loop imul sbb je adc (bad) adc or hlt (bad) test sti adc stos jp xchg ss jae rex.XB xlat adc fdivrl ds (bad) sub nop push xor movabs fimul pop (bad) rex.WXB add out callq rex.WRB rex.WB icebp jbe data16 mov addr32 ss sub (bad) and movabs (bad) adc popfq cmp mov lods (bad) clc mov fmull push mov xor pop adc push fcomps xchg (bad) xchg movabs pop jp rex.RX pop fidivr cmpl (bad) mov jp lock mov sahf loop mov pop out cmpsb es enterq mov (bad) cmp xchg movsl ficomp cmp (bad) push jae gs sbb movups push mov (bad) callq lea xchg jg shll mov sbb (bad) scas pop rex.RXB jrcxz ds lods (bad) xchg in icebp xchg mov ds jle popq cmp add pop jmpq js repnz mov xor mov pushq pop sbb sub rex.RX or mov imul xor sbb (bad) mov test lea ja mov js (bad) sbb sub and mov sbb jo (bad) rex.X rex.XB pop in outsl in adc xor leaveq pushq jg in sub test rex.RXB hlt sbb retq callq fwait adc cmp leaveq (bad) test and outsb movabs push xor stc and (bad) or mov sub (bad) mov (bad) add outsb rex.W jno (bad) lods mov in in fiadd callq sbb adc ja nop out rex.RB test retq xor cwtl sbb mov scas (bad) mov sahf fisttp cs fsubs jb popfq cmp sahf pop (bad) lods rex.W (bad) (bad) repz sub divb fwait (bad) xor and jns rex.WX lock mov movabs (bad) rex.XB jrcxz jae cltd (bad) (bad) sarb scas (bad) int3 out incl ficom cmp loop push std fs enterq (bad) push test (bad) fcompl (bad) (bad) adc loope (bad) jb mov (bad) jne adc (bad) pop lods cmp push fcoml hlt xchg ds retq lea mov fcoms out mov adc fldcw xchg mov sbb in stos rex.WR (bad) (bad) (bad) adc adc fdivrl add loop outsb (bad) cwtl cmove sbb (bad) int (bad) push cmc mov jo mov (bad) stc push mov fisub adc fs rex.W ss adc sbb movsb cmpsb xchg rcll adc cld lahf (bad) rex.WRX repnz jp rex.B rex.X movsb stos callq fnstcw sbb adc xlat xchg cld in cmp add fldl rex.WR movabs gs test js rex.RXB mov push movslq rex.WRX rex.B (bad) jae ds sbb or jg movabs cmp jnp scas rex.WRXB std adc jo ja xor sti ficompl or jp mov loope out lock pop insb jl (bad) (bad) xchg loop adc lret push push nop jp sbb jg fisub add rex.WR rex.WRXB rex.RB out rex.WB sub pop rex xchg rcl and mov std xchg xor or callq (bad) sbb retq rex.RX adc or sbb or pop cli cwtl (bad) (bad) (bad) mov push cmp jno cld adc mov lock out and test mov sub (bad) fldenv sub iret jae mov pop mov sbb (bad) hlt fbstp movsb push addb subb mov mov (bad) rex.WRXB fsub jb test sbb mov or mov testb mov cmp pushq ja (bad) add sbb (bad) (bad) fisubl adc (bad) rex.WRXB fnstcw adc xchg rex.W pop insl xchg sbb sub mulb pop (bad) mov je (bad) add fstps xor (bad) callq and mov cwtl outsb outsl xchg and rex.RB push mov cmp (bad) out xchg cmp xor sub hlt rex.RX push cwtl enterq scas xchg (bad) popfq rex.WRXB xor mov mov hlt loope enterq adc mov adc movsl in rex.WR rex.WRX orl jmp lret adc movabs push xlat xor (bad) jg ja std or adc mov mov fs stc lret mov sti jb xor insl mov data16 (bad) xorl rex.XB (bad) ss xchg sbb (bad) adc (bad) adc iret xlat rex.WXB cmc xchg (bad) adc pop xchg movsb je int3 (bad) mov sub adc mov test (bad) adc sbb loop adc jne cmpl cmp xlat hlt test rcrb add pushq callq and movsb pop out jo jle fs adc outsl adc mov int3 and roll adc xchg callq xchg rex.WB xor jns movabs cmp rex.WRX mov xchg jnp (bad) sbb xchg adc rex.WR rex.RB ja xchg out jno pop movabs (bad) scas stos jrcxz cltd lahf (bad) gs mov out outsl je stos loopne leaveq rex.WRB stos cli (bad) gs std (bad) scas jrcxz incl cmp xchg mov cmp ficoml rex.WRB fcomp cmp (bad) out push cmpl imull jmpq xor mov loope outsb rol rex.XB rex rex adcl retq sub pop adc jg movabs rex.XB rex.RXB xlat mov sub push rex.RB andb retq rclb xchg test and imul icebp retq jrcxz mov scas xor xor mov (bad) cmp rex rex.WX and pushq repnz data16 rex.X mov xor pop xor bndstx movabs xchg mov add add pushq rex.RX jg setnp xor gs (bad) callq sbbl or or lret lods test lock leaveq popfq enterq pushq lods add sub in loopne or test or and add and retq loop fdivs (bad) shrb out xor add mov cmp pop cmp test pop adc (bad) (bad) (bad) add pop (bad) jp (bad) jo lock movabs cmp rex.WX mov fist (bad) jns cmovs int add pop cmp fadds mov fisubl mov data16 and cs (bad) sub cmp xor add mov pop retq lahf pop pop out loope fs rex.X (bad) cmp test adc xor cmp or pushq adc movabs data16 movabs sbb push sub sbb fstpl mov rex.WXB std out rex.WXB jge mov rex.WX mov rex.X in and sub shl fisttp (bad) cmpsb xor nop rex.XB hlt ds lock shlb xchg out in and lock int3 ja gs out retq mull xor push and fsubs (bad) push adc (bad) (bad) push push retq movabs cwtl adc mov rex.B retq ss imul xchg (bad) clc or pop nop adc cld rex.RX insl lods and js repz fisubrl ja sti sbb rex.WB adc movsb enterq push rcll pushfq (bad) xchg add mov sti test scas xor jo mov or cmp jl xchg out add ja movabs sbb jg (bad) and add sbb rex.XB imul mov ja adc (bad) cltd adc (bad) in mov callq fsubr rex.W pop out clc scas and xchg rex.RB xor mov (bad) xor pop movabs movabs insl out imul (bad) adc (bad) add pop nop xor movsb mov (bad) clc mov sub sub adc xor adc mov sub (bad) and jbe (bad) and lret xlat hlt or fwait popfq idivb pushq cmp push push rex.B push rex.WXB (bad) xorb and pop cwtl outsl jge (bad) xor or js cmp movsb sbb (bad) xor or pop or (bad) mov cli adc (bad) xchg stc adc shr cs cwtl ss ficom (bad) rex.WR rex.R (bad) out lods stos xor pushfq lea pop ds jmp cltd or pop adc sbb icebp cld adc lfs (bad) cmp leaveq fildl ficomp jns nop adc sbb rex.R adc outsb scas sub sahf or clc andl xchg ja int3 lea cwtl clc (bad) xchg retq add cltd adc rex.WB sub mov ja jl movl retq cmpsl (bad) and fsubrs pop cmp jno xor (bad) adcl out (bad) in (bad) js lock lock lock or fist push cmp cmp ficomp int3 rcrb (bad) rex.WX mov ja mov pushq (bad) sub mov scas jae sarb fdivrl xchg loopne js (bad) icebp and sub rex.WRB outsl (bad) xor (bad) leaveq (bad) push pushfq rex.WB mov sub test push scas mov (bad) xor rex.WR push mov jns (bad) adc popfq fdivrl xchg or movabs sub adc movabs mov pop outsl out adc cmp fdiv mov stos fld jne adc push add pop adc int cli stc js rex.X mov sti fwait mov adc js cmp int3 mov rex.WX or rex.B rex.XB lock push sbb pop pop jbe push rex.WRB orb sub lret sbb and jp adc scas xchg mov xor mov xchg mov rex.WRX pop retq xchg mov pop adc insb adc fsubs pop mov idivb pop mov in insb add jne pushq (bad) cld jmp rex.RXB sub lods stc push cli out cmp xchg int3 sbb add in adc rex.WR push adc cmpsl cmp (bad) xor hlt (bad) jge movslq stos rex.WRB movabs movsb (bad) adc sub test cmpsb lahf cmp ds mov adc rex.WRXB xchg rex.WR and (bad) jae (bad) pushq rex.RXB rex.WRXB mov in xchg (bad) rex.WRX add fwait adc xchg iret notl xchg je jnp rex.RXB fsts mov bswap mov jge push fdivl push (bad) push xchg sahf cld (bad) rex.RX adc iret jl in jle mov cltd out (bad) (bad) (bad) rclb (bad) (bad) psubw jne repnz vmovapd divb icebp xchg (bad) jmpq pushq mov retq xchg idiv (bad) movabs scas rex.WRX (bad) movabs sub add (bad) (bad) sbb xchg and pinsrw cmp rex.B ss push xchg pushq push rcll js add mov in sub xchg stc add sbb iret adc cmp mov jmpq add jns cmpsl add adc cmp rex.W push (bad) adc repz lock or callq cmp fisub mov icebp sub jae push addr32 rex.RX lock sub add and and cmp and xor sbb rex.R cmp (bad) add adc fsts push out sub cltd inc and cmp xchg sub out data16 adc (bad) (bad) sub (bad) and out xchg cld movabs cmc enterq out push jp mov sub jae std push fstl (bad) stos rex.RB adc sahf and add xor int ficoml (bad) rex.WXB mov lea fadds and lahf (bad) (bad) cwtl cltd shl js adc pushfq popq je or xor int cs pop xor xchg sbb (bad) pop adc neg mov (bad) gs mov iret adc lock mov imul (bad) mov test rex.WR movabs clc jns xchg (bad) hlt mov push mov lods add lahf cmp retq push (bad) add addl add rex.RX (bad) mov fst sub mov out insl (bad) rex.RXB ss pushfq test mov jle xor jb sahf mov and adc cmp movslq popfq and cwtl push jge (bad) fs movsb pop popfq add out or mov mov int3 fwait xchg faddp lods mov mov or mov adc mov js mov fdivrs sbbb mov mov sbb clc enterq xchg callq rex.X adc and xor xor lahf incl sbb rex.R stos (bad) jl sub mov fcomp xor mov (bad) sub jno,pn add (bad) out pop int ss sub mov sbb fildl xchg or fsts rex.WRX adc rex cmp pushq (bad) add or push sub fcoms sub rex.RB rex.RXB adc scas adc (bad) sub stos mov xchg rex.RXB fisttp rex jle imull mov adc in lods and sbb stc lret js in scas cmp movabs movsb (bad) (bad) sbb jbe fstl add and mov or (bad) (bad) cmpsb sti sarb mov add lods (bad) xchg xor (bad) loope lahf mov stos int3 adc movslq test (bad) push adc pushq cs nop jne adc stos test add mov ds push scas xor mov (bad) rex.WX fmul test cmp push adc mov xor rex.RB and sub rex.WB sbb lahf cmp (bad) adc rex.WR test or sarl outsl or out cmp movsb pushq sbb or jbe adc (bad) sub sub mov pop mov shrl adc push adc (bad) int and movabs push fwait mov (bad) loop scas jl xchg in and and add (bad) gs sbb adc (bad) js lods jge mov xor sub lret pushfq cmpps iret pop js movsl rex.WRXB sarl mov push xor (bad) (bad) and add fnstcw rex.WXB rex.WRB jns rorl (bad) (bad) xchg cltd sub pop adc jb (bad) lret imul (bad) callq (bad) bnd (bad) (bad) ss rex.WRX cmp mov (bad) cmp lahf rex.RB test callq xlat fadds nop rex.RXB stc xchg sbb test loope sarl notb adc (bad) cmpsl out in and fild (bad) xchg (bad) (bad) push adc (bad) or lods (bad) (bad) (bad) out cmc hlt jo mov data16 rex.X rex.RXB rex.WRXB in movabs stos repz mov js push (bad) jbe jnp mov mov out fisubr pop adc cwtl rex.WRXB or mov sarb lock adc (bad) clc in cmp sub js out and movabs or add outsb xor ss int xor test hlt (bad) xchg (bad) in iret push enterq js (bad) fstpl pushq xor jbe adc rex.X (bad) mov rex.RXB (bad) xchg test rcrb (bad) std add mov lahf imul add fistl sub mov or stc cld jle xor pop pop pop adc test callq fdivs (bad) gs leaveq faddl lock movslq (bad) int sub mov sbb pop adc rex.RXB (bad) outsb clc ss std fnstsw (bad) (bad) sbb rcrl rex.RXB jp mov mov cltd test imul jbe mov pop adc rorl adc pop data16 fcoms (bad) sub adc in and (bad) retq adc cmc (bad) mov add lea mov movsl pop (bad) pop (bad) pop mov or xor xor movslq jne add cmp insl or (bad) cmpsb add jb adc jp mov rex.RX fwait (bad) pop (bad) add xchg jle jl repnz rclb pop pop xor pxor mov ss or retq sbb mov hlt punpckhbw pop movsl mov stc sbb (bad) cmp popfq lea (bad) test rex.R out (bad) gs push in sub mov imul test push and sub (bad) ss jp jge (bad) xchg sbb out xor rex.X test lock rex.R jae pop (bad) jb lock lret jnp (bad) (bad) or xor adc xchg ja rex.WRX xchg stc jne (bad) mov jno movabs or or adc ds (bad) xchg jno xchg cli cmp rcll decl ds cmp pop push push leaveq xor xchg adc out insb sbb int out es je (bad) sbb xchg retq cmp cltd shll mov test iret jno cmp sub insb hlt (bad) sbb sub addl and (bad) mov (bad) push adc popfq in mov stos xor add or iret div and movslq cmp movd adc mov push clc pushq xchg sti adc outsl (bad) (bad) cmp sub imul (bad) cmpsl adc insb lock insb (bad) sbb fnstsw add and leaveq rex.WRX rex.WRB mov mov jns mov (bad) rex.WRXB hlt lods insl in adc cmp adc outsl (bad) stos callq jp cli cwtl pop stc fs cmp fldl retq cli fidivrl rex.WR cmp rex.B rex.W adc or loope callq (bad) scas push cli mov movabs rex.WB (bad) add and xchg loope rex.RB test cwtl cmp enterq out or stos retq callq mov pop add cli rex.WRXB fldenv andb cmp imul ja add clc cwtl (bad) movabs jno movabs cli andb xor xchg movabs fildll rex.WRB ds jrcxz adc scas (bad) xchg mov fcompl push (bad) add sbb (bad) js sbb jg add sub out pop mov movabs (bad) lods xor (bad) mov xchg pushq xchg fnsetpm(287 cmp xor repz pushfq (bad) (bad) iret xchg adc fwait lret xor mov leaveq xchg rex.X pop pop (bad) push pop (bad) and movabs loopne xchg add sbb fadds mov xchg out cmp (bad) jmp add outsl lea stos mov insb push repnz push pop sahf or (bad) mov xchg (bad) sti adc jg retq mov sub adc loope mov mov cmpsb test (bad) test std test push xchg jae popq xorl (bad) in or fisttpll (bad) sbb (bad) mov mov jrcxz divl fcmovb ja loop lock enterq or xchg mov xchg sub pushq (bad) callq mov clc cmp icebp (bad) sar shll sbb shlb adc shrb jo shll mov (bad) mov popfq ja cmp xor lahf rex sub nop add cmp sahf adc mov rex.WXB (bad) (bad) nop xchg cmp pop push mov add xor xchg in ds out (bad) movsb int3 rex.WXB shrb (bad) jns scas xchg movabs movabs pop adc adcl mov lahf cs and in (bad) in sbb test callq add movabs mov mov (bad) push stos rex.XB in lret int3 push insl movsl jmp lahf xor xor (bad) imull pushfq pop jmpq and add rex.WR cs ds and rex.XB int3 add test movabs or and adc mov sbb scas movabs and fs (bad) or movslq movabs mov mov mov rex.WRXB retq sub mov hlt mov fdivs (bad) pushq adc and (bad) clc add fidivr sbb add xchg add (bad) scas mov enterq xchg fs int3 movabs pop fildll xor je (bad) sbb (bad) mov rex.WRXB rex.XB xchg (bad) addr32 mov add in and enterq imul add js adc sub (bad) push adc mov hlt rex.WRX mov mov (bad) pushq (bad) push pop scas je int addb fwait (bad) movabs rex.WRXB mov movsl pop xchg fmuls mov stos outsb nop (bad) add sarl shrd sub rex.WX ja (bad) add lock mov sbb mov repnz shll (bad) (bad) adc lods enterq fldenv (bad) xor pop je cmp movslq xchg xchg repz jg mov cmp add fwait push fcmovnbe mov xchg scas movabs cmp (bad) mov fwait xchg int3 xchg rol rorb loop mov callq mov (bad) loope dec xor rex.WRX ss jrcxz (bad) jle movabs and test scas nop jo rex.WB lret push adc (bad) mov adc jne or jl add retq out loopne add jns pop out scas es scas xor je sub loop rolb adc sti (bad) rex push jbe shl stos test push (bad) adc (bad) (bad) or retq mov (bad) fldenv (bad) (bad) jl rex.RX fs ficomp sub (bad) in adc roll add pop sub add sbb add jbe gs movslq popfq clc adc adc int3 mov jne lea out cmp movabs cmpsb rex.RB shll fdivrs insl adc mov and movsb shll scas add cmpsb jrcxz cmpsl je,pn (bad) rex.XB mov movabs (bad) and idivl mov sbb sbb mov (bad) fidivrl insl mov clc retq loope mov cmp mov movsl out cmp sti popfq sbb and rex.XB mov sbb pushq nop sbb stos jmpq scas mov rex.RB rcll (bad) add mov (bad) mov sti adc in adc insb or (bad) sub movslq test rex.W out fcom adc (bad) jg icebp lea movslq roll or xor (bad) fcompl jle nop (bad) cmpsb gs imul mov insb push lods cmpsl (bad) push (bad) xchg callq callq push cmp enterq sub adc sbb rex.R adc in mov adc callq data16 rex.RB jno cmp jmp cmc outsb loop (bad) (bad) adc outsb (bad) imul cmp enterq push (bad) fimull fcoms or mov jo (bad) sub stos xchg in mov mov lea cmpsb (bad) mov pop (bad) adc jmp rex.WB rex.WB jmp add jbe xchg jne add mov andl xorb jge stos fcmovb mov (bad) out mov sub fbstp mov xorl xlat andl fiaddl (bad) movabs sti sub fiaddl out pop and (bad) stos (bad) or rex.XB fldt xor and pop cmc xchg fwait out mov (bad) jrcxz callq rex.X mov imul and repnz pop add jle xor mov and adcb mov adc insb hlt not adc jns ds adc (bad) mov pop (bad) mov lods rex.B sub xor clc icebp xchg cmp or rcll cmc jne adc out push xchg adc in (bad) imul retq (bad) repz adc push rex.RB fistl rex.WB jb cmp xchg pushfq (bad) xchg mov (bad) push pushq adc sub movslq rol fmull lret mov cli mov jne out jge (bad) movsl ds add rex.WX pop mov adc imul or jno (bad) mov (bad) xor adc rex.WRB gs data16 retq (bad) mov ffree jb or add adc (bad) in xchg adc cli cld xchg and adc je mov cmp (bad) mov (bad) psllq adc fdivrs rex.WR (bad) sub xchg cmp and push mov movslq clc movsb xor xchg cmc pushfq callq (bad) std cmp movabs mov (bad) cli cwtl loope (bad) movabs and lea (bad) negl add pop push pushq push or adc and movsl xchg (bad) (bad) (bad) cmp adc jmp pushq xchg sbb movabs mov (bad) and cmp jo and jne (bad) (bad) mov rex.R scas adc xchg jae sub fwait cli (bad) frstor loop push fwait jno (bad) sahf lock retq lock lret xchg jnp (bad) fidivr mov fcomip and and cld pop movabs add retq and or (bad) sarb cmp cwtl fstl (bad) jne xchg adc mov adc (bad) adc xchg pop (bad) (bad) (bad) gs rex imul xchg xchg mov (bad) (bad) jp (bad) (bad) lret (bad) (bad) sub movslq (bad) fmull enterq (bad) (bad) mov int3 xor pop movsl mov cmp (bad) sbb cltd lock cs out push mov sub fdiv xor push cmpsl jnp sbb rex.WRX cmpsl pop jb incb imul jle sbb movabs add scas xor fisub testl (bad) add int3 pop jno std lock mov test fdivl xchg rex.WRXB shlb lods pop scas (bad) lret push test adc pop je and push movsl push rex.WXB movabs xor and rex.XB mov push js (bad) repz leaveq pop fsubl xchg and jp test push push or cltd sbb imul (bad) xlat subps (bad) push js shlb addl or (bad) (bad) cpuid and rex.WX and sarb adc add int3 rex imul lahf xor jbe (bad) hlt xlat or scas mov rex.RXB in (bad) sub rex.WB lock retq add out sbb gs loop xchg outsl mov jno jno (bad) add jmpq (bad) rex.R leaveq ljmp sub mov mov cmp js mov jmpq test and mov rex.XB rex.R xchg cmp (bad) js test jrcxz mov adc and fsub fisttpl sbbb push xchg mov in fistl cmp enterq sub es insb adc ss xchg jge adc (bad) fildll iret adc jrcxz adc or es (bad) (bad) adc push negb fwait fs std (bad) adc xor xor push clc fs outsl sub rex jno sbb (bad) (bad) xor adc or (bad) rex.WR mov mov gs rex stos rex.RB clc mov jae fildl cmp and adc js rex.X xchg mov fdivr sti (bad) adcl out or adc xor pop sbb ficompl fwait movsl movabs rex.B rex.XB rex.WRB jl jl or movsb (bad) pushq fcmovu cli jge je and (bad) test mov add sbb and and pop rex.WR add sbb (bad) (bad) jb movabs mov rex.RX std cmp rex.WXB mov rex.R stos mov jp js cmpsb jmpq lret (bad) (bad) sbb xchg xchg incb out xlat pop adc rex.WRX in sub repz hlt sbb (bad) (bad) (bad) mov adc movsb cmpsl cmp fistl rex.R and (bad) push test sub jae jg mov mov mov mov scas mov in sbb add enterq jge adc mov adc xchg notb or mov adc (bad) (bad) adc pushq adc fistl cli (bad) fsubrp push cld push rex.RB (bad) adc jp rex.WB mov xor and push (bad) movabs jae cli cltd jl xchg push mov lods movabs out out jrcxz or xor rex.WXB adc rex.WXB sbb and rex.XB repnz mov xor pop (bad) add cmp and jmp jg out or (bad) insl sbb sub subb jl push gs iret adc xchg rorl sbb (bad) rex.RB xchg jbe divb fistpll or notl mov mov push and mov jg out notb sub lock lods (bad) movabs fdiv nop pushfq (bad) mov gs add (bad) mov (bad) sub clc pop xlat pop ds or incb adc (bad) jge rex.W leaveq pop or (bad) movsb stc fs xor xchg pushfq xlat pop (bad) cltd jnp push or icebp xchg cmp sbb (bad) xor addr32 jg sarb mov or repnz xchg and insl mov (bad) mov int or (bad) jne xlat (bad) xchg (bad) mov fdivrs sub jmpq test rorb adc cld (bad) int3 je fnop fcompl (bad) cmpsl rex.RX test rex.WRX stc jp (bad) sbb mov push outsl leaveq mov mov rolb adc fucomip movsl lock rcrl (bad) xchg test retq or cmp int adc (bad) icebp lock pop (bad) (bad) or add sbb out sub lods (bad) std test xchg (bad) jo push repnz xchg sti (bad) and insl enterq incl cmp mov jmp adc pop add jne or callq (bad) push enterq mov movslq mov outsb mov xlat lock insb (bad) leaveq adc mov stc rex.WRXB in movslq xchg rex.WXB in (bad) hlt cmp cs (bad) adc pop adc and rex.RB (bad) lahf cmc jne adc (bad) or xchg mov outsl cmpsl leaveq add sub rex.RX adc push push cli rex.WR adc mov pop loope mov jbe (bad) adc or jne (bad) pop pushfq (bad) adc movsl (bad) mov sbb int3 mov adc test jmpq nop fs (bad) adc cmovle fxch stos xchg mul (bad) or xor (bad) lock callq push stos lock es scas adc lock cmp mov push (bad) or or push sbb test push mov idiv jp rex.WX lock add add cmp (bad) xchg ss mov xor adc (bad) imulb callq (bad) mov out xchg cmp test xchg stc (bad) push mov jae (bad) lahf (bad) int3 mov mov in jno enterq or pop pop adc ss push setb addr32 cld adc lea rex.B xchg pushfq iret pop jno cmc rex.WX fdiv callq xor (bad) cmc stc adc jne jge (bad) (bad) lret or es (bad) (bad) jo outsb movabs movslq pop rex.WRX (bad) enterq mov cmp sbb (bad) mov and cmp rex.WR mov out (bad) (bad) adc sub (bad) (bad) je xchg (bad) movabs (bad) loopne (bad) cmp xor mov mov or adc mov sub mov pop mov rex.XB lahf (bad) subl (bad) callq std mov and push (bad) pop movabs setae pop mov pop pushq jbe xor idivl cmpsb and cmp popfq ss adc sti (bad) rex.XB lock lahf adc fucom hlt rorl rorl cmp clc (bad) (bad) sahf pushfq pop push jge loopne or pop sub out adc (bad) repz sbb test add rex.X movabs and add in or cld xor mov add jrcxz clc mov mov stos out (bad) sub clc ds stos (bad) (bad) in test retq (bad) out lret popfq imulb stos js pop rex.WRXB pop (bad) mov or test xchg (bad) (bad) xor jne jns mov test fidivl adc sbb mov clc rex in icebp push cmp cltd add push or movabs es pop sbb fs in pushq roll or fisub rex.WRXB (bad) and cmp nop mov rcl or bnd hlt adc jg add insl (bad) jnp (bad) int (bad) int3 sahf out movsb mov push xchg fstpl or sub xor and (bad) clc fildl mov gs or rex.WR icebp mov sbbb (bad) adc jg rcrb adc rol adc mov rorl cmp and (bad) cmp cmpsb sub es cmp mov mov (bad) sbb out callq sbb cmp lcall test rex.WRXB (bad) xchg sub rex.RX test or fcmove rex.B pop xor pushq (bad) sub jmp sahf (bad) movabs imull (bad) push mov (bad) mov sbb mov xchg jl rex.WB int3 cmc xor rolb mov rclb mov jo fsts pop pop movabs (bad) (bad) sub or andb add out add and mov lods rex.WR in mov mov or mov cmp shlb (bad) icebp lock adc rex.WRX iret (bad) push fcomps jrcxz cmp insb (bad) (bad) adc mov sbb movabs jle movsl in cs xor roll imul pop mov (bad) (bad) hlt or mov (bad) in movabs int mov repz xor cmpsl cmpsl es cmp adc push jne push cmp movabs mov mov (bad) xor mov xor (bad) repnz push mov (bad) fprem (bad) (bad) add xor cmp adc (bad) mov xchg stos or (bad) callq adc xchg adc repz rex.XB or mov fs cmp js fisttpl adc rex.RX repz rex.RXB fs add movsb movl (bad) sbb jo cmp add cld callq jmpq jp mov mov pushfq xchg adc cmpsl scas jbe rex.R (bad) cmp (bad) and jg adc fwait jb jge mov clc pop sahf clc and or xlat (bad) addl popfq pop sbb (bad) shlb movsb adc cmc mov mov (bad) lods rex.WX je and lods add fldl sub sahf rex.RXB pushq adcb cltd js mov jmpq adc out jne push adc cmp movsl jg rex.WXB sbb (bad) (bad) insl in pop scas xchg or int movslq push xor and mov (bad) in jrcxz (bad) fidivr rex.RXB stos clc (bad) push jno add cmpsl jg movslq adc adc mov (bad) repnz mov xor xchg xchg (bad) xchg mov adc and leaveq mov cmp jno enterq movabs rex.RXB rex.WRB ja and stos popfq (bad) (bad) (bad) lea (bad) (bad) adc (bad) lret notb (bad) adc cwtl push pop (bad) gs adc test sbb xlat jbe push int xor adc rex.XB es js scas and jrcxz lods outsb add jl (bad) clc in jno xchg push (bad) mov adc cmp sub xor sub xchg movsl adc rex.WR scas xchg adc mov adc xchg sub mov pop out adc add xor retq pop fcompl fwait jp mov rex.WRXB cmp add add or xchg jo xor nop xchg pushfq std popfq sub xchg xchg sbb pop loop add (bad) rex.WRB rex.WXB jno js clc rorl and mov and (bad) cltd xchg xchg stos jb xlat rex.X fldl je cmp out adc jg (bad) cvtdq2ps jp fwait mov adc std mov mov sbb icebp fdivrl or mov mov repnz movl cmp cwtl (bad) or lods cmpq (bad) mov push (bad) and repnz xchg ds rex.WX adc xor (bad) (bad) shl js adc test test fwait mov (bad) callq and test lahf addr32 and add pop jns scas and mov in mov cmc imul jg sub insl cmc xchg movabs cmc callq pop mov (bad) jl mov rex.WX js or rex.XB (bad) push cltd std (bad) (bad) xchg sub xchg fs pop xor pushq ss adc sub fwait cmp fbld (bad) or adc or adc mov out mov xor mulb lods int3 cmp add pop (bad) icebp push xchg sub cmp andb rex.XB cmp cmp out rex.WXB jmpq sbb movslq adc fisttp or (bad) jmpq adcl out movabs movsb (bad) mov cmp and and xchg lock cmp mov jns adc rex.X lret out ja (bad) pop add mov outsl out cmc sbb out and retq (bad) roll loopne loop rex.RB cmp subb loopne add cmp lret or lods (bad) movabs sti icebp (bad) in fwait retq rex.WB movsb xor ss xchg jmpq out push fsubrs mov imul (bad) rex.WB pop icebp rex.RB adc movabs xchg adc adc mov sarb add add pop rcrb cli repnz rex xchg rex.R sub (bad) sbb shrb test data16 sub (bad) fwait shrb adc xchg mov push mov (bad) ds xorl out pop rex.RXB jge in callq outsb movsl fstpt cmpsl xchg push (bad) cmp (bad) or mov in pop rex.WXB adc outsl jbe lret mov ss sbb cmpl xchg (bad) (bad) repnz andl add (bad) pop (bad) xor in callq jns jmp mov (bad) popfq sub sbb callq (bad) retq rcr cli lods sub in or jne retq (bad) rex.WRB cmpsl (bad) mov sub cmpsb cltd jno (bad) cmp cmp jge sbb mov and mov loope adc add test rex.RB or add push jrcxz or test mov sbb rex.B retq push jb rex.WR lea (bad) xchg (bad) fistpll (bad) stos add loopne mov incb jne and sarb sbb imul (bad) (bad) orb (bad) mov jne push mov (bad) adc add (bad) mov (bad) mov shlb cwtl pop sub (bad) int3 xor outsl xchg adc add pushq adc push sbb adc (bad) (bad) rex.R es xchg ficom divb fisub sbb adc sahf (bad) (bad) push je outsb (bad) incl out leaveq mov movabs mov cltd jae int3 (bad) imul xor mov pop xchg mov mov clc jge push fldenv jnp andb (bad) push xchg adc sbb (bad) xor mov rex.RB movabs rcll and cmpsl rolb sbb pop push mov add je mov stos outsl movabs jmp adc cmp jns sahf jl sub repnz push and movabs hlt jnp xlat test (bad) or mov callq rex.W test stc pop rex.RXB xor roll mov push rex.WB cmp sub cwtl scas jmp mov fdivrs mov stos mov lahf pop (bad) cmp sbb or outsl (bad) xchg lock (bad) icebp mov cmc xchg ror or xor mov and js out sub cld adc retq insb add xor and movabs test mov cmpsb xlat rcrl lret rex.RX std mov in rex rex.RXB adc (bad) adcl sbb popq lret ds in rorl pxor (bad) sub (bad) jnp rex.W xchg int3 (bad) (bad) cmc lret rex.WRB std sub jo in insl or (bad) js addr32 (bad) cmpsl (bad) rclb lahf callq (bad) xchg push (bad) push add movabs fst cmpsb movabs (bad) loop rex.WX fwait jmp imul mov mov ror sbb int3 loopne mov xchg lea or or (bad) imul adcl mov xchg push xchg xor xchg adc (bad) cli test jb and fdivrl (bad) or repz cmpsb (bad) js rex.RXB sbb jnp adc lods rex.WRX cmp fs stc popfq add rcrl rex.RX mov int3 fimul movabs out movslq rex.WX mov in clc std fild test adc in rex.B ss adc (bad) (bad) subl (bad) xor or mov notl lret push out sub cmp jrcxz xchg push cmp jmp adc icebp xor and add rex.WX xor add lea clc (bad) fnsave test in movabs ja test cmc push movabs pop je rex.WR (bad) jnp movslq and rex.XB or cmp (bad) xor idiv xchg imul mov fidiv xor sbb repz rex.RB xor int3 (bad) rex.WXB fidivr (bad) jno outsb rcrb rcrl add rex.RX fwait loop movslq sub jmp xor adc (bad) fmul sbb ja jne mov or adc scas scas push mov adc cmp cld sahf (bad) rex.X pop mov callq and adc rex.WR sub popfq test mov and jae adc jp adc cli sbb (bad) cld mov push (bad) cmc mov sub adc rex.WRX mov (bad) sub jae adc andb add xchg sub sbb sbb in mov rex.WRXB adc in int3 and lret callq sub mov jbe rex.XB and in scas in (bad) es sbb push rex.RX movabs jne jrcxz cmp (bad) fnstsw je out repnz cwtl callq add iret mov (bad) mov (bad) test adc cmpsl (bad) (bad) mov rcrb (bad) rcrl (bad) in jno add pop or fwait sbb test mov sbb retq add add imul sub mov xor stos cs sbb fldcw (bad) repnz imul rex.RXB jno (bad) nop callq xor hlt stos cld out jmpq int3 cmp je (bad) and mov xchg or insl adcl xor bswap or fbstp (bad) mov xchg insl sbb enterq mov pop std (bad) (bad) adc mov mov loopne adc or movsl in xchg (bad) adc xchg (bad) and mov sub adc adc (bad) jae iret lock repz sbb loopne and callq (bad) sub sbb mov imul fst or pop xor adc adc lea out jb sbb insb rex.WRX out adc and (bad) out iret clc xchg sbb pop xchg callq lock insb mov or (bad) enterq mov (bad) sti pop mov es and mov and cmp xchg push je or outsb loope rex sub adc (bad) cmp ja and (bad) push adc cmp sub hlt xchg (bad) fst xor cmpsb adc (bad) enterq mov and jo (bad) movslq xor push mov test movsb (bad) adc and imul mov rex.WRXB rcll cld cltd sbb out int rex.XB leaveq mov xchg rex.X jmpq fisubl mov scas in xchg movabs imul stos pushq shlb adcb sti rex.RB rex.WR scas (bad) es out adc add xchg adc gs (bad) mov fnstcw cmp or or out mov push add add leaveq repnz xor xchg rex.XB mov rex.B cld clc (bad) mov rex.X orl sbb hlt push sub addl pop (bad) stos rex.WR (bad) rex.B jg out out (bad) retq lock (bad) sbb ficomp and xchg sbb mov mov (bad) xorb (bad) mov jmp rex xchg jnp sub je pushq adc push jb sbb out (bad) movabs or rex.X adc or xor mov (bad) (bad) fmull negb sti (bad) pop adc rex.WRXB rex.X xlat rex.WB (bad) in lock fxch mov sbb and mov xchg add sub adc mov cmpsl (bad) jnp and push fstpl add rex.WXB pop clc or rex.W sub fstps jp fst movslq adc push cmc adc mov xor pop mov mov stc xchg pop sub int adc cmp lock jne loop int3 pop hlt and loop and push lods ja pop int3 ffreep fdiv adc nop xlat xor jrcxz scas mov bnd out add cmp int3 mov lcall push (bad) sbb and rol stc cwtl push mov cltd stos pop mov (bad) icebp mov sar sub sbb std sub cmp hlt int3 shr pushq cmp jge lea sbb adc pop pop rex.WRX int3 adc (bad) mov (bad) add (bad) stc movabs sbb add jle int3 pushfq (bad) (bad) rex.WRX rex.RX rex.W iret (bad) in adc sysret xor adc jno lods out or and jns (bad) adc scas and add (bad) out (bad) (bad) movabs scas repnz xor (bad) adc rex.WRXB fildl (bad) xchg fistp and lahf (bad) lahf (bad) jbe pushq mov fadds and (bad) mov mov movabs retq fisttpll (bad) movabs scas or roll push push in clc popfq repz and push mov loop loope push pushq lods mov add jne lret (bad) shrb add stc rex.RB int xchg (bad) mov callq mov int and outsl rcrb jmpq (bad) mov push lret rex.WR enterq movabs es enterq and movabs sbb xor rcl and movabs fsub xchg fistpll movsb pop mov lret pop jne adc mov add (bad) idivb add sub cwtl xlat mov push rex.W std rex.WRB pushfq test push fsts out adc fcmovnbe (bad) push rex movabs mov scas jmpq scas jo xchg jg rep rex.W cmc adc add lret shrb fdivr movabs mov adc ds xchg xchg clc (bad) cli add (bad) mov in outsb fstp xchg fs (bad) jmp and (bad) adc lahf (bad) xor out mov (bad) rex.WB enterq rex.WB adc xchg test adc ficomp (bad) adc test out jrcxz pushq jo fcoms in cmp mov outsl rex.W (bad) adc jno std movsb and adc adc or adc lret (bad) fdivrs int push test jo mov mov pushq and adc (bad) adc (bad) ja xchg adc jl cmp jbe rex.X cmp fwait pop add (bad) mov and divb out rcrb or mov cmp sub xchg adc sbb adc rex.WX lods scas adc mov rex.RB rex.WR rex.WRX adc int3 scas push jb fs or adc mov fbstp xor rex.X in (bad) adc (bad) push cwtl sbb xor stc enterq (bad) leaveq stc iret mov jmp or jo push and ss adc jne and lahf test cltd pop loopne and leaveq insl insb sub and fwait stos sbb (bad) fwait (bad) cli (bad) pop or adc xchg sarb sbb jae xor adc out xchg push push jmp adc (bad) mov adc or enterq cmp fisubl mov mov add add sbb loop jmpq scas adc mov push movabs insl jnp jmpq loope xor adc andl (bad) xchg shrl pop jbe out add mov xchg fucom addr32 (bad) int3 (bad) jne adc sub cwtl out (bad) xchg adc cmpsl movsb adc push xor movslq rex.RX adc test movabs cmp adc add push enterq (bad) movabs loop in data16 rex.WR cmp or gs cmpsl xchg jle (bad) mov or (bad) mov rex.X xor jno rex.WB jae insl (bad) jo (bad) in mov or cld pushq and fldt add adc stos test rorl push fcomp sbb (bad) (bad) pop cmc or rex.WR rex.XB lock clc mov fmuls (bad) pushfq (bad) mov (bad) fistpl (bad) divl rex.W adc adc push icebp cwtl negb adc in rex jbe xor fmul sub mov cmp enterq jrcxz outsl packssdw retq rex.WR ds test enterq rex.WR rex.RX or adc mov hlt sbb (bad) movabs cmp jp pushfq (bad) pop lret (bad) and cmp xchg sub cli rex.W enterq (bad) movabs (bad) stos leaveq xchg or nop and cwtl (bad) or adc (bad) rex.XB (bad) adc (bad) fdivrs rex.X sbb adc xor or fcoms test xor (bad) lock adc stos push adc stos out and sub cmp adc jge jo adc adc rex.XB adc xlat mov xchg test callq add movabs jb rex.RXB rex.XB mov (bad) jle fcomip (bad) addb cld sbb js mov (bad) fisubrl lahf scas loope xor rorb int3 mov ja adc cs sub ja add mov and rex.RX rex.WRX jnp lock add mov or js jg movabs xor adc push orb sbb mov xor (bad) xchg push retq lock (bad) jge jge xchg mov (bad) std (bad) mov jnp (bad) movsl scas fsubs movsl nop rol rex.WRB es rex.RB rex.X xadd movabs callq rex.X rex jle and rex.B jl mov pop movabs out (bad) pop jmp nop nop lcall (bad) sar rex.WR rex.WB and mov or (bad) fsubr and add (bad) stos (bad) lret rex.RX and fbstp xchg (bad) fwait cmp repz (bad) outsl adc andb cmp not loopne or mov add andb enterq add test out idivb xlat int3 fdivs pop rex.WRXB retq int3 add cwtl imul mov mov stc sarb leaveq xor xchg xor push sub (bad) mov addr32 mov sbb jae imul add orb (bad) cmp mov push (bad) out pop jne ficoml fs lret in or ja out (bad) jbe adc popfq mov pop or (bad) loope mov push (bad) nop fnsave xchg rex.WR int3 insl sbb rcrb in mov mov and subl (bad) xor (bad) rex.X adc xchg out push sub rex.RX xchg rex.WRXB (bad) jnp std cmp rex.WR and push retq sub and movabs data16 (bad) adc or sub mov and mov icebp jp push xlat in mov fmuls xchg ja ss push ficomp cmpsl rorb xor jbe lahf (bad) jp enterq jle xchg xchg clc rex.WR xchg fcomps insb xchg andb cmpsb pushq adc nop or (bad) imulb mov or lock rex.RX (bad) lret add rex.B mov or (bad) jbe insb xchg icebp callq cmp jno lahf jmp lahf movsb subb (bad) mov test rex.WXB mov insl or cmpsl (bad) xlat out cmp sbbb (bad) cmpsb ja,pt shrl mov insb rorl jns adc rex.RXB out xchg pop (bad) push icebp (bad) (bad) (bad) mov loope xor sbb rex.WR (bad) mov sti fdivr (bad) pop mov rex.WX (bad) xchg lret (bad) mov retq mulb jp rex.X jl xchg out cld add pop in callq push je out mov subl andl divb push enterq xor (bad) (bad) cmp cmp push sti or retq xlat rex.WXB lahf add sbb xor push loopne xchg or movabs pushfq cmpsl push out and jp sbb lods add push setle add sub or stos nop xor (bad) adc (bad) sbb add clc add callq (bad) xor (bad) movabs callq (bad) or add pop scas imul (bad) cmp or sub and rex.WB (bad) rex.XB xor sbb mov notb retq xlat and (bad) (bad) mov mov retq fdivs retq cli xchg fxch adc add repz jb rex.WB and adc pop and xchg insb jrcxz rex.XB adc add movabs callq or fidivrl imull movsl mov lret callq (bad) push (bad) pushq loope subb mov mov jns cmp add (bad) pop fs xlat (bad) in fcomps add sub js (bad) hlt (bad) outsb rex.WR iret mov leaveq (bad) sub mov lea lods mov or rclb (bad) mov insb repnz (bad) fist data16 movabs ljmp adc shrb pop out add xlat cmc (bad) sbb ror mov enterq cwtl (bad) sub rex.WR es (bad) mov (bad) out fs cmpsl xchg callq add stc (bad) sbb repz sbb stos adc or cmp mov adc retq fsubs xchg (bad) sbb cltd and pop ss rex.W movabs (bad) cmp cmp fdivrs mov (bad) ja je (bad) rex.RB push (bad) adc sahf rex.WXB jno (bad) (bad) (bad) push imul test loopne adc in (bad) rex.WRX xor cltd ficompl xor add (bad) xchg adc rex.RX (bad) xchg add je (bad) xor movabs adc jne adc (bad) xor jns js (bad) stos enterq jb fcoml loopne sub adc add lods xor xchg iret xchg ja rorq scas pop pushfq adc callq jae clc push push and (bad) xchg rex.W rex.W rex retq scas adc (bad) rex.X xor (bad) mov adc stos mov rex.B mov mov and (bad) ss and mov nop mov js cmp mov rex.WX push movsl and (bad) cmp or or or ja rex.B cmp movsl enterq ficom or movabs in (bad) rol jo (bad) callq sub repz cmp lea or mov test and retq mov lock jbe adc scas adc cmp test (bad) mov (bad) xor cmp stc fsubs movsb rex sub notl adc jbe sub or lret mov xor sub (bad) pop and adc movb sub xchg (bad) jge sub mov sbb pop cltd decl rcrl adc add cld jne jrcxz (bad) xor ja sub xor (bad) adc clc add (bad) add sub pop xchg lahf (bad) (bad) mov addb cmp (bad) clc rex.B adc sub add or movslq xchg lret faddl movabs rex.R add or gs mov scas int cmp add out enterq sbb mov test (bad) (bad) mov outsl push (bad) hlt (bad) or mov stos cmpb and pop loop popfq rex.W add and cmc fs ja es sbb xor jle add (bad) jb,pn in adc in adc xchg jl and orb jns lahf (bad) adc fst movabs hlt push popfq fcmovnu rex.XB jge adc (bad) mov pop mov mov adc movabs sub in cmc loope adc fidiv idivl in mov cmpsl xchg jno or pushq adc xchg cli outsl xchg (bad) scas test mov adc push cmp test roll (bad) push mov movsb divb rex.XB (bad) testb xor (bad) nop and sbb hlt sbb sbb (bad) in lret jle pop jg mov leaveq pop ds int3 loopne out mov lret bnd rorl fs sbb pushq push xchg sub movabs lea xchg sub jne callq xchg rex.WX push xchg xor jge xlat xcrypt-cbc cmpsl adc mov int lods mov imul pushq rex.RXB in pcmpgtb (bad) or pop (bad) adc sbb cmc imul mov and fistp pushq movsb repnz mov sbb sub (bad) push in push xor mov cmc cld adc xor test xchg movabs notl pop fmull sub (bad) xchg std jg ss jmp (bad) or cmpsl push callq callq out add fcom pop adc pop and rex.RB out test rex.RX movabs xchg or mov out add fisubl divb or push callq and mov movslq lret rex.WRB jmp loop cmp std cmp movslq sub repz rcll ja mov and scas (bad) test (bad) cltd pop test in (bad) rcrb rex.RX shlb (bad) xchg push pop jl fnsave cmc adc (bad) (bad) mov sbb rex.R mov lock mov push scas push jbe pushfq lahf adc imul pop push (bad) imul (bad) cmpsl js xor retq add (bad) sbb cld in xchg sbb (bad) movsl clc adc mov pushq jns out imul push adc notl and adc adc and mov adc mov (bad) addl pop jge jmp push (bad) adc es clc mov pop rex.W xchg push fwait idiv or pushfq and adc or insl sub push rex.WR fistpll (bad) xor insb rex.WRX xchg jle in jae loope mov cmp mov xchg mull xchg adc loopne in xor or negl push (bad) movabs rex.B lock mov push out ss out (bad) jnp pop lock jmpq xor leaveq mov out repnz (bad) push (bad) lods adc xor (bad) jge (bad) adc in (bad) add mov (bad) (bad) adc push ja callq leaveq je (bad) jne mov (bad) outsb popq fimull jl sub sarb xchg pushfq outsl lock lock push cltd (bad) rex.WRX (bad) (bad) or mov jl or add (bad) movabs sub fimull stos ficomp fmuls or jp adc (bad) fwait and jb (bad) push jno jo fcoms test jo repz fstpl lods cmp xchg and sbb (bad) fsub rex.WXB and xchg (bad) sub xor mov cmp rex.WRB jge jno mov push (bad) (bad) pop out jp fwait stc (bad) repnz sub push rex.X repnz repnz add add cmp pop mov fwait adc cmc out rex.WRX sarq or and mov shrb push cli rex.RX adc pop lock in fwait mov mov fbstp cli (bad) and adc negl sti movabs xor add retq ja decl sti jl rex.RX clc jmp clc sub adc mov push sub sarb (bad) rex.WX push mov enterq xor jge fcomi (bad) mov test (bad) int3 push push (bad) jne add (bad) fsubs movabs in jns mov adc xchg mov fnstcw cmp sbb pop in xchg sub pop insl (bad) out lock push movsl or jo (bad) mulb or int3 adc sbb rcrl rex.WRXB movnti mov repnz mov out xor andl es adc ds mov mov sbb add adc rolb xor movabs and (bad) lahf loopne jmp (bad) fdivl jns out rex.R mov push jno lea cs adc sub scas in testl adc lea mov (bad) or mov loopne mov sub in xchg xlat (bad) add movabs int int3 mov retq adc push cmp mov int3 sahf pop mov sub bndldx sub add rex.WX (bad) adc sbb callq (bad) and fs and and mov mov lahf (bad) sar (bad) mov jo js xor (bad) adc rex.WR jns scas cltd in mov lock icebp push roll (bad) (bad) mov cmp xor sbb sbb movabs fs pop rex.WXB rex.R rex.XB es xchg jne rex.WR or movabs fwait divb add rcrb pop ss adc lods sub cld add push xor rex.WX movabs loope mov cmc or and movabs jne mov fwait repz (bad) mov adc add xchg push mov add or test and mov imul (bad) out (bad) insb lret sbb (bad) rex.RX cmc cld (bad) (bad) xchg jle and pop fcmovnbe push mov cmp in insb xchg cmc (bad) int3 adc outsl repz xor xchg fwait stc (bad) enterq sbb loopne (bad) (bad) mov add insl (bad) pop rex.RXB (bad) orb mov adc ja sub adc (bad) jae movb ljmp cld rex.WX movabs mov hlt ja lahf lcall es repnz add scas imul add xor sarb xchg add sub cmp or idivb mov xchg (bad) mov (bad) rorl lods rex.WR rep rex.WRXB rex add or rex.WX rex.WXB sub int lods std (bad) add mov jno lods sbb xor xor lahf icebp mov xor movabs cmp cmp pushq cmc fdivrs popq pushq mov sbb pop add out lahf ds lods loope mov mov add movslq add (bad) fwait retq cld jmp xor rcrb callq mov jrcxz or in add pushq gs outsl mov (bad) (bad) (bad) fdivr xchg retq sbb sub addl rex es push std stc mov hlt movabs mov sub incb (bad) and ficomp pop jle test mov add jge rcl rex.R rex.RX add outsb rex.WB (bad) (bad) rex.RB fmuls js rex.WR cmpl data16 jno psrlw cmp mov sub (bad) enterq xor (bad) ror out setae jbe es push jne (bad) xchg shr and add add pop rex.WRB ds stos nop enterq jmpq sbbb jne ss sub push adc cmp cmp xor cld mov addr32 xor mov pop sub cltd adc out xchg jne std (bad) xor jmpq je adc jrcxz mov cld or (bad) fsubs scas fdivl xchg (bad) rex.WXB (bad) or repz adc fsubrl outsb xchg lock pop (bad) rex.RXB xor xchg sub adc sti mov or xorb (bad) mov jo adc out xchg mov or pop cmp pop fs (bad) movabs mov int mov and fldz rorb and add mov enterq (bad) out cmc and sbb mov sbb cltd movabs fcomp push ja cld lret jno cmc (bad) xchg sarb adc jg in xlat rex.WR rex.X pushfq rex sahf jrcxz sahf fisubl es xchg (bad) mov insl je sahf repz (bad) mov decb (bad) sbb or in in iret loopne mov out cmp mov rorb outsl (bad) out sbb fcomp xor sub rex.WRX cld sbbb rex.RXB adcl xchg out jrcxz mov and add std xchg pop lea outsb roll lret cmp rex.XB sti (bad) jle (bad) (bad) sub add adc xchg (bad) (bad) rex.WB rex.WX adc adc pop cmp movsl cmp cmp sbb fildll in xchg popfq sbb sbb push xchg sub (bad) es imul sub xor ss fldenv movsb lret xchg or push lods ss mov pop adc ds std mov in cltd and mov and cmp fwait popfq testl movsl pushfq nop xchg (bad) enterq cli mov push (bad) (bad) xchg ja (bad) rex.RX (bad) adc mov adc lods (bad) (bad) xchg jbe mov rolb (bad) scas xlat or enterq js xchg and mov mov fistpl add or jo callq sub icebp mov and std add mov push test (bad) (bad) rex.WRX insl mov (bad) sti jg mov out rex.R cmpsl (bad) shlb and mov fadds sbbl rcrb adc (bad) clc ficoml addl (bad) adc fcomip sbb rex.RX add or sub test xchg xchg loope adc add cmp and std test out out xchg xchg add (bad) fcomps in data16 push pop pop adc clc (bad) sbb (bad) ja jg push add pop sbb retq sub fs jge pop fidivr rex.XB test enterq xor (bad) jle lods movsl imul rex.WX jmpq jrcxz rex.WRB xchg sbb fs or fwait mov sub (bad) test imul jae mov (bad) sub xchg sub fsubs mov fs adcl (bad) repnz stc cltd lea or (bad) mov fsubp sbb (bad) jo (bad) test adc (bad) push leaveq pop adc and mov int3 jae icebp (bad) int3 addr32 xor pop outsl (bad) (bad) sub (bad) mov movabs mov push test pop fnop xchg jae (bad) sub (bad) sub sahf mov add out mov jo negb lods push movabs jne,pt pop fisttp sub repz (bad) or add mov add icebp add sbb addb xchg xor xchg mov add sarl cmc cmovno (bad) retq (bad) sub (bad) xor sub add sub repnz adc jbe lock movabs jmp fs pop test sarb jg movsb (bad) rex.X fimul hlt jrcxz sbb mov mov xorl jle (bad) out xor not hlt enterq jo sbb rol and jle cltd (bad) fsubr jns or lret rex.WRX xor lret xchg callq ja rex.XB sub fildll outsb repz insb lods push jp cmp xchg movsb xor movabs (bad) xor fisttp push or callq and pop hlt pop (bad) or jg movabs bnd mov xchg int rclb xchg xchg jg cwtl xchg sub (bad) jmpq stos jnp cmp (bad) scas jno push sbb popfq jmpq subb (bad) adc jp and out imull (bad) (bad) add jnp retq out xchg test fsubs popq adc xor mov jge ds out lea callq movsl mov outsl sub out (bad) xchg adc rex.WXB or adc cmpsb cmp rex.WRX cmc callq retq (bad) fldt enterq rex.XB push rcrl cld test loope insl mov jl mov (bad) iret fsubl shlb add sub and (bad) (bad) cmpsl mov and push push hlt jns mov xchg sbb adc (bad) xchg adc unpckhps fsubrl mov xchg xchg mov add or adc xchg sti xchg (bad) fldenv sub rex.B iret rex.WRB movabs xchg mov (bad) xchg test mov adc jrcxz add (bad) fadd xor (bad) sbb cld (bad) cs sti std sbb xchg cs push fstpt rex.R mov es cltd push jo xchg xchg pop or cmc jl test rex.RX jo (bad) cwtl rex.XB and fs loop adc add and xchg fwait jns and or pop pop adc xchg adc sahf out lods clc (bad) int3 in xor (bad) jge movsl in adc rex.B lods callq mov pop jmp gs sub es movabs or (bad) (bad) (bad) cmp jae (bad) out insl scas xchg test adc add test (bad) fdivrs sub (bad) imul cld (bad) adc rex.WRXB cltd cli adc and xchg mov xlat or (bad) mov idivb callq cmpsl cmc adc lods rex.WXB adc cmp mov imul movslq rex.WXB xor pop int movabs xor (bad) cld fistp pop xchg out xlat in mov ss (bad) jne fmuls out clc callq pushfq lahf outsl movabs (bad) (bad) (bad) or jmp sbb and or xchg fcomp outsl xchg jb retq outsb (bad) imulb (bad) or (bad) out pushq (bad) and (bad) mov popq (bad) divl repnz add pop jnp mov lock out xor in rex.WRXB ja or fcomip fcoms mov sahf pop push jno mull mov jae pop mov pop test add xor loopne (bad) testb xchg or push sbb jno repz callq (bad) cwtl (bad) rex.WRXB hlt outsb outsl adc movl xor shll and insb (bad) push sbb adc rex.B mov movabs (bad) cmc mov add cmpl mov sub out lret (bad) rex.WRX mov (bad) mov jle xchg rex.XB addl jns rex.RX push rex.W sbb mov mov mov mov add (bad) jle xchg cmp or rcr (bad) or xchg mov fldcw xchg (bad) mov jb clc std in movslq enterq adc cmp xchg cltd (bad) (bad) adc repnz ja xchg add adc (bad) mov icebp rcll out cld lahf ficomp fwait orb sbb pop repz retq adc movsb data16 leaveq adc test (bad) or adc fsubs jae and sbb (bad) out (bad) outsb jno flds adc sub or fidivr popfq pop adc add rex.RX push (bad) std jg pcmpeqw in jno (bad) cmp mov cmp rex.WX mov lahf lock rex.WRB mov (bad) movabs callq loope movsb fs rclb rex.RX rex.WRB xor test fmull je xchg ja in or lods xor adc (bad) fistpl (bad) test cmp movsb (bad) pop or xchg scas stos in or mov (bad) adc rclb test pop jrcxz gs (bad) xchg mov lods xlat (bad) (bad) mov retq sbb xchg rex.WXB std cmp and (bad) jg mov xchg (bad) jge or (bad) testb or add clc (bad) notl mov jno and out enterq mov jne and lods lock mov (bad) scas and (bad) mov cli rex.WRXB xor lea loope cmc push mov push test adc (bad) in cli sbb (bad) lock adc (bad) sahf adc lahf cmpsb xor xor loope fmuls lock and movabs xor pushfq pop xchg pop mov or adc pop (bad) xor mov lahf cwtl mov cmp (bad) rex test adc movabs xchg push stc sbb jg pop and xchg cwtl mov xchg adc pop clc mov lods mov repz xchg out xchg xor sub add out and (bad) and in lea (bad) outsl and cmpl sub (bad) rex.WRXB pop xchg out cwtl rex.X (bad) sub adc add cltd enterq repnz frstor add sbb or jbe (bad) (bad) fstl sub rex.RX faddp rex.W adc mov adc jbe (bad) test (bad) rex.RX jl sbbb (bad) rex.WRB rex.RB loop sub gs xchg insb adc mov clc rolb (bad) sub mov insl mov or (bad) rex.WRB mov and adc mov data16 add out sbb adc (bad) cmp (bad) add (bad) mov jl or or retq pushq (bad) packuswb lea mov xchg (bad) sbb (bad) fldenv insb lock cmc adc rex.WRXB (bad) cmpsl fistpl push jo (bad) jno iret outsb adc and lret sbb fdivl push jle adc mov (bad) ss je test lock mov xchg mov callq add pop xchg mov adcl rex and rclb jne ja pop cmp cltd (bad) mov rclb cmpsl cmp je and imul adc int push stc mov cmc jno loope sub xchg (bad) (bad) or adc js movabs adc (bad) repnz xlat rex.WRX shrl push cmp (bad) pop scas and push lahf enterq mov pushfq insl movabs xchg loop sbb xchg or (bad) cmp lock loop jno std lret sbb jnp clc sbbb xchg fstps out (bad) shrb mov and mov rex.RXB lret movabs mov sti (bad) (bad) and pop hlt sbb sbb (bad) xlat sbb and cmp jrcxz mov jp rex.WRXB enterq gs xchg rex.WXB mov fdivr js adc xchg sbb xor (bad) out es mov jl add scas rex.R sbb out (bad) push sub pop add rex.WRX rex.WRXB out fcoms rex.RX fwait cmp rex.RXB (bad) sti sbb pop scas (bad) push adc movabs outsb rcl xchg fmull add out leaveq (bad) mov nop jno cltd mov rex.WXB rex.WX or stos or fcomip test adc out (bad) (bad) adc adc jl lea adc push jmp adc scas (bad) rclb adc cmp in in enterq push adc push mov (bad) (bad) adc (bad) mov (bad) sbb mov sub rex.WX popfq mov jbe push cmp leaveq lret cmc adc mov loop test push jnp mull mov rex.X adc testb (bad) add out jrcxz xchg cmp movsl (bad) (bad) rex.XB mov adc rex.WRXB xchg xchg (bad) test imul cmp test stos clc or adc xchg outsb pushq adc (bad) out cwtl sbb movabs (bad) movabs fist add stos adc mov adc loopne (bad) adcb or insl (bad) loop fiadd xchg movabs fstps jg lock cli cwtl fwait jle popfq andb emms push (bad) ss jmp adc pop and sub push (bad) sbb ror push movslq push adc (bad) add adc orl cli (bad) cld callq xchg pop or rex.WRX repnz mov (bad) cmp es fnsave (bad) fsts mov imul jmpq (bad) sti (bad) movsb adc data16 (bad) cmc sbb faddp out xchg stos mov mov rex.WRB jbe ds enterq adc scas xor pop push imul adc leaveq rex.WXB mov jno mov (bad) mov sahf mov pop (bad) imul xchg sti (bad) pop adc add mov insb es cli push jo (bad) add (bad) xchg stc rcll (bad) pop xchg insl outsl movslq sub adc and xor std repz outsl mov cmp andl jle mov xchg and fcoml push pushq (bad) ffreep sub add adc sub jge rex.R adc adc sbb pop movsb cmp (bad) outsb (bad) je xchg xor (bad) cld (bad) sub negl adc (bad) int divb retq jrcxz rex.WXB mull lods adc mov and mov std mov jbe or (bad) retq (bad) push adc fdivp adc or rex.WRX mov (bad) push callq cmp loop (bad) adc adc cmpsl and frstor callq sbb mov add sub fsubl imul in jns test mov (bad) adc mov vunpckhpd (bad) in add outsl insb xchg adc jle fs (bad) (bad) fdivrl push mov sbb mov xchg (bad) (bad) jg lock shlb pop and xor sbb cmpsl cltd scas imul (bad) ror add adc fisubr fcomps or and (bad) (bad) (bad) add fdiv xor adc imul jrcxz hlt (bad) int3 cmp out jns hlt imul rex.R rep xor lods sbb (bad) gs add add jo mov movsl movabs nop (bad) xor shrb jno,pn gs (bad) cs hlt sti repnz or xor sbb (bad) jmp xor fldenv cmpsl cmc xlat shlb (bad) je sbb jge movabs (bad) rex.RB mov pop or jb xchg sbb cld cmp loope (bad) (bad) movabs jl hlt es rex.B lock mov int mov sbb jae rex.WX out out (bad) stc sub hlt mov movabs and addr32 (bad) pushfq mov gs adc jbe (bad) xor pop push cmp sub xchg jp sub mov jg movabs and (bad) js xchg add movabs mov (bad) in fcoms rex.WRX cmp test cmp (bad) lret in lret and imul hlt mov sbb psraw or repz xlat sti fwait or sbbl xchg (bad) mov or sbb xor xor or cmp stc out mov sub test rex.WXB ds callq je outsl (bad) (bad) mov (bad) stos test rex.WX mov hlt sti cmpb fidivr callq (bad) or and je lock mov movabs rclb bnd add push pushfq idivb enterq pop rex.XB rex.B pushq sbb push test cwtl xor addl jns cmp sub mov stos and mov pop cwtl (bad) outsb xchg or jnp and jne stos sbb scas jg (bad) sbb iret (bad) pop imul push and sub mov cmpsl jae jne sbb movabs (bad) pop push mov xchg (bad) mov adc out (bad) movabs add adc adc sbb mov adc icebp cwtl fidivrl (bad) movsb mov lret insb (bad) clc fsubs repnz pop xchg mov cli jns mov rorb scas movsl sbb add push jle pop or pop out jno mov mov movabs fwait mov push mov mov mov (bad) cmp add push sub adc adc insb or (bad) enterq add lahf lea mov sahf movslq add (bad) jbe xchg or insl sbb mov mov imul xchg ja subb rex.WR (bad) mov in hlt (bad) repnz cwtl cmpsb cwtl xlat (bad) shll rex lock lea adc lret repnz jle loope (bad) mov pushq mov nop (bad) or push xor mov fwait (bad) or int cmpsl adc (bad) movsb rorb jns push mov add mov jae (bad) push sub outsl push mov (bad) jmpq lea sarl mov cli callq fs push (bad) sub ds rex.WB insl test rex.WB scas movabs pop int add xor cmpsl (bad) fwait (bad) lret cmc adc sarl rex.X lret imul mov xlat retq callq and cmp xor adc out movslq sub orb movabs add jle (bad) sbb rorb es in pop adc xchg adc rex.X negb movsl mov int3 sbb mov fild enterq adc (bad) jge add outsb lods paddsw insb and scas pop cmp fistpll (bad) xor jno std (bad) sub stos fdivrl test gs rex.RX sbb mov jne mov (bad) rex.B mov add cltd fsubrs pop xchg (bad) roll cld int3 mov insb sbb (bad) rex.WRB out faddl mov rex.WRB xchg fwait xor clc mov ss sub sub add add cli rex.RX (bad) xchg jle push xor (bad) and and (bad) sub stc xchg clc (bad) mov push (bad) (bad) shrb icebp lahf sbb push stos add lods test (bad) scas clc (bad) or and gs xchg (bad) jnp cmp frstor and sbb scas nop fistp leaveq test adc callq outsb add rex.XB pop mov rex.RX pop xchg mov cmpb sub sbb and out repz fistp and callq mov (bad) xor sub and loopne adc test mov mov rex.WRX es andb sarb out rex.WR jrcxz loope (bad) mov cld xchg (bad) xor (bad) mov rex.W sub (bad) (bad) lea nop lock or rex.XB andb sbb and shll imul and addr32 (bad) clc imul pop test movslq cwtl out xchg jle pushfq rolb (bad) insl out subl (bad) lcall std xchg (bad) xor (bad) lahf rex.RB std out push mov callq or mov mov repnz scas sub popfq adc rex.WXB out adc adc test scas outsb add sbb (bad) fcoms jmp addr32 stos add or pushfq (bad) or out mov jns xchg adc mov xor loope and add mov cmp mulb adc in incb push movsb cmpsl pop add xor adc xchg mov adc out pop icebp pop (bad) adc cli jg adc int nop jp fnstcw cmc xchg fwait (bad) add cmpsb (bad) adc leaveq lea (bad) rex.WRX fbstp sub (bad) xchg mov es adc add jns adc out xchg adc jl mov lahf mov add mov mov pop add rex.RB pop xchg loopne rex.WB js xor (bad) movabs repz mov adc and rex.RX insb leaveq pop rex.RB movb fadd (bad) rcrb sahf cmp fwait fwait movslq mov sbb rex.B rex.WR and (bad) (bad) fnop mov fisub xchg pop fnsave es sti out jno add mov (bad) (bad) repnz repz popfq lock sbb addr32 jp push sub imul test xor adc sub mov rex.X movabs mov fsts sahf iret jmpq repnz (bad) shll adc jp xchg mov imul cltd push push push es fcmove ss adc pop (bad) pushq rex.WRXB repz mov movb nop jne adc outsb sub imul jb gs sarl mov adc int (bad) fimull (bad) xchg cmp adc cmp test (bad) loop jmp push pushq add out fnop repnz (bad) jrcxz hlt fstl pop cmp jmp pop (bad) adc popfq clc jle out jle es pop loope rex.W cmp scas (bad) adc enterq add rex.WXB clc jge or xor mul idiv lret test push ss push es cwtl (bad) (bad) adc (bad) clc sti (bad) cld pushfq test jp js notl rcrb insb pop push or or clc idivl sub jl mov adc add rex.RXB or scas sahf sub rex.WRX (bad) fld fsubs jo sub (bad) jno push push callq jnp jno insl cmp mov lock sti (bad) fildll lahf sub add fiadd loop (bad) sbb xchg pop in je (bad) sbb movsb divb jl jo loop movabs popq or lretq lock rcrb out sbb outsb int jb mov pop retq cltd pop cmp rex.WR cmp int neg push add pop int3 mov repnz and (bad) insl data16 (bad) xchg (bad) lret repz xchg push sbb xchg push (bad) ja add out and rclb movsb sbbb pop jns seto je rex.WRX (bad) fsub orb sub rex.B fisub and push mov fwait sub pushq int3 xchg fnstenv adc and test leaveq adc cmpsb movabs xor loop adc rex.WRX or adc (bad) fdivs mov rex.WXB repnz rex.WRB or scas lahf xor xchg mov push xor pop and mov (bad) jmpq cmpsb rcll adc and sub push lret add or adc sbbl pop mov (bad) jno (bad) scas js cmp adc rex.WRB jae callq cmp cmp push in jnp jmp and (bad) invlpg out jmpq mov xor lods imul add fmul iret outsb cmp mov mov enterq sbb pop add jb push loop scas popfq mov (bad) mov adc mov push jle divl shrl loop and out add movsl mov fwait sub sbb int3 xlat imul repz cmp cmp repz (bad) lahf sbb shrl mov xchg jae (bad) adc or scas jg or cs rex.WRX rex.XB roll cmp sahf (bad) sub and mov push jg outsl movabs cmp (bad) jrcxz xlat sbb mov xchg fucomp (bad) (bad) add in movabs cmp fnsave (bad) rex jl rex.X xchg sbb xlat adc rex.RXB cmpsl jge sub adc (bad) movabs movsb and mov pop sbb movsl cmpsl rex.RX mov insb js (bad) mov movslq push jge icebp sub adc (bad) sahf (bad) (bad) sbb sub jb mov adc jrcxz rcrl cmp adc adc imul scas enterq push addr32 jbe and and hlt cld jg xor (bad) loopne (bad) addr32 adc ds lea stos and out imul or sub xchg cld mov int repz mov (bad) clc sub or or movabs mov xchg push decl cmp mov jmpq (bad) jge xor outsl adc lahf lods fnstsw jge insl mov jrcxz mov push (bad) lret (bad) out test rex.WRX rex.RX adc negb clc ds cltd jae rex.WRXB xchg rex.RXB rex.WR sti (bad) xchg or mov mov cmp idivl (bad) rex.WXB (bad) rex.WR add rclb adc cwtl xchg jne sbb sti cwtl fsts rex.WRX movabs sbb outsl enterq outsb adc cmp cmp push xchg jnp rex.WR std (bad) rcll add add jbe mov lock icebp rex sbb rex.XB add out adc cmp rclb or adc cmp leaveq adc loop fwait clc sbb pop rex.R (bad) adc int3 xchg (bad) mov (bad) rex.WX mov rex.WRB repz int popfq ror push rex.RXB fsubs (bad) pop (bad) movabs clc mov mov sbb xor fimull jmp and adc pop lret add (bad) (bad) mov adc mov addr32 sbb movslq lock mov sbb in ss pushfq cmp hlt xchg (bad) cmp adc (bad) mov mov mov adc rclb (bad) sti fwait xchg mov mov fmuls loope scas mov mov frstor cmp outsb (bad) sbb rolb rex.W rcll out push jmp xchg rcl mov sar rex.RX lock or std clc sbb push push or sarl or movabs add sbb pushq rex rex.WRXB mov and adc and ds (bad) imul (bad) mov xor or mov adcb cmp (bad) rorl adc or iret cmp xlat lret rol xchg jne and adc add adc (bad) cmp xor psubusb (bad) jno rcrl push repz (bad) xlat lret and popq adc (bad) and or add or adc mov rex.WR sbb rex.WR cmc xchg (bad) shlb jb cs push fsts (bad) and adc rex.RXB jo pop fs mov (bad) cmc movabs movsl (bad) pop add (bad) push mov (bad) sbb push sbb pop rex.RB or sahf (bad) jrcxz stos lret rex.RXB xchg imul xchg rex.W adc and rex.X mov mov icebp xchg (bad) (bad) callq jge mov scas es (bad) jmpq in jbe rolb lods ja xor lret xor add (bad) mov adc decl push push cmp sub (bad) retq outsl cmpsb sub loop (bad) lret push adc int in stos (bad) scas push pop adc rex.WXB test (bad) rex.WB push mov sub adc mov rex.RXB rex.WB (bad) or rex.WXB xchg adc add (bad) stc movabs rcrl xchg mov push pop imul rex.WXB out push out push adc rex.XB and vpmaxsw movabs adc (bad) test jnp in pop xor xor ja rex mov (bad) cmpxchg lahf sbbb mov fist clc sbbl stc jle out mov fdivs add in stc gs lea sbb out (bad) push es lret mov retq test cmc rex.R rex.WX (bad) xlat (bad) enterq hlt (bad) adc (bad) adc outsb xchg nop jne mov js (bad) cmpsl or movsb cmp (bad) loop movsb gs out (bad) adc mov (bad) xchg add (bad) rex.WRB lcall push mov jo out mov adc xchg (bad) lock retq stos (bad) gs rex.WR out int mov rex enterq jno retq cmp add mov fisttp add xor pop fwait mov es add cmp add jrcxz repnz loop xor push rex fwait rex.WR outsl adc jmpq decl callq sbb adc es in and adc xchg fidivr loopne int add xlat (bad) pop cmp xchg cs mov adcl sbb ficompl popfq jl (bad) and imul rex.RX push add movabs adc sbb (bad) adc stos rex.WR cli pushq nop rcl adc jnp callq (bad) callq sub fcoms pop mov jge (bad) (bad) adc (bad) sub adc cmp pushq adcb mov (bad) and out addr32 lea in (bad) hlt jns adc divl adc sub mov test push (bad) adc loopne jmp (bad) je js fwait mov adc fnstcw out or rex.RB (bad) (bad) rex.WR int3 rep retq mov rol es ja cwtl xchg out mov (bad) rcrl stc retq mov or pop jge enterq xchg jg (bad) fsubs fisubr cmp adc or lret and in xlat mov and mov roll ds mov outsl fcompl or pushq rex.RXB es push jbe mov jb cs push (bad) sub sbb loop and xor int push mov jp iret push adc je fdivrs ss repnz rex.RX fwait adc mov or xorl jp fwait clc std xchg rex.WR (bad) lahf or (bad) icebp adc pop jge adc lods (bad) and adc cmp mov popfq sbb push rex.R rex.RXB lock pop and adc (bad) ja icebp callq out adc cmpsl out and sbb data16 lahf rex.B jbe sti push jmp (bad) icebp divl movabs nop repz int3 sbb and movsb orl test shrb retq ficoml xor divb mov loopne xor sbb sti xor (bad) (bad) add (bad) fist pop (bad) rex.X and fisubl (bad) mov callq loope psubusb sub cmp leaveq mov and out xchg callq xchg xor jmp sarb mov (bad) fcoms fs rep mov jnp adc jge insl (bad) cmpsl xchg sbb jg jmp fildl ja callq mov (bad) je add rex sbb jno (bad) cmpsl jp cli pushq movabs xchg movabs je ja addr32 jg xorl (bad) mov pop xchg sbb jge sub (bad) stc (bad) cmp cmp xchg rex.WR out jrcxz sarb sbb mov clc cmp (bad) fcoms fadds mov js (bad) mov mov (bad) xchg ss (bad) rex.R (bad) rex.XB in fistl mov (bad) pop (bad) (bad) rex.R rcrl ds (bad) insl mov jbe cmp movslq lock push add js or rex.B clc (bad) jbe adc retw rorl fidivl insl mov movabs lock (bad) add outsb jbe rex.WRX scas (bad) pop (bad) rex.WRB addr32 ficompl rex.WRXB xchg cmp (bad) (bad) (bad) iret (bad) mov mov adc (bad) fisubrl fstpl loop hlt push mov out jrcxz mov sbb and xor jae xchg fsubrl adc lods add rex.R popfq in loop pushfq and adc mov xchg push fcoml push (bad) (bad) and (bad) iret or in rex.W xchg (bad) add movabs cmp retq icebp rcrl cmp xchg or or lods lea sub xor fstpl rex.RXB imul (bad) icebp and fst out rex.WRB push rex.WRX imul (bad) fsubrl pop or rex.WXB (bad) test (bad) ljmp rex.WX xor js fcoms fcom xor ja rex.RX (bad) (bad) (bad) sub fistl pushfq pop (bad) (bad) lret rex.WRX gs rex.WR mov cs mov stos or pop adc (bad) cmp retq movsl cmp and jne fdivr es mov cwtl cltd int3 outsl jo lods jge int3 cmpsb (bad) enterq cltd push jo pushq add rex.WB rex.RXB pop jbe rex.WRX add je addb (bad) fcoms cmp cli pushq xchg scas adc rex.W ja movabs pushq xchg (bad) jbe sbb sbb sbbb fcompl sub jmp sub push mov out push test xchg mov cmp test add or pop (bad) xor es jae cmp (bad) std pushq mov add adc movabs imul xchg jp fild xchg shlb mov addl xor push (bad) xchg fsubr jle and xor movabs push ja jl xchg (bad) lock pop loop mov imul pop cmp adc movsb (bad) in int insb add sbb xchg insl rex.WRXB int3 jno sahf int3 sarb jmp rex.R out (bad) (bad) mov and adc fstl (bad) jno rex.B (bad) ds adc lods (bad) or pop idivb cmpsb std mov rex.RB repz movsb adc pushfq retq or je pop jmp sub jmpq (bad) xchg mov xchg (bad) xor or xchg and or pop sbb mov push jae movabs in jne xchg xchg jbe mov pushfq xor loope rex.R push (bad) mov rex.WRB sbb or hlt or movabs rcll (bad) and sub (bad) fiaddl mov jae notb cmp cli pushq lods or adc movsb add (bad) add movabs xor test (bad) pop push cmpsb cmpsl fnop rex.WRB or mov (bad) sarb (bad) (bad) out fisttpll (bad) mov (bad) je mov out rex.B cs (bad) push mov idiv in jno jb sub cmp (bad) (bad) retq cmpsb movabs add mov movw in loop push rex.RX sub (bad) (bad) out jns and sbb (bad) (bad) (bad) xor jp and movabs rex.XB pushq mov xor fmuls rex.WRXB pop jge rex.WXB (bad) int3 test (bad) pushq retq (bad) pop mov fistpll pop or or (bad) pop adc popfq callq adc rcll andb xor lret xor fdivr (bad) (bad) xchg adc xchg rex.RB rex.WRXB push mov add (bad) (bad) xor (bad) pop lahf cmpsl add imul mov int3 sub mov dec pop push jb adc repnz in (bad) jrcxz loop callq sub adc mov (bad) cli sub hlt sbbb movabs out punpcklwd loopne test mov mov lret or push or and mov ficomp addr32 mov mov rex rex.WB (bad) pushq xor xor fs rex.WRX bnd xchg cmp out xor xor and xor adc sub movslq int3 mov andl clc lret and (bad) lods jmpq mov push rex.WX xor (bad) jo mov mov lahf sbb jmp xlat psadbw pop cmp mov cld and cmc rex.WXB sbb out mov loope adc (bad) roll adc or or adc xchg jmpq add add adc fwait pop fisub adc out adc movsl mov mov adc rex.WX fsubs (bad) jrcxz xchg (bad) movabs fcomps jrcxz in add movsb rex.RB stc minps push in in data16 sub cmp cmp movsl sub (bad) lea nop shrl sbb (bad) rex.RXB movabs jbe push lea sub rex.WRX sbb (bad) adc rex.RX nop clc retq bndldx rex.B or (bad) adc sub divb in mov loope lret rex.WR xchg rex (bad) (bad) or pop or stos cmp iret shlb int3 xor pop out callq (bad) lea adc ss out sbb callq (bad) jp enterq scas push xchg pop iret xor mov (bad) jrcxz outsb (bad) scas jne and lods push rex.RX ds stos (bad) mov (bad) cmp xor xchg jne sbb pop mov fimul enterq cs sahf and sub rex.X loope (bad) jbe cltd cmp stos and mov xor jmpq neg sbb (bad) js cmc sbb pushfq out (bad) lods rex.X mov sar xor cmp popfq scas imul jmpq sub mov pop pop insb or mov add repz jbe jnp adc loop stos sbb and rex.RX pushq xchg add icebp jge mov xchg jle adc adc mov int3 xchg lods mov incl cmp mov data16 pushq rcll imul cmp add scas (bad) (bad) retq xor or fildl xchg fadd pop (bad) outsb xor lahf ss pop sub xlat je insb subb (bad) fldenv movabs out stc jl xchg (bad) xchg xchg (bad) rex.WRXB popfq rex.RB movsl in out movabs fldcw enterq (bad) imul rex.WRX gs sbb outsb xchg mov mov jbe movabs (bad) insl adc pushfq and rex.X rex.RX mov insl enterq outsb jmp push adc out (bad) cmc (bad) adc push mov (bad) sti (bad) decb mov (bad) xor mov rex.WXB (bad) adc add (bad) adc sub xchg mov (bad) iret cmpsb addl sar (bad) (bad) (bad) lretq lahf and jo xchg push fstps (bad) rex.XB cwtl pushq orb mov fisttpl xchg adc jrcxz and notl push and xchg (bad) (bad) lahf pop gs push adc mov (bad) lock lret pop iret lea fldcw js int shll and outsl jmpq outsb sti jle (bad) lock addl fistpll lahf xchg xchg or movabs push mov mov cld adc callq sbb js xchg lock xchg repnz (bad) (bad) (bad) jb lock sti rex.WXB cs xchg jmp cs rex.W imul sub fs xor sahf adc xchg ja callq gs jae jbe (bad) callq shlb rex.WRXB cwtl add mov (bad) rex.WRB adc add push xor movabs movsl jle enterq mov je jp clc push sbb sti or (bad) lock pop jns ss push sbbb jo test std mov out outsl clc push pushq add jmpq fisub fs or adc (bad) ds data16 xchg mov cmpsl addb cmp je or sub push or push fs lahf xchg outsl jb sbb (bad) test cmp movabs pop in out mov mov test cmp movsl je jmp imul fimul lock add sub notb (bad) fwait mov mov mov jo cmp repnz rex.WX jb adc xchg in and mov iret retq add scas movslq fadds (bad) xor fistp mov mov adc xchg lahf add mov mov iret or xor lahf push cmp addr32 lock loopne std sub je (bad) andl mov mov fiadd jle rolb xor fidivrl add cld adc ss shll jg and gs jae (bad) xchg add and retq lret sub fidiv repnz sbb lods fcomps mov mov jo shrb pop retq (bad) subb (bad) xchg add rex.W mov xor rcrl rex.WX sbb mov push and xchg pop jb stc shrl xchg lock cmc xchg jae outsl loope std add push retq out shrl imul sbb cmp and xor callq hlt pop fbld mov outsw mov cmp insb fsubrp in int3 sbb mov std out sbb callq (bad) xchg (bad) add and rex.WR rex adc ja lret push mov xor callq mov hlt or mov lea (bad) mov rex.WX xchg retq rex.WB pop (bad) xchg jno or mov fsubr scas sbb fimul sub rex.WX rex.WB ss stos pop or xchg xchg and sti insb je xchg pushq rex.W rex.RX and xchg sarl xchg sahf and mov insl rex.RXB repnz xor retq ja rex.X rex.WRXB rorb or negb ja adc (bad) xlat cld cmp rex.WRXB mov add jno icebp and icebp mov fwait rex.WRX or add and (bad) jns popfq rex.WX cmpsb mov ss and jae pop (bad) mov mov jne jrcxz int jle rex.WXB data16 notb popfq pop or cltd (bad) add pushq mov fwait pushfq and pop (bad) mov fisttp or and in stc fsts (bad) callq (bad) adc and retq adc icebp in out gs int3 rex.WRXB cmp out adc (bad) add cli push (bad) (bad) (bad) rex.RB movabs movsb (bad) jmp xchg jmp pop cld push rex.WR mov cmpsl cmpsb fwait rex.XB (bad) out xchg pop lea retq (bad) mov mov and xchg cli jb adc pop (bad) psubusw leaveq adc mov vmovdqu jl clc pushfq adc cli cltd rex.WR jg mov fcompl pushq fbstp (bad) rex.WX lock (bad) xchg out rex.WRX je pushq pop (bad) mov addb xor (bad) mov xchg fwait pop mov xchg cli pop xlat (bad) and mov sub rex.RB adc cmpsl adc jmp outsl (bad) out pop (bad) (bad) xor lret rex.WXB repnz (bad) pop fistpll sbb (bad) (bad) (bad) xor adc addr32 rex.WRB jb xor or and outsb int sbb pop (bad) (bad) xchg sarl add imul sub clc adc fisub xchg out jp cmp out xor mov mov enterq insl rex.RX and rex.WRX lea movslq add xchg mov xchg mov (bad) (bad) in and icebp cmp sub jmpq lret xchg xor add (bad) mov (bad) (bad) mov mov jrcxz rex.WRX callq cli add jmpq test (bad) movsb and (bad) mov (bad) icebp retq cltd rcrb or or push adc (bad) out mov clc sub and rex.B adc cmp (bad) rex.WXB mov hlt rex.WRX sbb pop movabs mov (bad) sbb movabs jbe or (bad) or (bad) mov jns rex.X (bad) pop jae divb (bad) jrcxz fsubr rex.WB out out or (bad) fwait and add movnti data16 xor retq cs xor test in mov jmp rex.RB ds sbb out push sub push sbb sub fdivs fcomip mov jmpq cmp sbb insl rex.WR mov retq (bad) mov jno stos and lods rex.WRXB cmp test adc pop mov sub sub callq rex.RX adc and pop mov es mov cmp rex.WB movslq mov fstps fisub or adc test notl pushq (bad) scas cwtl xchg repz pop cltd and sub lea cld push or fstp repz xchg sbb adc adc callq and and or lods fsubrl outsb (bad) pop mov (bad) fstl jae addr32 (bad) gs adc fwait sbb pop (bad) xchg adc movsb cmp movsb (bad) add adc pushq int3 stos test (bad) addr32 out lods emms jne (bad) sbb movsb cmpsl adc mov pop sbb xlat rex.WB sbb stc (bad) push out cld cs rcrb in xchg sbb gs retq scas (bad) (bad) shlb xchg (bad) xchg jmp lahf and (bad) push xchg adc cmp rcll cli jb lock lods xor (bad) add adc adc lock (bad) and stos lret rclb sub adc mov outsb mov out movabs (bad) cmpl and (bad) int3 repnz add pop xchg callq lock insb xor mov (bad) add retq (bad) adc mov pop add xor cwtl jo vpsubusb mov jbe (bad) push (bad) shlb (bad) test lea (bad) in leaveq pushq (bad) int3 and (bad) in loop retq and sahf in sbb or (bad) mov mov stc clc and (bad) in rex.RXB sub rex.WX lock frstor (bad) icebp or add xor (bad) hlt (bad) mov callq (bad) xchg lock push cmp sub rex.XB mov fmuls pop loop outsl mov or mov lock jge movsl (bad) or pushq mov addr32 push or scas fistl xlat (bad) (bad) adc rex.X rex.WX cmp (bad) jno rex.B (bad) sbb in sbb adc mov je (bad) test test in sub repz xlat subb jge sahf xlat xorl (bad) iret cli jg stos (bad) fcoms mov idivl data16 ss rex.RB mov or sub xchg jp pushfq frstor jne out adc xor sbb jmpq sbb cmp retq adc test adc shlb nop (bad) cmp or mov fcmovu (bad) (bad) cli xor (bad) callq rex.WX jmp sub imul push cmp gs xchg rex.WXB fmull sbb stos rex.X jmpq addl adc xlat pop cmc in xchg adc jge pop ficom insb sub or clc mov (bad) jge,pt rex.X pop cmp add adc mov pop mov mov repz mov jp pop and int3 fcmovbe jno callq adc in mov (bad) testl rcll push cmp and test mov adc (bad) rex.RB bnd js int adc xor fdiv pop rex.RXB rex.WXB cmp mov movsl jle repz jb push pop adc mov jns subb sub (bad) xor (bad) (bad) rex.XB add push mov test (bad) sbb (bad) push jb and fsub jp mov xor xor mov lahf movsb xchg xlat stos pushfq xchg adc fildll mov add or adc cmp jno pop (bad) pop std add pop divb adc (bad) cmp and mov (bad) (bad) sbb fistl (bad) mov (bad) sub and (bad) xchg movabs insb jb mov sub (bad) fsubl in and (bad) adc test xchg repnz outsl (bad) jns (bad) adc (bad) out or and and mov fadd mov movabs fidivrl add in fidivl jo pop shrb test fstps (bad) movsl push fcompl mov mov (bad) retq rex.RXB stos jmpq pop push (bad) or or leaveq clc stos rex.WR rex.WRX insb (bad) xchg (bad) or mov xorps sbb icebp (bad) rex.W or (bad) pop movslq out mov adc fstps stos fsubrl jne adc rex.X retq xchg adc rex.XB rex.W fsub stc add mov insb adc jmp pop je std sub rex.XB test mov in movabs (bad) or adc (bad) xlat pushfq (bad) cld rex.WR cmpsb xchg (bad) (bad) test (bad) xchg repz movslq (bad) adc push adc fwait rex.WXB (bad) mov (bad) jg pop imull imul popfq and or cli sbb (bad) push clc fidivrl cmp mov adc rex.RB data16 addr32 xor and (bad) and (bad) mov lea (bad) cmpsb sub adc outsb pushfq cmpsl xchg mov adc movabs mov movabs or ss jns xchg mov (bad) and rex.RXB lock clc (bad) test lock push jmpq (bad) out cli (bad) and ja mov and and (bad) retq rex.XB (bad) pushq mov int3 fidivr enterq test (bad) (bad) (bad) (bad) test pop adc sbb fstpt callq cmc jne (bad) adc (bad) xor mov in mov xor adc ficompl xor and movabs loop (bad) movsl adc in rex.WRB (bad) fistpl jo and imul int3 xchg iret adc imul jmp mov lahf cmp movslq nop xchg (bad) xchg pop rex.RX sarl or stc fwait (bad) adc xchg incb movups lret mov jno sbb add movabs outsl lea jno mov jl add xchg adc (bad) xor (bad) jle fmuls sub adc mov cmp out mov orl (bad) test rex.WRB outsb insl (bad) jrcxz (bad) (bad) rex.WRXB cs xchg cwtl rorb mov xlat neg sub (bad) rex.WRXB (bad) or or xchg imul out out adc xlat pop pop callq sbb rex.RB leaveq mov push mov xchg jmp adc test jb fcoml mov (bad) movabs lea (bad) imul mov cwtl fcomp sbb pop (bad) adc jbe mov imul push frstor xchg rex.WRXB sbb sbb mov int mov add pop dec mov and (bad) int3 jb sbb add scas or movabs callq adc rex.B stos push adc leaveq repz lock stos iret (bad) repnz (bad) rex rex.XB xchg mov or xchg sbb push repnz (bad) std rex.WR (bad) rex.R cs mov (bad) movsl add xor xchg outsl jg adc fyl2x maxps mov cmp xor sub mov jne movabs out adc movabs and callq (bad) (bad) push icebp cwtl sti fwait js rex.RXB pop cmpsl (bad) int3 lret gs cmpsb (bad) neg out mov jbe jp scas jne rex.WRX (bad) and lock (bad) in sbb jle sbb out or js pushfq rex.WRX push jle stos and push lret dec rex.RB lods jmp and push add int3 xor (bad) callq incb jp rex.RB jg sti ja cwtl mov rex.X int callq mov adc push mov mov jno repz adc sarb adc sub xor sub jge rex xchg (bad) scas jo outsl rex.WX (bad) movabs sahf (bad) or js jb sub int imul outsl jmpq or punpcklbw rex.WRB data16 mov lods outsb rex.WRB (bad) sbb mov cmp jnp jle jge adc add in xor rorl sub cmp movsl jrcxz (bad) or divb (bad) mov fdivr int icebp pop push xchg pop retq rex.WB adc insb lret movsb cs mov add push mov jl lock (bad) (bad) retq movsl fcoms addr32 fldt cltd fsubr cmp and scas jbe or adc xor cmc fstpt adc repz jmp adc callq sahf rex.WRXB int insb clc fisubl xor rex.RX lahf jb and int3 adc pushq fmull cli rclb je retq movabs mov rex.RB jp jnp adc mov fildl rex.RX adc (bad) out cs sbb out adc mov (bad) mov cmp xchg sbb push pop pop (bad) xchg sub movsl or (bad) adc (bad) (bad) fisubr adc jge outsb or out sub (bad) test xor in callq or and mov (bad) hlt (bad) add jns pushq or leaveq push (bad) jp mov adc sti cltd (bad) js imul jne or stos shl movsb (bad) outsb idivb (bad) sbb adc push xchg loop adc pop fsubrl (bad) (bad) push enterq adc cld mov adc jle xchg jne test loop rex.WRB (bad) jrcxz jmp out insl (bad) push pop adc in cmp (bad) jmpq jp pop mov data16 cltd adc xchg rex.W test paddusb pop or outsb mov push (bad) movswl retq jl add (bad) xchg hlt (bad) rex.B rex.R adc xor mov adc outsl xchg jg adc pop mov rex.R scas mov stc cmp andb jo adc sbb (bad) push and jp popfq test (bad) loope mov sub or rex.X (bad) adc rex.WR loopne notl out mov adc xchg mov mov jg (bad) rex.WXB and mov out loop sub cs mov sbb adc push add pop xor out pushfq outsb cmpsl movabs movabs adc mov clc push add outsb (bad) mov mov sub lods mov (bad) cmpsb or (bad) ja jmpq pushfq (bad) (bad) adc out xchg (bad) lods adc adc je and repnz loope sbb leaveq jnp or (bad) je jb sub in push adc (bad) push cmp sub sub test push fwait pop js pushfq mov mov sbb imul pop jp int imul outsb mov mov rex.WRB sub sbb test jns mov loope ud1 and (bad) xchg cli or cli add (bad) adc (bad) mov in adc push rex.R callq (bad) rex.WR enterq movsl retq push (bad) stc xchg test mov rcrb cmpsb adc and push pushq mov xchg adc adc (bad) lods rex.RXB sbb pop fldcw mov push addr32 sub push and (bad) sbb nop (bad) and test (bad) insb movsb movslq out (bad) je in lahf xor mov enterq jo sbb fidivrl cmp (bad) sar adc lods mov cmp lret in scas push pushq xchg stos jge rex.X lock pop movabs adc jg addl sbb lods push and adc rcr mov adc subl adc gs cmp stc mov (bad) or loopne mov cmp jne (bad) in adc (bad) fstpt sbb out adc loope add stos sub orb adc pop std mov movslq rex.RXB adc push jns fwait enterq adc popfq cmp mov mov xchg adc (bad) mov jg (bad) mov movabs (bad) pop xor (bad) (bad) movabs ficompl mov xchg xchg and icebp xchg jb jns test lea sub sbb mov ss sbb cmp rex.X fsubs push xchg fcmove (bad) fsubrl adc cmpsl rclb int3 (bad) jae (bad) push adc sub bnd pop add add enterq xchg adc jg xor pop loopne scas adc (bad) (bad) jrcxz or ficompl xchg mov sub push sarl (bad) (bad) in fs (bad) jge cmp icebp in lods adc jnp and (bad) (bad) stc (bad) es and in xchg (bad) (bad) rex.RX lock sbbb lret jg mov lods rex.RB ss (bad) xchg gs je adc pop xchg in scas lods or loope in shr (bad) sbb clc add sub outsl mov mov sub sub mov rex.WX rcrb jg mov iret lods fldpi sbb fnstenv adc (bad) rex.WRXB or lahf mov enterq ficom cmp cmpsb adc jne jno addl movabs pop pop add adc rex.WB (bad) (bad) add sub test fistpl add rex.WX rclb mov test jge clc icebp es (bad) rex.WRX movabs (bad) or movsl adcl callq jo callq js jge xchg mov adc push iret cmp mov pop callq test imul clc stos rex.WR push out int3 adc sahf fstl es push and lock iret xor mull xchg adcb xlat mov pop (bad) (bad) jl hlt retq or sub popfq push xor mov lods adc (bad) stos cmp enterq (bad) and jmp jbe out adc rex.RX fs movl out cs mov or movabs fcoml imul jmp sub jns xchg mov (bad) mov add jbe sub out sbb fdivrl pop sti loopnel popfq fisttp (bad) cmp hlt adc push loop and (bad) enterq sbb cmp callq add sbb (bad) xchg sahf mulb jb cld xchg fs jge sub repnz sbb mov mov cmp fsubrs repz neg (bad) rex push rex.WRB nop jg rex.WR gs mov mov sbb iret sbb add pushq cmp jge rex stc rex.B fwait sar mov in ja rex.RB (bad) rcrl mov push push sbb jge lods lahf and std adc pop and (bad) jne adc js out (bad) pop cmpsl nop jb (bad) fsubl sbb (bad) mov mov shlb (bad) xchg retq outsb mov (bad) gs lock cmp movabs roll or sbb lods push adc sbb adc fldl mov sub lret rex.WR (bad) and adc jl gs rex.WRB (bad) clc sbb movabs adc stos outsb cmpsl (bad) adc rex.X loopne in xor (bad) xchg jrcxz or loop push ficom (bad) mull pop fcomip loope adc (bad) xchg stos repz test add and shrd xor add outsl movslq (bad) pop push addr32 push cmp cmpsb (bad) sbb (bad) cmp in push (bad) and insl mov div retq (bad) rex.RX out adc lahf rex.WB jmpq rcll fwait sbb and int3 (bad) jb xchg adc cmpsb iret in adc push mov rclb mov (bad) movabs ficoml xchg jbe mov pop sahf mov addb xchg sub mov mov rex.X movabs mov sbb pop int3 in test sub movsb scas xchg adc cmp sub rex.X rex.W (bad) callq js retq movabs lahf cmpsb cmp adc orl sbb icebp clc mov jle add add sbb andl fsts rex.B imul repnz or (bad) cmp stos and pop xchg (bad) jl insb push imul sarl pop lahf out pop mov cmc (bad) fstl add rol rex.WX rex.WXB out pushq fiaddl loop sub sub repnz and sub (bad) imulb xor jae int3 cltd mov xchg cmp jns rex.X sub (bad) mov (bad) icebp rex adc xchg scas scas sub add pop (bad) (bad) insb lock mov adc imul mov mov sub adc outsl repz imul and xchg add add jge test retq sub jno sbb (bad) movsb addr32 (bad) jb adc movabs cmp pop imul test xchg scas xor mov adc fnop es insl ss mov pop and jmp jns xchg (bad) in sbb (bad) xchg xchg (bad) mov adc (bad) data16 insl jmp sbb in mov mov (bad) callq fwait movntps movabs cmp repnz push cmpsb (bad) pop mov and in cmp lock adc add xchg hlt add (bad) int3 (bad) loope lret sbb cltd or cmp adc rclb adc (bad) movsb rex.RX adc movsl outsb (bad) (bad) or sub adc fwait mov rex.WRX mov adc pushfq mov add test sbb (bad) adc push ficomp (bad) xlat add and outsb push (bad) movabs push (bad) cmp rex.XB (bad) or decb rclb clc ficoml or outsl mov ffreep mov xlat mov push adc notl sub adc mov mov adc rex.WXB rex.WB add insb (bad) js cmp (bad) jl leaveq (bad) (bad) (bad) mov fcomps (bad) repnz (bad) jnp mov rex.X (bad) clc and rex.WB popfq (bad) callq (bad) test callq (bad) mov sahf and fld rex.WR or mov xchg int adc mov rorb mov sbb lahf mov rex.RB repnz pushfq xlat in (bad) (bad) mov test std lahf test stos mov mov or div xchg push vunpckhps cmpsb xor lods (bad) add stc xorl pushfq (bad) pop ficom rex.RXB leaveq or movabs adc nop adc movsb or hlt cmp ja pop jne add adc sbb pop or pop fwait rex.WXB mov addr32 incl pop (bad) cmp pop mov ss iret adc fucomip jno pop (bad) cmpsb int cmp and cmpsb sub loop sub add adc xchg mov rex divb fnstenv (bad) insb jne lea cmp rex.RX push sti test mov ja xor fcoms (bad) cmp push fs movsb and cmp push xchg notb movabs fmull cmc stos pop clc xchg mov pop rcl (bad) (bad) ss stc adc repz (bad) adc (bad) rex.WR sahf adc or in xor rex.RXB xor mov fstl movabs adc add fist insb int notl mov rex.XB rcrb mov (bad) fs add (bad) cmc pop (bad) int sbb jae test rolb adc or int3 adc jnp xchg (bad) xchg xchg (bad) adc in xor (bad) adc xchg xchg rex.WB sub test adc add or cmpsb outsl adc jg adc mov jnp xchg add clc sbb rex.RB (bad) notl sub movabs xchg (bad) mov and cli jp mov xchg (bad) xor movabs (bad) test and lods (bad) stc mov rex.XB loopne test pop and lret mov jg loopne lods lock and cld mov rex.WX sub xchg mov fwait popfq xlat enterq sbbb repnz mov add std mov insl xchg sub lea jmpq mov mov loop (bad) stc xchg cld incl addb (bad) out pushq adc js cmp jl push leaveq mov imul or out movabs sub jnp (bad) adc movabs pop mov ss (bad) (bad) and (bad) (bad) in rex.XB rex.WX add mov sbb xlat pop fwait clc pop lock js push mov xchg stos adc or mov jo mov rex.RXB lods add lock jle gs je or adc adc je or rex.X push (bad) or mov fadds gs (bad) or jbe or adc pop sub push (bad) add xor (bad) (bad) fldt loope (bad) enterq xorb out mov jp xor xor sbb rex.RXB add (bad) sbb add pushfq add mov jbe rex.RXB (bad) jo lods add mov mov rex.XB psadbw fdivs (bad) (bad) (bad) xor loop xor gs mov je sub mov enterq push (bad) cmp rcll mov xchg je rex.B push sbb mov jp rex.X push int3 movsb sbb movabs cmp adc test cmp in orl (bad) mov (bad) pop push jp xchg (bad) push (bad) mov adc cwtl (bad) xchg mov adc (bad) addr32 popfq mov es dec xchg sbb repnz cmc movabs mov pop out jae test (bad) push (bad) mov sub rex.B add addr32 or or (bad) cmp sbb (bad) (bad) jbe (bad) pop rex.WR adc or adc or sbb movabs enterq add callq xchg mov movabs and mov fdivr cmp jo mov add mov jmpq rex.RB adc (bad) (bad) adc ss gs push cmp in add sub (bad) push fucom js xchg (bad) loop and adc leaveq (bad) lods cmp xor movabs push (bad) imul ja jg retq push sub rex.WRXB outsb mov or xchg fdivrl lahf out callw in in clc fistpll cli or outsl mov loopne mov push rex.RB xorl hlt jle push mov enterq jbe xchg out xchg push in mov lock js fsubrl rex.XB xor iret (bad) xor lret (bad) mov roll sbb leaveq (bad) add and xor lahf (bad) stos mov xchg jno fwait cmp mov test repz mov loope sahf iret out jmp push in and rex.XB add js movabs mov int3 data16 fldenv add push add imul sbb (bad) movabs pop loop jmp int3 mov sti sbb mov cltd rex.WXB (bad) ds lahf and rex.WB mov rcrb int3 (bad) fdivr cmc mov xlat xchg imul movslq (bad) loop leaveq pmulhuw (bad) inc (bad) and icebp lret gs cmp pop stc out in enterq add (bad) xor cmp mov movabs sbb pop repz (bad) ja in loope adc (bad) rex.WRXB clc rex.RX xchg sbb or hlt (bad) movslq enterq adc andl push cltd movabs rex movslq jno fwait jne jl push jl adc iret ss sbb add movabs imulb cmpsb out xchg test or xorl insl loop rex.RB notb add adc xchg push cmpsl push scas pop outsb hlt (bad) xor (bad) (bad) psubd in repz and decb (bad) rex.X jl enterq mov leaveq mov enterq imul or add mov jmpq add jae movsb xchg (bad) jne (bad) mov mov push jmpq add cmp (bad) and or cmpsb or adc and movabs sti lea or stc rsm xchg faddl lret jne adc mov xchg rex.WRB rex.WR movabs jb adcl sbb xor (bad) lret repnz sub pop mov (bad) rex.WRB rex.RB xor iret cmp (bad) xchg add out scas (bad) out mov (bad) push lret adc jb (bad) notb mov imul xor xor fcoml cmp jbe mov int (bad) (bad) movsl movsb outsl in adc fcomps loopne retq xchg (bad) (bad) or sub (bad) icebp xchg pop stos cmpsl retq rcrb pop xor adc cmpsl jp (bad) rex.RXB lock sahf and xchg or repz adc adc fnstsw mov ja push cmp mov adc add rcl es xor movabs (bad) nop sar or movb movabs (bad) adc or cmp sub xchg push data16 pop jge int3 adc repz push and lret cmp add movsb out movabs fcomps sub sub xchg xchg shr jnp and cmpsl and pop (bad) test mov pop fs stc add scas xor push movabs cmpsl jo xchg stos pop insl adc fwait lret rex.RXB clc or (bad) data16 adc faddl jno icebp jo negb js pop jbe adc (bad) jl jl fs adc test loopne pushq jge (bad) movsb in in adc rex.W (bad) push es push xor cmp movabs add xor jno (bad) fldt cmp xchg jl mov nop mov fcompl sbb mull insb adc sub jne lret mov rex.RXB rex.R xor add movabs rcll pop push pop push fstl (bad) lahf rex.XB mov rcll movabs mov rex.R or cli pushfq and mov pop loopne xchg rex.WRB adc test vunpckhps fs and shrb adc mov (bad) or (bad) rex.WB (bad) movabs xchg sbb pushq push in (bad) adc retq sbb and rex.WRXB jmp lahf xor (bad) cmp sbb add adc adc adc ss (bad) lock (bad) rex.RXB ja xchg pushfq push sub loope mov in cmp rex.B push (bad) (bad) (bad) outsb rex.WRXB rcll fidivrl orb push jno pop (bad) lods adc jmpq adc rex.WRX mov xor (bad) jns jno (bad) rex.WRB lret movsl cmp shll mov outsl xchg jg fsubp int3 ja mov push cli xchg scas adcl sub rex and int3 stos subl rclb fdivrs and (bad) adc rex.RX (bad) rex rex.RXB int3 jo fcoms mov (bad) movsl out sub fsts movsl lahf sbb (bad) and int3 xor jo outsl in sbb cwtl sub enterq (bad) loope sbb sar imul mov int3 mov cli (bad) pop mov imul out lcall rex.WXB (bad) fadds (bad) mov lods sbb (bad) xor mov lea (bad) clc push pop rex.RXB ja callq scas jge leaveq jp pop andb movslq push (bad) (bad) rex.WRX mov test sbb insb fstps nop xor mov jle jle sbb fidivl cmpsb pop test sbb divb jle pop xchg (bad) fadds mov retq xorl xchg (bad) in lock push (bad) sarb sub rex.B xlat fisub lret cld in test cmp out enterq jle shrl (bad) add sub insl movsb rex.B iret pop rex.RX jrcxz,pn cs rex.W (bad) (bad) adc rcr ss test shr (bad) mov (bad) jne ja jo mov movabs xchg xchg add fdivrs repz add mov shl (bad) scas mov loope repnz pop out mov adc xor jbe cmp and (bad) callq lahf insb (bad) cmp adc or jno cmpsb (bad) adc pop cmp adc leaveq roll loopne xor rclb cld in cmp (bad) jno adc enterq mov sub or leaveq (bad) push rolb pop cwtl cld lahf pop (bad) (bad) push movslq icebp bswap std rex.RX mov cs rex.WRX pop or mov cmp int js (bad) mov stos stos lea (bad) jns adc lret int fdivrl add sbb jl push pop sub movsl mov xor insb out adc lahf mov pop insl fwait xchg adc (bad) or jbe or add add test loope stos in clc test scas fadd (bad) scas jmp nop rex.RX and iret leaveq cmp test sub sbb jnp (bad) add scas (bad) fnsave pop cwtl outsl mov (bad) rex.RB (bad) movslq loopne int pop adc jb (bad) clc callq (bad) cld out enterq (bad) hlt cmp in mov rex.WR sarb stos adc mov lret cmc rex.WR fcomps and pop xchg adc out (bad) insb (bad) jns (bad) jmpq mov icebp rcll xor xor out int or add (bad) stos sahf jno pop popfq incl (bad) push cmp lret (bad) or mov pop xchg push js jo push leaveq pop adc outsb rex.R cld and (bad) sbb enterq jrcxz cli movsb sbb cli pop movabs mov sbb clc cmp and loopne outsb rex.WRXB out rex.WR rex.WRX (bad) (bad) xchg movabs xchg callq mov cwtl pop cmp sbb cltd loopne rex.WRB xchg out or (bad) jge popfq mov je sub sub xchg movabs (bad) rcll mov adc je xchg sub jo xchg hlt sbb movabs stos cltd rex.WRXB pop adc cmc int3 add or sti orl cld fisttpl rex.RXB mov (bad) pushq cmp xor stos mov outsl push (bad) (bad) (bad) std enterq adc mov int or adc shlb mov xor jg lret mov mov cmp lock sbb rex.R rex.WRB pop pop mov scas jns mov (bad) (bad) je pushfq movabs movabs (bad) (bad) adc xor lods clc mov xchg mov clc mov (bad) sub jae pop xchg jo jl divb out (bad) (bad) jmpq mov (bad) lods loop callq or rol xor mov (bad) rex.XB mov jmp rcrl and adc shrb add or adc addl xor rex.X pop clc xor stc fwait pop xchg movsl mov add (bad) hlt (bad) loop cmp jge xor push cmp jno out add jne push out mov sbb or or pushq push xchg movabs or rex.X stos rex.WRXB jne (bad) and xor sub pop js pop push (bad) sbb sub cmp xchg jp sbb addr32 in (bad) sbb pop add (bad) fildl cmp fwait movabs rex.RB js or (bad) (bad) mov imul add mov sbb rex.WRXB (bad) js rex.RB lret lahf sbb imul (bad) pop mov insl push (bad) xchg (bad) movsb jae mov scas insl js div pushq out jae sub (bad) repnz (bad) cwtl xchg push xchg outsb mov rex.WXB cmp fwait ror js rex.R test outsl xor movabs mov (bad) movb mov mov ds fsub pop pop incl mov ljmp jns cmp shl xchg rex.XB cmp lock rex.WXB (bad) int3 xlat sub out test push (bad) movslq test clc or (bad) lahf jbe repz (bad) cmp xor (bad) jge (bad) fdivs fisub pop adc rex.WX int3 (bad) imul sub mov out gs jae (bad) push insb (bad) loope (bad) sarb adc rex.WRB mov sbb divl mov (bad) fisttpll ficomp (bad) xchg (bad) je cmp movslq or ds sbb clc lock adcl xlat jbe lods adc sbb or (bad) mov (bad) xchg stc (bad) test lock pop jg (bad) jb mov movabs mov or imul movabs insb rex.RB jmp cld (bad) rcrb xor insb add nop int3 outsb (bad) rex.WRB sub sbb adc loop rex.R pop ja (bad) adc ja (bad) iret es cltd and rex.RB (bad) add jno jo retq jne leaveq rex.X mov mov notb scas adc and xchg or xor fsub adcl pop xchg jne andb outsl jg imul hlt mov xor test fwait sub mov pop adc outsl (bad) int3 rex.B cmpsl adc (bad) or jmpq insb push jp sbb mov adc (bad) pop cmp (bad) sbb pop mov xor sub addr32 adc cmp (bad) mov stc sti add xchg cs (bad) xchg jns mov jle cmpsb adc vucomiss fstl jl pop cld mov adc rsm callq retq or iret or (bad) xor or xchg jge (bad) (bad) je jp add jne xchg rex.WX rex.WXB movabs rcll pop adc and rex.RX retq adc mov scas addb or xchg scas jge adc not movabs shll push outsb lea movabs sub stos in adc clc mov jg loope xchg or pop xchg iret (bad) and xchg loopne xor mov ja and push scas popfq rcll cmc hlt jl (bad) mov jmpq and xchg rex.WRX mov rex.WRB iret out (bad) gs fwait adc xchg mov adc (bad) (bad) mov rex.B imul mov mov jl movsl jnp and push ja xor rex.RX (bad) fnop (bad) insl cmp sbb mov cmp test enterq xchg sub mov fwait xor jb movabs push movabs ds test in and mov jbe (bad) shr out psubq sub (bad) mul adc sarb cltd sahf lret push jno mov adc jle mov cmp sub pop sub rcrb push xor callq (bad) add cld pop adc (bad) ds lock mov callq or adc fstps fldl (bad) adcb stc test lock cmp mov adc jns lret pushq out outsb cs rex.WRB rex.RX je (bad) mov xor xchg rex.XB (bad) enterq push push cwtl (bad) jo xor pop retq jne mov adc sbb movabs xor adc sub ja jbe sub rex.RB and adc sub xchg retq (bad) cli js or repnz (bad) xor nop pushfq gs cmp enterq rex.WRB xor and (bad) and in lods mov callq xchg jne (bad) outsb sub insb movabs sbb mov push xchg iret (bad) cltd mov xor mov in fcomps cmpsb adc jne sti cmp data16 scas (bad) (bad) mov cmpsb jno push xchg jle int3 xchg sbb rex.RB push retq xlat nop test jb (bad) test mov and fld cmpl jne (bad) jo (bad) cmp sbb jmp or (bad) pop (bad) (bad) or xchg scas mulb insb (bad) fstl movslq cs add xor adc clc sbb jae sbb mov pop fcompl rex.XB jl jnp push cmp adcl (bad) scas lea xchg mov cmp jg rex.R xor pushfq (bad) or jmp (bad) (bad) lret fisubl (bad) (bad) xchg xor cmp pushfq rex notb gs scas push and sbb mov fdivs incb callq pop add xchg (bad) sub sti sbb lods push adc xchg xor (bad) adc pop (bad) (bad) rex.X jl div adc add adc fisubl push xlat (bad) (bad) xchg movabs out cmpsb rex.WRB pushq xlat sub (bad) rex.RB xchg ror jns imul pushfq fs (bad) in lods adc mov rex int3 (bad) and jmp test out mov scas xchg icebp (bad) sub addr32 (bad) and data16 adc sbb sub or push sahf adc test rex.WRX and and mov fidivr testb faddl (bad) (bad) (bad) pop push (bad) xchg or or xor sub sbb (bad) ds sbb rex.WX fwait xorb insl jg jae adc icebp repz (bad) clc imul outsb retq movabs mov popfq fsubl pop cmp xchg in shlb adc (bad) (bad) jne clc fucomi fild add roll adc stc rex.WRXB lods (bad) adc gs mov imul push xchg adc rex.WR ds incl xchg pushq cmp test rcrb pop lods mov (bad) rex.WB lock adc or (bad) leaveq ja lock xchg add stos mov rclb (bad) jg cmpsb clc test xor (bad) or fadds addr32 push cmpsl outsb test cmc xor fildll xor push and mov mov (bad) bnd ror (bad) sbb mov and pop rex.X jns push pop and in (bad) and xchg jb (bad) mov (bad) out cld pop or mov push sbb in rex.R adc push xor cs movslq data16 andl sub and repnz scas (bad) movabs jae (bad) es cmp repz mov or xor pop in enterq sbb rex rex.RB xor repz adcb ja lods adc and jp add retq (bad) or movabs or sub hlt push rex.XB (bad) andl scas div mov adc add roll mov negb repnz sbb cmp scas pushq add rex.WRXB sti jns cs and rex.XB jne fisub mov cmp xchg sbb xchg adc xor rcrl (bad) cltd iret rex.R pop scas (bad) xor shll stos (bad) jmpq fadds sub ss (bad) (bad) rex.WRXB retq fmul mov stos cmp xor loop and sbb stos icebp out pop int (bad) sbb ror lahf mov (bad) or jns mov jno or in hlt out pop sub lahf mov xor idivl add sbb lock (bad) sahf sbb xor add repnz cmp pushq mov mov rex.WR xchg (bad) pop xor stos and xchg (bad) jno int3 movabs rcl pop cmp lods mov cmpsb cmp mov xor xor jno faddl jrcxz clc xor (bad) in repnz sbb mov insb stos test stc jl in in rex lahf out test xor out (bad) rcrb and jg pop stos (bad) (bad) sbb lea lock cmpsb (bad) adc add mov add movaps ja (bad) idivl imul ja stos jrcxz shr rex.WRXB rex.RB push mov fs cli in lret cmp rex.WB add (bad) ficomp or mov and push jl data16 rex.RX cs cmp std stc push pushq stos sbb outsb sbb rclb or mov cmp xchg in jne cli jl push popfq (bad) sbb negb adc (bad) in sub mov xor js insl scas adc out xor fdivs in outsb pop stos clc jns mov xchg (bad) divl pushq rex.WRXB movabs (bad) push rex.WB sahf lods or jge (bad) mov rex.B repnz js movabs rex.WB callq jle fisub (bad) imul icebp out xchg insl (bad) fisubr pop pop mov mov mov mov (bad) pushq (bad) jne fistp mov (bad) push fdivrl fdivs (bad) mov scas fisubr (bad) pop rex.WRXB mov (bad) jae out and push or xlat cmc clc (bad) outsl (bad) callq movabs sub cmc cmp cmp pop mov pop pop mov mov jbe clc xchg cmpsl fildll mov fisubr (bad) mov ds test (bad) andl imul sbb rcll mov (bad) and (bad) lock retq (bad) insl (bad) mov adc lret leaveq sub adc retq retq mov rex.WR cmp xchg jno lock (bad) ss push movslq (bad) xor and cmpsl (bad) adc mov ffree out fwait and xchg xchg pop insb mulb mov mov sub and and sbb stos adc rex.WRX adcb xchg cmc adc gs mov lock clc fidivrl pop stos lret jno adc fdivrl xchg mov mov repz push fcmovbe int rcr sbb out jl (bad) cmp movabs movsb neg test adc (bad) sub fyl2x retq (bad) rex.RX js xchg push repz adc jo (bad) xchg xor idivl sub fucom fdivr adc (bad) mov mov or xor push jns adc out rex.WRXB mov (bad) jmp int3 clc (bad) mov fistpll adc int rcll sbb stc add pop and xchg (bad) sub sub (bad) or push scas adc and mov movsl mov retq mov adc fidivr rex.WB xchg (bad) mov mov mov jns xchg jnp rex.W xchg sbb psubd js xchg mov or rex.RX jb outsb fstl (bad) movabs sub shll nop rex.WB pushq and shl cmc push out pop (bad) lret (bad) fs sti pop lahf int mov jl push fldl2e cld ds (bad) mov pushfq (bad) insl or orl jg shl sub (bad) mov addb in fwait xor sbb mov jl js or (bad) jl sub clc movabs push xchg out stos mov mov in cmp jrcxz (bad) jno xchg (bad) xor push and int3 movabs loop (bad) mov mov cmp (bad) xor cmp add xchg es cmp enterq int3 insl mov adc (bad) test cmc fbstp cwtl repnz gs jle idiv cmp callq (bad) sub gs shl (bad) (bad) pop xchg jle rex.WRXB adc jge callq jg stos push lret sub mov int lock out popfq pop xchg lcall in xor pushfq cmp (bad) add jno mov movsb (bad) mov mov xchg jmp jbe (bad) mov mov adc callq lea addr32 cwtl (bad) jns mov shrl xor jne rex.WX adc lock flds add std and loope outsl sbb push mov and jbe xchg repnz mov and jle xchg scas sub sbb (bad) callq add (bad) enterq pop cmc (bad) notb xor cmp mov (bad) mov pushq (bad) cmpsb std sub mov out test ss xchg frstor push cltd or (bad) adc (bad) and adc add cmpsb retq repnz mov rex.WRB sub insb out pop rcl cmpsb or test add sub cli pop (bad) rex.RB xchg imul fs adc fdivp xor (bad) adc jle cwtl adc jg mov mov push cs fstpl fwait callq repnz (bad) adc and and sbb rcrl jbe frstor (bad) int3 (bad) stos rex.WR pop imul xor mov adc xor (bad) std or jne test push (bad) jl out xor (bad) sub callq ficomp test rex.WR pop ds and rex.WXB loope adc (bad) (bad) pop rex.XB pushq pop rex.RB in imull xchg cmpsb fcomps (bad) retq testl in incb movabs mov (bad) add pushfq mov (bad) popq (bad) fildll adc fdivs mov sbb or cmp rex.RXB rex.RX jbe lahf test mov test sbb xchg mov out addr32 js mov rex.WRXB add vsubpd callq and xor jg (bad) rex.RXB adcl imul push int3 (bad) or xor movabs movsb cmp out sahf pop (bad) outsb test sti jo (bad) retq incl xchg in (bad) std (bad) adc cmp retq rex.W fwait sub add (bad) jmpq adc cwtl js adc rex.WRXB test xor sub fistp xchg mov push sub pop fwait pop mov xlat (bad) (bad) mov leaveq (bad) sbb adc cs (bad) int3 adc movslq or push lret adc cmpsb data16 adc (bad) mov stos add xlat (bad) ja (bad) rex.RB (bad) xchg rex.XB rex.XB (bad) fs retq andb and fwait movabs imul and add or repz rex.WB push out mov xor and push push sub rex.W (bad) mov int3 cmp rex.RXB pop frstor adc lahf sbb (bad) lret jg add mov movabs outsl test rex.XB mov and or rex.WXB fwait mov xchg mov (bad) (bad) sub (bad) add or stc hlt rex.WX cmp cmp or xor test mov rex.R or cmpsl fsub add lret and fwait rex.WXB (bad) repnz mov sbb (bad) push sbbb mov (bad) rex.WR rex.WRB mov adc popfq push retq hlt sbb lea add mov negb push retq jae mov xchg and ss cmp icebp repnz xor (bad) (bad) mov mov cmpsb rex rex.XB addr32 (bad) rex.RXB mov (bad) test cmp (bad) outsl (bad) sbb xchg std mov rex.WB lea (bad) or hlt cmp fsubr rex.W cmp callq out mov jb mov iret sbb (bad) xor mov add (bad) mov add (bad) sbb xchg xchg cmp mov push (bad) sub cmp roll int3 rex.WRX rex.RB cmp fistpll xlat imul xchg rex.WX rex.X repnz pop xchg scas out rex.RXB test (bad) gs clc ja lahf retq stos rex.WRB (bad) lahf (bad) in es or cmp cmc out retq rex jo cmpsl cs add ss or pop push mov and jb cli lahf enterq loop rex.XB insl mov lahf xchg mov rex.RX (bad) cli sbb std adcl movabs std rex.X or pop mov stc ja movb pushfq fnstsw adc stos or fwait leaveq roll adc push fstps cmpsl adc and pop frstor rex.WRXB nop (bad) cmp movslq jge (bad) callq and sbb data16 callq insb xor cmpsl sbb movslq mov ja jbe imul xchg sbb fistpl xchg std lahf out adc (bad) ss pop (bad) outsl (bad) in xchg xchg cld lcall mov mov jns gs movsb rol (bad) retq add (bad) sub sbb cmp loope xchg addr32 cmp pop jl loopne sti cmc cmp rex.WRB rex.WXB pushq rex.WRXB and cmp scas pushq (bad) xlat movabs xorl (bad) iret sarl movsl rclb jle adc rex.B insb sbb out sub pop push int3 fnop or pop lret adc jne mov push adc jnp out xchg cmp adc cmpsb mov cmp (bad) mov fsub cmp lret adc cmpl mov (bad) popq addb lahf or or rex.WRB cmp add mov (bad) rex.X (bad) rorb sbb adc rex.WB rex.WR lods in flds and (bad) test (bad) out bnd mov adc je lods xorb adc (bad) (bad) (bad) movslq pushq mov xor rex.WR repz out jno out (bad) cs out mov (bad) std sarb fbstp fnsave and sub (bad) (bad) (bad) cs add test (bad) rex.RB sub test retq movsb pushq (bad) fdiv push mov pop imul mov imul sub ficompl (bad) push sbb adc imul and adc rex.RX mov push sub or (bad) mov sub in or sti mov lock lock mov test rex.WX and xchg adc int3 or push add xchg (bad) jg insl fs cs pop movabs xor lods xor push xchg sub (bad) sbb cltd sti adc or xchg movsl jns adc in cwtl fimull mov andl fisub jnp adc mov and and xchg ja xor (bad) xadd pop sbb (bad) (bad) and callq lock andb lods xor push adc add adcl divl int3 or mov popq adc jl jge (bad) cmp and pop fs (bad) retq push adc mov shrl (bad) out jrcxz rolb sub mov cmp rex.WRXB sahf repz callq mov xchg mov add retq je xchg callq or adc (bad) mov (bad) and mov jns (bad) xchg or cltd repz loopne xchg imul pop jno cmp pop sbb sbb mov or rex.WB imul sbb xchg (bad) sub lea callq or enterq inc data16 add jl xchg cli in xlat addl xlat (bad) pop adc jnp mov lret push gs cmp rex.WR (bad) rex.WRB pop (bad) scas fcoml hlt (bad) mov movsl out sti mov add rex rex.B int3 (bad) (bad) rex.RXB rex.RX iret and gs out movl sbb mov pop push testl adc jmpq enterq mov (bad) (bad) ss adc fnstenv iret std pop mov sub adc addr32 scas sub nop (bad) fs fdivrs cld or add xchg adc subl stos lret rex.WRX mov xchg cld jg (bad) xor (bad) (bad) mov add sub fsubrs lret (bad) fs mov sbb or xchg (bad) cmp and mov xor js adc movsl (bad) pushq push add mov pop xchg repz sarl rex.WRB (bad) adc adc repnz fs icebp xchg sub push test rorl test roll push mov orb in (bad) pop cli pushq fs xchg orl push adc rex.WRX rex rolb jo fsts ds out mov es mov (bad) out (bad) (bad) pushq data16 lods add (bad) out sub (bad) (bad) (bad) (bad) rex.WXB or sbb (bad) add xlat movabs mov and out sarl jl (bad) add mov xchg sub adc movabs fdivrl fxam int int3 adc jno (bad) rex.WRX cmp stos es callq pop fnstcw int sub xchg rex.X rex.XB jrcxz cmp adc xchg sub pop test or out rex.RX rex.WRXB imul out add adc rex.WRX (bad) xlat stc and xchg ffree std js (bad) rex.XB push fwait adc scas (bad) mov retq add cltd mov (bad) cmpsl (bad) adc sbb movsl mov lock mov add callq ja mov sbb stc lock ja pop (bad) jne or (bad) jle xor and int3 push rex.WRB push mov mov lret rex.RX enterq stos cld lock rex.XB callq pushfq cli movabs stc cs sub mov (bad) (bad) mov push jl repz sahf imul movabs (bad) (bad) rex.RX movabs (bad) mov fnstcw xchg (bad) in or adc popfq rex.WRXB ds sti pop rorl cmp jl movabs movabs sbb sbb jmpq mov mov lock retq test shrb scas lock testb rex.WRX sar xchg imul add jb fucomip (bad) insb (bad) xchg xchg sbb xor add sub (bad) (bad) ffree and (bad) (bad) adc jno cli adc (bad) rex.WXB cs jno test test lret mov sub rex.WRXB mov or stos (bad) hlt rex.RX es sub imul movabs cmp lret testl xor (bad) (bad) or sub add (bad) int3 (bad) jrcxz mov (bad) (bad) ficomp mov jmpq out orb out fwait pushq push stos pop movabs (bad) (bad) (bad) cmp (bad) cmp and in fcomip fcompl (bad) adc sbb repz pause rcr add lods push repz retq jne popfq mov push mov pop (bad) (bad) mov mov (bad) rcrl and (bad) jnp push xor adc push rex.WRX pop jae in jno xchg fisubr rex.W rex.XB push icebp sbb clc (bad) push jne lret jmp sbb mov addr32 rex.RXB sysret adc mov pop cwtl cmp stos rex.WRB push or jnp nop rex.X sbb (bad) shr sub es (bad) jb movabs lret lock repz sbb rex.WRB mov mov rex.WXB rex.R lret pop and jnp jno fsubrp (bad) retq jrcxz mov out scas mov nop add int cmp (bad) mov push cld rex.R rex.X lock divb pushq (bad) in out ss mov in mov and (bad) add pop xchg sbb pop pop callq leaveq push cltd sub push out and in push rorl callq jno xchg rex.B rex.B outsl rex rex.RB shlb cld or cmpsb pop (bad) mov jne enterq push push xor scas (bad) and sub cld int3 (bad) add out mov fdivrs or sti retq movabs and mov repz (bad) test rex.R insl ss or mov sbb (bad) and jrcxz or lea movsb or xor (bad) (bad) pop callq adcb rex.RXB insl rex.R xchg (bad) add callq fwait enterq rcl xlat movabs nop insb bnd imul and out js mov pop repnz hlt pop mov sub pop scas sarl xor (bad) (bad) mov jne or jne lods jne stc pop cmp pop sub retq mov addr32 (bad) xlat jg rclb adc ficoml xchg (bad) sti fsts cmpsl in callq andl rol sub out and cmp (bad) and lock popfq in adc je jg in movsl mov out xlat adcb rex.WRB adc std cs je (bad) (bad) callq and mov xchg push add out pop pushq add lret mov out (bad) int3 (bad) leaveq (bad) movabs adc xor addr32 mov (bad) jno outsl std incb loop mov cld ss (bad) lods adc movabs ds mov clc rex.WXB (bad) (bad) jbe ja cld mov adc jmpq stos xchg add (bad) mov callq add adc or (bad) pop scas rcll sub stos mov fwait jbe ficom outsb or (bad) xchg add push loopne sub jmpq rex.RXB and retq (bad) (bad) jae repz mov out testb out insb push rex.WX mov out pop mov rcrb fcmovne mov rcrl rex.WRB pop loop push adc (bad) insb or js stos (bad) mov xchg jmp imul (bad) iret cs xor rex.R repnz and loopne (bad) ja xchg (bad) (bad) and testb or (bad) out sub sahf push in test lods imul (bad) js fwait (bad) push add rclb xchg adc (bad) xor mov popq mov cmp rex.WB mov mov rex.WRX fistp rex.W (bad) lock mov xor pop and mov mov neg loopne icebp (bad) or mov mov test stos jno movsl sub xchg fbstp rex.X insl xchg jae (bad) add fwait rex.RXB int (bad) sub imul mov pop repnz rex.RB testl sbb push mov jnp cpuid add adc mov or add sahf rex.WR mov cmp rcrb push jb es ja sbb adc mov mov xchg rex.WXB add add sahf pop cmpsl or push cld fidivr pop (bad) (bad) mov jae nop sti cltd rex (bad) lret ja (bad) mov or jns in adc ds fdivl pop cmp cltd adc push adc cs int3 clc mov shl jp cmp (bad) test push lods and (bad) rclb lea lahf pop fsub fldenv callq movabs xor mov movl cmc jmp and movabs sbb loopne xchg push mov imul mov and vmovupd pop (bad) cmp xlat and (bad) imul js and js imul pop sub (bad) test repz ds jp cmp imul fcmovb xor in xor push (bad) mov rcl stc cmp mov (bad) or mov xlat negb sbb out retq es js,pt fidiv xchg insl mov adc or adc ja cmp mov cwtl jae jrcxz hlt (bad) sub fsubr mov rcrl adc mov ss ja sbb cmp xchg movsl and cmp mov sub scas cmpsb mov (bad) xor and sbb retq gs rex.XB ss adc (bad) and cmp (bad) in (bad) rolb andl mov movsb sub mov sub pop rex.WX stos jno sub (bad) mov sbb stos out jne repnz retq nop adcl rex.X sahf jne hlt lea out add and rex.RB and push pop cmp outsb (bad) mov mov in out rex.X sbb add add rex.RXB rex.W and or push sbb lock scas sub push pop jno xor leaveq sbb add popfq pushq cmpsb cmp mov repz icebp add nop in jmp gs (bad) movabs mov (bad) out cli xor (bad) jmp lods mov add pop mov movabs lret (bad) (bad) imul adc (bad) cmp fidivr xchg sub add hlt (bad) push cmp xchg mov jne movsl adc ss mov mov loope push ds xor xchg jmp or rex.WRB repz mov rex.X sbb (bad) rex.WXB (bad) (bad) and sub fdivrl pop xchg popfq (bad) clc out jnp or (bad) imul xlat js test adc adc adcb mov xlat xor fsubrs or (bad) jmp adc subb or mov (bad) xchg adc xchg adc (bad) lahf rex.WRX adc (bad) (bad) (bad) adc int3 in pop cwtl mov rex.WRX push rorl (bad) (bad) lods clc (bad) scas push (bad) cmp lahf adc rex.X fwait sbb adc push pop repz xchg ja (bad) xor sarl pop lock (bad) loope (bad) (bad) movsl sbb xchg fnstenv or push mulb pop adc xchg (bad) adc sahf xor rex.X pop adc push divl add adc (bad) int3 outsb sub callq jge add mov (bad) imul mov (bad) xchg repz xchg loope (bad) xor sub add ja outsb push rex.X push retq add leaveq hlt ror add sub pop and gs movabs sbb iret mov rex.R outsb xchg callq cmpsl fs mov (bad) add (bad) popfq mov insb sub sbb (bad) leaveq mov xchg vmovntps adc sbb rex.RX gs adc push repnz fadds xchg xchg adc push movsl mov test xchg push mov retq (bad) clc (bad) mov (bad) adc nop sub lods pop cmpsl rex.R mov add sbbb cmp sub idivl adc push test add ja (bad) movabs rex.WRB jne (bad) adc (bad) mov addr32 or xchg xor sarl add (bad) jbe sbb pushfq fisttpll push xor outsl cmpsb rex.X cmp cmp pop or (bad) enterq pop js (bad) repz (bad) movsl (bad) nop repnz mov (bad) cmc fwait (bad) fisttpll (bad) es sub movabs (bad) in movabs add or adc jbe add fidivrl (bad) pushq mov mov rex.XB pop (bad) fstpt sahf xor leaveq xchg (bad) pop rolb adc xchg (bad) mov out xchg (bad) mov cld ss rex.R js fs shl xchg sub js xlat cmpb and lods add (bad) pop callq xor clc sub loope gs js jo and mov xchg mov (bad) mov rcrb or push jg sub push add sbb fcomps insb cltd xchg pop fimul mov mov and add mov fs cwtl push pushq and or iret lock je scas insl mov movsl loop shl xchg imul mov mov mov add rex.R rex.XB movabs lea hlt sbb rex.WB lock mov (bad) enterq scas (bad) rex.XB jle hlt stc fidivr clc sbb adc and imul repz lock and outsl retq in out xor xchg cltd push cltd xor mov fmuls (bad) fwait callq shll movslq sub mov retq popfq cwtl (bad) jbe je icebp in iret in movsl rex.RB repnz jle pop out jmp int3 jo add (bad) xchg mov pop mov mov sbb mov mov cli add repz cmp mov or add fxch fadds jbe movabs mov scas (bad) insl adc retq and push mov (bad) cmp (bad) jle pop adc out rex.WX or mov loop and cmp (bad) mov cmp rex.WB (bad) (bad) mov xchg movabs ljmp insl push push push jl sbb cmpsl (bad) cmp jp rex.WR in add cwtl jne mov jrcxz adc scas fbstp mov push jge adc and int3 pop push (bad) lret cwtl mov xor mov lahf jrcxz add movabs sub push jae add and push mov (bad) movabs pushfq std popfq sbb cmpsl xchg xor pop je movabs retq (bad) cltd sti (bad) add xlat and jmp movabs out adc popfq xchg sbb ss cmc in repz orb mov (bad) movslq int push jbe cmp ds setnp mov mov ja add jae xlat rex.B or pop mov sbb xor cmp shlb (bad) sbb lret fadds iret ds jno imul mov (bad) std xor callq pop (bad) jnp (bad) lcall (bad) mov adc and jge es pop rclb je lea jbe callq add (bad) movabs (bad) adc in lock iret in mov movabs cmp rex.WB cli add ds sbb rex.W addr32 pop mov cmp lods (bad) ss cmp movabs out mov callq cmp and fmul sete add movabs (bad) xchg retq rex.RXB rex.RX fsubr (bad) sub jb (bad) or cmp scas (bad) push (bad) (bad) cmpsl xchg jns xchg adc mov (bad) loopne addl data16 sub retq clc (bad) rex (bad) or push pop rex.R and sbb push rex.WXB xor mov fistl xor stos (bad) cmp adc push ja pop adc xchg mov xchg pop rclb in or ficoml sbb (bad) pop fmul push ss and (bad) (bad) jne cwtl xor cs rex.WXB adc (bad) rex.WR movabs sub outsb and and rex.WX callq add int3 pop sbb pushq mov jne adc adc rex.W (bad) jo xor mov cmp sbb or and or push adc es cltd (bad) movabs in mov jle subl test sub cltd and mov hlt je add rex.X xor in xchg add jns xchg ss rex.WRXB or imull pop (bad) jl fdivs retq int3 adc sub jl sbb mov push xchg rex.X sbb rex.WR jl in jrcxz rex.WRXB vaddss mov rex.WR rex.X mov mov test enterq pop ja sbb lea and icebp sahf rex.RXB repnz xchg cmc jno pop mov test (bad) loopne xor (bad) xchg xorb (bad) in jg mov or cli clc insb shll push test (bad) sbb mov xchg test adc add sub jnp mov xchg adc (bad) xchg in rex.WXB ss xchg stc (bad) add rex.X jp leaveq out icebp enterq lods fnop (bad) orl nop xchg jbe sbb pop repz (bad) sti imul movabs (bad) rex.XB add or adc (bad) jl rex.WRB adc xor jno mov repz out int adc stc fildl mov mov mov adc jnp rex.WRXB (bad) mov fcoml add jnp or (bad) cld test (bad) out std sub scas rex.RB rex.XB (bad) and in movb enterq mov adc test (bad) rex.RB mov pushq xchg jae (bad) add and jmpq sbb ja cmp (bad) sbb jrcxz jg data16 sub (bad) repz (bad) fistpll or clc or int pop or mov rex.WB fsubr mov rex.WRX rex.WRXB and adc flds repnz repnz mov addb or cmpsl pushq rex.WXB rex.WX (bad) lods scas xor adc (bad) (bad) ds mov (bad) retq adc divb fstpt outsl push xchg rex.WB jl in (bad) cmp (bad) (bad) adc xor int xchg cld (bad) (bad) loopne rex lret outsb pop xchg (bad) xchg callq sub (bad) loopne out mulb jne int3 adc mov insl imul callq mov mov xchg rex.X adc add cltd mov (bad) (bad) xlat mov (bad) jno adc or fcoms loop lock movsl (bad) xlat shrb add xchg jmpq cmp adc popfq or push data16 mov add jo rex.R rex.RB scas rex.WRX pop orb jne adc push sbb push in fcoms ss adc pop roll cmp (bad) out retq lahf (bad) (bad) movsb imul pop test xchg cmp jp mov js lods movabs movabs pushq push (bad) jnp fistp movabs mov in rex.X mov mov xchg scas repnz cmpsl jle sahf int3 callq out (bad) fcoms cwtl push (bad) (bad) mov lea add rex.RXB mov xchg rex test fildll add cmp pop push fsubr push (bad) (bad) cmp sub out (bad) rex ss lods mov xchg repz int3 rex.WRB gs out pop mov (bad) mov out (bad) (bad) rex.XB adc outsl (bad) mov sbb cmp mov insl jne std add sbb movsl or ds cmp fistl pop (bad) jns nop cmpsb or push mov cs sbb rex.WRXB or out and rex.WR js xchg mov stc (bad) (bad) jge (bad) out (bad) rex.X adc movsb (bad) (bad) js sbb and test mov push lret add pop sti (bad) rex.WRXB cwtl adc rex.WRB callq retq jae rex.RB xchg push rex.WRB cmc xor adc add mov adc fistpl std int3 add xchg rex.B rex.X sub rex.XB mov in adc mov pop fstl rex.RX pushfq adc cmp movabs (bad) xchg push rex.XB add jo pushfq mov sub cmp imul xchg stc mov mov movsb cwtl sarb enterq mov or jne test fcmovbe movabs or (bad) rex.WXB rex.RX notl xor cmc leaveq add xor sbb jmp jle mov cld fdiv fistpll (bad) xchg rcr in jno mov fwait (bad) push int lods pop sbb jno jb mov push cmpsl or pushfq (bad) gs jb ss mov (bad) (bad) ja (bad) testl retq fwait rcl out sbb xor mov adc repnz sub rex.RB xchg push cltd (bad) adc or xor jl mov sub out rorb movabs xchg ja js jrcxz clc pop mov insb push xchg add leaveq xorl add xor xor out mov (bad) bnd cmp cmp mov out (bad) xor ffreep movsl loop (bad) es roll pop js or adc adc loopne rex.WRX (bad) ss (bad) rex.B not pop es or pushq pop out (bad) sub icebp stc scas mov movups and adc add xchg callq adc and test or (bad) fist sub cmove (bad) mov xor test rex.WR add (bad) mov and add movsl pop ja mov fildl jbe cmp fstps rcll (bad) (bad) jg test rex.WB lock addl cmp cmp (bad) sbb mov lock (bad) (bad) xchg cmp jrcxz (bad) xor loop pop and or fisttpl rex.WRB rex adcl or rex.RB cs ss rex.R sub test rcrl (bad) fmull xor rex or insl mov push (bad) mulb ss sbb pop sbb sbb enterq rex.RXB rex.WXB rex.WR xchg (bad) (bad) rcrl cmp mov int (bad) je test cwtl jmp sub fs jp (bad) negb cmp rex.RB roll clc lret mov mov movsb sub pop add adc gs mov rex.RX mov push mov xchg rex.WX stos sbb popfq pop fcoml mov sub enterq adc add sub cmp xlat (bad) pop xchg int3 pushfq cwtl (bad) cmp (bad) sub add add or xor in xchg adc xchg sub xchg push push adc adc repz sub push xor int3 (bad) or fistpll xor sbb (bad) (bad) cmp out sub lahf rex.WRB repz cmp callq loop xchg fnsave lret (bad) (bad) pushq je loop (bad) xor enterq movslq or movslq rex.RX gs movslq xor faddl (bad) jmpq cwtl or outsb (bad) cltd repnz and mov adc adc sub popfq mov (bad) insl adc retq orl rex.RX in jmp insl xchg mov jmp xchg in movabs rcr or mov adc rex.WRXB (bad) and int sub test push (bad) or vrsqrtps (bad) jns sbb mov pushq or (bad) es adc notb pop mov (bad) push test sbb or hlt adc and insl or adc pushq rex.WXB scas ds (bad) fisubrl xchg (bad) cmp rclb pop add xchg lea sbb add punpckhdq callq fwait scas xchg sub fucomip (bad) je (bad) adc clc add pop je push retq cmp cmc js ficomp hlt jns jmp mov sub jp clc rex.WB icebp push out add test shlb bnd fistpll rex.WRX push stc leaveq stos (bad) out sub out xor rex.RXB sbb (bad) sub fidivrl gs icebp cmpsb sbb imul rcrl std ss retq mov pop and rex.X mov push push add in leaveq jmpq (bad) cmp sub mov repz fmuls sahf fcoml mov adc xor mov gs addr32 adc push push in rex.WRB jb add jge repz fdivr incl cltd enterq mov jae cli xor imul enterq pushq mov mov js ss clc rex.WRB rex.WRXB push stos sub movabs fimul fstps (bad) xchg xlat and rclb int3 movabs cmp mov sbb (bad) setnp lock (bad) imul adc add hlt xor sbb sub pop xchg cmp nop stc test repz ja lods (bad) lods xor fcomp (bad) movabs and (bad) jg adc lods mov testb jge mov retq lahf out negb jo (bad) cld mov ja (bad) mov cmc or in jo push jg (bad) fwait xchg retq shll and icebp (bad) adc fsubr mov mov out push int3 cld sti xlat cmc outsb lock lret je (bad) sbb out pop data16 or imul movabs rcr fistpl test (bad) cmc scas jne pop (bad) xchg xor xchg movabs pop push xchg (bad) fwait (bad) movabs sahf adc (bad) mov jg js cmp and callq pop (bad) and rcrb cmp add cmp cmp (bad) mov (bad) rorb mov push mov (bad) or mov lock mull and xchg fwait jns repnz in add iret (bad) sub (bad) int xchg sbb jb sub cmp mov adcl out in (bad) repz ss add cmc cltd mov test rex.WXB jg in in cmpsl movabs adc cli rex.WR cs adc callq data16 push and fsts std jg rex.WXB test pushq clc pop cmp imul out adc stc rex.WB fsubr loope rex.WXB xor andl mov adc out xor adc frstor movsl jl callq cmp push in xlat push push repnz int mov or rex.WX push jle sbb cld fdiv add cmp and adc rex.WRX int3 adc scas adc es rex.XB cwtl pop iret jg insl (bad) movsl jge ss out or loopne mov callq adc push add jrcxz cwtl jnp mov mov lock shll or jp mov (bad) in (bad) mov loope adc lret xchg (bad) or pop (bad) jrcxz adc mov movabs xchg or cmp and ficom repz (bad) shlb add rex.WX (bad) adc shll adc div mov jmp es (bad) mov int3 cmp xor leaveq mov pushfq jae cmp sbb loope or jbe jno insb cmc rex.WRB (bad) (bad) add movb (bad) xchg adc fisttp (bad) jne lock rex.RXB rex.X nop (bad) mov callq rex.WRXB (bad) mov testb jg and mov xchg fistpl lahf sub roll movsb (bad) unpcklps cmp fsubs (bad) outsl mov cmpsb (bad) pop sbb (bad) stos adc fdivr imul repnz pushq mov stc sbb shrl int (bad) movabs fcomps jns adc xlat adc (bad) adc sub (bad) (bad) mov cmpsb sbb push test mov negb (bad) (bad) mov (bad) cld enterq xchg insl mov xor and imul sti add and jbe adc iret (bad) gs movsl sub (bad) (bad) out fidivr jmp xchg stos insb fwait or mov jl sbb jno icebp sub (bad) loop rex sub jrcxz (bad) rclb cmp fstps cmc (bad) (bad) xchg adc cmc mov (bad) stos negb nop sbb push fildll sub (bad) loop outsb pop adc and add rex.WXB pushq out lret mov (bad) rcl (bad) out movsl pop lea jmpq fild mov sbb insb mov adc test movabs push stos (bad) idivb (bad) fadd rex.RX cmp jne (bad) xor add repnz xchg pop lcall xchg and loop (bad) rex.WRXB cmp pushfq (bad) outsb pop xchg imul (bad) lahf (bad) stc or (bad) (bad) (bad) push xchg rex.X cld out cmp (bad) cmp nop add lock adc add enterq out xchg jnp not int cmp rex mulb jg loop rex.RXB rex (bad) (bad) xlat lock lea (bad) jmpq imul (bad) lock sub iret rex.XB and add outsl repz rex.WRB rex.RX cmc repz movabs cmp (bad) (bad) std test (bad) jne (bad) fsub adc add int3 adc pop adcb rex.RXB rex.RXB ss adcb adc repnz xchg rolb mov shrb mov xorl cmp sbb jmpq adcl push (bad) imul rex.WRB sbb xor rex.X (bad) xchg callq pop lock and mov in sbb mov xlat (bad) mov rcr int3 mov mov mov test nop or push iret in test xchg fs pop test movabs rex.X xchg loope fwait (bad) popfq sub out jg ffree mov rex.RXB add (bad) ficomp cmp jge mov pop rex.RX rex.WXB adc add adc jne callq adc and out rex.B rex.WRB fwait movabs jne sub xchg jmpq mov sarl adc loope leaveq test imul (bad) rex jbe rex.X xchg out xchg mov push lcall (bad) rex.WB iret in adc and rex.WR push int jl fwait rex.WR (bad) sub ja push add or pushq fisubrl negb (bad) ss and jge jno sbb pushq (bad) (bad) (bad) movabs (bad) sbb (bad) sub add out or (bad) and cmp (bad) sbb pushq (bad) rex.WRX xchg mov xchg adc rex.W adc jnp mov imul add pop (bad) gs rcrb ficomp fnstsw rex.W (bad) push jb rex.B xchg rex.RB (bad) adc movsl fisub fistpl iret pop pop sbbl add mov xchg fiaddl fistp jae lock imulb jnp and fcmovnu sub and (bad) mov xchg (bad) stos cmpsl adc jp mov adc lret cmpsl mov jno mov out fwait fwait cmp lret fdivrl (bad) sbb rex.XB je lock mov test negb add mov cmc (bad) xchg cmp in and js sti int (bad) (bad) sahf shr rex.RX in push xchg test out adc push sub je jl add push pop mov and adc sub fdivl adc lahf adc icebp cmp and rex.WB jmp mov sub adc push mov fstl xchg adc callq (bad) cmpsb xor je push scas mov cmc lods sbb pushfq fst int ja (bad) adc leaveq in jb adc cmp or (bad) (bad) xor push adc outsl outsb (bad) push adc sbb mov rclb out and out adc leaveq mov adc pop (bad) jno fisttpl jge mull addb lahf adc outsb repz rex.RX mov mov lahf cmp sahf and (bad) or add xchg test xor sahf xor (bad) jp test mov adc mov pop mov imul (bad) pushfq add (bad) lea rex.WRB pop test out adc rex.WB out (bad) sub or adc (bad) push adc push push push (bad) js mov xchg cmp add pop str (bad) (bad) ss cmp test out fsubr mov movabs rex.WB nop/reserved mov (bad) mov (bad) push retq (bad) add or add lock mov mov cltd (bad) mov rolb ja cmpsb (bad) retq xlat rex.RB adc jp add xor mov jle jne shrb pop push (bad) (bad) out test pop nop rex.WR repnz lods (bad) in cmp retq js pop int3 xchg rex.RXB or (bad) cmc js sbb cltd lods push subl fwait mov lahf (bad) pop fwait mov sbb xchg movabs iret stos mov adc rex.WX sti xor or push jo adc xchg push sar cwtl leaveq push jb ucomiss adc je pushq adc add push mov ss adc (bad) repz (bad) (bad) rex.WRXB mov and lahf or cmp (bad) (bad) adc or xor retq sbb mov rex.WRX adc sbb out insl sbb stc adc int mov xchg adc or jae push (bad) xor jbe roll ss pop adc pop mov jmp int3 mov fbld pop mov mov lret or insl adc (bad) pop frstor jo cmp pushq (bad) leaveq adc test pushfq (bad) rolb sbb cmp (bad) clc cmp adc in sub xchg (bad) mov rex.B xchg imul ss sbb add stos rex.WXB cmc add sbb mov (bad) (bad) (bad) and (bad) push xor (bad) xor mov ja (bad) mov rex.WR mov subb pop leaveq push xchg jne mov (bad) test or (bad) adc lods xor and push fnsave adc sub pop (bad) (bad) rolb or loopne (bad) cmp adc int3 rex.R sub mov xchg mov ss imul (bad) sub (bad) (bad) std gs mov add (bad) rclb (bad) rex pop popfq retq lock mov insl pop (bad) and jb cwtl pop fsubl rex push push pushfq jne movabs xchg add je lret rex.WRXB cmpsl adc (bad) mov mov pop sti add (bad) cmp movabs sub in adc bswap adc imul fimul popfq ljmp int3 addr32 neg cwtl rcll lret rorl movsl cli sbb rolb (bad) push xchg mov fnstsw (bad) mov xchg adc mov div rex test jae push cmp jo repnz mov adc iret clc out rcll mov (bad) sbb lods sbb jno mov movabs retq fnstcw push lock movsb (bad) rex.RXB rex.X (bad) mov add movabs xchg cmp or xchg adc pushfq sub cmp pushq imul js (bad) movabs adc mov lahf scas and lahf cmpsb mov jp pop add mov movabs push (bad) repnz (bad) sbb loope push insl test pop jo mov cltd imul imul movsb rex.RX rex.WRXB cmp lods sbb (bad) (bad) ud1 cmp mov callq stos sarl int3 jno (bad) lea mov pop add xor je (bad) cmpsl pop outsl (bad) sarl rclb mov sub rex.R rex.WXB loopne xchg rorb gs pop ds in sub movsb rcll (bad) pushq lods adc xchg mov cltd xchg adc add in int pop or xchg xor (bad) (bad) ficoml fbld clc movabs rex.R insb jns sub enterq stos sbb adc xor movl sub movabs adc (bad) adc sub push nop sti jl test stos nop adc rex or jne sub jns fadds xchg negb outsl scas xlat mov xchg (bad) cli (bad) leaveq (bad) ds sub adc mov (bad) add ds (bad) test (bad) subb test gs adc adc mov sbb xor adc shrl pop ja sbb loopne (bad) jl test or xlat (bad) (bad) cmpsl (bad) lock enterq sub out lahf (bad) jg rex.RB (bad) and lock lret test add hlt sbb sbbl movabs scas pushq (bad) loopne jno movslq rex.RXB rex.WRX or stc outsb lret xor data16 jp (bad) not pop xchg icebp callq (bad) insl (bad) pushq fnsave (bad) (bad) scas mov popq out (bad) es xor and (bad) push imul cmc fwait jno sub mov (bad) cmp roll stc xchg (bad) adcb sbb fs callq jno cwtl (bad) adc out (bad) insb mov rex.WRXB sub jmp ss je cli mov repnz adc pop xchg or (bad) (bad) clc enterq jne fcomps lahf sahf xchg sti rex.XB cmpsl push mov (bad) movabs (bad) fwait cmp rex.RX (bad) out rex.WRB retq mov stos xchg mov movabs imul (bad) and rcl xor adc jbe pushfq (bad) adc imul (bad) or out jae in mov xchg sub pop test cmp cmp rex.R (bad) sbb mov or and rex.WRB or movabs add fcoms js hlt (bad) rorl xchg mov (bad) (bad) retq xor clc sahf (bad) (bad) pop pop and std (bad) lock sbb addb mov push mov (bad) stos xor movabs stos sub (bad) cmp (bad) retq (bad) imull and (bad) cld (bad) movl (bad) adc iret adc cmpsl lahf mov int3 add mov xchg mov (bad) jmp (bad) sub and sub and sbb (bad) mov movabs rex.B lock (bad) xchg iret (bad) sbb movsb rex.WRXB adc rex.XB rex.RX rex.RXB adc cmp fsubr fmul (bad) jle mov and adc cltd cs (bad) cmp jns int3 cmpsb (bad) ss insl (bad) pop loope (bad) shrd lret mov jge in (bad) pop popfq enterq adc sub (bad) loopne rex.WRXB or (bad) rex sub cmp lods mov mov pop cs std decl push movabs insb cs rex.WB jg jg pop xlat cmp xchg or (bad) ss movabs es rex.WRXB and cmc (bad) pop (bad) mov mov stc sub sub (bad) xchg jae (bad) push push add rcll (bad) out xchg lock lods adc and mov add mov mov xor rex.WXB scas xchg mov sbb or sahf callq (bad) movsl (bad) cmp scas xor xchg rex.B jge movabs xchg ss push pop movabs mov xor cmp mov (bad) std fwait jae push adc mov pushfq in and jne pop lahf mov jb (bad) sbb add callq and shl mov clc (bad) (bad) (bad) test pop mov adc jns fbld ror xor rex.RXB sub lods pcmpeqd rex.RB mov or movsl ss mov repnz xchg in test sti pop (bad) fadds mov test outsb or fldl2t and sbb andb lock (bad) pushfq mov push sbb jg (bad) jne fbld sahf push fwait jnp callq sbb and (bad) (bad) push jle add fmul (bad) (bad) mov xor insb rex.X mov sbb add sbb icebp xchg test lods (bad) int3 (bad) out js xchg (bad) sbb or xchg adc test jae movsl (bad) fs adc or jb adc cmc xchg in (bad) icebp cmp or sub iret movabs rex.R sti add retq adc cmp leaveq mov retq loop or adc out cmpsl cmp (bad) adc add cs jp rex.XB jrcxz test add sbb lret scas data16 push lock mov scas jp add mov mov incl outsb ja lahf js and movsb or mov movabs sbb (bad) jne add push addr32 data16 data16 pop lock (bad) movabs iret mov hlt mov retq out in in or pop or es sbb imul retq push cs insl popfq mov xlat rex.XB rex.RX repnz adc vpsubusb mov fsts retq leaveq sbb jp or xor (bad) jge (bad) xchg xor fcomip loope and sub retq pushfq mov xchg sbb and rex.WB divb icebp movslq lock add xor idivl jnp (bad) push sub pushq adc sub movabs fistp pop mov cmc (bad) sbb (bad) retq (bad) repnz mov lock (bad) (bad) mov or (bad) nop out mov adcl popfq shr (bad) xor lods fdivs (bad) sub scas (bad) (bad) or mov sub sbb mov jg ss pop rex.WB jno or mov retq cld imul imul rol test push xchg cmpsb cmp fidivr mov movsb add rex.WRXB hlt rex.RB cmp movsl (bad) lea xor add sbb outsb in push rep lock rex.XB rex.WXB mov mov rex.WB repz push (bad) (bad) rex.WR mov out jmpq and and (bad) jae xchg cmpl lods pushfq leaveq je mov xchg (bad) rex.WR lret (bad) lock xchg mov (bad) pop rex.WRB rex.WX mov loopne pop xchg std retq jne rex.WRB ds jno sbb xchg add movsb xchg mov mov subb jmpq adc fs push add mov stos test test (bad) (bad) fisttpl (bad) movsl rex.RX and rex.W movslq jb shlb (bad) (bad) xchg rex.WX lret rex.XB pop and adc mov int3 retq xchg pop xchg or adc rex.WX and rex.WXB in (bad) lods in out adc ss mov insb scas fldl adc sub retq leaveq sbb or (bad) (bad) (bad) movsl xchg movslq mov sbb pop adc scas (bad) data16 (bad) adc adc add pop adc push rcll (bad) ja test rex.WRB pushq pop std movsb (bad) sub fwait mov xchg xchg (bad) cld fcoml subw ja sbb (bad) clc cmpsl test (bad) xchg rex.R out adc mov add rex.WR xchg xchg lcall and mov add je xchg adc sub rex.WRB jo testl jno rex.WRX (bad) loope xchg add fnsave data16 cmpsl fs (bad) retq xor shl imul jno rex.WB or jns std int xor shrl adc sbb xchg and jmp rex.WRXB rex.WRB xchg mov xchg adc jae (bad) rex.RB (bad) xchg fstl adc (bad) (bad) pop sbb and jbe out outsb out adc pop (bad) jne imul and lea sub sbb outsl fbstp (bad) pop push rex.WR (bad) pushq sub jp fsubl pop cmp (bad) adc shl imul fstl jp sub iret (bad) pushfq retq sub rex.WR adc (bad) (bad) xlat or rex.RX scas rex.WX cwtl fwait push jl jg rex.XB (bad) sub nop in (bad) sbb cs fwait xlat pop add mov fucomip push out iret loop mov mov (bad) loop adc add mov test add adc or enterq add mov adc movabs jrcxz adc movsb fild adc mov scas rex.WRX sbb jl push xor (bad) adc callq retq insl mov (bad) mov adcl nop out adc adc xchg pop out sub mov and addr32 int3 adc lods movabs cmp cmp sar cmp in mov mov cmpsb adc and or test imul pop (bad) insl sbb or cmpsl mov jmp fistp jnp sbb gs rex.WXB repnz (bad) pushfq (bad) jl pop or sub or jle insb (bad) rex.WRX (bad) andl (bad) fistl enterq incl xlat push jmpq (bad) (bad) mov push shrl jg rex.WRX mov sbb (bad) xor out adc fild nop rex jg mov and cmp or lahf sub test and in shlb pop ja (bad) mov rex.WB mov add push mov sbb rex.WX push (bad) or lret xchg sub fadds xchg jle movabs fsubr pushq rex.RB rex.XB out mov sarl movabs pop cmpsb sbb xor push std xchg in out mov push pop lock xchg out (bad) mov jmp fs and sbb (bad) cmp mov xchg pushq std cwtl sub xchg (bad) ss je sbb cwtl stos (bad) (bad) jno mov xor callq mov sub (bad) int3 sbb xchg mov rex.RB (bad) (bad) bnd jp movabs jl ljmp lret mul lahf repnz (bad) jmpq lods scas cmp sbb or jge (bad) adc repz mov push mov sahf popfq loope sub fwait pushfq xchg (bad) adc shll lock pop (bad) (bad) jle (bad) insb mov in iret int3 xchg xchg adc jg lock push out mov stc (bad) cmc insl xor gs jne cltd sbb insb (bad) mov je pop jne mov leaveq lock (bad) nop or xchg mov adc hlt sti callq adc retq test push pop push jmpq cmp (bad) jno jne movabs data16 fs rex.WRB push mov xchg fcomps add (bad) hlt sbb out push adc rcll cmp fistl retq (bad) cmp or (bad) mov repz rex jmp movsl sbb pop icebp in imul push mov rex.RB xchg or data16 push (bad) insb (bad) or xor cmpsl imul (bad) cmp sbb (bad) sbb and (bad) mov sbb leaveq std fbld outsb (bad) mov jb pop sub xchg adc ficompl or mov rex.RX fistpll cmc sbb cli push mov sbb xor adc rolb xor fdivrl adc (bad) iret rorb sub push (bad) faddl jg subl cmp rex.RXB lock adc adc jmp stos movsb stc sbb pop cltd push xor sub adc retq and xchg cmp callq mov jne adc rex.WB xchg stos dec adc (bad) (bad) pushfq movabs xchg pop cmp pushq scas xchg icebp out pushq mov fsubrl lea loope and mov xor out jbe jnp xchg adc adc (bad) and jns sbb jo adc and ja sbb cltd rex.RB repz sbb (bad) rex.WRX cmp adc mov jrcxz ss (bad) adc mov push rex.X fild test cmp add mov (bad) mov adc outsb mov movabs xchg cwtl pop cld and mov rex.RX negl cmc sbb sbb mov test mov adc xor cmp (bad) add fisttpl xchg sbb mov (bad) add pop rcrl (bad) (bad) outsl nop rcll (bad) sub lock fs xor xchg fdivrs clc (bad) xchg adc push cmp add lret adc (bad) addr32 lret mov pop (bad) adcl mov fsts jnp int or cltd cs (bad) test fwait gs jnp adcl push sarb (bad) insl xor (bad) (bad) (bad) xor cld fsubl rex.X loopne adc (bad) jmp adc in mov mov pop mov (bad) (bad) mov and push rclb xchg cli sbb movabs lea xchg jbe insl (bad) rex.WR mov add (bad) addr32 pop cmp clc mov (bad) hlt mov punpcklbw cmpsl mov jo cltd in (bad) jno (bad) cmp (bad) mov testl (bad) jge mov outsb xchg (bad) adc test and jno ja xor adc rcrb jmpq sub and loopne and adc (bad) pop and (bad) jle rex.XB mov cmp mov mov cld rex.XB movabs hlt callq (bad) jrcxz rex.XB fimul fcomp (bad) pop push out adc (bad) rex roll int jp fild (bad) push xor (bad) rex.W (bad) loopne adc jg cmp xor lock (bad) sarl nop jmpq xchg jbe or and retq adc test (bad) push pushq mov jb movsl mov xchg xchg pop insl mov test rex.WR xor scas data16 sub je loope fistpl (bad) (bad) hlt cmc in rex.B push mov insb (bad) add outsl data16 repnz xor lock scas (bad) bnd rex.X movabs incb mov test adc rex.RX (bad) (bad) rcrb xchg mov int3 (bad) (bad) and mov rex.WRX adc rex.WXB and mov push sbb (bad) add fildl pushq rex.B mov cli scas push xor retq rex.R jmp and mov and test movsb roll leaveq (bad) or std (bad) adc insb scas fsubr lods (bad) jbe sahf out (bad) mov fnstcw sub lea adc xlat mov xchg push lea (bad) mov mov or push rex.RX rex.X adc xor sub (bad) sub (bad) (bad) sub rclb adc or (bad) (bad) movabs jp rcll push ficompl addl xchg rex.WX xchg rex.WRX movabs adc pop add negl adc gs and sub pushq (bad) pushfw (bad) repz xorl sub notb rex.WR rex.WRXB ss (bad) adc (bad) xchg rex.XB movsl cmpsb add rex.RXB (bad) jb insb fs (bad) lret adc repnz sahf (bad) rex.XB int3 mov and add lock (bad) push movabs (bad) cmpsl std xlat (bad) xchg mov mov rex.WRX add leaveq rex.W pop add adc and (bad) jb addr32 mov xchg je lret jae (bad) cmp adc push outsb sbb ds xchg adc lock callq or push push (bad) jge stos mov pop or xor mov (bad) xchg leaveq (bad) mov mov pop std pushq fwait sbb (bad) decb xor leaveq xchg or sub xchg pop mov cmp xchg (bad) sahf loop rex.WXB xchg loope lret mov cmpsb jl pop and jno stos cmp test mov mov fstpl sub jmpq fildl and or xchg jmpq sbb callq setp jo or jl mov movabs pop lea (bad) xor jg repnz retq jo repnz rex.RXB push rex.WX cmc (bad) pushq mov mov sub (bad) imul mov push mov subl jbe sbb mov (bad) movabs rex.RB rex.RX repnz xor std and jge (bad) mov rex.RB jle imul sbb sbbb adc stos imul int3 vandps rex.X push enterq test xchg mov xor rex.WRX fidivl pop mov xor movsb xchg mov (bad) sbb cmp rorb mov cmp shlb sbb cmp mov push movslq xchg (bad) sbb gs iret jge xchg rex.RB outsb (bad) shrd sbb cld fsubl fldt (bad) adcl lock rex.RXB outsb cmp (bad) in mov or lea add outsb imul and push adc cli (bad) insb (bad) pop or (bad) int3 fwait cmp pop xor movabs adc fidivr imul (bad) imul (bad) out pushfq xchg (bad) and lods testl jno sbb mov int3 rex add jo imul mov add xlat pop in adc mov xor loop adc rex.WXB cld fwait in sbb (bad) sarb mov sub mov jl negl cltd mov sbb pushq rex.XB orb test mov xchg cmpl out rex.RXB pop (bad) mov xor sub and and ss jns sub xor fdivr add sub (bad) repz pop (bad) fwait sub push jno (bad) xor sbb fstps adc insb mov movslq adcb (bad) xchg lret cmpsb or xchg mov adc or rex.X add sbb mov outsl adc ficom lahf fnstsw (bad) shll and lret (bad) mov fs pop xchg xor jrcxz jmp xchg test mov sub mov jns add rex.WR orb and xor repz imul enterq sub movsb rex.RX rex.WRX mov adc rex.RXB (bad) mov in push sbb (bad) fdivrs adc xchg xchg sbb sbb scas xor pop movabs (bad) push mov add out adc movabs retq and or out or (bad) notl lock add (bad) js mov adc mov lock idivb adc imul imull adc and add callq add (bad) cmc or gs (bad) or rex.X loope (bad) outsl mov adc enterq or cs rcll xchg sbb (bad) sbb jle xor js xchg fstpt js outsb lret sub mov push in mov out jl jb icebp andb fbld repnz cmp rex.RX out push int3 push adc or sbb in mov or mov rex.WRX pop lret out (bad) mov (bad) imul adc or (bad) js movabs push sbb add retq fmuls test test sbb fsubr or cmp jg sbb scas sub cmc (bad) sbb rcll movabs fsubp pop lret xchg mov add (bad) add and (bad) sub retq mov jle sbb nop callq test (bad) int3 jo sti (bad) je rep mov lret mov pop adc rex.W rex.WRB jbe or adc test jnp adc hlt xlat vcomiss fcmovnbe ss repnz (bad) lock fdivs mov adc sahf and imul (bad) jno rcll movsb sub out mov xchg cli pop and imul rcll test jmp (bad) xor (bad) and mov rex.WRXB callq (bad) (bad) jnp cmp fwait add mov sti adc cmpl in insb (bad) js jo push (bad) xchg movsb insl (bad) movabs scas sbb out push rclb negb xchg xchg jnp (bad) pop jae in out sub add sub adc stc int int3 lea sub fnstenv (bad) (bad) rex.W sbb lods xor mov lock (bad) cmp rex.XB push (bad) xchg adc sub pop sbb lea fbld and rex.W rorl adc xor scas adc xchg (bad) or cwtl outsb jrcxz (bad) addl sub adc rex.WRXB add add fidiv sbb push in (bad) neg (bad) (bad) (bad) mov rex.WRXB rex.WR sbb adc (bad) sti mov div and ds sbb (bad) adc cmpsl shl mov scas movabs lods mov lods jbe add in rex.WRX lock out and xorb rex.RXB rex.WRXB xor leaveq sahf add mov xchg (bad) (bad) jae rex.WR push fs push in movabs cmc repz mov xor cmp movabs out (bad) sbb (bad) loop adc jg cmp rex.RX stc (bad) mov push rcr (bad) fstl and and add fs mov cmpsb cltd sti mov fmuls stos jb or loopne lock rcrb (bad) movslq lods sbb js negl adc pop (bad) (bad) (bad) leaveq or movabs pop fistl mov (bad) jb cmpsl jmp and loop mov fs sub add int3 sbb insb out sbb and insb (bad) (bad) movabs callq add (bad) mov fcom push sbbb mov movabs setl mov cmc mov rorb rex.RXB and retq or insb lock rex.WXB cwtl and (bad) (bad) xchg loop (bad) (bad) xchg pop fdiv roll cmp sbb sbb mov int3 loopne cs out cmp pop (bad) je (bad) (bad) fadds push jp mov callq (bad) rex.W cltd cmpsb std (bad) (bad) xor pop pandn or adc (bad) pushfq in callq in sbb (bad) jge add adc andl xor mov rex.RB (bad) xor mov jrcxz movabs shrl es (bad) jrcxz sbb callq cmc sbb (bad) adc orl int3 outsl rcrl sbb (bad) cmp fmull movb xchg add movabs mov retq rex.WRX je add adc gs pop and sarl sub xchg (bad) repnz sub mov fwait test vcvtpd2ps xor and scas mov std negl add stos adc jae out sub (bad) cmp enterq (bad) add and or imul (bad) rex.WB pop add and int3 sbb rex.WR fstpl sbb jl (bad) leaveq jge rolb (bad) mov mov pop (bad) insl fbld lock out repz xlat bnd sbb mov rex.WXB cmp (bad) pushq mov sub xchg rex.WX sarb adc add sbb idivb movabs mov or rex.RX jbe (bad) (bad) and sbb and scas rex.XB ss addr32 rex.XB fsub jle xchg sbb (bad) mov xchg repz sub add add (bad) es iret rex.WX (bad) movslq negl mul xor icebp shlb add add mov lahf rex.RX push lods (bad) out jo fbld (bad) xor psrlw stc out (bad) int3 adc rex.WRXB rex.WR movsl rex.R rex.X rex.WX rex.X (bad) xchg xchg pop test or (bad) int3 and add outsb adc and (bad) jp mov movabs jbe stc (bad) bnd addr32 lea stos cltd lock repz mov and callq sarb push stc cmpsb out (bad) sub rex.WRX pushq and jno std sub (bad) insl (bad) cld rex.WB cli add int shl stc jnp icebp adc mov test rol leaveq fdiv jb xacquire shrb test imul rex out (bad) and push sbb mov movabs sub scas cmp rorb mov pop cmpsl and pop adc sbb cmp rex.WRB subl negl (bad) hlt movsl mov (bad) repnz lock rex.R mov rex.RXB rex.RXB push int3 xlat testb fwait (bad) xchg (bad) insb xchg in mov rex.WR sbb sbb (bad) rex.RX (bad) lock mov in mov (bad) or lods out adc (bad) jne push jrcxz rcr jp sbb mov mov je out enterq pop movabs mov adc roll add or pop loop mov mov adc xchg jp stc cld (bad) (bad) stos sub adc clc mov gs cwtl adc pop idivb adc int3 ja jp jmpq popfq fcompl adc movslq sahf mov movabs leaveq lret push (bad) add retq (bad) stos stos sarb icebp (bad) js movsl outsl in lods adc shll insl or fsubs push xor jmpq pop (bad) adc rex.R addl mov mov pushfq stc fstps (bad) (bad) xchg adc in stos mov (bad) clc outsb adc lret lcall mov (bad) xor cmp and pushq std xor adc cmc js popfq adc jle mov adc jbe sahf cld adc (bad) (bad) push (bad) enterq gs mov xchg push enterq shrl lods xor lahf mov (bad) int xor cwtl adc (bad) sub adc (bad) sbb adc repz (bad) rex.WR xchg xor (bad) scas or jne movabs mov callq rex.XB xor sbb (bad) add cltd pushq (bad) (bad) mov mov rex.X cmp mov mov callq jrcxz and ss out lea xlat and and int3 sbb rex.X (bad) mov add jmpq (bad) xor xchg fwait imul fcoms adc imul mov movabs mov (bad) ds (bad) (bad) insb leaveq outsl (bad) callq sbb (bad) (bad) incb mov (bad) (bad) lahf adc rex.WR xlat mov and xor pushfq repnz rolb movsb or (bad) lret xor fadd mov scas int scas nop ds jge repz cld clc (bad) rex.WX neg mov mov push cmpsb pop es cmc or add xchg rex.W push hlt ja mov xlat cmc ja pop fildll loopne rex.RB movabs (bad) push shr fwait (bad) sbb pushfq push sub ror iret add and mov (bad) lret insb pop adc movsb movslq repz in cli xchg (bad) pop movsl (bad) xchg pushq fmuls rex.R sbb mov stos (bad) cmp in rex.RB xlat and xor or outsl test testl fsub movabs push rex.B xor pminsw mov in push cmp jrcxz (bad) (bad) (bad) es (bad) xchg push (bad) rex.RX mov jo pushfq mov rex.WRXB add data16 retq mov or cltd xorl sub outsb rex.WRXB stos (bad) std adc jg ficoml rex.RX jne cmp and mov in sub fldln2 in adc (bad) xor fcoms mov jl add callq adc pop (bad) lret test (bad) xor jg fucomip xchg lock add xchg xor push movabs outsl lea adc shr test mov jle xchg (bad) cmc pop mov cs (bad) sti xchg data16 adc fistpl (bad) movslq rex.X sbb pop fdiv cmp cwtl jnp cmp (bad) jno jmpq loopne roll xor add adc cwtl jno imul sub repz rex.X divb or xor cwtl lock rex.B movslq (bad) pop rclb fistl (bad) (bad) mov sbb (bad) (bad) data16 jge xlat mov cmp sub cmp imul push test ja jmp pop int3 (bad) ja lea test movabs lock pause sbb cmp cltd rex.WB rex.WRXB lahf stc (bad) fisttpl mov lahf addr32 rex.RX rex.WB rex.XB (bad) (bad) (bad) (bad) add xor xchg in insb jrcxz addr32 decb mov adc (bad) jmpq rex.XB rex.RXB adc add ds xchg mov (bad) rex.WRX leaveq or insb sbb (bad) test test xchg sarb retq insl idivb lock rclb jrcxz mov pop push rex.RX xchg jrcxz jne adc cld movsb sub adc (bad) rex.WR adc adc xlat (bad) adc adc (bad) sti adc rex.WRX (bad) or (bad) js add (bad) (bad) cli (bad) mov rex.WRXB pop fnstenv divl movabs ss out adc mov fs adc jno sbb clc mov (bad) lahf pop (bad) adc pop adc (bad) xchg insb push pushfq push mov fisub scas jae icebp fistpl enterq (bad) cmp test xchg fs adc mov insl lahf and rex.WRXB out rex.RB lret mov and jmp pop (bad) (bad) movabs rex.WRB mov (bad) rex.RX rex.WRX rex.WX hlt lock mov mov or fidivrl adc xor std in (bad) rex es (bad) mov cmp rex.R ds movabs fnstcw rex.RX rex.X pop and (bad) add leaveq cld cmp jg in add xchg imulb sub (bad) mov callq add (bad) and imul push (bad) jb xor imul and xor (bad) sbb pop retq adc add mov add add in imul sbb adc sbb mov mov (bad) mov movabs sti (bad) rex.WXB pop hlt (bad) adc jmp imul (bad) push (bad) pop fdivrs add sub repz jmpq jnp rex.WRB rex.WR rex.XB adc add vfmsub213ss push adc outsl repz xor (bad) (bad) fstps lret (bad) (bad) rex.R js mov adc nop mov sbb mov mov add push out adc cmp cmpsl cmovbe fist xor sub (bad) or movsb in rex.WRX or clc (bad) (bad) fild cld push out xor movabs adc mov fiadd repz and xlat js adc cmp (bad) movl (bad) xor xor imul and stos movabs rex.X ds pop fcoml push movslq jle (bad) rex.RX cmp xor push push adc and add xchg push cmp and (bad) add cmp in mov mov in rcl xchg outsb ja nop jb (bad) jg and fs idivw ss jge lret rex.W rex.WB fwait sub adc sub cmp (bad) iret adc push mov jae lahf sbb nop jo adc adc add jle jmpq adcb je pushq lods jne hlt adc (bad) mov lahf ja cli xlat jb xchg fwait test push push adc (bad) fnstsw adc (bad) xchg push (bad) adc fildl sub (bad) scas xor fbstp rex.WRXB mov cltd lahf js mov mov xlat shll mov and mov (bad) cmp insl (bad) jl popfq cmp movabs and (bad) pop adc (bad) rex.X and rex.WB adc jmpq pop pop scas xchg jns stos xchg (bad) rex.WR fsubr out sub mov and lock sbb scas movsl jl adc mov pushfq ja push adc lods xor pop idivb (bad) or adc pushq xchg rcll adc push mov rex.B mov in int3 scas insl xchg lock (bad) out fsubl or xchg adc movabs adc jmpq in rex.WRX adc movabs add callq movsl cli js sub adc xor mov rex.WB fcoml rcll pushq rex.B rex.X fs sti movslq add mov and addr32 js and pushq pop mov ja (bad) push fmuls movabs push ficompl adc xchg xor jle (bad) data16 retq xchg push shrl movsl mov fsubrs sbb mov (bad) sbb (bad) sub scas and movsb push fdivrs (bad) jnp rorl cmp add mov mov repz (bad) mov mov adc (bad) (bad) (bad) sub mov rex.X fnstsw js cmpsb mov or (bad) (bad) callq in lods rex.WR jno mov mov retq jp (bad) xor rorl repnz xchg insl cmp lock (bad) std (bad) sbb hlt mov adc xchg mov faddp cmp fnstsw in fstpl stos je mov mov push lods mov jl in adc lods cs xchg (bad) xlat adc andb mov jle cld (bad) mov sahf sete fstpt mov xchg je neg js cmp adc (bad) movsl (bad) movabs mov pop rex.XB pop cmp rex.WR repz (bad) (bad) xlat mov std and popfq xchg (bad) xchg sahf jne xor loop insb or xchg cld sbb adc outsl lods xchg sub lahf mov sbb (bad) mov (bad) rex.WRX cmpsl (bad) movsb cmpsb jmpq and (bad) xchg testb fidivr stos sbb and cmpsb rex.WR xlat jno,pt pop jbe adc cmp xchg roll (bad) lock pushq sbb iret (bad) rex.WXB hlt ds push gs sub movsb or rolb popfq xchg out rex.RX cmp lock rex.RXB movabs (bad) fsubl cmpl pushfq int3 sahf mov cmp (bad) mov mov ror movb shrl jno mov int (bad) xor and mov jns (bad) (bad) fs mov scas test rex.X rex.XB push (bad) mov in (bad) sub cltd out mov jbe cmp mov (bad) movabs fwait push int3 pop cwtl (bad) popfq iret adc xlat movsl jns clc (bad) (bad) jmp push xorl jnp push adc jrcxz mov cmpsb xor fstpl rcl mov adc clc (bad) fwait sti insl rex.XB cs (bad) incb or lret push (bad) rex.WRX imul stos mov adc rex.WX std rex.R pop or lretw clc xor vminss rex mov (bad) adc cmp and imul and sbb test sbb add mov stos pushfq movabs rex.R fist test push lock jmp jbe repnz pushq sub xchg and rex.WXB and or loopne rex.WRX fiaddl in pop mov fdivrs out (bad) mov lods xor xor (bad) (bad) xor rex.WR and (bad) rcll lock sub bswap xor cld lahf mov push mov pushq rex.WX rex.RX (bad) xor out cs adc shlb sbb (bad) insl and (bad) movabs shlb scas push fisttpl push (bad) mov loopne ss push xchg mov (bad) scas sbb xlat hlt mov lret mov or addl adc rex.RX insl repz rcll stos jmp (bad) jo test (bad) in movsb fidivr or adc xor xchg sbb jbe movabs shll (bad) (bad) or (bad) sbb pop leaveq clc (bad) pop scas xor (bad) mov rex.RB push or mov cltd and adc test in adc xchg adc fmull jbe mov adc mov (bad) (bad) rex.WX fwait pop and rex.XB lretw sbb sub out cmp lret rex.R out jns sub fildll nop popfq ja (bad) cmp std movslq xor fildll mov (bad) cmc out leaveq xchg stc add cmp js stos (bad) bswap sbb enterq jb jmpq scas idivb mov sub mov and rcrb (bad) rex cmp mov mov data16 (bad) (bad) mov out retq mov (bad) adc sbb sub (bad) push out loopne mov xchg (bad) shlb loop test fcmovb mov push outsl adc pop retq iret and mov out jns xchg jmp outsb (bad) mov callq lret rex.WX add sbb stos xchg push (bad) xor rex.RX sbb negb (bad) xchg mov (bad) popfq add jnp stos (bad) rex.B int adc sub (bad) (bad) add stos movabs (bad) in xchg mov sub rex.WX rex.WB in jns (bad) rcll mov adc sarl (bad) imul and lahf jp or repz rex.WRXB retq rex.WRXB jmpq fisttp cwtl xchg (bad) pop loopne vcvtpd2dq cwtl cmp jmp push (bad) (bad) lret ror popfq cmp in cmp (bad) icebp pop mov adc sub push js mov (bad) (bad) or repnz sbb mov xor sbb in or xchg mov (bad) popfq xchg adc shll lret xchg sbb (bad) adc (bad) adc (bad) adc addl mov sub adc xchg xor js (bad) adc rex.RXB xchg in sub sub int add fs rex.WX pop imul adc callq mov repnz (bad) jl and mul (bad) adc mov jae sbb (bad) fs imul (bad) xor lock or jge jns pop adc test and ds fmuls rex.WB mov add out retq (bad) rex.RXB rorl and (bad) fidivr push adc jae mov adc sub xlat pop roll stos (bad) add adc negb (bad) cs lahf addr32 cltd (bad) callq rex.WB sub and or jg cwtl adcb rorl fs mov clc std pop adc rex.WR xor int3 sbb xchg scas or jmp or jae rcrb jmpq adc rex.X xor push sub sti adc vpunpckhqdq imul (bad) (bad) rex.WRXB ss clc je fidivr jnp (bad) cltd out adc stos pop fnstsw (bad) push ja enterq (bad) jrcxz add pop cmp js xchg sub jge clc push jrcxz test xlat (bad) (bad) repnz mov icebp xadd sbb mov and (bad) sete pop (bad) movsl lahf xchg shll icebp rex pop imul cmp pop not test (bad) (bad) out leaveq in sbb xchg jmpq jl mov adc repnz sub add cltd std mov movabs hlt incl in lret std stc mov and cli (bad) (bad) movabs push (bad) adc fidivr in movabs rex.WRX shlb out jle in bnd fisubl rex.B add lcall pop pop (bad) popfq inc cmp xor int pop add jle subps movabs sbb xchg and (bad) xchg (bad) (bad) sbb rex.R es or pop repz cmp imulb xlat jrcxz (bad) adc rcrl cmp sub sbb rex.WX mov sbb enterq rex.RX (bad) in test repz mov pop push leaveq hlt (bad) add in and sbb in (bad) lock mov xchg imul mov xlat mov fwait (bad) jno negl jno jle sar or (bad) idivl jmp icebp sub (bad) callq lret (bad) sbb imul enterq rex.WB push and mov xchg jl retq (bad) test outsb movslq scas clc (bad) mov add (bad) mov int3 pop sbb xchg loopne (bad) (bad) xor (bad) repnz xchg adc or mov mov mov movsl rex.WXB adc (bad) movsb xchg loope or (bad) clc int3 fucomi unpckhps stc sbb rcrl (bad) nop adc jl movsb rex.WX (bad) xchg stos sbb push jle cmp sti movabs (bad) outsl rex.WR adc (bad) rex.RX xchg push (bad) cmpsb add int3 cltd sbb xchg adc adc ss adc scas add lock add addr32 mov (bad) cltd ror stos xor repnz mov xor (bad) xor lock callq and retq xchg fcoms pop jnp sub xlat push and mov (bad) cmc sarl (bad) sub sbb mov xor rex.WXB lock jmpq adc (bad) (bad) cwtl out adc push rex.WRX sub int3 fdivrl pop mov insl add (bad) jrcxz retq (bad) imul pop jne or pop (bad) test and mov jbe push adc mov pop int3 cmp cmpsb xchg xchg cmc mov lock jle adc loopne (bad) adc fstps sbb cmpsl and add rex.WRX xchg push (bad) pop mov rex.RX xchg adc jl test rex.WRX mov (bad) mov callq shlb (bad) fldl cmc lock cli adcl cwtl sbb adc lods in or sbb push jno adc xchg push movslq out cmpsb test and pop sbb sbb rex.RB or cmp (bad) (bad) repz rex.WRB outsl sub jge or clc jae mov rex.W xchg xor scas xchg out xor xchg push retq or cli (bad) repz pop repnz jne rex.RB cmpsb lret in adc (bad) adc iret clc cs pop rex.WRX cltd mov jno cmp rex.WX xor cltd (bad) jge sub xor fwait jae sub nop rcl insb out (bad) out (bad) and jb sub out je callq cs rex.WRB repnz xor jp jg pop mov test (bad) adc jb fwait sbb xchg xchg iret sbbb adc sbb cld insl push pop (bad) or rex.R jo sbb add bnd add movabs (bad) cmc std add rex.RB mov popq je (bad) pop adc lret push xchg cmp fbld mov push int mov cmp jns out repz or cltd (bad) adc ds jmpq (bad) out rex.WXB rex.WR stos std jno hlt (bad) movabs mov xlat (bad) jbe fcomi rex.X (bad) and loopne movabs retq jl jbe adc icebp in sbb movslq rex.WR pop (bad) (bad) sub outsl mov and xor scas adc fisub rcll (bad) rex.RX outsb pop sub adc roll ror (bad) hlt (bad) adc gs mov repz mov jo sbb (bad) fcomi popfq (bad) movabs jmp rex.B in push xor (bad) cmc push cmp fstl sub (bad) add rcll insl icebp rcll movabs mov cs clc andl push cmp adc sbb movabs and and add int3 (bad) fwait mov adc retq rcl mov (bad) xor mov int mov adc adc rclb shrb xor xchg stos cmp xchg int pop jp cmp (bad) (bad) mov fnstsw adc cmp repz rex.WX cltd xor sbbl pushq rex.W add sub outsl (bad) jp or mov or jbe (bad) sub imul gs (bad) mov sbb jb (bad) sbb out sub pop push and cmpsl adc retq rex.B (bad) fwait outsb adc sub or rex.WRX in (bad) cmp xchg jg (bad) sub imul cmpsl jo mov pop adc push icebp xchg (bad) lahf adc or ss adc adc (bad) add cli adc test callq adc pop pop adc adc xor (bad) xor shrb adc jrcxz jo mov add (bad) out (bad) (bad) lock or xchg xor jmpq xor movsb adc (bad) rcrl xor adc pushq outsb movntq insl adc push adc adc cmc (bad) xchg adc (bad) sbb lea cwtl pop jo or rex.RB pop sar rex.X mov xchg out pop cltd adc fnstsw idivl pushq cmpsb lods xor mov movsl adc pushq test stos xlat (bad) push (bad) mov mov mov add xchg callq adc mov (bad) add (bad) movb xor out sbb mov pop and pop mov adc out rex.X je or int3 adc jnp mov retq loop adc test adc movabs movabs cwtl (bad) sbb (bad) jg adcl cmp outsb xchg jae lods sbb out add pop (bad) in xchg or mov sbb push lock adc cmc mov mov je push cmp in insb jl or xor xchg mov lods jns fwait xor sub pushq fdivrs jnp jmp (bad) out (bad) rex.WR iret sahf cmp test repz jae out sub rex.WRX and jno int sub jne ja retq jge mov jb adc cmp rex.RX rex.WRB adc iret scas jrcxz sub push push or imulb mov rex.XB jns sub adc and imulb (bad) repz test sub jnp adc push je mov sarb fistpll ss (bad) cwtl loope (bad) and rex.WRX rex.WRX cmp push add mov out ss pop rex.RX in rex.WRX sbb in fwait push int pop test ds jb mov loop cwtl es cmpsb xchg scas sub add pop (bad) hlt out cs stc cmp movsb jrcxz pushq sbb fistpll (bad) movsb movabs fmul push jnp jp mov incb sub rex.WRX and (bad) xlat add add (bad) test or sar icebp out mov adc imul and rex.WX and scas mov loopne insb mov movabs jrcxz add (bad) push fisubl sub (bad) fwait rcr mov pop (bad) or and repz retq add fnstenv xor cmp pop sti mov jp (bad) loop push orl jae or imul outsb jns pop adc pop loopne xchg lahf rex.W or callq cmc mov cmp leaveq std sahf adc adc xchg int and add rex rex.B sub xchg rex.R es cmc lahf xchg xchg (bad) adc rex.WRX fwait ss adc stos rex.RXB push lock push adc jmp adc (bad) mov fcoml vmovshdup xor lods (bad) mov rex.RB addr32 adc mov loopne sub (bad) sub sub rex movb mov stos test jo sti cmp imul mov movabs xchg shll (bad) repnz jne test outsb lock push or or ficompl retq or (bad) or rex (bad) or or addr32 outsl mov sbb (bad) add addr32 lock sub gs (bad) xor int in movabs (bad) mul icebp jo insb rol outsl jrcxz xchg (bad) lret lret xor mov xor data16 adc in jrcxz cli pop lret cmp rex.WRX rex.RXB or lods cltd push jo mov or sbb xchg pop add movabs sub loopne or scas push adc in xchg jmp callq (bad) push push mov fstpt xchg and (bad) (bad) pop movabs (bad) ljmp (bad) pop push int3 push (bad) test mov fisubr movsl mov (bad) xchg xor rcll push adc (bad) mov jl add jle xor pop or adc (bad) jo cmc pushfq xchg cld mov or xchg enterq nop adc (bad) roll outsl (bad) mov jge cmp (bad) lahf mov sub (bad) mov ror (bad) je pop adc xchg repz or cmc ss lods xchg es rex.WRB pop xor (bad) and adc je rex in (bad) mov pop jp int3 push pop (bad) testb popq push (bad) cmpsl repz callq retq add enterq clc rex.W rol or cmp (bad) push adc fbld pop xor test repz addr32 add lea xor mov push fwait adc nop pop rex.RXB rex.WRB addr32 rex.RB pushq jg adc add fs jbe sub adc xor sbbl (bad) cmp push and fistl rex.X out (bad) rex.WRB jle shr rex.WXB xlat (bad) jge,pt (bad) mov fwait or outsl rex.WRX movsb rorl movsl movabs xchg cwtl push in adc insb push fwait rex.WRX adc add pop stos xor or addr32 (bad) lods enterq adc lahf (bad) (bad) jrcxz test (bad) push (bad) jbe (bad) add (bad) or jne sahf cmp (bad) out adc or adc xchg stc rex.WRXB test sbb and stos and mov xchg adc add test (bad) rex scas adc (bad) push insb rex.XB (bad) out rex.WR rex.WRX rex.RB packssdw scas add rex.WX sti cmp jle divb rex.W movabs push adc ss add xchg sbb mov add jb (bad) pop clc (bad) or fwait xchg pop jno mov mov mov fcomip sbb (bad) addr32 xchg mov movsl jg adc fisubrl jp rex.X mov jb retq adc pushfq and retq rex.WX mov rex.WB (bad) (bad) adc test (bad) test pop push test mov rex.WX jl (bad) movsl pushq sbb (bad) vphadduwq mov (bad) rex.B (bad) (bad) (bad) pop mov nop cmpsl scas imul (bad) scas (bad) or (bad) int3 (bad) push (bad) (bad) jae xchg lret sbb and (bad) repnz xor je add push (bad) callq adc adc mov adc negb movabs cld jg add xchg (bad) xor (bad) sti pushq sar push subb adc lock fwait adc cld adc sbb push (bad) retq movsb int mov notl rex.WRX notl adc lods je (bad) mov adc pop outsb mov or adc jg mov push lahf mov cmpsl in rex.RXB rex.WRX rex.WRB push test jrcxz enterq xchg fcompl test (bad) sub jge in mov fisubl cmp std (bad) data16 add rex.RB adc lahf retq subl mov jb mov ds mov rex.WB mov fs rex.X lock rex.WRB idivl mov rcl (bad) jmpq mov lea adc imul (bad) test and ss xor push pop xchg (bad) push movabs pop xlat adc xchg lods push (bad) test mov rcll movsb jno (bad) cmp idivl xchg xchg ja mov push adc sub (bad) cwtl clc xchg jnp cmpsl or add cmp rclb mov test add jl xor int mov (bad) xchg mov (bad) bnd push pop cmp sbb jae sbb movabs push fistpl and push jb adc fisubrl xchg pop (bad) and mov mov andb jmpq mov ds out rex.WR jne mov pop (bad) gs leaveq (bad) mov mov movhps movslq mov sbb rex.WR jp int3 pushfq jmpq repnz or (bad) jb (bad) (bad) adc repnz rex.B mov movsb mov pop or popfq lret shll jno pop (bad) callq leaveq int3 (bad) rex.WRB cwtl adc fmul (bad) mov jo pushq jmp sub sbb rex.RXB jg callq movsb (bad) fsubs sub and or (bad) fisubrl andb movabs sahf (bad) movabs (bad) push rclb xlat leaveq xchg fs sub lock xor cmpsl (bad) push cmp imul pop out ror in scas or add xor mov mov pop (bad) xor sbb fidivr rex.WXB (bad) outsl and sbb in adc sbb (bad) nop int3 mov pop fs jo rcrb in (bad) shr xchg stos xorl rex.R pushfq mov rex.WRXB (bad) sub fiadd jae mov je and ds (bad) xchg adc stc pop out xlat pop fdivrs adc mov add cmp mov outsb jmp add xchg (bad) sub xor retq rex.WRX movsb icebp scas (bad) cmp mov mov add mov push rex.WRB pop push stos addl xlat ficom repz ss sahf retq (bad) cs mov lahf sbb cmpb ja pop mov add fidivr loope cmp (bad) xor sub pushq out xor pop jnp subl cmp test repz mov in jae movabs adc imul stos jno jmp es outsb cmpsb or lock push xor jae or stc repz pop test (bad) fcoms test rex.RXB (bad) cmpsl jge mov in (bad) cmp rex.X and loopne cwtl rcr leaveq mov shrl push or retq push callq adc dec imull out std addb jo cmpxchg (bad) testl rex.WXB lret (bad) rex.RB pop mov xor jb cmp std cld and sbb cmp pop andb pop movl add rex.RX cs and popfq (bad) mov xor js (bad) mov pushfq cli int3 insl (bad) sbbb (bad) gs data16 (bad) mov (bad) cmp loope xchg mov pop or adc mov adc ficomp test (bad) lock push cmp stc (bad) (bad) xchg adc (bad) sbb adc mov repz movabs (bad) in adc rex.RX shl movabs adc lea mov jge adc leaveq sub sub adc icebp mov fistl jne movabs rex.R out mov or cmp andb rex.WX rex.W mov adc cmpsb or (bad) stos add jg leaveq xor leaveq jle js adc rex.RB cmp (bad) rex.B fsubrs retq xor movabs and (bad) mov int3 ja and pxor (bad) jp and xchg loope cld insb rex adc pop rex.WX cmpsl (bad) mov add mov imul push mov cli rex mov jg sub adc sub (bad) sbb (bad) in and retq movsb fwait mov mov movabs fadd (bad) or sbb rex.W in sub xchg jl or and pushfq lahf push gs lahf and (bad) sbb jp sahf push add mov add out push sub rex.WX orb outsb rex.XB icebp rorl enterq (bad) out (bad) es sub lret fsubrl and callq push frstor insl repnz xlat and hlt and cwtl fadds in add movsb rex.WB loopne hlt loope out movsl pop scas ja (bad) es push rorb (bad) lret pop (bad) rex.WRX lods cmp mov xor rex.WRXB rex.WRX in jp int (bad) push outsb loopne rex.X movabs pop lods outsl push mov (bad) loopne rex.XB fldcw callq ja push and rex.WRXB push rex.RX rex.WR rex.W insb bnd cmc repnz (bad) negl fs and lahf fwait ss in faddl (bad) rcr (bad) rex.RX add sub or (bad) lock callq xchg je int3 int3 mov adc movabs cmp js or mov rex.R mov (bad) adc rorb in (bad) push cmp xchg pop rex.WR rex.X cmp xor pushq movsl cmpsl mov retq movabs push (bad) add xchg or addr32 sbb xor rex.WR (bad) ja or movabs pushq xor movabs xchg adc repnz sbb callq sub (bad) push in clc cwtl enterq mov or insl and lahf (bad) rex.RX rex.WRB jb movsb cmc mov (bad) (bad) testb hlt jl or or sub mov loope (bad) loopne add (bad) test jbe (bad) rcrb push std add push fwait pop jle pop xor jle add rex.WX and movabs cmp in xchg fldt (bad) callq rex.X idivl loope je (bad) jae jg (bad) in mov add (bad) mul cmp (bad) cltd pop sti push fcomps (bad) push insl adc ja mov (bad) xchg rex.WX sbb movsl js adc (bad) clc movsl sub sub xor rex.RXB (bad) out rex.WRXB (bad) jno jnp movabs movsb retq ds or loope lahf fsts (bad) mov sbb (bad) xchg bswap retq mull jns and out pop mov xchg vcvtps2pd add (bad) sbb xor pushq (bad) (bad) std add or rex.WB rorl loope lahf (bad) shll mov jle sub loopne (bad) mov (bad) rex.WRXB es sub mov sbbl incl andl pop fisub add je fdivp (bad) mov and push xchg addr32 (bad) (bad) sub lahf pop sahf add sbbl adc push mov movsb in rex.W std xchg loope cmp (bad) cmp int3 cmp sub xchg cmpsl jb movsl int3 fisttp test std pushfq (bad) rex jg (bad) jne imul sub sbb cmp pop rex.XB (bad) push (bad) push push lods or iret ja ficompl fwait and add outsb data16 adc push loopne xor rex.WB or sbb movabs adc rex.X cli mov (bad) (bad) mov xchg sub xchg (bad) imul (bad) mov sbbl sbb xlat jae rcrb rex.WRB rex.R add movabs hlt je (bad) pop ds mov push rex.RB (bad) lret pop mov jne (bad) lock scas jbe cwtl adc leaveq imul (bad) adcl and lret mov test notb pop clc cmp callq cltd add or insl jb test xor (bad) adc cmp retq rex.B callq or jrcxz movabs sbb loop (bad) and (bad) xchg mov push mov sbb rex.RX jbe add movabs rex.RB loopne add jne sahf jbe pop retq testb xor roll adc jb in fsubrp sub sbb ja (bad) mov lret addr32 pop je stos and rex.WXB out jns sbb scas out sahf repnz data16 add fstl cmc mov icebp pushq cmc cmp subl loope fldt out cli pop mov stc rex.RB mov (bad) out add (bad) (bad) pop sub notb fwait cmp subb roll addr32 sub sub (bad) adc incb std (bad) pop or xor retq int push adc (bad) outsl sub enterq enterq or insb add fmuls int3 (bad) orb (bad) mov jge adc pop pushq pushq shlb cmp pop push xchg jbe sbb es (bad) mov fldenv hlt mov std popfq (bad) jae or cmpsl movabs ja xlat sub rex.WRX repz (bad) push (bad) lock (bad) cmp (bad) rex.WXB out pop and (bad) mov push lods jrcxz add pushq (bad) movabs mov xor in adc lods ds mov and mov fwait (bad) jae pop add decl mov (bad) rex.WXB sbb fwait xor in add test rex.X movabs outsb jle sahf mov out outsb rcll fsub (bad) adc sub mov jle sarl test enterq rex.WB (bad) (bad) add (bad) mov (bad) rclb cmp and mov js js (bad) jae iret sbb std gs incl sub adc loop (bad) (bad) push std enterq sub (bad) xchg xchg ja push (bad) (bad) testb rex.WRXB adc subl scas insb adc jle lretq sub add xchg xor sub ss adc lock adc pop je and sub push mov adc sub jbe pop cmc fistpll movabs and (bad) (bad) ss adc sarb xor mov and rorl movsb movsl rex.WXB in adc rex.WB outsl adc mov jns sbb mov mov in pop loopne stc fdivs cs rex.W test cmp sbb outsb sbb mov rex.XB (bad) movsl sub xor xchg push mov ss sub js (bad) (bad) jmp (bad) and xchg sub vmovups pop fidivr adc es popfq fwait mov (bad) js mov (bad) or repz and cmp (bad) in insl icebp repnz xor pushq mov movzwl jmpq popfq in (bad) sub callq cmp pushfq in out jl popfq pop enterq repz (bad) and (bad) and rex.WX hlt push jrcxz stos sub cmpsb mov xor xchg (bad) je (bad) fidivr fucom xor mov jmpq mov sbb push rex.X (bad) rex.RXB stos or fistp (bad) repz and mov cmp fwait rex push (bad) (bad) (bad) subb stos mov fwait rcrb lods scas sub stos xchg cmpsb cs cmp add lock movabs icebp sbb xor adc leaveq (bad) (bad) clc (bad) and outsb leaveq or sbb in mov (bad) out repnz retq lahf sub movabs xlat push (bad) imul (bad) jae fcmovu shr adc movabs rex.WRX rex.XB test adc (bad) mov cmp std stos idiv (bad) ss add jbe (bad) fdivrp (bad) (bad) cld xchg (bad) rex.XB push movabs or stos (bad) jmp (bad) (bad) rorl sbb push sub rex.WB xor and and cmpsb pushfq callq rex.RX data16 or loop mov mov rex.X popfq jbe pop push adc mov jo xchg rex.WRX imul pop imul (bad) mov sub (bad) xchg lea sbb rex.X (bad) fisttp sbb add xor mov xor fwait jge scas cmp retq scas rex.RB add or jo rorl sub xchg sbb loopne repz add fstpl jns lock leaveq mov xor (bad) movabs (bad) cli (bad) out add outsl enterq and movabs sbb (bad) ds xchg push mov (bad) (bad) movabs outsl jmp ja sbb rex.B or pop cmp sbb (bad) in push stos xchg lea cli push mov pushfq xor push adc jnp loopne rex.B push mov movabs imul loope push (bad) mov xchg fdivr push pushq sub fiadd outsb clc (bad) (bad) popfq (bad) (bad) cltd (bad) ficom (bad) lret xor and adc addl xchg iret (bad) movsl jmpq sarl in enterq jo mov mov and adc test scas push mov pop push xor pushq outsl pushq mov rex.WRX fs lods int3 push adc sbb (bad) mov repz add movabs or adc mov cld xchg jl adc mov (bad) mov adc (bad) pop pop (bad) mov add movsl rex.R xchg adc or (bad) add mov rex.RXB sarl jmpq push popfq adc adc imul (bad) ja mov jno movsb mov out mov test imul loopne mov rex.RX scas adc push scas (bad) adcb or clc sbb (bad) jae (bad) (bad) movabs imul movabs (bad) pop cmpsb sub test in (bad) sbb enterq sar sbb adc jp rex.B rex xchg js (bad) mov sbb stos movabs rex.RXB es rcr pop fsubp sub test mov xchg std addb rex.RB xchg out fwait sbbl sub hlt and pop cmp jb cmp or add sub mov mov retq out test outsb mov stos shll or xor jb mov (bad) jb (bad) cmp cmp rex.WRB bsr add jge and ds ss callq (bad) adc (bad) (bad) xchg icebp sub mov xchg mov push sub adc frstor (bad) mov cmp smsw jns pop push mov rex.WXB xor rclb fsub sarb (bad) (bad) mov xor fcoml (bad) cmp (bad) add xor iret (bad) (bad) icebp (bad) (bad) push xor mov mov (bad) outsb xchg in fsts loopne std adc add sub adc xchg (bad) lahf popfq adc mov sbb sbb retq (bad) (bad) mov lret lock xchg xor push xchg rex.WXB jp cltd or push mov sti mov addb jmp lea sbb stos retq or rex.XB xor rex.WX xor and scas outsl xchg int3 sbb lahf movsb test cmp rex.XB fbld enterq es lock or jle cld jle callq rex.WRX loopne adc or rex.RXB cld add mov mov int out ror xor add in addr32 (bad) cmpl mov add pushfq out sbb xor jmpq (bad) outsb js sbb push roll or stos and callq mov sbb add (bad) paddsb cmp imul pop enterq sti rex.WB fsubl pop (bad) movabs icebp js (bad) retq rex.RXB push (bad) rex.R adc (bad) lods rex.RXB scas retq out (bad) out push rex.RB movslq mov ficom (bad) testb test jg mov jle adc pushq nop and imul lods jno cmp and and jno sbb loope push rolb mov sbb (bad) outsb sub sahf pop sbb rolb mov out movsl (bad) fld and (bad) sbbl subb out movabs and test (bad) add fs mov sbb sub out rex.WRXB rex.XB (bad) sbb scas (bad) jrcxz jns rcrb pop btr or or mov xchg sub sbb or js mov scas flds rex.WRX mov outsl adc sar scas pushq jne fnsave jmpq jns pushq xchg xor movlps (bad) mov (bad) or (bad) mov (bad) pop incb rex.X and test out sbb lahf (bad) mov add sub jg adcl mul in mov test or (bad) xchg out pushq adc (bad) xor adc notl mov xrelease xchg ficompl mov mov add popfq add (bad) rex.X rex.WRX jae adc (bad) mov movsl pop leaveq fldt lcall scas (bad) mov ror icebp test (bad) xchg fidiv and add (bad) rex.WR mov jmp out data16 nop mov and or adc mov adc test push ficoml cmpsb add sub pushq loopne rex.WXB jle rex.WRX movslq adc pushq (bad) fiaddl test mov xor cwtl rex.RXB cmp mov push hlt mov cmp xchg (bad) xchg lahf fucomp and (bad) rex.W mov enterq cs in xchg rex.XB mov adc (bad) xchg add push ja (bad) rcl jno push adc test fidivrl xchg mov (bad) vunpckhps (bad) movsl int3 in adc fucomp xchg movsb (bad) cmpsl cld or rex.WB rex.WXB xor xchg fs xchg pushq out jo mov pop (bad) and rex.X mov push mov adc sti pop adc sub icebp mov (bad) mov addb cwtl movslq cs pushq jbe fwait movabs push push cmp sub sbb (bad) scas adcb and adc pop and rex.W rex.WX and add or adc rex.WR out mov jle and rex.RB cs jno rex.RX and out xchg scas nop xchg xor mulb jno cmp add add mov hlt lods insb fsubrp movabs retq cld mov (bad) cmp cmpl repnz std push push or (bad) (bad) or in mov xchg imull or mov movabs (bad) mov sbb xchg std and (bad) push cmpsl movabs or or add rex.WR cltd jge (bad) cwtl fwait cmp test (bad) jne fwait (bad) and sub push (bad) xchg (bad) (bad) repz push idivl fadds mov adcl adc rex.WB lods (bad) lea cmp pushq iret rex.WR xor (bad) clc mov rex.WRB xchg int3 or (bad) or ja (bad) xor pop movabs fstpl jrcxz adc jo lret push (bad) cld lock (bad) es add mov mov (bad) jne jno xchg adc movsl and loopne pushq add out pop push lods jg push xor fisub cmp shrl jmp cs adc rex.WXB jmpq fmul pop add repnz mov mov lods movabs gs and mov rex.W (bad) (bad) sub vpsubusb outsl rex xor xor repz lahf fcompl xor rex.XB fistl ds jo adc (bad) mov lea (bad) lahf pushq scas rex.XB fs xchg int sub cmpb callq movabs pushq push negl (bad) (bad) fildl rclb jno (bad) xchg sub cwtl fistpll sub shlb movabs callq cmp addr32 push cld fnstcw mov and sub jno adc push pop cmc add stos mov mov add stos or mov jae adc (bad) orb xlat push xor (bad) mov (bad) or or sbb cwtl xchg stos rex.RX loope ds or mov rex.WXB fistpl cmp adc fsubr or mov fwait sbb mov pop movabs js sub lock xchg mov mov cmp je jg rex.RXB add (bad) xchg xor movabs cs (bad) lahf adc xchg sbb (bad) adc (bad) and jle lahf lock rex.W outsb lock int3 rex xchg mov rex.WRX stos rcll jnp or leaveq rcrl out clc sbb loop addr32 jns and cli cmpsl mov add int3 movsl cmpsl sbb cltd jmp fs (bad) pop roll jrcxz imulb and (bad) add rcrb cmpsl cli xlat jg mov imull stos callq mov (bad) or (bad) adc xor push in pushq mov or sbb lock jnp test js mov (bad) fstpl mov addr32 rex.WRB adc test sbb fxch jno jo pop (bad) adc test movsl (bad) in iret mull (bad) adc push pop mov int or or adc mov xchg push retq rex movabs and cmp (bad) sbb js ss cmp and or mov jae stc faddl in rex.WR or xor and rex scas jmp push (bad) fistpl xchg adc xorl push jle fcoml imul sbb sub xchg popfq (bad) retq push mov adcb (bad) mov add xchg fidivrl test ja pop loop sub callq and rex.B rex.B push mov xor in push sbb add adc sbb jne lret incl mov mov data16 pop (bad) repz xchg and pushfq mov adcl rcl sub pop jle mov popq cltd lret out adc mov mov cli rorl mov add (bad) (bad) in (bad) bnd in sub cmp xchg (bad) mov xor xor rex.B jns mov retq rex.WB movabs sub xchg push mov nop jae (bad) mov add enterq sbb xor add or outsb sbb lret lods push test rex.WB rex.WXB cmpsl and popfq adc fmul push (bad) xchg (bad) pop pop and mov push mov in cmp addb rex.RX mov add add test rex.XB movabs cmpsl fwait xlat mov add rex.WR scas sbb xchg adc mov ficoml pop sbb pop jmpq (bad) adc rex.RB fdivrs xchg cmp mov jrcxz xchg in jmp add push xchg scas lods xor push sarl (bad) pop xor rex.W movabs ja adc push in (bad) mov or add imul or mov xchg mov pop hlt (bad) pop adc add cld insb add add popfq add (bad) cli imul test mov add lock movb lea int (bad) adcl mov std (bad) add stc fistpl jle push retq callq and icebp adc (bad) and push retq sbb (bad) lahf xchg cmp (bad) xor fldt mov adc add adc rex.WB loope movabs cli add imul int3 ja,pn rex.RX (bad) jns pop xor sahf out xchg cmpsb addl fildl mov add outsb je xchg pushq punpckldq imul insl mov retq test retq add jmpq or out outsb xchg mov adc sub sbb (bad) (bad) sub xor mov movntps rex.RB mov stos xchg push loop out xchg (bad) mov mov push (bad) shrl stc mov sarl lea test jne decb push ss sbb lock xor ljmp push ds xchg or (bad) iret pop mov callq in and cwtl imul add push or (bad) cs mulb (bad) addl (bad) add sub sub (bad) (bad) xor push rex.B loope (bad) cmpsb (bad) rex.RX xlat movabs pushfq ss (bad) push iret fwait mov rex.WRB data16 rex.RXB repz pop jb setbe mov pushq hlt out adc sub rex.WRXB cmp pop cli (bad) jo (bad) lock (bad) xchg and repnz adc fidivl in int3 adc (bad) (bad) or rex.XB or sub sbb adc clc jae mov cld cld (bad) mov js sub rex.WRX rcll push sti mov insl add cwtl xor rex.RX cmp out out mov scas (bad) js test out sbb cmp retq mov xor (bad) clc adc xor (bad) mov enterq (bad) xchg (bad) (bad) mov push mov (bad) add in and or fdivrs or xlat jns cmp ja add (bad) xor push cmpsb fsub stos (bad) callq sahf in mov mov push xor insl adc in loope cmpsb rex.XB pushq xchg (bad) enterq rex lret push fstpl retq rex.RXB es pop cmp jo movsb (bad) mov out mov xchg xchg clc in adc loope xlat adc cmpsb sti (bad) and pushfq (bad) icebp cwtl mov xchg xchg negb pop and retq sub sub jge cmpsb in lods outsl (bad) adc hlt popfq sbb sub sahf pop and out (bad) mov cmp rex.XB rex.R or jnp xorb (bad) and (bad) cmp mov pop (bad) mov sahf rorl int3 lea hlt push jl callq adc xchg test and cmp icebp rex.WXB (bad) xchg out jmp lea jmp jmp xchg jrcxz sub mov (bad) mov sarb sbb cmp push and loopne push jg mov adc inc (bad) pop sub sbb xchg data16 fdivs pushq ja (bad) mov add cmp rex.WRB add lret sbb adc rex.XB sub sub pop push jo rex.WRB fisttpl sub pushq or (bad) pop cmp in cwtl cmp mov rex.WR repnz cmpsl movslq sbb pushq or (bad) sub push (bad) data16 callq xchg rex.WX lock adc ss add xor retq scas sbb (bad) callq (bad) xor (bad) lea xchg pop mov movsl imul adc mov pop push mov clc mov fldln2 out (bad) (bad) mov (bad) callq and and push jnp or rex.R rex.RXB adc in mov mov (bad) pop adc sbb (bad) cmp mov lods movntps scas mov mov ds movabs adc (bad) jae clc adc loope jrcxz push push fadd rex.WRB adc std mov mov leaveq jmpq clc sbb sbb cmpsl loope pop (bad) cli xchg (bad) xchg fsubrp sbb lock (bad) test pop rorb (bad) insb lret movslq (bad) insl out mov xorl add sarb pushq push (bad) test sub sub adc jae mov cmp push adc lret xor (bad) repnz cmp int rex.WX sbb mov cmp cltd andl lret mov mov sub clc in sahf shll xchg lret (bad) movsl sub add (bad) sbb push sub (bad) add (bad) mov rex.WB repnz or (bad) mov and in (bad) push test cmp shrl xor and mov (bad) pop xchg push hlt or pop jrcxz hlt rex.RB callq es sbb sbb sahf mov sub fcoml addr32 jmpq jo xchg pushfq loope test jb jns jge (bad) jne hlt (bad) in imul mov nop fild sub jg mov adc (bad) sbb add (bad) mov cmp je pushq fstpl (bad) xlat (bad) (bad) jle imul lret (bad) mov push enterq icebp retq cmc sahf out fsubrl seto rex.RB sar (bad) stos (bad) mov lahf (bad) cmc or mov callq push (bad) jg sub and mov enterq in (bad) in push shll (bad) cwtl sbb add sbb int add cmc out (bad) rcrl gs mov cmp (bad) lea cmp (bad) mov lahf (bad) xchg cmpsl (bad) stos (bad) (bad) mov rex.RX imul in stos je loope and mov cmp retq stc loope repnz add pop rex.RXB sbbb sbb sub rorl iret shlb jp and (bad) push adc rex.X xor sub cmc add sbb and mov xchg rex.B jle and int3 cmpsl mov (bad) (bad) rex.RXB repnz xor lahf lret imul xchg loope (bad) adc xor sbb (bad) push and jmp pop out rex.WRX sub (bad) (bad) or es (bad) add movabs mov cmp imulb xchg cmpsb cld mov xchg pop jmpq mov jle sbb test (bad) out add mov jge lahf shr divb xchg movb jmp (bad) rex.WRB stos xor and xchg fs loope out mul loopne xorl and fdivr sbb rex.XB enterq xchg push jne fisttpl ja push rex rex.WB (bad) push xchg int rcr xor pop loop xchg add mov cmp (bad) int3 jge xor (bad) push callq adc xor ljmp add cltd pop mov sbb jle movabs cmp movsb fild ds jnp test movsb xor xchg ds jb mov test rex.WB cmpsl (bad) (bad) push (bad) rex.XB xor xor sub sub je movabs in pushq enterq pop insb int3 sub and xchg adc out adc pop pushq in outsl rex.RB rex.XB stos mov push addl (bad) push (bad) stos leaveq adc rol test mov movsb add jl pushq test mov lahf ja loopne cltd notb and mov out rex.WX sub (bad) out fmuls (bad) jg,pt xchg (bad) iret outsl (bad) jne adc test rex.RX rex.W mov mov (bad) fprem pop loop mov xchg (bad) adc jrcxz stos leaveq bts (bad) movabs ljmp (bad) mov or sbb mov lahf push (bad) callq pop sti push cmpsb jbe xor (bad) js (bad) ja pushq or jnp sahf jns xchg scas ficoml (bad) sub outsl insl enterq stos data16 pushq adc and or movabs add sub sbb mov (bad) push ds push cld adc movabs mov sbb in clc ja flds test pop sub rex.WX rex.WRXB mov jae and mov pop (bad) hlt cmp scas mov (bad) sbb movabs mov mov fwait (bad) pop jns rolb mov (bad) pop xchg push pop mov cmpsb rex.RB or push (bad) (bad) jl mov sbb retq rcr add retq rex.WX (bad) rex (bad) mov fildl and stos inc add movups (bad) stos (bad) sub adc mov fsub fcomp jrcxz ss cmp adc cmp xchg (bad) mov jge jno adc sub scas addl retq retq cmp xlat (bad) stc pushq ficomp adc (bad) (bad) adc or movsb xchg in (bad) cltd notb movabs lret push adc mov loopne sub jne stc pop insl outsb adc xchg jl rex.XB push test nop jl (bad) (bad) lret cmpsl (bad) adc test mov rolb in or rex.WR (bad) jb add imul repnz add lods outsb adc xor repz scas mov pop (bad) int3 jno pushq and in sbb xor mov frstor (bad) iret rex.WRX jnp mov rex.WRXB jmpq push (bad) pushq (bad) inc jne xchg xlat rex.WXB rex.WR (bad) repnz (bad) push rex.RB mov pop pushq mov mov sbb (bad) or (bad) lret cwtl (bad) or retq and movabs (bad) psubsw cmp pop rex.XB rex.WB loopne js jno and fidivl insb rex.X mov (bad) or (bad) mov jrcxz and rcll (bad) enterq test divb (bad) movsb callq movabs sbb rex.R movabs xchg pop loope mov xacquire jge xchg rex.RX rex.B xchg rex.WX rex.RX rex.WRX rex.X mov out rex.RX repnz cltd add callq fisttpl (bad) (bad) adc (bad) sti sbb imul repz retq pop pop jrcxz incb fistl test stc mov fwait orb or rex.B sbb and cmp add (bad) xor (bad) cmp lods in cld jae movabs movabs (bad) (bad) stos (bad) jmp jrcxz sbb cld xchg loopne cmc cli jmp repnz nop pop js int3 add and (bad) je,pn adc movabs hlt xchg push adc movabs jbe pushq jle jl sub push adc andl popq mov hlt in adc mov (bad) jp movslq sbbb adc rex.WRX retq (bad) xchg xlat (bad) fwait rex.RB (bad) pushq jmp insl xor adc (bad) (bad) lahf mov lock rcll stos addr32 nop loopne push adc and jne cmpsb std (bad) or fwait loop lret cwtl push cmp (bad) jrcxz lret mov jns (bad) sub out (bad) add (bad) fsubl jae xor fsubs xchg in or jbe pop mov rex.XB cmp test enterq imulb mov (bad) cmpsb rex.WRXB or hlt (bad) cmp and xchg (bad) mov scas in sahf nop pop push jmp xor (bad) or outsl (bad) sbb in repnz and adc out fs stos movabs (bad) insl (bad) xlat iret cli idivb rex.RB jno mov imul and nop movsl xor mov jmp (bad) and sub sbb (bad) cmpsb rex.WB rex.RB xor jnp je jae adc (bad) mov xchg pushq (bad) movabs mov fadd (bad) (bad) (bad) sbb fistpl pop repnz mov cltd mov adc cmp rex.R mov (bad) xlat jg clc (bad) fsubrp or leaveq imul cmp mov jg (bad) jmp sub jmpq rex.WRB shrb (bad) mov xor xchg jmpq mov and mov sbb (bad) and adc mov imul int je mov pop insb sbb pushq loop out rcrl xchg sbb repnz cmp lock (bad) in xor int repnz mov sub rex.X pop mov push mov or sahf (bad) rex.WX lret pop add xor xchg in (bad) cvtps2pd retq rex.WB in or sub jnp pushq add mov fsubp or (bad) jle and cmpsb mov stos sub jge pop cmp push fdivrs mov rcl cmp (bad) outsb (bad) mov rex.RB (bad) push ds rex.RB or insl push in movabs test (bad) (bad) xchg fadds and icebp (bad) movsl pushfq subl pushq xor nop (bad) or jne pop fidiv jo mov (bad) or jp (bad) rex adc loop stos callq scas lods jo pop callq adc (bad) callq nop movslq add adc nop fs lahf pushq (bad) mov (bad) and pop pop xchg fidivrl rorl repz mov (bad) lret ss (bad) ds push (bad) jge setbe mov imul add jns stos loop movabs scas mov fwait pop push push mov adc imul adc and cmpsb adc add adc imul or (bad) jne test fsubl callq (bad) (bad) (bad) sub (bad) mov cld sub int3 mov xchg or (bad) popfq or push mov adc cs pushfq mov jb push cmp xchg jne mov loope (bad) xchg out and imul incl data16 (bad) nop sarb stos (bad) adc cltd rex.WRB mov cwtl in mov xchg rex.WX mov movabs (bad) (bad) adc (bad) jl fadds callq (bad) pushfq popfq in rex.RX rex.WRXB mov adc xchg mov lock mov xchg (bad) sub (bad) mov jl mov (bad) lods jg mov jmp mov imul cli (bad) mov ja clc loop add jb es movslq push outsb mov mov jb or (bad) mov movsl mov cmp je jmpq sbb imul fdiv pop mov movsl rex.RX rex.WRX callq mov and jo outsl (bad) (bad) lea cld sub sbb xchg or fsubr enterq or (bad) adc rex.X fidivl (bad) mov cwtl (bad) sbb test adc or cwtl (bad) (bad) pop and sub (bad) jnp jg push lea mov mov rex cmp cmp (bad) stos imul callq mov outsb xchg rex.WXB push add and (bad) pop sbb xchg xchg adc fsubr sub jnp jrcxz rex.X and jne cs rex.RB jbe fistp jle (bad) adc (bad) out push lock leaveq loopne adc ja jno rex.W adcl callq lahf movabs mov jns sti (bad) jne rex.X lret push xchg insl pushfq adc xlat xor gs rolb (bad) rex.WB in sbb (bad) movsl out or std cld add xchg gs adc retq in adc out movabs mov mov scas or adc sbb xchg adc imul jp xchg add push sub xor pushq or (bad) (bad) and (bad) cmp sahf (bad) fsubs not (bad) mov orl test pushq xor int3 rex.XB movabs or push xchg adc add lock xchg (bad) mov clc sbb jno fdivp xor ds rex.XB es xchg divps out in test xchg jl and xchg out (bad) stc cmp enterq sub jne cld add imul test xchg xchg (bad) xor xor je addr32 pop fcompl sub jb,pt enterq xchg (bad) jno sub mov xor adc fsubl fmuls (bad) (bad) add (bad) lods adc test (bad) or adc xlat sub xchg gs (bad) test stos cmp ss pop mov sub and cmpsl mov push mov jge add out test paddsb out xchg leaveq mov mov js mov cmc jp fisub xchg adc (bad) ds adc cltd movabs movabs (bad) mov out pushq rex.RX xchg fwait mov imul popfq jo xchg stc nop andl rex.WB push loop add xchg fstpl lret fbstp or or push jl nop iret (bad) (bad) (bad) cs cld sarl xchg push idivl jno add cmp movabs sub rex.WB ds pcmpgtb rex.RXB repnz xor fcomi mov pop rex.WRB repz addr32 pop idivb scas xchg adc fwait movl loop xchg lret or std (bad) repnz cmp ja lock jg (bad) rex.B (bad) (bad) fmuls add cmp adc lods sub and (bad) (bad) icebp jae enterq insl add adcb add sti imul in enterq shrb movslq addr32 or imul (bad) (bad) (bad) (bad) and add pop loopne adc rex.WRXB hlt scas add (bad) in movsl sbb js rex.RX movabs push mov ja pushfq fcmovbe mov cmpsb fisttpll or rex.RB scas add roll loope and cmp jl sbb cmpsb xchg mov pop int xor stos mov add push xor lcall xor jmp rex.WX mov or or cmc (bad) mov and int adcb mov xorl cmp fadds movabs (bad) mov (bad) (bad) cmp mov pushq lods fsts mov xchg rex.WRX fistp movabs (bad) clc sbb xchg js (bad) clc or (bad) jle cwtl cmpsl pop sahf mov movsb (bad) add (bad) adc in clc scas adc cmp adcb movabs (bad) sub add add mov movslq (bad) (bad) (bad) xlat (bad) (bad) adc jno cmp cld nop (bad) lods xor adc sahf pop add (bad) push xchg pushq stos stos shrb adc sbb lret (bad) mov push mov sbb ss notb mov adc (bad) rex.WB rex.W icebp (bad) pop in enterq or test cmpsl data16 scas xlat in push adc movabs data16 sub (bad) fistl adc scas scas (bad) loopne mov (bad) mov cmp rex.WRX mov imul adc jo fs jle sbb (bad) jp pushq leaveq sub movsl rex.WXB insb mov cmp (bad) pop adc imul xlat xchg (bad) rex.WR xor mov lock fsubrs lret (bad) pop (bad) sbb and adc cmp push (bad) mov cs lods (bad) rex.R rex.W jl mov (bad) mov jbe xlat callq mov mov adc mov rex.RX repnz xlat out (bad) idivl fistp leaveq jmp (bad) jno rclb adc (bad) gs jbe jno or or cmp xor adc mov int3 sub (bad) rex.XB insl adc push cmp cmpsl (bad) mov mov sarl push gs and fild (bad) mov imul xlat outsb adc rex.WXB rex.WRXB jae pop adc jno scas movslq add jg lret js ss jge (bad) jp xchg fwait sbb rex.WX sbb mov std (bad) mov push rex.X or jae cwtl sub cmpsl cmp in stc (bad) (bad) mov (bad) (bad) pop fwait cltd mov in and iret rex.RXB scas add or pushfq in mov mov cwtl jb fwait and add or rex push test outsb jo xchg mov scas insb (bad) ljmp add xchg (bad) faddl gs jnp add rex.RXB scas rex.WR test cmp lock jnp sbb add cmp shrb vcvtpd2dq jnp (bad) icebp sub cwtl and fucomip (bad) (bad) (bad) pop mov (bad) mov test movabs add mov mov rex.X jnp add jmp out add xchg (bad) adc mov sbb adc mov test rex.WXB mov add fiadd adc shlb xor mov sbb test and and jle loop push stos cmp add (bad) rex or (bad) jno adc mov subb callq mov out out fsubrl push adc fstl lock test (bad) mov jae lock (bad) and adc xchg (bad) pop (bad) adc (bad) movsl xchg jb push out adc clc or lret (bad) int3 push jge fcoms jae pop int3 rex bnd (bad) (bad) sti or nop (bad) pop jmp lea cmp sarl pop fwait stos clc add rex.WXB mov (bad) enterq push (bad) lret jnp sub scas (bad) add (bad) jo mov xor add jg icebp jb xor mov movsl test jp jg pushfq retq mov mulb pop rcrl (bad) fisubrl fs rex.WRB hlt fst lock pop xlat ss rex.WR or in xor pop cmp fldl rex.RXB rex.RX or (bad) sub gs ja (bad) fildl cmpsl rcrl loopne (bad) sarl push cmp xor pop rex.RB rex add and cmpb pushq notl fldcw cwtl mov insb xchg jl js clc push (bad) sti fsubrs repnz mov or (bad) out fist rex.XB addr32 xchg xchg jp sbb rcll or int3 psllq mov scas fsubl rex.X retq iret sbb add out decl push mov sub fnstenv (bad) fsts (bad) jne mov (bad) outsb jno (bad) pop add and movabs adc negb (bad) jmp incl jns fdivp xor xchg in mov (bad) xchg xchg adc clc add movsb movlps cmp movl push adc cld stc mov mov adc add repnz lock mov (bad) ja mov pop pop rcrb jl (bad) pop and sbb mov xor retq movabs pop jl mov add (bad) xchg (bad) fsts (bad) (bad) movabs repz pop jle sbb scas shr cmc movsl (bad) jb incl mov test sbb xchg stc sub (bad) sub mov rex.RB (bad) push fwait (bad) jb mov subl movabs adc xchg or roll cld and rex.WB lods cwtl adc cmp xchg cmp (bad) int jle rclb ja sbb enterq adc and fcoml mov callq mov fnop xor (bad) (bad) loop sub pushq in xlat xor loope imul cmp (bad) fsts jbe (bad) mov scas (bad) adc (bad) mov fistp gs nop clc sbb jne jp add cmovle add rex.RXB rex.RX rcr lea or jnp movabs jbe adc xchg (bad) (bad) add movslq cmp jns or xchg (bad) or (bad) (bad) and nop xchg fdiv (bad) leaveq jmpq jl jp mov (bad) sub insb (bad) in callq (bad) and out out ja push cmp push icebp adc (bad) xor scas mov (bad) cmp rex.WRXB cmc lods or in add movabs movabs fwait hlt jbe callq pop test push jge push idiv cmp outsl jle sbb mov adc push rex.WRXB movsl jge sbb cmp jp mov (bad) pop (bad) jle fadd jo mov push cmp shl andl scas scas (bad) (bad) movslq cltd adc movabs movsb adc mov xor pop movabs push out (bad) mov sub or (bad) sbb push (bad) push rex.RXB int3 lock push fcmovnu (bad) (bad) (bad) test sub js pushq add out mov jle mov (bad) in sub insb rclb rex.WXB rex.WX add xchg jbe mov callq or retq rex.RXB rex.RB adc pop jg repz ja add and mov mov cld sub test int3 xor mov cwtl cmp rex.RX rex.WRXB mov adc movabs (bad) movsb xor adc adc adc movsb fisttp mov and and xchg shrl cmpsl adc out push (bad) mov or jl adc and cld or mov (bad) (bad) out loopne lahf xchg and cmp cld mov ds xchg rex.RXB sbb xor cmp mov mov sti and retq jmpq and xor adc movabs (bad) lret outsb push xor mov outsl lock jb lret sub lock jbe xor cmc adc out xchg sbb clc push xchg pop rex.WB ds jge and (bad) lea jmpq test mov add adc cmpl mov push (bad) xchg cmc sti cmp std adc test lret stos (bad) rex.WX mov pop xchg in jb sbb xchg data16 add mov pop (bad) (bad) push ds jno pop movabs jb xchg add and clc mov (bad) fadds rex.WR rex.WRX add leaveq sub cmp movsl fstps rex.B rolb mov repnz add movabs (bad) test mov mov je add and vcvtps2pd lock add test sub mov mov or (bad) rex.XB pop nop mov (bad) mov mov (bad) fsub mov push lods add cmp xor cwtl mov xchg add movslq pushq push jg mov xchg xchg or mov fsubr loop jmpq cs repz mov (bad) lret fucomp imul and (bad) leaveq imul xlat rex.B and movsb jae test lock adc and cld xchg int xchg rex.WRB jl ds mov jmpq data16 jno rex.WRX (bad) (bad) rex.R pushq jnp (bad) and cmp cli pop outsl sti rex.RXB mov add (bad) xchg cltd mov rolb mov adc push (bad) (bad) cli (bad) mov xchg rolb and push movabs fistp add adc and sub xchg rex.RX adc lahf movslq f2xm1 adc adc jb (bad) (bad) adc sbb jo loope xor adc push (bad) (bad) (bad) int3 rex.WRB rex.RX fwait pop push flds lretq sub xchg (bad) sahf cwtl callq mov sbb adc or in adc sub xchg jno clc nop xchg xchg push rex.XB ss sbb rex.WRXB lea movabs (bad) (bad) mov mov jnp jno insb jl movsb (bad) sbb fmuls addl pop push xchg andl fs jb sbb mov adc enterq adcb and push enterq sbb xor lret (bad) xchg adc and cltd adc sbb ja mov (bad) pop cmp xlat fs pop mov (bad) (bad) pop mov jl (bad) xchg rex.X (bad) divb jno rex.RXB hlt cs ss pushq addr32 and imul adc (bad) ja gs (bad) pop xchg cli movslq loopne sahf outsl push xor (bad) mov movsb add rex.RB lea (bad) ja xchg and xor punpckhdq xor (bad) fmul xchg mov int3 rclb add pop test (bad) pop push pop mov add sub jg hlt (bad) out pop pop xchg (bad) sub int and pushq cmpsl and push (bad) cwtl xchg cmp in retq xor out (bad) (bad) insb jp nop fld jmp and mov in cltd mov jo xchg (bad) pop jo (bad) xlat adc mov mulb add push repnz cmpb sahf mov incb loopne xchg (bad) addl xchg mov pop (bad) scas adc insb xchg lock sbb jl and and leaveq clc adc rex.WR adc cltd jbe adc sti jl and xor (bad) (bad) (bad) lods rcll cmp hlt mov rex.X rex.RB xor incb adc (bad) push rex.WX adc stos mov mov (bad) mov or pop jo (bad) sbb adc movsb jl jns adc out adc xor movsb rex.RB rex (bad) rorl fwait adc movabs cmp std test push jl clc sub rcr iret adc jo push mov movsb add xchg jo xchg rex.WXB out pop mov hlt fadd adc test jge sbb sub and (bad) cwtl sub and jmpq pop (bad) sub (bad) pop lret push in push movabs test movl (bad) cmp int adc jbe jb cmpsl in rex.RX in xchg mov rex.WRX mov adc test insb xchg (bad) xchg adc (bad) movl lock (bad) outsb cli sbb jmp (bad) cmc mov adc and push or or mov (bad) test (bad) pop sub push (bad) or cmp sbb mov mov loope pop adc lret ja jmpq (bad) movabs stos (bad) pop popfq (bad) adc ficompl fs jns sub (bad) or lea lret (bad) (bad) xchg pop loopne adcl lea push mov movsb callq and jns (bad) (bad) push div (bad) rcr and (bad) adc cwtl icebp push hlt jne (bad) and cmp ja cmp (bad) adc jmpq rex.RXB xlat jrcxz retq in sbb push jb mov rex.WXB pop pushq jnp in movabs pop (bad) push jmpq or (bad) xor in xchg push testl push and push xchg adc ds rex.R rex.WRB jbe (bad) cld rorl and add sub lock pop imul cwtl rex.R cld pop lea (bad) ja imul rex.WB pop cmpsb xor movsl xchg (bad) repz push (bad) mull mov jg addr32 insl adc movabs mov cmp adc cmc xor (bad) adc sti cli lcall adc leaveq enterq xor rex.W push push mov or cmp xchg rex.WX rcll popfq adc mov leaveq xor rex.WXB mov loopne lods xor out retq lret adc mov xchg int3 or adc scas imul movabs or (bad) mov or orl fdivrl rex.WRB mov mov and adc or outsb sub hlt rex.WR mov push sbb mov scas fstps repz add imul jno fildll xchg rex.WXB rex.R rex.RXB push and outsl mov adc test sub callq or rex.XB mov sahf (bad) outsl add adc sti adc loop pop mov scas adc (bad) (bad) jns lahf jne xchg cmp mov rex.WRXB rex.RXB imul mov add out leaveq (bad) (bad) retq movabs movabs retq test scas and jmpq jns stos cltd (bad) jmpq mov (bad) nop fdivs rex.WRX jns (bad) mov out notb pop cld sbb subl (bad) jbe fstps (bad) in and (bad) push rex.RB mov jmpq decl mov mov movsl (bad) push adc mov jp rex.WXB out repz mov push or cmp sub sbb push mov sub add pushq adc pushq mov neg incl movabs sub cmpsl adc es mov and adc sbbl out mov sbb (bad) (bad) add xlat push jno push mov adc jns adc js rol pushq lret clc out jne or (bad) sub (bad) adc (bad) jge adc mov sbb (bad) cwtl (bad) fs xor adc es je adc (bad) hlt mov (bad) lods (bad) or fwait adc pop sahf cmp or push pop rex.B rex (bad) jno out (bad) jo mov ja pop add callq (bad) (bad) xchg cli in xchg adc (bad) (bad) int3 and fcmovu movabs cld (bad) or jo cmpsl mov or jb and (bad) in (bad) add ja in sub (bad) pushfq mov and mov cmp cmp cmc (bad) push fdivrs rex.RX fcomps adc (bad) data16 in xor pslld jl (bad) push push push cmp nop lods (bad) push xchg (bad) movsb cmpsb out sub (bad) adc sub lock (bad) adc test flds add xchg (bad) jge xorl adc leaveq lock adc (bad) sbb unpckhps mov adc (bad) xchg adc (bad) fwait sub (bad) adc cmpsl stc (bad) gs rex.WXB jb xchg je cmp (bad) add clc std pop xor mov (bad) mov mov movsb stos or sub adc rex.WRX rex.WR fcoms cltd movabs push lods (bad) mov mull lods (bad) pop ffreep jne rex.XB rex.WR std and adc push mov in ficom (bad) (bad) in lret movabs xchg cmp test lock xchg xchg add (bad) (bad) cltd (bad) pop test and (bad) mull jle mov cmp sbb gs mov iret add flds xchg pushq data16 rex.WRXB adc sbb enterq je xchg pop push and xchg in std sbb jmpq xchg adc retq out gs push adc pop data16 subl pop (bad) or xor rex.XB sbb test add ds (bad) decb push rcr rex.RX mov rex rex.RB jbe rex.WRXB (bad) pop (bad) rex.WX hlt fdivrl adc lods and sub jns jmp movsl imul outsl (bad) (bad) pushfq sti mov (bad) (bad) xchg fisubr fucomi andq (bad) (bad) push cmp iret push push sub scas fwait mov sbb retq gs or (bad) sub adc (bad) jmp add lret lahf sarb rex.R sub mov repnz xor imulb or cltd mov movsl xor jno push adc sub loop fwait sbb jmpq mov (bad) movabs xchg mov (bad) fistl add or jbe test and movabs sbb jg cmpb adc retq ss rex.WB jge cld cli lahf data16 fmull sti repnz rex.RB pop rex.B repz jo fcmovbe sbbl idivl test roll movsl mov sbb and jmp (bad) and (bad) vaddss popfq adc loopne sub iret xor push sub callq adc xchg mov sbb sbb test and rex.W pop (bad) rex.X sahf sub jne (bad) cmc rex.WRX (bad) mov rex rex.B (bad) loop jmp or (bad) out jrcxz rex.W cs sahf je,pt mov add mov lret adc loopne mov adc (bad) sbb cmp jl add cmp rex.WB rex.X lahf mov clc adc mov push out sub rex.WRB sub enterq fs jle repnz adc sub rex.XB ss movabs fwait pop adc ds (bad) unpckhps mov cmp outsl movsb xchg sbb fisttpl clc test xchg push (bad) cld adcl adc rex.RXB xchg (bad) mov adc fwait (bad) test (bad) (bad) sub mov rex.W adc sbb cmp cmpsb rex.RXB pop movsb fcomi mov or push cmc cmpb popfq in leaveq pop test sbb mov and data16 (bad) movabs fisubl cmp (bad) add mov adc pop rex.WRB rex.RB mov jbe mov xchg push mov adc or and test pop jmp mov xor rex.WRB xchg adcl or jbe cmp or (bad) rclb in xchg pop jrcxz mov rex.B mov jae sub pop add movabs pop adc adc (bad) ss mov imul push pop callq scas (bad) push add cmpsl sub adc mov retq lret xor cwtl or mov (bad) cmp (bad) jno mov (bad) mov ljmp (bad) fwait push rex.WRX test es and lea scas movsl pop (bad) mov xchg jae add push and xor sub and rex.WRB callq jne cmc test add xor fsubrs (bad) jmp subl fadd xchg (bad) cmp xor in (bad) add mov (bad) data16 adc mov and rorb sbb rorb fdivrp lcall mov out sub mov rex.WX repz gs sub cs or imul callq and mov out jnp (bad) insl (bad) xchg cmp fs cmp movabs pop jbe push or (bad) mov jmp sarb fsubs stos (bad) xchg cli add lock repz insb xchg shl push (bad) pop mov in loopne jl je shrb adc (bad) cld movabs sbb rex.R xchg xlat rex.WRB imul mov xor rex.RXB (bad) pop movabs xchg cmp mov sti push cmpsl movabs cmp ja mov scas and sub jle pop mov (bad) (bad) adc sbb rex.WB rex.WRB enterq (bad) jmp (bad) jne movb add rex.WRXB sbb mov je rex.XB lret xchg ja js pop movabs adc (bad) rex out outsb xchg xchg xchg stc mov div mov adc mov (bad) rex.WRX mov callq adc mov fs xor (bad) cmovge js,pt mov mov jge sbb push mov and and jg xlat jmp outsb or loopne in jl (bad) retq test (bad) test mov (bad) rex.RXB std add js in rex.XB add shrb pop test rex.WRX or icebp mov xchg mov (bad) mov push pushq popfq rcl sti jmpq mov (bad) (bad) mov (bad) mov js sbb xchg xlat rex.WRXB xchg jg push ja fnstsw fsubrs mov sbb out ror (bad) sub xchg pop push cli fnop (bad) jle jae movabs insl fwait (bad) fdivs stos or jno add (bad) out mov insl lock cmpsl and iret mov add mov (bad) jno sbb and xor rcr (bad) fidivl (bad) rex.WRB pushq out std icebp insb sarl xchg add stos std (bad) callq rcr mov leaveq mov (bad) sub (bad) push jne rex.XB push (bad) rorb fwait push (bad) lock (bad) cs (bad) sbb cmp add popfq fsubr (bad) notl (bad) adc add xchg push sbb jnp lock push and clc pop outsl push imul roll or cmp xor or ror jno mov push movslq jg or or rex.B fistl xor sarl negb sahf mov nop pop (bad) fmuls fimul jno out rex.XB je,pn pop xor (bad) add stc callq or or fs (bad) mov mov jge rex.X xlat mov or stos mov adc int or movabs and fsubrs movabs sub loope mov adc rex.XB (bad) xlat (bad) fdivrs rex.RX adc mov (bad) mov adc mov fucomi mov xor cwtl sub push lahf cmpsb add push divb mov push nop pop (bad) (bad) (bad) and mov adc jge (bad) rex.RXB mov cwtl sbb mov mov mov loope movabs fldcw and vmovapd rex test sbb fisubl nop or scas jo (bad) rex.RX adc xchg mov or (bad) leaveq out iret xchg rex.WRXB or test enterq push sar xlat mov xchg movabs mov pushfq (bad) xchg out (bad) cmpsb fs pop fyl2x cmp add mov (bad) jbe adc and insl mov test orb ss sub int3 lea pop xchg flds add stos js sub (bad) clc jbe stc (bad) movabs and movslq adc movsl movabs (bad) rex.X rex.WRXB sub cwtl repz xchg jge adc or notb jg and enterq imul mov loop (bad) sbb add test mov stos push xor push or rex.WR out scas out sbb adc pop jbe,pt add add roll add repnz enterq int jnp retq insl cmp popfq (bad) sbb and adc mov rex adc mov adc mov pushq (bad) ja in rex.WX mov loopne adc enterq adc cmc mov cmp adc popfq jg gs pop adc (bad) mov sbb adc mov (bad) and pop (bad) jns fsubl (bad) (bad) rex.RXB (bad) fwait ss adc (bad) repz mov neg rex.XB lahf mov subb jne (bad) (bad) in lmsw js (bad) xlat loope (bad) (bad) mov or mov xchg xor callq sbb rcrb jge (bad) jnp mov xor pop and (bad) xchg rex.RXB (bad) std mov lea lods add mov jne mov adc jae int3 (bad) jne add push push mov add rex.RXB pushq stos enterq stc pop (bad) (bad) pushfq (bad) test rcll and pop data16 movabs xchg adc rex.R cmp xor xchg jmpq insl cmc and (bad) add in pop scas sub mov mov insl mov or (bad) adc mov push jae pop (bad) cmp retq mov and pop (bad) (bad) test (bad) (bad) sub (bad) shl xlat pop pop (bad) (bad) mov add add mov fisttpl (bad) xchg rex.WB xchg test repnz ja mov pushfq int3 outsb adc rcr pop (bad) pop adc scas jne (bad) in jle add movabs lods xchg sub push lock cltd mov (bad) std (bad) (bad) js xchg xchg add in jb test fwait jg (bad) pop (bad) or retq scas xor sub mov pop or adc and insl ds xchg (bad) test out adc xor xchg mov mov lock loop lea stos mov jge rclb clc sbb or jmpq icebp or pushq sbb adc sub sbb or mov mov rex.RB (bad) add pop pop adc (bad) mov cmp lret or ss rex.WXB movabs fcomip and stos adc insb fs mov adc push (bad) lods sbb mov lea fcompl jnp xchg clc outsl xor adc and adc sbb repz and xor negb (bad) or and rex.WRB cli add mov or fidivr jo push lret xchg mov adc (bad) jp test (bad) outsb lods adc fistpll mov or push mov and (bad) callq hlt rex.WX rex.RX (bad) fmul icebp lret rex.WRXB (bad) xchg (bad) cld xchg xchg movsb insl insl mov (bad) mov sti shlb jp out and add callq enterq cmc sub xchg (bad) test sbb sbb cmp cmpsb scas sbb adc lahf nop out adc callq mov enterq and lods and mov rex.XB pop mov enterq jnp xor fnstsw or in imul sub js xchg (bad) sub xor sbb add movsl nop or repnz pop cmp callq adc and (bad) fsubrl movabs sbb mov fldcw cmc cmp in (bad) js (bad) fcoms out sub mov movabs sti mov insb (bad) push or (bad) jno and jl in rcr jg cmp xchg movslq subb mov loopne sbb int3 (bad) pause pop jp callq and lret mulb jne sbb xchg movabs rex.XB (bad) out jrcxz in xor (bad) pop jno popfq cmpsb sub or fnstcw pop and int3 push negb and sbb shr (bad) movabs (bad) adc (bad) data16 insb add mov jrcxz (bad) movsb pushq insb rex.WRX or cmp xchg ja rex.WB sub xor repnz jnp lahf adc add jmp sbb iret add (bad) jg (bad) enterq jnp sahf repz adc rex.B (bad) gs (bad) mov cs rex imul mov xchg rex.WR out jge or sbb sub fwait adc cmp (bad) andb rex.X adc in (bad) push lock (bad) adc sub sbbb movabs rex.WB mov pop (bad) xchg in xor mov (bad) repz add rex (bad) jo mov cmp adc jp movsl pop push scas movsb cmp lock jno sbb and sub pop movabs add rex.WR hlt (bad) add jbe and (bad) adc and pushq popfq retq hlt adc pushfq (bad) loop adc pop mov mov adc es add lock adc rol shrb jrcxz int mov xchg sti cmp (bad) and cmp adc xlat pop sti and clc ficomp xor sbb or add movsb rex.R adc xlat xchg lock or (bad) cwtl ja js mov fwait push mov jo xor jmp (bad) repnz out and int3 icebp sub sub add stos or (bad) cmp rex.RXB cs rex.XB jl sbb sbb (bad) mov jne push sbbl (bad) (bad) cltd rex.XB fistpll adc push (bad) sub xchg push push jns cmpsl movsb stc lahf nop movabs jle xchg xchg adc jae stc cmp lock mov rex.W std (bad) xor (bad) in jmp jmp mov rex.WR xor test (bad) mov or (bad) xchg sbb (bad) xchg jo and rex.WRB xchg cmovno imul xor jno leaveq (bad) ja jae add mov rex.WX rcrb mov sbb (bad) (bad) outsb mov std push repnz mov (bad) or js fnstsw mov callq cwtl mov mov cltd adc mov fs (bad) xchg and addr32 and fsts mov and cwtl mov pop movabs (bad) push push mov enterq adc or pop pop (bad) cmp (bad) (bad) pop or test retq (bad) ss lods sub sbb xchg loope or rex.WXB adc scas rex.XB scas cltd adc popfq rex.XB (bad) adc imul jle mov shll lret mov pop ds (bad) sub jbe add (bad) add rex.X (bad) rex adc mov (bad) sub push mov (bad) adc pushfq (bad) jle (bad) jae mov adc pop pop fistl pop (bad) movabs add mov (bad) (bad) frstor lock iret xor (bad) (bad) cmc adc push xchg adc cwtl fcmovnbe push fdivrl (bad) add retq (bad) je wbinvd rex.WX xchg (bad) std xchg add stos (bad) out mov mov xor xchg (bad) adc rcrl xchg sti callq sbb sbb adc imul (bad) adc stc mov adc jns or cld mov push jle jg push stos mov scas rex.X cmc cmp xor (bad) (bad) adc (bad) jmpq sbb pushq adc rclb scas insb (bad) pop std (bad) faddl sbb adc gs xchg rex.XB (bad) imul divl xor lods (bad) sub pop pop (bad) rex.WRB xchg je (bad) pop adc addb sub (bad) (bad) cmp pop push and es test retq xchg adc xchg leaveq (bad) adc add (bad) push cmpsl cmp clc std or mov jl int3 out rex.WRXB enterq xor push adc sbb pop jge xchg gs mov sub fs sub jb lods push and (bad) nop and add xchg xlat cltd outsl scas stos cmp retq mov movabs sbb pop out sbb mov jae xchg retq (bad) add insl retq or push mov push (bad) (bad) mov add pop (bad) rex.WB mov and cmpsl cmp rex.WRB xchg adc rex.RXB adc sti jl add or or xchg adc jb mov cmc (bad) mov adc lret sub mov jmpq pop test push pushfq pushq fwait lret fcoms (bad) retq xchg adc stos int3 je fdiv xor sbb enterq adc cmc xor adcl push rclb fimul adc andl imul jne lret sub cli (bad) sbb push movsb rex.X (bad) enterq std jnp cwtl (bad) (bad) movabs (bad) and and rex.XB es fcompl (bad) rex.WR push push cmp sub push mov jg cmc (bad) repnz push mov (bad) mov mov (bad) and sub push xor movsl ja stc pop jo sbb adc callq adc hlt adc std xor (bad) mov pop rex.WRB sub cltd cmp sbb scas cmp rex.WRB icebp icebp mov mov test movabs pop (bad) (bad) mov cltd pop out push mov in mov adc std rex.WRB data16 fdivrs cmc ljmp or sete lock sub (bad) push push (bad) mov lea sub sub adc sbb pop mov push mov insb (bad) insl mov push push rex.RX addb out adc or insb adc xchg jp jge xchg fiaddl xchg jmpq sti cmp add movabs in repz jb or cmpb cs lock (bad) mov mov (bad) rex.WR mov (bad) add rex.WRB scas cs cmc adc cli jg rex.XB sti adc sbb fnsave adc cmpsl rex.RX leavew adc notl cmp cmp (bad) push push (bad) (bad) mov stc gs xchg adc pop cmp pop cwtl loope rex.X rex.XB rex.WX movslq imul adc insl or lods movsb jno (bad) adc shlb rex.R (bad) xor sub sbb pushq rex.RX xchg (bad) iret rex.RXB adc retq fcomp icebp stc test xorb xchg rex.W in mov jae rex.WRX or std adc (bad) cwtl mov imul xor xchg (bad) xor (bad) mov bnd xchg outsl rex.WRB hlt mov out jg jne or add pop (bad) pushq adc iret sbb adc pushfq xor clc nop mov mov in rex.WXB or imul and mov notb jne movsb pop (bad) mov sub pop adc jbe lahf lock mov mov xlat xchg adc sub adc xchg movsl rex.RX (bad) mov and mov or gs jo cld jbe rex.WX rex.WXB enterq pop and mov adc push mov fsts and rclb or mov imul andl movslq adc loope add shrl pop (bad) mov rol repz add rex.RX mov lods xlat pop leaveq fbld mov sbb flds sub adc or sub xor sbb or std test rex.WRB adc repnz sahf jmpq xlat sbb faddl pop mov lods sbb xchg and cmp mov js enterq push (bad) (bad) jo add mov sysret jle out rex.B sbb je cmp mov (bad) cwtl adc icebp stos jmpq (bad) and (bad) lock cmpsl xchg cs stos add add cld or rex (bad) enterq mov jno push add insl and enterq adc mov je (bad) pop xor addr32 cwtl clc icebp sub test sbb (bad) and js rex.R push movabs xor movabs (bad) push add mov ja (bad) js (bad) rcrb jne faddl push jmp gs in test rex.WRXB mov std jrcxz orl push mov test (bad) jb mov cwtl callq out mov jbe or fsubs lret push mov and (bad) ss and rex.WRX fcoms enterq cmp push clc pop sbb adc rex.WX lahf sub xchg (bad) pop and jge xor (bad) jnp mov enterq lea jp (bad) pop (bad) cwtl int cmpsl (bad) je insb lahf (bad) rex.WRX fdivrl rex.XB xchg lock rex.WRB pushq push xchg insb pop and xchg (bad) fmuls fsts movabs push callq rex.RX sbb andb sbb cmp fistpl je (bad) pop push jnp lods sbb std sti fdivrs xor adc gs jge adc iret movabs (bad) leaveq insl in subl outsl callq (bad) shlb mov (bad) (bad) cs lret ja or imulb leaveq (bad) stos cmp push sub adc in pop repz (bad) xor ja mov loopne jp je (bad) mov pop adc clc cmp test fldln2 rex.WRB in rex.WRX adc cld in loop and xchg retq adc adc jl sub in (bad) mov or mov rex.WXB cwtl sub rex.WX adc insb scas push xlat or (bad) xchg lretq add xchg insl adc cmc jp adc in xchg rcll mov rex.RB movabs jrcxz lret sub lahf stc add mov jmp (bad) adc cltd loopne retq scas rex.WRB lcall jl ds xchg in cmp jno cmp mov jmp ficompl repnz mov add out movabs jmp es callq mov push mov (bad) xor jmpq xor push lahf fdiv int mov push (bad) (bad) es xchg fmull (bad) add cld shll (bad) ss out fidivl std cmp fdivrl (bad) jno (bad) enterq sbb jns retq clc imul push fprem1 fs xchg xor rex.RB sbb movabs sbb rex.RXB xchg (bad) mov (bad) lret enterq adc outsl imul fstpl rex.XB xor callq push repnz cmp callq mov and and movabs ds (bad) rex.XB clc rex.W jge mov xchg jmpq jle adc xchg hlt mov pop and sub movabs jo ja shl pushq (bad) int3 mov mov (bad) (bad) cmp xor xchg (bad) pushfq adc pop fsubs (bad) rex.W repnz adc pop sbb cmp data16 callq adc jo adc jg add adc fisubr adcb addr32 xchg (bad) or push scas rex.R fdivrl stc jo adc rex.WR xor sbb push scas rex.RB hlt adc adc ror (bad) rcll mov add pushq (bad) (bad) adc int3 data16 lret (bad) add out push (bad) mov rex.W sub iret out fwait and push or pop (bad) xor cmpsl jl shll cmpsb (bad) xor pushq mov mov loopne adc stos test (bad) cmp mov rex.WRXB (bad) pushfq or cmp (bad) and sbb add xor xor (bad) xor adc (bad) add adc rex.WR lea data16 adc mov loopne test xor idivl callq out cmp mov je ss (bad) rex.RX (bad) xchg jo in xor pop (bad) lea xor data16 out sub sub (bad) je adc (bad) pop pop sub jb mov rex.WRXB insb mov rex.RXB rex.RXB xchg jmpq xor jp (bad) sbb jb rex.RB sbb lock xlat out movsl xor jge push nop jne jnp cvtps2pi sub (bad) frstor xchg sbb (bad) adc (bad) pop mov adc (bad) mov xchg adc cmp scas jrcxz repz shll (bad) mov push mov sbb rex.RXB stc fldenv add int pop outsl enterq (bad) cmp and adc or adc mov insl mov stos cli adc rcll jg pop incb adc pop pop (bad) rex.RXB addr32 (bad) fistpl js mov mov fnstcw adc or sub jno fisubr iret xchg mov jbe jb loop mov scas in or xor adc and jl pop add hlt stos sbb mov (bad) fdivr add (bad) adc (bad) jl cmpsl hlt (bad) in fadds mov rex.X popfq test jno xchg sub jrcxz and (bad) adc (bad) callq adc test and rex.W roll js callq xlat add jmpq jnp icebp callq lret xor (bad) in pop (bad) out (bad) xor sub rex.W jmpq rex.RB je push cmp mov rex.XB cmp fild rex.RB movabs fisubl rex.XB rex.X js mov test push cmpsb pop xchg (bad) movabs fwait (bad) sub clc fsubs jnp and mov scas sahf std rcll (bad) lea movabs adc adc (bad) xor (bad) in (bad) ss add cli outsb xor addr32 movabs cltd adc sub stc adc xchg pushfq in and sbb and (bad) adc (bad) (bad) out (bad) mov int3 retq adc xchg sub adc (bad) movabs fisub jle (bad) pop xor mov mov (bad) (bad) cltd mov or sbb adc jno sbb and std int3 cmp data16 (bad) sahf or xchg retq loopne adc fldcw movabs mov xor push hlt adc mov mov cli lea cld rex.WRXB or mov (bad) or fcomp out addr32 lock jg (bad) cli (bad) add retq (bad) mov add push movabs (bad) push mov mov mov sbb mov (bad) or stc ficom mov mov int3 cli (bad) (bad) mov movslq lea roll pushq cmpsl adc cmpsb cld mov loopne movabs or rex.RX and and retq add push ss stos sbb jae imul rex.XB pushq test retw adc ss xor rcl movsl mul mov callq movsl lea movsb and jo sub je rex.WRXB stos xor (bad) mov data16 gs rex.RX movabs cmp and (bad) sbb movslq adc pop vcvtps2pd sub rex.WR push cmpsb (bad) mov lock adcl (bad) repz cmp int3 sbb (bad) mov pop mov mov jo push rcr rex.WRX clc pop fistpll xchg imul movsb in ja pushq icebp mov xor (bad) or adc mov sarl nop jno cwtl (bad) in (bad) mov stos adc cmp cld outsb jnp mov mov jl (bad) or or jo or notb stos rcrl mov push rex.WXB xor lock sbb jno sbb (bad) rex.WRX pop (bad) adc jge and push ja retq sbb cmp rex.W (bad) ror bnd (bad) pop rex.WXB mov sti lret rex.RX rex.WXB (bad) retq mov hlt out sub mov repnz (bad) jp mov rex.RXB fsubs rex.WR (bad) adc roll imul mov xor scas fidivl sub std (bad) xchg jbe push rex.X setl or lock in (bad) imul xor cmp jo testl rex.WR rex.WRX callq pop add fs sarb cltd add cli lret sbb (bad) (bad) add mov and test fcompl or mov adc rex.WB (bad) (bad) je push stos test (bad) cmpsl mov adc cmp rex.RXB lock sub (bad) js pop outsl andb (bad) lret jo test movsl or xchg out push adc (bad) jbe stos scas imul xchg lret movslq cwtl adc movabs cs (bad) mov (bad) cmp addr32 adc jb adc in rex.RXB movsl pop (bad) loopne rex.WR (bad) leaveq rex.WRX rex.WRB sbb xchg adc movabs mov mov stc pushfq xchg (bad) add rex.R rclb mov adc sub (bad) adc (bad) test imul rex.RX xor (bad) sbb jle add pop mov rex.R fistl (bad) ja xor (bad) movsl (bad) or adc mov mov push pushq xchg or mov es scas (bad) lods sahf sbb xor (bad) int in adc insl rex.XB adc jl mov and or fistpll movsl nop sbb push repnz out test sbb loopne adc lods jge (bad) rex.WRXB adc ds fisubr adc cmp movabs cli adcb mov adc (bad) xor lock add xchg outsb adc mov jmpq leaveq add movb fild cmc cli sbb mov movabs sbb mov repz (bad) rex.WRX lahf rex.WX (bad) xchg mov sub nop (bad) icebp rcr and int pcmpeqd sar (bad) adc mov addr32 adc lods rcrb movabs mov rcr (bad) mov mov scas (bad) callq repnz cmp movabs xor mov xlat rex.R fdivs roll adc iret cmp sbb rex.R xor cmp xchg ja push (bad) repnz mov xchg movsb rex.RB jno (bad) pop (bad) mov pop mov int mov pushq lret mov xchg mov adc mov js xchg sbb (bad) cmp stc (bad) sub lock test and adc (bad) repnz fwait js mov js test (bad) test add push mov add (bad) jp add fild add int3 pop cmc mov (bad) jae rex.WB xchg rcll push jae mov (bad) mov jmp adcb fnstcw jne cli jmp push in add sbb in pop xchg fs cltd (bad) cmp int mov xor (bad) lret rclb mov mov mov callq adc push in imull jbe mov rex.RX cmpsb enterq sbb lods outsl adc stc add jp popfq add rex.R rex.RB (bad) jg (bad) clc movabs lahf ss xchg jg or (bad) movabs sub mov imul adc or (bad) (bad) in adc rex.WXB sbb mov cltd add fidiv (bad) xchg cld out (bad) mov cmc mov int3 mov cmp (bad) clc scas icebp push insb jne rex.WX outsl out mov sub cmp pop add fsubrs mov sbb cmpsb push fs jge xchg pop sbb sar cmp and in push and (bad) (bad) fdecstp push cmp mov ss in nop (bad) cld mov stos test movabs lea add (bad) rex.WRX jne push movabs (bad) xor (bad) jmpq and xor push rorb rex.RXB in loop xor (bad) stc repnz add adc (bad) in fistpl testb adc imul (bad) imul mov fmuls jno adc jae pop lock add mov and xor sub movabs movabs jo rex.XB pop sub cmpsb mov sbb (bad) pop stos xlat xchg mov divb mov pop sub mull movabs mov push jns xchg xor adc scas (bad) jb stos (bad) sub mov adc cmpsb mov add outsb cs retq callq fistl jbe jmp or push sti jl (bad) out or rcll xor mov jae ja pop xchg cwtl adc callq rex.X rex.R rex.W adc gs jmp std push movabs lret callq movabs rex jbe cmp adc lock mull adc repz adc insl xchg (bad) xchg int3 push mov cmc in and test sub pop stos mov (bad) fwait jns fs movabs mov mov cmp mov add cmp or cmpsl mov adc scas in bnd push (bad) out leaveq divb scas rolb and hlt lock movsb adcb rcl xchg fistp cmp (bad) adc (bad) and cmc (bad) test cmp mov xchg in push pop pmovmskb xchg sub xor or in je sbb push stc fisub in mov callq jbe (bad) pop test rex.XB insb scas push xchg or fldl xor lea xor mov sub (bad) ds rex.RX lock mov callq pop movabs xchg jl sti cmpsl in or adc mov adc mov push cmc adc loopne movabs mov (bad) (bad) stc andb xlat sub sti or lods (bad) adc shlb cmpsb out rex.WRXB sub movabs mov int3 xchg adc xor add sub cmp sbb (bad) cmpsl (bad) xchg sbb orb scas (bad) mov pop (bad) movabs stos (bad) mov int loope sbb xchg (bad) fisttp mov js rex.W fstl shrb callq shrb xchg xor mov test sub mov xor insl sahf fstl (bad) (bad) rex.W mov adc test lss cmc jmpq jge int3 jbe rcrb movabs adc (bad) rex.WX shrl (bad) lahf (bad) fisttp int int3 pop fnstcw sub cs lea cli cmpl pop movabs ja mov imull fwait movabs xchg in pop pop (bad) xchg mov sbb movl sbb lods mov adc jle and fcmovnb and adc orl idivb mov (bad) jl rex and xor sub lret jg push jbe hlt pushq mov jbe or lahf and push jp sub or jno add xor mov push mov pop add (bad) int3 cmp out and (bad) (bad) movabs xorb (bad) jne fs lret test lret cwtl xor mov sub jmpq insb push mov cmp xor ja jnp rex.X jno cmc (bad) scas retq rex.WB sbb push out mov testb jg cs movabs or (bad) rex.WB mov loopne adc testb icebp (bad) xchg add cmp fldenv mov push jno cmp rex.XB xchg jno or pushq iret sbb and movabs js stc cs and or gs push mov jns or xor rcrb movsb (bad) or js fldl adc sub in jno sarl add sub in sbbl xor rex.X negb sar add iret test out mov ds sub rol push rex.WX rex.WR (bad) (bad) push cmpsl pop add sub hlt (bad) sbb movslq out (bad) mov add and pop cmp adc adc rex.WRX out test mov fbstp or jp fs jle pop (bad) retq adc jle mov jge push xor adc add hlt jne rex.WRB cs test push test imul (bad) adc (bad) movsb loope clc fsub (bad) cmp sti cli int3 sub push cmp adc js imul fistp rex.B push cmp mov xor cmp (bad) rex orl sub mov test (bad) enterq adc and push lods rex.WRXB leaveq callq jle cwtl and (bad) cmp ss mov adc movabs adc (bad) stos mov cmp and mov xor push rcll or mov test mov movabs movsl (bad) xlat (bad) lods mov fwait sub test sub sub cs nopl xor jne adc jle (bad) adc data16 shlb cwtl movsl mov cmpsb sub insb cs push (bad) push jo in and (bad) jbe (bad) mov (bad) or add jp adc jnp adc (bad) mov mull xor imul out rex.RX ss add jle in fwait test fwait scas sbb out and (bad) fwait (bad) in sub pxor stc lea xchg ja xchg scas iret push in fidivl mov ss (bad) scas pushq cmp callq xchg mov xchg mov sub and cmc subb mov lods movabs jge or (bad) rex.RB int xchg rex jnp (bad) xchg cmp xchg (bad) stos (bad) adc (bad) (bad) adc cs mov and pushq cmp mov fist retq xchg and mov (bad) mov adc jge sub adc mov jl cmc and adc loope lock test fwait in (bad) cs fidivrl or adc cwtl loope rex.XB divl (bad) (bad) sub rex.RB callq data16 xchg cwtl adcl rex.W rcll (bad) jge push shr imul pop int mov pop xor movslq (bad) mov sbb and xor (bad) (bad) push loopne mov adc rex.WRXB xor mov rex.B mov mov fisttp adc sub mov callq icebp rex.RXB and stos (bad) add and xorb rex.WRXB sub rex xor add sbb sbb jmp rex.WX (bad) out add mov (bad) hlt rex.X mov (bad) (bad) ja cmp xchg ds cld js repz (bad) int3 add mov (bad) callq pop insb repz adc pop rex.W stc enterq movabs cmp mov loop mov mov (bad) pop lret sbb xor xor imull xchg xchg jnp int clc push push mov leaveq xchg adc (bad) or sub xor imul mov or mov lahf xor jae repnz (bad) js (bad) mov (bad) xchg sbb xor add xor cmpsl xchg rol adc add ja jg jmpq ss scas lret jle callq xor repz movslq rex.RB or in sbb lea lock mov adc jrcxz xlat cmp add sar jno (bad) xchg xchg adc cmp lahf adc cltd mov xchg (bad) sar add fs adc ds outsl adc or xchg xchg jg jne pop leaveq (bad) ss hlt popfq lret adc or rex.XB rex.WXB test xchg scas sub retq ja jp nop adc sbb sbb (bad) (bad) mov mov and cmpsb je (bad) je xchg jrcxz cmp mov bnd pop (bad) icebp jnp (bad) rex.WB and xchg fnstenv test in add mov stos rex.RB xchg sbb (bad) or (bad) outsb add pop fwait mov rex.WRB movsb (bad) scas and adc lock mov (bad) popfq movsb fistp stc fldenv rex.WRB add (bad) movabs sub out popfq out xlat (bad) xchg (bad) in and test sbb rex.B rex.WR add (bad) jp xchg sub cmp xor movb xlat jmp rolb rex.XB sbb in std leaveq push (bad) fs (bad) (bad) adc in stos and sti mov setae pop jne ds adc adc adc (bad) rex.WRX insb jl (bad) mov adc pushfq out cmpsl rex jnp or ficoml or addr32 or data16 sbb mov mov cwtl push jne jns loop fnstsw push (bad) jae in pop mov (bad) xor rex.R rex.WR adc pop fisubl adc and movabs (bad) or and stos xor (bad) mov rex.W rex.WX mov and mov and jge adc xchg addr32 (bad) pop hlt mov adc sbb (bad) and ficompl icebp mov or js addl rex.WRX jp fwait in sub mov movsl scas int3 (bad) or (bad) xor je (bad) cltd adc jge xchg cmp xchg (bad) (bad) mov add cmp (bad) mov or jge push push adc fisub xchg adc enterq mov rclb (bad) out or and adc push fstpt clc adc loope hlt fidivr (bad) xor add fisubrl xchg (bad) (bad) movabs mov js xchg jbe mov insb insl xchg xor xchg xorps imul movabs je pushfq in add xor sahf jge addr32 xchg xorb adc jl (bad) xchg fldl rclb jp adc movslq iret jno xchg pop rcl int pop push test jne adc cmp add rex.XB add jrcxz rex.WRXB idivl adc pop cwtl roll in mov sti or jbe pop (bad) adc sub mov rorb (bad) lea adc sub jbe std pop jno xchg xchg divl jne sub mov (bad) jrcxz js mov jne rorb adc fldt (bad) (bad) xor mov sti or mov (bad) (bad) mov adc imul jne out push push idivl stos movabs push mov mov movabs adc in xor adc enterq (bad) rex.WR mov sbb test or (bad) push adc cmpl iret lea out rex.WR negl pop movabs adc fwait mov (bad) (bad) rex.X xchg retq imul jno mov or hlt adc sbb je lahf cwtl rex.WXB lock cwtl rex.WR (bad) cmp sub (bad) xchg mov pop and mov xor push test cmp mov sbb mov adc jo (bad) clc (bad) rex.X rex.WRB xchg sbb adc sbb sbb out xchg adc jg je cmpsb movabs test in mov push pop (bad) and adc cli jg mov mov (bad) lret mov (bad) and test sub rex.RX add (bad) cmp (bad) xorb xor adc (bad) (bad) xchg xchg xor es test out jmp mov sbb lods (bad) (bad) jle scas xchg add outsb rex.WRXB movsb fwait or rex.B rex.WB rex icebp (bad) out pop rex.WRXB and mov jnp (bad) xor sbb out pop push icebp (bad) rorb sub adc xchg xchg pop (bad) cmp mov sarl iret xor add clc pushq icebp cltd imul mov add sub rex.WRX and loop out sbb cmpsl scas rex.WRB retq sbb rex.WRB sbb fcompl int3 gs push prefetch cmp (bad) xor fwait add (bad) scas xchg cmc jmpq and (bad) hlt (bad) callq in stos rex.WRXB lock sbb adc movabs xlat (bad) ds icebp rolb sbb movabs je data16 fcomp jnp mov or jbe sub stc adc callq xor cmp adc int3 xchg and sbb mov sahf out sub (bad) (bad) jrcxz (bad) in mov lock rorl adc adc out ficom (bad) rex.WXB pushfq retq xchg (bad) xchg add xchg or mov out xlat rex.RB xchg movabs jmpq pop (bad) push in mov pop (bad) adc loop rcr ja movabs (bad) movsb rex.WX mov jne andnps adc (bad) outsb lods (bad) cmp xchg jbe adc flds mov (bad) rcll xor xor pop (bad) mov adc leaveq (bad) fstpl and push rex.RXB fs icebp loope or (bad) (bad) out (bad) cld pushfq sbb insl (bad) push pop and adc or pop pushq adc mov add movabs lret mov mov or in xorb lods jge and (bad) lock ds movabs test mov push jle sbb cmp mov mov fsub mov stc (bad) sti fstl movsl out jo repz adc pushq (bad) stos (bad) mov pop and (bad) in xor movslq xor cmp stc xchg cltd adc adc (bad) mov or out addr32 test pop (bad) adc (bad) rex jmp data16 xor lods xor (bad) cli or mov pop adc (bad) adc in (bad) mov mov mov pushq (bad) lret or in jmpq rex.WX xor (bad) (bad) (bad) addr32 sub pop adc xchg xchg mov lea scas int adc rex.W loopne adc outsl lods push nop sbb or movabs cmpsb (bad) xor xor retq (bad) cmp jge jmp sbb xchg rol adc cmp movabs iret (bad) (bad) sub cmp (bad) rex mov sbb (bad) mov out and mov movsb cltd fisttp push (bad) addl (bad) jmp insl unpckhps pop sbb mov sahf jl andl jne int (bad) adc outsb or add in adc sub idivb cmp test (bad) rex.WRX sbb mov stos pop (bad) cld xchg fdiv cwtl mov cli rex.WR rex.WRX adc outsl js rex.WX or fwait ja adc test cmp icebp (bad) (bad) lahf scas movabs sub iret fildl fnop mov (bad) jle js movsb jne xor callq mov (bad) (bad) add test xchg lock (bad) and (bad) xor cli callq sbb mov rex.X lahf (bad) mov (bad) (bad) jbe js adc rcll cmc adc cmp fs cmp (bad) jmp in adc andl insl mov or push sub cmp std mov out (bad) iret push adc (bad) lods cmp (bad) (bad) out (bad) cmp mov mov movabs add sbb js fldt adc outsl icebp flds or rex.WRXB cld and int3 imul adc (bad) lock pop pop and xor (bad) (bad) (bad) adc movabs popfq jl adc mov rex.WB adc int3 (bad) push xor lret shrl sub in imulb jno rex.WR insl (bad) mov retq adc fcom repz jle retq mov push movsl in add (bad) rep cli pop xchg cmp rex.XB mov (bad) mov mov mov in sub (bad) rex.B fwait adc int xor notb out in out pop adc imul (bad) push lock adc (bad) mov sbb int int3 lret mov jno pop mov rex.RB fist std (bad) movabs stos jae jne or xchg (bad) rolb mov xchg rex.WR adc cmp sar add rex.WXB jbe clc pop (bad) pop movsb nop and callq rex.B or sbb mulb xchg and fwait add addb sub rcll jmpw sbb and (bad) pop ja outsb jbe cmp and cmpsb ror lret jbe (bad) outsb xchg xchg pop cmc push in jge scas jno mov mul shl test rex.RX es mov jp movabs push lods cmp (bad) jo movsl cmp adc iret lods push nop adc loopne or mov adc xchg adc adc add or (bad) lahf (bad) push fcmovu callq push mov clc cmp mov mov adc scas mov (bad) rex.RB sbb xlat adc stc rex.R es xlat or (bad) and add pop and callq rex.WRXB adc mov stc adcb cmp repz (bad) lea and sbb jrcxz (bad) (bad) sbb add rex.WB adc mov lock xlat (bad) (bad) stos repnz movabs cmc fcomi rex.RB movabs cmpsb lock jmp (bad) lret loop mov add ds cltd in jno (bad) pop jge loop mov int mov lock out outsb (bad) es rex.RXB rex.R outsl (bad) or push (bad) xchg jp pushfq cmp test pop callq add addr32 cltd cli int3 scas scas push jne xor sahf fdivrl adc lahf rcr and adc movabs adc xlat adc sbb add mov (bad) xchg adc mov decb (bad) jg pushq push jl fwait xchg pop cmp and std push adc jl callq movl or (bad) enterq clc loopne cwtl fmul jb icebp xor (bad) sbb add fcomip (bad) cwtl int3 retq pop xchg lret and fist outsl outsb (bad) rex.WRB mov jo hlt ss (bad) std add (bad) sbb sbb fs fs clc xchg psllq repnz mov (bad) mov (bad) adc rex.X rex.B add adc vmovshdup sub push (bad) ds sahf jg sbb gs mov adc or not push in rex.XB callq or (bad) (bad) adc rex.R rex.RB push lea pop movabs xchg fisttp adc cmp (bad) fsub out outsl data16 xchg pop sbb rex.WXB (bad) js and adc imul jg and mov enterq or in adc cmp rcl mov fcomps sub (bad) cltd cwtl push xor adc mov jp mov imull shr sbb and lret mov rex.RXB es add or (bad) (bad) (bad) cmp (bad) out sbb mov push and rcll out xchg clc iret and mov add xchg add add movabs fildll xchg (bad) bnd rex.XB out gs out (bad) repz cmp movslq rcll (bad) fwait pop std mov adc imul fldcw fstpl (bad) and cmc icebp (bad) adc push pop add add pop sub mov cmc movslq popfq mov mov scas outsb (bad) xor pop fisub push and push adc rex.R insl scas jns mov movb (bad) mov and push mov add lock jl stc test (bad) or int xchg cmpsb rex.RB sub clc adc (bad) loop adc (bad) (bad) fistpll xchg (bad) xor ds movabs adc pop cmpsb test mov callq lock (bad) xchg rex.WR mov rex.XB lock pop (bad) adc cmc (bad) adc fistp (bad) add jge jl jne xchg imul cs rex.RX adc data16 lret shlb fs (bad) or notb sarl and rex int3 push mov jge add (bad) xor fwait notl (bad) iret adc rclb mov adc test rex.WRXB in mov xchg (bad) xchg popfq add (bad) int lahf (bad) xchg adc rex.W addr32 notb mov callq pop lahf sbb or jge movslq adc rex.WRB (bad) clc cmp imul or adc xchg add imul jbe jge js (bad) rex.RXB movabs cmpsl add testl loopne jrcxz cmp pop and adcl test (bad) rex.WRXB addb scas (bad) not cmp mov test xlat (bad) rex.WRXB add adc jo rex.WB out hlt rex.WXB xor adc lahf mov repnz (bad) (bad) (bad) ss mov jnp movabs jge sbb movabs jmpq and (bad) cs xchg (bad) mov (bad) sub lods movabs pop fidivr xchg cmp rex.WX (bad) add pop out or callq adc (bad) adc jge add (bad) add (bad) (bad) sub and jl or xor (bad) (bad) adc xchg rcll int in rex.W adcl adc addb fidivrl pop (bad) pop mov mov adc (bad) out unpckhps jl scas mov fild xor rex.RXB lock std mov (bad) sub mov and xchg (bad) (bad) loopne adc add xor subl shrl pop clc cmp push adc pop out sahf cwtl jge xchg (bad) adc pop cld add clc (bad) retq add push (bad) add push pop adc rex.RB (bad) int enterq adc rex.XB (bad) pop adc (bad) sbb xchg cltd jp repz loope movabs push (bad) or xchg loope mov mov out movsl in clc mov mov fcoml stos mov lock jl (bad) (bad) outsl rex.RX rex.WRXB cmp sbb movabs mov cli pop outsb (bad) mov rex.WR xor xlat enterq jns lret sarq movslq fs (bad) iret fdivs adc adc xchg ja fnsave jne jnp fcomip mov (bad) adc js jp or mov xchg rex.RXB out outsl adc mov lea jl mov fcmove pop insl add in mov xor stc or xchg mov loop stos imul rex.WB lret mov add adc mov repz pop (bad) jb loope (bad) pushfq sub (bad) adc imul std sbb pop jp divl sub (bad) xor lea mov (bad) (bad) (bad) (bad) xor jns stc and loopne mov jne cwtl retq pop out sahf (bad) (bad) retq out movslq xchg lods idivb out adc mov add pushq addr32 fwait out sub jae enterq loope rex.X test popfq pushq xchg push lahf rex.W notl mov mov or mov out callq pop add scas imul pop out ja lret (bad) sub push sub (bad) fadd jg push (bad) sahf and rex.B rex.WXB fsub fst (bad) xchg cmpsb xchg pop mov jbe lods pop movabs mov rolb in and pushq lea rclb int3 rex.XB (bad) ds sbb rex.XB xchg insb gs mov mov nop jmpq movabs test (bad) ss movslq mov insb rex.B (bad) pop jg ffreep mov mov xlat jp cli and bt xchg rex.XB (bad) fistp movabs adc adc pop enterq or xchg (bad) xchg (bad) xchg xlat add loop xchg add sbb pop push sub clc (bad) (bad) and sti sbb pop and (bad) (bad) xchg testb (bad) xchg mov xlat adc rex.XB cmp mov sub movabs rolb movabs xchg out jge (bad) xchg imulb scas repnz fdivrs rcr rex.WR icebp stos lea (bad) mov test test adc mov jae cwtl ds (bad) jo mov cs test movsl imul sub and (bad) and rex.RB mov xchg scas int3 push xor xchg xlat xchg mov mov cmc (bad) jo (bad) movsb scas rex.WRXB div (bad) rex.W mov in (bad) push and sbb pop add sub cmpsb and add cmp movabs cli cmp out rclb rorb (bad) in fwait (bad) imul cli int3 test or cli rex.X fwait (bad) xchg jbe or movslq sbb rex.XB clc adc (bad) or jae xor decl mov (bad) jle test fdivrl and add rex.WR stc fsubr or hlt (bad) test rex.WRXB adc mov (bad) rex.WX scas (bad) pop adc rcrl (bad) adc js cs fcoml addb (bad) or sahf (bad) outsl lods xchg sbb pop mov (bad) jmpq and pop cmp movslq outsb sub xchg mov je lahf mov push (bad) int push mov (bad) add mov cmc cmp xchg mov add je notb pop mov ss sbb test rex.WRX (bad) jmp fsubl push imul mov and or imul add pushq imul fiadd cmp (bad) (bad) mov rex.WXB data16 pop rex.WRX lret in (bad) (bad) (bad) mov sub (bad) std push mov sarb xchg (bad) fwait packsswb sbb xchg (bad) imul xchg out adc pop (bad) fistl rex.WB rex.RB test adc cmp cs add rdmsr (bad) adc cmc push mov jmpq or mov repnz jnp lods std (bad) jo scas fwait jbe adc jno and cmc cltd ss jnp (bad) (bad) rex.WB and movabs je (bad) push adc rex.B or pushq xor imul std test xchg stc lahf sbb loope and icebp adc sub push xchg or sub xchg mov jnp xchg js notl shrb out test add (bad) repnz rex.RB rex.WR out cmp and test test rorb ja add (bad) cmp xor clc rex.WB mov fdivl sub add loop (bad) repnz xchg jmp out fisttp sub cmpsb pop sub (bad) pop retq mov rex.WRB or lret (bad) repnz cmp (bad) gs fcom jg imul imul cmpsl pop insl xor jp test (bad) (bad) rex.X and in lea mov cmp cmpsl and cwtl jp cli (bad) (bad) cmpsb mov (bad) out xchg mov adc mov js rorl mov (bad) outsl cltd jl pop test jnp insl hlt cld mov in cmp or pushq xchg addr32 xor jmp hlt or push sub scas and sub (bad) mov (bad) sub sub icebp rex.RB lock adc fs adc mov pop cld jmp (bad) or mov outsb pushq or push (bad) pushq sbb movsl and js lret (bad) cltd rcll or sbb rolb sub sbb xor fistpll (bad) fildll push mov loope mov cli cs jmpq (bad) rex.X and cs enterq callq loop add outsb movabs mov xchg mov or fwait sbb mov imul push (bad) (bad) ja movsb test lock loopne mov sub cmpsw fwait int3 leaveq lret shlb and rex.RXB rclb (bad) imul mov loopne movsl and push xlat pop insl xor repz jrcxz je (bad) je rex.X rex.R push jmpq int sub xchg (bad) jae (bad) movabs (bad) test (bad) repnz stos xchg or sbb pop out rex.WRXB and repz rclb cmpsl add test and loop jp cmp sub xorq icebp ja sbb or adc sbb (bad) sbb int add xor sbb push jmp clc imulb and fnstcw stc xchg add and (bad) loopne sahf add movabs mov sub rex.WR repnz jg outsl neg (bad) and jrcxz adc and (bad) cwtl jbe cld (bad) jmpq mov mov add xchg jmpq xor icebp mov test stc out repz fsubrs (bad) not jne pop int cmp mov fucomp sbb js movabs mov callq cli mov (bad) xchg xlat mov mov adc rex.WRB or sahf ss (bad) adc (bad) push xor adc or cld mov adc add rex.WRXB add mov sbb (bad) (bad) lods loopne movabs fdivl sub (bad) mov clc jl in sti cli xchg (bad) movsb and addl cs pushq outsb in adc test jl rex.RX (bad) mov sahf adc mov sbb (bad) movsb cli iret (bad) jl callq sub leaveq adc (bad) jno (bad) xor js movabs mov movabs mov nop (bad) out rcrl jg fbld and out (bad) lock rex.WXB loope add gs hlt jge rex (bad) (bad) xchg jmpq sub adc cwtl fs rex.WX add jg rex.WRB mov sahf cld imul add sub scas rcrl fmul rex.WRB mov and sub lret (bad) jb (bad) gs sahf cs and (bad) mov stos idivb lret xchg xchg int3 movabs fs out mov xor (bad) cmpsb fcompl mov (bad) ja sub in outsb movsl sub loopne lahf ja (bad) xchg cmp mov sub or out cmp (bad) orb pop xchg lahf sahf lock cmp int jae addl cmp rex.B add cmc (bad) fwait push sub xlat rex.WX mov rex.WXB fsubs cmp push cmp icebp fstps loope mov cmp xchg add add mov imul lock rcll mov add js fsubs loopne rex.RX push imul or retq fldt in mov or lods (bad) xchg rcrl jg adcl jrcxz imul mov jbe repnz mov mov incb jns and outsb (bad) lock loopne imul adc (bad) hlt mov add sub jb fisubr sbb rex.R (bad) (bad) xchg in rex.WB cmp lret mov loopnel push (bad) (bad) ds mov sub cli (bad) outsl (bad) jrcxz add lods push or push xchg in pop (bad) rex.WRXB pop test addr32 mov (bad) mov (bad) (bad) (bad) adc adc xchg and sbb mov rex.WB movslq mov pop pushq out stos adc adc or (bad) fwait sbb mov jbe sbb ds (bad) (bad) xchg fdivrl adc sub pop xchg lahf movsb gs (bad) or in jno add sub sbb es pop (bad) mov rex.RX lea pop (bad) faddl insl or sbb rex.X rex.XB notb roll jb (bad) rcr rex.RX clc orq lea jg fbld sub mov rex.X xchg push and fwait test data16 fidiv (bad) (bad) xchg mov cmp (bad) xor repz hlt js adc (bad) lods jo sbb xchg fadds (bad) je and cltd movsl jno stc pop test mov (bad) xor sbb sub sbb addr32 add rex.WB in add hlt rex.WRXB rex.WRB (bad) (bad) insl cmpsb pushq fwait and mov xor (bad) adc lea lock std jge rex.WRB jrcxz or cmp rex adc (bad) xchg ds out scas and in pop (bad) rex.WR mov adc callq and jns outsb (bad) lock lea adc jae sbb jp mov adc rex.WR mov (bad) rex.WRXB (bad) or cmp movabs pop inc (bad) (bad) or cmp xchg jb pop outsl add adc mov mov jnp loope or mov lock jl cld and mov adc (bad) ja hlt xchg fiaddl scas iret (bad) (bad) notl jmp cli rex.X add lea hlt adc pop rorl movabs adc jno pushfq fsubrl imul rcrl jo mov and movabs ja mov out test adc cltd addr32 jno int sub int rex.WRB cmp movabs adc sub (bad) (bad) cwtl rex.RX add rex.B and or add jrcxz fdivr cmc rex.R mov movabs rorl (bad) (bad) pop lret jle,pn sub movabs mov mov add movslq int3 add (bad) cmpsl mov mov lock rex.WRXB outsl (bad) jno sbb or xor (bad) lahf (bad) push cltd js xchg jl sbb callq (bad) xchg insb cs retq mov xor adc cmp add mov mov fwait adc rex.WRXB (bad) or pushfq rex.RB or in rex.WX xor adc pop jbe imull repnz pop (bad) (bad) (bad) mov rex.WB addr32 sbb pop (bad) mov movl xchg (bad) cmc jp cmp sub movabs adc pop mov xchg icebp cwtl pushq sbb rorb (bad) repnz xchg sub loope movslq (bad) mov jmpq xchg es hlt cmp adc fwait (bad) jno push ja (bad) jo repz (bad) lret sub (bad) and cmpsb lahf add mov adc mov push imul adc xchg pushq push sub (bad) in push sub rex.XB fwait (bad) outsb (bad) jo add mov mov sub jns lret fisttpll js sub add cmp sub jle (bad) (bad) xor (bad) out rex.RX iret add out in cltd jmp pop mov fistpl mov (bad) push callq cmp xor data16 in cmp push (bad) loopne sbb jle or and push lret cmpsb lock pmulhw sbb mov (bad) jb add xor adc rex jmpq (bad) (bad) pop sbb or xlat add out adc repnz push bnd gs xchg ds cmp rolb lret sbb jmpq movsl xchg mov loope xchg jmp adc jns fistpl push pop (bad) or fnstsw (bad) stos sub in mov in xor sbb and jp sbb (bad) mov rex.XB add (bad) mov xlat mov sbb cmp and xchg data16 imul mov add cwtl (bad) in (bad) fwait in (bad) cwtl lods push sarl clc sub out (bad) rex.WX mov xor mov sub or sahf lahf mov lock in cmc xchg ss pop mov adc lock and (bad) adc loopne lahf callq (bad) hlt pop in test (bad) and rcll adc mov sbb xor frstor sbb jnp jl pop lret add retq fist pushq pop cmpb pop cmp lock mov stc nop sub xor test shll add and sub jrcxz hlt popfq push lock (bad) mov jmpq int mov iret (bad) mov fcmovnb adc (bad) (bad) push iret pop and (bad) push pop add add shrb hlt or (bad) (bad) rex.WRX sbb sub sbb rex.WRX lods mov fild or loop and sbb or sbb (bad) nop rex.WRX jmpq adc (bad) adc addr32 pop push cmp movabs (bad) jae adc rex sub lret rex.WB out and jrcxz in mov mov in or jb jge sbb movabs in and jp test loope std mov lods mov movabs rcrb adc idivb jo mov movabs lret out test notb xchg (bad) sbb jg sarl mov adcb rex.WX rex.W sbb movsl or movslq imul jmpw xchg hlt rep lock rclb mov sbb (bad) mov mov (bad) ficompl sbb (bad) push cmp jae jns callq lock pop nop out (bad) cmpsl rex.X fwait (bad) pop cmp addr32 (bad) cmpsb cld ja (bad) movabs stc (bad) fs lods fldl push rex.WRB rex rex.RB in sbb leaveq xor add push jge je (bad) xchg cwtl imul (bad) (bad) sub (bad) push (bad) (bad) pop negb out push cmp out xor addps add adc ds or push mov jo or (bad) ss int3 rolb mov pushq rex.WRB cmpsb (bad) mov lock mov (bad) cli (bad) xchg std mov decl add xor xchg shrl cli xor fdiv push or lahf jno retq (bad) je (bad) xchg mov cmpsl adc (bad) xlat stos adc (bad) xor adc mov gs test fs ja or lods sub adc and add mov adc retq add mov fwait sarb xchg and sbb adc adc stos clc cmp cmc rcrq xchg (bad) adc sub mov mov test jg leaveq callq pop and loopne stos xchg sbb jno jae xor adc sti sbb mov sbb add mov data16 cmp repz pop (bad) add lock callq jns pushq mov and and movabs roll movabs gs sahf adc jp xchg (bad) int3 rcrl cmp jl jns add sbb add cmp loop jp nop jno add sti xor and add mov adc rex.RB (bad) jne or in loopne out vmread push pop jrcxz sub lods push mov sub pop shrl jno rex.B mov cmp add rcrb (bad) hlt and adc mov or mov (bad) (bad) and or rex.W addr32 mov cmp fsts cwtl rex.B (bad) sbb (bad) jo rex.X xchg shrb (bad) adc xor and callq cmp add (bad) adc in rex.WRX or mov sbb xchg adc pop insl mov movslq lods (bad) rex.WXB xor rex.RB fsubs callq xor int xchg (bad) std repz adc mov xor add adc sbb xchg fs mov test mov in lods push scas inc mov in jnp frstor jrcxz not cmp sbb xor (bad) (bad) rex loopne leaveq hlt adc fistl cmc cmp nop adc or mov adc int enterq xchg sbb std incl rex.X callq outsl (bad) adc cmp push cmp movsb jl idivl mov mov cmpsl imul mov (bad) xor mov rex.XB leaveq xchg data16 adc in xchg lretw xchg jg stos mov pushfq rex.RXB rex.WXB push jb (bad) jmp rcrl push ja jle sub or rex.RB (bad) repnz cli push test xchg (bad) rex.WB sahf jae sbb mov pop rex.RX jle sahf movsb enterq pop fstpt sub insl mov enterq (bad) rex.WXB and jno (bad) outsl jns jmp adc pop rex.WXB fwait es clc (bad) int3 sub or rorb out (bad) mov jbe mov jmp je in xor repnz (bad) (bad) imul push lods push mov rex.RB xchg lods push (bad) xchg mov stos cli (bad) stos add cmp jmpq callq movl popfq cmp gs cwtl (bad) rex.WB (bad) mov xchg sub add mov imul lahf cld add mov mov rex.WB mov out pop (bad) (bad) push loopne movabs push jns adc cmp js (bad) mov enterq adc es adc cmc mov cli adc xchg or jp mov xor adc (bad) sbb (bad) adc fwait jp data16 jne test stc in jae mov ficompl rex.WRX pop mov adc in outsl popfq cmp pop hlt xchg rorl fcmove rex.WR xchg (bad) (bad) pop (bad) push (bad) retq sbb (bad) pop cld rex.WRX rex.WRB sbb xor movabs rex.WRX ficomp idivb stos or fdivp notb mov in cmp rex.RXB movsb cmp (bad) sti pop pushfq (bad) (bad) (bad) retq adc int3 rcll movsl test mov adc jne or stos sub xchg enterq mov test fsub retq or pop sbb subl adc movsb (bad) adc retq shrl mov (bad) sahf jl sbb (bad) and adcl (bad) or mov (bad) jge sbb (bad) pushfq retq lret or sub repnz movsl sbb (bad) adc hlt nop adc add and adc incl cmpsl iret add (bad) lods adc xor (bad) idivb test or xlat cltd loopne leaveq adc scas xor lock and sahf js (bad) gs movabs push pop test jmp cld movabs or movabs pop and pop sbb and add loopne int3 (bad) sub xor (bad) and pop add cmp pop (bad) hlt (bad) mov divb pop push test (bad) int3 loopne (bad) pop mov (bad) scas fstps push movsb lock sbb imul add (bad) mov movabs fadds adc jno std sub notb push in sub jbe add (bad) cmpsl iret jmp rex.WRXB rex.W xchg rolb incl cwtl scas xchg clc and or rex.WR imul (bad) movsl loopne gs (bad) pop xchg (bad) (bad) test mov or mov std sbb cmp icebp xchg sbb frstor adc lea ficompl xchg adcl rex.RB adc (bad) movabs and sahf xor retq mov (bad) (bad) mov adc mov adc pushq jmp callq cs rex.RX adc in xchg ja adc outsl leaveq cmp sub (bad) cmp lods or mov mov insl adc in rcl xchg rex.WRXB adc rex.B sub adc ds test adc hlt mov jne lahf test adc (bad) mov pushq push (bad) add (bad) sbb or (bad) fistpl xchg push xchg xchg leaveq cwtl rcrl xchg scas jrcxz mov cld ror movabs (bad) or rex.WB adc adc (bad) idivl pushfq mov mov sbb mov (bad) test js retq cmp rorb pushfq movabs adc sub fdivrs or rex.R lock sub push mov jmpq jmpq xor gs outsb pcmpeqw clc movabs (bad) pop jl add cmpsb add scas cli rex.B repnz (bad) sub and add jle int push movsb xor out sbb adc callq fdivl jns pushq adc add push rex.XB pop jmp add int3 cmp rex.RXB jno xor mov push (bad) cs mov cmp jne imul adc or repnz idivl (bad) (bad) push adc fwait (bad) cmp callq rcll adc clc (bad) sub mov adc add outsb (bad) ds and adc (bad) cmp enterq gs cmpsb (bad) mov fldcw lods or jg jge rclb movslq or xchg std vmovaps pushq pushfq sbb divb std add (bad) insb adc pop (bad) sub (bad) rex.WB jnp jb adc insl stos mov test jl sub mov mov xlat out outsb leaveq add icebp push fdivr adc sub movabs and rex.XB jb std mov rex.RB addr32 (bad) pushq pop cmpsb cmp lea sarl lock pushq repnz and (bad) insl (bad) mov movabs cwtl orl (bad) lock xchg mov stos rex.B out cmp or xchg jg cmp enterq xchg rorb mov ja scas or push mov sub fwait xchg add and mov lock ds sbb lret mov (bad) outsl fmulp rep and addr32 rex.WRX loop mov scas test pop (bad) sbb (bad) int jo sbb movabs mov movabs sbb mov rex.X fs imul mov out adcb js rex.WRX rex.RB mov insl rex.WXB rex.RXB enterq cmpsb jae xchg (bad) sbb (bad) nop cli jno sbb test enterq rex pop neg (bad) xchg or jno int3 fwait xor (bad) rex.WRXB int lret (bad) sbb adc jrcxz (bad) in or adc rex.WXB sub pushq test jmp (bad) sarb jno (bad) std leaveq lock loop pop movsb mov je lret (bad) in xlat testb adc jg test rex.WRB mov loope rex.X fldenv pushq mov addr32 xchg or pop (bad) jmp cmp add mov (bad) mov jmpq rex.WRB mov xlat mov lea cmp jg iret or xchg imul idivb decb mov adc (bad) xchg xor callq (bad) movsb fs mov scas xor and xchg pop pop jp ficoml add mov pop jo mov (bad) (bad) cmp shrl loopne push jno retq test mov rex.X fildl (bad) and mov add (bad) mov sbb sub (bad) test in cld xchg test mov mov adc movsb xchg ds leaveq lahf scas rcrb (bad) mov adc je mov rex.RB cmpsb mov (bad) sbb jrcxz sub push sbb retq leaveq fcomps movabs xchg clc sbb ds fcoms test adc or jnp lea pop orb xor lock rex.W ds adc rex.RB rex.R sub repnz sub and outsb hlt mov cmp (bad) xlat mov (bad) cmpsl sub rex.X xchg pop mov add rcll push mov sbb outsl test pop (bad) enterq mov setg imul xor gs fistpl (bad) jmp sbb mov xchg adc lret (bad) sub sbb pop sbb pop insb lods push xchg ja pop fcompl loop xchg sbb fstp fistl out pop test xchg movabs add out (bad) out adc cld push adc adc retq (bad) or pop push sub pop sbb add mov or xchg xchg cld mulb retq rex.WX push fdivr imul (bad) or sbb outsl mov (bad) jo test and fwait cmp enterq push cmp cmp push sub lret es scas xor (bad) stos (bad) sarb mov lret lods repnz cmpsb jb or push out add in push push loopne (bad) (bad) and fcoml (bad) nop/reserved (bad) jmp mov movsb (bad) or scas mov push mov movabs cltd mov mov and lock sbb adc out cmc stc xchg repnz add clc addr32 mov (bad) pop fldt sub fcomps and jmpq jae movabs loop xor pop rex.B jl rex.WXB rex cmp test xchg (bad) and adc test and (bad) xchg sti stos jl ss cmpsb cltd jmp fild cmp cwtl lret fbld and jg mov sub add add mov rex.RXB loopne out rex.RB push (bad) cs xlat mov cmp pushq sbb lods sub (bad) and insl fstpl or retq push nop or popfq int3 and jns jmpq lahf (bad) loop mov adc pop mov pop jo push clc cmpsl movabs (bad) enterq movsb mov sbb sbb mov (bad) in push out iret fwait xor mov enterq adc andl mov jno stos rex.WRXB pop rex.W out ds lods scas xchg callq cs adc (bad) (bad) cld jrcxz and adc and enterq (bad) jl cwtl add rex.WB adc xchg adc xchg and insl mov push sbb jrcxz or rex.XB movsb clc jp adc jge or fist mov push loop add xor push (bad) mov mov jae jle callq (bad) (bad) push or mov fcomps nop mov ja fstpt (bad) mov add adc lahf test (bad) rex.X sub xchg in jo mov fist in rex.R jno (bad) insb (bad) subl (bad) pushq movsb add outsl (bad) adc push mov or push lea jmp push xlat je rex.WRB rex.WR cmp shll mov sti rex.XB (bad) ficompl movabs (bad) or and add mov xlat movsb xlat clc stc cwtl rcll rex.RB mov jae adc bnd jmpq jne xor rolb in cmp xchg pop fwait clc xor jle lods jnp pop rex.RXB rex.WX xor (bad) xor (bad) rex.XB pushfq cld push pushq and adc rex.X (bad) sub ss adc int (bad) mov (bad) lods (bad) imull push fmull add xor xchg adcb movsb mov jns neg adc mov xchg movsb xchg rolb mov leaveq rex.WRX rex.WRXB (bad) test (bad) out (bad) (bad) std (bad) adc xor xchg cmp add (bad) fsubl cmpsb sub xchg rex.XB cmp pop sahf fstp loope adc push cmp adc rex.X adc sbb (bad) add adc je rex.WRX push mov (bad) push xchg adc test jp adc sbb test add in (bad) cmpsl xchg (bad) adc rex.RXB rex.WRX xchg adc (bad) pushq ficoml (bad) push je mov imul adc jge je (bad) mov rex.WR xchg outsb notl js cmp rex.WX mov fwait rex.RB rex.WR divl fstpt (bad) or adc mov sub adc ss add mov push cmp lret sbb rex.W jle (bad) test xchg jnp je pop push add mov lea adc xor jg jnp jle mov adc sti or cmp adc stc jle adc movslq movabs sub or push mov adc imul in adc xor xor in icebp (bad) pop lret callq shr scas je cld or in mov pop xor pop mov or callq mov rorb fcomip int retq stos sbb scas scas cmp push stos popfq (bad) mov mov (bad) xchg int sbb xor xchg out pop (bad) and loope movabs sbb lock add mov js lods rex.W sub sbb insb nop enterq jae sbb movabs movabs stos (bad) (bad) ja pop adc cmp pop clc addr32 movsl sub imul sahf incl js rex.B fsubrl ss test nop rex.RX sti movsb (bad) loopne or pop add js imul adc shlb (bad) mov rex.X data16 pop pop addl lock cmp (bad) (bad) sbb fiadd fcoms xchg push push dec pop adc (bad) mov loopne (bad) (bad) jle mov xor (bad) cmpsb add sub push (bad) ss cmp rex.B (bad) xchg jae pop es mov data16 or pop xchg (bad) mov (bad) mov mov in std movabs sbb add add fistpll or xchg mov sbb mov je fcomps pop movslq mov jno stos (bad) lock rcrl cmp pop in mov or out cmpsl rex.RXB (bad) adc cmp gs (bad) xor xchg (bad) (bad) (bad) cs out push mov jmpq sub xchg (bad) pop or jne jno or cli cs retq (bad) jne rorl callq (bad) and mov xchg pop xchg imul (bad) sbb (bad) and sub cmp jae pop (bad) sbb adcl add nop mov fdivs loopne mov in cmc jrcxz (bad) (bad) sbb movabs loop (bad) int3 mov rex.WRB enterq rex.WRB es xlat (bad) retq (bad) or (bad) (bad) xor insl or add adc repz fimull rex.RXB push (bad) add xor (bad) insl movabs ficompl (bad) push cmp mov adc sub iret or pushq cmc adcb rex.WRXB mov out mov adc sub out rex.WB sub pop jrcxz imul sbb sti enterq test (bad) (bad) in xchg (bad) xor and (bad) imul adc jp adc (bad) (bad) lods (bad) ss push sub rex.WRB lods (bad) xchg loopne (bad) xchg sub xchg (bad) mov pop out (bad) rcl jns hlt xor and adc and lods (bad) jns xchg xor xor movabs int fistpl cmp shlb and cmpxchg or mov rex.X sbb mov (bad) jmp addb repz movslq gs sbb xchg cld rex.RB in or mov jmp jns mov fisttp stc enterq mov mov rex.X icebp shlb rorb movsl mov addb cmc mov mov pop sbb (bad) jno loope (bad) rcll mov repz jrcxz lock xlat sub adc shrd js add jnp lock idivl (bad) (bad) adc (bad) pop (bad) popfq movsb sarb mov out xor ds (bad) rex.WRX or rex.RB (bad) xchg push xchg sbb fwait retq adc (bad) sti jns fbld adc (bad) jge push (bad) xor xchg adc sti shrl test or pop xlat movabs (bad) (bad) leaveq push adc jbe mov and lret outsb (bad) (bad) jae xchg adc clc (bad) fwait rex.RXB cmpsl mov (bad) cwtl in jno cmp jp (bad) movsl xor js fwait (bad) sti mov adc (bad) xchg cmp xor push (bad) jrcxz mov (bad) xchg mov sahf cmp (bad) rex.WRXB (bad) xchg (bad) jae (bad) and nop (bad) fiadd loope xor sbb adc rex.WR pushq (bad) callq (bad) movsw callq pop fbld mov rex.X adc cmpsb (bad) mov (bad) stos and sub jmpq (bad) rex.WRX (bad) jnp sbb loope xchg rex.WRB rex.X callq data16 mov or or gs rex.B iret je adc mov cs or fucom (bad) (bad) xchg sbb adc movslq test or mov lea adc jnp and int rex.W movabs lea and hlt xor je,pn or (bad) and add xchg sub sub rex.WRB repnz cmpsl gs fcmove icebp mov and pop movabs jg leaveq cmc mov and jg out pushq mov or lret add sti int3 insb cmp xchg rex.WRB ja pop cltd mov add mov movabs je vpcomd pop xchg jmp imul cmpsb (bad) fdivl sbb mov insb andb jle (bad) lahf sbb or mov in mov cmpsb (bad) xchg mov rex.W sbb cmc (bad) pop rorl repnz pop fstl (bad) jne rcrb rex.WR and cmc movabs jnp sahf adc cmp (bad) loop sub shrb lret jle pop pop je lret (bad) lods or and popfq xchg rex.WR pop cmpb (bad) (bad) jno sbb movabs or cmpsl adc int3 sub sub adc cmp or (bad) cmp stos movabs or (bad) mov fbld sti jb fbstp jbe mov and lret cld add sti subb mov movabs jne movabs rcr rex.WXB rex.X repnz adc fs enterq fistp (bad) (bad) out lods sti sarl xchg in rex.R mov add mov jle (bad) lea repz ds lods sub mov and movabs rcrl jne outsb push jmp adc (bad) mov mov adc jns mov push rex.WRB adc and mov in jbe adc (bad) clc (bad) mov fdivr cmp jnp jl addl cmp sbb xor sbb jb fadds fidiv jle and rol retq xchg loopne lret or (bad) out mov movsb xchg adc mov scas jle repz (bad) mov clc mov push sbb ja fcmovnb cwtl add pop cpuid stos movabs rex.WB rex.WXB lods (bad) (bad) and js push (bad) mov (bad) xchg adc or bnd fwait jl (bad) or and adc (bad) js jp (bad) (bad) ss mov xor lock rex.RX test lret movsb push out or adc loopne cmpsb in (bad) insl nop push mov cltd jne pop sahf add test lea xchg mov xchg clc testl adc out insl movabs rex.WR rex.RX sar rex.RB scas repnz adc popfq and mov jne in adc xchg push push clc xor ficom pushfq lods xor sbb (bad) cmp fdivrs movabs (bad) lret xchg adc and push mov sarb loope fs adc lea adc lahf xlat jge or cmc fcmovb out sbb mov hlt pcmpeqb (bad) jmp sbb mov (bad) imul pop cmp pop sbb ja sub mov out movups or popq xchg and sbb data16 push or mov jl sbb rex.R sbb sub xor test add xor fsincos (bad) or (bad) int rex.WRB es (bad) jmp movslq rex.WRXB mov (bad) je shll sub mov and or mov xchg xor (bad) add (bad) jmp push (bad) ficompl lods insb adc pop lahf fs stos sbb adc mov xor (bad) jrcxz retq mov adc jo pop sbb rex.RX nop in cmpsl scas xor jno je pop fdivrs pushfq mov imul (bad) mov adc jno enterq adc rex.WRB rex.WRXB in adc mov cltd sub orb mov (bad) (bad) shl (bad) js (bad) and stos (bad) fcmovne negb fs rex.RX outsl cs test repz push mov add popfq xchg add add rex.W loopne add movabs (bad) push sarl iret xor jno jrcxz out outsb jrcxz stos adc test sub xor xchg jb repnz stc mov adc jmp leaveq mov nop (bad) sub fwait sbb sbbb sbb test push xor int3 fwait adc rcrb pushfq add rex.WR stc jmp (bad) (bad) mov scas in xor loopne jmp mov jnp jno mov xchg xchg adc sub push xchg (bad) (bad) push fisttp and sbb or jno or cmp ss push xchg mov rex.WR mov adcl sbb pop (bad) iret xchg ss cmp rex.WRXB pop xchg cmpsl (bad) mov neg lret rex.B lea scas lock rex.WRB jb xchg mov push xchg adc sbb mov (bad) sbb adc rcrl int xor push lea rex.W add xchg and imul jmp mov push jge movabs cld mov push adc imull in movabs pop mov scas lods je adc loope enterq pop (bad) test fildl sbb rex.B stos cvtdq2ps or lret jae insb enterq data16 mov rex.WRXB ss adc movabs or jo rclb (bad) mov sbb mov pushq movsb push (bad) adc in in outsl cmp add (bad) icebp cmc mov xlat outsb (bad) cmp rcrb (bad) xchg adc std add sub insb xchg movabs mov cmp rex.X push push (bad) xlat hlt (bad) and outsl adc xor popfq fsubl jno data16 out push and in jmp js out loopne xor jo adc mov adc jge (bad) fwait pop adc add xchg (bad) push (bad) ss pop rex adc (bad) (bad) cli mov icebp jo mov pushq enterq adc (bad) xchg pop fnstcw adc cmp mov (bad) push sbb ja (bad) fnstsw mov mov rex.R rex.XB ss mov (bad) js lahf rcrl mov pop pop cmc rorl sbb (bad) movslq mov iret cmp pop and pop or mov rex.RXB (bad) sbb (bad) add int and or add jg fcmovu mov add ds rclb sbb lea pushq test (bad) pop cmp mov jmp (bad) mov cmp xchg and xchg (bad) (bad) insb sub xchg jrcxz out ja pop sti (bad) jns stos retq (bad) sbb lret mov push and (bad) jae cmc pop callq pop rex.WRXB fwait rex.R xchg mov xchg movabs outsb or (bad) rorl cmp movslq repnz lret (bad) retq jnp test cmp (bad) (bad) (bad) pop out add add jno mov cld xor adc (bad) mulb mull mov (bad) jrcxz (bad) xor mov or lock adc pop jne xchg rex.WXB push adc fs xlat adc (bad) or rex.RXB xchg movabs jb (bad) rex.X rex.W fs add rclb out push ja (bad) rex.RXB icebp outsl pop add pop (bad) jno lods pmaxsw in rex.WRXB and movabs rex.WRXB sahf (bad) jnp sub xchg (bad) rclb jp add int3 rex.RXB (bad) (bad) jrcxz and sarb adc xchg (bad) adc test mov lret mov loope add adc (bad) mov movabs xor jbe pop clc std jg xchg push pop xor cs in cli xchg or (bad) adc add xchg rex.RX fwait imul jns (bad) cmc adc movabs cwtl or insb pop shr adc (bad) js rex.WB rex.XB mov sub push hlt adc imul out push xor movsl rex.RX rex.WRXB xor or vunpckhps cmp jno xor adc and (bad) popfq cmp sub (bad) xchg xor (bad) or (bad) xchg rex.WB lock xor add xchg cli ja pop pushq outsl sbb (bad) cmc mov insl sub cmp sbb rex.R test retq fsts (bad) (bad) and in js repnz rex.WRXB (bad) fmul and repnz (bad) or rex.WRB pop xchg ja imul xchg or (bad) adc mov jo (bad) mov test fnop adc push push mov (bad) cld jl jae (bad) jne (bad) sub sahf xor adc andl cmp rex.X add cmp movsl push (bad) push add jb fistl (bad) andb mov cmpsb adc sbb pushfq pop movsl sub data16 and adc push jb repz (bad) push xchg movabs rex.WX or jl adc imulb jge (bad) and rex.B hlt (bad) scas retq hlt repz in adc rex.RX (bad) pcmpgtw test (bad) retq adc adc adc adc add data16 cmp fdivrl sbb adc cmpsb sub frstor incb movabs rex.B loope (bad) adc dec insb test mov fstpl jle std push (bad) insb lock rex.WRB push hlt gs enterq adc test adc movsl (bad) and adc fbld adc (bad) mov cli adc pop in xor enterq add jb add (bad) sub cltd lret movabs pop rex.WXB adc jmpq adc rex.WXB out rex.R std rcll xchg jp adc test jae push cmp negl repnz movsl imul xor popfq movabs rex.WX add or and (bad) retq and mov out add scas in rex.WXB (bad) (bad) cmp rex.WX repnz and push fimull movslq insb loop movsl (bad) (bad) out sbb int3 rex.WB add lret je pop shrl cmpxchg stos and (bad) rex.RXB shll push shll callq rex.RB mov mov out rcl neg xor (bad) (bad) push cmc push jnp cs in (bad) mov icebp (bad) xchg movabs xchg shrb int3 loop and lahf (bad) cmpsb enterq mov cwtl rclb mov divb test out xor and lea (bad) imul (bad) (bad) insl jmpq rex.XB outsb push add rex.WXB jo mov es (bad) fldcw sub sbb rex.B retw fcom cmp repnz or push imull rex.WRXB callq pushq sbb sub jmp lret flds push and out (bad) repnz repnz (bad) cmp movabs repnz jrcxz jbe push in jg add mov mov shr xchg sub (bad) cmc movabs sbb push xchg xchg sbb cltd (bad) scas stos in cld pushq popfq in lret adc ror ucomiss sbb adc pop or (bad) sbb xor push movslq cmp mov pop rex.WRXB sub out add add xchg int3 lods mov mov and pop jns jrcxz (bad) sbb rex.B jmp jnp mov sbb pushq (bad) mov imul out gs cwtl adc pushq (bad) fisub ds and or cmpsb lods imul pop int3 push lea movabs (bad) pop and in mov (bad) test add push pop xor orb rex.WB (bad) loopne imull subb sbb sub int mov outsl cli shr adc out negl movabs retq sbb lret (bad) int3 mov rcll outsl popfq and xlat (bad) lahf mov and (bad) cwtl enterq (bad) fwait or (bad) (bad) adc jae (bad) jg int3 rorb pop mov es gs rex.WRX jno sub stos imul (bad) xchg mov insl test repnz retq (bad) mov mov jb pop sahf sbb (bad) mov sub sub mov (bad) (bad) pop rex.RXB add je out lock callq jge cmp lea hlt fisubrl and pushfq cmpsl and fildl sub repnz gs jne stos sub push (bad) pop jle add xor fs retq cmp subl stos mov cmc callq rex.R imul sbb sub and in jae shrb mov std leaveq adc (bad) rex.R in rex.WRXB mov rex incb ror movabs movsl sbbb xchg shll sbb in or or retq mov fs sub (bad) xchg cmc hlt addb xor adc (bad) xor jae xchg rex.WX rex.WXB clc mov cmp xchg (bad) loop mov sub cmpsb cmp xlat adc roll loopne lret xchg rex.WRXB jrcxz test imul pop popfq fnop fwait adc test mov pop repnz xchg add (bad) rex.WRXB mov xchg ds movsl mov (bad) fwait add or movabs rex.WR adc jns and adc test wrmsr lods in adc pop mov icebp jbe andb (bad) xlat shll (bad) push pushq mov xlat and (bad) lret sbb mov mov fsubs jle xor in sbb sbb sub mov rex.X (bad) fisttpl (bad) sbb movsl in clc jnp lock loop xor iret popfq addb mov fmul add and push in push insb and jge push mov rex.WRXB iret (bad) rex.W push jp fst jno cs (bad) rex.WRB mov and (bad) xlat out jbe movsb (bad) std jnp pop callq pop jrcxz imul jl cmpsl push stos ss shl mov adc (bad) in rex.R (bad) insb xchg adc sbb (bad) cmpsl adc lock (bad) add retq xor stos xchg xchg xchg adc mov ja mov pushq and insb int3 in jmpq rex.RB rex.WX mov rex.X mov (bad) shl vpandn (bad) jp (bad) mov jl jge and xlat hlt popfq int3 cld sub pop push rex.XB callq xchg leaveq jmp add movsl jge xchg (bad) push pop mov add ss lahf lcall xor cmpsb imul xlat rcr sbb (bad) adcl rclb jmp outsb lea lea in adc xor test jl add movabs fwait adc (bad) sbb iret rex.WRX (bad) rex.WX jb adc fwait (bad) iret cli enterq leaveq (bad) mov hlt callq xor test mov add in xchg std jg (bad) mov sbb xchg icebp xchg stc cmp mov adc in xchg and xchg clc lock mov es retq add and leaveq jo rex.WR hlt cmp mov rex.WRB rex.WRXB rorl movsl adc xlat cmp pop mov icebp rex.WRB nop (bad) iret adc push pop hlt adc mov jb icebp out lret lock rex.WRXB retq loop rex.WRB (bad) mov xor cltd and xchg lock xchg and mov sbb cmp rex.WRB mov (bad) (bad) fwait lods ss data16 push pushq or (bad) xor jbe ss insl (bad) pop or mov fist test (bad) mov ss outsb sub rex.XB repz push cltd lea (bad) xchg movabs shll mov loopne lahf jmp (bad) rex.RXB fimull or mov in (bad) cmp xor (bad) cmp jp sbb add jmpq (bad) xor mov (bad) mov insl (bad) (bad) and outsb icebp imul add and imul or stos (bad) lea imulb (bad) fwait sub mov fucomp xchg (bad) xchg rcrb jo je bnd adc push add movslq insb rcll add and mov incb fnsave mov sbb lahf and retq cmp cwtl add rex.WRB jg mov xor jmpq and mov retq xchg xchg (bad) and mov mov (bad) sti or movabs (bad) add jne loope callq jb rex.WR mov addb or sbbb sbb rol clc rex.WR jb adc fisttpl (bad) js mov mov divb (bad) (bad) (bad) jrcxz (bad) hlt mov jp outsl (bad) jae (bad) jp mov vmulss sub adc lock sub je rex.WX sub imul rolb cmp fcoms sbb insb in sub pushq and movb (bad) cmpsl sub push sbb xchg add imul (bad) cmp js sub in lea sbb mov callq sysret sub lret repnz je push xor (bad) fcompl scas adc (bad) (bad) mov subb (bad) mov rex.B rex.RX mov add sub adc (bad) jmpq fdivrl rex.X jrcxz or xor push addr32 movslq loope lods fidivl out repnz (bad) pop int3 out fistl jbe xchg xchg test je shll loop xor cmpps test mov rex.XB jl repnz fdivrl mov ja mov rcrb insl or mov rex.WR (bad) add adcl shrl adc mov jmpq sub repnz (bad) jb xor xchg adc jmp jbe mov xlat cld movsl fmuls cmpsl mov xchg popfq or (bad) sub jmp rex.RXB or (bad) std movabs add fidivr pop js cmpsb push rex.X addr32 fwait and rolb and movabs (bad) adc push fdivs (bad) (bad) xor andb gs iret add fsubrs sbb sbb pushq mov movslq (bad) xchg cld callq (bad) jns (bad) (bad) movabs jno out scas push adc adc rcl add stos imul add adc (bad) adc movabs adc outsl (bad) out cmp fildl (bad) fstps mov adc in rex.WRX outsl xchg iret fcomp cmp xchg sti sub insl js adcb mov in (bad) pop cltd test (bad) rex.XB popfq or mov adc adc movb rex.WRB fisttp pushq lods adc fldcw (bad) mov jno roll xlat sti sub or xchg icebp add stc js jno (bad) sub mov xchg es sub xchg add push (bad) repz loopne mov negb rex.WX adc jrcxz adcb iret or pop adc (bad) clc (bad) jp rex.WXB (bad) rex.R rex.RX callq cmpsb xchg mov int callq callq rex.X lock or push mov scas (bad) sbb sub rclb out stos jmpq adc (bad) jmp jne or std sbb pop vmovaps stos or (bad) adc (bad) repnz xor gs (bad) mov adc sub addl mov not mov scas (bad) adc int3 jne,pn mov (bad) cmpsl (bad) adc sbb pop adc adc enterq in xchg add rex.RB sub retq cmp jno fsubs sub push mov hlt sbb sub (bad) and test sbb insb pop sti imul mov loope fiaddl mov mul shl subw (bad) enterq cmp shll fist lock (bad) adc add movsl es xchg (bad) xor xor sub mov pushfq lea movslq movabs or jl mov rex.WRB sbb adc adc mov (bad) xlat adc xchg or idivl sbb ss gs cltd (bad) lods xor push movsb mov sti or (bad) rex.WRB push fnstenv lods addl loopne test sub out adc cmp (bad) test lods fcompl (bad) loop adc sub jne mov cmpsl rcll cltd xchg xchg insb mov (bad) sub mov fmul stc cli loop in (bad) add js out xor adc sahf cld rex.X jbe adc mov and and adc movd or movabs js gs add jge hlt (bad) icebp and popfq cmpsl or sbb cmp mov sbb insb (bad) mov or and ja movabs xchg xchg jrcxz mov jle lock xchg mov leaveq (bad) stc and cli ss js outsl xor jno sti (bad) mov stc jne (bad) loopne div cs mov lret mov fwait outsl xchg movabs push xchg xchg xchg (bad) cli ffreep test (bad) ds mov scas ds rex.X (bad) jl shll push rex.RXB sbb jno (bad) add test sub es adc clc pushq retq in xchg iret fmul retq jbe (bad) sti or rex.WB mov ja cltd fcomip rorl (bad) fwait sbb xor mov insl (bad) sub rex.X stos mov pop clc add nop adc mov pop in (bad) in cmc sbb (bad) (bad) cmp mov lahf mov sbb push rex (bad) enterq outsb je jmpq and fdivr repnz xlat (bad) shr retq mov xor lret outsb loopne (bad) (bad) pop cmp cmp orb (bad) scas xchg cmp lahf sub rex.WRB js testb (bad) shrb jns xor repz sub callq jae xor (bad) or xchg fs out (bad) nop or in add and sub mov rol (bad) push movabs ss movsl test fadd or (bad) fnstsw int rex.WRXB push out (bad) rorl movsl cmp (bad) or adc lock divb add repnz mov sbb rex.WXB test jl cmp jno out shrb je ficomp frstor xor and (bad) sub rex.WRB xchg rex.RXB jl scas xchg retq or add pop mov (bad) std push mov ja sets add insl xor shll (bad) movabs pop es movabs out sub and jrcxz adc xchg pushfq add xor add fadds es (bad) out cmc (bad) adc xlat mov (bad) andl scas mov sbb jno int add mov (bad) sbb callq stos rex.WRB adc push xlat imul mov (bad) and cmpsl (bad) ds movabs xchg rcrb rex.RX cmp rex.RXB cmp lods sub mov or int3 cltd sub in adc sbb fisttpll or movsb mov cmp pushq (bad) (bad) mov cmp iret jmpq add mov cmp or pop xchg or cld mov xor adc in xor push leaveq xchg mov stos cld (bad) (bad) sbb insl mov rex.B (bad) mov (bad) xor fstpt pop pushfq rex.WX rex.WRB mov xor jle icebp (bad) jnp pop xchg test fstps loopne mov mov mov (bad) pop cmp lahf adc rex.W rex out lock rcrl push test jl add jg (bad) add (bad) (bad) mov pop jae clc sbb jns sbbl pop fcmovu adc out adc push callq adc sbb adc cmp mov mov adc rex.WB and test mov xchg jbe and adc (bad) sbb pop sbb push mov jge (bad) sub ja (bad) data16 (bad) cmp cmc adc xor mov mov adc jo popfq push clc cmp mov (bad) mov cmp js add mov mov out sbb mov xchg test mov jmpq (bad) rcl add in popfq rcr add and and stc mov xlat adc jrcxz fadds (bad) pop mov jl mov rex.WX int3 jb adc cmp lret adc xor sti sbb mov xchg lret callq (bad) xchg (bad) shll imul push callq pop lock xlat (bad) (bad) mov (bad) out shr (bad) mov jl rcrb mov sbbl mov rex.WX adc xadd mov (bad) (bad) out movsl test (bad) callq leaveq sbb lods mov (bad) lahf (bad) mov xchg cmpsb divl (bad) rclb (bad) xchg xor stos and and sbb jg pop xor (bad) idivl leaveq scas mov xchg movabs jge sub ss adc (bad) lahf (bad) rex.WRX jmpq rex.RB adc and popfq jbe mov rex.WRB enterq imul mov out insl divb (bad) cmp adc sahf rcr movabs add add repnz insb or rex.RB pop mov sbb out (bad) mov rex.WRX cs rex.RB jnp out pop (bad) mov jle xchg cmp pop rex.WXB outsb and mov int adc insb pop fcmovb xor jae in rex.WRX lods rex.WRX clc cmc jmpq and jle rex xchg (bad) rex.RXB outsl (bad) (bad) and or xor mov pop jrcxz (bad) insb sub add xchg mov fdivs shr lock outsb fimul nop jb mov add or pop rex.XB mov (bad) xorb incb paddsb rex.WR stos rcll cmp stos rex.X sti mov lret mov notb pushfq stos lods mov movabs jg imul (bad) int3 (bad) mov (bad) callq sub (bad) int jne adc test pop xor jrcxz lods xlat idivl pop mov gs sub push icebp xchg sbb in rex.RX (bad) and adc mov rex.XB (bad) rex.WXB pop (bad) pop movabs (bad) out scas retq int3 in (bad) stos or pop adc mov sbb jg ror ror push (bad) push subl (bad) adc mov movabs or jbe sahf (bad) or lahf xchg movabs mov push xor movslq jge retq (bad) insb xchg sub ds (bad) fnop (bad) pop out mov pop (bad) cmp movabs sub (bad) cvtps2pi sub sbb cmp (bad) jno out sub movabs or (bad) xchg stos (bad) jmpq sub fmuls rex.R movabs sbb out xchg push jle (bad) fsts adc (bad) rex.W xchg add cmp or sub enterq adc adc mov lahf std jne clc ja js xchg (bad) mov jmp (bad) mov jrcxz in je cmp mov retq rex.XB adc jae mov adc mov rex.R scas (bad) rex.WXB adc mov sub adc mov or (bad) jns in fs repz out jl or lahf cmpsb (bad) movabs (bad) insb cs xchg jrcxz insl fmull ja adc xchg hlt sbb push rex.R rex.WRB add sub adc lea fwait rex.W sub in xchg ja sbb rolb mov lock push nop lods ja adc pop xchg and callq lahf jb jl lock out movabs xchg rex.X jbe xchg (bad) stos popfq leaveq sub adc (bad) repnz (bad) addr32 rex.XB sub xchg adc cli (bad) jge push rex.XB or je movabs xchg fcmovb movabs xchg mov jl shll data16 repnz roll push retq in jo mov (bad) out enterq (bad) rex.XB cmp movabs movsb xor xchg xor jno (bad) xor rex.X xchg std stc (bad) mov xorl iret sbb stos pop retq and xchg jo (bad) sub xor mov adc sbb rex.X rex.WB sub clc sub cmp (bad) xchg add (bad) or adc or jmp movsl sbb pushfq rex.RX or mov mov gs mov mov roll repz rcrb loope rex mov sbb lahf divb stos int3 and fs jge mov callq sub (bad) clc repz xor rex.WRB mov jne mov rex.RB and lret add std jle jrcxz sub mov addr32 subps add repz cli js (bad) sub and xlat loopne rex.WXB (bad) mov and (bad) repnz (bad) lods or test push rex.WRB rex.B adc jo cmp iret or pushq jmpq pop (bad) xchg or rex.RX rex.WRXB and add xor mov rex.W ficomp leaveq adc es adc mov adc cmp mov out (bad) (bad) outsl hlt cld fsts pop in out or mov mov mov xchg jbe mov mov fstpt fxch fwait sbb enterq jae ss mov test push pop cld imul pop mov push mov adc sub xor mov xchg movsb (bad) fcmovnbe (bad) cmp out or sub rolb adc outsl icebp jnp push jl jo push sub add cmp or xorb jmp jb in (bad) jle (bad) adc rclb rex.B std ds push (bad) rclb pop rex.R retq in (bad) jo sbb and jmp pushq jmpq (bad) xor in in enterq rep popfq loop cmp lea (bad) jbe rex.W retq cmp scas sub mov in jnp rex.RXB scas in loope (bad) int3 rex.RX cmp insb hlt mov rex.X stos sub mov test cld jo sub insl and cmp repz rex (bad) stc fnstcw sbb mov and (bad) rex.WRB (bad) jrcxz mov lret enterq (bad) sbb (bad) movslq test adc xor imul xorb (bad) lods js mov ds (bad) ss fisubl test xorb test ds mov retq rex.WXB xchg out rcll lcall cltd jp ja lahf cmp scas rex.WRX xor test pop xchg (bad) jo rex.X rex.R rex.X mov or retq rex.WRB mov jl or andl fdivr add jb xchg push and (bad) in pop push movsl (bad) gs jl,pt adc movslq js pop cs jp fbld stos add and rex.WR adc and loope rex.W lock imul imul add repnz scas sub add subl add sbb fnop or punpcklbw test sub rex.RX mov out (bad) fcoml rex.WR jnp adc sbb movabs js int3 xchg sub pop mov retq mov or movsb push mov (bad) pop (bad) jo (bad) adc callq (bad) fld1 fsub rex.RXB notb rex.WXB or sbb (bad) sbb jno xorl lock mov and (bad) jp add and iret out xchg xor sub and mov std callq rorb mov xor in in add insl test (bad) sbb test sub xor fldt (bad) push lock (bad) jnp rex.WRXB (bad) mov insl and lods mov icebp notb mov sub cmp (bad) mov adc rex.RX mov and and xlat es cmp add (bad) fldz (bad) scas addl scas rex.W fnstenv stc cmp (bad) jno movabs (bad) (bad) (bad) (bad) fdecstp (bad) sbb movsb bsr int out mov int3 xor (bad) subl sub mov add rex.WB lock cld rex.XB repz movsl mov lock test mov leaveq and addr32 sub clc rex.WB jl fsubp rex.RB clc rex.WXB (bad) xor xchg (bad) out xchg rex.WRB (bad) hlt (bad) fnsave mov rex.XB adc cmp nop jne xor (bad) adc adc sbb sbb gs adc nop pop movsb enterq rex.WRXB xchg push rclb mov (bad) lea callq movslq (bad) or addb mov (bad) push cld xor (bad) cmpsl (bad) mulq rex.WRXB cs in shr pop pop adc repnz jp sub cmp and xchg pop adc movsl jno cmp (bad) mov cmpsb (bad) xchg push movabs cltd movslq cmp pop adc (bad) xlat and add add movsb shrd (bad) cmp (bad) ss jno mov rex.W or rorl mov xchg out (bad) fcoms mov add pushfq jle adc add imull fcoml add mov cmp rex.X (bad) pop (bad) std (bad) mov es lock fs push xor rex.WRX movsl mov add rex.WB (bad) rex.WRXB je jmp jb pushfq lock andb xchg jb adc pop cli cwtl cmp cmp sbb sahf fcompl repz jbe cmp (bad) xchg jge sarb (bad) push retq (bad) (bad) ja mov (bad) fdivrs sub out jl jns (bad) cmpsl mov iret xor sbb (bad) stc movabs in retq xor fwait xlat sbb (bad) jnp insb rex.WRX rex.WRXB (bad) jns rex test pop imul mov mov orl xchg pop push xlat repnz (bad) in and scas cmpsb leaveq adc (bad) and (bad) js enterq rex.WRX ds rex.WX out add fstpl pop (bad) rex.RXB rex.W fsubrs mov cmp (bad) fdiv mov (bad) push add test (bad) notl pop pushfq sahf adc xchg mov loopne cmpb push adc popfq (bad) movsb icebp adc sub jns adc mov out xor icebp jmp (bad) (bad) (bad) lock insb outsb xchg mov push xlat or fcompl xchg pop stc mov xchg hlt jns cmpsl cmp outsl scas ja movsl sub fdivs pop add sub xchg rex.WX (bad) add jrcxz xlat (bad) rex.RXB adc rex.WRX xor jns sbb (bad) mov xchg jae fldcw lea or adc mov (bad) movabs out mov (bad) (bad) sub adc rex.RB rex.RXB rex.WRX adc insl (bad) mov adc movsb (bad) push xchg and adc cmp xchg fdivs mov mov rex.RXB icebp sbb xlat cmp sub adc loop in xor movslq add (bad) rex.RXB adc and jbe lahf nop sub in push movsl pushq rex.WRB rorb and icebp xlat pop add lock mov cltd (bad) movsl (bad) rex.RX (bad) mov mov cltd pop lahf sahf xor idivl mov movsl push xchg repnz adc pop movabs js scas hlt xor fwait (bad) popfq lahf add test cmp pop rex.X fwait mov addr32 in lods pop push cmp notb (bad) callq mov jmp (bad) (bad) xchg movabs test or jl (bad) hlt ss xchg jo mov xchg callq js add (bad) rex.RX nop and pop cwtl rex.B fwait insl adc pop (bad) adc rclb out mov pushq jmpq movabs repnz cmpsl pop or fsubl addb out movsl movsb repnz shl add pushq rex.X jno mov (bad) adcb xor add rcrb cs sbbl jp out test xor cmp lret mov movabs (bad) insb pushq sub enterq sbb scas (bad) rex.WRX jns or sbb std rex.WRXB test adc (bad) rex.WRXB mov pop sbb cmp (bad) int cltd js (bad) (bad) cmc cmp scas sbb jl mov rcr xchg test pop ds xor jle sbb mov mov xor add add xor (bad) (bad) callq retq rex.WR rclb xchg xchg ja pop sub push jp push adc mulb xlat add cmc lock pop clc xor cmpsb cmpsb stc mov adc or icebp scas (bad) in (bad) cmp std (bad) mov (bad) movslq callq pop rol shlb pop mov xchg insb fdivs outsb cmp or cmp sub rex jmp mov fmul callq xlat xchg and push or adc add fsub cld jne int3 retq jg in add mov bnd cmpsb test stos xchg test pop and pop nop pop and (bad) and rex.RX (bad) scas pushq sbb (bad) mov xor mov (bad) adc mov nop (bad) fs loop enterq loope pop and and cs rex.WRB pop sbb jne repnz (bad) mov mov callq add out fldt divb in (bad) loopne or imul in xchg fsubl push pushq rex.RB xchg and add idivl rex.WRX cmpsl or movsl fisttpl std shrl icebp adc xchg insb xlat cmpl (bad) lea and adc (bad) and adc sbb pop (bad) push (bad) sti pop (bad) jo (bad) addr32 popfq pop cmpsl test rex.XB fdiv jno adc push xchg test adc mov adc add neg rex.WRB test lea xchg fs xlat adc mov mov sbb gs sti iret cmp rclb (bad) imul cltd pop and cmp iret lea cli cmp stos (bad) xchg adc callq rolb adc jb rorb (bad) xor xchg jmp add int3 iret cltd pop and adc (bad) in xchg jg xchg mov pop stc int (bad) jb fwait in adc in pushq outsl rex.WRX stos adc push sub mov insl out in lret (bad) mov lea add rex.R mov add test pop adc jbe mov mov or mov fistl ja (bad) out mov cli (bad) mov sub push xchg jnp mov in jmpq adc movslq adc fwait push pushfq add (bad) lahf pop sbb mov adc jge sbb adc fisubl adc (bad) adc (bad) sub xor add and lahf (bad) test gs and pop shrl in insb xchg sub and retq adc test movabs rex.WRB push pop sbb mov subb mov xchg sbb jne std rex.R sub ficoml repnz xchg (bad) add in enterq enterq (bad) pop mov (bad) (bad) mov test ds and (bad) jno lahf loop adc cmp rex.WX xchg adc scas sub mov sub sbb fnsave pop fsubl (bad) (bad) cs cli (bad) xchg fwait push mov push lock fsubs jp mov repz and rex (bad) xlat hlt (bad) rex.WXB and je pushq pop fs (bad) jmp insl push adc (bad) sub (bad) test fs xor cmp gs lret xchg (bad) (bad) jno movabs pop imul adc stos (bad) fsubl rex.RX fstpl fnsave or mov (bad) cmp rex.XB mov add and mov (bad) lods and pop jge movabs adc rclb sbb cmp jle lret push sbb rex.WR push fadds rex sbb mov icebp stos movabs pop xchg cs or imull retq cs (bad) lods xor adc (bad) scas jno mov fwait xchg enterq insl std or pushq (bad) sub cmp int3 repz sahf out (bad) sub (bad) add sbb scas (bad) mov icebp lods sub push rex.X rex.WX and out and fnsave imul in insb sub (bad) sbb orl push push cmp setl (bad) rex.WR lods js pop or rex.W mov push mov and jmpq add fidivrl notl outsl xorl jne (bad) (bad) jrcxz and push sbb adcl loopne xchg (bad) fisttpl int3 imul rex.WR es adc sub mov rex.W xchg in xchg (bad) stos rex.WB jge movsb xchg mov rcrl rex.RB rex.WR (bad) mov sub adc mov (bad) cmc push cmp add cmp (bad) sub sbb rex.WRX adc movabs cmc mov sub (bad) add nop cmpsl repnz (bad) ja (bad) cmp sbb pop repnz lahf int3 (bad) (bad) enterq pop (bad) (bad) sti lea lock rex.RB pop mov iret jrcxz mov and jmp lahf adc lods fstps xor jno push outsl pop (bad) (bad) (bad) iret popfq xchg mov lret es lret sub loope add xorl sbb xchg fldt xchg rcr cltd rclb jmpq callq adc rex.X scas adc test mov jl jp adc mov icebp jbe adc and data16 sti push pushfq (bad) xchg mov adc lret cmp mov xrstor sahf outsb adc rex.XB test xor adc jo mov mov adc loopne mov addr32 (bad) xchg out (bad) cmpsb rclb or nop pushfq adc xchg stc sub pop ficomp adc mov insb ja pop mov fsubl (bad) rex.W addr32 movsb jno lock mov adc lods (bad) xchg (bad) adc mov xchg cli jns (bad) fldt in adc xchg jrcxz sbbl jg test push adcb and mov lock and mov sub cmp add cmp mov add pop (bad) data16 rex.WXB mov std xor jae (bad) and mov jo in shll mov fidivrl faddl pushfq mov sbb jb int3 subl jb scas xchg fldl (bad) (bad) cmp mov js cmc movsl mov jno ds and stos icebp movabs cmp jae pop rex.WB test nop cmp add xlat push sub xchg rex.RX or hlt and sub jl roll insb nop cmp xlat fbld add sahf (bad) (bad) lret es retq xor add sbb shr scas rex repnz xchg (bad) fsubrl mov retq adc pop add movabs mov insb or outsb mov mov or (bad) hlt pop popfq rex.WB mov xchg mov movslq or scas rcrl (bad) (bad) (bad) stos je pop cmp enterq mov fbld jno js sub and movslq mov (bad) rex.X int3 (bad) xchg loopne pushq xlat cwtl sub (bad) fisubl (bad) rex.RX lock jne cs mov mul push fmulp cwtl jge jo sbb add push pop cmp int sbbb jne cltd (bad) loop std fldl ds cmp (bad) (bad) subl xor loop adc mov jg mov and lods xchg push mov mov test cs (bad) (bad) jg sbb icebp out movabs push lods lock (bad) cltd insl rcl cmp ja std jrcxz fsub xchg enterq mov or jmpq sub mov nop xor rex.WX repz cmpsb and xchg (bad) out mov jmpq insb pop cmpsl mov push mov leaveq (bad) cmp sbb mov in or rorl in cltd pushfq icebp mov mov movb mov stos callq pop push jns xor rex.XB xchg (bad) sbb fldt mov pushfq test int3 movslq out test sub (bad) (bad) repnz cmp jmpq (bad) retq rex.WRXB in lods rex.WRXB movsb gs xor mov mov addl (bad) and and and leaveq ds pop mov push ss rex.WR frstor movslq retq sbb adc rex.X mov cwtl xchg movabs xor jae movsb (bad) enterq fdivrs adc repz sub (bad) notl add add rex.WRX adc pop (bad) repz lock xchg jns and out jp ds test fwait cmp (bad) rex.R (bad) (bad) xor mov callq movabs xchg jg cmpsb xchg test jl xchg mov sbb add neg mov (bad) cld pop (bad) sbb (bad) es cmp adc mull adc (bad) jb adc mov mov cmp data16 add div rex.X rcll out mov or lock (bad) xor cltd adc rex.WB fadds in bnd adc cmp out movabs jnp (bad) fwait retq clc push fistpl lea (bad) add in mov rcll jle xor pushfq mov (bad) rex.WR (bad) push fcom pop jl xchg int3 scas (bad) jp adc sub rclb and or push xlat (bad) add jne or adc test rex.WRB repz fwait sbb add (bad) pop imul cmpsl lahf (bad) rex.RXB in lods (bad) (bad) push (bad) (bad) mov fcompl pop pop adc out mov pushq mov rex.W add (bad) adc mov rolb mov mov adc outsl (bad) lret callq (bad) adc sbb insl sbb fistpll jp xchg cmp mov cmp xor (bad) (bad) retq mov enterq push jbe leaveq cld adc push lahf fbstp mov test cmpsb cmpsl imul (bad) ss rex.R or js jno test xchg rex.WRX and notl push (bad) jg out (bad) adc jne push rex.XB movabs int3 lods movabs (bad) mov mov or out outsb repnz jle mov adc andl or mov (bad) mov std imul adc (bad) and pop vcvttps2dq pop (bad) cwtl (bad) ficompl mov jae adc adc jbe adc mov and mov js pop push (bad) (bad) pop adc pop xchg roll lretw test (bad) adc xor (bad) cwtl mov lea insb icebp push imul (bad) sbb and (bad) sub adc imul sub rex (bad) adc retq mov pop or movabs fistp jnp mov cmpsl vpsubsw (bad) fist rex.XB mov leaveq sub clc test icebp fstps rex.WRXB jne enterq (bad) or sahf mov callq lahf mov (bad) xor out insl adc (bad) movslq adc jne xchg stc mov add insb mov clc lods jg (bad) (bad) cwtl (bad) retq enterq (bad) test cwtl rex enterq jmpq cmpsb xchg (bad) jb add movsb and fisubrl mov mov (bad) mov scas adc rex.WXB mov sub rex.WRXB stos cwtl repz adc rex.RB pushq clc in mov add jae in jge (bad) (bad) mov push mov add je ficomp in in cmp jmpq in stos push adc adc imul xchg (bad) mov pop push mov pop or faddl rex.WX sbb xchg pop enterq adc add ja (bad) out push in (bad) clc pop (bad) rex.X incb rex rex.B cmpsb (bad) mov out adc (bad) lea addr32 cld repnz adc int repz loopne or or adc adc lret (bad) and cmpsl test (bad) adc push xchg pushfq (bad) cmp or lea (bad) add jle and mov movsb xchg retq and movabs xchg fild int3 je xchg fnstenv imul adc popfw (bad) rex.WRB clc gs int iret movslq jg pop sbb rex.WRXB push js (bad) and fist out movabs cmc xchg gs rex.WRXB rex.WB (bad) (bad) adc lock stos lock insb (bad) rex.WRB rex.W xor xchg add add je clc outsb (bad) test adc (bad) loopne movsb std rex.WRXB lret jmpq adc and and mov and and (bad) callq mov push rcll pushq pop movslq mov rex.WRB lock stc push (bad) stos xchg movabs test movsb cmpsb mov (bad) pushq rex.WRXB cmp scas test in mov adc clc (bad) or stos (bad) fwait mov or mov xchg pop insb roll enterq sbb jge rex.WXB xor xchg rex.WX rex.WB mov mov test xor jo ja cmpl outsb repnz in (bad) lock sbb movabs xchg sub fmul pushq out int clc cld (bad) out rex.XB mov sub rex adc rex.RB xchg pushq adc sub xchg jle xlat pushq fidivl jl movb (bad) mov retq addb pop lods fmul rex.WR rcll lret scas rex.WRX jrcxz pushq stos sub cmpsb rex.WRB repnz xchg (bad) mov cs adc repz xorl mulb adc in cwtl cwtl and adc xchg mov insb adc mov cmp cltd adc movabs fnstcw pop (bad) and loopne xlat mov movl and movb sub sbb sub gs rex.RXB in adc rex.WB xchg sti (bad) jl push jo xchg std psllq movsl imul adc loop adc movabs fnstsw cmp jb sbb pushfq mov push and mov in or js (bad) loopne adc pop rex.R out xor shrb (bad) jno sub lock jmpq mov push xchg insl sti pop and (bad) add mov movabs lahf cmpl xchg mov (bad) or pop int xor rex.WB rex.R sub pop sub fdivr jb callq subb and sub fiaddl shll mov (bad) fstpl shr rex.XB xor jno iret fisubrl fs imul rex.WR stos mov (bad) fmull (bad) fcmovnbe mov shr addl rcrb popfq sub imul jmpq xchg fidivr mov adc xchg out movabs outsb xchg push jrcxz clc mov sbb fwait pop xchg and std in rex.WB xchg sub xchg adc fcoms pop add pushq fisubrl xor std addr32 rex.B mov mov rex.RXB (bad) lods lea jl cmp adc sbb sub lock xor sti lock rex.RXB and movabs mov repz xchg jp jns retq rex.RXB sbb retq xchg xchg enterq rex.RB (bad) movslq jae mov (bad) mov outsl and (bad) add xor add cmpsl or adc (bad) xchg sub mov (bad) rex.RX lock adc enterq (bad) xchg hlt adc and mov cmp mov xchg fdiv (bad) (bad) fldl xor pop xor movabs xor or int fsubr add sbb nop loop popfq mov rex.WR je cmp adc rex fcomps ficom adc (bad) add (bad) mov sub insl lret fwait and jo outsb adc cld mov mov adc jmpq rex.RB or mov and rex.WRXB adc mov pop adc rex lods sbb xchg js insl es or retq rex.WRB pushfq (bad) (bad) sub ja pop int3 clc stos test pushfq vprotd (bad) xchg rex.RB (bad) or jl cmp pop ja imul mov insb xor cs add in fnstenv retq out jl stos pop imul lock (bad) cmc mov cs xchg scas pop clc jbe loopne fsubl sub ds (bad) mov cmp and add (bad) or ja fsts cmp sti and fnop ja or stos repz cmpsl push push imul sti lret or lock xchg mov out out sahf and scas or testb sahf adc out jae mov sti std scas or int3 cmpsl push sbb mov cmp std rex.WRX pop (bad) mov fidivrl pop xchg lock jno push retq outsl sbb shll push int sarb mov cmpsl (bad) xor imul out adc (bad) stc mov (bad) cmpsl test push cmp rex.R cmp jle mov sar rex.R rex.XB fcmovnb xor in cltd movabs fs adc notb and or ja push test xchg movabs xchg mov adc push movsl in cmp xor ror je adc jno adc xchg (bad) (bad) in scas enterq test pop callq adc testl mov xor clc adc int3 mov (bad) adc insb jnp js mov pop loope retq (bad) out retq (bad) shrl (bad) pushfq (bad) cmp add callq xchg push je ficomp jns pushfq xor adcl gs lahf sti fwait fwait sbb and (bad) callq push enterq sub cmp (bad) xor pop xor jno int hlt repnz sbb mov mov add push shll movslq movsb js xchg jns icebp fwait cmp cs mov mov jb callq (bad) pushfq xchg sbb fldl mov callq add sub rex.WRXB es movsb (bad) imull pushq lods push mov in or or rclb ja pushq (bad) sub movabs jmpq push sub (bad) add outsl adc jrcxz movsl (bad) sub jno out jmp push xlat (bad) or xlat mov sbb adc int3 rex.WRX hlt cmp push divb in ss test xchg push (bad) adc scas lods sbb fmuls gs or enterq adc push stos rex.WB fnsave jb rcl rex.WRXB fcomip jbe mov xor pushfq push ds cmpsb test xchg sti sbb cmp adc rex.WRB in rex.WR mov mov or out mov xchg rex.WXB movabs adc rex.RB adc add sub add mov mov push (bad) enterq rex.WRB sub adc out sub (bad) adc xchg jp (bad) mov lea cmp hlt cmp cmp xchg rex.WRXB (bad) sarl rex.R sub (bad) (bad) negb rex.RB rex.RX adc adc cmp sub mov mov fwait addl and pop fbstp cltd cmp je push lock (bad) pop fisubl imul repz rex.WRX or sbb adc in (bad) jnp sbb test int cmp add hlt es out (bad) (bad) fmul (bad) rcll rex.WRB add mov in and rex.WRXB rex.W lock jno push mov xchg clc sbb or adc repnz out andb jns mov callq leaveq push sarl (bad) mov addb rcll rex.RX push pop out callq (bad) cmp fdivl or xchg test xor outsb lock (bad) and and repz mov enterq jne and jno repnz xor hlt mov mov (bad) mov rolb (bad) xor add pop rex.W add add push xor (bad) int3 movabs lret insb xchg vmovshdup pop sbb xchg nop (bad) (bad) int cld orb mov lock and rorl or int jne shrb (bad) mov (bad) add pushq xor sti mov mov je cmp fnstsw cmp out sbb in rex.WRX adc mov sub mov adc shl sarb cmpsb xchg movabs stc movabs leaveq and ss jp sbb adc enterq pop scas adc test rex.W movabs adc (bad) cld mov or or sarb (bad) fstps push (bad) movsl xchg stos rex.WRXB mov push mov movabs (bad) add (bad) and xor fidivrl or rclb pushfq cwtl (bad) mov jno lods xor test xchg push or movabs pop push insl (bad) mov rex.WR (bad) mov jns cwtl lods in adc cltd rex.XB rex.WRXB retq pop (bad) lock add sti and adc callq add adc retq nop adc mov sbb add sub adc sbb sahf adc (bad) rex.WXB lret stos stos movsb stc js (bad) lahf pushfq sbb adc rex.RB jo adc add iret xchg pop and sub shll and xchg adc movslq je add ds movsb pushq lods rex.X fwait in insb out adc (bad) sub rex.WRB sub jnp (bad) (bad) adc ficompl out (bad) pop (bad) and cmc add cmp rcrb (bad) xchg mov (bad) or (bad) (bad) mov xchg sub push movabs add xor (bad) pop xchg jae cltd cs int3 adc rex.WRXB (bad) adc xor cmp adc ds movabs cmp sub rex.RXB stc cld adc cmpsb iret in adc xor js repnz lods imul or or (bad) mov add jne (bad) repnz scas adc or sarb mov mov mov (bad) mov cmp adc nop mov pop xor and adc ss movabs (bad) addl xchg ss ficom sub clc adc sub jne fdivrs out (bad) xchg fistpl xchg adc jmpq in (bad) xor pop cmp cmp xor adc rex.B stos rclb and cmp mov adc (bad) (bad) mov and test jno xlat mov adc xchg fcoml jbe mov xor or or notb push mov mov xor movsb out imul jl sbb fcomps xor sbb enterq xchg mov roll xchg adc jo push adcb in pop leaveq (bad) in pushq rex.WX out outsb out jae pop push (bad) nop (bad) (bad) (bad) push jne unpckhps and leaveq je jnp adc push pop repnz adc (bad) sbb callq in adc fsubl rex.RB lea add clc mov pushfq push (bad) xchg adc stos rcll sub (bad) add mov lods adc rex.B scas push sbb fsubs fwait mov movsb xchg sub adcl sbb stos sbb fist sbbb adc add cmp or (bad) mov sub sti (bad) jle (bad) sub jbe sbb loop mov lcall rex.RXB or testb rex.WXB in push movabs mov repnz sahf (bad) sbb iret out cmpb add imul rex.WR and and adc mov sub ffree sbb fsubs (bad) retq and adc xor xor es rex.RXB rex.R push fwait lock xor insb (bad) (bad) or cltd movabs shlb cmpsb test or js cmp adc push (bad) fnop jge adc test outsb ror es or adc jbe clc add cmc (bad) loop enterw adc (bad) fstl push rcll mov cmp mov sub fdivrs test (bad) in in xchg mov fcoml and pop fstpl (bad) nopl push xchg ja fisubrl lods outsl rex.XB (bad) sbb loop (bad) lock push rex.XB mov push in xchg (bad) adc pop loope adc mov or outsl out xor (bad) and cld vmovntdq add add xchg push add sbbl adc addr32 outsl mov mov setnp adc cwtl push xlat notb jg mov adc (bad) mov rex.RXB lret jmpq xor (bad) lock mov js scas rex.WR cmp sbb xor stc cmp fstl jb jo (bad) xchg retq js sahf and rcl mov (bad) (bad) mov and cld adc adc xchg (bad) lock callq cmp pushq xchg imul (bad) xor xor pop sub mov fwait rex (bad) retq or in mov mov mov retq test sub cmc idiv jae cwtl mov bndldx push pop add fwait pop (bad) fsub sub movabs (bad) insb rex.WRX repnz cmp jbe (bad) mov mov sub (bad) icebp adc mov (bad) mov rex.RXB (bad) add movsl ror adc fcmovne adc ldmxcsr negb (bad) xchg and (bad) (bad) add iret adc xor xchg adc or mov or mov mov rex.W clc xor data16 and andl fistpll (bad) adc rex.RXB (bad) movabs pushq and cmpsb or and popq mov (bad) jnp mov movabs and mov xor xor rex.R fmull (bad) fcomip out in jb (bad) js movslq jno test adc movabs (bad) sbb push xchg lret xchg mov es repnz xchg jae mov (bad) push push mov sti fs outsb addb (bad) retq cmp roll (bad) xchg retq scas rex.RXB rorb mov mov fsubr jp (bad) sub rex.WRB push in outsb rex adc cmpsl push (bad) fiaddl scas or push cmp or int3 push shll mov and add (bad) lahf sub (bad) js cmpsl sub repnz add sar adc push adc vcmpsd out xlat in or shr data16 sbb mov sub (bad) in rex.WXB (bad) stos out mov (bad) fwait ss imul imul (bad) and or sti add (bad) mov movhps mov (bad) jmpq sub adc imul test fucomip xor xchg sub rex.RB cwtl adc (bad) lret (bad) and rcrl test (bad) rolb jbe (bad) mov test sub bnd rex.WB add add stos (bad) pushq cmpsl pop (bad) fwait or int3 jge xchg loop pop or (bad) sub idivb add jmpq mov and hlt (bad) sub add push movabs (bad) jae adc cld movabs pushq jg mov imul mov (bad) insb and mov insb add cmp sbb test lea xchg rex.R fbld or rex.WRB and rex.WR push out (bad) add rex.W enterq and (bad) callq sar push xchg in lret orl enterq fs lcall roll insb xor pop (bad) cmp (bad) adc sub ror xorb (bad) retq sub jg in jmpq jmpq test jnp fistpll sbb fiadd cli jno out fdivrl loop push add (bad) or pop mull lret jrcxz jne rex.WRB pop adc push mov repz movabs push mov callq or adc (bad) movabs adc cltd (bad) rex.WRXB sub rex.WR (bad) sbb (bad) out adc xchg adc negl cmp (bad) cmp test rex.W iret clc rex.XB rex.WRB lea fnstcw sub cmpsb and test push retq adc loop sub pop mov (bad) in and (bad) jg xchg and rex.X jmpq fdivs (bad) xchg pushq sbb movabs ss jrcxz (bad) int3 mov xor (bad) mov popfq adc js sub not cmc jl movsb and mov insl (bad) xadd (bad) mov jge std mov sbb repnz (bad) (bad) push add js jb cmp xchg lahf movb (bad) (bad) (bad) rex.WXB andb xor out cmp xor adc setl jne int3 ja (bad) or and cmpsb jno out ror rex.B (bad) sub sub andb movsl mov xchg movabs and rex.B add sbb jmp (bad) mov mov nop (bad) jne pushq (bad) in out stc push in xor adc and sti (bad) sbb iret adc loop callq rex.WX mov sub in adc xchg negb jns rex.WRB or in or xor (bad) sbb xor test xor jns enterq add movsl test xor popfq fs jae jbe faddl mov (bad) loopne or insb rex.WRXB test fldl outsl push jne lret lea (bad) pushq push loop adc pop fisub cli sbb rex.WRB cs nop adc rex.RXB xchg push push pop adc cwtl std (bad) sub or sbb jnp push rex.WRB or movabs callq push outsb cwtl sar cmp movb stos add jno js adc (bad) (bad) negb out push data16 (bad) enterq mov movabs lret fmul or cltd mov rorb loopne adc jge lock adc ja loopne cwtl add lea insb sbb xchg pop xchg mov je in (bad) mov and xlat in or mov (bad) in or sub movsl lret dec adc out cmp cmpsl cmp and test fidivr js lea test sbb add (bad) cmp ss sbb loope (bad) (bad) in neg lahf adc adc jb cmp jbe pop cmpsb add xchg lret mov rex.WX mov ja xor sar outsl and xchg callq (bad) popfq rex int3 fistp int rex.WRXB jno rex.WX jno cmpsl lods (bad) jle cmp icebp jns (bad) test js insl mov (bad) sub retq test add lods xor push sti fiadd out retq in cmp push cmp push mov (bad) js mov rex.WRB mov (bad) callq cmc rex.X shl jae jge test or jmp cmpsb or idivb mov outsb mov ja fnstcw push and jge subl rex.WB adc fwait (bad) cmpsb sub js mov enterq xchg ja mov rex.X roll repz (bad) and callq mov js stc add mov cmp rex.WRB stos xchg popfq (bad) mov adc (bad) (bad) adc test jmp adc rcll mov mov iret xchg scas pushfq (bad) adc rex.W jge test lods and cmp mov (bad) stos sub adc adc ficompl scas (bad) pop rex.X fs (bad) (bad) test push (bad) movabs (bad) and sarb adc mov rex.RX (bad) jno adc rex.X and mov rex.WX rcl adc sahf pop xor sbb stc cltd cwtl loope mov xchg adc loopne (bad) movd clc jns rex.RXB rex.WRX (bad) (bad) (bad) cwtl cli adcl in pop cwtl js mov callq mov cmp rex.RB clc sahf xchg fistpl sbb jg jne push mov retq stos xchg je and (bad) mov cmp (bad) rex.X scas rex.WRX add add rex.RX stc mov push mov outsb repnz stos or test stos adc test add adc stos rex.RXB (bad) cmp fisub subl adc jnp in sbb adc xchg mov lret fdivl (bad) icebp and adc cmp retq xlat fstl vpor fwait rex.WRB loope callq (bad) adc (bad) loopne retq jb adc unpckhps push push (bad) (bad) in scas cmp sub (bad) jns (bad) pop movslq lret push push stc xor imul (bad) (bad) cmp jae jno sbb (bad) pop cmp push (bad) adc in jmp adc mov or rex lock (bad) xchg or out loopne je lods fildll (bad) fisttp rex.XB push rex.RX rex.RX adc rex.RB and (bad) pop cmp rex.W test xlat rex.WRXB rex.XB xor (bad) sbb mov rcl rex.XB lods neg in retq nop jo mov out test callq xchg fs pushq adc add (bad) (bad) fwait jne ja cmpsb callq adc lock xchg int3 adc pop movabs adc rex.RB or rex.WRXB (bad) sete movabs (bad) (bad) imul adc lock imul enterq clc (bad) jmpq mov addb data16 cli or movabs (bad) cli jg mov sub or (bad) or adc pcmpgtw fs xchg push movsb movabs loop in jp lock sub imul (bad) jne pushfq jnp (bad) adc adc adc je incl fldcw movabs mov push adc (bad) adc js (bad) adc out mov (bad) mov loope leaveq jbe adc mov imul lahf jno (bad) cli add (bad) loope cmpsl mov shr gs imul rex.RX xor fwait jno and sub xchg (bad) sub int3 repz and sbb out mov mov pop and pop sub movabs or int3 push cmp pop (bad) rex.RX rex.WRB mov push mov callq mov sbb xlat xchg (bad) scas mov cli and jno hlt push fidiv xchg fstpl fldl jmpq xor adc icebp xchg decb cmp negb adc ja in (bad) (bad) outsl movslq mov cs int3 xor (bad) in mov (bad) rex.WRX sbb xor nop int lods jo lock movslq or (bad) sub fdiv xchg rclq insb (bad) data16 (bad) xor xchg push in data16 insl test lahf jge (bad) cmp stc incb lods and add cld gs imul adc stos movabs sahf lods adc sbb (bad) rclb sub push jae jns (bad) pushq sbb xchg adc xor jl xchg or rex.RX adc rex.WX (bad) jne adc ja jl adc clc std sbb lock rex.WR xchg popfq adcl rex.RX test xor pop cmp addr32 xlat pop sbb lods mov sbbb movabs rex.XB or outsb adc mov push pop ss imul jmp mov out mov cmp adc and nop mov (bad) fisubrl (bad) mov cmc callq lahf test adc (bad) and icebp (bad) mov scas mov push rex mov mov add xor push je rex.XB rex.WRX adc xor sbb idiv fdivp rex.WX rex.RX orb xorl rex.RXB fs adc lea sbb out rcrl sbb data16 xchg adc mov mov loope fcmovnb mov mov xchg (bad) pop rcrb fstpl sub rex.RXB sub rex out and add and xchg cli rex.WRB adc out (bad) enterq rex.WR (bad) ficom loopne rex.X enterq insb (bad) push std out adc rex.WR jae addb (bad) mov dec add sub mov (bad) adc ds and test cmp xor lock insl sub sub adc stos jne mov pushq fcompl adcl lea mov ss je (bad) adc es mov sahf xchg movabs sub lods jne pushq iret test fcoms in ja pop out movabs rcll adc sub jno fdivrs cli movabs sbb rex.XB add or iret in pop icebp cmp hlt outsb retq orb (bad) pop cwtl cmpsb sub (bad) push pop mov xor (bad) movabs je mov xor test scas mov jrcxz pop rorl (bad) xor test lret (bad) jns (bad) push fwait adc xchg cmp add sbb rex.WB scas xchg adc mov lods mov and jge in mov rex.WRX (bad) adc or jb test adc xchg (bad) ss mov adc pop push (bad) add mov int add sub add rex.WRXB rex.WRX stos mov (bad) adc pushfq imul push movsl mov js frstor mov jge (bad) xchg fdivr xchg mov clc pop mov xchg ficompl (bad) and mov mov jo (bad) out cmp pop fist sbb mov mov jrcxz rex.RX add insl mov mov mov (bad) adc add lahf add jno fs (bad) (bad) mov jl cld mov rex.R xchg fdivrs rclb notq fwait pop ja (bad) pop xor mov jnp push sbb cli (bad) imul jno pop mov test cs mov fist outsl or pop jbe xchg or fwait mov xchg xor push jns lods mov je leaveq fistpll cmc (bad) mov pop in (bad) (bad) cmpsb and lock sbb xlat jae (bad) iret movabs (bad) mov sub js mov stc (bad) mov cmpsb (bad) test pushfq mov int3 add mov rclb mov xchg testl shlb push retq fstpt and adc scas sbb and mov adc rex.XB mov (bad) rex.WRB mov mov fdivs adc fidiv add add adc jmpq clc sarb lods (bad) push sbb mov or (bad) adc (bad) jae movabs mov test mov lret lock push imul mov push (bad) push sbb data16 adc push ds xorb test out fsubrs (bad) or jns (bad) jb rex.R adc (bad) pop cli jl push enterq adc movsl in adc divb (bad) xchg mov sub cld fucomi jmp jbe (bad) xchg je lcall cmp (bad) push (bad) adc pushq cmp jl mov ss ds popfq (bad) adc xchg rex.XB xchg xor (bad) shrl lret xor sub movabs adc rep rex.X sub push int3 mov jg (bad) jno fsts movslq addl sub insl (bad) push adc mov xchg (bad) push jmpq add xchg not pop (bad) imul insb rex.RX (bad) jp add fcoms jl or cmc xor add (bad) add outsb (bad) test (bad) jb jae xor (bad) jp ror xor icebp pop cmp fldl or hlt and adc or imul sbb jrcxz or jno test mov mov adc and insb xlat lea jne push xor pop push and xorb in (bad) or cmp outsl divb adc (bad) push imul fcomps cld ss frstor or mov adc fsubs lods or jno pushq pop lods mov (bad) add push movabs cmp xchg test pushq and and rex.RX fldcw cmp addr32 xchg sahf jo retq mov (bad) (bad) test xchg je int adc pop xor pop jb add pushq repnz or insb pop mov and xor or jns lock (bad) rclb sbb lahf adc je mov or test (bad) adc cmpsb cmp mov mov scas (bad) jb rex.WRXB test outsb (bad) cmc adc xchg out pushfq mov sbb lret (bad) xchg (bad) add cmpsl std (bad) movslq rol (bad) adc in orl (bad) xor adc pushq pop sbb and test adcl rex.WB pop (bad) std adc repnz rex.RB rex.RXB (bad) icebp fistl cmp mov test leaveq push adcl sti rex.WRX nop fwait addl xchg (bad) xchg cs adc xchg jbe fsubrp cmpsl (bad) mov cmpsl rclb fiaddl or insb mov out sbb add (bad) int out push out mov pop pop (bad) movabs movabs (bad) movabs jno test (bad) sahf ds adc adc repnz es (bad) fcomip sarb shr repnz (bad) mov or adc adcl (bad) fbld (bad) loope sub sbb retw rex.WB push or out loopne mov in xchg rex.WXB xlat (bad) add jg lea enterq rex.X add (bad) out sbb enterq adc adc cmovbe rex.WR jle jp repz jmpq xchg pop cmp xchg lock sbb stos and out stos stos add test loop int rex.RB and xor fimul and test fcomip mov and movabs addr32 (bad) insl (bad) in retq scas xor fldl fs xchg lsl fcmovnu int3 adc jno scas sub xor mov div lahf rex.W imul push (bad) shr movabs loop mov sbb and mov push add fdiv (bad) test or mov mov sbb cmp (bad) repnz xchg (bad) jmp loope retq or pushq jmpq add push mov and test push jb scas cmp mov push sub or and mov jo ds cwtl add insb jb js icebp gs mov sti rex.WX jb xor enterq (bad) (bad) xchg sub xchg add and addr32 jno fucom mov jl ficomp and je sti sub (bad) (bad) add cld test lock (bad) mov or (bad) (bad) sti and fnstcw jge or ja (bad) stc popfq add cli cmpsb fcomps pop xchg pushfq fidivrl cmp (bad) mov movabs test repz push sub add mov sub stos (bad) pcmpeqb lods rex.XB lock cmp xchg (bad) imul add (bad) sbb and lret add cs mov sub fnstenv jle lods or es int3 jo pushq sbb adc xor mov movb (bad) fucomip je ss mov mov jne pushq leaveq push lea mov and push sbb ficoml stc fildl test sub enterq push fdivrl (bad) (bad) jb pushq rex in rex.WB js int3 jne fsts (bad) (bad) je (bad) roll jne or (bad) repz pop mov xchg and scas and in int sti mov mov rex.X fwait and rex.WB adc pop adc pop (bad) rex.RX std test sub andl jns ds (bad) test mov in lock rex.WR rex.WRXB pop rex.XB je cmp fs popfq (bad) fsub sub mov adc pushq rex.RX callq rex.XB jb push fsts xchg negb stos rex.R mov fcomps adc jo jae mov push cmp fwait data16 cltd (bad) jne popfq sub retq rex.WR scas rex.RX rcr jne adc cmp movabs enterq incl jmp xor xor movabs adc lock je (bad) or (bad) mov clc pop mov adc callq add (bad) cmp mov cmp (bad) and js pushfq sub fsubrl pushq xor (bad) cld sub (bad) sbb rex.W cld rex.WRB jg adc mov mov lret pop ja jb jmp adc (bad) (bad) xchg cld xchg (bad) int3 insl out lods lea sti (bad) incl pop sbb insl adc lods sbb std pop xchg xchg sub cmp and jl in add rex.RXB retq mov mov and pushq movsb pop jp jmp icebp mov rolb pop pushq push hlt clc adc sbb icebp adc jmp and mov sahf adc mov add (bad) callq movslq push movsl lea xchg testl add enterq adc (bad) cld add fcom adc (bad) (bad) popfq and xchg jnp xchg (bad) js leaveq adc movntps rex.RB (bad) pop in outsb or (bad) push adc cmp mov or fcoml mov enterq adc xor fistp (bad) repz sbb cmp je pop loopne rex.WXB fs or push push (bad) (bad) cltd jbe cmp rex.XB jmp and cwtl mov cld add add scas (bad) (bad) pop sete mov add add sbb rex.WRB adc rex.XB out test in jno int3 mov (bad) xchg rex.RB or test xchg add push (bad) (bad) xor std (bad) or jne xor jno js (bad) and imul (bad) sbb insb and sbb and scas hlt (bad) cmc and test (bad) jge or mull adc in popfq decb xor xor (bad) leaveq movabs (bad) rex.RB sbb popfq fcomps or mov sub and jne rclb (bad) (bad) movsb (bad) mov and and (bad) sbb and in (bad) jrcxz out adc xchg shrb repz movabs repnz adc sbb jmp rex.WX or test rclb mov jl movabs xor (bad) sti mov divps mov mov jo je xlat xacquire xchg in adc add sub clc adc adc (bad) (bad) je (bad) pushfq (bad) (bad) cltd clc adc and test stc cmpsl add mov xchg or xchg mov fs shrl cmp pop clc std pushfq in (bad) (bad) rex.WRB fwait mov repz pop jl adc (bad) (bad) mov xor js xchg lock and in jl add rex.WR fwait loope and cld xchg pop sbb mov mov movsb sub popfq lock ss data16 and movsb out mov pop adc fidivrl xchg out in (bad) rex.WX lods sub orl sbb dec jno leaveq or or push (bad) movsb sub adc (bad) or pop or push lock xchg sub mov push adc clc fldl insl cmc out rex.WRXB fs movslq or notb mov and xchg and in pushq repz cmpsl or xor and adc pop mov (bad) clc jmpq imul callq xchg xchg andb rex.RXB (bad) adc (bad) rclb ss push mov out xchg ds jnp mov push lea pop and hlt repnz (bad) (bad) out lods (bad) xchg mov stos shr jg mov notb jo rcrl xor scas push lahf mov mov jno xchg movabs pop (bad) push cmp (bad) jo or cmp xorl xchg fstpl leaveq sub js cmp movabs adc pushq xchg mov (bad) mov jnp adc add push sub shll data16 jnp rcll adc mov nop clc jmp (bad) pop enterq vmovups sbb (bad) jmp xlat clc mov test (bad) push fwait leaveq pop add mov sbb (bad) fildll movsl mov add add rex.WRXB ss rex.WRX fwait (bad) (bad) push stos scas rolb sbb int3 sbb jl add xchg mov jl out std mov sbb incl stos adc cli jmpq sub xor callq popfq (bad) (bad) fcomps outsl rex.WRX fs (bad) mov jmp (bad) push mov adc (bad) cmp mov movsb fistp in (bad) xor mov cld jno sub adc jrcxz mov callq add adc adcl jge loopne add xchg movabs (bad) mov sub xchg cmc xor (bad) (bad) and sub xchg movsb xlat and jne (bad) js cld out (bad) callq cmp xchg jg cwtl jne mov rex (bad) rex.XB (bad) (bad) and int3 rex.XB sbb stos enterq testl adc rex.R push cld (bad) or clc or mov rex.X jnp or jnp std cmp jl rex.R es pushq (bad) push (bad) mov nop insb (bad) retq rex.RX rex.RXB iret mov clc add or push test ss adc imul mov mov movabs lock mov fadd xlat mov test sbb or add jbe jle sub rcr (bad) mov cmp lea mov adc (bad) jae std cmpsl fiadd (bad) mov adc xchg sub adc rex enterq push cmp sub data16 movsb cmp xorb lods push (bad) (bad) xlat mov xor mov cmp ffreep rex.RXB pcmpgtb mov xlat stos (bad) add pop iret mov test je popfq add adc callq mov push xchg adc and out pop push lahf fdiv cmp lods fcmovbe mov sbbb movabs push iret add add hlt sahf (bad) sub out pushq cli (bad) jmp adc (bad) adcl movsb (bad) adc xchg notl pushq mov add or ror int3 jnp (bad) imul xor int3 stc jle fdivs pushq pop mov xor adc and or fiaddl cmpl (bad) adc rex.WB sub adc pushq rex.WR lock (bad) sub enterq imul sbb (bad) or movabs jmp rex.W movsb jb fistl fstl outsb imull sbb sbb sbb rex.WX (bad) mov rex.R rex.XB addb sbb movabs jl xchg je xor xor adc cmp imul adc leaveq (bad) or (bad) cs or rclb adc andl ds sbb lahf fsubl retq xlat lahf test mov in (bad) xchg jns int3 push adc sbb in pop (bad) cmpsl (bad) or (bad) push add test cltd outsl mov sahf out push (bad) jo xchg or adc andb (bad) push insl dec clc jge push movsb sub adc cld fsubl (bad) out (bad) adc cmc (bad) movabs mov pop xchg adc cltd mov xchg adc out sarl callq fsubrs adc sub sub cli mov stos (bad) (bad) callq notb (bad) push and jmp fbld fs (bad) xchg fldcw movabs stos (bad) cmc movsl repnz lock int3 (bad) in ffree (bad) xor mov (bad) jns mov or xor adc add pushfq and xchg sbbb addl fild (bad) add cmp jle push rcl fcomps and movabs fidivl (bad) (bad) out add movabs rex.WRB (bad) ja mov fwait sbb sub popfq add (bad) retq (bad) push fcomp adc (bad) (bad) shrb (bad) mov (bad) xchg data16 retq sub rex.WRXB repnz sbb and pop ja bswap rex.WRXB mov rex.WR mov or adc fldl mov mov rex.WR and or retq push mov sbb xor stos imul mulb movabs pushq outsb (bad) xchg lock fldl fst (bad) push jle test jmp lea (bad) jmp xor jge in (bad) test cs test out sbb mov and rolb jbe mov leaveq mov repnz rex.B xchg rex.WRB lea and std repnz sub (bad) callq divb push (bad) push (bad) popq mov or or insb outsb fild jbe callq movslq (bad) push (bad) out ljmp rex.X movabs add int3 imul je xor repz loopne xor in popfq imul or callq repz sub (bad) xchg mov (bad) jmpq xchg push stc mov xchg (bad) rcr mov xchg sub sub pushq (bad) mov mov in (bad) cmpsb fwait jbe add movabs fsubrl (bad) jrcxz rcrl rex.WR jmp out jb int3 (bad) xchg stos jne cwtl rex.R jno rex.WRB rex.X sub retq sahf push push mov mov in cmp mov fsubp mov fsts fs push rex.WRX fsubs (bad) jne rex.WRX repz iretq (bad) int xor outsb mov jns lock sbb retq es pushq shrb addr32 lret loope sbb rex.WRB rcl jno xor js rex.B shlb (bad) xor repnz movabs sub adcl and cmp cmp and rex.WRB flds jmp (bad) or and or (bad) (bad) test (bad) scas push xchg mov insb iret rex.RX addr32 movabs cld clc (bad) repnz (bad) andl sbb (bad) out mov in lret (bad) gs cltd mov or subl leaveq loope jno sub and or bnd mov movslq xor (bad) callq adc xchg jnp jns mov adc out cltd adc jmpq test push cmc rex.W mov rolb rex.RXB adc rex.WXB or fcmovbe adc (bad) sbb add pop adc xor fistpll retq scas hlt lock cli (bad) cmp ffreep (bad) (bad) adc cs clc add cli sub int xchg sub and (bad) notl int in (bad) int3 or pop adc movabs jmpq popfq stc mov jo rclb mov add (bad) addr32 sub mov addl add fdivl (bad) test or or (bad) and fsubl add xchg imul mov out cs (bad) rex.RB mov int3 stos ds and mov (bad) sub jle shll leaveq mov jp or sbb imul (bad) outsb push (bad) divl movsb rex.WXB rex.X (bad) loop xor jne lods movabs rorl or loopne jno mov (bad) movsl jmp fcoml in test stos out xchg rex.RX sbb adc std std and rex.WRXB rex.WXB (bad) movabs test push sbb xor (bad) movslq loopne hlt (bad) add and (bad) rex.X mov pop fisttpll add bnd rex.WRB mov lock and sbb outsl lret adc retq fimull add scas push mov pop nop repz sbb mov jno repz add xchg rex.WB adc movsb push cltd rex.X or (bad) enterq repz or orl add movsl (bad) imul mov clc sbb (bad) mov adc lods rex.WRXB cwtl adc pushfq cmp (bad) adc (bad) in jbe push incb clc sbb test insb pop or (bad) rex.WXB jg sbb addr32 nop push cmp mov adc jb adc xchg movabs stos mov rex.WRB (bad) mov (bad) jmpq xor and mov fcmovnbe xor test mov mov icebp divb adc jg mov pushq in callq int adc xlat xor adc lea test sbb xchg shrl xchg int xor retq xchg jge push (bad) pop or pop rorl fisubrl rex.RX mov cmp in lock int or (bad) vcvtps2pd xor pop mov rex.RB fs lock rex.R push movsb jp scas (bad) insb rex or add cmp retq xor negb jl sub xchg jns mov xor (bad) out shl cmp sbb sbb imul lods adc rex.RB adc mov (bad) pushq xchg cwtl xor movabs out divl stc jg xor pop cmc mov xchg gs xchg int rex.WRX push cmp repz or in or hlt xchg mov xor cmp jmp je (bad) push fcmovb leaveq sbb (bad) repnz gs retq push lock rex.WRB xchg scas lea xchg retq xor push rex.WRX rex.WXB test (bad) cs adc adc (bad) pop fcoml in sbb fstpl (bad) sbb mov jo pushq int3 icebp jae (bad) adc jge xor (bad) (bad) jns mov cmp mov cmp (bad) and xor pop adc add out mov (bad) mov (bad) fadd adc (bad) pop cltd sti add xchg cli rex.W rex.XB adc in jnp adc out rex.WR push test adc (bad) sbb and adcb and fs in pop adc rex.WRXB lret movabs push rex.WRB rex.X out mov jb cwtl scas decl adc in (bad) mov sbb rex.WRXB in xchg jbe xlat stc adc cmp stc adc fcomp movabs pop cs adc retq cwtl sahf scas add fisubrl rcr rex.B push add add mov mov mov insb xchg mov xchg rex.R mov int3 jnp cmp (bad) and xor imul jle (bad) sbb shrb (bad) pushfq mov or imul rex.WRXB cmc int3 cmc fildl rcrl adc cmp adc roll (bad) fidivrl cs adc xchg mov adc cmp jge xchg mov cld ds icebp mov adc sti (bad) lea (bad) add insl adc (bad) rex.RB (bad) push mov loope push (bad) cmp lods (bad) adc pop fwait pop cld adc adc sbb rex.WR mov adc rcrl subb (bad) mov lods hlt insl push mov xor (bad) mov rex.B mov sub mov pop sbb in scas (bad) xor add enterq push nop xchg (bad) mov add test callq (bad) push (bad) and jno mov (bad) pushq jne adc fisubl roll cli (bad) cs mov scas fmul and rcrb (bad) xchg (bad) sub cmpsl ds and sbb test add xchg pop popfq mov or jmpq rex.WRXB (bad) and (bad) adc mov fcmovne (bad) test push js adc push in adc (bad) mov lret rex.WXB (bad) cs notl mov sbb retq int3 outsb (bad) fbstp sahf ja idivl cmp retq subb stc sbb fnstcw (bad) imul (bad) cmovp (bad) in (bad) adc adc pop (bad) adc rex cld adc rex.XB in int3 (bad) xor add mov mov cmpsb outsb mov pop sbb lret rex.WRX pop (bad) test xor (bad) mov cmp or (bad) movabs insb push rex.X xor ror outsb cli sub (bad) lock test gs or rex.B repnz xor xchg test (bad) sbb (bad) fwait sahf enterq rex.WRB add sub test and and lock adc cmp callq movabs rex.RX movabs sbb add lods lods or fiadd callq rclb rex.WRB adc scas and stos popfq mov rex.WRX rcl pushq xchg (bad) loopne sub xchg (bad) sahf fwait adc popfq add (bad) and pushq jno clc add and jne pushq (bad) out scas sub ss pop enterq rex.RB or push jb cmp sub jmpq jmp or mov mov retq sub rex.WRX or (bad) xor adc pop repnz es (bad) (bad) rex.XB rex.WRXB (bad) nop (bad) adc out xchg out js fs (bad) sbb mov and pop (bad) and adc mov (bad) (bad) cmc out or pop rex.WRX adc (bad) repnz cltd and movabs sub stc insl or sbb int3 mov jl jbe (bad) xchg xchg sar sbb test pop (bad) mov push xchg pushq (bad) shlb xchg pop (bad) add (bad) test outsb add xlat push stos or mov rex.WB (bad) (bad) pushq (bad) imul rex.WB mov andb sub clc jrcxz sub or not mov fwait cvtps2pi (bad) sbb insl or add push (bad) mov js jl (bad) xabort (bad) lock adc (bad) stos cwtl in adc xchg repnz callq (bad) nop js (bad) mov enterq adc stos mov movsb movslq sbb cmp rex.WXB mov or rex.X fdiv nop sarb xchg mov adc jmp (bad) pop push pushq (bad) js (bad) hlt jns cmp int scas emms xchg mov pushfq in out jnp clc addl push cmp fsubl (bad) in sub (bad) (bad) ffree callq adc cld movabs sub cmpsl and xor jno or lock add adc mov hlt adc rex.WRXB (bad) jb mov adc pop rex.WXB rex.WX movabs in je push lret sbb push rex.WXB mov pop movsl in movabs lea adc cmp jge outsb add (bad) xlat (bad) ss adc xor notl push rcll mov movsb push adc int xchg mov jnp pop (bad) iret jrcxz add fsubrl and jns sbb mov sbb in repnz movabs adc mov (bad) hlt cmp retq jne mov add xchg fcomps push pushq adcb adc pop pushq callq (bad) xor push shl mov or sub lret xchg loopne (bad) (bad) sbb repnz (bad) mov push sbb out add pop repz xchg repz jle xor repnz mov adc (bad) xor lods icebp xchg and rex.X jmp xor (bad) lret jb cld in cltd pop lock add (bad) ss pushq add mov (bad) xor cmp sbb (bad) xor mov stc movabs adc orb adc ja cmp cmp cli lods test movslq fsubrs (bad) notl callq adc scas add fsubrl jp adc (bad) sbb cs movabs (bad) pop fidiv adc mov pop sub adc fcmovnu and sbb cmp (bad) adc shr outsb rex.WRXB lods adc (bad) pushfq gs adc movsl push loopne adc xchg (bad) xlat leaveq adc xor pushfq and movsb rex.RXB hlt sti mov or (bad) adc cmp mov adc (bad) rex.RXB insb add or mov in ror adc and movabs cld (bad) pop adc sub push (bad) lock std pushfq xor notl movsb movsl (bad) adc adc add jp lea fwait sbb out and adc testl retq xchg hlt xor ja mov lock rex.RXB xchg and out movabs mov add (bad) or test shlb lods (bad) rex.RB mov cmc lret mov sub (bad) mov lods test pop mov in pushq push push push jns fcom stc rex.RXB mov push jno (bad) (bad) rex.WR add scas es push sub mul xor push movabs fsub (bad) rcrl rorb (bad) xor jp sbb pop in div lcall rex.RB (bad) cs lret (bad) pop (bad) cmp pop push cli callq cli (bad) mov jb addr32 callq (bad) xchg cwtl (bad) rex.WX pop (bad) popfq je leaveq (bad) mov (bad) pushfq jae fsubl mov lahf adc lock cmp (bad) cld sub xor cmpsl xchg adc imul in and xchg ja ss adc popfq sti jb add scas xor loop sbb mov shr add sbb rex.B in push out mov cmp scas (bad) ficom (bad) scas lret mov (bad) cs sbb and xor jmpq or nop cmc (bad) xchg xchg stc faddl lods cmp jp and outsb push cmpsl rex.WRB (bad) cmp (bad) push cmp (bad) in pop xchg cmp rex.WB lret jno sahf sub imul fs scas imul mov sub xchg pop add fs out movsb mov scas ror testb loop lock mov cwtl adc rex rex.WB rex.RB mov iret xor lret jbe mov (bad) fild or adc jno add or push jp rex.WRB in add (bad) clc js movabs test mov xor shrb repz (bad) push sub mov push lahf fs sbb js and rcrb (bad) rex.WRB (bad) mov lock movabs push xorl mov mov sbb sarb rol mov mov add (bad) and (bad) jo xor je insb push in (bad) pop enterq mov popfq push xchg mov sbb rex.WR jno and fwait lret in (bad) (bad) test rorb lods neg mov rex.W rex.WRX ds (bad) scas enterq outsb out pop xlat rex.W rex.WRXB rex.X lock rex.RX addl mov callq pushq sub xor lahf add rex.RX (bad) rol (bad) xorl fstpl cmp popfq cmp xchg ror clc sbb lock out popfq cmp movabs rol cmp lods fwait (bad) and repnz mov rex movabs cs mov jl test rex.RB or rex.WXB adc retq shrb add rex.WRXB xchg fs out mov (bad) fmul (bad) sbb in and loope (bad) imul xor callq sbb mov jnp (bad) adc xchg hlt push sti adc or enterq mov or es mov mov push xchg and es xor (bad) int3 in (bad) jrcxz retq retq xchg jp sub test lret and out lea adc fsubl xchg sbb movslq int ja pop cmp jbe sahf jl jmpq movabs test nop rcrl add rex.RX pushq rcll fimul mov sub rcrl cld adc out sub rolb hlt (bad) or lock cld (bad) adc cmpsl lock rex.RXB lret leaveq mov jnp cmp (bad) (bad) push pop ja ja (bad) fsub pop mov rex.RB mov mov sbb std jns or jmp decl out sbb gs repz (bad) xchg xchg rex.WRXB lods cmp (bad) movabs iret adc or adc shrb lods jne adc (bad) (bad) adc xchg xor xchg mov adc cmp xchg (bad) clc (bad) add push idivl and in es out and sbb test or rex.WRXB movabs es or xchg mov (bad) clc (bad) rex.WB repnz push cmp movslq jge (bad) rex.W sbb or rex.WX rex.WXB xchg movabs adc sbb jo adc out mov outsl (bad) fsubs rex.WB sbb rex.W repz sbb insb pop xchg fwait sti loope xchg hlt ds jbe xchg (bad) mov mov sar xchg rclb mov (bad) adc pop mov out xchg (bad) rex.WRX adc rex.WB push rex.WRB fcomps fdivrl (bad) xchg and subl sub adc add or xor hlt add rex.WRX adc outsl push incb xchg scas out scas jp sbb nop mov sbb xor cmp pop gs add (bad) mov popfq sbb gs out jb (bad) or clc or cmp and xchg (bad) (bad) in (bad) movsl adc cmp sub mov mov or in (bad) cmp mov mov xchg in loopne div (bad) repnz rex.WRB rex.RB adc lock and (bad) lock fmul (bad) sbb movabs rex.WRXB (bad) sub out (bad) movsb cmp lahf (bad) (bad) loop fdivs (bad) adc movabs and jrcxz ja mov rex mov cli repnz rolb pop xor push icebp divb rex.WXB out mov fmul (bad) mov rclb (bad) (bad) mov and callq (bad) rex.RB sbb push jp rex.W jno test (bad) callq sti xor cmp jrcxz lea je ja (bad) rol mov rcr mov popfq xchg scas xor je pop (bad) adc or je repnz adc retq add in cli stc cld mov mov ss rex.RXB or mov jo lahf push jne lock cmp out movsl roll adc xchg js,pn sbb pop jg test ror test push adc cmpsb icebp js jl in adc jmp or jg adc movabs or stos push or adc rex.WRX push fsubrl adc rex xchg push sub movabs pushfq fwait (bad) gs xchg mov or or jmp xchg xor (bad) adc test in outsl repz xchg mov fist adc retq sbb ss shr insl or pushq (bad) (bad) adc bnd frstor out mov (bad) jnp jl pop fsubl callq test lock adc insb (bad) lea adc (bad) mov add push sub icebp test adcb jp sbb jns (bad) fnsetpm(287 rorl mov or xor xchg (bad) out ror xchg mov out jo jno pop imul (bad) or (bad) mov pushfq sub outsb mov int push addr32 ja xchg fsts cmp xchg or xlat sti std pop mov cmp imul lods (bad) mov or std sub flds subb sbbl (bad) push (bad) add lret sub sbb lea xchg mov pop mov xchg out xlat or (bad) es bswap add or adc add push mov enterq adc popfq std adc ficoml push lret pushq adc adc xchg je sbb movsb pushq adcl mov movabs fmul imul jno stc jle (bad) in mov popfq int3 mov add je (bad) cmp movabs ja (bad) (bad) stc cwtl cmpsl test data16 mov stos (bad) scas insl xor pushq jp jmp pop loop mov lock rex.XB mov (bad) es int3 movabs fiaddl movslq jno and (bad) mov and add insl fistp xchg (bad) insl retq callq loop add (bad) neg sbb out lods jg cmp (bad) lods lea mov movsl or jg (bad) and mov mull insb xor test (bad) xchg out retq xor (bad) push sahf sub add xchg pop (bad) (bad) jno pop adc (bad) (bad) (bad) xchg xchg xchg and sbb xchg fstps shr add rex.RB lret rex.B ss mov lahf mov (bad) cmpsb xchg mov std pop push lret jb andl and xor sub push ss add callq push fnstsw mov fstl out pop mov cli cmp shl leaveq push (bad) (bad) ja out movabs fs sub cmp mov callq xlat repnz out push mov repnz or callq mov imul or rcl lods and mov (bad) mov sbb push jno sbb stos stc scas testl (bad) loopne push fs (bad) or movabs movabs mov push mov pop or pop adc mov jle adc or sbb jne (bad) mov push pop fadd push push mov mov iret rex.WR cli jrcxz (bad) sub xor add cwtl fwait adc (bad) mov (bad) xor movsl adc adc xor fstpt adc and sbb fsubs cltd pushq adc popfq adc pop (bad) jb idivl adc sbb retq mov cwtl sub add mov jmpw int3 rex.XB rex.X sbb jp loopne (bad) or fimull pop std popfq mov cmp cmc ficomp mov pushfq jb pop and outsb mov sbb enterq push test xlat and adc ja xchg jb mov sysret xorq in iret outsl push rex.WRX gs rex.WB mov popfq mov stc pop in (bad) mov xchg xor jrcxz lock sub sarl fdivrs mov test xor rex.RB rsqrtps mov add out and (bad) push cld (bad) and lahf int3 jl scas and shrb and in or fisubr push repz add sub retq push mov out push callq sbb sub and mov xchg js rex.WRXB or adc pop nop cmp lahf jrcxz xchg imul fdivrl ja xchg xchg mov adc mov jbe addb or movslq add or sti add clc or sbb and rex.RX mov (bad) or adc movabs addr32 xchg adc insl cmp cwtl adc int3 pop fwait loop rex.B cltd stos rex.WR or xchg enterq repz leaveq cmpsl ja (bad) sti out leaveq test int3 gs ss jo lods enterq orl fbld adc push jb xchg test lock and int retq rex.R mov sub (bad) adc sbb out repz (bad) adc retq adc retq test rorl jns movabs in jl pop mov icebp rcll pushq lock movsl (bad) movabs jne cmp enterq pop loopne sub rex.WRXB mov sti add fsubrl jmpq rolb scas fwait xor jb rex.X cmp test xor callq fwait std add rex.RB mov push (bad) xchg sbb mov add and xor fwait rex.WRX sbb movsb (bad) repnz adc sbb int popfq enterq lret xchg rex push mov movabs shrb pop xchg push rex.X hlt iret sbb adc incb and hlt or movl sbb adc out (bad) cmc mov retq xlat sub mov mov xor loope jne rex.RX adc (bad) mov out xchg jne adc not cld lret and in and fs mov imul movabs adc sbb xchg imul mov mov jp adc xchg sbb and test (bad) out or adc addl adc add jg (bad) cltd fs cmp ss adc xchg sbb ds (bad) or mov push sub adc fistpl adc rex.WRX add rcll (bad) mov xchg jle popfq adc sub xor (bad) xchg lock sbb lret mov xor outsb lods cmpsb enterq sub outsl mov (bad) loop pmullw (bad) sub (bad) xchg adc lret adc jne enterq and jno incb insb jne (bad) movabs cld (bad) mov in outsl jnp adc rex.WB cmp rex.W jg jmpq and rex.RXB mov (bad) cltd addl andb push mov jmp jl rex.WR int in (bad) retq add retq fistp mov in or rcll and incl adc cli cmpsb pushfq fist or xor push pop jne push mov lods notl xchg jmp xchg fsub adc cmc xchg rex.WX push mov push retq (bad) (bad) repnz (bad) adc (bad) rclb callq clc (bad) mov ss adc (bad) and and jae jnp rex.X xchg push cmc adc mov xor rex.WX adc lret add imul mov and (bad) insb and rex.B mov je xchg and pushq lock fs (bad) fmuls fcompl cltd jae adc ss push (bad) movsb xchg movabs mov pushfq push lods or mov adc hlt movabs clc adc mov (bad) xlat (bad) xor mov pop sbb xor movabs movslq movsb callq or addr32 (bad) rex.R mov mov add pop add clc (bad) fistpll xchg push cmp sbb xor mov scas mov out mov (bad) ja mov clc or scas (bad) je cmp rex.XB (bad) mov mov pop mov movabs (bad) sbb fistpll fwait xchg pop scas push (bad) or cs rex.WRX xchg je xchg lods bnd rcl icebp (bad) or adc sti jbe rorl insl (bad) (bad) adc xorl rcll jnp (bad) and (bad) js ja xchg enterq xor cmp xchg mov add rex.RX sarl (bad) loop js jno rcrl scas (bad) cwtl sub mov int and fwait enterq rex.RB rex.X scas fisttpl push jb adc and sub adcl (bad) mov xchg xor and movabs mov movabs cld mov data16 stos rex.XB addr32 retq fdivs jns and mov insl xchg pop hlt sbb rex.WRB lock popq jb (bad) in lret cmp (bad) (bad) mov xor or xor test (bad) cmpsl jmp lock roll add mov outsb jle decb rex.WRX push loopne callq adc (bad) movsl rex.WRX rex.RB xchg (bad) rex.RXB (bad) xchg adc xchg (bad) lods test clc (bad) push mov iret rex.WRB adc insl icebp xchg adc rex.WRXB retq rex.WXB sub rex.WRXB xor (bad) in adc ss fisubrl adc mov and cs mov pop lea add cs movsb mov subl imul ss movslq callq adc and xlat (bad) ljmp rex.WXB js stc sub or sarb push add or addl cmp lods add mov xchg fucom rex.WB mov (bad) rex.RXB add repz pop mov pop (bad) lea sub sub mov jmp js test or iret (bad) xlat rex.WRX rex.WXB movabs (bad) xor sub jnp mov sub (bad) mov sub outsb mov sub xchg add jl rex.WX push xor adc mov pushfq push pushq repz adc push cmp sub pop stos movsl mov rex.XB (bad) jb mov xlat sahf mov mov (bad) add mov adc push rolb (bad) rex.WXB pop mov jp add rex.RB fs cmp rex.XB mov rex.RX add insl (bad) lret sahf cwtl lock andb mov or lcall adc cmpsb out adc push and stos test (bad) retq fs and rex.RXB lods (bad) xchg mov mov mov repz jno hlt and pop pop sbb jrcxz sub movabs jne xchg rex.WRB stos rolb imul andb mov mov cld gs in sub movabs movsb and sbb lock movabs repnz outsl retq jno loope cmp pop pop rex.WRXB (bad) (bad) or or jbe mov (bad) pop rex.W movabs rex.RB cs std push je jrcxz test or rex.WR and (bad) movabs pop mov mov adc rex.RXB ficompl xchg sti je push mov mov (bad) hlt fcompl ds and adc pop cmp test leaveq (bad) push and adcl repnz push lahf enterq insl xchg rex.WX adc mov movslq clc mov mov je cwtl xor lea pop sub shrb rex.WXB add stos sbb (bad) (bad) and insl (bad) outsl (bad) je (bad) rex.WRX jmp or mov adc repnz mov (bad) (bad) pop xchg ss mov cmp (bad) sbb cs and (bad) fcoms pushq (bad) pop repnz out mov pushq adc addl adc pop jb push adc sar pushfq (bad) adc rex.WR mov cmp (bad) cmc adc mov and (bad) adc adc movabs add cld subl push popfq test repz sub cmp outsb retq adc popfq std cmp add (bad) (bad) jge add (bad) sub and fistpl (bad) xchg (bad) rex.WRX add adc (bad) mov repnz adc ja imul (bad) icebp sbb mov xchg (bad) (bad) rex.WR nopl or rex.B out xor pushfq (bad) (bad) lea pop and mov rex.R repz stc loope (bad) jne push neg sub outsb (bad) xchg lods pop xor rex.XB enterq (bad) (bad) xor repnz lretq (bad) xchg pop (bad) pushfq int xor insl nop xor adc pop movabs xor or mov pop or or mov push test sbb shlb scas sub pop mov rex.WRX jl and cwtl mov retq or test rex.RB jbe std cs sbb and or (bad) rex mov mov movsb (bad) outsb out xor jl (bad) js (bad) fs fprem (bad) fwait adc cmp jl fistpl mov jbe test rex.WRXB (bad) in mov pop mov gs jl mov (bad) or cmp sbb (bad) add (bad) mov or (bad) cmc mov cmp jbe out ficompl out fnop out cs hlt xchg and test outsb loopne gs push (bad) retq sbb jnp psllq cmp rex.WRXB mov in xchg (bad) (bad) ja jge pop imul (bad) movabs and adc xchg movsb or repz rorl (bad) xchg and rex je add pop movabs adc or idiv xchg notl enterq repz iret mov js (bad) mov (bad) mov cld cmp sub (bad) movabs jle xchg push lods movabs je sbb fsubl js adc add rex.X rex clc sti sub pushfq xchg (bad) jp mov int fisubl cmp or and mov adc clc jnp js enterq push add (bad) (bad) (bad) mov pop add adc rex.RXB scas (bad) mov (bad) outsl rex.WB or mov mov mov pop mov rcr setg push or (bad) adc xchg xadd pop test adc (bad) mov rex.RB ss add fwait jnp ja cltd cmp pop test sub push push ficoml push (bad) (bad) pop rex.B sub xor cmp (bad) mov mov rex.WRXB ds xchg rex.WX ja sub enterq jrcxz xchg rex.WRB loop movsl add sub adc and stos or out jmpq (bad) xchg test cmp cmp mov fs es out push (bad) pop jbe int3 sbb and adc popfq insb sub add rex.RX mov mov pushfq pop and clc out rex.WRXB rex.WR movsw loope popfq lods adc insl scas cmp sbb and xchg nop (bad) jno and sub xor lret (bad) adc movabs sbb mov lret fmulp (bad) cs rex.W push (bad) rex.R iret sub and mov xchg or sbb es rex.WXB sahf hlt sbb cmp mov xchg iret repz and adc je add scas jae mov add mov sbb es pushq adc or imul sbb rex.RX xor rex.WRB (bad) sbb mov mov mov (bad) pop idivb mov cld iret xchg (bad) (bad) mov or nop sbb in or lods lock and sub rex.W lods iret adc std sbbl (bad) (bad) adc xchg (bad) xor sbb cs rex.WB out rorb sbb or xchg out rex.WB mov cmc sbb paddsb movabs rex.B pop cmp fsubr and mov xor pop and cmp andb jae int sub movabs jno rol ja mov xchg adc add movsb xor (bad) addr32 (bad) setl mov or adc mov in (bad) imul loopne fstpt sti (bad) add clts jnp cmp sub push fild add in rex.WXB fdiv test jno (bad) mov xor (bad) (bad) (bad) rex.RB pop ja imul (bad) jae (bad) fsubrp and enterq lock xchg rcr pop xor mov mov jge push jle js jmpq add sub lahf out push sub in gs jmpq jae rex.WRB int3 xor (bad) pop rex.RXB and pushfq or pop (bad) mov jo and and in mov or rorl push (bad) (bad) jmp rex.WR stc repnz imul xchg add jae fistp mov out lret scas sub (bad) (bad) callq repnz cwtl or rex.RB retq callq or or push rex.WRB loop loopne and fwait sub outsb lcall mov rex.WXB (bad) psubsb (bad) (bad) pop or jo subb cmp (bad) sbb sub movabs sub jmp pop cmpsb mov (bad) rcrl outsl popfq pushq lods xchg push ja or jrcxz (bad) movsl sbb rex.WRB (bad) lahf pop rclw repnz rex.X cmpsl lock cs rex.WRB lods leaveq lock iret jno adc (bad) cwtl adc xor scas insl fist cltd (bad) (bad) orb and lret out cmp cmp nop (bad) ja jb cs nopl mov adc sbb fldln2 cmp lods or ja (bad) xor or push adcb adc lahf insb shll sub rex.XB rex cmp pop loopne addr32 (bad) add (bad) pop jne adc (bad) sbb adc retq insl sub push negl rex.WR jno adc cltd adc cmpsl movsl push (bad) add movabs xchg lea movabs fwait and xchg mov sbb jg movabs push or test sbb add divl callq (bad) xchg jl mov (bad) fisubrl pushfq lods mov (bad) jbe cmp pop (bad) mov scas movabs nop mov test (bad) imul in rex.WRXB mov pop addr32 pop xor push rex.RX push (bad) divl mov movabs int3 (bad) adc jbe cltd fucomi xor sub addr32 mov pushq (bad) and stc nop rolb add xor rex.WRX (bad) fwait sahf and or rex.WRB adc adc mov xchg jg jnp and (bad) sbb or adc cmp push cltd jp movabs cli cwtl stc (bad) pushq (bad) cmp sub xchg (bad) rex.WRX (bad) in mov xor hlt sbb add sbb (bad) (bad) sarl sub xchg negb add cmp (bad) pushq callq adc sub popfq pop add in mov movabs rex.RXB jp jne scas jb sbb movb int (bad) rolb nop (bad) and xchg (bad) sub ja pop sbb xchg mov xchg rex.X fwait xor xor lahf lods cmp pop out push rex.WRXB mov mov pop jbe (bad) (bad) (bad) or mov adc lret outsb mov jg callq sbb rex.WB pop fs mov movsl enterq push (bad) jb jp sbb mov adcl mov rex.RB (bad) and cs sbb lahf jne lahf xor xor stos or cltd (bad) or shrl (bad) add jp leaveq rex.RX rex.B xchg and pushfq (bad) jmp leaveq mov ja subl leaveq sbb scas (bad) (bad) or fildll jbe (bad) xor add mov add sbb callq push popfq mov movabs sub (bad) xor rex.RB (bad) outsl mov and push lea std subl sbb stos xchg repz cmp sti cmova gs push xor rcrl imul and pop or repnz out (bad) hlt in loopne sbb (bad) movl out jae out xchg mov ficoml js movabs pop push xor add mov (bad) mov (bad) (bad) (bad) cmc fadd in clc push mov rex xlat cmp mov out retq adc (bad) rex.WR rex.WX adcl adc (bad) int sarl lea nop add xchg retq stc stos or shlb adc adc (bad) in rex.WB (bad) adc adc movabs imul sbb sub cltd repnz and jno cmp fs xor shll imul std add movsl sbb adc pop (bad) xor retq mov and icebp (bad) test fsubl push mov pop sub ss sbb xor sub rex.RB sub jae setb jrcxz jo fmuls jp lret rex.WRX out xchg movabs pop push xor pop (bad) xchg (bad) pop adc jg sbb (bad) add rex.WRX jg mov leaveq out or cs mov fsubrs rex.WRXB cmp mov (bad) xor test leaveq cmc test cmp (bad) loope push sbb adc fild add int3 add mov test jno fistp pop jbe add ds jg (bad) (bad) add adc int (bad) sub (bad) and in pushq jge add rex.WRXB rex.WRX (bad) jns testl cmpsl sub adcb clc mov test movabs decb cmp mov pop adc push int3 insl mov adc movabs mov sti test add insl sub lock jp cltd iret (bad) repz push in movabs out loopne rex.XB or iret int3 int3 cmpsb imul add callq add push or xor (bad) lods xchg (bad) repnz sbbb xchg cmp pushfq out jae adc (bad) xor leaveq cmpsb imul cmpsb mov adc in sti add (bad) insl (bad) icebp xchg jno scas notb and (bad) push sub add jbe (bad) rex.WX jo mov cmp sti loop lods (bad) fistl and callq in rex.WXB mov sbb int xor (bad) rex.B sarb jp lods (bad) callq lret or add mov pushfq (bad) imul stos mov or rex.WR and je rex.WXB lret add in xchg (bad) jae movsl int3 adc xchg mov lods cld xor rolb adc push int3 test rex.X sub (bad) fcmovbe je enterq rcrb or (bad) imull adc add rex.X (bad) pop xor adc push (bad) (bad) (bad) adc insl adc rex.RXB lock fidivl adc imul fcompl or imul (bad) (bad) cli mov rex.WB jmp mov out jnp mov sbb out add adc xor pop cltd fbld or clc stos mov fcomps lods jl jmpq mov rex.WRXB jno int3 sbb jrcxz (bad) (bad) adc xchg (bad) (bad) xor mov mov xchg sbb mov int3 repz xor mov rex.RX and (bad) hlt (bad) jbe and rex.B clc outsl testl or push loope lods ja xor adc cmp (bad) ds jno imul adc mov push lock int in mov fcoms adc in in (bad) (bad) enterq pop xor (bad) insb adc mov mov adc jb test movsb fstpl xor addb (bad) rex.WX lahf mov in mov xchg pop mov mov push cmp out (bad) in push xlat movabs adc rex.WRXB enterq xchg js fwait xchg outsb cmp mov rex.WX (bad) pushq rolb decl test xchg jp fildll cmp pop js rolb lret push shr int3 jle jmpq cli repz test loop add hlt push negb jb sub xchg push jne fcoml jmpq rex.X (bad) ficompl rex.WRXB mov (bad) adc rex.WRXB in rex.XB add (bad) imul retq popfq (bad) jno leaveq add rex.WRB in cmp sarl lock rcll sbbl lahf push lock out lea (bad) adc xchg (bad) rex.WR decb rorl add retq xor movabs retq hlt mov movl (bad) stos sub in adc movslq outsb cld jnp sub adc lret test xor test jmp push and and and data16 rex.WRXB (bad) jp,pn jmpq loop mov js rex.RXB scas mov movabs mov adc cmp or idivb (bad) xchg sar mov (bad) test jg cmp or jl and adc jrcxz pop xchg and movabs retq pushq mov lods pop mov add (bad) and mov sub jbe (bad) cmp (bad) shr and lret xchg movabs cmp cmp mov sbb jrcxz lret (bad) (bad) jne and movsb lret addb je shl rex.WRB shrb add push xor jmpq jl add jmpq test and repnz jge (bad) xchg cltd outsb fs insl movsb jnp cmp cs mov jg pop rcrl scas mov jno int out add (bad) movslq jns leaveq ja mov (bad) pushq adc pop adc movabs rex.XB (bad) std lret rex.WRXB leaveq (bad) fwait lock (bad) cvtps2pi add sbb cmpsb sub out sbb loop adc cmp sbb fimull and mov xchg adc insb cmp and (bad) callq rcll cs movabs int xchg rex.RXB jmpq cmc push mov jle andl add push xchg adc rex.W retq pushq lret negb and lock adc test neg jo fsts mov adc jmp nop faddl sbb sahf mov icebp mov adc xchg adc pushfq pop mov adc icebp idivb lahf push callq insl rex.RX ds cltd out lahf sub movslq outsb fisttpl sub and mov xchg and cwtl insb and leaveq clc add int (bad) sbb movabs cmp cmpsl (bad) jmp xor sbb adc outsb or imul adc or sub (bad) in movabs ss sbb out clc in xchg fdivl add repz sbb adc gs jl adc in (bad) mov popfq imul test rex.RB (bad) xchg mov callq rex.B adc xchg rex.RX ss fistp mov rorl sub cmp enterq clc mov stc push jae (bad) rex.WX insb add jg test adc incl push jbe adc xor mov sti data16 fs retq in movabs and mov and gs in std jo and push cs repz sub mov (bad) retq sti mov xchg mov add fs stc fsubs fnstenv mov cmp (bad) xor cmp adc notb or rex.RXB icebp (bad) cmp shrl shll movl imul adc adc fs fwait xlat int3 out add (bad) rcrl insb push (bad) push mov cmp and test fwait xor or movsl push (bad) push iret stc cmp mov (bad) (bad) rex.WRB movabs add sti mov lea int stc (bad) enterq xor sarl add cmc rex.RB (bad) mov rex.WR fucom sub int (bad) xchg sbb js xchg or (bad) or sub (bad) rex.WXB push jge xor fist push (bad) cmpb ss rex.W out movabs (bad) pop (bad) fs int3 mov sbb (bad) xchg movabs (bad) cmc push add fidiv (bad) xchg and out push sub std stc xchg add add stos jno mov cwtl (bad) leaveq jae (bad) (bad) mov mov (bad) std repnz push cmp jmpq (bad) mov pushq mov sub mov cmp (bad) adc or xchg je sbb jns mov divl push scas xlat xchg xchg xor adc fdiv xor adc lret lcall mull mull pushfq (bad) adc sbb xchg (bad) (bad) lret clc xchg je xor retq push add add je push js icebp (bad) ficoml sarl (bad) or mov (bad) or movabs fldenv outsl (bad) adc (bad) push hlt popfq jl leaveq (bad) callq jmp (bad) mov push mov and lahf add imul pop adc lock sbb rex.WRB addr32 mov and mov (bad) add adc push sub and mov (bad) int adc iret (bad) (bad) xor (bad) jne incl movabs pop cmpsb xor ds rex.WRX (bad) fsubrp sbb and push xchg (bad) fs retq cs lahf rcr out and jrcxz test fdivs and in (bad) out rex.RB mov stc xchg out sbb (bad) and (bad) cmp ja setnp cld add xor xor jmpq (bad) rex.XB or and jp mov rex.WRXB fwait jo jo rex.RB cmp (bad) (bad) cld cli divb (bad) (bad) addr32 and mov sbb or imul sub add roll xchg pop xor (bad) iret int sbb leaveq andb pop adc adc adc insb orb mov jbe mov jbe fldcw fs adc pop xor xchg push push and jb (bad) rex.WR repnz push rcl pop mov adc and (bad) pop pop cmp je pushq mov mov push std xchg fwait fs sub lods jne push pop imul pop fimul xor (bad) xor in pop jo (bad) push sbb movsb cltd fcoms in sub imul (bad) add rex.WXB movzbl cld adc (bad) adc sub cwtl cmp adc (bad) outsl sbb pop mov (bad) jle leaveq callq push sbb xchg rex.R movsl sub std sub mov (bad) pop pushfq dec sub icebp int punpcklbw sbbb add jnp sbb add cmp lea mov and sti cmp (bad) xor add cld or rex.RB add lret xor scas sub pop popfq and lret (bad) in rex.W adc cltd or fbld cmpsl pushq pop sub sti je mov adc jrcxz (bad) fbstp add (bad) movabs retq (bad) movsl es pushfq (bad) (bad) xchg lock fistl jne pcmpeqd or ljmp mov out sub add sbb mov decb jmp xchg adc xchg (bad) outsb jge and stc fimull mov cltd adc (bad) js sbb test adc mov cwtl xchg (bad) or div sbb clc cwtl loope jrcxz outsb (bad) (bad) sarb rex.RX movsb cmp xchg rex.WR rorb movabs rex.B pop xor (bad) (bad) sbb callq (bad) (bad) add test rex.XB test cs (bad) (bad) rex.RXB or pop or and jrcxz movabs adc ficomp stos in pushfq rex.RX (bad) enterq mov imul nop rex.W (bad) lock or lret and int3 add adc xchg (bad) sbbb adc jp and adc mov mov stc mov addl jle out insb xchg xor int3 sub adc jo mov js (bad) xor cwtl jge sbb loopne xchg push pop cmpsl (bad) pushfq mov (bad) mov (bad) (bad) rex.RXB rorl rex.R push testl or test fcoml jmpq (bad) (bad) outsl fsubl lret pop shr (bad) pop mov outsl sbb shrd insl jp xchg (bad) pop mov outsl push pop cmp jrcxz (bad) sbb add (bad) lods or scas adc mov cmp repnz sub (bad) adc pushfq sbb xchg jrcxz (bad) in (bad) jb mov rex.RXB iret (bad) sbb outsb sbb pushfq fdivrl xchg lret pop adc cwtl or scas adc in ss adc lock or push push cmp imul out jmpq fcomps sti or je (bad) out rcrl (bad) lock and pop rex.R repz mov or and ds (bad) out cmc adc pop rex.X insb mov jne (bad) addb cld in callq sbb imul fwait repnz xchg (bad) movabs xchg (bad) (bad) adc mov (bad) cmp cmp loope fadds ja cmp and std retq fild movsl push test mov or shrl lret (bad) jb nop js (bad) fistpl mov or xchg xor (bad) and js jg jl sub scas in (bad) (bad) fnop cwtl rol mov (bad) xchg adc fdivrs insl enterq (bad) mov (bad) (bad) js int3 sub ja rex.RXB retq movabs cmpsl (bad) iret fbld or mov cmc pushq (bad) push (bad) jg int imul jb (bad) cmp xchg (bad) cli rex.WR and cmc adc and push stos jnp pop (bad) xchg sub cmp mov sbb iret mov notb xor scas callq (bad) lock leaveq and callq (bad) jne fwait loopne mov int loop pop cmp sub and fisub and (bad) mov xchg pushq pushfq fs (bad) mov repz sbb iret (bad) cmp (bad) shlb test or pushq sbb add jb icebp cmp int3 (bad) fdivrs rex.WB adc add or adc jbe rex.WRB repnz xlat loopne push ror pop cmp or fs movabs jge scas shlb cli mov cld xchg rex.R sbb out sub sub add jmpq add loope adc (bad) pushfq lods xor stos gs jo mov (bad) sbb adc cli (bad) cwtl retq sbb (bad) adc and or (bad) (bad) jle movabs (bad) fld and xor in insb push popfq adc cmpsb xchg mov rex.X push adc out jne stc adc cmp fsts repnz sbb scas xor fcoml test sub sub rex.WRXB cmp xchg imul or jb fmull adcl jmp xlat xchg (bad) (bad) mov xor clc rorl in rex.WRB xrelease or adc loop insb nop or lahf sbb xchg enterq (bad) pop rex.XB lock rex.WRXB lods add cmp pop rex.R (bad) xchg pop rex.WRX jae shl repz mov cmp je sarb sbb int3 jno rex.RX jbe rclb std fistpll movabs (bad) rex.X and (bad) cmp flds vcvtpd2dqx mov rex.WRXB clc insl enterq sbb je xchg cmp mov jo rex.WR xor cmp (bad) (bad) out jp (bad) mov mov fcomps cmp int or sbb sub lock jne movabs sub add xor (bad) jmpq callq (bad) mov mov repnz sub (bad) mov (bad) adc xor lock xchg sub push pop bnd add and mov (bad) movslq fs callq movabs mov sub cli lock fiaddl cli or std ror adc rex.WR xchg jns rex.RXB mov (bad) movabs cmp out mov loop xor mov mov push jb icebp fwait rex.WXB lock push (bad) or rex.RB icebp jmp adc adc jge cmc ss xchg hlt callq cmpsb imul or (bad) leaveq popq mov cld imul lods movntq mov rex.RX jno (bad) or retq nop (bad) and mov fxch mov fwait (bad) in and movsb (bad) adc cmp xchg rcl rolb movabs pop fidivrl rex.WX cs in add adc lea mov (bad) cmp (bad) sbb mov adc int3 orps ja js jrcxz fsubr int popfq xchg jmpq sub sbb movabs out out (bad) jp out scas cmp or rorb and rex.WRXB (bad) test sbb je (bad) scas (bad) out gs jp ljmp movb or push pop xor (bad) push adc mov (bad) sub in push mov pop int mov mov add movabs xchg or (bad) adc jmpq pop iret cmp adc cmpsl (bad) popfq cwtl (bad) adc sti mov sbb xchg adc sub mov mov xchg cmp (bad) out mov ss adc add cmp jp retq rex.W rex.WXB xlat lock or cltd xchg repz ds rex.RXB sbb mov cmpsb pop in rcll rex.WB jmpq xor (bad) (bad) add adc lret xchg adc movabs iret adc rcrl add adc cmp (bad) (bad) cmp (bad) movabs and jmpq and fidiv (bad) fadds jp (bad) jl retq mov cmpsb or nop (bad) jrcxz adc pop cli movslq lea and rex.X lods sub adc mov mov sahf repnz fbstp outsl and mov lea (bad) and pop cltd jne cmp jne mov rex.WXB sub loop cmpsb cwtl out or orb cltd ss out and sbb mov sbb mov xchg add (bad) jmpq sbb lret fwait rcrl (bad) fsubl callq xor xchg (bad) cltd (bad) push movsb adc retq imul test lock adc stc cmp and sub lret mov pop mov int3 movabs and popfq push movslq retq or (bad) (bad) add (bad) out add imul int3 test outsb movabs in xchg in in rex.WRX mov adc sub push push adc or insl mov lret pushq mov rex.R sahf add stos (bad) icebp mov out jno (bad) jne mov (bad) shrb pop xor rex.R retq out sar cld mov xor (bad) in mov inc or or (bad) (bad) movsb imul cmp push fwait jno add and out (bad) movabs lahf (bad) xor or pop movsl test cmc in rex.WRB sbb sub jge (bad) mov sbb xor rcl sahf jmp lret andb (bad) xchg sti sub mov fist (bad) xor sti mov in movabs rex.WXB stc rex.WRX notb cwtl cltd add outsb rex.WRXB (bad) or fxam lods std add (bad) (bad) fstpt out xor (bad) (bad) (bad) jmp push sbb out mov fs (bad) sub outsb out or testb xor cmc movsl rex.WRX rex.B fadds adc or (bad) pop test or lret xchg sub jmp rex.RX push mov (bad) movabs in jg rorb and rex.RX fucomp (bad) ds adc push movabs loope outsb gs pop lock push mov (bad) xchg fisubl cmpsl mov (bad) ds test adc movl or mov out lret lret (bad) repz lret push jge fcmovnbe rex.RB ja or movsb add fistl pop rex.RX movabs adc cmp sub push adc jmpq adc fsubs (bad) out lea (bad) adc scas and sub (bad) movabs jne push cmpsl xor rex.RX jo xchg sbb out sbb (bad) retq unpckhps cmp test add lea push rex.R lock rex.XB rex.WX cli cmpsl out int3 emms (bad) xchg shr xchg adc lahf mov sub push adc cld adc adc pop clc add cmp adc sub in popfq mov js sub movabs and jo jae lock lock sub cld pop je add (bad) movabs fcomi (bad) mov cltd pop fsubrp rex.RX rex.RXB js (bad) jbe fisttp add pop mov rex.X (bad) fisubr shrb mov pop and callq (bad) out test xchg and rex.RB adc push jge stos icebp (bad) cmpsl adc xchg (bad) sbb leaveq nop mov std sub rclb (bad) cld movabs rex.RXB sub js cmp (bad) movsb cmpsl or movabs std callq int adc sbb cmp mov insl fmull decl repz movabs or jo (bad) pop rex.RX or jbe cmpsb sbb xchg cli fidivr fs xchg xchg rcll rex.R (bad) xchg rcll movslq test je mov (bad) in add xor (bad) (bad) cmp decb and push lcall (bad) mov std (bad) xor in rorl add (bad) add sbb imul imul (bad) repz gs cltd callq jb xor rex.WX or xor lret test stos rex.WR sub mov mov xchg mov (bad) jl stc movslq xlat or leaveq lock xor (bad) int mov adc iret push shll mov mov cwtl sbb int outsl xchg mov negb stc push enterq (bad) cmpsl sbb adc cmpsl sub rcll mov jns jae cmp cmp xchg xchg ja or fistpll mov outsb (bad) push mov imul lock xchg or xchg (bad) xchg push mov ss mov and xchg sub and fidivrl cld lret xchg callq mov add callq sbb mov rcr mov movsb (bad) (bad) cmp es in add mov and es clc sbb push and mov pushfq (bad) sbb xlat clc hlt scas test cld adc sub lret add stos (bad) mov (bad) add jns scas mov fisttpl rex.RX rex.WRXB (bad) es add mov (bad) (bad) enterq adc mov adc adc add cmp jge int3 in rex.WR (bad) (bad) movsb out adc lock adc in jl shrb (bad) mov add rex.RX or rex.WRX fwait push (bad) cmpsl sub rex.WB add adc shl test adc std mov adc (bad) jae movabs cs adc mov push rex.B outsb jrcxz adc rex.RB pop (bad) or adc xor stos push mov movsl mov callq cmpsl (bad) in (bad) in retq lret rex.WR rex.WRB imul fchs (bad) pop push adc negl (bad) sbb je ja xor rex.XB jo mov mov and fsts push push (bad) mov adc repz imul setns popfq data16 sbb push movsl adc fimull cltd (bad) rex.WX adc sub adc and adc movb cmp in (bad) (bad) pop leaveq pushq rex.WB and push add ds stos (bad) pop adc and cmp cmc adc movabs sub out adc scas rex.WRB xor ss clc add cmpsb out rex.WRX out rex.WB rex.WXB xchg mov push rex.XB addr32 rex.B push in (bad) retq jns retq xchg mov pop outsl and pop in enterq (bad) and jae popq (bad) ja es (bad) repz (bad) xchg rex.WB (bad) jl mov addb pop lock add (bad) icebp out enterq pop (bad) movabs cli xchg in test (bad) cmp movabs jno mov callq (bad) fdiv cmp fwait (bad) retq in repnz sbb jle (bad) fmuls fdiv sub and (bad) cmp mov cmp sbb mov je lock rex.XB mov (bad) loopne not rcl adc xor push pop data16 callq insb sub pop jge int3 repnz (bad) (bad) rex.WXB jb xchg out xor gs jae rcl xchg fwait mov test and sarb retq xchg std in je pop mov pop mov jb adc xchg test enterq pop cmp sub sbb scas rex.X and xchg roll pop xor (bad) add clc pop (bad) and fucom js sbb (bad) mov or (bad) rex.RXB fcoms jmpq (bad) movsb or lret cmc rex.WR pushq cmpsb sbb xchg push notb rex.W rex.RX notl repnz lret jmpq int3 push push ja pop loopne (bad) cmpsl adc sub sub enterq adc rex.XB (bad) (bad) fnstenv and sbb or mov (bad) cmp mov (bad) or outsb xchg push add or (bad) pop and mov lods out add (bad) jl pop and clc rcll rex.WR adc rex.WXB cmp push jno and movsb cmp pushq sbb negl push movabs mov incb or rex.WRX xor rex.XB (bad) sub je (bad) xor sub sub xchg mov test push xor cmp (bad) fdivr xor pushq rex.WRX mov leaveq sbb xor (bad) rex.WRB (bad) leaveq lods adc jbe mov insl xlat ja adc jle jns adc xor sbb sbb and and (bad) movslq rex.WB (bad) (bad) movsb mov (bad) js callq xor cld out (bad) mov out mov sub mov and mov fcoms mov sub cmp jns test cs (bad) mov sbb jg repnz rex.WX (bad) lock rex.XB or outsl movabs xor (bad) rorl repz shr jns js pop mov xchg jge sbb jrcxz stc rolb (bad) or adc jg mov (bad) push shrl ficompl icebp sbb fldt or adc movabs icebp movabs rex.WB pushq shrl sub cwtl fneni(8087 in xchg rcr cmp por loopne movabs (bad) xchg (bad) sbb pop in movslq sub cld data16 and and cltd and (bad) (bad) in sbb or cld fs sub retq lea sub adc neg lods je,pn out pushq push cmp or rex.B fimul adc add callq psubusw cmp pop sub pop enterq rex.WRXB and rex.RXB xchg nop add scas mov (bad) or push fwait cmp repz jae jmpq (bad) retq orl (bad) iret movb fild icebp and xor movabs movslq fwait (bad) scas sar rex.WRXB lret cmp (bad) mov jne,pn push adc sub (bad) and rex.WXB jae rex.R sbb (bad) out (bad) adc in fnstenv or add sahf fwait movslq fidiv sbb stos xor lock xor repnz fstps jmp out mov sub fidiv sbb add leaveq repnz testl sbb mov adc test js fwait rex.XB mov popfq fsubrp std jo mov push mov test (bad) jns sbb jmpq (bad) xor adc ficom sbb cmp insb lods fadds pushfq clc jge and xchg cmp xchg mov rcl or movabs in rex.XB (bad) mov fwait cs (bad) adc movsb (bad) mov sbb je adcb movabs fsubs jbe jrcxz clc push (bad) mov stos mov (bad) xor sahf out adc pushq xor sbb out pop xor adc add sbb fldt sbb fst ds push or xchg outsb and lods push lock mov mov add leaveq test (bad) cmpsl cli or adc fs and mov adc roll fiadd rex.XB mov (bad) xchg test in pushfq cmp movsb sbb rex.WX hlt leaveq (bad) movsl cmc sub add out iret jl jrcxz imul movabs mov cmpsb rex.B jb add notl jg adc adc pop fistp mov (bad) loop (bad) in mov rex.WRX repz mov (bad) sub pop (bad) (bad) (bad) lock pop add test cmp pushfq fnstsw js xor out mov adc in pop (bad) jae out mov fcmovu add movabs (bad) es jne push (bad) sbb cli jle pop movabs int3 push jmp mov cltd add sbb xchg movslq cmp jo mov (bad) rex.WRX rex.X movsb rex.WXB movabs xor jbe roll movabs retq rex.RXB sub callq and mov sbb jle add (bad) mov movabs cs pushq fmul rex.XB rex.WR and (bad) enterq out hlt mov clc lock pop cmc test js jnp pop jge cmpsl insb pop cmp or add mov insl stc mov iret ss xchg sbb retq (bad) mov in mov mov int3 adc sbb pop enterq fwait je callq insb pop loop (bad) add fcoms xchg add and xlat in rex.WXB bnd add sti (bad) in jne add sub test rex.WR retq add js (bad) cmp or (bad) (bad) and stos xchg mov rex.XB rex.WX lods std sarl retq (bad) mov cltd (bad) cmovg (bad) cmp xor cmpsl mov int roll lods mulb mov fsubl mov xor xor loopne repnz (bad) (bad) stc test mov (bad) mov jp test sub test pop cs cmc rex.RXB jp lock sarb fxch sub push scas (bad) xchg iret mov pop add (bad) xchg imul movabs jbe rcrb hlt xor in addl pushq (bad) push lret add mov jbe add or adc frstor sti jne rex.WB mov rex.X cld hlt fldcw (bad) (bad) fwait pop xchg sar leaveq pushfq adc (bad) (bad) jge (bad) rex.R and (bad) adc fcmovnu and movslq and mov and (bad) xchg (bad) stos cmc pop adc adc (bad) (bad) and add and rclb adc mov lret sbb adc test rex.X fxch adc outsb popfq (bad) fs xchg xchg adc cmc jb addr32 pushq cmovge sahf pop add adc addr32 sti insl std (bad) mov adc fidivr push adc xchg scas sarl movsb cmp callq mov xchg pushw xor subl cld repz std add adc (bad) incl movsl adc mov std mov pop rex.WB es (bad) test cltd (bad) pop ds mov jrcxz fwait jbe and cmp push in add mov (bad) insb icebp clc fisttp popfq push push cs jge rclb in xor or bndldx insl callq lahf xorb movsl sub pop adc sahf cmp (bad) cmove movabs rcll jbe outsb adc repz cld xor rcrb (bad) adc cmp int3 scas mov adc sub (bad) mov rex.WRXB xchg fcoml lahf adc and gs push test (bad) push (bad) jnp mov lock andb (bad) std (bad) vpcmpeqd (bad) adc (bad) pop in gs imul or sbb movabs lods or mov in adc lods (bad) or (bad) or xlat sub mov add adc xchg repz insb adc lods add fcomps rex.WRX rex.WB js data16 mov and xorl movsl clc (bad) retq (bad) cmpsl or pushq movabs (bad) loopne (bad) int3 sti adc xchg adc and jrcxz add sti (bad) xchg jp loopne adc adc and (bad) jrcxz mov cltd cmp and xor out mov push adc cld mov adc test sub (bad) xor add rex.WR sarl enterq pop push sbb (bad) pop cmp or lock loope pop (bad) or sub add rex.RB jne adc (bad) addr32 xor fwait std (bad) (bad) (bad) std cmp xor fwait jno jl mov fxch roll (bad) adc out or (bad) cli lock (bad) retq retq fcmovnu movsl cmp xlat add jno sub xchg out (bad) or movabs and mov and in add insb sti jmpq mov mov jbe out fsubr jne repz or mov jle (bad) dec add (bad) mov cmp (bad) (bad) mov rex.XB xorl and adc test adc sbb js mov push xor rcll sub push adc in imul cmp adc mov out (bad) (bad) mov sbb retq insl addb (bad) jbe push mov insb imul orl (bad) stc push jo fwait int and pop lahf (bad) add fmul (bad) jne loop adc mov imul (bad) fs fwait lret and (bad) add js jp (bad) cmp jle (bad) (bad) psubusb pop add mov push popfq xchg mov (bad) xchg sbb mov callq sbb cmpsb scas in push cmc test (bad) iret movabs jno out sbb sub push push add leaveq mov mov mov sbb (bad) int3 pop sbb std or (bad) int3 retq mov push insb roll fild xor and mov enterq enterq mov (bad) sub sub add insl (bad) cmpsl callq testl adc repz adc popfq and (bad) pop rex.WR rex.WRB pavgb xor xor sbb push jnp lret add fdiv (bad) xchg outsb mov cltd pushq cli (bad) mov movabs xlat xchg cmp rex.RX jmp push jmpq sbb (bad) (bad) imul and adc imul sarl cld fidivl callq or sbb or (bad) movabs (bad) rex.WRB notb jg xchg and or rex.WRX xchg or (bad) movabs std push outsb (bad) xor (bad) xchg fstl lods insb rex.WXB test int3 xor adc loope mov (bad) push iret neg jns test or movabs lahf (bad) or std sbb callq (bad) rex.WX lods sbb lretw pop (bad) jrcxz mov loop int rcrb cwtl hlt movabs rex.WRB lock movabs movabs rex.XB adc movabs mov (bad) push (bad) or and push adc add (bad) (bad) pop lahf adc and loope sub xchg fs hlt and add sbb mov movslq (bad) pushq orl or adc test sbb cli mov fcom adc pop imul callq cmp cmp sbb hlt roll and (bad) iret (bad) (bad) movabs ficom (bad) jne rex.RXB xor retq (bad) (bad) outsl adc stos push adc (bad) mov cmp divl rex.XB cltd (bad) jne clc adc or not sbb movslq (bad) fdivl xor (bad) push jge xchg or (bad) test xlat mov rex mov or (bad) (bad) (bad) (bad) jl sbb sbb xchg mov xor pushfq in or rex.WRXB repnz (bad) test icebp vunpckhps movabs or pop and jno jg adc fwait xor cmp in test subb sbb lods rex.RB jmp ficomp (bad) rex.RX cmc cmp adc xchg fist (bad) cmpsb (bad) or pop cmp sub std xor sbb jmp sub cmp ror popfq cmpsl or punpckhbw fwait and and (bad) sti fsubl mov sub rex.R pop out out (bad) ja movsb push fbld mov cmp pop movabs (bad) sbb repnz fistl or jl push rcrb je add sub lods loope rex.WB idivb sahf in test sub ss sbb add adc scas (bad) out xchg outsl xchg mov mov add pushq (bad) xchg (bad) (bad) push (bad) rex.W in loop adc outsl in clc loope cld xor adc jne adc js popfq adc push lahf pop and (bad) jbe adc subl push (bad) adc rcrb jle fmull add rep or (bad) jne jl and int (bad) lock enterq xchg cmpb movslq and callq (bad) and mov int3 (bad) push (bad) pushq cmp adc jmpq sbb and xchg lods sbb rex.WRB rex.W adc (bad) unpckhps and movabs imull rex.B jmpq (bad) (bad) adc (bad) cld pop cltd fwait sbb push add (bad) xchg xchg xlat and pop int3 or (bad) fs and scas divb addb cmpsl fimul mov jmpq rex.W mov movabs and stc in adc lea ja (bad) and xchg or (bad) mov es adc lahf insb pop nop adc (bad) (bad) fnstcw and clc (bad) (bad) rcll in clc adc xchg mov xchg mov adcl imul adc (bad) (bad) add mov retq (bad) lock sbb outsl mov cmpsl out int3 mov enterq sbb (bad) rcll mov xchg outsb adc cmp (bad) rex.WB jrcxz (bad) pop fs pop add push (bad) mov pop mov add rex.XB sub mov enterq mov (bad) and es sbb cli adc xchg or adc (bad) (bad) jge insb pop jbe pop gs and jno mov es int3 adc jns mov rex.R fimul adc outsl movsb mov sbb int cmc push lods xor (bad) (bad) add shlb push stos adc retq (bad) adc push (bad) cmp add insb adc jne cmp adc rex.XB rex.WX rex.WB xor lahf jb (bad) adc and outsb outsl adc lods addr32 rex.X xor mov cli test std stc jo mov or ss mov sub fneni(8087 adc fidiv stos jrcxz adc rex.XB mov pop test (bad) gs mov scas callq or (bad) mov or xchg rex sub (bad) push in rex.WRB es lahf out enterq (bad) test jnp lahf add xor and push ja loope rex.X rex.WXB xor rex.RXB sub sahf in es sbb and movsb imul cwtl out (bad) pushfq rcl or movabs and lret add (bad) and hlt jge (bad) frstor stos insb cmpsb test js repnz mov rex lock gs int3 rex.R sub (bad) (bad) repz sbb adcb xchg add fisubrl iret loopne mov push movsl fs jl push mov jbe (bad) (bad) xor (bad) add loope (bad) adc cmp vpunpcklwd (bad) fiadd jne rcll (bad) cmpsb mov mov fstl adc xor adc pop mov sbb clc pop pop (bad) (bad) lock mov insl jb (bad) movabs je (bad) add sbb and xor loop adc pop scas add sub adcl enterq adc or (bad) xchg sbb add push jne pop (bad) and stos sub bnd adc mov (bad) sub adc in cs push lock mov pushfq jb xor jge enterq lea pop fsubr rex.B clc or (bad) (bad) movhps xchg (bad) jge test sbb test (bad) fistpll movabs pop mov jle xchg (bad) add rex.W lock test sub adc (bad) pop int3 pushfq (bad) rex.WRX addl enterq mov lock cmp retq adc mov add ficompl fcompl cmpsl (bad) insb xchg xchg int jo jo clc cwtl sbb sub and push (bad) xlat or or repnz xchg (bad) movabs fs fwait pop jmp pop (bad) rex.WRXB callq sbb in nop push cmp movabs clc pushq rex.WRB (bad) movabs fcomps stos lret out xchg js rorl fnstsw and jge (bad) (bad) rex.WXB xor pushfq xor pop push movl movabs rex.WRX add in fidivr pop out sbb add (bad) es repnz stos xchg jne (bad) in vpminsw ds out pop iret cs mov sub sbb fmuls popq retq xlat or add (bad) xchg add outsl (bad) (bad) (bad) (bad) cmp pinsrw and frstor sub pop icebp (bad) sbb rex.RXB (bad) divps mov sbb jl pop repz rex.WB ja callq mov (bad) fldt and xor rex.RX rex.RX pushfq and and add sbb (bad) out (bad) adc pushq fidivr fs stos jnp xchg push ficoml adc or psubsw rex.WR lock add (bad) lret or sub rex.RXB gs mov xor adc stc cltd add (bad) mov cs outsl sub (bad) add stos jmp jae js adc (bad) (bad) movslq clc jg out adc jns mov retq ss (bad) jmp out push stc adc es rex.X jb mov cmp jnp (bad) mov (bad) incl adc (bad) out sub cli mov xchg push pushfq xchg or (bad) (bad) xchg adc or pushq push push movabs xor (bad) or (bad) out mov movabs movsl mov sub adc fadd jae lock xchg adc or xchg movabs cmp add sub rex.B (bad) push imul ficom pop cmp pushq lret (bad) imul add add jrcxz lock jl add (bad) or nop rex.RB fbstp repnz push retq rex.WXB repnz std jmp (bad) rex.RB idivb lar push xchg out xor adc rorb int (bad) rex.B clc jae je shrl cmp push (bad) shll (bad) fst movslq sbb div test sub xchg movabs cmp rclb sub rex.WRX xchg rex.WRB mov lods mov push stos scas (bad) xor add test (bad) movabs add test rex.WX stc ds clc cmpl xchg xchg popfq ja mov rex.X rex.WRB movslq loope or sbb (bad) retq add mov movsb (bad) push or pop mov jmpq cmpps imul popfq stos je subl cmc jp sub jnp cmpsl or rex.W xchg xchg lods outsl adc mov adc jle lea lret xchg leaveq rex.WRX jae (bad) rex.RX cmpsb xor cmp pushq faddl and sub pop (bad) imul (bad) retq (bad) mov xchg movabs (bad) adc cltd push test mov repz cmp push shr rex.WRB out imul add jmp mov (bad) je (bad) test neg pushq xchg enterq pushq (bad) xchg (bad) cmc adc sub (bad) cmc (bad) jmpq retq xchg (bad) (bad) ja cld rex.WXB or mov sub push movabs shll sub push mov test mov xchg repz sbb movabs push xchg jnp movslq push adc lock lahf std add and in adc (bad) (bad) cmp int mov push xlat cmp dec mov xchg cmpsl lahf jmpq repz pop add in sub (bad) out rex.WXB out (bad) push adc scas add mov popfq (bad) movabs or adc (bad) rex cmp inc rex.W mov add (bad) xor (bad) adc sahf sub and (bad) pop clc pushq out rex.RX or jo (bad) rcll divb jnp pop (bad) xchg ds mov adc out rex.WRX pop adc hlt (bad) fdivrs mov test lea sub lods clc jmp shl pushfq clc fmuls sub testb (bad) adc es (bad) (bad) rex.WRB out push mov mov sub cmp adc (bad) add ja xor mov (bad) testl push jae adc mov jbe cli pop cmp fwait stc pushq and cmp adc jl and insb (bad) sub lock mov (bad) add (bad) cmpsl insb sub adc movsl cmp enterq xchg stc sbb xlat xor mov pop gs adc sub lods movabs out pop add mov movabs lret sub mov xchg nop push stos and rex.WRX sub jne movabs std lods int3 data16 adc (bad) and cmp test (bad) (bad) data16 stos mov or rex.WB cld orl cltd or add stc cltd pop mov sub cs push xlat ja (bad) push rex.X shlb mov add (bad) push mov insl xlat xchg out jne imul stos fsts rex.WRXB fcompl insb insl xchg xor (bad) movslq jge gs adc sti cltd outsl adc and (bad) mov adc jns sub adc in add icebp (bad) push sbb cmp iret xchg lock movabs cmc adc hlt outsb mov sbb pop (bad) fisub adc cmpsl pop mov fcoms cmp add jrcxz (bad) rex.RX rex.RX rex.WRXB in or mov cmp pop fnstsw xchg push (bad) fsubl sahf jns ja adc mov jno jg es lock sbb and stos jb insb hlt (bad) retq sub rex.RX callq add or or rex.WXB jl out (bad) pop jno lret xchg add rcrw rex.RB and lret xor imul nop lods scas cli mov mov fsubrp rex.XB mulb out imul (bad) xchg imul fs icebp (bad) je mov rex.X stos (bad) or rex.WR rex.RX mov mov out repnz mov lods sar add xchg pop jge (bad) (bad) rex.WX add mov jno pushq mov xchg (bad) mov divl pushfq rex.WR test lahf push push (bad) (bad) jle jmp add lahf ja add iret loope push pushq (bad) ds cli jl rex.WRB rep cwtl callq sahf xchg mov push lock adc or pop (bad) sub mulb movabs and pop in sub and or or rcrb xchg mov mov test adc add cld sub (bad) rex.WXB cli adc (bad) ficomp pop add rorl add mov (bad) loope and or rex.WB mov lock sahf (bad) xchg adc adc (bad) pop inc adc movabs (bad) jb or test mov adc cmpsl adc mov cli mov hlt (bad) pop movabs rex.RX or mov cmpsl push or mov mov adc adc or xchg jl sahf cmpsb adc pop and jrcxz shl in movabs andl adc xchg adc pop icebp mov lock clc add (bad) in xor hlt or rex.RXB (bad) xor lock push rex.WRX sub jbe (bad) iret cmpsb lock rex.WRB nop jbe jmp xor add cmpsb add loope jmp (bad) mov rex.WR mov mov or mov lods mov mov movsl (bad) movslq rcl mov and or adc sbb mov retq fdivs std (bad) mov xor test or (bad) adc mov movabs sbb pushfq jge jrcxz and and lret lret cmp (bad) lret fcompl mov stos cmpsl movslq sbb movabs and jns vmread rclb or (bad) push xor rex.W rex mov mov rex.WR callq xchg rex.WRB lahf mov out outsb jbe mov adc xchg sbb sarl xor (bad) sub sub (bad) int3 rclb cmp jrcxz outsl and rolb sub fildll pop and (bad) fwait (bad) outsb rex.R addr32 jrcxz (bad) rex.WRB and push sbb sub (bad) pop (bad) (bad) shlb sub mov cld mov fstl xlat xlat (bad) sarb in repz hlt or rex.RB repnz (bad) push xor xchg xorl jo add scas lea mov (bad) int3 (bad) rclb and pop xlat (bad) jno lret add rex.RXB sbb jg mov lods mov xor andb push (bad) cmp incb xchg js fadd ss retq (bad) repz (bad) or stos xchg push cmp rolb subb movabs int3 shrq repnz fmul (bad) mov cmpsb (bad) sub jp scas movsb rex.B scas rex.XB fcompl (bad) lock (bad) out repz adc loop icebp loop adc fcmovb and (bad) or adc addb jbe (bad) clc sti or and movabs icebp mov insb es in adc lahf pushfq add add sbb mov cmp cltd (bad) mov (bad) mov sbb push xor scas adcb jrcxz (bad) mov adc sbb jns enterq xor or negl xchg or mov rex.WRXB rcrl sbbb negb sub movabs add jo adc sub jge mov rex.X (bad) or xor mov je pushfq enterq sbb data16 rex.WB rex.XB xor rex.WRXB sub insb cmp mov mov movabs (bad) test (bad) nop clc push xor jb push rcll lret xor movabs jo loop subl lock mov sub in fndisi(8087 xchg jmpq or gs push (bad) adc addr32 xor stos stos cmp mov (bad) adc fldenv xor mov clc loopne emms imulb mov (bad) lea sub sarl (bad) sbb sbb imul mov bnd lock sub rex.X callq (bad) sbb cmpsb fwait adc or (bad) mov rorl pop push sub mov (bad) rex.X js adc adc psraw mov cmpsb movsb sub adc mov or lret stos fildl sarl mov or mov movabs mov xchg mov (bad) (bad) repz cmpsl push out or xchg mov imul sahf mov fidivr in or (bad) xlat lock mov ja shlb in outsl insl xchg nop mov fcomps (bad) adc cli push cmp fs (bad) sub rex.R gs mov adc test movb mov (bad) (bad) jno or outsl xor mov add or cwtl (bad) (bad) jge rex.WXB loopne rex.XB lods idivl negl and adc (bad) fcomps and imul ss stos mov (bad) adc je mov jno nop or lods rex.WRX (bad) rex.WRXB test and add rex.WRB rex.WRX sub sbb shll xchg lods mov jmp rex.WXB pop adc mov ss sahf enterq or cmp or ficompl jg sbb xchg xor or sub roll test jp rcll sbb mov rclb (bad) xor sbb and adc jle add rex.WRXB rex (bad) rex.RXB xchg lahf rex.X fldl cmc xchg add retq (bad) (bad) xchg rex.WXB loope xor enterq rex.W add push push mov test (bad) test adc rex.B and mov xchg ss pop rex.RXB rex.X rex.B std cmpl shl mov xchg js mov lods lock adc or sbb adc ss mov jae sub rep (bad) adc pop movabs test rex.WRX adc test fsub adc push stc xchg sbb fwait adc xchg xor mov addr32 xlat mov fwait adc mov fidiv adc rex.WR or retq mov add (bad) (bad) mov int3 outsb jnp add outsl cli fsubs leaveq pushq test mov adc popfq jl adc stos repz adc (bad) cwtl jno (bad) movabs jnp or ror rol mov (bad) addl scas mov jmp xlat std sbb rex.W push out (bad) in (bad) adc add pushq pop jnp add pop (bad) (bad) pop mov mov rorb movsb xchg sbbb pop test xabort fsub (bad) loope sbbl xchg fadd imul popfq adc scas sbb pushq fsubl xor sbb sub rex.XB movabs (bad) popfq (bad) pushfq lahf (bad) pop (bad) (bad) sub adc mov sbb (bad) lods pop movabs jg mov adc movsl (bad) out gs mov xchg rorl jnp cmp out (bad) (bad) scas sbb xlat adc pop xor jbe jne jrcxz and mov add addr32 mov faddl iret (bad) pop cmpsb jno adc (bad) ss jge adc in xor (bad) (bad) sub (bad) mov (bad) or lahf (bad) data16 adc (bad) sub add jge or sti repz xchg cwtl out je outsb (bad) ds pop pop movabs xor iret rex.WRX (bad) rex.WRB sbb lea cmp or scas (bad) mov fwait shl cs je frstor (bad) and xchg cli js rex.X rex.XB rex.WX pop and cmpsl cmpsb out lods (bad) fidivl hlt mov rex.WRB test loope and ja jmpq rex.R js rclb jno xchg adc xor sbb add outsb sub or in jbe jae cmc js xor cmp xchg js adc movabs pop jmp fild movsb sarl psubusb (bad) pop clc lret rex.XB cmc sbb enterq jb (bad) ficom pop (bad) jb shufps jmp cmc incb cmp (bad) (bad) (bad) js and sub outsl popfq jns pop cmc xchg xor (bad) mov sbb movsl sbb hlt sub rex.B pop jmp js sub (bad) lret mov push fwait rex.WRXB mov (bad) xor (bad) xor iret repz jl add ror mov cmp (bad) fcomps (bad) addr32 (bad) and push loop mov xchg mov mov rclb and xor sbb out callq sbb (bad) adc add push pushq out fwait mov enterq mov subl rex.B repnz (bad) pushq rex.R mov lret rorb shl icebp cmp (bad) xor sbb push (bad) movsb add or add rex.WX jmpq cmp pop (bad) lods xlat push rex leaveq iret (bad) (bad) rex.RXB test add adc pop pop cmp and adc out pushq push rex.WRB and jo jae ja (bad) std lahf mov (bad) test mov in sbb sub (bad) (bad) cltd push test fisub retq (bad) notb (bad) mov insb (bad) clc pop sbb and rex.X mov adc stos mov mov xchg (bad) push cmp mov (bad) shlb adc sub lock jg adc (bad) mov pop rex.WRB and shl sub mov movabs sbb lahf (bad) jmpq push bnd xchg sub (bad) add push xchg (bad) jl mov loopne mov pop xchg adc sbb and movsb (bad) movsl sbb sub invd xchg xchg pop (bad) and (bad) shrl cmp sub xor rex.RXB rex.XB xor movsl lret adc mov sbb (bad) (bad) int3 fisubl shrl push (bad) jno sbb or js test retq jb in cwtl fistp rex.B fwait (bad) stos mov sbb fistpl adc popfq push hlt icebp fild imul mov xor (bad) je jb test jg and loop movabs nop and jo shll jmp movabs pop and pushq rex.X adc sub (bad) xchg lods out iret rorl sbb insl push clc and jmp repnz mov in and and pop cmp out and (bad) int rex.B push adc lret sbb xor (bad) xor sbb out test (bad) jno mov (bad) popfq fildll mov mov stos loope callq mov cmc adc retq sbb add (bad) test adc imul rex.X adc movb (bad) pop cmp cli (bad) jb mov and rex.WRXB push retq mov (bad) (bad) cmpsb (bad) and mov rex.RX test xchg movabs jnp iret sbb mov insl iret rex.WRX (bad) xor (bad) lret addr32 add adc repnz clc cld adc and adc (bad) sar insl adc fildll fbstp andl push rex.WB callq (bad) cmp sub jne and jb mov push mov ss mov cmp or rex.WR pushq sbb sbb xchg adc adc adc or mov rex.B mov imul mov or add imul (bad) iret test (bad) callq xchg xor jb push out adc or rex.W or jg mov cmp jmpq repnz lods or jg (bad) test xchg push push xchg adc or outsb xchg mov sub repnz adc push and test icebp sbb xlat jg rex.X movsb pushq leaveq sub fdivrl cmp xlat cmp int3 cs xor push mov movsb retq adc and (bad) jnp mov cmpsb rex.RXB gs insl add sbb lret adc pushq cmc (bad) adc repnz jo xor cltd mov lea jle lock ja jrcxz int fcomp int3 movabs adc mov gs stc fidiv repnz mov lock movsl cli xlat fsubr int3 jge sbb add int3 jl cmc xchg cmp sbb fcmove cmp pop xlat jno movabs loope (bad) pop add pushq xor test shll xor (bad) sarl callq (bad) rex std jmp push jb adc icebp (bad) and rex.R (bad) sbb add add stos pop add xor jbe and fs imul movabs (bad) cmpsl js (bad) callq mov xchg (bad) lahf stos push or movsl (bad) jne shl add (bad) rorb jno xor ss js and jb pushfq (bad) sub rex.R gs imul rex.B mov movabs sahf flds mov es pop and mov movsl clc ds icebp rex.X lods jne std mov subb imul (bad) push shrb cmc sbb leaveq hlt movsl in sbb sub (bad) mov or xor scas mov in pop (bad) stc xor imul in xchg add adc cmp int shrl sbb push add rcrb adc fs xlat lods push xchg xor stos cli add rex.RXB adc mov in adc (bad) jl xor (bad) (bad) stos (bad) or (bad) mov rex.WX xchg mov adc and cmpl mov mov (bad) sub rex.WRX loope xor int3 and jae cmp (bad) outsb outsl sub callq cld mov neg jne and and gs fbstp push (bad) mov icebp jbe adc fxch stc or and rol lret jnp rex.RB (bad) out data16 pushq (bad) movabs stos (bad) mov sub mov and outsl (bad) in mov adc sub andb cmp cwtl hlt xor push add loop (bad) (bad) mov and sbb mov cmc fdivrs enterq push ja sbb test (bad) and adc mov xchg std movslq mov push mov rex.RXB es xor xchg mov (bad) mov imul (bad) cmpsb cmc jmp adc (bad) adc jns mov pop cmp lods out jbe pushq or rex.WRB mov repnz adc rex.W je add push pop (bad) out pop sti rex.RXB (bad) mov mov lock add loopne adc jmpq xchg xchg imul out adc hlt sbb pop lock lods xor xchg (bad) xchg xchg xchg cld cmp adc pop adc cmpsl rex.RX es outsl lods in (bad) (bad) xor test jnp jle (bad) outsl jo movsl add pop rex.WRXB (bad) push insl (bad) mov push xchg (bad) (bad) push out jb movabs rex.WX pushq mov cmp xchg gs xor jrcxz movsl (bad) (bad) ja add (bad) sbb lock push pop (bad) pop rex.X add mov sbb pop out jo jbe xchg fwait movslq jg push cmp adc adc jns hlt (bad) (bad) xchg push cld xchg pop cmpsb and rex.WR and retq jl mov ror mov (bad) or xlat jl sarb sub xor rorb std adc cli sbb (bad) sbb xchg sbb mov mov in lret mov cld popfq mov int lods sbb pop sub fildll fistpll sahf fmul std out (bad) pop je mov outsb hlt xor shrl sub (bad) leaveq push mov (bad) fwait or xlat mov cmp pop cld or sub push fwait adc addl and sub jnp and movslq lods (bad) or rcll mov pop sbb xchg rex.WRB xchg mov in sti adc sbb shl in int3 xchg (bad) adc adc (bad) xchg sbb je mov cmp (bad) cmpsb out or pop push stos outsb mov push adc lock and pop xchg mov clc (bad) callq (bad) push fwait sbb lahf lock movsb (bad) jo (bad) jmp (bad) lea add add xor sbb (bad) or mov rcr adc (bad) int out fs (bad) jno sub callq and cltd (bad) idivb add cld lods fimul push mov sbb sti and jo xor je jrcxz in xchg cmpsl cwtl (bad) xlat icebp mov popq mov (bad) (bad) xchg (bad) std rsm adc xor ja xlat push sbb xor cltd in lods or (bad) leaveq test insl rex.WRX rex xchg rex.WRB sti cmp clc stos cmp xchg lods stc sub rcr rex.X fwait sub in mov cltd fnstsw stos (bad) add sbb nop sbb mov sub outsb fcmovnu fildll sub sbb jge mov or rex.XB (bad) sub (bad) enterq sbb cmp adc loope fdivrp add mov cmp enterq adc push xchg insl push (bad) pop lret es rex rex.XB mov (bad) addb movsb rex.WXB imul adc movabs in lock adc jl cld rex.WRX rex.WB xlat lret pop or or adc pop scas adc rex.X (bad) mov lock pop fwait jp xchg lock or push push adc nopl pop movabs loopne repnz int3 cmp faddp (bad) idivb jae pushq lock jge jrcxz (bad) movabs rex.WB push rex.RX out lock adc adc fcomps addr32 adc scas jg push mov (bad) jrcxz (bad) test rex.B rex.WR ss fisubr outsl gs push fmuls mov sbb sub sub sbb jl mov (bad) movabs or add rex.X xor test pushfq shrl callq lods and (bad) (bad) cmp sbb gs push lea in pushq nop icebp jno sbb push imul gs int3 rex.WRX xchg xor rex.B sbb sbb xor or cld (bad) and popq outsb xchg (bad) jae mov lea or xchg xlat (bad) jo cmp adc popq outsl rex.W mov add movabs mov movabs sub cli push adc (bad) sahf popfq callq adc mov jb xor sbb cmp cs or or ficoml cmp lea sub adc pop sub cltd jp mov mov sbb xor fdiv sub pop (bad) or xchg jb sbb or fs retq mov cs fmuls adc movsl sbb (bad) adc sub mov sbb rclb adc repz mov fcomps jge js mov loopne xor push sbb rex.RB mov pop jne adc stos pushq lock push pand fs fidivr jle (bad) (bad) lods mov rex.X (bad) (bad) jg xchg mov movabs mov xchg lods push ss xchg rex.WX add push sbb retq and movsl pop xor jl and hlt stos movabs sub (bad) and (bad) cmp movabs leaveq pop xchg jle lea add pushq ror adc lret shll (bad) in scas jno stc shll add sbb pushq pop (bad) and cmp outsb movsl mov mov sbb bts adc xchg adc add out sub lret xor jb xor and cmp gs cmp adc or (bad) retq rex.WRB or (bad) movabs rcll out sub cmp (bad) stos rex.RB stc js rex.WRB adc (bad) movabs jmp out insl xchg xor js rex.WRX jbe or and stos jmp (bad) (bad) or (bad) hlt rex.WX sub pop scas out jp fwait mov adc imul lock (bad) fs outsb insl xor push cmpsl (bad) and sbb or xchg cld ficom insl leaveq ja out scas jl and adc rex.W sub (bad) adc adc mov clc push pop adc int lock lret xor in (bad) cwtl cli sub (bad) rex.WR pop (bad) and (bad) (bad) (bad) sub mov ds cmc pop ja and (bad) mov mov popfq pop sub shrb pop add mov cmp (bad) hlt add hlt lock xor mov hlt retq int3 (bad) push jae (bad) negb or testb fidivr adc movq jl xchg rcl movabs jg nop xor (bad) (bad) jl pop rex.RXB out decb shrl mov rex.XB (bad) pop (bad) mov hlt incl add pushq rex.RB xor (bad) xor xchg retq rex.X fs sub mov out stc push loope add push pop sub addr32 insl jo (bad) fsubrs repnz clc sub rex.WR int loop cld movslq sub (bad) imul (bad) (bad) sub outsl ja mov mov mov pop fs sub or jnp callq mov pop jbe (bad) (bad) fcoml add out iret rex.WR xlat movsb pop sahf push (bad) lret (bad) mov fcmovnbe (bad) adc (bad) enterq xor mov sbb and fdiv mov push movabs retq add jmp mov and (bad) cmc std (bad) sbb outsb popq lea rex.RXB sub sbb (bad) cs mov decl ja movsb (bad) cli mov (bad) out sub pop sub sbb mov je movabs (bad) cmp add mov (bad) jo fisubrl jmp (bad) mov xchg (bad) jmpq lret test xchg cwtl addr32 mov sub pop adc fdivrl add rex.WRXB adc mov (bad) data16 (bad) leaveq stos sub add movslq cmpsb fwait adc rex.RX jge (bad) outsb and (bad) rex.WRB adc mov fmuls shlb popfq rex.R (bad) adc movsb stos test adc rex.XB lock rex.WRX (bad) and cltd adc add push (bad) (bad) xchg cs fdivrl pop pop (bad) xchg in jb sbb mov (bad) fist addl mov int add fwait jrcxz shlb fldl lods retq cmpsl pop mov pop pop mov (bad) bnd sub adc xor leaveq (bad) mov int3 cmpsb mov pushq repz (bad) (bad) jp fdiv adc add shll loope or retq cmp sarl in mov sub (bad) stos mov adc lea sti sub rex.WRB pop pushfq cld clc rex.RX push jge jge (bad) shll adc orb (bad) lahf (bad) pop clc sbb and rex.WXB in rex.R fs lods sbb (bad) movabs loop rex.XB push sbb movslq test sub mov and xchg xlat mov add adc mov pop pop movsl lods rclb (bad) adc adc outsl jno lea ss ja mov callq mov (bad) (bad) ficoml outsb lea cmovbe fisubrl test add movabs sub (bad) out adc cmpsb jl sub retq loope movsb insl cmc mov je add (bad) (bad) lahf cmpsb out lock and (bad) push and mov adc rex.W addr32 jne adc sub xchg repnz (bad) iret mov mov adc mov xor adc (bad) movsl imul cmp rex.WRX (bad) adc adc imull or stc cmp or add (bad) sub mov push sbb movabs cmpsl sub (bad) clc jns pop xchg in (bad) imul rex.XB jno movabs cmp out (bad) and xlat vpunpckhwd (bad) clc fwait loop (bad) adc mov sbb xor adc fsubr xorl fs (bad) rex.WR jno rex.XB rex.RXB int clc adc and pushq fist callq (bad) xor shrb test adc and xchg jbe out cld adc rex xchg push rex.X out cs pop pushfq mov (bad) mov jo fildll (bad) and xor jb mov loope xchg cwtl notl sbb adc jp adc and adc push fnop rex ss out rclb lahf sbb jmpq retq lret add xor (bad) sub xchg xchg ljmp in out jo jb lahf mov loopne sti and lahf or enterq lea xor pop pop ror xchg jnp pop xchg lods (bad) cmp sbb fldt iret ficom (bad) jp enterq jmpq (bad) mov jle test mov pop and out add push leaveq (bad) mov cmpsl js sub xchg cmp movabs xor and or jl and adc xchg (bad) adc in ss jrcxz gs (bad) cli (bad) xchg negb mov lock adc testb (bad) jo and out sahf jnp jrcxz sub and and orb fwait jns imul in cmp std mov sbb jo lret (bad) subl add xor fmuls rex.WR xor callq mov movsb sub (bad) cld clc addl sbb xchg xchg (bad) sub jne xor (bad) maxps fmull sbb jne push cmpsl mov in cld (bad) (bad) pcmpeqd or adc movsl shrb iret rorl or (bad) fisubrl xor movabs fdivr cmpsl fldt or add jns gs pop int data16 rex.WRX and adc (bad) cmp cld lea mov adc out out mov mov fsub sbb clc (bad) xor stos xchg or fs (bad) sahf adc test sets mov (bad) pop cmp (bad) movabs sbb popfq xor bnd add roll mov cmc movsb rex.WR rex.WRB and xor adc adc (bad) jae rex.WRXB pop fimul out sbb retq (bad) jmp add rex.R mov jnp bndldx add jns outsl lea rex.RB rex.XB (bad) pop shrb xchg hlt (bad) leaveq js and cmc fcompl xlat cmp xor rex.WRXB push rex.WRX push hlt testl adc (bad) movsb sub int orl cmp fnsave adc pop (bad) cmc retq adc push xchg scas sub (bad) (bad) mov and (bad) adc fwait pop cmpsl (bad) adc lret test iret (bad) cmp or mov jae (bad) pop push (bad) jmpq and jbe cmc adc incb mov adc adc (bad) movabs (bad) adc ror (bad) (bad) sbb std jl cmpsl mov scas xor clc stc addb rex.XB rex.XB shrl xor adc rex.WRX (bad) js jrcxz fs cmp cs (bad) repz pop and sub (bad) pop rex.WB jg pop sbb (bad) lahf mov sbbb (bad) sbb (bad) pushq adc sub xlat xor (bad) flds sub fisttpl (bad) mov lahf repz (bad) out xchg add (bad) js lahf jno (bad) jne cli rcrl and mov (bad) js mov adc sub add lahf movslq lock loope sbb (bad) mov jmp rex.WRB sbb outsb xchg (bad) repnz je enterq fmull lea clc rex.WRX cs and jb gs and mov fcoml xchg imul cltd add adc push stos or push (bad) in gs or xchg cld loope js (bad) sbb push cmp movsb cs and jrcxz out xchg xchg adc xchg push xor fsub rex.WRXB adc mov fstpl lret popfq or jp (bad) rex.RXB sarb mov xlat notb cmpsl add (bad) test or imul imul repz shlb rex lock sub (bad) sub rcr mov jnp xchg ja and rex.RXB mov movabs adc outsl scas and and jmpq insl jbe adc or mov rex.WRX xor mov pop mov rex.R js rex.XB xchg cmp add mov (bad) sbb ss (bad) popfq fbstp (bad) (bad) xchg cmp scas add mov mov loope lea adc xchg popfq push cmp cltd loopne or test in int3 mov loop stos std and imul fsub (bad) (bad) sub xchg mov sub fsubl (bad) pop test (bad) pop (bad) jb fistp stos sbb cwtl pop xchg popfq incb xchg rex.WB repnz sub (bad) (bad) testb int3 (bad) sub (bad) or pushq rex.RX lret mov or movabs add mov cwtl jmp sbb adc pop sbb fscale rex.WX xchg (bad) nop push in xor sub stos rex.RX retq rex.WXB mov xor fsubrl and push (bad) cmc sbb mov lea mov mov xadd pop mov (bad) jno lods pop stos xor (bad) xchg jp lods mov ficoml cmp out fcomps sub movabs (bad) mul retq cmp rex.WX jnp (bad) xchg and add or (bad) xchg pop jp gs retq rex.RXB rex.RX cmp idiv or icebp xor fisttpll movslq addr32 fbld xchg xchg out or (bad) xchg outsl adc or (bad) add cmp mov (bad) add (bad) loopne fs cld enterq adc sarl cmc cmp fldenv (bad) mov pop orl adc (bad) lods push cmp (bad) in sub cld andl fwait sbb (bad) mov adc sti sbb (bad) outsb outsb or adc sub lods js jnp rex.B jrcxz or fmull xchg (bad) (bad) (bad) jg pushq je test (bad) fldenv (bad) sub orl movsl or faddp rex.WRB shlb (bad) and mov repnz js cltd cs xor cs mov fnstsw popfq adc and loop hlt xchg jnp adc (bad) rex.WR rex.WXB xchg mov xchg movabs std stos pushfq (bad) jne pop frstor (bad) mov (bad) stc jle push rex.WR movabs (bad) mov rol out mov (bad) pop sbb add push (bad) lods adc rex (bad) ss fs cmp mov addr32 ss (bad) adc pushq inc xor or jl cld jns fmuls pushq test sub int3 (bad) pushq mov push xor sbb test adc xchg sbbl rex.XB and sbb or es push mov (bad) test cmc jg mov enterq add jrcxz sub xor andb cmp push rex.RB rex.R rex.WX rex.XB rex.WB add in movsb (bad) cltd in (bad) jo rex.WB lock andl jb sub jge cmc (bad) mov imul and cmp mov sub sub movabs (bad) negb cmpb jrcxz rex.R in push mov (bad) mov jge sub xchg cmp lock sub or je retq adc xor cltd sub mov push std popfq (bad) (bad) loopne int3 in jae je sbb rex.WB (bad) xor rex.WX add xor rex.B sbbl cwtl push cmp xchg pop rex.WR and sbb push rex cwtl repz std cmp mov or sbb sbb (bad) (bad) (bad) add fsubl (bad) enterq lock pop (bad) (bad) negl mov test sbb rex.B ds xor mov rex.WXB pop adc divb adc lods xchg sbb jno or jmpq mov mov (bad) (bad) jbe adc out rex cmp cmpsl mov ss (bad) add (bad) jo sahf and rex.B cmpsl add adc (bad) mov adc (bad) jl (bad) imul xchg stc (bad) rex.X push rex.WRB pop and mov mov add nop jno fwait pushq cmpsl test adc xchg (bad) ja cwtl pushq adc xchg icebp cwtl push (bad) jmp mov mov stos mov cmp adc jmpq es push rex.WR ja js ds mov js (bad) xor sub loopne adcl notl shlb cmp test cltd jne cmc std sub mov jno rex.RXB out pop callq hlt xchg lock cmpsl enterq and fcoms push xor push (bad) sub jnp jns (bad) pop fdivs insb xchg xchg rex.WXB (bad) cmp retq xchg (bad) data16 or cmpsl adc nop js fstps rex.WX cmp mov lock mov rcl cmp fsubl addl (bad) movslq rex.XB sbb subb jnp (bad) cmp (bad) xor in (bad) cmp fnstcw cmpsl xor mov loopne add mov lret (bad) clc insb rex.WRX fs pop callq fisub or movabs and out fistpl fcoml pushq push pop fistp or repz imul adc insl int3 xor stos notb movabs sbb rclb pop jo push push mov mov xchg jp pushfq pop adc pop lahf std int xor jge adc clc adc (bad) rorb rex.WXB rex.WX xchg cmp lahf adc fs mov jo sbbb xchg jl je add sbb test scas sub jmp push add and fist xchg shr sub jbe popq out nop hlt mov std add and repnz push cmc jnp ffree (bad) cmp imul test and lcall rex.RX (bad) mov or sub addl jmp xor adc sbb pop fistl jg ss enterq je scas adc xchg movsb or rex.B sbb add and out cwtl xor callq cmp (bad) (bad) insl and clc ja cs and (bad) pop rex.WR xor xchg mov mov movabs test jne,pt (bad) jno ror je callq xor (bad) gs mov add xchg cs pop push subb sbb mov rex.B sbb ficompl xchg out mov and push movabs and sub xchg (bad) and (bad) icebp jb repnz shr (bad) iret add add js sub cli cwtl psubusw popfq (bad) test jle in push mov movsl or mov (bad) test (bad) cld (bad) adc icebp movsl jno jmp mov imul movabs (bad) in int and cmc fwait (bad) lods loope callq and pop rex.RB lock add jnp lods and int3 (bad) jns rcll sar outsb jle xchg mov (bad) or (bad) sub psubsb mov rex.XB (bad) xchg cmp sbb mov (bad) rex.WB insb jmpq pop sbb insb add sahf xchg insl rex.WRB pushq xchg sbb (bad) rex.RB mov xor in sub in xchg (bad) pop (bad) or rolb mov movslq lret cld pushq mov rolb fwait mov (bad) mul loope stos adc rex.X in sbb retq xor mov adc pop mov cmpsl jo (bad) in or fwait or insl pop jno xchg cmp subl lahf pop add adc sub outsl xchg retq (bad) add xor mov xor rex.WRB pushfq movabs stos and push adc mov (bad) in adc js add (bad) (bad) pop (bad) xor cmpb adc jbe jl rcll (bad) mov stc add adc mov jg mov rex.WX adc pop sbb lods adc cmp test adc mov jp (bad) (bad) je movsb rex.XB rex.WX lretq or je int and int3 mov leaveq pop jle js (bad) movabs idivb div (bad) cmp push jno (bad) (bad) adc (bad) pop xlat jge movabs xchg rex.RB xlat xchg (bad) imul outsl pop (bad) (bad) pop (bad) pop repnz enterq mov mov and mov jmp in outsl leaveq (bad) xchg loop (bad) mov xor retq mov or add xor rex.XB retq test jmpq add jp (bad) lock and and je sub es mov jns fisttp lock adc test mov or out sub scas pop (bad) lods add pop add mov cmp (bad) lock mov add (bad) jo cmpsb rex.WRX retq in lret rex.WRX je (bad) (bad) loope (bad) movabs pop stc rex.WB imul in xor jo sub movabs movabs xor out fnop testb and mov rex.X sub jnp js sbb fisttpl ficomp cmc push xor iret sub retq or test (bad) rex.WRB jb (bad) je cmp int3 add mov callq mov icebp sub mov and sub xlat mov (bad) sub rex.WX jns sti push adc lret retq rex.WB rex.WXB mov adc (bad) add (bad) pushfq push and (bad) push stos rex.WXB bnd push or in pop rcrl push jne pop sbbb int3 sub mov mov (bad) shll adc rex.RX out stos mov adc pop (bad) movabs push adc jb sarb faddl lret insl xor adc or mov adc sub xchg rex.R cltd or push sub js notb jmpq mov xchg pop mov and jb mov callq jbe jmp int cltd rex.XB add outsb mov decl sub data16 mov loop and jl fsubr stos pop js mov rex.WRX rex.XB sbb and icebp out sar push or rorb mov icebp (bad) (bad) insl add sub (bad) test shlb rex.WX je rex.WXB leaveq fistpll sbb (bad) lock cmp mov and loopne pop lret (bad) test rorl mov mov std rcll mov cmp rex.WX (bad) subl rex.WRX and cmpsl insl adc (bad) mov lret imul cmp sub mov movabs jp (bad) jge (bad) ss (bad) or cs bswap add adc repnz ss scas sbb push mov lea push negb fimull insb or cmc icebp jp push rorb rex.WX movabs adc out lahf nop or and pop xor adc flds pushfq sub rex.RB mov mov xchg cld lahf mov adc fnstsw orb xchg test mov rex.R rex.RXB rex.WRX mov or push jae imul testb or jno lock jbe test mov fadds cmp cwtl rcll test movabs sub lods popfq movsb sub sub pop (bad) and or mov je fmul or callq (bad) lret and in mov (bad) xchg mov push (bad) test stos sbb movb xchg jg cld add pop push add and sbb (bad) fbld movabs sbb sbb lods mov (bad) and and (bad) lock (bad) jb and mov cmp adc pop adc jb (bad) imul cmp (bad) (bad) sub add jg mov adc adc mov lock (bad) movabs fnstenv addr32 rex.WX sub mov or gs lods adc mov rex.RX lods out mov (bad) jmp (bad) hlt push mov adc loopne movsl rex.WB icebp adc and movsb adc push idiv jle mov sbb (bad) sbb retq or ds and (bad) mov sub imul movsl movl pop jg (bad) repnz pop cmp cmpsl jno xchg ss (bad) xchg rex rolb scas in andb icebp jbe outsl jns mov int3 pushfq rex.RXB js mov sqrtps sub xor rex.WRXB in (bad) jmp (bad) (bad) mov sbb and (bad) (bad) (bad) pmulhuw rex.XB adc pushq (bad) (bad) jne xchg rex.X repz (bad) (bad) enterq pop je xchg (bad) add movabs movabs jns xchg rex.WRXB sbb mov pop (bad) mov (bad) lahf movabs retq and stc in std int int sub jne (bad) xlat jp xchg imul es (bad) subb push cmp add mov pop (bad) (bad) mov jmpq add (bad) (bad) enterq sbb push add rcrl movsb xor pushq add rex.WXB (bad) add nop ds movabs rex.RB adc gs insl mov clc xor js push je movabs rex.WRXB sbb sub and push xchg (bad) pop es (bad) xor xor mov push popfq test (bad) xchg fcomi stc (bad) rex.RX adc fs (bad) (bad) add test fisubl cmpsb callq pushq (bad) std lahf jp mov pop adc sahf fcomps push fdivrs (bad) add or fist mov cltd sti (bad) fcompp pop lahf cld mov (bad) (bad) cltd mov mov adc ficompl es sub xchg loope (bad) mov pushq xchg test sub adc mov test ja cld test (bad) clc mov insb (bad) cmp rex.X pop ljmp callq push mov rex.RB rex.WX js,pn mov cmp lock mov jmp insl out sbb mov stos rex.WRX ss repz or adc movabs add retq loopne and (bad) cltd xchg xchg rex.WXB int rex.WRB movsb adcl or imul (bad) cmp loope cltd (bad) xchg and in mov cmp (bad) mov or sbb mov adc pushq mov or and push rex.WXB (bad) (bad) loope pop pushfq addr32 cmp callq mov xchg adc rex.X test xor adc (bad) xor out (bad) loopne out notl adc mov andl or rex.WRX (bad) mov rex.XB cmpsl pop mov jrcxz or cs (bad) rex.WRX (bad) jl leaveq xlat adc ja pop adc push (bad) (bad) mov adc add push mov mov (bad) sbb vpsllw sar sahf and rex.W mov mov xchg ss outsl sub xor outsb movabs rex.RXB stos imul retq iret push rolb add movabs (bad) fidivr movsb sbbl loope imul xor clc sti or adc pop add (bad) callq (bad) cli sbb mov adc rex.WRXB mov or xchg xchg xor (bad) (bad) rex.WXB test adc mov out jmp ds lock outsb icebp cwtl (bad) xor (bad) pop mov (bad) or jbe leaveq test (bad) fstpl setbe insb adc int3 and outsb sub (bad) hlt adc (bad) rex.WR push and js mov (bad) es sub lods shrb and adcl jnp jg pushfq sub add fs (bad) push mov movabs es sahf xchg pop lods xor lea stos and jne cltd xchg callq rex.X add addl add adc (bad) sbb cmp sbb orl xor addb leaveq fcoms jmpq sti fcoms rex.X xchg (bad) push leaveq xchg cmp push pop repz cmp (bad) repnz lahf js (bad) push in clc add and int (bad) pop nop (bad) test frndint add pop rex.WR fwait or jmpq (bad) adc (bad) xchg outsb and rex.WRB (bad) ja or lods cmp adc fcmovbe data16 movabs (bad) push enterq jrcxz xchg sbb stos xor js add es mov xor rex.WRXB rex.WRX rex.RX rex.WR (bad) (bad) xor rolb (bad) loope lods iret (bad) xor push mov or jo fsubr notb mov mov xor (bad) jl hlt lahf and cmpsb push (bad) fsubrl sub mov (bad) push adc icebp adc pop or xchg and addr32 xchg adc (bad) cs (bad) mov (bad) cmpsl (bad) fildl (bad) cmc icebp xor (bad) sahf out out out out xchg sbb mov xchg pop pushq stc rcrb and popfq (bad) sbb iret clc sti push xlat cld repnz cmpsl lea push mov sbb push add jne imul mov (bad) xchg adc js xchg (bad) and fsts nop (bad) or ficompl rex.WRB loope pop rex.WRX or xlat leaveq mov cmp adc (bad) (bad) (bad) xchg or lret lret outsl add rex.RXB fwait (bad) pushq mov (bad) rcrb test imul jns out shlb lret lods (bad) (bad) jae rex.RB repz cs cmp pop (bad) js push pop lahf adc out or (bad) rex.RXB or mov mov add adc insb out fimull jno js ss sbb pop rex.XB and xor scas lea loopne mov xor or ljmp pushq loope movsb lret adc (bad) push ds pushq xor xor adc pushq (bad) adc sbb jrcxz clc mov jno,pt in cmp jne leaveq adc jl fcomps adc insb imul xchg std lock rex.WRXB (bad) and movsb jno push (bad) repnz in mov (bad) mov (bad) or hlt enterq mov fadds xor xor rex.WB enterq int3 sub (bad) sub push lods sub hlt add (bad) (bad) faddl xchg mov cmp (bad) xchg fistp cwtl rex.RXB adc adc cli jmp (bad) or cmp xchg push out push icebp cmp mov sub jge (bad) adc jmpq and or mov rex loope sbb fistl rex.W xor retq jrcxz mov sub rex movabs insb (bad) sbb add sub enterq out callq push xchg push mov sbb adc (bad) sbb sub (bad) enterq sbb add ds sub leaveq mov lahf fdivrs rex.WRX adc adc jb lahf (bad) leaveq retq cld (bad) retq in jno add and pop sub pop std fcmovnb (bad) outsl movabs (bad) mov and cmp mov (bad) push iret movabs rex.RB (bad) pushq imul int3 (bad) mov and rex.WB xor xchg (bad) lea (bad) sbb repnz xor notl test lods sub and divb cmp cmp movabs jb xchg pop adc (bad) and gs out and mov xor jl jns in rex.WRX jl (bad) sub ja cmp mov je enterq pop je lret xchg adc sub shr jne,pt jbe add sub pushq ja xchg jrcxz jne mov shll xchg jbe cmovne (bad) movsl xlat rcrb mov mov jmpq adc (bad) pop jne std lret (bad) retq (bad) pop mov leaveq (bad) jmpq int xlat (bad) rex.WB negb xor adc and xchg jns sbb mov mov out push in push jbe retq mov loopne xchg rolb sub iret cmp or adc rex.WX std popfq (bad) loope fcmovnb xlat ja js or xchg in (bad) int3 sarl fldt cmp scas xchg test jge imul (bad) add adc (bad) sub cwtl sub mov callq loopne out nop in (bad) sbb adc cs cmp data16 jl mov jno (bad) mov jno push (bad) repz lock sub rcr lret mov testl sub (bad) nop rolb sarl jne (bad) mov lahf popfq add notb scas rex.XB or (bad) popfq outsb or rex.WXB push (bad) mov cmp push push push xchg callq (bad) fwait test (bad) js rcl mov (bad) pop xchg stc jo rex.WR rex.RXB fmull rex.WXB mov adc ds rex.WRX rex.WRXB fwait stos mov rex.WB or mov cmp icebp xchg (bad) push test (bad) (bad) jmpq addr32 (bad) xor mov repnz cmp xchg jl (bad) scas sub mov (bad) testl es fildl out fwait cltd int3 xchg jne test rex.WX pop mov jg adc pop je jnp mov jrcxz repz mov sbb sbb add rex.WRB in dec fbld loopne scas icebp add xor enterq lods mov xchg and lret imul sub adc adc jrcxz (bad) jmpq incb lret (bad) retq adc rex.B and in movabs imul (bad) mov int cmp (bad) int and cmp jns jle jmp xor (bad) loope and loope pushq mov jp retq (bad) rex.WX int3 cwtl (bad) sub mov fisubrl add jmpq cmpsl (bad) xor enterq pushq cmc jno outsl (bad) or mov icebp mov mov mov shrl rex.XB (bad) rex.X fildl (bad) add and mov pop mov mov shll pop adc adc adc add and xor sub fcom rex.X shr push push sub sub cmpsl mov loope jmpq (bad) sahf (bad) push xchg enterq movabs movabs adc (bad) rex.W adc add mov lea mov sbb xlat rex.WRX xchg (bad) retq (bad) cmp (bad) xchg fild scas gs mulb and data16 enterq (bad) jmp and vunpcklps rex or or cmp int3 adc (bad) mov mov adc xlat lock out adc xchg adc pop adc sti mov popfq (bad) and (bad) scas adc js imulb test sub fdivl insb (bad) adc (bad) in out jrcxz gs fdivrs (bad) (bad) xchg adc pop jle (bad) lret adc mov adc clc fidivl movups (bad) xchg insl (bad) adc (bad) jg popfq in adc xor (bad) rex.B rex outsb sub rex.WRXB stos (bad) out and (bad) xchg push retq (bad) gs pop lock mov in xchg mov insl subl iret lret sub sub xchg push lret out add sub jle sub jge add fmuls push repnz cmc (bad) repz (bad) push push out jl or movslq sbb adc xorb out jmp scas adc outsl movsb adc or iret push rex.B rex.XB xchg stc lock sub cmc mov add (bad) insl xchg adc (bad) test scas pop rex.RX in sub mov cmp adc jns (bad) jne (bad) lock adc add nop push adc cmp (bad) clc adc (bad) out scas fmuls ss add adc (bad) jo sbb jrcxz pop enterq sti leaveq cmp test stos sub sub rcl out rex.WB rex.WB pop rex.WB out sbb out pushq hlt (bad) jne rex.WXB jbe mov add cwtl jns pop and outsb lock idivb rex.RX xchg fdivr mov cmp sub lock movabs jl repz fs xchg out mov mov pushq sub cwtl mov adc xchg jle popfq sbb pop sub imul push rex.WRB mov enterq imull (bad) fisub shrb push sbb rex.RXB adc push or add pop fbld rex.WB ja adc xchg pushfq icebp mov push pop (bad) int rex.XB fistpll (bad) out negb (bad) add (bad) cld sarb (bad) jp ds outsb cmpsl adc sub test xchg sbb imulb adc xchg xchg shll (bad) adc int xor clc pop jmp rcll adc (bad) frstor stos jne fistpll (bad) xchg jge fisub (bad) and mov lock cmpsb rclb xor xor gs sbb push xor callq and sub adc ja test (bad) add leaveq push xchg mov sub add movabs lret rex.RXB add rex.WRB or (bad) imul sub pop mov (bad) and imull mov and mov cmp sahf jmpq je xorl mov cltd (bad) xor mov (bad) mov gs fistp insl cmpsb enterq sub fisttp or mov (bad) mov sub jno callq (bad) sbb and outsl nop rex.B fsubrl fwait or fwait sub sbb lret (bad) and test sbb jne repnz (bad) (bad) out push gs jb cmp jb xchg repnz js rcl movabs lock xchg (bad) xor and callq rex.RX pushq in (bad) adc rex.RX add push mov iret adc out js mov fsts add jne mov addr32 mov mov mov shr adc and and clc popfq pushfq rex jle enterq retq rex.WB cs (bad) js sbb fist adc (bad) cmp sub movsb sub rex.WR adc adc (bad) mov (bad) (bad) lods in out adc (bad) gs (bad) rolb rex.RX cli imul or movabs and rorl sbb or int3 jo sub (bad) fdiv adc and cld cli jg sbb cltd enterq sub outsl sbb clc jmp fbstp imull xor cltd mov adcl mov jrcxz pushq xchg sbb out jmp rex.WXB (bad) cmp movsb add mov es callq and push lahf std (bad) sarl fwait jmp jb mov rex.X test mov rex.R add jmp (bad) adc movslq stc push fwait jno addr32 and fmul (bad) (bad) (bad) rex.WXB jmp vmovshdup out pop (bad) pop (bad) and loope adc mov scas mov mov repnz movabs pop adc mov push mov andl (bad) fldcw jp lock hlt jnp fild movl xor adc and retq movabs sbb sub roll add fildl (bad) (bad) add mov cli std push mulb imul jns fwait (bad) mov add add mov jp add and retq movabs mov fidiv stos negb add mov sub push rex pop sbb out loopne imul pushq (bad) (bad) or out (bad) mov movsl nop (bad) (bad) mov xor (bad) (bad) fsubs movabs adcl and jg mull adc xor rcrl pushq mov (bad) and (bad) sub movb xchg mov cmp js pop and jb ficoml mov int cmc (bad) pushq rclb (bad) xor jb movabs mov pop cmp adcb jb jns mov (bad) in mov add fldenv push fidivr (bad) fdivs clc (bad) mov mov (bad) jl adc mov insl hlt xorb callq (bad) jmp lea mov mov movslq pop xchg pop fnsave leaveq insb mov movabs rex.R cmpsl movslq (bad) jo rex.WRXB stos sahf xchg pushq mov jl xor in adc mov jno (bad) stos jae add pop (bad) xor (bad) cmc pop (bad) in push fwait sbb mov (bad) lea sbb movabs jmp pop movabs ds retq sbb add cld or retq cmp xchg mov add xor fwait jns in (bad) retq sub mov notl in sbb clc test jge test and movsb (bad) push int mov mov (bad) cmp (bad) cwtl and cmp loope int pop adc lret rex.WX sub lods xor lahf xchg int xor push add movsl shlb mov out add retq adc retq or lea adc imul xchg mov in jae cli cmp repz mov and rex.RX mov pop adc lret insb push test add movb retq (bad) (bad) mov adc jp sub lock rex.WRX clc mov jge adcl push (bad) xchg jo (bad) (bad) scas lock cld negb xor xchg pop js rol sub sub sbb js fidivl lcall retq movabs cwtl sub rex.RXB es lea div cmp mov mov xor and xchg rex.RB xchg cmp sbb adc mov movabs movabs stos clc sbb xchg mov test (bad) mov loop test push xchg fcoms loope pop movabs in xchg (bad) push sub adc orl (bad) push (bad) (bad) repnz mov (bad) (bad) fisub add sbb (bad) rex.WRB test (bad) out in jb push rex.X (bad) rex.WX mov adc icebp (bad) add adc movabs lahf push jmp jbe rex.B rex.WX je fdivl adc add adcb pushfq and (bad) push mov and adc test adc or movabs mov inc adc jge adc idivl fsubrs lea (bad) mov iret or rex.B and test sbb xchg rex.XB xor adc loope test mov adc scas jp insl push repz pop xchg rex.WRX (bad) in xor add add (bad) insl enterq sbb cltd pop push adcb callq fcoms je and xor scas pop ss imul (bad) jne scas rex.WR scas (bad) pushfq add (bad) data16 clc rex.WRB (bad) push (bad) or lods and loopne xchg jge rex.RXB rex.RB xchg adc cltd sbb callq cli cmp push out rcrb jmpq xchg xor js (bad) mov add push cs leaveq adc pushfq rex.WX jg adc in xor mov test adc fldcw fwait adc pushfq jge rex.B xchg xor adc ja jbe or rex.RX xchg adc test rex.WB rex.W addr32 add adc cmp (bad) mov add movabs mov lahf rex.X lock test callq repnz add sub and repz loope adcl cld ja (bad) cld loop jno xor insl mov mov mov add mov cmpsb push retq mov (bad) (bad) movabs push add scas adc jg or push xchg cmp (bad) sbb rex.RX outsb imulb (bad) movsl jrcxz (bad) cmp cmc rex.R mov sub pushq out sub movslq adc push mov xchg (bad) jrcxz clc rcll or and incb rex mov (bad) jae rex.RXB repz xlat mov callq insl (bad) pushfq xor repnz rex.XB (bad) cmp clc sbb test not rex.WXB and push push adcb adc xchg adc stos mov callq cltd add rex.W jno add jp sahf add jl (bad) scas (bad) add (bad) imul out (bad) push (bad) subb (bad) int xor rex.X in stc test leaveq retq mov mov lea movabs je insb or (bad) lock or cmp cmp cmp adc in lahf adc adc rex.WRX clc adc mov cli jnp fdivl mov add cs cwtl push (bad) rex xchg mov rex.WXB push push mov stc cwtl jnp int and or cli lea mov mov or outsb sbb (bad) xchg xchg (bad) push jl,pt callq pop mov pop or pop xchg push (bad) fnstenv and cmpsl stos movabs js out (bad) lahf out callq test retq mov cs mulb mov (bad) repz (bad) outsl test nop (bad) and fs (bad) imul (bad) and (bad) and cmc adc xor int sub negb jge hlt mov lock and xchg (bad) ds adc (bad) (bad) pushq mov xor adc xchg adc jbe test es insl nop adc nop pop pop movsl adc sub (bad) mov rex mov loop mov cs test jo mov (bad) pop lods or mov xchg rex.WXB sub leaveq scas add xchg (bad) push mov fstps outsb (bad) stos push cmp out lret mov jae fmull xor loopne movslq adc movabs adc in int3 mov cmp jno outsb rex.R rex.RX (bad) rex.R xchg stc pop rex.RB adc stos (bad) push mov push and jl hlt retq add movabs mov sub (bad) xor int3 mov leaveq mov (bad) int popfq scas jno subl mov icebp mulb or fucom sbb std rex.W pop rex.WB mov or mov or jmp pop icebp adc xchg rex.WRX (bad) and xchg movsb xchg push pop sbb je sbb out (bad) out stos sub leaveq and or test and movabs rex.WRB test cmc xchg (bad) outsb sahf adc leaveq xor cltd xchg movabs loop fsubl adc outsl xchg push mov movsb (bad) (bad) rex.W frstor in adc retq in xorb out sbb test cltd (bad) xor xchg jno (bad) clc cwtl mov and (bad) mov int mov adc or std or int3 lea loope sbb sbb rex.R (bad) add pushq push xor (bad) mov (bad) xchg pushq adc rex.WR in scas or sub (bad) int clc add adc outsl jns pushfq mov icebp xchg xchg loop movabs rex.WRX sbb test jb push or rcrb andl (bad) notb (bad) cltd frstor fistp in mov xchg mov imul test xlat cmp mov push int3 cmp xchg clc lods adc notl xor jnp in int3 adc sub std test stos mov or push adc xchg pop jo (bad) enterq pop (bad) sub mov xor or xchg fs adc and rex.WRXB sbb callq movsl adc callq xor movabs jno pop or in pop and (bad) nop mov jge push sub scas pushfq cmp rclb rex.WRX rex.WX or retq mov fcomp (bad) scas (bad) pop mov or (bad) (bad) scas mov mov mov (bad) jge xchg sbb (bad) std jnp jg js faddl mov cmp cmpsb pop and rol icebp adc rclb jge cmp jae lret push xchg xchg cmpsb fwait push lock imul (bad) callq (bad) mov rex.RXB cld adc sub fcmovnbe imul callq lods add rex.WX cli retq or clc retq cld leaveq in sarl fadd rcrb out and out and and leaveq (bad) or or movabs jle sub retq lods and rex.XB mov or rex.RXB mov (bad) (bad) (bad) adc or sub (bad) hlt sub pop int3 addr32 movabs notb mov nop push movabs mov test pushfq xor insb (bad) mov (bad) imul jge mov xor stc add stos pop (bad) movups sbb mov jmpq and rex.WXB rex.RX (bad) insb add and jl sbb out out loope clc pop push and rex.WB cs pop rex.X rex.RB and insb mov rex.X test repnz (bad) (bad) xchg je movabs xchg lock fldln2 cmc mov or popfq sbb loope sub clc xchg out or add pushq fsubrl adc cmp (bad) fs (bad) mov mov hlt adc jmp sub lock rclb jrcxz xor xchg rclb mov xor adc (bad) xlat divb jbe mov mov sub adc ds mov xchg rex.WRX shrb (bad) stc cltd callq movsl rex.WXB push rex.WX lock rex.RX in push cwtl adc stos adc addb je (bad) mov in emms push loope or rex.WXB je rcll (bad) rex.RX fs jne push rex.X (bad) or add pushfq mov retq cwtl sti (bad) cld sarb callq add sbb adc or (bad) imul in lahf rex.RXB xor gs jo pop je (bad) add push test (bad) rex.WRXB rex.WRB xchg (bad) mov mov sbb sbb (bad) movabs xor mov pushq mov adc add (bad) jb lock cmc jl lret insb adc rex.WRB cltd xchg push adc movabs xor sbb cmp adc adc mov insb adc popfq mov jo (bad) xchg and (bad) rcrl (bad) or cmc push jrcxz adc fwait mov fcomp pop jl movl (bad) popfq sub movabs pop sub cltd sarl mov mov mov xchg jo repz (bad) xchg decb (bad) repz scas lret sbb rex.X push (bad) mov fldcw jbe lahf and js std push jns jg retq jl mov idivb fistl sbb rex.WRB (bad) negb shrl test add or faddl xor cli (bad) adc xchg mov adc mov pop iret out lahf (bad) pop cli test xor cs loop fisubrl (bad) sbb mov pop repz push fcmovnbe rex.RB mov mov rex.WRB (bad) cmc xor ja rex.RB add div (bad) cmp lock test in (bad) mov insl add xor rex.WRX rex.RX fdiv rex.WR scas fdivrl push test subb retq stc cltd jrcxz xchg jno mov mov jne jmpq jno vpsubsb (bad) callq fs hlt sarb callq add sbb lahf and movabs ja (bad) add (bad) (bad) fwait mov rex.WXB hlt je cmp and (bad) in pop shr (bad) jge or mov mov add rclb cmp test or jp movabs clc js add xchg xchg jbe sub test jmp lods and push mov adc sbb rclb add jb rex.RB rex.RX fs adc (bad) pop add adc mov sub xchg push cmpsl movsb cmp lret (bad) adc fnstsw addr32 adc mov ds popq and jp mov pop (bad) pop jb fstps adc xchg adc cmc rex.XB (bad) loop add mov mov sahf ss or (bad) xchg adc cli mov pop callq rex.WX ja addr32 imul pop push je or pushfq xchg cs push cwtl push popfq sbb sbb in push pop rex.WRXB or jrcxz mov jg cs fwait out adc shll rclb stc (bad) repnz rex.RX sbb test callq adc repnz mov xchg lret (bad) and mov jns jae outsl or push imul (bad) mov xor insb fs shlb sub rex.X xchg (bad) (bad) mov add imul repz fimull std sar andb int sbb (bad) xchg iret cld enterq ja xor insb pop xor (bad) fs std scas xchg sbb (bad) cwtl xchg xor cmpsl sahf mov sub movsl mov rex.WRX add hlt fwait pushq std fbld cs je mov mov rex.WR mov (bad) testl lret adc adc in lea adc sbb add cmp sbb imul push adc pop (bad) (bad) mov lock ficomp add rex.W xor adc cld jg cmp jmpq jle push (bad) lock rex.R es rex.XB push adc insl (bad) jb fsub rex.RX mov (bad) sbb int test enterq mov mov pushfq xchg adc and data16 xchg mov (bad) xchg lret add cmp sub lahf (bad) callq rcll add pop nop fsubrs (bad) (bad) jp cmpsb or mov cmp sub rex.RB fmuls jmp int push jge adc adc clc xor rol lea std (bad) (bad) callq xchg jrcxz (bad) rex.RB rex.X xchg je sahf lahf xor adc rcl out insb adc movb clc add xorl xchg cmp mov sbb data16 out (bad) cltd out cs lods shr mov scas fnclex jae fucomi push jp adc (bad) loope shrb sbb (bad) (bad) leaveq fsubr jbe retq push push add (bad) fmuls div lahf ds cmp sbb sti fwait sub mov pop gs cmp sub movabs lods mov sbb xor (bad) sub sub jne rex.RXB (bad) cs and out cmp (bad) add loope rex.XB (bad) ror imul (bad) add mov outsb sub sti adc add pushq leaveq mov lock or lret icebp scas neg xchg jg mov lea callq or or or (bad) mov jl in adc outsl jnp out sahf mov xlat push cmpsb and mov orl out mov stos adc add gs in out mov and adc repz test adc add rclb pop movabs (bad) xor dec mov pushq rex.X movabs loope (bad) cmc imul out (bad) imul rex.RX add (bad) or movabs (bad) xchg pop cwtl jp pop fisub xchg (bad) jo adc (bad) test roll adc jne lret (bad) pushq adc (bad) cltd or mov rex.WB (bad) xor push adc in imul (bad) mov adc adc out clc (bad) addl xchg push fucomi (bad) jg mov mov or and xchg mov jrcxz (bad) movabs adc push std (bad) rclb adc repz cmp stc or cmc (bad) addr32 adc xchg or movsl (bad) xchg out jae xchg rex.RX pushq stos or mov in or cmp adc and sbbl cwtl (bad) movabs callq push or movsb or sub rex.WB insb movl loop gs fs int3 cltd jmp add rex.RX (bad) xchg push jmp clc pop adc (bad) test ss nop mov in pop (bad) jrcxz and adcl mov (bad) imul mov cmp (bad) (bad) adc fisubr or or stos or xchg adc lret rex.WRXB movsl (bad) lods test (bad) pop adc rex.RX add (bad) (bad) sub (bad) xchg addr32 (bad) fdiv js rex.RXB repz and nop cmc adc iret test enterq push (bad) (bad) jo mov clc (bad) scas mov movabs (bad) callq mov jb sahf adc loope (bad) rex.WR (bad) in int repz cmp outsl sti rex.RX fcoml pop cmc icebp sbb (bad) pushq hlt sti mov fistp jl movabs (bad) add (bad) out lea mov or (bad) xlat or add cli jb ficoml add xchg adc movabs fadds (bad) xor add stc sbb adc add push out cmpsb adc xchg (bad) adc cli (bad) adc jno mov jp (bad) adc stos push rcrl or repnz xchg adc add ss rex.WR cmpsb (bad) mov adc (bad) movsl rex.WRX clc cmp sbb xlat in test mov xor es sub or addr32 or je rex adc mov mov mov movabs shrl (bad) rex.RXB sub cwtl or adc or xchg push clc (bad) repz sbb addr32 movabs xor jmp mov movabs out loopne cmp pop add adc add fsts or movabs popfq (bad) rclb movabs xor cmpsl xchg adc scas movabs adc sub and adc cmp xchg fucom cmp rex.RB xor retq jns adc (bad) lret sarb hlt jmpq hlt and (bad) push in fildl retq jne rex repz jmp mov mov int3 imul rex.WXB rex.R cs sub fsubrl add push add callq jle pause (bad) pushfq scas push xchg or cmp mov je fstpt insb xchg pop jns sub and adc (bad) (bad) fcmovu adc cmpsl jrcxz adc in fdiv jb rex (bad) xchg xchg mov jns adc and sub add push (bad) rex.RX sbb movabs mov (bad) (bad) sbb (bad) adc (bad) jmp lret roll nop (bad) (bad) movslq (bad) sbb cmp fstl and or jmpq fisttpll rex.WXB rex.RXB (bad) rex.XB (bad) jns sub (bad) rex.WX mov cmp int3 in cli jns notb cld jno xchg and fsubr push movsb (bad) clc jae movabs xor js push push shr jp (bad) adc add incl jl mov jns add xor pop (bad) mov adc (bad) sbb sub addr32 xor std xor and fdivrs idivb mov pop iret or xor lea jle jrcxz (bad) sub out mov loop adc sbb jns xchg push mov cmp movsl sti xchg rex.X jbe rex lock (bad) adc jns pop movsb rex.RB adc rex.WXB fiaddl fstpl mov or (bad) sub add rex.WRB (bad) repz fsubl push pushfq (bad) xchg (bad) movabs xor out js (bad) cli test push out xchg adc jg pushfq sbb rex.XB cmc rex.X clc mov cmp out sarl sarb retq repnz xor scas push sbb andl rex add (bad) jns sar rex.WRXB movabs cmc movabs cmp shl adc mov popfq adc and adc data16 adc mov sub mov jns fcmove jl out sahf pushq jns push stc and mov mov cmpsb and adc int3 rex.RB fucomp fdiv out fs mov mov (bad) jl cmpsb je xchg jns adc adc insl scas adc adc fcmovnbe rex fstp hlt and addr32 loop je add hlt cli xchg adc movabs ffree (bad) cmpsb sti rex.RX rex.X rex.X push (bad) lret sbb push pop (bad) jno in adc adc mov (bad) sar (bad) adc (bad) test mov cmp xchg rex.WRB addr32 add and (bad) orl and xchg in add adc or retq shlb fiaddl (bad) rex.R or rclb std mov xchg adc jbe push rorb (bad) flds pop add push (bad) es sub cmp sbb addl movabs sahf adc xchg mov rex.X sbb adcl (bad) movabs rex.WB roll mov jns jae stc (bad) (bad) adc lock retq in adc push mov or ror shrl rex.WB (bad) add jge (bad) stc jmp in fiadd iret cmpsb jns push hlt retq or (bad) fstl in (bad) pop and shll callq adc (bad) push loopne (bad) sub clc movabs icebp lods xchg sbb (bad) mov xchg fldl xchg mov clc pop hlt add js push push add xchg stc or outsl leaveq test movabs and or clc (bad) jns callq (bad) and fcomps xor cmpsl (bad) push rex.RX (bad) jns nop and retq retq int3 sub cmp lahf orl cmpsb imul (bad) nop rex.WRXB jrcxz rex.X mov fnop sub jl (bad) nop add movsl jns (bad) rex.WRXB ss repz xchg es xor add test xchg fiaddl add sub pop mov clc push xor xor pop or jmp jne movabs xor repz push mov data16 fnstenv (bad) sbb xchg iret fstl loope add in mov mov (bad) jge out (bad) jns jne add rcl cmpsb push xor xchg sub add add ja add jl adc orl (bad) xchg adc shr add cmp jmpq rex.WRX jle rex.XB ss sub mov sbb or rex.X jge push nop outsl (bad) rex.WRB mov lods pop and jb pop jo (bad) out sbb adc out (bad) scas ds repz and (bad) lcall jge jnp cmpsb cld fisttpl pop pushq mov or (bad) imul retq pop xor jbe je adc (bad) (bad) (bad) (bad) sub jns pop (bad) xor cmp addr32 push lea adc mov ljmp jp cmp mov and pop add jne adc shr bts sub sub mov shr bt seta add jns ror bt test mov cmc test jno je stc cmp cmp cmc sub jmpq jmpq jmpq xor push and scas pop (bad) cmc popfq sub (bad) (bad) out push test out rex.WRX cld push jae cld lods pop mov push (bad) (bad) (bad) cmc xchg mov lods int movsl (bad) pop movsl or scas xchg (bad) sub movabs je sti sarl fsts test (bad) mov adc (bad) (bad) (bad) (bad) sbb rex.X mov (bad) rex.RB retq add int3 or or mov cmp mov jp and sbb int3 lods jbe mov xchg fs rcr (bad) cmp retq xor pop mov push mov ljmp add or icebp rex.B (bad) mov sbb out scas jl cli add lahf rex.WRB mov out (bad) cmp xor lahf ljmp jmpq repnz retq mov jns lock scas pop (bad) movabs (bad) pop mov xor test ss (bad) cmc (bad) je xchg nop (bad) rex.RXB rex.RB pop std jne sbb cs fdivrl mov out outsb popfq and cmp xchg adc (bad) (bad) mov sar (bad) lcall movsb fdivl sbb rex.X mov movabs mov and or outsl pop xchg movb insb mov mov imul pop rex.RB mov add (bad) test clc movabs xor (bad) push loopne xchg push test rex.X and es and mov xor and ja int mov and incb movabs and decl in push rex.RX mov outsb (bad) xchg out (bad) mov (bad) test mov push xor rex.XB repz test (bad) negl nop pushq jae lret mov lahf cmc data16 or cwtl mov pop jbe fnstenv pushq testl rcll retq ds lea jmpq jne add xor sub (bad) jae subb (bad) (bad) fbld cli (bad) (bad) fbstp pop or sub (bad) fistp out cmp sbb mov rcrb sub adc data16 insb int3 xor leaveq scas xor movslq movabs movabs cmp mov sbb js lea sub cmp cmp (bad) or and in pop outsl (bad) stos (bad) and sub fucomip sahf sub std or in push movabs (bad) fucomip jbe retq cmp (bad) lcall nop cld (bad) (bad) fistp lods or mov adc (bad) fmull xchg fist xor xchg int pop cli imul jrcxz mov gs movabs (bad) lcall imul adc lret je jmp and movabs int3 jno rex.X pop mov (bad) not xchg add (bad) shrl (bad) mov mov xorl and retq mov pop int jnp subl xor imul movabs and repz (bad) test (bad) es (bad) movabs (bad) xchg add pop test cmp sub push enterq lahf jg (bad) (bad) push (bad) (bad) (bad) (bad) callq insl and pop movabs (bad) or rex.WB (bad) (bad) (bad) mov cltd ja sti (bad) (bad) fistp (bad) cvtdq2ps (bad) loop stos clc rcrl sbb sub add pop add lods or in lret or rex.R (bad) push jl fisttpl (bad) sub repz retq sbb mov jo out out mov jge rcl cmp lods sbb cmp insl lea or cwtl or sbbl mov sub pop xor sub pop (bad) jmpq jmpq jae cmp clc cmc clc cmp jmpq jmpq jmpq callq stc bt clc clc or jmpq callq jmpq cmc clc cmp test jmpq cmp clc cmp jmpq jge mov rex.WX out (bad) rex.RX and rex.W rex.W rex.WXB rex.XB cmpsb jle int add jg push xor rex.XB add addr32 rex.RX test rex.RX (bad) (bad) lcall mov mov scas in fs fldl (bad) callq lods adc jle or pop ror rex.WRXB rex.WXB sub imul cmp mov (bad) insb and stos jl (bad) lods std (bad) (bad) fistp cld (bad) (bad) fistpll movabs jnp cli pushq pop mov imul jrcxz rex.X or movabs in shlb retq mov sti mov xchg and (bad) or (bad) (bad) lods rex.X jmpq stos test (bad) fild push xor retq jmp rex.R sub mov or sub rex.RXB and retq pushfq jl (bad) jo (bad) rex.RXB out rex.WRXB cmc sbb (bad) jb rorl jbe ficom in adc fimul in out cmp push jp (bad) loopne add lods (bad) (bad) lcall cmp (bad) sub lahf add add scas jne cmp iret cmp test loopne pop mov and sbb (bad) sbb adc sbb (bad) faddl pushq ljmp ffree xor sbb add imul rex.WB ja insb rex.B cmp xchg loope int3 add iret nop rex.X imull xchg mov (bad) jno (bad) rex.WRX jrcxz cmc movabs (bad) out (bad) shlb (bad) push nop not ss mov xchg movabs movabs pop not bswap jmpq push rex.W rex.RB rex.WR xor cs insb add push mov ja test int3 push xor fsubrs (bad) (bad) test add (bad) (bad) rex sti orl rex.W lock jb leaveq jmpq (bad) sti rex.WB adc or cltd xor movsl test mov jg push cld fistl retq cmp mov cld (bad) (bad) (bad) movabs add (bad) (bad) iret leaveq xchg test jg (bad) lret and jg push nop notl jbe in and sbb movabs mov repz fimull rex.WRXB cmp callq push sti jmp xchg or divb (bad) repnz (bad) sahf (bad) in fimull in movslq lods imul xchg in loop stc decl or stc (bad) jmpq pushq jmpq jmpq jmpq jb cmc clc cmc jmpq bt repnz jmpq ja adc cmc and sub xor add mov bsr mov add rcr jmpq mov and movl xor xchg (bad) xchg xor retq leaveq rorl xor or test loop pop stc (bad) (bad) ficompl mov enterq ss movabs cmp lcall lret (bad) mov out leaveq test xchg es rex std (bad) lcall shl jg sti (bad) (bad) (bad) nop jl pop and fmulp jbe or cmovge jno addl test xor pop rex.WRX outsb outsl pushq mov pop sbb jno movabs fs fwait cmp pop out cmp rex.RX (bad) sbb or cmp cwtl rex.WRX es mov xchg icebp mov jle in adc jmpq (bad) mov mov repz xchg rex.XB and mov retq fcomi push rex.RB insb and mov stos push or movabs ds rex.XB and int push jge cmpsb movsw sbb stc std (bad) (bad) (bad) callq cld (bad) (bad) (bad) (bad) in rex.WXB cwtl push imulb (bad) rex.WX xor (bad) lcall rex.WB (bad) (bad) std or mov enterq retq rex.WXB pop sub jo (bad) jns (bad) outsb sahf sub sbb rex.WRB cmp (bad) mov sahf out (bad) rex.WRX je lods jp mov mov pop or xchg addl je or jno (bad) and mov jge hlt incl and addr32 mov lret in rex.WR add push jns clc (bad) cmp or xchg (bad) xor fwait jmp rorb or out rex.WXB loop add cmp lcall std and (bad) out mov or cmp cld (bad) (bad) (bad) cmp cli (bad) (bad) fbld (bad) mov loop xchg or cmc lea cwtl xor xchg cmp pop movabs pop (bad) fwait pop lcall lret jl jrcxz in ss cltq rex.WX fbld (bad) ficomp jno sbb mov (bad) xchg push sbb test shll mov rex.RX jl stc cmp sub bt test cmp jmpq jle push rclb popfq movabs (bad) popfq in cld xlat xchg pop movsl xor mov mov jnp (bad) pop insl mov movabs add jmpq push callq (bad) jg icebp (bad) or test sahf (bad) rorl movsb sbb push add (bad) rex.X or jo insb jbe or stos (bad) pop rclb ss rex.RX or cli xor test xchg xor ja (bad) (bad) (bad) sbb (bad) xchg mov mov jl mov (bad) (bad) mov lret (bad) push ffreep (bad) sub and iret xlat seta cmp lods sub mov pushfq (bad) adc in mov movzbl movsbw movsbl mov pop retq je cmc bt sub jmpq jmpq stc jmpq nop add rex.WR (bad) xor clc (bad) xchg (bad) (bad) mov mov out xchg add rolb scas pop insl std lret jnp test (bad) notl movsw cmp js jnp (bad) add rex.WXB retq fwait jp pop leaveq (bad) rorl (bad) (bad) (bad) (bad) (bad) or loope imul (bad) (bad) ljmp xor (bad) dec xchg leaveq leaveq mov push movabs mov std negl rex.WXB or pop cmpsl mov xchg adc fisttpl cmp cmc cmp xor cmpsb test fiadd imul pushq int roll rex.WX cmovg cmp xlat cmpsb movsl rolb rex.WRB xchg (bad) lret and imul rex.WRB repnz cmp mov mov mov adc pop add scas (bad) (bad) push jne in push mul add add mov xor mov rex.WRB xchg or jne lret adc ror rex.RXB sub (bad) (bad) mov and (bad) push in adc icebp insl pop xchg (bad) and cltd js pop (bad) mov (bad) (bad) mov xchg sti (bad) (bad) (bad) test out roll pop lret decl (bad) (bad) in sub int3 testb movabs out cmpsb test mov cs mov sub (bad) push xchg rex.RB jb out (bad) jbe test in and xchg imul lods jae loop in fnsave stos xorl sub mov mov out ljmp stc test jmpq jmpq repnz jmpq rex.W rex.X and mov mov movb movabs (bad) sarb mov (bad) movsbl add rcrl cmp xor (bad) and adc negl sahf out (bad) (bad) (bad) lcall cmc pushfq rex.RXB rex.WRXB mov (bad) mov sbbl (bad) lahf rex.WB rex.RXB mov rex.B rex.XB jno xchg (bad) (bad) ffreep fildll (bad) fisttp mov popq push cmp push (bad) mov stc fdivs adc retq int3 (bad) leaveq add add rex.XB cmc xor pushq xchg jae sti jmp mov loopne cli or loop test (bad) cltd jmpq stc pushq cmp mov divl fistl sarl (bad) mov rorl icebp cmpsb cmp sub bt jmpq bsf rol bt ror mov cmc clc cmp and jmpq movsbw not mov jmpq jmpq jae shrd not rcr sar mov inc neg btc rcr mov seta stc shl mov cmc cmc xor cmp repnz jmpq bt cmc cmc sub cmp clc clc cmp cmp jmpq in (bad) adc add adc add mov add rex.R scas ja add add add xchg adc add (bad) adc add add addb add add add push rcrb pop mov add (bad) adcl rex.RXB adc add movsl adc add add rclb add adc mov add (bad) sub add add add adc add xchg adc add (bad) add add xchg scas adc add add rex.W add test xor add fldenv jmpq cmp push xor mov lea test add shrd sub mov not mov lea jmpq callq jmpq add add add fldenv add push add add test fsubrs lock or and cmp (bad) stos pushq stos nop stos shrb stos clc stos add sbb stos push stos add add pop add add test test test cmp pushq test mov test or cmp fsubrs lock clc stos add lods and lods lods rex.W add add add add stos callq stos add lods and lods lods rex.W push lods pop lods (bad) lods pushq lods subb movabs lods enterq fsubrs lods clc lods add sbb xor lods push lods pop lods (bad) lods pushq lods subb lods movabs lods enterq fsubrs lock clc lods add sbb xor rex.W push scas pop scas (bad) scas pushq scas subb scas movabs scas enterq fsubrs add add add movsl rex push movsl (bad) movsl jo andb movsl shlb movsl add xor (bad) cmpsb jo andb cmpsb shlb cmpsb add xor (bad) cmpsl jo andb cmpsl shlb cmpsl add xor (bad) test test test test test test test test test test test xor (bad) test nop test shrb test and push stos (bad) stos jo subb stos add sbb xor stos push stos pop stos (bad) stos pushq stos subb stos test mov mov stos loopne callq stos add lods sub lods rex.W push lods js subb add add movsb test mov mov movsb shlb movsb lock clc movsb add sbb xor movsq push movsl pop movsl (bad) movsl pushq movsl andb movsl movabs movsl enterq fsubs lock clc movsl add sbb xor rex.W push cmpsb pop cmpsb (bad) cmpsb pushq cmpsb andb cmpsb movabs cmpsb enterq fsubs lock clc cmpsb add sbb xor cmpsq push cmpsl pop cmpsl (bad) cmpsl pushq cmpsl andb cmpsl movabs cmpsl enterq fsubs lock clc cmpsl add sbb xor rex.W test test test test stos mov stos loopne add rex add push stos (bad) stos pushq stos subb stos movabs stos enterq fsubrs lock clc stos add sbb xor stos push stos pop stos (bad) stos pushq stos nop stos cwtl stos movabs stos enterq fsubrs lock clc stos add lods and lods lods rex.W push lods pop lods (bad) lods pushq lods subb movabs addb test mov lods callq lods sbb add (bad) add add add movsb enterq test rolb add movabs mov movabs clc movabs and push movabs add sbb xor rex.W push scas pop scas (bad) scas pushq scas subb scas movabs scas enterq fsubrs lock clc scas add sbb xor scas push scas pushq scas subb scas movabs scas enterq fsubrs lock clc scas add add (bad) add add add movabs sub movabs pushq movabs movabs movabs callq movabs xor pop movabs andb movabs and movsb callq movsl xor movsq push movsl (bad) movsl add rex rex.W push cmpsb pop cmpsb (bad) cmpsb pushq cmpsb andb cmpsb movabs cmpsb enterq fsubs lock clc cmpsb add sbb xor cmpsq push cmpsl pop cmpsl (bad) cmpsl pushq cmpsl andb stos lock clc stos add lods and lods lods rex.W (bad) lods pushq add lock add add lock add sbb add add sbb xor add add or sub add andb movabs movabs movsl test fsubs push cmpsb add or or add outsl movabs add subl add out movsl mov add or add fsubs rclb push neg shr push bts movsbl push bsf push sar sar xor mov cmc add mov neg mov dec clc xor mov mov xchg lods rol rcr rcl ror jmpq jmpq clc cmp jmpq jmpq jne cmp movb jmpq adc jmpq jmpq sub shld rcl shrd bswap mov stc cmc sub stc pushq clc test clc test cmp jmpq je stc cmc bt clc sub jmpq stc push rex.W mulb mov add mov jmpq jne sar shr xor bswap jmpq stos jmpq rex.W and lret xchg sbb pop ds rex.R mov leaveq mov jmpq ss cmpsl data16 fcoml sub rex.WR fidivrl insb (bad) (bad) fsubrp popfq rex.WXB rex.XB mov lcall adc xor sub (bad) cld xor xchg mov repz mov mov imul data16 adc and lcall push push (bad) mov sti (bad) (bad) fbstp adc fmulp jbe fdivl push (bad) add xor lods sub (bad) pushq (bad) (bad) sub (bad) sbb xor mov imul pop or cmp push out (bad) std jge sbb insl (bad) xchg adc xchg push cmp leaveq sub seta std sub jno (bad) in or jno (bad) xlat iret rex.RXB mov add jmpq je jns pop and movsb fs rex.WRX fwait ss or rcrl ds (bad) rex.WXB cs cmpsl data16 cmc insl pushfq in sbb add xchg out stos repnz callq (bad) push rex.WX or (bad) lcall (bad) es fndisi(8087 xor cmpsb cs movsb xchg (bad) scas nop xor in cmp add add sar popfq push insl sahf and jmpq add xor push repnz pushfq faddl sbb out rorl lea (bad) (bad) insb sub mov outsl mov mov fist out (bad) (bad) mov sub or xchg or sbb xchg lods int3 cmp (bad) pop fs ficoml rex.W jno sbbl (bad) movabs mov sti push jp sarl and (bad) hlt mov xchg cmp jmpq std pop in popfq pop sub je lods rcr adc (bad) (bad) fildll adc insb cld (bad) (bad) jmpq sub rex.WB sbb lret (bad) (bad) (bad) and retq xchg clc test fistp (bad) popfq or stc fwait movsl jno scas (bad) jae sbb jp xchg jg (bad) in push (bad) push push mov pop nop (bad) (bad) data16 add mov iret mov cmp rex.RX movslq data16 lahf fdivl xchg fnstsw mov mov (bad) and mov cwtl adc mov or sub xor and add (bad) mov and movsb xchg mov movabs lcall pop fs jbe rex.WRXB pop cmp and fisubrl add rex mov rex.WXB (bad) cld rex.RXB in fstpl and mov rex.RX callq std (bad) (bad) jg and (bad) fbld (bad) (bad) and jle jnp (bad) push cmp cmpl negb pop adc pushfq movabs lea cwtl stos ja (bad) gs gs andb cs mov rex.WX cli xor gs movabs mov mov (bad) leaveq cltd adc mov add adc jmpq jmpq cli add (bad) and jg rex.WRX (bad) pop outsb mov (bad) xlat mov and in fdivl pop ds sbb sbb cmp sbb sahf xchg insb mov mov jg movabs fdivl cmp add adc rcll rcll fisttpll mov jmp (bad) lcall (bad) lea (bad) fbld add scas (bad) data16 rex.XB push cmpsl cmp jne lods pop jg insl mov and mov paddusw push out scas (bad) iret je shll (bad) pop mov xchg rex.WX sbb (bad) (bad) jne rex.X (bad) ja movslq cs xchg nop push (bad) iret cli fnstcw cld jrcxz and enterq push xchg insl jae mov xchg adc mov leaveq (bad) outsl sub add jl rex.XB mov mov std fdivrs iret outsl pop fucomp movsb movslq movslq cmpsb (bad) xchg fistpll cmp rep jl or (bad) test adc insb (bad) sarl (bad) jg mov (bad) (bad) (bad) mov xor jbe in fisttpll xchg cs (bad) (bad) mov cmp (bad) fbld mov sti ficompl xchg cmp outsb cmpsb adc jp mov and sbb adc enterq adc (bad) rex.RXB scas jrcxz (bad) mov jg jmpq (bad) icebp pop (bad) mov outsl (bad) imulb rex.W xor or sub sub fstps mov pop callq mov fstl lret (bad) faddp es shlb rex cmc in mov xchg (bad) scas rex.RXB (bad) out outsb mov fisttp lea clc xchg jbe insb movsb (bad) or xor movslq mov jne fdivrs adc (bad) and cli mov leaveq mov cmp rex.WXB rex.WRX and icebp xchg cmp rex.WB adc (bad) xor mov (bad) mov jg movsl fs jno lock leaveq or mov jbe rex.X or adc lods mov insl and jb mov (bad) rex rex.WX fisub (bad) pop rex.RXB cmp (bad) ffreep add mov outsb mov sub pushq (bad) pop es pop jmp out and rex.WX xor outsl adc pop add sbb mov loopne jge mov add lock push or (bad) out notl (bad) and rex.RB jnp push int add ficom (bad) adc out (bad) rex.XB and idivb movabs jmpq sub jrcxz push jns or sub rex.RXB (bad) movabs xor iret (bad) leaveq pop xor xor (bad) (bad) jg pushq sahf (bad) std test xor decb pushfq (bad) fwait lret fs mov adc rex (bad) xchg leaveq leaveq mov push in (bad) pop mov rex.WX rex.W rex.W out (bad) or in in out xchg mov sbb sub stos pop cld (bad) (bad) (bad) nop adc (bad) fildll push loope callq sub repz sbb xchg rex lock int3 add rex.X pop shrb rex.XB cltd loope pop mov add movabs xchg (bad) sub movabs cltd rex.W outsb xchg push or (bad) (bad) rex.WXB movsbw lea jmpq lea mov jmpq jmpq jmpq fistp pop and pop sub stos and sarl adcl jo callq mov cmp movabs rex.RB ficompl imul notb jg xchg (bad) (bad) divl sub adc (bad) (bad) jg rex.WB (bad) push and cli sbb pushfq mov out test scas (bad) and pushq je ficoml nop push out rex.R mov je pop nop rex (bad) mov icebp push xchg pmulhuw (bad) cmp mov sub pop lea shlb movsb jrcxz movsbw test add btc mov test cmc bt cmpb jmpq jmpq jb clc bt cmp jmpq cmc cmc sub jmpq jmpq jmpq sub jmpq add (bad) jno and pop xor nop (bad) (bad) fisubrl es xor pop scas sub (bad) insl pushfq cmp pop jno faddl fidivrl or (bad) mov sbb mov in xchg fucomip es rex.WB (bad) ds adc (bad) sar (bad) (bad) jg lock jle mov imul mov movabs (bad) std (bad) lcall jl (bad) (bad) fistp js in and xchg incb movslq cmp (bad) (bad) insb and nop cmp adc (bad) add (bad) add mov andl (bad) xchg adc pushq push in and adc jle icebp movslq stos std loop sbb sbb adc add jmpq jl pushq jmpq test cmp jmpq ss rex.RB and rex.WR rex.RXB rex.WX xor fist xchg and and and add in fnstcw xor mov add jnp mov in test (bad) lods movsb rex.R push jns mov (bad) in push fcmove (bad) or push xchg xor rex.WRXB sub mov xchg adc test pop rex.RXB test sub mov (bad) jmpq pushq iret (bad) cmpsb gs cmp rex.WRXB mov xchg jne adc (bad) scas test adc xlat rex.WRXB rex.WX rex.WX jb pop cmp mov mov (bad) (bad) (bad) jg (bad) and pushq stc (bad) movabs cmovg add scas jp fmul shrb xlat adc xchg pop leaveq (bad) out cmp pop rex.W (bad) (bad) or rex.R xlat cmovae fnsave (bad) sub jmpq jne bt cmc btr mov cmp cmp add stc bt bt movzwl rcl sar mov mov jmpq mov and leaveq add jbe rex.RB rex.XB repz jne cmp (bad) rex.RXB fnsave and mov jmp xchg add rex.WXB xor mov rex.WX callq (bad) fdivrp xchg rex.RB lock in cld (bad) (bad) mov pop and js cltd sub jo xchg jl movsb insb and mov jb xor add pop mov rex.W (bad) sti (bad) (bad) fistpll jns mov pop add add movabs adc sbb outsb (bad) in mov icebp rex.WB (bad) cmc or pushq outsb mov xor sbb xchg adc pop rex.WB xchg movabs xor rex sti add add shld stc clc bsr mov cmc stc stc cmpb jmpq jne test stc stc movb jmpq pushq jmpq mov mov movzbw mov jmpq (bad) or mov test orl jmpq jge lock ja (bad) (bad) mov fadds fildll out sahf sub cmp (bad) rex.RB rcrb stc (bad) mov rex.WX (bad) (bad) mov cmp xchg jne adc mov in mov (bad) nop mov (bad) iret (bad) jo callq out cwtl movabs rcrb adc out sub push mov stc movsb cld es add int testb (bad) out ds cmc mov add jge sbb (bad) retq or cmc xor insb or jno (bad) add push test xlat clc and pushq stos xlat (bad) fisubrl (bad) rex.WRB (bad) jge push mov (bad) ja add add fiadd jrcxz xchg push movabs movabs test push jbe rex.RB test lahf cs out out jmpq imul and mov loope jg pop xchg lock (bad) (bad) lcall (bad) mov and cmp iret addr32 (bad) lcall sbb (bad) rex.RXB iret (bad) mov in popfq mov sti (bad) (bad) out gs (bad) es sbb and xor and sbb lret clc xlat (bad) fstl popfq add stos cmp rex.R (bad) fs sub loop cmpb rcrb out je rcrb and movabs jbe cmp rex.X movsl fs and push jp fnstcw js (bad) rcrb mov mov cs fcoml sub in jl jg sub pop sahf mov xor sbb mov (bad) (bad) (bad) mov jae (bad) sub lahf mov cld outsl cmpsl mov mov pushfq sbb (bad) (bad) (bad) mov jl outsb sti (bad) (bad) ffreep out mov mov loopne retq jo mov pop frstor xor jns rex.WRXB rex.X rex.W cmpsl test mov out pop mov (bad) cmp movsb jle or loopne or rcrl adc (bad) (bad) subl pop adc stc data16 fstl in cmp xor cltd rex.WRXB mov imul rex.RXB xchg jne test cld (bad) or lret callq cltd add mov xchg add imul xchg cmp (bad) fidivl and rcl pop cmp (bad) stos push mov test mov (bad) (bad) (bad) fbld (bad) xchg mov sub and fwait retq popfq and shl insl mov leaveq and callq cld (bad) (bad) jg xlat and push (bad) or lods pop rex.WXB rex.WX movsb stos cltq rex.WX ja cwtl (bad) add int3 ja or pop cltd (bad) gs push jrcxz clc mov push rex.WRXB rex.WRB lea push push rcrb lahf lea mov rex.RB push xor test iret ja (bad) (bad) ja mov xlat (bad) cmpsl ljmp outsb and jmpq rex.WX repz mov add (bad) mov nop (bad) out (bad) sub rex.RXB leaveq cmp sub lahf cli (bad) and rex.WRB xor clc adc (bad) (bad) lcall rex.R js std (bad) (bad) (bad) callq (bad) sbb outsb cmpsb xlat (bad) clc cld (bad) (bad) (bad) sbb iret jp xor movabs (bad) retq adc rex.WRB rex.WX push mov (bad) std xor (bad) xchg int fldt add outsl mov rex.B callq test movsl cmp rex.RX decl movabs movabs (bad) jns test add jmpq push loop loope and movabs jne int (bad) pushq stos int insb add lods lods rex.XB xor movsl stos repz test jrcxz pushq cwtl (bad) xchg xchg pushq xorl rolb cmpsb rex.RX and jl jb and pop rex.WB rex.WB addr32 adc andl (bad) lcall and clc nop std (bad) lcall imul loope cld (bad) (bad) mov or xchg scas mov xor or loope rex.WRX mov sbb faddl xor add lock and rex.WRXB sarb rex.WXB cmp int3 stos add or mov push mov xchg xor mov (bad) xchg add or fwait cmp mov cli (bad) (bad) (bad) add es popfq cmc (bad) mov mov xchg mov nop (bad) xchg ss push test fiaddl rex.WXB mov (bad) mov jle movsl push xor in sbb callq cwtl rex.WRX jnp fdivrs enterq fmuls mov adc rex.RXB mov out mov rex.R movslq mov test adc mov btr btr push sar mov rol sub setae bswap setle bswap lea jmpq test bt cmpb jmpq jmpq (bad) ss (bad) jo mov sbb xchg mov retq xor mov jns add imul push popfq gs adc sbb pop fild or pushq (bad) (bad) xor out xor gs (bad) cmp (bad) jle in adc mov adc mov mov hlt rex.R in repnz (bad) (bad) icebp (bad) xor (bad) (bad) fistpll sti (bad) (bad) (bad) hlt rex.WR sarb stc lock mov in push xor cmp nop (bad) fst lods push sti pop stos mov sbb fistl xchg jmp mov shll lahf (bad) sub xor (bad) fnstcw pop cmp (bad) cmp xlat and add lea movabs and rex.WRX rex.R add scas fistp (bad) data16 push mov std adc jp and mov (bad) repnz notl (bad) std and jle mov outsl sahf rex.WRX rex.WB xlat outsl pop xor scas ds or cmp mov pop rex.WB movslq (bad) xchg (bad) (bad) (bad) (bad) mov xor subl shrl rex.RXB (bad) fcompl iret outsb sbb ja rex.WRXB adc (bad) sti fs fs cwtl rex.WX rex.W pop cmpsl cltd pop cmp (bad) (bad) pushq (bad) lea xchg pop xchg jo movabs mov adc rorl movntq neg (bad) out (bad) in mov mov std sub orb xchg or sub je lret (bad) and sub xchg pop scas ss jl movabs incb lods push je add bswap bts push sar and mov movsbl sub lea movsbw seta movsbw lea jmpq jmpq je test jmpq data16 cmp jb mov std lret push jp jmpq mov or xchg retq iret pop cmp in or add sub ja xor (bad) pcmpeqd mov insb hlt sbb lods xchg jle (bad) lcall rex.RXB es rcrb add (bad) (bad) cld (bad) (bad) mov push sti (bad) (bad) pushq and cmpsb stos (bad) fbld xchg retq je cmp loop mov cmp sub rex.RX xchg test cs pop retq orb mov out cmp cmp sub (bad) lret movsl and out retq fstpt push lods xor adc push (bad) pushq and or rex.X fdivrs (bad) ficompl popfq rex.WRB jbe (bad) sub cmp cmp lods (bad) mov movsb or rex.X (bad) push lods fild (bad) (bad) enterq rex.X push outsb xchg rex.WXB xchg movsb sub (bad) xor test pushfq (bad) imul (bad) (bad) movsb idivb (bad) (bad) fcomp rex.WB out cmp in xor cmc jne xor test fs (bad) (bad) (bad) adc int fimull (bad) xchg add icebp mov pop sti imul mov je retq and and rex.RXB es cmp mov xchg push cli fs mov rex.WRB (bad) (bad) xor and lret add sbb mov mov xchg add rex.WXB stos mov add cmp (bad) (bad) dec (bad) rex.XB cld (bad) (bad) fbstp (bad) in xchg outsl mull jg (bad) int (bad) (bad) outsb test pop (bad) (bad) push or jno leaveq (bad) (bad) (bad) sub pushq xchg and jmp sti mov rex.WR xchg push test pushq xchg retq (bad) fdivl (bad) sub (bad) (bad) xlat cmpsb test (bad) or (bad) scas jge std test mov xchg stos sti xchg adc pop rex.WXB rex.W (bad) jl int3 lods rex.WRXB sub test jmpq scas (bad) fs jne mov xor adc fwait sti adc add out (bad) add mov cmp enterq xchg movsb je jb mov in push (bad) sbb (bad) (bad) pop fcompl rex.RXB (bad) fstpl imul add push sub cmp adc (bad) or mov in sti popfq repz cld (bad) lcall push sti (bad) (bad) fbld jl outsl mov pop push insb lea (bad) xchg (bad) jns rex.WR jae xchg subl fist fisttpl repz pop and (bad) (bad) movabs mov data16 stos add and rex.WR jmpq add ja std (bad) adc cmp test mov negl and ja jmpq stc sub jmpq jne cmc mov not neg shld add sub rcl rcr mov cmc cmc sub cmc pushq test bt cmc cmp cmp jmpq jmpq cmp jmpq cmp (bad) jbe mov popfq clc cwtl sti movabs (bad) push jns ja and loope xorb cs cmp jns jg rex.WX in mov push sbb (bad) (bad) (bad) jg frstor pop mov mov mov cld (bad) (bad) mov adc (bad) (bad) (bad) gs and ja movabs (bad) movsw rex.WRXB retq cld rex.RXB rex.WRX or (bad) callq addl or movslq sbb cmp sub push decl add mov cs rex mov shrb (bad) stos out sub adc (bad) (bad) cs pushq fnstcw (bad) out sahf rex.WR sub jle mov rex.RX sbb sub rex.WRB fwait rex.XB (bad) (bad) scas pushfq sbb and mov out mov cmc sub stc bt cmp jmpq sbb push ja mov int xchg int3 or jae sub mov leaveq xor mov movslq cmp mov ss push or sub jns cmp iret (bad) (bad) (bad) (bad) jg pushq movabs jns rex.WB cs (bad) (bad) lcall repz (bad) (bad) fild mov andl jmp lea subl rex.WRX sub (bad) and lock iret xor cmp (bad) sbbb movsl js loop (bad) push rex.WX gs (bad) (bad) orl movabs pop cmp sub cmp icebp rex.B xor clc cs int3 and jge xor xchg xor movb and movslq fldl sti mov or add jmpq jmpq jb bt clc cmp jmpq callq sar bsr (bad) repz adc shl shld mov bt stc bt jmpq adc jmpq movabs rex.R rex.X jne pop sub fucomip fnstsw mov std or and sub repnz xchg stos cmp retq adc int nop imul (bad) lock rex.WRXB sbb (bad) cmpsl xor icebp jns callq jrcxz rorl clc sub repz rolb add scas jl sbb cmp jg xor sub cmp rclb push adc jns mov (bad) mov int (bad) test xchg cmc rex.WRB rex.W data16 cmpsb rex.RX in lods jne adc sbb sub cltd rex.WRXB outsl hlt jle pop sbb idivl icebp (bad) (bad) (bad) lcall (bad) rcll int (bad) (bad) xor rex.WR stos cld (bad) (bad) jg repz (bad) (bad) xchg retq cli push sti push pop add fbstp test loope mov add mov (bad) pop nop and xchg (bad) sahf xchg xchg mov jo sbb ja xchg ljmp (bad) fisttp shr push xchg cld sub mov movsl cmp jb add cwtl rex fidiv (bad) sbb cli movsl std in push retq or mov mov jge pop jb rcrl movabs and cmpl hlt sub (bad) (bad) sahf scas adc jb add je rorl pushfq rex.WX rex.RB (bad) (bad) (bad) lcall xchg rex lock fcmovne sbb cmp (bad) jmpq lret stos loop (bad) loopne sub jbe (bad) cli (bad) (bad) fbstp rex.RX loopne (bad) movsl in lods insb xor loope (bad) fadd mov xchg cwtl mov retq xor test scas incl (bad) int mov std mov jmp mov (bad) push lock fimul movabs test and jl adc mov pop or cli (bad) pop fild rex.WRX push mov in rex.R std in retq jmpq bt jmpq jne bsr inc mov stc clc or jmpq jmp fadds and fnstcw shll data16 stos shlb js sbb rex.WB mov (bad) out (bad) fldcw (bad) mov lock test movslq sahf jrcxz,pn data16 mov (bad) lcall fldenv scas (bad) rex.WRXB mov leaveq add rex.R sub and mov lahf fidivr (bad) (bad) (bad) jge sbb loopne sub lods mov mov add out int (bad) xchg (bad) out movabs xchg rex.WXB jp rex.RB movabs jge mov add loopne rex jbe mov cmpsl iret sbb xchg adc ss sbb rex.WX repnz (bad) pop out imul jne (bad) int3 movsb fnstcw test test jmpq sbb mov add rolb pop outsb es mov fild pop adc in sbb or adc movsbl add and stc cmp (bad) out (bad) imul (bad) test rex.R std push cmp add jns (bad) ds bnd xchg mov scas outsb rex.WB ss cmc jne pop sub (bad) sub (bad) fildll jp lods adc (bad) (bad) fbstp test xchg adc in (bad) icebp (bad) ja imul js xor sbb jbe or push (bad) cli rex.WX sbb and mov mov cmpsb test adc std gs icebp cmp (bad) (bad) jle jnp test (bad) mov adc add and cmovl data16 add cmc or jmpq bt stc imul test cmc clc add jmpq jmpq jmpq and and mov sbb mov mov sbbb retq leaveq nop out add adc movsb xor es rex.X rex.W fldt scas jbe rex.WRB not xchg repnz jne mov (bad) std jge movsl (bad) or lock mov cmp (bad) (bad) mov xor or xor rex.RB cld (bad) (bad) jmpq sti (bad) (bad) fist (bad) fisttp (bad) in (bad) xlat rex.W mov cltd cltd movsl icebp rex.WB add addb rex.W mov es retq sbb jle clc push push (bad) loop mov (bad) jg xchg fstl lock jmp or xchg insl movsl cmp cli (bad) and adc and (bad) faddl movabs pop lret and xchg insl sub mov (bad) mov xchg add clc test add jmpq xor and notb ja cmp movabs roll lret push js (bad) (bad) mov rex.WRXB (bad) jbe orl xchg or pmaxsw add sub paddd (bad) jg (bad) ds jge scas jbe gs (bad) callq (bad) adc mov jnp (bad) mov sbb cli (bad) jle xchg mov std (bad) pushq sbb adc cmp shll sti add popfq rex.RB movslq stos fstpt out cld (bad) lcall je (bad) (bad) (bad) int jl rex.XB js pop add mov pushfq fsubrl retq (bad) sarl sbb (bad) xchg movzwl icebp and clc jmpq insb mov mov (bad) leaveq add loope rex.WRXB sub jp mov xchg sbb iret sbb cmp (bad) cmpsl pop rex.WX xchg add mov cmp mov scas pop out (bad) xchg jp and insb fwait sbb jmpq sub mul pop jo pop paddw mov mov mov rex.WR mov sub (bad) (bad) incl fadds (bad) cmc jne sti mov jle push rex.W xor stos mov cmp hlt adc retq roll loope int cld (bad) (bad) pushq cli cli mov (bad) (bad) (bad) rex movabs xchg push add mov or test and xchg and (bad) fdivl add rex.RX rex.WR pushq or test hlt rex.R cmp (bad) cmp js and xchg mov rex.WRXB and rex.WX rex.X push add test adc xchg rex.WRB cmp incl cmp test jmpq jmpq callq rcr add stc mov bt test cmc jmpq jb xchg add scas test or or rcl (bad) push jbe mov decb xor test jge fs mov stc mov mov (bad) (bad) lcall pop int3 test out divb push push movabs movsb adc xchg (bad) decl xchg (bad) xchg rex.R jne lods xor (bad) out je rex.WX cmpsb test out cmp rcrb cwtl rex.WRX sub movabs mov add clc movswl (bad) adc push jbe sub jp nop add loop test ss or addr32 (bad) mov not cmp movntq mov and js push mov (bad) sbb rcrl (bad) fistp (bad) jl cld (bad) (bad) (bad) rex.R icebp mov and adc cmpsb pop sahf xlat rex.B rex.RXB rex.WRXB cmp nop pop movabs lret loop cmp jne (bad) insl rex.WR mov iret cmp js sub clc rex.W (bad) sahf jle cmp jb pop rex.W rex.W sbb es jrcxz push xchg (bad) int rex.WXB adc or and rex.WRXB callq jmpq jne bts xor movzbw setno mov shr rcl add test mov cmp cmp cmc test jmpq jae bts btr stc mov and data16 icebp or jmpq mov (bad) or mov cmp stc xor clc jmpq data16 pop movb nop rex hlt mov callq (bad) shrb xchg add cmc add mov add loop xchg (bad) ds movsb push jae repnz mov add repnz xchg jle leaveq roll or es rex.WB fdivs jg add jp xchg jbe lods mov rcrl mov (bad) (bad) (bad) mov (bad) jnp sub sysenter push rex.WR mov clc cs xchg or sub lock xchg (bad) rex.WX cmp div testb enterq or (bad) adc addr32 gs mov rex.R outsl cmp clc cs xor and fwait rex.B or add adc in (bad) mov gs push mov scas pop test xor (bad) in out add cltd xor (bad) outsl xor outsl pop sub jp in imul or imul push je sbb imul xchg add (bad) (bad) push rex.WX sub rex.WRXB jmp cltd sub loope jrcxz add lods jbe (bad) out callq (bad) int3 movsb and mov in cmp pop imul adc mov sub and push sbb cmp out xchg cmpsb in (bad) pop or jnp repz sahf test leaveq add cmp movabs js out cmp jb lret scas jge movslq test ja push push loopne mov fsubl rex.RX je jmpq adc sbb test mov or fstpt lods pop sti adc mov rorb mov xchg jmp (bad) (bad) adc repz mov sub mov fsubrs adc push (bad) lcall rcrl cld mov (bad) xchg fimull scas xor (bad) (bad) xchg jno rex.WXB sbb (bad) jg xor je cli (bad) (bad) fbstp jb loop ja cli icebp (bad) or sub jns loopne xor out imul test fiadd rex.X mov sub adc mov jrcxz adc movabs in lret repnz xor gs out in push add or cmpsb (bad) cmp pop lods rex.WRXB cmp stc test movb bt test cmc cmp test jne je dec push rol mov lea btc sub movsbw movsbw lea jmpq je xchg lea movsbw movzwl movsbw lea movsbw bswap mov jmpq pushq jns pushq jmpq je rcr test test ror push lea clc mov cmc btc sub mov lea jmpq adc jmpq clc stc cmc test cmp jmpq sti jnp jge and lahf cs test mov movslq mov fucomip xchg xor (bad) (bad) (bad) xchg loope test data16 int3 or (bad) pushq rex.WRB and or (bad) (bad) (bad) rex.RX add xor sub in fldl push and fldl or mov push scas js adc imul ss (bad) shll pop cmc sti andl mov mov pushfq (bad) sarl mov outsb jmpq rex.WRXB (bad) jg leaveq cmc pop mov (bad) (bad) (bad) (bad) cmc or shll xor (bad) movsl push cmpsb pop push xchg fs (bad) xchg fnop mov movsb fldcw paddusw (bad) (bad) ljmp and test (bad) ficomp rex.R retq in add xor movslq add sbb (bad) decl xchg xor rex.WX out rex.WRX nop jo sarl xchg notb stos repz pushq js add push add addr32 (bad) movabs sub sbb mov stos add popfq jnp pop cli cld (bad) (bad) callq imul fyl2x sub add test push jne xchg out imul push js sarb xchg add add loopne test sub mov test (bad) adc xor cmp mov jle pop jmpq in add scas jbe xchg rex.WB xchg fadd or jno rorb (bad) out add mov out lea (bad) test cwtl ja adc adc rex.X andb test (bad) rex.WRX (bad) stc cmp repnz jmpq jne btc setno rcr rcr mov cmc jmpq cmp pop retq mov mov leaveq add (bad) lea hlt fildll add xor adc mov add rex.XB movabs repz adc idivb in xor xchg (bad) (bad) lcall pop int3 andl test retq sub jns jne lahf and (bad) lcall test (bad) (bad) fistp (bad) xchg jnp xchg (bad) add xchg rex sbb repnz or fsubl (bad) rex.RX sti adc xor cs mov insb mov repnz test (bad) stc sbb (bad) pop adc not retq lods (bad) hlt jmp pop rex.WXB fnsave repnz rex.W clc sub (bad) sarl or fcoms cli xor cmp sub add add pushq loop mov mov rex.WXB (bad) xor std popfq jmp rorl mov mov cmp movslq xor (bad) scas ds lods scas not jbe xor mov pop subl stos and pop insl rex.WR mov xchg imul fdivs nop sbb jne add lods fwait jo and mov mov sub xchg rex.WRXB jmpq jae mov mov add clc (bad) cld in mov movslq fwait xor rex.W hlt rex.WR std (bad) (bad) callq loop fwait fwait cmpl jnp movslq repz lahf jg and pushfq popfq ds in push cs stos pushq sbb xor adc sbb mov ja js outsb pushq rex.WX mov (bad) (bad) imul and fs movabs jns or (bad) pushq ss test cmp adc xchg xchg and decl negb xlat (bad) (bad) pop hlt cmc fcmovnb (bad) int3 stos add push clc nop push ds sbb (bad) notb mov ja hlt or mov mov icebp sbb pop nop mov sub repz rex.WRB (bad) out cmpsb test sub xchg add (bad) movsl std (bad) cmp imul jmpq (bad) mov shll shlb pop cmpsb imul cmp (bad) (bad) fadds movsb imul (bad) lcall vxorps (bad) lcall sti add xchg addr32 xchg xor jmpq (bad) xor fldenv sarb push shll (bad) pushq mov jle mov (bad) sub insl xor stc rex.WB add clc movsl loop mov (bad) mov jmp adcl xor xchg pop (bad) jmp cmpl (bad) add xor rclb (bad) ffreep out jl loop sub (bad) out loope push mov rex.W rex.WR push rex.WB cs insb add ja cli incl add push push jne jb push gs imul jb (bad) je outsl outsb add scas pushfq (bad) mov mov out (bad) leaveq or test retq or and (bad) adc mov fcoml xor adc mov mov xchg (bad) ja xor mov mov (bad) mov mov je sub in movabs idiv (bad) (bad) fbld icebp sub xchg cmp mov (bad) jge mov cmp rcrb (bad) test (bad) push cltd xor test add push scas out outsb jbe sbb leaveq loope xor adc jg fsubl jmp leavew xorl xchg (bad) jno cmp outsb lods (bad) and mov sti sub pop (bad) mov movabs jno (bad) test movabs jns fisttp repz decl idiv sub not dec jmpq clc cmp jmpq shlb xlat lea mov movabs sar lock out sub cmp (bad) cpuid cs push xor sub rex.WXB ds ficompl fadds sti adc std fcomps callq (bad) test retq mov (bad) (bad) (bad) mov xorl (bad) (bad) movabs cmc (bad) adc fild cli (bad) (bad) fistp jb (bad) add rex.W sarb mov pop rex.B cmp cmp test cmpsl mov sbbb or mov xchg cmc popfq rex.WXB xchg stc (bad) xchg popfq sbb outsl and rex.RXB or mov mov movsb movslq xor fmull (bad) clc movabs fisubrl cmp lret cmp movabs negb jns lock rex.RB fs cmpsl clc mov cmp (bad) lcall or (bad) (bad) mov pop and adc stos pop push xor callq cmpsl test shr pop movabs sbb rex.WX lahf (bad) (bad) lcall sub rex.RX rex.R lea (bad) xor in push retq pushq rex.RXB repz xor add leaveq cmp mov loop sub cmpsb jbe enterq loop jno (bad) mov fs sbb es (bad) rex ss or xor vmread es lret lahf rex.RXB cwtl decb out fldl adc rex.X sbb scas rex.RXB fiaddl rolq (bad) lods sub (bad) xchg rex.R (bad) rex fild sti adc (bad) rex.RX sub adc mov mov loope pop lea mov rex.WRX sub rex.WR (bad) mov mov cld sub (bad) in hlt lahf (bad) int movslq pushq rex.WXB popfq add iret fstpt mov add cs movabs mov (bad) mov lret in rex.XB rex.RX scas rex.RXB jp test out xchg fidivr cli adc in add or jmpq (bad) cmpsb gs insb (bad) jno (bad) rex.WR mov jns test enterq cmp or (bad) (bad) (bad) (bad) xchg rex.RB gs jae sbb (bad) (bad) test xor sub add (bad) mov jmp rex.WB fisttpll cltd push xor (bad) lods add movsb cld cli fldcw adc insl (bad) push sahf outsl hlt rcll jmp jbe test push rex.R sub mov gs adc ja rex.RX adc fdivl rex.RX (bad) jb add jge es pop hlt fild add mov cwtl or and rex.WXB sub test xor (bad) push scas (bad) and rex.WX and and mov movabs (bad) fisttp mov rex.WXB stc (bad) jmpq pushq and data16 outsl sahf (bad) mov imul repnz push in out jne and rcrl xlat cmpsl data16 stc add (bad) xor cltd js out outsb retq cmp adc pushq xlat mov xchg (bad) (bad) jg adc adc std (bad) lcall mov (bad) (bad) fbstp jge mov js out scas and adcl xor leaveq xor scas (bad) addb pop mov mov sub enterq xchg or jmpq xchg loopne pop test mov je lods (bad) sub callq mov repz data16 (bad) enterq or ds insb cmp (bad) adc sbb jge sub pushq lahf cmpsl rex.RB mov lea not mov jmpq mov add bt add add ror rcr clc mov cmp jmpq adc jmpq jmpq jmpq jmpq push push rex.RB xor cs insb add test stc decl test pop mov movzbl mov jmpq add push xchg and cli movabs xor add cld add rex.WXB rex.WRX fldenv sahf (bad) cmc xchg repz (bad) cmpsl sbb stc fcoms fsts (bad) lcall lods jae movsl in mov (bad) (bad) mov jae mov (bad) (bad) mov jrcxz (bad) (bad) fbstp pop cmp stc retq sti rex.WX (bad) lahf and mov add in add add out cmpsl test lock mov mov (bad) andb jbe mov jo (bad) (bad) jmpq xor sbb vpxor jbe mov imull stc mov fiaddl (bad) seta rex.RXB fisubl or push cltd push insb jne setns bswap jmpq sbb test xchg and shrb and add imul (bad) (bad) std insl pushfq cmp mov lock ds xor out jmpq ja mov (bad) jno or push jnp (bad) (bad) adc (bad) lcall (bad) jbe cld xor adc lea fist lock cmp jns (bad) (bad) mov (bad) cli (bad) (bad) fistpll rex.W cmp in adc (bad) mov jae push rclb cli movsl in jp test sbb stos fadds clc cs rex.WRX mov and test fwait jae add (bad) (bad) enterq add (bad) cld xchg imul loope outsl ja std or enterq push xchg adc (bad) (bad) and add adc jmpq fsts (bad) jo and mov retq (bad) cmp mov test xchg rex.WB mul rex.RB xchg add and xor and cwtl jns sti (bad) sub movsb cmp or negb adc rolb out mov mov or (bad) (bad) decl (bad) (bad) lcall popfq fstpt fisttpll adc (bad) (bad) fidiv cmp jb callq testl scas rex.XB jmpq xor xchg jne movabs mov mov push jne jnp mov jge (bad) insl sbb repnz iret and jle add xor or rex.RX or fadd cld in jl push lret or or adc int3 sbb rex.W (bad) sub rex.WR fcompl mov and imul fimul and scas sbb pop jb mov outsl (bad) out imul out lahf cli (bad) jne add xchg cmp adc nop and sbb fsubrl movabs mov outsl rorl addr32 push test movabs and (bad) (bad) mov ja (bad) (bad) fist mov out pop (bad) sub scas (bad) loope rex.WR mov rex.XB movabs push ds jnp pushq mov (bad) mov xor fimull pop mov in mov or xor xchg or cmp test movslq or cltd push stc jbe leaveq rex.WX jno movabs mov not movzbl movsbq lea pop retq add and sbb push (bad) (bad) scas fsubrp mov stc push js (bad) out outsb popfq jge xor stos (bad) (bad) (bad) in movabs (bad) in xor out (bad) lcall pop fnstsw (bad) jge pushfq sub jns pushq pop rex.WXB je mov (bad) rex.RX movslq (bad) mov and and in jrcxz (bad) jae or (bad) or xchg sub cmpsb rex.RB sbb (bad) icebp sub icebp hlt pushq sub and cmc pushfq jnp in sbb pushq and data16 cmp jo out add sarb popfq or (bad) out (bad) decb xor rex.B test (bad) xor adc mov mov or sti fimull movsb cmp jne ja xchg pop xchg pop xchg xchg pop movsbw movzbl lea movzbw pop jmpq jne gs xor fs insb add sub mov gs out pop and push pushfq in sbb fidivrl stc fdivl rex.WXB (bad) loopne iret jg push rex.B cs rex.WRX mov sbb sbb rex.RX mov popfq mov cmp (bad) (bad) and (bad) fiadd loopne cmp insl mov (bad) (bad) std (bad) (bad) (bad) push push movabs sbb lea or mov nop mov mov pop outsb popfq enterq movabs add jrcxz mov sbb pop repnz sub and gs outsb imul jo out outsl mov movabs imul test jrcxz xchg shrl pop xchg sub sub sbb gs (bad) mov ss pop sub sbb pop mov (bad) xlat divb rex.WRXB pop and jbe (bad) (bad) jbe sub hlt outsb rex.WRB or pushfq mov add fdecstp sarb std (bad) (bad) mov pop iret rex.RXB mov jle (bad) (bad) jg (bad) shll (bad) (bad) fild pop sub test xor or add (bad) lret cmp adc (bad) (bad) movabs xchg xor jne add retq jl mov gs (bad) jle (bad) pmaxsw mov jnp rex.WX rex.RB (bad) in scas (bad) jb pop (bad) (bad) jl pop xor scas (bad) mov mov rex.WR sbb xchg push sub xor movabs (bad) rex.WRXB jl cli addq xor lss iret stc decl (bad) rex.WB rex.B incl mov cmp jmpq lea jmpq add (bad) cltd and test test notl not lods pop xchg int3 mov adc and test ds cmc movsl xor mov cltd rex.WRXB movsl lret push sahf add cmp jmpq xor movslq (bad) (bad) jmpq add (bad) data16 mov sbb (bad) lcall cmp (bad) (bad) (bad) sbb xorl cmp (bad) adc data16 out cmc cmp xchg pop shlb mov callq repz cmp data16 movabs int pop xchg jns (bad) and mov mov fild lahf ja stc clc xchg (bad) retq xlat fsubrl mov cmc movabs add xor (bad) jmpq jmpq and movslq or scas (bad) lods adc mov xchg mov xchg xchg fisttpl rex.WX xchg (bad) add out xchg xor jmpq (bad) rex.WRXB (bad) out sbb int sbb mov (bad) xlat or jne pop (bad) jl add and lret cmp and and enterq add (bad) mov shr negl sbb icebp stos retq (bad) (bad) (bad) (bad) cld pop repz (bad) sub (bad) mov (bad) rcll xor (bad) (bad) addr32 shl mov rex.RX cmp retq jo (bad) int3 sub (bad) outsl (bad) and mov mov jmpq (bad) (bad) and (bad) and xchg adc push retq mov xchg (bad) (bad) fistpll cmovl (bad) mov mov gs fcos callq movsbl jmpq jne adc rcl sub inc inc btr movsbw mov xor test add add mov mov jmpq adc jmpq adc retq jmpq or mov rcr lea movsbl mov bsr and ror push rol mov ror stc sub rcr rcl push setns sar push rcr add test lea push not push bswap dec mov clc test jmpq je test stc bt sub clc cmp cmp jmpq (bad) in (bad) (bad) callq jmpq xchg retq rex.WR callq rol jmpq jne movsbl bsf bswap mov bt clc cmc clc add jmpq jne setg rol not mov test xor neg bsr sub sub mov shl mov test bt cmc cmp sub cmp bt pushq test cmc cmp jmpq mov mov movabs (bad) jp loope nop (bad) xlat sbb mov cmp xor fucomp mov fcomi add cwtl mov jp xor cwtl rex.WRX and (bad) (bad) (bad) (bad) lcall push jo (bad) cmpsb jle and (bad) push hlt add mov fadd cmpsl cld (bad) lcall nop or cld cli (bad) (bad) fistp cmpsb lods rex.WR jge sahf loop ss repnz jg lret jl sbbb sbb rex.RB (bad) (bad) jle xor cmp sbb mov xchg cmpsl lsl rex.RB rex.XB push cmpsl data16 cmp sbb loopne (bad) jnp lret fcmovne cmp cltd pushq push jmp mov push sbb adc sbb mov and adc cmp (bad) rex.W ja xchg push jns and (bad) fisubl adc fwait xor mov (bad) mov repnz enterq mov rex.X rex.X test jp (bad) rex.WR rex.WX push cmp clc sub jae out (bad) (bad) lcall sub jle test add pop xchg in push insb out stos test rex.WR rex.WX or loop or rex.WR (bad) rex.XB ss add xor xor js mov (bad) (bad) (bad) (bad) (bad) faddl fbstp lods (bad) (bad) icebp mov fldl push or xchg jb jb jge fistl rex.RXB rex.WRB fistl mov divl jnp shll out outsl cmpsl test xchg stc test movsb cmpsl mov cltd jle ja movabs sbb imul scas ss rex.XB or lahf mov sbb mov test fpatan (bad) jmpq jmpq jmpq rex.RXB rex.R xor cs insb add rex.RX and push jbe (bad) xor jne push jae (bad) cmpsb and std or cmpl mov mov fucom sbb mov je mov xor (bad) push out hlt std (bad) (bad) (bad) (bad) xchg (bad) lods adc and mov jns in cld (bad) (bad) mov lret (bad) fbld lahf adc sarb jne lods rex.WXB xchg (bad) xor (bad) jb pushq repz mov sbb movsb (bad) rcrb cwtl or rcl popfq add rex.XB pop add cmp ficompl and sbb fmuls xor xor sarb rex.WRXB xchg rex.WRX and (bad) data16 in movabs rex.XB and mov std pop xchg add cmp ja nop movabs sar clc add rol add xor mov cmc test jmpq jmpq pushq jmpq mov sub cmp add rol rol neg add mov setno cmc rcr rol mov bt clc repnz jmpq cmp cmp repnz jmpq ja sbb sbb bt rcl sub lea shl dec add btc btc setae bswap mov not jg inc mov stc repnz jmpq pop vpxor sub lret add or imulb fnstsw pop (bad) decl rex.RX xchg lods push jae adc cmc mov xor adc push data16 mov lret (bad) jb push sar retq scas pop (bad) (bad) (bad) lcall or (bad) mov or stos rcrl cmp mov adc test callq sub (bad) add fs or fisttpl mov enterq adc sub jne out (bad) jp sub (bad) leaveq sbb mov fnsaves loop (bad) lcall or rex.X lahf jle sbb adc stos test cmp test movabs ja and (bad) fistpll (bad) stc (bad) (bad) ffreep mov sbb mov cmp sub sbb push movabs add sub (bad) push xchg imul (bad) (bad) (bad) rex.WRXB lahf push mov mov pop sub andb fildll repz sbb push sti or rex.R pop mov xor (bad) adc sub (bad) (bad) mov cmpsb ds retq jae jmpq jmpq (bad) ss shlb mov sub in rex.XB rex mov fcoml pushq movsl movsb movslq (bad) pop outsb (bad) sub movslq xchg data16 mov (bad) (bad) lcall nop cld (bad) (bad) fisttp (bad) mov mov add fcoml out pop xchg repnz add sbb jbe fdivs mov pop int3 test (bad) lods or jno sbb mov (bad) xchg iret enterq loop hlt out or xchg ss stos rex.X (bad) fdivl scas jge fildl movabs ffree push (bad) cmp (bad) in rex.RB (bad) movabs xchg push (bad) ja jmpq test jmpq jae data16 (bad) paddd shl mov movzbw not shl mov inc or neg shld mov stc cmc test jmpq clc pushq test jmpq push push xor xor fs insb add rex.B jmpq jmpq bt cmc stc test jmpq not dec and neg bt sub setl mov stos not mov jb callq jmpq seta xchg not jmpq jmpq jmpq jmpq jne jmpq stc imul insl rex.WR push jns and movslq in sbb jno shrb push cld xlat (bad) out test xor fidivl movabs fcmovne cmp jns mov (bad) (bad) (bad) inc jo xchg lret fidivrl (bad) mov lods stos cld (bad) (bad) fildll movslq add (bad) (bad) fbld fwait icebp (bad) mov loopne mov pushfq jnp add (bad) sahf (bad) (bad) sbb (bad) insl and ficom and (bad) cmc push mov pop (bad) adc cwtl mov jmp stc outsl (bad) and mov mov sbb scas in movabs rex.XB (bad) int3 insb shrl add sahf rex.RX repz rex.WB xchg pop sahf (bad) mov (bad) mov xchg xchg push xor ficoml (bad) jmpq (bad) data16 in out outsb ds rcl (bad) and sbb add sahf cs (bad) (bad) cmc jge (bad) iret (bad) xchg xor cmp addr32 mov out rex.WRX cmpsb out out (bad) sub loope push out (bad) (bad) mov or out (bad) je jrcxz loop sbb mov xchg sti (bad) (bad) fistp rex.RB (bad) pop and add rex.X rex.WXB mov adc rex.XB rex.WX or jo lock jnp repnz shll es rex.WRX insb mov ja adc pop and rex.WRXB or fsubrs mov rclb mov nop shlb je mov rex.X xor push fwait add xor pop loope cmp push imul in cwtl shlb icebp movabs jne (bad) rex.WRXB (bad) jnp pop pop test rcl adc mov adc xchg (bad) pop jo bswap (bad) scas pop test cli adc sbb sub sub cmp leaveq add rex rex.RX or jns add xchg scas sub pop mov (bad) ja std (bad) (bad) inc sbb std (bad) (bad) mov jbe ficomp mov mov in out mov (bad) lods mov rex.X fs outsb (bad) sar push (bad) or add movsl fimull stc andl loopne outsb ds sub mov (bad) std xor (bad) (bad) in popfq rex.WXB rex.WXB rex.WXB (bad) rex test xor push bt stc add jmpq jmpq jne bt dec movzbw mov cmc cmp cmc clc or jmpq add jmpq bswap movsbw lea jmpq push movslq xor cs insb add fst repz xchg (bad) repz mov jrcxz (bad) jmpq jmpq je jmpq add jmpq mov and mul and std push je rex.XB js (bad) outsl sahf mul or mov pushq (bad) lods and mov imull (bad) mov fisttpl paddd (bad) (bad) mov test mov (bad) (bad) fldl int3 push sti mov in xchg (bad) (bad) jmpq adc (bad) (bad) adc sahf ds lcall scas cli (bad) (bad) fisttp rex.WRXB rex.RB jp (bad) and xor (bad) jl,pt sti out rex.W cmpsl push xor and adc leaveq pop rex.WB ja pop mov imul (bad) jbe or adc fwait repz mov hlt or mov rex.WR je pushq (bad) jmpq gs mov sarb jbe xchg push (bad) (bad) decb sub pop xor gs (bad) pop xchg (bad) shrb (bad) in sbb leaveq jg (bad) mov cltd mov (bad) (bad) lcall cld adc pop gs pushq sub (bad) mov cld (bad) lcall in mov ffreep jo lea add scas jmpq test (bad) add pushq mov fbld (bad) repz add and (bad) adc stos rex.X (bad) lock (bad) (bad) or xchg jb adc (bad) pushq (bad) (bad) xor (bad) rex.WRB jnp pushq cli rex.WB (bad) iret sbb sti cmp test mov jl jmpq pop mov sub jg (bad) shl out (bad) scas sbb xlat (bad) jp stos sti add ljmp sbb imul adc (bad) movsl test pop (bad) out movsl fs sub lret and addb jmpq (bad) mov (bad) (bad) (bad) jg cmp movabs fwait push add xchg ja in sti mov cmp add repnz mov (bad) rex.WRX jrcxz mov xchg sub mov repz lock rex.WRB test loopne test xchg sbb sub mov sbb rex.WRB jmpq test gs in (bad) xchg jo (bad) out cmp adc fbstp scas (bad) fimull jg int (bad) (bad) (bad) lcall adc (bad) xor (bad) add jrcxz callq test xor xor rex.RB rex.WRB sbb (bad) rex.RXB xor xor (bad) lahf cs (bad) jbe imul add and add xor pushfq xor cld cli fnstenv pushq scas push rex.WRXB cmc xor (bad) cli mov (bad) pop movsl cmp cld sub shlb or loopne in jmp clc cs out imul ds sti fidivl loop xor jmp lret stos and scas sub rex.X in popfq sbb jmpq xchg jmpq test es andl repz jp jns rex.W (bad) pushq lahf decl rex.RX (bad) sub or mov rex.X jge xchg fimul out rex.WRX (bad) data16 (bad) adc sub (bad) (bad) (bad) (bad) (bad) (bad) repnz std (bad) lcall adc mov push scas out gs fsubs adc dec lods xor jno jbe,pt sbb xor sub mov mov mov (bad) rex.WX xchg rex.W push ss rex.W rex.WRXB movabs mov jg mov pop rcrb mov lods xor (bad) (bad) pop lea out (bad) mov subl cwtl rex.WRX xchg (bad) (bad) fs callq cli mov ficoml mov jmpq add stos stos and jns hlt fildll outsb pop and rorb cmc adc repz rex.WXB repz icebp jno (bad) (bad) rex.RX rex.R rex.R xor outsl jno xor rex.X or xchg shl std (bad) lcall or sub fucomp insb xchg xchg jg sub cld (bad) (bad) fistpll in cwtl cli (bad) (bad) fistp movabs lods mov cmp xchg mov (bad) rex.RXB xchg retq lret mov stc pop cs (bad) mov (bad) or cltd movabs repnz rex.WR rex.XB int and rex.R rex.WXB lret js sub je lods xor stos (bad) loop pop cmpsl rex.RXB xor rex.WB mov lret pushfq sbb scas pop cmp or rex out fisttpll cmp cld add scas lods and (bad) notb imul rex.WRB jg (bad) movsb jl lret add xlat (bad) (bad) fnstsw nop (bad) notl stos jg (bad) (bad) mov callq and fistp stc (bad) xchg rex.WRX mulb ds std (bad) lcall (bad) sti (bad) (bad) fild cld lret lahf rex.W scas jle (bad) (bad) test adc and insb mov push xchg out xchg ffreep (bad) cmp mov rex.WRXB (bad) in xchg or rex.W shlb push jae mov lret add or rorb lahf xchg add (bad) cmpsb cmp push xor adc sub fimull cltd mov sahf rex.WRX lcall test out cmc in rex.RB mov mov cwtl movsl adc idiv repnz jmpq jmpq adc and test adc sti adc push rolb xchg out sbb stos mov xchg (bad) mov rex.XB xor jbe pushfq cld mov outsb mov cmc sub (bad) (bad) jg nop mov push xor roll callq cld (bad) (bad) jg push jp (bad) cli (bad) (bad) fildll sub loopne lods rex.WRB lahf sub gs jae rex.X mov int3 sbb loop pushq xor clc cmpsb fisttpl loope pop (bad) (bad) movsb cwtl jae push (bad) rex.X add movabs (bad) out sbb xchg and fnstenv (bad) xchg (bad) clc (bad) rex.WRX rex.WRB mov mull je retq cmp ljmp outsl (bad) mov lods pop xor add repnz jge jae stc xchg sbb in cmp xchg enterq jge mov pop jo jmpq (bad) (bad) push cmp sahf stc mov mov (bad) mov push leaveq int3 mov mov stos mov (bad) incl and (bad) callq pop push xor cmp ja xor (bad) scas lret and movsl in xchg jg mov idivl and sbb out (bad) leaveq shr (bad) push repnz test sbb (bad) in popfq gs cmpsb ds push xchg pop nop cmp (bad) fsubl or or insb mov pop rex.W lock (bad) mov xchg mov and outsl test add cmp clc bt test mov cmp clc cmc ja test jae je stc stc stc add cmp cmp cmp jmpq jmpq jne jmpq jne ror stc sub btc shrd bswap stc mov sar add bt xor mov stc test jmpq je cmp sub bt bt clc jmpq jne not mov mov jmpq add add add orb add add sub add xor add and addb add add sbb add leaveq cmp mov push jne (bad) cmp iret mov add jl or (bad) jne adc retq push rex.R jp out and mov rorb hlt in fs rex.RX pop (bad) (bad) (bad) (bad) rex.RXB push (bad) or pop int3 sbb or mov (bad) cld (bad) (bad) jg mov (bad) (bad) fild pop (bad) leaveq xchg jbe adc rex.WXB (bad) jbe add pushq xchg cmpsb test and (bad) ja add xchg xchg rex.XB movsb je fstps mov pop jno and sbb scas (bad) js (bad) (bad) add rex.X mov fs subl mov (bad) rcll repnz (bad) (bad) mov and pop xchg jno xor (bad) mov cli (bad) rex.WX sub xchg shrl outsl lahf (bad) test test jmpq stc cmp jmpq jmpq ja add and sub and btc add inc mov mov (bad) lock cs bt repnz jmpq push or mov mov sbb (bad) rex.WB adc movzwl xchg pop sub mov std or rex.XB rex.RB notb rex.WX rex.WRXB xchg jns or xchg adc outsb sbb (bad) (bad) (bad) jg outsl popq xchg mov and bnd jae imul retq cmpsl push ror iret add gs xor (bad) lcall test (bad) (bad) fucomip loopne stos shr cmp scas rorb rorb mov jg mov (bad) fisttp pop jbe,pt jae jno andl mov cwtl enterq retq outsb cmpsb in int3 test out (bad) lock jrcxz mov lock imul adc mov (bad) mov rex.R (bad) xchg test rcrl push lods jbe or sbb rex.RXB movnti mov lods dec sub xchg add movslq testb jrcxz mov sbb (bad) fadd sub (bad) mov push nop lods and rex.RX sbb jrcxz stc xchg adc pushq rex.X xor push sti fimull sub in adc and imull mov cmp out stc imul fsts mov lret stos cmp xchg cmp movsl std or or or xchg jmp hlt movsl insl pushfq rex.R rex.X lods je (bad) mov jg (bad) mov jmpq or push mov maxps push xchg (bad) fbld sub retq push cltd (bad) scas (bad) (bad) fs movabs xor xorl repnz (bad) jp int (bad) fsubr sub mov retq adc and lret mov mov xchg push (bad) int in jrcxz mov (bad) lcall mov sahf pop cmc (bad) sub sub insb ja std (bad) (bad) (bad) jb stos mov (bad) (bad) (bad) and (bad) in out ja (bad) lret loope fstpt lock in fildl jl cli add mov outsb lods or adc rex.WR jne (bad) xchg (bad) (bad) (bad) adc or rex.R icebp sbb shlb sbb pop mov ficoml clc rex.RXB xchg rex.R (bad) pop movsl cmp sub mov xor (bad) enterq js out rex.WXB fiadd jmp nop callq xchg (bad) incl (bad) (bad) (bad) jmpq lea jmpq je rcr lea cmc stc push ror sbb or bsf mov cmp sub movsbw setno lea jmpq ja stc imul cmp test add jmpq pushq jbe pushq jmpq test pushq cmc test cmp cmp jmpq leaveq fnstenv mov mov (bad) and push popfq fucomp sub (bad) fisubl lahf movabs retq jmp or sub orl popfq in rex.R rex.WRXB rex.X rex.WXB pushq xor fwait jnp cwtl (bad) (bad) (bad) (bad) and xchg loopne jmpq mov mov (bad) (bad) (bad) mov mov and mov data16 cmp sub lret add stos cmp (bad) jno add mov (bad) (bad) fistpll lods cmp outsl xchg rex.RX adc insb (bad) movabs imul int es xlat mov cmp ss (bad) jl fisubl cmp jg rex.WXB ja or sarl (bad) (bad) cs repnz pop popq cmp imul imul loop fadds out push idivb movabs (bad) or or mov test icebp andl stc decl xchg (bad) decl (bad) xchg add jmpq add rex.WRX in sbb xchg clc (bad) cmpsl (bad) jp mov scas out push je stos xor sbb xchg notb sub adc or fimull rcl (bad) in loope sbb lahf repz (bad) xchg (bad) fidivr int3 (bad) cmpsl sub xlat mov movsl mov (bad) sbb gs rex.RXB rex.RB in lret rcll loopne or mov mov rex.RX push push xlat jle rex.WR (bad) lods xchg xor std (bad) (bad) jg rorl adc (bad) (bad) fistp clc rex.X movsl adc xor cli cwtl sub xchg mov movabs xchg adc pushq test rex.WRB rex.R popfq movabs rex.WXB lock lret retq jrcxz rex.WXB lret sub add sti gs mov cld or nop enterq sub (bad) repnz and pop cwtl add mov xchg mov sti adc pushq movabs and and (bad) (bad) (bad) lcall test loope mov mov loope fdivs es add (bad) (bad) fbld sti (bad) (bad) fild cmp jb cmp (bad) mov mov cmp or jae mov add xchg es movq (bad) jae add enterq js mov data16 mov movabs add addl mov sbb pop callq (bad) sbb (bad) int3 lods jp xchg cmpsl mov int xor or decl test (bad) decl nop (bad) not bswap mov movsbl xchg movzbw lea bswap mov sete mov movsbw mov xchg lea movsbw jmpq jmpq rcr mov sar bsr mov sbb clc dec mov stc jmpq jmpq cmp test cmp test jmpq jmpq je cmc btr bsr push movsbl mov dec cmc sub movzbw not lea jmpq jmpq (bad) jbe test test leaveq mov notl xchg (bad) insb or sbb in rex.WR iret jg (bad) jns rcl add movsb pand xchg and mov or xchg cmp lods push sar (bad) (bad) mov out sahf out (bad) jae rclb rex.WB cs gs std (bad) lcall movsl sti (bad) (bad) fistp fs (bad) ss cmp sti repnz stc cmc lods movslq sub (bad) pop ljmp cwtl xor outsb jbe cmp mov in sarl and sahf lahf rclb mov or ds adc cmp loopne in cmp (bad) mov xchg cmpsl sysenter (bad) fsubl jle or retq sbb addr32 mov pushq stos clc (bad) cmp sub bt cmc pushq test test jmpq push not btc rcl bsf mov bswap push and push movsbw not cmp adc push stc rol push bswap jmpq jmpq mov icebp sbb repz (bad) es out push popfq or xchg or lods pop xor fidivrl mov xchg mov (bad) push hlt movsb mov clc movabs (bad) lcall (bad) (bad) (bad) (bad) mov rex.WX (bad) movsb out (bad) (bad) jg loop leaveq cmp (bad) (bad) fnstsw cmpsl jmpq add xchg je,pn mov jno pmaxsw mov je test loopne sahf (bad) sub xchg add mov in cld movslq sbb mov (bad) jge outsl push pushfq es gs xchg cltd jns movabs (bad) loopne es sbb xor pop in lods adc (bad) (bad) iret xlat ja mov xlat xor push jmp mov ds xor callq bts xor add inc movabs neg mov clc js test cmpb jmpq jmpq mov lea movzbw pop retq je clc stc test test sub cmc clc cmp jmpq jmpq mov jmpq je stc sub cmc cmc cmp jmpq jmpq jmpq ja cmc sub add rcl ror shld add clc ror mov clc not mov jmpq jae bt cmp jmpq add add ror stc mov jmpq cmc not cmc sub test stc clc test cmp not lea not pop jmpq jmpq callq ror shl add sbb inc shr shrd mov cmc bt cmp bt cmpb jle jne rol neg stc jmpq bt stc test jmpq add cmc stc cmp jmpq je stc cmc cmp retq je xchg movabs mov movsbw movsbw jle mov mov lea mov movzbq lea jmpq callq bt cmc jmpq cmpsl (bad) pop leaveq mov fsubr mov (bad) scas pop xchg and or push rex.RB pop mov or fisubr jns movabs xor loop cld (bad) (bad) fild pop rex.XB fs int3 jne stos rex.WRX rex.WB mov fidivr (bad) cld retq cmp lods (bad) imul mov (bad) jge mov stos xchg pushfq rex.XB mov jg pop xor xchg jb sbb mov pushfq pop stc (bad) shlb cmp adc jp mov (bad) (bad) int push (bad) stos xchg cs (bad) mov mov rex jae (bad) mov push out (bad) (bad) rex.WRX sub add or xchg imul pushfq movabs adc cltd rex.WRXB cmp (bad) (bad) addr32 std rex.RB (bad) (bad) movabs outsb popfq int sbb (bad) std or test jrcxz ss out mov jp loopne jbe push je (bad) es mov test jno (bad) (bad) fstpl lret xor cld jo (bad) (bad) lcall jno (bad) js (bad) mov movabs (bad) cld (bad) (bad) (bad) loopne insb xchg xlat cli (bad) (bad) (bad) test and rex.WXB or clc (bad) (bad) (bad) or add in pop (bad) pmaxsw movsb addl loopne popfq push or push push add rex.RX and jno fild jbe sub mov cmovae cmpsl cmpl (bad) rex.WR mov (bad) (bad) rorb shl cmp or shrd sub add add enterq mov movsbw ror neg jmpq push jmpq jmpq push jmpq bt test sub cmc test jp shl jmpq popq jmpq jmpq push lea jmpq push jmpq mov jmpq not push bswap movsbw jmpq clc test neg jmpq clc add jmpq jmpq jbe mov jmpq jmpq mov jmpq mov jmpq mov jmpq popq jmpq not jmpq xor clc bt stc cmp jmpq clc cmp jmpq jmpq jmpq pushfq jmpq clc jmpq jmpq mov jmpq jmpq shr mov bsr setnp mov stc jmpq jmpq jmpq popq jmpq mov jmpq push jmpq bt neg cmc not cmc jmpq je jmpq sub jmpq jmpq jmpq push jmpq inc jmpq jmpq jmpq jmpq clc add cmc bt jmpq jmpq push jmpq jmpq push jmpq je stc cmp je test addl cmp cmp cmc sub bt xor cmp clc cmp xchg test test cmp jmpq jmpq push jmpq popq jmpq popq jmpq push seta xchg xchg push bswap not push sets lea push seta jmpq pushfq jmpq rol clc add test stc test test add jmpq mov jmpq mov jmpq jmpq push jmpq popq jmpq rol jmpq test neg jmpq jmpq setno mov jmpq xchg repz rol rcr pushq ror jp btr movabs btr clc not mov not bts push movsbw sets btr mov btc movabs rol rex.W cmc sub out (bad) mov (bad) sbb shr bswap rol mov xadd bswap rcl shl sub not and xchg dec and mov shld lea data16 repz movabs xadd dec add setle shr not bt mov bsr dec setp add lea movsbw rcr mov sete sub movzbw inc movsbq rcl sbb btc add rcr not or ror not stc add shld sub lea inc bswap movsbw movzbq mov movsbw movsbw mov jg inc test test stc add jmpq jmpq push jmpq push jmpq push jmpq jmpq setp movsbq push not sete setae movzbl mov jmpq not mov movzbw mov test test cmp add jmpq cmc bt neg jmpq jmpq push jmpq jmpq jmpq jns stc add jmpq jmpq jg mov jmpq jmpq jmpq movzbl movzbl movzbw mov bt neg stc bswap mov stc cmc cmc not test bt not cmp cmp and jmpq mov jmpq mov jmpq push jp push jmpq jmpq jmpq push jmpq bt add jmpq mov jmpq jmpq push jmpq push jmpq inc bt jmpq add bt cmp add cmc rol jmpq bt test cwtl clc test sub jmpq push jmpq jmpq pushfq jmpq js mov jmpq movzbq lea movsbw movzbw mov mov jns inc bt clc jmpq push jmpq jmpq jmpq push jmpq pushfq jmpq clc bt jmpq clc add jmpq jmpq mov jmpq mov jmpq jg sub jmpq jbe rep cmc pop rcl test neg movsbl pop jb cmc cmp popfq jmpq mov jmpq jmpq sub cmp add jmpq jmpq jmpq jmpq jmpq jmpq xchg neg btr mov rcl bt or sar mov jmpq push jmpq sar mov bt xor adc mov test sub jmpq jmpq mov jmpq push jmpq push jmpq jmpq xadd add or cmc mov sbb xor mov jmpq jb push jmpq je stc cmp jmpq stc stc cbtw bt jmpq inc stc cbtw jmpq push jmpq jmpq push jmpq push jmpq pushfq jmpq movsbw lea push bswap setns push not jmpq jmpq mov jmpq push jmpq clc test jo shl jmpq shl jmpq push jmpq clc add bt add cmc cmc cmp cbtw jmpq inc mov clc stc cmc cmc add jmpq jmpq js cpuid jmpq push jmpq not inc add rol add bt stc not rol add setp sub bswap inc movzbq dec movsbl inc mov jl inc stc bt bt jmpq jmpq push jmpq push jmpq push jmpq mov jmpq jmpq add jmpq add jmpq sub jmpq clc cmp bt jmpq jmpq push jmpq jmpq jmpq jmpq jmpq movsbl push not repz btr pushq movsbw movsbq not rcr movabs bswap btc mov mov cmc push cmc mov setb sete rol cmc sub xadd bswap xadd mov shld ror add bsr sub bswap dec bt and btr mov inc rcr lea jmpq mov jmpq jnp push jmpq jmpq jmpq mov jmpq pushfq jmpq add jnp inc jmpq jmpq movabs shr cmp add bsf mov rol sub shr neg add or rcr sub mov dec movsbw inc mov sub movsbq inc sbb add bsr ror setb setge not jmpq mov jmpq jmpq popq jmpq jmpq jmpq jmpq push jmpq mov jmpq jmpq push jmpq or rdtsc jmpq push jmpq movzbl bswap jmpq jmpq je test addl cmc clc bt stc sub cmc cmc bt sub test cmp test xchg stc cmc jmpq push jmpq jmpq jmpq setnp push not not push not xchg lea movzbw push setnp movsbq bswap not repz rol stc not xchg pushq stc movabs setne movzbw mov bts push bts rcr clc mov bswap bswap jmpq push jmpq push jmpq mov jmpq jmpq clc test sub jmpq popq jmpq pushfq jmpq jmpq popq jmpq push jmpq push jmpq jmpq rep btc bsr pop movsbl jmpq jmpq jmpq push jmpq jmpq test rcr adc add and (bad) icebp movzbw bts sub not movzbq dec mov jmpq push jmpq push jmpq cmp cmc popfq jmpq rol and test sbb mov clc test jmpq pushfq jns popq jmpq jno mov jmpq push jmpq jmpq stc clc jmpq js jbe btr clc rcl lea test bt jmpq movzbq push bswap jmpq inc jmpq push jmpq jmpq add adc bt mov jmpq jmpq jmpq movsbq push not push movsbw movzbw jmpq lea not push jmpq mov jmpq jmpq jne dec sub mov jmpq push jmpq push jmpq jmpq jmpq jmpq mov jmpq push jle push jmpq jmpq jmpq push jmpq stc jmpq inc clc stc cmp cmp add jmpq sub jl mov jmpq cmc cmp shl jmpq jmpq popq jmpq mov jmpq push jns push jmpq ror mov jmpq jmpq jmpq jmpq mov jmpq push jmpq bt jmpq mov setbe mov jmpq push jmpq jmpq mov jmpq push jmpq jmpq popq jmpq jmpq push jmpq lea push mov xchg not jmpq jmpq jmpq stc ror clc clc push (bad) testl cmc rol (bad) lock fmuls adc add cmp jmpq mov jmpq add jmpq test add jmpq mov jns pushfq jmpq add jmpq mov jmpq jmpq clc test clc sub bt stc add jmpq mov jmpq jmpq jmpq jmpq sub clc ror clc clc bt xor cmc jmpq jmpq mov jmpq mov je pushfq jmpq cwtl jmpq jmpq pushfq jmpq jmpq push jmpq shr jge mov jmpq push jmpq jmpq mov mov movzbw push xchg push setp bswap not not push jmpq popq jmpq sbb bsr rol rol movzbl cmc bsf clc movzbl xor inc cmp neg lea bswap mov movzbw dec sar bswap btc bt xor bswap xor or shrd mov stc jmpq jmpq push jmpq bt clc add clc stc clc jmpq jmpq test sub clc add jmpq jne and sbb test xorb lea mov pop jmpq jmpq push jmpq es mov jmpq push jmpq jmpq push jmpq jmpq push jmpq lea jmpq bt sub jmpq add jl mov jmpq jg mov jmpq mov jmpq popq jmpq jmpq push jmpq jmpq cmp test add jmpq bt clc sub bt cmp cmpl jmpq push jmpq popq jmpq pushfq jmpq jmpq setno bswap pop movsbw movsbl lea pop lea pop movzbw movsbl jmpq rol stc jge neg jmpq push jmpq sub cmc test bt sub jmpq sub jmpq push jmpq jmpq jmpq push movsbw push jl lea push movsbw movsbl lea setne push bswap movzbq jmpq push lea sub bts adc bsr pop cmp cltq cmc bt stc cmp sub stc cmp stc bt mov bt bt sub jmpq jmpq push jmpq mov jmpq bt bt sub jmpq mov jmpq push jmpq jmpq cmc cmp sub cmc bt bt ror clc stc jmpq jmpq jmpq popq jmpq jmpq jmpq popq jmpq popq jmpq push jmpq popq jmpq stc add jmpq jmpq clc seto neg mov clc add jbe mov jmpq pushfq jmpq push jmpq jmpq jmpq jmpq push jmpq movzbl jmpq push jmpq jmpq push jmpq push jmpq mov jmpq push jmpq popq jmpq clc sub clc and jmpq push jmpq jmpq jmpq push jmpq pushfq jmpq bswap movabs bswap mov mov lea lea bts movzbl push rcr xchg mov lea rol bt ror clc movsbw sub dec mov bsr bswap setns adc bt mov movzbw sub shrd bsf bt and rol and ror mov rol adc lea clc movzbl sar shr movabs and add btc sbb cmc movsbw mov rcr movzbl inc add mov mov lea adc neg movsbw sub dec jmpq callq bswap not mov jmpq jmpq push jmpq test clc cwtl test bt cltq jmpq jmpq jmpq jmpq shld mov stc mov bt sub jmpq jmpq cld cld jmpq push jo push jmpq push jmpq mov jmpq jmpq jmpq push jmpq jmpq shl bts xor rol bsr bswap mov cmc add jmpq bts rol rcr shl mov cmc test cmp jmpq jmpq jmpq push jmpq jne divl jmpq push jmpq not not bts mov lea jmpq push jo push jmpq jmpq jmpq mov jmpq inc cmp cmc cmp jmpq xchg movsbw push lea movsbw push lea push movsbw bswap push lea movzbl push bswap sets push mov xchg push mov mov not push xchg setne push xchg bswap not repz movzbw movzbw pushq cmc clc movabs sete mov ror push jmpq cmp add jmpq stc add test stc cbtw jmpq push jmpq popq jmpq test test bt cmp mov clc jmpq not movzbq movsbl mov jmpq jmpq bts shl ror movzbl cmp cmc sar add add movsbw jmpq jmpq cmp clc shl jmpq jbe push jmpq push jmpq je jmpq jmpq jmpq push jmpq mov jmpq jbe mov jmpq jmpq push jmpq stc stc bt cmp jmpq jmpq rol test dec shr sub shrd sets shld bswap btc mov movzbw inc data16 (bad) or sub data16 lock shr shr and xchg mov lea shrd ror or lea movzbw rcr movabs sbb add add test btr lea mov and bsf clc add rol add shld mov clc xor inc stc sub bswap mov inc xor add movsbw not not add sbb and sub mov lea inc movzbq movsbw bswap inc mov jmpq clc cmc stc add jmpq mov jmpq push jmpq push jmpq cmc shld sub mov sub xor mov cmc cmc jmpq jmpq jmpq mov jmpq jmpq mov jmpq bswap not movsbw movzbw inc not bswap not sub add ror shl mov test cmc jmpq jmpq jmpq mov jmpq jmpq jno push jmpq popq jmpq jmpq jmpq pushfq jmpq jmpq push jmpq lea pushfq movsbw lea push lea mov not movsbq not mov lea std std jmpq jmpq jbe mov mov setne mov jmpq bt add jmpq popq jmpq push jmpq jmpq movsbq jmpq je push jmpq jmpq jmpq jmpq push jmpq setbe movsbw not pop not movsbw movsbl pop jmpq jmpq test btr add movzbl and (bad) repnz add bsf shl inc sub stc stc sub mov bt ror data16 repnz (bad) test cltd retq bsf bsf sbb add btr shld (bad) repnz mov stc cmp jmpq jmpq jmpq push movsbw setle movsbw mov push not mov movsbw push movsbw not lea jp push jo push lea lea movzbl lea push xchg jmpq popq jmpq push jmpq jmpq jmpq push jmpq divl jmpq add jmpq jmpq push movzbw push movzbw seto push bswap push mov movsbw jg push xchg movzbq lea repz ror movsbw pushq rcl lea rcr btc movabs bts bswap mov not rcl not bts push rcr clc mov rcl rcr setbe stc rol and xadd sub dec bswap inc mov bsf xchg sub bsr movzbw and shr bswap shrd xchg mov sub ror add setb lea rcr neg mov rcl movabs inc sar shl add bswap mov lea stc not add lea btc mov shl shr mov (bad) icebp sub inc movsbw inc neg cmc rcr add stc btc bsf not btc shld bt add add rcl sub inc jmpq jmpq jmpq jmpq bt test add jmpq jmpq pushfq jbe popq jmpq jmpq push jmpq stc test shr jmpq cbtw shrd shrd shrd movzww stc add stc lea clc stc rol jmpq mov jmpq mov jmpq push jmpq jmpq push jmpq push jmpq mov jmpq mov jmpq jmpq push jmpq jl mov jmpq jmpq movzbw push jmpq mov jmpq jmpq pushfq jmpq jmpq jmpq jmpq jmpq push setae push not push not lea movzbl push setbe mov push bswap movsbw bswap push movzbw xchg push movsbl lea bswap push xchg bswap repz ror rcr pushq stc xchg movsbw movabs rol jmpq movzbw dec btr lea cmp test cmp jmpq jmpq push jmpq mov jmpq sbb sub rcl inc and clc sbb add movzbw mov xor add bsr shld lea cmp mov bsf sbb movabs bt add neg movzbq shr mov btr inc xadd add movsbl shr btr mov adc setle neg sub mov inc bsf movsbw rcr add movsbw dec bt dec not jmpq jmpq jmpq xchg mov inc inc shl adc xor cmp bts sets rcr neg dec bswap inc dec shrd not btc neg xor jmpq jmpq pushfq jmpq bt lea cmc stc stc clc test jmpq ja jmpq jmpq jmpq jmpq jmpq mov jmpq jmpq jmpq jmpq stc cmc bt cmp jmpq jmpq push jmpq jmpq popq jmpq jmpq mov jmpq push jmpq jmpq push jmpq pushfq jmpq jg lea not setne not jmpq jmpq cmp sub jmpq mov jmpq push movzbw push jmpq test and test clc cmp jmpq mov jmpq bt neg jb inc jmpq cmp clc add jmpq pushfq jmpq push jno push jmpq jmpq push jmpq mov jmpq popq jmpq jmpq je mov not mov jmpq std cld jmpq mov jmpq bt cmc sub clc cmc clc stc sub jmpq cmp jmpq add jmpq push jmpq mov jmpq push jmpq push jge push jmpq mov jmpq mov jmpq js mov jmpq inc bt clc add jmpq popq jmpq push jmpq sar dec mov shr mov clc bt add jmpq popq jmpq test cwtl jmpq mov jmpq push mov mov jmpq mov jmpq jmpq jmpq test cmp add std test popfq jmpq pushfq jmpq push jmpq jmpq push jmpq jmpq jmpq jmpq mov jmpq jmpq lea mov jmpq jmpq popq jmpq setg push xchg lea push lea xchg not push lea setge jmpq inc test test add stc jmpq jmpq jmpq push jmpq jmpq jmpq bt test stc add cmp add jmpq pushfq jmpq jmpq push jo push jmpq sar addb add insl xor add add add sbb add add pop negl addb add insb xor add mov sbb cmpsl sbb addb add sar addb add repz addb add fildl sbb add add mov sbb xchg es add add mov sbb add add mov sbb sub sbb add add and add add adc add add insl xor add add rex.RX addb add loop sbb add add cmpsb xor add add negl addb add loop sbb add add mov sbb add add lods xor add add mov sbb add add loop sbb add add mov add add add add and add negl addb add or sbb add add std es add add rclb sbb add add rex.RX addb add or sbb add add mov sbb pop negl addb add pop negl addb add fildl sbb add add xchg (bad) sbb add add xor sbb mov add add add add and add fdivs sbb add add insl xor add add lock add add rex.RX addb add and add add and add add std es add add pop negl addb add lods xor add add mov add add negl addb add adc sbb add add fsubrs sbb add add mov add add add add sbb add add mov add add add add add add and add in sbb add add xor add add lahf and add jns sbb add add or addb add mov sbb rex.WX add add add sbb add add mov sbb xchg or add add int sbb add add (bad) es add add lock add add or addb add xchg es add add or sbb add add lock add add and add add xor addb add lahf and add add rclb sbb add add fsubrs sbb add add or sbb add add lock add add insl xor add add clc and add add mov sbb add add xor sbb adc sbb add add or sbb add add int sbb add add repnz add lret addb add rclb sbb add add adc add add negl addb add (bad) es add add mov add add sbb add add fsubrs sbb add add fsubrs sbb add add clc and add add mov sbb add add sar addb add lock add add outsl ss add add jns sbb add add push sbb addb add jb sbb add add sbb sbb add add clc sub add add negl addb add push sbb addb add lock add add lock add add in sbb add add negl addb add push sub add add adc sbb add add std es add add or addb add loop sbb add add clc sub add add out stc sbb fdivs sbb add add loop sbb add add xchg es add add mov sbb add add int sbb add add and add add sbb add add mov add add negl addb add fsubrs sbb add add repnz add insl xor add add mov add add add rclb sbb add add or sbb add add lods xor add add rex.WRX add add fdivs sbb add add cmpsb xor add add rex.WRX add add add sbb add add int sbb add add or sbb add add in (bad) sbb add add add add add sbb sbb add add mov sbb lahf and add std es add add xor add add sbb sbb add add jle sbb add add xchg or add add std es add add mov sbb add add adc add add adc add add mov sbb xorl add add add and add add add sbb add add mov addb add xor sbb lock add add fildl sbb add add sbb sbb add add lahf and add jns sbb add add or sbb add add sub sbb add add lock add add insb xor add cmpsb xor add add cmp sbb add add or sbb add add xor add add negl addb add push sbb addb add lods xor add add pop negl addb add rex.WRX add add and add add and add add xchg (bad) sbb add add sar addb add insl xor add add repz addb add or addb add jbe sbb add add in sbb add add xchg es add add sar addb add xorl add add add stc sbb xor add add add sbb add add mov sbb add add or sbb add add sub sbb add add sbb sbb add add xorl add sbb add add sar addb add insb xor add (bad) xor addb add retq addb add fsubrs sbb add add in sbb add add add add add cmpsb xor add add sti (bad) sbb add add xor sbb rex.WRX add add ljmp add sbb sbb add add jle sbb add add (bad) xor addb add in sbb add add sar addb add out stc sbb retq addb add add sbb add add lret addb add push sub add add mov add add (bad) sbb add add (bad) es add add loop sbb add add xchg (bad) sbb add add jns sbb add add xchg or add add clc and add add push sbb addb add ljmp add int sbb add add push sub add add xorl add sbb add add rclb sbb add add add sbb add add add add add mov addb add jb sbb add add ljmp add jmpq shr add inc setl notl sub mov jns cmc cmp cmp sub cmc clc stc and jmpq jmpq mov jmpq jmpq jmpq jmpq sub movzbw mov btr or ror shld mov jmpq popq jmpq jmpq jmpq jmpq popq jmpq jmpq std std cld popfq jmpq bt rol btr sbb not movsbl sub bt bsf neg bswap bsr data16 cmc movzbq mov mov stc sub rcr xor shr and bswap bt shl mov xor bt dec bts lea movzbl stc movabs test adc add sbb mov stc bsf mov xor add bt bswap setnp mov stc sub lea movzbw bswap inc btc not add inc shl neg not (bad) cmc add (bad) roll setae cmc mov bsr sub movsbw bswap movzbq mov inc not mov mov jmpq jmpq push jmpq test mov rol add jmpq push jmpq callq jmpq movsbw jg bswap push setge push bswap not xchg lea push movsbl push xchg not not push not lea push xchg mov push xchg push jmpq cmp test stc and jg mov jmpq mov jmpq jmpq jl push mov push jmpq jmpq jmpq mov jmpq mov jmpq jmpq neg xadd mov bt adc sar mov stc clc test sub stc cmp test jmpq rol rol sub bts movsbw inc dec bswap btc add shld clc mov clc sub bsf xor xor (bad) icebp add in add lea mov sub rcl xor shrd lea movzbq neg cmc add movabs cmc adc xor stc add btc mov sbb shrd shld add bt inc sub stc mov inc sub movzbw inc rcl rcl add shr not rol add movzbw shl test sub seta movzbq mov mov jmpq popq jmpq xor js dec mov bt cmc add ja pushfq jmpq mov jmpq bt mov cmc stc test sub cmc jmpq jne bt jmpq jae lea jmpq btc xor rcl mov rcl cmp cmc sar mov jnp cmc stc cmp sub cmc test stc cmp shr jmpq stc cmp cmp addl clc sub test clc cmc test xor stc bt xchg test cmp jmpq jmpq pushfq jmpq rcr notq bsr dec bsr or mov clc sub cmc cmp bt test and jmpq push jmpq jmpq jmpq setns mov ror bts rcr xchg push bt btr bt mov mov jb bswap rol data16 hlt add out data16 cmc cmc sub not add cmp bswap btr stc jmpq stc shrd jmpq jmpq popq jmpq jmpq jmpq stc mov shl setne add mov setno seta jmpq lea jmpq rol mov jmpq push jmpq mov jmpq mov jmpq jmpq push jmpq mov jle mov jmpq popq jmpq ja movsbw xchg bsf mov btc lea shl sar sub movzbq btr sbb not lea rcl dec lea and sub test sub lea mov mov jmpq jmpq jmpq push jmpq jmpq jmpq mov jmpq mov jmpq push jmpq jmpq not bsf dec inc mov clc cmc stc sub jmpq clc jmpq or shl setae cbtw mov bt cmc stc add stc cmc je rol test jmpq jmpq jmpq rol jmpq push jmpq sub bswap mov clc sub jmpq jmpq mov jmpq sub bt clc cmp mov cmc stc test jmpq ja jmpq jmpq jmpq pushfq jmpq popq jmpq cwtl cmc sub jmpq push jmpq clc jmpq popq jmpq lea jmpq jmpq push jmpq jmpq push jmpq jmpq test cmp jmpq push jmpq stc ror stc cmp neg bt cmc not cmc cmp stc test sub js cmc test cmc mov bt clc jmpq jmpq pushfq jmpq popq jmpq rep bts and and pop bsf bts bts pop jmpq jmpq shld shr mov add mov jmpq pop movsbq movzbw pop movsbw pop retq push jmpq jmpq ja mov jmpq jmpq jmpq push jmpq jmpq cmp lea cmc add stc sub jmpq mov jmpq cwtl bt cltq jmpq jmpq jmpq lea jmpq je clc test test test cmp jmpq add bt jmpq jmpq inc bt cmp cmc bt add test cmc stc sub cmp sub jmpq je movsbw mov movsbq setle mov jmpq pushfq jmpq jmpq pushfq jmpq jmpq jmpq stc cmp jmpq push jmpq mov jmpq push jmpq jmpq jmpq jp push jmpq push jmpq setl bswap movsbw mov jmpq lea bswap mov jmpq jmpq jmpq jmpq js push jmpq inc cmc add jmpq jmpq movzbw btc rcr btc movzbl sub or bsr setae sub bswap bts rcl jmpq pop movsbw pop jmpq jmpq push jmpq jmpq jmpq and not and sub movzbl test stc lea bt add cmc sub clc jmpq jmpq jmpq jmpq jmpq jmpq push jmpq jmpq jmpq push jmpq push jmpq mov jmpq jmpq popq jmpq xchg pop xchg movzbw not pop bswap pop not xchg lea pop jmpq jmpq pop jmpq rcr btc bsf mov ror not pop or bsr movzbw pop cld not popfq jmpq jmpq test cmp stc bt pushq jmpq mov jns lea jns mov jmpq push jmpq seto movzbl mov (bad) hlt mov clc jae stc sub cmp add jl pushfq jmpq jne add bswap xorb movzbq not pop jmpq push jmpq jmpq popq jmpq mov jmpq lea not lea push movsbq push mov movsbw push jmpq jmpq jmpq bswap mov adc mov cmp shrd mov bt not bt cmp not jnp sub cmc stc je and jp mov js pushfq jmpq popq jmpq add jmpq push jmpq pushfq jmpq jmpq jmpq push jmpq sub clc bt stc bt rol jmpq bt clc stc bt rol bt stc stc add test test add cmp cmc stc cbtw cmp test cwtl stc sub jmpq push jmpq jmpq mov jmpq push jmpq push jmpq mov jmpq mov jmpq clc cltq cmc test stc clc sub stc sub jmpq cmc add jmpq push jmpq jmpq cmc mov mov cmc bt jmpq jmpq jmpq jmpq sub jmpq mov jmpq jmpq jmpq jmpq push jmpq jmpq jmpq push jmpq stc and jmpq jmpq jmpq jmpq inc clc clc test add cmc clc test cwtl bt sub jmpq jmpq dec bt ror jmpq jmpq push jmpq push setne push seto sete setge bswap push jmpq mov jmpq push jmpq jne movzbw btc bsf xorb setno not jmpq jmpq pushfq jmpq inc cmp add jmpq inc movsbl sar not neg lea movzbq sbb neg bsr lea sar add mov mov jmpq jmpq jne clc mov stc and test cmp jmpq push jmpq jmpq movzbw or mov movsbw shr not mov seta not mov stc test add clc cmc shrd jmpq jmpq push jmpq jmpq push jmpq inc btc mov movzbw not and mov sar sub mov cmp add test test test shld jmpq data16 lock xadd not mov bt ror bswap mov cmp jmpq push jmpq mov jmpq jmpq jmpq clc bt clc shl jmpq push jmpq popq jmpq jmpq sar clc xadd stc mov adc shl mov rcl mov clc stc sub jmpq jmpq inc stc jmpq add cmc bt rol jmpq pushfq jmpq bswap test btc mov cmc test add jmpq push jmpq mov js pushfq jmpq push jmpq jmpq jmpq jmpq ja popq jmpq bt bt cmc ror test cmc cmp xor stc cmc cmc add stc mov clc clc sub jmpq popq jmpq push jb push jmpq jmpq (bad) lock mov rol mov test sub cmp cmp cmc clc shr jmpq je jmpq jbe jmpq inc clc add clc test stc clc cwtl cmc stc stc bt cltq cmp sub cmc bt sub jmpq jmpq popq jmpq jmpq push jmpq jmpq pushfq jmpq jmpq inc cmc add jmpq mov xor mov stc mov clc cmc add jmpq push jmpq push jmpq jmpq bt sub jmpq push jmpq popq jmpq jmpq jmpq dec jmpq mov jo pushfq jmpq bswap not test mov shr sar rcr mov clc sub cmp test test jmpq jmpq mov jmpq je cmp cmp jmpq pushfq jmpq jmpq pushfq jle popq jmpq cmc stc lea test test clc stc sub jmpq mov jmpq jmpq jmpq push jmpq jmpq inc jmpq push jmpq ror add rol setge bswap stc sub jmpq mov jmpq ja ja je jmpq mov jmpq pushfq jmpq jmpq jmpq jmpq push jmpq push jmpq movsbw mov jmpq jmpq push jmpq push movzbq not push jmpq jmpq mov jmpq push jmpq push jmpq jmpq jmpq push jmpq jmpq je lea movsbq setp mov mov jmpq popq jmpq pushfq jmpq push jmpq push jmpq jmpq jae inc bt cmp cmc add jmpq mov jmpq jp test clc add jo bt stc rol clc clc jmpq jmpq bswap (bad) hlt stc mov cmc clc bt add jmpq mov jmpq push jmpq inc movzbl jmpq mov jmpq jmpq jmpq mov jmpq pop bt bt bt bt popfq jmpq pushfq jmpq pushfq jmpq jmpq jmpq sub adc bts sar not sub sub pop cmc bt sub jmpq jmpq jmpq push jmpq jmpq mov jmpq push jmpq jmpq sub jmpq mov jnp pushfq jmpq and mov xadd sbb sub setnp xadd dec data16 (bad) or ror clc add mov xchg lea shrd movabs add add btr btr sub sub mov stc btr add add bsr inc bts mov not lea sub not inc xor add and not xor add bt sub lea setg movzbq bswap jmpq popq jmpq popq jmpq jmpq jmpq push jmpq popq jmpq bswap not movzbl mov jmpq cmp cmpl jmpq jne or mov test cmp stc and test cmp jmpq push jmpq jmpq jmpq jle mov jmpq push jmpq jmpq je jmpq inc clc bt sub stc jmpq jmpq mov jmpq jmpq jmpq cmc xor clc test xchg test stc stc sub jmpq jmpq jmpq push jmpq jmpq jmpq shld movsbw mov cmp sub jmpq cmc stc cwtl bt cltq clc sub cmc clc sub jmpq push jmpq inc cmc stc cmp jmpq pushfq jmpq jmpq cpuid cmc sub jmpq push jmpq pop movzbq pop jmpq jmpq mov jmpq push jmpq jmpq jmpq mov jmpq jmpq jmpq lea jmpq bts data16 lock mov btc mov cmc test add jmpq push jmpq pushfq jmpq push jmpq push jmpq inc jmpq push jmpq jmpq jmpq movzbw lea mov mov lea adc movsbw cmc mov setno mov cmc sub bt shld jmpq jmpq bt shl shr mov (bad) repnz stc mov bt jg clc add jae mov jmpq cmp jmpq jmpq jmpq push jmpq clc clc sub stc bt shr jmpq je ror stc xor cmp bt bt add bt mov bt sub jmpq mov clc neg mov bt shrd add inc inc stc add btr ror btc rol cmc and rol movzbw add not bt bt add movzbw shr movzbl stc mov cmc movl clc stc or jmpq push jmpq jmpq rcl stc bt mov clc adc jae rol mov cmp sub bt cmc jae shl jmpq not neg mov jmpq push jmpq js push bswap mov mov mov cld cld jmpq test setge mov cmp cmc cmc cmc add jmpq jmpq push jmpq stc add test stc jmpq push jmpq popq jmpq mov jmpq inc test add stc cmp clc jmpq jns inc jmpq popq jmpq add stc bt clc rol clc stc jmpq jmpq test jmpq mov jmpq pushfq jmpq je bswap not mov jmpq jmpq ror movzww stc test test jmpq jmpq push jmpq pushfq jmpq repz mov movsbw pushq ror mov bswap movabs bswap mov ror movzbw mov push xchg mov mov bts rol rol xadd cmp sub bt (bad) notl add bswap shl btc data16 cmc or in out rol jmpq movsbw setp movsbw setb mov jmpq rcl test movzbl and cmc movzbl add movsbw inc btr stc not not neg and movzbw shl btr add shld bsf neg stc add rcl xor cmc sar mov test cmp clc add jmpq ja movzbw mov jmpq jmpq jmpq push jmpq jmpq jmpq push jmpq pushfq jmpq je stc cmp clc jmpq jmpq jae push jmpq clc lea clc cmc clc cmp test jmpq clc addl cmp cmc stc cmc push bt sub jmpq jmpq jmpq adc cmp sub mov neg rol mov test cmc stc test sub clc imul jmpq jmpq push jmpq jmpq shr mov cmc cmc sub bt shl jmpq jmpq jmpq push jmpq mov jmpq mov jmpq jmpq pushfq jmpq jmpq mov jmpq jmpq jmpq push jmpq jmpq clc stc add bt jmpq push jmpq jmpq bt add stc clc cmp cmp sub jmpq lea movsbq seto mov jmpq jmpq mov jmpq push jmpq 