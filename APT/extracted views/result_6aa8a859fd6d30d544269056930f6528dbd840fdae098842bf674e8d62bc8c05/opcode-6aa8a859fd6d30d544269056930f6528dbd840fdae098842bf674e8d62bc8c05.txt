mov mov push push push mov mov pop sub push push push mov xor mov mov push mov jge fstpt test sete pop jmp mov sbb mov loopne andb or enter mov scas insl inc (bad) ds xor cmp jg pop pop mov pop ret nop add or inc add ja call push push push mov cltd mov push add mov in cmp jnp add xor and jle mov (bad) in (bad) loop jmp flds mov add add mov cli inc lea push push call out shrb push mov std jmp nop mov or cmp jne mov mov movsb and fcmovnb xchg xor mov loopne jge and movw std out int mov or call fstp fstpl mov test xchg or fwait in lods add xor test jne mov jbe dec enter sbb int3 mov jecxz lea or les sub and push mov mov idivb int pop add push sbb ds test add sub call (bad) or movsb mov lods jno sub je mov mov mov pop movsl pusha lret mov mov sub rorb and lods lea sti mov xchg insb add mov pop aaa ffree fcmovb inc or push push push jg cmp fistpl push jne mov stc add pop movl outsl insb mov pop pop aad or dec nop mov adc add roll push dec mov push adcb xchg pop adc inc add sbb lea push add mov ror sarb push addb ljmp std pop add ret xchg lea mov fstps sbb push and aaa jnp das adc cmpsl lods mov add lea int3 mov push pop adc mov div add pop xchg jl (bad) setne mov cmp push sbb mov dec nop and mov pop mov mov lea (bad) in and stos push push sbb mov dec push or or mov (bad) loope push sub add arpl lea push push xor out out in mov je jl sub outsl fdivrs adc mov sub or mov lahf push nop pop adc icebp xchg sbb ds adc adc push dec push adc (bad) sbb leave mov scas not push ss xlat jbe xor pop adc mov in pop js inc jmp push jae rep push and jl jge ljmp lahf sqrtps aad adc leave movl out push mov imul outsb xor or test (bad) mov mov mov sbb push jo fisub lods sub xchg pop push rcll inc push sbb mov (bad) mov mov mov dec je bound std mov mov jmp push movsbl jo push leave xor femms add jbe pop sub push inc mov out arpl adc inc pop inc push cmp jb and fisubrl or add ret pop in dec or xor (bad) call push add stos xor imul mov fnstsw (bad) fistpl fistpl and loop mov ret aas cmp xor fcomip xor jge jg stc loop mov mov xchg adc cmp movsb push lock (bad) daa dec fstl push adcb mov pop push push dec or ret test lods ret lahf push cmp mov or ret sahf cmp push (bad) neg sbb pop add add mov aad dec (bad) jmp lods mov scas and mov push rep (bad) cmp inc clc test inc sub jne les fadds and add fs or imul and push add aaa pop pop mov cmp and (bad) lock and mov je lea and mov or pop mov add xlat mov or push jecxz mov test pop in push test (bad) je les hlt xor lcall push cmp sbb ret adc adc ds push ljmp shlb imul std dec fisub cmp movsb jmp les shlb and hlt mov insb imul lock sub call mov (bad) mov add push aas pop int ret inc push les mov jae ds aas dec imul enter sbb jnp (bad) cmp ficoml (bad) adc xor lea push les mov pop je or mov mov add or add lcall pop push push push or cmp xchg or pop int sbb sbb push add xor sbb cmp and push jne outsb mov xor dec or (bad) iret push repnz insb mov fwait xor (bad) xchg (bad) sbb inc repz mov sbb add inc cwtl insl scas mov cmp in push adc adcl lods cmp pop std push push add fidiv ret lds pusha pusha adc cmp or jg (bad) in enter mov xlat xchg scas lods push mov xor mov mov adc push adc mov ljmp cmp adc (bad) xlat xor nopl mov cmp xor inc push fs adc (bad) icebp dec xchg (bad) push dec push push pop sbb fildll pop push sahf mov jmp dec das pop pshufb inc test divl orl ja (bad) gs neg inc pop pusha add cmpsl mov mov and push (bad) xorl push jecxz out (bad) cmp icebp xor lock xchg push inc adc (bad) ss add push or vpsubsb inc sub xor (bad) rolb outsb adc pusha lcall insl push mov or fs imul lcall jmp push add jo mov out or adc je cmp out cmc push add xchg test aam js cmp and mov mov cmp (bad) pop loopne mov nop sbb pop lock inc and dec mov neg scas jns mov cmp je push and inc ret inc sbb fnstsw ja pusha aam mov pop daa and bound js jle dec mov cmp mov jg pusha sbb pop mov add pop fmuls mov scas pop dec mov or or cmp test mov clc mov jne dec add or mov into mov or in jl and je mov loopne adc cmp jne (bad) xlat and jge lock sbb inc push loop inc xor or and cs xchg push ret aas xchg dec mov lea mov je cmp push dec mov insb inc sub jmp jnp push or fs sbb aad sub mov loopew inc (bad) out shr mov adc xor or add push sub mov sub add ret push push mov dec mov mov inc jge (bad) inc fnsave popf xchg sub mov adc insb push adc adc fiaddl mov adc pop pushf push pop fcmovne leave or mov or cmp (bad) or jg cmp jl jmp add push lret jbe lods sub jb adc les dec and popf push adc fsts pop sub imul movb out jge push adc mov jb (bad) adc gs cmp out push inc pusha (bad) fsubrs push int sbb shrl mov adc sub add bound daa jb xor push test outsb xor mov inc push rcrl xor jle push jnp aas mov pop test je mov data16 mov out pop mov cmp gs xor push adc mov in and xor push sub adc popa rcr out imul adc in mov mov xchg lock mov mov mov add fisttp mov sbb add cmp jne cmp aas ret jo add and mov xchg clc jg sub cmp and cmp jbe mov sub add push adc mov lret cmp or sub das push push mov fwait ds cmp jae pop lret sub jne sti add in (bad) push cmpb jae xchg data16 sub adc fstpt or push or dec sub pop mov dec shrl daa arpl sub mov idivl xchg jl arpl mov xchg cmp add inc dec stos push add test push adc inc repnz push push inc add or add lods dec mov loopne cs xchg mov mov inc jnp inc add add fsubs pushf mov das or fisubr mov inc out pop adc test insl push mov sub mov mov jne mov cmp movsb mov adc jo push push nop enter fwait and mov mov or pcmpeqw mov mov test and iret and pop test or insl mov push aas dec (bad) in jbe ret inc add push sub jae and pop jl test mov inc inc mov sub int3 jmp jg sbb adc call (bad) push test sbb cmp jne sbb ss mov cmp int3 cwtl adc mov push push sbb fidivr mov cmp jne mov push and dec imul ds pop out inc sub xchg in or and inc and dec sub push out mov xor push push sbb xlat pop aaa dec inc sub das cmp es imul xor push inc mov out sarb push jb in fsub pop test xchg xor imul test add or mov push push repnz cmp mov jmp mov mov imul or jge and push jo sbb cmp sbb push pushf (bad) call sbb jbe pop call sbb insl cmpsl out mull nop fdivrl sub jbe clc inc or insb test lods enter popa mov repz mov jg sahf xor fisttpll pop lock jne mov movl (bad) pop lret stos adcb pop clc mov in jle cmp or lods dec jmp imull sbb inc pusha dec out fdivs push mov xlat dec aam ret in adc (bad) test add pop push mov push pop mov cmp in mov or cmp adc out scas xor add mov sarl push cmp aaa ds or mov sarb cmc int test pusha mov sbb ds xchg in int adc dec lds dec sbb push int mov test pop ja dec (bad) es jae sbb and jp pop pop or xchg mov add pop mov notb pop add add and pop xor add pop jge sub xor push fld icebp inc fstpt in mov xchg cmp push cmp fnstcw repz adc xor out (bad) jne adc jne cs cmp cmp xchg out je adc sbb pop sbb add push dec and iret ret stc iret jae popa xor mov push icebp dec pop adcl imul cmp jae sbb or adc cld daa sub rol adc mov xor (bad) sbb mov jne xor push mov cmp je lea jbe pop jbe enter fimull mov js adc xor je pop push jne insl fidiv jns push jmp sbb dec xor jo add add js mov push push pusha cmp jne adc xchg fidivl push jg mov mov add mov inc rorb inc or sbb iret inc outsb sbb push notl imul inc clc dec in pop push adc jne jge insl cltd in mov inc (bad) into cmp je dec (bad) mov ret insl add clc jle pop mov imul outsb test mov mov into stos or adcl or mov call add push cmp adc pop pop push or addl outsb cmp gs dec mov lret dec outsl fwait dec adc mov fidiv pop sub xor push add add dec mov cmp inc push jns insb xchg push imul nop outsl jmp push sub xor or cwtl test jo insb xor pushf cmp mov adc push push sub shll ss add push in jne sub jl jg cmp loopne add out pop sbb lock lock inc or or xor pop ss int sbb cmp loope dec mov add or mov mov test sbb add adc adc adc lock dec mov aad or inc and das push push pushf inc inc lods arpl testl dec push (bad) mov mov pop push (bad) and inc into xchg outsb pop inc jne,pn jmp push cmp lds pop sub shrl inc mov pop fstp and sub xor mov ds outsl call add jg inc sbb ss sahf fldcw and dec call pop or xchg imul push bound lret dec mov or mov push or sub icebp (bad) repnz mov test hlt mov pop sbb loope lock or push scas mov loopne lock lds imul pop stos xor jle or jno push xchg clc int pop (bad) push jno sbb and dec push xchg aas and sub inc sbb push aad lods inc sti loop es dec pop jb inc outsb push outsb xor push jge lods insl sub or push cmp sti dec cmp or mov mov or jbe fstps leave inc add adc push push in xchg ret dec mov jp ret add push push jno cmp sub push (bad) or sub insb xchg cmp (bad) push cmp mov sub fldl adc or (bad) xchg out sub pop dec add or aas pop mov (bad) std mov pop call test jbe inc in bound les mov jo xor push (bad) jbe pop jge inc roll mov loopne sbb inc (bad) dec mov je and (bad) imull and add mulb fs jnp mov cmp cmp inc fildl fbstp ja push sub xchg xlat xor dec hlt pop jne inc dec lcall and sbb test xchg or (bad) popf cmp sbb movsb mov sub jbe sbb dec ss (bad) sbb scas sbb stos daa mov adc add jmp mov lahf imul bound iret pop dec xchg xchg mov push add lea call or int (bad) xchg xor cmp xor and pop and insl call add mov imul and leave or arpl cmp add push push scas xchg pop dec dec and adc outsl or cmp push pop pop dec adc aam call or cmpl out je push sub mov cltd andb arpl nop and sub cmp push push (bad) sub pop mov pop jle xchg xor fidivr out jne fs loop cmp daa int or ret xchg xchg out test jbe mov xor and sahf pop fisubr push sub in adc push sub mov clc outsb daa and cmp jne movsb ror arpl cs sbb mov dec cmpsl popf ret jp ret fwait mov mov cmp pop ret push cwtl sbb jl and or dec adc dec hlt mov pop ficom ret fisttp (bad) dec add dec lret push pusha (bad) inc add nop inc movsl mov cmp or add cwtl clc jmp stos xchg jne cmpsb pop negl rolb inc xor push ficompl inc push out cltd sbb cmp or das es sub or pop rcl push dec sub js sarb imul lret (bad) xor pop imul lea push addr16 jae data16 pop addr16 xchg adc pop jmp test or fsubrs cmp push pmulhw add mov xchg xchg push mov add xchg rcrb popa cwtl jp add push je gs or add ja jb cmpsl pop xor lods and push stos pop add add pop sub call les xchg insb mov adc arpl pmaxub xchg push cmp lods stos sbb push mov mov pop mov xlat jne daa mov or (bad) push mov mov adc ror shrb add adc adc mov mov xor sub pop adc add das jne xor (bad) lods fs cmp stos pop adc push push xor out fxch inc mov mov and in or js sbb mov fsub gs xchg sub dec call mov cmpw sbb lcall or lds push pop adc test cmp push xlat push imul xor or sahf add jmp cld cmp aam dec xchg mov sbb jno sbb notl mov sub adc pop cmovno es jecxz or sbb sub jb xor pop cmp cmp les xchg xchg pop inc or sbb push mov lods xchg push sar vmptrld hlt cmpl dec pop leave mov out (bad) je shrb sbb inc ret adc adc and icebp sar add daa lret add loopne or push movsl inc adc leave xor aam sbb das mov mov mov ss mov jbe pop sub pop push push push and xchg jp jle jne push rol loop add jge je movsl or and mov and pushf pop dec roll or loopne adcl push scas jbe jbe dec test aad sbb pop lock adc add rorl adc clc ret pop pop push in cli lsl cli add andl jmp xchg pop sub adc je mov mov push jns add and cwtl leave xchg or jmp popf adc cmp fidivl and bound int3 int pop mull cmp push jecxz sub jle jne and pop push scas mov mov add pop mov mov adc shl lods ficomp out cmp lods je xchg jnp test insb ret sahf movsb (bad) xchg in dec jo sub fdivs out xor jmp je mov addr16 sbb cltd je dec cltd push flds pop and inc pop xchg and inc sbbb adc ja dec pop loop test fadds lret test loop push sub (bad) outsb cmp sahf add imul movl loopne addr16 notl mov and push mov cmc popa inc decb in popf push fimul dec cmp adc mov out pop orl icebp inc sahf es xor jbe in ret adc pop jle pop and or pop mov das inc or sbb out jbe das pushf daa pushf rcl cmpl sbb mov and jne adc in sub inc cmpsb jae xchg ret lock mov andb mov sub stc push mov lea xor or sbb inc subl bound pop adc mov ret fdivs push fisttp push or rolb push push mov xor xor push loope stos or jne repnz cs push and mov repz pop ret pop push adc fisubr and loopne ss mov adc les xchg mov pop sbb or add jbe jns pushf jmp xor int3 repz add push btr pop mov inc cmpsb inc mov jp mov mov add push lods pusha mov pop inc outsl fnop jo mov and sub push es jbe or sbb insl push push push pop add jle xor ret popl lock mov jns push pop test add fisttpll jmp or loopne pop push icebp stc mov or add push inc xor pop inc xor testl xor rol fcmovnu testl pop sub push fstpt or shll jbe (bad) je imulb je push push lea test pop pop inc or je (bad) js and sbb push or add ss mov mov (bad) mov push or or fidiv xor jmp mov jmp pop les sub xchg push add out fldl sbb loope scas jne xchg or and xor jecxz repz je mov divb scas aam jg mov inc cmp je xchg or or ss or cmc push outsl mov jle popa add jle je cmp jne fild sbb mov fucomip mov xor ret fdivl inc mov xor mov inc push mov fstpt sbb call inc jl add jg add (bad) testb dec sbb (bad) fidivl imul ja pop push inc inc mov adc or cltd inc pop pop or push (bad) sbb sbb test mov loopne lock cmpl cmp jl popl into sbb pop nop mov lods pop arpl and aaa jle lea or mov dec xor mov and jne jmp mov insl or bound add icebp andb mov pop or sub or pop mov dec ret mov lea ret mov xor mov and outsl rcrl jmp add or rcll ret (bad) mov jle push clc mov clc xchg ret into or add fnop call push mov xchg mov mov in lea push jg inc or in lods frstor andb jns jmp fisttpl or push insl push mov push push push addr16 pop (bad) pop je xchg push dec pop and aas cld decl mov or dec inc dec or stos push sbb and push popf (bad) (bad) mov inc pop push dec je xor (bad) xor add push dec (bad) cmc inc pop xor mov cld xchg in dec dec add (bad) or mov mov orl adc test pop pop adc rclb gs mov call andl jbe call push mov lea lcall leave scas in or or push mov xlat enter jp push loop test jnp,pn and pusha movsb js mov int3 popf lds xlat daa pop (bad) rorb scas negl sbbl les (bad) loopne and or fimul add or sub mov pusha add fiadd (bad) inc (bad) inc xor shl mov mov sub sbb pop inc add cld lea pop sub xor es mov cmp adc clc jne fiaddl gs pop (bad) adc hlt sbb cmp fcomps clc fisubl xchg xor push pop pop mov in test jnp lods movl out sbb scas js pushf arpl dec add cmp inc sbb cmp xchg flds sub lock hlt clc cld cs mov mov popf fcomp fldenv sub adc adc lea push (bad) xor mov lea test dec int3 jge sub loope pop mov mov pop das fmul int3 shlb mov flds push xor scas movl xchg dec add in adc fwait jo add faddl pop push jne and or movsl bound mov sbb arpl dec je push insl mov into mov dec ljmp jl fidiv clc fistp (bad) pop lods dec adc add cmp cmp add add movsl pop mov jge adc ret dec jae inc or out cmp inc ja push int3 add lods (bad) idivb adc ja ds cmp in sub les loope adc xlat faddl scas xor scas xchg inc mov add cmp lcall push push stos testl add jmp jge ffreep mov jb loopne add pop test dec divl push lea adc or and shl mov mov mov mov int add mov arpl dec xor lea and sub add pop ja and mov pop mov test fs mov (bad) in call call cmpsb imul test mov addr16 add or lock loopne sub pop pop xchg nop popf or add mov or sub xor sbb cld jg or fninit cld ja dec neg out (bad) lock in xor (bad) stc sub fwait jmp pop or mov fisttpll cmp dec pop dec push mov test dec pop mov enter sub lock sub cltd ss pop call lcall or sbb (bad) xor insb aaa dec xchg sbb sbb xor sbb adc or dec (bad) xor or add mov push add mov xchg mov xchg inc cwtl sub inc inc sbb mov mov nop dec popa mov and icebp sub stos add inc in add inc dec push mov fbstp sub stc add shr inc stos mov outsl mov add mov test jle xchg jne not subl pop pop mov clc fcomps jne push push mov mov push push xor loopne out outsl test rorb aaa mov and ljmp add or loop cmp adc push pop arpl movb adc insl mov es (bad) cld or pop hlt adc push fisubl daa scas arpl movsb sub scas insb rolb or jb jl pushf testb enter pop xor subl push fbstp or or dec es dec cwtl cwtl mov ss push (bad) fidivrl push push push or and and (bad) jne sbb jo sub test dec inc push add push jno (bad) cmp daa push insb outsb pop adc sub fmuls cmp outsl orl in push xor fistl ret aas add stos in rcrl cld pop add cmp sbb jnp leave dec fdiv int3 in cmp and push xchg fldenv arpl rcrb jp inc shll roll call fisub inc lcall movsb or and aaa inc mov pop push mov dec lcall sub ret adc je aam insl inc bound jne or push dec sarb push or (bad) jle xor (bad) cmpsb lret scas stc xor lock xor inc mov outsl add into and movsb and pop andb inc cld cmp je cmp loopne daa out cmp je aas out (bad) dec rcll adc sub mov (bad) aaa push std cld das add in call jl cmpsl ret or loopne and dec xchg jne mov loopne adc jle fiadd hlt xor push (bad) cmp ja test mov cwtl inc cmp fildll xor sbb or in (bad) out (bad) adc pop in ja push cvtpi2ps inc push fdivrs pop inc pop jne push jmp xchg lret lds add scas pop leave gs and push pop in push or and xor and jnp inc sub cmpl xchg xor jne push sahf scas imul mov aaa pop roll mov lock sbb xchg mov sbb (bad) xor jp jnp stos cld adc push sbb in sbb cmp add lea pop push push fcompl or push lret pop and and dec testl movl jge jle les push jmp mov add sbb sbb mov sbb inc shll jne mov pop jb and loope stos cmpsb movsl pop jmp bound and xchg push fimul test jge sbb or hlt fdivl adc div es lods lea mov and dec fcompl int and dec in push call or adc add xor add inc ds mov aad push fidivl lods ljmp mov mov enter pop loopne pop imull jbe (bad) push fs pop mov dec je (bad) mov add jo xor and add shrl (bad) jno fldl cmc rorb cmp mov dec dec repz icebp sub push push add lea dec cmp aam dec and inc jmp pop or push mov push add stc decl andb mov mov push std or inc mov or cld push or add (bad) or imul push sarl test mov idivb je andl lahf inc sub and mov mov (bad) pop mov sbb and or test lret out adc adc inc loop xor cmc in fcmovb push int3 mov pop orl daa or push je mov sub out pop rol push pop sbb ljmp jo jle ficoml xor pop mov cmp jle add lea mov mov mov and mov in cmp sbb pop test (bad) or (bad) mov or jmp jb fs or ret push cmp ficompl mov push inc test pop in add mov adc sub mov jmp fsubs ss or cmc in cli outsl fistp mov and add jg movsbl mov ffree por je xchg lret cltd pop xchg les aaa cmp mov push dec and pop inc subb xchg popa adc sbb aam lods mov jbe push dec jb sub cmp je pop jo inc cmp dec dec je or mov daa or inc xchg mov adc or sti sub cmp fstpl pop inc add push incb push mov inc inc shr jmp jp push clc leave pusha out sub sarb (bad) pusha outsb push aaa dec mov mov pop pop insb je ja jmp cmp mov adc and ds jo outsl inc cmpb jne inc inc enter and les sub ret imul ficoml xchg in lret inc loope sub add jl fmul sbb push clc addr16 jp gs xchg jle push in push test cmp or jb add shrb mov mov xor adc (bad) xor mov mov and fildl adc pop int hlt dec sbb lret push or mov mov aam (bad) dec xor mov or out inc jmp and rolb or xor mov dec (bad) int clc or xchg push xchg (bad) aaa xchg popw test xor out aaa xchg mov testb ds pop ja imulb lds add push dec popa cmp pop mov lock xor and outsl fwait ljmp je (bad) roll jecxz out mov ret arpl or push pop mov xchg fsubrs in or addr16 (bad) mov int3 rcll add (bad) mov add jle inc pop (bad) je out push dec scas js jmp ss (bad) mov xchg sbb insl ljmp mov sti jo sbb inc adcl loopne mov and jl mov adc or add jbe mov sub ret lret jae imul push sbb dec data16 jae imul mov loop jecxz mov jae daa cmp rcl inc sbb inc andl mov inc add icebp es dec and pop fmull adc inc ljmp push dec mov and cmp push cld push mov push js inc and mov add pop push nopl dec mov jno or je cmp mov jmp cmp fs mov int3 sub rcrb jmp fbstp jmp pop xor sbb stos mov loop sbb adc rclb or fisubl je add mov gs pop pop test adc idivl mov loopne xchg fdivl sub xchg xchg pop jg push or sbb lock imul mov mov fisttpl pop xchg jge lret divb pop add inc hlt hlt mov jmp push add pop sub xchg add stos mov cmpb je or out shufps sbb lock cld test es imul or jmp pop imul or fcomp xchg dec mov inc sub adc cmp and mov adc ljmp fcoml adc add aam or mov inc add lock decl testl (bad) mov pop dec jle lea loopne in mov mov dec fldt insl add sbb mov test jae adc gs cwtl fmuls xchg or mov mov out clc xor fisttpl pop (bad) xchg push add std xor cmp test dec add fsubr inc fnstsw adc mov addr16 pop or mov sbbl cltd scas lea pop ret jecxz add mov ret add or fnclex inc insl xchg aam dec cmp es xor push inc sbb in iret fs ret dec loop int3 mov bswap orl or movsl test insl pop mov xchg mov sbb sbb sbb fnsave in pop sub mov stos inc cmp jle icebp cmp jb stc and sbb or fldl ja add pop cmp xor mov pop lret sub cmp dec mov push jmp movsl (bad) arpl xchg imul js push sub sub push mov cmp int adc pop popa fldt push inc out inc jo inc sbb fwait push adc jg adc cli jb inc jbe aas insb es push mov xlat lock adc (bad) mov aaa xlat adc das ds or push mov or and and adc cltd nop or cmp or cmp leave adc add das xchg adc pop (bad) scas push ljmp mov loopne adc add sub repz enter aas fcmovnb pop test test xor out inc mov in cmp sub leave and cld push jmp push dec insl xlat lods and jmp dec mov add add cmp dec ss dec mov ret or pop adc dec mov mov push xor lahf push daa cmp and (bad) xor pusha pusha popa add test xchg xchg push xchg inc adc jae push pusha enter enter test mov (bad) mov dec push popa adc cmp xor std imul (bad) add adc cmp frstor mov mov pop cmc jg pop push lea cmp jb mov or pop loope add and pop push leave ja cltd push fistpl fild push js ret orl cmpl jae adc movb (bad) rcrb pop scas pushl pop add adc cwtl pop push fadd insb sbb aad fildl or sub add loop push mov adc push pusha or arpl out shrl mov or push cmp jge lea fcmovnu decl shl mov add fs and aas inc add cmp jl xchg comiss cmp inc pop or popa aas pop cmp cmp jae ds (bad) iret and xchg push arpl xor mov jbe cmpb mov pop cs lret mov jmp imul sbb (bad) lods fxtract popa mov pop cmp xor dec add sub add cmc ret imul mov or ja or push mov cmp je cltd and out jle pop ficompl outsl add imul xchg cmpsl pop xchg jmp push or (bad) rcrb cmpl sub js jbe jb mov or sbb xor push (bad) insb mov mov shrl and mov sbb or addb sbb jl in shrb test sub idivb push in dec pop jle or divb adc pop or je js xchg imul pop inc jo push fs mov jbe movsl mov in in add or fisttpl shll fsubs movsl dec call lds sarb lods rcrb or sbb clc ljmp jg cmp jg mov push mov push and mov jle jl stos inc mov adc xor jbe aaa sbb daa test loope sbb in cmp mov inc mov data16 stos jg jmp pusha in jp in push movsb mov cmpsb lea sub decl leave mov push mov call pop leave mov pop lods mov lock div dec push mov aad pop test cmp dec and pop bound (bad) cmp jae sbb jno aas xor clc jae cmp jl cmp mov inc fcmovnu mov hlt fs cmpb es sub f2xm1 push push outsb or (bad) jmp (bad) adc test ja mov cmpb orb add roll rorl pop jecxz dec jle or testb sbb mov mov and and jb xor test push xchg jl cmp ret icebp sub or add cmp add jle cmp outsl push loope cld es lock mov push inc cmp (bad) das mov jae mov ss pop inc push add mov add je test mov sbb jl sbb add push ds test sub inc add pop sub mov xor outsb push push fistpl test sub test popa push (bad) jae sbb and adc loop nop fcoms leave rorl test push std aam cmc sbb or sbb sbb sub mov push dec jo mov lods pusha or mov imul int3 cmp popf and pop lea xchg pusha repnz (bad) mov xchg (bad) lock sti xor xchg and jae sbb cmc scas inc pusha cmpl dec and push jmp fiaddl dec fisttp dec push jg cmp cmpl js push popa jo push cwtl add les and or add mul jnp mov imul or clc jo adcl out inc cmp js pop pop es mov push adc push push and cmp pop mov lods fcmovne xchg pop xor jmp sbb movsl adc sub dec jae sbb add add (bad) mov es test or push pop and (bad) or xchg sbb add cmp cmp mov xor dec (bad) int pushf push pop jmp cmp dec fdivs dec stc fisttpll cwtl mov je pop repz pop sbbl (bad) sbb rcrb or adc xorl mov addr16 cs pusha cmp jo push popa sbb inc sbb pop adcl cli pop daa mov mov sarb mov mov or sbb xor ror mov sbb iret push loopne xchg out lea shlb fstpl cs divb icebp add mov pop xchg sbb fiadd imul jo mov and sub mov xor pop sub dec insl outsl sbb add adc or pop shr pop push pop xchg push jae xor pop sub mov jne sbb iret dec popa jg mov jp adc mov lods in int js push or repz add stos xor fadds insb adc leave movsb sbb les js dec push add and fisttp pop fsubr cmp xorl roll dec add stos or jbe jae (bad) sbb push inc call cltd sbb jne lahf push adc mov into stc push and adc dec adc out and jne xchg xchg mov idivb lret mov mov or mov adc xor pop (bad) jmp outsb inc sub add xorb repz aam push push jae xorb stos cmp imul add aam enter jo out xchg add push dec inc sub or ss xchg and mov or add pop pop sbb out xor inc dec cmp push inc jmp push cmp or inc push andl pop jne push je push xor dec dec adc subl xor adc enter (bad) lahf and and int repnz add cmp push in mov add (bad) or loopne loopne loopne daa jmp testl (bad) mov iret ss push fmuls mov shl imul bound push loope,pn pop (bad) push and test or pop loope cmp sub adc cmp jne adc mov jecxz negb out jmp cmpb or jnp cmp jbe inc or ja xor add jmp les push sub sub adc movsl inc mov add call int3 mov adc adc cmp mov mov sti insb mov cmp mov test dec pop cmpb and cmp jns ffree mov cs ss subl pop add aaa jne pop incl mov movl push mov mov mov and push add cmp je or sbb jns mov mov aam insl fsubs daa imul push xor loope data16 push jle sti test and (bad) mov mov cmp dec aaa dec lock fmull inc mov inc cmp les mov je (bad) testb lds push mov mov inc inc or jmp or andb inc inc fistl sbb add jae outsl leave testb and xchg lret or jne (bad) dec jmp dec inc mov aad call cltd lods pushf loopne sub inc dec pop enter push mov sarb sub and jmp adc hlt xchg sub xchg test or js and sub cmc fldt or rcrb sbb xchg ret shr mov dec fcmovu mov mov push pop inc mov jne sbbb sub or (bad) insl insl invd adc sub loop add test pop sbb inc adc mov add adc xor in fimull push fs add nop add stc dec mov jb push sub adc ret jne imul aad repz jnp cmc sub aam sub dec inc dec ljmp inc data16 inc or add aas daa ret jae ss jmp inc or repnz ss idivb inc sub pop add xor dec mov jmp xor and xchg and push add mov and andb add aas pop push sahf sub jmp mov movsl test je pusha mov inc and jnp add sub inc push into or push mov or and cmp cmp or pop in mov push adc (bad) lcall pop pop xchg or xchg orb fmul (bad) mov jae outsl add andl fisubr into movb mov pop jmp push into and lock cmp insb (bad) or lea cmp mov mov xor push in add fdivrl cmp subl (bad) jae mov pusha or inc xchg pushaw inc mov je add xor mov push mov ret sub xor call mov cmp and test push stos inc or pop cmp mov loop (bad) mov mov mov mov inc inc std jl or aas pop (bad) or cmp dec test push adc enter jmp ret dec lahf pop stos clc imul das cmp je push xchg shll mov in addl orb jmp or cld pop mov push add add andb xchg shlb push rcrb jne jmp sub movsl xchg mov xchg inc sbb arpl cli test test mov arpl xchg jle dec sbb mov adc jb xor js sbb in push mov mov inc mov mov lea cmp add jl cmp jg sub mov inc cmp jne inc push (bad) fmull mov mov jns fcompl fs clc push fsubrs add push inc xor inc sbb jnp mov in ds or inc jbe xor das mov sbb push insl fsub mov xchg inc xchg sbb out inc xor imul test cmp popa push pop ret jno test adc (bad) repnz inc push shll pop je ss inc mov and nop pop je ret ja repnz lds xor dec push fsubs sbb sub add popa and push sub push push mov pusha movsb loopne call ljmp xor pop adc int3 xchg or rorb cwtl fstpt lds cmp insb fwait je popa mov mov cs xlat mov jne icebp adc add and xorl pop test inc sti push outsl loope pop adc mov pop xor sub push sti or sbb add push insb stos push ss push pusha decl adc cmp ss test mov rcll adc pop stos jp adc daa pop cmpl pop jmp and xor divl adc rorb or popf push mov jb and push cmc (bad) mov pop aad bound pop testl dec mov negb add pushf rcrl lea mov pop mov pop mov add pop cmpsb adc and sub bound or mov sub shr mov imul push and add dec test clc fldl mov adc lea outsb sbb xchg mov mov cmp pop add sbb dec test pop ljmp jnp adc mov lock mov mov pusha mov shr lea not and (bad) sub orl and pushf mov jae and pop add pop loopne cmp pop push adc add pop add push or pop je push popw sarl aad lods pop jmp xchg hlt mov sub rcll fstl sar sbb lahf fcmovnu inc dec fiadd roll cmp adc cmp je mov dec jno inc cmp mov pop loop out (bad) and add dec loopne int bound sbb mov push in mov mov mov or into mov hlt or ret fldcw add xchg imul aaa add add push jbe (bad) (bad) rorl or jbe fdivs pop jne sbb imul adc lods or jmp and xchg scas lock and mov ljmp push cmp dec lock mov push js jnp ss dec push ret movups subb insb negb pop xor pop negb or push cmp andl and decb or jns fsubs fs adc lods imul jnp or call cmc movsl sbb shl enter dec adc cmc sub lea repz fildll cmp sub sub or push and or orb xor lea mov mov lock and sbb jge mov or movsl push jne jmp nop adc and push sub movsl adc jae inc sub and and or sbb mov sbb pop jne mov cmp es add pop and mov mov jnp aas adc jmp cltd mov enter das out clc push insl add jb jnp je lea jl pop adc out mov mov test imul mov movsl adc push cli (bad) push cld sub jnp pop mov jl inc mov mov jo or push push inc in outsl lea add jne mov pop fcomps mov xlat je mov sub push mov fstl dec push into pop push mov fs pop jl shl inc and fisttpll or push icebp cmpsb fbld sub sub (bad) aas jle movsl (bad) mov or or test add call sarl pop mov decb jne jns movsb lods pop mov or leave dec adc mov sbb sub pop (bad) ss sub mov and push mov fidivrl inc sahf jp or mov pop hlt mov and idivb or mov push decb jge rcll add into shr or or mov cs jmp sub imul bound sub mov lods push inc mov xchg and or add cld clc insl out jb loop lock and adc cld cld jbe pusha lahf shlb lea jne,pt cmp in jne dec cmp xor test gs adc or outsb insl adc push outsl and test sbb mov enter mov or ret or andl lds cmpsb and xchg pop pop mov sbb or and stc jp sub and mov rclb bound nop lret add mov out mov xor fcmovnb (bad) lea dec loopne ret aaa imul (bad) pop clc xor jmp rol add dec push sti test out and adc mov jb xchg add das lcall cli ja lea orl in pmuludq int3 mov movl inc mov out int cld sar faddl push sub cmp jbe mov dec or clc mov lods push shrl jp mov mov mov (bad) loop sbb test jp dec inc subl shl add cltd ljmp ret mov cld lods dec cld and lea sub xchg push jp aas shr test dec cld dec cmp add (bad) js cli lds (bad) add xchg (bad) insb cmp movb lock lea pop xchg fsubrs pop xor cmp mov pop push clc icebp add sub and xchg sbb nop dec or je pop mov fs sub out fcmove add fwait stos insl outsl or lret incl inc xor adc mov (bad) cli pop jge sti mov lret pop aas or dec dec pop dec pop pop in xchg gs pop call pop inc nop dec xchg and iret in js mov mov inc dec or insb dec test mov inc xor ss inc add mov adc ja insl mov push fisubr pop mov mov pop xor jnp adc jbe pop rcl or xchg test ret sbb imul mov into jle cs dec push in and ja mov pop or loopne add loope jnp push add in mov pop in punpcklwd movsb popa pop psrad and mov add in dec rclb je add lcall nop jg gs ret jmp push mov dec addr16 sub roll test mov add push shrl scas mov icebp ficompl jno bound fist jmp inc push xor jg mov mov ljmp inc sbb ficoml mov add jg rolb ret rorl mov or (bad) clc xchg cmp (bad) pop cmpsb stos sbb clc jae orb jne addb inc add imul or faddl stc sbb push cmp inc sub cmpsb cltd andl in jne cli cmp mov push adc push inc loope out adc test and nop or test sub xchg xor xor mov push aas mov add fidivr popa addl xor orl inc cmp and fs fucomip bound jmp js and sub jge and incb pop loop sub jns jmp loope outsl mov or push cli in stos (bad) insb out pop xor js lret adc je cmp sbb add in cmc (bad) inc jbe add jb add aaa pop cmpsb fcomp bound jmp les fiaddl jb push pop (bad) add pushw das sbb sub push sub pop cltd stos xchg lock (bad) repz mov stc or enter movzbl add and cmp call loope dec stos mov xchg jns shlb test pop fcomp cmp add add sbb or sub sub jp jbe lds clc or ret out jae mov int lret jl cmp jbe push es int3 outsb scas inc es push add popf (bad) mov mov jb add pop xchg cmpsl jle aam in add mov shr dec pop push dec ljmp cmp (bad) mov pop cmp inc cmp (bad) fisttpll jp mov pop mov test loop (bad) jg push add or aas insl js or sbb mov fbstp sub sub (bad) out add (bad) sbb add jge or mov pop divb rolb xor xor mov inc sub mov adc push pop cmpsb mov pop pop jle mov orb sbb push cld mov inc mov sbb mov jle inc (bad) call ss jae cmp sbb repnz outsb mov add or ficoml adc sub sub xchg and xor je mov jbe push mov push sbb jne mov sub push and sub lea add push lea cwtl daa repz or xlat add sbb push cld add mov lea sub inc jmp andl mov dec push mov inc jno addb adcb test (bad) fist inc jae sbb cmpsb cmp pop cmpb inc inc mov push jae cmp lea call cmp (bad) cltd arpl add jne or outsl jae lea jae jp outsb inc insl aad xchg jbe jne push mov in pop add inc inc lods sub mov mov sub pop mov adc jmp adcl cs push scas mov lock push pop jae aaa push ret mov push stos fiadd icebp imul mov cmp sub and jecxz jecxz or inc or inc aas pop js nop rcrb (bad) mov jbe call insb lock pusha dec loopne pusha jae adc add (bad) push lock rclb sub jnp mov or mov outsb cmp sub jbe jl fcmovnb sub jle xor push gs cmpb out sub inc stos arpl sub push rorl pusha in addl and lcall cmp notb inc jne or cmp or jle loopne je push cmp jne adc inc add and movsl sbb decl mov cmovo or je sti insb fucomp mov inc inc jmp add stc pop xor lret ljmp mov add in ja push pop fstps (bad) insb aaa pop hlt cwtl and shr outsl icebp xchg or cmp and dec pop jne sub (bad) sbb mov pop ret iret sub and adc cli mov mov popf je out insb sbb cli sub or mov outsl arpl add ret add push movsl test (bad) lea sub push loop dec outsl xor pop or sti (bad) cmp sbb loop or add push xor xor pop pop sub mov mov lds add push sti sbb fwait add pop inc bts jmp clc repnz fidivr leave call bt mov inc push aas (bad) lock (bad) roll add inc push sub sarb icebp pop dec add into mov int3 add cld sub jbe mov into adc rol jmp or push inc leave and insb or std cld aam rorl fsubs es in dec out flds lret mov loop cmpsb jle fucomi pop ja cmp sbb not mov clc mov daa arpl or lea andb push popa in sub mov or cmp and xchg pushf xor push jns jmp add jge in jmp std jmp cld or sbb pop mov adc sbb out nop xor mov repz add loope xor xor fcomps adc cmp data16 inc dec or mov mov push xchg adc mov add add xchg add xchg mov xchg aas pop push dec imul inc addb mov or lock mov inc mov adc mov or mov or add mov add push or jg add shll in xchg dec or adc cmpsb jmp sbb sub add add inc lea inc mov int mov or subl rcll dec jle inc lods and push adc enter int dec rep push xchg dec xlat cmp and mov mov dec rol dec pop and push lock int3 jne lea push lcall push lods mov mov sbb ljmp fcoml stos negl inc test fstpl add aaa pusha pop push xor inc ss xchg xchg pop sbb fwait sub and fsubrs push je pushf arpl cmp mov push fcoml dec cwtl pop push adc push mov ret push pop pop out mov push push adc add out in pop lea add mov push punpcklbw aas dec jae ljmp lds or xchg jle lahf test cmp xchg clc and adc adc outsl or cmp fbstp jae adc push fs add inc je xchg or push mov nop das enter mov or dec inc push push push mov into and test mov andb mov sbb loopne icebp add add insl adc pop jle or lea mov jae mov or add lods pushf adc lock mov sbb (bad) or sub cmpb fsubrl mov xchg push jo lock mov add adc or push lods std mov cmp je lock inc mov (bad) pop inc lea stc inc int3 pop and pusha adc movsl mov lods ljmp xor push inc fiadd sub jl or adc (bad) adc nop mov add sbb lods xor ja dec pop dec inc mov (bad) lea xchg add es xchg mov sbb sub (bad) adc push loopne xchg and insb mov cmc mov or pop cmp (bad) idivb jmp movsb lock add js xor jg mov inc jb dec or movl insb adc inc adc stos inc cmpsl pushf adc (bad) mov xchg xlat inc scas (bad) pusha cmp sub mov shlb push orl call pop js fstpt jnp jge mov adc sub jnp js out and push mov sub sbb out dec movsl lock mov andl pushf jl sbb add icebp out sbb mov mov or xchg dec xor mov inc cmp mov es cltd cli cmp insb movl jb cmp ficompl adc push rcrb dec outsb adc mov cs rcll adc push pop pop enter push inc enter sbb inc sbb add sbb pushf and and inc adc and cwtl dec or inc xchg mov sub inc sub adc test sbb dec pop jne data16 data16 mov add mov jo xchg push and pop push repnz (bad) cmc int pop xor mov pop mov dec adc (bad) ficompl or ljmp notl movsl scas pop (bad) fmuls or shrl ljmp sbb jmp rcr (bad) mov cli or jne (bad) mov mull inc frstor add jb cmp ja pop cmp mov dec dec jb fwait int mov sub outsb out fnstsw or push outsb sbb in xchg push adc push rorl add imul cmp push mov sub sub fisubl mov (bad) or data16 (bad) push jns add aam adc nop or sub ficoml lds push cmp inc mov pop inc sbb iret andb mov xchg pop rcll or push dec lahf (bad) or push and inc add dec cmp push mov movb push movsl sbb pushf inc out sbb mov adc push mov push pushf bound sahf adc push lahf cwtl (bad) sti repz cmp lock in and jmp push add mov je pop xor mov test gs cmp xchg pusha movb add outsb int inc andl and call sub ss jnp out stos mov dec out mov test adc fdivr test ja and mov pop push outsl adc xor jecxz lea test decl push add add cli push ja or in pop jle xchg nop and nop inc inc call lock inc cmpb aam or call sbb adc movsb adc out lea sbb push (bad) dec fucomp push inc jns pushf mov in push dec mov push dec in push cmp mov push jmp pop dec mov adc dec stos add push (bad) insb clc mov js,pn mov xlat mov pop lods pop sbb xor xchg inc xchg pop cmp test cmp sub pop movsb adc test push mov ficompl dec mov pop sbb call (bad) or cmp (bad) add ret adc (bad) icebp mov shl iret pop sbbb in push arpl adc push and (bad) mov mov std es mov movb adc clc push push lea dec xchg cmp ja ja sub and sbb out adc push push inc inc mov call pop pop push mov mov sarb fnstenv and sbb leave fsubrs push rorb cmp jb adc jb adc jle lods mov push add mov ja ficomp negb add pop mov mov cwtl jo add inc jb in pop (bad) fadds mov enter mov insl pop sbb ja and mov jmp dec dec mov ret adc sbb pop cld mov xchg loopne mov loope test les (bad) ja (bad) or aad inc (bad) cmp lods (bad) inc add sbb or mov es cmp xor sbb adc jmp or icebp jbe sub mov adc (bad) ja adc fdivrl je adc pop push js cmp fildl lock or dec cmp jne lods mov add loopne mov arpl inc or add add mov cmp or pop sbb mov inc pusha dec jmp push or or fisubr and hlt sbb jg lea aaa fdivs cmp rclb pusha pop orl xchg imul icebp sahf dec and and add loopne js push mov adc ret pushf inc rcrl insl cld sub test xchg (bad) push aad jne test jne movsl jbe loopne test or mov testb fldl mov jb clc push adc push adcb repnz sbb mov pop xor or sbb call fsubrl mov int3 lret fdivrs or sarl inc push (bad) mov pushf adc stos lock pop mov out call push sub notl mov pop mov loopne adc dec push call faddp fcmovnb and mov sahf xorl movl xor add (bad) add mov (bad) aam mov push cs inc fimull je sub cmp sbb and or xchg push pop popa mov mov addr16 test mov jg jmp adc sbb add mov sti adc fcomps inc in add cltd mov lds pop cmp je mov adc jmp sbbl xlat (bad) ss or (bad) jmp and or mov mov mov ljmp ja es mov je jg inc jnp jb cmp ja add cmp or (bad) divl dec jne outsb fwait mov fwait mov mov push clc neg bound and sbb rorb add jmp pop js ret in je or pop imul cmp test xor add in dec pop cld push pop dec pop std aad fsub push cmp add jae adc cmp addl push dec shrl push bound dec lea pop inc dec ror or int jmp add jmp (bad) mov pop or (bad) cmp add or adc jae das subb daa arpl arpl and or inc inc push xchg mov xor (bad) lock shl testl or lea adc or adc lea clc scas sub add cwtl lea insb sbb shrl fiadd add push mov mov idivl insb roll inc inc inc mov push insl imulb lds call sub and xor (bad) hlt adc xor inc sub push or and add rol arpl movsl pop jno ret pop loopne aam into push pop cwtl scas add pop testb push jbe cmp add pop adc imulb or sub bound ljmp aaa test notb xor pop aam push push cmp and jnp sub mov cs cs movsl jo inc sbb xor mov mov pop mov inc jo rcrb xor push roll stos pop cmp mov pop out mov adc xchg sbb xchg xor adc das dec aam enter inc jmp adc (bad) add clc xor fsubrs mov outsl dec inc cmp mov push rolb sbb push cmp push addl and movsl mov les popf inc xchg subl cmp sub je push pop sti xor mov sbb or pop sahf addr16 clc xor inc push shr push fwait sub pop into notb push mov jmp ss or sbb add sti (bad) push add fild jnp out xor adc cld je add mov or clc or testl scas mov adc outsb adc nop jne or and mov pop roll loopne je cld pop inc mov jge out mov pop nop addl xchg add mov ss add aam outsl setp les inc idivl psubusb or icebp sbb mov fbld data16 les push aas jb inc and push nop adc int js inc push inc dec jae adc call fwait out mov popa inc scas add ficompl cmp or pushf mov xchg cli cmp xor repnz inc in pop dec push imul orb lds xchg mov pop stos cld push and add xchg mov push scas mov xor pop or sub idivl (bad) loope push add pop adc add sub push test dec arpl mov loope inc (bad) out jne out nop jmp scas (bad) popf and mov dec xor xor and mov sahf loopne sahf add or idivl and adc sbb jle out fs push mov inc fisub ret ret or xchg adc pop icebp push xchg mov inc popf adc sub addr16 xchg or adc adc cwtl adc (bad) or ss inc pop or inc sbb pop es enter sbb cli sahf pop or ss sbb sbb mov add daa cs pop sbb loop clc loopne imulb sbb pop mov cmp push testb stos add or inc mov bound ret test adc mov sbb xchg push sub idiv and (bad) aad sub jmp lock fsubs icebp pop jle add pop push mov daa fcmovnu mov sbb imul scas mov aaa lea ds or add aad adc in cmp pop push mov notb inc fiadd pop jg jle int and inc adc jge arpl mov xor xor jge mov jns movsb test aas push mov nopl sbb mov dec inc fmuls les mov les jo sbb mov dec push pop mov sbbb lock push cmp xlat xchg pop and pushf mov pop xchg pop and iret mov jbe xor ljmp pusha pop sub movl adc test xchg inc adc rcrl cwtl stc mov xchg in or push add movb push jge fnstcw mov leave into cltd leave push imul push xor cmp mov fwait ret mov push pop loop jne push pop inc jg inc (bad) in push pop in add loope mov inc mov or mov ret inc xchg jo inc (bad) fldl2e cwtl sub sbb movsb lods out popl mov leave push repnz in fdivrl orb dec mov movb es push and nop inc sahf cltd pop jl leave push lea js pushl xor sbb push sti enter push adc and and and jp add or je ret push ret fcoml pop dec movl pop dec or add or jno mov xchg aam std push imul cmpsl jbe (bad) shrb mov xor fs xor in push push mov add scas aam jle add sub mov ja lea rep xchg or sub inc inc dec lock stos call mov push or pop pop rcrb loopne mov std add fcoms sbb sub add sub xchg sub fdivs lret and pop adc cmp add daa pop repnz jno mov jo orb rclb pop arpl push push push fsubs add out fimull adc add lret dec cs add pop adc xchg adc adc daa xchg xchg pop push hlt inc or dec push dec and inc or data16 cmp push pop push xor lcall dec add stc std push pop adc xor sub out iret testb add add cmp sub push pop pop or sti lods fdivl xor pop mov add pusha push pusha add jo js pop adc out sbb push add add jne insb add jbe in movl scas test pop mov cld push fldz in mov imul insb pop jb leave lds aaa sub or xchg outsb hlt pop clc insl inc pop gs mov outsb out or jno stc jno jb pop mov dec dec inc inc dec pop dec inc inc push pop push inc dec inc inc push inc inc add push inc push push cli ljmp xor outsb je insl and jb jb sub notb push pop nop jmp push add dec inc add in notb push xor cmp sub std in bound and imul push sti stc data16 daa aaa outsb outsl je add cmpb jae popa arpl data16 outsl ja cmp in (bad) outsl outsb aaa ss and jo jb jbe fldt in jb jne xor or insl or bound pop xor sub fisubrl gs das pop push fsub pop fwait sti ret cmp outsl jo pop xor subb pcmpgtb arpl cmp ret inc and gs nop jl and insl lcall push outsl arpl mov ret fs outsb lods mov and add popa imul addr16 insl and ss mov cmp inc lahf imul sub sub adc addr16 jae mov (bad) xor shrw (bad) outsl add je adc dec movq lods sub push imul icebp sub and dec imul mov sbb sub adc popa xchg lods jno ret add loopne sub insb ja jg,pt jl hlt mov daa mov inc gs popa ds into fimul ja jbe push mov xorps (bad) jae popa addr16 outsl js xor xor xor fs dec cmp int lods insb sbb add dec and jns inc out int xor fs push test mov lret bound mov fldcw or outsl or jo adc rcll inc dec data16 testl iret imul arpl gs jne fidivr cmp addr16 push push mov inc inc aaa jns aas mov push mov fs jbe cmp push pusha lods xor jl push jne pop stos pop jecxz add or fidivr mov daa and mov adc pop es lds nop xchg into cmp pushf sahf movsl lods mov rcll jnp add inc mov lock xor mov test jb xchg (bad) mov outsl or mov repnz mov add adc xchg pop fwait xor push cmp jae lahf xor sub int3 push arpl mov mov adc add push xor add rolb cmpsb jmp nop add sub adc sbb inc push adc add pop pusha xchg xchg mov ss pop enter data16 inc lock adc and pop test lret aaa dec mov inc pusha mov push mov sbb dec pop mov aas pop pop dec mov mov ds inc add clc lret enter dec pop lahf cwtl mov lret jg xor sub test mov sub inc jb adc xchg frstor jae or xorl pop sbb mov dec cwtl or loope push ss xlat andl loopne mov enter int3 sub daa cmp jae in and add pop jbe mov mov push push jl and leave xchg pop repnz mov int3 push mov test or dec nop mov push sbb jo xchg inc adc mov imul pop jle add jl inc cld or cmp cmp test jmp js add gs gs push push andb (bad) and inc add adc cs pop sub or pop dec shl les dec (bad) xor mov insb xor (bad) xor push inc cmp imul cmpsb imul fistp imul jb jae cmp sbb in fdivr mov imul imul stos addb je outsb push (bad) fucomip cmp jns outsl outsl imul jae arpl rcll gs or jbe das push clc jae outsl jb cmp pop insb fnstenv insb insb jns repnz jae or lahf outsl ss in pop sahf js xor sub or and and xchg gs or jmp lods sti fildll jne push jb jbe addr16 push fstl stos gs pushf stos aas push sbb inc jne jb push push jecxz fs pop xchg pop ret pushf push popf dec nopl mov fwait xor dec jae xor xor outsb sti xchg ljmp dec dec dec add leave mov pop pop loopne add pushl dec daa out dec cld xor je nop xchg mov scas mov lods test stos mov push mov push fwait push push sti psadbw ss inc jae cmpsb add pop roll mov fstpl stc out inc rorl test pop (bad) xor sbb jb fst imul ss cmp pop cmp aas sahf xchg stos nop mov mov push dec fstl jge out pop mov dec insl xor or xor repz add jl mov dec or xchg and dec sub pop inc enter add fnstenv mov dec subl stc push mov nop out inc pop lods sti cmpsl test mov sbb and dec fnstenv mov adc cld pop daa or xchg mov push jb fsts and pop mov add mov pop adc inc fwait xchg xchg lahf jnp in or leave in jg out lret mov mov insb mov mov inc repnz cmp mov out fisttpll or (bad) in pop or insb mov pop jae mov insb int3 adc fsub jns lret (bad) pusha dec fimul inc jnp mov inc push lcall mov insb inc pop push pop sub fidivrl sub mov ja jno mov call add leave mov leave cmp xor push jb ja insb jo jecxz adc push pusha adc mov pop mov outsl xchg dec (bad) sbb cmp mov fisttpl movsb sub mov dec repz lods cmp call insb (bad) mov outsl test or xor lods jae cwtl push mov pop mov mov jmp outsl cmpsb fdivl and push out sbb outsb imul test js sub mov jnp jg fnsave xor lret sub inc sub lret cmp jae dec addr16 cwtl mov dec mov sbb cmp sahf push push sahf imul push dec xchg out pop inc mov shrb and push int3 ret pop rorl add push fldz in insl cwtl (bad) pop or jns mov arpl insb cmp shr or daa call mov mov and push test jae or lods mov lret nop orb xlat ss mov fidivl movsb das adc mov push in mov xchg mov xchg imul and xchg mov xchg mov xchg mov jo icebp and cwtl ss pop xlat push jl xor aas inc lods loope in test lret cmc cld maskmovq divl aas sbb mov mov mov inc sti pushl outsl inc or mov lret sub popf cmp sbb clc arpl mov stos dec inc push mov jbe sbb dec sbb test int xchg push out fadds int push rorb dec cltd lcall sahf ss xor (bad) add nop and flds jecxz xchg test (bad) out dec (bad) push add enter repz int3 repz pop iret (bad) mov adc push push mov lcall fstl fwait inc add cmp mov movsb sbb data16 gs jo lds push out insb ffree popf xchg adcl xor or pop sub or xchg xor insl pop jb cmpsb xor xor aas lret and mov daa pusha loopne pop add or push mov sub xchg mov add mov push xor call cmp lods adc dec push fcomp inc loop (bad) pop lea mov movsb adc add insl enter dec test sub cmc mov sbb jbe mov dec xchg dec push test stc sbbb ret imul xor jg (bad) or rorl adc lock or sub or cmp xchg dec gs jnp inc jo mov push mov xor inc nop enter (bad) enter pushf adc hlt adc adc add jmp jnp (bad) ficom push das push test es std mov and cmp mov sti mov push lret sub in je popa adc jo popa sbbl hlt jle mov mov lret jns fldcw mov bound mov outsb in andb hlt xor or push push mov mov invlpg xor mov dec pop jg cwtl and in enter bound cmp and push in pop pop xor add cltd pushf pop popa jo ljmp in push push insl add je imul imul dec (bad) jne xchg pop test pushf je imul pop imull jns jnp push scas mov push andb push gs xor dec std in dec lahf mov xchg mov mov mov dec fwait xchg mov sti mov mov mov ret xchg das jne mov lea fstl pushf mov and fisttpll mov outsl dec xchg mov mov mov insb xchg jne inc mov adc cmp or pop mov xor add adc cwtl ja outsb fistpll xchg mov nop fwait lods je scas stos std outsl (bad) mov lods xchg xchg mov sahf mov into sti btc push jle or dec mov xor outsl jo mov lcall out fsts addr16 sub jg dec adc dec addr16 xchg mov addr16 push add mov fwait sbb pop nop lods (bad) dec add outsb loopne addr16 lock add add cmp cmp lods loope mov je add mov mov imul mov xchg sbb jne sbb mov lods sbb int repnz add pusha jge dec arpl inc push pop jg (bad) (bad) (bad) (bad) js js js js js js js jge jge jge jge jnp jnp jnp jnp jnp (bad) (bad) (bad) (bad) jnp jnp jnp jl jl jl jl jl jl jl jl jno jno jno jno jb (bad) (bad) (bad) pushl jb jb jb jb jb jb jb jb jb jb jb jb jb jb jb mov mov jg dec pop nop lds jecxz cmp test add pop mov int mov pop push je jae arpl and ja bound fcompl jmp jg inc dec push and fs mov sbb repz out (bad) mov add jl repnz pushf xchg js clc outsl mov icebp sbb fildl xor stos jns lret ret into mov arpl push inc dec jmp (bad) mov (bad) icebp mov add add add xor xchg in add or adc fstps pop add lea daa sub jne mov mov push sbb adc push movsb or gs lock nop jmp mov pusha jb,pn fmuls xor inc and addr16 push repnz cs lods (bad) sub xor call sub icebp (bad) dec adc ja in mov test or push push push xor call cwtl pop mov mov stos sub xchg mov add or and andl rorl xor test (bad) or enter mov mov sbb (bad) jb fldl push push pop push stos mov or jno lock add adc or call sbb push push dec sbb jecxz divl lcall push push xchg push out out ja add push call (bad) add and jmp fsubrl fsubrs and gs inc ret cmp inc add imul cli fwait xchg xor gs mov mov sti call inc add jb fldlg2 xchg mov or sub insl imull inc mov sub dec mov cmp sahf or arpl adc jmp pop adc adc push sbb std sahf sbb xor push aas xor je pop mov sahf xor sub mov lcall ds insb ss push inc pop inc and popa and lret lret rolb pop push cmp push adcl mov js inc or stos fisttpl mov inc push push call mov mov push push pushw outsl cmp and call pop les test push call fcomps or push and pop gs mov jbe push inc aam push jo push inc sbb popa or adc jle mov add sbb jle inc mov push test mov dec jns xor sbb push test mov push enter push xor and and cmp push cmp sbbl or add push shll mov push movl pop cmp int3 push inc or inc cmp fistl xor inc jge xchg push cmp push daa idiv sahf or repnz pushf and test fcmovnbe ljmp addl add mov dec sbb das and cli xor dec das inc push mov xor test mov insb inc push push fcmovu sbb add dec aad push push outsb shrb sub dec jg jnp test dec or xchg mov sti aad rclb or mov and sub xor aaa mov inc loopne lea inc sbb sub mov jge pop adc add adc cmp pop or sub or cs mov pop mov sbbb je jecxz sub adc cltd repnz int3 and repnz fcom sbb js adc inc scas mov xchg sub push out mov arpl lea fisttpl xchg add sub mov or enter mov and mov or cmpb push dec dec test imulb pushl sub inc lea push cltd sub (bad) ja pop sub and ds xor add xchg pop jo and mov mov imul sbb movsb adc xchg xchg lods mov or or (bad) or sbbb push cmp pop mull xchg sbb or sub mov inc test or and (bad) cmp mov xor dec add sti insl dec loopne jne stos in cmpsl pop mov dec subl dec pop outsb sbb mov inc adc rcrb inc out rcrl sti inc and push mov pusha pop sub mov insb je js xor xor addb nop xchg cwtl pushf dec mov xor test add (bad) xor clc add adc fstp cmpsb imul bound jbe dec (bad) je adcb rol rcr repnz inc jmp ss add xor aas je add cmpsb imul imul jg mov mov push xchg and adc xor inc jnp pop push or push jns add gs outsb fs inc adc mov or fs add loopne add movsl ljmp insb add jnp arpl sbb jo xchg loopne sub js cmp sbb or cmp inc insb outsl jae dec popa insb (bad) push jnp push adc mov popa inc sub leave popa lock (bad) mov or insl insb outsb dec inc push dec inc dec stos pop addl lret add push add lods fnstsw cmp lock inc or neg mov dec pop pop pop cltd mov add pusha mov jo pop imul aad add clc addr16 sbb insl stc sbb jae mov mov stc popf adc push shlb mov imul outsl insl in in fs movq addl jo je jo mov sub jp data16 push xor clc popa add and or loopne push test add mov and jne and sbb mov cwtl out (bad) outsb lcall jb add add add adc loope repz xlat mov in pusha ljmp mov add mov xchg arpl insl jo push adc outsb adc ljmp rcll cs pcmpgtw imul or imul pop and xor movsb imul jb je sbb push je je test loop popa jae cmp cmp ljmp add js inc fs ss test rorb mov inc add add sahf add add and add test fs push adc inc adc add jmp add pop cs imul pop or dec ja add add add xor rcrl add xorl add fmuls sbb push cmp sub cli adc add dec adc and sbb push xor push sbb push pop push pop cmpsb sbb jnp pop insl stos and add jb das push sbb mov pop (bad) pop sbbl xchg sub mov mov push mov into pop xlat or cmp sbb jae int mov pop rorb add rorb xchg lea mov nop enter xchg xchg xchg xor and lahf js inc adcb lods (bad) ja inc (bad) or xor jge xor push or or lds mov imul or jnp jmp sbb sbb imul mov jns ret jp cld add dec shl call fisttp repnz add adc push jne icebp inc and mov add add add xchg or lock add fnstcw pop add inc inc xor repnz and cmpsl jge or add mov pusha (bad) jns leave mov add cmpsb fild mov sti sbbl shll sub incb inc orl mov inc mov and ja iret mov in call (bad) xchg fucomip ds add pop pop fisubrl xor fsubp stc cmp jle xor sub or and fnstenv add (bad) cmpsb imul imul cmpsb imul imul cmpsb jmp dec inc cmpsb imul push cltd or push xor jbe pop in cmp jg dec test repnz das arpl inc sbb push inc aas adc out mov orl int cmp pop js mov gs xor repz xor je insl insl add cmp pop ja (bad) xor xchg mov repnz xorl in enter push push roll xlat inc inc pop push pop push jg outsl imul out inc sbb pop push addr16 and outsl jne add outsl pop jb outsb addr16 test mov outsw sbb add or stos mov fs insb shrb add gs add mov sbb leave add imulb loopne push stos adc imul orb das dec bound cmp jge (bad) jbe push imul dec je jb gs inc adc xor push outsl outsl insb sbb mov xor jo push xchg mov (bad) xor mov insb mov movsl xchg mov push out add popf fs mov mov mov fiadd add arpl add fstp and pushf adc ss jo pop add out insl sbb push in jo inc daa dec js ss inc xchg add and pop adc iret or add dec xchg sbb pop gs js push dec push inc jne pushw adcl neg mov xor dec inc dec inc push or mov (bad) dec jae xlat inc imul negl or cmp add mov pop cmc push rclb cs adc outsl sub je ja lcall in out dec outsb cmp dec or pop mov popa int3 gs int3 (bad) insl dec test xorb jo stos inc dec insl pop add scas dec xchg int lcall dec push inc jo or (bad) testl or test xchg or inc sarl dec push jbe push imul scas int inc jns jge popa sub aas inc dec popa ret xchg pop inc or or lods push sub and pop loope loop or and inc sub inc pop fwait jb sbb fcoms mov pop push push mov ret xchg push and add push popa test push popa mov (bad) inc mov shrb or or mov or or (bad) mov mov xor xor test or aam outsb ds movsl or cmp dec out xchg (bad) dec gs test (bad) pmulhuw xor pop mov icebp mov inc and pop in and jae jge out push ss add jge insl add int repz xor mov add adc sub inc fstps push lea adc adc dec (bad) or add in or imul xchg xchg inc (bad) jns add es xor lret (bad) inc push xor add dec add mov cmpsb addb xchg xchg push sti sbb stos lods insl loopne jbe lret pop ret mov add add cmp add dec add incl pusha mov lea push jmp nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jae xor sub jb shl mov inc xor je mov add jne mov sub adc adc add jne mov sub adc adc jne inc add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp nop mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp add add jo add jo add jo add add (bad) jo add jo add jo add jo add jno add jno add add add jno add add add add add add xor add dec inc push dec inc dec xor cs dec dec add push inc push dec xor cs insb add inc push dec cs dec dec add xor xor fs insb add dec outsl popa fs imul add inc gs jb arpl fs jae add push imul jb je arpl push imul insb insb outsl arpl add jb jne insb inc jb add add imul jae add push gs insb outsl jae dec gs add inc outsb jne push jb arpl jae outsl fs gs add add add add (bad) pop cwtl push or xchg (bad) or (bad) pop mov (bad) pop test add xor xor or xchg (bad) or xor or push add (bad) aaa add add pop xor xor or push add (bad) aaa add wrmsr and and cmp cmp cmp dec add jae outsl add add add add add xor xor or xchg (bad) or add dec fwait loopne popf mov inc xor (bad) adc add (bad) add in adc sub cmp jnp int3 mov or xchg (bad) or add pop xor xor push add push adc push push xor xor or push push gs push imul arpl xor xor or cs insb popa jae and and bound and imul gs imul outsl outsb and je outsl jb je xor pop or xor xor xor xor pop pop or xor xor xor xor or or add push adc push push xor xor or push push gs push imul arpl xor xor or cs insb popa jae and and bound and imul gs imul outsl outsb and je outsl jb je xor or xchg (bad) or add orl leave pop pop sahf repnz fild fninit push scas push inc popl fsts iret out add and add js sahf xchg mov jge lods test daa int3 hlt dec (bad) jne sarb out dec inc lock or cwtl psubb movsb leave xchg mov and push movsl test cmp and xor jbe in cpuid jno dec gs add xor dec xchg or add addl add adc cmpsb sti cld or test das jl (bad) lock insb sub push int3 jae movsb rclb (bad) es jbe push adcl and imul sbb pop fcompl cltd in mov mov xor push icebp into clc call bound mov pushf leave cmp dec test fs jp (bad) add add add add cmp scas sahf hlt nop out mov pop aad or dec xchg or add push xor xor push add push adc push push xor xor or push push gs push imul arpl xor xor push add add and jb push imul and popa insl jo outsb and jb imul xor pop or xor xor pop pop or xor xor xor xor push add push adc push push xor xor or push push gs push imul arpl xor xor add add sub jb push imul and popa insl jo outsb and jb imul outsb gs sub sbbl (bad) or add orl les mov pop das dec xchg imul xor bound push xor ret sbb les divb fstps scas mov jbe icebp test imul dec dec sub pop in sub (bad) stos pop fxch inc repz stos (bad) mov xchg push (bad) out loopew ret sahf pusha cmp loop push mov jnp sub add (bad) xor or push add add xor xor or push add xchg push das das outsl arpl jbe,pn jb jae outsb arpl xor add adc add add xor xor push add pop add xor xor mov and je cmp das arpl jbe,pn jb jae outsb arpl das je jae arpl arpl xor push add and or or or push add xor push add sgdtl incl add push (bad) xor push add adc xor xor xor add push push push inc xor or xchg (bad) or add (bad) add add dec enter in and ficomp mov add adcl sub pop pop popa mov add xchg xchg mov sbb jmp mov ss cwtl dec in mov inc sbb lea cli aad add xor mov daa (bad) repnz dec add dec cmpl push loopne loopne xchg movsb xchg sahf pop or loop mov pusha loope lods sub (bad) movsl dec fs sbb lods cmp aad and lcall inc or mov sbb mov jmp iret leave add mov ds jb mov sahf sub mov cmp dec xchg add stc pop push hlt sbb sti cmc lods xchg mov push andb sub add jmp js roll pop mov xor add add adc sbb inc neg insl dec or push or xchg (bad) or add orl push adc pop inc xor push add adc gs gs and jo xor adc add pop adc inc jne bound jbe insb insb xor xor or push push push xor push add adc push and jb imul outsl outsb xor xor add push push push and gs popa insl jo outsb and xor pop or xor xor xor xor or xor xor xor xor or or add push adc push push xor xor or push push gs push imul arpl xor xor push add add and jb push imul and popa insl jo outsb and jb imul xor push or xchg (bad) or add (bad) add add (bad) add add lret int3 int scas or lods xchg mov icebp ffreep movswl mov mov test mov mov imul sahf movswl in js ja jle cmp xchg scas or xchg lret sub mov pop pop sbb lahf cli das imul mull add jg push jecxz pusha in inc sbb mov mov xchg add and xor push sub xchg adc das stos out ret sub mov xchg sbbl jne cmp xchg adc push rorl (bad) inc dec fnstsw jl ds rcrl js lahf xor icebp out sbb les pop mov cmc out jl jge bound (bad) cmc dec or shlb push test int mov out mov fldenv adc mov sarl mov fdivs xor or push add add xor xor or push add xchg push das das outsl arpl jbe,pn jb jae outsb arpl xor push add adc add add xor add incl add xor add pop add xor xor mov xor je cmp das arpl jbe,pn jb jae outsb arpl das push push push imul jo outsb addr16 inc arpl xor push add and push or push add xor push add sgdtl incl add add xor add adc xor xor push add adc push inc xor xor sub xor dec xchg or add addl sbb mov sub (bad) sbb int mov fisttp sub adc add or add mov leave xchg dec lcall aaa and xor mov call push xchg dec and test mov inc repz out fstps mov popf mov loope (bad) mov iret or lock (bad) sub cmp sbb daa idivl dec xor add mov add jle leave pop or arpl cltd add fcmove out xor dec xchg or add xorl push adc push push xor xor or push push gs push imul arpl xor xor or push push gs push imul jae and je outsl jb xor xor push add or xor insl jae outsl data16 and and je jae das das ja ja jbe jb jae outsb arpl das jb popa and arpl xor xor xor push add add daa push gs push imul jae and and fs outsb imul cmp xor pop or xor xor xor xor pop pop or xor xor cmpsl xor xor push add push adc dec push xor xor add or add insb xor xor push add pop adc inc popa outsb outsb popa insl xor xor push add or dec inc pop dec dec and jb outsl jb je outsl outsb xor xor add or xor je insb and and popa jae and and jb jae data16 push outsl data16 popa jb and insb imul jbe xor xor push add add dec inc pop dec dec and jb outsl jb je outsl outsb xor or xchg (bad) or add orl mov push out jae inc jg mov dec js into fsub mov leave adc pop lgs idivl dec pop xlat insl mov (bad) pusha fs ss cli pop (bad) cmp std pusha sbb and cs add das (bad) push outsl dec add mov out pop mov dec xor pop dec das outsl int ja (bad) push or xor push enter mov jb cli add int3 mov add add add (bad) add or add adc xor xor push add sgdtl incl add pop xorb push add pop add xor xor mov xor je cmp das arpl xor sub insb jbe,pn jb jae outsb arpl das inc push inc xor sub insb xor push sbb cmp cmp or dec add pop add sub sub or push add push sbb je jo cmp das ja ja jbe jb jae outsb arpl das jb popa xor push add and push or push add xor or push add add xor and or push add xchg push das das outsl arpl jbe,pn jb jae outsb arpl xor push or push add xchg push das das arpl xor sub popa jbe,pn jb jae outsb arpl das inc push inc xor sub jb pop push add and xor adcb imul xchg pop or mov push or dec add add add add xor push or push add (bad) aaa add sbb xor add add add xor dec xchg or add (bad) add add pop arpl test mov xchg in pop repnz popf dec and push inc push outsb push movl jge dec cmp hlt loope sahf xchg dec pop add mov (bad) mov or cmp dec xchg fcoml dec mov xchg popl jae je in movb lahf daa push (bad) iret jge xor sbb cmp lcall mov sub sbb std jp mov adc adcb lods (bad) xor inc jmp sub cs cmpsb xchg pushf sbb dec add jbe xchg mov icebp out cli and jge mov popa inc (bad) (bad) mov aas sub jecxz push dec je out enter and inc mov scas and jnp (bad) out add pop popa (bad) imul (bad) add xor add add adc es cs pop movaps xor dec xchg or add pop xor xor push add push adc push push xor xor or push push gs push imul arpl xor xor or cs insb popa jae and and bound and imul gs imul outsl outsb and je outsl jb je xor pop or xor xor xor xor pop pop or xor xor xor xor or add push adc push push xor xor or push push gs push imul arpl xor xor or push push gs push imul jae and je outsl jb xor xor push add or xor insl jae outsl data16 and and je jae das das ja ja jbe jb jae outsb arpl das jb popa and arpl xor xor xor push add add daa push gs push imul jae and and fs outsb imul cmp xor push or xchg (bad) or add (bad) add add (bad) add add addr16 dec outsl push pop jl leave pop xchg jno mov mov and dec sti shlb mov cmp pop or cld adc pop mov and jnp hlt add into mov daa dec push in andl adc adc xor sub inc mov mov dec mov push nop loope negb data16 mov jns stos xor sahf xlat stos adc test xor adc push mov loopne sbb add mov pop mov adc xor dec cmpsl into leave pop and outsb jl mov xchg mov mov sub and in pusha js jnp cmp or or inc and add add add (bad) add xor push add adc add add xor add incl add xor add and xor gs or dec add pop add push xor push or push add push sbb je jo cmp das ja ja jbe jb jae outsb arpl das arpl xor push or push add xor sbb je jo cmp das ja ja jbe jb jae outsb arpl das jb popa xor push add sgdtl incl add add xor or push add add xor pop mov push xor or popa addr16 imul pop push add sbb (bad) in sbb ret iret subb sbb sbb xor je cmp das insb outsl outsl jbe,pn jb jae outsb arpl das jbe insb outsl outsl imul sbb adc or push add push or push add xor or push add add xor xor or push add xchg push das das outsl arpl jbe,pn jb jae outsb arpl xor push add pop add xor xor mov and je cmp das arpl jbe,pn jb jae outsb arpl das jo popa xor arpl xor push add adc xor movsb push xor sbb sbb add add adc popa jae xor xor xor sub xor push add add xchg shrb es mov sub mov push or xchg (bad) or add addl mov test (bad) xor nop cmp inc mull in jae add add pushf mov jmp lret jb push mov adc subl in push push aaa xor movsl sub sbb mov cli addr16 gs jp cmp adc js jbe xrelease punpcklbw mov popf (bad) mov (bad) sbb and dec movsl cmp fiadd push pop rdtsc (bad) add add add or or or add push adc push push xor xor or push push gs push imul arpl xor xor or push push gs push imul jae and je outsl jb xor xor push add or xor insl jae outsl data16 and and je jae das das ja ja jbe jb jae outsb arpl das jb popa and arpl xor xor xor push add add daa push gs push imul jae and and fs outsb imul cmp add jle leave pop or arpl cltd add fcmove out xor or xchg (bad) or mov push or xchg (bad) or or or push add (bad) aaa add add sbb or push add (bad) aaa add or push xor or push add (bad) aaa add adc sub add add adc int sarl repz dec lahf dec dec pusha xor push or push add (bad) aaa add or sub mov inc add add sbb jo das das ja ja outsb gs outsb arpl imul push or xchg (bad) or add andb jb out add pop fldl scas jno fsubr in mov js out push dec xlat mov xor (bad) cmc or cmp jns (bad) out sub and add push lock sarl unpckhps lcall iret outsl pop (bad) sti mov xchg in and (bad) repnz push (bad) mov xchg xor outsb rcl mov adc and mov (bad) add or xchg (bad) or (bad) add add add xor push xor xor push add push adc push push xor xor or push push gs push imul arpl xor xor push add add and jb push imul and popa insl jo outsb and jb imul add cmp scas sahf hlt nop out mov pop aad or add sbb sbb or xchg (bad) or or or xchg (bad) or sbb or xchg (bad) or movhps xor xor cmp cmp and or xchg (bad) or push add mov lock sbb arpl lret push or xchg (bad) or add cmpb repz imul fistpl cli sbb push stos or mov jnp sub loopne leave mov popf jmp sarl jecxz mov fcompl jbe rorl fstpl bound adc adc (bad) sub xor xchg or cmp jae fmull add inc (bad) aas xor cli add add test add add add xor sub add add (bad) pop test add xor xor or xchg (bad) or xor or push add (bad) aaa add add pop xor xor or push add (bad) aaa add wrmsr and and cmp cmp cmp dec add jae outsl add add add add add xor xor or xchg (bad) or add cld dec inc mov in cli es cli mov lods pushf ret mov (bad) add (bad) add in adc sub cmp jnp int3 mov or xchg (bad) or add pop xor xor push add push adc push push xor xor or push push gs push imul arpl xor xor or cs insb popa jae and and bound and imul gs imul outsl outsb and je outsl jb je xor pop or xor xor xor xor pop pop or xor xor xor xor or or add push adc push push xor xor or push push gs push imul arpl xor xor or cs insb popa jae and and bound and imul gs imul outsl outsb and je outsl jb je xor or xchg (bad) or add orl leave pop pop sahf repnz fild fninit push scas push inc popl fsts iret out add and add js sahf xchg mov jge lods test daa int3 hlt dec (bad) jne sarb out dec inc lock or cwtl psubb movsb leave xchg mov and push movsl test cmp and xor jbe in cpuid jno dec gs add xor dec xchg or add addl add adc cmpsb sti cld or test das jl (bad) lock insb sub push int3 jae movsb rclb (bad) es jbe push adcl and imul sbb pop fcompl cltd in mov mov xor push icebp into clc call bound mov pushf leave cmp dec test fs jp (bad) add add add add cmp scas sahf hlt nop out mov pop aad or dec xchg or add push xor xor push add push adc push push xor xor or push push gs push imul arpl xor xor push add add and jb push imul and popa insl jo outsb and jb imul xor pop or xor xor pop pop or xor xor xor xor push add push adc push push xor xor or push push gs push imul arpl xor xor add add sub jb push imul and popa insl jo outsb and jb imul outsb gs sub sbbl (bad) or add orl les mov pop das dec xchg imul xor bound push xor ret sbb les divb fstps scas mov jbe icebp test imul dec dec sub pop in sub (bad) stos pop fxch inc repz stos (bad) mov xchg push (bad) out loopew ret sahf pusha cmp loop push mov jnp sub add (bad) xor or push add add xor xor or push add xchg push das das outsl arpl jbe,pn jb jae outsb arpl xor add adc add add xor xor push add pop add xor xor mov and je cmp das arpl jbe,pn jb jae outsb arpl das je jae arpl arpl xor push add and or or or push add xor push add sgdtl incl add push (bad) xor push add adc xor xor xor add push push push inc xor or xchg (bad) or add (bad) add add dec enter in and ficomp mov add adcl sub pop pop popa mov add xchg xchg mov sbb jmp mov ss cwtl dec in mov inc sbb lea cli aad add xor mov daa (bad) repnz dec add dec cmpl push loopne loopne xchg movsb xchg sahf pop or loop mov pusha loope lods sub (bad) movsl dec fs sbb lods cmp aad and lcall inc or mov sbb mov jmp iret leave add mov ds jb mov sahf sub mov cmp dec xchg add stc pop push hlt sbb sti cmc lods xchg mov push andb sub add jmp js roll pop mov xor add add adc sbb inc neg insl dec or push or xchg (bad) or add orl push adc pop inc xor push add adc gs gs and jo xor adc add pop adc inc jne bound jbe insb insb xor xor or push push push xor push add adc push and jb imul outsl outsb xor xor add push push push and gs popa insl jo outsb and xor pop or xor xor xor xor or xor xor xor xor or or add push adc push push xor xor or push push gs push imul arpl xor xor push add add and jb push imul and popa insl jo outsb and jb imul xor push or xchg (bad) or add (bad) add add (bad) add add lret int3 int scas or lods xchg mov icebp ffreep movswl mov mov test mov mov imul sahf movswl in js ja jle cmp xchg scas or xchg lret sub mov pop pop sbb lahf cli das imul mull add jg push jecxz pusha in inc sbb mov mov xchg add and xor push sub xchg adc das stos out ret sub mov xchg sbbl jne cmp xchg adc push rorl (bad) inc dec fnstsw jl ds rcrl js lahf xor icebp out sbb les pop mov cmc out jl jge bound (bad) cmc dec or shlb push test int mov out mov fldenv adc mov sarl mov fdivs xor or push add add xor xor or push add xchg push das das outsl arpl jbe,pn jb jae outsb arpl xor push add adc add add xor add incl add xor add pop add xor xor mov xor je cmp das arpl jbe,pn jb jae outsb arpl das push push push imul jo outsb addr16 inc arpl xor push add and push or push add xor push add sgdtl incl add add xor add adc xor xor push add adc push inc xor xor sub xor dec xchg or add addl sbb mov sub (bad) sbb int mov fisttp sub adc add or add mov leave xchg dec lcall aaa and xor mov call push xchg dec and test mov inc repz out fstps mov popf mov loope (bad) mov iret or lock (bad) sub cmp sbb daa idivl dec xor add mov add jle leave pop or arpl cltd add fcmove out xor dec xchg or add xorl push adc push push xor xor or push push gs push imul arpl xor xor or push push gs push imul jae and je outsl jb xor xor push add or xor insl jae outsl data16 and and je jae das das ja ja jbe jb jae outsb arpl das jb popa and arpl xor xor xor push add add daa push gs push imul jae and and fs outsb imul cmp xor pop or xor xor xor xor pop pop or xor xor cmpsl xor xor push add push adc dec push xor xor add or add insb xor xor push add pop adc inc popa outsb outsb popa insl xor xor push add or dec inc pop dec dec and jb outsl jb je outsl outsb xor xor add or xor je insb and and popa jae and and jb jae data16 push outsl data16 popa jb and insb imul jbe xor xor push add add dec inc pop dec dec and jb outsl jb je outsl outsb xor or xchg (bad) or add orl mov push out jae inc jg mov dec js into fsub mov leave adc pop lgs idivl dec pop xlat insl mov (bad) pusha fs ss cli pop (bad) cmp std pusha sbb and cs add das (bad) push outsl dec add mov out pop mov dec xor pop dec das outsl int ja (bad) push or xor push enter mov jb cli add int3 mov add add add (bad) add or add adc xor xor push add sgdtl incl add pop xorb push add pop add xor xor mov xor je cmp das arpl xor sub insb jbe,pn jb jae outsb arpl das inc push inc xor sub insb xor push sbb cmp cmp or dec add pop add sub sub or push add push sbb je jo cmp das ja ja jbe jb jae outsb arpl das jb popa xor push add and push or push add xor or push add add xor and or push add xchg push das das outsl arpl jbe,pn jb jae outsb arpl xor push or push add xchg push das das arpl xor sub popa jbe,pn jb jae outsb arpl das inc push inc xor sub jb pop push add and xor adcb imul xchg pop or mov push or dec add add add add xor push or push add (bad) aaa add sbb xor add add add xor dec xchg or add (bad) add add pop arpl test mov xchg in pop repnz popf dec and push inc push outsb push movl jge dec cmp hlt loope sahf xchg dec pop add mov (bad) mov or cmp dec xchg fcoml dec mov xchg popl jae je in movb lahf daa push (bad) iret jge xor sbb cmp lcall mov sub sbb std jp mov adc adcb lods (bad) xor inc jmp sub cs cmpsb xchg pushf sbb dec add jbe xchg mov icebp out cli and jge mov popa inc (bad) (bad) mov aas sub jecxz push dec je out enter and inc mov scas and jnp (bad) out add pop popa (bad) imul (bad) add xor add add adc es cs pop movaps xor dec xchg or add pop xor xor push add push adc push push xor xor or push push gs push imul arpl xor xor or cs insb popa jae and and bound and imul gs imul outsl outsb and je outsl jb je xor pop or xor xor xor xor pop pop or xor xor xor xor or add push adc push push xor xor or push push gs push imul arpl xor xor or push push gs push imul jae and je outsl jb xor xor push add or xor insl jae outsl data16 and and je jae das das ja ja jbe jb jae outsb arpl das jb popa and arpl xor xor xor push add add daa push gs push imul jae and and fs outsb imul cmp xor push or xchg (bad) or add (bad) add add (bad) add add addr16 dec outsl push pop jl leave pop xchg jno mov mov and dec sti shlb mov cmp pop or cld adc pop mov and jnp hlt add into mov daa dec push in andl adc adc xor sub inc mov mov dec mov push nop loope negb data16 mov jns stos xor sahf xlat stos adc test xor adc push mov loopne sbb add mov pop mov adc xor dec cmpsl into leave pop and outsb jl mov xchg mov mov sub and in pusha js jnp cmp or or inc and add add add (bad) add xor push add adc add add xor add incl add xor add and xor gs or dec add pop add push xor push or push add push sbb je jo cmp das ja ja jbe jb jae outsb arpl das arpl xor push or push add xor sbb je jo cmp das ja ja jbe jb jae outsb arpl das jb popa xor push add sgdtl incl add add xor or push add add xor pop mov push xor or popa addr16 imul pop push add sbb (bad) in sbb ret iret subb sbb sbb xor je cmp das insb outsl outsl jbe,pn jb jae outsb arpl das jbe insb outsl outsl imul sbb adc or push add push or push add xor or push add add xor xor or push add xchg push das das outsl arpl jbe,pn jb jae outsb arpl xor push add pop add xor xor mov and je cmp das arpl jbe,pn jb jae outsb arpl das jo popa xor arpl xor push add adc xor movsb push xor sbb sbb add add adc popa jae xor xor xor sub xor push add add xchg shrb es mov sub mov push or xchg (bad) or add addl mov test (bad) xor nop cmp inc mull in jae add add pushf mov jmp lret jb push mov adc subl in push push aaa xor movsl sub sbb mov cli addr16 gs jp cmp adc js jbe xrelease punpcklbw mov popf (bad) mov (bad) sbb and dec movsl cmp fiadd push pop rdtsc (bad) add add add or or or add push adc push push xor xor or push push gs push imul arpl xor xor or push push gs push imul jae and je outsl jb xor xor push add or xor insl jae outsl data16 and and je jae das das ja ja jbe jb jae outsb arpl das jb popa and arpl xor xor xor push add add daa push gs push imul jae and and fs outsb imul cmp add jle leave pop or arpl cltd add fcmove out xor or xchg (bad) or mov push or xchg (bad) or or or push add (bad) aaa add add sbb or push add (bad) aaa add or push xor or push add (bad) aaa add adc sub add add adc clc (bad) mov sbb repz pop ret fdivl ss or push add (bad) aaa add or sub mov inc add add sbb jo das das ja ja outsb gs outsb arpl imul push or xchg (bad) or add adcb push sbb (bad) rol rorl adc add loopne cmpsb cmp add xchg sarl pop adc js loopne dec jmp adc loopne sbb jge jge arpl stc adc sti sahf mov inc fwait loopne push cmp xor out and add push add pop stos scas out loop cmp outsb mov lahf mov (bad) add or xchg (bad) or (bad) add add add xor push xor xor push add push adc push push xor xor or push push gs push imul arpl xor xor push add add and jb push imul and popa insl jo outsb and jb imul add cmp scas sahf hlt nop out mov pop aad or add sbb sbb or xchg (bad) or or or xchg (bad) or sbb or xchg (bad) or movhps xor xor xor push or xchg (bad) or push add adc dec and out fcoms add or dec xchg or add add inc jb push xchg pusha or fbld xchg inc repz addr16 fsub test and mov leave sub mov xchg add or (bad) test nop jnp orl arpl xchg fdivrl faddl push and sbb sub add xor mov in xchg (bad) into mov es jne loope sti push inc or mov mov push push push mov mov pop sub push push push mov xor mov mov push mov jge fstpt test sete pop jmp mov sbb mov loopne andb or enter mov scas insl inc (bad) ds xor cmp jg pop pop mov pop ret nop add or inc add ja call push push push mov cltd mov push add mov in cmp jnp add xor and jle mov (bad) in (bad) loop jmp flds mov add add mov cli inc lea push push call out shrb push mov std jmp nop mov or cmp jne mov mov movsb and fcmovnb xchg xor mov loopne jge and movw std out int mov or call fstp fstpl mov test xchg or fwait in lods add xor test jne mov jbe dec enter sbb int3 mov jecxz lea or les sub and push mov mov idivb int pop add push sbb ds test add sub call (bad) or movsb mov lods jno sub je mov mov mov pop movsl pusha lret mov mov sub rorb and lods lea sti mov xchg insb add mov pop aaa ffree fcmovb inc or push push push jg cmp fistpl push jne mov stc add pop movl outsl insb mov pop pop aad or dec nop mov adc add roll push dec mov push adcb xchg pop adc inc add sbb lea push add mov ror sarb push addb ljmp std pop add ret xchg lea mov fstps sbb push and aaa jnp das adc cmpsl lods mov add lea int3 mov push pop adc mov div add pop xchg jl (bad) setne mov cmp push sbb mov dec nop and mov pop mov mov lea (bad) in and stos push push sbb mov dec push or or mov (bad) loope push sub add arpl lea push push xor out out in mov je jl sub outsl fdivrs adc mov sub or mov lahf push nop pop adc icebp xchg sbb ds adc adc push dec push adc (bad) sbb leave mov scas not push ss xlat jbe xor pop adc mov in pop js inc jmp push jae rep push and jl jge ljmp lahf sqrtps aad adc leave movl out push mov imul outsb xor or test (bad) mov mov mov sbb push jo fisub lods sub xchg pop push rcll inc push sbb mov (bad) mov mov mov dec je bound std mov mov jmp push movsbl jo push leave xor femms add jbe pop sub push inc mov out arpl adc inc pop inc push cmp jb and fisubrl or add ret pop in dec or xor (bad) call push add stos xor imul mov fnstsw (bad) fistpl fistpl and loop mov ret aas cmp xor fcomip xor jge jg stc loop mov mov xchg adc cmp movsb push lock (bad) daa dec fstl push adcb mov pop push push dec or ret test lods ret lahf push cmp mov or ret sahf cmp push (bad) neg sbb pop add add mov aad dec (bad) jmp lods mov scas and mov push rep (bad) cmp inc clc test inc sub jne les fadds and add fs or imul and push add aaa pop pop mov cmp and (bad) lock and mov je lea and mov or pop mov add xlat mov or push jecxz mov test pop in push test (bad) je les hlt xor lcall push cmp sbb ret adc adc ds push ljmp shlb imul std dec fisub cmp movsb jmp les shlb and hlt mov insb imul lock sub call mov (bad) mov add push aas pop int ret inc push les mov jae ds aas dec imul enter sbb jnp (bad) cmp ficoml (bad) adc xor lea push les mov pop je or mov mov add or add lcall pop push push push or cmp xchg or pop int sbb sbb push add xor sbb cmp and push jne outsb mov xor dec or (bad) iret push repnz insb mov fwait xor (bad) xchg (bad) sbb inc repz mov sbb add inc cwtl insl scas mov cmp in push adc adcl lods cmp pop std push push add fidiv ret lds pusha pusha adc cmp or jg (bad) in enter mov xlat xchg scas lods push mov xor mov mov adc push adc mov ljmp cmp adc (bad) xlat xor nopl mov cmp xor inc push fs adc (bad) icebp dec xchg (bad) push dec push push pop sbb fildll pop push sahf mov jmp dec das pop pshufb inc test divl orl ja (bad) gs neg inc pop pusha add cmpsl mov mov and push (bad) xorl push jecxz out (bad) cmp icebp xor lock xchg push inc adc (bad) ss add push or vpsubsb inc sub xor (bad) rolb outsb adc pusha lcall insl push mov or fs imul lcall jmp push add jo mov out or adc je cmp out cmc push add xchg test aam js cmp and mov mov cmp (bad) pop loopne mov nop sbb pop lock inc and dec mov neg scas jns mov cmp je push and inc ret inc sbb fnstsw ja pusha aam mov pop daa and bound js jle dec mov cmp mov jg pusha sbb pop mov add pop fmuls mov scas pop dec mov or or cmp test mov clc mov jne dec add or mov into mov or in jl and je mov loopne adc cmp jne (bad) xlat and jge lock sbb inc push loop inc xor or and cs xchg push ret aas xchg dec mov lea mov je cmp push dec mov insb inc sub jmp jnp push or fs sbb aad sub mov loopew inc (bad) out shr mov adc xor or add push sub mov sub add ret push push mov dec mov mov inc jge (bad) inc fnsave popf xchg sub mov adc insb push adc adc fiaddl mov adc pop pushf push pop fcmovne leave or mov or cmp (bad) or jg cmp jl jmp add push lret jbe lods sub jb adc les dec and popf push adc fsts pop sub imul movb out jge push adc mov jb (bad) adc gs cmp out push inc pusha (bad) fsubrs push int sbb shrl mov adc sub add bound daa jb xor push test outsb xor mov inc push rcrl xor jle push jnp aas mov pop test je mov data16 mov out pop mov cmp gs xor push adc mov in and xor push sub adc popa rcr out imul adc in mov mov xchg lock mov mov mov add fisttp mov sbb add cmp jne cmp aas ret jo add and mov xchg clc jg sub cmp and cmp jbe mov sub add push adc mov lret cmp or sub das push push mov fwait ds cmp jae pop lret sub jne sti add in (bad) push cmpb jae xchg data16 sub adc fstpt or push or dec sub pop mov dec shrl daa arpl sub mov idivl xchg jl arpl mov xchg cmp add inc dec stos push add test push adc inc repnz push push inc add or add lods dec mov loopne cs xchg mov mov inc jnp inc add add fsubs pushf mov das or fisubr mov inc out pop adc test insl push mov sub mov mov jne mov cmp movsb mov adc jo push push nop enter fwait and mov mov or pcmpeqw mov mov test and iret and pop test or insl mov push aas dec (bad) in jbe ret inc add push sub jae and pop jl test mov inc inc mov sub int3 jmp jg sbb adc call (bad) push test sbb cmp jne sbb ss mov cmp int3 cwtl adc mov push push sbb fidivr mov cmp jne mov push and dec imul ds pop out inc sub xchg in or and inc and dec sub push out mov xor push push sbb xlat pop aaa dec inc sub das cmp es imul xor push inc mov out sarb push jb in fsub pop test xchg xor imul test add or mov push push repnz cmp mov jmp mov mov imul or jge and push jo sbb cmp sbb push pushf (bad) call sbb jbe pop call sbb insl cmpsl out mull nop fdivrl sub jbe clc inc or insb test lods enter popa mov repz mov jg sahf xor fisttpll pop lock jne mov movl (bad) pop lret stos adcb pop clc mov in jle cmp or lods dec jmp imull sbb inc pusha dec out fdivs push mov xlat dec aam ret in adc (bad) test add pop push mov push pop mov cmp in mov or cmp adc out scas xor add mov sarl push cmp aaa ds or mov sarb cmc int test pusha mov sbb ds xchg in int adc dec lds dec sbb push int mov test pop ja dec (bad) es jae sbb and jp pop pop or xchg mov add pop mov notb pop add add and pop xor add pop jge sub xor push fld icebp inc fstpt in mov xchg cmp push cmp fnstcw repz adc xor out (bad) jne adc jne cs cmp cmp xchg out je adc sbb pop sbb add push dec and iret ret stc iret jae popa xor mov push icebp dec pop adcl imul cmp jae sbb or adc cld daa sub rol adc mov xor (bad) sbb mov jne xor push mov cmp je lea jbe pop jbe enter fimull mov js adc xor je pop push jne insl fidiv jns push jmp sbb dec xor jo add add js mov push push pusha cmp jne adc xchg fidivl push jg mov mov add mov inc rorb inc or sbb iret inc outsb sbb push notl imul inc clc dec in pop push adc jne jge insl cltd in mov inc (bad) into cmp je dec (bad) mov ret insl add clc jle pop mov imul outsb test mov mov into stos or adcl or mov call add push cmp adc pop pop push or addl outsb cmp gs dec mov lret dec outsl fwait dec adc mov fidiv pop sub xor push add add dec mov cmp inc push jns insb xchg push imul nop outsl jmp push sub xor or cwtl test jo insb xor pushf cmp mov adc push push sub shll ss add push in jne sub jl jg cmp loopne add out pop sbb lock lock inc or or xor pop ss int sbb cmp loope dec mov add or mov mov test sbb add adc adc adc lock dec mov aad or inc and das push push pushf inc inc lods arpl testl dec push (bad) mov mov pop push (bad) and inc into xchg outsb pop inc jne,pn jmp push cmp lds pop sub shrl inc mov pop fstp and sub xor mov ds outsl call add jg inc sbb ss sahf fldcw and dec call pop or xchg imul push bound lret dec mov or mov push or sub icebp (bad) repnz mov test hlt mov pop sbb loope lock or push scas mov loopne lock lds imul pop stos xor jle or jno push xchg clc int pop (bad) push jno sbb and dec push xchg aas and sub inc sbb push aad lods inc sti loop es dec pop jb inc outsb push outsb xor push jge lods insl sub or push cmp sti dec cmp or mov mov or jbe fstps leave inc add adc push push in xchg ret dec mov jp ret add push push jno cmp sub push (bad) or sub insb xchg cmp (bad) push cmp mov sub fldl adc or (bad) xchg out sub pop dec add or aas pop mov (bad) std mov pop call test jbe inc in bound les mov jo xor push (bad) jbe pop jge inc roll mov loopne sbb inc (bad) dec mov je and (bad) imull and add mulb fs jnp mov cmp cmp inc fildl fbstp ja push sub xchg xlat xor dec hlt pop jne inc dec lcall and sbb test xchg or (bad) popf cmp sbb movsb mov sub jbe sbb dec ss (bad) sbb scas sbb stos daa mov adc add jmp mov lahf imul bound iret pop dec xchg xchg mov push add lea call or int (bad) xchg xor cmp xor and pop and insl call add mov imul and leave or arpl cmp add push push scas xchg pop dec dec and adc outsl or cmp push pop pop dec adc aam call or cmpl out je push sub mov cltd andb arpl nop and sub cmp push push (bad) sub pop mov pop jle xchg xor fidivr out jne fs loop cmp daa int or ret xchg xchg out test jbe mov xor and sahf pop fisubr push sub in adc push sub mov clc outsb daa and cmp jne movsb ror arpl cs sbb mov dec cmpsl popf ret jp ret fwait mov mov cmp pop ret push cwtl sbb jl and or dec adc dec hlt mov pop ficom ret fisttp (bad) dec add dec lret push pusha (bad) inc add nop inc movsl mov cmp or add cwtl clc jmp stos xchg jne cmpsb pop negl rolb inc xor push ficompl inc push out cltd sbb cmp or das es sub or pop rcl push dec sub js sarb imul lret (bad) xor pop imul lea push addr16 jae data16 pop addr16 xchg adc pop jmp test or fsubrs cmp push pmulhw add mov xchg xchg push mov add xchg rcrb popa cwtl jp add push je gs or add ja jb cmpsl pop xor lods and push stos pop add add pop sub call les xchg insb mov adc arpl pmaxub xchg push cmp lods stos sbb push mov mov pop mov xlat jne daa mov or (bad) push mov mov adc ror shrb add adc adc mov mov xor sub pop adc add das jne xor (bad) lods fs cmp stos pop adc push push xor out fxch inc mov mov and in or js sbb mov fsub gs xchg sub dec call mov cmpw sbb lcall or lds push pop adc test cmp push xlat push imul xor or sahf add jmp cld cmp aam dec xchg mov sbb jno sbb notl mov sub adc pop cmovno es jecxz or sbb sub jb xor pop cmp cmp les xchg xchg pop inc or sbb push mov lods xchg push sar vmptrld hlt cmpl dec pop leave mov out (bad) je shrb sbb inc ret adc adc and icebp sar add daa lret add loopne or push movsl inc adc leave xor aam sbb das mov mov mov ss mov jbe pop sub pop push push push and xchg jp jle jne push rol loop add jge je movsl or and mov and pushf pop dec roll or loopne adcl push scas jbe jbe dec test aad sbb pop lock adc add rorl adc clc ret pop pop push in cli lsl cli add andl jmp xchg pop sub adc je mov mov push jns add and cwtl leave xchg or jmp popf adc cmp fidivl and bound int3 int pop mull cmp push jecxz sub jle jne and pop push scas mov mov add pop mov mov adc shl lods ficomp out cmp lods je xchg jnp test insb ret sahf movsb (bad) xchg in dec jo sub fdivs out xor jmp je mov addr16 sbb cltd je dec cltd push flds pop and inc pop xchg and inc sbbb adc ja dec pop loop test fadds lret test loop push sub (bad) outsb cmp sahf add imul movl loopne addr16 notl mov and push mov cmc popa inc decb in popf push fimul dec cmp adc mov out pop orl icebp inc sahf es xor jbe in ret adc pop jle pop and or pop mov das inc or sbb out jbe das pushf daa pushf rcl cmpl sbb mov and jne adc in sub inc cmpsb jae xchg ret lock mov andb mov sub stc push mov lea xor or sbb inc subl bound pop adc mov ret fdivs push fisttp push or rolb push push mov xor xor push loope stos or jne repnz cs push and mov repz pop ret pop push adc fisubr and loopne ss mov adc les xchg mov pop sbb or add jbe jns pushf jmp xor int3 repz add push btr pop mov inc cmpsb inc mov jp mov mov add push lods pusha mov pop inc outsl fnop jo mov and sub push es jbe or sbb insl push push push pop add jle xor ret popl lock mov jns push pop test add fisttpll jmp or loopne pop push icebp stc mov or add push inc xor pop inc xor testl xor rol fcmovnu testl pop sub push fstpt or shll jbe (bad) je imulb je push push lea test pop pop inc or je (bad) js and sbb push or add ss mov mov (bad) mov push or or fidiv xor jmp mov jmp pop les sub xchg push add out fldl sbb loope scas jne xchg or and xor jecxz repz je mov divb scas aam jg mov inc cmp je xchg or or ss or cmc push outsl mov jle popa add jle je cmp jne fild sbb mov fucomip mov xor ret fdivl inc mov xor mov inc push mov fstpt sbb call inc jl add jg add (bad) testb dec sbb (bad) fidivl imul ja pop push inc inc mov adc or cltd inc pop pop or push (bad) sbb sbb test mov loopne lock cmpl cmp jl popl into sbb pop nop mov lods pop arpl and aaa jle lea or mov dec xor mov and jne jmp mov insl or bound add icebp andb mov pop or sub or pop mov dec ret mov lea ret mov xor mov and outsl rcrl jmp add or rcll ret (bad) mov jle push clc mov clc xchg ret into or add fnop call push mov xchg mov mov in lea push jg inc or in lods frstor andb jns jmp fisttpl or push insl push mov push push push addr16 pop (bad) pop je xchg push dec pop and aas cld decl mov or dec inc dec or stos push sbb and push popf (bad) (bad) mov inc pop push dec je xor (bad) xor add push dec (bad) cmc inc pop xor mov cld xchg in dec dec add (bad) or mov mov orl adc test pop pop adc rclb gs mov call andl jbe call push mov lea lcall leave scas in or or push mov xlat enter jp push loop test jnp,pn and pusha movsb js mov int3 popf lds xlat daa pop (bad) rorb scas negl sbbl les (bad) loopne and or fimul add or sub mov pusha add fiadd (bad) inc (bad) inc xor shl mov mov sub sbb pop inc add cld lea pop sub xor es mov cmp adc clc jne fiaddl gs pop (bad) adc hlt sbb cmp fcomps clc fisubl xchg xor push pop pop mov in test jnp lods movl out sbb scas js pushf arpl dec add cmp inc sbb cmp xchg flds sub lock hlt clc cld cs mov mov popf fcomp fldenv sub adc adc lea push (bad) xor mov lea test dec int3 jge sub loope pop mov mov pop das fmul int3 shlb mov flds push xor scas movl xchg dec add in adc fwait jo add faddl pop push jne and or movsl bound mov sbb arpl dec je push insl mov into mov dec ljmp jl fidiv clc fistp (bad) pop lods dec adc add cmp cmp add add movsl pop mov jge adc ret dec jae inc or out cmp inc ja push int3 add lods (bad) idivb adc ja ds cmp in sub les loope adc xlat faddl scas xor scas xchg inc mov add cmp lcall push push stos testl add jmp jge ffreep mov jb loopne add pop test dec divl push lea adc or and shl mov mov mov mov int add mov arpl dec xor lea and sub add pop ja and mov pop mov test fs mov (bad) in call call cmpsb imul test mov addr16 add or lock loopne sub pop pop xchg nop popf or add mov or sub xor sbb cld jg or fninit cld ja dec neg out (bad) lock in xor (bad) stc sub fwait jmp pop or mov fisttpll cmp dec pop dec push mov test dec pop mov enter sub lock sub cltd ss pop call lcall or sbb (bad) xor insb aaa dec xchg sbb sbb xor sbb adc or dec (bad) xor or add mov push add mov xchg mov xchg inc cwtl sub inc inc sbb mov mov nop dec popa mov and icebp sub stos add inc in add inc dec push mov fbstp sub stc add shr inc stos mov outsl mov add mov test jle xchg jne not subl pop pop mov clc fcomps jne push push mov mov push push xor loopne out outsl test rorb aaa mov and ljmp add or loop cmp adc push pop arpl movb adc insl mov es (bad) cld or pop hlt adc push fisubl daa scas arpl movsb sub scas insb rolb or jb jl pushf testb enter pop xor subl push fbstp or or dec es dec cwtl cwtl mov ss push (bad) fidivrl push push push or and and (bad) jne sbb jo sub test dec inc push add push jno (bad) cmp daa push insb outsb pop adc sub fmuls cmp outsl orl in push xor fistl ret aas add stos in rcrl cld pop add cmp sbb jnp leave dec fdiv int3 in cmp and push xchg fldenv arpl rcrb jp inc shll roll call fisub inc lcall movsb or and aaa inc mov pop push mov dec lcall sub ret adc je aam insl inc bound jne or push dec sarb push or (bad) jle xor (bad) cmpsb lret scas stc xor lock xor inc mov outsl add into and movsb and pop andb inc cld cmp je cmp loopne daa out cmp je aas out (bad) dec rcll adc sub mov (bad) aaa push std cld das add in call jl cmpsl ret or loopne and dec xchg jne mov loopne adc jle fiadd hlt xor push (bad) cmp ja test mov cwtl inc cmp fildll xor sbb or in (bad) out (bad) adc pop in ja push cvtpi2ps inc push fdivrs pop inc pop jne push jmp xchg lret lds add scas pop leave gs and push pop in push or and xor and jnp inc sub cmpl xchg xor jne push sahf scas imul mov aaa pop roll mov lock sbb xchg mov sbb (bad) xor jp jnp stos cld adc push sbb in sbb cmp add lea pop push push fcompl or push lret pop and and dec testl movl jge jle les push jmp mov add sbb sbb mov sbb inc shll jne mov pop jb and loope stos cmpsb movsl pop jmp bound and xchg push fimul test jge sbb or hlt fdivl adc div es lods lea mov and dec fcompl int and dec in push call or adc add xor add inc ds mov aad push fidivl lods ljmp mov mov enter pop loopne pop imull jbe (bad) push fs pop mov dec je (bad) mov add jo xor and add shrl (bad) jno fldl cmc rorb cmp mov dec dec repz icebp sub push push add lea dec cmp aam dec and inc jmp pop or push mov push add stc decl andb mov mov push std or inc mov or cld push or add (bad) or imul push sarl test mov idivb je andl lahf inc sub and mov mov (bad) pop mov sbb and or test lret out adc adc inc loop xor cmc in fcmovb push int3 mov pop orl daa or push je mov sub out pop rol push pop sbb ljmp jo jle ficoml xor pop mov cmp jle add lea mov mov mov and mov in cmp sbb pop test (bad) or (bad) mov or jmp jb fs or ret push cmp ficompl mov push inc test pop in add mov adc sub mov jmp fsubs ss or cmc in cli outsl fistp mov and add jg movsbl mov ffree por je xchg lret cltd pop xchg les aaa cmp mov push dec and pop inc subb xchg popa adc sbb aam lods mov jbe push dec jb sub cmp je pop jo inc cmp dec dec je or mov daa or inc xchg mov adc or sti sub cmp fstpl pop inc add push incb push mov inc inc shr jmp jp push clc leave pusha out sub sarb (bad) pusha outsb push aaa dec mov mov pop pop insb je ja jmp cmp mov adc and ds jo outsl inc cmpb jne inc inc enter and les sub ret imul ficoml xchg in lret inc loope sub add jl fmul sbb push clc addr16 jp gs xchg jle push in push test cmp or jb add shrb mov mov xor adc (bad) xor mov mov and fildl adc pop int hlt dec sbb lret push or mov mov aam (bad) dec xor mov or out inc jmp and rolb or xor mov dec (bad) int clc or xchg push xchg (bad) aaa xchg popw test xor out aaa xchg mov testb ds pop ja imulb lds add push dec popa cmp pop mov lock xor and outsl fwait ljmp je (bad) roll jecxz out mov ret arpl or push pop mov xchg fsubrs in or addr16 (bad) mov int3 rcll add (bad) mov add jle inc pop (bad) je out push dec scas js jmp ss (bad) mov xchg sbb insl ljmp mov sti jo sbb inc adcl loopne mov and jl mov adc or add jbe mov sub ret lret jae imul push sbb dec data16 jae imul mov loop jecxz mov jae daa cmp rcl inc sbb inc andl mov inc add icebp es dec and pop fmull adc inc ljmp push dec mov and cmp push cld push mov push js inc and mov add pop push nopl dec mov jno or je cmp mov jmp cmp fs mov int3 sub rcrb jmp fbstp jmp pop xor sbb stos mov loop sbb adc rclb or fisubl je add mov gs pop pop test adc idivl mov loopne xchg fdivl sub xchg xchg pop jg push or sbb lock imul mov mov fisttpl pop xchg jge lret divb pop add inc hlt hlt mov jmp push add pop sub xchg add stos mov cmpb je or out shufps sbb lock cld test es imul or jmp pop imul or fcomp xchg dec mov inc sub adc cmp and mov adc ljmp fcoml adc add aam or mov inc add lock decl testl (bad) mov pop dec jle lea loopne in mov mov dec fldt insl add sbb mov test jae adc gs cwtl fmuls xchg or mov mov out clc xor fisttpl pop (bad) xchg push add std xor cmp test dec add fsubr inc fnstsw adc mov addr16 pop or mov sbbl cltd scas lea pop ret jecxz add mov ret add or fnclex inc insl xchg aam dec cmp es xor push inc sbb in iret fs ret dec loop int3 mov bswap orl or movsl test insl pop mov xchg mov sbb sbb sbb fnsave in pop sub mov stos inc cmp jle icebp cmp jb stc and sbb or fldl ja add pop cmp xor mov pop lret sub cmp dec mov push jmp movsl (bad) arpl xchg imul js push sub sub push mov cmp int adc pop popa fldt push inc out inc jo inc sbb fwait push adc jg adc cli jb inc jbe aas insb es push mov xlat lock adc (bad) mov aaa xlat adc das ds or push mov or and and adc cltd nop or cmp or cmp leave adc add das xchg adc pop (bad) scas push ljmp mov loopne adc add sub repz enter aas fcmovnb pop test test xor out inc mov in cmp sub leave and cld push jmp push dec insl xlat lods and jmp dec mov add add cmp dec ss dec mov ret or pop adc dec mov mov push xor lahf push daa cmp and (bad) xor pusha pusha popa add test xchg xchg push xchg inc adc jae push pusha enter enter test mov (bad) mov dec push popa adc cmp xor std imul (bad) add adc cmp frstor mov mov pop cmc jg pop push lea cmp jb mov or pop loope add and pop push leave ja cltd push fistpl fild push js ret orl cmpl jae adc movb (bad) rcrb pop scas pushl pop add adc cwtl pop push fadd insb sbb aad fildl or sub add loop push mov adc push pusha or arpl out shrl mov or push cmp jge lea fcmovnu decl shl mov add fs and aas inc add cmp jl xchg comiss cmp inc pop or popa aas pop cmp cmp jae ds (bad) iret and xchg push arpl xor mov jbe cmpb mov pop cs lret mov jmp imul sbb (bad) lods fxtract popa mov pop cmp xor dec add sub add cmc ret imul mov or ja or push mov cmp je cltd and out jle pop ficompl outsl add imul xchg cmpsl pop xchg jmp push or (bad) rcrb cmpl sub js jbe jb mov or sbb xor push (bad) insb mov mov shrl and mov sbb or addb sbb jl in shrb test sub idivb push in dec pop jle or divb adc pop or je js xchg imul pop inc jo push fs mov jbe movsl mov in in add or fisttpl shll fsubs movsl dec call lds sarb lods rcrb or sbb clc ljmp jg cmp jg mov push mov push and mov jle jl stos inc mov adc xor jbe aaa sbb daa test loope sbb in cmp mov inc mov data16 stos jg jmp pusha in jp in push movsb mov cmpsb lea sub decl leave mov push mov call pop leave mov pop lods mov lock div dec push mov aad pop test cmp dec and pop bound (bad) cmp jae sbb jno aas xor clc jae cmp jl cmp mov inc fcmovnu mov hlt fs cmpb es sub f2xm1 push push outsb or (bad) jmp (bad) adc test ja mov cmpb orb add roll rorl pop jecxz dec jle or testb sbb mov mov and and jb xor test push xchg jl cmp ret icebp sub or add cmp add jle cmp outsl push loope cld es lock mov push inc cmp (bad) das mov jae mov ss pop inc push add mov add je test mov sbb jl sbb add push ds test sub inc add pop sub mov xor outsb push push fistpl test sub test popa push (bad) jae sbb and adc loop nop fcoms leave rorl test push std aam cmc sbb or sbb sbb sub mov push dec jo mov lods pusha or mov imul int3 cmp popf and pop lea xchg pusha repnz (bad) mov xchg (bad) lock sti xor xchg and jae sbb cmc scas inc pusha cmpl dec and push jmp fiaddl dec fisttp dec push jg cmp cmpl js push popa jo push cwtl add les and or add mul jnp mov imul or clc jo adcl out inc cmp js pop pop es mov push adc push push and cmp pop mov lods fcmovne xchg pop xor jmp sbb movsl adc sub dec jae sbb add add (bad) mov es test or push pop and (bad) or xchg sbb add cmp cmp mov xor dec (bad) int pushf push pop jmp cmp dec fdivs dec stc fisttpll cwtl mov je pop repz pop sbbl (bad) sbb rcrb or adc xorl mov addr16 cs pusha cmp jo push popa sbb inc sbb pop adcl cli pop daa mov mov sarb mov mov or sbb xor ror mov sbb iret push loopne xchg out lea shlb fstpl cs divb icebp add mov pop xchg sbb fiadd imul jo mov and sub mov xor pop sub dec insl outsl sbb add adc or pop shr pop push pop xchg push jae xor pop sub mov jne sbb iret dec popa jg mov jp adc mov lods in int js push or repz add stos xor fadds insb adc leave movsb sbb les js dec push add and fisttp pop fsubr cmp xorl roll dec add stos or jbe jae (bad) sbb push inc call cltd sbb jne lahf push adc mov into stc push and adc dec adc out and jne xchg xchg mov idivb lret mov mov or mov adc xor pop (bad) jmp outsb inc sub add xorb repz aam push push jae xorb stos cmp imul add aam enter jo out xchg add push dec inc sub or ss xchg and mov or add pop pop sbb out xor inc dec cmp push inc jmp push cmp or inc push andl pop jne push je push xor dec dec adc subl xor adc enter (bad) lahf and and int repnz add cmp push in mov add (bad) or loopne loopne loopne daa jmp testl (bad) mov iret ss push fmuls mov shl imul bound push loope,pn pop (bad) push and test or pop loope cmp sub adc cmp jne adc mov jecxz negb out jmp cmpb or jnp cmp jbe inc or ja xor add jmp les push sub sub adc movsl inc mov add call int3 mov adc adc cmp mov mov sti insb mov cmp mov test dec pop cmpb and cmp jns ffree mov cs ss subl pop add aaa jne pop incl mov movl push mov mov mov and push add cmp je or sbb jns mov mov aam insl fsubs daa imul push xor loope data16 push jle sti test and (bad) mov mov cmp dec aaa dec lock fmull inc mov inc cmp les mov je (bad) testb lds push mov mov inc inc or jmp or andb inc inc fistl sbb add jae outsl leave testb and xchg lret or jne (bad) dec jmp dec inc mov aad call cltd lods pushf loopne sub inc dec pop enter push mov sarb sub and jmp adc hlt xchg sub xchg test or js and sub cmc fldt or rcrb sbb xchg ret shr mov dec fcmovu mov mov push pop inc mov jne sbbb sub or (bad) insl insl invd adc sub loop add test pop sbb inc adc mov add adc xor in fimull push fs add nop add stc dec mov jb push sub adc ret jne imul aad repz jnp cmc sub aam sub dec inc dec ljmp inc data16 inc or add aas daa ret jae ss jmp inc or repnz ss idivb inc sub pop add xor dec mov jmp xor and xchg and push add mov and andb add aas pop push sahf sub jmp mov movsl test je pusha mov inc and jnp add sub inc push into or push mov or and cmp cmp or pop in mov push adc (bad) lcall pop pop xchg or xchg orb fmul (bad) mov jae outsl add andl fisubr into movb mov pop jmp push into and lock cmp insb (bad) or lea cmp mov mov xor push in add fdivrl cmp subl (bad) jae mov pusha or inc xchg pushaw inc mov je add xor mov push mov ret sub xor call mov cmp and test push stos inc or pop cmp mov loop (bad) mov mov mov mov inc inc std jl or aas pop (bad) or cmp dec test push adc enter jmp ret dec lahf pop stos clc imul das cmp je push xchg shll mov in addl orb jmp or cld pop mov push add add andb xchg shlb push rcrb jne jmp sub movsl xchg mov xchg inc sbb arpl cli test test mov arpl xchg jle dec sbb mov adc jb xor js sbb in push mov mov inc mov mov lea cmp add jl cmp jg sub mov inc cmp jne inc push (bad) fmull mov mov jns fcompl fs clc push fsubrs add push inc xor inc sbb jnp mov in ds or inc jbe xor das mov sbb push insl fsub mov xchg inc xchg sbb out inc xor imul test cmp popa push pop ret jno test adc (bad) repnz inc push shll pop je ss inc mov and nop pop je ret ja repnz lds xor dec push fsubs sbb sub add popa and push sub push push mov pusha movsb loopne call ljmp xor pop adc int3 xchg or rorb cwtl fstpt lds cmp insb fwait je popa mov mov cs xlat mov jne icebp adc add and xorl pop test inc sti push outsl loope pop adc mov pop xor sub push sti or sbb add push insb stos push ss push pusha decl adc cmp ss test mov rcll adc pop stos jp adc daa pop cmpl pop jmp and xor divl adc rorb or popf push mov jb and push cmc (bad) mov pop aad bound pop testl dec mov negb add pushf rcrl lea mov pop mov pop mov add pop cmpsb adc and sub bound or mov sub shr mov imul push and add dec test clc fldl mov adc lea outsb sbb xchg mov mov cmp pop add sbb dec test pop ljmp jnp adc mov lock mov mov pusha mov shr lea not and (bad) sub orl and pushf mov jae and pop add pop loopne cmp pop push adc add pop add push or pop je push popw sarl aad lods pop jmp xchg hlt mov sub rcll fstl sar sbb lahf fcmovnu inc dec fiadd roll cmp adc cmp je mov dec jno inc cmp mov pop loop out (bad) and add dec loopne int bound sbb mov push in mov mov mov or into mov hlt or ret fldcw add xchg imul aaa add add push jbe (bad) (bad) rorl or jbe fdivs pop jne sbb imul adc lods or jmp and xchg scas lock and mov ljmp push cmp dec lock mov push js jnp ss dec push ret movups subb insb negb pop xor pop negb or push cmp andl and decb or jns fsubs fs adc lods imul jnp or call cmc movsl sbb shl enter dec adc cmc sub lea repz fildll cmp sub sub or push and or orb xor lea mov mov lock and sbb jge mov or movsl push jne jmp nop adc and push sub movsl adc jae inc sub and and or sbb mov sbb pop jne mov cmp es add pop and mov mov jnp aas adc jmp cltd mov enter das out clc push insl add jb jnp je lea jl pop adc out mov mov test imul mov movsl adc push cli (bad) push cld sub jnp pop mov jl inc mov mov jo or push push inc in outsl lea add jne mov pop fcomps mov xlat je mov sub push mov fstl dec push into pop push mov fs pop jl shl inc and fisttpll or push icebp cmpsb fbld sub sub (bad) aas jle movsl (bad) mov or or test add call sarl pop mov decb jne jns movsb lods pop mov or leave dec adc mov sbb sub pop (bad) ss sub mov and push mov fidivrl inc sahf jp or mov pop hlt mov and idivb or mov push decb jge rcll add into shr or or mov cs jmp sub imul bound sub mov lods push inc mov xchg and or add cld clc insl out jb loop lock and adc cld cld jbe pusha lahf shlb lea jne,pt cmp in jne dec cmp xor test gs adc or outsb insl adc push outsl and test sbb mov enter mov or ret or andl lds cmpsb and xchg pop pop mov sbb or and stc jp sub and mov rclb bound nop lret add mov out mov xor fcmovnb (bad) lea dec loopne ret aaa imul (bad) pop clc xor jmp rol add dec push sti test out and adc mov jb xchg add das lcall cli ja lea orl in pmuludq int3 mov movl inc mov out int cld sar faddl push sub cmp jbe mov dec or clc mov lods push shrl jp mov mov mov (bad) loop sbb test jp dec inc subl shl add cltd ljmp ret mov cld lods dec cld and lea sub xchg push jp aas shr test dec cld dec cmp add (bad) js cli lds (bad) add xchg (bad) insb cmp movb lock lea pop xchg fsubrs pop xor cmp mov pop push clc icebp add sub and xchg sbb nop dec or je pop mov fs sub out fcmove add fwait stos insl outsl or lret incl inc xor adc mov (bad) cli pop jge sti mov lret pop aas or dec dec pop dec pop pop in xchg gs pop call pop inc nop dec xchg and iret in js mov mov inc dec or insb dec test mov inc xor ss inc add mov adc ja insl mov push fisubr pop mov mov pop xor jnp adc jbe pop rcl or xchg test ret sbb imul mov into jle cs dec push in and ja mov pop or loopne add loope jnp push add in mov pop in punpcklwd movsb popa pop psrad and mov add in dec rclb je add lcall nop jg gs ret jmp push mov dec addr16 sub roll test mov add push shrl scas mov icebp ficompl jno bound fist jmp inc push xor jg mov mov ljmp inc sbb ficoml mov add jg rolb ret rorl mov or (bad) clc xchg cmp (bad) pop cmpsb stos sbb clc jae orb jne addb inc add imul or faddl stc sbb push cmp inc sub cmpsb cltd andl in jne cli cmp mov push adc push inc loope out adc test and nop or test sub xchg xor xor mov push aas mov add fidivr popa addl xor orl inc cmp and fs fucomip bound jmp js and sub jge and incb pop loop sub jns jmp loope outsl mov or push cli in stos (bad) insb out pop xor js lret adc je cmp sbb add in cmc (bad) inc jbe add jb add aaa pop cmpsb fcomp bound jmp les fiaddl jb push pop (bad) add pushw das sbb sub push sub pop cltd stos xchg lock (bad) repz mov stc or enter movzbl add and cmp call loope dec stos mov xchg jns shlb test pop fcomp cmp add add sbb or sub sub jp jbe lds clc or ret out jae mov int lret jl cmp jbe push es int3 outsb scas inc es push add popf (bad) mov mov jb add pop xchg cmpsl jle aam in add mov shr dec pop push dec ljmp cmp (bad) mov pop cmp inc cmp (bad) fisttpll jp mov pop mov test loop (bad) jg push add or aas insl js or sbb mov fbstp sub sub (bad) out add (bad) sbb add jge or mov pop divb rolb xor xor mov inc sub mov adc push pop cmpsb mov pop pop jle mov orb sbb push cld mov inc mov sbb mov jle inc (bad) call ss jae cmp sbb repnz outsb mov add or ficoml adc sub sub xchg and xor je mov jbe push mov push sbb jne mov sub push and sub lea add push lea cwtl daa repz or xlat add sbb push cld add mov lea sub inc jmp andl mov dec push mov inc jno addb adcb test (bad) fist inc jae sbb cmpsb cmp pop cmpb inc inc mov push jae cmp lea call cmp (bad) cltd arpl add jne or outsl jae lea jae jp outsb inc insl aad xchg jbe jne push mov in pop add inc inc lods sub mov mov sub pop mov adc jmp adcl cs push scas mov lock push pop jae aaa push ret mov push stos fiadd icebp imul mov cmp sub and jecxz jecxz or inc or inc aas pop js nop rcrb (bad) mov jbe call insb lock pusha dec loopne pusha jae adc add (bad) push lock rclb sub jnp mov or mov outsb cmp sub jbe jl fcmovnb sub jle xor push gs cmpb out sub inc stos arpl sub push rorl pusha in addl and lcall cmp notb inc jne or cmp or jle loopne je push cmp jne adc inc add and movsl sbb decl mov cmovo or je sti insb fucomp mov inc inc jmp add stc pop xor lret ljmp mov add in ja push pop fstps (bad) insb aaa pop hlt cwtl and shr outsl icebp xchg or cmp and dec pop jne sub (bad) sbb mov pop ret iret sub and adc cli mov mov popf je out insb sbb cli sub or mov outsl arpl add ret add push movsl test (bad) lea sub push loop dec outsl xor pop or sti (bad) cmp sbb loop or add push xor xor pop pop sub mov mov lds add push sti sbb fwait add pop inc bts jmp clc repnz fidivr leave call bt mov inc push aas (bad) lock (bad) roll add inc push sub sarb icebp pop dec add into mov int3 add cld sub jbe mov into adc rol jmp or push inc leave and insb or std cld aam rorl fsubs es in dec out flds lret mov loop cmpsb jle fucomi pop ja cmp sbb not mov clc mov daa arpl or lea andb push popa in sub mov or cmp and xchg pushf xor push jns jmp add jge in jmp std jmp cld or sbb pop mov adc sbb out nop xor mov repz add loope xor xor fcomps adc cmp data16 inc dec or mov mov push xchg adc mov add add xchg add xchg mov xchg aas pop push dec imul inc addb mov or lock mov inc mov adc mov or mov or add mov add push or jg add shll in xchg dec or adc cmpsb jmp sbb sub add add inc lea inc mov int mov or subl rcll dec jle inc lods and push adc enter int dec rep push xchg dec xlat cmp and mov mov dec rol dec pop and push lock int3 jne lea push lcall push lods mov mov sbb ljmp fcoml stos negl inc test fstpl add aaa pusha pop push xor inc ss xchg xchg pop sbb fwait sub and fsubrs push je pushf arpl cmp mov push fcoml dec cwtl pop push adc push mov ret push pop pop out mov push push adc add out in pop lea add mov push punpcklbw aas dec jae ljmp lds or xchg jle lahf test cmp xchg clc and adc adc outsl or cmp fbstp jae adc push fs add inc je xchg or push mov nop das enter mov or dec inc push push push mov into and test mov andb mov sbb loopne icebp add add insl adc pop jle or lea mov jae mov or add lods pushf adc lock mov sbb (bad) or sub cmpb fsubrl mov xchg push jo lock mov add adc or push lods std mov cmp je lock inc mov (bad) pop inc lea stc inc int3 pop and pusha adc movsl mov lods ljmp xor push inc fiadd sub jl or adc (bad) adc nop mov add sbb lods xor ja dec pop dec inc mov (bad) lea xchg add es xchg mov sbb sub (bad) adc push loopne xchg and insb mov cmc mov or pop cmp (bad) idivb jmp movsb lock add js xor jg mov inc jb dec or movl insb adc inc adc stos inc cmpsl pushf adc (bad) mov xchg xlat inc scas (bad) pusha cmp sub mov shlb push orl call pop js fstpt jnp jge mov adc sub jnp js out and push mov sub sbb out dec movsl lock mov andl pushf jl sbb add icebp out sbb mov mov or xchg dec xor mov inc cmp mov es cltd cli cmp insb movl jb cmp ficompl adc push rcrb dec outsb adc mov cs rcll adc push pop pop enter push inc enter sbb inc sbb add sbb pushf and and inc adc and cwtl dec or inc xchg mov sub inc sub adc test sbb dec pop jne data16 data16 mov add mov jo xchg push and pop push repnz (bad) cmc int pop xor mov pop mov dec adc (bad) ficompl or ljmp notl movsl scas pop (bad) fmuls or shrl ljmp sbb jmp rcr (bad) mov cli or jne (bad) mov mull inc frstor add jb cmp ja pop cmp mov dec dec jb fwait int mov sub outsb out fnstsw or push outsb sbb in xchg push adc push rorl add imul cmp push mov sub sub fisubl mov (bad) or data16 (bad) push jns add aam adc nop or sub ficoml lds push cmp inc mov pop inc sbb iret andb mov xchg pop rcll or push dec lahf (bad) or push and inc add dec cmp push mov movb push movsl sbb pushf inc out sbb mov adc push mov push pushf bound sahf adc push lahf cwtl (bad) sti repz cmp lock in and jmp push add mov je pop xor mov test gs cmp xchg pusha movb add outsb int inc andl and call sub ss jnp out stos mov dec out mov test adc fdivr test ja and mov pop push outsl adc xor jecxz lea test decl push add add cli push ja or in pop jle xchg nop and nop inc inc call lock inc cmpb aam or call sbb adc movsb adc out lea sbb push (bad) dec fucomp push inc jns pushf mov in push dec mov push dec in push cmp mov push jmp pop dec mov adc dec stos add push (bad) insb clc mov js,pn mov xlat mov pop lods pop sbb xor xchg inc xchg pop cmp test cmp sub pop movsb adc test push mov ficompl dec mov pop sbb call (bad) or cmp (bad) add ret adc (bad) icebp mov shl iret pop sbbb in push arpl adc push and (bad) mov mov std es mov movb adc clc push push lea dec xchg cmp ja ja sub and sbb out adc push push inc inc mov call pop pop push mov mov sarb fnstenv and sbb leave fsubrs push rorb cmp jb adc jb adc jle lods mov push add mov ja ficomp negb add pop mov mov cwtl jo add inc jb in pop (bad) fadds mov enter mov insl pop sbb ja and mov jmp dec dec mov ret adc sbb pop cld mov xchg loopne mov loope test les (bad) ja (bad) or aad inc (bad) cmp lods (bad) inc add sbb or mov es cmp xor sbb adc jmp or icebp jbe sub mov adc (bad) ja adc fdivrl je adc pop push js cmp fildl lock or dec cmp jne lods mov add loopne mov arpl inc or add add mov cmp or pop sbb mov inc pusha dec jmp push or or fisubr and hlt sbb jg lea aaa fdivs cmp rclb pusha pop orl xchg imul icebp sahf dec and and add loopne js push mov adc ret pushf inc rcrl insl cld sub test xchg (bad) push aad jne test jne movsl jbe loopne test or mov testb fldl mov jb clc push adc push adcb repnz sbb mov pop xor or sbb call fsubrl mov int3 lret fdivrs or sarl inc push (bad) mov pushf adc stos lock pop mov out call push sub notl mov pop mov loopne adc dec push call faddp fcmovnb and mov sahf xorl movl xor add (bad) add mov (bad) aam mov push cs inc fimull je sub cmp sbb and or xchg push pop popa mov mov addr16 test mov jg jmp adc sbb add mov sti adc fcomps inc in add cltd mov lds pop cmp je mov adc jmp sbbl xlat (bad) ss or (bad) jmp and or mov mov mov ljmp ja es mov je jg inc jnp jb cmp ja add cmp or (bad) divl dec jne outsb fwait mov fwait mov mov push clc neg bound and sbb rorb add jmp pop js ret in je or pop imul cmp test xor add in dec pop cld push pop dec pop std aad fsub push cmp add jae adc cmp addl push dec shrl push bound dec lea pop inc dec ror or int jmp add jmp (bad) mov pop or (bad) cmp add or adc jae das subb daa arpl arpl and or inc inc push xchg mov xor (bad) lock shl testl or lea adc or adc lea clc scas sub add cwtl lea insb sbb shrl fiadd add push mov mov idivl insb roll inc inc inc mov push insl imulb lds call sub and xor (bad) hlt adc xor inc sub push or and add rol arpl movsl pop jno ret pop loopne aam into push pop cwtl scas add pop testb push jbe cmp add pop adc imulb or sub bound ljmp aaa test notb xor pop aam push push cmp and jnp sub mov cs cs movsl jo inc sbb xor mov mov pop mov inc jo rcrb xor push roll stos pop cmp mov pop out mov adc xchg sbb xchg xor adc das dec aam enter inc jmp adc (bad) add clc xor fsubrs mov outsl dec inc cmp mov push rolb sbb push cmp push addl and movsl mov les popf inc xchg subl cmp sub je push pop sti xor mov sbb or pop sahf addr16 clc xor inc push shr push fwait sub pop into notb push mov jmp ss or sbb add sti (bad) push add fild jnp out xor adc cld je add mov or clc or testl scas mov adc outsb adc nop jne or and mov pop roll loopne je cld pop inc mov jge out mov pop nop addl xchg add mov ss add aam outsl setp les inc idivl psubusb or icebp sbb mov fbld data16 les push aas jb inc and push nop adc int js inc push inc dec jae adc call fwait out mov popa inc scas add ficompl cmp or pushf mov xchg cli cmp xor repnz inc in pop dec push imul orb lds xchg mov pop stos cld push and add xchg mov push scas mov xor pop or sub idivl (bad) loope push add pop adc add sub push test dec arpl mov loope inc (bad) out jne out nop jmp scas (bad) popf and mov dec xor xor and mov sahf loopne sahf add or idivl and adc sbb jle out fs push mov inc fisub ret ret or xchg adc pop icebp push xchg mov inc popf adc sub addr16 xchg or adc adc cwtl adc (bad) or ss inc pop or inc sbb pop es enter sbb cli sahf pop or ss sbb sbb mov add daa cs pop sbb loop clc loopne imulb sbb pop mov cmp push testb stos add or inc mov bound ret test adc mov sbb xchg push sub idiv and (bad) aad sub jmp lock fsubs icebp pop jle add pop push mov daa fcmovnu mov sbb imul scas mov aaa lea ds or add aad adc in cmp pop push mov notb inc fiadd pop jg jle int and inc adc jge arpl mov xor xor jge mov jns movsb test aas push mov nopl sbb mov dec inc fmuls les mov les jo sbb mov dec push pop mov sbbb lock push cmp xlat xchg pop and pushf mov pop xchg pop and iret mov jbe xor ljmp pusha pop sub movl adc test xchg inc adc rcrl cwtl stc mov xchg in or push add movb push jge fnstcw mov leave into cltd leave push imul push xor cmp mov fwait ret mov push pop loop jne push pop inc jg inc (bad) in push pop in add loope mov inc mov or mov ret inc xchg jo inc (bad) fldl2e cwtl sub sbb movsb lods out popl mov leave push repnz in fdivrl orb dec mov movb es push and nop inc sahf cltd pop jl leave push lea js pushl xor sbb push sti enter push adc and and and jp add or je ret push ret fcoml pop dec movl pop dec or add or jno mov xchg aam std push imul cmpsl jbe (bad) shrb mov xor fs xor in push push mov add scas aam jle add sub mov ja lea rep xchg or sub inc inc dec lock stos call mov push or pop pop rcrb loopne mov std add fcoms sbb sub add sub xchg sub fdivs lret and pop adc cmp add daa pop repnz jno mov jo orb rclb pop arpl push push push fsubs add out fimull adc add lret dec cs add pop adc xchg adc adc daa xchg xchg pop push hlt inc or dec push dec and inc or data16 cmp push pop push xor lcall dec add stc std push pop adc xor sub out iret testb add add cmp sub push pop pop or sti lods fdivl xor pop mov add pusha push pusha add jo js pop adc out sbb push add add jne insb add jbe in movl scas test pop mov cld push fldz in mov imul insb pop jb leave lds aaa sub or xchg outsb hlt pop clc insl inc pop gs mov outsb out or jno stc jno jb pop mov dec dec inc inc dec pop dec inc inc push pop push inc dec inc inc push inc inc add push inc push push cli ljmp xor outsb je insl and jb jb sub notb push pop nop jmp push add dec inc add in notb push xor cmp sub std in bound and imul push sti stc data16 daa aaa outsb outsl je add cmpb jae popa arpl data16 outsl ja cmp in (bad) outsl outsb aaa ss and jo jb jbe fldt in jb jne xor or insl or bound pop xor sub fisubrl gs das pop push fsub pop fwait sti ret cmp outsl jo pop xor subb pcmpgtb arpl cmp ret inc and gs nop jl and insl lcall push outsl arpl mov ret fs outsb lods mov and add popa imul addr16 insl and ss mov cmp inc lahf imul sub sub adc addr16 jae mov (bad) xor shrw (bad) outsl add je adc dec movq lods sub push imul icebp sub and dec imul mov sbb sub adc popa xchg lods jno ret add loopne sub insb ja jg,pt jl hlt mov daa mov inc gs popa ds into fimul ja jbe push mov xorps (bad) jae popa addr16 outsl js xor xor xor fs dec cmp int lods insb sbb add dec and jns inc out int xor fs push test mov lret bound mov fldcw or outsl or jo adc rcll inc dec data16 testl iret imul arpl gs jne fidivr cmp addr16 push push mov inc inc aaa jns aas mov push mov fs jbe cmp push pusha lods xor jl push jne pop stos pop jecxz add or fidivr mov daa and mov adc pop es lds nop xchg into cmp pushf sahf movsl lods mov rcll jnp add inc mov lock xor mov test jb xchg (bad) mov outsl or mov repnz mov add adc xchg pop fwait xor push cmp jae lahf xor sub int3 push arpl mov mov adc add push xor add rolb cmpsb jmp nop add sub adc sbb inc push adc add pop pusha xchg xchg mov ss pop enter data16 inc lock adc and pop test lret aaa dec mov inc pusha mov push mov sbb dec pop mov aas pop pop dec mov mov ds inc add clc lret enter dec pop lahf cwtl mov lret jg xor sub test mov sub inc jb adc xchg frstor jae or xorl pop sbb mov dec cwtl or loope push ss xlat andl loopne mov enter int3 sub daa cmp jae in and add pop jbe mov mov push push jl and leave xchg pop repnz mov int3 push mov test or dec nop mov push sbb jo xchg inc adc mov imul pop jle add jl inc cld or cmp cmp test jmp js add gs gs push push andb (bad) and inc add adc cs pop sub or pop dec shl les dec (bad) xor mov insb xor (bad) xor push inc cmp imul cmpsb imul fistp imul jb jae cmp sbb in fdivr mov imul imul stos addb je outsb push (bad) fucomip cmp jns outsl outsl imul jae arpl rcll gs or jbe das push clc jae outsl jb cmp pop insb fnstenv insb insb jns repnz jae or lahf outsl ss in pop sahf js xor sub or and and xchg gs or jmp lods sti fildll jne push jb jbe addr16 push fstl stos gs pushf stos aas push sbb inc jne jb push push jecxz fs pop xchg pop ret pushf push popf dec nopl mov fwait xor dec jae xor xor outsb sti xchg ljmp dec dec dec add leave mov pop pop loopne add pushl dec daa out dec cld xor je nop xchg mov scas mov lods test stos mov push mov push fwait push push sti psadbw ss inc jae cmpsb add pop roll mov fstpl stc out inc rorl test pop (bad) xor sbb jb fst imul ss cmp pop cmp aas sahf xchg stos nop mov mov push dec fstl jge out pop mov dec insl xor or xor repz add jl mov dec or xchg and dec sub pop inc enter add fnstenv mov dec subl stc push mov nop out inc pop lods sti cmpsl test mov sbb and dec fnstenv mov adc cld pop daa or xchg mov push jb fsts and pop mov add mov pop adc inc fwait xchg xchg lahf jnp in or leave in jg out lret mov mov insb mov mov inc repnz cmp mov out fisttpll or (bad) in pop or insb mov pop jae mov insb int3 adc fsub jns lret (bad) pusha dec fimul inc jnp mov inc push lcall mov insb inc pop push pop sub fidivrl sub mov ja jno mov call add leave mov leave cmp xor push jb ja insb jo jecxz adc push pusha adc mov pop mov outsl xchg dec (bad) sbb cmp mov fisttpl movsb sub mov dec repz lods cmp call insb (bad) mov outsl test or xor lods jae cwtl push mov pop mov mov jmp outsl cmpsb fdivl and push out sbb outsb imul test js sub mov jnp jg fnsave xor lret sub inc sub lret cmp jae dec addr16 cwtl mov dec mov sbb cmp sahf push push sahf imul push dec xchg out pop inc mov shrb and push int3 ret pop rorl add push fldz in insl cwtl (bad) pop or jns mov arpl insb cmp shr or daa call mov mov and push test jae or lods mov lret nop orb xlat ss mov fidivl movsb das adc mov push in mov xchg mov xchg imul and xchg mov xchg mov xchg mov jo icebp and cwtl ss pop xlat push jl xor aas inc lods loope in test lret cmc cld maskmovq divl aas sbb mov mov mov inc sti pushl outsl inc or mov lret sub popf cmp sbb clc arpl mov stos dec inc push mov jbe sbb dec sbb test int xchg push out fadds int push rorb dec cltd lcall sahf ss xor (bad) add nop and flds jecxz xchg test (bad) out dec (bad) push add enter repz int3 repz pop iret (bad) mov adc push push mov lcall fstl fwait inc add cmp mov movsb sbb data16 gs jo lds push out insb ffree popf xchg adcl xor or pop sub or xchg xor insl pop jb cmpsb xor xor aas lret and mov daa pusha loopne pop add or push mov sub xchg mov add mov push xor call cmp lods adc dec push fcomp inc loop (bad) pop lea mov movsb adc add insl enter dec test sub cmc mov sbb jbe mov dec xchg dec push test stc sbbb ret imul xor jg (bad) or rorl adc lock or sub or cmp xchg dec gs jnp inc jo mov push mov xor inc nop enter (bad) enter pushf adc hlt adc adc add jmp jnp (bad) ficom push das push test es std mov and cmp mov sti mov push lret sub in je popa adc jo popa sbbl hlt jle mov mov lret jns fldcw mov bound mov outsb in andb hlt xor or push push mov mov invlpg xor mov dec pop jg cwtl and in enter bound cmp and push in pop pop xor add cltd pushf pop popa jo ljmp in push push insl add je imul imul dec (bad) jne xchg pop test pushf je imul pop imull jns jnp push scas mov push andb push gs xor dec std in dec lahf mov xchg mov mov mov dec fwait xchg mov sti mov mov mov ret xchg das jne mov lea fstl pushf mov and fisttpll mov outsl dec xchg mov mov mov insb xchg jne inc mov adc cmp or pop mov xor add adc cwtl ja outsb fistpll xchg mov nop fwait lods je scas stos std outsl (bad) mov lods xchg xchg mov sahf mov into sti btc push jle or dec mov xor outsl jo mov lcall out fsts addr16 sub jg dec adc dec addr16 xchg mov addr16 push add mov fwait sbb pop nop lods (bad) dec add outsb loopne addr16 lock add add cmp cmp lods loope mov je add mov mov imul mov xchg sbb jne sbb mov lods sbb int repnz add pusha jge dec arpl inc push pop jg (bad) (bad) (bad) (bad) js js js js js js js jge jge jge jge jnp jnp jnp jnp jnp (bad) (bad) (bad) (bad) jnp jnp jnp jl jl jl jl jl jl jl jl jno jno jno jno jb (bad) (bad) (bad) pushl jb jb jb jb jb jb jb jb jb jb jb jb jb jb jb mov mov jg dec pop nop lds jecxz cmp test add pop mov int mov pop push je jae arpl and ja bound fcompl jmp jg inc dec push and fs mov sbb repz out (bad) mov add jl repnz pushf xchg js clc outsl mov icebp sbb fildl xor stos jns lret ret into mov arpl push inc dec jmp (bad) mov (bad) icebp mov add add add xor xchg in add or adc fstps pop add lea daa sub jne mov mov push sbb adc push movsb or gs lock nop jmp mov pusha jb,pn fmuls xor inc and addr16 push repnz cs lods (bad) sub xor call sub icebp (bad) dec adc ja in mov test or push push push xor call cwtl pop mov mov stos sub xchg mov add or and andl rorl xor test (bad) or enter mov mov sbb (bad) jb fldl push push pop push stos mov or jno lock add adc or call sbb push push dec sbb jecxz divl lcall push push xchg push out out ja add push call (bad) add and jmp fsubrl fsubrs and gs inc ret cmp inc add imul cli fwait xchg xor gs mov mov sti call inc add jb fldlg2 xchg mov or sub insl imull inc mov sub dec mov cmp sahf or arpl adc jmp pop adc adc push sbb std sahf sbb xor push aas xor je pop mov sahf xor sub mov lcall ds insb ss push inc pop inc and popa and lret lret rolb pop push cmp push adcl mov js inc or stos fisttpl mov inc push push call mov mov push push pushw outsl cmp and call pop les test push call fcomps or push and pop gs mov jbe push inc aam push jo push inc sbb popa or adc jle mov add sbb jle inc mov push test mov dec jns xor sbb push test mov push enter push xor and and cmp push cmp sbbl or add push shll mov push movl pop cmp int3 push inc or inc cmp fistl xor inc jge xchg push cmp push daa idiv sahf or repnz pushf and test fcmovnbe ljmp addl add mov dec sbb das and cli xor dec das inc push mov xor test mov insb inc push push fcmovu sbb add dec aad push push outsb shrb sub dec jg jnp test dec or xchg mov sti aad rclb or mov and sub xor aaa mov inc loopne lea inc sbb sub mov jge pop adc add adc cmp pop or sub or cs mov pop mov sbbb je jecxz sub adc cltd repnz int3 and repnz fcom sbb js adc inc scas mov xchg sub push out mov arpl lea fisttpl xchg add sub mov or enter mov and mov or cmpb push dec dec test imulb pushl sub inc lea push cltd sub (bad) ja pop sub and ds xor add xchg pop jo and mov mov imul sbb movsb adc xchg xchg lods mov or or (bad) or sbbb push cmp pop mull xchg sbb or sub mov inc test or and (bad) cmp mov xor dec add sti insl dec loopne jne stos in cmpsl pop mov dec subl dec pop outsb sbb mov inc adc rcrb inc out rcrl sti inc and push mov pusha pop sub mov insb je js xor xor addb nop xchg cwtl pushf dec mov xor test add (bad) xor clc add adc fstp cmpsb imul bound jbe dec (bad) je adcb rol rcr repnz inc jmp ss add xor aas je add cmpsb imul imul jg mov mov push xchg and adc xor inc jnp pop push or push jns add gs outsb fs inc adc mov or fs add loopne add movsl ljmp insb add jnp arpl sbb jo xchg loopne sub js cmp sbb or cmp inc insb outsl jae dec popa insb (bad) push jnp push adc mov popa inc sub leave popa lock (bad) mov or insl insb outsb dec inc push dec inc dec stos pop addl lret add push add lods fnstsw cmp lock inc or neg mov dec pop pop pop cltd mov add pusha mov jo pop imul aad add clc addr16 sbb insl stc sbb jae mov mov stc popf adc push shlb mov imul outsl insl in in fs movq addl jo je jo mov sub jp data16 push xor clc popa add and or loopne push test add mov and jne and sbb mov cwtl out (bad) outsb lcall jb add add add adc loope repz xlat mov in pusha ljmp mov add mov xchg arpl insl jo push adc outsb adc ljmp rcll cs pcmpgtw imul or imul pop and xor movsb imul jb je sbb push je je test loop popa jae cmp cmp ljmp add js inc fs ss test rorb mov inc add add sahf add add and add test fs push adc inc adc add jmp add pop cs imul pop or dec ja add add add xor rcrl add xorl add fmuls sbb push cmp sub cli adc add dec adc and sbb push xor push sbb push pop push pop cmpsb sbb jnp pop insl stos and add jb das push sbb mov pop (bad) pop sbbl xchg sub mov mov push mov into pop xlat or cmp sbb jae int mov pop rorb add rorb xchg lea mov nop enter xchg xchg xchg xor and lahf js inc adcb lods (bad) ja inc (bad) or xor jge xor push or or lds mov imul or jnp jmp sbb sbb imul mov jns ret jp cld add dec shl call fisttp repnz add adc push jne icebp inc and mov add add add xchg or lock add fnstcw pop add inc inc xor repnz and cmpsl jge or add mov pusha (bad) jns leave mov add cmpsb fild mov sti sbbl shll sub incb inc orl mov inc mov and ja iret mov in call (bad) xchg fucomip ds add pop pop fisubrl xor fsubp stc cmp jle xor sub or and fnstenv add (bad) cmpsb imul imul cmpsb imul imul cmpsb jmp dec inc cmpsb imul push cltd or push xor jbe pop in cmp jg dec test repnz das arpl inc sbb push inc aas adc out mov orl int cmp pop js mov gs xor repz xor je insl insl add cmp pop ja (bad) xor xchg mov repnz xorl in enter push push roll xlat inc inc pop push pop push jg outsl imul out inc sbb pop push addr16 and outsl jne add outsl pop jb outsb addr16 test mov outsw sbb add or stos mov fs insb shrb add gs add mov sbb leave add imulb loopne push stos adc imul orb das dec bound cmp jge (bad) jbe push imul dec je jb gs inc adc xor push outsl outsl insb sbb mov xor jo push xchg mov (bad) xor mov insb mov movsl xchg mov push out add popf fs mov mov mov fiadd add arpl add fstp and pushf adc ss jo pop add out insl sbb push in jo inc daa dec js ss inc xchg add and pop adc iret or add dec xchg sbb pop gs js push dec push inc jne pushw adcl neg mov xor dec inc dec inc push or mov (bad) dec jae xlat inc imul negl or cmp add mov pop cmc push rclb cs adc outsl sub je ja lcall in out dec outsb cmp dec or pop mov popa int3 gs int3 (bad) insl dec test xorb jo stos inc dec insl pop add scas dec xchg int lcall dec push inc jo or (bad) testl or test xchg or inc sarl dec push jbe push imul scas int inc jns jge popa sub aas inc dec popa ret xchg pop inc or or lods push sub and pop loope loop or and inc sub inc pop fwait jb sbb fcoms mov pop push push mov ret xchg push and add push popa test push popa mov (bad) inc mov shrb or or mov or or (bad) mov mov xor xor test or aam outsb ds movsl or cmp dec out xchg (bad) dec gs test (bad) pmulhuw xor pop mov icebp mov inc and pop in and jae jge out push ss add jge insl add int repz xor mov add adc sub inc fstps push lea adc adc dec (bad) or add in or imul xchg xchg inc (bad) jns add es xor lret (bad) inc push xor add dec add mov cmpsb addb xchg xchg push sti sbb stos lods insl loopne jbe lret pop ret mov add add cmp add dec add incl pusha mov lea push jmp nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jae xor sub jb shl mov inc xor je mov add jne mov sub adc adc add jne mov sub adc adc jne inc add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp nop mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp 