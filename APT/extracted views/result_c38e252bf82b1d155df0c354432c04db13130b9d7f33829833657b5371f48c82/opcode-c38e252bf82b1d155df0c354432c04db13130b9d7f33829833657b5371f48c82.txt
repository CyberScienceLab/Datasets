inc cwtl adc xchg pcmpgtd or data16 push xor bound mov inc or data16 or je or pushw add pushw add data16 xchg pcmpgtd outsl push ljmpw fwait or xchg xchg push inc push or data16 mov pcmpgtd or xchg pcmpgtd inc push data16 mov pcmpgtd femms adc lea sub xchg mov pcmpgtd add dec insb push add outsb add test data16 xor adc dec push data16 ja mov mov lcallw lea dec mov pcmpgtd insb push in out push inc xchg pcmpgtd fisttpll data16 imul scas lahf or add add add or movsb push add add add mov (bad) dec add and jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp push call add add add xor add inc add add add add lret rclb insl dec movsl loopne cli push or add add add inc outsl outsb popa jo je insl outsl jo push add add and pop add add sbb add pushf sbb add xor inc add add add sbb add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add sbb jl dec add add add and add add add inc add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add and add add add mov inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add dec add add add and add add mov inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add nop dec add add les inc add adc jl add add add push inc xor add or or add add add push inc add xor add (bad) decl add add add add add add add add inc add inc add add jg add mov add mov add pop imul outsb gs je gs add inc outsl outsb popa jo je insl outsl jo add add push add add inc lcall add xor add add add add add add add add sub dec add add add frstor mov test dec test int sub jmp add add and or add add mov add add add add add add addr16 add (bad) (bad) incl add add inc add dec add add add and add mov add inc sbb add add add add add add add add nop adc mov push adc dec add add add xchg nop add add add pop add add nop sbb (bad) (bad) (bad) incl add add add add xchg add (bad) (bad) incl add add adc inc add inc add inc add add add add add push dec add add or inc add nop dec add add add add pushf nop dec add dec add (bad) (bad) incl add add test inc mov mov xor add add add add sbb inc sbb or add add add add add add add inc add (bad) (bad) ljmp sbb add sbb add add add lea (bad) incl add add add adc (bad) pushl add inc add add add and add incl add add add (bad) ljmp push inc add add add nop dec add add add sbb sub add add add (bad) incl add addb add add sbb inc add (bad) (bad) lcall and add add fs dec add add add sbb (bad) incl add addb add add push adc (bad) (bad) (bad) lcall and add add je dec add add add sbb (bad) incl add addb add add in inc add (bad) (bad) lcall and add add test add xor inc add incl add addb add add push arpl jbe add jae imul jb jo gs push jne gs imul add add addr16 jae gs imul add add outsb popa jo je insl outsl jo add add dec dec lds (bad) cli push mov xchg and mov adcl lcall add xor adc enter sarb dec lods xor or stos add xchg inc outsl jb add add cs push add xor inc cmp outsl addr16 insl and insb gs sub sub arpl jae data16 push imul je imul pop push inc ss dec inc add add test inc add add add add add add add sbb in dec add lea add xor or stos add xchg dec jo imul je outsl outsb add je outsl outsb xor imul lods xor or stos add xchg dec ja imul add dec lods xor or stos add xchg push jb jo jb imul add repnz lods xor or stos add xchg inc outsl insl insl popa outsb xor add add dec lods xor or stos add xchg inc outsl jb imul add imul add insl insl popa outsb xor add add insl insl popa outsb xor add add insl insl popa outsb xor add add dec lods xor or stos add xchg dec outsl outsb imul jne xor add bound xor or stos add xchg inc imul popa je add jl (bad) mov inc shrl je ds push jno hlt or movsl mov pop lds frstor mov test dec test int sub jmp aad mov dec mov fnsave add inc push dec inc dec xor cs dec dec add add adc add inc outsb jne push dec dec popa outsb addr16 addr16 add add or add inc add imul xor add add adc add push add jns push popa add imul add add test add add call add add add add or je jmp push mov call jmp add add add add jb gs xor add add adc add inc gs jne jb outsb je jb arpl jae add adc inc add add hlt xchg dec add or je jmp push mov call jmp add add add jne gs outsb jbe fs insb add gs insb insb push jae jb push jb imul arpl jns add add insb sbb inc add add add add add add mov or je jmp push mov call jmp add add add add je gs jne je jae jb jb imul arpl jns add add sbb add or dec add or je jmp push mov call jmp add add add add add add add add add add add add movsl push add add add add add add add jne jbe popa add add add add add add outsl add insl add je add xor add add add add insb add outsb add add add add add mov and push add xor and push add xor add add lods push inc add add jns lods xor or stos add xchg adc add push add add jo bound imul cmp add add push add add outsb add js imul bound insb add xor add add jne bound add popa add add add add add add insb add add arpl imul add inc add arpl imul add insb add jb add push add outsl add add add push inc inc ss dec dec add add pop pop jbe popa dec bound popa jb pop pop jbe popa dec popa je dec gs inc popa insb insb add add pop pop jbe popa push gs jns je insl inc jb outsl jb pop pop jbe popa push popa jb popa je dec gs inc popa insb insb dec add add jbe popa push popa jb jae inc je add pop pop jbe popa dec outsb push je add pop pop jbe popa push popa jb gs bound fs data16 add pop pop jbe popa push popa jb jae dec add add jbe popa inc jb gs bound add add dec add jbe popa push popa jb fs jbe popa push popa jb outsl jbe add add pop pop jbe popa inc jb gs je dec imul pop pop jbe popa push jb outsb je bound add pop pop jbe popa dec jb jae insb je push bound add add jbe popa dec gs add add jbe popa push je dec outsl jbe add add pop pop jbe popa inc jb gs popa jb imul pop pop jbe popa dec outsb push je push popa jb add pop pop jbe popa dec xor popa jb add jbe popa push popa jb outsl jo add add pop pop jbe popa inc jb gs je add add pop pop jbe popa inc jb gs popa jb add add jbe popa push je inc outsl jo add add pop pop jbe popa push je inc insl jo or or add add mov inc add add add dec add (bad) (bad) incl add add sbb or add shlb add pushf and add add pusha sbb add add pushf and add add movsb and add add mov add add mov push and add dec add add add add inc add add add add nop sbb (bad) (bad) (bad) incl add add add add inc add xchg add (bad) (bad) incl adc cmp add and inc add add add xchg add add add adc cmp add and inc add add add nop add sbb add add inc add add add and inc add add andb add inc add add inc add add add sbb add add in inc add xchg add add add or dec add add inc add add add inc add xchg add add add adc add inc add add mov inc add xchg add add inc add add add mov inc add add add es add nop add add add or add add push daa inc add nop add add inc add add add push sbb or add pushf daa inc add xchg add add add adc pop add add add add daa inc add nop add sbb add add add add mov inc add add add sub dec xchg add add add adc add add add add nop add sbb pop add add add push sbb push add add sub push sbb push add add adc insb add add add add inc add nop add inc add add add push add add or inc add add add inc add nop add inc add add add add add inc add add inc add inc add and and inc add add inc add inc add and and inc add add inc add inc add inc add inc add add inc add inc add add inc add add inc add inc add add inc add add inc add inc add inc add add inc add inc add inc add add inc add inc add and and inc add add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add inc add add inc add add inc add inc add inc add add inc add inc add inc add add inc add inc add and and inc add add inc add inc add and and inc add add inc add inc add int3 xor bswap inc lcall add xor dec lds (bad) cli push mov cmp xor or stos add xchg mov add dec add add pop add arpl jbe add popa jae je add add inc add add (bad) (bad) (bad) jmp add jae je add popf adc add pop add inc add incl sub add add add je outsl outsb cmp push add add je outsl outsb cmp add fmull add add add add pop add je outsl outsb aaa add add add je outsl outsb aaa add mov or adc incl sub add add add je outsl outsb add add add je outsl outsb add xor add add add add add je outsl outsb xor add je outsl outsb xor jle lods add add add add add insl insl popa outsb xor add or inc outsl insl insl popa outsb xor add adc add pop add add add add or inc outsl insl insl popa outsb xor add or inc outsl insl insl popa outsb xor add or or adc or incl sub add pop or inc outsl insl insl popa outsb xor add or inc outsl insl insl popa outsb xor add or movups add add add or add insl insl popa outsb xor add or inc outsl insl insl popa outsb xor add or mov adc add add add or add imul or lods movq or or add incl daa add add add insl xor add or inc popa outsb je imul add or insb or adc add add add or add imul or add lahf add or add add add add jo jb imul or push hlt or add or incl daa add add jb imul add add sbb fimul mov push adc incl sbb add push add imul add or add incl and add ud2 add addr16 je insb popa je add add adc or or add int3 xor add and test int sub jmp (bad) mov inc shrl je ds cmp xor or stos add xchg enter ret cmp add or push jb jae imul add add data16 xor inc add mulb or insb je add and add add and add add add add add add add add add add add add add add add add add pop and (bad) idivl mov xor (bad) movsl inc jnp dec in daa xchg insb out pop aam rcrb sub lods std es add ret push out adc jns (bad) mov and xchg jae lea mov fmuls popa leave sub std adc cli in out inc ss scas sub repnz xor add stos mov sbb stc jne mov pop orps cmc pop iret pop xchg cmpsl bound xor mov jbe nop scas mov xor ss sbbl and lret das or stc push loop xlat ficompl cwtl push pop jo adc sub leave out mov idivb andb adcl ret dec add xchg addr16 shll mov lret cmc inc push sub dec pop pop dec mov mov mov lahf or dec lcall ret test scas add mov cwtl je imul out test fwait lock or into xor cmpsl (bad) repz adc mov dec jecxz testl mov or fdivs pop push ds xor lahf cmp gs loopne pop adc push push pop addr16 cmp out pop lods fs push inc repz popf stos cmovae fcmovbe jle ljmp xor jg mov sub (bad) xor xlat sbb pusha push and rcll cmpsb inc clc movsl popf outsb stos mov adc mov insb inc es add mov (bad) stos popf and std mov jns outsl ret aam cs fidiv sbb in sub ret cmp or fisubl pop push mov insl add mov out and dec roll test jb mov divb cmp in loope cmp scas push repz stc nop mov inc inc jecxz (bad) ss mov sahf sbb iret clc and cmp push and or add jl hlt scas jo out cltd add add pop adc (bad) enter sub or jge dec sub and addb fildll mov pop iret push jmp xor lret mov mov mov sbb xchg inc pop or xchg lods cmp cs dec xor fildl inc dec push repnz jmp push dec aaa repz sub outsl cmpb sbb (bad) sbb dec push sbb (bad) xchg loope shl lret cmpsb pop jbe (bad) imul pop adc cmp push mov mov push adc mov loope cmp mov mov jl and adc pop gs div sahf xchg push dec sub roll fstpl insl pop imul cmp popa push flds cmp mov sub fsubrs add push test inc and ja xor (bad) jbe pop mov or adc mov mov mov mov sbb (bad) jl cli push mov push (bad) das in mov fwait out fisubl daa out outsb push arpl test (bad) scas inc cld pop in fnop aas neg jp jmp scas mov pop cmp push adc mov push adc add les out fs call sub lock dec fnstcw dec das push lds cmp pop jno jl hlt or inc and sbb and sub dec mov clc mov mov and fisubr adc add xchg dec cmpsl xor sub outsb inc out aad sarl pop mov test inc pop dec jmp adc push nop lods or sarl cmp mov iret xchg test (bad) cltd mov sbb repnz jb jecxz xchg mov arpl in fwait adc inc mov pushf sbb jno sbb push icebp test dec push pop cmp push xchg sbb mov ret mov imull sub pusha int3 mov push lahf and cmp mov xchg mov popa fldenv mov stos or push sub mov mov test lods sahf rorb and in mov aam jb mov sub call and sub imul popl lods dec xor mov adc jge leave xor push push (bad) dec jne in push mov mov sarb cmp sub imul jb inc (bad) xor les fs sbb icebp out ret jmp mov ficoml or add scas mov xor cmp add imul addl dec test mov mov pop sbb mov pusha adc xchg add inc enter inc and add out push pop xchg and bnd jae fcoms mov rcrb imul pop dec mov sub pop dec dec movsb xchg adc xchg mov mov daa inc xchg loop shl (bad) arpl inc sbb out pop mov (bad) pop aam jmp pushf jns outsb mov fmul push mov shr in push pusha mov pop mov push aad lock jecxz lcall sbb adcb push pop gs fs cmp cmpsb cwtl xchg jge rcrb je (bad) add mov imul pop imul insb ljmp pop and pop cmc lods lds inc cmp repz mov and (bad) movsl xor add inc outsl cltd out mov inc cwtl push cmp repnz imul (bad) xor insb jne push mov stos mov in mov inc pop into scas mov sub mov aam mov add mov fnstenv mov sub cs xor cld movsb (bad) icebp std (bad) pop cs jae or lds scas inc mov cmp dec xor dec xchg adc xchg shl ss add ret lds jae outsb mov movl les inc pop ja (bad) (bad) popa std or mov add fildl addr16 pop xchg xor xchg mov lahf mov jle les xorl hlt lcall jle sarl inc test jmp mov dec inc sbb pop inc movsb adc xor in push inc enter push scas imul pop mov mov jp jg dec lock fdivrl int3 les out out push repnz ffree int3 fdivs (bad) stc mov lods jmp mov std mov and inc pop adc inc call xchg movsl mov mov pop stos cmovae cmpsb ja pop nop jle out jne enter jp movl push adc loop xlat jge movsb cmp sub push in movsb xchg mov xor adcl loope adc mov and fwait mov or gs dec ljmp or sub inc fs out cmp lods scas jmp cmp jae leave sbb (bad) lods and fninit stos mov addl ret mov enter outsl icebp scas and outsl dec out mov loop mov pop imul jne jno add cmpsb js xchg add loope xor push xchg inc das popa adc push mov xchg int cmp mov call mov stos push outsb mov lock roll and gs cmp adc pmaddwd mov push clc jle pop loop xor sbb bound mov or jge xor ss ljmp (bad) mov (bad) mov inc jmp adcb orl pusha fs shrl inc popf adc aam inc fcoms lret add xchg adc or dec pop mov aad jp outsl gs jb sbb dec out into pop call in sub lock xor pop mov sbb xchg or add pop (bad) ja sahf out jg lock mov pop pavgb cli push ret movsb add jle ror in loope fdivrl fxch push mov mov add daa adc popa es sbb mov push mov insl int3 jg ljmp data16 xchg (bad) xor mov sbb imul push cwtl lahf lods out fildl sub daa mov xchg dec mov push icebp add das sub cmc aas lret mov sub enter popa scas aam adc pusha sbb cmp std addr16 sbb or scas xor mov ljmp int push fidivl call test les xchg xchg xlat add js push (bad) sub into inc ret sbb addl pop sti inc lds std (bad) push out mov pop mov jl push push and mov dec xor inc and push sbb xchg sbb mov scas push mov cmp leave mov fs and mov xor aad jnp stc add cmpsb enter leave cld ljmp jmp out xor sbb (bad) rolb mov pop xchg adc jns ljmp (bad) mov cmp sbb xchg push pop cmp xor lahf xchg dec jo scas movsb std mov adc lcall into sbb outsb std or push sbb out call jp mov jo pusha sub clc cld mov mov ss inc adcb movsb pop notl cltd popa fild repnz repz pop std insl and dec fsub loope stos hlt lds ficom sarl in pop gs enter (bad) icebp repz cmp popf daa (bad) divb cmc pop add imul aaa jecxz lods movsl xor (bad) jo loop out imul jne xchg inc mov xchg lret (bad) idivl imul jp enter adc mov add cltd dec fwait mov xor inc sub stc (bad) clc lret iret (bad) cmp dec test dec rcrb arpl inc cmc mov pop jp inc das jne inc ret pop std test std (bad) xlat add push push (bad) push adc int3 xor clc lahf jle cwtl pop ret cmc jecxz push fiaddl jl inc (bad) sub sbb lret mov push mov sahf lea mov xor mov stc rorl inc xchg js mov pop popa pusha mov imul lcall mov add ret int3 xchg cmp xchg and ret pop jecxz push pop push out sti xchg cmp sub mov push adc (bad) jo xor fs lods jp sbb enter dec pop pop add pop xchg jl xor pop in adc and test sub xchg cmp jecxz jnp adc mov and stos insl icebp sbb mov imul inc add and jbe sahf loope iret aad push (bad) and pop gs mov aad jecxz xor imul adc cmpsl movsb js mov cmp mov ss mov enter sti or pop in flds sub cmp sbb cmpsb insl jo inc stc adc mov sub cmp repnz mov or mov les fbstp jno mov mov outsl ss xor ret (bad) pop movd cld or in cmc repnz mov out fisttpll jbe aas ficoml daa loop add stc mov loop sarb imulb das cmp pop mov hlt in mov mov add dec inc mov inc pop cmpsl adc popf (bad) mov xchg lock xchg or int3 cmp iret mov ja les int inc or adcb in pop pop lods test adc dec sub and sub or insb cmpsl mov ret cltd adc mov push cld xchg outsl lret xchg out aad shrb sti repnz sbb ror mov fsubrs movsl and adc (bad) xlat sub xchg or adc pop scas inc sahf mov xor xlat iret mov test (bad) or pop pop jb outsb push mov aas cmp mov scas ret jle (bad) lahf dec adc mov js pop jp in mov scas enter inc (bad) stos dec and pop aaa pop daa out lret ret subl (bad) mov xor (bad) movsb aas mov fisubrl pop shrl adc pusha sub imul jle dec fldcw push mov and xchg jb mov ljmp jo cmp enter std mov sub icebp jo or xor inc (bad) stos mov pop push cmp cs testl push push push jge cmc pop into pop xchg ljmp inc inc (bad) xor lret mov jp sbb (bad) je cmp imul adc jle (bad) (bad) or stc rcrl hlt loop push fcoms sub pop xchg mov dec mov cli or cmp push mov and iret loop popa sbb add cmc test adc push popf add xchg fsubrl xchg (bad) mov daa stos aam dec jno mov std mov fstpl rolb test jne pop fstl push pop mov pop jno xor xchg (bad) popa popf jnp add and popa pop xor jb mov (bad) jne nop push cmp jp movl (bad) cmpsl xchg stc cltd loope or fs test neg movsb jo loop fidivr dec inc xchg imul out into lods ret movl lds dec sbb mov cmc lcall rcrl sub mov mov (bad) xchg jae in arpl push jbe nop or or stc xchg int3 loopne leave mov jle insl das push mov lret xchg jne imul scas cmpsb js dec mov imul sti fcomps das clc push rcrb stos gs ret test (bad) mov jl inc xor inc sbb mov add enter mov data16 and into xor cmc std lds push mul mov jle inc loop das ljmp cmpsb inc mov adc push mov gs rclb push arpl sti inc dec dec aaa adc jge pusha fsubl clc add lahf mov popf nop xchg out push push lret cmp sub aad mov imul xchg mov xor nop les adc add cwtl add xor pop scas jge sbb lret pop dec repz cwtl sbb jle lock pop fstp fsubrs aas punpcklbw dec gs fnsave test cmpsl jp ds mov sub inc adc scas out lods pusha icebp insb mov pop lods cltd ficomp loop dec push sti pushf and cmp or cmpsb mov aaa lcall jbe ret dec incb mov sub mov jne mov in test js ja xchg scas mov in int xor stc repnz mov adc push fs outsl ljmp not pop (bad) lret leave repnz roll or add mov test jbe inc out xor shll (bad) mov dec stc rol push or xchg cltd sub clc nop ja jnp jp xchg adc xchg shl xor std cwtl sbb mov lds pop mov subl fwait jg push ret test shr mov int or jge inc dec inc in mulps movsl adc loope sub leave in xchg sub mov mov dec xor ss dec leave dec mov scas lret mov or push jo xchg lock cmovbe enter push jmp dec inc (bad) ljmp (bad) adc rcl push mov dec xchg adc js ljmp shrb std hlt inc sbb xchg stos adc pop je repz xchg ret mov stos out dec in scas das sti mov fcomp dec and orl mov push outsb xchg pop outsl pop out jmp jns in addr16 or es mov mov dec test jp outsl ret movsl pop bound cmp loopne aad cltd mov sbb outsb pop push sub (bad) insl xchg test sbb in mov cmp test int3 adc lds xor test pop push (bad) jb lea divl mov sub cs lret pop push in cmp stos lods jmp jno (bad) pop out aam jle mov xor or lea (bad) adc fidivr sub imul loopne fnstenv add aas push cmp int3 in inc pop lret mov cmp fildll xor sbb inc adc ds cmp push and inc xchg mov add mov mov mov test xchg inc cmp add push scas in into das inc jne mov and test add jnp push fistp sub pop sub leave or decb mov add orl or ror arpl xor push imulb popa lds push sub xor adc jne sarl popl insb (bad) ds jge leave xchg adc push stos dec shlb adc inc adc cmp in jle pop push cld fldt mov push inc repnz popa mov std mov xor jns in pop rclb es je pushf in jl in (bad) mov adc fst mull shlb xchg scas popa stos xchg mulb jns xchg pop (bad) cmp cli push lret in inc adc xor xchg sub xchg vlddqu xor test jmp aam lret call jae arpl pop sub inc shrb dec mov jge dec (bad) xchg push jbe mov mov je movsl lods mov das mov jb dec xor (bad) lcall pop mov div (bad) repnz adc pop lods (bad) jbe push pop sbb cmp nop ds xor cli jns outsb adc cmp pop mov imul sar dec arpl test cmc sub sarl mov pop pop mov sbb lcall daa addb pop clc inc ret cli ret push in push cmp jl inc ds call repnz insb inc pop mov cs inc jb mov pusha nop sub push lds push decb mov inc or or xor push push icebp rcr inc js lret enter lods sub out sbb clc pop repz sti sub fstl int3 mov push mov pop fcoml adc mov xor fiaddl xlat shrb cli leave std sbb icebp pop cmp jae (bad) adc movb cmpsl in pop jmp movsl xchg mov sbb pusha out pop sub mov push in dec inc xchg push daa stc pop outsb push pop and mov mov ss fnsave inc jge dec out sub (bad) sub pop arpl nop loop in add out add les icebp adc mov daa pop cmpsb scas stos xchg jne (bad) or lea movb iret cld out icebp inc cmp fwait and and out test add mov lock ja mov xchg aas sbb adc jg mull pop xchg test fldt (bad) mov jnp js xchg mov dec fsubrp push xor cmp test andl repz ret mov add and jb pop mov dec or push lret call aas inc jge dec jecxz mov mov pop jmp xchg cli cs aad and movsb int inc push stos sahf divb (bad) push push or outsb xlat push (bad) dec lock push push sub push je cld cmp fwait pop adc fsubl push cmpsl push xor sub push inc lret das addr16 aaa gs pop scas jnp sbb leave lahf mov xchg xchg pop add push pop in jge out rcrb sbb push clc mov hlt pop out xlat fbld cmp fld enter adc sub ja add and xchg and loopne adc es inc push cli fwait and aaa out pop (bad) cmpsl lret jle jmp int test dec outsl mov xchg inc add repnz je mov sub push jbe jne nop lods ljmp mov pop sub push lock bound mov and (bad) lret sub mov xchg mov lods xorl mov inc shlb (bad) mov dec clc mov gs fsubrs mov lcall ficomp xor cld xchg pop jecxz add lahf ds scas cmp or cmp jle cltd rorl mov int3 outsb dec pop (bad) hlt aas inc inc jmp pop sub lahf enter or int and dec pop jge jns imul stc add sbb mov int imul jp lret push or cmp fsubp and lahf outsb bound in mov or push inc jo push sub lret cwtl fs fsts lods xchg mov (bad) xor ja xor push push aad xchg cmpsl stos imul divb (bad) in repnz inc cli cltd sbb dec and (bad) push pop and popa mov mov inc shll test fmuls pop pop inc es mov in jb or fnstsw les call adc movsl fbld (bad) and pop lcall xor es out int3 adc or xor test (bad) or jb mov sub fldt add inc bound (bad) sahf add imul in lock jo (bad) push xor stos jle add icebp mov dec stc jmp xchg dec ror and (bad) cmp push and sar jno jge hlt imul and fsubrs xchg jne nop (bad) mov cmp fildll jae clc xchg sarl jno adc push jle negb lahf xchg jmp nop enter inc inc mov pop mov xchg mov or std fstl and je,pn cmp adc or pop pop jecxz fcomp fiaddl sbb push inc or lret mov inc mov daa inc push loop and rcl int3 arpl ja xchg imull movsl or push sub int3 mov pop mov push test rcl inc aad insl enter ret adc push stos dec shll push imul (bad) jae fidivr sub std and mov push inc repnz popa mov (bad) mov xor mov pop or fstps jne pushf xor (bad) adc fstpl mull add and fldt jmp add sbb sti push psubb push lods lods xor outsl out xchg or lock xor movsb cmpsb lahf jp dec aad lret call je arpl sub shrb mov (bad) icebp mov xchg jbe mov cld ja out gs repz (bad) das stc dec jb dec xor cmp adc movsl fldenv push mov daa adc pop lods push jbe dec pop sbb cmp ds xor lods in aam mov jg mov dec cmp add out sub sub mov pop mov pop pop aam out jbe push fcmove sub lret aas rcrb les outsl jne repz stc inc ret cli ret cwtl sub push jge sarb (bad) sbb sub repz mov pop mov das or test in arpl mov stc iret dec and cmp or push inc or or cltd mov rdmsr sub mov and insb sbb cmp push sbb sub pop jae (bad) push int3 (bad) cld xchg push nop push test dec xchg out aad lret bound pop xlat shrb sti push inc sbb icebp pop cmp jno mov rcrl xor and cmp xchg pop jmp movsl xchg mov sbb out xlat sahf mov iret and ja loop pop das xchg outsb push pop and mov mov aaa nop fnsave inc push rorb mov dec movsl sbb mov jecxz sub das lds icebp dec inc scas addr16 jmp daa and test and mov cmpsl lret jo add cld js mov outsb jecxz fildll cmp jns pop mov icebp jmp pop sahf jg lock jno mov mov xchg add (bad) pand mov push repnz xchg and xchg jbe push mov enter cmpsb pop in les push mov jecxz fsubs pushf dec cmp pop into push xchg cmpsb hlt mov inc addl jb xchg cmpsb mov sti (bad) pop aas push sbb xchg dec stos jp jo xchg mov int3 fnstcw jb or lods iret sbb mov mov cmc fist aam dec enter mov mov jle inc dec fbstp popf les ret mov xor mov das cltd jbe imul int3 push ja mov add test popf icebp add fisttp jecxz ss lahf inc mov adc push loopne lea dec sub stc test jp mov mov or pop cli (bad) repz push aas sti insl icebp xor mov data16 lods add pop imul cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp or pop xchg sti push and mov int sbb (bad) ds add and jae cltd dec repnz arpl push dec jge daa call sbb gs push inc divb orl in decb dec push pop inc sbb and add add mov lret outsl lock mov (bad) jmp aaa mov outsl mov into aas ss jp mov jbe (bad) mov inc jmp std adc jmp fisub sub add outsb push mov btcl repz in fs test dec mov push cmp add add mov mov outsb loop push arpl and ja repnz decb sub pop fstl push scas mov jge xchg mov mov aas sahf (bad) dec ljmp loopne mov add and jae cltd dec push cld arpl add jge daa call pushf rcll out negl add lods sub add mov cmp imul lahf cmp bound push xor pop add jb les ljmp fwait mov movsl jecxz into push outsl push stos (bad) std lods loop jmp jns out sbb mov xor shrb mov mov add add enter cwtl fmull mov sub push in fs in fimul xor jbe into cmp outsb loop push dec ja stc fnsave stc or push ret pop fstl inc scas or imul insl pop xchg mov fwait mov sahf (bad) dec ljmp loopne mov add and add add jae cltd dec repnz arpl push dec jge daa call sbb gs add mov mov cwtl or test lahf cmp bound push xor pop add jb les ljmp fwait mov movsl jecxz into push outsl push stos (bad) std lods loop jmp jns add out sbb mov xor shrb mov mov add nop cmc lds jp add push mov in fimul xor jbe into cmp outsb loop push arpl and cld hlt or mov in add push scas or imul insl add mov mov aas sahf (bad) dec ljmp loopne mov add and jae cltd dec repnz arpl push dec jge daa call sbb gs add mov mov cwtl or test lahf cmp bound push xor pop add jb les ljmp add add inc push fwait mov movsl jecxz into push outsl push stos (bad) std lods loop jmp jns out sbb mov xor shrb mov mov add nop cmc lds jp add push mov in fimul xor jbe into cmp outsb loop add subl les xchg in add push scas or imul insl pop xchg mov mov aas sahf (bad) dec ljmp loopne mov add and jae cltd dec repnz arpl push dec jge daa call sbb gs add mov mov add or test lahf cmp bound push xor pop add jb les ljmp fwait mov movsl jecxz into push outsl push stos (bad) std lods loop jmp jns out sbb mov xor shrb mov mov add nop cmc lds mov push mov in fimul xor jbe into cmp outsb loop push arpl and cld hlt or mov in add push scas or imul insl pop xchg mov mov aas sahf (bad) dec ljmp loopne mov add and jae cltd dec repnz arpl add push dec jge daa call sbb gs add mov mov cwtl or test lahf cmp bound push xor pop add jb les ljmp fwait mov movsl jecxz into push outsl push stos (bad) std lods loop jmp jns out sbb add adc shrb mov mov add nop cmc lds jp add push mov in fimul xor jbe into cmp outsb loop push arpl and cld hlt or mov in add push scas or imul insl pop xchg mov add mov aas sahf (bad) dec ljmp loopne mov add and jae cltd dec repnz arpl push dec jge daa call sbb gs add mov mov cwtl or test lahf cmp bound push xor pop add jb les ljmp fwait mov add js cmc jnp jecxz into push outsl push stos (bad) std lods loop jmp jns out sbb mov xor shrb mov mov add nop cmc lds jp add push mov in fimul xor jbe into cmp outsb loop push arpl and add add stc cld hlt or mov in add push scas or imul insl pop xchg mov mov aas sahf (bad) dec ljmp loopne mov add and jae cltd dec repnz arpl push dec jge daa call sbb gs add mov mov cwtl or test add add addr16 jp push xor pop add jb les ljmp fwait mov movsl jecxz into push outsl push stos (bad) std lods loop jmp jns out sbb mov xor shrb mov mov add nop cmc lds jp add push mov in fimul xor jbe into cmp outsb loop push arpl and cld hlt or mov in add push scas or imul insl pop xchg mov mov aas sahf (bad) dec ljmp loopne mov add and jae cltd dec repnz arpl push dec jge daa call movsb sub shl gs add mov mov cwtl or test lahf cmp bound push xor pop add jb les ljmp fwait mov movsl jecxz into push outsl push stos (bad) std lods loop jmp jns out sbb mov xor rolb stos mov or add nop cmc lds jp add push mov in fimul xor jbe into cmp outsb loop push arpl and cld hlt or mov in add push scas or imul insl pop xchg mov mov aas sahf add (bad) dec ljmp loopne mov add and jae cltd dec repnz arpl push dec jge daa call sbb gs add mov mov cwtl or test lahf cmp bound push xor pop add jb les ljmp fwait mov movsl jecxz add add push outsl push stos (bad) std lods loop jmp jns out sbb mov xor shrb mov mov add nop cmc lds jp add push mov in fimul xor jbe into cmp outsb loop push arpl and cld hlt or add add in add push scas or imul insl pop xchg mov mov aas sahf (bad) dec ljmp loopne mov add and jae cltd dec repnz arpl push dec jge daa call sbb gs add mov mov cwtl or test lahf cmp add add in push xor pop add jb les ljmp fwait mov movsl jecxz into push outsl push stos (bad) std lods loop jmp jns out sbb mov xor shrb mov mov add nop cmc lds jp add push mov add add dec (bad) xor jbe into cmp outsb loop push arpl and cld hlt or mov in add push scas or imul insl pop xchg mov mov aas sahf (bad) dec ljmp loopne mov add and jae cltd dec repnz arpl push dec jge daa call sbb add shl gs add mov mov cwtl or test lahf cmp bound push xor pop add jb les ljmp fwait mov movsl jecxz into push outsl push stos (bad) std lods loop jmp jns out sbb mov xor shrb mov add or add nop cmc lds jp add push mov in fimul xor jbe into cmp outsb loop push arpl and cld hlt or mov in add push scas or imul insl pop xchg mov mov aas sahf (bad) dec ljmp fistpll add and jae cltd dec repnz arpl push dec jge daa call sbb gs add mov mov cwtl or test lahf cmp bound push xor pop add jb les ljmp fwait mov movsl jecxz into push outsl add (bad) std lods loop jmp jns out sbb mov xor shrb mov mov add nop cmc lds jp add push mov in fimul xor jbe into cmp outsb loop push arpl and cld hlt or mov in add push scas or imul insl pop xchg mov mov aas sahf (bad) dec ljmp loopne mov add and jae cltd dec repnz arpl push dec jge daa call sbb gs add mov mov cwtl or test lahf cmp bound push xor pop add push fs les ljmp fwait mov movsl jecxz into push outsl push stos (bad) std lods loop jmp jns out sbb mov xor shrb mov mov add nop cmc lds jp add push mov in fimul add add push cmp lret aas outsb loop push arpl and cld hlt or mov in add push scas or imul insl pop xchg mov mov aas sahf (bad) dec ljmp loopne mov add and jae cltd dec repnz arpl push dec jge daa call sbb gs add add add add mov cmp imul lahf cmp bound push xor pop add jb les ljmp fwait mov movsl jecxz into push outsl push stos (bad) std lods loop jmp jns out sbb mov xor shrb mov mov add add nop cmc lds jp add push mov in fimul xor jbe into cmp outsb loop push arpl and cld hlt or mov in add push scas or imul insl pop xchg mov mov aas sahf (bad) dec ljmp loopne mov add add adc clc jae cltd dec repnz arpl push dec jge daa call sbb gs add mov mov cwtl or test lahf cmp bound push xor pop add jb les ljmp fwait mov movsl jecxz into push outsl push stos (bad) std lods loop add jmp jns out sbb mov xor shrb mov mov add nop cmc lds jp add push mov in fimul xor jbe into cmp outsb loop push arpl and cld hlt or mov in add push scas or imul add xlat push insl pop xchg mov mov aas sahf (bad) dec ljmp loopne mov add and jae cltd dec repnz arpl push dec jge daa call sbb gs add mov mov cwtl or test lahf cmp bound push xor pop add jb les ljmp fwait mov movsl jecxz into push outsl push stos (bad) std lods loop jmp jns out sbb mov xor shrb mov mov add nop cmc lds jp add push mov in fimul xor jbe into cmp add add add outsb loop push arpl and cld hlt or mov in add push scas or imul insl pop xchg mov mov aas sahf (bad) dec ljmp loopne mov add and jae cltd dec repnz arpl push dec jge daa call sbb gs add mov mov add hlt cmp imul lahf cmp bound push xor pop add jb les ljmp fwait mov movsl jecxz into push outsl push stos (bad) std lods loop jmp jns out sbb mov xor shrb mov mov add jl dec in rcrb mov repz pusha cmp leave mov mov cmp dec xor popa mov (bad) loope in cmp adc push cltd (bad) (bad) mov (bad) loope jmp cwtl xchg cld outsb inc mov flds stos mov xor inc out test movb add mov xor daa call sub pop shlb and sub imul in data16 test (bad) push jle pop bound leave je xor mov int3 int push sbb std xor or mov cmp test out flds add popf std leave fdivrl popa and std dec call dec test (bad) shrl cmpsb insb and mov mov ljmp pxor jp cmpsl dec (bad) mov xor or ror push lret je jp clc mov aad xor sbb test cli imul push (bad) out add add or outsb out mov lds dec fisubrl sub pop in mov call mov mov scas inc popf cltd std adc out sbb inc inc dec mov xchg jns mov nop xchg sub jle add sub cmc aaa xor aaa in inc out stos xchg lds icebp mov movsl mov fwait rorb sub sub lock fnstcw out fstpl cmc fwait mull inc stos mov sub mov and int3 inc fisubrl stos jp xchg fmull into mov inc ret lods or pop in push pusha inc jle inc push cmp xchg ss pop arpl test mov jecxz sub ret push fistl int xor arpl xchg (bad) mov cmp sbb imul aas (bad) adc clc jae push (bad) jbe inc mov bound lods mov cmp adc je sub xor cmp jp add or xchg test ljmp cli xchg data16 repnz pushf inc dec cmp push jo mov movsb out sbb push xorl dec jnp nop dec popl mov and adc icebp dec push pop ret mov test cli add mov scas jle mov push mov add movsb insb lahf push in xor cld in faddp cmc mov xor xor dec jp insl mov mov mov pop add xchg in add mov pop (bad) cmp mov (bad) scas arpl xor or stc cmpsl test dec adc sub lcall add imul movsb sub stos pop sbbl sbb mov inc cld std loop push xor sbb mov add sti (bad) dec jae inc jbe push pusha push sub loope inc int3 jo or mov data16 xor fs stos or jmp mov push jb (bad) mov adc adc add pop jp push push aaa icebp mov imull cmp push xchg sub fildll je sub aaa push mov (bad) aaa out ja sbb xor xor dec xor sbb fcompl lods add cli stos les push addr16 scas dec and in gs in sbb (bad) mov add push jne fs xchg shr enter inc mov sbb dec (bad) and mov jno ja add add sar lahf xchg andl inc jle cmp cmpsb jbe push push loop xchg in jnp and jnp mov add sbb movsb jecxz or test xchg lods mov mov out sahf push je dec jmp inc xchg xchg lods ds insb dec testl mov jl xor add out icebp in stos lods or mov (bad) int or stos adc xor sahf pop imul mov shrb jecxz add sarb test sub sub frstor mov aas clc inc or and lcall je sub sarb push sbb jb mov push shl pslld dec aaa scas mov data16 pusha push xchg fistpl add arpl inc imull push mov test push dec mov sarl jl mov cltd cmpb mov in xchg mov mov jns out inc iret repz dec jno das mov cmp or scas cltd (bad) in pop fs dec and sti push popf cmp (bad) or aad mov add loope add jp mov (bad) pop scas cmp lret inc xchg sbb in rorl fsubrl std loop add push and aas sbb fwait scas mov sbb jmp sbb pop iret sbb int jae cltd sub stc mov ja jmp add gs (bad) xlat cmp xlat pop sub (bad) xor push cwtl test and rcrb mov clc cld arpl mov lret test add xchg jl and inc pop icebp movzbl insl and imul xchg dec repnz mov dec lds xor ss mov mov add xor subl vpaddsb dec ds mov outsl xchg push arpl push adc mov in push push add test mov pop rorb pop mov es cwtl aas sahf shlb lahf add add lcall inc jo adc cwtl dec cwtl (bad) out mov or movsl sub (bad) adc popa mov xchg inc mov int3 cmc cmp lods xchg (bad) dec les xchg out add icebp into xchg push les lar dec mov xchg xchg loopne cmc mov mov add mov inc push jb (bad) loop sub and cmp sarb pushf insl out jno xor jb sub mov add outsl or cmp test aad repz mov insl cltd fiadd (bad) hlt aad mov loop xchg outsl cld fnstsw jne stc adc pusha ret mov add fwait imul enter sub mov movsl push fwait into add xor fdivr fstpt or insb pop iret loopne mov inc xlat inc clc sbb mov push lea sub (bad) sub int pop mov outsl pop and pop push cmpsb imul mov les pusha add add movl adc pop leave cmp cmpsl xchg push mov jmp and cmp fiaddl nop js xchg add fildl scas icebp push stos stc mov add mov popa enter (bad) push dec and aaa (bad) lcall jle sub hlt fmull aad xorl aam mov subl xchg mov push mov insb fistl or cmpsl stos xchg cmpsb ret leave ljmp push int or push dec dec (bad) sahf lods std add mov lods mov imul mov fsubrs xchg sahf add xchg add add leave (bad) rcrl jmp icebp dec pop xchg addr16 jle cmc shrb xorl sub mov fwait and sub sbb dec aam xchg xor movsl jecxz into sbb mov scas add and shl fstps loope pop dec shr mov pop in xlat add add mov add nop mov cwtl mov in xor inc or push mov push out (bad) xor lock aas popa mov add clc cld hlt retw aam adc cs imul repz mov repnz pop in dec ljmp mov add add imul fisubr bnd out add lock movsb sub ret cmc scas jle out xor cmp xor mov cs popa les leave mov stc cld lods push jb (bad) enter mov sub std jge test outsb mov (bad) nop scas into lea add xchg sbb xchg jns lahf cmp xchg and insb in fistpll fsubrl lds gs lods xor push in adc in fmulp aaa inc jae enter aas outsb xchg lahf lahf sub test stc ja or les pop or insb ficoml add imull dec mov pop mov and hlt (bad) ret scas mov pushf sahf mov pop sahf jg clc and (bad) loopne push adc mov cwtl xchg sbb cmpsb mov aaa int mov leave lret mov mov loope jb test loope add stos ljmp fs mov ret outsb into push outsl push sub stc (bad) loop jmp std inc out sbb mov arpl mov into or add nop cmc xchg adc jp lea push repz xchg xchg ret js inc cmp lcall xchg cmpsl sbb stc repz push add xchg in add (bad) push ljmp mov mov aas sahf sbb inc (bad) mov pop pop sbb stos ret mov xchg outsl (bad) loopne mov pop push adc aam xchg mov add les hlt cmp sbb lods sub mov in push inc (bad) mov inc imul loope (bad) (bad) pop mov stos es ret aaa mov outsl push insb or (bad) loop ljmp int3 mov xor nop inc or mov jae add mov adc add add enter cwtl fmul cmp pop jp sub push push gs or imul xlat jbe mov cli loop subl pop inc jnp fisttpll xchg in (bad) cmpsb inc sub hlt out adc pop (bad) fcomp jle pop int3 ljmp jmp (bad) jbe jnp in and jae add add adc test pushf adc imul jp pop loope psrlw pop xchg out in cmp pop and loope ljmp or aas and and push add and inc lret into sbb jle outsb xchg fwait mov xor (bad) jno mov push subl mov pop push sub inc fnop xor loopne adcl cld fiadd pop frstor (bad) mov xchg movsb or rdtsc int3 jb add jle cltd lcall mov (bad) mov xor js test or scas int3 movsl and insb mov repz xchg in or push inc and cltd add addr16 add int3 jg xlat jbe dec ljmp pop cmc jb push sti jns jb repz jg mov sbb pop cmc ret sbb jge mov mov inc jp repz nop (bad) cmp loopne cmp test lahf mov cltd add mov adc mov sub cmp and adc movsl mov xchg (bad) mov add test xor nop adc fstl push push leave mov lea cli imul mov mov cmp repz xor pop arpl mov dec mov loop add add sti pop adc (bad) jl fstl or outsl xlat push insl add inc mov (bad) xchg int3 push cli (bad) das out jne lcall xor push fsubrl repnz jge push and iret cmp sub shl xor dec mov sub add add sub or imul push insb add aaa addr16 nop sub sahf leave enter pop cltd mov and aaa mov xchg push stos (bad) std mov jns sbb sbb dec cs xor outsb sbb insb mov mov (bad) movsl cmp or jp pop sub cmp out add fnstsw push in ljmp std popf mov cmp (bad) jbe xlat mov test out dec lcall cmc or aad aam sub add sahf imul mov pop mov push ss hlt fstpt mov mov mov mov sahf cltd add cmpsl push xor push mov xlat out das iret lds stc insb scas loopne (bad) cs stos sbb les xchg mulb int test jmp imul pop add mull jmp or dec jb adc (bad) out and cmc jnp lret mov sbb aas pop inc sar loop sbb imul pop ficompl cmpsl and sti mov mov xchg aad push jne sub scas rorl (bad) or push in aaa jmp sarb call add popa data16 arpl je xchg clc push pop scas movsb test xchg in dec jnp test adc mov stos data16 fnstcw add fs (bad) xor cli (bad) dec (bad) jns clc (bad) mov mov pop je adc jae cmp pop subl in sub xlat xorl xor addr16 pop or or inc push jmp cmp pop sub xchg cmp cld add push ljmp push setne add add or mov outsb into cmp push ljmp mov (bad) std lods imul addr16 popa icebp push loopne mov sarl push jge in sbb dec movsb xchg push mov lds sbb daa in xor jb lods lock push in xor stc adc test fwait inc inc iret out jno jne and add add add push mov xchg mov pusha xlat push sbb and mov mov sahf inc ljmp loopne jb mov (bad) cmc lret repnz bound call sbb and push add xor inc jge inc loopne in stc popa cmpsb pushf cmp lret xor xchg add jb mov mov inc push sbb std xor cwtd cmp bound sub loop shlb outsl xor push stos mov xor dec dec mulb test addr16 lods dec jmp (bad) mov stos sbb inc mov in add adc adc and jbe mov inc movsb inc neg test sub ret sahf cwtl dec mov imul ljmp sbb shr jnp dec decb andb sbb (bad) xor loope cmp jno jbe push ja,pt aas mov std sbb pop hlt add lds pop dec jnp and data16 out or test fs cmp jl mov pop sub into sbb ficompl or xchg movsl xchg (bad) xchg jecxz scas mov lods cld add inc and dec jns or mov hlt sbb inc push add fild fiadd add cli cmc scas cwtl mov sarb xchg or xchg ss iret cs mov or cmpsl hlt cmp inc call and call pusha inc popf aad (bad) fldt lods loop push addr16 xchg sub push mov aas sahf or add mov fstps loopne xor clc jae (bad) push xor xchg or add dec cmpsb int icebp inc sti into loop out mov inc jmp jp loop cmc cmp loop sbb jnp test insl push mov xor lea push mov dec jo pushf cmc or xchg mov scas push gs int (bad) fsubr adc in sbb dec cs or and jnp push mov lods dec jl cmp pop push leave push jp inc push pop or dec ret mov push mov es sarb je add xchg hlt sahf or dec sbb push or pop shrl mov fistpl mov scas cli in (bad) pop jns daa pop mov jae int3 mov sti mov mov add sub pop imul xor mov cwtl or jg sub mov add add jns lret push (bad) sahf mov lock inc push adc popa out test mov outsl push stos shll shlb fstp lret dec jno (bad) xchg sarb mov imul jno pop fs cmp or cltd js mov bts xchg xchg shrb cmp push scas mov add add pop fimul outsb pop mov dec pop imul movsb ret jne loop mov pop fstpl fimull fistl push imul insl xor jno mov enter pop sbb into mov add jp mov int3 rcrb call pop (bad) out movsb sub insl add das push aaa scas cmp mov in mov test sub push popa pushf jp test inc ret pop xlat mov sbbb mov cmc cmc xchg mov into jmp xor stos jb idivb pmaxub or js or sarb std and popf sti mov add mov stos test sub enter cwtl rorl push jl rclb loopne pusha inc mov int3 add dec push mov or dec bound test and hlt or jb sahf cwtl imul mov stos sbb fucomi xor (bad) lret inc pop mov push sbb out pop add add add and or pushf mov daa call loope lcall mov fisubr mov aam xor scas push fwait adcl call cmpsl push add lock sarl lock test (bad) mov push mov inc lock dec imul add lret (bad) loop ljmp (bad) loope,pn dec (bad) xor and mov jnp lock xor dec push int pop test jo jl out in fs xor dec (bad) xor mov xchg or rolb add and mov add pop xchg sub (bad) xchg in (bad) add pop scas or clc das push insl ficoml outsb xchg sub shl mov shlb sbb in insl cmp mov stos and icebp inc repnz imul jo aad ret dec xchg sahf xchg push in mov xor cmp xchg mov jmp pop dec jo xor xchg cmp addb xchg push ljmp pop pmaxsw cmpsb sub push stc add jecxz pushaw movsl xchg mov movsb adc cltd pushl inc es mov fs lahf movsb mov (bad) mov jg xchg cmc lds mov repz cmp test es add add inc mov out push sbb or jge adc add paddw cmc add outsw jb sub in sbb data16 ss pop arpl ffreep (bad) add rcrl (bad) loopne aas (bad) jmp mov mov push es bound int in xchg fiaddl flds adc add add fwait cmp imul nop insb xchg addr16 sbb test add push pop push fcmovnb inc adc dec jo lcall add pop mov sub into lea cmpl mov mov fstpt push fisub js ja xlat mov add add push scas push aaa outsl or cmp test aad repz mov insl mov cmp add sub push or sub mov xor leave les fstl inc jbe cmp push add out xor gs cmpb (bad) mov fistpll mov mov adc add out mov cwtl ljmp adc jo inc rclb out in lea mov xlat lock shrb andl aaa (bad) pop and outsl clc lods fwait and sub sbb sub cmc jnp or mov insb fsubrl in push sbb add add push sahf out sahf push xor adc pushf cwtl or inc and push lea jmp imul leave xor in jp xchg inc xchg or mov dec insl xchg ret mov mov or add push scas mov cmpsb push adc or imul add adcl jnp ror cmpsb push dec sbb stos sbb mov out inc lods jge inc data16 push out pop dec pop in movsl sub pop jne call inc add cmp test lahf addr16 test pusha jo pop or xchg popf sub outsl movb xlat or mov pop mov add je mov loop xchg popf xchg fldcw cmp push sbb push pop out sbb dec cs insb nop inc add mov pshufw out ss jp je cmpsl and sub test or mov inc iret in faddp jae stos ret mov add add push scas add mov push lods jns stos pop cmp in pop or stos xchg cmpsb (bad) cmc add imull mov jmp mov add stos jle mov dec jno imul pop (bad) movsb shlb dec shl out imul icebp sub xor (bad) pop xchg lret fisttpll cmp das mov popa sbbl cld add pushf into sbb push loop xchg movsl xchg icebp mov pop dec (bad) nop add gs pop sbb sbb sahf push pop cmp in pop aad out dec clc mov andl movb nop (bad) push add jp add lock fs add cmp or xchg push lret into dec cs pop loope arpl cmp mov (bad) push fdiv or mov rolb fistl int loop xor pop xchg lcall das cmc icebp mov push mov sub lret ror mov adc das stc add arpl sub movsb ret sbb in mov hlt sub mov jmp outsl sub in jp nop sbb cwtl pop push (bad) push inc les add lods mov ret xchg lahf aad and in cmp xlat xor add dec roll add add xchg int3 mov mov ds test add xchg cmc lds pop xor mov xor add fistpl dec fidiv push dec jle push nop pop outsl loop pop loopne inc mov int push lds xchg push test imul or pop mov mov mov pusha (bad) mull test sbb fildll and adc jmp mov popa cmp xchg sbb gs rcll mov mov into test sub cmp cmpsb jb jno lds (bad) push fwait lea lret dec push fwait add add xchg or clc popa out mov xor mov adc in push sbb dec add xchg jae mov test (bad) movsl mov pop leave call lds cld loop sub cmp mov in mov jo pop cmp fwait es leave outsb loop out loopne add add add cld sahf or dec addr16 xchg addr16 mov arpl xchg add aad xchg mov in repz push or mov mov in push cwtl pop hlt inc adc sbb divl addr16 lret pushfw aam dec xlat sbb adc jo movsl test add lea jl and orl (bad) int dec les popa xchg (bad) aas mov push (bad) aam mov and aaa add mov cmp sub jmp adc jmp int jno or adc and cmp or cmpsl xor fwait test leave nop cmc dec int out inc test add rcrl inc xlat mov stos xor mov dec sti xor movsb or dec sub (bad) cmpsl lret fidiv sahf push scas or pop pop call imul sbb rorl adc mov add jl testl jl add aam and call jnp movsl mov ljmp lcall shrb xchg popf inc add mov clc cld lods pop addl adc dec shrl or and xchg xor dec scas push jb push xchg lock xchg sbb sbb or dec pop inc dec add sbb cltd aaa jne lods fsubs sub add in stc fnsave cli stc mov rcll enter sub pop aam lahf iret cmp and sub repz adc add (bad) push loopne out ds insl pop adc and xlat sub fildl imul sbb jno je nop out lcall loopne and sbb add inc je sbb es hlt cmc cmp lods xchg (bad) xor adc rcrb jp (bad) add lcall inc aaa adcl xor xor xchg stc add sbb cmp daa xchg scas push out sti mov mov shll mov mov daa sub dec mov pop cmp or xchg movsl xchg jo pop mov xchg insl repz in jmp pop and pop jne pop mov fmulp jmp push ret shlb insb rcll add add test sbb lret add sti imul out into pusha outsb mov adc jg push or out sbb jns adc mov je lahf aas jne repnz arpl fstpt lds test pop sbb insb fadds mov in (bad) dec xchg loop add std xorl add imul add mov ljmp pop sbb cmc jle lods and mov aaa mov insb fcmovu cmpl jp mov dec ret nop mov mov sub fildll or sbb cmc dec fst enter jp sub cmp jmp add jg loope test dec (bad) xor xor (bad) cmp outsb and and mov dec sbb sbb daa lea or (bad) jl adc or fisttpl cmpl push loopne jne cmp jns jne dec mov mov mov push ret sbb add add pushf xchg repnz xchg dec mov jg sub loop sbb hlt loopne loopne dec fildll es addr16 cmpsl sub sub and arpl mov js cmc lock add in (bad) mov sub mov mov cmpsb int test outsb jne repnz adc add insl movsl in cld add fidiv pop fbld divl in lods sbb iret sahf icebp das mov in xchg daa mov dec sub (bad) imul sub jns sub cmpsb outsb fwait ds sbb imul jmp cwtl lahf bound push jb rol mov inc ror loope cmp or out icebp dec loop arpl es inc lcall test xchg mov dec jne push imul push push cmp push fsts fldcw adc mov sbb into push push push and imul xchg out sbb jecxz iret cmpsl dec sar es insb dec or movsb mov mov aam aaa cli repnz jo push mov aad or mov mov sub (bad) mov dec leave cmp outsb mov fidivl jne scas adc cld ret inc popf or add pop jb daa pop insl pop jnp sbb jecxz and mov hlt (bad) sbb and inc mov jnp lods lcall jecxz dec mulb jecxz sub xchg dec xchg pushl gs dec push iret js leave and add aad stos (bad) ja xchg push adc andl add mov xchg (bad) insb pop dec dec mov nop fisubr adc pop jbe xchg add outsl cmp push sahf sub push mov xor testl push (bad) bswap leave push mov add fstpt ljmp stos ss sbb mov pop adc add add scas xor inc sub jecxz push sbb jo fbld addl lea push xchg push push int pusha mov dec sub lahf adc jbe fistpl xor mov into js xchg gs pop adc cli adc pop sbb push add add mov mov mov jb adc and xor es test adc adc js gs outsb into cmp push sti jb sub mov scas cmp insb mov inc cli xchg fistl sub (bad) dec addl add jne pop outsb fpatan push or mov test mov out in (bad) in dec inc fs es xor sub gs pop and xor ja lea test pop ffree outsl stos or xchg xchg mov xlat push (bad) frstor mov shll lfs jmp cmp mov add dec jmp xor cmpsb push dec sub mov dec dec (bad) sub lcall sub ret pop cmp mov stos rcrl jp pop push dec mov cltd lea inc int3 jo push pop fidivrl pop mov es mov mov jmp push jo push add popa cmp jne xor icebp push mov mov sub mov jae mov push out push jo in mov mov xchg mov fs sbb jae mov mov cmpsl ss add adc mov inc out cltd in add pop sub add add imul shll push btl mov push push xchg fstp mov or cmp repnz loopne push inc jge daa out lock ficompl mov imul cmpsl pcmpgtd sahf push repz mov les or incl repz cmp mov gs add pop mov pop push lcall dec push xchg xor (bad) fildll or push sbb xchg out movsb int or aas dec hlt adc sti int aaa xor dec divl xor mov xchg and sarb and inc ljmp fisubr push or adc ficompl push loop cmp add ret aam (bad) push and cld jns cs cmp (bad) and or mov pop adc mov jmp xor cmpb (bad) ret jne push adc mov imul ficom or cwtl dec jno imul sbb popa lret adc cmc cmpsl inc shl call mov stos gs add dec xchg jno imul mov imul push mov sbb lds ljmp dec loop jp cmc sbb xchg and in ljmp jbe roll jns lahf xor nop inc lods repz add shr mov push sbb add outsl or icebp in hlt es (bad) aaa xlat mov fs mov jbe mov ret mov ljmp test hlt or lret fstpl jb or push std imulb out pop pop call ficomp xorl mov xchg cli inc out movsb xchg inc mov xor adc test cmp add add out mov xchg sbb pop not dec pop fnsave xchg xchg icebp loopne stc cmp add shrb sub mov test push adc jb dec lret mov or andb arpl mov (bad) fldcw frndint add out cltd repz sbb loop,pn popa cmp fwait cmp test sub iret or cwtl movsl cmp mov test push in jmp insl ficom sbb mov xor xlat test subl cmp xchg pop lods leave stos out mov lock mov arpl imul mul jbe mov add mov dec jge daa (bad) mov pop push push rcll mov aam add js and adc or fiaddl enter rorb xor lahf mov outsb hlt (bad) pop flds mov outsb aas add add aas add pop cs cmp mov (bad) push loop scas lock lret jns out mov mov mov stos lods aas test mov maskmovq movsl mov and mov mov pop pusha cltd push xchg mov fmulp cmp aad add std test add pop sub stos mov pop fnstsw or and imul stos mov ret mov inc test insl push adc fidivr in loop mov repz mov dec jge jecxz and in lret ja lcall adc mov hlt push or add mov sbb daa push jle jecxz xchg mov xchg mov push cmpsl stos stos push fwait or pop into xor mov mov cld fisubrl jb adc jne js dec jmp add add lcall les ja add outsb or test divl xor fimul repz cmc jb sbb outsb loop pop xor jne push mov push insb xchg (bad) xor push push fistl dec mul lahf pop ds cmc subl loop shlb mov push lock repz sbb and cli jecxz ret ljmp add ret and mov dec adc jge call pop add cmp mov or test push (bad) dec imul cs or dec mov inc dec jecxz mov cmpsb movsl neg (bad) cmp sub outsl xchg out push test movsl lods out sbb mov add add stos lea mov xlat (bad) mulb xchg sub and lds mov incl mov cmp add aam or mov (bad) js pushf push adc and stos stos jge jle sbbl imul xchg fs movsl sub add lds push sahf out sub lods mov jmp in adc es out bound (bad) sbb cld addr16 xchg xchg push (bad) (bad) gs mov pop loope jnp sub cmpsb ljmp mov pop rolb adc into xchg push push add and xchg (bad) addr16 mov fs imul adc mov xor sti mov loopne je xor adc mov mov aam stos shrb int test pop jge xchg sub push adc push icebp aas or out int3 repz sarb cmpl push arpl or popa lcall add add add jg inc xlat mov popa sub adc mov movsl popa fs xor rcll aad mov fistpll and jmp add adc jnp mulb xchg xchg sbb lea jmp daa movsl and imul rcrb daa das pop add je,pt adc les push xor mov cmc jns daa daa rcrb mov je cmp dec popa jl push inc pop ja dec sar repz push dec (bad) jecxz std sbb jmp xchg int outsl mov adc dec xor cmpsl cs add push data16 jl mov lret aam (bad) iret cmp add add cwtl mov int ret and lea sahf sub loopne pop out fwait and push sub in sub leave ljmp add mov (bad) out imul (bad) xor cmpsb aam jp add add rorl xchg frstor adc imul mul fisttp mov stos push pop sub xor icebp xchg mov pop out sahf enter pushf inc sbb sbb je cmc js in push xor sti cmp ret mov lods loop outsb clc xchg sbb mov xor inc je pop inc jno (bad) dec lea mov cmpsl sub (bad) jns lret or cmp (bad) (bad) in test mov scas push outsb imul jmp stc out sbb or inc and add add dec pop adc insl pop sti into and loope enter mov jb add add repz mov out icebp xchg fdivp mull cltd dec bnd pop push inc stc jo call cltd dec pop shl lea (bad) sub pop mov enter jae outsl cli cmp pushw mov push mov mov adc lds sbb outsl into cmp add add scas push jb push mov outsb in ljmp icebp (bad) cmc inc repnz gs jbe into insb out sub mov rclb jmp (bad) sbb cmp jp aad repz shll loop push mov xchg movsl mov nop or xor and lahf in pop dec dec dec add xlat fsubl scas sbb xchg imul pop (bad) enter adc inc mov dec into popf loop,pt adc jae inc xchg sub inc pushf aam test cs xor aam mov insl sbb js mov adc or add add aaa add pop inc std jg jmp and jp jne imul out call out scas or bound inc push (bad) imul mov fisubr or and dec xchg stos fadds (bad) dec test idivb int repz call xor imul dec ja pop add dec push mov adc push mov mov push fsts fistp push in xchg and (bad) sub and lcall nop jb mov jp jmp adc mov stos and and nop xchg icebp xchg sub add add in jo int3 inc push aad out sar mov jp adcl arpl insb inc pushf push inc into jae,pt imul cmp adc mov dec jne pop shl out pusha pop into fmull fildl rclb mov xlat insl cltd or aas fcoml hlt jbe dec jge lea cmp add ss in iret stos inc or lretw adc imul jle aaa xor insb imul and js sub pop push mov imul fwait inc mov mov pushf push sbb add xchg je (bad) sub jmp fwait add adc pop fwait sbb loop,pn jbe outsb add inc test movq mov or pop bound gs cli adc jae in and iret dec dec and lds mov push lret push (bad) xor pop xchg add add icebp mov xchg in push loope mov sarl popl cmpsl lods xor loopne test pushf int3 cmc in iret ss je pop pusha xchg adc clc cmp adc les mov sbb mov sub mov xchg test fldl pop xchg jns fs daa nop cmpsb insb cwtl and stos inc mov dec xchg (bad) lret out adc enter mov jg sbb aam aas jae push loopne and xchg sbb iret enter push and push call pop cwtl (bad) cmpsb dec imul adc into inc js or add add jbe hlt in cmpsl xchg cmp cmp std push lods ficompl ret aaa dec (bad) nop rcl lahf movsb (bad) jbe into jge xlat fwait push test or push push leave xchg fldt divl outsl movsb mov add lea push xor jb mov push outsb ja jecxz out push pop jle add add inc sahf cmp xchg jecxz adc push sub stc jns jmp movsb mov in in orl push mov push xor movsl add cmpsl mov add jns xor jp mov ja xchg jb notb ljmp ljmp pop mul push pop je (bad) add add andl mov popa adc popf pop lahf xchg sbbl cltd or xchg or out cmp inc mul call scas xchg (bad) ss movsl icebp sti pop loop enter aas push out xchg mov sahf sub out fwait adc sub cmpsl fisttpl scas and out sbbl add das mov adc adc lret adc in push repnz add xor bound add (bad) (bad) jge (bad) and cmpsb or scas mov pop push dec out rolb arpl inc in out (bad) and scas jo dec je and add jno ds sbb lret push jmp jp adc stos arpl outsl xor pop test punpckhbw mov jmp push sub jne ljmp xchg fsts jno xchg or push cmp and mov xlat inc mov or sbb add push mov xchg dec mov nop lods sub add or pop (bad) mov out enter subb jne push mov or sbb and (bad) fimull sub loope inc addr16 fnsave test aam rorb enter mov add add lcall pop int3 jg jno add cmp imul mov ret jecxz push jle,pt ja popf cmp andl mov jne jne and decb xchg mov lods stc das sbb imul dec jae (bad) leave cmp add add add add pop mov or icebp xorb mov addr16 jb daa lods repz mov addr16 mov pusha pop movsb cmp fwait mov stc fwait out cmc mov or int3 xchg xchg rorl mov stos xchg adc fs dec ja push add outsl push add add push mov mov pop rcll fistpll push in xchg lcall inc mov outsl xchg testl icebp inc pop mov push xchg fdivrs mov xor loopne clc sarl mov jmp insl xchg pop cmp inc mov movsb xchg add mov popa insb xchg pop jmp out cmp adc push pop out jp push jp movsl adc dec outsb lret (bad) inc jno movsl ja addr16 enter test lods test inc xchg jecxz adc call sbb inc icebp in movsl add mov mov iret loope sbb mov iret mov sub fwait add mov lea outsb mov sbbl iret ja inc idiv fldcw xchg sahf cwtl imul idiv add pop or (bad) push pop push (bad) push pusha (bad) xor movsl orl adc mov shrb push movsb jne add adc add std movsb sub mov lcall sub jne jmp mov lahf pop pop es jnp es jmp mov lret leave or push pop sbb or idivl lea ljmp gs insl add add push dec cmp hlt mov mov xor test sub in dec jns cmpsl sub pop jle push sbb mov mov arpl mov add cmp mov sahf pop pushf idivb mov negb add add xor in test dec sub cmp movsl xchg aaa les adc sub scas pop out dec push (bad) sahf fsub jb (bad) stc aam and gs test cmc mov mov aaa mov fdivrs jns jae dec jecxz jo dec mov add testl add sbb (bad) into push xchg jg add es mov pushf pushf and movsb (bad) adc jp stos mov subl es pop insb add push js xor jb daa jecxz dec adc push mov pop mov mov push add nop adc addl cmpsb repnz pop xchg icebp sub es in rcl outsl push jg xlat push insl push lret gs pop mov das mov rorl sub fldt out dec (bad) in leave sbb movsl cli call in sub cmpsl fnstsw dec lcall js inc cli and adc jg mov je add lods push mov lods daa (bad) loope cmp roll mov xor test aaa sub mov add xchg mov outsl into in outsl dec (bad) nop add (bad) decl pop test arpl sub dec out xor sub mov pop add dec push jl sbb nop jle pushf push cwtl out test jp outsl andb jmp jp cs (bad) mov js xchg xchg mov xor stos jecxz (bad) outsb sub push das adc insb push xor mov mov hlt out push push insl pop sbb repz mov mov push insl popa jle (bad) or adc and pop mov mov test add add das bound scas popa aam test jle lcall (bad) mov aad aas daa out cld outsl jo (bad) jb fldenv mov jge pop int3 push dec inc push cwtl inc mov cmc loope movsl nop jle xlat pop mov cmp lods loop das xor push mov jno lock add xchg and idivb out or mov (bad) xor fmull leave test sub add mov sub adc es jge cmp sbb adc dec sub add call fs scas pop es mul lahf inc in xchg repz inc cltd in add xchg negl pop adc lock inc jle push xor xchg lods mov inc cmpsb in scas push andb push mov xor fsubrs bound jne inc cmp je dec std inc (bad) call xlat popa jnp jge std repnz out out xor stos xor jo rcll mov shrl or cltd xor cmp loopne (bad) test fstpt mov cmpl cs out cmp pop mov das loope fisubl les leave fisttpl inc xchg es ja sub mov pop std mov xor add mov call mov inc (bad) frstor fdivrl cmp mov mov stos mov sti ljmp mov jle,pt outsl cld popf and (bad) and adc jne jne and je call rcrb cld add outsl push pop enter add nop dec push jmp pop rcrb mov xor adc cmp mov push (bad) sbb sbb vpsubusb (bad) mov cmpsb or cmpsb fidiv hlt mov mov fildll mov sbb xor outsb inc or lret adc add into cmc mov repnz pop add push es mov and push jns sti js sub fldenv loope cmc lea mov xchg (bad) rep adc into mov enter mov sub mov inc dec dec (bad) xchg pop lock lret cli adc pusha (bad) (bad) xor add add scas imul jb jo pop xchg xchg xlat clc fnop push jae cmp dec xlat incl dec push adc mov lahf (bad) jp mov and mov ljmp rcll mov add in xchg fnstenv jecxz int3 or and add add add pushf sti lcall jno cltd fmull xor jno cli xchg sbb fisubl les jnp mov fdivp leave dec jae int push sbb leave mov clc jns cltd mov pushf fnstsw or imul fldcw lahf push aad mov jnp pop lds or add add stos mov sbb imul decb or push mov sbb pop pop mov addr16 cs xor aam mov adc ja in pop xlat das pop bound addr16 xor insb pop pop std inc out dec jbe push and jno movsb jecxz inc aas (bad) mov mov add push and call adc in sbbb js scas lock pop (bad) cmpsb dec (bad) lods (bad) cltd cmp daa push (bad) test repnz jne add push cmp les leave pop dec jne xchg add xchg cwtl das sub push cltd nop cmp inc into aad pusha xchg test add add cmp ss out andl pop sub es ljmp lods stos mov lock cmp imul out bound (bad) jmp pop (bad) jmp and out popa sbb push mov jle sub sbb popl pcmpeqd cmp add mov pop (bad) (bad) push repnz sbb loope mov mov push and jmp push pusha clc scas ljmp fimul adc mov xchg jmp add mov cld out in test push lret sbb into mov cltd xchg mov in pop (bad) jnp dec data16 dec gs add add dec cmp les adcb push push mov pop and mov mov sbb sbb push pop shrb push movsl jne ret add movsl pop scas push out xchg lcall add das or lahf jnp aad mov xchg ljmp jnp dec dec cmp adc rcll push mov inc push addb dec (bad) in xchg mov je fnstsw fcompl outsl aas repz out jmp popf imul or mov cmp add add push fistl into add adc mov jae add cli push in jmp insl xchg push cmp into rcl pop jecxz xchg cmpsl cmovp mov mov pop lea imul loope mov push loopne or add mov aas adc pop sbb out movsb xchg and add add adc (bad) (bad) arpl lock cwtl xchg sbb gs les pop jne das in dec jne stos imul clc test lahf cmp out fwait test icebp bound lea inc daa mov push fwait pop mov divb enter fs lea (bad) jmp sub adc sbb repz and pop mov fnstcw push sti dec in dec xchg mov add dec fucomi out sbb enter insb and inc xor xchg in or cltd mov mov add inc ss mov outsb xor insl push test movsb in jae pop pop push in jae scas jl jl add add xchg sub mov (bad) into add jg xchg add xor pop jg clc pop les stc mov mov dec sub xchg sbb lea js and adc mov mov (bad) sub fs iret popa mov cmp cld add or sub fstpt pushf inc int3 jo pop jae out cmc jbe lods data16 mov push jnp in cltd (bad) lods loop add shl sahf sbb icebp in dec cs xor inc or jno jae fsubl ja mov in dec in shlb jle outsb add push mov adc ret imul ret mov add inc insb xchg out stc popf aad cld hlt popl test cltd test mov push push insl mov std ljmp xlat arpl sahf (bad) dec push imul sub sbb jb pop insb cltd dec jno imul imul push adc out mov mov add push cmp imul ja mov (bad) stc sub popa das push rcll icebp (bad) int3 mov jmp lcall jle pop push lret in ljmp jno sub pop test adc shrb push cmp loopne jl jl nop add lcall add mov fs xor stos mov inc mov aam imul lea cmp push insb or enter pop jo push mov mov ljmp mov int or mov xchg out mov add add add cld jge lcall inc cmp fmul enter (bad) sahf gs xor enter jno push roll adc push dec jmp in (bad) imul bound inc in in imul cltd jmp arpl das nop out cmp vhaddpd stos inc jmp pop jns add ja jo nop mov push lcall cwtl ja xchg clc pop sub addr16 or sub inc in es icebp imul je jecxz daa aad xchg fcompl xor xorl mov sti lret jl aaa out outsl aad mov lcall mov adc push add add imul loopne movsb out rolb fnop or mov psadbw out cmp outsl push insb cmpsb insb push cli push xchg jae ret lahf xor popa pop aas aaa add rcrb xor sub sbb mov push cld pop js lods shll lret jg mov add add (bad) jno cmp test adc push ljmp cwtl inc stos push cmp pop (bad) push (bad) rolb out and es enter and loopne push jg in push mov pop rolb sbb aam cld add (bad) loopne fldcw mov divl mov test mov xchg push dec movsl (bad) cmp xchg loop mov add cmp call data16 cmp sbb dec xchg add cmpsl push stos jo jle loope in push sub sub mov add add pop adc and xor mov fildl add add mov fwait scas adc and pop cmpsb fldt cmp xchg mov mov mov gs ljmp scas test (bad) aad add orl lret dec (bad) es adc and mov sbb add loopne sbb lret xchg adc das xchg xor add add jb dec sbb sub push push fcomi jg test dec push mov lea ret mov jg call lar enter push mov lods and pop out mov push jns out push or and scas insl mov pop pop add dec or push pop jmp dec push or int3 clc sbb (bad) les push popf notb sbb fstpt std les int xlat sahf sbb iret and cmp jne push ret add sbb jp rcrl mov push dec cmc inc xor aam add add fwait dec loope imul jp or mov dec (bad) sbb call jp sbb push mov xorl lcall add mov adc and mov in in xor inc pop jb sarb sub cmp mov sbb add pop cmc repz add (bad) add rclb add jbe add arpl jne jge add cld inc icebp push test std imul orl popa dec sbb (bad) mov js aaa jmp stc imul dec adc mov out out cmp scas clc cmp stc ja cmpsl add ljmp xor sbb lods mov and mov xor dec dec mulb mov mov fisttp adc test xor mov push repz in fs fnsave jne pop mov adc cmp out jns mov jne jb mov pop dec pushf les pop push rolb add (bad) push out popf lahf sub lods mov xor rcrb sub inc jg sarl jae inc mov inc jge stos push xchg xor and gs push (bad) pop mov mov add in loopne adc add (bad) add dec std cmpsb pop jno mov ljmp ficomp das xchg repnz xchg pop jecxz xchg pop jle mov cmpsl outsb push stc popf push lock out and jo insb fst lret mov inc jo and mov int mov repz add add xor mov jae nop insl (bad) or sbb outsb mov pop dec add jmp clc inc or lds xchg mov in dec scas or or dec bound xor aas ljmp pop sbb fmuls std nop in jo iret ret inc out push mov cmpsl ljmp add pop mov mov repz mov daa sbbb cltd or test jae and ret loop mov dec enter mov popa jo (bad) sbb jo rcll aaa mov sbb sub dec mov es pop (bad) adc push mov test xlat add add repnz xlat (bad) mul add in dec push rolb mov aad js push ds loopne dec test mov out jmp movsb jne jp cld pop cmp cwtl in pop test push jmp mov out jmp xchg xor add aas sbb (bad) ret imul pop mov xor (bad) push fiadd ret and mov imul xchg add mov dec mov loopne xrelease fildll jp push repnz (bad) pop xchg inc repz imul je shll mov add pop adc outsl push or and loopne xchg adc shrl mov dec test fcoml xor cwtl fmull in and in stos cltd and mov xchg cmpsb inc adc std (bad) out aas add aam mov in test aam cmp xor push ret div add test out jnp sub or mov test leave aam in sbb stos sbb mov jae mov pop les dec (bad) and add (bad) add ljmp xor out cmc cld mov popa fsubrl in lret and ret aas jmp test cmc daa popa inc mov xor js popf jnp loop movsb push outsl push stos dec mov and sbb mov lock dec push and mov popf fisttpll (bad) mov lcall pushf fmull jp cmp pop inc push jmp mov push mov (bad) movsb cmp outsb loop push or xor stos xor ret pop push shr push in push scas mov inc pop push call pushfw aad popa mov movsl sbb xchg sbb movsb xchg mov and in or jae pop pop lods cmp push dec jge out stc jmp sbb imul add mov std aaa stos repz and fwait add js inc push jae xor pop jbe fcompl add or push ljmp fwait stc xor movsl xchg sub outsl aaa and add aad and aam jle adc dec clc out sub jns stc add movb add (bad) jecxz,pn mov aas stos cwtl fdivrs push pop cli xor mov add out incl stc mov lret mov test js daa pushf scas fsubs pop pop push call leave cmpb xchg mov out mov lock jmp xchg add add lcall add jae pop dec jge jns inc ja xchg pcmpeqd adc add xor pop jle test dec dec imul adc movl dec les popa lret addr16 loop (bad) stos mov mov fsubp mov xor cltd add add jbe fidivl cmp sbb and fs popf xor push sbb cli jg pop orb pushf scas loope mov lret cli mov jp sub mov or push in (bad) int or insl mov imul test xor jl subb call sub add add push insl pop sbb out or leave pop int3 jg sti xchg fisttp push sub jae call xchg fwait cs xor mov ret adc fcmovu daa jecxz push or sub sub repz dec and cmc mov xor mov pop cmc pop jmp add add ret scas xchg enter and cmc jnp popf push mov lret stos push cmp jns mov or in mov pop xlat ja mov mov shl add adc cmc xchg adc (bad) ljmp mov in fmulp andl xor add sbb cmp cmp and push or cmp sbb push stc and inc inc shrl add (bad) cwtl fwait bound push (bad) data16 adc dec mov addr16 sahf cli stos xchg or idivb xchg mov (bad) mov xchg dec and (bad) add add or push add les cmp nop push jmp inc jae dec mov popa mov mov xor gs jbe in rorl aaa sub inc lock (bad) int fistl jno loop (bad) xchg jb,pt imul jo js loop fmull ljmp aaa out ja sbb jb movsl dec outsl cmpsl cmp (bad) jmp and mov lea xchg imull loope jge rcr scas or ss lods add jg add leave pop loopne adc xchg xchg sbb aaa cmp ja xor pop stos or add jae fild pop jge jns push inc sti xchg mov fcoms js aas cmpsb mov cwtl cmpl loopew jb pop icebp xchg test dec xor hlt xchg stc push test mov outsb inc cwtl pop xrelease jbe out xchg jmp jns test das test adc je mov mov or (bad) mov loope,pn clc testb pop inc outsl and xor lret jl xchg les cld pop add xchg cmp xor loop or jge sub and jnp subl jbe add (bad) (bad) (bad) mov aaa iret aad fsubrp out stos sbb add cltd (bad) outsb out arpl dec mov sub shl gs andb jg jg mov lcall test ds test pop bound jae inc lret lret add xchg mov push push dec dec dec xchg jbe rcrl xchg xor das xor jb fldln2 jl pop xchg sbb imul aam and scas repnz pop lods pop lret xchg sbb cwtl pop push dec stos rcl js sub popw adc xchg in fimul add or loopne add imul xor jnp lahf push add sbb stos scas xchg cmpsb sbb (bad) fmulp pop mov xlat pushf (bad) dec mov iret xor mov add xor mov xor daa call sbb out mov push mov test cmp add loopne and test lahf or mov lds add jge xchg lock int jnp xor mov push pop mov outsl fsubs jbe add out xchg mov pushf and dec fisubrl push mov add mov xchg xor enter dec fiadd add btl cmc push in out jecxz ss out fimul repz mov xor (bad) mov out push fs in stos jne adc scas pop xor push mov sarl aas dec dec pop xchg sub mov xchg jnp push cmp leave pusha int3 mov cmp mov rcrl xlat (bad) out pop inc xorl xchg (bad) push stos dec and in mov lret lahf mov jmpw test add xchg pop arpl jmp cmc inc push fwait or fs ret movsl in ljmp jnp out jo sbb jmp sub xchg add add mov iret sub mov fmull add push cli inc rcr btcl mov and fs popa gs in push pop jne test jbe inc jne in popf lahf bound leave jo jg ret pop push (bad) xor pop sarb sti imul outsl pop jnp notl add add xchg rcll cmpsl or push xchg out jno cltd mov push and arpl movsl sub xlat in xchg or gs les mov (bad) idivb loopne lock (bad) sub and xor add loope pop mov pushf stc add pop mov mov add add jbe jnp addr16 into push outsb push sub and pop pusha pusha cmpl repz push fdivs inc es inc mov jg dec or mov (bad) or adc xchg push repz lock adc jl nop nop in ficomp xchg sub jno fwait sahf push xchg out and add int cld hlt mov fdiv rclb fsts arpl add (bad) dec ret and pop or mov aas sbb lds sub cmp push mov cmp ret mov mov jmp fcompl addr16 loope or jmp (bad) repnz cmp xchg add lods loopne pushf xchg test (bad) cmc iret (bad) ret pop loopne dec les mov mov xchg cmpsl sbb inc adc loop (bad) lea pop add ficoml (bad) sbb mov mov push repnz dec divl aas stc fwait mov outsl or mov add xchg cmc loope clc cmp mov lds outsb loop int sub subl dec les and or dec test inc add mov xchg fwait dec movsl jnp jp mov dec (bad) adc stc jae fcompl (bad) pop movsl insl jp add add add and mov mov mov fstl sbb jbe packuswb xchg insl pop (bad) mov cmp mov test sahf mov cmp xchg xor jg lods fildll jae pop fsubrp sbb jbe mov add add aas cwtl js pop mov mov xor sbb ljmp sub loope mov scas mov (bad) gs push out push lcall cli hlt cmp les mov add xchg imul test inc xlat into pslld (bad) xor add (bad) int push lock mov add mov divb sub mov out arpl cmp pop mov mov mov pop xor loop jo jnp movsb fsubrs push test jb inc lret lret cmp xor cs add inc in lret dec (bad) add imul cmp adc push jp adc push dec movsl fstpt and adc jno mov mov pop mov adc leave nop jle sub aas pushf ret push in out stc inc in out (bad) xlat dec (bad) mov inc mov xchg sbb je xor xor add dec pop insl cli adcl aas lock xchg test inc pop adc cwtl cmpl inc fwait push mov jnp adc lea orb xlat sub mov ljmp sub aad adc leave dec mov mov stos adc cli aas and inc push pop or push test jae add add add pop in sub push push mov mov mov pop pusha cmp sbb in or test enter pop clc dec jns sub jno mov pop push insb scas fsub andl test jge inc in stc dec pop pushf or push mov add add mov faddp mov pop mov aas outsb imul imul lds not sahf xchg movsb jne sti fucomip add sub pusha add mov push jnp add imul mov jae cltd dec std jp out push dec into je jmp arpl add pop mov scas cmp test mov xor mov (bad) xchg es aam add jb push inc dec mov rol jae rolb jnp pushf jle jae and leave push xchg mov std cmpsl or addl jl xor push sbb sub ret add add int3 jmp lods aaa adc fnstsw andl lret paddusw repnz mov cmp mov sar ror into cmp mov xor in sbbl test fs and mov sti inc shlb shrl scas imul xor pushf in dec mov sbb add mov and sbb mov and movsb jnp ret or out mov aas in lods jns sub dec xchg or add inc aam and cmp bound pusha jno aas jmp dec ja jo out mov mov cmp add mov mov out xchg aam (bad) pop dec push hlt push daa ds pop cmp repz or xor adc mov aaa cmpsb mov push es loopne mov jle inc push jp cmp xlat movl adc jmp mov cli push and rclb pop pusha or stos mov sarb xchg lds mov or dec mov nop in sub ret mov sub loope aas aad xchg pushf ds sbb pop sbb pop test pop cmpsb imul pop cwtl xchg xor cmp add add add add mov (bad) addr16 mov leave fdivrl or push ljmp incl mov pop xchg js cmp aad int cmp push icebp mov xorb mov or jo xchg pop mov mov in out mov pop daa icebp fisttp add mov cwtl inc mov inc xor jne adc or cmp sub cld add mov pop push test (bad) mov ljmp sti pusha jmp icebp xchg cmp mov fstpl and lock into xor out pop dec jge stos mov (bad) call fwait rclb add add mov mov lds enter fadd sub pusha mov popa xchg xor pop add icebp (bad) mov lock cwtl inc dec mov mov js jg sbb sahf in orl add fildll jg in xchg js push aas inc test fucomip cltd rorb lods jecxz popf sub dec push std inc pop test sarb in pop adc jb and es fisttpl outsb loop sarb insl ds jne stc jno mov mov or mov repz add pop xchg and pop (bad) cmpl xchg sbb sti and in fisubr movsb push clc flds dec (bad) and scas and shll push in jne (bad) xor pop test cmp add scas push mov je test xorl mov mov xchg sub mov mov (bad) cmc jnp jecxz into andb mov in xchg mov incl add and dec jns push adc mov fisubrl not xlat mov push xlat (bad) lret icebp roll lds sbb pop mov jge xor jmp mov pop and repz mov arpl pushf insb add repz mov (bad) mov movsl or cmp add add xchg movsb insb pop mov sub push notl sbb add cmp mov dec movsl ja out dec pusha in imul adc sub movsb push xor jp hlt hlt ds ds in popf mov (bad) in sub jne leave popa das negl fs add imul arpl push sbb or push imul and dec push mov popa cmp dec js psubd arpl in enter test and push dec jl or add sar lds adc sub mov aad (bad) in ficomp ja add jbe es and loop push jae and and dec repnz hlt in mov insl jo rclb loope pop xlat push pop pop stc mov push js sbb sahf call xchg movsl aam loopne jg add mov (bad) (bad) arpl aas pop mov add xchg (bad) (bad) gs les push jge test xor stc aaa ret xchg (bad) nop rol cmp bound mov add hlt cmp pminsw mov ficomp jle icebp call daa xor sbb xor push jbe fs sbb lds lods std dec inc mov dec mov leave call xchg jo incb icebp mov in arpl repz cs jbe push push or cmp cmp and cli or cmp xchg in lea imul sub addr16 mov cmc ficomp cwtl es cwtl std mov loope ds fs sbb inc arpl ret in and aam xchg sbb cwtl sbb push cmp xor test imul shrb mov lcall (bad) jg jb add mov roll lea aaa and test lcall repnz add jns adc mov hlt insb lods inc mov mov adc (bad) xchg arpl sub fidiv shlb mov push jne xor outsb mov scas ret lods inc mov xchg sbb and cmp sub adc (bad) xor xlat hlt add xchg push add add inc mov mov inc icebp jo fidivr push sahf lods orb cmp pop dec (bad) and mov ljmp sbb push lea hlt out inc adcl (bad) jo or inc cltd mov mov xchg popf test add lock xor lock test add add icebp je jecxz mov (bad) pop xchg push outsl add lds dec mov dec sbb jno dec cs mov fldcw jmp divl adc sub inc lds inc inc test push ret push in out jecxz jo imul dec xor arpl and insl jge inc std hlt or decb adcb (bad) ljmp or (bad) sub aam iret mov push jl ljmp pop mov aam xchg popf add in arpl dec call xor pop shlb and call sub fcmove std outsb dec adc add add clc and mov jbe xchg xchg sbb movl cmpl lret add dec xchg ds loope das mov mov lods popa cmp push mov push loope cmc mov inc dec and jnp adc or sub sbb (bad) xor add std aad mov idivl je outsb es adc test insl xchg subl xchg mov and xchg inc pushf leave movsl loopne or xor ret loopne aad ror or loop icebp rol and mov aaa rcrl sbb adc leave mov add mov xchg sbb gs sbb gs pusha sti mov movsl insb xor stos push pop aas loop insl lcall push xor mov inc imul jmp adc mov (bad) (bad) jnp or into push sbb gs out loop mov out idiv sti icebp adc fbld add add cmc push (bad) mov or push pop mov or ret test loop mov shrb dec mov dec les push aam ljmp jmp inc pop xchg cmp mov mov mov fildl inc mov jge push xlat in mov clc mov xor mov dec imul mov dec sti inc bnd sbb xchg in add and repnz xchg xor mov pop cmpsb imul sub into or (bad) neg push jmp (bad) jb inc lret div inc mov pop or dec mov fiadd add popa nop xchg cmp imul scas sti mov ljmp outsb xchg loop mov fidivrl push stos dec add mov push pusha xchg scas mov push (bad) sub xchg lcall xor xchg aad mov divl xor scas (bad) dec aaa in movsl xchg fwait sbb mov mov add add mov and or pop xchg rorl sbb cmp adc push dec push call push jmp cmp nop pop push dec (bad) and insl fs xchg sbb jmp sbb pop (bad) add jnp mov lahf (bad) jne mov add add jae andl movsl inc jecxz sahf inc dec out fs loop jp cmc sub outsb mov xchg and jecxz fsubrs imul ss insb fwait adc dec cs aad sub cwtl push mov pop pop mov xlat (bad) idivb xchg jns pmullw mov (bad) aaa add xchg fisubl add cwtl push jne mov outsb sbb mov lahf push cmp out jl jmp xor movsb in mov hlt jae aam jne sti imul movsb insb pop mov enter cli das (bad) dec imul mov adc cltd dec bnd or mov mov loopne inc repnz add dec sub fimull or fs data16 test pusha les add xchg fs xchg out je fs add mov inc aam lcall pop xchg xor or vunpckhps push (bad) jmp mov mov xchg jbe mov push xchg add loop iret (bad) in movsl lcall xor cmpsl mov in xor into jmp insl mov cmp rorb xor (bad) popf test xchg cmp lods dec psubusw sbb adc add push add sbb fsubrs add sbb sub and lods clc push lret xchg arpl frstor das pop nop sbb inc rcl gs push pmaxub and les shlb and cmp inc ret adc movsb jge aaa pminsw xchg loopne adc outsb into jmp aas out cmp imul push out sbb fcomp pop add movsl incb or xor test aas mov xor cli inc xor btrl push push inc popa cltd ja add arpl mov sbb test subl scas mov jge inc add aad add pop adc rcrb mov call stc (bad) jo loopne jb push sti out jb sbb inc sarl ja stos inc (bad) clc je lcall les push mov sub test mov mov loope mov xor incl or clc por sub lcall lods push out xor push xor xor jmp rol repz mov or (bad) dec mov mov movsl cmp push xchg sbb push jecxz xor jb in je push in xor mov outsb add add dec int aad add inc cs out mov add sub mov aas add cltd lcall or clc push xchg push or dec push test mov inc xchg mov (bad) and es popf loope mov stos adc clc cli sti jo mov ljmp lods pop dec adc loopne push sub xchg inc out stc jmp mov shl sarl movsb aad pop (bad) out das mov (bad) out (bad) xchg roll dec mov nop jge ret sub ror dec movl xor adc mov int3 pop adc lahf fstpl test movsb mov lds cmpsl sub cmp repz add xor mov jnp scas ret mov loop fwait outsl cld fnstsw popf std and or sub sbb xchg fs push loopne inc repnz sarl sahf ud2 push inc xchg pop (bad) mov mov lret adc pop xchg add cltd iret lahf rcrl out jp shl gs je movsb ljmp push addl lahf cmp cmp add mov pminsw adc fisub cs cs inc add xor sbb (bad) jbe add add add cmp test cmp sub aad fildl mov decb add insl nop sub enter xchg fisttpll aaa xor xchg aad jle add pop fdivrp fisttp testl mov movb push and mov aad or test add repz pop and mov andb jge in mov xchg movsl sbb in inc pushl cld pop data16 cmp (bad) jns,pt cld pushf and ljmp add adc repz imul add insb sub ds jp aas mov fs jnp mov pushf inc dec out lret mov dec (bad) stc push lods in mov mov push insl push stos fisubr and out nop sbb hlt in dec adcb pop push push pop push sbb fist cmpsb mov adc mov scas mov in in stc push xor aaa fs out jbe mov add jnp mov fldt mov test add (bad) les jbe xchg ljmp sbb (bad) es dec (bad) bound mov xchg sub out lcall push in pushf jae cltd mov dec mov pop cwtl push pop sbb and aas dec enter add add add aas xchg hlt pusha cmpsb scas fucomp fwait test sub cmp push aas add movl dec scas packuswb sti pop cmp iret data16 sub add add mov push fildll and ja cmc mov jb add adcl lock adc add enter leave mov daa inc test fidivr popl sub push or test loopne sub (bad) int stc cld hlt push dec inc cltd lcall xchg cmpsl push movsl pop pop or mov aaa fwait sub mov xchg mov imul fcmovbe adc clc and add push (bad) loopne (bad) xor dec dec jl movsb sub ja repnz xor insl mov rorl mov jae jmp fsubrl and dec xor inc icebp fwait cmp cmpsb jbe int dec arpl js inc imul lods (bad) xchg dec repz (bad) fistpll push sub lock inc jmp add add (bad) addr16 dec out out hlt jmp int pop fs aam mov orl enter fmull add xor movsl mov fs pop hlt xor fxch iret cmp xor fisub sti or cld hlt push cltd std pop clc aaa xlat mov daa dec bound add sbb jecxz fwait lea jg mov (bad) dec mov jmp loopne xor lock dec sarb mov mov cltd sub adc movsb loope mov cmp add popf and data16 enter push mov mov cwtl lret add mov fst (bad) test shrb sahf rclb mov adc cmp in dec xchg repz push std dec dec scas insb dec mov mov jo add (bad) adc add mov (bad) loop inc sub mov js,pt in push mov dec insl outsb sbb repz outsb xlat mov add jmp repnz add lcall push mov andb xchg mov jp rcrl dec lea adc fistpll and mov in mov sub movsl movsb sub lahf dec adc xor mov mov pop idivl in add add inc nop sti adc cmp push xor push or inc (bad) repz mov je xor sub cmp cmp sub add loop js rcll add test stc aas out push jnp mov push xlat (bad) daa inc and mov test add mov mov bound cmc in hlt stos jp xchg into fwait sub jae mov pop and jg sbb lods sti les fbld and cmp push fldl ret sub adc cmp jg pop sbb mov aaa leave mov addr16 add lahf popl rorb jl loope xor in add add inc lret pushf and inc adc (bad) outsl icebp push (bad) movsl mov sahf icebp jns inc cld aaa jno je,pn inc outsl and inc popa stos xorb jno,pt or lock cmp adc xorl add mov scas mov xchg mov in dec pop adc outsb ja inc add add pop cmpsl sbb mov fnstsw testb add js stc sarb or call pop push xchg jns fcmove cmp in gs dec inc dec loope cld aas lcall sbb adc fdivrs mov sbb mull jnp add add adc pop fxch xchg inc int in sbb jne shlb imulb mov aam jnp jnp push push or imulb insb pushf sbb pushf test out xchg push mov mov pop push mov cmpsb imul sti mov adc xchg inc (bad) out mov addr16 hlt jo adc int test dec cli add scas jle pop and cmp pop je sbb sub gs mov ret cmp push sbb insb cmp js inc mov repz mov dec aad test inc icebp mov fidivl jae mov (bad) stos lret xchg (bad) jae push cmp pushf mov and add pusha test dec cmc cmp test and pop fnop cwtl pop sbb sbb adc out inc sbb popf inc dec outsb stos (bad) (bad) and mov sub lahf cs dec idivb in push adc lds xchg aaa jge jns mov addr16 jns aad add add sub addr16 int into add mov mov lret ret test test sbb outsb into push mov jb and cwtl int sbb xchg int3 mov fidivl je or pop sbb lock (bad) mov icebp sti inc divb fwait push test add add sti lds (bad) jno out push mov (bad) inc add scas imul mov jbe inc inc or cmp pop out sbb inc rclb add sub arpl test lods iret mov rcrl jecxz jl repnz (bad) in fidiv inc pop xor mov pop add out pop ss mov rcrl adc mov xchg cltd mov cmp out das xchg icebp test mov pushf icebp mov add mov addr16 cmc xor mov mov cmp ja je daa loopne repnz sbb mov dec adc pop test ja mov add popl loope stos sbb xlat cltd data16 mov lock jo inc or pop out push fcmove out in daa stc inc cmp out push and cmp icebp seta and and (bad) lods mov xchg rcl pop rorw mov pop movl add mov push and adc xchg negb pushf dec cmpsl or push and pop cmp insw loop fnop imul ret ret aaa jge repz sub (bad) je push xchg adc cmp mov (bad) mov pusha mov dec jns jne jecxz mov test cmp lods and fs in dec cs fs test fiadd push mov stc jl jg push ss sub addr16 jb js js sahf pop and stos inc cmp sbb push repnz cmp cmp lds lahf cmp out cmp testb add adc aaa sbb loop jo das arpl mov inc push cmp in shl fnsave fs jae fldcw js int in mov mov outsl pusha push ffree adc adc mov push ret mov popa jge pop test push jp jno fstl ljmp add jb popa mov adc mov das mov repnz in nop push (bad) mov cmp lahf add sub imul outsb xchg pop cli dec fildll mov lods cmp or jle mov dec dec xor ja loope inc sub loopne mov add add jne or stos sbb mov adc es jb cld xchg clc jbe ficoml or adc sbb mov sbb sub movsl inc xor fwait jge sub shrb int3 pop cwtl movsb dec jg mov stc mov fsubl call and dec scas add lret out mov mov out test push (bad) test stos push mov mov push add push jge out xor dec xchg outsb dec stc cli pop pop sub mov sub xchg das outsb cmp fucomi and aas xlat outsl mov pop cmp mov sbb push add mov jae imul lds lods sub pop lahf adc out xchg cmpsb sbb push cmp mov mov in xor loopne es xor push fcoml or inc in add add mov inc xchg inc cmpsb out fisub in jnp jno inc or and popf loope push xor mov jle jg jle sub insb pop or sbb pop lods sub outsl scas (bad) mov into imul and mov pop test pop mov fsts pop iret loope mov mov xor xor add add call mov stos and jl xchg fdivs push mov insb out add ret int ror repz outsb aad mov (bad) mov lret push dec cmp ret fidivrl push pop (bad) cmp sub and xor mov (bad) jmp sub dec mov (bad) cwtl aas xchg and add rolb pop fdivrs pop pop test fcoml ret aam out shl rcrl inc lock rorb cld sub out hlt sub push push inc xlat (bad) (bad) pop xchg fsubl imul lcall mov push dec jno fdivl (bad) rol add fdivs mov pop add stos jnp xor dec cli inc pop xchg loop sub push aad stc adcb repnz shr push mov fiadd sti mov or mov mov jle lds jno or jmp xlat mov xchg cmp push cmp add nop mov jb push or mov cmc cli sbb fs xor aam (bad) fidivrl popl cmp add pop jne into adc insb add inc push jbe pop bound imul mov out (bad) xchg sub out push or add sarl mov dec pop rorb sti sbb sbb ja fs jle or orl (bad) xor dec mov orb test bound lret xchg es std lods loop in cmc les adc outsb ja xchg ret es stos lock or lret add add dec popf es inc inc lock xor gs lods push ret scas ret mov into cmp outsb sahf xor sub out push add xor push call (bad) and scas out stos pop sub (bad) jae pop int3 (bad) xor fucomip out (bad) rorb insl (bad) adc add ljmp icebp aad xor adc adc sub paddsb mov sbbb addr16 mov mov push sub and lds fwait lea xchg dec and jle es mov jo fild popa stos es imull add rcll (bad) xor incb inc mov mov lds and nop cmc fwait lds pop xor pop adc sbb add ret rclb push push dec cmp bound push arpl or mov cmpl rcrb or mov add fldt add inc (bad) mov (bad) fdivp inc mov and and mov (bad) outsb xor push jp adc jl daa call rcll loopne movsl dec icebp popa inc out iret mov jns roll push cwtl sub es adc push dec bound lea add mov pop pop jnp js jnp jecxz inc cmp pop cmpsb js and push mov int cmp adc mov adc pusha notl in inc sti ret mov pushf rcrb pop das inc push js addr16 pop mov pop lahf lods or ljmp mov mov imul add xchg mov jle add addr16 jno cmp in adc pop (bad) js (bad) es push movsl stos rcll mov outsl lahf (bad) pop stos pop insb out lcall out fiadd lock enter int3 mov dec sbb xchg sbb xchg fs sub aaa out sub cltd sub add cmp xchg jae push scas imul add pop out sahf enter pushf inc (bad) stc dec push push (bad) cmc jo xchg push lret aaa in sub loop das sub add lret sub test push ja (bad) add push jl xor nop jbe add xchg inc cmc sub xchg jmp jo cli push sbb mov mov mov sbb jl imul or std scas daa sbb mov call lods loopne pop out xchg hlt mov mov push in cmpsl ljmp mov or mov add add jge movsb rolb sbb fldenv jmp hlt pcmpeqb adc lret sub mov cmp mov jp das inc movsb mov scas (bad) (bad) xor icebp or jp test addr16 jle mov popa cmp es dec add add pop push test push ljmp sub jae or lds xchg stc add push jl xor int test sbb adc jg mov imul add add stos movsb lds lds cld mov pop adc outsb xchg add mov fsubrl iret mov sub lods jle out inc lods mov mov dec dec sub pop popf test pushf adc mov (bad) sub sahf repnz cmp cmpl adc sbb push test lcall sub push fsubr add sahf arpl js mov or lds mov es push loopne jns mov pop lahf out bound and inc cld jge jno jle dec mov (bad) lret inc jne push les das mov jmp mov out fimul mov xor out insl jmp cld lret lea jb clc fs mov mov movsb or add push insl pop push add data16 xlat stos mov popf dec sbb inc push jns stos fwait pop inc dec bnd fildl lods pop jp mov mov push add stc cmp sub dec (bad) shlb add mov data16 pop mov add adc mov addr16 mov adc cld cld cmc jnp pusha addr16 push nop scas rorl fiaddl xchg js (bad) mov rolb mov faddl cli (bad) popa nop cmc dec aad mov idiv add or and mov mov (bad) pusha lcall ret das cmp scas add shlb ret cmp xor fwait push and idivl xchg mov xor inc dec push cli cwtl std (bad) sarb add lods jge dec data16 (bad) xor adcl sbb add add call sbb addr16 push xlat fsts pop test jge dec xchg repz sub push in bound jmp movb xchg data16 inc push sbb pop pop inc (bad) fwait mov test and xor sbb mov loop in imul movsb mov add jmp sub jbe mov add (bad) mul bound outsl aam inc in loope pop rcrb inc jle sbb ret push push in and jl mov add push mov fs fcom out mov jl mov push cmc or pop push jae fistl cmp add push insl pop shrl mov je repnz or fbld mov add mov mov faddl mov adc add mov jmp std cmp sub push mov mov mov mov cltd enter notb pop psrad int out cmp add inc dec aas add nop int jnp add pusha stos fidiv subl adc int cmp out xchg les mov pusha aad sub pop ljmp push popa mov les mov sub fdivs jo jmp dec (bad) arpl mov aaa xor mov stc aam push incl stc in push add add pop cmp mov outsb fcmovnu cmp cmp stos rol das repz xor popa aam jg in (bad) lea movsl loop pop push ljmp sbb lcall and inc cmp lahf sbb sbbl adc jg stos in orb jb pop adcb jle ja aad mov add mov cld adc rolb xchg cmp jns jecxz or ret fidivrl jbe adc es rcrl lahf fwait (bad) std fnop lahf mov pop insl mov fisttp cmpsl loop scas sbb rol xchg pop lea add mov sbb stc cmp jmp cmp sbb cmp loop add pop and aas sbb addr16 lret mov mov fwait pushf test and and jmp xor push add fcoms cs or loop add add add ds push shl daa push data16 and (bad) push xor sbb xchg movsl aas sub xor add icebp (bad) mov lock inc push push push jo or test daa push cmpb daa jno push mov lods fidivr push test mov inc cmp mov aas (bad) es lea add add add dec hlt pop (bad) imul popf or inc xor loop cmpsl in scas adc push and mov stc xor push outsl mov jb (bad) dec in shlb lcall or call out pop addr16 mov insl jbe dec jmp lcall add aad pop jge pushf sarb pop cwtl insb call mov movsl in cmp lods test stos inc inc cmpsl sahf (bad) mov cltd (bad) jmp (bad) xchg mov xor xchg (bad) dec imul je test jb stc cmp pop sbbb jbe xchg outsb inc adc add or addl in ffree das pop cli out xor (bad) out sub and decl rcrl add mov mov push fsts fistpll cmp lret iret out jno es stos les call mov les sbb add test push or add ljmp cmp scas in fisub aas sahf call inc jg out sbb xor movd mov lret jecxz mov das (bad) sbb rcll insl sub sub repz out mov das sub test and jmp jo je addr16 mov sbb adc mov test repnz movntq and dec rcrb stos lea ljmp out sbb aas pushf enter or leave mov xor adc rcrl add fs ja mov pop test stc aaa out in in sbb add pop repz int3 scas lods inc dec xchg test cmpsl mov mov std jbe mov pushf scas or loopne test imul pop add xor push jb or cs push sbb mov mov mov cs push shrl scas mov inc cmp out add mov mov gs push sbb cmp imul push push es imul jb sub fistpl rorb push jae ret daa jle pop push inc mov jbe into add scas cmp fsubrl lahf out bound scas xorl xchg dec add (bad) mov and inc jle insb push pop xor jb (bad) clc jecxz scas data16 aaa cmpsb mov insl aas push or mov sahf (bad) in pop and dec cmp (bad) je sbb dec in rcrb sbb jnp ljmp xchg sub fwait into pop mov mov pop mov xchg push pop jg add add pop inc data16 mov xchg hlt lods sub sub xchg out lcall sub bound loopne cmpsb imul std sbb fist or and inc out out cmp adc adc repz test out fs jno push subl or sub mov mov mov sarb (bad) jns and dec fiaddl int sub data16 pop adc icebp or mov mov cmp adc jne pop insb mov inc gs xchg mov sbb inc rcr imull lcall (bad) movsb sub in (bad) clc addr16 push out nop sub add push mov or xchg sbb sub imul cmc data16 dec repnz inc es jge daa call loop jg sti mov xchg aaa scas cmp mov es lea cmp and and push jb add dec fimul add cmpsl js jbe in add add fs add stos lea lods or pinsrw js fwait ret jge shrb in push dec (bad) lods mov test pop mov push sub push jge int3 fidivr ja sbb xchg jns movsl add add add into dec aas test data16 mov cld hlt lret les mov sbbl pop sbb jecxz sub push mov jg mov sbb push jno xor test jbe mov cwtl stc jne xor mov mov into data16 jp push pop (bad) mov out add sbb jp add sub bound add stc test xchg xchg popf icebp xor jge mov mov testb adc jae cmpsl js jle es dec dec mov pop cmp lea cmpsb mov mov pop cmp sarl inc or xchg xor orb xor and xchg cmc lds jp jo and in fs cltd shlb push aam out iret cmp or subl inc popf (bad) push mov pushl or mov hlt es or imul inc pop cmc jb test jl,pn mov add mov fadds ja pushf sub jg add mov lods hlt cmp adcl mov or inc imul or push in add lock (bad) sub inc mov jbe jns outsb clc (bad) jno aaa in cmp popa cmp mov add test xchg (bad) xor in clc es pop (bad) aas lods sub cmp fmull ja push cltd data16 dec adc int arpl push mov mov addl inc jb rorb pop sbb add and add add adc sub xor iret push lds xchg fnsave and lea int3 sti mov dec jge iret dec push aad adc leave sahf xchg sbb (bad) movsl mov arpl repz (bad) sub or mov sahf arpl push jp pop fsts xchg add cmp dec dec push je fbstp add add icebp mov cmpsb mov into add mov popa cmp out dec (bad) nop lods (bad) mov pop adc in push dec popa (bad) xchg mov out mov sbb cmp sbb xor (bad) jbe sub or imul iret adc (bad) cmp lret xor inc test add add loopne test cwtl mov sbb loope (bad) shrb ficoml or mov sub fisttp repnz (bad) sbb inc icebp aad and mov fadds jns adc popf cwtl dec jno popa mov daa call mov sbb popf les inc pop mov aam dec cltd or inc (bad) jge and cmp cmp adcb adc sub call mov loopne aaa mov cmp inc shll sbb sub xchg sti int in (bad) imul popf imul scas lcall cwtl sub enter pop mov add repz cld mov pushf xor or test push cmp xchg cmp or hlt mov pusha out cmp loope jg sarl push xchg dec shrb xor inc push out push popa or dec mov and and aas (bad) or into and inc jge iret pushf sub cwtl ret jge mov (bad) (bad) pop dec (bad) (bad) div and sub pop cltd test sub mov push xor inc fsubl add testb pop add jge js jle lods pusha stos (bad) pop mov stc ffree test shl ja adc lahf cmp add pop cmp and stc inc outsb xor nop add xchg sub mov mov jo in or mov imul pop lock aas push cmp mov loop loope add add inc je cld sbb mov icebp insl sti and imul push push test pushf mov das add mov lret rcrb (bad) and and cmp mov cltd and push movsl into pop dec (bad) and mov sbb lea js xchg mov xor or add push loop popf test out sub add loope mov lock fwait pop mov add or fbstp loope into mov mov scas sub loop mov jmp aas stos in dec sahf cld xchg mov out mov dec cmpsb and adc fsts add mov push pusha repz lock lock faddp stos cmp push jbe into push xchg push arpl in adc mov pop dec nop call loope dec (bad) push out cltd xchg repz mov mov mov xchg fisttpll mov ret adc fwait movsb mov in push (bad) rep aas call cmc xor push xor setns outsl hlt loope js jnp lds rcrl test cmp jb sti (bad) imul roll outsb into in ret dec (bad) nop cmp (bad) jmp push xchg (bad) cld outsb xchg sub pop inc mov loopne adc dec or sbb lock xchg (bad) out aad jo xchg in jl mov les sar jle push mov imul test or aas pop mov cmpsb pop sub pop fstl and (bad) and pop and in ljmp hlt ret call adc pop jge cmp or clc and iret mov test mov add add repnz fiadd or xor mov repz dec xor cmp cmpsb jle push push loop xchg and push xchg test pop scas sbb jae int pop inc movsl jl dec push ss lret aas jge fsubr jge call sub lock fcom popa mov cmp add into jns ret mov (bad) pop ja int sub cmp sub cmc jmp adc rorb arpl mov push call or stos jns dec lods les test add cmp arpl cmp mov sbbl fstpt aas sahf shlb ljmp imul jmp subb repz movsl lods ljmp call xor lea push or stc fmull in mov adc insb aaa cmpsl nop stos xor or pusha mov insb icebp (bad) hlt xchg dec mov mov stos pop xor outsb sahf add add pop mov loope cmpsl (bad) std (bad) mov scas scas jns sub sbb xor mov inc add (bad) pusha push leave shrl xchg pop xchg mov (bad) push mov loope dec (bad) cmp mov inc lcall jmp popf inc out hlt popl mov add aam popf repnz stc loope cld sub ljmp adcb add mov out jmp cmp or out add daa imul mov or out mov call and cmpsb xorl popf imul ljmp add add push popa xchg push jmp repz mov loopne adc sbb dec test cmp stos lea mov ds mov pop test sbb ret cmp in cmp sub inc push insl leave cwtl fsubl imul sub repz mov adc test fstpt dec cmp push cwtl pop arpl gs hlt retw inc fcoml fstpt add imul cmp jnp jge mov push int adc jb pop mov jmp dec mov out jg daa and inc pop jnp add std sbb push sub cmp in icebp or fidivr xchg (bad) les push pop roll cmp adc xchg outsl add sub jbe jmp or ds (bad) iret jns insb fwait adc and iret cmpsl jne inc jg inc mov sbb in inc hlt and shlb xor push push cmpsl in stos adc jle and cmp cld jns xchg aas outsb outsl adc lcall popl test cltd rclb aad add mov outsb push insl pop xchg mov pop int3 jg cmp aam outsl mov out (bad) aaa hlt sahf jbe xor sbb repnz call sbb dec nop (bad) jmp les jl and mov sub or add imul add out (bad) fwait fwait (bad) lret arpl sbb test cmc or sub mov push add push jo sbb xchg outsb stos popf sbb pop out dec cs or inc jns mov fiadd shrl push stc imul inc fldl out repz lock push in out ret cmp sti push lret cmpsb into scas ret es mov shrb jns dec sub jb xchg repz jmp jnp add add lcall stc cmpsb je lock mov add mov and mov aaa shrl and (bad) loopne push adc outsl ret mov call loope pop leave and pop test repnz inc imul lcall out dec inc stc roll add add mov fcompl ror xchg jbe mov fs and xchg (bad) std cs out dec sbb pop out dec cs xor sub ss fisttp jae test pop lock mov add inc test dec stos jecxz or fwait inc jl loopne adc pop lods arpl add add xchg lret mov pop jp xor sub adc mov fdivrl mov inc push ss call aas sbb shll adc out jp xor dec dec incb test repnz loopne dec iret mov repnz loop xchg jp lcall add add or or fistpll das sbb ja push xor or stc lods cltd int3 and clc movsl loope mov jle arpl rcrb cmp lea jbe fnop mov addr16 xor xor inc push lods (bad) lea xchg mov mov xlat test add enter add jl jne add jle leave fs add popf in fidivr or (bad) cmp data16 inc xchg mov stos ja add dec adc les mov sbbl or lock jae mov (bad) ljmp inc (bad) loope jecxz push cwtl xor add bnd pop push sarl jne test xchg push lret addr16 add mov xor sbb insl imul lahf cmp scas jbe mov icebp pushf mov (bad) stc or cmp pop fwait lret dec push adc dec mov test mov fisttp add repnz jp adc test push cmp test jmp fs rcrl in cltd sti xor jb push ret push in out jmp outsb sbb fs arpl xchg inc frstor imul hlt mov mov pop push rclb push xor rcl test or (bad) xor inc cwtl dec rcrl jno call mov pop xor sbb and xchg bound mov outsl and clc sbb xor les mov jns imul lahf rol mov sbb push mov and pop add push pop aaa mov sub or nop mov pop and loope and outsb out nop js adc xor fwait jp into rorl lcall mov jl mov popf inc xchg fptan in mov mov clc inc sbb fnstcw and imul or jns mov fnstsw and and sbbl xchg (bad) jmp fisttp daa repz (bad) mov outsb (bad) gs sub mov dec stos sbb repnz arpl sarl ja add (bad) sub sahf aas call sbb add dec jno xchg and jmp add cmpsb in aaa mov dec push adc cmpsl in push int repnz jecxz inc mov jnp (bad) popf jbe push xchg jmp sub mov adc adc push int leave pop insl mov mov dec jl (bad) cwtl add pop in xor jb icebp aas lret arpl lahf data16 xor clc jb mov mov ljmp aaa cmpsb out push jg add pusha lret fmull in push push fdivs push test mov (bad) cmp mov aas ljmp stos scas mov sbb ds dec push add add jcxz int3 loop xchg sbb lcall sub aam in fsubl xchg xlat lahf cmp das push mov xchg por fwait mov push push loope xlat aas mov popa cmp mov pop xchg js add orb outsb inc sub mov pop out pop call jns and xor cwtl pop lret mov scas enter out shr out (bad) loop xchg xor or loop mov pop popf testb mov xor sbb jae sti imul pop or add xor movl ljmp and xor pop stos mov divl sbb mov sbb out mov aaa jge sub lock outsb lock fwait xor arpl test xor mov rorb add shlb scas lcall rcrb stos lea ljmp mov in dec push hlt inc sbb cmp mov cmp out lods sbb je xchg sbb cwtl pop push dec mov das xchg sbb fwait inc je mov jne dec add aas sbb out and push sub add and je or inc fs nop imul pop stos cmp xchg sub je push mov jg adc push clc hlt sbb loopne sahf insb lock jno or pushf insb ret popa pop adc imul mov js xchg mov sub (bad) aaa mov add out in push cmp outsl loope call jg fwait (bad) lret rcrl pop aas or sub into jmp das cmp fistl scas cmp mov cmc (bad) mov adc pushf int3 or out pusha mov mov in pop (bad) mov xchg mov mov xor pop or add sub add inc xor adcl mov jbe dec and sbb insl sub pop dec aad fisubl in testb movsl mov imul xor jbe sub outsl dec shll sysenter push jmp cmp xlat sar aam (bad) addr16 adc and iret add pop inc sub rcrb lcall leave mov cmp pop pop xchg out jmp sbb push popa les pop push dec xchg add (bad) mov add js mov xlat jecxz into scas lcall enter xchg jmp cmp (bad) out outsb xchg push adcb arpl add add and insb in leave or imul test movsb sub xor jbe out sub xchg mov dec insl mov push cmp push ret sbb fisubrl idiv hlt movsb aas sahf or mov sbb push lea pop fucomp cmpsl insb pop mov mov add mov inc icebp addr16 and jbe aaa add fiadd and adc push add daa (bad) movsb cmpsl or subb loop movsl sbb mov jp lret mov adc jl inc push cmpsb xor (bad) sub pop hlt mov stc lods cltd int3 pop add inc shl das cwtl mov data16 add loopne pop xchg ret jae lods loop data16 cmp adc mov dec cs mov and xchg mov mov pop and cli imul add out pop jp xor add or ret sub cmp (bad) xor aas outsb loop push (bad) and mov (bad) hlt pop add ret sbb jge push add in repz imul sbb pop stos mov sbb jmp out arpl jnp mov or insl dec (bad) sbb cmp mov popf adc sbb or or sbb sub mov jns mov daa pop stos xor jno pop xchg addr16 sbb pop (bad) push outsl add popa xchg mov into cmp mov out inc xchg (bad) jg mov subl dec sbb xor shl mov push add sub sbb sbb dec mov inc push pop inc and pop jb ja xchg jp arpl cmpsb je mov mov dec test lods adc add iret mov push aas cmp lret dec xchg sbb and or or mov sbb insl fstpt scas into mov pop cmc sub mov bound mov and and loopne fidiv pop gs lods mov jnp movsb sub enter jno push add jmp test xor sbb mov (bad) fwait push add out push scas fwait lea dec stc je xchg xchg fidivrl pop mov out fbstp cmp cs mov out nop adc imul dec sbb sub cld fild add add dec dec jne (bad) cmpsb movsb sub or enter mov mov lods adc js in pop pusha xor dec xchg xor xor pop sub rclb fnstsw or ret popf std xchg and mov push testb mov data16 outsl inc pop int3 add cmp push aaa push sbb add or push mov nop in jo leave (bad) mov xor scas test fdivrs sbb popf sbb sbbl data16 addr16 int stos push pop sub mull int clc push fcomip xchg mov lock inc ficompl iret roll out cmp aaa mov add and loop push mov lahf aaa xor inc mov jno cmp jo pop xor (bad) adc cmp inc inc sub fisubr cmp scas mov adc lret xlat nop test loopne ds (bad) hlt movsb aas cmpsb (bad) sbb jns add or push scas pop enter push xchg repz inc cltd ret sahf (bad) dec ljmp pop sahf repnz add stos lea lahf (bad) cmpsl add test sbb and movsb cs xchg cmc dec aam out and test and inc test cmpl repnz xchg test pop pop movb add push push mov mov test (bad) int3 xchg fmull jle xchg js pop mov cwtl andb push fstl scas xor insb mov inc loopne pusha test and pop jmp jnp int mov xor sub xchg sbb cwtl pop lret leave mov cmpsb fadds in xlat mov mov add add lcall inc add mov adc or sub sub push outsl pop jbe aaa stos xchg cmpsb (bad) cmpsl xchg fdivrl adc scas adc out movsb xchg pop mov sbb adc and xchg arpl ja loope adc and jmp push add or data16 cwtl or inc enter rcrl jp push testb mov jo aaa test push dec cmp xor lock mov push adc imul and jecxz js inc aas pop lret aas stc int mov mull movsl mov add test les btc nop mov idivl je push lcall sbb and shrb scas or mov push lods sbb sbb (bad) aam rcrb sti and imul pop sti mov ds into jg outsl adc mov (bad) aam sub ds loopne je ja xchg arpl fs inc imul jno movsl inc cwtl pop dec cmp mov mov call xchg mov fs data16 lods cmovl inc jae aaa icebp add push aaa and not (bad) bound mov fisubrl lret xor cmp push mov rcll loop add add push jmp xchg and pusha lods push pop push pop inc cltd push or or pop sub lea xor orb xor jle dec les cmp cmp lret and cmpsl sub stc cld hlt xchg sub in add fldt std xchg sub pop pop (bad) repnz mov pop mull or cmp add dec jns lahf adc mov pusha and aad out dec cmp push mov push sub cld shll adc sar push rcrb jle push xor pop nop and les add add inc mov jns movsl sub push scas and mov shl jns sub jmp dec cmpsl cli cmc push push push mov cmovl es sahf add sbbb out sub dec xlat xchg or sub leave out hlt pop dec add scas pop decl add mov push jp pop add subl cmp push add psubq inc dec and shrl insl int mov and (bad) sbb stos sbb push sti xchg xorb (bad) out mov imul inc lahf scas shl gs mov (bad) adc add cltd mov loopne push test jnp das rclb in pop fldcw mov pushf jo in ret lret xor push jecxz into push sub cmpsl push scas and nop xor in pop and frstor cmp jecxz in add add mov repnz push xchg cltd push xchg mov and pop push insb sti inc push rclb ja test jno mov lcall sub arpl cmp mov mov mov fisttp (bad) mov or mov clc push sbb add cmpsl repnz arpl push jns mov jmp sub pop nop ret jmp sbb xchg test inc xlat dec loope mov sbb incl repz das or repnz cmp mov mov mov push mov xchg movsl sub xchg push mov cli xor call jns out xchg add cs push repz les or add movsl dec jne lds punpckhdq cmp sbb aas jns (bad) mov push xor dec insl adc jbe dec cld cmp data16 cld fst lcall leavew lret jl sbb mov aad adc fstpl insb or add add add test imul addr16 pop adc and and (bad) fidivr scas sbb jmp mull shr sbb dec or sbb test test lea insl (bad) (bad) iret insl add jmp adcb add add or jl popa movsl pop xchg xor mov lret jecxz scas ret xchg ljmp test sbb inc pop lretw dec std mov ja mov adc sub aaa outsl lahf iret enter mov in push in cwtl inc or out aam mov pop dec je,pt inc lods aas xchg sbb add sar popf bound add xchg sbb mov adc repnz pop mov or push fcmovb inc and fwait xchg adc and jl pop pusha lret lock (bad) mov stc mov mov or addr16 sarl in out test inc xlat icebp imull test push jle repz add add fsubs ret adc cmp pop hlt into cmp iret pminsw addr16 sub insl push cmp xor es push sbb enter adc push int3 dec pop stos mov subl scas pusha or jl rcrl add repz dec or dec ret mov push enter sbbb aas in lea sub test push add cmpsb and cltd cli push xor ja sti call ret outsb movsl cmpsl je cmc arpl out (bad) ret push jmp and out mov and (bad) sub or xchg add add stos jge shll dec js shl gs mov or test ljmp int popa mov iret mov mov mov pminsw jo fdivrl cmc js xchg aas test pop aaa dec (bad) nop mov imul adc sbb add pop and cmpsb es fisubl jl jne push cmp xchg js cwtl and inc (bad) jne call outsb mov xchg adc mov gs mov outsb push jp xor jmp test dec dec ret cmpsb mov mov in pushf (bad) push notb movsl insb pop mov hlt fildl add add popa add lods pop mov add fiadd and pushf repnz pusha das push sar sub movsb cmpsl or xorb iret js inc addr16 clc loop push xor andb aaa cmp nop xor into dec mov scas fwait lea sub cmp inc push fwait in mov add xchg jecxz push xchg std and jmp xchg mov cmc (bad) (bad) imul xor sub int in rorl movsb flds adc lods xchg or cld aad mov mov and cmp aad jns inc cmp outsb imul add cmp retw sub sbb sti imul pop out test fcmovne add popa ljmp fild mov aas dec sbb fwait cmp or sbb fstps mov out sbb push sbb mov xor sub fisttpll jnp jl inc fiaddl add cwtl add out push mov fwait and addl inc mov adc js movsl pop xchg xor push bound jne push popa cmp mov cwtl xchg test in loop or divl faddl cli lds cld inc cmc lds sbb in jnp add ss add add mov push ljmp pusha (bad) jecxz push arpl fs mov adc mov push mov mov call js pop pop insl pop xchg xlat mov loop mov xor cmpsb or sbb mov fcoml dec push (bad) and insb dec sub cwtl add fxam xchg adc sub inc xlat and scas ds in ljmp insb xor mov daa mov inc js les popf inc dec mov or cmc es pop xchg bound pop mov std sti mov sub ret out dec sbb sti out dec cs lahf popa cmp add add mov cmc imul lds push xchg ficoml push frstor ficomp push jae mov mov sahf in push xor inc or jo pop cmp sbb push scas or pop (bad) cmc add xor mov adc mov add add out movsb popa dec call sti insl and fldl push out sub orl mov gs les mov mov adc mov imul push jno pop jmp jle dec inc lret repnz adc mov jecxz es or add add mov stos pop cwtl inc js in push lods ljmp loopne sbb cmp cld imul pop mov jge add adc cmc xchg stos sbb mov cmpsl in scas adc adc mov clc cmpl outsb mov inc mov and fdivrl cmp mov pop add add push push lods mov fs das outsb pop xchg sahf arpl aam mov inc sbb leave call leave fistpll add leave sub mov outsl out push sbb in call insl rcll cmpsb xor movsb push dec mov mov xchg or out lea sti test pop push adc add add inc scas rsqrtps stos pminsw int mov jne lahf cmc adc scas aaa mov stos inc sub pop mov pushl out sbb mov mov mov test mov or pop xchg sub pushf js push pop jnp jp mov mov stc idivl data16 sahf fisubr sub into cmp xor test or scas int3 dec and outsl mov or cmp in add adc sti pop xlat xchg sub mov imul pop push addr16 jns sub in daa xor add aas ss clc dec nop (bad) movsb stos out jge daa add rcrl push js dec mov sti hlt jns scas fnsave push out adc cmp push xor pop jmp stos jb scas pop addr16 mov mov (bad) jecxz into scas lcall enter xchg jmp cmp mov mov dec test inc and pop fwait pop ja sub ja outsl xchg cmpsb movsb insb insl or enter lods jnp xor cmp or jp or movsb lret sti jp jge insb sub ret cmp call scas arpl cmp mov arpl out fdivrl adc sbb (bad) loopne and pop enter sbb mov imul jecxz hlt mov pop mov push mov shrb mov jns addl or rcrl jp pop (bad) add xor dec dec pop je and js movsl adc aaa pop fdivrs outsl shrb add xchg out mov scas mov (bad) repz mov stos test hlt push ds mov cmovl sub orb ret lds mov jp sub adc dec mov in push xor scas xor and cmp xchg arpl arpl jmp cld popa cli adc push ret mov imul scas pop test aas fist cmpsb insb and dec ss mov sahf add and push inc ja sbb cmp push and (bad) jmp loope xlat (bad) mov imul jp xchg sub or and out (bad) lds rcrb imull sub pop push add add add pop push jecxz test or pop hlt cmc jp jecxz dec mov arpl stc mov jns ljmp xor mov or and test and enter sub xchg add js mov mov sbbb mov push (bad) xor imul add add and rclb jl dec sub lods ja (bad) cs orps in jge add or sbb sub pop xor dec push insl add aaa shll adc or lods add jns daa call cmc test shl out pop popf les inc sub add ljmp sti and inc rcll jg push leave dec dec psrlw ljmp out mov idivb jp loopne lahf in xchg leave xchg jns insb pusha xchg cmpl jbe xor div jae or sti aad push iret mov push dec les sub mov add adc sub fimul insl ss xchg inc frstor popa jl push push test stc jno xor mov or aam add stos out sub jnp daa push pop add mov mov inc xchg xchg cltd int3 mov dec adc repz dec jns jmp pop dec jle das imul pop jnp pop xchg in pop pop add loop sub sub popa gs jg rcrb inc shlb pop aaa icebp add (bad) inc mov mov fwait inc dec mov xor mov lcall imul scas lret lock test dec call inc inc xchg stos hlt setno or push sbb dec push add mov push xor in fmulp cmp rol jae fild dec add mov jb test push and insl mov dec add add add add pop xchg and stos aad mov repz or mov call inc leave bound (bad) or insb inc lock loopne sub xchg sbb in loope mov mov outsb (bad) hlt cmp lods mov lods fild enter or jnp lret cmp movsl dec dec (bad) pop push add add pop fsub xchg movsl js ljmp mov sbb out cli mov and shll mov jo and scas adc or test and rcrl cltd jnp push jl (bad) shr fs xor dec decb (bad) push xor aad arpl and xrelease inc push xchg dec fstl push lds lods cmp xchg and inc add out pop jno mov insl setp mov or pop (bad) xor ja clc ret xchg ret ljmp lods dec mov in mov and xchg inc dec lods movsl hlt stos xor mov cmp and lea insb xchg dec adc test add pminsw mov in repnz (bad) movsb into push add dec xchg jmp addl lea fcmovnb test mov or dec loop jb push sub add add outsb inc and mov pop push and mov push xor adc mov in (bad) mov arpl call lds sub popw fistl ret ljmp xchg jl xor add clc jb cltd dec jno insb add add ss xchg test mov push mov fldcw mov bound cmp adc out dec jns push bound ds or mov dec mov mov xor sub jo,pn test aaa mov pop ret lds iret cmp mov push sbb aad das mov adc mov and jp mov mov jmp adc dec gs mov xchg popa push add prefetchw rorl or int cltd or mov (bad) and mov xor jmp stos pushf pop icebp xchg mov aam add mov add enter bound push scas ja lock add outsb xchg pop rolb movsb sbb adc sbbl insb (bad) dec out insl mov and ss cltd mov and mov in hlt daa cmpsl mov cs mov int add dec (bad) lcall mov ja xchg cld mov push mov stc das std xchg or xchg push cmp adc ja aam test dec inc lret mov test jge test jbe adc test mov jnp lds push test push mov repnz add imul mov test (bad) notb mov leave xchg jae add inc and mov imulb sahf sub push adc std insl popa (bad) jns xor mov mov dec push push jb mov fnsave repnz mov jp popf add es mov test cmp dec arpl stos js mov sub outsb and xchg jae sarb jmp cmp aad stos bound lea call mov adc push cmp jns (bad) pop sub cmp aad dec fcom pop in mov add sbb (bad) out ds fisttp mov into push cmp stos xchg test push stc cld hlt xchg pop fstl and outsb (bad) cmp loopne aad clc push pop fiaddl xor dec ljmp loop mov jmp cmp cmp pop mov sbb popf mov in lcall out push xlat ret mov mov js test es lcall pushw imull and pop push mov enter dec mov push fwait mov stc jbe pusha rol in pusha mov cmp lods and and xchg divps xchg js xchg cmp xor rolb test dec out mov je mov (bad) daa lods dec fcom les imul in fs xor dec (bad) xor mov add jle mov std hlt or (bad) cltd lcall add pop and xchg pop xlat or mov pop add add ljmp dec jp mov adc and repz jp cmpsl std pop dec (bad) xor cwtl hlt add jg,pt xchg xchg cld into lods hlt cmp js fmull or pop dec je cltd cmp jne mov ljmp mov shrl movsb jp in insl jg stos or sub sbb push and xchg and cmp jecxz push imul dec sbb les mov in data16 sbb sbb std mov imul xchg out ret add lret xor mov sub sub lods mov imul xchg mov jb test jbe,pn mov out popa scas pop jl jbe xor sbb inc cmp mov clc mov mov cmp (bad) in mov stos pop add jg add bound adc mov and mov dec in mov movsl outsb adc sub dec dec pop cmp lods sub mov std jns mov (bad) stos aam mov dec data16 add das repnz sub mov je push mov jp xchg outsb sbb repz push pop arpl jmp stc mov or andl sbb jle xlat push pop push push negb pop rorl mov in inc dec ljmp insl loop mov ficomp repnz insb rorl inc mov cwtl jp aaa call add sub pop add pop jne adc mov aaa mov jae and ret mov das loopw dec jb rcr rolb pxor push (bad) icebp push pop int addl or popa jmp xchg stos push bound (bad) cmc nop out jmp or xchg js add sbb test incb add add jae push popa mov and nop cmc mov loope mov scas mov test out out add sar xchg xchg sti xchg popf (bad) mov es out sub dec sbb adc out add push scas jl loopne push out pop movsb jmp (bad) or pop sbb (bad) mov aas and negb jle pop jl lods mov xchg push add gs pop add dec xor movsl insb int3 imul push mov stos pop (bad) xchg pop imul sub dec add bound or or push nop add add or jne dec mov adcb jne lods test out cli adc xchg cmp jo aad lds xchg imul (bad) fs int mov sub pop mov mov sbb fst inc (bad) js add into dec and sbbl stos (bad) aad lock out jne mov xchg fidiv dec mov aam sahf (bad) sbb fnstsw sti out fiadd and adc or pushf adc inc mov es mov cltd sbb hlt mov mov loope add lea sbb bound (bad) xor pop add add push fdivl decl mov xor shr add in iret dec (bad) nop add add jne (bad) jmp pop or adc cmc pushf ljmp cwtl mov loopne ljmp jl jmp outsl mov mov shlb xchg ljmp dec incb add xor enter aas xchg push arpl pop xor hlt retw mov hlt in xchg dec es dec xlat push call fcmovnb cmpb daa call inc rcrl (bad) xlat xor and xchg arpl daa imul sbb cmp add add add inc daa movsl inc cld clc loop push xor mov mov jmp jb push xor stc negl ljmp lcall movsl jecxz shr ss in popl mov out cs adc adc cmp pop jmp mov add add cmpsb fnstenv sbb or push icebp (bad) in out mov push push jne pop rol sbb out push clc xchg add or xchg dec and add push lds jbe adc insl pop cmc sub movsb jbe pop popa or mov (bad) sub sub xor dec dec incb add add sub push dec jge scas jl shlb loop pop pop popa loope push add (bad) xor pop test imul sahf cmp mov pop imul adc mov out pushf jnp or repnz add mov out sbb mov mov es pop fsubl gs xchg out in popf lds and xchg repz push push (bad) in dec incb pop cmc repnz dec or aad or inc and push add shlb bound icebp repz add rcr jno mov xor mov aas jbe test and jl mov cmp je imul inc mov sub push or gs pop shrl add test jnp cwtl adc cmp popa sub clc cld add das dec mov add add add popa mov fwait mov sub addb mov push jmp call jno out iret sarl pop jecxz dec test loopne mov js push nop cmc dec pusha push or and add or ret add sar push jb out xchg sbb ja sti and xlat dec or lret enter stc and lcall rorl outsb xchg sub in xchg in scas mulb xchg sti push ljmp mov mov mov adc add das outsl xchg scas pop ficom rclb pop dec (bad) sub jnp push add add add add cmpsb imul sub addr16 mov add push loope cmp push sbb test rorl gs dec movsb push mov push jb sti or mov jns out push sbb shr dec cs push int3 (bad) repnz mov xchg movsl loop in ret enter add add movl (bad) imul (bad) jno push mov std dec push aas aas outsb mov jno jne test xor xchg in in adc scas or (bad) aad sub ss pop mov aam ret inc xor dec fild cmp pop mov add movsl jnp sbb cmc (bad) arpl inc clc and insb or cwtl xchg sahf jns repnz out test dec mov pusha pushf cmp push shrb (bad) stc mov mov test out jns add xlat (bad) inc les mov inc fsubl cmc icebp mov repnz out sahf push jb pop out push add xchg mov data16 test sbb iret add add sub push push mov xor pop in dec lea fs int3 mov mov (bad) leave inc sub (bad) out pop sub test push lods adc mov mov xchg and mov xor xchg fstl arpl sub mov in pop push mov lret pop mov jmp add push or xor cmp imul (bad) dec outsl loopne inc stos popa add pop adc sbb out (bad) cld mov sbb sub incl gs xchg mov sub cmpsb imul sbb jae mov aas cli cld lods xor mov rorb adc mov push out mov outsl rclb mov lods loop lahf sbb test das into xchg mov xor shrb mov jl adc inc aaa sahf (bad) sbb rcrb aas sbb les ljmp divl sub dec xchg jbe cmc add add inc and shr les jge roll inc mov jnp jnp (bad) push pop fstl or outsb ljmp loopne mov add scas fcomip dec bnd fild call mov gs or in mov mov (bad) pop pusha cwtl or icebp cltd cmpsb es lahf cmp pushf push jo mov fs lcall lret mov mov outsb into imul mov out insl icebp jle out fucom jno cli hlt lahf iret cmpsl cmpsl add ret mov loopne xor or nop cmc inc pop test cmp push add add sub pop mov dec adc ficoml mov loope repnz push rcrl lds stc cld adcl xchg addr16 dec sti push scas or push xchg mov xlat test sahf (bad) cmpsb cmp out inc (bad) in and adc stos and decb out insb pop lock add loopne sub (bad) cmc sbb out paddusb movsl mov in (bad) stc fmul (bad) cmp imul ret outsl push push pop aas pop push jp js xchg push jmp lahf lea std xchg mov push fstsw and (bad) ds xchg dec (bad) nop shrb stos inc incb adc cli add test in in std add movsb fstpt sub ds ret pusha mov xchg mov cwtl fdivrl sarl push cmpsl out pop in fs mov fmulp cmp fnstcw imul sub push or xchg inc mov aas andl sbb fcmovu sub xor and adc loope cmp lods inc ja xchg data16 call pop int3 jne dec outsl cmp arpl mov aaa lret dec ja or pop dec cmp mov xchg or push pop (bad) mov sbb pop sub inc push pop iret int cmc cmc jnp add dec pusha iret into push and inc (bad) jmp mov int3 mov jne cmc push dec dec jg inc loop pusha or test mov xchg repnz in jle xchg sub xchg test mov push jle (bad) mov sub or push repz add add lods (bad) push cmpsl push xor (bad) lods aas prefetcht2 insl decl out lcall jge jb inc dec popa cld clc adc push out ret aam jmp cmpsl jae jecxz push dec outsl jp repz (bad) enter out add (bad) movsl in clc xor xchg mov jmp lea add out cli mov cld lods or dec les addr16 pop cmp mov cmc mul cmp cmpsb fbstp mov and add std popa shl xchg in movsb addb jne shrb lret fimull mov add add jge jp inc es pop mov add jmp xlat sub out pop push cmp lret jb mov push mov cld pop xor mov inc mov xor jns mov pop sbb adc mov rorb mov push sbb dec jge sub cmp dec loop sarl pop jl mov mov lret imul add add arpl push add (bad) xor pop test imul pusha rcll jnp lods pop mov nop (bad) mov pop mov mov cmc js xchg aas cwtl sbbb dec (bad) in xchg (bad) cmp cmp dec (bad) nop lds sub test add das sbb dec or js sub mov mov ljmp sub (bad) (bad) data16 adc push cmp pushf std clc push push mov test mov ret pop mov and inc insl inc imul sbb mov shrb xor and addr16 add add inc movsb push dec sbb sti adc mov (bad) (bad) jnp fs mov cld mov (bad) cmc std mov out and mov push cmp mov mov test (bad) push stc sub add pop mov daa es enter pop adc sub mov outsb into push idivb outsl push sub fldz jl and sbb sbb pushf and xor mov sbb lock mov cmc pop push xor std scas cwtl mov mov outsl nop mov divl lods xor mov dec clc inc addr16 test lods in dec into imulb xchg imul cmp ret repnz mov dec pop mov (bad) fisttpl test and push out ret ja je aas inc xchg jnp adc shll into lds xor icebp mov dec aaa pop mov jbe sbb adc xchg inc or cmp daa jbe push add insl add sbb psrad inc and mov repnz movsl jecxz mov mov loope xor stos lea scas jp push jle mov lret mov ret in cltd repnz mov mov rcll gs ljmp push mov add jge mov xor or fcom scas push test jb in dec std int3 jp xchg scas incb xor fdivs xlat lret or repnz sbb mov pop cmp lea ret push leave mov aaa adc sub add sbbl in scas movsl outsl dec xor or pop dec and pusha in (bad) aas mov pop add stc lods cltd int3 dec bound ja mov sub xchg dec nop and mov test loop imul push mov negb add test mov pop pop (bad) add pop mov xor movsl sbb mov cmpsl sub sub push iret rcll ljmp rcrb mov fbstp scas pop mov and push xor adc out adcl mov bound mov inc int3 lcall fbstp aas jne lock arpl and pop out cmp sub lock mov ror data16 jmp shrb mov bound dec sbb repz fwait lea xchg pop add iret mov ret xchg mov mov add sbb pop pop push add add push sbb test out sbb add shrb outsl cmpsl ss inc cmc jae pop lock fdivr rcl stos or push (bad) ljmp push add mov je,pt xchg mov test popf subb arpl out sub fdivs cld aas pop cmp xor push sbb add stos out mov mov mov inc mull rorl gs mov loop xor in fisubr repnz call popa rcrl mov subl sbb pop push xor movsl mov and in mov test lcall pop jb add lcall add lea ljmp out xor daa cmpsl xchg xor xor dec sarb repz sarl dec adcl imul dec imul in add inc sub pop sub xor jb jecxz lds pusha xor jl loop pop lret xor into jns test dec and and movsl adc or xchg push ficompl test mov popf push (bad) or daa and xchg fs mov hlt lds sahf fimul lahf dec in lods sub call cwtl les sarl out push dec jge scas outsl mov cwtl xchg cmc sbb insl add xor add add add add mov cwtl xchg pop dec cmp mov in push inc js imul adc lds fs js fwait enter pop add enter add inc lods loop dec xchg sbb lea pop lahf in fstp movsl xchg aas push and or movsl mov sarl add fcoms btcl outsb add fs mov dec (bad) xor inc push sarl and mov ja out lret (bad) xchg in xchg adc (bad) jmp fsubrs mov sahf (bad) lret sbb stos mov jle adc xchg dec add add sbb or sbb aad jp jae shrb lret loope movsl es mov addr16 add clc cmp mov mov enter fs out pop fidivrl pop enter cmc cmc clc popa mul mov test or and add add test mov or fcomp mov in ljmp aas jge mov xchg cmc xchg jo mov push cmpsl incl pop in fs movsl push or in ficomp jae mov ss outsb mov (bad) jmp cli adc xchg dec mov xor or or imul out add add pusha mov outsl dec in (bad) fstpl mov cmc adc xor jbe in rorl jb cltd sbb and stc mov (bad) scas insl in insl cmc sbb je or xor test xchg repz push cs pusha les push lods fwait lcall and lcall mov pop movsl movsl outsb or outsl xchg out add sub cmc scas out sbb pop push sbbl jnp stc mov sbb sub fcoms outsb loope nop xchg pop cltd lret aad sbb adcl fstl jecxz cmp lret jmp loop add push movsb inc cli repnz sub cmp push lea loop movsb in imul test int3 add or add push in (bad) mov mov lret add adc push mov pushf adc xchg sbb pop dec inc inc pop arpl movsb jbe mov imul adc shrb not lahf cmp or aaa insb out jae add fs test adc add outsl inc jnp mov jge mov lds adc (bad) jmp mov adc or mov mov ret and mov xlat movsl ds lds or enter adc add enter and push mov cmp add fcmovu lret sti jbe test push pop add mov jo inc es xchg in cmpsb stc mov ss jae and iret push pop push sbb push clc pusha cmp inc out fiadd leave loop dec repnz add add add add xchg adc mov push inc cmpsl mov js lcall lea outsl cli test sub dec mov jb or xchg adc test popa fimull lret or into in aaa mov loop jmp add test out flds add mov outsb rol popf imul popf adc mov fdivrp (bad) and nop js shlb lock ljmp lods add fdivrs mov popf imul test jg pop stos les bound and cmp mov dec sub aad clc fstpt add sbb (bad) inc or clc mov nop in cli sti xchg jo icebp out add xchg test repnz dec xchg jmp lods gs les cmp cltd fwait aaa xor dec fwait or aam adc and out decl mov call out adc pop add bound add cmc cmc clc popa fucomi push addr16 (bad) mov outsl fsubrl loope push sbb lret out dec (bad) nop (bad) (bad) mov mov push sub sbb pop add mov fcmovnu aaa outsl jle les lock xor mov aad js xor and jne aam mov inc mov xchg sbb fdivrs dec (bad) idivb push ret rcrl xchg push fsubrl xchg sub mov test outsb shll inc dec stc hlt dec mov cmp lea (bad) arpl pop pop or cwtl xchg imul and movsl sbb mov jns cltd xchg jnp rol std cmp cld nop add sub dec lods lock int inc jo xchg jmp push ljmp pop mov sub push mov xor dec and shl adc cmp and xchg cmp gs add mov aas inc dec sbb mov int3 sar push or test ljmp addr16 or aam rclb out testb and or dec fcoml and dec inc xchg (bad) dec popa adc lahf push aam loopne mov push sahf mov mov sbb (bad) and arpl add add imul gs pop test shl pop test xor enter jb outsl cli or jp test out cmp adc jmp fwait mov ds mov adcl sub gs loop pusha mov sahf push push arpl aas test or add add or fsubl or jne outsl or cmp xchg or mov inc insl adc fidivl into cmp in add push incb icebp xchg mov cmp (bad) (bad) pop or add cmpl inc pop mov jge add mov fistpll (bad) in dec mov mov xor sbbb mov inc cmp sub call and mov adc jle push xchg lahf mov mov fwait stc dec xchg pop mov inc fcoml loop xchg cmpsb sub or push xor lock sbb and xchg sbb out sub cmpsl je inc fimull mov rcl mov push xlat (bad) pop cmpsb inc aaa outsl or xor es aad mov idivl adc (bad) lods in pusha mov cli loop subl or add dec fsubl push push imul push ss out mov fsubrl (bad) into ljmp mov fdivl jae repz jg addr16 mov in das and insl loop pop shl lea add stc test imul mov jo inc test lret push add add subl xor xchg pop mov mov mov push fs (bad) ret add mov sub adc pop popa lcall mov mov add sbb lods nop fmull push dec aam add mov and cmpsl ljmp pop xchg inc and jbe dec cmp xchg sbb mov add repz icebp sub insb xchg in xchg daa stos push imulb mov or fisttp das jge push sbb rcrl gs stos (bad) sub push ja (bad) arpl push dec jge popa in sub rorl add movsl mov aaa repz dec inc inc cmpsb imul cmp inc jae push movsb outsl jo (bad) jae rcrl outsb dec mov imul aam scas xor (bad) jecxz push jmp sbb mov xchg adc dec test sbb enter negb or add out xchg aas add ret inc jbe inc cmp jbe loop (bad) or clc mov push cmp inc mov xor cmp test mov sbb insl mov test mov pusha mov xlat push inc mov stc (bad) push sbb inc fild add mov inc out and jae jno pop (bad) arpl dec and sub jp sbb sahf xchg sub pop lahf xor jnp jns loope out jle jno mov int3 pop mov enter jmp iret jb dec inc scas pop xchg adc jno jnp jecxz cltd dec and cmp add add add fcomip jbe ret dec js sbb sahf push je rol mov and addr16 je pop loopne add mov mov and cmp inc pop das js adc loopne add (bad) mov mov shlb and fsts stc ja xchg jmp mov add test addb and gs add adc sbb fcomps add stos idiv jmp sbb sbb test and mov xchg sbb les xchg push mov lds inc fstpt scas pop (bad) out das mov test mov pop mov scas jns (bad) icebp test arpl mov mov or sub loop sbb xchg (bad) adc jg iret cmpsl dec sar es insb dec or movsl mov add lods pop pop or mov jne test mov jmp sub xchg dec (bad) add mov mov inc outsl enter fstl mov jl addb push add arpl out lods cmp stos roll ja int3 jg insl popa push int add mov sub jp enter push dec jge stos push int3 and pop mov xor add xlat jo xor push loop cmp and or xchg rcr and sbbl mov (bad) sahf jne movsb mov into jecxz daa fdivrl cmp lods loop jmp cmp mov cmc mov or cmp mov fs ret mov (bad) mov cs push jl mov nop mov adc mov mov out add fldt inc mov add cmp sub insl pop fstpl mov inc mov loope int push out ret leave jmp pop fsubr dec adc mov jg out or dec (bad) cwtl fs lock or leave test insl inc lahf scas shl gs mov xchg out fs imul cmp cmp out int push xor push gs and bound icebp mov out jecxz mov fcmovb into push outsb cmp (bad) jmp add sbb dec jp (bad) xor ja add pop inc inc push xor pushf or xchg je sar inc push mov mov cmpsb add test add or push fnstcw inc mov clc sub bound jae les daa je nop xchg lret xchg pop push rcrb inc sbb ljmp add fldcw xchg cmc sub cmpsb pop xchg push push rcrb (bad) mov mov divl pop data16 cmp (bad) and aas sub insl loop inc adc adc lds pop pop test xchg test jb outsl and les xchg inc fildl sti or xchg add add stos adc pop jl in div jae popf scas lcall enter bound dec mov adcb mov add xchg fsubrs mov (bad) repz (bad) aam and lds mov incb add push in pop sbb negl lods lds add add outsb loop inc mov lret jne je inc addl scas (bad) scas or ret (bad) push mov sbb xor mov (bad) mov fbstp lods data16 fstpt adc and lahf sbb inc mov push mov mov mov add test mov inc into aaa cmp mov cmp push mov (bad) cmpsl or or jo sbb in jo out in sub stos gs ljmp mov adc enter (bad) jno in dec adc cmp adc (bad) add lea imul in je dec roll jno fwait inc loopne fwait inc test out push (bad) or jbe stos lods jge rorb (bad) fstl dec dec mov call lret jmp gs (bad) pop sbb mov jmp xor add add sub jne dec dec bound inc rcrl sbbl data16 nop mov mov xchg sub outsb xlat loope jb pop (bad) add mov fwait push push popf inc dec mov fdivrl (bad) lea je test push loop cmp inc push adc mov mov das repnz mov add add sbb jmp or test out and (bad) mov movsl je aad sub push mov neg imul test fincstp into mov test pusha (bad) pop push sti xor mov or mov mov xchg dec sbb sbb aaa lea or (bad) insb add add add je xchg repz inc dec xlat insb dec mov inc xchg (bad) jnp ret out hlt mov xor or sbb inc mov outsl dec xor repz dec sbb and out bound add mov (bad) int3 adc add or push jecxz std mov sub inc pop pop lods loop mov jns andl mov sub mov pop flds xchg jl mov xor in xor (bad) lea mov mov push mov (bad) pushf (bad) ja loop popf movups add push iret cld inc mov icebp scas pop pop or or (bad) push and pop xchg and sbb into stos sub or cmpsl (bad) dec inc out lcall cmp ja insb imul jge lods movsl mov lock sbb pop pop pusha or mov icebp cmpsl aam out or add loope nop stos push pop daa add pop push cwtl sbb pop jb lret pusha rorb mov lock jecxz ds mov (bad) or cmpsl add xchg js inc pop fwait cwtl pop and std push sub mov cmp fucomi mov jbe xchg fmull cmp incl add add add pop jle rcl fs out ds movsl fimul arpl mov loop ja or gs jg mov mov loopne les dec movsb dec loopne and pusha adc divb bound push mov and sti sti add insb hlt (bad) jmp sbb (bad) mov add add les mov pop adc movsb mov in in loop lcall stos pop fisubrl push icebp outsb cltd xor or xchg adc lahf fsubrs mov cmpsb (bad) mov add adc add je mov push pop jb test add add jnp jl jnp or mov loopne jmp std sub lea lds test push sub push in lods dec cmp stos cmp and (bad) test adc cmp xchg and and add xchg call cmp les add popa jge xor xor dec dec (bad) jns test or dec mov aad xchg imul sbb popa pop and or dec cwtl lret jbe jb outsl out (bad) idivb mov icebp inc (bad) bound xchg loope mov lock fs pop cmc xchg add pushw xor outsl mov outsl push fildl scas js adc pop mov dec jg xchg mov rcrl add and add cld mov shrb dec (bad) not mov (bad) xor clc jb lcall (bad) cld fisttpll in jns stc lods mov add in add pop mov push add ds stc imul sti add arpl popa int3 jg sti scas pop mov xchg jbe sub lods mov out inc dec clc jb cltd (bad) jno addr16 push sbb in lods push jp (bad) xchg shl out add mov dec mov hlt mov aas add add add addr16 jns pop addr16 (bad) mov aam scas iret sub cmp (bad) cmc adc mov fstpl add mov jp jns push dec outsb xchg cltd arpl dec or or mov nop cmc xchg jo nop mov jp mov add jmp pop fimull jge adc popa xor imul stos jne je or mov xor xchg mov push out outsl cmpsb mov jecxz mov lahf bndstx inc dec inc sarl jbe jbe xchg loope aas xor mov mov outsl jno das insb nop rcrb pop inc pop gs movsb loop mov lret push xchg addr16 aaa cwtl or lahf das push lahf cmp das jbe pop data16 mov lods fwait icebp (bad) enter inc dec mov or outsl push divl xor xor mov pushf pushf and pop insl sub sub add hlt std add add xchg mov xlat add clc jo jp sub cli cmc xchg jo jecxz inc stc mov jno (bad) mov adc dec gs loop push arpl test mov (bad) jl fstl or push lods mov aas cmp inc out sub add dec enter jl add add mov mov repz pusha clc mov or mov jbe sub out adc or sbb dec cmp leave hlt sti jecxz ljmp int lock push xor aaa cltd nop jb xor cmp jecxz mov add add test dec in (bad) cmp out jnp cmp xor xor outsl mov xchg mov rolb xor jo outsl pushf cmpsb insb pop sarl (bad) mov ret push in xor mov (bad) mov int3 sar outsb dec mov aas sbb out add jne xchg fsub or notb add testb imul jmp or divb (bad) xlat xor add imul mov popf adc xchg jnp int3 (bad) dec jge iret dec cmp cwtl les lea jmp add mov mov insb jmp stos mov xor add cmp add add pop adcb sahf mov rcr push fstpt dec aas lock cmp popa cmp jp shl sbb jno mov mov rcrl stos mov shll cwtl fcompl mov repz push or dec ret mov add adc scas ret sahf inc push cmp in lea sub cltd ljmp add sbb push sub imul sub fwait into dec lea (bad) fcompl iret mov (bad) push shr pop or sahf lcall mov mov add cwtl xchg nop dec push ds add add add add pop sbb sub hlt adcl jmp mov xchg xor popa loop cmp push mov (bad) jle scas mov mov nop mov movsl push push sub outsl shrb (bad) insl mov outsb leave (bad) sbb adc cmp and ret pop mov sub add add push jl mov mov iret ljmp pop test fwait in pop mov mov mov xor insl xchg push push arpl out test pop cmp sbb or fdivrs mulb or into scas or jmp dec stc inc inc inc pop cmc jb add add add push mov dec cwtl std xor sbb imul xchg ja inc cmp out sbbl xor mov jecxz lock cmp ss movl mov mov clc push fwait mov push xor fwait jecxz mov mov stos adc add mov dec mov or aam jne pushf (bad) test mov mov mov movsl aad inc jp loope sbb mov (bad) rolb jle sbb mov dec (bad) push fnstcw jb cmp outsb test int inc subl dec sbb sbb inc lea add xchg nop in push sbb sub fs sahf (bad) dec mov mov inc fistp sub imul inc popa loope and sbb and in movsl sub cltd pop or scas fnop decb mov jle jecxz lods gs jmp inc fstp and add dec dec or push mov dec jo mov jmp xchg and pop sbb push stos add sbb xchg subps mov aas push sti cs insl ret push ja movb xor lds and xor mov sub in sahf push jae lods insb and add add enter cmp jno clc nop sub fsubrs fcmovnu loop stos xor insl pop push imul push push push decb or outsl jae sbb inc xor jne jbe mov mov jge ja jmp addl add mov ss sub repz mov jge cmp inc ret adc pusha sbb mov adc paddusb loope in and mov sbb nop scas rorl and cmc or imul xor test mov lret cmp mov pop cmp lds sbb cmpsl mov inc outsb icebp push in xor jp dec insl adc rorl loop fisttp cmp cmp out push add cmpsb and fbld insl add sub fcoms mov jo scas loopne push sarl negl nop in mov jns repnz arpl inc scas push in call sbb push xchg adc sub repz sbb xchg cld jns ds sub outsb test xor jb ljmp fldenv xchg fnstsw movsl mov or fbstp cmp push cmp jns call add add nop js lahf cmpsb out (bad) aad cwtl push push pop call mov in cmpsb mov rorb addr16 and ljmp xlat mov ljmp push aas sbb inc push iret data16 test hlt add addr16 lea loop nop in push add sub sub push jp or xor lods out repnz mov adc inc jbe arpl push sbb icebp stos insl cld xlat insl dec xchg ljmp out les jl and data16 xchg or out mov les cmp dec addl les je aam add (bad) sub insb jnp push aaa xor (bad) (bad) ljmp dec jne sub ja xchg repz push mov (bad) sub jmp pop and mov pop mov ret xchg push nop cmc scas cwtl mov aaa sub xchg aad lock mov mov add sar push xchg nop cmpb loop dec add add out inc and sbb xchg sub xlat xchg in in scas lret scas or rcrl pop ret int3 pop mov mov (bad) jg adc push cmp jl mov cld adc jae pop push lods mov jge lods or add cmp jno sti jg iret das in dec jne jle cwtl or inc fisubl aas addr16 sbb dec mov or rolb icebp sbb dec mov push sub or push stos push mov mov sbb js pop stos (bad) data16 cmp shll mov xchg adc mov sbb xor int3 (bad) push pop jg push adc jnp jb ss fimul xor sub fidivr sbb lcall hlt xchg adc or cmpsl pop stos andl jecxz mov mov mov test adc dec xchg sbb xchg clc inc jle jno jae fyl2xp1 add add xchg aad insl adc sbb sub movsl mov pushl xchg xor jecxz adc or and mov pushf jmp inc ret sbb push lcall fwait cmc adc pop iret test jmp test call in mov mov add add xor lods lea mov push xorl mov add sbb mov jp call xchg xor jecxz pushl push xor jae cmp jecxz mov out xchg or inc stos adc cwtl ret push push sarb mov (bad) hlt add xchg fcoms add mov xchg pop and adc orb sub lea outsb shr and push dec mov sub test and jmp dec xchg inc (bad) loope cmp enter push frstor les add movsl push aaa out dec (bad) stos lea test cmp adc pop fwait xor cmp sub mov push xlat xor movsl mov pop pop into jl cli cmc dec int pop in push jnp add jecxz dec sub mov push insb stos ret mov sbb mov and push xchg add dec and sbb cmp sti sub cmc add jbe mov into aam pop sbbl mov sbb pop xor arpl sub pop aad adc mov mov js loope jmp je cmpsb imul sub add xchg xchg popf cltd xor insl add pminsw push inc out push icebp mov sbb in or mov xchg scas outsl push jmp stos sti or lcall mov xor jae or ficom loopne fsts ja js cmp mov and pop add pop push pop mov push mov jbe cwtl outsl or mov arpl jb and call dec and or xchg fistl dec jmp mov and pop fbstp lods mov fdivrl sahf call test es pop and pop inc test pop lock sub stc mov xchg xor add sub es inc stos gs mov addr16 lcall mov test push add lock jne sub outsb dec lods inc outsb and loope (bad) jmp je pop out pop xchg js addr16 (bad) sub std xor xlat movsl (bad) scas outsl xchg cmpsb lods shrb leave mov dec test fs movsl outsl mov cmp add push cmp and mov fwait cmp jne stc iret es popa hlt repz ljmp (bad) xlat cmpsl xchg cmpsb jnp jns pop jecxz mov xchg jg adc pop mov mov jmp aam (bad) cmpsl dec or push mov push daa add mov cmpsl mov popf pop dec (bad) sub jle sub leave pop sbb inc lahf int3 cwtl xchg xor imul mov (bad) addr16 mov (bad) frstor jecxz fadds add sbb push shrl fiaddl xchg js lahf mov dec pushl dec (bad) cmovl sub pextrw fwait scas pusha lret negb fwait mov scas gs out dec insl fs pop add scas pop decl mov push or sub out push add cmpsb and push and jmp pop lds insb pop mov pop int3 add daa sbb outsb std sbb sub es jmp aam sbb inc dec out push (bad) xor (bad) movsb inc cwtl ret nop xchg or add mov mov test test push lods stos fcompl xchg pushw stc add add mov add outsb push inc dec mov sub hlt jnp pusha adc push outsl push sub leave lods in jnp and shrl cmc mov cs or ret push popf fs (bad) cmovl and das adc cmc mov xchg cmp sub push mov aaa adc jae add leave sub hlt xor jbe into addr16 in fcom or dec test jns stos sbb push pop cmp fstpl imul pop adc inc push insl or ss mov jo shlb loop out jp push push loopne mov push or inc enter lcall sub scas pop popf cwtl outsl pop shl add add add sub lret xor data16 fst inc sub mov in push xor fldenv pop sbb fildll inc int3 dec and loopne ss mov in pop mov out mov call adc mov int3 sbb jbe dec ret jae cmp cmp mov add add aad cmp icebp imul or jne cwtl test xor push push push js sbb inc ret ret imul ret mov loop inc xor pop jp mov sub jne (bad) push insl (bad) loope sub jmp dec sarb mov aas lahf (bad) dec ljmp add dec out jae cltd dec repz arpl pop bnd daa call ficomp insb sti pop cltd ret sti pushf sub mov or js or subb mov (bad) push mov xchg mov (bad) mov sarb test sbb xor add or lods loop jmp js jb out xchg pop out cmpsl fildl mov dec divl mov xchg cmpsb movsb cmp cmp mov mov out js push pusha jmp clc repz cmpsb mov lret sub jle pushf push jne pop out push xchg hlt data16 sub sbb add adc orl subb push sbb pop loop (bad) mov cmp dec loop mov dec test (bad) lock pop pop jnp jp int shlb jmp xchg inc mov test cwtl or lock imul sub add add call pop leave loopne adc mov xor sbb xor sbb sub mov das xchg and cwtl js adc dec test and int cmp inc out dec push ret in cmpsb enter cltd fmull mov sub aaa pop mov (bad) aaa out ja sbb add aas cmp cld fucomp test cmpsl in xor pop mov imul pop adc es xchg aam push adc aas adc aas adc sbb xchg aas mov fiaddl mov cwtd ja insb push dec jge lods mov loope pushf push pop fs push (bad) xor add andb jbe pop add lea mov shlb in pop into adc (bad) iret les ljmp fwait add jle mov push cmp push je in shl loop repz out cmp pop and ret xor inc (bad) movsl mov inc insb mov xchg addr16 push mov js and imul cmp adc movsb outsb and aas outsl adc push and (bad) popf aam add popl test and push add sub das xor fadd hlt add rorb pop inc xchg cmpsb pop ljmp sbb mov add and add sub cwtl dec repnz cmp mov and sarb pop pop aaa int mov dec ljmp in mov push jp cmp add aaa mov xchg mov repz cmp cmp add fsubr lods mov test out xchg sahf sti int aas test pop scas test jmp inc xor orl mov mov xlat jb lds xchg adc sub cmp sbb idivl inc jp push cmp inc mov jp das ds push loope and add aaa out (bad) insl cmp insl push mov add push xchg imul scas cmp cs lahf adc cmp jne scas jno sbb jp mull add cwtl mov mov sbbb bound xor sub add daa jecxz xlat scas shlb push icebp xchg sbb jno mov je incl arpl add sub leave repz in nop push js push outsl add repz add mov pop mov out pop (bad) enter scas xor fwait loope pop cmc (bad) cmpsb jnp ret int aad lds mov push sub js outsb movsb mov sbb negb xchg in mov cmp add or xchg xor out and jb lock ret nop mov loopne add xchg ljmp sbb sub sub mov scas sahf dec adc jp cli fidivl jecxz cltd dec bnd jnp pmulhw je outsl and sbb flds stc call xchg mov jecxz adc or xchg push cld and xor push testb mov dec ror sbb add jl leave ret push js pop aas mov (bad) std inc nop jne and sbb testl and mov sub add ret pop inc nop cmc dec aad add mov (bad) negl fs idivl inc (bad) xor outsb sahf xchg inc cmp cmp insl lcall adc pushl (bad) in inc or (bad) loope in push loopne inc and adc xor dec jmp adc sub xor pop dec clc sbb add mov gs ret int3 inc xlat frstor out add add cwtl icebp aaa test jge push mov fcom lahf sub sahf cmp xor leave loopne add add sub dec out xchg inc cmp fwait mov cmpsb bound push mov test xchg lods outsl mov push arpl add cmp and stos imul pop push shrl jl and out xor insb stc push in push mov out push dec js pop cmp cwtl es mov loop push mov lret jne jb lock ret cltd fcoml in cld add fst sbb push fstpt insl aam add add (bad) mov into push popa push sbb jbe jbe jns sti mov pop inc clc (bad) arpl daa call sbb jecxz adc pop (bad) cmp jp lret repz add push cli jmp movb inc or pushf inc and fadds add ss inc outsl outsb into in out rolb insl jecxz jecxz jns sub aaa sub cmpsl fisttpl push clc ljmp pop lock loopne (bad) aas jae js out fmull iret xor test add dec (bad) xor push stc push push shrl inc out mov jg add inc lret test cmp add fstp sbb fcmovnbe fwait sub sub xor aas imul xlat (bad) ret jg out (bad) mov loope mov jmp xor imul pop cmc jl jp cmp sub (bad) xlat dec inc xlat pop sub jecxz insb dec mov dec add or pop call xlat mov gs jge mov cwtl and cmp scas lock mov mov mov mull add test in xor test sbb dec aam sub mov adc sub add icebp cmp adc or (bad) adc xchg lcall inc movsb inc test inc sub js aad cwtl dec pop mov xchg ljmp sbb mov cmc repz decb inc or pop (bad) mov out lcall shll (bad) call imul add add idivb roll ds push es (bad) mov hlt mov cltd pop js adc jb das rolb jp lods cmp fdivr dec les inc fs in mov (bad) or inc push in cmpsl push or je lds or xor imull pushf mov adc xchg pop cmp aaa inc jle mov inc xor push and or data16 fisttp xor mov xchg or rcrb test sahf xor inc xor lds mov fstpt pop sbb add mov push add add ror sub dec stc jo inc pop std outsb xor shld mov ds and scas cmp dec xchg decl gs jge and add mov adc sbb test nop ret pop cmp add in pop addr16 inc pop mov addr16 arpl fiadd fldenv mov xchg sti movb add add jmp fisub sbb std (bad) loop mov cmpsb cmp sub test cmc xor sbbl mov iret mov inc andb pop cltd iret mov sub mov pop sbb xchg in push sbb popa push aam dec xor mov popa inc push out sub stc ja add add add mov notb lds test aas mov aam ror inc pop int3 ljmp xchg pop out (bad) and add and lods mov mov ret inc push sbb je repz (bad) out hlt cmp adc jl out lea clc test inc add push adc jecxz insl add and dec dec divb mov aas and jge lahf cmc adc (bad) ffreep sbb push sub cs bound mov insl bound scas cmp hlt sub scas mov pushf mov xchg pop add in (bad) mov movsl jp push test je add add leave mov (bad) xor std das xchg sti pusha xor inc dec call fcompl sbb loopne (bad) clc movl xchg mov nop cmp lret in push pop mov das jns and int (bad) ja out (bad) push cmp jns mov into scas add fcoms sub add add loope fbld inc xlat pop repz or pop loopne js jnp dec sbb fwait (bad) les push pop roll aas lock fimul lret or movsb pop push bound cmp push sbb push bound adc (bad) negl mov add rorb clc mov loopne stos add sbb (bad) enter jp sub fincstp jp or adc cmp sub push push add les xor leave les fstl pop imul scas into mov pop push out or gs test icebp (bad) mov add add jp mov mov adc mov repnz subb xchg das (bad) movsl inc xchg pop cwtl mov sub iret fnsave fwait pop or pop push or shrl scas and lahf test xorl push inc pminsw iret or mov nop fsts pop pusha stos mov pop inc mov xor dec sarb cli mov data16 cmp adc sub cld aaa (bad) xor loopne and insb dec pop fisubl and sbb aaa outsl movsb sub mov out scas adc insl adc push jae sbb mov loop jle add andl pop dec in or push sti and imul stos fcom jne xchg mov mov shlb add jns repz test clc jae or or mov daa out nop pop (bad) xchg cmp (bad) push dec mov pop or data16 test jmp pusha les xor sbb add xchg les popa rorb mov dec and mov (bad) jbe mov sbb dec (bad) loope,pn dec cs shll and xchg mov in jne movb nop movsl xchg jo addr16 scas test pop data16 xor dec insl adc add stos ret mov adc xor adc jno std cmp xchg in inc xor lods loopne imul push push mov shlb jmp dec inc rcrl cmp int3 mov test lret insl dec jge jno leave stos cwtl xchg sahf add out pop pop aaa int mov lock sti cmp xchg das mov mov jecxz (bad) nop push push fcmovu aaa pop or fbstp mov lods inc push inc add inc out sbb in dec push dec rol cmc in cltd aaa xor jae out incb pop outsl xchg jp lea test (bad) cmp scas mov lahf fs jp push int sbb sbb test clc sub push adc in xor mov xor (bad) fstl push dec (bad) scas into mov pop push out xor stos mov aas ljmp dec fistpll ret add fs mov repnz push imul inc cwtl cld sbb mov (bad) aad mov imul lret cmp movsl push sub sbb mov sbbb xchg xor and sbb aaa cmpl add les xchg pop loope cwtl jb frstor ds jge xchg push cmp cld repnz cmp push dec push aas test outsl mov stc sub ja mov mov push arpl test sti mov add aam test imul add pop push jno jnp imul or subl cmpsl (bad) mov test push mov repnz out mov movsb adc rcrl push xor lock mov cwtl or sarl out into shr in bound mov lcall add add je int3 mov fcmovbe pop fs test movsl pusha stos loop pop xor gs stos (bad) jbe mov mov gs subl mov shrb add mov and adc aad sbb cmp jne js mov nop (bad) jb xchg pop mov es add aam outsb loop and in xchg cwtl mov sub add pop loop cli or (bad) or (bad) xor cmp scas aam cwtl insb sbb imul test test jne sti xor in and adc fs mov mov jp add mov pop dec jae lea insb xchg sbb push bound pop add outsb ljmp fwait dec jo iret cmc jb test fwait aam jb jbe xor decl aam cwtl js sarb sar sub jns cmp pushf or mov shrl lds jo add notl xor xchg in fimull xor mov push test or inc adc mov sub (bad) xchg in ror push push hlt out scas push insl pop sbb shll int3 push push pop in or loope cmc mov add dec bnd adc xchg inc ficoml pop mov pop mov push or in adc dec mov dec sub mov in data16 push pop (bad) mov and into add mov divb into push xchg jb es sti loope jns and add add cmc dec repnz fsubrs negb jnp mov add push std iret cwtl fsubl xor cli push jnp ds xor pop dec (bad) xor cmp in addl mov ret aam jne movsb in jnp scas or aaa add add jmp pushf or xor aam sahf (bad) mov fbstp repz cmc dec mov test mov (bad) ss mov (bad) xchg xor gs mov mov adc repz popf ret loopne imul mov cwtl stc add pop mov mov add add sbb lahf jnp mov pushf cmp adc out lods inc dec sub jp sub mov (bad) and mov push cmp mov add aad xchg leave xor cmp cmp es fs in dec (bad) mov es xchg sbb add and sbb pop sub pop fstpl mov rorb sti loopne push addr16 xchg leave jmp adc ljmp (bad) dec mov fbstp movsl out out and and jo cwtl int hlt arpl lea mov cmp aad sbb out pop push shr repz in in add mov stos rcrb loope push ret or les add push push (bad) mov sbb insl push imul cld mov fiaddl xchg js adc xchg rorb jne mov mov pop fs pop out sbb push std iret cwtl fmul ljmp add jp add jecxz pop data16 mov loopne stos and pop push insl and fwait xor jecxz insl inc xor ja sub lods ja or mov push cmpsb push xor (bad) loopne mov fucomp push pop dec mov aas adc add sbb sub jae cltd (bad) cmpsl push xor add add in gs mov fisubrl pop lret mov mov or test lahf push jae xor dec sbb movl push mov vpackuswb daa stos scas lock xor lods cmp imul out dec (bad) das arpl add mov out xor mov push jl cmpsl enter nop push pop sub (bad) or sbbb adc mov inc jp push cmp dec jne xor loop sbb les subl les mov in add ds ljmp (bad) cmc bound test mov xor add xorb jae jle xor xchg sbb and cwtl decb out push sbb mov cwtl xchg sahf add adc push es js repz cmp insb xor daa xchg add sub pop imul pushf adc cmp sub cmc popf test push out dec imul enter adc js xchg cld sub mov mov cwtl mov stos aaa xchg sub mov fisttpll mov scas xchg repz in pop leave adc dec movl cmp push xchg imul test add jo ret pusha test jmp lret scas popa std imul pop adc outsl dec in repz jle arpl push in mov mov nop popa mov jmp stc mov mov mov sub adc loope push add stc (bad) icebp imull pop movsl push mov mov add add add add pop in das mov mov mov and or or sub cmpsl cmc mov push (bad) aam clc aad mov pusha pusha popf dec stos push dec (bad) repz into jecxz jge test inc and loop (bad) test pop inc cld imul or js pusha mov out push cmp (bad) cmp scas add lahf clc aaa mov sub mov lret fidivl and dec push ret jns dec sub inc mov insl int3 fildll jbe add orl fstps mov das int sbb xchg std mov cmp mov repnz insb xchg push dec lock jo add add cltd rcll mov or iret xor xchg ret ret sub add ffree sahf int3 rcll jp xor xchg pop les imul push ffreep sub outsb movsb push xchg add clc bnd (bad) repnz mov push sarl inc mov ret jno xor cwtl xlat mov cmp push ljmp mov sub xchg xchg jp les and jbe dec jbe into (bad) jp int3 test les (bad) jne stc lcall push rclb inc insl fucomip mov loop out stos fdiv pop adc push mov shlb ljmp dec sbb lods mov pop mov mov adc jge inc data16 decb out ror sbb pop shrb cwtl xchg cmc fisubrl out lret xchg lea inc xlat lret jp addr16 pop xchg addr16 mov pusha les push jp mov cmp cld sub add fadds fwait dec mov or test jecxz into addb inc mov pop xchg and pop and adc mov sbb das mov sub mov ja mov dec xchg pop and aad mov mov jge mov add xor cmp ja cmp scas test cmpsl pop pusha arpl inc in xchg arpl test lret xchg add xchg (bad) jg xor or imul adc out mov mov and sub in insl sti (bad) dec (bad) in jo es mov push dec or stos gs aad insl movsl test shl xor xchg inc clc movsb es mov mov dec addr16 add sti cmp dec addr16 mov add add nop mov out in into pminsw imul bound cmc cmc notb adc push gs stos movsl std lods loop mov ss rolb dec pop and (bad) cs ret stc test xchg inc das inc lds adc xchg inc jbe push ljmp add add fmulp cmp aad add sahf push sub mov mov insl gs cmpsl inc cmc or mov daa test (bad) push ss lock call push fiaddl inc (bad) mov mov popa arpl sub cmp jno sti adc mov ljmp lods cmp push ja and add inc xchg vpsubb aas mov mov das sub test and add test mov (bad) or imul xor (bad) rcrl jl ret sub data16 jne fisubl mov lods loop scas fxtract xchg mov aad sbb pop and outsl out inc mov cltd mov leave and add roll add insb js (bad) jp inc sahf sbb aaa in in jmp out dec push jb cmp inc dec cmp outsb loop adc push ljmp movsl in aad pop push (bad) hlt pushf add inc std pop adc (bad) push insl ficoml push xchg mov ud2 bound xor in insl and push clc jae fadd mov dec jge iret xor sub repnz or mov mov sub into icebp cmpsb aam adc subl xchg lods fwait and insl js pushf rorb cmp cmp xor cmp add add push lock sub cmpsl bound imul jns stos mov dec int3 mov xlat insl add jg stos mov jle xchg push pushf mov jge sbb cs in faddp cmp mov fsubrs out inc mov subl inc lahf fld insl inc or push scas loope xlat push out popf mov mov bound pop ljmp or pop rorb dec icebp mov (bad) arpl call fs sbb sahf cmpsl push add mov rorb data16 int mov stos pop sbb mov push add add inc adc punpckhwd lret rol mov imulb fidivrl push dec mov enter jb and nop cmp xchg aam in stc es pusha inc (bad) mov insl lea and (bad) js insb lea out in test test imul mov add push cmp add es mov mov push or lcall xor out divb adc push or imul adc cmp ss jg xlat and dec ljmp pop sub hlt xor dec (bad) mov popa mov gs enter pop shrb inc jmp jp add das xchg repnz or inc mov push movsb push mov jae stos adc out (bad) ret sbb mov cmc js mov aas pushf orb mov pop dec test mov jno loop sti int aaa adc fcompl incb loopne mov mov add add aaa outsl cmpsl scas cltd out lock jmp push cmp enter push pop (bad) pusha fnsave outsb cmp pop ljmp out push xchg hlt or mov xchg testb pop test pop xchg mov inc pop (bad) ljmp dec sbb stos sbb xor dec ret add add add and fsubr mov dec jge daa call adc sbb mov sub in bound adc lds add mov add and movl dec add sub xor outsl add (bad) lods loop cmpsb (bad) xchg sbb mov xor mov jmp xchg out fisubl std mov xchg movsb or lock mov push ret push in out incl jle push out add into into cmp cs push arpl stc stos ja sbb mov popa push jmp jmp cmp add add cwtl scas bound sbb mov sbb sub jecxz xchg jmp lahf cmpsl mov jae dec jmp adc int3 aam xchg sbb sahf sbb push imul push sbb sub loop fwait test pop push dec xchg xlat stos fwait lea enter add cmp cmc sub test cmp loope enter lea add or cwtl and out xchg or and jg mov decl fldcw ficomp and cmp inc pop outsb lods or loope ljmp int3 scas push jns es dec outsb loop add shlb mov jne out push scas mov cmpsb pop push hlt pushf add add mov shr push fisttp das mov jge mov and jne dec dec incb lahf add jp add lock sti adc enter inc test dec jae (bad) (bad) pop enter add cltd daa jge rol std cmp mov andl repz mov in sub test cmp fbstp mov xchg stos push jb imul cmp adc js adc cmp sub ret stos lds clc ja sub push (bad) imul and lds add mov notb jmp adc scas mov dec sub pop arpl je test or mov bound or hlt out rclb sbb pop add push outsl pop int3 jg insl adc xchg adc out jg mov jb fiadd lock js xchg jp add add add lock sti adc (bad) sbb lcall push mov mov adc (bad) or gs add pushl mov mov imul dec dec lcall mov jbe ja and leave fbstp mov and sbb adc sub out xchg add xor sub pop inc repnz mov hlt ds repnz cmp dec push xor xchg mov jp sbb xor push add xor xchg cmp push add subl or sub testb lods or out mov add in dec mov inc push outsl (bad) insl push lods add ret mov adc mov mov jcxz and in fwait inc lahf and mov rcrl inc stos data16 sub addr16 mov push sub insl (bad) aas cwtl test (bad) cmc rcrl ljmp jns mov clc add add mov popa test push (bad) fiadd pusha shlb stos ffree sub (bad) (bad) xor imul xchg cmp pushf add pop out sub cmp jl mov addr16 mov fs xchg vmaxpd add in add and or test sbb mov ret cld xor or call jnp sahf test enter or mov mov or jne test push adc sub or xchg sbb sub sbb call jge dec push in faddl add cmp inc addr16 js xchg aad fs cmp jns inc cld gs mov cs xchg inc xchg in rorl push stos outsl fs jns insb mov cltd (bad) fnstenv mov push cli es and pop (bad) repz stos add fstps data16 (bad) dec mov mov inc cs add sbb fdivs push or int3 or into mov data16 loop jne jp clc aas xor cmpl or imul sbb mov test push rol scas repnz pop and out pop insb and xor or cmp mov add xchg sbb xchg outsb pop lock xchg (bad) jg (bad) shll repz push pop movsb fs mov xor mov mov insb and sub xchg pushf inc or test jge stos (bad) or fmuls push mov (bad) mov cmp es std mov xor and adc inc add mov xchg mov jo mov lret or cmp push jae nop repnz mov pusha mov fldt jbe inc jge popa push adcl lods mov test mov mov and stos out test mov mov add add adc dec aas inc or jnp mov dec loop jbe decb hlt lods lods push and adc insl sub pop or (bad) stc enter jl jno xchg fucom jo (bad) cs and data16 push into cmp inc imul adc test (bad) lcall mov add add jmp cli inc outsl push es pop test mov sub (bad) xor jno cli std dec xchg or mov leave js repz scas js sub and btcl mov ret mov (bad) adc (bad) jmp imul jno jmp add add les fneni(8087 cmc int3 push adc push insl loope mov js in es inc sbb dec lcall (bad) or rorb push dec sub js jp jb sub shrb jecxz cli daa movsl sub xchg aam jg jne lahf cmp and add add stos or imul or int mov inc push sbb daa stos dec jp jecxz xchg xor std xchg jp mov leave cli sub repz in jne lods test inc clc (bad) imul add mov xor cld ret xchg loope xchg and clc js test (bad) mov inc mov mov call jns out ja add movsb scas jno rclb push mov inc and or dec cmp pop mov out add pop roll call sbb arpl and jae addr16 std jp out push dec (bad) sbb out add inc ret jmp add xor mov pop sbb sub mov out data16 jl push fs (bad) int3 push mov adcl movsl or lret insl and mov cmp or sub idivb add in mov rcll imull add hlt cli mov pop pop into jl adc (bad) in (bad) mov in pusha mov xlat mov (bad) mov xor (bad) xor xchg popf add and cmc jb or sub mov push push push (bad) pop xchg imul add mov cmp (bad) dec lahf push xchg sbb add add xlat loopne loope jecxz and lock into xor sub push adc cmp cltd (bad) mov repnz cmp lods nop (bad) or push lret jmp in aaa sahf sub add xor mov inc int3 jo or add es es xor xchg and in es repz and pushf out test sti push test andb sub mov mov mov xchg (bad) ss outsb std mov pop inc outsb mov popa xchg push mov xor cmp inc jne aas mov inc mov push test jg sub and add xchg sub movsb fs nop xor jbe sub mov xchg std aad rcrl insb sbb shr mov imul mov repnz arpl jbe arpl xchg sbb xchg out add stc aam test imul mov (bad) shrl in push mov sldt add pop popa movsb sub and pop push and mov loopne add add pop mov and or cmpsb and dec jns pop adc xchg inc fcomip mov cmovl cli in add leave call mov xor repz mov dec insl adc add push insb sahf cs xchg popf push pop xchg add xchg cmc pushf add mov sbb sti mov pop adc cwtl push insl ficoml outsb xchg and (bad) xor iret (bad) dec imul jecxz xchg jmp mov scas fwait inc leave dec repnz addr16 push dec sub andl mov inc xor add add popa sub sub leave pop sbb ljmp in lods cmp or das clc movsb inc jl mov push les mov in lock pop push aas push dec mov out and pop bound dec mov adcb jne lods test out cld (bad) push pop (bad) orl add push in (bad) pop mov sub pop cmp push outsb mov push mov stos mov inc subl mov mov jp cli js sbb sbb xchg insl mov pop scas mov mov bound movsb push (bad) pop arpl pop xlat cltd (bad) dec jmp (bad) out mov in push add add add add push jae adc call in imul dec gs pushf push or push mov movsb jecxz sub daa sti jg sti stos sbb push int3 cmpsb fnsave adc xchg decl dec or rep mov push enter cmc lahf jnp mov mov fbstp cmp xor add mov lret dec jno leave push sub mov pop or cld lahf pop sbb adc cwtl fcompl cld (bad) sub in xor sarb les in xlat inc mov subl les push add jl loopne pop pop addr16 xchg sub lock pop cmp push jp out mov loopne addr16 and clc test mov dec dec jge jecxz sti sbb (bad) lahf sbb ds sti pop cltd iret inc cmp pop in cs cmpsb imul fcmovb xor test xor mov ljmp cmp repz jo jecxz mov inc pop stos lea adc cmpsb sbb notl mov jne jbe and ds je cmpsb pop dec jne insl xor jnp xchg fmull aaa cld (bad) sub out scas pop in fs adc mov lret repz add add in adc les inc jb js ret or jl or and cli icebp jo iret aad push pop pop push stos mov sbb dec (bad) lret out adc mov mov aaa fsubl mov stos daa pushf mov out pop mov push or mov repz add add or shlb (bad) cmp insb mov jmp mov popa jns mov push xor in fs fcmovne outsl pop scas nop dec repnz cld jmp pop clc (bad) cltd mov adc xchg stos mov or mov shl lea cmp mov mov cwtl xchg push in fs cwtl aam pop xor lahf dec into cmp in sbb bound add pop out pusha inc pop fsubrs jo aad sub sub sub aam add xlat aam movsl cmc dec movsb je test xchg enter add or push ljmp pop xor xchg xchg mov sbb jne mov shlb and ljmp mov sti in push xor mov pushf leave (bad) lds jecxz fcmovu push gs mov repnz in pusha mov hlt sub push cmp push ret out add add push cmc pop into jne hlt inc and test out clc (bad) jnp leave pop xchg movsl mov mov ljmp mov sub lret mov je mov aas mov inc frstor imul sar daa lcall les lds loopne fnclex int cmp xchg or dec (bad) add pop mov jp lds leave push mov sbb loopne jns dec outsl mov jae fdivl (bad) ljmp in cmp out pop pmaxub mov scas sti mov jo xchg adc rcrb jne pop xor pop subb pushf (bad) mov dec roll add fmuls stos addr16 iret push pusha aad mov lods popa add sub jmp xchg and push movsl lods aas addr16 mov pcmpeqd stos aaa xchg sub sbb push into in test pop xor out adc mov scas mov pusha in fcom loopne daa hlt mov inc sbb lock mov outsl sbb xchg pop icebp push movsb loopne or in out mov fcmovne bndstx inc dec stc dec sub cmc jb pop dec jle xchg jecxz lock arpl aas pop xchg jmp push sub scas mov iret xchg dec mov icebp fsubrs aaa lret mov and test add cmp pusha sub sahf pop mov out jmp xchg dec ret fisttpll jb push sarl xchg icebp mov aas inc cmp xchg loop std es loop fstl cld pop lahf pushl sbb mov dec jo orb add mov push mov mov and add mov sub adc lret fidivl and pop ja je cld xchg inc je or fisubl adc ss ss cld pusha mov dec mov or bound call lds std sti mov ja cltd dec dec stc arpl push (bad) cmp add dec in hlt mov jbe sbb mov loope mov int mov add leave andl jle push popa dec inc or pusha and xchg pop add adc ss jecxz mov cmp push stos fldt fiaddl xchg sub not (bad) xor add pop int3 incl fdivs cmp fiaddl cli ret jp jecxz cmc lds test ret lods adc js mov test adc cmpsl xchg (bad) std or bound scas push iret lock loopne dec enter call and jmp add mov in (bad) fldl add mov mov adc mov lcall jae jp mov mov sub adc and inc insb pop jp,pt dec sub sub jb push (bad) pop lock mov sahf push push (bad) or mov lahf push popa jns mov fistl mov add fsub in xchg jb cs or movsb aad mov call mov pop mov xchg or pop mov in push jb cmpb sbb das jbe es mov mov aaa pop movsl out mov dec and adc push std mov and add add add icebp xchg mov sti in xchg pop sub mov imul loope mov add pop push or mov push in fstpt mov je xchg ja mov ds lds sbb arpl cmp jns cli inc (bad) jmp movsl leave outsb daa and mov inc ficomp orb nop adc mov out jnp cld rorl lea push sbb adc fiadd jnp pusha stos fidivl test fnsave xchg jle ljmp mov and cmovl test dec dec divl xlat cmc jne fldcw fmulp js lcall push push in sub fs in cmc (bad) icebp test mov mov inc pop and add pop dec in and dec inc sbb sti mov scas or cmp aam test adc aad push dec ret in fdivrl adc push pusha sub ds xor or push push scas mov loopne ljmp inc lcall push mov cmpb or jle jae outsl cli cmp addr16 aas in movsb sbb cld lods and enter fsubrl jp cmc cmc clc popa jmp mov jecxz stos lea std (bad) mov out sahf push jl ljmp test cwtl cwtl jle mov loopne pop push je bound fmull xor lcall push imulb xor add add rclb jbe or inc insl jo or mov in jb dec int3 dec aam outsb (bad) sbb pop fimul xchg xor inc fucomip pop imul add cmc cwtl jl cmp add sbb mov mov mov add push int adc xor fs pop dec aas in test jg cmpb (bad) jbe dec mov sahf insl int push mov in (bad) dec pushf pop inc xor nop call movsb lock pushf cmp add mov (bad) std cs jp dec add popa daa push stc sub dec imul adc mov adc (bad) adc out mov icebp dec sarb mov idivl adc or xor mov jmp adc dec stc cld xchg xor and add add ja jmp ljmp cmpsb insb sub pop mov sarl popf and icebp xlat push cmp push jo adc push jne repz rorb or xor movsb sub push hlt cmp pushw jecxz jnp (bad) xchg and jle loope jbe sbb mov mov les imul adc cmp jl ja movsb jbe mov push dec sarb cmpsl or jne push cli push sbb xor push inc mov jo adc aam and cmp push scas mov repz aad jbe loop cmp add add sbb mov add repz iret out dec and dec in rclb roll (bad) pop adc push scas bound mov adc aas sahf or repnz rcrb lods push mov divl mov shrl push jns (bad) scas mov pop nop sahf lahf push lea add inc add xor push ja mov jb cs sbb (bad) push push popa ret xor lcall dec in mov jbe outsl and sbb push pop rol loop push fbstp notb mov loop repz out in mov (bad) mov cmp out out test pop arpl inc push test push mov and cltd and dec ret cmpsb dec popa push cmp mov push aas add aad mov jmp cmp add testb pop push sti imul mov mov jg mov jle adcb data16 cmp mov lds jbe idivb pop sbb out push leave mov sub (bad) and pop iret js decb (bad) jg sti stos lods cmp in mov mov icebp mov pop fldenv ret addr16 inc push fiadd xchg fstpt xor mov add mov sub repz cmp rcrl and xchg mov test (bad) mul bound sub dec xchg icebp inc pop rorb jmp out icebp sti jmp out push dec test sahf (bad) cmp add inc imul or inc fs mov arpl add add sbb call fbld or cmp mov inc dec stc fildl xor pop fdivrp sub les lcall lods add (bad) nop mov outsl and xchg inc push sbb adc or sub (bad) cmp pusha imul xchg out scas or lret imul lds shlb enter push cmp cltd jo repz pusha sub jmp sbb sub outsb jmp xor and imul sub pop cmp jle mov scas xor js mov push mov mov dec jge push mov (bad) dec cmp mov scas leave push cmc call xchg mov test mov rcll inc add xor inc loopne jmp lds xchg lods imul aas push sbb jae mov xor daa pop mov (bad) adc inc ret inc leave sub add jle mov pop js cmpl cwtl xchg loope cld push outsl dec loop xchg pop jge enter rorb or outsl push and push jb mov inc and in std imul xchg rol popf imul adc ffree negb lcall inc cmp push push cs test cmc push or mov fwait xor aas mov lock cld fldl insl gs cmpsl ja push add out (bad) shrb mov sub repnz shlb stos sbb pop rcrb add cmp mov sub aad insl and sbb lcall movsl jmp xor aam repz mov nop mov popa pop loope std add pop mov lock test lret repnz ja xchg test jecxz mov jmp xchg fdivp outsl pop xchg add add sbb and arpl fsubs (bad) mov pushf or jmp inc mov aas jbe sub cmpsb scas mov pop in mov push mov cmp in pop jnp mov jns dec js sti test push xchg mov and clc fstpt outsl aam add add mov icebp cmc xor mov xchg pop adc xchg jmp cmp lret add lea imul xchg pop int (bad) mov sysret push pop dec aas das movsl stc mov xor push js shr lods ret mov jb jne jnp dec pop adc bound enter pop push add add arpl jbe mov fdivl push insl fdivr xchg sti pushl shll mov imul dec dec mulb sbb testl popf gs andb mov jp aad jp adc leave jecxz cmpsb xchg mov sbb mov outsb loop adc out sub mov std pop gs lods jge ret (bad) and in fimul out pop test pushf rorb inc nop pop (bad) aaa jmp pop pop stos (bad) sbb sub mov daa sub adc fsts mov sysenter sub add add cmp rcl lcall add test push xor mov rorb xchg xchg or jg stos and jecxz xor xor push sub std mov add rcrl sahf push je adc mov scas and jle sub es lret xor xchg push add stos mov test pop loopne inc or xlat adc ljmp cmp sub aad mov std jg add movl pop sbb pushl xchg shlb jb (bad) mov out mov or add jecxz (bad) pop jns sub jl dec xor out add lds leave jmp adc shl gs pusha fidivl and int mov stc xorl xchg popf stc sub push pop mov push push inc cmp jo jle imul cmp cmp scas push push cmp pushf pushf and mov push (bad) add add shlb (bad) mov and mov (bad) nop cmc cmp jl pop jne js mov sbbb sbb add mov jg push sbb cs and or and pop pop push call lock jo mov adc xchg xor out or mov (bad) in or dec dec (bad) nop in sub mov dec sbb sbb int xchg test pop stos jne xchg push push sbb jp addr16 pop or lods punpckhbw es xlat mov addr16 sub fldcw bound dec pop out adc jne mov add add scas and push test push sti es out pusha pop insl dec mov pop sbb push mov sub xchg mov dec test rcrl mov add icebp test mov js cs jmp popf out xchg inc xchg aaa add adc adcl add add add dec cmpsl ja push add out (bad) int ljmp pop xchg sub push or xor int dec imul ds in in pop cwtl les aad push (bad) lea xor loope adc out mov jl dec mov lods or std movb add fdivrp adc jg je test mov data16 rorl nop sub adc jbe jg daa bound fldcw in (bad) dec sarl push popa dec loope push xor cmp (bad) stos out scas (bad) jne out nop fcmovnbe movsl xor dec xchg repz movl add iret mov movsl xor mov and popf xchg arpl jns idiv hlt movsb aas enter dec sub push ljmp jo aam popa xor fnstcw sti xchg jge mov inc lcall sahf mov jae xor ja push inc jg and loope es dec xchg decl gs pop (bad) cmp xor xor mov xchg mov jp pop clc xorl mov aas inc scas or inc push sbb clc mov push shr sti push scas fisub scas xor sbb or mov add add cmpsl cmp mov add bnd ret adcl daa mov push data16 mov xor mov push xorl sti push mov (bad) test mov imull jno (bad) cmc ret es ficomp push mov je outsl pop add add mov popa add mov in out int and xor mov xchg rorl cwtl and jmp or xlat add sub sahf repnz sti or push pop push adc (bad) mov repnz pop mov push popa jns mov adc sub mov add mov pop stos lea loop lds dec mov iret push jb fadds out jnp nop out loop xlat movsl ds (bad) cmpsb data16 sbb cmp repz test dec (bad) enter xchg pop cmp cmp outsl lahf cmp jecxz inc jl push lret jne je xor dec out add add or pop xchg mov mov pop out subl rcrb jp (bad) cmpsb lcall mov pop add and (bad) repz sbb jg out inc das sbb imul aam inc imul push xor lretw sub test ret jge outsl sub mov add push inc fisttpl xor sbbb fcmovu pop add jp cs mov sub and push mov mov adc outsl stos out sbb loopne xor mov aaa xchg xchg mov scas (bad) mov cwtl mov loop xchg or sub mov add add in icebp fidivr loop push cmp cld jle sbb xor rcll add popl mov pop rcll (bad) add dec and incl inc dec pop xchg stc mov in mov popa jge add les test and xchg arpl iret xchg dec aad adc aad xchg ret add push aaa jle adc lods sub repnz or xor inc mov cwtl jmp sbb push adc mov (bad) cs ret lea push icebp mov jmp xor sub repz xchg jecxz arpl and (bad) ret adc js cmpl adc add mov sahf cwtl popf jb jbe sarb das out add xor push or mov add mov mov pop dec dec add call cmpsb and and lea imul fisubrl shll rcrl out (bad) pop add push mov mov mov in call dec sub ficoml or stos fistpll data16 mov popa lock loope pop inc nop rcl mov and inc in xor fwait push popa jns mov fdivl fnstenv jle lods mov jge aam mov pop scas add lock pop rcrb into arpl xchg js push imul notl imul out fnstenv arpl inc insb adc (bad) adc lds dec sub sub or sub mov adc fimul jbe mov ss outsb jg mov jmp fmull cmp sub cmpsl in add add scas or (bad) lods sub in xchg adc push bound push adc pop jns sub add jge push loop movsl test push div pop jmp mov sahf and mov mov inc aaa push jg scas ds in leave lea mov xor icebp or cwtl pop addb add add push sub sub pop (bad) in add ja push xor cmp testb and outsb cmc test jne sub cli mov mov or cli cmc sub push jo and fistpll fmull cltd mov mov push add jbe (bad) jbe outsb mov fwait out cmp shrl pop cmp ret pop jp testb aaa insl sahf push xchg adc mov inc pop or mov push imul mov add cli cmp push dec dec jge jecxz arpl xchg sbb fldcw rcl add push jne jmp jo or cmpsb (bad) cmpsl push pop aas pop lods insl (bad) (bad) (bad) jge,pt imul (bad) pminsw je mov and insb into push jmp test fnsetpm(287 mov and push push xchg dec (bad) xor mov jo mov repnz fsubs pop mov add add and dec jne icebp imul clc cmp in fidiv maxps push dec push stos les ret jo or add xchg in jns (bad) sbb jg xchg cmpsb sbb pop shlb cmc (bad) mov cmpsb ret addr16 (bad) mov imul add add jae lcall lea subl insl iret dec push and call mov sub (bad) mov pop lahf dec dec loope pop xchg into adc sbb fbld mov adc and cmc lahf jnp mov movsb push mov push imul xchg sub fcom pop pop jbe js push (bad) xchg mov fldl cli (bad) dec test cmp cmp pop idivb lods call mov test pusha (bad) pop push sti xor mov rol add andl sub cmp fmull sti imul add add cmp pop push (bad) sbb xchg ror jge popa dec adc jbe pop push and clc inc adc add cmp in lahf les (bad) jp lcall sub hlt mul adc push js rol inc fwait aam loopew mov or xor add add (bad) icebp mov (bad) (bad) mov hlt or xor in xchg cmpsl out and stc push mov xchg inc jecxz loop popa sub in jmp inc cmp jl xchg test jne pop data16 aad addr16 test inc icebp xor jp rep cmp loop mov lds outsb xchg arpl stc push arpl add add mov add inc mov inc stc in xor ja cmp insb (bad) pop and imul pop arpl lds cwtl jp push cld jg int pop jmp sub iret fiaddl call push jnp setae adc mov mov pop outsb sub add into call test push add add mov dec cmpl pop xor push push cs rorb insb jnp sbb ljmp sahf xchg fstp adc xchg cmpsl aaa shrb adc mov pop mov pop push movsb pop sub sbb call cmp test daa aam push popf jge cmp es xor daa es imul xchg pop sub xor sub fwait scas (bad) mov in rcll orb inc and sub sub push jbe dec xor dec in out xchg or add add add jmp mov sbb mov mov add je mov inc dec mov cmc adc fs leave sub and xor add ja cmp clc jmp ja cmpsb das rcr movsl ret add sub inc imul push and push and and loope add movsb rcr or add xchg lods xchg inc subl push lea push popf add sub mov pop inc sbb sbb adc fs icebp xchg sarl lea push dec xchg iret lret and aam mov pop enter aam jnp and daa scas icebp jae jecxz xor sub repnz pusha gs adc in xlat lock mov pop xchg adcl cmpsl pop inc sti sub dec repz fcompl push repz pop stos xchg in mov mov test mov cwtl hlt xor js rcrb add ss sbb push mov rcrb inc pop pop xchg in pop les fidivrl stos test add stos fidivr fadds in test jg aad fidivrl mov xor (bad) pop cmp dec pop xchg mov dec gs hlt leave jne stos or pop inc pop out incl add cmp shl fcompl ds mov dec push in cs lcall ret dec xor (bad) mov nop xorb sub mov jne (bad) sbb mov in fistpll xchg or scas sbb push jecxz rcrl jno push (bad) sbb (bad) xchg jle arpl repz jno scas or test dec fmulp sub mov jb (bad) enter jno cmp lahf pop enter loope mov in and sbb add dec sti call lea movsb and insb cs (bad) or cmp idivb mov inc add push test jge cmp mulb xchg xchg and fbstp popf inc mov jns cmp ja xor cmpsb outsb fimull or push andl je ret add and sar arpl mov test (bad) jge mov inc or cs add add dec popa dec arpl aaa adc ds divb mov push xchg leave push in pop jae,pn aas (bad) adc push pop cmp xchg in cmp jecxz mov adc mov leave mov test lret and push adc sbbl aad mov popa xchg insb cli pop mov sbb add push adc and or scas jmp pop push ds rorl les pop cltd imul das pusha loop leave xor pusha jo jns (bad) mov xchg push sub inc push push repnz stos int out mov stc sub mov jmp cmc pop pop addl les dec (bad) sub cmp aas dec in dec push sub ret push add loope mov pusha xorb clc xchg sbb push push cmpsb mov aas cmpsb lds bndldx movsb xor adc lea mov enter (bad) lods std xor cmp fsubs cli jae ret test or add push push push and (bad) lret mov jg xor sub add hlt xor add sub sub add sub sub repz cmp leave inc sub push movsb pop gs cli arpl pop jb ret fcmovu mov es mov mov pop movsl adc mov nop clc ja loopne push mov cld xchg dec pop sbb mov call mov mov or sbb out pop in cltd xor dec addr16 push jne dec push daa movsl cmc (bad) out (bad) inc icebp jmp sbb jbe or push test jmp cmp ret add sarl jp push pop cmpsb xor inc pusha inc add rsm adc and addb adc sub jg subl mov imul inc out addr16 (bad) jb repnz cld (bad) mov popf adc xchg scas jno insl mov add add add cmp inc adc lds or fstl dec pop cmpb push int3 dec pop push incl outsl inc push push fdivs (bad) sbb rcrb pop sahf cmpsb repz mov add pop daa fs (bad) mov aas dec dec jno int and push push dec lcall sub leave je stc cmp add sbb outsb inc dec inc in and test xor fildll sub cmpsl xchg adc aam loop inc cmp outsl push sub cwtl jp in in jl mov dec add rcrb not or mov in jno mov (bad) ret dec mov lcall pop mov add in jg jmp rcl or push fwait or mov mov lods movsb das cld stos pop xor mov sub lock jecxz jle dec inc addr16 mov lock adc add pop iret sbbl (bad) gs imul add add add add inc or or ljmp adc es push lea xor mov loopne adc fistl mov lcall push mov push cmc (bad) sti insb pop pushf xorb decb test push insb xchg jbe mov adc add adc add push xchg fcmovb hlt lods ljmp icebp insb js xchg mov lea mov cmovnp leave bound gs nop xlat xor push adc ret outsl js push imul mov and bound loopne or push dec and lds mov lds xchg stos popf mov add out jae sub mov xor int push or sbb mov xchg xchg push arpl sub (bad) (bad) arpl ja daa sahf xchg xchg sbb gs inc mov rolb mov enter js and nop stos andl lcall add iret mov ss cwtl add pushf adc or je bnd jecxz fucomip and xor (bad) xor stos and nop aam pop inc jne enter mov push repnz (bad) out rcl dec inc pusha adc push aad lds dec mov jbe repz mov pop inc lods fiadd add add dec xchg (bad) cwtl cltd (bad) jnp in (bad) movsl inc and mov pop xchg sub or inc fistl mov adc repz xlat (bad) xlat push je adc addl mov adc cmp jp dec push icebp mov xchg sub pop stos xchg add add int3 test aam out idivl push adc je in push push dec push gs in pop pop push add jge or pop in inc sub mov sti xchg jge cmp add gs push sbb pushf and (bad) mov gs xchg and scas in cli out pop pop cmc fbld jne push sbb lret xor repz in xor out loop mov adc fmul cmp or pop arpl mov mov (bad) pop ffree mov sub addr16 nop sbb dec mov jbe (bad) int sbb stc mov add fwait mov cmpsl jecxz mov inc jno xor xchg sbb sub inc cmp aam xor xor push push gs stos push pop aaa nop mov popa sub (bad) pop pop pop xchg sbb nop mov jg adc push sbb out insl aaa mov in mov add (bad) jmp jbe inc out sbb subl pop and stos mov inc pop (bad) in movsl (bad) idivb aad inc pmullw jl xchg or scas pop pusha sub xchg mov mov mov cmp or mov mov dec mov or inc mov add fcoml pop xchg mov jnp push or adc adc bound loopne lds arpl mov mov clc insb in scas cs adc pop dec mov std aaa pcmpgtd jge xor outsb lret jmp mov in pop jl add ret sbb out pop push inc jmp aam push or testb cmp pop rcrb das add addr16 xor bound repz in adc ja mov xchg daa (bad) mov ret test mov sbb add aam jle ss (bad) fs fadds add lock pop and mov rclb mov dec and and or push inc es xorl and bound push insl xchg inc xchg lods jp ret enter xchg pop push outsl or mov pop insl arpl ret add jb pop dec fldenv stc adc movsb sub or and and in fs out fs sub pop mov lds je or xchg xchg and mov fcoml aam dec inc add fsubl sti xor fisubl test popa cmpsl test xchg idivb inc add add negb and sub (bad) scas jns add push add fisub sub dec (bad) je cli pusha jno jae (bad) mov adc std push (bad) mov cmp cli xchg mov std gs mov (bad) sub mov push push ss aam rcl roll hlt pop cmp bound mov (bad) jb mov stc test xor pop mov push mov lahf in sbb push cmp push push xchg je xchg adc (bad) cmpsb push popf das jb test shr dec pusha shlb rcll pop cwtl (bad) popa fnstsw dec or fcmovnbe loope mov add sbb out and arpl in push pushf es repz (bad) cli dec rol xor jle jbe mov mov fildl mov lcall ret sub into std outsl aad dec sahf mov cs add lods or or add mov add mov mov insb xchg cwtl jo sub or int3 add and fldl2t sti sbb or sub adc out jge lods scas out mov lock dec dec insl in (bad) addl repnz fnstcw mov xlat and pop sahf cmpsl and dec pop lcall popf sub add push lea frstor mov leave mov pop mov js mov sub pushf cmp mov and push add test xchg or lds pop in (bad) jmp idivl mov xor inc push popf jl out or dec cmp sub inc or dec xlat faddl popa inc out outsb cmpl jecxz mov jmp pop xchg dec (bad) icebp push mov popa sbb or gs push push (bad) cltd insb xor out sti repz push inc out (bad) mov xor adc idivb or jnp dec ja cmc xchg jecxz std add add lds fs mov dec mov push xor loope push fs cmp (bad) cmpsl inc adc jb pop fwait mov (bad) enter imul scas jbe add cli add pop test andl (bad) test and nop jo out sub dec jo je leave nop cmc vxorps out add add dec (bad) je push push cs jns jle lock xor fwait mov out push mov (bad) sbb addl in ret push testb mov xchg nop and bound mov jo pushf shll inc pop sahf or jnp sbb push add add add into sub rclb lcall pop pop test xor lret in sub jp push jnp dec mov fwait and sub aad mov push jb xchg cmpsl negb xchg jg push outsl push rorl xchg mov cmc rolb xor add push push pop ljmp pop xor mov leave popf btcl jb icebp sbb fisubr inc or jp jecxz (bad) arpl mov ss outsb jecxz xor imul xor xchg jae es and cmpsb push adc add add add add shlb stos sbb mov leave sbb stc (bad) lock pop pop jnp sub rclb (bad) mov cmp mov pop or pop cmp in mov sti adc mov add (bad) jns sbb pushf rorb xor add hlt adc outsb sti ss and in xchg xchg jb and push fiaddl test inc pop push jo and test imul flds imul gs call sub xlat fnsave mov cmpsb stos jae cmp push (bad) addr16 xor jae div loopne add add sub fdivs lods loope add add dec imul sbb mov push ja mov (bad) inc or cld dec mov cmp add scas jbe xor mov in push mov xchg sub test sahf aas dec sbb (bad) gs jns movsb in push xchg das sahf jmp sarl adc adc mov (bad) adc pop jge roll or enter dec and leave xchg flds xchg inc imul lods mov add add imul mov out sarl pop sbb xor xor pop mov test hlt aam subl in xor (bad) jge mov jp rol (bad) fiadd and mov jp lods jg pop add out orl mov clc lcall mov push cwtl or scas test iret (bad) jno pop (bad) sub add add jl stc dec push sbb (bad) into in xchg xchg xor sub jnp scas xchg xchg loope hlt enter dec in and subb paddq push dec cltd ja cmpsl (bad) lds lods jp add mov test movsb test ficom push pop xlat shrl xchg pop add lea push cmp xchg mov mov add cmp xor (bad) hlt aad je into test dec inc ds into inc in and add dec add (bad) xor pop jns ljmp push (bad) cmc pop sbb fldenv or pop cmpsl lahf popf or je push aaa xchg cmp (bad) push cltd ja stos (bad) divl add add push ret inc dec ja mov out xorl cmp or jl pusha jbe pop (bad) ffree mov jbe dec lods mov mov pop mov mov mov jnp daa pop jmp sarl sub stos lods pop out push dec hlt pop and mov jns add popf mov or dec dec adc lret fstpt cltd dec and dec imul and xchg ja add dec les mov jbe aas aad adc sbb (bad) ja cmp inc or into arpl aas (bad) ja adc push iret adc fwait xor lods add fistpl jmp enter enter outsb in or add adc cmp sbb sbb xor pop jg repnz lahf pop mov imul xchg or mov test sbb fldcw inc mov out lods jb fs rolb lret mov mov and cli outsb dec inc mov inc push add lock icebp stos (bad) imul push roll xchg mov shrd xchg jns jo cmpsl jg mov mov cmp arpl pop leave movsb insl cmc add jmp or dec sub or and rorl mov mov jo dec add and dec fldcw add lods cmc push cwtl stos ss jnp pop cld fisttp adcb movsb push aas popl fsubrl inc in iret arpl insl pop xor movsb mov and int pop inc (bad) xor into insl (bad) cmp sbb mov lcall dec pop sub jo cmc adc pusha xchg push and add add popf (bad) xor xchg add pop inc adc ljmp loop mov cs fsubs cmp (bad) jp (bad) cmp jmp imul pop or mov jae fnstsw dec pop mov cmpl or push add sub xchg fmulp cmp inc and add add insl pop push mov sbb mov pop jne pusha test in dec fcoms ljmp or adc int add pop jae (bad) xor loopne jno cmc xor mov gs or popf xor dec pop mov cmpb and lcall add add (bad) lock ret pop into mov inc push xor pop lahf (bad) mov test push dec push (bad) aaa or lds push ror push in rorl cmp jb or aaa clc jge inc xor xor mov push and xchg push call sbb pusha in lcall add add xchg stos sahf xchg lahf sub add aas mov xchg mov xchg loop aaa faddl xor adc add pop inc mov cli jae loope pop rcll rcrb xor inc cmpsl test out xor or imul loop je clc sub out adc divb icebp jb out mov add add es or mov sbb das in aas test pop and imul arpl or mov (bad) cmc jecxz add or dec xchg fs mov sti adc insb sbb push ds and scas (bad) dec fldln2 fwait or call add les jle or (bad) hlt or jg int pop xor dec fnstenv roll hlt dec les jo xor push lret repnz jle shll pop xor jno (bad) sbb xchg cmpsb and fdivr in and jg fidivrl add mov pop adc push hlt lcall jns dec mov lahf roll loopne (bad) mov or lods push bound xchg sbb mov mov dec popa jecxz imul fstpl call test lock cltd cmp (bad) stos sahf cld pop cmp rcr sub adc (bad) mov add add fcmovnb (bad) pop push sub sbb jl (bad) xor aam xchg test sub hlt mov mov add add or jmp daa mov add popf dec loope xor sbb dec add mov xor notb add add sahf sub push mov mov xlat movsb es jns dec cmc mov movb lods lock inc lret jmp sahf popa decb add not mov (bad) in aam outsb push inc fild int3 test adc push push hlt fdivs xchg fstps adc mov add add add iret cs bound and ljmp roll xorl xor mov xchg test (bad) cld and push add jb mov xor mov xor jae mov sbb or sub sub test scas roll add add loope ret daa xchg js (bad) mov lahf adc cmp rorl sub jp ret ret xor nop cmc inc pop rorb lea mov idivl mov sub test loopne jbe,pn outsb shll inc cltd lcall jnp aam aaa das dec add add sarb scas pop fbld icebp add cld xchg push mov push sbb mov (bad) add sbb jl sub (bad) call adc adc cwtl xchg adc shl gs push mov inc xlat pop stc mov in push or test mov cmp push jp pop testb rcrl add pop iret fstps aad or sahf mov gs mov mov pushw mov clc mov inc pusha dec and cli std dec insb inc xchg mov add das cmc in leave mov arpl cwtl faddl jnp sub pusha loopne incl loope xor stc sahf fistpll aas insl mov jno (bad) popf ficompl or xchg add in es sub push arpl hlt mov (bad) jne dec insl or cmpsb into adc cltd ss scas xor fsubrs lds push (bad) lds mov push add mov shll int3 rcrb aad mov jle loop cltd jecxz ja outsl cld push fs dec (bad) sbb enter jo xchg xor lods out fs xor aas ds fwait push or sub pushf adc pop imul mov rcl cli dec xchg dec (bad) clc aas popf mov sbb add add lock loopne jp mov push cmpsl out fimul insl jo repnz cmp jecxz popa inc mov pushf mov js cmpsb and or sub push mov push imul push fsubr and pushf (bad) xlat pop mov ljmp out repz mov adc into sub pushf adc cmp daa call ljmp testb mov bnd jle addr16 push nop stos adcb xchg cmp out xor into cmp adc dec xchg (bad) scas inc adc cmp nop (bad) (bad) jnp mov fwait pusha lea push fstl jbe mov mov (bad) in dec sbb pop shrb repz div paddusw ficomp faddl call jmp push mov mov sub sbb sti dec push iret rclb and and jmp xor push (bad) testb mov sbb outsb lea add add (bad) in aas sahf cmpps out out (bad) pop jns daa pop mov and mov (bad) cmpsl divb bound mov sbb xor mov lods mov jp or sub pop jle push fisubrl (bad) ja push push sub rcll mov out scas inc dec out sbb mov pop mov mov aaa in sub add adc repnz sbb loopne mov sarl push sti dec cltd inc xchg mov lret popa sti mov loopne jb sbb lock jo add jmp pop mov cmp add lret into imul fcmovnbe jle add add stc sbb hlt or out ficompl (bad) fbstp test and ficoml or pusha or (bad) loope out jnp add jbe aas test (bad) pop mov sbb push dec divb inc gs inc orb sbb (bad) (bad) in inc test dec test mov add ret icebp add dec jp popa xchg dec fdivrs or or add icebp jnp leave in cwtl pop iret cmpsb dec dec insb stos (bad) std lods xchg in bound jmp xchg lds mov sti dec jo insb dec mov xchg sahf les xchg push adc xchg ss xchg in insb sahf add mov jl mov jne je std mov mov (bad) pop push test jl sbbb out fs in jae add pop adc sub xchg ficoml mov add stos mov outsb sbb adc mov cmp sbb jae sbb lods ret arpl push or mov add add adc movsl (bad) xlat je shr and aam jl stos xchg aaa xor jle xchg xlat fbstp call add in movsl cwtl enter push fwait mov stc pmaddwd jecxz sarb jno push add cmp jnp pushf and movsb xchg mov mov add add jle xchg or repz scas cmp nop cmc dec sahf pop iret mov push add aas fwait ret es mov push scas fs push inc xchg ja jl mov jae stc lods mov cmpsb push fwait mov or or pop fwait dec gs mov pop lods xlat add add dec adcb inc mov jge (bad) nop in sbb fstpl inc pop mul dec call (bad) ds add es sub repz fwait inc outsb xchg push add mov xor fwait lea lock push dec adc xchg add add jb pop stos js aam loop jmp cs mov imul cmp pop pusha push push insl shll test aas push jns cli cld js mov lahf lds lcall jge adc aad sbb pop push insl and adc movsl sub loopne jb out inc dec inc std hlt or add add ret lcall pop mov adc xor stos add (bad) mov vpand fadd cmovnp inc jle (bad) insl xor add mov fsin arpl mov call cwtl xchg nop xchg xlat subb dec call sub jge sbb repnz lahf insl popl add add add dec jp test inc ret or xchg jge (bad) push ljmp xchg fidivrl dec stc (bad) xor mov stos out (bad) mov jne js out cmp idivb int mov pop mov cmp xlat movsl (bad) add dec push insb push mov pop inc cltd push xchg add mov fimul fistp mov outsb loop shrb imul cmp pop xchg sub fcoml test test pop pop sbb xor sbb mov and outsb (bad) mov add ja mov dec cwtl (bad) xor daa call loop dec fimull dec mov pop or repz dec imul xor icebp into inc ret pop rcr mov les ljmp out mov (bad) cmp sbb jmp xorl js xchg fldt rol out sbb push (bad) xor mov sub mov clc orl (bad) cmpsb sub cmp xor call inc jne pop mov xor out add test cmc ja push add xor loop fistl pop lods add insl pop push es stos mov inc pop shll mov (bad) mov add add fistpll and ficomp add and insl jmp dec jno popa mov fcoms cmc ret loop pushf (bad) out out adc dec mov movsb hlt cmp pusha into or pop dec das sar inc in cwtl xchg loope loopne and fs mov pushf rorb jecxz or cmp and ficom add add stos add sbb adc hlt mov cmc in imul aas test push pop shll repnz fmull adc mov add nop cmc xchg lock sub into add in pop call pop jae enter notl rclb push inc mov push add pop icebp lods add add divb dec add cmp mov push ret pushf fs in or je and lea (bad) dec adc leave mov mov out imul xchg push shll mov cwtl or icebp test jge cmp xchg add add test fwait lea mov add pop mov push fsubl outsb arpl or scas mov mov jo nop add lea int push sbb xchg xlat pop (bad) push mov hlt pusha pop pop div (bad) js xor flds cmp pop xchg push pop jbe sahf mov add into push stc pop xor jle fwait mov add movsb mov xor ret xchg jmp sub add and lea or and imul push iret rcll insl xchg lods outsl aam mov dec in xor push insl mov ret adc jmp (bad) jne repz insl insl and lds dec insb dec in rcrl xlat pop jp aad mov mov repz dec loope bound mov inc sti dec dec inc ret push cmp xor sub bound ror data16 dec insb (bad) in repz pusha push dec insb into pop xchg js dec jmp or (bad) sub (bad) icebp cmpb add push aam inc in scas lcall call add add and adc sahf inc or rolb lahf and mov xchg cli mov das sbb pushf add adc bound inc arpl addr16 jg sti fsubrp inc mov lea mov mov add add add fcompl mov xchg insl mov sbb dec dec push decb push and pushl pop jmp out mov mov ret mov pusha push jne jmp aam and clc cld cmp rolb dec ret xchg fneni(8087 and jl cmp stos xor sub sbb xchg lock aas popf mov cld push xchg js xchg outsl pop inc sbb aas outsb ja cli decb inc (bad) cltd sub rcll mov out fwait inc popf xchg out stos stos cmpsb push imull push adc mov cmp xor cmpsb and enter (bad) scas or add stc mov xor sti popa jge fiaddl xchg mov (bad) jbe in dec leave and pop (bad) repnz arpl pop mov mov pop cmp imul data16 addr16 aaa (bad) out (bad) and cmp mov icebp into lods cmp dec les add add insb int3 add dec rep xor jmp inc loopne adc adc mov fwait cmp adc repz fldt fstl adc dec add cli lret add inc inc adc push mov fs cmp sbb xchg jo mov jb cmp xchg jmp and lods stc cld hlt in arpl cmpsb mov mov (bad) sbb or notb xchg rclb push cmp mov push sbb mov mov add jb fwait (bad) pop mov jne out dec ds daa out nop sbb xchg sub mov and add pop or adc js adc or xor movl mov inc mov inc push jae testb call pop sbb imul jns psubd outsb xchg in mov shrb fnstsw add mov add outsl add add fdivs add push inc popf test dec (bad) mov test into mov sahf loopne push xor in cmc ja stc call inc cmp xchg in add push push push les mov mov aas pop add call fistpll add nop dec repnz sbb push dec (bad) and mov sbb mov loope sahf inc jecxz cli daa movsl lcall pop add ror push int bound mov cld cmp inc pop adc mov mov jecxz or push sti add sbb (bad) adc add loop in pop in dec bound sub jge push or cli imul scas (bad) lds outsb xchg (bad) pusha push in jp sbb aaa add push jp addr16 arpl mov outsl inc hlt or repnz or xlat cmp loope and xchg repz rorw push int sbb roll add jbe mov aad stc mov and (bad) mov mov sbb xor dec mov pop or sbb sub imul outsl jnp push popa das test lods fwait icebp (bad) enter into add add add pop mov xor jp jecxz add enter pop cmc push sbb and iret mov inc fcmovbe adc xchg inc mov mov fild mov imul push loopne lds xchg aam aad xor add mov dec jne inc push (bad) ds push mov xor jg (bad) jmp cmp imul repz shrl fidivr xchg fiaddl bound lcall xor and pop sti imul mov jne addr16 sbb xchg insb pop or dec in rclb push loop add add cltd (bad) in mov addr16 cmp out out add and mov (bad) repnz add bound repz in xchg fsubl push jg stos lea jns mov test and in mov out push jne pop pop lods push xchg sub leave xor fwait mov add jp push (bad) jecxz inc sbb mov cmp push jno imul orl cmp sbb push scas (bad) mov xchg test pop adc cwtl xchg dec out fdivrl adc icebp pop or inc arpl and clc outsb adc test jno jb sub rcll xchg dec pop cmp xor enter loopne xchg cmpsb nop mov jae repz push mov daa movsl test out sahf jl lds cmc cmc lock mov mov test jnp and in pushf stos call mov and dec icebp out cmpsb or xchg mov add sbb inc bound push inc sub mov in aaa pop pushl push mov cs push inc xchg mov adc hlt or and dec int3 test orl add mov push dec lcall add mov fistpll adc push idiv jmp ret aaa out bt in call or (bad) fisubr call andb mov mov or sub and bound hlt es push adc push mov inc push fwait or pusha in add ljmp xor repz sahf and mov (bad) adc mov mov push js mov (bad) mov decl jg rcrl in jae mov imul popa jle in insl xor insb and out and fs fdivr insl jb xchg in xor pop loope cmp jmp fimull jbe (bad) pop in mov rcrb mov cmp fcmovbe dec ljmp call cmp cwtl lcall daa imul push push xor testb dec mov (bad) scas mov xor data16 or icebp shlb add mov pop add xor pushf sub adc jle sbb movsb insb push jno push cmp jmp shl dec insl sub cmc roll ja out mov pop scas xchg mov es pop lret sub pop cmp jg iret adc jmp add add mov xchg xor cmp inc jle xor loop inc mov subl aam sbb push and stos cmp xorb push rcl repnz mov scas push xchg pop cmp jecxz mov iret sbb cli jae push shrl lods lods mov aad sahf sahf add mov decl push push push test sub mov aas adc outsl loope push cmp into inc les mov inc push adc and mov lock lea shll add sarb inc cmpsl int in imul jmp add mov pop adc jge and lds aas outsb mov jo stc ss mov (bad) sbb jecxz popa mov push sarb jno ja inc (bad) push icebp ja sbb lret ffree imul stos adcl repz lahf xor and sbb int3 or out add inc xchg pop js inc xor jmp push ret imul ss jl popf ja inc pop push mov push add push sub jp sub xchg pop dec cmp sti sub cmp fisttpll fldcw pop scas pop sbbb mov sbb in js add add add add mov shrb scas std sbb or repz sbb cltd and dec rol stos repnz mov xchg test sbb jle sub (bad) sti ss nop and xlat in push out cmp sbb lahf mov mov test xor jne jb in xchg add lock push and icebp push cmp sbb jecxz adc in enter outsb adc stos loope sbb aaa stc out jbe cmp mov jno ja lea insl mov lods test adc cmp mov jg jae icebp mov mov sub nop out shll ja addr16 sub add add add or movl or test pop xchg adc cmp cs outsb add and loopne jns mov leave pushf js cltd out mov mov cmp sbb mov jne or or and adc ja push mov out hlt out fiaddl add add mov push push call insl lcall dec or lds or xchg push push xor adc or mov mov push (bad) mov adc mov dec jns ja inc pop imulb lret xchg inc sub add add push clc adcl mov inc pop js push push insl or addl and enter adc xor push xor push xor jecxz sbb mov adc (bad) repz neg mov mov mov orb add add repz rcrl rorl cld test movsl stc mov dec mov cmp std mov stos aas add out xor jl cmp jnp clc jp in (bad) xor mov stc arpl add add jmp or push es sbb lret mov scas cmp hlt and out inc stos mov out lods call mov mov xchg xchg sbb decl mov sub mov popa adc out cli stos (bad) adc mov add daa pop dec dec out dec int3 jo add test mov mov and lcall nop add add sub out dec jns add jl test push mov cmc cmp adc mov nop xchg mov je xor out push test inc sarl xchg punpckhwd es jge in xchg inc or mov xchg lock (bad) xchg in push sti fldl add add adc test inc or (bad) mov or mov (bad) jle mov fs (bad) mov push (bad) int sub movsb jl jp lret insl xor xchg inc inc (bad) icebp xor mov mov adc aad pusha pushf stc pop mov xchg mov mov std or mov add inc dec inc cli lret fiadd push cmp cmc or push in mov mov popa cmp ja xchg repz cltd (bad) frstor xor sub jnp flds cmp testb mov vsqrtpd push jp pop pop in fs mov push add mov sub add add fwait sub in xchg inc call arpl add push lahf arpl xchg mov or rcr out lods add cmp push adc pop pop mov repnz aas sahf or (bad) popf pop add mov test xor sbbl shll dec xchg pushf ds and xchg dec dec sbb or add add jp sub cwtl pop mov stos pop lret das jp mov push fnstenv bound dec dec out enter test aam mov push fwait jecxz mov mov (bad) mov out sbb mov loopne out mov int3 cwtl ficompl fimull jo (bad) xchg adc pop jmp test pop jmp mov mov cmp std mov pop push insl sti jp xor outsb mov (bad) xchg or andl in (bad) lods inc popf leave (bad) outsl loopne mov testl popa addr16 inc or or loop push add fwait mov aas mov sub add leave mov lea popa outsl (bad) lock mov (bad) inc pop mov mov inc push sbb cltd jno popa gs decb and js inc pop fidivl in and xchg pop (bad) push mov push jle les je inc mov fmul xchg mov mov stos fidivrl push bound fdivl mov adc daa pushf and fildll fcomps pop (bad) popa enter in sbb addr16 mov leave cld cltd cmc lds mov xor dec icebp dec push jmp inc mov cmp leave pop mov add jp mov pop ja test mov repnz cmpsb or mov out jae push add add add add add addr16 cmp xchg das enter push dec pushf cltd jecxz loopne loopne jmp xor dec fs outsb (bad) and mov xchg test subl dec mov pop in mov mov pop mov push insb outsl das loopw (bad) js out gs add hlt dec push fsubl jno jnp push pop cmp cltd scas es mov gs mov (bad) inc cmpsb cmpl test pop jae mov jo shll jle adc sub add repz clc sti mov jp xor and inc ds add jmp jl add mov pop dec dec dec sbb push lods out mov lds stos out sbb xchg cmc mov mov cwtl add ja jle mov test jae xor jae insb fs in gs xchg xchg sbb (bad) out mov insb aaa insl mov clc mov cmp pop out push push aaa xor icebp jecxz pop rcrb scas xchg enter cmp js das test aaa mov (bad) xchg jbe cli je xor add push popa shrl xchg clc push jb sub imul jo iret out jmp fsub xchg repnz add add call push call mov (bad) dec or call cmp xchg pop push pop adcb push push mov lahf inc cmp mov cmp scas xor dec ljmp clc std sti cmpsb (bad) xlat xor sbb outsl add add fdivrs cli ja xchg xchg pusha dec mov xor pop inc aaa pusha mov or sahf cmp in insb incl cltd cmp aaa bound and mov out enter test aam mov int3 (bad) fcomp xor mov (bad) test repnz mov lods cmc je add add in fmul and test imulb (bad) or mov (bad) inc jne or adc test mov xor jl (bad) cmp xor xchg in mov push push push cmp inc fwait sub sub push pop outsl and sti incb test std pop (bad) adc out jae xchg test fidivrl sarb scas pop xlat ret add stos hlt pop mov aas iret paddd (bad) push les mov inc xor push (bad) jge sti push shrl pop jbe lds xor or push push jg das in dec jg scas loop sbb test lahf push ficoml jbe push addr16 out loop fs xchg add rorb push add mov push mov stos fistl test mov sub mov jno and xchg xor xor cwtl ficompl fimull fst xchg adc push mov xor mov fldt es xor popa xor fcoms lahf add add lcall rclb xchg mov cmp push incb movnti push pop mov mull or imul in mov fs pop rorb je sbb xchg jae inc pop (bad) or pop rcll mov push xlat cld cmp mov sub cmpsb movsb push push add mov sahf xchg mov adc out aas inc xchg test int3 adc adc or mov lds and cmp inc push mov das jns mov pop sti js lahf add pop and clc inc bound cwtl add pop out xor leave and in mov add scas arpl mov in add idivb into outsb push sub stos lea jne ret or push mov imul add jmp aam (bad) mov pop fwait inc xchg std mov mov jne repnz dec repnz pop mov jge lods mov add add roll cmp scas sbb cmc jg sub mov inc xchg cli pop das imul sub out ret pop add xor sbbl jo add or and test mov pop std out cld outsl dec mov jns mov cmc (bad) jl adc test shll add and out pop (bad) mov bound sbb in sarl lea xor pop fwait mov in push sbb mov fidivr inc outsl push test sub ret jge movb xchg rcr scas mov adc fdivrl enter shlb mov cmpsb cmp cmp in adc scas pushf cmp lods add outsl nop sbb inc mov je dec mov mov xchg xchg pop dec cmp data16 sbb adc sbb push (bad) mov int jnp push mov or shrb sti sub sub fsubrl (bad) xchg (bad) mov push loopne mov sbb imul or add cwtl fidivr xor mov lock jl xchg xchg and cwtl ja test and inc xor popf pusha das call lcall add mov in repz idivb (bad) lods sub sub loop (bad) fcompl lcall add lahf xor repz enter scas shrb ss adc sbb (bad) loopne push rorl mov fldenv sub repnz mov push xor or add add add xor add cmpl sti dec dec dec loopne xchg mov and jecxz into jmp adc pusha stc clc out fldenv cltd aam clc out jecxz or mov fildll mov add je xchg sbb cwtl pop sub cmpsl cs sbb out push mov add lds pop pop push and rclb cmpl mov cmpsb mov mov in dec test notb shrl adc dec fucomp dec dec jle rcrb inc shrl inc leave xchg lea and test pop addr16 sbb bnd lret call mov dec movsb mov inc mov xor ret sbb mov inc jmp jp mov cld cmp push sub adc mov jae lret xchg lahf pusha repz fcoms cmp inc addb sbb fdivl imul fmul bswap cmp pop shrl loopne add arpl pop fldcw xor mov xchg add mov or push movsl mov test mov push sbb mov test mov inc adc repz jge or and mov xorl cmpsb stc mov pop int3 add ja stos sbb add and lret pop xchg fiadd sbb sahf adc and jo rcl insl ja inc test push sbb pushl arpl jg sbb and cmp shll insl push sub or cmp into lods xor mov lock fwait mov negb loopne ss in cmp add mov cmpsl sbb loopne xchg nop adcl dec fsubl arpl mov xchg xchg fcmovnu aaa ret jo testl cmp pusha ss roll nop in fisubr (bad) jg and pop or inc dec cmp cmc cmc push notb xchg sub or call aas fildl and repz (bad) fldt inc les xchg push outsl imulb xchg popa jge cmpsl add inc fbstp mov loope jmp cmp cmp inc pop dec mov in mov jo fsubs mov mov aam push lods fwait or pop dec sub lock enter pop fucomi push add pop mov jecxz pop ds aaa jg out test lock ds sbbb dec (bad) in mov (bad) mov adc adc add sub mov mov sub insb (bad) (bad) jle nop out iret aaa fstpl and flds ds lahf lahf sub mov add sub xchg out add outsb cli adc sti pavgw (bad) std jp clc pop dec std int3 aam popa mov in addr16 scas or (bad) lods sub or mov clc mov inc xchg idivl cmc cwtl imul jmp (bad) out push (bad) stc std fucomip movsb sub ficoml dec push fidiv add data16 das inc cmc ret push jmp add push mov (bad) mov or data16 frstor cwtl adcb cmp ficoml dec cmpsb loop push add in pop aad out frstor mov movsl orl add add nop mov mov cmp mov jle movsb sbb push cmp test push cmp mov decb fnstsw mov jl subb cmc aam fwait lea mov dec pop pop (bad) repnz pop mov sarb sub ja pop mov add mov sti (bad) arpl mulb fwait push cs push out in mov jnp inc adc hlt pop popa sub or mov pop dec adc aaa sub mov fs les lret inc and ds mov inc cmp outsl push and or add add add add js dec jecxz push push aas mov mov mov cltd xor adc jmp aad sbb cmp repz or xor loopne ljmp dec cmp cmp jno mov (bad) push std fnstsw and cmp rcrb push fdivs add imul add mov repnz dec arpl aas hlt add ljmp cltd dec dec addr16 fs jp iret xor jp es add adc lcall loopne les scas push imul mov mov mov jp loop sub loop adc xor pop sbb fisttp lea imul xchg cltd push hlt js sbb mov in subl cs xchg push lds cmp cmp sbb aas jns lahf mov add mov xchg test dec (bad) xor mov fisubl leave add add or dec test in test repz xchg dec push and mov pop xchg (bad) xor fs xchg jmp xchg out je testb pushf mov push push cmp push xchg (bad) xlat sub repnz cmp mov test pushf ds inc push add aaa push add jg pop loop push xor mov (bad) es aas jmp fild add aaa mov dec push pop add movsl or gs mov fwait jecxz data16 je push je sub loope repnz adc add push and push adc mov xlat stos dec push cmc lds mov addl mov xchg sbb xchg in faddp mov inc mov mov ljmp pop jmp loopne dec int3 jp fistl dec lret loop lods out outsl sub gs fdivrl sahf (bad) lds push clc sbb lret mov mov mov add mov arpl lods mov fcmovnu pop shlb out fwait shrb aaa push cwtl cmp aad arpl loop push xor push jmp and ret daa outsb jmp sbb movsb push inc dec sahf jp jns push dec push dec inc mov mov jb (bad) aad jbe popa adc jae movsl inc negb add pop jne scas test mov fimul leave je movsl mov mov shrl fs jb xor xchg xchg jl andl into fs inc ror cmp or mov xor mov aas add dec mov sbb or cmpsb test inc xchg gs xlat add cmp (bad) mov lcall push clc sbb repz mov jno inc pop push push (bad) arpl push sarl lods test mov pop pop xchg cltd (bad) ret push jge mov pop mov stos push pop xor stos pop jne cmp sbbl mov (bad) bnd add add add and adc mov pop and cmc std mov imul ds xor adc out push jg in mov movsl fisttpl dec add pminsw out (bad) aad repz ss sahf xchg pop jae (bad) mov loop es fwait add add imul test xchg aam or test xchg data16 fidivl aaa cmpsl jle (bad) hlt (bad) sbb push adc (bad) push lock in fisubr or rcrl je icebp leave jae (bad) gs mov jl insl pop icebp and stos loopne hlt xor add (bad) jno nop stos rcll lahf loope jbe dec int push or and call push out lea xlat adc sub cmc dec push mov imul out dec (bad) adc adc ds push leave mov jb sub sub sbb mov add outsl xchg js adc in sti xor push fwait mov xor std (bad) ss bound ljmp adc sub in (bad) popf incw or out pop push cs int and push dec jmp cmp add loopne imul xor testb add jge fisub adc (bad) out add jg sub out sub xchg inc aam push fnstsw mov pop out movl rorl stos push mov push cli dec mov pop or scas js xor mov add lods loop jmp jmp xchg js push dec inc mov add add sbb pusha ja (bad) cmp fisttpll pop mov add sub jae faddl inc (bad) jecxz push cs mov fwait mov xor out pop or loop lahf pushl sbb aaa rorb dec mov push mov scas dec mov rcrl sub mov or add add bound sbb lcall lret mov dec mov outsl out push rorl movsb sub sbb fidivl int3 lods mov sti pop xchg mov out and sbb mov cmpsl outsl push outsl pop jae dec add mov or rcrb test or jl xor add mov cmp mov leave sti mov and mov mov cli repnz cmpsl test mov cwtl add ss ret pop int cmc inc pop cld (bad) shrl mov fs das xor mov mov cmp lret (bad) xor fisubl nop dec cmp mov in sbb fldl and jp push push insl pop lds pop mov ja or bound movsl mov idiv sti (bad) iret jae sbb push jbe addr16 lea insl loop call sbb sbb sbb sub sbb ret testb mov add add or adc fcomip push mov lock inc push fwait or je xor nop jecxz push outsl in mov ret mov fwait jmp cmpsb sbb (bad) mov cmp loope mov push jo jbe push push cmp lret cmpsb cmp push int3 lcall fs mov push dec fadds rcrb movsl jne xchg je or sub sbb or dec and mov das inc jae ror push adc out in iret cmp add pop mov jno jmp pushf bound (bad) movsb jp pop bnd fimul or daa test repz movsl pushf stos rcll mov xchg popa add dec les ljmp push inc xchg movsb xchg sbb nop xor sbb xor sbb mov lods loop jle mov sbb dec pop mov fnstcw push inc cltd push add add add cli (bad) sub leave sbb addr16 lret mov mov sbb jge fwait mov scas mov cld (bad) (bad) pop mov push or arpl cmp (bad) pop ffree mov fbstp out sbb cmpsb insb lock pop int3 push int sbb icebp mov and xchg clc jae mov out push mov and pop mov push xlat sbb hlt cmp repz cmp jmp adc les add loop dec les and add lds xchg nop xor xor add add mov lods push jb (bad) outsl push fadds pop insb add mov stc adc popl fisubl cmpsl mov insl cmp and sbb lock jo stc cmp les sbb orl push insl ret inc cmp jae ss or jns cmp pop loopne iret in (bad) jo jmp push pop ret out push sub idivl (bad) push cmp out arpl mov mov inc jb cltd dec lods mov and xchg out inc pop or dec mov inc cmp aad fsubrp scas cmp pop or test push add das bound push add add (bad) pop flds mov add cmc cmc lock mov cmp push and test fstpt out iret mov pop movsb inc sti jmp shl clc (bad) mov cs mov fldenv lods dec mov test test loope inc data16 int3 ja popf mov add ljmp cmp or or popa adc lods neg nop dec insb pop fstl loope vmread fstpt ficoml bound mov or popa rcr cmovnp push jno cmpsl push stos adc repz into cmp jge inc shll std xchg out out xor add add add dec (bad) in in adc fmuls adc outsl out mov popf pop add mov adc fwait mov (bad) xor fidivr (bad) hlt and sub es je sub movsl fsubl or aam xor and mov roll add push sub pop ret jb ja mov leave cmp pop icebp insb sbb fstpt dec push dec sub scas fist arpl mov jns test lock xchg push nop sbb lahf jns test and adc lds std add add mov cmpsb lret ret call mov adc fimull sbb cltd pop (bad) out and mov mov mov test dec inc adc sub xchg sbb int mov mov sub fisttp dec in add and and aam mov icebp add fldl and pop or xchg testb shll cmp rolb cmp std push or mov inc fs inc dec aaa inc adc push sub fadds mov mov mul cmp jle push and out pushf pushl sahf shlb stos sbb sub mov clc push adc loop jecxz,pn cwtl add jno das push nop sbb ljmp push sbb outsb push push icebp mov loop add inc mov xlat in daa jb and inc pop or add dec lds jmp adc adc xchg idivl push dec in jmp xor xchg xor insl shll sub (bad) movsl xchg and scas sub inc lahf call pop (bad) jmp idivl rcrb mov jg mov mov loopne mov and add add mov jnp jecxz mov sti cwtl add mov dec push cmp fldenv movsl cmc cwtl test das divb out aas mov mov mov shll add and movsl mov out lret sbb dec das insl loop push add sub jp add add loopne jns in clc mov out into imul icebp mov and or mov adc mov popa jns fnstenv dec aad cmpsl add in dec mov or jmp ret pushf (bad) outsl adc lods cmp or mov mov push rcll jo std loope subl xchg xor aam xor (bad) mov cmp jg out mov shr jnp (bad) xor mov stc pop jo fistl push stc mov push pop int3 or pop xchg lret sbb or mov jmp cmp cmp pop mov mov les xchg sub in notb mov inc inc or cmp xchg ss mov cwtl sbb jo ret mov adc icebp (bad) mov push icebp out cmp lret test mov add adc jl adcl dec mov mov gs divl jno test xchg inc and xor es test les in xor cmp icebp out ficoml repz into lret into cmp xor dec (bad) cld fadds jg lret popa fsub out jnp call mov arpl and add test pushf or mov mov jo adc xor das pusha clc push inc les dec ret lret mov dec bnd xchg dec push (bad) leave and mov mov movsb jbe mov ja scas out decb loopne je push inc (bad) cmp incl pop dec rorb add xchg jnp jo (bad) and js pop fist mov mov inc cmp or mov imul loopne push jnp flds cmp incb inc aad inc pop test jmp pop outsl mov shrl (bad) inc out adc incb jnp (bad) leave cmp mov add add out push nop imull and cmpsl test pop push shr jge roll incl cmpsb insb pop push xlat cmp out in popa adc xchg mov jb in pop dec jl inc jle mov fwait mov aaa cmp push sub pop lock pushf ds xor xchg dec dec sbb testl add in cmpsl push push dec push stos inc jecxz xchg mov iret outsl push aaa push mov add xchg or sahf and jecxz aas in cmp lods mov sahf outsl ljmp push or popf (bad) sub fidivr repnz adc xlat xchg inc movsb movsl sldt add iret inc icebp (bad) scas mov fcmove mov int jne dec mov or jmp icebp or and xor test dec inc popf push and pop (bad) mov mov push lds and dec mov push sbb sti pushl mov or add add push sbb sbb stos mov dec (bad) and out aaa les aas outsb scas inc xor cmp push dec stc ds sbb movsb ljmp mov add movsb lret mov (bad) xchg pop push dec jle ss es xchg xlat and out cltd outsb cld arpl jbe arpl jecxz jns fs adc add (bad) xor mov cs mov sbb adcb and and jmp mov push lods adc sub imul push jb lock out aas and and jmp nop dec mov and jb sub out lods xchg cmpsb adc outsb popf stc mov add mov orb cmpsb call and dec je in clc and mov push hlt push sbb or adc sbb repnz mov popa flds cltd pop loop inc daa movsl xchg xor sub mov cbtw dec inc hlt cmp loope xor js inc mov dec sbb pushf mov addr16 test add fs repnz bnd idiv adc out jecxz inc enter jne test jp cmpl jno aam aam iret nop xor mov int push ja rcrl sub cmp jge pop scas add pushf loopne js pop jne daa outsb sbb popf outsb pop and incb add bound push push push xchg cld pop adc pop in push popf imul and add ljmp hlt mov int3 inc sarl fs sbb and sbb sbb cmpsb add pop (bad) mov aam push pusha xchg add push add mov pop and or (bad) pop pop xchg in jbe lcall mov ja popf xchg dec mov mov mov pop das dec mov pop pop movsl mov (bad) mov push xor test xchg mov cmp mov out mov add stos cmp stos jle (bad) pop hlt sbb std xchg (bad) mov inc outsl xchg cmc roll scas ja sbb mov (bad) testb or push mov mov and xchg fmull or jbe jge sub (bad) push ja ss dec repnz arpl out stc add add add add adc shl out mov push or mov pop or and icebp xchg (bad) in fidivr xor outsb jg add sub cmp (bad) push mov fdivl mov rcr in fs in or sbb mov lea mov jle idiv xor pop in popa fidiv add out push cltd stc mov sub inc (bad) (bad) push stos or jns xor sub push xchg in fimul ds addr16 or mov (bad) popf ret add or test mov pop jnp xor int push push pop mov mov add popa cli dec xchg push xlat mov pop pop movsb and loope push loop mov adc aam std or xchg pushf fsubr jbe adc std aaa pop pusha adc cmp test loopne bound (bad) lret outsl pop ss repz addr16 shlb stos (bad) mov add outsl push stos (bad) jbe mov dec add mov jno inc int (bad) jns xor sar stc ret xor loopne inc dec push mov add test das incl aas movntq out xchg mov lahf dec push pop cmc xor aad add subl add add into not add popa push es arpl xor cmp inc mov and jns jbe fwait and push into rcll idivl jp add rcl movsb shrl sub jb jo pop jo pop jg cli clc ss push xor mov out leave mov add add mov xchg mov fldenv (bad) int3 add cmc pop push inc aas adc repz adc push test cmp fldcw adc out inc push sub cmp sar (bad) scas hlt gs dec mov push xlat (bad) cld sub enter gs inc sarl (bad) scas xchg or jns add fimul add and (bad) xchg pop xor hlt push and pop cmp cli push movsb and push push add mov mov jge xor pop ror outsb dec sbb xchg xor jecxz mov adc inc out (bad) mov sbb insl loop and mov mov test xchg stos push or cmc in hlt push jnp jp inc pop push cwtl loope jb fwait leave cmp cld add out lock andb int3 push or mov shr sti xor adc shlb in push inc cmp and adc and popf xchg mov add repz adc into jle lds addr16 scas xchg or cmpsl jnp outsb adc mov fcmovne leave mov mov frstor aaa jbe test cmp xchg adc mov cmp push push fild mov xchg pop and add add add sbb dec dec push cwtl je mov pushf mov add jbe dec mov rol mov (bad) push test hlt outsl lock test push sub push cmp lock cmp jmp xchg lea ss fisttp sub mov sub xor fwait scas add xor xchg (bad) (bad) sahf push push test xchg xor push cs jmp jbe sub adc mov outsl or dec test lods adc leave out je imul mov add je sti jg push inc pusha mov out push pusha sub add push das mov ljmp scas xchg pop out fcomps inc pop in mov mov sbb push mov je adc adc jae out pop rcrl add inc pop or or or ljmp ret sbb icebp test cwtl cmp ljmp inc add dec sbb scas std add jge test add xchg and dec mov outsb lds jo into xchg push es cmpsl push lods scas arpl fs mull psubsw fdivp xchg mov pop pop decl test (bad) sbb xlat in lret push les scas ret push add fdivr jmp jb pushf or stc add repz adc push sti and cmpsl mov xchg cmpsb insb adc jo dec ds lret jg pop jns xor (bad) and lds pop mov out (bad) mov (bad) decl in sbb hlt stc lds flds add inc xlat test lcall repz cs les jae leave mov (bad) cld lods mul loope enter mov arpl int3 lret repnz rorl negl mov rclb and ds adc mov iret fwait inc mov mov lock xchg bound ret imul xchg (bad) xchg add lock ljmp inc mov mov push int3 scas xor addr16 jp movsl sbb dec add or les sbb sti pop jo xor mov xchg cmpsb fwait nop pop out push rcrl jg cmp jecxz addr16 out (bad) aaa push adc add ja pop in inc lret in stos lods lods sub fs mov fstl push loopne sbb rclb and lock xchg aad dec sahf loope jb pop addr16 out in fwait (bad) lret fldenv je xor fmull or addb fild jle sub sbb add push push sbb push inc loop xor fstpt sub mov xchg mov mov add int orb mov sub pop test push out cwtl into lret or mov insb in mov jle or jno test pop dec push fld mov push and adc add inc push pop out stos aad mov enter adc jo push jbe add pop dec loop mov les (bad) out call adc xchg pop mov and xchg dec push sub sub js outsl mov mov adc cmp cmp sahf push mov adc gs rclb andl mov sbb jmp xlat sub dec sbb in stos fstpt sub out test (bad) xor mov mov xor jp dec jmp adc adc mov scas popa add fistpll xor mov out fcom add (bad) cld (bad) std js lock mov in add rcll add mov pop adc dec ret jg mov mov sbb lret leave fdivrp cmc mov push cs (bad) or mov mov insl and xchg push cmp ds adc or pushf mov dec jg ret mov test mov inc icebp ja out testb arpl enter cmc cmp aad ljmp sahf or dec mov jno,pt push sbb adc imul dec pop decb inc iret push xchg lds dec (bad) xor mov out movsl (bad) jp cmpsl jmp sbb in push add pop mov inc test pusha and xor cmp cmp fimul fcom pop pop push adc andl sbb xchg (bad) xor repnz xchg push push pop adc repnz add dec add imul (bad) push enter mov pop adcb jbe loopne mov push inc xchg adc lds loope adc xor push adc movsb xor loop out lds push add cmp inc imul les je xchg xchg pop test adc popa repz ds add fnstenv cltd (bad) repz sbb loop add add jl add inc push push pop inc cli pop loopne xorl ret cmp dec test mov cmpl test sbb cwtl inc or out in xchg xchg inc frstor rcll ljmp movsb aas inc (bad) sbbl cli (bad) pop loopne pop out mov sahf jmp add pop mov movsb add fcmovb inc (bad) scas loop push and loop push fprem arpl arpl push dec mov sub sub in or dec or sub nop push in test ss adc push mov pop popa leave dec int3 pop push push leave bound xchg or clc popa jmp or xchg mov call jnp and sbb jno mov test repnz xchg flds cmp cmp or mov dec (bad) and adc (bad) jmp push loop cli (bad) jo,pt (bad) pop cmp mov aaa nop cmp push push imul add add inc repz add shr lret notb lea inc int xchg sub sub pushf pusha inc fbld lock shlb ret lods add insl push pop in mov jae mov int3 aas add add add mov inc pushf loopne insl pop mov imul add jb les sub jmp jmp xchg mov push jp xchg idivl add mov cmp jecxz mov test pop mov movsl aad ds adc jl fcomp mov inc cwtl dec mov orb jno loop xchg cmc lds mov dec sub push data16 je movsb xchg data16 inc ja lods dec jo push xor call dec data16 repz ret or in jnp fistl or rcr data16 pop mov dec in outsl and sbb insb add jle dec (bad) mov int cmpsl sub jae cltd lea cli hlt add add sub repnz aad mov ret push inc or (bad) jmp and push imul icebp mov or xchg sbb push clc call (bad) je orl outsb xchg inc jb jl jl sub andl cmp scas xchg push sti sub jge pusha pop fsubl dec dec jne push daa movsb or dec dec aad dec cmp inc xor test mov pop stos jle push jns lds (bad) inc (bad) lret aaa out jns gs and in scas ja sbb xchg cmp cltd jmp sti fistl pop jbe ret (bad) pop xchg mov xor outsl popf dec pop mov and and xor add mov mov mov adc add sub out popa pop xor sbb lcall mov cmp test ljmp push icebp jmp icebp mov mov test adc jae fildl add data16 mov mov lret ja outsl mov jmp fistpl or fdivrs iret aas push sub mov out pop test into jl sbb ljmp sbb sti cmp (bad) push or jo sti (bad) jecxz fimull out inc and add xchg add pop lods (bad) jo fild cmp jnp add (bad) mov in clc or dec inc dec mov mov jae aas jne lock arpl and pop out cmp sub inc pop sbb out in das mov adc lds adc mov push push mov or int3 into lret test fsubl push stos fiadd in xchg push ret stos nop clc fsub daa dec add sbb xchg sub in bnd jae adc jge ficompl mov inc inc test push ret lods adc add cs int3 add xor shr xchg jl push lret mov jp cld push jp les lret outsl adc mov mov dec push cltd subb loopne xlat fwait das mov xchg fstl jb and out jno pop add movsb sub jmp add add mov lea (bad) movsl iret js shlb lock stc enter ffree push adc mov outsl lret xchg xchg add mov xchg out cmp push cli (bad) mov icebp ss mov or (bad) fistp dec stc int3 mov push ja xchg push sbb lds cmpsl cmpsl add lret mov add xchg je sbb pop popa rcr in xchg fidiv adc sar mov mov pop addr16 push push adc int aaa xor lret decb test arpl jp and lods adc lods cmp inc popf fxch xor pop xchg stos lret fildll sarb fisubrl fcomps add add xorl mov jg (bad) jne lret push ret cmp das arpl push mov pop in pop mov jle aaa insb test in sub shrb mov dec jp xchg push xor test push in ss rclb push les xchg or mov inc loop push sbb add cmc std imul pop sbb pusha in and lahf jge repz add mov test mov dec fdivr das xor pop bound test xchg lcall cmp lret cmp cmp inc cmp ret add std add push push inc and xchg sub out popf fwait pusha add mov mov or sub pop rcr loopne out jno cwtl int jp daa out js jecxz stos sub clc pop mov ds mov sub movsb dec add out jecxz xchg sbb dec xchg inc add dec jb iret or add add add insb (bad) mov add scas push cmc cld and sub push push push aad iret cwtl clc rclb push adc insl lret mov pop sbb fsubr (bad) popf les cmp inc gs mov out mov je loopne stc jbe bound dec jno out add inc jecxz push mov adc xchg out adc jae xchg xchg jnp xor push imul adc repz sbb xor aaa fnsave shrl insb cmp addl cmp (bad) popa dec cltd mul das cltd dec sar cmc inc imul stc test mov mov cwtl pop fcmovb add adc popa mov xchg les adc mov mov cmpsb loopne ss push dec sub ss jae popa addr16 mov inc pop xor jecxz pop xorb push cmp jg dec push jne sbb adc inc mov pop mov push xor stos mov popa mov or jbe mov add loopne shll subl ret dec jbe push out lea fucomp adc jne (bad) int3 sysexit clc (bad) into icebp sti dec mov ja or cmp int mov adc sti je int xchg mov test mov sbb and fwait add lea cmp dec jp stc mov test adc and mov inc xlat enter (bad) jae cwtl or cltd dec inc mov adc popf incb ret inc outsb jbe lcall xlat pop int3 loop mov cmp inc sub lret ss sbb out cs lret or add bound sbb je add mov and mov push xchg ret push pop mov sub movsl into ja andb lods push pop jg outsl out sti mov add lods adc mov clc sub sbb out xchg push mov push loope (bad) jg pop add inc jmp inc in lahf push or mov std (bad) out add mov add (bad) mov dec pop je inc and int mov mov fdivrs mov imul in mov cmpsl jecxz scas adcb or pop icebp push xchg lods xor aaa push dec xchg das pop add add sub mul push scas mov mov inc push push push jp lahf or test ret jno and lahf ret pop negl mov xchg xor icebp xchg gs aas (bad) mov jbe jno mov add inc insb movsb outsl jge xchg xchg pusha stos xadd sub add repz or aaa push js or cmp mov inc lret lret inc push inc outsl fnop nop (bad) int jmp mov inc pop sti xchg dec xchg aam mov test scas mov (bad) iret xchg and lock (bad) ret pop imul popl add and fist stc mov sarb sbb fisttpl rol into ror cltd rcrb sub adc gs scas push and push mov push push push cmp int insb (bad) jmp fs mov jae insl and and (bad) hlt lahf jg clc cli sahf sub mov loopne (bad) popf adc add add mov mov stos sti aad jb xchg or pushf mov test into imul test xchg nop mov mov dec inc adc push (bad) test pushf cmp mov pop mov mov (bad) shrb add int mov jae xchg repz add and mov adc jmp xor mov clc sbbl (bad) (bad) or dec adc push add and mov addr16 adc rolb push aaa xchg jo jge cmc jnp out int3 rcll popa jb lock and inc scas pop movb sbb gs pop sbb pop nop xor mov mov lods push xor jno int stc mov cmp or adc in call test sbb ret and std mull pop mov inc mov jae push repz popf call push out push testb sub outsl arpl ss mov test in in xchg (bad) and or and push jnp mov ficom jg clc loope loope mov mov test push lea in xor vpaddsw dec inc addr16 dec cmpl scas push (bad) mov push xlat xchg in add int push clc push adcl mov lock xchg in xor pop test outsl gs pop jg lret ljmp or push cmp not mov sbb pop xor push popf sub mov pop mov jne nop imul test add add inc add fstpt lods repz jp shl movsl cmc mov sbbl shl out cmpsl out or das leave mull leave (bad) sarl call sahf ds mov pop push xlat inc loopne mov leave (bad) or mov add xor push push jp stos pop push or fisttpll cwtl or es sub cs fs in add add (bad) fcmove jns popa xor mov or xlat (bad) mov loop popf outsl and pop popl pop cmp ss inc jl inc sub add jecxz faddl cmp and mov fwait pop xlat leave jecxz outsl out testb ret sbb xchg jnp mov adc jnp sbb mov push jns push sbb mov mov fdivrs aas dec jbe lcall add fildll fiaddl pushf mov rcrl popa jne daa inc dec xchg xchg jns push mov sbb dec stos mov stos dec push xor stos fwait lea or inc in jo adc sahf test sub pop jno lahf jb nop xchg leave lret push mov xchg pop mov add repz pop std jo jb cmp jo pop (bad) cmpsl jle and and push mov sbb arpl and jecxz jo sti or (bad) push xor push rcrl ja aaa incl push cmp cmc repz push jb lret cmp nop cmpsb sbb add push dec outsl mov les lcall leave or jecxz xor call inc outsl in add cld xchg push cmp sahf xor push mov mov ja ret sbb mov inc outsb dec sti inc fsubl je je cli sbb pop lock xlat leave pop test add add jnp stos mov add js out rcrb and incl mov or (bad) leave pop add (bad) hlt mov insb jecxz nop mov sbb mov cld mov mov sub or stc sbb mov hlt fwait jmp dec mov imul add in cmp sahf (bad) test fimull (bad) inc (bad) push push inc pop stos dec cli mov (bad) imul icebp inc fbstp cmc cmpsl hlt fwait xchg adc cmp jg out or rcrl jbe ds adc dec imul nop jl inc xor add cld nop mov pushf popf test xor mov leave xchg sar mov jo in xorb adc int3 dec incl sub (bad) cld imul cwtl inc cs xor mov (bad) xchg mov or and dec adc mov lods xchg loopne mov addr16 adc add rorb jae int mov add push inc ds int3 aaa mov adc jmp cmp push jnp add cmp inc cltd iret and in or pop pop add mov jno (bad) xlat push sbb sbb out or (bad) imul sbb push inc repz cmp outsb lret insb add es add add loop leave mov xor (bad) pop dec push movlps or pusha das dec jp fisub push cs add push out aas push push loopne les sbb jns jno mov mov xchg lods jmp insl movsl pusha add add mov in mov mov pop in loopne stos mov cmpsl sahf inc adc xchg insl lods pop mov icebp mov (bad) mov push mov pusha or lods add shrb out icebp ljmp fldcw lea gs push or add add popf sub std and and aad jl mov jno mov and and imul call (bad) imul sub inc data16 movsl (bad) adc xchg cmp daa aas pop push xorl mov fs shrl fnstenv push xchg inc mov add icebp pop xchg cmpsl imul xor out ss sti adc das mov aaa mov enter int lods mov jne adc mov dec test cwtl shl jp fs mov imul pop aam imull adc mov inc adcl out pop aad add add shr jmp ss sub pop xchg out neg jge push fidivrl shll cmp xor (bad) in mov adc ret jno pop inc not and dec jo xchg (bad) test out push jecxz or neg push sub jbe sub xor xor add add shll pop lret mov test icebp inc mov and sti out pop mov inc inc mov ljmp or (bad) in clc xchg ljmp push imul mov cltd cli dec xor adc mov and or mov sahf add (bad) shr fs (bad) xchg insb bound or adc out push mov loop push add bnd std fwait sub push pop cli pop (bad) inc or lret negl lret (bad) xor push pop mov repnz in jecxz pop out outsl mov mov ret adc add aam adc mov lock push or addr16 loop ret cmp cmp aad mov and (bad) pop push dec popf jle arpl and and adc repnz and cmp pop aad dec fsubrs pop sub shrl lcall xor ss bound dec add add jg cld (bad) aaa outsl or jno aaa adc aad fidivr push rclb cs mov dec (bad) stc xor mov sbb (bad) lods xchg icebp data16 cmp pop push xchg in or cltd dec insl ficompl scas or pushf and mov rol in inc arpl dec xor add add lds push in cmc jecxz fcmovb divl sbb inc clc adc pop stos jns stos into stc (bad) repz xor push cmpsl movsl cs loop inc mov loope jne mov insl dec ja mov addr16 test into cmp sub jae dec pop xchg mov lock jmp nop fiaddl add add repz ljmp adc jo cmp mov push sub jg clc in popf add inc arpl inc cmp sbb mov and mov xchg jle mov ja mov (bad) and mov sub xchg into cli inc leave test mov out dec mov and push sub add add or jmp jl sub cmp mov jo push jb and std xchg int push stc stos mov aad outsb xchg inc lock je inc inc fcmovb jge test sti out or cld stc cld push in fsubrl adc dec insl in mov add add inc addr16 jnp scas jbe in push xor pop cmp aam hlt bound popf and cmc mov insl jl clc sbb (bad) fist imul add inc adc stos push movsl xchg adc outsl in loop xor sbb loope loop ljmp (bad) and cmpsb negl inc mov cmp int mov mov out or jns leave cmp push scas add (bad) (bad) cmc in mov pop lds pop push out xor sbb sbb bound dec loope popa fsts (bad) pop adc xor xchg (bad) xlat sbb push popa sti hlt in jns jmp add add out xchg xchg les mov push insb pusha fdivl add add xchg mov les mov push les pop mov outsb lret jp insl lret leave test mov (bad) out mov xchg js adc adc enter push and push mov jle jnp addl add add stos dec out enter jle inc rol in arpl xor (bad) repz jecxz cld cmp add mov push add lcall (bad) in inc shrl aaa add fs push dec cmp cltd test outsb jo cmpl add sarl sbb rorb add add inc jb jecxz rorl pop pop pop aad (bad) mov shlb dec fistp push inc sub or mov jne lret ss iret js jae or pop lds lret in fucom inc mov cs push ret jge pop xchg (bad) xor add add scas dec test test idivl (bad) lahf xor adc sti xor aad stos shrb imul lahf push aaa dec jb (bad) int3 ds pop mov mov push mov adc cli jecxz jge inc push cs leave stos dec inc xor add (bad) dec jecxz sub cwtl out pop add lods ret pop jno push push add add aam xor outsb roll mov adc std xorl fistl pop decl adc mov pop sub pop (bad) dec mov aas adc cmovg inc mov mov cmp movsl setno xor push xor ds xorb jb loope add add add add or fwait test pop xchg mov js mov mov repnz add pop inc cs cs pusha adcl icebp jge repnz push push ss pop mov shll push or aaa pusha mov inc fidivr pop (bad) test fcoml pusha into lock add mov fisubr sub test cmp xchg daa push pop (bad) lea aaa pop cli mov mov mov stos (bad) clc (bad) arpl sbb xchg pop push jbe mov mov and mov push pop mov pusha xor xor leave mov sub lea xor add fstl cmpl lcall push cld pop cmp out mov loope (bad) scas sbb (bad) push pushf xor and push or xchg out pop shl sbb cmp stc imull and enter insl and jl inc mov add xchg sub inc add ja mov fsubs xchg mov cmp stc sbb cmp or push out jno sub adc adc xchg jmp ja jp inc dec jnp pop xchg pusha mov call and pushl or adc pop cltd sti sti push mov rolb cmp int3 add add jmp sbb inc (bad) (bad) hlt pusha dec fisubrl dec insb (bad) jbe xor ret or mov fildll jg mov (bad) jmp fs pushf int3 mov loop stc into push cld enter in push jne sub pop or sub dec out lods and sbb or test xor ss loope mul mov sbb xchg xchg nop push shlb cmp ret ret push in cmp mov mov or inc xor push lods loop dec adc jne xchg imul negb and cmp insb pop incb cld sbb add loop mov shrb pop sar adc fwait out sub mov cltd dec stos cmp pop rol fdivrp cmp ror scas pop popf xchg cmp out repnz jae cmpsl xor stos jo repz jae push in (bad) push adc mov inc daa vmovdqu jp jbe out xchg add add dec jecxz into push xorl mov adc pop mov xchg adc inc mov dec jb or push stos adc cmp ss sub xchg jae jecxz xor xor stc jbe ds enter out xor jg jmp sub loope cmp add lcall in xchg es sub in ret popa out fisub push aas scas ljmp mov subb loope pop lock adc in lahf sbb jl xchg adc xor cs lock pushf cli xchg jnp xchg addr16 add mov (bad) mov mov adc fs movsl mov loope mov enter mov jb xor push andl sub clc (bad) mov loopne insb push jmp or lret in adc in jb scas repnz xlat movsl mov mov int mov mov push push mov add add insl jecxz and xchg xchg in jno push mov xor bound call adc xchg dec lods push mov fsubl add loopne sub mov int3 pop mov add nop loop push (bad) jne sub loop add fwait movsb xchg add jle outsb aas dec daa int pop or add add loop or jecxz fistl add jns outsl popf add cmc leave sbbl imul addr16 adc leave pushf shll call or cs incb (bad) mov add lea mov int pushf cli movsl and and std iret cmpsl fildl add add and cmp pop jle push in xlat jnp inc inc jmp ffreep cmp or adc xchg gs popa and or mov cmp mov std enter loopne aam sahf cwtl (bad) push mov es js mov push cli insl mov cmpb je mov inc push popf xchg and pop or (bad) mov les aad add addr16 push rcl xchg int3 scas add (bad) fimul aad xchg shr lods js pop clc outsb gs addl push icebp mov pop mov int3 sti dec loopne mov pop insl lahf cmc in and add add mov push or aas sbb fsubrl xor jns out mov test divl repnz xchg jle call ficoml rcl jle cli xor add jmp add jl inc jbe scas ret mov fildl fmul mov jmp pusha jg dec mov add add fs xchg loope je mov adc out adc (bad) xor jne pop mov popa fidivr popa xchg and pop inc loop je mov stos sub ficoml add (bad) sub sbb test data16 push jnp inc xchg xlat xor pop bound movl xor cld clc lea pop push jmp xchg loope into fdiv fldt sub inc int cmp cmpsb leave (bad) fcmovnu jl mov into lret mov mov inc mov shlb pushf push xchg or clc sbb adc icebp inc call or jle clc test add add cmp rcl daa cmovae adc (bad) aaa inc xor jecxz test sbb inc xor test movsb stos jno pop pop pop mov xchg inc pusha push fisubrl pop (bad) jge sub insl scas adc cmp out cmp dec stos sbb xor ljmp xchg or sub into or sbb push adc ds xchg enter jmp addr16 mov xor leave stos mov out in outsl mov inc and pop xchg test or xchg push sbb lods mov push in clc cmp push sbb or lods and mov adc add add ds cmpsl cmpsb mov dec jge in movsl xchg jp sub sub sti sub outsl mov fstpt imul pop inc arpl cmp (bad) or lock add shlb push stc outsl lahf pop mov add mov xchg stc mov arpl inc popf imul jle orb xchg and cmpsb imul mov cmp sub call insl jl add sbb xor mov sti mov sarb fcoml negl out fidivl fs (bad) xor jg bound out cmp inc push test arpl add std xchg mov (bad) push push pop inc cmp ds dec inc or cmp mov lcall in cwtl cs aad shl aas roll jmp push fnstenv or insb pusha mov pop dec add push jl dec mov fmull sub add xchg movsb jo mov (bad) dec cs mull mov and cmpsb iret in out cmp push es xor cmpsl xor adc imul addr16 inc pop xchg mov aad arpl cltd xchg jp or test je lea cltd dec pop xor daa adc jno mov add add fsts xchg (bad) daa leave lret popa inc stos and sub inc test aas and stos test mov insl xor andl xlat dec lods jne cmp pop cmp lret cmc inc inc adc mov fs test add add xor jnp out push mov movsb call adc mov lds fisubr sarl sbb jle out fidiv dec mov mov adc aaa mov ret clc jae rorl mov jb jnp or sub add pop adc inc sub out sub iret sbb divl push in into cmp jmp fs pushf int3 (bad) adc (bad) cmp mov jne mov jecxz or mov mov or jmp jns and xchg sbb cmp out test mov addb dec pop add push enter rcrb xor repnz mov mov jbe fcom (bad) sub (bad) cld xchg test arpl jmp adc pop mov xchg in pop sbb adc insl pop xchg mov pop pop int3 inc xor sahf (bad) dec mov jno mov push dec add add ror clc jae cltd adc pop in clc mov or call hlt mov nopl pop dec in dec cmpsb outsb pop or dec imul pusha clc (bad) in push repnz and inc jne in push sti or fbld (bad) or movsl mov shrb jmp ret imul add add int3 sbb cmp xchg jg pop mov pop aad inc cmp orps jmp aaa lret cwtl pop jl aas add popa mov jp js (bad) loopne cmpsl jl test lahf jo inc and xor in ja mov pop push daa adc jnp add add (bad) fildl mov dec popa inc xchg out mov (bad) stc shr testl out pop push sbb jge mov mov sbb fwait jno xchg scas insb pop push (bad) sti arpl or adc loop sbb jge push fndisi(8087 negb aam add add into fwait popf sub cld mov ret imul adc dec test or out ret stos dec push jg sbb pop (bad) loope js add mov andl adc (bad) sbb lret jnp and je dec jbe jge sub push mov add sahf mov and inc push lea pushf adc ljmp je jl rcl mov inc dec cmp push jmp lods negb mov add inc sub or cmp (bad) jo icebp inc sbb mov and stc dec push lock out sbb inc aaa ror add mov xor sbbl dec sarb test scas pop and addr16 lds and cltd mov adc out mov mov jbe push out mov shlb aad pushf call and ret in test pop sahf iret (bad) cmp add jp outsb in mov roll jbe jns enter jno ret mov cwtl mov add lahf dec int (bad) call cmpsl ja (bad) ss pop cmp push add fcmovnu or movsb aas xor (bad) xor bnd hlt arpl arpl jmp mov adc mov add add xor pop cmp ficompl in pusha push mov xchg sub lahf or out mov imul mov aas sbb fldt out xor mov and jp sbb mov pop enter add add pop pop sti out xor dec xor scas mov mov rcll pop mov outsl mov lods aaa (bad) ss test cmpsb xor cmc sub mov mov dec push sbb dec inc addl mov shlb cwtl pop (bad) out add and ljmp mov mov inc or frndint jb cli outsl mov cwtl mov push sti lods rorb test mov mov dec push jnp mov call pop push push jb call mov aam inc pop ret lahf out bound ret mov xor push cmpsl add lds sbb add xchg movsl rcll add xlat jo fisubl outsl mov dec fbld repnz xchg push inc out repz xor in rcl inc sub fldt and enter jno inc outsl popf (bad) sub mov sub add cmc lds xchg adc dec mov push pop repnz dec xchg jbe mov jb xchg out dec push sti movsbl imul mov push pop (bad) push add jmp xchg jp cwtl mov add aam add add daa sub daa pop bound leave xchg mov es adc xorb and adc xchg hlt mov dec inc push (bad) lock xchg shlb sti or (bad) mov fsubs pop (bad) fdivrs inc into ljmp add pusha bound mov lds ja or lret xor add add je cmp mov fistp test (bad) mov xor cmpsb mov xor out test xlat push (bad) xchg dec in pop insl add jb or push mov fildl (bad) mov xor out dec adc daa push push test sbb std xor or dec jnp cmc es data16 (bad) cwtl or ret (bad) icebp pop sbb and stc loope movsl jl cmp leave sahf outsb add mov cmpsl cmp int3 fcomps aam fwait dec sbb xchg jns loop pop dec cmpsb fstl ret das jno pushf (bad) and idivb cmp fistp add dec push jl sub fldcw sub cmp outsl jl mov inc jne mov fiaddl adc nop jle imul pop push adc adc lcall cwtl (bad) pop push loopne cmp mov and les test xchg sub push out fldl add sub mov add js dec mov lds and cmp mov jmp jbe xlat inc je push mov fnstsw xlat jno int3 in adc sbb fistpll (bad) std mov es dec (bad) fxch sub mov sbb (bad) push adc test das mov adc inc jge add adc cld mov inc fsubrl dec js inc xchg push jb xor mov jno jo mov inc or and pop rcrb rol aas (bad) scas outsl adcb push scas cs je insl dec push push out test inc ss test xor fldcw pop int and and mov js fisttp xchg and ret sub sub push jp loopne aam xchg es sub xorl cmp (bad) ljmp popa push shl inc in (bad) lcall sub push mov or adc fs aaa dec xlat xor add and and adc push mov inc repnz inc jbe imulb pop mov jb jo jmp cmpsl push dec sbb add pop subl mov outsl adc jge jbe pop pop jl or sbb cli or add add pop scas fidivl movsb xor mov xchg adc out rorb fdivl jle xor xchg (bad) cmp adc xor push xlat mov add out adc imul lea adc ljmp adc sti mov addr16 xor add inc popf pop call sbb xchg sarl add pop xor cmp std mov inc (bad) mov push xor dec push ss jl roll inc pop loop cmp cmpsb cmp cmp aaa jle repnz sub jo jnp inc decb aas sbb nop movq adc ljmp mov stos push jo arpl add pop lock add add fucomip mov popa bound xor in scas push jp cmp lock xor negl pop xlat pop push cmp popf insl sarb es cmp and ds imul imul and inc aad mov cmpsb das cltd push cmpsb adc jg pop js adc add outsb (bad) jae ss mov jns lods loop popa mov push cmp and aas inc cmp aas hlt pop mov lea jae mov ja mov mov mov xchg roll fidivl xchg mov jp add and lret repnz loope movsl mov fbstp inc int3 test add arpl insb pcmpeqw and mov jbe test dec loope mov pop (bad) test inc pop jo,pn fcmovne ret imul pop adcl fistl (bad) sub mov fs insb cltd dec sarl and das mov mov les stc fsubr nop add add ret jbe inc pop pop cmc xor xor jcxz push stos hlt mov push pop xor fwait ss mov pop adc inc adc es adc or fimull mov sub add les ret (bad) adc mov jnp mov aas xchg pop inc mov addl add mov std inc cli pop mov dec xchg xchg add sub add (bad) push mov fs bound mov lods adc iret std jl mov pop mov add adc daa fmul xor repnz adc push mov push jns (bad) push dec mov repz test add add pop dec dec jp add rorl rcl pop push mov mov lahf test adc pushf outsb xor xor repz int3 int cmpb loopne fs js out inc dec lcall push mov cmp int ds nop dec mov jo pop outsb add lcall add add adc adc jmp mov je lods jge into into lock enter lods rclb lea int3 iret out mov rcrb data16 xchg sub add aaa jns cmp mov outsb sbb jl xchg mov inc or and xor add (bad) in cmpsb add and outsl and outsb enter or sti bound shlb stos in push aam in add mov sar bound sub dec sbb cmp (bad) das xor js push jne xchg adc out in pop xchg stc or dec inc mov add mov dec xchg loop mov push adc mov fsubl lcall jecxz push or rol inc dec lret xor xchg nop loope push inc sub mov imul insb lods loop cli and xchg adc loope repnz dec aas sub out imul adc add add mov lea pusha adc push pop mov push daa imul mov insl push test inc xor inc inc movsb js int3 clc insl (bad) push or jae and jge je gs in push fisttpl and (bad) call pop popa in push xchg push xchg loopne and pop cmpsl mov pop out ret xor push add fidivr push (bad) cmp add enter mov cltd adc out pop leave pushl rol addl ret dec (bad) sub jns inc fsubp stos (bad) call incb scas adcb xchg mov fmul dec cmpsl es sub xchg and pop jbe movsb mov mov cmovae add pop dec fstps mov rorb push cmp pop out fildll add cmp (bad) push mov and jno mov sub push mov add mov xchg xlat add dec mov cli jno,pn xor inc sbb and (bad) mov sbb add add aas shll pop data16 push sbb dec pop sbb xor mov xor xchg sub and xor (bad) mov js dec and imul (bad) sbb arpl lret cltd test push push int3 inc das ljmp add mov mov sbb ss loop adc xchg dec adc or and inc dec mov mov cmpsb mov xchg ja and jo cli popl mov jbe notb (bad) aas adc aaa adc nop mov mov loopne,pt mov add add pop pop stos mov push pop mov mov mov mov sub loopne mov das inc cld mov divl movsb data16 or dec mov pop xor xchg add inc push push (bad) mov scas daa lods stc aam stc cmpsl rclb add cmp leave (bad) cltd in cmp push mov fildll xlat jmp push repnz mov int mov or adc (bad) adc jns adc jl pop push cwtl pop inc les aas repz jbe je xchg fadd lock ret or jo lods fbstp js add add mov fimul nop enter std inc ret pushf popa lcall fildll mov push xor mov jae xchg sbb mov push packuswb jge (bad) fidivrl mulb sarb cmpsl xchg mov clc movsb sbb loopne or mul push sar mov xor mov call add or mov xchg imul leave cwtl and fsubr (bad) nop icebp xchg (bad) mov jae xchg bound or add cmpl jnp push pop jbe xchg mov adc paddsw cld rol and std rcll sbb aad mov add mov mov mov push loop cmp sbb (bad) test into pushf addr16 cmp loopne mov ss jnp mov add xchg xlat pop ss push lret push mov outsb inc cmpsl jl in call cmpsl rolb mov pop sbb xchg mov in add (bad) cwtl jne mov xor add mov mov fnstsw pop sbb jbe out out push jae adc ljmp pop push aam xor jl jge movsb ja movsb mov jp stc inc xchg jno mov and test xlat adc imul sub loop lret mov sbb xor xchg cmpsl add cmpl ds test dec cmc bound mov daa popa jg mov mov xchg mov pop cwtl loopne mov xor inc (bad) mov mov dec mov in adc add push fstps movsb aas mov adc test aam pop mov fsubrs push lods leave lcall push aas mov leave add outsl stc addr16 add jge loopne outsl std sbb pop jns lret xor fcomp mov jmp and shl out add jbe mov pop inc mov mov lods popa jmp mov jmp or xchg in rolb adc inc rcll out mov popa sbb popa mov in push and popf push test stos pop hlt mov fsubr sub popa lret mov add cmp out adc pusha rol je and scas mov xor cltd sub lahf out repz emms push negl push addr16 fldl pop push jmp push ss cli lods rolb xorl iret frstpm(287 inc adc sbb inc popf (bad) out cmp enter loop out mov loope test in pop iret jnp or roll arpl adc rorb or jp push lret add mov inc and jecxz push and rcr daa jno push (bad) mov mov fnsave lcall and outsl sub les or sbb repz add add xor push inc xchg gs in insl sbb mov fist push adc (bad) push pop cwtl test mov add (bad) jns jg jecxz rcrb adc insb pop stos bound test dec sbb test (bad) jae (bad) or ljmp add sbb stc adc mov cli addl in mov int out inc fs (bad) inc mov in mov sub outsb stos test mov mov in aam and gs mov and loop daa pop fiaddl or or mov mov add add adc les stc push movsb push dec lret fneni(8087 push dec ds pushf adc xchg xor mov dec cmp sbb cli rclb cmp xchg lods push dec in sub or dec pop dec das sbb pop dec dec mov mov jmp pop jle pop inc mov push cmp push mov push jecxz sub imul inc das pop jle je loop int data16 hlt push fisttpl stc cmpsb or lods jl dec push pushl cmp mov jae mov aas rol push push jns xchg ljmp and fs xlat (bad) push inc lods jns test add pushf cld push dec pop fiadd in mov notl lcall daa push xchg enter int pop xor sub xor sub push jne xlat mov cmp or fimul push push lods jae add pop push cs stc adc or xchg adc mov push jp in or xor cld xor ja jp fsubrl sub xor ret in shlb test cmp int add sbb sub daa cmp or scas push and shr daa movsl xchg xchg je add clc mov mov sbb jo mov jmp sub mov es pusha cltd lds pop outsl ja xchg inc fdivs imul xorb pop adc xchg sbb xor stos push dec imul xchg dec mov dec or mov inc mov jp,pn sub push int3 jmp subl or aam xchg and jge dec repnz jge fsubs jp jbe lea into or int out pop dec inc and or pop scas out lock pop pop mov dec mov aam insb (bad) dec mov sub sarb icebp cmp aas pop std pop sarb idivl test pop dec sbb or mov icebp add gs (bad) pop stos popa outsb (bad) jge into xor add inc add movl insb bound add mov std into inc (bad) rcrb cmp jmp not in xchg push stc aaa mov adc data16 sahf or xor add mov cmpsb movsl lea mov (bad) lcall mov lret mov pushf mov pop ret repz jno push cmp mov addl (bad) dec (bad) xchg adc mull insl jb adc (bad) pushf jbe stos jbe mov les lcall stc fcmovnbe js fistp mov into or cmp insl mov jmp fimul xor mov popa aas ds jmp mov cmp pop inc shll fs lods xchg sarb or inc insb dec mov rorl lock mov and and mov adc inc xchg cmpsl daa sub cmp adc add cmp scas mov nop stos and cmp push icebp pop sahf sbb cli aas sti enter xchg fisubrl lret idivb mov xlat pop mov fnstenv jae mov push lahf push cs stos movsl negb pop jb inc mov mov ret jnp scas pop fisub add pop adc aas xchg xchg dec cmp push (bad) dec jno jnp jp outsb push fsubs mov xor mov push in mov or ja and test mov popa mov in cmp or jne int inc push jne cmpsl cmp add rorb repz and lock jmp (bad) test scas (bad) jo jae (bad) jae popf mov adc mov fimull je pop imul enter (bad) clc nop or rcll loop pushf testl lahf stos lret mov or or daa inc pop mov or add bound xchg adc dec dec test cmpsl (bad) faddl loopne stc cmp (bad) pop bound and test xchg inc iret jno xor jo sbb dec mov lea into fisttp dec jae decl sbb pop cmp add iret (bad) test jl inc lods lcall outsb cwtl jmp bound test int3 jbe les mov clc into jp push xchg sbb aas sbb pop push test push push jle mov xchg xor repnz aam aas rcl stc (bad) lock (bad) cmp jo ret rclb fisttpl inc in jmp mov stos jae fcomi mov js imul mov fs pop xor xor pop mov pop (bad) sti xchg andl push fs or jne mov out and dec dec (bad) lea sub and add add orb stos popa pushf test bound sub add (bad) stos and and into inc and in add xchg mov pop jne andl xchg pusha outsl pop xchg shll xchg pop das inc sub aaa push cmp ds fidivr outsb inc or sbb and add pushf cmp xor scas push pop (bad) in mov lods fwait jo or leave mov fldt mov push mov stc pop xchg xor inc push jle and (bad) jne lods (bad) jb jge insb imul rcll popa add xchg pop movsl aad outsb pop movsb rolb add add or sub test mov add push push mov pop xchg cmp cmpsb divb pushf out add cmp orl rcr addl push or icebp mov mov sbb inc popf and or xor mov and stos mov jns sbb add add or fcoms xchg cmp sub pushf in xchg aad fistl repnz movsb xor (bad) repnz jle inc sbb push out jmp lds xchg shr adc mov data16 cmp dec popa outsl (bad) aad (bad) xor pop adc inc popa mov in std mov cmp mov add fisttpl dec stos js or punpckhwd pop jae popa pop push repz outsl push sbbb mov fistp ss orb pop cli inc lcall insl mov sub and repnz clc les lea jle pop xor dec loopne mov add add popf mulb sub adc in rcrb add dec adc inc mov ja sub mov pop ret mov cld cmp dec jns call inc jne adc add test inc imul inc arpl lahf arpl jp push sbb sbb dec xchg dec nop add add imull mov movsb push mov sbb lds push dec mov movsb adc leave pop loopne cld or call (bad) inc jge adc (bad) int3 stos xchg mov jno loopne loopne or roll cmp adc repz push xor xlat push cmp andl add mov mov iret mov repz imul push mov xor sbb imul or add aaa sbb adc daa mov and and (bad) sbb xor xchg cbtw stos fwait adc test cmpsb cmp add sub cmpsb lock and cmpsb outsb popa and add or mov rolb jno mov sbb xchg ret jo or aad push pop scas ret and scas andl es xor push and (bad) lret xor xchg cmp mov push iret popa in sbb add add ss stos scas test test arpl scas pop and dec jae cltd lret pop and sbb popl xchg adc int in cli push cld inc push pop lock xchg xor jno xchg sbb vandnpd adc pop xor mov ret adc aam cmp jns mov outsl pop push cmp js mov rclb and mov icebp adc adc xchg add rclb dec jbe (bad) (bad) call test das repnz js dec (bad) sbb mov mov pushf mov lret push xor lss xchg lods cltd dec or fldl add in (bad) int jle daa (bad) cld data16 into inc (bad) adc mov jb jns mov lret lds dec mov mov pop test test jmp sbb aaa insl das jne imul (bad) (bad) rcl sahf and arpl jns (bad) cmp icebp in mov xchg sbb or add add pop push xor sub je mov pop push inc popw movsl rcrb add clc or shrb mov addr16 lret std mov sub adc jmp or (bad) fisttp rcll sbb pop mov add clc pop int3 rclb xlat mov rcrl push add and fwait jl stos ret pop and mov and jp push mov adc mov insb and ds popa je (bad) ds xchg cmp in dec push xchg ljmp mov add out fs insb lods cmp push and mov dec pop or ds lcall push mov cmc mov rcr mov adc or mov adc je insl cmpl out enter xor popf (bad) mov out negl add pop sbb in add pop (bad) lock iret lods add dec cmp push fadds in fcomip xchg in add in stos (bad) (bad) outsb dec test xchg sub lods rcll das jecxz pop ret mov arpl inc addr16 stos into mov mov adc mov dec (bad) or mov pop popf add out pop mull and cmp xor mov jg gs je stos inc dec int int3 jge mov shrl pusha cmp arpl mov enter cmc mov mov aad repz loope mov add mov daa mov and inc movsl js mov xchg pmaxub (bad) mov xchg outsb push ljmp push stc add mov pushf cmp inc cs orb xor mov sbb mov add xchg daa sarb orb out xchg scas pusha lock add mov and jle ret add mulb cmp test mov insb sub leave jns js arpl push pop dec xchg loop fiaddl sbb (bad) scas jge lcall pop xchg xchg mov adc sbb inc adc dec shlb loope dec dec jbe in movsl stos movsb scas jnp xchg js or fimul pop adc mov push jne loope mulb fldenv pop je add fcoml cmpsb es aaa shrl iret cmc cmc nop lret cmp jno xchg cmp lods xchg pop pop cli ds push ja fcoml daa dec imul std out lea mov shrl shl lret sbb dec clc mov sbb lahf xchg (bad) call or rcll adc cltd sbb cmp mov push rorl out pop mov insb sub adc add adc stc add inc xchg paddsb mov shrl add add mov jg andb das dec xchg inc sbb test cmpsb dec xchg mov cwtl add inc jo insb jmp jl sub xchg inc dec outsl xchg and sbb test cmp orl scas dec ret sbb sahf mov and (bad) cmc mov dec nopl add push and mov mov (bad) push mov and inc out aam xchg test not lds mov sbb lret lcall mov mov sar pop test and or popf inc sbb xlat mov xchg dec push add cmp xor jl push jp imul in lds cltd dec adc loopne mov ret int3 divb test pop repnz xchg push js imul pushf in rol mov xlat daa lods test jbe push int3 (bad) mov clc rcrb sarl ss add aaa rcrl pop sti mov jecxz dec push jb mov sub add call arpl mov cmp xchg lahf jmp not (bad) push popf sub mov pop mov fadds and sub and mov jecxz inc mov dec pop mov add add mov sbb mov int3 fisubr sub and and sarl and loop sub dec mov mov popf lcall inc push fist mov jg ret notl (bad) xchg test mov das cli and shrl jmp sub vunpcklpd add fldl xor add cmp lahf jo loope,pn xchg js xchg mov inc jo (bad) ss adc fidivl cltd cmp push jb adcl pusha (bad) mov jns in push sub ret adc add sahf adc adc mov je push inc hlt lret add jns test cmpsl repnz cmpsl xor cltd push adc inc jo xchg and notb sbbl in jmp xchg or push rolb adc add inc imul mov loop jle jbe repz add scas jmp pop mov jle aam xchg idivl (bad) inc pop mov (bad) outsl popa addb jmp test jp or shll push and hlt cwtl mov lcall mov aaa adc nop jle fs loop mov lds test and add out add lret or xor int scas addr16 jg nop lock or (bad) cltd jb push clc lea dec popf cmp cmc aaa lods iret jo push fisubr sbb cmpsl cmc cli add or xchg inc pop jg (bad) inc insl mov test repnz clc cwtl (bad) add mov mov cmp rclb sbb das mov pusha in int3 mov int test sti xor xchg mov movsl push xchg insl xchg jp and ja enter insb pop nop scas mov and jle stc jae add adc sbb add add adc sub cli inc xchg add mov push loope insb cmpsl push jmp and sub aaa jne sbb push add movsl ljmp dec das in cltd stos mov insl in scas jecxz or int (bad) rclb xorl sbb in pop mov or cmc mov mov cs pop imul jmp sbb in movsl push data16 in in adc mov sbb pop das mov ret mov gs push mov aam or inc dec pop test xchg jno popa out in (bad) sbb stos pusha pop xor jnp add push mov sub int mov xor cmp pop cmpsb dec dec pop xlat mov stos sbb in sbb sub stos out std fsubs fist inc jl pop xor (bad) aaa hlt push loope mov push mov jnp fisttpl lock int3 in dec xchg repnz pop add dec outsl testl out add pop ret out lock adc shlb and out cwtl xchg mov mov stc ds bound add fimull sti mov cmp sub xor pop pop ret imul mov arpl and inc pop enter pop xor add add jb inc xchg jo cltd js mov sub push loop pusha outsb nop dec fldt adc pop push mov fs rclb mov imul mov sbb (bad) jb push adc push pop divb xchg jmp ret mov jb lods inc add add loop pusha popa inc xchg push std mov mov mov fcmovu mov sbb or fcomip xchg push out mov in cmpsb aad hlt (bad) jecxz or add fcoml js mov sub dec (bad) mov loope push jge dec fisubl test pop xlat xor mov ljmp add adc add adc imul rclb mov icebp push (bad) inc popf push je add pop fisubrl std fistl lea push js bound imul or cmp leave mov pop scas (bad) addr16 (bad) jno stc cmp rclb add stos push sbb adc adc imul pop popa mov insb add add mov sbb sbb popa mov mov dec xchg fistpll pop push inc mov sbb xor pop arpl cli jo adc divb xchg lock push fcmovnbe out stc add bound outsl in aad stos push movsl movsl push insl cwtl das mov test sub insb lea dec icebp in sbb cld popf in call das negb jnp enter ret or int3 sbb fwait pop cmp jp pusha mov cmpsl sub nop jg lds xor icebp inc or sub add xchg sbb out push cmp rcll jmp outsl aaa iret test stos mov and fxch cmpsl lds mov sbb xor xlat or fcoms je push dec inc xlat lea mov dec add out fchs xor je lret loopne daa rolb daa and add insb test or fstps xorl push ds jle lock psllw pop negb hlt jecxz cmp or je loopne mov pop clc lret imul int jb sahf push mov push imul add add add mov push xchg jae jo inc inc jl test popa fucom cwtl ds and mov jl jp jge fcompl dec pop or pushf dec out cmpsb cld mov dec pop inc fcoml xor sub mov vmwrite test daa mov out lcall xor adc adc cs hlt add sbb inc ljmp lret test hlt push imul cltd test mov (bad) dec fisubr xchg lret xor loope or sbb xchg stos mov mov pop adc xor in mov das mov fidiv jecxz xchg mov xchg add in or xchg xor sub push (bad) dec daa sbb rorb jmp jle lods test add aam add nop or ffreep cli push jbe jl mov mov cmp cmp mov dec mov js sub movsb adc aaa xchg adc mov add add add push aad cmp push aam ret mov rcrb sub aam push loopne sub daa (bad) dec mov repnz or insl xor jo test insl push mov (bad) repz popa dec js pop js push xor mov sbb bound xchg sahf jle dec cmp add hlt mov inc outsb in jb shr cwtl mov leave nop test and ja pusha fwait mov fsubrs mov push adc mov jl adc nop popf je cmp dec orl outsb (bad) mov jmp pop loop mov pop dec sbb and (bad) mov out test dec pop xor jbe xchg shrb movsl pop mov sbb adc xchg xor push repz imul das or xor sub push hlt mov addr16 jae cmpsl cmpsl ficompl fimul insl inc mov fistl clc add add pop iret add pop jl insb adc dec mov nop sarb and test xchg in and cmpl mov mov push sub fucomip int push ljmp rcll fnop test add ficomp sbb outsl and inc icebp adc out cmp sbb inc cltd add jge push clc rorb xchg mov sbb out (bad) sti xchg loop mov cmpb pop xchg lea je push clc sbb cmc mov xchg mov addr16 leave jl cltd mov fcmovbe cmp push xor or cmp jmp and jns subb push das daa cmpsb cli sub add cmpsb xchg inc (bad) push push (bad) scas out pop shld push add push pop nop pop out repz data16 lock sub mov scas (bad) jecxz mov scas jecxz movsl int add mov and add hlt and dec imul mov or inc pop lods lret loope imul or add add int mov gs mov mov das fs jbe test fstpt arpl xchg xor (bad) scas aam aam arpl insb mov mov cmpsl jp rcll ljmp int movsl and sub adc mov inc lods stos pop aam add xchg imul mov adc and cltd or mov std test lcall push adc sahf lahf cmp and std repz mov mov adc mov adc jp xchg mov and jo and adc adc add add and cli adc mov std pop inc xchg or pop mov ljmp xchg dec sbb fmuls cmp sub clc pop (bad) jno call xor cmp pop xchg cmpsb mov adc sbb enter shrb push xchg add adc mov jbe dec and lock pusha dec add lods jmp xlat inc cld push jl fldt cmpsl jg insb pop je int3 jbe and mov or (bad) scas inc push test sbb movsl sub pop jno shlb dec arpl popa jp add fdivl call fs pop mov adc mov pop cmp outsb cltd xchg jp sbb loop xor into pop mov jne dec dec push inc sahf xor frstor test xchg pushf loop subl or sbb adc push mov cmp jecxz lea punpckldq cmpsb xor fs cmp mov addr16 add push mov fs pushf or rorl enter cmc add in int3 jb or bound test pop mov std cmpl xlat pop adc int test or pop cmp xor add add cmpb xor arpl fisubr or sub mov sbb sbb fmuls or adc ret pop sbb lds pop aad xchg pop lods cmp into xlat mov inc repz mov je cmpsb and push aam mov out test add add popf inc shl nop (bad) cmp fnstenv pop clc cwtl add sbb (bad) test xor add outsb add adc pop adc (bad) shrb pop scas iret and cld push sahf inc scas in adc push ss jp pop fsts call push cmp or in jnp arpl push mov mov icebp mov dec aam xorl push pop (bad) lods popf ret jle jne dec out sbb lret (bad) cmc dec jmp mov push stc xchg mov xchg std mov mov cmpsl xchg out cltd cmp inc aad jae leave jbe sarb (bad) lock in cmpsb dec inc jae jns or pop mov (bad) addl int3 jmp lret cmp repnz stos xchg sbb gs adc cmp jmp add repz push mov repnz mov pop adc xchg sbb pop test in test add add (bad) aad xor mov push ss in add mov or dec sub push sbb test orb cmp lods aam mov rcrl cmc push sbb sub ror popa stos and out (bad) mov in (bad) jne push xorb lods test scas pop fstps xor cmp lods xor mov jp stos js popa arpl jmp xchg dec pop aad xor or fstpl xorb test inc mov jecxz outsb leave aad jne push adc in repz xlat pushf push or fwait push sub je out inc and jecxz jp sarl add mov aam fidivl arpl add mov ror mov outsl movsb push insl ret or jno je push and xor adc pop jno (bad) mov psraw add xchg mov fcompl jae push mov fbstp mov push mov pop push cmp (bad) cmp (bad) popf xor and les cmp add add aas jb (bad) sbb xchg xor xlat inc pop inc daa and mov jge inc scas rcr push jno out sub out jae lds and les lock out insb xchg sahf dec and sub mov imul inc stc xor sbbb push in add and lret cwtl loop fisubr mov lds push imul mov dec mov inc lock or mov pop sahf (bad) xor jne ret xchg mov (bad) mov cwtl out aaa xchg rorl jb push sub and inc mov sbb add add cmpsl cmc mov mov fnstcw dec mov stc add push insl jb pop sti dec or cltd insl and lds dec mov fsubr nop insl sub sbb mov add (bad) mov adc inc mov hlt shll sti popa iret ja leave mov aaa psadbw inc add test pop sbb nop lock pop pop (bad) and lcall cmc dec inc xchg (bad) movsb adc and mov cmp pop sub adc daa loopne jns cld sbb sub test divb sbb outsb movsl xor jl mov cwtl cmp out adc add popa stc sub in int pop mov mov xchg inc cmp int3 shrl adc (bad) enter xchg jae inc mov and clc and xlat fstps push jne lds lock loopne ljmp inc out sti cmpsb and loope or repnz bound das inc jle fcomp and add jg decb repnz jg incl cli fldenv lea push cmp ja sbb and lods popf aad xchg lcall pop sub aad (bad) mov cmpsb popa or daa in or out pop stos call in or stos xlat push gs or mov mov scas or xor cltd lret sahf scas push sbb hlt fnstsw sbb insl sub push cmc jp xchg aas popf cltd fld aaa bnd popa mov leave cld xchg (bad) jle mov shll inc pop xlat jb in (bad) int cmp push ja push hlt mov mov jl add add add add mov add fs mov insb rcl imul es enter ds sarb cld cmovb lods ds fnstcw push (bad) fcmovbe mov dec pop add les test cs mov add add inc sub inc and mov and shr or add mov add add movups (bad) sbb popa ret out pushl in jmp (bad) mov aaa cmp (bad) push or xchg xor pop pop push mov js imul int3 xchg cmp mov jnp orl cmp subb jl mov add shrb add fwait lret and nop inc ja (bad) daa xchg xchg pop out jno mov scas cmp cmpsl xchg repz imul lcall pop rcl and sbb in xchg pop dec outsl fwait mov dec lret mov data16 sbb mov cwtl aam es mov jmp dec lret and add cld pop mov test or es out mov add and js js mov push xchg out adc and imul xchg sbb (bad) push mov cmc cmp dec adc outsl push (bad) daa cltd mov xorl add mov mov jmp imul pop scas inc adc test fild out lods pop hlt cltd xor cs xchg dec mov add stos and in pop in fildl and and sti mov fldenv inc es repnz pop hlt pop insb insl or das sub mov test stos stc cmp push (bad) ljmp cmp mov pop pop arpl adc pop in std sahf int3 dec cmp lods ss sub mov pop dec jo sbb cmp pop out sbb mov in ds divb xor push repnz fucomp out add rolb aaa or jp cmp fcmovu sub clc mov push adc xchg fnsave mov ja dec movsl adc jbe pop (bad) lret ja add (bad) popa xchg stc fdivrs jbe mov mov mov pop mov mov shrl stc xchg mov orl subl insb scas xor add adc test rorb clc roll sbb insl (bad) xchg sub push jno aad fisttp out ret call fildll movsb sbb bswap mov adc xor insb sub add out sahf popf rcl dec dec jmp enter mov mov outsb sbb jmp add dec into aas sbb add jge jns mov imul (bad) nop cmp out xor outsl cwtl enter push (bad) jmp dec add rorb sbb fsubs pop push mov in inc push imul lcall aam xchg pop sub adc adc jb std xchg lods pop (bad) and outsl and je add xchg lds fimul mov mov inc cltd cmpsb iret dec mov add xor cmp rorb incb xor push push lahf adc (bad) fimul pop mov cs rcrl and dec add cltd adc sarl mov mov (bad) lret out dec dec and and clc cmpsb adc push stos cmpsl xchg movsl dec push mov mov add adc pusha sbb hlt (bad) cld inc out xchg pop daa cmp lds inc cmp iret mov dec into add and mov pop sub pop mov sub out movsl xchg mov xchg ss pop rolb gs fstpt cmp les xchg sub xor daa (bad) in push add in mov push mov lret pop daa jo push ss push mov data16 mov jmp mov xchg inc sub xor pusha es add sbb (bad) and clc inc lcall xchg in dec pop mov (bad) ds stos inc push sbb mov and xor and add push leave sbb flds bound or dec enter fcompl dec mov mov cltd jb lea xor stos xchg mov popa rclb enter mov insb xchg sbb jns enter push hlt in addl fsubr enter (bad) sahf js add adc (bad) icebp dec in imulb add je or in in sub or insb mov hlt xchg jmp leave lret or xor fstl outsb sub clc adc pushf int3 ds xor mov arpl adc cli in or negl div (bad) sti push push push in add aas xor push gs cmpsl xchg icebp xchg ss loopne mov add cmp icebp jbe cwtl jmp or ret stc dec cltd sub repnz xor (bad) push jo fwait xor fsubs lea push (bad) test pop jo iret hlt or ficompl inc or clc push add adcl jl adc rclb cmp and out cwtl fcomps dec repz lcall sub mov cmpsl adcl movsb adc adc pop mov leave inc dec sbb push jl sbb push ret vpcmpeqb adc jbe mov mov mov dec test and jmp add add fmull inc sub mov out popf repnz fnsetpm(287 mov push inc cwtl and popf aaa add enter mov and push mov dec dec clc mov (bad) icebp or pushf lds mov int jecxz scas pop mov dec mov pop popa out dec mov jno or push add fcompl je jl ja cmpsl mov fldt mov cmc int3 int (bad) mov movsb aas inc into add adc xchg gs dec sbb inc incb lods inc sub jae arpl aad (bad) cmp cmp cmc and add xor ret add or pop mov mov lret (bad) shr (bad) sub xor andb push lahf sahf jno xchg pop sub cmpsb push movsl mov jbe fild push sbb or (bad) repz arpl mov (bad) xor fnsave xchg fucomi xchg xchg test jae mov add jge,pn pop mov iret and or movsb cli out stos xor stos loop lea andb jle std mov or push nop std into xchg (bad) cli clc push lods add pusha (bad) pop lds outsb mov push pop and sub fdivs pushf es aad cmp es lea add xchg fiaddl aad push lods mov xchg aam idivl imul xlat mov (bad) roll and inc cltd add nop pop fwait test xchg es push (bad) mov outsb and or cmpb je (bad) frstor pop jmp xor inc aas ss add repnz hlt dec or add add sub das test int3 out leave mov sahf outsl mov add sbb cli xor cmpsl lock out dec ret out (bad) jns cld pop fs es sbbl jge lret ret scas fisubl scas mov cld xchg dec lret int push in or pop loope leave or es int das dec mov push (bad) fninit xchg mov movl add jo xor and out or lret insb xlat and dec mov in and loop outsl inc mov dec cmp or add aad iret scas add pop pop xchg jmp xchg jb pop test pop xor mov popf test sbb dec loope mov add vpaddw fistpl imul bound leave xchg sub sub mov xchg lret cmpsl lahf push (bad) adc repz (bad) cmp jo xor sar jmp lahf inc mov sub and fldl or subl mov jo add add mov loope jl outsb cmp jo push sbb cmp outsl lds dec ret mov xchg sarb mov sbb arpl popa add cli add cmp add add inc mov (bad) (bad) jno jmp pushf je mov push test or xchg xchg push jle add psubq cmpsb int pop mov and cmc outsb mov add ss (bad) les outsb pusha outsl in adc jp es lret mov pop pop in xchg mov inc mov fdivrl lods test dec or cli jl pop jmp scas add test sahf (bad) push xchg das pop mov stos mov and test loop inc negb xchg xor pop xchg dec sub cmpl jge loope add xchg and jno dec popa das stos aam add push dec xor bound add imul and push push dec mov std clc xchg lods inc pop rolb mov xor inc test xor popf clc scas int3 ret rorb add sub loop out pop mov inc mov rcl out mov pop sahf je cld movl cmpl push adc ret daa jge pop lret lds inc pop sub xchg mov add cltd (bad) movsl xor (bad) or mov aad loope sti out mov xchg dec mov ds jmp xchg xchg cmp repz (bad) arpl lcall (bad) mov pop sub or push loope addr16 cli sub sub popa and test mov jb xchg aaa mov inc xor lea push xchg xchg jne imul sub cmp sub jb cltd push ss stc aaa test add add pop lods cltd shll ret sbb add xchg ds cmp add mov sahf xchg rorb cmp mov jp adc xchg adc jp out sbb ret dec dec jne pop inc xor lret test jmp adcl add mov hlt xchg jg push imull xchg xchg sub or aas inc pop and ds addr16 adc roll cltd rcll add inc repz out add sub outsl aad out insb mov outsb mov loopne mov mov into iret das out sub cmp jae add add and mov push shrb sbb mov ret mov mov insb sub or jl dec lds mov push call xor cmpb mov lock xchg lods adc mov push arpl sub and test nop mov xchg enter ss and or adc jo iretw pop sbb jg mov push stos ja inc mov bound mov test lods ja push mov (bad) in cmc nop bswap fsubs mov test mov push out add (bad) mov mov daa cld aam pusha push loop in bound movsb movsb out xchg jg sahf cmpsb push (bad) stc cmp add adc push sbb jnp in movsb xor push (bad) xchg adc icebp mov push les jne aam aam sbb stos repnz cmp nop dec sti arpl add add pop sbb lret push pop xchg sbb jg dec lcall add mov bound in adc js push mov pop movsl xchg jmp test (bad) fsubl sub push cmp leave mov std inc fistpl and push add lods testb mov loopne mov or push orl in daa sub mov sub xor loope adc adc icebp loopne lret insb lcall and (bad) pop add jl inc and inc push nop stos fild dec xchg jg mov xchg stc pushf dec pop and or rol pop xchg ds add or fs std lea push cld xchg and inc insl push jnp stos pop (bad) mov out jl (bad) lds or adc pop push add stos cmp push inc pop test adc movsl xchg inc fildl add sti sbb or div insb stos and repnz adc sahf jge cmpsl popf rcrl ret bound (bad) mov and jo adc pop pop jbe mov (bad) mov cmc mov outsl or imul test or rorb dec cltd aas (bad) mov mov bound or inc jb fdiv call sbb push or mov cmp mov jl pop (bad) xchg test cmp aam mov sbb pop lret ror or ret stos or jnp pop or mov cmpl les insb (bad) hlt dec loop (bad) loopne cwtl cltd lret jbe jle jge (bad) jb push xchg in pop dec push std adc int repnz out cmpsl and hlt push pop mov fdivrs daa mulb mov cmp pop push movsl mov scas add jns add jno mov scas js pop orb scas outsl jnp mov mov mov je sahf mov js aad adc iret stos test lahf pop movsl cwtl add or cltd inc or pushf in fist push iret push out fdivrl inc fcmove hlt data16 dec fdivs jno jae ret fisttpl fldt cmp fild add add pop out push xor (bad) and es outsb pop (bad) jb dec test lahf xchg sub inc sarl ret pushf mov int int3 push stc lea into pop jns mov pop lock jl pop pop lods les jnp nop je xchg cmpsl cmp mov sbb mov addb add add adc ljmp inc shll sbb lret fucompp sub mov in xchg pop xor push clc addr16 dec je adc arpl push fdiv inc inc iret push test sbb add mov loop inc js fs mov cmpsl fnstsw or lahf adc push lcall and into add imul cs fwait mov fistpll loopne mov mov or dec xchg xor stos idivl inc call js xchg out lret pop leave inc adcb cmp sub jnp sbb or pop int3 add mov out mov pop add sub jns lods (bad) jo sarb insb dec aam add xchg aas out lea pop into aaa push dec add adc outsl test ret cmp (bad) mov aas mov and sub pop sub add add and jg and sti ret push xchg mov nop clc hlt mov mov inc imul xchg pop inc (bad) mov inc cmp or add (bad) fisttp xchg xor pop push push andl jge pop rorb rol mov sub jb pushw push add insb cmp mov loope out sbb pusha cmp push adc lock repnz dec cmp ss aas push (bad) and sub mov mov cmpsb sbb out push std inc insl call cmp hlt pop test cld (bad) sub imul ret lret add add push int3 pop pop sub adc jge bound xor mov cmp xchg pop add (bad) dec mov fsub or sub cmp lret dec dec cwtl iret inc lods xor xor push inc xorl inc loope xchg and lods clc stos push fnsave scas popa sbb add add sbb push hlt jmp push (bad) repz pop in push inc pop fdiv mov jno adc into sub (bad) int mov or cmp mov mov add lods or (bad) mov mov cmp push cmpsb movsb imul mov add add sarb loopne je cmp xchg mov mov pop nop xchg hlt push (bad) fdiv leave lock jge or jmp leave lock sub xchg stos jecxz sahf pop pop pop dec aad pop jb xor or test xchg dec scas mov push and pop xlat in add repz insb ja inc (bad) mov or pushf fisttpll or cs out (bad) xor or clc mov xchg xchg jnp lahf stos cmc nop pop lcall inc cld enter jne inc inc sub pop xchg imul inc mov sbb adc sbb rcl add add push and lret jp push arpl jg lods and pop icebp cwtl adc mov xor lock cmp loope cmp mov or pop sbb mov and cmp ror clc ja cmp (bad) sahf mov in cmp or leave sti and fsts add or mov loope sbb (bad) adc push cmp xchg jl pop and lods dec pop scas fldl jle pop icebp outsb cmp lret (bad) fcomps dec clc addr16 dec repz shr jae aam xorl cmc jge je ljmp insb xchg jl ljmp (bad) jp push jmp push outsl adc jns mov or sub inc mov lods jns adc int mov jae (bad) xchg mov mov ljmp das fmulp cltd jnp xchg seto push test push rcl ret sbb add aam dec inc cli aas rcrl arpl imul outsb cmp adc loope js lret (bad) cltd mov in sbb aas mov fimul mov add push (bad) lods cld (bad) fistl das test dec out cltd test (bad) sar lock in cmp insl add ss incb arpl popa insb fistpl push addl insl fdivl shr or jbe pop je loopne (bad) dec mov int3 test imul dec dec js pop sbb dec jne stos add sahf mov or cmp pop cmp (bad) in enter xor out outsb adc push (bad) cmpsl dec inc adc aam pop in ret push pop xor mov addr16 adc ds mov push dec cmpsb mov sbb (bad) mov rcll sahf lret add inc cmp subl pop xchg sub add add add inc les and rorb (bad) or fsubrs jb mov fnsave push dec pop and in mov and adc psubusw and jge fbstp push movsl sub adc jb ret and (bad) into add jl scas mov xchg loop jnp pushf jbe in leave arpl add cli dec mov add mul cmp push pusha or or les push incl ret xchg data16 jnp lret add nop xor push imul sbb mov mov add add mov std lods clc je faddl cltd adc movsl sub or and sub mov cs cld js inc js call jo and mov cmp and adc cmp and outsb add shrl int3 lahf jns in stos jne jecxz mov adc mov sti adc clc stc and cmc ljmp out add and dec cmp sahf pop jg out sbb pop xchg xor idiv (bad) mov ds outsb fldcw insl test rorb xchg pushf lcall jp xor sbb inc inc dec pushf sbb leave pop mov in xchg sbb cmp nop add ds mov mov jl (bad) jbe xor std add jmp cmp pushl ds fdivrl scas or jecxz das and sbb ror xor add aas add pop test cmp mov in ret stos in popa cmc aaa lret out jne dec or fistpll pop test ret std mov es lret scas cmp (bad) xor cmp push pop mov out cmc pop orl mov mov cltd mov rclb ljmp lcall add add dec xchg stos sub (bad) repz add jno stos inc jge xchg test jle or jo add test lods jb dec inc mov dec mov loope dec subb outsb in loope (bad) daa xchg (bad) and loop xchg test test in ds shlb aad call cltd sub jb mov divb lds movsl inc or cmp (bad) mov xor and mov enter adc and mov ret inc xlat fisttpl lods xchg pop fstl jmp stos stc mov (bad) xchg xor xchg add sti jg (bad) (bad) mov or clc cmp jmp mov loope push push add xchg lds add cld adc mov or bound mov jl popf jl mov jbe int mov mov adc aam das (bad) scas xchg repnz sub insb aad inc imul dec cmpsb push mov icebp xchg jne adc mov sbbb xor mov cmp mov xor and mov popa xchg test and gs cwtl pusha dec test or and mov (bad) dec inc inc xchg pop mov stos mov add xlat xchg add pop inc cmp icebp movsb lods push push ficoml mov xor xchg inc das sbb out cld sub movsl and rcrl sub push lods push mov sti je fcmove and sahf call or and inc test mov test pop popa inc xor jnp mov add cli mov mov fwait in pop into xchg dec shrl test cld daa (bad) xor sub hlt ret sbb ficomp scas out mov dec mov mov ret ss adc inc or mov mov fs movsl mov add imul adc add add outsb (bad) xchg xchg inc mov push in adc nop out cltd int3 aas dec test out js in (bad) push (bad) mov push xchg shr mov inc std jle lock xor aad ret int lods mov xchg adc lds mov rcrl inc inc stc cmp sub add add mul cmpsb push shrb scas test xchg scas (bad) std sbb push xchg out popa test add and mov (bad) xor inc loope cmp (bad) aad outsl lods adc aaa pop lea mov push xchg jecxz or cmpl push lds add jns in add add aaa xor lds (bad) stc imul push or mov mov (bad) aad subb cmp mov int jl lods add mov pop and test jno aam lds jmp xor adc imul les call sub add add sub sahf mov addr16 xor dec fstpl jo into pop fild std mov xor repz iret sub addr16 lock shll mov sub icebp jbe xchg push in std fdivl push inc cmp addr16 int jle dec jno popa subl push add sarl xchg jnp pop mov jmp and sti push pop inc inc sbb and jns mov sbb inc fidiv outsl jnp out mov push out or sti (bad) fidivr outsl dec inc pop scas rorb inc mov ljmp mov xlat inc push and sarl fisubr push test or ret bound push sub inc out fs aaa jnp or out rclb movsl jnp lock pop mov mov mov roll popa arpl loopne or xor mov lods cs sbb or add sbb and sbb and mov (bad) stc out mov sub adc das xchg jl sub (bad) and xor push dec pop lods push es shll andl dec inc jmp ja icebp cmpsl punpckhwd dec jns sbb inc out push mov add push sbb cltd mov hlt stos inc fidivrl insl add loop sbb pusha lret jno pop lds repz cmp dec adc jle das add mov ljmp jg push in scas pop add inc xchg adc scas inc in out sarb add push je sbb sub add js aas sub cld adc cli xor jno sub test incl xchg push sbb xor sub (bad) xchg loope (bad) xchg fldt ljmp dec xchg inc or mov sahf in sub movsb sub pop out push es imul mov scas stos pop push mov lcall fild jmp call lea imul xorl mov aas push dec dec out and rorb mov xor and adc sbbl or rolb sub shrb imul cmp jb popa (bad) (bad) fiadd cmp pusha inc enter jp push negl enter adc add (bad) cltd or dec insl icebp xchg push loop inc mov jbe sub jns jle sub lds add jmp add push jo add imul aas test inc jno or fistpll add andl push or faddp fistp iret xor cmpsl push insb cmpsl out fwait xchg fstl (bad) popa out mov inc mov pop loop (bad) repnz pop movsb lret enter fisubr add fs hlt xchg sti jnp lods push jge mov test mov je mov inc jb repz jg adcb mov mov sbb movsb mov mov aam jbe fistpl or sbb sbb mov (bad) out (bad) test mul inc add jne repnz dec out nop and xor pop call cld arpl es lods mov fucompp mov sbb cmp clc lods outsb pop stos push inc xchg jge sub icebp push andl sbb (bad) mov inc das inc add out add aad mov or lcall test sub gs imul out cmpsb sbb dec dec mov leave jo lock fucomp scas pop in xchg push test push clc arpl fildl cmp inc xchg lods push cltd or fmuls test enter xchg icebp (bad) jecxz out cld sub cmc imul add mov sahf repnz in or adc or daa cmpsb xor dec (bad) fiaddl mov pop pushf cli mov (bad) call pop xor dec cli xor dec test add test lcall ja inc xchg inc inc push rcl das dec dec cwtl lock sub sarl sub lock jbe jmp dec pop (bad) mov dec loopne es (bad) loope les (bad) mov mov add jnp cmp int stc dec pop out xor lock std clc add add js popf andl test cmp test je or adc dec lock or mov inc ret test sub push xor sub movsb popa (bad) aad xchg pop loope and push lock or pop scas push test jg xlat push (bad) fwait rol sbb add pushf cli hlt pushf push xor xor out sub int inc mov or out je mov lods xor push mov mov movsl imul arpl or sbb rcl add dec insb out push jo ficomp sub div inc add add push cld roll shr je cli cld jb cs leave inc and sbb popa pop inc add mov or cwtl xchg pop fistl std xchg sub xor cmpsb movsl mov ljmp into sub mov lret mov cltd pop adc sbb xchg daa ficom jge adc nop vpmaddwd xchg xor mov xor lret or adc out jp,pt add (bad) mov fsubrl (bad) fxch cs lret xchg sbb adc imul in loope cs imull pop sbb scas mov mov add jmp mov add movl ljmp pop sbb mov fisttpll jge cmpsb mov add push cltd fidiv mov (bad) inc mov (bad) stos lret xchg out and lock jno mov push lcall repz lds dec jmp sub repz scas lcall mov push add sahf sub pusha aad jge or enter mov hlt out ds dec insb dec lahf in outsb sarb mov cs movsb push push scas dec rolb mov (bad) mov scas xor cmpsb push dec sbb shll add add data16 jnp (bad) aas push mov std jae bound sub pop fld das sti nop inc (bad) jmp aaa push adc pop xchg shlb insb sub jmp mov das mov cmc mov out push icebp mov rclb xor dec jle cld inc mov mov fcompl ds imul leave (bad) popl (bad) jmp sahf dec or leave sti xchg insb or loope sbb movsl or mov cld lahf arpl jno in fwait je imul cmp add mov pop das in daa add add or gs enter xchg (bad) popf (bad) mov inc out out sub test push popf pop das enter (bad) sahf or pop pushf mov sbb mov in inc inc fadds sarb push test (bad) fdivl insb call mov in jecxz inc jo pop add add insb cmp xor and out fisub icebp adc sahf xchg das and mov sub add adc add fdivl sub xlat mov in ds ljmp and dec or sbb push ss xor add add pop (bad) int3 pop adc sub mov sub push nop out or mov (bad) scas subl pop xchg movsb or jl movsl mov push (bad) fist add and out add mov dec cmc jae mov bound into dec push popa imul test js cs jb sbb (bad) mov rcrb lea or stos insb add dec data16 sub mov or std int aas (bad) in ja mov into stos and dec and mov mov cmp das mov xchg ljmp test adc pop rol add arpl sub xor popa and fnstcw mov into add push addr16 jne xor fidivl add (bad) lret xchg adc movsl push aam repnz xor movsl mov mov aas dec pop mov add into jge std add mov ja adc xchg (bad) cwtl dec std adc add sbb insb sub xchg or mov loopne divb rcr mov lret push mov ljmp mov push jp dec jmp fwait inc or idiv or pop add add and adc mov jbe out lret imull int3 lock outsb fildll mov push xchg inc mov cmp jnp push dec adcl repnz mov lods pop xchg xchg dec inc adc push addr16 jb insl adc movb sbb add into sub cmp icebp jge int or fcomi add add lods push mov xlat add leave sub cmp and add cltd pop dec sub mov sub (bad) inc add inc jmp add out lock movsb inc addr16 fiadd mov dec or push movsl adc lret push and pusha mov pop sahf xchg and in mov fnsave ljmp jp pushl lret subl and movsl cmp (bad) jle loopne loop or rclb xlat imul dec (bad) jb sub rclb or sbb add (bad) loope in or cli mov aaa adc add or loop sub mov xchg lods mov insb xchg (bad) jge add popa cmp sub insl out cld jp lret test les jl arpl les xchg movl jb out pop test add mov outsl add aam add nop jmp idiv ds fwait jbe jmp into mov adc sbb dec ljmp data16 vminss mov popa (bad) dec into shlb pop or enter add jae mov xchg pop movsl push mov push or addr16 lahf pop in bound out test or push add aas cmc jb jle jno cwtl test shr gs imul dec jne lcall push jno fidivl push push dec add pop and add mov cmp scas movsb dec pop addr16 rcll add (bad) pop mov fcoms push xchg ds or jp sub sbbl mov (bad) std and dec pop push adc test mov int add cli pop int mov inc add and push es mov push mov icebp or add add (bad) xchg popl mov incl mov stos sti inc mov rcrb or mov mov inc jns add cmp rcrb jae and (bad) mov cmp mov lds cmp fadd mov lahf push aam sub dec fstps stos (bad) xchg jns cwtl and add lds ds xchg mov jb ss cmp std push (bad) jp out das mov pop mov cs adc and or xchg adc je ficom jb (bad) stc cld jl add stos and jno ret push je sub and add add add add pop (bad) mov inc xchg in adc adc xchg adc or add (bad) addr16 mov pop pop mov cmpsb loop sahf mov mov and and or rcrb lcall mov or adc mov push inc sti popf je mov ret ss ljmp movsb aaa bound hlt mov clc lret and xchg mov mov cld push inc jp cmc icebp roll cmc (bad) nop add notb movsl nop maxps adc sbb jnp lcall lds enter add add (bad) inc cwtl adc or add xchg inc mov xor pop iret cmp scas rcl add cmp test sahf (bad) push dec clc mov dec stos in jp adc outsb mov icebp adc cmp push movsl xchg test sub mov lret dec mov and movsb (bad) add add and faddl sbb lods pop sti aaa fbstp adc cmp test aas scas (bad) lret push outsl mov xchg out push into js xchg jno xchg bound pop mov jge iret rolb push mov sbb sbb fmul stos inc call pop sub in lea add jmp icebp cltd xchg cmpsl in shl jns jb push das jle mov xor fdivrs sbb pop sbb inc mov push cld mov mov xchg xchg xchg jl or jno mov pop outsl adc jns insl repz jb arpl jmp inc ret cmc dec xchg rorl in mov arpl and lret loop xlat xchg jne sub call cmp inc jg or xor push mov jg orl sbb sub jle fdivl cmp popa jl dec je xchg aaa out push dec ret xchg inc sbb cmc xor dec adc shll push lcall inc and add sbb jmp fnstenv xchg enter scas push test into inc lahf inc push nop cli clc jo bound inc in cwtl or std sub (bad) insb enter cmp mov cs sub movsl data16 push jnp insl adc sbb icebp (bad) mov popa mov inc sub add add roll add jp inc mov dec or lcall sbb mov adc xlat jmp jo sub pop push mov int3 jbe xor scas pop ljmp xor (bad) jno and clc sbb mov sub mov cmp xor pop fnstcw or add stos xor cmc in sub xchg push (bad) idivl in adc stos (bad) fs scas repnz xchg jp or jle jns stos ljmp mov cltd push into (bad) adc adc dec mov mov pop bound fstl inc dec xchg mov pop (bad) and out add call shrb ds mov out test rcr mov xchg mov inc fisubrl mov pop pop push fdivrl lret jecxz cmp mov jns leave sub pop xor out lock pop sbb or jg popf dec gs add mov xchg add ljmp push pop or outsl stos or int3 or pop pop test call and popa xor push xor xor jp fsubl mov in lock jl imul into and aad xor dec shl mov and and in sub jl push push fldcw xor sub pop leave bound inc xchg push push lods inc pop push cwtl xchg icebp lods rolb sub aas js cmpsl sbb ja dec cmp out inc or push rorl dec sub lcall stos pop nop es shlb push add add jae mov ss jl icebp xchg out cmpsl or fld out test mov lock loopne (bad) jge inc sbb cltd cmp push movsl out xor loopne add pop popa adc inc sub cmp into mov rorb ret dec cmp (bad) cmp in add add lret rclb inc out jecxz push dec xor adc clc mov movsl mov aam sbb push hlt scas jnp inc movsb cmpsl int3 push fstpl sbb fild push pop sbb idiv js push sti sahf or mov jb test cmp sub lret dec sti sbb ja xor pop clc inc add cld mov dec xchg mov cmpsl hlt sbb adc lret ljmp mov mov pop adc cs rcl dec push incl repnz out test cs adc (bad) clc mov push inc mov sub in pop test add push cmp pop or sub inc pop fcoms fs lret repz cmp jns lret mov push fidivl insl mov mov inc ja es cmp repz mov fmull scas cmp mov add pop push cmpsb sub dec xor add push outsl enter ror or dec ljmp pop jge jno ja jne mov sti (bad) das mov mov push fstps cld pop push in adc imul iret js fcmovb leave xor call mov arpl sbb std inc mov add sbb push aaa and dec sbb lock pusha int stos mov insb add dec jno pop pop std add push sbbb fwait pusha jmp (bad) popa data16 sub mov cld mov pop mov mull test test add shlb mov les cmp movsb sti jno dec pop xchg jge cmp sub movsl (bad) push push nop cmp insb pop fldenv and outsl jecxz mov and sarl add stc (bad) and fdivs (bad) int sub and ret push add or mov je icebp or cmpsb bound cli push jae std int3 sbb jp or in xlat enter aad pop scas sbb out push test ret mov cmpl subl dec cwtl sub (bad) imul daa cmpsb stos pop adc fcomps xor je mov inc cs push jg push sbb pop outsb clc sub (bad) push out call icebp (bad) or jne push pop inc jecxz pop push mov mov jle shl cltd (bad) mov jae (bad) add mov mov pop and gs push jecxz jecxz lahf mov jns or mov das sbb mov mov sbb hlt pop sahf ljmp inc push ss gs fsubrs pushf mov fidiv (bad) aam int3 mov inc and mov bound add add sub dec ret fstps (bad) mov xchg sbb fnstsw mov mov pop mov jge xchg aaa sbb nopl pop icebp inc and test dec ror clc or jmp (bad) leave int mov notl gs scas xchg out xor ficomp add add or (bad) in add incl xor pop cmp fwait dec shlb or aas arpl inc cmp movsb push xor lods stc cld in arpl inc dec ljmp mov cmp pusha es push dec push cmp dec movsl add ds les or call inc xchg mov (bad) call mov mov lock mov stos stos lds enter (bad) sbb mov arpl scas add xchg cli bound lret mov xchg addr16 lret out loope (bad) dec fldcw or sub cmpl mov xchg (bad) cmp addr16 adc lcall call clc cld int pop subl sub lret popf inc imul sbb (bad) push ss repz imul mov imul xlat jl mov out and aam jb dec movsb add add sub lea or imul clc pop pop imul mov sti mov in in pop pop fdivp lea push fs jae rcr lods pop rorl je clc lods repnz xor aaa scas mov jbe popa call insb roll sbb loopne jmp add add jb outsl pop hlt lods xchg mov repz and inc xchg sbb iret lock sarb popl mov ret xlat nop shrb test fcmovne test js popa inc imul in fstpt fldt (bad) push add push icebp int ljmp add add add mov fstpl xor popa jp mov fnstsw sub aaa pop orl mov sbb aad xor sbb push (bad) inc movsl jbe aaa jne frstor and push leave push inc std mov aaa adc inc shll es add sarl imul dec (bad) mov inc ror push dec rorb dec cmp adc inc push and ss push les mov lcall or outsl std mov imul (bad) aam movsl gs lret xorl dec dec aas lods into ret movsb imul add mov (bad) arpl push push aaa lret js add fadd jmp cmp dec and and push mov (bad) sub in (bad) fldenv daa and andl and fild ss ljmp and daa out push pushl pop mov in add out add push adc popa (bad) (bad) sarb popa (bad) cmc xchg (bad) std mov jle xchg and push iret mov push inc inc mov jo scas or pop jmp sub jp or sarb mov sub xor inc in clc dec pop adc dec rorb cli scas xor dec inc nop cmp add aas adc push (bad) mov pushl or add jl inc sti or add sub test ljmp inc cmp lcall mov jg lret mov push mov add div xor imul scas mov sbb or push push pop jl push lcall or sti mov popf ljmp gs or fiaddl int3 xlat int (bad) jmp mov popa shl add gs push dec mov sbb pop ja jo sarb push adc inc enter lahf cmp push jne push loope fcompl loop es pop icebp fidivl inc lret lods cmp and push fmulp fs pop lcall mov fadds int3 dec mov sub cmp adc adc add mov mov dec xor mov add adc xchg pop or pop sbb pushf lcall out inc jno sub mov mov or cmp aam insb jl and aas mov fdivrs aas cltd test mov cmp add add jb push push push and test xchg push daa std mov sbb loop out nop cmpsb xchg fldenv inc daa and insl pop adc outsb sub (bad) sahf shlb and (bad) dec push popf outsl into imul inc cmp sbb push adcl cmp sahf negb aad add add inc (bad) and clc idivl xor mov inc push das mov fldcw rcrl aam lods movsb (bad) adc pop daa lret push cmp jecxz pushl in inc fmull in adc mov inc add dec lcall xor data16 add add add or or es (bad) pop arpl stos dec testl addl gs dec xchg daa pop mov lods pop aaa xchg add or add (bad) movsb xorl add mov sbb call jb lds sbb and add add sbb nop lcall scas add mov es pusha fsts mov sub add jge xor xchg sub call aad lahf jo out cltd inc loop (bad) mov fnstenv iret mov xor xor jne orb dec stc cmpsb jne mov cltd add cmpsl and and cmp xchg and lea arpl sub mov into sarb mov push arpl fstl sub lcall xlat cli inc pushf sti dec cmpsl mov inc xor int3 and mov pop arpl or cs loop in in xchg push test rolb lods dec dec scas mov dec iret out sbb add sti jnp sbb sbb (bad) ljmp out dec pop ss cmp iret stos addb jb (bad) sbb xchg std fwait pop xor add ja and fsts jge in in add fcmovbe inc (bad) in ss push es ficom dec cmpsl arpl test ret add pop movsb leave hlt xchg jl add push fistp iret and cmp cwtl add jmp inc loope adc stos add lock cmp popa sbb loopne mov adcb sub and push dec jbe mov in test or dec dec sbb pop jns adc or ss dec lock add sahf icebp xchg mov dec push lret inc into les mov sbb lods dec push mov pop add dec pop jno lcall dec dec das xor imul movsb jmp in add inc mov mov insl dec mov dec and lods dec cmpsb and insb lret out lret shll xor jp or scas daa jge (bad) mov push pop aam fstl jl inc rclb repz repz jno scas std lret push hlt jbe enter add (bad) sbb dec insb adc inc add clc js stc in aaa movsl cwtl add repnz add cltd add int pop add cmpsl cwtl subl add lods xchg ljmp rol lds adcl mov push push int3 stos out sbb jo ja mov stc sbb sbb jmp cld xor aaa push incb arpl jg pop inc ja add add das dec cmp aam bound pushl mov and inc imul inc mov pop (bad) mov sbb xchg inc rol xlat js mov xorl test sub shlb xchg cld ja lret rorl cli shl stos leave stos (bad) sbb cmp rcl lret push (bad) aad dec and (bad) dec lods add dec out mov mov (bad) mov pop sti into xchg fdivrl sbb repnz or clc call insb daa out gs mov stos sub mov sti or repz cmpsb (bad) push mov add xchg or in mov fs and add rclb cmpl push dec das lret sub mov xchg rolb adc mov pop int inc addl cmp or mov xchg (bad) clc or daa (bad) cmp add xor scas pop loope add and mov add leave adcl push outsb xor jae mov es inc loope fidiv (bad) in ret add mov movsl push push sbb jge fisub sbb xlat int jmp fistpll outsl mov imul test pop dec pop push add xor (bad) iret mov out adc jb shll mov mov fsubs test call (bad) cmp mov push fiaddl xchg xchg call inc je jmp sub sahf fldl cmc imul cltd jbe test adc aad jmp (bad) pushf faddl add xchg push faddp fsubrp imul in inc rcrb mov adc ljmp stos adc jmp mov ljmp mov sarl arpl stc mov fadds or push nop js test rclb (bad) cmc cmovb add inc stos inc jecxz push add add (bad) rol addl arpl fidivl push ljmp out add xchg jb cmp mov lea in iret and sbb dec pusha inc clc add sub int cld sti or stos add mov jle xchg jae cmp daa and mov add add (bad) add xchg and loop enter jne xchg fnstcw cmc xor (bad) adcl int cmp ror and jbe insl mov xchg jecxz push jp fnstenv lahf nop pop (bad) jmp jns lods aaa stos mov dec ds (bad) cld or jne stos mov xchg add push lret pop xchg (bad) jnp negb add out dec out out jns push xchg dec dec and fsubl adc mov scas (bad) dec xor inc sub out xor aas mov mov (bad) push adc sbb loop clc call and cmp jbe bound add mov cmpsb mov or jmp (bad) jns (bad) data16 sub fidivr in jae incb jno xor shrl and mov or jnp ja cs out mov or nop in (bad) repz xor jg inc and and add popa mov xor mov std sbb adc sbb test in (bad) loope jp hlt lea int (bad) mov mov cld in dec in sub xchg iret inc pusha push imul out out bound mov jmp pop mov and or add add mov cltd jg mov fisubl icebp jecxz sub xor test inc fidivrl cltd inc pop mov jb in mov sbb int3 adc fdivrl xlat sub pop inc notb jb sbb cmovs pop rol sub inc dec sub and out insl jae dec add jae aaa xor pop lcall inc shll mov or mov mov in xor (bad) and push mov and mov fsubrs in insb insl and js loopne or fcomps aaa jg or cmp lahf fs add dec or addr16 and loope mov out mov push adc adc jne and into xor int mov cli push pcmpgtb or (bad) int lcall subl mov aaa sbb mov xor daa movsl push xor iret xchg test add xchg push (bad) jnp in push pop aam rolb cmp std mov stos push rcll sub jo pop into int push pop push xor in fisttpl lret scas sbb lret inc xchg jb mov cmpsl std adc pop testb xchg jo or adc es fstl mov inc mov xchg xchg or push je cmc push sbb dec lret jecxz push push rol aam mov loope (bad) (bad) test into (bad) (bad) mov test xchg insb mov dec das mov popa mov and sbb add mov push jecxz cltd movsb mov aam xchg pop jb xor dec mov push mov loopne fcmovnb pop or inc fptan add cmp (bad) cmp dec xor bound jnp decb dec les jmp pop jecxz push divl pop (bad) fdivp fs mov sub xor add adc clc out in push and or popa ret in sbb inc enter movsb sub jmp repnz jo dec sub inc dec fs add jns mov adc sbb jmp (bad) cmp mov mov out mov add gs sub mov cmp dec jne insb mov or or addr16 scas call jae mov xor dec (bad) add add cmp adc add jg cltd outsl imul mov jns fdivl fsubr or push and add sub (bad) js call jae ds and mov dec outsl sbb sub hlt lcall or jns adc (bad) hlt or popa arpl push and repz test and dec pop push clc pop adc jno js into scas test scas scas xorl push add jg sub mov ficomp subl (bad) mov inc add jle shrb clc pop push dec test sar mov mov test pop jno fcmovne push jmp das jne cmpb das shll jns repnz mov or sbb jno jb add ficoml stc xchg adc mov (bad) std icebp jecxz in fistp addr16 jno dec add nop inc pop mov sub iret cmp loope das popa test sub dec push push fsubl (bad) repnz in xchg shr repz js imul and mov add dec bound imulb pushf scas je adc pop sbb les cmp push inc sub xchg cmp in sub dec dec xchg cmp loope dec lods clc stos mov xchg movsb gs cli outsb movsl (bad) int pop idivl sub add stos ret loop (bad) fldl xor cmp add add xchg jae into test sub in fs pop cmp mov dec add arpl out add cmpsl inc cwtl hlt stos sbb jge iret mov push rcl adc dec or mov (bad) mov fs jl xchg aam mov shrb push xchg aad mov mov aam adc add (bad) sti inc je push stc mov sbb jb scas add loop fisubrl sbb in mov negl fidivl in push shll or mov daa mov std pop push (bad) dec ds (bad) je inc idivb add cmp popa mov add xchg dec mov arpl jne repz into cli inc pop jg jbe lret inc imul movsb and loope out ret jg pusha sub pop sub aaa add lds sti mov cmp adc fwait int adc or fs mov add ret push push and fst inc mov aaa add dec ret lret inc sti xor movsl ja sub int3 aas aas pop sub les sbb mov jo or movsb (bad) out adc pop dec sub jb jl ret (bad) xchg mov inc inc in pushf sbb aad loopne add jp (bad) sbb aad push orl leave sahf jno pop dec xchg decl loop jo into xchg (bad) sub xchg add pop scas enter test insl mov xlat adc repnz sbb and out pop insb mov xor pop rclb adc push and imul add mov pop (bad) and sbb popf outsb xchg arpl jo stos fisubrl xchg xor arpl ja or mov aas jle mov cmp stos lahf add gs mov loop cwtl outsl xor or subl adc add pusha mov xchg inc xchg or add xor xchg push xlat jno int3 sub outsl pop aas int sub mov in gs pop cmpsl sbb cmp orl pop jb lock stos push (bad) cli xchg hlt mov mov sub pop mov mov fisttp lret xor push sub inc or fsubs push iret mov leave pop mov iret jge movsl mov sub in icebp add test nop jb inc ljmp jbe scas test jp in repnz and mov mov sub xor stos inc scas nop push in and fdivrl push xchg and add add xchg loope jae std mov mov push mov rolb fmuls add (bad) vminpd test xor dec cmp inc pop rclb bound and ljmp jnp xor lock gs es cwtl and add cli das push cmp mov repz into cmp inc rcll adc int3 pop movsb (bad) outsl std xor mov call sbb out xor push inc sbb sbb sbb cmc scas aaa (bad) aam (bad) jbe pop stos mov fwait push mov inc imul add cs and cmpsl enter mov sbb pop es pop ljmp test pop jo inc xor jp inc adc fimull pop popf loop xchg mov cmp jecxz out sarb mov xchg ficoml inc mov jecxz adc jno icebp loop or add add add or repnz push data16 push lret arpl push dec fadds mov sub dec js jp rcll pop sbb and (bad) jbe jnp inc (bad) js or fidivr jmp or out ficoml push pop add lods (bad) in fsts mov aad xchg adc loope sbb xchg adc fscale and sbb enter shr out xchg pop aam jp setne push lahf mov mov fmul daa jle inc into sub pop jne push aas adc repz (bad) into and cmpsl or (bad) cli movsb inc (bad) xor sbb cmp (bad) (bad) bsf lock add add mov push test jmp popa enter test xchg adc sbb inc (bad) mov cltd mov dec es pop jecxz add sahf insb jle outsb cmp jmp mov out into pop mov and mov daa add (bad) mov stos cmp loope ja mov add cmp xchg sarb jo (bad) xor loopne mov push jno out shll mov inc xchg out sti outsb (bad) dec ja xchg (bad) aaa sarl fildll loopne (bad) aaa sub or or dec or mov and mov mov setle and sahf add loopne and push cmc sbb bound sbb xchg or adc std push mov push inc bound fstps sbb scas mov adc mov pushf fldt mov testl push jl xchg dec dec adc push cs add iret test jecxz adc dec push inc lods ss out push test test cmpl mov mov iret (bad) sbb aaa mov adc xchg sub or xor es in pop outsl pop xchg sbb fdivrl mov inc lahf inc aad or insl add mov pop push push rcll inc test insl pop add ds shr push mov ret jmp sub xlat mov scas dec inc and ror bnd int3 ljmp jmp stos imul sub and and xor adc add loopne sti push cmpsb call (bad) popf (bad) es sub movsbl add add lds test outsl data16 fs mov xchg fisttp enter bound icebp dec loopne cmp adc xchg and ds and mov sti out jb ds loopne mov (bad) rol adc lcall jle mov pop jb mov mov cltd add add add push xchg arpl imul xchg xchg xchg fistpll dec dec jecxz repnz cld aaa mov out lcall decb test shrl fistl cmp popa add pop leave pop lock ror push cmp cmp mov mov add xor ja int3 pushf adc push (bad) lods aas imul jbe push cmpsl cmp mov cmp xchg aad mov mov fiadd xor je je mov push xor imul sub adc scas jb gs add jp aam fcompl sahf sar cmp add sbb fsubrs sbb and je adc fldl aam and stos mov flds fcompl mov pop push lret jle lcall jae mov cmpsb inc sti jbe aad test adc cli insb pusha (bad) jle mov sub je je (bad) leave and mov cmp add pop inc jl jle jnp mov iret xchg les add test push aas xchg mov xlat icebp ljmp jle xchg xor std jno sbb ja (bad) stos add xor push jle xchg int adc enter sbb std movsb or mov jecxz insb movsl js and repnz push out push pop repnz aaa bound inc mov aaa adc popa imul jmp and mov sbb push fisttpl mov aad mov or popf (bad) push dec push lds sub lock sub fcom fist call push je adc add add (bad) or sub dec xorl dec jbe ja mov pusha test ljmp in es (bad) xor adc ja and or int clc jo cmp mov pop repz mov stos je push rclb (bad) mov mov lret rorl (bad) (bad) rol add popl push je xor xlat sub cwtl rcll adc mov aad cwtl shr pop into mov adc imul out mov xchg lret xor cs mov jb inc sub bound pop popf les lods insb scas add out push movsb mov push pop or xor sbb xor mov push fsts dec fcoml or les clc or mov jnp rorb fisub or int3 cwtl enter push lret cmp push in adcl push in daa push mov or das mov xchg scas das fildll sub orb add repz mov mov mov lods push out out add int3 sarb imul repz dec cwtl dec jo,pn lods icebp les cltd add andl mov int3 push and cmpsl aam popf add jb mov sub bound add push push mov inc jo pusha pop clc mov fldt add mov rclb add int3 out stos push mov (bad) repz pop pop sub cmc scas aaa ds call loopne fiadd lods sub inc cmc (bad) xor mov pop and add xor aam add add sub xlat inc mov or cld mov mov xor add inc mov add (bad) push in sub mov pop aaa insl ljmp gs mov mov in lock fwait scas jle movsb cld xchg (bad) lock nop imul sub fsubs cmc sbb sbb ja jp mov scas lds insb std jp lds (bad) stos sbbl mov mov dec pusha inc push into ret jnp dec int popa nop (bad) cli xchg or iret out cmpsl sub sub push and xor cmp cmp jmp stos jle loopne xchg jno aas (bad) mov xor (bad) cmp lods sub mov xchg hlt les lret popf cli jne insl adc cmc jge dec fidivr iret sub or test add mov shrb pop and sbb test (bad) fldenv iret inc stc aas arpl jno out xchg push insb insb rolb out sub dec xchg adc out xchg or mov push add jbe sbb xor cmpsb ss inc movsl andl mov bound push fadd leave imul (bad) hlt push int ljmp daa andb dec call and les and in mov push clc fstps std in xchg shrl sub enter and jle mov in hlt fildl and repz xchg cmp outsl jg cmp sbb ja xor push or (bad) xchg mov loope or add cmp add std ret icebp stos popl cmpsl xlat dec scas xor (bad) sbb adc cltd addr16 mov dec adc dec shll and mov das sbb sbb fstl jecxz xchg stc xor in cld lret mov push enter aam add dec adc addl rorb push xlat sub pop inc or mov mov psraw sub adc les hlt fldcw in inc and or push out cmpsl ljmp imul xor ret fstl shrl jae xchg (bad) leave push jle (bad) into push cld pushf push xor mov fsubs add xlat scas (bad) shll mov clc (bad) push dec mov ja sahf adcb adc sbb pushf ds fadds enter popa aas adc fs int mov movsl sar lcall fisttpl ds mov stos push or out imul xor add add js clc push jp inc xor inc lret cmp cmpsl jb jns xor cli aam mov pop mov addl dec sti cmpsl add adc sarb mov adc ret push inc (bad) imul lret xchg data16 js or or push loope push pop mov lahf lret (bad) ljmp add adc movsb scas or movsl inc (bad) lcall adc ja or fildll and sbb adc ds inc stc rcrb inc xchg jecxz xor sub mov scas test xchg xchg mov mov gs add out loopne dec into pop loope test imul test js (bad) in repz stc mov (bad) cmp lret roll pop faddl cmp pop or cmpsb add imul (bad) dec lea pop pop in sub mov mov xor xchg mov or add xor sbb pop cmpsb adc mov mov fst or jmp xchg insl dec push pop sbb adc imul aad push mov push adc mov or push icebp jb inc sbb jnp pop icebp data16 ja inc xchg test lods pop push addr16 into sbb pop pop sbb inc mov jmp insb iret dec call call inc rcl add hlt mov lds fidiv add inc popa iret lret jge lock mov adc ud1 aaa pop and sub xchg add add add mov call sahf mov sbb sets rcrl and xchg outsl add movsl push imul mov mov push mov hlt das or mov adc fwait iret fwait adc loope insl mov addb add pushf into daa xchg rorb ja sbb sti sbb cmp icebp imul push sub in jne jbe jo das daa push inc stc test xor lret rol pop push fmuls andl neg inc ja test xor jne xlat xor push imul roll add lods lock sar outsl xor nop xor jmp dec push mov and add loope xchg loope popf mov push arpl aad fbld push mov pop loopne xlat dec insb pop xchg aam test sti (bad) int3 and (bad) data16 addr16 stos mov out sub xor add sahf bound stc test sub push aas insb inc mov mov sbb (bad) fstps aam fsubrs (bad) cmp pusha les fstl and fdivrs int push sub cmp sub jb adc loop sub push dec cs cmp sbb test add add inc xchg mov sub out ds (bad) clc xor pop pop sahf repz outsb sbb outsl enter repz inc dec sub dec push in jno ja lods pop push pop lds push addr16 repnz aam cmp mov inc ret ret sbb idivb in lret add sub dec (bad) mov add out shlb outsl mull aas in and ret pop test sub enter mov pop adcl imul adc roll mov out leave jle ret dec jno or cltd inc imul repz psrlw fstps (bad) (bad) push push andl add stos add inc es movsl adc movsl xor jge fnstcw and xchg jno push xchg mov or pop fdivs aad cmpsb mov add push and clc pop jnp jg fist push mov inc (bad) pop cmc das (bad) fcmovnb jp,pn sub addb pop ja add jns dec push mov sub cmpsb out lcall sbb mov mov jmp sub dec (bad) xor ja jmp stos xchg mov push addr16 icebp jecxz adc dec (bad) sbb fcomps pop mov fmulp pop jecxz mov or bound aad outsb adc jnp in sub mov jo push cwtl outsl jbe ss and fyl2x not jnp jle and sbb adc outsb stos fldcw cmp mov cli sub lahf imul leave insb sti mov movsl cltd imull ja mov add in and cmp sahf or adc fadd dec in jg nop adc inc jg fistpl or movsl sub dec sbb add sub imul sbb adc insl add xchg mov hlt stc cld cltd fdivs cmc xchg sbb pushf aaa orl xchg sbb add or loop pop cmp les cmp jl ljmp jns sahf ja add idiv fsub dec out and mov pop stos mov repnz lahf add cli push ret aaa mov jg inc rorb xchg adc and add rol and lea inc jecxz sti fdivp add lods rcl mov out mov pop jp daa imul outsb (bad) bnd mov push fimul dec adc pop fnstsw pop lahf ret jge (bad) mov lahf xchg mov js (bad) loopne imul cmp add or inc (bad) stc jne imul sbb adc xor sbb sub test ljmp ret scas jo in stos es jns cmp jns sub xchg outsb popa and loop insb cmpsl int lret jp mov imul jne out fnstsw cmc mov pop into push add adc cwtl scas int3 mov sti push pop push cld xor dec jae inc popf jns pusha pop lahf jge (bad) mov dec dec ds in fwait pop pop clc sub in fstl dec mov adc movsb stc add cltd xor enter fs das rcll inc and in mov add add adc idivb je push jge loopne lret xchg xor dec xor lahf jns nop jno and inc cmc push cltd sbb jl insl leave incb adc aam pusha (bad) push add daa es add jb fsubrl jl rolb lret mov dec push call sti repnz and or test jb cmpsl imul push mov cmpsb mov pop in sub jge dec pop (bad) out push rorb lahf cmpsl sbb mov int jge pop xchg lods aas aas jmp push jp cwtl xor (bad) int lcall mov out add push cwtl aaa adc cmc cmp ja out dec popa fs lcall xchg or xor mov and inc mov add into xchg jne cmp xchg mov ss xchg xchg mov inc cmpl pop std call xchg movsb add (bad) mov sbb shll and pop xchg cmc pop jae pop and shlb mov mov mov or popa xor xchg test mov fcoms lahf lret hlt popf cmp inc mov add pop into mov push cmp aad jp (bad) xor xor and add add sub jmp sbb dec dec int3 jge mov scas (bad) pop xchg xchg sbb or jle test andb lock or nop add xchg sbb jp ret cmp lock rorl insb jns inc add xor int jae cmpsb popa cmp sbb or push lret and add add jno in inc xchg xchg in adc daa aad sub ds ret and jnp xchg mov dec push lea xor add mov push xchg ljmp loopne and jmp and fldl adc push out (bad) ds pop dec jmp pop adc sbb cmp mov add int3 pop sbb lret mov xchg mov sbb divb insb mov mov mov sub push jge iret fmuls pusha sbb jg sbb inc aaa adc (bad) aam fldz pop insb popf popf testb shlb test outsb (bad) mov lahf push addr16 repz in inc lods mov inc aam push xor sub testb bound mov mov sbb scas xor into and gs jbe sbb out cmpsl (bad) xchg out and enter (bad) notl mov jae jmp in or out jno add aad in insb xor sub dec dec inc jge inc shlw jb aas xlat shr sbb mov mov cs adc insl scas gs push pop stos and mov ret pushf mov setle xchg sub xchg fildll xor fstl sub mov sbb in jb out mov call in sbbl dec add leave cmp add dec and fidivl fdiv fisttpll (bad) jno daa and lret adc int3 add jg aas add outsb adc jp push and jg ficompl cmc xchg pushf pop add push jne call add add mov inc mov push mov xchg cmp add std mov lret lods fsubrs mov out aad mov repz out repnz mov (bad) shl jo in testw stc jb jl cltd pushf mov sbb stos fistpl aad xchg add add imul les repnz es cmp cmp push lret int3 xchg xor add push dec adc nop sar mov sti and mov pop loope (bad) cli or pop scas sbb push lahf outsl push dec fcoms pslld push insl mov add add add add mov pop cli imul jo xlat jg add sarb dec js pusha add cmp xchg mov out xor xchg inc mov pop ds mov pusha cmc or dec inc (bad) mov pop or or mov dec hlt adc xor add add add jnp xor les jl (bad) jg jge xchg cli push movsl cmp out add mov les sub rcrb popf mov and incl mov sub je inc adc jnp mov loopne repz fdivrl dec or (bad) mov add add fs push shrb nop xchg or fwait test xor add jns adc mov jo (bad) loope hlt inc push mov mov inc lods mov ja ds adc and aam popa mov icebp ja outsl lret inc inc mov je outsb out pusha adc mov adc mov dec jnp lds ds inc loope mov stos test add and addr16 sub iret adc insb xchg in testb mov mov jg mov fadds or xor lret leave repnz add (bad) mov icebp clc pop lcall mov movsb ret call clc icebp mov add loop cmp or xor adc sub inc shrb daa add xor jne mov jecxz cmc push aam mov mov shrl scas add (bad) (bad) xchg (bad) mov push stos in movsb jle pusha xor mov mov sti xlat hlt adc xchg mov xlat fwait jo data16 and adc xorb jle pop dec mov jle imul mov fwait xorps push sti int3 inc adc add pop gs (bad) pop stc fstl es mov mov shl scas add mov pop cmp mov lods out int3 push lods sub dec xchg mov (bad) repnz ficomp imul (bad) adc mov mov shrb add popa fnstenv dec mov mov xlat sub adc lret fscale pop xlat sti inc jg inc mov dec pop xor gs repz hlt int rorb add es cmpsl push lea inc subl int3 cmpsl and mov inc mov in enter fwait lcall (bad) nop imul add add inc xchg cs inc push xchg ljmp repnz add mov ret (bad) leave popa (bad) jecxz xchg inc xchg ss (bad) mov mov mov in insb xlat jno xchg fildll mov sub adc adc xchg jmp lcall add add dec jns and push mov xor push rcrl cmpsb pop minps (bad) adc out call out jecxz dec dec (bad) mov cmp fsub sub dec divl popa mov jne cmp loope mov fild inc ret (bad) and add cmp sub movsb mov add push dec and jb adc ret icebp sahf mov es js insb icebp jecxz xchg pop in fwait sbb sti loopne in mov cwtl sub jbe adc verw cld testl dec adc popf inc push dec ret repz push in fnsave xor pusha sbb add arpl call push jae bound test das jo daa push lods fdivr aad cmp add sub sub leave inc xor int3 cld mov mov jge inc add rcrl push adc fimul insb inc push (bad) push repz xor mov pusha fadds negl xor (bad) jae pop xlat out test in xchg inc and movsb (bad) loopne add adc xchg mov dec mov (bad) ljmp xor sub aad lahf dec scas jnp mov call or adc stos in adc imul nop pop das pop xchg arpl jo push and mov ret cmp into jae push insb (bad) dec (bad) iret andb dec fnstcw xor push outsl incl pop mov pop xor mov cmp testl mov sahf rcrl mov sub ljmp add add add int hlt sub scas mov mov jbe xchg imul cwtl repnz mov xchg fiaddl jnp hlt xchg push jae adc lods sbb adc pop clc lahf mov stos mov adc adc mov pusha mov das push decb push sbb adc xor enter js ss inc sarb out xchg fwait sti das lcall lods test mov mov mov call rcrb adc ficom adc cwtl pusha adc fwait push (bad) cmc test add sbb pop add jg and ljmp shll add repz rcrl xor or mov push jl fcmovne cmp add bnd inc push dec push sbb decl ficompl add js xchg mov push mov add sbb and push or lahf frstor (bad) fimul les jb mov xor aad add cmp jecxz cltd inc mull sub xor add aad arpl test mov adc mov xchg mov sar clc cmpsl fbld pop es and mov lret enter es or pop popf fcomps adc inc or rorl add sbb lods inc ret mov fucomi and ljmp loope xchg cmpsl mov mov mov scas test mov cmpl loopne stc xchg mull sub ljmp fs jnp (bad) div ds (bad) dec jmp mov push add out sub lret pop jecxz adc mov clc cmovb clc pop repz mov xor stc aaa inc lods jmp jae es inc push test cmpsb movsb nop and and pop arpl dec aas daa push (bad) cmc test mov out scas aam jmp aad cmp insb lcall insl (bad) popa test bound stos xchg mov es or and lock sarb fstpl xor xchg repnz dec adc sub and test jnp inc mov scas push out sub mov inc into pusha aaa xor aas cmpsl fild add add or and mov stos out out mov xchg lcall ret sbb mov in jae pop test lea sti daa dec shlb sub jno jbe ss or icebp mov pop ljmp in push sbb int3 or jecxz gs pop dec dec adc (bad) call mov cmp sahf jnp nop cmpsl inc cmp insl in repnz faddl (bad) mov push and push xchg bound sbb enter jp shlb pop outsb fsubrs dec push stc movb mov cld and add add push adcl movsb movsl dec inc sbb imul jl cmp bound imul popf xor add fisubrl adc das daa inc idivl cmp addr16 or addr16 js std push ss sub int3 jp pop sar cmp and fildl outsb xor nop add cmpsl and xor add add mov mov loopne out (bad) lods popf out addb push arpl sbb add stos adc psubq stos adc adc rcl ret add or loope xor std dec enter pop push pop sub dec std ficoml mov and leave outsl inc mov and inc cmp gs mov test xchg push fdivr subl fisttp (bad) dec out sahf pop jo pushf sahf divl stc andl inc dec int cmc dec lret or sbb xchg sub sahf pop and jnp insb stc fimul ja mov add add cltd mov xchg mov sub scas inc (bad) sbb jecxz addr16 repz mov iret xlat jge or int3 lds out subb push repz cmp mov (bad) adc int3 scas sbb push das (bad) decl inc (bad) popa outsl mov sbb sahf or mov inc iret add add jge sbb iret outsl and dec add fsubl (bad) mov shrb jmp popf mov mov into push bnd loope movl adc movsl and jecxz sbb das pop mov jecxz outsb lea push and lret dec pusha adc pusha jae add add cmp in cmp mov lcall fstps sarl mov lret out inc pop mov mov test iret int3 aas pushf jg stos and insl push add mull inc sub dec cltd xor mov in push add add inc mov xchg insb aaa push pop (bad) and aad lds mov idiv leave std test sub stos cmp mov or repz leave mov loopne test dec (bad) loope dec movsl or pop test xchg jmp outsl jle inc arpl dec add jne repnz cmpsb mov add add and rcl sahf add popf jbe and mov inc test int and outsl jp dec aas fsubrl mov ficoml xchg and cmp lret les repz dec lcall jb jno ret mov loop pop arpl jb pop or push gs push lds xchg sbb (bad) mov add add push fildl inc jg push xchg (bad) xor shlb sti dec sbb out sub (bad) call xchg lret or rcll add fwait jmp arpl popf shrl and mov sub fs mov mov or ja push add add lret cmp jno add cmpsb fwait adc xor mov inc push add mov insb cmp inc mov mov xchg pop enter das jno xchg adc cmpsb cmp je add add lock stos int3 sahf cmc mov fild push js sahf sub mov jmp add xorl js pop jmp xchg and and dec loopne clc ljmp sub dec and push insl mov loope psadbw (bad) ficoml cli hlt pop push daa pushf push mov out rolb sbb rolb mov sbb mov push cmp inc and aaa lods and fs pop pop lods ret cmovl rol in out mov loope and mov lcall inc aam xchg shr inc out sub xchg shll xchg push jge pop lahf les pop icebp movsb aaa es in pop nop mov mov dec fcomi testb orl cld jl lds inc aad ficomp das push add andb mov xchg sub sbb cmp adc mov dec sub aad fcoml cli divl repz xchg test dec test jp mov pop dec push dec jmp mov push jb mov (bad) mov mov cmp mov stos mov push or lods ret jle add lret stc test test scas imul (bad) and sub pop lock dec or in cmp mov mov inc fidivrl fidivr in jg mov das ret fadds std (bad) xchg xchg gs pop sub sbb mov add in mov cmc ss loop sub push jbe dec or add (bad) imul rcrl (bad) jg and dec fstpl sub mov jp les mov xchg xor inc mov test cmp sub (bad) stc fnstsw dec push adc out out add mov mov pushf ret out xor and mov sahf push mov in pushl lods mov cmovo xchg loop adc sbb (bad) jecxz mov cs jl sbb lea icebp mov (bad) xlat pop pushf push jl mov mov ret pop ret add push mov rolb or or push fcmovbe cs and ljmp mov shlb push cmc sbb xlat (bad) adc jnp and sbb push fwait xor mull lds (bad) fs xor or ss push cmp add (bad) pop add pop fistpl mov lods sub std xchg add cmp hlt dec push sti pop rorb ss push lods das and outsb orb rorb js imul into sub jmp popf mov faddl jp sub xchg pop addl add mov lcall movsl sbb mov pop sub enter gs or and mov or dec dec push adc mov cmpsl pop dec fwait and fnop cmpsl outsb inc aas mov mov push dec sub rcll push jge cmp fidivr insb add es imul je mov or test scas jnp imul lahf dec push aam sti jp (bad) xor sbb xchg inc ljmp sub pop push cmpsb insb in lods int sarb xchg jl fucomip jl out dec push (bad) xchg cmp add add sub outsb lret jb popf cmp mov and cld push lods dec push cmp jb aad in xor mov fnstcw or inc sti clc ficom call outsl jnp clc imul dec pop mov cwtl fsts fcmovbe nop cmp fstpt loope mov mov add cmc mov cmp xlat lret jecxz jbe loope pop inc push scas push pop mov sub test stos fsubrl (bad) mov push in or add (bad) loopne in dec push rcl sub push icebp sbb pop loope mov jg adc rcll pop cmp mov cltd xlat push sub lock shr lds mov pop push sub (bad) pop inc mov lahf je adc or test fnstenv xor jmp iret lahf (bad) jnp cmp int faddl outsb and movsb sub (bad) aad test outsb pop sbb add push pop add dec je bnd and push (bad) push fisubrl xchg imul dec test stos sahf int arpl sub outsl inc cmp imul leave mov jle xchg xlat adc fs sbb sti flds loope cs mov push add xchg sub add pushl add lcall enter enter push imul lret mov sub arpl lcall ret mov mov xchg sub fwait adc lock (bad) scas jo dec imul int3 jne add cmc cmp jecxz pop cmp push sbb and xchg cmpsb jb pop testl cwtl xchg mov icebp jmp orl inc imul dec adc repnz push xchg xchg hlt sub sbb xchg adc cwtl cmp and in push arpl xor jl loope sub in imul pop adc or mov ss fbld cmpb dec push or addr16 outsl jp (bad) cmp int3 fdivl (bad) roll cmc mov cmc jp into or sub jns and imul jnp sub adc and push push and inc test pop out jbe xchg out (bad) inc sub cli mov mov rcl negl aas pop scas mov sbb inc outsl gs adc push inc cmpsl and jae icebp jl test int mov pop mov push outsw adc shrl add repnz ja,pt into inc clc and lock (bad) xor cmp jle mov mov jge cli rcr mov out lahf sub push xor dec popf pushf ja rcll addr16 jae inc xor push inc cmp xacquire mov rolb jbe mov cli andl add add dec ja sahf out (bad) ljmp bound mov dec sarl xor fnstenv add stc lds sub and jb sbb mov pop jle or repz push dec xchg (bad) mov xchg xchg daa xor vstmxcsr xchg std aad add push insl rcll lock sbb pop adc push inc lret cmp jl pop jle add and ja ds (bad) arpl and test adc or cmp cmpl mov fist out push xchg add add and pop sub out xor pop fs adc (bad) les adc ljmp outsb loopne pop adc pusha enter push ret stos inc add loopne xor test cmp jl add scas (bad) cmp cwtl xchg cmc add mov (bad) xchg pop jmp push cmc or fstps mov scas xchg inc xchg (bad) lds mov xchg into data16 mov cmpsl dec xor pop jecxz or dec ret inc mov loop (bad) lahf cmpsb (bad) fcomps fsubrl icebp adc jge negl gs mov sbb xchg fcomip (bad) in push aaa fmuls imul inc enter sbb sahf sbb sbb xchg jge pushf cmp push add sbb fisubrl movl push pop cld test xlat adc iret bound mov jle and movsb and stc stc (bad) jbe pushf loopne pop pop cmpsl cltd ja or mov shll test add add out inc or fs popl sub and shr sbb pushf jno roll arpl pop xchg repz or cmpsb adc inc ret pop repnz sbb push (bad) (bad) adc iret cmc es in push add push xor and (bad) mov sub add dec mov fbld dec int3 sbb inc pop data16 pop pop xchg push mov shrl lea sbb (bad) mov push addr16 jne out loop xor fs dec lahf stos or mov pop and test setp loopne lods lods std sub sub and pop bound xlat mov fstl lods mov mov repz mov iret roll jb and adcb cwtl lcall scas (bad) nop les xchg fmuls dec (bad) mov aam cmp aam mov add sbb mov lea in stc fmuls xor in imul jns imul push or nop in xchg loop sahf mov pop jae mov cld inc loop repnz mov lret fldenv cs aas jle cmp and adc inc mov (bad) pop or jp inc cmpsl shlb xor ljmp add bound sahf aas js xor push pop data16 pop mov mov stos in aaa sub fdivs push push push jle aad mov and andl and jmp mov push push inc ljmp jmp in adc adc add add (bad) scas xchg jno rcrb (bad) push hlt jp and loop mov fwait sbb lods push cld or add test sub in xlat sub jmp lea jne js clc push ds test fidivl add mov cltd adc push xor inc push mov add push sti and (bad) sub sub std mov nop xchg les xor jle mov pop push jp popf (bad) (bad) push mov lahf in mov mov push aas ljmp ljmp test add cld popf add xchg pop stc sub pop pop cwtl iret pushf movb roll lods int3 and ja mov dec xorl into and (bad) leave adc stc jge fisub push xor popa pop push rolb mov sbb mov pop (bad) loope out aam xchg mov jmp push aas fiaddl add (bad) (bad) and mov cmp mov ret lea jne adc and out push (bad) (bad) pop and hlt sub and test add mov xor mov jmp xchg add xchg dec jl cmp and inc inc pop push imul mov add pusha dec lea (bad) mov setp jecxz or or add (bad) mov inc sbb fstpl fmulp or pop lock lahf pop pop mov adc push push lahf aad fnstsw pop mov (bad) lret insb iret mov xor loope sub popf xchg cmp add mov add add or (bad) push or scas add sbb mov test mov lods dec lea (bad) out cmpsb loope inc xor mov jb loopne mov cmp iret pop add xor (bad) mov insb ja adc sahf mov idiv xchg out (bad) dec fisubrl fiadd inc mov mov add add mov and jecxz xchg nop cwtl out loopne std dec in int3 or (bad) cmp clc les sbb aas js imul adc cmp or xor movsl in mov push push jp jmp in pop call sbb xchg and xor add push fcmovnbe inc leave sbb arpl cmp pop or and adc inc cmp and mov add pop and mov xor in outsb arpl adc cmp sub in test lea or test push cwtl sub inc add je popa repnz cmp sbb cmc lods add (bad) std ret ja cmp cwtl aam pop cwtl dec cli mov ja lahf xlat imul icebp repz movsb iret cli jg cmp cmp movsb sahf fdivrs mov mov out aaa je rol incl xchg push leave (bad) aam enter stos and add add aad push int3 loopne xchg enter cld xchg repnz mov cmp aas cmc add stos popa pop notl int3 call mov dec iret xor jecxz cmp subl cmpsl push stos insl enter clc mov jno and es sub dec lods ss mov mov fldl add add mov cwtl jne mov (bad) push xor inc out inc dec int xor mov mov ja pop xchg lea inc sbb test (bad) fdivrs arpl int3 xlat decl xlat fwait push daa sbb inc cmpb out rcrl bound pop lcall mov add mov mov mov xchg loope sahf dec cmp push sbb adcl je ret xchg mov jnp xor ret lock into rol icebp loope imul daa std hlt mov out xchg or add add or mov inc shll add add call js jge pop pop (bad) mov mov sbb in test pop add repz movsb push and mov or xchg dec push fsubs pop lcall iret push rcl and jmp lret mov repnz adc ds add pop mov cld xor mov cmpsb push xchg repz scas cmp or inc out push sti jg,pt xchg into push jo pop sub cmc cmp jno add lret lea dec or inc jmp (bad) and mov in icebp adc out add pop pop ret dec and jns jecxz xor adc mov popa push and cmp adc add add inc inc mov mov nop enter adc fisttpll enter dec out push out mov push or insb cli mov jno fidivr test rclb sub inc sub lret test insb aas add (bad) pop ret inc cld or aaa xor xchg arpl add add imull add ljmp repnz mov jge jg xchg cmp loop xor daa out ja sbb push mov push sub fcmovu fcmovnb cmc pop adc and popf dec rcrl (bad) repnz je pop rcll dec inc sbb pop pop out pop dec bnd xorb add add fdivl xor lods and jecxz sub inc (bad) enter xchg or pop incb mov cmp xor loop or (bad) repz sub ss movsb mov pusha adc cmp shrb mov (bad) cmp add add (bad) cmp sbb ss jbe cmpsb cmp xor test clc in in cld cmp xchg rorl aas fisubrl jg outsl repnz adc pop sub and add cli add dec add add mov inc xchg inc pop push xchg or xchg int3 imul xor lods cltd push xchg aad xor aaa cmc sbb mov leave lret xor icebp and pop out cwtl inc hlt sti fmull outsl inc xor insb aaa fmull loope mov in jle mov shrb xor push add jnp xchg je adc sub add test inc repz push jmp nop dec ret jnp jge mov dec or loopne in ja cltd or jno cmc pop test push sbb punpcklwd xchg cltd mov lret das leave adc lret jo lock add arpl jo sub push clc add add mov pop sahf sub in cmp scas or xchg lret sbb fdivr pushf mov xchg pop imul fbstp fs frstor cmpsl pop sbb les xchg cmp or fs pop pop rcl sbb les pop add outsl stc xor mov adc nop add adc fisttpl pop and xor arpl mov dec mov sbb enter adcl mov mov js pop inc fcoml or cmp lret sbb sbb dec or mov das imul dec pusha push fwait addr16 mov xlat cmp popf jne xor and mov aad dec push stos jl das jo push (bad) push (bad) pop push iret cltd addl inc xor add call xchg lret (bad) cmpsl mov sbb test arpl ljmp cs xor cmp stos dec shlb nop movsl and add add (bad) repz mov sbb loop xchg lret (bad) ss xchg dec mov test (bad) sub inc fwait (bad) hlt outsl sbb ljmp daa or adc push pop sub pop daa xor addb mov xor cmpsb mulps fwait rolb pop lret add add xor leave adc mov (bad) fcoms orb jae scas nop imulb sub dec cmp jno jl and (bad) data16 out scas xchg imul addr16 push out mov fnop fwait outsl xchg jb cmp icebp fisubl mov sub adc call test (bad) frstor pop shrb and (bad) insl in jl stos or jecxz jl or jecxz inc test pop mov inc push adcl adc aad jecxz ret sbb push mov outsb mov sbb in repnz jbe add mov leave out cmpsb loope jp sub inc xor in jns mov jno vpunpckhdq mov cmp loopne jae mov lods aam cmp scas into inc add push shrb sbb sub pop sbb mov xlat sbb dec mov inc or push mov add scas jae adc fiaddl mov mov push push (bad) cmp xor or je iret in xor mov push or inc pop es inc fwait sub inc xor sarb inc cmc test dec (bad) in push jns out jge iret fs lds pusha call add add outsb lock sti jmp arpl and push xchg or sub arpl push stos seta pop in inc out out pop jle outsl sbb jae mov icebp sub jl jp mov xor clc inc push scas push ljmp jle dec daa cmpsl xchg xchg cmpsl sub addr16 out jmp lock sub jns iret es jmp push mov cld and inc or mov push xchg inc lods lods pop add das daa negb add out mov test sbb jmp fbld ret cmpsl xchg stos sub pushf out xor xchg dec xchg insb mov push add sub xor xchg enter out outsl lods dec loop add faddl (bad) je insb fiadd adc pop mov or sbb adc add inc leave sub ret mov arpl mov jns jl pop stc jns mov add add add mulb imul movsb inc pop dec inc and repz jb cwtl and pop cmpsb pusha aad or pop nop pop or shlb lret jle or sahf mov dec mov push insb adc out sti mov push sub enter les add add push xchg pop xchg adc aam (bad) mov movb mov dec push xchg jno xor faddl push ret cmp fldt fnstsw ja cmc inc mov insb scas cwtl rclb adc xchg fsub xorl std cmpsb pop iret cmp (bad) add xor push hlt push addl in leave mov iret sub (bad) js (bad) int3 xor push sbb lock xchg cmpl xor loopne dec dec dec push inc and mov mov jae dec pop sub movsl mov fucom outsl add add mov lods aad (bad) jns dec outsb pop sbb stos jle xchg xor jmp push pop xlat push dec and and hlt in adc pop scas jg movsl lds and arpl or test pop imul xor rcr aaa mov pop add lock rcrl cmp inc and dec jae add add je cmp dec in (bad) xchg adc mov cltd popw mov push pop scas outsb mov dec shrl pop dec repnz ficomp xchg loope jmp mov xor adc mov jae in test xchg cltd adc insl xchg fildll xchg xor pop fcoms lods push add es sahf cmpsl add and aas mov lock pop and sub inc jecxz and xchg nop cmp xor out sbb pop out sub xchg mov shll out pop lret es mov das out jno in nop mov pop and mov fistl cwtl lret ret mov push dec or xchg out mov push fstps xor pop adc out mov cmp adc stos jnp push shlb push enter add pop rolb insl lcall adc push hlt (bad) into ror jo stos mov popa push add loop add jns pop outsb sbb xor scas or test ja adc jl dec lret push fucomp mulb popa mov mov jb push les (bad) push xor in int3 loope jle test mov mov jle stos fwait test cwtl insl or sub or add xchg mov sub movsb mov dec push push insb mov push cmp negl loopne adc sahf push dec das (bad) fidivr subb cmp inc jae add and hlt enter add sbb jecxz faddl aad jl in jo and test jmp testb enter mov mov sete lret lcall call adc aam push (bad) movsl sbb iret in jl xchg jge pop mov jb xor test sti jg or sub mov adc pop push inc push stos add jns in dec sub jb dec jmp in and adc mov loope in sbb xlat (bad) dec xor addr16 adc xchg dec pop add inc cmp inc sub mov out inc push cltd push lret cmp add add add add mov xchg roll mov sbb and sub sub fwait loopne mov data16 add fsubp cmc fidivrl sbb sahf arpl jecxz mov sub jae cmpsl (bad) insb in inc test fsubrl sub mov loop bound or repnz add clc xor les jnp negl mov scas xchg dec or xor adc mov mov mov jge dec adc adc pop jecxz lret leave mov mov mov mov lods into in lcall cltd fwait cmp out adc cli push xor jp adc pop (bad) mov xor fcomps mov dec test cmp add sub outsb insl (bad) aas mov cmp (bad) bsr jp icebp divl mov ret xchg jnp xchg sar lock (bad) (bad) xor fildl test mov sub call inc int3 ss mov lods shll lock cmp pop jb pop push xchg jecxz mov adc dec ds aad call cmp cmc and int3 nop fnstsw mov mov and sbb lcall jns push (bad) pop lcall add ja mov mov push xchg daa mov lods jnp mov out or lcall mov shrl lock shrb push inc mov aad or in (bad) push lea push or sarl mov rcl lds push jns es dec add xchg test mov movsb frstor cld leave mov mov mov mov xor arpl rol int3 jl pusha xchg cmpsb xchg (bad) mull (bad) mov in xchg jo mov mov pop mov jno add lret sub idivb popa aad dec dec sbb cmc fwait inc sbb sti fwait add add cmp (bad) lods push mov andl jmp pop xchg or ficomp lods sti mov push mov (bad) in adc dec ret (bad) ror pop lret fnstcw xchg or cmp or or fcomi sbb aam outsl xor xchg pop outsl lods xchg or fidiv test cld lea xor mov mov xchg pushf lods mov out (bad) mov push and pop clc ja cli inc sti xor std cmp cld daa (bad) pop mov sbb dec jp std bound aas xchg popa mov pop mov pop js dec in add pop test push mov add jge pop sub scas loope test pmaxsw xchg add or outsb in sbb in dec mov add or push mov adc push mov push sti test repz jnp daa cmpsb pop stc imul dec cmp (bad) fs lods push xchg sbb hlt out jo add ljmp (bad) mov fsts mov shrb dec xchg xchg xor mov jmp icebp push push popf clc adc push mov dec sbb mov int push ljmp mov cmp fldl add adc and mov add mov nop xor fst arpl and cmp lock jle je ja or lods add mov cmpxchg inc xchg pop push sbb xor sbb ds testb cmp xchg out xchg or ljmp (bad) out push mov loop mov (bad) pop cmc movsl sub pop inc ficompl xchg cmpsb je push mov xchg mov mov popf out cmp jp add mov aaa pop scas lea mov (bad) mov je mov pop outsl ljmp mov xchg div lock xchg mov xchg int and mov fdivrl outsb out divl cmp sub jo sti aam or sub ljmp jne and sarl sbb push movsb pop or xchg mov pop push push outsb imul icebp cmp outsb in lds inc xchg push xchg data16 imul mov add add add pop rcrb and movb sbb dec jg mov (bad) aam mov test (bad) lea adc test sub insb lock dec mov int3 sbb roll xchg or in dec scas fsubrs dec mov push add pop sub in movsl dec mov sub jne inc test aam stos mov add aas out decb enter push xchg jge sti (bad) mov sbb cmp ds lock aas data16 test mov sbb dec lahf insl cmp jecxz cwtl (bad) dec mov add dec inc cmpl add add push test shrb pop (bad) and pop mov ds inc cmp add decl jp scas fucom xor cmp int mov popa call add mov adc dec (bad) enter xlat adc push cs jge mov sarb (bad) jbe shrb mov add or push nop fs xorb mov notl (bad) mov push movl aad mov cmp les lret insl jmp pop mov popa add cmpsb (bad) int3 pand sub dec sbb ljmp dec and pushf add ss pop jo push jg leave fmuls lds dec rcrl sar or repz cmp std jmp outsb scas jb cwtl scas test jp and les fisubl push (bad) xor (bad) outsb sbb mov cmp enter add add add add and adc fdivr xchg push adcb fcmove fisub mov jmp mov inc jmp add into adc scas jnp lahf aad jmp adc lods push leave scas sub roll xchg imul and cmpl adc lret faddl popf push jo fs xchg mov cmpsb movsl jecxz cmpsb mulb adcl outsl jecxz xchg mov dec test lahf add xor in (bad) pusha fidivr lods push pusha cli mov pushf js sub mov mov add sbb inc sbb movsb pop stos dec mov int3 jns or ret fcomp cmc rorb test xchg inc andb dec popa orl pushf idivb rolb les popf dec stos enter cwtl in inc mov jne cmpsl pusha or mov xorl sub es pusha dec loope mov cmp and mov xchg scas add rorl ljmp sub cmp ret out jg xor in insb fmulp (bad) lahf sbb lea scas or or cltd jb xchg mov sub dec xor mov jmp pop fmull es sbb hlt bound or in add add lea ja or mov sub mov stos push jmp mov dec sub sub sbb mov add fmull outsb ja sbb in je or jge sub cli addr16 xchg dec mov out les int outsl test out add add subl mov mov sbb (bad) jbe insl xchg cmp loope adc mov stos and sub lds lret pop mov sub gs inc cmp inc lea mov (bad) xor daa test std notb test jo mov test add add push xchg sub jecxz push or cwtl sub pop fs shlb mov loop pop xchg lret mov push adc or pop dec jno sbb loop xor (bad) lds or (bad) mov (bad) cs or fldenv enter in pop pop dec mov add add and sbb arpl mov and stos aas xor adc in adc pop pop js jmp ret inc dec aam ret fdivs test sti dec mov std pop sub loop pop mov insb daa sbb mov mov test dec ja push enter adc push push lock ja jmp add outsb out clc (bad) push aam mov xchg and or pop and ret sub (bad) rcl cltd movsl adc lea xor and push xor cltd cmp cmp lret (bad) icebp xchg lock rcll (bad) mov fadds push cltd inc xchg or xchg xor scas push in or out sbb mov xchg jmp scas ret mov pusha mov cmp jo fistpl out push xor imul cmpsb (bad) xor mov mov pop es adc mov fs scas shll js es pop sar mov push cmpsb jl inc pushf dec insl mov cmp pop xor cwtl mov adc jno xchg popf add mov jbe je push aas mov mov sub xchg fdivp enter cwtl and jbe or pop das out sub add mov mov mov sub push lds push dec add add push adc daa in mov stos icebp lods movlps fcompl ret testb jge ret out dec cmp mov (bad) sub sub adc lock shll test ret jp test pop adc in add into loope pop sbbb jbe das push sbb inc xchg cmp add add call lret push test test out push cld ret ret cwtl sbb daa jno adc mov inc ret cmp negb test jo in pop cmc shrl xchg cmc lcall hlt fmull inc (bad) push push or popa test pushf aad and and xlat lods pop xchg mov mov pop jbe lea repz lock ljmp ret lds shlb jmp or pop xchg cmp inc ret push push inc inc inc mov mov mov call sub add aaa inc mov mov add adc lret (bad) rcrl inc xorb pusha cwtl inc inc cmp mov and push dec je mov mov cld mov mov xor fisubrl jnp xor dec lods cmp mov clc sub out pop outsb scas les xor js add js pop in (bad) adc push xor cmp xchg adc sub add and fisubr xchg loop popf pop hlt jmp mov mov inc out push and test loop cmc cli ja test daa pop sbb loopne push jnp push dec hlt and add into lods add add jns jo bound bound push int3 (bad) lods test outsb dec (bad) jle imul (bad) and (bad) jecxz or imul jge int or mov mov inc sbb pop adc dec cs inc cmp out popf cmc sub aaa aas (bad) adc add add xchg mov (bad) iret mov sub push fcoml (bad) std sub sbb popf mov add jb xchg mov inc xorl ss test idiv shrb stc push lcall sub jge cmpb and sbb add inc xchg enter xchg or dec ss adc (bad) pop repnz jl mov divb lcall xchg xchg jbe,pt clc jg jg,pn jp xchg and shlb pushf xor and and loopne mov mov sub punpckhdq cmpsl dec mov data16 cmp loopne pop (bad) lea pop in jp int sub iret adc or adc adc or rorb std sub cmp icebp mov ds jo inc subl insb mov sub or test push inc in les xor mov clc (bad) mov mov push jns add dec cmpl pop inc iret xor or fwait cltd jecxz enter cmpsb inc stos mov jle xor ret sub enter add push sbb jmp add clc push cld jne enter dec and xchg add jno mov mov inc pop dec je push ljmp add ds xorb xchg add mov pop pop sti push negl mov js cld jmp inc divb adc push inc mov insl push lods pop fs cmp xor pop dec pop jae dec or test stc push adc lahf mov sbb fisttp xlat xor idivb test inc pop ss mov sbb or or sbb jle jge mov sub push pop mov jl and push mov xor sbb jmp daa pop push js in jg into ds push lods jae out and xor imul cmp pop stc inc fstpl push sbb jnp rorl ret scas lock inc jns xor fildll add jbe aaa add mov ss aaa jns sbb pop int3 adc push inc (bad) in ret push popf xchg dec cmc cmp or add add cmp mov (bad) imul fs push insl xchg lret js scas xlat in mov inc outsl decb mov jo push dec divb mov in jb inc (bad) call ret xchg cli mov popa xchg outsl test xchg cmpsb jg loope lret lret mov pushf or add sbb fwait int daa or or jmp icebp jno (bad) xchg adc roll add adc and sub iret mov test xchg mov xchg mov data16 fist repnz xchg pushf test imul fidiv pop popl add add mov ret out insb jge test inc cmp insb (bad) inc mov add test or aaa cmpsl std xchg ret mulb mov or icebp sub adc pusha mov movsb jp lret loopne mov adc gs sub or jge pusha (bad) or ret xchg lock add inc cld dec and ror mov test popa cs in cld jae mov aad inc cmp push mov or test mov in int3 lcall aaa xlat mov in adc sarl push dec call cmc xor lods dec sub add mov inc outsl and (bad) repnz mov pushf and lds pop push syscall stos push (bad) sub pop test xchg jo adc (bad) mov sbb out negl jnp cs in cmc and (bad) imul cmp imulb fisubr xlat repnz push add sub xor lods xchg or add mov clc aaa xor xchg or add mov dec outsb orl aaa pop push out mov sbb or test fistl ret xor jg scas and cmpsl adc pop mov dec inc js dec and cltd and iret les xchg sti aas sarb mov es sbb dec push dec fldcw mov xor dec jl test call push jne movhps int jmp xchg pop push dec xchg push sahf dec dec mov sbb cmp add fwait insl andl push iret (bad) mov or out rolb clc mov xchg sub sbb cmpsb loop pop std and stc jle (bad) mov test js dec fcompl in pop or cmp scas stos jmp aad sub add stc iret out stos xor add fstpt popf push push or inc push or popf sbb repz les cmp stos imul inc lret cwtl roll pop or loope mov add adc add add repnz insb cmp sub jle xchg push jl mov cmp add mov cmpsl (bad) pop and movsl inc adc cmpsl fsubs repz fidivrl and je and cmp and mov popa jmp sbb jnp rcr mov and rcrb pop sub jne push lock (bad) add mov add sbb xchg push xchg loopne and test dec out pop or ret dec out decl scas cmc cmp ds movsb inc les mov cmp je mov outsl dec sbb js mov subl xlat in xor outsl aam (bad) xor push fnstsw inc call add add xor int cmpsl sub push adc fild insl fnstsw stos shr les lods push dec lret or cmp dec fdivl fstpl (bad) push xor aas cmpsb cltd mov mov inc repz in dec push fcompl add cmp fisub push (bad) cwtl adc add add fnstsw sub ja scas std jo leave fistpl pop lods imulb hlt xchg outsb mov xchg xchg push adc in out cwtl std movsl arpl jl add in jo inc pop pop out mov outsl jmp pop ja sahf push lods pop movsb mov (bad) pop int3 sbbl push xchg mov pop add push scas cmpsb inc inc push jno inc movsb jne andb int aad (bad) in cmc fidivl incl xor mov inc div sub test jge ret jg out out push scas cmpsl pop fistpl lock in mov push dec push lcall dec mov adc rorb inc stos rolb add lret pusha mov outsb and xchg into mov repnz sub push arpl fcomps xchg insb pop sahf xlat pop inc add test not jo in aam xlat and mov jecxz inc je or ljmp push push or pop and ret pushf fmuls shr cs dec rolb add add shrl nop jbe sbb xor or cltd sbb pop shrb xchg mov dec adc addr16 aam jge jmp push xor xchg movsl xchg push pop push les (bad) ja pop call pusha add or fwait in pop sahf dec xor jns jbe or clc lcall add add in jae,pt sbb mov fcoms std cwtl push pop gs inc inc (bad) roll sbb mov mov sbbl mov lods popa fmuls lods (bad) aaa add mov xchg inc clc in push mov jbe xor fisttpl arpl push and loope add outsl lods stos and clc mov (bad) cmpb xor sub movsb stos or sbb (bad) xor sahf fiadd cmp lock test mov mov ds jne pop (bad) negl loopne inc push in add add iret inc pop xor daa cwtl push pop daa lods add (bad) lea addr16 data16 popf lock clc add lret mov (bad) cmp inc inc dec sub push es (bad) popf out push lahf (bad) jmp mov xchg mov pop test rcl add jge imul add add mov or call es push mov mul lods ret and pop arpl mov aam aad cwtl mull pop inc (bad) das fbstp sti ror xchg mov ss pushl mov sub xchg dec test aas stos movsl ds cmp or add sbb inc insl shrl and lds inc or pushf cld insl xor pop inc scas xchg or jno adc aaa jns or cmpsb or jge stc es rcrb (bad) movsb sbb mov jne dec jbe pop dec xorl js gs mov add stc ror sbb mov push nop test dec add add wbinvd jb es lock shll and add xor test movl loope aaa or push mov les stc xor add pusha repnz loop fcoms mov add jae out jle,pt (bad) xchg push std mov and (bad) push cmpsb add stos dec mov leave mov data16 push or (bad) or (bad) lahf xlat jno movsb pop add mov mov pop lods minps and fistpll mov rcr xlat or mov xchg aas or jmp push add fild xchg or neg lret push cmp into int3 pop imul in mov popa fmuls push and sbb stos aaa xlat adc xor adc mov sub adc and push insl idivl ret out pop test mov push mov fisttp addl aam sbb mov xlat movsl cld fmul jmp fmuls pop xor jnp inc rcll xor std cmpsb pop xchg fdivr adc lret pop fs pop xor insb xor jae pop jo and or adc out pop adc xchg (bad) std xor lea mov push cmovne popa dec je xor int lret out sub dec loope cmp inc add push fmul push xchg cli test xor int scas jecxz insb or xor jo cmp icebp outsl repnz add fwait cld adc sbb add sub movl add out int3 mov mov push std jo dec les test mov push arpl cli fwait sub cwtl fmull lock mov xchg push out dec mov rclb outsb push sbb or inc scas movsb xchg test mov je test sbb aad xchg xchg inc add das rolb cltd call inc aam ja jo in mov adc sbb lcall mov aaa xchg lret pop (bad) outsl lods jp cmc divl lret sub out fildl sbb xchg repnz mov sbb daa test loopne cmp ficom sub addr16 jb pop add or xlat aaa cmp pop xchg and movsb fcompl ret pop pop rcll push aad or xchg mov fstps mov mov add and daa out cwtl rcrl sub fdiv push cmp (bad) sbb push cmp pop sub fildl fstl mov lret cld jns enter dec inc das vpaddsb xchg movsb mov ret push fiadd jecxz xchg jle mov mov push ret jnp mov xor lods ret adc sbb test negl test mov add sti add adc pop pop adc (bad) dec mov sub jle mov (bad) lcall fbstp fwait dec scas jnp dec loop jnp mov jmp and sbb xor mov and nop cmc arpl mov jnp xchg mov pop push fdivs add out clc cmp add adc push push dec inc push mov lret jl push cmp stc cltd leave cli scas nop adc inc (bad) ficoml mov out mov push mov call es out add sbb xor cmp lcall ficomp adc (bad) push lods jp jnp add lret push pushf pop icebp test (bad) (bad) jb enter mov cmp cld mov incl mov mulb mov out inc mov int pushl sub adc movsb dec stos ret pushf lods sub lods push (bad) jge and cmc mov jnp addb cmp rolb sbb sub repnz lods mov mov sbb in and icebp icebp xchg popa cmpsb (bad) and bound lret repnz popa aad xchg jle adc xor rcrb jecxz jle and or (bad) jmp pop xor add mov add in jle es sub iret icebp or stos insb mov mov aaa cltd mov push lods cwtl xchg jecxz xor mov push (bad) in pushf rolb push add jo out inc cmp in pop xchg fisttpll push fcoms aas aam lods or adc fildll popa sbb cltd and iret lods loope mov sahf fild add add pop add jbe inc mov add mov mov mov xchg lea xchg mov inc pop aas mov mov stc xor xor je mov rorl andl inc in es lret in mov mov add dec cmpsb or aas icebp in lret jno aas lock pop xorl jae and pushf data16 test (bad) jmp (bad) sbb dec mov pop add lea dec clc pop comiss mov cmp adc mov sar jecxz faddp xchg ds mov adc (bad) out and int3 bound adcl nop sub xchg mov sbb mov mov ret aas aaa pop dec mov inc adc scas and dec repz sbb push mov jge je insl pop fs mov add add (bad) mov (bad) adc cld xlat ficom ret icebp mov aas movsb sbbl mov insb (bad) or pusha jo iret outsl out or stc mov fsts movsl jbe cmp sub lods ud2 pop loop pop mov adc xor or cmc xchg mov mov mov mov loopne pop mov jmp pop les cmp mov dec aam dec lcall adc ds mov mov (bad) lock loop pop push mov sub cmpsl scas pop pop (bad) (bad) mov shr push repnz divl xchg fist xlat push xchg xor shld dec xchg icebp (bad) daa push mov scas lret popf inc cmc sub orl test in push js jle push repnz add hlt adc pop fsubrp psrlq stos jb repz cmpl sub jmp add mov mov xlat or int3 cmp adc add add mov dec mov dec (bad) test adc inc push mov pop out mov mov adc in mov pop mov jnp cli dec push inc sub imul out push fwait popf insl pop add pushf (bad) rcrb aas ljmp add mov push cmp in rcrl push imul mov out push (bad) clc divb inc enter sub divb inc sub inc lea add clc dec sub push sbb repz (bad) mov imul outsb mov jo mov pop repnz jle push add add std and jns test icebp jnp sbbl test inc jno cmp gs mov movsl imul lods fimul (bad) fmulp (bad) repnz leave (bad) hlt mov test adc cmp dec cmp les pushf fimull adc mov add sar xlat dec ja stos hlt (bad) jge pusha addr16 test idivb pusha mov in stos cmpsb repnz popf lock call out clc inc sub insl in int mov clc out int repz inc push clc in adc jno and mov cs clc cld lock push push push mov add sub xor or add (bad) nop dec cmp adcl lret test xchg xchg (bad) dec je mov jnp fildl cs mov icebp fucomip ret xor inc fsub lcall mov (bad) and xchg dec and mov rcrl mov testl add pop out add and testl outsb add and mov adc std push inc cmp scas sbb scas mov repz xor xor pop jae clc mov pop adc mov nop ss jno daa adc and adc in mov icebp mov add jge int3 sti xchg inc bnd fmul adc outsb imul (bad) push xor fwait xorl mov mov mov (bad) mov ret (bad) adc mov out cmp mov scas cmp sbb xor dec les daa dec xor les inc stc sbb fsub insl les sti push push push ret imul bound jg loope (bad) ret rol xchg dec stos add out xor mov loopne (bad) lret pop sbb ret movsb arpl movsb add popa pop xchg jns icebp outsb mov pop lds xchg mov sbb xchg jge (bad) xchg lods sbb cmc mov xchg dec pop adc mov les js or insl adc call in mov and rcrb and xlat lock add xchg hlt outsl and add adc add add add pop adc xchg xor adc mov rclb pop push shl stos mov lea fcoms mov jmp push pop pop js (bad) xor cs scas and mov (bad) mov push push or push sbb add stos pop pushf add cmp insl addb sub adc inc add fwait add icebp mov ja adc xor mov inc dec aaa jp sbb mov dec inc and ficoml stos sub cs or aam (bad) (bad) fiaddl sub cmovge loopne lret push and lcall loopne rorb cmp iret daa xchg in out ljmp popf mov push add add push pop fisub mov lcall insb pop (bad) sub push jle sahf imul and cmpsl nop nop loope repnz roll scas jae (bad) lock ja mov enter negl into shrl imul insl pop xchg mov mov aas sahf (bad) add dec ljmp loopne mov add and jae cltd dec repnz arpl push dec jge daa call sbb gs add mov mov cwtl or test lahf cmp bound push xor pop add jb les ljmp fwait mov movsl jecxz into push outsl push stos (bad) std lods loop jmp jns out sbb mov xor shrb mov mov add nop cmc lds jp add push mov in fimul xor jbe into cmp outsb loop push arpl and cld hlt or mov xchg in add push scas or imul insl pop xchg mov mov aas sahf (bad) dec ljmp loopne mov add and jae cltd dec repnz arpl push dec jge daa call sbb gs add mov mov cwtl or test lahf cmp bound add push xor pop add jb les ljmp fwait mov movsl jecxz into push outsl push stos (bad) std lods loop jmp jns out sbb mov xor shrb mov mov add nop cmc lds jp add push mov add add (bad) xor jbe into cmp outsb loop push arpl and cld hlt or mov in add push scas or imul insl pop xchg mov mov aas sahf (bad) dec ljmp loopne mov add and jae cltd dec repnz arpl push dec jge daa call sbb out out add mov incb es cmp dec push pop popa push mov mov mov movsl stos mov mov loopne in hlt cli add push adc xor push pop arpl ja test lods mov mov loop out idiv add add adc sbb ds dec push pop pop gs jb jg mov mov rol aam loope out cmc cld add movhps ds dec push pop pop imul xchg mov rol loopne in repz add or cs push pop arpl jp mov add add jecxz cmc incb adc and ds push pop arpl js test lods mov rol rcr loopne in hlt sti add unpckhps sub ss pop imul test mov rol aam loope out cmc cld add movhps sub aaa cmp pop gs jb jns xchg test mov ret (bad) fsub ljmp sbb and inc dec push pop pusha insw jae addb scas mov ret leave rcl fucom ljmp sbb sub ss pop imul test lods mov rol rcr loope out cmc sti add add unpckhps sub ss pop imul test lods mov rol rcr loope out hlt sti add push adc ss pop fs js test lods mov rol rcr loopne out hlt sti add push adc ss dec push push pop arpl js test add mov fnop out hlt sti add push adc xor push pop arpl ja test stos mov mov loopne in hlt cli add push adc and xor ds dec push pop pop gs jb addb lods mov ror aad loop out cmc cld add adc sbb and inc dec push pop pusha insw je addl mov fsubp jmp clc incb es cmp dec push pop popa push mov mov mov fucom ljmp sbb and inc dec push pop pusha insl je addl add rcl fucom jmp clc incb es cmp dec push pop pusha insl je orl ret xlat fucom ljmp sbb and inc dec push pop arpl jbe orl mov mov (bad) in repz add or cs add add dec push pop bound jbe orl mov mov (bad) in repnz incl or sbb daa sub dec push pop popa imul xchg popf mov mov loopne in repz add or cs push push pop fs ja test lods mov rolb (bad) int (bad) out hlt sti add push adc xor push pop arpl ja test stos mov mov loopne in repz add push adc xor push pop arpl jbe test lods add (bad) fsub jmp or pop push and xor ds dec add pop data16 jae addb scas mov ror aad loop out idiv add adc sbb ds dec push pop pop imul test mov rol aam loope out cmc cld add movhps sub ss pop imul test lods mov rol aam loope out cmc sti add unpckhps sub ss pop fs js test lods mov mov loopne in hlt cli add push adc and das ss dec add pop imul test mov ret (bad) fucom ljmp sbb and inc dec push pop pop data16 add insl je addl ret aad jecxz lock add adc sbb cmp inc dec push pop pusha insw je addl ret leave rcl fucom ljmp sbb and inc dec push pop pusha insw jae addb scas mov ret aad loop lock add std add adc push and xor ds dec push pop pop data16 jae addb scas mov ret aad loop out idiv add adc sbb aas inc dec push pop pop data16 jae addb scas mov ror aad loop icebp clc incl es cmp dec push pop popa outsb je addl mov mov mov fucom ljmp sbb and inc dec push pop pusha insl je addl ret (bad) fucom ljmp sbb and inc dec push pop pusha insw jae addb scas mov ret (bad) fsub jmp or add push and xor ds dec push pop pop data16 jae addb scas mov ror aad loop out idiv add adc sbb cmp pop gs jb addb lods mov rol aad loop out cmc cld add movhps push pop imul test mov rol add fnclex jmp or push sbb cmp pop imul test mov rol aam loope out hlt sti add push adc ss pop fs ja test lods mov mov loopne in repz add push adc and cs push pop add jo jge mov mov mov (bad) in repz add or sub dec push pop bound jne (bad) mov mov mov fsubp jmp clc incl es cmp push pop bound jne orl mov mov out clc add adc dec push pop arpl xchg mov out hlt cli add push adc and sub ss dec push push pop arpl jbe orl mov mov (bad) in repnz incl or sbb es cmp dec push pop pusha insl je addl ret add enter jecxz lock add adc sbb ds dec push pop pop imul test mov mov loopne in repz add or cs inc dec dec push pop bound jne mov mov mov loopne in repz add or cs inc dec dec push add imul xchg popf mov (bad) lret fsubp jmp clc incb adc push and inc dec push pop pusha insw jae addb scas mov ret aad loop out idiv add adc sbb sub ss pop fs ja test add int fiaddl add loope out cmc sti add unpckhps sub ss dec push push pop arpl ja test stos mov mov (bad) in repnz incl or sbb es dec push pop popa push mov mov mov (bad) in repz add or sub dec push pop popa push add add jl mov mov mov fsubp jmp clc incb es cmp dec dec push pop bound jbe orl mov mov (bad) in repz add or cs inc dec dec push pop bound jbe (bad) mov mov mov fucom ljmp add add incb adc pop es cmp dec push pop pusha insl jae addb scas mov ror aad loop out cmc cld add movhps sub ss pop imul test lods mov mov in repnz incl es cmp dec push pop popa push add mov mov rol aam loop out cmc cld add adc push and xor ds dec push pop pusha insl je addl (bad) lret fsubp in repnz incl or sbb es dec push pop popa push mov scas mov ret leave rolb fcomp in repnz incl or add add add and sub dec push pop bound jne (bad) mov mov mov fucom jmp clc incb and inc dec push pop pusha insl je orl ret (bad) fucom ljmp sbb ds dec push pop pop gs jae addl add scas mov ret lret fucom ljmp sbb and inc dec push pop pusha insw jae addb scas mov ret aad loop out idiv add adc push and xor ds dec push pop pop gs jb addb lods mov rol aam loop out cmc cld add movhps sub add add pop imul test mov rol rcr loope out hlt sti add push adc xor push pop arpl jbe orl mov mov loopne in repz add or cs inc add pop insw jae addb scas mov roll add into aad loop out idiv add adc sbb ds dec push pop pop imul test mov rol rcr loope out hlt sti add push adc ss dec push push pop arpl ja test stos mov mov (bad) in repz add or sub dec add push pop popa push mov mov mov fsubp jmp clc incb and inc dec push pop pusha insw jae addb scas mov ret (bad) fsub jmp or pop sbb ds dec push pop pop mov mov mov loopne add hlt add add add push adc ss pop imul test mov rol rcr loopne out hlt sti add push adc xor push pop arpl ja test stos mov mov loopne in repz add or cs inc dec dec push pop bound jbe addl add stos mov mov (bad) in repnz incl or sbb es dec push pop popa outsb je orl ret leave rcl fucom ljmp sbb and inc dec push pop pusha insl je addl lret fucom ljmp sbb add add daa cs inc dec dec push pop arpl ja test stos mov mov (bad) in repnz add or sub dec push pop popa push orl mov mov (bad) in repz add or cs inc inc dec push pop bound jne (bad) mov add add lret fsubp jmp clc incl es dec push pop popa outsb je (bad) mov scas mov ret leave rcl fucom ljmp pop pop and inc dec push pop pusha insw jae addb scas mov ret xlat fsubp jmp clc incb es add cmp dec push pop pusha outsb je orl ret leave rcl fucom ljmp pop push and xor ds dec push pop pop data16 jae addb scas mov ror aad loop out cmc cld add movhps sub ss pop imul test add add rol aam loope out idiv add adc sbb cmp pop imul test lods mov rol rcr loopne in hlt cli add push adc xor push pop arpl ja test stos mov mov (bad) in repz push adc and cs push pop arpl jbe orl mov mov (bad) in repz add or cs inc dec dec push pop bound jne (bad) mov mov mov fsubp jmp clc incl es cmp dec push pop pusha outsb je orl ret (bad) faddl add jmp or sbb and inc dec push pop pop data16 jae addb mov mov fsubp in repz add push adc aaa add inc dec push pop pusha outsb je (bad) mov mov mov fsubp in repnz incl or xor aas inc dec push pop pusha insw jae add add xchg scas mov ret (bad) fsub jmp or pop push and inc dec push pop pop data16 jae addb lods mov ror aad loop out cmc cld add adc sbb cmp pop imul mov scas mov ret lret fsubp in repz add or aaa aas dec push pop outsl js xchg scas mov ror aad loop out idiv add movhps sub ss pop fs jns add stos mov mov fsubp in repnz add or xor cmp push mov mov mov add (bad) lret fsubp jmp clc incb es cmp dec push pop pusha insw jae addb scas mov ror aad loop out cmc cld add movhps sub ss dec push push pop imul test stos mov mov (bad) in repz add or sub add ret (bad) fsub jmp or pop sbb ds dec push pop pop imul test lods mov mov (bad) in repz add or sub dec push pop popa push mov mov mov (bad) in repz add or sub add inc inc dec push pop popa outsb je (bad) mov scas mov ret leave iret (bad) fsub jmp or pop sbb cmp inc dec push pop pop data16 jb jg mov mov rol aam loope out hlt sti add push adc and cs push pop bound jne (bad) mov scas mov ret leave rcl fucom ljmp pop push and xor ds dec push pop pop imul test mov mov (bad) in repz add or sub dec push pop popa push mov scas mov rcl fsubp jmp clc incb es dec push add pop popa outsb je orl ret (bad) fsub jmp or pop sbb ds dec push pop pop imul test mov mov loopne in hlt cli add adc sbb aas inc dec push pop pop gs jb jg mov mov add enter add loop out cmc cld add unpckhps sub ss pop fs ja test stos mov mov (bad) in repnz incl or sbb es dec push pop pusha insl je orl ret (bad) fsub in repnz incl or sbb es cmp dec push pop pusha data16 add jp xchg lods mov ror aad loope out cmc sti add unpckhps sub xor push pop arpl jbe orl mov mov fsubp ljmp sbb and inc dec push pop pop data16 jae addb lods mov rol aam loope out add add sti add push adc xor push pop arpl jno jle mov mov mov loopne in repz add or sub dec push pop popa push mov mov mov fucom ljmp pop and xor cmp pop arpl ja add mov mov (bad) lret (bad) in repz add or sub dec push pop popa push mov scas mov ret aad loop out cmc cld add unpckhps cmp pop arpl ja orl mov mov fsubp jmp clc incl add add adc pop and inc dec push pop pusha insl je addl ror aad loop out cmc cld add movhps sub ss dec push push pop arpl ja test stos mov mov (bad) in add cli add push adc and cs inc dec push push pop imul test add mov mov (bad) in repz incl or sbb es dec push pop popa outsb je orl ret aad loop out cmc cld add movhps sub aaa cmp pop fs ja test stos mov mov (bad) in repnz incl sbb es cmp dec push pop pusha insw add (bad) mov scas mov ret leave rcl fucom ljmp pop push and xor inc inc dec push pop bound jne (bad) mov mov ret (bad) repnz add das ss pusha outsb je mov mov rol rcr loopne in hlt cli add push adc and cs push pop bound jbe orl mov mov fsubp jmp clc incb and inc dec push pop pusha insw jae addl ret aad loop out idiv add adc sbb cmp add push ja test stos mov mov (bad) in repz add or sub dec push pop popa push mov scas mov ret (bad) fsub jmp or pop push add sub cmp dec push pop pusha insw jae addb mov mov fiadd add add jmp clc incb and inc dec push pop pusha insw jae addb scas mov ror aad loop out cmc sti add unpckhps sub ss dec push push pop arpl jbe orl mov mov (bad) in repnz incl or sbb es dec push pop pusha add insl je addl ror aad loop out idiv add adc sbb cmp pop imul test stos mov mov (bad) in repz incl or sbb daa sub dec push pop popa push orl mov mov loopne in repz add or cs inc dec dec push pop bound jbe orl mov mov fsubp ljmp sbb and inc dec push pop pop data16 jae addb scas mov ror aad loop out cmc cld add movhps sub ss dec push push pop arpl ja add jge mov mov mov (bad) in repz add or sub jno jge mov test vaddsubps fsub out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl and xor ds dec push push pop pusha data16 jno jl mov test vaddsubps fndisi(8087 out repnz add push adc push and das xor push push pop popa insl jae jle mov stos mov mov xlat fucom call add unpckhps add and inc inc dec push pop pop arpl jae jg mov lods add into aam (bad) ljmp adc sbb cmp inc dec dec push pop pop imul addl mov aad loopne in icebp idiv add or sub xor aas inc add push pop popa data16 jb jge mov test (bad) lret rcl fsub out repnz std add push adc pop and das xor push pop bound jb jge mov stos scas mov rol rcl fsub out repnz incb or adc pop and xor push push pop bound jb add mov stos mov mov xlat fsub call add unpcklps pop and inc inc dec push push pop bound je jg mov stos mov mov fcomp jecxz out repz incl and sub aaa cmp add push pop pop fs jne addb add ret enter (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa push test cmpsb stos mov mov add add add fcomp jecxz out hlt cli incl and sub aaa cmp dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub cmp pop pop gs jbe addl mov aam loopne jmp idiv add pop or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) aad loopne in icebp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) mov test (bad) aad loope in icebp add std add push adc pop and add xor push push pop bound jb jge mov lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add and sub aaa cmp pop add imul nop xchg pushf mov mov (bad) in lock sti add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock add or pop sbb cmp inc dec dec push pop pop imul addl add mov lods mov mov fcmovu in lock add or sbb cmp inc dec dec push pop pusha imul addl sahf movsb test (bad) fndisi(8087 out icebp idiv add or sub xor push pop pusha imul xchg scas mov (bad) into add add fsubp out idiv push or xor inc dec push pop bound jl mov stos mov mov fcomp jecxz out repz incl unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub out repz incb or adc pop and das xor push push pop add insl jae jle mov stos mov mov xlat fsub out repnz std add push adc pop and das xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) (bad) fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jg mov stos mov mov fcomp jecxz out cmc cli add or push sbb daa sub dec dec push pop pop imul addl scas mov mov fneni(8087 out icebp idiv add or sub xor push push pop popa insl jb jge mov stos mov mov xlat fucom call incl and sub dec dec push pop pop gs jbe addl mov mov fneni(8087 out icebp idiv add or das xor push push pop bound jae jle mov stos mov mov fcomp jecxz add cmc cli add or push sbb daa sub dec dec push pop pusha imul addl mov aad loope in add icebp idiv add or sub xor push push pop popa insl jb jle mov stos mov mov xlat fsub out repnz std add push adc pop and das xor push push pop popa insl jb jge mov stos mov mov xlat fsub out repnz std add push adc add pop and das xor push push pop popa insb jb jge mov stos mov mov (bad) fsub out repnz std add push adc push and das xor push data16 jno jl mov test (bad) fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push pop add push test mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp in out hlt cli add and sub aaa cmp pop pop imul add add mov mov fcomp jecxz out hlt stc incl and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt stc incl and sub aaa cmp pop pop imul xchg cwtl popf mov add mov mov fnop in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) jmp idiv add or pop sbb sub dec dec push pop pusha imul addl mov aam add in lock sti add or pop sbb daa sub dec dec push pop pop fs jbe addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add add adc sbb daa sub aaa cmp pop pop fs jne addb cmpsl lods mov ret leave into aam (bad) ljmp adc sbb sub dec dec push pop pop gs jne addb cmpsl lods mov mov fnop in lock add or pop sbb cmp ds dec dec push pop pop imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov clc incb or adc push and xor cmp pop pop bound jb jl add mov mov aad (bad) jmp add unpcklps push and xor cmp pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 jmp add push adc and sub aaa cmp inc dec push push pop bound jae jg mov add lahf movsb test (bad) leave add aam (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov (bad) fndisi(8087 out lock add pop and das xor push push pop pop fs je jg mov add ret enter fucom call add or pop sbb daa sub cmp push pop arpl jb jge xchg cmpsl lods mov mov aad loopne ljmp push adc push and sub dec dec push pop pop bound jb jl xchg stos mov mov rol iret aad (bad) jmp add push adc and aas inc dec dec push pop pop imul mov lods mov mov (bad) fsub out lock add sbb sub xor dec push pop pop imul lea lods mov add add fneni(8087 in lock cli incl unpcklps push and xor cmp pop pop bound jb jl xchg stos mov mov aam fsubp jmp add or daa sub ss inc dec push push pop pusha imul jg mov test add ret rcl fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge xchg cmpsb lods mov mov aad (bad) jmp add push adc sbb aaa cmp dec push push pop popa imul addb movsb test (bad) leave into aam fsubp call add or pop sbb sub cmp dec push push pop pusha gs je jg mov test mov mov xlat fsub out icebp idiv add pop and das xor ds dec dec push pop pop arpl jb jge xchg stos mov mov add add fcmovu in out hlt stc incb or adc sbb aaa cmp inc dec push push pop popa imul addb movsb test ret enter fucom out repnz add or push sbb and aas inc dec dec push pop pop add je jg mov test mov mov add fsub out icebp idiv add pop and das xor ds dec dec push pop pop bound jb jg mov test mov mov xlat fsub out icebp idiv add pop and das xor ds dec dec push pop pop bound jb jge xchg stos mov mov aad add in out hlt stc incb or adc sbb aaa cmp inc dec push push pop pusha imul addb movsb stos scas mov mov fcomp jecxz in repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov (bad) fneni(8087 out lock cli incl pop and xor ds dec dec push pop pop bound jno jl xchg cmpsl lods mov mov aad loopne ljmp push adc push and sub inc dec push push pop popa imul addl mov rol rcl fnop in add ljmp push adc push and sub inc dec push push pop popa imul addl mov mov aad (bad) ljmp push adc sbb aaa cmp push pop popa imul addb movsl stos scas mov mov (bad) jecxz add repz std add or daa sub ss inc dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp add add sti add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov add xlat fsub out icebp testb add add pop and aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor ds dec dec push push pop bound jno jl xchg cmpsb stos mov mov aam (bad) jmp add add or daa sub inc dec push push pop pusha imul addb movsb stos scas mov mov fcomp jecxz in repnz add or pop sbb sub cmp dec push push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add add and inc inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp call add or daa sub inc dec dec push pop pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb and add add xor dec push pop pop gs je jg mov test ret leave into rcr fsubp jmp add or sub inc dec push push pop popa insb jno jl xchg stos mov mov aad loopne jmp cmc sti add pop and add aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or pop sbb daa sub cmp inc dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb mov stos mov mov aad loopne ljmp adc das xor dec push pop pop imul mov scas mov mov fcomp loop in repnz add or daa sub inc dec push push add insb jno jnp xchg cmpsb stos mov mov aad (bad) ljmp unpckhps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop pusha imul add add jnp test movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul add addb movsb stos scas mov mov (bad) in out repz incb or adc push and xor ds dec dec push pop pop arpl jb jns orl test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg add mov stos mov mov aad (bad) ljmp unpcklps pop and cs aas inc dec dec push pop pop imul mov scas mov mov (bad) in out hlt stc incb or adc push and sub dec dec push pop pop arpl jb jge xchg pushf mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop fs je jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg cmpsb add add rol rcl fndisi(8087 out lock add and aas inc dec dec push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or daa sub inc dec push push pop popa insb jno jl xchg stos mov add rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor cmp pop pop bound jb jge xchg cmpsl lods mov mov add int3 rcl fndisi(8087 out lock add or adc xor dec push push pop pusha imul addb movsl stos mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov add add xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop fs je jg mov stos scas mov mov (bad) jecxz out cmc cli incl pop and das xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat faddl add out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) jecxz out repz std add or daa sub inc dec push push pop popa imul jl xchg stos mov mov aad loopne add ljmp unpcklps pop and cs ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repnz add add std add or xor cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb or adc push and xor cmp pop pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pop imul mov mov mov fcomp jecxz in repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpcklps sbb and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb add sub xor push push pop pop gs je jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add unpcklps push and xor add ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add or push sbb sub xor push push add imul addb movsl stos scas mov mov (bad) in out repz incb or adc push and xor add add inc dec dec push pop pop bound jno jl mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aam fsubp jmp add or sub inc add add pop add insb jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha gs jne jg mov test ret enter fsub out icebp idiv add or push sbb and aas inc dec add pop pop imul lea lods mov mov (bad) fneni(8087 in lock cli incl unpcklps pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov (bad) jecxz out repz std add or sub cmp inc dec push pop imul add (bad) mov mov ror fcomp out cmc std add adc and cs pop pop arpl jb jge mov cmpsl lods mov mov (bad) fndisi(8087 out in icebp idiv add or push sbb sub xor dec push pop pop imul mov mov mov rcr fucom out repnz add or push sbb sub xor dec push pop pop fs je jle mov test mov mov fcomp loop in repnz add or push sbb sub xor dec push pop pop imul mov scas mov mov add ret enter fucomp out repz std add or daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop add imul lea lods mov mov add add xlat fsub out icebp idiv add and aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add and xor ds dec dec push pop pop bound jb jl xchg stos mov mov (bad) fneni(8087 in add ljmp unpcklps pop and cs ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add add add pop and aas inc dec push push pop pusha gs je jg mov test mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop arpl jae jge add mov mov xlat fsub out icebp idiv add push or adc das xor aas inc dec dec push pop pop arpl jae jge xchg cmpsb lods mov mov aad (bad) ljmp unpcklps push and xor cmp push pop popa insb jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz std add pop or sub cmp dec push push pop pop imul mov lods mov mov (bad) fneni(8087 in lock sti add pop and xor ds dec dec push pop pop bound js xchg mov mov xlat fsub out in repz incb or add adc push and xor ds dec dec push pop pop imul mov scas mov mov fcmovu in out hlt stc incb or adc push and sub inc dec push push pop popa imul addb movsb stos scas mov mov fcomp loop in repnz add or pop sbb add add es cmp dec push push pop pop gs je jg mov test mov mov xlat fsub out icebp idiv add and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov aad loopne ljmp unpcklps push and add add xor ds dec dec push pop pop bound jb jl xchg scas mov mov add fucom call add or push sbb and sub inc dec push push pop popa imul addb movsb test ret enter fucom call add or pop sbb sub add sub dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out icebp idiv add or push sbb and inc inc dec dec push pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and sub add add inc dec dec push pop pop bound jb jl xchg stos mov mov aam fsubp jmp add push adc pop and aas inc dec dec push pop pusha gs jbe orl lret fsub jmp cmc cli incl push and xor inc dec dec push pop pop imul jns orl test mov mov (bad) fneni(8087 out lock cli incl push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aam fsubp jmp add or daa sub ss inc dec push push pop pusha gs jne add jg mov test ret enter fucom out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jb jge mov cmpsl lods mov mov aad loopne ljmp push adc push and sub inc dec dec push pop pop bound jno jl add add fwait mov mov aam (bad) jmp add pop and das xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) jmp add push adc sbb aaa cmp inc dec push push pop pusha imul jg add movsb test ret enter fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl push adc push and xor cmp push pop popa data16 jno jnp test nop xchg fwait mov mov rcr fsubp call add or pop sbb sub cmp dec dec push pop add push jne jg mov test ret enter fucom out icebp idiv add or push sbb and inc inc dec push push pop pusha gs jne jg mov add xchg lcall mov fcomp loop in repnz add or push sbb and aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor cmp push pop bound jno jl xchg add add mov mov (bad) jecxz out repz std add or and sub inc dec push push pop popa imul addb movsb stos scas mov mov fcomp loop in repnz add or push sbb sub cmp dec dec push pop pop imul mov popf mov mov xlat fsub out lock add pop and das xor ds dec dec push pop pop insb jno jnp xchg movsl stos mov mov xlat fsub out icebp idiv add and aas inc dec dec push pop pop arpl jae jge xchg add add (bad) lret rcl fnop in out hlt stc incb push adc sbb aaa cmp inc dec push push pop popa imul addb movsb test ret enter fucom call add or push sbb sub xor add pop pop gs je jle mov test add lods mov mov xlat fsub out icebp idiv add pop and das xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) jmp add push adc sbb aaa cmp inc dec push push pop pusha imul jg mov stos mov add add rcl fcmovu in out hlt stc incb or daa sub aaa cmp inc dec push push pop pusha gs jne jg mov test mov mov xlat fucom out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jb jge xchg stos mov add mov aad (bad) ljmp push adc sbb aaa cmp inc dec push push pop pusha imul jg mov test mov mov xlat fucom out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jb jge xchg stos mov mov rol rcl fcmovu in out hlt stc incb push adc sbb aaa cmp inc dec push push pop popa imul addb movsb test (bad) int3 rcl fsub out icebp idiv add or adc das xor aas inc dec dec push pop pusha imul xchg mov ror (bad) fsubp in add cmc cld add adc push and xor cmp pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli incl add or adc das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in repz std add or add pop sbb daa sub aaa cmp inc dec push push pop pusha imul jg mov test ret enter fucom call add or push sbb daa sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fucom call add or pop sbb and sub aaa cmp inc dec push push pop popa imul addb movsb test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test ret leave into rcr fiadd in out hlt stc incb or adc sbb add add add sub inc dec push push pop popa insb jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc pop and das xor aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fsub out icebp idiv add or adc das xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and add add inc dec push push pop pop fs je jg mov test mov mov xlat fucom out icebp idiv add or push add daa sub cmp dec push push pop popa imul addb movsb stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp add add push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad loopne ljmp push adc push and xor cmp add pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and sub dec dec push push pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor cmp pop add insb jb jl xchg stos mov add xlat fucom out icebp idiv add or push sbb and inc inc dec dec push pop pop imul nop xchg fwait mov mov aam fsubp jmp add or daa sub aaa cmp inc dec push push pop add add imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha add add jne addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz add hlt add incl unpcklps push and xor ds dec dec push pop pop bound add ja addl mov rcl fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul jns test mov mov xlat fucom out repnz add pop or daa sub ss inc dec push push pop pusha imul jg mov stos scas mov mov aam (bad) jmp add push adc sbb cmp push pop popa data16 jno add jnp xchg movsl stos mov mov aam (bad) jmp add push adc sbb aaa cmp push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) out icebp idiv add pop and aas inc dec dec push pop pop arpl jae jge add mov cmpsl lods mov mov (bad) fsub out icebp idiv add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add pop and cmp dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop pusha imul addb add scas mov mov (bad) jecxz out repz incb or adc pop and cs ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jae jge xchg add add mov (bad) fndisi(8087 out lock add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out icebp idiv add or adc xor dec push pop pop imul lea add lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out repnz add or push sbb sub cmp push pop pop imul mov scas mov mov xlat fucom out repnz add or pop sbb es cmp dec push push pop pop gs je jg mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop imul mov lods mov mov (bad) int3 rcl fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop imul mov lods mov mov add add add rcl fsub out icebp idiv add or push sbb sub xor push push pop pop fs addb movsb test add lret (bad) in lock add pop and aas inc dec dec push pop pop imul lea lods mov mov xlat fsub add out icebp idiv add or adc xor dec push pop pop imul mov scas mov mov fneni(8087 out icebp idiv add or pop sbb inc dec push pop pop imul addl mov aad (bad) ljmp sldt add adc push and xor cmp pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop bound jno jl xchg iret aam (bad) jmp add push adc push and sub add push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor add dec push pop pop imul mov scas mov mov fcomp loop in repnz add or push sbb sub xor push push pop pop fs je jg mov test ret enter fucom out repnz add or push sbb sub cmp dec push push add gs je jg mov test ret enter (bad) ljmp push adc push and sub inc dec push push pop popa data16 jno jnp test movsl stos mov mov aam fsubp jmp add or daa sub aaa cmp inc dec push push pop pusha add gs jne jg mov test ret leave into rcr fucom call add or push sbb sub cmp dec push push pop pop fs je jle mov test mov mov rcr fucom out repnz add or push sbb and aas inc dec dec push pop pop add add jae jle mov cmpsl lods mov mov (bad) fneni(8087 out lock cli incl push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp adc push and xor cmp pop pop bound jne jl xchg movsl stos mov mov aam (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa imul addb movsb test ret enter fsubp call add or pop sbb sub cmp dec push push pop pop gs je jg add mov mov xlat fsub out icebp testb add or push sbb sub cmp dec push push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jb jge add xchg lods mov mov aad loopne ljmp unpcklps push and xor dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and cs ds dec dec push pop pop bound jb jl xchg add xchg xchg pushf mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jno ja (bad) xchg stos mov mov aad (bad) ljmp unpcklps push and xor cmp push pop bound jno jl xchg add mov mov aam fsubp jmp add push adc sbb aaa cmp push pop popa imul addb movsb test ret leave into rcr fucom call add or daa sub cmp dec push push pop bound jno jl xchg add mov aam fsubp call add or daa sub aaa cmp inc dec push push pop pusha imul jg mov test ret enter fucom out repnz add or pop sbb sub cmp dec push push pop pop fs je jle mov add ret enter fucom out repnz add or daa sub aaa cmp push pop bound jb jle mov test mov rol rcl fndisi(8087 out icebp idiv add or push sbb es cmp dec push push pop pusha imul addb movsb test mov rcr fsubp call add or sub dec dec push pop pop arpl jae jle mov lods mov mov (bad) fneni(8087 out lock cli add pop and aas inc dec dec push pop popa imul addb mov mov int (bad) jecxz in repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb cmp pop pop bound jb jl xchg stos mov mov aad fneni(8087 in lock cli incl unpcklps pop and cs aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul mov scas mov rol iret aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fildl loope in icebp idiv add or adc xor dec push pop pop imul mov lods mov mov xlat fsub out add add idiv add or push sbb sub xor dec push pop pusha gs je jg mov test ret enter fucom call add or pop sbb es cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz add add or daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp idiv add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add add adc sbb and inc inc dec dec push pop pop data16 jno jl xchg stos mov mov aad (bad) jmp add push adc push and sub inc dec push push pop popa insb jno jl xchg stos add int3 rcl fndisi(8087 out lock sti add add adc das xor aas inc dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push push add and sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc push and sub dec dec push push pop bound jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps push and add add xor ds dec dec push pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 out in icebp idiv add or push sbb and inc inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or push sbb sub cmp dec push push pop pusha gs je jg mov test ret enter fucom call add or pop sbb es cmp dec push push pop bound jno jl xchg movsl stos mov mov aad (bad) ljmp push adc push and xor cmp add dec push push pop bound jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor ds dec add dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push add pop pop imul (bad) xchg lcall mov (bad) jecxz out repz incb or daa sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov fcmovu in out hlt stc incb or adc push and sub inc dec push push pop bound jno jl xchg movsl stos mov mov aam (bad) ljmp push adc push and sub dec dec push push pop bound add jno jl xchg movsl stos mov mov aam (bad) jmp add push adc push and sub dec dec push push pop bound jno jl xchg cmpsb lods mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pop imul add mov test mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop fs je jle mov (bad) xchg lcall mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa imul addb add test movsl stos scas mov mov (bad) jecxz out repz incb or daa sub inc dec push push pop popa imul addb movsb stos scas mov mov fcomp jecxz in repz std add or daa sub aaa cmp inc dec push push pop pusha gs jne jg mov add test ret enter (bad) jmp add unpcklps push and cs ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov add popf mov mov rcr fucom call add or pop sbb aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov fcmovu in out hlt stc incb or adc push and xor ds dec dec push pop pop bound jb jl xchg add add rol rcl fneni(8087 in lock cli incl pop and aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov xlat fsub out icebp idiv add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas add aam fsubp jmp add or daa sub aaa cmp push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc push and sub dec dec push push pop bound jno jl xchg stos mov mov add rol rcl fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop bound jb jl xchg add (bad) int3 rcl fsub out icebp idiv add pop and aas inc dec dec push pop pop imul mov lods mov mov add add add add int3 rcl fsub out icebp idiv add or push sbb and inc inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov add add (bad) in out repz incb or sub inc dec push push pop popa insb jno jl xchg movsl stos mov mov aam (bad) jmp add push adc push and sub inc dec push push pop bound jno jl xchg stos mov mov aad add add jmp cmc cli add pop and das xor ds dec dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fndisi(8087 out lock add pop and aas inc dec dec push pop pop arpl jne addb movsb test ret leave into rcr fsubp add call add or daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb aaa cmp inc dec push push pop popa imul addl mov mov fcmovu in out add add stc incb or adc sbb cmp push pop popa data16 jno jl xchg cmpsb stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jno jl xchg lea lods mov mov (bad) fndisi(8087 out lock add sti add pop and aas inc dec dec push pop pop arpl jae jge mov test ret enter fucom out repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add add add or adc das xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop imul mov scas mov mov xlat fucom out repnz add or add push sbb sub xor dec push pop pop fs je jle mov test add leave into aam fsubp call add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov fneni(8087 out lock cli add add sbb and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add and aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or adc add add aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop imul mov test (bad) leave into rcr fsubp call add or daa add add aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incl unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps push and xor add cmp pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad loopne ljmp push adc push and sub add add dec push push pop bound jno jl xchg movsl stos add lret rcl fneni(8087 in lock cli incl unpcklps push and xor cmp pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and cmp inc dec dec add pop arpl jb jge xchg test vpsrld fucom call add unpcklps and push pop popa insb jbe xchg mov enter in hlt sti add inc jp xchg lcall into rcr fsubp call add or and sub ss inc dec add pop popa imul addl (bad) lret rcl fneni(8087 out icebp idiv add and sub cmp dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb and add dec dec push pop bound jno jl xchg movsl stos mov mov aam (bad) ljmp push adc push and sub inc dec push push pop popa insb jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc push and sub inc add push pop bound jno jl xchg movsl stos mov mov aam fsubp jmp add push adc sbb aaa cmp push pop popa imul addb mov mov aam (bad) jmp add push adc push and sub inc dec add push push pop popa insb jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz incb or daa sub inc dec push push pop popa imul addb test (bad) lret fnop in lock cli add and sub inc dec push push pop bound add add jno jl xchg stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom jmp add unpcklps pop and das xor ds dec dec push pop pop arpl jb add (bad) xchg cmpsl add (bad) int3 rcl fsub out lock add and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov fcomp jecxz in repnz add or sub inc dec push push pop popa imul add addb movsl stos scas mov int3 rcr fucom call add or push push and das xor inc inc dec push push pop popa push mov mov ret lret rcr loope out idiv push or xor aas inc dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp call add or sub xor cmp pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb cmp ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out add in icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out repz add add add add unpcklps push and cs ds dec dec push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt stc incb or adc push and sub dec dec push pop pop arpl jae jle mov test (bad) lret loope in icebp idiv add adc add add es ss dec push pop pusha imul cmpsl scas daa cmp dec push pop pop insw jne orl lret fneni(8087 in lock cli incl unpcklps xor dec push pop pusha outsb je jg mov test ret enter fucom out repnz add or pop sbb es cmp add add dec push pop gs je orl mov (bad) lret rcr loop icebp stc add push adc cmp fs addb cmpsb lods mov mov rcl fsub jmp or pop pop es push pop pop bound jb jl xchg lods mov ror add in icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or push sbb sub cmp dec push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp or adc push and sub dec dec push push pop gs je jle mov test ret leave into aam in hlt sti add pop pop and aas inc dec dec push pop pop imul lea lods mov mov (bad) fneni(8087 out lock cli add pop and xor ds dec dec push push pop bound jno jl xchg movsl stos scas mov mov (bad) in out idiv add je jle mov test mov mov (bad) ljmp sbb sub xor dec push pop pusha gs jne test movsb test (bad) leave into rcr fsubp call incb or adc push and sub inc dec push push pop popa insb jno jl xchg stos mov mov fndisi(8087 out lock sti add pop and dec push pop fs jno jl xchg stos mov mov add lret rcl fnop in out hlt cli incl unpcklps pop and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out lock add pop and aas inc dec dec push pop pop arpl jae jle mov mov ret rcl fsub add jmp idiv add pop and aas inc dec dec push pop pop arpl push je jle mov test enter fucom out repnz add or push sbb sub cmp dec push push pop pop fs je jle mov test mov mov (bad) in out add stc incb push adc push and sub inc dec push push pop popa insb jno jnp xchg movsl lods mov rol rcl fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop bound jb jl xchg mov ret lret xlat (bad) jmp idiv add add add add and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out repnz add or push sbb sub xor push push pop pop gs je jg mov mov rol rcl loopne jmp icebp idiv add or pop sbb es add add inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or adc push and xor cmp pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 in lock cli add and aas inc dec dec push pop pop imul mov scas mov (bad) leave iret aam fsubp jmp add push adc sbb cmp pop imul orl cmpsl lods mov mov xlat fucom in hlt cld add adc and das ss dec push push pop bound jno jl xchg xchg xchg fwait mov mov aam fsubp call add adc sbb aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz in repz std add or daa sub ss inc dec push push pop pusha imul addb add add mov rcr fsubp call add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb stos scas mov mov fcomp jecxz in repnz std add or pop sbb es cmp dec push push pop pusha gs jne jg mov add add add test ret enter fucom call add or push sbb sub cmp dec push push pop pop fs je jg mov test ret rcl fsub out icebp idiv add or adc das xor inc dec push pop bound jae jge mov test mov mov ret rcl fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge mov test mov mov (bad) fsub out lock add pop and aas inc dec dec push pop pop arpl jb jge xchg lods mov mov add add rcl fneni(8087 in out cmc cli incl unpcklps push and xor cmp push pop bound jno jl xchg cmpsb stos mov mov aam (bad) jmp add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov add rcr fsubp call add or daa sub ss inc dec push push pop pusha outsw jne jg mov stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad loopne add add ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave iret aam fsubp jmp add stc incb or adc sbb cmp push pop bound jno jl xchg lods mov mov (bad) fndisi(8087 out lock add and aas inc dec add pop pusha gs jne jg mov scas mov mov (bad) in out repz incb add or adc sbb cmp push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) ljmp push adc push and xor cmp push pop bound jno jl xchg stos mov mov aam (bad) ljmp add push adc push and sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) in out hlt stc incb or adc sbb aaa cmp push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz incb or add sbb aaa cmp inc dec push push pop popa imul addb mov mov (bad) jecxz out hlt stc incb or adc sbb cmp push pop popa insb jno jl xchg movsl stos mov mov aam (bad) jmp add push adc push add add sub xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpckhps pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add or adc add add xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb add sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt std add unpcklps pop and das xor aas inc dec dec push pop pop arpl js xchg mov (bad) int3 rcr loop out idiv add adc and cs pop bound ja test stos mov mov aad loopne ljmp push adc push and xor cmp push pop bound jb jl xchg add xchg fwait mov mov aam (bad) jmp add or daa sub inc dec push push pop pusha imul addb movsb stos scas mov mov fcomp loop in repnz add or push sbb and aas inc dec dec push pop pop imul lea popf mov mov rcl fsub out lock add pop and inc dec push push pop pusha gs jne jg mov stos mov mov aam (bad) jmp add or sub inc dec push push pop popa imul addb movsl stos mov add aad loopne ljmp push adc push and sub inc dec push push pop popa data16 jno jnp addl mov rol rcl fcmovu in out hlt stc incb push adc push and sub inc dec push push pop popa imul addb movsl add add add add (bad) leave into aam fsubp call add or daa sub cmp dec push push pop pusha gs je jg mov test ret enter fsub out icebp idiv add or adc das xor dec push pop gs jne jg mov test add add aam fsubp jmp add movhps and sub xor push push pop pusha imul jg mov test (bad) leave into rcr fsubp call incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov add add (bad) aam (bad) jmp add push adc push and sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz std add or daa sub cmp dec push push pop pop gs je jle mov test mov mov add add rcl fsub out icebp idiv add pop and das xor ds dec dec push pop pop bound jb jl mov lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad add add loopne ljmp or adc das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov add xlat fucom out icebp idiv add or push sbb sub xor dec push pop pop fs je jle mov test mov mov xlat add add loop in icebp idiv add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop fs je jle mov test mov ret leave into rcr fsubp call add out repz std add or xor ds dec dec push pop pop gs jne addb cmpsl lods mov mov xlat fucom call add or daa sub aaa cmp add push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add add unpcklps pop and xor ds dec dec push pop pop bound jb jl xchg lods mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock sti add add adc das xor dec push pop pop imul lea lods mov mov xlat fsub ljmp adc sbb sub cmp dec push push pop pop gs je jg mov test ret enter fucom out repnz add or push add add sbb es cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz incb or add add sub inc dec push push pop bound jno jl xchg cmpsb stos mov mov aad (bad) jmp add push adc push and sub dec dec push pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpckhps and xor add cmp inc dec dec push pop pop bound jb jge xchg stos mov mov aad (bad) ljmp push adc push and xor cmp pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and sub add inc inc dec push push pop bound jno jl xchg movsl stos mov mov aam fsubp jmp add or sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz in repz std add or daa sub cmp add dec push push pop pusha imul addb movsb test ret enter fucom out repnz add or push sbb and aas inc dec push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push add pop pop gs je jg mov test mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pop gs jne jg mov test ret enter fucom call add or pop sbb es cmp dec push push pop pusha gs jne addb movsb test ret leave into rcr fsubp call add or daa sub ss inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) add jmp add push adc push and sub dec dec push push pop bound insb jb orl cmpsl lods mov mov (bad) fneni(8087 out lock cli incl push and xor ds dec dec push pop pop bound jb jl xchg lods mov mov aad loopne ljmp unpcklps push and xor ds dec dec push push pop bound jb add mov stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aam (bad) jmp add push adc sbb cmp push pop popa imul addb add mov mov aam (bad) jmp add push adc add and xor cmp push pop bound jb jl xchg mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jb jl xchg add add stos mov mov aad loopne ljmp unpcklps push and xor cmp push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add or daa sub inc dec push push pop popa imul ja addl add mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa insl jb jl xchg stos mov mov xlat fsub out repnz add unpckhps pop and inc inc dec push push pop bound jae jg mov test add add enter jecxz in repnz std add or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or pop sbb sub cmp dec push push pop pusha gs jne jg mov test add add add fcomp jecxz out repz incb or sub xor ds dec dec push pop pop arpl jae jle mov cmpsl lods mov add xlat fsub out repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov add add int3 rcl fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov (bad) fsub out icebp idiv add adc das xor dec push pop pop imul lea lods mov mov (bad) fndisi(8087 out lock add or adc das xor dec push pop pop imul icebp idiv add or push sbb and aas inc dec dec push pop pop gs je jg mov test mov mov xlat fucom out icebp idiv add or push sbb sub xor add add dec push pop pop gs jne jg mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pop gs jne jg mov test ret enter fucom out repnz add or push sbb add cmp dec add pop popa data16 jno jl xchg cmpsb stos mov mov aad (bad) ljmp push adc push and xor cmp pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 in lock cli incl unpcklps pop and xor ds dec dec push pop add pop bound jb jl xchg lods mov mov aad loopne ljmp push adc push and sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz in repz std add or es cmp dec push push pop pusha add gs je jg mov test ret enter fucom out repnz add or push sbb sub xor dec push pop pop add jne jg mov stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) fsub out lock add pop and das xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov rcl fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul add jns orl test mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge add movsb test (bad) leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov (bad) jecxz out repz incb or daa sub aaa cmp inc dec push push pop pusha imul addb add scas mov mov (bad) jecxz out repz add add push adc push and sub dec dec push push pop bound jno jl xchg movsl stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop bound jno jl xchg add add add mov rol rcl fcmovu in out hlt stc incl push adc push and sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jmp add push adc sbb cmp push pop popa insb jno jnp xchg movsl add stos scas mov mov (bad) in out repz incb or daa sub inc dec push push pop popa imul addb movsb test ret leave into rcr fucom call add or daa sub ss inc dec push push pop pusha gs jne jg mov test add add mov mov xlat fsub out repnz add or push sbb and inc inc dec dec push pop pop imul mov lods add int xlat fucom out repnz add or push sbb sub cmp dec push push pop pop fs je jle mov test mov add mov rcl fsub out repnz add or push sbb sub cmp dec push push pop pop gs jne jg mov stos scas mov mov (bad) jecxz out repz incb or sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov lret fcmovu in out hlt stc incb push adc push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) jmp add push adc push and cs aas inc dec push pop pop arpl jae jle mov stos mov ret int fucom jmp add idiv add or and inc dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) out icebp idiv add push adc and cmp dec push pop push xchg fwait mov (bad) lret rcr jecxz repnz add push push push es push pop popa push (bad) xchg sahf cmpsb lods mov (bad) fsub jmp sti add adc pop es dec push pop bound jbe xchg mov mov out hlt sti add adc and xor inc inc dec push pusha insw je orl mov (bad) int3 rcr loop icebp clc add push adc push and xor ds dec dec add add pop arpl jae jge xchg cmpsl lods mov mov (bad) fsub out lock add and aas inc dec dec push popa insb jno jnp xchg movsl stos mov mov aam fsubp jmp add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub cmp dec push push pop pusha gs je jg mov test ret enter fucom out repnz add or push sbb sub xor dec push pop pop imul outsl je jle mov test mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and das xor ds dec dec push pop pop arpl jb add add orl mov mov (bad) fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 out lock cli add pop and das xor ds dec dec push pop pop arpl jb jge add mov mov (bad) fndisi(8087 out lock sti add pop and aas inc dec dec push pop add imul mov scas mov mov fcomp jecxz in repnz add or daa sub ss inc dec push push pop pusha imul addb add add stos scas mov mov (bad) in out repz incb or adc sbb cmp push pop bound jno jl xchg stos mov ret rcl fucom call add or pop sbb daa sub aaa cmp inc dec push push pop bound jbe test scas mov add add (bad) in hlt sti add adc and xor aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop fs je jle mov test mov mov xlat add jecxz add in repnz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc push and sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fndisi(8087 in icebp testl add cld add or push sbb sub xor push push pop pop fs je jg mov test mov mov aad loopne ljmp unpcklps push and xor cmp pop pop bound jb jl xchg stos mov mov aad (bad) ljmp add add push adc push and xor cmp pop pop bound jb jl xchg stos mov mov aad (bad) jmp add push adc sbb aaa cmp push pop bound jno jl xchg cmpsb stos mov mov aam (bad) jmp add add add adc sbb cmp push pop bound jno jl xchg cmpsb stos mov mov aad (bad) jmp add push pop push and sub inc dec push push pop popa insb jb jl xchg stos mov mov aad (bad) ljmp or adc sbb and das xor ds dec dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock add pop and aas inc dec dec push pop pop arpl jae jle mov test mov mov (bad) fsub out icebp idiv add pop and das xor aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fndisi(8087 out lock add pop and das xor aas dec dec push pop pop fs je jle mov stos mov mov (bad) jecxz in repz std add or daa sub ss inc dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb sub xor inc dec dec push pop pop imul mov lods mov mov xlat fsub add in repnz add or pop sbb sub cmp dec push push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or push sbb and aas inc add push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop arpl ja orl cmpsl lods mov mov (bad) fndisi(8087 out lock cli add pop and xor ds dec dec push add bound jb jl xchg movsl stos mov mov aam (bad) jmp add or daa sub ss inc dec push push pop pusha gs jne jg mov test mov mov xlat fsub out icebp idiv add or adc sub cmp dec dec push add pop pop imul lea lods mov mov (bad) fndisi(8087 out lock cli incl pop and xor ds dec dec push push pop bound jno jnp xchg movsl stos scas mov mov (bad) jecxz in repz std add or pop sbb sub cmp dec dec push pop add pop imul mov mov mov fcomp loop in repnz add or pop sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave into aam fsubp call add or daa sub inc dec push push pop bound add add add jb jle mov scas mov mov (bad) in out repz incb or sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad loopne ljmp unpcklps pop and xor ds dec dec push pop pop bound jb jge add pushf mov mov (bad) fneni(8087 out lock add pop and aas inc dec dec push pop pop arpl jae jle mov test mov mov idiv add or daa sub cmp dec push push pop pusha gs je jg mov test scas mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop imul mov lods mov mov (bad) fsub out add idiv add or push sbb es cmp dec push push pop pusha gs je jg mov test add add int fcomp loop in repnz add or push sbb es cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov add add (bad) in out repz decb push adc sbb cmp pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop imul mov lods mov mov add add xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pop fs je jg mov test mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop imul mov test ret enter add add fucom out repnz add or push sbb sub xor push push pop pop gs je jg mov test mov mov xlat fsub out icebp idiv add or adc xor inc inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz add out repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov (bad) jecxz out repz incb or daa sub inc dec push push pop popa insb jno jnp xchg movsl stos scas mov add vaddsubps fnop in out hlt cli incl push adc push and xor cmp push pop bound jb jl xchg stos mov mov aad (bad) ljmp add stc incl push adc push and xor cmp push pop data16 jb jl xchg stos mov mov aam (bad) jmp add push adc sbb aaa cmp push pop popa imul addl mov mov (bad) jecxz out repz std add add or es add inc dec push push pop pusha imul addb movsb test ret enter fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl add unpcklps push and xor cmp push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add or daa sub inc dec push push pop pusha imul addb stos mov mov aad loope out idiv add sub xor inc dec push pop pop insw jne xchg mov loopne lock incl push pop and das aaa ds dec push pop bound jp mov mov (bad) lret rcr loopne out cmc cld add adc pop add sub dec push pop bound js xchg mov ror (bad) fucom in repz add adc push and dec push pop pop data16 jne orl mov (bad) int fsub ljmp sbb sub cmp push pop popa imul lcall iret (bad) fucom in repnz add or xor inc dec push pop pop arpl jae addb mov mov fsub ljmp sbb inc dec push push pop insw je orl lret loope out cmc sti add adc pop and inc dec push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and sub inc add push pop bound jno jl xchg stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov rcl fsub out idiv add or daa sub inc dec push push add insb jno jnp xchg movsl stos mov mov aam (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 out lock add pop and aas inc dec dec push pop pop add add add jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop gs je jg mov test ret enter fucom call add or daa sub ss inc dec push push pop pusha imul add add add add addb movsb test ret leave into rcr fsubp call add push adc pop sub xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad loopne jmp idiv add or adc das xor dec push pop pop imul add add popf mov mov (bad) fsub out lock add and aas inc dec dec push pop pop imul lea lods mov add xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb mov stos scas mov mov (bad) jecxz out repz incb or sub dec dec push push pop bound jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec push pop pop arpl jae jge mov add mov rol rcl fsub out icebp idiv add or adc xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul mov add test mov mov (bad) fsub out lock add or push sbb and inc inc dec dec push pop pop imul mov lods mov mov (bad) fndisi(8087 out lock add pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor ds dec dec push pop pop bound jb jle mov lods mov mov aad loopne ljmp push adc push and xor cmp pop pop bound jb jl xchg stos mov add add aad (bad) ljmp push add pop and cs ds dec dec push pop pop arpl jb jge xchg stos mov mov aad (bad) ljmp push adc sbb aaa cmp inc dec push push pop popa imul addb movsb stos scas mov add fcomp jecxz in repnz add or push sbb sub xor dec push pop pop gs je jg mov test mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov (bad) rcr loop in icebp idiv add or push sbb sub xor dec push pop pop imul mov mov mov xlat fsub out icebp idiv add or adc das xor dec add pop fs jne jg mov test ret enter fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul mov lods mov mov xlat fsub add add jmp idiv add pop and das xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov (bad) fsub in icebp idiv add or push sbb and aas inc dec add pop pusha insw jne (bad) mov mov rol aad (bad) ljmp add add adc push and xor ds dec push pop pusha imul addb fcomp loop in repnz std add or pop sbb es cmp dec push push pop pusha gs je jg mov test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec add arpl jae jge xchg cmpsb lods mov mov aad (bad) ljmp unpcklps push and xor cmp push pop popa insb jno jnp xchg movsl stos scas mov mov fcomp jecxz in repnz std add push pop push and dec push push pop arpl add jge xchg lods mov mov (bad) fndisi(8087 out add idiv add or sbb aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc push and xor cmp pop pop bound jb jl xchg stos mov mov (bad) fneni(8087 in lock cli incl pop and das xor aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pop fs je jg mov test ret enter fucom out repnz add or push sbb sub ss pop pusha imul addb movsb stos scas mov mov (bad) in out repz incb or adc sbb aaa cmp push pop bound jb jl xchg pushf mov mov (bad) fndisi(8087 out lock add and aas inc dec push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add push adc sbb cmp pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pusha imul addb movsb stos scas mov mov (bad) in out hlt stc incb add pop and das xor aas inc dec dec push pop pop fs jp test movsb test mov xlat fucom out icebp idiv add or push sbb sub xor dec push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) int3 rcl fneni(8087 out lock cli add pop and xor ds dec dec push pop pop bound jae jge xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov add (bad) fneni(8087 in lock cli incl pop and cs add inc dec dec push pop pop imul mov mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and xor ds dec dec push pop pop bound jb jl xchg lods mov mov aad loopne ljmp push adc push and xor add inc dec dec push pop pop arpl jb jge xchg lods mov mov aad add in out cmc cli incl unpcklps push and xor cmp push pop bound jno jl xchg cmpsb stos mov mov aad (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov fsubp call in repz std add or daa sub cmp dec push push pop pusha gs je jg mov test ret enter fucom out repnz add or push sbb sub xor dec push pop pop imul mov scas mov mov xlat fsub out icebp add cld add or push sbb and aas inc dec dec push pop pop imul mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pop fs je jle mov test mov mov xlat fsub out icebp testb add add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov (bad) fneni(8087 in lock sti add unpcklps pop and cs ds dec dec push pop pop arpl aaa cmp push pop popa insb jno jnp xchg add add int3 rcl fndisi(8087 out lock add and aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test ret enter fucom call add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov add (bad) in out hlt stc incb or adc sbb aas inc dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul mov lods mov mov xlat fucom out add add repnz add or push sbb sub cmp dec push push pop pusha gs je jg mov test (bad) leave into rcr fsubp call incb or adc push and sub dec dec push push pop bound jb jl xchg stos mov mov aad loopne jmp cmc cli add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or adc xor dec push pop fs jne addb movsb test ret leave into aam fsubp jmp add add or daa sub inc dec push push pop popa imul orl ret enter fsubp call add push adc sbb cmp pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock add or adc add inc inc dec push push pop pop gs je jg mov test ret leave into rcr fsubp call add or daa sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz incb or daa sub add xor cmp add push push pop bound jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov aad loopne ljmp unpckhps pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop bound jb jl orl cmpsl lods mov rol rcl fsub out icebp idiv add or push sbb sub cmp dec dec add push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or adc xor dec push pop add push jne jg mov test ret enter fucom out repnz add or push sbb sub cmp dec push push add fs je jle mov test mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul mov lods mov mov xlat fsub out lock add pop and das xor aas inc dec dec push pop pop add arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out cmc cld add or push sbb sub xor push push pop pusha gs je jg mov test mov mov xlat fucom out icebp idiv add or push sbb sub xor push push pop pop gs add test lahf movsb test ret enter fucom out repnz add or push sbb sub xor push push pop pop gs je jg mov test mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul add add orl cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps and xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and cs ds dec dec push pop pop arpl jae jge mov add xchg xchg pushf mov mov (bad) fneni(8087 in lock cli incl pop and cs ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and cs ds dec dec push pop pop arpl jae jge mov pushf mov mov (bad) fneni(8087 in lock cli add pop and cs ds dec push pop pop bound jb jl xchg stos mov mov aam fsubp jmp add or daa sub ss inc dec push push pop pusha gs jne addb movsb add ret enter fucom out repnz add or pop sbb es cmp dec push push pop bound jno jl mov test (bad) leave into aam (bad) jmp add pop and das xor ds dec dec push pop pop imul mov mov add mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa imul addb cmpsb lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul lcall rol rcl add add loope jmp cmc sti add pop and xor ds dec dec push pop pop bound jno jl xchg add rol rcl fcmovu in out hlt stc incl push adc push and sub inc dec push push pop popa imul addb movsb test (bad) leave into rcr add add jecxz in repnz std add or pop sbb daa sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fucom call add or pop sbb sub cmp dec push push pop pop gs je jle mov test mov mov xlat fsub add add in icebp idiv add or push sbb and aas inc dec dec push pop pop arpl jae jge xchg cmpsl mov mov stc incl push adc push and xor ds dec dec push pop pusha outsb jne orl mov ror (bad) fucom in repnz add adc push es dec dec add pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and cs aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor aas inc dec dec push pop add pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add and aas inc dec dec push pop pop imul mov lods mov mov jecxz out repz incb or sub dec push push pop pusha gs jne add add add jp test movsb test ret enter fucom call add or pop sbb daa sub cmp dec push push pop pusha imul addb mov mov aam (bad) jmp add or sub inc dec push push pop popa data16 jno jnp addl mov mov (bad) in out repz incb or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb add mov stos scas mov mov (bad) in out repz incb or sub inc dec push push pop popa insb jno jl xchg scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov add mov (bad) faddl loop in icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov scas mov mov xlat fucom out repnz add or push sbb sub xor push push pop pop fs je jg mov test ret enter fucom call add or pop sbb es ss inc dec push push pop pusha imul jg mov stos scas mov mov (bad) jecxz out repz std add or daa sub cmp inc dec dec push pop pop arpl jb jge xchg lods mov add rcl fneni(8087 in lock cli incl pop and cs ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out lock add and aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov add add (bad) int xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop imul mov test ret leave into rcr fucom call add or pop sbb es cmp dec push push pop pusha gs jne jg mov test les add into rcr fsubp call add or daa sub aaa cmp inc dec push push pop pusha push (bad) xchg lods mov mov (bad) fneni(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov add fndisi(8087 out lock cli add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 out lock add and inc inc dec push push pop bound jb orl mov ror fninit ljmp or daa sub aaa cmp inc dec push push pop popa imul addb movsb test ret leave into rcr fucom call add or pop sbb es cmp dec push push pop popa data16 jb jl xchg scas mov mov fcomp loop in repnz add or pop add sbb sub cmp dec push push pop pop gs je jg mov test mov mov xlat fsub out icebp idiv add and aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov aad loopne ljmp push adc push add sub xor cmp push pop bound jno jl xchg movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul jg mov test ret enter fucom out repnz add or push sbb add add add xor cmp dec push push pop pop gs je jg mov movsb test ret lret fcmovu in out hlt stc incb or adc sbb cmp push pop popa imul addb movsb test ret enter fucom out repnz add or push sbb sub add cmp dec dec push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add pop and aas inc dec dec push pop pop imul lea lods mov mov (bad) fneni(8087 out lock sti add pop and cs add add ds dec dec push pop pop arpl jae jge xchg lods mov mov aad loopne ljmp push adc push and sub dec dec push pop pop bound jb jl xchg stos mov mov rcl fneni(8087 in out idiv add or push sbb and add inc inc dec dec push pop pop imul lea lods mov mov (bad) fneni(8087 in jmp idiv add pop and das xor ds dec dec push pop pop arpl jb jge xchg stos mov mov aad (bad) jmp add push adc sbb aaa cmp add dec push push pop popa imul addb movsb stos scas mov mov fcomp loop in repnz add or push sbb sub xor dec push pop pop imul lea lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds add add push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop sub xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp unpcklps add and das xor ds dec dec add add pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and das xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor cmp pop add push (bad) xchg lods mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa data16 jno jl xchg movsl stos mov mov aam fsubp jmp add or daa sub cmp dec push push pop bound add insb jb jl xchg stos mov mov aad loopne ljmp push adc push and sub inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov rol rcl fnop in out hlt stc incl push adc push and sub inc dec push push pop popa data16 imul addl mov mov (bad) jecxz in repz std add or es cmp dec push push pop pusha gs je jg mov test ret enter fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop arpl add jle mov test mov mov (bad) fndisi(8087 out lock sti add pop and cs ds dec dec push pop pop bound jb jl mov test ret enter fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul add jle mov test mov mov xlat fsub add in repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop arpl jae jge add add popf mov mov (bad) fneni(8087 out lock cli add pop and cs ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp push adc push and xor cmp push pop popa insb jno jnp xchg add cmpsb stos mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc sbb aaa cmp push pop popa imul addb add scas mov mov (bad) jecxz in repz std add or pop sbb sub cmp dec push push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jb jge xchg add pushf mov mov aad loopne ljmp push adc push and sub inc dec push push pop popa imul addb movsb stos scas mov mov (bad) out repnz add or push sbb sub xor dec push pop pop imul lea add rol rcl fneni(8087 out lock cli incl pop and xor ds dec dec push pop pop bound jb jl xchg movsl stos mov mov aad (bad) jmp add push adc sbb aaa cmp inc dec push push pop pusha imul addb movsb test scas mov mov fcomp jecxz in repnz add or push sbb sub xor dec push pop pop imul lea lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jb jge xchg stos mov add rcl fneni(8087 in out hlt cli incl push sbb sub xor dec push pop pop imul nop xchg lcall rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp pop pusha gs jb jge mov test mov mov add add loope jmp testl sub cmp inc dec push pop arpl jl mov mov (bad) int fninit ljmp sbb sub cmp dec push pop gs jne test mov fsubp in hlt sti add adc pop es push pop bound js xchg mov add add jecxz icebp clc incb or das aaa ds insl je (bad) mov mov ret lret (bad) in hlt sti add adc and das ss pop popa data16 jno jnp xchg movsl stos mov mov aad loopne jmp idiv add or push sbb sub cmp add push pop pusha data16 jno jl xchg lods mov mov xlat fsub out repnz add or das aaa ds dec push pop bound jns mov mov (bad) into (bad) fucom in cmc std add adc and xor inc dec dec push pop pop fs jo jp test test (bad) (bad) fndisi(8087 out icebp idiv add or sub dec dec push pop pop imul mov mov xlat fsub out icebp idiv add or pop sbb es aaa cmp inc dec push pop fs je jg mov mov mov aad loopne jmp idiv add add or pop sbb sub inc dec push push pop popa insb jno jnp xchg cmpsb lods mov mov (bad) fsub out repz incb or adc das cmp dec push push pop bound jb jge mov movsb test (bad) leave iret aam fsubp call mov rol lret (bad) out icebp idiv add or pop sbb cmp pop pop imul (bad) xchg lcall fchs jmp adc and xor ds dec dec add imul lea scas mov mov fcmovu in lock sti add or push add add daa sub aaa cmp inc dec push push pop bound jae jge xchg test mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop gs je jg mov stos mov mov xlat fsub out icebp idiv add or pop sbb add xor cmp push pop bound jb jge xchg cmpsl lods mov mov add fucom call add push push sbb sub aaa cmp push pop arpl jae jle mov test (bad) leave iret fucom call add push adc push and das xor inc inc dec push add pop gs jne test mov (bad) int fsub out icebp idiv add or sbb and sub dec push je mov mov add adc cs aas inc dec push pop data16 jne test mov mov aad (bad) ljmp push adc push and sub add add dec push push pop popa insb jno jl xchg stos mov mov rcl fneni(8087 in lock cli incl push and xor ds add push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fsub out icebp idiv add push and inc dec push pop add lea mov fucom in repz add push adc cmp inc dec push pop imul mov mov ret lret jecxz repnz add movhps inc dec push pop pusha imul lcall into aad in out cmc cli incl unpcklps pop and das add xor aas inc dec dec push pop pop imul mov lods mov mov (bad) fndisi(8087 out lock cli add pop and xor ds dec dec push pop pop bound jno jl xchg stos mov mov aam add in out hlt stc add pop and inc inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz in repz std add or daa sub cmp dec push push pop pusha gs je jg mov test ret enter fucom out repnz add or push sbb and aas inc add dec dec push pop pop imul mov lods mov mov (bad) fneni(8087 out lock cli add pop and xor ds dec dec push push pop bound jno jnp xchg movsl stos mov mov aam (bad) jmp add or daa sub aaa cmp inc dec add add pop pusha imul addb movsb stos scas mov mov fcomp jecxz in repnz add or pop sbb sub cmp dec push push pop pop imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub cmp dec push push add imul jg mov stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fcmovu in out hlt stc incl push adc push and xor cmp pop pop bound add jb jl xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pop imul add jae jle mov stos mov mov aad (bad) ljmp push adc push and xor cmp pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 out lock sti add pop and das xor aas inc dec dec push pop pop arpl jae jge add (bad) xchg cmpsl lods mov mov rcl fucom out icebp idiv add or push sbb sub xor dec push pop pop imul mov lods mov mov fcomp loop in repnz add or push sbb sub cmp dec push push pop pop fs je jg mov test ret rcr fucom call add or pop sbb es cmp dec push push pop pusha gs jne jg mov test leave into rcr fsubp jmp add or daa sub inc dec push push pop popa imul addb lcall mov (bad) in out hlt stc incb or adc sbb aaa cmp push pop popa insb jno jl xchg movsl stos mov mov aam (bad) ljmp or adc pop and das xor ds dec dec push pop pop arpl jb jge xchg add mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl add lods mov mov (bad) fneni(8087 out repnz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test (bad) leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addl mov add aad (bad) jmp add push adc push and xor cmp push pop bound jno jl xchg stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl orl cmpsl lods mov mov add rol rcl fndisi(8087 out lock sti add and aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or adc xor cmp inc dec push push pop popa imul addb movsb test ret leave add rcr fucom call add or pop sbb daa sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom out icebp idiv add or push sbb sub cmp dec push push pop pusha gs je jg mov test mov mov add add fucom out repnz add or push sbb es cmp dec push push pop pusha gs jne jg mov test mov (bad) jecxz out repz incb or sub inc dec push push pop popa insb jno jl xchg movsl stos mov mov aad add in out hlt stc incb push adc push and sub dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pop fs je jle mov test mov mov xlat fsub out add icebp idiv add or push sbb sub xor push push pop pusha gs je jg mov test ret enter fucom add out repz std add or daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) in out add stc incb or daa sub inc dec push push pop popa insb jno jl xchg movsl stos mov mov aam (bad) jmp add push adc sbb aaa cmp inc dec push push pop bound jno jl mov cmpsl lods mov mov (bad) fsub out lock add add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs jne jg mov test ret enter fucom call add add add pop sbb and sub inc dec push push pop popa insb jb jl xchg stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jae jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add add adc das xor aas inc dec dec push pop pop arpl jae jle mov test mov rcl fsub out icebp idiv add or adc sbb daa sub cmp dec push pop imul mov mov ret xlat fucom jmp stc add push adc cmp inc dec push pop popa imul add add jnp test movsb stos scas mov mov (bad) in out repz incb or adc sbb aaa cmp push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) in out hlt stc incb push adc push and sub inc dec push push pop popa insb jno add jnp xchg movsl stos mov mov aam fsubp ljmp push adc push and sub inc dec push push pop bound jno jl xchg movsl stos mov mov aam loop in repnz add or pop sbb sub cmp dec push push pop pusha gs jne jg mov movsl stos mov mov aam (bad) jmp add push adc push and xor cmp pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jb jge xchg xchg xchg pushf mov mov aad loopne ljmp adc das xor aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop fs je jg mov sahf mov mov fcomp loop in repnz add or push and sub dec dec push push pop bound jno jl xchg cmpsb stos mov mov aad (bad) ljmp push adc pop and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods add add add int3 rcl fndisi(8087 out lock add sbb es cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or push sbb daa sub cmp dec push push pop pusha gs jne jg mov test mov rcr fucom call add or pop sbb es aaa cmp inc dec push push pop pusha imul addb movsb test ret leave into rcr fsubp call add or pop sbb daa sub aaa cmp dec dec push pop pop bound jb jl xchg stos mov mov add lret rcl fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor ds dec dec add arpl jae jge mov cmpsl lods mov mov add rcl fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fsub out lock add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov add (bad) fneni(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jnp xchg movsl stos mov mov aam (bad) jmp add adc and xor ds dec push pop popa imul addl add rcl fneni(8087 out lock sti add pop and aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop fs je jg mov test ret enter fsubp call add add add daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc sbb cmp push pop bound jno jl xchg mov mov (bad) fneni(8087 out lock sti add add add and sub ss dec push pop pusha insw je orl enter in hlt cli incl unpcklps push and sub xor ds dec dec push pop pop arpl jb jl xchg stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push add bound jb jge xchg lods mov mov (bad) fneni(8087 out lock sti add pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop add add je jle mov test mov mov fneni(8087 in lock add or adc xor cmp dec push push pop popa imul xchg mov (bad) int3 rcr fucom call add push adc pop and inc inc dec push push pop pusha gs jne addb add lcall int3 aam loopne ljmp unpcklps pop es pop pusha push lea mov jecxz icebp stc add aaa cmp inc dec push push pop popa insb jno jge mov mov loope lock pop push push sbb aas add push pop imul mov mov (bad) int3 rcr loop lock push or xor inc inc dec push push pop popa data16 jno jnp add mov mov aam (bad) jmp add or sub inc dec push push pop popa data16 jno jnp test lcall mov fcomp jecxz in repnz add or pop sbb daa sub cmp dec push push pop pusha gs jne jg mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop imul lea add add mov (bad) fneni(8087 out lock cli add pop and das xor ds dec dec push pop pop arpl jb jge xchg stos mov mov aad (bad) ljmp push adc sbb cmp dec dec push pop pop imul mov lods mov mov (bad) fndisi(8087 out lock add pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps pop and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov rol add (bad) fneni(8087 out lock cli add pop and xor ds dec dec push pop pop arpl jb jl xchg stos mov mov aad (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov add add add add rcr fsubp call add or pop sbb es cmp dec push push pop imul xchg cwtl sahf mov mov fcomp jecxz out hlt stc incb push adc pop and aas inc dec dec push pop pop gs jne orl mov ret xlat fsub out add icebp idiv add or adc das xor aas inc dec dec push pop pop imul mov scas mov mov xlat fsub out icebp idiv add or push sbb and cmp dec push push pop pusha gs je jg mov test ret rcl fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add pop and das xor ds dec dec push pop pop bound jb jl xchg test ret enter fucom out repnz add push or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge mov test mov mov (bad) fsub out lock add add add adc das xor aas inc dec dec push pop pop arpl je add lcall ret rcl fucom out repnz add or pop sbb sub dec dec push pop pop arpl jae jg mov stos mov mov aad (bad) ljmp push adc add add and xor cmp push pop bound jno jl xchg movsl stos mov mov (bad) in out hlt stc incb or adc push and sub dec dec push pop pop arpl jb jge mov test mov mov fcomp loop in repnz add or pop sbb daa sub add add cmp pop pop bound jae jge mov test mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha gs je jg mov test ret enter (bad) in out hlt stc incb or adc sbb cmp add add push pop popa data16 jno jnp xchg movsl stos scas mov mov fcmovu in out hlt stc incb push adc push and sub inc dec push push pop bound jno jl xchg movsl stos mov mov aam (bad) ljmp adc das xor add add push pop pop mov xlat fsub out repnz add or push sbb es cmp dec push push pop pusha imul addb movsb test ret enter fldl in out repz incb or daa sub inc dec push push pop popa data16 jno jnp xchg movsl add stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsb test ret enter fucom out repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov (bad) fneni(8087 out lock cli incl and sub xor dec push pop pop fs je jle mov test mov mov (bad) fsub out lock add pop and cs ds dec dec push pop pop arpl jb jge xchg stos mov mov aad (bad) ljmp push add push and xor ds dec dec push push pop bound jb jl xchg stos mov mov aad (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov add mov (bad) jecxz out repz incb or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test ret enter fucom call add or pop sbb daa sub cmp inc dec dec push pop pop imul mov lods mov mov add add rcl fsub out lock add pop and das xor ds dec dec push pop pop bound jb jge xchg stos mov mov aad (bad) jmp add push adc sbb aaa cmp push pop popa imul addb movsl stos scas mov mov add rcr fsubp call add or pop sbb sub cmp dec push push pop pop imul mov lods mov mov xlat fsub out icebp idiv add pop and das xor ds dec dec push pop pop arpl jb jge xchg add rol roll (bad) fneni(8087 in lock cli incl unpcklps pop and xor cmp push pop bound jno jge mov cmpsl lods mov mov (bad) fneni(8087 in out cmc cli incl unpcklps push and xor cmp push pop popa insb jno jnp xchg movsl stos scas mov mov flds add jecxz in repz std add or daa sub cmp dec push push pop pusha gs je jg mov test ret enter fucom out repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub add add jmp idiv add pop and das xor ds dec dec push pop pop bound jb jl xchg stos mov mov add fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jb jl xchg lods mov mov xlat fsub out add in icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out lock add pop and ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fndisi(8087 out lock idiv add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp unpcklps push and xor cmp pop pop bound jno jl xchg stos mov mov aad (bad) ljmp add add add push adc push and sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam push or push sbb sub cmp dec push push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or push sbb and add add xor dec push pop pop fs je jg mov test ret leave into rcr fsubp jmp add or sub inc dec push push pop bound jno jl xchg stos mov mov aad loopne jmp cmc sti add and add add inc dec dec push pop pop imul mov scas mov mov fcomp loop in repz std add or daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp adc sbb es ss inc dec add add pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb push adc push and xor cmp pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli add and aas inc dec dec push pop add add imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs je jg mov test ret enter fucom call add or daa sub inc add pop pop bound insl jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add and inc dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or daa sub inc dec push push pop bound jb add jl xchg lods mov mov (bad) fneni(8087 out lock add and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov add lea lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul addb mov mov (bad) fneni(8087 out lock add and aas inc dec push push pop pusha gs jp test add mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp jmp add or and cs ds dec dec push pop pop arpl jae jle mov test add add enter fucom call add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul (bad) xchg lcall add mov (bad) jecxz out repz incb or adc sbb cmp pop pop bound jb jge mov scas mov mov fcomp jecxz in repnz std add or sub aaa ds dec push pop popa push lea mov loope out idiv add add add sbb daa cs push pop pop arpl jb jge xchg cmpsl add (bad) int3 rcl fsub out icebp idiv add or push sbb sub xor dec push pop pop imul mov lods mov mov (bad) fsub out icebp idiv add or adc add add aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli add pop and cs ds dec dec push pop pop bound jb jl xchg stos mov mov fcomp loop in repnz std add or pop sbb es add cmp dec push push pop pusha gs je jg test movsb test ret enter fucom call add or pop sbb daa sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or pop sbb es add cmp dec push push pop pop gs je jg mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor add dec dec push pop pop imul mov lods mov mov xlat fsub out icebp testb or daa sub inc dec push push pop pusha imul addb movsb test mov (bad) jecxz out repz std add or daa sub aaa cmp inc add pop pusha imul addb movsb test ret enter fucom call add or push sbb daa sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom out icebp idiv add or push sbb sub cmp dec push add push pop pop fs je jg mov test mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add pop and inc inc dec push push pop add imul jg mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pop fs je jle mov test mov mov xlat fsub out lock add pop and das xor ds dec dec push pop pop bound push addl mov mov flds (bad) ljmp push adc push and sub dec dec push push pop bound jno jl xchg movsl stos mov mov aam fsubp call add or pop sbb sub cmp dec push push pop pusha add push je jg mov test mov mov xlat fsub out lock sti add pop and das xor aas inc dec dec push pop arpl jae jge xchg lods mov mov aad loopne ljmp adc sbb es cmp pop pop bound jb jl mov test (bad) leave into rcr fsubp call add push adc push and cs aas inc dec dec push pop pusha gs jne addb movsb test ret enter fsub out icebp idiv add or adc sub xor dec push pop pop imul mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor cmp push pop bound jno jl xchg movsl stos scas mov mov fcomp jecxz in repnz add or push sbb sub xor dec push pop pop imul add nop xchg lcall mov fcomp jecxz in repnz add or push sbb sub xor dec push pop pop imul lea lods mov mov (bad) fneni(8087 in lock cli incl push and xor cmp push pop bound jb jl xchg mov mov aam fsubp call add or sub cmp dec dec push pop pop imul mov lods mov mov (bad) fsub out lock sti add pop and add aas inc dec dec push pop pop arpl jae jge xchg xchg pushf mov mov aad (bad) ljmp push adc sbb aaa cmp inc dec push push pop popa imul addb movsb test enter fucom out repnz add or push sbb sub xor dec push pop pop imul mov add mov mov (bad) fndisi(8087 out lock add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor cmp push pop bound jno jl xchg add stos mov mov aam fsubp jmp add or daa sub aaa cmp inc dec push push pop popa add jno jnp xchg movsl stos scas mov mov (bad) jecxz in repnz std add or pop sbb sub xor dec push pop pop imul mov add lods mov mov (bad) fsub out repnz add or push sbb sub cmp dec push push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop arpl jae jge mov cmpsl lods mov mov rol rcl fneni(8087 in add idiv add or adc das xor ds dec dec push pop pop arpl jb jl xchg stos mov mov aad (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa imul addb movsl stos scas mov add add rcr fsubp call add or daa sub cmp dec push push pop pusha gs je jg mov test ret enter fucom out repnz add or push and sub ss inc dec push push pop pusha imul addb movsb stos scas mov mov add add into aam fsubp jmp add or daa sub ss inc dec push push pop pusha imul jg mov test (bad) leave into rcr fsubp call add or add sub inc dec push push pop popa imul addb movsb test ret enter add add rcr fucom call add or push sbb sub xor dec push pop pop imul lea lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor cmp push pop bound jno jnp xchg movsl stos scas mov mov add add (bad) in out repz incb or daa sub inc dec push pop pop bound jb jl xchg stos mov mov aad loopne ljmp add adc das xor aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop arpl jae jge mov cmpsl add (bad) int3 rcl faddl add loope jmp idiv add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or sub xor ds dec dec push pop pop imul test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop add insl jb jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov (bad) fneni(8087 out lock sti add add and aas inc dec push push pop pusha imul addl enter out repnz add or pop sbb add dec dec push push pop arpl jae jle mov test mov mov xlat fsub out repnz std add or sub xor ds dec add dec push pop pop fs je jg mov mov mov aad (bad) ljmp push adc push and das xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor cmp dec push push pop pusha add push jne addb movsb test ret leave into rcr fucom call add or push sbb sub cmp dec push push pop pop gs jne jg mov test ret enter (bad) ljmp push adc push and sub inc dec push push pop popa insb jno jbe addl mov rol iret aam (bad) jmp add push adc sbb cmp push pop popa insb jno jnp xchg stos mov mov aad (bad) jmp add push adc push and sub inc dec push push pop popa data16 jno jnp add addb movsl stos mov mov aam (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa add jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jno jl add mov mov fcomp loop in repnz add adc pop and cs ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 out lock cli add pop and das xor ds dec dec push pop pop arpl jae jge mov add popf mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop fs je jg mov add add ret enter fucom call add or pop sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or daa sub cmp dec push push pop pop fs je jle mov test mov rcr fucom call add or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb stos scas mov mov add (bad) leave iret aam fsubp jmp add push adc sbb aaa cmp push pop popa insb jno jl xchg movsl stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov add aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl je jg mov test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat add fsub out icebp idiv add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add pop or daa sub cmp dec push push pop pusha imul jg mov test ret leave into rcr fldl add call add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test ret leave into rcr fucom call add or daa sub aaa cmp inc dec push push pop popa imul addb stos mov mov aad (bad) ljmp add cld add or sub xor aas inc dec push push pop insw je orl mov ror (bad) fucom in repz add adc and xor cmp inc dec push push pop popa insb jno jnp xchg movsl stos scas mov mov fcomp jecxz in repnz add or push sbb sub xor inc dec dec push pop pop imul mov test mov mov (bad) fsub out lock cli add push and xor cmp push pop bound jno jl xchg movsl stos scas mov mov fcomp jecxz in repnz add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov fcomp jecxz in repnz add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov aad (bad) jmp add push adc sbb xor cmp add add push push pop popa data16 jno jnp test movsb test ret enter fucom out repnz add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov aad loopne ljmp push adc push and sub inc add dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov fcomp jecxz in repnz add or push sbb sub xor dec push pop pop fs je jle mov test mov mov (bad) fneni(8087 in lock incb push adc push and sub inc dec push push pop popa imul addl mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push add imul addl mov mov fcomp jecxz in repnz std add or push sbb sub xor dec push add add imul mov lods mov mov (bad) fneni(8087 out lock cli add pop and xor ds dec dec push push pop bound jno jl xchg stos mov mov aam fsubp jmp add or daa sub cmp dec push push pop add pusha gs je jg mov test ret rcl fsub out icebp idiv add pop and inc inc dec push push pop add imul addb mov mov aam fsubp jmp add or es cmp dec push push pop pop fs je jle mov test mov mov (bad) fsub out lock add pop and cs ds dec dec push pop pop arpl jb jl xchg stos mov mov aad (bad) ljmp push adc sbb aaa cmp inc dec push push pop pusha add add jo jp test movsb test ret enter fucom out repnz add or push sbb and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor cmp pop pop imul add add add outsb je jle add movsb test ret add into rcr fsubp call add or pop sbb sub cmp dec dec push pop pop imul mov lods mov mov xlat fsub out lock sti add pop and das xor ds dec dec push pop pop bound add ja (bad) xchg stos mov mov aad (bad) ljmp push adc sbb aaa cmp inc dec push push pop pusha imul addb movsb test ret enter fucom call add or push sbb sub xor dec push pop pop imul add add jge mov cmpsl lods mov mov (bad) fneni(8087 in lock sti add pop and das xor ds dec dec push pop pop bound jb jl mov test mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl add add jns orl cmpsl lods mov mov (bad) fsub out lock sti add pop and cs ds dec dec push pop pop bound jb jl xchg movsl stos mov mov aam (bad) jmp add or daa sub aaa cmp inc dec push push pop pusha gs jne add mov test ret enter fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop arpl jae jge xchg cmpsb stos mov mov aad loopne ljmp push adc push and sub inc dec push push pop popa imul addb add add lahf movsb test (bad) lret rcl fcmovu in out hlt stc incb push adc sbb aaa cmp inc dec push push pop popa imul addb mov mov aam fsubp call add or daa sub cmp dec push push pop pop gs je jle mov test mov mov xlat fsub out icebp idiv add pop and das xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) jmp add push adc sbb aaa cmp inc dec push push pop pusha imul jg mov (bad) xchg cltd sahf mov mov fcomp loop in icebp idiv add or push sbb and aas inc dec dec push pop pop arpl jae jge xchg cmpsb stos mov mov aad loopne out hlt stc incb or adc sbb aaa cmp inc dec push pop pop bound jb jl xchg fwait mov mov aam (bad) jmp add push adc sbb aaa cmp inc dec push push pop pusha imul jg mov test ret enter fucom out repnz add or push sbb sub xor dec push pop pop imul lea add mov mov (bad) fneni(8087 out lock cli incl pop and xor ds dec dec push pop pop bound jb jl xchg movsl stos mov mov aam fsubp jmp add or daa sub aaa cmp inc dec push push pop pusha imul jg mov nop xchg lcall add mov fcomp jecxz out repz std add or sub xor dec push pop pop imul lea mov ret xlat fsubp in repz add movhps es push pop pusha push mov mov ret lret (bad) in repz add adc add pop push and xor inc dec push pop pop outsb ja test mov (bad) lret rcr loopne out idiv add or daa sub aaa cmp inc dec push push pop pusha imul jg mov test ret enter fucom out repnz add or push sbb and aas inc dec dec push pop add pop imul lea lods mov mov (bad) fndisi(8087 out lock add and sub aaa cmp push pop pop bound imul (bad) xchg cltd lahf test into xlat fsubp in repnz incl unpcklps pop and aas inc dec dec push pop pusha imul addl add xchg fwait mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg lods mov mov aad loopne jmp cmc cli add pop and das xor ds dec dec push pop pop arpl jae jge mov add mov (bad) fndisi(8087 out icebp idiv add or adc das xor dec push pop pop imul lea lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop imul xchg xchg fwait mov add add mov mov rcl fneni(8087 in lock sti add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound jno jl xchg cmpsb stos mov add iret aam (bad) jmp add push adc push and sub inc dec push push pop popa data16 jno jnp test movsl stos scas mov mov (bad) jecxz in repz std add or daa sub aaa cmp inc dec push push pop pusha imul jg mov test add add fcomp loop in repnz add or pop sbb sub cmp dec push push pop pop gs je jg mov stos mov mov aad (bad) ljmp push adc pop and xor ds dec dec push pop pop bound jb jl xchg cmpsl lods mov mov (bad) lret rcl fneni(8087 out lock sti add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and das xor aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov add rcl fneni(8087 in lock cli incl pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and das xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov fildl add add out lock cli add pop and cs inc inc dec push push pop pop gs je jg mov test ret enter fcomp jecxz in repz std add or daa sub ss inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz add add in repz std add or daa sub ss inc dec push push pop popa imul addb movsb stos scas mov mov (bad) jecxz in repz std add or daa sub ss inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz in repz std add or daa sub ss inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add pop and cs ds dec dec push pop pop arpl jb jge xchg cmpsb lods mov mov aad loopne ljmp add add push adc push and xor cmp pop pop bound jb jl xchg stos mov mov aam (bad) jmp add or daa sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add add or daa sub cmp inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test ret leave into rcr fucom call add or pop sbb sub cmp push pop popa data16 jno jl xchg cmpsb stos mov mov aad loopne ljmp adc xor push pop pop arpl jae jle mov stos scas mov rol rcl fneni(8087 in lock cli incl unpcklps push add xor cmp push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov stos scas mov mov fcomp jecxz in repz std add or daa add sub inc dec push push pop bound jb jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and cs ds dec dec push pop pop gs je jg mov test mov mov rcr fucom call add or push sbb sub add xor dec push pop pop imul lea lods mov mov (bad) fsub out lock sti add pop and das xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and sub add cmp push pop popa data16 jno jnp xchg movsl stos mov mov aam fsubp jmp add or daa sub aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov (bad) jecxz out repz std add or daa sub ss add inc dec push push pop pusha gs jne jg mov mov rol rcl fneni(8087 in lock cli incl sbb sub xor dec push pop pop imul mov lods mov mov fcomp loop in repnz add or push sbb and aas inc dec dec push add imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock sti add and sub xor dec push pop pop imul mov lods mov mov out repnz add or push sbb sub cmp dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsb test ret leave into rcr fucom call add or daa sub ss inc dec push push pop pusha gs jne jg add add movsb test ret enter fucom out repnz std add or es cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or pop sbb es cmp dec push push pop pusha gs jne jg mov add xchg cltd sahf mov mov rcr fsubp call add pop and aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and das xor ds dec dec push pop pop arpl jb jge xchg pushf mov mov aad loopne ljmp unpcklps pop and xor ds dec dec push pop pop bound jb jge xchg stos mov mov aad (bad) ljmp push adc push and xor cmp pop pop bound jb jl xchg add cmpsb stos mov mov aad (bad) jmp add push adc push and xor cmp push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add or adc pop sub xor ds dec dec push pop pop arpl jb jge xchg mov add add add add fucom jmp cli add adc push es push push pop outsb jbe test mov (bad) fninit ljmp push adc push and xor cmp push pop bound jno jl xchg lods mov mov aad loopne ljmp unpcklps add sbb and xor ds dec dec push pop pop bound jb jl xchg lods mov mov aad loopne ljmp unpcklps push and xor ds dec add pop pop arpl jae jge mov test mov mov (bad) fsub out icebp idiv add or adc and aas inc dec dec pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and cs ds dec dec push pop pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or sbb daa cs add inc inc dec push push pop popa insb jno jl xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pop fs je jle mov test ret leave into rcr fsubp call add or daa sub inc add add pop popa data16 jno jnp xchg mov mov (bad) fndisi(8087 out icebp idiv add or adc das xor dec push pop pop imul nop xchg fwait mov mov aad (bad) ljmp unpcklps push and add xor aas inc dec dec add imul mov lods mov mov xlat fucom call add or pop sbb es ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop add bound jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and inc inc dec dec push pop pop fs je jg mov test ret enter fucom call add or daa sub inc dec push push pop popa insb add jno jl xchg cmpsb stos mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul jbe addb movsl stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae add mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or sub inc dec push push pop bound jno jl xchg add mov stos mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom ljmp add adc pop and das xor aas inc dec dec push pop pop arpl jae jge mov add mov mov (bad) fsub out icebp idiv add or adc xor push push pop pop gs je jg mov test ret leave into rcr fsubp call add or daa sub inc dec push push pop bound jno jl xchg add rol rcl fneni(8087 in out cmc cli incl unpcklps pop and cs aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov test add mov mov fcomp jecxz in repz std add or sub xor ds dec add pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl mov add fcmovu in out hlt stc incb push adc push and xor cmp pop pop arpl jb jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pusha gs jne jg mov test ret enter into rcr fucom call add or pop sbb daa sub cmp dec push push pop pusha data16 jno jnp xchg movsl stos mov mov aad (bad) jmp add push adc push and xor cmp pop pop imul mov mov mov fadds add fucom out repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb aaa cmp push pop popa insb jno jl xchg stos mov mov aad loopne add ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out add idiv add or pop sbb sub cmp dec push push pop pusha imul jg mov stos scas mov mov (bad) jecxz out add repz incb or sub inc dec push push pop popa data16 jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add pop or pop sbb es cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) jecxz out repz incb or sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp add unpcklps pop and add xor dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or daa sub ss inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock sti add add sbb and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz incb or add add daa sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc sbb cmp push pop bound jno jl xchg movsl stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg lods mov mov fndisi(8087 out lock add or adc das xor dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or daa sub aaa cmp add inc inc dec push push pop popa imul addb mov stos mov mov aad loopne jmp cmc cli add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp add add push pop pop gs jne jg mov test ret leave into rcr fsubp call add or sub inc dec push push pop popa insb jno jnp xchg movsl stos mov mov aad (bad) jmp sti cs fs je jg mov sahf movsb test ret enter fucom call add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc sbb cmp pop pop bound jb js (bad) mov add cmpsl lods mov mov (bad) fsub out icebp idiv add or adc das xor dec push pop pop fs je jle mov test mov mov fcomp loop in repnz add or push sbb sub cmp dec push push pop pusha imul addb movsb test add mov mov fcomp jecxz in repz std add or daa sub inc inc dec push pop pusha gs jne addb stos mov mov xlat fsub out lock add pop and das xor ds dec dec push pop pop bound jb jl xchg lods mov mov aad loopne ljmp push adc push and sub inc dec push push pop popa imul addb movsl stos scas mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz in repz std add or pop sbb sub cmp dec push push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add pop and ds dec dec push pop pop gs je jg mov test ret enter faddl add out icebp idiv add or adc das xor dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 out lock cli incl pop and xor ds dec dec push pop pop bound add jge mov cmpsl lods mov mov (bad) fneni(8087 add jmp cmc cli add pop and cs ds dec dec push pop pop bound jb jl xchg lods mov mov aad loopne ljmp push adc push and sub inc dec push push pop popa data16 jno jnp test movsl stos scas mov mov (bad) jecxz add repz std add or pop sbb sub cmp dec push push pop pop imul xchg pushf movsb stos mov mov aad (bad) ljmp adc sbb sub pop pusha push mov mov (bad) into aad in repz add and sub ss inc dec add pop popa imul addb movsl stos scas mov mov (bad) in out repz add add unpcklps pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push add add bound jno jl xchg stos mov mov aam (bad) jmp add push adc push and xor cmp push pop popa insb jno jnp xchg movsl stos scas mov ret rcr fucom call add or push sbb daa sub aaa cmp inc dec push push pop popa add imul addl mov rcr fsubp jmp add unpcklps push and cs ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and sub dec dec push push pop bound jno ja addl mov mov fcmovu in out hlt stc incb or adc sbb cmp pop pop imul mov mov mov fneni(8087 out icebp clc decl push adc cmp push push pop bound jno jl xchg add scas mov mov (bad) in repz incb or adc push and sub xor aas inc dec dec push pop pop arpl jae jle mov test (bad) aad loopne ljmp adc sbb daa sub aaa cmp inc dec push push pop popa imul addb cmpsb stos mov mov add (bad) aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov add add fcmovu in out hlt stc incl unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub add in icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave iret aam (bad) jmp add push adc push and xor cmp pop pop bound jb jl xchg lods mov mov (bad) faddl loop in add add idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out repnz add pop or pop sbb es cmp dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or adc xor dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or add adc sbb aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpcklps pop add aas inc dec dec push pop pop imul mov lods mov mov xlat fucom call add or add add add daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fneni(8087 out icebp idiv add or adc xor dec push pop pop fs je test movsb test ret enter fucom call add or sub add cmp pop pop fs jne jg mov stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp add push push pop pusha gs jne jg mov stos scas mov mov (bad) jecxz out repz incb or adc push and sub dec dec push pop pop bound jb jl xchg lods mov add fsub out icebp idiv add or push sbb sub cmp dec add add pop pusha gs jne jg mov test (bad) lret rcl fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov mov mov fcomp loop in repnz std add or daa sub aaa cmp push pop add add insb jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop popa imul add jno jnp xchg movsl stos mov mov aad (bad) ljmp or adc das xor dec push pop pop fs je jg mov test ret leave into rcr jecxz out repz incb or sub dec dec push pop pusha gs jne jg add lahf movsb stos scas mov mov (bad) in out repz incb or adc sbb cmp push pop bound jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out icebp idiv add or adc xor dec push pop pop fs jne jg mov add add mov mov (bad) jecxz out repz incb or adc sbb cmp ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb add mov mov aam (bad) jmp add adc sbb cmp push pop bound jb jl xchg test mov mov xlat fucom out repnz add or push sbb es cmp dec push push pop pusha imul addb movsl stos mov mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pop fs je jg test movsl stos mov mov add add mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jb jge xchg test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop bound jb jl xchg stos mov mov add (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul mov test (bad) leave into aam fsubp jmp add or daa sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad fneni(8087 in lock cli incl pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test ret enter fsubp add add out repz std add or daa sub inc dec push push pop popa data16 jp test movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov rcl fsub out repnz add cld add or pop sbb es ss inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) in out hlt stc incb or adc push and xor cmp pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 out icebp idiv add add and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos mov mov aad loopne ljmp adc adc das xor dec push pop pop imul mov lods mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or adc push and sub inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fsubp call add or daa add sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov (bad) jecxz out repz std add or sub inc dec push push pop bound jb jl xchg stos mov mov (bad) fneni(8087 in lock cli add pop and das xor add add inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb es ss inc dec push push pop pusha imul jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and cs aas inc add push pop pop arpl jae jle mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec push push pop pop gs je jg mov test ret enter fucom call add unpcklps pop and das xor ds dec dec push add pop pop imul mov lods mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add add adc das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or adc push and sub dec dec push pop pop bound add jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add and inc dec dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs je jg add add lahf movsb test (bad) leave into rcr fsubp jmp add push adc push and sub dec dec add pop arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb es cmp dec push push pop pusha imul addb nop xchg fwait mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out repnz add or pop sbb es cmp dec push push pop gs jne jg mov add movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test add add rcr fsubp call add or sub inc dec push push pop bound jno jl xchg stos mov mov (bad) fneni(8087 out lock add and aas inc dec dec push pop pop imul mov scas mov mov add add leave into rcr fsubp call add or daa sub inc dec push push pop popa data16 jno jnp xchg stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov add (bad) fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop fs je jg mov test ret enter fsubp call add or sub inc dec push push pop popa insb jno jl xchg stos mov mov aad loopne out lock sti add and aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz std add or sub inc dec push push pop popa insb jno jl xchg stos mov mov (bad) in out repz stc incb push adc push and cs ds dec dec push pop pop imul mov stos scas mov mov (bad) in out repz incb or adc push and sub dec dec push pop pop bound jb jl xchg lods mov mov rcl fsub out icebp idiv add or pop sbb es cmp dec push push pop pusha gs jne addb movsl stos scas mov mov (bad) in out repz incb or adc push and xor cmp pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 out lock sti add add adc xor dec push pop pop imul mov scas mov mov fcomp loop lock add and sub xor push push pop pop gs je jg mov test mov (bad) in out repz incb or adc add cmp pop pop bound jb jl xchg stos mov mov aad loopne ljmp or adc xor dec push pop pop fs je jg mov test ret enter fucom call add or add sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out icebp idiv add or adc xor add add cmp inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor inc dec dec push pop pop add jo jnp test movsl stos scas mov mov (bad) in out repz incb or adc sbb cmp push pop bound outsb jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or adc xor add add push pop pop fs je jg mov test ret enter fucom call add or pop sbb daa sub aaa cmp inc push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov cmpsl lods mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul (bad) xchg cltd lahf add mov (bad) in out hlt stc incb or adc push and sub inc dec push push pop bound add jno jl xchg add (bad) int xlat fucom out repnz add or pop sbb es ss inc dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl add add addb movsl stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop add je jle mov test ret enter fucom call add or daa sub inc dec push push pop bound jae jge add orl stos mov mov fndisi(8087 out icebp idiv add push adc push and xor cmp pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb add add mov (bad) fneni(8087 out lock add and aas inc dec dec push pop pusha imul addb cmpsl mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop fs je jg mov test add iret aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test add leave into aam fsubp jmp add push adc push and xor cmp pop pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out lock add or push sbb and inc inc dec dec push pop pop gs je jg mov test ret enter add add fnop in out cmc cli incl pop and aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or pop sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz incb or sub dec dec push pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli add and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in add repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp incl and sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc add add add push adc push and sub dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out icebp idiv add or adc xor push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or daa sub inc dec push push pop bound jb jl xchg stos mov mov aad loopne jmp cmc sti add pop and aas inc dec dec push pop pop fs je jg mov test ret enter fsubp call add or add sbb xor push pop bound jb jl xchg lods mov mov (bad) jecxz out repz incb or adc sbb cmp push pop bound jb jge xchg lods mov mov aad loopne jmp cmc cli add pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push add cs cmp inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jb jl xchg cmpsl lods mov mov (bad) fndisi(8087 out icebp idiv add or adc das xor add add push pop pop imul mov mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa imul addb cmpsb stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop add jo jnp test movsl stos mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop bound jb jl xchg mov mov aad loopne jmp cmc add add or daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fnop in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop arpl add add add jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jb jge add pushf mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov test ret lret rcl fneni(8087 out lock sti add and add dec push push pop pusha gs jne jg mov (bad) xchg lcall mov (bad) in out repz incb or adc sbb cmp pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 out icebp idiv add or adc xor dec push pop pop imul mov add sahf mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test add add (bad) int xlat fsub out icebp clc incb or adc push and sub dec dec push push pop bound jb jl xchg stos mov mov rcl fndisi(8087 out lock add and sub xor dec push pop pop fs je jg mov test add mov rcr fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov add int3 rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) jecxz out repz incb or sub xor aas inc dec dec push pop pop imul mov lods mov mov add add fsub out icebp idiv add or adc sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat faddl loope in icebp idiv add or push sbb and inc inc dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop bound jno jl xchg stos mov mov aad loopne ljmp add lock cli incl pop and das xor ds dec dec push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or add add push sbb and inc inc dec dec push pop pop fs jne jg mov test (bad) leave into rcr fsubp call add or sub inc dec push push pop popa insb jno jl mov test mov mov xlat fucom out repnz add or pop sbb add add es cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incb push adc push and xor cmp pop pop bound jb jl xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb and add xor dec push pop pop fs je jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or push sbb es cmp add dec push push pop pusha imul addb movsl stos mov mov (bad) jecxz out repz incb or adc push and das xor inc inc dec push pop arpl jp mov mov ret fabs jmp push or push sbb and inc inc dec dec push pop pop add jo jp add add lahf movsb stos scas mov mov (bad) jecxz out hlt stc incb or adc push and sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock add and aas inc dec dec push pop pop imul mov add add lods mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in icebp testl adc sbb aaa cmp inc dec push push pop popa insb jno jl xchg add mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop arpl jae jle mov mov mov fcomp loop in repnz std add or daa sub inc dec push push pop popa imul addb movsl add stos mov mov aam (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor push push pop pusha gs je jg mov test add mov rcr fucom call add or sub inc dec push push pop popa data16 ja (bad) xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and cs aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) int3 rcl fsub out icebp idiv add or adc das xor dec push pop pop fs je jg mov test mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov add add (bad) jecxz out repz incb or adc sbb cmp push pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps push and xor ds dec push push pop pusha gs jne jg mov add (bad) leave into aam add fsubp jmp add or sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out jmp cmc sti add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop fs jne jg mov lods mov mov fcomp jecxz out hlt cli incl cs inc dec push push pusha imul mov mov xlat fucom out icebp idiv add or push sbb sub xor dec push pop pop fs je jg mov test ret leave into aam fsubp jmp add push adc sbb cmp push push pop bound jno jl xchg mov mov (bad) fndisi(8087 out lock sti add pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push add imul mov lods mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha gs jne jg mov stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl add jb jge xchg cmpsl lods mov mov (bad) fneni(8087 out lock add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov rcl fsub out repnz add or push sbb sub cmp dec push push pop pop gs add outsl je jg mov test ret enter fucom out repnz add or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop pusha imul jp test movsb test ret leave into rcr loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg add mov test ret leave into rcr fucom call add or daa sub inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc push and add aas inc dec dec push pop pop imul mov add xchg cwtl popf mov mov xlat fsub out repnz add or push sbb daa sub ss inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb adc push and xor ds dec dec push pop pop bound jae jge mov test add lods mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and sub dec dec push pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock sti add pop and aas inc dec dec push pop pop imul mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov add add lret fcmovu in out hlt stc incb push adc push and xor inc inc dec dec push pop pop gs je jg mov test ret enter fucom call add or pop sbb daa sub cmp dec push push pop popa imul addb movsl stos scas mov mov add aam fsubp jmp add push adc sbb aaa cmp push pop bound jno jl xchg stos mov mov aad (bad) ljmp push adc push and xor cmp pop pop fs je jg mov stos mov mov xlat fucom add call add unpckhps and inc inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp call add push adc sbb cmp inc dec dec push pop add insb jb jl xchg lods mov mov (bad) fneni(8087 in lock add sti add pop and aas inc dec dec push pop pop imul xchg xchg pushf mov mov fcomp loop out repz incl adc pop daa xor ds dec push pop pop arpl jae jge mov cmpsl mov mov fucom call add or daa sub add cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov fneni(8087 in lock cli incl pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc add add push pop pop gs je jg mov scas mov mov (bad) in out hlt stc incb unpckhps pop and das add push push pop pop gs je jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push add add imul addb movsl stos mov mov aam (bad) jmp add unpcklps push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 out lock sti add or adc xor dec push pop pop add add je jle mov test mov mov xlat fsub out repnz add or pop sbb es cmp dec push push pop pusha imul addb movsb test lret rcl fneni(8087 out lock sti add and aas inc dec dec push pop pop imul add test movsb test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and xor cmp pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps push and das xor ds dec dec push pop pop fs jne jg mov test ret leave into rcr fsubp call add or daa sub inc dec push push pop popa insb jno jl xchg add mov mov aad (bad) ljmp adc sbb and inc inc dec push push pop pop gs je jg mov test ret enter fucom call add or pop sbb daa sub ss add push push pop bound jno jl xchg add mov mov aad (bad) ljmp push adc push and xor cmp pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb daa sub inc dec push push pop bound jno jl xchg movsl stos mov add aam (bad) jmp add push adc sbb cmp push pop bound jb jl (bad) mov cmpsl lods mov mov aad loopne ljmp push adc push and xor cmp push pop bound jb jge xchg stos mov mov add add vaddsubps fnop in out hlt cli incl push adc push and xor cmp pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps push and xor cmp push pop bound jb jge xchg lods mov mov add add rcl fneni(8087 in out cmc cli incl unpcklps push and xor ds dec dec pop pusha imul addb movsl stos scas mov mov (bad) jecxz in repz std add or daa sub ss inc dec push push pop pusha gs jne addb movsb test add lret add add fsubp jmp add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam fild in out repz incb or adc sbb aaa cmp push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc push and sub inc dec push push pop popa insb jno jl mov test mov mov xlat fucom out add add idiv add or push sbb sub cmp dec push push pop pusha gs je jg mov test (bad) leave into rcr fsubp call incb or adc push and sub inc dec push push pop bound jno jl xchg stos mov mov aad loopne ljmp add add incl pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul mov scas mov mov fcomp jecxz in repnz add add pop or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov rol rcl fneni(8087 out lock sti add pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov rcr fucom call add or add adc sbb es cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) in out repz incb or adc sbb cmp push pop bound jb jl xchg stos mov mov (bad) fneni(8087 in lock cli incl add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop fs je jg mov test ret enter fucom ljmp unpcklps pop and add add xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add add pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incl push adc push and xor add add ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 out lock add or adc das xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp add inc dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or sub cmp dec push push pop pusha gs jne orl enter out repz add movhps cmp push push pop insw jne test mov ret rcl fsub out icebp idiv add pop and cs ds dec dec push pop pop bound jb jl xchg movsl stos scas mov mov fcomp jecxz in repnz add or pop sbb sub cmp dec push push pop pop gs jne jg mov test add scas mov mov fcomp loop in repnz add or push sbb sub xor dec push pop pop imul mov scas mov mov xlat fsub out icebp idiv add or push sbb and aas dec push pop pop arpl jae jle mov test mov mov add (bad) into aad in repz add adc pop es push push pop bound jno jl xchg movsl stos mov add fneni(8087 in lock cli incl pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad loopne ljmp add hlt cli incl unpcklps push and xor cmp push pop bound jb jl xchg stos mov mov aad (bad) ljmp unpcklps push and xor cmp pop pop bound jb jl xchg stos mov mov aad loopne ljmp add add add pop and cs ds dec dec push pop pop arpl jbe addb movsl stos scas mov mov fcmovu in out hlt stc incb or adc push and sub inc dec push push pop bound jno jl xchg movsl stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add and aas inc dec dec push pop add push je jg mov test mov mov xlat fucom call add or add pop sbb es cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa imul addb stos scas mov mov (bad) in out hlt stc incb push adc push and add add sub dec dec push pop pop bound jb jl xchg stos mov mov aad loopne jmp cmc sti add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out repnz add or pop sbb es add cmp dec push push pop pusha imul addb mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor add add inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) jecxz out repz std add or sub inc dec push push pop popa data16 ja addl mov rol iret aad (bad) ljmp push adc pop and xor ds add dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 out lock cli add and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push add pusha gs jne jg mov test ret enter fucom call add or pop sbb es aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz std or daa sub inc dec push push pop bound insl jb jge xchg add leave into aam fsubp call add or daa sub inc dec push push pop bound jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl add jae jle mov cmpsl lods mov mov xlat fsub out icebp idiv add or adc xor push push pop pop fs je jg mov test ret enter fucom call add or sbb and xor ds dec dec push pop pop arpl jne test mov mov mov (bad) in lock add unpcklps push and je,pn jg mov test ret leave into rcr fsubp call add push adc sbb aaa cmp inc dec push add bound jb jl xchg stos mov mov aad fild in out hlt stc incl push adc push and xor cmp push pop bound jb jl xchg stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov (bad) fneni(8087 in add lock cli incl unpcklps pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad loopne ljmp push adc push and xor cmp push pop imul addb movsl stos scas mov mov fcmovu in out hlt stc add add push adc sbb cmp push pop popa data16 jno jnp xchg mov mov aad loopne ljmp unpcklps push and xor ds dec dec push push pop bound jb jl xchg stos mov mov aad (bad) ljmp add unpcklps push and xor cmp push pop bound jno jl xchg movsl stos mov mov aam (bad) ljmp push adc push and sub inc dec push push pop popa insb jno jnp xchg movsl stos scas mov mov (bad) in out hlt stc incb or add push adc push and sub inc dec push push pop popa imul addb cmpsl lods mov mov (bad) fneni(8087 in lock add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock sti add sbb and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add or adc das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli add pop add add add dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop imul mov scas mov mov fsub out icebp idiv add or push sbb daa sub add add xor cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb daa sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb sub add add inc inc dec push push pop pop gs je jg mov test ret enter fucom out icebp idiv add or push sbb sub cmp dec push push pop pop fs je jp test movsb test ret enter fucom out repnz add or push sbb es cmp add dec push push pop pusha gs jne jg mov test ret enter fucom out hlt stc incb or adc sbb cmp push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add or sub inc add dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz in repz std add or daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec add imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul mov scas mov mov (bad) in out hlt cli incl unpcklps and sub dec dec push pop pop add add imul mov lods mov mov (bad) fndisi(8087 out lock cli add and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne jmp cmc cli incl pop and aas inc dec dec push pop pusha imul add add test movsb test ret enter fucom out icebp idiv add add sub xor ds dec dec push pop pop bound jb jge xchg stos mov mov aad (bad) jmp add push adc sbb aaa cmp inc dec push push pop pusha imul add addb movsb test ret leave into rcr fucom call add or push sbb sub cmp dec push push pop bound jno jl xchg stos mov mov aad (bad) jmp add push adc sbb aaa cmp push pop popa imul addl add mov stos mov mov aam (bad) jmp add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov fcomp jecxz in repz std add or daa sub cmp dec push push pop pusha gs jne jg mov add scas mov mov fcomp jecxz in repnz std add or pop sbb daa sub ss inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha add jno jnp mov add add mov rol rcl fndisi(8087 out lock add pop and das xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and cs ds dec dec push pop pop arpl jb jge xchg add add rol rcl fneni(8087 in lock cli incl pop and cs ds dec dec push pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and cs ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl jb jge xchg test mov rcl fsub out icebp idiv add or push sbb daa sub cmp push pop data16 jne (bad) mov mov ror (bad) fldl in hlt sti add adc and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop fs je jg mov test ret enter fucom call add or daa add dec dec push push pop bound jb jl xchg stos mov mov (bad) fneni(8087 out lock cli add and aas inc dec dec push pop pop fs je jg mov test ret enter in out hlt cli incl sldt add pop and aas inc dec dec push pop pop fs je jg mov test ret enter fucom call add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps push and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha gs add addb movsl stos scas mov mov (bad) jecxz out repz incb or daa add add inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add adc sbb aaa cmp push pop pop arpl jae jge mov stos scas mov mov (bad) in out repz incb or adc push and sub add add pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fneni(8087 out lock add and aas inc dec dec push pop pop imul mov mov mov fcomp loop in repnz add or pop sbb daa sub ss inc add push pop popa imul addb movsl stos mov mov aam (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor push pop pop imul add mov mov xlat fsub call add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or push sbb es cmp dec push push pop pusha imul add addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and xor cmp pop pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop fs je jg add test movsb test (bad) leave into aam fsubp jmp add or sub inc dec push push pop bound jbe addl mov rol rcl fneni(8087 in out cmc cli incl unpcklps push and xor ds dec dec push pop pop bound jb jl xchg add add mov mov aad loopne ljmp unpcklps push and xor cmp pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg add mov (bad) fneni(8087 in lock cli incl pop and xor ds dec dec push pop pop bound imul lea lods mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul lea add test (bad) leave into aam fsubp jmp add or daa sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb aaa cmp push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) jmp add push adc push and sub dec dec push push pop bound jb jl xchg cmpsl lods mov add mov aad loopne jmp cmc sti add pop and das xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov fneni(8087 out lock cli add pop and das xor aas inc dec dec push pop pop gs je jg mov test ret enter int fcomp loop in add stc incb or adc sbb aaa cmp push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) in out hlt stc incb or adc sbb aaa cmp push pop popa imul addb movsl stos scas mov mov add add (bad) jecxz out repz incb or adc sbb aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz incb or adc sbb aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov flds add add add fsubp jmp push or adc das xor dec push pop pop imul lea lods mov mov (bad) fndisi(8087 out lock add and cmp dec push push pop pusha gs je jg mov test mov mov xlat fucom add in icebp idiv add or push sbb sub cmp dec push push pop pop gs je jg mov test mov mov xlat fucom out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or adc push and sub dec dec push push pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and xor cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz incb add or sub dec dec push push pop bound jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop imul lea lods mov mov (bad) fneni(8087 in lock cli incl pop and cs aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add add add das xor ds dec dec push pop pop gs je jg mov test ret enter fucom out repnz add or push sbb sub xor push push pop pusha gs je jg mov test ret enter fucom out repnz add or push sbb add add sub cmp dec push push pop pusha gs jne jg mov test ret enter (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or add daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub inc dec push push pop popa data16 jno jnp xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and add add add cmp inc dec dec push pop pop bound jb jge xchg lods mov mov aad loopne ljmp unpcklps push and xor cmp push pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and sub cmp push pop popa imul addl mov mov (bad) in out repz incb or sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add push adc push and sub add inc inc dec push push pop popa insb jno jl xchg stos mov mov (bad) in out hlt stc incb push adc push and sub dec dec push push pop bound jno jl xchg stos mov mov aad loopne ljmp push adc push and xor cmp add pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps push and xor cmp pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop add add insl jb jl xchg lods mov mov aad loopne ljmp unpcklps pop and cs add inc dec dec push pop pop imul lea lods mov mov xlat fsub out idiv add or adc das xor aas inc dec dec push pop pop add imul mov mov mov fcomp jecxz in repnz add or pop sbb daa sub cmp dec push push pop popa insb jno jl xchg movsl stos mov mov aad (bad) ljmp unpcklps push and xor cmp push pop bound jno add addl mov rol iret aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pop gs jne jg add add movsb test mov fcmovu in out hlt stc incb push adc and sub inc dec push push pop popa insb jno jnp xchg cmpsl lods mov mov loopne out cmc cld add adc push and xor aas inc dec push pop gs jae (bad) mov scas mov mov add add aad loopne jmp idiv add push adc push and cs ds dec dec push pop pusha imul mov mov ret lret loopne lock add sub cmp push pop pusha outsl jbe pop aas jno addl mov mov (bad) in out hlt stc incb or adc push and sub dec push push pop bound jb jl xchg lods mov mov aad loopne ljmp pop push and dec push popa imul pushf movsb stos mov mov xlat fsub out icebp idiv add adc insl jb jge xchg lods mov add mov (bad) in das cmp bound ja test lods mov mov and jns xchg add enter jecxz repnz add adc and xor ds dec push imul std add xchg popf movsb lods mov ret (bad) jmp push adc cmp pop pop outsl jbe test lods mov rol (bad) cmc pop dec push pop popa push mov mov vpmullw in repz add adc and das ss dec push pop arpl js mov mov (bad) int3 aam loop icebp clc decl adc push add add xor inc dec push pop pop imul (bad) xchg lahf cmpsb mov (bad) out idiv add unpcklps pop and xor inc pop orl mov (bad) (bad) adc sub cmp aam jecxz repnz add adc pop es push pop popa imul sahf movsl lods mov (bad) lret roll add fsub out idiv push or push sbb sub cmp inc dec push pop gs je (bad) mov mov mov (bad) incb mov dec push pop pop imul out incl push push sbb imul lcall iret xlat fsubp in cmc cld add adc and xor aas add add add inc dec push pop fs jae (bad) mov mov (bad) fnclex jmp or xor inc dec dec push pop imul xchg adc push jp fwait mov (bad) int (bad) out out cmc cld add bndldx daa sub dec push pop popa insl je addl add add out testl sub cmp push pop pop data16 (bad) mov mov ret fsub out idiv push or sbb sub cmp inc dec dec push pop pop imul mov mov mov fcomp loop in repnz add or push sbb sub xor add inc dec dec push pop pop imul mov mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul (bad) xchg lcall mov fcomp jecxz in repnz add or pop sbb es cmp dec add push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor ds dec dec push pop pop bound jno jl xchg stos mov mov aad (bad) in hlt sti add adc xor dec push pop pop add add add je jg mov test ret leave into rcr (bad) in hlt sti add movhps inc inc dec push push pop popa data16 jno jnp xchg scas mov mov fcomp jecxz in repnz add or pop sbb sub cmp pop pop bound jb jl xchg add add mov aad (bad) ljmp push adc push and xor cmp push pop popa outsb jae jge mov cmpsl lods mov mov aad loopne ljmp unpcklps push and xor cmp push pop popa insb jno jnp addl add add rol iret aam (bad) jmp add push adc sbb aaa cmp inc dec push push pop pusha imul jg mov test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop arpl jb jge xchg stos mov mov aad (bad) jmp add push adc sbb aaa cmp push pop popa imul addb movsb test ret enter fucom out repnz add or push sbb sub xor dec push pop pop imul lea lods add mov mov (bad) fsub out lock add pop and das xor ds dec dec push pop pop arpl jb jl xchg add lret rcl fnop in out hlt stc incl unpcklps push and sub inc dec push push pop popa imul addb movsb test add add rcr fucom out repnz add or push sbb sub xor dec push pop pop imul lea lods mov mov (bad) fneni(8087 in out cmc cli incl unpcklps push and xor cmp push pop popa insb jno jnp xchg movsl stos scas mov add rcr fsubp call add or pop sbb es cmp dec push push pop pop fs je jle mov test mov mov fcomp loop in icebp idiv add or push sbb sub xor dec push pop pop imul lea lods mov mov add rol rcl fnop in out hlt cli incl push adc push and xor cmp push pop popa insb jno jnp xchg movsl stos scas mov mov fcomp loop in repnz add or push sbb sub xor dec push push pop pusha gs jne jg mov test mov mov ret rcl fsub out lock sti add pop and das xor ds dec dec push pop pop arpl jb jl xchg stos mov mov aam fsubp call add or daa sub ss inc dec push push pop pusha gs je jg mov test mov mov add add int3 rcl fsub out lock add or push sbb sub xor dec push pop pop arpl jae jge xchg stos mov mov aam (bad) jmp add or daa sub aaa cmp inc dec push push pop pusha gs je jg mov test mov mov add add rcl fneni(8087 out lock cli incl push and xor ds dec dec push pop pop bound insl jb jge xchg stos mov mov aad (bad) jmp add or daa sub inc dec push push pop pusha imul jg mov test mov mov add int xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge xchg stos mov mov aad (bad) jmp add or daa xor ds dec dec push pop pop bound jno jl xchg movsl stos scas mov mov add add (bad) jecxz in repnz add or pop sbb sub cmp dec push push pop pop gs je jle mov test mov mov (bad) fneni(8087 out lock cli add push and xor ds dec dec push pop pop bound jb jl xchg movsl stos mov mov aam add (bad) jecxz in repz std add or pop sbb sub cmp dec push push pop pop gs je jle mov test mov mov (bad) fneni(8087 out lock cli incl push and xor ds dec dec push pop pop bound jb js (bad) xchg lods mov mov aad add (bad) ljmp push adc sbb aaa cmp inc dec push push pop arpl jb jge xchg stos mov mov aam (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa imul addb movsb test ret enter fldl add loop in icebp idiv add or push sbb and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov aad (bad) ljmp push adc sbb aaa cmp push pop popa imul addb movsb test ret enter fucom add add in repnz add or push sbb and aas inc dec dec push pop pop imul lea test mov mov (bad) fsub out lock add pop and xor ds dec dec push pop pop bound jb jl xchg cmpsl lods mov mov (bad) fneni(8087 add in icebp idiv add pop and das xor ds dec dec push pop pop arpl jb jge xchg stos mov mov aam (bad) jmp add or daa sub aaa cmp inc dec push push pop pusha imul jg mov test ret enter fucom out add in icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov aad (bad) ljmp push adc sbb aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov fcomp jecxz in add add idiv add or push sbb sub xor dec push pop pop imul lea lods mov mov xlat fucom out icebp idiv add or adc sbb sub cmp dec push push pop pop fs je jle mov test mov mov (bad) fneni(8087 out lock add cmc cli incl push and xor cmp push pop bound jb jl xchg movsl stos mov mov aam fsubp jmp add or daa sub cmp push pop pop imul mov lods mov mov (bad) fneni(8087 out lock cli incl add add push and xor ds dec dec push push pop bound jno jl xchg stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa insb jno jnp xchg stos mov mov aam (bad) jmp cmc sti add add unpckhps pop and das xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and cs ds dec dec push pop pop bound jb jl xchg lods mov mov aad loopne ljmp unpcklps sbb and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad loopne ljmp push adc push and xor cmp push pop popa insb jno jl xchg cmpsb stos mov mov aam (bad) jmp add push adc sbb sub inc dec push push pop popa data16 jno ja (bad) xchg lods mov mov aad loopne ljmp push adc and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and add add das xor ds dec dec push pop pop bound jb jl xchg lods mov mov aad loopne ljmp push adc push and xor cmp push pop popa insb jno jl xchg movsl stos mov mov aam (bad) jmp add push adc sbb add add aaa cmp push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or daa sub aaa cmp inc dec push push pop pusha imul addb movsb add (bad) aam (bad) jmp add push adc sbb aaa cmp inc dec push pop pop bound jb jl xchg stos mov mov aad loopne ljmp push adc push and xor cmp push pop bound jno jl xchg mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor add ds dec dec push pop pop bound jb jl xchg movsl stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) in out repz incb or sub add push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul addl mov rol iret aad (bad) ljmp push adc push and sub inc dec add pop bound jno jl xchg movsl stos mov mov add fneni(8087 in out cmc cli incl unpcklps push and xor cmp pop pop bound jb jl xchg stos mov mov aam (bad) ljmp push adc push and sub inc dec push add add popa imul addb movsb stos scas mov mov fcomp jecxz out repz std add or daa sub ss inc dec push push pop pusha imul jg mov test ret enter fucom call add or pop sbb sub cmp dec push push pop add add push je jg mov stos scas mov (bad) lret rcr (bad) in repz add movhps cmp pop arpl ja test scas mov ret aam loope out cmc sti add push adc and sub dec push pop popa push mov test mov mov int xlat fsub call add or daa add inc dec push push pop bound jb jl xchg stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov add (bad) fneni(8087 in lock cli incl pop and cs ds dec dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addl mov mov (bad) add jmp add push adc sbb aaa cmp push pop popa data16 jno jl xchg cmpsb stos mov mov aad (bad) ljmp push adc push and xor cmp pop pop bound push orl test mov mov xlat fsub out add icebp idiv add or adc das xor dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add std add push adc push and xor cmp push pop bound jno jl xchg stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli incl add add pop and cs ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or adc sub cmp dec push push pop pop gs je jg mov test ret leave into rcr fucom call add or daa sub ss inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) in out repz incb or daa sub dec dec push pop pop insw jae addl mov aam (bad) jmp add push adc sbb add add sub inc dec push push pop popa insb jno jnp xchg movsl stos mov mov aad (bad) ljmp push adc push and xor cmp pop pop bound jb jl xchg stos mov mov (bad) fneni(8087 in lock cli incl pop and add add cmp inc dec dec push pop pop add jae jle mov cmpsl lods mov mov fnclex jmp unpckhps and aas inc dec push push pop pusha gs jne addb cmpsl lods mov mov (bad) in lock add pop and das xor ds dec dec push add pop pop bound jae jle mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor aas inc dec dec push pop pop arpl jae jge add mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop add pop gs jne addb scas mov (bad) into (bad) fucom out repnz add or push sbb sub cmp dec push push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop arpl jae jge add pushf mov mov aad (bad) jmp add or daa sub inc dec push push pop pusha gs jne jg mov stos scas mov mov fcomp jecxz in repnz add or push sbb and inc inc dec dec push pop pop imul mov cmpsl lods mov mov rcl fneni(8087 in lock cli incl unpcklps push and xor ds dec dec push push pop popa insb jno jnp xchg movsb stos scas mov mov fcomp loop in repnz add or push sbb and aas inc dec dec push pop pop arpl jae jge xchg cmpsb stos mov mov aad (bad) jmp add or daa sub aaa cmp inc dec push push pop pusha gs jne jg mov test mov mov xlat fsub out lock sti add pop and cs ds dec dec push pop pop bound jno jl xchg add movsl stos scas mov mov fnop in lock cli incl unpcklps pop and cs aas inc dec dec push pop pop arpl jae jge xchg stos mov mov aam (bad) jmp add or daa sub ss inc dec push push pop pusha gs jne jg mov add lods mov mov xlat fsub out lock cli add pop and xor ds dec dec push pop pop bound jno jl xchg movsl stos scas mov mov (bad) jecxz in repnz add add daa sub cmp dec push push pop pusha gs je jg mov add lods mov mov (bad) fndisi(8087 out lock cli incl push and xor cmp push pop bound jno jnp xchg movsl stos scas mov mov fcomp loop in repnz incb push adc push and sub inc dec push push pop popa imul addb add add mov mov xlat fucom out icebp idiv add or adc das xor ds dec dec push pop pop arpl jb jge xchg stos mov mov aam fsubp jmp add or es cmp dec push pop pop outsl jns xchg movsl stos add add lret (bad) in out repz incb or daa sub add rcr fsubp jmp add push adc sbb cmp push pop popa insb jno jl xchg cmpsb stos mov mov aad (bad) ljmp unpcklps pop and xor add inc inc dec push push pop popa imul orl test mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb push adc push and xor cmp add add add pop pop bound jb jl xchg stos mov mov (bad) fneni(8087 in lock cli incl pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb add sub aaa cmp inc dec push add add popa imul addb movsl stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha add push jne jg mov test ret leave into rcr fsubp call add or sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl jae add add orl test mov mov xlat fsub out icebp idiv add or push sbb sub ss inc dec push push pop pusha add jl xchg cmpsb stos mov mov aad (bad) ljmp unpcklps push and xor aas inc dec dec push pop pop arpl jae jge add orl stos scas mov mov (bad) in out hlt stc incb push adc push and sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop imul mov xchg cltd sahf mov mov xlat fucom out repnz add or pop sbb add inc dec push push pop bound jno jl xchg stos mov mov aad (bad) ljmp unpcklps pop and xor ds dec dec push pop pop arpl jae jg mov lahf movsb test (bad) leave into aam fsubp call add or daa sub inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test scas mov mov fcomp jecxz in repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp push adc push and xor cmp pop pop bound outsb jae jle mov test mov mov rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) jecxz out repz incb or sub inc dec push push pop popa insb jno jl xchg stos mov mov (bad) lret rcl fnop out icebp idiv add or sub xor ds dec dec push pop pop arpl je jle mov stos mov mov aad (bad) jmp idiv add or pop sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov flds add add in out repz incb or adc sbb aaa cmp push pop popa insb jno jl xchg movsl stos mov mov aad loopne ljmp unpcklps pop and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out in icebp idiv add or adc xor dec push pop pop imul mov mov mov fcomp jecxz in repnz std add or and aas inc dec dec push pop pop imul lea lods mov mov xlat fucom out repnz add add cld add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or daa sub ss inc dec push push pop pusha imul jg mov test ret leave into rcr fsubp call add add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) in out hlt stc incb or adc sbb cmp push pop bound jno jl xchg stos mov mov aad loopne ljmp add add adc pop and cs ds dec dec push pop pop imul mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb push adc add add push and xor cmp pop pop bound jb jl xchg lods mov mov aad loopne jmp cmc sti add pop and aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb add sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa imul (bad) xchg stos mov mov rcl fsub out icebp idiv add or push sbb and xor dec push pop pop imul mov scas mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop pusha gs jne jg mov test int3 rcr fsubp call add or pop sbb daa sub ss add inc dec push push pop pusha gs jne jg mov test ret enter fucom out icebp idiv add or push sbb sub cmp dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add pop and aas inc dec add pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul lea lods mov mov (bad) fneni(8087 out lock cli add pop and das xor ds dec dec push add pop pop arpl jb jge xchg test mov mov (bad) fndisi(8087 out lock sti add pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov aad loopne ljmp push adc push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) jmp add push adc sbb aaa cmp push pop popa insb jno jnp xchg movsl stos scas mov mov fcmovu in out hlt stc incb or adc sbb aaa cmp push pop popa add add add data16 jno jnp test movsb stos scas mov mov fcomp jecxz in repnz add or push sbb sub xor push push pop pop gs je jg mov test mov mov rcr fucom call add or push sbb sub cmp dec push push pop pusha add add push je jg mov test mov mov xlat fucom out icebp idiv add or push sbb and aas inc dec push push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop imul add jae jle mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add or push sbb sub cmp dec push push pop pusha gs je jg mov test mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop imul add add mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and xor ds add push pop pop imul lea lods mov mov (bad) fneni(8087 in lock cli incl pop and xor ds dec dec push pop pop bound jb jge add (bad) xchg stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa insb jb jl xchg stos mov mov aam (bad) jmp add push adc sbb cmp inc dec dec push pop pop bound jb jl xchg add add stos mov mov aad (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa imul addl mov mov (bad) jecxz out repz std add or daa sub ss inc dec push push pop pusha gs jne jnp xchg add add stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test ret leave into rcr fucom call add or pop sbb sub cmp dec push push pop pop fs je jle mov add add add cltd sahf mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop gs nop xchg fwait mov mov aad (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa data16 jl xchg movsl stos mov add mov aad (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub ss inc dec push push pop pusha gs jne jg mov test ret enter fucom call add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge mov test mov mov add add rcr fucom out repnz add or push sbb sub xor dec push pop pop imul lea test ret enter fucom out repnz add or push sbb sub xor dec push pop pop imul lea lods mov mov add xlat fsub out icebp idiv add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor ds dec dec push pop pop bound jno jl xchg movsl stos mov mov aad fcmovu in out hlt stc incb or adc sbb aaa cmp inc dec push push pop popa imul addb movsb test (bad) aad (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or push sbb sub cmp dec push push pop pop imul mov lods mov add fcomp jecxz call add or pop sbb sub cmp dec push push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov (bad) fneni(8087 out add add idiv add or push sbb sub xor dec push pop pop imul mov lods mov mov (bad) fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov aad loopne ljmp add add add pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aam (bad) jmp add pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aam (bad) jmp add add add push adc sbb aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz in repnz incb or xor push push pop bound jae jle mov test (bad) leave iret aam (bad) jmp add push adc sbb add and sub dec dec push push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add push adc push and das xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add and add xor push pop pop outsb jne test mov xlat fsub out hlt stc incb push adc push and sub dec dec add pop arpl jae jge mov test (bad) leave into rcr fsubp jmp add push adc sbb aaa cmp pop pop add fs je jg mov test ret enter fucom call add or pop sbb es cmp dec push push pop pusha gs jne addb movsb stos scas mov mov (bad) jecxz out repz std add or daa sub inc dec push push pop popa imul add jl xchg movsl stos mov mov aam (bad) jmp add push adc push and sub inc dec push push pop bound jno jl xchg stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop arpl jb add jge mov mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop fs je jg mov stos scas mov mov (bad) jecxz out repz incb or daa sub inc dec push push pop popa imul addb add mov mov aam (bad) jmp add push adc sbb cmp push pop popa insb jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and xor ds dec dec push pop pop bound jb jge orl add test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pop gs jne jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop pusha imul addb lcall rol rcl fnop in out hlt cli incl unpcklps push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 out lock cli add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov fsubrp repnz std add or push sbb sub xor dec push pop pop imul lea lods mov mov rcl fsub out icebp idiv add pop and das xor ds dec dec push pop pop bound jb jl xchg stos mov add aam (bad) jmp add or daa sub cmp dec push push pop pusha gs je jg mov test mov mov xlat fsub call add or daa sub inc dec push push pop popa data16 jno add mov stos mov mov add vaddsubps fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out icebp idiv add or adc xor dec push pop pop imul mov lods mov mov int xlat fsub out repnz add or push sbb sub cmp dec push push pop pop gs je jg mov test ret enter fucom out repnz std add or and sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov add (bad) in out hlt stc incb push adc das xor dec push pop pop imul mov lods add rcr fucom call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov flds add jecxz out repz incb or adc sbb cmp push pop popa insb jno jl xchg cmpsb stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 in add ljmp adc das xor aas inc dec dec push add fs je jle mov test mov mov xlat fucom out repnz add or pop sbb es cmp dec push push pop popa insb jno jl xchg movsl stos mov mov aad (bad) jmp add add stc incb push adc push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad loopne ljmp or adc xor dec push pop pop fs je jg mov test mov mov fcomp loop in repnz add add add or push sbb es cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb cmp push pop bound jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or adc das xor dec push pop pop fs je jle mov test mov mov xlat fucom out repnz add or add push sbb sub cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc sbb cmp pop pop bound jb jl xchg stos mov mov aad (bad) ljmp unpcklps add and xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 out lock sti add pop and das xor ds dec dec push pop pop imul lea mov rol aam loop icebp clc incb add sub cmp add pop pusha insw jae addb lods mov mov fucom jmp or daa sub inc dec push push pop popa imul addb mov lods mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop arpl add jae jge mov test mov mov xlat fsub out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add or daa sub inc dec push push pop popa data16 jno jnp add add fwait mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul mov test ret leave into rcr fsubp call add or daa sub ss inc dec push push pop pusha imul addb add add movsb stos scas mov add (bad) aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov (bad) fneni(8087 in lock cli incl pop and cs ds dec dec push pop pop arpl jb jge xchg add add lods mov mov (bad) fndisi(8087 out lock sti add pop and aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov xlat fsub out icebp idiv add or daa sub aaa cmp inc dec push push pop popa imul addb add mov aam fsubp jmp add push adc sbb cmp push pop bound jno jl xchg stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jb jge xchg cmpsl add add lret rcl fneni(8087 out lock add and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test add add rcr fucom out repnz add or daa sub cmp push pop popa insb jno jl xchg movsl stos mov mov aam (bad) jmp add push adc push and xor cmp pop pop bound jb jl xchg stos mov mov add add lret rcl fnop in out cmc cli incl unpcklps pop and xor inc dec dec push pop pusha gs jne jg mov test ret enter fucom call add or push sbb daa sub ss inc dec push push pop pusha imul jg mov test ret enter fucom out repnz add or push sbb daa sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop bound jno jl xchg movsl stos mov mov aam (bad) add out hlt stc incb or adc sbb cmp push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add or sub inc dec push push pop popa insb jno jl xchg movsl stos mov mov aam (bad) jmp add stc incb or sub inc dec push push pop popa insb jno jnp xchg movsl stos scas mov mov (bad) in out repz incb or daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz add std add or daa sub aaa cmp inc dec push push pop popa imul addb cmpsb stos mov mov aad (bad) ljmp push adc push and sub dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp add push adc push and xor cmp pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor cmp pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop bound jno jl xchg movsl stos scas mov rol rcl fcmovu in out hlt stc incl push adc add add and sub inc dec push push pop bound jb jl xchg stos mov mov aad (bad) jmp add push adc push and sub inc dec push push pop bound jb jl xchg lea lods mov mov (bad) fneni(8087 in lock cli add pop add add cs ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and cs ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov (bad) fneni(8087 in icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and add aas inc dec dec push pop pop imul mov lods mov mov rcr fucom call add or push sbb sub cmp dec push pop pop arpl je jg mov stos scas mov mov fcmovu in lock sti add or sbb es push pop popa add add ja test mov mov loope jmp idiv add pop and das xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add and xor ds dec dec push pop pusha imul addl add pushf mov mov (bad) fneni(8087 in lock add pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov call add add adc sbb aaa cmp push pop popa insb jno jnp xchg movsl stos scas add iret aam fsubp jmp add push adc sbb aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub inc dec push push pop popa imul addb movsl stos scas mov add (bad) jecxz in repz std add or daa sub inc dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jl xchg movsl stos mov mov lret (bad) in out repz incb or sub inc dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jno jl xchg stos mov mov add add aad (bad) jmp add push adc push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and sub dec dec push pop pop bound jb jl mov cmpsl lods mov mov (bad) add add loope jmp cmc sti add sbb and inc inc dec push push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pop fs je jle mov test mov mov xlat faddl add add out icebp idiv add or push sbb and cmp dec push push pop pusha imul addb movsb test ret enter fucom call add or pop sbb es cmp dec push push pop pusha imul addb movsb test ret leave into rcr fucom add call add or pop sbb es cmp dec push push pop pusha imul jg mov test (bad) aam (bad) jmp add push adc sbb cmp push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp add add cmc cli incl unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps pop and xor ds dec dec push pop pop add jae jle mov test mov mov xlat fsub out icebp add sti add or sbb sub inc dec push push pop bound js xchg mov mov fcomp jecxz in repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov (bad) fnclex call std add or add add sbb es cmp dec push push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add pop and xor aas dec push pop pop insb jb jge xchg lods mov mov fcomp jecxz out repz incb or adc push and xor add inc dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 out lock sti add pop and das xor aas inc dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb and inc inc add dec push push pop pop gs je addb movsl stos mov mov loopne out cmc cli incl and sub xor dec add pusha gs je jg mov test mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop add add insl jb jge xchg stos mov mov aam (bad) ljmp push adc sbb aaa cmp inc dec push push pop popa imul addb movsb test ret enter fucom call add or push sbb sub xor dec push pop pop add add add jae jle mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl push and xor cmp push pop bound jno jl xchg movsl stos scas mov mov (bad) jecxz out repz std add or daa sub cmp dec push push pop popa imul jo jnp test movsb test ret enter fucom out repnz add or push sbb sub cmp dec dec push pop pop imul lea xchg cltd sahf mov mov xlat fsub out icebp idiv add or adc das xor ds dec dec push pop pop arpl add add jge xchg stos mov mov aad (bad) jmp add push adc push and sub inc dec push push pop popa imul addb movsb test ret enter fucom out repnz add or pop sbb sub cmp dec dec push pop pop fs je add jns test mov mov (bad) fsub out lock sti add or adc das xor aas inc dec dec push pop pop arpl jg mov test mov mov xlat fucom out icebp idiv add or push sbb sub xor dec push pop pop imul add add test mov mov rcl fucom out icebp idiv add or push sbb sub xor pop data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz std add or daa sub inc dec push push pop popa imul addb add movsb test ret leave into rcr fucom call add or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret enter fucom out icebp idiv add or push sbb and inc inc dec push push pop pop imul mov add scas mov mov fcomp loop in repnz add or push sbb sub cmp dec dec push pop pop imul mov lods mov mov (bad) fndisi(8087 out lock cli add pop and cs ds dec dec push pop pop arpl jb jge xchg stos mov add rcl fcmovu in out hlt stc incb or adc sbb aaa cmp push pop popa data16 jno jnp xchg movsl stos scas mov mov fcomp jecxz in repnz std add or pop sbb sub cmp dec push push pop pusha gs je jg test movsb test add rcr fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov fcomp loop in repnz add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov add rol rcl fneni(8087 out lock cli add pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aam (bad) jmp add or daa sub inc dec push push pop popa imul addb movsb stos scas mov mov add add add into rcr fucom call add or push sbb sub xor dec push pop pop fs je jle mov test add int xlat fucom out icebp idiv add or adc das xor dec push pop pop imul lea lods mov mov add add rcl fneni(8087 in lock cli add or adc das xor aas inc dec dec push pop pop arpl jae jge xchg cmpsb lods mov mov aad (bad) jmp add push adc sbb aaa cmp inc dec push push pop pusha imul addb movsb test ret leave into add fcomp jecxz in repnz std add or pop sbb es cmp dec push push pop pusha imul jg mov test ret leave into rcr fucom call incb or daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam add (bad) jmp add movhps and inc inc dec dec push pop popa push (bad) xchg sahf movsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor dec push pop pusha push xchg lods mov mov aad loopne ljmp add push adc push and xor cmp push pop popa insb jno jnp xchg movsl stos mov mov aam fsubp jmp add or daa sub ss inc dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or add push sbb and aas inc dec dec add pusha gs je jg mov test mov mov xlat fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add add add pop and xor ds dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop add and cs ds dec dec push pop pop bound jb jl xchg stos mov mov aad loopne ljmp push adc push and xor cmp push pop popa insb jno jl xchg movsl stos scas mov mov fcmovu in out hlt stc incb or adc sbb sub inc dec push push pop popa imul addb movsb test ret leave into rcr fsubp call add or pop sbb es cmp dec push push pop pop gs je jg mov stos scas mov mov (bad) in out hlt stc incb or adc sbb aaa cmp push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add and aas add add push pop pop imul mov lods mov mov xlat fsub out repnz add or push sbb sub cmp dec push push pop pop gs je jg mov test ret enter fucom call add or daa sub aaa cmp inc dec add pop popa imul addb movsl stos mov mov (bad) fsub out icebp idiv add or daa sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fndisi(8087 out lock add or push sbb and inc inc dec dec push pop pop add add imul mov mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz incb or adc push and xor cmp pop pop bound add jl xchg stos mov mov rcl fsub out icebp idiv add and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repz incb or sub dec dec push push pop bound jno add mov stos mov mov aam (bad) jmp add push adc push and xor cmp push pop bound jb jl xchg stos mov mov (bad) jecxz in repz std add or pop sbb es cmp dec push push pop pusha gs je jg mov add add test mov mov xlat fsub out lock add pop and das xor aas inc dec dec push pop pop arpl jae jge xchg stos mov mov aad (bad) ljmp add adc pop and cs ds dec dec push pop pop bound jb jl xchg add add stos mov mov aam (bad) jmp add or sub xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov aad loopne ljmp push adc push and sub dec dec push push pop bound jno jl xchg add fwait mov mov rol rcl fcmovu in out hlt stc incb push adc sbb aaa cmp push pop popa data16 jno jnp xchg movsl stos scas mov mov fcomp jecxz in repnz add or pop sbb sub cmp dec push push pop pusha gs je jg mov add add mov rcl fsub out icebp idiv add pop and ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov aad loopne ljmp push adc push and sub inc dec push pop pop arpl jae jge xchg add rol rcl fcmovu in out hlt stc incb push adc sbb aaa cmp push pop bound jno jnp xchg movsl stos scas mov mov add (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa imul addb movsb test ret leave into rcr fucom call add or push sbb sub xor dec push pop pop gs je jle mov test mov mov xlat fsub out lock add pop and das xor ds dec dec push pop pop arpl jae jge xchg lods add lret rcl fcmovu in out hlt stc incb push adc sbb aaa cmp inc dec push push pop popa imul (bad) xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pop gs je jnp test movsb test add rcr fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov aad loopne ljmp push adc push and sub dec dec push push pop popa insb jno jl xchg stos mov mov add add add (bad) in out repz incb or daa sub xor cmp push pop popa data16 jno jl xchg movsl stos mov mov aam fsubp jmp add or daa sub cmp dec push push pop pusha gs jne addb movsb test add lret (bad) in out repz incb or daa sub aaa cmp inc dec push push pop pusha gs jne addb add mov (bad) jecxz in repz std add or es cmp dec push push pop pop fs je jle mov test mov mov (bad) int xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor cmp push add push (bad) xchg cmpsl lods mov mov lret rcl fcmovu in out hlt cli incl push adc push and sub inc dec push push pop popa imul addb movsl stos scas mov mov fcomp in lock cli add pop and das xor dec push pop pusha gs je jg mov add vaddsubps add add fcmovu in out hlt stc incb push adc sbb aaa cmp push pop popa imul addb movsl stos scas mov mov (bad) jecxz in repz std add or es cmp dec push push pop pop gs je jg mov test ret rcl add fsub out icebp idiv add or adc xor dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock cli add pop and cs ds dec dec push pop pop bound jb jl xchg stos mov mov aad fild add add add add ljmp adc sbb inc inc dec push push pop pusha gs jne jg mov test ret enter fucom add out repz std add or daa sub aaa cmp inc dec push push pop pusha imul jg mov test ret leave into rcr fucom call add idiv add or pop sbb sub cmp dec push push pop pop gs je jg mov test mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out lock add pop and das xor ds dec dec push pop pop arpl jae jge xchg cmpsb lods mov mov (bad) fneni(8087 in out cmc cli incl unpcklps push and xor aas inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) in out repz incb or add or daa sub aaa cmp inc dec push push pop pusha imul jg mov test ret enter fucom call add or push sbb sub cmp dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or add add das xor aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov aad loopne ljmp unpcklps push and xor cmp push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add push adc add add aaa cmp inc dec push push pop popa insw jb jge xchg cmpsl lods mov mov aad loopne ljmp unpcklps pop and xor ds dec dec push pop pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add push adc sbb sub inc dec push push pop popa imul addb movsb test ret leave into rcr fucom call add or daa sub cmp dec push push pop pusha gs jne jg mov test mov mov xlat fsub out icebp idiv add or push sbb sub add xor dec push pop pop imul lea lods mov mov (bad) fsub out lock sti add pop and aas inc dec dec push pop pop arpl jae jge mov mov rol aam loop lock add and xor aas inc dec push pop pop add add imul xchg mov mov fucom jmp or adc sbb aaa cmp push pop bound jno jl xchg movsl stos mov mov aad (bad) jmp add push adc push and sub inc dec push pop pop insl jbe orl add rol rcl fneni(8087 in lock cli add and sub dec dec push pop pop arpl jb jge xchg cmpsb lods mov mov aad (bad) ljmp push adc add and das xor ds dec dec push pop pop bound jae jge mov cmpsl lods mov mov (bad) in out repz incb or daa sub ss inc dec push push pop pusha gs jne jg mov test ret enter fucom call add or sub cmp push pop bound jnp mov scas mov rol rcl fucom call add repnz std add or daa sub aaa cmp inc dec push push pop arpl je jle mov test mov mov fcmovu in out hlt stc incl add pop and das xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock sti add and aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov xlat fsub out icebp idiv add or daa sub aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov (bad) in out repz incb add add add or adc sbb aaa cmp push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) ljmp push adc push and xor cmp pop pop bound jb jl xchg stos mov mov aad loopne jmp cmc cli incl add pop and das xor add inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop imul lea lods mov mov (bad) fneni(8087 out lock add sbb and inc inc dec push push pop pusha gs jne jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos mov mov jmp idiv add or adc xor add dec push push pop pusha gs je jg mov test ret enter fucom call add or daa sub inc dec push push pop popa insb jno jl xchg mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop arpl jbe addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and sub dec dec push pop add add insl jb jl xchg stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and cs ds dec dec push pop pop arpl push (bad) xchg cmpsl add (bad) int3 rcl fsub out icebp idiv add or adc das xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul add jns test movsb stos scas mov mov fcomp jecxz in repz std add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jae add add mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs jne jg mov stos scas mov mov (bad) jecxz ljmp push adc push and xor ds dec dec push pop pop bound jae jge add add mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs je jg mov test (bad) (bad) fndisi(8087 out icebp idiv add or pop sbb sub xor cmp pop pop bound jb jl xchg add mov (bad) fsub out icebp idiv add or adc xor dec push pop pop imul (bad) xchg cltd sahf movsb test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa imul addb cmpsb add add vaddsubps fnop in lock cli incl pop and das xor ds dec dec push pop pop arpl jae jle lea mov mov (bad) fneni(8087 in lock sti add or push sbb sub cmp push pop pop insw jne (bad) mov mov rol rcl fsub out add push sbb sub cmp inc inc dec push push pop pusha gs jne jg mov test mov ret lret jecxz lock cli incl pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp unpcklps pop and add das xor ds dec dec push pop pop outsl jne addb movsb test (bad) lret rcl fneni(8087 out lock add push adc pop and das xor push pop imul xchg mov ret lret loope icebp stc add adc and cs inc dec push push pop popa imul addb xchg fwait mov ret xlat fucom jmp cli add adc xchg mov mov jecxz scas mov mov loopne out idiv add push pop data16 jae jle mov mov mov loope lock pop or daa sub inc dec push push pop popa insl add jge xchg lods mov mov (bad) fsubp in and popa insb jb mov mov (bad) jecxz out repz incb or adc push and sub inc dec push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out hlt stc incb sldt add add push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov fcomp loop in repnz add or sub xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz std add push adc sbb add and aas inc dec dec push pop pop gs je jg mov stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es aaa cmp inc dec push push pop bound jae jge mov push push pop popa insb jno jl mov test ret enter fucom add in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov xlat fucom out repz std add push adc push and das xor aas inc dec push push pop pusha data16 jno jge mov test (bad) aad (bad) ljmp add or pop sbb daa sub dec dec push pop pop imul mov mov rol rcl fsub out repnz std add or and das xor push pusha push mov mov xlat (bad) out idiv or sub ss inc dec push push add add insl jb jle mov scas mov rol rcl fndisi(8087 out lock cld add or sbb cmp inc dec push pop popa push xchg fwait mov iret xlat fsubp out idiv push push adc cmp inc dec push pop data16 addb cmpsl lods mov mov fcomp jecxz add out hlt stc incl unpckhps pop and das xor push push pop pusha gs je jg mov stos scas mov rol iret aam (bad) ljmp sbb sub cmp inc dec dec push pop pop fs jne jg lea mov fcmovu in out hlt cli incl unpcklps pop and xor push push pop bound jb jge mov stos scas mov mov fucom call add or sub inc dec dec push pop pop arpl jb jge mov mov (bad) fucom out repnz add or sub xor aas inc dec dec add add pusha gs jbe xchg mov ret lret loope jmp idiv add pop and aas inc dec push push pop gs je test mov fsubp jmp add push adc push and cs push push pop bound jb jle mov test add mov aad (bad) ljmp adc xor push push pop pusha insb jno jge mov mov aam (bad) ljmp daa cmp inc dec push pop imul mov mov (bad) lret (bad) in cmc cld add movhps daa das cmp add add bound jnp mov mov mov jmp adc pop daa das ss dec push pop arpl jns mov mov (bad) into (bad) fsubp in cmc std add sub cmp dec push pop arpl jp mov mov (bad) fsub jmp cli add adc and das aaa ds add add add pop gs je test scas mov ret lret loopne out idiv add sub aas inc dec push pop outsb jbe test mov ret lret rcr loope lock add movhps and xor inc dec push pop xchg popf movsl lods mov ret fsub out cmc cld add adc and xor cmp dec push push pop add imul addb movsb test ret enter fucom out repnz add or push sbb sub xor dec add pusha gs jne jg mov test ret enter fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop add arpl jae jle mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl push and xor ds dec dec push pop pop bound jge xchg lods mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jb jl xchg lods mov mov aad loopne ljmp unpcklps pop add aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul jns orl test mov mov xlat fucom out icebp idiv add or push sbb sub xor push push pop pop fs je jg mov test ret enter fucom call add or pop sbb sub cmp dec push push pop pop fs je jle add test enter fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aad loopne jmp cmc cli add pop and aas inc dec dec push pop pop imul mov test add mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov add lret rcl fnop out lock sti add and aas inc dec dec push pop pop fs je jg mov test vpsrld fucom out repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov add fsubp jmp add push adc push and sub xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test ret enter fldl add add call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add unpcklps push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 in add stc add or push sbb sub xor dec push pop pop fs je jg mov test mov mov xlat fucom out icebp idiv add or push sbb es cmp dec push push pop pusha add jnp xchg movsl stos scas mov mov (bad) jecxz out repz std add or sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) in out repz incb add or daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz in repz std add or sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fucom call add or add pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or sub dec dec push push pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps push add and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or adc xor push push pop pop gs je add lcall mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push pop popa insb jno jnp xchg movsl stos mov mov aad (bad) ljmp unpcklps pop and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli incl pop and xor add add inc dec dec push pop pop bound jb jge xchg lods mov mov aad loopne ljmp push adc push and xor cmp push pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop bound jb jl xchg stos mov add fneni(8087 in lock cli incl pop and cs ds dec dec push pop pop arpl jb jge mov lods mov mov aad (bad) ljmp push adc sbb aaa cmp inc dec add push push pop popa imul addb movsb test ret enter fucom out repnz add or push sbb and aas inc dec dec push pop pop arpl jb jge mov cmpsl lods mov mov aad (bad) ljmp push adc sbb aaa cmp inc dec push add push pop pusha imul jg mov test ret enter fucom out repnz std add or daa sub cmp dec push push pop pusha gs je jg mov test ret enter fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jb jge xchg cmpsl lods mov rol rcl fneni(8087 in lock cli incl pop and das xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb es cmp dec push push pop pusha data16 imul addb movsl stos mov mov aam (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or adc xor cmp dec push push pop pusha gs add jg mov stos scas mov mov (bad) in out repz incb or adc sbb cmp push pop bound jno jl xchg stos mov mov (bad) fneni(8087 jmp push or add sbb es cmp dec push push pop pusha imul addb add lahf movsl stos scas mov mov fcmovu in out hlt stc incb push adc push and xor cmp pop pop bound jb jge xchg lods mov mov fcomp loop in repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov xchg lcall mov (bad) jecxz out repz incb or sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov add add mov xlat fsub out repnz add or sbb sub cmp dec dec push add gs jne jg mov test mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock add pop and das xor ds dec dec push pop pop arpl jb jge xchg stos mov mov aad (bad) jmp add push adc sbb cmp push pop popa data16 jno jnp xchg movsl stos mov add iret aam fsubp jmp add push adc sbb cmp push pop popa imul addb movsb stos scas mov mov fcomp jecxz in repnz add or pop sbb es cmp push push pop pop gs je jle mov test mov mov ret rcl fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop imul mov lods mov mov (bad) fndisi(8087 out lock sti add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov rcl fneni(8087 out lock cli incl pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop arpl jae add mov test mov mov add xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop imul xchg cwtl popf mov mov xlat fsub out icebp idiv add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat faddl add out icebp idiv add pop and aas inc dec dec push pop pop imul lea lods mov mov (bad) fsub out lock add pop and aas inc dec dec push pop pop imul lea lods mov mov (bad) fsub out jmp idiv add pop and aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test ret lret loopne out repz incb or adc push and sub dec dec push pop pop imul mov mov mov fcomp loop in repnz add add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) aad (bad) ljmp unpcklps pop and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp unpcklps sbb and xor ds dec dec push pop pop bound jae jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add adc and sub cmp dec ja mov stos mov mov (bad) fneni(8087 out lock sti add pop and insb jno jl xchg add rol iret fcomp in repz add or sbb sub cmp dec push push pop pusha gs je jg mov test ret enter fucom out repnz add or pop sbb sub cmp dec push push pop pusha gs je jg mov test add ret enter fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb es cmp dec push push pop pusha gs jne jg mov test ret enter add rcr fucom call add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsb test ret leave into rcr fsubp call add or pop sbb daa sub aaa cmp add push push pop arpl jae jge mov cmpsl lods mov mov add add fneni(8087 out lock cli add pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli add push sbb sub ss inc dec push push pop pusha gs jne jg mov test ret enter add fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fldl add add out repnz add or pop sbb sub cmp dec push push pop pusha gs jne jg mov stos mov mov aam fsubp jmp add or daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz add add repz std add or daa sub aaa cmp add dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and cs ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 in add sti add or adc xor push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul addl mov rol rcl fneni(8087 out lock sti add add add adc xor dec push pop pop gs jne adcb mov rol rcl fcmovu in out cmc cli incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub xor cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne jmp cmc cli add pop and das xor aas inc dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz std add push adc push and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub jmp add push adc sbb cmp push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub xor add pop pusha gs jne jg mov test (bad) leave iret aam (bad) jmp add push adc push and xor cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop add imul addb movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps push and cs ds add push pop pop imul mov mov mov fcomp jecxz out repz incb or sub xor ds dec dec push pop pop arpl add js orl test mov mov rcr fsubp jmp add push adc push and sub dec dec push pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 out icebp idiv add or mov mov fcmovu in out hlt stc incl push adc sbb and xor cmp push pop popa insb jno jnp xchg movsl stos mov mov aam fsubp jmp add or daa sub aaa cmp inc dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb add add sub xor push push pop pusha imul jg mov test ret leave into rcr fucom call add or push sbb sub xor dec push pop pop imul mov test ret enter fucom out repnz add or push sbb add sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and add xor ds dec dec push pop pop bound jno jl xchg movsl stos mov mov aad (bad) jmp add push adc sbb aaa cmp inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp push adc sbb add add cmp push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub cmp dec push push pop pusha gs jne jg mov test mov mov fcomp loop in repnz add or push sbb sub cmp add inc inc dec push push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and cs ds add push pop pop arpl jb jl xchg stos mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or adc xor dec add push pop pop imul mov lods mov mov xlat fucom out icebp idiv add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop add pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock add pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and aas inc dec dec push pop pop add add add jae jle mov cmpsl lods mov mov (bad) fndisi(8087 out lock add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp unpcklps pop and xor ds dec dec push pop pop bound add jl xchg stos mov mov aad (bad) jmp add push adc push and sub dec dec push push pop bound jno jl xchg movsl stos mov mov aam fsubp jmp add or sub inc dec push push pop popa imul add add test movsb test ret leave into rcr fucom call add push adc push and xor cmp push pop bound jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz std add or daa sub inc dec push push pop popa imul addb add lahf movsb stos scas mov mov fcomp jecxz in repnz std add or daa sub ss inc dec push push pop pusha imul jg mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pop fs je jle mov mov lods mov mov xlat fsub out lock add and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov aad loopne ljmp push adc pop and xor ds dec dec push pop pop imul (bad) xchg add cltd sahf mov mov fcomp jecxz in repz std add push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fildl loope in icebp idiv add or adc xor dec push pop pop imul mov add mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul lea lods mov mov inc dec push push pop popa imul addb add rol rcl fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp pop pop arpl jae jge mov test ret enter fucom out repnz add or push sbb and aas inc dec dec push pop pop arpl jae jge xchg stos mov mov aad loopne ljmp push adc push and add add add add sub inc dec push push pop popa insb jno jl add mov mov aad loopne ljmp push adc pop and cs ds dec dec push pop pop gs jae addl lret loopne ljmp push adc push and xor ds dec dec push pop pusha imul addb cmpsl lods mov mov (bad) fneni(8087 in lock sti add push or pop sbb daa sub dec dec push pop pop arpl jb jl xchg stos mov mov (bad) fsub out lock add or adc das xor dec push pop pop add add add arpl jae jle mov cmpsl lods mov mov (bad) fneni(8087 in lock cli add push and xor ds dec dec push pop pop bound jno jl xchg movsl stos scas mov mov (bad) jecxz in repz incb or daa sub aaa cmp inc dec push push pop add add jno jnp test movsb stos scas mov mov fcomp loop in repnz add or pop sbb sub cmp dec dec push pop pop imul mov lods mov mov (bad) fndisi(8087 out lock cli add pop and das xor ds dec dec push pop pop arpl add ja (bad) xchg stos mov mov aad loope jmp idiv add and aas inc dec dec push pop pop arpl jb jge xchg lods mov mov aad (bad) ljmp unpcklps push and xor cmp push pop popa insb jno add add addb movsl stos scas mov mov (bad) jecxz in repz std add or pop sbb daa sub ss inc dec push push pop pusha gs je jg mov (bad) xchg lcall mov fcomp loop in repnz add or push sbb sub xor dec push pop pop imul add js orl cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and cs ds dec dec push pop pop bound jb jl xchg stos mov mov aam fsubp jmp add pop and cs ds dec dec push pop pop bound jb jl addl rcl fneni(8087 in lock cli incl pop and das xor aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz std add or sub add push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov mov mov fcomp loop in repnz add or pop sbb es cmp inc dec dec push pop pop arpl je jg mov stos mov mov aad loopne ljmp push adc push and xor cmp push pop bound jb jl xchg stos mov mov add add lret rcl fneni(8087 in lock cli incl pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl je jle add movsb test ret enter add rcr fucom call add or pop sbb sub cmp dec push push pop pusha gs je jg mov test ret leave into rcr fucom call add or daa sub ss inc dec push push pop bound jno jl xchg stos mov mov aad add fnop in out hlt cli incl push adc push and xor cmp push pop bound jno jl xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add pop and aas inc dec dec push pop pop arpl jae jge mov test mov mov xlat faddl add out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov scas mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop imul mov enter fucom call add pop or daa sub cmp inc dec dec push pop pop arpl jl mov test (bad) lret rcl fsub out icebp idiv add or pop sbb cmp inc dec dec push pop pop fs jne addl mov ret leave into rcr (bad) jmp add sbb daa add aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov xlat fucom call add unpcklps pop and das xor aas inc dec dec push pop pusha gs jne addb mov ret lret loope out idiv push push adc and inc inc dec push push pop pusha imul add add orl int3 aam in hlt cld add push push es pop push jne addb mov (bad) int3 rcl fsub out repnz std add or sub das ss pop pop arpl jae jle mov lods mov mov (bad) fndisi(8087 out lock add sti add and inc dec push pop pusha push nop cwtl mov (bad) int fnclex ljmp push and dec push pop arpl jns test mov mov xlat fsub out icebp idiv add or pop sbb cmp push (bad) int3 add add (bad) fndisi(8087 out icebp idiv add or sub xor ds dec dec push pop pop fs jne addb stos mov (bad) lret rcl fsubp in hlt cli add movhps es pop imul xchg mov (bad) int fsub jmp push push pop es (bad) mov add (bad) fninit jmp cli add adc and add inc dec push pop pusha outsb jne test mov (bad) out cmc cld add adc and xor ds dec push pop imul mov mov (bad) lret rcr loope lock push push adc cmp push pop pusha push add stos mov ror fcomp out cmc std add adc sub cmp inc dec push pop fs jae (bad) mov mov (bad) int fsub jmp cli add adc pop es pop popa imul popf movsb lods mov ret fchs call push push sbb inc dec add bound jno orb mov ret lret rcr loope lock push push adc cmp push pop pusha push mov mov loope icebp clc incl push push sbb inc dec push pop pusha outsl jbe test mov fsubp in repz add sub cmp inc dec push push pop popa insb jno jl xchg scas mov mov xlat fsub out icebp idiv add or sbb and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop pusha add push jne jg mov stos mov mov aad (bad) ljmp push adc push and cs aas inc dec push push pop pusha imul jnp xchg movsl stos mov mov aad loopne ljmp unpcklps pop and das xor push push pop pop gs je add orl test mov mov (bad) fndisi(8087 out lock cli add pop sub add cmp inc dec push push pop pusha gs jne jg mov test mov mov xlat fsub out icebp idiv add adc and cmp dec push push pop pusha imul addb add xchg lcall mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa imul addb mov mov aam fsubp jmp add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb stos scas mov mov fcomp jecxz in repz std add or es cmp dec push push pop pusha gs jne add fwait mov add add rol rcl fneni(8087 in lock cli incl pop and xor ds dec dec push pop pop bound jb jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli add pop and cs ds dec dec push pop pop arpl jb jge mov cmpsl lods add int3 rcl fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov add add add mov (bad) fsub out lock add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov rcr fsubp call add push adc sbb cmp push pop popa insb jno jl xchg cmpsb stos mov mov add (bad) aad (bad) ljmp push adc push and sub dec dec push push pop bound jno jl xchg cmpsb stos mov mov aad loopne ljmp push adc push and xor cmp push pop bound jno jl xchg cmpsb stos mov mov add add fneni(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov add add fndisi(8087 out lock sti add and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov (bad) fneni(8087 in lock cli incl unpcklps pop and xor ds dec dec push pop pop bound jb jge xchg stos mov mov (bad) fneni(8087 in lock cli add sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out in icebp idiv add or adc xor dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha imul addb movsb test ret leave into rcr fsubp jmp add incb or daa sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or daa sub inc dec push push pop popa imul addb movsb stos scas mov mov (bad) in out repz incb add or sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out hlt stc incb or adc push and sub inc dec add pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock sti add add adc das xor aas inc dec dec push pop pop gs je jg mov test mov mov fcomp loop in repnz std add or pop sbb daa sub ss inc dec push push pop pusha gs jne jg mov test ret enter fucom call add or pop sbb daa sub ss inc dec push push pop pusha imul jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov (bad) jecxz out repz std add or and sub inc dec push push pop popa imul addb mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg scas mov mov (bad) in out repz incb or adc push and add xor cmp dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or sub inc dec push push add insb jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor cmp inc dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor add add dec push pop pop bound jb jl xchg stos mov mov (bad) fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor add dec push pop pop imul mov xchg cltd sahf movsb test ret enter fucom call add or pop sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add push adc sbb aaa cmp push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add push adc push and sub inc dec push push pop bound jno jl xchg cmpsb stos mov mov aam fneni(8087 in out cmc cli incl unpcklps push and xor ds dec dec push pop pop arpl add push (bad) xchg cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock add pop and aas inc dec dec push pop pop arpl add jle mov test mov mov xlat fsub out icebp idiv add adc and dec push pop pop imul xchg xchg pushf mov mov (bad) in icebp idiv add or pop sbb sub xor ds dec dec push pop pop arpl jb jge xchg add add ret rcl fsub out icebp idiv add or push sbb sub add inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out lock add or adc xor dec push pop pop imul mov scas mov mov fchs out idiv add daa sub inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov add fndisi(8087 out lock add pop and aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat faddl add out repnz add or push sbb sub cmp dec push push pop pusha gs je jg mov test ret enter fucom call add or daa sub ss inc dec push push pop pusha imul jg mov test ret leave into rcr fsubp call add repz std add or adc push and xor cmp pop pop bound jb jl mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add clc std add or daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add add and sub xor push push pop pop gs je jg mov test ret enter fucom call add or pop sbb aaa cmp add push push pop bound jno jl xchg stos mov mov (bad) fndisi(8087 out lock cli add adc and xor dec push pop pop imul (bad) xchg cltd sahf movsb test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or push sbb and sub xor push push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul lea test ret enter fucom out repnz add or push sbb sub add add cmp dec push push pop pusha gs jne jg mov test ret enter fucom jmp add or sub inc dec push push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add push adc sbb aaa add cmp inc dec push push pop popa insb jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc sbb aaa cmp push pop popa insb jno jl xchg movsl stos mov mov aam (bad) jmp add push adc sbb aaa cmp add inc dec push push pop popa insb jno jl xchg movsl stos mov mov aam fnop in out cmc cli incl unpcklps push and xor cmp push pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc das xor ds dec add add pop pop arpl jae jle mov cmpsl lods mov mov (bad) fneni(8087 out lock add add or adc xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec add add imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop add add imul mov lods mov mov (bad) fneni(8087 in lock cli incl push and xor ds dec dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fneni(8087 out lock cli incl pop and add xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out lock add pop and ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl add js (bad) xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and xor ds dec dec push pop pop bound jb jl xchg lods mov mov aad loopne ljmp push adc push and xor cmp push pop bound jae add js orl test mov mov (bad) fsub out lock add pop and das xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and cs ds dec dec push pop pop bound jb jge add add pushf mov mov aad loopne ljmp unpcklps push and xor cmp push pop bound jno jl xchg cmpsb stos mov mov aam (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa imul addb mov stos scas mov mov (bad) jecxz in repz std add or daa sub add inc dec push push pop popa imul addb cmpsb stos mov mov aad (bad) ljmp push adc push and sub push push pop pusha gs jne jg mov add lcall rol rcl fndisi(8087 out repz incl push adc pop es cmp inc dec push popa imul popf movsl stos mov ret fcomp out repz incb or adc sbb cmp push push pop pop gs je jg mov test ret enter fucom out add add idiv add or pop sbb es cmp dec push push pop pusha gs je jg mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop imul nop xchg fwait mov mov aam (bad) jmp incb or adc push and xor cmp pop pop bound jb jl xchg stos mov mov aad loopne ja (bad) xchg lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jae jge xchg xchg pushf mov mov (bad) fneni(8087 out lock add add or adc das xor dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out lock add pop and das xor aas inc dec dec push pop pop arpl jae jge mov add mov rol rcl fsub out icebp idiv add inc dec push push pop bound jae jle mov test mov mov fcomp jecxz in repnz std add push adc push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov add add fcmovu in out hlt stc incl push adc push and xor cmp push pop popa insb jno jnp xchg movsl stos mov mov aam fsubp jmp add push adc sbb aaa cmp inc dec push push add insb jno jl xchg movsl stos scas mov mov add add add fsubp call add or daa sub cmp dec push push pop pop gs je jle mov test mov mov (bad) fsub out lock sti add pop and das xor inc inc dec push push pop pop fs ja xchg (bad) xchg lcall mov fcomp jecxz call add or pop sbb aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov fcomp jecxz in repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsb test ret leave into rcr fucom call add add clc std add or pop sbb daa sub aaa cmp inc dec push push pop pusha imul addb movsb test ret leave into rcr fucom call add or pop sbb es aaa cmp inc dec push push pop pusha imul jg mov test ret leave into rcr fucom call add add or pop sbb es aaa cmp inc dec push push pop pusha gs jno jl xchg movsl stos mov mov rcl fneni(8087 in lock cli incl unpcklps pop and cs aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov xlat fsub out icebp idiv push or adc xor dec push pop pop fs je jle mov test ret enter fucom call add or pop sbb es cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz std add or adc sbb aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc push and sub inc dec push pop pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb add and aas inc dec dec push pop pop fs je jg mov test mov mov fcomp loop in repnz add or push sbb es cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz std add or daa add sub aaa cmp inc dec add pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and xor ds dec dec push pop pop bound jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and xor aas inc dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp add add dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz in repz std add or daa sub ss inc dec push push pop pusha gs jne jg add movsl stos mov mov aam (bad) jmp add or daa sub add push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc sbb aaa cmp push pop popa imul addb movsl stos mov mov aam (bad) jmp add pop and das xor aas inc dec dec add add pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop fs je jg mov test ret enter fucom call add or pop sbb daa sub cmp dec push push pop pusha imul jg mov stos scas mov mov (bad) jecxz out repz std add or daa sub inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp incl unpcklps pop and xor ds dec dec push pop pop arpl add jb jge xchg lods mov mov (bad) fndisi(8087 out lock sti add pop and pop pusha gs jne jg mov test ret leave into aam fsubp call add or daa sub inc dec push push pop popa imul addb add add stos scas mov mov fcmovu in out hlt stc incl push adc push and xor cmp push pop bound jb jl xchg stos mov mov aad loopne jmp cmc cli incl pop and das xor ds dec dec push pop pop arpl jae jge mov pushf mov mov (bad) fndisi(8087 out icebp idiv add or adc xor add pop pusha gs jne jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push pop pop outsl jbe test lods mov add add rcl fsub out lock add or adc das xor aas inc dec dec push add imul mov lods mov mov (bad) fndisi(8087 out lock sti add pop and aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg cmpsb stos mov mov aam fsubp jmp add or sub inc dec push push pop popa imul addb movsb test add ret leave into rcr fucom call add or pop sbb daa sub cmp dec push push pop pusha gs jne addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub inc dec push push pop popa imul addb mov mov add add iret aam fsubp jmp add or daa sub inc dec push push pop popa imul addb movsb test ret leave into rcr fucom call add or pop sbb daa sub cmp dec push push pop pusha gs je jg mov test mov mov rcl fsub out icebp idiv add or adc xor dec push pop pop imul lea lods mov mov (bad) fndisi(8087 out lock cli add pop and das xor ds dec dec push pop pop arpl jb jge xchg stos mov mov (bad) add fsub out lock add pop and das xor aas inc dec dec push pop pop arpl jb jge xchg cmpsb lods mov mov aad loopne ljmp push adc push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aam fild add add jmp add or daa sub inc dec push push pop popa imul addb movsb stos scas mov mov fcomp jecxz in repnz std add or pop sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom out in repnz add or push sbb sub xor push push pop pop add jne addb movsb test ret enter fucom jmp add push adc sbb aaa cmp inc dec push push pop popa insb jno jnp xchg movsl stos scas mov mov (bad) jecxz out add repz std add or sub ss bound jb jge xchg lods mov mov (bad) fndisi(8087 out repnz incb or sub dec dec push pop pop arpl jae jg mov test mov mov fcomp loop in repnz add or add add sbb sub cmp dec push push pop pop fs jne jg mov stos scas mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test rol rcl fndisi(8087 out lock add add add and inc dec push pop bound js mov lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha imul jg mov movsl stos mov mov aam (bad) ljmp push adc sbb cmp inc dec dec push pop pop arpl jb jge xchg stos mov mov aad (bad) ljmp push adc sbb aaa cmp inc dec push push pop pusha imul addb movsb test ret enter fucom out repnz add or push sbb and aas inc dec add dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor cmp pop pop imul mov lods mov mov (bad) fsub out lock sti add pop and xor ds dec dec push add bound jno jl xchg movsl stos scas mov rol iret add fnop in out hlt stc incl push adc push and sub inc dec push push pop popa imul addb movsb test ret leave into rcr fucom call add or push sbb sub xor dec push add pop pop imul lea lods mov mov (bad) fneni(8087 in lock cli incl push and xor cmp push pop popa insb jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz std add or pop sbb es cmp dec push push pop pop fs jbe orl (bad) aad (bad) ljmp push adc push and sub inc dec push push pop popa insb jno jnp xchg movsl stos scas mov mov aad (bad) ljmp push adc push and xor cmp push pop popa insb jno add add add add addl mov mov (bad) in out hlt stc incb or adc sbb aaa cmp push pop popa imul addb movsb stos scas mov mov fcomp jecxz out repz std add or daa sub ss inc dec push push pop pusha gs jne add add mov test ret enter fucom out repnz add or pop sbb sub cmp dec push push pop pop gs je jg mov stos scas mov mov (bad) jecxz out repz incb or sub inc dec push push pop popa imul addb add add movsb stos scas mov mov fcomp jecxz in repnz std add or adc push and sub inc dec push push pop popa data16 jno jnp test movsl stos scas mov mov fcomp jecxz in repnz add or daa sub ss inc dec push push pop pusha gs jne jg mov add add test ret enter fucom out repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out lock add and aas inc dec dec push pop pop arpl jae jge mov add add mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop add jne jg mov test mov (bad) jecxz in repz std add or daa sub aaa cmp inc dec push push pop pusha imul jg mov add add add mov mov fcomp loop in repnz add or push sbb daa sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom out icebp idiv add or push sbb sub cmp dec push push pop pop fs je jle mov mov mov xlat fsub out lock add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli add or push sbb and inc inc dec dec push pop pop imul mov add add ret enter fucom out in repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test ret leave into rcr fucom call add or pop sbb sub cmp dec push push pop pusha gs jne jg mov test scas mov mov fcomp loop in repnz add or push sbb sub xor push push pop pop gs je jle mov test mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul lea lods mov mov rol rcl fndisi(8087 out lock sti add pop and das xor push push pop pusha gs je jg mov test mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul mov lods mov mov ret rcl fsub out icebp idiv add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov add iret aad (bad) jmp add push adc sbb aaa cmp push pop popa insb jno jnp xchg movsl stos mov mov aam fsubp jmp add or daa sub aaa cmp inc dec push push pop popa imul (bad) xchg stos mov mov aad loopne ljmp push adc push and xor cmp push pop bound jb jl xchg stos mov mov aam (bad) jmp add or daa sub inc dec push push pop popa imul addb movsl stos scas mov mov flds add jecxz in repz std add or daa sub ss inc dec push push pop pusha imul jg mov test ret enter fucom out repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop arpl jae jle mov test mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb stos scas mov mov fcomp jecxz add add repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out lock add pop and das xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp add add stc incb or adc sbb aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov fcomp jecxz in repnz add or push sbb sub xor dec push pop pop imul mov lods mov ror aad loope ljmp add add adc push (bad) mov cmpsl lods mov mov (bad) fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov aad loopne jmp cmc cli incl push and xor ds dec dec add pop bound jb jl xchg cmpsb stos mov mov aam (bad) jmp add push adc sbb aaa cmp push pop popa imul addb movsb test ret enter fucom out repnz add or pop sbb sub cmp dec push push add pop pop fs je jle mov scas mov mov (bad) in out repz incb or adc sbb cmp push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add push adc push and xor cmp push pop bound add jl xchg stos mov mov aad (bad) ljmp unpcklps pop and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out lock add and aas inc dec dec push pop pop imul add jle mov cmpsl lods mov mov (bad) fsub out lock add and aas inc dec dec push pop pop imul lea lods mov mov fucom call add or pop sbb daa cs cmp push pop popa data16 jno jnp test mov stos scas mov mov fcomp loop in repnz add or push sbb sub xor dec push pop pop arpl jae jge mov cmpsl lods mov mov aad loopne ljmp push adc sbb cmp push pop popa imul addb add (bad) xchg cltd lahf movsb test ret enter fcomp jecxz in repnz add or push sbb sub cmp dec dec push pop pop imul mov lods mov mov (bad) fneni(8087 in out cmc cli incl push adc push and xor cmp push pop bound jno jnp xchg add nop xchg lcall mov fcomp loop in repz add or push sbb sub cmp inc inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz incb or sub inc dec push push pop popa data16 jno jnp xchg add fwait mov mov aam (bad) jmp add push adc push and xor cmp pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul mov add test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz incb or sub inc dec push push pop popa insb jno jl (bad) xchg stos mov mov rol rcl fnop in out cmc cli incl unpcklps push and xor cmp push pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jb jl xchg stos mov mov rol rcl fcmovu in out hlt stc incb push adc push and sub inc dec push push pop popa data16 jno jl xchg movsl stos mov mov aam fsubp jmp add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb stos scas mov mov add leave into rcr fsubp call add or pop sbb es cmp dec push pop pusha imul addb movsl stos scas mov ret rcr fucom out repnz add or daa sub aaa cmp inc dec push push pop popa insb jb jge mov mov rcr fucom out repnz add add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp push adc push and xor cmp pop pop bound jb jl xchg stos mov mov (bad) fneni(8087 in lock cli add add unpckhps pop and das xor ds dec dec push pop pop arpl jae jge mov mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha imul orl mov aad (bad) ljmp unpcklps add and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out repnz add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and xor cmp pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) add loop in repnz add or push sbb sub add cmp dec push push pop pusha gs jne jg mov test leave into rcr fsubp call add or daa sub aaa cmp inc dec push push add imul addb movsl stos scas mov mov fcomp jecxz in repnz std add or daa sub cmp inc inc dec push push pop pusha gs je jg mov test mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge xchg stos mov mov aad (bad) ljmp unpcklps push and xor cmp add dec dec push push pop popa insb jno jnp xchg movsl stos scas mov mov fcomp jecxz in repnz add or es cmp dec push push pop pusha gs je jle mov test mov mov (bad) fsub jmp idiv add or pop sbb daa sub cmp dec push add pusha imul addb mov mov aam fsubp call add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test ret enter fucom out repnz add or pop sbb sub cmp dec push push add add gs je jg mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or pop sbb daa sub aaa cmp inc dec push push pop pusha add jo jp test movsb stos scas mov mov fcomp jecxz in repz std add or sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb cmp push pop bound jno ja addl mov (bad) loope lock add adc push es xchg mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop imul mov scas mov mov fcomp loop in add add idiv add or push add aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpckhps pop and aas inc dec push push pop bound jno jg lea mov xlat fucom out icebp idiv add or add push sbb ds dec dec push pop pop arpl jae jge mov test mov mov (bad) fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop bound jb add mov cmpsl lods mov mov (bad) fneni(8087 in lock cli add pop and add xor ds dec dec push pop pop bound jb jl xchg stos mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop arpl jae jge mov cmpsl lods mov mov aad loopne ljmp unpcklps push and xor cmp push pop bound jno jl xchg movsl stos scas mov mov (bad) jecxz out repz std add or daa sub ss inc dec push push pop pusha gs jne jg mov test scas mov mov fcomp loop in repnz add or pop sbb sub cmp add add dec push push pop pop imul mov lods mov mov (bad) fndisi(8087 out lock cli add pop and das xor ds dec dec push pop pop bound jb jl xchg stos mov mov aam (bad) jmp add push adc push and xor cmp add push push pop popa insb jno jnp xchg movsl stos scas mov mov fcomp jecxz in repnz std add or pop sbb daa sub cmp dec push push pop pusha gs je jg mov test mov mov xlat fsub out icebp idiv add and aas inc dec add add pop pop arpl jae jge xchg stos mov mov aad fneni(8087 in lock cli incl unpcklps pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aam (bad) jmp add push adc sbb cmp add push push pop popa data16 jno jnp xchg movsl stos scas mov mov fcomp jecxz in push sbb daa sub cmp pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pop gs je jg test movsb test ret leave into rcr fsubp call add or daa sub inc dec push push pop bound jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and sub xor dec push pop pop gs je jg mov add add test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop imul (bad) xchg cltd add add mov rcr fucom call add or daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc push and sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock cli add pop and aas inc dec dec push pop pop arpl push je jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov add mov rol iret aad (bad) jmp add push adc push and xor cmp pop pop bound jb jl xchg lods mov mov xlat fucom out repnz add or pop sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) lret (bad) in out hlt stc incb or adc push and sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock sti add pop and das xor aas inc dec dec push pop pop imul lea lods mov mov rcl fucom out repnz add or push sbb sub cmp add pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov loop add ljmp unpcklps pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) jmp add push adc push and sub inc dec push push pop popa imul addb movsb test ret leave into rcr fsubp call add add clc std add or pop sbb sub cmp dec push push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge xchg lea lods mov mov (bad) fsub out lock add sti add pop and xor ds dec dec push pop pop bound jb jl xchg movsl stos mov mov aam (bad) jmp add unpcklps push and xor cmp push pop popa insb jno jnp xchg movsl stos scas mov add (bad) in out hlt add incb or adc sbb aaa cmp inc dec push push pop popa imul addb movsb test ret enter fucom call add or pop sbb sub cmp dec dec push pop pop imul mov lods mov mov (bad) fndisi(8087 out icebp idiv add add add add pop and das xor ds dec dec push pop pop arpl jb jge xchg stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov fcomp jecxz in repz std add add add or sub xor cmp pop pop bound jb jl xchg stos mov mov aad loopne ljmp or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or add adc sbb es cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz std add or sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad (bad) ljmp unpcklps add and cs ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb daa add sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc push and xor add cmp inc dec dec push pop pop bound add jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs je jg mov test ret enter fucom call add or pop sbb daa sub aaa cmp add add dec push push pop popa imul test movsb test (bad) leave into rcr fsubp call add or daa sub inc dec push push pop bound jno jl xchg stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec add add push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs je jg mov test mov (bad) in out repz incb or adc sbb cmp push add add insb jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push data16 jb jl xchg stos mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno add add xchg test mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha gs jne addb movsb stos scas mov mov (bad) in out repz incb or sub inc dec push push pop popa insb jno jl xchg add mov stos mov mov aad loopne ljmp unpcklps pop and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov add add mov mov aam loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop gs je jg mov add ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jge xchg lods add int3 rcl fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add add adc pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov add mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addl mov mov add lret fcmovu in out hlt cli incl unpcklps push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fsub out lock add and aas inc dec dec push pop pop imul mov lods mov mov add add fucom out repnz add or pop add cmp inc dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat faddl add add add add out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or daa sub inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add out hlt cli incl unpcklps push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 out lock add or push sbb and inc inc dec dec push add imul addb cmpsb stos mov mov aad loopne ljmp add cli incl unpcklps pop and das xor ds dec dec push pop pop arpl outsl je jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pop gs je jg mov test ret enter fucom call add pop or pop sbb aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and xor cmp pop pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out lock add add adc xor push push pop pop gs je jg mov stos mov mov aad (bad) ljmp unpcklps push and cs ds dec dec push pop pop arpl jae jge mov cmpsl add enter fucom out repnz add or pop add sbb es aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and sub dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fneni(8087 out lock sti add pop and add add das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop popa imul addb movsl stos mov mov (bad) fneni(8087 in lock cli add pop and das xor add ds dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz incb or sub inc dec push push pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor push add push pop pop gs jne jg mov test (bad) leave into rcr fsubp call add add adc das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or push sbb es cmp dec push push pop add pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul outsb je jle mov test ret enter fucom call add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos mov mov aam (bad) ljmp push adc push and cs aas inc dec dec push pop pop imul jle mov movsb stos scas mov mov (bad) jecxz out repz incb or sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne jmp cmc cli add pop and das xor aas inc dec dec push pop pop arpl jae jle add mov idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov xlat fucom call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in add jmp add and inc inc dec push push pop pop fs je jg mov test mov mov xlat fsub out icebp idiv add or push sbb add sub cmp dec push push pop pusha imul jg mov mov ret int3 rcr loope lock add adc pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov (bad) in out repz incb or sub xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov aam (bad) jmp add push adc push and add sub xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor cmp push pop bound jb jl xchg stos mov mov (bad) fneni(8087 in lock cli add pop and das xor add aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb xor add add inc dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and cs ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli incl pop and das xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fucom call add or pop sbb daa sub cmp dec push push add imul jg mov stos scas mov mov (bad) jecxz in repz std add or daa sub aaa cmp inc dec push push pop popa add jno jl xchg cmpsb stos mov mov aad (bad) ljmp push adc push and xor cmp push pop add bound jb jl xchg stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound sahf mov mov fnop in lock sti add or adc sbb es ss inc dec push push pop insb jno jl xchg add mov mov xlat fsub out repnz add or pop sbb daa sub ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub call add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos add scas mov mov fcmovu in out cmc cli incl unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov test add add (bad) jecxz out repz incb or adc pop and das xor aas inc dec dec push pop pop arpl push je jg mov test ret leave into rcr fsubp call add or sub inc dec push push pop bound jb jl xchg lods mov mov add lret rcl fndisi(8087 out lock add or push sbb sub xor push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov xlat add fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad loopne jmp cmc cli add pop and inc inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne ljmp add lock cli incl pop and das xor dec push pop pop fs je jg mov test ret enter fsubp call add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add add push or push sbb sub cmp dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp or adc das xor dec push pop pop gs je jg mov test (bad) leave into rcr fsubp jmp add add adc sbb cmp pop pop arpl je jg mov test ret leave into rcr fsubp call add or sub inc dec push push pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb add sub xor push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb daa sub xor cmp inc inc dec push push pop bound jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and inc inc dec push push pop pusha gs jne addb movsl stos mov mov (bad) fneni(8087 out lock sti add and add inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) in out hlt stc incb or adc push and xor cmp pop pop bound jb jge xchg test mov mov xlat fucom out repnz add or pop sbb es ss inc dec add add pop pusha imul addb cmpsb stos mov mov aad loopne ljmp unpckhps pop add sub xor push push pop pusha gs jne jg mov stos mov mov aam (bad) ljmp unpcklps push and cs ds dec dec push pop add pop arpl jae jle mov test mov mov fcomp in out repz incb or adc push and xor cmp pop pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs add jp test movsb stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out repnz add or push sbb es cmp dec push push pop pusha data16 add jl xchg stos mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz std add unpcklps push and cs ds dec dec push pop pop arpl jae jge mov add lea lods mov mov xlat fsub out repnz add or adc sbb cmp push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov add add mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl add add (bad) lret fcmovu in out hlt stc incb unpcklps pop and cs dec push pop pop fs je jg mov test ret leave into rcr fsubp call add push adc push and sub dec dec push add arpl jae jge mov test mov add rcl fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and aas inc dec dec push pop pop imul mov scas mov mov enter fucom call add or sub inc dec push push pop popa insb jno jnp xchg movsl stos mov mov loop in repnz add or daa sub cmp push pop popa push mov test mov mov (bad) fndisi(8087 out lock cli add pop and xor ds dec dec push pop pop arpl jb jge xchg stos mov mov aam (bad) jmp add or daa sub ss inc dec push push pop pusha imul jg mov test ret enter fucom out icebp idiv add push or push sbb and aas inc dec dec push pop pop imul lea lods mov mov (bad) fneni(8087 out lock cli add pop and cs ds dec dec push pop pop bound jb jl xchg stos mov mov aam fsubp jmp add or daa sub cmp dec push push pop pusha gs jne jg mov stos mov mov aam fsubp jmp add or daa sub cmp dec push push pop pusha gs jne jg mov test ret rcl fsub out icebp idiv add or add adc das xor aas inc dec dec push pop pop arpl jae jge xchg lods mov mov aad (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa imul addb movsb test ret enter fucom out repnz add or add sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or adc pop and aas inc dec dec push pop pop arpl jb jge mov cmpsl lods mov mov aad loopne ljmp push adc push and xor cmp push pop bound jno jl xchg stos mov mov aam (bad) jmp add or add add sub aaa cmp inc dec push push pop pusha imul jg mov test ret enter fucom out repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc add add add add xor aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 in add idiv add or push sbb sub cmp dec push push pop pop gs je jle mov test ret rcl fsub out icebp idiv add or push sbb and xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) jmp add push adc sbb aaa add inc dec push push pop pusha imul jg mov test ret enter fucom out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jb jl xchg lods mov mov loopne ljmp unpckhps pop and sub aaa cmp inc add dec push push pop bound jb jl xchg test mov mov loope out idiv add adc and xor aas inc dec push push pop pusha gs je jg mov test ret enter fucom call add or push sbb sub cmp dec push push pop pop gs je add jle mov test mov mov xlat fsub out repnz add or push sbb sub xor push push pop pop fs je jle mov test mov mov xlat fsub out repnz add pop or pop sbb es cmp dec push push pop pusha gs je jg add mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pusha jg mov test ret enter fucom out repnz add or push sbb sub cmp dec dec push pop pop imul mov add ret rcl fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jno jl xchg stos add lret fcmovu in out hlt stc incb push adc push and xor cmp push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp unpcklps push and cs ds dec dec push pop pop arpl jb jge mov test mov add rcl fsub out icebp idiv add and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul mov lods mov mov add ret rcl fsub out icebp idiv add pop and das xor dec push add fs je jle mov test mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul mov lods mov mov add int3 rcl fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop imul lea lods mov mov fcomp loop in repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter add rcr fucom call add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov nop xchg lcall mov add fsubp jmp add or daa sub aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov (bad) jecxz in repz std add or daa sub ss inc dec push push pop pusha imul addb movsb test (bad) leave into rcr fiadd add add jmp add push adc sbb aaa cmp push pop popa insb jno jl xchg movsl stos mov mov aam fsubp jmp add or daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz add out repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test ret enter fucom out repnz add or push sbb and aas inc dec dec push pop pop imul mov test ret enter add unpcklps add pop and cs ds dec dec push pop pop arpl jae jge mov test mov mov fcmovu in out cmc cli add or adc das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl mov mov aad loopne ljmp push adc push and add xor ds dec dec push pop pop bound jb jl xchg stos mov mov (bad) fneni(8087 in out cmc cli incl push adc push and xor cmp push pop bound jae jle mov stos mov rol (bad) fsub out icebp idiv add or adc das xor add add push pop pop imul lea lods mov mov xlat fucom out icebp testl adc sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incb push adc push and xor cmp add add imul mov lods mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop add popa imul addb movsl stos scas mov mov (bad) in out hlt stc incl push adc push and xor cmp pop pop bound jb jl xchg lods mov mov aad loopne ljmp adc das xor aas inc dec dec push pop pop arpl add js orl cmpsl lods add int xlat fucom out repnz add or pop sbb es cmp dec push push pop pusha gs jbe addl mov mov (bad) in out repz incb push adc push and sub inc dec push push pop popa insb jno add add addl mov mov (bad) in out repz incb or adc sbb cmp push pop bound jno jl xchg cmpsb stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jb jge (bad) xchg lods mov mov (bad) fneni(8087 in lock sti add and aas inc dec dec push pop pop imul mov lods mov mov xlat repnz std add or adc push and xor ds dec dec push pop pop arpl jb jge xchg add add mov (bad) jecxz out hlt cli incl and sub aaa cmp pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov aam fsubp jmp add push adc sbb and das xor ds dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov add add lret rcl fnop in lock cli incl pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs jne jg mov test (bad) leave into rcr fsubp call add or sub inc dec push push add push (bad) mov cmpsl lods mov mov (bad) faddl add loope in icebp idiv add or push sbb and inc inc dec dec push pop pop fs je jg mov test (bad) leave into rcr fsubp call add or daa sub inc dec push push pop popa data16 jno jnp xchg stos mov mov aad loopne ljmp add add cmc cli incl and sub xor push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor cmp pop pop bound jb jge xchg test mov mov xlat fsub out icebp idiv add add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jns test mov mov fcomp jecxz out repz std add add daa sub inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor inc inc dec push push pop pop gs je jg mov test (bad) leave into aam fsubp jmp add or add add cmp push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb add add sub xor push push pop pusha gs je jg mov test mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add and add dec push pop pop imul addb movsb stos scas mov mov (bad) in out add cli incl unpcklps pop and sub xor dec push pop pop imul mov scas mov mov fcomp loop in repnz std add or daa sub aaa add add inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor dec push push pop pop gs je jg mov test ret enter fucom call add or daa sub inc dec push push pop popa data16 jno jnp xchg cmpsl lods mov mov (bad) fndisi(8087 out lock sti add or adc add cmp dec push add add pusha add jno jnp xchg movsl stos mov mov aad (bad) ljmp unpcklps push and cs ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc push and das xor ds dec dec push pop pop arpl add add jns orl test mov mov (bad) jecxz out repz incb or adc sbb cmp pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor cmp dec push push pop pusha gs jne add mov test (bad) leave into aam fsubp jmp add or sub dec dec push pop pop bound jb jge xchg lods mov mov ret rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb add mov stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out repz std add or daa sub inc dec push push pop bound jb jl xchg pushf mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop gs je jg mov test ret leave into rcr fsubp call add or daa sub inc dec push push pop popa insb jno jl xchg add (bad) lret rcl fneni(8087 in lock add add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor dec dec push pop pop imul mov lods mov mov ret rcl fsub out icebp idiv add or push sbb sub xor push push pop popa insb jno jl xchg stos mov mov aad (bad) ljmp push adc push and xor cmp pop pop bound jb jl xchg lods mov mov add (bad) fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl jae jge mov mov mov mov xlat fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov (bad) fndisi(8087 out lock cli add pop and cs ds dec dec push pop pop bound jb jl xchg cmpsb stos mov mov aam (bad) jmp add or daa sub aaa cmp inc dec push pop pop bound jb jl xchg stos mov mov aam add add in out repz incb or adc sbb aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov (bad) jecxz in repz std add or daa sub cmp dec push push pop pusha gs jne jg mov test mov add (bad) jecxz out repz std add or daa sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fucom call add or push sbb sub cmp dec push push pop pop imul mov lods mov mov xlat fsub out in icebp idiv add or adc das xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp add sti add pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and cs ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp add add push adc sbb aaa cmp push pop popa imul addb movsb test ret enter fsubp call add or pop sbb sub cmp dec push push pop pop fs je jle mov test mov mov (bad) jecxz out repz std add or daa sub cmp dec push push pop pusha gs je jg mov test mov mov fcomp loop in repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov (bad) fsub out icebp idiv add add add adc das xor aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov aad loopne jmp cmc cli incl push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc add push and sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in lock cli incl unpckhps pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb add sub xor dec push pop pop fs je jle mov test mov mov xlat fucom out repnz add or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or sub add add ds dec dec push pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or sbb aaa add add add cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or sub xor cmp push pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor ds add dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov test ret leave into rcr fsubp call add or daa sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb cmp pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop add pusha gs jne jg mov test ret enter fucom call add or pop sbb daa sub aaa cmp inc dec push push pop popa imul jl xchg stos mov mov aad loopne ljmp lldt das xor aas inc dec dec push pop pop add je jle mov test mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa insw add add jge xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop fs je add jg mov test scas mov mov (bad) jecxz in repz std add or daa sub aaa cmp inc add push pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge add popf mov mov (bad) fsub out lock add and aas inc dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz std add or daa sub inc dec push push pop popa imul addl add xchg xchg fwait mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add pop and aas inc dec dec push pop pop imul mov add mov rcl fsub out icebp idiv add add daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and sub inc dec push push pop bound jno jl xchg add add rol rcl fsub out icebp negb and xor ds dec dec push pop pop bound jb jl xchg lods mov mov fcomp jecxz in repnz std add push adc push and sub inc dec push push pop bound jno jl xchg cmpsb stos mov mov aad fcmovu in out hlt cli incl unpcklps push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or adc das xor push push pop popa imul ja addl lret loope lock sti add add add or pop sbb sub xor ds dec dec push pop pop gs jne jg mov stos mov mov aad loopne jmp cmc sti add or push sbb es ss inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz incb or add add and sub inc dec push push pop bound jno jl xchg cmpsb stos mov mov aad (bad) jmp add push adc push and xor add push pop pop arpl jae jge mov cmpsl lods mov mov aad loopne ljmp unpcklps pop add cs ds dec dec push pop pop arpl jb jge xchg stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov aad (bad) ljmp push adc push and add add cmp push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add push adc sbb cmp push pop popa insb jno jnp xchg movsl stos mov mov aam fsubp jmp add or daa sub ss inc inc dec push push pop popa imul add fwait mov mov aam (bad) jmp add or daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp add inc dec imul lea lods mov mov (bad) fneni(8087 in lock cli add pop and xor ds dec dec push pop pop arpl je jle mov test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop add fs je jle mov test mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fneni(8087 out lock cld add or push sbb and aas inc dec dec push pop pop add imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl add jle mov test ret enter fucom call add or push sbb sub cmp dec dec push pop pop fs je jg mov test mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop arpl jae add mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge (bad) mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov fcomp jecxz out repz std add or daa sub ss inc dec push push pop pusha imul addb (bad) xchg lcall mov (bad) jecxz in repz std add or daa sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fucom call add or pop sbb es cmp dec push push pop pusha gs je jg mov add mov mov xlat fucom out icebp idiv add or push sbb sub xor dec push pop pop fs je jle mov test mov mov xlat fucom out icebp idiv add or push sbb and aas add push push pop pop gs je jg mov add mov rcr fucom out icebp clc std add or daa sub ss inc dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or pop sbb daa sub cmp dec push push pop pusha gs jne jg mov add test ret enter fucom call add or push sbb sub cmp dec push push pop pop gs je jg mov test mov mov fcomp loop in repnz add or push sbb sub cmp dec push push pop pop gs je jg mov test mov mov fcomp loop in repnz add or push sbb sub xor dec push pop pop imul mov test ret leave into rcr fsubp call add or pop sbb sub inc dec push push pop popa imul addb movsl stos scas mov add add aam fsubp jmp add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test ret enter fsubp call add or pop sbb es cmp dec push push pop pop gs je jg mov test mov mov add add enter fucom out repnz add or push sbb sub cmp dec push push pop pop gs je jg mov test mov mov xlat fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov add add rcl fndisi(8087 out icebp idiv add pop and aas inc dec dec push add imul jg mov test ret enter fucom call add or pop sbb daa sub cmp dec push push pop pusha gs jne jg mov test ret enter add add add fcomp loop in repnz add or push sbb sub cmp dec push push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop imul lea lods mov mov (bad) add add loope jmp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop arpl jae jge mov test mov mov xlat fsub add add add in icebp idiv add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out lock add or add sbb sub cmp dec push push pop pop gs je jg mov test mov mov xlat fsub out in icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov (bad) fndisi(8087 out lock cli add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad (bad) ljmp hlt cli incl push adc push and xor ds dec dec push pop pop bound jb jl xchg cmpsb lods mov ret (bad) fsub ljmp sbb orl lods mov mov (bad) fneni(8087 call or pop push es cmp dec pop pop gs jae addb pushf movsb stos mov mov jecxz icebp clc add or pop push and xor inc inc dec push pop bound jp test movsb test (bad) leave into aam fsubp jmp add unpcklps push and xor ds dec dec push pop pop bound jb jge xchg lcall rol rcl fcmovu in add add add out hlt stc incl push adc push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aam (bad) jmp add push adc pop and xor ds dec dec push pop pop arpl jb jl xchg stos mov mov aam (bad) jmp add stc incb or sub inc dec push push pop fsub out icebp idiv add or push sbb and inc inc dec dec push pop pusha gs jne jg mov test (bad) leave iret aam fsubp call add or daa sub aaa add push pop bound jno jl xchg cmpsl lods mov (bad) into (bad) (bad) out clc incl or push sbb es aaa cmp inc dec push push pop popa data16 jno jl mov test mov mov fcmovu in icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa push (bad) xchg test mov add mov rcr fucom call add or daa sub aaa cmp inc dec push push pop bound jno jl xchg lods mov mov (bad) fneni(8087 out icebp idiv add or pop sbb cmp pop pop arpl jb jge mov test mov mov add add rcr fucom call add push adc sbb cmp inc dec dec push pop pop arpl jae jge xchg cmpsl lods add int fcomp call add unpcklps pop and cs add dec push pop pop imul mov mov mov fadds fucom call add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb lods mov mov xlat fucom call add adc cmp data16 jne test in xor popa push mov mov (bad) add aam in repnz add inc dec push pop arpl js xchg mov ret xlat fucom jmp cli add adc cmp push push pop pusha gs jne test int3 rcr (bad) out hlt cli add push adc xor ds dec push pop pop data16 mov stos mov mov aad add (bad) ljmp unpcklps push and xor ds dec dec push pop pop add insl jae jge xchg cmpsb lods mov mov aad loopne ljmp push adc push and xor cmp push pop bound jno jl xchg movsl stos mov mov aam add add jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul jg mov test (bad) int (bad) jmp or push sbb and inc dec dec push push pop bound jb jl xchg stos mov mov aad (bad) ljmp add or pop push and inc dec push pop bound ja xchg mov mov aad loopne ljmp unpcklps and das aaa cmp inc dec push push pop popa imul jl xchg stos mov mov aad (bad) ljmp push adc push and xor add cmp push pop bound jb jl xchg lods mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and sub add add push push pop popa imul addb movsl stos scas mov mov incl unpcklps push and xor cmp push pop bound jno jl xchg cmpsb stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul add add test mov mov add (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg add add lahf movsb test (bad) leave iret aam fsubp jmp add push adc sbb cmp push pop bound jb jl xchg stos mov mov (bad) fneni(8087 out lock add or pop sbb es cmp dec push push pop pusha imul addb add xchg lcall mov (bad) in out hlt stc incb push adc push and xor cmp pop pop bound jb jge xchg lods mov mov rcl fucom call add or pop sbb daa sub ss inc dec push push pop popa imul addb add mov mov aad (bad) ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz std add or daa sub inc dec push push pop popa insb jno jl xchg stos add lret rcl fneni(8087 in lock sti add or adc xor cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov add add add add enter fucom call add or and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb es cmp dec push push pop pusha imul addb movsl stos mov mov add iret aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or daa sub dec push pop pusha imul xchg lcall mov fcomp loop in add add testl adc sbb es aaa cmp inc dec push push pop popa imul mov mov ret fcomp out cmc cld add sbb sub cmp push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz incb or daa sub cmp inc dec push push pop popa imul addl mov rol iret aad (bad) jmp add push adc sbb cmp push pop bound jb jl mov mov ret rcl fucom out repnz add or push sbb es cmp inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl add jae jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb es cmp dec push push pop pusha imul addb movsb stos scas mov mov fcmovu in out hlt stc incb push adc push and xor ds dec dec push pop pop bound jb add (bad) xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov test (bad) aad loopne ljmp unpcklps push and add xor aas inc dec dec push pop pop imul orl test mov mov xlat fucom call add or pop sbb es cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out hlt stc incb or adc push and sub inc dec push push pop bound jno jl xchg add xchg xchg fwait mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov add sahf movsb test ret enter fucom jmp add unpcklps push and cs ds dec dec push pop pop arpl outsb je jle mov test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb add (bad) lret rcl fneni(8087 in lock cli add and inc inc dec push push pop pop gs jne jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov add mov fucomip icebp idiv add or pop sbb es aaa cmp inc dec push push pop pusha imul addb movsb test ret enter fucom out repnz add or sbb inc inc dec push pop bound ja test mov mov fsub out lock add pop and xor push push pop pop fs jne addb movsl stos mov mov aad loopne ljmp unpcklps push and cs aas inc dec dec push pop pusha gs jne addb cmpsb stos mov mov aad (bad) jmp add push adc sbb aaa cmp pop imul mov jle pushf mov mov rcr fsubp in repz std add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp loop in repnz std add or add daa sub aaa cmp push pop bound jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps push and cs add cmp inc dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or add and sub cmp add push pop pusha gs jne jg mov test (bad) lret (bad) in out hlt stc incl push adc push and xor cmp push pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push add add imul addb movsl stos scas mov mov fcmovu in out hlt cli incl push adc push and xor cmp pop pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha add add add jne jg mov stos mov mov aad loopne jmp cmc cli add pop and aas inc dec push pop pop arpl jae jle mov test (bad) lret fcmovu in lock sti add or ss dec push pop bound jns mov fsub xor inc dec push pop popa push (bad) xchg sahf movsl lods mov (bad) lret aam jecxz icebp clc incl or xor cmp push pop popa insb jno jnp xchg movsl stos mov mov aam fsubp jmp add push adc push and xor cmp push pop bound jno jl xchg add mov stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) in out repz incb or adc push and sub inc dec push push pop popa insb add jge xchg xchg pushf mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) jmp add push adc push and xor cmp push pop popa insb jno jnp xchg add add mov aam fsubp call add or daa sub inc dec push push pop popa imul addb movsb stos scas mov mov (bad) jecxz in repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test (bad) leave into rcr fldl in out repz incl pop and aas inc dec dec push pop pop arpl jae jge xchg mov mov xlat fsub out lock add pop and aas inc dec dec push pop pop imul lea add lods mov mov (bad) fsub out lock add pop and aas inc dec dec push pop pop imul lea lods mov mov (bad) fneni(8087 in lock cli incl pop and das xor ds dec dec push pop pop bound jb jge xchg stos mov add add add add rcl fnop in out hlt cli incl push adc push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aam (bad) jmp add push add push and cs aas inc dec dec push pop pop imul mov lods mov add xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs je jg mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret add enter fucom out repnz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz in repz std add or daa sub cmp dec push push pop pusha imul jg mov test ret enter int fcomp loop in repnz add or push sbb sub add cmp dec push push pop pusha jb jge xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov (bad) fildl add out lock sti add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli add pop and add dec push pop pop imul mov lods mov mov xlat fsub add in icebp idiv add or adc jbe addb movsl stos mov mov aad (bad) ljmp unpcklps push and cs ds dec dec push pop pop arpl jb jge mov test ret leave into rcr fsubp jmp add or sub cmp push pop popa insb jno jl xchg cmpsb stos mov mov rcl fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs je jg mov test ret enter fsubp call add or sub inc dec push push pop bound jno jl xchg stos mov mov aad loopne jmp cmc sti add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repz std add or daa sub aaa cmp inc dec push add push pop popa data16 jno jnp xchg movsl stos mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp lldt xor dec push pop pop add je jg mov test ret enter fucom call add or sub inc dec push push pop bound jno jl xchg stos mov mov aad loopne jmp cmc cli add and aas inc dec dec push pop pop imul add test mov mov fcomp loop in repnz add or pop sbb aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad (bad) ljmp adc sbb sub cmp dec push push pop pusha imul addb add test movsb stos scas mov mov (bad) in out repz incb or adc sbb cmp inc dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out icebp idiv add or adc xor push push pop pop gs jne jg mov add xchg cltd lahf movsb test (bad) leave into rcr fsubp call add or daa add xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb add mov aam fsubp jmp add push adc push and inc dec push pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and cs ds dec dec push pop pop arpl jae jge xchg cmpsb stos mov add add add add aad (bad) ljmp push adc push and sub inc dec push push pop popa insb jno jnp xchg movsl stos scas mov mov (bad) jecxz in repz std add or pop sbb es cmp dec push push pop pusha imul jnp xchg movsl stos scas mov add add (bad) jecxz out repz std add or daa sub cmp dec push push pop pusha imul jg mov test ret rcl fsub out icebp idiv add or adc das xor aas inc dec push push jne addb movsl stos scas mov mov flds fsubp call add or daa sub ss inc dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub add add in icebp idiv add or push sbb and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and xor ds dec dec push pop pop bound jb jl xchg cmpsb stos mov mov aam (bad) jmp add add hlt stc incb or adc sbb aaa cmp inc dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb daa sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz add std add or daa sub aaa cmp inc dec push push pop pusha imul jg mov test ret leave into rcr fucom call add or pop sbb sub cmp dec push push pop pop gs je jg mov test ret enter fucom out repnz add add add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov fcomp loop in repnz add or add push sbb sub cmp dec dec push pop pop fs je jle mov test mov mov xlat fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out lock add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov (bad) fndisi(8087 out lock sti add pop and cs ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc add and sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) in out cmc sti add pop and das xor ds dec dec push pop pop arpl jb jl xchg stos mov mov aad (bad) ljmp push adc push and add sub inc dec push push pop popa imul addb movsb test ret enter fucom call add or push sbb add ss inc dec push push pop pusha gs je jg mov test mov mov xlat fsub out icebp idiv add or adc add das xor ds dec dec push pop pop bound jb jl xchg stos mov mov aam fsubp jmp add or daa sub cmp dec push push pop pop gs je jg mov test mov mov (bad) fsub out icebp idiv add or pop sbb add add aaa cmp inc dec push push pop pusha gs jne jg mov test ret enter fsub out repnz add or push sbb sub xor dec push pop pop imul aam (bad) jmp add push adc push and xor ds dec dec push pop add add jne jg mov stos mov mov aad loopne jmp cmc cli add pop and das xor ds dec dec push pop pop bound jb jl xchg stos mov mov aam (bad) jmp add unpcklps push and das xor ds dec dec push pop pop bound jb ja (bad) xchg lods mov mov aad loopne in icebp idiv add pop and inc inc dec dec push pop pusha imul addb mov (bad) int fucom in repz add adc push and sub inc dec push push pop bound jb jge mov add add rol rcl fneni(8087 out lock cli add pop and das xor ds dec dec push pop pop bound jb jge xchg lods mov add fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop bound jb jge xchg cmpsl add lods mov mov (bad) fneni(8087 in lock cli incl push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and cs ds dec dec push pop pop arpl jne jg mov test mov rcr fucom call add or push sbb sub cmp dec push push pop pop gs je jg mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pusha gs je jg mov test add enter fucom call add or pop sbb daa sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov fcomp jecxz in repz std add or adc push and sub inc dec push push pop popa insb jno jnp xchg cmpsb stos mov mov add add iret aad (bad) ljmp push adc push and sub inc dec push push pop bound jno jl xchg test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov add fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge mov test mov mov (bad) fsub out lock add pop and aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fildl loopne jmp cmc cli add pop and cs add gs je jg mov test ret leave into aam fsubp jmp add push adc push and sub dec dec push push pop bound jb jl xchg lods mov mov fcomp jecxz in repz std add add or daa sub inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne jmp cmc cli add pop and das xor aas inc dec dec push pop pop imul mov lods mov mov fcomp jecxz in repz std add or add pop sbb aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad loopne jmp cmc sti add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repz std add or add sub inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 out lock sti add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and cs cmp inc dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or pop sbb es ss inc dec push push pop popa imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc add dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push fneni(8087 out lock sti add pop and cs ds dec dec push pop pop imul lea lods mov mov add fneni(8087 out lock cli incl push and xor cmp push pop popa imul addb movsb test ret enter fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop arpl jb jge xchg stos mov mov aam add fcmovu in out repz std add or daa sub cmp dec push push pop pop fs je jle mov test mov mov (bad) fneni(8087 in lock cli incl push adc push and add xor ds dec dec push pop pop bound jno jnp xchg movsl stos scas mov mov add add (bad) jecxz in repnz add or push sbb sub xor dec push pop pusha gs jae addb mov mov (bad) in repz add or sbb daa sub dec push pop bound jns test lods mov rol rcr (bad) out repz incl adc sbb es aaa add inc dec push push pop arpl jb jge xchg cmpsl lods mov mov fcomp jecxz out repz incb or sub xor ds dec push pop pop data16 jb jg mov mov mov fucom jmp pop or daa sub ss inc dec push push pop popa imul add jo jnp test movsb stos scas mov mov fcomp add jmp add push adc sbb aaa ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov aad loopne ljmp or adc das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad (bad) ljmp push adc push and sub inc dec push pop pop bound jb jl xchg stos mov mov aad (bad) jmp add push adc sbb aaa cmp push pop popa insb jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz incb or daa sub aaa cmp inc dec push push pop popa imul addb add lahf movsl stos scas mov mov fucom out repnz add or push sbb sub xor dec push push pop pusha imul addb movsb test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pop gs jne jg mov add add test ret enter fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov add mov mov xlat fsub out icebp idiv add pop and aas inc dec dec push pop pop arpl jb jge mov cmpsl lods mov mov aad loopne ljmp adc sbb and aas inc dec dec push pop pop arpl jae jge mov add mov mov (bad) fneni(8087 out lock cli add pop and cs ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and sub dec dec push push pop popa insb jno jl xchg add stos mov mov aad (bad) jmp incl unpcklps push and xor ds dec dec push push pop bound jno jl xchg cmpsb stos mov mov aad (bad) ljmp push adc sbb aaa cmp push pop popa imul addb movsl stos add add lret (bad) in out repz incb or sub xor cmp push pop bound jno jnp xchg movsl stos mov mov aam (bad) jmp add or daa sub inc dec push push pop popa imul addb movsl stos scas mov mov rcr fsubp call add or pop sbb sub cmp dec push push pop pop fs je jle mov test mov mov xlat fucom out icebp idiv add or push sbb and cmp dec push push pop pop gs je jg mov rol roll (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt sti add and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz add add in repz std add or daa sub inc dec push push pop popa insb jno jl xchg lea lods mov mov xlat fsub out repnz add or push sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out add add cli incl unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp add add add pop and aas inc dec dec push pop pop imul nop xchg lcall rol rcl fneni(8087 out lock sti add or adc xor dec push pop pop fs je jg mov test ret leave into add fcmovu in out hlt stc incb sldt adc pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or sub inc dec push push pop bound jno jl xchg lods mov mov xlat fsub out repnz add or push sbb es aaa cmp inc dec push push pop popa imul addl add rcl fndisi(8087 out lock add and inc inc dec push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add push adc sbb cmp inc dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aam (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop out repz incb or adc sbb cmp pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp testb add or pop sbb daa sub ss inc dec push push pop add add insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test ret enter fsubp call add or sub inc dec push push pop bound add add jge xchg mov aad (bad) ljmp unpcklps pop and das xor push push pop popa data16 jno jnp xchg scas mov rol rcr fsubp jmp or xor inc dec dec push pusha push lea mov fild call push and dec dec push pop pop arpl add test movsb stos scas mov mov fneni(8087 out lock add and inc inc dec push push pop pusha gs jne jg mov test lret rcr (bad) in hlt sti add adc push and add inc dec push push pop pop gs je jg mov test ret leave into rcr fsubp jmp add unpckhps and inc inc dec push push pop bound jae jle mov test (bad) leave iret aam jecxz idiv push or sub inc dec push push pop popa insb add jno jl xchg cmpsb stos mov mov aam (bad) jmp add or daa sub ss inc dec push push pop pusha gs je jg mov imul mov scas mov add (bad) (bad) fsub out icebp idiv add or pop sbb es aaa cmp add add dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out hlt stc incl unpcklps pop and das xor push push pop bound jb jge mov cmpsl lods mov mov xlat fucom out repnz add or sub aaa cmp dec dec push pop arpl add js xchg fucom jmp stc add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov loope out hlt stc add movhps and dec dec push pop gs jb jl xchg stos mov mov aad (bad) add out cmc cli incl pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub xor pop pop arpl jb jge xchg lods mov mov aad loopne ljmp add add unpcklps pop and cs ds dec dec push pop pop bound jb add mov cmpsl lods mov mov (bad) fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl jb jge xchg stos mov mov aad loopne ljmp add push adc push and xor ds dec dec push pop pop bound jb jl xchg cmpsb stos mov mov aam (bad) jmp add push adc push and sub dec dec push push pop bound jno jl xchg stos mov mov aad (bad) jmp add add add adc push and xor ds dec dec push pop pop bound jae (bad) xchg lods mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound push (bad) mov cmpsl lods mov mov (bad) fndisi(8087 out lock add sbb and das xor dec push pop pop imul lea lods mov mov (bad) fsub out icebp idiv add and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb add and inc inc dec push push pop pusha gs je addb movsb stos scas mov mov (bad) jecxz out repz std add or daa sub inc dec push push pop popa imul addb test (bad) lret (bad) in out hlt stc incb or adc sbb add add cmp pop pop bound jb jl xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli add pop and cs ds dec dec push pop pop arpl jae jge mov test mov mov (bad) fsub out icebp idiv add or adc das xor add add inc dec dec push pop pop imul lea lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov aad loopne ljmp push adc push and sub add add push push pop bound jno jl xchg movsl stos mov mov fcomp in out repz incb or daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc push and sub dec dec push add bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov (bad) fsub out lock add pop and aas inc dec dec push pop pop add add outsb jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop fs je jg mov movsb stos scas mov mov (bad) jecxz out repz std push or sub xor cmp push pop bound add add jl xchg cmpsb stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jb jl xchg stos mov mov aad loopne ljmp push adc push and xor cmp pop pop bound jb add mov stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and das xor aas inc dec dec push pop pop imul add add mov mov rcr fucom call add or pop sbb es cmp dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jb jge xchg xchg pushf mov mov (bad) fsub out icebp idiv add or adc das xor dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop imul mov add add mov fcomp loop jmp add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and sub inc dec push push pop gs jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs jne jg mov test (bad) leave into rcr fsubp jmp add push adc sbb cmp push pop bound jb jl xchg lods mov mov add add (bad) lret rcl fneni(8087 out icebp idiv add or adc xor dec push pop pop gs je jg mov test (bad) leave into rcr fsubp call add push adc push and add xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov add rcl fsub out icebp idiv add or pop sbb es cmp dec push push pop pusha imul addb stos scas mov mov (bad) in out repz std add push adc sbb aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov flds fsubp call add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test ret leave into rcr fucom call add or pop sbb daa sub cmp dec push push pop pusha gs jne jg mov test mov mov xlat fsub add in icebp idiv add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out lock add and cmp dec push push pop pop fs je jle mov test mov mov in out repz stc incb or sub dec dec push pop pop bound jb jl xchg stos mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop imul mov mov mov fnop in lock cli add add or adc xor cmp inc dec push push pop bound jb jge mov test mov mov (bad) jecxz out repz incb unpckhps and aas inc dec push push pop pusha imul jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps push add sub xor cmp pop pop bound jb jl (bad) mov cmpsl lods mov mov aad loopne ljmp push sbb sub cmp dec push push pop pusha imul addb movsb test ret enter fucom call add or pop sbb es add cmp dec push push pop pusha gs jne jg mov test ret enter fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov (bad) fndisi(8087 out lock sti add pop and xor add add ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa imul addl mov mov (bad) jecxz out repz std add or xor cmp add push pop pop arpl jb jge xchg cmpsl lods mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa imul addb movsl stos mov mov aam fsubp jmp add or daa sub ss inc add add push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and cs ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) jmp add push adc sbb aaa cmp inc dec push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc push and sub inc dec push push pop add add insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl insl jb jns orl test mov mov xlat fucom out icebp idiv add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pop fs add add mov stos scas mov mov (bad) jecxz out repz incb or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test (bad) leave into rcr fsubp call add or pop sbb sub cmp dec push push pop pop gs je jle add mov mov xlat fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods add int xlat fsub out icebp idiv add or adc das xor ds dec dec push pop pop imul add mov test mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jb jl xchg stos mov rol lret rcl fndisi(8087 out lock add pop and aas inc dec dec push pop pop arpl jae jge mov add lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor dec push pop pop gs je jg mov test mov mov fcomp loop in repnz add or pop sbb daa sub cmp dec push push pop pusha gs jne jg mov add sahf movsb test ret enter fucom call add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz incb or adc sbb cmp push pop popa insb jno jl xchg cmpsb stos mov mov aad loop out hlt stc incl or adc das xor ds dec dec push pop pop arpl jb jge xchg cmpsb lods mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov add add rcl fneni(8087 in lock cli incl pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop bound jb jge xchg stos mov mov add add add vaddsubps fcmovu in out hlt stc incb push adc push and xor cmp pop pop bound jb jl xchg stos mov mov aad (bad) ljmp nop/reserved and aas inc dec dec push pop add push jbe addl (bad) (bad) ljmp sbb inc dec push pop popa imul pushf mov vaddsubps fcmovu in out hlt stc incb or adc sbb aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz in repnz std add or pop sbb sub xor cmp dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add pop and ds dec dec push pop pop arpl jb jl xchg stos mov mov aad (bad) jmp add push adc sbb aaa cmp pop arpl jb jge xchg lods mov mov (bad) fneni(8087 out add idiv add or adc das xor aas inc dec dec push pop pop arpl jb jl xchg lods mov mov aad loopne ljmp unpcklps push and xor cmp add dec push push pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam fsubp jmp add or daa sub aaa cmp inc add dec push push pop pusha imul jg mov test ret leave into rcr fucom call add or pop sbb sub cmp dec push push pop pop gs jns test mov mov fcomp loop in repnz add or push sbb sub xor dec push add add imul mov lods mov mov xlat fucom out icebp idiv add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop add jae jle mov cmpsl lods mov mov xlat fsub out icebp idiv add pop and aas add dec push pop pop imul mov lods mov mov xlat fucom out icebp idiv add or push sbb sub xor dec push pop pop add add imul mov mov mov fcomp jecxz in repz std add or daa sub aaa cmp inc dec push push pop pusha imul jg mov test ret enter fsubp call add or pop sbb es cmp dec push push pop pusha gs jne jp test mov mov xlat fucom call add or push sbb sub cmp dec push push pop pop gs je jg mov test mov mov xlat fsub out repnz add or push sbb and aas inc dec dec push pop pop imul add jg mov test mov mov xlat fsub out icebp idiv add or jo jnp test movsb stos scas mov mov fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) add add jmp add or daa sub inc dec push push pop popa insb jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc push and sub inc dec push push pop bound jb jl xchg stos mov mov aad (bad) ljmp add hlt stc incl push adc push and xor cmp add arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli add pop and xor ds dec dec push pop pop arpl jb jge xchg stos mov mov aad loopne ljmp add cli add adc push and xor cmp push pop bound js orl stos mov mov in repnz add movhps inc dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp unpcklps push and xor cmp add dec push push pop bound jno jl xchg movsl stos mov mov aad (bad) ljmp push adc sbb aaa cmp inc dec push push pop popa imul addb movsb test (bad) leave add aam (bad) jmp add or daa sub aaa cmp add inc dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb and inc dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push add daa sub cmp dec add push push pop pop gs je jle mov test mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and das xor ds dec dec push add add arpl jb jge xchg lods mov mov aad loopne ljmp unpcklps push and xor cmp push pop bound jno jl xchg cmpsb stos mov mov aad (bad) jmp add push adc sbb cmp push pop add insb jno jl xchg scas mov mov fcmovu in lock add or push sbb daa sub dec dec push pop pop add jo jnp xchg cmpsb stos mov mov aad loopne ljmp adc das xor dec push pop pop imul test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop bound jb jge xchg cwtl popf movsb test lret rcr loopne out idiv push or sub xor dec push pop pop fs jns xchg mov mov (bad) fndisi(8087 out lock sti add pop and xor push push pop pusha gs jne jg mov stos mov mov add aam (bad) jmp add push adc sbb cmp push pop bound jb jl xchg stos mov mov aad (bad) ljmp or adc pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) add loope jmp idiv add pop and aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add and aas inc dec dec push pop pop imul lea lods mov mov fucom call in repnz add or push sbb sub cmp inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp testb add add add or adc add cmp dec push push pop pop gs je jg mov test ret enter fucom call add or pop sbb es cmp dec push push pop pusha gs jne jg mov stos mov mov aad (bad) ljmp add add push adc push and sub inc dec push push pop popa imul addb movsl stos mov mov aam fsubp jmp or adc push and xor cmp push pop bound jno jl xchg cmpsb stos mov mov aad (bad) ljmp push add adc push and sub inc dec push push pop popa insb jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz in repz std add or add add add daa sub cmp dec push push pop pusha gs jne jg mov test ret enter add jecxz out repz std add or es cmp dec push push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha gs je jg mov stos mov mov xlat fucom call add or daa sub ss inc dec push push pop pusha imul jg mov test (bad) leave into aam fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov fcmovu in out hlt stc incb push adc push and sub dec dec push push pop bound jno jl xchg stos mov mov (bad) fneni(8087 in lock cli incl add and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec add dec push pop pop imul lea lods mov mov (bad) fndisi(8087 out lock sti add pop and cs ds dec dec push pop pop bound jb add xchg cmpsb lods mov mov aad (bad) ljmp unpcklps push and xor cmp add pop popa data16 jno jnp test movsl stos scas mov mov fcomp jecxz in repnz std add or pop sbb sub cmp dec dec push pop pop imul mov lods mov mov (bad) fneni(8087 out lock add pop and cs ds dec dec push add bound jb addb cmpsb lods mov mov aad loopne ljmp unpcklps pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound insl jb jl xchg stos add lret rcl fneni(8087 in lock cli add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop arpl outsb jae jge xchg cmpsl lods mov mov (bad) fneni(8087 in out cmc cli incl unpcklps pop and xor ds dec dec push pop pop bound jb jl xchg lods mov rolb int3 rcl fneni(8087 out lock sti add pop and aas inc dec dec push pop pop arpl jae js orl test mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb test movsb stos scas mov mov (bad) jecxz out repz std add or daa sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz in repz std add or daa sub inc dec push push pop popa imul addb nop xchg lcall mov (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor push push pop pusha gs je jg mov add mov rcr fucom call add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov (bad) jecxz in repz std add or daa sub ss inc dec push push pop popa imul addb movsb add ret leave into rcr fucom call add or pop sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add movhps and aas inc dec dec push pop pop imul mov add add mov mov xlat fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg stos mov add aad (bad) ljmp push adc push and sub inc dec push push pop bound jb jle mov cmpsl scas mov rol rcl fsub out repnz std add unpcklps and sub cmp pop pop imul xchg xchg popf mov mov flds add in out hlt cli incl adc xor cmp dec push push pop popa insl jb addb test mov mov fneni(8087 out lock sti add push and sub dec dec push pop pop arpl jae orl leave into aam loop lock decl movhps sub xor stos mov (bad) jmp or sub xor aas inc dec dec push pop pop arpl jae jle mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add add or sub inc dec push push pop popa data16 jae add mov test ret enter fucom call add or pop sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fucom call add add add pop sbb es cmp dec push push pop pusha gs jne jg mov test pop sbb ss inc dec push push pop pusha gs jne jg mov test ret enter fucom out icebp idiv add or push sbb sub xor dec push pop pop add add add jae jle mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps pop and cs ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) jmp add or push sbb sub xor dec push pop pop imul outsb jae jle mov cmpsl lods mov mov (bad) fneni(8087 in out cmc cli incl unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aam (bad) jmp add or daa sub inc dec push push pop popa imul add jne addb movsb test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pop imul mov lods mov mov (bad) fneni(8087 out lock cli incl pop and cs ds dec dec push pop pop bound jb jl xchg stos mov mov aam (bad) jmp add push adc sbb cmp inc dec dec push pop pop bound jb jge xchg stos mov mov aad (bad) jmp add push adc sbb aaa cmp push pop popa data16 jno jnp add add lahf movsb stos scas mov mov fcomp jecxz in repnz add or push sbb sub cmp dec push push pop pusha gs je jg mov test mov mov xlat fsub out icebp idiv add and aas inc dec dec push pop pop arpl jae jge mov lea lods mov mov (bad) fneni(8087 out lock cli incl pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aam (bad) jmp add or daa sub aaa cmp inc dec push pop pop bound jb jl xchg add mov mov aam (bad) jmp add or sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz in repz std add or daa sub cmp dec push push pop pusha imul jg mov add mov rcr fucom out repnz add or push sbb and aas inc dec dec push pop pop imul mov mov (bad) fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl je jle mov stos mov add loopne out cmc cld add adc and xor popa data16 jno jnp test movsb test (bad) leave into rcr fsubp call add or push sbb sub xor dec push pop pop arpl jae jge xchg cmpsb lods mov mov aad loopne ljmp add push adc sbb aaa cmp inc dec push push pop pusha gs je jg mov test mov mov (bad) fsub out lock cli add push and xor cmp push pop popa imul addb movsb test (bad) leave into rcr fucom call add add or push sbb sub xor dec push pop pop arpl jae jge xchg cmpsb lods mov mov aad loopne ljmp push adc sbb aaa cmp inc dec push push pop add insb jno jnp xchg movsl stos mov mov aad loopne ljmp add add push adc push and xor cmp push pop popa imul addb movsb test ret leave into rcr fucom call add or push sbb sub xor dec push pop pop imul lea lods mov mov (bad) fneni(8087 in lock cli incl add push adc push and sub inc dec push push pop popa imul addb movsb test ret enter fucom out repnz add or push sbb and aas inc dec dec push pop pop arpl jb jge xchg stos mov mov aad (bad) jmp add or add add sbb ss inc dec push push pop pusha gs je jg add movsb test ret enter fucom jmp add or daa sub cmp dec push push pop pop gs je jle mov test mov mov (bad) fsub out lock sti add add pop and xor ds dec dec push push pop bound push (bad) xchg stos mov mov aad loopne ljmp push adc sbb aaa cmp inc dec push push pop pusha imul jg mov test ret rcl fucom out icebp idiv add or add adc das xor aas inc dec dec push pop pop arpl jb jl xchg stos mov mov aam (bad) jmp add or daa sub cmp dec push push pop pusha gs je jle test movsb test ret enter fsub out icebp idiv add or add add sbb daa sub inc dec push push pop pusha gs jne jg mov test mov mov xlat fsub out icebp idiv add pop and cs ds dec dec push pop pop bound jno jl xchg mov stos mov mov aam fsubp jmp add or add sbb ss inc dec push push pop pop gs je jle mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor cmp push pop popa imul addb movsb test ret enter fucom out repnz add or dec push pop pop bound jb jl xchg iret xlat (bad) lock incl push adc mov lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add add and aas inc dec dec push pop pop fs je jg mov test ret enter fcmovu in out hlt stc incb push adc push and xor ds dec dec push pop pop gs jae orl mov xlat fsub out repnz add or push add add and sub cmp dec push push pop pop gs je jg mov test ret enter fucom out repnz std add or pop pop inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and aas inc dec dec push pop pop fs je jg mov test (bad) leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub dec add pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul jo jnp test cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor ds dec dec push pop pop imul add test mov mov fcomp jecxz in repz std add or sub dec dec push push pop bound jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl add mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov add add ret enter fsubp call add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb lods mov les add add into aam fsubp jmp add or sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or and sub dec dec push pop pop bound jb jl xchg lods mov mov xlat fsub add add in icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz idiv add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and xor push push pop pusha gs jne jg mov test (bad) leave iret aam fsubp jmp add or adc push and xor ds dec dec push pop pop add outsb jae jle mov test mov mov xlat fucom out repnz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp adc add adc das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb jl xchg stos mov mov (bad) fneni(8087 in lock sti add and add add add and aas inc dec dec push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov scas mov add (bad) in out repz incb or adc push and add xor ds dec dec push pop pop arpl jae jge mov cmpsl lods add int fcomp loop in repnz std add or sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fneni(8087 out lock add and add add dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add push adc sbb cmp push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or daa sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fndisi(8087 out lock cld add or push sbb sub cmp dec push push add add imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz std add or sub inc dec push push pop bound add add insl jb jl xchg lods mov mov rcr fsubp call add or daa sub ss inc dec push push pop pusha imul addb movsl stos mov mov aam (bad) jmp add push adc push and xor cmp pop pop bound jb ja (bad) xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb add test movsl stos mov mov aam (bad) jmp add push adc push and xor cmp push pop pop arpl jae jge mov test mov mov xlat fsub out repz std add or adc sbb cmp push pop bound jno jl xchg add mov lods mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov add mov mov (bad) jecxz out repz std add or daa sub inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound jb jge add add add mov fcomp loop in repnz add or push sbb daa sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods add mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop fs je jg mov test mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov add mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov (bad) fndisi(8087 out lock sti add pop and aas inc dec dec push pop pop gs je jg mov test ret enter add into rcr fsubp call add or daa sub aaa cmp inc dec push pop pop data16 jae jg mov mov mov fsubp jmp clc std add or sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz add adc sbb sub cmp dec push push pop pop gs je jg mov test mov mov xlat fsub out icebp idiv add or jle mov test ret enter fucom out repnz add or pop sbb daa sub cmp dec push push pop pusha gs add jne jg mov stos mov mov aam (bad) jmp add or daa sub aaa cmp inc dec push push pop pusha gs jne jg mov test ret enter fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop arpl jae add jge xchg cmpsl lods mov mov (bad) fneni(8087 in out cmc cli incl push adc push and xor cmp push pop popa insb jno jnp xchg movsl stos mov mov aam fcmovu in out hlt stc incb or adc sbb aaa cmp inc dec push push pop pusha imul add mov test ret enter fucom out repnz add or push sbb and aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or adc das xor ds dec dec push pop pop arpl jb jge add add mov mov aad (bad) ljmp push adc push and sub inc dec push push pop popa imul addb movsb test ret enter fucom out repnz add or push sbb sub xor dec push pop pop imul add cmpsl lods mov mov (bad) fneni(8087 in lock cli incl push or adc das xor ds dec dec push pop pop arpl jb jge xchg stos mov mov aad (bad) jmp add push adc sbb aaa cmp inc dec push push pop pusha imul jg mov (bad) xchg cltd sahf movsb test ret enter fucom jmp add or daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam fsubp jmp add or daa sub aaa cmp inc dec push push pop popa imul addb add mov mov (bad) jecxz in repz std add or and sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub ss inc dec push push pop pusha imul jg mov add mov rcr fucom call add or pop sbb sub cmp dec push push pop pop gs je jle mov test mov mov xlat fucom out icebp idiv add or push sbb aaa cmp inc dec push push pop pusha imul jg mov add add ret leave into rcr fucom call add or pop sbb sub cmp dec push push pop pusha gs je jg mov test mov mov xlat fucom out icebp idiv add or push sbb and aas inc dec dec add pusha gs jne jg mov test add enter fucom out repnz add or push sbb sub cmp dec push push pop pop fs je jg mov test mov mov xlat fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov add mov rol rcl fsub out icebp idiv add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop imul mov lods mov mov add ret rcl fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl jb jge xchg stos mov mov lret rcl fcmovu in lock cli incl unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jno add mov test mov mov rcl fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl jb jge xchg stos mov mov aad add (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aam (bad) jmp add push adc push and sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) add in out repz incb or adc sbb aaa cmp push pop popa imul addb test ret enter fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov aad loopne ljmp add out hlt cli incl push adc push and xor cmp push pop bound jno jl xchg movsl stos scas mov mov (bad) jecxz in repnz add or push sbb daa sub cmp dec push push pop pop gs je jle mov test mov mov add fucom out add repnz add or push sbb es cmp dec push push pop pusha gs je jg mov test mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul mov lods mov mov (bad) fucom out repnz add cld add or push sbb es cmp dec push push pop pusha gs je jg mov test mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl sbb and aas inc dec dec push pop pop imul lea lods mov mov (bad) fneni(8087 out lock cli add add or adc pop and das xor aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli incl or adc das xor push pop outsb jne orl test mov add fcomp jecxz out repz incb or adc sbb sub xor ds dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave into rcr fsubp call add or daa sub inc dec push push pop popa data16 jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor add add aas inc dec dec push pop pop arpl je jle mov test mov mov fcomp jecxz out hlt stc incb push adc pop es push pop popa imul xchg pushf mov mov (bad) in out hlt stc incb push adc push and xor cmp pop pop arpl outsl jne jg mov stos scas mov mov (bad) in out repz incb or adc push and sub xor ds dec dec push pop pop arpl jb jge xchg stos mov mov (bad) fneni(8087 in lock cli incl pop and das xor ds dec dec push pop pop arpl jae js (bad) xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add pop and aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop fs je jg add test mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa data16 jb jl xchg stos mov mov (bad) fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl jae jge xchg add lods mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb daa sub cmp dec push push pop pusha imul addb add fwait mov mov aam (bad) ljmp push adc push and xor cmp pop pop bound jb jl xchg lods mov mov aad loopne jmp cmc sti add pop and aas inc dec dec push pop pop imul lea add test ret enter fucom call add or daa sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pop gs je jle mov test add add int xlat fsub out icebp idiv add or ss inc dec push push pop pusha gs jne jg mov stos mov mov aam add in lock cli incl pop and aas inc dec dec push pop pop arpl ja test mov fndisi(8087 out add hlt cli add unpckhps sub cmp inc dec push push pop popa imul mov scas mov rol rcl fneni(8087 out icebp idiv add or push sbb sub xor push push pop popa imul ja (bad) xchg test (bad) lret fcmovu in out hlt cli incl and sub cmp dec push push pop popa data16 jno jl xchg scas mov mov fsub ljmp xchg lret aam loop lock add sub cmp inc dec push push pop popa imul addb movsb stos scas mov mov fcomp jecxz in repnz std add or pop sbb daa sub ss inc dec push push pop popa imul addb test mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb add and aas inc dec dec push pop pop imul mov test ret leave into rcr fucom call add or daa sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz std add or add daa sub inc dec push push pop popa imul addl mov mov (bad) in out hlt stc incb or adc push and sub dec dec push push pop bound jno jl xchg stos mov mov aad loopne ljmp unpcklps and add dec push pop pop imul mov test ret enter fucom call add or pop sbb sub cmp (bad) leave iret aam fsubp jmp add or daa sub aaa cmp inc dec push push pop pusha gs je jg mov add add mov xlat fsub out lock add or adc das xor ds dec dec push pop pop arpl jb jl xchg stos mov mov aam (bad) jmp add push adc sbb aaa cmp inc dec push push pop pusha gs jne jg mov add ret rcl fsub out icebp idiv add or adc das xor inc inc dec dec push pop pop fs js mov lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp inc dec push push pop popa insb jae addb mov mov add jecxz icebp clc add or push sbb sub xor dec push pop pop imul mov lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor cmp pop pop bound jb jl xchg movsl stos mov mov aam fsubp jmp out repz std add or es cmp dec push push pop pusha gs je jg mov test mov mov xlat fsub out lock add pop and cs ds dec dec push pop pop arpl je jle mov test mov mov (bad) fndisi(8087 out lock add add cli add pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov rcl fnop in out hlt stc incl push adc push and sub inc dec push push pop popa insb jno jnp xchg movsl stos scas mov mov fcomp jecxz in repnz idiv add or push sbb sub xor dec push pop pop fs je jle mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor cmp push pop bound jno jl xchg movsl stos scas mov mov (bad) jecxz in repz add add add or es cmp dec push push pop pusha gs je jg mov stos scas mov mov fcomp jecxz in repnz add or push sbb sub xor dec push pop pop fs je jle mov test mov mov (bad) fndisi(8087 out lock cld add add or adc das xor dec push pop pop arpl jae jge mov cmpsl lods mov mov aad loopne ljmp push adc push and sub inc dec push push pop popa imul addb movsl stos scas mov mov fcomp jecxz in repnz add add pop or pop sbb sub cmp dec push push pop pop gs jne jg mov test mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out repnz add or adc sbb sub cmp dec dec push pop pop imul (bad) xchg lcall mov fcomp jecxz in repnz add or push sbb sub xor dec push pop pop imul mov lods mov mov (bad) fneni(8087 out lock cli incl add add push and xor cmp push pop popa insb jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz std add or pop sbb es cmp dec push push pop pop fs je jle mov test mov mov rcr fucom out repnz add or push add add and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli add or adc das xor aas inc dec dec push pop pop arpl jb jl xchg stos mov mov aad (bad) jmp add push adc sbb and sub aaa cmp inc dec push push pop pusha gs jne jg mov test ret enter fsub out icebp idiv add or adc das xor ds dec dec push pop pop arpl jne test lods mov mov fcomp loop in repnz add or pop sbb es add add add inc inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out repz incb or unpcklps push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fsub out lock add and inc add push push pop pusha imul addb movsb test (bad) leave iret aam fsubp jmp add push adc sbb aaa cmp push pop popa insb jno jnp xchg movsl stos mov mov aad (bad) ljmp unpcklps pop and xor ds dec dec add push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pop imul mov lods mov mov fcomp loop in repnz add or push sbb add sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop (bad) xchg lods mov mov (bad) fsub out lock add or push sbb and inc inc dec dec push pop pop gs je jg add movsb test ret enter fucom call add or sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc push and xor cmp pop pop bound jb jl xchg add xchg fwait mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl orl cmpsl lods mov mov (bad) fndisi(8087 out lock sti add and aas inc dec dec push pop pop imul (bad) xchg cltd add add mov aam fsubp call add push adc push and sub inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and aas inc dec dec push pop pop arpl jae jge mov add add add add rol rcl fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock add pop and aas inc dec dec push pop pop imul mov lods add int3 rcl fsub out icebp idiv add pop and aas inc dec dec push pop pop imul lea lods mov mov fcomp jecxz in repnz std add or daa sub ss inc dec push push pop popa data16 jl xchg cmpsb stos mov add mov aad (bad) jmp add push adc push and sub dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor cmp pop pop bound jb jl xchg stos mov mov add lret rcl fcmovu in out hlt cli incl push adc push and xor cmp pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov add xlat fsub call nop/reserved sub inc dec dec push pop pop bound jae jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fsub out add idiv add or adc das xor dec push pop pop imul mov scas mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out repz add incb or sub inc dec push push pop popa data16 jno jl xchg stos mov mov aad loopne ljmp unpcklps pop sub dec dec push push pop bound jb jl orl test mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp push adc add add push and xor cmp pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push pop pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pop fs je jg mov test ret leave into rcr fsubp call add or adc push and sub inc dec dec push push pop bound jb jl xchg stos mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb sub cmp inc inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb or adc push and sub dec dec push push pop bound jb addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec add add pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or adc xor dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add push adc push and sub dec dec push push add insl jb jge xchg lods mov mov (bad) fneni(8087 out lock sti add or push sbb and inc inc dec dec push pop pop fs je jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa data16 add add jbe addb cmpsb lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub xor dec push pop pop gs je jg mov test ret enter fucom call add or sub inc dec dec push pop pop bound je add add xchg cltd lahf cmpsb scas mov mov (bad) jecxz in repz std add push adc push and cs ds dec dec push pop pop imul (bad) xchg lcall rol rcl fnop in out hlt cli incl unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg add add mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec push push pop pop gs jne addb scas mov add add fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop fs je jle mov movsb test ret enter fucom call add or push sbb sub xor dec push pop pop fs je jg mov test mov mov add add int xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fucom out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave into add add fcomp jecxz in repz std add or sub inc dec push push pop popa insb jno jl xchg add lret rcl fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in add add out repz incb or sub inc dec push push pop popa insb jno jnp xchg cmpsb stos mov mov aad (bad) ljmp unpcklps push and cs ds dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad (bad) add lock add sti add pop and aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg (bad) xchg mov mov fcomp jecxz in repz std add or add add pop sbb daa sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or pop sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or push add add sbb sub cmp dec push push pop pop fs jbe addb movsl stos scas mov mov (bad) in out repz incb or daa sub aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov (bad) jecxz out repz std add or add sub aaa cmp inc dec push push pop pusha imul addb movsb test ret leave into rcr fsubp call add or daa sub ss inc dec push push pop pusha gs jne jg mov test ret enter fucom call add or push sbb sub add add cmp dec push push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea mov mov (bad) jecxz out repz incb or daa sub add add dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz in repz incb or daa sub aaa cmp inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz incb or adc sbb cmp add push pop bound jno jl xchg unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov add add fnclex out icebp idiv add or push sbb and inc inc dec dec push pop add push jne jg mov test ret enter fucom out repnz add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov rol int xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jb jge mov cmpsl lods mov mov aad loopne ljmp push adc sbb aaa cmp push pop popa imul addb movsl stos scas mov mov add add leave into rcr fsubp call add or push sbb sub cmp dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add and xor ds dec dec push pop pop arpl jb jge xchg mov lods mov mov add add rcl fneni(8087 out lock cli incl push and xor cmp push pop popa insb jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz incb push adc push and sub inc dec push push pop popa imul addb movsl stos scas mov mov add aam fsubp call add or daa sub cmp dec push push pop pusha gs je jg mov test ret enter fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor aas inc dec dec push pop pop arpl jb jge xchg lea test ret enter fucom call add or pop sbb es cmp dec push push pop pusha gs jne jg mov test (bad) leave into roll add (bad) jecxz in repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) in out repz incb or adc sbb aaa cmp push pop popa data16 jno jnp xchg movsl stos mov mov aad fild add add jmp add push adc push and xor cmp push pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound mov test ret enter (bad) in add cmc cli add add add unpcklps pop and cs ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out repnz add add add add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or daa sub ss inc dec push push pop pusha imul jg mov test ret leave into rcr fucom call add or add add sbb ss inc dec push push pop pusha imul jg mov stos mov mov aam (bad) jmp add push adc push and xor cmp push pop bound jno jl xchg movsl stos mov mov rcl fneni(8087 in lock sti add add add and aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pop gs je jg mov test ret enter fucom call add or daa add sub aaa cmp inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz incb or adc sbb cmp push pop popa insb jno jl xchg movsl stos mov mov (bad) fneni(8087 in lock cli incl pop and add aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov xlat fsub out icebp idiv add pop or push sbb es cmp dec push push pop pusha imul jg mov test (bad) leave into rcr fsubp jmp sti add or push sbb es cmp add add push pop bound jb jge xchg lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and cs ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp unpcklps push and xor ds dec dec push add pop pop arpl jb jge xchg lods mov mov aad loopne ljmp adc das xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop add add je jle mov test mov mov (bad) fsub out lock add pop and das xor aas inc dec dec push pop pop imul lea lods mov mov (bad) fndisi(8087 out lock add pop and das xor aas inc dec dec push pop pop imul add outsb jae jle mov cmpsl lods mov mov (bad) fsub out lock add and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc xor cmp dec push push pop pusha imul add test movsb test ret enter fucom call add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pop gs jne jg add add movsb test ret enter fucom out repnz add or push sbb sub xor dec push pop pop fs je jg mov test ret enter fucom out repnz add or push sbb sub xor dec push pop pop imul add test mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop gs jne addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub ss inc dec push push pop pusha imul addb add add add lcall mov fcomp jecxz in repnz std add or daa sub ss inc dec push push pop pusha gs jne addb movsb test ret leave into rcr fucom call add or pop sbb sub cmp dec push push pop pusha gs je jg mov add movsb test ret enter fucom out repnz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz incb or daa sub aaa cmp inc dec push push pop pusha imul addb cmpsb add stos mov mov aad (bad) ljmp push adc push and sub dec dec push push pop bound jno jl xchg cmpsb stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov rol rcl fsub out icebp idiv add or adc cmp push pop bound jno jl xchg cmpsb stos mov mov xlat fucom out repnz add push adc and das ss inc add pop insw je orl mov aad (bad) ljmp add incl push adc push and xor inc inc dec push pop arpl jb test movsb add (bad) leave into aam fsubp call add or daa sub ss inc dec push push pop pusha gs jne jg mov test mov mov xlat fsub out icebp idiv add or add sbb and aas inc dec dec push pop pop imul lea lods mov mov (bad) fneni(8087 out lock cli add pop and das xor aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov aad loopne ljmp unpcklps add add add add and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jno jl xchg movsl stos mov mov aad fucom in cmc cld add pop and cs inc add inc dec push pop outsb je orl mov xlat fucom out icebp idiv add or push sbb and inc inc dec push push pop bound jb jge mov test (bad) leave iret aam (bad) ljmp adc xor cmp dec push pop pop bound jae add test cmpsb lods mov mov xlat fsub out icebp idiv add or daa sub aaa cmp pop pusha gs jbe test mov vpsrlq jecxz icebp dec popa imul lcall into aad in repnz add or push sbb sub xor add add push push pop pusha gs jne jg mov test mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop imul mov test mov mov xlat fsub out icebp idiv add or adc das xor aas inc add push pop pop imul lea lods mov mov (bad) fneni(8087 out lock cli add pop and cs ds dec dec push pop pop arpl jb jge xchg stos mov mov rcl fneni(8087 out lock cli add pop and cs ds dec add pop pop arpl jb jge xchg stos mov mov aad (bad) ljmp push adc push and sub dec dec push pop pop imul mov lods mov mov (bad) fndisi(8087 out lock cli add pop and cs ds dec dec push add add arpl jb jge xchg cmpsl add (bad) int3 rcl fneni(8087 in lock cli incl unpcklps push and xor cmp push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add or daa sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz in add stc incb or adc sbb aaa cmp inc dec push push pop pusha imul addb movsb test ret leave into rcr fucom call add or push sbb sub cmp dec push push pop pop fs je addb movsl stos scas mov mov (bad) jecxz in repnz std add or es cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or push sbb and aas inc dec dec push pop pop add imul mov add enter fsub out icebp idiv add or adc das xor ds dec dec push pop pop arpl jb jge xchg in out hlt stc incb push adc sbb aaa cmp inc dec push push pop popa imul addb add add (bad) leave into rcr fsubp call add or es cmp dec push push pop popa imul addb movsb stos scas mov mov (bad) jecxz in repz std add or pop sbb sub cmp dec push push pop pop gs je jle mov test lods mov mov xlat fsub out icebp idiv add pop and das xor ds dec dec push pop pop arpl jb jge xchg stos mov mov (bad) fnclex jmp or sbb add xor inc inc dec push pop pop imul lea lods mov mov add add xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge xchg cmpsb lods mov mov aad (bad) ljmp push adc pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or adc das xor ds dec dec push pop pop arpl jb jge xchg stos mov mov aam (bad) jmp add push adc sbb aaa cmp inc dec push push pop pusha imul addb movsb test ret enter flds add fsubp call add or daa sub ss inc dec push push pop pusha gs je jg mov test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov aad fild add in out hlt stc incl push adc push and sub inc dec push push pop popa data16 jno jnp test movsl stos scas mov mov fcomp jecxz in repnz std add or sub xor cmp pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 in add add cmc cli add pop and aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp xor add dec push push pop pusha imul addb movsl stos mov mov aam (bad) jmp add push adc push and xor add cmp inc dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and das xor ds dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or daa sub cmp inc add add push pop arpl js orl cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and das xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and cs ds dec dec push pop add add pop arpl jb jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop add outsb jae jge mov test mov mov (bad) fsub out lock add pop and aas inc dec dec push pop pop arpl je jle mov test ret enter fucom out icebp idiv add or push sbb sub xor dec push pop pop imul add outsb je jle mov test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add pop and add dec dec push pop pop imul add je jle mov test mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add pop and aas inc dec dec push pop pop arpl jae add jge xchg scas mov mov xlat fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop arpl jae jle mov cmpsl lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop arpl jae jle mov cmpsl lods mov mov xlat fsub out icebp idiv add pop and aas inc dec dec push pop pop arpl jae jge mov add add lods mov mov in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jne jg mov stos scas mov add (bad) int3 rcl fsub ljmp sbb sub aaa ds dec push pop arpl jp xchg mov rcl fucom add in icebp idiv add or push sbb sub cmp dec push push pop pop fs jge xchg lods mov mov aad loopne ljmp push adc push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp stc incl push adc push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock cld add add add or push sbb sub ss inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz std add or daa sub inc dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli add unpckhps pop and das xor ds dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs je jg mov test ret enter fucom call add or pop add es cmp dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz incb or sub xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or adc sub xor dec push pop pop fs je jp test movsb stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) jmp add push adc push and sub add xor cmp push pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock add and add aas inc dec dec push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc sbb cmp add add push pop bound jno jl xchg stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg cmpsl lods mov mov (bad) fneni(8087 out lock sti add pop and das xor cmp dec dec add push pop pop fs je jle mov test ret enter fucom call add or daa sub ss inc dec push push pop pusha imul addb cmpsb lods mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop add outsb jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor push fs jne jg mov test (bad) lret (bad) in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae xchg add stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov mov mov fcomp loop in repnz add or push sbb sub cmp dec push push pop bound jno jl xchg add add mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out icebp idiv add or adc xor dec push pop pop imul mov add mov mov xlat fucom call add or pop sbb es cmp dec push push pop pusha imul addb movsb test (bad) leave into rcr fsubp call add push adc sbb aaa cmp push pop popa data16 jno jnp xchg movsl stos add add lret fcmovu in out hlt cli incl push adc push and xor cmp pop pop bound jb add mov cmpsl lods mov mov (bad) fneni(8087 out icebp idiv add or push sbb sub cmp dec push push pop pop gs je jg mov test mov add add add rcl fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha gs je jg mov test add add enter fucom out repnz add or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or pop sbb aaa cmp inc dec push push pop popa imul addb movsl stos scas add add lret fcmovu in out hlt stc incl push adc and inc inc dec dec push pop pop imul mov mov mov fcomp loop in repnz add or pop sbb daa sub add push pop popa insb jno jl xchg movsl stos mov mov add add fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) faddl add out icebp idiv add and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop bound jno jl xchg stos mov mov aad (bad) ljmp add out hlt cli incl push adc push and xor cmp pop pop arpl jb jns orl test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec push push pop pop fs je jg mov test mov mov fcomp loop in repnz add idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb add or sub inc dec push push pop bound jno jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add pop and aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fsub out lock sti add add add add add das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul mov mov ret lret fucom call add or pop sbb es xor cmp dec push push pop pusha gs je jg mov test ret enter fucom out repnz add or push sbb sub xor add pop pusha gs jne jg mov test ret leave into rcr fucom call add or pop sbb daa sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov fcomp jecxz in repnz std add or daa sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or daa sub cmp inc inc dec push push pop pusha gs jne jg mov test ret leave into rcr (bad) jmp add push adc push and sub inc dec push push pop popa imul addb movsb stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc add dec push push pop pusha imul addb movsb test (bad) leave into rcr fsubp call add or daa sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fucom call add or pop sbb es cmp dec push add add pusha gs jne jg mov movsb stos scas mov mov (bad) jecxz in repz std add or daa sub cmp dec push push pop pusha gs je jg mov test mov mov fcomp loop in icebp idiv add or es cmp dec push push add add fs je jle mov cmpsl lods mov mov (bad) fsub out lock sti add pop and xor cmp push pop bound jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz std add or es cmp dec push push pop add push je jle mov cmpsl lods mov mov (bad) fsub and sub cmp dec push push pop pusha imul jg mov stos mov mov aad (bad) ljmp or push sbb daa sub inc dec push push pop bound jno jl xchg add cmpsb stos mov mov aad loope in icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or sub inc dec push push pop bound jno jl xchg lods mov mov ret rcr loop icebp stc add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test mov mov rcl fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add pop and das xor ds dec dec push pop pop arpl jne jg mov test ret enter add loop in repnz add or push sbb and aas inc dec push push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add pop and ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov aad loopne add add ljmp push adc push and xor cmp pop pop bound jb jl xchg stos mov mov aam (bad) jmp add or daa sub aaa cmp inc dec push push pop popa imul addb movsb test ret leave into rcr fucom call add add repnz add or pop sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) jecxz in repz std add or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add idiv add or push sbb sub xor dec push pop pop gs je jg mov test mov mov xlat faddl loop in repnz add or push sbb and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov aad (bad) ljmp stc incb or adc sbb aaa cmp inc dec push push pop pusha imul jg mov test ret enter fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov xlat fucom out repnz add pop or pop sbb sub ss inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz in repz std add or pop sbb sub cmp dec push push pop pop gs xchg lods mov mov (bad) fndisi(8087 out lock add and sub cmp dec push push pop pop gs je jg mov test (bad) leave into rcr fsubp jmp add or daa sub inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpcklps push and add add xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb es cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) in out repz incb or adc sbb add aaa cmp push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop fs jo jp test movsb test (bad) leave iret aam fsubp jmp add push adc sbb cmp push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and inc inc dec add add pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb es ss inc dec push push pop pusha imul addb movsb test (bad) leave into aam fsubp jmp add push adc sbb aaa cmp push add add insb jno jnp xchg movsl stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound jb jge xchg add (bad) int3 rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha add add outsl jne jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push pop pop bound jb jl xchg stos mov mov aad loopne ljmp adc das xor aas inc dec dec push pop pop arpl add jae jns test mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or adc push and xor cmp pop pop bound jb add mov stos mov mov aad loopne ljmp adc das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or pop sbb es cmp dec push push pop pusha imul addb mov stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul mov lods mov mov rcr fucom call add or pop sbb aaa cmp inc dec push push pop popa imul addb xchg fwait mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul mov mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov rol rcl fneni(8087 in lock cli incl pop and das xor aas inc dec dec push pop pop imul mov scas add mov mov fcomp loop in repnz add or sub dec dec push pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop gs je jg mov test add add fcomp jecxz out repz std add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop fs je jg mov test ret enter add rcr fucom jmp add push adc push and sub dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc add push pop popa imul addb movsl stos mov mov aad add fcmovu in out hlt cli incl unpcklps push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne addb movsl stos scas mov mov (bad) in add jmp add push adc push and xor ds dec dec push pop pop arpl jb jge mov test mov mov xlat fsub out icebp idiv add or sbb aaa cmp push pop bound jno jl xchg lods mov mov (bad) fndisi(8087 out lock add add or adc xor call add or daa sub dec dec push pop pusha imul addl mov ret enter fsubp jmp add push adc pop and cs aas inc dec dec push pop pusha gs jne addb movsl stos add add lret fnop in lock sti add or push sbb sub xor push push pop popa insb jno jl xchg mov add leave rcl fucomip repnz decl movhps call pop push adc xor cmp inc dec push push pop popa imul addb add add mov rcr fucom call add or push sbb sub xor push push pop pop imul mov lods mov mov (bad) fneni(8087 out lock cli incl unpcklps push and xor ds dec dec push pop pop bound jno jl xchg add rol iret aam (bad) jmp add push adc sbb aaa cmp push pop popa insb jno jnp xchg movsl stos scas mov add (bad) aad (bad) ljmp push sbb and aas inc dec dec push pop pop imul lea lods add and sub xor dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli incl add adc push and xor ds dec dec push push pop bound jno jl xchg movsl stos mov mov aad (bad) jmp add push adc sbb aaa cmp push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or add sbb aaa cmp pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push add add sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov fcmovu in out hlt stc incb or adc sbb aaa cmp push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test ret enter fsubp call add or daa sub cmp dec push push pop pusha gs jp xchg movsl stos mov mov aad (bad) ljmp push adc push and xor add add add add push pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jno jl xchg stos mov mov aad (bad) ljmp unpcklps push and xor ds add dec dec push pop pop bound jb jl orl cmpsl lods mov mov (bad) fneni(8087 in lock cli add pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aam (bad) jmp add push adc sbb aaa cmp inc add pop popa imul addb test (bad) aad (bad) ljmp unpcklps and xor cmp pusha push mov mov ret (bad) fucom ljmp sbb and inc dec push pop arpl ja test test mov add mov rcl fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add sbb sub xor dec push pop pop fs je jg mov test add mov xlat fucom out icebp idiv add or push sbb sub xor dec push pop pop imul mov lods mov mov (bad) ljmp push adc push and sub inc dec push push pop bound jb jge mov cmpsl lods mov mov add (bad) fsub out lock add and aas add push push pop pop gs je jg mov test (bad) leave into rcr fsubp call add or daa sub inc dec push push pop popa data16 jno jnp xchg stos mov mov aad add loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out icebp idiv add or push sbb sub xor push push pop pop fs je jg mov test ret leave into rcr fucom add in repz std push or daa sub aaa cmp inc dec push push pop pusha imul jg mov test ret enter fucom out repnz add or push sbb and aas inc dec dec push pop pop arpl jae jge test mov mov xlat fsub out add add idiv add pop and das xor ds dec dec push pop pop bound jb jl xchg lods mov mov aad (bad) ljmp push adc sbb aaa cmp inc dec push push pop popa imul addb movsb test (bad) leave into aam fsubp call add std add or es cmp dec push push pop pusha gs je jle mov test mov mov xlat fsub out icebp idiv add pop and xor inc inc dec dec push pop pop fs je jle mov test mov mov fcomp loop in repnz add pop or push sbb sub xor dec push pop pop fs je jle mov test mov mov xlat fucom out icebp idiv add or push sbb sub xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or add adc das xor aas inc dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and xor ds dec dec push add arpl jae jge mov cmpsl lods mov mov (bad) fsub out lock add add add das xor aas inc dec dec push pop pop push (bad) xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp jmp add push adc push and add add sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) jecxz out hlt stc incb push adc push and xor add cmp pop pop bound jb jge xchg mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg mov mov aam (bad) jmp add push adc push and cs ds add add push pop pop imul lea lods mov mov rcl fucom out icebp idiv add or push sbb sub cmp dec push push pop pusha gs je jg mov test ret enter fucom out icebp idiv add or pop sbb es cmp dec add pop pusha gs jne jg mov test ret enter fucom call add or pop sbb daa sub aaa cmp inc dec push pop gs jae orl mov (bad) in out repz incb or daa sub inc dec push push pop popa data16 jno jbe addl mov ret (bad) fneni(8087 in lock sti add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl unpcklps push and sub xor aas inc dec dec push pop pop imul add orl cmpsl lods mov mov (bad) fndisi(8087 out lock add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and cs ds dec dec push pop pop arpl jb jge xchg mov stos mov mov aad (bad) ljmp push adc sbb aaa cmp push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz out clc std add or daa sub aaa cmp inc dec push push pop pusha imul addb lcall mov (bad) jecxz in repz std add or daa sub cmp dec push push pop pusha imul addb movsb test ret enter fucom out repnz add or push sbb sub xor dec push pop pop imul mov mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add sbb and aas inc dec dec push pop pop arpl jae jle mov add cmpsl lods mov mov (bad) fneni(8087 in lock cli incl and xor ds dec dec push pop pop bound jb jge mov cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov add add rcl fsub out lock add pop and aas inc dec dec push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc sbb cmp push pop popa insb jno jl xchg cmpsb stos mov mov add lret fcmovu in out hlt stc incl push adc push and xor cmp push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push pop pusha gs jne jg mov test (bad) leave into add fcomp jecxz in repz std add or daa sub ss inc dec push push pop pusha imul addb movsb test (bad) leave into aam fsubp call add or daa sub ss inc dec push push pop pusha gs jne jg mov test mov mov fadds add loop in add clc std add or pop sbb es cmp dec push push pop pusha gs je jg mov test mov mov fcomp jecxz in repnz add or pop sbb sub cmp dec dec push pop pop imul mov lods mov mov xlat faddl loope jmp idiv add pop and das xor ds dec dec push pop pop bound jb jge mov stos mov mov (bad) fneni(8087 in lock cli incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out add add icebp idiv add or adc xor dec push pop pop imul mov lods mov mov fcomp loop in repnz add or push sbb add inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt add stc incb or adc push and sub dec dec push push pop bound jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl scas mov ret enter fucom call add or daa sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz incb or adc sbb aaa cmp push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) in out repz incb or adc sbb and sub inc dec push push pop popa data16 jno jnp xchg mov mov aad loopne ljmp unpcklps pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aam (bad) jmp add push adc add add and sub inc dec push push pop popa insb jno jnp xchg movsl stos scas mov mov fabs call add or daa sub inc dec push push pop popa imul addb movsb test ret leave into rcr fucom call add or pop sbb daa add add ss inc dec push push pop pusha imul jg mov test ret enter fucom call add or pop sbb daa sub ss inc dec push push pop pusha gs jne jg mov test ret enter (bad) jecxz out repz std add or daa sub add xor cmp inc dec push push pop popa imul addb movsb test ret enter fucom out icebp idiv add or push sbb sub xor dec push pop pop imul lea lods mov mov (bad) fsub out icebp idiv add and add add inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fsub out icebp idiv add pop and das xor dec push pop pop imul lea lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor aas inc add add push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp push adc push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc sbb aaa cmp add push push pop popa imul addb movsl stos scas mov mov (bad) jecxz add hlt stc incb or adc sbb aaa ds dec push push pop popa insb jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz std add or daa sub ss inc dec push push add add add imul addb movsb stos scas mov mov (bad) jecxz out repz std add or daa sub ss inc dec push push pop pusha imul addb movsb test ret leave into rcr fucom call add or pop sbb es cmp dec push push pop pusha add jo jp test movsb test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom out repnz add or pop sbb add sub aaa cmp inc dec push push pop popa add add jl xchg movsl stos mov mov aam fsubp jmp add or daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa imul jnp xchg movsl stos mov mov aam (bad) jmp add push adc sbb aaa cmp push pop popa data16 jno jl xchg stos mov mov aad (bad) ljmp push adc push and xor cmp pop pop bound jb jl add mov mov aad loopne ljmp unpcklps pop and xor ds dec dec push pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop arpl jae jge mov add mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop fs je jg mov test ret enter fucom call add or pop sbb daa sub ss inc dec push push (bad) leave into aam fsubp jmp add push adc push and sub inc dec push push pop bound jno jl xchg stos mov mov aam (bad) jmp add push adc sbb aaa cmp push pop popa imul addb movsb test ret leave rcr fsubp call add or add sbb aaa cmp inc dec push push pop pusha imul addb movsb test mov (bad) in out repz incb or sub inc dec push push pop popa insb jno jnp xchg movsl stos mov mov aam fsubp jmp add or add and sub inc dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jno jl xchg movsl stos mov mov aam fsubp jmp add push adc sbb add add sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz in repnz add or es aaa cmp inc dec push push pop pusha imul jg mov test ret enter fucom add out repz std add or daa sub add xor cmp inc dec push push pop popa imul addb movsb test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pusha gs add addb movsb stos scas mov mov (bad) jecxz out repz std add or daa sub add cmp inc dec push push pop popa imul addb movsb stos scas mov mov (bad) jecxz in repz std add or daa sub ss inc dec push push pop popa imul addb movsb stos scas mov mov (bad) jecxz in repz std add or daa sub inc dec push push pop popa imul addb movsb stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) in out repz incb or sub inc dec add push push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add or adc push and sub xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad loopne ljmp push adc push and sub inc dec add push push pop popa insb jno jl xchg movsl stos mov mov aam fsubp jmp add or daa sub aaa cmp inc dec push push pop gs jb jl xchg stos mov mov (bad) fneni(8087 in lock cli incl pop and xor ds dec dec push pop pop add insb jb jl xchg stos mov mov aad (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa imul addl mov mov (bad) jecxz out repz std add or daa sub aaa add push add add bound jb jl xchg lods mov mov aad loopne ljmp push adc push and xor cmp push pop bound jno jl xchg stos mov mov aad (bad) jmp add push adc push and sub inc dec push push pop popa add add add jnp xchg into aam fsubp jmp add or daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp push adc push and xor cmp push pop popa insb jno jl xchg add add add mov aam (bad) jmp add push adc sbb aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) in out repz incb or adc sbb xor cmp push pop bound jno jl xchg add add mov fcmovu in out hlt stc incb or adc push and sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov (bad) lret fcmovu in out hlt stc incb push adc push and xor cmp pop pop bound jb jl xchg stos mov add add rcl fneni(8087 in lock cli incl pop and cs ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fndisi(8087 out icebp idiv add or adc xor dec push pop pop imul mov lods mov mov ret rcl fsub out repnz add or push sbb sub xor push push pop add imul addb movsb stos scas mov mov (bad) jecxz out repz incb or adc sbb cmp push pop popa insb jno jl xchg movsl stos mov mov add add iret aam (bad) ljmp adc pop and das xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad add add loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg cmpsl lods mov mov (bad) fildl add in lock cli add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in add lock cli incl pop and das xor ds dec dec push pop pop arpl jb jl xchg stos mov mov aad loopne ljmp unpcklps push and cs ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp add incl push adc push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad fneni(8087 out lock cli add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov aad (bad) ljmp incl push adc push and sub dec push push pop bound jno jl xchg movsl stos mov mov aam fsubp jmp add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test ret enter fucom call add add add or daa sub aaa cmp inc dec push pop pop bound jb jle mov test mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop pop arpl jae jge mov test mov mov (bad) fsub out lock add sbb and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov aad loopne jmp idiv add push adc push and sub dec dec push pop pop arpl jae orl mov ret rcl fsub out icebp idiv add or adc das xor dec push pop pop imul mov scas mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pop gs jne jg mov test ret enter fucom out repnz add or push sbb sub add add add inc inc dec push push pop pop gs jne jg mov test ret enter fucom out repnz add or push sbb sub xor dec push pop pop imul mov scas mov mov xlat fucom out repnz add or push sbb sub cmp add push push pop pop gs je jg mov stos mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa imul addb cmpsb stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jb jge mov test mov mov xlat fsub out in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop add insl jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test (bad) leave into aam jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul add add jg mov test ret leave into rcr fucom call add or pop sbb sub cmp dec push push pop pop gs je jg mov test mov mov (bad) jecxz out repz std add or daa add inc dec push push pop popa imul add test movsb test (bad) leave into rcr fsubp call add or pop sbb sub cmp inc dec push pop pop imul (bad) xchg lods mov mov fcmovu in out hlt cli add and sub dec dec push pop pop fs je jg mov add mov aad loopne jmp idiv add adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp in icebp idiv push or xor push push pusha outsw jbe test scas mov es ss dec push pop popa add jbe test scas mov rol rcl fcmovu in out hlt stc incl push adc push and xor cmp push pop bound jno jl xchg stos mov mov aad (bad) ljmp push adc push and xor add inc dec dec push pop pop arpl jb add add xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and cs ds dec inc dec inc dec inc dec inc dec pop inc das push xlat push insl pop xchg mov mov aas sahf (bad) dec ljmp loopne mov add and jae cltd dec repnz arpl push dec jge daa call sbb gs add mov mov cwtl or test lahf cmp bound push xor pop add jb les ljmp fwait mov movsl jecxz into push outsl push stos (bad) std lods loop jmp jns out sbb mov xor shrb mov mov add nop cmc lds jp add push mov in fimul xor jbe into cmp outsb loop push arpl and cld hlt or mov in add push pop inc das push inc inc cmp test dec cmp test mov cmp test cmp cmp cmp mov test test cmp cmp cmp mov cmp test cmp cmp jmp cmp cmp nop cmp test push cmp test cmp test xor cmp cmp cmp test test pop cmp cmp cmp cmp ret call test cmp cmp cmp cmp mov nop cmp test cmp test mov cmp test cmp cmp inc cmp test test cmp cmp mov cmp cmp test cmp mov cmp cmp cmp nop cmp ret pop test cmp test cmp clc adc test cmp cmp cmp test jmp popf stos (bad) cld mov aad xchg mov mov cs pusha cmpsb dec mov mov aad mov dec xor aaa xchg jl pop mov mov test cli mov fsubl loopne cmp lret loopne xor ret cmp cmp cmp pop cmp nop cmp test cmp add test cmp test cmp mov cmp cmp test test cmp mov cmp cmp cmp test cmp cmp cmp cmp nop dec cmp test cmp test cmp test cmp cmp cmp dec test test cmp cmp cmp test test cmp cmp cmp dec test test test cmp test cmp test test test test dec test cmp cmp cmp cmp test test cmp test xor test test cmp cmp cmp test test test cmp test or cmp test test test test test cmp cmp cmp call cmp test test cmp test test test cmp cmp cmp push test test test cmp test cmp test test test test test jne mov test cmp cmp cmp add cmp test test cmp test mov test test cmp cmp cmp add test test test cmp test call cmp test test test test jmp test cmp cmp cmp pop cmp test test cmp test push test test cmp cmp cmp push test test test cmp test push cmp test test test test mov test cmp cmp cmp call cmp test test cmp test pop test test cmp cmp cmp cmp jl test test test cmp test mov cmp test test test test sub test cmp cmp cmp mov cmp test test cmp test sub test test cmp cmp cmp call test test test cmp test mov test test test cmp cmp push test cmp test cmp test mov cmp cmp cmp test cmp push nop test test test test push cmp cmp cmp cmp cmp push cmp cmp cmp test cmp call test test test cmp cmp jmp test cmp test cmp test pop cmp cmp cmp test cmp inc nop test test test test push cmp cmp cmp cmp cmp pop cmp cmp cmp test cmp inc test test test cmp cmp pushl test cmp test cmp test xor cmp cmp cmp test cmp pop nop test test test test mov cmp cmp cmp cmp cmp cmp jne cmp cmp cmp test cmp mov test test test cmp cmp test cmp test cmp test cmp cmp cmp test cmp sub nop test test test test cmp cmp cmp cmp cmp mov cmp cmp cmp test cmp test test test cmp cmp test cmp test cmp test cmp cmp cmp test cmp nop test test test test cmp cmp cmp test test test test cmp cmp test test test cmp test test test test cmp cmp test xor cmp test test test test cmp test test test cmp test test test test cmp cmp test cmp test test test test cmp test test test cmp test test test test cmp cmp test cmp test test test test cmp test test test cmp test or test test test cmp cmp test cmp test test test test cmp test test test cmp jne cmp test test test test call cmp cmp test cmp test jns sub lock mov fsubr sti rorb je int3 fdivrs lret pop mov insl negl (bad) daa xchg add inc jnp sbb pop push jp inc cmp mov dec and jmp sbb jbe adc rclb dec test adc xchg push mov mov pop js dec addr16 push dec sbb pop scas xor jle pop xor fwait insb aas andl and xchg or fs cmp mul sbb adc leave sub mov mov sarl aad loopne test in shrl add test test cmp test test pushl test test cmp cmp test pop cmp test test test test mov cmp test test test cmp mov test test test test cmp push cmp test cmp test test mov test test cmp test test mov test cmp test test test mov test cmp cmp test cmp dec test test test test cmp dec test test test cmp test dec test test test cmp cmp cmp jne test cmp test test test mov test cmp test test test dec cmp test test test test dec cmp cmp test cmp test dec test test test cmp test cmp jne test test cmp test test pop test test cmp cmp test mov cmp test test test test mov test cmp cmp test test mov cmp test cmp test test add test nop cmp test mov nop test test test test mov cmp cmp cmp cmp cmp add nop test test test cmp mov test cmp test test add test nop cmp test nop lods test test test test cmp test je cmp cmp cmp cmp nop add test test test cmp test mov cmp test test test cmp jne nop cmp test nop test mov test test test cmp cmp cmp jne cmp cmp cmp nop test mov test test cmp test cmp push test test test nop pop cmp test nop test test push test test cmp cmp cmp push cmp cmp nop test test push test cmp test cmp test push test test cmp cmp test push test cmp cmp cmp test push cmp test test test cmp push cmp cmp test cmp cmp push cmp test test test cmp call test cmp cmp test test add test test cmp test cmp ret push cmpl stos (bad) cld mov aad xchg mov jno mov pusha cmpsb dec mov test in inc mov dec xor xchg jl pop mov jns sub lock mov fsubr sti rorb je int3 fdivrs lret pop mov jae negl (bad) daa xchg add inc jnp sbb pop push jp inc cmp mov dec and jmp sbb jbe adc rclb enter push sbb mov inc push cmpl vmovdqa imul xchg xor push icebp negl cmp orl ljmp out xchg cmpsb test jg lock insl std jmp push jecxz cmc jns loopne dec icebp rcrb in (bad) cmc imul jmp push jecxz cmc imul test lahf dec jb daa in sub orl mov adc xor push mov mov pop js dec addr16 push dec sbb pop scas xor jle pop xor fwait insb aas andl and xchg or fs cmp mul sbb adc leave sub mov mov add (bad) cld mov aad xchg mov jno mov pusha cmpsb dec mov test in inc mov dec xor (bad) call cmp jae ja jae ja jae ja jae ja jae ja jae ja jae ja jae ja jae ja jae ja jae ja jae ja jae ja jae ja jae ja jae ja jae ja jae ja jae ja jae ja jae ja jae ja jae ja jae ja jae ja jae ja jae ja jae ja jae ja jae ja jae ja jae ja jae ja jae ja jae ja jae ja jae ja jae ja jae ja jae ja jae ja jae ja jae ja jae ja jae ja jae ja jae ja jae ja jae ja jae mov mov fwait hlt cmp icebp lock ds (bad) jns ja lock fwait hlt cmp ds (bad) jns out lock mov rorb cmova lock ljmp out scas (bad) lock (bad) jae xchg jae (bad) lock xchg rclb icebp (bad) sub mov (bad) jae sbb (bad) icebp (bad) jae lock cmova lock (bad) cmova lock clc (bad) jae jb jb lock rcrb xor fwait loop (bad) jae cmc sub jae lock mov call xlat lock pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and clc fwait hlt cmp cld lock ds jae jns out (bad) lock mov lock (bad) lock ja lock mov sbb fcmovb adc xchg movsb cmp repnz pop jge jb lock repz ds aad (bad) jns jnp lock repnz (bad) jae movsb sub jl cmpsb std jae (bad) mov mov (bad) jae movsb sub jae or jl lret (bad) (bad) mov mov das lock stos push xor jno lock mov test push mov test push mov test push mov test push mov test push mov test push mov test push mov test push mov test push mov test push mov test push mov test push mov test push mov test push mov test push mov test push mov test push mov test push mov test push mov test push mov test clc lret rcl (bad) jp sbb mov neg (bad) jae icebp (bad) jae pushl push xor fs adc lock (bad) and (bad) jae cmp repnz (bad) jae mov (bad) jae sbb xchg rcrl lock fwait call shrb ds jae jns aaa pop mov (bad) jae sbb jne lock ss lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp lahf cmp rcrb inc pop (bad) lock pop mov clc fwait hlt cmp lock xlat xlat jae jns dec pop mov (bad) jae sbb jbe lock idivb (bad) jae mov (bad) jae sbb jbe lock not icebp (bad) jae mov (bad) jae sbb (bad) lock test (bad) jae mov (bad) jae sbb ja lock (bad) into icebp (bad) jae mov (bad) jae sbb (bad) lock (bad) lret jae mov (bad) jae sbb (bad) lock div icebp (bad) jae push stc jae test jae mov lcall inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in data16 ret cli push cmp jae jae jb cld cmp loop,pt jae xchg pop push fcmovb sbb push or jno lock subb jae jns sub or jae test fwait outsl ljmp (bad) aam push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push repnz push bnd sub sarb ret jnp daa xchg jns daa jb,pt jae sbb jo lock adc lock (bad) jns xor sarb (bad) jae sbb pop (bad) lock jo,pt jae jnp sub sarb (bad) jae jnp daa xchg jns daa ds iret jae jnp jg aaa lret lock sub (bad) jae gs jb lock repnz (bad) jae cmpsl push pushf (bad) icebp (bad) jae cmova lock mov jae lock xor jae jae or jg xor (bad) lock ds mov shrb call lret call lret call lret call lret call lret call lret call lret call lret call lret call lret call lret call lret call lret call lret call lret call lret call lret call lret call lret call lret call lret call lret call ljmp lock xchg mov repz iret cmpsl xchg repnz jae lock ss push jo lock ds jae jnp jg aaa lret lock jae lcall (bad) lock xor test lock pop jne ss sbb cmpsb pop mulb jmp jo ss jb mov push popf rorb in andl out dec insb dec out dec insb dec out dec insb dec out dec insb dec out dec insb dec out dec insb dec out dec insb dec out dec insb dec out dec insb dec out dec insb dec out dec insb dec out dec insb dec out dec insb dec out dec insb dec out dec insb dec out dec insb dec out dec insb dec out dec insb dec out dec insb dec out dec insb dec out dec insb dec out dec insb dec out dec insb dec out dec insb dec out dec insb dec out dec insb dec out dec insb dec out dec insb dec out dec insb dec out dec insb dec out dec insb dec out dec insb dec out dec insb dec out dec insb dec out dec insb dec out dec insb dec out dec insb dec out dec insb dec out dec insb dec out dec insb dec out dec insb dec out dec lcall mov movsl xchg clc xchg movsb push mov call sub sub daa pop mov mov push loop (bad) lock xor jnp addr16 lock sub jno ds mov test jae sbb (bad) cmpsb pop sub xlat cs sub xlat sub push ss ficom cmpsb mov hlt div out movsl pop lahf push test repnz hlt jg,pt jge xchg (bad) rorl test (bad) jae mov push outsl adc lock xchg loopne xor xor fidivrl push pop sub clc cwtl les sarb and mov push fidivrl lock mov adc pop mov pop cmp jno mov cltd mov rcl shl inc inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in jnp ja int jae stos cmp sub sub pop sbb sub pop aas test jae test fnsave jnp cli fimul movsl jnp xchg sbb lcall (bad) lcall cli cmova lock lock (bad) insb push sub jae test mov (bad) lock pop mov clc fwait clc cmp ds sub sub imul pop ficomp les lock fwait clc cmp int shrb pop mov (bad) jae sbb sub (bad) fwait aad (bad) jae ljmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov fwait clc cmp xor mov mov rcrb mov cli push dec (bad) jae jae jae mov ficomp stos push dec or mov xchg clc cltd clc sub xor jnp lock mov sub adc clc sub lock (bad) std (bad) jae cmpsl pop mov cmpsb jb lock xlat lock pavgw lcall sub jb lock out lock jae jne jae lock les inc jb (bad) lock jnp ret into jnp push adc (bad) mov icebp mov jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js jl js mov addl jnp ret into jae jae jne js lock ss mov test mov pavgb call fnop sar rcll adc (bad) jno mov lock fstps adc (bad) jnp addr16 mulb pop stos fidiv hlt cmp sub (bad) out (bad) jae test sub dec pop cmp aaa (bad) je icebp (bad) lock (bad) lock dec icebp (bad) jae mov (bad) jae sbb (bad) jnp jnp (bad) (bad) mov jae jae jne jns lock xor sbb jb lock or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or (bad) lods or lock mov mov pop xlat (bad) lock lock clc cmp clc sub mov call fcomip sar mov push mov lock jae mov cwtl pop pop sti pop ficomp inc push lock sub sub lock scas stc (bad) jae dec (bad) jae lcall mov lcall sub jae lock mulb (bad) jae push loop (bad) lock xor mov adc loopne jb jns (bad) (bad) lock fwait hlt cmp sub rcrb fidivr repnz mov (bad) jae cmpsl fimull lock jae cmp mov sbb cmp mov sbb cmp mov sbb cmp mov sbb cmp mov sbb cmp mov sbb cmp mov sbb cmp mov sbb cmp mov sbb cmp mov sbb cmp mov sbb cmp mov sbb cmp mov sbb cmp mov (bad) lcall (bad) lock pop insl bound lock mov icebp (bad) jae jnp jnp ret into lcall pop out cmp jns rcl lock cmp lock pop insl bound lock mov repnz jae jnp jnp ret into lcall adc mov (bad) jae xor jno lock sub (bad) jae jnp ret (bad) lock mov mov mov (bad) jae jnp jnp ret into sbb lock (bad) lcall (bad) lock and pavgb lock fwait hlt cmp lock jecxz,pt mov jns not lock jo je jo je jo je jo je jo je jo je jo je jo je jo je jo je jo je jo je jo je jo je jo je jo je jo je jo je jo je jo je jo je jo je jo je jo je jo je jo je jo je jo je jo je jo je jo je jo je jo je jo je jo je jo je fwait hlt cmp into lock ds and sub repz lock fwait hlt orl (bad) lcall pushf test (bad) jg lock test pop xchg add lock outsl pop mov sbb lcall xchg lea ret sub jae dec jl,pn lock pop cmpl aas or jae stos cmp cvtps2pi xchg nop pop sub jae jnp ret sub lcall cmp sub mov mov cmpsb jb lock (bad) lock jnp ret sub jae ja jnp lock jae lock ficomp mulb lock aas data16 jae int dec jmp out dec jmp out dec jmp out dec jmp out dec jmp out dec jmp out dec jmp out dec jmp out dec jmp out dec jmp out dec jmp out dec jmp out dec jmp out dec jmp out dec jmp out dec jmp out dec jmp out dec jmp out dec jmp out dec jmp out dec jmp out dec jmp out dec jmp out dec jmp out dec jmp out dec jmp out dec jmp out dec jmp out dec jmp out dec jmp out dec jmp out dec jmp out dec jmp out dec jmp out dec jmp out dec jmp out dec jmp out and lock (bad) jnp jnp (bad) (bad) mov jae jae jne jbe lock rcrb add lock pop ja jb lock mov je,pn lock clc sub int3 sub (bad) jae icebp (bad) jae jne xchg sqrtps sub (bad) jae call aam sar fwait hlt cmp ds mov mov sar cmp pop rcrb cmpsb fs lock pop ja jb lock rcrb push fs lock pop ja jb lock xor cmc shlb lock hlt push icebp (bad) jae ja jb lock lock push je jae sbb jae lock mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jns jbe icebp (bad) jae cmovne xlat lock lock notb ja jb lock mov lock (bad) jae int mov (bad) (bad) mov (bad) jae jg jae call xlat lock not jae je jb lock mov lock (bad) jae int jae xor mul icebp (bad) jae arpl jae dec imul insl dec imul insl dec imul insl dec imul insl dec imul insl dec imul insl dec imul insl dec imul insl dec imul insl dec imul insl dec imul insl dec imul insl dec imul insl dec imul insl dec imul insl dec imul insl dec imul insl dec imul insl dec imul push call (bad) lock lock mov je jae lock in lock stos int jae jo add push test xchg mov popf xor mov (bad) jae jo negl mov jae test mov je jb lock jb lock jl (bad) jae sbb lock push mov lock jae repnz jb pcmpgtw xlat lock cmovne xlat lock mov movsl ljmp icebp push mov (bad) jae pcmpgtw xlat lock sbb lcall lcall (bad) pop sti (bad) pop sti (bad) pop sti (bad) pop sti (bad) pop sti (bad) pop sti (bad) pop sti (bad) pop sti (bad) pop sti (bad) pop sti (bad) pop sti (bad) pop sti (bad) pop sti (bad) pop sti (bad) pop sti (bad) pop sti (bad) pop sti (bad) pop sti (bad) pop sti (bad) pop sti (bad) pop sti (bad) pop sti (bad) pop sti (bad) pop sti (bad) pop sti (bad) pop sti (bad) pop sti (bad) pop sti (bad) pop sti (bad) pop sti (bad) pop sti (bad) pop sti (bad) pop sti (bad) pop sti (bad) pop sti (bad) pop sti (bad) pop sti (bad) pop sti (bad) pop sti (bad) pop sti (bad) pop sti (bad) pop sti (bad) pop sti (bad) pop sti (bad) pop sti cwtl (bad) jae mov les (bad) jae inc inc jb lock jae push sub sub sub jae inc inc jb lock jae adc sub (bad) xlat lock lock divl sub jl sub sub repnz mov ret shld scas fimull lock sub lock mov icebp (bad) jae inc push jb lock sub psraw cwtl (bad) jae lock jae inc inc jb lock jae lock mov sub fmull inc out lock pop jnp clc pop jnp clc pop jnp clc pop jnp clc pop jnp clc pop jnp clc pop jnp clc pop jnp clc pop jnp clc pop jnp clc pop jnp clc pop jnp clc pop jnp clc pop jnp clc pop jnp clc pop jnp clc pop jnp clc pop jnp clc pop jnp clc pop jnp clc pop jnp clc pop jnp clc pop jnp clc pop jnp clc pop jnp clc pop jnp clc pop jnp clc pop jnp clc pop jnp clc pop jnp clc pop jnp clc pop jnp clc pop jnp clc pop jnp clc pop jnp clc pop jnp clc pop jnp clc pop jnp clc pop jnp clc pop jnp clc pop jnp clc pop jnp clc pop jnp clc pop jnp clc pop jnp clc pop jnp clc pop jnp clc pop jnp clc pop jnp clc pop jnp clc pop jns repnz mov push jb lock jae scas fimull lock mov pavgb cvtps2pi xchg int3 push mov call xlat lock ja (bad) jae jnp inc pop mov clc xchg mov cmp daa (bad) jae scas imul (bad) lock repnz lret clc ret dec add add fadd sbb pop repnz ljmp mov (bad) fdivp adc (bad) jae add stos cld push mov hlt (bad) jae psrld jno jae lock pop (bad) jb lock jnp jg aaa (bad) jbe lock mov aaa (bad) lcall adc lock mov xlat xor jae repz jo repz jo repz jo repz jo repz jo repz jo repz jo repz jo repz jo repz jo repz jo repz jo repz jo repz jo repz jo repz jo repz jo repz jo repz jo repz jo repz jo repz jo repz jo repz jo repz jo repz jo repz jo repz jo repz jo repz jo repz jo repz jo repz jo repz jo repz jo repz jo repz jo repz jo repz jo repz jo repz jo repz jo repz jo repz jo or push fidivl jae lock stos cld push mov repnz jae push cmp lock pop jne jae lock push test (bad) jb jns addr16 xchg pop outsl fsts jmp mov dec (bad) jae lock xchg int3 push mov test inc (bad) lock ds aas mov jnp jg xor jbe lock mov sbb jae lock jb lock jae mov adc stos cld pop mov ret cmova lock xchg mov rcr jp jle jp jle jp jle jp jle jp jle jp jle jp jle jp jle jp jle jp jle jp jle jp jle jp jle jp jle jp jle jp jle jp jle jp jle jp jle jp jle jp jle jp jle jp jle jp jle jp jle jp jle jp jle jp jle jp jle jp jle jp jle jp jle jp jle jae,pn arpl xlat rcll inc push xlat lock cmpb (bad) xor dec xlat sub fidivr jg mov (bad) jae (bad) fimull test cli sub adc sub adc (bad) jae lcall (bad) lcall orb cmp pop mov ret mov pusha xor lock and sub (bad) jae sahf mov sbb mov sahf mov sbb mov sahf mov sbb mov sahf mov sbb mov sahf mov sbb mov sahf mov sbb mov sahf mov sbb mov sahf mov sbb mov sahf mov sbb mov sahf mov sbb mov sahf mov sbb mov sahf mov jno lock mov clc (bad) jae cmp push xor sti lret mov xchg push dec (bad) test adc fstl (bad) lock repnz adc fldl mov (bad) jl lock mov xchg adc lock repnz sar (bad) jae (bad) fdivrp sub jae lock (bad) lcall aam (bad) jae loopne mov cmc (bad) jae stos (bad) jae test notb lock jae fadd jae test mov cli (bad) jae or jae jnp mov lock jp jnp in fnsave push int3 fidivl add mov (bad) test stos xlat lock jno jae lock cmp fdivs jae sti pop insb push or cwtl cmp xchg mov ss mov lock cmpl mov repnz jae rcrl lret mov test sti leave mov mov sbb mov sarb (bad) (bad) lock out int3 insl enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter stos cld pop lea jp,pn lock ja lock mov cmpsb sub jae movsl sahf mov xlat jae ja jae test dec xlat test clc fwait hlt cmp lock ds sub adc (bad) jae lcall push sarb lock jae lcall cmp lock push enter sbb sbb lcall pop call push dec (bad) test mov cmp mov lret aaa fyl2x (bad) xor (bad) repz jae push xlat lock jae jne jb lock pop jmp out cli icebp (bad) jae in (bad) jae push xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor cmp fcomi shrb pop jmp out (bad) icebp (bad) jae hlt mov mov (bad) jae lcall (bad) lock push aam jae jns dec xlat lock lea clc stos cld mov out (bad) jae mov inc pop mov outsl fiadd push dec lret jns (bad) (bad) loop xchg xor loopne jae movsl into inc pop jnp push sarb clc andl sub push mov test dec mov (bad) push fisttpl jae lock mov sub (bad) lock mov nop cmp fdiv shrb pop jmp out out (bad) jae insl out jb lock out repnz (bad) jae jnp jnp ret addr16 xlat lock ficoml adc xor cwtl xor xor cli inc fcom jae xchg sar (bad) icebp (bad) jae insl ljmp lock dec enter leave into jnp je jb lock outsl fidivr fs mov lcall xor adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg adc xchg ss jae lock push dec (bad) jae lock (bad) cli icebp (bad) jae add (bad) test clc push aam jae rorl pop call push push xlat lock dec (bad) (bad) jae xchg sar loop (bad) jae icebp mov mov sbb adc lock idivb repnz mov (bad) jns push outsb icebp (bad) jae jns sub sarb xchg mov or mov pop mov lock icebp or adc or or push jae lock jns jge jns jge jns jge jns jge jns jge jns jge jns jge jns jge jns jge jns jge jns jge jns jge jns jge jns jge jns jge jns jge jns jge jns jge jns jge jns jge jns jge jns jge jns jge jns jge jns jge jns jge jns jge jns jge jns jge jns jge jns jge jns jge jns jge jns jge jns jge jns jge jns jge jns jge jns jge jns jge jns jge jns jge jns jge jns jge jns jge jns jge jns jge jns jge jns jge jns jge jns jge jns jge jns jge jns jge jns pop ja icebp and fstpl xchg lods mov cmp jb repnz mov fdiv pop icebp cmpsl test mov (bad) stc aad cmp xchg jae jbe cmp push das jo js lock adcl mov cmpsb jb lock (bad) lock sbb cmova (bad) lock pop lods divb repz pop jecxz ja sbb cltd sub adcb xchg (bad) add mov stos jae xlat mov dec (bad) jae lock mov sbb jae lock (bad) xlat lock fidivr clc sahf clc pop jge mov pop xor rdmsr clc rcl push fwait (bad) xor daa or xchg mov (bad) lock inc (bad) ret inc (bad) ret inc (bad) ret inc (bad) ret inc (bad) ret inc (bad) ret inc (bad) ret inc (bad) ret inc (bad) ret inc (bad) ret inc (bad) ret inc (bad) ret inc (bad) ret inc (bad) ret inc (bad) ret inc (bad) ret inc (bad) ret inc (bad) ret inc (bad) ret inc (bad) ret inc (bad) ret data16 pop mov mov mov mov mov pop mov cmp push cvtps2pi mov mov jae xchg mov mov mov mov pushf lahf push mov sbb stos sub adcl mov (bad) rcrb xchg xchg cmpsb xor mov xlat xchg sub pushf pop addl mov fwait xchg mov fwait xchg sub daa mov test (bad) lock cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe cmc push jbe fwait push adc mov xchg mov cmp mov mov nop sub pushf pop (bad) xchg mov pop mov mov jae adc cmpsb xor mov ss lock cvtps2pi mov test fwait inc adc pop mov xchg test movsb test push mov jmp add pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and mov pop and movsb aas cvtps2pi mov (bad) mov mov cmp cvtps2pi xchg lahf mov daa mov lock cvtps2pi xchg lahf mov daa mov lock cvtps2pi test sbb mov rcrb test mov movsl adcl mov fnstcw mov mov pop xchg mov push xchg mov mov mov push mov mov movsb lahf mov movsl addl sub push mov xchg mov pop cltd sahf xchg or lock jae jl lcall pop lcall pop lcall pop lcall pop lcall pop lcall pop lcall pop lcall pop lcall pop lcall pop lcall pop lcall pop lcall pop lcall pop lcall pop lcall pop lcall pop lcall pop lcall pop lcall pop lcall pop lcall pop lcall pop lcall pop lcall pop lcall pop lcall pop lcall pop lcall pop lcall pop lcall pop lcall pop lcall pop lcall pop lcall pop lcall pop lcall pop lcall pop lcall pop lcall pop lcall pop lcall pop lcall pop lcall pop lcall pop lcall pop lcall pop fwait xlat sbb push mov mov mov lahf mov movsl adc or sub pop mov lahf cmpsb push mov xchg or sbb sbb xchg sahf sbb rcrb sbbb xor mov lcall or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or cmp cvtps2pi cltd cmpsb xor mov mov mov sbb xchg sub xchg add xchg mov sbb dec xchg sub xchg push mov mov pop movsb xchg mov fwait sub adcl mov mov adc and push cmpsb lock sub sbb xchg cmpsl adc xchg adc cvtps2pi movsb xchg mov mov mov fwait mov sub pop mov mov push add sub push sahf xchg mov fwait sbb mov cmpsb push xchg cltd mov add sbb jae lock jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe cmc xlat jbe aam mov movsb (bad) ss mov rcrb movsl cwtl mov mov push and cltd mov add addl sub mov mov mov mov and sbb movsl sub xchg push mov mov mov mov rcrb (bad) xchg mov pop mov mov add sbb movsl sub xchg push mov mov cmp mov xchg mov cwtl test xor jae lods (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov (bad) cs mov ds jae sbb sbb mov andl scas test jns xchg cmpsb push addl repnz mov mov cmpsb pop hlt cmpsl adcl clc mov lock (bad) mov push jmp lock lahf mov mov mov mov and sahf mov mov (bad) mov push movsb cmpl mov lods rcrb hlt std fsubs pushf mov and cltd cmpsb push negb (bad) push (bad) sbb sub lock hlt mov mov cli test mov pushf cld and sbb sub (bad) jae lock (bad) lock (bad) lock jae test mov lock jae sbb jae lock or mov lods mov mov xchg cld push scas xchg rcrb mov mov fwait ja sub sbb mov mov mov cmp cvtps2pi lcall mov scas xchg pop mov cvtps2pi mov or sbb sub mov (bad) lock daa cvtps2pi ljmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb mov jmp sbb and sti jno sbbl stos ret movsl scas jne je (bad) or (bad) lret loopne enter fistp mov scas fwait loopne repz adc test mov dec mov push xlat stc inc iret nop cli cs rcll test push test dec test mov inc jnp divb jne inc ret inc mov stos (bad) xlat (bad) lcall test gs or in cltd fildl loopne cs jno lret jnp movsb inc mov lahf das andl sbb mov push cmpsl jle stc xchg jns mov pop (bad) fisttpll pusha sahf testl mov push mov enter or xlat adc pop lods dec sbb push push call jge sahf fwait cmp sub mov fstl (bad) scas movsb sub lret das addr16 fs pop scas pop aad dec or add pop xchg pop mov push pop in jge out shrl adc push adc fs mov out (bad) cmp add jl out pusha test ret mov stos inc adc in pop pop lock cli sbb mov push je and lcall xchg daa xchg movsl mov cltd je fs out add mov nop dec add icebp (bad) enter mov jecxz xor lods and cmpsb lods jbe xchg jmp das cmc or lret or sub adc std bound scas stc lret jecxz movb pop push xor push sbb add clc dec aas mov in aad jp outsl adc mov imul sarl in sub jle xchg inc mov inc and lods xor lahf int3 sti rcll cmpl imul push cmp lea mov or inc sbb inc por loopne movsb dec inc xor mov push xchg sub js push push adc mov and hlt dec xor orb mov add fisttpl sahf push outsb stc lret out in or xor (bad) push loope or sub jbe jmp xor push adc into dec mov adc xchg out aad lret stos arpl pop fcom repnz pushf sti push inc sbb (bad) repnz je (bad) push jle jp or jecxz fsubrs cli cwtl cwtl (bad) xchg or adc fiaddl sti or sbb xchg pop pop push in mov xor lahf inc sbb xchg outsl push pop add pop inc inc mov js inc ret sub jmp pop pop fs xchg mov pop and and dec cld insb push dec fninit loopne test (bad) jl ret mov std xor cmc sub cmc je imul jne scas dec add add sahf cmp test or inc dec mov test cltd (bad) cmc ja fnstsw aaa mov adc cmc mov xor lret ja inc cmp jecxz add and adc hlt std or ret fcmovu pop push imull sbb dec jnp xchg bound add inc mov add jns inc ljmp sbb (bad) mov lds int aas jae mov (bad) (bad) cmpsl and movsl into clc inc scas adc rcl sub push xchg std mov mov mov loopne or aam mov in jno mov mov dec dec sbb pop inc cmpsl adc ja sub xchg mov xor jae sarb pop repnz push mov pop inc jbe pop xor shr push popf imul pushf mov (bad) aaa sub in and adc mov lods mov sbb sti mov xchg jmp add loop pop shlb movsb inc cltd aas fwait data16 movsl mov (bad) test ret mov adc dec sub cmc movsb xchg lds js nopl test push push fiaddl in fiaddl sub lahf jno inc mov push xor sub ds rcll (bad) prefetch sub pusha sbb cmp outsl pop loope pusha or das sbb je xchg mov sub cmp jbe int3 sbb fdivs mov lcall ficomp ja inc fistpl jecxz add lahf cli jo scas hlt sti les cmp mov int js mov push push test mov in jnp and mov mov (bad) icebp inc or mov rorl ret cmp xor mov cmpsl (bad) scas push and lcall mov or lods test std push (bad) adc pop or fisttp sti sub in sbb gs iret movsbl xchg push std sub push out xchg int3 xchg arpl (bad) fcom push cld scas inc sbb xchg pop cmp repnz mov and out dec jecxz scas cs mov xlat (bad) push jb xchg pop cld or push fsubrs pop outsb push in movsb add mov test xor add pop inc idivl add inc cmp ret cs or dec xchg cmp pusha aam cwtl mov sbb and insb xchg cmpsl pop sbb jecxz mov repz pop xor test (bad) or jno dec pop mov xor mov hlt pushf cvtps2pi xchg imul ss fidivl (bad) push in (bad) data16 jns imul arpl fsubrp xorl mov push hlt push data16 mov stc fucomip xchg xor push cmp lret in inc sbb ja sub das aad inc adc mov cmp jnp dec arpl dec inc inc xchg inc mov ljmp pop jnp sbb push inc cmp add dec imul dec mov (bad) xlat mov pusha cmpsb into roll (bad) sub pop sub leave or clc mov loop enter pop (bad) or (bad) dec dec mov aam jns outsl gs (bad) mov popa les adc sub xor adc je sarl lret mov pop add mov stos or and and inc adc das popf push not in jle ror mov fmul std scas sub pop stc xor das and push jecxz rclb es cld sbb dec cmpsb mov xlat test shlb xchg scas pusha stos xchg mulb (bad) xor mov jle int3 xchg imul xchg (bad) adcl mov add dec cwtl mov sub fs daa das not cmc (bad) lret mov sub or cmp jo loop out or fdivl sbb push mov mov cs or sbbl enter div pushf jp xchg push mov xlat add js inc fnop sub into push ret sbb addl nop stc js insl adc cmp dec pop mov jl xchg push pop pop inc lahf mov mov dec xor pop pop test data16 popa lcall scas dec dec mov cld sarb ss (bad) and fwait dec cmovne aam call scas xchg add jnp stc add cmpsb enter or ljmp sbb out xor rclb adc push shr dec add incb xchg jns sub xlat ljmp std mov sbb pop push xchg mov and push sbb mov hlt call (bad) ficom (bad) push mov notb movsb lret addr16 lret shrb mov std aad xchg sbb (bad) jb mov rorl aas stc loop fsubrs xchg dec mov popf push lds push pop scas inc xchg mov pop sub sahf mov iret les jb outsb push pop imul mov or lods (bad) ret jle lahf mov (bad) dec aam movsb faddp sarl in pop and pop mov or scas stos dec cs rcrl daa and in aaa or push das pop cmpsl adc inc pop adc xor sub ficoml add cmpsl sub in add jle es out out xor loopne xor mov mov dec aam and (bad) cmp std imul mov xchg and push ja (bad) stos jno mov std pop mov mov jb test sbb push adc jge pop sbb push dec cmpsl cmc dec mov inc movb xchg mov xchg cmpsl cli mov pop sbb fcoml and dec jmp fidivrl jae (bad) rorb push push hlt es push fadds jo loop ficom sub adc or leave enter mov mov loope dec popf sub pop or ror test jne xchg cmc or (bad) mov mov pop mov lods sbb fisttpll xchg rolb (bad) adc stos cmp mov loope cwtl fwait xchg sub cli leave sbb push sub sti pop lock mov push inc cld mov xor out mov or sbb push pop inc mov jae lcall addr16 faddl mulb add and les sbb mov mov push push imull in inc xor pop test insl in xchg cmp fs mov fcmovnbe movsl sahf mov enter bound sub mov inc test mov sbb shr or jne mov es call pop lea dec cs les outsb addr16 mov pushf xor sub cmp sub iret icebp les xor adc test dec pop stos inc jne (bad) pop sbb cmp out cmp jae cmp insl je mov jge cmp adc xchg dec bound add (bad) out xchg hlt sub rclb lea sti es ds and pop push jg imull lods repnz ret ss add pop adc adc scas dec stos mov pop or and es jecxz bound test ss into mov xor push add xchg inc or push loopne mov (bad) xor ja lock fiadd ror cmc aam out imul cmp push sub jb cli fcompl lea mov lret pop (bad) push adc pop inc push cmc xchg popa mov shl iret gs jns (bad) stc lods sbb mov mov je pop lea in jb lds fdivrl les call push nop aad call fsub jp push mov mov dec jmp pop xchg lods sub mov clc cmp add xor sub fldt add inc popa sub loope sub sub mov or sbb shll call mov xchg dec ror and outsl or adc mov sub repz addr16 jae outsb dec add movsb jne (bad) (bad) mov cmp jae cmp jo push rclb in negb pop xchg cmpsl arpl inc inc mov pop mov xchg nop scas sti dec fdivrl dec xor enter aaa adc loopne add cmpsl jg (bad) xadd icebp push rcrl hlt jnp push and sub dec mov sti mov mov es push loope and dec sbb iret ror bound xor push imulb xchg clc sarl pop pusha and mov pushf cmc inc cltd or xchg rorl (bad) cmp aad cmp (bad) push stos mov xchg sub cli xchg jb cltd jle sub cld fisubrl mov push inc icebp out xchg mov gs lods sahf sbb nop push movl pop int xchg fwait jmp fldlg2 (bad) mov adc (bad) cmp push mov (bad) movsb in aad call mov cmp cli push lret in inc shrd pop pop and clc pop and inc push mov fs mov dec aam leave jl out pusha ja jae bound pop sub add mov ret fsubs (bad) lock xlat xchg jne mov mov dec stos fs movsb stos mov cs jno dec addr16 mov popf outsl xchg inc mov push out cld pusha xchg and iret icebp cmp mov es test xor lods (bad) jne add (bad) popl out sub ds jle mov dec imul mov out jecxz sub sarb mov sar out jne dec fxch daa loope ds add push repnz clc inc shrl ret ss cmp inc repz pusha jmp loopne daa (bad) lahf ja repnz test push pop (bad) xorl stc xchg ret pop (bad) cmp jnp jbe ret lock movsl inc adc dec bound fdiv adcb xchg xchg xor pop (bad) out push and or dec jne sub daa pop je pop push push cmpsb push int inc add sti inc ljmp xchg sub popa push dec sbb pusha jp lcall test out xor je (bad) pop jl mov push (bad) jo xchg ficompl test pop fadd repnz scas ds insb xchg sbb xchg pop pop cwtl das in mov jg lds mov mov cmp inc cli jg shlb ja test rorl mov add sahf cmpsb outsb in ret push mov and push and or negb fabs fmulp test ret fmull mov cmpsb movq inc push adc xor insl loop fisubr cmp addr16 mov lods dec inc lock pop (bad) mov and xor mov inc mov add (bad) hlt mov mov push scas cmp aad add std leave mov enter cmpsb pop test cmp push aaa inc pop jecxz fcomp pushf dec cmp sbb push dec movsl repz mov inc cmpl ja inc sub cmpsb mov sti (bad) pop cli rcl xchg dec addr16 out dec dec das lret fnstcw jno or lods mov movsl rolb lock mov cmc ficom shrl sbb cmp and dec fwait sub popf andb mov xor mov (bad) into dec inc pop adc cmpsb push xor sub mov ja jb add test popf icebp mov or ficompl xor iret xor loopne pop pop and mov clc test jns mov mov or fidivl sbb xor sub add and xchg and (bad) pop adc adc imul sti jecxz xor ljmp js adc mov les mov es mov enter inc in stos fist xchg flds loope jle sub inc cli cmpsb sahf jo mov adc mov outsb inc repz push push jns icebp push lret mov (bad) aad xor or stos jae xchg out call hlt in enter cld pop push mov outsl push in cmc add mov lock push aam insb jbe inc ficompl loop add jne lds push cmp imul repnz pop ljmp jg icebp es jbe aas mov inc jae adc fwait (bad) out cmp in test int mov jp jne gs or pop out dec popa inc fist pop lret add inc aas adc push cmp fisub dec cmp out sbb mov dec mov mov push ds mov (bad) out xchg pusha or pop jns cltd stc out aas sbb shll sahf jp outsl jae adc jecxz mov push out sub xchg sbb inc sbb outsl je fcoms dec icebp dec sbb pop imul int ret loopne arpl or pop inc and addr16 mov mov fs inc movsl inc js dec jbe imul cmovs cmp xchg loop ret pop mov pop push and stc imul lea (bad) cmpsl lock push add pop movsl push jg inc push adc outsb xor push mov xor movsb ss sub fisttpll aaa (bad) push leavew lods xor and in in xor adc adc iret cmpsb jp mov jo inc pop mov xchg dec add (bad) fldt xor push ficoml (bad) jns icebp addr16 cmp das aam cld nop je dec jnp enter popa pop (bad) jg add jae push cmp cmc adcl cmp or push jnp repnz cmpb test std jbe scas out xlat inc mov lds movsl add cli ficoml and cmp fmuls stos out mov inc lods push test cmp adc pop sub movb ja cmp fdivrp or dec pop ret test shrl mov int mov push xor insl jmp out test jno mov or sbb mov test iret mov dec in mov push js lcall or (bad) fsubs scas outsb (bad) stos insb lock das xchg arpl mov into aad push std and and mov (bad) cmpsb loop arpl sahf std adc xlat stos pop ljmp ja loop pop xorb and gs aas fisubr xchg push and jge pusha jg sub push xor sub cmp sub adc or dec mov jp inc ret xchg dec das insl outsl fbstp jno mov mov sub add data16 jge sbb or in hlt icebp cwtl mov out fisttpll jne aas fsts es add push add mov loope sarl jne push cs lret pop mov repz mov add cmp jp dec inc mov inc push fimull jb dec (bad) lret enter and add add lcall mov jns int3 jns xchg pop adc mov test test xchg jle dec sub and popl pusha mov cmpsb mov (bad) int3 inc pop mov rorb leave sbb sbb ficom es dec in into faddl mov fsubr imul ljmp sub jo fcmovnu push leave mov dec mov pop sbb scas aas shl (bad) arpl add int3 stos sbb cwtl (bad) or push nop mov pop xor cltd mov jp jne ret shr in push pusha mov sarl and js pop jns jecxz lahf imul xchg call dec push sub std and divb mov xor mov addr16 pop shll adc sub lods inc and js sbb xor out jmp jno mov xlat mov mulb outsl xchg insl or push adc xor inc xor lods daa pushf pop xchg and or xor inc std test cld push push aaa xchg in and je mov test jg mov outsb hlt pop into pop xchg jmp xlat movsl inc inc xorl mov lods mov das stc lds cmp sbb movsl jge cmc or mov push add loopne push xlat pop outsb mov insl sub dec dec mov stc or cmp mov and dec fild int leave pusha pop xor (bad) repz push inc out xchg cmc sub rcrl mov leave repz or into mov cmp add rcll inc in or cmp lea fisttp clc jl jns mov fsubs mov stc aas out repnz pusha rcll mov lds push (bad) jno pop jmp cltd gs fcmovbe lods cmpsl rorl cmp push jmp (bad) ret mov aad les cmc and stos call mov int3 and push adc notb mov xor inc shll xchg (bad) daa jo add cmp and aad mov xor popa and mov in test dec sub mov fwait insb gs mov dec in nop pop xchg scas sub stc out cmp xchg int ret xor into orl pop push add lea cmp out jle push jno cmp push jb adc dec hlt mov pusha jmp loopne daa (bad) in (bad) repz mov mov dec cli in ficoml jae cmp adc jge mov cmc imul loope fnstenv add test mov stos mov pop mov sub push and dec outsl and sub sub xor xchg int3 inc inc mov and jge sbb xchg inc cmp iret das inc jne enter sbb hlt movsl in jmp pop mov lock clc daa push sbb cmp mov or adc scas aas dec in dec sbb aam sbb push imull (bad) (bad) mov pop sub out cltd mov jmp push adc jbe pop ret mov fmuls mov fisubl pop jecxz pop and (bad) clc mov push es inc scas addr16 jmp pop push (bad) fsubrl mov push inc repz bound mov push in rcll cmpsb daa pushf inc pusha lods std (bad) jmp loope jns sbb xchg (bad) mov and xor mov mov push nop enter sub inc adc xor lock (bad) in (bad) adc test std stos jno insb add dec fnsave test sbb push push sarl pop into push xchg cmpsb hlt mov inc (bad) xor add jb xchg fucomi (bad) xor ss sbbl jle mov stc negb (bad) repz push fadds sub sahf xchg pop outsb sub or mov idivb and mov mov xor ret inc sarb pop pop mov sbb cwtl or loop dec dec iret cmp rol daa (bad) jg gs dec addr16 adc dec sub stc test jp rcrb or sti f2xm1 hlt jo push inc cld insl repnz stos js push push push (bad) pushf pop out popl pop xchg jp das iret lcall data16 fildl gs add icebp push mov (bad) andb les mov es leave imul jmp in push leave (bad) and push notl pop mov mov fcmovnbe movsb popf jnp add and popa pop xor jb mov incb mov xchg jl jno (bad) xor and icebp jb lea push sub cmc xor mov pop in dec inc xchg imul pop cmp sub into lods ret movl stos add pop pop mov cmc data16 (bad) jb cmp insl je mov jge cmc mov (bad) in mov mov jae js inc mov stos fisttpl cwtl stc xchg int3 loopne leave mov jle insl das push (bad) lock mov push loop push aaa ror jp mov dec stos mov pop or mov and cs sub xor push test iret adc cmp or pusha out (bad) bound cwtl mov dec loopne mov (bad) jne ja xor push push aad aam fistp pushf and je sbb push push rcll mov adc push in shl adc popa jns (bad) stc lock sbb lcall jnp out xor sarl or and sbb sub xchg xchg je fstps dec repnz push pop insb dec das in mov in aas and lds insl push mov cmp inc mov jns dec jbe imul sub push (bad) insl adc (bad) sahf xor and push call or cmc pop icebp fabs test ds sar (bad) sti sub inc adc repz sub repnz aaa jb addr16 mov mov add out fstl inc stos fildll jae jno inc or xchg inc add dec repz jbe mov sub push js ja xchg scas cld xchg and jbe leave jne aas jnp enter bound aas cmp pushf pop jecxz fcomp pop dec cmp jno dec mov std sub ja inc call bound cli rol xchg dec addr16 xchg (bad) cmp lods mov lock pop mov push test rcl inc sbb jge leave (bad) adc cmp orb mov mov into outsl push pop ret dec inc in adc cmpsb adc mov xor jb mov icebp sahf sbb or fstps jne pushf xor pop xor and mull cmp jns jnp adc jecxz and outsl fnstenv sbb jmp add pop fnsave sahf loope mov mov and frstor frstor aad lret call mov cmpsl outsl dec sub add ss and callw in addr16 fist push fchs test pop jmp push jo mov mov xor movsl fldenv push mov daa pop or push jbe dec pop sbb cmp mov das test fistp mov mov xchg icebp add and in lret cmp pop ss (bad) js test mov aam out jbe push ficoml sub adc add add stc inc ret cli or add hlt mov sbb jecxz mov jb inc pop inc adc xlat (bad) jne and pop push lods cli push les stos addr16 int3 mov iret dec addr16 ja ret mov icebp add or dec loope mov rdmsr sub inc js adc mov popf and call xor push pcmpgtb into inc mov adc push mov stos bound pop xlat (bad) icebp popa jnp fwait sti push inc sbb icebp mov cmpsl rol dec mov lods in mov adc sub xchg or adc fisubrl or sbb xchg pop pop push jmp add loop pop jb outsb push pop and mov mov jp fnstsw inc rorl outsl call pop pop xchg mov sbb pop mov test sti imul mov dec (bad) fild stos fmul jnp shr cmpsl lret jo add cld xor mov mov sub hlt jae pushf inc pusha imul jle loope stos out xor shrl loopne in stos test cs xchg inc dec mov nop test cwtl (bad) cmc ja fdivrl std imul cmp fs hlt mov xor lret inc cmp leave loop add pop test jne hlt cld or ret push adc mov dec cmpsb mov jp xchg bound add inc mov add js inc jmp arpl mov aad cwtl xchg lods aaa or int3 fidivrl jb (bad) mov cmpsb and movsb int inc scas adc rcl sub test cld mov mov mov loopne or rol mov in jo mov mov dec inc sbb ljmp xchg mov xor jb sarb pop icebp mov push lahf mov xchg ficompl jne pop xor iret and pushf dec adc and and add insb je add add add add add and add add or test add add add and add add add or add add add add add add add or add add addb add add cmp cmp cmp cmp add cmp push dec add inc add inc add add dec add dec add push add push add push add pop pop add pusha add popa add add popa add push insl insl insl add jo jno jno jne jne ja js jns jns jge jge xchg pusha pop add push or xchg add sub imul add jnp add jg add andl add cmp mov cmp mov mov add addb aad add fild ltr xchg pop add sbbl aad pop add mov add lea add mov add xchg add mov add xchg sbb sub push add cwtl add call xchg add in pop add xchg sbb loope sbb add mov or in mov adc in sbb in mov sbb lds es subl rorb and fstpl xor add xchg xor iret xchg ds cltd cmp fcoms ss xchg cmp add lcall in and call cmpsl and in test es lods daa add lods sub lock and lock and add mov add mov add mov add mov add mov add mov xor sti mov inc add xchg dec add sbbl mov test xchg mov stos mov stos xchg push lods xchg insb add xchg jo mov jno mov mov jnp lret xchg inc add cltd inc add fwait dec add cwtl push add sahf pop add mov dec add movsb inc add mov pop add movsb lahf add test pop add lods inc add scas inc add mov add mov add mov inc add mov add mov dec add mov push add mov add mov addr16 stos popa add movsl imul lods addr16 cmpsl imul stos imul fbstp jae int3 stos jnp xlat mov add mov add mov gs mov jae jmp (bad) dec add ret pop add ret test add aad add fidivl jg addb addl add mov add xchg sub xchg xchg xchg add cwtl cwtl add sahf sahf add pushf (bad) add popf mov stos lahf xchg add movsl xchg mov mov xchg add mov movsb add cmpsl test test stos lods add test movsb add mov add mov add mov mov mov add mov (bad) cmpsb imul mov mov fadd lcall sarb leave mov add int3 test add (bad) add ret les (bad) add leave leave add lret int3 add int add iret rolb rcl roll aad (bad) add fcom add fcomp add fstp add fld add ffree add in sub ljmp cmc cmc testb add add (bad) incl add add add add ror int3 rolb (bad) into fucomp fcomps lahf fldl add int3 mov icebp sbb fadds add add mov fcomp repz adc imul int3 int3 into xlat fucomp (bad) int3 push mov add mov int3 shr repnz icebp fmuls sldt add add mov mov mov div jmp or add add mov mov adc icebp sbb mov add add mov mov mov push add repz or jg repz loop rcrb mov mov adc or push push sbb mov (bad) add cmp out add add add rcrb sbb mov adc or push push sbb mov sbb jo add add add int3 sbb sbb invd push mov sbb and je add add add adc sbb mov sbb arpl xor add add rclb sbb mov int3 jmp sbb icebp icebp ja push inc cmp sub add jmp sbb sbb sbb div js arpl inc inc sub add xor sti mov mov sbb icebp fcom repz cld jmp fwait xchg outsb push dec sub add sbb adc sbb mov repnz mul repz insl push add add add sti fnsave into repz jecxz test or add add (bad) and add cli repz fdiv sti mul push inc inc xor and add add dec leave add add sti idiv cli jmp sbbl inc das xor add add add xchg pop add add dec les add add add add add dec inc aad jns add add jmp add lahf mov and add add sahf pop roll add add add xchg push add xor add stc pop add add imul add add ret add push add add xchg out imul add cmpsb mov add call add add add add add add add add add add adcl add add add add add add add mov xor fiadd add add add cmpsl add add add add (bad) (bad) clc add push add jmp add inc add incl add incl add add add add add add jg add aas add add add add add add add add addb cmp add cmp add cmp shrb jmp daa cmp jmp xor jmp xor jmp add jmp add incl pop (bad) decl (bad) lcall pop (bad) (bad) aas aas (bad) (bad) aas aas (bad) (bad) jg sub add and add inc add add add add add add add lahf lahf lahf add add movsl movsl cmpsb cmpsb cmpsb cmpsb mov les jns js add add add repz lods lods lods xchg xchg xchg xchg xchg xchg mov scas mov int lret int3 jp jp pusha popa add add mov mov stos mov mov mov vshufpd addr16 xor add repz xchg xchg xchg sahf sahf sahf cmpsl cmpsl test mov mov (bad) xlat xchg xchg xchg inc inc inc nop nop nop add xchg xchg xchg jg jg mov (bad) (bad) popf popf sahf scas scas scas ret ret (bad) iret iret iret lret lret lret lret lret int3 mov mov pop pop add add jle test test test mov (bad) (bad) xlat rcl rol rol push dec dec dec add add jl (bad) (bad) jge jle xchg xchg xchg pop pop pop cmp cmp push aam aam lret jl dec dec dec rol addl jg mov push push push cmp inc inc inc inc cmp cmp rolb dec dec dec dec (bad) jp mov insb mov jno movsl xchg xor add add jae addl test push inc inc inc inc inc inc inc inc inc inc inc inc inc inc jns jp int3 int3 mov pop pop pop inc aas cmp sbb lcall sub add cmpsl cmpsl cmpsl jb jb addb test jp insb insl pop pop pusha dec dec dec inc inc inc inc inc inc inc inc inc ja js rol mov fs jo in push loopne sbb mov fisttpl add jno jge jns jns xchg jge xchg xchg xchg jg sbbb dec dec inc inc inc mov test insl outsb jo jo pop push xchg jmp and pushf push aad pop int or sbbl add add add add mov insl jnp jl ja test xchg mov mov pop pop pop fwait fwait pushf mov mov jle xchg xchg xchg stos stos lods xchg xchg xchg imul jo out lods daa call sbb mov (bad) test mov cmp add imul jg jg test mov lahf lahf lahf jl jge jge lods lods lods cmpsl cmpsl cmpsl lea int3 int3 int lret into mov lock in stos es and xchg sbb lea mov ret outsl outsl outsl jne jne jns ja ja addl jno jg jns jp je cltd cltd cltd rol sahf sahf sahf lods lods lods aad (bad) (bad) (bad) int xchg mov nop cs scas daa lock and jl in pop mov cmp add add add add add add add jmp addr16 js je js js (bad) (bad) addl outsb outsb mov mov mov test rcl (bad) cmc cmc imul out out mov stos xchg push mov cmc mov in stos sub mov add add add fsubl rcl (bad) jae jae imul jo jb jae jae je lea enter mov mov shl out (bad) fnstcw jnp mov jmp outsl jmp je mov add sbbl add add add in in mov (bad) insl insl insl imul ret insb jnp jnp movsl movsl rcl ror iret iret mov popa fidivrl mov xchg add scas inc int3 xchg xor lret xchg inc mov add add add add out rcl (bad) mov mov cmpsb cmpsb mov mov (bad) (bad) ljmp ret pushf aas out movsb add sahf push fist aad add repnz iret lcall add add fidivl add add out (bad) fnstsw loopne jecxz jecxz ret ret add add cltd inc fldenv jmp add cwtl add addb test add mov add add lret stos pushf mov add add sahf pop into xchg cmp mov in mov lock sbb mov add add add stos mov add add mov rcrl add mov lods lahf mov add add lods fisubl scas inc fisubrl add add add (bad) jbe out mov rcrl add add add movsl imul das add ret cli scas and add add add mov xchg pusha sbb jl add add add ljmp fcompl add add mov add add add add add lods inc rorl add mov es add mov add add add add add scas push mov cmp add shll mov ret jl stc mov add add add mov and fsubrs (bad) test cmc ret pop (bad) fidivl test add add movsl and add add add mov add stos outsb (bad) call jae test add (bad) mov loope dec lds add test ret cmpsb pop test mov add add add jl add (bad) cwtl push out mov add add cmpsb push mov iret lcall fldcw add add add add add iret xchg aas add add add add add add cmpsl pop scas pushf (bad) add fidivl add (bad) mov (bad) push add jmp add inc add inc add incl add incl add incl add incl add jg add aas add add add add add add add add addb cmp add lock jg inc outsl cmp lock cmp jmp (bad) pushl (bad) pushl (bad) jmp (bad) ljmp (bad) decl (bad) lcall pop (bad) (bad) aas aas (bad) (bad) jg adc (bad) jg push add data16 xor add jg add gs add inc add incl add clc dec add addr16 add dec xchg add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add (bad) (bad) incl add add dec add add add dec add dec add dec add add add add add adc (bad) incl add add dec add add add dec add dec add dec add add add add add add mov inc add (bad) (bad) incl add add dec add (bad) (bad) incl add add sbb nop sbb sbb dec add sbb and inc add xchg dec add sbb push sbb and dec add sbb push xchg dec add sbb mov inc add inc add dec add sbb in sbb xor dec add sbb or inc add xchg dec add jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor ret nop nop nop nop nop nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov mov xor push lea push mov mov mov mov movl call push lea push lea push push lea push call push call lea push lea push push call add push jmp testb je lea call lea push lea push push call add ret ret mov mov pop pop mov pop mov pop ret nop nop push mov sub push mov push mov sub push push push mov movl xor lea push push mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movl call mov mov lea call lea call cmp jne push push call mov mov push push call fnclex cmp jge push push push push call lea push call mov lea call cmp mov mov jne push push call mov lea call push mov push push call lea push lea push push call mov add cmp jne push push call mov mov lea push push call fnclex cmp jge push push push push call mov mov lea lea mov mov movl call cmp jne push push call mov mov push push call fnclex cmp jge push push push push call call mov lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov lea lea mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov mov lea lea call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov lea lea mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov mov lea lea call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov lea lea mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov mov lea lea call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov lea lea mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov mov lea lea call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov lea lea mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov mov lea lea call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov lea lea mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov mov lea lea call call lea lea mov mov call call lea lea mov mov call jmp xor lea push lea push lea push movl movl call mov lea call cmp jne push push call mov mov lea push push call fnclex test jge push push push push call mov mov lea push push mov call fnclex test jge push push push push call mov mov lea lea mov call lea call lea push lea push movl movl call test jne mov test jne push push call mov push lea push call push push call mov mov lea call mov lea call mov lea push push push movl movl call mov lea call lea call mov movl lea push lea push lea push movl mov call mov lea call push push push push call test jne lea push lea push movl movl call test je push push lea push lea push movl movl call add push lea push call lea mov call test jne mov cltd and add sar mov mov test jne push push call mov mov lea push push call fnclex test jge push push push push call mov mov lea lea mov call mov push push lea push mov mov call push call mov call mov mov lea lea mov call mov test jne push push call mov push lea push call push push lea push call push call add push jmp lea push lea push push call add lea call lea push lea push push call add ret mov lea call lea call lea call lea call lea call mov lea call lea call lea call lea call lea call lea call lea call ret mov pop pop mov pop mov pop ret nop nop nop nop nop nop nop nop nop nop nop sahf sahf sahf sahf cmp or (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp test add adc add test add or push test add or outsb test add or xchg test add test add test add test add test add test add test add add sub or dec test add add or mov test add test add test add add ljmp cmp or adc or sub or inc xchg add or push xchg add or add subb add xchg add xchg add xchg add add adc or sub or xchg add or push xchg add or xchg add add add add push inc push dec xor inc dec dec add xchg add jbe popa push popa jb jae inc je push add dec arpl add mov pop popa fs data16 popa outsb add js pop pop jbe popa push popa jb outsl jbe add mov pop pop jbe popa inc jb gs popa jb add bound jb gs popa jb imul pop popa fs imul xor mov pop popa fs data16 gs xor sub bound gs jns je insl inc jb outsl jb rolb pop jbe popa dec jb jae insb je push bound add push imul xor cmpsl add fs imul imul popa fs imul xor imul dec jae outsb add outsl add jbe popa inc push add add inc dec push pop push dec dec dec pop inc fs data16 pop pop jbe popa push je inc insl jo push add jbe popa push jb outsb je bound add pop pop jbe popa dec bound popa jb or inc insb insb inc jne arpl outsb inc popa insb insb add push data16 je outsb add dec push pop push dec dec dec pop push gs gs jae add push add dec jae jb add inc push inc dec push pop push dec dec dec pop push jne jb dec outsb je jb popa arpl mov pop pop jbe popa inc js gs dec popa outsb fs gs add push data16 gs add scas add fs imul ss add bound push inc js gs imul pop pop jbe popa dec outsb push je push popa jb push add dec insb outsl add testl popa dec gs add add jbe popa dec outsb push je add test push imul xor add push imul xor imul jbe popa push je inc outsl jo add mov pop pop jbe popa inc jb gs je dec imul pop popa fs imul xor add stos add fs imul cwtl add jbe popa push popa jb jae dec gs add jbe popa dec xor popa jb add pop pop jbe popa push popa jb fs add jbe popa dec popa je dec gs inc popa insb insb add pop add jbe popa push popa jb outsl jo add jo pop pop jbe popa push popa jb popa je dec gs inc popa insb insb dec add pop pop jbe popa push popa jb gs bound fs data16 push add dec popa je outsb add add jbe popa push je dec outsl jbe add mov pop popa insb insb insl jne add pop inc dec je outsb add push add dec gs add scas add jbe popa inc jb gs je add lods add jbe popa inc jb gs bound 