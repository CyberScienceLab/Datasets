xor mov jle jl and lds xor enter iret push shrl cmp sub stos pop cwtl xchg mov add (bad) cmp test dec mov sub pop clc or jbe lahf ss mov fildl (bad) sbb jbe sbb cld adc sub arpl jle jle fisubr xchg xchg add pop sbb lahf (bad) arpl pop ljmp rorb xor out or hlt sub xor mov xor loopne sub push movsl mov in arpl fs enter mov inc movsb and cmp inc sbb jmp test mov scas push aas arpl in jno out cmp cmp inc mov stc xlat xchg inc and mov mov push push inc dec push cltd jmp out mov sbb shll xor or jo push push mov and inc and jno sub in lahf movsb cmp shr jmp mov ds lea (bad) cmc sti and adc mov andl fdecstp ja pop xor add pop ficomp sub nop fsts scas sub sbb push push pusha loope frstor (bad) mov push ret out sbbb xor lret (bad) xchg out out (bad) pop mov jecxz aam add mov pusha xlat adc dec jge pushf scas xchg sbb inc jns aad mov dec shll lea or xchg mov iret stos outsl stos xchg mov gs push cmpsb cmpsl push notb push fwait or icebp in xor neg cmp lret faddl ds inc bound xchg mov jmp rdpmc sub adc mov sbb js ret jbe mov inc cltd mov push sbb sub mov and dec cmp mov loope inc popa mov adc sbb push femms hlt inc ja (bad) jbe test repz jmp jge pop mov or or push inc sub call mov push xchg pop and jl inc jns inc lods test sti jns in leave lcall cmp xchg ljmp bound fwait dec push push adc push stos in stos shr scas inc nop add jae mov mov jmp inc mov lods (bad) ljmp imul lods cmp lea adc out sbb mov outsl imul jae (bad) clc jmp call call jnp gs cmpl out mul pop ds adc nop cwtl daa xor lds test decl adc (bad) outsb jmp lds aas jnp pop sti sti insl je cmp jg inc out dec shrb mov mov cmp je outsl into jb addr16 jge ds xor (bad) jle out push mov or xchg pop push pop pop xchg inc inc jge aaa fistp push daa setbe enter add mov ljmp rorl clc mov jo mov call cld sub cmp dec cmpsl movsl in repnz mov aas xchg mov call push in iret pop daa out data16 movsl gs jg mov bound jle mov or jg outsb cs lods insl sub sub stos imul jg push jmp pop test shrb adc pop scas das jns inc in outsl xor xor ljmp pop jns inc les jge push mov imul in repz aas jns sbb push jle lahf insb aas pop dec daa push pop jle mov sbb (bad) and aas add mov gs cld and dec jmp mov xlat mov fistp xor ret sbb scas mov add clc jg jbe pop dec aas in cmp mov push cmpsl faddp jg adc cmpsb mov pop bnd leave jg dec (bad) out mov push jg xor pop popa flds loopne or pusha push bound scas es jg adc in cmpsl lret jg push jbe and hlt xor insb aaa inc pusha mov inc pop scas subl sub rcrl mov inc mov push push lret aam adc jg xchg pop repz sar jg pop xlat ljmp jg mov mov mov nop ret and or pop cld (bad) push cmc jg mov das mov cmp xchg mov xor xchg inc insb add fbld fnstsw popf test cmp and mov lcall inc pop push or dec xchg dec clc xlat cmpl daa push mov pop cwtl adc sbb xchg inc (bad) ficomp test mov js and mov (bad) mov je test xchg jae lock jmp adc bound scas jg and fdivl xorl lds jg hlt pop xchg js dec inc mov js or out fwait xchg fdivrl sub adc xchg fisttp jbe (bad) pushl jg movsl sub jg lods jbe out addr16 mov dec int mov xchg adc jo bnd cmpsb je aas cld jg movsb js jbe dec pop sti setg sti dec sbb push pusha aas jg xchg popa ljmp imul data16 or lods push cwtl xchg xchg jg test jne fwait popa jno hlt jg sub or daa je aam ja adcl xor inc ljmp aas inc and hlt fldt stos jae ret jmp pusha xchg pop push push in mov ja sarl les fstpl (bad) adc push incl jg pop mov jg inc mov arpl adc out cmp pop gs popf mov mov xchg sbb insl mov cli fistpl and out pop das cmpsb dec xchg lea mov cwtl sub (bad) jg (bad) gs xchg and lcall mov jl pop or mov mov notb adc mov aam add shrl (bad) xor pop cmp jns mov push and inc mov jg inc cmpsl pusha push mov hlt fbstp fdivrs inc jg dec sbbl sub enter pop (bad) push mov popa pop sbb push icebp not xor pop mov mov jl jecxz nop mov dec pop jne and dec mov loopne fiaddl push jg (bad) lea jl lret aas sahf add rolb loope mov subl add dec (bad) jg xor cmpsl jg aaa or lea pop ficompl push jnp (bad) out sarb cmpsb jae out bnd pushf mov xchg inc xor inc addr16 (bad) mov pop jg lcall jg cmp sbb jg out fistpl test leave and (bad) insl xchg add pushf push (bad) loop div jg movsb xchg (bad) incl push inc outsl gs adcl es sarb mov iret lret xchg lods jg mov cmp and push mov lock gs sbb jg push dec cli xor pop push out out jg fmulp fcoms inc leave aas adc inc mov cld arpl and add pop int pop jno (bad) push xchg cs mov or jg inc push push out jg cmp add fwait sbb pop jg xchg xor iret jg mov adc jle jnp out inc pop rcrb test cwtl test dec (bad) and repz mov xchg add and insb cmpsb mov aad movb fiaddl leave cwtl out inc jg xchg push lret scas loopne icebp gs inc push jg sbb mov mov out pop lea shr pop sbbl std jg fadd mov jg xchg mov cmc add inc jg insl shrl scas in repnz scas out xchg pop lods xchg pop jmp and mov fwait icebp dec not push adc mov aas pop stos rcrb cwtl das add mov adc fwait jg lds mov ljmp ficompl iret mov addr16 fnstsw jge cmp pop jbe lds ss pop es jecxz add push fcmovne (bad) into cmp cmp mov inc inc out pop jg stos sahf and push and lods jo je push mov sub ja,pn fcoms sub aas xchg mov (bad) xchg push jg mov sbb pop cltd push sub mov adc lock pop in jno test inc inc jg dec mov mov lods xchg inc popf scas mov cmpsl push push sbb nop into lds lock pop loope das test lahf pop not adc into jg stc pop dec and dec push frndint add (bad) fstpt loopne push in sbb stos mov and xchg mov xor mov cmp and sub jg dec je push sahf sarb fldcw nop (bad) dec daa pushl outsl dec fldl add sub pop mov add in dec bound mov addr16 pop pop stos lea jg pop cmc cwtl lods sub and inc xor jg (bad) sbb xchg jbe dec or rcrb jg xchg lcall add lret push xchg in inc (bad) push mov jg sbb call and adc sbb js sti test cmp mov lcall sbb fnop inc mov cmp mov pop pop subps lds loopne pushf (bad) aas push xchg bound adc repnz mov dec sbb (bad) xor cmp pushf xor xor test aad lock jg push mov jg clc sbbl lret jg mov nop add aad xor sti leave adc loopne mov push dec inc arpl add int3 scas sub cmpsb jg je or ret js lret mov aas push or push jg pushl xchg dec out mov or cs and outsb jbe jns xor adc mov jg shr inc push call xorb lock jg xchg lds ret inc cwtl mov pop fs mov xor jecxz add outsb popa jg mov xchg push (bad) into inc lret ljmp push jae idivl adc pop jg das popl or inc jg push and sbb in pop sbb add mov push mov xchg add sbb sbb (bad) clc cli stc (bad) jg popa aad push dec enter dec xchg lcall lods push and jg lahf lods mov aas mov sbb inc xor jg mov adc jg in (bad) cmc fiadd ret mov aad jg adc or sbb arpl cwtl es ds lret mov adc jg je shrl cltd xchg js cld xchg sub mov xor in out je sbb jg mov scas cmc mov movsl int clc push jg mov xchg aaa inc dec test mov and adc outsb inc repz pop cmp pop (bad) cli jg sbb xchg lock jg cmp pop sbb leave mov std xlat dec dec test inc movsb add and cmpsb sub jmp xchg test imul stc pop fdivrs jno lods sbb jg sub stc pop imul mov push jg cmp mov xlat add dec inc and or mov movl push sub push mov jg sbb jne jg jmp mov and sti and add mov add fiaddl stos push dec xor inc mov addr16 pop push sbb dec jno xchg dec in outsl and xor dec sti cmpsl cld mov ds mov sbb mov pop inc adc mov jns in or aaa mov test pop ja fildll fimul js mov sti inc dec popa fdivrl xchg out mov sub inc push inc mov mov mov insl out int js or fmuls inc push push arpl (bad) push xor dec jmp pushf jbe cmp movl sbb mov out ja jg mov dec fwait add insl xchg cmpsb jae cld adc aas push popl or (bad) adc sub adc repz movsl pop (bad) rolb jg ret pop push hlt mov dec lret pop in inc dec jnp insb dec pop jg scas hlt adc inc dec repz enter loopne stos cmp fcomi ja repnz jg mov (bad) jb roll mov outsl scas cmc ret in (bad) data16 mov dec jge mov aad cwtl rcr leave jg pop xor push ret pop bound mov jg cwtl push in push inc cmpl imul repnz sbb jg mov xchg adc adc mov aas xor je jo and mov adc cmp cmp mov int3 pop or iret rcl inc repz fisubrl xchg jg mov ret adc (bad) das jg xchg movsl pop dec jg push fisubl jg pop loope mov mov add cmp jno (bad) cmp xor jmp xor cltd adc (bad) mov xor int3 push aas sar jne out orl mov mov scas sub mov mov lods sub jg sbb scas sahf jg or jns jno mov pop ja idivl (bad) jne xor jo jg cmp addb mov or xor sbb mov ljmp hlt add leave dec sub sbb aad int3 dec push clc jg or add mov addr16 jecxz popf jg jb pusha mov js cli dec fisttp jg (bad) fldl fisubr and mov push lahf jg fild imul inc cmp je mov xchg inc jg ret jb pushf adc mov push mov fsubs mov aam aas xor jl stos cmovge cmpsb fnstsw data16 mov aaa (bad) dec aas add cld stc sub mov mov sti and imul dec mov jg in push and daa and fisubrl in jg inc data16 xchg bound push adc jl inc and sarl dec inc jg ss push sub aas mov (bad) inc jg shlb cmp jg dec mov ja inc cmc mov cmp dec negb fldenv bound push loope push xchg pop add ja pop lea (bad) push stc dec jb dec pop scas mov imul mov dec jo out lods loopne test xchg divl mov xor pop mov inc adc scas and jb (bad) jns mov out jg dec ret cmp jl push xor jg xchg ret pop xchg out insb mov sbb (bad) sub pop je sub lock xorb cmp push ror lds jg sub sti mov ficomp outsb std lret insb js pop or inc outsl adc dec jg ret ret jg rorb imul xchg and jmp sbb aas ret pusha (bad) addr16 les sbb lahf or add add xor shlb sub mov sub push adc negb cmp jg lahf data16 cmp nop jbe or push je sbb pop int3 pop (bad) and push pop call jg (bad) inc push je sti test adc dec pop adc aad mulb (bad) mov push mov lods fdivs in jmp icebp cmpb cmp sbb mov inc pop inc in pop sti jp cmp xchg sub jg ror push add pop or xor xchg inc pop mov mov rcrb inc dec mov pop cld jg dec jno mov (bad) in mov dec push rorb pop sbb and insb mov jne sti push xchg push nop jg jbe mov mov insb jg jno dec and imul mov (bad) or (bad) cmc popa jb stos mov push mov notl push pop leave sub (bad) icebp add out arpl mov popf jg mov repz add out sub call and inc jge test inc out shrl add jnp inc xchg mov push scas movl les (bad) pop add addr16 inc adcb dec cli int dec ds sarb xchg xchg push addr16 nop cld xchg ret (bad) jg sub jae or fs inc neg sbb insl stos push popf mov xchg pop or jae out jg xchg mov repz add xchg mov sahf cs popf push pop stc aas mov or mov decl sub mov pop sbb test inc pop std lret out pushf jg jbe mov jle fwait out outsb aad xchg dec jg js inc dec sub jg and xor xchg jg pushf jne ds fcompl ja cli sbb stos dec inc push and lahf aam lock jg push clc lcall arpl pushf jg sbb cmc mov (bad) cmp pop mov sub xchg aam jnp add lock pop jg test out or js sti imul (bad) decl icebp loop (bad) leave jg jae pop sahf je popf jg movsl movsb cmp in sbb jnp mov stc xlat cltd jg scas push dec fidiv setge pusha pop or aam adc in fsubl testl mov jl dec outsl call mov inc mov fist pop xor (bad) outsl jg ljmp mov lret int3 jle jg mov scas in repz cmp les ss js and add xor cltd adc fstpt sbb enter pop std cmpsb inc lret fnstsw jo aas jg call mov (bad) pushf stc outsl mov push dec inc mov mov jns call enter aam (bad) jp int3 icebp inc int adc or in cmpsb repnz outsl mov fwait jnp lock mov out (bad) aam aaa jg mov pusha loop aas mov addr16 fsubrl (bad) pop mov cwtl inc stos aas rcl jg out mov mov rcrl mov xchg lock mov (bad) jns mov popa fildl pop repnz lds imul push xor jle lock and cs or mov jbe xchg push (bad) repz mov cli (bad) int outsb aad lahf inc dec mov stos fisubrl movsl mov mov dec out push popf loope add inc lea pusha jmp gs daa xor adc push lret pop sahf cmp rcrl mov out fnop mov add nop rolb mov out out scas add std rorb push ret push test mov les mov (bad) js loop cld mov or jno inc repnz xor divb ja fisub out xchg cs sarb lods cld sub test mov je jbe bound jp inc xlat mov sub cmp pop dec or xor stos dec xor fisub adc fdiv and inc push outsl sbb add mov cmpsl mov notl out dec push inc aam sub dec lds adcl and push mov push ret cwtl loope cmp pop xor cltd adc stc pushf (bad) jne fsub jno push and in shl cmc push mov sub push mov dec jmp shr push xchg pop sub mov rcrl clc dec cmp or or fcomip inc shl dec add inc or jbe xchg popa mov (bad) mov fcomps jecxz arpl (bad) in pop (bad) and lods xor push push fstl fs add mov jg jnp push (bad) inc into std loop (bad) jmp cs mov (bad) fstps jns lret outsb frstor or add add jg push lea jae push call aad mov test shl jmp push lea jae jmp dec inc not pushf pusha mov inc ror rcr xchg bsf movsbw mov sbb pusha or rol mov clc cmp jmp lea jle pusha movl jmp mov push mov inc lcall outsb rcrb es push mov adc iret loopne nop pop push data16 inc mov rcll fadds shrl jl jmp (bad) sti mov jle jo in cltd loopne ret (bad) lcall and or push sahf sub call notb jne fucomip dec ret push repz sbbb push xor into jnp jmp and xor scas lods xchg insb loopne enter lret loopne sbb xchg push jb or lock pop (bad) push shr jmp aad push pushl sbb dec into insl into push push inc pop pop xchg dec popa imul and popf movsl jecxz loope (bad) outsb xor mov insl ljmp jl and sar pushf mov push dec and inc lea lcall pushw loopne adc push icebp push xchg cwtl pop xchg sbb adc cmp cmp pop lret jae mov add push or inc test or scas out mov fbld dec fwait mov mov xchg jns mov lods std call cmc mov daa push inc fnstcw out xor xchg aas cmpsb in and sbb xor mov out lods test mov add clc call movsl dec jmp dec push inc fld xor add or flds or mov mov fxam mov push pop cltd push lcall decl stc push sti les nop jno cmp outsb cld pop data16 xor xor imul cmpsb decl bound inc fwait imul mov fstpl mov je xor add pop xor into sub enter mov cmp jbe aam lds mov fs push push iret in rorb push pop jo push dec jmp push movl jmp push xor jmp or call lea je bt pusha pusha cmp movl call lea jle pushf movl pushf call jmp push lea jae pusha rcr mov inc mov push mov test cmc xor jmp fmull inc cltd fs pop insl cmc add shlb fwait sub jb ja jns fucomi jg repnz mov or call out leave lods setno jo cwtl mov lea pop or ljmp adc mov sbb mov mov (bad) xor mov adc or stos inc out jmp loope xlat cs xor sub (bad) adc clc cmp fidivrl cwtl xchg cmp decl and pop in jae negl jmp insb insb pop popa fwait lret jne sub insl mov addr16 pop orb mov faddl pop popf xor mov inc mov (bad) or pop (bad) (bad) xchg rclb mov andl int jne lods movl add or push int (bad) sbb test cwtl jle or (bad) jmp inc mov lock std std popl dec ret jp mov lea fs pushf mov pop add xor sub mov shrl dec dec push and aam pop leave add in sub test inc std cltd and dec fs inc sbb in xchg push jbe hlt xchg pop mov lds test fldl xor inc add fdiv pop jg and (bad) jae cmp ljmp mov push insl bound (bad) lods imull in mov lock xlat into sti and xlat shlb mov repz pusha mov je inc or sub sub adc mov out mov mov pop xor ss (bad) lods aaa fild mov sub pop xchg xor movl lock push jmp daa fsubs dec push inc leave aad sbbb mov shl mov push dec call jmp mov outsl push nop int3 outsl or ret jno bound cwtl jbe push cmpsb dec mov ss mov ficom loopne pop hlt push lods mov dec and dec xchg inc pushf adc cmp movsb xchg sbb mov mov mov loope test stos (bad) scas shlb sbb xchg sarl or xchg js mov lret xor sbb and mov popa push mov int3 and out pop rcll pop test cmp outsb movsb cmp adc mov pusha xchg jg sbb cli add stos dec and mov out adc and pop and sub mov call lea je push cmp push lea je pusha push lea jmp jmp movl movl pusha jmp pushf mov movsbw pushl mov lea mov lea pop mov push pusha call push pushf pusha lea call pushf pushl mov bt sub jmp xchg push movl call jmp clc sub bt pushl pushf movl cmp movb push pusha jmp or pushf push lea je pushf cmp lea push pushf pushf pushl ret mov jmp fsubp sub push push inc add pop (bad) (bad) stc xchg mov and and or fidivr mov call rcrl testb xchg (bad) sbb mov (bad) in adcb push outsb fstps mov mov (bad) movsb xor add push aas xchg lds add stos mov addr16 mov out out call mov movsb lds inc stos icebp jnp mov xchg leave and mov xor mov js adc xchg shr mov xchg in xchg orb xor loop (bad) in js dec mov mov and lods les daa lret pop mov stos mov push dec int3 lods fldt in jae xor (bad) (bad) jae push imul sti or xor mov push inc sub outsl jno mov cmpl mov js xchg sbb jae (bad) mov cwtl xor push ja adc lret xchg loop cmc insb mov add cltd jmp outsl jns pusha mov jne inc add jnp mov insl mov mov (bad) ja mov stos clc xor divl cmpsl aam repnz loop stos pop int ds or bound (bad) out push daa or mov loopne addr16 pop fbld aaa and add es jmp xchg out mov jmp and jge shll add dec fnsave cli xorl pop fdivl xor xchg rcrb lods (bad) jbe cld pop scas sbb (bad) std insl push es lods fnsave add mov xor dec mov outsl lods scas xor stc decb jg mov push scas test fs int3 xor dec rorb repz les ja leave stos (bad) sub inc arpl mov sub dec fnstenv pop stos mov sbb fisubl stc adc pop subl dec push mov dec jmp push push push inc push xor cs insb add dec mov xor movsb orl jge adc sub (bad) sti enter js xlat sbb rcrl repz and imul push insl test xor jns mov cs (bad) jl cmpsb pop inc out cmp andl movb cmpl inc push daa pop int push pop rol inc or lods jb pop (bad) sub cmpsb test std push mov jb mov stos aas push push inc lret cmp or mov cwtl push sbb clc (bad) push lahf imull mov push js daa pop sbb pop xchg ret and xchg inc in pusha push add dec popa cmp test or into scas mov out cmp mov notl out (bad) mov mov inc push xchg leave mov pop xchg inc js xchg or outsb adc loop aaa xor mov imul rol repz and pop (bad) adc outsl enter (bad) fstps dec or pusha dec loop insb arpl sti pop push push inc sub push and aaa and sub mov test roll add insl pop xlat pop pusha insl ljmp jecxz insb xchg inc jno enter bound mov push pop and test sub fist mov xor sbb push sbb int sbb mov lods insl ret rcrl gs or jl mov leave movsb pop xchg nop repnz sbb out inc lock cmpsb dec jbe sarl add sub enter mov daa jo aam das mov jmp out inc mov test sub adc sti sub xor ficompl mov mov cwtl pop jle push mov or pop add movb stos movb movb push lea jmp jmp mov lods pusha pushf movw not movw call rep pop not pushf pushf mov push push pushl lea jmp sahf mov js jg dec sub js pushf cs pop icebp push std inc xor jbe jmp jge ja pop ret sbb data16 add jae cmp in dec lock xor xor jg,pt mov add movsl scas inc mov dec (bad) mov add pop dec add inc pop inc pop idivl ds insb jbe int push cmpb test movsb mov (bad) and xor mov scas out addr16 call mov push xor jns lods movsl jle fs outsl sbb or sub mov adc std mov gs mov sbb ss gs pop stos lcall sahf fstpt ret xchg sub int fdivrl inc rcrl push imul inc adc jge add ss prefetch or dec or adc addr16 jae sub jp (bad) jns or or inc push mov les out addl add pop xor lahf push jg add mov dec push fnstenv sar sub add sub mov lahf (bad) insl sbb mov pusha jl js sub jl push cmp inc pushl (bad) fwait (bad) xchg imul mov mov (bad) push pop std int out mov inc sub lcall sub fimull in pushf push int mov sbb pop jge fnstsw scas add cmp cmc or js dec and in data16 outsl add pop mov add adc mov ror lret push mov xchg into sub dec data16 outsl cld rol stc push (bad) cld sbbb dec dec rcrb incb gs adc jg mov mov int jbe mov imul sahf add pop (bad) out mov fwait inc addr16 xchg jp lret popa (bad) addr16 push sahf icebp faddl push sbb decb mov bound push aad xchg add mov je pop inc in in jnp jno sub pusha sbb jb jae js and inc cmc inc in xchg dec (bad) nop into pop (bad) pop rcrl les push adc xor repz daa jne repnz cmp add cltd gs js jnp rolb xchg (bad) out and push movsl ds cli (bad) pop je pop std pop outsl int out jbe cmp in (bad) sub mov fsubr in stos cmp insl xchg cld ja aaa mov ss test push cmp xchg lret adc sti mov rcll (bad) dec ds aas js loope push (bad) jb jle pop push push sbb iret pop mov int mov movsl mov fwait cmp or jbe mov aas ljmp fidivl into insb sti dec dec (bad) mov dec mov pop enter inc aas repz adc movsb or insl or mov jnp imul pop xchg incb ss dec add sbb adc outsl or and pop insb jecxz xchg jp sbb mov pop xchg xchg push pop xor aad jl into ljmp fisubrl sbb std push dec cld xchg cmp fstpt les inc aad pusha addr16 jge sub ret in test pop pop sbb decb xor add inc fsubl add sub repz sbb mov sub insl in sbb icebp fdivrl lea xchg jae cs pusha daa dec out jl dec popf outsl js orl mov pop mov jmp outsb add push out sbb je jmp jo ds lret (bad) mov inc ret xchg fstps sbb dec repz scas sub dec jg dec gs aas je scas out je jo fisub sub stos mov cwtl adc sbb jno add mov outsb push mov mov into jno cli mov dec lea push sbb ds mov mov jb or and into outsl push push fstl mov and sub scas xchg mov pop jg jl add notl in insl addr16 jno xor (bad) (bad) pop fwait sbb or addr16 shrb outsb and (bad) mov sbb (bad) pop sub and (bad) pop lods mov dec sbb cmp jae add xor add mov cmp mov bswap add pop lods loop inc pop (bad) lods outsb (bad) (bad) ja xchg add dec rcrb pop and ret jecxz push add sbb dec push test into scas inc inc loope stos xlat ja or sbb pop push inc cmp addr16 leave dec add ljmp pop (bad) sub jns pop call popf xchg in cs pop and (bad) xor lods mov sub add jae divb ds inc pop jge jo jns gs xor inc dec cmp mov cmp mov loopne jle xor xor add jo mov jg in sub out inc mov pushf das imul inc xor xor add xor outsl push aaa movsl add inc into mov add mov fimul das imul pop jbe or fsin int popf push cwtl ja fmull or hlt (bad) insb lret loop mov stc std xor movsb jle roll dec push sbb jo ds popf cltd inc jae ret mov jge pop fimul dec (bad) cmc mov cs mov inc push pandn add cmp insb pop lods add add ret cmp popf adc (bad) dec or mov jmp scas dec sbb outsl mov inc xor std jg or cmpsl icebp add pop hlt cmc test xchg jl jno inc jns daa inc mov popa mov scas (bad) cmp sub (bad) loop outsb nop shrb mov mov icebp jb notl xlat push ljmp sbb test cli adc je leave jnp fsubs add mov hlt pop repz jp lret mov and add adc push xchg out mov jns inc cli aam outsl in cmc addb push test inc (bad) mov adc mov sti add inc addr16 stos insl insl sbb loop push mov fucom push jno (bad) cmpsl loop pop push mov jbe je sar cmp add pop adc lods xor ja mov add cmp sarl inc lret inc pop xor ficomp push jg bswap sti sbb jg push mov sar cmc sbbl ret push bound inc pop mov test mov (bad) jl int3 push jge mov into std std jne clc aas push or xor dec or popf in push jp addr16 pop ds scas sbb xchg icebp add sub sahf fimull test xor pop aas scas rolb std sahf call cltd push outsl jmp add orl jae pop pop rorl jecxz test add jle incl jmp cmc test mov sub insl push lods mov sar pop pop mov jnp cmp sub jo cmp (bad) xor mov sahf pop xchg ss xchg pop pop sbbl xchg mov jle (bad) jnp push cmp pop fiadd inc mov or incb mov mov pop add out push cld sbb dec sarb xor dec jne mov lcall dec in cmc test (bad) jnp pushf cwtl jo shl pop xor dec or sub push xor inc mov sbb sub or push push pop push das jge,pt cmpsl inc lea test inc jnp gs xchg add cmp inc jl inc pop jns leave and (bad) mov adc aad (bad) nop pop lcall pop sarb addr16 mov cmpsl jns mov ds jmp xor jp add int3 outsb aam (bad) pop fcompl fcomps inc pusha and pop icebp scas pop jnp cmp jns mov push sub adc or shl sub mov add xor jno (bad) (bad) inc xchg jp sbb test fld sbb imul mov inc sub gs mov dec fcompl stc inc test (bad) cld add sub xchg xor jl pop nop dec insl add or sbb pop insb cmp jl pop (bad) gs lods dec inc sub push adc pop or lret shrb rclb repz jb sub (bad) lret out sbb push sbb pop nopl cld cmp xchg inc daa (bad) fisubl fidivl (bad) sti mov stos sbb xor and fisttpll (bad) hlt cmp push push dec or ds imul in sub mov sub mov cli (bad) mov push cmp adc jbe addr16 imul inc pusha stos testl inc cmp push push sbb pushf clc push imul push repnz mov mov inc cld add xchg or pop nop sbb test mov es push pop lods jno loope mov (bad) pop mov jne gs insb arpl xorl xor xor pop mov addr16 dec fidivl push cwtl push cmpb fdivrl pop push or imul inc sahf int xor pop push jle pop mov and inc outsl pop inc addr16 pop pop pop inc ret add scas ror jns add in enter jge std adc imul pushl addl int3 jl dec add pusha jae gs jns sahf leave push sbb jnp pop cmp pop dec fisub push inc outsb fdivr pop lret lcall ror arpl lret xchg push jecxz in je cmp ja mov in xchg (bad) jecxz sub push aaa push inc les (bad) xchg sar push movsb jb loop add andl ja sbb add sub mov outsl in loop gs in mov fs in outsb movb cli xchg cmpsl mov add imul enter xor aaa mov pop (bad) mov repz aaa js bound aas push push sahf repnz fs dec test stc pop or dec jne dec inc test loope push and (bad) pushf inc jae (bad) add mov loop mov imul in jge rolb dec cld sub outsl jne addb nop loop cmp xchg pop sbb add out movsb mov out jp data16 jge mov xchg mov mov add je lret arpl push jecxz dec jg gs xchg pop pushf xlat (bad) repnz les or fcomps push dec mov cltd roll (bad) repz das daa push pushl xchg inc cmc cmp add mov inc enter or rclb sahf jne and rclb call add repnz xor imul mov cmp js dec int3 pop pop xchg ffree dec addr16 xchg in popf cmpsl mov and and lret jno xlat and lds ss lds cmp xchg push add jg jl pop jp xor lds mov iret (bad) xchg xor cld inc pop inc mov add ja mov mov pop pop cmp jl js sbb xor adc pop sub push jb (bad) fimul sti clc sbb imul add push add gs inc scas scas cmpsl bound add jno mov cmp sbb add sar inc loope push jmp or add repz in fdiv repnz lcall add bound add inc push pop gs iret cmp mulb insb mov sbb push ds sub mov or or mov aas data16 scas andl and inc data16 dec out jl aas fucom aas inc lahf aas xchg jle sbb jae out pop outsl jecxz outsl es outsl arpl xor gs pusha jl and sub jb aaa je lahf in cmp jp mov pop std jns mov scas bound sub lods daa jbe xor and ljmp and dec jle pop pop cmc jne pop arpl jg pop or fs loopne negl jno dec in popa pop pop pop pop xor insl in jnp jbe nop out jns sub push insl pop sub pop imul out jnp pop sub addr16 jb cmc addr16 push gs jnp fsubrl dec jle aaa jae imul ja jge imul jnp jp sub nop in gs dec arpl push insl dec jno pop dec jmp pushw dec bound pop cli sbb inc inc mov mov jb dec fsubrl jae inc das inc cmp pop jne push jl dec push int3 push aaa data16 pop imul cld lahf cwtl pusha jb in dec pop js pop mov jle cmc gs lcall inc jb es cmp fcomps cs ja pop push or pop push sub push pop jno pop fdivrs pop or fsubrs pop sbb jne dec xor mov cmc ss add sub pop cmc jp pop jbe xchg js mov repnz imul popa movsl push jb ss outsl popa pop insb cli add jnp loope daa outsb add stc dec rorl add inc pop adcl data16 add mov push nop xchg les in bound xchg in ss push aas or lock inc lret fcmovu insb lds icebp js mov push imul jbe loop orl inc inc (bad) push sbb lret jno lds leave iret in outsl iret mov aas sbbb dec mov hlt jecxz push cmp iret mov cmp xchg cmpsb lcall cmpsb (bad) push pop ror enter sub add into sti lret inc inc dec imul lea xchg lret and pop gs cmp push addb mov (bad) stos mov jl ror xchg cmpsl inc negb push inc xchg and sub lods rclb push jl sub mov shll sbb sub in dec jge jl arpl scas cld cli lods imul mov cmpb daa push lods mov jnp les jb inc scas jp pop and mov insb pusha bound (bad) push lcall mov xor fsubrl mov jp orl gs ljmp sbb push in lret lcall in lret or movsl push imul lahf lcall incl adc jecxz (bad) gs (bad) (bad) cmp jle jg sbb sar aas enter lds jae (bad) int3 cmp lods jle ja push mov jge mov jbe mov andl jp push outsl insl and cli add cmp ljmp cmp inc pop ljmp fldt jb sar jae ficomp lcall insb cmpsl and hlt add inc pop pop sbb outsl repz loop push out test ss mov outsl insl inc cmc xchg lock gs (bad) aaa sub jge (bad) gs cmpsl pop loope outsb call jno mov ja pop mov fidivl xchg mov sarl les cmpsl mov xor push mov lcall (bad) pushf adc inc sub jnp ret pop lds push jb jmp inc ljmp aas and repz and mov icebp ret in stos lds gs add dec repnz and outsl mov mov and fmulp lea outsb inc and add loopne mov fwait sbb loopne cmp sahf jle add jle arpl add xlat adc inc and lahf xchg jae cmp pop jbe dec outsb dec sbb std inc fldl ja les enter aas int3 aad scas mov rorb fbstp add int3 pop stos (bad) pop into insl inc dec mov mov ficoml push or xchg cmpsb rcrl push xchg jge jb pop cmp bound mov fistl push ja mov sub dec inc call cmp or ja aas push fst ja push insl adcl pop add xchg push add nop cwtl push adc lret sahf outsb mov mov jle jmp push inc xor xchg adc sub jb jno add fldl pop icebp out stos xor std cmp ficompl sbb aad (bad) jp aaa negb adc dec adc lods ja adc add mov test outsb mov out dec shll add sub pop adc mov add mov ret fsubrl mov int lret jge add dec inc std ss fistpll or jne mov fdivrs push pop das cmpsl add fcomip fs fs pop mov add xor dec notb jp cmpsb sub stc outsl add sbb (bad) mov aad cmc lods jae sti cmp dec pop mov ja mov jmp dec cli push and inc bound (bad) push les lret or les sub into subl or daa and mov xchg cwtl paddsw push fmull jno out jmp cld adc jle push pextrw mov loope out lds inc mov push cmp fisubrl insb sbb sub clc pop das and pop (bad) pop in rcr inc (bad) pop and das pop movsb jmp or ja mov (bad) out jmp jb stos addr16 (bad) ljmp xchg pop mov pushf push daa sbb cmpl jg mov pop fcmove subl and jno mov dec lret jne cli outsl pop stos dec cmp pop fisubr mov aad pop arpl data16 inc push or ds (bad) mov mov jbe pop (bad) in leave push add mov rolb cwtl add (bad) lds sti pop jnp into sarl fiaddl pop test jle inc inc nop int mov addr16 pop dec add or and fldl push js add movsb inc dec xchg adc inc sbb push hlt or nop xlat jb rol bnd ret (bad) negb aad jge ret dec insb adc ljmp inc cwtl jns stos cmp in ljmp fisubl stc jnp (bad) xor or jae mov scas mov push pop jge les enter ljmp jg jle add in inc dec ljmp addr16 mov dec in dec jg gs scas adc push jbe addr16 fs loop lret cmpsl imul (bad) adc out jo fcoml xor ja fsubrl imul pop push and push in movsl pushf xor push test sub aas gs cmpsb fsubs add mov pop je mov adc cld push mov (bad) loopne out hlt push xchg inc and int fiaddl jle jne stos insl sbb outsl push or pop mov add inc ret dec adc xor sarl fisubr insl sbbb imul mov test push repz mov jge in ja shl cmp inc ror inc jmp mov daa jl cmp lcall cld xchg les ss mov jmp ja sbb or jnp pop dec in sub or fldt or pop sub jge,pn insb xorl in jle xchg jbe pop inc outsl inc addr16 push cmp bound into dec xacquire (bad) adc ffree ss adc push mov sbb jae add jno and out stos and mov xchg (bad) pusha jp ret jecxz ss cmp pop mov xchg xchg aas xlat inc push or insl and inc xchg je push gs cmp (bad) jmp dec xorl mov (bad) int imul loop push add pop daa push out lock sbb mov out mov jno ja mov lea xor mov ds rcrl inc push add ljmp int dec nop and insb pop sbb add ret lea xchg enter insb jge cs cs repnz shrb push (bad) fnstcw sbb push (bad) into imul mov les add insl add sarb jnp xchg pop lretw hlt sahf mov in jg ljmp cmp ret lods fwait pop pop inc popf faddl mov push ret xchg (bad) mov (bad) aam mov mov jae or rclb mov add add mov addb push add fwait sbb mov (bad) xchg repz xchg fstpt pushf ss push add decb push jae outsl (bad) (bad) icebp ss push and gs mov aas xchg mov lret aaa sbb (bad) ss loop push xchg jbe jg xor mov negb sbb insb mov dec inc imul jb push or push dec adc je test cwtl and mov jns or fidiv cmpsl mov jbe jmp int3 xchg push inc dec stos outsl xor imul sar push gs (bad) pop out sbb adc std mov mov mov jae jl repnz add clc adc cs cld jns std adc push iret xchg jle jns cmp scas mov iret xchg fs inc cli mov cvtdq2ps sub pop dec lea rorl movsl pop dec add inc ret pop aaa addr16 xor gs jmp stos sub mov sbb cs leave push inc sbb jl scas cmp sti insb mov jg outsl aas incb jns mov push sub cmp enter jo xor in std jmp cli insb pop and ljmp push popa outsb cli mov mov jcxz fwait aad imul repnz out or popf lds xchg mov call cltd mov ljmp aam (bad) stc aas (bad) iret in jp jge adc bound or ss push jno or dec out jo pop mov jae pushf clc pop sahf andl xor xor mov js ds push adc outsl sbb sub xchg push jb fdivrl xchg test push iret lret jbe pop addr16 add mov dec add imul (bad) cmc sub pop gs lret mov dec iret imul in scas (bad) xlat push jge idivb into pop popf sbb (bad) leave std mov xor test addr16 inc xor or pop enter cmp jbe sbb sub mov jle iret int3 sbb jmp adc lahf mov imul cltd stos popf mov mov jle sbb aaa jnp stos add (bad) (bad) mov mov push cld repz fwait jno xor jl outsl into (bad) hlt dec addr16 add lcall (bad) lods mov jno fidivrl xchg lret gs jne cmp cli iret push jmp ret jae ficom rolb pop jmp pop daa xor ror sub jl frstor add jbe mov adc mov rcrb lret subb sbb pop pop bound (bad) mov fbstp jl sub inc das inc jae nopl mov mov push movsl lret (bad) sub jno xlat cld into push bound ja jne mov cmp aas (bad) dec push mov mov lock movsl xchg aaa sbb jmp mov sub cmp jmp xor inc jo sbbl pushf stos out int3 pop lock in stos std jle add andb inc push addr16 ret rep xor movsb mov jl gs (bad) dec (bad) pop nop adc das insl or jno imul movsl fisub push jge lret mov icebp repnz cmp ds neg das sahf add mov pushf bound gs fldl ret lcall jg jp sbb rorb mov gs scas pushfw pop jge xchg insb daa loop and je ja scas mov imul fs inc mov xchg jecxz jbe addr16 leave sub pop andl loop jb lahf dec push mov insl sarl jnp push repz sbbl cmp sub and imul or iret or into inc ds iret out pop jl aas gs sahf cld sub pop sbb popa lret sub das fcmove inc insb jne lret decb cmp ret cmp jmp add cli xor jge mov orb and inc inc (bad) js out inc push les jbe sbb aad fwait jns pushf push inc cwtl insb sbb aas adc cmp mov icebp jbe pop jg or push fildl pop test subl push and jle pop scas jnp jne fidivl push mov cmpsb mov push lcall shr ds in cmp mov mov dec xchg aad negl js mov rcr outsl adc out lea push sub cmp sbb bound or ficompl lcall mov or mov out jp sub pop shll in cli daa pop jb jbe mov fnsave in jge mov xchg add xor fsts mov nop sub mov xor pop pop mov addl test (bad) ljmp xor mov div stos fidivr sti mov faddl sub jno out outsb xchg lcall fsts push jl sub (bad) sti or sub cmp iret or cltd outsb stc mov add or sbbl jmp repz fbstp pop jbe pop subl daa inc pop jne into je sub add or inc sbb imul adc cld mov push inc adc (bad) mov and jne dec adc lods imul inc cwtl jle call aam outsl mov bnd jns outsb daa jbe addr16 (bad) sbb sbb scas inc leave sbbl repnz ds pop mov add cmpsb pushf xor mov decb inc pop ror adc cmp xchg mov fdivl cli jle sub gs repz idivl dec imul mov loop (bad) sbb sub inc sbbl xor (bad) insb sahf in into or xchg pop push ja jge xchg das sahf test fiadd insl ds mov sbb cli mov jb shrb test xor jl pop outsb or mov mov push pop inc aad inc dec pop pop out xchg push jo sahf (bad) mov add rol add in jge popa inc mov es insl mov ss ret mov sub mov jae jns mov outsl and cmc xlat lahf outsl jno jp xor ljmp mov fidivl add dec popl sbb cwtl add inc mov sub pop mov (bad) jbe (bad) jmp les pop aaa sahf jnp in jecxz (bad) addr16 dec repz lods jg loope ret jae movq jbe xchg sub scas mov ja outsb pop gs cmc jmp inc mov js jnp and lea cwtl daa inc aaa sbb sub aam mov clc addb or dec cmp sub gs sub sub addr16 dec mov in cmp out cmp rcrl je,pt xor (bad) mov (bad) fs call mov jge sahf push (bad) dec pop test stc jg leave sbb in jb sbb cmc sub ss cwtl pushf scas mov iret cmp jb cmc shr (bad) insb cmpsl clc push outsl fnstcw aas cmp xchg sarb jl xchg add add lods mov cli sti and pop aas dec (bad) cmp and sub (bad) pop add int3 pop add gs loope sub mov inc sub gs std addr16 adc cmpsl push push in sahf aam dec aas lcall push cmpsl jg (bad) or stc add lret jge adc pop out das dec icebp aas jbe jnp,pn ljmp mov cltd jmp lods fisttpll stos pop adc out mov insb aam push gs psraw inc lret ljmp adc outsb mov (bad) cwtl jne inc xchg stc pop sbb fwait lcall pop (bad) gs cwtl and popf jae,pt inc pop pop es cmp je mov mov in pop ljmp inc out push insl into adc popf (bad) icebp cmp mov add push ja loope inc (bad) (bad) inc insl fwait or mov scas icebp in gs mov pushf inc jno out imulb fimull push out ss mov fs cmp add sub pop xor xchg enter and xchg jo icebp sbb cld (bad) incb not sbb sarb fidivr sbb push stc mov dec inc fldenv ret ljmp outsl fimul fxch push pop push mov lea pop jae int xchg sub mov enter (bad) aas push jmp inc or insb mov pop lods aas cwtl or imul cmp popf into xchg sbb pop stos test pop mov (bad) mov pop mov xor push mov sbb daa lret iret mov jne mov scas out xchg ljmp (bad) ds inc pop clc stos jb sbb std rorl mov fdivr add jne xchg and push jp es aas fcoms jo popa lcall xor mov xchg xchg mov cmpsb out mov outsb mov addr16 loopne adc ds out (bad) stos pop inc aam and fisub inc subl cmp movsb and gs xlat inc mov out jb xor add or aas jns pop and (bad) int (bad) lods pop jne push call push (bad) xchg jnp je push fistpl jb cwtl xchg aad jp std stos or cmp lret pop inc gs ret inc add jecxz in fs sbb cmp mov mov jb push mov mov addr16 cli mov test jmp sbb in mov ret and xor pushf outsb jno aas (bad) lret mov mov sbb lcall xor test adc int3 popa jae mov pushf imul mov incb icebp in iret ss imul std mov enter jo or push les jbe mov addr16 imul xor mov push dec push jnp xchg outsb dec mov xor or sub pop lods (bad) (bad) aaa xchg popf mov arpl je,pn mov sbb fwait (bad) (bad) mov pop add hlt mov fwait and scas outsb aam jb gs jae jno lahf sub jle jmp lcall cmp add sti dec cmp and insb movsl popa pusha xor imul aam rcll pop sbb sbb dec es fs lcall xor mov dec (bad) inc (bad) gs outsb mov mov or call pop je fnstenv daa add in xchg js xchg into insb dec das sbb out std in mov js cmc imul mov aas repnz sub andl cmp ljmp in call cli popa sbb lods jle jnp push pop cli inc out sbb popf arpl pop sub jle dec iret ret pop push cmp dec aaa and js movl (bad) pop cmpsb inc cmc and mov pop dec gs ret outsb repnz aad sub jbe test es jae jnp jp add jge rclb cld adc cmc ret clc mov or push aaa insb fiaddl add jge mov cli add in cmp ss popf or pop xchg jge jne sahf mov dec (bad) cmc test repnz push incb dec insl aas or clc dec ljmp cmc leave dec push ljmp leave sbb xor mov mov mov xchg adc std pushf adc xchg and ss pop dec pop jbe jne inc xchg rcrl pusha jmp ds pop add popa jp adc jae add inc pop das roll aas push iret arpl dec je mov pop roll sub in xchg ret lock inc adc inc or imulb aad push xor xor fdivr cmp (bad) xchg pushf inc leave inc mov (bad) mov jl scas push mov into and cmp pushf add pop mov (bad) inc mov je shrb or dec xchg xchg or cmp es pop jp ss xorl (bad) jg jne and xchg popa and imul mov jbe xchg lret jno gs dec cmp mov js jns jne jno cmpsl int3 or and cmp lods jle pop lods int leave pop clc lock inc mov repz js stos insl (bad) mov pcmpeqb jnp imul je rorb sbb addr16 jns sbb ja lcall rorl leave ja inc lcall lods sahf pop pop and in stos pop (bad) inc xor cmp aaa sbb lahf mov sub and fwait jb jle shrb rorl sbb popf nop sbb ja xchg fiaddl in sbb pop pop fdiv push arpl mov inc xor lods pop mov pop aaa stc dec shrl inc hlt dec cmp mov jbe adc gs fdivr ret inc shlb rcl add and push pop sbb xor out idiv pusha (bad) mov sub test mov test lcall xchg ja ljmp (bad) call js cmp gs shrb mov mov cmp aas insl pop gs out ja ret data16 or add mov imul pop mov adc cmp or or in adc pop ja jmp add cld test sbb gs sarl imul push lea cmp push scas mov inc js daa xchg and push aaa fidivl popl mov add and faddl (bad) sbb imul mov inc dec adc test pop jae sbb mov mov mov repz jae mov int3 xorb adc (bad) push pushf jns or cmp fstps div xchg pop jp loop movsl test fcmove das pop jge gs pop mov push adc push addr16 aam cltd aas jb nop test stos fnop lds or mov jne insl jecxz das mov ja data16 gs push scas xchg pop push mov cli xchg fildll popa fs inc stos pop xchg repz out ret inc sbb stos divl movb pop xor jle sbb cwtl cmpsl stos lea das inc push mov ja,pn mov push cmp cs jle and jg jle daa loopne cmp in push call push xchg stos popf outsl dec sbb xor vpshlw mov jge andnps insb or cmp dec push jno jg xchg leave adc push or das movsl inc ficoml test cld in jae mov gs (bad) cld pop (bad) mov and mov iret adcb inc push in push insl pushf push es inc push push or jbe add decl repnz sbb push add lahf lock jne adc jno pop mov decb cmp push sbb dec jle sub out xor push test adc ret mov sbb jne pushf lock dec jnp aad lods push ja std jecxz mov ljmp lods in pop cmp ljmp enter js or es or xor scas gs pop (bad) dec les and inc cld fnstenv stos jg xor data16 rorl movsb jmp shrl movsl fpatan (bad) test push fstpl pop adc and out les test arpl push lcall dec pop cmpl ds dec add (bad) xchg imul mov fiadd imul push mov fmul add in push int adc gs jbe push jns,pt add lea rorb jb dec mov dec add cwtl adc pop cmp mov pop call ret hlt repnz mov insb repnz dec insl fstpl test pcmpeqb rcr inc out lcall imul mov mov movsb or in repnz rcl xor push jecxz mov cltd pushf outsb and arpl sti sub and in mov jl and lea mov call dec imul push push push cmpsb (bad) cmp mov addr16 inc je lahf pushf sbb sbb add rol aad cmpsl cmp pop adc scas xor add (bad) jne fwait cli les cmc popf push rorb sbb loopne sub sub pop mov fisub xchg dec or je movsb jnp out cmpsl sbb jp sbb sub mov pop cli ja sbb pop addr16 (bad) int sbb jno push inc stc mov mov roll cmp jns pop enter xor jae ss mov addr16 or mov lods jmp push aam push je or jl inc stos xchg mov cmc add loop movsb inc cmp sbb inc pushf gs push add cmp repnz jp adc out mov cmp mov jae fwait jecxz dec les xchg ja dec cli xor sbb dec in cmp mov adc iret (bad) xchg mov pop (bad) jno xchg and nop jb inc push pop mov mov adc cmpsb sahf mov (bad) enter lea xor out jnp pop (bad) ds loopne pop and pop daa mov cs pop mov add lods movsl mov pop push aas add test lahf push inc and mov stos out dec les mov in cmp or ret ss movsb or adc cli inc inc shlb std insl jmp mov lods inc outsl push test mov aam mov xor ret mov push into add addr16 rorl inc (bad) cs jo and adc jle jecxz insb or outsb lcall test mov add sub push cmc sub fwait mov push push out scas add fs pop jmp or pop push repz jnp cmp clc mov sbb jecxz sub jne xor out outsb outsb mov cmp xchg inc mov pop push sbb inc push cwtl sbb mov clc add scas das out (bad) jne fwait jo ja jecxz mov xchg into movsb int sbb sub lret divb mov xor stos add std ret test test jbe lock into jno fucompp lahf cmp test sub mov pop push neg stos mov mov cld iret loope cli mov lahf mov dec aam std fsts pushf (bad) imull lea sub test jno push mov in and jnp je (bad) dec inc cmp fsubs jg in mov pushl mov mov (bad) push mov pop adc inc aad (bad) pop lock mov dec sbb decl pop out outsb nop movsb cli push icebp lods stos xor mov sub mov pop push xchg (bad) jns pop add mov mov sub sbb cmp lods jo gs (bad) mov sti lahf gs mov inc pop sarb sbb gs mov lcall inc iret adc rcll push ja xchg push fidivr or mov inc sbb fidivrl std add out in ret mov push nop sub imul jecxz xlat push ficom jle outsl roll sbb insb or sbb ljmp mov cmpsl ds adc pop mov sbb movsl das xor add push adc xlat popa mov insb flds (bad) sub jp cmpsb aaa mov dec push xor out fidivr push xchg cmp push aas insl gs adc pop out outsl sar stos pop ljmp cmpsl mov and xor shr js xchg jo pop lock (bad) aad pop test mov inc aad in sbb xor mov leave push pop pop (bad) mov sub scas test dec pop xchg xor cld (bad) xor aam sbb and sbb cmpsl dec push repz nop insl mov mov (bad) jg mov cli ficompl jbe adcl (bad) sub push mov test inc jne adc push addr16 aam push push push mov daa call outsl jbe mov pop lods adc sbb lods sub and jb xor inc xor jl xchg push test hlt lods cmp sub das pushf les push je,pt (bad) cmp adc push outsl mov xchg xchg jnp ljmp xchg pop inc pop leave mov and pop aaa dec xchg fs mov xchg sahf xchg push xchg mov mov aaa loope dec jno sbb add test xchg adc inc jle or das dec inc repz pop or enter pushf out jns cmp movsb xchg pop adc inc mov int3 xor flds cwtl add popa addr16 js adc (bad) test mov sbb gs cmp cltd call xchg into (bad) scas lcall cmp popf scas dec dec pop leave cmp dec call push fildll and shr (bad) dec aaa dec cli inc jo int3 bound mov loope cs inc push xchg mov push aad fisubr xor jae ret inc (bad) movups sbb pop jecxz lods popa jl test sbbb enter mov cmp pop (bad) lret std arpl ja xchg pop xchg (bad) fbstp dec push insb and mov jle add jecxz dec pop sbb xor jl jle jge adc sbb pop leave scas sti inc js dec adc inc mov shrb dec adc add add daa decb and pop push sbb cmp sbb inc out pop cwtl ja push cld jo mov lret cmp ret mov pop iret lds icebp outsl add jo jg (bad) or and inc jge arpl jge mov idivb add imul scas enter (bad) ffreep push mov (bad) insl aas outsb mov fucomip sbb pop sti test (bad) std sbb rcll ret sahf push leave es mov push js aaa pop or and inc je sbb pusha push jo stos jb xchg xor jb lods sbb mov lret int3 aas dec sub jg int3 gs mov sbb cwtl int ret jmp mov mov pop xchg and cmpsb out cld dec iret aaa ljmp lret jecxz cmc call push fiadd sbb dec sbb in xor cmp add sqrtps inc cltd cmc ljmp lea sub rol lock sub push xchg push or adc add jge fcmovnb pop aas jne lds cmp push inc mov add out adc mov fwait sub imul test mov das das ficompl jge add popf or pop push cli mov inc mov mov jl rcrl jo or push scas mov idivb push mov outsb out std jge or pushf mov push mov inc mov pop sbb les and dec addr16 jno (bad) add cmp jle jae lret or enter add repz lods jno jbe popf ja,pt adc leave push neg shll aas gs cmp pop insl int3 call mov inc sub test mov ret adc push push lods jmp push ret cld add jns gs adc ret cmc and je loop jo icebp repz jp arpl push test jmp xor dec push push lret imul inc insl push sub and out xor xchg sbb out stos add in (bad) pop mov cmp sti sub add ja rorb or xor or mov rorl jmp sbb loop repnz adc call xchg addr16 lock cmp xchg mov scas das mov xchg stos inc push jbe iret sbbl add adc in out mov lcall fbstp aad cli mov push cs fiaddl sub pop mov repnz out or imul pusha adc adc adc pop lahf and and inc push push outsl adc int insl push xchg sahf xor add js jle dec mov ror xchg push add clc sbb dec inc mov add ljmp aam dec adc fcompl stc movsl aaa sbbl sbb add repz out add adc push mov mov xor pop je loop sbb loopne adc mov cmpsb popa ret xchg and imul lret pop cmpsl arpl xor loope dec add (bad) and scas mov jmp popf stc xor push enter (bad) pop and sti imul cli popf or gs dec sbb and push jle pop inc cld icebp test addr16 je adc in test push cmc or inc fimull sub cmp bnd add sub sti mov imul sbb lock inc dec cmpl addr16 roll insb imul sub insl cld pop insl gs out xchg pop rcll stc js xchg lods (bad) ss sbb gs movsl mov enter test rorb xor outsb pop sub jne sub mov inc movsb lods mov jle jle cli push gs (bad) mov add sbb lods inc popa cmpsl in mov xor cld or mov or scas pop pop in jecxz and inc mov cltd fild sbb out mov lahf adc pop push xlat jbe ret ja movsb dec std xor push or adc mov stos in sub movsl test adc mov add pop gs xchg push pop push inc pushf cwtl pop pop lock jecxz lds jnp jae addr16 (bad) bound fiadd inc push mov js jnp dec xor push and push lahf notl mov (bad) push cmp push lret push or cltd add mov int3 mov rclb loopne lock rcll (bad) xchg stos jb test push jle add (bad) pop xor xor xor dec sub pop stos sub add pusha jae lcall adc fcmovbe inc mov loopne jge imul ja leave jnp sub jae xor aas pop xchg insl das cmc in inc jo xor adc push leave in stos rol (bad) mov push and jbe or mov add cmp or pop mov mov jecxz ucomiss sbb mov sub inc mov adc jb cwtl push je cmc movsb in cli add ljmp or push pop adc ficompl push fstps mov push stos mov push movsb arpl mov adc jge cmp out fidivl and fwait and cmp sti dec and sub cli imul xchg arpl pop outsl outsb jno jmp push dec and add out jb push lahf push jns add pusha repnz (bad) repnz outsl call adc jo mov cli pusha insb cmp inc sahf inc decl pop aas inc imul dec (bad) mov sbb jnp or jmp jns jmp cs pop cmp orl rclb test fsubrs imul xchg sti pop push int3 cltd in jp and pop cmpsl xchg in jbe pop cmpsl imul sbb sti inc loop add pop mov xor sbb adc dec sarb out dec xchg inc cmp jle or mov cmpsl mov lcall cmp inc adc add iret jmp cmpsb lret or cld ljmp les push xor or ficom cltd fbld dec repz repz add shl push pop xor ret ds ljmp fnstenv outsb add fcmovu imul pop sub mov mov xchg sub dec xchg inc xchg pop scas xor pop adc sbb clc ljmp jae cmpsl scas mov xchg (bad) jno add jp cmc add rcr fsubs insb sbb mov (bad) pop sub add movsb push pop jg dec mov push mov mov jbe je ljmp xor fwait xorb inc xor sbb push movsb pop push js inc push outsb out icebp mov mov imul sbb adc push sbb cmp pop sbbl dec pop and icebp int3 pop ret jl or sbb add and pop imulb pushf ret pop push adc sbb incb ja aas lahf push dec stos inc xor js xchg mov ss aas xchg push loope lock xchg push nop xorl stos mov pushf inc in test pop pushf clc cwtl call mov aam pop xor cmp shl inc pop (bad) lock inc (bad) ja xlat ss cs ja insl rcll sbb movsb gs jl xchg hlt push sbb out les in add aad xchg cli jne dec out sahf ja cli rcrl sbb not push lods jbe scas mov xchg hlt sub (bad) jle rcr nop inc xor add pop mov and lods jnp xchg jb (bad) popa inc dec mov pop jl xor lods push inc pop cmpsl cli icebp leave cltd cmp repz jge (bad) mov (bad) xchg gs cmp js (bad) jbe loope inc sbb add push sbb inc pop cmpsl add push pop pushf insl adc push je popf cmc jns add xchg jle xchg repnz imulb pop xor cmp lahf ja les dec push hlt inc or inc out mov fistpl or push gs and sbb outsb jp or cltd lea sub inc jp (bad) jmp out jle fwait mov movsl mov fucom fcomp popa cmpsl pop movsl push pop push and gs adc or dec mov cld call jl xor nop bound loop jg add pop ficoml inc call mov popa add jp cmp or inc pusha fiadd pushf inc std jnp pushf sbb insb or call icebp xchg xchg or xorl daa pushf mov mov stos mov cwtl cli into fisubl in jo mov push mov loope sbb outsb jl rcrl js scas mov out mov negb js jp add or adc (bad) out out lahf cmp scas ja pop ret dec leave jo lods push repz adc aad (bad) mov cmp mov jle (bad) lods gs mov xor and in sahf jnp xor aas mov int3 push mov jp mov test push or mov push in ds lret cmp fstl pop std insl pop push or adc mov rorl mov ljmp pop xor stc adc jno nop loopne lahf mov aas inc mov dec outsb push into pop or test adc mov inc mov xchg lret jl cmpsl add sbb xor mov push arpl sbb repz inc repnz fidivrl cltd fimul pusha les cmpsl inc outsb (bad) cltd mov cmc mov pop gs mov int jae mov push add adc ret mov adc add xor cmp add out lds xor jle xor imul jg js stos jbe insb inc dec mov mov push inc fwait and xlat lock dec shll ss and or adc addr16 sbb (bad) xor stc outsl lcall aas jl pusha pushf fisubl inc lock add daa cltd push movsb jno xchg call jns mov negb insl imul imul imul (bad) adc enter fisubr popa in cs cs and sub icebp nop jns ljmp test jecxz mov les cmpsl xlat push in xchg lods cmp adc pop push or rorb imul cmpw jns enter pop ljmp stos (bad) pop and ljmp ss ficom ja pushf into mov sarb adc mov rclb gs (bad) hlt dec xlat xchg sub add inc xor push cmc cmp xor repnz jge aad dec je in gs xor dec xchg (bad) lcall ds cmp loop cmpsl inc xchg aam dec jle movsb add cmp inc sbb add (bad) dec mov jno hlt jbe ljmp mov stos aam std dec or jbe stos ljmp lds (bad) push mov pop sbb sbb mov mov mov or daa and or addr16 xchg mov loope sub cmp dec fwait add dec addr16 push mov add je cli cmp incb xchg xlat (bad) fdivrs in sbb push cmpsl adc adc add rcrb pop lahf inc das in xchg aaa aas mov cmc jl jmp sbb fnstcw xlat movsl lods or dec mov (bad) sub aas ss mov hlt pop ret xchg and shrl sbb add int aas addr16 sbb movsb jge add ret fdivp and pop inc or jae inc inc jnp jae mov inc or out jg mov push xchg adc inc push rcrl iret nop daa cld push or pop add fiaddl insl aas scas lret into inc lcall dec fs je rcl addr16 dec xchg mov std (bad) lret test jno test xor push loop pop mov pop push icebp mov xor das mov divb int3 cmp jne,pn xor outsl sarb or das repnz stc into js mov ss lahf jb push pop jnp in push jbe cmp xchg insb mov add jns and inc xchg test dec push add hlt cmp stc jge (bad) into addr16 fimull movsb or rolb pop adc in sbb aas fistp cltd daa push das inc jns hlt ret jge (bad) inc mov jge push or jne loop mov ja or adc mov lods sbb movsb lret or pop sub or mov sbb sub (bad) jo xchg incb push inc scas aas jge test jl jo mov push mov push xor pop out sub mov jae jns in jno push addr16 fistp add cltd push (bad) jnp cmp adc sub cmp ss stos push mov or jl and (bad) mov adc into nop jmp xchg push aaa iret test jb inc cltd adc ret ljmp lods sbb lods add in rcrb test xchg outsb das loop push mov sbb and cmp pusha ja cmp outsl mov testb xchg xor and sbb jecxz pop push lods lgs ret icebp sbb dec xchg inc fldt fwait mov inc int jmp mov pop dec pop xchg pop pop (bad) sbb aad pusha out pop jmp add jb pop test fwait jne push inc jb mov fsubr jle cwtl xchg fistpll inc rorl cwtl in into push jp shr jb xor fnstcw gs sub push pop lret lock mov shrl inc adc std orb fs sub cli notl int3 inc cwtl mov loope dec stos je inc and jns fdiv xchg clc test and cmp loop sbb fistpll push mov ja sub test ret add jns sahf movsl sub out sbb fbstp je push dec cltd arpl gs sarl pop dec mov insb add xchg dec popa push and push repz cmc cmp mov (bad) int stc add cmp int fidivr sub mov (bad) push or fild sti sub inc lahf jae inc add pop mov inc jo add inc gs fbld in (bad) aam sub imul insl add ret pop inc mov fistl inc mov daa add (bad) lret sbb call mov and fcom outsb xchg aas imul or mov gs cmp xchg lock sbb pop jnp fildll inc sbb xchg rorb call (bad) jl inc sarl or inc adc adc cmpsl jle test sbb jb or mov shl outsl test jb je push xchg dec mov jle ficomp (bad) test aas in pop push and add sbb (bad) in hlt mov cmc shlb movsl xor cmp inc xor fisubr ja pop adc outsb pop sub dec pop fnstcw and ja (bad) cmp aad jge dec mov pop or sti inc xor push mov (bad) xchg jmp insb out pop push rclb rcrl add adc sbb jae mov or adc shrl sbb or bound mov fcomip movsb jmp out jnp lds inc cli fistpll jns or out leave in and pusha adc clts int3 repnz lahf sti xlat fwait mov int test rcrb cmpsb pushl mov call sbb rorb jge sbb (bad) int push adc gs repz mov xor xchg ljmp rorb (bad) adc imul jmp inc lahf inc sbb xchg imull sti xchg add adc (bad) mov scas outsb sbb push adc ja loope stos repz sub xchg dec in iret mov pop xlat ret xor dec out sub sar inc out cmc push sbb jae push push stos lret dec fsubrp dec mov sti inc sub cmp inc scas fidiv jecxz fld cli and test rolb lds jae repnz inc and out je lret mov inc jnp mov ror pop sbb jl popa push pusha add sti dec cmp rol xchg and xor rorb pop xor push mov ret scas cld sti icebp repz sbb adc insb sbb mov lods stos pop test ljmp mov je aaa jns iret or gs inc push rorl push std outsl cmp and push adc sub sub fist lock jl sbb push dec insl mov or pop adc scas clc ss cmpl sbb loope stc xchg in mov or notb (bad) (bad) gs iret ret (bad) cmpsl push clc outsb shlb mov jne adc mov fidiv inc cwtl pushw stos lret sbb addr16 xchg xchg mov push cmp mov push xor loope fldt jbe jo push test dec ficomp lret hlt lods cs daa jns mov pop add sar pushf inc or rcr pop rorl mov add add adc int3 sbb ret cmp push mov cli cli clc inc sub pop push lret push or test jl (bad) xchg (bad) aad dec cmp push ja add jb jl inc pop dec sub jecxz push inc loop add sbb jnp rolb mov lret pop xchg lret lcall cs test (bad) xor mov cmp sub mov push js loope orl stos out ds mov push jo (bad) and or xlat xchg movsb inc sub mov dec js outsb mov dec push fs adc push pop mov lahf in pushl dec icebp leave rcr xor rorl cmpsl add xchg loopne imul mov pop lahf add cld movsl sub daa mov out push ljmp pop cmp mulb popf ss lea es cltd insb ret jle lds push lods std cli inc hlt aaa mov shlb sbb push (bad) pop (bad) bnd inc mov xor sbb pop loopne cwtl pop gs mov sbb enter fwait mov cli mov loopne mov or inc lods outsb jnp mov adc lea imul bound sahf hlt jns nop addr16 lea xchg lret jmp cmc test xchg mov fsubs and mov in loope jo mov std gs les gs fidivrl adc push imul int pop mov test cmp cmpsl (bad) mov ss imul and push cmp sahf lods adc data16 pop pop sub sbb mov add cli push (bad) bound add lds cmc mov shrb addl gs xor or sub or fidivl jmp sub pop jb push cltd (bad) fcmovb imul adc loopne pushf loop (bad) fildll lods add inc outsl cmp mov cmpsb mov xchg jge cmp sbb and sbb stos jns xor mov mov and daa stos or mulb pop enter jp fdivl inc stc dec adc js rcr or xchg cs call add jle fisubr test cwtl adc out (bad) ficoml das push addr16 scas aam outsl sahf mov mov push inc xchg fidivr mov add sbb outsl xchg and xchg add insb aaa mov sub sub xchg lcall jle notl add into mov int3 sbb fdivrs test xor std aas pop movsb fmuls adc cmpsb inc adc xor add nop and mov pop vcvtps2pd clc xor inc test adc add lods adc cwtl (bad) out (bad) rep mov outsl sub pop aas ja inc ficomp movb pop jne fisttp inc sub add pop data16 ja (bad) adc cmpsb cmpb add adc inc jl pop gs inc icebp addr16 inc and push jno lahf mov flds fmull (bad) dec (bad) pop (bad) sbb imul mov sub outsb loopne fldt push cmp (bad) subl ss inc fmuls stos push repnz mov xor inc inc das stos lock pop sarb pop jp inc dec and je outsl cmp in fdivrs scas (bad) sub dec jmp jp stos gs nopl xchg or clc jge cs iret xor hlt pop add call outsb cltd inc fidivr lret imul cmp jle sbb pop xchg repz inc enter dec (bad) push lock xchg and sbb adc xor add iret scas daa (bad) cmp roll ljmp mov rol stos subl ljmp adc pop in leave test pop ret fwait or insl imul sub dec test test jo loope int or jl leave sub (bad) repz daa inc pop add or dec in repz outsl ja,pn dec pop gs test rcl out outsb jb pop mov xor enter stc ljmp cmpsl xor mov dec push stos cltd sub lods fsubrp imul cmp rorl mov sbb std push stc add shlb lods outsl repnz sub adc jno sti gs mov jp pop test pop add lock ds mov jle (bad) arpl and add repz adc inc fstps cli inc dec jp rcrl xchg xchg pop rcr jbe mov jb outsl pop dec fisubr test ficom push jge ret inc ja mov adc loop in push inc (bad) jnp jae adc bound (bad) dec xor inc push pushf jmp pop jnp jmp (bad) ja jnp pop out stc push adc pop dec lahf jge int3 lock leave orb fisub pop add gs mov jmp mov aam sbb arpl sub sub xlat repnz sarb (bad) jle mov cmp inc jo xchg add mov cmpsb cs add std jne push xchg loop xor xchg hlt in mov and adc rcrb shl sti (bad) sbb push xor insb cmp push insl xchg jmp lahf sbb jmp adc rol (bad) jns add in les je enter dec or mov dec push inc (bad) sbb jae aam sti adc shrb sbb pushf int scas and pop dec (bad) popa je (bad) es mov aam lcall xor xor push jl addr16 lock mov mov jbe cmpsb fisubr daa adc pop fisub dec into mov add ret addr16 ja xchg in cmp push lods fidivl mov faddp inc jge push ret fstpt aam add bound gs lods int out pop loop jbe sbb push gs je ljmp ja je insb xchg imul lahf sub stc sub lods (bad) jb adc add out push mov dec mov enter xor imul ljmp dec xor mov cld stc cmp shrb inc in push insb leave pop dec add mov jae cli lods imul inc xor (bad) sbb lcall test adc and inc mov or push lret jle mov xchg inc cs idivb inc jp call ljmp inc imul cmc push movsl push les insb or xor xor inc icebp jae jge xchg pop pusha dec jle sub popf push rcrb sub jne nop jecxz mov scas jge int jle mov adc mov ja sbb jae pusha pop sbb (bad) pop pop cmp xor test mov mov and cld xchg inc jnp sbb sbb sbb mov data16 lret ss push mov and inc sub mov mov xchg fwait jl js rcl xchg lret arpl ficoml popf push and jmp inc adc mov dec fldl inc mov (bad) or rol out rorl pop sub push pop or std out mov mov mov lahf pop jecxz shrl aas (bad) (bad) pop mov xchg mov out mov jp mulb or test sub and out fisubl and push (bad) lock push mov or pop dec xor es add jmp xchg movsb mov lret lret adc ja iret mov cltd mov mov jbe jmp ss (bad) jns xor jno inc aad mov sbb pop push int3 imul push lods push xchg sbb sbb and sub adc inc jbe cwtl mov pmovmskb mov jl add and aad cmp in loope mov inc inc fild ja fs icebp jnp dec cmp pop in lret inc or push sbb icebp ficoml das ss xchg pop mov bound sub js repz xchg ja push adc ss sub adc (bad) xchg jns push mov rorl adc addr16 adc jb rclb sub jle push dec jnp xor ret xor cmp mov or xor shll lods dec insl and unpcklps jecxz movsl pop jge gs sub out xor test add ljmp dec ds int outsl jg jge add (bad) sbb in adc add xchg add popa sbb mov popf sub cwtl lock push aam fnstcw inc aaa inc pop subl pop sbb xchg jmp cmp divl addr16 sub in cwtl andl out push pop gs jo (bad) push dec mov popa insb lret jnp fnstsw mov ja push inc test lds imul push mov dec shl cmpsl sbb aam dec xor dec jo cmp fs fs sub pop fiaddl jne jmp add je ss stos or mov mov add jecxz mov cmp push mov add adc pushf dec aad gs mov pop out mov pop imul jae daa pop fs (bad) pop mov dec repz (bad) enter jmp jb dec ds sti and mov test ljmp jnp pop pop imul pop ja sub mov mov (bad) xor frstor mov adc jae popl rcrl addr16 in or cmpl jecxz and lods aam jae outsb gs pop movsb xor jp mov test outsl pop gs fs push xchg dec ljmp hlt ret data16 js inc mov jns push ss jl stos outsl lock lock ret xchg cli fimul in fwait lret pop jns mov lock mov icebp add in adc sahf ja add mov data16 lock int3 jmp push xchg pop and inc repnz test test inc gs xor jnp mov ds jae fsubrl xchg push int3 adc cli add je std mov bsr ficom cmpb push addr16 ret cmp gs add and adc insl aas gs fstps mov lods outsl add cmp std jl int adc int3 add iret sub cvtdq2ps dec imul mov jge out (bad) or pushf inc imul insb push sub sbb cmp aas sub lods adc test loope jle xchg or mov aaa daa add mov mov inc les int out (bad) dec test loope loopne (bad) xchg xor dec mov lret int xor inc pop stos or jno in aad call mov adc jg xchg mov pop fwait ja rcrl lcall je,pt xchg rcll hlt dec dec pop xchg mov push inc ds mov ret jbe (bad) daa sub mov cmp jl out andl jg lret out (bad) and add ss xchg fs cltd push hlt pop xchg daa mov cmc in or jle daa rol pop jge pop mov cwtl in repz imul sub dec sbb arpl jb es daa scas lahf testb add out (bad) mov mov iret dec mov lret out fisub mov ljmp js sbb pop push dec push stos push sbb fsubrs cs and lods aam xchg sarb push ljmp add outsb fldl xchg mov lds inc xlat xlat ret dec lods movsl mov in (bad) mov test jnp inc loopne xor imul stc mov sub ljmp js jb xchg mov mov sub int ss mov rolb mov loope cltd mov xchg xchg adcl fadds push popl cli pop (bad) (bad) lret dec (bad) pop xor cmp mov into nop cltd cmpsb dec mov inc mov pop addr16 cmp cli clc lahf cmp xor xchg adc cwtl stc test insl pop xchg rcll jns addr16 rolb or aaa (bad) jge lret aam adc jbe daa scas pop xlat fstpl negb ficompl insl pop jle sbb sbb inc ret push push iret jle lcall pop addr16 inc out aaa and cs xlat call sub or sub mov push or push mov and mov cmpsl jno add mov dec insl jmp mov lds fild cli aad out push ss jle insl pop mov imul sbb push imul cli xor mov pushf pop pushf push ss lret add adc jp call imull add (bad) ljmp jno xchg lahf leave inc je jmp inc int3 xchg outsb and iret push imul mov (bad) stc push inc mov int aam cmp push or je out dec outsl test mov in adc push lock sbb ja test add mov addr16 repnz inc fisubrl int3 xchg mov jmp stos out aad pop xchg jo mov jb push add mov das (bad) fs add pop lret adcl ds inc sub xlat insl mov mov in std ror nop bound pop adc in mov div cmc and ja or outsb mov int3 adc test jle pop or int3 add sub cmp decb addr16 rcrl fldl2e divb repz add or pop es inc aad push dec fwait jp roll aad int3 pop gs (bad) push outsb aad cmp inc inc cltd mov lret daa pusha mov sbb lods movsl movsb (bad) lcall test repnz sub push sub fidiv push pop jae inc gs lret bound addr16 inc push outsl gs pop insb js jecxz mov inc pop ja push fs dec (bad) out pop (bad) cmp incb (bad) sti add sbb jo cli in sbb mov aaa mov popf inc mov int3 in data16 (bad) inc cltd aaa es lods mov sbb xorl cli mov pop shll and pop hlt fcompl imul outsb jne push dec gs test adc pop pop push add mov jnp jg and push jge jo sub mov jbe xchg jge out jle js pop xor push dec outsl sbb loopne imul in pop je xor lahf or cmpsl sbb scas bound (bad) or aas pop int pusha repz das jmp xchg ss pop adc inc test sti push test cmp push push add inc pop andb xlat out add mov adc stos cli inc adc dec jecxz lret dec scas mov sbb inc fimull subl adc dec sbb shll cmp sbb or add pushf mov leave shl (bad) mov or iret movsl into cmp mov and ljmp sub xchg pop repz xor mov inc pcmpeqw pop inc pop mov sbb out daa fisubrl pushf shl cmp aas in cmp test js pop (bad) mov adc xchg sbb add nopl push sbb jne je xor int3 orl mov jle lret imul add adc xor daa aas inc scas mov mov in xor nop aaa (bad) inc mov lcall and aam test in jl push or aaa jno int out push or sbb test les xchg lret les pop cmp ficompl aaa pushf aaa lds cmpsl (bad) push xor loopne stos add add test leave (bad) outsl jle sbb xchg data16 cld mov arpl sti pop mov adc adc xor add sub (bad) jns jno sub push in (bad) mov and fucomip push mov mov stos push rcrb pop rcrl inc xchg add jo mov jns pushf repz idivl push sub into adcl pop pop inc mov mov (bad) in pop push jae in faddl addr16 jmp cli out or add xchg in imul jl push mov scas subb repnz cld ljmp inc sub fiadd inc fwait xchg add subl mov and dec sbb cs mov jbe gs pop dec subl mov mov clc pushf pop inc cs push inc movsl sbb add mov lock pop sub fwait pop (bad) jle gs daa dec call aam cltd pop pop push pop imul out push add adc pop add jle data16 adc imul mov dec sti in mov sbb xor addr16 outsl mov inc dec ja push lods pop call fidivl gs push cwtl imul pop ja ret mov dec divb outsb in sub add sbb stos xchg addr16 sbb lea rolb dec sub (bad) jbe ficompl iret loop inc sahf test jbe xchg or movsb call adc add gs test adc jmp jbe mov or insl lods jae int3 push sub cmp mov inc bound mov call ss (bad) adc js ss (bad) in inc into out (bad) fadds sub xchg test lds mov scas push cli loopne jnp push jmp sub cltd ljmp adc in xchg out into push inc in aas lods cli pop push aaa push ret inc jp adc mov or push fsub rorl (bad) rcr xchg add xchg mov inc imul ja in sar pop imul int rorl xchg inc push outsb (bad) mov lods fisttpll cmpsl (bad) jmp mov cs or sub lahf jge or je pop sbb cmc pop ja movsb and mov rorb cmp xorl subl ja gs leave adc pop fcmovne push stc les shrl imul incb dec jp xor imul push repnz ss xchg cli fcompl sub sbb ja sahf add lcall cmp mov jb push dec ja cmc test aas pop adc das and cli inc push mov dec jae cltd in push mov cmp mov xor es (bad) mov push cld addr16 mov test push inc sub dec pop enter enter int jb bound push daa xchg enter inc out stc mov pop pop lock mov jae sub ja sub iret repz inc pop sbb ja mov sub es push pop push cld andl lret ret int xchg ja inc xor jbe js dec mov mov pop and dec push sbb mov add ds pop adc lea jae xchg jnp inc xor fcomi jno inc or push or xor inc invd mov cltd lds jecxz xor nop adc in mov add pop mov je repz cli testb inc inc fmuls mov mulb ror call and xchg fninit (bad) mov lods add gs lret jecxz movsl sarb mov mov mov nop pop sbb cmp ja lods sub and cli ds dec popa pop into lcall push mov inc mov (bad) xchg jo insl lock mulb xchg mov mov imul push jo sbb out cmp cs rorb xchg jbe pop fnstenv leave lds mov push cs push adc pop jmp fisubl adcl mov cmp pop aam add sarl adc add push push out sbb pushf pop in cli mov push mov cmp or divl dec das add xchg aaa dec jo outsl jmp insb gs adc rorb push ss jle scas or das fiadd insl dec sub or aad sub pop push add adc and dec dec out rolb push cmpsl jmp in mov ret ja imul jl (bad) cmpsb cmp mov push jne cltd inc inc or addr16 gs mov arpl push call push iret stc es jge aad test aaa jmp sub adc xchg mov adc (bad) gs lods decb imul mov dec pop lods sub sub mov and ss mov (bad) mov adc jnp or repnz out inc stc sbbl push push jmp into cwtl mov or iret mov xchg mov adc rclb mov xor insl pushf cmc in cmp in mov scas jnp jp test popa pusha in pop add ret addr16 add mov mov xor add or imul shr add iret push int mov call (bad) jmp pop lret sbb sub adc sbbl daa cmp inc out xchg das xchg mov sbb cmp xor xchg test jnp lods pop push dec decb pop popa aam iret movswl add fwait popf inc pop call inc std leave (bad) jo insb pop sbb inc push rcl cltd pop jecxz pop sub (bad) lea add mov push mov outsb cltd out jg dec scas adc movsb sbb (bad) sti sbb lea mov pop je and sub adc scas adc sub lret cmp in pop push jg xor aaa sbb jl out push sub cmpsb inc pop neg sarl cs out int3 pop lret jg xchg fidivl cmp scas jecxz pop movsl in push jg into pop outsl and aas mov pop pop dec std jge mov pop incl jg loopne push or lods (bad) jbe (bad) dec sub mov popa aas pop jmp or sub aas inc adc in int mov jg in (bad) sub mov bnd jae push mov xchg fisubl push jg into or stos int js lea jge jle mov or jnp and jg popa jmp hlt jbe cmp sub xchg cmp sarl hlt adc xlat sub testl insl inc xchg push inc adc push out jge repnz cmp in jg jmp push jg das cwtl add dec mov jnp in ja jnp mov arpl bound insl mov jge sub jg lret inc cwtl jg test adc xlat add or inc in jmp jne push pop jl gs dec push out mov insb js cs mov push dec into fildl out and imul mov jg imul mov jmp pop jbe pop dec sub lea enter mov cmp pop sbb aaa jg fidivrl vcvttss2si push and leave dec aas fwait int jae orb cli mov sarl popf into mov mov dec decb jle or outsl fbstp and pop jne in pop jbe jae jmp mov gs std lods pop jae cmp xor xlat je xor jg cmp bound or les int inc mov lret pusha js das jns mov (bad) or into ja aas pusha das xlat stos dec push lahf inc jne insl sqrtps test mov sub pusha xor pop inc jg stos inc jbe dec imul and jg in sbbl sub shrl mov aad inc ss insl nop pop int popa mov pop dec lods jl insl test jne jg sub mov sub rclb jle mul jnp outsl cld push scas inc cmp jbe stc and (bad) outsb lcall (bad) jbe cli insl jg movsl pop sub pop (bad) imul adc repz xchg pop add jg pop fmull (bad) add js jg push xor adc dec push mov out xchg mov call lret mov jg fisub aam outsb dec (bad) loop lret lret jne xor adcb cwtl jns loope push push test adc mov fwait push (bad) (bad) repnz ss jg subl jg out dec lods cmp mov pop gs adc jecxz xor mov xchg test (bad) dec mov scas pop mov clc cmp fsubl mov repz test push inc xor jg test xor xor mov xlat or xchg aas cmpsl daa mov add inc xchg cmp pop dec scas jns cmp leave xchg xchg dec mov aad lcall or and mov inc mov sbb insb mov jmp dec popf stc das dec addr16 out aam jnp pop or jnp pop int pop jmp je ds ret jg pop xor imul nop jg aad sub mov xchg adc test aas dec loop push popf addr16 mov dec pop jl jecxz insb jmp adc (bad) mov mov mov mov fimul xchg add hlt push pop mov test pop and aas mov and jnp (bad) xor mov jo addb shrl dec xchg push rcrb or mov cmp pop or push jnp sub lds in test mov jg and xor mov aas mov inc fnstsw lcall loop sub push jg adcb mov cmp mov (bad) jg jno rcrb stos add xchg call cld test adc sub adc dec std jle mov xor div das sub mov cmp add in pop aas or dec adc ja std xor fisub sub sub jg outsb vmaxsd xchg jg mov fiaddl push jo or sub xchg xchg mov ja sbb xchg loop xor inc jg dec (bad) in cmp xlat mov lods lods jae iret dec inc sbb jecxz xchg (bad) out clc orl jo adc add jge jg sub outsb xlat jg mov ja (bad) test sbb adc fwait std les sbb outsl lret dec and adc pop mov jg jecxz adc out mov xchg add jg jne std mov in mov xchg (bad) addr16 add jle aas lahf and mov add adc std mov sbb pop (bad) mov sbb add int3 insl sub js pop or dec xchg xchg out mov test (bad) mov xor adc lock int jmp lods lea dec inc cs inc jg imul in into sbb pop xlat jg add pop (bad) bnd jae pusha pop sbb jge xor push inc jg jae cwtl clc cmp sub jp js popf shll push xchg inc hlt push cmp adc lret lods out jmp adc fisubl imul cmp jg repz ret dec xchg add imul loopne ret jg test stc xor adc mov lock lret test pop (bad) cltd ficoml mov xorb dec es pop icebp mov push daa stc je pop ficompl adc or scas add xor jg xchg xchg mov push out mov add dec pop lret or (bad) mov and pop test (bad) js mov dec lahf in ds xor outsb test insl jp aas jg fcmovbe xchg and stc jmp mov mov adc dec sub int jae mov movsb out rcrb cmpsb dec sub repz insb mov add int3 push fiadd mov test lds fsubrl jl mov sub jnp (bad) cltd faddl mov inc sbbb mov push lods push dec xor addr16 push cli xchg repnz lret xchg aas cmpsb mov fist pop cmpl jmp mov sub mov je out arpl dec sbb testl dec inc insb mov loopne loop sub pop (bad) lods jg mov mov (bad) cli push daa adc addr16 push les adc sahf cltd loope pop jae pop adc sahf sti stos movsb ret adc jg sub std dec mov jg mov stos mov cmp cmp adc and jae push mov or mov cmp test mov inc xchg sbb jne pop test add cmpsb adc add rol ds adc mov int or cvtdq2ps mov pop cmp pinsrw test incb or mov dec insl jle (bad) repnz mov stos gs sbb sbb jnp test aas mov into push sahf ja scas push lret rcl (bad) mov test outsl push outsb (bad) dec mov jg das in dec mov push sub lret ss mov jge pop outsl or pushf pop jge jg shr mov cmp or mov push cmp cmp jmp mov push xor sahf push mov push (bad) lock test enter hlt jnp pop or in test aaa inc inc mull mov in (bad) cltd cmc mov mov fs insb into push inc dec push mov sti fcomi ret loopne xchg loop xchg mov icebp ficoml jp popf cwtl and pop push xchg stos xor jle aam or idivl in adc push cmp cmp test add add add push push cld ja cmp xor sbb aad jg nop insl cmp jno inc adc nop mov scas cmc pop cmc cmp inc insb clc push mov push jns inc add out push or adc pop push sti cmp fbstp sbb aas rep loopne and inc jbe int mov aad cs sbb pop jl ror jb sbb cwtl mov int jbe mov xor dec sub cmp into pop loop test pop lock cmpl cmp cmpsl in aam aaa or jno adc xor rorl pop pop or xor lret adc pop ficom int3 sbb (bad) scas push pop pop and aam mov insb mov mov aad and mov lret mov adc and data16 fsubrl cmp out je nop pop (bad) fstpl dec loope rorb push jl test cmc sbbl xchg pop arpl mov test inc cmpsb int mov into lcall es sarb xchg sbb mov lds xor pop sub push inc lods scas jb push inc xchg (bad) fdivp xchg mov es mov pop jo fs add pushf add xchg dec push cmc mov pop je mov xor xor int xor mov sub sub outsb out xor sti adc stos aas or scas xchg mov shll sbb adcl movsb mov test and test xor pop fwait mov aam mov cmc inc ljmp and pop and adc loopne add les call pushf inc enter xchg mov xor fstpt dec int3 jmp ret loopne mov test add pop stos mov fcmovnbe sbb add mov das jne sub outsl int push inc test addr16 pop loopw push add into pop aad mov insl fcompl mov xlat xchg stos sbb push jecxz push xor mov add push jge jne or clc cltd jge stos decb mov xlat lock out adc test (bad) jb push xor jmp mov inc sbb leave push inc loop inc lcall push push inc outsl test xchg les fwait gs (bad) in imul mov (bad) in in lods mov fdivr aad das inc mov mov sbb outsb push adc push mov fldt roll jae lods icebp add sbbl mov mov add aaa dec mov pop add push push dec arpl mov add cli (bad) sbb adc and es push in or pusha jle test adc dec and pushf add aas pop sub aaa and andl aas sub xchg mov xor dec mov jle call and fdivl sbb adc sbb lods pmovmskb xor and fucomp and inc stos les (bad) in sahf mov imull adc push fimul addl stos push data16 jb adc mov out dec jp mov push inc jle cmp mov xor jnp sub ss xchg xchg or jo jns mov jecxz pop mov nop xchg add xlat (bad) (bad) cld add add and ret jnp mov fisttpll lods ja (bad) mov push mov mov and xor and (bad) cmpsb dec sub fnop sbb testl imulb insl dec lock jb bnd in sti jns pavgw pandn sub dec jl push cmp mov popf cltd cmp cwtl in adc mov xlat or push inc sub mov adc fadds jl shlb mov pop je,pt mov cli pop lcall xchg cmp xor (bad) lock mov pop push shll lcall fnstcw inc in jb in js daa cmp mov jge sub inc adc xchg sub push cmpsl mov test popa fs mov test int sbb mov mov pop or (bad) mov jg scas cmp cwtl sub adcb pop pushf inc insl inc ss mov push data16 addr16 test or push call pushf mov pushf pushf pushl ret jmp sbb and aam inc fsubs sub mov lea or popf ret fucomip frstor mov jle bound push cmp mov mov add push mov outsl jl lahf aam xlat push mov xor ficoml mov inc pushf lea sub cmpsl int3 mov pop adc lea je test ja add ret add aaa rcrl adc xchg adc or jb xsaveopt xchg out inc lret movsl fptan pushf push and add lock aad inc xchg in in les movsb push xor (bad) hlt add sbb or push mov pop inc mov ja inc mov sbb sbb xor or xchg lods bound pop sub das (bad) push fwait pop data16 inc lret cmp and stc or xor sbb xor cwtl mov lret jns lcall in rcll nop es outsb xchg jno xor mov jp pusha out or js movsb scas in (bad) icebp sar adc test icebp pushf mov ja std std loopne push mov test outsb pop ja jo aaa inc and pop popf mov dec mov or dec int3 test mov mov adc or icebp cmp add adc mov mov mov (bad) lcall in push aad or add fs imul add shr add add add add add add add adc add add add adc add add scas in add add add rolb add sub add xchg (bad) neg (bad) je adc add add sub push lcall inc ret adc mov mov and xchg mov mov into jge pop ds mov dec cltd pop jp cmp decb or pop jbe cwtl mov sub jp jne js jae mov fldt dec mov pop dec mov xchg add (bad) insl push jmp pop xchg jl pop jmp push jp sub inc rolb xchg xchg hlt lds xor adc nop outsb out iret int popf (bad) dec lahf cmp xchg pop cmp fcomps mov push pop cmpsl icebp popa xor jmp inc in add aas lods addr16 inc add push xchg push mov sahf jo xchg cmpsb mov mov out pop dec ret cmp jmp je push sub adc inc je outsl mov and sti xor cli in mov pop (bad) iret in sbb push (bad) rorb fwait std fwait imul sbb nopl out mov sbb add mov jne ja (bad) jp push pop stos push or sbb dec lock lret mov dec push xchg jg (bad) les jnp (bad) lock inc mov jmp push int fcomip (bad) add inc push (bad) int3 bound mov clc test imul and sti mov or inc adc (bad) aad fimul in cmpsb jnp gs popa mov (bad) dec stc xchg and scas test fldl xchg inc push jg iret or lret ficoml inc arpl cli sbb inc adc insl dec mov jb inc dec xchg in dec push loope je test ljmp add (bad) pop (bad) cmp jg pop add lret lock scas jge,pn mov xchg insl ja fdivp imul mov sbb loope sub jae int3 addr16 sbb inc in xor fdivr (bad) cld clc mov and ret pop push or ss mov sub sub jmp xor mov cmp sbb xor loope mov test push test and xchg leave jp jns push mov fnstcw pop leave dec sbbl or scas dec mov outsl imulb jmp mov orps pop in push dec sahf cmp or mov clc mov js pop aaa lret sbbl xchg pop pop pop lcall imul mov xchg mov xchg push je cltd fs xchg in outsb das lahf insb ljmp punpcklwd mov jge sahf cmc popf mov popf pop iret mov shrb jbe hlt cltd les out aas cli idivb iret and in dec call je repnz daa inc pop sbb sbb and dec xor inc inc bound (bad) in pop mov mov test xchg inc outsl add icebp push jp cld cmp in cmp push mov add aam ja fldcw xlat bound daa and sti and and loop mov das push or je fs jnp cmp sbbl push push pop pusha data16 mov rclb add sbb in pop call js xchg aas andl std nop repz popa nop (bad) inc mov (bad) ss push dec insl imulb xor lret adc in in dec pop addr16 movsb xor imul fucomp push (bad) (bad) mov push insb push cmp add enter mov outsl push out jno shrb add sub insl pushf fisubrl jb lea xchg sub mov test movsb inc and adc cmc out xchg mov ret aad aas inc nop (bad) fldenv mov movsb fucomi dec adc int fdiv popf mov sti mov push sub decb test out xchg movsb pop sub dec or xchg cmp jmp mov call sbb ret adc (bad) shl sar ffreep mov xor cmpsl pushf inc fmul fstl or mov jbe and jnp std js clc push rcll loope out xchg out dec xchg flds jge pop pop aas xchg jnp mov mov addr16 jecxz lods xchg in data16 in mov sub jmp sub xchg jge iret cmp xchg pop jle jnp fldl movsl jp (bad) (bad) push mov add sub shrl inc dec sti cmpb inc mov mov les xchg insl jmp mov lods adc lds pusha arpl ljmp int3 xchg dec insb adc outsl jle xor xor sub inc icebp xor sbb sbb fimull jbe add push pusha xlat popa and fdivrl inc adc dec data16 es imul dec popl in or and cmpsl mov xor fdivrp push lcall xchg ror out jno xor and mov ljmp jp and jge jbe addb and (bad) enter ss xchg lods adc and iret mov dec lcall ret bound mov xchg sar jne add mov pop push outsb dec (bad) dec pop data16 shl insb pop ds js aas pushf test rcrl lods int outsb pop pop mov pusha shll sbb pop jge dec enter inc cwtl push addl rorl sti bound jns lahf dec mov and push idivl movsl imul dec out sub fnstsw mov or push icebp push adc dec aad cmp push xchg ja push add lods xor mov inc pop push (bad) mov jl inc (bad) sbb mov aad shll inc fsubp lea sbb fs mov stos xchg outsb ds sbb test xor popf adc and scas jae inc fldt xor mov popa hlt jnp (bad) fild mov out pop push or clc gs and adc shll lods sahf dec adc movsb add mov fldcw fisttpl mov mov inc jbe xor and stc cmp xchg test lahf jns lea push cmpsb jbe lods mov jp dec hlt cli cmp mov fist in mov add test ds pop push lods or dec xor cmp idivl or inc mov into bound jge adc mov dec fcompl les std xor push sub cbtw xchg rclb jp pop test test and xor mov inc or inc fwait dec sbb scas mov addr16 inc lods mov pop jmp sub incb inc and jo aaa xchg mov push nop sbb loop mov popf lcall int push ficomp sbb pop xchg (bad) xchg inc lret jmp jp bound rep sub fcmovu andb sbb sti mov jno cmp dec inc out and or push cmp push inc iret xor mov and mov cmpsb xor push int es jmp stos mov movsl jns and notb or mov in and cmc add mov jnp inc mov dec and dec mov rclb in pop cli das mov test mov push inc pop push aaa push jns pusha cld sbb mov pusha fdiv xchg fcompl roll es dec lods and out rolb mov dec gs ljmp arpl or in jge mov outsl rcll fwait mov aad jmp (bad) leave js aam sahf mov jno cld lcall jmp rcl pop dec mov popf inc and loope jecxz js push xor call bnd sbb push adc jg das cltd add pop sub sub jns sub movsb pusha fnstcw and enter cs sub push or or leave call lret lods mov mov je lods pop push cld nop or into in sbb (bad) adc (bad) cwtl jbe rcrb ret mull push jo stc int3 push push rcrl inc lahf dec pop negl xchg xchg cmp lret inc stos mov (bad) jo cmpsb in mov pop adc pop call adc or sub rcll cmc test lds cmp jo leave loope (bad) adc inc cmpsb pop daa scas lea packssdw pop cmc mov idiv pop mov bound lret mov les pop xor or mov pop imul jmp and pushf pop mov leave mov pop ror std (bad) sahf std xor ret mov cltd in (bad) rcrb and adc rclb cmp cltd lcall popf or push outsb lcall cltd xchg sub arpl jecxz,pt lods fwait sbb cs xchg push mov add popf sbb sub das dec int push jno mov xor dec lahf add sub or adc out jle xchg bound popf xchg pusha adc test sub jl cs mov dec mov mov dec (bad) mov inc ja in (bad) aaa and mov fldl jb mov pop sbb icebp iret adc out mov adc popf xor ret and push notl rorb scas mov xchg and xchg imul arpl and sbb out jbe decb mov pop fcomps dec popa jo pop inc sub out pushf sarb adc addl jo je jo (bad) (bad) mov push lds xchg into and js imul push je cltd ss lds out mov dec jne roll fdivl pusha ja (bad) imul test pop push fisubr in outsl xchg ja mov mov fildll pop enter or push sbb mov mov mov popa mov pushf dec or dec add roll test or aam cmp outsl imull (bad) mov jl pop mov lods mov adc cmpsl cmp ja mov sbbl xorl and mov int3 adc cld je adc js or xor icebp sbb and dec mov stos cmp lods pop lea sbb leave lret dec fmull fistpll push loopne stos xchg lds or xchg fadds jmp shl lcall pop pop mov ror adc xor ret xor (bad) mov jbe mov sti inc daa out xor mov insl and and gs nop xor sarb jl je jns push jae add popf cld aam aad cmpsb fs outsl jnp (bad) pop mov xor inc xor inc mul adc jge ret or sub jecxz xchg add outsb adc mov sqrtps xchg push test test orl into std xchg mov add cld add aam xor call call pop mov insb mov and loopne and test or dec daa xor pop popf adc sbb lds in inc cmp sbb ds jns mov insb push mov ror xchg lods fstpl pop jnp inc mov jp mov stos (bad) loopne sub in xorl sub mov jbe inc sub xor in rcr ja sub mov ret push popf in hlt mov fs jle out inc aas cmpl test mov lods lods repz ja mov outsl test cmp fsubrs adc adc or sbb adc pop hlt pushf add ja fmuls pop ljmp (bad) mov out push and fwait das push lret dec enter cwtl add jne arpl fildll and and inc rorb xchg nop les pop lret push lods add xorb pushf mov jmp sbb fcmovnu loop fimul scas out enter push push (bad) fs aas cmpsl repz repnz scas mov and pop ret sbb jmp cltd js lock mov add fstl push testb and int3 pop enter pushf or cmpsb lods sbb mov fsub test hlt mov cli mov dec mov push cld xchg cld add push imul and test xor iret cmp dec int sti out jmp sub fidivr mov inc xor inc in out sbb adc cmpsb add jge mov mov push arpl les rcrb out push in adc push sahf inc xor mov getsec lret dec ret mov jmp mov add xor ret scas in fadds hlt xlat (bad) (bad) pop int3 push cmp jbe cmp jne nop into (bad) jbe push xor sub bound push out int clc sahf stc jae mov and xor fiaddl add ds dec dec outsb cs sbb xlat or and or or pop and dec jp jne std dec sbbl repnz test jg cmp aad dec pop mov cmp add or cmp pop fs int xchg sub pop dec cld mov popf sti movsb lahf cmp leave cmp mov sub fwait aad cmp cmp (bad) mov fcmovb fstl dec cltd stos inc dec imul mov push pop mov push inc mov pop call and mov out lret stc out idivb jle or sub out loop in es (bad) lock (bad) cmp lods mov stc shll stos lock pop and lea sub and adc ljmp jle,pt mov sbb sub dec jp sub cltd cmpsb sub fabs cmp pop shr ds es call xor fildll leave aam cmp mov mov jnp lods outsb or ljmp jge stc push clc xor pop lcall notb mov cmpsb push aam lds sub push inc or add jmp ret stos enter mov enter into stc dec cli dec and ret xchg mov out push insl loopne xchg sahf cmpsb aad xchg mov and cs mov adc scas ja or loop int pusha dec mov xor dec dec (bad) jmp ss ret shrb jmp sub adc push imul fstpt lahf adc mov pop call push addr16 jo pop mov inc sbb popf mov pop cmpsl xor add add outsl call lea je stc cmp call lea jne push inc push inc pusha lea jmp pusha jmp lods dec lahf inc icebp push inc push push out icebp stc lock out mov movsb scas xchg and (bad) sahf pusha jp in cmp data16 outsl adc dec jo mov mov push jp mov xor mov notb jl lods dec les mov jecxz rcl jo cmc in adc nop (bad) mov frstor add push and (bad) pushw (bad) jnp dec mov sub sbb mov cmp cmpsl imul push (bad) enter jle jecxz lea xor mov adc mov mov lods cmpsb xchg call pushf rcll jno cli mov push xor je mov call mov out cltd test pop lea jae adc fucom stos adcb mov dec xchg jle fldenv cmp out add cmp out xchg cwtl or movsl scas in xor mov pusha das or jbe add (bad) xchg rolb cmp mov sbb xchg push adc xchg sahf negl shrb xor or mov xlat loope in inc cmp fsubs inc (bad) (bad) sti aad sbb roll daa xchg movsb in adc xchg xor imul rorl out bound mov imul ja mov js fwait jmp testb adc sbb mov lret mov or mov stos loop (bad) push int (bad) push pop int3 adc test jbe pop lcall scas push dec in repz add test jnp xor mov idivl js stos fdivp inc in dec iret sub in inc mov jmp pushl lea call call jmp jno out xor push inc daa outsb mov pop cmpsb popl xor xchg and jb inc arpl add sub nop sub lock mov xchg and pushf (bad) mov mov insl push into xor shlb push mov or cld imul into ljmp add repnz or sbb xchg mov mov mov cmpl call ret push dec arpl mov mov jne loopne sub and cli inc lds jle or fldt sub push inc call or push inc sub mov decb dec jb loop xchg add pop mov push jnp jbe jmp mov gs sub clc pop xchg push out xchg (bad) and jge ljmp jge jne mov lods pop mov mov jnp dec sarb or adc dec je jecxz aaa loope (bad) testl test cmp cmp jmp and push push dec cmp iret mov ljmp leave push arpl adc mov dec mov jno push dec rorl test mov push mov sub inc test push imul std push inc pop sub (bad) cwtl pop dec cmp jmp or (bad) cmc (bad) mov fildll xchg add push lea add insl mov outsl mov cld sub arpl into fucom daa cmp cli jl mov imul mov fs xchg mov movsl icebp add cltd xchg leave mov fs mov lods jno pop xchg xor mov leave popa fistpll sub arpl xor rcl and mov lods and shll test jnp addr16 and ljmp jg add push lea ja call call cmp push mov push inc mov clc (bad) cld mov repz mov mov and xchg jnp,pn jnp test test ja lods test and fdivr int3 mov push and add xchg pop dec pop in es daa cwtl sub xor adc loop or dec scas mov push rorw hlt js repz xchg inc or ds lock rcl mov cmp aas stos addl mov push dec add mov iret add call xchg aad fs dec sti sbb jmp aas cmp pop or nop push imul ljmp cmp das dec mov inc sub out sub mov scas dec ds (bad) add sub mov add add mov btr test push push btc call cmp pusha mov sub iret in xchg repz cmp push sbb dec jo add pop out mov lock sub add lds ss push scas xchg int adc mov daa push ja mov adc je jb test mov sub ret data16 dec xchg cmpsb sbb leave pusha pushf lea jmp pushf not stos setle setl mov lea pusha lea call jp pushf pusha lea jae push call sub clc cmp call shl pushf pushl lods pushf push not jmp movb mov push pusha pushl ret pushf pushl cmp or call into add aas ret mov jg push jl inc mov cmpsb xchg leave jo mov ret xchg imul aam cmpb (bad) add mov or pop cmpsb lret and xor jg lcall popa test lret and jge jecxz add jge icebp lds push loop pop call in cmp mov mov mov stos pusha lods sub call ret lret lret xchg js pop dec sarb jnp push and xchg cmp jns cwtl jp cld xor int mov mov jecxz adc xor jnp test mov lret stc xor push (bad) jo pop mov aam push fcmovb adc outsl cmc sbb jle inc enter jmp or idivb adc aaa arpl call push push mov ja out sarb dec sub dec inc jg or cmpsl xor pop daa test fsubs ficoml jbe cmp leave test add or sbb mov push inc lods pop dec sub icebp jns leave sub mov shll dec inc pop and scas push inc push sub fldcw pop rclb (bad) fbld or add or push adc jmp mov ljmp imul in and test mov xchg pop jecxz fistpl lock xchg dec dec mov push cli mov xchg call fildll xchg gs and mov dec jmp loopne adc xor gs xor xor mov movsl rclb lea call push call rcrb inc cmc add fs mov movsl popa mov outsb adc mov or add (bad) jb mov loope dec xchg cmp or inc adc cwtl xchg (bad) nop add push ret mov in shll mov cli jp sbb xor insl scas jns sarb jecxz sbb inc movsb sub cmp shl or cmp ss bound sbb inc xlat jbe imul xlat sub mov adc in or inc mov cmpsb jb pushf jmp scas jo outsb sti push inc jp mov mov cmp (bad) iret cld ret in mov pop (bad) mov mov test cmp scas cmp dec in xchg popf push fidivr jne pop lret jmp fcmovne scas and imul add dec mov dec add ss pop out dec les movl and stos mov inc push sbb repz add scas lea pusha lds xchg sti push inc pusha sbb mov sbb pop (bad) cltd mov fadds cmp cmc jns fimul insl dec es jmp int3 pop mov (bad) sbb pop mov mov or test scas addr16 lret clc mov lahf ss rorb test int3 inc pop push loop movsb cmpsl mov lcall or mov dec cmc pushf mov nop dec mov pop and and std cmp and xchg inc inc lds lret jl and nop das iret and jp rcr inc test mov jg mov inc insb xchg mov stc dec jne js (bad) icebp mov (bad) fdiv es iret or jg xor (bad) jae pop mov and (bad) (bad) mov sbb mov xchg inc pop test xchg (bad) into pop fiadd push adc lcall xchg dec pop jl hlt mov sbb add dec xor xor jg mov div adc and arpl mov dec jo insl jmp xchg mov (bad) mov out js aad mov fwait int3 sbb clc outsl cmpsl push das mov out das push mov jmp mov mov xorb cltd or cmp push sti jp cld arpl push xor fs sub jmp cs or jmp loope addr16 out lcall inc push (bad) mov cmp pop sbb push mov rol mov popa test mov add dec imul jne insb jnp sub out imul add gs sbb xchg pop stc xor or dec cmp cs push dec mov out lcall xor xchg sub sub shrl fldenv lahf cltd jae jp push test lret mov fnstenv add jo imul fs jb call cmpsb fwait (bad) pop inc (bad) or mov push xchg ret jne cmc fidivl lods (bad) mov sbb je pop shrl mov add pop aad xchg sbb adc (bad) iret pop and jns lahf sahf and xchg nop push mov xlat bound or push rcll sysexit pop in ljmp push add lahf xor inc into mov bound pop fnstsw dec mov adc dec cld arpl lea cli les das lea push dec mov fdivrs adc lds sub jo xchg mov sbb fcmovnu aas jl push mov lods punpckhbw mov xor test and jbe pusha pusha lea jne pushf mov pushf lea js push pushf lea jg push push call test clc add push call cld pushw popfw movw inc push lea ja adc pushf pushf push pushl ret push inc pushf setae not mov movb movb jmp add pushl movb push lea jmp call pushf pusha push mov setge mov not pushf lods bt clc sub clc push clc pushf xor jmp mov pushf pushl pusha lea jmp bound repz pop inc leave imul (bad) dec sti pop outsb mov call pop mov lcall movsb jmp mov and mov dec std xor xchg gs mov xor sub mov add push mov xchg ds push fldenv lahf xchg pop jl mov inc dec stos stc and imul add clc cmp push mov lea jb bt cmp jmp rol mov stc shr call sub bsf mov stc or push lea je neg bts (bad) testl movsb fildl sar shrd sub sar xchg bswap shr (bad) testl xchg shl add call setne mov stc movw pushf not call lea jne push pushf pusha not pushfw popw jmp mov call pusha pushf xchg push push call mov pop inc es addr16 sbb (bad) jg and push daa clc nop fwait adc jb sarl xor mov pushf in sbb lds mov adc sbb inc loope push ret xchg add (bad) sub push jge or jecxz jl fdivl sbb rcll (bad) movsb sti fmull xchg loopne (bad) sbb test push (bad) shl pop roll (bad) enter cld xchg push pop inc mov loopne stos sub clc and pop inc xor repnz cmpb inc inc lods daa xor mov pop repz and adc (bad) aad sbb test xchg es jae jbe cli pop pop stos or jnp cs push movsb mov imul (bad) adc dec ret sbb add push adc mov stos movb scas insb loope lret dec xorl mov mov mov adc sbb mov cmp icebp cli mov push push add jge adc pop popf inc mov cmp lahf in jmp test mov inc mov aaa mov in repnz add test xor movlhps add lea call cmc clc cmp js cmp push movb pushf lea jae cmc bt cmp jmp push rol call movb neg test pushf push stc not cmp sub pushf test cmp cmp pushf not lea setg movzbw jmp lea ja pushf imul push add push push pushf lea jmp inc stos arpl ss push push (bad) dec xchg shlb fcoms adc stos mov mov jnp push jae push jg push dec push in jg inc push sbb cmp cltd xchg mov sub pcmpgtb lret push mov push fimull loop jg xor mov mov and add add mov push pop daa sbb in hlt sub push out mov cmp add cmpsb scas adc add sbb in push fild mov push inc in inc mov dec inc nop ficompl pop xchg xor adc jmp not setns movzbl pop movsbw pusha mov pusha movzbw mov jmp js aas rorl inc es jo sbb fs jl sbb cmp int3 and or lock test iret or cmpsb dec jbe js inc lea data16 add mov and mov in xchg int3 xor mov cmp adc mov cmp push and sbb repz sub inc sbb jbe adc mov and jmp mov jnp xor aaa pop mov (bad) pop add adc or int xchg cmp dec or cmpsl xchg xor lods lret out das or jl sub mov push push lock std std mov xchg xorl sbb int (bad) cltd adc pop das ss (bad) (bad) cld or adc inc xchg and aam push enter fldcw adc test jno jp jle fs inc notl in xchg push inc mov adc test mov (bad) insb pusha enter fisttp loopne dec or sub mov dec pop jl,pt or jmp add add movsb scas xchg (bad) cs sbb xchg jo int dec test leave lock leave dec out lcall mov js notb cmpsb jo cmp ja loopne mov scas data16 in lods push adc adc das sbb xchg jmp test loope int3 fistpll hlt (bad) xlat dec xor out out lret fwait lods and sbb add push daa jae mov cld dec lea xor mov adc cmp xchg test mov push pop and add mov scas mov adc push mov je sbb repz mov mull push inc movsb outsb out daa adc jg out xchg ss stos adc sbb jle out es test inc stos add mov les movsb or sub xchg pop dec in mov mov or adc pop iret xor push pop shrl sub stc dec movsl pop insl sbb int3 inc jbe cmp and or negl or rolb dec js xchg or jno pushf pop push mov cmp arpl push shr inc pop imul out fbld cmpsl test imul and rolb dec lds mov repnz insl push inc push (bad) sub bound movsl xor mov jno push cmpsl dec loopne sbb cmp in jecxz rcrl outsl mov aaa mov xchg cmpsl jl dec fsubrp jbe dec ficom mov fcmovu mov mov (bad) cltd gs ss (bad) in inc cmpl insl aam test push lahf js addr16 in jle pop inc inc out jp add jl imul popa pop pop outsb pop cltd add leave sti dec xchg dec jo addr16 jmp lret xchg mov ret imulb cmp mov stos mov frstor sub mov (bad) (bad) mov bound dec mov cmp mov subl cltd (bad) jne cli call push lds jmp adcl cmpsl ss call cltd push sub mov loope push and sarb fwait in lcall mov mov lret in lahf insl insl fwait mov xchg ljmp and push pop inc mov lea jmp pushf pusha movl push movb lea jmp lea jne shld mov pushf mov add call mov test pusha movzwl add bsr adc mov pushf movb call sub pushf inc mov arpl jge or stos ja jnp,pn lods data16 jp jb outsl jns test outsl sti sub hlt js jg sahf dec jnp shll fcomip mov jg mov stos jle js imul (bad) mov (bad) out mov and jge jl std jl arpl jns inc fdivp mov jp dec fistpll jecxz cmp mov mov loope jno (bad) fwait in cmp in insb fstpt lret inc clc das mov dec sbb sbb aas fdivr out pop inc and mov int jge mov in jl sbb sub xchg or inc mov stc mov in mov into std jl lea add mov das jle push dec sbb jl jo jne mov fwait jnp dec sub jae sahf add cld aas and and jg mov adc pushl pop jge jl insl cmp pop jl imul std sahf ja mov push arpl das sub jbe stos sub aaa jge ljmp clc mov test into jbe adc ja bound fsubr mov out dec mov jns mov pusha cmc jp clc mov mov jns arpl jle imul stos aas push xor je pusha les adc imulb pop add or sbbb loope inc jl pop mov jl js inc mov in insl fwait ja gs mov adc cmp cwtl sub sbb inc imul aas rcll divb out push pop scas dec jae mov pop or in jp jbe aas aaa adc pop gs jnp xchg imul js adc test mov jo lea cmp aas jp cli aas cmp (bad) jnp inc hlt loope mov int addr16 out mov push pop mov pop cmc jbe cmp jge adc ljmp sti push inc mov jne gs aas imul sub inc insl data16 mov aaa aas test in jp cmc rcrl ret jne,pt sti pop mov aas sub imul or sbb mov mov insl fsubrs jns lds lahf fisub sahf pmaxsw adc lea stos push cmp fdivrs cld sbb inc ljmp cmp mov lods hlt (bad) cmp cmp lods test aaa ss outsb and mov imul decl adc xor or and pushf push fcmove and inc imul inc cld pop insb cld cmp sbb cmp jg inc cmpsl out or test dec jl clc adc add push or addr16 inc push addr16 nop inc test mov cmovo fistp int3 (bad) cli inc pop clc inc (bad) repz mov xor test jnp add sub lahf dec add mov sbb jnp icebp lds imulb add jge or mov ds xor jns test pop fsubl jle mov outsl fadds jb loopne fcomps mov scas or push jb sub (bad) je sbb xlat jp sbb mov push push or xchg stc add pop pop ficomp push jle push jge mov cmp push lret imul ja clc sbbb outsl jmp pop mov sbb and fmul setno cmp (bad) jnp popa roll mov sub inc pop aaa inc mov push mov mov out lahf test popa mov pushf dec pop pushf cmp push jbe cmp jnp fidivrl das lea mov mov xor ret cmp pop stos xor in add out minsd aas and sarb pop pop cmp cmp cmp mov and jns pop sahf repnz repz inc hlt pop dec jge inc mov insl inc (bad) hlt inc lea les dec inc test sbb push addr16 inc sahf and (bad) sti sbb sub gs rep cmp sub icebp inc fimul dec jne fadds sti pop mov cmp int3 dec and sarl ds test aam (bad) sub repnz xor mov ja dec or sub push popf decb mov iret cmp inc dec mov and (bad) inc test jne incb xor into jl ja xor xchg mov test mov mov mov sahf sbb stc pushf xchg test ss rcrb fucomp (bad) ja outsb dec mov loope insl cmp aas jle lret mov xor cli jmp add jmp and mov sub jo outsb sarl cmp pop mov jp mulb jbe js pop sahf jl mov dec cmp sahf dec ja in lods jno (bad) divl mov lcall fdivrl pop sub test mov jl outsl fisubr xchg dec sub jbe lret imul dec jle icebp (bad) clc sbb cmc jp mov (bad) prefetch test data16 or insb cli shr repz adcb aaa cmp (bad) cmp inc pop test call (bad) jne lea aam daa jg add pop lret imul jns clc scas mov push jae xchg into push repz cmp xchg fdivs jl in xor jle js xor mov jns cmp jnp data16 data16 jbe jp pop out divb into mov (bad) xor mov push loopne aas mov fs (bad) pushf lea xchg jno rorb dec das sub push lret aaa jecxz out (bad) xchg cld and (bad) xor jge into cli fcmove in data16 jl lcall dec andb jle mov sbb into jb imul shrb (bad) cwtl je adc jb cmp sbb daa sub xchg mov pushf dec mov std lods fisttpll sbb arpl pop arpl rcll mov repz add movsb into je sbb bound xor lea sbb jl cmp xchg mov and fsubl cs jle cmp cmp pop jg jge sub pop sbb jp mov push addps dec jge dec jle mov jl mov jge lea inc pop sahf fnstcw cmp jae lods repnz les adc mov negl sub (bad) mov jle sub int mov mov fwait pop int3 dec sti daa into sahf adc fstpt push add fsubrs (bad) icebp fwait push loop das stc jmp and and or loop jge aam das jnp sarl in jno and dec jge mov pop dec rcrb cmp xor int jl cmpsl sbb pop mov pop outsl (bad) and test gs jns imul pop jmp dec stos loop ret sbb lahf aas pop or push jno loope sbb push je push jnp cvtpi2ps xchg cld (bad) es (bad) scas xchg mov jl,pn cmp repz repnz cli dec push adc jnp push imul push aaa mov sti sub lfs dec fcompl sub incl mov mov mov push movb jae xor mov imul rcrl adc jb or cmpsl aaa jg das inc test ljmp ss cld imul scas mov mov inc inc xchg jl cmp pushl adcl in idivb jge add dec imul add sbb mov sbb mov ja mov es sbb ja and push popf mov jbe clc pop dec imul or dec mov mov lret inc sub inc add out mov ret inc data16 inc jmp imul sub pushf xchg stc dec inc inc xor lret cmovg fcmove cmpl xchg inc mov jmp (bad) (bad) cmp fstpl int cmp inc pop stc ja mov adc and cmp xorb push inc jle sub jne imull (bad) add cmp int icebp push and outsb jnp aas pop lods in dec scas mov or push lcall insl pop in (bad) jb outsl adc orl inc cmp call jnp lret inc out and ss or lcall pop fstpt cmp adc lcall ficompl test mov inc jmp shrl (bad) mov ljmp or xchg cld xor stos push mov mov out adc mov (bad) sbb fldenv pushf in inc (bad) cmc (bad) fistpll pusha xor pop sahf mov jno xlat push rorb dec jnp dec sbb push divb cs insb ret jl mov lea mov mov push pop pop mov cmp addr16 clc sar outsl imul dec data16 je fsubrl push inc mov cmp rcrb nop insl das xchg (bad) dec push cmp push sub jp push jo ds and pop mov or fstpl xor sub mov dec xchg ret (bad) rorb cs in lods sub push mov cli mov jmp dec mov sbb jns dec mov jne ret bound mov jl in (bad) cld inc or (bad) pop sahf into jne and pusha pushf mov aam cmp mov jns aaa je push imul std mov bound ror inc mov jle push lods (bad) fnsave jge and sub out std and dec mov and frndint sub les inc test jl loopne add ds lahf and pusha add add iret jbe cmc gs xchg inc icebp dec mov mov sbb adc orl cmc outsb cli addr16 inc test repnz sbb repnz inc mov (bad) pop in movsl dec xor push mov jle add gs or add es inc push xor cli in je insl mov and jo jne push cmp imul and mov pop jns das in sahf adc mov imul and push hlt mov cmpsb and lea or ret test xlat repnz jno dec daa arpl sbbl aaa mov pop jbe sub mov cmp lcall mov mov jl cli or mov cmp cld or dec cmc mov sub outsb not (bad) repnz mov mov mov jbe mov aam lock mov or sbb lcall outsl int3 test aas and cli gs ss (bad) stc mov ds jne insb mov inc addr16 push mov pop cmp lret dec dec cmpl pop aaa xor xor in cmp mov dec fnsave ds pop ss out push negb scas adc mov adc cli sbb (bad) cld inc jnp push dec gs jne cmp ds push cmp jne cmp push jp dec mov stc inc pop cld in ret dec ja inc jbe je adc sbb aaa cmova addr16 es mov and mov into sub mov add push cli sbb dec ds aaa dec add popa adc sar mov imul cmpb and sbb mov je sarl or in xor xchg das add jmp xor xor xor push lods mov and inc ja scas in stos dec push loope repnz jae,pt mov jle xor cmpsl jl ja push fsub cli out outsl lea pop dec dec mov aam cmp xor sahf ljmp gs mov dec das xor mov mulb sti repnz test shll dec pop push inc aad lock xchg jbe xchg ja jbe fs inc inc jne iret je cmp add imul outsb pop jecxz sub or or or pop mov int dec mov mov jge cltd or je pushf icebp push lret inc mov cmp mov lods mov mov insb pop out fsubs adc repnz pop pop into mov roll in mov (bad) fdivl and mov and mov mov int insl xor imul mov sub xor (bad) stos in outsb sub or aaa add jnp mov out lahf in adc pop dec clc cmp pop xor sub aas stos mov scas cmp in cld inc in pop jnp mov xor inc ss cmp mov test sbb mov pushf (bad) xchg aam addr16 test pop cli inc pop dec pop add (bad) dec xor bound jmp mov scas jns jp or imul popa pop sub int scas popf jg inc scas (bad) mov inc or sti js arpl inc imul sti add mov aaa scas aam fwait cmc sahf mov std cmp and stos inc pop cmp cmp call pop sbb dec sbb ret stos sarb add sbb bound out jae jnp and aas cmc jle jge test xor bound mov sarl inc test sahf inc std or inc sub xchg outsl push mov xchg xor dec jge scas mov ja stc cmp cli jae mov sub arpl xor sbb sub out jmp popf pop mov sbb sub gs pop mov jb rclb push pop xchg jnp pop pop sbb adc adc popa addr16 sbb mov sbb push arpl push fs cs push mov ss cmp mov in pop or jne fwait js add repz lea es (bad) push ret jl inc pop lds mov orl stc (bad) jbe cli mov repnz fadd xchg fiaddl cmp add orl push out stos or sti outsb in ljmp xchg add js ljmp (bad) insl xchg loop test call mov mov jl testl cmpsb mov sahf popa mov mov jp ja lcall mov cmp mov xchg pop mov lock adcl inc mov (bad) jmp or xchg jle jne pushl and outsb jbe sbb mov (bad) std mov pop fmuls aaa xor or sbb mov push jno mov fwait lcall cmpsl xchg sub sbbb inc push imul nop iret insl (bad) mov push rcrl int mov jp in push inc imul fnstsw testb and inc in add jle aam xor jne icebp mov bound std lea and dec jl mov and test mov (bad) cmp cmp jo or jbe (bad) adc ja (bad) push test push fdivrl lods jl mov (bad) loopne jbe xchg xchg dec inc push jae fdivs dec push jge jne jnp repz adc insl into jo cmpsb movsl fistpll sti idiv sbb pop jnp pop pop cld push dec xor std imul add nop jg,pt (bad) mov push insl (bad) jle cmp mov (bad) fisubrl mov cmp adc jae mov pop je and test cli dec mov neg and push mov ret sub call sub pop jne pop test scas lret jno jl add mov sarl mov jge and arpl das and pop mov jle mov sti or ds int das mov sub xor xor push aas dec (bad) sub cli shl sub mov popf push xlat sub cli xchg cld mov mov sbb mov inc inc ret in scas pop jmp push xor mov outsl insl push xor (bad) in or inc scas jge mov cld ja mov inc jb inc insl pop xchg scas cld loop idivb shrl push push adc sbb sbb dec and pushf mov sahf (bad) mov xor decb jle cwtl js jl leave mov sub insl xor adc pop sub push cmp in test stc sahf xor push bound sbb pop outsl jle jp pushf xor imul aas outsb and fild xchg gs icebp inc dec xchg pop inc xor test sahf push sbb mov mov test leave pop mov xchg xor mull out mov adc cltd test push inc cwtl aad call movsl mov dec inc sbb data16 jne imul pop sub scas fdivs jnp and lods sub ljmp or int dec inc adcb popa sbb mov dec sarl stc insb (bad) xchg push fistpl inc add jb sahf xlat or xor jns lods loope,pt popa iret insb ja fmull jnp mov sar sbb dec pop jno fyl2x jecxz jle stc inc outsl mov ss mov push jnp jle pop loope mov scas cmp in xchg inc push adc (bad) fistpll inc push push ffree xchg mov cmp jbe mov outsb mov jne gs and aaa jp mov pop adcl hlt ds insb jbe int3 shrl jge dec pusha sarl clc jo and scas add fildl mov push pop pushf jle (bad) ss and cmp daa idivb rorb cmp shrb dec jge jmp stc movsl inc or fwait test bound push jbe cli adc mov mov ja,pt out jae outsl jnp pop addr16 arpl das out pop add out das dec and test out bound loop js xchg insl sub mov in jo mov and (bad) out pusha xor ja dec aaa jno mov ljmp jle bound xchg dec leave jae mov ja (bad) cwtl sbb lock aaa ja add sub imul inc mov add in xor or loope pop inc mov or mov fcomi add push jnp out out sbb adc push xor inc mov out and inc sbb jl xor test mov leave js loope daa xlat lahf xchg (bad) stc (bad) adc hlt jecxz ss fdiv mov and es lds xchg in (bad) cmp cmp in ja jecxz and (bad) or jnp jge lock jl sbb pop push inc mov cmp jae xchg jecxz add inc lret std sub sbb lods xchg xchg sub lret jle (bad) lods xchg xchg xor addr16 outsb test je cs pop lock ljmp mov sub js add or jbe (bad) aas syscall dec (bad) push inc (bad) cld mov nop sbb mov idivb jbe pop sub jl cmp aas push pushw jp jl sti and jb sbb ljmp js cmc stos sub mov dec (bad) pushl xchg jmp out les and push cs adc push ret ss dec add hlt inc xchg ja icebp mov ja jne cmp push mov xor jnp pop sti jp dec dec pop aaa mov pop dec pop mov mov gs ret lds out subl int jmp mov out mul outsl mul imul repz lds ret inc movsl push jg stos inc mov sbb pusha sub movsl push xor inc repnz mulb in mov mov add test das dec repnz xor mov test inc mov xchg lahf pinsrw inc xchg std push and inc fistp cmpsb jnp pop test adc jecxz,pn loope sub sbbb shrl xchg pop cmpsl fimull mov add aaa jo push xchg fidiv in cld dec mov lcall cmc lock sub stos adc push dec pop sarb mov dec and icebp aas cmp jl inc push cmp dec in insw addr16 sub xchg sarl mov cmp mov pop outsl ss or xchg pushf dec outsb fisubr gs xchg imul push mov push dec push sub xor cs add lods cmp sub stos (bad) jl,pn daa sbb add sbbb jmp ret dec inc in sub xor mov mov adc (bad) inc mov test jmp (bad) outsb push popf mov pop or push mov or ja pushl ds jl std mov dec ds (bad) iret jp pushf xor std imul cmp sbb je (bad) incl pop les jmp loope aam mov ds sbb push arpl mov (bad) mov out lret into mov mov mov andl or jp clc inc jo sub ljmp jp jo pop mov xor sub dec pushf and neg test popf mov cld or mov pop bound popf mov or push imul sbb fcoml pop mov pop imul repz gs ja stos inc jns dec inc iret scas and jns mov jmp pop adc dec jb (bad) frstor test pop xchg cmp push xchg or dec out push negl in aam popa lret repnz inc push stos cmpsl add test inc mov inc pop sbb xchg repnz out pop loopne jnp inc push ret jns jp scas out and cmp scas out or and scas (bad) out mov push cmp les inc scas jge ja into hlt js sbb pop lds dec xor jle inc popl jno dec movsb fiaddl xchg mov es pop test popf lods (bad) lock aaa inc xor jbe jg and mov and mov test addr16 (bad) fidiv jle sbb ljmp in xor xchg adc sub jnp mov sti adc inc (bad) fcmovnb aaa inc ret iret stos mov nop adc sbb mov je js xor cmp xchg cmpsl sbb mov iret dec xlat sahf push cld decl scas shll pop fs cmc enter mov adc and imul push ret push push sbb xor sub imul gs xor ljmp push data16 lock aad xchg imul cmp cmc bound sar sbb loope sbb mov push sbb jle mov push scas (bad) out cmpxchg idivb ja push data16 sub test lods popf xchg jle das icebp std imul fs enter dec inc ss xchg fs (bad) std jnp jp cmpsl out repnz push jbe pop sbb je,pn mov cmp jle push lock mov ret aas jne cmp sub mov ss jno lret dec jae test aas jecxz jmp pushf (bad) scas stos sub jo lds ljmp jnp sub sub mov jge les clc push and and rorl out inc (bad) repnz pushf hlt insl inc inc aaa xchg (bad) push sub jge lret sbb in orl imul gs out notb imul jle xchg pop push jne push rcrl push lock dec fwait sti std mov cli loope das rcrl push xchg fwait pusha ljmp push js xor test stos adc pushw jnp xor add jecxz mov mov xor nop arpl fdivrl push cmpsb cmp sub imul sbb pushl mov xchg sub aam cmc aad or push inc mov push cmp fldenv sub adc pop push cmc add and and insl in out sbb or leave pop lock pop pop out inc js dec daa mov pop loop inc xlat xor dec mov jb cmp js push and popa push jmp xchg cmpb stc test dec hlt test ret hlt ficomp xor xor punpckhwd xchg sbb aam imul mov cmpsb lret sub add aas fadds jge in push dec pop inc aaa repnz sahf outsl ljmp sbb jbe imul push mov rcrl aas xor mov or fstpt idiv fwait cmp (bad) pop ja mov int test mov out sahf imulb fdivp lods out pop repnz in sbb js in (bad) jo outsb negb fstpt sbb fdivrl jmp jae mov mov (bad) mov sbb sahf mov stc scas mov add cmpsl test imul inc rolb push mov xor pop mov jns cmc in mov insl inc fcoml pusha fisubrl push int das aas ljmp cmp push or push xchg dec and xor inc push xchg push jl outsl adc popf stos aas push mov jl mov xchg cmp mov int3 mov inc sub or sub sti mov gs jbe (bad) push (bad) imul sub fstl les mov xor pop cmp int xor inc push inc mov int3 mov mov hlt jbe xchg cmpsl pop in mov dec ja cld sti andb mov mov (bad) mov xchg js mov jae cmp jp push jne imul cli std xor adc ret jnp sub cmp dec inc sbb mov gs ficoml gs pusha (bad) pushf (bad) das jo nopl sbb js mov popa mov cmp sbb leave adc jecxz mov mov adcl (bad) and js clc jmp mov je dec outsb cmp shrb and or push lea popa or lock mov inc (bad) dec dec sub jbe bound xor (bad) insl ret rclb sbb lret movsl xor imul push in movsb ljmp fs jmp xor icebp adc xor repz into and dec xor hlt lods stc jae or cli imul repz jle mov mov xchg sbb mov pop push mov sbb dec repz dec push mov (bad) in scas mov xor aas insl out jb sbb inc cmp pop rcrl mov and mov or sbb jmp mov (bad) push mov mov das call jbe pop jmp sbb pop mov mov test cmp sub jno lock loop in inc mov fcmovu pop adc cmovo std inc sbb jle adc sub pop mov and add cli xor cmpsl xor mov add insb incb add mov mov std test pushl cmpsb mov ljmp jp fbld lcall sbb jle pushf sub jge sub sub and aaa je push cmp cmpxchg sub clc (bad) mov shrl popf mov pcmpgtw in sbb mov mov mov or mov outsl rorb dec pop arpl inc mov xchg cmp jb shrb jp leave push test inc mov cmp mov sbb jnp or cmp fcompl and (bad) xchg out scas pusha scas add sub push cs inc cli mov adc sub inc jne lods cli pushf jns dec int cld pop call push mov push ja xchg sbb mov ret jle lds pop sahf lret dec enter jmp inc lods iret pop sub and inc inc out aaa lret sbb jg loop xor test icebp das ret xchg pusha sbb adc ret test ds pop outsl jle pop cmc sub xchg fsubrp mov pop loope mov inc and inc bound aaa sbb jecxz hlt test pop push rcrb xor aas mov mov loop fisttpll push movsl sbb imul jge pop repz out addr16 aad lcall (bad) adc jecxz and outsb js dec mov dec cltd loope stc (bad) jbe cmp mov cmc cmp pop xchg xadd std or fistpl cmpsl outsb loop push aas mov and out dec jge fnsave jne lock ja mov push lret sbb lea adc adc fwait and fwait das lahf jmp rolb fiadd sti mov dec sbb cld jmp cli cmp jno enter and dec mov push sub hlt mov sbb rcl sub cli add xchg aaa das iret aam cmp fnstcw out das mov pop or arpl dec sbb (bad) repnz imul imulb movsb mov movsl mov dec mov in orl std jo and add pop inc cmp pop and cs push cmpsb sbb in xlat sub jle dec icebp mov iret mov cmp lahf jmp shll mov mov out or jnp mov arpl push pop jp fsubr std in cmp sbbb mov mov cld mov xor out push inc pop jp sbb cmp icebp dec ss cs pop inc sbb dec push inc push insl cmp mov out dec adc gs pop enter mov xchg cli mov cld pop jbe push (bad) sahf sti xchg add jp jne clc sbb jge adc jne or ret scas hlt xchg scas xor sbb xor sub mov add jne push aad xchg dec sub js aas inc stc mov movsb outsl adc jle add mov iret jae mov rcrl jge leave cmp dec jmp in mov and daa mov xchg or jp sbb hlt xchg jl cltd mov test and jae ffree jmp add jae stc mov xchg dec dec mov and cmc test fistl xor xor ficompl push fiadd mov mov and ja sbb movsl xchg cmp outsb jle xchg jle pop int3 fstl mov leave fistp jge cmpsb out lods pusha mov sbb xchg adc jae stc pop mov aam ja sti inc outsb cmp push test mov mov test (bad) mov add xchg sahf push mov insl and or or inc and dec xchg test jle test sub js call (bad) outsb and std pop pop mov daa inc cs jp mov out jge aas push (bad) mov jle outsl jl xor leave out cmp cmp sub bound xchg jp (bad) out mov jb xor pusha std int pop add inc cmp sbb push dec and hlt sub (bad) cltd pop mov sbb xor jl repz fisttpll add imul pop jp cmp mov and ficom popa repnz iret popw inc lret scas insb loop push xor pop cli lret subl mov (bad) mov mov dec out mov cli mov ss (bad) dec insl jo xor xchg sub call cmpsl lds dec jne dec jbe mov mov push push mov out cli pop jle add pop cmp and add push jbe das jge int imul xor mov dec push movsb xchg cld iret ss loope cmp outsl adc mov and push push mov xchg ds or or cld pushw jl mov jmp mov or lods lods xor xchg std or outsb pop js lods int cmp rolb inc lods ds jns adc leave outsb fsts iret push outsl cmp and push pop cld mov xor push inc xchg incb pop cld mov jmp (bad) jae pop and jl sbb pushf xchg jp and pop imul add fldt xchg rcrl sahf rolb cli seta jnp adc das push pop add or dec dec movsb cmp in or outsb cmpsl js sbb decl popf cmp sbb jnp cmpsl pop cli push insl fmul and dec jns and and bound jbe fincstp or enter aam insl xchg xor pop scas hlt sbb adc repnz cmp dec out mov iret out rol and lea popf ja push outsb test ds xor fcoms shr jle xor add fcmovu xor aam sub gs (bad) stos jo ss pop jle cmpsb in mov es mov fwait stos ds mov mov inc leave aam xorb arpl (bad) mov cmp addr16 pop stc bound stc mov idivb loop arpl stc xchg mov ds shrl jge and mov cmp push (bad) int int in add mov mov outsl pushf loop mov sub mov jge inc shlb pop push outsl loop jo,pn sub clc int je sub xchg cmp stc pop dec dec dec mov in push xor bound jge outsb dec pop std pop sbb sbb pushf ljmp mov xchg movsl imul mov cltd or pushf cmp (bad) (bad) out (bad) and in out fidiv aas sbb inc inc dec mov push test mov (bad) mov (bad) mov addb subl xor pop mov test in inc sbb fldenv repz pop push insb nop xor movsb or or pop cmc jae dec imul ret mov pop mov inc inc stos sbb pop sbb sbb adc dec mov dec inc dec inc out xor dec pop in push aaa inc outsb inc jne fstpl inc xchg ss pop fs jnp ss pop bound aas mov fdivrs dec sbb dec dec cmp clc sbb mov ss mov (bad) out cmpsl cmp pop adc inc sub xor push inc cmc hlt ds xor jmp div mov lret or insb cmp mov test mov dec adc jnp lret xchg gs mov ds push and rclb mov ret sub stc aas iret push jecxz adc mov sbb sub push mov push and cmp movq add cmp and sti sub inc pop testb push dec addr16 shr (bad) in sti jge sbb sub inc sub mov std push pop cmpsl enter push inc jle mov jmp outsb xor aaa inc jle adc cmpsl dec xor (bad) push jp rorl sahf and jle pop ret jnp dec push jnp xchg inc jno ds pop sbb aas mov or push add clc daa jnp dec ret out imul data16 in cmpsb int3 mov push push imul ret xor mov insl inc (bad) cld insl and aaa jge mov mov arpl add add mull sub stos push fdivrl jns mov outsl mov or cmp pushf dec mov mov js mov insb lods cmp inc and (bad) lods outsl jle stc decl lret mov sti pop inc cltd dec mov mov out jnp (bad) cld pop mov movsl sub jl stc out or mov xor lea je adc imull aad outsb out cmp sbb sbb fdivl mov bound push sahf fildll jne loope cmovl loopne mov pop jae call cmp popa test adc lods sub push insb out cmp negb jnp lret test sub push (bad) fnstenv sub dec test rcll xchg xchg (bad) and scas icebp test les fwait xor adc test push sbb (bad) outsb push ret adc and jmp or mov stc mov into push stos inc sbb dec xor cmp jp sub and push jnp push fldt add mov aad dec inc jnp cmp fcomi pushf xchg fwait inc lcall test aas pop xchg sub dec cmpsl iret jb ljmp push test (bad) dec cmp mov cmp xor cmpsl nop gs or (bad) (bad) jns ds sub pop mov mov (bad) das pop cmp fisubl in mov call cwtl xor cmpsl das sub call push repz lods in insl leave mov add (bad) out inc and mov mov aas jge ja popf lret pop fdivs out pop ss fnsave outsl or mov gs addr16 repz daa push imul mov mov pop shrb ss mov sbb xchg xchg lret jp clc dec vcvttps2dq ret inc cmp fs int3 mov inc inc sahf pop aam jmp aaa inc imulb stc adc in cld in bound call aaa inc jge mov lods dec (bad) add xor das cmpb push jge jbe js sub jp scas movsl dec cmp lock movsb pop mov in into aaa jl je jp mov (bad) outsl mov pop outsl jbe cltd push movsb bound ret and mov xor mov out jbe outsb cmp les inc aaa and cli (bad) bound js xor mov cs or gs ja add jne cmp daa ret add jae sahf add sbb add jge imul sbbb test xchg addr16 or popf cld push cmp (bad) imul repnz pop inc mov vmread pop addr16 cmp addr16 out jge push push or sub mov hlt mov ds cmp push in inc sub mov mov outsl dec lret subl inc cmpsl das pusha adc pop pop cli testb es xor aam jp fidivr (bad) sub push aad dec dec int3 jo and add xchg dec xor jmp push adc jbe gs mov add je jp data16 push sarl daa lret or pop sub lea pop gs das sbb rcrl cmpsb ds mov pop jmp jae push in dec mov jge jp push stos sub jb jb pop xchg repz pop add bound dec les dec adc mov (bad) shlb mov (bad) hlt insl jnp lods psraw iret mov pusha or and lea mov int mov incb mov test repz sarb aam das daa inc gs and rcrb sbb movsb rolb add (bad) stc sbb inc aam (bad) hlt sbb add mov ljmp insl (bad) mov jle cli pop std in inc ret pushf pop sub je pop jle sahf (bad) ljmp mov pop stc sbb lret addr16 jle out jmp (bad) (bad) out add mov pop cmp mov (bad) loop fcompl ret jno sbb std int outsl mov mov jae cmp outsb mov ja mov or out push pop or dec inc pop imul aas stos inc sub scas mov js and rol out lods mov add hlt out jbe gs xor jl je mov cld pop sub cli push mov pop cmp jne cmp and cli ja sbb test das mov mov nopl in sbb in mov into pop (bad) sbb jp int mov cmp das scas inc mov cmc sti inc jle inc insl rcrb cmp cld clc pushf mov pop out rcr int push push iret fisttp mov ret adc popa cld aas add push xchg lods sub jle mov or hlt ja jns jmp sahf inc sahf movsb mov das push repz inc jbe pop adc push dec repz mov cmpsl aas mov push mov (bad) and stos outsb adc mov pushf subb inc repnz stos sub cmp inc hlt test mov cmp sub jne xlat icebp cmc lea pop push jno insl (bad) cmp pop mov (bad) and ja xlat push mov or pop cmpb fdivr bound mov xchg int cmp int3 dec test out sbb add add psubd ds jp adc lods divb call pop and inc xor stos dec int imul mov insl aaa gs sahf jmp fxch out inc mov mov pop test lret jb std in mov inc stos sub jp lods mov je movsb add std pop sub pop test pushf jne sub adc push cmpsb sub jne ja ljmp push cmpb pop int inc adc dec adc jo cmp out aas lea lea test aam dec jae xor mov inc add xor dec pop jns dec push push dec mov das pop repnz aam data16 (bad) jo jne mov sbb in out test add pop sbb cmpsb dec into iret dec xor inc loope das fwait ret shlb mov into leave sar clc jl or jge test leave outsb jle push int3 loope sahf or les sbb mov xchg push rorb ljmp dec pushf and fnstcw cmpsl xor inc push bound add in push out jno xchg movsb cs xchg inc push inc sbb in push shr and pushf dec bound faddl out sbb inc test mov mov pop stos jge stc icebp cmp jae mov (bad) es xor popa lods scas push loope ds jle push stos stos adcb aas jp test xchg (bad) pushf mov std stos pop pop mov cmpsl dec cmpsl scas push ljmp adcl rcrb dec mov mov inc out and xor inc mov add test (bad) cli daa adc mov xchg bound mov stos fild insb and push cwtl in jg dec (bad) (bad) xchg cmp cmpsl inc scas jne sti imul mov imul ss in int aaa pop cli int3 sbb inc dec (bad) lea (bad) sbb in shr das (bad) pop out out int3 cmpsl push es lcall test jb mov int inc sbb push out add mov push mov shlb std es xor inc push pusha xchg test fsts lods sub (bad) mov xchg call adc mov pop and jl adc into aaa push mov inc inc call (bad) jnp mov aaa push adc mov sbb cli jmp cmp jbe inc fidivl and test (bad) cld sub insl dec ss ficomp pop in and (bad) xor sbb fcoml jg jae imul push shrb mov pusha (bad) aaa mov sbb fisub jbe sub dec jmp sahf fwait outsl sub cld scas dec cmp mov jae cld jge mov sub shrl sbb sahf inc scas invlpg dec jae mov pop clc pop or jns addb clc jle add (bad) and mov and push out fiadd mov fistpll inc jl insb les js jne test js sahf inc mov dec mov fcmovnbe add shrl xor cmp xorb in pop cmp xchg push jo inc js pushl jns dec sarl xor mov sub cmp jns ret push je es (bad) pushf jle lea pop mov mov sub xor jns mov xor ss adc mov mov mov mov xchg aas mov imul mov mov push std and fldl and in aad xor and mov faddl lcall cmp lock fdivp andl lcall mov je repnz (bad) inc mov xchg repnz pop push jb (bad) aam shrb stc lahf shr mov push mov (bad) bound enter call and adc pop iret repz pop push mov testb lods dec push mov mov dec mov push sub divb mov iret sub aad pushf jmp ret xor xchg adc pop mov mov add mov mov jnp lods js xor add sub push cmp cmc sbb sub pop jg ret mov mov repnz ds insl inc mov std mull pop sbb pop out movsb cmp jne cmp dec push sub mov xor cmp cltd (bad) aam stc outsb push push jp jmp cltd add xor repnz repnz cmp jge fucomi pop mov pop pop pop mov push fidivrl lods je inc xor or jno mov (bad) mov mov dec fcomps jae decl test mov mov add frndint mov fbstp pop js lds fsubs lea out fcmovbe test into and or push fs repnz test mov test cwtl repnz lods es into popa cmp cmpb cmc dec dec int arpl xchg cmp lcall inc scas jnp iret lods pop fldl test arpl lods inc (bad) stc js dec pop mov pop mov mov data16 jl cmp dec fiadd cli mov jg,pt and fimul cmpsb inc mov int dec pop mov cmp pop imul cmp jae cmp ss addr16 dec sbb pusha pop mov pusha outsb xor and and mov dec mov xchg sub cwtl mov aas in dec out xchg push imulb repz or dec insl test pop cld pop adc add mov xor jmp (bad) sbb rclb push sub and pop inc xor arpl cmc lret outsb test (bad) neg pop fadds mov imul inc in pop push inc cmp (bad) cmp dec jle sahf ror stc out dec je test ss xchg push clc test repz jne cmc mov cmp in xor push enter repnz push mov pop add loopne lods xor daa inc sbb sub inc lods jae mov or jp fadds pop dec xchg jmp inc jo stos test rorb ss or cli inc xor bound daa in imul cld mov sub repz fiadd mov pushf (bad) dec imul cmp test sub scas leave xor int3 adc les (bad) mov and pushf mov mov mov (bad) cmc inc dec cli inc cli xadd inc adc xchg cmp or dec jmp cld sbb (bad) mov testb inc jbe inc sahf into jle add in and and dec lock aas popf ljmp jl jno mov fisttpll andb in push jnp mov adcb aas (bad) jp fisttpll scas or inc cmc add xorl mov loopne jp inc das outsb sbb out push push dec sub cpuid adc bound lea adc scas mov xor inc mov adc jp xlat imul xor mov sub push xlat pop mov mov inc sbb cmpsl aas cld ja cld stos inc cmp in cli into adc xor xor cli inc mov cmp fistpll push (bad) (bad) adc js (bad) jp cmpb inc dec ljmp xlat pop adc data16 sbb imul jl jecxz inc dec (bad) sbb mov repz cld pop cmpsl test test in cmp cli and movsl jl lea std mov xchg das xor clc jae scas (bad) dec bound push lret call add mov pop je insb into bound int fdivrs jge jle test mov divl cld imul and push bound inc adc fs pop jnp (bad) imul hlt loope mov scas inc push push push xchg imul pop xchg iret in mov or fsubrs push fldt mov in repz lcall and dec and daa imul enter lds cmp sub push xlat fdivp jbe mov (bad) jns ret jmp pop fisubr imul mull (bad) pop repnz mov and xchg sarl (bad) xor xlat ja cmpsb sbb jmp test ror xor mov arpl loope sub xor jbe sahf mov sti inc jmp (bad) push in mov sti cmpsl nop es shrl mov fistpll scas xchg or loop xchg mov push jle and xchg inc inc std push jg push pushf rcll repnz xchg mov jge dec (bad) mov (bad) (bad) pop rcll setg sbb scas in fcmovnb ret repnz out imul or in push mov out sbb test stc jo (bad) (bad) xor sub dec out in inc outsl pop mov std mov mov addb mov (bad) out xor out stos inc pop xlat or jmp inc sub loopne out mov lea int dec imul inc stc pop out dec adc cmp xchg js mov bound stos jne xlat adc mov inc sti fsubs popa out fiadd ja xchg xchg jno fs jae lods aaa out xchg and sbb mov mov mov roll fwait cli mov inc insl xor pusha mov jb dec dec and stos inc push (bad) jle rcll and cmp outsl xchg aas jge test cli mov xchg in dec pop outsb dec pop jle aas mov test dec sub jge push stos andl movsl mov xor mov ja outsl decl jae push mov aas bound xchg mov xor mov push inc daa inc fistpll or mov in test add rorl cmpsb jnp int insb mov inc aam add pop mov hlt inc push pusha mov push cmp (bad) jae test mov aad imul or std add jns inc mov outsl out lock dec mov in inc push sub insb sahf rcrl std xchg push add mov mov jmp adc jl mov pop and pop aaa pop dec out sarb pop xor jns pop pop js pop outsl jns fucomi in ja lods push mov jnp mov sbb pop jbe push dec jp jno dec inc (bad) out jle and jl pop dec js pop outsl outsb dec fildl jns pop dec js pop outsl insb dec fucomi push je repnz repnz std out pop xor pop js push cli outsl jge fucomi cmpsb ja lods push mov jnp mov pop scas and push js cli jge (bad) mov sahf movsbl je mov add or mov je lods inc mov inc or in jnp xchg enter (bad) or push daa dec stc sbb neg jnp pop pop mov sbb lahf not push rcll push pop scas pop aaa push cmp es stos out out xor jl dec outsb testb repz aas sbb ja insb pop test (bad) mulb out cmpsl jne mov jnp dec outsb aaa sub jne ja (bad) xor je aas and shrl cmp mov push mov cmp lret out mov in enter add aad pop out jbe mov daa mov subl sub pushf addr16 ja test data16 ficomp push fildll jmp movsl jp (bad) in loope sbb lea lods pop decl mov (bad) in mov xor push out mov popa out shrb sub sub mov mov js mov js and fnstcw sub xorl mov jb (bad) dec sarl inc mov jne pop scas xchg jns push mov and sub inc enter mov push decb cmp push aad cli push lds dec lcall out pop lods push ficompl dec lds jl jae inc push cltd popf (bad) push pop adc lods cmp pop outsb pop jno adc insl pop dec pop and popa add cmp aas cmp sahf and jmp jnp cs sbb pop and jmp aad sub in jmp xor jnp xor push sub pusha cmp sahf leave nop cmp lock jns pop mov fisubr jmp das sub xor dec fstpl divb push into cmp mov xchg in cmp pop lret pop jnp pop outsl negl xor sub pop loopne imulb (bad) outsb pop mov (bad) cmc movsl repnz sbb sub jmp cmp jp rcll inc pop cltd notb imul scas jle jne lahf pop ss pushf mov pop (bad) (bad) ljmp lods sahf aaa insl jl mov jbe mov out and std enter xor stc std pop add outsl pop test stc pop add push test mov ja mov fstl lret test inc data16 fildll sub cmp pop insl ret insl mov and int cmpsb sub mov fwait xlat call or imul fiadd fistpll scas jle mov add (bad) (bad) sbb insb imul inc sbb cmpsl jl jo cmp jae aaa ss push iret sbb insb aas lahf xor jno jns adc push insl pop sbb dec pushf subl aam and pop les hlt add test push and js roll ds pop rolb test jbe (bad) lds cmp fisttp jnp pop jnp iret push push xor int or mov mov leave dec bound popa mov jmp sti outsl stc mov or ljmp jge (bad) cmpsb int3 aaa aas (bad) in (bad) xchg sbb jb xchg jno cwtl cmp add in in sub push xor xchg fistpll lods mov incb mov rcll pop ljmp inc nop or pushf leave sub push cmc pop rclb add adc cli daa mov push cmp loope lds testl pushf (bad) ja in into push in fsts cltd imul mov pop aad cmp in sub and sub (bad) aaa out lret sbb add int3 scas mov (bad) hlt adc jo mov lret in cmp std fdivrl rol jl (bad) inc jge iret sbb (bad) mov lret aaa sahf xor mov test shrl push mov pop dec and adc jp mov mov clc (bad) fstps loope mov dec nop jbe jecxz hlt in ja fs lcall push popa pop cli in ss test mov bound xor jne dec (bad) xor out push push pavgw dec les pop adc mov int cmpsl imul loope fwait xorl mov add jp pop mov fucomp mov mov aaa or bswap mov push mov cmc fsts int mov outsl sbb jle (bad) mov jge jnp push jge ja or ljmp cwtl push sub aad inc leave idivb jns sahf sub push icebp test jbe std daa ja add je or pop lret jns sub loopne mov gs or ror or jne adc mov lock sahf push (bad) mov imul and mov lods in add push mov sti jmp movsl gs lahf jle fbstp ss stc jo mov call jmp inc mov adc stos loop pop fistpll jne arpl jb fidiv test sub mov rcrb lods dec xor sub (bad) lea test cmp add jne push (bad) mov mov mov pop cltd inc inc jae add sbb push loope,pn mov sub inc push mov lret jmp push pop pop gs add stos mov mov and ss sbb (bad) fbld add aaa cmp jmp inc push je or mov aam pop mov roll add aam in std sbb sbb mov jnp xchg inc stos jns stos cmp notb mov sahf int lods pop ret sbb xchg (bad) enter in xchg arpl mov sub aas cmp idivl xchg pop sahf dec add mov dec cmp and stos xor aaa jbe rorl divb sub ja lock dec push outsb dec nop xchg test aam sub sbb inc das cmpsl (bad) jb pop mov in mov test cmp (bad) loop cld mov dec int es std jge mov shl incb insl call ds test pop enter pop std lret mov jno jge sub aam fwait mov or pop aas mov mov xorl std jle pop call adc pop cmp jbe dec mov jnp push xchg mov gs add out inc adc repz (bad) imul dec stos jns in jp je in dec push xchg aaa outsb dec sbb in aas adc xchg jbe dec (bad) fidivrl lds lods cltd cmpb jne ficompl add bnd cli aad inc negl outsl jp pop or mov jge mov out xor dec ret mov mov jns pop dec cltd dec mov out xor dec inc outsb mov faddl ljmp popf outsl and sahf arpl push xchg and add test jb dec pop nop dec adc into scas subl jno jne xor mov inc xor sub data16 (bad) jo pop or add icebp xor mov jb inc outsl xchg data16 in mov xchg outsb lea lret fsubrs mov mov arpl sbb shrl mov dec sbb sti outsl aad jbe inc xchg cld std lret sbb ret loope stos hlt sub je jle es push int3 pop in fnstcw scas pop mov dec push fdivrl pop test inc (bad) fmuls lahf cmp nop test pop popa jbe add sub ror mov fdivrp (bad) cli enter ret loop test int ss and cmp cmp fnstsw int3 nop je out cmpsl add clc lds insb inc int cmp mov test orl inc lods int3 inc mov jno jbe js cmp push xchg outsl or mov jnp fisubr and jbe jo adc lods lods sbb inc shl test inc imul (bad) fildll adc cmp repnz dec aas mov cmp cmp inc sub in jne adc jmp mov xchg outsb into es fisttp jle daa (bad) mov pusha pusha repnz mov adc push int jge sbbl jp mov cli js arpl inc cmp imul jnp cmpsb in ss dec js and jbe (bad) shlb jmp call lods add xor cmp sub aaa ret inc test popa xor or lods mov cld mov xor lea test (bad) or lock inc jno cmpsb mov (bad) jmp inc bound ret xor nop dec xlat arpl xor lods fldcw loop repnz fistpll into pop lea inc add mov mov gs jp test cmp fldl mov in loope rcrl cmp adc cmc aas dec insb mov cmp push cmpsb cmpsl stos mov daa adc xlat cmpsl repz or or out and mov int xchg ret jg fcompl xor push mov cmpsl jbe insl outsl loop (bad) popl jo jl sbb insb xchg jp adc ss lea adc lock ja je lea imul (bad) not xchg push inc dec lods sbb mov (bad) stc mov in xchg sbb and les pop push mov push push adc sub aas xchg (bad) aas or rorb sbb jmp jnp jecxz adc js in ljmp xor aad (bad) lods rcr stos call inc ljmp inc cmp fildll jp mov (bad) mov xchg (bad) ss mov xchg insl mov xor push xor xchg cmp clc mov add mov xor jmp in sbb std inc dec xor mov addr16 loope sbb xor test jp pop mov aam sub out sbb jnp pop jmp inc scas xor es adc mov dec push mov loopne fnsave jns mov xchg (bad) fldl sbb mov repnz repnz fsub stc sub data16 mov repnz adc fwait mov xor or pop lods lea flds int3 xor pusha xor mov pop lea ret pusha inc pop pusha outsl adc std mov mov lcall mov push adc mov lods cli add cmp jnp lock popa stc pushf pop test sbb push in test insl push push fcmovnu inc sub jmp fdivrl push lcall aas mov test enter fdivr xor jne cli mov dec ja or repnz mov pusha aas leave jge,pn outsl (bad) in pop ja lods jno add shrl jge repz push xchg int mov mov loope sahf ss adc inc (bad) sbb inc pop pop xchg fdivrl or inc mov mov inc loop (bad) xchg ret push lods (bad) scas scas mov mov sti or je adc jl outsl xchg cld mov cmp ret pop sub adc mov jp inc cli sahf or inc lds jp cli lret cmp inc movl inc std inc test cmp subl pop jl mov jmp mov mov jno push in jnp push aaa test cltd mov ds add dec test add ss bound add jle jmp sub cmpsl stc cmpsb rcll inc xor cmp mov push (bad) bound adc (bad) in test test sbb fsubrl ret sub les push cld and cmp mov push (bad) pushf inc aaa mov mov mov jge add jno sub arpl out mov cltd stos inc dec inc dec pop xor fldenv sbb mov (bad) cltd (bad) mov test punpckhdq idivl sbb mov jp das jbe add mov mov mov fstps (bad) repz outsb or mov pop stos outsb int3 and lods sbb push mov mov leave jge fsubrp into cmpsl jp pop leave pop push pop xchg sub insl andl (bad) rclb out and enter mov stos imul sub xor and imul mov inc stos push cld mov jb (bad) cli loop arpl mov mov pop mov dec push inc (bad) dec pop and or mov xor cmp cmp fdivp pop pop sbbb xor decb imul js lcall insb insl ja mov dec aad pop std imul icebp andl pop inc ljmp jns mov xor scas mov or icebp imul lods add dec pop ja xor and sbb add dec pop mov and mov dec push inc enter dec xor push cld and loope gs repnz in xchg call push pop or das sbb and loop fs (bad) jle (bad) cmc faddp mov test and jle cmp pop maxps insb jns push sub data16 lret int or inc mov jl and inc mov mov mov inc jl jle (bad) in pop jne out (bad) (bad) imul jae cmpsb fdivrs aaa pop sahf (bad) (bad) jg loop mov inc popf in inc inc (bad) nop jbe xlat fwait imul ss rcrb test ret lds inc jne pop bound outsl insb add int3 cli mov pop pusha jae pop ljmp push call inc lock or mov push push jnp cmp lds mov add int stc mov ret jnp lea sub cltd out adc lea pop jmp cmp rclb inc cmp fdivrl mov cmp pop or lcall fwait loop (bad) aaa xor adc into fldcw jne jl sub pushf js adc loop push xor and jbe cltd lods mov sub add popf mov mov das dec jns mov lret popa stc mov jle jge and (bad) insl mov cmp ret cmp cmpb shr mov sarb sahf xor (bad) or mov ret sbb insl fwait pop push frstor fdiv sbb jmp insb add fsubrl pop mov adc fs or inc push sbb dec adc pushf adc outsl xchg imul clc inc jae pop lahf push inc stos cmp dec and inc mov loop mov push addl sub jg mov or xor int3 pusha mov (bad) enter insb and jl mov mov test adc inc lret call mov xor arpl jnp sbb push xchg jne mov cli adc dec xor gs inc repnz push ja jle inc in cltd in popa and mov std mov mov cmp int or sbb jno aas jne and mov inc dec cmp negb pop inc je fiaddl cld shll loopne sbb stos (bad) jo pusha cs jnp xchg jecxz ss je insl fisub jne mov mov inc outsb push dec int3 data16 xchg or sbb jmp into dec dec push or lret subl xor cltd aaa jno and (bad) insl ljmp int push add sub mov dec dec sar push mov push jne test cmp lods aad cmp jmp add jne jle jne bound mov jle (bad) jnp cli inc rol cmp divb mov mov in jle jmp add jmp jnp test sarb jl cmc jp inc lret aas push mov stc mov aaa repz mov xor cmpb pcmpeqw outsb inc adc pop pushf fdivrs cmp std inc ds adc fidivr lods cmp cli add std and (bad) repz mov iret sti dec (bad) (bad) jbe ds int lock addr16 mov dec dec push cmp ret xchg ljmp and bound push xor push xor push xor mov sub pop fidivr fistl push cmp push cli pushf ss dec pop and addr16 and in jge push lahf sbb mov and add pop outsl jp bnd jge add or inc jmp cmp stos cmp xchg insl add cmp cwtl mov jl pop jp lahf dec dec or in leave adc out mov or faddl push jge cmpsb push shlb js sbb inc popa add mov aaa hlt sahf mov mov sbb or adc jne ss dec mov adc push sbb add divb call fs cld mov call scas cmp sbb cmpsb test (bad) push fist cmp in cmp outsl inc mov fisttp jge jae,pt cmp dec ds inc fisttpll andb (bad) int3 (bad) repnz jl lcall insb pop or stc repz jmp sbb aaa (bad) dec insb into jp jge cmp xor push fdivp flds outsl dec into repnz iret mov jle push pop pop mov lods movsl and outsl mov cmp cmp std push stos into lods push and jns,pt mov sbb cmp sbb rorb inc inc sub imul and push out mov dec dec sahf sub into xor imul pop add sbb pop xor xchg stos jo test mov fstps jno sub cmp xor xor add std out inc mov ret flds mov in mov test pop xchg rdpmc loope inc int3 in fwait in out jmp fstps cli xor jb popa aaa jno push scas aaa ret and (bad) jnp inc xchg push sbb fisttpll push faddp jmp mov inc imul adc pushf jmp inc dec cmpsb jmp mov add lods stos mov push ljmp call cmc lock inc cmp in cs lea lock sti xchg loop mov mov xchg imul jae incb test cmpsl or lods fisubr dec or inc sub outsl pushf mov lods dec jle sub mov jge inc sub (bad) test (bad) out mov push pusha jg lds inc or adc mov jnp outsb jmp xchg imulb inc (bad) jp jbe cs or cli cmp pop cmpsl cmp addr16 cmp arpl xor push (bad) jmp mov mov push cmc push aaa pop jnp inc jnp int sub ret mov iret and int sahf xor cltd fwait mov add lahf inc popf out inc mov dec int3 call (bad) mov pop cld loopne adc or push imul push jnp repnz sbb jl dec sbb jp ss cld xor push mov scas push mov push xor jno sub push outsl mov dec mov cmpl mov mov aaa mov dec test sbb outsb repnz (bad) shl cmp into dec sbb orps push ja pop pushf inc les push and dec jno into dec and jae bound rolb mov out inc cmp inc cmp pop movl stos dec sbb mov lods fs jl lock jecxz and inc js push (bad) repz stos dec cmc mov std sbb cmp jns fist mov or push push jmp inc mov sub int arpl mov fnop faddl inc (bad) (bad) or movsl dec sbb daa xor (bad) and mov xor gs mov loope ret mov jecxz (bad) repz or add add or fldcw daa pop decb inc cwtl or addr16 mov daa cld das and pop jp (bad) lret mov and (bad) mov mov test mov sub or xchg in and (bad) dec mov ja mov push push mov es xor jle mov repz jp push jne rorl xlat movl fcompl cmp sub popa push inc scas jae dec loopne inc xlat jae clc jns cmp dec cwtl jp (bad) pushf bound cwtl test pop cmovno jmp add dec je pushf inc mov aad rolb cmp in and enter dec sahf fcmovnu aas pop loopne and arpl sub inc mov lds test das sbb adc std nop (bad) push pop cli push sbb push movsl mov popf dec pop mov lods bswap scas jbe mov iret dec xor push mov dec sahf mov mov movsl jmp ljmp and lcall adc inc jle ljmp mov insb dec cmp out adc add cmp xchg sub outsl bound sbb ds repnz or push test mov xor aas sbb cmp lahf sub dec mov gs push je cmp aaa (bad) push lock xor ja pop test sub fdiv inc pusha cmc add lret les sub arpl std or mov pusha xchg cs jge pushf stc out jle lret or or cli cli std pop cld cmp cmp lahf sbb mov sti pop pop mov out mov dec cld sub je jge int3 aas cmp (bad) daa lods mov and sahf xor mov mov jnp cmp inc and mov mov add jmp imul fs jge aaa sub inc sarb mov ret sub es ja jnp or das dec cmp and push jle sub lea test jle mov jbe (bad) dec in inc inc inc popa lds inc adc js inc test sub ss sub jp inc pushf jns sbb xor inc imul adc cli or inc jle and and or xor dec iret jp jmp xor push inc imulb stc ss ds jge mov pop clc mov clc push loope cmp notl in (bad) sub adc inc jmp pop stos lea jge mov in dec mov or pop clc sub std rorl push jl sub jle fbld pop sub adc jb sub imul in test xor jl add mov out mov mov cmp pop lods outsb pop jle cld add pusha aad ret hlt push fimul jns add bound xor jne and mov xchg and dec pop lret pop jnp add int insl jb pop (bad) pop cmp or imul adc jno (bad) ljmp test fdivp fcmovb scas outsb fdiv push and ds jmp gs sub push jb or xchg sub sti push ja hlt mov push insb ds in pop or and mov hlt push inc jae testb stos push pop mov jbe sbb test scas inc idivl fstpl inc sub mov loopne jmp dec cld imulb outsb inc divl pop jp das jnp or mov arpl jbe jno pop ss pusha bound or mov int sub pop (bad) into ror inc test pushf das xchg mov mov stc fld hlt cmp call inc mov aad sub mov stos sub and jns ret imul (bad) mov push mov or inc push dec cltd mov jp pop call cmp cli mov js outsl imul fldenv jp jno push cmp pop pop pop pop (bad) stc mov aad sar jbe (bad) cmc pop inc jb (bad) fsubrl sahf test sbb mov jle outsb cmp dec inc inc cmp push pop fcomp test enter jecxz push insl jle std imulb ja (bad) cmp jp jns js,pn inc push popf sbbl shrb aad fisubr inc cmp sbb jmp mov call stos icebp mov subl in ljmp pop push pop and push iret dec xchg enter outsb xchg std mov cmp jns lret adc enter jbe xor imul mov cmpsl jl pop push mov jp mov and mov wrmsr dec or jg loopne,pt dec shlb je clc test dec jle mov push mov stos sbb add outsl dec xor pop int3 scas adc add cmp test aam sub sbb ficom (bad) ljmp sarl pop mov test (bad) in mov jbe lcall pushf dec outsl fsubl mov pop insb out cld gs gs ja imul outsl (bad) cmc add mov stos xchg rorb into (bad) jle icebp movsb dec sbb or je jnp mov ret (bad) cld sbb dec sub std in loop jnp,pt pop mov aas mov xor pop cmp std add bound cmpsl lods sub jmp adc out adc lods mov frndint push cmp cld dec mov jns in je xchg and (bad) in mov bound sub xchg jp pop pop addr16 xchg cmp gs or jnp rolb out jns dec inc mov stc add mov xchg xor inc inc (bad) hlt mov and mov jle test add rorb repnz add mov push imul mov xchg loopne sbb dec push ljmp jp inc jge arpl sbb cmc pop std imul cmp sti ja cs jge (bad) icebp and js out cmp inc inc sub push xor movsb or mov push push iret jnp jne dec jb fnstenv sbb stos ds inc test (bad) enter movb (bad) jnp and jns push fs mov push sbb sbb (bad) xchg inc push jbe mov cmp in ja adc inc fwait dec and je xor pop dec fisttpl jecxz pop inc loope addb lds push xor pop push arpl dec sub and mov bound push ret mov scas notb out jnp (bad) stc dec cmp jno,pt dec pop lret test je mov into loopne mov fs cmc jp jge or cmp mov outsl decb mov jl lods sbb enter mov fsincos aad push pop add aam movhps imul mov pop mov sub push aas mov mov dec push dec jnp in rcrb add xor or and outsl inc bound mov and out in das enter push lret dec pushf jns in lret lods in cmpsl imul dec sbb add fdivrl dec push iret mov jno inc inc stc outsb addl mov leave (bad) sub movsl in (bad) mov lcall lods scas xor sub sarb cli ss cmp imul negb inc pop out cmp dec (bad) pop mov int int out cmova orl jnp and mov xor je cli jle repz mov mov cmc ds mov inc je mov jo mov lods (bad) int3 sbb cs mov jl jle jnp (bad) jle clc cmp jge cwtl push adc xor pop outsb jl xchg mov mov imul mov add insb mov jne mov ja in scas mov scas negb ja test inc test mov cs fwait pop rcrl xchg inc cmpsl mov movsb mov je das add pushf sti jns lods aad imul sub icebp pushf jb mov imul std push cli dec and sub and push ja xor mov enter and rolb jne hlt popf mov push cmpsl les inc testb (bad) testb mov incl dec sub xor testb mov mov std ss ljmp imul pop daa jle ret aaa stc xchg pop inc rorb mov mov clc jae test std mov test rcl xor scas ljmp das imul or sbb test push movb jae mov mov pop mov and sbb mov jl into bound jp push jno push push jns outsl arpl pusha test push jl,pn push jo push xor fwait ss ss outsl inc mov in push data16 cmp cs orb xchg mov mov pop movsb ss sbb add sub test mov sub xor mov sub pop fwait pushl sar mov and pusha adcl mov pcmpgtd jle repz mov push mov mov mov jnp mov or lret in test cmp push stos jns,pt inc jl sbb cltd inc mov incl push cltd inc xor sbb scas fidivl dec add push mov mov xor test (bad) jecxz jle jnp jno adc mov cs jmp xchg mov (bad) cmp pop and aam outsl xor icebp imul sub jg sub (bad) xor int3 js inc jle in mov inc pop cmp cmp subl mov mov ljmp popa into sti and inc xor sbb jns xor icebp lods (bad) xlat aaa clc jle xchg or ljmp ds iret mov xchg (bad) mov pop sbb pop sbb push loopne mov mov das adc cwtl fstpt arpl aas insl out clc cmpl add js mov dec pop or lret fstpt sub dec jns movups movsl mov inc fstpt mov lcall mov inc out or in gs in into jbe inc add sub jbe cli cld orl pop repz pop xor xor inc adc popf xchg add inc mov dec mov push mov cltd inc cmp sarb xor dec add (bad) jmp push dec cmp pop xor ror sub out fwait mov outsb jbe insl mov insb test fadds and cltd cmp dec add or gs jbe or dec dec mov addl lds sti cmpsb mov mov sub jmp mov mov jp mov cmp (bad) loop lock sahf jmp shl mov gs into jnp iret in lcall sti inc mov push inc mov add gs mov sub jle push pop stos or mov cld mov sbb jecxz mov into push mov mov shl stc aaa mov mov int add loope cmp cs push je dec mov sbb in mov lods dec xor js add sub mov push scas hlt dec hlt das push jbe inc or xchg sbb dec jns jp jnp outsb jns (bad) jp sub mov and sub cmpsl outsb mov mov aas std mov mov sub push frstor push into mov dec dec jae mov xchg add pushf stos (bad) add inc jge mov js mov cmpsb imul jbe ja inc imul mov pusha xchg push (bad) fs add movl lds movsl add pop lahf sahf dec pop sbb test jns dec out sti push cmp std and push sbb jnp jle ret ja in ss cmpsl mov ret pop dec sub ficomp xor insb xor jmp inc mov pop inc mov jle jne cmp cli je and pop or dec sbb push sbb xchg repz ret fimull cli loop rcrb pop sahf les ret arpl stos dec adc (bad) jae mov mov inc mov mov cld outsb or jge imulb test cmp ret imul push movsbl fnop cltd xchg decl (bad) rsm pushf dec mov xchg pushf or daa cld addr16 lock sub inc or push cmp inc mov cmp xchg cli inc cld (bad) jno mov xorl dec (bad) scas fwait mov jle mov and ss call jge lds pop dec ja test ret mov out incl cmp lock bound mov mov idivl mov (bad) mov mov sbb sub mov xor arpl jno outsb and mov jl pop shufps mov cmp add push mov jns cmp insb lea cmpsb add popa stos mov mov or lea mov sbb pusha cmp out cwtl (bad) cwtl cmp mov xchg lock ja lret inc push lcall mov insb mov and leave cmp push (bad) mov addb and imul outsl pop inc lret sbb inc inc popa pop test xchg add ret pop stc orl jl xchg cmp leave lods mov (bad) negb test orl call add sub push js xor cmc dec xor lea mov mov seta push lods jmp jmp push insl mov jge inc jle mov (bad) (bad) setle idiv dec fdivr fdivs andb jp xor xchg movsb int3 sub sub xchg test stc push push adc lret das insb xchg stos leave loop in xchg xchg ja loop dec jbe insb call or cmc popa push mov addr16 xchg sbb or jns or xchg clc sub or arpl je std mov ret cli shlb sahf int3 pop mov movsl cwtl jg dec mov push mov out sub jae cmp xchg inc push scas pushf mov dec pop (bad) rol movb movb dec push stc jmp mov lea mov clc pushf test sub call lea ja stc pushf add add pushf add jo stc bt or jmp cmpl insl cltd mov xor sub pop vmovupd jno push cld add aam sub cmpsb pop sub and sub dec fyl2xp1 adc (bad) sbbl daa mov pop dec pushf fwait je jnp pop pusha cmp sub insl mov ret lea sete movl pop lea movzbw lea pushf call adc pop inc rcrb fisttp sub orl adcl fwait aam sbb fldenv stos mov mov leave cmpsb dec inc sbb sbb cmp sbb inc jge ds mov repz lock rolb cmp add nop mov jecxz push mov lahf inc pop call cld int mov out cmpsb push sub cmp mov lods mov fwait xchg aam push out icebp imul rcll and leave push jle or adc int3 push stos xchg stc cmp and loop lea call pusha lea jae jmp movw call ljmp inc or seta rorl iret push push popa cld cmp pushf pop xor clc (bad) sahf inc xchg ljmp sub out mov daa or lret cli (bad) push popf lret cld mov adc insb (bad) hlt push mov (bad) je (bad) sbb mov imul lods data16 push (bad) int icebp pushf icebp push je popa push adc xlat enter add and pop inc stos jb dec mov mov xor std mov stc in jecxz (bad) sbbl push test add shll imul pop insb inc sbb push add lret push popf jns sahf out jno outsb cmc add dec adc adc aam push sar call pushf jmp aaa mov das jns inc or sub rorl lods jbe orl cs imul ds ret and inc push dec (bad) xchg out push jmp mov jbe pop dec or inc outsb mov jne popf cld repz mov outsb aas (bad) fwait insb cli outsl push jl sub cmp push xchg sub sub jae ja test addr16 (bad) dec add xchg rcl ret fucomp xor inc imul pop jno es sbb cmp outsb add fcomps xchg addb adc cld cmp pop push push jmp jmp jmp push pushf pushl lea jne call pusha pushf pushf movl movw pushf mov movb lea jmp jecxz jge jp inc fwait loope out fsub les cli sub mov aam fnsave aas insl adc das lahf repnz ret mov mov mov mov cli inc and popa enter mov xchg iret pop scas test call sahf ds call ja inc mov lcall push cs push in (bad) cmp mov movsl dec cli int lcall je fs dec jns (bad) mov inc add stos rorb mov mov ja fstpl pop int mov sar jge inc inc cli xchg out (bad) pop inc sbb push add imul movsl dec jl sbb (bad) jne push xor mov ret sub adc mov movsl inc imul out cmpsl sbb mov mov jle mov imul (bad) xorl es aam fmuls int push sbb sbb lret mov xor dec std (bad) xor xchg mov xchg (bad) ffreep mov cli adc lret inc xchg dec inc xor lahf dec test sub pop pop in mov push xor fdivp mov test dec rorl pop jnp cmp scas ss ja mov bsr cmp lods arpl test sahf pop fucomi dec sbb and les or mov test inc jnp xor inc pop lret jmp mov ss xchg jae pop xchg (bad) daa sub jne lock frstpm(287 test cld and jg sbb ljmp repnz push jge dec js movsl repnz je test cs pop cmpsl js pop pushf push into outsl adc jae dec mov pop sbb pop std dec cld outsb (bad) jae fnsetpm(287 push pop movsl or sahf lea jecxz mov add icebp inc cmpsb pushf dec jle xchg and pop push jbe stc and popa and out cmc jg xor sub lods inc xlat pop aad push subl mov add aas sub jecxz shlb jecxz sldt bt add jnp pusha add pusha push pushl lea jmp pusha mov pusha mov lea pusha call xchg enter pop inc cmp mov jbe add inc into out and xor push gs mov push insb out push mov (bad) icebp out pop mov dec outsb test xor xchg cmp mov and scas sub sub sub fwait int3 sti clc cmp mov xor roll notb add jns adc push add fldl adc fwait call fidivrl lock push adc gs sti ja mov cmc sti (bad) negl sti repnz xlat movsb jge pop test inc mov fs push test pop inc xchg bnd arpl mov sub aam out fstl aam xchg lret push mov push push call xchg pop mov shrl pop ret adc and pusha mov pusha lea jmp lea ja xor pusha xor (bad) lock sub mov add dec lea add mov mov cmp mov not adc not mov call call jg (bad) decl inc jg in in sub std addr16 jne sti scas cmp js mov int3 jnp jle sbb adc loop add jp cmp add fwait cmp sub jnp icebp in jl push lret xchg dec pop cmp std mov aas neg mov decl mov lahf pusha ds aas pop loope cld mov push pop push scas adc pop push push xor das mov xor std mov and repnz sbb jge out jg (bad) or mov out fsubp stc mov ss mov xor icebp mov xor jg outsb cs lods insl sub sub test cmpsb es gs and mov sahf pop push fstpl ficompl pop sbb (bad) xchg push push aad push jg aam xchg push adc xchg jg adc into mov int lea int3 lret or mov enter jg push lds jg (bad) inc add addl mov inc (bad) sbb mov inc cmp pop adc mov pop mov cli aas das sub jg jp (bad) enter mov ljmp jbe jb add cmpsl cmp enter dec dec xchg fidivr adc inc scas inc mov (bad) fdivl dec decb movsb adc fincstp aaa shll mov cmp xor insb xchg pop jg loop ret (bad) and and inc xor jns mov mov jle xlat jge and js cmp mov fistl or iret (bad) sbb xlat push bnd aam pop mov (bad) (bad) cld outsl jg jns inc xchg out jae lock sbb xchg mov cmp (bad) sti fwait mov inc add jle (bad) lock xchg sbb (bad) and push push cmp clc pop in cmp jae icebp jnp gs cs fwait ret ja push jmp push and aad or out in and mov jb and aaa sub dec pusha (bad) psubsw out ja cli cmp gs xor sahf jnp loope jecxz add (bad) sarb jne dec das pop test mov push jmp xchg jne mov sbb jp push aas mov and xor inc popa aad pop jg xchg cmp pusha xor mov cmc xor in and inc popf push stc pusha mov ja push leave inc mov pop cld movsb rolb dec push test mov mov jg ljmp jg and aaa and mov xchg sbb xchg movsl aas sub inc outsl cmp scas mov cmp fwait pop xchg sahf data16 jg test cwtl mov jg rcl mov push je (bad) cmc jg fldl dec mov hlt out icebp jg add fnop pop incb popf ret and std jb test imul loope and jp enter fwait dec jbe mov dec (bad) pop sub mov (bad) xchg inc push fcmovu jg and pop aad adc pop arpl mov sbb cwtl or int ljmp mov insb xchg ret mov add cmpsb push test (bad) dec mov ja push jl mov pop rep dec xor add insb sarb push fucomp outsl jne jg out mov jbe xor jle cmp mov lret add dec sbb arpl dec clc push add scas jne cmc xchg vmovdqa cli sbb xchg mov fidivr outsb xor cmp dec idivb roll or ret dec js subl dec insl iret int3 incb dec js mov (bad) mov sbb popl cmc push out mov dec and movsb pop jle aas (bad) leave pop daa rcl inc add dec push (bad) xchg mov loopne push (bad) sbb roll sti fnstsw push mov lahf xor lea xchg inc repnz jnp sub je inc mov xchg push push jnp test jg bound fstpt in sub xor ret loope pop push arpl movsb scas adc cmp pop int3 xchg lahf add outsl adc mov inc mov jg xor dec adc lcall daa jns pushf jg push and les and xor pop jne fdivrl out jg jge or test mov push imul mov (bad) jg cmpb cmc xchg mov dec arpl cmpsb inc jg out xchg sahf adc sub xchg sbb std lods push jg pushf pop sub and jg lea dec xchg inc sub push jae ficoml and jno leave pop dec cmp pop jae dec mov and dec ljmp add rcrb adc (bad) mov (bad) mov pop push rcrb mov ja jmp adc mov pop stos setge mov jmp pop data16 push inc (bad) mov adc scas lods xchg sbb xlat leave lock dec push cmp movsb xchg outsl loopne mov addr16 dec in pop or jg loop mov insl and push xchg mov stos pop sub mov jg icebp ljmp sbb roll sti or and sbb xchg aaa js out lds dec or mov jg add in fcoms aam cli out mov add addr16 ret in pop cmpsb sub das nop scas inc mov (bad) dec jg sub popa mov mov add in hlt loope push mov xor push cmp jmp pop and add gs imul xchg into aaa sub cli std push mov jg (bad) cwtl adc movsl stos sti push jg test ds pushf jg push pop sahf sarl jg (bad) mov sub pop adc push jg shrl or cmp fnstcw mov nop xchg sti xlat insl mov push cmp mov dec xchg jns sbb jg (bad) ss (bad) cmp or ret pusha inc cmp lods call (bad) jg mov fucomip aas test sub xor mov dec fildl adc jg into iret push lcall test fs pop xchg mov inc mov pop imul (bad) test loopne mov stc jg ds sub sbb jg mov cltd fisubr lods or inc rcl mov mov stos mov or mov imul sti jecxz jg mov pop mov mov sar or sub loop mov or std jg (bad) and mov or lret fs stos cs scas sbb sbb dec mov mov adc clc pop push xor jg fmuls idivb jae mov les jg sub add clc mov mov mov sub sbb mov adc repnz jg jge (bad) in inc pop stc mov mov dec push gs pop mov loop pop int and jae xor sbb sbb mov push jns jg mov in pop jg xchg and sub pusha lret sub (bad) (bad) pop jb popf cwtl mov aas daa mov mov ret inc add jg out or jge in ja imul (bad) mov jae inc mov repz into and jg mov (bad) adc in add mov push cli (bad) mov push xor fdivp jg stos xor repnz mov pop lds in clc mov push adc push sub mov cltd push xchg inc cld jae jg dec add inc cmc cmp popa adc inc or pop call jae jg or mov aas cwtl mov inc inc mov jg in sub stos xchg test js sar jl cmp add fnstenv mov pop inc dec pop sbb leave stos inc (bad) in jg dec popf out (bad) in pushf pop sarb int3 popa or fimul popf aam ja push sub xor or lock or lods jmp and jg xor ret jg test cmpl (bad) mov cmp std jno cmp test aas into out pop xchg test xor jg dec add cmp repz fsts enter loope and into pop dec cmp clc leave xor jae xchg dec push inc rcr cmp sub jg scas gs ret adc inc sbb test inc jbe mov int3 jo push mov push push cmp in je sbb out mov aaa out gs movsl pop mov lds inc addb adc jg or mov loop mov pop mov js pushf aad dec cs (bad) loop dec add sub jg stc pop mov mov iret jp or push jnp jmp mov popf pushf pop movsb stc testl in jbe sub cmc or and pop cli jg mov scas adc sbb jg jp mov dec mov inc pushf inc inc or push and (bad) push jg insb aas int mov jg mulb cmp mov push outsb (bad) out add gs inc jg ss cmp fisttp mov lret mov inc jle aas xor jmp imul sbb enter mov cltd sbb jg mov cmc psrlw and jns ret cld addb into or test push ret or pop clc dec les adc cwtl push mov add hlt jg jle fstps jg jecxz adc or (bad) mov lea fwait push add jg mov dec mov sbb test std sbb int cld mov sbb or mov out xchg (bad) hlt or inc push idivb pop dec inc or push inc sbb cmp jbe mov jg leave pop push rolb movsl ljmp mov adc or inc xor jg insl lret sub xchg test jg xchg stos mov stc dec mov mov push iret cmp std aas rolb push out imul jg cmc call into divl cld or rcrl lods mov sahf xlat pop inc push into inc adc mov dec jg ffreep ljmp insl push lea jp mov dec inc iret cmpsl dec (bad) out jb mov push sbb daa jg jge pop add mov inc dec js cmp xor mov push shlb jnp inc in sti push scas jg lahf jle cmp push jae jecxz arpl jnp add cli inc test mov mov xchg aam inc shrb insl dec jg cmpsb repz arpl dec cmpsl js fnstsw push imul (bad) les lods xor xchg (bad) jg xchg cltd clc and mov aaa addl sub adc sbbl jg mov jbe mov in xor lods dec cmp jne test mov cmp sbb (bad) sti jg inc cmp sbb push cli icebp mov scas loope dec mov jl cmpl sti cmp movsl inc jae test ret mov add mov out sbb insl jle inc jne lea mov int3 es or inc mov xchg xchg or jg jno dec test mov fs orb mov leave les xchg ljmp mov sub dec xchg pop adc adc pop rcrb hlt sub out stc cltd call inc divl jbe and jle jg add in jno pop jg lds adc add ljmp jnp es (bad) shll enter stos add add clc push xor jg jle jno dec pop mov inc push rol jns inc inc mov jg and ljmp xorb pop addr16 fsubrl enter xor (bad) popa aam cmpsl inc push add pusha sbb lea repz xor outsl push rclb jg dec inc pusha xor arpl test inc stos inc mov sub or and pop call (bad) stc in (bad) hlt jl adc mov and insb loopne jae aas sbb sbb adc (bad) aas fwait mov sahf inc cmp aas xchg pop jno fisubrl jg xor movsb mov dec test mov xchg jg push scas mov aas push imul jg cmc (bad) sub stos jg fadd test ror xor jg mov sahf lret sub ret addr16 js jg enter and lock mov arpl mov mov ret xchg (bad) pop repz gs xor (bad) sti push pop inc cltd loop mov movl mov mov lock or mov bnd rcl cmp cmp jg enter inc lret mov or dec test jne cs push pop arpl les pop int3 mov js cmpsb pop test dec inc jg,pt cs out pop mov sbb scas je mov jne sub jmp cwtl jle dec add je scas loop mov (bad) lret call repnz das jle mov rcrb hlt jg pop cmp xchg idivl push insb inc gs sahf mov dec push out sbb (bad) push dec popa pop dec xchg daa mov inc sub leave push and daa loop jl (bad) repz inc jle fisubl push ljmp pop roll lods xor jg (bad) test add test out ficoml jg fsubrp sub jg jae cmp inc ret mov (bad) dec loopne jg stc or adc adc inc xchg xchg inc jg clc rolb adc push jg jo inc insb out pusha jg fistpl daa cli js sub mov jg pop ss stos add jb mov push imul xor dec js cmpsb inc les movsb cmp rcrb jg lret sub roll push mov incl loope jg sub in dec bound pusha test ret (bad) addl out or cmp inc mov bound dec mov xor mov ret mov push inc movsl add cwtl jg addr16 (bad) mov push leave pop arpl ja dec shll out lods imul pop or popa sarb enter mov enter rorb sbb jle (bad) jbe jae inc out jnp pop ljmp dec push pop adcl jecxz xor push pop inc push xchg out cmp xchg dec jmp sarl cld xchg repz cmp jg xchg insb outsl xchg jo cmpsb jg dec jp mov cmp jg add scas mov cmp (bad) sahf mov lcall add outsl push iret aas and (bad) mov jno jg (bad) jbe test xor in mov sub cmc lods pop pop jg push inc cmp fs mov loope sbb cmp mov mov mov sbb movsl inc stos loop mov jg rolb cmp jns adc fnstsw pop and scas icebp les out dec mov pop inc push test daa jmp jg fxtract mov out mov add or inc aas jnp jns sub inc mov (bad) jle cmpsb test daa repz jg data16 ja jp mov dec and cmp lods lcall sti mov out push adc inc js xor and arpl push sub jns (bad) aaa jg les and mov inc sarb shrd test xchg mov mov test pop jb sub ffreep mov xor dec mov or xlat lods leave les jg or adc mov inc rcll fisttpl inc imul mov push sarb jae rorl mov subb aas mov stc enter mov cmp xchg ret dec inc xlat lcall mov xor aaa and sbb (bad) dec je mov cmp test sub in pop inc jg imul stos jg mov js jg cltd cli je jge or sub pop jg sahf pop lahf hlt lds (bad) cmp pop adc jg sti mov xor jg movsl das pusha es lock orl mov lds and sti lock xchg and jno dec iret xchg js and sahf cmp lcall aas push (bad) mov and test mov mov dec pop inc scas or pushf lcall mov sbb divb data16 mov cltd imul aam movsb xlat outsl cs pop sti jg (bad) imul (bad) dec sub ja mov push jg aas ret adc mov pop sbb ljmp aaa cmp or dec adc sub ds mov jmp clc jg sbb shl sbb push and pop repnz fadds dec outsb fimul ret jmp jg push mov adc int push mov cwtl faddp lret add mov mov xchg jg push ds inc jg popa mov mov mov inc fild movsl mov pop pop data16 cltd adc xlat pop adc pop jmp mov repnz mov sbb xchg mov mov dec lods jg cmp push mov push xchg pop loope addr16 sub sbb and jg pop jp cmp mov pop in mov pop negb movsb inc push test cli lods stc xor jl in jns push andb cmp xchg adc in lcall dec push test xor sar pop cmpb sbbb out in out fdivr into ret insl xor or movsl add and aas movsb inc inc repz pop adc pop adc icebp cs ja cmp adc (bad) rcr aas jg sbb data16 xchg aas push lahf fcomps lret in lcall (bad) add movl ret pop or sub mov ret push and call cmpsb out mov stc dec in insb push xor add mulb inc and sbb (bad) pop std test cmpsl sarl and mov cmc xor rclb in or out cltd mov leave mov mov jg,pn jno sti pushf lds bound sti sub (bad) pushf and jg faddp (bad) mov push jo sub xlat mov mov adc ja sbb cmp mov sub cld jge add pop cmp lods lret hlt mov add or xchg sbb fild push sub rolb adc and fs cmpsl mov inc pop jne call aam push push pop mov mov xor lea ret push fistpl jg fiaddl out (bad) pop (bad) fstl add ret xchg sti inc push sbb inc aad jg pushf cwtl std das cmp pop jg inc scas dec or inc mov dec jcxz jg xchg jge xchg cmpl push ljmp sahf inc (bad) xor dec sarl cmc pushf cld out nop mov js sub jg or and xchg pop dec push adcl jnp call xchg jg dec test push cli sarl xchg adc shlb jecxz jb mov jae cmpsl jg dec lock xchg adc or inc call pop lahf popa xor push xor cmp addb xchg sub test pop dec cmp mov mov sub jbe hlt jg sub push jg das mov cmp or ja ret jns fcoms mov sti imul xchg or (bad) clc jg test add (bad) xor jb cmp push pop and test cli in jg fcomps jmp xor xchg jge jg aas xor jg sbb pop cmpsb jecxz test adc mov pop (bad) repz shll xchg sti outsl es lea push xor rol xchg fistp leave sub add mov inc aad sub loop aas jp mov mov arpl sahf dec jo outsl push (bad) xor mov aaa scas pop pusha fadd adc ss xchg jmp movd cmp jg (bad) cwtl xchg sbb test daa xchg and dec inc sahf xor push mov adc movntq sub cli or (bad) mov sub les adc js or jg loope push dec add arpl xor and js insl (bad) sbb inc or mov add and dec loop jg insb jae inc pop sbb jg lret outsl cmp scas sarb cmp shrl pop jg mov enter sbb ret pop out stos jg and cwtl cltd jg cmpsl (bad) mov icebp out jo mov gs mov dec bound xor insl sbb mov mov mov jg pushf add mov mov sbb hlt cmp (bad) cld insl xor add mov imul inc outsb dec add les ja jne adc aaa (bad) cmp dec mov fnstsw daa inc sub js jg (bad) or lahf and jmp mov mov dec or stos pop jo fisttp imul cmp add pop fldt addr16 and mov push popa mov sub mov xchg push jae dec jg insl or popa add adc dec (bad) ss or jecxz daa subb sub jg enter cmp jg cmc jle xor mov mov sbb sub xchg mov or jne push mov xor mov mov rolb fs lods push std jg push mov nop jg xor add mov movsl out popf outsb pop mov ret push ja ss sti jp cmovno fildll dec stos out add xor push jns xor jecxz and sub push cltd jg xchg inc mov jg jmp popf movsb cmpsl pusha xlat jg imul inc roll dec dec jge les ss aas inc lret jg shlb sbbl fdivl pop and and or sti jge jg insl push sbb loopne (bad) int mov adc incl arpl shrb jg ss enter and push sub xor sbb add jg cmp fstpt jo out in xorb jg ljmp adc mov ret xor sub jg sahf cltd pop and repnz cmp inc pop add sbb nop pop fs out daa pushf jns aam int fadd pop jl je adc stos sbb and sbb movsl into and jg das pop out (bad) iret aaa mov (bad) mov outsl movlps je cmp adc mov inc pop jg paddd jbe lea sti repnz lock test mov test int3 pop mov iret or lods xor xor loopne jg cltd jne and hlt scas lcall ret leave xor add (bad) sub (bad) clc xchg inc sbb jg adcl faddl push mov lock lahf pusha mov adc pop add push mov sub das push cmp sbb pop (bad) mov lcall and jg xor (bad) inc sarl pusha pop (bad) cltd pop das add jae je pop pushf sbb xchg or mov fimul inc addr16 pop data16 test push fsubs roll out loope cmp outsl outsl dec ret dec fsubs jecxz cmpsl test inc cmpsb imul cmc dec mov rol lock xchg cli pop push in test cmp outsl (bad) or pop sarl push jg mov in mov xchg in insl cli stos fs ret jg int xchg push jl jecxz (bad) xor scas pop jg bound xchg inc dec pop mov popa mov adc pop mov xchg jl cwtl lea jg sub or inc test pop lock mov repz int dec jno jg clc sti mov jg stc or push repz cwtl adc pop movsb loope push inc mov sbb addr16 fisubr push mov iret cmp repnz xchg test outsl add lret sub pop dec push fsts jg test lock mov stc in dec jb idivl dec mov mov push (bad) mov ret inc jg inc push mov scas push mov ja aad add inc push orb jne nop pop mov icebp (bad) jnp dec pop (bad) jg xor gs push lods inc add jg mov in lahf push jg push pop or aas (bad) and dec popa inc dec cwtl outsl cli push dec repz movsb enter jg xor jne adc mov jecxz outsl lcall mov mov jg dec pop out cmp mov ds fs mov mov pusha std fnstsw fsubrs push in pusha push jg push pop cmp sub cmpsb jecxz insl stc scas js out lcall arpl out mov fstps push addr16 dec test imul jg or popa jg dec xchg sub popa jle xchg and shlb cmp jg mov or jg hlt ret mov inc sbb cs jg mov rcrl stos mov xor xor sub lcall jg xchg je leave addr16 mov jge in jne les xor icebp popa and cmp je inc shrb rcll test (bad) int addl in push (bad) mov mov fwait mov or daa xchg loopne jnp dec nop lods jb or scas jo pop iret jge xor test mov fbld fiadd xchg adc movsb sub xlat push adc inc jl dec aas popa mov inc dec jg bswap mov aam cmp (bad) sbb jg icebp push popa jl stc scas inc jnp mov adc test fmull or fistp jg mov fdiv mov icebp and or daa cmp dec push cmp push inc call pop xor push mov rcll cmp mov xchg mov fisubr les mov lret pop lods jg or imul mov mov inc pop out adc lahf rcl dec inc es jg idiv fildl outsb xor (bad) push fnstsw inc mov (bad) outsl cmp pop enter ret movsb pop pop cmp mov repz stos arpl dec mov pop sar fistpll jno adc notl xchg cld lahf sahf sub js or out inc pop sub or cltd in mov arpl test xor inc mov add cmp ds sbb xchg popa xchg insb xchg daa jg cmpsl sti inc addr16 in je mov test fwait jg mov clc fidivrl xor in gs push jg sub mov or movsl xchg cmpsl mov xchg pop das sti push xor adcb jg or push imul fwait nop push jl leave mov jb sahf imul mov lock cmp shrl out les sti dec lock pop popa jne stc mov test nop rcr ja bnd and xchg rclb push subl stos inc jns rcrl (bad) push sbb xor mov das cmpsb inc ret sti jmp push xchg fildl xlat imul jmp jo jg (bad) jae pop xor ljmp repz jg pop ret sarl lods add je cmp dec fisttpl aas (bad) into sbb sahf (bad) incl inc mov (bad) ljmp das mov ja push (bad) xor jmp (bad) inc jg test sahf pushf inc mov daa fldenv and mov clc cmp xchg cmp idivb push orl imul add dec daa out mov pop mov xor jg mov arpl add sahf cmp subl test lods mov jl jg je scas pop xchg test ljmp iret jg pop or xchg rorb ja add (bad) out jnp (bad) pop cmp imul inc shrb fmull mov xorl push xchg cli stc pushf sbb call sbb jg inc popa adc aas lcall test pop mov insl out int mov inc (bad) jne mov outsl mov jmp fdivrl xchg int3 ret jg pop call insl (bad) dec (bad) mov pushf cmp mov stc test jg pop adc es sti mov movsb mov jb jg xchg jnp out and xor pop cltd mov jg repz les popa pop dec cmc pop ja cmp pop push sbb inc jp adc sarl xor int3 out mov ja into gs negl (bad) push aas push enter fisttp (bad) cmpsb jne in lea xor xchg stos lock mov mov jg int3 pusha dec add sahf pop jno (bad) not icebp pop mov sbb pusha mov lcall jb fnstenv fiaddl jg pop jp aad orl scas std test jg cmp mov movsb push scas lea insl inc stos xchg adc cmp mov inc insb lods push int add shrb cmp sub fildl pop push (bad) adc test xorl jg in pushf pop std mov lret jg jnp push pop gs aas lahf cwtl jg dec jecxz mov (bad) jg push shlb mov pushf iret mov cltd scas into adc jg sub dec xchg sub mov mov ss jg push push ljmp je stc sub jg jp or fdiv fistpll inc (bad) iret test and outsb das sub imul xlat pop orl add jns adc pop jbe push mov fistpl push out xchg jg lods push in (bad) dec je inc aad jmp in push or call js and rep gs adc jg jno stos add test gs fnstcw sub outsl jns ja (bad) lock adcl mov jecxz call sbb pop fsubl jno jg aad push stos xchg lods mov mov insl mov push xor arpl adc popf pop out mov outsb add pushf pop jg cltd or jg rol xchg cwtl inc xchg scas inc jmp pop loop dec pop dec jle jg outsb push cmp test mov mov fwait repnz ret and cltd pop push jb outsb stc mov jmp repnz test es and out rcrl mov nop inc and loope test jmp add mov mov xor sbb jg sub or mov (bad) into sti ret bnd in or push dec and push lretw mov jg stc fwait scas add mov mov cmpsb dec jg mov pusha call ret repnz pop pop jg leave mov sub divb movsl inc (bad) popf (bad) jg lock jge mov (bad) sbb inc lea mov cmpsl inc adc jg (bad) aaa sub pop and loopne add in dec mov add add dec jl insb dec xorl frstor pop in lods (bad) mov xchg jg or and aaa out jle dec push mov mov jno push and xchg jae std mov shr outsl xor jg je lahf aaa or mov shlb add scas jg jl mov arpl dec (bad) sbb aam jg adc in xchg rcll rcll int sbb enter pop inc jg mov dec lahf lcall aad or add loop stos lds fnstcw mov rcrb int3 in icebp movsl fbstp mov sar jp inc adc scas xor inc (bad) pop push jg jnp js adc push jg push in (bad) pop pop jg pop arpl sti and push xchg ljmp ds ret or jb out cs scas imull orl inc push pop fistl push outsb sti or fcoms xchg popa xlat jg cmp bound or test outsl push es jg or inc jl ret jne mov dec test inc sbb daa and aas clc rcrl mov subl repnz jg cltd sti addr16 adc jo pop add js clc int3 push add fcmovnbe jae sub ja std mov adc or jg jb out rcr mov lds fadd cmovg popf repnz push (bad) inc into mov or inc sbb dec xor jg mov (bad) in aas test and or jg test repz push push jecxz cmpsb clc or int3 pop pop fild sub aaa jg ficomp sarl xor js cmp insb xlat (bad) fistpll int call arpl mov (bad) and jg jnp pop pop or imul outsl hlt outsl xor mov test ss inc mov sub into mov or js scas test push mov cmp dec mov push test (bad) ljmp mov or jg je dec or or repz push lods jg test cmp or cwtl sub enter jg mov ret mov popa sti fidivrl pop or arpl stos push mov inc jg fisubl lods (bad) enter repnz sub add aaa out into pop loope inc lock jg cmc mov xchg cltd fld daa jg rorb andb push les jg incb aaa iret popa sarl fcmovnb scas js mov xchg sbb test sti pop mov inc aaa stos push jg jle mov in incl xchg jp mov mov pop (bad) adc jg push jnp or sub mov pop repz dec dec xor mov rorl jae fild int inc test jg lahf test mov add inc imul xchg pushf dec and fisubl jg movsb mov mov popaw jns push xchg jb jg or xchg cmp jg test ja outsl (bad) repnz dec fbld xor int jg cli dec jmp out icebp adc jp adc jns lret pop sti pusha inc jae ds mov fnsave jg clc add mov cmp sbb pusha div sti cmc jb das outsl mov mov cld push and pop lock aaa lcall inc test jae popf mull mov xor mov scas xlat scas mov rcll into push cmp mov das test push inc push xor cmpsb les cmp rclb add xchg adc outsl nop ret mov jg add lret loopne cmpsl ret shrl notl cli fisttpll or jg mov xor movsb test fs loope push dec cmp cmc sub jg bound insb jg mov ficomp jecxz aas dec inc shrb arpl adc sbb mov jae fwait rorb push ret xchg js ret pop pop movsb mov jg das push mov jg xchg push add xor add mov dec jg mov dec jmp dec rcrl imul lods ljmp pop movsl xor enter inc cmc jmp insb jg rorl mov out in xor jg pop rcl cmp pop sub pop cwtl fs cld testl push adc adc lret daa (bad) jg mov jecxz addr16 out dec int3 movsb aam pop mov push imul insb leave loopne jo add cmp aam xlat cmp aas cltd stc adc mov inc jg fs (bad) mov push sbb push fild sbb dec hlt into and movsl int3 mov jmp dec add xchg jg out or or pop jg mov inc sub mov pop popa jae xchg (bad) out aas pop inc sarl bound movsl sti mov pop pop pop rolb push mov jg and (bad) sub std das jg in add stc (bad) and jg cmc cmp pop jg (bad) dec jg xor mov jno mov mull fisttpl les outsl shll jg sub sti loop sbb jno repnz pop mov jl and std push xor nop inc into sub dec jg and in xchg ss cld dec je jg cmp inc out pop xor jbe or and lcall stos inc cld push jg outsl jnp xor jno jg es int3 sbb test out (bad) incb lods sub jg mov pop jg fisttpl js pop or xor jo jg movl aad mov dec sub cmpl lret jbe push jg scas daa lea pusha loop jg push add and cmpsb jl aam (bad) sub jg inc int3 adc call mov sub mov lods sahf mov mov int3 inc dec fsts out clc push testl xchg cltd (bad) jbe cld sub jg or nop addr16 push les cs bound (bad) jg mov jae outsl arpl jg mov dec sub adc jnp jg push xchg sub addr16 add scas icebp jg pushf rorl adc push cmp inc push mov pop into pop fldt sbb nop push test lds sahf sbb jp fmull pop xor or lods mov inc (bad) and adc pop mov dec sahf cmp xchg dec mov outsl aas fs jg cltd mov push fwait movsb (bad) (bad) xor dec dec in mov jg dec outsb push pop std (bad) js mov cld stos aas and xchg mov mov mov (bad) pop arpl inc pop fcomi lock mov int3 in inc push mov int popf movsl dec add aas sbb and mov mov pop adc add ret lods jg mov mov push in jp adc stc ss sahf jg push imul jg enter mov xor jns test sbb mov iret lret jg adc jl insb or aas mov push jae out mov int3 push loope aas push stos push mov (bad) jmp loop outsl movsl outsl and pop or movsb jg in inc adc ljmp adc xchg (bad) rcr xchg cmp mov push not int3 daa (bad) lret inc push jg mov shlb mov jg and aas mov sub sti jbe iret xchg mov inc les sub icebp arpl jg into pop xchg rorb jg pop sbb cmp mov lret dec imul (bad) xchg jg push (bad) xor ret out jg add push mov stos cltd pop scas fcmovb or fsubs into mov inc dec leave inc mov ja mov imul mov jecxz pusha push mov lods cmp lea imul xchg push xor ja lret sarl out add push mov cmp sbb dec lahf stc pusha and aas push mov cmp leave jg dec ret xor jg jo sbb decl repnz icebp jg and jo jg std or sbb cmc mov lock or std cmp mov scas push jmp adc sbb insl cmpsl jg in add iret imul jg arpl test (bad) lds push in insb lcall testl inc jg cmp out stos les jg xchg pop mov cmp pop in aam mov and (bad) mov cli mov or out jg adc xchg xchg inc xchg xlat push jg xchg cmc fisubr (bad) test stos and push je inc mov xor icebp jg cmc xor fstpt out mov sub arpl adc xor ja xchg pop push xchg insb je push mov pushf xchg aas sti movsl sub fidivr jg dec lret or or jg lahf outsl mov (bad) pop aas in ss pop (bad) jae ja dec cwtl insl adc addr16 (bad) lahf scas jg (bad) sarb scas negb push shl mov jg cmp fldt mov cwtl sub aad fs sbb cmc test mov je mov pop int3 lock dec pop cmp jl aas mov dec add movsl and jg jp stos aaa xor sarl cmp push dec sti jb ret mov addb adc lods or in ret push jg movsb ja or (bad) push jl cmp and pop jg fstps push adc jg jns mov jg pop cwtl daa mov test mov jae push jg scas jp pushf mov mov mov fcmove test lret xor hlt imul xchg jg (bad) xchg in xor xor nop inc cmp xor mov mov push or pop ljmp or out pop push movsl lds jg inc mov fwait push cmpsl add int3 add and push fs daa pop addr16 sub (bad) icebp callw (bad) ret stos ja jnp pop xchg pop into mov dec mov loopne xor cmpsb sub pop dec sub (bad) push outsb mov jg inc in aad (bad) jg cmp sarb aam jae lock mov dec mov cli xchg mov mov push test pop addr16 adc jmp inc mov jg clc mov and mov fcmove aam push mov and mov pop nop addr16 clc cwtl xor jno cmp jg cltd sbbl sarl imul pop subl aaa leave int xchg push jg pop das pusha nop pop push xchg jg mov push mov xchg jg scas xchg (bad) xor xor mov sarl aam int inc cld scas push stos lea jg enter xchg mov sbb pop pop and cmp mov and pusha add mov iret lods mov cmp ljmp ret jg sbb xchg lahf jg popa fcoml jg mov jle lock aaa jg (bad) in ds jg repz jns cmp mov aaa pusha pop cwtl mov pop jg sbb inc and sti fiaddl jg push mov and fcomps cmpsb mov arpl cwtl jg cmp mov jmp (bad) cmpsl push sbb mov and jno out icebp mov push jg push xor pop cmp add dec fs lret jg push xchg lcall cs push jns cmp aas mov dec ds xor sbb jnp push into cltd leave insl jg xor fild lods js mov jne cmpb ret dec pop dec hlt clc jbe jg or leave or push popa jg push call (bad) (bad) ljmp mov push mov nop loope (bad) mov lock lea icebp inc jns (bad) cmpb pushf out pop jg sbb mov mov daa or adc and jge test push jmp cmpb xchg and jg add js in popf mov fmull aas (bad) and add push jb fidivr pop adc jg or test jg add jl repz fidivr xor sub ds test and js add jae or pop jg mov lret jg imulb sub sti jp repz add jg push scas jmp cli lahf or lcall jae jo dec test movsl out xchg shll pop int3 mov jg pusha xchg sbb jg sbb pop je mov ss xchg jg push jbe repz xlat pop jo mov inc negl daa cmpb fisubr iret imul cmp jg stos data16 stos adcb dec xchg mov mov ja jne ret mov mov das jbe pop movsl mov and mov inc xchg dec jge jg push cli scas and mov and mov test fidiv loope mov fcomps mov jns pushf lock jg ja out mov movb ror mov cmp push scas repz test (bad) rolb jg std jle xor in loop jg jbe enter insb aas jp pop inc mov mov int test lods mov mov inc pushl inc test dec fwait xchg and xchg je adc fldenv out adc mov stos inc loope pop clc jg sarb lock aas push jle arpl pop sti aam and movsb dec jle stc es icebp pushf lods loope jg hlt stos add xchg pop mov inc pop push sbb aas xor jle arpl xchg movb jno push jbe adc jae jg je mov mov mov pop enter sbb into push das pop fwait out jo aas (bad) xor repnz mov inc adc inc jae outsb aas or rcrl fstpt call mulw xchg (bad) iret pop add scas dec outsl adc sbb sbb roll push jae xor and push push in fstpl mov ja dec movsl cmp inc adc jbe pop (bad) out sbb sub push pop xchg pop dec mov lock pop mov push sbb mov jg pop adc jg push les jg xchg xor mov inc js ficompl jg out das push jl ja mov repz addr16 and imul sub lahf mov stos aas push cmp inc test imul jg add add das mov mov shll hlt push jg scas inc mov addb sti adc xchg jae ficoml cmp jp pop sub jge jg pushf dec sarl xor cmp test and push (bad) arpl add lret jecxz aas adc fild mov in mov mov push bnd inc dec pop loopne (bad) jg movl jg or mov ret xchg mov or inc dec pop mov cld popl sbbl lock (bad) sub jl and sbb push loopne add mov jg in test and mov loope pop push jg push and negb jg sbb jecxz cli jg mov and ljmp jg or dec out sub pusha subl sub adc mov adc xor subps sarb adcl cmp pop xor add mov stos lock lods jg dec or jbe inc aam jb out jno ret mov inc push imul mov xlat or pop xor scas fcmovb cmp std mov outsl lea mov (bad) cltd mov pushf push cmp sub in jo (bad) jg sbb mov cs pop aad leave lods fdivrs cltd xchg insb inc push clc daa or jg and cli add cmp fstpt push int3 movsl pop jg imul and xor mov and insb push icebp leave xor push out adc xlat lds mov cs mov jb push cmpl mov js loop outsl pop inc sbb fsubr jg dec enter (bad) pop jg add (bad) dec inc push sub mov inc mov bnd jg lds test mov repnz ret iret dec sub cmp jg aad and pop jg adc xchg mov add jg xchg pushf (bad) jo pop test (bad) repnz sbb mov inc outsl movsb cld (bad) nop mov fwait lahf lods sub jg xchg mov js lcall mov aam movsb fldt and pop mov aad mov jg js fnstsw les pop or push xor outsl sbb jg adc push inc fidivr and and sbb inc cmp fsubr xor ds pop popa (bad) mov mov int3 and sub ljmp push jge pop insb call mov jmp movsl pop mov dec mov cltd scas jo mov incb nop ret sbb int test wbinvd jg (bad) and or jg add jg cmp mov jg int3 jecxz roll fstpt mov adc stos lahf inc stc aas xor ja dec out cltd js dec jne jbe ds sbb stos mov inc rcl js popa mov adc lret pop jae cmp js fisubrl subl aas sbb repz xchg cmp ds imul aam sbbl mov push adc push mov rcll jo in and popf pusha xor mov insb aad inc sti sbb fistpll jae mov lds dec lock les jg or mov rcll jg cld jl jb adc and push inc sub jg pushf leave add mov movsl je jg (bad) loope in scas mov jg rcrb push jg jae or fisub sub jg mov push pop mov jg (bad) add and pop jg cmp gs jle cmp roll inc scas arpl jg push push jecxz fidivl jnp xor pop xchg jg xor fildl jnp lock mov jg mov jae popa push data16 mov xor test inc jns jg mov repnz jg mov pop adc hlt lods repz jp sbb outsl nop cmp dec dec push jg call xchg jg je stc mov fbstp (bad) out add jb bound pop jmp ret lcall dec push mov mov lds inc dec mov aaa xchg pop adc orb mov lock push pop push outsb dec movq inc or jg push insb aaa cld js scas mov sbb push mov mov jg rorb notb sub das jg ret (bad) mov jg (bad) in mov jg (bad) negb jg cld jle or mov ljmp dec cmpsl push jg mov call sbb xchg fwait cld jb and pusha ljmp xchg pop pushf mov push lret (bad) xor sub adc lock pop sub jns jg popf jle jp fucomp push leave jg aam cli outsl jae mov pop gs pop push inc jg inc decl loope jg dec arpl sbb into jo dec pop in and push lcall out mov inc test and push lods add or loopne les add cmp jg call pop popf jg push mov xchg inc add add lcall mov call aad dec mov mov call lds xor cli shrl cmovno jns outsl (bad) mov (bad) loop and jg cmc sbb pop jno lret jg (bad) cmp popa loop dec lea and push push mov or test leave xor stc sub ret sti jg lods adc shr jg jle (bad) pop mov dec repz es jg aad pop jmp js mov sbb dec adc aam push (bad) and cmp or adc mov out push add (bad) and cmp and xchg sub jg xchg pop jbe cmpsl dec sarb adc mov jg sbb cltd call aas jno popf jnp mulb loope divl mov decl stos pop and jl,pt xchg push cwtl inc push cmp mov scas push jg in test cltd gs mov mov jg sub out mov and and (bad) jae repz test int add jg popf pop adc ljmp xchg pop ret mov loope mov mov daa or data16 les imul bound repz bnd mov lret movsb std cmp (bad) (bad) loope push cmpsb pop test hlt jg push enter cmc pusha jg pop pop lock dec jg push mov pop mov out addr16 sbb cwtl mov add jg inc fildl stos push lods fistpll mov sub xchg mov cmpsb mov adcl leave pop jg rcll mov mov loope jg scas hlt repnz test arpl adc shl (bad) imul sbb jecxz dec cmpsb or jg mov pop mov jg into or data16 or cmp inc pop jg add xchg loope push fstpt repz jg or mov (bad) pop mov jg mov insl inc adc inc jg loope les jns pop mov sbb cltd dec lea inc or (bad) xchg mov idivb push jo test push add (bad) fldcw jg sahf inc ljmp jo movhps push iret mov and inc dec cmc push cmp out jg rcrl (bad) aas add int3 or xchg out loopne fidivrl andl jg popf aas push cwtl and out cmpsl mov dec test repz mov jg dec in lret std fs push fiadd mov adc jge jo dec pop sbb mov mov sbb cli test jg jo mov and jg push fisubrl sbb (bad) aas into (bad) aam fstl test mov ficompl into iret xor mov inc data16 mov stc or xchg fdivrl out outsl (bad) push (bad) movsl inc lock jne fiaddl cmp add repz (bad) pop xchg mov inc dec push jg or mov xor insb inc fisttpl out mov push push jmp mov mov sarl fwait push or aad jg ficompl dec jl and jg enter jne fistpl xor cmp shll out pop xchg mov andl mov arpl icebp jg mov loopne fsubp ljmp mov jg push or addr16 jg xchg jmp xchg jg std cmp inc mov mov aas cwtl jae inc dec in jg sub sub mov lds jg cltd jge push mov jg mov mov push pop fs xchg xor push mov mov movl mov jg cmp xor pop fnstsw push xchg cltd mov loopne adc cmp lahf test cmc lret inc dec and hlt rcr push mov sbb adc jg mov fnstenv push aaa (bad) xchg inc (bad) mov int push cli mov arpl (bad) pop test inc mov ja inc jnp mov neg mov outsl adc jo in mov test add dec iret pop outsl lods es mov push jg push insb mov jg pop in add pop xchg sub jp or xchg rorb mov call jg and or inc cmp adc dec stc jp (bad) addr16 rol xor pusha or xor pop lods jg cwtl fcmovb jbe push (bad) push jns push mov sbb test insb cmp mov dec adc into je jg les cmp sub and mov (bad) or int3 in imul push cmpsl andl scas mov xchg jg leave sub test sbb add sub (bad) mov jg movsl outsl (bad) bound out call inc fs add cmp sbb (bad) jb popf aam aad or jg pop cmp sti inc jg jno push rcll lds cmp adc jg cli cmc mov jg xor shrl jmp negb (bad) cmpsl in dec sub aas mov jg pop sbb leave jle lods movsl mov (bad) arpl imul je xor jg cmp push push test into enter jg cmpsb pusha xor push mov hlt scas sub js fcompl ret jae loopne jg mov sahf pop ljmp jg pop fmuls pusha or rclb lcall jg test add fistpll jno mov inc arpl inc scas xchg jg sub dec pop bound inc and xchg push push jo adc add push jg cmp add cmpsl outsb and push scas (bad) mov mov subl sbb jns xor ss inc pop sub mov ret push loopne lahf fcomps jg stc sahf inc stos cmpsb insb add jg dec xchg test mov jae icebp rcr std movq xchg ljmp orl divl test in (bad) jg mov cli lods sbb jg cltd xor inc ror sub xor pop loop scas sub daa js imul (bad) dec jne jg add inc jg nop loop jb out push dec xchg (bad) jg scas stc cmp mov mov das add jne dec sbb dec std xor lds and mov or mov jne loope jmp inc jg shrb outsb jecxz loopne xlat jg gs xor jmp sub pop add mov ljmp and mov sti cltd jg xchg out in aas xchg jg and iret insb add pop jg push push popf sub arpl bound jg cmpsb inc cmp jg into dec cli mov fs (bad) and pop dec inc int fdivrl sbb adc loop adc push fwait test aaa shl inc shll cmp popl sub imul xor or xor inc jmp pop cmp or pop pop lahf dec out mov mov mov jg and sarl xchg idivl jg mov jae mov add push sub sahf sbb in lret mov cmpsl pop fcomip imul pop pop iret dec mov sahf inc xor jg mov dec ljmp je lea (bad) ja popa jg pop jbe insl adc mov imul fstpt je adc jg and aaa sahf xor lock push jg (bad) ja mov loope xor mov cmpsl jp imul add fnstcw out mov cli jbe movsb jg and push mov pop or mov ret xor inc jg (bad) movsl sahf mov xchg out fwait jns or lods fstpl repnz and loopne fs jno cld enter mov jg mov jg insl into push cmp jge jg callw cltd mov push cmp cmc mov cmp mov jg int3 push test mov ja mov sbb ret das lcall or rcrl fwait mov cmp inc jg sbb xor jg adc cmpsl pop fnop jecxz mov fcoml outsb jg loope pop in lods push sub cmpb push sub xor lds mov jg mov sub fstps ja rcrl (bad) mov jg stos pushf pop in cld sub push pop das cmp mov jg loop pop push int3 mov cmp jg ja iret cli cwtl clc mov mov fwait jne jecxz jg xchg popa and mov mov lcall mov pusha aam hlt dec push xchg cmpsl mov pop in cmp jg mov daa add dec push imull xchg xor fidivrl jl jg and push pop sbb jg inc cmp imul dec gs jle mov enter jg push test dec pusha or lcall repz jnp,pt pushf jl aas push jb aad mov xchg pop mov jg jae rcrl adc mov push jg mov mov mov jg stos leave (bad) fldl jg nop in jecxz cs jg int pop lret dec rorb or jg push loopne test cmpsb mov andl sti cmpsl jg fnstcw push pushf mov jg leave push repz mov fdivs jg or push mov xchg arpl ljmp xchg push push sahf xor insl sbb test and out scas fild mov cmp cmc pop in push add and scas lods jg jns je fwait test neg int3 push sarb cmpsb test ljmp in mov insl mov inc cli pop loop lcall mov mov jg dec jno jecxz out and pop addr16 js mov and cmc pushf jae lret mov jge dec mov cli bound and sub inc mov jge or aad cmp push jg iret inc lods or sbb ds pop adc loope pop sub fadds jnp out pop mov aas mov sub dec in jg add (bad) out loop jg push rcl shll fsubl mov jg pop jp in mov imul aas jno outsl jmp lahf jg or stc (bad) mov pop cmp mov jge out jmp jg and mov lret sarb out adc test sub jg push add jnp outsb test pop jg xor call es (bad) mov int3 jle outsl xor dec jg jl arpl jmp into cmp (bad) aaa add pop jbe lcall dec sbb cwtl shr and lods mov inc insb add jno or pop mov dec in jmp je rcll mov dec inc loop aas jge xor cmp mov jecxz push mov xor nop jle xchg jae mov ds add push and xor jg iret jno dec sub ss arpl cmp test in insb fs and out and outsb out inc pusha pop enter (bad) cmp cmp push push cmp jg jp out add subl jnp and testl test cmpb push dec sub leave mov fsubrs pop cmp iret push add (bad) icebp push xchg xchg sub mov mov fnstsw movsl add shrb inc adc jg xor adc dec jg imul lds pusha pop cmp movsl cmp inc jp jg push ljmp (bad) adcb lahf pop xor dec (bad) xchg cld pop push and idiv scas pop outsb add dec jne es sti loopne (bad) out leave cmp push shrl adc jg clc push pop aaa push mov push mov add jg fwait outsl or aam jmp addr16 jno xchg stos cld pushf jecxz jg imul nop sarb rcll push jb scas dec ret xchg xchg fild lods jg in clc lea jg jns icebp sub stos push je cmpsb cs and outsb fs jo jg push jno mov and outsl adc loope inc mov jg jne lods mov jb mov jg,pn lahf mov mov xor inc jg sub jle mov mov in sub add push sarb jae xor insb push inc cltd jne cmp mov dec mov lahf clc jg and outsl nop xor ljmp ret pop adc (bad) dec sub jg xchg out outsb hlt xor ljmp push add movsl dec mov mov outsl sbb lea aas jge adc mov jg cs (bad) fstp fs (bad) xor sarb jno cli jg sbbl mov insl ret imul in and jg mov mov jg push lret test inc cmpl lods xchg (bad) aas mov rclb subb sub std xor dec sbb clc int jg jno shrl inc mov pop bound call outsl jnp mov mov int dec or cmp pop ljmp inc sbb cmp pop add mov inc sti adc out in add jg mov les pop jne xor jg (bad) mov jg ds or sti dec mov adc push dec adc notl xchg popf scas or sub call jg mov mov jg arpl (bad) jae pop sarb jp cmp jmp or loope jg pop xchg xor pop adc flds add inc xor aas in adcl outsb mov lret stc sub (bad) dec pop add xchg je nop sarb lods pop push lret outsl inc movsb mov cmp jg adc pop cmc aam xlat cmp xchg or mov in daa lret loope push adc aaa movl les jg cmpsl jmp inc push mov lea jg inc lret mov dec stos cmp in dec or movsb xor bound test lahf mull inc mov ja adc xor or and jno cmp shrl push pop idivl lret clc jno sub and adc dec fsub imul stos aam add ffreep push addr16 jg (bad) jbe leave sahf mov jg xchg das mov std cmp add sbb jg push jne je in je xor jg lods loop scas jmp jp push dec mov lret (bad) in jg gs add add out push mov iret cltd dec and jg adc mov cmp fdivrp (bad) leave lods fmull push pop aad loopne xchg push mov andl and mov jg lea in aam (bad) pop pushw cmp push enter jg xor cld mov icebp lock ds jg iret test cmc jge push push dec push sar jno ja repz xor ss or xchg jle jg xchg mov jg negl fdivr insb jg cmp imul or int3 and mov int lahf loop jg ss mov pop jg pop sub lods mov pop lea lea push ds jge or pop mov jne jmp mov icebp xor add je pop lea je jg xor jle addr16 inc ucomiss xchg sarb test fmull lret ret bnd mov (bad) jg or and inc popf cmp dec jg stos mov jge jg andl add mov mov dec shr test ds ret or (bad) shr jns cwtl movsb in mov ja ja jb add xorb mov leave (bad) mov ds mov nop mov lods cmc jbe scas jle jg outsb mov leave jg lahf shll sub jle push and call mov ljmp mov call mov jg push pop pop push jg scas stos or pop dec inc mov mov das jnp mov loopne movq jg cmp pop roll jecxz (bad) or outsl outsl sub dec and mov mov xlat adc jg cli fwait movsl test push js xchg aad outsb (bad) popa bound popa jg int3 sahf cmp ret fucomi jg mov adc and js popf negl ja or mov xlat lock bound gs popf push pusha inc clc xor sub adc mov dec adc cmp loop mov pop shrl lahf repnz mov inc cmp cmc cmpl scas jp xchg cmp je push inc es stos add arpl or push push lea cmp daa aas jno xlat insb jg jmp inc jae push push ret out jg inc and lret data16 rclb int3 add insl pop mov cmp pop negl imul cmp adc cmp xor adc mov xor xadd jg inc stos scas ret popa mov xchg js gs fnop mull das cmp pop jo cmpsb rorb insb ret aad das stc outsl xor mov ud2 sbb add inc sub ljmp jg (bad) inc (bad) jbe add jne pop pop cmpsb pop mov xor jg (bad) and push mov (bad) push xchg pop lahf insl jg insb sbb stos cmp stos lods aas push and jns scas sti call mov inc lods or or movb arpl addr16 mov xlat mov insl mov adc lds les add sti cmp pop mov aam lea pop addr16 pusha jg inc into mov jnp pop jg aam inc xor outsl push jg fcomi lret xchg sbbb je mov jg mov xor ljmp or icebp pop aam decl push (bad) notl lods cwtl pop jmp pusha pop jle mov push or nop push jg and out mov mov dec dec mov xor jg imul cld data16 jg mov cs mov loopne push dec mov bound lcall push pop mulb jg jg or inc sbb lret fbstp mov jmp or sub jg cmp (bad) jg mov sarl jnp (bad) insl inc mov mov pop iret negb dec test int3 sti or sbb adc cld xchg repnz mov inc das (bad) jg cmpsl dec daa mov in xlat lods (bad) pusha hlt jg jmp leave mov push pop pop xlat aas cwtl out mov scas ljmp outsl imul lahf (bad) enter dec imul jg aad jl fisub les cs scas push sbb inc mov xchg sub pop aas jnp inc xor adc jae jmp pop flds add mov cmp mov outsl inc sahf fimull pop jge or inc dec push xchg imull insl add dec clc cmpl aas sar inc or pop sarb jge cli icebp daa stos lcall pop jne xchg cwtl xor inc mov add mov sbb mov cltd sbbl xor sti mov in dec sbb lcall (bad) arpl inc ds loope sub xor sub leave mov sarb lret add cmpl cli inc jg xor (bad) ss sub mov sub dec jl daa jg push int3 sbb popa and dec icebp mov sbb and ds fmul dec xchg pop or sarl dec jp xchg jg int3 xor cmpsl pop out jg push sbb jg ljmp (bad) jbe loop test inc into (bad) fistpll into dec insl out mov jg jb les xor int pop bound loopne pop aad lret sbb test xor jg insb mov clc sarl pop fmull jg daa fstpl adc int fistpl jb dec cmc sub pusha jg push (bad) push cli in hlt jg nop movsb sbbl or inc push jg pushf ror sbb (bad) or movsb lret jnp inc shr mov dec dec hlt sub cld lea aas repz ja jb popf xchg inc out es loope mov insb pushf idivl jno imul call add int mov test or (bad) sbb fidiv push xchg ds out cmpsb xchg orl push mov mov jg ror lds cmp add mov cld and jg daa mov adc push and call jl jg fucom inc push pop xchg xchg jg cmp aad orb roll dec mov jae,pn iret jl cmp mov imul jg popa addb rcll pushf dec fcomps pop dec fisttpll jg pop shrb jge add sub enter sarl mov inc pop mov rcrb test xor mov stos inc sbb std xchg cmpsl iret sbbb arpl sti dec pusha cltd sbb out in js jle mov jg push jl repnz cmp fsubr ror sbb jg jmp repnz loopne pop ja enter and aam or xor (bad) sahf pop jp pusha jmp push dec andl nop jg mov inc lods bound movsb repnz cmp jbe loop jg call jg cmpsb inc sbb push out cltd aas das stc or clc lcall and jg sub mov stc push inc cltd mull mov stc jno ret jg hlt lods pop data16 mov inc test pop sbbl push pusha push int3 mov xchg aam enter jg test sub mov fwait imul dec mov lds mov daa jg aas mov sub sbb jle add js mov jmp repz mov mov cmpsb (bad) mov or push (bad) cmp aad mov lcall pop jg cmpsl into ljmp add in (bad) jo inc jno cwtl fadd pusha sarb out loope rorl xchg xchg jg call mov int3 mov outsb pusha loop mov js das int (bad) out pop xor ljmp popf jbe roll mov dec into lds jmp lahf inc sbb push jg shlb in pushf push loopne aas and fmull movsl mov push sbb mov idiv mov or lret aad dec jp (bad) or adc nop sub in pop mov fwait or loop inc cmpb inc int3 jp push jg (bad) out and loopne sub call dec sub jg cld int3 jo jb sbb inc sti nop pop mov push jg push adc sbb adc ret cmpl lods test add out xchg sbb mov mov xchg xchg nop inc outsl push aaa push es or lds cmpsb adc jo loope and mov rcrl aam jb pop dec insl fsts inc push mov ja add push pop imul test ficom lahf mov mov push outsb dec imul (bad) and mov xor mov fistpll xchg inc mov jne jg sub movsb xchg xor jmp pop mov mov ja jns dec inc jo cmp pop inc pop push in adc adc icebp xor mov lcall std negl jnp (bad) cmp add jg lods loope pop pushf in jg ja dec addr16 fwait xor popa cs dec mov inc fdivs pop pop push (bad) repnz out sarl cmc loope and jb mov test imul ds lock es pop rcll jg xchg (bad) xor cmpsb sbb les js pop inc pop lock jmp mov push aad xor pop (bad) mov popf das mov jmp js cmpsl push (bad) cmpsb test jp adc jg int3 mov ljmp fsubl pop or xchg pushf mov and cld leave stos mov sarb push push cld inc inc movq cmpl adc ret sub jg jmp dec loopne jne jp add push pop aas and mov push mov into stos sbb jg (bad) or jg ljmp add leave shll xor jge mov sub sbb sub xchg pop cmp icebp lret or push mov sub imul push test push jg shrb repz xchg (bad) jg outsb add ror xorl addr16 pop and jg xchg or dec lock xlat into jno in mov (bad) orb mov movsl (bad) into fadds dec jp mov addl ljmp add jg (bad) and lahf dec sub mov xchg or mov xor add ficoml sbb cmpsl jg xor pop testl test (bad) es mov sbb jg lods pusha cmp cmp inc sahf lcall mov cmp jne inc sub aad xlat icebp jg pop xchg (bad) sbb and mov pop dec dec std add lret sti pop mov mov in dec push mov outsl call idivl dec je mov arpl sbb and push cmc popf jno aam cmp mov add mov and imul and mov adc adcl test push enter push xchg jle push push (bad) imul lea jns sub sub jg jno sub and int dec jns jg,pt jne xchg cmp jg and std mov (bad) call in (bad) jg test scas mov gs outsl in out ja jg xor outsb (bad) jecxz cmp std mov leave mov lcall popa mov inc shll inc mov test add sbb (bad) jg lret mov (bad) jg pop add lods cmpsl mov clc outsl sbb jb xor push popa dec cmp mov sbb mov jg fldcw push mov mov in jno movsb jg rcrl and mov jo (bad) mov rcrl adc js jb jg cmpsl in sahf inc loope mov leave adc mov inc in repz adc xchg pop xor fwait jb (bad) popf mov ja sub xchg mov jg mov fwait cld mov (bad) jno push insb sarl std in mov xor arpl xchg call insl mov pop mov jo test cli bound sub jg pusha scas divl sbb mov xor test fs lock (bad) xor aas pop push dec cmp pop ja jo popa inc enter sub cwtl pop mov dec sahf cs xchg mov xor pop or jg hlt mov pop fidivl (bad) mov xchg push jg add into (bad) in add mov js popa dec lahf sub pop mov fildl jg mov (bad) aas jg out jmp or sbb test jg popf dec mov jg lahf pop push ljmp (bad) jp dec jp fimul scas jns jbe pop pop mov aad jg push inc cmp pusha mov fs dec or out sbb rcr jg outsb outsl movsb cmc je cmp mov mov mov loopne adcb mov enter sbb in out (bad) (bad) mov jg jl jp sbb outsl aas sub mov inc xor fiadd fs mov popa and dec jb cmpsb xchg mov pop and pop ret stc and mov mov inc dec pop sub js inc jge test mov out inc lock jg rcrb push jg (bad) scas mov cmp adc cmc mov pop jg iret sbbb and mov lahf (bad) hlt jg ja pop data16 adc lds sti lret and add test imul int dec lods jg mov cltd pop jg inc inc push addl sti in and mov aas mov mov xchg addr16 test jg adc (bad) sub sub sub (bad) int3 add mov es sbb pop xor fsubrl aas daa xlat cmp int cmc es test mov (bad) mov inc jg repz push push mov jg imul aas imul jne stos adc xchg inc sub jg xor jmp mov es sub dec cld add jg (bad) jns sub xchg cwtl jg adc mov stos icebp sbb bound aas jge inc mov stc jg or mov adcl push xchg pop add and enter data16 inc cmc xchg cmpsb pop and jecxz lock or add jg pusha sbb jp idivl aas sub scas push cmovnp mov addr16 mov cmc mov lret xlat imul cmp jbe negb mov dec mov aas sahf xor fistp inc or cmp jg rcrb pop insb push inc pop pusha add es aam fs sub xlat (bad) jg cmp jg das sbb cmp pop stos pop std nop mov in inc push mov out jg ss rcll (bad) les (bad) mov mov js pop aam int3 sub jg jo roll or out adc push int pop xor scas (bad) adc stos movb lock andl mov addr16 and and fistl mov xchg mov popf and mov test sbb ds or (bad) lock lods jnp push and daa mov mov jg xor and cmp hlt mov (bad) dec sbb dec push jns push sbb lods jg cmpsl add mov xchg mov loopne test dec rorl and sbb mov mov pop push aas cmp inc rorl fs jle scas push mov out push movsl jnp jg sti add or jae xor pop (bad) dec xor pop into (bad) push insl popa mov xlat inc push icebp (bad) (bad) scas scas addr16 movsb and fucomip mov fidivr mov and xor xchg pop bound icebp or inc pop bound test aas sub cs pop sbb out mov push pop push xchg push adc fisttpl mov add jg jno ret stos repz movsl mov jne dec push stos sbb punpckhdq iret push or shr xor (bad) stos xor jg mov dec mov imull aas mov push aas aad push enter outsl mov or pop xor mov jg orb xchg jo repz xchg repnz sbb lods mov (bad) jae add outsl jg jo imul push jb adc in aas icebp inc xorb ss stos xor jge inc test mov lret cmp mov jg adc pop outsb lock jg cltd lods xor pusha lods mov (bad) add stc inc lea incb dec aas movsb jnp repz in mov (bad) jg mov and xchg or inc mov sahf sbb cmp mov mov cmp dec scas shrl add adc stos mov (bad) neg frstor mov push jb xor mov lock (bad) jg incb lret fstpt sub dec jg jmp mov aas xlat icebp (bad) fbstp fadd outsb pop mov into inc mov jg outsb pop mov mov sbb jns jb xchg or xchg cmp cmpsb dec sbb (bad) ss xlat clc inc jno xchg jg inc repz xchg lret push addr16 inc xchg jg movsl adc sbb xchg mov add or mov jg (bad) mov mov gs pop jmp les sbb mov pushf jb and mov call jns mov les mov xor fistp mov stc mov test jmp push adc mov pop xchg inc inc xchg mov int adc jge maxps lods mov jg pop add ret jg out sub jg jecxz cmc out ja scas movsb lcall adc repz mov pop xor cmp xor xorb sbbl sarl jle mov inc jg,pn jne in das loop jp cmp (bad) push inc (bad) pop push jg xchg cmp lods (bad) ljmp pushf mov push dec mov cmp sbb or je in add and jg out and test adc mov jg stc xor ss jae mov add or xor ja sbb push jg mov enter mov idivb cwtl lcall cmp pop jg mov xchg ret cmp mov outsb mov jg lea adc aas adc mov out sti daa jg jecxz sbb lret fcompl out and or ss imul testb loope mov fldenv insl mov jg push add mov push and jg sbb sub (bad) les data16 jg (bad) and fidivl jg test cmp in xchg in sub mov repz dec fmuls mov shrl push pusha stos add cmp mov pushf dec je or fimull clc push cltd scas cmp pusha in daa std or mov pop xchg push xor xor xchg in add jbe out imul minps jle loop imulb mov aam xchg aas (bad) xor add pop inc shrl imul cli jg sbb adc (bad) in or int and mov add jg mov test jg imul push jg aad mov jg pusha es inc cmp xchg lret push mov cli push xchg mov mov and test jl js std mov add notb mov pop (bad) outsl dec or pusha sarb mov fimul test popf ror cmp sub icebp jg mov mov rclb xchg icebp xor jg,pn out adc aas mov leave or fwait inc in arpl mov push adc sbb mov push aaa jg out jmp adcl or dec jg test sbb sbb ja jge mov pop enter lds aaa call pop jno xor pop aas cs dec into sar aad or fwait fs push sbb imul pop leave adc idiv mov test sub cmp push jnp in sti int out into dec ficoml cmc ffree jp int3 jno addr16 add cmc xor adc jae add fdivrs jg stos push out cmp cmp sub pop mov mov push push loope outsl ljmp jg (bad) jnp stos adc sti mov push sub jne lock xchg dec stos pop hlt adc or ds movsl aad iret int into comiss jae sarb and sbb mov out sahf pop aaa jg cmpsb (bad) jne mov jbe inc xchg loope sub jg pushf lcall inc mov dec scas aad mov imul dec cs (bad) mov xchg sub push sahf mov xor push ret jg aam outsb inc cmp iret mov fwait mov mov in pop push jge shlb xor aas ss div jl in mov jg add mov cmpsl in or lods test xchg mov (bad) bound cmp fmull sbb or jg adc dec aam pop aad mov repnz outsl sub pop insl dec mov ret xchg push mov jp pop xor leave mov mov pop outsl push jg push dec mov fbstp mov sbb ret xor mov sti sarb xchg xor pop cmc jb jbe in or jg mov xchg pop push xchg aas int sub mov out addr16 jg mov imul xor push and mov in mov adc and bound mov jg mov scas fistp ja jg (bad) push out adc jg jl in jnp repz jg lcall jg rorl sbb aaa les and jg push pop xchg (bad) fldcw popa cltd mov mov ja jne inc stos add push jae cmp sub inc jg jnp popf rol inc popa mov sbb es pop xor dec cmp jg mov je test aam mov jg lea (bad) or fdivrl test (bad) cmp dec jg cmp inc mov mov mov pop or ss sbb lock push push (bad) cmp adc jg xchg mov hlt jg or add jns sbb jg push test mov stos jp movb nop add cs lea mov (bad) dec shlb fs mov jg dec add xchg mov dec push mov mov mov jno ss cli cwtl xchg jg sti loop in mov pop je or jmp jg add stc sbb jmp out jg out cmpsb setl push jg push jl dec les pop cltd jg cltd ret pop jg pushf lods cmp (bad) movsl loope aas icebp repz sahf jns jae,pt inc pop dec movsl jg sub clc xchg or je fstpt sub insl jg xor sub jg add push aaa stos xor jg fsubr mov jg and pop fidivl jb mov cltd xchg int3 scas adc pop pavgw mov imul loope nop orl xchg or dec call fsts adc lahf or pop push pop (bad) push cmp adc addr16 push jg mov sar push dec subl std and dec mov or jg (bad) imul repz xor stos adc jbe jg mov jg jne dec mov ss loope dec lods ficomp imulb jle loop in dec xchg xchg aad aas cmp sub ss jg inc cmc (bad) in cmpsb mov sarb lret and jg in jecxz mov mov jg fwait sbb push int3 sbb fldenv int mov out jg mov popa out push test (bad) jg sub push pop jl or insb and and and lods inc add fild mov cwtl mov into pop enter (bad) pop insl and das rorl ja fcomps mov outsl push jmp sub dec jg inc arpl mov in pop in xchg ljmp sbb leave jg jo adc inc sub in pop daa jbe lods clc aas inc cmpsl insl pop sbb fist test mov or aas (bad) outsb push divl lods dec jg xchg cmp or mov dec mov cwtl inc repz mov xlat inc mov mov and mov pop (bad) divb jg in iret lret (bad) and add mov es push jg (bad) adc gs sarb dec pop out jecxz add out mov cwtl mov lods and jl movsb xchg dec pop and ljmp pop pop cltd pop sarb test jge sarl dec cmc add xchg popa loope cmpsb mov aas repnz xchg dec inc or divl inc jg outsl cmpsl xor lahf xchg push and scas mov lret sbb push insl push inc faddl cltd add clc cmp rolb pop mov sub hlt push outsb mov addr16 jbe adc cmp jp and jg test je jg pop push leave loop fdivrs push adcl jmp rcrl ds call mov jbe pop hlt cli aas das jb pop not int fildl jl dec je pop mov scas mov aam dec (bad) jg cmp pushf and sahf sub (bad) stos jg jnp incl cmp addr16 mov jo je jns inc push sarb fsubrl pop pop add sti mov hlt push sub jl gs stc mov dec mov clc arpl int3 push jg mov gs and aas (bad) mov inc mov jbe adc mov lret jmp out aad xchg mov clc pop arpl xor ret jg xchg lcall adcl ja push js fisubr fstpt nop mov sub stos pusha les push xor push jg arpl int3 mov cmc (bad) sbb ljmp jg subl jg mov addb in pop adc dec pop xor jns jg sbb sbb or xor mov (bad) nop add je xchg scas jg pop or xor loopne sub jg ja cmp dec scas add jp pop jecxz lcall jg pop aad lcall icebp jg lds insl jg xor xor jg dec push mov pop cmp or into iret jg jb push ja sbb jg xchg adc movsb cmp jg cmpsb cmp cmp sbb fidivr jmp mov jg pop xchg sub (bad) dec jg add cwtl les adc mov fwait cmc pop jg je jge movsb and jg adc ret dec std jg aad inc daa sub cmp add cmp sbb orl std inc pop mov sahf mov test (bad) jno jg or mov jg mov sbb or clc push jg inc xchg inc ret idivl (bad) xor (bad) pop int3 in or xor sbb fbstp sub fwait sti pop sti cmp out fcoml dec add sub jl cltd dec imulb push inc pop jg in mov push loop add or jae xor sti scas test sbbl mov fdivrl jns mov sub aad cld jg dec icebp inc hlt movsl lret outsl scas jno jbe es ljmp divl movsb jbe out sub jg dec popl jge pop push inc pushf addr16 jg xchg div int mov jp (bad) sbb add inc mov cmpsl xchg stos sub cld sbb call arpl mov je ds mov mov adc pop mov fs dec jg rcrl lcall std push das (bad) sti ljmp popf arpl pop (bad) jg pop mov shll push outsb je shll lock subl sub lahf mov mov outsl js popf jg inc dec cmp (bad) cmp jno (bad) push hlt cs mov lock cmp mov pop jle stos ret pop repnz lret lcall movsl mov and mov mov ss sbb jg adc xchg pop jg push xchg xor mov aaa insl and mov pop lea nop adc jne js sbb inc (bad) mov dec (bad) jg pop or adc out jg inc sbb lret jg pop sub adcb repz xchg inc enter lods jo imul push or ss jne mov jno add dec add jg dec mov mov push jns fldcw loopne ds cmp in jg mov inc (bad) aas cmp jns inc repnz stos and decb jg aas mov je xchg push jg pop sbb jg adc push inc sbb fwait cmc (bad) fdivp ret arpl cmp pop cmp jg dec cli pop loopne and inc pop cmp or inc jg sbb and lret mov dec jecxz (bad) ja mov repnz sahf jg add add jg fistpll gs inc ss mov cmp in mov (bad) mov aas imul es idivb in xchg jg or jg mov push pushf jg ret movsb or and add jl ss jg sbb jns pop jnp xchg inc add adc xadd les sub imul push cmc int3 lret mov mov xor pop and imul add sbb dec ja fwait sbb adc pop outsl out pop dec adc pusha adc xchg inc ljmp into pop stos dec sbb out inc out int3 (bad) jg xchg xlat cmp push jns out (bad) jg adc jg aaa nop sub lods cmc test cmp or and mov bound sbb add xor es jg xor inc dec adc sub cmpl xchg arpl sbb aaa test inc push jg pusha push sti das cmp lods lret pop jl pop daa jg add fimul xor pop cmp lahf sbb bswap out jg fcomip stc mov imul fsubrs or mov cmp add lcall imul add aad in sti push pop andl imul imul pop out setb mov inc aad into ret xchg jg int pop jmp stos cmp fiaddl sub mov mov push adc in clc hlt mov cwtl inc inc jae notb ret xchg jbe call mov popf pop scas orb inc or cld aas loopne (bad) mov out adc xor test mov (bad) mov (bad) lods stos inc pop ret in mov push xor jmp popa in mov cmpl mov sbb test fisttp (bad) out cmpsb ss fdivl loop maskmovq (bad) push stc lret pop xor xlat pop xchg das mov sbb popa or aad and jge pop mov jne mov mov movsl clgi mov sahf test push decl test adc fbstp das out mov aas rolb iret pushf dec ja inc xchg jg sub push add pop mov xchg cld es sub push mov pop push add and int3 cwtl aam push movsb jg sahf or mov outsl lods scas out inc jg (bad) adc hlt je jae jge push inc lcall sub test cmp int inc (bad) mov bound push (bad) pop fild jg xchg jge xor mov pop outsb (bad) push jg cwtl adc lret dec dec jo push add mov out sub js inc xor stos mov pusha in mov ljmp cltd aas and es mov rorl inc sahf cmp movswl clc enter fwait sub aam jle insb jg or pop fldt inc push sbb dec loop inc xor pop xchg (bad) repz fisttp push ficom das dec data16 outsb sub cmp in fistp mov movsb (bad) fstpt push stos stc (bad) fs inc sub iret jno push mov mov pop add adc and jno jg out pop push rorl js cmpsb adc dec push mov mov ja repz fs mov mov inc cli jg push test sti or sub movsb in inc sahf adc outsl ret jp aad fstps dec (bad) dec lret ret and scas rcll pusha jae jecxz adcb into pop xchg sbb cmp mov mov jo pop adc (bad) mov vxorps mov dec aaa mov jg or dec adc inc addb mov jmp add inc insb jg gs dec mov mov data16 inc push xchg and popf sbb (bad) xlat ror cmp push push xor jg daa insb lds fcos jg xor repnz adc not jbe std jg loopne outsb repz push jg mov nop cli jg out cltd int pop mov jg out mov and sub adc add add imul jg xor mov lock scas push nop popa sti push repz outsl shrl add cmpsl cmp pop fbstp inc and jo push mov (bad) jg push sub pop mov pop in mov pop push stos jle pop lret pop aas cmp mov fildl popa or jg jo icebp xor sub sti cs iret pop xchg jg ja sbb fwait pop (bad) push xor das pop addr16 pushf mov dec xor xchg lret or dec arpl outsl cld push aad andl dec sbb mov (bad) popa and mov loop xchg hlt or fwait loope cmp mov sub xchg daa and cmp xor adc pop gs lods cmp repz dec sub and lret leave (bad) (bad) fmulp mov and daa mov cmpsb xchg jg (bad) lret inc aad jmp out pop jg mov (bad) aam adc cmp jg sbb mov fsubs repnz pushf inc inc inc xor leave push mov mov insb xchg mov pop dec inc and jg add mov mov mov cmp jle mov cltd push fs xor mov pop mov and jg inc leave fcmovnu mov xchg mov test sub cwtl push dec ret lods jg scas dec arpl pusha fidivr popa jmp sbb pop loop jg xchg movsl les (bad) and jg mov int jp cmc imul jbe xchg (bad) push shlb imul lods in cs jg out adc mov push sub rclb mov pop mov xor lds lcall call pusha push inc jg (bad) jmp fsincos ror imul xlat das js test dec mov mov push cmp movsb jbe sub cmp or sbb xchg jg lcall int3 jg icebp jmp cmp push ja xchg push nop daa jg jmp jns (bad) shr mov sub mov popa inc into sbbl jp mov mov jecxz enter mov es leave arpl notl pop pop jmp jo jg sbb dec xlat xor mov ja ret jg mov and es lods mov sub std shlb ret jg xor adc dec mov mov sbb inc push fnstsw loope scas ja ret dec jg ljmp popa cli jg (bad) xor popa dec jg lcall jg mov mov lret cmp out cmp jecxz out inc (bad) fidivr jo mov test (bad) or fistp notl jnp cmp shl jg inc shr (bad) repz jg xchg add push stos push mov inc sbb jnp sbb aas andl dec (bad) mov icebp xchg pop mov mov lock jg inc sub gs fwait pushf cli mov mov mov jmp pop fxch pop dec sub pop jb pushf mov mov iret arpl mov cmp jg scas (bad) loope add inc aas mov pop mov inc inc lret adc cwtl xchg jg add inc cmp push add sbb jg mov xor cli mov xchg mov int rol mov dec jle jg notb cmp addb outsl add or ljmp jg lods fnstsw jg (bad) mov rcrl sti test mov jg fbld fidivrl cmp fisttpl nop (bad) mov lock lcall daa mov pop inc stos sbb cld in pop pop test cmpsl jg jecxz inc loop ret cmp lcall prefetchw or fcomi xor or inc adc jg fnop cltd stc pop cmpsl out jbe xor or repz fildl in loop inc jg xlat mov and dec fstps add pop inc lods push jg mov jle jg xchg test push or ficompl add mov sahf add js mov add cld jg popa push mov aas mov cmp inc sarb and fbstp inc jg cmc out cld mov xchg dec cmp and jg shrl leave pop (bad) mov xor mov jg lret sbb cmpsl lds movq fnsave pop jae mov shrb mov xchg cmp jae popa lea pop sub jg sub decl jl scas xlat aas jg mov fsubrp xchg sarb sub shl iret sub (bad) and jg out loopne cmp (bad) idivl push outsl jmp ljmp js xchg sti scas and cmp outsb jge sbb add fs pop pusha add inc (bad) adc js jmp cmc stos stc out and lret dec in ljmp push imul fwait cwtl roll lods test std or ja mov test adc jge push (bad) mov jg inc data16 mov cmc xor xchg jg xchg pop sub mov fdivrl jg dec push ss fistpll inc jo outsb sti sahf ficomp js pop lods or add jg sarl xor or push stc or mov (bad) dec push loopne imull and and and cli imul xlat push test xor xor add adc out popa sti pop add je aas mov sub xchg and orb loopne (bad) cmp aaa imul dec (bad) loop sti mov and sub cmpsl jg (bad) adc dec xchg jg fwait xor mov push stc mov cmp push jg mov xchg in jg outsl inc ret lahf sub scas jg xor imul movsl rcr jno lea push xor pushf jg addr16 and out xor insl cld shrl inc jg sub loopne int inc push mov jae ja add xor xchg mov jg jbe dec out jge jg push mov sub or gs pop sahf test outsl add lods data16 jle inc aas mov xchg (bad) mov mov push pop lock ss cltd cmp pop adc ret inc mov jg mull inc jne ljmp out cmp dec jg fsub insl pop shll ss xlat mov es mov xchg cmpsl ficomp xchg sub xchg mov icebp aas ds in pop jns xor jg inc leave inc pop dec inc pushf sti inc and jae or mov in adc sbbb jg or shl push and inc fisttp scas aas push inc inc jg mov ret cmp std mov lds jg rcrb or jg mov jmp popf stc test mov jg adc or inc cmpl dec inc lahf jg push inc and sarb mov adc or and lahf sti adc mov or pop pop daa in add popf sbbl (bad) jg xchg das xchg outsb pop jl ret outsl xchg dec andb shll mov jbe loope adc cmp inc cltd jg aas ds scas arpl or xchg popa xchg add aaa out lods mov stos in pop (bad) add mov orb pusha insl out mov pop addr16 jno dec jg mov mov es aas in enter adc sub jl inc jno cmpsb xchg mov popa jg sub fidivl out sub and jg pop subl aas inc jmp gs cwtl jae cmpl mov js fwait push add fs or mov cmp std cmpsb sahf mov sbb jne jb or pop das outsl fisubrl push movsb sbb sbb scas mov fs add push xchg clc sbb (bad) jg mov aas jb dec mov addr16 bound ljmp dec iret mov xrelease inc test xlat cmp cli clc xor dec movsl jp mov pop mov inc inc mov daa jg outsl adc (bad) aas cmpsb out mov dec mov mov pop ret inc mov outsl inc inc sbb movsb jmp fisubrl add xlat push movsb dec jg mov and jg add pop xchg xorl inc pop jnp cmc ret xor pop insl (bad) fistp jg enter xor push jbe aad pop jg sbb test mov outsl test jg push push dec cmp sub jg add movsb (bad) xchg mov adc das cmp dec loopne add out sarl lods xchg adc test sub push loope inc mov lret (bad) lock aas fcmove mov sub jg adc mov imul xchg lret arpl (bad) rcrb pop mov icebp mov sbb lea pop mov jg mov ror xchg push xor jg add (bad) cmc sarl iret xchg aaa jmp lods and push or leave stos pop mov (bad) mov and pop mov pop scas cs aas pop ret cmpsb test loopne (bad) mov iret sbb mov fstpt pushf cmc or jno xor push rorb scas ja jg gs adc sbb std sbb or mov leave fwait nop push dec sahf (bad) cmp mov cs scas es push xchg inc aam push jg sub mov inc xchg jg rorl sarl imull xchg (bad) aam dec jno and sbb cld stos (bad) xor pop jmp sbb jg clc cmp dec nop out jg add inc jg dec pop inc gs and imul add mov cs lea xlat jg out fisttpl inc adc lret mov aas pop lods not in mov icebp jg sub jle jg push (bad) mov cmp xor into mov dec loopne popf pop push xchg stos insb jg jge leave dec mov dec mov imul pop add adc enter add sub fnstcw ss aas or dec (bad) lods push pop inc add ljmp or jg xor sub arpl repnz les out mov outsl inc push scas add cmp add stos into jmp mov and test xor or sbb pop ja pop jg cltd fsubl out xor imul jg push dec mov jg sahf jecxz mov lods jle ds (bad) cmp cli shl popf mov ror sbb rorb mov fwait add js inc mov jecxz jg ror aam jnp sub imul shrl xchg inc pop addb sub pop jbe dec cmpsb mov imul loop (bad) pop insb xchg dec xchg jg (bad) or lods notb jg push mov (bad) mov and pop push jae jg (bad) mov scas pop push cmp sbb push neg jg mov aas cmpl cmpsb sub mov jg in fcomi dec rolb and sub jg jbe adc (bad) adc pop push stos and popf xor lcall dec cs jns imul jb add idivb mov cmc ss xor fcmovne dec push sbb int3 mov dec add xchg jg addb dec leave inc scas (bad) daa jg sub outsl jo adc pop dec int cwtl mov jg sbb or daa push les xchg cli dec add scas cmc test inc dec jle pop cmp push cmp push addr16 mov std ja sbb xchg fucompp rcrl mov out or pop aad add mov mov arpl ror jg ret dec add cmpsw cld jg mov push push sbb cltd xor popf leave jg add mov mov aad shrl mov js stos es and (bad) cmpsb push shrl add push aas adc jg push pop sub xor pop sbb mov dec inc pop jg ficom mov cmp or jb xchg xlat popa dec cs mov dec hlt stc je mov (bad) add addr16 in mov inc adc inc jg lret stos scas icebp js xor cmpsb ret bound test sarb insl into jo jg je or cli shl aas pop lret cmc arpl and fidivr sbb fdivrp cmpsb xchg jb (bad) push inc insb mov push xchg inc dec jge mov scas mov or jg (bad) repnz dec icebp and jecxz in clc lret sbb ljmp jg push add pop inc and (bad) loop xchg in (bad) or shll rcrl fmuls sbb cmp jecxz aad jl jg je pop sub adc arpl sub mov sahf out sbb push int mov icebp pusha mov or mov jne rorb jecxz (bad) jg nop insl xchg out inc mov or push mov dec mov jns sub jg roll xor cmp xchg xor jns fadds out ljmp or pop and inc sahf loopne (bad) rorb stos mov mov jg popa loope mov insl inc jg stc fistp sbb testl push adcl dec call jg xor push cmp fidivr inc ds insl jbe repnz lods adc xor push lds jg (bad) mov lahf or push bound jg push sbb hlt xchg jg scas add aas inc or jg aad cmpsl mov dec sub mov pop jo jno enter mov imul popf adc (bad) mov push jmp pop jg subb jg rcll mov push cmpsb jle or bswap adcl rorb std lock xor add arpl jcxz jg out fisttpll push push jg cltd adc or mov sbb sti fdivl jg (bad) jns lea test loope push out inc gs jecxz fsubrl (bad) lret leave inc sbb nop mov lock mov ffree jg js inc scas sahf shlb pop xor call mov sarl mov rorl mov mov inc cs icebp addr16 push cmc scas lock or jg stos jnp lods cmpsb or pop push cmp jg jp imul pop mov cltd fidivrl lock inc roll jg sbb inc fistpl cmpb push inc push pop jmp cwtl xor shrb inc mov jg sub movsb loope inc das jg jmp mov into sbb cltd aad call gs xor into xchg aas dec xchg lods xchg sub movq mov enter pop jg xchg xchg mov inc xchg fldl dec jg fdiv pop mov mov jg nop inc xchg mov mov outsl and xor dec mov pop jno sarl jecxz mov hlt pop xor adc jo add out into inc mov mov adc add addr16 pop aaa push jg and mov jg jo aas outsb mov xchg jg cmpsl (bad) mov (bad) dec dec jg pop lds jecxz sti lock mov lcall dec cld jne jecxz mov pop jg loop clc add pusha sbb fistpll mov sbb scas movsb rcll jg test aas nop dec rcl jg into xor add cmp (bad) out xor cmpsl cmp mov dec inc cmp mov fdivs sbb test jg lock out xchg iret jg and dec dec js jecxz jle aam into into inc fdivs push jg jae orl push sub sahf stc or mov dec fcoml imul aas push mov mov xchg fnstenv jno outsb insb cwtl pop mov popa push jg imul movsb pop out aam pop adc je (bad) flds loopne jg adc loope mov and jg movsl and decb cs jb xor jbe outsl cld (bad) inc mov dec mov pop imul cwtl clc or adc daa pop jg imulb mov or xor loop mov fwait negl jmp mov addr16 push (bad) hlt retw in adc jns pop push (bad) xlat sub jle mov popf inc pop and lock insb je pop pop sub repz gs aas mov in push dec inc jg,pt add push aas mov es das or adc inc jbe pop mov (bad) scas pop jle imul sbb mov arpl push xor ja aas fwait pop jp pop adc xchg jle jge pop jo int sub jg hlt (bad) nop pop and add fdivrl adc sbb ret jne,pt jae and mov push std jg and sub mov inc dec sub jecxz pop addl xchg into push inc inc jg jnp sub test cmp jg jae leave mov int stc mov idivb mov test sbb int3 pop mov mov xchg mov addr16 xchg imul and das mov jmp addr16 lds fmul (bad) inc fsts jg (bad) lock test das jle frstor lods ja mov imul ljmp adcl inc jg inc jl push inc das pop jg cmp int sbb xor adc (bad) test pop sub inc ljmp popa jg,pn mov sbb sub pop fwait xor rcrl sahf inc rorb mov lret lods xchg and aas jp loop gs xchg (bad) data16 out inc cs or push push jb jg ljmp roll test jp call jns fadds lea pop (bad) mov push femms lahf sub adc jg mov sub jg js mov ss mov xlat ficomp and push nop/reserved sub xor testl jg (bad) dec lret rol loopne mov pop inc out xor inc jg jo aaa mov mov insb inc mov arpl aas push cmp inc fistpll int add sti mov add test jg xor xchg push mov adc mull iret jg pop cmp leave inc adc mov mov jmp jb jae cmp dec ja lret and or cmp pop call repz dec hlt sub mov xchg xor js mov xchg jns lods push pusha push lods cmpsl sahf adc xchg out jg mov mov sahf sbb mov lret das aas sub daa rorb in jg sub xor xor sti sub jg push mov cli pop inc int3 pop push jl les in lcall lds (bad) or mov (bad) repnz jg push add xor int3 mov es jg pop inc lcall out jp jmp mov (bad) inc xor aaa add pop mov jb mov (bad) pop mov sbb shll (bad) jle fisub add lods push adc jg incl push xlat xor adc lret stos pop and arpl push test out jo jnp xor pusha sti cli xchg adc repz fs ret xor xor jg pop cltd pop pop jmp sub add sbb in sbb ret push fisttpll jg ret iret jae stos movsl das mov mulb loope test test sbb pop xchg insl dec xchg pop jg jle and int cmp sti repnz sarl int3 jg popa inc aaa jmp jno push inc jl adc or fsubrl aam mov cli dec pop scas jecxz sbb jg loopne fsubrl jg insl inc sti iret enter test pop cmp std lcall rcll dec mov popa mov mov ss outsl enter jb mov fnsave add dec rcr pop push and jb xchg jg xchg mov pop stos xor adc jg fs out rcrl sti inc scas fcompl jg lock out dec xor cmc xchg out mov gs cmpl stc cmc sar dec dec sbb test xchg cmp loop ja and repnz mov mov sti mov lret lds mov jb (bad) negl cmp push (bad) stos dec mov out jle xchg cld mov add jg ret pop inc popf daa out xor sub xlat mov mov call cmpsb adc jg lods test pop jg or lahf inc jne inc jg divl inc push mov xchg jg push fisubr pop adc mov xchg adc popf cmpsb push lods pop mov bnd icebp jg cmp mov lods cltd xchg int3 imul mov call xchg cmpsb rol loope add nop mov (bad) ljmp jns incb out push icebp fstpl push pusha or repnz and mov jbe inc in cmp dec sbb jg xchg jns add clc jg sarb mov mov xor adc pop cwtl repnz popf xchg mov (bad) jae push dec lcall sub movsb jg idiv jmp test ja nop pop in push icebp or jge insl (bad) push loopne pop out arpl insb aas xlat sub ds enter or lds gs sbb daa inc push mov push jg and call and jg pushf xchg scas rcrb loope pop popa sub or shll fs decb in jg jecxz call jg notb outsb mov (bad) idivl inc stc callw add adc popa std jg push or adc sbb dec jno imulb pop hlt cli pop dec jg push mov cmp jg lods lock xorl daa pop mov and cmp insl js pop pop into mov sub push add or xor mov mov pop outsl aaa adc sbb fsubrp dec jnp gs in imul out aad dec mov shll mov sbb add ja mov insl test xor lods or jg sub adc dec sbbb aaa in insl inc dec and or cmp inc dec sub jg jle and loop and jmp arpl imul xor enter xchg rolb push cmp or rclb ljmp push (bad) ja push imul pop push int mov je outsl inc pop movsb fcompl lock dec jg aas lcall lea dec pop jp aam lahf push (bad) jg adc test aad fdivrs daa or stos jo and inc mov (bad) insl mov aas mov sub cmp xlat aas arpl in pop add mov cmp dec aad jg xlat aam xor mov jl push sbb mov fwait lock sub mov pop push sbb jg scas jle and inc loopne inc jg inc (bad) push imul add mov jg adc jae sub pop ret iret jg mov jno push xchg and jb add mov dec in dec pushf jg,pt xchg push test sub mov movsl xor xor mov add jg cmp shrb or imul cli inc jg sti dec push in rol jmp xchg mov or dec sub and jg xor scas mov xor xlat pop mov and adc jno fstpt nop jge in mov jo push cli (bad) lods jg idivb loop jg daa jne dec ljmp fisubrl push mov outsl mov jg sti adc pop loope insl or push fildll lret and lods mov fwait mov aam sub stos stos jg jb (bad) aaa pusha sub jg push pop fdivrs sbb rcrl ror inc in insl dec (bad) jg mov movsb xor ret adc insl or sub cmp and fnstsw popf inc jmp insb int3 xchg out shl ja xchg push std or das cmp inc addr16 mov sti ljmp xchg pop mov test clc jne in sub dec mov sahf xchg mov jg std pop (bad) xor push jbe lret sbb mov in push outsl fwait and pop divl xor imul sbbl jge arpl jo jg out inc sbb pop ret bsf ja pop sarb sub jg mov mov mov push outsl (bad) xor mov mov into pop bound or ljmp in es pop insb aas push sub and bound stos leave xchg loopne xchg notl mov fcoml adc sub stos clc jg mov mov enter test lahf sbb sahf dec out jg cltd stc pop mov xchg out lcall lods mov sbb add (bad) mov mov icebp ficompl sbb jg add add (bad) repz pop mov mov and push test cltd jae stc jg lahf rcrl jg xor ret dec mov aas adc clc movb jg insl aas mov leave decl jg dec adc xlat (bad) jbe push test mov subb inc jp mov ja jg xchg (bad) add movsb jg dec sbb sbb (bad) pop mov push mov and jg xchg sbb mov inc fwait mov cmp (bad) xchg mov es adc aas outsl out sub divb mov mull dec mov fidivr sub lods jg cmp icebp repz inc xchg les jg mov movsl bound mov jg and mov call arpl mov pop jg adc js outsb lahf jg test fsubr pop imul ror into mov inc fisubrl jg push xchg popa mov scas mov mov xor (bad) mov cltd mov cwtl pop int3 xchg pop sbb rcrl add insl fwait lcall lods mov push das daa pop jg aad dec mov jns shrl stc or or adc mov xor mov mull pop jg lret movsb xchg mov sub mov inc cmp aam sahf aas in int3 sub mov mov nop outsb inc push jae fstps jo fdivp cmp sbb pop and mov inc outsb jno enter rcr xor fwait (bad) jle jg out mov aas jecxz sub (bad) sub xor xor shlb vpacksswb das icebp jg cmp xor xchg test (bad) jg imul arpl xchg mov and mov aaa bound push repnz (bad) and idivb lock mov jg pop pusha (bad) jle jp jno les sub fwait cmpsb mov (bad) testb jg movsl cmp test xor shr daa hlt lcall mov fisttp div (bad) mov jg imul mov aad lods cmpsl pushf inc test adc outsl jecxz pop pop repnz mov mov out mov add in sbb dec mov fistpll xor cs inc sbb mov jg rcrl xor push xor (bad) or lea test add movsl sti jg sub sarb and js mov push in mov ret movsb push cs mov jbe dec fisubl adcl add dec aad mov push mov ret mov pop out sbb nop inc jg or loop mov push test in aam jg and add dec sti push pop jno adc lahf dec test jg std sub je xchg ret cmp (bad) iret jne push inc xlat mov aaa xchg js ds jg (bad) or stc cmpsl ss mov jg or loop push mov repz jg or push cmpsb dec sub jg movsb shrb jne sbb jl mov jb inc push push dec sbb jp add inc mov xor and (bad) fnstenv test lcall jbe pop push loopne sub xor mov and sbb fmuls arpl jl sahf jbe add popa xchg jg ds xchg xchg bound mov stc sub push pop inc pop call jg pusha lock adc add push mov jge test mov leave mov outsb mov push std ja out and fsubrl dec jg pop mov aad ret mov jg sub pop pushf sbb loopne jne adc ffreep jg mov rolb xchg fsubl fs jg jge mov inc lods inc in js cmp stc adc jbe mov jno mov lea dec inc push cmp jg std lods inc sub fcomip push mov cmpsb jmp mov mov jecxz,pn jg inc inc xchg int xchg ss leave (bad) xor sbb loope jg std lcall mov add inc movsb push jg mov adc vmovq mov (bad) xor jbe push and into adc sahf sub xor cmpl xchg std test out (bad) jg cmovg xlat push mov jg xor sub daa aas repnz jnp hlt js xor fucomp popf pop and cwtl sub add xor loope sti jb cmp dec xorl lret fwait adc outsl and ljmp imul aas in add or mov insb dec inc add push insl je mov pop lret pop mov fistp cmp cmp in or cwtl sub out lods push into outsb or negl lea and cmp jg adc push adc stos and jle jno movsb jg lret sub ds and (bad) xor pop push jb jl dec jge push scas fdiv test mov out jg xor andb rcrb mov mov sti push stos xchg lcall mov inc mov jo mov pop xchg insl add sbb mov les aaa pop jg in cmp lods or out jns out push xchg lock sbb inc addb out mov jl pop push repnz ret xor sbbl (bad) mov lock jg jle and push les or (bad) jg mov and cmp jg into and push insb sbb sub roll sbb lods aas xor xchg mov (bad) cmp adc pop call inc bound loope jg lds or lock lods fdivl test inc add into cmp jge mov adc sub les xor aas stos cmp mov divb fucom into cmpsl adc push dec jg imul sub adc nop arpl cmp jg and test pop inc in mov push jg add cwtl ret dec mov (bad) scas inc test push adc pusha cmp cmp push fs and gs mov sbb pop mov dec aad xlat iret lea pop sahf jg jl lahf dec popf mov stos (bad) jns lea (bad) xchg dec in mov push dec dec mov ja inc add (bad) and jg or mov or cmc cmpsl jno jg and rol jg jl cmp dec repz jg push test dec lret sub out cmp scas mov jg and movsl xchg mov sbb leave inc mov test jmp clc arpl fdivrl cwtl mov mov lods mov out ficom daa adc lret fistpll loop adc add pusha jg xor mov jg sub jmp loop jg notl addr16 popf add push idivb mov adc fidivl jg pusha pop mov jg push rcrl mov popf cmp pop cmpsl movsl pop pop enter jg fwait (bad) push cmp push mov inc mov push inc jg dec and jmp and inc mov das push aas nop pop mov mov imul aas es jg sbb popa sbb adc jg cltd cmpsb pop sub mov jg mov xor cmp pop adc call jg iret sbb pop (bad) xor pop scas xor rorb stos imul jecxz pusha (bad) mov sar add leave jg sbb stos stos fcoml ds mov andl stos jg dec js pop jl fidivr call fdivrs mov stos js mov es sbb lcall fsubrl ds cld xorl push cmp ret xchg imul loop adc pop fwait out xchg xchg call and mov aas cmp aas push mov les cmpsb jg or mov ds stos sub mov jns das arpl repnz add and jge pushf pop push arpl jg xchg pop outsl mov mov push jg mov sub lret pop xor test xchg cmpsb sbb addr16 pop lcall lret int jg pop mov add mov jae lds jg rcrb mov into add stc push jg ds lock mov mov or sub mov rcrb sbb jg loope sub inc es cwtl lea dec dec stc mov popf ret pop out loopne jg xchg pop push ret adc outsb imul mov addr16 stos pop aas mov scas adc cmc mov cmp addr16 fstpl ret stc sub and lcall jg,pt cmp cmpb ljmp inc ret (bad) das popf aaa gs loopne jg push adc scas std imul roll ljmp sbb jo cmp jg cmpsl sub fwait jl fstps sbb jns xlat and mov or pop xchg dec mov jg cmp mov xor hlt pop xor lahf nop fwait mov mov fidivl and lahf test fsincos jnp fidivl jl idivb push pop adc jg push cmc int3 lcall jnp fsts mov pop xchg loope add dec dec mov jo (bad) test pusha mov push fistpll xchg adc cmpsl push xchg notl lcall call in jg push adc out jg daa outsl add adcl mov lcall or and jg les xchg arpl mov xor jg dec jb ret aas mov jg (bad) out jg cmc loopne inc in (bad) insl cmpsl ljmp stc pop addr16 pop js sbb pop imul sbb (bad) jg enter jl pop pop xchg mov daa jg sbb jg or fdivrs cmp pop daa icebp xchg push ljmp and mov inc push fs mov ja into pop mov ret movsl dec jge push andb loope add jg pop cmp inc dec sbb loopne dec iret xor adc test inc push push jg push sbb mov pop or std adc push sarl call cwtl dec clc repnz pop sarl ret jnp jle mov xor inc mov xlat mov aas push pop mov inc in xchg jg pop ret xor jl mov adc dec lds and lea sub jne in inc push jg cltd dec fisubrl jge negl push push icebp sub push lock xor pop jmp mov xchg jp imul xlat inc xor push sbb jg lods and jg xchg lods jno add sub test out gs jg (bad) rorl daa clc mov cmp test push in and mov (bad) jl rcrl cmc jg ss mov loope jg arpl iret dec cmp jg or inc fsts repz stos sbb jg pushf push sarl mov jo push pop jb nop jns jg in movsl sub fxch stc jo cmp inc repz xor fwait jg mov add pop pop inc xchg inc les dec hlt fs mov mov jg or stos pop decl fstps inc inc les lock jmp mov xchg push insb fiadd je and jg stos (bad) sbb jg xchg sub sahf and inc in xchg mov inc mov jg or push push test mov sub and popf repz pop dec jmp jb mov sub dec jg pop jmp cmpsb jg enter popf and (bad) mov inc sub add mov adc lock loope sahf xor pop jg xchg xor cmp jg jo das xchg test jecxz lcall jg,pt scas pushf setns pop test and roll int3 sbb mov xchg cmp and jg das sbb jno cmpsb sahf pop dec cs add inc xor cmp add inc jg jle cmp in std jg jo dec (bad) fnstcw sub ret sbb aaa out dec (bad) xor lods sub jg push dec idivb call mov jne test jg cmc fisubrl (bad) pop push push mov clc jg mov cmp mov jle (bad) xor in push ret cwtl cli xor xchg outsb adc lret and iret inc jg jp cs sbb push jl sub jne stos pop (bad) int3 xor mov mov mov ja cld jb stc jg dec adc adc pop fiaddl push daa imul (bad) lcall pop jne jns push sahf jg or popa daa push fwait bound fimul imul add (bad) jmp xlat mov insb insb into iret negl inc jg pop stc xchg clc push mov cmc inc xchg xor and ficom inc incb loope lods xor pop pop xchg call pop mov sbb jns aas cmp inc mov mov pop pop and sbb mov jnp and jle inc in jg lds cmp cmp sub xorb xchg (bad) dec in and inc test int adc mov (bad) test and scas mov add idivl inc mov loop xchg xor inc pop push ror push xor pop jo pop es popa and add enter dec stos adc mov std (bad) xchg and and sub cmpb lea lret sbb stc or xchg or call int jo lcall pushf sahf imul sbb xchg dec aaa push jg push addl sbb jne cmp sub jg push in sahf dec fsubs fs xor or xchg loop fisttpl jg test rcll mov loopne lock aas mov xor or mov stos out mov aaa mov and and xor lcall andl xor xchg or jg push cmp cwtl jg and fwait jg roll xlat in inc mov int3 jg jnp adc lock jg fs icebp xchg mov xlat jg dec (bad) pop data16 jg pop test cmp fwait or inc push jg sbb pop lcall sahf mov push movsl scas fidivr std aam outsl mov (bad) jg sbb cltd js mov dec mov movsb jg lahf lea mov insb fmull pop (bad) xor mov or fnstenv lock pop (bad) ljmp loop pop mov push call lret (bad) jg add stos inc mov lock xor out (bad) jns push inc cmp fstl dec mov xor lcall jg adc dec ficom loope cs mov cmp movsl imul jg adc push inc or pop xor shll pusha sub lods jl inc rcl (bad) mov enter scas dec pop ret popa fisttp jg mov aas leave div (bad) xor mov inc jg notl jbe,pt or xor divb pushf je push adc addb test jg sub and vmwrite mov adc add ja sarl mov mov jg out push gs jno jae test jp mov push cs test cmp mov xchg xor or mov pop jae lds pop sarb and adc out dec pop mov inc (bad) sub addr16 jb mov mov repnz sbb jl add jg xchg adc sub mov jg (bad) jecxz add jle imul adc push ret stos popa out popf push pop jg add nop rcl inc ds dec sub fstl mov jp fs sahf jg clc or sbb jle test test loope aas sbb pop push icebp fnstsw cli sbb mov js jg add adc iret cmc jmp xor outsb dec aad sahf das andl pop sti gs nop insl shrl mov add in loop push enter mov xchg sbb movsb shrl jg faddp mov jae scas int3 cmpsb jg mov and mov xlat xchg sbb jbe xchg jnp jg push movsl dec and mov jg inc fs jg lret lcall in popf jg mov js mov or int xchg mov mov mov int3 pusha jg and mov xor fcomps cmp push jg or push idivl fwait add out ja aas jge hlt mov mov loopne dec stos mov push mov pop xor jo sub jge lock les push xchg mov dec inc aaa mov jg inc hlt gs add fidivrl ja mov sti add in repz lds (bad) popa or cwtl arpl scas sub jg or xchg dec jb dec jg call xor mov fwait pop orl ds loop shr fldt bound jg fmuls adc inc sbb adc mov inc push pop jae pusha jg icebp sub dec mov jg sti sbb cmp lret insl stos out dec and sbb fsts enter jg sub mov sbbb in clc subl cmp jg push ret js ffreep scas adc sub push std rcr mov jae pop repz cmc out adc stos aaa arpl leave sti cmpsb and jg adc (bad) pop or jl xchg dec push jg (bad) mov pusha mov adc stc xchg sbb jne enter jmp aaa pop sub jecxz sub cmp icebp cld dec test jg fisubl and aas sti dec add mov mov xchg aas jno data16 jne push ljmp lahf out in into or add and mov inc push sbb xchg cmpsb mov inc push ja sbb or mov sub fdivrs sbb mov jg ljmp mov lea or adc lds mov test in push jmp jg insl cmpl and aas mov jg or pop ljmp adc lods sub jg xchg or int3 jg push inc push aad fisttpl xchg je adc jg fxch outsl roll test pop outsl xchg push xor push pop xchg and dec push pop pop xchg pop fs ret (bad) xchg dec mov pop adc pop aas jp dec sub adc or in pop jg je cmp (bad) es das inc pop imull push jle pop mov jae jno ss push sub insl xchg into (bad) fcompl sti pop mov scas outsb out jg push rol push sbb jbe aas pop lret push add stos movsl sub jl and gs inc jg mov xchg mov inc addr16 mov add mov inc cmp aas lea daa fs lcall loopne loop outsl shlb (bad) mov push mov mov jg (bad) in push ds mov and js xchg push jg push mov dec cld nop cmp jb cmp xor add adc out mov jecxz pop sbb int cld mov pop les xchg lcall fsubp add cmp rcl inc push inc mov add push jle cwtl mov pop dec fiadd jg enter data16 jg out rcrl mov hlt and jne scas mov add lock mov lahf loop sub out (bad) mov mov jg (bad) out ret add inc fisttpl les mov out jg (bad) jno jns pop (bad) push outsb pop sbb in das add jg dec adcb sbb fs pop cmp (bad) cld pop cmc int cmp push rolb insb jmp sarl ficom ds outsb arpl sbb jl inc outsl pop or mov fidivr lods push mov jg popa mov add arpl and mov lea xchg mov lock arpl (bad) incb mov or lds cmpb ss mov rcr jo rcrb jg stc imul jg xchg jg pop mov jg inc js (bad) xor jg mov lret (bad) mov mov push xor dec xchg cld pop jg jae dec aaa mov jns push mov scas js mov sti insb xchg inc pop out mov hlt loopne aam inc cmpl xchg push inc cld fildl mov jecxz dec data16 fs xor cmp cmpsl std xchg mov int3 aas jg aad hlt shrl or cltd stos out arpl ret or scas xchg and push loop pop lret fldt xor in add adc inc in mov jg cwtl or jg sub fildll and cli xchg or out jg push cmp sbb aas xor xor dec hlt stos jg icebp mov bnd cld xor ljmp xchg imul adc stc jae cmpsb push mov jo bound iret cmp pushf or jg sbb loope inc idivb fld in add dec inc pop lock xchg (bad) jg pushf mov lret ds out jg push fsincos cmp fwait mov dec xchg adc jg inc ss js push xlat mov dec sti (bad) mov sbb je jg sbb in mov xchg jb test or in cmp cltd (bad) test enter lods pop idivl inc push mov pxor int andb pop lods adc andl add xorb and outsl pop data16 add mov adc pop js popa jg (bad) inc and jg xchg jmp jecxz xor sub rorb repz add lret fidivr inc add xchg jne mov pop clc pop push mov popl jo xor test dec hlt cli outsl lcall mov sbb into xor cmp pop jge dec mov and cltd idivl jg add ds xchg and daa imull xchg adc out out dec or mov jg (bad) les out mov scas imul inc jg nop jbe jnp inc sarb adc jg test lret mov ja cmc (bad) fnstsw or jbe cmp insb and rcl pop stos (bad) out fimull mov xchg sub jg and test add das (bad) xor lods repnz lds mov cli out (bad) adc mov sub jg and loop sub push mov popf xchg addr16 leave shll inc adc mov outsl jne jg push (bad) and cwtl xor cmpl lret push aaa jg sub sub das lods jg adc push gs scas jg int (bad) (bad) das sbb jmp mov jg jp in fucomp out jg jge stc pop fsubrs push scas xor push dec and les into or push fld and pop jg dec scas jns sub push mov fwait cmp mov sbb (bad) test imul mov lods fisub jmp push jg and stos bnd sbb sub test nop test je,pn cmp mov into inc dec mov in out pop jg jno (bad) jae mov jg nop cmp (bad) mov gs shr push fs sub push mov ret pop sarb pop dec dec pusha lcall sub jg or (bad) bound jg mov cmp cltd test (bad) leave sti test stos mov mov jg mov xchg sbb out pop cs and repnz cmp push jg jmp mov mov fbld pop sub jg js ljmp mov push out mov sub xor repz sahf jb cmpsb pop push pop add addr16 (bad) jg std pop inc cmp lods mov ja add daa fiaddl push roll lret jb pop dec mov int3 es lea loop dec inc gs mov aad jg aam xchg mov jg,pn in mov rorb dec pop divl leave mov stos push xor dec adc ret mov fsubrs push insl mov jg rorb pop dec test mov aas cmp sti dec jecxz jg das add jg popf insl outsl push push test inc xchg jg mov lcall daa popf ss imul out pop mov pop ret fildl pop mov jb in adc repz stos push xor pop cwtl aas clc mov sbb insb inc pop fwait jg add sub cmp (bad) sbb repz or jmp inc out cmp jg dec lret dec int mov fisttpll ss xchg in lcall jmp dec (bad) xor add aam les push and enter jg and cmpb iret roll cltd sbb cwtl popf pop aad int3 jg aaa mov xchg mov lods stos fistp pop mov push sahf std pop pop mov jno mov mov imul adc jg scas (bad) lods xor jo,pn mov add adc jg cmp add outsb mov cmc mov push stos sbb hlt sti pop pop dec jg loopne mov mov lahf jg adc jg inc add (bad) lock aam stos (bad) jns xor xchg jg jl movsl jg jmp sbb mov inc pop mov cmp mov sarl jg subl lds mov cmp (bad) and mov xor pop mov into mov in subl lods push adc pop loopne out rolb pusha jg cld lods mov jg aam std gs adc loope jg iret dec test faddl mov mov fnstsw mov das out jg push mov sub fdivr lcall sbb mov leave mov jg xor xor ret fstpt pop jg sbb mov pop pop je aam lea or jle sbb out bound adc test fidivl rolb and mov loop out cmp popf or cs xor das pop ds ret shll imul rcrb fldt jg jne test pop sub lock test pop mov cmp es (bad) lcall and pop js jg cmp adc je cmp (bad) mov add jp pop jb xchg jp jge jnp xor inc jno adc mov push frstor push jg mov and jg pop mov pop push jmp jg adc test inc jg add lock add insb xor insl dec fisubr sahf or jmp pop arpl in jg lret sbb jge or cmp rcl or pop out fildl lods popa jg add sbb mov ss cld jg gs or jg cmpsl (bad) (bad) jns jp mov xchg cmpsb cs xor das jg (bad) insb mov xor push mov (bad) sub mov fcomps rorb lods jg fisub mov lret mov jno pop inc add dec and mov mov inc xchg inc push ja cmp mov jg lock jae dec popa jg xchg test sub cmp jg pop lods (bad) add mov inc dec ret in out mov loope sbb adc push into nop inc loope aas adc fildll insb sbb jb imul jg mov xchg out clc pop stc mov push xlat dec mov test mov jmp cmpsl incl jg rcll mov test dec adc jg fdecstp jne dec ljmp into sbb dec les jg loopne xchg stos jp xchg mov pushf inc jg shll push cs jg gs sbb sub cli jns and std loop push mov add jg insb push push push fdivrl mov push cmp aaa arpl pop mov inc movsl or ret popa mov and xor arpl int3 pop bnd xorl pop mov jo mov mov mov push out and jecxz (bad) jbe jle adc dec mov mov jae,pn dec imul cmc (bad) (bad) mov xchg je and mov and lret inc imul jge mov push aas or lock add inc int cmp mov fmul jg xor xchg fcoml cmp jg outsl sbb mov in subl cmp js das lds into enter jg lahf in pop and fnstcw pop jne addr16 hlt sbb pop sti mov xchg test sarb (bad) jg fsubl nop mov jmp xchg leave scas pop out rorb mov jae jle lar mov push mov clc popf lock mov push data16 (bad) adc cmc push cmpl pop (bad) mov inc enter mov pop push icebp mov mov xchg cmp fldt jg push cltd movsl push xchg mov pop (bad) shll mov mov xchg pop daa ds aas imul push pop mov scas fdivrl arpl pop test mov jg jns sahf jbe mov jg xchg lds and and cli pop jg in repz cmpl cmpb inc mov cmp (bad) gs mov pop add cli ss in sbb std pop pop pop jmp (bad) cmp inc addr16 xchg in bound popa ja bound arpl and hlt mov mov ja pop scas in jg loop mov inc inc cmpl mov pop push adc jg scas add cmp stc push aaa mov bound jg std mov xor mov shlb pop lcall mulb loop dec movsb data16 inc push mov cli mov loope mov jns pop inc loope jg or stc iret inc fidivr fisubrl or fnsave jg dec bound or lds mov mov jg je push xor xchg add jg mov xchg jg jno out rcll ja pop cltd add mov mov mov cld scas iret pop xchg dec sbb fdivr inc jg je aas pop mov dec pop jg mov jg mov sub mov dec jae inc dec cmp cltd outsb xor lods mov loop pmulhw xchg adc mov clc mov pop daa cmp loop stos xor and cmp xorl push les sub push insl sub icebp jg xchg aaa mov dec jg int3 in add andl stos flds aas pop sbb data16 cmpsb xchg arpl mov imul push inc xor dec clc out cmpsb inc inc dec outsl test popf jg mov js (bad) aas mov sub dec aam mov pop imul xor jge cli push jo out call inc mov mov inc pop pusha jne xchg jg adc xor mov jnp mov std mov adc fsub mov (bad) stc fwait push cld je outsb pusha and lcall in aas inc jg bound fwait jno and and imul sub cwtl xchg cmpl fidivrl and jg sub push dec pop jb arpl daa push std jecxz outsb or jg enter cwtl jp fcoms push sub sub inc inc ja inc mov adc jo outsl and addr16 xchg cld arpl ljmp xor xchg out gs push inc jg (bad) and or push negl roll in mov inc mov arpl jg mov lods popa jg add icebp div xchg aam jb adc mov adc mov movsl mov (bad) in cmpsl stc lods sub mov inc incb into ljmp dec pop add pop mov sarb shl pop out ljmp add add jmp lds mov xor fidivrl aad test idivb cmp xchg mov sarl or jne jg mov fisttpll cmp jg adc push out pop pusha cmp jg xor adc or xchg push rorb mov ljmp inc aam inc mov or lea jns aas push das and test adc mov cmp mov ss inc add in push std (bad) hlt inc mov xchg imul test pop add push pop movsl jg sub and call jg and inc stc xchg dec pop jg add (bad) popf fnstsw jle mov cli pop push or mov lahf pop jecxz mov mov leave push dec arpl outsl dec or insb jg lret adc clc addr16 fstl aas xchg cmp inc cmpsb inc jnp sub mov push addl fwait sub imul fwait sbb and daa mov notb and ret out mov jb fnstsw (bad) aaa pusha mov and push mov cmp (bad) sub gs jg add je sub ret pop pusha dec std mov mov sub jae mov out xchg sbb pop inc js xor push push or mov dec into sahf push insb cwtl pop jg xchg ss add inc inc jg std incb fildl jg mov insl pop stos xor lahf int adc (bad) ja pop xorb push jae inc popa das jg int cs (bad) dec sub in and mov dec mov imul jne,pt inc sub scas cltd push dec mov adc and cmp pop bound mov idivl mov out aaa cmp jmp sub fild jg ds cmp or or cld xlat jg cli nop mov (bad) mov repz or aas adc push ja inc fcomi jg pop sub outsb mov pusha xor pop sub dec mov sar xchg mov daa mov dec adc inc test push push sbb mov pop cltd jl mov jg push rclb jb imul mov jg mov cmp addr16 fildl fdivp int call fild add popa ret mov sarl fwait inc or sti sbb shrl cmp dec and jg popf xlat lods inc fdivs push mov sbb xorl lods fdivrs aaa or (bad) fstl push push and ret jg cli cs mov pop insb mov (bad) aaa pop push push add sub xchg rcrl and jno loopne or je out ja vmovdqa test push sti mov pop mov cltd jmp pop je dec pushf imul inc sbb das loopne fidivl pop jg sahf mov mov ret inc fwait imul mov mov out sbb addl jbe jle push insb pop and mov push fnstcw xor or push sub mov jno les pop bound int stos jg call mov jg fs scas sub sbb add dec add in xchg cltd dec cmp mov jg mov pop cld jg and stc mov push sti and insb jle andb jg rorb fidivr pop dec jg mov add sahf subb push fadd out jl pop stc xor sbbl sti push mov js dec sub lcall jb sbb pushf shrl sub push jg push popa xor pop test dec xlat or fisubl (bad) sti add pushf push cmc or (bad) jns pop add icebp add pop adc test ljmp repnz mov dec in jg sbb cmp mov enter jb aas mov adc shll mov ja popa xor xchg jg mov in lret xor jae mov xchg jg dec test sub mov gs clc adc xchg loop dec jg inc mov jns xchg jg outsl push movsb pop add test out loopne dec add jg push iret adc sbb mov xchg int xchg mov test les loop lahf pop jg int3 jne nop fist lock and aas push jg push cmp test cmc addr16 adc push loopne jg mov cmp jp sarb insl or dec into notb and aas jno push lahf push mov fs add lock nop jg xchg mov mov shr adc inc loop or inc (bad) inc xor mov ret mov mov movsb ds out mov add lock push iret dec lods xchg mov jns pop dec push inc mov stos js cs aas xchg add mov xor push aas and daa adc ljmp outsl and insb insl sub rcrb into ljmp leave xor xor pop sahf dec js out outsl lret mov iret mov dec dec ds test mov aas pop add sbb push aaa dec test sti movsl mov mov aas sbb jg daa ss or popf std sti sbb pushf mov mov adc testb cli sbb mov dec (bad) mov test enter jbe cmc out and pop pop xor jb mov mov pop lds jg inc aaa fsubrl push push pop das aas inc cmp jae mov dec loop jg dec (bad) push insl jecxz jg notb jo incl jno jg (bad) lret jb cld jg mov push push xchg aas stc push xchg sti jg xchg scas lahf call les sbb jg lods rep in lcall mov inc lret jg notb (bad) jg push std jns adc and leave lock xor movsb jg nop mov hlt out (bad) jno jns mov icebp mov movsl fdivp mov outsb into jg imul sub or push fidiv test repnz jecxz push jp sahf jg push movsl cmpsl les mov mov push jg ljmp mov jle adc setnp push sarl sti mov dec fsub sti cmpsl sbb mulb and test jp sub xchg jg adc inc jns pop jg mov stc pushf jg xchg pop xchg or inc ds roll sti sahf inc sbb xchg (bad) negl in inc cmp jae mov inc into fidivrl cmp add dec aam cmp xor mov inc xlat jno add mov dec xor xchg and cs adc aas ja and fiaddl cmpsb sbb fimul jle xor scas fisttpll fadd inc jg push popf xchg sub fiadd cmp inc popa or lahf mov sub dec into pop mov dec adc scas inc and subl xor out sub loop mov inc mov mov add jg or cmp sub jg mov lret mov add fldt in pusha cltd jg stc sub aaa gs add jg shl sbb jg scas repz in push pop jg fildl sarb lods sub cmp mov out xchg aas sarb dec aas adc pop ja shrl sub mov icebp or and sahf ljmp push xor (bad) jne cwtl jg in scas mov sti mov pop pop popa jae sti pop mov adc push pushf lods jg cmpsb data16 pop cmp stos jle arpl inc push pop xchg imul sub icebp mov jp dec into push jge mov jb jle mov inc xor sbb stc (bad) and test mov sub cli bound dec pop insb add xchg xchg dec cmpsl pusha and in push pop test sarl fildl jp push lds dec mov aad xchg sarl fidivr jg adc dec add das mov pop jg xor jne or xchg lock sbb lods fwait cmp jg and mov insl pop js jae mulb push mov aaa mov das inc sarl push jno icebp pop mov iretw stc mov mov cmp jmp jg ret push sub emms outsl ret xor cmp (bad) ljmp aad jg dec cltd (bad) std push in scas ss adc cmp push int or inc iret addr16 popf push sbb fadds jns sti jg cmp ret cwtl imul int3 ja test and sbb push jg imul daa jbe add lock repnz cmp test mov xchg pop adcb rdtsc (bad) xchg push imul inc aas arpl and jmp js lret mov cmpl mov xor xchg mov xchg outsb sub jg cwtl ja lea into jg dec xor cli or fwait adc (bad) push jg pusha jmp cmp push adc rorb push ss arpl ljmp aaa xchg (bad) (bad) jns xchg jae mov add mov mov push dec jg shlb inc xchg jg jge mov inc rep jg lret jno sarl jg cmp ljmp aaa fidivr sub jae pop cltd dec pusha push jg jmp pop (bad) fdivrp push jg jecxz mov jg jb fs jg out outsb ds sbb mov (bad) jne xchg iret out mov push jg (bad) mov addb es in jge addr16 arpl jg sbb bound lahf push sub sub pop adc lret push loopne and scas bound adc or cltd inc sub inc jb push cmpsl xchg movsl mov cmp int jge jg loope xchg push or pop adc dec jmp jg push jae mov cmpsl or push cltd jg xor jmp sti cmpsl cmp sub mov mov push adc gs aas push push roll and cs std cmpb repnz jb push jg testl stos add cmpsb popf jg fmull (bad) jg push popa mov ja and mov sbb jle pop fisttpl jg dec cltd cmpsl jae jo jg std sbb mov jg xor insb ja nop jg mov push sub fwait aam sarb xor ret in cmp jg jno push out gs sti cwtl cmp mov cmp mov aas nop es arpl pop and out add sub (bad) aas pop push gs and cmp pop xor lret mov or pop xchg (bad) jg or dec jg (bad) movsb shrb lea adc pop xchg push jg xchg in mov sahf int cmp jo or mov mov and and add scas ret pop mov test loope shrb bnd jo in (bad) xchg pop inc sub gs imul aad sti xchg test sahf add adc mov sub jg jmp loopne jg ljmp jg lahf movsl adc aas call inc out inc push fnstsw jg xchg xchg ljmp cmpsb into dec dec orl and cwtl das pop jg push dec and cmc sub jg leave dec sbb js int idivl inc adc push mov test mov stos rcll push aaa jno cmp jg rorb mov test imul sbb cltd mov jg,pt es stos jne mov mulb mov dec popa jo rcr arpl jb push add jbe jbe inc mov sbb mov cmp pop and sub cs jg rorl or cltd or fadd fsts pop popa jg adc mov xor mov push mov lock dec es dec and (bad) mov mov push jbe ss dec xchg fistp enter sti je sub lock fbstp inc pop jg hlt mov out xchg push mov jg or mov add lds jb jle js outsl mov xor stc mov xchg sbb mov xchg movsb push xchg push push addr16 xchg jg aaa cld sub jg add js or jg xor sub and push es les dec hlt outsb aad or add mov jg pushf or and jnp mov imul sub lock out jg cmp jg push movsl stos xchg sub insb loope mov mov sti in pcmpgtw jp add inc scas rcll data16 mov je (bad) mov pop jl xchg push mov test dec push pusha pop jns addr16 stos inc cli mov dec ficompl dec jg lret push xchg mov rorl lcall jg mov (bad) (bad) (bad) xor xor mov push mov sbb and jg inc adc cmp add cld (bad) call push mov movsl xchg or xor mov pop lcall aad sbb inc xchg aas out jg bound idivl xchg imul jg jae jnp mov test scas xchg sarb cmp out and dec inc loop mov mov and dec mov fisub jno pusha jg (bad) lret iret ss sub mov or sbb movsb jmp aas dec mov movsl jg pop jle pop insb and jg out arpl push push (bad) lock lcall (bad) insb cld ret sub test lods rcr in adc jle jg mov and xchg aas (bad) sbb inc lahf mov pop and xchg repz add ja test push jbe mov sarb cmpsb pushf ljmp jg sub sti in in cmp outsl cmp aas es inc lods cmpsl xor lcall lea jg xchg out test jg dec imul mov jp (bad) sti into or jg aad mov xor sbb xchg jg pop js pusha mov jnp cmp mov paddsb movsb lock pop lock add adc and frndint mov xor int (bad) mov xadd add test push cmc add std bound aam mov push test (bad) jo adc arpl xchg stos jno idivl mov pop imul xchg into cli inc mov jo (bad) push movsl out popf mov jl leave mov ficom movsl test hlt cmp mov ja jg jle bound and and arpl jne or popa mov add jg fldl jnp lret int aas jne inc test xor fidivl mov ss inc cmpsl push mov rorb (bad) ds cwtl jns addr16 mov sbb cmpsb fnstcw ja adcl mov aaa sub jne and mov scas popf cmp pop xchg xlat or outsl in adc jg hlt push mov jg ljmp jns add cwtl in mov push mov sub sbb xor inc in xchg rol ss adc aas in jbe sbb pusha add jg lds sub (bad) dec dec pop popa inc adc or adc mov fbstp push scas jg mov xor mov sahf mov sub mov jmp dec repz pop jg sti dec lods cs xor jg loope imul jmp cmp inc sbb jg hlt push imul xchg pushf std push jmp dec popf fistpll out int mov dec mov rcll jg adc int3 lea cmp (bad) movsb (bad) fidivr fadds pop inc int pop jae pop mov adc sub aas aas rol ficomp gs das jg scas in mov cmp xor mov or mov int3 adc xchg bound mov cmp mov push pop push (bad) mov jg jno mov jg (bad) dec les shll mov repnz sub les jg enter lahf loope sti inc xchg lds lods sarb (bad) mov inc int inc stc lcall pop dec mov lahf jg pop je gs sarb pusha arpl pop clc sbb cmp inc sub sahf push lods jae push dec lea ja and add out leave pop in rcrb icebp jbe mov cmpl mov rorl lock inc arpl jg push in jg jp adc sbb pusha jle lsl nop test xchg jno xchg fnop pop test cs pop nop loope cwtl rcrb jg into fnsave mov sbb inc dec jg jae test lret mov jg cmpsl sbb push xor imull lahf dec in enter lds mov iret dec in int3 pop aas pop or dec cli mov jg xchg jae xlat imul cwtl mov arpl jg adc iret jg insb lds ja sbb repnz xchg lret bound push cmp mov add clc jg and mov js jg pop pop mov push push out je xchg sbb jg (bad) push add addr16 in les rclb pop or es jg mov fsubr (bad) pop js mov jbe rorb inc movsl inc in pusha (bad) jne mov rcll jg push loopne push mov jne jae jp mov arpl (bad) or jg inc xchg fwait jbe inc cmp icebp push iret popf adc pop push repz and mov (bad) mov ss icebp and sbb call adc aam push sub cld loopne xor mov jg std xchg dec add xor jns pop xchg mov jg shrl fist adc jns js inc mov and cmpl lea jg stos cmc add js inc push push cmp daa (bad) xchg pop imul popa in mov ds or sarb cmp cmp or sbb pop std and pop outsb in cmc add cmp insb hlt sbb mov add subl repnz cmp xchg movl sbb lods sub mov ffreep jno fnstsw jl sbb ret stos inc mov sub cs push jg in xor jnp pop jg add push nop jg imul popa cmp and aaa pop push xor nop js jge inc xchg jg sub fisubr leave push pop jmp out push jg aas andl mov pop xor incb loope lret mov roll xchg mov negb or and jg sbb outsl lds jmp pop daa js mov cld (bad) jo aaa jg lret (bad) xlat ds and mov pop pop out jg rolb imull and mov fs ror insb lods scas aas fstps ja xchg in jg jp xor xor jg (bad) mov sub adc insl stos sbb pop xchg inc push xchg cltd ret inc xchg test pop jg mov lods mov out mov fs cltd test mov add push inc jmp aas dec or inc sub jg push into mov loope jg (bad) xor xor pop cmp dec dec pop mov hlt lret or and enter out cld jg jnp fsub dec popa gs js mov in pop loope popa or push daa push mov outsl mov fwait pushaw in jle pusha and fiadd pop pop (bad) xor pop jecxz,pt packuswb dec in mov mov test lcall data16 in mov pop pop sbb hlt jg rcl outsl or lods jg sub jl jg mov (bad) dec insb push push mov addr16 ret jg,pn (bad) mov or jg mov ljmp cs push (bad) mov cmp and jg jle sub stos fmull in pop cmp sbb (bad) lock jg daa inc scas push jecxz loope cmpsb stc sbb mov adc mov mov jg mov xlat jne jo aas push cmp jecxz xor out mov aas lods cli cmp add mov xor aam pop outsl sbb dec and xchg out test lock aas mov jno sbb dec inc inc mov push jg add (bad) aad sarb dec mov and insb pusha mov sbbb cmp jb cli mov push loope jae pop cld not jg jmp cmpsl (bad) mov aaa cmpl mov sbb mov jg cli inc dec inc adc mov outsb in adc adc out mov push inc mov testl dec insb jg xorl clc (bad) mov cmp lds dec shrl cwtl je jne faddp mov add cltd addr16 pop lods push jg xchg sbb mov outsb sarb adc clc test scas xchg faddl or sub roll outsl jg sub and jg call loopne jg mov stos sbb or push repnz add inc fs movsl loop sub in jg push inc sub xchg push and fild jg (bad) fisubrl dec sbb push inc (bad) (bad) mov push or movsl dec aad inc jmp fwait in mov addr16 dec test adc inc lahf push std in fildll add cli xchg sbb enter daa jae jg dec fs inc popf xchg xor mov jo aas pop mov rorl jp jg mov int3 out sbb jg bound pop mov mov arpl fcomps repz push adc mov imul lds bound sar jnp imul (bad) dec int3 mov aas sub fimull add imul aas jae cwtl inc fs inc es jg mov ja mov mov mov add lea icebp jg popl sbb arpl mov lahf in stc call jg inc dec push call stos mov sahf jmp loope cld test ja jg arpl stc push sbb fisttp cmp jg sbb or sarl aaa call idivl ljmp dec in in sub xchg test push push inc clc add stos inc jo adc fwait and push gs pcmpeqd enter rcrl jg xchg out scas mov lea mov dec sub (bad) xchg adc push mov sub sbb pop mov arpl dec xchg (bad) aam jbe lcall (bad) in xchg lahf jne jg ja push rcl test mov jg pop pop imul jo dec outsl icebp (bad) movq pop fs push sub (bad) mov nop and sub fistpl mov fs pop cli inc push mov fbstp jg movsb adc std lods sub sbb aas jo cwtl lahf stc jg mov push mov jg dec sub lock in jg fidiv xchg cmp jne pushf mov cmp and ret mov out sti push mov int and jo xchg cmp dec add dec jg push das movb cmp and cmp jg nop mov lahf pop mov lcall pop jg push das mov (bad) enter or lods (bad) movsl adc (bad) jg loop pop sti adc mov jbe jg je es and cmp cmpsl jg xlat mov idivb push insl test out pop js aad dec jecxz iret push xor jg and or fisttpll fistpl gs sub jg and loop pop push cli lock jnp not std dec orl pop or push popf roll leave and jb test dec inc jns lock inc push jbe and fadds jg sub push jbe out jmp aaa xor data16 or add test sahf sub fidiv and jg pop lcall incl dec sbb int push and cmp pusha jnp jecxz cmpsl xchg (bad) cs jno fstps (bad) out andl jg lods cmp mov popa (bad) jmp insl lock mov imul jne xchg fild arpl pop or mov stos cmp scas mov inc fsubrl push mov cli sarb lock and pop lret aas (bad) jne std hlt iret mov icebp sarl xor (bad) (bad) (bad) mov pop jae lods lods lret jb fwait imul jle test arpl jg sbb and inc outsl lods cmp jg orl ljmp pop push lods fsubr hlt es insl iret xor jmp jg mov adc sbb (bad) fsubrs jne pop push ds orb jg imul and adc xchg jg fidivrl mov pop mov pop dec jge mov outsl cli fs mov mov xchg jg xor push jg jle pop fidivrl insl cmp sub inc ror add sahf mul jg arpl jge jecxz (bad) cmp sti (bad) push shrl jle xchg int jne daa add in lret test ucomiss aas jg int3 insl push mov bound mov mov dec xor cmp sarb pop in jne mov push sbb inc pushf jg and pop clc xchg jg iret insb lods cmp loope ret mov mov aad imul scas insl inc pop pop xor outsl das (bad) aas jg ds push jb lock stc push cmp int addr16 cs loope dec js and outsl inc xor jo sub pushl mov jb mov jno sub inc ljmp jo aad (bad) jmp jecxz mov mov sbb negl sbb push mov les jg push je dec pop dec jg (bad) leave fnstsw xor mov in push pop xchg push jg ds xchg out mov cmp sub or cmpb and fsts cmp mov push dec cmpsl shrb jg pop xor mov pmaxub call add pop movsl xor stos cmp cmp jns int js ret jno sbb mov out mov cmp lock fmul rcll xchg nop insl mov stc sarl sbb and xor sbb xchg mov loopne out scas push pop sbb leave sti xchg inc cmpsb inc pop dec pop lds scas sub fimul and rolb or aam lcall test mov add bound scas enter jg std pop sub popf xchg push lea cld mov jg push in scas sub xchg mov rol fistl jmp cmp jle jnp test fnstenv cmpsl pop shufps test xorl lret mov xor sub (bad) ss mov ret push xor pop mov jle jg mov test subb jg imul mov pop jg cmpsb add les cmp out xchg movsl fsubl pop (bad) push outsl loope push (bad) lods sbb jge lcall cmc pop push dec aas pushf mov gs jg stos imul inc mov inc sbb jne pop loopne mov mov jg mov pop xchg push inc jg push mov mov xchg mov jg mov inc jg jnp sarb cwtl and aad sbb dec jg outsb icebp bound test mov ret nop rclb push mov addl into or call aas inc cltd push jno add dec mulb ja pop and push jb push loop push jg cld cmp add mov addl (bad) mov add or je jg (bad) xchg push das cs jle push mov push sub fs jg lods inc wrmsr pusha pop adc repz push jg xor xor negl pop movsl push ret jae cmpl or jg scas sub jg ljmp jg es mov pop rorb jmp push rclb jb sarb inc mov (bad) call iret inc hlt js jg (bad) stos jae and sbb jg movsb or mov adc and cmc add and jg pop or (bad) push aas mov sub jb mov fs cmp jg fwait ja add xor add xchg pop sti stos int inc ja insb mov imul scas and test push pop or jb dec lock and test add insb dec loop cli mov (bad) aas and inc pop popa roll inc cmp movl xchg mov ss xchg pop movsb xlat adc dec arpl (bad) mov out add fisttpll add or stos imul in jno mov (bad) mov jp mov add sarb or ja and jg stos (bad) and xchg pop jg loope fcmovb fs jg fwait mov call dec flds add ss insb push push mov imul jmp lock sbb ret dec inc or push into inc ret pop jg imul jno idivl lcall pop mov dec ss sub jno jg sub sarl jmp aas (bad) enter das dec dec (bad) cmp mov or out mov aam sahf ss pop pop subl adc and mov cmpsb out mov scas xor and outsl out xchg or inc mov jg lea push jg push icebp or jg adc je lret arpl aas lret inc sbb ss out mov sbb icebp mov sbb push push mov push inc insl jg fistp ret cmp aad pop pop imul mov xor jg sbb xor cmp outsl cmpsl call jg clc jmp leave daa adc or push (bad) in jg test push sub fsubp jg lods daa fadds mov popf aas outsl dec (bad) mull cltd shrb loop adc inc fistp (bad) in stos repnz ja dec (bad) scas idivl out adc cltd cli inc retw sarb adc mov ret (bad) aad les sti aaa idivb mov pop and jg outsb jp fisttpll xor push or jecxz mov arpl movsb aas int pushf dec ds jg mov out jg test push or mov push cld jg scas lahf xor add jae bound xchg pop add cmp and lods pop mov lock push xchg xor jnp or adcl sbb jg sbb std popa divb dec in push xor inc add repnz loopne cmpsl jg xor les and pusha cmp xor mov dec ja sbb (bad) push ret pop stos adc mov mov pushf pop jb,pt rcll inc fldt (bad) sub lods jg pop insl cmp sbb mov (bad) sbb push jp push xchg mov add mov call stos jno add mov js and jg insl lcall stos cwtl (bad) and idivb loop pop insb call add popf movsl ljmp mov jg rdmsr sub dec push cli jo fwait jg mov mov inc (bad) cmp pop jmp ret xchg or mov adc xchg jns ret aas stos mov aam mov jg jnp push in sbb test and mov or xlat dec aas mov out inc movsb cwtl shl xchg add iret dec push jg cld mov mov aam jg gs sub fmull inc jb mov outsl xchg nop add loop bound cld xchg pusha repnz inc jg cmp rclb (bad) lock das leave jg (bad) notb push imul hlt jg negl sbb pusha push jg push fiaddl pop enter jbe fistl out push fistpll xchg rcrl or push jg xchg and or xchg jg rclb lcall fldenv outsl push xlat sbb inc inc sub push das add mov cmp sbb sub push mov or push sbb fstl lock xor cmp lods xor and inc sbb aam jg sbb cmp loopne arpl mov jg or adcb loopne jg ficom (bad) jg rcrb mov push sbb adc and mov sub outsb jg jle fisubl fidivr jg sbb mov inc rcll (bad) mov jae cmpb dec loope leave jg jb movsb shlb icebp jg pop xchg int3 xor (bad) jo mov jg push adc lahf (bad) aaa out cmpl dec mov js xchg mov inc sbb cmp dec pop shrb lods jns dec dec insl mov insb and jg xor jo popa pop nop or and and pop xor adc lock xlat stc jg xchg sti pop xorb jg pop push (bad) mov jg jmp inc jle push mov cld mov test fdivrl mov outsl jnp cs push add mov jg push ror cmpsb push popf jg lock dec push xchg pop aas in pop xor dec rorl push js mov pop mov addb jg in mov aas cmc sub inc adc inc push xorl pop fstpt loop movsb pop mov push inc jg insl mov testl in (bad) (bad) lock sbb idivl or pop insl mov jge jmp int cmp mov outsl idivl pop enter xor inc mov (bad) mov mov sub jg add xchg (bad) mov mov dec in mov pop jg popa dec es mov mov inc fnstsw mov and mov xor xchg sbb ret pop jle mov xor insl divl xchg pop mov andl notl xchg jae shl jg mov mov aas pusha sahf mov addr16 int3 jg jmp popf push mov jg jnp fwait pop jg or mov pop jg,pn mov pop rorl sub jae pusha xor pop ret aas outsb movsl stos sbb xor mov outsl cmp mov stc imul incl xchg ljmp pop mov cmc fbstp jg idivb jbe jg cmp addr16 test jg fiaddl add xchg into add dec mov mov insb bound add inc or inc (bad) (bad) add jns jg adc push push push sbb out mov cli mov adc fwait push pop adc add imul cmp pop inc sub adc pop loopne movsl out pushf pusha outsb xor jnp or cmp addb xor aad lds lret lods (bad) push jg or std mov loop jbe and jg int3 cwtl push or dec mov es jg insb xor lcall mov incb sbb clc add test mov or mov faddl sti jo xchg rcr sub or xor inc mov stos aas insl ret inc scas sbb inc mov push fadd enter jg dec jp scas add lahf lcall cmpl (bad) push sbb lods sbb fwait and lds pop jecxz pop sub jp mov movsb bound cmp mov cmp mov xor fidivrl les jg (bad) jl mov mov pop and in (bad) mov dec aad adc mov das jmp arpl mov jg out sbb mov stc sahf mov adc mov daa mov sbb ss push popf dec fildl mov shrl addr16 dec imul pop popa jg int xor mov rcrb pop movsb out jg ja xchg lret sub scas (bad) ss pushf jns push sahf lahf and mov sahf mov mov dec loop xor dec sbb and push (bad) jg into push xchg xor lahf dec jg cmc jmp cmp fs xor leave adc xchg mov les clc jg ret sahf mov jg jno push out mov sub jno lcall sbb mov mov stc flds mov inc mov sbb xchg in lods divb or cmp dec frstor mov and inc repnz jg stos or das test and sbb adc jg pop sbbl faddp sti mov or pop lock jg xchg add jg or arpl mov adc pop cmp movsb call in jbe jmp jg push scas int3 outsb cmp jg jp adc jnp xchg cmc xchg (bad) dec jg mov mov jno inc cmp mov pushf outsl mov jl jg lret pop mov js enter mov aad pop jg data16 mov fmul jg into xor test sbb hlt mov or pop inc dec outsb or ds mov into popf fistpll test cmpw inc mov pop das stos cltd lahf repz mov neg imul aas sbb aas sub jb cmp adcl mov jne xchg imulb push orl pop fnstenv outsl push sar fiadd pop aad dec addr16 ret test test js jle dec mov aas (bad) repz dec subl pop mov lods fdivrl jns fs das mov push lahf jne or in pop and mov outsl and push insb outsb pop mov pop lret (bad) ss or cmpsb jnp adc loopne xorl dec push xchg inc mov imul push mov neg ret arpl adc dec mov mov mov dec mov lds push cmpsl gs aas cld xchg aaa jg sbb sbb mov and out jg fs mov jmp xor jg or sub cli pop cmp sbb dec pop mov mov inc jmp push jle jg jbe xchg mov sti jg mov push and add mov or hlt (bad) cmp mov test movsl pop pop addl inc fistl dec fsubp sub in jo push mov pop push aas scas arpl push inc cmp pop jns popf inc and or std jo cmp inc dec iret mov push push fs jg dec mov mov push pop sti imul jle out lods lret fidivrl inc cmp push xchg jmp dec nop ja mov xchg out out push dec jle jg jmp sub addr16 xchg loope inc xchg xor pop fstps dec arpl mov xor mov addr16 test test xchg addr16 pop jo lds mov gs xor (bad) pop in mov jle and jg xor das aas inc arpl jns dec cltd enter jecxz shl push jae into jg aas mov mov fdivrs and and mov insb scas addb inc fmul sub mov addr16 in cmp inc dec jg cmp xchg xchg push ret cmc xlat dec mov cmp rcll fisttpl or cmpsb push cmp inc push push les xor mov out fsub pop mov cmpps xchg jg sbb lcall lock jnp (bad) sbb cmp incb and inc sbb or xchg jecxz daa movsb jg or fsubrp dec insb inc fistpll orl (bad) mov jnp cmp push dec mov aas ret cmp cmp dec mov rcrl push jg dec clc and aas cmpsl mov xlat mov movsbl and mov push andb pop sub mov ds in sarl pop dec scas or sbb (bad) js (bad) movsl jae add cld inc outsl ss in dec mov cmp (bad) jg ret adc cmp mov (bad) jg and loop cmc aas jg jge cmp jg arpl xchg xlat mov pop dec sbbl fmuls add jg adc or mov lahf jge push or mov aaa fcmove mov jg repz push mov adc pop mov mov (bad) aad (bad) int stos bound mov inc clc or int3 jg jecxz push aad push (bad) jg mov jo out adc jg push lret repnz cmc mov ret jg lock push jg sub jo scas call (bad) div and test adc dec movsl jg jne pop inc add inc daa and xchg lods xlat mov cmp pop ljmp mov fwait jg inc out mov mov pop (bad) sub adc pop ja es xor ret imul shrl mov pop sbb inc jg pop les xor mov push jno sarl jp pushf adc xor iret fistl xchg test outsl sbb pop jge push cmp cmpsl jg add jno push mov (bad) dec pop fs rorl pop jg pop add or cmp jg inc mov inc jg or jecxz loopne in arpl jg sbb cli jo fistpll xchg jg insb jmp inc ds push dec jecxz dec icebp jg (bad) hlt sbb pop push cmpl sub test in dec imul mov xchg mov cmpb jg or andl jb jl sub push ljmp mov pop inc mov cmp hlt xchg xor adc into stos sub add adc jmp sti lds negl or rolb shll sub jg (bad) xor mov adcl mov dec shrb sbb sahf icebp int3 adc add mov xor inc pop push insl aad leave mov imul fwait jg xchg xchg imul push mov repnz pop jnp push ss push cli aaa adc jg ret push mov add mov pop mov std add test sbb push jg push mov mov dec mov adc mov repz push es cmp lret data16 icebp sbb insl sarl popa movsl xchg inc (bad) outsb xor aas sub cmp jns xor pop jg mov icebp hlt dec mov sarb inc scas or lea fnstcw xor mov sti mov (bad) pop pop or push pop jg mov lock jmp pop cli push jg movsb sbb js sbb sub hlt lods fdivrl in popa (bad) xor mov inc jns push inc lock or pop jo dec adc lods outsb repnz cmpb jp pop loope sahf mov js movsb jp jg mov jb pop mov sub fisttp inc adc lcall jg rclb iret jg cmp jg (bad) xchg jg or adc jg xchg lret pusha mov push je bnd out adc (bad) roll fadd mov lahf inc pop les mov arpl fldl mov das xor es pushf jg (bad) (bad) lds pop call andl jg xchg sbb fnop sbb lcall mov jg ds loop mov dec add jge jno adc mov dec or fdivl mov aas lock xor test imul ja sbb out ret dec pop jbe lea jg dec xchg js or jg lret ljmp stc (bad) pushf decb cli mov in pop pop dec or lods call insb aas les outsl dec add popf aas inc lds xor mov mov sbb push sbb sbb fdivl fldt or addr16 jg push xor cld stos jg cs mov jno jg and and jg cmc addr16 jecxz aam push fcom aas cmpsb les or inc cmp test dec jg (bad) mov push cmp scas sub cmp outsl in aaa mov jg xor xor pop fcmovnb mov inc xchg and xchg lret push outsl mov js in mov inc pop gs push and aaa sbb hlt dec lahf mov xchg maxps call push fnstcw idivb push jno mov out lds add mov and loopne cmp inc call add jo mov mov jl fstp into cmp popf pop mov and inc pop aaa scas test jno fld jecxz into inc sub jg cs or mov sbb adc cmc push test loope add loop adc outsl mov add xor xor xor test ljmp push clc mov pop mov stos int3 pusha outsl lfs cld aad daa inc mov outsb cmp inc mov jne push sbb adc shll or fnstsw lods xchg inc pop jg sub cld fisttp adc daa icebp cmpsb rorl mov mov in sub mov and inc insb add xor mov jp sarl retw adc inc sub jg mov pushf push mov imul or incb and cmp jg insl mov repz insl add jg pusha xchg icebp (bad) dec inc mov in inc test (bad) aas push in bound dec dec das and jecxz imulb mov add mov (bad) jle mov lds addr16 sub cmp mov decb jg xlat mov stos jg or mov (bad) std dec pop out addl sub (bad) cli iret sbb mov int3 mov jg push std push rcll dec jg mov into adc aaa test mov inc addr16 pop lods cmpsb xchg and jle jg std in add mov insb push fisubr or jnp jo imul lahf jg add pop jg mov cmp jg sub dec add mov rclb out popl mov mov cltd jmp fildll bound push shll jnp jg pop (bad) ja lock pop aaa idivb popa fimull jg scas jb mov clc pushf mov inc jbe inc (bad) pusha jg pop jecxz jb aas fdivrl pop movb call mov or mov add and adc push fucomp jg addr16 movsb jg add andl fisub inc mov mov inc xor cwtl jg mov cmp jg cs ffree mov jg push push lds sub mov inc lea jnp ds push jg sahf popf (bad) mov mov xchg push sarl xor pop adc pop add sbb insb in or pop (bad) or cmpsl outsl inc pop push mov pop aaa pop leave sahf sub or subl adc inc sbb and inc pop repz xchg jg jmp pop xchg add adc jg pop pop (bad) jp fistpll js xchg popf outsl das int (bad) fisubrl jg sbb fldl rorl loope cwtl lcall aaa lds sahf sbb xchg jg ror sub sub mov xchg pop inc iret cmp dec fstpt inc add movsl jg rclb and mov xchg jl out in lock xor sti jmp loop aas pushf mov jo push jg and fildll jl add cli es push inc xchg cmc and lret jnp mov pop jmp sbb nop adc imul clc movsb lea jecxz jae jmp cmpsl jb or ret insl lds aad fwait orl jmp and push mov mov pop sbb adc dec loopne aas push js aad mov inc jg adc jb sbb mov jbe fadd sbb ja sub xchg stos mov and dec jg loopne xor jg fimull shl aam sarl sbbb xchg pop data16 das sub (bad) cmp repz out jbe ret cmc jg pop jge pop stos aaa sarl sub scas push jg loopne addr16 ss aas push pop adc push movl shrl lods movsb mov xchg jg adc nop shr leave dec icebp mov fistp jl call inc pop daa aam test mov movb mov arpl xor jg cmp mov jg xchg cld or mov cmp adc xor mov inc dec (bad) adc jg fnsave xchg out mov sahf fild push sub and jle jl lahf insl mov icebp jno fmuls jo int3 jns idivl stos mov test pop mov mov inc mov jg jo inc cmp adc sbb pop dec or push cmp sbb cmp aad sti hlt pop xor jg fcom pop in xor cld pop fdivl xchg jno into xchg scas jbe mov jg and fisub mov mov aaa jns rcrb (bad) inc imul mov jg inc (bad) aad outsb scas mov out jg xchg or inc xchg jno fcmovnu dec movsb imul mov movsb jg push cmp int add pop push sarb and cmp jl (bad) or push mov pusha fildll je aas stos cwtl xchg out mov adc (bad) mov push inc in iret enter test hlt ret or movsb popf xchg cmpsl int into xor jae adc inc mov add loop and out mov shrl addr16 aam push aas push lcall pop mov mov pop arpl ja mov cmp or imul and jg mov dec sarl pop jnp pop sti sbb inc fcoms lods xchg mov dec test notl out fdivs (bad) test iret mov imull fcomps pop (bad) stos mov push jg arpl xor dec aas in push das push icebp push pushf dec test jg fldenv mov jle mov mov xlat stos clc mov js bnd inc rclb call cmpsl add pop jne out adc popa mov mov imul incb pusha test loope and dec push cmc pop jg (bad) xor les pause xor fildll fs lock mov xchg jg xchg lods mov or pop out mov popf push fwait cmp jno lea xchg ja cs or test add cmc and jg jno outsl in pop xor les sub mov jge push dec xor xor data16 fdivrl or jb push ja xchg mov jg push loop adc xchg (bad) and pop sub adc into jg stos mov cmp cmc shll (bad) incb mov inc jns test jg jmp mov mov sti test (bad) (bad) jg in pop xchg jbe iret xchg jg sbb leave faddl mov test stos pop aaa aas fbstp adc mov xlat inc cld mov scas (bad) call jg (bad) sub sar push jg cwtl jns test inc lds pop mov loop push sbb push das rcr nop mov aas mov test jae lea xchg jb inc sub cmp xchg sub xor mov push xor and xchg cmpsb out movsb push push jg popf jbe cmp ss jle cld pop add dec push jg call dec xlat jg cmp pop dec pop mov mov adc test sub repz jg shlb jg aas pop test sti jmp (bad) pop lea (bad) ja xchg popf mov stc jbe push cld addr16 sub cmpsl aad xlat jg mov das ljmp outsl pusha xchg outsl sbb es mov std int3 mov mov out inc cmp push div pop adc mov adc dec pop mov xchg dec rcl xor push inc push push stc mov jg vpunpcklqdq xchg out imul in cmp mov push shrb arpl ds idivl imul jg lods or sub cmp jg mov sbb mov jg loope cs dec (bad) adc push js ss pop sbb inc test dec cmovs std sbb sahf dec cli outsb inc xor xchg loopne stc faddl jae loop jnp lret lods fist dec push jns mov imul sahf mov jg out repz fistpll jg ret shrl dec in and jne or dec aam cmpb adc (bad) xor fucomp pushf dec in int3 add fistpl ss push jg fmull and add test stos sub xlat out movsl pop mov insl jle inc inc int3 mov push fisttp jno ret or and je adc jecxz jl into xor jg jae cmp or jg add jg cmpsb in xchg sub mov outsb push or lock lcall xlat in nop xchg js adc sti or roll imul inc gs mov aaa push jle pop loopne xchg test js loop in jae sti test scas mov std cwtl mov adc hlt jg mov (bad) push test data16 sub push cwtl dec bound jle fs add push mov (bad) iret movsb dec xchg push jg or xchg mov push jl push and cmpsb stos leave sub out js xor bound (bad) cli les repz in in jg add lods pop das stc pop bound cli fdivr sub stc mov inc xor push jmp lret aas (bad) aad adc loop add cmpsb fild mov and or dec cmc pop imul scas (bad) jg push lods test adc sti ret push xchg ret ret out or test lret jg shrb push enter lret cmpsb (bad) loope (bad) stos cs jg insb (bad) or sub jg orl aas inc fisub dec sti jb or sbb cmp jg cmp clc out inc lahf jg push pop in bnd sub imul rolb loope sahf adc jg push fimul jae (bad) es in cmp scas jl cmpb in cmc add hlt jg dec sti lret pushf pop push cmp and (bad) gs push sbb jg add icebp cmp mov dec fildl daa aad mov adc jg push pushf add xlat dec icebp jg aaa mov test cmp stc pop pop and mov inc pop or addr16 pop mov test insl lds ret lods lret jg xor fwait add call lcall fucomip ret mov daa popa adc xor or outsw pop jmp cmp adc div jg js dec insb bnd dec dec outsl outsl or (bad) or aas jg and bound clc pushf mov in inc push mov stos out fidivrl into mov daa sti fcomps fs aas mov fcmovnbe and adc pop push lret lahf add jle dec pop inc mov stos mov scas jp dec mov aad cltd test and out mov jg inc xchg add mov pop sbb jecxz jg test sar sahf mov out inc fstpt push pop fisubrl je mov or mov jg xchg jp inc (bad) mov mov test mov pop pushf shll or or add cmpsl imull lahf jne xchg dec mov js scas popa rcrl jl dec (bad) xor mov lahf scas jg add into push imul jae lds out pop push pop xor and fdivr mov fidivl lock jg sub mov (bad) fistpll sar (bad) test iret jg adc repz insb (bad) jl mov push js enter data16 aas insl inc xchg dec sbb dec sbb int3 std sbb bound les and in jg subl push sbb stc in rolb stos jg shll loope xchg mov (bad) (bad) in mov fnstenv jg inc mov stos xor sbb mov aas pop inc inc sub mov mov in inc jmp push mov cmp push jg lea icebp and std mov in jb pop out imul (bad) in sahf mov push cmp mov rcr daa jg lds xor insb jl bound (bad) testl jg or int jg adc jmp mov lods jns ret cmp pop pop cwtl dec xor daa int3 dec aas jo xchg jbe dec add int mov sahf dec jmp sbb mov dec mov iretw jg rolb jg (bad) (bad) sub jo jg mov dec shrl movlps pop xor je add loope rcl sbb xchg and cmp imul fstpl mov sub (bad) dec push jg clc or xchg jg fisub test mov iret test or mov dec xchg insl ljmp jg aad popl rcll adc rcrb xchg fidivrl sub ret enter and insb aam add jg test cmp mov add out inc ficomp insl stos je imul mov bswap adc gs pushf add mov jg jp enter pusha mov in int3 fwait dec cmpsb out out jg xchg test sarl mov cmp xor push outsl xchg fcmovnb (bad) xor rorb add movsb inc mov iret fdivp mov mov inc push dec fstl sub movsl mov repnz pop dec mov int jg arpl dec (bad) std adc fbstp sub les mov pop xchg ss das inc jg xor ljmp sahf jge into mov jbe,pt outsl decb jns ja xor repnz lods cmp jg xchg stc scas push sbb cld jg add jge mov sub negl pop cwtl cmp jg mov or dec hlt mov scas lea jg sub jge cwtl lock lods mov addl lret mov sub jg jle mov jnp xor lcall jg cwtl es push and pop or test xchg push jg jmp insb into jg movaps (bad) fwait jle jg mov xchg popf fbstp mov adc cmpsl jg (bad) mov ds mov dec sbbb sbb pop je imul cld mov xor xchg pop stos adc in cmp mov jbe sub and call xchg jg mov adc xchg lahf in aas pop shrb test mov xchg cmp push (bad) arpl lcall push mov fdivs and loopne mov aas loope les mov mov dec aad inc repz push jg xchg mov cmpl mov adc ja pop or mov loopne mov add cmc cltd sti jle lea sti mov aaa pop pop cwtl sub ret jg xchg lcall cmpsb mov nop push jg pop adc (bad) mov movsb sub sti cmc jg jecxz jmp jg fs out or jle dec fnstcw dec mov jg (bad) repz mov add dec xchg cmp out jecxz pop mov movl rorb jg xor sub adc cmp mov and cli mov jg pop mov dec and jle mov jae mov pusha (bad) add lock jg (bad) jo adc mov or jmp ljmp lret lcall out cmp das sbb dec insb sbb (bad) jne push cmpsl pop ret sub sbb cmpsb xor add sti jg cmp cmp icebp test (bad) add ret cltd pop adc jg mov pop repz xchg dec mov pop in ror mov xchg (bad) adc adc out pop mov adc in addr16 pop int3 cmp and scas lcall jg push test fdivrs jg xor mov jg ss add cmp push cmpsb inc les jno ret lcall ljmp mov dec into cmc addr16 mov icebp add cltd pop aas stos fidivr push loope lea adcb jg movb loopne aas adc adc pop in inc pop mov call xchg (bad) mov loop jg rcrl add aaa arpl lea dec (bad) (bad) sti mov jg or inc pop jg lock cmp fcompl ss leave popf sahf jbe and sti movsb sub and sarl add xchg (bad) (bad) dec (bad) icebp sub xor pushf xchg push orl (bad) cld in scas push (bad) jno sahf fsubrl sbb jns push pop cwtl sub das mov (bad) pop in rolb jnp enter dec (bad) insb pop sub inc (bad) insl jge scas mov pop xor leave out lods cmp push into pop rcrb cmpsl sbb jecxz mov inc imul jg xor xchg jg dec lcall xchg scas mov (bad) mov (bad) mov cmp sarl (bad) dec call mov add insl fiadd jg addl xor (bad) or dec ja je pop push test jnp dec testl dec pop fs sti lea ja xchg stos jns jg cmp aam aas xor and aas std test aas stc dec pop in pop xchg addl jbe ret add mov jg push (bad) adc jg (bad) xor inc fidivrl jg push mov lods jg and pop jmp (bad) mov cmpsl push xor adc sbb dec add leave imul ja sbb hlt inc sti inc pop test jne cmpsb call lret xor or push inc inc mov inc fnstsw mov push or sahf sub jns jg repz sbb mov or push call cmp sahf inc xlat jg repnz lds xor add jmp arpl jl or inc loop inc mov jae ficomp mov jno dec cli jp (bad) pop imul sbb mov inc in jg daa movsl cmp lea jg jns arpl mov loope lret jg popa mov test sti loopne in adc aam inc mov aas push mull xor inc repz (bad) or int3 outsb mov sbb gs xchg xor adc cmp in es sti int3 das cmp cli iret mov in out add dec notb aas push rcrl or xor jg push ja cmpsb sub aas mov pusha and out inc jg xchg mov sub jg sub xor loop sarb popf dec inc outsb jae xchg das mov dec cmp ds jg (bad) enter ficom xor mov jg fbld nop int add mov (bad) mov jge adc cmp out jg or and add out cmp and movsb outsl fnstsw and jg push or or inc jg dec into imul pop das cwtl jg movsl mov (bad) inc cltd jl add mov movsb push jg and leave sbb jbe int3 in outsl mov cmp xchg and jg,pt push inc icebp into std inc scas jg xor stc jg stos xchg out xor repz jae data16 pop dec inc sub cli sbb popf jg daa enter jg lcall jg in out xor inc jns es lods cmp mov sub pslld and nop daa jb out loop loop sub jl push add fmull xchg inc fiaddl jg test mov div leave pop mov add int outsb xchg inc inc dec gs add popa xor jbe mov jg add rcr jg lahf xchg out lret imul fldcw add call pop aas iret jp push or xchg inc push dec movsl bound jg iret pop xchg push and cmp je adc mul push test sub push mov push outsl popf sub lea pop mov cmp dec push push (bad) out cmp mov pop push xchg push insb rorb data16 rorl movsl sbb adc mov mov out shrb jg push mov add mov mov nop popf dec adc iret jg jl xor add jg or rcrb jle scas insb popa aas call dec dec insl jecxz sub add hlt jg adc mov out adc and repz mov dec daa lahf xor cmp outsl and sbb stos je cmp (bad) rcll xchg jg mov mov mov ss in mov out pop sub dec adc je divb aas xor dec enter je pop xor mov lock fisubrl (bad) neg insl pop and jg insb cmpsb sbb iret mull aas fildl in dec je jg pop stos dec add mov or or fs and push jo popa mov mov sub mov mov fist fldcw into fwait jg xchg add mov (bad) mov jo mov cmc add shlb jg out xchg in out aam into daa js inc mov cmp lcall sbb add push aas jg enter rclb mov mov sbb jmp mov andl mov dec aaa cmp iret adc inc jg cwtl jmp pop xor les fmuls cmc stos fnop mov cli outsb xchg imul jg mov stos jg pushf aam push mov mov pop sub loop or ljmp ss push cmp mov push push jp,pt jg dec push (bad) pop inc lret sub stos push out icebp (bad) notl or mov aaa scas lock xchg mov shll sti sub jne addr16 sti andl dec dec repnz pop sbb call fildl pop jg mov data16 lods ret lods push jb fidivr and jmp popa ret or and out jg jb jp bound jle sahf das cmp pop dec xchg jo jg mov cs jg fbstp cmpsl jg mov int3 jg and mov xchg mov push push pop (bad) or into fild xor (bad) int3 (bad) out cmp pop sti jo addr16 lods mov (bad) outsl xchg cli mov dec outsl dec mov mov add clc jl repnz pop add sbb jno icebp pop push adc out out insl mov sub bound push add cmc mov lea test jecxz xor add add jge jno sub rcr add mov jae mov lods push jecxz cmp sbb dec (bad) int into mov sbb push mov call addr16 (bad) pop cs adc int3 outsl jge or call inc out jge dec icebp mov sub add (bad) (bad) cmp jg stos xchg pop nop out pop jg mov decb insl test sub loope loopne scas and mov jg aaa pop sub mov ret add mov repz mov mov jg arpl add test jge cmp or imul fmuls adc das xchg cmp aas addb repnz mov sbb arpl cmp gs (bad) insb mov pop repnz cmc push aad loop mov jo inc bound ficomp clc push enter cmp push arpl call jg xor mov fldl in jg fdivrl push popf aas and adc push into mov inc dec rcll decb fldt mov cmp mov fnstenv rcrl jecxz sub stos idivb lret aad push or adc test jae mov adc pop mov mov jo pop xor jg nop push ds or jp jg jl mov jg sbb inc (bad) mov jno dec aas mov mov inc movsl sbb xchg ljmp enter pop orl js hlt jg inc fstpt sbb dec add (bad) data16 jmp lods dec (bad) cmp test sarl sub jg push lods mov mov dec ret mov xchg pushf fldl loop dec mov or pop jg xor popf in aad ret jg mov push arpl fcompl pop inc cmp fstps jo popf test jg je (bad) out sarb adc pop or dec addr16 inc test pop xlat dec data16 outsl dec xchg in lahf sbb jg add (bad) xor das xchg inc nop mov and int jle icebp fild pop push push jo xor xor inc jg inc add popf jle (bad) jg fucomp lock push add push adc dec fadd inc jg icebp loop test les cs sbb negl scas sbb pop xchg cmp adc addr16 out bound mov sub or jge inc dec mov or pop jnp cmp dec add mov icebp and mov notl std call mov movsb push and pop add xchg icebp add mov aad jg xchg cmpsl cld jne sbb jg xor adc test inc in add mov mov inc (bad) movsl mov dec xor movsb repz addr16 fstpt xor mov sbb cli xchg or inc lods mov aas jae scas int3 out addl mov (bad) aaa lcall xchg sbb lahf pop push mov mov in jg mov loope (bad) pop push and adcb repz js inc (bad) mov movsb mov ja (bad) aam mov daa adc push and mov or sub popf mov jg lods leave (bad) popa lods (bad) jg int3 mov jno and sti pusha adc mov dec jg lret dec sbb sub test (bad) cmc (bad) fdivs jg shrl fistp xchg negl add jo pop cs leave ficomp pop arpl jg clc xor jg jnp mov mov (bad) jg out repz dec cmp mov jg scas dec das sub sbb xchg movl out jg cltd cmc mov or fildl jg inc clc js test jmp outsl jl fsubl jae lds fs fild outsb out inc jge pop pop loope jg adc ret insl jg (bad) dec adc and sahf dec js pop add cmp (bad) out in repnz mov jg nop add sub stos mov aaa imul pop push dec cmp jg mov mov loop sub pop dec jo jg int3 inc xchg daa mov mov and mov fwait lahf cmp out xchg mov test int3 inc lea push dec sarl loopne mov in aad inc mov icebp xor adc jno adc jg or jp dec mov call repz jg jae xchg mov lret out pusha test loop xor push lds xor cmc jg xchg (bad) divl ss jge mov inc push inc in push dec ljmp out mov dec sub dec adc data16 sub mov stc fiadd ja add aas dec dec adc orb pop cltd jg movsl dec dec xchg push cmp lahf out std cmc cwtl jg adc and lcall test jg movsb or scas (bad) mov mov in and inc shlb cmpsb sbb or adc cmp shr test aas pop mov push pop fnop outsb xor repnz ljmp repz bound jg mov and bound or dec (bad) aam xlat mov jge mov jl push and dec mov jg mov mov mov or fcoms movsl sar and push jbe or sub xchg mov test xchg inc aas mov jg mov mov sarl (bad) lret inc out jecxz or lock dec dec ja mov pop loope movsl adc dec inc dec loop jg mov dec popa jg pop fwait lds pop jno mov notl (bad) add and dec icebp adc pop xor add loope sti fucomip ret inc outsb ss push lahf sub push xchg out mov sbb enter jg nop dec xchg sti lret sarl loopne not test aas pop pop ljmp lods push loopne (bad) xor xchg fistpl stos add jg in pop dec fdivrl or push xor inc adc pop pop add and jg shll fiadd xchg cmp mov sub fisttp into outsl out and and push cmp sar jg mov aam cmp cmpsl inc popf inc shr cld jbe mov sti movl std (bad) adc clc jg je pop push push (bad) jnp dec dec bndstx stc in push jg cmp fwait lock mov jg mov sbb int pop aas arpl sbb push xchg and pushf rcll (bad) test push xor adcl push push loope push mov inc cli add pop out push dec imul xlat push jnp jns and mov mov inc add jo pop inc xchg movsb xchg push jg jl inc xor add scas sahf sarl push outsb mov jae jg push fs push jns aas sti dec pusha xor rol cmp and lods sbb xor js sbb pop sub mov std pop mov (bad) in shr push repnz jg in jge aaa int jg mov cltd cli mov bsr inc ds pop mov dec sub shr sbb push gs hlt mov popl jg insl jle mov add jg pop jo xchg sti out adcl popa jg dec push das out test rclb and jg mov push xchg jg scas jmp mov inc jo mov test fwait scas addr16 shlb adc sbb lahf hlt add xor mov mov jg rcrb call mov inc mov mov push aas fsubl pop pop jg jle (bad) dec pop cmc mov jg mov gs jg clc jmp xchg inc and mov pop sub or or daa mov jg gs jne fdivrl mov pop mov pop sbb dec pop sti mov dec sbb fwait adc sbbl xlat mov and mov xor clc fwait addb sti add cmpsl pop popf int jno jg sbb xchg mov xchg pop xchg mov popa pop xchg xchg sbb inc scas loop pop lock or lcall jo add jbe in ret lcall xor fistpl adc fisubl jg add loopne or test xchg mov jns jg mov and jg mov mov mov push mov add jp adc fadd dec jno int3 movq pop xor add cmp call sbb sub dec add cwtl jg ds inc dec pop in cmp sahf and out fidivrl mov cmp outsl iret push xlat mov add pop movsl ljmp jg dec idivb xchg jo mov repz push mov test xchg pop sbb gs push pop inc fnsave jg aad adcl jecxz repz inc inc (bad) mov fdivrl xchg ds sub push pop in cwtl pop xchg xor jg not (bad) xor jg push aaa pop pop fstl inc lcall jg mov push int cmpl jnp inc dec loop jg loop iret dec xchg jb lds jg mov or nop arpl stos mov test mov adc or jg xchg rol and mov jb out jnp mov out xor and and loop jg jno or js (bad) mov (bad) cmp movsb xor jne jnp dec cmp or mov stos pop dec fwait mov pop sub jg loopne (bad) dec (bad) in js enter aad add jbe leave out sub mov adc std hlt xchg and in or les adc ja decb orb out jg mov test popl das icebp jg inc xor in mov ja push int3 xchg xchg pushf push dec movsl jecxz mov ljmp jg (bad) xchg add cwtl jg in enter mov fs rorb movsb inc lret mov cmp pop daa inc mov in jg mov jg aam sub xchg scas icebp dec sahf jnp push jg lods imul push sub mov xchg aas inc cwtl jne pop push dec sahf or jle test or (bad) aas push js insl push or xor add lea jg in pop mov cmpsb std mov mov mov mov mov lods movsl sbb and dec stos xchg jg lea jne add movsb pop or jb mov xor or data16 jg mov test jp sbb outsl jno jg dec lods lds mov mov cltd stos cmpsl js test mov or pop push sarb in push ds pop push sahf gs sbb test jg movsb pusha insl mov std add sbb sbb fmuls pusha xor mov out mov call ret push into jp jg mov arpl cmpsb mov out xchg cmp fldt jg aad push sbb mov dec sbb push mov mov mov jg repz mov or outsl aad jg fwait xor fist dec sub scas lahf jns imul sub jo pop stos cmp xchg dec cmp (bad) lret adc dec cmpsl movsb btcl lods xor jb pop sub rclb push jg,pt stos inc daa sbb in sub jp rol jg dec repnz or jae sbb je mov add imul jg inc xchg std xor jno js test and xchg sub pop mov cli mov dec jg pop pop mov xchg (bad) in push pop in add xlat mov jecxz mov and mov mov dec stc add insb jg mov jg sbb popf mov jg insl push sbb mov mov cmp sahf out cmp in dec pop mov dec cmp aas mov (bad) pop or pop repnz dec test pop (bad) nop sbb out xor push sbb stc jg mov popf lock jg push jle (bad) add fnop jle gs mov and (bad) ja add movsb cmp int3 imul jecxz dec mov cmpsl inc (bad) pop mov sub adc es (bad) sti (bad) mov mov cmp cmp inc ret loopne fiadd cmpsl jg dec test js out lock outsb pop xchg pop and nop mov stos loopne std mov aas pop outsl adc mov xchg push mov jle lcall inc (bad) pop pushf pop cmpsb jg jbe dec and lock lock cli push in hlt jg enter pop les sbb in loopne dec xor jp cld mov das mov hlt push (bad) bound jg lcall jg jnp adc jg lods cmpsl mov xchg push inc je add or fwait mov sarb pop jg repnz fwait icebp dec sbb add inc xchg jg in mov jns fstpt (bad) adc xchg dec xor addr16 ljmp push scas in cmp call fbld lock or int3 sbb add cmp outsl adc cwtl xchg push mov cmpl cmp stos jg add roll sti nop mov jg push dec je mov out pushf scas popa ja pop jmp cs mov pop inc jg mov das outsl rcrl mov mov and inc stos mov adcl mov mov pop (bad) lds cld idivb mov dec and push adc repz inc sub push push push sbb je fs lret aad loopne jmp mov pop hlt lods fucomip jg sub fisubr xor dec dec std js leave adc out js push pop mov jg test jge aas mov mov es jne pop scas ja gs (bad) jg push adc mov cwtl push cmp andl push inc (bad) mov imul cmp mov push adc adc inc or in dec outsb loopne mov popa imul jp cmp sub fucom stos adc (bad) mov mov jg loop rorl sub jg das mov int (bad) mov into xor iret jg es jmp adc bound mov or jg xchg xlat sti and fcoml js jg loopne loope xchg sbb mov movq add (bad) and std iret jnp pushf jg fmul xchg loop addr16 pop jg push or jg sahf enter je inc lods jg pop add mov aaa imul jmp xchg scas mov je (bad) out ljmp sbb jbe popa mov jg jl imul xor xchg clc pushf push mov xchg das inc xlat outsl sbb fwait pop jg insb dec nop insl mov jmp sub arpl lods sbb adc cmp shlb or dec (bad) cld aas scas mov cmp jle stc pop xchg stos or inc pop jmp rcrl and xchg arpl orl mov add ror nop adc jb out pop mov or (bad) enter cmpsl mov sbb jno jg les out add push pop movsb mov xor add loop pushf xchg jecxz inc cmpsl mov mov aas sub fimull adc scas repnz mov or fbstp xlat lods xchg inc mov into jg inc sarl mov jns jg sbb inc sub dec ss cmpsl push out xchg dec mov jb fldcw pop adc inc stos pop jg sti mov aam insb fstpt arpl lcall jns ja mov lahf sarl sub xchg mov daa stos mov outsl or jae jb movsl loopne (bad) ss inc rclb adc pop pop and fdiv ret lods sub and lock adc mov or adc mov loop jl mov jg push dec mov std int3 iret rcrl into mov cld iret outsl bswap cmp enter stc loope xor inc mov lcall stc dec jmp stos lods sbbl fstl jne xor push cli mov cld jg arpl dec or lock test cmp xor insl mov sbb (bad) out add hlt jg pop not arpl xchg loope repnz pushf jg into fiadd js cmp outsl mov pop mov sbb sub fnsave imul jge push daa (bad) hlt jg and cmp loop nop jmp pop xor jmp insb push push sbb add roll fildll gs jmp ja sbb add fucomi push negb push xchg inc les cmp fwait dec dec mov mov cmp push pop jp mov sti push js push cmpsb xchg inc test adc xchg add jg sub inc dec xor (bad) je xor insb lock aas xchg dec cmp or data16 dec sar jg add hlt inc aam lret ja dec lret cmp dec fisttpl rolb xor push insl mov sub mov mov and xor gs (bad) push mov jg mov std lods rclb insb mov mov inc insb inc inc ret cmp fcomps xor daa cwtl dec (bad) lea imul jbe jae loope adc addr16 dec das loopne outsl and rol iret aaa jg lods pop icebp aad cmp insb lret jb loopne xlat mov adc cmp lods jg xchg and bound notl into fcmovbe int push push xor mov rcrb lea pushw push xchg in mov test add jg outsb push add xchg fisubl aad (bad) sti popf jg push es jg aad sbb (bad) (bad) jg add test fnstenv stos dec jge inc pop imul lret (bad) test shrl xor jg mov push (bad) jo push sahf mov cmp xchg jg popf loope and lret ret xchg enter jg fidivr test cmp das lret sbb mov inc or cwtl dec add mov pop ret lret imul push xchg cmc data16 lcall addr16 scas adc iret inc test (bad) mov add insb cmp push xor sub mov jg fwait out xor (bad) sti push (bad) fs add scas pop scas (bad) (bad) mov add pop ss dec lahf pop test push sbb pop in mov push inc lds std out mov and inc cmp and test scas enter shll pop xchg push and fidivrl sbb cmp inc mov je jae fistpll cmp movsb sub scas jg adc shrb aas push jge lods (bad) and push mov xlat dec loop nop popf int lds jle pushf imul pusha mov inc sbb out pop jp cmp push pop jg xor xchg jg stc jo jae (bad) out xchg jg pop mov add in and jge je mov scas pop dec inc addr16 mov pop in fmuls xor xor mov push cmp imul (bad) clc mov mov jae or sarb scas pop (bad) clc pop int3 in mov push gs push test loope jg inc cmp nop cs jo fwait pop push out mov xchg test mov aas push ljmp out cmpl jecxz xor rorl jg aaa int int3 lcall mov jg jae jo cwtl lods mov and mov xchg movsl push test int mov popf lock adc mov pop jg nop push cmpsb jg pop cmp xchg insb cmp mov dec aam pop jecxz jg in xchg push sbb sbb outsb popf xchg dec lds loop jg jle mov jg jecxz fiaddl iret int fpatan cmpl and cmc jg fisubr (bad) jg push loopne sub push or xchg dec jg addb jg ljmp jg lea mov jcxz and push jg (bad) xchg jne clc jg pop les sub sub mov notl (bad) imul and jg ljmp jg loop das sbb push sti cmp ja pop repnz cli add (bad) dec or xor sub or mov movsb mov dec lods (bad) xor testl cmpsb fbld pop outsl lahf cmp mov sbb mov sub sub xor xchg pop pop std cmp jg fwait bound incb mov push lds jg xchg or jg aad aam leave adc jg mov outsl mov out jg mov inc mov jge dec lock push dec mov imul push xchg push (bad) pop stos mov fstp mov pop outsl jo dec jg (bad) into and mov aad sub andnps repz int3 inc lock daa stc mov jg adc frstor jle sbb cmp cmp mov jg pop jb clc sbb mov xchg imul ja inc mov and pop in jge jg dec mov or arpl out mov mov dec stc jns fwait or icebp test sbb cmp int3 lock jg or gs cmpsb sahf xor pop and mov pop rorb sub outsl push jg sub js fidivrl mov sbb cmpl jp (bad) push and cltd jl rol inc mov mov std mov jns cmpsb dec xchg (bad) imul cmpsl push addr16 inc mov xor pop fwait sub js and loope jg stos cmp mov mov pop andb pop cltd pop lret push test cmp jp lods lock (bad) xor cmp lahf jg fs dec pop pop lock dec popa jmp pop (bad) lahf fsubrl sbbb jbe jg fs fldenv pop pusha xchg mov int sbb ja jg cmpsl or loopne sub aam mov movsb ljmp fs jg daa sar mov idivb mov xchg xchg add pop test sbb ret jg mov subl cwtl xor or xor mov xchg jns cmp cld xor cmp jg cmpsb sti dec xor sbb imull fmull and movsb or lock jg subl mov and in in jg mov lahf inc mov dec cwtl loop inc push jg lock dec xchg mov lods jg jle cmpsl mov pop mov jg cmp mov pop adc dec and sbb xchg jno mov movsb out inc xor mov sub les or fs or sub lods aas jp outsb fmulp mov jg cmpsl dec push les jmp sub popf mov adc push jno xor aaa lods je,pt ret jp fsts dec xor pop nop or movswl (bad) xor das adc jg push sub jp or jg mov (bad) repnz jo lcall sub imul adc fnstsw inc mov pop loopne cmp sbb pop les jg dec sub (bad) fcmovne clc inc loop inc scas jg stos inc mov jg pop mov jns outsl sub add inc daa push xchg xor inc fwait scas mov lods mov jo mov add cwtl aas jp sub mov addr16 jg hlt test jnp mov mov push mov jg add cs mov ljmp cmpb add (bad) das mov sub outsl pop (bad) leave fistpll jg cwtl add (bad) cmp sub fisttpl and jmp add fnstcw mov jcxz jbe mov daa fidivl mov xor aaa xchg clc ds jmp mov movsl out mov dec mov push mov jp inc jg test and ds jg pop jle ja jge jno pop fisub outsl rclb popa xlat (bad) out mov ret sub or xchg push fildll dec sbb xor push sbb insb call mov pushf pop loope jle add pop and jg sbb rcl loop mov mov mov add inc mov sarb adc inc xchg call cs mov sub je sbb int xor lods xchg push jmp ljmp popf pop ret adc in loope das pop stc in jg gs mov inc push jg fs scas jne insl push xor and pop jg lods stc sbb jg data16 pop add xchg psraw jg nop mov push pop sarb rcll (bad) decl dec mov frstor jg add inc push jg (bad) dec lahf xor (bad) cmp das jg mov jo mov push (bad) jg jnp pop lea shlb xchg out dec pushf outsb leave dec mov sti lcall ja es movsb add mov out sbb cli xchg mov fwait mov inc test stos xor mov test cmp jle mov mov dec pop hlt jl jg jmp cmp mov cmp sub mov ss xor push jp pop cwtl inc jg inc dec stos cmp inc sarb mov lds (bad) aas fwait dec xor mov xchg jp dec in or dec pop addr16 jg aaa cmp jmp push int cmpsb insl in outsl jg push or sub and cmpsl jl dec cmp hlt nop (bad) outsl lods icebp ljmp jg or and xchg xlat dec jmp inc sbb or rclb mov and jg mov loop mov fdivp sbb inc jg inc stos mov xor jg rcll fdiv pop out push jg aaa jnp cmp mov sti sarb push cs mov aas or rolb fidivr mov pop mov addr16 inc je ds mov inc jnp xor imul fistpl jbe cmp pop inc cltd ficompl mov (bad) jne outsb cmp outsl xchg mov mov pusha inc pop cld and rdpmc xor insl cmp jno cmpsl and clc stos in pop xchg (bad) pop sar cmp adc (bad) push clc pushf inc mov scas jmp fcmovnu outsb push out mov fidivr iret jae push sbb pop sti scas dec repz mov shrb inc cmp nop out or xchg inc sti mov fcomps jg emms sbb xchg xchg pop cltd xchg jg (bad) xlat scas repnz mov jg out jae jg cli jnp cmc cld hlt (bad) mull mov in sbb jbe dec push cmc and aas fbld rclb adc dec dec sahf add or in outsl int3 inc xor imul xor push push fs divl sub shl and out jns xor (bad) (bad) dec mov mov fidiv sub clc sub out or inc (bad) mov jg xchg xor insb sti xchg sub mov xlat sahf enter dec and jg arpl mov inc pop xor dec sti test outsl fmuls mov js push adc incl jg (bad) in stos pop cmp mov and adc movsb adc das lock imulb and jmp mov xchg jg not shll sub jno lds pusha movsl pop xchg jg mov addr16 insb pop push jg outsb inc into cmp aam sub lahf push aas imull add outsb mov dec pop loop lods mov cmp pop popf movsb xorl mov sbb jb imul push cmpsl aas push cmpl add jle xor fimull movsb and test lcall sar jg es subb jg outsb pusha cmp jl jg jge sub pop out mov jnp dec mov mov rcrb cmpsl add dec fidivrl xchg outsb push fs xchg and cmp dec pop outsl leave mov je adc into jl insl push fcmove (bad) xor jg fcompl sbb and divl aaa stc insl pop sub dec push add jl mov mov ret fildll jg hlt push in push mov ret xchg jbe xchg lret jg mov les out inc push ficom add cmc addr16 popa jg (bad) jmp ds cmp rolb test push and mov lock (bad) fidivl add jg inc jnp cmpsb stos mov jecxz cmpsl jae push test jg and push popa nop repz test or add loopne lock add test repz aaa add mov inc cmpsl ljmp or aas push mov das dec mov sbb (bad) add js push mov iret sub sarl inc in repnz stos lock loopne cs xor sub xor mov cmp dec notl js push xchg aad mov jmp ret jg xor insb mov push sub adcl sub xlat dec lods mov test in jg arpl pushf jg fsubl or push cmc jg mov into loopne loop ljmp mov or pop push fstpt or fs mov in mov cmp call int jbe sbb ja popf cmp cltd push (bad) and sarl push test sbb and jno or jns ja mov push ds sbb cli dec shlb pop pop jg push pop or faddl jg push pop nop (bad) mov xchg jg inc dec or hlt mov xor inc dec xor cmc pop orb pop insb push aam mov sti cmp ret incb loop outsb dec mov enter (bad) mov mov mov mov gs jg mov leave in sbb xor cmpl adc pop cmc (bad) divl xchg sub jl jg adc xchg push jmp jg cld dec mov jg xor and mov xor das xlat pop test mov sahf fmul pop aaa jno or xchg gs repz and lret xor out mov test inc sbb pop jg enter mov mov lret cmp sti push bound inc divl sti sarb push push stos dec jg iret xchg fnsave push push sti jb push lock adc jo (bad) mov push inc pop sub lods jg and jg mov mov cmc (bad) outsl mov adc fwait out out mov mov inc xchg jg negb push rorb jg stos xor test jg cmp and int dec arpl push add hlt xchg push cmc iret and mov mov data16 mov and inc push nop jg cmpsl test inc fwait mov ljmp (bad) addr16 aas loopne mov stc divps xchg incl or xor jnp bnd (bad) idiv mov sbb mov dec mov mov sarb mov adc jnp jle loop (bad) pop movsb jg pop cmp iret test les jg nop add sti (bad) jo mov les test lds popa push fimull adc mov inc jle jg cmpsl lcall daa lahf test cmp pop mov frstor mov nop or in mov daa xchg pop enter push inc lds mov imul enter inc repz jns lahf pop xchg jg cs dec cmp mov pusha mov ja sub sahf mov test xchg jecxz adc sub jg mov pop out mov mov ljmp adc (bad) jno inc jg jnp cli loope aam xor jg outsb pop pop gs jne hlt dec push fsts ja mov mov stos push mov ja cld cmp mov cmp xchg sbb xchg jge fdivl xor aad movsl fldt push inc outsl jb push mov test push mov jmp dec push iret jg (bad) dec out cmp or push or stos (bad) arpl jg push jbe test insb int lds or pop dec or (bad) cs fdivr cwtl jg je sbb cmp cmp lods jnp,pn inc mov add mov in inc icebp dec cmc push push pop inc mov cld outsl int out push orl and or jns mov les jmp movsl jge stc ficomp (bad) or sub mov inc sub dec pop mov xchg icebp pop in mov sub push push les int3 sbb mov jg outsb fbld aaa jg (bad) xor scas add jg sbb gs mov mov mov xor or dec outsb out rol cmc pop inc xchg and mov scas jg dec inc (bad) sbb jg fcmovnbe and fwait aaa cmp inc adc push jg xchg in loop sbbb mov js imul lea jecxz bound push xchg cli jg repnz and adc pop inc jg mov addl mov jg pop cmpsb sar lret jg dec dec pop pop movsl mov int3 outsb push jne idivb jnp rorl dec adc (bad) jmp insl mov cmc push call jg adc stos jnp adc ljmp lret sbb enter push ja mov or inc mov jbe xor xchg xchg lock sub lcall pop pop cmpsb dec dec into pop fidivr xchg in push push insb xor cmp das sbb inc mov stos dec adc jg pop loope lahf mov xchg sti cmp push out dec jb cld (bad) xlat jmp cmpb dec enter xor jg popa fstpt dec fld aas mov fbstp sbb jg mov xchg jg jno jb adc fistpll add xor pop das inc in loop adc jmp cli cmp fdivrl (bad) jg push jmp fwait jg sbb xor sbb test sub scas cli bound cmpsb je or mov mov pop sub jg xor nop jg leave jne popf into insl push pop sub xchg jbe movsl pop mov rorl lds aam popa jmp cmp insb pop lock lret idivl and jp jo ja cmp push ficoml jg loop jno pop mov (bad) lea pop lea mov sbb ja or dec (bad) jnp push mov adc sbb hlt andb cwtl xor pop addr16 xor jg mov sub das int3 std cmp loope jg inc iret dec sti pushf insl dec sti in push inc or das scas in jecxz dec fstpt mov mov sahf push lods cltd mov push add and mov fmuls mov xorl movsl js push add fsubrp mov (bad) push lea popa dec movsb jg pop rclb cmp xchg jg aam xor notb jg out movsb pop iret popa or cmp push popf add popl in loopne jg xchg mov lds frstor mov mov mov xchg mov push stos xchg and cwtl sub imul addr16 mov mov icebp jg insl les inc push lock push arpl pop leave and inc cmpl das mov xchg add cmp adc imulb fbstp dec out mov decl or daa out sub jge jg and jg mov xchg mov (bad) mov nop jae ret cli insl jg js push or mov out inc scas lea (bad) in mov dec insb popa adc cmp jne cmc jg (bad) jo and or pop out into fnstcw jg test add (bad) mov shrb or xchg icebp fmull loopne cld jne sarl insl aad (bad) cmc repz test fnstenv mov or xchg jae das inc sarb outsb add push test repnz inc inc cmp sbb fmuls scas in enter dec mov out sti (bad) xor stc fmuls adc jg jnp (bad) dec ljmp jl (bad) mov push adc jg mov xor mov push mov mov jg jae sbb aas in push addr16 mov ds mov aas jmp or inc or jg dec fldenv dec sbb jg out fwait insb add push xor mov pop mov stos lcall jg outsl push hlt sub pop into jg ja dec pop mov cmpl mul dec sub pop fcmovnbe je jne (bad) xor cmc into jae mov cmp pop jne ss lock pushf jle fisubl xchg mov xchg xor xchg push push push scas xor lret mov loope in xor mov jg xor sti cmp pop add divb mov xchg jge rol imull dec add and pop aaa cmp add or in js xor mov or push sar rcl fdivrl jle sub ja mov (bad) insb je cld push stos aas lret and into cmp int dec sub inc out mov pop std aad dec dec jg xor pop push addb (bad) jmp rcrl dec bound push sub xchg xor ds gs cld pop rcrl nop dec fdivrl mov stos std mov inc mov and mov (bad) mov pop jle imull cmp arpl aad mov mov mov std jl icebp pop popa dec lret pop fdivrl jg xchg push adc js,pn ror cli cli sti xchg (bad) das mov cmp xor cltd jg or jg adc pop dec mov aas (bad) ror dec aad add jno fidivr push negl xchg inc pop out xor insl push xor popl sbb jg mov mov sbb mov outsl mov arpl jg fdivs mov int3 stos adc cmc push sahf push add enter rcrl scas jg lret mov sbb push jg in push outsb jb cli xor rorb stos pop mov inc cmp in negb jg adc popa and test jg add and jo pop add or lahf or imul out sub (bad) arpl jg inc test jg outsb jns mov push sub mov jb bound mov fnstcw pop jmp jg test adc (bad) lds jecxz push mov inc and das dec (bad) jg ffree inc sbb loopne jg xlat iret pop lcall fdivrl sarb loop push dec dec fstps mov mov add ja pop jns jmp rol jg jle clc jae push fidivrl repnz and js and jg insb adc jb and push fadds cld mov jg xor sbb jg jecxz dec sahf lcall inc ds leave mov xchg mov mov nop lods inc adc jg mov sarb xor jno adc aas (bad) stos mov inc dec fmull cmpl mov and (bad) jae mov jg inc jns inc sub test mov xchg add jg inc and enter jg fadds aas jg outsl fbld ja jg and pop mov adc xor jg dec push fist xor stos xor sahf jl sarl fmull sub jno mov fimul lods cmpsb fisubl inc gs popf jg out js sbb loop cmp mov nop rcll outsb jg xor sbb sahf mov or out outsl lahf clc lret sub pop cld jg adc popa insb (bad) mov push int3 jg dec xchg mov jg push ds lcall cltd std push gs daa jno out add sahf mov fimul aaa jg sub sti xor push enter xlat lcall lret out cmpsb jg sbb out jg mov ja lds xchg stos pop loop out ret sbb (bad) jg leave push loopne push add negl sub movsl dec jae sarb jp jb fwait cs jg pushf out cltd add rcl loop jg or mov lretw mov sub js lds mov or pop cld add cmc not or lret test push out jg jmp loopne divl stos das jg outsl push jge jg,pn inc push push lock and mov int jg rcrl mov xchg jne test iret addr16 orl in (bad) jmp push mov mov xchg mov iret pop jg insb push ljmp xor jg push sbb lahf stc js push mov sahf cmp dec push sub pusha jg xor cmp out push or cmp mov fildll mov test mov sub pop les pop add push out mov sti push inc (bad) lock repnz jg ret fdivs jg add push sbb scas jg cld test fwait scas pushf push jg lahf fild jp loopne into loop mov sbb xchg jg jo sbb jg pop decl push push enter mov jo inc mov mov (bad) mov pop (bad) lret jp addr16 jg stc adc iret ss loop push adc gs pop jg stos ds adc jg (bad) hlt sub mov (bad) loopne ret dec add mov sub pop test push or inc and je push fdivrl or jg orl add (bad) pop cmp lods xchg (bad) jg push xor sub inc jg adc les (bad) fucomp xor dec jbe test popa inc stc test loopne fwait mov mov cmp xchg dec fadd repz add js mov vmulps imul outsl adc xorl jg nop sbb jg lcall mull les gs inc sarl fnsave jg pop mov into aam fs jg pop sahf xchg push stos scas sarb loop jb,pt out aas jg mov mov adc xchg dec jg sub ja push out fidivr push out jmp sarl lock push test jg fdiv or xor arpl jg pop push je mov jg inc jo mov pop xchg lret divb mov pop ret add pushf js cwtl aad cli fxch std jp mov jg jecxz mov jg js das fcomps sbb rolb push sbbl inc stos and inc jg iret out addr16 gs mov jo pop cmp pop jg adc or sti cli add push xchg dec loope decb shlb cli (bad) (bad) sub test das inc hlt cmp jg or shl jg mov cmp loop pop cmpl addr16 nop pop lods sbb push aaa jg stos jl test out js imul jg aas jb pop push popa pop (bad) in push loop int3 jmp jmp push arpl mov les lods (bad) dec jg into stc jp dec or jg in call cmp push add loope cmp cmp jmp shrb adc jno nop cmp inc out jno movsl pop xor pushf lahf ljmp push dec ss clc jmp das dec add jge ds fisttp aad pop push loopne mov cmp loope adc fcmovu mov clc mov cmp popf jg push (bad) icebp xchg push pop push jg or or add movl inc or mov jg xchg adc aaa jg out cltd and adc push lret jg sub dec rorl loop jg jbe fdivrl xor jg test in jg mov or fwait inc shll sub jg cmp stc je xlat imul ficompl fildll mov cmp xchg adc pop scas sbb ret int mov jg outsb mov pop dec mov ljmp idivl ret sbb outsl lret enter in aaa ja xlat nop mov sbb mov inc sub jb cmc jg sub stc push xor add cmpsb jg mov jnp ret out mov inc imul out sub lret bound pop ret jg stos jp mov in jg xor and jg jno cs xor mov ja cmp data16 cmc jo in aas xlat aas mov call dec xchg sub push test inc push push mov jg jae fimull sahf xchg aas addr16 fldt dec arpl cmp aam in mov not xchg addr16 jb aas jg outsb and push stos data16 jl insl test lahf iret aas movb mov xor sub out lret das fwait loop mov andl mov loopne imul sub xchg das sti dec mov imul aad je mov cmpsb outsl loope leave pop dec sub mov mov xchg negb and js dec jg xchg sahf es cmpxchg lret pop or cmpsl inc sbb popa arpl mov inc test mov fsubp fdivrl pop and jg lcall sti push dec in dec imulb mov jg jge icebp in imull pop stc repnz lds dec jp ffreep iret stos jg mov out cmpsl enter pop cs insl pop add or sarb mov xor scas mov push jecxz adc mov push xchg (bad) stc leave jg mov mov call cwtl (bad) les xchg fisttp xor cmp pushf les xchg (bad) roll jg or adc jg cmpsb ds (bad) hlt stc push jg fs fstpt insb fwait push rorl jg cs pop nop pushf (bad) fidivrl es lret pop adc mov data16 pop sahf and inc fisttp adcb gs lods int and call jle and mov jg adc push push fsts lods in orb jg jl xor loop jg pop xor cmp out aas mov and jg imul bound movsl fidivr jl daa mov (bad) add jle inc (bad) cmpsb xchg jg cmp rcrl outsb dec jg push lahf pusha pop pandn mov insb loope in (bad) iret jmp pcmpgtw lock nop jbe jg cmpl sahf inc jecxz jg dec pop div aaa fistl cmp js jle (bad) (bad) mov daa pop xlat jns sbb jge xor xchg popa aas inc cmp out (bad) in in cmpsl xor test ja (bad) stos jg (bad) fcoml adc sti jnp enter fiadd sub aas popf push push adc push fldenv pop adc mov mov ljmp aaa jae sti jg mov icebp jno call dec incl adc out sbb popa pop cltd ret xchg jmp dec test in pop pushf dec and jg dec lods in xchg cmp mov cmpsb out pusha out mov sbb icebp mov push xchg xor jg out add push sub leave sub adc sub and xchg out or jg pusha (bad) jns inc repz aas mov xchg movsb cmpsl stos dec in jg inc je jb dec fs gs movsb lahf inc sti insb push call push jg push cmp mov and jg nop psrlq jp lret rorb test or (bad) jno jg mov imul and (bad) push js (bad) jg xchg push repz movsb in jg mov int xchg jae jg outsb arpl add testb inc lahf pop rcll pusha jg sbb sbb jg in fs pop adc outsl and (bad) notl sti cmp aam out sub ljmp xchg adc sbb jg pop (bad) das test or adc (bad) pop insb jg xchg lds or inc lcall jne xor pop mov lahf xchg fwait jg pop mov push js out add mov scas inc imul add sub pop fdivs dec aas sbb enter jae pop out jg movsb dec xchg mov or inc jb pop jae sti pop lahf lods (bad) mov adc data16 mov mov cmpsl aam jg add aas cli adc mov and mov dec outsl add inc lods xor les idivl jae mov sbb loop rcl test xchg xchg cmp jg in jmp or jmp mov fidivrl push popa fdivs xor sub add mov cmp adc movsl dec adc xchg mov sub inc add cmp ss pop sbb cli jns jg push out xchg test mov cmp repnz test dec push jg mov sub pop js or push ds stos pop andl jg jp xor loop push xlat sbb imul rcrl scas or mov xchg mov jg in pusha dec aad pop sti jo mov xchg adc fs test repz mov leave jg jbe mov jg inc fucomi js pop in jg xchg and stos push sub mov pop rolb adc scas lret or pop push sahf ret stos sbb or mov adc inc inc popf fwait jg sub imul aaa dec addr16 bndstx jg cmpsl mov or add or inc fneni(8087 mov (bad) jg mov pop insl jmp pop mov lea xor and cltd sbb fidivr shrl sub ljmp mov pop fcmovnu cli mov mov mov test clc jns bound inc js divb jp dec pusha imull jg jnp iret shrd dec and jg xor cwtl jg aad movsb arpl dec jg mov xchg cmc mov std jg icebp pop bound mov fnop xchg ss ja and cmp cld mov cmp mov jg icebp push push adc arpl jg mov inc fs cwtl jg (bad) jbe lods and dec jecxz std into sub add loop aas or int3 or mulb inc jg mov mov aas repz jg fisubl stc jg push jno int sub mov addr16 push push hlt mov jg inc and adc mov and movb ret lahf jb jg sub push aas (bad) jo add sub mov add mov dec push fs negb and loopne cmc mov sti lret test pop imul stos clc pop test jnp jg xor mov sti mov sbb jg or inc addr16 push xor nop cmp lret aaa lcall fldenv loop jg cmp dec xchg mov mov sub movsl jle sbb addr16 mov dec and jne cmp out mov xor xchg data16 scas jae in out scas pop jg xor js mov jg xchg cmp fldenv es pop adc test inc mov (bad) aas adc loope out dec jg push out cmpsb lcall mov sarb mov push pop xchg add cmpl add cltd push dec xor jmp push cmc cmp mov jae in data16 jns shrl out outsl aaa push (bad) and mov xchg jae push cmp and pop in scas cmp push (bad) jg pop pop pop in xor jge sahf or mov push mov mov rorb adc mov mov jg jae fbld or pop xlat (bad) pusha sarl aad and lds (bad) mov fnstsw cld sbb scas orl pop pop sbb pop out mov clc aam jg cmp cld in sub sub mov jg cmc cmp push inc mov sub add test jns push inc fucomip nop pop jg push adc fnstcw fsts push inc push jg xor (bad) mov and ja (bad) fcomip add out jle aas rcl cmpsb pop out ss cmpl sbb ds xchg loopne jg push (bad) mov jg lods sbb test and or push or mov mov adcb dec cmpl mov pop jg,pt sbb push xlat xchg lret mov daa xor push js adc cmp idiv pushf inc adc je cmp loopne adc mov (bad) clc in jbe int mov push repnz sub movsl imul and and sbb inc cmpl mov jge mov sbb iret lret repnz sarl mov push movsb jg pop xchg mov cmp (bad) jecxz outsl pop jle pop push push bound pusha sbb jecxz mov mov movsb jg aad dec push int mov das fdivl jno ds mov fwait lea and sub data16 das lods repnz fildll sub cmpsb push cmp cmp jg inc mov jb adc les adc cmp jo pop icebp inc mov int3 sahf xchg jbe test xor cltd and pop pop into mov jne outsb mov mov push sub xchg mov outsb or and cwtl jle inc push sti mov addr16 xor pushl out push xchg push mov cmpsb jno or pop adcb rol out pop sti sub and lahf inc adc stos pusha cmp jne and out fstpt js test dec jo arpl jae,pt aas je jnp sub adc jg mov aam mov ja dec push loopne pop movsl jg push cmpb push mov outsl in cmp sti dec sub in or inc jae (bad) repnz or mov scas add fnsave lcall movb dec js dec cmp mov xchg cltd sbb dec inc xchg jg mov (bad) xchg jg test es (bad) mov shll sbb fmuls pop mov aad adc arpl mov sub jg push push (bad) dec or fstpt imul ljmp sub in inc test add int3 leave inc sub add mov sub pop js add xor test mov mov inc in jg and and xchg fnstsw mov inc add pop fdivp int test call jg jb (bad) add cmc cmp jg repnz stos jbe xchg icebp jg xchg xor dec inc jmp cs repz addr16 jg lahf xchg pop xchg add jnp inc aaa and xlat jbe aad xchg inc push das adc jg scas lods mov (bad) (bad) dec mov (bad) std lahf mov js add dec gs pusha jg scas fistpl jecxz test lods dec sub mov scas inc ret ret mov push cmp adc into aam addr16 mov jae inc mov leave addb jne pop das insl or jg (bad) mov cmp cmp mov lret aas dec (bad) aam cmp fcompl jmp mov jg in out jp jo jg data16 mov push in xor pop div xchg stos push add jg test (bad) push insl adc aaa movsb std gs adc xchg jg movsl sarl jb into and push addr16 and mov cld ds int lret sahf mov sbb xchg add insl jg popa int push (bad) scas push jg (bad) xlat sub mov xchg mov hlt and pop test mov or dec sub test inc aam sbb jo pop jg xchg leave jp lds mov scas mov jmp lock inc imul inc stc aas outsl push popf pop or jg pop xlat addr16 rclb jo inc pop stc and mov (bad) lret dec push or push mov pop cmp add inc ljmp or jg ret mov ljmp jmp rcll pop push xchg aas adc loop das xor dec imul movsl jecxz stos xor (bad) and sub lods jg cmp adc in adc and fldcw lcall mov cmp nop jg push jg sbb cli pusha bound jg mov mov out pusha int aaa mov cmpsl and lea add sahf pusha (bad) inc fdivr test repz divb lock lods push push dec stc es adc rorl loopne cmp jg loop fstpt pop mov rorl push dec jg stc cli insb sbb insl (bad) mov lock rcl mull out mov ficom test mov push cmpl jmp inc sarl test addr16 push (bad) int3 insb push decb adc ja cmc xor mov sahf (bad) pop fimul adc lcall clc dec add frstor lret dec lahf cwtl insb mov push and xor lea mov cmpsb add xchg xchg jg mov pop incb pop pop add pop jg cmpsb popa xor fcomps push int3 lock mov push cmp fidivrl cmp push fildl push loope into (bad) jg movsb push cmpsb idivl sbb push out jg lods lahf lret push cwtl mov mov jg fcmovne sub jg loopne xor rol cmp pop mov jge mov or pop fisubl mull or loope sub mov jg int3 jmp aam jg mov jg jmp idiv mov mov outsb xor pop mov add xchg sbb jg push repnz scas sub negl movsl mov mov and or aam sti into inc arpl mov mov xchg mov cli or je jg and lcall (bad) stc ja dec push test sarl xchg add jo test pop arpl sti cmp mov jg hlt dec shll movsb rolb dec sahf jg push loopne mov sub (bad) cld and int add insl repz cltd es lock int xor inc mov cmp jbe inc mov fisttpll aad pop cmpsb ja in hlt xor inc insb add jg mov lret out mov pop movsb sub jg mov arpl pusha mul bound xor aaa xor jae leave jg add cli clc jg shlb popf sub aaa hlt mov jg into (bad) sub popf push es add sarl lea mull lcall xor mov push repz jmp sub mov push out popf sub mov mov adc jbe insb enter sbb (bad) repz sub mov (bad) lods or and dec lret jge xchg mov jg push stos xchg inc inc scas nop jg mov jmp jg mov jb jg cmpsl xchg repnz pop ficom pop dec jae dec cmp jg sti pop loope loopne push mov xchg es lock inc xor icebp ss jg jnp scas cmp or mov pop mov js jno sbb stos bound cmp dec dec (bad) mov pop jmp (bad) dec mov jmp cmc mov add xor (bad) notb cltd inc andb jg call xchg idivb dec movl imul hlt push jg stc jnp sbb test jg outsl push push int3 mov xchg xor or add stc xor pop push jg pop mov mov jg jne ss out jae xchg imul xor dec mov xchg cmp (bad) xchg jg sub mov das mov (bad) jg outsl popa pop jg scas not sbb dec jg pop sbb add dec bnd out dec mov push lods jg gs (bad) mov sti lods push dec stos jge cmpb and sarl mov lahf mov fdivrs jg cwtl adc cmpsb cmp test (bad) aas adc xchg ss mov mull pop jg in xor pop in jg enter pop inc arpl test loope cmp in xchg aas sub cmp out arpl pop hlt jbe lods stc jg sub ja scas and (bad) mov pop jne mov push or inc add pop xor sub les or mov cmc fmul scas pop jnp inc repz add push cmc jae movsl jg pusha dec dec in (bad) and jle ds test lret mov xor jg adc mov (bad) mov outsb fisttpl sub in jnp or inc mov mov negb add cli icebp outsl mov leave dec mov jnp adc lds jae cltd inc xchg jg out ret rorl aas rcl mov inc jecxz jg repz aaa pop add lcall add ds jb fs dec sbb and outsb ja add jg xor sub cs mov movsl dec outsl iret or push push adc jg repz insl jbe sub jg fisubl xor pop jg fstps cmpsl xchg sahf add mov rolb js lahf jg adc sub movsb daa add movsl in jp pop xchg inc xorl add mov aas dec jp and xor cwtl out addr16 mov inc mov mov (bad) jg lcall mov sub jb sbb jmp xchg loope test mov mov stc or std sti idivl cmp adc mov pop scas pushf xor sti jbe jae fwait adc cmpsb popa adc jg out add mov mov mov lcall aam cmp or mov fist jg fimul jg ja out fwait add jg loopne push cs xchg push js fildl mov sar inc pop and sub nop and (bad) icebp add pop popa movsb mov sbb decl push jg in mov jo pop xchg adc cmp stc jg das lds mov popf jae push sahf gs inc faddp and adc ds lods pop out loope into jg in nop mov fstps pop dec sbb jg cmp hlt aam vmwrite xor push fs pop xchg jg sub incl push aad add xchg dec mov mov popf or jnp outsl cmp (bad) rcrl test and inc pop dec dec out xor cld pop lock sahf dec mov fs pop dec xor test lret adc movsb das jg pop lcall adc push dec arpl fcom popa pop popa int3 jg sbb xor jg in fs fidivl pop inc popa sbb push das cmp mov (bad) cmp jbe outsl sarl mov sub test push pop xchg mov out add dec jg adc xor jnp out jb jmp scas sti and imul adc adc test inc sti jo push js jns and xchg lret rdmsr call cmp or fsub mov bound xor jp jbe or jg mov js nop mov sti out adc jmp jg aaa xchg js div fisttpl pop cmpsb (bad) fcos jae jp test repz push mov out mov in inc xchg pop bound and les sbb loopne cmp cli mov or pop jl into jg push test cmp lea je jg lret loope xlat pusha std mov popa inc lods xchg sub sarb icebp adc (bad) jb (bad) adcb mov je out mov insl jecxz jg jbe cmp dec mov sti xchg scas movsb aas in cmc sbb push mov inc fs imul jg dec mov mov outsb sbb dec adc (bad) and sti mov sbb lds mov cmp out out add pop xchg aas xor data16 imul (bad) call cmp hlt rorb cltd mov inc dec jg add call dec push sub jg xchg loope bswap mov fwait jg mov xchg mov jg add jg aad push prefetchw or enter (bad) imul pop pop mov jg pusha fistp cmp inc jmp sti fmuls xchg mov inc xor cmpsb lcall mov lock movsb jg sub push adc aas and data16 test sarb mov and sbb dec addr16 pop adc lret jmp arpl ljmp cmpsb pshufw int3 mov repz pop js mov cmp stc movl shrl add or cmp and int3 and aas je js das pop pop and adc pop push add mov mov push pop imul or (bad) in and divl mov jb dec push and mov subb scas jg inc pop div pop jmp xor addr16 mov and jnp inc icebp mov rcrl push popl push fcomip inc cmp mov jmp xor pop out pop dec add adc jge (bad) clc jg xor (bad) jg cltd jl add roll pop stos jg idivl leave lret icebp (bad) push adc movsb and mov cmpsb loop xchg lock mov in jg outsl popf lds jle sub adc cmp push stc ja movsb push xchg xor je sub push xchg inc cli sti test les adc adc push cmp and xor inc jg inc jmp sbb mov inc xchg (bad) mov pop mov xchg into pop mov faddl mov ds es jg mov mov push adc andl imul (bad) aas popa dec js jns push pop lea pop arpl sbb sub addb pusha aas mov push dec sub push cld lret mov sub mov mov shr rcrl sbb loope inc imul push mov sub add or sbb jg pusha adc (bad) jg xor jne shrl test mov outsb xor sub je pop insl and pop jl jge sti movsl cld cmp cmp adcl xchg cs push sarb movsl cmp ljmp call fdivs and jmp test shlb jno,pn push aas xchg add fnstenv inc xor adc pop (bad) mov js mov leave test lds cwtl dec aas sti adc leave clc cmpsb ja insb int mov ficomp mov push pop dec mul jmp lret (bad) jg fsubl sub mov cld rolb repz ret mov in aaa mov sub dec cmpsb jb jg std cli fstl and xlat imul dec jmp inc xchg fs push sbb out rcrl jg dec out ljmp inc mov ja addr16 clc fldenv jg in inc (bad) movsb jg push fistpll daa ds adc add jg fimull sbb lret jg aas (bad) adc and pop jg jmp stc jae jp lds mov aas sti dec insb and adc xor xchg cmp pop pop jno loope jg mov and mov inc or and jg mov call xor xchg cmpsl movsl mov lret sarb rolb cmp mov cmp insb adc imul cmpsb add test cmp xor jg xchg cmp jg sahf inc inc popa adc pop out pop int3 sbb sti fcmovne in mov sub mov fsubrp popa xor pop (bad) in xchg (bad) (bad) ljmp sbb jp aas mov in inc arpl push jmp xor jo push jg cmp add mov mov jno jg outsb hlt bound push fdivl pop arpl inc jl pop js loop and inc mov push jnp rcr daa pop (bad) cmpsb inc mov push jg jo,pn jge mov jg pop data16 sbb push int3 xorb push test cltd popa mov cmpsb mov arpl pop rolb aad sti or test mov sahf jo push mov aas in jge pop adc popf add int jg inc or xchg dec sti jg incb rol fnstsw repnz push popa mov sarl into sbb xchg sub loopne mov and sub jmp jg adc jge xchg int3 pop pop sub xorl cmp add cmp sbb fsubs fnstsw xchg pop fs nop push dec inc jg inc push xchg xchg (bad) (bad) lea jbe push cltd roll and inc xchg jg fwait ss repz js pop push mov arpl and add mov jnp mov dec jg daa roll mov mov jg adc cmpsb nop (bad) fs adc xchg push pop or xchg push arpl das orl pop pop ss sub in mov dec popa dec push loope jg test mov jg gs mov xchg push jmp cmp mov idivl sub into inc or int3 push xor stos mov ret movsl sbb adc ficom lcall lea jg mov add mov mov lods cmp mov (bad) (bad) js xchg pop lods lahf xor mov loopne out push insl movsb adc push jg mov jp push dec decb mov sti aaa sahf mov movsl in jge test dec mov adc mov insb lds inc decb jb into adc jg ret hlt iret cmpb or jp popf inc jg pop in xchg pusha pop cli mov aad add xchg jp (bad) jg add cmp sahf xor dec bnd (bad) or add xchg data16 cmpb rep divb cltd xchg jns xchg lds out add mov jg imul ja in jg js pop gs cmp jg push jno cmc pop data16 mov jg inc adc out pusha imul jg cmp mov fist mov mov sub mov dec notb jp xchg std scas xor sub test jmp add sbbl mov mov lret cmp mov fwait lock xchg add (bad) aaa das add loope jae fnstsw mov decl cmpsl add jg out sahf mov dec shll sub jg ss and or push andl (bad) mov icebp ret adc (bad) cmc mov jg test xor jg,pt jno (bad) lods sbb lea add jg jmp jo cmp (bad) dec add push fistpll push addr16 pop addr16 movq sub mov add xor in outsb mov sti inc cmpsb hlt mov das cltd dec xor arpl jg bound jns in add fcoms cwtl pushf aaa pop jg (bad) rcrl imul scas inc mov jl imul jg push push mov arpl (bad) jae fistpll and dec sub cmp inc jge cltd pop dec popl inc push lcall cs les jg jbe cwtl cmp jae lret call (bad) mov ds add loopne hlt sar inc xchg test jg xor mov push test outsl jbe sbb sub inc lahf sub jg bound sub inc push push ds fstpl dec mov pop or and pop dec adcl jg add pop shr sub mov (bad) scas into mov fdivl scas mov clc sbb dec arpl jb mov mov idivb ds cmc mov mov les xor mov inc add or jg insl addr16 adc xor jg imul jg mov in cltd xchg jnp or iret es stos jg pop movsb mov and jg adc adc jle push loop enter mov sbb pop (bad) leave (bad) clc jg mov mov and arpl ret sbb fistpll xorb jg pop lret scas mov jg or ret push (bad) or jg mov in out aas fld pusha mov ror clc lret push jg (bad) mov mov jne,pt jg es ss jl mov (bad) sub push ret jg and outsb cmp mov xchg dec mov fs sbb xor je lods xchg sub stc pop cmp xor out mov call inc popa dec outsb or xor aam pop idivl sub lock xchg (bad) fidivr xchg add jg imul jg into inc push sti mov repz add jmp (bad) pop sbb aam sti repz cmp or jg lret movsl mov (bad) clc icebp je add jg inc out mov insb ret es mull pop dec adc jg mov adc xor inc idivl jg pop dec mov jg cld inc lods jnp movsb pop jg scas enter divb inc stos inc fadds hlt mov int xor adcb inc rol stos ds es hlt push mov pop jae aas mov jne mov xchg data16 aas cli push xchg adc adc push sbb jmp sub ds xor mov das fmul adc scas fisttpll pop adc jg data16 lea xor ja addr16 out jg mov sbb jg ds dec rorl jg mov inc adc xchg sub push lahf push jg or pop call inc out jg divl xchg sub repz adc aas and sbb mov (bad) pop push or lods mov enter sbb cmp out sub ret mov popf inc jg sub add (bad) rorb jg das daa push in mov xchg (bad) sbb insb scas fs or add jl fldt jnp mov fwait test gs out mov rclb sbb mov xchg dec ds push jg arpl jmp clc mov adc insb push pop std mov mov fisttp jg repz adc int jb mov cmp addr16 mov inc shrl ficomp jg xchg jmp addl fdivs out pop mov pop js divl xor cltd pop mov add inc jl loopne dec aad clc mov jg (bad) fnsave cmp (bad) and sub addb test sbb jg mov cwtl in cli in test aas push pop aaa rorb jg inc sbb or jg imul cmp (bad) mov ficom dec jle jg (bad) cmpsb xchg lds sarb xchg cmp and jg aaa mov test fcmovnbe jmp cmc adc mov daa sbb add pushf out xchg sarl cmp ret push jle push mov pop dec cld xor gs jl pop cmp xchg jp insl xor xchg lcall pop lahf jg (bad) push mov jg mov insb sarb cmpsb aas push inc (bad) repz xchg fdivrs daa add scas sbb inc and lods sti cmp pop xchg addr16 and jg ja sbb add rcrl les jg pusha push ret dec fimull aas add push sbb push lret inc movsl adc data16 jg push jno sti test push inc sbb jg in jp inc icebp insl (bad) mov mov sbbl js sub lret aad icebp out jg repnz leave jg mov push fadds xchg xor dec mov inc sbb pop xor jg iret jb xor jp jg sbb or sub push cmp push push mov fistp adc lret repz jg pop and jg mov mov aas scas inc rep pop or cld sti insl xchg ss push arpl in js stc jno cmc stos pop (bad) mov xor frstor sti pop ljmp inc cmp pop aas jg (bad) aaa fwait inc into iret xor xchg aas push pop pop inc mov inc jg jle and lret in push ja scas jg inc fwait call jg ds add xor jg stos cld pop pusha loope fs push movsl ds mov jbe inc insl mov inc cmc dec inc mov pop inc cmpsb arpl clc jnp das (bad) into outsl mov sbb and add sub (bad) mov mov sbb jg into lds jmp popa inc sti clc adc xchg jns test jg xchg into test enter ds or inc fdiv (bad) mov push call push or lcall in jg int3 test mov test or jg adc aaa jg stc jns lret pusha aad insl lea dec sub shll leave insl jg addr16 or sbb mov jg push xor cs mov (bad) dec outsb mov xchg pop int3 cmpl inc inc cli lret scas mov icebp pop fbld mov cld inc inc outsl jb jg insb loop or arpl out jp lods xor jg sbb aaa jg stc lahf ljmp mov sub pop int (bad) jae imul lock cmc aas imul scas stc movsb sarb inc push dec jg es sbb push fist repnz dec cmc prefetch loopne hlt stos sbb dec mov sbb pop movsl movsb mov jno int pusha mov mov in add jg cmpb sub mov push pop int3 lret xor aas inc fistpll nop (bad) hlt jmp bound es out in (bad) push dec pop sub popa fsubrs push (bad) loope jg dec enter int3 aad xchg jg (bad) xor pop mov jg iret into mov xchg aaa pop je daa icebp jg nop inc popf push lock push lds push fisttp mull mov jg xchg dec stos mov lock popa insb xchg dec jg mov sarl ja cltd stc decb and push sti sbb jns pop mov js aam jg add mov sub jo inc cli js pop aad inc mov push mov test mov mov fwait push ret mov stos jae fnstenv dec imul jg mov mov les lock data16 lods inc and jns jg inc shl clc add mov ljmp sti jg pop push push jg test int3 jg fs and lock sbb outsb jg push sub adc sub pop inc aad jg cmp mov pusha sub jae je cmp test or nop arpl dec out jg jnp test fidiv in les inc sbb aas jmp adc fimul jne stos outsl daa jp add xor sbb pushf cmp (bad) loope movsl lock outsl pop out inc (bad) ljmp (bad) mov dec xchg inc dec mov dec outsl dec in mov arpl pop pop cli xorl or or aaa fstps jg sahf jns out mov out jne test inc js push sub clc and mov jg into dec lahf pop fsubl sbb cmp jge mov sti push or sbb int3 mov pop push inc mov mov mov adc movsb lds mov cmpsl adc in jg cmc mov in xchg out jno adc mov push adc dec ret push jg leave shl ja inc jg xor imull sti pusha and dec jnp (bad) mov in popa (bad) jg pop inc pop leave lods jnp mov adc bound mov and xchg in mov jg inc pop cmp jg das and jo ds mov ja test mov xlat test jg cmp ret (bad) cmp popf rcrl popa xchg repz xor pop cli jnp movl scas mov fmuls mov or popf push mov gs int3 or inc sub fild mov mov mov ds mov scas (bad) lahf jg xchg fsts xorl xchg hlt fsub jg rorl or inc mov pop jle dec xor jg adc sahf jecxz cmc repz movq rcr dec jae xor jg jmp jmp jg imul or push add adc ds xchg ja into mov jg fucom adc jg xor gs loopne sbb call mov arpl jecxz jg fwait inc dec and sub mov aaa and jg sysenter dec es lret inc jg mov movsl pop dec pop (bad) rcrl sbb fdivp xor jg xchg mov jns fdiv jg pop xchg addr16 lds pop push jmp lcall test js movsb dec sub jbe fistpl aas xchg jno das jl repnz pop inc pop lahf pop test pop test and bound jg sub pop lcall sbb dec bound mov popf fs or sub pop xor out and push fcom cmp jg push inc test jo pop pop int3 arpl dec lret jo mov js inc jbe jge xor std (bad) push cmp sarb add pusha push int3 aaa aas dec es sbb movsb dec aas test add dec mov mov jb push pop mov sbb inc mov push (bad) repz jns inc mov popf call xchg xor jge ja adc (bad) push addr16 divl dec addl mov add stos xor pop imul pop hlt imul jg cmpsb mov push jg js test dec dec jae dec jg bound push imul dec add daa or mov dec dec or mov push mov mov aas dec pop outsb in pusha sti gs sub jg cmpsl mov adc adc arpl jg test pop mov xchg jg mov sbb lds popf jg lods cmp pop nop dec push sub dec sahf test mov fwait jg sub pop (bad) cmp mov out jp rcrb test mov outsl cmpl call mov jb dec scas xchg js and inc inc pop aas mov ja bound and (bad) push add sahf dec (bad) mov dec xor pushf loope mov mov test xchg repz aaa jae or lret xor inc sbb add frstor stos adc push cli jbe mov push das or dec lret jae cmpps pop adc xor xlat jne loopne jg orl repnz cmc in sbb fldpi (bad) in push test inc ds lahf mov pop sub lret or or jg xchg movsl fcmovu andl mov ss sarl dec mov jg aad fsts cwtl mov sub jo (bad) sahf sti dec xchg cmp adc out cli and fcomi mov adc pusha push jg jle mov cmp add jae mov or into pop and mov xchg mov pop outsl dec jg ret adc xchg jp jns fdivrl sbb (bad) xor imul ret adc movsb inc data16 jg and jg ljmp jg enter cmp dec jmp aad aas jb sahf cmp push std jg ret and sub push das (bad) fldl dec add add and mov test mov jo ljmp ss clc push lds inc out loopne and or imul inc jp jne jns xchg mov cmp cmp pop sbb (bad) xor push jmp jg lahf sub jg loope fiadd ds movsb jg push jg call lea pop out adc sbb cmp mov punpckldq in and loop jno cmp jg stc scas shlb mov sti aam mov dec jb adc (bad) std cmp aas out lea lret sbb mov sub shlb arpl pop jg push test cli sub stc das clc leave mov dec mov lods (bad) mov sbb mov data16 stc jle shrb xchg mov sub mov pop push mov pop push xor imulb jg xor stos stos test pop fwait xchg call adc pop jnp insb aas or jg movsb (bad) mov mov dec mov and push mov jg stos mov fwait in adc loop fnstcw or sbb mov add in jg pop cmp loop sub jg jbe inc repz out jg cmc leave ss push (bad) jle pop sbb fist adc (bad) aam push push ret stc mov lds js and dec js add mov cmp or cmpsl inc inc dec aam mov add sbb jle and jecxz dec inc push test stos mov in or mov push jo ljmp pushf pop sub vmread push pusha fwait popfw jg dec push imul (bad) pop jg sub flds int3 imul adc mov or inc jg xor mov mov imul (bad) dec jg test (bad) (bad) mov push in mov aaa gs jg sub or jg mov mov xor jns mov aad insb je xchg repz inc stos jmp fldcw mov xchg call xor inc das and (bad) adc mov (bad) jle pop jle sbb sub jg pop xchg inc rolb mov mov dec jae jg notb cwtl mov sti sbb mov cmp fstpl jg jne xor data16 push stos xchg pop ss aam adc in sbb lock xor sbb rorb ljmp bnd adc mov outsb push push or jp mov ljmp add and cmp or pop (bad) jg xor add jg jmp cmp fdivrl lret cltd jmp sub fldcw test mov push lock dec je or rcrb push jg popa adc add jg jne inc js lret icebp add pop jg cmp fbstp xlat jae fidivr inc fmuls push inc xor dec jg cmp xchg cli jno pusha push adc mov lcall push sahf pop lock push jg test pop ret (bad) cld pop push lcall in jmp sbbl les clc pop inc push int3 inc and pushf mov imul mov (bad) xchg sarb xchg mov sub adc scas pop das inc nop mov or mov mov fwait cmp test jae xor cmpl xlat daa adc pusha sbb inc xchg mov push dec nop flds inc in mov ret inc jmp ret xchg int3 insb pop push dec addr16 arpl mov pop test fildl daa jbe les jg cmpsb lahf imul xchg or xchg mov adc pop or mov cld and lea negl andb scas adc sbb outsl (bad) mull and rcr nop (bad) cmpsb sub (bad) in push pop push es int sbb ds sub xor (bad) xlat jne mov dec push mov pop mov or push pop int3 fistpl jg add inc icebp jg sahf sbb jg mov call push dec cmpsb aad mov push adc mov (bad) push mov outsl stos add jg mov dec data16 pop into sbb dec jae int cli push jg mov scas mov cmp jmp inc and (bad) jg sbb arpl inc js inc ljmp int mov fcmovnu addr16 jg,pt stos inc push jmp (bad) loope pushl jecxz mov mov sti jg sub adc xor das sti mov loope outsl xchg cli cmpl xchg sub mov jg xchg je jb inc sarb adc ret popa mov pop push adc (bad) in adc es sarb sbb push pop daa clc add arpl movsl hlt mov push inc mov outsl out mov cmp dec pop cmpsl pop incl xor mov jno jns inc fs stc dec and jg push dec adc adc test mov pop jno in cmp stos sbb dec cmp mov iret push or test aas pop mov and and pushf stc daa or shrb in outsl mov xchg clc ret jg mov sub jg dec pop xchg xchg mov enter sbb pop jmp add jp push jg ret daa (bad) push sbb jg xchg popa lea or aaa movsl adc lock fildll mov cmp out pop das dec fwait mov insb inc mov in scas cmp jg pop sbb jg push sti int xor sbb clc cmp inc rcr xchg stc and mov popf pop fnstcw lods insb sahf mov imul pop mov cld or imull xchg iret xchg mov mov push std pop push jg xchg clc mov jg xchg frstor push sub sbb jnp stos pop or and and fcomps add pop aas mov ret aas das pop jmp arpl mov imul (bad) jg pop jmp stos mov mov mov jg mov (bad) inc pop push cmp adcl fisttpll sbb (bad) insl and adc add xor (bad) cld mov mov ror inc rol lret jbe mov sub jg cli jne pusha jg push pop dec cmp (bad) repz add cli jg shl pop jecxz pop aas jbe dec arpl dec out lret jg je (bad) jmp pop or mov mov inc jg,pt (bad) fsubrs cltd loop jg jmp lds ds mov outsl movsb inc sub pop add fdivrl test mov jg lret enter jg dec int3 sub jmp je pop std jg fldt ret (bad) (bad) mull xchg cmp ds outsl stos mov pop std lock xchg jg outsl fs in test sub pop pop sahf sbb push shlb cmp test jg aaa sub ret jle mov add imul mov sarb mov dec pop gs sti mov adc cli out icebp cs dec in stos and inc inc jg fwait cmp adcb js movsl cld jg inc or sub jg mov jmp cmp arpl mov popa adc push xchg in lret sub mov cld les pushf pop mov popa test push repz sbb mov repnz shll mov aas pop mov enter inc leave jg cmc and jns lods jg xor add ret jg push sub pusha cmp std scas push add sub cmp mov arpl stos (bad) jecxz pop lods test fsts inc cs mov inc jl jecxz (bad) scas inc fidivrl push sbb sub jg mov xchg ss out test dec xor push jg mov mov ret mov pop call jg bound fsubs jg pmaddwd jg dec mov aas cmp inc (bad) jbe out xchg outsl jg fsts pop into or pop gs daa aaa jle imul pushf push add sbb mov add jp mov mov sub mov ficom popa (bad) jg dec mov xchg mov loopne cmp xchg mov push ror mov push jns mov mov cmpsl cli ss sbb dec push lret stos and loopne or sbb mov xor sbb dec lock add or nop shl cmp push cmp mov inc push jno xor loop jg aas pop add push inc (bad) pop fidivl out inc mov inc jg mov xchg jl idivl and fs mov jg fsubrp mov cli mov mov das pop jg rcrb outsl aas notb jbe in dec in jno loope lods imul inc insl fwait sub mov push cs sbb add jg movl scas inc scas aas lcall inc inc add test jl add gs insb xchg ficomp sbb xor cmp scas mov mov test mov idivl std mov mov push inc mov out call pop mov pusha test out mov add inc les imul xor jg jge xor fsubr mov lret cmpsb jg jecxz cmp mov out pop or (bad) xchg dec and mov mov pop cmpl nop and mov pop cmp cwtl inc xchg in into pop inc mov pop jg push cmp jg mov lock push xchg or xchg fdivl xorl lods mov jg shrl sub rcl mov test pop add repz out jne arpl mov and push mov cmpl mov jg loopne mov jg lcall mull adc lea push pushf insb pop xchg arpl mov push pop jl sub daa mov imul aaa jne xchg and or cmp mov add test jg ret sbb ljmp mov jle pop jg mov cli push cmp jbe and or mov test mov aam roll rol and cli pusha pop jg popa jns pop addr16 pushf xor xchg js add leave and fdivrs lcall jg (bad) negl cmp lods adc stos push test xor inc pop repz fwait mov xchg adc inc test pop repz jg mov dec mov fwait (bad) mov jge or xchg mov jl add inc mov cs mov mov jecxz push stos aas adc clc inc les rcrb add mov inc jne movsl sbb icebp jg xlat mov imul pop sub jg (bad) xchg lcall daa pop outsl lret stos adc fs loop lock pop lds negl push in jp test jg cmp jbe sub js adc inc ret pop cmp clc loop push movsb mov das jg fsubrs scas sbb mov (bad) xchg or inc xchg jg aad mov scas jl jg rorb jg mov push leave cld sub test cmp cltd movsl mov sub xchg addr16 adc push stos cmc loope inc dec ret push jg lcall jg dec xchg popf fsubrs sub dec xchg (bad) cmpsb or inc cmp adc jbe pusha sbb ss scas pop xor sahf loopne jg add add js add xor loope sub sbb jns (bad) negl dec lret xchg js stos mov inc imul aad jg movsl mov jbe adc sbb cld popf aam sarb sarl jg mov jle enter ret jg (bad) std dec int3 lods xchg mov pusha cld jg or rorl xchg mov cmp jg or xchg push (bad) jp insb lock pop adc (bad) clc inc pop inc cld mov jno inc cmc cmpsl push jg mov mov lret lock jg scas test sahf test push lds pop sub jg mov xor fisubl xchg mov push cmp sbb out push outsl or fcomps stos jg pop cwtl jp xchg decb pushf adc pop ret stc jmp inc lcall testl cmpl pop cltd stos lds jg fwait pop mov mov dec pop cmpsl inc (bad) pop mov cmp dec bound mov sbb cmpsl fs imul aas loop jg xchg and xorb pop imul add sbb dec stos nop cmp mov insl sbb jg pop dec jno or cmpsl ljmp push rclb sub jg or les pop jg mov std dec sbb jg pop scas js adc cmpb fistp jns shll jg lret daa xor ja fstl or lds mov gs push lods mov xor je mov mov jp ret jo cmpsl cmpsb je call push cmp push pop dec mov jg rcrb (bad) sti in sbb es jg mov addr16 aad push inc icebp add push (bad) ja adc fs xor dec inc (bad) cli (bad) stos mov jns push les dec mov mov lret dec jno ja and ret push xchg dec push and pop cmp lea jg enter jle mov jg rolb mov fsubs inc jl movsl jg pushf je add pop (bad) cmp inc stc inc dec js jg int3 push xlat push adc sarl fwait xchg cltd mov cmpsb (bad) outsl pop fstl sub adc iret mov repz cmpsl insl mov (bad) jl inc sbb inc dec jg xor scas pop mov outsl es fidivr mov mov xor sub pop mov push aas out sub lds add add iret cltd test mov cmpsl lcall cmp jg adc jg cltd push lcall ljmp mov leave lahf fucomip addb cmc xor jl (bad) aaa pop mov inc std jg and jae or jg lods aas xchg add movsb cs dec dec addr16 cmp jg repnz stos inc addr16 cmp mov dec rolb jg mov in lret fsincos arpl push aad mulb jg mov or (bad) jo jge mov (bad) mov mov hlt cmpsb or jg repnz inc mov and jg cli mov jg sti test sbb movsl aas pushf add or fwait jg out adc dec mov inc xor fnstsw add insl pop mov mov or jns,pt clc imul inc sarb dec movsl (bad) aas daa mov xor mov mov mov fiaddl sti mov sbb (bad) adc pop sbb inc and fsubl movsb jns movl shrl (bad) mov cmpb cmc cwtl addr16 in jg xchg or mov jg adc pop mov push push sti xor icebp or push inc jg (bad) jmp stos mov insb popa mov cmpsl out ret or outsl mov rsqrtps dec mov addr16 cli dec scas js and ror (bad) mov aas jg adc enter jg int3 pop xlat aad xchg sub mov mov fisubl das div pop jno jle in stos mov sbb rcl dec mov mov cmc pop inc xchg jg and dec loop stos xchg stos neg outsb add cmc inc sti sahf jg push hlt test mov sub repnz or mov sub cmc call cmp clc iret dec jae and daa cmp mov inc aad push mov aas std outsl sbb scas dec push dec or xor lods jnp mov jno pop push gs mov es daa out dec in shlb mov fldcw sub jg loope adc stos das fcomip inc fisubr mov adcl shrl add sarb in and cwtl orl xchg jg out cli sahf inc push push mov in out dec out pushf pop and xchg dec cmp cmp movb cmpsl xchg sbb pop dec sub and xlat xor fdivl adc data16 jo (bad) inc lods sub aas sbb sub jno jg inc pusha mov cwtl pushf sti mov (bad) stos dec cmp xchg arpl jg es hlt mov xchg mov mov test jmp xchg jg ss ljmp loopne daa mov aas or sahf mov inc in jg lock inc add jg sub adc aas adc inc jae lods jg sbb arpl (bad) xchg jg test call popa jg sbb cmp outsl loopne xchg xchg aas pop mov je repz movsb movsb cmp outsl fistp and pop jno jbe (bad) mov cmp gs mov and or stc in aad insb test ja mov out lahf int test sub mov cmp push mov inc mov or into aas hlt push aas mov (bad) orb ss out cli pop and ret jbe xchg push mov jg lock sub mov mov pop (bad) fisttpll adc inc pop jg faddl add mov xlat or cmc jg adc dec jg (bad) cwtl mov cmc jg cmpsb pop popf lea jg lods movsl mov arpl jg cwtl or (bad) out ja xchg ss sahf pop mov cwtl std data16 ljmp aad dec (bad) inc cmp js and (bad) leave adc cmp scas pusha sbb xor inc mov into inc je iret xchg mov xchg outsb push add ret mov out mov mov and or scas fstpt push ss stos jp adc push lret nop mov push outsl aas je xchg cmp cld xor pop jg loopne pop test jae fwait repnz dec popa fdivrl cmp outsb jg cli clc pop and das (bad) jg adc fmull xor insb (bad) or jns in jg arpl vxorps jg jl jmp jg mov jns sub lods outsb icebp loope rorb mull mov decb jmp lock pusha sahf sbbb push ret ret data16 push outsb pop repz xor jo pusha mov dec js mov push add out mov xor jecxz sbb adc and pop xor js in sub jge mov fs pop lcall (bad) mov cmpb sbb sbb out push ja stos jge pop adc dec jmp mov je jl and xor icebp enter dec dec cmp mov pop mov ret lret incb ds and and xorl xchg jg adc xchg pop in jg pusha jns xor push sub (bad) cmp dec scas jno jg jmp mov aas adc mov je,pn mov pop cmpsb push inc dec stos adc push mov sbbl mov pop inc iret mov (bad) mov repnz push push bound sarl fistl fcomps and test popf inc sbb mov movl mov push icebp repnz addr16 jmp ret cmp xchg pop and and mov cmp icebp jmp stos cld cmpsb sub jg les and lds mov leave jg push pop daa imul cmp cmp scas cmc pop orl daa xor mov dec dec inc sbb gs das inc mov mov lcall cli sbb popf cwtl jg cmpsb sbb mov xchg mov leave push ror mov mov stos inc insb popf push jg fcoml inc jg outsb lea inc gs adc pop addr16 pop xor inc fsubr jg push fildl jmp add movsl pop (bad) insb inc ss mov pop (bad) pop in xchg pop jge push push pop jg (bad) fnop inc bound jg fisubrl mov out push cmp inc sbb pop jns imul ret fistpll rorb test adc pop leave mov cs out xchg mov ss sub out mov (bad) mov add mov lock rol pop pop sbb (bad) xor xchg push sarl dec jae pop mov icebp push xchg adc push sub inc ret mov and pop aam lock xchg mov mov inc in mov push incb icebp xchg mov rcl or fcoml stos aas ficompl push dec test daa or inc jecxz loop rorb dec test push jg sbb jo mov jmp ja cwtl xlat pop aas cmpsl mov aam mov jg adc jne pop stos fnstcw test mov pop out jg std lret incb add mov enter mov mov lods jne cmp jg iret shlb push push scas jg imul stc mov add jnp icebp outsb jae and (bad) dec jg jo test cs sahf aaa pop sbb mov fcoms sar test inc sahf lahf mov popf call mov (bad) mov popf sbb andl clc xchg pop mov lds lahf push loop jg xchg cmp jo repz psubb stc inc stos push mov pop sti enter jg lcall jg pop cmp pavgb mov (bad) mov push (bad) das jg inc add jne ret pop or or cmp outsb mov jmp mov lods je cltd (bad) ja and cmpsb cmpl lahf xor jo pop sub jp ljmp divb mov adc xchg enter decb loop mov push aas les and xchg ss outsl nop push mov cmp (bad) aaa adc pop jg dec inc pushf loopne scas pop jg mov cmc pop cmp mov pop xor insl jg sub dec aas mov fbld fwait jmp inc jg addr16 lds or xchg cs pop xor imul inc mov fwait mov aam pop jmp or push jg xchg and fidiv rcll (bad) mov push decl or dec inc ds jne sub jg inc inc test or mov ljmp jns std and pop mov lcall sbb out rcl addr16 in mov jg aam push cld inc clc je or mov cltd dec fdivs or push (bad) je lock cbtw jmp or adc loope loopne dec imul arpl in idivb jg dec lret gs addb lock mov push std enter and or mov xchg xchg inc fdivrs lahf lods daa scas xchg sti repz mov lods dec out sahf jg jbe in cld jnp mov aas rcrl mov jg or jg cltd dec das pop cmp in out pop cmp lods scas dec aas and adc daa outsl dec sbb cmp pusha sbb clc jae inc mov jle jns ret jbe mov adc out pop mov mov pop lock dec aaa in jle xchg adc or dec out jg ds cmp pop lret pop outsb adc iret rcll adc xchg and pusha jg es and xchg mov jg mov pop popa mov push sahf inc xor jg sbb pop lret stos mov add sbb xchg cmc or push cmp mov les mov mov jg lret sbb inc mov mov (bad) jp mov jns gs fdiv adcb stc aas adc inc push dec iret jp lods push xchg jg and fwait int3 adc pushf xchg fistl subl (bad) in jg push mov fdivr lds mov ficompl mov outsb cmp xlat mov xchg xor jg frstor add and movsl imul cwtl (bad) hlt xlat sub xor push jl out (bad) imul pop outsb jg cld ret sarb jg mov fs aas fdivrl fcomps lret mov stos aaa jg jl mov jg dec adc test pop mov addr16 add jg jbe jecxz imul add int3 vmovdqu xchg add mov sbb or pop adc rolb and jg movb mov (bad) stos aas jp dec aad xchg xchg jno clc jb lds sar movsl ret dec daa inc out adc or ja mov movsb ljmp outsl int3 pop adc xor jg cmpsb arpl mov jp mov stos enter mov hlt icebp pop mov mov mov xor mov addr16 mov dec xlat pop mov mov ss adc jmp push mov sahf ss js add mov mov scas (bad) mov inc inc mov pop push sbbb xchg jg xchg das scas cmp mov add jg,pn mov (bad) cmp or dec adcl fldenv into xor fdivrs and jle pushl inc add mov mov lea mov xor ret jge jg test iret sub or xchg jg inc push add xor ljmp out jge jle or add shrl movsb jg,pn loop fwait sbb ds dec imul test das inc pop mov mov aas sbb inc bound inc stc movq mov mov fucomip pop jg xor xchg hlt idiv xor mov mov dec mov js jg loope mov mov add enter jg ljmp jg in test jg stos insb and or mov inc jp dec loopne scas lea jg out push xchg popa shlb or sub scas aas adc xchg mov jg add inc or or lret pop xchg mov jns and mov cmp (bad) divl sti mov in orl cmp jl jb and jg push xlat (bad) adc inc sti and push jnp in or fdivrl xchg ja and call lahf pop mov (bad) xor add ds mov add dec loope mov push pop mov test adc sbb jg adc inc push inc mov (bad) jmp mov jle xor daa sbb xor xor xchg je bound gs xchg ja mov adc call sub mov push inc add jg int add pop arpl (bad) data16 idivl stos push lret clc movsl add cld lock jg jle push cltd leave insl jo jbe sbb cmp aad xor mov jl inc push push inc xor loopne jg js ljmp lret fdivr cmpsl pop je daa and pop inc das adc mov cmp pop mov icebp pop pop sub lods (bad) adc outsl dec jne dec pop das sarb mov fistpll inc mov jno adc pop iret push addl pop mov es cmp aaa xchg jg les push push jo sahf jg rcr std fs jg xchg push or movsb mov lods scas dec mov xchg cs out (bad) ja sbb out popf mov push nop mov mov and sub shr xchg mov cmp incb cmp jmp popa out jg jae xchg shl add dec jo sub cmp int3 fnstsw mov and pop mov insb pop or dec add clc nop jg (bad) cmp sbb imul data16 xor mov jge jg dec or jg mov popl mov jg ss jmp mov and pop (bad) or in xor push dec mov cmp loop das mov scas sarb addb xor sub adc imul dec pop ljmp pop fmuls pop or out push mov xchg mov mov stc loop mov jg jnp vpackssdw daa mov hlt scas mov gs sbb sarl jmp jb (bad) jg cld sbb or out aad mov jbe sti push and pusha cmpsl push jg daa fwait push inc ja push or mov mov aad cltd clc jg (bad) mov mov mov or pop cmc fcmove popf inc adc (bad) outsl pop scas das inc loopne xor fsub jg js mov sbb sbb lods (bad) jae je pop pop xor inc fsts dec sub (bad) lds xchg cwtl push sbbl outsb pop mov pop pop adc cmp xchg fldl popf outsl int ret xor sarl ret int mov mov int3 pop aas jg lods out ljmp fwait mov adc ret cmp out fisttpll ja jmp movsb clc scas pop and pop mov add mov mov xor movsl xor or arpl jg out fbld jno jg pop fdivl aas imul aas xchg jb xor and dec dec sbb aam cmc mov or mov arpl aas jecxz call push jg inc and jne mov addr16 insb sub inc mov jno scas jg int3 jp lret fsubr jg push ljmp pushf dec inc mov or jno xor pop ret in pop mov gs and mov sbb jg iret sub les push jg cmp out sbb sti mov dec inc push scas ret jg push sub or jg inc stos xlat shr jg js sbb add fidiv aas cmp inc pop ja add push sub sub xor lcall jg or adc mov lds mov inc pop jb mov jg xor nop xor insl in add js cmp (bad) lret sub jg int stos arpl repnz xor mov ljmp and jg ljmp out jnp inc pop bound jg int3 (bad) pop popa mov cld outsl mov adc pop add addr16 jg pop (bad) cmp jp mov or adc push test lea rolb iret push jne push sub lock sahf arpl jg popf out loop ljmp inc pusha (bad) mov push popa je dec imul pop sti shl jle cmp cmp mov test push lock xchg mov call outsl mov cli test and cmpsl inc movsb hlt test lock inc add push cmp popa jno jg,pt lds stos sub loop pushf push add jg mov rol fnstsw pop jg lock jnp sbb pop pop jg jo test and push jg rcrl js and jg and jo sahf outsb js push adc dec sbb jns pop lock sbb aas add jg ja popf pop mov adc push mov jg or or jmp test xchg cmp jg add mov aas ret int3 sub and inc jge add pop cltd loopne jg je loop lret jg fstpt mov mov adc sub loope movsb pusha in insb mov mov sbbb mov dec xchg stos adc or fs je xor dec add sub cmpsb fldenv sub iret sub movsl arpl jp enter and jg xchg in outsb ss scas sahf out cltd out fucomi push (bad) std stos lds mov adc mov jnp mov scas rorb in (bad) pushf or mov jmp dec adc xchg mov push dec cmpsb fdivs dec and gs push std dec incb xchg lahf adc or mov fnop leave mov movsb (bad) aas cmpsb push icebp ret push mov inc pop pop es push fcmovne mov dec (bad) xor arpl mov test mov dec inc lods nop outsb xchg mov jg orb fcom or jg pop (bad) mov mov pop jg jns inc mov stos inc jno cmc dec dec daa rclb mov icebp sti sbb call aam lcall add add pop adc sbb mov xchg bswap aad xor (bad) sub push rolb sbb fwait sbb mov xor mov pop jb stc mov movsl icebp push jg nop mov jg dec mov test loop push iret adc xchg stos cmp inc roll (bad) dec cwtl or dec mov fdivrl (bad) jo sub (bad) (bad) sub outsb repz imul rolb in mov lret shld imul rcrb jg (bad) pusha mov ja call xor jg add stc mov ret lcall inc sbb pop icebp jle jg push push jb mov mov lods pop dec bound loope stos add mov in sbb sbb mov insb jg mov jp out mov and sub pushf jg and subb jg test cmpsl ss call ret push jg mov arpl xchg sub push jg (bad) sub mov sbb add mov popa dec jg and dec pop decb jle jmp mov inc lock ss aas xchg and dec in loop jg sub leave decb enter inc pusha jl roll mov dec push adc mov add inc aam cld (bad) mov ja push sbb pop jg mov stc dec jg jle pushf test ss stos jg cmp movsb insl cmc mov movsl stos clc mov mov pop into ds inc push inc jg inc lret cmp std stc daa jg repnz cmp push cli pop in shrl mov pop xlat jne int or pop jae mov popf stc add lret mov cltd stos or roll sbb aas dec das (bad) scas ret inc jb mov mov lock sub push jg fistl adc pop mul push pop jnp jg cmc xchg movsl cs repnz jg mov outsl adc leave pop cmp in call icebp popa cmpsb and cmp jg lahf test imul xor mov xchg inc jae stos das lods jbe and cmp xchg mov (bad) iret pusha nop mov repnz mov aad in push mov (bad) mov pop and jle adc push bound xor sbb pop inc pop push mov inc cmc insb aas xchg jbe pop jp cmpsb arpl cmp pop or lret mov aas leave cmc pop mov or loopne inc dec xor mov inc mov inc icebp lahf sbb daa and in ffreep mov (bad) push cmp dec ret jg icebp inc iret push jp adc jns pop mov sbb jg dec inc je push mov cmovno sbb dec jg jno inc or stc je mov incb out cmova mov mov repnz pop jo rclb xor inc sbb jg fbld push mov push movsb outsl dec mov jle scas push lock add inc stos sbb push cmpsb jno sub adc data16 jecxz ds jae inc push js cmp imul icebp loop jg rclb jle sarl arpl imull fcomi sub cmp gs clc jg push push jmp popf ffree mov sub repnz push ret jp push nop (bad) (bad) add addr16 jg push cmp loopne mov and ja rolb jb divb mov lods flds jg xchg jp clc mov jg lea mov je shl add and ljmp fldt cmp jg pop (bad) jg mov cmpsb cmpl lea or inc xor fwait test (bad) or xchg (bad) ss mov lret imul (bad) jb dec cmp fstpl mov test (bad) mov insl aad fcoml jg add lret adc sbb jnp cmp mov ljmp enter inc sarb push cmovae sub mov mov pushf mov (bad) clc cmp outsl add stc mov leave sbb pop sti push gs ja sbb cli jg pop xchg icebp or adc lcall pop cmp repnz (bad) mov xor jg xchg push cmpsb dec pop jg xchg lods sarb inc popa (bad) leave mov jg fist push cwtl ljmp repnz push gs js jle dec xor adc adc jg test out jg sbb xor pop pop jne ret jmp ret jnp add and es movsb sub sarb stc or and push lret js pop enter inc lret addr16 push jg mov imul xchg cmp aas std loop lods cli cmpsb addr16 lahf sub mov or xchg jno push jg loopne and mov dec lods inc cmp cmpb dec sbbl stos jg leave inc mov stc and jg cmp cmpsl test enter (bad) stos mov sarb mov pusha popa aam sub xchg icebp dec jne mov lods pop mov je jg adc leave sub inc cmp mov sub xlat pop cmpsb sub bound (bad) jb (bad) mov cmp pop test inc xor sub adc dec clc cmp sbb andb mov aas call inc ficomp sbb imul jg test loopnew jg int3 inc lret push mov mov fidivr pop push shl push aas test aaa jnp fnsave pop push out add negl xchg ljmp push loope je out dec enter push jg jo inc adc xor inc jg xor loop js mov sbb scas mov xor arpl mov xchg stos inc bound sbbb lret repz data16 aad xchg sub iret jle aas test xchg out leave in sub adc insb ds ss jg rcl mov jg aam xchg aad pushf (bad) daa jg mov ret or jg sub movsl xchg es in jb push pop jnp mov addr16 adc cmc js xor jg jmp jg repz fdivs dec jbe xchg cmp push mov mov push pop test cwtl jg push pop aas movnti sub lock cmp dec pop pop xor dec fistpll xor clc inc std addr16 push std das jnp pop cmp mov jg inc dec push int3 dec lds inc sti popa pop rcr mov lock add push out push fldenv mov fistpll cld push xchg mov in pop dec mov mov cmp loope jg mov inc push pop jg xor adc and es xchg or bound jg fs push xchg hlt lret out jg es ljmp jnp jne inc leave push push jae ja inc mov bound imul movsb xchg dec (bad) mov jg push xor mov mov imul push pushf and cmc adc cmpsl jg lea mov cld dec test pop sub jg xchg gs movl push rolb movsb js jg ss ret adc sti or aam loopne cmpsb adc out addr16 movsb jg sbb pop cmp (bad) jo mov adc fiadd dec cltd aas cwtl inc pop jge pop add mov xor push sbb mov icebp pop shlb pushf mov sub aam fmulp pop sub cmc or or sbb lahf jbe push test mov jg arpl sub adc test dec loop mov (bad) dec gs mov ror xchg push jp dec mov test ret rcll (bad) push cmc mov mov mov add int3 pop (bad) or lds into sti cs pop xchg jecxz pop mov jg sub add imul add jne pop and (bad) or mov aam sub bound xchg pop aad push in jg dec in or addr16 push lock aam pusha inc ds and loope mov add push imul mov mov pop dec xchg stos inc pop jg or insl inc push cli fcoms jne sahf cltd xchg out pop and inc sti mov pop fdivrs mov or fisttp mov in jno cwtl in mov repnz fisubrl xchg dec jg and jo cmp push mov mov lret mov dec add and lahf xor push ljmp jg adc cmp pop in jg dec jp decb jg and sbb lcall mov cmp mov pop jg cwtl jecxz jg shlb pop jg cmpsl inc icebp clc insb push fidivrl jb pop push sub enter lahf lret jp subl rclb jle jg jns pop insb orl mov cmpsb pop pop hlt push cmp push mov pop xor lahf mov or and and lcall and and aas pop sbb dec clc in jg cmp inc mov (bad) cmc and push dec or std mov dec dec imul repz cmp jg aas pop movl jae mov push cmp das (bad) push jns (bad) mov lret sub rcrl lock dec mov push lea repnz jae mov (bad) xor es push mov push cmp or jg shrl ret jg push imul mov outsb push stc xchg dec push jb (bad) push inc mov cli jg pop or jae jg jmp dec sub mov ja inc jg push inc or jg movsl cmc enter xchg jg jle mov xor imul pop sar jg mov repz pushf dec in push add jbe mov dec (bad) xchg rorl les rclb sub push pop and cmp (bad) lods xchg pusha xor ja,pt dec jg les inc sbb jl mov cmp pop adc xchg jmp (bad) insl mov stos cmp mov mov pop fdivr sub pusha pop xchg inc or and ret popf dec xor pop stos add mov inc lds mov daa cli pop pop in jnp sbb push sub add sub es fsts sbb lcall fstpl lods add jg (bad) push nop js jo adc xor aam aaa jg outsl add push rol lret jg subl je loop fiadd loopne jp inc out loope call inc jg jo dec jne inc fist mov mov dec test pop iret mov cs clc xor jmp mov cmp ss idivb divps mov jecxz jg sbb jne jae push dec repz popf (bad) jg mov or rclb mov adc stc (bad) inc repnz mov repz mov jbe shr clc in push in popa jg (bad) das mov dec lret sub rol cli outsl movsb sti (bad) sub (bad) mov xchg jg xchg cmp and adc mov xor dec lock jg inc cmpb or and sbb pusha push movsl and divl mov dec rclb dec inc stos (bad) repz cmp push push testl dec or dec or mov (bad) adc movsl sbbl jg mov stos xchg jg es js push cmpsb or int3 popa ja dec pop idivb xchg xchg or mov mov cld repz out into scas pop sbb sarl jge dec mov and outsb jg push sub cmpsl xor in jecxz mov dec mov xor jg mov lods or pusha test jbe sti xor dec dec add mov lret xor stos cmp sti xor pop iret push push fnstsw out push mov inc or jp inc pop pop xor mov nop movl sti jg xor mov btsl pushf inc sub mov mov pop xchg pushf mov aas mov inc aad es push mov jg fisubl push jg jno jle outsl inc mov add push mov jg in imul jg fiaddl mov js jmp into xchg int3 push jg pop das fwait jle fbld movsb icebp pusha add and cs jg or stc adc jb jg roll cmp maxps imul xlat or notb pop or daa adc xor jg push inc mov aad sub (bad) xor jg jns in (bad) (bad) fxch cmp and aaa mov mov push mov sbb lea xchg lret jg sbb sbb outsb or fwait xchg add cld popa cmpb pushf push mov jecxz jg xchg pop xchg adc loop iret and and xorl jg in xchg cmp jg cwtl fcmovne test scas mov jae inc hlt pop (bad) fstpl dec int3 bnd (bad) xchg es xlat mov adc push loope jg iret inc and mov sbb inc orb pop out (bad) dec xchg inc jg fwait into jl jo (bad) jg ror jmp (bad) sub in mov mov mov mov jg xchg sub fnstcw iret jg movsb aaa shll xor jg fwait and sub or lods leave jmp jg into fistpll mov dec aam popf jle jg scas fistp int3 and out mov das sub and scas (bad) jg loopne imul fstpt jno push mov mov icebp (bad) xlat jg aas arpl js mov outsl jmp insl out fwait inc lock adc xchg push ret push repz es fnstenv sbb sbb jg outsl sbb push add inc inc or cmp lods outsl insb sbb sti jg push mov aaa jg mov jbe or jnp,pt lock adc dec jg jle sti add js loope scas inc jns cmp mov enter jg dec jl inc stc pop es sub mov rcl xor xor adc pop clc lds inc sbb fwait and gs sti stos adc (bad) mov inc xchg dec rcrl jg mov dec adc ss fldcw fbstp jg clc xchg iret das cli cmp and jg or daa mov push int3 jg pop mov mov in sbb (bad) pop or int push jge ret repz add pop inc outsl jmp xchg jns (bad) sub (bad) mov call movb push or jo fwait inc inc daa outsl sbb dec (bad) sti sub inc cmp pusha lret jg push jge and rclb cmp xor in jb mov sbb push sbb sbb xor adc jg arpl fwait jg int push xchg add inc jg mov jns (bad) mov dec jne cmp dec sub jg popf mov xor push pop xchg (bad) das movl mov jg insb lcall sub inc mov mov aas and pop sbb aaa or ror jmp jo sbb jns cmp pop cs outsl insb jae (bad) sub cmp mov mov push push (bad) lret lds cmp fwait mov scas jg jae icebp out add xchg xchg lods cmpsb push leave out xchg mov jo jp push test or jl gs adc mov xlat mov loopne jg cmpsb fnstenv cli adc dec pushf cmp hlt cltd inc fisub xchg mov jg xor add ffreep (bad) iret dec jg daa mov loop jg or adc sbb jg mov inc mov sahf jg bound out outsb ljmp lea push rorb jg lcall jg xor sub and sti pop insl rcll cmpsb jg fisubr inc jmp xchg jg inc mov mov dec sbb or aas inc lret fistl out sarl mov dec push xchg mov test pop sbb mov cmp outsl lret roll movsb and jo scas in stos test or and adc inc jg jne ds xchg scas jmp mov pop dec in xchg jg xor das sahf fwait (bad) testl into xchg in js sahf cmpsl push nop pushf add and in cli jg fcoml jg push xor cmp inc inc inc jg popf push (bad) cltd mov mov adc jg cmpsb andl cmp mov inc xor xor (bad) aas jg in mov dec inc mov jnp imulb dec dec andl int3 pop fwait sbb fbstp outsl jb bnd jge and (bad) sbb fxtract sti dec inc mov jg xchg adc cmp pop in scas in out dec iret mov lahf jg push add (bad) js lcall dec les cli call dec dec imul pop (bad) pop jg adc or call in (bad) mov add aam fildll jg roll and xchg cltd jg paddusb jg imul pop pop pop gs push pop (bad) sbb jg mov (bad) repz adc push enter mov addb gs jg jl push stc xor scas jg inc xchg sub jg arpl and lods jge stc lcall push jg jns fldl cmp rcrb and stos cmpsb xor fsubr lcall loopne frstor test shll enter jg mov in les jbe jg push sbb in pop out popa icebp lahf jg cmp xor mov js sti loop (bad) inc jge jno maxps mov in xor pop cltd das mov adc push scas leave jg jecxz sbb dec mov dec mov rclb mov pusha pop call jg lods xchg cmp jmp inc call insb scas jns je dec jnp (bad) fist out aas pop mov add inc jg mov jg mov dec fcomps add movsb jg popf xchg pop adc adc shrb (bad) lea stos jns cmp dec cmp pop dec jnp sbb je idivl and fstp movsl pop cmpsb cmc lods into jg jae mov mov add popf fcomps jae mov cmp cs or aad (bad) fsubrs ljmp lcall pop jg mov add jg or (bad) call jge sahf jg das xlat ljmp mov jl and pop add aam add loope add xchg cmp test fs dec es sbb push addr16 add hlt cmp test mov mov adc loope jg sub pop dec int3 mov jg repz jg jge dec daa pop sub xor (bad) in jg lods jo and pop pop pop in jg push and cmp sahf mov jecxz push int nop jg or loope or jbe pop mov movsl into jg jae enter jne leave aas fdivrs adc pop call or ds jg add (bad) and daa xor fnstsw jns xlat jbe aas lods fs jge negb pop dec or mov lds outsl shll sbb je mov cwtl mov mov mull pusha outsl cmc mov insb dec pop scas mov and sub inc (bad) mov push jg (bad) gs loop adc mov leave fcomip ljmp add cmp jg cld jl mov and repnz push daa movsb sti inc xor jmp jg adc cmpl xchg mov aas loope mov jp xor (bad) xor xchg sahf ds jbe pop adc and mov xchg inc dec je push cli and mov das mov jg add inc mov into jle cmp sbb mov xchg cmp jne aas mov adc jg ret out (bad) sbb sarb insb xchg inc or nop jle xchg ljmp sarl mov icebp int inc cmc jg in mov push dec dec inc sti aas lds inc addr16 popa pop js pop movsl inc pop mov test adc cli adc cmp cmpsl inc xchg xchg in inc sahf fcos jg or pop test mov lods test lret fwait out xchg and mov mov dec mov out xor mov xchg cmp mov mull test (bad) jg subl add and sbb aaa inc mov dec jo mov sbb imul or pop xchg jp xor push das push inc movsb jg loope ret push jg (bad) jns dec stos sbb out imul push pop stc fsts movsb jg mov or jae,pt pusha add sti push xor lds jmp lret (bad) mov mov cmp dec cmp imul inc jg jmp add jg jmp or lcall dec jg adc aas push (bad) sbb and mov mov add xchg inc pusha test aad sub cmp mov scas out bound lret lcall lock adc push push jg out mov js pop call mov cmc add sbb bound in jbe jb jg call push pop jne (bad) pop jg push out fnop dec mov aam daa hlt adc data16 mov pop in mov jae iret jg jbe movsl pusha mov in add pop data16 mov (bad) mov inc inc adc (bad) out lret mov inc jg sbb pop lds lahf mov cmp movsl jne cltd mov push ret sahf or cmpsl fidivrl (bad) pushf add adc repz (bad) push ret (bad) aas add lret aaa test jo push push jp and mov divl movsb daa dec std xor (bad) (bad) mov jg jne mov std jmp push mov (bad) mov add inc fdivrs mov mov mov or sub pop push jg fiaddl hlt daa xor movsb mov jg,pn add fisubrl inc icebp iret stc (bad) outsl repz test into test fbld ret ja or enter push mov mov add jg int3 jbe addr16 (bad) mov jl popl repz cmp push ret cmp sbb sbb ror mov pop adcl aaa fdivp pop call sbbb inc sbb mov movsl mov jmp pop pop jnp,pt mov dec mov pushf ret imul in ljmp cmp cmc inc push add add jg jp and pop xorl aad rorb loope imul icebp (bad) jnp pop mov cld fistpll and push jbe mov xchg and jg fs repnz gs cmp mov dec imul sub or pop outsl sbb data16 dec hlt mov jg dec jb xchg sub scas adc sub stc jg and lea out mov out mov addr16 add (bad) fiadd out push ljmp lcall std movsb inc movsl in insl aam mov inc jae jnp mov sub cwtl inc mov mov outsb mov add xor inc mov and mov jg fwait sub sub push pop xchg movsl mov xchg jg icebp in (bad) scas xchg fwait jg pop push xor cmpsl xor jg fs sub pop jg lea lods lahf test xchg loop jg (bad) lret in add mov rol dec pusha inc mov jg and (bad) loopne mov insl sbb pop dec call xor fdivrs insl jbe popa xorl mov push jg mov or aad idivl adc shll into lahf loope addr16 aaa rcrl ret loop dec popf movsb into xor pop fisttpl pop dec stos push stos push push jg or inc jle inc idivl and (bad) or jmp aas sahf fwait in das dec adc jg dec mov enter pop outsl adc mov mov jecxz xchg aas dec mov rorl sub cli mull or mov outsl arpl (bad) push ret mov jb jg insb pop or lods lds xchg inc cmp push in sub push clc aad icebp inc pushf dec mov mov imul xor xorl inc fistpll sub mov loopne jg sub pusha pop sub lahf adc mov mov (bad) notl sbb sahf outsl mov mov out xchg rorb sbb test insl jg pop roll pop xchg jl add dec sub jge xor pop mov push xchg maskmovq negl sti stc cmp daa mov cmpl push mov mov ja int3 push jbe jg and fnsave mov sarb mov pop mov lahf jecxz push xchg (bad) xor xchg addr16 stos jg adc scas mov frstor mov sub int3 (bad) enter out movsb mov cmp hlt ror pop jg mov arpl ja sub push mov jg mov pop adcl jg inc adc sub dec scas jg rclb mov push sbb dec xlat in and (bad) mov rolb jg xor test insb dec dec and dec xchg ror jl arpl (bad) ja adc or test mov stc cmp mov pop imul jg or or sub stos rolb dec popl xchg ja push jg jne ljmp testb lods push cld jg scas dec xchg test lret add sub push das inc repz shlb jg adc xor es push and repz inc mov loop fs jecxz fucomi xchg dec xlat out sarl aas cmp insb out dec xchg mov mov enter ret (bad) jg out xchg in ljmp cwtl jg subb cmp mov jg std bnd pop jmp sub shr cmp fidivr movsl shll pop sbb out xchg adc rcr jg dec js enter push fxch push xchg jg test mov pop xor fildll aad jnp mov cmpsb cmp jg pop fdivp cmp push outsl xchg mov or inc loop jle jl pop insl push incb or push ss jge jg sbb cwtl add mov pop push add cs xor dec shrb sub fld xor outsb movl mov pop jbe push pop pop push (bad) mov ja inc adcl inc mov imul roll mov dec in loopne dec pop dec jg enter cmpl out roll cmp loopne pop mov sub mov insb cmpsl fwait add dec in mov push and jg pop lods cli lods pop and xor xchg jl pop add inc pop cltd mov jae inc (bad) sub inc mov cli adc jg inc rorl addr16 ret push lods mov jg mov outsb insb repz dec jg xchg jl ss jg movd xor sbb lret push mov fldt xchg or add mov pop push pop xchg cli jg fnstcw adc adc mov jo (bad) or cmp inc bound pusha push jg std push sub fwait jg stos dec (bad) or ret outsb jg (bad) mov or or jg movsl sbb scas decb adc mov xlat aaa insl test nop inc and jg push (bad) mov mov pop mov shrb insl push jg out clc cmp ja mov mov cltd jg pop xchg pop call push rcll or out mov and mov dec adc mov adc in xor cmpsb jg in mov lahf pop jg das mov push jecxz dec jg cmp sbb sub adc push jg lods pop hlt aas (bad) rcrl add pop imul mov push vpsubw push ss int3 jo call je xchg mov jne sbb les dec jg popa (bad) sbb sub jno ds push js cmpsb es push lds ljmp aas xchg jge xor dec scas pop push ja push mov (bad) fucomi pop mov pusha sub xchg pop ds and repnz cmp or mov shrb mov mov jg test enter sbb sub pop cld inc xor hlt and cmp push out (bad) mov inc outsl push cs fstpl jno cmp popf (bad) xor cli cmp xor jg push pop xchg or popf inc jg outsb xchg in mov (bad) (bad) movsb cmp jmp mov lret fwait jg into test bound rol dec inc test icebp dec mov pop jg cmp mov add xor xor ja js lret aad scas add shrl into mov pop mov clc sarl push imul jg xlat imul sbb ror inc adc scas mov xchg cmp out push xchg jg add int js loope jg push je daa jg out idiv popf fidivr xchg jno pop mov (bad) out jg cmpsl pop sub pop aaa jg repz fcomps push or adc testl sub cmp xchg sub out or mov (bad) xchg push sbbl fwait jecxz jns pop sbb xchg bound mov dec and pop stos jmp js xor loope lods fnsave xor gs xor mov test jg xor pusha fsubs addb bnd (bad) xchg sar outsb and icebp call aas shrb lock sbb jbe or jg sub mov cmc repnz and jg mov xchg push sarl cwtl add push add jg (bad) leave push push (bad) stos push rcrb jge fistpl dec push dec inc nop pop fdiv pop inc or mov sbb ja inc jg mov clc cmpsb jg and push jg add push lods mov movsb dec jae dec inc push or pop xlat mov pop pop sub cld mov pop flds jle arpl lods mov test je mov inc mov loopne iret mov mov jecxz xlat popa pop imul int3 movsl ja mov scas inc mov jl imull call cmp push push sbb arpl push lret dec inc test into (bad) push sbb dec lcall mov mov pop popa sbb push out dec push jbe fidivl mov cwtl maskmovq idivl sahf add out lret psrld mov ds jg jb (bad) repz movb das jmp (bad) dec xchg sti (bad) jg dec in and mov int cmp adc add add stos inc in sub subl add bound cmp mov jecxz inc dec call iret insl and jg je jb add inc jg lock js insl aad pop sub jmp jg hlt mov mov outsl add adc stos mov jg mov inc decl outsl fdivrs insb jg add movsb lock dec scas in js mov icebp arpl mov push inc adc pusha cld jg xchg or pop int dec std mov inc ret add enter and cli pop adc jg test popa mov pop (bad) jg xchg cltd out out mov jg int jo cmpb and jg ja sub out cli aad dec adc sbb xor les rolb sbb mov xor jg mov cmc mov xchg adc add jg pushf ja dec mov mov sbb mov push jg (bad) dec cld mov mov insb jno or into loope pop or mov adc xchg cmp movsb jg std mov movsl jo jge mov xchg and cmp in popf sub add ljmp jns pop push pop stos mov jb jecxz pop popa pusha fdivl sbb frstor (bad) cmp outsl jo pushf jg fcomps stos (bad) dec inc jg xchg mov xor push mov cmp in arpl lds lods jg int3 outsb pop sbb pop aad (bad) jl fmuls jg pop test cmp out jg dec pop adc sbb insl ljmp pop (bad) inc jg adcl insl out jno jg lock inc push cld cmpsl aas sbb out push push in in stos jg add pop cmp adc sub jmp inc int3 popf test jg pusha pop fsubrl movsb pop inc jnp imul bound dec xchg mov imul (bad) add lret pop repz loope xor incb inc push popf jg mov stc dec and test dec xchg mov (bad) or clc in loop jg xchg fdivl jg sahf mov jnp xchg hlt cmp xor mov mov aad out ja cmp cmpb sbb add subl ds cmpsl sub lds cwtd push xchg out sub js test xor mov jg cmp arpl movsl jg adc pop and mov push ljmp (bad) mov pop leave pop sbb test into jg and jmp outsl std pushf jg jns insl push xchg inc sbb out es push jbe rep mov cmp mov add adc or cs adc jg (bad) insb or clc mov inc ss dec jge xlat ja nop jg aaa aas mov jg and lret cli push xorl push pop jg icebp repz pop dec mov orb adc mov ds jb in jg shrb sbb ljmp test jg pop (bad) aaa push bound xor insb pop dec out fdivrl mov js push jnp push mov sub add jg mov xor xchg shlb pushf mov loopne into cmp lods jg mov lcall scas lret or push push stos or sub xor sub pop jg (bad) lods outsb xlat lahf or push pop popf in sub (bad) imul sbb shl addr16 xchg cmp lods shr mov jl mov in daa push arpl dec xchg and jae pop jg int dec sub xor mov nop pop sub inc popf xlat daa cmp cmp pusha inc imul push aas lahf jle sub sbb mov inc jg mov ljmp pop aas insl pop xchg mov jo fnstsw fcoml xchg in repz add sti ss xchg adc xor fldcw pusha aad lea mov dec jo pop arpl fstpl push and (bad) out adc xchg jbe out pop dec (bad) repnz push cmp sbb mov ja sbb cmp mov stos pop pop shl add out ret aad cmc leave xor sub fidivl jl jne pushf xlat sti out int dec inc stos cmp fdivrs sub (bad) rorl inc testb fisub xlat (bad) into pop aas jg inc lret insb or jg xlat movsl inc cmp loopne mov ja fldl cmp jg add int3 lods jg sti xor loopne jne arpl sahf ds mov outsl int outsl push xor les cmp shrl (bad) mov lcall sub nop int3 das js sbb jle lahf and add mov lods pop xchg cwtl out es jmp jg mov or sub xlat cmp jg inc jmp scas sti push dec mov cmc mov fldt jg cld sbb scas jle jg adc mov inc inc jmp or add outsb dec jg lret fsub (bad) aas or ret ss divb add jecxz add icebp dec dec (bad) aas xchg pop dec lahf movsb push dec insl arpl outsl out and and push (bad) js cs dec mov mov xchg cld and dec imul and jg (bad) jb dec enter jg notl fwait lock mov jo dec popf mov outsl push xchg leave push aas imul nop lea dec mov (bad) dec inc jnp div fimul jmp in rolb pusha push pop mov (bad) icebp ret lods leave jg pop inc jge fucomip pop aas or cltd lcall loop outsb (bad) and push and mov xchg mov mov aaa dec sbb dec bnd xchg xchg xchg mov call inc pop ds in negl cmp dec lcall jg xchg jl stos adc ljmp addr16 loope mov (bad) nop icebp pop mov outsb mov insl jp cmp add mov or mov xchg inc mov in leave sti jmp jbe stos test pop pop aas loop out movsb bound inc in sub (bad) int arpl mov stc cwtl mov pop vmovdqa inc and cmc (bad) push ret jg flds jnp sub jg inc mov mov sub jg dec (bad) inc mov fisubrl js add aad dec xchg xlat and mov (bad) jg test outsb ret push mov inc push arpl stos jg daa int jb mov pop jbe add cmc cltd jg xchg pop pop outsl sub cli scas jg imul mov mov outsl adc rcrb mov xchg daa jbe mov cmp ja mov add cmp jnp jg in cmpsb bound mov test mov es negl stos cmp insb sub inc jl imul mov dec sub push jg xlat jmp enter ja hlt jo scas popa inc push jbe in jg sbb mov jg stc pushf pusha add jb,pn lds or add sarl xchg (bad) jg xchg lahf call jg mov (bad) es inc jg ja sbbb mov jmp inc adc stos push loope rcr ret and ds cmc not cwtl dec xor inc and (bad) jmp pusha pop mov es inc lret outsl and mov sub adc xchg (bad) xor and pop mov sarl aas sbbb xchg movsl mov insl test sti out mov push cwtl and add (bad) rcl sub prefetch mov cwtl lea repnz roll (bad) fmul jb shrl in jg adc sub jg (bad) push xor sbb aad daa inc rcrb pop adc jae dec jg jns push add in pusha xor outsl or stos inc sub aas rcrl ljmp inc jno jg mov push dec jg leave xchg popa sub or mov les stos lret sbb stos mov mov inc mov pop inc rclb movsb jg or adc stc repnz divl xlat and adcl aas and in or mov ja sbb cwtl and or fstpt out dec das cld roll sbb push in xor mov cmp neg xor cmp inc dec or lock ds mov xlat ja jg cmpsl idivl inc sar scas out xchg mov aaa dec orl test or mov add outsb mov cmpsl jecxz rcrl push push jg xlat jo jnp test jg dec gs xchg into sub push data16 mov mov adc sub adc je jo test push xchg insl push cltd mov aaa jb or adc movb bound aaa mov xor nop dec aad scas jg dec mov mov lods inc lods fdiv por jg movsl pop (bad) cmp das outsb pop mov lods pop jg (bad) xchg xor sub fldenv adc aam push mov push fwait adc out inc mov pop repnz dec imul clc pop jo push mov hlt add inc pop inc nop inc pusha jg popf int3 cli push (bad) xor rclb xor lahf cli pop shrl dec xchg lcall imul sbb jg jbe clc xor push lock cmp mov cld jg daa xor roll les mov int dec scas jno jg pop (bad) je jle (bad) xor insb jg sbb mov rorl fisubrl pop lods xor cli mov jg dec fistp cmp test push jl pushf ret cmp cmpsl dec outsl dec orb xchg mov subl das jg mov jp jbe mov and push mov xor mov jg push cltd sbb mov adc fwait xor jg sub ja pop add pushf leave mov iret push sarl cmp jno aas jg out lahf sbb jns clc aam bswap bound sub jg cmpsb mov adc inc pop (bad) mov dec (bad) std jg outsb add (bad) sub push mov insb mov js and cmpsb add subl mov inc mov add xchg lcall (bad) mov lahf repz mov sub bound push in (bad) repz fwait mov xchg scas ret jmp cmp cmpsb sub push jg je and or xchg iret jg cmp (bad) push clc mov mov orl je mov or pop sbb shrb fidivrl ss pop cmp dec xchg jns jg dec or mov rolb jg in mov jg xchg mov cmp jg xchg push and dec mov sub mov push sti xchg cmp sbb xchg xchg in inc mov pop xor insb divb adc orl mov fwait in fstps sbb stos loopne push inc in sub or pop xchg xchg enter sarl xchg and jg adc pusha scas outsl sahf ret aam inc ja cmc mov jmp jl lds mov push mov dec pop add xor jg ret popa cmp add jg mov outsl (bad) mov inc jg inc jo dec out in aas (bad) xor rorb jg cmp mov sbb scas rorl insl adc dec pop orl push (bad) loop cmp arpl (bad) xor sarb sub in or aam xchg test sarl ror pop test fnstcw out aaa and imul pop pop repnz adc push mov mov dec xchg dec jg aas (bad) push jns js stos outsl pop shlb dec jle (bad) aad cmp insb mov jg sub pop insl jg dec lods aaa mov not push mov icebp xchg adc lock pop leave les daa push jbe jg cmp sbb jg stc mov and pop sbb push pop pop clc jg lahf fs sub mov outsb addr16 adc addl stos xor sahf stos jg push (bad) jne (bad) fisub and pop hlt adc insl pop add jg inc je fcoml fwait sbb lret xor je pusha xchg jg cmp in repnz sti sub push push mov add dec stos dec (bad) out jg in popf into loopne sahf lods (bad) out pop call aad jbe jg jl adc repnz push xor int jg sahf push adc dec jg jle mov jg icebp iret inc les inc mov mov out repnz mov jg jecxz sbb inc mov xor cmpsl jg dec in into popf fidivr add cwtl adc cmp pop mov ja adc push add mov out mov xchg shr xchg pop pop inc xor int lret mov jg repnz and xchg or shll inc ja (bad) mov addr16 fnsave mov movsb add mov enter sbb loope push cld movsl mov in xor enter dec imul xchg mov cmc das jg cld into inc sarl aam test mov mov jg (bad) into push (bad) adc outsl jg (bad) adc inc in pop pop int cld jae lock mov loopne mov jg dec cld gs fdiv mov popf and pop inc daa fisttpll ss out js xor jg fs dec scas insl jmp out pop fdivrs cmp movsb push xor pop hlt xlat add xor loopne orps inc les jg aaa fs mov dec push (bad) dec pusha cwtl mov adc lret loope divb ljmp sbb fs pop jg add pop out outsl (bad) mull insb xor inc aaa xchg dec rolb jg lahf dec cmp outsl addr16 sti (bad) idivl imul and mov fstpt and push pop lock mov (bad) lcall mov inc iret adc mov mov (bad) push jg cld and fcmovu out (bad) rcrb mov jg mov xor xchg add movsb ja pushf jg data16 leave sub into jg or scas push jns adc pop popa inc ret addr16 ror jmp pop sbb dec sahf shrl mov pop jns pop or jno mov mov stc cli (bad) xchg fst jg scas mov out in aas jg add push cmpsb pop nop mov js sahf (bad) test call mov loopne jg test and lret xchg movsl sarl or push sub clc push mov dec outsl sub sahf adc out jae push push pop je xor xlat cmp jg xor xchg out sub push cld rcrb fist jg xchg out sub mov jg pusha repz pop cli jb lock mov pop pop stos mov mov lcall inc das aas push scas call dec sti or dec (bad) jmp fcomps scas or pop sbb xor mov jbe sahf or cmp and fimul pop inc fdivrs test mov cwtl xlat (bad) jae ja jl adc insl pop test inc cmpsl adc outsl cmp aam mov xor dec jg fdivrs cmp mov popf stc jg mov push push jg push or adc lret and aaa dec cli outsl xchg push jg aas add adc jns jg fdivl dec jg xor and jg cmp push jg pop rol mov insb inc mov pmaddwd gs jb push and mov pop loopne call dec lret fs jg cmp rcrl repnz add dec inc mov repz sbb scas cmp je mov xor clc loope inc repnz sub fucomip mov arpl mov cmp cld mov mov inc jg add mov push mov cmpsl fimull mov inc mov insb in pop test push add and jns sbb xchg aaa or mov negl or lods inc mov inc dec lea pop and sbbl fdivrs ss or xchg cwtl test inc std aaa mov xchg in daa mov jg fwait cmp lcall enter fimull imul (bad) lcall push shlb loopne scas sub lock mov aad mov aas vcvtss2sd adc jg sbb fs jp shl daa xlat pop adc int jg stos outsl inc xor aam jg (bad) cltd arpl push (bad) xor push xchg cmp xchg sub add or inc cmp sbb inc fwait test dec in (bad) xor loope xor add jne mov mov lea icebp aas cmp cmp inc jne inc sbb mov cmp mov add sbb sub (bad) fucomi mov popa stos inc daa aas pop int jne pop ja push mov mov repz or jg mov mov xor sbb pop xchg daa mov mov fstpt mov mov (bad) outsb sbb iret mov or nop cmpsl mov daa inc adc jg sbb cli pop jge dec (bad) mov adc out addr16 adc mov (bad) lcall mov stos les jb or sarb inc dec pushf sti fsubrs or cmp mov jg dec (bad) stc jl sub loop mov adc divb mov loope inc adcl clc dec sti ja sub add out repnz lods add lea jg stc dec (bad) (bad) stos daa jg push icebp jns xor mov bound jg inc test mov lret add fcom rcrl test dec jg pop sbb rolb jg inc lret stos add into leave fdivp inc ljmp dec jg mov lcall ja inc nop mov jg add lcall movsb shrb mov outsl pusha jg pushaw loope insl xchg inc aam sti mov mov js jno popf test sbb jb pop mov xor push lahf push jg test sub lods xchg lock push fmuls je cwtl es mov mov pop stos jg (bad) mov pop frstor push out mov (bad) leave pop addb repnz das cmp jg (bad) xor jle adc jg cmp mov jno in (bad) pop int jg push jle add xor rep jmp pop popa jg aam sbb jl mov imul arpl and js cmp mov mov xchg sbb mov adc push cmp add imul jo xor mov mov jae adc mov les aas add push cmpsb inc push cli jg xchg xor sub lcall out sub dec aaa imul aas mov cwtl pop jbe jl cmp xchg pcmpeqw xchg push test jg mul leave popf inc aaa adc movsl stos mov push push aas cmp jo sub mov pop add lock sti fstpt movq and into mov scas movb cld cmp or mov fdivrl in sti add out (bad) js out clc sahf sahf push mov hlt jg adc jmp jbe pop jg pop and adcb js mov dec mov jge mov js jno or lret cmp es inc sarb mov mov dec jmp cltd sub pop jnp jl add or insb xchg enter idivb lea (bad) repz xchg jne (bad) lar std scas push fild inc cmp add jg mov imul insl sarl jg (bad) push les fsub cmp jg pushf cmp xchg shll adcb int std andl aas fnstcw inc scas pop jne pop inc jecxz adc das andb movsl sbb push jg loope mov push push dec add jl mov inc push sbb cmpsl aas cmove (bad) fbld test pushf shll (bad) cltd jg and out jne loope adc dec jg imul cmp stos dec jge inc std lds es jg lret (bad) ljmpw pop jmp mov push int3 lds sbb mov mov xchg jg ret jecxz cmc xchg popa add mov sbbl mov outsl push adc js,pn jno imul dec lock ja cmp or cmp in addr16 inc aad sub and push cmc stos inc mov movsb aas aam push xor dec push aas ret je pushf mov jg fistl jg,pt inc xchg aad pop aam jno cmp or xchg ret jg mov sbb mov jae push test or je jmp sbb push loopne jg enter shrl sahf pop rolb mov xor ss std or jbe aaa mov scas inc fsub xor jmp and xchg mov xlat jb push mov call jmp adc enter aaa jg aam inc pop or xchg mov mov inc test aas dec inc cmp jp mov lcall mov fbld and jg adc jg es xor das stc jle xor lds enter mov es jg xchg sbb testl sbb push push pop pop jg or cwtl cli xchg sbb jp sbb dec mov jnp push xchg pop jg (bad) push cmpsl pop pop cmp push lods popa lds imul or into (bad) daa aas scas push mov pushl jg pop jecxz dec sub cmpl push ror push loope movsb cmpsl jmp popf jle gs fisubr (bad) jg cmp or mov adc fisubrl (bad) mov nop enter adc (bad) jg push xchg (bad) jg lock outsl push adc mov jae jg js dec scas and push pop inc cmc jg leave push mov jg aas push dec lahf mov sar (bad) loope stos inc lods je insb push int3 jg aas and pop repz sti add or xchg jg mov stos and ja dec int add lds ret jg cltd in fistl mov adc popf out jae aad pop inc lock jg daa mov mov sahf mov stos std aaa sub ja jg add and jg fneni(8087 clc sarb push test dec (bad) out stc repz pop pop jg in cmp xor add xchg adc incl pop mov aaa aad (bad) sbb je add loopne dec lods (bad) imul push lea ret push xor aas shr loope cmp loopne jg mov fimul aaa nop adc icebp push fstpt outsl or scas jnp jbe mov aam push mov out mov neg outsb enter ja cmpsl test cmpl addl mov (bad) jmp imul jae xor xor mov into dec and mov pop mov jg pop movb stc ret loop (bad) jno jb or ret xor fbstp (bad) mov and push adc (bad) jns jg ret addr16 dec jg pop sbb xor popf add ja jae jg cmp mov incb pop xchg arpl negl dec jmp aam pushf push fist out cmp jp inc mov xchg (bad) aas outsl mov scas cmp sub outsl iret fsub jp pusha jg inc test les fbld push aas ds jg pushf push xor out lret jle cmp add jle push insb pop adc xchg divb dec imul dec lds popa cmp call cmc add xchg inc or inc iret clc fnsave mov aam lea shufps popa ja inc insb push aas adc (bad) cmp inc addr16 das and jg iret dec dec cli pop xchg xor scas mov cmpsb mov inc stos cmpl (bad) mov cmp fucomi or or pop jg sub jl pushf mov jno xor scas or dec mov jg dec pop (bad) loopne mov (bad) dec flds bound (bad) jmp dec mov mov lret pop stc sub mov loop stos sub dec mov cmp or xchg aaa jne ds les orl jg arpl cmp je inc inc mov push jg jnp out out ret jno ss hlt pushf mull pop cmp sbb inc orb xchg mov push mov jns dec pusha ds arpl cmpsb push jb icebp or enter inc cmp xchg ds cmp repnz fisttpl cmp jg je jbe fsubs jg push leave fstpt les add mov rcrl jg xlat adc jbe lds rcl ljmp cmpb cmc sub pop xor and fistl pushf das jbe cmp cld xchg gs stos push jmp push pusha scas sahf aas inc repnz les inc call das jg ds and jg mov pop pop lret jg js mov or pop xor inc lods fstpt dec inc mov mov adc cwtl pop push shr xor dec test mov outsl and dec rol jg mov loope mov dec jl les test notl mov inc jg sub cmp mov cwtl pop push lods dec nop cmpl jns inc add inc hlt xchg dec divb jmp jns mov xchg jb sarl sbb jbe (bad) scas jg mov popf imul inc push ljmp pop cmpsl xchg gs loope jg faddl add cmp jg (bad) in mov mov (bad) arpl outsl lret sub jmp jg aad jecxz dec xor jle insl rcrl xchg pop cmp ds cmpsb push jo mov pop insl stos inc pop ss jge mov jns jg faddl mov push mov sbbl sbb pop enter call xor push xlat mov xchg adc jg and xor mov test adc inc (bad) (bad) pop jl jecxz sbb or cmc lods adc cmp or jg addr16 adc sub jg add pop vunpcklps xchg pop sub xor outsb mov dec sbb or in shll jg add add loop lods pop or pusha xor inc mov sti sti xchg mov ds jg cmp xorb je cmp fs dec scas adc mov xor aaa ds mov pop mov popa jg sbb sub jnp mov xor jno sub xlat dec fldt repnz insb dec les jg in fnstsw stos xor and outsl imul lods or dec xchg jae xor push cmp xor (bad) fidivrl pop repnz clc arpl mov insb push inc push cmp jg nop xor jg mov sub insb dec pop jg icebp pop ret add popa inc add outsl mov ror mov cwtl cmp jne jg pop inc sbb loop je adc fcmovnb test mov imul jg hlt push cmp sub idivb cmpsb inc dec ficom cmp inc das divl popa into test (bad) mov mov add adc test call xor add in mov enter pop arpl scas fidiv ss or and push (bad) and rorl and lcall mov enter mov add aas push fcomp pop cmp jg mov fsubl popa out mov addr16 out leave ret add fs js push (bad) aas jne xchg cmp insb jl scas dec shll cmpl jg loope add aam jg sti cmp add loopne cmp jns add jg popa pop aam or int aas push jg and fs lcall jg out out sbb jg sub jge xchg push adc xor dec inc mov inc pop cs divl sti add rdpmc shll lea cld pop jg sub imul lcall jge add repz jg int3 (bad) xor or inc std ret mov scas jmp addr16 pop pop movsb ret xchg mov aaa jnp lret push scas jg pusha pop jl jle,pn jg js cmp and xchg jb cmp pop jns mov (bad) xor push dec popa hlt outsl pop mov mov jg mov les jg pop std popf pop ljmp adc xor xchg jae xor out pop or push mov (bad) std mov mov (bad) mov stc hlt mov or mov popf push repz lods mov frstor push mov divl lea clc mov xor jg test sahf mov mov add icebp adc xor xor std scas (bad) mov (bad) lcall cmpb pop cmp lods in jg pop and jl mov jg push xchg sub jle,pt repz pop or jg jmp inc mov adcl xor inc sahf out cmp imul inc add push fs lahf jle pop lret int or mov mov (bad) lock sub (bad) dec sbb idivb nop insl bound ret scas inc mov jno hlt inc push (bad) ja lcall arpl and jp dec push add enter (bad) jg add inc mov fisttpl out mov sahf popa aas in add ds adc mov sti push xchg out jb clc xor into jg lcall (bad) cltd out (bad) and inc lea jg ret or neg mov lahf mov sbb inc jl mov sub jle jg mov jmp addr16 aas rclb adc (bad) call out (bad) cld or pop imul xor and xor push fnop jle daa dec scas movsl jg outsb or pop popa pop (bad) mov and jl shr mov xor mov jns ret push js mov clc xchg test jle pop jmp cld cmpsb in cmp mov inc insl mov test pop addr16 jae outsl mov scas bnd pop test cltd (bad) mov pushf inc mov (bad) jmp pop lds push ret xchg or scas or jg adc (bad) lea jg jp outsl jle cmp imul sbb jg mov divl push mov push inc pop sbb jg mov popf xchg outsb jp jno fs xor icebp sbb fnstcw xor popa out in jg imul jg scas les lahf sub jg rclb pop in es jg ljmp jg mov xlat jg cmp cli aad push adc es ret in dec inc mov mov add cmc jg mov imul adc inc mov or sbb xchg jg sahf bnd push pusha push jg dec add loop dec xor dec into sbb sbb (bad) lahf xor in jg ja nop dec and add dec push sbb jg (bad) fdivrp mov lods or lcall jg push inc in mov xchg pushf jg pmaxsw rcrl adc mov add mov mov mov in call out push cwtl pop out pop cmpsl mov cmp scas jg leave cmp mov add repz js jg mov enter ja (bad) out add mov test mov inc inc and inc fbstp (bad) push int3 into xlat add mov inc lea jg jp (bad) icebp aam scas jg push or adc and push pop lret (bad) js je fnstcw aas or or leave daa dec cmp jg jns push movsl xchg (bad) test bound into sbb push jns aad jg mov and xchg pop jg (bad) and imul shrl mov out arpl push push sti movsb cmp xorl sub xchg xor mov nop pop inc jbe cmp (bad) pmuludq testl sub inc push mov stos (bad) sbb xchg (bad) cld fnstsw loope sti shrb jg jbe,pt mov lret fiaddl pop sarb cld arpl or mov adcb or out fnstsw dec in and jp scas mov jne ficom (bad) xor mov popa xor xchg jg mov nop mov bound (bad) push mov les add out jg dec out (bad) cmp push jnp mov lods sbb jg dec push (bad) cmp xchg in rol (bad) mov dec cmp out sarl jbe sub fdivl cmpsb cmp jg inc push (bad) (bad) cltd push push mov adc fdivrs inc xlat mov divb fidivr (bad) sahf mov mov repz push loope ds cmp cld in mov lods sbb jg sub movsl imull inc lahf jae (bad) dec dec and xor stos mov je popf jle ret sti sbb jns jg fnsave push rorb repz push pushf test jg imul jg dec cmp jb mov mov mov add inc sbb test pop or test aas xchg add push loopne cmp out repz jg stos jbe in ficom lret ret mov test aam cmc xchg scas jg xchg add lahf lods addr16 xor mov (bad) mov jg mov and mov popf push mov cwtl divl cmp add add sbb movsl dec (bad) jecxz mov dec lret int3 outsb cmpsb outsl cmp bound lahf push jg pop sbb movsl jg popa dec jecxz rorl xor pop nop cmp (bad) xor arpl mov popaw xchg pop (bad) dec cmpsl jle mov in mov adcl mov aas push xor out sti ret mov jg jo cmc orb mov jg adc adc xor mov in sti ss scas (bad) in push xchg mov inc add movsb or and or add jg and jne out in scas out pop xlat fldt pop xchg in jg push nop je in xchg sub out lcall daa inc cwtl pop add jecxz movsl scas in dec cmp mov jg push sti xchg add adc out sti cld push cmovnp jmp enter sarb icebp mov sti repnz pop js cmp and xor mov cmp mov aas lcall stc ret repnz xlat jg (bad) lods sbb jg lds jbe mov iret ds or xor aas (bad) mov xor pop or jg cs fdivrs imul dec ret jns mov jge xchg lret mov push mov xchg imul sti pop inc shlb or mov test outsb cmp in dec cmp jge pop int3 out push (bad) cli test xorl fistpll int3 xor cld loope mov dec xor push leave jg xor pop in or push cmp pop inc repz aas rorb popf mov loopne jmp or aaa jo push jg icebp mov xchg jg sbb enter jge adc jno fwait (bad) fsubrl imul jg movsb lods (bad) mov sbb push jge sub mov cmpsb jg mov jg daa jge cmpsl je inc cli cmp pop dec dec lret push ss cwtl (bad) xlat scas lods adc (bad) sub mov add push in aaa pop and inc and and pop jl in imul jg frstor jp,pn jg mov insb int jo jg xor hlt out aaa jl add iret out (bad) inc ja xchg adc loopne jg pop jle,pn std pushf xor adc mov in jg stc xchg xor jge sbb out dec sub nop jg (bad) sbb inc cli rorb inc xor iret shrb addr16 mov mov dec xchg add icebp or adc mov jg push pop add in xchg int3 mov adc fcomp jg mov fs lds mov pop mov push int3 in pop jg or roll inc outsb je int3 into sub adc jecxz ljmp xor xchg ds mov fistpll leave jmp (bad) jg out aas in loopne (bad) jg dec testl jg dec pop xor sbb shrl cld mov loop jg cmp cltd adc and das lock sbb cmp lods and jbe jle std jg lea ja mov push or adc mov pop hlt pop insl jg aas cmp cmp enter aam leave aas das mov into inc pop pop roll fwait (bad) add inc popa jg xchg jns mov add bound sub pushf arpl aaa jg inc xchg push sti xor sub mov mov fdivl xor xchg dec (bad) lds aas sbb dec cmpsb out subl lods arpl lahf movq insl sub xor dec mov mov fnstenv or jg out sbb fiaddl push jg aad in stc imul jp cmp lods inc push lds fisubl pop cmp push inc mov test outsb sti imul and xchg lahf inc inc jg jb stos out dec push jg fs add data16 xchg dec adc neg testl enter sub or imul sbb inc pop sub (bad) sub xor cmp jg (bad) lock lods jg clc (bad) sub inc test mov or fcomps and popa xchg jg test pop jge add fnsave cli push popa cmp dec push testb push dec insb test icebp jg sbb pop cmp adc pop arpl scas mov adc stos sti in cmp gs (bad) ja xor inc mov bt das lahf cld dec jb jg xlat adc mov test mov loopne imul outsl ss cmp sbb addb adc pop jnp or jg clc mov xor jg jns icebp xor sti jne out push les adc push jg mov stos test dec aas dec rorb jg mov jmp dec jmp jl inc push rcr out pop adc push cmc int3 push mov je arpl pop hlt jg rcrl mov cmp dec mov icebp clc shl xor jno stos adc subb in xchg push inc aas sbb call xor add jg repz fnstsw fistl add pop mov pop jg enter add lds push sbb mov lahf les cmpsb sub mov jmp hlt mov rcll cmp mov pop imul pusha xor push movsl dec inc cmp mov sbb pop cmpsl cs jo mov in push xor loope push mov (bad) (bad) mov int mov icebp jg call and and xchg mov (bad) lods jno das push pop loop jg fildl in repz icebp cmpl jp aas shlb addr16 xchg sub jg xor pushf aaa jg loope sub das jg je out movsl dec cmp pop inc sub mov mov jg lods loop push push leave dec call jg cmp jbe xor jg or add push xorl fmull jg dec out adc cltd pop inc xor jg sub rcll aad idivb and jmp sub jae pop loop push gs rep jp sub mov pusha std mov mov jp add popf jg lea call mov test pop mov and xor dec pusha cmpl subb jbe js shr aas inc rorb jg dec cmp sub movsb jb push push mov add loope or lretw jg enter mov (bad) fwait daa lahf in sbbl fstl dec jg sbb inc fsubp (bad) mov movsl mov add xlat push mov pop (bad) fidiv cmpl jg cmp xlat shr xchg mov outsl xor cmp lock lods sbb aaa rclb inc (bad) rorb fnstenv xor fnstsw sarl jg cmc pushf and outsb subl cmp lods pop dec loopne mov pop xor fbstp xchg mov add jecxz sbbl inc jg cmc cmp pop mov jg mov insl mov pop jg mov in sbb loop popa dec dec jl add mov out les out leave adc scas and jg inc in jnp (bad) dec jg push push mov fisubrl jg push mov jns add in pop insb xchg iret jg mov jge lods add add aas popa fsub lahf aam xchg lea pop and jg push roll dec mov loopne lea les add adc stos mov add mov enter aaa mov pop dec aas ds cmp inc add mov out es jp push or jg sbb push jg xor xchg jmp mov jb rcrl cmp repnz xchg pop lock iret pop jmp mov je push jno loope push outsb jbe pop pusha add in jae (bad) jg jae and js sub cwtl inc mov jno mov incb jg jnp adc test jg xor fldcw jg fildl pop sub sarl popa jmp xor aad jg sub jne fs add cmc fildl (bad) hlt mov outsl cmp js xorb enter xor in fsubrp stos gs pop sub mov jecxz inc push or lcall int3 pop mov stos mov adc sbb cmp repz sarl push push movsb repz jg movsl mov inc ljmp xchg xchg arpl rcll idivb adcl nop or popa cmp pop xor push jae scas cmp pop inc insb cmpsb fwait loopne xchg insb test jg aad sub (bad) dec (bad) lock jle dec insl mov push sahf icebp loopne scas addr16 mov cs shrb mov jns dec stos (bad) xor loopne cmp out (bad) sbb andb xchg les push or push mov mov (bad) shrb sarb loope inc xchg clc adc ds add push das sbb data16 into gs mov jge jg fcmovu cmpsb adc in mov inc or bound das repz sbb inc fnstenv fstpt cmpsb sub addr16 imul mov nop outsl dec inc jbe arpl mov cmp arpl aas and iret dec add cwtl jg dec int3 dec loope or jg xchg or mov cmpsb mov jg xchg loop xor inc inc jg fwait mov xchg mov inc push (bad) iret pop mov dec jns mov sahf xor outsb loop aas cltd jg leave pop fimul nop xlat pop aad ja (bad) into pop cmp scas mov fsub jg or inc outsb ret in jp pop jg ljmp jg loopne leave ret outsl inc xchg (bad) mov dec push test xor mov dec xchg add enter fbld sbb out insb xor dec jg or ss (bad) movsb js adc mov pop bnd sbb shrl rcl xor lds outsl mov ret push mov in jg dec inc or cmpsb das cmp jae jg sub sbb lock jg add pusha push push lock aaa roll lret xor inc loope subl mov mov and (bad) cmp int movsb jg mov divl (bad) jg push sub into stos mov adc stc fsubl es orl jb (bad) jge mov pop stc outsb movsb mov sub icebp stos mov push push fs adc jae repz lods mov leave mov jg dec jecxz inc sbb mov mov ds test mov cmpb jl push pop addr16 pushf push pusha repz mov lcall and addr16 sarl scas ret push jle mov jecxz push jbe pop sti lea pop cmpsb andl jg out inc push aas inc std jg xor pop lcall cmpb jecxz loope push mov xor and push ljmp jmp jg push bound sub pop leave adc dec jg add rcrb jecxz cmp js loop inc bound xor mov dec pop hlt inc mov and ds cs cmp dec sti fimull inc les (bad) jg ret aaa movsl out fildll jl mov ret xchg jnp pop hlt or xchg jg inc sbb or arpl cmp fidivr sbbb jg push cmp push aad pusha pop dec jp jo (bad) jg std xchg push repnz jb jg mov jne js jmp lods or dec int sbb aas cmp push push mov (bad) jg (bad) xor fwait cmp popf jecxz test dec pop sub popa xchg mov dec push in jg mov xchg test jg push scas lcall xor inc ret push fwait dec cs imul fistl push sti jg xchg pop ds sub pop roll mov into mov and jg test fwait ja jns lea mov mov (bad) mov push sbb aad cmpsb pusha mov ss push enter mov inc dec or mov add movsl pop cmp dec scas mov les inc cmpsl add ja mov sbb push push jg outsb stos bsr pop jg in mov lret mov shlb add fistpll push sbb cmpsb push in push mov std addr16 insb cs mov repnz cmp aam mov inc lock mov dec jg pusha mov sub adc sub fsubl js push cmp arpl inc jg aam xchg or add jno sub jae jne dec mov cmp jg sub xchg jg and mov xor testb adc je das mov iret (bad) xor pop repz jbe xchg ljmp mov in dec jg or pop jnp adc mov fiaddl imull aam jle jb push ret sahf jo pop jnp stos jg sub sahf data16 jecxz push out jle mov push adc pop aas sti xchg sub cltd arpl jecxz (bad) lcall and aaa mov xorl ret xor jg (bad) sbb add test cmc fs lods push ficompl in out add cmp push stos and (bad) out mov jg pop inc fstenv jg mov iret xchg xlat in mov pop int3 push mov push cmp repz aam mov push or mov push loop (bad) fnstenv jg shrb bound fldl pop jnp lock sti xchg cmp cmc jbe js lret leave in cmp dec mov les icebp fs jg cmp xor loop inc inc jg imul adc (bad) std jo insl (bad) pop pushf dec leave jg loop push cmp mov inc lods adc pushf jg push jb xchg movsl inc mov bound pop imul pushf iret mov enter sbb jg adc mov jg lock inc andl ss xor jg inc adc mov lret popf fsubrp daa es xor push mov cmc and dec xchg mov lret push cltd inc mov addr16 inc jg fbld (bad) mov jns jge mov out inc jg adc stos inc scas fwait sarl sub inc out jg pushf push movsl (bad) mov push jbe add jl rorl dec stos outsl arpl lods jg sub jbe das mov mov ret xchg pop jp ss jg jl adc push mov sti mov subl jg or clc movsl jne xchg mov das mov jle in leave loop lea mov stos xchg shrb or clc mov jno in sub inc mov jg testl jbe jnp dec jg (bad) loop cltd (bad) in jg mov jg sbb adc pop mov fbstp sub sbb sahf push mov jg fs add imull mov adc xor mov sub mov adc fwait aam jg test stos inc (bad) js pop out push dec fmulp iret out xor mov pop pop sbb clc jg cld cmp xchg insl (bad) aas add scas fdivl aam inc es jg (bad) push std cmp inc out jg stc dec adc out jg dec mov loope arpl jns mov fsubr mov and rclb xor jg cmpsb xorl push jg jecxz or pop cmpsl jg js xchg clc subl xor cmp mulb incl in sub mov or pop jg gs out jo movsb and or ss push repz pop mov inc rorb aas mov (bad) aas sub addr16 inc or add mov push add leave jg mov test adc sarl cmp sar xor jg es int lret and cmp mov adc gs lea mov or inc mov mov mov mov lds fidivrl xor jg push pop popf cltd pop aas cmpsb jg mov repz aad xchg or jge mov mov push jae into push mov es mov in jg arpl jg add mov mov lret dec dec add pop mov sub aas xchg repz sbb pop fldcw fidivrl outsl addr16 ret (bad) or leave pusha sar mov lock data16 loop sbbl aaa out aad sbb jmp jg hlt push cmp daa popf mov ljmp dec subb fist mov scas jmp bound mov je ja nop repnz loopne jg stos push (bad) sbb (bad) loopne sub jl fmull push arpl mov icebp mov (bad) push dec mov es jg xchg ss jno out mov (bad) (bad) xor or out mov outsl xchg stos and outsb sbb dec shll push cmp xor add mov cld cmpsb jg out xor leave mov mov dec jno lret xchg movsb popa jg int3 xchg pop xor cmp icebp das fdivr push push cs xchg stos push push add clc imul jg dec mov mov add (bad) (bad) mov andnps and jg dec jecxz or mov inc test scas loope lds and adc mov jle cmpsb jle pop pop push dec bound sbb (bad) mov pop mov dec bound test hlt push fmull lods (bad) into lds lock pop and (bad) test push mul rcrb dec test jno (bad) scas pop outsl ret xorb popa imul (bad) ja push mov lds mov out aas jns add sub cmovl jg (bad) jne fild daa inc pop mov imul sub cmp push pushf jg aas xchg fwait cld lods sub fsubrl addr16 mov in jae xchg aas vpsraw gs add xchg sub lods pop movb xchg inc cmp jg push hlt aaa lods insl idivb (bad) (bad) mov jle mov jae sarb sbb pop mov pop ss adc outsb fidivl ret pusha add pop jno repnz stos popf lods and in sti mov aas sub nop mov movsl cmp cmp arpl adc sub in jl jg insb rorb jns cmpl jg ret jg outsl lds jg das leave sub notl mov out push adc push mov mov inc sahf jp mov add dec dec stos rcrl insl insb sub sub push push repz add add mov pop daa sbb gs enter xor mov cs lods adc pusha pop into ja push test inc jg mov iret dec adc or jg push mov push mov aad or pop dec lret xor jg and aas xchg (bad) xlat outsl mov push inc jbe mov push xchg inc mov sub (bad) movsb jg cmp gs cmpsb jg cmp cmp push mov bound adc stos xchg (bad) lock hlt mov test and (bad) in sbb jmp inc (bad) stc mov orb jno and push jp xchg mov add or jg addr16 stc xchg mov cli jle sbb mov divl dec sbb xor cmp stos jg aad pop daa mov out bound push adc mov jno lcall cmpb lret xor dec (bad) addr16 std cwtl aaa dec ljmp push cmpsb int xor mov add (bad) negl pop mov sbb imul popf jg out fmul pop out pop (bad) nop outsl dec adc jne mov (bad) push adc or xchg xchg bound inc fnstenv xor movsl xlat push xchg out sbbl or add lcall arpl int3 cmp in cltd pop xor gs xchg cmp imul test push push aas dec nop xchg jns pop sub xor jmp sub aas mov repz popa jg call jae xor pop pop roll jg call adc outsl les (bad) jp loope lods pop scas inc pop jmp loopne mov inc mov pop push jg xor sbb xor repnz jecxz mov (bad) (bad) mov roll jg pop lahf mov insl sbb sub repnz inc mov (bad) daa mov cwtl test mov (bad) push cmp sub fwait mov icebp sub daa and (bad) add insb dec cmp mov push (bad) js pusha pop jg dec jge mov lds jg inc and stos xchg xchg mov cmpsb push and fcoml xchg jbe scas xchg loop cmp or jg (bad) hlt or aaa shr push jg inc iret adc (bad) std icebp push cmp pushf data16 xlat fdivs test mov insb imull (bad) cld inc jno arpl or or jg les mov (bad) ss push pop sbbb test jp imulb inc fisubr or add mov pop pop (bad) mul jecxz dec sti push outsb xchg inc and mov into mov pop cmp fistpll jnp mull mov xchg jg xor add inc jmp adc gs sbbb or mov inc addr16 out jg pop leave push cmc dec push jl ljmp in jg adc test mov (bad) mov ret movsb aam jg adc fwait jg inc (bad) stos out mov ljmp insl jnp popf stos pop dec inc mov hlt mov jmp (bad) sbb add (bad) or shrl (bad) pop out call sti mov lcall into popf jmp xor cmp fstps inc dec test andl (bad) dec clc inc imul add dec out rcll push in in les pushf fmuls mov pop enter cwtl mov test dec push ret ja repz cmp jecxz cmp cltd cmpsl and aas sbb aas arpl mov inc lock fwait dec notl sub stc dec jg pop inc pop jmp xor mov adc push insb (bad) jg cmpl inc sahf jg (bad) out jb pop sbb mov or mov inc inc sar lret leave (bad) pop ja ljmp sti xor cmc jg dec jbe aad mul jg xor (bad) mov or jg out mov jl cwtl and inc aaa aad sub jg das mov loopne shll mov pop lret mov mov mov insb push inc lret jg es add (bad) sti mov jecxz dec or loope mov fistp loopne push jecxz jg pop lea (bad) xchg jg fstpl inc dec imul sahf mov inc sarl inc insb test scas jmp cld imul jg or inc repz int pop mov pop sub mov sbb xchg rorb add jg movsl jmp sub xor ja cmp jg shrb push in xor faddl imul mov fwait xchg enter pop lds bound arpl call lcall insl pop (bad) test shr pop sbb jp repnz sub jg sub int3 add in jg out sbb les mov mov mov mov (bad) aaa movsl jbe add insb jg (bad) xchg mov or dec clc jmp jg cld adc ret jle sbb cmpb out clc push lret sbb mov or xchg js loop mov mov dec jg in aas inc jb inc xchg inc cmpsl mov ja sahf inc add mov aas (bad) jl jbe sahf int std inc imul int3 fs mov sbb das jns xchg or mov dec inc push out addr16 jl iret xchg push fnop xchg pop outsb jg in add (bad) mov mov jmp (bad) cmc push jecxz jns jno lret fidivrl gs or ss dec dec cmpl jg into pop in xlat mov inc ds xchg arpl sub add xchg aam mov pop dec mov test adc jno cmp (bad) lds mov movsb inc outsb std add or xor sbb inc frstor sahf inc xchg std fwait add fdivl jg addr16 mulb push in les push inc xor ss sti mov lods faddl leave rcr or das mov xchg ret test (bad) fidivrl leave insb std xor push sub data16 subl jg mov xchg das icebp dec fdivrl (bad) xor xlat fnop jg sub cmpsb daa div clc jg (bad) jb sub and je adc lds fnstcw jns fcomps cltd adc xlat or cmp aas dec dec push arpl pop jg inc (bad) jle insb push xchg jg int3 loopne and xor lods rcll stc mov mov scas adc das xchg jg pop mov fldcw movsb stos fist cmpb inc insl jg cmp scas inc jg into xchg jbe sbb jg xchg xor pop sbb (bad) fs insb sub or push mov into add xor sbb cmp pusha cmpsl scas ret push pop cwtl in in (bad) dec mov mov dec outsb cmpl xchg scas and jg fucom xor cld xchg adc ret push pop ss jo mov mov inc adc inc jg mov js aas lods cmpsb (bad) xchg pop mov addr16 inc mov ret mov test and dec dec (bad) mov push push add cmc (bad) out jg mov dec pushf jg stos dec inc xchg icebp push lahf jg jbe and mov sub cmpl repnz adc mov jge (bad) adc mov jg in (bad) adc or mov xor pop aam cmp cli mov or fistpl sub xchg jg dec dec lcall adc mov cmpsl and pop outsb imul and sti dec add inc unpcklps repz xor mov and nop addr16 jns fldcw push icebp fldl xchg jg xchg dec ret lds jg mov xor fdivrs jg cmp pop (bad) mov call jg (bad) xchg aas mov insl mov gs in push aam or mov push mov inc mov add mov jg insl sub mov push test lret das mov dec mov ljmp aas mov test enter out jg mov (bad) aad push sub ljmp push pop or sti jg cmpsb cmp icebp js imul mov jg jns mov jg mov stos push xchg inc jg loope add fisttp adc add cmp mov pop cmc jg mov dec mov pop or mov or jbe dec in out jg cltd ss mov sarb insb inc add push mov jbe leave dec inc pop jg and sbb fistpl je xor inc bound (bad) int3 jg dec cmp mov out jg dec push js ficom xor stos cltd adc inc mov lahf in add daa jno mov inc cmp hlt and leave jg adc dec adc inc aas xor cmpsb mov das (bad) sti cwtl out dec hlt scas and pop jg or (bad) aas stc rcr mov mov mov mov shrb fisttpll mov ljmp mov jg inc dec dec mov in out (bad) jb (bad) int xchg outsl push adc mov mov add dec shll jg pop out xlat push xor jae subl and pop nop (bad) test testb in jg cmpsl inc lret leave stc jg inc mov add test je adc add lea out nop scas sbb jg fiadd add mov mov cld or add jecxz,pn and lcall jns out dec add outsb dec pop xchg gs mov xor jg mov clc pop lret jg out addr16 cmp mov fwait or sub dec xor jg or mov fldenv inc rolb pop jg test mov lds lahf mov or pop mov and outsl fstpl xchg imul sub in sahf xor xchg xchg mov jl xor push inc lahf into jg fadds push xchg insl cmpsl xchg aas (bad) dec (bad) lea add mov dec out jg out push addr16 test hlt and add cmp adc in movsb push dec add adc mov cmp (bad) push dec push push jecxz mov mov movsl fiaddl test cmpsb sbb cmp mov shrl mov mov mov inc pop rorl xchg in jg test inc (bad) mov (bad) testb push inc mov arpl jge mov jg and inc add xor adc insl cmpsb mov xor test popa sbb fldl enter mov lock mov jnp or aaa jg addr16 cmpsl mov pop jg movsb (bad) repz lret outsl pop pop fdivrs sti mov jo push xlat movsb dec das pop sbb push mov idivl xor add xchg mulb mov outsl mov insl rorl xchg arpl test jecxz js cmp and cmpsl (bad) dec and cmp stc icebp dec jl dec xchg mov add gs insb push inc mov jae pusha (bad) dec push mov inc in mov push test push adc pop mov inc xor jg imul mov pop xor movsl jne aad mov adc pop sbb pop stc cmp ljmp mov out jg push stos add int lcall loopne jg and aas and mov jle cld add (bad) push jg cmp std push and rcrb ljmp adc iret jae jb add push cmp ljmp pop into in addr16 popf stos sbb test mov (bad) sarl lock cmc repnz pop (bad) push sbb pop les inc in notb dec sub aad out sbb dec hlt repnz lds xor subl dec dec mov jg add or inc gs mov sub addr16 jl insb adc ret movzwl arpl inc xchg daa or lods sub mov cmp jae mov xchg pop cmp add inc dec dec sub int3 movsb xor mov jg jp push movsl push add jg fistl fs mov test xor fdivrl push data16 adc mov fnsave outsl sbb incl xchg mov and ret cli jg adc lods mov call (bad) addr16 sbb stos test pop add popa and add faddl xchg fistp push xor mov dec out mov out push out (bad) sbb mov push dec add daa cmp jl sti mov lock (bad) or adc push mov cmpsl or cmp notb push mov jnp loopne add ret rclb xchg adc ja les push cli je ja aas lcall jg push dec jl pop jle inc popf jg mov fidivrl mov lds jne jg stos xor jg or dec jg cmc add sbb stc mov das in outsl or and rcll xlat push je inc out loop rorl sbb jg test mov mov fsts mov sti stos xchg sub push fstpl test push cwtl nop push pop inc movsl inc sbb outsb ret push inc lods xor dec hlt mov mov cmp push jg add add mov cmp sub jg mov mov mov dec adc lret enter lock pushf test in pop lds (bad) mov lds fiaddl jle fcmovnu mov loope or mov lea jo popa aas testb inc in mov int dec pop xor inc stos aas pop fsubrs inc cld mov push and lcall bound or cmp divps push jg test out (bad) in stos inc jg xchg sahf dec std aam ret jg add cmpsb jg or xor sbb pop xchg out mov jg imul dec dec iret in xchg sbb (bad) jg pop mov push jg sbb sub mov push cld mov dec jg and outsl rorl test repz bound add sbb std call les push out sub aas lret pop cwtl es jnp push inc cmpsl decl adc jg fs dec sbb clc jl cltd popl xchg cli ret and fmuls add cwtl movsb mov cmp jns jge jmp lods xchg xchg inc scas pop cmp lret out xor into (bad) loop sarl fldt ret pop jg aam dec jno (bad) leave sti sbb rcrb mov stc loopne sbb jg xor out jge out jg push add sbb int jg ret jns pop mov jg roll mov leave jae mov or pop jl fsubl xchg sub inc incl int sub das pop nop pop xchg jg out inc faddl into icebp cmp jg push repnz mov sub (bad) leave popf mov sbb mov insl cmpsl xchg je cmp jg dec scas jae push jg fstl jg cwtl mov mov inc int insb movsl orb mov ss lahf aas xor mov js test cmpsb jg cli cld dec loopne adc mov sub mov out inc enter or loopne jno mov mov inc cwtl jg adc and addl pop dec ret inc add (bad) lock nop jp shl dec aaa lods mov or sbb out jg adc xor xchg dec shrl lret dec dec ss mov idiv div pop cmpsl stos ret xor pop adc and popl xchg loop lahf pop sti jge jg cmpsl jmp jmp les jg and add jg loop and imul jg insl dec mov and hlt dec iret pop push mov add lcall mov clc sahf (bad) dec aas add sbb ljmp insl scas mov push and jg cmp jmp into mov cmpsl lds sbb add dec aad xchg pop int3 jg cltd ljmp enter add inc mov cld cmp bnd cs xor aaa imul shr jg jo xchg lods inc sub data16 divl jg,pt repnz ret int3 lret clc push mov stos mov imul jg,pn fist jnp mov jg std imulb jg add mov sbb cmc add idivl loop leave loopne jg jns mov sti outsl sub nop pop mov jg stos or and add in fldcw clc adc cmpsb mov pop out jg pop fdivs push adc jg cli mov out icebp cwtl jne xchg mov das inc and stc sbb push mov inc cmovg (bad) loop jg sahf xchg in inc arpl sbb jne aaa inc inc jg inc cli cmp iret xchg xchg lea mov sub xchg jg test mov jg lock push mov pop xchg adc sub cmp jg push pop aad dec rcrl inc jg movsb sbb pop push lods mov cmp push scas nop out xor jo out xor pop jecxz fstl mov sbb jg mov sahf sarl pop inc stc sub ret jecxz pop jns mov and sbb jo mov mov rcll xor pusha pop sarl (bad) int3 scas push cmp jg adc cmp push jmp (bad) sarl scas daa sahf pop lea in scas add mov imul ja mov test pushf aad or ljmp xchg lea mov aam jecxz mov outsl dec xchg cmp (bad) jg sub pop jp in jg out fnstsw ret and xorl cmp shll andb dec aas inc nop add call dec dec sarb std cmpsb fwait dec push push jg xchg cmp adc lret mov negb push jp jg xchg mov cmp hlt sti (bad) setne xor dec (bad) ds (bad) jg or (bad) fild cmp outsb mov pop hlt aas test xchg cmp lret pop out add or bound push das data16 inc jne arpl mov aaa dec pop cmp clc mov cmp stos fwait push jg mov movsl (bad) bound inc add xor das jg (bad) xor movsl cmc mov xor daa pop inc mov push lds mov and mov (bad) sub hlt (bad) jg adc add cmp nop sbb adc xchg cmp outsl push cwtl fs mov xor jg and cli jle fsubr ja pop push jmp out shr inc cmp imul pop mov fstpt jb sbb mov popf xlat loopne mov pop sub jnp inc adc pop les sbb jno lahf cmp arpl lds test into sbb and and mov bound cmp andb lock pop push push sahf add jmp sti les orl test cwtl sbb jne mov sti leave popf rcrb fldcw jg lods xor (bad) clc cmp jg sbb shrb push adc je xor adc stc add pop jg pop sub cmp (bad) ljmp xchg mov (bad) jnp lock xchg ds and call roll lret jg jne xchg stos mov xchg jg das mov xchg (bad) ffree stos mov lock cmp mov (bad) jmp adc sbb fildl aas aas or ja (bad) (bad) and mov pop test dec lahf in jg sbb adc adc add test dec pusha ss das xlat mov (bad) js inc mov mov mov outsl xchg (bad) push inc adc (bad) cmpsb pop or inc and inc (bad) jg xor ret dec pop sti mov adc std dec and icebp imul lea mov xor addr16 int dec dec jg out or mov xchg inc push clc jecxz push mov imul or jg ja jecxz or pop xchg movsl jo sbbl xchg cmpsb jg jne fnstenv frstor aas inc xchg sub ljmp xorb mov aaa cmp push inc push jbe ret rcr mov jg out mov sbb xor and pop scas mov jg out and inc jg (bad) aad test add xchg mov outsb jge ret inc repnz dec divl mov push stos inc jae jg leave je or pop sarl hlt es test fdivrl aad dec cld mov pop mov jg and pop adc mov orl scas jg push adc xchg mov jg outsb sub inc pop (bad) cmp (bad) mov pop out shr sahf cmp jmp push adc dec aas insb adc inc cmp repnz pop push daa jno roll mov mov jne repz dec pop xchg dec les pop add jb insl mov add add mov fs and push dec jg mov push mov pop jg adc call stos pop bound leave jg jno iret mov int3 mov inc jg xor inc outsb out mov push push insl loopne jg mov int3 (bad) sub mov lret fcoml daa cmp (bad) iret test aad or fildll les shrl cmp cmp mov cltd jle je jp jg xchg ja jl jg dec stos jne (bad) ficom dec or mov xor pop movsl jge iret testb imul mov xor xor in mov inc pop jne cmp leave sbb pusha inc inc test pop das jg or add or sbbl dec xchg into fs mov push (bad) push mov pop ja jb sub mov lods sarb aad js inc scas sub dec cld repz cmp mov dec ficom mov jae fcomi (bad) scas xor xor je sub sarb push sbb push dec mov jg insb popa and mov roll inc ds push mov or xor popf mov pop stc xor mov pop inc sbb sarl mov inc cmp inc inc jg pop repz or jg leave pop nop mov mov shrl push pop fstpt xchg pop add cmpl push movswl repnz rclb rcrl cmp inc jg loopne shrb icebp test jg cmc sub jg mov int3 fs lret and pop cwtl pop dec out jo mov hlt std sti adc test mov and xor outsl pop insb mov lahf aas cmpsl sti pop sbb mov dec (bad) cld jg jbe aam scas (bad) dec jg rclb adc test jmp mov scas push stos xchg mov in fdivl pop or cli sub push pop push mov out xchg pop jbe in jg repnz mov mov sar stos xchg inc imul (bad) aad cs js mov mov (bad) mov and xchg jb lret jmp cmc pop or loop bound sbb inc lods jg ss or xor cmp mov jg arpl cmp cmp jmp and in xchg push hlt cld inc cmp mov addr16 clc jbe scas sbb jg ficoml fistpl add pop popf push or (bad) fidivr push mov mov jmp sahf jg nop jle jns movsb mov mov divb mov aam jg sub mov jp aas mov insl cs cmp lret fdivrs je (bad) in jnp jg xchg aaa jg loop cmp test jg cltd inc adc lret cmp loopne dec mov jg mov imulb notl gs push aam jecxz lock sti xchg std cmp jg pop mov jnp pop xor clc push lock fdivrl inc outsb jo lods jg cs xchg cld and push push mov int jg addr16 and inc mov fdivrs test sahf and cmp pop test gs mov call mov (bad) leave dec (bad) push jg test or add fadd je adc cmp and jg cmp in mov je cmc cmp adc cmp pop rcrl stos ss movsb pop dec fnstcw in repnz add call scas jg insl pop sub jle (bad) pusha mov stos and mov jg (bad) cmp inc (bad) jg mov cltd inc or mov movsb outsl test in aas add fs mov testb jg lock or scas clc cmp pop sahf jbe jecxz call jg inc cmp jg iret fsubl scas jne jg (bad) inc add sub notl inc dec add loop fcmovb xor lea leave xor cs sarb sbb arpl fs ret mov jmp jg add nop xchg sbb std (bad) and orl sti in sar out push jg push cmpl jo in sarl jg shrb adc clc (bad) jg stos and xchg (bad) repz iret daa inc pop mov cmp mov mov sbb sub xor ljmp mov sbb and pushl subb cmp xchg cltd ss scas adc jmp out jg adc aas pop int sarl cmc sbb xchg pop xchg cmpb in in mov std inc push cmp and inc cmc (bad) dec push dec adc ror mov sbb mov pop xchg jg push int3 push ljmp mov sub xchg and insl dec mov rcr cmp frstor fmulp mov lods sub jbe imul jb inc cli call cwtl mov fldt xor push jno sub xor push std jg xor scas mov mov jg xor pop jg inc push std mov or pusha xlat jae sti push (bad) jo mull jg insb adc sbb xor push jg mov jno mov dec jmp or push mov ja ds jb stos jae inc fninit mov out das popa push lds aas sub sbb mov xor cmp idivb pop xorb orb jg mov stc and clc jg push loope dec mov cmpsl and xchg lea dec xor xor jp outsl sbb fsubl call xlat dec pop outsb addr16 mov jg ret in and jecxz cli pminsw imul les push push push idivl inc mov jg,pt cmp repnz jg sub sbbl popl mov shlb push pop xchg outsl arpl add ja mov popf inc cmpsl adc jmp push aas xlat ljmp jge jg inc sbb add stos mov pop out notl dec insb add or mov xlat test mov and jg into dec jp out ret push pop lea outsb push xchg jne inc test push imul pusha dec mov xlat pop jns cld jg push ljmp sbb popa shrb pop inc pop add js inc dec jecxz loopne xchg sub aas inc jg adc jecxz inc xchg mov and pop jg nop lock pop push mov jg ds mov jg sub inc mov sbb mov jg addr16 jae repz jg and cmp int fidivr cmp mov dec push jg aas daa outsb mov cli sbbb push sub popf dec lcall js and mov xchg mov cmc mov jno xor loop jg lock dec inc es cltd mov and jmp roll std push loope sbb jno and push (bad) cmpsl add dec (bad) (bad) dec mov gs sbb scas int3 cmp xor inc jb fmull mov stos push into fldenv jg jno jl pop stc or inc mov loope aam loopne (bad) xor ja sbb jb nop mov jl mov sbb add dec and jg mov clc cmpsb push push xchg jg ret xor jg adc adc jg leave std out in (bad) int3 test xlat jno fcoms jb pop iret and lock jg add sti insb loopne jg and cld aas clc insl mov inc mov lahf lds js,pn jle sub or mov xor jge lcall and or pop xchg js loop dec mov aam pusha fidivrl xchg mov scas mov les or sub sub cmp int cmpsl test or lea jne xor mov in addl std jbe test idivb jle pop flds cwtl js loopne xor roll cmpsb or (bad) or dec (bad) jg push into pop mov inc push inc xor adc dec mov loope int (bad) leave out mov hlt pop cwtl cld jbe and mov jns out pop loopne mov aas jle or comiss fimull mov push add loope sahf fldenv out or adc cld (bad) sbb xchg jg or daa (bad) nop sbbl int3 add jg jne inc push stos les inc xor inc mov adc enter lea add jg pop cltd jns (bad) lret sbb in daa push pop or fdivp loopne push push outsl jg xor pop mov icebp xchg jg repz popa in int3 sbb xor inc and into push (bad) push mov xchg pop arpl cmp shrb adc sahf in fldcw mov mov clc xchg adc outsl inc inc or cld mov fdivrs fidivl push or mov insl jge add lock cmp inc sub fidiv arpl inc jb cmpsb in (bad) mov xor out inc out pop push aam aad jne mov push ds pusha mov pushf inc jg mov fstp (bad) push mov push addl lahf add pand jle out daa jg mov out push xchg outsb xchg jg sub icebp lea and nop test and test inc test shrb or sub dec cmpsb mov xchg xorl xor mov test sub and sar lock inc in dec xchg push js lea xor fmul (bad) jo lahf jg pop fs sbb addr16 ljmp jg mov movsb mov mov sub jg add sbb mov cmp js xlat jg rcrb je mov pop sahf loopne jmp xor les pop xor jg pop jmp cmp mov and cmp adc mov fsubrl and push push xchg mov insb mov fistpll aam out xor dec ds popa outsl dec mov insb sub lahf jg cmp in movsb xchg inc jg (bad) pop cs out movq and (bad) scas adc jmp cli or outsb mov mov int3 cwtl loope sarl pop push gs jo push adc xchg movsl mov mov cli sti lock aas test push dec pop aad je aam jg aas sub iret test mov stc pop cmp ret lock ss loope adc xchg sbb sub jecxz ud1 jae ffreep icebp test mov dec jg or jg xchg clc xor lea push inc mov jecxz sbb int3 loope (bad) jmp fmull sub push lret movsl push xchg jg ja stos lods fbstp jg rol push daa iret sbb lcall jno (bad) xlat arpl jg xor test jmp mov jg adc popf inc cmp cwtl or (bad) ljmp jg and mov jg fisubl pop mov jg and addr16 push jecxz stc pushf aas add ss dec xchg das jg push scas cmp jo lock sub and and xor mov stos push cwtl or mov xlat jg jno pop push je lret dec push pop sbb adc (bad) mov mov or push std cmp add (bad) subb mov jbe pop scas (bad) mov jg ret imull enter fwait mov jne dec cs inc les xchg dec push lahf movq and sarb mov jo popa dec jg jge jecxz test or lret xor push mov dec stos add lret (bad) (bad) and push xchg jns lock ficom sbb jne and xchg icebp mov insb lds hlt jg fisttpl sete pop adc push addr16 and bound fwait ret fnsave adc xchg loopne and call mov andb jg in insl adc popf mov jecxz fidiv jg test sbb (bad) jg std sub insb xchg cli mov repz jne cmc pushf mov dec pop or dec cmp inc iret rcr push pop invd jl push inc shrl ljmp lcall add adc lods mov outsl int3 adc push cmpsl repz sub rcrb jae (bad) out ja jg adc leave loopne jg sbb scas mov lock xchg pop (bad) es cmp into or jg add adc pop add and (bad) arpl lcall mov push gs and mov dec shr fidivl je sub sbb inc (bad) mov pop mov add cmp jle int3 cltd jbe stos add sub fdivl sti jge pop lret inc xor addr16 cmp incb mov jnp insb scas fldt cmpsb shlb inc ja jg pop lret or cmpb adc xchg lock dec push stc push out movsb ficom lret das mov popa inc jg jle imul nop cmpsl xchg sarb cltd fnstsw or arpl (bad) jmp jmp aaa mov sahf push add jmp pop fnsave aas jge std mov pop rcrb sti sub fstpt je fbstp pop pop ret dec in aad es jg push mov mov inc lahf mov push cmc jle mov (bad) mov pop dec rcll pop pop das dec (bad) cmp and push jg or inc std mov ds enter and add add jno push jg mov mov fs mov pop dec outsb js and outsl and data16 jno ljmp adc data16 mov jg cwtl sbb jg lret aas dec enter mov inc add mov pushf sahf das jle dec mov adc xlat xchg cmp pop out or add push jecxz bound mov dec dec lods cs (bad) sub ficomp and push outsl popa jg push xchg jns push mov jg (bad) sbb mov js xchg out call xchg inc lock jg push out or mov popa fnsave xor add icebp cs clc pop pop jg inc mov aam xchg push push inc aad loopne aas loope movsb jmp sbb cltd fistp xchg lods inc sbb loop cmpsb pushf icebp push add stos jg mov pop fidivrl and sbb aas inc xor adc pop lods jg (bad) jnp mov negb jg mov fwait xor push div ret outsl cmp jg (bad) jae call and and test and xor dec out (bad) repz les sarb and jg push push xor cs enter xchg xchg mov push cli cmp jg movsl jbe mov xchg popa call dec jg fdivrs jle leave lret mov sbb ret mov bound push or outsl bound aas sub xor push ja sbb addr16 arpl jb jg test ds pop sbb xor fiadd jnp inc psrlq inc sbb xchg pop mov daa rorb jge jg xor xchg add xchg in or jbe popf and jg fmul icebp rcr push adc int cmp sub out lods les sub inc xor dec mov jne and enter push (bad) aam outsl lds inc repz add loopne jg mov inc lret mov fisttp push cs xor repz jl outsl mov sar jg mov out jg inc cmp push jg subl scas mov mov jg pusha cltd pop iret sub test movsb inc lretw jg xor jle jg addr16 pop mov sarl adc mov sbb push xchg and dec aas mov cmpb mov imul sub into jg cmpsb pop shl mov xchg inc call sti add (bad) mov xchg add loop and jle fidivr out movsb lahf lret jg lcall jg cmc mov ljmp jnp mov loop jg push cltd cmp cmp repnz xchg xchg mov pop cmpsb dec pop subl jno sub aas mov or cmc xchg and std aaa into mov pop imul mov sti cmovbe mov push pop and sbb fistl jnp dec aas fldcw or inc out mov pop loopne loope and jnp subb add sub rolb sahf jg mov pop stos test (bad) js pop mov add movsl mov xor xor cs add inc idivb fdivrs xchg or scas repnz aas adc mov dec and inc fidiv je repz insb ret jg in bound dec xor jge cli dec je jle call loope pop stos dec adc rcrb aam scas pop aad mov adc jbe lret add mov fxtract lahf test (bad) jg stc mov adc or mov movsl aas pop add sub mov and test hlt stos inc mov jg ja fld jg icebp lret xchg push jg repnz fwait inc mov stos xor rcrb cwtl cmp jg xchg clc in inc xchg add push shrl mov or dec lret mov adc pop call repnz jne imul jmp xor fcomps jbe inc inc pop push jg mov (bad) mov xor scas stos aaa ss stc push push jb push pop rcrb inc js jg mov pushf or loopne rolb sahf aam push sbb lods jg cmp sub jl mov push pop push fsubrl sarl sub cmpsb fcompp sub add in (bad) mov dec insb sbb lods add sub pop pop jg (bad) lock pop lea loop jg std fcoml and fidivr mov test pop xor out add sahf pop inc popl push xor jg fnstsw push xchg xor clc arpl lret jp mov pop scas dec or bound je ror ja dec mov inc and shl xchg lods pop mov fldt dec pop cmp arpl xor ret in popa jo cmpl jb mov dec push enter sub push jg push inc pop adc rolb mov jl dec daa cmp idivb or cli ja or push int3 movsl inc (bad) lret jg fidivrl pop push mov pop lods out push ret jno aam jp dec arpl pushf inc stos fs jg mov shll mov fwait outsl jp push jg xchg scas movsb push dec call rolb push pop pop inc addr16 fdivrs fwait sarb or (bad) jl mov mov lods and pop jg (bad) push adc lret daa lcall inc cmpsb (bad) (bad) jg mov outsb and sub data16 and ljmp xchg xchg out scas jg push sub lods jecxz fdivl cmp jne xchg mov add push sbb std xor add jecxz add lea test mov out jg jbe push fsubs xchg xchg cmp in lods jno rcrl jg push pop lcall jg jmp xchg jno icebp jg lret mov and out and pushf jg dec sti out xchg lcall and iret lret xchg lahf jg addb add push in jg mov pop mov loop push loope outsb jg inc into inc add add jg push mov pop movsb push cmp pop dec loope mov aam sbb aas fbstp mov out inc cmp mov (bad) xor cmpsb push outsl mov test addl scas cld cltd mov jae jmp push jl (bad) push scas cmp dec (bad) and in jg ss adc inc jle pop xchg call sub sti in fwait mov pop clc into ds out xchg lods pop mov xchg test pop xchg add imul adc gs mov add pop (bad) jb push je inc jg mov sahf loope insl mov inc dec mov cltd jae sub arpl jg in out mov loopne mov movsl jg out push repnz push jg mov fwait call popf sbb scas inc inc arpl jg sub addr16 (bad) stos jg add ret jmp fwait pop inc inc (bad) imul loopne jg cmp cwtl repz js mov add jg pop popf out push fisubrl and mov clc fcompl lret xor xchg pop outsb mov stos mov mov jne adc add daa push (bad) in (bad) push out mov cltd xchg lods cmpsb cmpsl insl push popa push stos stos and imulb cmp pop mov adc jg or mov cmpsb addr16 push jg or (bad) test nop fdivrl xchg mov push sub inc cli repnz addr16 adc int3 sarl (bad) adc je jns pop in jle nop fxch bound push out rcrb dec xchg loop test movb or dec mov xchg jg loopne add lahf stos cmp pop pop aas ret je mov aam ljmp fwait sub hlt insl dec lahf pop add (bad) jg inc xor mov xchg fstpt das cmp sub inc jg xchg xor xor pop mov push inc sbb add in repz sub push mov fsubl cmpsb sbb je (bad) push test fistpll xor hlt into addl idivl lea push sti inc dec jp (bad) icebp xor or outsl dec jo fidiv add jg sub mov jg xor in jg repz add cmpsl inc jg lock jg or repnz xor (bad) xchg enter jg pop push addr16 cmpsb push jo cmc je dec jg adc lock and jg or push ss jg mov nop add mov push (bad) jg popf cli or stos negl xor mov popa push fbstp or lock add and mov xchg xchg jg or adc jg les add cltd fisttp (bad) shlb lret lahf xor int adc mov and in pop xor fs sub loopne lret aam ja (bad) xor mov std scas push push test and mov nop mov or or inc lret leave scas dec (bad) jg ret (bad) std push dec jecxz imul xchg gs add mov ss lods dec icebp pop inc jno data16 andl xchg mov add jae mov lock and jg lods cwtl bound push jg xlat pop lds (bad) andb mov repnz sti inc int out lret bound pop (bad) and mov mov push jg clc outsl loop imul pop jg mov mov jg repnz imull xchg dec loopne jmp aaa out out adc sub fdivrs adc addr16 jg lods jb mov shll sbb out inc in leave add jg pop mov mov add sahf pusha xor cmp adcb inc cmpsl and fadds inc hlt jg inc adc daa cld jmp sub fidivrl mov sbbl cltd ljmp cmp pop jb pop and sbb popf push aas scas std int lea ja cltd js pop and jne jg xor jg xchg jmp cltd mov xchg fiaddl lcall test or add mov xor jg fwait leave cmp jg xor aad stos xchg mov enter add loop lea jnp daa and in sub (bad) push or stc dec jne xor jg xchg mov int3 push aaa sub jp lods out (bad) jo pop pop test sti outsb aam cmp movsb fsubs int mov xor lea test shlb shll inc jno inc mov inc (bad) or jg mulb (bad) aas mov (bad) test (bad) out ds mov ljmp dec push mov mov inc test stc sub jg sbb cmc sub pop jae fdivl sub xor xor inc push pop push jg dec subb popf inc jg fidivl icebp fcomi push sti and sub (bad) jg pop inc insl mov inc popa (bad) sbb fldl pop mov and pushf sub add sub dec ds and jg inc adc add je jo js jg fsubp mov cs int in dec stc xchg adc push sbb push jg testl lds adc mov xor lea sarl dec test push mov cmp jg and pop ljmp jg icebp (bad) mov aam repz lahf dec push stc test js outsl cmc mov sbb cmp movsb adc popf jg repz jae xchg es or push jnp mov data16 ljmp repnz jbe jle (bad) mov cmpsl not xchg adc ja dec insb lock sti sbb sub fdivr inc jecxz inc fnstsw movsl add xor mov inc sarb xchg inc mov fidivl mov mov and mov lcall adc sub idivl std jns sub jg fcmovnbe pop mov mov lahf and dec faddl cmpsl jne pop aas jg dec push insb mov icebp xor hlt cmp mov adc sarb lahf inc and rcrl xchg add je and dec mov mov jne pop sbb es xchg loope leave nop mov clc cmp jno mov inc jns xor or (bad) out mov jg outsl int (bad) (bad) mov mov jg push call pop jg stos (bad) pop mov mov fidivrl pop mov in pop mov cmc stos adc lods jg mov std inc je push (bad) (bad) and sbb dec addr16 cmpsb popf jg clc test sbb jbe jge rcll or xchg ficomp xchg mov jecxz test popa push out add je jb jg pop or cmp xor cmpsb in cltd ja inc inc pop jno clc mov mov insl mov dec mov js popf jmp jg adc cs data16 jg mov or and scas (bad) xor mov loop hlt xchg fcomi push ret mov jb movsb pop sub or mov jae and pop (bad) pop lret xchg loope lcall inc sub sbb int ret loope mov rcrl popf pop movsl ja pop jne leave hlt aas push insl and cmc push jg jp mov ret js pushl lahf push cmpb mov jle (bad) xchg int3 pop pop or jg cmp cmc ss add adc mov pop cmp imull add addr16 cmp and sub jmp rol xor dec jg mov dec and lds mov nop cmp inc ret jg shlb mov fisttpl push in jg pop cmpsw sub xlat outsl jg adc push jg mov rcrl dec xchg addl mov jp push mov bound sbb jno ja mov xchg mulb dec cmp (bad) fildll fstpt inc push mov ret jg int3 rorb mov js inc hlt dec dec nop mov sti ss sub (bad) or mov inc jmp jnp addr16 cmp scas sbb inc repz push movsb popa ret aas test cltd ds js push inc sub push mov daa jno xchg cmpsb push sbb cmp data16 jg scas sub mov jg outsl mov jg jmp sti (bad) cmp (bad) vmovupd jo add mov je jg mov lea push data16 icebp dec mov sti mull or sbb jne push push mov inc sahf or stos pop lahf push jg cld sbb mov cli push cmpsl fwait dec sbb and and rcl inc (bad) jle fidivrl hlt (bad) idivb rorl dec loop sub aas xor inc mov dec scas lds jg push pop xor sbb inc sahf out in xchg or outsl jg aad fisttp xchg jo movsl mov mov dec sbb dec movsb cs xor jl iret xchg add push mov cmp lods leave dec dec mov lret adc cmp sub or jns (bad) jg dec and fist test pop ss and cs cli ja cmp ret aas or cwtl addr16 fdivl inc ja and out inc push cmp mov sbb mov daa imul dec idiv popf sahf mov ja dec gs push test sub sub inc push into mov xchg dec pop adc insl (bad) mov or leave sbb sahf outsb (bad) jg stc test (bad) mov daa cmpsb xlat add sub cmp sbb js out xchg add int3 jp int ds test daa jbe gs adc mov loope adc pop xchg add leave aad push push mov loop jb fnstsw out cs xor jg push (bad) cmpsl and add mov push jg outsl inc jae push test aad dec es js push push xor mov arpl inc or dec into push jg (bad) push test ret xor pusha inc mov pop dec mov addr16 cmp mov jo mov movsl inc push inc in jne aas je rolb movsb popf inc notb sbb mov push jp aam or shrb fwait inc inc xor lret push xchg daa lea mov mov xor ljmp fistp cmp dec inc jg add in jg pop aas push cmp jmp sti stos dec or push imul xor jne pop cmp mov pop jg lahf cmpsl mov jg leave les jg cmpsb (bad) out arpl sti jmp push pop push inc jg mov or out sbb mov dec daa fsubl mov sub push cmc add inc lds xchg pusha jg push pop adc sbb inc mov inc pushf jl out push adc push mov jg inc jp push outsl insl dec ss sub jne adc pop cmp xor pop aas enter mov inc dec fsubrs dec inc mov pop dec pop cmc repnz and inc push mov stos jg repnz out gs jecxz aas add sti out bound adcb add dec xchg (bad) mov mov fstl push jg int3 mov stos jg push pop call jg and stc out xor jg mov push xchg jg mov or out cltd insl test bound leave pop jae arpl add push xor dec (bad) pop cmp cmp or stc aam pop aaa cmp jg out int3 sbb xchg jp pop adc inc push mov pusha mov mov shl inc cwtl arpl push jecxz dec outsl inc out jg push pusha push popa repz jg fdiv sub sbb dec aas ficom loope push dec mov or sti mov lea es loop inc jge dec jg mov ret loope sarb xchg insb iret jb and dec icebp and sub fmull push inc dec gs inc in test cli fnstsw jg and loope aaa jbe addr16 pop xor stos mov pop pop jg andl inc jg lahf adc mov jns cmpsb or xchg jg xchg in push push insl jle mov fcmovnbe scas push dec movsb dec sti adc out cmc adc or sub repz mov inc lea dec loope das decb pop xchg aas scas jo aas pop int ja and je push xchg popa cmp and mov aas push imul dec dec (bad) jg test cwtl loope xchg push aad data16 mov popa dec push (bad) mov mov push xor sbb add and jg bound cltd adc jg repnz cwtl lret jns pop aas mov (bad) xor insb dec out jg leave inc imul xorb mov aas mov loopne jae xchg push lea jg loop inc dec jb in jg stos or rcll fnstcw (bad) int3 ret int jg jmp dec call (bad) loope inc push jg sub mov push xlat fildl lds inc jo mov jg sub sbb jge inc jecxz jg test mov jg pop leave pop lret fwait mov insb loope jg xchg inc repnz and sub push lods pop pop mov jg lea adc or jg adc mov push mov ss push or sbb inc inc jg loope sbb jg pop sbb mov outsl pop add jno mov dec stos xchg mov and dec nop out cmp lods mov imul jnp std xchg add pop push inc pop push jg push xor push pop sbbb scas jge fistpll fcmovnu sub mov clc inc mov cld inc jmp dec fnstcw mov mov xchg sub jnp cmc imul jge mov inc loop mov dec mov out pop dec neg aam inc pusha into push (bad) jmp fimul mov jnp fstpl test cld jg (bad) jne mov shll nop lock jg push loopne mov cltd cmp lret jne pop lahf ss std sti and push mov mov cmp sub popa pop hlt jno adc aad test dec jo mov pop jg inc je jg out mov and xlat ljmp or mov inc adc mul subl aas dec pushl les loopne xlat pop and mov (bad) pushf int3 inc rclb lock ja arpl jg sbb inc and iret xchg push xchg bound jg rorl outsb (bad) or sbbl mov rcr jno (bad) jbe sahf add shrb xchg or cmp jno ror out lcall add mov (bad) shrl leave push jg push int3 or shlb js mov jg (bad) sub mov into movsl test pop aas sub (bad) or je sarl push lahf pop pop inc popl pusha xor inc (bad) hlt and jg mov jmp adc jl or dec push mov out lds stos or fidivrl ss sub sub dec inc push jg pop fadds cld push pop inc push fidivr repz jle (bad) call ret inc sbb leave jg rcll dec sbb jg idivb mov xchg cmp adc pusha inc divb cwtl sbb ret lds fdivrs cltd mov pushf (bad) lock inc dec hlt (bad) je inc jg cmp test sub mov cwtl fcompl in jg (bad) cmpsb adc fnstcw push cwtl add jg scas out or add jg ljmp jg (bad) adc inc inc mov sahf ljmp pop mov jg in mov xor lret mov jg adc dec mov jg add out xchg jg or cli jo daa cwtl jg add jnp js push nop outsl pop ja xlat rol jg mov test aas adc mov mov arpl jg sub scas inc lea enter cltd orl loop mov mov stos lcall xor js mov jg popa (bad) inc fnstcw hlt lock mulb sahf mov jne push sub mov cmp int3 or cmp and rcrl lret aam leave (bad) mov jg fcmovnbe inc or popa jg (bad) push xor push pop xchg ds adc aaa cmp push jg dec push xor sbb (bad) xor insb dec (bad) pop inc jmp jmp jo inc pop insb push dec push lcall je test out bound mov jnp call out rorb out leave jg fidivl loop sbb and cli jg mov mov push jg popf jl adc push inc or xchg pop dec cli mov pop addr16 int3 jg sahf and mov mov outsl stos dec pop daa aaa jg sbb cmp jg adc call jg daa fisttp popl clc sub dec sub les es cmp push aas jae pop (bad) popa mov push dec jg mov imul hlt adc jg fwait sbb aas lods xor outsl sbb xor es jbe xchg out fnsave adc cltd lret inc cmp inc dec mov test push fcoms mov lods sub inc mov scas hlt xchg dec lock icebp and jg pusha sbb imul nop add cmc je icebp loope jg xor std hlt or xor (bad) aas jecxz mov ja (bad) jg cmp jg,pt fnsave loopne pop jmp or cmpsb sub dec jl xchg sbb push and repnz mov jmp adc ret sahf cmp push mov xchg leave push mov pop repz jmp inc repz dec push sub inc mov arpl fstps jne pop sarb inc aaa sub repz xor es xchg jg sub cmp jg out loope in inc jg ljmp mov pop jns rol in pop xor and fld popa xchg push cli mov jecxz pop fild imul scas dec ds mov pop movsb cld divl fnop push mov push stos jmp (bad) scas sahf cs and mov lock es mov push or xor dec in xor fstpt negl mov mov xchg xor loop mov pop sub or into inc mov sbb adc sarl call mov out jmp cld jg out scas stos or fdivr or push inc outsl push xchg lret jg scas cli loopne inc or or mov sbb out and push jg fdivs jns fidivr in cwtl les jo dec xor lahf pop jle outsb mov sub jge jg std (bad) and xchg hlt jg mov fs jg shr xor sub push sbb inc inc dec jg (bad) lea xor inc scas cmp jns das mov and jg mov fisttp xchg add mov ss pop pop jne fdivrs (bad) cmp or lahf adc dec sbb mov jg and dec les jg ficom sub daa lea or xchg lret jg dec jmp es stos add insl movl sbb mov cmc js sarl stc lea add mov mov imul dec rclb cmp sbb xchg push outsb cwtl iret test aaa jg xor or and (bad) sbb mov mov pop jg and mov add push push or jg rcrb loope mov jl lret push xchg ja,pn lahf xor repnz dec inc fdivl xchg outsb icebp sub pop int jno inc push jg cli (bad) imul sub lcall and jg hlt (bad) mov sti out pop jne outsl lret and sbb inc arpl sahf dec andl stos mov fs loopne repnz movsl sbb push xor divl adc cld ja pop lret into sub mov pop pop pop iret sar cmp mov inc rolb push push jg push aas pop jle insl xor std jg adc shrb jg mov mov push xchg popf jg jge in mov imul cmp cmp cmp mov imul mov inc jg outsb adc adcl jg int3 mov xor jb (bad) cli xchg in push cld mov ds jmp xchg inc addr16 add pusha sub sub and imul jg sbb inc jp xchg mov loope mov xchg jg test popa ja or rclb lret xchg jae (bad) (bad) cmp jbe jg in mov mov loopne out jbe inc and jle pushf mov sbbb (bad) std pop arpl mov cwtl mov (bad) pop xor pop es xchg add adc jbe lods xorl outsb ret gs leave pop inc dec inc sarb jae addr16 jg cmpsb mov pop dec imul fwait xlat dec jp adc sbb xchg jg pop out std inc mov push mov inc jge add pop jg outsb aad movsb sub lret xor jg xchg roll mov rorb mov aas scas jo (bad) or dec cmp mov pop jg,pt mov (bad) xlat sbb dec roll push and pop (bad) mov cli aad sbb sarb pop popa xchg mov in pop add sbb fs mov push repz aam sbb push scas stc jae std loopne loope jg or int adc jg hlt in out mov jle cltd int or mov jecxz lcall popa jg and mov aas xchg lahf scas cltd cmpsl imulb lcall pop and and loopne ret clc mov pop pop dec loope xor dec cmc adc stc lret ja shrl (bad) mov test pop movsl and mov fdivrs hlt rcl insl xor sbb pop dec jg adc fnstsw stc push clc jg fdiv idivl mov cmp es (bad) sub cld test xor jg out (bad) xchg xchg clc (bad) mov dec loop lock negl gs mov jle movsb jg jnp insl cmp or test jg scas outsb lcall inc les mov jg fisttp or and in stos loope jnp out jne mov or mov sub adc mov add mov iret cli pop jg test add jg xor mov adc sub movsl jae fisttpll fistpll and ja jg inc (bad) aam lret mov mov push and pop jns cwtl outsb jg xlat dec xor in xchg repz cmp jg add test inc mov jg fscale aad (bad) jbe jg mov aam push repz faddl jg mov add adc and out js fwait imul mov fsubl mov jg mov pusha mov or mov adc xor pop jl jbe sbb mov jecxz cmp pop xor jp cwtl ret cmp inc mov and movb popf aaa mov mov xchg sti fistl mov push mov jmp push jg out pop test lret jg xlat xor cli jle dec enter pop dec ds or pop push outsl add jg pop push cmpsl xchg fcompl push in sarb dec (bad) xor cmp jg jle scas xor pop push add cmp jg lahf inc (bad) in js jg out (bad) les adc lret push xchg icebp or cmp jg lret xchg mov cmp mov lea or (bad) jg mov out sti int3 dec adc iret jl int aas in inc pushf divb xlat loopne adc and mov jno lcall mov add fmuls js mov jg imul sarb jp pushf popf inc ljmp add popa aad inc daa push shr fiaddl mov jns lret jg iret push lods data16 rclb std xor es jg lret mov imul mov ja addb lret mov jg adc nop mov les test xor dec jg push cld cltd xchg mov cmpsb stc push in fs out sarb or mov cmpsl jg xor bnd sar loope popa ret mov pop mov fwait jecxz cmp xor jnp pop jg adc inc mov sbb lcall rol pop jg mov push jg mov xor pop push getsec adc dec pop push adc stc daa arpl pop xchg stos jb outsb call sti jmp lret movl fistl push ja xor and lahf dec mov jno imul or pop bound arpl jmp scas das push jl and mov mov pop sti out and mov add insl fistpll jno pushf mov aas lods adc fimull in mov aaa mov jg es cld adc popf jg dec lcall aad sarb add xchg test stc sbb inc xor add int ficompl jle pop icebp push push ret jns idivl pop (bad) pop das mov subl into movsl je (bad) push int mov cmp mov enter and jg mov dec mov movsl movsb mov mov mov and jno add sti lea lods mov mov sbb cmpsl mov xchg jg pop loope push aaa push sti mov dec ljmp or mov popw jnp cmp addl shrb cli es push out push pop jg mov sarb fsubr dec inc fstpl pusha or jg xor shlb sbb in mov popf pop jmp imul (bad) jne pop cmp inc push jae pop mov cmpl (bad) test cmp pop or mov pop xor and cmp outsl push fsubrs loopne jg js sub mov sbb pop adc (bad) mov xor idivb inc adc dec out mov repz fistpl addr16 inc call inc or (bad) adc sub nop lock (bad) (bad) xor adc loope pop pop dec (bad) jl lret inc popa mov pop mov and push sbb push jg hlt aam cmp dec aas daa scas adc (bad) loop jg dec xchg sti hlt lss inc add cmp jae out sbb cmovp cmp pop pop sub sub dec aas or xor dec and cmp pop cmp das jge jg les mov push lock jg (bad) pop jb cltd xor aas jge xor xchg jecxz inc or mov into ret mov out jecxz test xor repz xor jg fisubrl aas jg xchg fucomp movsl loope adc pop push int3 mov push jno (bad) add js xor cltd lret dec sarl jp pop and lods sub and das xor and dec jg (bad) inc and xor sarb pop (bad) jg aaa or mov inc mov icebp fdivp jns loop pop mov inc mov (bad) (bad) out ret rcll and push decb popa int3 idivl pop jl or jle test les add or movsb xchg (bad) mov add in dec push push xchg jmp and adc xchg pusha out bound mov lock jg in xor adc pop cmp xor pop fcoml cmp jg add fwait sti cmp subl shlb into lock cmp adc lret push iret jno lea inc mov mov cmp popa iret popf dec scas ret inc adc cs cmp pop mov pushf (bad) and inc cltd mov das xor dec (bad) loopne mov addr16 orl pop jg add lea cmp jg jb or cmp aas (bad) pop add jp js pusha dec mov out mov mov addl xchg nop and sarl jg xchg lahf xor pusha jg push sbb inc jmp (bad) fidiv dec pop cmc cmpl (bad) in out cwtl sub mov pop fidivr inc xchg lahf push jg add mov lds cmp imull vhsubpd pusha fs xor mov (bad) mov jg jnp push fsts jle (bad) pop es mov fcoml mov mov in jle jb jl mov xchg scas bound inc add (bad) push in cmp mov push dec mov stc jle scas cld imull insl mov pop adc xchg (bad) mov iret push jg div rclb mov jg iret idiv xor push adc insb shrb jle cmc cmp jp mov lea subb outsl (bad) xor les repz pop xor pop and outsl or jg lea (bad) jg cmp jnp push dec mov jns sahf out jne add pop pop daa mov inc fwait add inc jg (bad) xor (bad) xchg mov jg dec in les xchg sbb aaa rcl jns gs jg add or add mov dec loopne sti jg sbb mov cmp xchg test mov jle nop out push out cmp das in add dec mov cwtl mov lret add ret adc and mov repz mov cmp shll add test jae push jg outsb pop call fiaddl mov bound test mov (bad) xchg pop pop push dec dec and xor adc mov aam sub inc jg jp loop fstpt lock or in jmp call jno sbb dec or (bad) imul loope inc push mov jg lds pop mov sarb movb lock jg xchg imul jmp gs sahf inc rcl (bad) pop popa cmp push call push mov cwtl jbe mov jg dec ret lea dec fdivrs inc inc lds aam sarb repz mov test cmp mov jg pushf jns jno mov aas pop lock gs out and into xor pop clc jmp sbb jmp mov cmp and fs push dec sbb movsb (bad) cltd out lods xor push pop sub je dec fist or outsb jg inc xor loope and jg test push cwtl sbb lock mov hlt dec jb fmull jg xchg rclb jns loopne in bound repnz mov dec in je into fidivrl lahf pusha push mov test movsl iret mov xor dec hlt xchg out ret jg pop leave fsubrs cmp mov and cmp and pop or lcall push add inc or dec jg xbegin inc jg nop xchg jno es sub xor cmp mov mov jb add jg inc js pop imul jns int out clc cld and mov xor fdivr ds or push (bad) dec sbb mov mov push je inc rcrb jl xchg in sti or mov xchg jno mov aad sbb pop xor dec leave jmp xchg in stos cli pop pop dec jg loope fstpl in mov mov sub dec push repz xchg fdiv adc lret jg mov jg add mov cmp aad dec lahf aas inc adc inc stos sub pushf js jecxz (bad) (bad) pop push inc cltd cmp jo outsb mov xchg pusha push icebp outsl js pop pop or insb mov stc lahf rcrb or xchg pop inc ret xor lret inc mov pop jo jg adc dec jb je jg adc outsb jg mov pop add std ficoml jg add add pop pop jg into jmp sub lds daa sbb mov pop or pop jg sub jmp pop push loopne dec dec nop or mov in xchg cli insb xchg jg rolb sbb jecxz adc stos inc sub jg xchg cmp pusha jg xor ficomp jmp pop scas or lret inc fcom jg inc cmp mov in das pop xchg frstor int xchg pop add dec jg add pop fidivr sbb jne insl jmp rcrb push pop mov xchg jne or jg jo pop aaa jp pop jg adc jl mov cmp jg and outsl and jg (bad) mov xchg jg sub sub in jg jne or dec jg push xchg mov scas cmpsb push jg fcmovb imul cmovae (bad) mov fcmovnb sub jg pop loop dec xlat xor lret jo pop and (bad) scas inc les fisttpl jnp shl pop jg lock sarb xchg mov jg pusha xorl (bad) jg fs shl or nop pop out and inc sbb dec jg push sub and xor xchg fsubrl or or mov mov mov xor add sub test xor call hlt dec rcl cmp jg mov or jne popa mov adc dec std cmp stos jbe jne jg xor cmpsl (bad) jg aam add and jg mov mov mov test ja movsl jae,pn push sub push mov lea imul and mov lock int xchg jmp (bad) jne dec enter jg repnz xchg cmp fstpt cmpsl insl loop mov (bad) xchg pop mov and out lea jg push icebp scas mov aas dec scas ds jg or mov pusha cld cmp mov xchg inc push dec pushf push xor xchg and jg es sbb daa les ret scas inc jae das jg inc sahf mov jg push subl test jle outsl scas or jg daa stos adc imulb and push xchg and arpl xchg xchg mov sbb cmp cmp frstor push fldenv cmp xlat daa xor sbb loopne mov mov rorb and sbb cmpsl addr16 fmuls pop lea jg mov rclb mov jmp xchg add cltd cmp call roll adc (bad) jg into mov mov mov xor pop cmp mov jg sub cmpsl sub sahf mov mov mov mov xchg add adc js stos adc and (bad) jmp sar int3 (bad) cli cmc push dec in jg xchg scas mov jg test stos out xor pop xchg insl out lock xor jg mov and hlt clc pextrw out arpl pop mov xchg rorb frstor jg push inc sub cli lea insl sbb stos lret out das cmp stos push jg cs sbb add mov xchg out inc aam bound std jg nop mov dec xor mov cld lock jg je test jg mov lret ja mov roll arpl jnp jg and xor push repnz int3 leave aas pop enter push push dec jne mull loop sub mov js sbb aas scas movsl dec repnz mov inc inc inc out (bad) add int3 fnsave push cmp adc xlat iret pop mov shrb push mov lahf jg inc imul jg xchg in addr16 jge lods call jle sti (bad) ja ja mov xchg fcompl pmulhw insb mov jnp or fistpll push xchg push jp push sbb ds (bad) (bad) pop ja dec decl popf enter dec mov lock bound and adc dec fs les jg push and and ret jp or add dec pop addr16 inc jg gs sbb jle mov call dec inc mov sahf rorb iret push enter arpl xchg popa pop lcall cltd out add jg (bad) nop je mov cmpsl push adc mov add inc mov push jg (bad) loope in out pop stos jno (bad) pop add out fisubrl cld gs in mov push mov jg jle aam sbb (bad) div mov mov jno cmpsl push mov adc push jg xor ljmp jl leave movsb mov inc dec jg adc or mov insl add jg iret (bad) mov into pop sub xlat loope mov mov aad mov push pop jg add imul jno int3 lea outsl ja lahf xchg jecxz mov add dec jns ret test xor mov xor dec inc xchg jg push lea in jp fld fs aam mov mov mov mov jg mov aas cmp sarl push roll std es aam jo fcmovne nop sti and dec pop xchg mov xchg push out dec sub (bad) cmpsl fistl stos fcoml cli mov mov jg in xor mov jg into hlt cs xchg pop push (bad) cmp cmp outsl inc lret sub cmpsl (bad) stos je imul xchg jl or adc jg outsb sbb mov (bad) adc jg lods into mov mov jg cld nop add lds xchg movsl decb jns stos mov mov addr16 imul sbb enter bound sbb aad xor call test adc mov aas cmp js ja inc aas mov mov call in scas jle,pn and mov sarb test adc int jg inc xor lea shlb sub push jg les sbb sbb jg insl mov xor jae jg sbb sub in xchg and addl data16 jnp pop xchg insb xor jg mov mov push mov push dec add cmc pop cmp sub in sub jg xchg das mov mov mov mov or jg mov mov mov pop xchg add sub outsl push shl movsl lods jg aas xlat add scas pop push and popa (bad) in cwtl into jae dec mov xor mov pop addr16 push inc push jg sti mov nop mov imul jl xchg and push ljmp push outsl lods nop lret enter xor lods fidivrl add in and mov cmp das outsb movsb cmp pop push data16 std mov and aaa mov push mov cmp mov add mov xlat rcrl jg mov adc pop mov (bad) cmc (bad) jno jg fbstp das int jnp cmp and lock movsb es fcmove rcrb pop mov test xchg push pop mov jle add sub dec mov mov xchg in nop cmp imull cmc movsl pop push jmp sahf fadd cltd mov sti ja adc pop repnz add outsl nop mov out cmp push adc dec mov mov das lret and push sub push or stc in repz jb push cli outsl jl pop jle mov jp pop icebp pop rcll popf push hlt ret jg jle dec mov test popa jnp jg sbb dec xor scas dec sbbl pop popf and lock leave (bad) xor or stos xchg mov xchg mov test xchg mov pop in leave jo inc aaa jg arpl jbe popa int3 and cltd jmp mov mov fnstenv add pop inc fsubrl dec shrb movsb jg cmpsb mov sbb enter push das mov mov push pop es out mov out xchg in inc inc (bad) jbe out jg in cmp cs (bad) jg xor sub mov lock gs sar test out arpl rolb fsubl adc sub jg cs jae jg (bad) jecxz cltd xor pop mov pop sub cmp dec (bad) out jg jae mov jg cltd pop jns and (bad) arpl into add jg sub dec stos ficompl jg nop sub xor mov jg xorl inc test js or call bound or in sub std dec movsl sbb (bad) xchg push or mov add ds sbb in dec dec icebp mov jg xchg fidiv lods mov cmp jg (bad) adc xchg xchg dec pop mov sub mov inc cmp fcoms push ret jg mov xor jg push sbb and sbb jg dec (bad) cmpsb leave out xchg data16 setle out aaa dec arpl out ds pop scas jmp pop or dec jg add jno inc bound sti mov mov cmpsb insb add loop mov repnz ljmp add sbb cltd sbb xlat adc and mov jg push and rolb cli cmpsb pop loop ss push sub inc ss fimull lcall jmp dec es lods inc js mov mov outsb daa push out aas xchg fild inc pop inc mov loop push imul mov xor js mov and cmpsl out push xlat pop jbe out push jg push fldenv jg clc xchg imul jg cmp push ret (bad) outsb jo push bndstx xchg stos xchg xchg pop mov cmp pop jle or lret in and jne fistpl cmp sti lock add mov pop (bad) cmp sub mov xor movq dec sub aas mov out dec cmp sti stos sbb mov rcrb inc jl lds clc aas sbb xor mov ret jg push iret pop pop jl sti jg mov nop xor push jg and push dec jg pop aaa or jmp xchg pop mov jg mov xchg sarl sbb ljmp into jecxz cmp dec imulb leave pop mov (bad) out cltd add jmp add scas inc daa pop je sahf jg stos cs outsb dec mov out and std hlt sub ja pop or xchg jg add icebp xor pop mov fnstsw nop mov mov jg push mov out fimul fadd repz and inc xlat fimul push jg popa pop in test gs mov xor jg je or insb mov mov xor pop in lcall jg add stos aaa adc jbe push scas push xchg imul test and push jg lret in pop out adc jg inc and inc es jg jnp dec mov into movsb pop aam rclb outsb cmpb (bad) push addr16 cwtl jg lods es out sarl xor pop jg or in and or cmp jg sbb mov cmp mov pop jg lock testb loopne call mov fiadd jg rep int3 scas sub push jecxz jg mov jg mov (bad) mov jle into or ret sbbl dec outsb jmp (bad) pusha push int3 imul mov jp aaa xchg mov mov fwait xor mov jb xchg push push xchg test call push push mov psrlq into and hlt sbb arpl insl jg bound sbb jmp sub (bad) lock (bad) xor iret ss dec data16 mov inc pop inc adc xor pop cmpsb dec lcall leave in icebp jg,pn inc xor jnp push lea das je xchg les mov imul fs imul fnop jg mov call mov mov mov movsl inc inc and xor iret imul pop mov xchg dec dec lods sub (bad) sti out sbb aad (bad) push dec mov adc pop jae xor enter sub xor repnz std or jg lods adc test jg (bad) xor cs (bad) or xchg inc and push fbld xor xchg cmp cwtl ljmp jg lds test pop sbb mov adc sti sarl pop repz sub jg subl mov ljmp mov jg cltd adc fstpt aad inc adc notb idivl mov ret xchg ret inc insl nop (bad) jg (bad) aad jo dec cmp mov or adc and scas imul gs hlt dec mov jnp push jg sbb in inc inc cmpsb jl inc stos pop movsl insl in inc sub pop xor cmc mov xchg aas jg adc mov or pop cwtl repz das and int3 adc idivb rclb xor xchg arpl ss movsl add out outsl inc cmp cmp addl sub jg mov ljmp or jg (bad) lret aam out jg xchg pop dec pushf or mov jno inc add pop fistpl data16 xor mov inc sub flds add mov jg adc call inc aas fsub sti or push test jg push jmp rcrl xchg mov mov lret lods jno imul ja and jmp out xor out jmp inc repnz ja js cmp add (bad) and adc popf hlt push or cmc jg push lock xor jg sbb mov aas push inc adc outsb and jg push icebp inc gs int and pop mov ljmp testb jg sub and fs xchg cmpl mov jecxz ljmp jae daa insl jmp rolb cs jg cmp (bad) and sbb int cmp fdivrp mov cs mov dec mov mov mov add test inc call insb jg pusha cmpsb daa rclb add add loopne jo lret test and jg,pn shr cmp mov popl movsl mov jg cli inc inc jae sahf jno or in (bad) xor and ret imull hlt (bad) pop cwtl idiv ss mov cs loopne jmp popf xor daa sbb mov gs insl xor jg mov dec jno mov pop add and and ljmp shl outsb mov or jmp popa rol out jecxz call sub inc fwait ja adc movsl aad das mov adc pop and mov das xor pop xchg dec loop jo inc push jg gs ficoml mov outsl xor xchg and push cltd sbb cmp nop in jg mov lcall lods jb les mov sub into dec inc fcompl and ja je lods insb dec dec add push cmp jg imul adc std aas adc mov ret sub movsb dec add shl jg bound enter mov rcrl out or popa clc push mov jg test xlat or xor jo inc inc mov test rol mov repz (bad) jg aad pop ljmp xlat outsl decl jp mov (bad) lahf mov xchg jo inc push xlat jbe shl push jg fadd cmp mov jg jmp pop mov ss shll (bad) aas jg insb and mov adc mov jno sbb mov aas arpl dec jg mov xor adc add push sub xchg mov jg imul jg daa lret adc aas rolb dec adc pop inc dec jg xchg xchg popa or aad or cmp pop repnz (bad) pop add jb sub dec js or dec sbb incl jg ja xor mov jg pusha adc sbb daa jg xchg xchg sub les pop (bad) pusha push addr16 imul stos lahf ja jecxz lcall and ror sarb mov scas popf jno jb xchg dec jg cmc sahf popa mov cmp bound cmp scas push aas and mov pop xchg push idivb sub fisttpl mov sub (bad) add aad fsubrl int stos pop jo dec xor and scas mov aad cmp adc mov inc imul ret shrb jo push xlat test jg xor sub ljmp mov testl jg ret mov stos adc jecxz (bad) hlt test fbstp sbb (bad) stc mov jg jb lea in repnz jge popf test add xchg jg xchg push insb adc inc (bad) inc into xchg scas jge mov (bad) mov mov popa pop (bad) cmovp clc add mov mov xchg mov pop test popf jmp dec jbe cmc out jg mov fisubl xor add adc and push aam hlt jg and mov lret and mov xor iret ljmp (bad) fisttp in popa cltd xchg push sbb jecxz sbb push mov cmp jg lahf mov mov outsb sub lcall sbb sbb xchg jno mov (bad) outsl sub sbb push xchg pop jnp jle push scas shr js cmc out pop rcrl nop ds and enter aas out pop (bad) jns inc (bad) cmp ja adc lods mov or mov test jg lret mov insb sbb incb cmp data16 dec mov sub scas push mov mov cwtl pop lds mov sbb sub in pop sub imul xchg mov xor pusha cmc (bad) aas stos into sub (bad) jg fsub fs ficompl stos cmp leave dec jg sub test inc jle das lock pop andb aas mov arpl cmp jle or xor or dec sbb mov out scas xchg movsl (bad) jg dec xlat sbb cmc and in jp es (bad) jg scas aam mov mov jg orl pop jg mov mov stc sbb pop xchg arpl jbe std mov mov push adc imul mov cmp sti sub aad sahf cli dec lcall push and mov pop sahf mov mov mov inc js fisubr and pop loope xor popa insl mov jg sub push js fmuls dec pushf mov inc inc mov insb cmp aas inc jg fimull pop jg xorl mov bnd stc mov jg mov int3 xor jecxz xchg xor mov lods enter lea add jg orl mov mov jg mov (bad) sarb in cmpl adc mov js leave mov mov jg mov and outsl andb rcl int3 xor stos test inc pop jg mov sbb out cli sarl xor inc enter xchg mov or cli jge jle in movsb in sahf sahf push sbb mov ds test addl fld aas outsb xchg popf add cmpsb mov cmova and fnstcw insb fisubl jl hlt mov addr16 xchg into sti push sbb jnp adc jg enter xchg outsl jg dec cmp fstpt (bad) scas sub leave test repnz cmp add iret pop jg dec sbb andl jb xlat push mov leave cs mov data16 mov mov int dec repnz insl stc loopne jg and or scas lret mov add imul loope inc in aas mov push dec mov inc push out je stos inc das (bad) mov test xorl and stc dec pop jg int3 es mov lock (bad) fistpll shr jno sbb arpl jg sub xorb cmp and jb out push cltd shrb loope,pt pop insb mov add mov jg or loope and jmp cmp lret cmpsl jg jns je inc adc jg jmp cmp inc mov jg repnz fnstsw sub imul les xor mov adc sub sbb mov fucomip hlt es cmp lea out jge dec lcall repz xchg mov sbb sti pop out mov sbb rcll fistpll out ficom ljmp and rcll notl pushf outsl daa ret mov xchg sti lods int out pop mov lahf aaa add (bad) ficomp dec adc sarl push dec inc (bad) (bad) cmp jp sbb jg fsubr addr16 (bad) jg cld adcl inc mov mov cmp pop xchg dec (bad) pop das mov xchg test imulb jmp dec int adc mov mov lahf mov push sub (bad) notl jg mov mov jg mov mov cmp cmp pop enter xlat loop into push movsb (bad) dec popa inc push jg and inc shlb mov fisttpl add mov push sahf js adc mov enter jge (bad) jg sub sbb rolb cltd sbb cmc jb and or pop pop or loope outsl jg pop ret ljmp inc jge xor jg mov std cmp xor sub push ret ret jns mov ret out mov fisub lret jg sub in aas or add sub dec and add jg cld or cmp pop daa cmpsl int3 push (bad) jg bswap addl mov lret (bad) dec pop mov jg cltd push cmp jg clc aas cmp jle cli outsb cmp (bad) mov sub (bad) movsl mov dec lret lods jno xor cld adc jg push in imul jmp jae movsl (bad) cmp sahf jp mov mov les push push jns mov push imul jne jg notb lret xor hlt (bad) out xchg cmp push stos and test adc jg add dec cmp push jg sbb cmpsb jmp icebp mov mov sbb rol jg mov xor cli pop test mov xchg lcall jg mov cmpsb mov fidivr out in push pop loop jg sub or push cwtl jg xchg mov adc outsb dec jg leave mov andl movsb xor jmp (bad) or jmp pushf fcomps mov xchg rolb inc mov jg pop fstps lods sti sbbl cld jg shll jno push stc sbb jg loope hlt push in push jg sbb jo adc sahf jne add imul mov sbb cmp jl add sahf dec mov pop pop or aad ljmp dec outsb inc jmp mov int sub in jg std cs mov outsb aad pop xchg jge xchg push jg xor inc jg cmpb xchg (bad) sub js jg mov mov jno cmp mov out adc mov adc lret jbe or sti (bad) cmpsb xchg (bad) or (bad) insb stos inc or sub test sti push pop and dec lret xchg inc jl rclb js xor xlat pop mov in jns pop xor leave jle (bad) outsl xchg outsb dec mov sub loope mov sbb sub out movsb fadd fistpll outsb dec fidiv pop add call mov jle mov (bad) js jnp dec dec add mov inc stc notb inc and xchg sahf andb mov movsl cmp cmc or lea jmp mov int3 jnp in sbb adc int add dec dec adc mov leave cmp xor push mov cmp out adc mov es aad dec mov mov push cwtl aas lds sbb pop dec xor add push sti pusha stos daa pop push push pop jne inc jg or or add iret scas dec enter aaa jg inc cmpsl add inc mov push fs sbb jg int xchg and and cmp jg lds or pop add push or dec jg test push inc imul dec sub jmp fsts stos xor xchg aaa pop popf mov sbbl jne pushf ds dec add sbb mov push fs xchg jno arpl rcl leave (bad) je jg mov sub jg pop insl push fisttp mov xchg (bad) or cmpsl in jg loop imull and mov xchg lods orl fldcw push mov adc cli arpl cmpsb jg inc in jne mov addr16 mov xor or stc push jle jne sbb fistpl test or or inc mov mov outsl pop inc cmp cmp cwtl aaa push dec mov jle adc stos insl aam cld mov dec jnp or and lods (bad) in sub rcr push pop mov jg inc pop jno stc (bad) ffreep js mov xor fimul adc mov cmp lcall pusha dec mov mov adc aaa jo jmp jg xor push arpl (bad) mov fildl test jg push lret (bad) in cmp xchg sti cmp xchg outsl pushl ret les jge cld mov push push mov pop test push mov dec jbe jg push stc add or dec lcall dec mov movsb inc or add sbb add sub repz jg xor cmp add jb cs mov jno mov xor dec xor inc out inc data16 stc adc mov test mov loop adc decb (bad) mov jmp fstps nop cmp lea jg xor pop daa jnp fidivrl (bad) sub mov ss sbb mov shr add pusha ss dec push add inc jmp jg dec adc repnz xlat shrb (bad) sbb jg (bad) pop call (bad) je lret les xchg loop push mov push outsl jg int3 push daa les (bad) jg andl pop jo adc inc dec xchg jg mov mov jg xchg xor pop popa jne jg int jp loop loopne cli inc pop sbb (bad) add mov or jns inc push (bad) in fs nop or sti outsl gs pop cmpsl mov cmp movsb (bad) and (bad) or jmp adc fisubr jg ds pop test daa jg pop notl lods stos lahf jg push orl imul push js cmp mov enter int3 je shlb out bound gs (bad) sub xor int in aas stos ljmp pop aad xchg inc add sub mov inc (bad) jo imulb mov stos push jns icebp jg mov sbb jg jae dec insl pushf lahf sti jg mov push cmpsl out insb sbb pop sub push jg negl dec add mov jg inc (bad) sbb jg add icebp mov loop imul insl dec jg aad fnstenv dec jne xchg lea sub rcll dec mov lock inc add push test mov push mov ret ficoml dec dec stos fistpll xlat fldenv jg push and fnstsw sarl cld add lcall and cmpsb pop orb idivb inc es dec push jg push mov nop inc jl jg xchg xor sarl divl insb mov sarb nop lock jge push iret or sarl mov dec adc dec sub lahf or and ret iret cmp mov jns and sbb mov fs sti pop mov lea or cltd push jg hlt decl mov popf mov and rclb pop pop cmp pop insb add fiadd jbe push (bad) dec shrb adc (bad) int aaa fadd scas jg mull icebp jg in fwait push dec or (bad) aas insb dec xor and nopl xor jecxz and jg push bound xor push out push jp in addr16 sar (bad) jb (bad) mov cmpsl pop pop popf imul push xlat jg insl adc lahf fnstcw cld adc push test outsb lock sahf mov push mov fdivr idiv in xchg pop pop in dec jbe push stc mov call out fcoml addr16 (bad) and movsb loopne cmpl or jg rolb cltd sbb pop push insl dec stos fnstcw jg ja pop test in jg mov or xor lret mov pop lock jg notb mov add dec push pop leave jg stos or scas setp aad daa inc xchg dec jle mov js (bad) pop ret pop jg insb repnz mov out shrl xlat pop dec sbb jg mov inc loopne pop jle ljmp int mov lods lret xor jae mov sbb xor mov rcrb scas jle cmpsb xchg pop inc in and push mov adc inc in pop lret loopne lods or enter mov adc out sbb add inc aas roll mov icebp fimull outsl fstpl mov mov jg sbb cmc (bad) push xchg dec sub lcall pop jg push or outsb jg cs fs jno aas incl lcall stos pop cld fmuls jg sahf hlt loopne fs mov loope dec icebp pop inc dec jg xchg inc clc adc lret bound lods mov mov adc lock push lds lret pop add and dec adc pop xor and jp mov adc dec dec lock stc add pusha imul add aas inc ret stos sub pushf aas pop jecxz ss loope ja and sub out hlt or pop pop sub jno popa lock jg push lahf pop enter and jno outsl je sbb aas outsb cs out imul inc pop inc stos jg movsb sbb rolb sbbl dec dec mov sub addr16 mov cmc jecxz and pop punpcklbw xlat adc jbe lcall pop sar or popa insb (bad) jbe cltd sbb out xchg push mov mov cmc nop (bad) gs mov mov xchg jns ret inc mov pop test ficoml jg pop mul sbbl js faddp dec lea sub std aas pop jne jl mov dec or mov mov and fsts sbb jns push repnz jg xchg sbb mov lea jge add inc imul dec aas addl inc inc popa mov es pop mov shll push (bad) repnz ss xchg adc mov jg nop cmp es insb inc push aas push and xor sub and or jg pop adc imul pop loope xor add xchg xor cmpsb scas jecxz aas mov push (bad) xchg out outsl jg add fs int3 mov mov mov adc inc cmp inc adc jg enter cld pop (bad) mov jle in movsl inc jbe arpl jg fmull dec or lock jno mov pop loope push xchg repz jns mov test jg mov nop test pop pop jg outsl rorl xchg std mov mov jnp (bad) addr16 mov js jae dec (bad) inc jo out test movsl mov in adc lock aas sub arpl adc in sbb (bad) roll mov pop jg daa mov adc addr16 int lods push ja adc pop jmp imul add sahf jg sub fistpll or cmp pushf fstpt pusha and sub imul sbb sarl add loopne xchg dec sti leave stos mov jecxz push adc int cmp mov jae inc jg imul pushaw mov jg jb xchg cmp out aas dec sub xchg imul ja lds lahf mov (bad) fidivl mov cwtl mov out sub push mov pusha jae gs push (bad) in mov inc imul jg outsl aam mov mov mov addr16 out int3 ret pop mov pop ss jno sti xor xor lea cmp push inc jl js push call test mov or dec das and mov pop nop adc (bad) fldcw jo pop icebp jns divl out mov add push adc pop push outsl mov and pop iret sti dec mov xchg dec ret inc mov divb adc lds cmp xor or dec sub push mov xchg jg gs clc add adc dec nop icebp or jg not cld mov push mov leave fidivr mov ja mov mov in and pop jg icebp adc xor mov pop dec cmp test cmpsb push mov outsb fstpl call mov and movb pop jl mov rorb inc xchg adc jg lret into fsubr xor dec je cmpsb das jg lahf or lods add jle data16 inc jg int3 daa dec mov fwait into jg ret clc gs mov add aaa mov pushf jno in pop inc push imul add add sahf sbb cs mov push push out jg dec push add jg xchg les mov aas imul jae add aam or outsl cwtl jne jg fimull in ret outsb fbld imul imul je repz push scas das cs xlat arpl or push jg jmp aas jnp pushf or lods or mov mov mov es push and jg jnp jb add inc jg pop push mov push scas cmpb push iret and jg cmp jbe xchg repz mov add (bad) cltd bswap fsubl lods jg scas arpl mov aad fisubrl and daa inc aam sarl and arpl cmp fs add cltd cmp cmpsl dec idiv or jo sbb (bad) hlt mov cmp scas mov xor push jg cmp inc push pop fidiv inc mov jnp arpl lret push or mov xor scas cmp sti faddl mov pop mov jge cwtl andl or mov js ret pop cmpsl and insb int out ret jg mov jo inc jg test jno jg mov cs push aaa pop add int jg xchg mov sbb ret in out mov test insb fimull jg sub outsb or lahf sarb mov cltd cmp arpl push insl xchg cmp pop push out aaa pop add (bad) fdivrs dec aas ljmp das std fwait stos (bad) and aas mov pop mov xchg jle (bad) push dec fisttp aas mov iret push pop mov jbe stos xor cmp inc mov jg rolb cmp (bad) (bad) jg mov aas je gs sbb shll pop push cmp mov in jns lcall xchg sub in jg je cltd or pop inc andb jg scas push cs cmp sbb dec clc test mov daa mov daa xchg addr16 jg or lret push and and in dec ret jg js inc movsb cmp mov in das lods mov sti imul and mov mov stc mov aad dec or pop and xor (bad) jne popl jg inc out aam dec insl test push popa inc jg push lret outsl imul mov mov inc mov adc cmp (bad) or bound shrl lods (bad) aas aas scas lea xchg jmp div xchg add fwait sbb inc pop jg or test (bad) (bad) jg lds inc mov sub aam pop cld lock lahf pop pop add mov enter lea ret cld sti mov (bad) or xchg mov movsb push sub jg push sbbl jp mov adc pop (bad) in and sub pop dec jl rcll xorb jg fildll lock inc pushl dec jb orl inc insl sub or dec cmp sarb lret jae lret rclb xor lods mov inc ss adc mov cmp mov je or bsr js jecxz pop jo std push mov lea jg fild leave cmp test xor and lock fldt iret dec pusha movsb jp xchg out push outsl pusha push adc cwtl jg (bad) push add es cmp (bad) xor jg push cmpsl sbb fmuls jg in shlb clc inc ljmp and es pusha pop jle les loop (bad) or xor lods sub mov dec xor adc sbb push or inc sub mov fdivrl loop in clc movsb sbb (bad) pop mov out scas adc adc (bad) sti or loopne mov sbb add sahf xchg cmp aam int3 or cmc loope jle pushf in testl mov arpl je shl mov mov cmp push mov pop pop jg shrl inc mov inc sbb mov jg add cmp jg jno add mov movsb cli lret sti jg out push insl sti xchg cld and dec mov mov jl dec jmp mov or mov movsl jne adc (bad) xchg and js inc imul loop inc lret pushf sbb fs pop inc adc fstps inc (bad) jne jno xchg sbb or mov jge jg jp mov aas ljmp inc fistl loop (bad) xor ret jg jnp enter dec jg rorl and (bad) negl (bad) std (bad) cmp rcr loopne cmpsb inc aas repnz adc mov mov arpl ja loopne cmpsb xchg pop mov daa jg imul data16 jg je sbbl inc gs cltd adc in pop mov add out in inc mov je push jge aaa into shl jg insb in loopne xor jg aad movsb stos mov mov lea es invd xor and bound push push inc mov jp dec ds sbb addr16 cmp or test cmp jb pop jg cmp mov cmp or adc jg mov ret lods loope jg mov mov inc sbbb add (bad) push sub pop jg pop adc add hlt xor mov fisttp xchg cmp cld or ss mov inc sti cmpsb push call sub jbe sahf pop jg inc sarl xor add leave sti cmp icebp in mov sub aam sbb sub xchg je jg cmpsb add push mov stos dec das popf cli xlat jg loop lods mov mov pop mov mov jbe clc inc xor ds in cmp xor (bad) mov pusha mov inc jg (bad) fs movsb test jg push dec lret mov ljmp pop jg popa fcom and push jg dec sbb xor and mov cwtl push test mov mov pusha repz jmp mov xchg (bad) clc mov sub idivl arpl mov or lcall jecxz jbe sti out into and outsl sub enter jg,pt fcomip xchg mov push jg ja (bad) out xchg mulb push mov sti jns mov dec mov dec shr cwtl mov les icebp fcomip out loop mov pop lods dec cmp cmp test fs or mov dec mov ret mov push sbb cmp or (bad) cmp test call hlt mov push out xchg jg sub jo jbe imul (bad) fadds jg sub pop in mov push sub mov sbb inc xlat pusha xchg scas loopne add inc or sbb popf jle insb push pop sti icebp ja loope pop push hlt xchg test push inc mov pusha adc jo rorb push or jg and aaa hlt test adc jno jg jo fldt rcl mov dec dec ret div rolb jg dec lret test add xlat inc (bad) fidiv dec insl inc (bad) mov sbb jmp cmp and and jg repnz jno out mov jo lret jg sub jge adc cmp dec mov and idivl cld (bad) shrb loop jg jnp add jg daa jmp lcall pop outsb or fcoms cmp cs add push jbe or (bad) iret aas push into ret repz popa jg sub mov jg inc mov inc call pop xchg orl movsb out fisttpl lds ja jg or (bad) jg mov adc or inc and dec (bad) leave xchg ficomp repz andl mov xchg jmp rolb lcall ja push popa xlat jg outsl cmp jmp rcll cmp xchg bound push cmp sbb xchg mov dec jg mov xor push leave (bad) adc cmp push jg adc jbe fs xchg jg ret mov cmpsl mov aas xrelease jns pop (bad) rcr jg adc push ja dec mov movsb notl add rolb pop (bad) roll jg repnz xorb inc aas dec xchg fs mov sbb mov dec fnstsw or ss in jg adc jns scas test repnz add sub mov testl mov aas outsb test dec jae jg xor jl mov insb int3 xor inc mov mov lahf std mov inc add lret mov jns push fwait ja jg (bad) xchg stc out cmpsb lret dec inc (bad) mov jle mov push pop loop cmp imull test xchg mov and and xor pop jg push lods jmp jg mov cmp sbb aas iret movsl ljmp mov lods sti and push lds int3 stos sbb mov inc out faddp fisttp inc scas inc jg push adc inc jg jnp mov xchg fstps shrl pop fbld xchg mov jp push daa mov adcl jle repz mov mov loopne and cmp mov stc sti xlat sarl nop inc ss cs jnp cmovns dec dec sti xor pop clc dec sub out and mov pop and jg lret test jg aad mov jg shr add inc aaa aas push stos or loope jg ss loopne,pn cld jg push test jg or jl data16 out cmpsb mov jg mov dec adc push jae sarb repz sub ja (bad) repz movsl jg xchg mov push jg aam outsl pusha ret sub and xor aas xor mov cmpsl mov mov ffreep pop movsb push hlt dec popf imul adc mov ja xchg xor push jno pusha inc xor jg jp jbe test pop arpl popa inc bound cmp and pusha outsl jg push es rcrb fcmovnu negl push pop or jg add inc sub or xor popa mov sarl xchg xchg and or lret mov mov add xchg jmp or jnp jg out adc jg cld pop mov jo add cmpsb es fs dec popf ret jbe cwtl mov int3 push jae stos jg ja rcl push sub lods lock xlat popf jo jns jg add xor hlt in es arpl outsl push push (bad) ljmp movsb or cmp jg out es jg mov sarb inc mov xchg ljmp adcl cmp cmpsb (bad) sarb mov add push mov jg pop inc ficom scas js xchg add dec mov mov xlat cmp and push popa leave (bad) in out jg mov ja mov les fistp aas mov and subl push mov jg sub ret mov or cmp popf inc adcb clc icebp insl sti dec fistl adc imul jb (bad) or fisub push jg inc add mov outsl xchg mov das aaa sub jbe popa jbe loopne jne jg push jp ja inc pop jg push pop in mov jg mov xchg cmpsb pop movq inc dec lahf jno out test cltd jnp jg add (bad) lahf jg sti xchg and iret inc or pop cmp clc jg adcl jg insb shr mov push jg mov push sub adc add scas ljmp mov jg mov or aas (bad) cmp nop mov sbb inc out and jg mov inc lods sbb shlb movsb jbe dec js out lcall aas adc (bad) cmp inc pop mov xor or xchg jg jb pop popa loope mov cmp inc jbe rcrb mov and aas mov add or sbb sbb lahf adc adcl repnz xlat or jg and push jg lret or rcl (bad) into out std push fwait sti je and push xchg fst aas flds mov pop jl jmp out adc adc and aas push movsl lods sbb jnp mov add jge cmc into ret and dec inc cmp jb sub inc push inc mov sbb cs xchg jg dec in jo xor mov je ss mov jg fsts (bad) dec mov jg sbb gs or fstpt cmp mov cmp test frstor lock mov in jle inc (bad) cmc jle sbb or jg rol xor ss fldcw popa mov or push sub adc jg mov mov imul adc mov add frstor out jne fcoml insb cmpsb outsl repz cwtl and xor psraw jg xchg (bad) add std xchg xchg fild jae jb jl inc xchg xor jg push xorl lahf stos push jg or pop fs sbb cmp scas or jg sub fist inc sbb sti and xchg cmp int ss xchg xor (bad) xor out inc aas or pop jg aad add lret mov jp fsubrs push or jg or fsts inc sahf mov or or jg loop sbb xchg out pop fdivrl mov leave (bad) incb icebp addr16 sub jg mov mov (bad) and js daa mov enter cmpsb mov mov jg or jbe pop sub jg adc outsl jg mov loopne data16 mov cmp sub popf add stos push sub mov icebp lret adc bound test pop sbb pop roll mov mov and xchg in ja in push imul adc popf jg jge xchg push mov jb jns mov fstpl jg xchg jo mov pop jg inc ret sarl scas mov xlat jl add xchg cmp jg mov arpl loopne pop pop int3 and test xlat xchg gs das sub push lea ret aam mov xor mull or in mov je fdivrl inc nop fidivrl ds jg outsb add inc mov mov je sahf jae (bad) jno out dec in mov push or add adc icebp cmp cmp incb mov sti xor mov pop push pop pop xchg fidivr mov sbb inc push jg into push outsb call sub jecxz xor mov sbb (bad) and dec ret or sbb dec pop notb xlat xor cmc or jg sub cltd lret jg fcmovne fwait sahf insl outsb insb jg mov and push in jp mov cmp std test jb insb push pop (bad) mov mov pop jg adc aam mov jg fstpt cmpsl out pop jg lea jg sub xor push adc push repnz mov mov cmc arpl jg popl movsl jmp xor push out sub push push and ljmp pop mov lahf jg dec and push xor jg adc ss pop mov mulb jecxz mov jno fs pusha jge mov movsl mov lret imul push bound das lods into lods clc inc jbe mov dec ss xor cmp fwait add xchg leave insl imull mov jb adc jg xchg imul push push and mov push fsubr js adc add fsubs push sub ret shll je fs adc repz adc fcomip jo mov xor jg shr inc pop dec dec jg mov push dec insb in push dec out mov sti popa (bad) mov jge adc out or (bad) ss daa lahf mov outsl addr16 addb jg ljmp jg adc addr16 or mov mov cmp jb mov fwait movsl shrl adc pavgb jg pop add pop bound dec jg xchg mov cld negl sahf call cmc sbbl push cmp ds dec jg ljmp jae mov jb add adc imul lds fwait insb in push inc inc mov lods push sub jg std out das inc inc lret cld jg fildl in jmp cmc or cmp xchg pusha loop jg pop dec cmp in push (bad) movsb (bad) add (bad) push imul adc test rolb jg mov cmp mov pop sahf xor bound test mov fildl push inc (bad) mov pusha lcall movsb pop mov jg lods jne call imul add jg sti xchg ds les mull push popf add or sub or push bound xor (bad) lret xchg dec sahf (bad) (bad) outsb add push insl xor xchg cmpsb enter push push mov loopne test cmovae dec cmpl xchg xor sub jg push inc movsb arpl in orl out push ja popf sub xchg adc or push arpl aas mov lods push dec das or xchg and imul aas jg pop repz insb pop test insl inc jbe xchg rorl pop push cs js fcompl sbb shll jae jg (bad) sub hlt jg ss rorb cmpsl jge pop jno pushf mov ss push jg xlat push mov mov pop sbb push pop jg out xor mov jg notb out pusha in shlb xor or jg mov fidivrl inc or mov mov sarl jae hlt and imul add std loopne add loop jg sahf ljmp jl cmp mov cmp mov push rcrl pop push movsb mov dec in mov and (bad) cmp pop aaa dec decb pop or incb jg sub adc enter ret and push cmpl mov repnz cmp pop xor and adc in andl std mov jne lods lahf or xchg sbb sti ret lock int3 jb mov (bad) loopne mov pop jecxz stos es enter jo xor hlt jg dec nop aaa dec fdivrl ss mov test test jne pop mov xchg and mov dec and pop inc fstl jnp pop add jle insl xchg cmp lret sbb sbb jg mov cld imul dec lds jge jg movsb jl mov fbld out mov xor scas jg sarl xlat cmp js pushf loopne or rorb add ret jge push bound in lods push push rcrb dec stc jmp cmp ds adc jg mov fsub jg mov popa xor push cmp push jge js ret sub (bad) leave cwtl jg adcl (bad) mov cltd mov push xchg adc and movsl lret jg lea xchg ret jmp or xor leave arpl sub mov data16 aas ficom jg sti push lcall sub fistpll mov jge dec sub jg into stc or jg imul jg dec xchg in movsl bndldx jne in pop xor stc jge enter outsl out fsubr sbb aas jl mov jg dec stos inc jae lds adcb enter out jg sbb dec notl (bad) pop mov ficompl clc aas lock dec cltd insl aas add add test outsb jg mov adc (bad) sub cli addl sarb mov inc imul out jle dec out mov jg fbstp lods ret repz leave inc jle cmp mov xlat ret cwtl lea jg insl in mov xchg sub pop fildl enter mov mov (bad) jno xor clc adc call leave std jg ret xlat xor sti sub xor pop mov cmp inc movsb pop and dec sbb mov push (bad) pop xor add outsl mov cmp dec and jg cmp mov dec jecxz pop gs sbb fs push inc dec lods mov push inc jmp dec or lea cmpsl repz push mov jo nop mov in xor sub mov push pinsrw mov data16 xchg sbb adc sbb sbb fwait add cwtl out outsb fnsave jo aad sbb sbb test dec cmp push fsubrs push nop mov push or dec add hlt push into jg and in jne jecxz mov popa jg sub scas sbb jmp jg int jo test (bad) jg fimul sti push pushf adc shrl gs jg mov out and out pop imul data16 xchg jg sbb jg mov out or mov mov push lods (bad) ret pop pusha dec js mov pop lock jbe inc jmp sbb fistpll add inc adc or mov cmp pusha js ret push fwait or imul cmp fisub rcll adc ss fiadd mov (bad) jno bnd cmpsb pop mov mov xor inc fs jg mov nop loope sbb mov mov jbe mov mov mov jl push fisubrl cmpsb push ds inc jle shrl jecxz ret jg movsl (bad) push mov cmp das and dec aad jg loopne sub in jg mov mov xchg (bad) mov mov in sub push push push jae addl inc xorl push imul outsl push jg ror out xor cmpl aad xor fwait sub jae out push jg lods repnz fucom dec jg jne cli xlat push hlt mov js jge stc mov jo mov inc inc outsb push jg mov lret cmp sub xor and add pop jg jle loope mov mov or in jg,pn mov leave test mov xor out stc clc lahf jg pop ret pusha loopne jg in adc leave mov push jmp inc jg push (bad) xor int3 jg scas pop ret andl and pop bound mov mov popf outsl jb cli popa movsl jg hlt sub dec jmp push jo pop jg adc push jg orl and test mov ja xchg jns pop dec dec bound and push inc sbb inc and jg add fidivr lods dec and mov and xor mov jg rcrl xchg dec aaa stos jg popf lods cmp jg imul dec popa xchg jg dec jp mov xchg push popf rcrb insl (bad) divb ret ds xchg and test out xor xor or enter outsb xlat push xor stos jg (bad) cmp ror and notl xorl dec lret js js sarb mov dec jae sti inc push nop int stos mov or stc enter sub (bad) xor lahf jp sub aas jb jae fsubr mov nop call mov scas sbb push add (bad) jnp jp or cmp repz pop into add ds aaa dec mov ror inc xlat push insl jg add and imul jnp loope pop int adc scas dec jg cmpsl cmpsb sbb push leave lods inc jge xchg pushf loopne mov stc push loop test jg das sub sub fidivrl xchg add mov in lock faddl (bad) push jle sbb call push repnz nop sub mov fbstp (bad) jg jo lahf movsl sub call jmp jg pop pop push hlt adc jg pop mov sub addr16 adc push add inc cmp inc cmc cmp jae fcom ja repz jne test (bad) jg (bad) dec inc mov out inc rcrl je test mov mov rcl jns sub fwait leave sti (bad) inc push xchg cmp cmp mov or xchg lods sbb imul jns jg mov fdivs adc jbe pop out and jg cmpsl ljmp stc jg xor arpl dec jns js xlat std insl sbb movsb jg bound mov (bad) fs and and xchg mov and xchg push ja dec pop ds jg and scas add push jg xorl stos pushf aad in jns jmp sub (bad) xlat popf cmp or push jle notb mov jo jl mov dec loopne inc jnp push jns add jg lcall jg or addl inc mov rorl call lods in subb iret fnstcw inc scas bound jns jg pop std xchg scas in cmp push mov xchg inc jae stos jg movsl mov js ret addr16 pop fadds adc je dec jg (bad) decb inc jno ret lcall mov mov mov inc dec xor pop loop lock push add scas loopne rcll jo in out adc pusha scas adcb jle cmpsl int3 pop jae jg or adc dec mov sti dec mov pop ja mov es jg or xlat jg aad jmp cltd inc dec lret or jnp leave ret (bad) jmp fdivrs mov js jge xor dec jg push cs jg adc xor fadd sbb lcall int3 call add fprem1 mov jg add dec mov mov rolb gs repz mov mov lods sahf pop add scas mov dec jbe nop rcll shl xchg mov hlt daa jg cmc mov mov push jnp jno jmp mov pushf mov cmp rclb or inc cmpsl adc add nop mov xchg aas pop outsb xor sub std pop clc xor add or dec jno mov adc mov mov or adc xor dec inc jns daa or push movsb ficoml fwait jg je (bad) imul jg es loope in mov cld fdivrl inc aam movsb and sub inc jnp iret fsubs jg mov push fstl cld pusha jle mov popa cwtl mov and lds loope cmp and mov push rorl stos xchg mov sahf xor fwait jg adc xor and dec dec in sbb loope aam fcmovnb nop bound mov int cmc pop pop jg cltd jbe and aam jg pop mov (bad) aas mov xchg cmp xor mov mov insl jg mov xor inc sbb ret mov sub push insl out cmp std stos pop enter hlt sub shlb int3 repz or jg ljmp jg addr16 scas mov dec mov jg data16 sub jo sub das arpl xor ficoml mov pop mov push adc sub mov popf mov jp int3 jg leavew loop ljmp je daa mov mov jmp cld les fdivl cmc jg cwtl fimull inc lods loopne (bad) mov mov adc sbbb push jg sub in xchg call xor (bad) lret mov sbb movsl lret mov lods notl outsl mov iret loop push jg mov pop dec lcall xor outsl xchg push movsb outsl or mov xchg cmp inc fisubl sti mov sbb repz je mov fldl mov cmp inc call sbb test mov mov dec ret sbb xchg mov or lods sub test push jg pop pop mov and mov mov movsl jb hlt fs jmp aas xchg mov movsb ja,pt outsb sub mov cmp mov xchg fisubr sbb pop jbe dec mov mov mov inc and gs pop pop jg inc into scas test jg (bad) mov imul rcrb jno shl (bad) mov fcoms jecxz xlat xor enter add jg inc lds jbe pop dec jno lahf adc pop outsl push mov pushf inc sub nop loopne jg jle jl sbb dec cmp outsl pop pusha icebp lock movsb bound das sbb and cmpsl mov fnstsw rorb xor (bad) xchg xchg push js addr16 jg fstpt mov cld lods and mov loope inc or pop fildl lods (bad) cs push push adc jg scas (bad) leave or popf mov cmpl jg into sub push pop (bad) jg mov xchg (bad) repz js xchg or and leave xchg in xlat jg cmp incl or aad bound ficom and mov imul sti jg adc pushf bound fnsave sub flds pop sub clc ds mov leave add jg cltd add jg es mov testl jmp xorl aas sbb pusha les es mov dec pop in imull jne xchg mov add mov rclb jne mov (bad) lahf stos mov dec pop iret rol test sbb sub (bad) xor imul dec mov std popf sub test adc dec add mov cwtl mov insl jg mov xchg ds jecxz sbb jle insb and mov mov push in bound dec mov pop add divb icebp pop rorb jg iret sub (bad) mov sub xchg jns ds dec nop int3 je stc test adc lods xor jb xor push ret ds jno cmp mov and test inc stc inc jae nop jg out sti pop aad cwtl (bad) xor ljmp xor sbb xor jg jb in test xchg xor pop lods outsl push aaa cmp dec fidivl or jg jbe,pn mov enter dec and ss sahf or fild aas sbb mov aaa pop ret fs and out pop jg gs fldt dec into jg mov (bad) sub mov sub xchg jg mov in cltd (bad) shll pop jg popa mov jno pop mov out ljmp mov loopne inc push jg cmp push lret sbb call cli add stos lock adc pop add cli scas loope les add dec inc bound adc out fiadd dec pop jo xchg insb lahf out in jg (bad) jno add (bad) jne dec dec sub into movsb fucom jg or ret popf sbb inc lahf or and push les jg hlt decl loopne jg (bad) jno push push (bad) jg mov cmp lods jg iret mov leave xor outsl mov xor aas jg add movsl cwtl pop sub jg out fsubl (bad) and inc movsl mov in (bad) test inc dec jg mov dec sub jnp sbb jg ja addl addl jg push out loop je cmp jnp or movsb jbe mov pop inc lods add pusha jno fcmovnb fnstsw enter in leave jg jmp mov pop mov in lea out xor dec je fadds sarl mov test cli (bad) ss sbb lds jg stc and repnz loopne aas pushf movsl push fidivl bound dec in sbb es inc cmc add idivb in cli lret push (bad) mov stos adc aam jnp mov adc popf add fidivr movsl sti (bad) cmpsl cmc jns sub mov push jbe dec xchg enter out push xchg pop mov sbb cmp xor or jg enter lahf int mov jmp mov (bad) add dec aad or and push mov (bad) and or loopne loop push sub jp sbb or push (bad) mov fsts sti (bad) ja mov xchg es in mov inc lret cltd mov daa xor push cltd imul jg xchg inc mov imul jge mov out push aad mov loop inc imul pop out jo sti xlat lret jg pusha push iret or mov ja mov jg jmp inc and xlat test dec mov mov dec lods mov call adc js add inc dec add jg enter (bad) xchg jg mulb popa fdivrl int jg (bad) sub call inc leave arpl push iret pusha push cmc and imul or cmc jg mov faddp mov mov inc loopne jg sbb int xor adc (bad) (bad) or jb sbb jg fmulp sbb icebp jb mov nop jecxz jno or xor mov inc outsl sarb fimull mov (bad) pop mov mov jg push push jp popfw pop jg pusha xor insl dec xchg pop jecxz call mov addr16 push xchg mov pop icebp movb mov mov or ret jg clc cmc push and add enter cwtl ja out subl shr push ret arpl incb mov outsl imul jg insl sub fstpt addr16 je adc jg xchg dec pop pop mov and orl mov js jns jg ljmp pop sub xchg push movsl loope (bad) dec lret dec int3 adc fisubr jg mov jno jne mov pop pushf test lahf jecxz pusha das jmp enter dec mov daa arpl jg xchg out push rcrb (bad) or and jg in insl rolb xchg fisubl mov push jg push mov jg mov movsl jno jle mov lret and ret push mov testl lock ret xchg xchg push adc stos jg aam push sub mov xchg jmp jbe insb ljmp call (bad) push dec xor jge push out ss mov cmp push fmul push sbb mov mov sahf jecxz add (bad) jg (bad) test data16 clc fs ret ja sahf jg adc or xor xchg fadd xchg cmp imul inc push jmp jecxz,pt dec iret push mov inc js or xorb popf adc (bad) jg pop pop or pop orl mov (bad) cltd jb lods mov jg lahf push aaa mov jg fwait dec push fidivr repz mov aam sbb nop (bad) xchg jg cli loopne leave idivl cmp mov or inc push stos jg cvtps2pd (bad) push jg push arpl jg push mov imul jg xor mov mov jnp sbb pmaxsw in (bad) pop xor inc test mov outsl jg nop mov arpl push pop sbb mov mov mov jg cmp into jg push scas xchg adc ror and adc sbb leave les movsl pop mov jg pop cmpsl movsb not jnp jg mov bound mov ljmp in shll sbb or loope popa sub mov adc dec js clc jg (bad) insb mov mov mov add or lods jns sarl sbb popf add hlt aad dec jg mov addl addr16 das cltd mov popf pushw mov jle scas xchg cmpb add jg jns lret jle out mov push ja or and (bad) js mov xchg stos dec adc pop addr16 ret sarl mov sub out push outsb mov add lret out repz add aas dec mov push lock inc out out push (bad) lcall xchg and fiaddl movsb xchg stc les jno sbb rol ds gs stc aam pop jg adc hlt push in jg sbb int jae iret mov jge mov or add inc jg xchg push das imulb fwait jg mov cmp jg test mov std dec scas ficompl push jle jg je or out mov pop lea test cs pop cmp call bnd push xchg out cmp xor aas adc cmp jle inc mov inc popf stc movsl iret add pop pushf icebp sbb rcll mov mov mov sti xchg cmp mov inc daa sbb dec mov push outsl cs pop lret ss push mov and roll cmpsl xor or fwait pop jne inc mov add test add xchg jno sub mov cmp mov inc xchg mov sarl popa pushf jo cs fistpll dec mov imul arpl push std jne,pn push push out mov mov jg xor sub xor lcall push repnz jg fcompl adc js in les lock jmp sub je (bad) ljmp gs inc pop movsl mov fidivr or cmp pop and inc jg xchg ds mov jg push sub icebp mov sahf push dec add jg inc push (bad) enter jg and adc sahf fcompp imul mov popf jmp repz fistpl fidivr sub jnp mov jecxz jae dec fcmovu lock pop inc dec lea mov mov lret inc pop jae les addr16 rcrb in xor dec enter cmp jl cmpsl xchg stos addr16 mull dec jb and mov mov das xor repnz test pop mov adc cld add xlat addr16 jae movsl in leave int je jge,pn aas mov cmp adc fildl push stos das pop loop mov mov xchg inc pop sti xlat jg (bad) mov aad pop insl mov aas xor inc fmuls rol jo or jl xor sub cmp popf (bad) sbb outsl dec mov lret loopne sti jl sarb dec aas stc outsl inc jecxz push outsb or jb jg or mov dec pusha adc fisubl or shll cmp or push mov xor stos aas jo inc dec add jge push daa lret dec jb lods or jg aad mov mov pop mov jg jns xchg cld arpl sti cmc lahf mov sub stc jg push bound cmpsl sub cmp test mov mov aas jge adc jmp lea pusha mov xor gs jg inc adc jb js jg stc dec stos in pop jg cmpsl mov jge dec jg,pn mov mov lds jg dec popl dec int in rorb (bad) idivl pusha aam or stc jg cltd lds sub sbb pop les je mov mov and sub enter arpl into mov stos aas xchg inc lock pop jne fwait jg in mov mov inc pop jge pop ljmp std dec dec mov jg xchg cwtl dec push sbb fsub js stos (bad) push jg lahf call js xor cmp mov loopne jmp bound mov stos jns jae mov xchg clc dec (bad) frstpm(287 jg in mov push cli cltd daa mov dec add and jg mov xor lds add adc adc fwait xor lret (bad) mov mov idivb movb (bad) jg sti lds sbbl jl cvtdq2ps pop pop jg push xor xor pop inc out scas cs jae fcomps fidivl aas jbe ja imul stos popa xor les jbe pop mov mov push mov in scas aas sbb pop in push andl push nop inc addr16 and fidivl cltd outsl cli adc sti loop clc sbb jo fstps xchg jge cli xchg jg cmp ret xor mov out dec icebp aas mov add cmpsb movsb dec or in movl and mov movsb outsl or bound or popa pop lock mov add cmp fmull jb sub xchg adc adc out push mov mov sub lods dec add (bad) movq lock test (bad) xchg xor arpl fimul leave addb mov lahf std jg ds test inc out mov mov mov fidivl push nop movsl cld mov sbb les mov out fdivrl test fnsave or fdivp sub jg adc jg mov jbe mov push aam out add xor mov or mov cmc jg mov inc jge lahf mov sti (bad) jg in test jg add fnstcw scas add ljmp jg jge inc pop arpl jg mov adc mov test sbb push jmp fwait push lret or insl leave mov mov add mov dec sub stos push int3 mov mov sarl ret inc mov or xchg jg enter (bad) movq mov js xlat (bad) aas (bad) jmp and pushf cli arpl jg sub sbb jg aaa not xchg cmpsb mov adc test cmp xor mov push adc loope jle or push rcrl cmp mov dec dec lods imul jg pop ljmp shll or icebp xor test scas or fadds xchg pop insb adc mov add lea cmp outsb popf inc jbe xchg jg popa aad mov sbb adc push fs xor jo jg test jge sbb ret (bad) jg test sbb imul fs adc fsts or xchg ljmp lock (bad) fs mov pop imul (bad) pop inc inc push or das fs push pop pop dec pop jne (bad) lods xor inc stos mov or data16 lock add jg test add push (bad) aas sets mov mov mov mov ja push add sarb pop stos rcl movsb jmp mov push push inc arpl sarl in add fidivl mov pop stos lods leave popa mov loop xchg js pop into pop imul adc aas nop rorl les xchg pop mov mov cltd insb mov xchg sub xlat mov jb push (bad) sub pop jg mov jmp lahf jae cwtl sub inc mov out mov ret mov dec mov mov aas cmpsb fxtract pop jmp sbb movsb jg movsl imul ja jnp (bad) (bad) or aas xchg ret mov inc sub mov add jg cmc pushf lds test sub fidiv mov (bad) aad test repz in mov jg jmp cmc cmp stos pop dec mov or sub and call sub jg mov imul xchg add jae int3 out lds jg pop dec outsl out rorl rcrb mov aas xlat nop mov jg dec das sbb out jno arpl dec iret inc roll cmc fidiv mov int xchg jg dec insb lods cld shrl jnp sahf popf dec jg or sub ds fld cmpsb bnd push ret push sbb in out dec in test jg scas ds xor jmp inc cmpl adc jg xchg xlat add push pop nop fnsave loopne dec mov jo adc xchg lret shl cmc lock sbb out push lock dec fnstsw aad jae or sarb addr16 mov iret cli leave call mov cmp mov mov arpl or mov dec ja repz pushf pop jge fs pop scas cld inc (bad) mov divb lahf (bad) (bad) mov (bad) dec dec sbb imul push nop jg loopne idiv or mov jae cmpsb xchg faddl adc lock xlat ss mull cmp jg pop and dec (bad) pop jecxz clc lods enter nop popf inc mov mov lcall iret inc add popa mov pop push xchg xor jg or sub add lock dec xor scas or jg xor or repnz jg testb jg jno dec popf std lds arpl and jg push icebp (bad) pop xchg rcll fildll pop sbb sahf push outsb push and subl jle movsb mov mov push cmc push out jg ss xor dec push jae fldenv or int xchg fimul cmp xchg ss sub jb into outsl dec insl add hlt stos push pop sarl stc cld ljmp arpl aam lret leave jg (bad) xchg arpl ret cmc and fcompl mov dec jg jne insb xchg cmp inc xchg mov js sbb push dec (bad) fs jg xchg or test aas ja mov in xchg inc mov movq xchg pop cmp adc jg mov mov jg test jg adc sti popf aaa ljmp adc cmp jb incb roll xchg jae fdivr push stc and ja test lea ja fidivrl negl inc fistpll rcrl fdivl aam stos dec lahf fldl push jg nop xor cmp pop ret mov insb cltd pop pop and jg (bad) xor lahf push pop inc pop jg movb inc out inc aam or out arpl hlt addr16 sub cmp jno dec jg (bad) je xchg aas ss push mov sbb jns cmp dec sub out pop sub mov in inc ret inc aas jg dec daa (bad) fldl push lods jg mov cmpsl and icebp mov outsl (bad) test inc cld add xchg xchg dec mov scas mov mov (bad) div ret mov fldt or daa and add jg adc (bad) fldt jge add fnstcw and aam xchg mov (bad) rclb push push daa (bad) rorb (bad) lahf test cli push scas jg mov (bad) lret insb fsubrl pop in iret ss (bad) push bound sub arpl xor push pop or arpl nop mov mov outsb fldt adc jns (bad) sbb mov sarb xchg mov pop cmp lcall (bad) in ja (bad) jle sbb iret or xchg jg pop cmp loop jg cwtl loop in (bad) or enter pop jg mov add mov incb in add inc add xchg jns repnz lret (bad) hlt jg fstps je movl or (bad) sti push mov sarl cmpsl pop pop pop jg cmp (bad) xor xorl (bad) test or pop fcompl xchg mov (bad) pop subl and cltd std dec mov push rcrl fdivr pop jo mov or push inc out jp sti insb lock mov sub das jg bound ret or jge jecxz std repz cmc sti jl cmpsb jmp rorb arpl jg cltd nop cmp sbb fiadd cmp loop xor mov je (bad) repz mov fcmovnu mov lds fs jb xchg inc inc jg test (bad) clc jne push ja mov pop push jecxz pop in xchg cmp enter fistpll mov movsb jg jge jp or mov dec insl iret sub mov testl addr16 dec js pop jg outsl call or loop (bad) outsb cmpsl divl inc idivl dec cmp lcall sbb mov dec sub in inc cli add pop test lahf mov mov stos jge inc pop fwait sbb cmp or push mov pop adc add or in (bad) sti fwait cs pop mov push jg xchg data16 push lret fnstsw sbb mov jg mov lods test jmp js cltd pop inc mov xchg popf mov xchg stos (bad) jg mov push add inc out bound mov test jg fs inc mov sbb adc popf call dec lods push enter push rclb jae scas stos pop jg loopne repz pop sub dec adc or lods std ss lcall call imull sub movsb add jg fucomp lods rolb test scas dec jae imul xchg mov adc jg add fwait jne loope jg daa add (bad) lods adc movsb and pop imul addl mov pusha cmp popf arpl and addr16 jg mov cmp dec loopne cmc xchg jg xchg out adc (bad) (bad) jg jmp scas mov test ss mov fwait and nop xlat pop xor pop mov scas jge mov mov cwtl mov icebp rclb add inc fimull mov sub mov cld mov fstpt sub pop cltd pop adc jg xor cwtl rcrb int3 jg xchg icebp mov mull push sbb in cmp jg fisttp mov mov out xlat xor js push fmull pop fiaddl scas jns adc jmp out movsl or (bad) sti lock mov loop jg mov xchg fistpll cmp ds mov leave lock pusha cwtl adc stc sahf cli or push pop enter add ret in mov jnp jg mov xchg call mull movsl jg outsb ja jecxz lock loop (bad) insl pop iret sub outsl mov into pop mov mov xchg leave scas pop inc push mov jnp outsl xchg jae push pop push jg pop pop fdivrp add mov fs cmpsb cli and sub lret jnp jmp xchg xchg mov xchg push jg mov jo pop dec jg fsubrp inc dec hlt push idivb pop lret mov repz add jno push xchg je test and jg xor add cmp sub rcrl adc pop jne mov bound push adc pop mov jecxz outsl lret popf jne aad cmpsl pop dec iret cmc or pop sti (bad) push outsl sub popa sub cmp jg sub jbe fwait ss sbb lret inc mov cmpsl jg cmp sub mov mov hlt stos push jmp inc sub push and or jae scas fdivl test sar addr16 and icebp jmp arpl pushf or sbb sbb xchg xor push fsub fstpt dec cld jecxz xchg jg mov xchg mov ja or stos mov cmp scas jle jg movsl pop out xor movsb or in cmpsl stc inc jg push leave push xchg jecxz inc mov push pop adc xchg popf popw pushf mov add mov (bad) inc into dec (bad) jne jg (bad) negb dec fldt jo mov pop inc jne xor (bad) dec mov jg icebp sarl jae jg dec inc push lret sarl mov pusha add jbe mov jg add fnstcw jg int lods data16 jbe jle inc rclb (bad) inc cmpsl push stos mov inc mov push clc int push sub shll mov xor pusha nop inc mov lock outsl in ret jp add jae cmpsb std mov cmp adc aas addl jg cmpsb in cmp and (bad) fnsave xchg outsl hlt mov daa mov in xor mov andl jg ficom out jbe jno fnstsw aaa adc jnp jno repz (bad) sbb inc mov fcmovu out mov mov jg movl popl orl sub inc test cmp inc rcr (bad) mov jg out int popa sarb jne push pop dec ret jnp jmp incb inc or mov jg and (bad) pushf clc outsl mov rorl jg jb adc jg cmp pop call outsb mov ja dec (bad) (bad) je jo xor fwait movsb rorb mov outsb in cld pop js fsubrs test jg pminsw iret push arpl movsl cmp pop xor adc jg movsb enter jno (bad) jo mov psadbw fidivr aas jp or push cld push ret cmp push imull lahf mov icebp data16 rcrl dec jg xchg pop adc and idiv mov push scas sbb pop negl inc mov pop dec addr16 mov das sarl je push jg xorb jnp addl xchg pop lods leave (bad) sub imul push push iret mov push push fmull pusha push mov out repnz in push inc aam js adc lret push ret mov xchg push enter jbe pop popa pop inc mov add (bad) fdiv and imul lcall into mov idivb dec test add cmpsl jg enter sbb xor aaa push popf cmp into lret mov jg mov xlat (bad) jg lahf push cmpsb jmp pop or push pushf test and lcall mov mov idivb sbb mov cmp in and ret lods adcl iret js insl test cmpl movsb rolb outsl loopne out or stc das jg pop (bad) xchg fnstenv je or js sti jg int bound push lret xchg jmp jmp jg jge cmc fwait xchg (bad) flds aas dec pop or pop scas xor jg mov jg,pn sbb push leave enter xor cmpl pop jg lock cmp pop xor lcall or cmpsb sti lods xchg loop sub pop imul (bad) pcmpeqw cmp or mov (bad) ret and je lahf adc jg jbe imul dec push lret addb dec dec into jg and dec jg adc mov lret push push jg bound pop cld mov xor fcoms sub stc call and out rcrl mov loopne das scas in (bad) pop inc xor mov xchg popf xchg dec jbe jle jg jecxz mov jg pusha fprem test sar mov mov sub pop adc mov aam push mov add je jg ljmp jno loop sbb in mov mov xor jg xor (bad) into jg mov sbb adc pop mov mov xchg inc and cmp or imul es add adc lea pop dec aad inc sbb insb mov cmp test or mov nop jg xchg iret std pop adc xor sub inc int (bad) divb das jg sub mov mov jg pushf and sbb in bound dec jp jg fnstenv loopne ds jg ljmp jg mov and inc sahf jg pop mov cmc pmulhw jg cmp mov xor insl jg ljmp jg shll jg bound movsb loop cmp ja jle lea fs sbb xor adc jg xchg aas (bad) call (bad) mov sub lods iret sbb fs cltd mov pop das sbb jns dec fcoml jg test (bad) push dec ljmp xor pop add push testl mov mov dec sbb bound sysret mov sti sahf inc hlt outsb push xor cmp mov das call dec push pop imul addr16 mov aas fsubl sarl and or data16 xchg cmp in into aas or jns out dec dec and xchg jg js push xchg jg mov or adc jecxz xlat cmp cli adc (bad) or and ficoml cmp add jo jg adc lret popf mov xor mov call idivb pop (bad) sbb mov inc jo (bad) jg add repnz xchg sbb jmp jg scas push sbb adc leave loopne mov mov fmul push lds mov mov inc enter lds insl pop xor jg pop jl push movsb (bad) shl test push fwait ret aad xor inc aas adc mov xor jg sbbl das mov std cmpsb push push icebp inc jecxz ja iret sarl or lret out xchg pop lods xor movsb mov dec inc cmpsb dec popa jg and ficomp add xchg dec sub jg xor adc dec cmpl mov outsb and jg push cmpsb mov jg pushf hlt icebp dec xchg mov sub or fs imul mov push fnstcw mov inc adc jge mov out insb jae dec imul push test jecxz out mov (bad) hlt std pusha aas adc idivl push sub into jo loopne dec or xlat jg jp movb sub pop jo fwait mov mov stos movsb adc sbb jno inc in loop in notl inc xor sbb in mov (bad) jbe push test inc fstpl jg adc int3 and sub out cs jg sbb pop cmp xchg stos or sbb mov dec mov pop adcl mov dec jae out aas cs outsb lea dec xor pop pushf icebp sbb fwait jg popf dec sbb or xor ja pop jg mov in lahf jmp pop jg jp,pt pop in sbb and fisub and pop sub adc js jg and cmp sarb aaa xchg pop mov ds mov dec cmp clc scas sub pop stos xor dec mov nop jg xchg (bad) ret sbb and jo sub or hlt push adc xor mov jg stos or mov pusha jecxz cmp jne jg popf (bad) je mov into (bad) dec xor mov push jns cmp (bad) addr16 aas gs xchg lods sarb add pop jg (bad) test inc inc mov ss lcall es pushf inc jg cmp mov pop nop and jmp jno (bad) mov pop pop push in incb and xor fidivrl stos lret in leave (bad) lret push popf or fwait pop mov xlat out sub xchg in rorl pop imul mov dec std scas mov outsl xor mov loop pop jle sbb jge nop jnp inc cli adc scas rdtsc and dec stc sti push aaa sbb jmp push jg jp xchg sarl jecxz fimull sub aas lods cwtl mov or roll jbe sarb mov xchg rolb jg fistpll aam mov inc inc jbe rolb jg adc loope dec dec jg daa sub testb mov (bad) les jg sub mov jg loopne jne in les fsubrl cmc xchg mov imul mov lds (bad) out dec mov cld mov cmp jg pushf in mov hlt mov imul mov popf sahf outsl dec iret lea enter lds mov sub inc push aaa sbb stc out jno hlt rcl bound add xchg mov xchg in push stos cmp mov sbb cmp cmc imul mov jnp jo jle jmp lea push insl in movsb sub lds xchg cmp jg fidivr inc mov dec shrb mov and lds jae push pop and dec push push cmpl cmp xor icebp mov inc or std es aas loop jns jmp inc negb scas in lods cli ljmp stos xor dec pop iret jg popf (bad) in jne js (bad) jmp fiadd or lcall out xor (bad) xor dec pop adc repz fst mov pop pushf jg mov mov or pushf push pop lahf pop (bad) out xchg jne inc cmp sub mov out xchg jg xor pusha les test mov jp jecxz mov push outsb lahf das imul aas push push insb inc popa les and mov mov pop les stos push rcrl fisttp pop dec sarl xchg xchg push inc add sbb outsl xor push push mov addr16 sbb cmp pop push xor mov lds mov sub and sub mov cmp je insl jg jo push pop dec sti or clc cs insb stc int lret xlat loope jmp aad mov push insb jg in (bad) mov mov pop scas ret lret mov in movsb daa shrb (bad) loop ja jg ret mov movsl sbb cmpsb xchg stos jg push mov sub jmp xchg mov jg pop int pop jge dec jg or sarl setp lret jp ss adc in xchg out jg out rorl leave stos jg cmp pop bnd jg out mov xlat jg sub jne cmp ret je decb xor jg pop sub or mov lds push jne jg movsl shrb jg shrb cwtl in mov (bad) icebp pop out cmp mov jg cmpsl mov push xchg fstpt dec or lret jg ds jns sub fdivrs enter insb test lods jo fsubs loopne jns stos jg pop mov cltd bound mov inc ss push jg jge pop mov xchg inc hlt js outsl inc outsl out ret (bad) jg xchg aam pop push gs jg fs clc mov cmp jecxz icebp pop pop sbb test shrb dec push jae jo lret jg sahf lret pop out jg xchg jbe mov mov pop xlat das jg into addr16 sub push ret aam xchg inc and pop or dec xchg jle sub cmp jg and add and inc push mov mov lods sbbl jne data16 inc xlat jg or xchg add inc jo sarl int3 hlt pop jne mov fidivr inc inc test aad js ljmp int inc dec pop jbe mov js rorb movsb or inc jbe jp les mov push pop cmpsb push jg inc mov leave test lods jg cmp (bad) xchg rcl out push fwait mov fnstenv jle pushf jp push popf jg and (bad) cli xchg imul les cmp in mov pop jg sbb xor dec or fstpt dec sbb lahf stc fidivrl movsb add (bad) negb push mov pop pushf jg jl scas in mov jg mov push in movsl stc sahf jg addr16 rorl pop xchg cli mov subl fpatan adc jg gs push insl jp xchg sub pusha repz adc push cmp das jae shll sti sub sbb lret les jg mov push loop jnp,pt dec pop aas mov mov inc or mov pop pop loope mov push pop jg loop addr16 mov add jg mov mov push adc aaa outsb test xchg mov mov decb jg pop mov (bad) pop inc sarl lret fiaddl jg out in mov stos loope mov mov xor lds xor jnp fcmove ret sbb faddl jmp (bad) xor sti xor out jg (bad) mov les jg out adc fwait sbb mov cmp call mov frstor jg mov jb jg subl popa jg ds mov dec xor xchg pop or movsb js inc add rcrb aam jae repz mov aas mov fcoms ja lds add dec and imul mov sub ss fsubrs mull sbb add mov cmpsl mov sti inc fstpt outsl dec (bad) adc mov xor mov or js cwtl jg test mov stc xchg jg lods jle scas repz jge or mov test mov jg addr16 ss shll loope into jo inc jg jns aam jge jbe mov or enter add cmp sarl pop aam adc pop iret and jg sbb add mov std sbb in sti jge jne jg sub mov jg lcall jg out dec mov mov add hlt inc je mov adc mov iret xchg enter push dec pop mov sub mov mov inc enter lcall sahf sub jg scas loop mov or xor pop enter fwait jae and mov jg fisub cmp pop pop mov inc lods mov jge aas es cmpl sub cs jbe je sub pop jmp mov mov mov lea inc out jg outsl cs dec out lahf jg call sbb aas inc mov dec inc pop mov cmc sarl mov mov pop push lret xor cmpsl jg lahf repnz js cmp cmp pop test std jg inc fmulp clc int3 lret sub inc stc sub mov jg or nop ret in inc and and loop fcmovne mov push jg fisub ret (bad) mov jns push and jg sub inc inc sarb or jge lock lret push aas jno pop jno sbb stc into cmp jg xchg sbb sarb les ss inc pop or adc lods jg push sbb stc imul xchg mov dec mov lods andl mov cli mov push mov xchg mov inc adc out mov xchg scas test mov stc adc incl popa jg add mov jl ja popf mov pop jg adc (bad) jle mov or xchg cltd inc cmp and cmp cmpsb gs cmpsb enter add jg sub push mov dec xor insl cli ror adc push xor in adc sahf jmp stos push push and xor mov cmp jg inc test cmp test xor mov imul pop dec cmp or cwtl pop mov add scas add aam cltd pop inc vmread jg push fildll or push mov mov adc mov mov pop sbb aam jge mov add inc shl jb decb pusha les cs (bad) mov hlt pop ret or sub lock xor shll jo jg mov push sub xchg sarl pop jmp hlt (bad) mov or adc inc add mov (bad) icebp jg test je shl add mov aas inc iret cmp push and mov jg sahf and gs or (bad) mov in jg pop mov imul sub jg xchg adc cmp push hlt mov lret xor sahf scas pop mov add inc xchg and mov mov pop aas (bad) icebp (bad) ja push jg cmpsb les jg mov lods and xchg inc cmp cltd mov aas sub (bad) fidiv lods jg inc fwait mov jg mov int3 pop xchg mov cli in xchg jg fs inc xor adc das dec cmp jg jge imul lds out xor jg or add popa (bad) mov mov cmp repnz inc xlat or lock popa dec jbe int jnp cmpsb subl lods dec mov pop mov mov je jg out out (bad) and jg std xor jg (bad) sub mov sub scas mov and lahf cmp cs lcall xorl mov dec or inc dec outsl sub fisttp jle scas ja dec dec js sbb pop dec arpl sti negb mov jl pop hlt jne stos cmp subl pop jg adc fwait xchg inc jg cli inc and arpl hlt jg (bad) mov lods cmp xchg jp inc test jg ret das rcrb push push jmp sub jge cmp fstpl addr16 cmp jg mov in jg sub pop lret scas sub jg daa (bad) push cmp lds ficompl into jg int3 cli bnd mov jg mov fcoms sbb scas jnp xlat fild sahf loope loopne sub into in addl xchg jp ds pop mov mov fldcw pop mov mov push lret addr16 dec aad mov jae fcomps imul mov mov inc out jg sarb add jg jmp sahf notl push push ja mov in fadds push push insl xchg push out dec adc fcompl aas adc cmc arpl push maxps sbbl mov cmp cwtl jecxz insb or stc enter xchg sbb in mov and mov sahf adc cs mov hlt popl jg xor jg dec mov jg inc sbb sub jecxz mov ljmp jle in push xchg mov sub icebp jg rol cld mov test inc jg sub into cltd imul push lods std (bad) outsl adc pop stc (bad) pop cmp dec jg and arpl jns out daa jecxz lret cmp and cli jg outsb leave cs mov pop jge (bad) enter les out call dec lret mov and jno roll jg daa dec fwait pop ret push (bad) xor loop lret mov push repnz sahf inc mov cmpsb test fistpll cmp jg out aad mov mov cli test lods jg rcll pop xor add jg cli xchg jg sbbl aas jmp mov daa dec nopl jle pop in mov jl jbe sbb pop arpl repnz inc jge xchg gs xchg fwait adc mov arpl sbbb icebp in (bad) insb mov lret cld push insl stc jge jno popa pop (bad) mov cmp inc scas mov leave aas cmpsb adc add push mov or jl pop pop or pop aas mov push push pushf add aaa jl push out insl pusha pushf push pop lret out scas mov xor pop inc and lds mov xor inc pop js stos xchg (bad) jne jae xchg mov mov js inc dec pop dec mov arpl outsb adc and aaa mov popa jg je rcll aam sahf jg int3 pop pop lds jg movsl cmp push stos dec std jg ja (bad) lahf (bad) push aas jg add fcomip out xchg aas std stc pop sub push xor gs lods jnp inc shrb test jp cmpsl pop stc sub cwtl cmp sti xor pop xor jp dec and add jo fdivrl repnz jg repz movsb in xor adc mov jg notl mov or scas jo scas jns or jbe or sub inc and cmp xchg rolb out je lret ret adc jg popa (bad) xor dec xor jg mov pop mov dec push inc aad test imul jae jns xor cmp dec mov ja jbe lock push jno cs adc jl mov dec repnz mov jle jp jb dec fiadd jle fwait je data16 push mov cltd sbb call int3 push pushf mov loop xlat lds jg lahf divps mov mov push jg sti jge fs jg cmp arpl push xor mov or mov aas mov xchg enter enter (bad) mov pop xchg aaa lods cmpsl test fdivl xchg push decb outsl jne mov repz out nop adc lock ret idivb pop mov or test inc ds sbb hlt xchg cli aad xchg inc sarl inc xchg xchg push sbb jg xor mov mov dec or out aaa sbb xchg test mov and xor enter jb jmp fsubl movq inc lock insb nop sub imul fs in cmp sti sbb lahf dec jg and xchg jg jnp add int3 xchg fistpll js out das aad or xchg imulb iret cld push aad sarb imull and inc das stos js jg dec or enter jg inc mov test pop push jo hlt jg push mov jg sbb jo popf or jno loopne ficoml fist pop jecxz dec xor jl in mov inc mov fisubr lods cwtl jg mov out hlt cmp mov and cmpsb cmp sbb shrl adcl (bad) fs fwait inc mov (bad) jae das add stos jg pop or xor jbe mov aas push cmp inc imul lods mov loope mov or push adc mov mov cmc in jg fisubl cmpsl push pusha adc je out sbb pushl or mov jg fnsave add in movnti mov je sbb jg jp cwtl xchg dec test push movsb lret aaa pop pop adc iret jg in hlt (bad) sub inc jg xchg jne mov push sarl cmp inc sarl push cmp jbe cwtl ror in inc inc jg js int3 dec mov jg insb adc mov ljmp stos lret jae jo push iret cmc cs cmp adc push mov xor repz arpl stc ds dec pop xchg pop mov (bad) and pop cs push jne and mov outsl xor stc pop cli cli push pusha jg pop sub inc sbb arpl outsl dec test jge mov movsb scas pop xchg dec loope xchg cmpb aas jne outsb cmp jg pop cltd out lds xor int dec loopne sbb adc mov and xor mov push jmp jns jl (bad) (bad) inc aas cmc cmpl lods std dec mov loop jg dec mov iret pusha xchg jg or aas push mov std and out lock jg xchg gs test stc out inc rcrl sbb out cmpsb lods cmp or jg pop and (bad) adc mov movsl add jg push mov incb stos inc mov bound dec cmp adc jg sti out sbbl xchg push jnp fcmovb ret fnstsw out cmp jb mov mov clc ret xchg movsb mov push jnp scas inc xlat pop insl movsl add mov lods add outsb mov mov cs les lahf lea insb pop (bad) jg sub fwait xchg dec mov pop incb dec or dec pop aad mov out cmpsl jg (bad) (bad) test jg jge xchg jecxz jg cs fild lret and (bad) ljmp fdivrl lret adc loope mov and insb hlt adc jl test jg in inc lcall insl mov jmp mov sbb mov add outsb cmc in jg lret vmwrite jmp popa dec cltd push sub and dec add pop jg fistpll and mov adc pop scas or ja or cmp ljmp lods out hlt mov push test sub inc adc lea inc leave fsubs ret subb jno sahf jne or ss pop or cmp sbb mov neg mov (bad) jg sub loope jg mov mov repnz aas (bad) sbb inc jg int3 notl and fwait push or fldenv jg push dec jo sarb (bad) lds dec jno xor add inc cmpsl daa loopne pop lret inc pop jecxz jg pushf push je movsb data16 jg (bad) in pop dec lret xchg jg adc adc inc jg ret outsb push sarl aad mov pop in push lret fdivrs fldln2 dec daa cmpl jg sarb mov jp in sbb stc jg pop cmp insb in sti mov incl fwait cmpsb popa out dec lcall (bad) aas mov pop jnp jbe mov sub xchg nop sbb pop jg faddl mov sbb sbb inc or inc xor in cwtl push mov mov or cmp pop inc push imul test dec add mov js push jg push rolb jg out pcmpeqb push cmc or jmp ret mov dec push out xchg sbb jno adc and (bad) les leave lahf das aam pop jl cld or (bad) adc out fistp push popf xor mov rcll sti cmc mov mov loopne aas xor jg or (bad) mov pop rolb mov test push push push fs jmp jg jo push xchg cltd inc cmp aaa ljmp jp jg icebp push mov mov in push jp pop movsb js lahf push pop pop jg mov xor jg xor mov push cli fdivrs add mov lock daa dec sub lds (bad) icebp inc mov inc and leave sbb inc ljmp into jl inc dec mov (bad) jbe ret pop jmp rolb push sbb push jl add mov jo adc fs decl scas adc mov addr16 inc mov js fldcw cmp lret sbb dec iret adc jmp jp jnp mov mov stc xchg into jg mov sbb pushf mov jg sahf dec (bad) ljmp pop orl inc pusha mov (bad) repnz inc xor and cmp jmp cmp iret lret (bad) insl push fs mov call cmpsb pop mov xchg jg mov jg sub loopne or jmp fistl jp and jg rorl push aas xchg cltd jg addb lret movsl and jbe clc push adcl in mov or push outsl gs mov out in les cmpsl sub pop cmpl cltd sti enter mov pop jecxz xlat cmp sti into cmc adc inc mov aas cwtl loop jno xchg xor leave inc sbb enter insl arpl stos adc stc inc push icebp inc loopne incb mov aas stos jg sahf mov dec push sbb jno xor and mov sub and jg insb (bad) sbb aas inc ret (bad) sti pop decl stos push aas stos lcall rep aas ret lods pop xchg lea scas aas jns mov inc or jg daa mov add jo adc outsl mov and iret lea mov pop push mov jmp into das mov cmp outsl loop pop stc push (bad) int lret std add xor bound (bad) daa fs mov add mov movsl dec jnp adc cmp loopne into fbld and cmc andb clc in mov ds push cld and inc xor lahf xor pop lret dec jg inc test xchg ljmp jle sub inc inc mov shlb daa jb jg add cli popa adc sarb pop sub mov into lea in pop icebp pop (bad) mov push inc (bad) cmp sbb mov mov sub push fstpt ficom mov cmpsl cld jp add jno adc aad xor push daa test push adc pusha loope jae xor dec and jl arpl outsl jg sub push imul int3 or popf xchg jns cmp (bad) gs das sub mov js outsl xchg or les arpl aas lock mov xchg mov movsl fistpll and mov jg jl lahf jmp cltd sub in push push insb enter cmp daa in nop xlat arpl jg adc das push insl mov jo push dec out hlt mov shrl mov cmp lock int3 jae adc xchg icebp jge in mov pushf jg jp dec jg xchg nop inc leave jne (bad) iret mov in cli jg test jo jne loope jg cmpsl aas mov push mov aas (bad) jns dec cltd lods in mov nop jg outsb add push scas or adc xchg mov mov mov xor or addr16 push fistpll mov push sti clc mov outsl lret lahf arpl and (bad) xor clc and jmp pop popf add jg test mov stos test sti mov loopne pop add js push cmp flds mov jg or mov jg movsl xor xlat push hlt enter or stc and clc mov aaa out pop jo adcl add sti cmp hlt int3 cmpsl pop xor js cltd jp sti lods and jns jg mov (bad) negb cld jg test gs sbb jg and jg sub and or clc cmp fmuls loop das push xor mov push dec inc loope mov flds mov ret jg mov xchg inc popa ss push dec and jg mov rclb adc repnz mov push jbe mov inc or (bad) mov inc dec jg mov add xchg jg or or ret mov cltd subl jg mov xor add in mov stc jg shrb jecxz aam jg cli fldl2e and test adc nop dec push lret aas (bad) pop push out sbbl push incb dec das jno push inc jg adc leave addr16 sbb outsl jb sbb cltd xor push adc mov cld addr16 mov idivb daa lds iret ja xchg out mov insb pop cli jmp jg inc (bad) cmpsb xlat mov jne out es add pop lock lahf fdivr (bad) jle rolb arpl mov pop or jg cmp mov inc les xchg leave mov sub imul inc iret scas or ss mov jg inc fcom gs dec xchg pop xchg (bad) iret pop mov lock outsl cmc push inc fnstsw or mov jg std inc es add movsb xor cs jmp stos mov cmc sbb insb enter xchg pop sub jg add loopne inc sti lret out dec xchg add cmp stc jo push sarb outsb push pop rcl sub jg js lcall and xchg scas adc aas sub jo pop sbb add loop xchg jg jecxz pop scas repz in push iret fisttp cmp sub jg loopne negl sub cmpsb and jns sbb lds lds xchg inc aaa mov and addr16 pop mov subb dec scas imul or jg push jbe imul fild cmp (bad) mov cmp pop lods dec int3 sbb imul sbb ljmp leave and mov mov or or or jnp cmp xchg push xchg jg push push mov jg jo pop (bad) iret gs rcrb or push daa sti test sub arpl jg jnp inc iret fimull jg movsl pop in dec push idivb mov jl mov mov stos push lock cmp negb les in repnz push push pusha mov hlt mov push sub fisubl fldcw mov and cmp xchg movsb (bad) pop jg xor lods jl (bad) (bad) inc mov sbb jle xchg jmp xor mov dec inc in pop jg sbb push sbb mov jno sub scas xor aad pop arpl pop jg insb sub arpl loop (bad) stos fimull outsb push dec fistpll push and jg jb inc sub rolb lods js sub rclb sub addr16 adc jg aaa nop or cmp pop js jp mov pop loopne pop jg idivl stc jo jecxz js out xchg into out outsl rcrb xor inc sarl mov mov ljmp sbb mov mov mov pop sbb out dec push sarb jg add movsl shrb aam aam sti out rorb xchg ja roll sbb scas ds jg or cltd pop daa or out fildl push insl adc cmpsl jg adc ljmp mov lahf jns enter fmull sarb aas outsl loopne pop push mov push insb jg mov test jg cmp pop push addb mov pop imul push lock insl jo and xor cmp mov decl into cmp lock and (bad) out sbb cwtl fsubrs ja adc mov scas int3 xor push fldenv fdivrl sarl ret mov cltd mov sbb jg outsl or mov rclb leave mov (bad) aaa jg sbb outsl mov ret pop adc and push jg xor mov xor jg out arpl sbbl (bad) hlt xor sub stos adc mov rcrl stos pop mov cs dec mov out stc jns xchg shll aas dec cmp cli cmpsl aas xor (bad) jne ret cld sahf rcll lret inc mov jb data16 (bad) repz scas loop out (bad) shrb outsl and dec or loope mov arpl jne xor jae in pop lea xlat in data16 mov test push inc enter jmp mov cmp sub mov loop mov inc adc jg fwait lret push xchg repnz pop mov cmp aas mov jae push jg daa adc lds or fcomps jg mov aaa mov call jo outsb jae add ret jg xor xor jge,pt and pop xchg pop lea push inc outsb mov and lcall scas stos lods mov cs mov jns fiadd jge mov scas adc lcall push and xor stos push das es jle insb test mov insl addr16 inc (bad) jg subl fdivrl xor mov mov or fisttp mov arpl dec xchg mov lods sbb cmpsl icebp outsl repnz jbe je jg pop and cmp jg lea ret repz mov sbb mov jge inc rcll jg push jns mov xchg data16 js xor jo sbbb pop outsl aaa clc mov lods jg mov aad in (bad) stos je in (bad) imull sub inc pop xor sub js jne jg push leave fdivr ja into push xchg (bad) aaa add mov mov ret xchg pop outsl inc inc test andl jg adc data16 fnsave jns push inc inc loopne hlt mov aas fisub cmp adc and jg call pop mov out loop les cmp scas adc in dec imul lods adc jg jno adc pop loop jg test mov jg lahf imul mov (bad) xor cltd call sarl jge mov ljmp dec cwtl cmpsl jg xor fwait cmp fsts inc dec cmpsl dec jg inc outsb scas and mov mov mov call clc xchg and mov sahf into minps dec sub push fildll mov cli push bound mov sub mov stos mov aas push and outsl inc jg jbe es mov sbb mov dec out popa jg fcomip es insl int3 dec pop repz adc cmp stos mov inc jnp test jg mov sbb out mov mov xchg xor pop jg pop les jg mov adc rcl dec and jg mov es jg je addr16 test test jg outsb movsb cltd adc js jg xchg fsubrl mov xor inc in adc adc jb jo mov insb popfw jg mov jno and xchg xor pop sub sti push (bad) pop das lcall jbe cmp push jg insl mov test arpl jmp jl (bad) adc mov jg cmp (bad) (bad) gs clc mov xchg push fisubrl or pop add divb test sub (bad) jle (bad) daa roll pop mov mov mov inc pop add fwait imul xchg push dec std insb xor add jg sub or idivb add (bad) mov mov outsl inc (bad) xor dec sti push jmp lret das add cmp enter sub sub movsl mov cld add int3 add mov jp dec xor jg adcb jle sbb jg pop jl and mov mov insb lret fnstenv enter mov sar adc inc or push jg xor jg sbb sahf add add aaa sub mov rolb jg loope dec lods and add xor jl pop cli adc push clc ja mov mov adc ss pusha rcrb mov fcomps mov mov int dec mov jg aaa xchg pop lods mov fnop test cmp add sahf mulb xchg movsb dec pop mov mov dec and pop push pop jg dec cmpsl pop aas popa inc lcall mov jae or add fs cmpsb adc ret ds fisubrl popf and jge fnstcw cmc mov jg sti cmp jle sub sahf adc push jecxz push jg lret iret sub data16 jg cmpsb mov inc jg mov mov les jg push (bad) lds das and mov ss inc mov pop lds or pop adc mov jae mov adcb cmpsb and jg xchg jne push push fnstsw add icebp test enter mov jg fmuls push jg pop in jns rcrb into jg xor movsb sbb push lret dec les int gs adc je sahf enter push nop add inc xor (bad) mov out cli push ja jg insb je push sub push jg xchg stc mov and pop pop sbb xor pop and add cmc inc clc sarb xchg (bad) xor pop int add xor mov jg pop mov inc ds (bad) testb dec stos dec sub push out or xlat jle jg jp sti fidivrl xchg fisttp or pushf jg mov push sbb enterw mov mov subb leave jg dec and or inc ret lock dec sbb dec sub dec push inc jg sbb add dec fnstenv xchg ffreep sti loop ja ja cmc cmp test outsb pop loope xor inc inc sarb mov les dec push add sub imul cmpsb xchg aas mov roll aad or sti sti (bad) rorb xchg pushl jg adc push or pop test icebp cli fs pop inc xchg (bad) mov stos outsl insb aad jg or leave cmpsb dec cs jg jnp xchg cld clc push jg xchg dec jae push (bad) test ds pop xchg addr16 inc jg outsl das stos mov sub jg int pop in push (bad) jp test dec jg arpl jg dec scas xchg int lock sbb add xchg or adc loopne mov cwtl fsts jg xchg outsb outsl inc stos movsb xor repnz or es and out push ret inc xlat mov das in or daa inc test mov mov mov jbe je into dec jg jnp cmp jno aam mov mov jg cmp jl rcr fdivrl pop and jae xlat sub dec dec iret (bad) call fucomip adc inc lcall sbb ds or push jnp mov push mov mov push jg test and movsb fmul jg insl aaa jb insb aas pop outsb mov lahf arpl loopne pop ds inc imul or jne inc popa incb xor aas addl (bad) cmpsb add fdivs out pop push fnstsw jae ret jp mov fdivrs scas leave popa hlt pop and mov fwait ja mov add mov pop sub ja pushf outsl movsl (bad) (bad) jg iret dec push fisubl cmpb inc pop cld push jnp inc outsl push aas sbb imul in aad (bad) das sbb mov inc inc sahf insb lock rcl lods mov mov fcoml jg insl push sbb popf and jg je jp cmc push pop mov jo mov mov lcall test push (bad) xchg jl jg push fadd cmp cmp shrb lahf fs mov lock mov mov jg sahf mov inc jg js jle rcrb jg dec xor mov add jg loopne cmp into aad pop pop pop mov inc movsb daa cmp aaa les jnp push lcall adc enter divl popa leave pop inc xchg into repz push mov jg andl push shll jg lods into bsf cmp xor call mov lods and mov jg inc pop loop cs jg inc xchg enter mov outsl cli lcall fisttpl in syscall inc pop dec xchg xor fs dec arpl das nop js adc pop ljmp add gs loope jg (bad) jmp fidivr pop mov sub out (bad) sti and lret outsl popf sarl data16 les dec sub test dec mov gs (bad) mov (bad) inc icebp dec test and jg push cwtl out iret add dec mov mov (bad) fdivrp int aad and inc andl mov imul jmp and add mov jo jecxz cmc mov mov cmpsb or scas rep dec jg cmp xchg cmp (bad) lock push fs loope pop or stos sti push push lcall dec jg test movsb cwtl (bad) jg jo and cmp or inc cmp loop scas inc inc xchg bound lods cs dec sbb enter inc sbb aas push lds movsb ret xchg jg cwtl sbb shrb jo or or mov sbb inc mov sbb into mov dec lret jle in (bad) lahf lock jg and jbe add pop pop into nop dec inc jb adc jle mov xchg aam sbb mov test sbb ret ja mov push pop adc hlt aad (bad) sbb mov mov out pop push stos repnz imul mov and aas add test pop dec fidivrl ret jg sub adc jg xor cmp decl cs fdivl jge jg ficompl mov (bad) sub cmp mov mov xor or aaa mov cmp inc sbb pop int (bad) fistp mov jne jg xchg cmp mov mov and mov mov ret and jg sbb mov fbstp sbbl popa jg in xor inc jg daa or pop stos fnsave sti (bad) dec mov data16 jg jecxz sub outsl push mov mov repz xchg jno xchg popf out xor push std out mov ja insl daa xor mov and mov sbb push aam sahf mov outsl imul pop sbb mov lcall rclb and inc (bad) or jmp (bad) ret fwait das add lods aas sbb test mov jg inc xchg pop add mov mov movsb inc mov fisttpl negl fucom sub lea (bad) jg or sub xchg movsl test outsb push addl repz insl nop in and mov jg push or dec mov mov rorb fstpt mov imul jne fs dec inc pop aas sbb mov dec mov pop jg jp gs sub cmp icebp ffreep push jg enter mov cmp cmp pop xchg stc enter fwait inc out mov jg inc mov mov adc cmp outsl sbb add xchg add cwtl add aas in push aas jl mov dec sahf mov sub pop test nop inc les mov js mov aad jns outsl mov (bad) jg inc mov popf aas push fsubp cmp push cmp (bad) aaa add in dec and mov jo jg push aad push int lods dec pop aaa jbe pop push jg mov and test inc fsts xchg push pop cmp loop mov jg inc jmp andl fdivrs or add sub jno in mov mov hlt prefetch inc jle jg and gs scas decb adc test sub loop add out nop lret pop lock jg inc insb dec pushf int3 mov test movsb inc dec mov mov inc clc sahf lcall xchg cmp add rorb xor (bad) xor lcall add mov notl inc in mov xchg pusha fsubrl pop jg mov xor call jg lahf lods sub jg mov pop repz xchg mov add (bad) jae ja inc pmaddwd sbb fnstsw dec push incb leave in gs js add fwait outsb or jg jne sub cmp jg add mov xor setg scas js sbb mov ja pop inc or popa inc jbe aaa pop jecxz mov insb lods or aas push jno push fldenv dec ret xchg mov adc pop xor mov aas lock imull cmpl xchg scas adc dec mov sub pop jbe js aas aaa and (bad) dec (bad) arpl (bad) mov aas pop out sbb test mov jl iret jg xor loop cmp pusha sbb sub sbb jne (bad) mov adc inc cmpsl jg and push dec bound divl pushf aas mov jo in inc adc pop jns xor mov (bad) popa imul sar push std in arpl data16 js,pt cld xchg sub add push cltd decb jge inc sbb push sub popf (bad) popf mov sub jge lock adc dec pop (bad) call adc fscale mov push mov outsl mov mov mov and aas cmp inc pop out jg pusha mov aad nop sarl scas ffree stc inc into jg,pn jb xor mov mov xor mov jg mov jg sbb jg,pt or cltd (bad) loope jp push jg xchg cmc mov mov push sub outsl and pop mov cli idivl jmp das xor idivl jno mov (bad) lock mov outsl addr16 rorb or xchg pop cmpb in shrl test stos outsb cmp cmp add adc mov shr leave cmp jg dec outsl dec movsl out je inc jo out sbb jge push (bad) jg cli mov jecxz in sub arpl aad sbb mov ja jle fisubl pusha push jmp popf xor add pop out js mov lods std sbb jg fisubr sarb xor jbe test fimul (bad) mov mov jno jg out ss (bad) and jg stos push push loopne insb mov popa rclb pusha repz inc or imul sbb pop jg hlt mov adc idiv pop lock push jg add test call add jg cltd mov aas or jg jbe cmpsb in dec out jns adc mov push js dec int3 ret push into jg push xchg test jp pop xchg push jg faddl and ficompl push fs dec inc xchg pop (bad) jecxz sub addr16 jb mov gs jg dec lret pusha jecxz call inc scas mov jmp xchg push mov aad sub cmc mov xchg adc int3 dec jno jnp mov (bad) sub push jg rolb add xchg sti aas aaa push pop mov stos (bad) dec and cmpl aas ret imul ds pop jle xor (bad) push add sbb cmp mov jg scas and sahf push push pop jg loope cmc (bad) mov sarl les jo repz dec ja out enter jg sbb daa ror push push aas add adc xchg pop pop sub fstpt pushf jl out stos lds arpl mov pop in mov test js push cmpsl loop jmp loopne rclb cltd cmp repnz aad dec sbb lahf sbb pop jo xor les cmc xor and test sub mov mov pushf inc or jns sbbb cmp sbbl xchg jbe out test repnz jg fisttp es sbb cli sti popa enter jg fwait add xor inc jmp add scas jg (bad) insb aaa mov pushf or addr16 and push in and sub jg push sbb xor negl mov sub jno lds or insb cmpsb mov push repnz fidivrl (bad) (bad) xor jg daa aas jbe add lods outsl insb push and mov cld xchg or das jae scas jp dec jg mov inc or sbb jg lret out push aas adc aas pop cld std jne js dec push jg sub and test xor stos cmc xchg sti lcall enter sub shll jbe mov imul lea cmpsl jnp psrlw xchg sub jp cwtl pop out insl hlt jg gs xchg pop cmp mov sub ficompl (bad) ljmp pop clc add cmp mov mov or mov inc mov mov jbe fwait xor jne (bad) int3 jb dec cmpsb and popf jl out push or sbb jg loopne or pop inc fdivp pop ss mov jg fucomi xchg mov dec jg movsb add fwait cmp test ret cld mov jo dec and jg or inc sahf push sti scas fs loope das call mov jg jmp rcl (bad) idivb addr16 aaa jg mov das pusha jg push lods dec jecxz stos jo outsl jmp sbb jne mov loopne pop sbb lahf test in clc lret int enter mov jg cmpsl xor int3 inc fnstenv inc repnz mov mov jg (bad) xor pushl dec jg stos fs outsl int3 push mov ficom mov pop sbb push jno lds jl add les loop int3 lcall jg cmpsl lret outsb daa lock int outsl jg lahf xor or cli push icebp out pop push or adc int adc mov sahf push fsts pop sti notl or pop inc xor sub mov inc jmp and dec cmp adc imul add push (bad) repz jg (bad) stos mov mov xlat dec adc pushf xchg (bad) mov lea push push inc xchg sub aam jne aas jbe rcrl notb jg sbb in pop sahf rorb add adc dec xchg out jg in push or cmc cmovne sahf dec (bad) pop inc xchg js inc push aas cmp and inc js jg pop adc jg sarl add jg test inc jbe lret and sbb jg repnz incb rorb fnsave cmpsl mov xchg inc inc leave notl adc aas add push xor nop xor add pop mul jg cmp or out dec inc jg into stos aam add call push mov mov mov push add jns addr16 xchg test outsl mov pop cld mov mov lods adc enter int and cld xor sbbl inc out sub mov lret (bad) jbe inc mov out mov iret jg div scas lock adc and lcall add dec push push cmp jg jne dec into add adc lock fnstcw inc jne pop mov mov dec push cltd in loop jg mov ret das lcall cmp push push xchg arpl sbb das outsl or sbb jg in mov aam pusha insb pop jo jae inc jg pop ljmp dec mov jge hlt jo gs test sbb out jle insl movsb popf loop cwtl or inc mov mov jg push repz or ror fnstcw mov sti movsb add fadd and sub dec mov and add pushf cmpsl sub push addr16 mov jg out repz inc xchg jne fisttpll jno mov lea jns push jg xchg cmovg cmpsb loop pop inc fsubp jg mov aaa add daa pop call int gs inc leave jmp cmp xchg xchg outsb xor jmp sbb mov add dec add sub push inc sub aas xchg push adc das nop dec bound lea idiv insl ja jg (bad) lock cmp js pop cmp pop test daa lds push push cmpl js xor cmc mov sub pusha lods jg adc lds cld pop imul inc loope insl sarb xlat sti adc sahf pop addr16 add repz jmp dec scas and xor jae sub mov push or out mov jg push lret xchg or insb push push aas mov xor enter pushf push fistl jns icebp jg mov js sub fidiv dec xor push or (bad) leave jg adc adc jmp jge lahf insb ret mov inc shrl and ljmp jmp into sahf pop mov pop lock sbbl mov mov std sarb pop fsubs lahf (bad) stos jg call aas pop jg sub jmp jg sti ret js xchg out int3 pop pop jle cmp gs (bad) jmp das jg pusha and cltd stos dec jg jno int3 je popa lods mov setle movsl dec jg out add inc xchg lock jg dec lods in add pop loope ret mov cmp lcall cli xor lods sti jp jnp ja addr16 dec adc or sub jg lock or jg movsb (bad) jns jb fnstenv lret mov pushf dec adc fidivrl nop aad test adc scas inc lods xor jbe cmp adc inc inc aam jae outsb sahf pop or outsl pop aas or dec xor sub cli cltd cs fcoml jo fsts popf and add into fcom jg add mov mov les ja mov dec sarl sub push jg mov add or in push jg push lock imul adc stos pusha push dec cs testb push and xchg jg pop insl repnz out pop sbb mov incl fs out stos fwait xor xchg pop aad mov and mov sarl aaa repnz xchg push jg adc data16 xor out and cmp jmp sahf dec stos inc jnp jg out lret in ret mov das cmp jg leave sub push fsubr xchg xchg dec jg mov mov jg loop jo rol (bad) insb bound jg cmp sub xlat bound push sbb xor pusha sbb inc pop inc sbb xchg out jge jle jo aas inc adc cli (bad) lds push jecxz sahf pop dec scas push fcomps sbb dec jg lds inc cld jno jg std fnstenv jg push movb mov mov jnp inc cmp sti jp ja addr16 lods icebp pop ds repnz mov mov sbb repz sbb cli xor popa or xchg sbb xchg adc stc jg bswap lds mov and notb pop mov mov ja mov fisttpl mov call repnz mov add lea iret jg pusha hlt adc ja pop sub (bad) das jg,pt xor stos xchg jle mov dec hlt popl movsl cltd jb mov iret sbb adc lock (bad) dec mov inc sti pop xor outsl test cmpsb push dec xchg xchg or mov in push and ret js pop fsubrl dec sbb xchg jg dec in stc fisubrl gs enter add adc mov xor inc (bad) jg repnz cs mov scas jns jae test je arpl jns repz outsl adc jg cmpsb and rdmsr dec or cld dec adc cli popa (bad) pop jg sbb or mov (bad) out cmp out lock push addl pop mov icebp push inc mov pushf sub idivb add push adc cmpsb jg jbe bound fisubl enter dec sbb adc lds stos push mov popf lods jno aam loope lret jl ficompl xchg in jg jae leave or fildll pop loope sub and clc jg dec xchg mov in cmc aas rolb jno les xchg jg fistp ret negl ss dec jl mov mov stos loope add popf inc jb mov ja pop stos clc in inc mov insl out idivl es fnstsw dec pop mov out jle mov roll idivb loop mov jg xor sub negl xchg ljmp or (bad) clc push adc arpl jnp andl (bad) jg mov xor jg pop inc mov jg push fadd add mov mov dec sbb jg cld stos (bad) cmc divb jg mov jg mov or pop cmp push or xor test aas stc or dec dec dec pop jg push movsl sti mov dec sub mov pop sbb test movups (bad) (bad) dec adc jg (bad) mov aas int3 ds and pop mov sarb (bad) sbb or jg fucomip sahf ds call je adc push xchg stos lea or and test mov dec sub jg aaa pop add les mov cmp notb mov push push mov inc shr xor lds mov dec dec test js out aas mov stos fs bnd pop std pushf mov jle cltd jns arpl jg lahf push ss xchg push sarb adc pop and mov add ds jmp int3 sahf inc out push jnp push jg je mov jg popf lods push mov mov inc jg ret pop lds mov fmull and jg pop xchg pop inc add jg mov lcall xchg aas in pop fstpt xchg inc inc bound fiaddl jns cmp dec das push jg leave daa stc or gs jg call or in add mov mov mov mov jbe dec or and jb or cmp (bad) jno mov xchg or fdivs ljmp jo loopne xchg out shrl jp jnp mov or ja enter xor inc out or jg pusha push xchg dec xchg mov fwait aas sub mov jg or add loope scas cli int sbb rcrl mov pop adc cmpsl inc adc dec sbb fidivr cs fildll ret cmp lds mov (bad) jg xchg jae sahf rcr push jg sub pop jl lock sub stos inc cmp mov sbb cmp mov inc lahf xor mov and jg aad aaa call adc mov mov inc xor jg sub aas adc ja jg mov inc fnstsw pop je std cmp mov rcll adc int3 clc out mov aas adc dec inc in sub xor mov jg jae pop call loop adc mov cwtl test sub cltd enter and test jb sbb dec adc mov dec jl xor adc loopne add fnstcw lock sub outsl mov mov mov lcall push clc cld cmpsb add lods jnp dec ds sub xchg movsl das lds inc leave adc popf add jg clc out or fist push mov jo add xchg in leave xchg jno jno push or movdqu js jae imul les jg fnstenv mov fs jg dec or xchg loope jg adc xchg mov mov add es repz push and scas test hlt arpl fimul jg cmp fwait aad sbb out cmpsl (bad) hlt mov rclb jae sub scas xchg ljmp xchg pushf pop out jg push lock das cmp jecxz mov out jge arpl jg lret jae cmp xorps cwtl hlt and xchg jg insb imul sub icebp cld mov mov movsl insb punpckhbw stos sub (bad) popf mov (bad) mov pop mov inc jg lds lock movsb aas jp pand mul sarl sub stos cmc jbe fnstcw outsb mov out int jo jecxz loopne jmp jg (bad) dec cmpsb repz js jg xor xor jg cld int3 mov lret js js mov fimul loop and scas les int3 xor mov push aas dec push pop pop or mov popf jg pushf pop (bad) repz jg sub cwtl ret mov in sarb rorb in jmp aas mov (bad) mov cwtl pop pop das xor int jg push out sub xchg pop ds fstps mov aas nop mov (bad) fcomps (bad) jg jle adc push add dec dec cmp test pop adc sbb ss (bad) mov or stos pop repz leave stc sarb mov mov dec jg cmp sub pushf fs cmp and pop faddp jne jb sti imul pop mov mov inc dec popf outsl loope jg pop ret lock push lds (bad) fsubp fistl dec mov inc (bad) std mov pop push repnz jg sub mov jg pop mov lcall cmpsb jl pop mov fisttpl repnz mov (bad) lret das adc andnps popf mov ljmp dec jg xchg push pop fsubr jg mov loope rcll stc and sarb mov sti or insb scas mov sub push mov aam enter addr16 and repz cmc xor adc adc cmp jl sti sbb ds mov in ret inc dec jg addl sub jg jo int fwait pop xchg arpl jg (bad) repnz les push jg jae imul or add jno sub loop xor mov aas xchg add (bad) lcall xchg jp dec iret mov pop inc pop cld pop cmp ret jnp fwait arpl imul jg (bad) xor addr16 loope nop mov adc sub imul ja cmp adc sbb test and mov stos hlt mov jg mov jg and dec cmp or xchg stos sbb push mov cwtl push fstpt fs xor push test sarl into add or fisttpl pop das add jnp dec xchg mov jns jo dec test mov ja fldenv mov sti stc mov rcl sbb icebp jg int popf fadds jl sahf mov push pop cmc jns jg les inc jg xor mov ja or popf xor jmp je cli jmp lds iret and sub xchg pop jg rol inc sub mov iret aas xchg (bad) sub test jns insl sbb in add loope aas push mov and mov push pop dec aam adc testl xor fsubrs add dec jmp dec jb iret insb dec xlat jg mov pop div outsl (bad) outsl pushf xchg mov mov cmc insb lds gs insl ret xchg sub cli inc pop call in in les jo insb mov mov jge push stos fstpt sub adc jg jmp popf jbe add mov sar loopne mov jl pop pop xchg and lock fdiv mov rol push mov ret repnz loope jg sbb add test sar cmp stos lods xchg mov dec add jns shrl inc jle xchg test pop inc stc (bad) jp clc mov out adc pop ret arpl dec test pop mov (bad) xchg mov (bad) aam nop push xchg jg aad push mov mov inc jg idivb je hlt adc leave lahf jno mov imul mov cmp imul and std mov inc pop jmp arpl fbld or jg jbe std xor pushf ds pop dec mov xchg out mov sbb int cltd push aas aas cwtl icebp and mov xor popa jg sub (bad) int3 jg cld add mov ds lock mov loopne jb dec add jbe add or (bad) pushf adc xor and sub jg popa pop outsb and roll aas xor cmp xchg cs lcall sbb andl and (bad) enter shl mov das push roll loopne aas xor mov fdivrs repz nop not xor cmp (bad) sbb mov sub stc jle xor add test jo mov push mov imul cmp fisubr (bad) cmc jae push (bad) and jg sub shlb add adc jg data16 mov mov ret popa in jge cmc xchg leave pusha mov add jae cmp inc xorb add fwait jecxz jg add frstor cmpb adc fisubr pop loop cmpsb or sbb sbb cmp sub lods imul mov fptan (bad) jg or aad hlt aaa test test and (bad) iret dec mov cwtl repz jg stos loopne mov push sarl push pop cmp inc imul es aaa fbld dec mov pop sbbl movsb jae sub mov fs or in jae mov cwtl ds adcl add adc mov arpl xchg push sbb sub and sbb jg aaa testb js sub (bad) outsb into insl mov out inc sbb lret jg cwtl shr movsb je sub sub sti insl lock ljmp call es pop or sub sbb push (bad) jg mov pop les xchg mov loop xchg out imul dec ficomp jg popa call bnd icebp jg ljmp jg push or test jg mov mov lcall ret pop (bad) mov mov sub mov idivb (bad) dec jmp xor xchg cmp gs xor pop jge mov jnp lds (bad) cmp out inc push xchg xchg std hlt jae lahf pop xchg pop pop push dec sub aam ss mov lret xor loop fsubl sub xchg pop frstpm(287 and or aaa mov loope negl dec sahf cmpsl jg sbb lahf push data16 pop bound jg in push jmp jle cmp mov fwait ja xchg das jno jg dec pop mov sbb push inc es and cli dec (bad) iret jg pop nop adc lods jp jg std jle mov xchg mov je,pn cwtl mov push dec mov cmp fildll (bad) notl inc sahf lock pop (bad) cld or (bad) xor cmp add add (bad) adc sahf jg adc mov lea pop xor jno push jg inc fldln2 dec push xor push jg aam aaa icebp xchg inc sarb cmp test xor bnd test push divb mov loopne orl jg mov pop repnz sbb loop push cmp sbb sub cld call hlt sarl mov xchg pop inc inc mov jg push icebp mov cld inc repz sbb mov jg jecxz ja stos je aas pop (bad) std popa inc enter mov icebp repz dec jae cwtl jg out pop push ljmp jp cmp fnop pop fnstenv mov ja inc in pop aaa aas and pop dec mov iret mov movsb mov lds add test fimull cmp sti push ret roll jg push fnsave insb adc mov xor dec cmp add clc fstpt rcl and push lods push scas push repz rclb mov nop mov rol test pop jg xchg xchg in push fimul mov sbb mov xor xchg data16 push inc add xchg stos and aad adc scas jecxz jg cmc nop pop mov fidivl pop ret pop jg call in popa mov push outsl ss xor xchg xchg std bound jg xor imul pop dec pop and pusha mov dec popa push (bad) adc jno leave jns jg add jge sub sbb jns sti das enter cli push and mov mov lds inc jg imul cmp aas inc pop loope out jg sbb ja (bad) xor jb add ret (bad) sarb jg dec (bad) in repnz loope inc dec jg fstl (bad) cmp mov movsb (bad) sarb push out adc xor jg sbb pop mov out pop popf mov rcl ss incb and lahf clc sti cmp ffreep dec cmp fwait movsl sbb leave outsb aam cwtl inc jg daa sub aad xchg stos outsl push fdivl pop push jbe ret and push pop inc insb loopne arpl jae add sbb orl into nop outsb xor xchg inc push jg out mov pushf pop test into inc cmpsl ds pop xchg push inc inc out hlt sti repnz mov cli jne jg jl outsb sbb dec mov ja xchg pop sub roll and sub outsb repz xor pop xchg dec xchg xchg xor lea jg adc mov add jg in and or aaa cli ljmp mov movsb mov scas in repz cmpsb xor into pop mov push cmp stos call push scas and aad xchg mov or jg mov es dec jg xchg sahf clc out mov jg call in jg mov mov pop ret mov sub jle pop (bad) jb xchg jg cmpsb adc jg inc fisubrl lods mov push ret popa dec xchg imul jg xorb pop or test fwait test icebp jns into xchg movsl js cltd aaa mov inc mov mov cmp push jl cmpsl (bad) mov js and mov jg lret dec pop push jo cmp arpl adc dec xor mov dec xchg jg std popf mull sbb xor dec imul mov inc fs pop mov cmp dec fchs test dec jbe push add lods cmp das jo push notl mov mov push jle call inc test push mov jae es out sub fldt adc pop jnp aas insb mov mov cmpsl fstpt inc and cltd jg cmc notl inc pop jg rcrb arpl mov mov in ret jg push jb pop test divb loopne pop fild int3 jg cld adc sarl ret (bad) ss fs jp pause fisttpl lcall into sbb inc adc int icebp sub (bad) jg or fnstsw ret inc and out mov out arpl aas sti in hlt and jae cltd jg or pop mov sahf jg popa jp inc repz ja in jg push jo (bad) fdivs and pop jno or insl and jg cmp add jg repnz xchg cmpsl or cmp out stos popf ficom jg in sbb add imul jae outsl (bad) xor dec push xor or stc mov jg hlt sub sti cld mov add jg cmp pop loop lock add loope jns mov ja mov sbb xchg lea test push inc sbb testb in sub jne adc dec ss lock (bad) popf adc sbb popa mov sbb jg jmp (bad) jle xchg (bad) jg sub ret into and sbb movsl xlat fs sarb repz cmp je dec push jg (bad) xor test mov pop inc jle xor rorl repnz push addr16 aas jmp jp out sahf inc pop and lds incl les pop push and lahf adc xor mov mov outsl shrl lahf and fstpt inc outsl (bad) pushl icebp fisttpll xchg cmp or hlt ja or aaa in test imul mov and sbb mov cs mov mov leave stos jnp hlt cmp dec mov divb dec pusha adc jno enter cmp mov and sbb sub dec sbb fcmovnu addr16 mov outsl jg mov cwtl aaa jg pop jnp mov mov push rorb cli push jg jmp jno nop pop out lods addr16 or add popf sahf lds cli pop bound outsl outsl pop mov ds stc movsl fldl push outsl jns sbb pop jg and insb sahf pop sbb jo add push adc push in (bad) sahf mov jp stos test jg ret or jg sahf aam mov nop cmp clc or movsb dec jg jge jnp int andl xor jg lahf fstpt mov pop jno addr16 jne movsl (bad) cmp add outsl fisttpl jg mov icebp bound shrb jg and imul sbb lea clc aas sbbl cmp negl dec fdivrl and jns cmp cltd inc (bad) jg mov jle mov xor mov jo out mov mov ja (bad) sarb test outsl mov std sti test popa jge jnp fdivrs inc xor in pop push jg fwait arpl je out cmp enter fcmove mov ja cmc mov std jg insb or cwtl enter sbb icebp xor add rolb add jg enter das ret fpatan pop xor (bad) pop cli (bad) adc mov bound sub aas jo sub test bound push sub push xchg fimul jbe in and call sub ret lret insl pop jg out out cmpsb popf fsubrs jg cwtl fcompl mov mov divb jg je cmp pop cmp add push loopne rorl xchg and jb pop sbb rcl pop pop xchg dec mov jg push repnz test jne push fstpt ja inc add push mov outsl loop jle loope aam inc or push cmp xor outsb jg pop hlt fsubrl je mov jb xor ss movsl in fs xchg sti sbb or sbb lods jg cmp pop xor movsb call loopne sarb push pop inc push adc xlat xchg (bad) pop jg test fdivrs jl lret cli cld jg pop dec pop insl pop add push out xchg aas inc xchg mov jno xor ret jg pushf sbb jg sahf into (bad) lea and jg aaa xchg jno data16 jg mov test es das jno pop icebp imul or andl xlat jg hlt push mov (bad) jmp mov add or daa aas mov (bad) jno imul sahf cmpsb lret jg sub (bad) mov mov push test imul or and jnp out cwtl (bad) mov stos (bad) rcr testb dec and (bad) aam sub fldt lret out inc sti jg adc cmc cltd jg rolb test imul jg dec fldt inc add es (bad) push imul add and call pop sub loop fstpt xchg sbb mov or fmul fimul add jmp jg pop pop gs ficomp jg std outsb mov jae cmc jg sub pusha movsl test lret jne jg lea cmp pop jg (bad) xchg adc jg mov pop push jg or insl adc mov clc pop inc fwait aaa mov iret sbb mov adc adc xchg gs aas push jg sbb jo and stos mov jg push mov sarl (bad) int dec pop scas xchg xor jg imul cmc xchg and repnz push (bad) idiv mov mov aas xor ja xchg jge dec repnz inc jg in jae xchg jg out dec pop pop gs mov cwtl sbb movsb mov fwait out inc push test sub jg pop pop jle cmp test dec mov jge mov psubd cmp pop movb orl jg adc dec cmp pop inc jo xor andl ret add push lds (bad) mov rol bnd dec in push pusha in fsubl jg clc mov shl jg adc into jmp pop mov gs mov movsb and sarb inc dec xor shrl je (bad) fwait jg mov push xor and data16 ds mov nop nop inc movsb pshufw inc mov mov dec jg repnz cs fstps mov (bad) mov add jg insl pop push xchg mov jl pusha lds in cli jg in gs fiadd pop jno in outsl pop xor mov jg fistpll ljmp scas pop lods jg lahf outsb aaa ror mov mov dec pop adc ja jne aas lahf jge inc shrl cmpsl adc jg ret fidivrl test pop jg jne rcl sbb push jg dec sub bound out mov mov imul and scas aas or push rcrl push insb xor push cmp imul cltd leave sti inc rol jg mov jg inc or aas in sbb loope jg decl dec and lock dec shrl inc (bad) fistpll sbb ljmp jg sti sbb add push popa aas aas adc mov jae fnstcw jno cmp jg test (bad) jg sbb xor add or in sub jmp neg or mov loopne fwait xchg jae lahf xlat popf jg (bad) std jbe leave popa fs dec pop xchg movsb push ret xchg jg insl pop pop adc imul and mov pop das divl leave iret into loop lock jg push shrl enter ja movsl mov les jg gs leave push jecxz hlt xchg ljmp dec (bad) jge lcall test cmp icebp mov and sbb jp frstor inc pop sub repz and jg out daa jp fcmovne jg cmp fsubrl add jbe pop mov dec pop xchg lds push pop jg and (bad) jo adc hlt mov mov jg insb fisubr sbb xchg jg adc loopne orl jg pop (bad) jecxz hlt test sti gs out mov push push jg aad cmp aas ficoml jg std jo stos add out mov aas popf lea inc pop (bad) adc jg or inc cmpsl xor loopne jg add (bad) hlt jg dec dec and mov mov jb lret jo sarl jg xor inc add fildl mov inc fs jl add fldl jbe rorl pop notl outsb xor js stos lahf outsl ja out in mov xchg pop adc idivl shrl cmp mov sub in outsl lahf xchg imul push inc dec jns jg jge fidivrl cld dec cltd mov or dec pop clc mov aaa add mov jg sahf arpl jg xchg fwait push lret jo cmp scas cmp add jg loop cwtl push lahf adc and mov sub out dec lock pop in xchg xor iret pop pop movsl mov int negl ficompl test and cmc mov inc inc ljmp jae cltd mov jg mov lock pusha inc jecxz inc pop icebp (bad) pop cmp jae daa adc outsb fildl (bad) in bound hlt enter mov push mov mov xchg dec rorl cmc (bad) mov outsl test jmp jb (bad) jg sbb test lods pop sar cmpl lret fisub pop jg xor dec mov sub mov xchg into jg mov cltd cmp aad test dec push test mov jg,pn mov jg popf loope sbb mov pop aad mov jle jg or push cmpl or popa outsb jg ret fs jg adc and inc mov jg xchg mov les icebp cwtl (bad) jmp fucomip repz sti push cmpl dec sahf mov push mov dec jg fisubl je cli sarl call push out fcoml (bad) rcl inc jg or add sbb sti and mov ret pop loop push hlt aas sub push inc inc imul into outsb pop push jnp jg sub push not dec jg and jle negb repz addr16 xor adc es lahf popf mov xchg fwait mov and xchg daa cltd and jg sbb jg ret xchg and xlat jns jg sti repz xor fdivrs inc sbb jo (bad) xchg push mov out cwtl jg and (bad) jg scas fsubrp mov enter cltd push xor outsb std clc ficom dec sti xchg je inc mov sub mov mov rolb jmp imul idivb mov sub aad es jg mov aas mov sbb and pop arpl mov jbe jg cmc adc fisubrl jl imul ljmp xchg inc lcall clc in mov out jg mov lea ja and je inc (bad) and idivb mov sbb push mov or ror sahf outsl pop jg push popa dec jp (bad) fdivrs test dec or pop std mov sub in repz pop sub addr16 insl sti mov xchg stos sbb in cli (bad) cmp inc imul push jg es out (bad) push ss in cmp pop xor aad push daa gs je std ljmp icebp pop test pusha mov into push jg aam xchg pushf jmp add mov enter mov xor xor out jns xchg jg xchg stc fsubrs popl dec sub (bad) inc cltd sub lcall es dec push push jne mov sbb push movzww xor cli outsl mov bound pop cmpsl je xor js mov dec sarb adc dec mov pop shrb dec dec push push and dec js es jg aaa lds mov divb adc push jg insb test mov mov pop fiaddl jg les push roll and decb jg clc sbb inc gs in mov fisttpl movsb xor mov or and jg (bad) mov mov and ljmp and mov pop cmpsb mov jns sub lods cmp xorl pop pop jg repnz fisub inc mov decb imul (bad) fwait das hlt cmpsb inc jns mov jl dec lcall outsl xor jg fmull jl push fimul push cli xor mov addr16 lds scas jg xchg xchg xchg cmp sarl pop xchg xchg and jg sbb pop jg push enter add jg push push inc jg push imul fldenv jg pop adc xchg xor push push int3 push (bad) ficoml mov mov inc das lret mov lret ret mov ljmp out add ffreep jg ret (bad) xchg cltd xchg aas lret ja sbbb addl cmpsb dec (bad) insl pop in jg data16 (bad) and cmp js clc push push mov mov and mov lcall mov repnz in int3 jg pushf add (bad) pop sbb shll jne mov scas inc pop dec jbe push jno jae int and cltd jg pop sar cmpsb mov in push sbb inc insb xor (bad) loopne rclb xor enter in jg lret or popf test (bad) movsb or xor mov andb jg inc lret dec popa mov push rcrb outsb (bad) jg dec jae push jp in and imul inc sbb push arpl ljmp jg xor mov jg xlat movsl test or xor jne jbe gs jg stc out sbb pop (bad) push lahf adc jg mov daa jbe into popf out push pop sbb das cmp jg data16 pop xchg xor jg cmp adc push mov outsl dec stc insl jg inc rcl icebp movsb ds jp or lods dec loopne out divl call pop iret aam inc mov rcrl sbb (bad) lahf loop pop add xchg pop sub outsb iret lret pop in jg xchg mov dec push push fwait jg stos fildl jle jg pop and cmpb mov loope fsubr mov pop sub or inc pusha jg fwait mov xor adc pop or or xor cmp and ja push in add imul dec and (bad) mov pushf dec data16 mov divb mov popa scas ljmp pop or dec test xor mov sbb jb lret jg or decb jg in stc dec adc repnz sbbl mov xor outsl bnd add stos call lahf loopne mov jl ja out cmp mov imul iret jg jp xchg popa pop lock jg mov fild and jb ljmp testl aas xor mov lods jg sbb pop (bad) adc inc jecxz add jmp or insl ss xchg rcrb mov xlat pop scas jnp xchg mov lahf inc aas mov pop sbb in es inc jg (bad) push jge mov aas outsl sbb mov jo,pt sub js lea pop (bad) mov xchg adc jbe mov cmp rcr xor test cmc jbe mov test sarl addr16 or js dec lods out sub add adc (bad) std divl sbb jne xchg aas xor stc inc (bad) icebp mov pop add in call repz add les mov jl dec mov fild jle lods push sub jp (bad) cmp jb jg ficomp sub or loopne fs test bound jnp insb ja push mov add jns xchg jg adc shrl pop sub (bad) aas mov lahf cmp pushf jg (bad) (bad) out ret dec lods mov push fs add pop aas mov mov fidivrl inc sbb jno adc insb icebp aam inc mov fs add in out jg mov (bad) jg je push pop mov lods sub in pop push push (bad) in addr16 aad xchg pushf dec repnz jg xchg fistpll cwtl pop ljmp scas loop mov cmp jp dec movsl mov adc and jecxz inc mov push or push dec scas add sarb mov pop shrl shrl xchg and (bad) mov arpl inc mov and popf (bad) outsb mov push pop jg lods dec jg sub movsb std pop data16 leave push pusha int test sti sbb mov mov dec dec push in jg (bad) xor stos cmpl jmp add (bad) jmp outsb jg dec cmpsl cwtl je int and std or cltd sub push lcall fnsave fwait mov sti xor cmp int3 je jg scas lret rolb mov push mov sbb cmp jno cmp sbbl test sbb fbld cmp pop cmp cltd xor aam subl jg pop jb adc les stos jg fstps sarl mov pop jne sbb and jg shr hlt insl into lahf pop jg (bad) mov jp cld loopne in subl add dec mov addr16 cmp xlat out loopne (bad) rclb jo in popf or mov jecxz aas mov loopne inc ss sbb jg fisttpl xchg mov pop incb les push and into outsb shrb dec inc je mov (bad) mov adc cs mov push dec dec sarl mov (bad) push daa inc inc repz stos aaa ret cld enter sbb scas nop inc jg ficompl dec loope jg sbb xchg xor mov out das pushf call imul jg movsb inc dec xor pop ja mov jg push shlb cli aad add push jg mov dec jg and arpl push into jg cli dec (bad) xor aaa stos incb sub in jg cwtd imull pop mov or ljmp int3 dec inc push and cmp sti call stc inc jecxz stos inc push fadds mov add sub inc xor ja mov stc xchg inc pop jg loope and dec jg cs and jg adc dec jg pushf jl sbb test test fimul jo test and sub xchg xlat inc (bad) out mov sahf inc jns lds in int inc ljmp push adc sahf add push fistpl mov dec daa add sarl mov divb mov repz scas in out push dec mov push outsl (bad) xor outsl xor sbb jle cwtl jg lods xor sbb dec inc and bound lcall xor jbe pop or jb mov mov iret jle jno adc mov adc xor xor mov insb les inc mov mov scas jno xchg jo lods ret and sub daa cmp push pusha (bad) lock rcll cmp loope sub pop mov sub xchg scas jg jns shll inc pop push cmpb xor mov and and sti pop xor scas addr16 (bad) mov jg pushf mov pop insb out scas jle jg stc fdivl cli and fs daa xchg jbe icebp or xor jg into lcall (bad) mov mov lret (bad) adc mov or cmp jg outsb imul lahf loope jg fsubr in lcall push das out jg lea cwtl jg sbb std leave pop dec dec je cli add inc mov adc mov ret nop bound (bad) jne cmpl out insb fs scas ljmp and or push dec sti inc sbb cmp aad fs enter dec adc xlat repz daa aaa add push fs jne jg aad in cmp xchg (bad) sub lods lret mov dec cmpsb out vmovdqu repz jg inc push and (bad) adc inc xchg loopne jae sbb test mov jg mov iret sbb mov jns in (bad) pop stos (bad) lock xor and aaa pushf mov ds and mov pop jmp mov jg nop ss jg mov (bad) jbe push mov rcrl js movsl xlat fidivrl lea xorl pop and cmpsb in cmp sti mov sahf dec pop xchg jg insb movsb cmp sbb jg aaa mov shrb idivb xchg xchg cmp jle and pop sub or aad ss (bad) outsb adc lcall jge push mov in inc dec mov mov repz rclb movl dec jg sbb xchg xchg pop nopl jl clc jnp mov mov ret inc ja (bad) jg mov (bad) aas stos jbe and push test scas xchg mov pop cmc jg sub jmp andb sub in sahf jg fs mov dec add jg or out (bad) fcompl jle cmpsl (bad) xchg sahf into std pop pop cltd push cmp jg ss mov jg push out fsubl icebp mov fidivl in jno dec mov add pop or push adc inc (bad) mov pop dec mov mov adc clc xchg jnp stos and ja mov outsb jg cltd (bad) insl jmp sbb mov xchg xchg andb mov popa dec stos inc jnp pop xchg inc call sub mov or xchg test sti mov inc or repnz push sahf xor mov jg or sbb jo inc inc jg jmp sahf movsb dec xlat pusha jg adc shll shl je aad jg out mov inc hlt jg pop jp adc scas (bad) jg xchg xchg lret jmp sbb xor mov push popa sub mov loop inc arpl jmp jge cmp cwtl outsl add out push and in lods test loope jg dec (bad) jbe mov sarb ret jp inc lods mov and addr16 fldl insl jg hlt jnp inc stc jg and sbb push aad push call (bad) mov ret adc add dec push loopne lods push xor sub add fsubrs jg mov sti lea std rorb rcrb cmp mov jle mov test cmp andl xor jns push sar inc inc mov fbld int3 jmp aad (bad) pop test push negl xor jg pusha imul adc lahf mov loope jg pop jge jl fimul int das test in jge or ja in jg mov scas push jg jge cs sahf mulb push sub cltd and fistl inc push lret cmp lahf jg fildll sub or and sbb mov fisttpll cwtl xchg jbe das les xor out pop ret cmp repz stc lahf mov jg clc es jne push xchg pop sbb repnz sbb mov outsl mov outsl xor jg adcb mov inc loope jg imull cmpl (bad) (bad) faddl data16 mov pusha ljmp (bad) insb xchg inc jns fdivrp xchg test inc mov into jecxz fwait xor xchg dec fnop mov or imul sub jg mov mov enter add js or xchg mov iret sbb jg and mov push sbb jg fsubrl jo ret jg sbb mov cmp (bad) fsubs fsubrs aam mov adc ror mov daa stc jecxz push lcall cli shlb cmpb push pop jle test jg lret into mov inc jg cmpsl imul xchg aad in push test es sub (bad) mov ja int3 mov data16 adc das jg jge,pt jle jbe mov scas sbb mov dec sbb pop mov jg mov test mov and jbe push (bad) push inc add sub mov mov pop cli mov mov xor or das sti cmpsb xchg mov sub jg popl sti rcll mov sbb arpl jg icebp inc jb xchg movsl xchg popf cmp repz aam mov jg arpl sbb sub fistpll ss movsl cmp out jg pop fdivs xchg stc shrl xor (bad) rorb xor inc jbe insl sub lahf cli and pop (bad) ss aam inc push inc cmp lods (bad) jnp push sarb xchg lea in dec mov jg dec int data16 push xor add add lds xchg jg cmp adc dec and xor mov mov leave add cwtl and sbb cmp les loopne cmp pop adc aas repnz cli lret xadd pop cmpb jb insl push and mov sti push jg mov mov fistp ja adc jecxz jg call mov ror and jno in mov jno and lods bound pop adc add xchg xlat jg xchg mov add jg int3 sbb xor popa fldl add pop je push sbb in jne sbb jg jbe fwait mov inc cmp fistpll loope sub or mov cmp inc jg and adc sti inc pop cmp loop (bad) cmp mov repnz lds add push sbb pushf (bad) es roll pop jg add pop jg mov mov out sbb lret jbe lock iret loope (bad) jg test in pushf mov jne data16 insb add dec leave ja jae mov xorl mov out push cmp sarl (bad) sbb mov xchg push out test jp xor lret xor aad add aas pop daa xchg or pop adc lods cmp bound push icebp pushf lock jnp lret aas or mov xor lds push push sbb mov insl mov cmp cwtl stos lock bound xor and add sbb push pop fldt aaa jle adc or pop inc (bad) mov inc pop xor cli pop fcoml dec pop jg mov out dec jg fist add ja (bad) movsb push arpl rcll sbb loopne sarl dec inc dec xchg addr16 ss fcoml pop lahf mov cmpsl movsb std out aaa mov (bad) fstpl int adc repz bnd pop xor insl jg adc push jmp repz jg fucomp jo bound mov push outsl dec mov and imul push cmp mov jg gs adc popa and mov lcall repnz mov inc mov sub jge pop jg ret sub enter sub push loopne adc push mov jp inc sbb mov jg dec shrb and push sbb mov push push adc cmovne pop push aas sub jle mov fisub mov mov cwtl imul leave mov je cmp roll push popa push jg and dec mov mov jnp push pushf xlat push sub mov outsl push xor ret sub mov mov sub dec (bad) cmc loopne arpl (bad) mov sbb mov jo sti ret loope repz fldt in (bad) dec lea jne push xchg jg loope sub pop ret push fildll (bad) push jg call test add lret push jne aas sar inc dec negb and mov ja inc push push xor jae sub ficoml adc mov lea jg pusha into ds ret jg lods imul fnstcw aas ljmp inc cs insl mov fs pop jb xorl pop jg fbld add jg xchg andw inc or int3 bound xor aas cmp sub jg inc dec loop xor sbb aad pop mov xor outsb adc fdivrs mov inc (bad) or jge dec stc and call cmp (bad) fldcw sub insl inc adc movb dec jne nop jp stc jg and punpcklwd dec lret daa fsubrs jae pop push inc cmpsl xchg test fld in sbb sahf test cmp cmp repz sbb outsb arpl icebp adc inc fs je xabort xor push cmp lods orl sub test cmp adc jg jle cld or lock loopne pop clc test jmp add inc inc (bad) mov jg iret xor out lods push sbb out mov pop loope (bad) mov test (bad) fildll jg in cli dec pop sub lds jg add mov jmp (bad) sbb add dec mov pop (bad) dec aam mov mov jg and prefetch cmpsl sti scas sub or data16 jg and lret xchg mov fdiv loope xor pop enter adc out sub cmp clc js push lock and dec out cld inc pop mov les pop hlt stc (bad) lret lds jmp repz cmp es xor mov mov pop adc xor aaa popf inc jg nop dec imul popa addr16 idiv mov pop cmove mov cmp cmp lock fnop add jg stos push enter fld cmp rclb insb cmp jg mov sti cmp cmc lods popf or nop addr16 scas leave mov lds in sarl or sub stc mov mov jg sahf (bad) frstor jg into arpl pop and jg mov push das bound mov pop imul sbb jg sbb sar push aam jg (bad) sbb int mov add std xchg push (bad) fdivrs cld fcmove das data16 jg jb test jg popa xor dec jg cmc (bad) jg mov jg,pt lock inc sub pusha flds jg mov insb cwtl jg jge sub mov iret ja pop insb inc jg mov adc ljmp mov cmp mov inc pop sti lock push jg leave mov js lahf movsb fwait jg sbb jno mov (bad) mov push dec jg xchg lock push inc adc dec inc xor stos lods jae imul rolb pop ficompl xor mov fmulp dec dec insl jp hlt adc arpl jg mov repz pop push jg sbb inc rorl inc jg aad pop and adc (bad) out inc pop xchg es loopne shll mov ljmp push std test inc notl add xor lcall cli sub jg add add pop cld pop jno jg imul jg mov jle push xchg mov repz icebp pusha pop push je jg mov ret push aam adc sbb lcall loop cmp scas mov arpl pop imul or iret mov into out inc pop aam aas and cmpsb stos hlt scas xchg mov sbb outsl jae fbstp ret jne jnp cmpsb xlat xor sbb das pop push jg mov xchg xchg jle xor movsl aad jg pop adc add mov cli cmp sahf jle jg (bad) out fidivr add (bad) ja xorl push xor jg pop inc cltd jge jmp sub imulb xor out sbb orl push inc fidivr pop add stos inc std pop in jg mov insl inc mov xchg mov push jg cmp into jg inc lret cmp in mov sarb jne imull xchg ds jb in data16 mov decl mov adc cmpsl sub arpl mov dec ss push and mov daa in decl outsl inc mov jg andl lods push rorl jg aam popa mov negl inc inc mov fidivr test fnsave inc js xor add jno cwtl jg ds mov jg dec mov aas dec (bad) decb cmp add mov loopne roll movsl fnstenv ret fsubs sti and and mov mov adc stc ss (bad) jl mov push add fcompl jg cmp loop pusha stc lea roll and mov fsubrs in or cmp inc (bad) mov aad sub movsl mov dec aas mov nop cld jg inc out add ss xchg push xchg add pop push inc stos cld mov jmp ja xchg mov aas jo sbb jge sub (bad) loop jg cld xchg cmpb mov push and (bad) jg aas lret stc lock and mov aam push inc sarl add sti cld cmp les js and pop mov mov push cmp push dec js mov mov push add push xor repnz ret aaa sbb (bad) sub push lea or enter mov or outsl or aam kandnb jg cs mov mov jg bound xchg pop adc inc (bad) sti pop out imul cmp jg sarb cmp scas out lea xlat aas add add sbb dec fwait jg mov (bad) mov cmp mov push lds cmpsb scas pop mov jg and mov inc and cwtl fsubs xchg jle jg fstl sbb test cmp adc cmp inc scas sub stc test lret inc mov nop in sub jg lcall jg xor mov xchg shlb out out xor in inc xor aaa je fs jg xchg adc fdivrl cwtl stc push ret mov sbb sub pop inc mov fs dec push dec sbb and mov mov xor lldt jg dec adc add adc jg ret clc push inc insb int3 repnz addr16 repz adc lret inc sahf dec bound push lahf dec push mov mov pushf jnp jg data16 dec inc mov jmp cld loopne ds dec and mov jg int3 or fwait push addr16 push inc addl mov lret jg dec inc int3 sarb (bad) jb lret push ds jo sub mov insb dec mov enter mov xchg cli fs mov adc jg inc push jne lcall and jb ss push inc sbb popa les fwait xchg jl inc (bad) xor data16 mov out add test push mov test xchg aam daa push insb jg and imul mov or xchg mov outsl mov cmp loop pop or push clc sahf inc cmp jle fwait movsl imul or cmpb adc jg pop out and lods mov outsl add jb mov cmp cmp mov inc and out or insb into dec pop mov aam inc sti clc mov pushf (bad) xor cld bound out cltd sub test jg jno mov jp inc mov cmp ds jg push lret lahf push outsl je jg popa aas icebp add test call sbb inc movsl mov adc jg js or lods ljmp mov sarl cmc and (bad) js je xchg mov jg and jg test jg mov inc push jg aad out pop pusha xor mov ja dec and dec xor repnz sbb inc pop repz jnp addl mov (bad) mov mov mov inc test lods adc insl mov insb inc sbb adc push jg xchg popl and jg mov mov in jmp sub inc or arpl mov or mul push jp and jg movsl aam mov jg cmc fldl hlt rorl repnz (bad) jg ds jge push leave jb pop or fisubr mov xor mov (bad) and dec jg sti jp rclb jle push shlb aas popa xor test int jg jge sub int3 shl jne push pushf push jg ret inc iret push aaa jg jecxz (bad) fbld dec mov mov mov dec jl mov sub iret mov xor sahf fsts cmp push mov lods sti adc mov inc xchg adc dec xchg and sti adc cmpsl sub sbb push (bad) mov into cmpsb cmp fwait or jg xor test (bad) mov mov mov loope fsubrl pop push sub out jg scas cmp mov xchg sbb or sahf jle ja mov jno rorl jg adc icebp (bad) xchg jg mov fmuls jg jnp dec (bad) insb sbb mov xchg arpl popa ret stos cmp sti inc cltd push inc in jle shrb xor mov push popf pop das sub insl lret arpl jns loope cs cwtl negb lcall popf xchg mov sbb incb mov sbb inc (bad) sub xor imul fisttp mov cmp sub cmp in mov push jg fcomps cld xor and jae or jg fbld cmpsl test ja daa movsb cmp mov (bad) dec ljmp imul cmpsb lcall sbb aas mov out jp jg xor mov jle nop cmpsb xchg les ffree dec jg test repnz cmp xchg mov arpl inc pop lret adcl push sbb hlt js xchg loopne int mov jl inc lahf cmp je push cmp jns gs mov inc sub add arpl jg dec dec test sub and push mov adc lock pop xor aaa leave push jecxz mov pop cmp adc mov pop and dec pop inc dec lahf mov and lahf pop sub jg or jmp std mov mov jp pop mov (bad) sub in mov sbb jmp mov or ss push pop mov sti mov (bad) xchg mov mov mov ja sbb mov dec jg clc mov fidivrl ja dec xor xchg and jns xor in js jg cmp das push int mov incb hlt jg add (bad) jg enter pushf (bad) mov xor sbb (bad) addr16 or jg adc dec cmpsb jg push xor and scas push and push inc scas jg mov call jne ret fistpll mov (bad) dec lret aas repz jmp shll mov pop sti js xlat adc sbb and lods xor push out mov or (bad) ss outsl xchg mov push mov hlt icebp inc jl fabs sub sub seto pop out inc addr16 add jge jg lahf test push fs sarb clc in mov aaa gs cs sub mov cwtl sub sub outsb jg adc out or sarb enter mov pop add popf jecxz jg std adc inc sub jg ficom das push sub testl outsb mov dec cmpsl cmc mov jne dec aad jg lret inc cmp in enter mov loopne cmpsl xor sub ja cmp sbb inc pushf jge (bad) mov xor and cmp jns clc es test in push je cmc jg jle and loop jg push int push daa pop nop jg jle sub jg dec pop pushf das pop (bad) aaa jg imul lock sub jg adcl jg aam bound stos idivb mov push pcmpeqw sbb and outsl inc daa scas aas mov jle daa dec dec fist js mov xchg inc jbe jg sbb sub aas gs mov std icebp xor or ds push jmp (bad) jg outsl rorl and jno sarb mov and sbb push cmp mov jg xchg sti pop mov rcll jae cld mov sbb iret jg (bad) mov ljmp mov arpl jg cmp sub mov sub mov cmp es (bad) jg mov inc jg mov xorl sbb mov rcll stos xchg test push insl ljmp pop lock mov jg mov jno push insl test inc enter jae aad or mov jg adc movsb jg sahf insb inc loopne stos and fcoml (bad) push adc push ss jg sbb and sub sti pmulhw mov fistpll and outsb shrb inc jnp push jg pop lcall fcoml jg lret mov mov shll xor je ss testl mov je cmp and xor popa imul aaa sti ja xchg pop adc icebp ss xor sbb push out fcomp xlat dec jl add jmp je aas into jle xor pop jnp rolb je dec int3 jg out aas out insb jg cltd repz imul lret cmp xchg lock pushf and jnp sbb jg fisub sbb pop mov mov (bad) adcl dec jl sti push mov mov jg testb cli jns out cmp addr16 mov sbbb pop (bad) loopne imul or mov cmpl daa das (bad) xor or ficoml sbb jl idivb adc lods lret dec arpl insb ds pusha inc dec addr16 xchg adc or push sub mov out jmp bound cmpb (bad) ficoml push inc hlt dec sbb cmp mov xchg wrmsr mov dec outsb sbb inc mov push inc jge (bad) push adc mov (bad) adc je (bad) ljmp pop jmp mov stos xor sub inc mov gs sti pop (bad) enter leave cmc stc xchg and test cmp stc outsl xchg and jg dec xchg jno movsb fdivrs imul jg in je push xor lods incb push inc fsubp cmp int mov or cltd aas xor push ljmp aas dec push xor sbb orb jg sub sti pop es jg loopne popa dec fsubp cmp lock mov insl add (bad) and and mov dec sub xor xlat in mov jno mov sbb clc mov push call mov mov scas scas adc fwait pop aam mov lahf push add sub mov outsl orb test sub push movq pop xchg insb add push lret mov pop push jg fmuls mull jg out lock mov aam cmpsl add jg dec lret adc jnp lret repz arpl sti dec (bad) jg sub es psrad adc iret sub js cmp jg loop addr16 addl adc fcomp pop or jg jb sub mov push push cmp mov or push lret cmpsb leave int3 sbb into addr16 stc mov cld sbb aas popa lds xor inc mov lret xor scas into popf icebp inc jle add jg dec and push inc adc xor cwtl sbb or mov into xlat push cmp test std scas or aad jae loope push inc pop cltd mov add xchg sahf jns mov clc faddp movsl jbe dec sub jge cmc push stos imul jnp repz fldenv dec pop xchg push jg dec cltd into pusha mov xchg mov in pop jg jne rcrb mov pop test jne iret mov pop pusha ds or sti sub dec push imul xor xor adc cmpsb sarl mov xorl mov add es pop fcmovne (bad) stc mov in mov outsl aam (bad) jg mov popf aaa jg mov sbb push dec push pop mov lods sti mov xor push adc mov dec fnop in sbb push nop mov insl je jg add pop mov push mov shr das test repz mov fnstenv push push shll xchg xor cwtl sub stc xlat imul mov neg ljmp out jg pop enter dec popf jg outsl sbb ret mov jg xor fwait jg push xchg and lret (bad) mov aam jecxz loop mov pop sbb pop sub hlt nop jns mov stc movsl jg fstl sarb fnop cmp xchg mov ja sbb mov xor aas lcall inc jge,pt loopne jl xchg out insl dec mov ret lret mov clc xchg mov push push jg hlt mov add dec jo das cmp or jg dec test pushf jg inc mov push cmp rorb out (bad) outsb sub sub inc and jecxz push and mov adc xchg and lret movsl lea add jg cld inc test push mov mov dec adc jg jnp lcall adc ret sti aad fdivs lods ss nop and fildl inc lods push jg add loop lahf cmp jg fmul shr xchg sub loope mov sbb adc es mov and rcr inc mov and sbb jg (bad) push jns dec xor mov loopne cmc addb jg stos inc test jnp xchg jg lret inc xchg pop add (bad) xor nop lcall adc jg add push (bad) lods cmp sahf outsl mov dec cmpsl pop jg,pn aam es add out jae sahf outsl jle lock je push imull gs out xchg scas sahf pop hlt sti ljmp arpl stos mov jg sub mov adc push jg pop dec sbb pop pop sarl mov pusha mov int3 stc jg jo sbb pop das jg,pt adc lahf and sahf sbb cmp pusha rcl pop arpl mov pop mov jns inc adc pop cmp rcll xorl in insl and stos cltd aas in sub push pop dec cmp mov cmp mov pusha mov adc fmuls jmp inc mov (bad) sbb icebp mov jg in int3 fisubr aam popf and push ss pop add test ljmp add mov mov xlat mov adc mov mov stc sahf leave fistpll sub push js out push mov imul cmp jg xchg or jg add push push cmpsb mov xchg dec push pop and (bad) lds xor pop stos es lods sti adc pop scas pop and push lock stc push (bad) jg sti sarl mov jg dec in cld and add dec mov cmp or stos dec inc mov fwait cs sarb inc dec inc jg and or mov nop mov out or jg add cmp and xchg pushf enter push inc and fwait dec mov push movsb push sub sarb dec jp pop jnp (bad) or iret js in mov push jns aas mov mov pop inc dec push stos jg sti inc xchg inc lret (bad) and rorb lock dec xor push sbb mov hlt and loop add jg jmp and das push insb stos jb jg jecxz xor mov cmp xor inc dec aam jg js dec or dec cmp std and pop or cli jle int3 (bad) fisubr mov ja sub movsl xchg dec in and cmp xchg lock pop xor dec outsb aam dec jnp ds fidiv nop xchg dec scas xor jg cltd sbb jg sbb ljmp jg add cmp aad jg les hlt gs leave imul in lods add pusha fnop movsb push jg cli addl mov aas mov xchg mov mov (bad) dec mov enter and pop out inc push pop mov cld cmc ljmp arpl jg lds jle (bad) fdivl pop cli bound sti ret pop out push push arpl (bad) insl sub sub pop push lods push xchg lock jg (bad) mov jg test out push jg (bad) pop pop popa loope jg or clc scas add gs cmp or notb mov cmpl (bad) out aas sbb call inc add push in fidivrl jl push push pop ss sub andb (bad) cmp addr16 jb,pn xor push and jg insl ja jl lods jns stos push mov pusha mov jmp out add test xor movsl cmp mov mov fistp sahf mov aad fst add jg or loope mov popa xor stos add icebp testl gs lea jg or sbb push cmp (bad) in sarl sbb jno out and repnz and or imul pop shlb jg popa bts or or pusha dec push lds mov push js dec dec mov sub cwtl jg (bad) cmp loop test xor movsb jg leave xchg imul fistp push xor sub mov xchg shr xchg sbb lahf pop jg and mov imul pushf sbb icebp jnp dec imul sub sahf jg sub jno lahf inc mov aaa je lahf mov jg jbe roll mov std push or sti (bad) scas lret pop pop and xchg js jno mov lahf stos rcl daa hlt das sbb inc mov jg sub add dec pushf add pop push mov ja or outsb aas jp orb push jno mov ret pop rcr movsl xchg jg xchg sub jg aad mov outsb jge jg lret jle or mov xchg ja pop aas lock push jge addr16 dec aas mov lea ret shll fidivl jg sbb inc pop jg mov mov cmpb daa pop add lods add sub and lock or fs insl mov nop aaa pushf sti xor jg mov ret sbb nop les add divl mov sub fmuls and out sub or mov xor sbb jg cmpsl jno jnp leave mov bound sub cmp mov add pop ret pop fstpt adcb repnz idivb scas rorb movsb fisttp mov pop test lret insb jg mov int jg push les (bad) sub push mov aad jae jg sbb inc jle movsb xchg jg ficomp int and mov sub movsl jg dec xchg inc addr16 outsl push jg test add cwtl outsb jb mov sbb adc add mov pop pushf dec ffree jg sahf das dec idiv push xchg jg mov xchg cmp (bad) jno xchg call dec mov ficompl out push xor adc pop sub mov mov mov fnstenv xchg movsl stc jg,pn cmp and mov addr16 cmp and stos mov or imul insl aas insb pop cmp repz dec call int3 or cmp pop loop cmp fisubrl das aad bound mov clc adc leave test jo jg inc xor addr16 (bad) rolb jg push adcl xchg push add scas fidiv sti mov or jp jg iret mov jg aaa xor movsb in movsl jg sub xor mov mov push outsl ret gs sarl pop jno out fcompl jg clc add ret hlt lods jmp inc sti cmc mov jg add push sub xorl cli jne sbb or mov mov add dec jg push mov popa sti pop cmpl xor cmp sub ja and pop test cs pop jg iret repz mov or and jne xchg mov inc or mov ds mov mov jno jg xchg dec test dec das std cmp inc jle scas push movsl sbb push stos outsb dec sub sub adc xor jg sub pusha lods paddsw dec jp sbb push jbe sti and mov inc jg mov xor jecxz movsl adc and ret test fsubr jg dec shll jg popa mov cmp pop or jle test jg adc (bad) and sbb aas sti sbb ret dec dec xchg jg cmp inc jno mov xchg lcall ds xor mov xor mov les lahf jle cmpl sub mov cmp out pop aad imul add dec pop xchg xchg push adc mov ja mov dec and inc cwtl outsl loopne and jg mov mov popf js jle xor cmp lods adc imull xchg sbb lret aas inc popa aam inc adc add jg sar sbb and pop movsb es outsb das cmpsb jbe lods lahf adc js insl inc jg xchg (bad) mov and inc ja je rcrb lods push sti dec inc push loope iret mov in daa jg inc clc cltd jg jle sarl pushf sbb jg add out nop pop push mov int3 pop mov daa or or aaa push clc sub jle inc push xlat cmp bound roll int3 add leave jo jb (bad) idivl mov adc call pop pop fwait inc jg xor lds mov pop sbb dec cmc mov jg or add jmp dec sub shll push xchg clc outsl sub mov add in imul xor pop lcall xor xchg std addr16 mov mov inc push cli ret push (bad) sbb add jge adc sarl inc call lods mov push jno or arpl xchg movsl insl jne jg fwait cmp inc jg test mov sub jg or cmpsl aas add dec or (bad) ds (bad) jg addr16 repz bound jg in icebp push pop popl jg out cwtl pop sbb pop jle repz out pop and and fwait xor sahf test pop jg cld ja adc cmc xlat lds inc lret xchg xor jg,pt loop pop xchg (bad) clc mov sub jg dec jb (bad) or push fimull or add cmp xor pop cld mov mov and jp xchg enter in jnp imul mov dec xchg xchg stos and aad mov dec mov je mov insl (bad) idivb jae es jg pop and out push cmp arpl scas mov xchg sti sti rorl js cmp dec fdivs jl dec push xor cli add mov arpl clc (bad) sub dec push (bad) xchg leave pop mov lock jg scas cmp stc fnstsw inc mov cmc mov in pop inc sbb pop or imul jbe movsb shr cmpb (bad) dec aaa cmp jg (bad) xor and jnp jg inc loope fadds hlt js lcall je mov xor dec add jg pop xchg jg sub out pop xor jg jmp (bad) mov (bad) push movsl dec idivl fdivl dec push popa data16 sti (bad) jno (bad) (bad) push jg lods fmuls in or jg dec hlt sub mov les scas push cmp ss jg xchg lock jge sub push ret xchg int3 fnsave jno movsb (bad) test fidivrl stos (bad) cli inc cmp mov popf leave loope cmp cmpl nop (bad) jo lahf stc int mov lea sub and loop addr16 adc cmp je lods dec stc popa mov push nop sub dec dec out mov xchg adc nop mov xor je jp in and mov jbe jae jg out jb push push test mov pop int lods jle jno jge pop into icebp or hlt mov mov cld (bad) mov iret aam push outsl (bad) lock sahf xor es inc fcmovnb stos shrb mov xchg pushf pop and pop frstor lret adc mov insb pop dec fdivs jg or cmpl sbb sbb sbb pop push je xchg push mull popf mov xchg pusha inc xor sub hlt sbb lret xor dec aas sbb js jl cld ljmp mov xchg test jg in divb cmp push xchg testl xor add iret movb dec dec mov push mov or es jg int3 xchg cwtl mov call jne outsl jo jg imul pop stos fldcw xchg loope dec imul push ds mov pop sub ficompl jg scas (bad) imull adc inc jae sbbl pop jg fwait mov in xlat mov pop test xchg roll lahf push and or movsl dec out std sbb jg dec repz fstpl (bad) jg push (bad) (bad) and mov pop loope jbe dec lahf mov outsl popa xchg pop jle xchg and push pinsrw jmp pusha dec lea in sbb sti fldl inc ss sti cmpsb dec movsb test cmp loopne jg mov into sub fidivl js movsl push ror dec pop sbb inc jg out adc cmpl adc iret mov ljmp mov and or push cmpsl push stos jg xchg pusha sub dec inc cld mov loop pushf jg pop pop inc inc push sti adc ret lock xchg sarb jbe ljmp xor mov sbb testl add sub pop js int3 pop mov xchg das mov nop sti or jb lahf and xor pop inc (bad) jg addr16 and xchg scas arpl mov and aas xchg addl cs cmp jnp dec cmp stos add xorl jae push mov repnz jecxz add jg sub loopne int3 scas jg mov faddl add mov jg cmp lds fwait stos loope les pop icebp mov popa add add cli sub inc pop fisttp idiv pop mov or fwait dec cmpsb push aas mov dec jno push inc cltd insl (bad) mov inc pop lret ja add pop mov push fwait arpl cmp dec ljmp mov cmovb mov (bad) jo ret inc insb push mov sbb dec (bad) inc fiaddl jg into xor jne mov jg scas jo lcall (bad) push repz fincstp popf mov outsl pop pop xchg aaa push fdivl pop dec or ret jg dec xor pop (bad) mov cmp popf xchg jg inc movsb das push jae mov scas sub xchg js mov outsl or int cmpsl jns fistpll adc pop ret xchg inc jmp lock cltd lahf das aaa mov jg and mov jg mov mov mov daa stos dec jg and sub in push ss or (bad) xor js lret jns jg icebp scas test sub mov mov inc add lds jp pop jbe loope stos inc or add cld stc call sti xchg ror xchg movsl pop lods mov aam icebp cmp mov inc imul cmpsl mov fwait and fmuls jg xor or mov cli sub jle mov dec cmp pop xchg sbb add jge out mov ja frstor fdivrl scas sub pop xchg dec into rolb stc popa xchg iret jg (bad) icebp fsubs pop (bad) movsb push lcall pop aas sub push dec fwait xchg jg (bad) and jl jg (bad) and cmp inc mulps cmpsl mov lods movsl (bad) stc dec loopne inc mov sbb dec mov fucomip jg js xor fwait outsb jg mov inc mov pop sub pop orl faddl bound in cmp stc (bad) mov sub (bad) sbb in inc je mov vmovdqu or jbe sti push push mov inc sub sarb (bad) mov popa dec jg pop push repz lahf mov sbb jecxz lea xchg js xor mov cmp mov push pop cltd lds or inc cmp jl icebp jge enter mov ljmp addr16 test rorb add dec dec push pop arpl jg leave out rol sbb jg cmp sahf stos jg jnp adc (bad) jg call loope jg mov xchg add inc daa pop aam pop jg cmc adc lods mov dec jp int xchg jg xor mov into js in pop mov enter xchg push (bad) xor (bad) jne dec rcl outsl mov pop scas outsl aas pusha sti cmpl xchg and pop xor sti outsl fisubr popa popf push mov lahf dec add stos pusha mov (bad) aas fdivrs aad and xlat sarb sarb jg out jp movsb scas test sub jbe push lret xor lds movsl inc sarl (bad) push popl mov int xor mov push arpl cmp pop mov jle popa sti jg or push mov add fisubrl pop lods bound inc lret lock mov xor and dec push adc jmp jne mov or pop xorb xor and loope jg cmc push inc aas lahf mov cltd inc (bad) jmp cmp ss jg shrl dec ret inc mov adc imul mov test dec (bad) xchg outsl xchg (bad) cmpsb push sbb jnp (bad) jg lods mov or loope inc jg movsl in xchg (bad) adc jae (bad) and jl jg pop jne fimull jg int3 rclb lods sub pop inc and jg hlt fisttpll mov outsb clc inc adc sarb dec ja inc adc pop in push sub mov repz sti and jg pop inc out outsb les outsl pop push movsb int3 and cmp incb inc dec dec xor mov jmp test inc lock cmp xor cmp int pop pop mov add out inc sub jg push jns dec mov jg cmpsl mov shrb sti dec cwtl lods (bad) jo adc mov pop xchg jb inc mov and outsl fistp inc adc jae das movsl xchg sarb inc add or xor stos adc cmpb or dec testl pushf in jno push or push jo aas push fwait (bad) lgs sti jb and leave inc pop jg lea inc jo mov xchg (bad) in xchg or xor pop jg aam push inc lret add jnp mov gs icebp fs adc aas sub iret pop dec xchg xor push addr16 js lock dec (bad) lahf into dec les pop (bad) xlat mov jg outsl xor xchg scas dec sbb sub and jne inc mov test inc push jg inc dec mov mov ja and add push pop inc push es push ret inc lret inc xorb (bad) mov shrl addr16 popa push mov scas cwtl cmp loope stc add jg aam and gs (bad) xlat cmp fsubl and mov cmpsb pop outsl mov pop xchg mov jbe push (bad) sti xor dec in xor sbb rorb xchg pop adc inc inc mov push and adc aad jg stc in ror jo inc aas popa or mov cmp jg mov jae jg sub test (bad) pop ss pop add ret push pop into out nop jp or stos xor mov inc mov jg nop loop jno mov mul jmp pop stos sahf and lods pop scas mov jg xchg adc inc jg jbe movsl xchg add xchg aas push pop jle lahf push jne test dec jecxz outsb xchg add xor mov jg xchg jle aad les adc lds jg (bad) or push int3 or fsub jns (bad) pop xchg inc out xor push lret push push jg bnd pop mov mov call mov pop adc loope lds xchg push mov out jg (bad) pop outsb cld lds cmp scas (bad) mov jg in stos inc ret subl dec in mov jg int lods mov add aad cli dec mov add lock sahf int3 stc dec ljmp arpl lods and push arpl out dec push fmuls sti mov add sbb (bad) data16 sub lods inc sbb cwtl mov pop test rcr dec (bad) lret jg mov popa push (bad) jg cmp jno out xchg adc or xchg add mov dec jg xchg dec sub cmp je or mov xor jg fwait pop test sub cli jg cs jbe sub andb fistpll je and nop imul mov hlt dec sbb cmc jg cmp fisubl loope adcl and and inc pop pop ret mov mov out mov les mov lcall fldl aas sbb fwait mov or mov fild jne ss and pusha popf fistpl jg add inc (bad) leave pop mov xor movsl jp pop das (bad) mov mov loopne inc cmp iret push sahf das repz (bad) aas stos push (bad) inc push aad cmpsl cli stos out xor pusha mov fmul inc lds adc mov mov dec pushf call imul pop jg (bad) jns repnz aas xchg or insb add into movq jle movsb jg jae adc sub scas cwtl ret push xor (bad) sub jg sub sti outsb cmp dec jg xchg shl ds ds or dec (bad) or mov cmp xchg mov (bad) lods out incl push (bad) fcmovnu mov (bad) leave cmp sarb je scas jb pop mov push xchg xchg jbe leave repnz jg fisubrl adc mov adc subl push fidiv jg pop mov cli or mov dec mov xchg jg popl xchg stos dec push jg int jp mov mov fdivs jo or dec outsb cmp (bad) arpl and mov imul les lods cwtl int3 jmp aad cmp cmpsb fs (bad) roll aas orl js dec mov and jp xchg mov inc or jg or and mov test jg (bad) out mov pop call daa jmp and add push jg push arpl stc cmp movsl or iret aas jg cwtl inc aad lods out sti sub mov pop test mov call sbb sub mov inc jl xor mov mov ret xchg pop xor add add mov jae je scas jg aam divb (bad) negl xor imul (bad) push test in dec push mov (bad) dec or fs sbb jp sbb out push roll jns add shlb xchg dec jl dec sbb mov shrl mov enter push loope jg mov jb (bad) or mov add jg sbb jae mov dec cld movsb push sub jg movsl sbb pop fisttp jg aas add adc dec mov cmpsl outsl fldenv xor jae in popl adc sbb mov loope scas leave xchg popf in jb mov inc mov (bad) mov jnp push add jg and insl (bad) pop cmc in int cli pop repz jmp mov jg cmp cltd mov ss pop jg xchg int stos aam add mov add cmpb shrb jge jae lahf jnp movsb mov mov outsl dec and xchg push sti pop into push sub aam dec add jg test fdivrs jno js in leave sarb sbb and (bad) stos dec inc ljmp clc xor or push divb imul (bad) mov rorl bound and adc out inc inc jge pop add lods push mov dec push adc pop add jnp outsb xor loopne aad inc mov fdivrp cmc mov fxam scas sub jg sahf ret mov mov xchg faddl jle inc hlt aas pop push sub and push out adc ret mov inc addr16 dec out in jg sub dec cmp cmp fs (bad) out cmp fistpl xor pop mov inc mov test dec ss scas ja xchg sbb xchg aas daa into or ficomp jg mov int jg fisubrl pushf add imul fisttp pop jg add pop dec adc loop jg xchg into jp cwtl xchg mov inc fnstsw dec bound xchg jmp push adc dec dec lds movsl sbb or rcll loop jg scas aad (bad) push loope and jg cmp mov loop jg rcrl (bad) pop outsl js rcll pop jbe xchg xor lcall jg stos out ljmp sbb dec lret pop sbb cmp in cmc mov mov (bad) jle (bad) repnz pop dec fisubr fcmovne mov pop aas sub sub add (bad) xor jge in mov test fdivs jg add fimull scas das push inc inc xchg jg ret mov or gs fistpll scas mov out fdivrl dec push jg in jns jmp aam or mov mov and les shrb sub and fcmovne outsl add xor repnz add jg sub xchg xchg mov push jg or push dec xchg fsubr mov aam outsl sahf mov in push mov sub sub vrcpps jg mov xchg dec hlt out scas dec (bad) pop sbb popa (bad) cmp sarl cs adc and jg fwait dec pop jecxz inc dec jg popf and insb jg stos lock mov jmp sar push fldl jg aas mov (bad) jno jnp xchg sti data16 inc jl fistpll aas andl inc out in jg gs jo adc jg xchg xor js jo mov push mov in aas inc aaa div mov fidivr inc jl xchg ja data16 push movsb or sarb push mov subb push iret sbb mov cli jae icebp cmp adc sub (bad) fstl xor rorl sub xchg or inc inc or stos hlt aas xor mov adc shlb jg sarb mov jg mov pop xchg or ret pusha adc sub rcrb jns (bad) mov out mov jg xchg push mov out leave lret pop xchg and pop (bad) divb xor jg cmp ret test add repz pushf daa mov leave jg and rclb push ret or jg je mov sti clc xor mov shll xor pop mov mov rcr mov movsb jle stos jge add lret int push push push jg lea sbb inc jg popa jbe cwtl add jg leave lahf bound xchg mov jp mov pop jg (bad) fldt (bad) loope push cmp outsl inc or pop inc mov cmp rcl push jg leave imul movb xor sub ja mov pop lock (bad) pushf push push mov dec inc cmc mov subb push sahf add jecxz mov pop push push jns mov lret sarb inc mov psrad jg mov push adc dec inc dec pushl mov pusha or outsb push test or sahf daa aam sar jg pusha dec adc clc dec adc dec add xor jbe (bad) mov mov sbb push pop push mov addr16 push clc imull add sarl mov add shl push stos das outsl or jg dec adc jecxz mov mov jns jne xchg int3 jg pop (bad) and xor pop ss orb outsl jg jle mov mov mov lret fcomps hlt xor and push push popa dec bnd mov icebp andl shrl out (bad) jg out stos add push lcall rcl int3 jo call fcmove push aaa mov jg push or imul xchg inc xchg jg sub inc push jg cltd mov mov inc pop xlat add mov jg repnz push cmp mov xchg stc jp sub mov push push popa (bad) xor adc inc icebp jg mov bound aas repz mov mov cld xor (bad) hlt jne out popf ja mov fist (bad) out (bad) pop sarl xchg jl xor int3 leave pop dec add mov sbb pop mov bound push inc inc test insb aas mov (bad) cmp push jl mov mov or (bad) adc push aas aaa loop out pop sbb jg fcoml xchg cmp jg adc int3 pop push push sub jns jo inc (bad) daa xchg addr16 xchg jle pop jg in enter jl mov imul ss mov mov jg in dec mov pop vmread ficoml pop in loop fwait (bad) ss (bad) push outsb xchg mov mov inc (bad) shrb cmp sti (bad) xor les iret andb adc loop or add mov push (bad) mov xchg movsl mov or pushl lock sarl mov pop jg shll cmp stos icebp sti lods test outsl mov add dec or movsl mov ljmp fistp push sbb dec inc mov clc in call mov out dec inc movsb ss sti mov xor shrb outsb inc fistpll ds pop js push pusha scas (bad) mov rclb pop mov cmpsl ja in stos push mov cmpsb push arpl int3 push jg inc dec fwait das mov jmp shl push sub jno sub xchg std repz inc cmp lahf movsl jg or sub loopne add (bad) gs mov xor mov dec jg jns cmp jne aas jg in mov call sub add add jg fmul les cli dec mov jl xchg jg xor enter (bad) push shr das pop movsb jg fcomps jo inc mov sbb jg cli adc enter push inc lret jg out sub jg cmc cmp mov jns dec xchg sub xchg and push (bad) (bad) cmpsb sbb stc pop (bad) cltd lahf and pusha jns data16 xchg jno cmpsb movsl push mov loope test add ficompl aad push pop xchg xchg mov fwait imul jg mov out push jg int3 rcrl mov jge addr16 test (bad) movsl inc jge or sub cltd sti xchg sbb cmovbe or jg or push mov in jg jmp jae jg sub push jg mov out insb jg push mov inc mov jge jbe mov xchg jne push (bad) mov pop cmp jb jns dec aas addr16 add outsl mov jmp jg push add sub fs aas call enter adc pop push jg ret mov mov faddl stos pop daa sti xchg imul les sarl sti aam xor jg jo mov dec insl dec jo inc mov daa dec cmc aaa jge pop iret xchg or dec pop xor jnp (bad) jg push sti aad pusha ror jg push mov jge pop jg mull push cmp int dec jnp jns fnstsw xchg inc popl jg neg mov mov aas jg mov cmc mov int movsl (bad) and xchg xor xor idivb adc sti fistpll adc movsb jg fdivs cmp jg dec xor rolb mov jg dec jo loopne cmpsb mov add push inc outsl xchg jle inc jg popf jecxz mov mov cmpl imull adc shrb adc loopne jg and cmp testl cld inc xor dec ja int3 icebp rcrb jg fcompl pop mov dec sbb mov scas cmovb out test add cmp rolb test cmp jg sub mov andb and sarl and xchg mov loope dec push inc stos int call mov jo ds repz jg lods fisttpll jg push xor test fnstcw mov js into das aam test mov outsl in mov cmpsb (bad) jno jb and pop pop aam arpl lcall inc daa adc jg inc in lret stos aas adc dec insb inc sar xchg push imul je sbb sbb pop cmp mov sti roll mov movsb adc jg push inc insb clc inc or mov daa rclb or xchg hlt jg (bad) xor leave sub xor inc mov fimul and jb dec push mov std xor lock xchg jg aaa in aas aam jg sbb jp push jg ljmp rcr addr16 jae mulb test out jo hlt outsl mov jg sbb sbb aas out fsubrs (bad) into idivb dec or in mov mov in or cmpsl test test es pop bound sub push jg cmp dec ret or dec scas jbe arpl push repz or les lods mov sbb movlps js pop popf jg mov mov cli das jne sub imulb dec cltd dec stc rorb jg push inc aam mov pop rcrl inc cmpsb lods pop xchg jg gs adc mov das pop rorb push xchg inc test push fcmove int test add cmp ja das lds (bad) std jb jbe scas addr16 popf lock sarl mov enter jg les pop jg push xor cmp jno pusha jl push (bad) mov push sbb es sub xchg sub icebp pop pushf sbb fcoml add iret into pop jne cmpl xor mov fcomip cmovp notl and fdivrp jno loopne xchg out imul jbe jg fsubs adc push pop or jg lds xlat flds jg pop (bad) and mov xchg mov es mov std and lock jg inc fsub cld adc movsl xor inc add in fildl jecxz lock fwait inc hlt jae (bad) out loopne pop rol add iret addr16 xor inc pop bound ss or push into jecxz insb jg pop inc mov idiv jmp sub jg je mov sbb push stos test jg jbe adc inc repz loope inc rorb jg std fsin aas mov into jg inc or sbb movsl fistpll nop xor mov push xor jg,pt push mov adc aas daa sahf dec or mov sub iret std sub jg xchg (bad) arpl adc pop jg jns lea repz or pop scas xor mov jg xchg jb mov pop xor mov add add sbb lret sub pop sbb inc dec sbb daa lea inc jg sbb jecxz jns repz sub inc iret rcl pop dec ja mov pop into cmp cmp xor stos jg jo pusha popf sbb stc je push push flds mov push xlat adc imul dec jg bound pop adc inc (bad) mull cmpb gs ja je test jg cwtl sbb loop jne jg shr push arpl cmpl sbb push shlb xor inc dec adc adc cmpsb movsbl mov shrb leave pop test inc (bad) inc paddsb mov mov repnz xor insb jno (bad) add inc (bad) cli (bad) aam pushf cmp jl addr16 jg outsb imul cmp stos ret test inc mov mov divl lods push stos xchg inc repnz aam roll nop xor xchg xchg dec jae or push and fcompl cli sub aam push out adc test aas rclb mov sub call cmp jg cmpsb jl daa enter sbb push mov lret lahf jg fisubrl jg (bad) xor decb enter arpl hlt mov icebp jg pop or lods (bad) mov jg lcall movb pushf or enter dec xchg dec sub sbb push jg xchg xor rorb push sbb movsl ret gs rolb addr16 in mov cmp jg out jecxz mov fnstsw jg iret and lret outsl mov push stc outsb scas sbb dec pop insl pop out ljmp mov and outsb mov mov (bad) (bad) xor pop xlat dec ret sbb or (bad) dec xor jg xor cmp stos jg sbb out dec (bad) sub sbb pop pop test in repnz and loop imul push sbbl stos test test cs jg cmp popa (bad) dec push js (bad) cli in mov test push push push pop sub mov adc pop xor inc (bad) cmp pop adc mov fidivr inc xchg jg out dec xchg xor sbb sub insb pop iret jg inc cmp mov sbbl jg cmp out mov lock test xchg sbb sbb aas fsubs fs jp jg xor mov (bad) xchg add jge inc xchg mov iret enter sub push je and sub jl adc aam insl nop cmp jno les mov mov psllq pop jbe jbe or jecxz test mov jg push out push jg xchg aaa inc mov imul in outsl jb mov int3 inc ret cmc nop mov sub dec enter jg (bad) inc jno rcll (bad) lea adc ror and inc sub add jg scas loope cmpl jg mov test mov out push (bad) mov inc lret (bad) das and imul sub in push outsl fildl dec int sbb mulb jg test sahf pop mov push (bad) jg push jp dec leave ds (bad) jne push adc mov xor scas lods mov ret jae jg lock jns xchg mov fmuls xchg (bad) jg mov sbb add aam pop ror push add test imul fdivrs mov jecxz stos les sarb adc push lret scas mov lcall jg cmp and jg xchg cmp mov jl pusha jg xchg repz push outsl hlt cmpl rcrl sahf inc pop xor cwtl insb cmp jae inc jg ljmp push pop jae adc lods mov pop xor push add rcrw cmpsl test dec inc mov jg call cmc jg dec (bad) test scas (bad) mov cmp pop repnz ds mov jg xor das jge cmp jg movsl xlat mov and jg cmp addr16 lds xchg addl and test cmc adc ret pop jg dec mov xor inc jg jae scas ljmp add fs jg mov hlt pop pop fwait (bad) popa sti mov dec or outsl sti es xor pusha cmp mov mov add xor dec outsl push fs dec mov cmp mov jg sarb jbe les scas ss ljmp push inc dec mov call and rcrb and ret shrl jg push jle in int jg push mov aaa xorl (bad) sbb cmp adc mov shrb cwtl pop shr js push mov sub in jne cmc mov pop scas js in push and xchg add add ja inc or sub rorb or push ja movsb cld cli popf aas xor test test push scas fsub and push pop sahf jbe (bad) pop sbb in call (bad) bound (bad) pop sarl inc cmp and push fs ds scas pop out cmp sbb pop jg pop adc out je jle repz jg lret aam ret xchg pop push jg icebp push mov add mov lods scas adc jg (bad) int xchg pop out aas mov sahf leave push pop rorl mov js pop mov xor lea repz and fbstp nop pop stos mov cmp mov jg add xchg inc std sti mov aas mov push inc pop aas adc jne scas xchg mov gs add mov mov and jg xchg pop ficompl add xchg arpl dec (bad) add out shrb jb repz jno (bad) incb push push mov jg lock xchg nop cltd add aas inc cmc push dec or mov jge or rcr inc pop cmpsb aad jg push (bad) lret daa sub jg jl into or nop lock fdivr pop mov sarb cltd xchg dec pop cmpsb push jg mov (bad) out test sar cmc jg ds test mov inc imul mov bound ljmp add jae xorb ja cmp test mov jae jg ret adc sbb xor or push mov dec jb and jnp (bad) je sti xchg cmp lret in or sub js rorl shll sub lcall inc mov xchg (bad) xor cltd decb les (bad) pop pop sub jg in pop pop repz inc sti and out inc es data16 dec xor arpl adc pop inc in push xchg jl push bnd sti inc pop jnp mov ds mov dec adc imul lcall mov loop cli xor ljmp test into pop pop lea in or mov xor js jo jnp jmp jb cmp dec icebp leave jg movsb inc inc sbb pop and lahf (bad) jae push inc xchg pop mov sti out ret (bad) jg lret pop scas je mov dec push push pop inc jbe xor xor mov sti bnd mov or jg inc push (bad) xor cmpl mov pop in fadds dec xchg addl imul inc inc jg pop xor push je sub mov pop cmpb jg out rcrl or sub mov cld jg mov outsb jg,pt ret add cmpsb dec inc mov sbb xchg aam outsb inc pop imul cmp out mov mov push icebp (bad) call mov adc insb and outsl or test xor adc jl (bad) push lahf das aas shrl mov mov jg orb iret pop jl xor lcall mov xchg dec sbb lock loop xchg jg adc and lahf pop loopne aas ror cmp fdivrs xor jg in pop lock out dec jg dec test xchg sti cs jb es pop rclb xchg in mov dec mov int3 fucom mov or test mov or jne (bad) and mov data16 test clc sub cmpsl mov sbb mov add jg cmp pop fsubs inc sti xchg sbb andl adc addl sbb jg test push xor testl loope fidivrl and dec pop (bad) mov gs mov push pop aas adc decl jo jnp mov sarl sar fs imul and or pop adc aas jg push xchg stos js or scas pop or outsb sbb por jg and loope mov jnp xchg popa dec fdivl sub push jg inc inc sbb push jg nop and dec pop sub mov clc ljmp ret inc sbb std jnp ds jg nop inc cmp sbb loopne sbbl dec lea mov outsb test stc pop jno fidivl jg je shrb fdivs dec ds (bad) sti sbb dec pop out and push jg (bad) jne adc sbb xchg fimull pop push pop test cwtl or mov mov (bad) into add lock jg jbe xchg jg je mov xchg push pusha mov jmp pushf jg xchg jge adc jg out mov jp inc or fs cmpsl mov sbb add jg outsb arpl aas cmpsb repz xchg and fcompl jl mov push jg loope cmpsl pop cld pushf in imul cmpsb jg fistp cmp (bad) (bad) cld pop movsl hlt mov pop and jnp insl aas jo cmp xor and and sub addr16 sbb jg rolb mov xor jg je adc mov (bad) xor jne mov in and xor jg sub fdiv jg jge iret sbb mov sub sahf js dec jg and in mov ljmp bound jg sub mov pusha call aas jg inc insl pop mov pushf out inc (bad) and int3 not sbb pop mov stos inc jmp jnp enter pop add (bad) cmp fcompl cs pop mov jg icebp call lret sub (bad) jg mov mov adc add inc leave jg daa or mov push inc outsl mov inc push in (bad) push sbb sbb aas add mov jns cltd jae enter das stc (bad) adc in inc and loop adc pop jg push dec inc xchg jmp daa pop ret insl (bad) mov jg fnstcw add jl push jge dec pop push add jg inc sahf mov mulb and lods pop adc cmpsb aas sub adc adc sbb pushf add sarb sbb push push popf mov dec ja mov mov ja aaa and (bad) pop mov (bad) sbb (bad) cmp dec imul call sbb ljmp andl cli daa mov mov add or mov rcrl jg stos jle iret jg and pop dec and jg mov rcrb inc jne pop or in jg sbbb add sbb add mov and dec and popf jbe aaa sbb add mov fwait jb jg adc xchg cmp pop dec es mov iret jp (bad) pop adc jg sbb push jg inc cs imulb pop into jno mov adc movsb pop push dec stc push mov and xor jg test mov or cmp cmp cld mov imul xor jmp jg mov cwtl sarb jecxz aas sbb add and pop jg cmp and pop test cmpsl out in mov xor (bad) lret fidivrl mov lcall lret sbb jp mov repnz jg pushf push inc add jecxz enter scas jmp push jg dec mov jg cmp pop adc (bad) sub pop fisttp (bad) in mov or les mov cltd jg inc mov push jg dec repnz lds sbb (bad) jmp mov ja push jg pusha daa lods rcrl es iret hlt mov sbb arpl dec add mov jg mov pop mov sarl push push xchg out shlb xor jns out rolb jg sub cmp stos push aas sbb sarl push outsl cmp test jg cli mov int pop mov add cmpsb outsl xchg cmpsl lods pushf shrl inc and pop dec xchg loop loope repnz pop push mov aas sbb cli insb decb add daa enter popf jg movsl inc jno jp or or xor cld jb aas mov lret (bad) lock rolb jg adc sti ss repz imul mov pushf lret fidivl out pop xor ret (bad) jl or std ret idivb sub (bad) mov (bad) sbb gs dec push pop or mov jl jle push jno mov outsl dec push fcomps lahf inc mov sub outsb movsb aam pop daa xchg inc sti cmp (bad) lock sbb jae aas rolb addr16 (bad) jg in gs insl or jg mov jno xchg sbb ss mov (bad) mov popa (bad) sbb loopne push call imul int3 mov mov cltd out mov sbb hlt sbb ret mov sub icebp mov sub decl aad mov pop pushf cmp popa sahf jg xchg sub scas xor xor or pop jae cli icebp jg ret fildll repz jg,pn mov xchg jg add call ret addr16 dec in jmp lods mov cmp and mov ret mov jg mov cmp dec lret jnp xchg adc mov cmc rorl and in cld idivb (bad) fiaddl jo xchg mov aaa out jmp lock add pushl mov dec or mov stc xor xchg neg mov dec scas ficompl cli mov sbb pop sub (bad) lea xchg hlt (bad) popa cmp call inc cmp mov mov ficoml push std jg inc xchg roll out cmp add xor adc jg dec ja (bad) (bad) jg stos xchg jne mov sbb (bad) xor jg sbb adc xchg sub inc mov jg int out aas pushf test repnz mov sbb xor adc jg into inc lret jns jo jg push mov rolb push sub and jg sub (bad) pop paddsb inc sub (bad) jg mov or out mov (bad) push icebp add dec sbb xchg mov add inc jge scas jg pop pop (bad) test dec jae sbb lcall scas xor sti rorl mov sbb sahf dec push dec mov insl inc out cld push cmp arpl jnp sti cmp jg lret sub idivl daa in popa sbb jp jnp inc dec xchg mov adc out mul mov pop addr16 data16 arpl mov sbb inc rcl or mov les insl jl out lock in cmp dec adcl inc jg rorl jae mov inc or cmp pop out and push adc mov jecxz or sarl dec sti inc fwait loope jg mov test jo cwtl jns xchg and xor shll jg jae jbe insl (bad) sub push scas cmovge inc xor (bad) inc sbb aam stos cmp scas xchg nop adc lock cmpsl jg jle add lock shrb cmp pop jo (bad) lret mov ss inc out push cmp xchg int jg jae ror addr16 jg ficomp cwtl inc sbb mov and cmp ret jg jmp sub jg rcrl ljmp in lods jns sbb stos out jg cli mov popf out pop sbb jbe ds mov pop stos and xor pop push jb (bad) jns mov jg or enter mov xor sbb lods jg push insl push (bad) add ret (bad) (bad) jb and xor les push pop adc sbb jg jo cmp jg mov daa sbb jg sti out jmp rcll (bad) push and push dec ficompl adc inc lret jg cmc or repnz mov mov pop jge mov fnstcw add sub test dec and jg or testl js int3 dec int mov xor dec mov popa mov test xchg mov rcrl adc adc mov arpl lahf outsl or and lea dec pop xor mov jg pop fcoml inc inc montmul cmpsb ret cmp stos jge or sbb add mov int3 (bad) push jbe scas push dec mov lret call jle idiv cmp jae mov test std jg sub daa push (bad) fdivl aam jge imul cmp mov sbb inc (bad) xor testl push jg push inc repnz sbb inc loop and faddl jmp pop jg or (bad) mov dec dec lods insl addr16 cmp jg sub addr16 jp mov cli iret repz jns cmp fwait mov dec cs adc aas xor jl dec pop std jg mov fmul jae mov leave dec xor je jg push xchg and inc orb (bad) jae push sub inc mov cmpl out and jg adc xor inc fdivrs push xchg dec jb cltd shrb cmp jno push bound repz shrl aas pop arpl adc sbb xor sub pop sub into jg adc mov aas pop mov xchg dec mov aaa jae and xchg outsb mov dec cmpsl xlat movsb jg es mov mov leave outsl adc cmpl xchg das mov jg mov repz mov mov lahf sarl imul pop jo mov pop outsl jns jne jg dec cmp je and popf mov outsl addr16 add aas nop pop in in or cs lock inc jo bound roll mov or ljmp jo es and testb adc pop cmp jnp imul gs mov mov popf sbb xlat popf data16 jg xor (bad) loop test (bad) sti jp push push stc cmp mov mov jle mov in mov push jb and cmp push xor jg cmp pop nop add jg dec jae xor vpcmpeqb fstps imul mov cmp shr sbb test push inc or cmc jno sarb daa movb dec test push out pop adc nop idivb fadds pop lret sub int3 ret push je add ss add push jo jg out nop mov aaa lds xor cmp dec mov dec jmp or xchg dec mov aas xor xchg or ja inc jg sti pop adc jl aas jg imul sub xchg jmp loopne lahf add sub pop mov ror mov in (bad) std jg inc cmp loop dec jg outsb stc inc imul inc clc mov fstpt (bad) xor push std xor jg subb sub xchg fwait bound jg rcrl dec and jg test push push cmp loope dec bound xchg dec std scas jg sub xor mov sub push dec mov push mov jae cmp sbb lock xor subb imul imul (bad) push repz xchg xor mov jg nop push add outsb xorl push lea aas inc pop inc outsb aam cltd dec or xchg adc jmp cmp sbb neg int3 stos jg pop xor mov out push ret (bad) jg or xchg jg pusha push int3 pushf push push jg pop out enter jg xor xor data16 jg bound sub sub add and fwait sub cld cwtl lea pop (bad) jbe mov mov mov icebp mov xchg ss loop mov jg lock sar jmp lret pushf daa dec int3 push add jae sub cwtl jg adc pop xchg add jg jne mov cmp stos jg xor sub sub and ljmp lcall push dec jg call jg ss xor aas (bad) outsl sub pop (bad) popa inc mov jp ja fdivp add jg outsl aam loopne cs sti lahf push xor pop dec fistpl (bad) jg movl jg das out lods daa in nop jg cmp pop jmp mov mov stc outsb sbb hlt mov xor scas jg or cld cmp mov lret shrl (bad) das jns push scas jg inc loop ficompl or and xchg cmp gs inc imul mov into mov push scas mov sub mov jg lea repnz pop (bad) xchg pop push sbb mov scas xlat mov mov test data16 jecxz clc cli scas aad jg iret push call and aas call or xchg jg insl insb aas dec inc pop jne and jns pop cmpsb rep jg and sti icebp jg ret aad jmp jb fnsave push sub mov mov icebp insb cmp ss bound outsb lcall lea mov pop call jg mov mov xor xchg pop pop adc jg or sbb xlat or enter aas clc inc mov mov insb das and loopnew push lds dec jmp jg inc pushf xchg sub addr16 movsl jg adc mov nop inc fdivrs inc in fs sarb dec push (bad) int3 pop jo mov add jg dec negl or bts mov add stc adc imul jg popf or add jg scas sub aas jnp xlat std data16 mov notl (bad) mov ss sub rcl mov jne sbb stc stos jmp fidivr dec sarl rcll pop jg inc es adc pop rcll push or sbb fstps mov jno mov jg xor js cs sub into int3 mov xor stos sahf push add call (bad) mov sti or out lock loop dec mov fldt adc xor pop pop jg adc fcomps jcxz insb (bad) outsl sub sbb cmp jg in or test xchg mov pop test pop outsl sub cs insl or and into scas popa cmp aaa (bad) pop cmp lcall sub sbb js cmpb add mov xchg jg xchg js adc andl ds std gs inc sbb lret jle xchg xor jno mov addl inc mov fldenv ficoml mov pop arpl pop jnp xchg jg inc cmp incl out aam add and mov pop imul daa dec jnp jbe (bad) aas int enter cld add loop sti add cmc lret stc push jle push jnp inc dec ret and repz adc into aam scas jo push mov (bad) adc cmp outsl xchg fs mov sub clc ret xchg out roll fildl ja and in loopne out into jg addr16 push jg iret pop popa push push (bad) aad out pop jge cmp dec data16 cmp aas dec inc push js dec mov jg mov adc jg or aad sub xchg push adc push mov fiaddl nop mov and iret or loope out enter lock test std lret ja aad sub sub in addr16 jg and aam jg test and jecxz or stos dec pop dec mov iret jae fsts fidivr add push xchg xor push jg mov mov jg mov xchg popa fstpl push fcomps push fisttpl test int out (bad) jg movsl inc jbe fnsave jle sti notb and pusha pop fcompl sti pop jae inc mov cmp push mov inc sbb jns stc and jg fcomi scas fisttp mov fcmovbe inc jb xor fsubl outsl jg xchg ret and add aaa aam fldcw sarl call repz fbstp arpl (bad) sbb inc int and mov in rolb jnp test aas jae pop mov mov popf and xchg mov inc dec adc arpl call cmpl pop fildll in mov inc cmc stos pop mov out dec (bad) jb xor ficoml inc outsl jl pop cmp loopne cmc mov or inc sbb sbb sbb es pop pop or jns jbe sbb cmp ret daa aad cmp push mov xor lret jg ror fsubs push push cmpsl out mov cmpsb jg mov dec arpl sbb (bad) mov jg push stc xchg xchg dec out jg and scas out or pop mov leave jl fstps sub lret xor mov sbb outsl test jg neg loopne ds aas dec pop mov ja in or or gs cltd fldt push mov mov and dec imul add or xor jg adc outsl mov mov loop ret scas mov add jg (bad) mov inc jne sub xor push xor repz xor adc xchg or movl jg outsb stos loopne jno stos jg idivl fs lea mov nop jg and jnp movsb push mov dec cli fsts sbb jg repnz inc andl jg adc notl mov jg leave fucomi es loopne (bad) and (bad) ja jecxz fidivr pop aaa fsts inc popa inc push push and jg into movsb int iret int3 mov inc shll insb push jg stos add jg gs sbbb push jo jmp sbb fnstenv daa (bad) dec aam jg push cli cmp mov (bad) out (bad) pop outsl jg arpl cmp insl fstpt ja in aas and sbbb push mov (bad) jo xor inc (bad) jg dec repz popl iret bound lahf jg and ljmp xor out dec data16 mov rorl mov mov mov jl inc cmp push das add add lea push jg imul mov in cmpsl gs or sti cmp dec cwtl scas pop repz outsl jle mov mov sub mov lret inc mov popf incl adc into aas ficoml mov xor add imul inc pusha pop sub fstl xor ja sbb sbb mov jecxz movsb je jge jg pushl jno jns jg ljmp jg pop cmp add stc xchg daa sahf inc jl inc add (bad) stc cmp jg xlat in mov cld jnp into ja add sti fisttpl push dec ret xor mov int mov (bad) jg inc les stos adc hlt aas das xor lods fnstenv ss dec push mov lds cmpsb je jg insb mov movsl lods cwtl inc inc jg pop notb cmp outsl aas jmp ret xor mov xchg xorb jg (bad) mov inc push sbb mov xor inc jg mov gs jg fistl mov inc addr16 out xchg push iret daa jle stos cmp (bad) hlt xchg leave arpl jg pop scas scas and mov aad jl mov inc fistpll pop out jg jae int pop and outsb mov (bad) mov pushf jno push push daa xchg nop imul aas lahf fidiv int stos inc and jg js add mov test in arpl mov add push lock jg aad pop xchg cmp jg jge ljmp mov pop sbb jg js xlat popf daa ljmp mov sub xchg jne xchg sti mov push cld push inc pop aas inc push test movsb or jae xchg xchg lahf pop push mov cmp sub mov jg adc xor xor jae into mov xchg popa cld add and or push push add in mov ret dec movsl in imul shll add adc arpl push cmp repz inc xor mov sub dec sbb dec jo scas in xlat aad and xor (bad) lods jg in mov sti loope popa iret inc idiv fs outsl repz jg lods je pop add insl insl push mov mov test mov dec push jg js push and jns arpl and js or sbb rcl iret jg push call or sti or push mov dec xchg xchg leave jle add adcl mov add xchg aas nop pop call movsb inc cmc (bad) jg pop push xor jae movq nop add mov xlat jg jno,pt test loopne jg push fist clc sbb punpckhwd lods jg inc (bad) mov lret inc ds daa hlt pusha outsl test jg (bad) clc ror dec adc cmpsb mov ja fstps ljmp pop vandnps adc dec mov jg mov jb jg or xor pop push inc fstpt jge outsb dec push je dec mov jg push pop js (bad) lcall (bad) push pop dec enter and ja incb xchg outsl dec int3 bnd lock mov inc cmc testb aaa in push jge mov insl repz bound imul inc push ljmp add test test push sbb jg or fist (bad) jmp jb subl cmp data16 ret (bad) jg gs fimull jecxz dec (bad) mov insl icebp mov mov jbe add sub or mov pop lcall or out xchg xchg dec ds lret mov xor pushf push test add cmp push mov aaa push rcr jg cmpsb push sub ljmp ja dec scas gs jl xchg push adc add (bad) jg mov cmpsb mov cmc mov dec repz sarb jg stc loope xchg enter popf xor test fdivr jle inc mov bound mov xchg (bad) std mov loopne stos fnstcw or aaa add pop mov mov jg sbb or cmp add andl jg je test push les loopne mov repz dec sub (bad) adc add fisttp jno sub cmpsb repnz add xchg add mov pop or xchg xor add in pop repz mov or push leave jb add jg rolb popa add or pop gs push iret cmp mov or jg mov ds (bad) std loop cmc pop fdivr mov jmp adc pop sarb sub inc lock xchg pushf js lds outsb jo aam fcoms iret cmp insl loopne sub std addr16 adc mov bound fmull int jg,pt jb or std lds xor hlt cmp scas mov pop pop xchg pop push lds xor adc jp cmp outsl insb jno hlt ret fs inc inc adc loop sub lcall jg jle movsl mov cmp jg cwtl cli test cmp int jle xchg cmp xor cmc jg mul xchg add cmp popa fidivrl mov aam jecxz jg mov jb stos jo into and push aad cltd sar clc mov stos pop (bad) fadds les orl aad ficoml leave jg cs jg icebp push inc std adc push jg xchg jns ja and lahf xor jp nop jbe jg sbb adc out pop jg les pop test andb xor outsl mov aas ficompl or out mov cwtl add sti scas jno div sarb jl jp or pop jmp xor pop cmp or dec mov in pop pop mov fwait pop inc jo jg sbb lret enter jno mov sti dec mov enter roll mov add xchg cmp aas lcall dec jnp jg sahf inc xor insl xchg lock popf dec sbb ret daa jg jne movsl imul jmp push sbb cli xchg mov jge add jg fistpl jnp xchg out fs dec jb pop jg iret das pop clc mov inc jo push sar cmp jg es and jg sbb test bound cli mov fld cltd jg jo mulb dec fisub mov popf test xor into ja push pop adc add jge jmp push sub mov aas mov dec xor and clc add frndint in jo outsb pop pop and cltd fsubrl je or xor inc jg and (bad) mov lds jg dec xor mov mov jg inc loopne lea in adc xor xchg mov mov arpl xchg sbb xor mov sbb inc repz jg scas loopne out jns fidivr sbb in inc imul stos xchg pop divl cmc jg jne ljmp cmp (bad) lahf jg insb (bad) lret mov push ret mov lock rol inc fs push es pop ficompl sbb rclb jg dec pop push test xchg fbstp add imul and addr16 mov cmp mov jnp rcll jg inc pop and adc (bad) jg adc inc jg ficomp xlat jg xchg aad adc inc jg hlt cmp xchg rcrb (bad) dec sub and bound rcrl cmpsl loopne (bad) cmp push cmc test and stos (bad) jno movsb pop aas mov stos fs cmp insl mov mov outsl dec je mov jg popa pop pushf mov dec les and pop jg aad sub cmp jae add inc xor dec xchg mov jmp aad mov clc jg cmpsl cmpsb adc mov jne enter jg xlat leave cmpsb sti pop mov jg fdivrs jmp ret xlat (bad) out cwtl stc mov inc jg dec dec dec in ret je mov nop pop cmp cmp sub mov lods and (bad) pop push adc sarb dec pop dec mov dec js enter inc mov iret (bad) jl pop lods mov mov push jg lret rorb movsl nop pop insb imul stos jb std mov cmp decl lock gs xchg mov jns stos xchg push idiv jne jg xor bnd mov inc ret xchg jg aad clc adcl or fistpll inc jns scas sbb rcll mov in hlt jg xchg sbb sub insb outsl jg mov push fidivrl cwtl sub cmp stos mov ljmp lea pushf test mov jg pop das sbb rcrl cltd imul sub jb pop (bad) xor sbb xchg ds jg pcmpgtw dec addr16 and dec hlt xor imul sbb subl repz outsl lret test jg dec mov cli sbb insb jg push mov inc adcb or icebp cmp popa xchg cwtl pop jg hlt mov imul outsb add inc clc scas (bad) mulb ss pop xor mov les lcall lock and add jmp movb incb loopne stc cltd sub ja (bad) bound dec add push fistpll lods jg push sub mov pop inc jmp push scas inc sarb sbb cmp hlt push jnp mov sbb mov jno xor dec mov mov movd pop adc lcall push xchg aas imul dec insl add fnop push mov insb add jg mov leave jg sahf call inc jg add push mov aas out (bad) jg sub ljmp addr16 adc jg inc cli pushf cmp lret xor jg mov in out aas xchg push xchg icebp adc cmc (bad) xchg mov dec jg jb enter and (bad) adc sub or mov mov mov cmc pop and add popf jg mov pop (bad) in xchg jg out js idivb ss out mov lods inc add vpaddd push outsl sbb das subb in and pop out adc xchg or xchg outsb imul cmc jg xchg movsb orb jg push sbb jae inc mov cmpsb pop loope jne inc jns jg lock pop and (bad) jmp fwait aas outsl and dec repz adc cltd mov fprem1 pop adc jo aaa or add jg es inc mov cld aas push inc cmp sbb (bad) call sbb jg icebp in add (bad) mov adc inc add sub shrl sub lret iret sub inc jg inc mov xor mov mov rcrb cmp dec pusha dec xlat aas pushf mov jle jno jg dec pop popl cmc xchg in push or jg mov call jg and sti fisttpll insl lret inc or inc cmp mov daa inc push push sbb (bad) or bnd fisttpl mov jno adc mov jae cmp xchg pop in cmc xchg es jle jmp (bad) aam sub jg jne xchg xchg pop stos jmp fadds arpl mov out push insl insb jno icebp add jmp arpl jns and pop sbb mov jg mov push popa aas fidivr or comiss and std insl sub mov mov addr16 mov mov out (bad) push mov lcall jg bound scas push cwtl les dec loop jge dec xor adc lcall fwait xorb pop xchg jg dec xorl sbb jg push lock mov lea testl jg jno pusha ret lcall aas inc fidivrl int jp pop push sbb lds lret or repz jno jnp adc lds pop and std mov rcpps les cmp cltd outsl sahf add jg ficoml mov aas hlt outsb add (bad) fstpt xchg fcmovu jg cmp lret push xor gs jg inc cmpsl sub jg rcll popf bswap in mov in mov inc jecxz mov fnstsw jmp jg insb leave ret adc sbb jg inc xlat mov add inc cli scas or shrb mov push scas dec cmp stos mov dec out aam jg sbb xchg push ret jne dec jl out or jg jns loop sbb inc xor mov cmp fisttpl test pop sub jg sbb (bad) push xchg mov inc shrl dec icebp jecxz jg ret push (bad) in iret sti out sub and mov cmpsl xchg jg scas or xor movsl popa jg shlb mov (bad) jg gs adc jns mov fadd add ss and inc ja out xor repz bound negl das xchg arpl aas nop jo xchg (bad) clc jno xor add mov enter aam jg add pushf mov mov dec movsl out jg lahf imul call push pop mov mov jg cmp loope jg pop dec push mov sahf inc sti and icebp push pop inc loopne out add pop stos movsl mov dec stc outsb psubsb (bad) negl jg cltd lcallw inc lret pop fs loope pop (bad) repz sahf mov stos in stc sub mov (bad) xor jg pop inc pop and cmp into xor lret mov push dec data16 pop jg and ret xchg mov dec (bad) adc sbb jg loopne imul cmpb ja je mov inc jp jnp insl sbb mov mov or (bad) xor xor daa lea xlat ret dec and xor lret lahf fisub lcall inc aas jg inc push mov lea loop sub int movsb leave (bad) test icebp xor mov enter pop xchg cli (bad) cmpsl lods xchg adc cmp (bad) push das lea (bad) pop push jge aam mov jmp sar mov add repz arpl inc mov imul imul xchg mov aam pop loopne jg mov lret out repnz adc icebp inc clc sub movsb dec xchg mov mov pop lahf aam pop sarl data16 sbb add aam dec addr16 xchg sbb (bad) mov inc inc and mov mov jg push push pop pushf fwait (bad) int3 jg fstl outsb mov push (bad) popa cli mov sub pop add adc mov inc lret jg dec or das (bad) pop in jg ret add sub mov xchg mov xchg xor push mov outsb sub insl push jae jnp add pop adc (bad) loop jg sub xor fwait cmp xchg adc loopne push mov lcall sti pop lock pop xor arpl gs repz mov mov push push aad aas dec pop int mov xor sti add jg cmp fs aas or inc fsubs adcl je jge inc ss sub sbb cmp cmc pop xlat movsl pop xchg divl fdivr (bad) rorl sbb push jbe jmp dec dec cmp pushf mov mov adc ja sub dec mov aas dec sbb ds cmpsl mov xor jl jge sub rol loope clc loopne mov mov stc sub bound mov mov lret fadds idiv data16 scas pop and sbb pop mov test ret mov add jg neg scas cmp add inc mov cwtl pop (bad) mov clc test mov arpl inc cmp fcmovne pop loopne xchg or ret (bad) cli cli inc cld jg imul sub bnd hlt fs jne mov fdivl dec pushf lock loop jg iret aad repnz jno pop cs pop pushf lahf add jg movsb xchg fisubrl dec and lahf jnp (bad) jg jae out clc fsubr xchg jg movsl xchg int3 mov test mov inc inc es pusha jg xchg (bad) mov inc lods scas sub push xchg dec push (bad) rolb jg in push sub mov push jge (bad) aas sbb xchg inc div add pushf mov (bad) dec std jns scas jg or mov fdivl jg fiaddl (bad) cmp xor jo out pop jne cmp pop out and mov in mov ja je jmp jg outsl aad or push cmp dec jg gs js lock or jne pop lods iret jnp fs cs repnz cmp in pop dec adc add jg mov cmp jg sbb mov jg imul mov push mov je fstpt jmp jbe out jecxz pop bound or xchg sbb xchg in jp lret insb mov aam outsl push into push in inc push sti addr16 mov call cs push scas pop sbb jg mov sahf push sti notl ja ja mov add loope cmp flds jg cmpsl ss (bad) pop or lahf jg pop push pusha cld mov icebp jp pop arpl mov mov jg pop sbb bound fs jg pop out mov push jmp mov inc fist mov jp push jne sub xchg push popf dec sarl rorl pop (bad) inc add xchg fs and dec xor fmul jg add add mov pop sub mov ficoml add or mov adc pop mov lahf mov dec imul divl xchg out pop sub loopne jg icebp or sbb pop jg aad sahf jnp push inc (bad) cld cmp xor mov cmpsl repz outsl pop xchg repnz mov xor jbe xchg call sbb dec ret xchg sub pusha pop dec mov inc insb jg jns push pop or jg stc mov shll sub sbb push fcmovnb aaa addr16 data16 addb mov popf jg fcmovnu xor icebp cmc (bad) std pop and dec push sti jg xlat sub adc lds or icebp leave stc xor mov mov xor sbb push xchg pop jg adc sbb repnz inc adcl jg lahf jp scas out add inc jg pusha loope jo lret jg jb (bad) icebp fsubrs les mov dec int3 mov and (bad) push flds rclb or shrb jg clc pop xchg aam dec cmc mov jp lret or dec xchg int xor inc mov jge sub mov jg xchg sbb mov sarl sti sbb cmp push xchg add loop sbb pop or lds dec jg loope inc lock sbb or or sti aam shll fs dec cmp xlat pop sbb ja xchg pop jg enter mov fdivrl cmc dec mov dec or cmpl sahf jmp mov mov pop jecxz dec mov jg pushf inc int3 (bad) push (bad) fdivr clc mov mov sahf or pop adc inc sbb negl in jg movsl pop mov pop (bad) push mov or sbb inc les pop mov push dec push sti mov les std mov pop sbb scas and push cmp popf fsts ss sbb push sbb mov ret repz adc inc je lock cmp add ja outsl test jg xchg jg dec out push add cwtl jg aam pop ret jb test gs jg inc std cmp sub inc push ret inc rcll sti negl ds xchg mov out cld pop mov jb popa jnp setae add cmp pushl mov mov push outsl test jg,pn or lea popa and int3 xchg mov mov pushf xlat dec sbb lret mov cli push xchg (bad) jp hlt pop (bad) dec dec xchg inc push and xlat roll (bad) xchg xchg in mov call or in in and or add mov mov (bad) mov jg sbb dec add pop cltd cmc mov cmpsb out xlat push jg loopne fwait in mov (bad) jg (bad) (bad) jp or out and imul push pop mov inc cwtl jg js sbb jg jo fsts mov jmp ss push inc cmp jo jb jl ret sbb add dec mov xor enter imul push movsb jg gs sub jecxz mov hlt add mov add sub imul stos jg sbb and jg (bad) push jo je and jg xchg push outsb add sbbl cmpsb xchg movsl subl adc mov cmp sub inc cld mov jb push fcmove ja jno lock (bad) mov ja and shrl jnp or jg sub pop sub loopne jne push aam mov jle pop sub mov daa aam adc ljmp xchg lods inc outsl adc ret pusha jns mov fcoms xor inc dec jae ljmp xchg mov xchg pop (bad) push jmp jle lret out (bad) mov (bad) les lea loop imul and add dec les inc arpl mov pop mov (bad) stos jno addr16 dec inc (bad) jbe and push jecxz push out dec inc js sbb pop push push dec je push jb bound xchg sbb addr16 mull iret and stos and andl xor fnstenv pop icebp test cmp call mov jmp dec sub out push mov xchg push mov cmp std in sub insl mov popa lock dec jbe cmp (bad) inc xchg push ljmp inc insl cmpsb cmp repz out add jg (bad) xor xor mov cmp out push sub inc mov cs adc xlat cmp mov vmovdqu mov std sbb imul mov push sbb lods cmp pop jae xchg (bad) xor mov jno jg mov mov aas (bad) daa sahf jp test jg js mov std xor mov jp dec cwtl sbb jg aam (bad) push gs jg lods mov or notl cli cs mov jg repnz push or mov jg dec jno shll jns mov pop cs mov push jmp mov jle dec xchg add pop scas data16 inc add dec jmp (bad) jg and stos lret jg dec loope push inc fdivr jg xchg push mov jg push out shrb mov inc imul sti xor mov dec or inc pop sbb jno sub icebp movl xchg dec sarl jnp or les out dec inc movsl setb pop leave inc or push mov std mov dec aas call mov dec adc jg or xlat mov dec jg int3 jmp dec js subb pop cmp add dec test jg xlat sub mov pusha cli dec pop in out jg sbb mov mov data16 leave arpl fdivrl xchg cmp jg ret mov pusha add or testl lock js sub mov pop lds inc ss aaa and adc jg ret pop mov sti xchg stos outsl loopne lret pop jg or push fwait nop test rol scas add inc dec push (bad) cmp (bad) jg xor sbbl (bad) fstps (bad) (bad) sti jg push push pushf mov xor sub (bad) addr16 (bad) (bad) cmc gs adc sbb popa inc or in sub xchg push out (bad) insb jg and mov jg push repnz lret sub push jg mov imul push sarl mov pop push fs add push jg cmpsl inc pop pop xor (bad) jg xchg xchg adc int3 mov dec mov jno xchg cwtl clc outsb xor das dec jecxz dec outsl lods jg iret xchg mov mov cmp in xor sub lea mov outsl pop inc adc inc mov add jg (bad) loope out aas push icebp jg cmpsb add pop aas jge movsl lcall in rcrl arpl std aaa int3 cmc dec repz dec bound jg push inc iret les adc push pop inc cmp jg test inc mov (bad) je aas adc popa dec popf fistpll cmp jmp lcall cmp inc xchg push jg xchg dec imul out jg loope sub xchg dec jg cs je popa push jo cmpsl jg insb call bound mov dec ret (bad) jg jb mov (bad) push push cmc pusha loope loopw xchg sbb je bnd rorb cmp jno mov sbb stc xor jg das mov jbe rcll dec (bad) xor jno sarl mov push mov pop jle test inc jg out pusha fwait aam inc jg (bad) jo lods clc jnp pop sub (bad) jg test push stc ret jg jle enter mov call push jg lea cmp das out rorl ret push iret (bad) (bad) jb (bad) cs popa jg lret mov pop push or jg aam pop mov sub gs imul jl add jp (bad) pop pop fstps pop push dec imul outsb mov arpl add jg stos out test aas add fldt sbb mov dec pop nop js xchg cmpsb cmpsl ja and in pop mov xor rcl jg mov push mov loopne jmp add pop pop adc xchg dec (bad) stc jg and dec leave (bad) loop js aas es aaa jbe,pt jge jg push shr jg dec fwait pop and sub push jg enter xchg add xchg mov jl jmp cmp jg adcb in mov fcomps loopne or jg ljmp inc push cmp stos sti sub adc mov daa xor imul jg repz cli dec xor aas bound pop dec mov out inc fnstcw dec push lods dec popa stos out lea test shrl xchg jp push lcall mull mov dec add push incb mov lds mov mov or (bad) mov mov push or xchg jp add jg int nop in sub mov jbe bound popf js testb rcll sti mov outsb dec rolb repz dec fdivrs inc mov pop fldl jg inc push add pop dec enter out jg adc sahf pop mov mov js fcomi dec sti mov hlt xor sbb or fs or xor sub jg adc mov mov (bad) jg addl jg cmp icebp jbe (bad) movsb jg bound mov out sarl jl jnp or aas push or pop or lods inc scas jbe adc insl mov sbb ret dec jo out jge jg jp les daa loopne jg call push out jg mov loope jg in clc loopne xchg test mov rcll pop jge xchg xor pop pop dec adc fucomp cli mov sbb jg fisttp push jg push xor (bad) sti bound mov push jnp rcll jg jmp mov mov lahf sahf cli jg sub push mov mov stc xlat das jg sbb fwait and adc jg pop lods add adc out lret bound push sarb sub ja sbb (bad) leave xor and inc sbb int shrb loop arpl pop xor aas mov lods scas jge call xor mov push or cmp jl ss jns jnp pusha pop xchg jg xchg cmp add inc push adc jnp xor push cmpsl icebp in in punpckhwd jnp dec (bad) mov dec repz out pop push pop les mov mov outsl mov or pop test mov jg xchg or lock pop out mov lds aad jg jae jge or test repnz sbb fnstenv repz imul in pop adc and mov jl int std inc push sbb jo add fidivr fwait mov xor mov popf pop out idivb ret inc fimull jb dec scas xchg jg adc dec out push repz stos lahf and cmp iret push (bad) jp outsl cmp mov add mov dec leave sub incl pop or or and scas push adc mov mov int3 outsb jg outsl inc jnp lcall popa mov andl cmp and mov mov mov (bad) cli jg cmp jecxz dec jo jg mov shlb outsb outsl jg (bad) mov insl jnp dec mov int3 stos push (bad) movnti aas in mov pop nop jecxz lret cld sub adc xor outsl incb out jno xchg dec mov loop pmaxsw sbb jg fwait cwtl or sub or inc xchg scas lods jns aas arpl cmp dec (bad) fistpll pushf pop push xlat jae jg ds jg mov loopne dec jecxz jg pop int3 jns stos dec pop mov jo jno ja lock pop sarl jg adc sbb jg ret mov mov push mov scas xor sbb (bad) cli mov cmpsl push xchg out lahf cwtl out xor jae xchg in arpl stc push pop imul test xor push push push cmp test mov fdivrl fwait mov or and dec jmp cmp loope js inc inc inc pop (bad) jg push pop push or std cmpsl jg xor pop xor popa mov add xchg jp (bad) xor notb jg (bad) in in add js add cwtl (bad) js push cs int3 lods sti fwait ja push mov lahf sbb ret mov fcompl mov inc jg xor cmc xor fdivrs xchg rcr stos mov fildll loop mov out cld inc cmp add ds gs sub xchg icebp push je push sbb insb jg pop pop cmpsb jg push adc jg arpl cmp push xlat cmp push lcall aas scas cld lret xchg std outsb mov insl fwait dec mov mov pop fsubrs jae fs cmp push mov and jge jg push sbb pop inc in jg cmc xchg add jg mov adc sbb jo sub rcrb inc das test out aas sbb outsl adc push and jg popf inc repnz in jg pop inc sub int3 pop inc jg add rcrl push outsl xor repz (bad) lret and sub sti (bad) sub mov push sub lock sbb jg in dec xor outsb fdivrl jbe negb xchg pop jg out cs dec sbb jg insb mov fdivrs insl fst cmpl add cmpl adc add fisubr add data16 in xchg mov adc xchg inc mov mov or and xor inc lret jnp sub inc pop addl cmp jg movsl sub (bad) dec jb and jg jns jecxz int3 (bad) mov dec adc mov sti cwtl dec pop xchg xor cmp mov mov mov or mov aas mov movsb sub jg hlt mov xor dec inc jg fsts mov fbld outsl cld dec mov arpl dec pop push or jne jg cmp fcoms push popf jg cmc push movd mov inc and jmp xchg or cmc mov jo inc fnop imul int3 or mov into push inc pusha fldl jg out lock int3 xchg jg pop xchg popf push (bad) mov icebp mov mov jg imul jmp mov sub xchg ja jae pop push popa dec out ret test sti into pop cmpsb xchg outsl dec adc jl jne mov mov fsub xchg jg in aas les scas fwait lock or jg into (bad) sti add inc fdivrl sbb jnp pop inc jg,pt sahf mov outsl dec lcall shr out adc lea pop push xor jg (bad) in hlt leave jg inc outsb xor aas into mov test or add loopne cmp xchg roll adc scas pushf aad mov mov cmp dec xchg lret jmp mov mov inc adc push jg xor popa mov inc lcall adc ficomp mov pusha mov jg cld inc inc jmp dec (bad) rorb xor out pop scas sbb in pop lods xor mov lea mov sub lods push fisubrl mov (bad) mov and xchg xor inc call or inc test sar xor repz or mov sub or (bad) jbe es testl push mov loope sti imul test cwtl dec xor adc cmc ret test and sub pop cwtl lahf adc dec (bad) jg mov (bad) lret jnp leave add stos out mov imul push jg and xor jg bound movsl adc test add sub dec popf add mov cwtl push dec ret cld data16 idivb call cmp pop les insb cwtl xchg mov imul daa jo outsl pop and stos xor dec inc or fs inc mov or lock cmp pop es xor jae push (bad) jg dec dec cmpb and (bad) jno das mov pushf test mov xor jg shll test jg xchg add or jg xchg adc fwait jg jb cltd lret loop mov es testl add add push push inc nop loopne sbb sub movsl lods lods mov mov fidivrl mov pop jg mov ss in pop imul scas dec mov in pop xchg andl mov xchg jmp push in flds cmp lret dec xlat cmc mov pop and lcall sub jb dec jg,pt dec dec (bad) adc (bad) sahf push pop jg xor popl cmp fimull mov loop or mov push lahf dec mov in mov dec inc pop inc jg cmpb jnp sarb mov mov xor cltd dec insb sahf ljmp pop int xchg out mov xchg pop adc mov in (bad) das inc imul jg sub mov insl cmp sbb out mov pop mov (bad) pop lea pop xlat lock jg or sbb mov add mov xor sub arpl lea out mov sbb xor je test and jg ret negb push es lcall jg and (bad) mov jg movsb xchg xor add divb jg dec inc jns (bad) nop aas pop dec mov mov stos dec imul mov mov jnp push pusha add xchg (bad) fdivr jmp leave add jne or or ret mov es stc adc shrb pop cwtl test dec clc or fstpl or push jg push mov push fdivs cmp jg inc pop add (bad) lock icebp mov xchg popa fdivrs inc mov pop jg enter test mov mov inc fcompl lock lret or scas xchg out jmp push popa jg dec in push bound xchg inc add xor sarb mov pop jl cmp inc jg test or mov push inc ja cmp jg and sub hlt repnz (bad) out jg xchg in psrld pushf cld pop or xchg cmpb push fstps mov xchg pop imul mov loope jl repnz cmp mov daa pop aaa xor hlt inc outsl aas in push lcall mov js xchg outsl push dec sbb lcall fidivr movsl add sbb jg bound push dec add inc in (bad) sbb pop nop (bad) mulb (bad) (bad) jg mov or jg call (bad) mov xchg or stos jg push jp pop pop jnp push sub rorb inc loope jg sbb mov jg sub or mov dec mov pop and or sub pop sbb dec add lret lds and xlat sbb dec aas test scas cmpsb popf push fsubs imul aad fdivl inc push jg xor cmpsl cmp and adc subl leave (bad) jmp flds dec mov xchg aas les lods jns inc dec (bad) jl sbb pushf pop lds xchg lcall insb adcl cmp les shll in in adc cmpsl pop cmp stc mov xor mov add pop xor cmpsb sbb add push inc pop push mov std repz mov outsb out adc push inc les sub dec lock pop (bad) iret js imulb add jg cld and push mov push aas ret cmp scas mov pushf dec mov mov push sahf mov sbb jns xchg xor pop jg fcmovnbe add loopne test repz jg (bad) jl mov movsl jg test outsb or aad stc sbb pop pop jg std and or cmp sbb in jg movsb inc and push or cmp xlat or push mov jmp sbb push movsl xor mov je ja jns test sbb repz js in inc and popa sub leave jg faddl insb mov jmp inc adc (bad) addr16 test jg sbb bound lahf outsl adc out orb lods mov repnz lds jmp fstpl xchg jne add jg push or icebp inc shrb jg dec pop mov jae xchg enter jg orl bound pusha idiv sub dec sub dec sahf fsubr leave inc das jg fistp lret pop outsb push cmp (bad) push (bad) stos in (bad) push push or fimul jg or out jg data16 aaa and idivl sbb mov sti orl fcmovne addr16 int push mov loop or push cmp mov in sbb jns jbe dec adc jg sahf mov loop ljmp arpl js fidivrl fs sub jle aas jp aas repz inc icebp addl push lds mov aaa dec dec jp and inc cld jg mov push sbb cmpsb add ret push sbb cld sub xchg push jg cmp mov movsb inc movsl pop push aaa jg mov and jns cmp ja insl (bad) cltd jg cmp cmc scas jg dec adc sub jbe mov test (bad) cmp jg mov hlt dec cli dec mov out lret mov jae iret add mov stos pop jg xchg xchg into cmp enter mov cmp mov mov shll enter pushf inc xor jecxz adc nop push les xchg popf (bad) fcoml aam add add (bad) mov test jnp pop jnp subl fwait ds mov mov ret in mov xor movsl jbe jg pop or out mov pop sub adc orl and fistp movsb pop in mov pop mov mov and inc adc cs imul and shl mov mov cmp lds jno rcrb sbb jae (bad) cmpsb jg hlt and pushf push cmpsl sub dec inc jg sbb or sahf jg repz push hlt mov jbe jmp (bad) mov adc cmp fidivrl test push jg (bad) xor xchg cmp or mov jno jg nop stos mov (bad) lea cmp jb and sub jbe or jg inc inc mov bound cmpsb aas aaa (bad) in es dec pop cmp sarb xchg ja mov mov push loop xchg bound mov in inc clc jg jns or jg repz fwait and lea insb cmpsl bnd stos mov test or test (bad) jg xchg outsl int cmp cmp lea sarl push dec and mov pusha mov ljmp mov dec popf jg push sbb test xor cmp jg mov lret fdivrl and dec jle ds decl out xor test jg push stos bndldx ja in out push jg xlat sub sarb out das loop adc jg pop inc test mov aad and sbb sub fisttp es call sub loop cli pop divb pop js sbb pop (bad) rcrl test jp leave lea dec jg inc dec popa dec dec lret push dec jl sbb jp sub out jg test mov or imul insb cld jo into int insl mov movsl nop cmpl (bad) pop xchg pop in lret hlt outsl pushf mov imul and fsubl fistpll daa push ds mov aaa add iret xchg sbb jp push sub addr16 pusha scas mov je insl fidiv ret jg inc mov jge fdivrs in add inc sarl ss roll xchg jg (bad) fxch addr16 mov fnstcw jmp mov add js or lret adc mov inc arpl adc mov inc cs fimul or les inc dec xor xchg shrb add test mov adc hlt stos lock daa pop jg mov (bad) mov push jg xchg mov mov sarb aam push jg movb lcall out test (bad) jae aas nop adc jg int3 push jne cli lods stc jg inc dec add popf outsb push push ficompl pop or xchg cld jl jne fs (bad) cmp push cmpsl in std sub lds pop js (bad) dec jg hlt inc mov and mov (bad) mov mov push adc mov movsb adc dec or (bad) cwtl mov xchg cwtl push jg nop push and mov jae testl xor sbb cmpsb es inc dec test mov cmpsl lea jae sub jle imul dec call push fcoml add sbb roll dec sarb xchg jge testb mov sbb inc xchg jl lock pop push test mov jge mov cwtl pop (bad) mov and loopne and imul mov lds push jg jge repnz mov pop or add fdivp (bad) ret (bad) jg cmp je jb outsb ds sbb cmp add clc push loop jg (bad) std scas xor sbb imul push hlt dec adc jbe sbb mov pop pop fsub or sub dec outsb jg adc lret jae dec test push jg aaa inc inc xchg imul sbb mov aas (bad) xor aam adc pop sahf mov jns les pop mov pop shrl mov in dec cld jg insl mov or inc in pop or and in or daa and mov inc or mov mov ja push lahf js mov pop cli or sbb hlt int pop in cmpsb data16 cmp mov movsl fcoml push loopne scas push pop mov test mov cmp jne loopne lods loope jg xchg adc js mov xlat lahf mov dec push pushf js int3 mov pop repz es int3 out mov scas lock pop fsubs xchg aas mov lahf repnz dec dec test xor xchg jg into cmp xor jg loope cmp or out or stc insl pop std jg pop sub (bad) mov jg pop mov inc mov xor pop fimull pop int jg or loopne insl push cmc jg scas inc mov mov push mov inc out xchg aas stc pop inc jl mov xchg pop inc adc jecxz mov dec jg loop jns sbb enter lret (bad) mov pop dec in jg push ret mov pop pop aas lea scas adc dec inc jg adc pop mov push inc mov lock and and aas mov cltd inc push push mov jg ljmp js fmuls xchg popa jbe ret push fistpl scas push aam pop cmp jg pusha jnp dec fild das stos xchg jge repnz into outsb sub and loop inc inc adc push dec jle dec mov aaa pop inc or iret mov mov add ret aam pop out out jb dec sbb leave xor mov push pop mov push push jmp jg fs inc ret in popa push cmp push cmp jg jge dec adc jg dec sahf xor sub jg push sbb jo mov sbb (bad) divl imulb repz dec mov imull jns femms aam es clc jmp xchg or arpl aaa addr16 xchg jg sbb push jg mov jb jg or les jmp add sarb out dec pop cmpsl stos jg adc inc xchg cmpsb into arpl mov mov push xor jg loopne push outsl nop or mov das xchg sbb cli inc loope,pn push dec pop mov jl or jns test sti scas add pop sbb xor in insl mov lods cwtl jg jno test jecxz jg ja add enter pop jg (bad) mov sbb mov inc sub orb mov mov or cmpsl scas adc jg in sbb sarb xchg jbe lahf in cmpl ret test jg fbstp push fisubrl adc inc jecxz out hlt pop jg or xor and jge add push addr16 add jg cmc mov mov push outsb inc dec mov (bad) push cltd xchg sbb clc (bad) push jg xchg inc aad pop inc lds dec std and cmp cmp mov xchg dec dec cltd imul ss popf sub sar pop pop add fdivrl jg rcrl push int3 jg mov mov xor or sbb jg jne outsl mov or xlat repz cmp push jmp mov jecxz and pop aas (bad) fwait incb xorb mov je jg lea in adc push xchg mov inc jg jne fs adc fnstsw popf sub jmp sbb test xor sahf dec outsl adc push jg scas (bad) test add ret dec pop add or es mov pop imul movsb jg and pop adc inc cmp push aad jg negb dec pusha jbe ret out or adc push insb mov negl leave (bad) outsb jb adc jbe jns mov inc inc pop test (bad) cmc (bad) fisttpll jg std into and inc push cli adc jle loop pop pop cmc jge mov dec xchg insl popa pop add in iret mov jb push mov sub mov aas sbb xlat (bad) out and repz jg mov shrl pusha xor fsubr xor negb and adc fldcw iret jg and (bad) push js adc lret imul (bad) fimul pop jg movsl xor jg dec aad shlb fidivrl test mov data16 fdivl inc jl jg cmp movsl repz loope cmc sub mov pop or inc jg pushf xchg fisttpl xchg aam inc jg adc cli lahf pusha adc xor xor sbb pop jg (bad) jmp dec jg mov xchg cmp cmp mov xlat cmp lret cmp test xor jno out jmp mov jae imul inc mov jg fsubl mov leave loop rol adc jg jmp addl (bad) pop cmp mov subl inc (bad) pop mov jp popa cmp imul push fildl lret aas js xor xor mov (bad) cmpsb rolb ss push mov (bad) jg sbb mov aad mov test cld jnp pxor loopne push pop lret adc fs les sbb adc es lea push sarb add in stc shrb jg in popf cltd inc std jnp jne clc sbb mov and popf jg mov out sar inc sbb das push outsl aam test jg sbb jne in jl mov xor cld sub scas pop jno pop push inc data16 lahf bound dec (bad) cmc jg imul loop jg push jnp jns shl and cmp ja daa dec sbb push cmp nop fldt scas cs hlt dec (bad) xchg jg or call aas mov add scas ret jl sbb cmpsl push ds gs mov and outsl test sbb dec aas fdivl es insb leave dec aas out loopne inc or dec jno lods jg jb,pt pop mov jg rolb lds ror fiaddl mov aas fwait push les lods xchg out mov jg sbb cmp fdivs mov xchg inc aad inc dec jae mov pusha test and xchg add mov adc xchg inc (bad) jg fisubl sub mov rol adc lcall sbb jno and mov pop cwtl (bad) pop push sbb ret rolb out cs add lea push jg nop and and outsb es addr16 add mov insl outsl popa dec jg sub cmpsl mov sbb dec mov bnd jg mov pop jne jg das cli mov inc jo rcl mov xchg sbb mov daa push pop jg dec dec dec sti jecxz inc push inc popf cmp fptan push jg pushf les sbb pop pop adc out push mov repnz and push mov mov aad and push insl pop lods arpl lahf push cmp stos loope and js ljmp xlat dec inc sub (bad) shl popf xchg jo push loop mov movsl pop in (bad) ljmp and mov sub or fwait sbb test int3 jle mov jg data16 jecxz les clc pop pop fistpl fldl gs daa in mov subl (bad) imul ret cs js fs jg jns aam push int jg cmp cmpsl int3 or and or inc arpl mov aam and imul pop mov pop cmp xchg cmpsb fistpll icebp xor xor aas es mov xorl inc jbe mov sub jns cwtl jno pop loop adc xor adc push (bad) mov inc xor loope and es sub jg outsl mov push popa (bad) sarl fistpll lret ja ret fidivrl push add sbbl jo mov sahf jnp popf mov movsb lcall jl inc cs call or adc bound sarb sbb test pop mov sti addr16 cmp fdivrs xchg inc mov jg outsl xor mov jg xchg push shrb pop mov and (bad) push sub push jg pop incl push (bad) je adc out sbb jg mov cmpsl mov scas add and in pop fdivrs out hlt inc je mov push jg lods cmpl jg aaa stos cmp nop js xchg dec jmp daa fxch jbe fwait gs mov cmp xchg (bad) push sbbl imul pop (bad) mull dec int mov rorb mov mov fiaddl xchg out xor push mov pop insb fnstenvs inc sub xor mov leave ljmp push pop adc bound hlt inc xor data16 jne sub push jl (bad) icebp call inc sahf inc xor and stos cltd dec dec shrl insb jg imul js and mov (bad) pop cltd inc cwtl aaa jg xchg adc shrl xchg cmpsb lahf xor shl mov stos ret out jg (bad) fs por mov cmpsb sub pop mov addr16 (bad) jecxz and dec enter loop jg fistl call or gs out fadds dec jbe in inc int3 jg sub pushf (bad) in xchg or jo shrb aam adcl mov insl mov int3 and push jg scas mov add in jmp (bad) stc idivb fldenv out cmp push push enter jne sti dec pop fisttp mov sbb mov popa push loopne mov dec dec cwtl dec sbb cmp js cs aas push sub js inc out pop xor aad mov test lahf mov mov data16 je jbe sub sub and aas xchg mov mov dec out mov lods sti imul xchg pop ret add jg ds insb out cwtl aas inc push inc lds bound popa cmp dec cmp lea dec call sti fnsave les cwtl jg idiv pushf popa sbb (bad) cmp dec out (bad) std es mov adc xor addr16 insb roll out dec jge mov mov or xchg sub inc jg xchg lret out dec ljmp jg cli pop sub dec sub shlb aam pop mov addr16 fisttpll mov jae (bad) cmpl in cmp add push fnstsw jbe xchg sbb scas xchg scas movsb test sbb jnp mov (bad) out add dec cli pusha cmc jg xchg mov inc dec imull jg sub fwait jecxz xchg pop (bad) cmpsl pop movsb jg insb pop xor jmp adcb jg fnstenv push fwait mov shrb inc loopne sbb sbb std xchg pusha inc insl xor or mov and paddusb outsl test sbb in jg or add call (bad) clc test jecxz fisubrl shl or out in testl and ss jge sbb bound outsb inc mov das push stc jg dec mov out mov scas rorb pop mov ja lahf xor (bad) jg dec inc hlt out xor jg fwait xor dec out lret jg pop popf mov out mov icebp mov add pop sub xchg pushf inc jg push adc rorl jo dec into push sarb int3 stc daa xorb mov inc aaa in pop and out jl shr dec mov push mov jg jle and jg scas jo cli fwait xchg push jg adc test lea int3 xor aam insl sti xor add xor cmc sub sbb ljmp int or rcl inc mov mov add jno or mov xlat jg scas ficom stc cmp push pop mov test iret dec (bad) je pop or js ret xor xor ss (bad) mov jnp dec jbe jg push cmc mov rcl mov clc jg std sbb inc cltd add insl mov test sub rcrl xlat xchg sub stos pop mov cmp and in test jg mov jb mov sarl push sub out in jg inc sbb in or ror and leave xor movl mov iret jg push ja pop (bad) push (bad) xor in js jb adc cmp push call lret int3 xchg xchg lret sti push adc mov call in push push or ja pop jg dec mov push mov sbb mov push decb inc fistpll stos roll rorl cmpsl pop add cmpl jnp xchg sti mov fcompp pop pop icebp dec stos jge jg aam add mov rclb fucomp cmp nop scas ret aas jg test out fwait jp jg pop or jg,pn inc mov ret cmp in sbb insb icebp js and outsl cmpsb les add js into mov or sbb imul loope incb lret arpl or cmp rcrb xor lahf (bad) lret and das mov inc xor cs shlb sti push in add mov clc jbe jg (bad) jmp cwtl mov inc push jbe cli push xor js pop and lock and aaa xchg xchg mov sbb repz jle adc ljmp jg enter leave addr16 jg sahf push jne adc rcll stos mov fcoml testl out cld rorl mov xchg aam lods and fadds mov jg (bad) sti ret arpl adc pop negb inc enter cli jg xchg cltd loopne dec lock dec inc test push in or cmp jp es and sub (bad) xor repz test and (bad) cmc test sub jg imul (bad) jae jle imul pop xchg cltd sub stos cmpsl stos ds and pop rcr les sti idivb inc cmp jne mov jg es gs and (bad) jg clc jge scas or jg outsl mov aaa ret out movsb xchg pop add in repnz jg mov jns cmp pop cmp scas dec call xor lcall cs dec rolb mov or xor mov xlat outsl insb and inc jg (bad) mov inc ljmp mov shll int3 out xor dec dec sub (bad) add pop scas fild mov jg inc test jge test jg fldt xor and scas outsl arpl mov xlat cli inc out aad jmp fs jge popa cwtl fidivr ja inc scas push add pop out mov rolb sarl repnz xchg testl mov (bad) mov dec jg and test mov and fwait inc (bad) aam jg pop dec cmpsb int3 jge stos jg fisubr iret mov dec pop out shll fcoms xchg divl or push adc inc add sub lods pop out inc cmp sti insl xor and in dec or pop sti sbb ss push xor lea cmp aas (bad) (bad) movsl out cmp dec jns push movsl jg mov (bad) ss out andl imul aad dec rolb fiadd sub jg lahf or cmp in add pop push aas mov insb fmul movb pop movsl mov push or jg popf popa xor jg xlat xchg cwtl movsl sbb jg icebp sbb dec and dec addl in ret xchg jg add mov jg lea xchg clc or jg in gs mov invd jne mov loopne inc std inc out xchg arpl lds xor cmpsl cmc (bad) jp mov jmp (bad) out pusha rolb and repnz movl mov movsl dec rcll sbbb stc xchg movsb mov push xchg mov dec lahf cmp cs push push mov aas pushf lods or ja fisttpll iret jg js add hlt sbb loop sti or mov leave cltd jg mov movsb dec mov push dec sub outsb loope inc pushf pop int sbb jne add jae orb (bad) jg mov sarl fistpll mov pop xor mov sub jg xchg dec sbb add jg in or lcall pop or (bad) in pop jg xchg icebp cmp fwait and fbstp out mov push insl jg test mov and loopne,pt dec xchg add jg jmp jae and jg xchg push in adc cmp inc mov xchg and jg lods mov cltd jg push aaa dec add jnp jg aam inc push dec mov jg and mov sti and fstpl test (bad) ds lcall adc xor es lock inc push mov cmp sbb sub std (bad) mov rorb dec sti fdivp jnp das (bad) mov (bad) mov adc sbb leave std mov les sub cld dec mov mov ja mov jbe outsb ficoml insb fldenv sahf jg dec sub ds fs (bad) repz lahf (bad) mov and push or psubq add dec mov dec and aas aas fidiv jo mov dec mov ja cmp (bad) ja cmp mov dec sbb push out ficom (bad) push cmpsl fstpt dec add sub pop mov mov cmp jecxz jge lea imul lods loope pop push inc jle add mov inc inc inc js jmp xchg std imul push sub jg hlt (bad) popa xor mov and aas lcall sub jle aaa pushf sarl mov cmpb fxam loopne in pushf (bad) pop sub push mov sbb lret popa sub or sbb (bad) jg int mov in xchg lock addr16 sub (bad) mov or dec sbb sub jge adc lahf call imul jg and loope jg ljmp jg or hlt mov dec cmc cmpsb mov xor sub xchg gs data16 mov and daa push int3 xchg div les ret or cmp mov xchg inc int3 (bad) sub pop add mov pop (bad) outsl into or cmpsb stc xchg dec aas mov mov cs sbb pop jb push test xlat into repnz je int jb fmull enter lock mov xchg rcrb xchg fistpll int3 test jg xchg or je,pt es popl nop jg xchg rolb jg ret fsts cmp (bad) push xlat gs jp test push dec and jp roll dec mov jg push sub jl loope jg mov icebp push mov bound rorb jp mov jb aas dec xchg cmp or out fdivrs test jge inc imul sbb jg sub in je outsl cwtl jbe lock mov jg push fs clc pop imul mov iret faddl clc ja mov aas decl cmp lret loopne scas cmc out test xchg aam xchg cmpb mov inc inc jg ds pushf sbb xchg mov mov aad jg or lea mov aaa arpl cmp insb pusha jg nop xor mov test mov pop inc cmp arpl iret push imul mov fwait inc jg cltd sarb mov cmpl mov gs test add int daa bnd movsl xchg lds pop pop mov lods xchg pop jg fwait dec (bad) in push sbb push jg mov lahf and push ds inc adc std xorl imul addl hlt shlb add iret jg jno mov jle test aas pop mov jg jne ficoml mov sub mov xchg (bad) jno out cmp sbb mov jg sbb in jae sbb sbb jg push pop xchg aas add jg push and mov jle xchg das jnp dec sub fwait jg subb sub cmp and stos les xchg dec addl outsl cmp inc sub jg mov pop fildl aas inc out inc insb ficom inc dec js and mov mov jg test cs adc jg sub mov mov dec cmpsb pop push mov in jl dec int enter sahf xchg repz fsub mov lock mov adc mov sub into xor xchg mov jg stc dec das push inc cmpb test fdivrs cmp xor or add pop jg cmp sbb jg test pop push pusha and jg das sahf push ret rcrb (bad) jecxz jae enter cwtl aad mov cmp pop add rcll jne lock hlt adcb push pop (bad) ror inc je imul nop mov add jg aaa sbb fwait xchg adc enter or fstpl mov mov jecxz jl (bad) loopne jns idivl dec sti xchg pop adc jg pop icebp outsl jp mov enter jnp xchg jne add pop jg bound insb repnz mov or outsb daa push (bad) nop and push es push das insl lret jg ljmp jg jle pusha adc xor loop jg aas mov jb pop shl xor mov jg push call dec sti sahf fstpl inc ja fnstenv add jae jg (bad) jno sub or roll push les xor and cmp testb addr16 jecxz xor push dec mov loop dec jg and dec pop cmp jg in jbe jno sub sbb sbb xchg or xchg jae mov daa inc cmp lds jae xchg mov add and rolb adc jg (bad) scas jne dec cmpl (bad) mov sbb mov sub mov insb in (bad) stc or dec xchg in inc stos push sub push in movd mov jg movsb push or add (bad) lods mov aam mov std dec test cli es lods jg add mov imul imul cli jg mov adc loopne mov les jg fs loop adc ds gs (bad) jno pop aam jg mov adc int3 add jg and fnop ret imul pop rcl pop scas addr16 fldcw mov (bad) push xlat mov mov sub jge xchg loopne rorl movsb loop inc xchg pop mov jg pop fwait mov adc sub push and jmp cmp pop jl mov mov cmp dec xor cli jg test inc add mov icebp xchg inc loop lahf xchg mov jae pop fmul cld jg mov xor xchg mov push hlt aas push pop sahf dec mov jg adc cmp int jb dec add adc adc out fildll (bad) mov jg shrb jle sbb subl pop aaa dec mov jg (bad) adc daa add cmc ja lods jg stos lret inc sti jmp sti dec loope inc test mov jmp bound or dec push mov jg pop out jno cmp mov inc call cmp icebp mov (bad) cmpsb jecxz mov ret xchg jns in dec mov pop and ja jno sub push and jg aas out pop scas inc hlt jg adc in lahf daa jg nop orl sti (bad) in stos jmp pop push dec xchg insl (bad) mov pop sbbl idivb or xor gs fnstsw (bad) fstps xor cmpl je fnsave shl jg aas cmp push xchg mov lea mov cmp pop mov adc xor push mov cltd cmp sbb pop jg mov shr push lcall mov out sub inc inc sbb (bad) jg push out ret es sahf sbb hlt and push mov sti arpl (bad) jg repz ja dec sahf scas mov mov inc loope inc jp lods lds ja notb jg in je mov push pop icebp or leave arpl jbe rorb enter je es push mov inc push jnp sub mov jns call jg mov sbb lea pop test jg lods xor jae or add or rol sub jg cmpsb inc fistpll pop push cmc mov jg imul (bad) jg mov mov lea (bad) pushf stc sahf mov rorl adc loopne dec cmp push div mov dec pop jne xor mov aam mov test pop xlat push std sub xchg mov dec mov inc mov cltd jg out jb pop mov mov lea fmull dec jbe jg inc aam dec push pop mov sub (bad) imul xchg pop jecxz mov jo inc arpl jae das aas xor cmp sbb pop sbb adc mov out push loopne jg mov mov add not sbb les lods ss sar jb movq jnp xor aas mulb ds pop jg add sbb loop inc cltd aas outsl push pop test lcall sbb leave mov iret jg jo imul xchg jbe fnstcw jl adc push cmc inc fwait ljmp loope loop xchg ret dec jg lahf or pop jg outsl mov cmpl negl jb data16 or in std sub inc (bad) in je stos stos aas sbb cmc pushf addl or nop jmp je mov push jg jecxz clc push in jp jg loop mov xchg ret inc sbb and shl xchg mov dec cltd jg mov pop inc or sarb mov popa xchg jg add in test std arpl xor pop aam out in and jg jp decb push add push jecxz mov adc jg mov stos mov dec fs dec jg and lahf jg mov rcr das leave jg sbb adc mov and into and sarb (bad) mov imul adc xchg mov out or cmc sbb inc mov mov push js mov (bad) das ss push jg std nop cmc sub jg and xchg arpl xor pop mov nop dec pop sub std inc int in jae mov jg mov js or or fldt sub imul jg outsl ja mov pushf jge fsubs inc test dec pop and sarb dec mov arpl cmp xchg icebp (bad) int and jg cmpsb inc pop mov out xor xchg adc mov int3 mov xor movsl sub sbb lea mov xor (bad) lea inc ret inc mov inc outsb arpl lock clc add ljmp cs add (bad) shlb int sub cmc or (bad) sub sub jbe mov hlt jg push cmp fildll addr16 sub outsl enter (bad) pop mov jg daa pop xchg jl xor jg push sbb sbb mov jg lcall cmp shl cs mov jg pop outsl mov xor repz adc bound or push xchg push iret mov fisubl xor jg pop dec popa and insl (bad) mov ljmp xchg fisttpl inc mov pop push add fisttpll ret and (bad) sbb cwtl icebp pop js test inc jg mov xchg int and mov push or pop jecxz xchg cmp fdivrs daa xchg mov xchg scas xchg dec jecxz push ficomp pop lret loop cld mov jg push pop lahf std or ljmp pop nop cmp mov mov xor aaa jg add push inc jp ret dec push es jl cltd leave jg (bad) dec mov jg aad pop push insl pop lret (bad) (bad) or dec or mov xchg sbb shrb ret cli ret stos pop push lret jb mov sub scas out test insb xor iret dec jg dec dec sarl stos sbb and push js mov dec adc inc adc in add push enter cmp (bad) fsubrs mov jg pop ret rcll sub or mov icebp lret and out dec mov mov pop push pop jmp xchg jg mov testb ret ljmp ja mov sub dec popf push fs xchg xchg icebp xchg fldenv xchg adc jae,pt xor bound addl jg cmpsb fnop jp cli add pop fwait push stc mov lods mov push sarl call imul cmp sahf enter jg gs mov pop fisub mov pop mov sub mov loopne call lcall inc and jmp sti or in mov aaa les push xor dec jg adc mov out popf mov add jne in fisttp jg jecxz mov cld cli sbb pop rep fmuls (bad) mov jg push int3 jmp pop lock scas (bad) mov outsl enter or call pop inc jg mov int3 insb out cltd and mov cmp jae or jg adc inc imul movsl je xchg push scas (bad) jg mov cmpb cmp insb cmp enter jg pushf je insl adc push fsubr loopne gs ja jg aas (bad) in adc push imul pop cltd inc aas sub (bad) clc or mov jmp js xor add inc mov push mov mov jno ds mov (bad) and sti int dec cli sub test xchg fisttp mov in inc xchg addr16 mov lahf jae ds (bad) idivl mov inc xlat inc dec les into aaa pop cld roll stc pop imul jg dec jns and pop adc jmp sub inc jge jg mov inc das sbb ja jmp jg or pop insw inc out and lods push repnz mov mov fwait sub dec dec jge adc mov (bad) movsb lahf mov addr16 dec stos cmp gs daa mov popa sub aas test mov test sbb fnsave (bad) cmpsb fnstcw ret or imul aas test movsb loope frstor adc xchg xor mov and mov aam xchg sbb (bad) in mov jg push sub into std fldenv mov jg cltd add jns ljmp inc xor sbb push xchg cmp jg jl pop (bad) or fistl jle push mov arpl pushf inc in dec test mov inc sbb jg adcl imul jg dec and out xchg mov and mov insb jg stos add jmp test dec mov jg mov sub adc jg loope pop jbe fisub push pusha test add insl shrl bound repz cmc mov sbb mov daa fwait (bad) fnop jg jmp pop cmp repz fsubrs dec loop jne push sbb or pop aas sbb inc out fisttp and sbb add sbb mov inc and adc jg lcall jg jecxz jnp mov paddsb mov cltd (bad) jg pusha int and sbb mov xor repnz xor push lcall jne lea mov adc cmp cmc sbb insl lret push dec dec jg pop xchg push nop adc or push jle dec and jne jae sub push negl sbb jle lahf fcoms push les jg (bad) add pop dec jg repnz inc dec add lds data16 lods mov leave sub and sbb jle pop jns dec mov cwtl in insb data16 and mov push stos call cmp jg in or jg xchg lds enter icebp pushl nop (bad) mov sub push adc jmp xchg faddl and mov pop rorl push mov arpl inc sub jae xor mov jg inc jecxz sbb int3 or add pop (bad) jge pop add mov dec sbb int3 add cmc jg imull push jg sub addl dec and test (bad) sahf xchg cmc loope sub incb dec shrl (bad) mov lea sbb cmp jg lret push arpl lods mov jl into incb sti gs test lods push mov xchg mov jg pop mov mov cmp pop pop ljmp push mov xchg and inc sarl arpl jg lea mov fimul arpl aas stc mov inc int3 outsl push leave cmpb int3 mov mov repnz dec movq sub cmp jmp jg (bad) cmp mov sub fbstp or ja insl pop stos das add into fs aad mov jg push ljmp add repnz outsb xor cmpsb jns rolb daa or test and inc sarb mov mov and push rcll idiv out js and jg mov rorl cmpsb mov dec add testl sub loope stos ret mov cld stos mov push (bad) idivl (bad) loopne push test mov push pop jg add scas dec inc (bad) jg aaa cmpsl mov out add pop test in push mov imull nop xchg pop push fistpl sbbl jg in jecxz icebp aam hlt jg jae push push and mov pop sbb loop jg shrb mov push jno sub sbb inc icebp out jg add in sti test repz jg ds mov mov push (bad) lea in and scas outsl test ss aas es fadd cmp xchg gs aam push push sub jg pop ret mov mov add fstpt jg mov push push jg xor inc in icebp test and scas lods lds adc pop fdivl aas sub nop (bad) xchg inc jae add mov push and jg lds mov data16 jg jns lahf (bad) pop sbb mov aam xchg xchg aaa movl mov fs jg int xchg xchg lret mov lds ds test adc notl mov or inc dec cmpl aam xor iret sbb fdivl xor sbb sub int hlt js jb sti jle pop stos aad inc sarb call xchg loope jg jo xor lds lcall rorl or sahf and xchg add xor mov mov push lea cmp cmp xor and leave sbbl mov jg jo mov mov hlt jg inc lahf daa inc and push cmp jg loopne cltd xchg jg pop jmp mov mov add and xor (bad) adc mov sti das or xchg or xorl push sbbl push mov cld imul mov imul pop mov data16 or imul je or int3 cmp insl jne cmp outsl or pusha jg adc les pushf jmp mov adc lods idivl mov push out imul or mov aas and pop loop fistl es xchg jp mov xchg xchg pop inc mov je dec push aas jb arpl jge inc out and icebp outsl lods pop xor jg addl shlb pop sarb mov mov loope testl cmpsb mov jg je clc jae sub idivl leave lock in adc push clc mov jg push mov (bad) sub xchg (bad) ffree pop sub mov jnp loop adc mov test push sbbl jg jne cmp jg shlb cmc jg movl add ret icebp jg in or stos lea pop icebp (bad) sub mov adc fidivrl rep dec pusha pop mov mov ja mov mov jg popa xor mov sbb arpl jg sub pop icebp jg (bad) bsr xor dec sbb add add rorb and xchg or loope cmp pop test mov sbb sbb mov pop or pop sub push xor mov cmp mov lods sti push add inc jge (bad) cmpsb mov push dec cmp sbb jg mov hlt jo inc jg ljmp lock iret jg cmc dec xor in or cld mov mov mov jg push jb (bad) or mov and or or insb inc jo xor int pop push or jg into imul shl pusha dec es inc add mov push dec arpl mov or inc cmp test jecxz jg cmovl jg mov insl jno xor mov jg lea cmc push mov xor jg cmp lds jg cmp xor dec data16 test add jge leave insl dec inc fstpt movsb loope mov or movb inc pusha jne jg fsubr xchg fistp sti arpl int push add cmp push cmc sub xchg insb stos call (bad) nop jmp cmp rcr cltd xchg out mov mov dec je popa jg das std fldt lock dec mov stc loope addr16 pop mov push bswap or popa cmp popf sub jecxz cmp dec imul add into fildll jg sarb push vorpd aas lods ljmp cmpb cmp push push jbe aaa fbstp cs inc aas jg lods sub dec loope cmp jo or jbe mov addr16 dec jg hlt mov or fwait or add popf dec (bad) jnp cmp cmpsl dec in ficom lock cmp sub and rorl lea cltd push mov fstl jg jnp testb repz pop adc aas lret push lahf in sub add scas in enter inc or std paddusw inc cli sarb (bad) mov cmpb xchg add out sub xorl cmpsl push cmp jg xor mov arpl xchg xchg out dec xor (bad) cli jl loope mov sbb and imull sbb pop ret out mov roll les add outsl enter loopne ret adc aam xchg push adc sub (bad) iret insb jae mov cld jns and jg ds pop lods push int into inc insb lds cmp and je sbb sti inc popa sarl (bad) cld jg mov sub imul xor mov mov adc push ja mov push cli shrl arpl pop jg int insb (bad) mov aas jo pop xchg and inc ljmp das pop sti pop push push (bad) xor ret adc push and inc jg outsb js ficoml ja ret jg test cld mov cli add call lahf scas inc mov out pop ret call sbb je mov push mov pop testl xchg movsl xchg adc jg adc mov clc addb fmuls mov addr16 cli hlt jle inc out jg lds xor jg (bad) (bad) rcr mov cltd shr addr16 push add fisttpl cmp maxps sub (bad) ss sub (bad) jbe pop jb jg cmc (bad) arpl and xchg jg repz (bad) jbe xor lods loopne push push jge ljmp lahf cmp out jg sub (bad) jg (bad) jge push or jg aaa mov or aam xchg jg sbb ss cli mov adc repnz sub jg cmp mov xor (bad) mov inc pop cmp ret test xor jg and bound stc inc icebp (bad) inc ljmp jge jo jg inc cmc in bound mov xchg xchg push mov dec repnz sub or cmp sub xor out jg sub cltd dec inc outsl int3 mov pop (bad) xchg insl push (bad) cmp jg aaa adc pop cmc push mov dec push faddl std ss adc jg pushf pop sahf fsubs push pop pop gs mov pop xor loop das jge test xor sub jg (bad) mov stos (bad) fldt fs jb pop xor rclb jg test test jg inc mov cmpsb ds lods adc inc cmp jge pop mov or lea pop mov shll mov call jg outsl mov mov pusha inc popa jg,pt scas dec (bad) in insl adc jae and xor adc and inc jp inc or push xlat ja test sub dec imul jmp pop ss bound sti xchg or stos lcall sub iret sub jg mov lahf cmc stc mov je aaa jg imul fcomip xchg add stos sbb mov aad dec jg mov cli inc jg enter sbb adc mulb cmp push (bad) dec cs xor xchg imul dec test sbb clc sub jg das push sub aas test and inc and movups pop imul jg inc mov mov (bad) xor mul adc insb cwtl mov cmpsb fwait lock nop add sahf dec divl xchg push add enter mov jne pop cwtl jg call popf mov ss cltd fwait into wrmsr jg fs xor out (bad) sarb jg jmp sub jno std lods test fidivr push nop aas sbb jg mov lds mov push test dec pop les push mov int sub loope in hlt push inc fcmovb mov jg mov ss xchg mov jg stos clc dec je (bad) jg mov (bad) aas dec xor sbb mov dec adc int3 push mov call xchg movsb sbb pop mov out gs adc in sbb mov rcrb sub xchg std inc aas cmp sbb mov xchg dec std aam int sti pop push jg loopne cmpsb test in mov lcall fstpt xchg (bad) add es xor sbbl inc fnsave sub or inc jo xor xlat pop pop cltd ret shrb jg mov sub out pop cmp xchg ds fdivrl and (bad) dec ljmp js (bad) push mov push and test mov dec shll sti jg push (bad) jno rorb jg faddl ljmp cmp out cmove jnp add bound jg ret std mov push jl,pt cmp fmull dec loopne pop cmc sbb cmpl daa or repz mov pop mov push mov pop icebp shlb roll xor dec jg xor js jl hlt push mov into mov xchg ja jno push ret mov test inc inc aas inc test (bad) ja inc ret mov mov xlat push push dec jo mov cmp mov and add pop jg and (bad) xchg push fidivrl jl mov adc dec sbb jg pop jnp jae mov fsub push dec mov pop xorl scas lds in pop es mov outsb imul sub fs adc add pop ja push xchg push sbb inc jp iret outsl repnz rolb cmpsb jg test push shll cltd aam xchg xchg xorl jg jns,pn mov rcll add pop clc jo sbb add jg call jns and imul jg xor repnz cltd jg idiv rol jbe bound scas inc jge mov dec xor mov mov (bad) popa mov bound cmc dec repnz push pop cmp jae pop sbb and or lock aas shrb dec or inc call sbb aas cmp std mov or cmc imul jg jge imul xchg insl sub mov mov test imulb insb js push outsl sbb mov (bad) adc in pop xchg popf icebp pop mov or xlat pop sbb push adc push divl cmp (bad) add jg xor jecxz sub loope jg bound jg or or push jns out push and sbb (bad) rcrl xchg cld stos loopne xchg adc icebp fimull and mulb push jnp mov dec push sub adc mov push mov ja add cmpsl jg sbb push and lods stos jg lret in and (bad) dec jb push mov out sti lahf roll cltd push addb jmp and inc out inc movsb pop fisttpl pop pop pop jg mov (bad) sub hlt (bad) cmp (bad) (bad) mov jg sarl lret pop ds inc xchg jg das xor inc or lods js mov fisubrl add dec lock arpl loope sbb xchg push fisubrl sbb test and bound aaa addr16 repnz jnp lods test in jb lcall mov mov into jg add xchg clc ja leave and (bad) in cmp (bad) rolb mov mov ds std das pop sbb fildl xor xor imul push lods jg jnp or lock xor jbe jle loop fdivrs mov sbb xor stc lock decb sarb flds mov jg aaa adc lahf cmp dec add (bad) lea adc xor out cmpl sti push sub jg mov adc jg inc inc pop and cli jg add pop push jg arpl jb and movsb sahf mov or clc cmc cmc (bad) sbb jno int stos push dec lret (bad) mov and jg jmp xchg pop mov aaa ret add jg shlb jno,pt or push idivb mov inc jg arpl sub jg ret gs lods push aad rorl mov repnz lods inc cmp adc adc mov jle xchg inc test pushf fs loope push enter lret psrlq xor sahf in jecxz rcrl sub jg shrb jg enter add in test pop dec inc lds incl lock jb dec packuswb cmpb sbb push popa sub mov mov jecxz pop aas xor ss test jg (bad) call jns inc sti cld aas nop or addr16 lods and mov lods sti fadds (bad) stos and sbb push andl pop out pusha daa sbb stos and loop inc jg and pop xor xor jg lret jne pusha fidivrl cmp sbb cld ror jg sahf xchg pop lds fist adc jle mov cmp cmp jg adc mov jg xchg jge add test jg sahf (bad) (bad) xor lret outsl or arpl dec jg adc mov (bad) cmpsb xchg ret mov divl ret fwait call cmp jg rolb and push push xor fisttp jg out xchg add bound jg dec into push mov repz test xlat jg jp adc pusha cmpsl sub jne addl stc out lahf inc add cltd sbb mov lea mov push stos jg pop adc cwtl jp jg mov ss icebp dec xor add sbb insb inc sahf es enter testl jg mov add xor out (bad) (bad) mov test add icebp mov sbb inc xchg inc jg fsubrl ja sub mov jg mov in cli scas shlb and mov dec jg push leave or mov adcl jge or arpl mov ret jg mov cld test mov rolb fistl pop out mov cmp sahf mov repz (bad) pop push xchg lock jg xchg in cmp lcall pop push mov repz add lcall add xchg rol repnz fldl jg xchg (bad) jp arpl xor shl cli jnp sbb sub dec dec into mov cmp out js and jp fs dec jg jbe xor xor imul mov shrb aas adc jae inc inc pushf data16 inc in pop cli (bad) sbb std icebp dec lock in xchg (bad) out push mov sbb call mov push pop loope or lcall das fsubrs mov mov xchg adc lds scas out sbbl shll jg sti mov es icebp dec mov clc xchg ljmp jg insl (bad) icebp sub out ds adc xor sub loop cmp les add xor (bad) out hlt and les mov add dec fnsave adc cmp xor jg adc cmpsl push mov test dec sub aas or pop out pop or test ja jg dec stos mov cltd sub adc loopne movsl mov pop cmp repz int cmp sbb mov xchg fstps cmp idivl lods loop mov gs mov inc mov adc jbe cmp sahf sbb xchg fisubrl fsubrs jg mov enter imul xchg aas jb xor aas xchg or loope test aas cmp xchg dec inc dec (bad) js dec jbe flds lds jg and mov and xor aam sti (bad) sti repnz (bad) cmpsb psllq mov jg or stc jg lea pop jne pop insb sub jg dec sbb in inc jg mov add adc or (bad) scas or mov mov sbb sarb mov jg mov dec fidiv mov lods mov push outsl lods lret ja jg adc push mov cmp js inc or imul test fcomip add daa cwtl (bad) (bad) push and jg mov imul repz test loopne pop repz mov sub insb mov into out mov (bad) sbb cmp inc pop xchg jo sub inc es mov mov dec ret inc iret jmp pop jg mov repnz imul inc outsl or jl jae dec inc (bad) mov and sub lret ret stos outsl dec sub sti outsl lret sahf cmp inc dec jg xchg ffreep pop rcr adc (bad) push fistpl jle jp mov fiadd sub mov aas (bad) mov sar into dec cmc jo cmp xchg pop sub adc repnz or push ss rcrb add mov loop leave jns jg inc pop jne mov push imul xchg pop pop pop repz jp (bad) mov or cwtl inc jg pop fldenv mov fwait xor jo test or inc mov jecxz jg xchg aam inc imul movsb lcall cmp and out cmpl cld ret sub sub std arpl mov mov push sbb movsl popf loop mov hlt shll insl fwait jb adc sub jg ja fcomps (bad) xor pop pop cmp enter arpl out sarl js faddl jl in sbb jle inc sbb fisubr inc or jecxz pop cmc pop not xchg hlt sub xor inc and enter mov or or les push test dec xchg xchg cmp sbb (bad) lods jbe pop pop jg ret cwtl cs and jg sbb xlat imul repz loope and lods ljmp xchg lods dec push mull lcall cmp jg cltd adc test pushf test xchg adc adc pop xchg jg or call mov mov inc push cmp add pop (bad) mov das sbb int jg fs stc pop xor sbb gs cmc sub mov pushf cmpsb cmp dec xchg or (bad) into dec jg jle cwtl xor or (bad) mov (bad) mov and mov mov cli inc sub test test leave jg out in iret nop mov jg fwait daa rcrl inc add jg dec stos adc out push mov push jge ficomp pushf icebp and std bnd inc adc je repz clc jmp lea mov and mov dec (bad) jb add xlat push mov aad mov pop aas pcmpeqw lods scas jg jnp imul negb ja pop (bad) cld push cmp loop cmpsb bound lods add mov enter jg sub dec shrl lahf push push jne push arpl jg pop adc xchg pop jne orb sub jg pop ja cmpsl add pop aas adc mov cmp or push cmp iret xor popf jg mov mov jg push push mov out dec jg lret aad push ret (bad) jp mov dec aam xchg aas cmp (bad) ja jge sub jno int mov movsl inc adc jp jb mov jg fldl or dec jnp clc aas adc mov stos dec scas test or jg add adc push mov pop push in dec shrb and insb aam cwtl dec push popa push jg ja int3 mov push push pop outsb call lahf jae arpl jb dec fnstsw out adc es ret adc daa adc mov movl push jg pop xor fisubl lds imull stos aas jno mov inc pop stos jg fxch sub mov xchg jg (bad) cmc jne bound in adc jg or (bad) icebp jecxz mov sub sbbl rcrb mov test push jg sub fbstp (bad) out arpl adc (bad) dec das fwait and sbb jg pushf mov xor sarb pop outsl cld icebp bound or mov mov mov sub mov xchg sub (bad) imul jmp push pop cltd mov xlat (bad) jg cs rclb vpcmpgtw and (bad) pop popa pushf jg xor mov jg cld test aam jnp jg jae pushw push jl sti ret into movsl sub js dec popa sub outsl pop jmp jg fimull in cmp rolb fidivr sti (bad) daa das jns jg nop dec sub sbb sub cwtl inc pop pop aam jg popa mov jae stos imul pop cmpsb int3 mov in ljmp rorb adc out rcrl lcall js shrb xor andl cwtl push movsb xchg mov lea aas jg and leave icebp bound hlt test or test cmp jg mov aad out sbb jg insb xor jg mov test mov addr16 out mov cmp mov pop out and stc (bad) jne insl (bad) mov je loopne fsubs xor (bad) jae mov jmp pop mov dec mov dec int3 sbb aam dec mov out lods mov dec notb call repnz cmpsb (bad) sarb lods aaa popf bound aam roll xchg mov inc sbb mov jg cmpsl out inc ret sbb daa out xor dec jg push outsl cmpsb aaa cs mov repnz mov cmc push jns adc jg push mov jg mov sbb xchg mov mov mov scas fstl xchg adcl xchg inc leave jbe stos jg xor pushf fnop mov jg lods out add jg push pusha daa mov xchg cwtl inc sbb xchg add aaa rolb fldenv sbb (bad) in xor inc jg mov rcrl inc in iret adc in pop sub xchg cmpsl pop mov roll es loope jg fs sbb ja popa loop mov or inc xor pop mov lahf sbb and fdivrs and mov ljmp lds xchg into mov inc mov out mov jl cmp je (bad) idivl mov mov jg cs xchg jb pop test push mov jg mov pop in mov xchg jmp or dec sbb cli sbb mov fcmovb fwait pop outsl mov xchg mov add pop (bad) sub jle and pop pop aas addb xchg in jl bound mov jmp nop jne or mov mov pop popa pusha jg jno nop js es aas dec testb lret adc (bad) jae jbe daa mov dec add mov adc xchg lock (bad) insl pop jbe movsb inc mov inc lcall push and outsl adc push xchg aad jg scas aaa pop (bad) mov hlt (bad) mov (bad) arpl sahf jg push inc pushf inc mov dec jg mov dec loopne,pn jg push sbbb and sti mov stc pushf inc push inc test mov jmp stc (bad) clc or inc push add ret lods (bad) mov cmpsl ds addr16 (bad) sti mov std add test aad pop mov outsb (bad) out push mov mov mov mov cli arpl fs mov cld mov mov pop push mov xchg pop data16 push inc ss lods jg rcll mov jg sbb loope jg divl repz adc cmp into push xchg jle jno cmp lods jbe fdivrl sti mov or das lcall jle out mov xchg lret jg mov inc pushf jg movsl xchg jno push jmp repnz jnp lcall cli mov xchg (bad) cld ja aas jg cwtl fcoml adc fidivr sub enter jmp jg loop das push mov mov int3 mov fisttpl ss cmpsb popa dec js mov dec cwtl or outsb test add sar jg fs push fidiv jbe jg shl xchg (bad) fbld jg adc neg cmc mov jg sbb pop mov mov jns nop jg xchg xor sbb cmp aam inc dec hlt xchg inc sbb mov aad data16 add xor sbb mov pop test frstor mov pop cmc push int3 sbbb repnz add dec xchg imul (bad) in adc jg repz imul int3 cmp sub sub lods scas loope inc xor xlat insb ss mov jg lock add mov inc jg lea (bad) dec push es adc loop jae dec stc (bad) mov lcall imul lahf and ljmp pop and sub outsl div mov das int3 hlt jp mov (bad) push insl mov sub in jg testb push mov call mov inc pop mov lret push movsb mov cld sbb mov dec mov out sub adc outsl mov cmp pop sbb sub jp (bad) xor cmp and mov jnp jb imul in cltd jae inc adc xor dec sti sbbl cmp test outsl jg inc mov dec dec sub out adc lahf dec push cmp jg and inc mov sbb mov sahf pop add rorb sub std icebp leave test mov add fwait imul sti jg sub push scas aad popf jns and dec add daa sub fstps mov jecxz adc push gs addr16 (bad) sub push jnp sahf sti dec mov jg mov push or fidivrl jae sbb dec xchg out cwtl test in pop push ds mov mov pop scas cmp jb js xor lock dec popl mov mov testb push push movsb jg fsubs push fimull adc inc jns bound mov lods sbb mov adc jg xchg xor std jp ret mov mov pop cmpl pusha dec xor fwait cmpsl jae push mov jg jne jp and dec outsl aas dec loope (bad) into jg xor je inc stos aam gs jg cmp scas jg aas pop jle test mov sbb and daa jg fwait mov jmp fiaddl xchg add into mov mov fnstsw pop decb leave dec mov inc cmp lcall lods jg repnz pop add push ljmp jg jmp inc jg cmc lds jg add mull jg jmp xorl xchg pop jns ret aad (bad) xlat pop jge cli aas push mov pushf pop jp iret shrl hlt jg push rcrb stos ret sbb dec pop add mov or or mov gs mov jae pop imul adc arpl cmc je test push es into jg (bad) mov or dec cltd add adc cmp lcall out pop test dec jne mov push inc mov repnz cmc adc inc sub leave imul jnp rcrb scas jg sbb les test pop push push test in daa rolb ret xor jg mov and divl movsl jnp sbb jg pop xchg sahf inc jecxz jg ror and jg sub or pop push aad jp out xchg xor or inc mov mov fisttp dec cmp lock movsl outsb sahf inc jg adc fdivrp push dec jp mov mov sbb cmp jg jge cmp lock sub outsl xchg xor mov pop (bad) adc insb cmp xchg stos cmp test inc push (bad) xor jge pop ja pop xchg mov pop imul jg cmp and add lahf in divl scas sysexit mov jg shrl mov sub fild mov fnstsw aaa mov mov sbb cmp fwait (bad) xor cmp incb ja rcrb xchg ljmp pop fcompl jno mov add mov cld cs sahf dec ss dec push mov add and jg mov xchg in movsb jg or add popa fidivr xchg sbb and loopne ss lock xor in mov and cmpsl fdivs cmp movsl dec cld and inc jecxz xchg mov mov push roll and cmp cwtl icebp aas mov sub mov scas lock out outsl push cmp out push xor xlat dec imul xor jge pop sbb sub xchg jg sub dec dec mov jg adc mov cld and stos pusha imul incb jg imul mov es jae push loopne push jg jnp bound (bad) jno mov fsubs loop dec pop pop dec jg dec cmp addr16 mov ret dec mov sbb imul xor adc mov pop jnp cld push or jmp aas rcll mov (bad) (bad) and cmp push nop fidivrl jg xor mov out push jno inc lahf sarl or stos mov lcall pop jnp scas push push leave dec sub es push jg cmp daa fwait jge into mov cmp das sub stc movl aad cld les ja mov fimull pop jg js aam scas mov jge cld aaa repnz jg bound mov add out ret push cwtl loopne or rcr xchg jbe imull (bad) push jg add cmp push scas mov jo sbb cmp stos hlt sub out int3 pop cmp adc leave push icebp inc popa dec jg in daa shrb movsl pop push mov lods cmpsl sub jmp clc pop and mov mull lahf jp pop mov jmp jg dec lock jg jp roll add lods call ret dec mov cmp mov inc sti in test cwtl jg xchg jmp dec sub sub in ret inc pop aam (bad) cmp lret xchg sarb mov aaa and stos fsubr cmpl pop xor mov jnp xchg lcall mov add cmp incb mov xor stc sti xor mov cmp inc lods clc jg adc insb (bad) cmp fwait movsb imul dec xor out in addr16 jg in in imul mov data16 loope inc insl jg cmp fstps sbb push xchg jle mov js mov popa jecxz or cmc jae pop xlat inc loop das lods negl cmp les cmpl sbb jg (bad) mov or jecxz jg test push lret fnstcw mov sbbl or outsl jecxz adc or insl jg jecxz sub cltd stos inc incb sbb dec mov pop adc and jg mov or jg jbe scas out sbb aas xchg aam popf mov mov inc push adc or out jmp xor mov in idivb dec std in xchg mov ret mov aad sti xlat loope (bad) push sbb xchg fdivrs (bad) pushf pop (bad) in mov mov cmp pop fild inc cmp insb xchg mov mov jg sti inc dec dec js das jg xor aas adc lea pop dec xchg leave mov jae ret scas sbb push mov push ja and insl pop sti movsbl jg pop mov push cmp sub bound btc js push data16 xchg or cmp jg jecxz push push cs jg,pt mov cld mov dec inc mov mov adc xchg dec xlat or cmp (bad) xor (bad) cmp sbb jg mov (bad) jo add rcrl cli daa pop or mov subl dec data16 enter sbb xor mov sub dec or ds inc xor adc jl ficomp inc jg xor leave mov jae pop adcl outsl stos push or jne jg dec jo das pmaxsw bound test push ljmp ss sub mov outsl shlb ljmp jg repnz cmp popl (bad) pop outsb xor aad jg cmc adc es and call inc sub mov add call ret test test and mov sbb xchg sbb test outsl sub movsl fistp cmp jg xor pop into loopne jg lcall jg ret adc pop dec or jg js and fisttpll test jg push or gs adc adc iret jb cmp xor inc in (bad) mov adc xchg mov mov inc jbe push mov xor imul imul es cmp sbb inc fwait clc mov push sub mov outsl xchg pop cmp ljmp dec cmp jp xchg sti sub imul test inc cmpsb bound pop (bad) jg mov rcr add popf aas jbe ja loop sbb sub pusha xchg fs mov je fldl outsl adc repz mov rclb mov mov (bad) push dec stos jo mov insb cmpsl outsl sub pop in (bad) jmp gs jg add jmp loopne inc negb pop add jg inc test insb mov or into jg xchg mov jb mov push push leave enter gs pushf mov or hlt popa pop jg outsb popf jp in jge mov xor aad xchg inc test push xchg mov push xor das add loop std ret mov inc insl push pop sarl or jle into or sarb inc int cmp mov mov jecxz sub hlt jg mov andl pop push mov adc sti sti lods andl les jg mov (bad) cmp jg dec (bad) xchg push test jbe push mov stos repnz pushf push aas arpl popa jo xchg inc test or leave ds daa enter (bad) mov adc cmpsl push jg pusha stos inc pop xlat sub out outsb cltd (bad) mov inc js and fildl cwtl push jg lea inc aas add inc dec mov push cmp pop (bad) (bad) jg leave sti data16 mov sbb mov inc sub lods add cmp mov nop or mov pop jg js mov cmp std inc sbb jg cld mov mov les cli cmpsl xor insb rolb sbb add inc xor and sub mov loopne pop jl mov outsl divl mov add and pushf adc jg xor mov (bad) push jg push mov jmp pop outsb mov push out in jp mov dec movsb dec shl (bad) icebp out jbe and push add jecxz,pn pop mov push std (bad) jg int3 inc xor sub lret fstps dec sub imul andl sub jb jg cs lret lahf imull stos mov icebp adc push fimull (bad) jne loop jecxz or and fcompl icebp sub fnstenv pop mov push xor sub popf int3 dec and pop jg and cmp aas cmpsb xchg inc out jg xor leave shrl add add pop add jo mov outsb cmc pusha aas (bad) ret cmp jg,pt fwait in xor fs jbe dec mov xor jo jg insb mov jg aam push push popf or mov cltd jg out sbb dec inc cmp sbb aam rolb std pop jg and mov icebp cmpb (bad) mov jg xor (bad) jg rcr popf mov cmp outsl ficompl dec jg cmp adc add jg and lods pop add sbb clc pop (bad) mov (bad) inc into cmp sub fwait out xchg jg lea jmp add lods cmpsl popa jg xchg push cmp push rol jg (bad) into in add aas sti inc xor jnp jno cld jge hlt xchg mov dec add xchg lods popa and cli test sbb jg fimul inc pop outsl pushf out (bad) sub fbld in movsl xor xor sub jg ljmp cmp leave stos xchg jg push cli stc ja mov push push aas dec xchg ret xchg dec sub pop jmp add fnstcw jg cmp jge fwait jg xor sub or rolb inc sub mov xor imul scas je inc xor mov xchg mov jmp lret jecxz push mov adc mov mov mov fnstsw in fdiv jp lret add repnz dec pop cltd xlat mov push popa mov outsb push cwtl insl call adc clc mov dec or or jg mov xchg out add jg pop je rclb movsb xchg cld pop testl push push cmp cmp jo lds sti xchg mov sub scas add pusha lret (bad) jle pop lret dec mov sub aas mov mov sub push cld sbb jae push jb inc dec mov jecxz inc cld into call and loopne mov adc adc push xor stc jmp dec xchg jg fwait cmpsl (bad) into lret dec push mov and jecxz (bad) jae incl ss mov out push or fadds inc (bad) int pop cmp shrb mov jg cmpsb inc loop or push push mov lods (bad) outsl ret jg sbb imul test jg adc into or mov mov call and mov inc mov sub xor lret push ret mov (bad) fcomps mov cmp lahf ret pop jl in daa outsb jmp ficompl ffreep adc (bad) inc mov data16 pop movsl mov cmp scas jno inc dec sti sbb and aas fsts test setno dec outsl inc inc cmp dec sbb pop pop xchg jg,pt inc mov jg insl lahf xchg sbb push aaa jl jle fs push cmp mov pop jg mov (bad) loop push cmp sub xor jg xlat in (bad) fild loope ss jl aaa call cmpsb jno pop loop pop aas sbb ss clc and jg mov add (bad) dec jg sbb adc (bad) cmc jg adc jmp rcl mov ret pop or cmp cmc fidivr cltd int (bad) jg ja mov jg (bad) enter jns xor mov and jl cmp mov in cmp or int ja loop dec jg and rcr hlt sti cmp mov jle js inc jb adc add cmc stos cmp xchg dec or inc mov jg call fistl fwait les xchg mov scas adc and mov leave (bad) lods mov addl mov push lock or inc adc pop jg inc mov stc iret adc imulb bound jg movb sub inc fisttpll loope mov inc dec dec inc xchg jg push lcall inc push in outsl (bad) ljmp push jae add jg sub ret sub add (bad) cmc (bad) (bad) mov mov dec leave mov (bad) ret and jae push pop or ret loop in fs es push jg iret sub div sti sarl cwtl lcall add addr16 aad pop out mov push inc jg call int3 lcall mov push into mov pushf repz lret and popa cmp add dec sbb lcall add addr16 add and cld pop in outsb test pop adc loope cmp hlt jg in adc jne and jge xchg cmc mov icebp jg mov pop sbb cmp pop lods scas add cmpb arpl jle xchg fbstp dec sbb jns add jg out test icebp jo jg push (bad) fstl mov pop push add jle add inc scas dec inc dec aas push imul cmp int3 mov jg lcall scas xchg cmp jg or sbb dec cltd sti xchg fist pushf xor bound out jg jne mov mov sbb mov addr16 and bound lods cwtl lock xor js push popf mov lret and insl adc aas jne xchg daa inc es pop in sti push fldcw jns fidivrl pop movsb neg pop mov aaa outsl sahf and jg xchg (bad) shll jg and mov mov cmpsl outsb jg mov test pop push xchg insl popl jl lahf sti lock jno mov mov adc sub notl rorl sbb lahf push jno or push sub and cld xlat xchg ret dec movsb jg out dec shrb call push cmpsb xchg pop leave mov mov mov sbbb sahf xchg insb jnp jg scas mov jg ljmp jg repnz pop or push jle into mov xchg imul lahf pop out lcall pop inc xchg pusha and push xor daa dec push jne sahf movsb test push mov je scas dec int3 sub aam cmp lret loope cmp jg hlt fcmovnb cmp fidivr addr16 inc xor mov rcrl sub mov jmp push jg xchg in cmp test add push push push or inc inc ds cmp iret pop dec adc cmp xor movsl stos and fistpll out push or ds jl shrl sti aas sub ss fs popa inc xchg or fdivs repz sub jg fiadd sbb mov test test sti pushf add mov mulb xchg jl mov xor adc sub test out aaa js orb dec add mov and sbb mov (bad) pop cltd fistl out pop call test xchg dec ret outsb sahf jg push stc mov test rol aaa jg pushf sub xlat mov or adc xor ret mov jg and xchg mov mov iret (bad) cltd push push into lret pop pusha push dec cmc adc inc data16 gs add repz int sarb test push jg shrb jnp popa test dec mov jg mov push js mov insl daa pop outsb sbb cmc cld dec pop jl pop sub fild lea cmp pop lret aas loope and inc sub loopne into cli pop mov adc scas or xor jb adc fdivl pop jg add loope pushf in scas jg je inc pop notb mov in ja sti dec inc std and sbb jg adc inc xor jg in push dec mov adc dec push push jg rcrb or jp mov fisttp jg mov lcall lahf jae push mov and pop mov in jecxz dec lret inc into pop lds outsl xchg mov je jo ljmp das movq sbb hlt sti popa adc das cmp fldl in bound jg rol les (bad) js pusha cmp jnp (bad) jecxz inc or addr16 ret cli push push insl xchg inc pop jg cmp pop dec or fadds leave mov hlt or cmc mov mov adc cld dec faddl stc shr sbb pop jg icebp adc jecxz xor (bad) cmp xor sub cli int ret pushf dec dec xchg mov dec mov xchg xor jg adc inc push adc mov ficoml sbb xor mov mov lods std mov lea addl les ret imul stos data16 mov imul fwait push lock mov scas lret jmp scas dec (bad) jbe jg push pop repnz xchg sbb (bad) mov jnp lahf jg lods mov (bad) les cmp idivl call push dec cmpsl push in mov outsl mov push or pusha imul rclb and das pop enter aas inc dec mov test insb inc jge xchg in cltd dec mov cmp scas sub (bad) fnstsw (bad) arpl inc xchg jg enter jb push jg adc sbb push movq imul add sahf fldl lock sti repz test mov out push fnop fistpl pop pusha ljmp inc sbb push fadds jnp and mov inc cmc jg inc (bad) lcallw cmpsl sahf lret xor mov js jmp jg xor inc lods std pop mov loope mov lahf sub xchg jle mov addb jg pop fisttpl inc cli scas and aas xchg jnp push xor cmpsl jl repz js xchg dec push lods sbb mov jo arpl xchg mov arpl mov cmp rcrb or mov adc sbb jmp lods cli jp inc jg cmpsb xchg (bad) push cld inc mov into mov mov loope jg adc adc add test ss sbb cmpl pop scas cmp add pop and fwait mov push or ljmp loop lcall cmp leave test inc imul subb fstpt jns fisubl pusha xor mov dec daa xchg dec mov and fdivl mov jg pushf pop cld xchg and clc lret fwait sti sbb call in xor jno cmp sub jbe std out mov pop cmp adcl outsl lds (bad) cmc aam mov dec pop push dec sbb lods aas inc cmp xorl mov sbb roll idivb push dec hlt and inc inc jg pusha fstps popf addr16 dec (bad) dec (bad) push push sti iret and in dec (bad) int3 fbstp fwait cmp xor pop jg cmc fnstsw imul js icebp aaa fnstcw jp test popa jg or jne pop dec jg cltd push in mov fidiv (bad) lock loopne fisttp jge sbb loop addr16 lods dec fbstp mov or jno xchg jg aad pop xchg mov jb xchg out aaa cmp push (bad) (bad) mov std and push adc push sbb test jg je sub aad sarb sti and (bad) xchg cmp outsl pop cmpl add dec fs call lahf cmpsb in lds jg xchg pop jne (bad) fidivrl arpl out mov repz and inc ret jg mov clc xchg out adc xor icebp icebp inc test (bad) sub jg test add shrl jg push nop sbbl pushf pop and jg cmp fsin test mov mov mov or add sbb adc cmpl xchg xlat cmp jg and mov jg (bad) dec call lahf hlt jg int pop cmpsb xchg mov bound fildl dec imul inc or into jae insl loopne js pushf xchg jmp mov aaa data16 sbb xchg push call xchg pop nop xchg andb jg push repz push pop jg lods in inc sbb leave xor add data16 lret pop fdivrl adc push lcall pop xor int3 loop adc pop dec and jg sub jne std into cli mov inc jg mov in jg inc fcoms adc aas and dec mov sbb jg arpl jg in or cmc cmpl scas mov jg pop pushf adc adcl push sahf notl sti stos dec pop inc push xor mov inc pop lea xchg scas sbb mov into xor fchs sahf aas repnz outsl or jg ret xor testl lcall nop (bad) out jae mov pop rcll dec dec sahf bound (bad) jbe je pop (bad) movsl jg mov test jo dec pop call mov jg sub lahf rorb push faddl cmp pop cmpsl jg jp push mov scas dec sti inc cmp inc lods imul and sbb outsl fwait jge pop rorl (bad) pop jmp dec out adc dec pusha jg inc imul cld or dec loopne add pop inc cmp pop js fidivrl jo add aas mov dec rolb jg cmc in fs pop into mov inc xchg lahf rorl (bad) gs xor int3 jns jnp jg loopne loop and sti aam lret hlt jmp nop jg xor pop fdivrs jecxz mov jg adc pop pop jle loope neg popf sbb or cmpsl das in pop fist inc jb pop bound sub fdivs cltd test (bad) out jg cwtl lock cmp cmc mov stos in and scas lds push fistpll das jg pop clc pop add and inc dec jg lahf mov fstpt in sahf idiv and jg incb (bad) jg sbb scas jg fisub xor cmp adc jg cmp negl pop sub jg addr16 xor xchg jg sahf je sbb (bad) jno mov fcomps ret jmp adc push adc lret out push imul inc sbb cmc lret cld sub jl hlt stos add (bad) pushf jg mov push sbb es mov sbb popa mull fucomi outsl jmp jo icebp arpl lret inc inc and mov add mov adc sti pop hlt xchg cmpsl pop add sbb jg rolb dec jg dec sbb push test leave pop outsb aas cwtl pop inc insl jg into xchg and push pop lock jno and jb xchg inc test std or dec cmpsb cmp ss jge jg sar movsb inc push rcrb cld icebp xchg cwtl stos test out add and lret jg or inc stos jg mov adc (bad) pop cwtl jg rep fild push pcmpeqb push inc mov (bad) sub dec sbb jmp dec int mov jg mov sub jl popa mov sub scas adc jg dec adc aad push jg shr insl test pop mov pop (bad) lock popa cmpsl pop cmp xor data16 dec xchg mov lahf push imul jg push or jg test jne mov mov sbb faddl mov add jg lret (bad) testb jp push adc leave and xchg fldl inc mov xchg dec ret pop jg out sbb mov or pop dec sti jb mov stos jg sahf aam and sti add push sub sub (bad) push out loope outsl pop mov xchg outsl jecxz dec jb sbb repnz and xchg sbb dec jb jg lock dec cli adc imul arpl pop test lock rclb popf xor ja (bad) aaa es je jns (bad) lock add dec enter adc (bad) out jg frstor sbb push fisubl sub jg xchg mov popf mov dec imul popa jg xchg pop push in clc jg cmc dec cmpsl test pop jg les xchg mov stc mov dec adc sbb jo shl lea jg insb aas xchg stc ret push jb dec cs mov xchg mov (bad) push inc ss insl rcrb adc dec sbb or inc jp push jg xlat iret jmp inc js test outsl pushf adc jg jecxz and in jg clc mov (bad) cld xor dec leave xchg (bad) lods jle sarl out lea xor push mov (bad) jecxz,pn rclb fnstenv cmp shl or add mov (bad) popf dec sub inc insl sbbb pusha inc dec ss lea jo mov clc dec (bad) lock out lea int (bad) fdivr div or scas mov sahf dec sub das jg int xchg mulb (bad) mov fnstcw xor arpl or jg cmp fimul mov jns aas cmp rclb jnp shlb lock xchg inc fdivs cmp and push test jg aad int3 mov aaa out shll fisttpll mov xor pop jle cmp bound jo add pop pop lret jg js inc push lahf or jg xchg pop jmp cmp xor push mov jge cmp mov call loop cmp add out pop jg cwtl xlat sti pop in adcl movsl and (bad) arpl (bad) mov jg mov pop int fisttpll lock mov xor fwait push punpcklwd ja or dec jle push popa (bad) jg out mov leave scas ret movsb inc mov jg push mov fs dec push ljmp clc pop mov jae fnstcw dec test mov lret jnp jae daa jg or (bad) mov sub sarb and insl sbb mov inc (bad) xchg pop js mov add adc jg stos rorb jg cltd xchg shr cmp fs jne cmpsb sub jle cld mov repz out test jg ljmp jg mov outsb repz pop lcall arpl jg push dec jl xor sarl push (bad) mov dec and and jecxz inc cltd add stc lods popf jg shll and andl jg mov sahf push jg adc imul inc das or pop (bad) or sarb and aad sub hlt push push jg (bad) mov test out xchg je mov jg mov mov cmpsb xchg mov rcl inc jg xchg bound dec loope jg lret aas test ret push in (bad) aad add sub mov and jno popf in ja jg sbb call cli aad push lea xchg inc std xchg mov mov jp mov cmp jbe addr16 aas jae enter dec add dec add aaa stos push sbb sub stc ds insl add leave xor cli lret sub xlat jg mov mov xchg insl xor fistpll fldenv sub in jg pop mov adc push mov or push ficom dec cmc mov mov jecxz je pop (bad) jg fdivs lea (bad) fisubl aas outsb dec push repz dec in (bad) aas push add or pushf test xorl mov mov dec movl mov in jl arpl enter xchg sub je mov sub sbb sub aas (bad) or mov sbb aas inc pop push loop mov dec xchg bnd or cmpsb xchg jle pop jg addr16 in jb mov jg jmp xchg pop hlt fiadd (bad) xlat mov cli addr16 icebp iret popf jg sub adc insb (bad) cmc pushf cmp pop inc cmp or xchg fistl les js mov pop iret loop adc xchg sub pop jg mov cmp push shrb outsl ljmp cwtl int3 add jg js jno xor mov loop fcmovnbe es push push mov xchg and pusha lahf ficoml icebp push sbb cwtl jg outsl addl aad repz adc inc shr daa in lods je inc ss jg xor pop outsl mov mov pop out push push dec scas xor js dec sbb add rcrb dec xchg setbe cli jg pusha cmp shlb mov dec (bad) fnstsw sarl mov xchg arpl xor jo int adc push imul iret push aaa test scas (bad) jg shll inc jg lcall jle inc lds pop ja inc pop les (bad) dec loope dec ret pop lret loop ja jne mulb (bad) outsl jg pop xor dec stc mov les iret push pop popa push pop inc add ja enter jno pop (bad) jg or mov dec inc es arpl sub xchg sbb pop mov test mov gs adc (bad) push mov cwtl push dec pop fdivr nop fidivrl out bound mov xchg inc push aam jb test pushf jo mov cltd xor idivl jg roll push mov icebp int mov out test sbb mov sub push jg mov jg nop pushf ds jle popf jg dec dec (bad) insl xchg fisubrl movsb or jg dec ret imul ret sbb addb jp cmpsb jg out push pushw mov lea jns inc daa jecxz jno insl or clc imul adc jg jb and daa pop pop jg and mov and test popf adc pop pop pop or push hlt pushf dec inc cmpsb jg in lret aad inc loop jle push jno idivl aaa and and dec jb scas dec (bad) (bad) sub arpl jg sahf adc cli xlat popa adc push lock dec sarl xchg out ret xor push xchg inc cwtl mov ficoml sub pop insb sbb arpl push dec popa pop andb jg mov push xchg (bad) out mov into loopne leave jp jg or js inc cmp jg popf lods rclb add dec mov sub leave mov mov push adc or fnstsw mov jb gs andb inc hlt jg jne in in out xchg mov jmp add jg xchg pop or jg (bad) fidiv mov sarl jmp orl xchg aaa adc mov cli pop movsl pop cmpsb lock xlat addr16 xchg fldenv and popa scas mov aas pop sub xchg jae mov ss inc inc add inc inc fsub fidiv mov pop pop enter jb addl lcall jg pop loope lret popa adc jg repnz in fstl insl (bad) stos and cmpsl sti cmpb jl daa sbb addr16 mov xchg push lahf out pop or mov mov push out xlat jge pop sti clc inc test dec ds cmpsb pop mov lods arpl loope ficomp jg mov lods jle jp sub cli inc sbbl outsl pop jo mov pop dec addr16 mov lret imul xchg dec decb out frstor imul popa jg mov dec movl push push lods leave dec add jg addr16 push mov jnp jmp mov xor shr jg fnstenv js and outsl addl xchg test mov push mov xor and imul cli or mov (bad) xor mov dec push sbb loop jecxz mov xchg jg xlat jnp pop push jg mov cmp add test xchg pop jg push pop mov outsl stc jb fs pop pusha pop mov fldl out in sar mov cmp insb inc jecxz ret inc loopne (bad) out cmpsl pop sti sub mov adc cltd xchg enter pop mov aaa sahf cmp inc movsb pop ljmp or (bad) cmp cmpsl aam clc cmp dec sub jg roll lret je mov sub aaa jg loop test lock sbb xchg mov push inc fs daa cli shr aas arpl aaa call jp pop pop (bad) xor cmp fs scas xchg mov inc push fdivrl pop xchg mov cmpsb jg push jmp xchg jg test jp jg inc andl inc das and mov pop pop je clc (bad) mov mov sub daa fdivrl lods jg xchg adc sbb data16 push ss or inc mov add dec cmpsb push (bad) add pop stc call and xchg imul ljmp jne int3 jae jg lret cmpsl adc xchg jg dec inc lea imul mov inc int xor (bad) repnz sbbl jns mov mov jg clc repz cmp jl cld ds xor jg mov push and cmp jg (bad) outsl lahf lea fisubrl test cmpsb je scas jnp xor int3 pop push xor mov outsb inc jg push xchg cmp jp mov jg fldt pop ljmp or call test xor (bad) int3 jg in idiv or lret mov cmp pop sbb out imul sub inc xchg mov ss (bad) jbe mov enter push pop loop je mov rol ljmp rcrb jg adc pop and jb mov pop cmp cmp dec in jg jmp pop das jg lcall jg sti les jg call popa loop clc scas xchg dec cmp (bad) mov mov cmpsl cld jg into and arpl push pop dec adc adc sarb roll pop dec adc imul jmp not sbb mov sbb jo jg push cld repnz loopne outsb cmp push sbb xlat and jg pop cmp sahf pop or jg pusha out cli mov mov jg fnsave stos std addr16 add jno nop rcrb fmull cmp outsl adc popa out jg in and jg mov shrb jg sub adc jmp test jg pop dec or mov cmp jno jb xor rclb and push jg mov push cli jg ret faddl jp inc std arpl mov pop push lods aas test fcmovnu stos addb leave aaa nop ljmp (bad) mov pop aas inc push push stos sti in xchg cmp jb test and int3 mov ds add cmpb mov ja cmp push cld push fs out test (bad) mull mov xchg mov inc dec mov adc mov scas xor mov inc jb int fdivrs push das sub fist into mov sub jg dec mov fldl pop dec gs xor jg pop add jl aaa jg mov cmp mov jne loop inc inc je cmpl pop test aas jg insb jecxz std pop inc xor cmpsb push icebp jg push jae jle ljmp sub mov outsl sbb cmc sbb xchg jne lahf sbb movsb cmpsb push mov cmpsl mov xlat or mov je (bad) jg leave iret in dec and jg (bad) mov xor xchg sahf jnp call les jp sbb xor lock jecxz mov cli in les (bad) stos add fnstcw jg ds into dec idivl add mov mov mov int3 cmp cmp aad sbb and push (bad) xchg dec dec add movsb mov jg scas pop lea les jecxz jp fdivr ret inc negl jno lcall jb jg aad pop imul ret sti test mov nop (bad) loopne jg sbb sub stc pop pop mov mov lea ja sti xchg enter lea mov mov jg sti fldenv cmp mov repnz mov addr16 loopne (bad) ss les ret daa sub sub pushf sbb jle lods fstps or js jb mov xlat cmp dec xchg dec int3 fs (bad) pop ljmp push jae pop cmp lret popa leave aas addr16 or out in in je and jg sti pop fstl xor imul jg test mov (bad) xor dec push jg mov push inc pop jno jp mov inc mov sbbb and idivl inc das sub sbb sbb pop dec cld fs cmpsl xchg scas jg fcoms mov jg dec jle stos mov push mov xchg mov outsl push frstor lahf iret ss jg sbb lock jg push sub dec sub jg cmp pop jmp or lahf les mov mov push inc inc pop adc and das inc inc lret jg add cli mov ljmp outsl mov jnp fist arpl test push push inc pop sarb into adc jg test and xor inc mov mov out jg,pn pop lahf jo jg sub loope addl push addr16 and sti (bad) dec jne mov jg fdivrl cmp pop mov add lahf and jmp xchg pop sbb adc aad shrl mov and pop jnp shll mov cmpsb dec cmp stc inc xor ljmp stos xlat outsl adc test xor cmp pushf ja int3 jns jg pushf fisubrl inc mov imull (bad) mov je jg jo mov cmp (bad) movsb mov dec cltd sbb ret push mov aas aaa mov xor mov jae jno push inc loop (bad) or rorb cmpsb aas mov cmpsl and out push (bad) pop fadds jg mov pop jno enter inc ds imul inc and jg adc jae dec sub ljmp insl mov fdivl push xchg pop mov jg mov int3 outsl sub test adc (bad) pop js push sbb jg inc flds jg fs daa pusha ljmp shr xor (bad) pop fadd sbb mov repz inc roll in jg sahf cwtl push es sbb cmp lea bound shr or aas mov cmp pop xchg mov cltd fcmovnu mov sti rcrl pop repz stc mov mov test bound jg popf in les push test cmp adc inc mov mov pop fmull xchg xchg jg inc scas negl mov cld cmp cmp adc xchg xor jg shll jns or jg jle lock push inc jg mov pushf xchg mov add dec xor jg popf test (bad) add fsts mov orl jmp jg out pop cld cltd add jg mov fstpt jnp aas adc or add mov lret xor fstpt mov xor jg cmp pop jecxz mov mov leave inc dec jbe pusha jg andl jg into arpl clts jmp xchg xchg adc (bad) (bad) aam cmp movsb mov lds xchg jg xor fs movsl stos mov push aad sub jg aas popf les inc add sbb nop stos jg xchg fnop addr16 sbb jns pop pop mov cld jg inc lahf xor shlb scas bound push mov pushf and arpl jg jnp push jg outsb cwtl xchg lahf jp jns ret mov arpl adc xor mov adc movsb addr16 fucomp loope xchg and pop xchg jg cltd adc (bad) loopne jg in lds and sub inc mov out test stc movsb mov lret jg movsl bound enter movsb inc and pop (bad) mov jmp cmp fadd jae mov xchg in subl lret mov push ja shrl cwtl cmpl lcall jg test push in or imul loop sbb ret pop out sahf inc jne dec or xchg adc or in loop xor adc jg mov movsl jg out sbb push cli jg mov cmp fistp and add rcrb and pusha mov addr16 jnp decb mov mov imul (bad) mov popa jg xchg mov jb mov jecxz xchg add cld out sbb sbb out cmp add mov ja cli sub jns stc idivb or dec hlt aad mov loop mov mov push fisttpll sub stos mov testl sub test js fpatan outsl adc dec aas cwtl add lea pop lods mov jg and call mov loopne sbb jg mov aaa sti jg jp sub jg cld sbbl jl test mov (bad) lahf (bad) lret and dec sti ss mov xchg std decl jle je insb or and dec mov mov inc inc adc sbb dec inc jg pusha cmp iret imul mov lret leave pop push jg test jecxz (bad) decb ljmp in cmp mov lods into jb jg dec adc sti jnp push jg dec (bad) out lea sub push xchg push orl fidivl aas mov (bad) cmpsl negb outsl push mov inc in mov and pop enter dec adc out jg loope pop cmpsl push mov push loopne icebp or mov aaa addr16 xchg into mov test xchg push jg sbb pop sub aam inc pop push and jp loopne mov imul adc cmpsl sbb sbb lods orl sarl in aas jnp pushf aas mov js test dec mov mov mov (bad) jg lock lods mov cs jg divl (bad) ds push ror push movd test sbb push pushf (bad) fwait push aaa jg cmp cmp xlat ljmp movsb scas sarl loop sbbb xchg cli jle push hlt jle pop pushf (bad) fstpt adc pop fist sub pop mov pop push cmp pusha andl sub xchg sahf xchg rcrb add test fdivrl or inc push jg js divl leave xchg xchg jg in inc sahf scas in mov push dec mov sarl ja (bad) sub lock mov mov and mov pop addr16 lods or dec (bad) cltd or clc sti js in lret jg pop sub movsl loope adcl dec adc lods dec pusha adc and popf cmp pop insl jp dec xchg add cltd mov sub pop mov (bad) mov adc push mov lcall sarl pop movsl pop ss dec sub pop int out mov (bad) das pop add cmp pop and sar rcrl (bad) mov pminsw mov mov jg xchg std push test pusha or adc lock jg adc add mov mov or sbbl jg or xchg add cmp std ret sahf jl dec add jo mov cmp loopne es (bad) in jg test push daa out ja iret dec add cmpl cmp fdivrs cmp hlt sbb lods daa mov je das mov ret lcall cmpsl push rorb mov mov ss arpl cltd add mov lea or popf faddp inc movsl imul std jb fwait outsl jge comiss arpl dec adc mov (bad) leave push mov mov push fwait mov dec jecxz,pt subl in push jg sbb cmp addr16 fwait stc dec jle or jg jge,pn jnp outsb cli test lret pop push bound daa jg xchg aad lods and les not add sbb (bad) ljmp and add jo cmc mov jge bound into mov sbb mov notb lea ret mov outsb push lahf scas test mov ja out js adc inc or jg dec jmp cmpsl stc xor sarb sub insb sub fildl pop adc mov lock arpl xchg aas enter clc insb mov dec leave sbb movsb js lods xchg add lock mov outsl sub movsb cmp js push xchg mov adc add ret sahf mov or mov out jb iret jl inc xor cltd cmp cs jg movsb cmpsl lock mov sbb fwait xchg cmp jg shrb pop es sub mov sub out xchg jg,pn dec xchg cwtl imul jg ss in jmp ds pop jge addr16 inc testl jb sub xor (bad) call and adc popa jne inc push jg mov inc test adc inc add mov aas push adc jg rcll imul mov jg mov (bad) push arpl pop imulb push jns jg or jl (bad) cli or fiaddl aas cmp into xor xor sahf xor xor or test inc mov mov dec std mov jae mov jns jl jae add pop mov scas outsl jle push jg aaa arpl jp ret adc fadds cltd adc jg xchg jl push xor aam (bad) fmuls (bad) mov pop jnp xchg vmovdqu lods adc test xorb ja sub mov or adc jbe jg js dec ficoml adc xchg (bad) dec sbb bound aas adc dec and out (bad) mov roll pop or mov (bad) sarl rorb mov jg das inc sti mov xchg xchg fxam popa jg dec inc fsts push outsb sbb into pop inc (bad) mov insb idivl cli jo gs dec sbb jle fs inc std mov jg pop mov scas jg mov mov jg enter mov mov call mov xor pop mov imul pop sub xchg in (bad) push add imul and mov mov push mov mov sub xor jg mov push jg movsb push cmp inc mov push movsl repnz aam loopne into mov mov sbb outsl pop or cmp mov dec mov inc mov mov fs jecxz xchg cmp and push fidivr push imul mov mov loop mov addr16 mov xchg sbb test stos xor mov aas movl mov pop pop mov pushf shlb xor adc imul xchg xchg outsl lahf pop dec popa addr16 push inc mov push scas add cmc mov add mov xchg ja popa push pop dec inc mov arpl in loope and jg push mov sub ss jmp scas inc faddp jg push (bad) or adc jg lret int3 push arpl add push popf mov lret pop xor xchg jp call inc or (bad) jno jb mov test clc jae mov mov cli ljmp mov movsb popf clc inc popf roll inc mov lds lcall cmp lock repz pop xchg push cmp dec dec push jae cmp jle adc movsl dec test jno jg inc push mov aas popa adc mov lock and xor add test (bad) pusha jb and cmp fildll sbb cmp sub inc dec fsubp ljmp add cmp mov jg cmp or push pusha daa jg aam or jmp pop lods jb test jg movsb (bad) addr16 pusha xchg mov repz push push dec cmp and jg pusha or rclb add xchg inc dec fcmovbe and cltd lock add xchg dec jbe popf jp rcll xchg mov xor sbb add leave dec mov inc pop jecxz daa jg sub loop mov jb push xor mov mov sub pushf ss mov mov cwtl fwait or add inc rcll jae push inc pop xor or mov (bad) sbb into cmp dec jg inc and push mov inc insb jg or dec add cmp lahf mov sub pop sbb jg pop rcrb jg jno jo xlat sbb inc mov and jg test stos popa pop jg je out cs into sbb and bound push sarb fdivrl pop test addr16 dec jg push sub or cmc add lods std test (bad) xor insl xor ret adc in in jge inc hlt pop fsubs cwtl mov (bad) ja jg fldt aam stos sbb pusha mov insb pop jg sub jp jg std mov je cmpsl or repnz movsb fisub aaa jg mov fstl sub mov or push pop add mov xchg and mov cmp ja mov pop inc dec pusha or fistpll in ret mov push mov mov dec out inc paddusb jg pop rcrl xchg fsubrp bound push incl imul fnstcw xchg je inc mov fisttpl jg (bad) aad inc and push loopne jg jl pop ljmp mov add loope jae pop adcl cli pop test outsb adc cld mov rol fisubl pop mov dec inc out mov test mov addr16 outsl mov mov aam xor stos jg ret in jo push aas test cmp imul mov mov sbb xor mov inc inc jg or jecxz dec sti xor mov cmp pop out and popa xchg pop cmpl dec cli jae push mov jo movsl test int3 sub mov mov jno inc push xorb mov in negl scas adc or call outsl (bad) pop mov fscale and lock (bad) pop add xchg jg mov pushf movsb jnp xlat jg mov mov jns xor mov fs xor mov mov xor sub pop lret jg xchg fistl jg es xor jns out aas pop jmp pop and pop lock in add in xchg rcl fcmove es adc fstps mov sub mov lahf mov mov ret ret xchg out fcoml jnp dec outsb cmpsb dec jg out out les repz in mov sti mov push pop mov add or dec aaa jg cs sbb xlat jg xchg mov jae sub jg push mov mov pop pop out cmp mov icebp sbb out seto push movsb pop add xor push jae xchg sbb fstpt ficompl out lret or xor push sti xchg mov ret test pop push ja les push push and addl fidivl sub or stos pop lock pop out ss pop push fs int movsb adc xor ja aad push mov mov addb outsb cmc mov lret pop loop mov fcomps negb jnp ljmp ja rorb outsl jg testb xchg fs loope inc imul lcall mov dec cs aad mov adcl xor fstps jp aaa icebp outsb jg inc (bad) mov inc mov push bound pop (bad) movsb jp push push cmp push mov popa fldcw xor fdivl inc dec sarb mov push cld mov pop aas dec mov inc sbb mov push in sbb push jg adc cmp pop ljmp sub fisubrl jg cmp jecxz sub sbb pop pop cwtl movsb ja jle aas jg push lods xor mov push add push hlt mov jg lahf add xchg mov (bad) jg iret mov fildll mov lret dec inc imul add enter push jg loopne add pusha jg addl xchg sti daa pop jmp add mov xchg int3 jmp fbld mov imul call or mov pushf xor jns jg outsb loope dec inc aaa or add fimull xor aad adc push jg stos test adc js and (bad) es lahf dec or daa cmp adcb inc mov test jb mov or or shrl and mov add xchg ljmp cmpsb mov lret ret inc inc out mov adc push into std inc pop mov lock cld popf mov push adc sub movsl push jo (bad) dec dec int push std jg fimul shrl pop hlt jg aam fbstp jl addr16 mov in push mov rclb mov lcall ja pushf ret push mov jbe cld fldcw jg push ljmp in cltd call jecxz mov mov dec mov sbb iret push jg xor jg lock pop lods lods cmpsb mov xchg pop aad mov cmp aas ret mov test dec hlt inc xchg (bad) jg push ret or push and hlt arpl jb pop pop mov inc jg out loop pusha xchg adc imul dec push add pop mov mov daa lret imul data16 mov xor add testl clc or sub stc js dec mov xor arpl mov stos xchg lcall aad dec inc fwait jg out pop sahf aam push jo xchg pop scas mov ret push es jle imul lock inc adc lahf dec fbld mov xorl jg jp pusha sarb jg outsb jecxz mov xchg sbb jp popf inc mov aas mov or mov hlt cltd dec push push dec (bad) idivl add jg lods loopne cmpsl loop jg aas add scas mov cli mov jg popa dec (bad) mov rcrl dec cs data16 dec cmpl sub sbb mov sbb pop pop lret sti dec jg insl lcall jb,pt pusha popa push addr16 insb (bad) jg loope mov cld xchg adc jo push dec dec mov les mov mov xchg lret stos cmp mov jo bound push fmul dec shr mov mov xor dec jg xchg ja test push xchg sti test cmp addr16 stos iret roll div push or adcl rol mov into add xchg lret arpl loop sub icebp xchg inc and cmc and fisttpl mov sarl test inc into aas jne jmp dec pop sub test out sahf rclb mov dec push jne es mov outsl push mov int pushf loop push sub lret pusha ret loopne cli cmp orl xor xchg ljmp call aad jg add stc arpl adc mov test outsl mov pop in mull mov aas jle xchg loopne push pusha daa jg jns cwtl (bad) pop jmp lahf jb xchg jo dec arpl push enter push inc stos js mov jmp xor jl aam pop repz sarb mov mov or imul sbb aas in cmp xchg lahf jg (bad) xchg and add imul outsl push jg inc dec popa stos cmp iret xor fisttpll clc mov test aas jae sbb mov aas sbb shrl cmp mov sbb ljmp xchg orb bound fdivl fstpl in jg and sub in cmp xor jg lahf dec idivl dec scas out icebp lcall mov jg sahf loope or mov std movsl (bad) fs jle lret je dec test jl aas (bad) pushl pop enter movsb out jecxz fptan jg bound add push push in iret cmpl push (bad) js xor jg xchg add dec test mov in imul sbb inc pop outsl push nop xchg dec dec jl push (bad) mull sarl mov ljmp cmpb int3 pop jge push aas cmpsb add or dec enter ds aas (bad) pop pop clc mov push jg dec (bad) lea and insl or sub lcall mov xchg mov insb lea (bad) push jg cmp aad pop lret cltd mov jg jl stc movq add xor dec ret sti (bad) idivl rorb jne jl inc jae add inc cmp pop sahf sub outsb lock pop popf sbb jg jbe cwtl test ret pop and gs mov out sti inc (bad) in es add call mov push xor inc lret mov sub mov in or mov fcoms jg imul pushf (bad) sub pop inc push jae test lahf push stc push or cli xchg enter lea (bad) js mov jg fs mov stos ljmp loope cmpsl xchg pop fwait test out outsl in and hlt adc stos pop sbb outsb aam inc jo push movb stos insl imul lods push insb push cmpsl jg mov cmp orl pop or push mov pop aas mov loop inc test jg mov push negb adc (bad) adc insl ljmp cltd xor cltd adc loopne call and and cmp jb inc test lock jg adc jg js inc popf loop xchg jg push gs mov push mov jae jbe dec mov je inc jp rorb add in lahf faddp dec push inc mov jg inc add clc jl push mov imul addr16 xor call cli mov dec scas lock in lcall push fdivrs cmp scas jg rcll rcrl xchg mov fnstenv jg (bad) cmp jae jmp loope lock or jg icebp mov jg,pt fisttpl jp cmp jecxz mov jno jae pushf loope jg xor xchg push in xchg imul or jmp dec xchg adc imul jg loope ljmp lcall mov inc pop cltd in in inc inc mov jg jne mov cmpsb jg lcall push les lcall xlat sbb fiaddl outsb sti mov inc push call (bad) repz enter out aad out mov mov cli mov outsb test push mov add clc leave inc sbb jg mov popf fsubl inc mov mov pop cmp scas es rcr int3 mov inc sbb jns cmp jge ss leave adc mov pop jmp lods jg push cli inc lock ffreep xchg mov and imul cmp loop push fldl jno jp inc pop sbb jg sub jo jg outsb (bad) divl scas fidivr das shr sbb cmp lcall jne mov cmp lret mov (bad) pop fdivs lods lahf xchg adcl jg enter mov outsl sub cwtl inc xchg inc iret jg out (bad) int movsb pop jg int3 inc stc lds mov cmp cs je fistpll (bad) and adc mov pop sbb stos jg loope jo shrl incb cvtdq2ps int dec mov jg (bad) cmc inc mov inc into pusha add sub test lahf jnp je ja hlt inc cs cmp loopne shlb xchg imul sub jg lahf test leave cmp aas mov dec mov inc pop mov dec (bad) mov les xchg out adc jg out inc cltd mov (bad) ja in adc adc std jb mov stos jg mov mov jg sti xlat lds sbb jg inc jae out (bad) dec jg push mov cmp xchg loop push xchg dec mov inc outsl stc lret mov in fiadd enter insb cmp xchg fstpt es jb std inc mov jg sub sti push icebp fistpll sbb sbb jp movq jl mov in mov frstor push adc int sub or xlat testb jg bnd and xor jg loopne,pn out lret ret xchg sti js movq mov dec jg cli test push ja mov (bad) fcom or push incl inc mov aam sbb sahf (bad) push xlat mov imul aas push aam add iret adc cmp in enter and (bad) aas jg jnp mov pop leave mov insl jle fidivr dec int xchg inc xor call aas add xor imul aad jae cmp or fnsave popa jg test lcall jg sub (bad) jns cwtl xor pop mov (bad) ja insl jg movsl (bad) repnz pop add pop fnop push sub sbb fadd idivl xor or jg std cli pop lret mov xor int adc idivl jno or les in sub jg daa sub jne push jns lods xor ljmp int3 cmp jae imul add jno jg or cmp (bad) imul jg sub cmp popf enter roll rolb fldl2e sahf fcoml subb inc mov sub push jno lret jo cmc rcrl movsl and sbb sbb roll adc jg fisubrl data16 lods (bad) jg fldt aas jp inc jnp js mov mov xor jg or cwtl icebp jne (bad) clc cltd add jg push outsb rcl push iret mov not inc jle dec bound mov adc lret jg imul pusha jg add es or popf outsl push test pop jg fwait lods push adc arpl fmul movups jg sarb loop ret inc inc sub jno lock loope and ja sbb shrb push or icebp jle stos lock mov inc loop test mov dec jg fcmovnbe mov outsb repz xchg inc jg inc (bad) setl mov fisubrl leave pop xor mov push (bad) sbb pusha fstpt stos hlt xchg ret adc addr16 sub cwtl jg xchg inc insl add sub sub pushf push aas push rcll xchg dec jae les dec mov inc aad jg push add mov jg int adc jg pushf sub popa mov pusha jg adc mov jg sub xchg frstor xor lds scas mov or xchg decl jg movsl push loopne push mov inc dec decl jg popf fldenv jne cmp std addr16 ljmp (bad) dec out dec int3 jg outsl sti mov sub xchg jg (bad) in out dec cltd (bad) outsb push add sub or xchg jg movsl (bad) lods mov bound cwtl jp or adc mov fnstenv xchg sub jg into stc jns daa mov cmp mov jecxz add jae,pn je dec xchg lahf sub movb dec sub shlb xor fwait xchg jg jmp xchg call das jg jns ljmp and lahf xor les in xchg popa stos xor or std sub roll inc dec jae cmp negb jg lods xor iret mov fimull dec sahf js arpl jg mov jg sub idivl movsl add inc and xlat cmp push test movsb jg aam fninit jns jge mul (bad) mov push mov adc movsl bound stc jle jns dec std inc icebp test mov enter push jg out adc sbb cmp (bad) js jg dec and mov mov sarl push stos aas out pop and xchg push arpl lcall insb movsl out jns pop in pop xchg fs xchg mov or sahf mov sti xchg add fistp inc push pop mov lcall inc out jp js gs pop popf lcall pop scas mov cwtl and pop inc dec or fmul ja push push sahf jg js lods cmp data16 jg out xorb jb lret out fdivr out jg sbb mov push pop adc iret pop aas or mov repnz insl bound mov pop push mull or aam fisttpl dec dec jg pop in das cwtl xchg or not mov inc lds in mov push mov adc (bad) and cmp movsl ficompl pop pop notb mov jmp movq xor lcall fdivrl bound jae repz adc mov addr16 sarb fwait mov sub cltd (bad) mov (bad) jns xchg mov push data16 repz jg sub inc or inc sti enter push cmp aad in dec sbb push mov mov pop (bad) jp divl cmp iret jge (bad) pop jg insb pop jle pop out xor call xchg inc jg add add inc sbb out (bad) sti jg inc pop arpl rorb sbb dec sub jg jl add adc mov lods test and or xorl ss call jg dec mov repnz imul std push scas adc jg ljmp jg sbb cmp in jbe dec and inc jno fisttp cmp pop xchg jg xchg loopne jg mov ror jg xor pop mov sbb or into cmp (bad) sahf sub lds ret sbb dec aam mov jg or addr16 adc jg inc lret stc or addl fstpt lds imul jg jae insb add push sti add push sbb add or in aad or imulb mov push or mov insl mov test push jg mov pop aam jne xchg dec jae sub cs pusha mov mov xchg adc testb sbbl fidivr and or mov mov xchg into xchg insb and mov ret pop add bound int3 jg xchg add fstpt repnz popa pop lds jg inc push add aam insb aas imul jle add ja push aas ljmp arpl sbb mov xor sbb aad sbb dec pushf push xchg iret sub xchg or dec dec stc rcrb adc mov mov out leave lods xchg cmc push sti dec dec aad in mov mov data16 xorb mov or arpl rorl shrb dec push insl lret mov les cmc fmul dec sbb jmp pop push adc mov or jb sti mov or cs lret mov les sub jg push cmp call jg xchg mov out dec and stc (bad) pop dec rolb mov mov scas hlt cli sahf lcall stos sbb out mov cs inc add lods mov push jmp jae imul rcr mulb mov sbb mov mov aam lahf pop or cmp call fist jg sub push mov or add mov cmpsl mov rcl lret cmp dec pop (bad) pushf mov and push cmp jg and call fldt imul leave jge jmp outsb mov mul add inc xor cmpsl xchg mov sar dec cmpb jns pop imul sarl and jg test les xchg (bad) xor xchg lcall test ss je test mov inc pusha sbb add inc gs dec pop dec push js jg adc dec mov shll or dec jno xchg jg sub aas xchg push insl sti sub jg fldl mov jne sub mov stos sub sti and pop scas jg into inc lcall adc push jg shlb xchg jg aad cmp sub bound jg into pop fwait push lahf insl adc in push pop lret jp fwait loopne jg out ffreep ret jg inc mov pop xor std push loop adc iret xchg jg mov or sub addr16 dec inc push jg loope jo rcll inc jl mov jg or xor mov pop lods stc push sti jno sbb adc mov jg sbb mov das jns lahf lcall xor (bad) bound (bad) sbbl mov in jg out and jg jl cmp iret int mov jmp les jnp pop popa mov mov xchg pop jg and arpl in cmp jg adcl push sbb cmp mov inc les inc push jg cmp mov (bad) aad or jg pop lcall lds mov mov call loope das cltd jg clc loopne out pushf fnstcw lods lds dec rcll popf mov cmpsb add jg mov push sti and std jg sbb ss cs dec push sarb inc call mov mov add repnz pop adc inc addr16 cmp es mov cmpsl vpmulhuw loop ret mov jg test cmpsl mov xlat nop jg aas cmp jl jg out push adc jbe jmp push jns popf mov addr16 idiv push movq movsb sbb or xlat inc jno cmp (bad) lock mov inc (bad) xchg (bad) inc nop dec jg xor rcrl movl daa inc ljmp xor pop or jg sbb (bad) jg xchg xchg cmp lea loope jg inc push mov jg add sub mov mov dec (bad) pop in jns mov dec sbb sub push lahf insb mov jg aad mov jg pushf mov jbe jne loope mov lret mov les xchg sub outsl sti mov xlat sub (bad) (bad) sbb clc ljmp mov je jb repnz sub cltd jns add aas and and push jbe pop sbb mov sbb mov jg inc lods daa fimull mov lds cmpl test mov sbb lods jg movsb push in (bad) push call jg lret repz xchg aas push je lods dec stos ret inc test jg sub pop jno and cld out and jge shrb adc lock xor test stos pop std pop dec mov (bad) jg lea jno cli in lret inc pop test into fwait mov and push inc jge push inc jg movsb test lret pop jg and aas jg std in fldl push xor push sbb mov fucomip mov fwait jg movsb xchg jo addl pop stos inc cld adc mov inc and repnz test mov pop fsubl dec mov mull push cmpsb dec push mov nop push clc imul sarl adc pop jg stos sbb fildll (bad) mov push shrb xor inc mov mov pusha mov lret fcomps jg (bad) inc lods js into jg jmp cld test xor mov jp sub push sbb lret and stos (bad) ja jle add jg rcrb out mov push sub imul mov and les out add jg pop sbb cmp mov mov jge add xchg hlt icebp out mov out (bad) inc lahf dec fnstenv mov sbb xchg arpl jg addb (bad) push lods jbe call roll in loop cmpsb mov cmp pop fdivrl xchg js xor cmp jbe test pop or inc jg cs in pushf inc test enter adc mov jb pop rolb fidivr cmc movsl dec inc push clc cli jg aad dec or xor mov cmc adc scas ljmp mov jno cmp add imul mov add scas xor cwtl jg icebp push mov add jg gs into cltd (bad) mov fcoms jle xor xchg pop inc adc dec in cwtl dec aaa enter stos test (bad) add adc push cmp aas or test cld gs or (bad) sbbl inc jg movsl push lods jle xchg jg dec sti mov inc cmp fsubrl dec dec mov jp sahf pop sbb push xor and arpl jg daa aaa cmc mov es push (bad) jg data16 movsb movsl inc jg lahf xchg xchg imul jg dec inc das mov or icebp jg and pop scas cli cmp (bad) jmp popf std inc jg loopne rorl mov popf pop subb jp lods mov jle cmp mov inc dec je aam push mov in add ja push fwait xchg jg adc add mov insb xchg jmp lret pop in dec mov mov mov push fnstcw mov out and pop cld call jmp inc mov call mov pop push lods push iret out jg inc fimull add xor das mov (bad) je outsb out loopne std inc sub sub sub inc lahf fcom push loope and jg popa inc mov ficomp jg mov add inc out xchg stos mov jg sub pop cltd dec mov cmp in xlat das jl and lret or push mov lahf mov cmc sarb test ja xor xor jb cli mov repnz sahf testl mov lcall movsb clc push fcompl popa sbb jae int3 pop add push xchg lret (bad) fwait or pop jle out dec int jg add andl inc adc adc mov pushf lahf jg ret fnstcw sub add dec outsl fs arpl pop icebp pop mov jmp aam daa jmp jg stc arpl es inc cmpsl js mov pusha cmp enter mov sbb mov pop testl jg lret or (bad) icebp int3 gs shll adc dec mov out ret dec outsb cld mov pop sub pop rcll mov jg loopne push jb js jg and out out fnstsw sub outsb adc pop or jl adc jo jp push inc add jnp cmp fild mov xchg pop adc mov aas out and aaa cmpsl sub out cmp cmpsb mov cld stc fcoml adc inc push lods mull outsl mov pop jg movsb loopne and and sub fistl or adc test dec mov jg push jecxz ret insl outsb fsub (bad) mov popa cmpl fwait orl daa jg int stos xlat ficom adc test sub push push jg jge lods in add cmp xchg jmp jnp lea dec lret pop push or (bad) jo add adc xor pop movsl sti leave scas test aaa out inc in xchg and push pop push pushf jg xchg xor jg clc test popf lahf ss jb mov xchg jg in scas mov pushf test xchg arpl cmp in mov fistpll (bad) mov push iret jl xchg jg xlat sub jg and int3 cmpl pushf das mov cwtl lock stos inc and outsl xchg cmpsl cli mov enter xchg and sub and mov jg xchg sti cs add jbe dec js jg jp and and cmpb push out jmp insb jg add adc jg or cmp pushf incb dec xchg scas xchg xlat pop jg fdivs je in inc push mov pop dec jae fmuls jg aad popa inc push das mov loop pop std sahf into push mov dec add inc loope xchg mov cs inc insl jg repnz adc adc loop mov mov push mov insl ja hlt mov jg ret add push ss fwait jg inc psrld ret arpl xchg cli in lcall cmp sbb sti (bad) fs rcrb mov mov nop mov push outsl jp lock jg (bad) aaa sbb aas pop dec xchg adc and (bad) mov cmp xchg inc std jno push pop mov xor cs add cmpsl dec mov movsb aam outsl sub xor sbb clc test ret imulb sarb jecxz add dec jae fcomps outsl mov push stos inc (bad) push gs sbb imul aas push out or pop sbb cmp pushf js lcall ja rolb into loope jg cmpsl les jmp jnp pop mov xchg das jmp pop popa cmp pop movsl jg sbb or std in inc pusha jg push mov fdivr jb aas sub xchg dec dec (bad) jae das fstps xchg jo or hlt sbb cmp mov (bad) aam sti dec sbb int cmp sbb push mov jg and dec inc aas cmp adc jbe ffreep popf pop sub jno jg add sbb xchg lcall xchg jg adc idivl jo sub ret inc fwait or aaa stc xchg fs xchg mov inc repz sub mov sub add xchg mov push faddp je int3 dec dec sbb lcall mov scas jge or push decl jo and inc mov int3 aas in loopne test dec sahf outsb jg mov xchg ret push lods popa test push push mov (bad) sarl ds push adc fdivrl jmp popa mov (bad) xor jne cmp leave aaa shrl pop ljmp mov jg mov jbe jno xchg xchg rcrb mov inc mov mov pop sub add lahf and dec dec mov (bad) jg push pop mov mov pop cmpl popa cmpsl jg inc data16 sahf jnp jg movl adc stos lahf pushl test stos (bad) out xchg sti pop push fs mov hlt mov jl outsb jge sti xchg in xchg pop insl lret popf nop jg (bad) daa es mov lret push cmpsl jg and pop verr or pop fnsave in push jg sub and dec pop scas mov fucomp jg faddp push xor adc insb sbb or xor dec cmpsb fs stos stos dec mov xchg ret pop fdivrs ja nop test sarl je pop jmp int sbb mov insb pop arpl in data16 dec jg pop in test mov cmpsl sbb scas jg xor int aad adc dec imul jb dec xor lods pop lret jg cmp xchg mov xor pusha das dec scas enter mov clc sbb fimull jge jle pop dec cmp iret outsl mov mov lds icebp imulb jg sarb mov das icebp pop ds ja fdivrs setae jg in fiaddl aas mov fnstenv mov pushf rorl into mov mov imul (bad) dec (bad) scas xor mov mov jbe jmp popa iret loopne pop jge mov hlt insl divl (bad) daa outsb jg mov lods bound jb aas jge js lods jo aaa fmuls cmp jae push test aad fadds js mov xchg push sub xchg lea jg inc jb,pt lcall ja pop inc (bad) mov lcall mov loopne fs pop idivb mov loop jl push jns rolb mov insb inc xor call jg loope jmp aas mov push or in lahf inc addr16 jg or sbb sub dec mov sbb mov push jo out push mov push dec (bad) loopne rcrl notl dec pop ffree lods xchg setno outsl test jbe fstpt (bad) in push insb loopne cli or mov push je stos inc (bad) mov or test shrl pop mov in orl mov push sub pop imul (bad) cs mov arpl xchg jg xor and fsubl jg mov outsb mov in mov fs mov push (bad) adc inc repnz nop push in les add in pop aam cwtl movl daa jae mov pop ret mov insb pop adc inc mov mov sahf jge inc pop jno repnz fistpll shlb mov mov xlat js les popa add ljmp mov out dec idivl cli repnz incb loop outsl jne (bad) mov scas dec mov push jg inc test sub cmp mov jg pop test lea adc cmpsb sbb push in sarb aad (bad) dec jecxz sbb dec mov jg negb inc (bad) jbe mov dec adc and lretw clc or js mov lods jp mov (bad) insl jg cmc aas sbb xor cmp and cmc push dec in jae xchg mov ficomp inc loop pushf shrl sbb popa push add add movsb jg stos adc cmpb add push imul push cmpsb or jg mov incl dec dec je cmpsb jge push pop daa dec xor pop sbb add xor jne orl shll pop aas pop fdivrl sub sub loopne mov xor aas aad adc aas into xchg dec scas loop rorb cmp das xchg jae cmpl and inc lock pop adc jg xor sub loop jg mov in jg mov push mov cmpl bound imul mov (bad) push pop mov sub cmp insl jmp leave mov mov lret pop cwtl dec mov mov mov jb inc iret or inc add jne and pop pop cmpsb jg in scas (bad) (bad) dec cmp dec std jne xchg sbb jg lahf push repnz jl push mov sti dec dec dec mov ss insb nop ds cmpb or mov inc sar iret addl dec or pushf push insb lret xor les out mov outsb mov (bad) stos lds xchg cmpsb jo lret ljmp mov push cld bnd push adc mov push sarb fs adc add pop and div mov push insb sbb jb and jg xor cmp jg loopne or cs call inc aad enter pop or ret dec push mov jecxz loop sahf test insl lock ret inc fwait mov aam xchg jg,pt lcall (bad) jns add stc xchg jo jg scas fisubr mov ffree aas decb jg mov and mov lret jae out push push xchg xor sub or fiadd push jb dec js mov outsl mov cmpb sti std out movsb xor jg sbb in jg shll sahf pop test or push lods (bad) mov pop jg add push jg and jb lods xchg or out push sub or cmpsl mov xchg jnp bound dec jg inc cli cmp jg xchg mov mov push pop dec push jne (bad) cmc test jb xchg inc out push adc mov addr16 outsl jg mov lock jg loope sahf clc pop sbb add ror adc push pop int3 sbb imul les jne mov jg insb std or je sarb inc rcrl push mov mov dec mull mov dec (bad) pusha iret test fidivrl or and pop jg inc lret call insb inc jmp in sbb aad xchg jg fs sub pop ds cmp out fst dec (bad) jg push xchg ror daa ljmp cld cmp test inc test imul inc mov jg push pop cmp cli or jg loop pop lret subb jg lcall mov js xchg jg loopne xchg daa fimull jg (bad) mov add push jg adc push xchg (bad) std lahf push mov ja mov lds mov je daa pop cmp mov fidivl leave push add mov jno inc sbb lcall jg insl int sbb push lods jg jo out xchg sub aas jg es lret pusha mov xchg imul jg into cwtl mov mov mov scas pop pop inc clc xchg jg pop dec jp cmc xchg ss pushf imul jo loopne jg cld push lahf pop outsb call shr fnsave push jg jecxz,pn nop lret jg ds add mov push xchg jg hlt mov xchg arpl jno inc adc (bad) adc xchg std mov jg cmp (bad) decb fiadd mov mov outsl and fbld xor addr16 or push sbb dec out dec xor ret xlat jg aaa (bad) adc js jns fistpl jne daa lret mov mov test lcall cld icebp adc aas sbb mov lret test stos jns jg sahf jno rclb xor inc ja arpl repz jl dec sbb jg or and inc push popf mov jg dec dec jbe mov add rclb mov mov jg inc xorl into push fs lods outsb pop or jg test xchg jg mov into add lahf loop aaa insb mov jg mov lret xchg (bad) jg jge into adc jbe addl pushf jg pop adcl sbb mov iret dec outsb pop addb mov sub jle icebp int mov dec das mov jb adc ficoml or mov ljmp js lds push mov je mov inc xor ret lret in fisub jp in cmc stos pop fs mov loopne aas dec js loop mov dec cs aas xor lret rcl sti addr16 cltd sti lods shll test lahf pop jg lret or push add sub mov aad xchg dec in mov push ret scas sub xor pop push pop jo les mov in xor jmp outsb test test jg pop int3 lahf stc icebp mov loop mov aas sbb mov stc stos aaa jg or mov mov das push jg ss daa jne mov (bad) int3 dec dec loop jge add (bad) test sarb jae push ds cmp aaa push idivl ret mov jg nop or rolb jg xor add cld divl adc cmpsl or lret loopne in js sarl fisub or mov or pop jg sub mov fidiv jp cmp pop dec sarl adc negb insb jg xor pop pop jae push inc repz jne sarb adc bound jg jae test cwtl jg or lds and adc (bad) clc js adc pop jmp stos fimull les cmp mov adc jg cld lds gs mov cltd adc inc lret mov maxps jge,pt jg mov mov scas xlat nop jg fistl aad je jg sbb in scas jg outsb add push inc shlb out pop sti test rcrb ss ja mov jge jg xor add mov call div lock mov inc inc xchg (bad) arpl mov push jg sub hlt xchg sarl push sbb jge pop pop xlat mov out mov and je jg,pn leave cmp ffreep sub (bad) pop sub and or or inc rcrl jbe and jg xchg idivl jb fistpl xchg (bad) fcmove dec out popf test mov popl rcll dec sbb lods cltd (bad) dec jle fnstcw fmulp dec cltd push test xor loopne aas std jg xlat pushf lret aam or jg mov cwtl js ja inc movsb dec ss pop fimul lahf aas gs adc scas loop jl mov mov jb bound ja add rolb in (bad) repnz and pop mov sbb outsb or jb ja mov cmpsl dec jns cmp push lods mov jg repz inc adc pop jg and insl jg aaa pop nop/reserved ljmp loop mov push jg stc jmp adc arpl popa xchg push aas (bad) push xchg mov sbb pop loope add stc push sti in daa sub in popa jg into and enter stc outsb lods and or xor inc mov daa adc jg (bad) out sti popf jle jg notb adc ret jbe jg es jno and sub in ss icebp mov mov dec push sbbl sti push and push push cmp push je jg or js aas pop and fdivrs ret ficom xchg inc popa imul cmp rorl (bad) jg sahf std jns movsl int jg inc xor mov pop pop jnp sbb fs push jg mov aam jae int lock sub ds pop jmp add pop inc cltd push pushf jg mov or jae pop sub jne jg push pop aas push mov add sub fwait ret adc mov inc pop lcall rol ss ret pop aas (bad) push push pop xor inc idivb lock leave std inc sarl and andl mov jno sahf mov jg leave cltd xorl add jg,pt ljmp jg or jg push jb in sbb call fwait jg mov out push jg rorb jg pop jae ret clc jg mov rorl push and movsb jne lret jb daa fstpt pop aam mov xchg jg shrb xchg subl mov jae and jne cmp mov sbb push rol aas cwtl or push loop push inc mov adc jg or addr16 dec lret test xor sub imul inc jg je fs jns mov leave loopne (bad) add jg (bad) cmp into jo pop mov add cmp les cmpsl adc push lock jg sub sub fidivr imul fwait xchg outsl data16 jl cmp push lods pop aam cmp mov cmp popf inc popa mov cmc xchg addr16 add jae idivb pop jge xorb mov pushf shr imul mov dec pop (bad) mov (bad) std inc jmp dec xor dec les jp ss mov pop jg and (bad) lret cmp mov pop in sbb jg sub pusha and dec inc mov mov sbb or bound jp xor pop ss push popa fxtract jmp in jg adc push jg adcl mov mov jg add lret aas int insb sbb inc and mov jg lods adc clc mov xchg cmp jg inc lret rcr jg (bad) or xor inc add loope push iret repnz jg (bad) movsl aaa fmull (bad) in mov mov push sub repz push aaa push ja lea jae pop dec lds pop movb jne test arpl lret outsb jae add adc ss ffree mov cmp mov mov or xchg mov lds popf loopne sbb add sahf jbe fimul movsb adc imul xchg adc leave sti iret lods sahf incb push mov dec aam fnop adc les jecxz js jl out das sbb jns xor in test stc cmp pop mov inc ja inc xchg jae ss ficom sbb es idivl mov jg rcll mov pop (bad) adc xor add das mov insl jg jbe dec in cli inc jo enter jle dec or mov pop jne inc leave inc mov ret inc xchg cmpsl sub jg test dec mov cmpb pushf lret dec repz sar xchg mov mov aas aas (bad) mov clc sub inc outsb jg popf stc mov xor sahf add xchg jg out outsl std scas adc das loope jg fisubl sub push sbb icebp jg mov sbb mov test fist stos mov jo add push fcompl pop jbe fwait (bad) jg into jecxz std jo and sbb or lods mov inc or push jne ret leave cmpsl push jg sar arpl popa xor sti dec xlat xchg jg inc (bad) fsts fdivr push icebp outsl jg cmp (bad) fyl2xp1 jae mov and sahf push push repz adc outsl and inc add mov stc adc aam jg cwtl rolb jg lahf mov jge scas sbb nop pusha cmpb xchg cmpsl dec jg xchg pop xchg adc jbe cwtl ret ret enter adc scas cmpsb mov out mov push adc lcall and ljmp mov dec fidiv push ret push pop inc imul dec inc adc outsl shrb and sub cmp (bad) js mov cmp or or ss bound jg dec sub jg cli xchg cmpsb into (bad) and jmp cmp addr16 xor (bad) jno sarl cltd cmp jg jb data16 jp imul mov std or mov dec ror adc sahf pop xor rolb push data16 jbe ss adcl mov mov add rorl ret and and adc and sbb push nop mov pusha mov fcomps ja mov sarl jae push test push mov stc inc rolb sbb inc dec add js mov dec outsl aam addr16 fcomps enter test add (bad) xchg lea jb jg mov loope jg and sub pop pop inc fisub scas or jmp sar push mov jge pusha aas jecxz test ds dec ficompl jmp int3 insb sub jg pop addr16 jnp sub pusha jne cmpsb in inc mov mov add push push lods mov xchg inc aam int sub addps and mov call pop jg loopne,pt mov mov ret push pop js in jg lahf sbb aas test subl aas cmp lods dec cmp dec dec mov xchg es test xchg cmp mov xlat ret data16 cmp loop push cmpsb dec mov pusha cmp test jbe dec out aas jae adc add add jae dec jg jb int lret mov jg adc icebp sbb and rcr jg inc sub jns or lds sbb lods imul sti scas int pop inc jge popf sbb lret jg cs mov test jo (bad) dec int3 mov aas adc inc add jg,pt add or jg dec (bad) and mov xchg mov insb sub pop (bad) pusha jg inc out or xor je inc sbb lcall xchg shrl dec jg xor mov andl jg loope jge fistp pop adc jne outsb mov sahf jb sbb inc xor mov mov test mov loope (bad) sbb gs (bad) inc lahf out insb jg into push lods outsl lret xchg jb mov adc and test mov sbb push in bound mov ds pop test jg sub xor xchg pop jg aad and test mov (bad) mul fimull push lds inc shll jg popf leave sub js xor into test jae mov add pop mov daa add dec xor arpl lods sub jmp jae jg ret int cmp scas inc es and mov mov aad dec aas add jge mov dec push pop jg push fistl push in outsl pop cmc popa cmp and jle decl cmp negb xor cmpsl cmp cwtl or icebp adc mov pushf mov jg cmpsl movsb sub sti mov mov dec nop jg xlat loope sbb push jg test ret mov pop or loope sahf fsts inc incb fbld lcall jg push shl test pusha iret (bad) addr16 les bnd (bad) out lods and sub ffreep jg test sti scas add mov mov push aam jg inc shrl jg mov pop or addb or xchg inc into inc jg lahf out sbb imull pop lods push push xor inc dec jg fsubrs xchg mov test sbb icebp sbb push andb and jg clc popf mov int punpckhwd inc jl push mov stc lods pusha jb push fwait jg pop int std pop scas addr16 push mov mov lock pop pop or mov cmp push push xchg lods fidiv nop jg rcrl lcall inc lods in scas jg cmpsl cmp jg addr16 dec xchg dec push (bad) dec lea int lds pop clc jg daa pop mov cld scas mov stos inc mov push insb inc pusha test aad or mov push and outsl popa push (bad) jno add test mov out sub pop mov dec cmp dec lahf push outsb pop orb inc lods jge sbb push add dec ret bound lret shrb mov pop mov sbb inc jns jg inc push lcall stos pop hlt fdivrs sub (bad) jmp dec jg lcall jg push cmp jg and cwtl aad sbb ds xchg out cmp sti pop cmp fiadd (bad) xor mov in and (bad) pop sbb xchg mov movsl push or shrb sub jg (bad) lock jg leave lods daa push cmc je jg and xor aas inc jb xchg adc mov sahf jg loope in nop icebp or push mov dec push cltd jns cmp jne push mov iret jg mov mov mov push add mov in out call sbb sub cmp jg fidivl push pop sahf and jg add sbb bound in fs test lret (bad) sbb mov lods fstps inc xlat adc jle push std jnp dec sbb or sbb pop xchg insl repz jge and outsb pop repnz or sub gs fiadd xor dec test cmc push loope in lret mov stc aas ret jg test or jl jg fisubrl add cmovne sub incl push jg mov jno rorb sbb movsl cmc xor jg,pt add jg jmp adc (bad) jg inc out mov daa cmp xchg mov and rorl adc inc jle inc mov jle sub lock jne int3 inc in jg (bad) cli sbb gs add loope mov cs aas jl sti or (bad) call hlt mov cmp mov pop jg idivl dec push loop jg je push push lea ret jge xor mov mov jns mov mov mov in pop pop jl es inc lea cli cmpsl sqrtps fdivrs xlat push push jg aad ret and jg dec das push popa inc (bad) adc stc adc cmc pop mov cmpsb hlt in jg sahf dec jbe outsb je aas mov sbb push inc push dec push adc xchg (bad) mov jg ja insb loop enter fcom int pop push or cld sbb adc out jg or out cmp xchg adc enter mov mov in out scas out ljmp out ret jae xchg dec dec jg or mov mov leave mov jnp jg loope (bad) jl or adc int3 mov jb jg lods lret aas mov es sub pusha mov sbb popa dec sbb jg sbb js cmp xor mov dec enter dec loopne mov idivb mov call jae lret repz bnd and scas push and mov rcll and mov aas adc push mov movsb lds in in mov cltd push in mov inc xchg movsl imul aas jecxz int push sahf dec arpl mov pop lock pop out pop or jnp call pop dec jb outsb adc in mov loop mov fcomip xchg pop (bad) or jg adc xor inc mov repnz mov or pop test stos dec stos mov fbstp dec inc pop add sbb (bad) lock inc sub jno jl fstl ss mov xor sub mov cmp xchg sbb mov push push mov jg iret in gs mov int addr16 and jg setge (bad) fnstsw sbb jg jno in cmp push addl pop jg arpl dec jg jge test jg pushf or xchg jg popa scas dec push movsb leave bound (bad) cmp jg rorl sarl jg aaa movsl pop pusha pop jg adc mov jg aam arpl mov jg sbb dec push or iret (bad) into rol sbb out add jg cmp ja in pop (bad) jg mov mov jg or ret inc nop cmp mov scas dec or adc dec cmp mov movsl jg adc mov jg or cmp pop xor mov mov push sbb jl jg pusha mov test popa xchg dec push push xchg lods pop mov push fdiv mov add fcmovnb pop outsl lods xor lret xor mov ja cmp test pop mov outsl xchg dec jg inc push pop sub cmp or mov mov and mov push mov sub cwtl inc mov rclb dec mov and inc or lahf jae xchg int pop enter and addr16 incb mov mov jg mov xor (bad) jg jmp push sbb dec sbb jns in shlb mov in xchg xorl adc jg stc sub nop cld mov (bad) iret jns add xor movsl pop mov nop clc mov out icebp or js cltd loope mov (bad) jg roll mov sbb inc sbb jbe pop jne int3 scas pop jg aad cmp jg xlat rcl push cld cltd mov fcmove ljmp inc xchg fsubrs jg test jg jmp shrb dec insb cmp pop adc (bad) idivb xchg loop test jg (bad) mov lea std inc inc jle adc js das cltd push pop addr16 cmovnp push adc pop jne jo jg cltd add mov outsl xchg pop leave cmpsb imul stc cmp mov std cmpsl mov jg ffree addr16 jbe sti hlt or inc jle mov iret jg (bad) out sub loope jg sbbl jo fdivrl mov jg jmp loopne jg cmp test mov dec inc sbb stc mov movsl dec pop mov (bad) jg cmp scas aas (bad) mov ja (bad) xor cli push dec mov out adc loope jg xchg mov cs roll mov inc xor ja je mov pushf mov cmp xchg dec stos cmc sub or cmp and inc movsl movl cmpsb bnd insb int push pop jg iret xor arpl into jg icebp fldt or jecxz movsl sub ds mov repz aas iret (bad) mov inc jle,pn fs jg movsl xchg das xchg cmp out movsb pop out adc or dec sbb mov sbb pop (bad) dec fwait incb dec pxor dec mov mov push test jno popf jg mov ja lea and xor jl je sub push lods mov mov jno mov in ficompl lds pop cmpb mov cs xchg fstpt scas mov xor or inc dec xchg js movsb inc insb push fs ss int3 dec out les mov pop mov jo shl cmp aaa and inc cmp sbb jns inc lret popa shrb jg aaa push and out out adc or bnd enter cmp xchg jg or hlt jg je pop fbld rcr mov push lock data16 push fcom mov sbb cmp int adc xchg cmp jp sub jg cmpsl xor aaa mov lcall mov (bad) aas pushf es push adc ja aaa jg lods (bad) lcall (bad) jo scas jg fs sub fistpll push inc sub push jle mov fstpl shrb mov pop loope or js jae jg jb rol jg sbb enter sub roll inc pushf rcrl fsubrs cli and jg ss movsl mov in pushf push sub push mov out jbe mov stc xchg jle cmp jecxz pop jmp mov daa rclb inc sbb mov push call outsl clc inc mov jg inc out inc xchg dec and scas pop std test xchg sbb or andl mov mov fsubrs enter lods fstpt inc sub ret jg test int fbstp sbb in xor out (bad) mov insb scas fnstenv xor (bad) ja icebp lock lods push add je invd jnp pop mov addl mov fidivl rcr pop jecxz inc lahf testl fldt xor cmp jg inc test push loopne addr16 stc jg fstps push xchg mov mov xchg orb lahf mov xor clc jg sbb adc mov add jno push pop sbb arpl pop imul fldt inc lds dec fisubr pop jg inc test inc popf dec sti or sti mov xor sub jns sti xor inc jno push jg test jb bound push adc sbb mov mov and xchg pop mov and or jg lret xchg xchg aaa ja mov inc sti push pusha fwait mov loopne decb fiaddl jae jg mov pop mov sahf push cmp int jg lret popa ja jg,pt aaa mov add inc and mov add leave jg sbb testb in jg inc arpl into ret (bad) dec mov movsl fldt bound out push mov in nop stos pop or test push mov adc inc jmp sbb out sbb push push loope sti andb fidivl nop loope imull (bad) test int3 xchg pop sarb inc xor fsubs lds jle mov aas ss add push test subps add decb aaa rorb or inc mov lea push xchg sbb pop push cmpl es mov sti jg mov bound or repz jg int3 mov test and mov insl dec inc aas data16 jne call lea or pop shl or dec inc xlat push ja sub adc in ficomp loop icebp mov xor push fnstcw rcrb notb (bad) push xchg out mov pop fcompl int dec pop mov pop imul inc (bad) ss adc cli jg mov jg std outsl push popf push xor imul test fsts mov jo xchg jg mov out mov in push outsl lods pop mov lcall push lret mov loopne popf mov test gs mov insl (bad) outsl daa pop push jg sti sbb or lods bound icebp mov test pop push sub adc popa push jg dec mov aas inc sbb and jg insl insb ror or mov sti addr16 and lcall sub adc stos les inc xor or es fs (bad) jg dec aad mov inc fdivrs push (bad) ja data16 or (bad) xor jg pop mov into jg mov les out lods xchg sti or outsl mov (bad) in mov inc push lret jnp in test (bad) outsl or movsb inc xor std inc push jbe mov jg sbb loopne pop js cmpsb dec out cmp xchg sub cmp jg jno mov mov mov inc lock in lea inc icebp imul je int pop lods sub jg xchg or ficomp ljmp xor daa jg stos pop (bad) pop adc jg mov in push add jg fidivl mov mov dec sbb out sti addr16 (bad) iret jg rcll jbe push adc lcall push cmp insb rorl jmp hlt pop lds xchg cmc popa cmp pop sarl in jl (bad) xor mov pushw xchg test je jg popa adcb adc add mov loope int3 cmp push sub mov jmp dec (bad) ja sub movsb pop imulb add pop xchg in cmp push popf mov jg fsubs fwait jo frstor mov add mov push std jecxz ja jg push lods sbb pop sti fidivr jl dec pop je xchg mov inc cmp paddsw loop,pn mov inc arpl push pop push pop mov or popf fnop pop bound and mov out ljmp pand pop pop xchg jg ficomp pop (bad) mov cmp jl sbb dec jecxz out mov mov insl xor inc or rclb shlb add jno mov addr16 inc pop sti jg pop dec pop mov pop (bad) arpl outsl and xchg out div and jl push inc imul out sbb lcall mov (bad) outsl lea jg sbbl jg sub jb lret (bad) int lods jne jle sub lahf scas mov test jg push push lea imul xchg cmp mov pop negl jg insl and jg js data16 push (bad) mov push dec je and mov (bad) daa cmpsb add push add incl dec fsubl dec sti push mov outsl or xlat jns addr16 bound push mov adc test mov sbb out roll ret mov stc popf xor inc in movsl cmc cld adc repz jle mov cltd pop dec push or mov jg xor pop pop mov inc sub enter cmp (bad) dec adc mov data16 mov mov push daa rcll mov pusha mov dec mov xchg lcall push jg leave dec cmpsl push inc jno jg movsl xchg (bad) lcall cmp push rorl enter and mov fsts mov jns and (bad) jg xor mov mov lea push jg dec sub das daa loop jg xor in jns jae popfw push nop inc sarl test push jg addr16 dec mov loope xchg mov outsl push (bad) (bad) (bad) jae test mov ljmp out adcb movb lcall int scas jg fild cmp xorl test fldl jg sarb js mov jg out dec xor add xor push popf xchg pop pop mov mov test push in mov divl es mov popa jg cmc jp stos fldt mov sub inc mov mov lds pop addr16 jg mov sub push pushf test adc aas cmpsl icebp inc js jne dec mov add or mov mov jg mov jne and jbe jl mov shlb jg xchg dec (bad) push int std aas bound xchg fadds push dec dec fidivr les jmp pop jg,pt fidivrl push xchg sbb (bad) lock adc aas test aaa sub jg into rcll xchg xchg jg outsl cltd insl ss loope call xlat mov mov inc arpl pop fiaddl mov xor xchg pushf adc mov je xchg xchg addr16 js jg cwtl adc xchg test scas inc xor jbe push inc jg in fildll mov les add addr16 sbb not cmc xor cmp xchg jbe addl sbb sbb xlat shlb push or punpcklbw sarl and bound or out daa push dec xchg imull imul jae pop (bad) mov nop je scas movsl bound or inc pop and jg cmp cli push cmpsl lret xchg dec fnop mov addr16 ja jns sti push scas xor pop mov ljmp or xchg gs cld sarb insl pop cltd pop pop ficoml mov mov inc lcall mov or push out jne xchg xchg add jp aas outsl cli leave push jg repz (bad) mov xchg inc pop xor inc out data16 insl pusha cmpsb jle dec or movsb jg push jecxz xlat push dec scas (bad) loopne inc ljmp xor cs daa or jg iret sbb fnstsw pop mov popa jg cwtl call fcmovnb jg,pn xor xorl int3 mov or jl jg sbb lret scas sbb and ljmp push or and jg inc fbld push pop mov ret jg (bad) fcoms jo cmc mov xor idiv sahf jg dec dec jns data16 jg sub mov jg inc push enter idivb call leave std jg add negl add in mov and and gs leave shrl call add loopne mov sahf lret pushf or inc jg sbb es faddp clc loop sti jo (bad) icebp das dec dec and in jg mov mov push fidivr (bad) bound decb jge int3 js lahf ja outsb imulb popa test cmp clc jp sbb inc dec and repnz out pusha inc scas out mov add outsl xchg and sbb data16 test mov ja inc and or cmp add inc leave jg imul in (bad) jge mov and jnp mov adc frstor jg data16 mov mov clc pop jbe xor stos lret jae loope sarl out mov or clc leave inc cmp es jg xchg pop fsts jg fs int3 ja jae adc (bad) mov pop dec jge jl je lods into jg (bad) imul push ficoml pusha xor jo mov jmp repz minps test mov int3 mov jg (bad) jp push daa sbb (bad) mov movl sahf push xor (bad) xor and addr16 xor cmp dec mov inc cmp mov pop mov sbb inc dec addr16 clc mov cwtl jp cmp pushf addb mov dec push xchg or jg dec fs gs push stc dec pop lods out jg inc imul sub fidivl xor cmp scas stos pop mov outsb (bad) pop mov add lock mov gs (bad) leave jg cmc lods call jg sub fsubs inc data16 cmp jg les push inc mov lds xor cwtl pop mov push jg daa es push or inc jg movsb ret adc js add pop and js es and out mov sbb add (bad) rorl mov push pop mov jecxz or jo xchg push inc jno pushf (bad) push cs add dec adc xchg mov mov mov jg add mov fidivl dec push scas mov mov iret adc jg mov fcomps lea stos jno ja sbb sub xor cmc es or (bad) daa mov je dec jne xor inc mov add inc jg fmull ret sarl jle fwait xchg pop push sub aas jo push insb frstor push pop cmp jg jns mov push or add pop mov cs pop inc addr16 jg hlt pop add and lahf and xlat int jp push xor outsb fist testl aas push add jg arpl cs pop in out stos cmpsl out stc sub imul loop jg mov jg in sub loope cmpb cmpsb outsb dec (bad) sbb mov pop (bad) std pop cltd jg in fnsave sar pop jg outsl iret jle mov das in jb aad lods xor jg adc loopne out lret xchg in scas cwtl je xchg hlt stos mov jg mov sti in test sbb and inc push nop jg bound mov shrb repz mov into dec outsl scas cmpb pop mov jg jb push sub push sbb sub adc jg (bad) test inc inc repz lods dec cmp in sbb loop mov movsl mov and out jg js mov cld mov jg rcll (bad) jmp cmp mov jg xor add sub xchg xor out aas mov ror inc iret jg popa or cltd cmpsb (bad) jo push mov (bad) call jbe xor jg jmp cmp inc nop out mov mov sub jo aas fwait lret mov jg addr16 data16 jge dec imul test cmp cmp in rclb and jg xchg and test bsr out mov mov cmpsb aas stc int in push test test (bad) mov mov adc pop pop jg sub cld jno test mov adc jg fsubrl ret dec jno push popf xchg push xchg xchg jbe in cmp pop pop fcompl nop mov je dec jmp jg call sbb cwtl das mov cmc cs lret (bad) cli aas add iret lock je cmp bound or repz xor jle aas or add arpl icebp cld stos popf fwait sub js inc pop lea jg jne insb out pop (bad) jg sbb inc sar mov div rolb jg loop (bad) mov jg push mov movsl out out inc jg ss xchg mov and and push fisub jg xchg mov fiaddl push jbe into inc pop pop or push mov push pusha mov xchg pop jg xchg iret mov push and cltd clc xchg sti cmp push push movsl lods jg cmp push xchg aaa sub jle mov pop enter adc popf sbb arpl xor push mov jg imul (bad) mov dec outsl outsl jno (bad) in jg bnd add pop dec rolb xchg daa (bad) addr16 inc test movsb sar xchg fs mov loopne jg push pop jp push fidivrl out cwtl xchg pop add sarb aad cmc ret scas jg pop push mov or cli fstl dec jnp out rcrb jg mov mov mov or (bad) or js imul mov cwtl jg jo pop push jne cli inc daa (bad) push mov jg mov push lahf jg jnp loop add mov mov inc jg bound or jg fstpl arpl jg in (bad) ljmp sbb cmp cltd jle cli (bad) mov nop or aam lret push dec or jg mov add jg push push fldcw jle adc mov ret bound fwait inc add or popf loope mov insb jp mov das idivl enter mov mov out sub sti cli lret jg mov jae cmp pop outsl mov gs mov stos dec cs cli insb jg out (bad) xor jns lock cmpsb ret cs push popf cmp stc or jg mov js sti push jg iret in add jg mov (bad) mov loopne (bad) push movsl cld movsb or (bad) mov sbb lgs jg lods arpl jg mov test mov push lea add lcall pop cmpsl mov dec jle outsb or ficomp cmp mov aas pop aad jg mov ret call inc mov aam (bad) arpl sahf lret cmpsb jle in jo xchg adc inc xor jg mov xchg jg divl icebp jg pop cmp fcmovu xor das lcall ds inc mov ja mov inc fild pusha cmp aas mov cmp cmp jns in mov aaa sti pop ja and inc movsb jle jg fwait sub pop jo jmp sarl pushf or push push mov fdivs jp jge inc mov daa jg jns or jg in gs outsb repnz cs repz jg fnstenv pop sti xchg dec adcl add xor sarl sarl cmpsl fnclex test fimul notl and scas dec sub std jno xchg test jg ficompl add mov push xchg xchg lods pusha jg repz loopne sahf fdivrl mov mov aas adcb dec loopne mov cld (bad) cmpsl aas xlat dec sti cmp sahf mov aas testl mov test outsl scas (bad) es popf jg adc jg sub jl aaa loope sbb (bad) (bad) repz xchg mov and aam addr16 ss inc (bad) ficoml pop in loop cs push jg cmpsb in sbb imul pop cmp push or mov aam adc dec lahf dec jg imul adc mov sbb pop in (bad) nop jg adc (bad) push repnz ficomp test jg out ret cmp mov push push lret pop pop jg fmull std ss xor pop leave adc xchg mov jg ffreep mov mov dec addr16 sbb adc dec jg pop ss or jg loopne scas and adc inc sub adc mov pop stos push lock push jg inc fdivrp adc imul add mov add push xor xor pop xlat mov push outsb mov imul je xchg ds mov fnstsw jg xchg lds (bad) fdivrl lock inc (bad) adc pop or cmpl jmp mov inc inc dec bound add mov xchg test xchg pushf jg cmp add ret mov lret mul jg inc dec mov fcomps dec mov fdivrl sbb inc gs (bad) mov xchg std jg mov xchg push bnd jg xlat mov mov loop lret push xchg sub mov lods add add std push adc pop addr16 mov sbb xor adc out das dec or stos mov in dec out push sarl jecxz fsubr sti imul xchg enter arpl ret pop leave cmpsl in rcl jg adc and test pushf jg mov cmc mov stos sbb aaa pop es fnstcw jecxz sub cmp push pop das or hlt jg daa pop imul test call into jg lea stos jno aaa mov das push pop xchg cmp dec fdecstp push shrl lock push xchg dec rcrb mov addr16 call sbb jge push sti jb or mov mov jg ds int push fidivrl popa cwtl fcoml in std mov (bad) jae sti out fnstcw push outsb test mov adc outsl mov jg mov popa jg mov lods inc jg push sub dec sarl pop adc push rolb xor (bad) jno mov mov loop stc mov dec out inc jg outsl and lock pop dec or xor and je pop sbb test jnp push xor jg jbe outsl mov mov call loop jno pop push or push lahf mov push or jo pop in adc pop cmp daa stos jae pushf lcall or sbb ljmp mov mov jp sbb mov mov add jge aas pushf fidivl mov inc xchg add popa jecxz hlt aad (bad) leave ja mov inc flds popa push jg xchg movsb adc nop push fwait sti lahf inc adc mov push les test sarl pop (bad) cmpsb add mov mov dec or cli or (bad) stc pop leave lods jbe lret xlat pushf mov xor sti in pop mov sub jg cmp dec mov leave enter xor push add sub xchg popaw push sub jg pop adc imul ds test dec dec loopne dec jecxz out arpl idivb fwait dec dec cmp pop test pop int xor xor mov and fnstenv jns fs inc insb mov je and push test stos js cmp jno cs push sub rolb dec mov pushf inc test mov xor nop pop stc push or sbb sub xor mov jbe add cs pop dec loopne adc dec mov jg ret lcall sti jmp dec outsl push imul sub sbb popl push arpl xchg cmc lret es mov fstpt popa mov in jg cmpsl adc xchg fidivrl mov lods mov pop nop pop shrb fisub insl adc cmp add out cmp jg sbb fisttpll bnd jno mov jg pop rorb sub mov mov pop outsl stos xchg dec stos and (bad) loope cmp int3 add mov inc lea add mov addr16 xlat mov repnz pop cld jg sub jb pop jg rcll mov mov inc dec cmpsb jg fiaddl lods mov jg insb add jg dec xchg xchg sbb sub cmp gs jb dec or xor sarl pop outsl int lods inc ret cmp lods mov shr fistpl stos pop scas dec ret and or lock mov mov jg aam xchg bound lea out xchg push inc insl xchg jg mov jl jg (bad) jae jb jo inc sbb roll add adc repz adc mov pop mov ja (bad) cmp mov les loope dec jg jnp in add sahf xchg mov js cmp cmp mov xchg loop test xchg fbld stc mov pop mov xor cmpsl orl xchg in sarl divl into xchg jbe cmp outsb adc es dec pop or jmp jg call (bad) fdivl aad pop subb bound xor jmp dec ret pop jg lcall jg scas or ja test jg (bad) scas inc sbb mov inc bound decl mov jg push cmp or push mov pop leave push imul mov jg pop push cld (bad) jbe jg pop and fucomip jg imul add enter inc lods (bad) push scas cmp pushf jl addr16 (bad) pushl cmpsl or mov jg cld pop in xchg push mov xchg mov pop arpl and dec sub into mov push test jno stos or and fwait jle rorb push adcl xchg cmp pushf mov bound lods and mov add out pop test pmaxub int xchg jg int3 mov cmp mov imul jg or xlat mov hlt jg fimull std (bad) or inc jg ret inc in stc scas mov jl into dec pop dec sti loop or fdivs mov add push sub pop ret inc dec sbb inc jle pop sarl push jbe jg ficoml push add adc inc cmp jg insb pop mov xchg mov cltd push jg sbb loop mov jae insl popa jne cwtl inc insb int xchg lds xchg jg xor inc imul cmc push int xor mov and xchg add mov daa dec mov mov inc gs rorl lret jg lcall jg fnsave dec jg fstps sahf popf jne xor mov sbb cmp out or sti nop mov in sarb push in addl (bad) jno inc idivl js sub bnd dec fwait and adcb inc movsb aas inc popf jg (bad) nop push stos aas push add (bad) mov arpl (bad) incl ret mov out mov sub jg adc je jg add xchg jg xor mov dec mov push lret idivb sarb loopne xor sti das pop stc test jnp rcrl jp es mov jg ljmp mov call push mov mov cs dec push jle inc jg inc add or jo aaa test std popf arpl mov sbb dec (bad) ljmp in (bad) (bad) shll scas mov jge cmpsl sub jmp mov lds push cli ficompl jl enter aad inc aam inc add xchg sbb inc jg stos xor lret pop push fbstp and jno clc stos sub mov popf and cld jp fsub sub jno insl pop jns push cmp and push int cmpsb mov js fsubs mov aaa jg push xor daa mov or addr16 dec mov aas fadd les jg sbb add push jecxz aam (bad) mov lcall dec sti push (bad) jae cmpsl pop xor dec pop cmc mov mov out adcl imulb and xor gs jg xor mov idivl jg adc pop movsl inc jg dec xchg jg xchg pop jmp mov or dec stos mov rorb (bad) jg xchg xor (bad) jno mov es dec mov jg addl shr inc sbb es (bad) jge aas sub and fistpll cmp in dec out jg jl mov mov xor insb mov xchg fstp adc jg (bad) xlat mov xchg fnstcw dec fwait push les into test fcompl jg cwtl xor mov dec loope jg and sub aaa cmpsb push adc sub dec bound sub jnp adc (bad) jbe and jg leave inc cmp adc shlb xor je mov pop inc sub mov xlat sbb ja in jg add es xchg mov mov lock push in xchg jg repnz sbb lods jmp bound mov ja mov jns mov xor ret je add jg arpl leave iret mov dec out and jg xchg outsb ficompl imul xchg aas and push dec xchg ja pop mov or mov mov sbb lock jg and stos push or jp (bad) jmp inc ss jg (bad) mov sub sti add cmp mov mov repnz fiaddl cmovo and int3 dec out std aas adc cmp inc fldt mov ja in mov cmp mov jg imul sbb mov dec lcall add sti mov sub cli lods jmp in push mov lcall xor push imul sub in or out out jo mov xlat mov pop loope fadds and mov fcmovnbe jg decb cmp lret mov cmp cltd inc in sub stos inc inc jo cmpl ss and ret test sahf cmp add xlat inc push popa addr16 push out xor mov xchg push mov mov fwait jg leave pop xor adcl jg ljmp aas xchg and in aas dec inc addr16 jg arpl xchg in js cld mov das lds push jg sbb repz cmpsl jg push test push lods shl imul out mov lahf inc sti inc aad addr16 pop mov idiv mov mov add or or mov mov xor add inc dec lret jg cmp jmp mov push sub sbb mov cmp jge mov sbb push pop in jbe cmp lea call lods imul inc stc or sub sub mov imul jg push pop jae mov fstpt jns pop push ss jmp les cmp cmp aad imul test ret add add sub lock lret push aam inc or sbb bound aas aaa lcall mov pop fs xchg cs pop jg push pushl push mov call cld jecxz outsl (bad) daa inc incb xchg pop dec pusha les pop jg lcall mov mov scas or lods jg mov or les add mov mov pop pushf fs xchg imul into adc dec or sti cmpsl xchg jl pop push insb (bad) or scas insl add stos pop ret ja push jg mov xchg push mov add sub (bad) mov mov adc adc (bad) popa push jg loopne push xchg movzwl testl mov inc lret jg loopne pop pop gs (bad) call mov cmp jg sti rcll jg or jg ret dec jns cmp aas jg les mov add push sbb cmc sub pop mov pop fcmovne jae (bad) mov adc rclb add adc jg popf std sub (bad) imul pop cmc aad jg mov jae (bad) arpl test jns jg xor sti jg adc push dec das inc pop xor jg je mov fsub jg fwait arpl sbbb pop leave outsl push jle jg in (bad) ds mov sub movsb mov es adc adc mov lock btc in dec dec lods jno dec jg cmp pop popf xchg inc lret clc or cmpl sbb add outsl xchg cmp aas mov xor mov xor mov add aaa add faddl mov cli inc or or scas jg push adc int3 aam jg adc cmpsl push (bad) mov ja inc out (bad) xor mov jo xor sti pushf hlt jbe dec xchg call mov pop daa mov xchg fs jg and pop dec cmc sarl jbe in stos mov ret fnstsw cmp or pop ss lds int3 push dec addl xchg pop dec inc dec push arpl xchg cmp mov adc clc xchg cmp jl push loope inc movsl cmp jo dec pop sbb adc sbb mov jmp jg push bound aas xchg ret push push lods inc adc int3 jg lret je xor mov mov jg xchg out xchg scas adcl cli sarl arpl dec call mov inc or test jne lret (bad) mov mov jg mov cmp adcl pop cmpsb and shrb das in xorl jg mov fsts sbb popf movq mov aam push dec or cld jae stos lahf mov push mul outsl (bad) arpl int3 stos out insl mov cltd adc test xchg loope sbbb adc pushw jb inc mov dec jg add es add aam mov stos cwtl pop (bad) mov out sbb inc push pop adc js int3 outsb (bad) jbe sahf idiv jmp outsl push xchg mov bound stos push ja jg inc stos loope testb lds jmp mov or pop xor (bad) push jg loop (bad) daa (bad) or jg outsb jnp mov enter push movsb popa mov stos jg mov in (bad) call fstps inc (bad) js sub fwait dec dec or jg push data16 popf fildll mov sbb push out pop push stos pop dec inc jl fsubl sar lret scas jo jle lods jmp jg mov stc data16 inc xor or pop loopne lret mov (bad) push repnz sbb mov pop aas sub lods xorb jbe pop push jg jnp mov cmp lds into xchg insb jmp les jg pop push xchg aas in mov sbb (bad) int3 (bad) repnz cmp mov sbb out loopne jg inc jmp dec push ret xchg dec sub js dec cmovg sbb sarl cmp std movl (bad) mov insb enter (bad) je jns adc data16 push and std repz ja test popa add sbb and addl std jp out inc (bad) pop or (bad) in pop pusha jg xor test movsb cmpsl mov lahf lock sbb push imul popa dec dec push xorl or mov sti cmpsb mov dec js repz mov push dec scas mov lcall push in testl scas (bad) sbb jae xor clc int3 imul xor (bad) mov push jg in push mov (bad) mov ja std xorl gs sahf int3 ds shlb iret dec sbb inc jg xchg mov dec call jg repnz mov jg dec sub js xchg test lock jg dec hlt or ret mov rcrb pop xchg xchg sub add xor pop pop jg (bad) dec enter cmp mov aas imul pop dec add in jg nop aaa fsubrp and jg pushf push lds stos js and push imul mov pop jns jg jp sub cmc sbb cltd stos inc imul fnstcw inc test stc xor mov imul and ficompl pop jmp xor jg mov sarb cmp sbb pusha adc std jg inc ds push ss add add ret jg pop mov idivb xchg stos repz jnp ljmp aas mov xor fnsave dec pop sbb mov jg rcl (bad) or dec clc aas fimul jp dec lock jg push cmp add jg jo xchg adc ret lods cmpsb sub imul jecxz add pop jg cmpsl add xor jg divb jmp insb and xchg sbb inc les pop ficomp cmp cld jg push push cwtl aas or cmpsb mov push stos test xchg data16 fwait jbe jge mov jmp pop in std (bad) push push outsl xchg xchg and and cmp scas lds mov cwtl add mov sub and and jge sub outsb iret push sbb int inc jg adc mov inc shll mov pop jge dec mov pusha aaa dec invd or imul lret jg outsl cmp jg rorb pusha add insb and mov imul jg jmp mov stos imul je sub mov jne xchg loope jg push sbb cmp fs aam insl dec div sarl call aas sub test add insb hlt add ljmp nop jns das jg dec insl xchg mov cmpsl cmp mov xchg mov aas sbb push ja stos fmull fstpt xchg rol aas addr16 inc int xchg lea loope ja or push pop arpl addr16 (bad) dec shlb jns mov aaa jg mov mov daa cmpsl mov pop ret scas pop stc sub jg xchg aaa mov jg sbb pcmpeqb hlt jg lods cwtl add out popa in inc aam imul clc jo jg sub cmpl pop jno js and sbb mov out mov lds inc xchg addr16 std sbb mov cli cmp mov inc ficoml dec addr16 push scas aaa das pop clc xlat shrl mov jg ret lods pushf push test jg lds jge or xchg mov and ds mov stc push mov jmp mov xchg and xchg mov call sub inc das pop repz dec mov add xchg insl jg sub jae stos pop jno jb xchg jns lret xchg fidiv jno rcrb xchg (bad) mov mov xor loope pop mov push inc inc sbb shlb sbb push cmpl push sbb stos jne jno enter jb jg adc aad mov pop push jae push sbb jg test mov inc or rcl jg ljmp jg fstl xchg jg fldt xor sbb inc cltd loop jg xor mov out sub sbb xchg ja leave pushf icebp cs dec sbb test arpl das fnsave ret test mov mov lcall pop int3 test mov adc gs or out jg cwtl or insb into pop jg lret or xchg mov es dec push xchg stc jg into in inc daa mov mov gs rcl fwait jne stc dec jae fsubl pushf xor out xor lock inc add js adcb popf out xlat pop mov inc repnz jg xchg pop pshufw (bad) jg lods add inc aaa (bad) js xchg ljmp (bad) loop in lock jg fmuls xor ss imul fs rcll and sahf or (bad) dec sub addr16 xchg and loope jecxz fisubr scas mov xchg jg pop icebp pop pop ds mov dec jmp dec dec jg lahf loope xor cmp jg fwait pop sti push in adc and and shrb add in pop popa xor out jg fstpt and movb add push cmp mov cli mov cmp lods mov cmp mov imul daa addr16 add and dec fdivp mov jg or and push pop in jle test mov xchg inc call xchg jg mov push sbb subl int je pop jg xchg arpl mov repnz mov jb sar mov inc imul jg mov out test out pop add lods lea mov inc inc xchg ret push fwait jg addl lock sti insl fistpl ja lea mov mov dec xchg jno shr cmp pop dec inc xchg jg cmp xchg and jl adc mov mov (bad) mov ljmp mov sub sarl cmpsl lds push push cltd fisttpl inc or jg inc call inc jmp pop sbb push ret push cmp lods mov mov mov stos in aas xchg or dec fnstsw aad (bad) popf push jae jg push rcr lcall push imul sbb push mov jno push jne dec (bad) sbb or in add in addr16 mov push aaa push loope ja push jg pop jns test jo lret arpl jg cmc frstor ss outsl mov aad sbb jg dec out ret icebp jg fldl stc mov test (bad) or sub mov je lds addr16 repz (bad) int sub ds sbb pop inc gs out xchg je cmp movsl mov dec dec aas repnz xchg dec out ret mov sbb out idivl pop xchg add push enter mov xor adc lods out sbb (bad) jg pop mov adc dec adc jmp rol je pop adc mov fwait (bad) sarl and mov jno jecxz movq das leave fcmovnbe xor inc push mov in pop mov pop imul jo jg mov pop jle or and pop inc outsl lods xchg inc jg push mov sarb lret jb jbe jg movsl mov jo repz mov (bad) jnp mul push jg ret popf in jne jg addr16 (bad) lcall imul xchg mov fidivr mov cmc inc jg ffree xchg xor inc mov aad and loope jg imulb scas jg sub in jo iret jg add jg push pushf sub test outsb push mov jg cli jbe aad xor cmp mov hlt jns pop fildl sub inc jg fcompl xchg xlat lret jae push or add ds pop aas dec ret jne faddl out xchg jg aas ret mov addl and fwait inc xchg (bad) outsl jns adc loope cli loopne sbb mov push outsl test jp mov outsl cmc loopne pushf (bad) arpl jg loope or jg and hlt nop mov xchg push inc jp cmp and inc add jg dec add ror icebp mov bound out das cmp fistpll iret lods mov leave or scas sbb fdivrs adc iret add aad daa pop pop repz or sbb aas adc dec orl mov fsubl mov ret dec jno and mov jg jle int3 mov jo inc mov mov cmp push notb jp or ds jae pop and les push dec test movsl hlt in add push nop test cltd loopne sti or pop inc inc leave incl xchg aaa lahf hlt outsl add popa fs iret in sub pop xor js mov das pop setae imul inc jg xchg push roll sti push jg xchg xor push les mov jns jge movsl into mov jae mov sahf sbb in add push loope sub jg pop adc adc cmpsl add push jl ficoml lcall scas cs sub push xchg pop push jg mov mov enter (bad) lea nop sub pop adc sahf and lock mov pop push sbb out inc outsl add fstpt in pop mov mov rorb bound inc mov jno (bad) lahf gs movsb jg push cmpsl or inc jg xor jne or mov adc cmp rorb jg adc dec push mov movsb sub jg mov jp xor sbb int3 ja mov jns push dec mov pop inc js push fsubrl dec movsl xor js std pop pop clc (bad) mov sar or fcomps sub fs js sbb scas xor (bad) push jg test inc aas cld dec leave xchg mov fcmovnb fdivrs insb cmpsb in out arpl jg xlat cld xchg pop ljmp (bad) mov (bad) pop push aas movsl sbb mov dec push push cmp inc ret (bad) ds inc add in dec pop fdivrs sbb rcr inc mov insl bound sbbb jg dec pusha or mov pop mov jg aas popf fldl jbe sarl mov inc mov out clc sbb (bad) pop dec pop inc jp adc pop lahf jg cmp lea sub stc aas jno lret shrl ja,pn fistpll (bad) cmc pop mov fbstp clc xor or jg jmp add jg sahf xlat lock xchg and jg out ret mov sti mov xchg sub insb jae outsl jg das push in rorb jg push jecxz addb dec mov mov test (bad) sub mov mov std inc (bad) adc test outsl cli dec mov sub cmp mov push mov dec cmp aas or or js lret add mov adc out (bad) int lcall inc mov mov aas jbe sbb mov arpl insl sbb cs out sbb ds dec jg adc and test in ret movsl mov push adc daa inc imul fstl imul xor mov (bad) pop sub arpl jg dec lret fsubr xchg and and jg cmp cmp outsl inc shr mov mov cmp stos jne fnsave pop iret daa into pop ret jg leave jno xor rorl xor jg xchg sub pusha cld jg gs dec (bad) push xchg lret mov pop jbe fs mov ja jmp jp mov test mov sahf cmpb jg lods out push ficompl pusha push jg outsl sarl xchg ljmp in pop int (bad) lcall cmp imul jnp std dec int3 inc mul fidivrl aas popa inc bnd mov pushf hlt loope mov add add ret (bad) mov jg pop fstp pop imul out icebp jb mov pop pusha lcall and popa pop aas fidivrl xor cmpsl push inc or clc (bad) ret pop jg imul jg jp xlat orl lret mov or mov jg fbstp jp fwait andl adc rcl cld sbb lds nop shl fimul push sub popa adc sub loop test mov dec push push pop aas fcmovb mov mov (bad) mov int3 fisttpll stc mov pop mov fs aas add iret dec das mov ret mov cmp aas lret adcb insb pop outsl cmpsl cmp pop (bad) sbb jae call push iret xchg mov jg ljmp jg fldcw jmp jae inc push xor pop sbb call inc jbe jg xor xor add (bad) mov push cmp inc jle enter mull lcall (bad) xchg mov test jg inc add push iret jmp lea mov inc sbb jg into add in or sub popa (bad) pop jg fimull add sbb sbb jp cmp sub aas jg mov mov dec pop xor pop cli push sub jmp ret jg cmp xorl (bad) adc mov dec cmpsb push or aas fcompl inc (bad) (bad) fnstenv jge and inc pop inc dec test inc fwait aas jl jns mov dec sub mov sbb enter (bad) ljmp cmp sahf jg (bad) rclb insb jg push dec pusha in pop outsl jg dec or cmp test sub mov scas arpl mov pop fdivs in hlt shrl mov (bad) es out dec out cmp clc mov jg outsb insb stc in jnp test lret jg in mov cwtl sbb cmp dec mov inc or jecxz push clc fadds inc jg (bad) sti adc cmp lods jne inc mov aas xchg adc dec push sti jg adc (bad) loopne jp (bad) fdivrp xor dec jg,pt in mov jns or push or sti mov jo (bad) push mov lds getsec cltd lods pop adc push or rolb aad adc imul mov ja aaa jnp push jg lret stos xor shlb jg in mov xchg sub insl enter fisubr test inc outsl dec ret xchg int lret mov (bad) stos dec pop in jg and sahf lcall scas (bad) jg jae ret lock jns dec fstpt jne dec mov outsl leave aaa (bad) in jns mov rcrb stos mov add aas push in jmp pusha inc mov dec mov (bad) outsl jmp (bad) mov jg lds cmp (bad) mov insb test fcoms stc jnp jg xchg (bad) push adc dec pop mov jg sbb xor jae jmp cmp jg dec mov popa jg cs push in mov jg fild (bad) jg sbb pop repz push jg roll sar dec adc jg je (bad) ftst aas cmp sbb jnp movl dec popf add cmp mov pop cmpsb pop lds daa (bad) loope popa aad jae rcll mov scas test or adc pop lret add mov sbb xchg pop jg ss insb adc mov inc popa ja push bound stc and jg jmp mov mov xlat pop es lret lret inc scas cld add je xchg jle cmp jns push addr16 insb jg xchg sbb push mov jle lds mov mov xchg jno jg adc and mov pop pop mov mov jnp xchg jg out fwait orb into adc and lea xor notl jno push jg push inc outsb add stc pop jg mov adc jg push iret loopne mov dec fwait dec clc adc xchg xchg jg and dec int3 imul fnstenv clc jge js jo outsl movsl idiv xchg pop aas cwtl ficomp xchg addr16 (bad) daa jg or jg out jmp shlb jg adc cld out into xor in jg add mov lret fiadd jmp add pop mov aam mov cmpsl mov fildl jg fisubr cmpl jbe xchg inc xor sbb adc push mov jg mov test (bad) sub hlt dec clc mov repz imul rorb (bad) adc sbb fsubp jg cmp orb push push addr16 pop icebp sarl and push leave jmp mov and lcall (bad) rcrb push mov stos cmp and fdiv push bound idivl out cmpb fidivrl push dec dec repz pop xchg jg les hlt lods sub pop jg lcall mov (bad) jg outsb inc or pop jmp jo mov repz (bad) stos and cmpsl mov dec xor inc jg imul vmread xlat dec or xchg lods adcb push ljmp jmp hlt or popf je jge fwait cld inc jns jg mov jo movsb fstps push (bad) mov test mov popa push and jns pop aas cltd aam test pop mov xor cmp jg push sbb (bad) xlat pushf jg sbb cmp pop mov out es dec inc in jg insb mov movsb jg sub add pop jg mov (bad) jle stos fdivl add mov mov lret jbe xchg and stos push pop xor out jae test or (bad) cmc nop jbe pop addr16 int mov dec and (bad) je or jg (bad) pop xchg sbb or jg out sub cmp sbb mov lock xlat and add pop std sub push add sarb int3 jg stos jmp mov or jg into dec imul fsubp bound repz inc fs pop (bad) sarb fidiv imul std movzbl pop cwtl jg or inc xchg jg xor ja repz (bad) mov icebp or inc lock (bad) loopne lahf or pop sbb daa inc inc push xor or ret sarl ljmp inc and imul pushf (bad) jg imul ds push mov roll adcl cmpsb inc aas cmc mov shrl and imul stc sbb pusha outsl jg cmp inc inc adc push inc movsb jg xchg daa fdivrs sub push fidiv cmp pop pop daa xchg inc lret jg aaa cmp jg mov fidiv jns sub mov icebp push and and mov lret push js or aad cmp mov mov test sbb js push negb daa incl stc lcall pop ret pop rorb push pushf std sub les das (bad) call (bad) pop add jg lea push sti lret jb lds xor shlb jae jg adc mov cwtl mov push inc out xchg cmpb mov jecxz (bad) or jo test out (bad) push mov push es adc in dec jecxz icebp pop mov lods xlat lret dec les jg mov insl add aaa xchg mov push dec sti pop mov in dec fildll add sub je pop nop mov xlat fiaddl div arpl mov outsl push xchg test pop and cmp adc cmp mov bnd pop cltd ja sbb jp lea inc test fsubp je jnp jg add ds mov push insb inc pop cmpsb mov clc ljmp stos add outsb cld adc sub ret popf fwait ror ds push inc cmp xchg and aaa ljmp cmp sahf std cmp inc jne pop jg mov cmp jg sub std cmp xor add inc in sbb mov (bad) ja mov sarl lock mov cmpl xor or stos sti dec clc jns lods xor addr16 jmp push and push xlat mov pop arpl jecxz jle push push daa loope bnd push or jge xchg cmpl outsl int addb arpl dec adc sahf add xor call mov lret rcll jg call aaa sti int jb pop inc imul and (bad) stc mov movsl fs dec or jecxz sti xor push outsl xchg daa push dec inc mov fisttpll (bad) and mov and flds in or shlb js jecxz xchg push sub mov rorl fidiv pop out lea adc (bad) cwtl jg push cmp mov rol xor jge mov cld mov jno jnp inc adc aas jne and mov pop insb jmp sti jg cmpsb xchg sbb sbb aas fdivl or repnz xor lahf sahf jnp loopne gs xor das pop or jg jno jns mov stos jg mov cltd or jle pop jne xchg mov (bad) fstpt mov jg lcall bound push or add out pop insl in jp pop fisubl (bad) je jne mov adc outsb jg,pt xchg ror out xchg or sbb mov xchg icebp push sbb dec stc int3 mov and scas aaa data16 imul adc in jg je roll xchg cld loopne mov and jge rcrb xchg fildl pop je outsb xor jg les hlt sub (bad) xlat ror cmp push mov mov movsb inc add enter or inc xchg and inc dec aad push inc enter cmpsb sbb enter xchg ja mov (bad) lds dec sbb bound jge movsl cld fsubrl outsl push fs (bad) lock push pop add aas imul jg test addr16 clc test in pop add xlat std subl cmp dec rclb inc xor outsl subl xorl fidivl mov cmp and mov orl (bad) out xchg pushf test xchg mov sub adc loope dec out mov pop or ret out pushf outsl testl sub cmp sbb popf dec cmp adc fisubr fldt sbb jg xchg push andb (bad) sub sbb jmp adc dec aaa pop test daa push dec xor ret jg idivb and mov repnz jg cmp add pop gs fdivrl push inc mov mov jg or dec jg test sub imul jg push addr16 mov xor popl cli pop cmp pop stc sbb cmp mov lods or (bad) jg xor adc push jl mov pop add dec mov xchg bound jne movsb pop mov adc xchg fwait aam (bad) je in imull in xor xchg enter push or (bad) ret lds mov push cmc xchg jg (bad) imul pop or add adc cmpsl inc jg fadds popf xchg repz enter add jl insb jo cli jg aam and into das in shrl mov push outsl rol jmp jno and aaa push jge les cmc sbb xorl push clc mov int insl imul (bad) test divb mov and dec (bad) jg push lods cwtl clc pop push fidivrl adc adc or dec jg mov push scas jle mov xchg xchg dec popf icebp push push (bad) adc out mov pop nop div xor ret inc aam cli mov jg pop push lods xor popf pop inc mov jg xchg enter mov sarb negl daa lret jg adc xchg inc push loop jg or add dec lret push inc fsub out lods jg adc push jg or repnz nop out xor arpl or fstl mov (bad) cld cmpsl and jp dec cmp inc sub or scas xchg pop jg cmp push mov push jecxz dec gs push xchg in int jg mov sub jg mov mov jg sbb repnz sub xor js popf cs stc ja jg or and pop mov xor sbb jg push push ficom movsl jb jg sarl ja jg ss lcall pop mov add adc (bad) cli jg fnstcw sbb jg cwtl cmpsb sbb mov cmc sbb daa movsl jg cmp test pop jg ret (bad) mov xor iret mov sub in and or xchg fsubr lret pop dec mov xor mov adc mov sbb dec jo jg xor insl das loop sbb into push sub jg add sub imul dec leave xchg mov in mov test cmp (bad) sbb cmp mov ja cmpsl inc movsl nop mov lcall aad negb xor push mov mov adc in pop xor jg int scas jp (bad) je mov mov in add or repz pusha lods movsb hlt dec addl (bad) cmp jg (bad) mov in insl jae es rclb rcrb pop and dec lcall sub and jbe out loopne xchg cmp inc mov mov xchg out add push imul jg pusha popa add js les push es mov popf adc dec adc and sti cmp mov adc daa xchg lahf (bad) cmp xor test lods cmp jmp inc and or movsb pop pop (bad) jg push stos test xchg mov jg jno lcall cmc sbb jp outsl dec mov ss xor add cmp jg cmc or jg or or jbe aad mov incl jl,pt mov jg cmp int cmp sub jg,pn jbe ljmp jo ret pop orl imul scas jg rcll add pop int3 jmp inc mov fstpt mov ja sub popa (bad) addl out jg jne stos sbb push fnstsw push fcomps sub lea inc test movsb aas mov xor push dec and jg jae hlt xchg fcmovb sbb shl jg imull jg dec out cmp cs jg inc pop xchg add or roll negl mov insb ss shll inc in sarb mov push jg ljmp je sbb sub mov push inc ficoml xchg repz cmp pop gs jg and mov cmpsl fs psubw push push jg cltd jmp jne out adc or lcall enter jmp popf jg lret adc inc jg aam xchg faddl pop insb dec gs (bad) lret aas stos or dec and in jg dec cld jae jmp adc into xor repz mov xchg adc cltd mov or test inc out lea out in loopne xor fwait pushf fild pop xchg sarb pop insl std dec pop pop push (bad) pop sub (bad) sbb jg (bad) or stos iret mov (bad) jnp and in inc jmp arpl gs jg fnstenv and (bad) stos jg int3 popw pop lods add add jg cltd scas std and lret jg adc sub (bad) mov jg inc jl gs loop (bad) cs negb daa leave loope mov test out jg and dec jmp mov xor xor movb lock in test mov ljmp (bad) jg sar inc outsb push mov out (bad) (bad) lods test jno mov jns inc mov pusha fstpt out fidiv push lea sti lahf jo popa push mov jmp cmp lods sub jg jp js jae push jg or insb cmp push arpl ss jg sub xchg (bad) jae cmp aad (bad) mov jb lret or mov loope mov mov jg arpl xchg call dec into rorl mov pusha popa jg xchg or inc std clc iret pop test push mov and sub subl and test repnz jg pop add add and (bad) daa repz addr16 cmp mov fdivrs push jnp mov push xor fsubl in rclb (bad) sbb dec js std jo jp icebp dec cs push aam dec add mov xor jno outsl flds punpcklbw jg jmp push sbb adc pop rcl push xchg cld jg xchg lock mov mov jge jo cmpl mov (bad) outsl ss dec lock jg add pop icebp mov bnd and inc mov mov loop sbb insl pop jg rcrb pushf jg push xchg leave pusha push push mov mov inc jg ds push (bad) in xor sti mov imul lock repz loope lds push cltd out lds push sub inc jb ja lods fwait push in inc pop (bad) or mov xlat inc adc add cli stos push outsb pop mov out pop jg inc and icebp dec out jg std movb pop cmp cmpsb stos mov inc mov mov jg pop in ret sarl mov jnp stc cmp outsl xchg inc fwait mov aas and jg mov push sub insl jg lods xchg or mov inc pop xor mov mov dec out (bad) cld pop iret sub or xlat sub sbb fisubl inc in and and mov xor dec out push popa push mov iret mov fsubrl sarb mov mov pusha mov mov pop pop sub sahf inc lds out inc les call inc pop add pop lret adc lods pop add addr16 mov movsl sti flds jg inc dec sbb jg or add (bad) in aaa repz jp and jg (bad) repnz add mov mov cmp addr16 mov jmp push mov jno mov xchg jg pop sub or or sub pushf out inc cmp test push or fnstcw xor ret jne jg lret mov fs mov les add cmp cmp into mov jl dec mul dec push jg xor adc out or insb popf pop inc int or jg mov push sub scas inc fbstp mov or jg jle,pn pop nop inc (bad) jg test push cmp mov xchg push xchg js inc sub and cltd fldenv inc jg pop cld mov jg lcall sti xchg pop dec movsl or scas imul push andl pop jecxz inc test xor and inc dec jg push pop inc out out push mov dec addr16 fcmovnbe (bad) cli pop ficoml jmp int push mov jb push (bad) mov mov push jg in cmp pusha ret xor stc repz xchg sbb movl fisttp jl pop (bad) mov (bad) out lcall lea lods stc sub lahf fbld mov mov dec xlat cltd mov mov and jo cmp loop sub aas scas xor inc dec cltd jg inc adc cli fwait enter push int adc ret jo lcall add jp mov ljmp pushf fimul fnstcw lods in and hlt pop bound pop jg ficom dec xchg ja fwait lahf jns in scas pop add sbbl inc hlt adc sti push jo imul loop mov out daa sti inc repnz mov dec mov xor stos jno (bad) jg repnz push xchg (bad) dec mov sbb aas push fisttpll lcall xor inc lret xchg sub jg call jge les mov add int sbb or jg loopne fisub mov imul dec pop call xor jg cmpsl or jno jg (bad) ret ss das inc aad std aas xchg mov into dec pop push mov icebp xor test add imul popf addl push inc mov test movsl jge aad mov push adc jp jg push mov mov ljmp stos jg sbb movsb push pop or jg xor scas cmpsb mov subl (bad) scas push dec mov push jg adcl scas (bad) cmp pop or dec push xchg jl mov cltd add dec aaa jg lcall fistp idivl inc repnz jg addr16 xchg jg adc inc sbb mov mov xchg push jg rolb and xor push jnp shll das sub pop lcall mov lods xchg bound icebp jg adc sub pushf nop push outsb xchg leave ja push jg cli add (bad) iret stos ss mov mov cmp adc inc sbb hlt push mov cmp clc (bad) outsl rcrb pop popf xchg jle das cltd dec xchg pop (bad) leave adc incb test sarb add xor ret pop inc adc rcrl mov inc int3 jmp push insb jbe (bad) stc jg cmp xchg lea fmul inc sbb jg mov mov lock sbb jg sti push shl xor ret scas jg popf incl jns xor jecxz mov inc cmpl cmp xchg dec add jmp dec mov jbe sbb xchg call mov or cltd pop daa arpl pop xchg data16 mov mov ja mov bsf pop jl pop outsb in or push fstl sbb (bad) hlt push dec dec stos mov jne loope add cld (bad) fstpt add insl aad andl mov xchg inc jbe mov pop jg cltd push or loopne bound jl add fadd sbb or xchg sub repz nop push jb or dec int jg add (bad) or pop and jg rcrl into std insl xchg int mov movsb fstpl push cmpl mov adc iret jp pusha jbe adc jg es ficoml movsb mov insl pop outsl cmpsl jg push jmp leave rcrl mov pop jno mov js fmuls stos dec test mov cmpsb push lcall nop aas popa jl jg dec outsl pop mov jno mov das arpl addr16 ret je stc data16 xchg sti push push inc sarb popf es (bad) jbe sbb push jp (bad) xor cmpsl addr16 lcall xchg push push push mov out sbb data16 fnstsw push and dec lds jg push push adc imul push add push aas push loope mov xor inc push adc and xchg addr16 jge movsl xor or pop aad mov ficoml mov mov push mov cmp mov inc jb pop pop pop outsb mov inc jg sub into cmp pop lds pop (bad) add push push clc xor mov xchg jae xchg cmp pop imul and pushl adc jbe imul out xor dec mov imul inc cmp int3 mov and jae sbb pop push mov test hlt xchg and popf sbb jmp pushf mov adc xchg jg pop push push in mov inc mov push mov adc jne sub jl incb jnp in outsl add inc jg or lds xlat ds push sub stc das outsl fdivrp mov adc push test je cmp pop (bad) mov fidivr cmp inc xor dec mov cwtl jg int3 and iret sarw fwait sub or lcall xor sub adc mov dec jg imul fwait mov test sub adc andb frstor mov or sar adc inc pop decl and cmp icebp lds out fdivrl int cmpsl jo sbb cmc inc dec jg mov push dec push lods dec inc mov subl movsl stc pop repz aam mov data16 call pop mov pop jg jns or fidivr jg or and (bad) mov push ds addr16 call sbb incl inc gs and mov dec mov es cmp lret idivb pop addr16 out jae je jl int cmovg jg cwtl sahf iret leave dec pop mov inc push fistl push test mov pop scas jg iret push cmp sub sbb cmpsl xchg xchg arpl ret jg mov inc lret jg (bad) and xchg call jg repz bound push cmpsb fs lock xor (bad) mov pop cmp lods lcall or outsl xchg fsubs jg xchg and sbb jg xor in sbb cld mov jg mov pop (bad) dec cmp inc xchg lret mov lock in jg enter je inc jg (bad) sub icebp jg mov in jg xor jne jg nop pop adc bound dec xor jae insb mov pop xor or aas fiadd fcmovb xchg cld push dec (bad) xor add cli bound push add cmpsb adc jg jae inc enter mov cmp ss dec shrb data16 mov inc in pop sbb sub dec inc sub mov fadd ret add jg mov push ficom jno cmp lods mov pop add jg cwtl nop jb cmp sbb jnp mov mov mov mov xchg mov jg jo dec pop loopne mov rorl jg (bad) sbbb mov mov popf or ja push ja jg iret mov aad movl sbb insl jle mov cmp repnz mov leave cmpsb cmp push jg push sarl jg pop mov cmpsb jno mov xlat jmp inc in out sbb jecxz adc (bad) pusha in decl jg scas (bad) out jmp xchg add pop and divb mov jg dec inc sbb and add jnp push test (bad) jns lds lret fnstenv pop nop addr16 ja xor je sbb push jp or pop inc mov jg cmp push cmp cmp jle testl mov dec ljmp pop divl (bad) mov ds push inc push jg dec push data16 (bad) mov rorl mov std es cmp fisubr jg jne cld xchg insb addr16 addr16 dec outsb arpl cltd jg (bad) pop jmp inc cmp add das (bad) test sbb lahf push imul sbb inc push mov adc into (bad) jg xor adcb in dec sbb (bad) xchg adc cmp popf in imul sub and fxch dec dec andl jp jae arpl jg cmp push xchg push push xchg jg and jae dec mov sbb leave mov lea inc test jae repz aas sbb push add lods push jge cmova adcb out or iret mov mov xchg repz sub push ja mov inc fldt cmp cmp xor jmp xlat insb cmpsb jg out mov sub jg js sub lahf cltd inc int push enter jg outsl inc mov test stc mov das jb adc inc xor jg push idivl lret sub fistpll aad ja jg dec push daa add add arpl xor mov aaa jg mov sub jo iret sub sub pop and (bad) in pop sbb cmpsb sahf mov mov jle test jg aaa jne lods into fwait in and pop pop dec pop mov add xchg outsl fiadd fsubrl sbb enter adc shl addr16 packsswb loope into sbb sub aaa push das xchg sbb mov idivb or lea outsl bnd idiv pop jg loopne imul jg adc or add in push xchg xor and test xor mov jg stos movsl (bad) push fsubrs inc ficoml xchg cltd mov jg enter stos dec jne sti inc popa pop sbb dec push add push daa xor leave sti sub pop fstpl shlb mov mov ds loope in les pop jmp mov fiaddl (bad) xlat je sahf (bad) mov aad loope push cmpsl mov xlat rcrb hlt int fwait pop movsb jnp in sbb test lock sub xchg cltd (bad) lcall loop icebp fisttpl jg add dec jg in push mov add jg icebp (bad) mov fisub jle pusha stos insb jns lahf dec test xchg ja xor sbb mov pop adc xor jg rorb leave test das movsl int int3 cmp xchg es xchg sbb fistl sbb bound cmp mov pop pop lock inc cmpb add jg or aam jae xor jge sti ret jnp mov data16 cld cmp lods xor inc outsl sub popa cmc mov rcrl sub loop js jmp mov xchg cmpl push mov cld outsb xor dec pop push and inc and je (bad) mov cld cmc imul mov test in mov and xchg pop hlt adc jg rolb xchg xor pusha pop cltd jb sti push mov pop pop test jl sbb cmp imul add xor pop loope aam jo pop aas clc sub inc inc out test test mov insb add repz mov jle in std call jg dec sub out mov sti arpl xor in cld jl jo inc xchg jg xor fwait cmpsl (bad) incl imul fistpl dec (bad) sti cmp clc inc mov mov inc addr16 and jl xchg bound jnp adc test and out push js pushf pop pusha into ret adc or jmp sub mov stos xor jg aad push sub mov movsl push in mov xchg cli shll inc sub adc or int sub inc xchg lahf ljmp js arpl cmp popa jg (bad) (bad) sbb or cmp and das (bad) pop xchg out fbstp je loopne mov jg inc and ret or ja pop es jecxz jae jg inc les sbb sub sti outsb retw sbb pusha pushf je or out jg test repnz xchg pop jg,pt fwait xchg lcall jecxz inc cmpsl dec out add inc insb js int dec mov inc adc addr16 mov fiaddl fistpl sti xchg mov (bad) mov shr mov push jne (bad) shr sub or pop (bad) jae add jg adc stc mov cld lcall mov mov jmp loope or movsb adc les sbb clc lahf sub inc pop sub and fimul ja das les push sarb add push jg jns cmpsl push xor jg (bad) mov and jg test rcrl ret ljmp adc enter inc mov sti pop je (bad) xor gs mov mov pusha cmpsb cmp inc dec lahf adc jg imul arpl and xchg ret jg xor adc (bad) mov jno idiv lret sbb mov jae sarl xor sub add push fs pop inc pop in movsl push leave inc test dec add rcll sbb push xchg ja (bad) jg (bad) mov cld sub movq pop jo jg shrl jg push loop mov pop outsb jae movsb jg dec pop add sbb jg pop aaa inc xor cmc pop stos mov sbb mov (bad) fldt jmp mov pop cmp jg fidivr flds jg sahf xlat jge xor ret cmp mov iret lods and into lods inc aas fisubl mov (bad) jne sub stc fmull or jg mov mov jp inc and jge mov jg jnp pop aaa sbb push stos (bad) daa ja jg stos in or (bad) xchg js movsl mov js pop ret leave mov sarl and and enter arpl add loopne lahf xor mov jg push and repz pusha jg dec jmp cltd adc jg xchg rcl xor test movsl mov test adc mov dec repz jg daa pop xchg dec inc idivl leave sbbb cmp hlt insl jg (bad) pxor pop sub jg ss mov cmpl push shll js in or lret push sub aad and insl jo jg add xor jg add fsubrs ret enter and pop jg js inc in mov out inc xchg jno jg fldl lahf jg mov inc movsl pop dec fdiv cmc out jg xor mov push sub aas lret nop test in std mov mov sub sub inc popa pop loopne (bad) lahf aas hlt cwtl fwait adc jg imul jg xor aad xchg cmp (bad) push sahf mov jg cmpsb aaa pop cmp push and jg adc inc pushf ret push push jo ja mov stos sbb dec pushf xor sbbl fist dec imul lret decl dec jg xor enter inc jne jg cld xor or jg cmpsl andb add mov std xchg mov jnp in (bad) jg and stc nopl mov ficom sti aaa jnp sarb push ret jg call sub clc jl or ja aaa mov imul enter notl jo gs add stos and dec jmp and mov sub clc jg popa fnstsw je (bad) mov cmp dec xlat mov jg fwait lock mov shll mov arpl fnstsw fbld xchg decb jg cwtl outsb dec in sbb insl jg mov push popf jg stos push cmp movsb inc cmc add mov pop dec jg lock inc inc negb or loope loop pop mov lock pop adc mov pusha iret jg mov daa subl jg mov sbb adc aam pop stc ret inc mov push jle xchg jg and loop jg xchg out xchg bnd lods ss pushf cmp out dec pop xchg push mov pop pop outsb loope add dec mov popa dec jg mov sub out xor sbb push pop push dec stc mov mov divl mov and daa mov mov icebp dec mov cld lock aad gs mov mov ljmp sub lods ja pop ret and dec push jg dec cltd lret or lods pop mov imul iret push add sahf jg out and mov pop sbb push xor mov ss hlt sti clc jg jmp lds cmpsl or pop roll dec sub ja dec push movsb fidivrl mov rcrb imul cmp mov and test inc add cmp popf lods xor pushf stc mov es rol frstor xor rcrl mov (bad) lods sti inc xor mov mov dec ljmp jg fcomps cmc mov shll stc bound jg icebp mov scas sbb cmp addr16 xor jg xchg sarb mov and fs shr sbb push popf loop inc jo add cmp into adc aas jmp in jae loop rorl rcr stos enter xor test pop dec loopne xor jae fbstp outsl fnop xor popa clc jg arpl insb test jg push loop inc sahf loope cmpsb scas sbb jg jmp ret jge and push mov push cmp rorb fidivrl pusha xchg ret mov shrl lret je mov jg fsubl or and sub shll push xchg lahf cli jg std call jbe mov xor mov mov ja dec fdivs ljmpw mov loop lahf jg pop sub adc sbb push mov js test mov pop and sbbb scas dec sarl and imul mov jne outsl lock dec mov jp lods jnp jg ficom sbb dec xchg jg cmp inc jg or (bad) mov pop mov pop and jg add outsb mov pop pop decb fucom mov sbb aas std adc nop jb idivb jecxz adc int3 or xchg insb inc fimul out xchg jae pop push dec inc int push jl mov outsl xor mov pusha (bad) arpl mov jo int hlt mov dec stc dec xlat out jg sbb popl mov mov adc sub lods sub jno jg (bad) xor aas inc dec mov jge jb stos lcall jg xchg xor test push push mov pop dec add rcr and sti ret sahf cmp dec aam in fnstcw shld jg or sbb and aaa xchg rcrl pop pop xlat jle add shr loopne xor mov mov repz scas adc adc add sbb aam lock mov dec sahf jge mov mov iret (bad) incb sbb pmuludq mov icebp out aam call add xor pop pop cmp or imul sbb jg sub (bad) dec mov or pop lods je jns inc rol push sbb cmp xorb dec sbb gs pop aas mov xor pop inc jns jg pop and out idivb xchg jnp dec xchg add mov pop sbb je fwait je push push js outsl adc and fdivrs mov pop mov cmp push test cmp push aaa and mov add rclb mov pop ret jg jmp push lcall mov std adc lock mov in jg sub ss outsb cmpsl addr16 and movsb imul daa sar notb aad dec pop dec aas imul aam leave push inc fwait jne adc popf and jp aas mov sarl aas jae into pop dec rorb sub mov add push pushf clc popf jbe fstpt dec movsl xlat stos push nop jg fs mov jg psrld (bad) addr16 jg scas insl clc cli lds mov test mov sbb xchg outsl xchg lock xor test jne jg sub mul mov sar idivl ret jmp cmp arpl sbb clc out out js imul les fnstcw xchg and jg loope rcrl push jg xor pop lcall pop popf push sub mov lds addr16 stc push and xchg fdivrl add or into arpl mov pop jg ss (bad) jge mov aaa jle jo dec dec (bad) jg mov sub jg rorl xor leave scas mov jb push inc xor jg inc xchg fistp sub shl ds xchg jg outsb pop jecxz adc jg test ja dec jg in aad out mov mov dec inc sbb scas dec stc push jg mov (bad) and out jmp jno scas outsl jbe push and push lcall lods cmp mov popa cmp mov stos add mov nop mov and out jp das iret bnd les and hlt inc and daa (bad) inc cmp inc cld xor outsb cwtl sbbl stos je insb dec aad mov pop outsl (bad) mov pop jg or inc stos push aas xchg cmp in (bad) or cld adc cmc ficomp jg mov fadds popf xor dec fwait dec sti xlat int3 pop inc pop cli push loop push jg add int ds jecxz ja xchg lds jmp mov ret daa insb mov inc inc jg lea push cs jne mov jg arpl insb push push js jg mov mov mov mov pop add jg (bad) loope xchg or jg ret and push xchg jg or aas insb leave es stos inc stc inc push scas cmp (bad) (bad) dec dec sbb orw in pop int3 sub int fisttp pop mov mov cmp jmp outsl adc fcmovbe pop jg jmp bnd cs aad fsubrl mov pushf jp cmp cmp cmp js pop movsl dec cli dec dec jmp sti sti ficompl mov inc js cltd ret jg adc out add pop add pop lds jg insb dec lret ret stos mov (bad) aam cmpsl jg dec cmp test or jg shrl mov std dec test lahf adc icebp add mov jns pop stc lds jg cmpl jg sbb mov (bad) decl loopne sar adc aad and mov ds shlb js or gs add jb add lret pop daa pop rcrl sub not insb jg dec push pushw hlt jns imul out mov gs sub xchg add cltd xlat cmp pop cmc cmp pushf fldenv pusha aas pop pop xchg jb (bad) dec (bad) inc test jg lahf mov sub ret leave scas jg xor stc lods pop jg pop adc jg mov xchg test jns pop daa icebp loop jg and lock mov adc jae jecxz addr16 ja stc idivb pop jl xchg test test jmp cs dec adc cmp sbb push cld jg hlt push ret push jge and (bad) sarl sub mov aad xchg xorl push int3 cmc pop jnp movsl imul pop je repz outsl jg out sarl ds jg repnz mov cwtl push jg pop push mov mov bnd xchg or and adcl jmp xor sbb xor ss mov ja jg subb cmpsb xor xchg (bad) scas mov xor je fwait mov mov adc js push sub ss dec (bad) jg cmpsb fucom adc mov inc loope pop sarb xor jne mov (bad) add mov out repnz jg mov fnclex pusha lahf jg push mov jle js push dec cwtl ret jg test xchg (bad) repnz popa or sbb push aas cld das xlat ds cmp or add mov stos test outsb dec leave adc jle rcl (bad) ljmp fsubrl inc adc stos push in icebp mov adc mov mov jae jns jg loop (bad) ficoml jg mov leave fwait jg push xorb push icebp jg fs nop pop mov outsl test or icebp hlt loop mull push and pop enter mov dec pop cmpsl or in pop or leave sbb xchg push shl jg jbe inc cmc repnz icebp jg shl xchg (bad) mov mov xchg arpl jg mov push outsl push lods jmp mov push jg dec stc dec push push in pop aas jo sub push lret arpl push jg inc cmp repz xor push jnp jg testl aas aam lods pop inc loop outsl lea xchg in jg bound inc jg sub xor cli arpl imul sub mov test popf or aad push fmull movsb jg adc loope pop inc pop jg pusha insl jnp repz jg,pt dec push ret nop fldenv or pop ja mov andnps dec test xchg nop lods pop pop enter loope (bad) (bad) pop push cwtl jo das (bad) push out std xchg arpl lcall out push daa inc adc cmp jl je adc dec or xchg jae jg popa into fwait aad rcrb icebp cmpsl pop popf pushf mov mov ds mov add mov scas pop jne pop dec mov and pop adc repz or pop aaa pop bound pusha jg mov xor fisubrl xlat lock or lahf jg popf pop add cmp sahf fnsave out cltd ss mov sbb mov dec lds pop loop jg pop dec fwait (bad) (bad) jae jo pushf cmp adc (bad) movsl ss imul mov test js sub jg and xor mov sub cmpsb add jg fiaddl mov lahf sti in adc jg fisubr push jg add imul fimul sahf stc rclb jl lock push mov dec mov and pop inc aad jg (bad) pop add lcall mov mov xchg das push pop mov je in mov xor leave test dec pop int3 lods (bad) mov push mov mov push int3 push ret scas jg enter mov cld xchg mov jb mov sub int or or fistl push push divb pop imul inc lret xlat sbb or dec pop int3 jno jne rolb pop jne fstps push (bad) cmpsb repz mov daa pushf jp leave dec add jg mov in es push adc or xor insl rclb nop jg cmp xlat pop popa loopne jg add jmp ljmp cwtl dec add (bad) in xor stos xor jmp (bad) and lods mov xchg jo aaa push insl lcall nop mov arpl dec stos sbb push jle and outsl repz dec test stos jg dec andb lds push sti stos add leave pop mov insb push jnp mov loopne dec ret adc pop cli pop push cmpsl mov and outsb push jbe jno popa es pop push imul enter jmp jg adc xor sti and rcrl fsubl jg popa subl outsb jg mov mov push jle jg push jb (bad) add or pop xor hlt inc mov pop enter fs add mov xchg int inc push inc mov jg cld push add push adc pop leave lods (bad) jg rolb jg mov dec dec mov les push scas xchg pop jg jno dec push mov repz add jg das aad stos xchg push xchg fcmovnb movb push mov les fsubrl jmp pop jo rcrl or (bad) mov adc cmp jle cmp and pop ds jg push icebp pop and ret aas sbb and push test inc jns cmpsl cmp js jg xor hlt fsubrp jmp int dec xchg xchg aas sbb and inc or lahf outsl jg mov sbb leave jae and mov mov pop out loope xchg imul scas out mov add jge inc addl les jg and divl fsubr add inc push sti (bad) pop xor lret push xchg outsl daa adc mov xor mov jg popf mov nop insb into clc cli xlat data16 (bad) stc out jns fidivr jbe cmp and sub rorb mov jg inc into xor jg ds xchg pop pop mov mov repnz das dec idivb push andb jg addr16 icebp ja mov push sbb inc (bad) mov sub aam movsl jg fisubr inc hlt jmp mov xchg loope in (bad) out (bad) jg sti imul rorb mov cmp push iret pop lds aaa jg mov mov pop arpl push push adc nop shrb cmp pop stos sub cli xorl sahf mov mov testl mov xchg xor xchg lahf mov or adc popf pop xor dec js adc mov adc lcall daa pusha sub cmp xchg jg cmp cltd inc sub fidivr mov jg jle js (bad) jg lds inc enter mov addr16 lret jge xor inc inc inc jl ljmp dec fistpll mov xchg xchg cwtl lea sbb lock or push repnz dec cmpl or jl cmpsl and mov mov pop jg (bad) test mov in mov jb pop dec xchg loopne jg mov jmp jg stc pop js aaa negb outsl pop repz scas mov or jne mov xor lret jg jae ja jmp sbb roll lcall jg inc aad gs sarl (bad) xchg or jg push xchg sub or jg mov inc dec inc outsl sbb icebp nop cmp jle outsb or cmp stos or pop xchg sub xlat mov in pop gs jae subb insl sahf andl inc dec push ret ss pop push push aas push stos movsl and fwait push jg int jbe and test mov je pop stos add icebp push jle inc jg xchg arpl jg mov mov sub scas lret out xlat clc sbb mov (bad) mov decb adc ret push icebp dec cmc inc push and outsb inc jg mov stos inc jnp test mov or test mov std pop popf ljmp aam (bad) cmp adc (bad) insl xor xor mov (bad) into sar push std cmp push (bad) dec sti orb jg fnstenv stos xchg jg jmp xchg push fdivrp adc mov lcall sbb insl or daa es and mov sub lahf das mov jg fdecstp add mov shr dec cltd stos and sbb bound mov testl sbb ret dec add jg sti loope add scas cmp and pusha cmp mov in inc jg pop test test and add add and jg repz lods adc (bad) jg popf inc cmpsl add add sub sub movsb xor adc loope js cmp mov (bad) in jg in ljmp in mov test jecxz jg mov out (bad) jg insb lods cmpsl lea sahf adc aaa lock dec and outsl nop dec inc js ret mov dec jmp fdivr out mov in mov notl push jg cmp int pop ljmp fisttpll mov cmpl xchg and mov pop push jg (bad) hlt ret jg mov rcrl jg daa xchg jg dec adc jg xor push jbe pop stos jg sti fwait (bad) jg shlb push push sbb stc (bad) fcoml dec mov scas jg inc fidiv push mov dec je cld fwait adc insl leave or mov enter sub jg push or or jg sti xlat xor test push iret rcll mov cmp and faddl cmpsb cld pop ds jecxz stos lcall rcll xchg jg jb and aas out pop (bad) add jg mov cmc xchg stc orb jg fidivr inc inc sbb sarl out int add push add insb or add push push jg xchg rclb cmp inc sbb xchg and inc dec inc mov (bad) push jbe scas mov ret cmpsb sub add push push jg mov inc jl xchg sbb push sahf jg out pop pop mov xchg aas cmc aam loop in inc (bad) mov sbb (bad) adc push js adc addl imull je fisttp daa mov push stos push jg pop dec jmp mov push pop add sbb sbb das mov jo call pop mov mov pop lds rorl lcall jno dec sbb aad sarb xor fdivp fmuls mov aas js out or jmp xchg int scas mov rorl pop or push mov inc jg nop pop cmpsl (bad) xor sti inc dec jle movsl fstpl (bad) pop sbb out or (bad) enter sub cmp jg loopne ljmp or lahf pop sbb lods adc mov js pop out aas aas jns sbb add test mov jmp inc pop fwait mov jg pop test dec aas aam repnz idivl jno mov sbb inc add cmp pop mov mov ss rol movsb cld mov pop adc dec xchg lock xchg xor aam mov push inc insl out and (bad) jnp orl nop repnz push sarb in xor jg rclb xor add push jg pop lods add out add jg jl pop pop sub jp push (bad) jb movsb jmp adc jmp ret sti ficom inc ds push test iret dec ret pushf jg stc lock jg xor sub jg ljmp jg cs lods jg test call mov insb cmp icebp xchg lods adc mov cmpsl cltd outsl fs int sbb (bad) mov adc add jno jle ja xchg jae test sub push jg out cmpsb sbb cmpsl sahf and std inc jecxz push ja jg test mov sbb inc out popa lahf cltd jg pop cmp and notb loope aad sti test (bad) (bad) idivl clc jg or or test or out jg or inc inc cld imul push (bad) xor loop (bad) or xor imul add jmp out push sub andl pop aas movsb es sub outsl (bad) mov idivl fs pop push mov fstps daa jmp ret or sbb cmp jns scas jg dec mov pusha or jg lea dec jg insb mov lret cmp sub (bad) dec jg clc sbb jecxz mov adc jg stc add sysenter jg push call fnstsw cwtl sbb sub inc add jg leave mov and icebp pusha cltd rorb stc sub aam cmpsb mov push mov sti dec jp jg jne lahf cld fnsave fsubrs jg dec or mov cwtl shll lcall (bad) mov test sti add pop xor jo mov sbb push jg dec inc daa mov jge rcrb aam cmpb popa in fsubrs arpl data16 inc or add test jg sbb xchg mov fcomi pop inc rcrb out jg jmp xchg in mov les mov or gs es insb mov rep loope jg cmp adc (bad) mov or push push js jg pop in stc adc mov xor or flds mov adc inc daa jmp or (bad) dec sarl push scas jg jns inc pop dec jp jg int3 cmp jg pop gs dec pusha adc std int3 fincstp rcll jp xorl jg push mov push sbb push fs dec mov cmpl inc je pop dec adc sbb stos jg push gs mov outsb rorb ret jns jg dec lock lea stos popf lds mov out leave pop jg pop cmp xlat fstps or pop ret push mov lods popf (bad) aam stos inc inc mov xchg mov out push jnp ljmp aaa inc daa xchg mov sub mov jb push (bad) sti jbe pop jg jnp (bad) fucomp mov xchg jg mov (bad) mov lahf aam push test cmp out mov or (bad) loopne or jecxz outsb xlat mov pop cmp jne mov cmp leave push push mov sub ljmp fwait repnz jg call inc mov in add sub jb jae fnsave into dec adc cmpsl aas fidivl out or nop and xchg pop mov push mov insl pop mov inc mov mov int3 jg dec fnstsw jns xchg imul inc push outsl dec jbe inc iret daa rcl adc dec inc fwait aad sub push mov cmp (bad) mov bound inc mov insb xor and in or in test xor mov inc mov inc jecxz sahf xlat movsb into lcall lock sahf jae subb pop movsl push pop or arpl jg call test jg loopne add mov hlt mov jae enter pop (bad) stos int3 and fwait pop inc mov (bad) push daa iret scas shrl pop xchg popa add ljmp scas jecxz jno or (bad) xor mov int cltd popa mov psubb leave pop jg lock inc mov in dec jl mov stos sub sahf je sub mul hlt js cmp cli xor (bad) xor jmp stos jg adc mov inc mov inc cmp jg insb dec outsb xor lods sarl push pop add mov jnp lea xchg adc mov jecxz jb sti jno ficompl cwtl sarb xor stos jns loope mov mov dec add jg into nop push jmp sahf pop jo pushf pop or mov jl mov jne iret cmp mov dec mov push or out xchg sbb and sub pop lahf jg fnsave and test addl jg ret test cli sub inc cmp test jg pop popa imul pop dec jg fdivr sahf test and pop xchg dec pusha sti cmpsb sbb jge mov rclb bound hlt repnz mov adc out and push add pop fnstcw adc or faddl sub ret mov addr16 lods std in out insl push inc out mov sub pop ja mov pop cmovnp aas jg adcb push mov mov mov xchg ror mov push jnp push pop pushf fdiv outsl movsl fiadd pop mov outsl mov out cmp pusha arpl dec pop imul sub and (bad) out icebp cmp hlt sbb pushl mov (bad) pop add and mov in movb fwait mov lea inc loope inc sbb aas fisubl pop scas adc inc ret pusha and and mov cltd (bad) lds cmc jg test and lea mov in jne test cs jg cmpl loope lahf and inc inc xchg mov pushf mov mov sub pop popa ljmp jbe in hlt testl jg movsb int3 in fbld fsubr stos fiadd pop sub inc inc enter in mov jno jg mov fnstsw inc sti and into imul out loopne rcll nop xchg fnsave inc in out adc (bad) fs sbb push cmpl adc enter imul cmp jg xor ljmp or xchg data16 jg adc pop or adc mov xchg dec leave xchg nop or data16 ret pop (bad) adc loop jl mov int3 out push push add in leave dec xor pop pop jg add icebp inc and jg repnz xor jg cmp push add push jg lret mov mov dec or jg pop sub shr mov outsl lds and hlt les in mov jg push out cltd stc xchg es sub mov mov insl jo mov xor dec or out es mov roll push imul adc dec fldenv ds mov pop roll dec jg (bad) (bad) fldenv xor pop mov dec inc addr16 jae (bad) rorl sar jg loop add mov or adc jns mov pop imul sbb dec sub out ror or in std jg jecxz dec sub cwtl jg push shlb cmp xlat adc xchg (bad) add in sar or aas bound outsl test dec push inc adc dec dec add lock pop jbe stos push cli add push jne ljmp add dec imul xor js xchg push (bad) aad repz aas out sbb push adc xcrypt-ecb cmpsl mov push cmp das movsl mov adc arpl inc jg jl dec int3 mov push mov mov jb loopne aas aad sub pop (bad) lock push movsl inc sbb jb dec xchg imul aas mov mov sbb add (bad) mov and cld imul or ja push bound andl mov mov cld inc mov inc mov scas daa push loope jg fdivl stos dec (bad) sbb mov jno scas negb mov dec loopne pop add mov jns stos lcall fstl inc daa xchg jg fcomps push mov mov xor ds xchg xchg jg ficompl sub adc cmp bound ds call jg jmp (bad) mov stos mov mov repnz sbb jnp fdivr lret jg cmpsb mov jbe call jb into dec mov cltd mov push loope mov or dec adc mov je pop jp xchg jg das cli dec sahf scas out xchg mov movsb (bad) mov mov imull repnz push les outsb loopne ja in lcall cltd jns sub inc jg mov orb inc (bad) mov push loop (bad) jg test jbe lea call es jg out divl push mov jg xchg fwait pusha shlb mov das ficompl jecxz dec pop sbb dec jg sbb movsb lods jg loope test dec jg push cmpsb hlt movsl stc or maxps out mov out and fstpt insl add jmp mov push pop das test dec inc jg,pt pop adc out stos xorl (bad) divb lods xchg push rolb push mov ja mov jmp push xlat repnz dec xor jg ror les inc rorl sbb jg sub sub es jg jo inc dec shlb cmp pusha pop fildl xchg lock pop pop int3 int jecxz mov xchg inc nop cs test sbb xchg mov js sub rcrl xorb bound jg popf hlt dec dec adc daa es lock pusha add out aad ss mov sbb xchg scas and fdiv int3 add rcrl or xor cmp jg (bad) clc ds imul outsl fstps lock scas test insl fs bound cwtl mov jg test mov xchg imul aam lds push add inc jle mov cmpsl das jae dec cwtl inc xchg test adc fstl pop xchg aad pop inc cltd ret mov pop sub loope push sarl outsl je cmpsb rcr test xor scas fildll (bad) lock int aas inc popf xchg outsb lds fcompl xor xchg (bad) xchg test in sahf add dec dec daa jg pop mov jle (bad) pop les dec and lret jg adc jge mov pusha adcl ds push iret sub sub test js lahf cltd outsl (bad) fsubrp sub iret es pusha xlat std cmc js cmp movsb fwait lcall push mov fsts pop shr std pushf jg dec xlat aam insb (bad) push scas imul jae xchg es jno mov mov pop movsb jg push mov and sub pop rcrl and ret push inc jg cmp dec xor insl mov jg inc mov jmp fdivrl lea iret jg out cmp out outsb jg ljmp jg push in lods addr16 xchg ficomp adc addr16 cmp outsb pop or fist sub ret jmp pusha jns cmp push lods or inc xchg xchg idiv aam dec ds out xor dec mov test dec push bnd jle jbe add push mov jg in jle jne mov (bad) iret jg mov ljmp outsl adc inc mov mov inc xchg xchg jg fisubl push sub pop jmp xor data16 out (bad) (bad) jg jb push cmp pop aaa jg pop loop mov push cltd (bad) xor (bad) or test cmp pushf lea pop imul (bad) jecxz dec hlt out inc cmp jbe sarb imul sbb sub push jg xor jle mov mov int3 mov xor sub movsb fldcw jg mov and fsubrl test sbb push cmpsb cmp mov lret dec jg pop and loope jg mov pop xchg mov in mov jg push lret je mov inc jg test jne lret aad clc jg jb test or mov xchg nop repz pop xor mov mov outsl mov in shll pop fstps (bad) pop and pushf wrmsr fimul sub add aam sbb ret add rcrl pop (bad) shlb inc jg sub pop lret loop and sbb pop inc mov push sbb xor or adc mov mov mov stc aas mov into ret inc sahf cmp cmp pop jns jae insb add scas hlt sbb mov rorb fsubl jg in sbb jbe mov outsl les inc xchg lock outsb out push pop jg rcr fcmovbe pop jg adc daa xchg cltd mov mov insb pop imul cmpsb dec mov and mov mov cmp pop or incb movsl popa test in bound into fs dec mov idivb jno push push pop mov push pop xor test pop push add mov ret imul (bad) push adc push push jg (bad) mov adc aas psubusb pop and dec mov jg stos test mov push push mov pop inc jno jae mov sahf pop mov or dec jg and mov mov push xor xchg hlt xchg jbe lods negl out jg ja or mov mov jg loope aas sar (bad) aad mov mov sub (bad) out adc mov mov push in stc lods sbb fidiv jp inc mov and inc mov xchg aas fistl insb mov pop (bad) jg into std ficomp aad stos mov and jae daa pop pop iret cmpsl sarl into xchg mov mov in jb icebp dec sub mov adc dec sahf iret popa jg jbe mov add stos push into js inc cs jl xor stos pop pop jecxz jg mov lods cmpsl mov mov mov orb inc cmp inc jg xor push js fidiv pop inc xchg iret (bad) lret sti imul repnz adc shrb imul cwtl je ds push int jg sahf sub lcall sbb incl jo cld adc inc in sarl daa xchg flds pop fs and test insl jecxz jg xchg mov popl jg fistpll add movsl jg adc sbb push loope jg xchg mov shrl inc jg test mov push test jg push push xchg rcrb in fildll mov dec data16 inc add jne loope jg dec xchg mov loopne loope mov std mov xchg and in jae ja pop imul outsb out mov outsl hlt movsl jg add test rorb adc or fstpt hlt pop jmp repz test loopne cmc loop adc mov jo jo inc div (bad) dec pop mov test push nop andl addr16 insb outsl inc mov repz sbb (bad) mov mov lods jg mov xorb cmp adc ficomp aas pushl fstpl dec dec aaa push push mov lret mov xor ret pop jg add std jg das ds rol stc aas add nop sub insb jg imul xlat popa adc adc movsl negl add mov test jg std lret mov xchg into mov outsl dec adc pop push push ret mov lcall repz push jg stos fisubrl and jg sub fsubs sbb jl jge ljmp fcmovbe push jg or mov sub mov jg (bad) and xchg mov jg addb mov in xlat jmp mov fnstcw mov mov mov data16 icebp or sub dec mov push mov pop call or fisubl pop mov sbb adcl mov outsl gs add mov push xchg insl imul ja inc fisub add rcll inc xor addr16 jg loope xchg xchg adc aad (bad) cmp outsb jg in idivl bound mov jae popf andl or scas pop push and mov sti sbb jp add hlt sbb inc pop shrb ret inc mov lcall inc pop jno dec mov in movsl pop jl mull xchg mov pusha add (bad) push imul mov inc popa push push lret adc push test jne jg mov addr16 jg (bad) daa clc cmp sbb gs lods pop dec push mov out jmp jg mov movsl loop sub dec sub dec adc lret out add xchg lock push stc add mov ret cmp test outsb cs enter jg sbb or xchg cmp sub jg add xlat stos sahf mov and pop scas out (bad) (bad) dec xchg scas dec mov jge fisubrl shrl mov aas pushf inc hlt pop jg push (bad) cld push sbb adc rcrl testl adc push pop aad mov push jecxz out jge dec mov xchg xor sarb cmc mov mov js xor lcall pop dec sbb lret cwtl int3 pop jg jmp fwait adc xor movsb stos pop outsl in incl cmp (bad) loopne fdivrl test sti jg inc (bad) inc idivb add pop mov cmp sub xlat ret dec rcrb mov scas inc aas push fwait jo sbb fdivrs (bad) in push sarl nop dec fidiv popa outsb ret adc mov adc bound push aas jae inc adc pop mov mov cmc scas ret and fwait movsl inc fnstsw insl inc mov jecxz xchg jg mov or (bad) arpl or lock mov jg call jae cmp jg or adcb jg ss shll lcall xchg cmp mov pop xor sbb pop int lea mov xor jbe push aas out inc jg pop cmp (bad) cli push insb dec test addr16 insl jg sbb ret jne push fdivrl sbb sub xchg mov xchg bound sbb (bad) jg jb and cmpsb jnp jg dec push popa mov imul hlt inc outsb icebp sub pop pusha xchg mov mov movsl bound or inc jg push fnstenv add cmp jo sti push xchg movb xstore-rng cmpsl add pop jg sbbl dec xchg sarl lahf and xor push dec cwtl data16 dec cmc pop ret add sahf mov push mov popf addr16 xchg and sbb notl mov jne lahf shll jg lods repnz shld and out sti test mov xor mov and ss push pop bound enter out and lret pop loop (bad) stos sarb lret insb mov mov jg mov pop push jb jo inc add scas test mov push rorb push cwtl inc aam ret cmp mov int3 lcall movl ret mov and outsb push xor pop or sarl mov mov aaa pop out fsubl fbstp jg mov int3 in mov fistpl repnz or stos inc aad pusha push xor sbb das lahf xchg mov mov sub sti mov stos fisub mov nop xlat enter (bad) jg jmp test jg stc inc sbbl enter push mov mov lcall jae inc aas pop dec lods push rorb inc add jg loopne cmp jecxz inc jg add mov movsl xchg or jg int push sbb fcomp mov and dec push test dec cmp jg cs pushf push jg lret push inc aaa insb jg adc dec sarb (bad) mov stc outsb jmp jg push mov (bad) jg push in pop cmp xor jg test mov mov mov pop push jg cmp or pop mov imul dec cmp adc xchg repnz inc cmp xchg cmc pop je jg jecxz lcall aaa fldcw xchg mov xchg jg jmp insb inc cmp test mov dec mov xlat xor imul and test rorb pop stos push pop cwtl insl (bad) idivl adc jg mov sub sub mov lods dec inc mull cmc jg push dec movl or je add cmp cmpsb jg or pop mov sub stc pop and cmpl dec jmp mov xchg xlat mov xor jmp jg jp ret outsb sarl ljmp leave pop xlat jg xchg repz cwtl push or inc xor shlb les lods outsb add xchg mov push repz adc and inc jg in lock jl pop mov pop mov js pop jecxz xchg lock jns gs jbe bound xor mov scas mov jge push xchg jg sub jg loopne pop movsb ret aad jg jmp sbb dec jg xor jne jg scas xchg nop fcoml xchg jg push xor sub jne jg in jl testl cltd test jo les ss adc orl xchg push push mov scas jg outsb cli (bad) cs lods lret jg or jl fxch sbb scas test mov imul cmp jge dec xchg sarb jno incb das jg pop push popf jb dec dec mov xchg or idivl inc jecxz pop bound pop cmpsl ret cld pop aas daa push pop cmpsb decl cmc jg and adc hlt cmpsl jg inc icebp movsb mov orl outsl add je jmp or fcmovbe test push jg pop movsb dec pop dec adc mov (bad) iret test cmpps jnp mov jg cmp cmp mov fmuls mov fwait mov xlat jo mov mov jecxz xchg test je xchg lahf mov cmpb inc lods jbe stc jns xchg sub mov aas xchg inc gs test push imul bound cltd mov addr16 cmp push nop aam jg movsl push fs mov out sub xchg loope xchg sub jg in pop mov sub rcl fnstcw lcall cmp sti mov inc cs loopne,pt or add inc or or pop jmp rolb mov test mov ret jg test jl mov adc mov lods into sub jg loope add shr cld and adcl push fwait cmp ss bound je pop fdivrl inc mov mov out pop jg and mul cmpsl push das test inc pop add cmpb and rep inc cmp jno adc mov lret mov icebp ret dec jg and je cmc fildl mov ljmp (bad) jg adc inc push hlt mov fdivrl inc fidivrl stc movsl pushf int3 mov and push dec sti add mov lahf bsr (bad) lock daa pop lds xchg subl cmp jg add popf jg loopne cmp loope daa test call push (bad) cmp mov sub shrl adc jg andl out (bad) cli scas or jl cmp sbb cli push das mov popl mov push mov (bad) sti jmp push fcoml jg sub inc xchg addr16 jg cmpsl sub jbe jg mov dec outsl mov sbb cwtl sahf imul cmp or (bad) jb push testb inc mov xchg testl out loope aas loopne mov shl cmp je jg cwtl mov arpl push mov and dec out (bad) mov xchg xchg or lahf insl inc pop mov mov ret push push in cmpl push mov jg insl pushf cmpsl push push sar pop sahf mov lods push mov test mov or pop mov push jno das ficompl jecxz add xor mov cltd daa (bad) sub ss sub add test in scas sahf into pop mulps mov out add (bad) aam hlt pop in in ret jg loop dec sbb jl mov cmp mov aas mov inc inc les flds jmp sub aam xchg inc shlb push add cmovne jno pop sub ror std or xchg sbb aas xchg pop loope stos xlat out dec dec mov stos cmp es jg sub ret in jg push je mov jg xchg inc adc xchg add inc scas fwait pop jg xchg push mov mov lea cld js sti icebp lret mov popa or mov aam lock cltd out or jns sti ret mov xor dec and jg out fs fdivr cmpsb xchg adc sti push jg das cs out inc sub inc inc jno sbb cmp and jg dec (bad) outsl rcll jg sbb jnp hlt mov (bad) mov and and movsl adc pop lock outsl idivl and repnz or cmpsb push and jg mov mulb jg sbb push pop loop mov data16 (bad) sub jg push add xlat push jns rclb lock or (bad) out push mov sahf xchg jg xor pop out enter sub dec push adc pop mov (bad) js xorl or and push jg iret arpl jecxz notl cmpl xchg or addr16 ret (bad) mov fstp or jg aas xor cmp jg inc js adc loop mov mov sti xorb idiv xor inc jg mov mov repz les jg inc inc pop icebp pop popa in aas nop adc and add and inc dec sbb iret (bad) outsl cmp lea jnp sbb inc call nop imul cmp cmpsb testl xchg pop nop xchg jg mov dec test lcall lock (bad) addr16 cs jg push out sub repz ds sub in or pop mov push pop stc xchg pusha mov mov push jg ss rorl adc lret jg inc sbb push enter loopne cmp lods jg or push sub and clc repz lret jg dec daa ret js inc scas jg jno nop movsl dec mov jo stos repnz call mov mov adc xor xchg mov popf sbb xor cltd push jg inc fs jg (bad) jno lcall jg pop outsb add arpl inc rcr es js addr16 push cmp jge test push bound xchg lds mov pop sahf sahf loopne xchg inc pop xchg nop jo icebp popf fwait sub fidivrl pop clc sarb cmp (bad) push xor stc jg cld repnz mov jg cmc sbb (bad) jg sub das mov mov movsl cwtl pop outsl fisttpl jg adc scas mov (bad) push jbe inc pop inc ds xor cmpsb out sti (bad) pop jb sub or push jg fisub lods cmp jg mov mov adc lods push sub out loop jg and aas negl popa inc add aas sub pop cmp fstps jg or cmp pop sti jg stos arpl jg adcl divl std (bad) adc jg (bad) jno push mov push test cwtl push ret outsl or out lock or cs mov jg or inc jne and cmp arpl ret cmp es mov das jg (bad) push iret add mov jg pop mov mov mov rcll mov loop iret loopne lods cs in (bad) jae rolb lea xor add pop pop jnp rcll dec imul push int outsl pop imul push mov imul jg fildll mov cli push jg (bad) mov jp lock pushf push sub lock (bad) sbb cmp cmp inc mov adc jg mov fwait int pop xchg mov inc popa push scas imul bndldx sbb push (bad) xor inc (bad) dec jg mov pop fcmove inc ss jb sbb mov jg dec jmp aad out pop jg icebp sti pop outsl sahf mov lock (bad) mov mov jg dec adc mov sarb inc nop jne xchg jg fistl xchg jg jns pop push xor pop pop fucomip push movsb jg mov mov jg jns cmp jmp loope loopne inc jle push scas xor imul push ficomp dec adc jg mov and stos mov outsb popa pop insl std adcl clc pusha les mov cmovae and cmpsb in sbb dec ret aas pop ljmp inc lods pop into iret adc jg pop inc push loope lret sub pushf jae jle adc jg mov ds dec jg int3 jp std sbb or jle lods push jbe inc mov push aad dec adc ja sbb jg push jmp xchg mov jl out stos outsb cmp inc pop jg xchg and push addr16 cld push ljmp lahf push pop insb int jg inc js pushf lods mov (bad) dec xlat or lret pop add loope insb lods mov pop ret outsl insl mov push out mov pop or or cmpsb pushl ret jg jnp shrb rorb mov or mov loop xchg fistpll lock pop dec out mov push push sarl shlb fist lret pop movsl adc ljmp cli sbb test push dec insb idivb outsl pop out fadds adc mov test nop test fisubrl xor test ret sbb mov insl sarl repz sbb testb mov jbe dec jmp jg popf xor adc jg mov jl fstpt jg stos jmp fwait mov insl push mov xor pop out or mov (bad) dec inc jbe arpl stc bnd les nop imul cmp mov mov mov addr16 mov lods xor mov jg bound lahf mov jg dec mov mov pop call ja pop jg pop dec xor xchg and push push sbb clc or js dec outsl arpl and mov aas add adc cmp jg mov mov inc dec js push ds or jg jl fiadd out into lcall pop mov push xchg adc dec dec aad dec mov aas inc and (bad) cmc xorl jg sti xchg ja loope aam jmp in xchg movsl movsb into addr16 xor nop xor cmp cmp cmp cmpl pop pop xor out pop cmp mov popl (bad) addr16 dec mov xor pop xor xchg and sub je out int3 call lcall or adc push push xor cmpsl fsubs fild jle aas mov les fmull jns jnp push dec xor jg jnp push dec push adc imul jp pop adc sub push insb fsubp jno fbld dec fildl and adc in jae push imul cmc jg cmp xchg (bad) out jno pusha ds fnstcw rorb repz pop lods or test cld inc jg mov or adc mov sbb pop add mov cmp nop outsb jg jo flds mov sti cwtl iret cmp pop jb lahf sbb adc movsb push add ret sarb fmul iret icebp add imul xchg mov jg inc test mov scas es fsubr dec jb and daa out mov jg icebp test push add xchg push mov mov pop jns sub push adc movsb mov inc arpl dec push sub xchg cs sahf sbb lods std fisttpll jg nop in pop or push mov addr16 inc sahf ret xor loope and inc ljmp cmp jmp xchg fwait jg jbe mov or repz and pop bnd mov pop fwait jg add lahf (bad) mov (bad) aad imul push lea mov movsl inc add mov push imul sbb in in adc dec movsb arpl jg sub shll jae jg popf sbb add add push mov sahf orl mov out jg inc das addb mov mov loope cli jg (bad) sub (bad) xchg iret inc inc sbb xchg scas pushl mov xchg pushf pop out mov xor add adc xor sub jmp fstpt pusha js push add jae pop jg jae mov jg mov mov into lea or les movsb sti cmp mov loope fwait inc int3 loope jg test pop jg and and (bad) in push scas call loope push dec notl mov scas pop scas adc jmp mov dec fcoml fcomps xor jno push push push inc aaa std addr16 jg pushf sub ret mov pop out jg rcll lcall xchg ret outsb xchg push cmp sbb sbb mov aam das sub xor pop (bad) mov addr16 lcall imul fdivr ret adc jg leave and out out lods and cmp and jg cld lds aas imul test jp or mov dec pop add mov enter fdivr and xor dec inc push mov mov pop mov jg lds lock aas pop aam test inc dec jb jp shlb outsb adc inc mov jg lods xchg or nop or loop enter cmpsl pop ret cmp pop xor les cvtps2pd bound add push pushf jg cltd fistl sahf outsb (bad) inc loop mov ret mov ss dec jg dec shll and pop out push je xchg mov add fsubl aas iret aas pop xchg mov inc sbb imul aas popf outsl xchg add fdivrp push mov jae jg call push dec mov (bad) out (bad) fsubs jecxz das inc inc pop data16 in outsl push xchg in aad jo xchg lahf imul arpl aaa mov dec inc pusha push push xchg arpl loopne out imul xchg jl clc or push js dec xor push jbe cwtl cmp mov dec mov jg rcrb fdivrs adc inc mov scas push sahf aas js jg sub loop add enter mov jg aam outsb push push pop sarb loope fimull jle push (bad) fwait add jg dec inc fstl adc jo in cmpsb jg in cmp jg fildl aaa mov (bad) shlb jp jno or sub in push mov out adc lahf push jg mov or jle and mov push test ss stos sub xor mov jg sbb (bad) push icebp jg xchg fcompl jg push dec or and xor sarb sbb sbb cmpsb jg xor rcll xchg cld leave nop pop sti loope jg cmpb push and cld jg push in es adc jg aas das pop sub lods jg nop rol xlat ret jg test cmp enter je aad ja fcmovb stc mov loope inc add (bad) mov ret lret lcall jg xchg xchg dec bound add sti jo push add aas or jge adc gs out cmp sahf sbb mov sbb jg mov push sahf notb cmp pop add stc pushf dec (bad) sahf test (bad) inc xor sub icebp dec pop int3 test and add in gs push mov xor inc aas jmp xor xchg and sub iret mov jg or and (bad) cmp dec inc sub neg xor das arpl and pop jg test mov mov scas insl pop (bad) jmp lahf pop jg leave loop jns out mov (bad) pop jg notb add (bad) cli movsl jg cs ja push lcall jg adc jg adc xor and sub pop pop sbb push roll mov mov xor push scas nop jg ljmp jno out jg imul cmp mov and fs lahf es out cwtl inc jg lods imul add or jp add mov jbe jns mov mov sub xchg inc in gs push sbb adc jg fisttpl ret push js jg or mov mov jge sarb stos jnp xor jg fist sub dec fs aaa pop sti leave pusha and mov (bad) mov (bad) xchg das movsl or shrb dec jg pop adc xor in mov add jge mov mov pop cmp jecxz jno loope out popf pop fwait inc mov jg (bad) fdivr inc cwtl fistp cmp enter or lahf xor (bad) jg inc int3 jp scas ffreep cmp pop mov mov (bad) stc ss cmp jg lea in ljmp out adc cmpb jo enter cmp add mov inc mov jg sub dec jno push pop je xchg in mov xchg inc add cmpsl ret xlat fwait pop inc out jns add adc mov emms sbb aad js movsb les mov push pop xor into mov jg or xor js cmp sbb movq sahf cltd mov mov ds cmp nop js js pop fnsave jg push test jg adc out jne adc test aas cmp stos inc adc jle cmpsb (bad) hlt adcl mov jg dec js imul clc jg fstp cli ljmp pop push cmpsl (bad) lock lret inc jg mov int or lds ja xchg jg and pop fs adc cmp mov adc cmpsl (bad) mov adc add mov loope jle aaa rorb lock xchg xchg jbe pop xor push sti call jg xchg mov jmp pushf jg scas jb fs aas sbb in mov inc nop js mov sbb jg pop mov inc jg adc fisttp (bad) jnp loope std mov aaa and (bad) jbe jns add jmp dec push je mov xlat jae sahf push inc jg mov mov imul xor jg inc test xchg mov sub xor lcall hlt jg pushf fsubrl push inc xchg rcr daa mov and addl call jg sbb rcrb inc and pushf mov in pop rol jb pop mov arpl jg hlt mov jle scas fwait jg and frstor out jg cmp ljmp popa pop jg inc ss nop (bad) add dec mov je xor dec jbe add push jg xor sub (bad) pop xchg jae mov inc cmpb xor push mov jg shl aam cmpsl dec nop fistpl xor inc loopne lock mov aaa inc jg lea jmp mov mov mov inc and lret lock dec jg push pop or sbb mov scas loop addr16 jg sbb cmpsb inc or loopne test (bad) add mov inc imul or imul lret cli popa fidivr nop call adc dec jbe inc inc pop shrl push sarb or inc mov sti aad ss mov sub jg and dec loope xchg pop jo sbb pusha xchg pop sub sti xlat stc mov pop mov or pop jo insl fdiv out fstps push fsubs and cmpl int3 push div jle jg icebp adc (bad) pop jns mov jg or xchg pop pop jg sbb sbb jg jb test cmpsb fld mov popf imul enter xlat mov scas cmpsb pushf and cld mov insl inc es or jg addl jg push inc xor fldenv (bad) movsb imul call inc sbb jg xchg enter rcrb js lds dec jmp jae jg xor ljmp insl mov mov fldenv adcl inc push push out movsl negl movl and jg adc sbb or adc std jmp jg pop and sub xorb inc loop jg (bad) jns ret inc sarl jg xchg xchg clc setb and repnz or push inc mov jg adc inc idivl or cld lds imul adc (bad) dec clc dec push adc into dec pusha loope ret jnp sbbl sarb and aas fs jle ret push jne les push mov xor mov pop jnp roll mov jle dec fldcw push jbe arpl and mov mov push sarb notb loopne or fistp xlat mov jg test cmpsb add sbb rorb or out insl (bad) loop cmp mov in hlt jns xchg (bad) lods push icebp jg outsl adc mov add jg mov pusha sbb dec xor fcompl sub (bad) push xor pop jg stos cmp call dec popa pop lock adc jg icebp mov testb dec popf adc jg mov mov bound xor scas jg loop adc pushf adc sbbl jg or mov pusha cmpsb xor or jg nop loope mov mov inc dec pushf xor sub sbb sub int and test jecxz mov out dec test inc jg xchg add (bad) stc jg cli iret loope adc mov inc add sbb cli pop addr16 jno or aas inc ss lock jg jne or shrl mov cmpl mov mov sti jg in add adc mov and imul sbb enter vmovlps jg nop mov dec je cli jg les mov mov pop jecxz inc lret jne jg inc add fwait jae mov pop mov inc in mov jg pop and jg addr16 stc test dec mov mov aaa jle jg sti adc jg test push mov in jg mov cmpl pop test subl jg pop jecxz (bad) int and push or jns fdivr (bad) sahf sti pop mov mov sub push cmc lods (bad) ds cld xchg inc jne add xor int cmpsb sbb cmp adc (bad) je pushf jg in sub (bad) gs xor shll jg pop mov int3 jg sub lret test push sbb sub jg sbb or jmp jg jle call (bad) lea add lcall jg xchg inc mov push add shl dec adc test jg pop sbbb aas mov cmp cmp rcrb stos inc cwtl jg and ret or iret pop inc mov jbe inc insb cmp xchg (bad) test xor push (bad) addr16 push mov insb imul pop outsl and push addr16 push fidivr (bad) push aad xchg mov inc hlt jg mov add push stc or mov ss xchg cmp inc inc idivl rolb cld jg jecxz sbb add outsl mov lock mov push mov dec mov popf jg bound xchg outsl inc aas sbb imul xor aad pop inc cmpb jg loope out mov scas repnz jg cmp mov jg or and xor loope xchg mov fadds push fstp adc mov fwait pop mov mov cld pop fs repnz sub repz mov out dec dec or lds or mov jg pop (bad) adc jg pusha xor jge inc cld and or aas push repz sub in (bad) push outsb lds jg loopne add arpl push mov pushf ja adc mov jo (bad) adc cmp scas dec pop cwtl mov pop std sbb push jg inc cmp cmpl and jg stos xlat loop fnstcw add jg aas mov scas xor push push and nop cwtl sbb jg jmp xlat inc jg imul clc mov mov mov push (bad) cmp fs or lods mov das fisttpl jne aam incl sbb inc jg add ds push pop es push (bad) mov mov pop mov loop sbb (bad) loope dec cmp sbb ret cmp jb mov sarb stos sti mov (bad) jbe jg outsl and cmp in mov push and jmp shlb pop cmpl xor jg das mov arpl mov cwtl xchg sub bts xchg mov test cld xchg bound pop and sbb (bad) (bad) inc dec or ret mov inc cmp or imul xchg xlat mov or (bad) fisubr jle mov leave pop lods inc lcall popf icebp fcompl std test xor mov fsubrs pusha mov push shlb jmp leave es arpl xor adc outsl jg out repnz add ja inc aam push mov out dec mov pop jg jmp dec test ds and popf cmpsb insl loope scas jno push es or cmp scas inc (bad) loop jg test scas shll jb mov xor pop dec mov lods mov mov fild cltd jg (bad) sti mov pop jg aas roll inc xlat adcl dec inc in ficoml lcall mov xchg mov jg (bad) cld and scas jno pop adc cmpsb jg loop xchg mov andl xor imul pusha lods cs push jg fildll ret jle lret into aam pop mov (bad) cmp ret cmpsl mov dec into loop jg push pop mov sti sbbl or jg jne or and xchg jg adc loop pop fmuls jg aas xor mov ret clc mov jo aas aas sub dec xchg cmp mov insl jg cmp js xchg adc jg pop push shr aas xchg push xchg mov sbb mov jg loopne add jg jecxz and adc push idivb mov jg (bad) clc mov lods inc fdivrs mov or mov inc push push call cmp dec insl arpl sbb ja test adc adc xchg mov mov jnp pop out arpl lret addr16 mov out pop inc insb push cltd cmp pop sbb mov (bad) dec subb outsl pminsw ret pop repnz mov mov pop mov (bad) (bad) jge jg out cmp sub pop mov cs imul loope jmp push jecxz xor cld (bad) cmpsl pop inc int jae or loopne aas sbb adc leave xchg dec pop sarb mov inc dec bound cmpsb jg and xor jg in das push lock mov push arpl fsubrs mov in daa mov mov es aam inc (bad) jg jnp test aas stos fisttpl dec mov jg jae dec adc aam jo jmp out outsl ss aad pop sti push mov add adc fwait jg push sbb jbe outsb and mov xchg and jns push sub cmp push jg,pt sub popa mov pop dec sti xchg addl in leave fcmovnbe mov aam pop jb outsl outsb jle push cmp mov cmp out fcomps cmpsb imul aaa pop shll test es outsl xor js pop call jg outsb addr16 test mov mov and mov fiaddl (bad) push lcall dec mov and jg or movsb or pop jg pop jecxz and in or inc (bad) loope jg fsubl fs dec mov jg loopne xlat dec sahf mov xchg imul mov xor cmp lret xchg std xor mov fidiv (bad) ret xchg jg enter popa add adc fcmovne (bad) dec cwtl xchg mov push lret sub movsl and lcall idivl out jg inc jo add push je and pop aaa add xor outsl pop insb cmp cli sarl add push sub mov insl jl sbb fldt cli mov or push dec and add jg jmp ja rcl in jg cmp leave jg and orl jg fadds or push lods jl add (bad) xor lods fildl int pop mov mov call sbb test and inc int inc pusha ret cli jno jg cltd repnz cmp pop dec add in sub mov xchg std movsl xchg sahf rclb xlat mov js fwait pop std test inc aas inc sub inc inc aam jg imul jg ret jae push and jg ljmp pop call shrb into mov ja addr16 enter jg out sti mov add pop (bad) adc sub jg pop or and shrl or bound insl subb or inc push insl xor jg cmp xchg fnstsw push (bad) lret in or repnz pop jno cwtl insl cmpsb cmc adc pop mov inc adc add jg enter pop (bad) mov cld jg and xchg inc cmp mov mov loopne in test pop jg dec xor jg or adc add dec cltd xor mov ss mov jp dec sbb xor ret and push mull (bad) jb mov mov mov or sub (bad) sub cmp mov pop xchg pop or mov jg subl jbe push addr16 mov adc insl icebp sahf jg mov aam push and (bad) hlt push inc gs sbb add aam pop pop lock loop aas pop jp stc movl je dec int xchg fild push loope mov ret xchg adc ret jp idivb pop test repz jg xor fmulp or jg (bad) into ret outsl gs out cmpsb mov lds (bad) push cmp in aad jle leave and mov push push push jg jmp sbb lret (bad) fnsave jbe popa cmpl call fldcw pop dec xchg mov jg or lret lahf les pop lea mov and or push cld adc mov sbb int push dec mov jg je pop add push add sub mov xchg mov add jg dec popf push inc mov sub cwtl or jo cmp pop xor dec fwait sub sbb test jae mov xchg aad adc bnd adc fsubs xor xchg jmp push arpl push mov xor sub nop daa xor ljmp enter (bad) jg fmull call in or clc fnstenv loop xor xor pop pop (bad) sti xchg pop pop xchg jg scas lahf xchg sub or imul xor fildll jg aad dec xor out repz out dec test jp jl add cmp mov fild sbb pop or das in aas adc adc dec and into (bad) mov pop mov out nop aam ja enter jg sub xchg jg out js arpl dec fwait and call xor inc dec lods or mov mov stc loope jle xlat cmp fcomps pop and mov dec arpl cli jg,pn xchg or jg push push mov sbb and mov (bad) push pop mov and xchg stc xor xor scas pop pop shrl pusha mov pop fstpt mov pop ja sub aas fadds divb cmpsl or jns rolb mov ja test or aas out out inc or jg inc mov leave xchg mov sub dec adc nop lds xchg xchg or lret lock xlat push sub gs xor popa or mov stc mov pop sarb adc inc sar (bad) (bad) popf rolb jno and les sub outsl sbb ljmp fist inc int3 jg in movb loop ficompl in mov outsl imul es jmp jg enter nop (bad) lret cwtl (bad) cmp lods aas (bad) lret pusha push pop push in popf dec push movsl sub mov lahf jmp js push (bad) in pop xor icebp adc aad jmp add stc test xor jle movsb jnp add jb pop mov ja xchg mov loopne stc (bad) sbb inc lock inc jg dec mov cmp jg (bad) inc (bad) cld addb add jg ja cmp idivb push insb pop and lds repz dec pop stos dec test inc faddl rcrb xor mov push jg jno bound sub xchg int addb cmp stos imulb push int3 adc cs push dec subl lds out pop jg cmp push aas jb test mov (bad) dec sub mov dec dec mov jg cmp je mov jg pop cmp lret jg out or jns push jg mov aas add hlt (bad) xor subb pop fbld add sub (bad) xchg mov dec (bad) in jg jp push cmp ret (bad) das icebp mov int3 and jg pop (bad) sbb jg arpl add stc add test ret jg pushf lds sub hlt inc dec aas sub data16 dec xchg jmp lods pop fwait jb aam aas xchg or outsb js repnz jae mov mov in push pop hlt jg jmp cmp adc or imul out aaa jg and aam pushw jb outsl je (bad) cmp adc cli jg dec and outsl sti pusha test cltd stos popf jg jo inc gs stos mov jae or inc sarl int fimul or mov adc sbb jg js ljmp lcall fistpl jg add mov push lea mov and xchg inc fucomi fst mov icebp cli push mov pop and cmp jg dec sbb pop das loope jg push (bad) cmp pusha push (bad) jg add (bad) pop sarl cmpsb adc into mov mov cltd lcall in fadds jg pop xchg mov loop pop fwait bound jg jns push cmp jo (bad) negb push pop jg mov popf insl jg jae ss sub pop or dec ret pusha inc sbb test mov ffreep in movsb ljmp bound mov sti cmpsb and dec sbb sarb add les imul pop sub inc fs les push inc aad test sarl cmc lds jg int3 sub and cld data16 adc xchg test (bad) xor (bad) jg imul and ljmp das clc push (bad) repnz ja xor scas sub cmpl bnd mov mov jae dec shr xchg or jg loope pop adc sub leave add jg jb jge dec sub pop stc test push mov dec dec mov push mov lret mov lods xchg pusha icebp dec pop loop xchg inc std mov mov pop pop stos stc in xchg jno push inc push sarb cmp mov pop dec push shrl inc or cmp inc scas lea pusha vminpd pop lods mov cmpsb add in fucomp cmp movsb push (bad) sbb push leave jg out pop or or loope setae jg mov and mov ds imul jg fsts pop jnp je jg js jle pop aaa jmp inc or jbe,pn dec sub cmp dec or jg loope sbb xchg cmpsl sarb imul lcall xchg adc fwait adc in enter jg inc nop cmp adc jg sarb loop in xor push mov stos ret sbb dec inc xchg jg mov mov (bad) push and xor ds divl push lcall repz push (bad) aas ja mov je pusha addr16 repz mov hlt or add sub shll ror mov into ja hlt sbb jne scas out stos pop sub xchg and imul or ds (bad) and jg xchg stc (bad) es out insl idivl and mov rcrl jg mov ficom pop mov pop sub cmc (bad) xor lods jg add cltd jecxz xchg xchg ret in jbe loop fwait mov ficompl push leave aam mov jg in mov push jg cmp sbb aam jg inc pop mov jg aad repnz stc in xor mov mov jne push jbe enter loopne into pop xor jg push xor (bad) pop leave xor sbb mov in push stc sub jmp jg bound in scas ja pop pushf cli int adc push scas mov mov js pop movsl push mov daa jg roll stc rcrl xchg (bad) in sbb popf jno pop jbe jg mov out sub jg sub inc mov push sar dec adc jg in lea mov adc movsl popa cmc jg shll inc sub jmp mov xlat mov popf das sub addr16 jg stos mov xchg cmpsl inc jne mov dec shll out fsubrs les push dec or push cmp fistpll xchg push ds in fwait clc adc inc sbb dec or outsb aad imul pop cmp inc sub sarl mov lea movsb cli jne out pop mov pop lea cmp push jo loopne mov hlt ja cli sbb jg (bad) scas xor in (bad) jg shll jg pop sbb roll leave mov dec mov loop mov pop inc test (bad) sti imul ja clc inc addr16 or sub cwtl pop aam ss jg hlt add jg jge jp inc adc (bad) (bad) insl lret jg,pt cmpsl jae cmp test (bad) xor gs jbe jg and cmp inc ret popa pop xlat or add lret cmp push (bad) jg cmp xchg dec lods jp and xor test dec ss pop push and jo stc pop imul adc mov pop loop icebp sti loopne ja sahf inc add fsubl out arpl mov jns lods mov dec mov pusha mov andl mov outsl push xchg cltd push push lret ja outsb fimull mov mov mov add pop mov mov dec xor jmp cmp hlt loope sarb and mov clc shrl or in jg pushf mov push push mov jg rorb xlat ds mov cld scas sub bswap decl mov jg jl icebp imul pop sub loop push lcall pop add mov mov dec imul btr rcrl jo leave jg cmp mov pop or jg and call jg outsb lock daa push aas jmp dec int3 push sbb inc push cmpb repnz sub cmp popf iret into dec stos add cltd imul (bad) mov mov cli popl jg push pop adc push inc mov mov inc mov addr16 jg jb ljmp push push sbb jno iret jg daa push sbb out fdivrl and adc or pop mov mov scas jg hlt (bad) call cmc add out mov cs icebp inc lahf outsl movq lds jp jg in mov mov pop (bad) and out ret xchg mov imull jnp into jg mov mov (bad) fidiv push or popf mov adc not xor jecxz sahf aas lock inc adc cmc inc jns jg ljmp jg (bad) inc mov mov sub jg xchg inc in pusha inc icebp popa in jg mov fs lock xlat inc ds jne sub xchg aas and test pop jg ret outsl lods jno and push push rcrl inc or push mov push jecxz jmp inc cmp (bad) fwait cmp outsl cmp push and jns mov xlat ja jle out fnstcw jg cs jmp shlb cmpsl mov inc adc in aam cmp inc jg xor pop xchg push inc adc addr16 jb jg cld clc and or dec cmp aas sbb xchg sub ffreep jbe in xlat add and or cmp mov shlb add jo cltd aas and and mov outsb loope,pt add cwtl xor jg and test fsubr lods fs pop cld test inc sbb jg es out and mov insl jg or push mov mov fstps xchg xor xchg aad cmpl movsb lods sahf scas and jg jmp adc sub es rorl xor push insl jg mov or (bad) cli mov cmp test add fwait pop xor mov jg repnz insl test jle pop loopne ret cmp testb rcrl sbb and sti lock (bad) dec cmp loope int sbb jg sbb cs (bad) mov xchg jg in dec test loopne inc sarl dec mov mov push (bad) jg out fs xor repnz int jb sub adc sbb xchg inc push leave ds jb and mov outsl clc jo xchg fidiv addr16 push mov test popf scas out sbb sarb out mov pop xchg (bad) push jg xor lret push adc loope test hlt es sbb mov xchg sbb sub jne dec mov pusha pop es adc mov and xor movsl jg dec add pop jg inc shll (bad) jae sti cmp dec inc cli cmp pop outsb add xchg imul lret cmc add inc ds mov in mov push psadbw std jno cmpsl aad xor jg loope push out mov out or mov aaa jmp in jle cltd movsb jg notb mull push fs inc jb or rcrb (bad) pushf je fs inc push dec dec into popf mov (bad) mov ss loope sub mov fildl lods jp arpl jg or daa and cmp cmp data16 js jbe ret push pop dec or jbe ds cmp mov inc jle xor jg roll push dec insb pushf pop inc mov inc dec pusha daa fwait lock jg mov sub jg fiadd inc cld sbb jg push pusha push je xchg adc bound stos cmp pop push addr16 mov (bad) arpl push (bad) jg jo jno inc (bad) insb jg (bad) movsb or pop pop loope jg out idivb or (bad) jae xor cmp jg rorl pop xchg and mov stos push jns cli mov pop xor pop arpl adc mov cs daa dec mov ja push test jg test decb lods pop push jg add add pop test repz cltd sahf es jno push (bad) push int3 jg (bad) gs and cmovae jg cmp lock jb xchg push xor fistpl movsl jle sub insl aas decb jge adc and pop jp icebp cmp xchg jg fucomp rorb (bad) jg lea fbstp mov lcall fisttp mov dec jl (bad) mov jo cmpsl adc dec jg xchg in jnp arpl mov mov jle or push das ret sahf repz into sbb push inc inc jge sub insl xchg or mov mov push add out jg jecxz push into mov fistpl dec (bad) or rep jg cwtl nop cmpsb (bad) cs jg cmp (bad) cmp cmp insl enter push jg fisub push jg out fmuls inc std jg adc dec mov sub outsb jbe adc dec daa aad pop jg xchg cmpsl sub lods push jbe mov inc cmp and jg test dec stos jg cs jp aam cmc and jg cmpl sub sbb dec test pop mov sbb cmpsb out dec pop push xchg jg xchg cwtl xchg cli adc rcl outsl das sub cmp or push cmp sub adc jae (bad) sbb pop shlb bound push jae cld mov inc inc mov mov cmp imul leave jg fldl cmp jg sbb xor inc jg mov setnp test xchg sbb cmpsb ret repnz xor int3 pop loop lcall push jb cltd inc xchg popf mov mov mov mov xchg dec mov outsl xchg int mov pop and jle inc inc xchg jg pop fnstsw mov mov mov jns mov pop lea je and jg dec mov popf pop mov cmp bound leave imul dec call cmp jg ds mul mov jg push sar mov adc iret and mov cli and mov xchg mov and jg sbb out test push jg ret sub out xchg mov mov idivb sbb add fistl adc dec mov mov cmp imul clc jecxz dec adc into and and dec push in jg (bad) adc jns or std mov xor sbb sub push sub daa stos lods mov xchg jbe arpl cld and jp popa xor popf xor addr16 std mov jg cmp add (bad) test mov pop test je push sub cwtl jecxz pusha int jg,pn jo mov movsb fs mov push out dec and mov or aas mov pop sbb dec sbb jg jp imul cmp (bad) pop rcll sbbl (bad) imull ss and aas call adc ret mov xor das sbb dec jg hlt sarl add dec xchg xchg pop fwait inc cs adc jg and mov clc dec ret inc test push das rorl xchg lcall mov xchg pop pop xchg and sahf xlat sbb push xor imul sub into jg mov push jns (bad) out repnz pusha jg std cmpsb xchg adc aad popa fucomp mov inc cmp insb jge jg pop fldenv stc sub sub enter mov pop fild test pop inc ds jg jbe cmc stos mov cmp mov sub jp cld (bad) shr add push insl ret test ficoml mov sub out aas and addr16 aad pop iret jp jg outsb stos xor pop mov fildl in test sbb out sbb je and (bad) jg fisttp pop cmp xchg out outsl pop cmp rcll xor jg es pop imul hlt jne prefetcht1 dec push or cmp and mov cli stos fdivrl push push aad loope mov lea jg pop cld xor inc push jg sbbb lds sbb adc sbb sbb lret popf js dec xorb shrl (bad) cmp je mov dec pop dec push jnp jae sahf mov ja das mov fsincos cli adc scas ja clc aas rcr jg jb dec or cli xchg jg (bad) push es int3 push jg xchg mov dec adc jg adc scas lea ja xor ret xorb es testl icebp xor mov cltd (bad) mov inc (bad) cmp neg add into pop mov dec stc dec sahf aaa mov mov mov mov cmp inc sbb inc push inc jge mov out jo mov jl pusha (bad) data16 test imul idivb pop jo xchg jg adc shlb jg lock outsb cli lret jg ret jge adc js mov outsl add iret roll cmpsl push and fwait sub scas mov sti pushf sbb adc push bound (bad) idivl arpl push jg and das jg and lahf sarb lret (bad) fwait push leave test xor cmc das push out sbb adc jg js xchg xchg jae push jg inc in lea jb jg cmc pushf aam nop fistp imul out je dec jmp incl stc sahf (bad) (bad) cmp jg bnd aas mov jg inc adc pop mov je mov pop cmp int3 jg sarl addr16 add mov dec jecxz pusha aaa (bad) lds pop mov push jg pop cmc sahf cmp dec fidivrl shll (bad) mov jl dec cmp repnz popfw leave xor inc sarb loopne and or ret bound or dec (bad) jg mov push jb jg pop (bad) scas pop push mov push add int xchg (bad) (bad) mov xor sahf int3 cmp out inc xchg lcall sbb push (bad) dec icebp jg fildl divl bound jb jae jp and pushf sti lds mov ficompl stos inc je jp shll int test or xchg mov es dec lahf loope cwtl xchg push mov pop pop adc and add jg (bad) and cmp gs push loope jg add xchg (bad) jg fnop push cmp (bad) in jg push (bad) je sbb stos dec pop adc ss jg fmulp push (bad) loopne push jg mov pop xchg mov lods dec fwait fs jg jp mov add push jg push inc cmp js fbld jnp loop jne outsl jg xchg mov xor xor mov dec jno aas push dec jg push mov out jg aaa cmp int3 or mov pusha (bad) dec stos jg xchg das mov jg mov pop test in or fwait pushf mov lcall addr16 das mov js pop int jno mov or outsl fdivl out sarb in and aas aam cmp cmpsl sbb jg jl cld ljmp (bad) pop dec cmp cltd push ja out in mov dec imul lock mov addr16 rol test mov fdivr dec ljmp scas jne cmp out lret pop or sbb add aad addr16 jg lods mov jg (bad) out (bad) push pushf xchg and lock dec jg nop pop push sbb cvttps2pi pop mov insb outsb js inc mov cmp sti dec mov in lahf lahf aas out push jae sub mov xor cld sub or into dec sub lahf shrd cmpsb dec flds aas mov stos shll movsl ja sarb cmpsl stos adc cmp mov iret repz adc add insb add or fadds jmp inc test jg (bad) mov pop mov jg nop xchg stos mov push sarb movl aas sub cltd mov mov (bad) jb loop rolb mov enter inc sub sbb gs mov lock cmc nop insb jns mov scas and cmpsb data16 enter sbb jg sub lods xorl mov push jg fisttpll dec mov inc jnp mov xchg sahf or roll pop jg enter push sub stos fnstsw out jbe pop pop mov inc cltd out lock dec ss and out dec pop into mov jg sti aam or xlat sbb jge lock jg aam imul scas jg jae adc or bnd xor xchg mov jg dec lock (bad) cld xor minps std jg popf mov mov gs fxch push mov xor icebp lahf in jg cltd daa in and push sub test inc ss mov inc jg xchg sti pop movsb mov xor xor inc adc data16 sarb ret mov jg sti push scas push push mov dec mov push sahf jecxz jg cli icebp mov mov sbb and dec ja sub jg daa test adc lea mov call or in test sbb lds jg mov xchg jg mov stc out push sbb fs rclb jg repz fwait jae sub jg in jo and mov jg push sysenter (bad) mov dec inc pop add inc hlt jg cmp insb push ds push in inc outsl lds nop js xchg dec dec adc jg ficom cmpsl negl mov sub inc lods (bad) jmp neg sbbl xchg jg xchg inc inc sub mov jbe sbb mov jle pop leave push dec out dec mov push int add bound dec (bad) xchg fwait push into jg,pn sbb mov mov cmp lea jg sbb mov cli pop imul fdivrl xchg fnstsw cmp fwait imul pop sub sbb aas ja daa sub pop jge mov (bad) jg dec mov jl cmp push test sti adc (bad) ss (bad) push pop fwait push push repz mov test add mov fbld pop mov mov jg shlb imull inc pop movsb jg dec pop ja jle dec stc pop pop mov hlt mov sahf pop sbb mov xchg orl sbb xor mov movb psllq xchg loopne mov xor cmp rorb aam add ds mov mov xor or push ljmp scas les sahf or jg movsb (bad) dec jmp je (bad) sbb pop jp test mov clc std lea push jg (bad) pop or lahf add lea out adc mov jg xor out cmpsb sarb fwait into sub mov fimul les pop inc add and jg mov adc cltd inc push xchg and jae jg scas or jg outsl gs and inc and sarb test lahf test js dec imul xchg ja fidivr jo add jne lods jg (bad) lret nop sti hlt je sbb sbb call xchg and jg mov xchg add call sbbl sbb jo hlt js movsl and jg dec fmull xor jg cmpsl orl pop sub push inc addr16 pop stos push jo out push mov in dec insl mov and push push mov mov xchg xchg inc or xor pop mov jg jecxz xor nop scas mov cmp mov jg rcrb jnp xor xor ds mov sub lret jg push or mov add add dec icebp test lcall cltd jmp ljmp frstor jg sti mov mov and leave (bad) xorl out das sub xchg pushf ljmp xchg adc add mov push jg fildll or jg jl fdivs fs dec outsb aad ljmp push mov jp fdivrl sub or stos pop sbb lods and jg inc add pop pop push aam fdivrl cmpsl jnp aaa pop lahf sub clc (bad) iret push mov fwait int3 addr16 dec mov push out dec sbb pop aas jl out ret mov or mov stos inc cmp push mov mov scas pusha fdivrl sarl fs sub inc mov ljmp inc nop xor cltd rorb ja out jg in jbe negb sub (bad) outsl jg int3 jecxz nop or dec sub or jne ffreep sarb mov sub jg mov jecxz scas jns xor and roll sbbb dec push xor lods mov dec sub (bad) jl pop inc (bad) sahf outsl mov ret jnp dec std push mov out dec pop sub icebp or sub push mov shlb into das je adc nop ja and in imul ret jle push mov imul addr16 adc lock xor (bad) icebp xchg daa loopne jg cltd ficom jg es adc xchg jns xlat add push sbb xchg lds gs (bad) mov push insl cltd cwtl pop jg sbb icebp mov das jg pop push xor jne hlt jg cmp ret pop jg (bad) xchg mov pop adc jg push dec out lds mov sub inc loope cld repnz test xor pop int mov adc sbb sub cltd jmp imul adc fistpll (bad) jmp (bad) pop ds jmp pusha test jp mov mov les jle sahf lods (bad) gs add mov mov xchg mov push js xor hlt loopne jg shlb (bad) fadd (bad) dec jg push lcall je inc pop (bad) or aas sti jo in cmp jg mov jbe inc iret aas and ret test js sbb adc addr16 sti dec cltd popf jg hlt sbb (bad) inc dec jl pop in sbb push or mov movsl mov push mov dec pop fldt jno lret repnz sbb mov testl push dec dec mov sub testb int3 lods push push inc and cli xchg and cmp push jg push jmp fiaddl mov jg jb pop cmp rol repnz and sti jmp push lcall inc cmp push mov pushf jg (bad) or mov add cmpsl fs mov inc push fsubr and imul inc (bad) scas sbb xchg into loopne loop rol fdivp push data16 mov mov pop dec scas and fdivrl jg popa (bad) call push sbb ss xor stc dec nop mov dec and cwtl jae xchg mov ds jg hlt icebp in adc or pop cmp outsb fisubrl (bad) cmc xlat adc mov shll and jg popf icebp pop int3 fsubp ret out mov in cmp mov lds arpl cmpsl imul (bad) bound and mov mov les loope iret push mov movsb sbb std mov sub js nop cmp mov pusha push jg fsubl testl xor mov lcall jg jge jb cmp jg mov sub push pop aas imul (bad) jmp adc push sbb inc push xor ljmp in pushf or std jbe xor scas aas xchg jge push lds push in sub mov or jg mov cli ds popf and dec (bad) (bad) push xchg aaa pop push fldt jg cmc lock sar jg je stc mov cmp mov in inc inc jg inc adc addr16 ss lcall dec fstl adc insl movsl xor test incl loopne out mov loopne sub hlt fcoml stos enter and or push fimul jmp push int mov dec ret pusha les fimul repnz ljmp mov mov xchg dec xor repnz pop mov jecxz inc adc (bad) jo mov ljmp inc stos jg repnz imul loope es lods mov sub ret shlb push arpl sbb xchg mov mov dec sbb sahf mov les pop ror outsb fisubr pusha in mov mov inc mov pop adc ss push jb mov adc and jg (bad) (bad) call xchg or jg cmp lea or mov and add insb push dec mov (bad) (bad) jg xchg jecxz xchg cld (bad) mov mov mov adc pop push push je sbb mov (bad) dec dec out fimul lret into mov cwtl adc and xchg cmpb cmpsl or jbe xchg cmc pop add icebp cmp mov mov sbb mov mov add xor or jae jg sbb push jg push pusha and jp hlt mov cwtl sbb dec and jg pop jge cmc cmp mov inc jnp popf mov call in dec pop push jg inc cwtl mov adc in push jg (bad) mov rol jmp std sbb cli aas or ret arpl sbb pop jg jne (bad) mov pop jg mov add jno pop jg into stos cmp mov push inc cmpsl fcomps sbb jg ds negl mov call fldenv jg cld adc inc cmp daa cmp insl scas push cwtl push ljmp (bad) jg movsl pop xor dec jg jne cs sbb mov lea adc mov addr16 push imulb mov insl push cwtl pushf pop mov sahf cmp or jg (bad) ja jne idivb insl pop and add js mov sbb mov jg rcrl adc cltd (bad) into pop jne lea imul and adc stc enter je jg mov sub adc sub jg inc cmp jge scas (bad) jns fild ret sti inc push loopne addr16 jmp jne test insl mov fiadd jbe rcrl ljmp jg cmp (bad) js je jg lret adc roll push imul mov mov lret out xor and jmp sub jne adc push push rorl outsb lret fsubp xchg cmp cmpsb outsl sub jg (bad) out pop les lock mov lods pop fs and push sbbl mov movsl stos jg imul jg cmp repz or sub inc push pop jg ret push cld daa push cmp jg aam sbb gs sti and inc popf cmp add sub xor test jg jp aaa imul mov scas inc outsb jmp lock jmp inc dec test nop ss mov push pop stos sub mov sarl inc pop lahf push (bad) pop js pusha dec out jg ljmp arpl cmp sarl (bad) scas sarb pop fs jg rcr xor mov inc mov aas dec (bad) pop sahf fstpl aas movsl lock stos test mov and mov pop std add pop dec add inc out ret xchg jg ss fcomps stc lret jg add jg mov jecxz sub stc jg ds out or xchg jg lret xchg cmp rclb jg cmp and sbb mov repz movsl jg inc mov fiaddl jg jne push jg cltd pop pop push cmp cmp fwait idivl cmp mov mov or xor mov push pusha jg mov call jg xchg inc sub xlat or inc jg xor dec and cmc add sub jnp jns int3 xchg xlat jge pop das outsb test push ret jg fmulp pop inc push lcall cmp cmp (bad) xor adc clc cmpsl xchg mov cmp fidivr mov test aas jno pop (bad) pop insb ret dec and cmp int adc cmp les jg mov jg mov cmp lret dec jg ss mov mov pop cmp pusha mov inc scas push xchg dec mov and call jg movsb cwtl or cmp outsl jecxz int3 jmp push (bad) aas repz sbb push adc jl add (bad) faddp sarl je fisttp in ja shr sbb push xor xor cmpsl popf (bad) lcall mov mov roll sti or mov inc push scas (bad) dec jmp out lahf cmc dec mov dec cmpb adc aas dec or daa pop xchg lahf inc call xchg test vmread jg aad clc dec outsl sarl call mov insb lahf out dec pop dec jg rorb mov mov jg pop pop (bad) sahf add ljmp or pop jg xor pusha mov jg xchg mov lret int3 loop pop mov popa adc imulb divl fmuls sahf (bad) mov adc inc out mov xor imul in dec sbb or jg pop (bad) lods xor cmp js int in std cld jg mov mov subl outsb mov xor sub lret jg outsl mov jg or insl (bad) ja jb sub sub inc aaa mov push push add fs jg mov inc cmpsb mov mov xchg and cltd mov xor mov cmp jg icebp xor sbb jg out ds jg mov push cld xorl movsl std pop out pop jge mov lahf jg dec cmp jb test in push ja xlat mov sub arpl out mov sub jnp adc xchg push dec in cltd add js ss pop pop shlb jns and mov out mov jg cli jl mov sub pusha push ljmp mov roll jg push xchg pop or sbb lds sbb cmp cmp sarl imul and mov jne pop add fstl cmp and in sub scas insl sbb jg pop ljmp icebp repz aas sti xor dec jno mov jg aas cld mov (bad) leave xor out dec sbb xchg jg fsubr es xor (bad) jnp jge js cmp dec mov jno out repz jg outsl sarb jbe sub xor cmp cmp and in adc push outsb sub push jmp jg add push test and xchg in mov ja xor inc xor jg jmp xchg mov aas pusha cmp inc xchg mov mov les (bad) repnz mov lea pop push out arpl stos mov je xor jbe imul adc cmpsl arpl push jg cltd mov sub mov pop xchg cmpsl mov inc fstps sbb jno aad sbb orl dec rorl mov pop pop je in fmul scas es sub mov jle mov ficoml cli loope (bad) pop push and jge les arpl das push inc xor push sub push xor daa xchg sub jle (bad) mov les add mov repz inc stc pop or mov xchg cli out imul cli jg mov lea dec xor stc fildll cltd loopne jns jmp daa inc push mov insl sub mov xor jg cltd jecxz out fwait jle jg arpl (bad) aas push mov ficompl xor fs add adc xchg mov std and sti mul enter popa fild jg lds jo int jge adcl jmp icebp xor sahf mov (bad) jg xor inc cmpl mulb jg mov sbb jg cs lea pop xchg mov fs jae pop mov cli lret mov xor jg (bad) out jge jg sub movsl jg pusha pop in (bad) or data16 sub jg fiadd sbb cmp call dec lret addr16 mov cmp hlt lea int push pushf lret push adc add es sbbl movsl jg lock mov mov bound dec inc adc loop out jo mov sub pop push sub xchg jge lea addr16 mov je xchg xchg or pop push mov int xlat and jg push jmp cmp dec aas dec cltd inc mov ljmp lret scas pop fidiv (bad) lods xor jg (bad) mov rorl add jg cmpsl mov jg fsub insb addr16 push ljmp cmp xor jg cmp test jg cmc rol idivl dec (bad) cs dec sub jns idivb cmc sub iret lods push dec ret jg or lods mov test leave test sbb sbb lcall aam (bad) jg push pop or mov xchg jg (bad) loop add sub std out jle shll add or jbe add (bad) hlt mov dec shrb pusha push aas popf pop mov icebp xchg jg xchg jne xchg cmc pop pcmpeqd xor jg push bound jae mov jg cltd mov insl mov jg or arpl jmp or push inc jg lock jg loopne and insb movsb mov jo or cmc and scas sub xchg fcom imul mov repnz xchg jae ja adc ds mov mov stos jecxz scas test ds push (bad) shr aas xchg or pusha pop fimull sub jg daa fdivs aas loope hlt push adc in bound out andl jg push aam adc sub inc push lea add and imulb mov or mov dec and jae fwait add (bad) inc imul stos je mov mov push bound mov psubb fdivr jmp lods mov xorl inc mov dec cwtl and pop scas js inc sti cmpsb pop cmp pop popf data16 iret inc jg (bad) xor mov lds inc pop xor sub addr16 add cmpsl jb xor jg mov push lret bound addr16 inc mov inc xchg sbb inc rolb pop sbb in popf pop sub mov outsl rcll mov and or push xor aas jg out hlt (bad) out subl push sub cmpsb pop mov popa jl pop add lods jg dec in push jns jno mov jnp jmpw mov inc (bad) mov roll fidiv mov cmpsl cmpsb enter dec ret jg imul les popl pop mov bound insl or out cmp add jmp jmp adc sarb (bad) cld das outsl xor mov (bad) pop lock fidivr jp xor sarl imul cmpsl jg inc adc adc jg pop es cmp cmpsb mov test mov lret dec jg xchg icebp cmc jecxz mov inc sbb cmpsb or dec das pushf imul push add and jg or in bound mov sti iret push bound jb lea inc cmp jo pop hlt test or jge mov loopne xchg stos stc push adc dec add jle mov mov imul and adc cmp aas dec mov add arpl mov fwait inc jg addr16 sbb sbb fidivr pop xlat in inc dec add (bad) xor mov (bad) or adc stos dec outsb add test jno leave nop loope and sbb cmp nop out shr dec (bad) sbb jmp cmp ds and fsubp mov lods pop out dec mov mov push jo adc mov mov pop sahf test mov pusha cmp push addr16 hlt sub inc mov or xchg andl push mov sub and mov add pop jg mov push test (bad) sub cld cmpsl add (bad) and mov lcall fldcw mov jl stc (bad) out push cs cli jg xchg mov jb adc das inc into jg sahf push sti dec cmpb insb rcr loope pop sti push xor push gs (bad) jg lret fdivl scas xchg or add lahf js fwait insb cmp stos jno jg jp out mov loopne mov push shrl push mov xor sbb ljmp adc stc inc push mov pop push pop pop sub sub jg or aas cld jb jbe mov ja fdivr daa sub cwtl das mov jle aaa in xor jg in loope je leave adc pop insb ret fmul mov rorb jg sahf (bad) mov aas ret jb mov inc sbb sti ljmp jg cmc inc pop fnstenv push push xchg mov jbe mov mov sbbl int3 push cmp mov lret xchg xor bound vunpckhps xchg push mov cmp pop int xlat jnp sti (bad) fsts movsb mov push inc scas iret jmp push cmc repnz movsb jg or push stc adc mul mov test jle dec jp test gs sbb sbb jo aad test sub xor mov roll arpl pop pop jl popa cmpsl sahf pop xor jne or (bad) idivb or sti loope push test push lods sub sbb mov push rcrl sbb jg int test stc add jg in mov daa mov scas popf xor xor adc dec xchg pop xchg dec dec xlat mov scas (bad) pop mov xchg insl jbe (bad) negl pop loope adc inc out (bad) int or imul stos jmp in push popf inc cwtl jo jg xchg dec ds jmp and mov mov pop mov loop jg mov sub cli mov jp scas jne dec inc jl and sub pop orb cmpsl test (bad) ds jg mov in jg jne shr pop pop aas movsl jle pop inc add jge cmpsl (bad) jo xor cmc idiv popf dec aas sub test dec (bad) jle jnp fdivr sti lret jg push iret add arpl sbb pop std mov lcall mov mov inc pop scas sarb push sub xchg movsb cltd jg xlat rorl jg inc push or fsub out adc adc enter data16 jg cmpsl mov push in jo test inc sbb dec std jno lods mov cmp pop outsl inc jbe xchg jg in (bad) xor adcb push adc jg es add and cmp dec add nop mov mov aad hlt cmc add jl sub jg inc jmp and jg xor xor jg adc sub out ret or jo or dec aas adc arpl inc fisttpll insl mov xor js jg stos adc sub cmp mov mov cmp sahf mov (bad) mov repnz lock js push sub xor dec mov int3 add (bad) scas test gs cmp fistpll data16 outsl rolb mov jge mov xchg loop push je nop sbb repz jg xchg lea imul mov ret push clc jg (bad) icebp and popa aad jg dec push je insb xor lock pop mov les push pop aas inc js lods sub ds pop mov pop in sub xor jg add lods lcall jl jp icebp (bad) notl xchg inc push fadd and fstp arpl jg mov mov and shl dec jg fidivr test adc imulb cld loope jg cli sub (bad) clc xchg aas outsl jle cltd xor and and mov add stos (bad) lock inc (bad) jg sbb or jg loope in imul push adc leave test fdivrp jmp mov (bad) mov sbb frstor enter pop lods mov pop outsl lret jb out mov and negb aas and xlat mov pop add js jg sbb imul int3 or inc jg (bad) cs xor iret cmp xchg test shlb mov sub sub push mov xchg jg pusha lret fistpl inc xchg lea daa add cmpl icebp cmc push jle outsb sbb mov mov cld jg repnz inc hlt iret mov jecxz mov xlat fwait dec fildl jg jno loopne jmp cmpl lcall mov divb decb add mov xor push (bad) into mov pusha lea aas lret jg or insb leave sbb scas notl cvttps2pi ljmp mov and dec mov out inc push lds inc push xor movsb xor adc out push sti dec js jns or les mov jg add mov imul mov sbb scas pop lahf mov jae (bad) lods jmp sub loope aas (bad) xor adc sub push jge cmp hlt daa idiv ljmp enter jno pop xchg (bad) jo xchg mov and mov jbe es jg and movsl sti adc jg testb sub and aam adc jg cmovne push movsb (bad) fmul mov (bad) out jg mov inc xchg pop lods idivl push mov mov jg dec sub out pop dec (bad) jg (bad) jae and lods jecxz mov int3 fdivrs mov push dec jg fistpl clc sub dec jg outsb bound jg lods lods xchg jne ljmp (bad) jge pop xor outsl loop and (bad) ja jbe rcrl gs lods cmp fistpll jl adc std jo (bad) jg xlat stc push cmpsl cmp mov scas fistpl rcrb pop pop push cmp jg lahf shll xchg idivb hlt dec dec sub jg push or orl sarl lret cwtl dec jg mov cltd add mov pusha mov sbb push mov lcall pop ja mov leave fs xchg pusha adc dec mov lahf (bad) lods mov jbe outsb js cli mov inc xchg inc jg lods mov fimul sbb outsl or stos rorl fnstcw ficompl out pusha sub jg mov mov aas mov xchg out fild cld pop jg das in add jmp or dec aaa push dec cmp and xor or mov repz fcompp mov int sub adc or jg xchg mov aas orl addb push push jns cld dec repz fistpll mov dec mov push jg (bad) push mov dec inc sahf mov xchg push xchg jmp adc pop rorl (bad) jg icebp add (bad) adc cwtl jnp push push mov pop pop mov (bad) std jecxz sti out loopne cmpsb mov xchg js inc cmp mov test push mov clc das repz std jg out and inc das cltd mov push sub dec pushf pop std cmp aas arpl xchg xchg or add jmp jne mov mov add iret aas call stos movsl out mov mov (bad) jnp pop int3 and xlat jl dec or out lods push mov aaa fwait mov cli out sub orl (bad) fnop (bad) xor jp sbb sahf std mov (bad) jg jns imul (bad) dec icebp xlat int3 xor sbb int ret sub out sti pop xchg mov and in xchg movsb jg imul imul or or or mov mov jg pushf scas (bad) mov sahf sub add mov dec push cltd mov test fcmove pop decb jnp imull outsl movsb xor jge ret push jo (bad) pop push jmp xchg pop sarb inc push and les ja into cltd frstor sbb mov sahf mov jg iret clc add jg scas dec cmp jb ss test adc mov inc inc jns aaa in xor fstps fistl sub adc xor jge sub sbb add add mov bound cli jbe xchg pop in cmp pop jg sub (bad) call into out shrl and (bad) cmp mov pusha sbb clc out ss pop cmp shll imul dec rol (bad) aas pop mov call mov pop push mov imul (bad) aaa int jne popf dec mov data16 out push jg imulb ret popa out fmuls inc push jg adc std push test jg sbb popf lret or (bad) in push sti pop addr16 rorl cld icebp imul aas scas cmp mov mov sahf aad add in or sbb push rcll aas mov dec jg rcr lret les pusha sarl jl and in sti imul (bad) dec movsl test mov and out mov mov inc jbe (bad) jg jae mov cmp mov shld imul jg jge pop mov insb xor into jg imul arpl xchg jb fs ds fldl jg (bad) hlt in adcb outsl push fmuls inc xor dec mull js fisttp xorl stc push jno xor jg mov jae sbb cld jg mov les (bad) cmpsl adc jmp mov jg jnp cmc arpl xor mov and ja lahf jae icebp push mov pop mov push aas imul fidivl cmp imul xor mov xor lcall pop ds in add aas cld pop mov jae jmp push jecxz inc test ret jg ret and adc mov push lea (bad) aad adc xchg bound mov xchg sub outsb and cmp test aas loopne xor pop outsl je jg or mov iret outsb pop jg mov xlat or scas jg jns xchg push hlt jne aas in lock aam jmp dec fnstsw adc jl std jg sbb stos jg ret enter and jg mov mov add clc rorb and jb nop jg lret loop addb pop aas sbb (bad) mov sub mov cmp (bad) aad sbb cmpsl sub sub insb (bad) fisubrl mov cmp and es xchg dec cmpsl mov cmp push fs mov jb mov enter sbb in push jle fnstcw ret xchg inc xchg jg sarb (bad) add mov jg sub push pop aas jae jo push stos cld addr16 ja add pop fneni(8087 daa es (bad) sub push inc xchg out mov outsb adc jg push and aaa rol jg cmp cmovnp jo jg pop pop jmp dec fsubp jae cmp push lods js xlat out sbb mov mov aam mov out ret jp lret push (bad) jno mov andl in xchg arpl pop sbb sub sub xor xor insb mov aaa inc cmc jg mov (bad) pop jmp repz ja lret jge mov pop sub (bad) int loopne inc (bad) jg sub loopne lcall popf jg xchg pop and cmp je ss or lods inc and mov aas jo xor ret popf push jb sbb subb xlat mov mov std data16 ss in mov sti add pop pop sahf ret andb pop mov nop div mov lret adc jg jbe out flds or je pop dec mov mov cmp test nop leave addr16 out je jg sub jp sti imul movsb sbbl jg rcrl dec jg fwait mov xor mov cmpsl push add jns repz ja push inc pop sub sbb xchg aas lock cmp pusha mov jg sahf mov cmp lret cmpsl divl pop addl jg xchg pop pop inc int3 xor xlat mov outsl ret mov outsl or inc push jg sub (bad) mov lds inc test dec outsl xor jns out jne xor mov jge lcall movq and mov push jg loopne cmp mov adc xchg xlat push or cs mov lds push or nop pop inc jg cltd pop jbe sarb aaa faddp cmpsb pop in mov push xchg cmp int inc inc and inc lock testl sub aaa std push sahf dec cmp jae push cmp cmpsb lea and push movsb jg es in xchg inc and insb cmpsb dec jmp sti jl add lcall add dec in sbb mov add push or add push cmp insb mov ja stc jl lods adc pop push jbe in cmc movsl jg push (bad) mov mov (bad) cld fld test xchg (bad) xor jg sahf cmp and mov jo mov (bad) and outsl sahf mov mov cmp ss dec cmp jnp pop mov dec idivl adc js in pop push push das fwait dec (bad) aas leave mov outsl pop xor inc lock and jo adc xor ret push push dec pop js fnstsw sub mov ret inc jnp sub daa jg adc adc loope leave mov sbb fistpll aas sahf sub mov mov jbe lret addr16 les fisubl aaa loope mov addr16 aad mov mov mov add mov mov push jg pusha int jg sbb ljmp pop jo fldt cltd in jg cmpsb pusha pop push xor jno jnp cmp cli ljmp outsl into inc iret jg push daa stos lret (bad) loope mov addr16 out or test cmp lret mov jne call and je fadds js rorl add jmp int3 jno ds sbb sub inc test les jg cmp push adc jmp jg mov jne jg arpl mov pop add cwtl (bad) and lahf into push aas inc add mov (bad) iret jg (bad) or sbb sbb rolb enter xor addr16 (bad) mov mov cmp jg sbb jp sbb jecxz xchg jl add ja xor (bad) dec scas daa push xchg mov jne adc jb dec mov lahf or lds mov cmpsb push mov cmp add xor pop (bad) pop push xchg fisttpl mov and cmp std jnp out push push in dec inc inc aaa stos mov dec adc push daa push (bad) cmpsb cmp xor sbb or jp insb xor mov icebp adc mov sub pop repnz mov inc mov pop out (bad) paddsw arpl mov jg add test sbb pop xchg in hlt inc and and mov mov fsubr out jg xorb lods xchg je mov bound inc out jg dec mov sub into adc adc mov inc insl pop out jg (bad) movsb pop xor or and inc sbb sub add ret mov adc mov test arpl add dec mov adc daa xor inc adc icebp jecxz movsb enter jae or outsl pop lcall into andb mov jg xchg mov cmc inc lret jg sbb jg adc dec push (bad) mov scas stos mov out jg ljmp jg repnz call popa jbe movsl ret aam jae pusha lea repz jmp cwtl aas or jg int3 mov stos outsl loopne jg jo adc pop jle jg and push push jg jmp mov add push fwait outsl sub fcoml (bad) daa inc jo out xlat mov sbbl jno xchg cld mov jb into cmp mov aaa (bad) sub imul pop mov mov mov jae dec sub jb aaa leave and mov jecxz sbb pop fcmovnbe mov lds and jg fidivl adcl cmp hlt pop dec lret jg and push sbb inc push inc mov cwtl push pop jb mov outsl fistpl int3 xchg daa cmp jg xchg movl xchg adc test xor repnz mov sbb jge (bad) sub enter inc (bad) nop jg sbb jecxz pop xchg (bad) rclb fisttp sub mov cld jg mov imulb hlt test pop sbb aaa jg pop arpl in cltd imull aas sbb or and jnp fs inc leave stos cmp pop cwtl jg mov jno ljmp stc jg sub adc mov push xchg or pop dec inc sahf fstps enter (bad) push aaa xchg jnp xor ja or push (bad) jg pop sti xchg jecxz lahf sub out push aaa pop mov xchg xchg mov mov loopne ret mov je mov dec or jg add outsb jno sub dec lods js stos adc mov rorb inc cmp mov ja test xor into je push mov or ljmp aas or mov xchg sti inc xchg cmp aaa and lea movsb aam sarl gs or jg dec inc xchg jge call (bad) inc shrl mov inc test rclb add jg test faddl mov inc sbb add jecxz cmp test aas mov into push jg insl out movsb repz (bad) xor pusha (bad) into jg loopne ss int jle lea or mov pop mov and add (bad) inc jge lods xchg lret insl inc sub xor fsubrs cld jg xchg (bad) jmp fnop addb movsb adc pop cmc es dec into lret inc insl jg mov inc pop jg andl dec imul jg mov mov nop inc lret ds jg dec inc jo cwtl adc jg jne push lods jp lret jg mov add jg loopne mov jg mov push out daa pushf mov jbe sbb add int3 cmp dec xchg lret mov mov out dec jmp add push jns jl movsb and mov cmp fwait mov (bad) adc lock jl (bad) add pop mov adc add jg push xchg imul fucomi dec xor cld pshufw jg pop xlat (bad) scas xor jg inc dec andl mov (bad) fisubl sarl (bad) int jnp and push add (bad) and out jp pop insl aas mov jnp rcll mov sub push jg rolb add cmp mov push sti iret aaa inc pop pushf jecxz test fcompl cmp subb push add xchg bound jg sbb cmpsb mov test inc push push cmc jns jg sbb gs push xor lret addl adc jl pop cld inc aad mov xor push fistpll arpl ds xor adc sbb jnp push sti inc mov xchg repz stos xor jg cmp leave push jle cmp das outsb jg mov sub jne inc xchg inc xor into int3 mov jmp fnsave daa (bad) mov loopne jg sbb sub jg jo lret lea or int (bad) pusha mov adc sbb mov jg push or cltd dec adc sbb jg (bad) aam arpl adc icebp lret mov jle cmp dec out lock aad xor inc jae cmp push pusha sub mov (bad) pop lock (bad) adc add push sbb leave outsl cltd mov mov into push loope or (bad) jg and add push adc aad imull inc dec lahf xchg mov pop ljmp sarb std idivl in es sub add outsl fld fwait mov pop arpl aad jl movsb push fistpll dec lds fldcw cmp scas push outsl in pushl add loope into pop repz daa sahf jg push and je jg ret push sub mov xor adc sbb pop mov xor in sbb pop popa dec dec imul and sbb pop dec push jp jg subl jg clc popf sbb int3 dec outsl push jg push fs test rolb fdivrl fcmove fcoms jg xorl popf xchg lods adc dec (bad) xchg lock addr16 mov mov bound sub sbb fimul out jg hlt xchg clc lret cmpl je (bad) sbb lds into xchg dec dec jo mov cld jg xchg sbb (bad) jg push and inc add xchg push sub mov jg inc aam insl dec cmp ret push jg sub add push pusha test jg cwtl mov pop jg aas mov fs cmpl jg cmp jge mov addr16 adc inc fidivl jg xor mov rcll lret fwait dec lock push (bad) call mov push jg sbb mov inc ret jg cli sbb pop gs jg pop out add mov fwait xchg cmpsb insb inc push xchg les mov sbb stos sbbl sar dec sqrtps roll sti add inc dec and cmp jae test pop (bad) jbe ret mov popf sbb xchg or inc adc cmp fcmovnbe sub mov mov repz dec movsl push pop xchg xchg and adc inc jns or mov fldenv imul mov jg ljmp jg loop jo xchg test pop leave adc adc inc sbb jnp (bad) pusha add adcb sbb sbb in mov and and inc cmp addb mov addr16 sub sbb xchg and (bad) jg adc mov xchg (bad) sar push jne mov out jecxz or jg repz adc mov add mov fwait pop aaa rcrb aas insb ret pop mov lods popa add inc out fidivl or dec mov aas ja adc scas mov cmp jg fwait loope test call adc jg or inc mov xor lock aas jg outsb mov int leave js pop and es mov pop sub scas pop call xchg sub or jg pop adc mov insl jg pop inc xor cmpsb add jg xchg adc cmp stos lock ficom fsubs fs cmc and lahf mov jg mov xor ljmp push pop dec add int3 ret out (bad) outsl cmp int pop pop dec jne and ficomp jg sub imul jno lret sarb sub lret and jg or enter jg mov std ss (bad) loope mov es push loopne mov or jg pop sub push fdivr (bad) lock jg push cmpsl pop pop sub gs loopne jnp sbb enter and cld jg hlt or dec sbb insb push (bad) adc std lea xchg nop cltd jg cmp cld dec fwait cmp imul call pop mov loope stc inc aam aas mov sub cld xchg jg sti test inc push fidivl jbe in sti jle pushf xchg addr16 fcmovnbe mov push lock into ret dec repz (bad) mov addr16 dec add mov and jge loopne into push mov mov aam addr16 jno loop or pop push sub jne cmp data16 test sbb aam add inc mov aaa jg nop sbb and fidivr add dec ret jns (bad) (bad) cli jg xchg mov push stc sbb fldcw test cmova add cmp jmp jg mov bound out fdivr and and popf jg adc test mov adcl xchg push pop sbb loope in out mov mov inc cld dec jb jg sbb lretw sub rcr or subl inc fwait pop mov jno push mov mov fmull mov nop sahf lock and jg fmuls inc popa out jg pop daa jge,pt push cwtl jg mov pop fnstcw cmp and jg mov rorl or sbb (bad) leave enter and mov mov xchg mov repnz js iret (bad) out xor icebp outsl popl and inc mov and cli or mov xchg stos and ja pop les out mov push jg ss icebp jg iret mov mov xchg outsl mov inc xchg jg fisub aas pop lock out cli js imul jg loopne inc icebp sub sarl push xchg aas xor or fisubr aas push cmp jae cltd scas dec data16 mov fisttp push cmp jg inc popf hlt (bad) fimul jg or sarl test jg repz jae cmp dec stos hlt mov cltd subl in ficoml jnp mov loopne pusha sub scas sbb xor mov dec mov ret rclb rolb xorl and out jmp sarl fldcw xchg hlt pop adc test mov push inc ljmp rcrl dec lea test (bad) imul fldt fwait mov jmp std add shr test test xor push sbb jg xchg subl dec dec pop inc das jg arpl sub jns mov sbb insb cmp rorl rolb and mov fwait stc sub dec mov push pop les test fimull nop test test add fcomi xor lods testl sbb pop cmpsb fwait jg roll sub js bound rol adc pop movsl and dec xchg and cmp ss mov sbb (bad) mov mov dec jg xchg ds push ja mov out push jbe es jg xor push mov add or jge andl pop iret push mov inc int3 adc fisubl xchg jg pop jne dec ja jns repnz add aas push (bad) in jg inc mov mov xchg dec dec in out jg sbb add es push sbb adc push stos fdivrs call aad dec inc jne push mov mov sar mov lea (bad) cmp (bad) xchg cmp test sti fadds je jns stc jnp push inc or cmp (bad) mov lock test add sarb arpl mov cs mov fldenv test add jecxz dec mov cmp mov movsl mov xor jg mov adcb test ret sbb inc daa push inc inc nop sti add imul sti mov inc sbb int3 pop cwtl mov fildl lcall das or jg sbb fstpt (bad) mov aas jne (bad) fwait jl xlat in jg mov push out mov jg sub lock jge adc js push aas sub cld sbb aas sti jg (bad) scas cmp popa push idivl int cli mov jg or inc jb ljmp push (bad) in cmp pop ja aam dec and xor lcall mov pop inc ds jl push rorb dec js ret xor sub lods jg mov or cs push lcall jg mov (bad) sub mov mov mov sbb sbb popf test aas push sub cmp add lods icebp sahf pop loope or dec jecxz in addr16 leave pop std mov cmc inc sbb dec push cmp out mov jg aaa cltd ljmp sahf inc mov add jmp mov xchg pop test inc es xor in adc inc inc outsl mov jg out dec (bad) sbb push pop mov jbe xor jg cmpsl sub inc aas jg ja lret insb clc shl jmp (bad) repnz in ljmp mov aas mov sarl inc lods sbb mov (bad) jg call (bad) daa stc pop int3 mov mov jo push jae mov mov icebp pop (bad) push inc mov imul sahf jg imulb aam jg jmp inc xor insb inc mov sbb cmp push lret mov mov into mov jg mov inc fnstcw cmp (bad) jne xchg cli cltd ficompl mov mov xchg ja scas xchg mull mov inc ficompl inc enter mov in pop or lods popa sub add stc jg mov jae fnsave jb (bad) jo sbb push pop xchg xor (bad) cmpsl xlat or (bad) out mov adc mov enter pop outsl push pop lcall lods mov lea mov addr16 adc fdivrs (bad) adc aas mov pop cltd jns jo xchg cmp push sub je adcb scas jp xchg sbb bswap mov xchg jg push sbb jb pop mov bound pop lea add loope outsl cltd sub cli jg sbb jo enter mov testb sahf dec pushf jbe test mov incl ja push mov lret inc (bad) mov (bad) push sub sub xchg (bad) lret jg cmp movq faddp mov popf movsb jg mov sti arpl in mov addr16 cwtl jnp jg,pn adc in sbb pop or xlat mov xchg mov mov mov movsb nop xchg jo jg mov les jg cmpsb push or sbb or jg xchg xor jg in fdivrs mov (bad) ja jne jg gs shr rol (bad) jg xchg mov xchg insb imul mov leave fisttp lds jo xchg mulb add sarl jle push aaa es cmp dec movsl sti faddp sahf sub push mov and cwtl cmp dec jg into nop fwait sub cs fwait cmc cmp mov mov arpl push mov lea lahf imull imul mov mov int3 cmp ss pop xor mov adc into insl xor data16 inc dec inc lea xchg mov fildl inc push and push clc jg mull push sub jg insl jo push adc stc jg push xchg aas shlb js pop sbb out mov test ljmp mov repnz fstpl jp mov push and stc movsl (bad) add jg cmp (bad) add arpl notl pop mov (bad) xlat or mov inc push push mov test and in pop jle sbb dec lahf sarb xchg in loopne and mov jge aaa push sub idiv pop adc mov jle mov fisttpll sbb dec jg std out mov inc inc je pop leave iret pop inc pop mov or push jno ja fisttpl lahf push jg sbb inc out (bad) pop jg icebp enter jle aas mov and es mov mov dec sub pushf push dec flds xlat and cmpsl adc orl dec repz adc xor bnd sbb out lcall pusha mov jg push fistp loopne cmp stos mov xor sbb xlat push jg or js fcoml mov (bad) xorl mov out imul dec fdivrl dec adc dec and push jb aas rol xor or test dec outsl cmp jp scas jne rorb mov xchg xchg jg ljmp jg stos pop inc inc sbb cli mov or lret push xor mov mov test jb mov push stc cwtl ret add jg repz cmp mov pop cmp jmp lret (bad) out mov sbb outsl les imul push inc jecxz adc stc repz (bad) shrb lahf mov cmpsb lcall fdiv mov xor lcall loope mov into sbb push xor mov popa adc int mov pop fdivrp push (bad) out imul mov rcrl and jg arpl or data16 sti aas sbb mov push jg pop xlat xchg mov mov xchg insb sub push into jg in pop add (bad) jg sarb std fimull fnstsw pop jg sbb (bad) xchg popa lcall dec jg das mov aas jg (bad) ja mull mov jg inc xchg jmp cmp insl jle jnp std push mov pop xchg addr16 test lock sub push jg int call jg ja dec pop xchg mov or pop jae mov pop cmp pop sub mov arpl jge push in insl push jg fsubs sti jg cwtl mov mov adc mov cmp mov mov inc aas pop xchg push cmpl lahf test enter mov mov jnp dec sub lea cmp lahf pushl mulb loope outsl in jae fiadd dec mov popf mov movsb mov leave jg cmpsb add jge inc jg ja jmp add test add mov scas xchg push jns outsb xor mov inc push dec (bad) inc jg add mov cmpsl sbb mov jmp lret fsubrs enter add leave and jmp js int pop sarl cmpsl jg dec mov sub add daa xor das xor outsl icebp dec clc aam div aas aad jg add jo loopne fs mov pop adc pop scas ds cmp jg aad ss push int mov jg imul decb cmp fistp push cmpl push inc bound adc mov inc xlat cmpsl mov mov push add sbb negl add push mov popf inc decl sti push imul insb mov dec pop pop mov lock jl or lret std jae cli jg push and (bad) xor and mov mov push push jg lods inc sub jg mov push mov xchg adc sti (bad) out pop (bad) jg and xor lret repnz xabort push das pop xchg inc dec xor pop push push je,pn push loopne xor xchg (bad) aas ret sti sti int3 cld and ja push dec fcom jg adc mov jg or inc or out dec in mov divb es loopne jg cmc iret sub sahf lods sarb dec pop leave loop jno pop jp test mov mov lock jecxz cwtl pop ja sub jmp fs xchg mov jp sbb pop daa test mov jg pop test fs cmpsb fstpt pop dec fisubrl gs mov jecxz dec pop ds jg cltd push mov js lock inc aam xor and in push dec and jmp push sub ficomp shlb pop lahf dec test add or jb and pusha notb das inc mov inc fdivs or ljmp mov inc sarl and dec test mov xchg jbe fs jg pop test xchg movq pop out lods jg mov jl (bad) jb jg ds mov cmp xchg and add in decb cmp jg jno push (bad) mov jbe stos mov cmp aaa cmp mov mov popf lea call enter cmp mov mov lret cmpb outsl inc fucomi or ret lds dec and sub adc sbb movsb into cmpb push test inc jg (bad) movsb cmp and mov mov in add jne lcall in inc xchg test sbb dec in jg aaa addr16 lods jg aam ret loope xchg insl jg arpl movsl pop xchg mov cmp pop xchg and jg daa jne test addr16 ret fstl mov inc mov inc enter jl xlat mov ja loopne (bad) sbb mov dec cmc push iret out popa js pop call aas loop inc push add gs outsl sti mov loope inc mov mov stc cld rcll jg mov icebp pop mov into mov rclb dec push lcall fistpl cmp fiadd push jg (bad) (bad) jns adc jl jg cmp (bad) hlt jecxz pusha push mov push inc in and int pop jae gs fsubl pop jg roll adc mov scas adc out jg sahf loop sub and outsl jle xchg leave outsb dec out aaa ljmp cmp inc inc test dec lods pop mov and aas xor add jle sbb fs cs pop xchg ja mov rolb sti mov and popa xor (bad) (bad) jg fisubl fistpll sbb enter mov nop push or call cli bound (bad) xchg pop nop mov (bad) scas (bad) dec push out dec fsts jbe fwait (bad) xchg adc add dec jg push fsts jg ficoml add inc es jg sbb bound pushl jno out arpl push nop fnstcw out mov stc pop int3 sti dec sbb dec outsl cmp aaa mov pusha movsb mov cmp and xor mov mov adc dec ss xchg jg or fidivr cmp movsb sub js in xchg mov inc pop inc dec shll inc adcl jg add icebp push aas and add jg leave int3 dec jmp arpl mov orl imul in mov jo jg and test pop xor into ret sbb shr movsl cmp mov test mov jg or pop (bad) lock and ficompl jg mov sub jne pop adc or dec pop sbb mov sub out into outsl pop jb (bad) enter jg or loopne sti rorb jg xor shlb jb dec mov mov ja jg sti dec ljmp shl outsl jl jo jmp jg (bad) (bad) movsl jp jg cmp push dec dec or imulb mov bound inc or fsts mov pop cs loope xor jg rorl sti mov or adc cwtl sub jg pop (bad) fisubl or jg leave jmp addr16 jl jg xor mov pop pop in xlat std mov sbb or sbb cmp loop pop mov clc cld stos mov and mov addr16 mov jnp jb mov ja jg (bad) idivb jno rcrb addr16 ljmp ret mov cmp jg jnp jbe mov jns dec sbb jb cld sbb aad ss jg and adc or inc inc addr16 mov ljmp push adc aam mov jecxz jbe addb sbb sub test insl insb lods xchg int3 (bad) gs mov jg js mov add sarl aad nop test je gs movzwl dec sbb sbb push ja lcall rcll jg pusha sub push (bad) enter inc sarb cmc (bad) or xchg inc and inc pop xchg sub mov dec gs jb out push scas mov sub stos xor mov sti mov mov adc nop push hlt mov jge jg or loop inc sbb mov into jg xor xchg cli ret sbb mov aas mov in jae,pt push dec inc inc stos jg jmp repnz inc leave iret dec into gs in cltd lahf (bad) jb jg je jne inc jbe mov pop or aaa xor jno aad shll ljmp pop daa pop xchg repz mov jae and out sbb jno mov jbe mov (bad) mov leave dec cmp and dec cmpsl ret or adc jae inc mov and fcmovb cmp adc xchg jg push imul add ljmp inc bound mov sub xchg mov dec pop sub mov xchg loop out test cmc fisttp jg jo aaa jp ret sti adc divl test mov imul clc push xchg jb mov lret loope sub daa js mov repz inc je jg xchg dec fwait mov add pop das jge cmp (bad) aas xchg cmp test mov cmp mov jg xchg jo adc sbb xor data16 push gs sbb mov mov ss push (bad) push dec inc test add xor jg pop inc add test or int cltd mov adc jmp mov dec dec fsubr jb movsl popa inc lret rorl jg add ret nop call lcall push sbb inc outsl bnd mov mov jnp pop and push nop and pop pop pushf xchg push xchg cmp imul arpl shlb dec sbb sahf add push xchg int3 jg jbe pop and shll inc and and push repz (bad) mov bound rol xchg fsubl dec out in jg and stos sti test mov push lret movsb fdivrs pavgb loop push push jg insl (bad) mov add pusha jg subb jg test (bad) mov sbb or test test jg loopne les popa mov jp roll jg cs out lcall aas mov pushf dec out inc insl (bad) dec jg sbb mov push mov or popf cmp cwtl adc mov mov xor jg inc fldt call lds scas ljmp ret inc sbb rcll inc mov mov jp into sub jle xor stos cwtl je add mov cld popa jg adc fst lods ss jnp xor in jg loop in loopne or xchg (bad) mov xor jno std lret mov cmp sub sti outsb dec inc jg rorl popf jg xlat out adc pop mov sti mov mov xchg xchg inc shrb jnp xor fs jg mov push imul ffreep dec sbb (bad) imul cmp jg inc stos adc (bad) jg cwtl jle les mov test pop inc adc jg dec fidivr mov mov in pop pop stos sbb daa stos outsl push movl cmpsl int3 loop leave jg out xchg movsb sub push outsl jg stc pop add xchg jbe jg ljmp mov cmc sti outsl int cmp lret push movlps sub jne mov fidivr xchg jg and (bad) mov push mov stc mov jg adc cmpsl add loop or jg popf pop imul dec push xor imul xchg jg outsb loopew adc sbb aas push jo pop mov jl fs and push out orl add pop mov cli adc neg jg (bad) mov test out lds jmp cmp jg inc lock dec insb jg lret push push ret out lret rorl mov cmpl jmp mov push out (bad) stos sbb dec xchg insl jg mov jge lods dec push jg repz jg inc mov mov mov inc fstl aas adc cmp ret addl push inc in cmp xchg gs sub es out add jg jmp (bad) cmpsb mov stos xchg popf sbb jp aas imull ljmp and adc inc cmc fwait mov mov jg xor jmp sbb (bad) fist jg mov sarl add and fmull das jg jp loop aad mov cs fdivrp (bad) jg inc dec popa inc gs lock mov pop add stos adc dec outsb fsubp push and mov xchg hlt jg adc pop in (bad) mov pop es dec std push jg fwait add fs mov (bad) testl inc ljmp xchg in jle stos fcomp mov call ret lahf push pop sbb sbb mov ljmp popa push jg pop fnsave loop sub int add mov mov adc sahf jg add dec inc stos aas call insb (bad) dec cs aas icebp sub dec inc lcall pop mov mov arpl scas pop add in mov mov pop dec adc (bad) mov mov mov and imul cmp aaa jo mov cmpb out add test aam scas inc (bad) idivl repnz aas xor aad stos inc movsb push jg sub clc add call or jg movsb xor jg std lods shrb push mov icebp fiaddl inc ss movsb or inc push in dec add add xchg mov outsb cmc inc cmp popa (bad) jg mov mov stc sti cmp incl cltd sbb sbbl stos mov out inc out jg cmp jbe into mov mov in flds jle roll int xchg mov pushl jge xor xchg fistl xor or fstpl dec sub pop mov leave call jg test enter jg sbb mov jg loope mov data16 inc aas pop jge repz sar aad jg pop inc bound mov adc lea inc or push fwait jnp jmp arpl jp jnp mov popf mov addr16 mov sahf loop and jg mov jnp jg adc out add dec xchg inc sub fucom jns int fidivr jae aam test fidivrl sbb lret insb das jg enter and idivb cmp pop pop push and scas pushf pmulhuw jne sub mov mov fdivrs mov lock mull lods xchg dec imul lods inc jg ficompl push push inc pop out sub aaa add jg cmc lahf xor pop lods popa jg shll jg dec out push in jo jb xor pop shrl add mov bound cli inc mov movsb dec or push push jg xchg sbb inc pop mov mov js mov jo and lods out sbb sti pop mov jo outsl push leave add loopne xor lock inc stos mov inc leave xor xchg pop shlb xchg jae inc (bad) mov xchg nop jg xor rorl lods sahf jg aas imul pop add push dec jo (bad) push cmp and push jg gs and pusha ds xlat lahf aam mov scas addb sbb push pop fisttpll jecxz imul fstpt jl mov jg movq sub popa movsl out lods fist pop jp mov sbb mov lret push jo jg cwtl pop nop xchg divl sbb leave icebp mov pop iret sti cld mov jg or add sub xor cld dec xor pop notl and cwtl add mov not stos loopne sbb push arpl dec push sub push je idivl insb stos adc jne jp or clc dec adc cmp sub jg pop pop mov stos imul sbb xor scas ficompl fcmovnbe mov pop mov test ret dec cltd clc outsb xor adc jns scas int mov addr16 inc lret faddl jg test mov (bad) jg mov jg decl sbb mov popa insb mov ja icebp orb xchg out mov xor lock cli and lcall add mov scas cmp mov (bad) std test sub js inc jecxz mov cmc fisub mov and imul push and jg mov arpl and cwtl push mov adc push and popf test lret mov mov or cltd mov xor push fstps inc enter cmp pop sti rcrb ret push inc add insl sbb outsl addr16 or mov mov addr16 mov lret and aam mov sarb andb mov into and aas pop ret mov inc shll add push dec ret dec arpl push out push out sbb push shrb jg cli insb fist jl aas add subl adc or addr16 add sbb jl stos sub stc repnz addl sbb popa inc fimul jbe js lcall pop dec push subl aas and push sbb and jmp (bad) push andb popf nop jg rcrb loope outsl xorps addl pop mov fisubr inc and mov and dec clc fcoms dec dec cmc mov mov xor dec in inc mov test mov mov das mov pop jae aaa add jg adc flds pop decb jbe push pop sbb xor cmp mov mov inc mov imul push gs sti jle dec mov sbb xlat mov jle adc cmp xchg idivl sbb cltd add stos xchg aad or dec jg and jecxz push (bad) fcomip pop cmp jnp add gs add mov jg or jmp punpckhdq aaa jo mov pop outsb jg ja push fsubrl dec aas xchg imul (bad) push jg fsts pop lock bound inc ret dec xchg aas das cmp lods in fwait pop inc or out push negl inc cmpsl dec aas int nop push repnz cmp lods jg leave pop bound cmp jns movsl outsl push gs jae aas sbb inc mov lea (bad) add push jg xchg mov je jg sub out xchg imul xchg inc insb pushf lea daa jmp add inc jg (bad) addr16 xchg inc gs in jp lods sbb mov aaa cmp jne and sbb stc js and or mov dec and mov mov jg ss jns mov into ret inc jbe lods pop jg dec movl lahf ret cltd (bad) fcmovnu sbb scas incl ret out push jmp push repnz jae out (bad) lret mov add int aas jg xor inc xor and add data16 inc jg loopne push sub jmp mov insl leave xchg or ret enter std adc sub inc jg lret clc icebp jne jg loopne arpl adc mov inc stos ret fistpl mov jecxz push push jg fnstenv inc stos cmp fidivr and mov jg mov stos (bad) jae inc out jae bound mov cmpb ja fist (bad) cmc jno push popa inc (bad) lods mov cwtl pop inc aas pop xchg jg add mov cltd call fmul mov pop fsubrs mov popa mov es sbbb jnp adc cmc sub sarb dec jb (bad) mov jg adc int3 cwtl int pop mov sub xor inc mov lcall pop data16 xlat fwait and jle out inc sub jg sahf cwtl cs ret mov repnz int pushf mov cli jg sti ja in xor jg sub mov js inc mov jnp mov addr16 jp jmp pop mov sub dec stc mov aas pop mov enter sbb hlt inc xchg push insl fild ljmp xchg sarl rolb mov pop lcall aam xor cmpsl call cmc loop mov mov cmp stos jle fdiv add test jae mov push xchg inc inc dec loop xor push or mov xchg data16 in adc scas fnstcw dec pop popa sbb (bad) adc shr xchg fdivr (bad) xchg (bad) fs cmp cli fldcw push addr16 and sub mov cli mov lods mov push (bad) sbb scas popl arpl cmp call pop lahf dec pop lret mov shl dec (bad) arpl sti inc jnp mov lahf mov cmp pop push mov jne (bad) xchg mov in stos shlb shll ds fucomi dec add xchg xchg out jg insl pusha or cmp cld jg sub fsubrl inc mov jg negl rcrl jg enter xchg xchg mov pop dec push ljmp std cwtl mov jg roll jg mov xor dec pop lds outsb pop inc ja insl not push xor mov aaa jns in or pop xchg adc jb shrl pop or xchg cmp cmp ret test nop push mov lret in jg inc daa xor jg sbb cld or notl mov adc leave mov pop push das mov pop aad jns inc sti mov lret testb sub xor test pop lods push jmp jg adc sahf jg std dec jge pop (bad) test lods push xchg cmpsb ljmp enter movsl cwtl jg sbb cli (bad) icebp jle mov pop outsl mov das insl push (bad) pop add push stos lock jbe sbb in mov icebp mov inc lret movsb and lods stos stos and add inc push push xchg jg dec hlt sbb push imul inc cmp sbb dec jl mov mov adc (bad) jg rep dec and into xchg cltd popf int3 fs mov pop les mov and dec push ror mov mov jg shrb jno mov or pop jg out jnp sahf xchg push imul xor inc das stos add mov lret jle mov dec dec lahf mov inc (bad) mov jmp mov push mov sahf jg stc cli inc push (bad) js ds jmp clc pop jg enter jne and scas sahf insb cmp jg pop dec lods adc add mov jg sbb adc sbbl scas add jg ja mov dec push jg ds mov jg imul (bad) aad pop aam or mov jp out loop (bad) loopne and xor mov jle jge es inc jb in inc mov jg dec push adc pushf pop push xor leave fnstcw jae and lods mov jno arpl jns mov aad jg lret jbe sub sbb subl cs inc sub jbe cwtl out xchg sarb inc scas mov lods (bad) cmp pop sub mov fdivrs roll ret jb and pop dec imul in cltd jge les sbb fcomps mov aam mov clc push lock popf add stc and xor out sub pop adc sub xchg imul addr16 add mov inc xlat push in in mov jns xchg out gs in jg (bad) cmp and out xor insb das dec pop rcrb outsl dec mov sahf ja lock ljmp mov mov push jg popa minps jg in mov inc xchg cmc sub sub loopne jg push jns decb (bad) daa jg sbb mov lahf leave xor inc aas sub mov xchg (bad) jg lods lds cwtl mov jg cli repz jl lret out out arpl cmp mov jbe js sahf inc inc pop jg push and pop loop (bad) lret outsb adc (bad) pushf in ret bound push inc std jg dec mov jecxz test mov jg imul movsb pop or mov xchg or loopne lret leave imul add rcll cmpl lods mov mov xchg lret hlt cmp inc jg iret push fisubr stc int3 je dec movsl repnz in mov pop imul lods and jnp fnsave (bad) xchg shlb push jp ret jg ss dec jg or mov ja pop push ret mov (bad) mov push mov call (bad) jp enter sbb xor ljmp jg jp pop das jecxz scas cmp mov adc or mov push dec xchg lods test call jg and stos mov cmc dec jg push push fwait lock mov push popf sbb mov or outsb inc mov and dec movsl inc (bad) cmpsl hlt sbb mov pop adc cwtl imul mov fwait sbb jp jns hlt loopne or orl pop jg test iret repz fistl push mov jp push and or and mov and sbb fcoms jo enter or push add pushl push adc rorl in gs jg cwtl xor fdivr cmp cmp push std outsl sub inc adc pavgb jns sub pushf add pop jae fild sbb mov xchg outsb dec push cli add dec add lcall mov inc mov push push inc cli adc jg (bad) or lock idivb inc aas (bad) stc cmp insl sti addl setne sbb jne mov mov mov jg iret push cmpsl push or (bad) fcomp pop adc aaa mov push cmpsb jg test jmp icebp lock insb or (bad) jg repz sub mov arpl cmp pusha pop sub jg icebp pop push xorl popf and pop scas inc mov push pop cmp xor stos jg cmpsl mov imul pushf mov xchg fistpll in fnsave mov or repnz sbb adc in cs pop mov aas adc cwtl (bad) mov and fidivrl adc (bad) push or movsb inc leave xchg std push icebp sbb inc pop addr16 xor push (bad) mov hlt jg (bad) (bad) mov jg inc js mov fisttpl jg mov dec pop jg sub fs (bad) es mov lret pop js xchg inc lock add aas adc push sub xor data16 xor cmp dec sub dec aas aas push pop xchg inc mov in mov and inc push jg push cmp gs scas out jg insb push pop sbb inc jg xchg nop xchg lock dec sahf cmc and pushf test or mov aaa negb cmp dec sbb dec xchg pusha mov fidivl repz pop push mov cmp mov pop loopne xchg mov enter inc mov xor xor aaa js inc cmp imul pop ret fidivr test pop (bad) push int mov outsl inc or jg mov imul das dec mov add xchg insl cmpsb mov cmp dec pop arpl jnp jl jae iret jg pusha mov or mov dec inc push jg add add fistpll icebp pop xlat mov fisubr test inc dec adc sbb adc push shlb out pop dec jg fdivr jmp aas ret movsl pop push loope popf arpl sbbl push sti daa xchg ret popf aas nop dec cld adc fdivl cmp or and jbe jg into (bad) incb sub jg mov stos mov dec sarl js movsl test test jmp scas call repz inc mov cs das addl adc nop (bad) ficoml sub mov mov jg lods js xor push mov mov iret sarb pop cmpl jg jnp loop fwait xor jg (bad) sbb repnz jg and jne sbb test and cmpsb jg mov inc xchg mov mov leave test mov (bad) sub outsl sarb lock xor xor mov es push loopew cwtl cmpsl mov pop (bad) ljmp lret mov adc jg mov stos fwait jg jmp dec ret ljmp pop fidivrl pop shrb iret lods in and xchg mov loop jle popf mov jb,pt gs fs jg lahf sub dec xor jp jb push ret or inc leave rcrl adc inc bound stos js cmpsb push imul jg sti push (bad) jg or sub dec imul push fucom jge test scas push iret xchg push dec fcomip push jno jmp pop popf sub add arpl xor movsb jge and mov nop pop push shrl jg fwait rcl cmp je mov movsb fiaddl jg fwait sbb add inc jg (bad) repnz enter (bad) jb or call push repnz aam pop ss (bad) test fistpll inc out pop dec jg cld insb push insl mov and pop es cmpsl push jg xchg aas stos in stos popf mov arpl pop jg sub jge jns push jg sbb bound scas sub das sti cmp and xchg pop lcall dec push push in mov pop pop gs inc in inc shr pusha cmp pop mov fwait dec int3 jg mov imul mov and jg jo mov mov mov xor cmp dec push jg negl sbb in cltd lock pop adc mov xchg ret cli xchg std imulb dec sub pop cmpb sbb lret jg es arpl pop sbb mov ds stc je rcll pop (bad) loopne (bad) mov fs stos aas dec adc or jg sub (bad) jg cs sub out addr16 bound mov inc arpl push cltd pushf xchg jg dec jbe (bad) (bad) cmc push jg sahf inc popf mov test aas scas lods jge fcompl dec fnstsw mov jg gs xor and sbb mov inc leave dec xor aas addr16 inc mov adc ffree in pop push jg mov jns jg adc mov das cld cwtl xor and push pop jg push dec xchg addr16 sar xchg jl xchg inc ror jg fsubl mov xor mov mov mov add in jmp dec aas sub mov outsb mov pop call dec loopne mov lods mov and inc out dec mov out addr16 fwait push and repnz push dec add dec jg mov xlat push (bad) scas pop mov rcrb dec lahf ret fildl jg mov mov mov xor and pop js addr16 push mov jg test (bad) repnz mov jg hlt inc jge jg cmp xchg mov add mov rcrb pop aaa or mov leave lods jns clc mov in push sahf decl pushf lret inc cld mov jg mov push testl stc or and jg jns xor cmp (bad) fsubrp pop mov jg popf andl cmp jg sti (bad) pop (bad) (bad) and pop out xchg mov cltd jg jo pop cli sbb (bad) pop cs aam mov cltd popf inc (bad) movsl fnstsw lahf fsubp mov test mov mov cld sub adcb jo setae jp jb frstor or cli fdivs loopne pop loop cmp incb aad and adc fwait or adc out push int clc jne jg (bad) shll test cmpsb or (bad) mov outsb incb dec jle hlt inc jmp dec adcl adc jl into mov or aas dec pop shlb in das cmc xlat inc pushf xchg dec (bad) rorl pop ret jle repnz push stos or fs dec sbb pop lret push in cmp mov fstpt sahf mov outsl mov xor decb (bad) fstps insb xchg cli outsl mov jecxz dec xchg or inc (bad) cmp pop nop add ja push xchg jae cld scas iret mov dec dec cmp loopne jg or push and jg mov int xchg add cmp pusha sub ljmp (bad) aas inc pop sti fwait pop cmp psrld jg and scas mov and lcall jg sub ret xchg jg fmull ds pushf dec sbb xor (bad) repnz stos jg pop (bad) (bad) jo pop push jg mov lret ret mov movl sbb or push sbb jg xorl repnz cmpsb jmp mov out icebp jg sub xor mov ja int3 jecxz hlt jg stc (bad) pop adc mov jne loopne jg cmp lret mov cmp fsub lods mov cmc shrl mov mov mov jmp aaa jne fnstsw loop adc push fmull mov sbb insb popf imul mov shrl mov cmp cmp iret jp jmp fistp mov push jle jo sbbl xor dec lret mov sub jg jns lret bound mov xor shrl mov cld lcall cs xor and lahf inc lods outsl insl (bad) repnz jg loop in repz fidivrl ljmp jg aas pop aaa mov dec stc jg xor jg les sbb in insb pusha mov or dec bswap push dec ret cli sub inc sarl or pop (bad) divl pop cmp adc inc lahf in int3 stc jo push outsl arpl lcall cltd and jg mov xchg add pushf push shrb sti jecxz xlat mov push push mov imul jae xor add sbb push mov cltd addr16 push push jg imul (bad) push mov scas fadds sub sbb out inc inc int jg dec out ljmp mov inc jg sbb cmp cwtl jle jns addr16 push sub push loop mov or mov adc and sbb sub jg cwtl xchg pop and xchg xor ficoml test mov jl dec loope inc (bad) jg es hlt jns add inc mov in daa aas cltd mov dec push xor push lods push (bad) pop dec xchg jg scas addb jbe outsl je xchg and ror mov popf push inc (bad) mov xor (bad) sarl add sbb aas (bad) pop sub mov sub jb xchg ljmp (bad) jmp jg movl aas jno js cmp jg data16 and mov mov jne jp out in push pop ja push jg mov daa and xor jg lods and negb pop stos call pop popa int push push scas (bad) sarl in js and rolb sti xchg cmp aas je ljmp mov decl pop inc test testb int3 inc jne pop xchg jp add jg push xchg pop add mov mov jg negl test (bad) enter (bad) jg mov mov and cmpsl das in lock push mov negb or into jg adc mov out mov or mov (bad) jno adc jg push scas cmp cmc mov inc mov mov mov jg clc inc jnp imul jle popa jge inc dec lea fisttpll orl jne fisubr pop enter push test lcall mov cwtl das sbb jg mov mov aas lods mov fisubrl dec dec inc data16 nop jg dec cmp dec in (bad) mov push sbb inc cmp mov fidiv loop mov add inc lret fwait inc cwtl sahf xor jg lods ret sub and je adc sub loope sbb adc mov pop test int jg lea loopne leave cmp enter push cmpsl cmpsb cmpb mov mov pop and mov int3 fdivrl clc jecxz xchg mov aas pop insb bound jmp sti pop fs das popa pop and jg rcrb jecxz pusha cmp sub je ss dec xchg dec jle jl sbb or and push fildl lahf pop push out mov pop dec inc pop (bad) test insb jecxz jg mov ss dec dec jbe pop rcrl aas cmpsb mov sbb leave outsl mov xchg pop jbe pop cli js cmp test outsl (bad) push jle jge aas hlt iret pop sub (bad) pop inc pop mov xor add xchg lahf pop xor sbb lcall outsl and jg (bad) xor out icebp dec fnstsw xor ret adc pushf mov repz (bad) ds jg add or jle (bad) faddl xchg sarl jne mov pusha add cmp mov mov fidiv xchg bound and dec dec (bad) fwait jno lods fyl2xp1 fcoml and push cli or jg and imul or les adc mov sarb (bad) dec lret sbb jg (bad) iret mov loop jno sbb mov cmc or jg sbb stos mov push orl jae aam loope pop jmp inc in jg push pop push push addr16 js lret scas ficomp add cmpl jg and pop jg or movsl sbb push hlt and xor inc incl movsb push or push ret jno cmpsl rep dec (bad) dec sub test jg jns push inc shlb punpckldq stos mov out subl icebp jg loope xor pop dec jg dec cmp and lahf add mov inc xchg ss jg push cwtl outsl mov stos pop les mov std xor push lock aad mov gs add (bad) jg pop push adc hlt mov jmp and mov mov out mov shrb xor mov and stos aas xchg loopne mov sarb bound cltd jg or mov jg cld jecxz fild xchg jns xchg sub or jno mov cmp jg (bad) into sarb sub jg repz jge adc idivb (bad) mov xor test mov xrelease jne cmpl pop pop into and or jg xchg pusha insb jo je jg jecxz gs sub jg mov jbe pop mov inc pop jg add jg push mov addr16 int3 xor arpl or push je push sub fisubr and mov jmp dec mov add pop test sarl sbb bound loopne cmpsb pusha jno pop sub sbb stos jg popf inc xchg jb adc movq dec (bad) jne jnp das mov adc jae lcall popa push and and cld xchg test mov dec ret mov add mov rorb fistp jg es add subl mov xchg arpl lds loope (bad) adc pop xor lock mov xor arpl dec push inc jg mov jo imul movb xor jg testb scas cmp sub mov jg in jmp mov jl mov ljmp inc sarb daa ja popa pop fstpl xorl les push and jp push add push pushf cmpsb mov sub or mov pop roll js fldenv mov push cmpsb pop lcall cmp (bad) loope mov push in pop imul pop aas popa mov int jg cld cmp xchg call push xchg aad mov cmp (bad) jg xchg mov mov test inc cmpsb dec mov dec aaa fisttpl mov ljmp js imul and cli sti clc inc xchg call notl adc or jg in mov push das dec loop int jne fbstp out test xor addb aad jg (bad) in mov jne hlt addb mov test cmp xlat add mov sbb fs push xor jg (bad) sub sbb cmp jae aad and fucomi sbb jecxz and add cli push mov dec xchg pusha jg mov in (bad) cmp in aaa call (bad) pop mov push jae push sub stc fisttp jg xchg xor rcll pop repnz testl fcoms sub jg mov fs push mov xchg fs bound daa pop outsl adc jg mov je mov pop inc pop jo push inc clc mov jg data16 lds jl cmp inc mov dec mov daa iret jno mov push jb xor pop gs leave aas out add pop cmp idivl push inc ret int pop jg (bad) fistpl jg (bad) cmp jg xchg loope jl imul mov xor dec jg pop out test hlt jae jg fnstsw inc jmp in xchg fcomps je jg xor xchg jno das mov int jl pusha jg cmp lret in fwait popf push push mov mov leave scas xor jbe mov jg adc cmpsl fldenv fcoml mov pop sti pop sub sbb ficom pushf imull lea inc das loope lock (bad) jg fadds aas dec mov dec xor dec idivl repz jg mov push lahf test aas xor add popa es cmp xchg insl idiv mov test pop rol loopne stc jg adc fstl loope jg clc hlt add pop repnz jno stos sub stos lods js push scas pop add sahf jnp loop xchg negl lahf inc pop mov test popa mov es mov test pop add and fsts jg cld lock in add test dec or sbb adc sub movsb cmpsl addr16 pushf ret and pop hlt jb pop test dec inc test push xchg mov and in idivl mov push mov mov pop pop add (bad) cwtl adc mov icebp fcompl pop shlb jg lods sti test paddd xor jg fisubl pop mov (bad) inc or stc mov pop cmp pop mov mov loop (bad) jg or mov hlt pop push ret loop ds outsl xchg jg test push leave (bad) push lcall repnz cld pop mov pushf imul mov jg pandn and pop fwait imul nopl out dec inc pop jne dec and cmpl jo jg pushl mov sbb out sbb or mov in (bad) jo mov pop stc js imul jg inc loop mov in adc add out push pop repz je jnp test jg cli outsb adc adc and add jae mov lret jbe dec dec jg cwtl xchg dec rolb je sbb jg out repnz dec mov imulb (bad) lret inc add mov scas adc ret mov fidivr push jg xchg xchg stos pop pop and cmp xlat ljmp dec jno or enter sahf inc jg es and dec ds fidivrl sbb insb stc std inc popf rclb mov sbb xchg jle cs jle pop shll dec bound jp loope jae lret mov fsubl xchg mov popf pop pop cmp push push pop fbstp cmp fwait jg pop inc sub cli sar ret jg gs pop inc mov and cmp cmp cmpl inc test jmp in int inc jo jle (bad) push pop push jae add inc add leave (bad) dec and out divb in push inc popa lock push mov mov cltd mov fnstsw sub jmp popa fildl dec pop and call cmc mov fwait xor jle sti insb push negl and and mov arpl inc addb loope mov hlt cli outsl xor scas inc lods aas mov (bad) mov cmp enter push cwtl outsb dec xchg scas les jg jae sub jg mov dec pop jecxz inc es scas sbb mov jg jge cmp in ror out jg jbe pop repnz cmpb rcrl mov leave xor mov pop adc inc icebp cmp mov adc inc xor je push movsb inc outsl bnd dec out mov jg lahf push or ret jg cmpl mov pop adc dec lret test lock cmpsl push jg jmp fs jnp lods loopne pusha xchg je aam jg insb add dec popf loope ds jg les jns add es xchg loop jg cs xchg xchg push mov lret xchg mov (bad) dec push mov ret stos push push ret lea ficomp xchg cwtl mull fs popf push incb jg mov mov arpl jg mov mov jg rolb push icebp insb jg jge mov mov das enter aas xor push cmpsb push jg dec dec mov adc testb sti inc mov mov lret je cmp pop ja sub inc stc mov mov lods push push push and xchg lret mov xor lods jae popa loop xlat add mov (bad) jg mov sbb (bad) inc mov and xchg aas cmp ss jb inc inc mov outsl icebp sbb ret int3 cmp mov or mov jg sbb inc jg imull push aas inc daa mov dec pop aas shrl sti adc xchg or jae add xorl pop push jecxz push aam cmp je sub (bad) mov rclb push xchg icebp ljmp pop stos daa mov mov add out inc cli adc ret fsts jbe mov xchg jecxz jb and enter nop xor jg out pop (bad) mov ret inc xor fwait lahf popl xchg mov mov imul pop fcomps pusha repnz mulw inc dec imul pmulhuw scas jg movsb or cmp jg dec sbb imull dec loop rorl sbb or sbb lods stos rolb mov mov dec cld enter lret int3 push cli inc ja cmc and push ja jle outsl mov pop pusha cli daa fwait and jg push dec lea sbb xor sarb push xchg loop (bad) fldcw cwtl add pop adc jns clc mov lea jg push cmp daa mov pop incb lret mull leave jb loope sti jmp sarb aaa ret pop (bad) out lret sub jg or and jmp inc push out nop loopne movsl in xchg xchg test cmpb js shrb mov aas aad dec inc add fsubs arpl je stos addr16 (bad) ja mov mov mov sbb xchg or test clc test cltd mov (bad) jmp pop sub (bad) addr16 js fldt inc scas lock int jg test adc xor cmp xchg sub fdivrs or mov inc and jg sarl xor cmc jno addr16 (bad) out jp fistp add xchg inc scas jg jno aad int3 pop aam js dec imul fs adc dec and test jle xor fstpl xchg nop jg js inc cmp pop adc lods lahf mov push push loopne pop pop in addr16 push dec inc out stos jg cmpsb mov insl clc lret jg test mov jo push jg pop fldcw xchg add mov pop sbb js jg popf outsb jne mov stos jg push xchg into out popa push jl (bad) (bad) dec xchg popf divl pop iret xchg jge xchg push rcr in cmc (bad) jg jne dec loope adc negl add and jg mov add mov mov push or jg (bad) dec and push in pop adc inc and shrb xchg sub add insb cmp jg fidivl add out xor call lret ret aas fisubr (bad) dec xor daa fimull push jg jge mov into xor insb cmpsb fdivrl push inc test jp jo rorb fbld test call push out jl mov mov sbb das push pop ret std jg cmp mov loopne add sbb dec idivb outsl sub fistp int3 sbb mov jg jmp sbb jg jge sbb jns sarb btc (bad) inc sub pop std sahf pop addr16 pop xor inc jg ret enter test jg jne jbe out cs jg lods sbb fnstenv out inc xlat push (bad) outsl add jg xor out jo out hlt push jne sahf (bad) (bad) lea pop sarb sub jg sti and (bad) mov mov jl dec jl imul lahf scas pop popa sarl aas lods dec cmp lret popa cmp jg aas or xor stos pop cltd out cld mov jbe mov clc stos xor les mov das pop adc imul jns jg inc notl mov pop add inc ficoml nop jno jg dec sbb mov pop ljmp xchg cmc jg dec push enter in loope mov inc mov lock xchg pop adc inc xlat out dec sarl inc xor jg mov scas cmp bound rol or sub add sub in loopne dec lods aam push sub movsb jle fisubl addr16 add xchg clc sub cs (bad) jne arpl les inc xchg mov inc inc test ja int les addb mov fisttpl lock mov pop lahf fisubl jg scas (bad) xchg loopne in pop mov lret push jae sub adc mov stos jnp fdivrs ror (bad) jg mov xor sbb mov dec fwait pop push sarb outsl add repnz js aam (bad) add frstor sub xor nop popa fbstp push loope,pt jbe rcrl (bad) (bad) dec jg pop push or cmpsb inc idiv mov mov lcall mov mov inc imul and movsl adc sub test jb jg scas adc inc out jo jg cltd push push push push sarb stos inc jl push pop jg and outsb ljmp mov gs (bad) (bad) lea sub dec xor mov inc cmove mov mov pop je mov sub aam dec push popa or (bad) and hlt cmp mov dec aas cmpsl ss and jmp ljmp cmp (bad) adc add imul inc add (bad) pop js enter mov jno (bad) ret imul jg inc cmpsl mov (bad) icebp and sub mov (bad) jno hlt dec pop xor mov and test mov pop xchg jg cmp mov test mov pusha push enter outsl pop add cmp arpl (bad) add and lret out sub or jg push add sub push sti out xchg jg ss mov jp dec das mov and sbb mov inc (bad) xlat inc test push jg or mov inc sbb jg add xor or and adc adc push adc lods jg push pop pop inc adc jg sbb mov fs dec pop dec mov in and mov cmc rorb jg movsbl inc sbb std jg dec testl jg push insb es sbb mov aaa movsl pop inc or jg hlt xchg call cli jo pop jg jb jns jg repz hlt push call lcall popa xor outsl jne je push and (bad) stc fs add or xchg dec stos dec sub xchg jg gs adc and ds test mov lea mov cs jg scas push shll mov arpl cmpsb movsl mov cli cmpsl (bad) jg add adc jg push xlat imul (bad) mov sbb push outsl ljmp pushf push adc add add rorb dec pop insb js jp pusha jg mov xor int3 jg xor (bad) pop push jg test or lret insb in push fmull jae into and out pop add add hlt xor jns fisubrl xchg out pop push mov out mov arpl xor and fndisi(8087 pop jg aam outsb dec repnz jge xlat in imull cwtl pop jp mov mov inc aad aaa je jg sbb push notl and mov mov fisttpl sar arpl xor cwtl xchg cmpsb jg and xchg sti pusha mov xor mov jo ret xlat scas xchg adc pop lds push mov inc shll lret fsub xchg test pop mov fs mov mov lcall mov jmp imul push jg push rclb lock inc adc sarb jnp outsl lods ret imul aaa jg andl jg inc icebp or (bad) lahf jg cmp mov arpl xchg insb in in mov insl push push inc out jmp movsl jg jo roll jbe jno add or retw jg ds mov sub sub xchg ds sub cmpsl je add fmul xorb outsb loope je adc jg aad imul mov lods mov jg fistpll xchg mov pop imull sbb jge repnz aaa cmpsb sub cmp (bad) mov leave xlat mov shlb push adc out jecxz movd jg push mov jge jno mov pushf push sub jns nop int3 push add xor outsl pop hlt add push mov jns and cmp inc pop outsl xchg mov jg,pn pop gs sbb inc jmp les sub push bound dec sti js and dec imul jns mov rol mov cs push mov insb movsl outsl cmp mov ret mov fistpl cs cmp xchg jg in and cmp sub aad pop dec push mov mov in rorl popf jg ss insb lret rcr ja lret pushf cmp xor movsb mov ja dec sbb pop add clc jg imul mov cmp push xchg inc mov sbb idivl popf in inc addr16 mov cmp pushf sbb jnp inc js (bad) dec lds repz xor ss cmp mov out sysexit imul pop sub (bad) xor lds jg (bad) loop mov mov fsubl dec jmp sbb rcrl mov push stos xor sahf daa insb (bad) sti push mov pop loope jg sbb negb pop jno push jg pop mov jg inc in popf mov sub jmp sub (bad) lret das jae ja mov pusha cmc ret xchg adc jg mov sahf push dec fisub mov jle mov push push (bad) dec add dec mov aas xchg mov jnp and std ja pusha jg sub je xchg mov jg das mov aaa jg xchg test jl push pop cwtl outsl nop cmp ret lahf divl jp jg clc fs sbb ficom add mov fildl ljmp push adc push mov xor adc mov or sti ret mov in inc sub jg add or mov fimull pop jg mov cld lret add jg,pn xchg sub bound iret jg cwtl inc jns rcrl out fistp cvtdq2ps sarb test ja cmp pop xchg sub xchg loop test push clc je jg or and or dec (bad) mov aas sub fcomps pop jmp stc lds cmp cmp test fsub fnstsw mov dec subl push lock comiss in pop sti movl out xchg push mov enter sbb jg pushl scas push jmp imul sub cmp pop or addr16 pop cli pop or lret js cmpsb sub outsl pop jne xor mov into dec dec dec dec jg cli jge aas xchg fmul jg stc sub inc jle in jg sbb jns pop in jg inc je scas hlt es ret mov dec pop loopne jg cltd mov (bad) jg lea sub loop xlat and cwtl lret push sbb fdivrl jl out in push insb mov addl push jg xchg fisub mov jle and rorl lret or loope or outsb es pushf mov roll sub cmc test sbb mov clc movsb mov jne inc stos shrl lret je jg xchg pop scas sbb (bad) test or in pusha jg sahf adc pop xchg outsl push xchg bound xor shr mov ljmp pop aas test jg dec adc xchg mov ret push pop jo adc leave jg (bad) mov repz add fcmovb push ret cli pop cmp push push test jg jns and stos sub leave adc pop mov adc dec js cmpl jle or lock addr16 stc xor cltd cmpsl adc sbb adc xor push lret xor pop add xor inc mov pushf out aas xor sbb subb lock (bad) in mov xor cmp push lods aam lret sub js dec aas pop cmpsl jmp inc adc jg nop mov xchg subl push mov push faddp (bad) mov cmp daa movsb jg (bad) inc or fdivr xor mov bts cwtl out insl stos adc inc xchg pop jecxz hlt in jp cmpsl int inc stc sarb inc pop call insl aas pop fdivs cld cwtl jae enter mov adc dec loopne dec jg xchg push mov cmp jecxz add and jg fucomp sbb mov test bound jg (bad) ja int3 cmp sub and in cltd loope imulb mov mov sub xchg and add jg mov (bad) jne loopne (bad) jb popf push sub pop mov jg test pop bnd aas push outsb or into inc mov push sub or (bad) adc mov jbe cmove dec jg jle in xchg and clc jl mov dec inc insb jo imul cmp js lea sub jg insb push fs fwait and sti pop jge pop jmp sahf xor mov js lahf dec inc push cmpb rcrb mov dec dec jle hlt out mov push add jmp bound add fiadd insl test jmp stos pop jg mov ja gs mov lret mov push jg ret add jno js sbb mov dec mov jecxz jge clc add and inc (bad) pop jg pop enter shrl insl out mov iret and les ret cli xchg inc jg insl and cmp and mov mov xchg aas (bad) mov imulb dec jg cltd rolb repz jg sbb push cmc (bad) js jg xchg fiaddl fidiv shrl inc (bad) aam dec and pop mov inc imulb xchg jg (bad) lock cmp mov hlt int3 jg or inc lret aad xor mov xchg repz mov xor loopne push test add pop subl mov add mov xlat in or jmp mov or jae pop jo lods aad sub push stc xchg andl test xor jg sub xchg xor out jg (bad) cmp pop mov sbb sub push rolb (bad) jg add sub add mov outsl insl (bad) rcrl mov jg xchg add add inc loop jb add popf mov mov in jg ja cmp mov out dec (bad) xchg xchg push imul fdivr ret fdivr jb cmp xor roll out jg adc rcr or je jecxz pop jg inc cmp cmp sbb pop stos inc mov addr16 pop push (bad) mov dec es (bad) push (bad) pop xchg jg ja and inc (bad) jo inc iret lds lret popf add inc pop sti mov adc jg in mov add jg pop es scas xchg jmp pop adc xlat insl jle mov cmpsl sbb fldl and jg stos jo xlat outsb push ja mov std movsb jmp mov push add xchg je imul or xchg adc inc aas inc in fs in shrl or push sbb jg fiadd dec aas push dec lret inc hlt and dec mov cltd xorb jg sub adc fdivs inc and arpl pop jae fidivr cwtl bound jg push enter mov jg jl mov out jg jbe push lds mov popf xchg enter pop sbb inc out movb pusha xorb ljmp fcoms push aas imul mov cmp jno inc push call mov inc jg fdivrl je jp cmp cs repz push mov inc or data16 and mov sahf cmpxchg lret pop and add xlat push cwtl sahf (bad) fcompl les popa mov enter mov nop lea sti adc cmp push mov pop xchg adc jg cs stos cwtl aad cmp inc movsl pop pop cld fiaddl push xor mov pop inc call push mov add loopne jg pusha push jo into sbb out popa arpl js jg pop mov (bad) lods inc sti pushf in out lret inc (bad) out fstps mov cmp mov inc jg scas lds insl push ret aad sbb mov jg ljmp inc pop jg mov sbb out jg sbb adc pop fs cmc jg stc lea gs jne pop jmp cltd repz mov pusha test fwait push into dec outsl jg sub aad jno ret adc mov sub mov add sbb push lods jmp ds xchg sub inc test ret outsl pushf adc jmp hlt rorb xor mull mov outsl inc mov sbb jg fcoml push sti jnp cli pop outsl cmp and adc mov in adc in sub dec sub mov test cwtl mov jg add cmp xchg lahf (bad) pop addl test pop (bad) adc push arpl cmp sub stos dec outsb aas fild pop stos mov pop jg test in xchg mov dec negb test mov popa lret stos mov sbb ja cmp or incl xlat scas clc outsl xor mov stos mov sub mov inc (bad) (bad) mov rorl test xchg dec movsb adc ljmp pop jbe (bad) jg add mov dec inc jp sub aas cli jne out aaa push inc add jg pop js cmpsl adc xor pusha xchg ficom push (bad) dec outsl (bad) out mov inc inc in imul mov jg ljmp jg daa dec insl stc movsl (bad) jg clc pop mov jo cmpsb jg into pop pop hlt inc inc sti mov movsb (bad) popa out jg scas nop mov xor pop arpl mov pop cmp pop pushf mov push jnp test outsb sub inc add mov imul lahf cmpsb out jg test jmp jg flds dec jno imul js pop adc mov pop xor add jl je fldt jg pop arpl xor cmp jg out xchg test jg cmpsb xor push lahf stos mov mov push mov jg adc out add push repz popa stos insb das loope jg push cmpb mov fldl fsubr pop jg faddl ficompl ret inc jge cmc adc popf add stos add mov cmp jg mov stos les dec icebp jg cltd pop ds sub jg xor cmp out popa mov add mov dec incb ficompl jg cli jb decl xchg jg adc or lods fwait mov sti adc dec xchg mov jg push push (bad) scas inc or pop inc pop fcmovne daa jg sub mov sbb outsb mov xchg movsl enter popf nop pop or repz insl cld pushf jg jb push cltd or jg ret cli adc in rol pop setbe sbb xor js push push jg shrb cmp addr16 rcrb pop sbb push adc out (bad) cmpsb shrl sub sub iret sti mov enter or (bad) into dec jg,pt mov out ret inc mov stc icebp bnd leave data16 jns jg das push scas in aas mov icebp add fcomip sub test mov and cmp push sbb jns inc mov push xor pop cld xchg jb mov sti xchg sub mov aaa jg jecxz lea adc cmpsb jg lahf dec movsl xor nop jg pop cmp enter jg (bad) lret test sarb jle repnz add xchg cltd and arpl push out popf (bad) call (bad) hlt js fbstp les mov xchg jg cwtl push and jg faddl adc jg or shl and lret iret ja addr16 push push adc pop jg or aaa jg sub das jmp aad xchg roll add movsl scas pop or cmpsl jg lds push mov jo push pop xchg (bad) and dec in jg je,pn (bad) and and jg lods xor sti push imul jge ret (bad) ss cmpsb jg xor xchg (bad) into ret cmp xlat jle mov xor or pop cmp aad int3 inc sbb jg mov adc scas insl xor jg lcall and pop xchg in repnz dec int3 cli jmp push insb outsl ficomp repz in mov js fild mov dec inc mov lahf cltd outsl (bad) aas test mov dec (bad) and lahf push insl jg (bad) rol mov xlat mov jns das lods jg cmp imul jg (bad) subl and lret or adc mov sub aaa clc jg pop dec or movl loop ret jg mov (bad) mov iret aaa cli or push cmp push add loopne mov and sarl je add sub iret jg mov sbb cmp push cmpsl (bad) cmpsl or int push adc sbb and cld aas add adc imul pushf cmp aas jg sub inc jg and mov in and jg ret out rol (bad) enter hlt lods js pop cwtl pop jo cmp and outsl je call inc ficoml subb or mov mov jbe adc jg inc xchg mov cld pop mov inc mov push sahf push or xchg ds stc (bad) jae cld dec std in push add jg mov sahf gs xchg lock pop cmpsl mov jg pop lret stos aad sbb push xchg jg je jne sahf sarb or pop and int jg enter jb cmpsb jg orl pop jg imul and ja push jg fcom push sti lods dec add xchg (bad) and mov fmuls cs aas mov pushw inc sahf sbb es mov ss or jg ja inc sub adc xor and lods sbb pop sbb dec and daa push jg xlat add or mov nop mov popf jg xor fdiv ret dec add test mov insl xchg dec jg add push jp pop sarb pop sub mov cltd push xchg (bad) (bad) mov and sbb aad xchg jbe xchg idivl cmp inc jg cmp pop ljmp into mov adcb (bad) out sbb clc mov push daa push (bad) cmp pop xchg jg mov xchg inc mov mov out or ret dec loope sbb push imul lock mov addr16 outsl mov (bad) xchg ret jl aas sbb inc loope sbb gs inc js outsl add sub ds mov scas or test xchg xchg mov jns jl jle mov cmp mov push sahf push xor insb movsl xor dec (bad) mov inc loopne imul lcall jg push bound sub jo jmp mov xchg sbb cmp pop (bad) std mov cmp fdivl xor aaa xchg js out mov (bad) jg inc lods mov push jmp mov outsl in les jg dec xor out (bad) fdivrl aaa cmpsb push jp or dec repnz call fs lods pop cmc std adc xor outsl sbb (bad) xor jg and xor jg lret xor cmpsb and mov pop mov (bad) mov loope jg fstl icebp clc mov sub push je in addr16 jp sbb pop test cmp jg push fistpl inc or xchg fisttp jg cmp fdivrl adc push sub sbb dec flds xor lcall negb aam xor bound mov sub fisubr mov or pop jle les sbb or leave pop pop mov mov dec sub mov popa adc jmp lock and scas cmpsb cmp and jg xor scas jg pop jne pop mov or aad xor adc movsl sti ja adc sbb and or pusha mov in notl mov push mov jbe jg or mov test dec mov cmp xchg bound or pop jg fstp test jg mov cmpsl das jg push jp sbb fstps test jg mov aam mov adc loop or repz cmpb nop out stos jecxz enter pop pop int (bad) popa bound push ja pop sbbl dec inc inc add xor mov jbe ret jg mul (bad) aad leave int mov cli mov loop jns clc adc iret jg push jge nop fmuls cmp mov arpl push aas (bad) dec jg loop jno cmp fidivr aad and jo hlt jg inc loopne xchg add mov push sti jg and pop rorl jg mov pop inc clc in sti dec sub mov push push jno xor (bad) popf dec mov sti xchg dec call jg add dec in xor aam lret arpl xchg pop adc jo cmp aam sti mov jecxz jg push push ss (bad) mov das insb call outsb push loopne and push mov ja mov sub add pop cmp out repz jl xchg cmp mov sbb or xchg mov mov sbb push (bad) ja idivb stos pusha loope pop push imul pop cmpsb mov cli pop test fistpl mov in fs cmp inc push mov jg in inc aad jle stc call dec push xor jg loope subb int jg xchg pushf add mov sti sub aas xor cmp ss test jne cltd jo cmp (bad) rcrl mov or add ljmp sub daa icebp gs add cmp movsl pushf enter out outsl pop inc cmc clc into cli jg divb inc loopne sub pop mov sahf mov stos in xchg push mov lods dec sub rcrb pop sbbl inc ja int3 mov adc fsubr aas push aaa add sbb dec mov jg xchg inc sbb imul je dec cmp jg jbe call jg jo idivb push gs push jg call lcall xchg fnstcw cltd fsubrs jg pop add and cmpl dec arpl pop sbb inc scas stc outsl lcall aam cmp ret mov std adc lahf sub test dec out in mov cltd sahf jl add push cld imul int or ret mov cmpsb push jbe mov cltd jg dec xor jg outsl scas xchg dec inc pushf lock push fnstcw jg lds je pop out lods in jle js push insb mov jg xchg hlt or mov int jg int3 iret push mov in shll jg pop pop cmp jg dec cltd xor mov or and bound push jae pushf negb jg cmp push xor int cmp ret cmc mov pop dec loope jg xor dec push hlt jae fs enter or xor adc iret fimul jg (bad) mov shlb jno and pop data16 mov scas inc ss iret js inc mov cmp out aaa ja or inc add mov shrb inc aaa adc xchg mov jg pop cmp insl test sub mov mov mov xchg es fmull fwait outsl sahf lea push mov (bad) jl adc push movsl and cli outsl faddl shll adc add mov inc xchg (bad) mov pop fsts jne dec sub sbb ss aas inc cmpsb subl adc push or lcall mov mov mov push push rolb and xchg mov test jl add cmp loopne dec or dec cwtl sbb bound fwait hlt pop outsb js mov mov jl insl inc push xchg mov pop push push pop mov sub jg dec mov inc jg ljmp jg pop jmp adc insl push cmp sub (bad) jg mov pop sbb aas jns lret sub pop (bad) jbe addr16 inc mov and mov jle push mov cmpsb mov push add mov test js loope data16 jp pop (bad) iret and sub push inc xor or pop mov push pop in mov jg jle push jo test cli inc ss mov mov (bad) jg jp mov cmpsl nop (bad) cld push push imul enter dec stc inc in add jg xchg sub inc scas jg push (bad) mov push jns inc (bad) jg xor lods or xor fcoml inc ja add sbb mov jg outsb popa cmp lcall scas lea mov and shr pop mov add push mov iret jle test inc dec stos push jg inc outsb cltd mov jo das pusha push arpl jg adc in in outsb or movsb sahf sahf notb inc push sti mov arpl addr16 cmc rcl jg and lea test (bad) jg sub out aaa mov cli fcompl add add pop jnp rclb dec mov cld cmc fwait aas les cs mov xor scas cwtl jo xchg fdivrs mov xor jge pop jp mov mov cmpsb push aas push pop mov lods (bad) hlt inc jp jg (bad) dec lret adc jg cli sbb jns and outsl adc mov imul fistpll (bad) ss lahf mov popf jg push fs push mov and add xchg popa push jle mov mov stc cmpl adc mov add adc cmpsl insb js call cmc jg rcrl adc and pop insb inc jg dec xchg fmul mov push fldt js inc rolb out enter and mov stos aam add jg pop in jmp jg xor mov js xor push into (bad) jg in push ja sbb jge adc roll fdivs jg cmp out xor aas stc mov mov cltd inc sbb sti push fwait xlat jg dec and xchg js mov test arpl popa jg fidivrl jo adc adc call dec insl xchg jg cmp daa sub mov adc notb fstpt add inc stos ds cld in inc jg jo into aad jg or inc inc add dec call fwait dec xchg cs jg pop sub ret jmp fidivr and jg cmc ljmp push stos push fisub aaa outsl jg sub int xchg cmp ljmp jg push adc lea jns rcr gs sti and sahf jl inc pop ret fisttp ret js dec enter das lods mov popf aam push pop dec xor jg jb leave inc cld pop loopne jg aad push out xchg inc jg xor mulb mov dec in pop pop inc xlat mov inc xor out dec fsubrl jg dec aas adc aad pop pop xchg mov push idiv add adc jle add test ret in or leave mov (bad) divb aam lods mov les rcr repz loop jg adc jns inc lods cs xchg popa push push andb mov clc out jecxz mov repnz jg xor pop stos roll sub fwait mov mulb insb imul inc pop loop jg mov push ja mov popf pop bound repnz repz jno jg dec mov notb cwtl fstpl and mov pop cld (bad) sti out push mov jne and xor or adc out mov pusha outsb inc insl (bad) adc in hlt cmp jnp jg xor in jg mov xor mov test cs stos jg mov push in iret sub cltd outsl shrb (bad) cmp mov leave imul pushf sub ss sbb hlt std pop jae subl nop and lods in mov cmp loope inc lods outsb jno push mov jg cmp xorb mov pop mov fdivrs mov jg movsl dec pop cmpsb notb sbb aas or add jg xchg xchg or mov mov cmpsb pop aad jbe jl mov jae fnstsw sbb xor jle jns jl push test aaa push cs jne,pt xchg push ret mov jp pop movl adc popa jbe mov pop pop test fstpt mov mov ret jg movsb jo cmpl cld jg jle sahf pop xor aas lods fsubr add mov jae inc mov (bad) imull lret jbe adc pop cltd xor dec cmp dec lcall and aas adcl dec insl es loope cld aam ljmp into add add pop fmul inc mov lock inc inc dec sbb xchg jp pop inc mov mov and aas mov jno xor mov stos ja cld cli push dec dec cmp loop add sbb dec jb xchg xor sub js outsl rcrb jg mov jge xlat mov cwtl push aam ficom add mov mov aas xchg sbb js pavgb arpl stos mov sbb hlt sbb push fidivr sub fcmovu mov dec pusha ss lods fs movsl mov sahf jg dec lds inc into sarl dec test fidivrl (bad) mov repz mov jg sbb out lret inc adc movsl mov mov sbb jl ror mov stos push call in pop rcrb and add repz dec push dec je into enter jg stos loop push call loopne inc les or jg adc dec mov bound sarb fildl imul lahf sti cmovne jg sub into mov jmp nop mov ja xor add jbe lcall fdivrl add jg inc mov dec jg push mov je mov push fs fidivr xor jb and adc mov (bad) icebp mov ret and mov lahf mov or insb sbb fmull sti outsb pop scas jg mov mov add popa push or inc mov (bad) inc pop cmp fstpt pop data16 jb cltd addr16 stos jbe lahf in sti cli mov pop jg enter leave mov ja jo pop cli arpl add mov xchg ret ret nop les inc adc jg add fwait and jmp jg or loopne loop jg pop jnp das pop sarb sub dec mov mov inc adc push mov test out loope in xor ret ja rcr movsb adc cld sub in pop add test mov jg pop ja cmpsl cmp xor cmp push or jg (bad) repz jmp xor into out add push jg sbb loope aas mov scas outsl call jl cld sub mov sub xchg mov sahf in (bad) jg fcmovu imul (bad) js inc (bad) push pop and imul out and adcb sbb dec push and push inc jg jno jge mov lods stos jo ss mov jge cmc sti (bad) out pop outsl icebp cmpsb movsl add aas jecxz xor and jg xchg fstl jg mov fwait pop xchg lahf inc jg xchg pop (bad) in (bad) or jg lret notb sub dec in sbb faddl (bad) fstps and (bad) pop daa insl imul add pop or into cmp lret mov and inc divl pushf push loop les in pop and push std (bad) jg decl outsl mov call loopne in sbb or fwait jg fstpl mov add mov (bad) jae push (bad) push inc pop jg fisub push or fcomip (bad) ja xchg sbb (bad) jo aam outsl inc mov ret and jae sarb fs cltd xchg ret in jg sti std enter cmpsl jg loope fsub lods jmp adc out aam in jle pop inc rcll xor adc lea push sub pushf cmc call push daa scas lcall push mov je mov mov in pop dec std lret ret jg cmp es xchg insb push fstl and jg xlat jl sub sbb adc jo arpl xchg ds inc or cmc xor xor clc sbb push ror jg jp fisubrl rcl int3 (bad) mov inc push or sbb addr16 pushf pop (bad) nop mov or jg inc (bad) (bad) repz jecxz (bad) add inc add clc aas call out jg sub push push int3 cmpb (bad) outsl mov out fwait inc pop jns and jl jb dec das jmp popf out sbb test bound mov (bad) repz insb inc sti enter lcall inc loope dec mov mov mov and add ja aas push add inc xchg enter mov stos les xchg push cli mov jl pop jg xchg gs mov jg (bad) out lcall mov (bad) mov mov cmp scas xchg stc push inc dec ret xchg jg jo pushfw mov int adc in pop cmp mov cmp call jg adc jg pshufw xor cwtl adc mov push rcrl pop outsb (bad) test mov mov inc xchg dec cltd ss inc int hlt outsl mov jg adc insb mov cmp jle js,pn test out dec addl sub rcrb inc push rol pusha aad dec add out jg add mov jg and and subl mov sub shr push cld mov xchg push sahf (bad) in jg jmp jl cmpsb cmpsl sbb cmp or pop jp add test xchg sbb and push pop push push ret jg test notl mov arpl mov inc fcmovnbe xor cmpsb cmc test fistpll stos add imul ds pop xchg sbb pop mov jns rorl addl xchg adc jg icebp mov in cltd faddl mov test mov inc jb insb pop fnstcw scas mov les pop sarb (bad) cmp int3 mov xchg pop sbbl mov (bad) loope lds push into clc sahf inc jg pop cli push ret mov cmp mov jge pop pop (bad) jg icebp xor js push test cli loop inc mov arpl jle jg in aas out push fidivrl sbb hlt testb push pushf icebp fstl dec sub cmp inc call and scas dec cmp mov enter cmc (bad) jmp sbb jg push pop insl inc mov xchg jae xor and insb mov data16 mov divl flds daa lock or int3 aad jae xor mov enter scas lods adc pop cs jg ljmp mov in inc add outsl jmp mov (bad) cli jg incl (bad) xor (bad) jg stos jnp adc sarl sbb mov sbb jecxz pop ss add js movsl je xchg mov inc (bad) mov mov pop leave outsl int3 es scas xor mov or ret jg stos (bad) ss pop fiadd jg fstp inc dec push scas sub xchg out dec test jg push cmpsb in pusha mov cmc dec xchg insb inc test jg jecxz mov jg or mov xor adc jae mov cli ret sbbl popf arpl cmc push sbb into fdiv out iret xchg jo jmp or outsl mov neg pop xchg add test imul pop mov sar add loope push adc cmc mov jge repnz jg jecxz dec jno sbb jg movsl mov pop push inc nop inc or cli fs mov push test mov sbb stos jg notl sbb jle mov outsl xor add inc pusha in xchg cli arpl cmpsl loop mov cmp mov jg mov lea sahf sub or push je ja or mov not arpl mov bound jns sahf sti add stos push cmp jg test lret and jge aas fldenv jle cmp inc pop or mov push xor pop data16 or out inc fdivs xor mov push mov into jle ret sub jg test shr cmp lret fmull xchg cmp inc pop jg in cld and mov outsl adc insl mov nop cmp mov arpl cli mov popf int3 pop inc hlt mov getsec dec movsl in sbb cmpsl sahf negl aas cli xchg loope mov fs pop jle nopl cmpsb pop xchg mov adc cld jae dec mov xor outsb daa jnp les mov scas xchg jg (bad) imul pusha inc jmp adc jg jns loop lods pop out jg ss inc outsb imul call cltd jg std ljmp sarl sbb jg sub push jg (bad) push mov jg ret lcall insb outsl fisubrl bound add test aaa adc faddp adc int loop dec popa ljmp sbb add xor stos jg mov test dec jg cmovs xor cmpsl inc iret and mov leave xchg adc inc fdivrl ret in jp,pt or jg pushf into xor sahf sbb dec test xchg jg imul mov adc cmp cli insb push jl cmp pop (bad) iret dec fstl jg cmp (bad) jns dec pop mov test lock sub popa mov lea fcomp out mov mov (bad) jg push fild xor mov es jmp ss rcll cmp or out bound xchg xor sahf test fsubp cld pop pop imul lcall dec aaa test hlt test neg dec mov and mov pop inc insb push sarl les jg (bad) fsubrs imul inc dec cmp jg xchg sar dec arpl and ret test nop jnp jg and xchg jg mov lds cmp sub xorl in inc xchg add xchg bound push out jg shrb mov mov jo pop dec leave das pop stc jg imul cwtl ret push jg fsubrs outsl imul cld cli push test std push stc lcall xor jbe xchg lahf dec dec jne mov into dec fisubrl outsb jmp inc fstpt inc mov jg loopne repnz jae mov (bad) mov sarl jg,pt gs sahf adc shrb adc test outsl jns test jno xor mov test or mov mov (bad) dec jge call in dec jbe pop (bad) mov scas inc out in xchg pop jg or pop jg rcr jo adc adc and jg mov test imul in push movsl mov jg adc in aam dec out mov loop inc fadd lahf jg xor jae stos jbe gs stos xchg icebp and pop mov xchg outsb cmp adc fisttpll sahf jp pminub aaa out xchg xlat ss mov and dec sub add pop xor mov ja mov xchg and or adc sbb daa push push and cld lods xor lret sarb in mov out outsl jmp and std dec rcrb jmp sub inc sbb (bad) jg daa push dec mov push adc dec push pop jg js and or jmp popa mov mov (bad) mov je mov andb mov insb dec out push push push pop es lret mov jbe test jmp sbb jg mov (bad) (bad) aas cmp fstpl pusha mov cmp in xlat pop faddl or jno inc enter add leave pop and push jne sbb ss and jecxz cmp push daa dec cmp inc in outsl sub bound jg inc jnp shl xor inc lods xor jg and popa jg cmp push mov jmp lea jle imul jg js fild sbb lcall push aad nop and cmp jg arpl cmp ret push pop into test jg jecxz pop pop dec in and sbb xchg jg sub push mov scas jg je fnstenv jns js mov cmpsb lds sub push pop enter (bad) add (bad) into inc imul fdivr in aad jg ret rclb xchg mov pop xchg out cmp (bad) loopne sbb mov jp call mov gs adc (bad) jg dec enter cmc das jg sti pop scas inc pushf xchg insb jg push jmp adc pop pop cmpsb and mov jg je xor popf dec fidivrl aaa sbb xchg lods aam mov test dec mov inc fidivr sbb push push adc into scas outsl mov (bad) inc (bad) cli std xlat pop icebp loope jl push loopw mov fistpll movsl jg add popa cmpsl jg adc xchg push or arpl ret dec mov hlt jg jnp mov cwtl shll jg sbb pop lahf mov sub movsl out jnp pop roll aas or nop popf mov lods dec popa sbb dec in (bad) imulb add lret xchg pop in mov jg inc divl dec stos adc pop iret clc mov pop fcomip lahf cmp inc dec test jg push and mov ja nop inc pop jg jnp out repnz adc push add inc xchg ds divb mov jg jb jg jno cmp push mov aas cltd xorl push cmc int3 inc pop inc mov xchg xchg push cmp movl cmp fs (bad) xor lret jae pop ret and jg add sbb mov cmp aad das jg rcr cmc scas push mov popf fild and inc pop mov mov add adc push dec (bad) mov in les push dec jg inc inc push fwait gs test outsb lahf lods fdiv inc push (bad) aam rcll jg mov fdiv lds jg mov rcrl (bad) push inc lods cmpsb cmp mov gs cld fs fcompl sub ja insl jg sbb stos insb jg jnp arpl push cmp movsl sti (bad) cltd sub dec ja add (bad) pop dec dec sbb xor lea pop mov pushf outsl push nop mov or push dec mov fistpl push adc cmp (bad) jbe dec pop mov mov movsl jb xor push outsb (bad) or push mov jo and (bad) popf pop jg xor cs stc lods sub pop push out (bad) jne adc xchg aas and mov cmp cmc or jg stos dec and cs cmpxchg imul icebp inc inc fistpl or xor sti fistpll movsb das mov push cmp imul sbb lret lret jecxz jl loope jbe push repz or sti mov (bad) stos xchg mov sbb addr16 test (bad) pop mov cmp mov mov push in sub jg pop add (bad) jg adc jl movsb push add call dec xor nop pushf pop mov in mov ljmp shrb cmp sbbl jg lds xor (bad) xchg dec push push mov xchg lahf test pusha mov and xchg pop push gs insl js lods out cs adc fsub sbb test jo test mov push dec cmp out jg ja fisubrl jg lret aad cli dec imul idivl test es or mov jg jne cmp shrb jg pushf mov ret push jg mov adc jg add cmp push (bad) fstpt mov (bad) jno mov insl push mov jg push push out jg and lahf loopne dec push push in sbb dec jge and icebp imul or (bad) out add imul or std inc jg ret test mov jg cltd xor add sbb aas mov sub jg sar scas pusha adc push jl cld lods pop out cltd fidivl jb fstpl inc fnstcw aas les jg inc mov mov mov leave jnp xor or arpl jg repz push cmc xchg imul (bad) and jb sbb dec push stc stc cmp xor inc inc jbe loope jo push subl stc in jg lock dec xor jg into or pusha mov (bad) pop aaa out bound nop or lahf jb ret push ja idivb xor loop jmp loopne jg xlat and lock xchg pop into stos or mov mov arpl dec jg adc sbb jg add pusha or stc lds (bad) enter adc xorl xor ret cmpl cmp pop jg mov push aaa dec (bad) idivl data16 xchg das dec cmp fstpt add xchg xchg xor mov mov repz pop addr16 fcoms mov adc cmpsb mov jmp gs sbb outsb aam nop insl test (bad) xchg bound call push orl ds push mov sub add add sub xchg dec je cmp jg int jnp pusha jg push aad sgdtl aas scas adc nop inc mov jns ficompl jl jg and xchg dec jg mov scas lret add pop rolb jl aad cmp scas dec add jle addl mov stos inc push cmp inc fdivl jg pop sbb std insb fdivrs aam shrb in mov sub lods aas jg jae test xchg sahf xor sub jne jg push push std jg (bad) pop loopne push in sub xchg js lcall fild shlb mov mov or push pop inc arpl testb pop xchg add jno jg jge cs xchg inc jg ret add push jg sbb xchg les mov andl lret pop jns (bad) jg cmp int3 (bad) std lcall stc push mov sbb mov setae pusha add cld sarl and outsl enter in xchg (bad) and or nop jg dec add stos popf push addr16 push jg jl xchg lret jg shll and in fxch jg add pusha mov je inc cmp mov movsb popf loope inc (bad) mov or aas mov jg xor dec jg mov sub stos arpl mov add fs lods pop inc push xchg cs push xor fcomp inc stos jg or cmpsb ss jbe mov mov mov pop sub incl xchg enter test pop jg adc lret sub movsb (bad) mov jg xor int jg mov std inc jg jmp xor imul aas dec cmc aaa pop dec imul mov (bad) aad xchg cmp (bad) push (bad) clc pop js (bad) icebp adc out out mov out or mov adc lret jo cltd das xchg jle scas xchg mov dec pop clc call jg outsl mov xchg push and push push ret add jg pavgb hlt int xor and fwait (bad) aaa test xlat inc in std xor pop jg jno mov and loope dec es idiv jg add inc jecxz pop lock mov add inc rol inc je and sub loop pop add cmp mov scas sub and push sub jns xor mov jno js push std jg inc repnz jg jmp cmpsl out pop popf mov aas rorb testb lret push cmp xor js ret in fisubl xor sti mov dec xchg ja adc ret (bad) mov mov std mov in or loope mov into inc sbb push push lcall mov inc mov mov cmpsb inc dec or je out mov fbld jb scas jns jg sub or fnsave pop aas into lfs xchg jg inc imul cmp xlat push pop add push jg scas sub (bad) (bad) cmp lods out daa (bad) out adc sub mov adc out jne pop pop lea jg mov ljmp xchg sub (bad) mov dec mov outsl xchg daa adcl dec fisttp or dec das test dec test dec scas repnz call xor fdivrl or push mov jns inc fdivrs cmp (bad) fidivrl pop outsb icebp addr16 aad ret ds dec outsl sti push and mov mov arpl push or adc sbb scas pop aad sub cmp adc push jg loopne (bad) inc sub popa ffree (bad) add push mov inc mov sub pop mov popf scas aam jg xchg icebp lds inc dec mov push (bad) mov xchg aas mov mov jnp gs lods scas pop sahf jg (bad) xchg call jg fnstcw inc xchg mov inc inc cmp je jg inc pushf push sub adc out lock xor push inc pop dec jl inc pushf mov mov mov lods cmp (bad) cmc loope aas mov xor insb jp xor inc jne pmulhuw fcomip jb enter outsl xchg pop (bad) fcmovnb bound cmc cltd mov or push jnp jmp fwait pop adc push cmp cld jbe aas dec insl (bad) out push movsb cmp lcall jmp jmp adc clc jg inc test inc jo sbb ret add mov adc fildll leave and test pusha aas aas addr16 mov ljmp aas loope test movl icebp push mov jnp std outsl xchg mov xor dec sbbl push jae rolb cld dec push pop mov adc les lock lret scas mov or mov and outsl add les xchg test push push mov push dec in sti cmpl fidivr sub test pusha (bad) (bad) in cmp mov xchg je jno ja sbb (bad) stos mov or les (bad) pop cmp push fcmovb jecxz imul loope mov lea push jg push pusha xor cmp push mov cmpw test test jg mov lds inc sbbl rorl inc shll pop stos int (bad) jg dec fldt or xchg jg out sbb mov push inc in adc xlat addr16 stc jbe jg dec cmpsl cmp dec jle (bad) test (bad) fisubl inc divl mov sub dec enter inc mov jg add ret sub mov ljmp or xchg mov xor xchg lcall dec jnp loop imul incl out hlt insb or pop push fdivrs cmp nop and cmpsl dec and mov outsl lds inc call loopne or mov aas int3 mov sbb aam sub aaa push popa movl lds movsl cs dec ljmp fdivrs sarb xchg ret jg sub out jg,pn add xchg cwtl shlb mov jg lods flds jl pop data16 imul mov xor jg test mov add push jg mov sub mov push cli jl dec fildl imul clc cmp add movsl dec mov cmp aas xchg rorb jne ds mov mov mov cmp pop sahf mov push inc mov push xorb inc push dec ret test jg,pt mov bound mov xlat inc jg aas or addr16 mov inc pop inc adc call mov inc push jg popf cwtl pop dec jns inc jg push loopne (bad) or mov stc inc push mov sar mov pop mov icebp sub test mov cltd xchg scas inc mov fldcw aas jmp mov and roll inc insl jg inc push add sbb mov dec add ja sahf notl inc outsl mov mov mov inc scas pop icebp insb xlat mov add jns pop (bad) sbb xor jne xor test jmp out inc sbb mov imul cmc xor in popl xchg cmp bound push lret dec shl stc enter outsl movsb movsb iret mov fcomps pusha jno std int3 jae clc dec in popa lgs loope inc lret movsl sbb fnop pop mov cltd arpl jg data16 nop sti scas ja pop popa push xorb js mov lds lret inc jg insl push test and cwtl mov and cmp pop jge inc js hlt dec xchg jg mov mov cmp addr16 xchg jl mov and push jmp push cmp dec je push inc push xor xchg scas sub jbe mov rorl jg fs ljmp push dec jg xor and mov sub jg test pushf mov popa adc adc inc add jg adc adc (bad) lcall mov jmp mov cltd xchg aaa and mov add push ljmp add jg xor sub dec xor jg xor repz jg jp lret cmp jg jmp pop into popa aad (bad) leave es test and dec (bad) jno and or jecxz arpl pop and mov fistpll mov addr16 xor jg mov dec es je push cmp bnd aaa insl mov pop call test movsb fcomps mov mov push je mov fcompl mov dec ljmp push scas jbe cmpb imul jg loope pop or mov dec jg ret xchg ljmp jg mov push clc jg in sub scas push aaa outsb inc dec call imul sbb arpl fnstcw imul inc mov push sub inc fwait jbe (bad) dec and jne mov test dec mov or jg jae ret sbb jg cmpb in mov pusha in sbb ljmp data16 rolb dec rcl sub mov and (bad) sub fcompl aas cld nop std xchg jae outsb add pop xchg adc mov movb jg lds jg or push ja sub cmp dec mov pop icebp aas xlat test dec sarl pop shll add shll fistpl inc inc or insb arpl ss (bad) sarb sbb fs lcall nop jge inc mov movsb call mov pop (bad) sub pop xor (bad) add mov enter jg cmp add jg aas aad inc dec lahf mov lcall mov add dec xor xchg add mov (bad) lock idivl mov xorb es bnd jg bound adc xor jb aas lahf sbb (bad) cmp arpl fadds jg out frstor mov lahf rclb mov insb jg into lods mov mov or mov int3 inc mov cmp push pop (bad) int xor in mov cltd jp jae mov pop sahf dec addr16 popf in sub pop pop dec mov sbb pop cmp xor mov jnp js add stc imul pop aaa and push es pop bound add out aas loope xor fistp daa ljmp push jg icebp cmpsb dec aas (bad) loop or push xor outsb (bad) nop push mov fs or adc pushf inc pop mov dec aad daa xchg sbb push xor xor push pop call insl mov jns xlat pop pop daa jmp jg xchg jecxz and cmp jmp cs leave pusha into and mov lock pop or pop stos jg jbe roll add lock xchg inc mov mov leave or mov dec jne dec inc xor push dec je rolb and aam or or mov stos cmpsb xchg cmp mov dec mov test lea test and xor ficom fmuls mov push lock xor fwait push mov fisttpl test adc (bad) lret pop xor (bad) jno fwait mov lods inc and add out idivl sbb and int adc js aas xchg adc add sbb aad jmp out dec mov dec cmc mov notl int3 sub add mov mov aad cmc adc add mov fchs daa jg enter inc les jg dec jbe jno dec ret cmp fs in into jg rcll rcl jp repnz inc inc mov mov ds adc cld idivl add mov shrl fs push dec mov mov lahf aas bound std sbb add jg rcll xchg xchg pop enter outsl (bad) (bad) xor aaa cmp clc pop ljmp loope ss cltd jle or int3 hlt adc insl or mov (bad) loop movsl push mov mov ret addr16 (bad) xor negb icebp inc js dec dec outsl dec lock outsl mov pop mov jg inc (bad) pusha test sbb add mov addr16 push ficom jae or jns sub push out enter fidiv cwtl xchg dec sbb dec jg daa lret fldl ret dec rorb cmp mov test stc mov mov xchg mov mov sbb inc push jg jne rolb jo cmc pop fst fisttpl cmp xor repz inc jg adc int3 jg xlat jb stc and dec jg les (bad) jae mov fwait call add jns sti popf sub pop je mov jb pop shll add and in lea (bad) dec sarb test jg and push scas mov push aas mov sub push xchg (bad) popa (bad) mov push dec inc pop sbb jle xor in dec sarb adc in movsb xor call jg pop inc jmp cmpl mov js and push push sarb add dec inc jg jbe mov aas mov jecxz dec sbb jg iret (bad) jle inc lds int or icebp aas (bad) dec dec fwait hlt and (bad) mov popa mov iret inc and lahf jg ret ss pop aad lds dec int3 je and adc xchg repnz cmp enter xchg in fstps cmp jg and and jg jl dec scas dec inc mov hlt imul notl pop sbb sub mov jg mov cmp push mov fdivrs push hlt pop mov lret sub out mov pop inc dec or mov xchg push xor jno sarb in mov scas enter pop xor add out in pop mov pop outsb loopne jg scas and cmp xchg mov bound mov aas les dec adc loope jg repz sbb sub and adc andl xchg xor add lods mov ja andl mov pop push int3 push and repz add arpl call xor es std xor xor fcmove inc sti mov movsl and (bad) dec jg jbe mov cmp push push aas (bad) dec sub adc jg mov mov jg mov out (bad) jg inc mov dec cmpsl lret das mov or lahf inc mov jg call movsb adc add cmp pop xor dec xor adc add sarb jle ja jl pop std jge jg lret xchg cli pusha nopl aas dec mov xchg inc aad cmc jl xchg div jg fsubrl push pushl outsb ret mov push jg add popa and jg fs (bad) incb jb enter (bad) jg jmp in lock movsl out inc sahf loop mov jg mov ret mov dec call bound jg or cmp add popf test xchg push jg pushf dec inc push push mov cmp sbb lds pusha fnstenv sti add sub pop or mov sub stos jg cmp xchg pop mov jg xchg sbb cmpsl call ljmp xchg xor (bad) cmp dec sub js mull and cmpsl or sbbl push pushf ljmp jg leave clc and inc xor fs xorl push outsb pop ret popa jg mov pop mov xlat sbb mov imul test lret lods (bad) jmp dec mov mov cld push sti inc jg jmp fs mov inc pop mov add sbb ja adc cmp add fcmovbe jg orl jg and jp scas jb jg scas lea cmp add hlt cltd jg cmc xor jg loopne out xchg enter jns push mov push jg std (bad) mov sub pushf lock jge xchg fst adc fstpt or pop mov cmpsb in mov (bad) inc pop frstor pushf pop jae stos jg and imul incl and inc or xor cmp std ret out and jg divl add movsl jg fsubs add sub aaa add pop jg mov arpl cmp es push test loopne fisttp jg xchg enter stos pop mov adc xor rol aad (bad) imul ja jg jmp push data16 in inc cmp (bad) and jg inc addb je (bad) inc hlt jne mov inc and adcb mov jne inc add sub mov sub fdivrp jae aas xlat in leave scas mov idivb mov jg push xlat inc fnsave cmp mov xor lea fdivrs mov adc sar jl cmp (bad) jno mov mov or jae addr16 loope mov in jns jg push xchg sub repz mov pop mov push movsb jg out mov gs sbb fisubrl cmp jg mov (bad) jg incl stc cmp pusha xor mov fucomi cld adc stos fnsave sti sub (bad) adc cmc sub xchg dec mov dec aad loope ja and jg fldt arpl lods cmp pop ljmp ret rcl push pop jg jo arpl mov mov xchg sbb lods jg xchg ret popa push jg adc inc (bad) out outsl fnstsw (bad) pop repnz test jle dec (bad) mov popa into loope dec add mov xor push dec (bad) ljmp cmpl into (bad) mov popa clc pop jg cld dec mov jb jle xor ja fwait cmc sarb (bad) int3 lret sti aaa sarl dec add insl or pop (bad) (bad) mov adc sbb and fmull jne sahf mov mov dec adc and jg in dec push mov repz enter inc xor xchg mov sbb jg ss and into push jg roll out cli pop movsb jg std repnz mov sbb ljmp int iret jg (bad) rcrb roll jg and mov pop cwtl push fdivl scas add and jo cli imul cmp jg pusha int3 inc rorb lcall (bad) aas data16 inc jae cmpsb fcmovnb je dec jmp (bad) cmc mov adc mov xor jo popa mov sahf mov ja xchg mov inc int3 mov pop adc imul arpl xor or popf cmp mov or int3 lcall mov cli mov cmpsb imul and outsl std inc mov lret xchg nop inc push and (bad) stos addr16 dec rcpps push pusha push (bad) cmp mov pop movb cmpsb jg inc stos xchg mov decl jg sbb inc pushf jl scas jl imul jmp out xchg sub pop dec push sub mov lret pop subb jg pop fbld mov sbb mov lods sbb push mov inc cmp xchg xchg (bad) (bad) out mov sbb jg popf fcoms push fstpt push jo sarl xor cmp iret add jg mov in inc adc into sub mov mov sbb dec lret mov push jns push (bad) rorb cmc jg inc fwait jno iret sub jg mov mov loopne repnz roll aad jns test jnp and shlb pop pusha lea fldl adc and test int stos xor pop in push lock pop xor mov lret add pop cmp fidivrl ret push ja jg adc stc std into (bad) push cmp lock (bad) ja cltd lret inc push push pop adc xchg inc lahf std dec pusha jnp inc (bad) mov cs aad mov scas (bad) jg jmp fxam pusha ret adc leave adc cli push into mov nop rolb rcrl push cmpb cli into xchg mov cmpsb mov hlt (bad) jg sbb and jg popa inc incb sbb sbb ss inc loop jg pop pushf test in jg pop mov add inc bound std jnp jg add push sbb cmpb xor mull mov aaa sub (bad) push mov es xor pop mov sbb xor in std les (bad) cmp jg xchg jo mov sbb cltd lods outsb push jg lahf inc adc xchg jbe mov jg insb rcl cwtl add jg sbb in fstpl add cmp pop addr16 sbb call cmpsb jg cwtl jae cmp addr16 push ja mov inc jge bound cmp lds jnp pop cmpps jg cbtw push xchg sub mov inc jno push dec fnstsw jmp mov jg cs (bad) mov (bad) cmp aas andl aad mov in mov inc lcall rcrl test push xchg jne cmp jg fs lods (bad) insb clc mov pop sub ds jle jg mov and inc and push pop sbb and call jle push mov mov sbb pushf insl (bad) and jecxz arpl sub in xor adc ret out out enter stos mov into jg repz ljmp jl jmp jg mov lods jg mov stos mov adc mov push push push adc mov lods sahf cmp cld fldcw xor jg scas ja cli jp insl jne jg ret mov xchg jg lret pop or arpl mov outsl fdivrl xchg scas and jg in xor pop ret jg popa mov jg stos mov mov fcmovnu cmp dec jbe test push mov fnsave xchg aaa add and inc sub (bad) fdivl cli repz (bad) jno fs push sub jg gs loopne sub mov sbb hlt ffreep std mov pop ret ds or add mov or pop jnp outsb std cli mov fdivrl inc ljmp lcall (bad) mov out xor lret jg into leave pop mov pop lahf (bad) testl xchg jnp mov pop dec mov cmp jg xchg ljmp inc mov lods cmpsb imul popa addl ja push cmp pusha and xchg xor jg add dec inc add mov mov jg mov dec push (bad) ja jg or mov mov repz repnz fsubl or dec fisttpll lea aas jnp nop ror xor pop push or lahf jg,pt hlt inc mov movsl jg sbb jbe sbb xlat pop fmull mov xchg pop test jg (bad) movsb out test adc sbb inc (bad) jb dec and add and (bad) jg js hlt shlb jg adc mov mov add ds xor out clc dec mov sub subb enter jo push (bad) cmc (bad) jno xchg repnz roll imul inc mov jecxz jns in and add dec dec mov mov or and jg jp (bad) aad idivb mov enter icebp in inc push (bad) xor stos jnp rcrl pusha fwait out (bad) or stc sarb xchg dec jmp mov push das aaa testl std adc push insl scas jg xchg or repnz mov sbb sub fistp movb and mov xchg xchg push xchg mov aas jg rol sbb roll dec pop mov data16 sbb jg push cmp add pop cmp mov push rcrl lret test or jns arpl clc lods xchg insl jg faddl push (bad) insb jg out or ret (bad) notb and popa dec jg cld push or mov hlt popf xlat dec jg out mov sub pop dec std pop inc sarl mov inc dec add jg je cli iret out pop push mov ja ficompl (bad) mov push xor add push mov xor mov mov addr16 ds mov mov cld (bad) ja jmp adc jne mov je insl inc dec inc fidivrl and sbb jae ret sar xor cmc movsl sti insb (bad) adc jg xor mov or push sarl nop int mov jno mov mov fisubrl pop not mov lret xchg dec leave sar sbb push jg fwait push and ret in jg iret mov loopne dec ja lock or jg xor or inc aam xchg pop stos adc divl in push inc fwait pop jg,pn scas xchg jle pop in xchg jg fiadd inc jbe or jne push (bad) jg call xchg cli jg int3 pop mov repnz outsl and js mov popa jg sub aas out jb,pn or inc add mov (bad) icebp insb mov incb jnp mov xor inc cmp jg jo mov inc dec jg loopne movsl in pop leave jno rcrb push mov je jle or or sub imul and pop inc sti adc in pop hlt jae cmp inc xor lods movsb sarb aas mov sbb mov int into in mov out dec test data16 sarb adc loope das pop (bad) mulb inc jb int3 mov clc addr16 test daa je cmpsl mov (bad) (bad) mov mov xor jg pusha mov test jbe sahf or jns sbb daa lret sbbl rolb bnd jg repnz mov jbe push cmc sub or (bad) mov addl xchg and sub jnp in mov add ret mov stos fwait in or lret jg gs mov mov mov loopne nop or pusha add push and pop push clc xchg push and sbbl cmp sahf jle dec dec in sbb shlb cmova jmp mov mov inc lock mov jg arpl mov roll mov das ret inc cmp xchg sub or outsl jno push lods xchg scas int inc sarb or stos out inc fwait hlt inc adc shrb jae popa test or in mov fdivrl lods (bad) push add mov or dec and aas stos xchg push cwtl adc inc stc mov les pop sub sarl adc outsb mull jns rclb inc loope jg aam push fsub mov test stc mov sarb arpl jmp js sbb ljmp (bad) mov jne mov inc pop dec xlat xchg mov aas mov add cmpsb push dec test jg outsl sti cmp rorl jg in repz rcrb inc fstl inc (bad) push scas xchg lods pop ds jns jbe jg sarl fstpt mov jecxz int addr16 fdivrp scas jg push movsb dec pop add xchg jg dec mov jg imul mov jno jg mov in mov mov jge mov lods push popf add mov jg sbb xor jg pop xlat sub jnp jg jl lcall in addr16 push jg sbb sahf mov dec shll lcall or xchg jg aas je pushf push or cli psubsb jg mov sub cmpsb test sahf lret js mov cmp aas cltd mov jno cmp iret negb pop dec mov mov lds out fdivrl mov hlt push fisttp adc sbb fldenv pop jg or mov push jg mov sub fcmovu jecxz int cld mov push inc mov mov in mov loopne sbb mov mov cltd or mov out lods add jecxz sub lret adc call (bad) aas xchg gs mov imul push lds mov rcrl (bad) mov sbb jg movsb ss outsb cmp inc (bad) jg mov push or or inc push arpl jg push and (bad) scas (bad) jg jne or dec clc jg stos sbb sahf mov xchg cmp adc movq jl data16 dec (bad) jae xchg fs imul lds cmc inc adc and loopne jg scas int push rorb cmp jg idivb jns mov xor jg and out test sahf adc xor push jecxz jg sub pop jg sbb cmp or stos jg fsts xchg sbb iret mov mov jae ja pop jg shll inc shl ja pop cmp (bad) push push (bad) fstp xor insl imul aas fnop and inc cmpsl push inc fimul mov jno cmc aas iret ja shlb inc je push add push outsl dec fld inc adc jg (bad) pop outsb adc enter mov xor fdivs add jno dec adc cmp cmp jge and out dec pop jp add xor sbb jg pandn push dec jg add mov mov aas jbe pushf or sbb jg test loop lret inc les mov mov adc push es movb cmc test popa pop roll pop nop jp add push inc inc adc fldenv mov pop cmc loop popf aas ljmp aam cmp aaa gs cmp sub xchg bound pop xchg inc push js (bad) pop adc xchg jg ret mov jecxz lods jg and pop incl sahf push push sarb jae in mov mov inc jecxz (bad) xor mov fistpll adc mov jg rorb ret mov mov adc rcrb jg inc stos jo mov mov add push xchg xchg repnz fimul jg decb mov inc fadd ret loopne je fdivrs push inc adcb (bad) aas and ja push shlb addr16 jg sbb push fwait outsl notl mov jg pop inc dec cwtl or js mov cmp xorl fidivr and in fs xchg xor loopne jg (bad) mov bnd or xchg mov test push mov xor push lock rol adc loope cmpb push jle mov scas jno daa scas jne sub push int mov fistpll es stos test push loop ja sub icebp ret data16 push and mov sbb xor mov xchg imul loop insb aad outsb scas mov daa (bad) imul push inc jns sbb dec movsb ficoml sbb arpl and aam insb or pop push push std sub and (bad) sti jmp out pushf ficompl mov test jb jge outsb mov xchg mov pop pop inc call mov (bad) stc push lods std idiv mov (bad) es cmp inc dec lret iret mov add outsl add push push js cltd cmp sti in xor (bad) mov ret inc fcoms jl jle ret sub and int (bad) mov xlat sbb push dec mov int push pop int jg andb test pop fisubrl dec cmpsl jg add and fld cltd sbb xlat addr16 jnp xchg jg cmp sarb xor jg xor lods fdivs jbe adc stc fimul pop jle loop or insl cli (bad) popl push sahf pop std jg xchg or je fs stos and xor sbbl and (bad) insb inc aaa adc jbe ja outsl xor mov xor int3 jg push daa ljmp xor cltd ja adc hlt mov iret adcb jp dec (bad) pop inc fnstcw data16 jnp mov xchg pop cltd and mov dec fsts or inc push (bad) je imul out aas pop arpl int3 repz pop sarl insl fbld leave or adc in (bad) lods and sub dec adc mov xchg into push mov dec jg cmp movsb lods jg pusha adc out cmp jnp xchg dec jg jle push mov js and pushl decb bound sbb jmp icebp data16 adc hlt scas (bad) popa mov loopne mov jo dec cmp test fucomi jg fnop mov jg inc into push popf jnp inc jg jp dec push add push sbb lock jg jl rorb xchg jg xlat xor and push mov xor push jb mov cli cmp stos clc xchg jo jne cmp xchg outsb inc mov js jge call jp fstpt into jo out scas inc mov add mov (bad) jg pop add inc sti addr16 xlat ja jae and jg inc sub lock pop sub cmpsl adc adc outsl push mov arpl mov fcomip mov ja std aas jg sub lret mov and js jp lea enter in push mov insb or xchg xlat enter fdivl mov test ds jg ljmp jg jnp leave mov mov addr16 mov jg in shrb popf sbb xor das in push imul cmp and mov mov loopne and shrb stos dec cmc add jg push cmpsl lods inc aas js jg rorb xchg adc loope (bad) idivl cltd push sti std sub arpl xchg mov addr16 jns js cmp adc jg push (bad) scas or mov into inc mov lret ret fdivrs gs adc shrl popf pop lcall (bad) loope xorl mov scas and mov jg ret imull xor inc in lret outsl adc fs mov add insb mov jg lret cmp cmp fwait add dec pop xor pop add icebp aas inc rorb push jbe pop cmpsl outsl jmp lcall xor sbb inc inc jl mov loopne imul repz addl hlt ret pop cmpsl (bad) cmc mov mov push mulb mov mov jge int3 pop (bad) leave jg mov cwtl add out xchg fwait sub cmp ja mov xchg xor rcll sahf jg adc sub aas mov sti scas jg jecxz rclb cmpl lods xor push mov ja enter mov cmc popf fiadd fcmovu xchg lcall jle mov clc jg and loope mov and fidiv movq test mov cmpsb insl hlt add dec (bad) imul js enter xchg jg cld in test cmpsb leave jg fidivl pop decb lcall out sub xor jne mov outsb and lret loop leave je pop inc mov dec (bad) fmull jg mov shr leave (bad) xchg inc cmp mull pop das (bad) sub jg lret mov jns fiadd jg movsb pop aaa sarl jg fisubrl push push jb jmp insl jns push cmp push cmp xchg shll leave dec (bad) jg dec mov jns cmp inc jl mov in xchg push test jge ja aas inc cmpsl insl (bad) idivl mov inc pop pop xchg mov lret leave and push int lods mov jne mov inc dec xchg push icebp ret mov pop rorb je jg lods pop mov jg mov jmp cli les or adcb out fs sarb xor enter out xchg and add jae push and add sahf cmp std stos jg pop sti outsl push jmp dec repz sub jno insb jg pop imul fwait mov mov mov push es jl or sbb add xchg clc inc aas mov jp xor dec ja jno add sti inc mov bound movsl sarl or je lahf lods es push (bad) sbb fnstcw or xor push cmc jg push inc inc loopne push mov in aam or je (bad) push and mov xor push lods cli ficom stos subl std in pushl stos int add sti or es inc xchg rolb pop sub jb mov (bad) dec sti mov test cltd jg stos jbe xor repnz imul mov jg iret dec es adc pop addr16 pop mov inc aas push push add pushf nop adc sub popf inc orb arpl push stos (bad) dec out mov xor fsubl daa jg xchg jmp js repnz mov jno sarb test xlat xchg test adc (bad) push xchg sbb jne lock lahf adc fidivrl or mov pop pop clc pop dec hlt divb adc jg jp out addr16 jg (bad) add mov inc jp pushf popf aaa mov int3 push pop lock xchg ret fldl inc or xchg inc mov (bad) mov sbb mov jge loopne xor pop movsb or notb pop cwtl jg mov sbb mov stos or cmpsb mov jmp roll test jg push add xlat mov cmpsl (bad) outsl mov in pop mov lea jg sti mov ss pop aad adc lods jg cs mov push push jg int3 lds mov mov gs and pop scas or (bad) in cmp movsb pop sbb aam jae int pop popf jg xchg fcmove xchg push fnsave jg sbb mov das ret mov xchg mov clc jg push ficomp sbb jg mov inc fwait jg xchg cwtl push lret insl jg dec jl adc fnstsw pop mov out in insl pop xlat jg sbbl and repnz jg push aaa xchg icebp push lods roll inc jg push pop adc lea sti mov (bad) sub jg adc and outsl pop jg inc add js arpl mov jg loopne mov mov int3 lock je scas jg xlat mov imul aas inc pop dec icebp xor aad jmp push sti sar imul pop enter jg dec out cs in mov inc jecxz pusha daa pop nop jmp jl jg xor mov aam dec xchg roll popa xchg aas imul arpl mov inc jg cmpsb fcompl xchg or mov iret sti inc shll mov mov sub lcall (bad) mov stos daa xor or pusha jg aaa pop cli push inc mov sti mov xchg sbb cs push imul popa jge outsb cmp ljmp sub aas xor (bad) xlat loop adc mov rcrl testl xor fwait jg mov push imulb cmp jg pop sbb mov dec mov into xchg inc cwtl pusha aaa jg and hlt jg push push inc jae (bad) stc jg ret pop (bad) in sbb jg into cmp mov fldenv pop fsubr add or aas into negb arpl pusha aas and mov dec push test sub mov jg lcall jg fiaddl mov cmpsb pop stos jg mov popf mov jg xor (bad) insl mov pop iret xor mov out sbb adc mull push or cmpl add xlat add mov aaa mov testb sbb cli cs inc pop push inc mov push cmc stos outsl sub call cmp addr16 insb movsb xor movq push mov sub dec stos icebp adc xor mov fcoml lcall cmpsb insb out dec push in bound call (bad) jg jne push jg mov xchg or mov enter fbld aas loop inc xor sbb jo dec test mov addr16 repz lahf push ficoml sub loop outsl es jg mov lds adc mov mov adc inc push jg pop call arpl pop lea (bad) gs lret inc loopne xor sub mov mov out ljmp sub sbb sbb cld add and rclb orb inc mov inc sub mov arpl xchg adc movsl xor jae cmp inc fucomip jg addr16 xchg popf push dec adc mov pop icebp out (bad) aam out fnstsw or xor fidivrl jecxz or xchg mov pop cmc push pop cmpb dec mov scas mov xlat ja std icebp mov adc and imul fnsave leave jg adc push je push or jg movsb shll pop lock xchg mov jbe roll inc sbb dec jg mov (bad) stc xor stos adc pushf jno cmp mov aas ja fadd or outsl inc aam jg push lahf loopne fs mov push mov cmpsl cmp sub dec notl pop imul shrb sbb cmp test sti pop mov cltd mov xchg jb add into jg (bad) lret sti les and arpl cmpsl hlt iret enter push cli and fnstenv dec cmp outsl xchg jg sub jno in stos mov jg mov in stos jg out ljmp mov add test std sbb jg dec add jb push int3 jae and and pop mov push cmp jle lret and dec jg int3 and mov ja icebp decb sbb or out int addr16 fldcw push and aam mov push add sub lock jg insl add (bad) mov adc inc dec popf xchg jg (bad) fmull rcll and fistp (bad) aaa jmp inc stos and sarl ror pop int3 dec arpl mov mov dec inc and pop adc sbb fdivr xlat fistl aas mov dec cmpsb rorb dec arpl loopne ja jo jg into jae insl daa int or dec (bad) mov test jecxz insb lods push and call sbbl aad jge push cmpsl jg imul pop stos pop mov hlt lcall rorl js in jg or das sbb out aas cmp icebp dec fwait lahf jbe mov daa or aaa mov in jecxz mov aas test mov dec rorl cmpsb nop loope inc lock mov test jg loop icebp sub rcl jg jo aaa sub jg iret sarl jg int stos push dec imul xor inc sbb nop lods mov and jg pop jne inc add daa dec iret aad mov push jp daa ret xchg cs scas leave adc movsb inc subl jg in es scas aad jnp inc mov jg sbb fisttp fldenv inc enter jg mov dec pop in dec aas adcl ret pop jg or xchg jne sbb xor int3 jg lds xchg mov rcr pop sbbl mov lea xchg pusha lret push dec fisttpll adc loop jg aam push cmp pop mov mov mov (bad) jo add lock or fnstcw aam xor add repz mov inc imul shrb push aad out mov jnp mov loope out ror push ja inc jle mov push je outsl jg fsubp in movsb adc loope jg sub jns xchg inc inc jg pop scas xor out push popa stc push pusha stos xlat jg jo inc sbb hlt lods pop into mov jl xor cwtl jg mov scas mov mov jg (bad) int3 xchg call push sbbl subb pushf pop leave inc loop jg outsb adc mov add fistl in jg push js call and mov add push lahf add daa pop jmp aam inc mov jg xor jnp lret jno cmp push es lods movq js sarl jmp pop insb in mov in test cmp dec lock pop lahf stc scas sti mov add xor jl dec out ret sbb in add push jg cmp jne stc out mov xchg stos push std jae add insl jecxz mov mov jo inc mov pop (bad) jb add cmc cmpsb outsl mov add iret push jg mov jmp jg pop bound in shlb jg jge inc jo cmp jg and pxor cmpsb jo pop (bad) jmp pop js ja outsl mov outsb xor lret mov mov dec xchg imul pop stc call insb cmp clc jg gs xchg loop jg test jae mov sbb (bad) loopne das dec inc bound cld out and push stc mov jg jno mov popa jb leave xchg or add dec loop cs call cmovb adc mov or insl pusha cmpb mov hlt aad and mov cltd leave push out mov addr16 scas jle (bad) jg adc and mov mov push push jl fmull cmp push outsl dec arpl pop test mov cmp inc iret int mov bound out inc dec in pop pop jg and jno ljmp jns push lea std xor push in jg pop push push sub mov rclb repz icebp adc lods ja lock repnz dec push lods hlt fnstcw xor test and jg icebp loopne push push fdivrs insl dec (bad) repz inc test jp pop inc cwtl jne jg loope (bad) insl add inc jg out adc push fs xor jg fwait pop sub imul jg xchg push addl jg lret push movsl (bad) jg enter add push jg or stos mov ljmp jge mov test inc or jg push ja adc out jg pop mov std sti lea imul jp (bad) js dec push add shrl dec mov jl mov jne lods daa inc outsl repz stos (bad) cld jp xor adcl push or push inc dec mov cmpl mov imull push lock pop sarb pop mov fs mov push sub pop mov dec sarl jno ljmp add sub inc insb xor rcl adc add repnz lods jl push jg sbb cli inc jp mull inc das jg jno repz mov aam push idivb lods cmp inc out pop leave mov cli xchg cmp inc rol test jnp inc mov pop jne outsl ja mov inc and rclb jg stos div out mov jg xor popa sbb (bad) stc jg xchg loopne inc xchg enter lret jno in mov (bad) testl mov add jnp cmpsb jge add out mov addr16 insl fwait lds aam xchg add movsl xor jg stos jnp aad add pop mov stc int3 lea push stos in or das jmp or fldenv mov inc sbb es push leave dec ret dec jg lcall cmpb dec fild inc jg push dec movsl std mov sub hlt xor cs mov mov lea sti out mov call pop or les and std lret inc lcall (bad) jae push jo cmp cmp push shll outsb es sub add stc fild mov inc cmp jg lods pop push and clc adc mov stc pop aas sub lret cmp jbe jg sbb mov sub outsb mov mov ljmp jge or ficom cltd aas lods cwtl ret sbb ret and jg daa (bad) in js pop les int3 push ds jg push test jbe mov repz or jnp sti decb data16 js mov sbb (bad) mov stos sti cmp into ds mov imul xchg rorb ret mov pop lods xchg pop jg test inc mov mov sarl jg mov pop mov cmp cltd jns gs xchg jg mov stos test call mov (bad) mov outsl cmp xchg jg test pop movsb jns es sti js call aam mov mov mov and and idivb lods jo add rclb ret and pushf lahf (bad) repz notb add fyl2x mov xchg sub push push pop mov ljmp (bad) jns cmpsb jg jl ds call xchg ljmp and jmp mov cltd cmp push adc pusha push jg add in mov stc adc stos jg test in call insl (bad) and adc add inc xchg sub push push pop mov fstps jg cs stc sub jg sarl adc dec push jg mov movsl inc shlb aam (bad) mov pop fbld jge xor mov jo aas jnp pop dec xchg dec cs cwtl aas and lods adc pop es loopne and das bound cmp sub iret lret inc mov and dec pushf (bad) ja flds rep int3 hlt dec mov fmull leave xor mov cwtl je out pop les clc jno cmp (bad) movsl iret mov out jnp mov push movzwl adc insb mov sub (bad) out sub cmc cwtl and and jmp xchg mov jg push scas lods jg sub fwait jl cmp ja xchg or lret jg mov jo lock outsl sahf pop dec inc addb das mov in mov cwtl jg jne in push imul into mov fildl jg xorb mov fcomip mull dec xchg jo jle aas (bad) jns ret push das test push mov jg call mov repz sbb push add incb jb neg xchg bound mov lock push test sbb sbbl lea xor xchg mov mov cwtl repnz inc mov fstl lahf push and addr16 mov lds movsl es cmp mov mov out inc push jecxz jg scas icebp mov (bad) gs arpl (bad) jno iret pop push mov les lret inc jg and ja adc mov aas jb mov dec xchg jge cwtl mov jp sub cmp jns addr16 (bad) ror mov cmpsl ja dec popa xchg jg inc inc jns (bad) iret inc aas cld mov mov int3 sbb sbb push scas adc mov out and jg (bad) jno add test bound mov sbb jp call ss clc add jg mov inc stos cli aad or xchg pop pop fisubl loop mov mov into jl sbb cld xchg sarb inc rorl mov nop jg mov mov lds ja mov movsl jg cmp scas lock in jg iret js ja xchg repz nop aas push push or push mov dec or mov mov pop xor pop jmp mov mov jg jne popa push pop mov outsl imul dec test jo rcrb lar pop or and mov jge jg inc push clc js jnp jg adc pop mov adc out fldcw mov sahf cli add pop mov out push push add sbb or push aas xchg pop cmpsb jmp mov inc or or psrlq mov mov imulb sbb add push and and test outsb mov sbb cli inc ret outsl (bad) stc cmpl aaa and ffreep jg enter je shl dec mov mov pop in xchg ret jg int3 push js adc and imulb cli xchg jmp push fbld dec (bad) mov add lret cli (bad) ja int outsb jg jp mov jg inc mov arpl out fidivrl jg push pop neg mov (bad) cli fidiv cmpsb or es inc movsb push xor loop adc les jg push in push jns dec mov mov xlat pop out imul inc push outsb mov dec hlt out orl fadds js fisub mov pop jg aam cli adc es (bad) in fnstcw xchg out rcll pop outsb sbb insb push jae out movsl jno in inc pop xlat insl push jg adc xor sub mov (bad) mov xchg jg add popa aas daa cld inc jg lret (bad) adc icebp fmuls aad jg push dec jae negl (bad) xor cmp xchg inc jg test adc lods xor js xor inc xlat xor fs push and mov aam pop push push xchg jg mov addl pop jns inc (bad) cli pusha imul mov mov dec lcall and add cwtl jg addr16 add xchg pop mov in jmp lock xchg and push jl jg mov add jg call sbb mov leave outsl xor mov les rclb aas dec hlt and cmp dec jg in not cwtl andl cmpl jge aas ret (bad) or dec dec inc jg das jne,pn cmpsl repz movsb daa jg lock and mov imul loopne scas push and jg orb xor out push mov fsubrl sub add jbe int3 fidivr lock movsb or inc dec mov or sbb push sbb in movsb dec iret jg push or aaa mov fdivs in roll jg add (bad) fcomps rorb add xchg lock daa jg cmp repnz sti or sti mov stc sbb xchg dec cli and fisubl jg inc iret into push fnstcw inc cmpsl jb pop (bad) rcr fisubl or dec (bad) arpl lds xchg cli and mov clc adc (bad) cmp jg xchg adc repz jecxz or lret jg (bad) repz xchg mov mov cs int repz jg test je mov js les iret (bad) in stos ret pop test add dec test into insl mov mov imulb popa inc jp cld cmp roll add mov mov push cmp jg or in test popa jg pop int3 ss cmp mov push dec push (bad) adc ret divl push adc jp jbe jg pop popa repz out jg insl clc fstpl jl (bad) cld jg adc xchg stc in pop push jg js pop mov mov fucomp pusha mov mov xlat and popf dec sub arpl sub pop stos xchg incb mov mov sub pop clc inc cmp out xchg frstor cwtl mov lea jg arpl mov fwait jg andb ja xchg jg iret mov jns scas mov loopne inc sub shlb push inc outsl in add scas and mov cltd xchg inc mov cmp sbb arpl jg test ds mov lret jg push in inc lock adc pop mov shl xor into test adc pop or lcall sbb sahf xchg push ja int3 or adc mov in (bad) loopne push push jg jp cmp sub (bad) out pop mov mulb jg ljmp lret (bad) je sti xchg sub mov dec in pop bound cmc inc pusha out (bad) ljmp mov ja or in push add in inc mov inc out aas cmp adc test dec mov jg mov push dec mov roll inc xor imull xchg stos inc rol out inc jp add jns fidivr dec ret rclb xor fstpl push stos and mov scas repz insl dec lahf mov push or inc sub xchg inc xor stos xchg inc or or mov jg in ret jl jg xor insb pop dec jae push pusha or incl lods ss fnstenv icebp adc xor jo or xlat jg adc fs in jg stos inc aaa fmulp vsqrtps jg shld rol in into mov imul cwtl add repnz test jmp xor call sbb leave inc xchg pop jg jnp fldl inc js jg pop add push jno jg push pop and jg arpl jg pop sbb fdivrs cli dec test jle sti jmp cmp mov push adc inc adc xor xchg gs ret stc and jg int decl push mov jg (bad) hlt push jecxz xchg inc lock jb fistl (bad) xchg sti je jl jg xchg hlt xchg jne mov pop jns (bad) int pop dec rclb loopne mov add add cli sti jnp outsl cmp jg push ja mov sbb xchg jg (bad) mov xorl jg cmc sub xor jg dec sub loop insb mov cmp fnstsw aad mov jg ljmp jg jne daa loope ss jg arpl fs clc stc dec sti sbb dec ja sub xchg jg sbb fldenv xchg add fnsave in bound jg clc jb in cltd (bad) jne popf cltd (bad) lahf mov lods in loope (bad) fimull jmp xor xchg clc sbb daa cmp sbb aad jno js jg popa xchg fdivr iret movsl push jg or ss out sarl push mull jg enter das cmp xor popa cli out int3 pop jae inc jecxz fistpll out lcall cmp es inc sbb dec pop jecxz push xor jnp stos mov scas fcomps jno inc cmp xchg or insb sub mov sub and stos int pusha sub mov hlt (bad) (bad) pop into icebp ljmp in jg push dec fstpt mov cmpsl cmpl leave xchg mov add mov jae mov test cmp or sti movsb data16 xlat pop fs lock and das sbb ret pushf arpl jg lcall ret xchg jg test cmp jbe (bad) aas scas pop xor push xchg sub push cmp push iret jecxz addr16 jg in int3 jns xchg jae movsb es sti in lret rcrb icebp rol cmp (bad) imul jmp rorl pop sbb icebp lock cmpsl fsubr sub mov jne jg and inc jg aas jnp inc mov pop out in std push push hlt mov and dec inc outsl scas inc (bad) pop jg lret lcall jecxz das fistp loopne add mov cmpsb inc loop ret or jno gs push xor popf leave jmp cmpsb xor push lcall cmp sub jbe jg inc movsb mov cmpl push repnz xchg dec stos push negl bndstx mov dec adc inc ljmp inc and cmp (bad) jmp sbb loopne aad fild out test jb iret arpl push (bad) insb inc mov cmp xchg lock sub jg push push sarb int and mov jmp sbb jg pop lds les out dec cmp push stos inc mov mov jne cmp adc xor jmp stc lret sub push mov leave jle jg jns pop sahf push (bad) jg sbb rcr jg loope mov test sti imul or pop aad jle clc or es cli jnp jg loopne jo mov subb lods dec subl aaa cmpsl mov in mov mov pushf jnp pop jg cmp mov jg cs push flds or repnz fmuls in (bad) movsl sti addr16 lds pop fwait jno cmc sbb popf mov (bad) push psubq mov cld icebp repnz or sub ja xor (bad) sub mov jmp xor cltd dec mov into and push and mov jp add mov ret sbb outsl fwait ret insl pop jg pop push adc outsl mov les jle inc call fwait mov sbb jg gs pop fdivr push jle cmpsb enter (bad) jo lds in push jnp popa push cmp push rolb push and std pusha add mov jg int movsb cmc xchg sbb mov (bad) pop xor lcall push aad stos jg stos ja sbb cmpb xrelease leave add adc in mov mov xchg mov push data16 ljmp jg mov cmp lock jg add and sub inc push dec sbb dec pop inc xlat pusha or mov mov add std movsl xor lods jg cmp arpl jg ja fmuls test pop jbe push mov push inc and xlat mov dec pop jbe and jg add insb sub mov (bad) stc ja push or xorl test iret push mov pop add add sbb xchg cld xor loope push mov push stc std outsb jp lds jg adc test jg aam mov mov cmpb xchg enter pop or and jns icebp mov push jg test popf mov lahf ret imul inc dec cmp mov fwait sub adc ret mov xor lods pop sbb fisubrl mov or and stos or pop pop adc push (bad) iret arpl loope icebp es mov ffreep pop addr16 or cmc dec push xchg cmp scas jg xchg mov jg sahf sub dec sub jo cmp pop fcomps sar (bad) decb call ja xlat lock lret out imul add data16 fidivrl hlt mov (bad) popf xor push inc pop jg pop pop mov icebp imul popa cltd aad cmpsl sub inc and adc add jge or xor iret or sub (bad) dec js aad push or hlt add loopne fcoml xchg (bad) rcll icebp (bad) sbb add mov es (bad) mov and jmp sahf inc movsb std bound push (bad) pop movsl inc in jg aam xchg mov push dec aas repz dec sbb iret pop xchg lods outsb mov add xchg mov push and mov fnstsw leave and pop inc cld and jns dec fildll loop or repz arpl mov adc inc fistpl addr16 dec jg mov loope jp aas push add pushf arpl outsl mov push mov jne push push xchg mov mov pop arpl dec xor rorl in mov sarb rcr xchg lret cwtl fs mov mov dec mov ljmp pop (bad) call jno repz sbb pop out mov dec icebp ljmp and jg out hlt push pop pop sarb push jnp cld mov mov cmp int jb fsubl mov mov mov or sub add jg xchg xor pop (bad) out fstpt les jo outsl jg aas xlat sub or jg mov lret ret and ds jae popa int3 mov aaa mov adc leave aam sbb add add pop ljmp aas mov xchg pop inc ret roll mov ljmp dec mov jg sbb fimull call mov mov (bad) mov dec vpcmpeqb (bad) cli daa xchg sub mov mov xchg xlat dec inc xor mov cmp mov pop lea cltd in andps push pop xchg xor push and in ret push sahf (bad) xor inc mov mov jg mov sti int inc stos jg sub dec in test push out punpckldq push mov mulb je or or jns mov int3 adc mov leave push jg adc push pop mov jg xchg sub push xor jp sbb and push inc mov push mov out mov (bad) jg mov push in and xor or push cmp jg push mov jg sub mov mov sarl xchg bound gs xor jg pop add loop test jge,pt and jg xlat mov ss rcrl aaa test mov cmp sbb sub dec inc mov push mov imul mov mov dec daa rcrl fistpll cmc inc jp ror insb (bad) fs outsb aaa rorl loop (bad) fwait pop shlb mov jnp jg push iret ljmp out icebp mov pop jg sub mov js xchg inc jg in loope mov repnz pusha push jg shlb scas aas xor cld (bad) out jae adc jg sub roll jg push push mov cmc add cmpl push sahf lods and aas jmp out (bad) test lahf lods mov push dec inc cmpsl mov dec adc dec jg (bad) fadds sub in (bad) cmp add mov fiadd data16 ss cwtl dec push jecxz dec jg std stos cmp adc sbb lock cmp inc lcall cltd push addr16 je pop hlt pop mov xchg dec fisttpl adc pop test sahf push clc jo stc mov cmc cwtl cmp outsl inc mov ret push jg fisubrl mov in or mov push xchg sbb aas push stos mov loopne pop dec (bad) jb cmp dec cmp add bound sarb xor pop mov ficomp mov lcall cmp movsb push sub dec or adc rcr (bad) int out pop pop adc push jb fldcw xchg imul mov cld push lea ret fwait push inc dec inc pop adc jle jg jo mov in fldenv dec (bad) fwait insb je pop jg sub pushf ja push test jge int3 (bad) (bad) cmp repz pop sbb mov std sub mov push and (bad) sub repz pushf into hlt test cwtl jg orl fidivl mov mov mov cmp push pushf lcall jecxz sarl mov inc and insb push gs mov aam rol mov sbb push mov or (bad) out jle (bad) and dec mov repz aam cmpb pushf cld fld dec mov ffree mov dec in dec in xchg inc mov (bad) outsl dec mov lea addr16 jg jle mov mov xchg push jg inc ds mov cmc jp outsl inc (bad) int3 in pop and call daa cltd lods sub aas mov cmpb sbb sbb and aas xchg fwait inc js mov jg or xor icebp jnp stos sbb fnstenv jb xor xchg sbb push jbe adc cmp aad mov inc je or dec hlt jg and daa ljmp (bad) rol mov sub pop ret mov sbb lret fsubl divb jb push jg push pop or sbb lcall dec mov adc dec imul je pop xchg jne mov lahf xor jge mov push add mov sahf add lcall imul cwtl pop and jae jg jbe clc jne sub jg and or dec xor jno test jl mov push cmp (bad) sbb add inc pop in dec jg push movsb lods add adc rolb jg je lock lea cltd mov jmp jae (bad) iret lret sbb inc pop add pop or mov mov mov repnz movsb std xor and jo dec push jg inc cmp mov test inc push jg cmp cmp je aam lds pop xor movsb xor fdivl xor jnp cmpsl lock adc shll add std aad sbb fsubrs adc jle stos push pusha (bad) dec jno push hlt jg test rclb adc cs scas pop mov and ds test mov inc mov (bad) cs jae inc jg pop test popa js mov add scas mov jg jp outsb fist rcrb add adc pusha lret in inc (bad) cmp aam sub jg fmul mov jg pop jp inc sub jg xor mov jg push popf sub into jg sub push movsb repz bound cld sbbl adc mov das adc (bad) stc mov and sbb jmp mov inc dec repz sahf (bad) aas idivl jmp inc (bad) jg mov daa loope or lods int push or mul cmp into cmc pop dec xor adc cmp sti adc stc ja cmp adc lock out dec dec (bad) jg lods fldenv (bad) sub (bad) mov jle xchg mov push push in mov jg and cmc enter jg pop xchg mov sar mov enter lcall jg mov mov sub xchg pop or cltd push scas and push mov jp mov add dec icebp cli lds push mull xchg push repnz mov and mov xor jl movsl ficompl test pop shlb fldl2t out cmp push push lods repz or mov pop dec add adc clc push mov pop sub push adc mov mov (bad) inc push jg orl fisubl sbb (bad) mov out jp es les mov rclb mov pushf lret dec out pop daa jg sub test ret jg fisttpl test adc mov xor cs jg sti mov jno fnstsw dec push jne xor or js cmpsb add sub mov aad dec xchg mov daa movb js add fs lea cwtl cs adc push or mov xchg pop sbb aad std mov adc and jg mov xchg nop and cs movsb (bad) imul (bad) push mov push arpl ljmp popf cmpsl mov stos xor movsb gs or xchg mov cwtl cmp pop stos push lods jg or lret xchg jg fs cli inc dec in jg cltd mov nop mov xchg stos movsl add dec mov dec push int3 stc outsb ret adc inc and jg js xor pop lret add cltd aas adc and mov rcrb lods xchg fwait insb cmp mov mov dec cmpsb cli imul cmp outsl cwtl jg in testb xchg hlt xchg lock mov push xchg xor jae outsl jnp mov aas mov (bad) mov mov push adc ja stos add fnstcw lds jo aam (bad) sbb add mov pop push xor scas xor inc out jg cs jg xor loop jg shll sub mov inc jae jmp jg dec xor into sub add dec jg fimull ljmp jle jg xor push repz sbb inc loop jg or in fwait push fidivrl out iret out mov dec inc js les cmpb aad xor arpl or bound ret or jg fsubrl jg jno pop negb lret js iret clc dec (bad) jb mov int push inc hlt dec lcall inc test out jg popf inc xor lock (bad) sub cmp pop sti ljmp imul mov andl push mov cmp inc adc sub adc xchg cmpsl pop ud1 push test and sub add jae pop lret cmp cmp mov xlat jbe jg fsubrs add mov lds jg jle or fisub xor enter idivl sahf lods fiadd mov sbb scas movsb int3 jg inc dec pushf shrl mov jg arpl notb aaa jg adc hlt push mov js xadd xchg sarb aam outsb mov addl es sbb movsb rorb mov mov mov and popf xor imul fldl (bad) aaa mov je cmpb or jg in xor xor pusha pop rcll mov stc mov in adc addr16 mov mov jg mov sarl xchg insb mov int (bad) stc scas lock clc jg pop arpl mov jbe mov (bad) xchg push xor sub cmp enter sub arpl imul (bad) cli jg jns movsb jp sub fdivl push pushf jae jl add cltd test and incb call jg jb and dec push xor sub mov jo rcrb in cmp push mov mul jecxz fs out mov rcrl sbb pop jno (bad) dec jne and ds cli jmp and adc jle movsb test data16 push push stos (bad) push inc mov cmp jb unpcklps jp jl rcr jg mov mov jg xlat repnz aaa mov stc fsubrs xor sbb lret jg fcomps dec imull inc out mov or push adc aas dec mov test inc jg fmull (bad) mov bound add dec ja int dec dec addr16 imul dec popf outsl sub pop inc cmp mov jg (bad) cld mov jg adc sub pop jg hlt push mov ret pop jg or xchg gs and test out cmp cmp pop push in insl pop xor inc sub jo and repz mov pop mov sarl loop jg out cld fmuls mov pop test lods pop jg (bad) ficom xlat (bad) jo pop cmp orl aad jb jg sub cmc jbe sbb int3 and jg ljmp jg inc mov pop jg bound xchg jne,pt or aas push push les (bad) cwtl fildll push jg or mov inc aas mov jmp jg out insl icebp shlb and lock push xor push pushf push loope dec cmp scas mov jg xlat scas aad xor and aam je sub or in push popaw cmpl push cmp cmpsl mov xchg icebp aaa dec mov mov scas sub mov dec jg roll jg clc (bad) xor jg sbb pop icebp or in jg loop pushf jle mul jg pusha jne imul pop movsl jg rolb call pop aad addb add adc les xor adc cmp bound or dec or mov sub mov inc inc push jg mov inc jbe sub jge and jg repnz in btcl jne xchg pop jg pop cmp clc js shr xchg push dec sar mov sub and ljmp (bad) cmc in jno mov ss icebp nop mov jg scas xor mov loopne lcall pop mov mov mov mov pop (bad) pusha call (bad) jg mov lods jg mov movsl jg inc movl add mov and jae sbb rcl and adc or dec scas sahf pop in adcl ret insb jno sbb adc dec sbb (bad) mov cmp jno mov cwtl lahf ljmp arpl cmp (bad) jg mov jge jg sbb mov fs dec in mov add (bad) repnz pop inc jno movsl jg pop mov dec jg lods std ljmp stos cmpsb mov pop dec cmp dec inc icebp add jg into and ja xchg mov fcompl in adc or cld dec mov ret sub sub mov xlat cmpsb xchg jg imul push jo cld xor js add cmpsl lds mov les jns jl jmp (bad) jg movsb stos pop push sbb jl mov sbb pop mov push out iret rorb outsl sbb ret adc stos and cmpsl sbbl push xchg cwtl jns jnp mov test mov clc sub (bad) nop insb ss jg add into clc pop mov mov stos mov or mov jo or addr16 insb xor mov jo xchg sub cmpsb sarb imul in pop sti jmp cmp add fdivrs fisttpl xor xchg jg mov out jg push call jg xchg xor insl push cmp and jecxz inc clc pop mov mov add push xchg jg xchg fcmovu hlt push dec lea mov in sahf fsubrs dec add cmp incb and sub add (bad) std pop shrl xor or sti (bad) mov mov inc add and xor gs push ljmp jg dec mov jg mov jbe repnz sbb push mov fcompl mov movsl xchg cmc rcrl int scas inc and jl mov mov mov jnp sarb mov loope mov xor push mov or clc insl jg mov mov add loop insb cmp addr16 adc pop sub jle mov xlat mov repz imul push jg adc xor movsb rcrl cmp mov jnp (bad) mov jne int (bad) daa jg or mov jg sub mov adc repz cmp jg cli mov or (bad) jne push mov add sbb push ss lods lea push sbb push or push shlb mov cmp adc push lret jg or fistp ljmp mov inc push add lahf sub mov jle push ficomp jg cli sub jns scas inc jg sbb lods push jg mov stc imull pusha jg hlt cli sbb add adc dec cmp add mov jg dec mov ja push push jg jecxz test lods cltd inc jg add push jg fcomps xorb inc jg add jbe xor xor aam jg mov int3 jb gs jg inc aaa (bad) movsb lret fdivrs fstpt fs fisttpll add xor icebp mov addr16 xchg cwtl inc jg (bad) in scas mov arpl jg notl push xchg jmp sarb into loop mov (bad) dec xor mov jne jo xor std roll mov sbb outsl lret xchg (bad) or jl mov (bad) popa inc pusha mov das movsb push inc (bad) jno rcrl adc ds pushf (bad) rcrb mov mov push sub jg jle mov jg movsb imul or dec out xor push (bad) cltd rcll div dec jg leave inc nop push mov cmp jp pop xlat inc jg imul int add jg jae adc mov js inc int dec mov pop mov daa (bad) addr16 outsl cmp jg pop lahf ss cmp xor xlat push dec mov jg adc jmp or jg or outsb mov sahf jae sub dec jg movsl add loopne adcb aam scas ret dec lods lahf push psubw sti mov cli add mov sub inc mov sub jg xchg mov (bad) popa or lahf cmpl js fisubr pop cmp adc test add add aas fistp loop mov rcl xor lock sahf pop lds or or adc push dec jg xor or (bad) xchg jg popa popf lods jne int inc daa idivl pusha stc cmpsl inc jbe xor push and dec or clc sahf add nop xchg dec sbb fidivrl xor xchg jg push mov pop jnp jecxz xchg and aas ds sti push std inc and jg mov mov mov inc xchg lea popa sub pusha into pop inc shlb push ja xchg data16 incb jne andb dec push and not test jg out adc jmp pop xchg lods jnp inc xchg xor pusha pop fsts jg pop push jl cmc jg lds xchg lret xor jle push push jg jne cltd xor lods mov lret outsl jecxz fwait inc mov xchg les xchg jle iret frstor int3 aam jg mov mov adc jg push hlt in add outsl pop jmp cmpsl push call xchg ds push lods cmp dec stos mov out push fst jae sub xchg mov hlt sub cmc xchg jg adc out jg insl adc mov add inc ja dec mov jp jecxz pop out adc dec cltd push sti lea in add and pop jg dec mov (bad) fsubl lock adc inc mov lret mov inc lahf add push into fdivrs mov xor lods dec push stc loopew sti jmp outsb add or xchg sub jb rolb inc xlat lds xor pop in sahf mov scas test sbbl mov (bad) xchg and nop push mov out stc cmp pop lahf sarl addr16 prefetch je pop and jg outsl sub xchg jg mov (bad) mov push pop and js xor pop fwait outsl add fs insl dec ss xor xor mov inc xor out pop jg mov adc jg jp xor pop jge stos adc adc jg jne push popf stc ret test xor cwtl mov decb mov push (bad) repz int3 pop std les mov test inc insl mov push pop scas movsb xlat arpl jo push jmp test aas hlt push push repnz popa jg movsl sub dec dec pop and outsb push jl add lret sub in jg scas xor sub sub sarl arpl loop or mov sbb jae cwtl adc int cld xor and jg sbb sub jg jmp shrl pop stos jno mov mov pop cwtl add jg xlat inc pop cld iret in pop jle add inc cmpsl pop decl leave inc pop jg movsl mov je add (bad) lea (bad) dec dec cltd std jg call push lahf xchg orl repnz adc or inc lods dec cmp and adc stos (bad) jbe (bad) movsl jg lahf xor popa (bad) mull scas mov aas ret inc fbld int3 fs mov dec add repnz jg jbe pop lahf stos stos xchg jnp lret xor inc arpl pop cmpsb cmovle xor inc inc dec mov xor gs jle orl jg cmp decl adc mov rcrl div loope pop pop push aam repnz jg fstpt lcall jns lahf (bad) aaa dec push sbb push jnp (bad) fiaddl jg or lds out enter xor js sti loope outsl std loopne mov add lret ds movsl fadds inc mov pop idivl fldl arpl call out addr16 push jg stos pop (bad) cmpsl xchg icebp push jg bound mov int3 cmp mov cld scas (bad) cmp pop popa jg arpl out adc pusha jg in inc adc ds mov push pop sub xor jns imul inc mov xchg addr16 (bad) stc jg scas cwtl out and (bad) pop aad js std sbb mov cmp repz mov arpl jge add cmpsb in xchg sbb mov fcmovb jg test ds cmpsl xchg push idivl mov jbe imul mov aad pcmpeqb (bad) adc and (bad) push xchg push jg cli mov mov push ret and fsubrp or cmp push in pop jae dec mov sub jg or cmpsl out jge jg pop mov es jg cli (bad) aad lock mov (bad) out dec lds popa lahf cmpb dec mov push movsb scas mov cmp popf mov lcall jg cmp shrb inc sbb push enter cwtl xor or dec dec mov pop pop mov jmp adc mov addr16 jp out fmuls sti or mov mov fbld pop fsubrp insl dec mov dec and int3 adc mov in xor lods add movsb dec arpl out pop or pop sub aas sbb lock fistpl cmc jno (bad) (bad) ret mov push add add bound imul or mov jno mov pusha dec sub sub pop cmc push inc subb imul test mov cld jl jg xchg adc call scas std stos out addr16 mov jg mov lods bound inc mov dec das (bad) sarb ja jmp popf jg sub inc sbb sub scas fistpll int3 jg or push sub add mov pop movsb mov jg jae enter ret jg fsubr outsb push add mov insl imul push stos mov std pushf ret pop jg cld and rorl in (bad) test sahf xchg adc add lret (bad) inc sub add and sbb jmp xor add push outsl rorl jg xchg mov dec mov push dec std lods pop popa jg or cli js lahf test jbe mov push inc jno inc dec ljmp inc xor insb pop repnz jg in (bad) jg loope out call cmpsl xor inc mov movsl pop mov cwtl xchg jg push sahf push sbb lahf pop jg (bad) call push jg ret inc (bad) pop jo lds mov and dec cwtl std xorl cmp les jno scas pop mov jecxz inc inc jg stc shrl sti mov mov mov adc out pop push nop outsb jg adc adc add popf fnstsw jl and cmpl adc jg mov jg lods xor mov pop mov je insl mov in mov adc xchg sbb dec push jle pop rorb mov jg jnp adc in dec jl stos lea jg (bad) lock jo and sub mov mov jmp xchg cmc or shll sub add ja out push mov imul inc cmp das dec or outsl mov lahf psubw lea cmpl stos mov and add dec ret sub sub jecxz jp int sbb jle fstp mov data16 push mov adc cmp add sti icebp rcll ss ret ds push (bad) jg inc and cwtl jbe mov imul fsubrs mov push (bad) jg xlat aas adc jg pop pusha dec imul mov out and sbb mov dec jg bound jae jb jg mov adc test pop jge push xchg add lods nop add pop mov dec push pop cmp test xchg sahf push cmp mov jg push call jg cli pop scas rorl mov arpl pushf xchg outsl fdivrp xchg jg flds sbb test es pusha cmpsb inc fdiv pop mov push push pushf (bad) cmp mov jg cmpsl push jno jecxz lret mov mov inc or or xchg mov aaa mov xor jg rcll cmp jg movsb cmp loope jg or sbb ret aaa sbb sub or mov mov pop cmp cmp loopne stos jnp cs je faddl jg cmp sub xor test cmp jg pop arpl push and or dec movsl imul push mov cli out pop jg test sub dec jge into ljmp jg jns jae hlt jp mov push aaa fs test sbb pop rorl push jnp lock lods imul lret jg shrl test cmp mov arpl mov aaa pop cmp and leave pop mov mov xchg jg lret xlat lods add scas mov pop cmp lahf sti outsb ljmp pop push lods repz xor mov pop cmp dec ds sub adc pop add mov mov push xor sti in out mov xor xchg jbe cmovs pop gs jmp test sub ret mov sbb dec inc call out ret pop int3 mov jl or xchg dec pop mov dec and mov test adc inc jmp jg inc jmp mov or ljmp int adc push sub movb inc icebp jecxz cmpsb aas jl cmp insb jg js fdivr shll mov daa push clc jg test test mov (bad) imul stc test mov imul test sbb arpl js call mov popf jg fstl pop repz or inc adc cltd sbb js aas or lds jbe mov enter sarl jg mulps popa stos fnstsw fisubrl test cltd inc pop adc jg fwait lahf call jg in fs push mov pusha mov xchg pop imul pop inc std stc cmp mov mov mov sarb mov test mov sahf mov fwait mov int3 adc xchg test mov mov xchg mov xchg stos (bad) (bad) mov in das inc cmpsl dec movsl xchg ret xchg xchg lock inc and (bad) mov (bad) jbe dec pop lahf dec lock and shrb bound push rcl jg cmp adc int3 xchg ja cwtl push fistp dec repnz lods fldenv loope mov ficomp das sbb and sbb jo ja fistl enter aam pop and jg cli pop adc add xchg xchg sbb jg mov enter mov sub imul pop add lods cld or dec orl pop cmpsl dec pushl inc mov jg fs dec cmp mov jmp push pop jg addr16 sbb mov sarl or movsl adc jecxz idivl pop jno (bad) lods aam ljmp pop cld mov adc mov jg test jae jg inc fsubl adc sub inc cmp jg mov mov pusha (bad) jg aad (bad) adc (bad) popa aas lret dec adc into inc inc fwait loop popf cmp xchg jno mov pop in cltd mov inc scas jg add pop jg outsb popa pop stc addb jo sub out mov lahf test and das jg daa jb pushf sbb pop jg je scas sahf fistpl add stc lods sub jg aas scas or inc lret in inc mov xor jg mov push jg cmp leave pop mov (bad) inc adc sbb jmp inc lods lret jg mov ja ror jb pop sbb dec push inc test add loopne ret out fsubrs xchg jg (bad) push jl ljmp lret push dec or jne jmp jg xchg popl jg loop imul or bnd bound aaa jg nop xor pop jg cmp fs mov cmp pop mov outsl push out push (bad) jg mov fbstp out jg push push fisttpll jo incb in jg adc dec insl and xor adcl dec jbe jg bnd loope aaa jg mov mov xor aam das addr16 or push fisttpll jg jae mov lahf push xchg js adc pop test inc ja xor cli sbb xor popa ret js addr16 mov mov mov mov inc sbb fs mov adc lret lock in mov jg bound mov movq cmp add xor sub inc scas test sbb cmp jb bnd xchg iret pop bound mov leave ja pop inc (bad) jne subl dec subl pushl loopne int push jg rol in imul jg hlt and and leave push xchg jl fdivrs roll push cli test cmp out mov jg pop add int3 (bad) jno ret xchg push in negb sarb movsb sub jg sub sti xchg ds outsl jg (bad) loop arpl loope mov idiv arpl vmovdqa xor nop jg (bad) and imulb and rcrb dec pusha cmp inc ss fwait pop aas scas ror xlat pop or cli mov jg pop into cltd sbb gs jnp ds loopne mov insl dec fcmove orl lcall dec mov popf scas daa sbb dec fnstenv push sahf icebp inc ds xchg jl dec in in sub sbb jecxz xor jg mov roll sbb dec cmp jg in es jg mov and movsw sub fwait dec lcall fadds dec loop mov ljmp adc mov sbb push out mov inc inc cmp dec loopne sub push cmpsl push outsl movsb push pop pop cmp imul mov inc jg xor xchg test aad aas and loope mov int3 sbb std lods (bad) xor outsl mov fnstsw out pop (bad) pop xor pop aaa cwtl xchg mov dec jbe iret add mov xor mov mov and andl pop dec bound mov pop (bad) sub pop (bad) movsl lock fstpt insb lcall sub add dec fistpll add fwait ret icebp popa sbb mov fisubl jg sbb cld das jp jg data16 aaa push out jg push dec imul add sti cmp outsl inc sub inc fdivrs adc sbb sbb push int mov mov or fsubs int3 jg jo out add xor push mov mov sti and lret jg fisttpl mov (bad) mov xor (bad) mov pop out andl mov dec sbb cmpsl dec adcl and dec jae vmulss xchg imul and lock (bad) sbb jg xchg les (bad) jmp xchg inc inc sub outsb cmpsl mov xlat jg fstpl stos jg adc sarl std dec jnp jno lahf jg jle push xor jg inc insl repnz ljmp mov cld sbb push add lds jmp pop xchg outsl add xchg jg jecxz lock mov (bad) cmp cmpsl adc jg fs dec mov loop dec and jno cli lcall inc mov imul sbb mov dec mov jmp push cld stos inc fstpt xchg mov push mov xor test fs jge insl es and jg adc mov pop (bad) cmp jmp dec xor outsl divb jg (bad) add inc xor or lcall jg push lret jl mov cmp pop sbb scas xchg mov ja repz fmuls inc jns int aad movsl and or popf pop mov gs xchg mov imul decl and pop mov loopne (bad) or out mov insl and sub data16 mov sahf dec lods mov pop mov mov out pop adc adc data16 push out xor les jg sub scas pushf mov dec jg in js jno call pop jg cli fcompl (bad) repz mov jg jmp aas inc push xor jg jecxz add jp popa jg cmp add popf jle xor dec cmc stos jg (bad) fdivrl out mov lret jg push cmp fnstcw and or dec rcll inc (bad) paddusw aas mov mov dec fwait or outsl push sbb loop cmc sub pop lds fisubrl xor rol cmc (bad) call dec sti nop jg and sub lods test cmp aas jle out cmp inc imul repnz xchg or imul adc dec pop push or in aad push xor aas scas jl xchg inc push pop mov pop stos (bad) cmp inc (bad) jg in jno jmp dec out loop mov fwait ds adc pop push imul int pop les fcomi jae jg das fist jg inc inc popf fstl sub jg (bad) loop mov push dec sbb jge fdivrl and jg call sahf dec cli jbe add jg sub (bad) scas jmp or je push xchg (bad) lea fwait sbb xor and xchg or clc jb (bad) mov jg fdivrl adc test je sub pop push xchg push push dec cmp add aam orb das cmp sbb xchg lods inc leave or movsb inc pop sub sbb scas or aad outsb cmpsb mov out dec outsl dec scas (bad) xchg movsl mov jmp or push stos (bad) cmp pop arpl sbb jle out std and sti (bad) ja xchg scas push push inc pop aas cmc pusha xor popf loope dec (bad) clc jg (bad) dec adc mov and dec push jmp es jns dec xor or pusha mov mov ja mov cwtl rolb xor dec lock and pop pop lods mov insl aas icebp jnp jl ret loopne test dec dec mov (bad) dec xchg mov loope outsl xchg into addr16 jecxz (bad) stc (bad) jbe (bad) add push (bad) sbb adc inc and pop js jbe dec adc loopne sub sub in das jg mov mov cli add fnstsw pop mov cmp jg cltd dec (bad) jns jb jg shrl pop enter data16 lret adc cmp imul push int push push cmpsl out xchg mov stc out bound pop jns adc stc (bad) mov cwtl or add fiadd jg and sti mov inc jg fwait inc and jge pop or in stc leave cmpl cmp (bad) push sar (bad) xor int pop pop sub xor js xor xor jg jmp (bad) sti xchg repz jp pop jns inc xchg imul jg mov xchg cmp fistl xchg xor mov and cmp xchg push jg push fcmovb ljmp scas (bad) mov mov ds pusha pop mov sbb (bad) (bad) mov in jg jbe fwait add mov adc xchg lods out test jg inc call test jne cli fnsave add pop fmull jg mov mov lcall jg dec fwait lds fidivl lods in xchg sahf jg dec mov dec fild std mov push and jg loope or in dec clc sub jg cmp inc sarl or je and and jp fucomip sarb cld add fdivrs in and rol out loop inc mov mov lret repz mov mov inc (bad) mov pop out cmc and jno mov add lret rcrb imull lret lods xor cmp jg lahf mov cmp xchg mov xchg bound pop loope repz notb jnp sarb popl nop jno xor add sarb (bad) jg jge mov push jg push ret push xor jg mov insb xchg jg arpl and jbe xchg jg in clc test or pop sahf cs movsb bound and out outsb adc or push test out and aaa jae cmp xor je call subl mov gs aas xchg add dec cli fucomp fisubrl inc cs mov sti and popa jp jg pop and les xor inc andl jmp mov add dec sarb or ss lds jnp fwait add stos inc xchg icebp daa push push (bad) sbb and insl out xchg jg add test addr16 jg or sub lds dec cld add sbb push rclb sub inc push scas shrb inc sub sbb daa (bad) jg imul sbb cmp cmp (bad) addr16 hlt nop fdiv sti jl mov dec add (bad) jg lea pop test and push jg jb inc sub repnz adc adcl (bad) and ss jg fnsave add dec fisttp repz subl fisub cld ja dec orl inc pop inc ds mov mov jp push mov dec inc xchg mov hlt aaa jg xchg adc sarb les fcmovnbe adc push add into push fidivrl test cmc into aas sub iret jle inc dec je sbb mov inc dec pop mov lods or (bad) (bad) bound sbb stc lret pop addr16 sub jg push in cmp lds sub out pop mov gs in icebp jne jle xlat fiadd popf xor cltd mov movsb and aas and iret add inc pusha stos ret push ds mov pop ss cmpb mov inc jg mov and jg out push cmp fistpll inc mov dec pop dec aad pop rcrl mov (bad) jg mov and cmp stos xor repnz adc mov (bad) or inc mov push jg std push mov xor idiv dec add push jg push dec mov shlb jg mov jo aas das iret jg cmc repnz clc cmp sub (bad) push and outsl aaa stos inc lock lods sbb jg int3 pop jnp lds jg and and xor inc fldl fnstcw test fwait dec xchg fcmovnb jp lea jg pusha add sahf test cli xchg dec scas adc add insb sbb ja lahf jno jne jg loop pop push in popa jg push xor mov fdivs jg push imul jnp lds sbb repnz int3 inc sbb dec jg mov xor jg jmp lretw jg bound stos loop,pn popa repz xor jg push jne movl nop sti cmp (bad) (bad) aas xor ss push adc jg sub jnp fisubl dec movsb add pop jg into aad push fstps pusha movsl cmpsb sbb xor mov push mov insl or mov and jge test jno outsl nop mov mull mov push jg mov pop inc ret aad adc cli mov jg int xchg lock sub in push mov dec fcomps xchg pop push loop sti inc cld pop jg (bad) jae fmuls cltd jg add cwtl inc jg or ficom test sbb lcall jg stc out (bad) add (bad) mul dec fisttpll lods jg pushf nop dec mov cmp pop sbb mov push push hlt mov je pop es inc test sub fyl2x mov out rcrb mov jo dec jg and mov inc ljmp adc out out pusha cli icebp cld ljmp xor lds mov sbb push in (bad) fwait lock inc test xor je xor or xor clc stos (bad) mov lock cmp jg adc lods movsl xchg clc jg mov leave insl call lahf and test dec add jle jg pop cmp aaa imul adc cltd jg into inc add je xchg roll stos pop jg repnz jno movsb ret cmpsl jg sbb xchg sbb out aas add fs ret inc je jg or dec jg xor inc jg call xchg imul in data16 push mov pop jae js cmpsb hlt (bad) fcomps xlat mov inc sbb jge stos (bad) xchg jg xor rcrb sbb push fdivrl inc mov (bad) lahf jg ljmp mov sbb ficompl scas xchg sbb mov std les sbb cmp js xor jg cmp aad jle sahf xchg subl lock pop push jb mov jg mov movsb insl mov xchg ds mov add dec popa enter sub loopne jae inc add lahf sarl xchg call (bad) jg jbe lcall out sub scas dec push sbb pusha scas jg sti xchg pop call sub (bad) test pop push inc cmp mov cmpsb pop gs mov mov or outsl mov jg push pop fldcw ficomp cmpsl mov ja add mov into jg imul jg sub pop mov fcoml or insl jge sub dec mov out shr sbb inc xchg pusha jnp (bad) jg lret in mov mov pop sar cmp aas adc lods jle divl into jg and push push mov call dec out test arpl xchg aas mov inc fnstsw pop lea xchg pop mov loopne jg jne inc stos xor or sti scas ret icebp dec ss add xlat xor sti movq pop popf inc les lods mov jg stos mov or js (bad) dec inc and (bad) imul sbb push jg in adc push add xchg cmpsb enter cmpsl fdivrs aaa insl cmp mov jg or inc adc adc jo cmp xchg pop dec movsb mov fs or ds adc decl pop leave out inc and jno push lods fiadd add (bad) dec and inc mov dec mov jg ss in jg xor iret in fs mov inc mov pop icebp mov dec test xchg movsl std jo push pop or cmp (bad) push dec add add fisttp insl add arpl sbb aaa mov clc cmc jg lcall push mov mov mov hlt jns sbb pop lds xchg lods aas inc adc inc jg dec or xor pushf xchg jg andl (bad) xchg pop int3 or jg inc sub roll scas cmp mov cmp cmpl jo and fldl jbe or push iret sub mov dec jg outsl xor icebp (bad) jg cmpb dec out imul jg stc leave in imul jg andl dec in jne es (bad) mov add cmp jp mov lods jnp xchg pop mov push push mov pop sub out mov cmpl sub cmp imul lret cwtl out add loopne jg jne jno sub jg lods adc dec fcmovnbe rcll inc (bad) scas jns push xor push stos pop das jg jb pusha xchg xchg mov mov movsl sub sub insl add or clc and mov test lds (bad) stos flds int imul dec dec imul in cmc and mov mov pop outsl or nop movsl jg ss jb mov adc fisttp cld daa jb ljmp mov jg dec (bad) xchg fild jg outsb dec jnp lods xor icebp movsb data16 or shrl dec mov push test push mov scas call sahf in xorb (bad) dec jg ds adc (bad) das mov out pop xor jae push jg jl lock xchg mov add stos lret subb jg sub and sbbl sub scas (bad) xchg mov gs jg aam mov pop mov or adc es das imul ret sti mov dec xchg out dec sub pop pop mov cs fwait imul pusha out cld jne push dec stc xor jg add push cmc lret jns ret mov or scas int adc fadd mov xor into call fs mov cmp out inc popa stos add lret ret xor and xchg insl pop aad cmp push xchg jg mov adc jg jge rorb inc push mov fiaddl inc ret jg mov push mov cmp sbb and (bad) iret jge mov inc es adcl ja xlat push adc (bad) shrl outsl and xchg loop xor inc shrb arpl subb add jg (bad) adc inc add lcall push arpl jg fidivrl xor pop hlt jg push mov or sbb mov ds sahf out xchg or adc push cmpsb xchg mov pushf pop (bad) sub push jle push push jo lret ljmp pop dec dec jg in mov lock js mov cwtl mov dec ret into pop cmpl sbb (bad) leave inc push and mov dec insb xchg xchg sti mov pop push push xchg mov lods scas out mov arpl in push repz dec xchg sub mov adc hlt inc jg bound lods xchg lcall pop jg stos or jg outsl pushf pop fisubl jg push fist movsl xor cmp repnz hlt inc mov dec fistpl sbb cmp pop pop outsl fstl aaa lods idivb icebp push push xchg cltd bound out and dec adc pop or jg cmp jbe push jne jg sbb sbb jg adc addl ret add jns jg push int3 movsl jg enter sbb (bad) ljmp lds fdivrs mov dec push mov push jg stc imul lahf (bad) int xor add aad pop dec pusha dec outsl push jg (bad) imul jg lea (bad) aas and mov dec mov fwait loope fcmovb outsb xchg jg fisttpll pop das aam bound cmp mov (bad) ds movsb jp rep (bad) popf mov ja xchg sub inc jg or call sti cmc xchg cmp imull (bad) cmp fnsave popa lds jg loop jnp stc fwait lea pop imul xchg pop or pop addr16 lock lds ret jg int push (bad) jno js into pop lock sbb adc add pop not cmp pop scas loope std push mov or cli mov lods pop inc stos adc xor daa lcall (bad) repnz insb sarl stos imul dec mov sarb jmp jno jp decl mov dec sti pop cwtl sub mov popl dec test je add mov mov dec into jg ss rorl je mov xlat jg adc cmp inc sub jg rclb push jg add adc inc mov or (bad) cmc xchg icebp add aas fwait mov dec je cmp movsl out jg in xor sub ret inc sbb mov cmova pop mov mov leave push aam out dec rcrl push mov cmp std mov jg fwait and adc jg mov inc sub dec cmp ret clc mov outsl mov jg gs mov jg popa mov xchg inc mov in xchg mov inc inc push xchg add call mov inc inc jnp cmp mov lods pop mov inc mov loope pop (bad) fcompl sti fiaddl arpl sbb call dec push pop xchg jo or sti jg call cmp sub (bad) cli outsl jb xor mov lret jae xchg sbb pushf mov pop rorb dec popa loop pop mul mov sub mov cmpsb je stc jge out inc sarb xlat roll xchg out cld push mov dec ljmp push call (bad) mov adc jg sub xchg repz jg test jg test sarb push or jg mov mov jg cltd aad imul mov dec sub les int3 mov dec (bad) dec mov adc aas xchg fisubrl loop loope jg cmp mulb in mov jg add mov faddl push js push out outsl icebp (bad) push les fdivrs sbb (bad) adc je mov pop lret out dec adc add sarl xor jnp ljmp adc push ds cli jg cmp test jne inc mov jp cmpsb dec fwait ljmp in mov idiv popf cmp push inc jg mov dec sbb or jns idiv ret xchg sub mov mov testl lahf sbb pop and (bad) cmp jb pop adc push mov fstpt jg fwait aad inc ja nop movsl (bad) adc dec push mov inc pop or jle sbb popa mov adc nop cltd loop gs cmp ss (bad) (bad) dec jg outsl int3 sbb mov scas cs pop fistpl cli nop (bad) aam popf adc mov sti int enter dec add mov sti mov aaa dec ja in xchg jg adc mov fimul cli lret jbe mov imull pop arpl (bad) repnz jg inc popa inc cli test daa mov push jg (bad) jae mov xchg pushf sarb das xchg jecxz jo add out mov (bad) lods inc pop jg sub (bad) sbb std jg fcmovu lcall jge mov outsl push xor adc mov je cli call jg mov cmp pop xchg pop mov dec lahf mov addr16 cli mov ret inc pop out jg pushf pop cmp nop jb jecxz loope ficompl jg imul sbb inc out fistpl xlat in aad inc js insb push xchg repnz or jg cmp and (bad) enter inc lods and cmp pop cmp lcall mov mov push lahf xchg out scas pushf dec dec sbb mov inc mov mov daa fwait (bad) pop mov mov rol cld pop jle xchg mov xchg aam jg cmp or jg pcmpgtw pop (bad) in outsl mov and push mov loope jnp pop sbb rol push push fstpt mov adc pop mov jg sarb lock int into fs test and and inc push pop jg push (bad) mov xor mov ja sbb mov scas jge aas push jbe stos and and cmc and and lret bound adc sub push push addr16 inc jle sub (bad) in (bad) mov std in push sbb xchg jg rolb daa jne and mov jle jg ret scas insl sar pop and jg mov lods and dec aas es mov bnd cmp pusha (bad) sar sti ja (bad) std pop push or leave dec pop or aas adc mov sub jg das cmp dec jg scas cmpsb leave lcall cmp mov and addl xchg mov inc jns jg hlt jmp (bad) out or stos movsl push insb fwait cmp mov rol add js addr16 jg jmp pop popf cmp add jl,pt ror xchg scas jo xchg xchg push fwait icebp mov mov push cli pop cmc mov clc xchg jg movsl sbb aaa insl jno dec ds nop pushf xchg cld xchg jg jae mov mov xor adc push jno enter and xchg mov (bad) mov jnp dec in rclb cli mov in pushf mov (bad) mov ret out push cmp (bad) mov cmp imul bound add mov sarl mov sub inc int3 ret addr16 xor cmp adc push icebp xor ret jns xchg mov jg and in jg jbe into cmc pop test jg cmp shll jnp das gs fsub mov cmp jo xor ljmp xchg mov shr jg test adc mov pop mov lgs ljmp ret (bad) pop mov and inc mov in nop pop add jg push (bad) mov cmp sub inc insb mov js sarl and jns and inc stos or jne inc nop mov jge outsl outsl test lahf fidivrl inc or sahf int jae in sti mov dec pusha and and jg mov cltd fbstp sarl mov sarb jg lods loope cmp sub (bad) iret lock jg pop xor lcall sub jns ret pop int3 mov inc inc add xlat js movsl mov mov out pop sbb or imul jne xlat pop pop in push nop jg fwait repz push push and aaa in fstl lea xchg (bad) mov inc outsl cld xchg test (bad) xchg cmc xchg sub imull sub xor ficomp nop xor cltd jg ret cwtl jnp test iret push faddp (bad) mov pop cs int in mov popa inc pop jecxz pop push insb sub fisttp mov dec ljmp jg jb lods int3 outsb and mov fist loopne or dec popa (bad) repz es mov cmp test fcomip jg jbe dec push in jp jg cmp popa and in aad inc loop jg mov out dec jg out jle (bad) cli mov jg xchg sbb or jg mov ret push insl jl jg sbb loopne fdivrl lds xchg adc int3 testl pusha jg mov adc jl addr16 cli mov (bad) mov cld pop gs inc or dec arpl cmpsb pop popf sbbb dec mov or cmp or shl mov jg dec shr add add or mov jns sahf lcall jg push mov pop out dec jg mov xor mov jg sahf sub dec aam lea push jg fwait cs dec xchg jo jg mov pminsw pop and imul clc mov jg xchg cmp aas pop popf dec aad and inc lock inc or js inc sbb push (bad) mulb rcl jg into cli mov dec sub pop push in mov mov stos xchg inc je je jg jmp icebp test mov jmp mov movsl cld lret jg push addb (bad) sbb xchg cmp test dec sub pop jg std jp iret cmp pop movsb (bad) jecxz test dec fildll cli mov cmp insb xchg dec das fdivrs mov mov dec inc and jg jmp popa inc push jg loope popf push aam jge outsl stc clc dec and jg and add lds rcrl pop aam loope adc sbb and es (bad) jecxz jg addr16 mov clc popa rorl jg dec sub mov jne ret xchg sahf and inc xchg (bad) cmp dec dec inc ja jg pop mov aaa jp mov leave jg cmp mov sti lahf push cmp dec pop pop pop jcxz lods pusha daa and dec lds mov rorl (bad) lea add lcall jg and (bad) mov add test or xor cmp aam rcrl nop mov jl push push or add or push lods xchg je sub jg dec add mov add cmp addr16 outsl jg test mov jg cmpsl ljmp xor add es xor ficoml sahf jg scas lret scas jg sub mov cmpsb gs repz popf lret mov ja leave lahf (bad) hlt lods sti int3 push mov cmpsb jmp (bad) jg mov xchg jg mov and js jmp jle or ja mov cltd pop cmpsl pop sarb xchg and rorl jg jns rcl mov mov jmp cwtl faddl je add mov ljmp js xor or sar add mov aaa mov sub ret stos flds jg inc pop mov mov cmpsl out ficom mov push pop pop cs lret sbb pop mov inc jp xor xchg in or cld addr16 xchg mov and fwait aas or shrl xor add (bad) or lret inc mov cmp pop or pop stos (bad) mov xor jg mov scas sar mov addr16 sub jl xchg xchg (bad) out jg (bad) iret ljmp dec cwtl test fcom xlat mov out js inc xor scas into add or cmp or add loopne adc fsts mov lock addb mov (bad) shrb xor mov push add jg roll int imul and jg mov push lcall mov jg es mov push jns pop in mov ret fdivrs adc jmp rcrb popl push negl int3 sbb and fcmovnb sbb adcb mov inc push (bad) (bad) scas pop mov inc adc dec stos mov fiaddl jg ss add incb xor push jne pop aas or jle xor xchg inc xchg inc jg inc test mov (bad) jg push leave mov cli sbbb push in pop test icebp in fs into jg push xchg add dec arpl lds adc dec jg inc movsb push add push in push subb pop stos xor mov ljmp incl fwait jne mov jecxz add fldl add mov mov jg lahf cmp pushf jg sub xchg mov movsl xchg pop imull shrb in or or lods inc dec mov jg dec push mov mov fdivs mov mov pop push sbb jg mov pop pop les jg ds mov sarb cmpsl test fistpll inc cmp hlt cld mov ss inc sbb insl mov mov addr16 and jg das out mov cld adc shl push lock popa dec and xchg andl mov ss jg (bad) stc pop (bad) mov jnp lea aad in jg lds sarl popf xchg insl es push xchg jg mov push adcl mov jno (bad) and xchg mov fwait cltd xor cwtl sarl cmp pop popf jg jmp (bad) inc dec jg inc mov negb stc jne or jo mov ret dec test push jg lods cmp notb jnp fwait and mov jg pop cmp mov rcrb xor mov call aaa or mov sub in nop mov xlat shrb or (bad) push pop mov jg test repz jg repnz out jg jno movsl xchg push pop mov lea outsb sub cmpsl xor mov xchg xchg push sub scas jg xor inc or (bad) clc lods jnp adc sti jg int stc rcl or pop pop jg sub push mov or add jg pop pop daa mov popl pop pop dec jg lds pop add sbb jg and stc sub test cmp repz sub std jg add mov inc jge mov sbb mov sub lds (bad) loope int3 data16 jb idivb bound sbb push scas sbb pop sahf cmp xor pop jle jne mov jg inc movsl sub mov xchg jg cmp xlat mov aaa jg arpl loopne push pop inc sbb pop sub cmp negl pcmpgtb pop mov data16 lods mov int3 aas jg das jmp jg jns lcall cmpsb sbb negl insl jl jg mov push inc in aas pop sub loop out mov inc inc and out ds inc xor sti (bad) dec xchg cmc mov adc push pop movsb sarb fistl pop lock push cmp dec inc xor (bad) jno jg adc pusha add cmpb jb insb repnz jg cmp pop mov mov xabort ret add jg sbb jb cmc cmp lcall mov (bad) inc movsb insb dec aas ds icebp dec stc jge ja push jg cli jo mov xlat outsl addl push inc loope and push std aaa movsl ljmp loopne xchg cmp jg mov popf int push sub gs shrl js call xor mov sahf jg pop cld jle xor (bad) xor rorl cli push loope addr16 inc in sub jg or cmpsb lcall fildl insb jg push or xor lods dec jno add in lret add push add or adc jge repz ljmp ja inc jg std cmpsb ds pop cmp fldenv mov scas fneni(8087 rcrb out mov inc xchg sub pop adcl (bad) (bad) and dec push insl xor (bad) lock bnd pop sets push inc sub xor pop jb mov mov cmc jl xlat jg loop ret bound stc add test jg sub inc push int3 pop mov adc mov (bad) call repnz (bad) insl mov lret sub cmp nop xabort adc call data16 bound or movsb fs daa ret and jg push mov aas jbe xchg sub fnop arpl (bad) jg mov cmpsb lods mov mov enter inc adc mov inc jae xchg push loope push push inc sbb lds mov jge xchg dec dec cmp clc cmp js fidivrl mulb jmp fnstsw movsb push aas xorl adcl outsl jp push jns xlat stos mov out jg lock cmp or cs cmc mov cmpsl dec aaa xchg dec cmpl jg sbb mov inc mov push lds jg inc mov pushf dec mov push repnz cmpb adc add mov xor loopne jg add mov out xor andl pop jg adc sbb jg jmp cltd mov sbb std negb loopne xchg push aas (bad) sarb dec popa cmp adc stc xor idivl push pop jb push mov fildl cmpsb mov shlb and add dec mov into addb inc aas (bad) rol cmpsl roll or mov push popa jp xor lock test xchg add rcll cli cwtl jg (bad) jmp sti mov jg out int3 or and and sbb cld xchg dec subb push adc jmp cmp adc sbb or test ds out mov and mov lods sti fs jg cmc out and mov arpl into jbe xor fnstenv inc xor movsb mov inc xlat xchg cmpb repz sbb test push inc push dec jg jnp clc or aad push and out lods mov pop cmp pop pop dec cmp ja mov lea xor mov jg (bad) in pop hlt sti cmc xchg push fidivr fs xor movsl data16 pop mov sti cmp adc jge inc movsb aad jmp loopne cmp dec jnp xor std mov jne inc jg dec mov lahf bound jg pop ja (bad) lcall (bad) mov mov inc outsl add mov outsb jg gs es xchg repz add in jp fwait jg pop or xchg pusha aas fildll call mov mov jg aaa inc or xor pop pop aad or (bad) (bad) jg loope sbb into std jge cmp (bad) sub lods mov dec addr16 es push mov aad jg push js inc mov mov mov rcr scas jg inc out push jno lods pop jns dec in push push jg (bad) cmp mov insb pop ja dec inc mov xlat mov into js jg in sub xrelease jge cmp cmp ja movsl cmp jg mov adc sbb pop cmc inc call and cmp cltd int3 jg test in mov push int mov jns ret pop (bad) ss in cmc and mov add imull and lods loop mov stos gs xchg mov mov out pop push js fisttpl pop data16 push icebp leave pop scas push les push jg mov pop jecxz push jg movsb mov pop and scas imul jne outsl hlt add cmp inc push jg out mov cli cmpsl cmpl fs loop xor jb scas push popf fs xchg ret jg cmpsb in mov jl enter mov sub dec add dec adc and repnz cmc popf ret cld aaa jbe popa dec xor mov arpl jp mov dec and fidivr outsl lods cli test in jg dec mov cwtl push stos add add mov push ja (bad) pop std adc jg xchg sub jg pop enter jbe dec repz jne adc xchg or stos es sub inc jns mov jg stos stc das adc adc fs fldcw test fnstsw fwait jecxz es push push mov cltd les inc gs inc inc (bad) stc jg adc and xchg mov aas jge sbb dec pop xchg jg pop inc fcoml (bad) pushf jg xchg push xor lds jno subl sbb rcrb clc push add dec popa hlt inc xlat dec out jp and shll mov aaa sbb jg in pop sbb mov jb in (bad) je popf jnp mov mov hlt jg out call jg fcoml push insl jae jg jns add and les jno push sarb aas dec cwtl data16 mov inc std js mov test pop lret sbb dec jecxz mov dec test jns sbb mov sub xor jne adc jg mov rorb mov outsl out ret xchg (bad) and jnp ret jg out xchg imul jb sti lahf ja cli inc cmpsb cmpsl jg (bad) mov in movsl cmp sti mov inc push dec add jg push fbstp jg stos or outsl das (bad) jg sub xor iret and or pusha cli jg sbb xchg sbb mov or sbb cmpsl xchg push and fwait int3 lds jg sbb cmpl dec stc addr16 fisttpl dec sub mov jge adc jg iret sub pushf jg adc cmp insb hlt xor ss jg jb or xchg daa jg lock pop and imul sar je pop inc pop cmpsl out add js jg fidivr xor sbb dec inc lock and inc mov loope out ja push nop (bad) cmp outsl pop cmp (bad) call pop in aam outsl mov jbe adcl mov mov out xor and push cmpsl (bad) lods jmp and push xchg mov pop fwait mov out or divl test in les or sub arpl jg dec cltd jnp pushf sti fsubr jl sahf jg jae push idivb lds in add (bad) add ret outsb call lds dec outsl fisubr cmp jg mov pop or xchg (bad) cmp xchg xchg dec out cmp jg sbb ss add xchg jg add (bad) scas xchg mov add pushf pop addr16 (bad) pusha movsl xchg inc fbstp dec test stos cmp pop clc roll mov lock cmp dec push test push (bad) pop scas test pop lea push (bad) cmpsb call xchg icebp fcomip lret jg (bad) pop add inc inc inc jg jl aas pop mov or lods jg movsl imul dec dec aad dec hlt test xchg fsubrl inc pop pop jg int3 mov jne sub jg insb adc xchg in xchg jl pop imul insl mov pushf mov out lock mov and stos jo rorl dec fcompl stos jg fdiv incl outsl std mov sarb mov lods (bad) rorl mov ss sub cmp mov cmp in into js test insl ja pop push cld jg cmc enter jle jg push xlat xchg subl rcrl sbb aaa cmp dec gs mov add (bad) mov xor adc push addb stos cmp mov or jg ja aam mov sbbl fildl add pop fs dec or cmp xor sahf inc and dec pusha dec add add aam (bad) lret cld or jg mov jns inc mov add or mov test popa xor inc jne hlt xor dec es cmp pop jg mov sahf cmp imul decb daa xchg inc pop inc jg adc pusha test xchg push jg iret dec mov in or xor mov inc xor jg push div push in mov mov jae add cmp ja pusha and (bad) xor scas add xchg or (bad) ja jmp dec add jg push into shr push inc and pop and movsl imul push push xor push adc decl mov fs loopne jl jg mov test imul outsb jg (bad) imul fcomps sub and adc mov push stos add pop push mov negl es in loopne mov aam jg test aaa imul adc dec dec jns ds jg mov inc fsubs rorb add jg sub jbe sub cmp mov or mov cmpsl jbe rorb mov cmc sbb adc push ja rorb jg test repz lods cmpsl faddl pop outsl jg enter test popaw xchg jg scas lret sbb arpl movsl (bad) jg mov pop cli lods mov sbb inc mov jg movsl push add dec jmp xor gs jl lret sub mov out fwait push enter pop ffree dec fs pop inc xchg (bad) in ds jg fucomi loop icebp loope aas xchg dec dec (bad) popa rcll pop imul xorps sahf inc sar dec pushf jmp aad or pop pusha cs pop call scas lahf inc jmp jno dec mov xchg dec push pop mov sbb mov in adc xchg xor push xchg mov scas add test jg nop int3 mov inc (bad) int xor test mov mov cmpl outsl dec push sub jg je mov jg pop cmp xlat lahf outsl mov fdiv nop cmp shrd lods mov mov xor mov stc scas ret repnz mov repz or aas ficompl mov out add mov mov enter jno or iret in cmpsb stos sub pop mov fldcw pop xor stos fwait arpl jae jecxz pop dec leave dec mov rolb test mov xchg aaa lock jg stc test push pop push jmp jg cmp jg push fwait iret push in out jg dec clc push mov sbb insl ja jg icebp addr16 xor and addl cli out inc inc or jle jnp jg push mov mov enter adc jg mov ret loope out insb mov jg sub inc add mov not mov bound stc add jg sbbl jg (bad) jecxz sti lret mov pop sbb dec lods gs sbb ficompl cmp vmovdqu sarl sbb jg mov ret push daa jg jno ljmp lahf jg pop push cmpsb mov sub mov mov xor pop and mov or subb enter (bad) xlat fsubl orl stos rclb sahf les and jg (bad) and xlat dec jg cmpsl lcall dec xchg sbb (bad) in shrl jle aas pop add inc leave inc mov mov lahf (bad) xor and out mov (bad) negb stos xchg bound lock cmpsb inc sbb add mov sarl imul into jg jns pop sbb xchg pop jg mov out aam jg mov (bad) jo jg,pn inc sbb mov es hlt inc lahf arpl mov jg push pop (bad) lret jg dec adc jg loope int3 xchg ret jg xchg xchg faddl fdiv jg xlat hlt or outsb cmp lea std or in jae pop aas jp das ja leave cmp stos push sbb bnd adc jge stc jae dec cmpsl sbb out jg adc sub movsl and mov pop add bound jl out mov ret out into dec scas pop mov fs insl test jg std sbb ljmp decl cwtl cmp or jmp pop push fsts jg adc sub jg loop rolb adc jg fwait pop inc xchg mov fdivrs hlt gs jg inc or mov rclb psraw (bad) fcmovb pop pop sbb rorl aas enter rcr dec dec cmp mov jbe cmp js jg add test push lds sub pop mov aad sub dec dec iret movsb pop lods call inc cmp mov ljmp jnp jns cmc push jb jg jne pushl sbb push or scas loopne jg repnz in xchg jne jg xchg lret push dec repz or dec pop lcall jg into xor dec arpl mov inc mov pop out sahf lcall sbb xor jge add scas mov jnp mov (bad) adc imul les lods arpl icebp aad aas jg add mov xchg sub aas mov jnp jmp dec jg imul ret dec jno clc mov (bad) jnp adc lods jg add cmc scas repz ficomp jg dec jb and mov push dec jg mov pop add xlat loopne sahf mov sub xchg jmp out sbb repz jg or call dec jg movsl imul dec (bad) jg shl ja lds cmpl in xor xor outsb aaa dec mov sti ret mov mov lds jg mov (bad) fsubrs cmpsl jg or push cmpsb jecxz (bad) std loopne pop xchg jg cltd sbb lock lret dec inc popa aas rolb mov in test daa mov jge mov dec ds cmpsb nop inc fidivrl dec sbbl sub jg test ret je cld fnstsw (bad) or pop inc push jg jbe mov shll xlat mov or js scas aas popa insl mov cmp dec push repnz inc jb mov cmpl jg and fistpll pop lds sub mov dec xchg lret lea js popf jg shr inc jge aad lret insb push (bad) jle mov push push push adc jg xlat nop cmp je cmpsl jg add stc lock lret mov out fistpl push or (bad) ret icebp lahf jg cwtl (bad) mov clc aam jg in js cs mov fs dec cmc jg fcompl push mov jns outsl subl lea data16 add mov jb and mov inc xchg lcall cmp mov fstp mov dec inc xor cmp repz pushf jg xchg inc es pop pop xchg outsl or jg or jmp mov nop and sti sbb in aad sarb lods lds aas das sub sbbb aas inc je (bad) repz dec (bad) jg or fwait mov sarb and repz aas leave sarl jae sub pop stos cmp decl clc cli lods inc mov sbb out ja pop sub cmpsb jg lahf sbb ljmp sbb ret mov mov inc adc jg (bad) sarl daa xor clc jg cmc movb pushf mov push icebp add outsl daa gs adc jg stos out enter mov addr16 aas sar (bad) fadd movl imul mov jle imul pop inc ret stc in lea fadds in sbb bound inc adc ds fwait xchg flds into fnstsw pop popa fucomip cmpsl lret jno nop dec push sbb (bad) in mov or int sbb jg es stos adc mov out lahf mov adc loope dec xor cmpsl sbb and sbb jg jecxz aad loop decb outsl bnd mov cs sbb xchg shrl jo dec push jl sub hlt add inc cmp mov lret stos inc adc inc jg out ror or mov dec or repnz stc ffreep daa pop dec cmc dec pop jg and test jg cmp rcrl xchg mov inc mov jg xlat outsl jp and inc test and xor das mov shll cmpsl jle add ss pop mov cmp push mov jg lahf dec cld dec aad inc jg stos xchg sub out mov (bad) mov push jg test out (bad) out in inc inc and bound jns and aas jg sbb pop popf jno mov imul outsl stc sbb je js cmpsl std jg push mov pop jg sbb cmp push ja xchg ljmp cmpsl add cmpsb jg sbb in add adc or cmp pop dec mov int3 or jge jo push dec ss inc out pop pop mov pop scas pop cli pop push fwait mov mov mov dec dec xchg loope sub jb push std sub sti es insl mov jle pop xchg ret xorl (bad) cmpsb mov jg (bad) mov (bad) sbb push cmp decb inc (bad) repnz pop jno jb addr16 mov repz sbb sti pop mov dec mov addr16 mov das mov int3 sub xor es sbb cltd push and and pop test stos cmp or inc fadds jae sbb arpl cmpb xor jg,pn jb repz in jg js enter loopne xchg (bad) out jle in mov sti add (bad) xor call mov adc inc xchg mov pop dec xor loop fwait adc aaa sahf test mov cmpsl gs push pop jae aas sbbl and cmp aas divl mov add leave lods sbb inc adc mov lods sub xchg je sbb cmpsl jg sub cmp jg loopne lds push or sbbl cs outsb imul mov mov loop cmp pusha push fnstenv cltd ljmp xchg xchg pop jno and movsl xchg pop cmp sbb cmc ds out mov aam imul rorl xchg inc test dec sub insb test jg test mov mov push and jg cmp jle jbe leave adc and sub cmp mov cmpl cmc jmp (bad) cli imul int pop inc jg lret rol jnp mov ja hlt fstpt jg in xor jg add jmp xor fcmovb jp shrl push repz mov push mov and data16 cld lock cmp es les xor bound ss scas rol xchg insb lret jg and adc sbbl ljmp dec jg jmp data16 jg inc popa jecxz xor ret aas sbb std dec out outsb mov lea sbb dec stc into aas mov out lcall cltd push stos les outsl sbb inc insb mov lret inc inc jno jg adc adc jg out jmp jle fistpll or mov mov and mov xor into ret mov cli aas push add (bad) adc js cwtl outsl xchg lods outsl hlt (bad) jbe je repz jo jg loope (bad) (bad) jl add gs in add jg sti mov ds mov sub pop inc insb mov jbe std jg in cmc (bad) ss mov into xchg lock jno lret loop pop loopne jmp or jl lcall cmp fsubrs and mov int3 jg fcompp sahf pushw repz adc adc mov jecxz pop sub sti movsl ss xchg jne push cs dec call dec cmp jg insb jp mov ret mov push mov rolb pushf push lods repz lds lcall mov aas mov (bad) testl cmc mov dec lds push (bad) mov jg notl lea jg aad cmp mov push xlat dec mov cmc xchg pop outsl xchg fsubrs pop mov mov or add hlt jb xchg into inc stc adc inc loop cmp fs ficomp xor jg imul fild (bad) divb jb jg inc test repz gs outsl xchg cmp int inc jp dec inc hlt cld push dec cli xor popf ss and scas mov out sub fstpt stos gs stos xor addr16 dec mov inc and ret push jg cmp scas call mov pop jl jg es insb sahf lahf and shrb or xor lea das jae xchg pop mov adc in sub add inc jg pop pshufw ljmp int3 pop (bad) (bad) add mov jg xor loope jg pop sbb sub xlat mov lahf out sbb out mov xlat jb aas stos xchg xchg jg and mov mov add fnsave (bad) cmp sbb imul (bad) icebp xorb pusha pop addr16 aaa jg mov divl pop out addr16 sti sbb sbb pop rol push out pop dec out (bad) mov cli jg lcall jg (bad) jle sbb (bad) push aas fisubl lods jg in cli or daa mov js aad icebp hlt imul adc mov lahf mov aad popa rclb jae jecxz dec pop ja inc dec jg stos fdiv dec pushf sbb jg mov adc negb add imul test jg andl dec out out ljmp mov xor lock push js jg arpl jg push popf push mov jno jg (bad) and jmp test js fistpll (bad) dec mov fstpt (bad) xor xchg jg mov cmpsl cmp fnop jmp into pop cltd and lods in mov (bad) (bad) dec sbb fs adc jg mov data16 jg pusha jae jecxz int3 outsb jg mov enter fisubr loop inc xchg lds jg cld aam fmull pop leave int3 jl inc scas or jg xchg movsl pop mov test jg push adc ljmp scas mov adc (bad) jg mov shrb sti sub lock lea je mov mov and test mov in mov fstpt mov out aas (bad) or fscale and enter dec add push bound adcl lock jg fcompl in sub hlt mov mov jl dec inc int sarl jbe mov sahf mov mov das enter sub (bad) in lock pop pop cmp jg insl movsl xchg into and mov loop scas mov or inc add ljmp leave nop mov and mov xrelease lods lods lock stos pop repnz daa rcr (bad) insl mov mov dec and pop les push jmp loope xchg fisttpl fcompp pop jae and jg (bad) pop push mov (bad) lock pop lock pop int mov imul mov ficomp notl lods gs pop xchg in fwait jg test adc cmp jle imul sub insl or das arpl pop jg jp or pop dec aas sbb nop loop cmp movsb sub ja cltd xor xorb cmp out jmp inc popa gs add sub mov mov lea es push xor jno (bad) bound add jg inc or lret cwtl inc jg es jne jl jg pop sahf add mov loop fstpt sti dec insb mov fidivl and pop inc lock xor sub xor mov push insb jg xchg or pop daa stos and mov mov mov aas mov mov jg xchg (bad) repnz sub dec imull pop pop pop pop lods movsb cs popf xchg ljmpw inc (bad) lea mov loopne dec xor mov test test mov jmp es jb js ret stos mov fwait mov push jbe jg sub mov inc sbb clc jg cld add inc mov xor dec addb cmp cmp fwait lods ret iret aas add aad push pop adc imul sti loope mov pop or pop and mov sar insb inc jg dec xor push jno cwtl jg mov push mov (bad) pop jmp in push jg das adc test jg jo or in sti stos jg or pop pop ds push inc pop lret pusha leave push (bad) ret pop out dec movsl pop xor popa jg in inc addr16 add sar data16 jbe rorb dec (bad) mov mov inc (bad) or or aad fdivrs outsb jo and cmp stc fistpll push jbe mov sbb js pop loopne cmpl les lea inc arpl rorb sahf add jg jmp cmp rcr ret jg mov jmp sti cwtl dec aas push das incb sub lcall pop pop test jg dec mov cld repz and (bad) mov jo lahf in jg jmp es imul and add sbb inc ja hlt fcomps jg popa mov stc sub lret scas rcrl jl inc jg repz fs mov mov or push jmp nop push call scas jno sahf and rcr and inc cs mov jg jb xchg into idivb mov loope mov adc test and sbb push dec rcrb in xchg jg outsb adc mov jno jle cmp movsb leave ds add jne add cmp shrb scas mov imul aad push sub xchg pop xor jg das sarl sti repnz fisubl scas repz fs subl nop push add sub mov ja lcall jae sarl inc sbb mov fcmove rcll mov in scas mov adc nop sbb or pushf les dec pop mov add or push fwait dec (bad) xor mov outsl inc popf jg dec sbb mov cmp pop add dec xlat fdivrl scas dec imul xor dec mov and mov rcrb (bad) jecxz insl push cs pop cmpsb out iret mov leave imul mov or popf push roll push xchg enter and jg pop and pushf sub loop cs mov outsl lea sbb mov jo inc xchg xchg xor inc inc ret and sbb repz adc push jg stos fs ljmp test jg push inc loop in bnd mov dec dec and movsb lret mov adc add adc in mov repz aas es push and or mov enter pop loope dec pop stc ljmp imul sbb cmp loop sarl and cmp lds ret lret test add adc test mov out loopne lret movsb and adcb inc fwait cmpl inc jle or fildll (bad) cld call std testl fwait test in sub ss fsubr cs jns sub pop add js idiv clc fimull jbe dec adc jg lret into sbb sub repz mov insb mov rcrb or cmp dec dec imul (bad) mov mov xchg jg adc imul outsb mov sqrtps les mov rcrb cmp jle inc or mov or push jg test mov jg das int ficomp subb jge mov xchg outsl jg xlat mov mov inc push pop pushf push cmpsl ds mov iret jecxz mov lods cmp inc push bound pop jg psubd sub mov inc lahf cmp lea loope jg mov addr16 pop inc neg sahf mov jge add inc arpl and into fiaddl pop dec mov xchg inc push lds popa loop pop mov stos repz and and pusha or sti imul fcmove outsb jg hlt out out inc mov rclb jg adc adc loope (bad) cli mov dec fs std rcrb mov loopne pop aas incb xchg adc repz cmp stos inc in sbb mov pushf inc add push and aas stc sti lods adc icebp mov call and lahf das pop or fs fistpl cmp test out ja jle jbe mov mov pop jg fsubrl push xchg pop and in jg imul adc daa dec ds jl jg mov mov ret lods int push jmp xor jg aam sbb std shrb jle jne jl dec in push xor xchg repnz pop sbbl jg push jmp mov add int rcrb adc mov loop push movsb pop xor popf ja cld sarb lock push (bad) cmpsl inc jle popa jg lods lea push (bad) out jg add and inc pop adc jg sub scas mov mov mov adc fs sub xor jg inc jmp lret nop mov push mov sbb lea mov repz movsl jg cmp fisubl mov lock aas add pop mov pop (bad) pop lret int mov pop inc pop shlb gs xchg adc jg sbb mov arpl bound jg mov cs sti or fxtract out jg cmp sbb and push aam mov jne jge test jg or bound jg inc clc js fs mov aas orl sarb add sub mov (bad) (bad) dec jb rcll stos add sar cmc add jg add sub fadd mov xor dec pop inc jle lret jg clc add pop dec pop in ror jnp xchg add mov pop pop mov das cmp ja (bad) out lret imul add mov mov sbb xor jmp xchg bound mov out inc jg cmp ret xchg jg orl nop cmp popf test adc int test mov sti sti mov xor adc shlb jg lahf jl mov mov out jo outsb dec js pop enter add (bad) lods jg inc xlat pop fcoms fildl iret sahf repz pop xchg inc mov mov lods ret jbe into sti ret or push cltd mov jne pop mov jg stos jnp enter jg dec ret movsb fcmovnu jg or ss and aas xchg adc pop das arpl lods clc xor sub jg dec add sub cmp dec fs pop xchg arpl pusha sti inc pop es iret mov scas sarl jmp les pop jg into lods push and and fiadd pusha addr16 fnstsw mov and mov inc movsl push mov jg outsb rcll push mov repz dec dec push das or mov shld or test aas cmc pop push jno add ror ficoml xchg or add imul bnd jbe addr16 into dec stos jg imul pop daa cld loope jg (bad) fidivl mov ret add sti hlt mov and fsubrs idivb cmp enter inc in popa aas jg push fldenv sub pop stos jg test les cmp in clc mov and jg ficom xchg (bad) adc outsl mov jbe sub sarb scas push push sub mov cmp jb dec scas add add ror arpl add add sar icebp stc pop cld mov aas cwtl out (bad) mov (bad) test ja fucomip mov jo jnp mov jp jg leave data16 or fdivrl out dec mov inc loope ds cmc or int3 orl xchg push rcll pop outsl dec cmp aad jae cmp test jno add lret jg sbb sbb pop cltd jg sbbl test (bad) sub inc push push and lahf pop add (bad) xor out stos cmp add inc jno test addr16 mov add cli adc int or push data16 (bad) jg imul jecxz lahf push jg jp push sbb sub cmc dec mov mov imul sti ficomp or inc out aas cli mov or dec and mov pop imul sbb pop xor lock out imul aam xlat ret (bad) (bad) push inc jl xchg and ficoml jg (bad) jge icebp inc sub add xchg mov (bad) in test and movdqa lock icebp loope push insl arpl adc mov (bad) jg pop mov jg insl sub or out cmpsb bnd rcrl xchg imulb pushf dec jg adc push notl pop arpl nop rcrb inc inc mov adc idivb test pushf cltd sarl rolb and aas push inc pop xor lcall jbe jns xchg test les in mov fdivrs xchg (bad) mov jg add jmp lea jg aad pusha loopne push in mov jge out xchg xor mov xchg mov xor mov sahf push and xchg popa or sub in loope imul (bad) (bad) fistpll ficomp and jg sbb loope pusha mov test mov jg dec mov packsswb mov dec cmpsb add aam xchg nop jg inc sbb inc adc jne sti or jg xchg je adc adc lds stos pop mov xchg popf jg aas jl sub adc movsl and pop dec sahf add dec mov lahf push je and movsl pusha or cmp scas pop mov lea pop inc mov and push lret jg xor mov pop cmpsb jg xchg fild jg out sbb fidivrl aad push lahf pop jmp and lea sbb jg xchg cmp inc call sbb scas dec fcoms pop imul fisubl lret xchg adcb adc push ljmp pop or xor addr16 jo pop sub test sti stos add cmpsl jl cmp pop mov push movsb xor jb dec enter mov pop sarl push jnp cwtl add cld outsl (bad) aam inc jg mov jg sub add jg cmp mov or sarb jno fistp jne xchg insb push fistl clc jg mov or js imul fisttpll gs mov mov lret jg xchg pop iret mov jg push loop js cmp inc test and push lock mov inc into sbb xor jg sarb pop and cwtl mov icebp mov mov cld jg jb (bad) jae stos jg int pop pop in ljmp inc fcmovnbe (bad) jno inc pop jge jbe mov std int bound enter cmp jecxz imul mov push sti test jmp mov scas xchg mov (bad) adc hlt pusha adc fwait mov mov pandn testl jbe ret jg jl mov add jg mov aam add stc es sub test loope mov jg or incb or div and cmp fstpl stc test repz push loop adc (bad) jg fs jns cwtl xor push je mov sarb sub pop mov xor (bad) (bad) jg mov daa pop dec aaa xor pop jmp stos (bad) and dec push aas cmp xchg cmp pop jg (bad) call out gs ficom addl cmp inc cmp outsl mov jne (bad) (bad) lock jg xor arpl mov je jg gs pop push arpl lds jo jecxz cmp jle dec notl aas sbb mov daa bnd push jg cmp mov lods mov jg mov xchg jecxz xlat jg lcall jg pushf inc xchg push leave inc pusha jne pop out add jg push pop call jg leave jecxz loop sub (bad) sbb ret or mov roll mov jb outsb jg push lods push xor pop push aas lods int3 xchg sub inc sbb or push aaa lea mov adc clc imul fsubrs js movsl xor push outsl outsb dec shrl sub stos add jg cmp mov mov sub stos jg aam cmp aas inc push imul xor aam xchg mov ja jg lret lea (bad) mov dec fcoms jg sub shlb std push scas and mov (bad) insl sub mov and dec (bad) or push es xchg popa (bad) ss or call mov out xlat test out pop test adc sti cmp stos jmp jno leave fstl jg aad scas inc mov fidivr pop lds call xchg ret inc pop or sbb xchg lock fidivrl aam es sub arpl jg xor inc jmp push xchg fwait outsl call sarb sub fist cmp push aad aaa cmp add sahf cltd lret push mov sarl push ds lods jmp jl in fmull inc jecxz pusha jg mov xchg jg pop scas sub pop xchg negl sbb nop outsl cmp jl mov jg les ds pop cmpsl jg outsb andl jg fcomps jl out jg or and and push mov scas icebp jg pop idivb jg cwtl testl int3 jl popa adc mov jg stc pop fldl sub cmp mov xchg or call or je xchg inc pop ret data16 gs test es xchg adc sub shrb pusha push insb mov push cmpsb jecxz xchg jmp aaa push (bad) popf outsb jno jg xchg push jo inc inc jg and aam mov les stos cmpl pop sub jo or dec data16 and out mov xlat out mov cmpl jg cltd jns bnd int3 jg mov insl jge (bad) dec cltd dec mov mov adc clc aam imul cmp adc pop xchg sti push (bad) mov pop cmpsb jg lock pop cli jg xor xchg mov cmpsb mov jb mov lret mov stc dec ja imul test mov movsb lahf jg,pn jno stc mov sub outsb inc mov inc in int fmul pop outsl insl fucompp mov cmpsb jg test sbb sbb dec push xchg jno xor mov push mov in movaps pop into inc jnp addl jl dec adc jae pop sub and mov fs out adc ds xor push push or pop xchg pop xchg ja sbb cwtl add lods mov das mov lods js or jg cmp aas jno jns push in imul pop addr16 aas sbb ret dec dec jo jg sbb jge mov imul push fldcw pop fdivrl pop jg cwtl fninit jg mov fmuls pop (bad) mov mov aaa jae push (bad) icebp add pop jecxz lret fidivrl inc push enter inc jg cmc movsb push pop test or fs (bad) mov mov or leave ljmp and jg sub andl addr16 mov mov sub out lret scas lock sahf add jg adc pop cmp enter call push das cwtl sarb sub dec movl inc leave pop xchg popf push pop arpl jg std jnp cld and sti add ds repnz movsb push lahf and xchg cwtl ss mov outsl mov sub jne jge inc xchg jg and sarl das lea pop dec ss jecxz out stc fldcw das lret adc cmpsb test fistpl mull jg adc out and in je mov jne ficom sbb in jg test (bad) xor dec fsubrl into push jb cmp cwtl outsb ficoml cmp leave xor pop pop xchg mov mov imul mov enter mov xor es nop aas rcr add in in lods inc cmc add adc jae pushf enter mov lock hlt sbbl adc add scas jg popf lahf xor test sbb js lcall jb sub sbb mov push add and roll in cmp jg aad mov jg pop aaa ja (bad) pop sarl xchg stc mov xor out jg lds jns clc insl addr16 jbe cmp mov icebp jo mov push nop lea mov push mov jp popa fmull dec lahf cmp stos cwtl sub pop rcrb add pop ja and mov addr16 mov out inc fidivr jecxz insl mov sbb cli lods clc or addr16 ret jp push pop addr16 test pop sarl dec pop inc imul test (bad) add shll sti ret fdivrs cwtl jg and into (bad) movsb mov les inc rol push jg lds std aas inc mov rol and pusha (bad) jg jns mov sti add xor in lahf sub mov mov imul jno sti jg loope cmp or (bad) add orb jno repz ds aas js outsb xchg orl jg lret test mov hlt mov pop mov mov or xchg jg xchg cmp jg jl mov daa inc jge and bound mov outsl loop mov repz xor (bad) sbb push xchg push (bad) bnd jg ljmp stc icebp outsl clc cmp mov aas ret jg inc adc adc lret stos pop inc pop std int jnp mov mov xchg add push mov (bad) xor pop movsb pop jg stos aas icebp jle shlb sbb pop mov (bad) mov lods aas mov inc cli inc sbb scas stos xor dec int xchg fbld jg push adc imul jg sub dec cmp mov pushl sub jecxz js mov ret dec mov cmc pop je test jg inc mov cmpsl jg hlt pop inc xchg add push or jg pop pop mov or mov pop imul xchg xor and cmp jno test mov sti xchg mov cmp xchg sarb adc ss and aad in fistp adc dec sub mov jg inc sarl call dec push sub mov lods add adc pop sbb push lcall mov mov scas mov mov mov pop js (bad) call stos (bad) repnz rdtsc add dec stos mov int3 test shrb add jg mov inc in push jmp cmp jb andl jne pushl insb or in sahf and adc data16 imul je jg ds jg dec mov sbb or mov dec cmpsb stos mov add jg in dec inc loop pop jg adc xchg lcall adc loope and push out xor leave std cmp inc ds rcll inc sarb pop jns jne popf ds cwtl jnp dec lock adc push movsl xor (bad) mov mov dec aaa sbbb xor inc ret (bad) mov jg fdivrp fidivl xor lret xor inc enter out sbb rcrl lea or mov xor pop mov icebp not cmp xor or fldcw push jae insl push negl mov mov ja test and out pop jle or (bad) (bad) xlat movq xor repz jg and sub inc mov add (bad) pusha aas cwtl adc popf jg push lcall cmp dec lock jns out xlat xor out jg fwait jmp jg,pt lret addr16 outsl test mov dec (bad) das mov xchg xor div cltd jg (bad) mov and cmpsl int ficom pop dec (bad) jg dec pop jae scas mov xor aas jb mov cmc ja loopne fadds sub (bad) jg (bad) (bad) mov cltd cmpsl in jg sbb bound xor mov sub nop aaa jmp sub mov mov push arpl sbb loop sub scas jae jg ficomp cmc and je iret adc aas fisubr push outsb or lret movsb jg data16 cwtl aad dec mov mov jge dec arpl jg cmc loopne cmpsb addl mull fisub inc xchg sarb mov into mov addr16 sbb add sahf (bad) nop xor aas and cld or inc cmpsl lds mov pop orb jg,pn mov mov loop std sub dec jg test pop jg sbb rcl in ret jg (bad) loop mov insb sbb pop loopne cwtl fadds jg (bad) mov mov je cmp mov pop adc and inc jg andb jbe hlt pop jg sarl jg adc js mov outsl out popf jp pop mov js dec sahf sub ja in jg les movsl enter jg adc xchg pop fwait stc jg (bad) mov insb dec and mov jmp inc ja jg pop inc or rcll mov lods jg imul out jbe mov sbb add mov and imul sbb mov adc xlat adc mov sbb push std iret jg insl ja sbb movsl xchg mov (bad) xor jg stos pop mov aas dec and cmp jg int leave xor fdivrs movsb repz adc jge and rol fdivrl push fidivl jnp sub jg fcomps cmpsb inc ja jg enter imul jg loope loop popa xor xor into pop les test sti fidivr mov mov loope xchg call mov push insb cmp gs sub arpl sub aaa dec popf pop (bad) (bad) repnz sbb cs inc nop cli xor cmp pop cmp outsl scas fwait (bad) mov cmpsl jg fisub stc push adc mov mov lock mov rorb push adc xchg out call fdivs aam push ret fs in sbb or lds inc inc pop and push jg sub add xor cmp jg jl shrl int3 jg sub sbb push cmpl jb lods stos mov int enter inc pop mov iret xor lea pop data16 (bad) sub xchg (bad) inc jg or in mov mov sti scas jne pop sti mov lods jg pop clc xchg push int jg dec inc test movsl jp jo lcall rcrl push sub xchg mov inc int pop dec mov cmp jg pop or es in xchg mov flds jg push sbb cld fisubrl leave mov sbbl xchg mov (bad) imul mov repnz dec and add push in aas aad jno dec mov daa and jb jg aaa inc out insb jge jg in push or repnz dec cmp push pop sub sti mov (bad) imul decl in adc jle sub fcomps or push icebp mull je std mov dec xchg aas add leave mov xchg outsl insb jae jg push and pop in cmp (bad) pop jg jmp call sub sahf push sub aad in aas clc aam stc xchg or mov pushf ss push orb add mov movzwl arpl mov roll hlt adc sub jo jg lret adc xchg jg or lret push das sub jmp (bad) fwait dec out fnstsw pop leave lods scas test jg sub jg (bad) xlat jp fcomi les mov call mov outsl aas shrb jg cmp or jg and pop std aas test (bad) lahf mov loopne sbbl cmpsl adc or xor (bad) cs fisubrl aaa pop fidivr sub bound pushf add and mov sarb mov or inc fsubr mov mov (bad) dec jg or inc xchg enter loopne add jns or pop ja (bad) pop (bad) outsl sahf stos jg cmp insb pushf and adc or and stos xchg or sti rcll jno out jb inc inc pushf or jg cld sbbl fdivrs out dec cmp inc jbe movntps mov xchg sub or cwtl (bad) jle or and xchg loopne out negl test lods loopne jg push push inc (bad) mov lods ud1 loope (bad) push cwtl das mov iret pop dec mov sbb pop push inc jg in xor jp gs dec repz adc data16 jne stc sub test fild mov pop icebp sub add mov lock xor pop mov data16 jg (bad) jae fstps repz mov pop jnp ret jg (bad) sti cmc enter sti push outsl in loope mov lds cmp mov les (bad) jg adc sbb push stos pop jg cmp lock pop jg pop xchg cmp testb push mov mov jle inc jg addl or (bad) jg sbb adc adc cld jae cmp jg outsb xor data16 inc and push mov shrb lds (bad) cmpsb in fwait xor jg imul (bad) sbb xor ss aad (bad) push shrl jmp jg mov loopne out cmpb int3 call jg in imul ret sub sbb popf cmp mov js dec into jge and mov or xor out jg xchg mov pop jg fildll out push jno pop cltd pop lds xorb mov in sub js jg mov cltd (bad) jg jp scas jle push (bad) sti aas icebp inc sub xorl jmp sbb jg inc lahf fisttpl shl mov cmp or pop ds ss jg xchg outsb mov jg sbb (bad) jg loop roll aam into cli pop inc cltd ds mov stos jg mov xchg xor popa (bad) xchg inc sbb push xlat pushf xor sub mull inc push jecxz out les jg adc mov jg jle mov jg cwtl iret aas fimul jne test frstor (bad) mov stc into leave mov arpl mov xchg mov xor or jg loopne lock mov mov icebp xlat pop push loop or stc sti out fidivrl mov push (bad) cli rcrl movd out bound ss push addr16 cmp in jns sbb jle push push pop jg enter push fistp (bad) test ret int3 repnz jg lcall jg sub aad adc jg dec negl add pushf fistp jg or adc and push mov sbbl push call (bad) scas jne out xchg sub xor test ret dec sbb stc (bad) cmp lds cmpsb xor dec negl mov and (bad) or insl push bound cmpsl (bad) lods (bad) mov or pop fistpl fidivr jg pusha xchg cli les outsb adc in jmp ret dec insb mov in and scas jno test mov sarb xor popa jno sbb fimul sub mov in cs pop inc add xchg sbb stos push dec mov jg push mov cltd mov mov ret fildl dec pop xchg dec ret add fsubl jge fidivr push cltd sub hlt je cmp ja dec jg js jne dec aaa addr16 hlt inc jg jecxz mov inc sahf jg shrd mov adc sub inc popa mov out outsl sub mov es (bad) pop cmp sub dec mov lcall sbb xchg jmp mov subl rorl fwait scas stos hlt ja jb mov cmp sahf dec adc bound or sbb dec addr16 sarl push lret (bad) push jg push je add jge mov outsl ret xchg bound jg arpl jae mov mov mov adc daa jae cld jg fwait dec cwtl je enter jg imul cmp or pop jg and pop in movsb jg fidiv xchg push jg mov mov mov jg adc in jg je sarl jmp popa fs jg push insl mov gs inc dec push and rcrb xchg aaa jle popf mov cli fstpl jg int xor scas and jg (bad) mov and fnstsw bound adc xchg mov sbb jg and xchg sub xchg jg loop leave rcrl xchg pop fmuls pop sbb hlt and ds xchg pop push or lods fxch pusha jg mov sub jb xchg jg lea and mov or jne dec imul jle add jg pop shrb shll pop enter sbb dec test or mov jg jp (bad) jmp xlat int jb popf and fninit cmp jno (bad) jg lds pusha das (bad) push mov pop bound and out nop les sarb xor xchg insl fbld jmp das fisttpll jg imul mov push sub nop out scas push pop repnz out add sti lea jg pop pop out mov push sbb jg mov or jg roll push add test jno mov pop arpl xor jg stos mov fstpl inc cmc pop add into mov jg ljmp jg rclb inc aas iret frstor add ja sub (bad) pop jae pop jg adc aaa pop xor cwtl sub jg iret int cmp jg pop stos add and mov aad xchg xchg sub ret dec outsb into gs das js in sarl aas out loope jle jg add stc les sbb scas fdivl insb jle mov inc lret arpl iret shrb add jns add pusha scas scas jle aad add lcall mov or jecxz xor lcall leave dec mov inc xchg imul inc test jmp jg pop jmp push or or fmuls popa icebp jg push add loopne mov and xor es das out scas dec jo rcrb addr16 sub sti aaa pop (bad) sub test ljmp roll jmp push add enter fldcw or pop xchg popl mov mov mov push into cld lds jne adc inc cmp jg dec hlt sbb jg pop or and and jae cld dec xor pusha out pop out xor jg xlat (bad) push push push into (bad) xor and cmc lds sti rclb or xchg dec aas mov add std cmp xlat sub (bad) or mov rclb jg std cmp idivl pop addr16 shlb jg inc mov xchg movq or push mov jg cmp enter add push cmp aas mov imul mov and jg and mov adc test mov lahf xor aas stc lods push outsb pop xacquire jae fnstcw fwait outsb jg jb add sbb (bad) jg or jge pop sub jg mov (bad) repnz pusha inc cltd mov dec push push jmp pop jg inc ret fmul imulb jg pop out gs cwtl cmp jg jne insb inc arpl nop in dec cmc loope jg into xchg push js mov sub mov cmp aam adc les jg adc pop xchg bound es cmp imul mov inc push sahf clc je add inc and (bad) popa or stos cld xchg mov push push fisttp pop mov into and jg in es lret movsl sbb and pop movsl or bnd mov pop je sbb pop inc dec mov dec shll popf popa lock or jg sbb inc jg out lea mov dec orl mov lret insb mov add jp pop cmp lds dec pop test xchg jnp jle cltd aas inc fstps cmc rcpps jmp push jl ret sbb inc fldcw mov mov shrb jg stc pop pusha push mov lods inc xor out mov jg xor sbb mov imul pop scas jbe jg pushf jnp add jb enter push jl sbb test aam jae (bad) enter mov outsl dec push sarl mov in xlat fnstsw outsl xor js dec mov or mov push lods push js mov dec std mov jg cs ds xchg iret ss bound jg mov inc pop imul push adc pushf loope (bad) cli sbb leave push insl into imul inc sarl sub in and push xor mov dec pushf jg pop fnstsw ljmp aad cmp mov mov mov iret push test int jg cmp popa pop insb (bad) mov fcmovne push sbb dec adc jo dec loop repz mov or jmp enter inc sarl jmp leave adc int xor jg imulb in outsl cmp repz push and aad inc (bad) jg mov rcrl insl test mul loope fistpll insb fstps aas mov add stos mov pusha repnz or (bad) mov dec rclb jno dec mov ja adc nop cmp fdivl dec mov ds pop mov pusha push sbb (bad) rcr dec rcrb in cli jle jg mov jo inc jg push in and fldt jno aad jbe mov xchg push (bad) inc dec lds jg mov pop add mov mov push movsl jge jg and stc sarb pop test dec mov dec add mov jbe fs aas vpsraw add adc cmpsl pop xor adc inc bnd push xor lahf sbb mov lahf imul mov int dec lea sub jg mov mov dec add mov std lret (bad) imul add (bad) bnd lret je push mov push lds aas mov push insl stc or dec lock jmp out pusha jg and test jno jg enter lods cmp mov or jg or aas std add aad xor mov movb push push sahf lcall push loop jg dec cmp xchg mov imul jnp mov cltd dec inc and lret imul xchg into cmpb scas js shlb je sahf pop jo pop jg xchg (bad) in mov cmpps xchg jl mov xchg loopne pop clc mov mov pop rcll fnstcw inc mov leave loop jg adc out bound jg pop mov jl loope mov cmc cmp (bad) dec inc les pop pop pop xchg movsb dec hlt cmp mov mov jg arpl dec xlat loope pop loop jg push loop inc out push jb xchg outsl repz sbb inc std (bad) lock cmp in (bad) cmp sbb pop cmp jg into dec aas sbb cld loop daa divb iret jg (bad) rclb fsubs out xchg jg fmull movl inc shll jg xor scas adc (bad) mov cmp and xchg pusha mov add and loopne popf adc cwtl cmc and lahf and dec into cs inc and js mov jp loopne notl pusha outsl fidiv pop int3 mov int jg movsb mov (bad) mov jg cmp lret repz jg pusha (bad) out repnz adc or (bad) push and cs xchg cmpsb sbb addr16 jg push sbb xchg xor adc dec or addr16 imul add clc add scas les sti pop xchg roll inc add inc pop ds orl push push jg push js cmp iret loopne jg in lods sub sti mov push stc or test mov lret cmpsb xor adc mov dec sarb jg shrb cmp gs dec cmp orl inc cwtl add inc mov or pop test jnp je jg clc pop pop fldl leave jg dec (bad) arpl movntq inc mov aas int3 and mov enter jge sub bnd lahf sub push adc movb mov mov sarl scas cli xchg mov adc and mov xlat jmp dec test (bad) sbb sbb cltd popf jg ret shrl pop mov mov nop sarb sub cmp jg mov ja (bad) cmp push in aas xor dec push pop mov les xchg inc aas mov movsb cmc dec push mov cltd mov pop push roll or jmp loopew outsb testb pop (bad) sbb sarl mov roll out xor push and in add mov push movl cld (bad) adc push int3 jg push test pop jg shr fs xor (bad) aas mov out iret cli lods les jle test inc lock mov push pop aas xor addl jg aaa cwtl push and sub jg xlat sbb xor adc adc movsb in mov imul outsl aam push cmp js outsl inc jg cli pop mov ss xchg cmp fsubr std jl xchg jp in adc rolb rcll gs lds push (bad) loop test push ficomp lds rolb sbb mov insb (bad) lret adc cmpsb mov gs ret jecxz inc outsb out dec clc dec cld pop jp jg xchg sbbb xor jg enter xchg lds test pop xor aam adc sub and mov in add jg jnp or test cmp push jle (bad) mull fdivs xchg inc aad or inc jle aas fist push lcall jg pop ljmp leave sahf scas (bad) rol dec xlat test out cs scas call mov jecxz fs ret jae out jg test cmp andl out (bad) cs pop stos clc fldl inc push cmp or jns cmc jae jg adc lods jg out sub ret jg,pn or jb pop in push pop sub adc xchg adc ds inc cmp insb test jg mov mov leave popa push adc pop adc outsl andb leave jo js cmp add test bound cmp xchg js outsl cmc adc mov xchg aas sbb scas mov test push decl dec jg sbb sti aad add ror inc pop pop das mov cli icebp sbb sti inc sahf jg repnz xor insl dec xchg jg dec xchg clc jg addl jg loopne fwait mov outsl fildl sbb test decl insl in xchg hlt faddl repnz pop (bad) testb bound fwait lahf sub mov jg jmp inc push sahf clc loope xchg dec add shll xchg mov dec imul or mov leave cmp cmpb mov xlat test lods jg dec hlt stos (bad) jo sbb sub (bad) loopne jg sub arpl scas repz iret (bad) cmpl mov jg lods rorb popa push cmp (bad) rolb jg inc pop xor loop add jmp lret push sti mov jmpw addr16 sbb mov xor xor mov xchg in xor (bad) jg jmp loopne dec int3 jg (bad) dec (bad) lock jg xchg movsl mov adc xchg nop and cmpl push loope xchg es stc loopne push insb rolb xchg jecxz addr16 icebp jg pop inc xor int3 movsl imul mov jle mov cwtl dec jg jo mov lcall add cmp and jns outsl cmc mov int3 push lods xchg dec rol jg add ja lret jne (bad) jg cltd popa push xchg pop sahf test ss imul sti fidivrl mov mov jg aas mov or rcll jle pop add inc sarb pop jnp subl xchg cmp lock ret push (bad) jg sub imul adc sti mov pop cs out jle std out xor jmp jg pop pushf jno adc daa inc mov sarl pop popf inc sti dec or arpl mov cmp adc pop sub imul mov jg les mov outsl in aas mov pop mov mov lds add stos xor jg enter jae jg sub cld xchg pop jmp xor stc or bound outsl into xchg lods ret push pop bound xor lods jg push push pop aaa mov mov add in push (bad) call xchg mull outsl sbb clc push lods adc xchg cmc imul mov leave push cmp test xor or stos inc jg cmp add adc inc in outsb or (bad) sub mov in dec call (bad) lods nop or pop jg loopne fisubr cltd add jl inc sub ret pop and cmpsl and in daa jg cmp sahf push jg fsubrl cs aad arpl mov movzbl (bad) sub inc lds rep mov sti or or ja insl pop call inc dec jge inc mov stos mov scas push jg mov jg push js cmp (bad) loopne mov cmp sbb mov lock dec idivb jbe (bad) mov in stos mov pop (bad) push adc pop jg pop bound mov cld push pop stc data16 lret pop jae xor and hlt icebp adc adc push push ds je cmp test movsb dec ss inc mov icebp out and ret pop push mov sahf jmp pusha pop sti call jl add jg scas pop outsl xchg ret jg mov or (bad) adc add in jg ss lds inc and jle mov roll jg std push or xchg mov outsb jge iret inc push sbb je mov mov push jg push leave into in add js aas push cltd push xorl jg dec xorl out stos dec (bad) cltd data16 decb xor jae (bad) and divl mov cmc out sbb outsl fdivrl das jbe push xchg aas sub inc std jno dec repz mov sbb mov ja loopne or xchg in and xlat dec pop push xchg shrb int3 adc test sub inc imul shll cmpsl push mov jle sub push sbb fwait movb je jg dec adc jg mov ja xor mov pop test and lock popa aas mov nop push xor push iret mov jg rcrl xbegin cmp cs lret pop mov lds push cmp mov lods push ds xor pop sub xchg (bad) cwtl mov outsl lds pop jbe fist test divb pushf push jbe cmp loop adc push push jg call mov push mov dec cli pop scas clc dec jg inc xchg jb ljmp es xchg loop jg out leave xor into lcall fstpl jg je (bad) jb push xchg repnz mov insb pop jg jnp sbb push (bad) shll sub mov mov repz icebp jo mov mov add sub das arpl enter cmp rcr icebp mov testb ljmp repz sarl adc in mov into loope sub inc arpl rol mov insb les xchg cmp add or scas aam sbb pop arpl loope stos jg ss sahf add sub cmp jg lds imul es icebp mov mov jg test push xor (bad) jae pop ja sub mov cwtl fistpl inc jg mov jbe inc add sub jae js sbb or loopne mov dec addr16 pop pop pushf mov jmp adc sbb mov jno cmp sbb adc jg adc outsb leave (bad) and jg repnz adc jg sub lock pop js loope lods pop testl (bad) rcr call pusha aas rcrb cmc dec adc daa or pop xor xor push push jg xchg mov inc push mov mov fidivr bound xchg and jg mov jmp js cmc ret jg pop mov mov jno hlt fwait sub sbbl aas mov fwait test dec sub xor fwait pop add or push enter and xchg or mov adc mov mov xorl jns lock mov lds sub sar and cmp xlat dec mov jns and les dec cmp popa ja adc dec jno aam xchg mov hlt mov fnstsw daa xchg or mov dec jnp scas mov pop addr16 int lret xchg outsl cltd adc je jg mov std jns sbb mov inc lds cmp xor push or jg scas outsb in and dec jg mov int3 xchg jg insl mov push add jg mov lret hlt cmpl or scas jg inc pop cltd aam adc jg jno inc lods inc pop jg or aad outsl jo jg pop adc sbb xor cmp outsl arpl enter out mov xor jg inc pop addr16 arpl push in call cmp and sbb lds jno jg mov loopne decb mov clc push jnp aam sub clc and fidivr fmull inc jg hlt (bad) mov outsb into loop mov pop (bad) js xchg jmp gs ror xor out popf xor lar sarb mov pop scas ret lods (bad) jg subb jg mov (bad) cld cli cmp mov push fisubrl mov loopne xchg (bad) jg (bad) mov arpl (bad) xor loop pop (bad) test xchg inc dec sahf jns loopne out mov mov movsl sub push dec sub int push cmp nop pop lret jle inc test dec mov add inc mov fst and sub sbb jmp into inc call (bad) ss inc pop arpl aad mov xorl bound movsl sbb and or jg (bad) fsubl pop scas mov jg jb xchg jns and sub rolb xor out xchg pop xchg leave or inc pop cmpsb jg pop (bad) jnp inc cmpsl dec incb lock jg xorl jg jnp aaa jmp in lret pop xor inc (bad) movsb mov mov pop jnp ds jne bound sub movsb mov pop imul or jae jg aad push into call jg xor pop jg cmp xchg push icebp popf arpl jg sub push xor sub mov mov cmp push jg sbb jmp dec cmp inc push ds sub outsb sub jg test fdivrl repnz neg mov dec inc jb mov leave test loope jg fnstenv push and xchg pusha push lock mov push pop xor icebp jg daa les mov add arpl mov mov aas cwtl dec imul push jmp mov lds cld cmp jg outsb loopne push out mov les jg insb and ret fmull roll mov lds movsb sbb fs xor rcl test lock dec adc pop adc call push sahf jg lds les xchg call inc insb roll mov and int pop jg adc sub cmpsl adc jg xor cmpb push sarl (bad) outsb outsl push rol in movsl jg mov sbb mov mov rcrl jg fidivrl divb int3 xor outsl mov inc hlt jbe lcall adc xchg xor xor or aas stos daa or xchg dec rclb sub add push out xor xlat xchg out ror jg xor test fistl idivl xchg aas sbb jmp and jg push (bad) loope fnstenv adc jg mov pop dec into es jg sub and mov mov nop xor lea fdivrs pop add and pop int3 push stos sbb jp xchg pop add adc dec push pop inc jnp ss dec sbb adc xchg aas incl or jg dec or xor pop (bad) cmpsl jecxz insl mov pop loopne outsb cld lock nop mov scas notl cmpsl shrb int3 dec dec repnz inc adc inc jg rcrl cmp push arpl jg cld movsb or lcall push loopne scas cmp in (bad) cld jg dec mov xchg dec xchg or ja out test aas push jg bound icebp cltd scas fnstsw iret hlt jle fwait lods adc (bad) fsubl jns jg adc nop lahf les mov pop push aad out jg adc inc out ret rcrl mov imul daa dec and (bad) lret (bad) data16 sbb pushf mov in xchg xchg daa adc xor decb jb or push aas aas xor sbb cmp dec push ret test jg mov (bad) sarl mov push out pop lcall jg jecxz pop dec sarl mov sub addl inc js mov pusha shll mov dec mov in mov xchg cli push (bad) aaa jg jnp outsl cmp push xchg and ret sub loop jg mov add js int pop adc xchg jg (bad) out or loope sahf es xchg (bad) mov mov add fisttp dec jg xlat mov mov mov jae push mov inc dec dec jns add fnstsw inc or xchg pop xor jge jg stc cwtl lods addr16 or adc lahf jg,pt lcall jg sub shlb hlt pushf sub push aas xchg pavgw (bad) xor sub xchg push mov jg into mov xor push rclb jg push jo mov inc mov dec test jg or add jmp lahf jg ljmp jg or cmc and push mov (bad) (bad) mov (bad) jecxz loope out je outsl jge ret leave jg mov xor jg push push sahf dec out sti out mov pop popa pop mov aas je das pop inc mov dec push jno hlt dec aas jle push popa rorb jecxz jg stc or out mov cmp pop pushf jno addr16 insl ret shll lods call shll xorb cs pop dec sti add cmp pop daa mov jg popa mov lahf mov negb test pop mov pushf pop cmp out fs fwait (bad) dec mov mov sub jo cmp dec rolb mov outsl mov inc jmp rcrb sub (bad) xchg ljmp sahf or mov loop lret pop lods and nop dec movsl cmp jg in jp xor xor jg mov dec cmp pushl addr16 (bad) xor jg xor xchg sub xor pop pop push adc insb in (bad) jmp pushf or jb mov jg (bad) dec and mov mov sbb sti jg iret adc je xlat push jg fsubs inc adc pop int repnz xor decb cwtl push in xor cmp mov fdivrl cmpl popf inc (bad) jg int pop sub cmp insb dec insl sbb imul lcall push mov or bound nopl add repz or cmp jg mov les ljmp insb and and jo jg jbe sbb das mov xchg shll or test jge jg or sub repz loop aas mov add jg jbe scas fisubrl stc aas mov or stos jno push jl mov pop jnp mov test bound lcall jle in xchg int (bad) or repz sbb mov sub push add jg stc mov gs xor jge std and mov jg (bad) mov pop jg lds mov ds jg dec outsl mov jg cmp sti movsl int3 or (bad) mov jl jg loope ljmp jg sub xor test xchg and jg push and std jg mov sti mov adc adc test jo cmp mov lds (bad) lock sti jb or mov cltd jne and or out outsb xchg je jg sbb int jg mov dec cmp xor and out mov and jg or lds mov adc jge sbb popa in outsb mov fstpt jmp (bad) inc push ds int3 and dec mov sar and xor dec jle mov jg sbb cmc mov mov idivl out (bad) or ret add mov jg bound loope repz outsb test jb lahf push jg fs fdivrl movups or jns int3 sub xor pop popf jmp mov sub lahf fs (bad) adc xor add fldl ret push xchg xchg dec push push in jp fs out loop iret lds jg pop sub jmp hlt das jmp inc (bad) mov jle jle cmp sahf enter xchg add jmp xor (bad) mov push jne jge xchg js movsb pop sub push rorb fs fidivr outsb and or ja xchg jg push mov stos jg fsubs ret fnstcw insb lea or out jg pop xor xchg push inc fcompl scas sarb adc fnstsw sti (bad) pop ror lret jo notl xor sbbb ficomp inc jo gs std popa lods in rorl adc ja movsl pop jg xor pushf jg aam jge mov lods flds jg repz sbb add push mov xchg outsl ror inc in stc (bad) adc push add sbb nop mov scas jg xlat jle cmp cmp sub stos mov sti jl popf test xchg mov or jns sbb sbb dec inc jg stc loop mov inc dec jg mov add gs jae fs sub out pop loopne das fwait divl inc mov inc or (bad) pop fdivrl mov (bad) dec loope enter jg inc cmp add out out sub fsubr pop movsb icebp and test add lcall mov jae sarl xchg bound out mov pop inc repnz mov (bad) divb cmp add jae jg xor jg push out inc mov loope pop mov rolb and inc jmp xchg (bad) hlt out jg cmp pop jg and sbb mov jg clc hlt mov jg out add sub add jb jg mov fs dec jg jmp xchg mov jns out les add lcall push pop rclb mov loopne jbe add rcrb mov cmp mov sbbl std jle loope xlat jg add sahf aas out nop aaa fiadd xor or inc xchg jg pop das xchg jae outsl ljmp (bad) mov cli mov lcall cltd inc ret and int3 sahf sub test fstps mov inc into jg movsb dec jae cwtl xor jg std movsl pop or push loope outsl cmp pop into inc mov dec jb call mov jne aas addr16 pop jg jnp mov inc (bad) dec xor rcrl cmp mov push adc aas jnp push jle shll jg in jmp mov xchg mov and sbb mov jg xchg adc push inc jg sub mov enter push mov xor pop clc punpckhwd and xchg cltd ljmp mov sbb xchg sub lret or ljmp call mov in jg sarb push loop mov mov add jl pop je ret repnz fs adc pusha ret std mov mov outsw cmc scas push push cmp jg mov dec mov lds test andb pop jnp mov (bad) pop push sub ss xchg push and xchg jbe xchg cmpl inc hlt ljmp cmc jmp fistpl scas inc outsb loop jg (bad) pusha or call outsl cmpsl adc pop jne lock lods sbb in jg dec mov mov dec push je xchg fadd jg std cmp sahf cmp jl ljmp mov pusha xchg jg stos and push loopne cmpl setg push data16 or lods je xor jmp scas adc outsl lahf out inc push jg mov mov arpl jno dec mov sbb bound repnz ljmp arpl dec pop scas push les je jg push hlt inc sub lods daa loope mov mov jg xchg sahf adc ss jg add mov sbb fs (bad) fnstsw push aam mov fimull ds repz xchg testl xchg outsb dec cmp jg mov call push das pop mov std sti dec xor adc pop pop jae jg or inc jo mov inc mulw jg int3 ret icebp jb sub jg ljmp jg mov ret enter jg ljmp jg mov sbb cld jg mov push sbb ds pop sub dec inc mov adc pop lds in scas xor fnstsw in jle cld outsl adc fldt cmp mov cs jns or pop imul aad inc jle popa jg mov and popf dec push ret outsl enter mov jg and inc repz aam fidivrl mov addr16 test jg (bad) gs mov mov push add imul (bad) mov push addr16 lcall jg jne ret jg test icebp int3 pop add lea adc or in pop jg inc or lods dec bound mov push push pop jmp sbb add mov pop inc mov hlt jne jecxz andb jle rep sbb push out sti mov or xorl jg out lods push xchg mov xor std push (bad) dec sarb lods out lret adcb cs aaa jle rcll popa push (bad) test push insl push scas mov lahf (bad) mov jmp fidivr lret add (bad) fdivrs sub jle jp sub or pop clc jg (bad) mov repz sti sahf adc imul scas sub add jmp nop clc arpl mov mov out inc mov adc mov xchg push sub rorb sarb add mov inc jg pop add mov (bad) sub push mov jg jmp out sub xor add xchg sbb nop jg jns dec pop mov hlt inc out into mov mov lcall (bad) fcmovbe stos mov out rclb and adc push std jg movsb stos sbb lds cld cmpsl shrl aad cmp pop cmpsb cmp (bad) movsb mov jg out lahf fist push loop jg subl call lods pop fdivs sub lock push fnstcw and shrl imul js dec out adc lods jg cld and mov aaa jge in xor lea cmp arpl push aas jmp cmpsl movb inc jecxz inc fwait sbb lcall xor mov imul xor je in xor fwait mov pop in repnz movsl int3 loope aam ds dec jecxz bound (bad) jg add sub sbb pop pop jg jae push jg sub push cmc mov xchg inc std push lea push xorl (bad) mov cli dec or xchg mov fldl2t pop lcall mov jg inc or adc jb jg xor cmpsb arpl jg lock jg cmp clc ret sbb jecxz pop test cmp mov sub cmpb clc push jno cmp pop cltd rcrl (bad) ljmp mov lret mov mov xchg mov (bad) add cwtl jns jg inc test lret aas (bad) jae pop push jg lds loope insb gs jp sbb inc jecxz push jnp sbbl (bad) inc xchg into sub in sub pop adc daa lahf jg mov inc and (bad) sbb add mov adc push outsl (bad) pop jg fs cmovns cmp insl in push jno outsl movsb bound jg ds mov push sahf add repnz cmp jg mov imul adc pop aaa xor push pop push jo mov fbstp or repz add xchg pop mov out data16 (bad) je mov test jg adc adc jg inc int3 push lret repnz jge push incb pop dec popf and pop sti sbb data16 fldt daa dec pushl push ret jne jl jg and loopne cli (bad) jno jg ljmp jb push or aad inc sarl lcall dec sub jl pop inc ret aaa push jg cli pop fwait adc movsl pop mov cmpsl or pop xor cmp or loope and jg jmp in jg sahf adc jg pop popa lret iret sti (bad) lds scas push addr16 and push sarb outsl adc jns scas jg movsl sub xor mov aam jg xlat jne fxch lret sbb adc ds pop inc (bad) mov jg jbe and jg mov outsl inc inc jmp jg mov or jg addr16 or mov jg xchg and (bad) lahf test jg mov mov mov leave jg fsub xor jne pop je mov mov mov rcr dec stc add lock cmpl and xchg push sub xchg aam jb outsb push jg jge cld inc int fdivrl iret mov push fistl icebp sub add cmp cwtl pop or sbb cmp mov xchg mov lcall jnp hlt add jg fldt inc mov pop stos std test clc pop push jge divb sub push (bad) cmc jns inc and sarl or aaa xchg lods cli xchg jg hlt push or stos test cmp lea cld pushf and pop xor ret aam movsl pop inc (bad) fs sbb lcall cmp into sti fwait xlat or inc xchg inc aad (bad) xor or mov inc push jno lock xchg insl lea movl jg jns pop inc outsl and mov cmc testl jg lcall negl out jne movsl cmp push adc push jo scas loop ja es bound int bound mov imul pushf mov mov (bad) adc mov jne fstpl mov sahf mov loope subl pop in lahf inc ret pop enter xor mov jnp or add ss sti push popa hlt fstl mov mov and mov daa push sbb idivl jp das sbb mov cmp cmc sbb test inc inc js arpl push test mov and mov sub insb cmp sahf sub xchg xchg mov fwait outsl pop push pop ret mov push mov scas jecxz divl cld sbb aaa jg aad sub insl cmpb ja and pushf cs add (bad) call and mov push (bad) xchg out mov jmp sub push sub mov cltd sub (bad) pop (bad) stos imul mov sub pop pop push mov jg cmp and pop jg in pusha fstl and cmp fistl addr16 cmp aas pop jno mov push dec dec outsl jg xchg add fsubp mov aaa dec pop xchg aad (bad) or add iret imul sub mov push cmp mov jg les dec (bad) jg dec jb rol fimul es pop dec and inc mov aam push push (bad) adc xlat les sbb popa xchg cmpsb dec mov fwait scas iret pop xchg jg and into repz add jg mov push jb mov cmp jg xchg pop adc dec inc in aas into addr16 add jg (bad) push popf or jg mov sub jg movsb js (bad) ja lods jg push mov xchg js cli xor dec test mov insb xchg jg sub sub adc cmp jg mov dec adc ret mov shr (bad) mov cmp jg pusha dec sbb inc xlat jg pop cmp je and cmp jle adc jg popf sbb jg cltd popa test adc dec mov sarl cmp mov jg dec push aam jae mov sub std and cld (bad) jg mov mov jp sahf pusha pop roll outsb or xchg je mov enter leave mov ret into cmp jg sbb dec sub sbb push mov add dec or lcall mov jg pop mov jae loopne inc jbe mov and dec mov mov jle inc pushf js dec push pop sub das fild fcmovb dec jg sbb cmp loope sti adc lods xchg jg lock cmpsb push sbb ljmp outsb jg dec out lret adc mov sti xchg in mov jg (bad) hlt push jae std fdivrl inc push push fbld ret nop jg in cmp or inc mov out dec movsl push iret mov mov aas lods and sbb dec jmp jo jg rcll inc jg cmp adcb stos std jg fs fwait leave push mov mov aas adc dec jmp sbb xor mov xchg cmpsl lods (bad) neg adc jg ds add inc clc mov arpl addb popa sub fidivr jmp (bad) icebp jg xor call xchg or sub mov jg lcall aas add ficom mov sti jnp and jg lods int3 out mov sbb mov jb mov mov jg in pop dec push push jg popa and jg adc dec push rorl out lret dec pop inc movsl aaa mov daa sbb mov jne out mov xchg jg rcr add xorb inc loop jecxz,pt insl sbb btcl ss xor stos jg or mov cmpl test daa pusha inc jg aad icebp popf jnp mov insb fwait and fucomp lods (bad) xchg jg mov int pushf mov inc call popa pusha inc subl iret loop imul and jg fwait mov cltd std lahf xchg jg mov mov or sbbl and pushf cmp dec jle push add mov push int test xchg fnstenv stc mov inc stos aad call int mov pop rorl mov xchg iret sbb in mov sub cmp fs cmp jbe sub inc fldenv xchg jg push scas xlat xorl sbb pop adc out stos pop jg pop sahf pop mov incb in mov adc inc dec inc sti jg pop adc ficoml mov xchg arpl jg mov sarb popa xor jg cwtl ljmp hlt adc dec bnd jg data16 mov pop mov and aas flds or jle lock insb pop andb mov mov add lahf dec roll or scas and and pop sbb push lahf ss dec or mov aas mov pushf arpl add inc ss cmc or aas jg divb arpl mov in fcompl out or jg es push mov cmp adc lret push out add sub (bad) fs std inc nop pop jo dec in xor mov dec xorl pop inc jg sti lcall and pop add jg lods push ss xor cmp mov sahf repnz and inc inc ds scas es sti jge mov push out gs or mov jbe inc sub xchg mov pop add sbb inc sub jg mov out pop jg adc (bad) mov sbb pop mov pop dec pop jne mov or mov aaa mov bound xlat nop lahf cmpsl jo mov mov inc xchg push dec sbb lock mov sub (bad) bound jg pop js fisttpl xor xor ret xchg out scas cmp xchg pusha inc daa call jg idivl mov jg xor (bad) pop ret (bad) fnstsw jnp dec pusha popf mov jg gs notl push push jg sar or sbb and jg inc xchg cwtl pop jnp push sti adc test or mov pop in and xchg dec in push add mov popf in cmp aas push xor dec cmp mov dec pop sub xchg clc repz shlb xchg lds mov add xor fsubl xchg xchg out insb jle push into dec (bad) dec mov lock les loopne sahf lret mov push pop xor dec mov and push jp jg pop jne xacquire or fdivrl out loop pop mov pop call jg shrl add in jp mov adc sub scas loopne mov in (bad) inc or jg mov dec data16 cs (bad) dec inc aam addr16 jg insb push mov enter (bad) call arpl mov jg jne ds adc mov cltd pop in pop insb mov adc mov push (bad) sub pop inc push imul dec adc sahf jns xchg fisubr mov xchg lods orl addr16 jg xchg adc mov add mov (bad) lretw repnz cs inc mov xor mov fistl adc jb nop (bad) cmp dec hlt popf pop dec jg adc jmp repz in cltd mov push adc movsl ja test out or xor adc pop pop nop mov aas fisubrl pop mov mov adc stos mov dec shrb mov jge push mov xorps aas push lods jg xor adc enter cmp mov xlat push jg pop xor or daa jno and pop or jg sub jg loopne push add jg push enter cs mov out cmp mov (bad) ds xchg or fisttpl insb jg push out enter aas aas je outsl ss cld dec inc xchg mov push daa xchg aas dec adc popa cltd dec sar add fstl inc es and dec lds jg jbe adc fidiv jg xor rcrb imul out mov and pop loopne sub hlt mov es jg dec cli sub pusha mov cmp xor out mov jo inc mov arpl dec jl and mov rolb jg sbb (bad) xchg jle jg dec jmp and sub pop clc jb stos mov sarl fs jmp push push lcall cmpsb xor and (bad) xor (bad) arpl lods jg (bad) clc test inc sub or xchg inc push push aas add int3 sbb call mov inc testl push mov fsincos jno cmp inc jo push pop sbb jae inc cmp jmp movsl jo jg jp xor jg sub adc mov jg jns pop fildl sub add cmpl lods cmp xor mov xor cmp popf jno arpl vmovdqu sarl push jg add push orb mov jg or push loop mov sbb pop push aas gs mov icebp rcrl push inc mov gs xor test cwtl mov out jb lea xor loop jg mov or das mov (bad) mov ja clc ja mov dec in mov or xor stc iret mov mov andb sub mov sbb mov xor pop leave adc (bad) xchg sub and mov or push jae in nop sarl dec aas andb dec pop fidivl pop ds jg out mov enter rclb sbb je jo ss jg mov (bad) push mov sbb jg int3 stos or fwait insb add jg jno cmp sbb test ret pusha (bad) mov jg data16 push inc ds or and loopne lahf jg icebp jno movsl call out push sbb aad cmc fwait mov adc mov push es aas dec pop int3 iret test or and in jbe test lds sahf xchg std jg cwtl jb push xor jg dec jns xchg mov xlat enter xchg jg (bad) mov mov push mov aam cmp jg (bad) and icebp enter sarb call cmp out dec (bad) fildll aaa aam jg lea insl mov sahf push push push fdivrs mov pop cmp imul fcoml mov hlt push jg jl in scas (bad) pop and push lahf mov test pop xchg repz cmp stos jg gs sub xor mov jno cmp out sub mov jg pop jns and or mov fiadd jg (bad) mov mov bound mov dec fidivrl pop xlat pop sbb or imul and push xchg imul inc mov js pushw dec insb pop add cmpb aaa popf add jnp mov bound lock jg cld aad rclb cltd icebp pop add sahf std pop dec out and xor sbb cs addr16 jmp xchg stos aaa jecxz (bad) xchg inc cli or aaa movsl xor jg jae aas sub pushf aad add dec mov mov mov int3 test in adc xchg mov jl inc adc stos mov mov xchg nop aam aaa test sarl scas ficomp dec mov (bad) test pop mov sbb sahf jg jns rcrl aam shll mov (bad) (bad) loop mov popf xor pop and sub dec clc pushf rorb and je mov test inc insb aas xor xchg adc lret jno (bad) lahf sub loope test fldcw push jg push arpl cmpsb or fwait and xchg mov (bad) xor data16 pop and negb push lahf jg in lea orl sarb xchg loop out xchg cmpsl jg mov data16 pushf push cmp outsl out fs mov cmp aas mov lcall jg test stos jg mov movsl mov inc xor push mov jg mov insb jle xchg ljmp or (bad) fs pop data16 mov jg jecxz,pt aaa pop daa pop imul sbb cmp (bad) push sub add js mov pop cmp or xor inc cmpsb or rcrb fwait jno test lea jp lock dec mov add stos les jg mov jg lcall jg test pop inc dec push mov inc loop xor xchg pop mov outsl xchg (bad) imul pop push loopne mov pushf dec movsl xchg add jg jnp fist sbb jg into sub push jg mov sti mov pop push scas sbb push cmp mov loope mov lahf imul sahf jp push (bad) sub aaa mov gs inc dec jg sub imul inc jnp sti sarl fistpl fdivr pop fnstenv mov sub jmp in pop and nop mov jg mov push cmp les inc fsubrs pop mov push lahf cmp out fmul jg xchg push mov mov inc xchg jbe js int rcrb mov rcrl ds data16 push add mov jne add jg lahf mov inc jg in (bad) jecxz sub pop pop sti pop fisubrl cwtl clc adc push addr16 imul nop mov das loopne mov movsl adc push lahf inc (bad) lods dec js test mov je and push inc jns xor xchg sub and imul je repnz out test lock arpl jo fsts sub mov test sub inc sbb loopne mov jne jg (bad) test adc jo and pop jle sbb cld lock jl call dec dec and sub ret jle and mov mov dec cmp sti out push stc jne adc addr16 ret jg stos xchg mov rorl loope mov sbb xor mov xlat inc xor cltd (bad) test jg mov pop xor jae (bad) jbe leave and dec in mov clc jo popa jg sub outsl mov cmpl xlat imul inc (bad) je cmpl lret (bad) leave cmp push jg mov mov xor cmp jge sbb vmovdqu xor cmpsb mov mov (bad) pop mov mov fiaddl psubsw jg fiadd lahf pop les cld push push outsl std and jmp mov sbb aas add aas sbb psubq or loope mov push jp cmp inc (bad) mov jg repnz mov and (bad) jg ja mov push into inc fildl iret outsl lret jns imul cwtl mov jg xor push push jnp mov mov je addr16 inc pop lock imul div push jg inc jmp mov inc xor mov pop mov jg jne aad insb push lret adc xlat jmp jg and dec loop or cmp test les xchg stos cs jnp xchg xor jg loop jbe mov cmp scas aam adc mov aas gs mov inc sub jg imul xchg mov adc adc mov stc jnp add cld cmp or sub popa outsl push dec in aam cwtl test outsl mov and aas into cld mov jg adc cmp dec and sbb or lcall scas mov and (bad) jle jp inc imul jae scas sbbl ret xchg jg sub je mov cld sahf add test jg jnp addl cmp jns xor jg push aas pop dec test arpl pop adc cmp dec pushf decl (bad) (bad) hlt push bsf mov lea out ds xlat sub and inc and inc imul adc mov cld jg cmc fsubr ret insb int xor mov add and jmp pushw add mov fwait push aas mov jb xchg cwtl arpl jg mov bound dec lret (bad) dec pushf lods mov out mov loopne mov popf jle jg cmp fsubrs add ss cltd stos fwait cmpsb fadd push div cld sub mov mov aad rclb ds fimul mov inc arpl jg mov sbb subb dec cmc adc jbe aam sub js shrl add stos dec popf out cmp es mov jbe xor mov adc fdivrp sub loop jg cwtl in scas out mov jg dec daa mov sbb imul fnstcw sbb test add cmp add sarl mov xchg sub (bad) out insl sahf dec jno fnstsw je loopne cld sbb xor out add or jo mov mov test and (bad) jg enter (bad) sahf cmpb flds jns jg adc negl jg mov pop into jg cmp fwait bound sub ljmp inc inc sub pop jmp repz roll jae,pn jg scas cmpsb jns movb dec inc sub and mov movq fistl cs js sbb lea mov or pop cmp les jae (bad) out lock cmp shl dec cli sti jg dec add or leave mov out jg and mov js adc jg lods fistpll dec jg nop fsts aam lods jg mov push pop cmp ja aad lds rcr xchg fbstp jns jg add sti xor faddl call inc repnz je lea fcmovnb fstps inc popa push aaa lcall mov cmc mov mov inc aas test jg jg dec leave mov mov outsb jg mov ja (bad) jb jg pop fiaddl aas das push int3 aaa jge dec or pop pop aam mov or scas jecxz pusha cmpsb push mov inc mov jg xchg js and mov gs jecxz dec pop jg loope sub jp xchg dec jg es xor int addr16 sub dec mov popl dec add cmpb and jg jnp fistpl jae scas jbe jg xlat xchg (bad) rorb repz mov inc mov lret outsl aas jbe cmp sahf mov (bad) inc jae jg das xchg pop pop insl daa mov outsl stc jg cmc ret dec jp out xchg negl pop jle ret push mov mov clc dec fmuls mov ds (bad) adc inc jg pop popa pop sbb pop std cmp lret gs addb in mov idivl js (bad) in add jg push add insb adc into inc scas decl jg nop rcrl fidivrl xlat jo ds mov adc (bad) sarb add leave sbb mov stos push xor movsb and mov (bad) sub inc xchg lahf pop push mov cmp pop stc outsb mull aas cmp dec jl or test (bad) add push ror dec fsubrs sete jne nop add sub outsl stos add outsb fsubs je test jg inc and fildl jp inc popf adc sub cmc (bad) sub jg xchg inc in into or into push das test dec xchg outsb jg hlt mov aas sub jbe loopne shrl xor cmp bound dec cmpsl out mov jg sbb jns in jecxz int lret in out jp mov pop jl fdivrl jbe cmpl jo inc push cmp mov outsl and or ret sub jg jmp sbb ja sub mov fnstsw mov add push inc jge push repnz xchg bound jno ror pop jnp mov ja pop xor (bad) scas jl sbbl loopne test adc xor adc mov popa mov mov out fisttp or inc std sub push inc cmpl ficomp dec js jg cmp jle inc fistpll ja xchg inc imull jg (bad) lods mov ret sbb mov mov jl pop inc ret or xchg mov (bad) fcoml mov or repnz mov cmpsb sti cmpsl and pop outsb mov mov or jb jbe push test jg cmp aaa lcall loopne sbb and jg mov sub mov pop jg mov jmp cmp inc cmp icebp popa jg ss int mov hlt fs xor xchg cmp xchg lock dec out ds jg sbb mov popa xlat xchg jg (bad) sarb sub sti cli and cmpsl es lcall (bad) test jg xchg and jg stos mov addr16 push mov inc cmc pop pop jbe jmp imul stc jg cmp (bad) jne fdivrl ds inc imul (bad) xor in jg cld add xor sub lcall add ss fidivrl mov jns fdivrs aaa or ror jb jg push sti mov jg fcompl dec jg adc fidivr popa js fimull add jl outsb push adc pop out lea push pop jg sbb movsl jg jae adc test xor daa sbb or jg pop popf xchg add (bad) cld jne jbe out adc inc scas push pop mov mov movsb jae ret jg or loopne push cld cli test (bad) jg jp xor jg call mov cmpsl jno repnz cld jg sahf aaa ret pop pop lcall aas push or dec mov insl adc imul loopne test and xor adc xor inc stos fwait jg (bad) dec (bad) std dec cmp lods sti push xor (bad) mov mov test leave jg out stos dec std inc movsl jg pop and or push aad cltd jg movsl or clc ljmp ret andb dec mov push fmulp rorl leave pop jg mov fadds mov popa cli lret fimul mov repnz pop dec mov jg or cmpsb mov cmp sbb jp je inc aam pop jmp lods aaa jecxz xor inc jg fmull lock loopne aas cmp cmp imulb mov out xchg pop repnz or jecxz lahf mov and mov popf cmpsb fs add or scas inc aad test inc mov cmp pop daa nop xchg push test mov inc sarl jg sub fdivl xchg sub jg es xchg loop xor (bad) mov das (bad) bound cmovs mulb aas mov shrb mov lods and (bad) push sbb jns loope shrb mov lcall sbb aam mov push jg mov or ds push jg push int3 iret xor ret cmpsb xor sbb inc pop in mov sub rcrl nop pop cltd in inc jg imul mov arpl push sbb movsl dec jae mov jmp xrelease dec xchg inc mov jg inc mov push mov rorl ljmp stc popa inc aas xor arpl add jg mov lretw test out (bad) insl imul rorb jg mov dec jg cmovae ja pop fistp outsl adc repnz sbb push adc lahf adc mov or pop sahf mov jg fdivs mov scas dec and xchg dec or cld (bad) pop bound and into xor mov mov jg cli cwtl lock push jg (bad) add fstpt pop push sub dec loop loopne (bad) outsl mov dec mov jg rorl push cmp mov mov and jg jl dec mov leave pop (bad) add cmp (bad) jae dec or jg or subb rclb push (bad) xchg mov xchg jo popl add cmp fidivl xor mov dec jg in xchg dec in and sub jns inc in daa loope hlt jg out and pop jl add pop mov incb dec xor push test sbb jg sub scas mov xchg incl dec jg jae ja fnop adc out or (bad) or fstpl pop xchg mov and sub dec pop call adc int pop lahf xorl xchg dec je cvtps2pd jge std (bad) je mov rcll jg lods (bad) imul es adc push push lds lods mov cmc shl (bad) iret ss sbb sub (bad) in sbb fwait cld inc cli into loope sub lods (bad) xor xchg cli mov insl jg push loopne and jg xchg bound cmp xchg pop jl mov cmp jmp jae je fisttpll mov lea mov fdivrs mov ja hlt jnp sahf dec sub sbb loopne mov icebp rorb jnp mov int imul mov enter jbe jg lock pop xor and cli lcall mov inc pop adc xor pop add aad jg dec mov cmpxchg push imul insl xor clc popa out stos cmp mov mov scas or inc pop gs xlat in mov int push aas pop and inc mov (bad) (bad) or cmp xor lret jg cmp lcall and pop adc dec inc mov sub loop mov xchg stc pop cmp decb push pop push inc inc ret hlt lock ficompl and fbstp sbb pushw inc fnstcw sub (bad) movq pop mov jg mov adc sbb sub cli jg mov or fs mov adc jecxz iret fldl2e jg jmp sbb jl cmp inc int or imul dec repz jge test in pop enter jg insl daa or cli repnz mov fstpl inc loop cmc jle xchg data16 jnp clc inc or leave jg cmp push fidivl fwait mov aad ds std jg pop fs mov (bad) mov inc xor cmpsl jg iret out insb dec cmp cmp addr16 and pop jo xor int3 pushf add pop mov pop push cmpsb jo imul jae jg inc popf (bad) jno test jo scas push mov adc push and mov shrl aaa aas data16 fdivrl and xchg ja push cmc sbb aas push test aas cs ja iret cmp pop mov add pop daa lret pop add decl pusha xchg out mov sub and lea les cmp xor mov xchg jg cmp dec loop aaa sub and pop xchg jg mov mov jg imul jl sub xchg and push cmpl into clc mov mov adc cmpsb or pop xchg lcall adc push cmp stc adc jg or (bad) idivb lahf sbb fst mov inc pop xor and aad int mov inc mov add fwait xlat mov and sahf dec fisttp xor push les ret inc inc push jg out aad lds xor jg scas (bad) imul xor inc movsb lret mov (bad) mov enter xchg push jg fwait bound mov and push jae sarb ja cli push jle out call sbb pop xchg std idivl mov pushf into jg fiaddl sbb sbb inc push jo or mov cld repnz pop mov jg testl jg (bad) xchg cmp lods imul sub xchg fistpll (bad) outsl jp fdivl mov and clc aas or lods inc cli das jg shlb out pop mov addr16 outsl push loop sbb pop sbb xor dec xor jge cmp add js jg int3 fs and cmpsb push pop sbb pusha aam jg rclb je mov pop fwait pop and cltd sub and mov cmp jg jno aam divb stos addr16 loopne or add xor and (bad) jnp iret cltd clc inc pop inc js push jmp jg fdivl rolb aas inc and cli ret fistpll and rorb dec cmc movsb (bad) inc stos dec aas xchg out jg pop leave pop xor bnd pop int3 xchg out push add mov xor ret ds add add (bad) mov fisubrl jg outsb cltd ss add test add test xlat dec in test aad js and std jg inc popf sub ss or adc push pop call sbb xchg fs push sub mov test stc mov ret lods xchg jg cmp repnz dec frstor in cmpxchg test mov jg cld dec popf push pop nop ret aam add xor das push mov or sub jg bound jg sub push xchg (bad) (bad) lock xchg push or sarb int3 push addr16 (bad) jo dec pop xlat xchg cli rcll push (bad) mov jge movsl cmpsl std into xchg sarl cmp mov pop arpl jg dec sbb inc mov jg mov ljmp testl mov je bound imul test cmpsb in and push ret jns out sub lods pop daa inc insb sti mov ret enter adc xlat push mov jno sub jnp sbb jmp mov xor pop push testb cmp ss xchg pop pushf and jb stc fildl shlb jmp repz sub rcrb sub adc xor jg mov lahf cld jg mov sub jb es pop fwait push fwait mov (bad) aas push icebp test inc and test stc push call inc sbb fisttpll mov jg cltd add lret loopne jg pop (bad) pop jge jg mov jl pop add jg mov dec and jg enter mov std sti sub setge jg mov jnp cmp xorl in cmp cmp sbb insl fucomp xchg daa scas ja bound loope inc sbb xor lods cs sbb xchg inc push mov jnp push xchg dec mov cmc (bad) shrb push mov inc loope cwtl stos outsl mov jg push mov sub mov inc in dec negl arpl jg jne jns clc add jo xor out sti jno inc idivb pop cmpw shr ja sub mov and sub dec mov hlt aaa jg in loop or fnstsw inc lods mov xor jmp fsubrl stos addr16 int pop mov insl xchg cmpsl jp std mov loop jg and dec xchg sub inc enter (bad) or movsl or and js mov imul js ss jnp xor pop inc shll dec bound hlt ror pop cmovno push dec adcl test adc movl test lock dec jg scas add jns pop jns imul push dec xchg pusha (bad) cmpsl sub es test dec dec mov mov (bad) sahf jg dec lahf xor lea pusha sarl and loopne jg push test jg push xchg insl or leave sahf mov push ljmp test jg loop sub fadds mov ja add sub mov cs std cmp inc add xor fneni(8087 pushf call and xchg ret jg jb mov jbe cmp push xchg lahf in aad jg mov cld sbb inc fdivr lock xor push sub lods inc js mov maskmovq testl (bad) and leave (bad) sub mov xlat mov cmp and fsubs xor pop mov gs fnstenv xor jae (bad) xor jg push or mov ja xchg xchg sahf mov push adc sbb dec in cltd pop mov pop adc testl inc jge in hlt outsl int mov ficompl ss jg ret test jg xchg jg jae fisub adc jg push mov gs mov sub and push jg ret mov test mov mov add aaa pop jecxz arpl ja push push cmpsl daa lcall cmp stos mov jge sbb jg out mov cltd data16 mov push aas and jns inc mov cmp and loopne dec (bad) mov xor inc fnstcw inc or js cmpps outsl sub jle or inc pop in rcrl dec roll mov push test xchg mov jg out mov je (bad) pop (bad) outsb lcall mov mov out mov jg imul jns fidivrl xchg mov jnp xchg fs add and jg loop loopne lahf sub mov pop movsl and xlat loope inc repz sbb aad mov aaa fimull xor sub mov in dec (bad) dec (bad) mov lret push push jnp jg and jne adc (bad) push jns loopne,pn outsl (bad) jo jg xlat (bad) leave push xor jg lea movsb jg pop push outsb lock rcrl or inc jo cltd dec mov jg iret adc adc mov mov jae jg xchg rcrb push mov pop inc imul mov jl pop xchg icebp add jg testb jg or pop cmpxchg cmpl repz lods lret inc fs daa call add stos mov gs mov mov cmc xlat arpl sub jb pop jns inc loopne lds mov nop pop xchg js insb mov jg dec lock popa mov inc pop add imul fsubr icebp (bad) cmpsl pushf sti es xor adc mov scas mov fstpt add divl push lods mov enter int sub pop jg push adc shrb cmp pop pop (bad) push inc dec test outsl mov mov popf (bad) mov jmp xchg dec push sub dec mov mov inc in int3 into pusha add mov outsl sbb pop add push inc into and xor push mov shlb fadds jg leave std mov mov jmp push and sub pop rolb dec lea mov xchg mov in jg xor dec test stos push jg imul push test jg fucomp fs or lods xor mov mov shrb lahf mov or test arpl mov imul dec aas dec ja in mov jg sbb push (bad) sbb mov and mov inc arpl enter rclb (bad) or imul push sbbl push cmc sub fistpll test inc sahf cmp pop adc sub arpl ds je call mov lahf in mov push mov loope pop push dec mov inc cli jg push and dec add and jg sti pop cmp rcr shrb aam xchg xlat mov js jg xchg mov lret data16 scas inc pushf sbb sub (bad) jg or mov sub adc mov adc pop push out jo xchg jg mov and mov xor test pushf jg cwtl fwait test jg (bad) call adc jno sahf idivb xchg inc cld dec jg xor and cmpsb test lcall js pop ja loop fsubp call mov pop pop seta jmp push dec mov ret out mov les jmp adc cmc jns jg jb (bad) fldl fdivr iret xor mov idivl inc cmp outsl lret jg fnsave inc pop shrl and stos push sbb adc leave lret ds scas jge xor jg (bad) shrl (bad) aas aad cmp jmp xchg incb xchg fisubr mov adc pop mov shrb push dec and xchg xchg and sub xchg arpl outsb jg cmp lret mov inc jg mov jp push adc gs in daa jbe mov push xchg inc adc cmp mov (bad) jns mov subb lock nop mov and sbb jns pop imul fiadd mov sub jg hlt push mov jg mov inc (bad) mov lcall xchg jg in sbb xor icebp dec inc cld jg mov (bad) out sti inc jg stc jne push mov jg sub ljmp xchg cld fcmovnb idivb inc adc sbb sarb push imul and (bad) js dec xor test or xchg mov dec xor mov sub addr16 push pusha cltd jg out andl or jg (bad) dec lock or jg sbb hlt sbb out jbe pop push mov or mov dec sti mov pop mov mov inc jmp xor in jb push mov push outsl imul je dec sarb mov push dec xor sbb sarb lods (bad) pop and outsl std jle rorb push pop test or in sub xor inc lds int and decl jg (bad) leave add jbe xchg out jg imul pop cwtl mov sub xor jl mov lret mov scas jae (bad) (bad) xor cltd mov jg (bad) xor jg inc xchg push mov cmp lret xchg roll out push out rorb push and mov test jg add jne adc fdivs mov rorl pop scas aas sbb jmp and sub fsubl cmc fistp mov mov jg hlt ret xor jg outsb mov (bad) aas push and xor adc arpl movl (bad) cmp add jmp sarl popf mov xchg inc dec or insl jns mov adc xchg subl cmc mov add mov jg subl imul pop lret mov (bad) pop push inc test daa fwait adc out loop les jnp lahf sbb mov aaa dec roll xchg mov xchg sbb mov jne and out fildll mov sub mov jg mov xchg testb mov push adc sarb xchg add lock push inc ret das jg loopne sti jge imul shrl imul sarb aas pop loop or popf sti push leave or (bad) dec push sbb xchg mov cmp repnz pop mov pop jp adc jg (bad) pop std fs adc sub sub xchg outsb out cmp lods mov (bad) pop std jnp jo jg andl push mov inc xor fisub aam jno jo gs mov adc cltd movsl push aas and or pop jg inc mov sbb movsb movsl ss dec fnstcw push and cmp ror outsl add pop fldenv mov adc pop pusha aad addr16 les cmpsl xchg fstenv testb add push mov dec xchg mov sub jg mov pusha sbb inc lds insl sarb dec (bad) xor pop lcall sbb sub outsb pusha icebp les gs mov (bad) push mov jbe fwait scas mov dec lret and subb push icebp aas nop and pushf rorl jg (bad) loopne hlt bound loop jg cmp inc mov cwtl jg xor cmc jnp fildl pop fnstsw (bad) jg sbb pop sbb mov fsubr sub cmp xor in (bad) mov ficoml jle pop call sub jl int3 dec sub inc enter dec shlb inc mov movsl and cltd out (bad) int3 mov js xchg test fdivrp mov popa jg outsb pop mov and pop push pop cld push jg cwtl in out jne xchg jg orl fcompl leave imul push mull push push decb push (bad) lahf mov movsl aad or mov mov fnsave scas mov inc cmp (bad) (bad) loope xor dec jmp jg sub call cmp push jg xor jg jmp cli nop inc gs mov in aas sbb dec push inc lret imul in push sbb mov cltd jg lcall stc jg rcll (bad) lock adc cmp mov sub and jb and and mov cmp sub jp nop push adc dec aam mov movsl cld pop fcom inc xchg dec jg push (bad) lds xor sarl inc in (bad) arpl push cmpsl leave lret repz sub sbb jg push into sub rcrl jg sbb dec mov pop imul push xchg scas fisttpl mov loopne sub or cmp leave pop std cmp jg adc push adc in cmp jg pop insl insb cmp dec dec popf mov jg leave jae cli in sbb cltd cmp jg outsl jge push ds dec sbb aaa fistpll call mov test xchg mov jns mov xchg lcall jg out movsl dec je jge jno shrl movsb sahf or dec mov cmp js mov out mov insl dec inc push sti push cmc mov les sti jno addr16 and repz into inc and outsl mov push stc xor jg call xchg or and inc pop mov mov and dec inc imul sbb push aad movsl (bad) je out outsb bnd sub add jg sbb adc int (bad) out movsb lcall sbb jg cmp in insb das scas jle je add sub jg ljmp sbb adc (bad) outsl mov xchg xchg jbe jg push cmp and mov pop cmp ret sub popf ja cmpsl mov jg and pusha (bad) dec jg adc (bad) xor inc dec jg pop cmp call mov out cltd int out push hlt inc sbb add xorb inc lret sahf (bad) mov push out jb add push movsl cmpsb mov jg cmp outsb scas arpl (bad) xor dec lea sub repnz push jg and adc push cmp sbb nop mov in lret mov jno imul out aad lock dec cmpsb sarb cltd test push jl jg std inc jecxz xchg mov lahf movsb sti fimull mov aas xchg push mov jecxz jg iret cmpsl pop adc mov xchg lds out add sub cmpsb jg cltd push (bad) jg inc adcl xchg and (bad) rclb pop jg mov mov inc push xor dec in xor sbb xor jg int3 add popa xchg pop mov mov sbb popf iret adc inc pop inc mov pop cmp out pop push mov jno test xchg jg pusha pop xlat (bad) jecxz ret cltd push jae jmp jg push aad lods push cwtl push jg sbb cmp mov xchg jg hlt jp jns fisttp inc xor ret lods jg mov pop popa xor mov lahf jns jg sub out and and js pop addr16 arpl mov aaa daa jg adc push repz or arpl push jmp in mov cltd (bad) sbb jnp inc daa (bad) lds and outsl jg lds dec xchg xor outsb cli into stos push xor jg xchg int3 lods insb pop push jmp pop mov divb ds call xchg out add or popa insl sarl sub mov aas jle mov push je ja jmp shlb sti mov es outsl add xchg sbb in (bad) jae push jg clc repnz pop dec sub sbb inc out mov gs jp and push jge ss jg mov jne jg pop adc adc xchg xchg push and xor or rclb xor arpl xor pop push push repz dec in dec jg cltd fsubl mov push mov push movsl mov pop mov mov js xchg mov outsl incl pop lods call xlat imull cmp xchg data16 movsb (bad) sar or dec jg aad insb aam ljmp pop das int dec cs pushf dec push and mov dec jp inc addr16 cli push mov xchg jnp mov imul inc jb and push xchg jg mov mov aas nop iret jne xchg pop roll in inc aam sbb dec inc pop jg jecxz sbb mov mov ja and fst inc push out sub sbb cmp clc sub mov dec sub ss test pop xor mov dec out mov out xorb repnz push jg or fstpt dec cmp pop aam iret aas call scas or inc inc mov jg xchg xchg ret mov fild aam xor jno arpl jg in fldl sub js jae pop pop push dec mov sub cltd inc inc mov push test jg repz stos clc inc inc jg dec add insl in adc arpl adc popf and fldcw dec ds lret (bad) gs lods jg out push dec rorb divl subb dec lds (bad) jno cmp (bad) sbb outsb rcrb and jg cs fldt jg in inc cld scas pop pop jg mov les adc jg adc stc push in (bad) jg mov sub int3 jecxz mov and inc mov jbe cs cmp cmpsb inc cmpsl jb sub dec mov mov inc mov cmp sbb sbb (bad) je cmp mov fwait daa mov iret mov arpl int into adc lea push xor daa pop xchg mov mov repz pushl mov int xor fwait push jg aam and sub cmp and cmp inc (bad) sub inc xchg cmpsl es repnz xor mov mov jg daa (bad) test mov mulb sahf aas repz cmp cmp outsb sub lock inc xchg jg sbb sbb adc sarb fsub inc (bad) jecxz mov (bad) stc mov nop and mov jg out mov mov out mov jg inc fstl push sbbl rolb xor jg sbb jmp mov cli push jge lea jg imul jg jl subl js pop jae xchg in pop jg push cmp lcall aad mov inc test js fmul ja push addr16 pop insb mov pop jmp pop (bad) push aas nop xor mov lock mov leave mov popf sub cmp adc push aas int nop push pop incb je or sub sbb fwait push jg es mov aad jg stos scas (bad) fs or dec in jg divb inc xor add push xor mov fwait xchg movsl fsubr mov jg test sarl pop xor clc fstpt (bad) xchg mov inc mov xor fld ja jg adc adc inc add pop and int cmpsl xor pop add addr16 daa cmp sarb ja cld insl push mov gs into adc loope fdiv lret jno insb or jg sarb in fs ss adc add movsb xor pop mov shlb xchg jns int loop jg pop movb sub imul or out int movsb jg loope xchg faddl sbb dec xchg mov js dec scas out les mov clc fsubrs jo add insl call rcrb cmp (bad) cmpsb mov push popf out pop jg pusha sahf and mov fldl mov outsl adc jmp loope mov cmp into or idivl cmp jg repz stc fsubl lock xchg movsl hlt pop aam xor inc pop pop cmp test inc dec jg aaa test jg adc in mov jmp movq dec adc cmpsl or jg pop or mov fidiv popf scas arpl stc and jg sbb mov and jg (bad) mov xor xor mov sub mov movq mov mov int3 sbb in dec lods sub leave jmp pop cli jbe inc fdivrl xor out cmpsb aas mov ja dec (bad) jg cmp mov jg inc or mov ljmp sub ret enter push cmp call cmp (bad) shrb jne fnstenv mov aad out dec ret sub addr16 sbb aas and xor aas je push adc mov dec fist adc out dec and cmp inc aas mov or dec into outsl mov test mov push sub xor jg ja (bad) movsl add lds outsl cld jae je xchg movsb rolb in out lahf inc mov imul sarl ret fst mov pop fistpl or daa out (bad) mov pop imul and push out sbb mov (bad) jg xor cmp fdivrl sbb pop jbe dec test pop push push mov cmp pop in mov outsl sub es push popa aas dec mov inc push sbb out movsb xchg jg ret adcl aas outsl addb inc sub lahf push loop rol in aas icebp jne js xchg les cmp dec jnp jo mov mov mov sub pop lock fwait mov add adc jbe inc adc scas adc xchg dec idiv outsl sub mov out mov inc sti adc outsb jae pop xchg das cmc jg imul stos les sub ds and aas dec mov repnz inc xchg add lea jl mov mov cwtl mov pusha arpl or fiadd jg mov or sbb pop imul jle lods cmc and lahf lcall arpl test jge jo in les or cmp inc add sbb jg outsl mov add xchg jg out int jnp mov cmp imul sahf loopne js imull out imul int3 mov stos bound dec sbb (bad) aas jb and xor ret aas aam cmc shlb lret dec jne stos (bad) je pop adc jg mov loop pop (bad) jg fs and pop lret jg pushf out mov ret ja lock or in xor js mov mov ret lea push sti ss mov je movsb outsl pop jmp mov or rcrb inc imul or inc jg loop mov into xor push out shll mov jge add dec loopne add push jne fldcw push inc mov cmp mov mov jno sbb mov push push pop mov jg clc adc mov xor xor jecxz jne sub out lock sbb ss jg lea (bad) xchg out arpl push jg add mov jg jmp pop adc sub cmc arpl mov frstpm(287 aas (bad) pop push mov (bad) xor dec push push push xorl jg push mov mov cmp jg ficoml jl push lahf ret mov movb shrl pop imul lcall stc int jecxz je xchg test sub adc scas mov jp push add pop fwait lret dec popa sti repnz (bad) xchg mov fs mov mov inc mov out fisttpll repz loope in out sbb fwait jmp movsb mov sbb js dec je jnp aad mov add mov sub pop jne (bad) xor cmpsl das jg sahf xchg inc test lds jg ficomp xor jne push cmp jl cmc stos nop push sarb mov data16 cmovg loop iret mov inc ror fiaddl jg mov jb aas movsb je pop dec push inc std xchg aas out pop imul lahf jnp cmp cwtl (bad) mov lret sub ja mov cmp xlat leave mov les dec xchg gs mov cld dec pop pop and xchg jns cs add (bad) loopne ss addl enter push rorl push adc sbb jg sbb push imul lock sub sbb mov in mov lea jg notl xor mov mov repz mov imul jg ss jno sarb test imul xchg jmp inc jg jno outsb lods mov mov dec fiadd jnp mov hlt arpl and xor jp pop incb jbe xchg repnz imul lods fbld push cmpsl test cli les pop pusha mov (bad) push mov divl jae les pop andb pop fcompl jg testb repz ss cmp test adc xor mov jg adc adc sti clc repnz jge sbb rolb mov in dec in jae cmp jg icebp dec inc pop xchg outsl ret lods pushf inc or in inc mov loop inc xchg mov pop xor pop or pusha pop aas cmp fsubp cli mov push sub jle fildl lds push or stos sbb mov sarl sbb jl (bad) iret movsl jg add aad rorl xchg lea or test std sub loop jo nop pop pop mov xor aaa sub (bad) cmc sub in test fs es jg (bad) jnp out mov fild dec xor push pop aam arpl jg in or jg jae (bad) cld shll jg add xchg sub xchg hlt (bad) pop lcall aas (bad) jg sbb pop sbb lret xchg xchg push dec dec cmpl jg jne sub lods nop dec test jg dec pop mov aaa mov jg cmp inc jg and xlat inc mov cld inc jb repnz mov cmp ljmp cmp aad cmpsb pcmpeqb mov sti aas repz ljmp jg scas mov push ljmp repz sbb push jo out daa jg enter sbb std negl inc pop mov adc mov mov inc jg xchg loop jo ds jg add cmp xchg in add jg mov and dec mov xchg ficompl daa enter movups add mov loope add jg,pt in stos fucom mov sbb fstps sub cmp mov jecxz or outsb int sub jg inc cmp (bad) adc jg fistp mov jbe push aas lahf mov dec mov pusha push cmpsl repz cmp or stos test add pop adc lret xchg jg rep mov sbb jg push arpl sti mov cli aas hlt xor inc xchg add push cld dec cwtl pop inc add arpl jg (bad) inc sub adc fdivr and cmpb lds xchg mulb arpl jg sub fdivrs push cmc (bad) dec fwait jmp push jle pop cmp aaa addr16 out xor aas mov cld cmp pop dec mov mov sub or push out push push sbb adc pop mov lods in mov sar ss repz les jmp ljmp sarl in das dec push cmpw lods leave andl inc pop mov rclb mov xor lcall scas jg fidivr inc mov bound orl std jg and inc movsb subb jg arpl dec mov out inc sbb roll stos mov lret sti arpl cmp mov cmc popf out mov mov mov xor xor mov push sub or adc jns,pt or jg dec pop xchg sbb mov mov push pop popa jno push jg out pop call dec (bad) je mov pop adc mov sti cmp cli pop dec adc into das jg sub sub sahf (bad) mov pop lods xor xchg cmpsb xor scas jg (bad) add loopne jns mov aas push es dec mov jbe jle (bad) jae sbb imul imul mov roll pushf je ret mov imul lret inc dec or insl cmp xor inc lahf sarb das js in mov jg ljmp jg xchg fwait divb adc pop cs inc dec jg imul lcall imul xor ret xor dec andb jg pop stos pop sbb add jg or into or and lahf mov adc lea (bad) mov jg mov inc data16 outsb dec nop jo popf jle push lret movsb pop lret mov ds (bad) int or (bad) sbb jbe cmp (bad) mov dec xchg sbbl fmull lcall cltd jb cmp push int3 xchg sahf sarb int3 xchg push sub ret add or js in stos lret xchg mov jle jmp mov push int3 fbstp fistpll xchg mov and dec dec mov (bad) jle jb mov je sbb inc movsl mov jg les mov cmpsb xchg ret pop inc enter pushf ss adc icebp aaa cmp cld or aas push add aam mov sbb mov cli ja xchg push movsb jg ficom mov mov pop jg cltd xor pop inc pushf jg and dec jg push aad and sub sub test addr16 pop or xor (bad) out fnstcw lods inc dec es and je iret mov push addl call or test iret pusha (bad) cmp pop dec push orb pop dec inc pop mov icebp mov push jp addl mov adc push sbb test ljmp stos mov jg lret test das jg ret mov into (bad) insb mov xchg push test inc inc jg push jo js fdivr jg push mov cmp icebp mov add lahf add testl sarb (bad) pop mov pop stc mov aas xor mov and int sbb pusha jg cmp mov adc pop loope inc jg mov pop mov inc or push out loope int sbb dec mov sbb jg pop pop (bad) push or scas dec push mov shrl enter mov push xchg xor mov jg int3 sub jg in test jg inc pop repz mov (bad) lods mov add jg mov or out add rolb mov hlt das je jg clc xchg jg les bnd pop jg stos mov lds dec push lret jg cmp sub inc mov decb inc jns mov pop pop addr16 jo movsb mov add push xor idivb dec inc xor lea dec and jg in idiv subb jmp push pop icebp push sub inc add sbb cmpsl inc loope loop jl xchg test jg dec adc jae mov mov add lods xor cmpl cmpsb sarl or (bad) repz xchg cmpl inc dec sarb push jg stc mov xor dec mov popa idivl daa adc mov and mov lahf sarl (bad) dec int3 mov and ss movsl daa fidivrl mov adc lahf jg lock repz cli ss fnop mov pop jp test fistl xor sub scas and inc mov nop add ds xor add rorb stos jg sbb test cmpsl ret int mov pop jbe jg hlt sahf pop push mov mov sub pop sbb mov or jp jg sub test out jae data16 pop rorb arpl ficompl sarl movsb testb push dec jb pop jae dec xchg cmp inc xor adc mov jg addl push cli sahf mov xor xchg inc mov jg adc jnp pop in cmp cs imul push xor (bad) dec fisub pop imul add insl push jg sbb xchg cmp aad data16 cmp iret sbb mov inc jg enter repnz sarb xchg push imulb adc mov jmp dec inc xchg inc loopne cli push jg xchg add pop ja jg mov stc nop cmp es cmp jg ja in xor mov dec fldl lods push roll dec bound test ret pop jecxz loopne xor adc lea mov cmp ss push cmp jg xor mov pop push mov (bad) sub push call or repnz mov clc fs pop insl fcompl (bad) scas ret lods movl aam mov mov add icebp pop jne cs popf loop jg push pop sbb cltd mov inc lcall xor aaa leave mov incl popa pushf mov jg pop fidivrl mov popl mov hlt orb scas ljmp push cmp popa cmp inc jne repz movsl push ficoml inc in scas outsl mull pop mov dec rcrl sahf pop mov ljmp cmpsb xchg sub mov mov test iret mov out andb jg lods xchg addr16 adc imul rorl adc sbb imul dec cmp mov outsl stos mov jg jecxz xchg adc xchg pop sub popa jg test sub lods mov push xor fwait jbe inc mov jg pop xchg xchg jg add aas lcall inc mov or pop jmp add test stc dec sbb adc loopne push test icebp xchg jg or xlat adc lea test fwait push int3 (bad) xor and jg in dec repz lods jg push sti cmpb iret dec mov jnp inc pop cmp dec xchg (bad) ss jg fiaddl gs mov repnz inc mov pop clc sbb xchg cmp addb sbb pop mov mov dec jecxz add xchg enter das nop jg movsl pop aad dec inc mov fdivrl mov cmp pushf fisttpl sbb out in daa (bad) sbb pop and dec inc frstor in cmc dec push (bad) jno repnz jb or in das push mov movsb test subl or xlat int cli sub dec jg sbb jp cmpsb lock imul sbb stc incl add (bad) sbb fldl jbe inc adc mov dec fildll jg lock ss sti int js adc repz push fcmovu and mov mov inc lock je xor insb jae inc pop sbb jg xchg jne dec mov imul sti test sbb cmc scas (bad) mull xorl mov (bad) sub jg or pop imul add add ret outsl out icebp jmp jle xor sti lret subb loopne jg sbb mov jg add push adc and cmpsb (bad) es xor and sarl ret fcomip pop sti dec movsb xor or mov (bad) push jg test stc inc inc jg mov jnp adc push lods push add leave inc imul pop fdivl (bad) enter rcll jo aas add daa xchg push (bad) ja or mov stc mov jg mov and leave clc gs insl jg addr16 or xchg mov cmp dec jnp call outsb jl inc rolb pusha jg das sbb cmpsl jle jg jp outsb adc jg mov xchg cmp rclb jg dec lahf mulb ja cmc fcmove insb incb jg cltd into nop imul adc push in cmp js (bad) cmp adc sahf and stc int push nop jg fldenv mov cmpsl jg mov push and xor mov fist dec or jg into sti pop fistpl push mov lods push or push call inc icebp jg idivb (bad) and jb cmpsl xchg pop inc jg mov fs lods xlat mov cmp and outsl lcall xchg leave jmp out jg lret pop sti (bad) jae in and pop cli test (bad) dec jg je push scas or js add aad aaa lods std sub shrb movb pop and cmc dec cmpsb movsl jg je and jg into xor cmp fdivrl pop and dec out scas pushf pusha mov jecxz ret stos and adc lret push and pop pop jg xchg jecxz in xor data16 (bad) dec cmpsb cltd inc loopne mov dec pop push loop repz rorl icebp sbbl push inc cld push push insb movsl in xor jl inc test mov fisubl jbe sbb adc (bad) rcrb loope lds pop jg sub and popf sub sarb pop fucomp outsl or fidivrl cmp xor mov xchg insl in push jg and lock jg dec in pop les jg xor jb jle jg popa inc std mov cs dec (bad) push fidiv out sbb mov push xchg push jl jg sti mov pop fcmovnu mov jbe inc pop sbb jg in push inc ret mov inc shr inc lret bound xor rorb std jg mov dec sub pusha push push adc fisub mov xchg aam ss mov (bad) jnp pop leave pop imull or ljmp adc ss xchg rclb ja in mov dec jg xchg shrl jg ds (bad) fbstp scas out out mov idivb dec mov or idivl adcl aaa cwtl (bad) pop jmp ret rcr jg ja ret dec push push cmpl aas mov sti add bnd cmp jbe add scas xlat fcompl mov mov lods int3 xor mov enter (bad) dec xchg mov mov sahf jo out scas movq popf jl or or mov das dec pusha pop and jg imul jg pop mov out imul dec sub xor mov inc popf mov inc arpl aad adc adc lea or or jg stc ret mov nop xchg icebp jp daa (bad) jg mov insb inc popa push lock pop sahf adc sbb sub ja xorb out and xchg jp jo pop dec or jg fs frstor ds sub mov lcall xor jg mov mov pusha sub mov test popf dec std adc sbb jg dec (bad) (bad) mov sbb cmp xor arpl jg out (bad) adc inc jg inc cmpsl js add pop jg add xor movsl mov loopne jb pop push jno jnp pusha lods loopne jo popf inc sub pop insb sbb or jg cltd sti cli aas scas leave mov imul mov push lods mov mov int3 inc je sahf fcoms dec shrl jg xorb mov bound cmc jbe fist lret cmp pop or mov sahf inc cmpl vpmaddwd push dec outsl pop push test jg mov (bad) jae (bad) leave lret fs icebp adc jg cltd cmp addl scas aaa inc adc add dec cmp ret mov addr16 mov ficom pusha xchg mov je dec adc (bad) jl (bad) mov xor mov push dec movsl mov fdivl mov fdivr adc into mov fwait mov stos add clc mov (bad) negl adc insl sub jmp js movsb fnstcw pop xor out push xchg fs ret mov pop call outsl scas inc loop jecxz mov jg repnz pop jl lcall cmpsb (bad) sbb inc popa pop mov jmp and inc xor fcomps inc lods cmp aaa pop sbb call jg bound xchg mov jecxz sub repnz add pop add cmp in cmp dec insl jb mov inc pop mov lret mov mov pop or mov scas sbb cwtl fs ret lahf dec mov into jg scas lock jl pop xlat cmp repnz adc add das jo js and xchg daa mov shrb jg and dec (bad) adc stos in push xor xchg inc cmp sbb pop imul lcall (bad) ja or sbb add dec lock (bad) into loope mov lret (bad) out cmpsb dec dec mov (bad) pop mov ret push jmp test and jg xor orb xlat es jne std add sti les ds sar mov rcrb xchg jg rol mov popa dec jg pop add aas inc or dec lea scas and add in mov arpl (bad) sub jle cmp jg mov gs imul xchg je,pt pop inc cli arpl or jg test and jmp lods sti cmp adc jae jg mov dec jne mov push negl and out rcrb push enter arpl jg mov and movsl inc fistpll and xchg dec lret sti pop das or jne out in pop mov sub fwait adc (bad) (bad) es xor daa jg cmpsb sarl outsb and jg xchg pushf dec mov aaa insl mov mov inc jae push push jecxz jno push jg mov and cmp push stc mov inc dec popf dec aaa sarl xlat les mov call sbb push fwait xor mov in mov test pushf (bad) repnz jg inc push jno mov cltd push fadds ret mov das mov popf shr sti outsl and jae xor jg jo and push fs jg jns xlat mov mov jg imul jmp lea jo pushf mov aaa call cmpsl jg sbb imul jg into xchg out pop mov dec cmp inc cmpl dec ret adc negl in mov shrb jg inc aas mov jg (bad) int3 pop mov jg (bad) repz mov inc xor fwait cld xchg inc inc push mov xchg pop test ja dec adc xor jge cmp (bad) aas in aas stos xlat pop xor fidivl loope xorl sub clc jg popf xchg negl data16 inc sarl shl jg xchg in pop push add test sbb popf scas jg xchg notl dec inc mov xor ret sahf jl dec in xlat mov pop test pop pop and ljmp insl mov inc mov adc pusha lcall insb jg cmp addl push pusha push rcrl addl jmp (bad) mov jg xchg inc out in outsl lahf jg aam pop sbb int3 stos jg push xor jg mov fdivs sti mov jg paddb lea xor and jnp dec js call jg pop lret sbb aas adc fisub cmp (bad) jg loopne in pop fcmove sarl lods mov cs pusha test shr enter sarl mov imul dec jle cltd sub adc cli push mov lock add cmp lahf pushf jg aas pop shl and enter shrb add test aas jg mov aam aas rcrb mov out lods inc sbb jb push mov add jg fcomps stos jmp in mov add pop call jg sbb outsl xchg js (bad) jne (bad) push movd shll cmp xor push outsb inc and jg (bad) nop push leave jecxz outsl jg sub repz push jg xchg jp addr16 shrl mov pop ret notb lahf outsl and sbb xor jo popf mov fnstenv mov mov popa inc cmp mov xchg pop mov adc push jg daa mov lret cmp outsb xchg jg rcrb pop leave test sub rcr and jg stc push add popa mov jg or hlt out cmp xor stos jg and (bad) xor pop sti ret sti and addr16 push dec xlat adc aaa call pop nop and loop adcl mov sub or jg lock (bad) xchg test mov jg and mov imul adc arpl jg push adc loope std sti sub test mov push jg pop mov sti cs lea mov es pop sbb sbb aas mov cmpsb jo (bad) loopne dec jg int jbe cmp mov insl xor popf and rcll leave stos jg cltd std loope jne or jno xchg xchg jg stos repz imul movl sub mov pusha (bad) into addr16 fldcw jbe push mov inc es stos sarb mov sbb mov mov bnd aad ret ljmp mov cwtl sbb (bad) jg mov add leave popa fstl xor pop movsl inc pop pop (bad) jno cmp (bad) (bad) inc sbb pop xchg mov push jg adc ds (bad) jle cld pop and and dec xchg mov addr16 mov mov insl cmp aaa cmp aas dec and orb lea cwtl insb aas xlat insl cli adc mov mov mov (bad) pop xor popa sub int lods dec pop addr16 sti push sbb jg jecxz rolb inc cmp jg mov icebp dec cmc aad lea sti ret dec jns dec loopne jnp inc push lea pop (bad) jg cmp std mov cmp call pop movsl add jnp sbb outsl inc clc push sub jg mov or imul fbld stos sub insl outsl repnz xchg mov frstor sub (bad) (bad) xor out ds pop pusha (bad) pop int3 popf jne and jg rorl jg add in mov xor mov int xor push pop inc xchg mov jmp nop jg loop (bad) jge inc aam push ljmp cmp stc push int3 and mov jp sub jecxz lret shrl sbb fs sub push pop jg mov in jg dec sbb jb jbe cmp push lahf jg mov into mov dec jb or jno (bad) adc mov hlt push ds lahf mov arpl jg add inc dec pop and jg xor add add jg inc cmp push mov test call inc js mov aaa stc into jp sub bound lcall outsl cli pop scas jae mov pop jl and push aas push clc add loope iret in cld aad test test mov pop ss nop sti mov (bad) mov mov jbe outsl inc shrl push mov jg scas jl int3 push ja addr16 pop jg addl inc jg negb iret or test xor jg xorl xlat test mov aad jbe nop scas aas ss mov xor pop aad shrb mov or fs clc scas push push cmp insl out and or dec (bad) cmp inc mov outsl jg hlt inc xchg jo pop mov fwait test mov dec imul hlt in and xor jg xor cli add adc fisubr mov inc xor stc jg push movsl mov xor jg js fstpl cmp addr16 and jg dec mov jg in sub xor sbbb jg xchg jg inc js dec cmpsl cmp inc fdivrl pop xor fs inc fimul je flds adc mov test lock fsts jg xchg sbb enter (bad) add mov push ss sub int sbb xor sbb loopne jg fimul movsl cld xchg add scas into mov jg (bad) clc add ret imul lahf dec xor aad inc mov iret out or jg xor insl mov dec pop push mov loop mov test leave sbb xor dec stos ja mov dec (bad) mov cmpl inc jl dec jo int inc sarb sahf adc test dec nop scas or add lods insb and and xchg sbb dec mov cmp insl movsl mov aas or sbb in inc imull add xchg ret imul xor mov mov cmp mov lahf inc adc (bad) cli push lret clc and out imul pushl push push cmp add fildl mov sti in pop sahf test dec lret in (bad) adc pop sub push mov cmp jns icebp mov mov fisub inc lods std mov aam mov test (bad) nop jg cmpl mov in hlt pop adc mov mov and or jne sub jg mov scas (bad) or mov inc inc int add adc cmpsb icebp sbb jg (bad) int3 lods jne iret jo xchg and dec aas movsb sub rcrb and jmp or dec lods jg inc cmp mov out daa outsb aad lock into cld or lods sahf inc dec mov xor arpl cmp lret cli frstor aaa rolb dec clc out jbe jne nop fildl stos jg xchg sub test cmp jno add jg pop ret rorl decb addr16 add jg aam in jbe enter xor lret pop mov ret in popf stos xchg into sbb jg and xor jp movsl jg jns pop or mov pop gs aaa out hlt mov jp adc pop push jle jg dec xchg push add mov push insb (bad) out (bad) xchg jg iret lods adc add jg inc nop inc insl sub jl or sbb adc les xchg imul popa aas inc fsubrl jo dec pushf lods or (bad) push jg movsl cmp jg inc repnz xchg xor jg xchg daa push mov rcrl fnstenv cmpsl stos imul cmp or inc mov movsl outsl call xchg fs cmp jp decb jmp jg pop push in push dec mov inc (bad) aas into xchg dec (bad) adc cmp mov mov std add mov cmp xchg sarl loop pop clc dec push jg sahf in xor nop sbb jmp out adc dec dec jo pop repz dec les jg inc jecxz fidivrl sbb push pushf (bad) jg dec subl dec jg push fs int3 mov insb jg pop xor jle popf mov popl shll xchg test inc bndldx loop xchg jl js ror sbb mov ret xchg in or jg adc mov mull fcomps mov push pop pop imul or sbb jno sarl hlt fstl lea inc ss push adc jg stos in fdivrl xor sub sbb jg adc or test dec jge ss arpl mov dec ljmp jno insl pop inc sub gs cli xor push mov dec cmp dec int es ds mov mov sbb mov ret fadd fidivrl mov cmp jno mov sarl ror repz jne enter (bad) movsb adc pop mov sahf jg cmp insl or jg mov adc mov iret xchg inc aam call xchg (bad) dec mov fldt inc adc lret add mov (bad) or pop mov in jmp push jg jnp inc xchg jo xchg jg add imul mov mov and movsl outsl xor aaa adc inc iret add nop jg xchg add addr16 pop cli stos mov mov push mov jb pop sub inc dec mulps lods nop jg and sbbl xor or (bad) (bad) cmp ds out mov mov in out mov xchg outsl jg sarl incl mov sub enter adc or and loopne imul dec jle arpl adc enter iret adc jo je pop les in aas xchg sbb dec dec jno scas dec aaa pop cmp ja xor push lahf xchg adc inc addr16 sti adc mov mov lea notb insl push out cmp je cmp aam ds jg addl jmp mov inc rcll mov push outsl push repnz or inc push je dec nop jg xorb aad push jmp sysenter mov insb es xchg fildl pop (bad) imul jg sub movsb jg lcall jg add jb loopne cmp dec cmp cmpb sub aad es inc cwtl out mov ss and push pop sub (bad) adc fwait cmp outsl and jg push push hlt cmp ret or lret dec jp dec cld xor repnz cltd inc enter push mov aam push lret std (bad) in repnz cli jg or pushf fstpt icebp push rcrl pop (bad) jg faddl (bad) lods jl (bad) xor rolb dec jg cli (bad) lahf stc outsl pop inc mov les or sbb jmp inc jg adc ja (bad) cmp xor insb push movsb mov ja jae or or sub adc les pop jg dec in sahf and xchg cmp rcrl mov push pop fsubr or pop cli jg jmp mov mov (bad) or outsl dec sub jb scas jg sbb lea int3 insl jg (bad) mov lret or (bad) push je sbb pop mov aaa jg popf ret les mov test in rorb flds sub jp mov cld jg push ss sar inc mov pusha pop sub pop xchg jno (bad) dec jno fxch mov mov jg stc es into (bad) in insb lock std movsl loop mov fmuls (bad) shrl dec pop or out sbb les xor je cmc push sbb inc sarb pop pop push mov xor cli dec call js xchg stos pop adc rcll daa sbb (bad) and or test jg mov subb hlt inc xchg and and shrb movsb (bad) inc (bad) xchg jg mov aas push jns pop jg ret pop fs js pop aam xor or mov int push fwait jae add adc fildll testb inc push dec insl test test (bad) loopne add jg (bad) xchg rorb bound cmc icebp mov dec sti mov or xchg stos sub clc aas lret mov mov jae sbb aas (bad) mov cmc lods ja inc cmpsb hlt outsb negl mov add pop jge jg fimull jg pop rol lea (bad) sti mov cmovae mov xchg push ret push test in sub je movq cmp imul gs mov jg or cmp mov loope roll mov std aas aaa int cmovb add dec xchg dec jg sbb or lahf xchg pop mov aas mov push out cmp inc xchg lret inc xlat jle mov cmp inc inc fistp add arpl bound ret or loopne jno mov jg in (bad) lahf push int cmp idivb lods xchg inc mov dec cmp ret outsl nop pop push push xchg mov mov pop shl lea push lret pop nop (bad) insl and mov inc pushf hlt ret movsl jg shll fcoms add int ror stos push (bad) mov shll and push pop fwait data16 mov es xchg aaa lock pop cwtl and inc inc clc and scas push dec aas jbe mov jnp lret fnsave popa push mov nop cmp inc leave jg shrl call jg insb pop add sub inc xchg xor xor jg mov lock jg cmp or dec xchg cwtl push cmp cmp jg into dec sub pop sbb adc sub movsl jg dec pop mov loopne loope hlt clc pop (bad) int3 or cmp pop scas mov fnstenv push test jg mov aaa cmpl xchg push inc cmp scas in (bad) loop dec inc jg lret inc mov pop mov js push xchg stos (bad) jg pop push das icebp aaa (bad) std jg or (bad) adc test jle mov fs inc jecxz jg into inc xchg pop lcall ds (bad) jg fstp push lods jno mov popf sub mov cmp sahf adc arpl cld stc call sbb mov inc sbb mov lods dec mov decb mov xchg pop add dec lods je or lea addr16 jl popf movq push adc out jg imul sbb jmp sarl cld xor dec arpl push and aas xchg sub add cmp nop mov mov ffreep inc and cld adc leave frstor pop outsb adc sar ja mov ret popf sar rclb dec lea jg or sbb movsl scas jg,pn dec mov or mov jg push leave push push mov inc jg imul xchg adc test cmp mov xor add add and inc imul jae jg jp or jg jno pop mul xchg or adc (bad) jg mov adc fcos jg mov jl jg out xor jg mov mov jg inc into test mov aad dec push add inc sti jg pop movntps addr16 es lahf jp aam cmp int fidivrl jg ja (bad) mov lcall xchg dec sub (bad) jg lret and loope movsb or inc das insb imul adc mov inc mov cld lods or idiv push mov jge xor mov (bad) (bad) pop push add repz dec rorl mov or cs js mov arpl fsts push das push mov or int aam cmp jmp add shr xlat pop mov xor mov sti dec loop or jg stos cmpsb mov jg outsl (bad) repz sub xchg pop and xchg or popa jg movsl push int shlb mov stos (bad) nop xlat (bad) jg pop or fidivrl mov scas jg push pop ret cmpsl push (bad) ja std btc dec aad push jbe push loopne jg fs xchg test mov call pop js mov or jge insl mov mov ja jae dec mov fadds rol bound cmp and scas outsb les sbb movsb inc loope pop lods fwait shlb lds sub mov in adc movb or mov cmp pop jb xchg mov mov mov (bad) jl aas pop adc ss push add sub xor das add xor inc mov vaddsd hlt jle movsl cmpsl jg mov mov pop mov xchg sahf mov xchg add dec pop jbe cmp insl insb inc daa shr scas jg scas push imul gs xor and dec xor or fstl jge les inc mov mov repnz xchg sti pop inc addl jg test add jnp jg mov mov mov mov pop push in jg mov inc pop sahf mov push mov out and rcl popf dec mov pmullw pop (bad) jg fsubl dec jg mov push inc lock pop mov imul push (bad) aam cmp jg sahf sbb jg mov mov cld ss mov int3 adc out xchg js jne arpl out xor dec jns pop aam cmpsl jg xchg pop fdiv xor jo xor int loop sti mov mov addr16 xchg mov cs mov imull adc sbb pop pop stos or jg mov scas rolb dec jg test xor ljmp leave push pop mov push mov jp ds ja mov shrl mov cmp mov inc out leave stos jg push push lds xor jbe mov dec sbb push or xor xchg sbb lock mov add lret fcmovnb gs icebp jg cmpsl (bad) iret jns sbb jg in sti inc out sbb arpl jg stos pop in jbe int sub movsl jg test pop gs inc (bad) je arpl in push jae into and push jne ret xlat jg andl jg inc mov adc inc test pop bound adc xchg pop jns lods dec or adc pop sahf mov dec cmp (bad) xchg test pop js sub jg cld (bad) push lahf push cmpsb scas mov jg push sbb sti jns dec stc mov fadd lds (bad) cli aam sarl cmovae daa mov enter mov inc mov adc sbb outsl jg out push fnstcw (bad) ret popf repnz movsb ljmp cs leave xchg pushl in xor and sbb ret or les dec jg int3 out push stc mov jg or add gs out mov xor out jg cmp leave loopne jg fiaddl arpl roll lcall add lods or push icebp stc jae sub and mov xor pop sahf push jns repz test push jecxz sub push pop mov jg pop sub jg lods test insb jg in es xor jg or in scas and pop testl cltd popf jecxz dec cmpsb into lret jg pop dec scas inc xor or push mulb leave mull pop mov daa sub mov jg sbb gs xchg (bad) mov inc stos fnsave pushf sti fs pusha lods jg jle lcall (bad) leave dec mov sbbb out loopne sub loope,pn cwtl push outsb test pop test hlt mov mov add sti lods bound je popa test cmpsb push jg dec push loope sub jge jle or push sub stos call push xchg jg adc push popa pop jle movsb fdivrl in push fmul popa mov dec push inc jg mov xor xlat pop ret add mov fnstsw inc jno lahf dec les lods inc mov jle jmp call sub dec dec mov out sahf and pmaddwd push inc adcl and ret test inc mov in push sbb cld jg mov add fcompl loop mov xchg outsb addr16 mov imul fst (bad) sti cs (bad) or jg cmp js xor outsl mov (bad) out sub mov outsl sarb jae in pop popf or dec cwtl lahf jg cs loopne jg int mov jg dec pop loope (bad) ss jg sbb and jg in mov jmp inc mov pop push stos lods mov or pop jmp lds push aam fsubs ffreep aas pusha fldcw mov or test push mov mov (bad) and (bad) sbb imull add aad inc lock jg les fistpll jecxz push rorl sti pop stos sbb adc rcrl dec jg xorl mov scas adc ljmp xor mov mov mov loop in hlt movb jb and aam and rcrl add mov test sub jg lret test sti punpckldq inc das fistpll jae xlat fldz clc add repz es idiv mov add into adc pop jg xchg push mov in push jg ret xchg popf out fdivrl adc and jg aaa sbb dec fldenv cmp jg stos mov jb imul dec lods jnp xchg inc add jns ficom mov fidivl jg mov inc push jg out subl jbe mov lods jg jl mov (bad) jle mov pushf pop push out ss dec mov inc push jns add fs mov cmp repz outsl pop jnp enter or mov dec out sub jno dec jg loop xchg inc mov pop js cs lds (bad) mov inc pop push cmp (bad) cli jg and lods lods addr16 mov xor dec in jg rolb add push les xor cmp pushf icebp dec adc int data16 stos mov mov cmpsl arpl inc xlat and jae test sti shr sub jg cs lea adc (bad) jne dec push jecxz testl stos jg and out add (bad) push je mov ffreep jl jg popa sub cli push (bad) aas xor sbb insl fisttpll in aas popf sub sbb (bad) xor scas push pop jp mov cmp sarb and mov int pop arpl sbb xchg xor popf xchg mov push stos xor add test xchg pusha (bad) repz mov add ds adc lock bound mov ja cltd pop mov das sbb ds dec pop jecxz dec shll or out out jg outsb pop jo push xchg iret jg scas sbb cmp fidivr out mov lods add pop lods jg jnp scas add xor or pop dec shll outsl (bad) inc cmp inc lcall in bound jg stos mov lods mov (bad) pusha je pop cmp jmp scas jg cmp inc inc jg (bad) mov adc xchg lahf test outsl stos or mov je mov (bad) jns dec aam cmpsb je dec mov jo dec xor adc ljmp psrad dec aad aas loopne daa mov loopne jg in lds pop out xor mov push sbb cmp mov sub pushf mov push arpl mov popf fisttpl xor jg pop pop ljmp cmp jne movsl lret jecxz test and sbb in lds jg mov (bad) jno insl pushf outsb pop mov push push jg lods aaa aas xchg icebp mov sbb adcl mov xor gs (bad) dec setb lcall fidivr jns ret inc sub icebp inc jg or (bad) or cmp mov repnz roll aam (bad) movsl aas in mov xorb jg adc mov jg mov sahf in out mov push jg xor sbb push push jg arpl sahf cmp inc xor addb scas pop mov popf daa push and cmpsb out loopne mov (bad) test idivb xchg (bad) inc mov sti rolb fdivs gs lock mov aad jnp adc lahf mov cld out and cmp (bad) mov dec ja sbb mov mov sub jg or inc hlt dec cmp mov jle and dec mov adc mov sbb mov fwait xchg out inc mov test add int dec pop orl pop jp push cld int3 pop fdivrl sahf mov xor add xchg lods or pop adc xor pop or mov jg in push loope push loopne movsl xor or insl test std sub pop rorl fyl2x aas cmc fisubr jg xchg adc sbb lds or mov jnp dec jp pop jg cmp push aas (bad) add jg sar push xor xor pop mov sub dec dec jb mov pop pop lcall or adc push fisub (bad) hlt jg loope popf (bad) xor dec aas fsubrl pop mov xor jp imul and jae aas test insb scas vmptrst push xchg cmpsb outsl sub push cld xor dec jge mov ds fisub and lret jg push mov sbb cltd mov lret xchg roll inc int3 pop pop jl fildl (bad) mov ret jle in fisubr movsb mov icebp lods pop cmpsb push sbb jg add mov je add data16 es jle cmpb imul dec jno jg es (bad) jl mov popa cmp out jg adc stc stos pop inc jg idivl pop jp cmp mov mov inc call mov stos into jg mov lods imul seto jg cmp lock mov lds js push ret mov inc std ret cs lock aas das jne adc inc push dec or jg sub adc mov repz mov lret or jg add mov push push cmp stc xlat dec push jae pop jns aas cwtl xchg jmp mov add xor arpl pop lahf addb ret jg jge daa inc sub mov mov insl imull sti sub push or mov jle inc xor js ret xchg es out dec ja adc mov (bad) test inc aas pushf push xor clc test xchg mull dec mov pushf jae xchg ja sbb jno gs jg incl cmpsl fstpt ds mov nop pop fwait push add call inc jge jg rorb inc cmp popa sbb or outsl leave pop cmpl outsl fistpl clc xor sub cmc loope pop int mov out and sti sbb add (bad) ljmp insl jg int add sbb sub dec inc int in fildll push pop inc jg lret sub imul arpl fwait int sub aas jg cmpsb sub cmp sub movsl xchg jno pop add xor jno cmpsl pushf (bad) push add roll jg sub and call or ret mov out adc mov sbb daa xor jg lcall ret in jl adc shrl dec xchg mov push dec fistpll outsl jg cs ss mov sub xchg jg push mov or dec jg or dec in xor cmp pop mov mov mov lock sub cmp push jg outsl test jge mov adc outsl lock (bad) fbld xor mov jae pop out js push inc das push xchg dec sbb inc (bad) and add (bad) cli jg cwtl pop jb pop xor jg push sub mov xor aam outsl inc jl push div xor int pop out pop xchg pop jg mov jne mov or sbb scas pop stc and jg mov mov repnz jg popa ds icebp mov jg das int (bad) ljmp jmp inc rclb mov jne sysret je fwait push sti sbbl cltd push mov gs jg dec pop and xchg xlat in std fisttpl insb mov jg stos jnp mov sub mov gs mov sbb mov adc pop (bad) push pop ficomp je adcl fwait repnz dec jmp xchg aam cmc mov pop shrl adc jg sbb rorb ret jg ja (bad) inc xchg dec cmp in shrl push inc add push jg cmpsl dec addl jg and das iret cmp mov movl test push mov pusha sti mov or pop (bad) stc mov sub les je mov pop jg jno cmp add rcrl or cmpsb inc sub sub push dec adc mov mov pop clc dec cmp test repz fcom into mov jg insl and popa int repz iret jg lret xor mov repnz add xchg mov outsl push mov jg mov cltd in lock jg add fbstp fwait sbb mov jb mov daa mov pop xor jg pop aaa fadd xchg fiaddl mov pop adc repz out stos stc enter or sbbb mov and lret mov and jle (bad) add mov xchg push mov mov imul lahf pop or mov adc mov jne test jg xchg (bad) mov adc decb (bad) je mov mov sarl lock in fnstcw in push dec int3 jae cmp outsb dec pushf sub hlt jg xchg inc inc jns mulb jmp mov jmp dec push idivl fstpl jge and icebp xor mov in test cmp mov pop jg and pop into das outsb fdivrp and jno adc sbb mov push fadds out stos sbb cmp xchg add sub jg mov jo jg xchg mov push mov into jg pop js aas in mov pushl in inc xchg jg loopne nop fstpl mov insb pop arpl scas sub dec lea aaa mov lcall outsb int3 xor bnd mov cmp shll jbe mov push mov jae push daa sarl add out jo mov scas int daa push in jne lock aam xchg push arpl mov test call mov imul shrb mov fisub lcall jg,pn pop push cwtl mov (bad) mov or fsubl cmp inc jmp jle (bad) (bad) cmp fmuls sub and mov test sahf fstl nop in pop cmpl fcmovu sti ds mov push data16 mov sbbb pop lahf add leave (bad) ljmp (bad) jl sahf nop sti push cmc jg mov mov jg pop push cmp cmp mov imul jae jg sbb test inc jg inc cmc jmp mov sahf mov imulb jg dec dec inc add sbb mov fsubs inc lods shrl push std cmc xor mov call pushf mov addl pop pop xchg out adc push jmp ror sub in mov jbe pop dec jg fcoml scas call int in outsl jp mov das mov loopne mov sarb cmp stc inc into divb jg out pop cmp int jg sbbl jg aas mov pop sti pop fdivrs xchg push push aam jge outsb jmp in jecxz fs (bad) jg push call out sahf pop sub (bad) imul or lea das jg xchg popa dec rolb int inc pop mov (bad) pop pop jl test cmp jg adc addr16 fcmovne jg out add sbbb xchg mov sub bnd pushf addr16 in cli add adc jg pop aaa xchg jecxz xchg jg mov gs aas add dec push jmp mov cmp popf movsb (bad) int lcall adc fisubrl stos xchg mov push adc dec jg push out popf push aaa arpl xor cmpb add mov push je mov jl and imulb or jl jg imul mov xor popa jb jg inc cmc outsb fwait jg mov test sbb and adc test call jno lods lret in pop jg sarb jg daa lcall movd aam dec jg enter iret (bad) push jg dec cmpl clc shr aam hlt mov cmp mov sub rol pop and dec ror dec xchg das mov mov push push and lea jge jp mov sbb and aas arpl jb addr16 mov clc dec das push dec or xchg mov push std les repz xlat mov mov pop popa out into daa mov js sub mov jg or idivl es das xchg lods dec stos add dec inc (bad) fistp mov cli icebp mov loope cltd stos mov sub adc mov add jle inc in push cmpsb mov orps sub adc test push jg fwait stos repz imul push or adc sub xor (bad) and xchg pop adc xchg push mov leave jbe aaa jg push mov mov loop insl and frstor adcl pop (bad) les adc (bad) jg pop mov mov fwait (bad) mov mov pop cwtl and mov repz mov jne je pop xchg in mov cmp repnz cltd cmp test imul pop and mov add dec add jns cwtl mov push test inc fbstp je push mov add rclb ret mov roll stc dec outsl (bad) jmp ss inc mov inc mov jg in inc add xchg adc pop cmpsb call aas mov test cmpsl lock js cwtl subb (bad) xor jbe je faddp jg jge jb out dec push push mov fwait jecxz mov movups lock push pusha aam jmp and xlat sahf dec sbb jg mov mov movsl ret dec repz out stc jg cmp ja adc push jg inc enter in mov sub lods in stc stos xor or add cltd ror mov imul pop bound mov or fidivrl sbb ja mov jg sti pop jno arpl xor mov xchg xchg jp fwait jg pop shll add jg cmp repz lret pop xchg pop stos cmp jg repnz hlt jg xchg inc jg xchg mov sar xchg fnstsw mov call cwtl dec int xchg dec nop xor lock mov insb ret popf jg les jno cltd mov or addr16 rcll inc outsl and imul jge dec mov add fdivrs inc test pop sti fnstcw stos jg pop push (bad) ja xchg xchg aas jne xchg bnd dec adc jg push mov fwait sub call in das cmpsl dec out jae stc mov or (bad) push jg in add sbb test inc push or jnp xchg pop mov mov pop in and xchg push jmp lods arpl pop push jo cwtl jg push push mov jg mov lds idivl mov scas xchg stc mov jb dec lret cld arpl lret and mov arpl jg loop add xchg jg pop in aas in jg xchg mov jg cmc repnz xchg arpl jg xchg ljmp sub xchg pop shrl dec (bad) lahf ss idivl jae popa movsb mov aas mov push mov sub out pop fbstp jg loop fs scas loopne mov fistl sbb ds fildll insb popf dec push aam cmpsl mov ret lods ja lahf aas sub push (bad) add cltd dec inc sbb dec cmpsl call jg push sbb sti loop jg push dec sub pop push lock inc aas loopne or lret outsb inc adc inc mov cltd adcl test jg cmpsb sub jg pop jp jg aaa test jg pop (bad) out adc push int3 jg (bad) idivl pop scas repz enter pop mov dec jo jg nop xor aam sti sub je aad cmp dec fs sub bound sti ljmp mov es cmp scas inc adc movd inc and aam aaa addr16 jg in or add pop jg repz pop inc popa jg test ret fmull insb enter stos test int3 arpl rorb jg insl (bad) pop lds aas fcomip fidivr jg lock popa dec addl fisttp jg into out aam jge adc mov ret stos or addr16 push mov lret aaa aad outsb or (bad) mov mov sbb sub jg pop cltd inc push push imul mov mov pop mov arpl jg jo jge por aas loopne (bad) out cltd dec dec xchg lock arpl sub dec das mov je aas inc jnp jg aaa push xchg and jg cmp pop (bad) les jg movsb repz mov sub jmp jns test push dec xor adc (bad) jbe stos or jnp jg jl xor sbb je and jg cli (bad) adc stos jg ret xor das sub out (bad) jg mov mov inc repz mov andb test inc pop cmp enter jmp push nop jbe int3 jg cmpsb cmp aam push jle cmc and dec add arpl and cmc xor jg cli xchg shrb hlt sub mov dec jne in iret rcll insb (bad) popa xor sarl jge inc pop mov sub mov dec cli fwait (bad) jg sub inc and xchg lahf les loopne imul fldl addr16 lret jg dec out scas sbb sub push repnz push jg (bad) dec jb pop and xor ljmp out mull test inc lods jno test xor out cmp arpl pop rcrb mov mov xchg jg outsl xchg pop mov xor mov addr16 fstps jbe dec jne sbb mov jg (bad) insl dec jecxz shlb (bad) xchg int jp xchg (bad) pop lea adc mov fimul ret aas and mov addr16 inc jg pushf and fbstp jg (bad) test lds dec dec push js mov push std sub jae popa jg dec lcall das out jg lods cmp iret mov cmp std lret cld fiadd xor jg and sbb jg ja adc jg jecxz mov mov (bad) jg iret int3 inc sub das jg stc cmp jg (bad) cmc push popf xor cmp mov push pop aad outsl cmpsb xchg push jg cli out mov pop iret imul sarb inc or lods mov inc xor outsl jge std nop jae or iret js sub lahf mov jnp jb xchg leave cmp enter pop inc jg mov xchg pop jg or popf pop xor jg add push dec mov mov sti jle pop xorl jg loope dec push inc (bad) lds sbb add push aas cwtl stos mov add ss and jg sbb mov subb xchg imul push js jg add inc xchg cmp adc gs jg call in jg fucomip mov jg mov xchg (bad) xchg out jg out lahf sti scas cli stos mov dec sahf mov int3 insb or loopne inc and data16 and inc hlt out jg xchg sub mov lret sub scas fistpll and sbb ss jne imul dec cltd push leave jg push and jb add jl cmp stos dec push jg (bad) test mov js fs inc xor dec pop xlat shlb ret jg cli call test sbb loopne int bound shrb addl idivl pop mov push je lret lcall mov xchg dec mov cli sahf stc sarl pushf aas movsb cld ljmp add or pop imul push xchg mov jmp dec push jg cmp addr16 pop out mov jb daa movsb dec dec ss xlat pushf arpl js sub and in std sbb scas je jg mov sbb jg mov xor jg arpl and enter andl xchg xor sti and dec xchg test (bad) jg dec jle sbb jno or sti and and or pop jmp adc mov pop repz cmp pop sti hlt add inc push inc jg push cld inc dec xchg push cmpsb jg inc xchg pop pop xchg hlt js jne adc and outsb jg ss mov jg pop pop or arpl cmp (bad) mov and mov mov push (bad) jg push (bad) cmc inc mov loope (bad) jmp dec dec jg (bad) fld (bad) ja pop and mov sbb repnz sub das daa dec add adc xor in push insb mov aas loop ljmp sti sbb dec stc leave (bad) jg xchg push out or jg loopne inc jnp cmp mov nop inc push jg pop movsl int3 cmp cmp popf sub out cmpsl push hlt pusha movsl inc jecxz cltd int dec adc push pop jg xchg sub ret out sbb mov ljmp icebp jns dec push push jg jae mov jg test in jg jnp dec cmp push arpl mov daa jle fdivl xchg pop gs xchg sbb mov ljmp xor and in jbe or lds inc adc jg inc mov jl push pushf std cmp out ss push sbb int fmulp aad sub jg or (bad) mov xchg sarl add pop jge and stos mov jnp out or push jg test sbb cld or idivl pop lds cwtl xchg jg loope pcmpgtd mov mov (bad) jo and fisubr ljmp shll jg xchg sahf lods fmull pop sbb sub aas cwtl or mov and pop xchg jbe pop decl jno repnz jae add sbb dec pop jg mov mov mov inc cmp add push scas in lret push leave aas rorl push inc cs sbb xchg sub mov fnstcw inc cmpsl aam jg es out jg jle push mov pop fidivl pushf iret add adc clc outsl cmpsl ja loop fstpt ud2 popa xchg dec push pop jg inc cmp fdivl in pushf add out jg fnstenv imul iret (bad) dec add test movsl jmp dec mov jg pusha mov stc aam xor jae arpl dec push push mov outsl test jg mov lods ret cmp mov dec jmp ljmp sub cmp bound ja dec into pop out imul notb xchg mov xchg (bad) or push fs sahf rolb fidivl ljmp sub js int mov lods (bad) sahf je or repz lea aas outsb sbb inc lds arpl roll jg,pt shl lret lds mov in dec xchg add notl outsl lods es jmp (bad) mov fcoms dec pop clc push jg pop and push and dec lods add ja mov push pushf fwait adc dec jg rcrb fnstsw push iret lcall inc mov push loopne lea cltd jne jg icebp jl xchg mov lods mov xchg sti and popa (bad) pop mov popf jg and rcr jp pusha lahf jg mov adc sbb mov dec sub xchg jo jecxz push mov out pusha loop cmp daa js push adc jecxz lret jg and jg xchg imul xchg jg pop mov mov xor inc add mov sti les (bad) jge sub in sti dec xchg cmp pop test imul mov (bad) or cld jg cmp add jecxz mov aas xchg sbb mov jp add mov inc repnz cmp jg or stos jg pop cmc mov mov jmp fildl xlat dec ljmp std and cwtl adc jg scas das call jg sub lock dec iret cmovg idivl push mov xchg bound in mov cmp pop inc lret js fdivrl pop sbb xor imul mov ds jae add inc jg lods xor dec xor jg add lock jg or sarb cld out xchg add aam lret push xchg jg stos sub jg or cmp inc sar mov out sub mov fdivl jg mov jg lea setg sbb mov pushf fstps xor scas clc arpl mov mov jg inc gs jg push push je sub pushf lods (bad) jno imul mov or (bad) in xor xor push movsl inc dec iret mov pop jg and pop mov sbb fldcw mov jg push jnp outsl push adc aad cmc outsb push (bad) lock mov cmpsb jg push cli leave out int push mov repz aas jg push mov loope cmpsl dec mov div add rcrb or push fimul mov cmp xor dec adc adc lods cmp jg push mov push sti pop mov dec push cmpsb add mov jnp call dec jo cmp jb jle loope lea pop movsl mov mov adc or (bad) xor pop fbstp jg test cli jmp in xor leave (bad) push and cltd repnz jg adc adc aaa jl inc mov pop mov std xor repz movsb int3 and lds inc arpl ror inc shrl int3 mov mov xchg outsl dec jg arpl add flds jo cmpsl fs adc notl ja xchg jg inc lahf lods aaa or mov rcr inc mov jne xchg push add scas daa dec xor mov mov dec call stos sub mov icebp push aas fcompl inc dec add jg jmp adc add stc jg push mov xor jge rcrl sbb xor mov xchg scas test cmp dec xchg sarb jg je adc in std shlb inc jg out cmp popa pop je jg ret into lcall outsb mov inc jle jg cmc mov stc inc adc mov push es frstor dec dec xor fild push sti sub in iret popf ds popa adcb sahf test dec xchg testl lret mov outsl inc xorb movsb push sub mov sub mov inc sub jmp gs int3 loopne jg out mov mull adc lcall repz insl lahf pop inc cmc push dec add cs ficomp stos lret jg xchg xchg fistl xlat push jg sbb fs aas push pop mov and cmp mov out jg in addb jo mov push cld dec inc jg adc mov (bad) fnstsw dec (bad) insl mov sarb push jae dec push cmp aas adc and daa sub jb sbb mov sbb xor out nop (bad) popf pop xor mov fldz sbb pop pushf insb idivl xchg xchg jg xor add jg ret mov ja fwait jg (bad) and fldl mov jg daa aad arpl inc jno mov sar das scas pop idivb xchg cmp hlt inc decl sub testl (bad) mov sub dec mov jle pop idiv mov sub mov imul mov cmp popf mov mov sub pop ljmp sub add pushf mov into cmp leave pop dec add xchg xchg mov pop cwtl jl pop daa movsl pusha xor popf and mov mov mov scas xor (bad) test adc lds and pop sbb pop push inc cmp loopne out sbb insb push icebp je mov jg mov fwait mov cli push (bad) and cmp xchg xor cltd (bad) xor ja xor push pop add pop lock pop jg jo stos mov ljmp jg xchg lods test jg sub xor out (bad) jg pop rcrl aad mov decl inc pop mov (bad) or mov xor dec push lcall pop push xchg stos pop jmp jg lret mov xchg enter xchg pop iret push je pop add sbb adc mov test pop arpl nop xor popf push sarb add std mov lds adc sub push fnstsw sub pop xchg xchg ja mov jae cmp jg mov icebp mov jns ss dec daa and test xchg mov cmpsb cmp jecxz sbb leave jg mov rorl adc aad fstpl mov out dec sbb ds dec adc mov mov test inc cmc es fcmovu jno push push sbb call mov or cmp arpl jg es (bad) repz jg mov pop insl mov lods jge ja xchg adc jb int3 jg cmp into test fwait lods dec xlat outsb js jg (bad) pop xchg out inc add xor and inc ja insl adc xchg sub fdivrl add scas jo cmpb int3 or in jg js dec xchg nop in (bad) (bad) ret inc pop mov mov inc test lret and test mov ret (bad) mov ljmp mov pop jg (bad) hlt mov mov mov push xor and pop idivb xchg mov mov mov arpl push insl test in add cmp dec adc jg lahf in add xor ret std pop js or jb push adc sarb jg sbb (bad) fwait add movsb or ljmp loopne jp or mov xchg fstpt fdiv jmp loop jg cltd popf fstpl push cmp pop dec push mov aad jnp sub jg adc mov stos bound sbb out mov cmpsb mov fnstsw push xlat aas mov jnp xchg pop pop js (bad) ror arpl addr16 outsl mov in xchg inc ret aad cli inc xchg out mov mov std divb (bad) push sub jg mov xchg sbb test cs pop mov add jg sub mov out mov sbb test xchg jg imul and (bad) xor cld mov jge jno and adc jg test cwtl adc xlat fwait pop push dec push insl test jns dec or xchg add (bad) jbe push jg scas arpl jo mov jg mov jae sahf popa jecxz mov les jg js pop jne ret cwtl jg (bad) (bad) enter lret inc shrb in imul xor (bad) (bad) jg add inc sbb mov adc jg (bad) pop add jg push mov jg inc dec or cltd lds jl movsl ds mov pop pop xchg inc insb xchg jg in sbb (bad) jecxz jg pop mov loopne outsb and es xchg js or pop insb out data16 lds push jecxz sub jg xor jno or scas jg bound (bad) addr16 ss rcll data16 lock pop jp pop pop fistpll sbb sti scas loope mov push shlb or inc or or je jg mov add (bad) cmc sarl pushf mov or lea mov out pop sarb dec dec fidivr popf jl cmpsb mov jle popa pop xchg sti mov pop iret add fidivrl dec xchg add andl ds mov mov sub fdivrp out mov or pop push push insl into xchg push jle push jg xor lcall or jg insb push cmp hlt fisubrl imul dec xor popa insl cmp pop lret mov jl mov rorl jg movsl pop push (bad) and mov pop pop mov jg lods popa push clc bound sar jle and fdivl or mov sbb inc cmpsl jg cltd xor dec dec push jg (bad) das daa test sbb jg cs insb jg dec mov or or cmp xor push xor jmp out outsb mov sub aad cltd mov or jle mov jg jns andb shrb dec aas inc jg xchg dec jg negb push push lds ds dec xchg lret aam lods xchg ljmp sbb adcl jmp sbb adc out jae cwtl mov xchg xor shl xchg sub adc cmp push movsl sti cmpsb jle fs lock fcoml idivl sub xor inc or jbe add mov cltd mov ret imul mov mov sbb outsl and mov faddl loopne push push sub aaa in dec cmp mov out jg mov pop xor stos js imul push sub out fstpl xor mov mov pop pop and jl mov mov into or pop je push aas inc pop icebp xor push je add lock sub aas jmp (bad) rep mov jae loop jns gs sub bound hlt iret dec into aaa mov cwtl mov pop adc out add jg jne or sub jnp sti push push ljmp fbstp cmp call inc adc imul scas jmp inc sbb mov (bad) aaa or dec iret fcomi cmpsb (bad) jg lock pop cmp jg inc xor dec decl shlb cmp pop f2xm1 test inc aaa sbb and cmp fwait xchg push (bad) aam mov jg cmc xchg cmp or mov or idivb xchg out xchg pop pop and mov pop adc sbb mov pop fstps inc aaa and push cli cmp sarb lea dec jecxz mov icebp imul in popa jo (bad) sbb dec add ja mov les lahf inc jg pop mov sub mov inc push mov push ret inc popf jg dec (bad) insb add test iret lods rcll jg dec jmp push pop in test sbb dec dec mov xor clc jg nop scas cmp rclb lods dec inc insl xor mov cltd jg pop stos mov jbe paddw mov test and pop push xor pusha push rorl push push push in (bad) jg inc ljmp sbbl imul mov enter mov test jl ja,pt xchg mov mov mov pop push jecxz xchg cli iret mov scas xor cltd mov dec lods dec dec mov jno jecxz cli jg dec rol loope insb jg jmp mov test ret pop mov pop repz mov test aad popf pop pop mov addr16 test out inc out fwait (bad) jg xor pop adc mov xlat mov notb in sbb (bad) mov lret jg outsl test mov push and inc pop aas sbb (bad) hlt jp inc imul cmp cwtl adc aas insb pusha jb inc fdivrp pop sub inc jg divl daa fsub ja arpl lods ja jg mov imul aad lcall push adc mov maskmovq imull fstpl jae ret jg xor mov inc dec xor jno push pushf les jle inc dec icebp jg gs and jg fsubr pop js aaa in lods sub mov mov lea in mov sbb pop stc lea les (bad) push sarb aas cmc imul jb aad push fisttpl xchg dec cmp nop aas inc adc add jmp jg ja jl bound push jg scas xor clc pop mov jg xor out cmp push xchg adc add dec (bad) cwtl std push adc scas push sbb mov cmp inc das es and hlt mov push cmp jg jp pop cmp sbb xor insl int3 mov bound push fs das dec into outsb jg faddp inc mov insl scas mov or inc xor jg cmp pop mulb popf or jg shrb adc xchg jecxz repz mov adc cld cli mov sbb hlt jg mov loop jnp push jg (bad) (bad) mov inc scas lods jg enter sub cmp jb cmpl out sarl pop mov inc sbb dec xlat mov inc sbb idivb cmovae aas push (bad) jns nop mov repz inc jae mov push outsl jle push cmp je divl js push mov pop addr16 or jg and clc xchg mov dec xor (bad) test out je insl pop add scas push or xchg xor (bad) sub push cs jmp jg mov cmp sub aad stc lds inc inc cli jmp jg and push fisubl pop cmp jg mov xlat sarl sbb mov jp jg cmp and lock mov add int3 gs xchg aaa fistp jg and std xor inc jle (bad) sti and jmp mov aas jg in sbb sub adcl cmp pushf mov insl mov jbe daa jg jmp imul fimull push in mov dec outsl sbbl (bad) pop (bad) dec sti std and push inc fimul pop inc sbb (bad) mov out jg dec adc jg aam jp test lea xchg jg inc mov add mov push add mov xor lcall inc fidivrl fistl push int3 pop sarb addr16 loopne and stos jg icebp fldenv push xchg inc in push dec push xchg jp ds stos mov jg and aaa and fsubs in add push cmpsb insl movsl (bad) pop jg sbb daa and mov shlb mov mov loope mov jno mov bound pop sbb mov or add lahf inc cltd insl mov dec shrb pop cmc addr16 jle loope xor mov mov outsl bound (bad) jg pushf sbb adc and jb (bad) int roll push cs jg out push aas mov (bad) outsl hlt cmp fisttpl mov sbb cld pop add push je test jg adc adc scas add movsl push sbb jg inc stc xor pushf stos cmp call out push inc xchg in jg fsubr mov jg fcomps lds aas lcall inc xor cmp jns sti pop dec mov pop sbb stos mov cmpsb outsl inc push xor inc negb jne jg lds js repnz mov xchg dec adc pop fs stc ja xchg jo inc inc dec sti jg leave adc jmp lods scas movsl add jg in lea das mov (bad) js int3 jg fdivl inc jg mov dec (bad) lock sbb insl add push jg dec dec dec call sbb mov dec cltd movsl frstor insb (bad) push sbb push jne jb lahf xchg jg aad fildl in push loope jecxz cld push mov mov mov add test je stc mov cmpsb xchg xchg jns jmp jg and jnp cmp cltd mov pop pop outsl pop adc xchg imul aas mov sahf jg cmp jb jg mov stos (bad) std jg pop push mov mov jg lret mov scas scas bnd bts sahf ret pop or inc fsts pop loop (bad) popf inc jg lcall jg add and mov jg xor int3 mov and pop movsl xchg int pop mov mov dec xchg inc pop in xchg mov jmp (bad) or jg (bad) rorb sbb loopne mov hlt in mov out pop fldenv push jg add into ja movsb ret jg int adc pop jg lcall jg out push add adc ret loope lods xchg (bad) (bad) or lahf (bad) aad lock xchg pop mov sub push lcall xchg pop arpl (bad) sti stos cmpsl xchg sub and mov push push addl push xchg sbb cmpsl adc loop xchg mov lahf jp xchg xchg push jg push pop inc ret dec jne cld xchg or cmp dec pop in out stos dec jg jbe push adc repnz pop aas out ja das lea pushf movsl dec push cmc xchg mov cmp push rcl cwtl pop xchg sbbb sahf scas pop mov sub jg std cmp fadd (bad) xchg cmpsb test jp int3 mov xor mov xchg mov dec inc and jg cltd cli fimull xor pop mov fldcw add fsubrl xchg jg mov xor pusha mov sahf push icebp std scas jae jg pop and xchg jg shll pop jg mov jle jg mov into ret xor jg mov shll cmc pop pusha push mov (bad) jno cmp adc inc jo scas cmc and push bnd sarb lret cmpl insb jg sub lock xor cmp (bad) (bad) out cld jg sbb sub pop dec jg jecxz cmp mov push addr16 add and scas or sbb ljmp fs adc jg xchg sbb testl xor out jg iret fwait adc mov fsub lods push aaa lcall sub jg hlt int lock or loop xchg adc jg std adc test aas push adc xor es into jns add sub inc dec leave repz mov jb lea mov stc sub jg js and push inc inc pop jecxz outsl lods dec ja popa push dec jbe clc adc jg and out sarl jl jae sub push test shrb js aam jg iret and les jg xchg mov jle arpl outsl test fwait or fcom mov lret push dec stc fist and xchg xor mov leave ds pop (bad) aaa std mov mov les jg aas insl scas mov sbb jg pop cmp jno add lods loop xchg rep daa lret mov mov mov lea addl jg hlt aad (bad) inc jle lock inc sbb mov inc dec dec jns cmp sub dec sbb jle in jg mov inc aaa mov inc or mov add bound xor adc fmull fnstsw out jns test xchg inc pop jg cmp test in inc aas cli je call pusha (bad) mov jg rcrb pop fsub push ficoml mov cli cmp clc jg pushf cmpsl sbb sub jg and imul adc loope push mov mov xchg sub sbb dec rcrl pop sub jecxz jg jnp cmpsl popf mov lods (bad) fisub xor jg aaa leave cmp jb (bad) (bad) mov and jne out mov mov addr16 xchg das mov inc movsb jg repnz cwtl rcrl popf jg je mov mov push arpl mov jg out scas sti hlt ss jmp dec sub call insb aaa icebp pop arpl lods jg xchg loope jg (bad) add or inc add jbe ds leave mov mov ffreep jg ss in pop sti jecxz lret imul outsb mov jg cmp xor stc sub dec loop iret dec and enter pop insl jnp jne xchg push mov inc jg fstl loop stos mov mov push mov out xor sub or imul scas dec inc jg pop pushf fdivs mov pop dec mov (bad) or sub sbb inc mov aas jbe loopne jno fnstsw in xor lcall es sbb mov cmp jg xor pop sbb es xlat (bad) clc icebp add jg int loopne sub aas add xchg jmp lds cmp add xchg aad mov lods push (bad) cmp jg or lock push (bad) jg xlat cmp sarb push adc clc jge and jg pop cld call mov push jnp xor outsb mov jb stos cs popa mov cli inc movsl add jg push fstp shll push jg loopne fs popa loop pop pop inc ret and lds imul jg mov and js mov push jo sbb adc outsb xor jg pop lret sbb push and pushf add lods xchg lret popa sti lcall jbe sahf lds jg inc cld xchg push lret xor mov xchg rcrl jl add jg insb (bad) xor pop push fsubrs mov pop adc cmp adc pop vmovaps pop cmp ss sub push sub cld inc cmp cmp inc jae jge sbb fstpl pop incb cwtl xor rcl sbb test dec ja jg call in mov aas mov cmp or js popf mov xchg scas cmp dec jg sbb jg mov or dec fldcw push push mov jg fcmovne cld stc push xlat and std sbb ret lea jg mov (bad) dec add mov shrl clc sub hlt lea int3 dec inc imul ja or mov (bad) jg addr16 sbb outsl imul inc loop (bad) jg hlt sbb jne fistpll jo mov aas outsl in mov sbb or je mov andb addr16 mov movsb adc lea fwait fs jg into push pop cmp sbb jge in push xor mov inc ss mov xor jle jg outsl movsb in sahf inc repnz dec sbb xor pop xchg dec mov test ss repz aas mov sbb jb inc (bad) sti out lods shll punpckhbw jg add repnz dec mov and out mov mov xlat scas std aas iret pop mov dec in fdivrs into aad xlat call push or jno jnp lret out sbb (bad) lods fisubl in js push add loopne daa ret jg stc or xlat inc dec mov push cld enter mov sahf clc push push inc lea imulb push adc xor xchg js xchg dec jg (bad) mov pushf js movsl aam jecxz lahf xchg mov sbb or mov in aad jg pushf mov arpl dec and ret jg mov loopne ret mov (bad) ja mov es cs jg pop xchg adcl lret jg incb sub and pop das push ds mov jg pop aaa movsl mov jg hlt xlat (bad) jae dec mov mov sahf cmp sub jg pop sar mov mov xchg in and push and mov push sub aam (bad) jp,pt sbb (bad) cmp jae xchg (bad) sbb hlt shrl jg in dec pop cmp (bad) adc jg popa adcb je lods mov sahf fs push mov dec add fs jg sbb inc xor jg dec mov mov insl pop js push clc scas lret aam sbb add mov (bad) jae and dec mov js nop inc pop cwtl dec aas push jge loop push call inc aaa jg in pop pop xchg repnz cmpsb outsl xor adc cmc es push jg std movsl fs jg jae fcoml xchg and inc dec cmpsl dec leave sub sti or sub arpl adc rcll xchg jg mov jbe and ja test adc add mov pusha jg or out dec aaa jg push int push pop lods out mov inc cltd push mov inc (bad) push jmp mov outsl mov int sarl je mov xchg push jg jl arpl cmp jg and std divl mov lcall (bad) leave xchg xchg lods je jg (bad) mov add pop jg jge (bad) repz cmp or inc xlat xchg sub mov jge popa fidivr in mov sti mov xchg mov (bad) jg inc and jg push fstpl jg aad ljmp cmp pushf roll mov xlat sbb int mov mov sub mov lock ret sahf pop jae mov fistp dec leave pop popf faddl mull push push jae mov pop ja jl cmp inc push jg or and sub or xchg je jg scas repz imul mov cs and call pop cmpsb or lret and jg cmp icebp lds pop jg xlat mov xchg rclb cmp movsb repnz jg dec push cmp xlat mov mov pop jg xor add jg arpl das and pop xchg fildl aas push sbb mov jg test jp jg stos pop outsb push movb xchg mov test pop jg xor loop jg mov outsl jecxz jg,pn add pusha nop cmp lock rcrl ret loope daa pop add pop mov roll pmulhuw mov clc push test push mov aam ret fdivr out or xchg add fistl imul xor xchg repnz pop or lahf ds aad dec dec das call (bad) daa and loop (bad) sbb jp fidiv in jbe push arpl push jg jno lock or aaa xor dec jg push xchg pop or jl adc jae (bad) lahf call lret imull adc int3 xchg outsl stos sahf adc daa aas mov inc (bad) mov mov fistpll ret frstor xchg (bad) and add xchg fsts divl lcall (bad) (bad) cmc call ret mov push pushf idiv pop out jmp mov xchg xchg test shrl push jg aad aam pop leave add outsb (bad) test cmp cmp outsl sarl xchg mov in pop push ds jno pop (bad) notl in bswap jmp movsl mov jp jg les cmpsl fidiv xchg cld pop outsl sarb inc (bad) jg out cmpsl fs add addr16 fiadd sbb jg adc sub mov dec dec sub jno cmpsl jp jg xor sub jg (bad) enter mov cltd jne pop or jg fisttpll sahf sbb ljmp bound jmp mov hlt jg add jg jmp (bad) cmp inc stos push push jg daa aas fucomp imul mov push pop dec (bad) cli jg fwait mov sbb mov (bad) or xchg mov sbb paddusw or push mov popf cmp dec pop test cmpl pop jecxz movsl push loop cmpsb clc cmp jo jbe int3 mov inc mov insb test xor loope jg aaa out pop jmp sbb cmp jl jg (bad) std push pop xchg (bad) jg sbb xchg fdivs mov jg xchg adc pop icebp cmp xor sbb pusha or lcall sti int3 sub loope insl repz lahf sarb sbb dec inc cmp jg and aas (bad) out js mov dec sbb jae xor shlb (bad) inc jg js mov xor jg push sti or mov lods dec ja and cmp dec or int3 arpl jg movsl ja jnp daa hlt pop add in out adc loopne dec jg pop int3 and dec xlat jp scas test test lods push arpl enter mov xlat pop jae data16 les (bad) mov shlb js mov xchg (bad) cli movq mov leave int3 inc pop sbb std inc add sbb inc lods aas xor pop movsl aam ret inc jae out and mov fsubs mov (bad) pop in fwait lcall cld pop insl (bad) int3 jg jo test insb fdiv jg idivl (bad) es icebp imul jg push fldln2 or out add xchg in test (bad) or jo mov pop mov mov mov test cltd cld popa mov ja in inc lock sar out pop in sbb jg add ss mov jg rep xor fstl insb pop jne cltd call rcrb jg pop dec pusha mov mov and aam shll insl icebp out and outsl nop jmp fcoml mull or or dec xchg jg adc jg cmpsb push mov int3 cltd inc imul cmp aam cmpl cli mov jne fsubrl or jg push push mov jg mov or and aad outsb repz movsb aas inc cmc sub push mov sti dec nop je movsl in pop mov sbb adc cmc jbe,pt cmp add popa cld mov sbb cmc cmp pop push cmp mov aam enter outsb int3 insl inc add cmc jg das cmp jg nop (bad) jbe push pusha sbb lea ss or loope cmc ret stc mov jle jl and push and fsubrs popa mov push sub cmc lret daa jnp lcall jo loope inc out addl (bad) mov imul or cmp je jge ret fst or clc mov adcb lcall mov push push hlt and mov inc and mov mov jnp roll xchg inc inc adc jg stos cltd jmp enter push xchg cmpsl mov inc scas cmpsl add imul shrl mov jg xchg mov lea mov jae jno test fdivrp fsubrl push jge sub jg add outsl dec inc mov out mov scas js or sub rcrb loop jg mov cmp lret mov and inc pop mov push pop mov push inc dec jg xor jo mov fidivr lahf enter sbb inc mov mov loop inc divb jecxz inc sbb lock popf aam mov mov test mov int3 inc cmp shrl bswap ljmp push sbb push sub and js dec outsl fsubs jg insb cli mov or xorl aas shl adc addr16 fnstcw int sub lahf add insb pop leave adc jg inc mov movsb jg stc ficom les int js sub fildl pop mov inc scas jo pop xchg add dec test leave cltd jg std add mov adcb in repz add je out xchg mov adc pop outsl imul leave push arpl and test inc dec pop aas outsl and bound fidivr jno lea dec enter adc in mov jno jg arpl jle inc cmc imul xchg dec js mov push sub mov jle push jnp jg,pt pop mov les fnsave sbb cs cmpsl add ds and aas dec fidiv jge bound jb leave dec popa pop and sub pop xor jg mov sub mov jp aad leave push aas out (bad) fiadd orl jg cmp jmp int3 add pop mov clc jg mov (bad) inc dec adc add popf test xchg or sub xchg sub pop outsb aas add jle dec ds jg sub sahf fidivrl sub and add stc mov rep sti dec out test push aas adc lret mov add dec in (bad) fdivrs xchg cmpsb daa ret add int jbe mov xor dec ficom mov mov lcall add xchg cmpsl mov test test scas jg gs xor (bad) push mov jg cmpsl ret ljmp mov xor push adc adc das idiv adc sarl sarl dec mov jg mov jge lahf mov sub clc bound dec stc xor xor xchg roll lret fwait call inc roll pop sbb aam jg jmp mov leave mov lds jno xchg pop mov cmp jg (bad) mov aas dec test add loopne dec adc mov and cmpsl add jl mov (bad) mov mov mov xor aam mov push push xchg dec in das fidivr dec xlat mov dec stc dec mov je jg sub js addr16 or fadds dec sbb mov repz xor pop mov andl pop lock cmpsl imul clc cmc mov dec sub std leave outsb dec pop enter mov sti scas or inc dec outsl jle adc pop les jl lods jbe jg pop inc rclb repz jg mov inc adc testl test ficompl stos mov dec fidivr out jge jg (bad) sub sub mov js mov and mov lret or inc int3 roll push arpl mov into lret mov inc inc xchg stos std mov xlat add jnp sarl xor fisttpl cmp outsl or psubusb sahf stos lock out dec stos dec jg fwait in xor gs mov dec dec outsb lods in mov cmp cmp xchg jg adc jns mov fdivr inc mov dec xchg mov ljmp cmp mov and xor daa jg push imul mov inc cli xor lds jg jno pop test jg xchg jl xor (bad) xchg repz data16 inc fmuls ja mov inc inc scas jg and jmp imul imul jge rcrl xchg push out dec xor outsb jmp (bad) jb pop mov jg push adc xchg pop ret cmp dec repz daa imul add push sub mov movsb xchg jg mov pop popa jg sbb mov mov add cmp and pop popa lods aas jg xchg sarb out clc jnp fwait push ss out sub pop xchg (bad) icebp dec test lock sub (bad) jp cmpsb lcall push (bad) pop sub jg popa adc push pop jl jg dec mov xor and sub jg das out fidivr add jg pop roll jg xchg mov jo lret ljmp out cmp xor into or test (bad) and mov xchg imul mov insl aam push fmuls outsl inc xchg jae dec mov out mov xor fimul push in xchg jbe fmuls ljmp or popf pop jg sub or movsb imul (bad) bound lahf mov insl test cmpsl adc pop repz cmp dec shll orl (bad) or inc mov js mov out lea aaa fsubs inc add jg and fistpll mull xchg mov dec shl jp pop (bad) addr16 push (bad) stos (bad) scas pop inc jg movsl lea loope ret out stc in sub call fimul les jg pop inc shrb mov dec and (bad) arpl test pop ficoml out add add pop push aas inc jae sub loopne pop inc ja dec inc mov ds or xchg mov push outsl xchg nop sub lods outsl lret xorb jg ja aad imul sti add aam add adc push fs stc fwait pop cmp leave shlb mov sub (bad) icebp sti aam or xlat call rclb lahf hlt data16 mov or mov lcall pop pop inc loope mov jg xor pop insb aas sbb jmp xchg outsl xchg test jg lret cld or (bad) daa das mov pop aam aas and or add stos arpl mov or and out fistl jg into adc mov stos cmp jbe out stc out int3 jmp inc enter mov daa mov xor inc inc add ljmp movsl xchg xor (bad) mov mov inc cmp dec (bad) flds popf sarb fadd lods out mov jns and inc inc aam or jnp jecxz inc (bad) bnd xlat ret jne je fwait mov iret mov push xchg in icebp mov movsl rorb jecxz les popw jle dec pop incb and adc push sub jg xchg insb dec int3 stos lock pop out popf xor fcmovnb inc idivl jg int or lcall aas pop inc push push pop xor inc sub jg jno (bad) jns xor fwait shr fsubp jae test sub ret jmp test xor pusha ss arpl scas sbb (bad) mov inc xor aas stc mulb (bad) mov cmp xorb sub jg mov jae in jg fwait (bad) arpl mov loopne mov dec (bad) pop cld cwtl lret fidivr or dec inc push mov sahf inc gs push scas mov mov add daa cmp mov aad mov and mov mov cmp pop popa cld dec (bad) jmp cwtl scas ja addr16 add ret clc and testb les ljmp in scas int3 test mov fsts xchg movsl sbb test inc fisttpll jmp jno mov xchg imul lds xchg inc lret dec aaa mov sti mov push jg and xchg mov mov pop or out and rclb inc sbb mov mov adc (bad) xchg jecxz das dec es mov jg lea adc mov in decb (bad) mov cs push enter cld das xor ja jg jle loopne jns aam pop cmp sti into mov (bad) arpl or jb fsubrs mov or pop fwait (bad) cli jg mov and idiv cmpsl (bad) outsl dec add jg aad cwtl rorl pop int3 data16 push sbb into frstor repz xlat clc adc jg jp adc mov mov jbe les xor pop aas jbe fcmovb dec test jg ss xchg dec xor inc mov mov or mov sub xor add (bad) jg mov les cmc mov adc xor sub lret lcall sub ja,pt cmpsl fistp mov mov ret dec push jae jg addr16 jmp jg cli add lret dec xchg (bad) in scas enter (bad) pop mov mov mov daa rcrb aam ret (bad) je cmp add imul jg inc sub push adc pop mov shrb movsb xchg jg ljmp xchg adc xchg mov jmp xlat lret cmp or inc cmp daa and push outsb lds fstpl jg (bad) jb and jmp popf adc test bnd (bad) shl outsl jae mov mov inc aad xor mov lods int3 push (bad) pop jg pusha cli mov pop sbb jg dec push in add jg mov add jge jae mov mul sahf jg adc add pop dec mov push lds inc stos mov xor adc jns jg das aas sbbl inc rcrl adc mov lea inc enter sahf lret and (bad) les rorl pop pop or stc or cli daa cmc out push dec mov shrb cmp jg mov aaa xor daa cli push outsl mov outsb dec sti stc insb int outsb or fidiv xor and mov mov jg cmpsl in cmp mov or jg jmp imul pop mov mov loope (bad) or in pop pop xor pop jae movsb push rclb jmp jg inc push mov and jg sbb arpl jg cmp fidivl mov jg mov mov cmpsb aam inc (bad) dec cwtl pop or inc fistpll rcrb cs xchg (bad) jge and jg and (bad) (bad) sub xor inc dec repnz cld repz inc xchg xchg push aas jle mov dec pop es jbe test icebp dec popf jg mull or dec pushf xor jg xchg std lods push push jg rorb or lods js in xchg aam mov dec inc sbb in jg outsb sbb rcll loopne jo mov adc sbb out sbb loope jl ja bound xchg test jg adc jb add rorb sub mov (bad) push popa inc mov pop lret jg in mov ret jg inc js repnz lahf cmp dec roll lock cltd loopne test js cli xchg dec and jg fdivp pop loopne (bad) int sar ret out addr16 pusha stc popa jg mov (bad) dec inc push sub cld jp out decl icebp js mov outsl jo add out lea dec adc jg jecxz,pn mov sub sahf fdivrs in mov aaa insl andb scas dec mov pop rorb ja lahf xchg pop mov jg cmp dec jg pop sbb (bad) jg cmp jg into mov jg,pn adc iret cmp fidivl stos adc int3 std cmp pop fstpl insb paddusw pop or dec dec xchg gs adc lahf enter nop mov mov jl pop in je rcrb ds mov aas mov sub arpl jg xor jbe mov mov sub push xchg sbb and jg dec mov inc ret adc jg xor sbb pop test and push hlt shl in out std lock shlb (bad) sub aas mov popf (bad) pop jg cwtl arpl mov lods sub mov mov loopne dec or mov pop lock cmp jg rclb jns imul jg out imull fisttpll movq and mov mov cmc aam enter inc add mov cmp jg (bad) stc loopne je xchg jg inc xchg das pusha scas adc sub xchg pop lret jg adc outsb (bad) repz push test dec out xchg aam jg xor addb jg addr16 lret adc (bad) repnz xor xchg cmp xchg xchg pop mov pop loopne pop push call pop push mov sub jg cmp mov (bad) jo jae addr16 sti lea and movsl jne aad mov into mov dec pop cli mov xor inc fldenv jns mov lahf jg and mov jg cli (bad) hlt aas cmp inc pop pop sbb xchg lcall adc leave lret daa dec ja mov insb add mov cmp push jbe push mov jg int3 or dec push ljmp cmp mov arpl (bad) gs mov push aaa sub int mov rcll dec hlt js xlat fs arpl fwait pop cmp repz ret sar pop movsl test out test lret xor add (bad) dec inc jp mov aad int3 mov mov and xor je inc es or jns mov jg mov pusha push jg testb jg or clc jl adc fdivrs jmp sub pop cld push fnstsw call jg jno xlat fist test das push test in mov cld cmp sti jg popa add sub lock pop test jle cmp pop push adc sti test mov sbb inc movsl mov cwtl dec repz inc pusha std jg adc lods sbb inc sub mov push jmp sti pop jg (bad) xor rorl jne cmp fwait ja dec add mov arpl ret jae outsl aam mov (bad) pop mov in jg out shrl mov icebp jg dec test clc insb leave fistpll mov dec mov push pop jg movsl (bad) pusha adc push leave jg mov scas mov fist pop icebp mov push cmpsl jg xchg (bad) aad mov and cmp cmp sbb roll outsl lret or jg idiv call insl dec mov jno movb inc loop push imul out jg mov hlt out xor pop cmpl mov jge cltd mov pop push pop mov stos mov dec mov mov addr16 adc pop ds xor mov ja or adc aas loopne inc pop inc jg jle lcall dec in scas popf nop call add xchg cmp aam pop xor pop (bad) into (bad) cmp dec stos push jmp adc pushf ja push inc addr16 jg mov push int inc fwait inc lahf mov sub lock sub sbb nop inc xchg or idivl (bad) fidivr push sub negl (bad) jg sbb je cmpsl les push (bad) pop scas push js jg call ret mov and cwtl cmpsl movsb jg sub (bad) out daa xor sub or add stos adcl nop mov fbstp xchg mov leave cmc and data16 cmpsl push or xchg sbb mov aas mov xor shrl das pop xchg sti inc pop and or push sarb movsl and shrl out les in js out jg xchg pusha outsb rol (bad) cmpsb push lock jg mov mov movsb ds adc cmc cwtl dec sub fucomi inc arpl stos push push jg jge pop das pop lcall outsb dec mov jg fsubs arpl jg (bad) (bad) test nop or jbe mov jg adc ljmp lcall inc mov ret push jg jns pop lret fnstcw mov addr16 cli xchg sub gs inc lret mov call sub jg pop aaa ss fs dec js ljmp movl int inc sti sub fimul mov push mov sbb loop repz pop test sub fisub xchg push jg or insl add push dec pop mov ja jg pop mov mov sub pop sub lahf lock adc inc int3 xchg mov xor or pop pop in cmpl into rclb or scas jg and cmp inc inc pop insb mov scas push fwait pop outsl test cmp (bad) movsl pop jge adc xchg mov test imul jg mov (bad) iret xchg fs inc sahf xchg mov pop mov mov sti xchg jno fnstcw outsb pop popa cmp jecxz jg lea cwtl or decb jg lret jle scas add stc (bad) (bad) iret inc dec sub dec out xchg loope sub dec adc repz sbb jg jbe mov ret ds ficompl in dec cmpsl mov inc lea loopne aas lods add les mov add inc xor mov xor in sub shrl inc mov ja adc mov fptan jg mov push xchg sahf addr16 jg lcall jg pop adc pop jg lods movsb ss mov outsl xchg cmp mov mov xchg stos pop push lods or or loopne shl jbe inc lods or xchg push out ror insl pop add leave sub or dec or addb add dec sub (bad) (bad) mov mov mov dec adc mov loope adc pop ljmp push outsb or inc fnstcw (bad) ljmp aam sbb notb jg and fidivrl imul icebp sub aas lahf push inc cli sbb (bad) std lods dec and cmp xlat mov cmp in enter imul ljmp mov aas mov xor mov jge ret dec gs pop mov push jns push xor jnp or mov sti dec mov add rolb add test loope lret sahf and inc jbe cmp push push mov jno push or jg cmc in lods adc jg lea ret lcall pop pushf push jle subb inc jg arpl fstpt imul repnz les inc je mov insl push jg add jg and sbbl test inc lcall jg out jns outsb nop in add push sbb jnp mov inc cld cmpsb jo sahf mov pop mov mov xor push xor out jg,pt aaa cmc (bad) jns fidivr mov xchg imul pop test adc in jp xor scas jp push cli imul pop icebp into test inc jg lret arpl das scas jg or mov loop ret jg sub fldcw movb mov jne pop bound mov adc inc mull sub pop call add ret sbb mov push mov pop jg dec lcall inc je and outsb sahf in pop or inc jg xchg xlat cld jge pop int xor popf das mov cmp arpl (bad) mov insb lahf cmp sti jmp mov inc jg fs inc test lahf cmp jbe (bad) xchg in inc (bad) cmp (bad) jae dec test sbb jg mov jg xchg and add lods adc push jg aaa ljmp popf dec cltd and jno (bad) jbe (bad) cld dec sti rorb push jg nop and sti mov stos jns cmpsl and jo jg pop adc and or gs sbb inc ja mov push mov pop clc test jo sbb cpuid test pop mov cmc out sahf pop pop jg xchg outsl cmpsl mov sub call cs dec adc push (bad) movsb sti cmp xchg loopne cmp jg repnz fidivr subps mov xchg jg (bad) dec fwait push clc add pop lcall mov and inc xchg cmp jg stos int3 push xor sub orl shl rcrl fs push and (bad) push pop add sub mov enter xor int3 mov add btr mov pop dec dec add fnstcw jo mov repz das mov popa jnp fwait adc cwtl out int3 pushf pop mov stos sbb jbe inc xor insl pop data16 cltd ds and mov adcb jne xor int jae jg loop test cmp lret dec xchg les (bad) es and (bad) add call out pop test cld or cmpsl imul mov lods ds cmp mov insl dec mov jbe jnp addr16 fstpt mov (bad) xor sub inc xlat pusha sub mov in jbe js mov dec sub imul in mov dec popa inc rcrl repz addl xor (bad) jp dec push add push xor add in jge cwtl add stos adc and sub rorb push lret cmp mov pop sub stos dec es mov push divl jg imul jae cmp ret aas ret cmp inc and mov lods insl iret mov adc call jg or mov rcll jg cs ret mov xor push addr16 scas xchg push aad inc test xchg repnz cmp loopne jg jge loopne push pop pop data16 je adc mov jg push pop movsl xor in insb inc pop mov pop mov divl hlt or es cli inc jae push inc inc sarl mov adc jg mov fbld fsubrl pop (bad) mov insl pusha ja xchg test (bad) or adc (bad) jle sarb mov or stos popf and pop inc (bad) xor (bad) jnp call jno ss add stos jae ret jg cmp pop das mov movsb addr16 push pop xchg xor mov mov xchg jg aad shrb dec and (bad) cmp outsl mov pusha sub out jmp jae cltd jb insl or ds sub loopne mov out inc lret das jmp ds stos pop dec imul jmp add fsts aaa scas fstpl sbb jnp xor jae pop scas dec daa jmp xor in mov pop push faddl mov adc test mov sbb sti jg push cli pop inc leave jg inc sub push jns jg in call jg push mov jg sub jecxz dec in mov mov jnp mov jge aaa bound out jg cmp mov (bad) mov scas mov jmp add mov stos ljmp mov cld out decb movsb inc sarl jg mov dec sahf jge cmp jg cwtl mov inc in sti int fbstp mov cmp mov mov xchg mov dec xchg insl lcall fs mov movsb inc test outsl out clc js mov gs popa arpl incl insl cltd in (bad) ja (bad) lock lahf cld jg or push push pushf test pop mov lods add cmc mov xchg jg jo pop sbb js incl dec adc mov ffreep jp add mov fnsave sub jns jg push mov and test jg sub lock mov mov (bad) es xchg xchg or mov mov hlt jno sbb ret insl jg ja sti and jb jg jge pop insb sub xchg jg in adc jg dec les cmovb clc mov xchg sbb add xchg dec mov popw ret call (bad) mov mov jl outsl ud1 pop sbb out jb loop inc mov push or jg jo xchg das imul mov lcall mov test out and xor push testb inc (bad) mov adc cmc cmpl sahf outsb mov insl imul popa fstpt push lcall jg sti or pushf mov xlat cmp ljmp cmp adc mov popa enter pop jg push adc or and inc mov sar inc xchg mov jg cwtl push xor xchg scas stos push pop inc fwait mov popa jo pop mov jg dec cmp sti (bad) mov sbb sub sbb hlt fimull (bad) jo clc (bad) out sub pop notb push arpl outsl clc pop sub (bad) cmp jp out (bad) jg or xchg sub jno xlat into mov repz cmpl jecxz rol js fildll xor outsb jne dec loop jg sub xchg inc fstl jb push jg repnz mov (bad) pop (bad) out xchg (bad) dec inc or ljmp shll push mov call mov xchg pop in mov aas cmc jge (bad) sub lret inc sub or movsl mov mov aaa inc pop repz jecxz xchg ret fildl jg pop xchg xor jle ljmp lahf lds mov jae (bad) out xor mov jg icebp xor push aas push rorl insb mov xor jne push dec aad jg neg call leave add movsb jg popa roll lea sti lods xchg xchg fwait mov rcrl add ljmp mov cmp sbb (bad) jg pop and sahf jl adc add jmp dec cmc cmpsl dec int3 jg (bad) lods in lock aas sub jge xchg (bad) or frstpm(287 jle jo push xchg inc insb mov notl dec outsl int dec enter aad fcomps leave push out push jg fsts dec pop jbe mov xchg pusha push cmp dec (bad) mov lahf (bad) loope push jo sarb pusha sbb dec jne and repnz push pop jle pop and cld (bad) (bad) sub mov daa inc and jmp hlt dec scas mov iret (bad) mov inc push jg mov jns jg fstps xor push jg sbb jno pop das shlb jnp insl inc arpl xchg xchg clc (bad) mov lahf jg leave aas popa data16 (bad) jg push jae sub cmc push or movsb or jns dec in jns and cs mov inc scas popf mov add xlat pop mov addr16 pop loop dec push push or xor (bad) stc das adc pop inc lea mov cmpb call dec jg test pop imul call jg mov test jg call out and xchg lds adcl and lods mov pop aas fsincos pop cmp jg adc fstpt shrb dec pop xchg jecxz mov cmpsb jae mov movd jg call sub aas pop inc ret (bad) jns lods inc inc fs adcl (bad) push test addr16 pop sahf jg or adc push cs jg add jg inc or jb mov jge cmp testl pop cwtl std mov dec fsubrl mull std lahf ja addr16 fs or jmp faddp cmp lahf loope sbb mov rol or mov ss push arpl lcall sbb xor mov and aaa mov int3 sub mov nop inc imul arpl pop iret jmp insb (bad) jg mov pop dec mov lret decb fnstcw pop idivl jmp outsl aaa push inc lcall or jg int outsl mov pusha (bad) mov aad cwtl add mov popf inc mov pop push ljmp aaa push xor and das fdivrl sbb mov xchg xor sti mov xchg inc sub jg cmpsb test test add pop dec arpl sub sbb mov test fmull dec jp mov pop addr16 push (bad) jg inc decb roll test cwtl xor pop pop xor daa inc add cld aam inc bound pop loop pop enter sub sti jg pop pop pop xor lahf jg cmp add inc jg adc xchg or add outsb pop mov scas out and in cld int adc and mov push gs pop gs outsb cmp pop int3 (bad) push out repnz push adc test cmpl push imul jg lea or mov pop mov push inc pushl test loope jmp xor sti in jg cmp inc fs and outsb (bad) push test jb mov popa add lahf (bad) jg add movsl fnstcw add push mov cmp fistl push adc popa es push cmp dec jg repnz and (bad) mov popa dec call xchg jp jno (bad) jg out cwtl sbb and inc std pop popa cs pop movsl pop mov dec adc add sbb sbb cmp sub or int aaa icebp outsl jg or jle xor mov jmp (bad) notl jg dec cmpsl jbe (bad) loop xlat ja cmp sub jg fcom pop jle dec mov pop shlb aad adc (bad) mov cmp inc mov xchg jp fisttp jb fnstsw adc sbb mov cmp add jne xchg ljmp insb jg push and xchg je pop ss cli ja test cld jg in pop rorb loopne fildl jg shrl (bad) mov gs or push mov sub (bad) pop jbe or fucomp jg in dec sbb jnp jg sub das cwtl outsb inc mov pop bound xor test and mov aas push std jl add dec sbb jg ds sbb jg cmpsb mov xchg jg outsl cmpsl lahf mov mov mov movsl jae lods inc sub push adc jle bound fldl stos push ds and add jg test mov xchg fadds movsb jg std addl dec dec pop in imul out test cmp std (bad) jg lds sahf jne xchg je movsl mov cmp jg xchg int call cmpl xor push mov or xchg jbe (bad) jg fstl out popa testl add cmc loopne test pop cmp push pop repz sub cmp xor sahf push js mov loope lods flds mov pop or jg cmc cmp loop inc jg and sub rcl dec lods sub pop inc cmpl dec cmp pop cmp push cmpsb (bad) jno jg dec mov jge mov or mov push inc inc into jg dec sbb movq adc mov xor sbb push cmc (bad) insl scas cmpl jb pushf mov push imul xchg movzwl xor mov pop fldl inc loop jg adc aam or movq out loope mov and arpl ss adc outsl aad jg push int3 lcall hlt cmpsl adc mov inc je push dec aas push fisubrl and lcall jnp fistl jg jne and notb push jg bound dec cwtl in hlt mov sarb mov fs xor or sub int3 gs xchg ret xchg pop out push mov loop in push xchg cmpl push add jg fmul (bad) outsl fisttpl adc loopne cmc fidivl cmpsb jg push fildll mov hlt inc mov or pop stos decb inc dec nop scas mov mov cld outsl aam pusha pop sahf push stc (bad) pop jg dec mov xlat xor push lcallw (bad) sti mov push into pop pushl mov enter gs icebp repz aaa addr16 ljmp movsb jnp dec call push movsl jg cmpsb dec add add jno xor inc addr16 xor mov mov jg std mov repz dec ret (bad) mov cmp cmp jg mov jg add neg insb or jg (bad) cwtl inc xchg outsl jbe jg and nop sub fwait sahf into call jg (bad) mov mov out loopne mov pop adc stc inc cmp pop push (bad) mov insb sbb jg inc adc aam out xchg fisub ja cmpsl add inc mov sbb iret jnp btr sbb push sahf (bad) in (bad) pop jg push mov sub xchg xor lock jg scas ss test or js fnstenv lds mov xor lea cmpsb out mov jg or mov xchg adc mov mov xchg es jo dec negb pop jg xor mov js xor mov mov jge sbb inc out in aas les ficompl adc mov cs pop jne daa rclb pop aas out out xchg icebp rcrl inc add xchg test xor jb xchg scas scas ror lret push add jle jl pushf aas mov leave mov push sbb dec or lcall push push or xlat inc cmp cmp mov xor std lahf mov xchg outsl popf adc loope push add movsb test mov mov mov cmp gs xchg dec pop add subl adc (bad) cmp out mov insl fildl int inc scas inc lods pop stos js push movsl lods pushl xlat aaa adc jg pop push jb arpl mov inc jg cltd hlt xor sti jbe jg aam (bad) xchg fdivs jg cltd pushf test adc adc jge dec loop movb pop adc jg mov mov sbb pop jg jbe stos insb es jge add iret xchg push shrb fidivr out cmp call mov jmp jg mov jle mov add in mov sti inc and leave jg mov lahf pop cld sub lcall sub int add pop cli and inc jg sbb pop and sub arpl jle mov sbbl inc dec sti mov stc jg xlat sbb sbbl and cmc paddd (bad) repnz pop jecxz xchg add fcoml and aam (bad) or mov fistpl hlt pop test jg fimull mov js xchg sbb mov pop pop inc mov jecxz inc into jns mov sbb cmp jg dec push or mov jb ljmp sub hlt dec (bad) jg das jne cmpsb iret (bad) in pusha (bad) fcmove xchg xchg aaa jg adc insl sbb ljmp sbb inc mov pop xchg adc dec xchg xor stos jb dec push test ja sbb push shlb mov sub imul mov dec add rcr jg add test scas jae sbb fwait xor cmc pop inc add roll xchg in sbb xchg jg mov not push dec jae movsl and outsl adc add mov ret jb,pn lods out mov and inc mov cmp popf dec pop mov nop jbe int jg lds fchs or jmp jg aad jo insb jb jg repz cmp clc mov bound jnp push push push cs mov sbb mov fnstcw push das repnz lcall jg cli (bad) mov scas xlat jg (bad) cld jbe sub jo inc pop cli icebp cmp adc jg inc adc cmpl xor ret xor xchg jbe inc repnz int3 shll push fwait stos push jg jb inc (bad) (bad) or inc jg pop jmp jo add imul movsl mov dec jecxz iret jb in add cwtl xor push pusha jg cld push inc ficoml in sub xchg jg add xchg push jg stos and mov insb hlt xchg fwait test adc pushf pop mov dec adc jg lahf clc xchg into daa xchg inc ljmp mov scas jg push insb sbb popa (bad) out dec dec mov pop arpl loopne lret adc mov lea js push inc pop jg clc ja pop mov icebp pusha (bad) pop fdivp (bad) movsl pop fistpl dec xchg into jg mov push sub mov push insb loop std jg lds lret xchg mov ja mov dec in sub popa adc and ficom jg in dec mov push mov mov mov inc ljmp mov fdivrs call nop sti and push xchg inc scas jae adc jg cmp inc out cmp jle or (bad) push adc out pop inc cli js dec movb jns cmpsl adc mov clc jmp cs outsl inc (bad) dec mov loop cmp je movsl jbe mov scas dec (bad) mov mov push mov addr16 inc mov mov push sti mov xchg out jle (bad) jg dec mov fstps (bad) mov mov or cmp in xchg inc in (bad) testl jb shrl sbb jg hlt paddq inc and push pop jg mov xchg (bad) pop insl jg push std or and mov nop push out jbe iret mov test inc loop negl xor outsl cmc outsb les icebp and bound or mov xchg sarl jae cwtl jg lret add inc mov mov mov push sub xadd repz loope ja in insb pop lea out xchg pop cmp xor mov jl shll rorl jns dec or cmpsl jg xor cmp sub mov test mov out jg xchg xor jg,pt roll mov movsb notl fisttpll cli jg pop cmpsb loope ss pop mov cmp mov inc cli jg movsl fist lock push jg fimull push ret in aam inc and mov xchg adc (bad) push jl fwait inc xor jg gs aaa in inc adc inc and xchg dec sub fadds pop adc jmp pop dec das adc mov and pop push jg adc daa push sbb cmc xor aam stos out aad lret (bad) (bad) in (bad) std addl sbb jg into add inc add jg lods stos xor jg stc roll inc sbb jmp dec dec cmp jg sub movsb lods or and xchg push std dec and jg cmpsl and push xchg and push dec stos add sysret pop clc inc mov pop fmull sarl test repz pop cld jg lret push mov bound int dec in jg jne test inc or cmp or mov stos jae jg push out lret je (bad) aaa aas call dec push cmpsb jg (bad) daa dec adc xchg sbb jg add imul arpl das insb jg push imul lret adc insl mov dec push jg inc pop hlt mov jl stos das (bad) sarl mov xchg jg mov mov sub pop lahf gs jg adc cmpsb jg lds into hlt or jg and jl jg xchg stc scas inc push sub xchg add scas (bad) xor (bad) mov movsb daa add mov and fildll inc mov sti out ds jnp pop outsb mov jge mov (bad) dec pusha lcall pop loope or jg jne adc popl dec lods jg out dec mov scas movsl jg push sbb stos adc fwait ljmp into pop dec cmp outsl test jb in dec (bad) pop mov jg mov mov inc mov lret add jno xchg js lahf scas adc cmpl adc mov fistpll (bad) (bad) mov cmpl (bad) dec pop xor fisubr xor push mov mov mov pushf sub push fidivr mov cmp hlt cmp mov std pop into adc sbb imul cmp jg enter dec in outsl test push jmp je stos mov add pop dec push mov push xor outsl rorb sub inc xor jae movsl (bad) mov cmp push mov mov inc jnp imul repz mov test xchg cmpsl cli or mov jg cwtl jae push icebp mov ljmp jb mov jg outsb xchg adc hlt add or jmp push lock nop jg iret xchg cmc pop outsb sbb iret pop js les pop mov jg int3 iret repz lock adc jbe jmp xlat inc mov jg (bad) outsl sub repnz jg xor cmp iret out sbb mov jg mov out stos (bad) jbe cmpsl add inc idivb popa and lcall cli xor sub sarb sbb xchg fbstp sub cltd lds jbe and mov scas popa or cmc sub clc enter mov jg jne ds fdivrs push mov std push mov xor dec dec jg add pop jg xlat cmc imul push cmp xor mov dec add xor add rorl mov xchg jns mov mov lds sub ljmp jl mov js aas cltd adc ret xor stos inc dec mov or insl sub cmpsb fdivrl inc pop adc cwtl xchg js mov dec cld inc mov rcrb mov pop fwait jg jne out aad mov imul push mov leave cmp test arpl outsb mov jg,pn (bad) gs in jg sub lods stos mov roll ja aam loopne pop sub jb mov jg es les mov jno add mov xor fwait mov les pop inc fdivp lods rcpps iret jp mov jnp outsl int3 (bad) repz jl test inc and hlt and xchg daa xor add xchg adc dec (bad) outsb jo jg pop std pop lock sub sbb jb xor xchg ja iret jg mov pop test stc xchg pop shlb push mov mov out test add jg dec repnz mov push aad pop outsb (bad) icebp dec jg xchg insb int sbb pop inc outsl push ljmp pushf shr jge mov dec or pop hlt movsl push sbb jg out imul push xchg jge and data16 repnz out cwtl loop pusha mov xchg push jge outsl mov incl loopne jg jo pop inc jle int push arpl pop les out sbb sub aas jmp fsubs inc dec movsl push and xchg adcl ret dec out or dec test mov pop inc into addr16 ljmp xor (bad) js mov (bad) (bad) jge outsb int and inc (bad) loopne mov fidivrl or lret pop roll pop push push pop lock ljmp and cmpsb inc aas push jb lahf inc shld ja outsl mov jecxz or mov rcll sbb cwtl imull lea repnz and int3 (bad) push cmp es cmp jg cwtl mov pop jg lcall mov mov inc daa (bad) imul bound xlat jg sahf (bad) xor and or jbe jg add int (bad) pusha add mov mov lods (bad) mov pop jg add test cmp into jo or out jg inc and jg data16 out stc insb mov lahf fs jg int xchg push dec or scas in lods jno loope ljmp sti cwtl std xchg aas das out inc mov push inc xchg jno in repnz cmp and lds pop (bad) lret jb mov repnz add test push dec leave or jae rcr xchg mov test jg push push (bad) loope sbb cmpsl jge jns lcall call jg movl movsl jno,pt lahf test ja sbb mov jne lock sub mov pop adc and sub ljmp imul cld dec xor cltd add nop dec mov mov rclb dec into shlb push jp jg cltd test scas push (bad) jg sub aas push jbe push dec xchg push (bad) mov jg sarb fs pop out xor movsl sahf mov mov xchg push jg add das scas lods pushf jg pop or lds push add jecxz das mov inc pop (bad) push dec hlt fsubs mov or imul je inc dec jg stos mov jb mov aad pop insb mov andb jne sub push xor xchg les scas mov daa loopne jns jg rcrl fild out sub pop sbb imul rorb ja cmp dec push cltd sarb imul adc xchg mov les push lea aas add lahf push or out cmpsb aaa and inc push mov pop mov sub ret jmp xor adc mov mov add jb dec (bad) pushf sbb pop sub call int roll or mov imul scas pop mov mov adc (bad) ja push jg divl mov mov pextrw dec jl adc popf push std pop lods push cmp sarl sahf jg adc clc test jg or push movsb push cmp arpl xchg inc shlb inc sub jbe jg push jae and or push sbbl adc jg mov add in aas mov fmull push fucomp xor mov mov outsb push scas push adc movsl sub xchg push jg mov mov fstl pop pop std sti idivl hlt xor jg test rorb jnp jg std call push jg or inc movsb aad loopne scas xchg test fdivrl sbb sub jle dec les add jecxz inc xchg inc push cmp jg sbb jge bound sbb lahf inc jne xor imul sub leave outsl dec inc or mov mov adc xlat arpl (bad) and jg sbbb (bad) popa mov pop pop fwait mov data16 aad fcmovnbe mov push jg cli loopne push cmpsb sbb jg xchg int3 sti cmp jg jbe pusha dec mov sub in cmpl push adc sub mov test fidivr mov aad lock mov imul addr16 aas daa pop push int fimull in rorl adc jg in out idivb xchg loope shr inc mov lds sti pusha xor roll lods cmp inc out mov or dec out mov jg mov test (bad) repz pop lret push push mov aaa push push in cmp cmp mov mov imul enter aam mov adc inc xchg aaa jg mov jg imulb push gs scas cld inc pop jmp sbb mov or jecxz or adc imul repz mov dec sub dec clc mov mov mov lcall mov mov aas sbb mov push push mov scas fistl jno jg insb mov jbe inc cmp mov jg stc shrb mov mov mov pop jg imul popl xchg outsl loop mov pop pop sub dec push jge jmp cmc mov jo cmp jecxz fcoml repz mov push stos jg mov fldl2e cmp jg dec push pushf test (bad) fwait jg adc in push mov mov jno jb jg jl mov jg push pop cmp dec or lcall jg pusha sub dec inc pop stc mov outsb pop sbb sub cmp cmpl xor lret inc and jg push cmp adc lea lahf es jg aam or mov test fstpl pop mov cli int3 dec jg sub loopne aas pop movsb cltd inc int pop inc xchg jg je cmp xchg push (bad) jg xor add jge mov scas lds cmp imul xor xchg xchg dec sub push inc jg leave adc les adc jg in sahf push or jb sub mov push jg xchg fwait and mov inc xchg inc (bad) cmp cwtl inc call (bad) insb jp ret cld cli mov sub xchg jns xor (bad) sub push push pop and inc sahf inc mov mov sbb xor and mov mov xor cmp mov fwait push mov jne out jg negl mov ret xor jae aam pop pop mov (bad) loop inc cmp aaa movsl xchg inc loop inc (bad) std cmp pop add faddp call in test ja cmpsb xchg jg jmp (bad) pop jg iret sbb inc xor leave xor sahf out (bad) stos ljmp les (bad) fbld mov jl dec lahf outsl jle mov sahf push cs mov cmp push repnz mov lcall cmpsl jg aad mov jg ret jbe popa cmp in aas lret in lods jg aad fldt add mov pop lods sbb loop,pt cmp jno pop shrl enter cmpsl mov adc lds or pop inc in jg and dec cmp and test pop enter subl dec fsub xchg js sub fidiv push jae call in sub inc jg push mov rep clc fs dec push into (bad) sub loope push out cmp (bad) dec push add add jg push jp mov ja jg les int3 mov into inc mov lcall jnp or das stos jg push and cmp pop sub or jg sahf loopne jmp rorl pop pop mov lock mov inc leave in sbb cld out jg daa jge (bad) sub iret in push mov aad vsqrtss jns and adc inc scas test and jge insb scas out outsb mov push mov int3 adc arpl jp das aam hlt jg and xchg ja mov jg or cmp mov dec in lds cli add add dec add (bad) mov ss ljmp stos or jg dec cmpl jg ret lea sub mov outsl stc iret js mov sbb sti fs into jg je les and adc jg cmp aas js and pop and inc (bad) xchg add mov push mov cli push add jg (bad) jecxz outsl jno mull sub cld mov and pop fsubrs jbe mov test mov cld mov fwait inc push mov jg ja clc mov imul jns daa (bad) pushf xchg or add insb inc loopne dec xchg add iret fcoml inc out jg mov stos int3 xchg clc inc cmp aad out scas pop cs inc fistpll es jmp ret pop inc xor add aas inc out cmc jg push es xor test into imul or dec daa lcall test lock xchg jle cmc or jg das push (bad) rcr pop aas cmp mov popf push ret dec leave mov pop mov (bad) sbb xor imul mov and (bad) inc push into inc sti lret lods jb push xchg add data16 (bad) xor jg hlt arpl jae lock and inc dec inc lods jg pop insb xchg popa and xor jg mov jg push push adc add jg jecxz rorl or sarb pop hlt jg mov (bad) aad (bad) mov outsb or ret dec mov jnp jg jmp lods clc sti sub pop adc mov mov jle sbb lods mov push add in push arpl cs push jecxz cmp cmp mov mulb fbld fnstsw dec lds arpl sti lret movsb xchg scas mov lds movsl ficompl addl mov inc sub sarb fwait out xchg aad mov pop mov out jl jg push dec arpl out gs sub cld dec and jno daa jg adc xchg popf bound std mov cmp cmp inc add pop jg es push jg inc test in adc orb mov jg push push dec jg jno inc adc and cmp cmp xor or aaa test pop add loopne lds cmp jg cltd out pop insb xchg pop cmc xchg adc fistpll lahf mov cmpl notl jg push jno (bad) fwait mov sbbl jg jle inc add mov std mov mov xchg mov mov xchg adc jg fsts ljmp je scas lcall add enter pop sbb aaa jg dec clc repz roll push xor gs dec and push push call mov pushf out push test divb jg in lock and dec jg dec out jp (bad) repnz loop iret (bad) call es stos popa cwtl lock pop loope jno cmp push jg ja sub or xlat scas cltd mov mov jg mov lock cs imul shrl pop loope jno loop sti stos fnsave pop insl lahf jg pop fldln2 fsub pusha xchg mov pop nop mov cwtl mov pusha sti test sti (bad) jg xlat cmp sub add bound jb mov add dec daa and jecxz pop or jg xor dec add jge,pn mov (bad) jmp jg scas mov xor popa and pop sbb lea jg pop add movsb ret sti imul fimul lods idivl sbb shlb lcall mov jg cmpsl cmp (bad) pop jg lods cltd mov adc mov pop dec inc xor jg fildl mov sti or mov cmp fisttpll addr16 sbb test push mov mov outsl mov cmc pop and xor nop scas fistpl jg out loopne or insl aas in dec sbb stc xor push xchg sbb pop ret test mov and icebp mov sub (bad) pop lea jg cmp jmp jg ljmp aas imul aas lds lods push test rcrb ret lea jg pop mov (bad) jbe sub jae imul faddl fs push mov outsl cld shl dec and lea pushf dec lods pop lret fisubl (bad) (bad) addr16 sbb adc in mov aas or test out mov and mov inc xor shrl insb fidivrl loope lret mov xchg jae imul mov inc mov loope mov xor push cmp pusha jnp sti and or or hlt adc int inc fdiv dec push add adc jmp jg pop push xchg insl and imulb popa adc cmp push pop dec or data16 jg inc xchg bound and mov cmpsl in mov mov scas into mov dec jg jmp xor test jg push mov in call lds cwtl jle jl jg add lret lds jg dec jle in repz xor jb lret push movq popf mov mov test fs in jg and clc imul test cmpb jle fwait cmp push dec mov xor jb enter ja jno inc xor loopne inc xchg test iret lock aam jg add push jg popa xorl icebp push repnz shll jg (bad) push pop xchg cmp ljmp int sarb stos addr16 cmpsl dec stos pop mov jnp outsl adc in push lds jl,pt add jg or out xor jo mov lods ds std jg and movq sub mov leave xor adc mov popf xchg jbe mov jle push dec mov test xchg clc pop outsl rcr leave jg fstl (bad) int3 xchg or iret xchg pop or in loopne bound xchg jb add xchg push dec xor jg mov or jo jne jmp mov jg jle fidivr clc xchg jg (bad) (bad) test jg add mov jg lret mov out idivl adcl and insl push pop js adc push mov outsl jg jne xor jg aam sahf sub xchg cmpsl jmp or jg inc rol fist jg enter mov cmpsl jg fsubrl (bad) adc push ret in mov inc out aaa mov inc pushf mov jg pop cmpsl in xchg (bad) mov sahf inc (bad) ficoml sub jg inc dec sub jg add fisubrl aam inc pop call mov dec sbb pop mov nop ror mov pop cmpsb idivb inc xchg cmc xor (bad) movsb cmpsl fucomi inc loopne mov xchg and mov mov unpcklps cmpsb mov pusha jae xor fnstsw mov (bad) jg mov xor js aam dec repz (bad) push lock jns mov jg mov xlat or mov jg add push jge fwait push jg insl fbstp push sbb sbb into loop lea cld jg movsb in sbb pop adc add mov negb jle in dec inc mov stos mov jmp aad or dec push push jg subl jg std mov (bad) jl sbb popf imul dec xchg jg or sbb jo inc add iret push out jge test jg (bad) loope lcall cld sbb jno ret std lods pop imull aas mov pop and inc fdivrs dec ds imul xchg sub pushf sbb in mov mov mov rcrl lds cli inc fsubs in push sti jne out aas sahf jbe bound add pop mov sbb hlt mov cmp movsl imul pop lock mov jno aam mov jnp (bad) jae jg pop jl fwait nop mov mov push inc sti pop (bad) xchg stos jg cmp inc jg sbb sub insl pop and test pop out mov mov mov sbb push sbb jo test in mov xlat push loope xor test stc jg adc in inc ret mov jmp add xor movsb jg stos (bad) adc test jne jle mov add or sub outsb or scas jo ds pop pop ret mov subl rcrl mov pop jg pop das or pop fisttp loope fldcw pop dec or push jle mov push jp out jecxz and sub pop out imul mov aas pop aaa (bad) stos mov dec fldcw jg fwait and cmp test ljmp cmc fcomps cs repz out push pop imul inc jg push movsl sbb jnp (bad) jg or and outsl test jg,pt bound lret stos mov mov int3 mov jns ds add lea in cmpsb or xchg jg sub sbb cmp lods outsl sbb sarl mov push mov jbe and repnz js dec rorl sub shrb sub cld mov mov lahf out cmpsb arpl inc or jae mov ret mov rolb mov pop push push pop cmp mov pop test jl jg lods mov mov idivb cwtl daa cmp mov lret jo push xchg and add push dec icebp adc sub pop push jg cmpsb mov fstpt xor xor (bad) lea imul fisttpll leave jmp mov inc inc ds jg jne cmp adc dec push pop mov pop jo jbe jg cld push and pop mov xchg insl (bad) mov dec mov scas mov and mov push lea pop mov jg or cltd sbb inc jg sub jae pop jb lock pop adc mov scas cld iret push sbbb add dec in mov xor cmpsl insl psadbw pop imul add cmpb js mov ljmp sbb jnp sub inc cmp jg add cmpb in xchg mov jno inc push int3 inc nop inc pop out sub popf jge push test scas jg adc mov jmp shlb ss dec xor jg mov or adc pop fimull or repz addr16 sbb jge rclb popa jg or aas mov sbb inc std (bad) and push je xor lods sti lods sahf pop add popa or sub fmull jo (bad) aaa xchg lock jg jno xchg jmp push outsl jg cmp fwait and adc sahf iret imul mov sti add mov add aas jge std mov push pop aas popf mov addr16 sahf dec daa in out pop jne (bad) test cmp jg hlt gs (bad) jg outsl aam jo xor rol mov and outsl push jle jp dec mov cmpsb and movsl dec adc notl jg add js out jg je xchg out push ret fdivs mov jge,pt and cmp push in add sbb push xchg and adc jg dec pusha in (bad) test fidivr cld (bad) fildl add adc jg or adc inc loope xor leave mov inc jae call popa fwait js pop stos jg xor dec pop xor fistpl mov dec daa cltd addr16 stc jg xor and imul in jg lods pusha or (bad) fdivp aas adc popa pop mov jg fsub sbb xchg data16 lock pop jmp sarl imul lds clc cmp popa dec jbe (bad) lahf or jae pop rorl notl and in popa jg (bad) push or push cmp add push jbe jnp cld xor jg (bad) mov mov dec and ja leave scas mov jg pop xor mov xchg fnstsw sbb pushf shr jo dec push jg out or nop test inc push aas mov mov or push insb jg ds push (bad) or stos ljmp call (bad) imul dec sarl loop push aad jg xor xchg jg pop popa cmpsl sub and lock in add mov (bad) jg fsubrl bound sbb in inc pop jg and push (bad) cmc (bad) enter cmpsl pop inc jg arpl mov jge,pn (bad) nop ja cmp pop cmc negl dec mov add outsb mov mov add push mov inc (bad) hlt jb cmp lods ja mov aaa mov repz adc jae inc stos lahf jg jmp in aad pop jg aas sarb (bad) call (bad) movsb jg sbb stos mov fwait mov pop dec push sbb shrb pop adc sahf pushf mov ljmp cmc push or push and cs cmp int3 push inc in adc pop lock push imul ljmp jg and int mov inc push xchg iret lds pop mov mov stc sbb mov jnp mov cmp ffreep aas stos pushf icebp push nop pop je daa std jg ror sbb outsb inc cltd xlat lret test mov and xor xchg fcmovne jmp mov fisub jl dec xor insl cli mov aam pop sub imul dec jns dec inc jg pop sub cmp fcoms fcomip loopne pop xchg jg sub xor repz xchg enter dec sub mov inc ret notb add jg sbb mov (bad) push mov sub addr16 push (bad) mov sbb jg nop add jno adc jnp adc xchg and das inc ljmp xor mov and (bad) mov push jno cld mov xor cmpb sub test push xchg mov aad inc imul rclb jg cmc test mov xor xor jp inc jnp std inc fwait mov lret rolb push cmovns or inc add es jg iret idivl popa or andb and (bad) mov mov in jg lods pop daa leave movl mov or negl das mov hlt vmovq mov push fmuls jg lret ss jg xor test lahf xor scas xor pop mov icebp push mov mov ret out xor addr16 jg jl push lods cmp (bad) jg mov mov out cmp sbb mov loopne and jle data16 xchg dec add cvtdq2ps jg mov jo mov les push fistl mov adc cwtl push fsubs cmp push jp ret les repnz xchg or cmp (bad) lret dec lds int3 ds mov cmp mov rorb lock xchg jg sub push out or movsb mov mov or cwtl mov sarl jg addb jo imul outsl mov test fwait lods pop ja mov jnp,pn rcll icebp adc pop inc pop pop jb lds sbb pop mov repz scas outsb ds jbe mov inc cmpsb cmpsl daa dec sbb iret imul pusha and rol jle imul xchg cmc test or xchg mov out outsl arpl adc imul rcrb jae mov pop mov jp xchg sarb (bad) push out test and hlt je rcrl xor jl dec div jg mov ret pop jg cmp imul lret and cmc std mov mov cmp xor xchg pop inc sti mov mov aas sub loope adc movsl dec xor push adcb movsb jg push cmp mov sbb in popf fwait push cli mov jo cmp (bad) rcl push cmp cwtl and jg jb inc cmp test jg xor add jg jae push or cli xor out js jg xchg push cld and mov int3 mov int sbb jns test (bad) ljmp mov mov fdivrs lahf push pop mov add test test push dec pop xchg sub sub imul jns xlat mov or jg movsl or inc lods insl cmc jo jae cmp add iret jg xor sbb repz mov push mov pop jg lods in jo adc (bad) jae cmc (bad) jnp outsl test cli lea imul rolb scas cmp jg push sar enter aas jge lds dec push inc xchg movb aas les sahf push xchg dec jnp add loop movsl (bad) lea mov xchg xchg outsl fwait imul pop pop and sti in lahf jb cmc cwtl jnp fbld sbb movsb shrl sti jl mov outsb addb loope daa push stos gs fnstcw lea fbld push cmp mov or inc lcall sub xchg pop inc lahf sbb mov mov pop stos add ds movsl xor cmp add std lahf data16 into shl stos dec pop rcrl out ja sub xlat push cwtl fisubr test add pop test jle adc loop pop sub pop in inc xchg (bad) fnstsw aas cli jo jmp aad jg mov push inc mov lods sbb in inc lret pop jg adc jns mov or adc sarl fistpll lea loop js aas mov dec pop stos mov sbb cmc xor inc arpl jg cmp clc lds iret and or mov xchg pop pop popa sub js aas sbb cs push data16 inc pop mov or popa push jg sub mov mov idiv (bad) pushf push stos jg hlt add or aaa jg adc mov aas sarb push pop jnp fcoml (bad) lret ja dec cmpsb sbb push xchg inc jg mov lods fildl or pop mov (bad) icebp or fwait sahf cmp ret jg lcall jg faddp adc sub push jmp push push jg fyl2xp1 dec inc jecxz loop arpl jnp jg push push pop cmp fstps xor cmp xchg js dec cmp in stos in sub fnstcw sub inc xchg mov mov cmp cld cmp jg test sbb push mov sub sub ja xor lods popa shll leave sbb push jg into fstpt orl test mov lock scas cli nop jle push or push adc jl aaa xor adcl inc jnp fmull add mov push popa fwait mov fildl ret xchg inc (bad) jle int push pop inc sbb aas aas (bad) repz mov addr16 push jge xor test pop stc jg (bad) aas cltd lret pop jg rclb jg or out inc jg cmpsl and out sbb xor pop jg fs jge mov cmp dec movsb or jg add pop jg aam inc jp fcmovne mov cmpsb (bad) mov lods fisttp jg test andl jg pop fs dec les cmp push arpl xchg jns mov into shr jg sub dec clc iret insb jg fdecstp pop in jne,pn pushf mov jge pop or call adc push inc scas pop xchg movb inc aas imul fdivs mov jo add aam sarl inc ds scas ss les pop sbb push lods or push imul mov in mov (bad) jle push arpl adc sbb mov (bad) jg pop inc sarb sti or mov push fs push movsl stos mov pushf insb push popa adc mov sti xchg inc sub repz mov xor jge addl (bad) jo aaa pop mov sahf xchg dec cmp sbb je lea sub stos cmp push push out push cli mov aaa push jg pusha mov push adc jg je or and and cmpb push out icebp stc xchg jg into mov or push add mov pop xchg inc adc pop mov inc pop (bad) test in aad insb and xchg add push repz fidivr jg popa sub jg ror push pop dec dec mov call xor jg movsb addl jne sti cli fxch shrl jno mov jg mov es pop popf xchg mov jmp pop push add loopne inc mov je mov jg enter loopne jg loopne icebp mov loop popa fistpll mov inc dec pop sti xchg jno mov jmp dec jg xor rclb jg (bad) cwtl jp pushf jnp jg bound test outsl bnd xchg cmc ret aad aas (bad) out rclb fimul in shll shrl adc push jo dec loopne cmp outsl jae fisubr mov dec jg mov add jg ja gs ljmp outsl add and or dec ja cmpsl jg lcall jg stos pop xchg cld mov push add or es mov addr16 xlat cmc jge jg fcoml stos ss inc pusha jg cmp add sbb push (bad) fidivr gs jo test jg push dec (bad) mov fs loopne mov push and (bad) jg in sub xchg leave rcrb in cli push push cwtl xor fldl xor push hlt inc aas loop mov pop adc add jg pop daa arpl mov push (bad) ljmp and inc add xorl xor or adc jg mov jg movsl jl sub cwtl push jg jmp sbb cmpsb fldt fnstcw or sahf insl push jg inc ja test inc mov pop mov pop or lahf mov inc loopne xchg mov jg or aam xchg mov or out ja cvttss2si xor inc xchg xor jg push cmp mov outsb ja mov jle mov ja in sub aas cmp les shrl (bad) sbb mov imul fist daa cmp sbb mov ja ret imul ljmp pop subb and mov dec ret mov push ret pop mov popa jg outsl inc xor repz jg add loope leave andb pop add pop jne jb dec test jmp inc out xchg push mov jo xor jg mov js lahf js cmp cmp out jo aas inc inc jno xor test cmpsb xchg cs js xor stos inc les rcll push repz fadd xor ja das cmp sahf pop fdivrl add sbb pushf fisub cltd fisttpl pop lds ljmp dec clc jp xlat adc jg (bad) add into repnz jg mov jecxz aas adc push sbb ja mov std aad mov jg test jnp sbbb pop inc add idivb pop or sti lock push and (bad) pop das pop inc pop push (bad) mov cmp pusha jg jl and imul mov mov push push dec xor daa pop fistl dec or loop jg add movsl cltd mov fmull emms jp cmp js and scas into jg ret jae mov jnp sbb test lcall cmc (bad) std rcrb mov cmp jno jg jae ret jg adc xchg into test mov and mov cmovle ja or (bad) cmc idivb dec fstpt mull mov sbb negb sbb mov ret arpl stos adc jg leave and ret pop jg movsl or lret js mov pop pop xor push push push pop adc mov xor cld jg pop xor and ja lock jg test loope lahf xchg lock jg insb pop push stc jno cmp loopne pop fbld jno dec mov mov mov inc pop divb sti adc pop jmp orb push adc dec mov sti hlt shrl xor mov pop pop sti sbb and pop lods pop js rcrb mov addr16 iret cwtl dec push xchg cld cmc dec xor add outsl push mov mov addr16 add popl push je out cwtl aas cltd pminsw inc (bad) cmp leave outsl adc mov sub or jg les je jo jg pop push mov ret popa decl push out (bad) jmp mov lods lret add (bad) or adc cmp js inc mov lock jmp mov add out or divl mov repnz test lock nop mov jno (bad) std xor xchg jnp sarl hlt mov add pop out adc gs rorl xchg sbb mov mov ds sti addr16 jl sub jg mov orl dec pop lcall test mov cld dec scas pop pop cmpl aas pop dec pop jg orb insl popf and sahf lret aad lods xchg mov cmpsb pop xor fdivrl push sub in mov jg push cmp sub sbb mov xor push xchg push sub insb sbb test ret nop mov inc in es push jg repz push ja sub xchg int jg lahf pop (bad) nopl mov and and (bad) insl int pop cmp dec and (bad) mov jp mov roll push mov and imul int3 push dec insb test pop pop rclb jne pop sbb lret push mov adc sbb jg mov lods dec mov movq pop movsl jg ror pop pop fistp lods jg js aas scas cmp sti scas repnz push aaa dec jg sbb and pop jbe mov xchg movsb sbb xor inc sbb xchg inc ret out jg adc xor flds (bad) jne aaa adc or mov pop je (bad) sbb mov sbb mov aas popf negb jae mov lahf das xor repnz jg xchg xorl ja jg push lds rorb test outsl jg jns mov xchg jg ss lods mov pop sub or xor movsl inc dec test sub cs jg dec and mov sbb inc bound int3 jg scas adc sub pop adc test xor mov hlt dec add push adc aas jnp out pop nop xchg aam and jg add cmpl cmpsl jnp inc lret ret mov (bad) iret inc sbb (bad) push clc stos (bad) bound addr16 and inc lea shrb (bad) fdiv push fnop jg or addr16 jg dec stos add popa push jg pop fisttpll jg pop pusha inc sbb jns push xchg sbb cli mov mov popf movsb add cwtl out sti pushf push mov sub jle clc jg pusha add ljmp fidivrl inc mov mov cmpsl inc rclb pop mov xchg stos jo scas mov dec out aas mov and rcrb cltd stos sti repz pusha pop add lea in mov in repz mov mov inc sub jmp jg inc lods push stos das add fistp repnz out add shrb cmpsb jnp into inc dec mov daa outsl rcrl jg and les jecxz dec jg imul mov xlat mov dec sub add jg jnp popa fistpll cmp jg xlat push pop enter xor ftst jb pop gs (bad) hlt push sub aaa pop loop add xchg test out add inc aas mov push pushf inc in (bad) push jg fwait mov aaa jl lods cmp pop lds pop daa lea xor or mov ret jg aas cli call dec push jg jbe or mov sti loop in xchg sarl aad jbe push adc mov pop and push mov leave addr16 mov imul adc out dec push adc aaa int rclb mov dec pop mov dec inc xchg jg xchg xor mov idivb dec mov lock adc mov dec divb mov loop mov jg (bad) and or and cltd cwtl lret mov xchg jno jae jg push test fwait push adc jg rep in movsl or adc sbb call stos ret or insl mov inc add xchg (bad) sarl dec rorb pop mov (bad) jmp (bad) call out mov lret aad pop xchg push inc and pusha adc aam nop jae push (bad) cwtl or add enter mov jg jb rorl jge jg or fcmovnb into mov mov sbb mov dec jnp xor mov pop pop inc jg lds mov sbb cmp cmp (bad) das sbb fdivl loop in ja hlt cmpsb imul aas (bad) adc add addl jbe sbb jl pop clc shrl cmpl stos sar orb loope mov xor xchg inc add jg jmp ret movsl movsb imul dec xchg dec mov xchg xor std (bad) je pop imul dec ret pusha in hlt cwtl lods mov enter cmp sub jecxz push rcll xor and stc xchg sub stc mov jg xor push add addl mov stos ljmp push mov lock jg stc addr16 nop cmp js or aad pop cwtl cmp jg mov jmp sbb xlat cld cmc xchg add add insb jns inc xor push jns xor stc sbb rorl in inc outsl cmp jno clc pop (bad) jg lds adc push jg sarl mov mov mov enter xor and add inc mov dec bound int lods loopne jg jle mov jg jne js dec (bad) xor mov jl pop inc cmp call jp ja push jmp mov dec fs push orl and sub jg dec xchg add push pusha fnstsw int fldt xchg push sbbl xchg mov jg push or jg mov lcall pop cmpl and mov addr16 or jae inc mov jg push insl adc out pop mov or cltd inc jg scas out cwtl icebp cmp cmp in pop push xor jle mov iret cmc test cmp pop out hlt mov pmovmskb push (bad) imul mov scas arpl inc fisub cmp sbb or aam push addr16 xchg mov dec in (bad) scas imul dec movsb std scas xlat fcompl in and mov mov inc pop jo inc sbb jg scas rorl jbe push mov xor pushf pop dec or mov jno jecxz dec cmp jg cs insb inc pop jg mov push (bad) cbtw outsb aas mov ss push pusha jg sub fdivrl jmp xorb cmp cld icebp call std add sar mov jg test mov icebp (bad) cli xor push sbb pop adc rclb xor sbb or pop jno adc jl insl out xor fsubs pop dec mov mov adc in lcall xchg repz jno std mov and sbb dec aam mov inc jbe jnp das les lahf sbb lods fsubrs sub mov shrl cltd lahf push mull lcall cmpsb repnz xor scas cld dec dec xchg repz jns pop aam mov repnz iret outsb jle xchg data16 jmp cltd jae mov cs inc pop jg jbe (bad) out fcoms loopne and outsl rcll mov jno movsb cld aam inc outsl pop push or es enter jg adc inc rcl (bad) out dec cmp jg xorb lea jg cmpsb or jg (bad) test mov aaa arpl aam stos lds add sub xchg addr16 pop test jb jg inc push fldenv loope jg add inc rclb sahf aas xchg adc push (bad) inc fwait jg loop pop jecxz mov mov dec add clc movsb xor lret jg mov push push jg inc stc mov jg pop push mov outsb add add out cs movsl fsubr jg int pop movl pop lea shrb stos jne or icebp inc mov out sub dec js jnp cmp xchg mov cmp jbe xor jl cs jp dec adc out push jg sbb (bad) aas dec mov jg push pushf cmpsl mov in loope jg add ljmp std dec loopne sub xchg sbb mov and and xor xorl fstpl (bad) aaa sarb mov jg xor mov dec cmc or ja test scas pushf mov les ds fnstenv pop xchg repz cmpsl adc outsl mov ret mov sub cmp imul mov roll inc es adc jg jge outsl jle mov sbbl ja stc inc popa jg inc fnsave adc dec cmp fisubrl lret in jg (bad) fbld and pop push rcll mov int3 add inc pop jg xchg into add or mov mov pop jg push jp and std xchg xchg fsubrs jg push ret mov push dec jg and push rcl mov mov sbb push lds pop idivb movsl jg xchg int or (bad) aas sarl add aas jp cmp cmp aas inc jmp jg imul push xor add mov inc pop jg mov push dec dec imul push mov adc movsb fisubrl jg adc outsl cmc push mov or sbb repnz rcrl push xchg jecxz out lock sar clc pop popf jg iret sbb push jg jb xor or mov xlat mov pushf pop aaa push and mov mov xchg push sub sub out dec pop cmc jg repnz jne call lea mov sti push mov and ret in adc jl jns idivl dec test sbb add in inc and add rol movsb jg pop fs ret push jg mov fwait sbb xchg sti jg scas sub mov sub addr16 mov push pop sti mov xchg inc cmp lea sahf pop jg (bad) xchg cmpb push sub outsl fdivrs fisubrl mov rclb jbe dec ja add iret inc lahf pop cmc (bad) sti push xor mov ja push and ss outsb das (bad) mov sbb inc popf decl stos inc dec jg lcall jg dec imul xchg in jne push jmp jg arpl sbb jg nop gs inc icebp sub jg inc (bad) ljmp pop scas pop in lret cld pop enter push rorl lods pop cmp in or sbb push mov xor dec divl mov outsb cs shll fwait pop pop daa mov fs dec push loopne add mov stos aas inc or push or mov mov hlt push leave je mov jns mov lret cli imul mov into out in seta lret cli or dec int3 pop mov jg xor mov mov cmp xor imull push adc repz mov std adc mov dec (bad) mov (bad) arpl cli adc cmp rolb jg sbb lahf nop test pop jg rcr sub cmp bound leave fwait je and xchg xlat inc jno addr16 add scas dec push jg das lret test mov (bad) into cmp loopne mov addr16 insb xor ret mov addr16 or mov enter dec jg jnp (bad) rorl xor popf push in jg add js test jnp sbb shll data16 sarb addr16 aas pop xor inc jne imul mov test stos mov daa fiaddl (bad) cmpsb cmp std outsl lea pmaxsw jbe dec aas dec pop mov inc push pop jg adc into sbb insb jg clc jnp sub mov inc mov daa (bad) (bad) ja cmp push push fildll mov sarl mov leave fcos mov shlb mov lock es or loop shrl sbb jnp das lods mov jae jg sahf pop ja lds push inc xchg aas push inc mov dec cmp sti xchg mov jmp fs xor and roll sbb jg ret inc jnp hlt mulb add (bad) jl mov mov pop sub cmp dec jg sub jbe cli test lods icebp imul lahf push mov ret cmp popf (bad) je push push mov cmp mov jl mov push mov mov sti pop mov pop ds stc out mov mov dec outsl jae jp stc popf add (bad) mov mov mov xor cmp scas xchg lds jecxz lahf repz (bad) stc in mov lock jg fwait xchg dec aaa sbb xchg mov rcrb test fdivrl lea in mov popf (bad) or inc into pop jg xchg popa mov jg in cmp xor mov jbe cmpl and mov adc jbe pop or rcll jmp jg int add xchg sbb mov pop pop arpl mov pop jno cmp jg pop push cmpsl sbb fnstcw sbb xchg inc jno adcl lahf jnp test dec les sub sbb inc nop sub cwtl dec into pop lret push imul push jp,pn jb pop mov dec push inc out ljmp adc loop cli xor rcl cwtl pop inc (bad) repnz cmp dec subl addr16 jge cmp cmp inc dec or sbb jg (bad) shl cmp ret in adc stc jg fs shrl mov enter mov adc pop aad adc (bad) pop mov mov jno clc scas test xlat and mov adc pop xor rcrb sub mov leave mov mov (bad) cld and sti enter sahf cmp repz xor outsl push out sarb dec fcoml jg jbe dec xor push jg adc int3 movb imul jg fisubrl dec mov shrb or stos inc out in cmp sarl jg mov and fs imul xchg dec jle std xchg inc push dec aaa and dec jg inc xchg icebp lret mov xchg adc and pop imulb jg cmp fwait jg push cli mov pusha xor dec cmp iret in adc aam jecxz jo shlb mov cmp pushf enter mov sbb nop jg inc arpl add mov add and sub orl lret inc (bad) pop jg daa xor mov mov pop cli and pushf add mov test mov aas and inc sub inc (bad) jno mov xor loop dec inc push in mov mov pop jno enter sbb cmp stc mov jne std inc dec inc loope jg adcl jg ret sub jnp add or add in ja jecxz sub ds clc sub insl jo jp test lock jg call bnd xor lret fdiv mov jecxz test aas add pop ja jb jg adc jg fnsetpm(287 sub gs jg mov je jg adc jb jg icebp and in mov push mov and push inc scas incb flds pop cmp rorb lret jle xlat std mov data16 dec test jg xor (bad) sahf shrl jg push int3 jle in jae push adc xor cmp jg gs das bound mov sub and inc fstl jg out fcmovbe jo add jg xchg push sub mov cmp lret jg mov sbb call pop test (bad) fadds pop xchg out pop inc jg sahf and jg and push sbb mov mov nop jg xor jl sbb jmp xor or jp,pt (bad) dec inc test jns push sti adc push pop fidivrl cli ret dec mov jle outsl cmp dec sbb movsl mov in sub jg lret insl (bad) xchg movsl notl stos jmp andl jg sub mov jle jae into push add loope cmpsl aad dec cs jmp cmp bound dec and sub cmpsb add jmp dec jle add or into lock rolb jg fs fnstcw xor int decb jae cmpsl lea movsl push mov push mov ds (bad) arpl jae ljmp shl divl shrl cli mov enter jle fadds or or cli aad dec jg fildl insb adc inc shl mov xor fwait push pop (bad) mov addr16 mov cltd mov mov negl cmp int jno movsl (bad) push out pop adc sahf add (bad) loop mov rcrb adc jg fwait clc mov (bad) lock arpl xchg int mov mov add call cltd shrb out lods out ljmp pusha loopne mov jbe sub (bad) arpl test mov push add mov popa xchg scas pop insb addr16 jg adc jne scas mov mov dec in jg cmp jns inc dec int loope mov arpl lods fiaddl ret push icebp cld jne xchg sub lea pop fild mov pop ss stos pop cmp scas fstps pop out jg insl mov and je dec push push dec ficomp clc adc mov movsbl cmpsl mov pushf ret (bad) ss adc lret jge out leave pop cmpsb mov shl stos rorb push lahf push sbb xchg mov (bad) jae popf fsubs imull stos mov jg cmp fisttp and aas aaa sbb lret inc mov ret pop dec aad mov jae cmp mov push popa cmp lea test push test inc cwtl ds jns mov pop dec sbb push dec jg out xchg scas in stc bound cmp test daa (bad) cld or addr16 pop jg push stos cmp (bad) push jg xor dec cli lods push inc jg adcl jg inc ret jb call pop sub imul cmc leave pusha (bad) jg mov ret pushf jg imul leave aas or and jg inc push sarl jno jg popa test sbb adc pop push bound fsubl add cltd cwtl (bad) xorps fimul xchg cs mov mov push cmpsl xor test sbbb sub jg lods or push das fidiv xchg (bad) (bad) jl xchg xlat xor jns rorb jg cmpsb jo push fistpll stos dec jge fwait (bad) jg cli addw test or xchg js hlt pusha pop ljmp sahf (bad) mov ss xchg cli and add jo inc cld lret mov (bad) jg ds int pusha imul lds push das push (bad) jg or push or push mov mov cmp stc inc sbb int push imul mov out daa jne (bad) xor fs cmp cmc insb das sbb push shll push mov into and mov jne adcl mov loop xor xchg popf inc dec (bad) lods cmp mov xor pop fstl aad addr16 inc cli bound jg xor add enter out cltd mov xchg popa jg push call sbb mov jg pushf add aaa out xor nop daa pop xor dec xor mov pop mov jge out add sub cmp cmp pusha xor scas hlt xor xchg cmp cmp jg pop ret out fstl push std jg inc ds inc mov sarl add nop inc daa scas mov repz and mov or jg xor push nop jg pushf inc or mov mov pop popa sbb or xchg pop jg cltd dec cmp mov bound int push inc cli call jg fsts pop or movsl fwait les mov mov outsl sub icebp sbb rorb ffreep push leave pop jle push gs mov or mov das jg mov cli stos and xchg sbb (bad) and mov jg dec jae add and dec adc jge lock xchg pop clc rorl ficoml aas fldl (bad) out rclb jg (bad) bound stos sahf jg dec xchg sub adc fildll push lahf aas or fidivl loope lret jo mov xlat and das jg dec sub jg pop test sti and test fisubr or xor shlb xchg dec ds dec int3 sbb ja cwtl ja cltd fcomps je mov ds sti popa dec cmp and lock jg mov dec jecxz jae jg add pushf cmp fs mov popa imul mov sbb dec test jae,pn inc ret cmp testl mov jmp mov pop insb out mov in push or repz adc mov lahf jg imul dec mov or push dec sub mov (bad) fidivr cmpsl out inc mov hlt sub jg cmp or add jnp pop mov mov leave adc adc xor dec dec push data16 ret mov roll jl ja jg jp dec sbb push je in sahf outsl push iret jb mov xor in mov out popa jg,pt xchg mov cmpsb fcoms push and andl mov pop or mov inc aad jg pop std in pusha pop popl pop or cltd xlat add jmp inc scas mov and (bad) jp into pop ljmp pop xchg inc cltd add jns dec popf scas dec jg xorl sti insl or jg inc inc xor or mov pcmpgtw aad sub jg cltd push cmp dec iret (bad) sbb and lock lahf mov ljmp add sahf mov dec mov in jg mov adcl fcom push adc dec out mov pop dec icebp jle jo cmp mov mov push pop (bad) xchg into (bad) hlt mov pop mov sbb lret sti inc adc sti push add (bad) pop jbe xchg in int3 jg fadd outsl push out or xlat mov in sbb fdivl cmp sbb pop nop sbb rcr sub and cltd pop fwait add into aas mov pop test cmc rorb sar fsubl std mov les insb repz mov fnstenv imul icebp adc (bad) out and xor cld dec pusha mov push push scas jg (bad) xor push jg repz std xor popf sbbl (bad) repz sub mov and jnp inc ret fildl jmp cmp (bad) jg lock shl lret cmp add xor in add out mov pop ja imul scas xchg adc (bad) enter test cmp xchg jg pop leave dec out pop pushl jg loop push loope xor repz jg cli xchg fsubl cmp and jg (bad) jns out in out lods adc pop arpl jne push pop push inc inc pop jg jne adc vmovdqa movsb mov add cld jg xchg ret sub and or add sbb xchg fmul and jne hlt lods loop (bad) stc cltd or dec fdivrl (bad) adc xor outsl (bad) push jg nop add imul pop dec pop pop jmp mov pop outsb popa jg and adc or push lret stos jg push test dec add imul je out ja or test loope jg mov clc push mov sbb addr16 dec cwtl cld mov aam push and sbb jecxz push jnp push aas xchg push jl push jg hlt cli test scas jmp cmpsl mov jns mov lds push pop shrb dec push leave or stos mov (bad) pop dec jno pusha popf xchg or xchg pop or loope fistl inc out sbb mov cmp repz push bound cmp jmp adc mov fs sub scas fidivrl or inc test pop cmp mov push fwait xchg cltd decb inc test shll jg xor ja jg pop sbb sbb clc jp jge push test jg fildl dec mov xor ljmp mov jg mov or fstpt lods cmc push subl pop leave push out dec fwait sub seto jg xchg mov or mov call icebp cld jae repnz inc mov mov gs inc sarl sub or jg and push add fstps xor cli daa jg es mov pusha jns mov mov jg loope cmpsb sbb rorl jns (bad) xchg out fs lahf cs pushf stos popf ljmp dec jg sbb cmpsb aas movsb pusha mov sub jg inc sub addr16 (bad) ss ret mov xor pop mov jge in repnz xchg loop ret inc (bad) and jge jnp mov pop sbb ja sub pop leave push int pop jg add js fcmovb loopne enter gs imul mov sub outsb mov add inc sub jg call idivl in std ljmp xor mov inc xsaveopt popa and push jnp aas sarb mov xchg xchg loope test jg add push inc mov int3 or jg mov lret bound mov ljmp sti jle and add orl mov (bad) mov mov jg jb mov test mov sbb inc sbb imul icebp ret (bad) add pop cmp jg int3 cmp cmpsb (bad) (bad) pop push jbe dec xchg je dec mov cvtpi2ps inc mov xor smsw mov js lcall pop and scas jnp loopne mov aam out hlt dec fwait xlat clc mov pop out out pop jg arpl ret xorb lahf data16 xor pop add inc inc sub jg loop out loope in mov das push mov and test jg push or cmp lcall cmp jg rcrb jg lds and test ljmp dec inc push jg,pt ret pop dec mov cwtl jo xchg mov or imul pop jg cltd sub sub fldenv jbe cmpsb lea or push repz dec jg push sbb inc leave movq or jg mov fs jg (bad) outsl enter and xchg or cmp jg cmp jmp fstps rcll orl gs insb fdiv xchg mov test fs jg cmp push jge jns adc (bad) out add push incb inc push jae loopne push not push out push jo or sbb mov or lret sbb inc add mov inc (bad) jg sbb cltd mov cmp scas push dec (bad) clc out jge dec fisubrl push scas inc xchg cld and sahf mov into mov popa pop scas pop mov (bad) ss dec cmc loop mov and (bad) pop pop sbb out iret push push imulb push pop xchg mov out in popa or (bad) loope out test jle lock popf lcall pop mov je mov jl inc xlat cld out adc sub cmpsb mov imul add icebp arpl mov jno (bad) push outsl push popf jmp mov mov and pop ficompl jns out dec jo jge cmp and mov xor jmp rorb xchg in jae push fmuls adc clc enter sahf pop addb jp rcl jg adc (bad) xor popf (bad) int out and outsl fnstsw pop imul pop sub aas push sahf mov jg call jl mov pushf fildll jbe in popf pop addr16 inc jno,pt adc cmpsb dec lods mov es call mov (bad) dec imul mov pop addr16 rclb jg xorl cs jg pop das dec popf mov and dec in jg addr16 scas mov sti mov cmp jge mov lahf push dec outsb sti aas pushf dec (bad) test arpl in aaa (bad) jg loop aas mov movsl jg dec adc cld dec popf inc sbb jnp mov outsb mov addr16 xor jle jns jg sbb xor mov lods loop les jnp pop mov cltd jg das adc mov dec dec (bad) arpl xlat jg cmp ljmp repnz jg cmp jb sub add aas cld rcrl (bad) cld aam jne sbb xchg aas pop push pop add iret mov jg cli inc cmpsl adc inc (bad) mov jg fs mov inc das sti lods ret push daa ret popa inc push push aas call mov mov mov push mov mov lret sbb mov pop sarl sub push sarb lret inc jle sbb out sub into sub cmpsb andb and (bad) call mov jmp fist imul inc inc xchg jmp pop jp into pop jg add cwtl (bad) cmc jo jo outsb popf loope stos insl push mov roll xchg lock leave repnz pop jg repz insb out jg pop scas orb arpl ret dec stos adc repnz xor mov int3 jg es and (bad) jg lret jl test out jg dec cmp mov push add enter cmpl incl sbbl add and push dec pop push adc fwait test xchg dec out jo iret fbld jae pxor idivb test (bad) mov jg sub test xchg bound cmc sti cltd js fsts pop pop xor (bad) icebp inc test sahf or push nop in jg loope push loop mov inc lods jg push (bad) int3 adc jo push add lods lahf jnp nop or sub inc xchg and out and xchg sbb idivb fdivrl add jp add sarb inc xchg add jle jb sbb je pop cmc mov dec jg mov add xor jg cmp mov add mov out test jg inc js lods sahf pop xor fs add inc incl cmp outsb dec imul inc jg mov cmp jg pusha cmc popf jecxz aaa mov stos jo xchg xchg jg inc mov lds (bad) aas pusha jne test pop mov lock das xchg repz fisttp or leave pop xorl push ds adc fcmovne jg mov xor mov fs xor lea push xor popl out jg movl jg xchg (bad) sub sbb rclb mov jg (bad) sbb mov push adc xlat mov stos in js mov test inc mov jae add nop out or adc jg aas cmpsb and mov out inc push xor test das mov flds jbe jmp subb (bad) sbb ret dec lcall in or nop popf imulb xchg movsl jg jbe insb jmp bound fnsetpm(287 jg jp or movsl xchg inc cli aas mov out cmpsb sbb outsb jg xchg mov adc fs inc pushf inc and (bad) pop jo pop aas (bad) test dec jne mov mov inc je mov in mov or ja ss test lahf jnp jg add out insb loop jbe out add lock jg js mull cs sti lea dec xchg jno mov jg cmp cwtl data16 xor (bad) sbb cld adc imulb gs mov arpl dec xchg jg (bad) xchg or mov or add sbb xor and hlt cmpsb inc inc lds (bad) push int pusha pop jg cmp xor repnz icebp sarb xor or jg sub pop (bad) sbb js fwait jp and pop mov arpl incb sahf (bad) jnp das pop pop test incb lds iret sbb pop sub xchg js push orl test add lock mov xor neg add lret out jg push mov xchg jg insb xchg je jno push mov stos test sbb test jg mov fxch jg popa mov dec dec mov imul fwait xlat jecxz mov sbb repz add sub mov xchg inc mov aas jg (bad) jne imul scas lods xor lds jg pop xchg sarl push ds dec pop jecxz mov loopne xor in xchg cmp jg aas (bad) jmp cmp mov mov mov mov inc sbb jg cmp sbb mov pop xor pop mov cltd jg jg jno hlt mov in cmc mov xchg enter (bad) jnp and into mov pushf mov int3 imul push cld inc addr16 fidivr mov addl lcall dec ljmp cmp lods mov lock arpl adc jg test lret cmp jg dec mov sarl test inc pop test xchg loop jg das adc icebp jae pop jg mov jmp or push test and xchg xchg dec dec clc pop mov faddl movsl stos push arpl pop jg cwtl or mov push jnp imul std gs lret dec mov jg sub pop ret lcall das (bad) jne inc insb ret popf cli and jg,pn add in sub mov add cltd jg mov dec leave hlt and jg popf or bound out xor mov lock jg push mov lds sbb fildl xchg jg (bad) mov adc jg icebp ret cmc dec add mov xchg in jg jg mov cltd dec aas push es inc and add push jg (bad) mov stos jg out sbb mov daa ds rolb dec sbb out sbb aas fwait inc lods int3 fldl outsb or jnp (bad) cmp jge dec insb mov jno mov stos js inc push outsl daa icebp fisub enter cmpsb stc lahf movl (bad) pop lock gs aam adc xor push pop sbb mov mov jg sti jle aas mov add iret movsl je imul inc loope jg ret inc sub bound pop popf dec cs arpl pop lret insl scas in sub out in loope dec pop jge repz xor cmp push mov mov mov push inc jbe jg outsb mov lock mov test call jg aas stos inc or mov aas push and dec cli or out (bad) je sub aaa fs jg mov fistpl cmpl pop jo paddusw add sub loope pop mov xchg cltd jg les push xchg dec xor mov bound xchg in stos mov lcall loopne push mov xchg in rolb icebp jg mov shl mov sti pop cmc test sub lods subl jg mov les fs movsb (bad) popa mov addl mov jg push je les sbb jg iret pushf cmp mov add jg pop xchg jl je ret sub mov inc xchg outsb stos test inc jo lea lock scas imul stos add cmc arpl popa inc jns jge mov add mov lahf mov aas les test and pop fbstp ds mov sub adc lds mov mov sbb insl sub jg mov and decb shr push imul add repz dec xlat cld mov adc adc or push jg and (bad) mov call fstpt cmpsb push xchg cmp jns xchg lods ret or mov inc loop dec sbb ds jge cld sbb es jg dec pop cmpsb idivl mov ret xchg fwait jg xorl popa fistpll pop pop sti ds jns scas cwtl jg (bad) jne fisttpll dec sub jge or adc test inc push inc fildll arpl inc add push sbb cli jle xchg notb out or jg test addr16 outsb aam aas xchg xlat mov jg jge stos cmp das lods jg test inc roll pop aam pop aas xchg push mov inc sbb sti sti pop shlb fstps mov mov aas jb lods mov std jp jmp imul xchg xor push xchg fmull (bad) jg out sub fnop ret mov or and jnp loop push imul fstpt (bad) test push sbb lret leave jg scas cli inc hlt mov mov pop adc jns jg aas lds lcall cmp out (bad) ja cmp mov cmpsl inc test xchg test mov inc adc movsl jg push cmp loopne pusha jl and ljmp out jg mov fsubl push sbb outsl call sbb sub out pop (bad) xor inc push push stos adc rorb inc fidivr dec (bad) idivl lock dec fsub fidivrl xor push cmc xor xor dec cmpsl push (bad) lret jg dec jl js (bad) scas lahf push rcrb loope les sub jne imul jnp aas or mov hlt sub shr cld xchg clc jne fldl mov inc jg jecxz or bound mov pop call sbb rolb imul add mov std das jg,pt cmpsb sub jge cmp mov out cs aas xchg hlt mov xchg jg jne jb gs dec jg outsl fwait insl adc ljmp sub sar lods mov dec imul sbb cmpb loope adc push pop sub inc add (bad) repnz mov mov pop jg jns repnz pop out lock push imul ljmp inc inc mov test jg pop or jg sub outsb mov fbld or sbb pop jg jb push int3 or adc mov fisub or jg loop cmp fs jno mov (bad) adc lds jg lea push pop das mov test push jg clc push and cmpb jbe push cmp je or outsb addr16 inc jg xchg iret mov (bad) aas sub daa dec pop pop sbb adc jg and cltd aas call mov ret dec sbb mov outsl es sub cmp jg fimull mov insb lahf pop les jg lea adc jns lods out jg pop imul adc incb in inc push mov push sbb roll push inc in jl icebp dec popa add sbb (bad) push call (bad) popf add inc sarl xlat out inc or daa aas pop enter mov mov jg pop push or sub dec adc jg xchg dec mov sub push sub mov fs test push push fnsave rcll scas repz arpl loope cmp mov call jg push inc stc jge shr sub xlat add jg xchg mov jg xchg mov cmc daa outsl ds inc add rcrb out addr16 jge mov cli adc push inc cmp jg loope das stos jle dec inc arpl scas cmpsl std popa xor jo sub jmp aas xchg add out push cmp mov push fstl push pop jg es sbb adc inc pusha jg jg js insb dec repnz cmp or pop lea push cmp mov loop stos push inc movsb fucomip dec inc push fidivrl inc jb or or pop dec xchg lret lds fisubl cwtl sbb cmpb inc cs popl jg fnsave add out scas lret cs or jg insl aad pop pop sbb jle test repnz mov mov pop divb in add movsb xchg jg dec inc popl xor sti (bad) ret es jmp xor arpl mov jnp lret gs popa jmp pop xor push mov movsb iret bnd jg clts sub daa mov mov fs jg int mov aas aad ffreep mov rorb dec sbb jg mov stos jg,pt (bad) (bad) jg and dec ret xchg mov pop jg test mov xor loopne aam or shrb jg lret lods popf inc sahf jg jnp aaa push out pop xchg sbb out std pop cmpb movsl repz cmp insb insb (bad) jg lahf push and (bad) cli adc aad dec push pop leave jg adc jecxz jmp popf push icebp ljmp cmp in fsubrp fstl es jg mov jg jnp cmp mov (bad) sbb jg rol jecxz test jg dec xchg pushf dec bound or movsl outsl addr16 shrl and jno mov pop jg mov pop nop addr16 loope aaa std jne pop fs fisub inc addr16 jg mov fisttp mov mov jg mov insl adc mov aad xor je dec arpl mov mov dec add aas (bad) js adc ja lods jne cld mov push addr16 movsb xchg dec fdivrl fwait test inc push bnd aaa lahf pop mov cli les inc arpl jg int enter out jg add xor shrl xor jg movsb xchg add jne fcomp or outsl je loop pop cltd cmpb pop cmp mov xor mov mov jp sbb in add (bad) xchg into xchg aaa testb push inc cmp or aas in and pop jmp (bad) dec sti bnd ret lock rorl mov cmpsl loope pop dec ret es jg ss sahf in and daa arpl xchg movsb mov mov scas or cmp cmp jg stos leave mov sti fimull ret dec jbe (bad) cmp pop sti mov xchg jnp dec imul pusha aad mov xchg xchg mov push in dec cmp inc jg mov sar mov pushf popa inc sub mov xor sti rcrb dec leave fldl mov push cld inc mov mov clc xor data16 and pop push iret sub sbb or push dec rcr dec icebp pop push dec scas in jg inc cmp jg mov test repnz (bad) pop push int3 jg and adc push push stos mov aad inc and jg push leave arpl cmpl ljmp pop scas xchg popa int inc push mov outsl cmp call in addr16 int jno inc jg pusha repnz outsb xor inc adc or dec jg jo pop aad popf sbb xor inc xor jle cld jg imul xchg add inc in aas cmp lret mov jnp mov lea dec push fstl mov or dec and fisttpl cmp jns scas and pop inc lret push imul out and and mov pop imul sti je jge jg cltd dec fildl mov inc fist pop xchg xchg ja (bad) mov jo pop std xchg mov jg push fildll in notl mov push mov std mov add xchg dec stc pushf xchg cld jg jecxz aaa stos pop test push outsb mov stc in mov dec or lret adc int3 out aas mov dec sbb dec sub imul in xchg jg jge mov dec pop (bad) loop jg stos adc jg xchg (bad) or arpl fidivrl call cmp cmp sarl scas sub xorb push pop jg out jo inc aaa jnp cld or aas loop inc jl dec (bad) gs mov push cmp or sti mov jg xchg xor or add add sub ficomp (bad) lock pop movsb lahf lcall decb push iret sub sub jg mov test rcll enter ret in inc jp call jg je mov inc cmpsb fmull cmp sbb add inc cmp push into push popf inc jl jg jmp in loope,pn sub add rcrl push out and (bad) mov insb inc jg adc dec jg ja in mov mov cli outsb jg out data16 mov xchg mov push dec push pop xchg mov leave pop mov or shrb mov cmp pop cltd inc jg xor mov (bad) sub aas in dec jg test push mov call inc mov mov adc adc push mov inc outsl sbb jmp or (bad) in inc jg ss jg mov rcrl cmp fistpll imul push pop aaa xchg (bad) out lea lret sub cmp lock arpl in xor popf add clc aas mov test jnp or fsubp mov pop lahf jg jge ret jle jg pop mov inc lods mov ja push fwait dec in cmp jge dec in mov dec or aas adc pusha xchg leave lret and test dec xchg call adc outsl sub mov jg pavgw mov and inc test gs xor add jl ds adc and xor cmpl or rsqrtps pop inc pop insb jg lods xor jg push jbe sub out mov cmp cmpsl je rorl bnd cmp jg,pn sub test inc out xchg lods push scas xchg xor jg in lret xor (bad) daa insb mov inc push lea push jno mov js cmp mov in jmp movsl iret data16 sbb push cmp leave imul pop mov mov nop cltd test jbe (bad) repnz jg push xchg mov sub pop hlt jg mov insb daa dec mov imul inc xor pushf jg ja push add movsl cmpsb mov mov cmc mov push lcall dec jg cld enter pusha scas jg in idivl fidivrl (bad) addr16 cltd inc sbb cmp pause (bad) clc testl in xor inc out inc scas mov jecxz insl dec aad xchg test mov out movsl pop add push stc push fcmovu jecxz jg icebp je out add outsl pushf ss scas cmp xchg (bad) dec cmp dec les push (bad) pop cmpl and mov aam mull jle mov negb xor ljmp push sub cmp xchg mov xor mov out sub pop mov repz mov out jg mov sub push je jg pop cs aaa call inc xor add into xor jae mov pop jno and push std insl mov mov cmc das lret mov cld sarl movsl inc inc ja xor mov inc lahf sarb scas xchg pusha popa js iret jno dec jge mov adc scas xchg xor in divl test jg cwtl xchg mov aas jae or mov inc ret cld jg jecxz outsb sbb sub addr16 push pushl sub pop cmpl inc pop jg add loope lods push movsl aas repz dec test inc stos add and sahf jg adc enter andb sub jl pusha mov jp aas clc bound jg add or (bad) shll dec push sub mov movl sub jecxz (bad) jg and sti push jg dec ret lods mov xlat sub pop cltd and decl mov nop push jecxz xor testb push inc inc jle sbb out mov jg pop daa adc dec xlat add in mov xchg add (bad) xor mov mov jg pop push fstpt dec push fisttpll jg cld xchg lea stos jg clc mov decb push jg xor dec in dec inc cmp xchg clc cld aas dec outsb enter stos (bad) push dec imul daa popa sub jmp into push dec xor enter sub or and ljmp out cmp fimul xor pushf inc mov aas scas jbe or and repnz inc insb lret jge jg mov rcll jg xchg push inc mov lea push inc shrb and jg nop movsl jne sbb sbb dec lcall mov ret arpl ja scas mov scas push pop pushf mov (bad) jg stos arpl jg jge mov data16 sbb mov mov jg cmpsl mov mov dec jg mov add mov sahf rolb repnz ja mov test xchg dec in in xor dec pop scas and jl add xchg movb cmp mov cli incb xor popa sub jg jg xchg test pop mov dec mov and xor lret inc sbb cmp inc divl test sahf inc jg push mov jg xor pusha mov cmpsb aas out pop popf xchg pop mov inc cmp xor idiv or scas mov sti aaa andl adc xor gs shl cmp mov push mov inc dec jg jge add lock mov cmp xchg popf jg js mov pop popa daa jg dec pop mulb push cwtl push repz aas xchg lds test jno popa xchg jg in out sbb orl jg pop das jecxz iret daa ffreep loopne and test stc aaa xchg movsl jg pop es sbb xchg inc cmpsb jg sahf add adc mov clc pop mov inc or das jl mov mov dec inc rorb mov inc (bad) jg mov push loop insl push cld jg addr16 adc mov sti (bad) jnp mov add out jbe adc jns lcall shrl pop cwtl (bad) add push mov (bad) pusha jg stos push stc cmp adc sarl mov mov lret nop xor dec in dec cmp push gs jmp mov pop (bad) (bad) fs outsb push lahf stos jg fistpll cmp insb jno xchg mov xchg fsubrs dec jg loop push adc ucomiss fwait mov and push mov and mov loop jne or jmp out data16 xchg jg push dec divl dec cmp jg and jne push je add and cmpsl fwait mov jae loope stos or hlt xchg inc icebp xor jmp sub cwtl aas rorb aas sbb loopne xor and mov ljmp jle or loope pop mov push rorl mov outsl pop out les fs sub push imul jg pop in imul xchg std jg jle jl (bad) aaa add loop outsl xor ret push jns (bad) xchg std js pushf push dec rcl stc pop jg (bad) push insl clc movsl aad xor movl inc ja div push fildl push test jno popf andl lds push test mov push inc dec xchg mov fwait mov jg add cltd popf popa add aas mov xchg mov data16 iret mov mov jno jg popf ljmp (bad) xchg ret stos (bad) jg push sub popa gs jg push push adc loope out dec jmp adc mov mov jg insb mov cmp lret jne jae inc push fwait aas jg mov sbb adc repz dec rcll bnd mov mov jle fimul xchg add jg xor add popa jg mov rcll jg xchg es mov and pop push and mov pop mov and mov pop push inc (bad) js xchg scas jnp jne (bad) scas pop mov sahf mov jg lcall jg xor loopne cmp adc cmpb out xor jle loop jg je mov aas sbb test (bad) (bad) mov cmpsl inc mov scas scas daa adc dec cmp (bad) xor pop mov int3 mov leave clc xchg pop or mov adc shlb cmp or jbe dec je jg sub ficom or rcl sub es in mov mov mov pop aad xlat (bad) jo or mov mov adc cmp test sti dec jns mov sub mov jae test out (bad) jg lret jl bound scas (bad) xor jg addl jg rorl or bound fisub push mov hlt cmp sbb fadds or (bad) add repnz inc aas push out inc mov pop dec push fimul inc jg dec test push jg ds push adc mov jbe inc icebp (bad) inc aas std repz int3 bnd mov mov cs mov les imul xor mov jg push push sbb out pop sarb add mov inc ss pop and push inc xchg jnp bound xchg sarl in push (bad) xor jg lods mov mov outsl add and outsb in sbbl mov xor inc sbb mov jge jg lock mov jne popa sbb mov xor lahf add jae xor inc loopne jmp pop or mov sahf dec mov inc jnp loopne fcompl fcomps insl xor sbbl nop jg lcall push scas leave fnstsw jge call loop jae pop pop cwtl cmp movsb jg mov or js xor pop inc test pop lods xchg jg dec cmp mov pop nop jg stos cmpsb inc push imul data16 repz xchg orb mov iret mov push enter movsl dec dec lcall xchg outsl mov jg jl cmp mov aad lods aaa xlat mov int sub call cld sbb imul mov xor xchg pop inc mov iret inc jb (bad) adc add lahf xorb pop cwtl pusha mov repnz out sarb mov push jno cmp dec xchg xor jg sbb and mov inc mov dec ljmp jg xor sub jle adc inc or pop cmp scas scas mov pop ljmp dec data16 ds add jmp cmp xchg dec jno idivb dec fiadd jle mov lahf jg mov mov mov js cld mov popf pop movsb jmp stc mov sbb cmpsb jg into inc lret les or outsl jg lods dec icebp stos les pop loop scas mov jg pop je push jg mov push movsb jg pusha rorl sbb xchg ja pop repz dec or jg jmp push xchg jg in sub mov jo pop lods mov jg xor rcll sub jg jge sub aas lret aad mov les outsl aam enter insl push mov push pop cmpsl aad stos imul dec xorl adc dec test test out mov outsl push int3 adc jg dec outsl cwtl (bad) sahf push mov dec pusha aam adc or mov lods mov sub mov sbb xchg pusha aas xor adc sbb stc mov movsb mov push (bad) clc mov jnp mov push or xchg mov xorl add cmp pop fisttpl xchg push insl (bad) jg and jae sbb adc mov jmp out sbb jg jae aam loope push push cmp push inc push hlt subl sub (bad) pop (bad) insl icebp and jg shl adc mov aas mov dec in adcl cmp int3 mov js dec lcall jg inc xor adc pop pop mov (bad) rolb inc ja test mov lcall cmp insl mov out mov sbb mov push (bad) repz mov jge push insb adc inc call jg int inc jae std inc cmpsl pop loop lds dec xchg sbb hlt lock jg fwait vmread inc int lods pop jecxz xchg ja sbb aam dec add lcall adc mov inc jae sti outsl xchg jg cmp cmpsl shrb pop jnp jbe fs test mov jg,pn pusha sub xchg loopne xor ds outsl adc add adc gs fnstcw jmp shl inc test sub lock jmp in pop cmp (bad) sarl clc into and lds mov mov pushf in push out xor and fisttp fmulp out pushf mov daa test jns and scas pop mov dec in xor add ffree push jg mov push inc sub jp fdivrs enter jb dec jne mov sbb jg ffree mov mov mov inc fbstp mov adc jg fwait or jg or mov inc push jbe sbb aad pop (bad) fisttpll xchg xor adc inc inc jg pushf cs or mov movsb push (bad) jg addr16 stos cmp ret sub mov push inc dec jg insl jp outsl rcrb xchg sbb scas rclb mov std or and add jo lcall sahf xchg fmull aas push xchg sub mov imull push outsl push (bad) dec cmp mov xor fdivrs push sbb insb insl dec dec mov addr16 imul data16 out dec jg jle test jmp jg sbb sub mov lods xlat call inc inc sbb mov jnp sub es fidivl jle jo and adc mov dec test addr16 jg push xor jg mov fsubrp ss test pop outsl movsb push aaa rcrb adc pop xor lds sbb mov mov cmp arpl dec inc jnp jle dec jp sahf jo jmp mov mov cmp clc cwtl mov movsl addb jp inc pop imul fcmovnbe aas jg jle jno xor dec sbbl pop (bad) hlt dec jg push lock sub cwtl sub mov cmp cld pop (bad) jg adc sbb sti pop xorl mov push in das outsl mov dec inc jmp jg shll (bad) and jg or cmp leave (bad) scas jg enter rorb push cli aad inc in out jg sbb mov mov jmp test push mov leave ja and mov pop es orl rorb jl cmpsl dec cmp (bad) repz int dec jg and push jg enter cmp mov jle pop arpl xor test push mov or daa sub pop adc cmp xor in (bad) lret mov orl mov push push add dec inc pop jnp inc jl sbb jmp xchg dec in cmpsb jg stos jb xchg dec jmp mov popf lds push push inc adc pop in mov and outsb movsl dec rcrl jp idivb lcall jg xor out hlt shlb pop or (bad) fnsave jg mov test ss and cmc (bad) mov adc jg popf call sbb imul clc mov decb jno iret dec mov push lret cmp ret test jg out mov jg pusha push fimull lods scas jg test or push mov dec xchg aas jg xor stos leave cmpl push mov mov add mov dec roll ljmp sub inc mov js mov (bad) jmp loop jmp jg hlt fisubl pop sub cli data16 aas ds roll leave jg sbb fwait jge cmp dec pop mov xor mov push dec (bad) jge out dec lahf iret adc push (bad) lcall push cmp lahf push insl dec pushf inc nop mov les inc jecxz pop (bad) jae daa xor (bad) ja cmc adc mov or mov pusha stos repz adc jmp sub cmc cmc push ds mov je xor inc xchg or push gs dec mov loopne repnz push mov push push push add (bad) jg inc cld adc cmp lahf or lea dec (bad) sub nop int3 ds sahf jg mov stc push jle and inc lock into incb fldenv jg gs push fistpll mov (bad) test movsb cmc mov mov dec (bad) test mov push addr16 fmull jg mov loopne aas inc fwait popa xor rorl cmc sbb (bad) jb adc adc in sub test and mov or xchg push or xor std mov js push lods jg and dec les jg insl xchg xor sbb jp ds sub jns (bad) fiaddl dec jb sub add aas mov mov inc (bad) pushf mov push test mov push lret mov in mov cmp pushf mov cmpl pop mov jg test adc cmp jno es pop xor scas jg sub outsb mov jle inc push cld pop loopne andl inc aad bnd pop mov dec adc jg add aam jns and push mov xchg mov xchg ljmp jg jae imul fcoms lock (bad) xchg aas fsubrl dec xchg (bad) jg add popa les (bad) jg mov inc pop aad sbb mov and out sbb sahf test jmp push mov fdivrs or or xor call rcrb inc insb pop cmp test addr16 dec loope out sbb push adc push mov iret xchg adcb adc in out mov les stc jg imul popf ret xor clc outsl cli aaa and ret std pop pop jp loope mov insl mov pop xchg jg inc sbb sahf daa (bad) fsubs out cmpsl sbb mov jg mov jae and jg push xchg sbb adc push mov xchg push cltd mov fsubp pushf loopne xchg cmp inc cs cmp cmp pop inc mov sub arpl cltd jg jge lock sub pop mov repz mov xchg jmp jbe pop in fcoml mov sbb jg in (bad) sarl jg js jp pushf gs jg arpl cli mov xchg (bad) lret jg test pop inc cmp iret clc mov fidiv jg popa lods mulb (bad) inc aam cwtl pop movsl sti (bad) je test sub mov out rcr outsb ffreep idivb xorl lock mov jle cli xchg jg cmpsb addb and out lods mov and jns loope xchg xchg stc jnp xchg sub cltd rcll jle cmp int3 mov sbb jo mov xchg (bad) stc js and test inc xor js jg outsb leave mov (bad) cmp mov push inc loope jg cmpsb cmpl jg scas inc mov inc adc jo icebp add (bad) jg ja jnp lcall inc ja mov sbb xchg lods das add mov pop sbb or dec clc mov in insb cmp and mull mov jbe movsb jo cmp sub pop aas pop inc sbb jne dec dec test jg test mov daa jg in cld cmp mov arpl nop xor inc outsb lods aas or ss addl (bad) ja je sub jg arpl xor xchg xor outsb xlat icebp jne add dec cli push mov or sahf mov adc cli dec jo jg pop into adc xchg mov icebp repz or out cmp jg sbb xlat je icebp mov and add mov sar push sbb cltd aam and cmp jg add rcrb jmp cmp push dec outsl test jo mov sbb ret fidiv push rcrl js (bad) xor sbb push lahf inc mov sbb test mov ja push jg aaa xor sub bnd lock int3 stos mov call adc mov inc lock ss fcoml (bad) imul adc aaa (bad) jle popa pusha cld jne jg adc dec (bad) popf jg lret es dec repnz (bad) push data16 push pop jp mov outsl mov mov popa shrb bsf je test and aas mov jo dec stos mov fs (bad) leave jg xchg push jg jecxz xor or (bad) add aas sbb push and bnd loopne jg,pn sub xor inc sbbl xor addr16 iret bound adc add mov faddl jno cmc jecxz les mov std sti cmp push lahf jg pop sub scas test jo jg test aam out cmp es dec jne inc popa xor cmp ja dec mov repnz rcrl inc mov daa jg push mov lea mov adc movsb jg mov icebp mov cmpl aad (bad) jg iret fsubrl cmp jg sbb dec mov sti inc xchg xchg adc or sarb jno ret cmp int3 jg fs dec mov mov lcall movsb inc cmc out push jg mov inc (bad) mov lock xor jg fisubr sub int3 jg xchg sub xlat out lock sarl pop mov pop push dec jge dec movsl xchg int3 xchg int insb sti test xor daa mov inc cmpsb jmp jg pop mov in popf stos fidivrl bnd pop pop sbb jg testb mov sub add jg adc movsl aas jg or fstpt dec (bad) enter fwait jg dec aas xchg add dec cwtl jg jg cmpsl sub push mov push push inc xor sarl lock cwtl lods je jg bound push popf push cs ror aaa jmp cmp jg fisubrl mov outsb test mulb gs inc dec adc test and xor ljmp and inc push js adc dec cmp sub adc nop pop shrl dec cwtl push icebp inc mov sub xor cli (bad) pop cmpsb add scas ret fcoml (bad) inc or aad les sti sub std call test mov popf fdivrs sbb cmpsl inc pop es and jg jg mov adc jg jle pop adc mov fstpt (bad) (bad) cmc sbb jge,pt inc idiv pop inc leave xchg jmp rcll mov lret add jnp mov and sbb jg jg push xchg stos inc jg pop lret loopne movsb push mov data16 add jp in jg dec repnz pop ss push jg mov inc arpl cmp mov movsl cmp sub into xchg or out (bad) arpl in stc mov push sub test (bad) mov outsl dec stc loope jne scas lcall ret xlat sub aas mulb aaa pop fcmovnb jg fisttpll fsubrl mov xor xchg lcall (bad) cmp mov iret jns jb cld cltd rorl mov mov nop cmpsl jno dec jg cmp mov jg push inc pavgw jae inc pop inc dec mov xchg imul sar scas imul push sub lock notl jg mov jg ds pop or sarl (bad) jbe cltd addb insl inc jns cmp mov out and mov rcrb inc adc fadd push enter jg push arpl mov push mov popa push push jg push push jmp clc jg push shll cs mov sub mov lods mov dec fimull jg jp es xor imul mov inc fcom mov and sub addr16 arpl add dec jp mov outsl xor std arpl aas lahf shll jg test inc jl pop push daa test imul jg or xor mov scas jnp add cltd test je push inc sub jg cmp mov dec mov push out adc adc stos jbe jg movsb sub ljmp add cmp inc loope jns sbb xchg jg aam jns out mov leave jg fsts je dec adc fnsave ja dec or xor cmp dec dec xchg mov inc hlt xchg outsl mov aaa mov cld out arpl mov jg pop fcoms ret js (bad) mov sbb mov dec movsl ljmp push jmp xor mov lahf lret inc jg dec rolb mov push jb or aam out pop lods sub jg hlt push adc push fdivrl fstpt or push xchg pop and idivl or inc push (bad) jg test cmp xchg add les inc std fmull push xor mov jl add jg (bad) imul aas clc mov lahf push pop or xchg in push iret dec and push adc mov lods jp jno inc mov fs xchg (bad) xor fistp jg repnz jle add mov lret xchg cli jg push mov cmp popa jg push lods jns adc jb adc (bad) and cwtl push mov jmp cmp jg,pn (bad) in pop mov pop dec scas add mull ret dec scas mov xchg mov fisubl (bad) jl sbb jmp test aas xchg in jp out (bad) sarb mov dec mov xchg or movsb data16 or mov jg outsl rol shrl daa scas fist jecxz addr16 popf mov inc jg cmp sti cld lret mov jg popa mov scas (bad) dec inc sbb xchg adc lock cmpsl dec and faddl lahf fnstcw lahf and les mov sahf sar scas mov test ffree out dec cmp mov sti xchg xchg pop mov addr16 and mov ret push adc add sarb aas xchg dec scas psrlq jp pop inc ret jno jg mov jbe lea cmp roll jb lods shr mov pusha add or or xchg mov fwait mov jo cmp push lods ret mov iret in mov aas cli xchg stc movsl mov jnp or call and or leave insb hlt das adc fidivrl pop lds jne iret data16 cld (bad) imul loopne mov out mov dec les leave sub (bad) sbb fidivl push sbb popa inc jg fisttp call shll or jg dec fwait mov jg out test jp popa jg xchg (bad) xor push adc cmp sub leave or fidivl addr16 out pop cltd pop lret scas in inc mov dec (bad) sar mov adc xchg mov pop jg and xchg mov mov jg loope int pop addr16 ret cli pop inc and pop inc pushf jg jg test add add and or clc cmp dec jg mov xchg pop jg out jbe ss cli jmp lret inc scas inc pop jg stos sti clc loopne cmp cmp fldl jbe cmp mov or lods jne sti pop test push push pusha xor (bad) jg or sbb aas in mov dec fistp adc sub fwait cwtl ret jnp test mov sbb mov pop cmp mov and jg test movsl mov sub outsb popf imul fldt jg aaa sbb mov ret mov add scas movsl cmc call xor and mov ret lcall insb and outsb mov fucom stos jmp jg (bad) in sbb ds mov xchg dec test xchg mov dec mov mov ret mov insb mov fadds xchg add jg,pt sub frstor mov repz hlt mov jg (bad) cli addr16 cmc enter xchg jle mov ret and push xchg dec data16 jae sub aas push or leave bound mov lds ret and data16 xor push xchg mov inc in jg xor jg jb jp ret mov mov mov out xchg sbb (bad) adc jo sti push aaa inc std pop jg lcall neg push (bad) hlt dec insl jg pop sarl fs pop inc (bad) cmc jg adc xor ja jg stos (bad) xlat pop mov ret int or into outsb sub mov jg js pop sti xchg cmp push pop icebp test les mov je jge negl cmpsb mov xchg adc in enter push insb icebp (bad) jmp xchg ret sbb imul je in stos jns jb dec jg mov or inc call sub (bad) (bad) sbb and push mov push addr16 cmc jb jle pop sbb sub sbb adc jg push and mov pop loop movsl andb jg or mov dec adc inc lea pushf or cmp (bad) aas data16 pop (bad) mov bnd lock pop mov push add jmp inc pop hlt test test push inc pop jg push in add adc subl inc pop les mov jnp inc push jo lds inc adc clc jg sub mov cmp aaa xor scas in lcall jmp mov push mov jg in (bad) in fs mov and xchg inc nop push mov xor xchg int inc mov sahf in (bad) xchg mov mov (bad) push out cmpl imul insb popf jg or xor xor (bad) fs jbe mov cwtl sbb mov into ja add jg or sub jg sbb leave daa sub push cmpb test clc jg xchg dec int cmp and (bad) imul inc pop lret idivb jae aas test dec lods int jo and sbb (bad) jno xor (bad) repnz cmpsb test or cmp scas inc inc sti sbb jp inc cmp pop adc adc test iret js call push dec aam adc aas push cs sarl push mov add add xor popf imul movsl arpl (bad) dec mov aas int xchg push push mov mov xor or scas (bad) jb and in out and out rorb jg ljmp jg add ret fwait addr16 out jg mov push cmc daa cltd and sbb dec mov jg inc je dec mov mov push mov mov jg rcrb (bad) movsb sub addr16 xor fistpl adc lods push jg das nop mov inc (bad) inc lods mov int pop sbb mov or sub in hlt push mov jg mov pop push aaa mov iret mov rcl pop dec cpuid js sbb jg sahf adc adc pop adc inc es repnz das mov push (bad) pop (bad) dec pop mov data16 or lock std mov lea (bad) mov fs pop lods xor jne mov scas pop (bad) mov jg arpl (bad) jg xchg inc mov enter (bad) jae cmp push aas sbb lret mov ret mov mov (bad) test cmp cmp (bad) jg lea or mov sub incl or jg pop xor scas and out cmp insl and jbe cwtl fwait push mov pop stos pushf mov pop add mov fdivp lock or out push cmp jg push ds pop das mov lods pop rolb iret loop ljmp dec or lds and sbbl or into push mov jg push fs lods dec add mov xchg xchg mov out cltd jmp mov insl incl jg mov into sti mov inc jecxz sahf aaa xchg jg xor pusha out xchg inc cmp bound dec pop jb es inc jg (bad) sbb lret std jg repnz mov mov neg fcomps fwait push jecxz mov scas repz mov jg mov fsubrl je popf mov (bad) aas sub inc mov mov repnz (bad) xor gs jg in jns pop sti push shrb lret rclb lods adc les imul test rep xchg lea fdivl adc imul jg,pt mov push test mov outsl setp dec cld lock jae mov fldcw jo sbb mov sub inc out jnp jg sti or mov sbb ret mov nop or xchg jb sarl mov push mov fwait sti gs push ja ret jno xchg xor mov fsubrs push and or dec lods cmp popf mov pusha jne mov dec andl scas jg xor xchg cmp jo adc adc push mov push ret push sbb mov (bad) add jle inc dec jo aas cmp sbbl or cld add jg cmp cmp gs test mov pop lods or inc push popf jg loopne or imul cmpsb xchg enter sbb adc mov pusha int addr16 (bad) aam sbb jns jecxz sub or xchg repz call ja mov imulb and dec dec adc jg nop or sbb xorl in or cmpsl jecxz repz cmp test sub mov stos pop loop push addr16 daa sbb arpl mov jg movsb sub jmp mov test xor orb fwait insb dec mov mov cltd cmpl jmp pop add dec out mov sub mov cmc xchg les cmp pop mov sbb insb sbb popf jg cld leave out shrb mov or fdivrs jle insl inc adc lret jns sbb jg stos xchg pop push xor inc aad je jg insb ss cmc pop and push sub cld xchg jg out xor xor sbb aaa jg in dec leave enter pop popa lea cmp add mov pop mov lahf pop dec outsb clc (bad) jbe push lods (bad) in addr16 nop (bad) out (bad) (bad) or jg mov in jg repnz mov mov sub sarl cmp in jg lods data16 inc (bad) addr16 out cs jg stc (bad) jo test decb popf add jg sti clc mov aas shl mov fdivl jg inc arpl sti add fldt fistp lock jg imul cmp lahf inc jo mov push outsl fyl2x ds lea mov inc arpl or push jp in mov cmp cmc push xor out test addr16 mov scas mov jp sbb popa ds push mov pop icebp lret lock fsubrl push jg or cld jbe imul fmull pop add out jg inc cs sub mov mov fmul push xorps sbb and jl sub sar cmp xchg dec lods int3 sbb mov test xor data16 sub out xchg in dec jne (bad) or xor adc sbb mov sbb stc imul xchg aas add ja cmc jno inc add jnp mov mov jl lret cmc sub and (bad) in inc fsub fisttp int sahf les pushf aam ja pop jg repnz (bad) mov or addr16 insl sti and push pop in mov das lahf jge lea pop mov jg fwait cmpsl stos test pop and inc (bad) mov pop fist mov dec push pop (bad) pop inc arpl bound dec jg mov rcll pop sub icebp (bad) xor ja jmp xor pop cmpsl rorb xchg sarl scas outsl cli out out lock loopne mov jae dec jg imul jg in sar ss and rorb lods (bad) pushf jl lret jno shll fs sbb adc (bad) insl lock outsb push es jg push adc pop std ds insb cli mov and pop mov pop or jg pop jge inc or jecxz mov test scas cmp jg add mov mov adc mov in cs idivb frstor (bad) dec insl repz divl dec jg out cmp idivb fwait mov jmp sarl sub sti pop popl inc in mov stc iret loop adc adc xchg dec jl lods jg fidivrl out insl cmpsb test add add mov xchg outsb inc rorl mov mov aas push xlat cmp std xor loopw sarl sar mov sbb mov ss mov cltd out inc repz and jg test push push inc dec jg pop lods mov jae mov aam lret shrl xchg inc int jbe mov or add pop lds push in xor jb jg jmp sahf mov mov push mov mov jecxz sahf test inc sarb test pop clc jmp scas loopne jae cld lock stc insb scas das pop jg lods push or sub test push mov loopne jg and xor jae out sub xchg jp movsl pop or push mov jle popa fs jg hlt adc adc xchg lds pushfw jg sbb cmpsb insl xchg mov xor mov jg jnp xchg stos mov lret sub or push loopne jbe add and lahf fildl sub outsl fstps mov aaa and jno das sbb sub sub dec jnp jg push lock mov push mov sbbl pop aaa dec or divb (bad) call jg ss adc push fcoml jg rolb mov lret popa in jb out mov jg notl inc push cmp movsb jb cwtl and out out sahf inc xor int3 dec sbb dec sarl fsubr inc test sbb jbe icebp lret pop jne xor loopne mov pop cld jp jno xchg jge jg mov sub jg push jne out pop stos (bad) mov lahf addr16 mov arpl add mov aas pop dec mov push arpl jg adc jo jg int xchg lret fidivr sub mov add outsl loop dec xor mov pop stos std pop orb jg dec sub in pop dec insl test pop cmp (bad) mov add adc jbe lahf inc jg cli orl sbb mov aas xlat add or and push jg dec xor jg cmp call and paddw dec clc pop jg aad xor mov ss and sbb shrb js add jb xchg scas fs xchg push sub mov and xchg mov push jg movsb std mov dec mov test pop sarl hlt test push mov jg test and mov push xchg pop lods mov ljmp push pop out (bad) (bad) int adc push jg jecxz pop call sti jae (bad) insl daa rclb mov testb nop loopne sahf and xchg sbb pop call (bad) out imul fstpt rol jns push xchg fdivrs psraw ss lahf inc jg cmp sbb adc xor (bad) xchg cmpsl push cmp negl imul mov xlat jg push and insl jmp sbbl adc std lea mul movsl add mov stc pop inc mov sub lcall jge ror mov xchg and jg and jecxz (bad) fnstenv cmc lea fisttp out mov mov lods (bad) jo xor (bad) out adc das push cmc pop xchg cmpl dec jg adc mov mov notb fisubrl cli scas sahf jg int sbb rolb jg lods and (bad) (bad) outsl bnd xor out jg ss jge inc push adc int3 jno jg das push adc ja in adc aas lds sbb movsb mov or pop add cmc lock ret pop jb inc push sarb insl (bad) stc inc cmp scas dec and fist cli (bad) jae jg xlat (bad) (bad) jno mov (bad) xchg push (bad) dec subl push loop lcall nop mov sti pop std jecxz mov xor bound cwtl cmpsl push cmp jno ret pop jecxz idivb push push cmpsl jg mov scas push jg pop imul std subb pop stos lcall pop xchg mov gs repz jg daa add mov call mov xchg and out push sub mov dec fs jg int3 xor mov sub jg mov sbb sub and inc push in (bad) push fldcw fbld jl call je or push fsubl cmp mov cltd sub jbe mov mov mov movq inc movsb mov push jbe loope (bad) mov jge push push cs out fucomi into jbe pop out pop ja popa loope stos icebp sti xor mov ret pop jmp push push jns repnz movsb out enter mov dec xchg ljmp cmc into mov cli cmp mov cmc imul push mov inc pop out mov imul pop into ss mov stc shrb loope jg xor in jg (bad) jnp and aas cltd lret dec push (bad) leave push inc or pop or mull cmp mov sahf pop xor loopne lds ret xchg mov jg test arpl (bad) in call lea dec adc sti push or addr16 rcll jg mov and std out sbb mov aad fstpt mov inc xchg or dec jp jg repz ja inc test jg cmp dec jg xor andl mov fwait inc jmp jo (bad) or stc dec mul and xchg pop add mov jecxz popf popa sbb das or jg fwait sbb pop push nop jg mov imul pop add jg sahf (bad) lahf xor push addr16 mov ret fcompl mov jg dec adc repnz out dec or inc out pushf test hlt cmpb dec int xor jg jge dec lea stc pop mov mov sarl fldcw cmc pop and in push dec subl jns movsb jg outsl dec and dec xchg js add fistp push push xor lahf fidivrl adc in jge jne test jg push sub or cmp fwait ja add xchg icebp mov and mov pop xor or sub xchg jg outsl and xchg fcomps inc jno add sub fisttp (bad) jg mov rclb push sti xchg movsb sub jg mov mov xchg jno push inc mov iret int3 cwtl xchg bound mov adc sbbl lahf xlat pop mov cmp add (bad) clc jne data16 push dec nop gs stos loope jg outsl adc aam dec ret lock in push push lods test xchg mov fadds inc mov push (bad) je xchg icebp pop push (bad) sbb in sub jg ja add sahf stc (bad) bound jg daa lret movsb cltd jnp (bad) nop pop popf cmp or cmp sarl mov pop adc mov push (bad) or outsl mov and jno xchg mov ss in pop or stc gs into cs pop push mov jg ljmp jg scas in insb mov push xchg cld cmpxchg and jg fcmovnb lret pop mov data16 xchg cvtpi2ps sbb out repz cwtl xlat pop dec pop shl lock and mov aam loop xchg icebp fadds mov inc pop jmp xor jg in ret fstps jg rcrl jg xchg pop cmp test mov mov jg outsl (bad) inc stos pop cmpl push mov mov pop push jbe mov pop loopne (bad) hlt jg push ja repnz lock or dec sub mov ljmp rorl inc push jg adc push lea call js,pn add pop lcall add loop mov fcmovnu xchg dec xorl jne and jg fist push jmp add mov shrl stc not sub sbb mov std adc fnstsw test pop outsb mov repz xor jae cmp cs inc imul or popa inc aad jg and xchg and jbe jne (bad) xlat jg push pop inc imull fnsave mov daa ja imul jge dec inc jmp movsl push mov loopne sub jne and les pop mov pushf loope jg (bad) sbb jns mov sbb int jnp cs xchg ret jbe (bad) jg push xor or mov inc jecxz arpl pop pop out push out outsb jg mov aad jg lcall jg fnstcw adc mov mov lret int3 add mov cmpsl jg and stos sti or jns jecxz (bad) sub jg pop push rcrb insl nop push mov add xchg pop roll sbb dec inc sub push (bad) jg or or mov popf xor sahf stos mov (bad) jg rorl js pusha imulb sahf inc mov inc adc push jp (bad) out sub ljmp jg push jae cmp mov xor pop xor (bad) rol or add aad mov dec pop cmp add jg ja mov mov imul popf jg cmp mov jg jp insb xor jl cmp insl sbb lret idivl adc adc mov outsw outsb mov scas dec aam sti sbb movsl cmp fwait dec lods cmp stos enter fcomps jg mov mov popf scas sub dec int and add jg (bad) shrl jg jmp inc mov popf jg xlat jb arpl sarl sbb popa loop mov xchg sub lock test cld bound xchg or mov popf mov pop xchg xchg sbb add fidiv inc in jg and and cmp jg pop lock outsb mov adc cltd xor (bad) mov inc xchg sub mov jg loopne push xor in ljmp jg pop int3 dec test mov lock jg outsb mov inc outsl jmp sub push mov mov xchg inc adc sub and es mov enter ficomp imul loope push jg pushf scas clc aas insb mov mov rclb jg sub xlat rolb inc xchg outsl pop and sbb (bad) fidivl loop jg inc sbb or fist jae loopne xrelease mov arpl popf cmp push ret jge in add ret inc jg outsb lret int xchg jle loopne cmp loop dec cli add and lret or cmp push jg pop mov inc jg mov (bad) icebp test int3 jg insl xlat inc adc sbb push stos lods sbb (bad) jle mov outsl inc imul pop push sahf outsl sub movl repnz jg,pn cmc dec push imul (bad) sarl das sar lods pop jecxz aad mov cmp jg and mov insb sbb aam mov idivl (bad) fildl jno mov add and mov dec icebp lds repnz popa hlt rcrb push js mov cltd js mov mov xor insb sbb push mov mov inc mov pop xor add mov xor and mov push push imul jp cmp outsl addr16 fiadd imul pusha movb push dec pop xlat fisubrl dec movsl mov js jns cmp mov inc xchg dec idivl jb pop mov inc pop sbb insl aas push pop test sub and jg dec (bad) fsubs sub pop jbe les idiv adc mov aad or dec ja sub movsl push dec incb lahf je or inc cmp push pushf pop sub pop sti xchg sub dec addr16 vmovapd fcompl and es xchg hlt gs aad mov jg jl xchg mov jmp jg mov sub mov (bad) icebp outsl push or mov jp scas shll or jg xchg cltd push lahf nop dec jmp stos sqrtps xchg cmp popa jg stos inc ss dec mov xor dec or outsb pop sahf jg cli xor mov dec sub pop pop shll cmp jo pop mov les out push nop es sub shlb xchg jl mov hlt xchg ja inc js xchg lods jg xor ficompl jg mov movsb mov jns push mov fbstp xchg mov ljmp ds hlt rcll push testb jg stc fbld js jmp pop sbb dec jp jg mov les pop add adc (bad) mov popl repz out push jle adc jg push out sub adc jg call test js cld es push (bad) div movd add daa jnp into or pop xchg sti pop xchg jecxz clc lahf jp fmulp repnz pop out mov add outsb mov add mov jbe or adc inc pop (bad) jg jno xchg rorb jo gs inc dec popf dec mov mov inc pop xchg addr16 popa cmp ja cwtl je jg push pop cmp out jne call pop inc (bad) and jg test mov jno xchg jg push rcll cmp jg mov bnd push mov insb mov mov dec mov scas popl jg mov sub push inc int aas movq (bad) das or cli mov xchg xchg stc ficomp aas lret push ja mov repz inc out sub lret jg inc test jo (bad) jg ss jmp out pushf js hlt ret lock xchg mov sti addr16 sub orl mov add je pop fs in aam pop pop push jb mov xchg dec dec sbb into or dec pop push shrb stos add cld xor orps inc push dec outsl (bad) xor xor jne out and mov xchg sbb pop lret das jg loopne aaa in cwtl xor push dec fs jnp clc scas js (bad) nop xor pop push lcall repnz ret and imul jg imul mov test aaa jg xor sbb sti rorb ficompl push pusha stos jp ds fdivrl aaa sub pop jbe cmpl mov stos scas fsubrs fistl mov addr16 rolb inc xchg mov mov sbb jns ret gs mov repz pop daa jg leave mov sahf jg gs pop ret or jno pop scas pop fs adc jg icebp mov loope and mov cmpsl pop jnp cmp inc cltd and mov jg mov inc pop mov popf or sar ret ret and insl gs div xor mov (bad) push xor sti jg fbstp test ret push insl iret push jnp sub inc xchg mov mov mov into iret sbb mov xchg dec jg,pt inc test fadd (bad) aas pushf jno mov inc dec imul sub jmp push pop inc jg dec ds daa xchg xlat (bad) jg std pop adc int jo jg cwtl lock inc dec gs cli ja dec outsl fwait add enter aad aaa out scas popf jg cli imul dec jge loopne int xchg in aas test sbb adc (bad) movntps dec rclb je mov jg jbe push xchg nop xchg lods lret or jmp icebp cs pop pop (bad) hlt or add jg and std stc stos and inc in jp push cmp pop ret ja or fnstsw xchg jne mov lods sbb insb pop jg rcll mov icebp les mov pop sti jb lcall lret add mov push push jg xchg dec mov out aas movsb and mov jle adc pop (bad) out xor or std popa xchg cmp fdivrl fstpt outsl sbb jg cltd inc hlt or sbb inc sbb ror dec mov mov pop jge pop jmp pop jg lods or inc gs ret push in ss sbb inc shrl aam pop dec inc sub cltd jbe push pop jne mov xchg push jb loopne jg arpl movsl test rorl lods and (bad) pushf leave aas (bad) loop divb mov inc (bad) fwait mov addr16 cmp (bad) cmp add jne jg gs adc inc scas ret mov jg leave mov test ja in std pop add out enter cltd dec xor jp add pop dec mov jg out (bad) mov fsubl inc aaa pop rcl (bad) jl dec nop mov dec pop push jg into in sub (bad) aaa mov ficom or inc jo test loopne,pn cmp das (bad) scas push cmpb sarb or jns inc jg fstpl jg,pn incl stc jg ret cmp adc add mov outsl sbb popf cmp jg cli (bad) xor jb mov push xor inc inc sbb pop mov inc add pop pop sarl mov outsl popa pop jecxz aaa lods scas dec inc dec cmp (bad) daa cmp jg jmp ja xor stc jg inc adc ret sbb sbb jg pusha clc cmpsb cmc outsl (bad) repz test jp jle mov jns jg sbb not push jmp add orb xchg adc cs pop mov lcall insl sbb push inc add adcb test add mov fsubs loope ret sbb lock aas sub xor sti cmp sbb mov xor dec jl loope popa pop ljmp fnstcw sbb push xor das mov jg pop outsl cmp out add jg (bad) negl sub dec mov mov dec jnp mov cmpsl jg sbb (bad) aas jge adc ljmp and insl lods aas xchg push jp and cmpsb dec mov sbb outsb jmp mov dec xor jg dec or pop jg mov int3 rorb std push int das sar xchg push out xchg ffree sahf sahf pop push aas imul in xchg cli dec mov fstpt mov push lock xor pop sti (bad) scas xor mov aam into inc stc loope and xchg test pop push push xor jg into clc popf mov jg fiaddl push lret xchg in jg fnstenv adc mov enter mov inc fucomi jae adc insl pusha lds fbld gs or dec ss mov adc push sub fwait mov jg xchg adc in xchg jg iret and rclb mov jg lret jg icebp mov mov add pop mov mov jg rclb lret inc adc fstpt xor sti xor dec push and out inc sbb pop lret icebp xchg pop jg dec lahf outsb push inc inc test mov (bad) dec cmp jg and cld mov mov inc (bad) negl jbe jg push ss fidivrl push (bad) push cmp cmc jg lock sahf movsl sub icebp mov out inc pop (bad) out mov loopne cwtl or dec xor jp jg jnp rcrl push (bad) dec mov sub mov lods mov in jnp in jg arpl push data16 fistl jg clc mov mov dec rorb jo (bad) repz es mov jg,pn mov mov mov adc lret sti dec and push cltd mov push jg outsl pusha mov into fistpll scas lret and rorl das adc xor outsb jl and idivl jp outsl into sbb jg mov lock add arpl fadd mov mov dec inc insl jg dec and jg adc hlt push loope inc mov xchg jae (bad) xchg in jg stos mov in out dec jecxz jnp loope mov inc pop mov sti leave sbb test jge aas je xchg xor sarb stos add add aas lock sahf loopne inc or jp pushf je and data16 jg add add rclb mov imul cmp inc sbb out inc or aas in mov popa ficom and test mov add jg dec mov cmp dec mov mov in inc and dec dec sub pop lea mov (bad) inc enter mov pop jg xchg or xchg inc shr xor dec jg pushf enter and jbe mov mov xchg push jl test jmp int mov adc shlb jg lods jp pusha adc pop cmc mov jg stos and mov sub cmpsb test xor pop push in subb cmp loop ret iret insb jg adc sbb lahf lods pop push mov mov jg push jmp repnz xchg call add enter ja pushf fnstcw scas sarl push push xchg jg fdivr xchg shlb mov (bad) dec scas add (bad) and mov dec fild jecxz jg jno cmpsb push inc adc sarl in sub nop jg add pop movsb (bad) cmc xchg and inc ss mov dec (bad) xor enter hlt ja mov (bad) lea outsl dec push mov ja rcrb jg inc insb jne add jg ljmp mov push or jl fucomi aad dec inc out jg (bad) pop popf or xor and lods push (bad) xor jbe xchg jg mov adc dec push jg lret nop sahf add adc jg lods fcmovb in jne jg xor lret in leave (bad) lahf push cmp push pop shlb sbb mov mov pop mov push ja xor test cmp ljmp (bad) push jnp jg int3 loopne je cmpsl dec mov test jl in cmp idivl push cwtl or sub mov jg les in mov test dec lods lcall push add inc mul scas je cli iret sub jnp flds jg xchg cmp lods (bad) hlt adc jg mov das arpl mov cli or fisttp and test (bad) mov loope cmpsb iret insl mov ud2 mov or push dec das jle movsb xor repnz clc xchg int mov ja push sti inc push les popa or or lcall arpl mov test insl inc pop jg rorl (bad) mov mov adc clc dec jo pop pushf xor jle iret imul push pop xor (bad) (bad) sarb lds addr16 movsb jg sub push hlt dec sbb roll pop dec sub jg lcall inc xor fisubr ja (bad) in dec imul or aas jg pop add add pop add xor xorb jle dec cld rcr xor arpl jg jns xor lods inc cmp add loope jg mov dec adc xchg sbb jg ror jo aas fmull ret jl xor lea cmpsl sbb mul mov dec dec in push sub sub imul sbb jg outsb call clc jg push adc jg pop jecxz adc pop dec inc mov push jg jge insl lods jb (bad) mov mov mov xor mov fs mov xor push and pop jmp aad mov inc pop aas pop pop sbb mov sbb sbb fdivrl movsb pop and and and test sbb lock aam mov les mov pop loop pop addr16 jg call jne jg int3 pop lods xchg xchg sub fs roll mov loopne js pop fdivrp xchg mov jg test jg cs mov jg scas cmp cwtl push mov inc test int3 mov imul dec enter lods lret xor jg insb jns fst out jg out fidiv jg mov nop lret jg sahf and sti repnz ljmp jo cmp xchg ja sahf sti rcr mov and jle jae dec fwait je jg out cltd cmp jg test aam jg mov inc dec or xor repnz jg test ss icebp jge ds sbb inc pop sbbb mov jle decl inc and mov inc cmc cmp repnz test inc inc ljmp push xor cmp jg clc xchg in fnstsw sub jg data16 dec insb int3 adc add mov divl fcomp jg mov xor mov das popl pop je iret jg cmpsb sbb clc daa sarb (bad) pop mov dec imul jg lock cmc mov sbb mov jbe jg imul push push cmpsl pop sti std jg imul xchg pop (bad) fidivrl nop outsl or and lock repz stc les push mov daa cmpsb xchg (bad) push loop pusha jg (bad) fs cmp ljmp and jg push mov add jg pop lock jo push push fdivrl lcall sbb xchg sub mov out sbb scas xlat mov jg enter cmpl gs cli and test repnz jg push xchg mov dec xchg aas mov lahf addb mov sti dec fstps outsl mov out jg in movq cmpl popa lds mov into push cmp or mov mov bnd push mov xchg push shll daa fidivrl jp ret and rol hlt dec fldt popa cmp mov xchg mov jecxz (bad) jmp jg xor jae mov les mov imull inc jg add repnz jg mov push cmp jg mov loop arpl jg out lea test mov call jg cltd movsb lcall decb adc inc fs jg xor xor add je (bad) inc pop mov (bad) js sbbl jg mov jbe js pop mov int3 (bad) loop cmp sbb aam outsb mov jno jle (bad) jg cltd jg mov rol rorl xchg pop out ljmp loop or jg mov outsb aaa js jno popf inc imul jg stos rorl mov inc dec out mov jmp dec dec std push jg hlt movsl mov aas addl ret or (bad) loope mov push pop or (bad) xor aam sbb les jg or xor jg mov mov mov jg mov movsb popl jg push sti popf clc adc and nop dec pusha jg mov aas cli scas repnz stos int3 bound fstpl cmp out jg loope stc xor adc inc cmp jbe add cmp ret rorb das jg or pop cmp jbe and mov pop add mov ja jg jne dec jg imul inc jns sub adcb sbb cmpsb outsl and pop mov jl or jbe pop mov jg pop push add sti enter mov gs xor jb cmp jg dec (bad) incl pop daa inc and aad push insb test outsb and pop stos inc test loope je pusha cmp cmp call jg push inc lds cmp jg rolb add add or nop mov cwtl in jecxz pop cmpsb inc jg mov jge jg aas test mov push dec dec lock and repnz push jg sbb jae js dec mov push test int enter packssdw mov mov mov movsl cmc scas inc (bad) dec pop jbe icebp cmp mov jecxz in mov into mov xor call adc bound lods add push inc mov dec mov nop mov push loope outsb jg dec (bad) out inc inc shr add inc daa das and sub jno in ftst push cmp xlat push xchg jg adc test je ljmp pop mov mov call sub stos jg les inc int outsl sar push leave bound fsubrs aam arpl insl sub call iret jecxz jl and fistpl loopne adcl push jb jmp add fcomps and jg mov lahf leave lock setae mov xchg ja iret movsl in out je loope pop out pop jno pop arpl mov inc xor and pop sbb clc bound rolb and imul sub in push iret mov outsb repz notl cwtl sarb jns push addr16 jg mov inc adc bound sub push adc inc lds jg orl js ljmp (bad) shr aaa cmp push jg cmp sarb jns jge dec xor add inc or pop or sub aaa mov inc cmp mov in lahf mov cmpsl pop cwtl dec push cmpsl loope addr16 push std sub lea leave out and bnd jg push push daa aaa mov pop ljmp lds dec out or mov repnz xor jg leave inc fwait rcrb adc enter jg adc nop mov iret adc daa and repnz add mov sbb jne aaa (bad) dec sub pop mov sti popa cli cmp pop sub psrad xor cmp loopne (bad) cmc mov jns bound aas ljmp inc movsl stc mov adc mov (bad) aaa inc lods js inc lret pop ret popa jp sbb scas shl pop lock sar jmp pop fidivrl jmp or insl lret jg rolb movsl mov jnp push jg lahf (bad) push sarb and cwtl lret jg jg adc aas andb inc (bad) mov or outsb sarl lret insl popa cmpsb fdivrl lock mov mov es iret pop jg cmp je loopne repz push push int aaa cmp inc jg sub and enter insb sahf into test pop inc jg mov ret cmpsb sbb leave push xor adcl in sub das mov cmp pushf das cmp shrl pop cld pop fwait jns and sub das int3 js outsl or cmpsl pop xchg add or jecxz push push fld1 add or adc pop adc test push dec outsb cmp and jg lcall jg str mov xchg rcl stc or jbe pusha xlat imul enter cld mov cmpsb lods inc or (bad) jg sarb out pop xor insb aas mov push ja cmc or jg push es xchg cmp push mov sti pop pop sub roll sbb outsl mov (bad) mov pop bound scas dec inc sbb sti pcmpeqw ds stos mov xchg popa test inc jl sbb pop int3 add jg rorl decb into das jg mov leave add xchg ja mov dec andl add or add stos xchg jo stc adc loopne xor nop jg test out (bad) pop popa xchg loop mov rclb xor dec jg add scas xlat aaa pop and mov aam mov daa xchg cmpl push sti dec sbb sbb mov jae cmp das add jb ret iret dec or jmp mov arpl (bad) aaa inc jg sub popl mov or idivl dec mov (bad) jg mov jp jle into mov jg je or push fcoms jg cmp jbe push icebp adc pop mov pop sbb jmp xor shrb aas js mov push mov mov inc call jg mov aas sbb push out addl leave jg push outsl pop mov lock push xchg (bad) sahf jg (bad) bound imul dec fsubl (bad) jg xchg pop call das or int3 jg pop or mov inc test fisubr aas pop ljmp pusha ja jg adc xor pushf pusha aas mov stos cmp bound jns pop jp inc inc sbb fldt cmp dec jg cmpsb cmc pop gs aad xchg ficomp push mov dec fistpll jp popa xchg xchg ja movsl xchg sbb fisttpll jle inc dec and ja xchg imul ret pop icebp out loope xchg aam in lods cmc dec lock fidivrl mov mov and pop int3 sub (bad) es mov mov and inc paddw or outsb shl outsl jg sub loop sti inc pop pushf das inc inc pop xchg fwait dec jg test and add mov out addr16 or test inc scas jle jnp scas pop lret jg jg fsts aaa pushf sar enter xchg xchg pop fcoml push cmpsl roll push pop ret or inc daa in cmpl sbb insb movsb jg (bad) inc mov jg and dec in jae ja xor ret jle jg cmpsb add add xor jg std test nop enter or daa jg xchg sbb xor lahf push inc push jg mov jne and cwtl dec xchg mov adc pop arpl insl add scas pop inc ja testb mov lret push addr16 mov call stos sbb xor lret pop jle adc out movsb enter mov lret jg fnstenv xor inc repz jno jae pusha sbb push mov push inc add std pop inc mov xchg aas ljmp mov cmp inc cmpb sub ja inc or test jecxz sub or push push mov pusha and cli bound jg (bad) popa jmp sbb call mov in dec leave mov jg jl in push (bad) mov sub ljmp arpl jg sti mov and cwtl add in mov xchg push mov adc outsl pushf (bad) mov mov push inc jg xchg xchg ss sti sarb sbb pusha mov jbe pop mov and pop lcall mov inc xchg dec loope addr16 inc dec not jg sbb fs mov adc mov test insb cmpsl jo data16 je sbb lcall jbe (bad) jg xor adc mov jbe out jg xchg or mov jg sahf sbb mov inc add test cmp fs fwait hlt fdivrl jl dec dec ja push sti and fldcw outsl mov pusha xchg pop fstpt pop mov push inc or roll leave cmp mov lea addr16 push lock jg mov sahf (bad) jg mov popa stos mov ja sub jg aad andb hlt jg rcll daa lret or lret adc ljmp jge clc jg add dec dec sti loopne (bad) cld icebp sti mov int3 xor ljmp xor mov repnz jo clc push lahf popa jne xchg push dec mov pop push popf mov mov jmp xor push push cmpl xchg stos out xchg xchg (bad) mov pop (bad) fwait sbb and (bad) aas jne (bad) or out (bad) cmpsb (bad) push sub js add aad lods sub inc jg add sub insl sarl jns sub mov sbb dec fisubl (bad) adc dec adc sub cmp dec pop mov jg lahf and in aaa dec pop mov loop lea mov insb and je js pop clc mov mov mov aas stc jbe push mov (bad) addr16 pop ds xchg popl mov (bad) mov jo mov adc clc or aas lods adc scas ja xchg pop dec sti sbb int3 into into test jg xor jae sbb and mov jne pop (bad) (bad) js or lahf (bad) inc fdivl mov jg sub push insl outsb jg stc cmp jp mov jg mov pop add clc inc xchg push fs xor jg in (bad) mov (bad) or jg sub clc (bad) aam cs inc jle addl jg jg mov xor out test mov cmpsb arpl xchg leave jmp jg xor das and mov out mov push cmp jno loopw jg add leave mov std (bad) jns mov lcall mov stos test mov or pop mov sbb ja fbld inc cmp pop cmpsb inc adc adc loopne inc test sarb mov (bad) outsl pop imul mov jno mov sti add fstps jg mov jnp loopne (bad) cmp mov jmp lock mov sbb fwait push outsl and add jg add loope sub jle cmp inc pop jg xchg add mov push pop mov (bad) xchg mov push lods pop outsl icebp hlt jnp fs lahf cmp fdivrl mov cltd push xchg ficoml jg loope sub and out (bad) jg push pop push jne jg enter ss into jg fstps cs inc mov mov pop push rcr xchg cmp sti cltd ja jge aas rcrb mov add rorb std jg jo jne mov jg or mov dec inc sub (bad) (bad) je aam icebp addl cli mov dec (bad) lock pop jg enter and cmpsl jg scas loopne stc fsin and xlat jecxz out adc push jg out les rclb fdiv sahf pop adc jg sub jg inc jbe lods mov jg,pt fisttp ret jl or xchg js jp cli lea lods jae fild or inc insb je imul inc (bad) xchg inc mov pop in loopne mov inc test cli fcompl adc (bad) pop outsb stos dec mov ds mov and xchg add fs sub ret mov xor add inc pusha (bad) imul lahf jg popa sahf push xchg imul push pop push addl fdivl lods add or lods jg enter cli orb sub cmpl xchg mov cld sbb dec xchg cltd popa lret push repz xor adc xor push mov (bad) ja sahf mov xor cmp xlat jmp dec into adc push xor cli push inc bound dec jg mov mov xchg sti rorl and mov test das in jp sti adc mov imul insb (bad) cmc out mov outsl repnz push and xor push ffreep mov xchg addr16 rcrb test cmpsb sti bound push insl cwtl xor mov sbb or jne sti inc pushf push insb push (bad) mov xchg sbb mov int pusha fs xor pop mov (bad) pop (bad) test inc mov popa jg ds arpl mov (bad) or inc mov (bad) es sub cmc or add xchg push imul (bad) jg push or (bad) xchg outsl inc out (bad) adc inc repz je mov mov mov or xchg (bad) pop in mov dec push bound dec aas cwtl dec icebp in push dec pop adc xchg (bad) pop dec push mov (bad) mov xor sub stos and add aaa push dec mov or mov sub jg mov jae jg xchg sbb (bad) loopne inc lock imul push push divb mov add xchg mov jg loope xchg jg sub mov enter scas adc pop add mov lods out leave mov (bad) push dec dec daa mov push aad xchg or push sub inc adc nop out jmp outsl popa rol mov jg test push aam mov loop mov ja fwait pop dec pop enter cwtl jg dec cmp or movq cli xchg jg incb push mov jg add push add mov lods push sahf jg or lds jl sbb (bad) jg mov xor mov pop jne mov and jg gs icebp cmp cmp pop into jae mov jg inc sahf pushf mov pop enter mov out add and push inc dec cld jg out pop jns cmp addr16 fxch cmpb xchg aaa mov or mov cmp jbe inc mov lret lods lds or mov aas jg jo mov xor xor add jle jae cmp pop mov xlat stos inc lcall and jg xor aas test push imul arpl cmpsl jg (bad) int3 cmp icebp jg push shl jp mov addr16 mov xchg mov fs inc dec fnstsw push iret int3 movsl push mov xor pop push dec ljmp xor dec cltd mov sub je bound divb jnp xchg rcrb jg movl inc inc ds add inc lods shld cmp out adc pop cmp mov stos sarb popf aas dec sub pop sbb hlt pop sub push pushl mov adc cmp loope inc push addr16 mov mov mov lea push loope and push clc inc insb out lods jg ljmp jg xor loop icebp jo mov subl and mov mov jne xor ret lods int dec mov jg lds scas cmp sbb jg cmp clc jg lcall jg repz movsb mov mov (bad) ljmp jg or xlat jg subl test jg sahf push clc gs lea test inc push movsl popa push mov jg jb test push mov out es in shlb jg daa imul jg jge aam fwait pop sar and out inc into stos jg cs rclb mov arpl cmc dec sbb xchg mov (bad) dec mov push repz ljmp cld jle mov (bad) mov out lret sahf push jnp inc or lods (bad) frstor pop mov test mov pushf and lods inc sub fldln2 cmp arpl mov inc jg das adc lods std sarb fwait iret sbb add shrl jg push mov cmp (bad) sbb xchg fwait jg sti pushf test jo jg xlat (bad) and movsl (bad) stos push cmpsl inc cmc stos jg jo push scas jge mov ds dec out icebp out repz cmp adc or fst pop rep rorl inc aam aas loope push sub cli mov cmp jg fwait inc outsb test push push xor jg and mov push jg movsl (bad) sub pop rolb mov jg push adc jg sbb sbb test pop inc mov add inc dec pop dec jg and rorl adc loop inc xchg pusha arpl mov aas cmp jge das mov ljmp jg jmp sub subb cli jg insb rorb sbb es adc push jg aaa ljmp mov fwait leave jmp popf pop lcall adc bound mov add xchg mov test stos (bad) ja fist scas fistl pop ds pop or jne jg fldenv and adcb adc jns push xor cmc xor pop jg sub or scas iret in jg push sub mov shlb and jg int dec add mov pop mov pop hlt mov jg icebp lods cmpsl jg or sub ja mov mov or add pop lahf idivl jg out dec and outsb movsl (bad) clc ret fs mov pop jae jb pop cli fisttp dec mov aaa sti pusha les outsl in dec inc inc or insl pop push imul addr16 lods pop push lahf ja mov mov mov insl lcall lret (bad) jg sub cmp cmp jg repnz sbb sub lea inc jp push (bad) loope fs sbb in add popf sbb jecxz jg in add dec cmp sbb or lock imul pop fistl push jg add jmp mov xor mov test push xor sub lret in cmc mov mov mov inc push cmp inc inc xor mov inc jnp add xchg jg add fistpl into adc js sub cmp ja jno cmp sub jbe xor jmp outsl inc (bad) aas hlt enter push jl mov push int adc add (bad) in inc into add dec scas ret xchg dec cmp or mov outsl test inc clc mov sar ds fldenv jg xor mov pop icebp pop or loope out cmp fildll mov jecxz int3 pop std jg iret sbb jg inc negb mov inc xor xor jg mov ret and cmc (bad) movsl pop pop dec cmp push fldcw or roll imul jo les pusha add pop lahf push jg mov aas push cmp scas pop in inc sub jg out sbb jae int3 jg add jns idiv fldl addl in (bad) (bad) adc push std fildl cli add xchg ja mov jg and xchg mov add insl adc arpl loopne cwtl push addr16 inc divl jg xor mov call or jg hlt rorb (bad) inc jg sbb int3 xlat in mov ja xchg jae icebp fisttpll ljmp add xchg pusha arpl xor lcall insb push inc and dec int3 mov jl sar (bad) mov imul mov and or das pop add (bad) pop mov push dec jnp add dec insl lds push imul mov push ret ret out push enter add push jg lods pushf inc mov insl jae mov push cwtl mov arpl mov jg or pop cmc mov mov movsl mov mov loope loop xchg test les mov cltd ficom cmp insb cmp std and cmpl xlat add jg and ds adc push jg es in imul (bad) (bad) mov rcrl jle subl repnz ja lea and jg push push inc dec flds jg ss rcll jecxz sti addb xchg out xchg jbe cmc out aas inc stos pop and pop jne sbb cs jbe sub fcoms andl outsl inc js jg push inc roll enter and rclb iret arpl aad push jbe ret jl push sarb nop jecxz cmp jae aas in fs ljmp mov sbb shlb jg nop dec mov outsb mov mov ja and scas mulb jg mov inc aam inc jg jecxz outsl das mov sbb sahf fldcw js iret dec loopne mov ss jg sub mov (bad) jmp add inc and mov ja mov mov aam imull sti pop sub add jno pop fcoms xor inc xlat push movsl fcoml jg out test jg into ret repnz mov add jg aaa fnop (bad) idivl inc sbb jle xchg push imul xor lods fildll (bad) jnp or ljmp jg fisttpll push pop movsb or xor jg subl jg loop and mul sbb daa imul inc jg,pt fsubs xchg aas arpl out sub je rcrb and aam and mov xchg dec (bad) jno inc adc (bad) cmp jg mov push movsl pop popa aas add (bad) enter insb orl outsl or jg lods mov cmp xor (bad) push outsb cli jg jno,pt xor xor jmp (bad) lret cmpsb loope loopne push insb xchg pop mov or mull adc add mov outsb inc jnp jecxz mov aaa outsl out sahf add sbb ja ret adc jg mov cmp add into pop adc cltd sbb ja lret movb push jge jae je mov xor adc sbb imul mov nop gs lcall cmpsl loope inc pop push jg popf pop mov fstpl imul repnz ds mov pop (bad) pop ror scas pusha jae jg repz pop jg add pushf and gs xchg jg lret cltd jg xor sarl cmp out lock pushf mov push fildl sti sub inc ret ja adc aad (bad) cmp mov int3 int js aas inc out movsb jb xchg (bad) movl jo pop icebp lea push push jbe test imul cmp dec jg iret lea inc popa mov adc lahf jle sti push sub pop add mov ja cmpsb adc sarl pop and lret adc mov je ret mov out jg jne push adc push lds push cmpsb (bad) mov dec movsb sbb popa jg fdivrs rcrb fidivrl lea cmp fcmovne fs cs les cmp pop test sbb mov jp,pt loopne lock xchg or mov cmp mov addr16 orl sub add movb repnz cmp fucomip push ret pop jg lret xchg imul int3 adc dec xchg jne push inc push add cwtl (bad) (bad) jg repz cli xor enter outsb dec stos int3 jg mov hlt xchg jg inc fwait sbb je xlat inc dec mov das xchg cmp adc js sub cltd jo test outsl movsl lods out sti push or std add ds divl aam or or xchg mov inc pop xchg stos mov arpl mov sbb xchg xchg pusha jbe icebp cmpb jl or mov mov or xor pop mov xchg mov sbb and xlat jg test out data16 jg mov outsb add and jo sti xlat inc jp mov pop rcrl mov scas scas push mov push (bad) xor mov xchg jmp pop cmp in pop jg mov xor mov decl mov loop xchg dec and test push aam faddp pop out mov jg sub pop jg jl xor movsb dec ss out aas in outsl cmp incb or jle or setle mov inc dec fs mov mov pop (bad) or in scas stc in sbb (bad) push and jbe imul idivb xchg int fs inc dec scas test mov jg call or mov adc adc sti pop jg ficompl adc cmp aas push or inc push fs pop jno sub inc mov pop retw dec mov mov lret push (bad) cmc std xor gs add push gs (bad) lea stc mov sti mov or or leave cltd xlat aaa fs fdivl push xor xchg jg lahf outsl mov jg mov jmp inc jb test add scas lret cmpsb mov jg pop pop pop push fisubl jg dec jecxz xor test or inc rorl sti add loop pop dec jl stos and and int sub stc data16 outsl fwait inc jnp lcall jbe xor mov ljmp cmp sbb jg adc loope jg pop push and fisttp aas mov lds (bad) cmc call inc dec es push arpl bound cli add ret mov stc test aaa jg fistpl iret mov subl mov inc aas aaa imul scas mov ss mov repz (bad) mov rolb (bad) (bad) dec (bad) push mov pop dec test dec or cld pop add cmp jg mov xchg mov jp aas jle dec mov pushf sldt daa jg (bad) dec arpl sahf bnd into aas (bad) in out fwait jg iret push push mov mov mov nop pop aas jge pop rcrb inc in fisttp or cmp or mov pop jnp push (bad) into xor jg arpl addr16 jl rclb lock in aaa aas je das cwtl mov cmpsb or jg mov push dec into mov jg push xchg insb sub mov jmp cmp ret mov or jle adc test (bad) cltd jg vcvtsi2sdl cmp roll xchg adc in cmp xor repz cmp push jg std out cs call scas movsl sti repnz in mov xlat jle mul adc pop cmc gs dec jg lahf jno xchg jbe lock add cmp into jb aaa mov mov dec ss fist and and mov addr16 sub and pop mov xlat clc adc mov out inc cmpl mov dec xlat decb in imul loopne mov inc pcmpeqb and adc and pushf jg (bad) jecxz and sbb dec loopne mov jmp bound lods mov push adc pop push push (bad) nop mov fisttpll mov (bad) mov jg mov loopne das adc jg jle fist cmc mov cwtl cmp push ljmp sbb sub jge ret decb bound (bad) dec mov cli xchg scas adc jecxz mov insl mov dec addr16 pop scas test iret jg dec lods sbb add sub sub stos dec lds jg and jb push outsl jg icebp sub clc xchg push cmpsl iret adc xchg jg mov (bad) and cmc dec mov out ja push loopne mov testl hlt and inc mov mov ficomp popa and xor jecxz adc repz jg imul jg mov jl sub add jg sarb mov jg rorl loope jg jno ljmp push sbb push dec stc clc dec mov stc and imul data16 test out bndldx out pop add aaa jg inc js aas roll pop js pop add xchg stc and (bad) repz xchg (bad) mov iret fs (bad) push mov sbb pop in lea loope mov add sti notb push roll dec jae cs add sti scas and stc addr16 jg out sub popa dec jg cmp loop pop (bad) lds cli mov out fcompl iret ja lret adcb stos push sbb inc out dec dec jae mov ja stc ljmp adc in bsr jmp aaa and je mov mov mov cli xchg xchg cmpl jbe push cmp adc dec jg push jb dec add add pop jg insl mov push fnsave mov outsl mov xchg fwait push outsl cmp xor mov decb into (bad) push rolb jg (bad) sarb clc or jg or mov lret mov jg imulb insl cmp and popf loope add (bad) jg inc int movsb push cmp jg adc inc inc enter inc test fbld jg (bad) fmuls xchg imul (bad) push jae mov test dec pusha mov mov int3 pop dec or and fcomps js push inc mov inc cwtl test or rcr loope jg inc sbb jae loop jg or fnstsw stc jg add adc repnz cmp out mov push cli outsb shlb xor push verw cltd adc adc cmpsb jg jno gs and xchg xchg hlt add aas testl pop pop xchg cmp lahf lahf outsl out pop lret push jg insl jae imul (bad) nop push pop mov xchg scas and xchg imul es xchg clc ret (bad) jle or lcall sbb lret mov repz mov inc lods jg cmp test loop pop jg jecxz mov xchg jle enter lret jg jo jg pop std int sahf (bad) jg mov aam cmp cmpsl gs int inc jmp aas jnp or (bad) stc xor jg imul mov (bad) (bad) mov push pop dec sub jg cmpsb fisubr jbe stc pop cli mov inc aam incb jg mov xchg jge ds rcl cmc jne outsl add lahf ja add lds mov sbb test pop jg in into dec jmp repz jle pop inc int3 sbb arpl or arpl jne pop cltd jg adc fwait mov fistpl out xchg jg (bad) addr16 and sub pop adcb dec popa insb dec jg xchg pop push xchg add bound pusha xor or jg cmp or cmpl sbb out push dec jg mov inc mov mov es mov push mov movq xor and dec lods (bad) cmp shrl jg push xor mov icebp inc jge mov jg add mov jg push addr16 mov inc push jno mov xchg sub cmpl ja pop lret xchg dec sub fmulp jg and jge mov (bad) push push cmp sbb stos xor mov in push bound fnop sub sbb aas inc mov or mov sub lock fwait lea push fcmovnbe les mov inc fs dec lock or mov sarb push fidivr inc stos xchg pop int3 and pop gs aas jl (bad) lods stc mov push dec clc xlat cmp mov cs dec xchg pusha arpl mov (bad) ss jg cmp outsl imul leave xorl in cmp xlat pop add mov xchg push cld lahf add jg and mov aas mov loopne mov dec (bad) aam lcall and packsswb pusha cmpsb cmp sub inc inc sbb mov mov adc mov inc jle rcrb mov dec or mov faddl mov sub inc xchg adc aas mov mov (bad) sti ljmp stos inc loope fwait dec xchg jg sub cmp push dec dec (bad) stos movsl jg in push fisub pop or xchg ja les mov and inc add cmpsl aas xchg fcmovne cltd or ljmp cld pushfw add pop and mov mov sti mov stos outsb xchg addr16 pusha pop mov or xlat sti sbb jg pop and loop dec push divl subb inc add cld cwtl stos or insl aad repnz sti gs jb inc pop mov fs repz push cli jg lret mov push aad insb xchg repnz add insl or pop cmp bound sub jb jg inc sub lcall fdivs arpl jg hlt cmp out cmpsl aas mov insl mov stos pop inc stos sub jg lods push pop pop mov jg jne dec adc add sbb sbb sarl jae,pt cmp test orl adc inc sub sti xor cmp fnstsw push mov bnd cmp and mov adc jp es negl mov outsb pop decl fdivl xchg arpl add xor aam (bad) ja xor divb out mov xlat mov movsl jae jno dec pop repnz lods and pop jecxz fwait outsl mov or push sti aam fcmovb pop push hlt jb stos pusha and xchg mov xchg xor sub or add aas mov sub (bad) jg xchg test sahf shlb shlb inc jnp incb es or jg xlat das add and jae adc jns jge jle mov lcall arpl dec inc lods mov jne fildll aam out fwait lods pop insl jne jg fcoml pusha fneni(8087 popf jg jmp sbb insb dec fistpll clc inc adc fwait rcrl mov cmpsb or pop neg jg pushf pop aad jle adc mov xchg imul cmp movsb inc mov and jle ljmp inc dec xor aas fnsave inc aad jg sahf sub pop mov or idivl cmp call sbb jp mov mov fsubrl pop adc scas testb inc sbbb mov push aaa mov jo mov pop jg sbb pop xor fist aam add out aam or jg repz cmp (bad) clc ror push jg sbb cld into mov mov mov dec test jg add adc jl mov push (bad) insl jg test rep add dec cli lea xchg adc cmpsb nop mov push adc inc lea jg stc aas sysenter jne push jg sub dec sub jbe dec subb outsl pop sub lock pop pop scas inc pop cmc mov enter inc lret jg dec sahf xlat or mov xor mov insb xchg loopne dec cmp xor sub fisub dec adc jae call push mov stc jg loope xor clc subl ret or inc (bad) jg mov fiaddl jecxz lock test lds dec daa cli mov push xchg push adc out push jg (bad) aad xchg repnz jbe mov jne cmpsb in jecxz mov add (bad) mov jmp nopl mov cmp sub dec out call lods inc inc cmp iret lods fimull icebp sbb roll rsqrtps arpl inc adc je mov jbe or sahf pushf mov mov xor mov lcall dec inc test movsb xchg xchg xor cmp pop mov xor adc xor pop fildl jg add (bad) dec iret mov into movsb stc push lret jg inc mov and jp pop xor outsb xchg sti xchg jge scas movsl jns push cmp dec jns shlb inc pop int (bad) neg push add mov cmpsb and mov dec popa shrb aam (bad) pop aam mov mov jg std cmpsl inc jae cld aas and cwtl mov and xchg lea inc cmpsl test inc pop int3 jg ficomp push xor sub pop push push or (bad) jno xchg pop xchg test loopne adc into add push dec jge cmp cs fprem1 xchg mov cmpl sub mov int jae shlb repz lea push pop ja jg test jl stc jg jecxz,pt cs inc lahf fdivr sbb or xor add push jb cmp imul loope paddb or fcmovnbe mov das jg out xor add les jl pusha and data16 xchg lock and sti xor sbb pusha inc mov inc cmp imul pop or in jge mov jg or xchg xchg pop sub jo mov jb test cmp je pop lds aas sub roll add mov aam pop (bad) cmp jg lret (bad) popa divb mov inc cmp add ret inc fimul sarl or dec mov xchg sbb jge jo push in push aam push inc sbb repz xor insb loope shrb sti sbb jg (bad) ljmpw jg cmp clc mov inc mov jg dec mov inc mov cmpl dec push xchg jg imul and adc jg sub fwait push or jg,pn (bad) repz adc in insb inc push mov pop adc lea and push xor push test add fwait inc adc inc icebp and cmp sti jg insb jb cmp mov dec pusha imul xor jg push es and ja pop push bound out mov jg ljmp mov insb scas pop xor sbb scas vpmaddwd jg xor pop inc pop mov jg cmp push dec xchg push stc push push lret jg mov mov jg nop lcall pop stos add push add icebp or pop fstps loope mov outsl sbb dec movsb cwtl imul nop xchg arpl int3 sbb cmp ja and lahf or mov jg bndstx jg notb loope and adc mov xchg cmp adc inc jg mov mov sub adc jg ss sub xor shr fwait sbb cmp adcb jb or inc popf cmp and and add in jns outsl aas pop jno xchg add add enter cmp adc mov mov pop xor jge xchg jg jg pusha cmp cli inc scas call jns iret dec add sbb adc clc ret inc xor decl or jne pop inc pop dec aad jg push xor dec cld xor mov inc jg inc stc popa adc push inc imul add pop dec sub lods pop jg (bad) jecxz lea mov mov adc jne jno jle mov jg ret sahf add add je pop out rolb xor jo dec neg lea xchg pop mov jb jg fwait popa push inc lahf mov xchg xchg cmp add or push negl xor bound fnstsw push xchg push pop push lods (bad) jg popf pop mov jg scas add fidivrl mov dec jg jne pop (bad) aaa and rorl adc aam je and cli mov sbb lock xlat jg arpl into (bad) inc insb push imull mov sahf mov push pop cmp mov ret loopne inc adc jle (bad) (bad) jg lea mov xchg lcall cli jae js xchg mov xor mov jg fiadd test test xchg cmp or outsb stos arpl insb es dec aam push pop jg cmp ja and add outsb xor xor xor jg dec adc and jg pop sahf mov jg cltd push jl mov jg cmpsb popf xchg aas cmp sub inc cmp or dec in mov mov inc inc mov mov jg mov imul test mov jns push gs lods mov outsl hlt adc insl push xchg push leave jb jg mov test or cltd jne xor insl pop adc xor jg in (bad) and dec lock sti (bad) fisubr (bad) fstp jo hlt jg pop pop ret cmpb sti ja popa mov pop mov jmp jne pop es and jg mov aas addr16 (bad) mov outsl push stos mov pop stos inc rorb push jg (bad) rcrl dec jnp xlat inc loop sahf mov adc mov cltd stos cmp dec jnp aam sbb lahf mov lret insb push jns cltd jg in out sbb inc dec cmpsl push arpl mov mov mov pop jg cmpsb cli sbb mov hlt dec popa xlat adc int jmp jg ds xor ret das sar jns jmp mov outsl (bad) push aas repz ss mov sub inc in movsb mov outsb aam outsl mov dec jp xor jg pop jne adc out mov mov or add les ret in inc mov jg jle and cmp aas pop (bad) push jno ja pop mov mov push inc cmpsb cmp jg sub outsl lahf or (bad) xor xlat jg pop daa stos rcrb and jmp jno out sti xor mov inc and jg lret lods ja test push stos fmull in addr16 xor xchg jg pushf movsb cld in xchg je shlb xor sub iret push sub movsb (bad) aas daa ljmp repnz add push fsubrs jp jg pop mov lods jg in cmp ja pusha aas mov sbb jg fs jae insb rcl mov in sub push popf inc push mov mov xor push dec ja aas mov fwait dec dec cmovge (bad) sbb dec dec sub popa nop mov outsl into lods xlat ds loope inc (bad) enter pop mov jg test fsts dec jo jp outsb pusha mov push nop inc jmp push or push jmp mov stos push je (bad) (bad) xor sub jle dec fdivl xor pop dec int3 sbb mov inc stos push cmpsb xchg dec sti jge aas mov sub fstpt cmpsb push addb aas sbb and (bad) and mov and jbe jg loope dec bound icebp mov cmpsl iret out popl mov loop pop in jg push fcomps and jg pop push sbb push int3 jg inc dec in arpl mov into sbb jg cmp mov je xchg mov xlat mov add and cmp cmpsb mov xchg fild jg pop scas insl outsl jg (bad) add adc stc cli cmp and (bad) pop out into add dec aaa sub and (bad) outsb push xchg ljmp cmp inc mov pop jp lcall call stos ja cmc (bad) fnstcw iret jg and clc bound movsb or inc sbb outsl sbb push pop jg push stos icebp data16 in cmp leave jg pop push roll push jg jae fs adc dec js pop fisttpl mov pop or and mulb cwtl jg sub add movsl ja mov repz stos retw pop sbb in xor int3 add mov or (bad) or jo cs sub mov inc outsl dec add jg xchg sahf faddl mov cmc adc jg xor clc sub xor adc lock mov lahf push dec pop mov push pop out jg fnop jne jns gs mov rcl sub add mov jo inc pusha jns xchg jg jecxz add push mov or add lcall push add popw ret inc ret or ret inc push lock hlt pop jno sbb jg mov js imul repz mov test in dec xchg fsts mov push roll cmpsl ret add fmul mov mov ljmp xchg lock (bad) in jg (bad) dec aam jl jg dec mov pop xor dec scas mov mov je mov push cli and pop pop inc int jg imul pop cs jp lods cli fidivl and int jg aaa out pop stos loopne mov sbb jg stos mov pop mov test mov mov icebp out das sbb mov test inc sbb adc mov jb movl sbb cltd call popa fidiv push dec and pop xor jg cmp lods push loopne movsl jg pop jecxz jmp (bad) (bad) aas (bad) clc inc adc mov dec ficoml and xor lea sbb mov add enter fs sar pop add mov pusha les xor aaa xchg dec jg test mov sub inc mov push leave lcall movsl pop repz jg cmp aas movsl mov push inc lcall and in (bad) je,pn out push nop inc xor xchg jg sub mov in xchg gs cmp jg loope out into mov iret jge push sbbl inc jg mov xchg insl jg add hlt lods es clc xchg mov aaa cmp outsb jg xchg sub jg iret cmpb adc jg gs add je xchg out mov into popf (bad) hlt jg adc ret cli xchg cmp mov lcall out dec push inc adc cmp pop jg jbe das mov inc jg mov dec and dec ja fstpl ret cmp pop xor mov stos inc jg and jnp dec sub mov lods ret mov jg mov jg in lock jg inc mov sti push (bad) rol push fwait cmp mov jg xchg cli jg inc pop push test push adc popa pop andl daa loopne mov pop fs rorl xor sbb pusha inc cmpsb bound xchg xor xchg mov push mov in mov sbb pushl push jns add inc xchg imul std push loope jp xor dec jmp mov lods pop adc pop jle movsl inc adc pop enter jg xchg fnsave test or mov inc or jecxz cmpsb sahf (bad) sbb or adc pop cwtl mov adc imul aas addb aaa clc in mov jg data16 dec mov inc adc dec aad imul mov cmp jg push sub test dec lret sbb jns insb jg sub call jg movsl push inc mov fnstenv je js and sbb leave loope loop jg cmpsb shrb lahf aas mov sahf repz cmpb jg leave add push jno cli mov (bad) cwtl dec xor jl cmc jmp lods push mov dec xchg mov addl lret pop pop fdivr jge jns,pt lock jg mov jg pop mov mov lahf cmp rcrb sbb mov or dec cmp and push cmpsl push ja xchg mov (bad) std mov xchg fsubrp adc sti pop push dec dec cltd (bad) (bad) (bad) cmp add data16 scas cli dec xor sub stos roll push les pop into test in xchg mov push push adc bound arpl push xor push lret ss push sbb ljmp daa lods insb jl arpl bound push inc outsl aas out mov xchg fiadd jg jae dec testl mov ret fidivr cmpsl sbb (bad) jg mov je icebp jecxz jg adc aam mov cwtl addr16 mov inc mov test jp (bad) daa and pop inc ret mov jle adc jno push push sbb shlb popa xchg push dec lock push jnp mov and jg pop mov testb xchg jnp and jg pop sub add sarl pop xchg sahf lcall adc jecxz int3 push mov nop loope int jg das cli mov mov sbb pop notl popa lcall jg mov cld nop push popf mov (bad) xchg jg sbb addl inc xchg mov jg and sbb mov jg pop lret dec mov pop inc sub xor mov jg pop loop bound out mov inc sub xchg loope inc loopne mov push aam (bad) scas idivb out pop lods mov jg jg push sbb pusha mov scas out xchg dec jmp jle popa jns xor int3 outsl fildll decb mov out xlat cmpsb xchg in lock xchg (bad) (bad) xchg jg sub (bad) jg jmp xor xchg jnp lea dec pop mov and sub mov rcll jbe popf stc dec daa jne mov dec jns add pop in and dec jnp inc jg jge aaa mov cmpl bound outsl lret adc mov xor adc test inc dec scas or mov and imul jnp sbb mov and push shr lds std pop jge sbb xlat mov cs adc adc pop inc movsl arpl (bad) jg xor loope sbb adcl push or aaa cmp paddsw test sub data16 dec or popa lcall mov in inc icebp jle insl stc or hlt jg fnsave aam loope inc and fcoml mov mov jl jo js test jae clc aam fdivrs ret les sbb es sti sub jno dec xor bts mov je stos rcll mov imul popa mov stos xchg lea jg inc jo xchg out test xchg xchg addr16 ffree dec out scas out sahf xor aam pop push xchg aaa sbb mov nop inc pushf cwtl insl or pop add adc pop mov cmp fs sbb jg aam xchg (bad) mov sub (bad) xchg fwait dec inc aam push inc aam push inc aam pop inc out cmc fstpt xor push popa loopne dec and mov dec popf imul insl push test sbb mov movzbl dec outsl pop sti int3 dec jg fisttpl test jle sar aas into or push jg,pn inc xchg jg push bndstx jg add inc icebp mov (bad) mov out mov incl daa xor pop dec test dec lds xor inc mov xor int3 jg repnz lock push mov outsl or push daa jg mov fsubrl int3 or jno pushf mov sub ja lods xor pop jg popf mov inc jg,pt stos cmp lock shrb push push jo cmpsl mov gs mov dec jg out mov jmp sub push lock xchg mov fidivl cmp mov adc mov cmpsl mov mov or dec sahf das add insl jge sub inc jg movsb xor mov in fbstp inc push mov pop sub mov or scas adc xor pop (bad) xchg sahf rcll idivl lret adc rclb jb jg jo push jg push out mov add cs imul addr16 popf mov sbb mov (bad) (bad) cli ds inc icebp dec and dec jne sarb xorb jg dec (bad) repz inc mov cld pop ficoml dec imul inc sarl fwait add rclb sbb lods hlt push lcall daa (bad) jle pop ret add sti mov pop lahf pop daa outsl dec mov pop sbb add bnd testb fisttpll fnstcw mov inc push inc sti aas jle,pn jbe stos cmpsl dec cmpsb and incb rclb dec outsl mov mov out repnz std (bad) xchg js aas xchg movsb jbe jg outsl popf psubd jp push (bad) dec jnp xor push stos cmp shr dec lahf dec out and sbb pop mov mov and leave addr16 jno inc and sbb sbb inc ret fcmovne shlb cmpsb jg xchg push pop je cmp out fidiv (bad) lea popf in std xchg dec fisubl int3 aas lret adc sub (bad) inc xchg or cwtl cmp subl es arpl dec push std adc mov add pop scas arpl test inc adc cmp outsb xor dec fsts and mov push adc dec pop imulb mov push xchg popa dec ret pop js push adc fidivr dec xor sar incb dec call inc sahf jg sbb inc (bad) and jg dec (bad) (bad) mov lods or xor mov popf dec mov mov ja outsl sbb gs aad add inc je lds mov inc mov jno and jg in jg jmpw mov idivb jecxz dec imul sti jae dec cmp pop push jg jmp add ffreep jg and mov (bad) push jg movsb mov jg mov push cltd pop int jg inc dec out jo test add push mov xor cs jbe sbb lods fsubl iret mov lahf mov jg lock test jb (bad) mov xchg idivl push out pop aam pop jg sub mov pop ja mov js je fwait scas pop scas cmp dec faddl jg mov popa jg stos jmp fistpl jg xor push or xor push sbb jp jg push push mov jmp add xor pop jae arpl dec jg lds cmp js ljmp mov xor xor pop movb scas xchg insb mov or jg loopne jge jmp or cmp loope mov rcll jg in neg decl mov andl jg mov rcl fisttp jg dec enter xchg xor shll cltd js adc pop mov pop push rcrb (bad) inc push sub mov std sub fdivl movsb jmp subl mov dec inc sahf pop int mov and dec sbb mov xor or pop push sub sub sbb (bad) jg cmc mov cmp stos jmp jae mov pop mov or cmp mov dec jl jg test xor test push lcall mov addb mov cmp mov cmp mov movsl jg loop dec sarl dec das and add lods jmp fldenv push cmp sub js rolb cmp sub sub cmp push js jg into xor loopne xor mov push and lds dec dec add pusha scas jg test movsl loopne idivl jg daa adc in sub xchg pop hlt xchg in dec ds sbb mov mov inc pop test test push and jmp pop lds mov rcrb sub mov inc hlt xor pop fildll outsl jbe adc jnp lea dec and jg test and mov cmp hlt sahf cmp fsin repz xchg fnop mov loope or jbe mov stc or jnp jg es insl stos xchg xchg dec jg das cmc dec lock xchg jg add gs popl jg sbb push jg sbbl sub repnz pop mov add jg movsb cmp int3 test xor ja dec adc fldt sbb pop xchg cmpsb in and dec push sarb cmp imulb xchg pop or adc inc mov push mov fs lahf mov jge push sub in (bad) jecxz outsb fisttpll jg lods stos in sbb repz cld ret mov dec inc xor fdivrs mov mov adc mov loope pop cmpl jmp lds addr16 mov test cld shrl fsubrs int dec jg push mov mov push js jg dec lods (bad) lea sti outsb je adc push xor push xor cmp pushf mov add aas cmpsb ljmp dec sbb add out rorl fisubrl and jg jns sbb mov mov les mov pusha inc jp adc test push cmpsl scas mov mov popf rcrl xchg and xor lret adc dec out insb (bad) push sti and or xchg inc pop and and xor insl pop cltd nop jnp cmpsl icebp in add pop mov (bad) xlat scas sarb nop ret jg imul out lock mov in push pop std and mov sbb (bad) stos mov popa mov add aam pop andl iret (bad) shr mov in pop jmp daa lahf inc push fidivrl enter insl or and repz and jg lea int xlat (bad) mov addr16 sti in or das pop inc adc ret stc push fistl aas insb sbb or mov adc in int stos mov jg cwtl dec sub scas push mov popf lcall orl test outsl xlat sbb nop jbe xchg daa pop inc and jg cmpsb add xor mov (bad) jecxz inc nop adc cmp les mov jns fwait xor dec in jg add test mov inc imul arpl jg xchg js mov sti inc ljmp cs aas sti lcall adc loopne jb jno sbb aas addr16 sti cli cld pop shll subl mov notl push pop ds bound les push jmp cmp mov les jg and (bad) movsl stc pop aas scas (bad) mov div lea movsb mov (bad) and rol fdiv iret cmp push jg and pop inc jno sahf insl loop fisttp jnp andl jg rcrl mov jg inc mov inc loop js jnp jg push andb mov and es xchg loope (bad) lock and fild jg das mull and in mov shll jg aas loopne mov dec call repnz sti idivl data16 jg add xchg nop sti popa jo xchg dec xor mov push pop (bad) or add sti fidivr jp xchg jg cmp call sub jg stc sbb test xchg ja cmp pop mov jns js mov ror fadds and jns push lods jnp sarb pop sub out inc jg adc push xor push lods dec js inc and (bad) aas sbb mov inc mov mov (bad) ret sub push xlat mov jns adc or inc lea lock ds fs push xchg sub test pop pop inc lods adc fildll int loope fnstenv add inc jg (bad) gs xor jmp das es jo outsl cmp loop popf mov popf js pop or imull mov mov cs dec mov dec jns xchg add ret xchg stos iret push adc jo and mov out mov ret cs jbe test jmp test pushf sub dec scas out je mov (bad) xor pop out (bad) mov rorl jg fstl mov mov in dec rcrl mov cmp mov sub mov in add jl dec inc popf and jg out xchg loope jge mov mov mov jp and xor push ss add xor pop ss ja mov xchg pop inc cmp cmp pop in into push stos xor pop jg mov sub push fdivrl (bad) jg addr16 mov pop repz jg insl push pop arpl imull cmp ds xor xchg sbb inc inc int3 mov xchg xchg jge test mov jg jae lcall inc dec js shlb push mov pop dec or add jg xchg in xchg outsb mov sbb mov cmp push insb cli pop xchg js xor in jg shrb push cwtl or data16 fisubrl add in out pop and xchg lea inc mov mov inc adc jg pop imul xorb pop cwtl std rclb mov xchg mov dec cltd push stos xchg jb adc push mov push xor fisub fisttp pop jp xlat (bad) int in add mov idivb mov mov fmulp dec (bad) daa jp sti dec push pop add cmp jp add jg dec cmpsb imul ret jg pop mov sbb jg jo xchg pop sti cmp popa in mov stos fwait in subb sbb add out insl and xchg test rclb cmp hlt shll mov and jno xor xlat push dec sar outsb dec xchg lar je mov test and jmp icebp xchg xor jg or mov aas push mov jmp hlt inc mov jg inc iret add mov addr16 nop jnp es sub fs lods mov cmp out notl sub movsb imul lea andl cld and or adc in leave mov jg push inc ficomp out les jg incb incb addr16 pop insb jg mov clc pop pusha or push xchg mov test pop push inc hlt mov (bad) jg adc rolb cmpl lcall inc mov sub mov inc mov sbb scas and pop fcomps dec ljmp leave inc xlat and int3 shr xchg inc fidivr or inc mov fidivrl mov cltd (bad) mov dec std mov jg mov cmp cld sub pop cmovae mov ds call dec dec mov cmpsb fs test or (bad) jae xor ret jg cwtl xor mov nop mov inc lahf jnp pop imul bound imul repz pop (bad) fdivrl cmp dec out pushf cmp insl mov aam push or (bad) dec les jg inc push adc idivl sbb sarb or adc rcrb dec sub test mov leave inc divb fimul aas clc push jge pop je push mov fldl les dec xor outsb jns pop or mov sbb jg clc dec pusha push std xor pop push sbb ja cmp fwait cmpsb js (bad) rorl mov out fadds push int3 popf push gs xor fsts leave inc mov stos push sbb xor jg adcl or mul mov xchg jnp and nop aas push inc push loop in dec and jg jns xchg mov dec push mov dec enter movsb mov mov stos pop sbb aas cwtl or add arpl imul or int3 jg mov mov mov lds push sub xor push stc hlt jecxz ljmp adc scas mov mov loopne fldl mov std mov and jmp mov aad pop shrb cltd xchg sub shl rcrl pop jbe xor jg stos sbb fcom jg outsl adc std mov sarl pop aad js les adc loop pop cmp aas mov inc and bound mov jg cmc pop add jge inc iret jg fsubl imul add cli inc arpl jg lcall js iret loope pop dec jno scas add pushf cld sub mov mov push sub imul cmp decb cwtl mov jno fsubrs pop inc test push call push mov in jge cmp jg pop lds jg loope and iret push loop jg add mov mov jg and imul (bad) push push xor and jg cmc dec sub gs ss out rcll and inc flds xchg jg pop sub jg jns (bad) pop rclb jg out jno hlt punpckhdq nop pop mov aas pop daa jecxz call cmp mov sti pop ja and mov pop fsts sahf (bad) je jg daa xchg pop into push js jg in lahf mov jg or push inc cmpsb jg cmpsl pop xchg dec mov hlt jg repz ss addr16 jg ret xchg and movsl repz cmp sub pop mov jns imulb pop adc mov mov inc jmp xchg inc xchg jp cmp jg push mov adc xchg jg dec adc (bad) jmp add fst pop cmp jge mov sbb mov or dec adc mov lret push mov jle js and cmc sbb push jg add push lahf int3 cld outsb pop jae (bad) jbe fstpt sbb repz popf lcall mov sbb sbb xchg push ret lock xor jns inc (bad) in jecxz and jge cmp pop mov mov mov jg lret jbe adc (bad) rclb xchg icebp mov scas or sarl dec add pusha mov jns adc out orl les xor out dec and jg call cmpsb movq ficoml pop jno fdiv and xchg test lods jg and ret stos leave jg in data16 cmc mov push xor cmp sbb outsl mov mov ret or sti in out test xchg sbb xorl push stos out enter (bad) mov stos int in pop xchg xchg jg divl (bad) jg pop lcall xchg mov ror movsb cld mov fnsave in ret fidivr mov jg fdivr push jg adc or cmpsb dec jg outsl and orl iret call mov jg xchg sub mov icebp jle test sub push jg mulb and push cmp jmp fistpll shrb mov xchg pop loopne int js out adc das gs push push mov jle inc dec mov dec mov adc jg cmp jg dec sahf repnz pop loopne inc mov (bad) cli mov mov and mov movsl sbb xchg out into mov inc addr16 stc jg xchg and inc jmp aaa stc mov push and lods add mov pop fdivrp push cmp lods lock shrl cmp jg popa mov (bad) mov aas inc pop jg lock test cmp xor sub dec and dec (bad) mov xor xchg pop in sub xor jnp pop lods or lea mov in jg les lret jg jp xor jg lock insl inc jno mov mov jge scas xor add mov (bad) out jg adc add das inc sbb mov popf clc jnp mov lret xchg mov mov inc in push and jg fidivl stc rcrl pop add inc pop mov jae jle mov jns fidiv test ljmp sub retw jg lock stos pop xor shr pushf out and inc or lods pop add add aam (bad) fs je sub inc aaa bound cmpsl mov add fidivr push dec mov jg sub into fstpl (bad) sbb popa test cmpsl mov sub lock cmc or (bad) jg repz lods insl xchg mull xor sbb lods pop jmp mov (bad) cmp gs mov cs jbe hlt fmuls in (bad) and cmp loopne call xor aad dec addr16 dec mov or mov out xchg ja pop jg sub xchg and movsl int3 les pusha popa stos mov mov xor pop (bad) and outsl or xor or pushf cmp subl dec push lods mov int cli pop das sbb jg leave cmp std lea loopne out push (bad) repz outsb (bad) jg sub loop divb insl xor into jne pusha (bad) jg mov sbb jg shrb leave push or cmp mov into add jnp jg xchg add dec js sub jg jge fadd xchg or and ljmp push jnp and xor (bad) hlt push imul fsubrs jg adc pusha je popa fstp xor pop ss test out pop mov push jg iret (bad) sti xchg xor pop sub imul jg sbb loop and jne ds repnz cmp fwait imul lods jg dec (bad) in inc test jg pusha fnstsw jg add popa sti jg pop cmp mov mov mov ja and loope jg (bad) je mov mov shll lea xchg inc mull jg (bad) call scas jg jl movsl push mov pop repnz jg aas push imul sti mov inc pushf in jg clc cmovge fimul enter jmp ja jnp push lods popa inc loopne jg adc fcoms jp sub sbb push (bad) sar mov dec jne ja adc sbb out sub imul pop push lock pop jg sbb inc dec test jno push (bad) fild (bad) (bad) mov jg xor xor test push out or lods outsl xor cmp fiaddl adc ljmp popa pop jg inc jo pop loope push jg xlat dec data16 dec cmp mov push jg adc clc jg sti (bad) ljmp mov or aas dec (bad) div push pop das es jo dec fldl jp lods pop popa xlat fnstcw push xor xor xlat leave push jg adc fsubrl jg out ja iret data16 aas call test int push cmp cmp (bad) sub xchg out adc out sub cmp rol jg ljmp mov pop fistl fildl (bad) ret test pop (bad) xchg fcoms xchg leave jg rcr xchg or mov (bad) xchg push cmpsb data16 (bad) pop sarl push jg mov jno aad push push xor mov leave or les jg jne fcompl fcos (bad) dec push adc adc push add popa jg repz adc push sub sti add push pushf jbe jg shl lds jb mov jmp popf popa jg scas rorl sbb sbb sub icebp iret jg sahf aaa xor jg xchg jmp out jg jno iret jg mov adc je adc ret pusha mov scas (bad) jg test push add push add cld jg adc in jecxz das vmovntpd jg jo push mov fldenv js mov call (bad) mov inc icebp dec or jg jmp imull jno xor mov pusha xchg dec jno lea dec call inc push mov mov sub out insb test in stos out jg xchg js loop (bad) pushf pop jo pop mov sahf mov es jg insb (bad) mov (bad) xlat adc or push sub add mov xchg jno mov sub push popf stc mov sti test pop notl xchg sbb jns ja xor jg pop xlat pop xor dec test xchg (bad) rorl popf mov movsl mov das dec push fisubl xor pop fimul cld in pop das mov xor xchg cmp daa jg push (bad) jo movb mov outsl (bad) movsb ret dec cmp mov inc add mov pop push inc (bad) cmp jg mov cmpsb insb enter mov push dec add lods pop jg add into mov sub or fs adc jg mov rol jg inc jmp jg jae xchg add xchg mov jg inc add cli mov jg mov (bad) sbb fidivl jle add in outsb lret sub cltd mov cmpsb dec dec or insl mov frstor jge sub xlat jg mov cltd dec cs jb (bad) aad sbb mov aas lods mov cltd jg std cmp push and jmp pusha ja mov xchg mov xchg stos inc scas clc mov inc adc int jmp insl sbb or shrb aam jmp xchg fstps gs add rolb jg push or pusha leave adc inc cli iret fnstcw push cmp inc push xor jg push jle push fimull cmp mov pop inc dec leave fnstcw pop pop movsb daa cwtl cmp aad jecxz adc fdivrl xor ja sub jns sub fidivrl ds pop stc in mov lock xor dec mov mov xchg test movups jne daa adc sub nop jg push lret stos rcl lds sti xlat jb or leave xor jle dec cs dec adc flds sub inc cmp push mov pop ja test xchg fadds rolb pop cmc aam (bad) js lahf pop das ja cmp sbb mov mov (bad) dec mov jg inc out mov mov fisubl sti imul mov push into inc or dec jg cwtl jmp lret and jp xchg es aas pop jg rorb lods sbb lcall add jb xchg call mov jg test loopne aas mov nop mov pop pop fdivrs cmp outsl hlt jl (bad) mul arpl mov inc loopne mov jno xor sbb add adc pop or inc push cwtl xor pop jg dec and cmp mov fstl jecxz cld jg js stc inc and loopne mov lods mov jg push mov cli jg sub xchg dec jp adc mov mov (bad) movsb outsl and pop sbb push mov lret imul jl xor mov fisttpl iret jg xor or lods imul jl cli das movsb jg mov les enter jmp ja lea sub dec stos mov mov or inc push jmp inc sub lret jbe xchg jb aas adc cmc mov gs xor add jg mov cwtl and lcall xor imul push mov cld sbb dec and pop mov cltd fisttpl cmp jg mov lcall xor add adc xchg sub (bad) dec jo hlt loopne test sti popf push fwait xchg data16 jg mov out add sub add dec pop aaa fnstcw sub cmpsb xor jg sbb mov jg stc arpl loop cld mov push movsl gs add push mov mov dec lret cld insb nop lcall cltd cmpsb aas jg inc fiaddl jg nop cmp jno mov aas pop dec arpl jg inc mov popf insb push jg loopne push push cwtl (bad) test dec mov cmc jle ljmp sub lcall cmp sub cmp pop outsb mov mov add dec jl sbb push xor add sbb lods mov xchg mov pushf cmp add jg fnsave push fisub cld mov gs jg jno jbe cmpsb call push cli dec push (bad) in pop mov fs jg data16 mov in lock test jne jo push pop xlat push mov jg cmp push aas inc fistl xor loop xchg (bad) jae xchg std cmp out xor fmul (bad) xchg into xor sti jno jo lods hlt mov jg xor cwtl in cmpsb jb mov pop out imul jo (bad) jmp xor push pusha idivl repnz sub ss pusha cs bound and sarb imul and scas test mov jg adc sbb mov dec push mov mov jb fisub cli iret cs jg push aad ds dec sub ljmp jg sti xor add jne xor push sbb fisttpl push jg mov (bad) cli xor jg jns insl jmp jg adc dec repz dec js lret mov push push pop cmp cmp jg cmp or outsb jp or ljmp push data16 movsb xor jg or sub mov mov inc jg pop add lods imul adc xor jle mov add or enter or jne mov ja cltd and or mov jmp jle daa pushf (bad) pop fdivrs rclb xlat lock xchg xchg loop mov sahf mov sbb adc mov inc std and lock bnd js push rolb setge mov push jle outsb lea adc fmulp push icebp jg sub out lock inc scas or add cli aam les xlat ror adc and add and dec lcall jg and fdivrl jg or and mov pop mov scas mov push xchg inc jne xor aas or stos dec adc cmpsl jg push or lock jbe or pop sub popa stos ret dec jecxz dec aas (bad) fcoml dec sbb jg ljmp js and icebp stos mov xrelease into mov es mov mov mov ja roll and out repz push jg add push fs or jmp pop aaa xchg js mov jnp xlat stc jo popf jg fwait cmp push les test into lods jg (bad) fiadd cld testb lret fdivl data16 mov mov (bad) enter sbb ljmp iret in dec aaa mov jg shr inc ret add test dec movsb xlat pop lds imul jg (bad) (bad) sub mov ja dec adc pushf jne jecxz loop xlat cli xor (bad) insl jg xchg pop xor sub adc push (bad) lret popa push js pop lods sub repnz jbe and hlt sbb fs lods mov inc pusha outsl or lcall lods inc xchg jg std xor xchg mov push pop jmp nop and pop jg mov sahf jg pusha cltd scas (bad) push inc cmp ret mov xor cli sbb call jmp push xlat pop cli imul enter inc add xchg jecxz jg mov call jg mov sbbl mull mov cmc pop (bad) rcrb add or int3 push xchg xor and jg cmp sbbl mov and and outsb (bad) cwtl push ret mov jne pop jg test sbb imul test outsl pop sbb or cmc ljmp (bad) xor outsl inc sti and sbb sub clc adc inc pop fsubl jmp gs adc push pop cltd pop js jg fisubr hlt loop jg push and addr16 movsl in fwait jg (bad) push out insb inc adc cmp fdivrs cmpsb subb xlat arpl jge pop dec mov adc add jg xorl jg sbb inc xor loop jge xlat inc push pop mov ja mov ljmp xor sbb jg stc push xchg mov or jo popf in das mov sub jae xchg and mov add cmc bound sbb push aaa cmp inc mov movsb add movsl pop jg stos or mov fisttp mov push scas cld push pop lahf jge lds sti addr16 imul or mov out es jg and aam mov jg push adc pop add out outsb mov outsl movsl jg pop fisttpll popl jg arpl jg dec repz sti mov out ja (bad) out and imul push push aas cmp inc shrl sti test aam xchg push (bad) inc xor icebp pop insb lea add sarl push (bad) or bound cmp rorb popw jb mov mov mov loope dec push mov ret ljmp fildl pop xor push push push (bad) mov adc punpcklbw add xchg sbb cmpsb jg stc xchg insb fwait xchg aas lret mov enter (bad) pop mov inc insb aaa in sbb adc jg mov test mov fdivr inc cmpsb ret or mov dec mov xchg xor (bad) dec inc mov les outsb push or mov inc mov arpl jg and inc or xchg xchg (bad) sarb mov mov sub mov add cmovs pop jne jnp adc imul xchg pusha imul sti mov cmp pop dec sbb sbb jae mov movsb cmp jg fs cwtl xchg movsl xchg daa pop stos jg inc and lahf jg sub mov xlat lret (bad) je repz out mov lods add dec cmp mov jg pop sbb xor jg dec pop sbb ss scas pop rolb insb xchg jge pop test mov insl lret cmp mul jg jns jae movsl fsts sbb add xchg dec addr16 push popf int3 imul mov add jg xchg push movb test jg aas movsb dec adc mov lcall frstor jecxz stos lret rcrb cmpsl pop and fcoms mov jg mov mov jg movsl and inc stos jno jmp pusha ja mov push and test in mov popf xchg (bad) dec es mov xchg adc stos adc and or xor rol dec lods sbb cli jg fistl mov cmp lret (bad) sub movsl xorl ss rcrl dec mov xchg pop ret jg jbe push cmp roll dec cmp je arpl nop push (bad) loopne aas push mov push xbegin jg divl sarl sub jg (bad) push gs (bad) push push mov xor mov (bad) int hlt das mov push pop inc or inc test inc or iret jg xchg movsl into das sub jg xchg cwtl cmp dec pusha test lea dec out ret pop inc xor mov cmp lods mov cmp dec (bad) pop out mov xchg sbb pusha mov push sahf call test mov arpl jg repz push xor stc inc pop cli inc imull hlt jg adc enter push pop xchg stos icebp outsb jge std test mov push mov insl test and jg mov push adc add icebp push mov inc pop xor dec xor jg dec jno pop adc xchg and int3 fisttp jg inc xor xor jae sti aas loope sbb repz (bad) and mov mov negl jo or xchg dec rcll enter add aas cmp and jg mov or mov (bad) ljmp jg cmp ja add sub ss lds aad mov scas xlat push fbstp mov insb inc scas cmpsl xchg insl test adc mov fdivrs xor daa psubd icebp dec sti mov xchg inc jg call negl xchg push inc in aam dec mov js and inc fdivrs xchg xlat mov data16 pop les cltd ds int3 enter cmp jp pop jg xchg lea mov mov arpl movsl fnstsw mov punpckhwd arpl popa xlat inc sahf les sti test mov in fstps idivl stos sub pop insl dec push jg mov pop pushf mov jnp pop or lods jg (bad) push add (bad) pop call mov xchg jg and cmp lds add jg push push (bad) add (bad) pop mov jl ficom iret popa mov arpl iret popa arpl lods pop aad pop subps jg pusha rcr jmp or push jg aaa int3 jecxz pop bnd neg out pop cmp mov sbb aas dec aaa ss jmp push stc jo or push (bad) mov jg xchg std pushf loope cmpsl movsb popf ja cmpsb out dec fidivrl sti xchg pop rclb cltd lds pop ficomp (bad) pop and pop cmpsb int roll jbe pop ss add xor divl inc mov jmp lds fdivs addr16 outsb push imul jg inc sti jecxz pusha and das test clc sub jg add test or cli jle loopne inc js push (bad) push xchg nop movsb jb sahf dec ja cmp cmp orl jg cmpsb dec mov fidivr jmp cltd cmp andl mov mov stos aam lea popl inc or aas iret aas cmc pop lahf pop cmp mov mov hlt adc inc and lea aam (bad) push ficompl jg pop addr16 jg insl xor add jbe or and xor ds pop cmp or mov test aas adc lret mov add ret fldl pop mov sahf cmp js cld ror jge inc incb and rorb adc and arpl jg cmpsb xchg dec xchg jb (bad) pop hlt push mov clc mov aam mov int3 jg pusha or lds inc xlat popa (bad) inc pop mov mov and pop sti insl rcll mov push sahf mov mov bound mov dec jg pop iret shrb add mov mov pusha pop imul or lds jle mov mov imul rcll inc jnp in or enter (bad) nop pop aas push loop imul je mov dec add movsl adc dec sarl dec inc clc (bad) aad mov mov and jg inc mov pop jg sbb jno dec cs cmp xor stos repz sbb and inc incl in adc mov and jecxz rcrb or and popf lock jns mov or inc xchg cmp jae sbb aam addr16 jp (bad) lahf sahf jg mov hlt pop jecxz mov addr16 leave xor push jg dec idivl cmpsb lret xor imul lea mov sbb out jnp mov imul mov gs push inc jae fadds mov jg adc popf movsl out in stc jge shl jg xchg inc inc mov aas pushl enter hlt mov jnp aas or xchg jg xlat xchg pusha jne popf es mov jecxz inc imulb jbe lcall pop aas adc bound in mov sub xchg and dec xchg jae jg int3 inc jb mov pop and xor cmp scas sti icebp stos test jecxz xlat hlt sarb lret mov loope jg add in cmpsb adc or mov mov incb push push adc imul jg lahf (bad) fisttpl rcr movsb les mov stos outsl inc lcall fwait pop into inc (bad) jg sar sub sub dec insl mov es xchg pop jg lahf pop mov jg xchg adc das add mov bound sub inc jl idivb dec (bad) popa xor mov jg mov in cmc mov add les dec jmp jg and add ljmp inc lods inc mov jo leave pop mov sbb cmp fbstp sbb sbb insb sbb add addr16 xchg jae jmp in pop mov clc sarb push adcl fcomps in test pop out loope inc fdivrl fidivrl push and mov js aas stos pop arpl dec push das sub add mov imul int3 push push adc mov cmpsb cmp lahf (bad) leave cld push int mov ret cmp and dec (bad) jne lea xor imul pop pop xorl mov pop push add test mov stc addr16 addr16 sahf outsl push (bad) fild in jmp mov mov dec sub mov (bad) jg movsl fidivrl loopne adc cmp sti or xchg xchg add and not mov rcll mull jl mov inc repnz dec idivl xchg lds out add jg imul mov mov (bad) clc xchg addr16 jmp mov fldcw sbb sbb xor add dec lods gs js jg adc and push sbb inc scas mov cmp repz mov jae inc adc jns inc adc inc les cmpsb dec inc aas lods cmp hlt add xchg push (bad) outsl aas imul pusha loope push outsb out jae xchg (bad) out icebp jg mov faddl lock pop adc pop pop cmp loopne dec scas (bad) jl fidivrl mov xor sar pop pushf and push xor cwtl pop shll ja dec or jp push fidivr push sbb jg hlt add cmp repnz jg mov jne jg aad stos in jnp in cltd mov adcl mov cmp and mov jae pop sub (bad) sbb outsl jg cmpl cmp in aam mov shrl daa jg testb cmp repnz or adc mov jg into cmc jl sbb and sbb mov jg mov fs push mov or push jo in call gs mov pop pop dec jg or cmpsl (bad) in jg mov inc pushf (bad) or push inc imul push aaa in dec push ljmp in xchg aas repnz xor xor xor jnp insl dec mov hlt movsl xchg adc mov inc mov jg pop inc hlt insl sub inc in fcmovbe dec lock adc push xchg mov dec inc out aas mov inc and add dec jg decb testb aaa jg mov xchg mov out arpl add pop push call mov cwtl cltd sbb fwait jg jnp xchg ficomp sbb jp mov jl addr16 dec and out adc jg sbb xchg pusha in imul cmpsl push push popf in push pop lahf or and sub mov dec adc pushf jle repnz mov (bad) nop xchg les xor sbb jg es add cmp ret fimull out das sub mov mov add ja push sti inc enter adc mov imul push sbb jg daa pushf popa notl rol mov jne jg aad sar and pop push dec stos out insl xor mov popf jg cmp mov dec movsb (bad) jg imul pop xchg xchg add shr add ret std xor aam sarb fisttpll sti mov das mov xchg jg mov xor sub loop xchg aas popa xlat or jecxz inc dec xor aaa jg in sarb pusha xchg test es adc aad inc into sti adc ss cmp mov or mov aas jns sub pop clc jg sbb pop adc test and xchg mov gs push icebp std mov adc pop jle cmp jg dec push pop enter jg loop ficompl sbb mov xor movb push in adc mov adc jg aad lods sub mov jg fdivs sarb fstp mov dec xor jg aas mov mov adc jmp loopne jg mov in xchg je stos cmpl or mov sti cltd jnp xor cmp pop jecxz test jle pop jg inc nop xor push scas jno mov sti std add xor rorb outsb sub pop sub or jg mov rolb jg push loopne jp lods xchg in adc aas mov mov cwtl xchg out loopne push cmpsb jg (bad) sub sti sahf pop daa jg data16 sbb inc lret lods add dec jae inc mov jg inc sub mov xchg aaa jg test add bound mov push scas mov push adc jne push mov ja cmc aaa cmp jae sbb sbb push mov jae in aam lret jecxz sbb lea mov jle sub jg fnstsw pop jg or dec xor (bad) mov test adc mov in in jae cmp jg pusha xor add (bad) add (bad) pushl (bad) xlat loopne test sbb fwait addl sbb aam and pusha inc or push jg xchg push js aaa movsb aas xchg movsl dec dec adc jg sarb pop jg outsb sahf mov aas in int3 lods mov scas jg ljmp bound cmp fild sbb rorl sbb and leave lods ljmp xor jg dec sub mov inc push sti lods jmp pop repz jg iret jge mov lods out mov dec (bad) dec aaa sub sbb fisttp jae repz jg pushf jne xor xor cli push ljmp jg xor add sbb add leave sub push mov or mov jne and out test lahf lods mov adc pop sarl jg push dec mov inc sub inc dec sti loope adc cs scas hlt mov ficomp xorb nop mov pop push jmp mov arpl movsb popf jnp mov mov test mov adc jp mov xor scas popa push imul add mov insl leave sti xchg stos jge jle lods pshufw inc out jg cmc imul and sarb insl mov arpl cmpsb jg outsl lea lods imul loope insb cmpsb ret rclb fcomps ss adc push outsl add repz dec pushf test mov mov rorb jg dec push push or xchg mov outsl jns sub push jg and iret mov pop int3 cmp xlat xchg mov pop mov inc scas adc cmpl gs pop inc test inc test cli push sbb cmp jg in sub outsl aas gs mov movsl outsl push cmp lret ljmp cmc push pmulhw pop mov jg fiadd cmpsl sbbl sarb mov push test cmp cmp in mov mov xor repz dec add xor xchg fnstenv sbb popa (bad) outsb push in mov jg adc ss fild cli je imul adc xchg int3 jg enter mov sbb sub mov scas inc cmpl pop movsb and out int jo push jp xchg xchg outsl lahf ss pop cmp jg pop adc push jmp rolb pusha outsl popl aas sbb or inc xchg scas bound mov insl andb inc insb imul inc sbb or pop dec jg sbb movsb xchg xchg ret mov mov addr16 stos or loop loopne xchg pushf mov (bad) jbe dec or push inc jg adc lret push lods into dec jg adcl negl jp and or lock mov pop lret (bad) pop bound movsb sti daa sbb fcomps lahf scas jne and popa pushf rcrb aad jg xor and push ret rorl das xor mov mov push insl dec cwtl mov lahf jg ret shrl sti and movsb test das jae cltd jp and pop xlat and dec add inc cmpsl hlt scas inc cli aas mov and arpl push xor and push push cmc popf jb push mov mov dec fsubrs xor (bad) sti dec ror insl clc negl leave xchg or push js,pt xor jg movsb in (bad) imul and sbb dec mov shlb arpl cmp jg mov insb mov call popf lods adc sti xlat dec pop jb ja ljmp sub jp and sbb lcall pusha push adc sub imul clc and pop cmp sbb frstor mov out sub cmovg dec (bad) enter shlb xchg or mov add jg mov dec pop sbb mov sarb cli sar fisttpll insb sbb xor bound fstpt test mov and rcrl adcl cmp fsubrl push ficompl movsl bound inc in in mov dec lods pop lcall jg jae xor pop inc fidivrl fisubr scas mov pop das data16 sub js jmp (bad) mov push jg orb cmp daa jg stc push aaa jmp ja fwait stos and inc push pop jg dec pop (bad) push push push jg fist es inc cltd negl jge xor push push mov in mov dec jl out (bad) aas inc jmp mov pop adc xchg cs xor push jg mov pop jg ja mov aas iret or or jg (bad) popf cli sub push jmp jp into jecxz xlat test mov out dec xchg pop mov add xor lock pop int3 or sub jg lea loopne cli aad mov inc fisubrl fcmovne jg in je adc (bad) jg lret mov pop mov aas pop outsl add mov inc mov repz pop push adc in in mov aad dec push rclb pop jp loopne pop jg add and jg into test xlat push test lret pop push mov pop outsb into pop int3 adc inc xor je aad sahf mov jg insb inc repnz hlt jp jg (bad) rorb inc dec popf jg fwait cmpxchg push xor out imull and inc mov in insl and aas mov cmp jg call out scas ljmp iret jle pusha pop jg fiadd mov pusha jg ja popf inc push jg cmp imul repz ljmp cmp xor or and jg push cmc sbb andl pushf fcoml push es push cltd jg xchg stc in push lahf andl dec rcl inc jecxz inc data16 dec aas inc dec cld das mov push call ret xor mov shrl test jle fistl sub scas cli ret cwtl jmp int3 (bad) or mov fwait jae cmp xchg mov jg fnop dec cs lea ret outsl adc sbb ret lods xchg xor xor dec push imul mov mov push divl inc negl and dec sahf outsl leave dec mov pop dec testb scas push and gs jg mov mov and in dec and test sti sbb mov jg ret mov shrb or mov and xchg aas jmp xchg mov movq push sahf dec cmp ljmp xchg add sub sub add nop divl sarb out sub mov dec xor aas dec shll js jecxz dec jge imul jg inc pop xor push ljmp inc jg mov sub mov sbb jbe adc popa mov cmp mov loope push xor pushf sub mov sti fcmovnb mov addr16 add jg or mov ljmp pop xchg xchg jg push cmp std cmc addr16 jg stos inc cwtl test arpl jmp jg and xchg jb test and jp fcompl push push cmpsb in pop loop mov jg sub adcb sbb mov popf int jnp lret aas pop push outsl and fstps inc inc jg pop repz jmp bound cmp rcr pop imul pop pop adc jg inc fimull xchg jmp popf cmp addr16 cmpsb dec adc jne fnstcw repnz jb pop dec dec call mov sub and inc subb mov xor pushf (bad) mov xchg jg shrl jmp js sahf add and fsubs jg mov pop lret les cmpsb int3 shrb out add icebp jg cmp pop push addr16 xor pop jg sbb xor cmp jg and mov push mov xchg cmpl or ja (bad) cwtl stos jg daa jne adc pop sub jg mov cmp jg pop mov adc sub fildll pop aas jg push mov sub ds push dec inc bts (bad) jg adc movsl jno outsb pop inc mov or imul aad out fiaddl jg cltd sbbb push dec or sbb fs sub jecxz sbb pop sti pop mov mov call add scas mov xor dec ja repz jg pop lret lea adc ja je jg imul in jg outsb cmp or jecxz aas clc sub inc cs mov lock movsb fistpl and add addr16 aaa adc xchg outsl test shr jg in std jb jmp out mov out cmp cld movsb addl adc fist jl outsl mov jp (bad) aad ja push leave dec cmpsl jg lods inc and jge sub stos cltd call fwait xchg aam pushf je loop adc js mov xchg mov test jg aad in loopne adc pop aas ret orl xlat fbstp call xchg jg clc pop nop xchg (bad) lds mov mov push inc jnp and inc bound jg sahf and jg adc nop shll cwtl push inc adcl jnp sub in and or mov ds fwait pop dec xor jg push int add aam fucomi lcall adc dec imul imul sub pop rcrb mov mov rorl jge pusha dec loop aas xchg orl mov aam dec je jle sbb jbe or inc push and jg insl and fs jg or inc mov sbb ret add push gs test (bad) sarl sbb mov push dec in lock negb aam hlt xchg aas lods jmp pop pushf es fsubr pusha repz xchg lea pop pop mov ss xchg pop out sub push movsb roll dec imul cld stos ds push xor inc cmc test lret movsl loope insl dec fstpt jp fnstcw inc jno jg out xor popf sbb fist cmp fildll leave outsl lret add je jb nop (bad) dec ljmp scas sbb data16 push aam push (bad) jg adc adc pushf jae xor sti icebp mov xchg xor mov rcrb call dec lods es jl mov adc or sub mov jg adc push jg mov or dec imul add cwtl pushf bound sbb fs jg je and lcall mov fwait loop orl and aaa add push cmc jg int3 pusha sysenter cmp jne addr16 cmp popa insb mul push xor push icebp jg (bad) sbb cwtl inc loop jg lods xor adc xor xchg jg scas leave push inc cmp sti imul pop pop sarl cli jnp test xor out lcall inc mov int jo nop mov adc add jno (bad) aas scas pusha out mov mov mov push xor cmp sub rcr sarl ret (bad) push or cld jg loopne test xchg sbb fwait mov lods out in push imull dec mov inc lea dec push rorl sbb je dec shlb inc ljmp pop outsl fildll cmp je push cmp mov adc mov lret jno jb or in mov (bad) test not js push outsl dec jo int3 movsbl dec imul cmp cwtl aad in fidivr les mov nop imul jp jo mov sbb push mov ds dec jg inc (bad) mov xor cmp imul pop adc mov jmp pop pop daa stos lds sarb inc fs or cmpsb (bad) loopne push cmp cmp fisubrl aaa push std inc mov mov out popa and stos jmp int3 push xor xor xchg les cmp sti int3 sub jl pop pop out dec popf mov scas push bswap jecxz popa outsl aam dec jb sub inc push mov (bad) mov mov jg add sub out jo hlt xor add es cmpsb mov cvttps2pi or xchg addr16 ret roll sbb jg sbb aad cmp cmc push sbb nop movsb cmc std cmp inc fwait mov add hlt rcll mov mov mov dec sbb jg mul int loop bound jg aam xor jg neg xchg (bad) jb mov das cwtl hlt dec pop adc imul sub es jg scas rcll jg inc in mov pop sbb (bad) or imul lahf add jbe pushf arpl lret xor jne enter or lahf stc and sub pop mov dec mov mov rcrl sub dec xor movsb addr16 fsubr loope mov fstpt jnp adc out mov mov fsts jg das and aas mov cmpsl dec and mov xor popf pop pusha mov aas pop push dec insb cmp out push dec imul fistpl aaa jnp shlb jg mov push push jle sahf jg sbb mov jg aaa lret movsb adcl cwtl dec aad cld push shrb inc sarl pop (bad) int3 (bad) fidivrl jg cmp dec in aam mov jg and fadds fdivl jns adc aas scas add mov inc rcrl mov mov scas cltd add sub mov idivl stos push mov out dec enter in out test lret push call add cmp fimul div dec jno push dec ljmp aas xor mov dec or cmp adc jnp or rcll inc push jg inc rclb jg pop rol xchg lcall popa out stos jbe xor popf mov ss mov lcall lods mov cmp xchg mov (bad) jg fisttp jb sub mov jg dec push notb xchg jg add (bad) cmpsl adc rep addr16 add cmp or lret adc pop pop lods lahf adc xor mov sti xlat cld cmp addr16 jg inc cmp inc into and aas rcll aaa add ljmp jg out in loopne pop jle mov xchg push in add xchg jg mov or call pop rolb or ds mov imul dec mov mov pop jmp jnp jg xchg mov jg cmc xor aas xchg push sar dec aas cmp in dec pop cmp scas pop popa jg (bad) loop cmp mov in inc dec js sbb jb (bad) jo aaa fdecstp ljmp bnd pop mov jg push (bad) in cmp jne jb lods cmpsl stc inc jnp cmp jmp enter jg add stos cmp mov mov repnz jg fcompl cmp mov in jnp out outsl dec jnp inc cmp outsb (bad) mov xor imul adc or test and arpl jno xor and or aad xor gs jecxz es enter ret cmc aas add daa mov jp jg dec mov repnz xlat xchg push lret scas rcr insb jp inc jnp inc jmp mov dec lods sahf lret scas mov sbb dec cmp clc imull add dec outsl lds imul aam xchg or adc leave arpl pop shlb push (bad) cli sbb xor jg dec xchg cwtl jle add movb outsl imul inc icebp popf scas dec ret sbb hlt pop mov lods dec xor mov mov adc mov cmpl cmp jle sbbl ss sti sub jge jo sub sbb dec int jg pop xlat bound lcall mov sarl out scas jg loopne jge cmp jg push xchg sub inc int3 mov dec pop es arpl lods dec packssdw mov pop jae jno mov jbe addb addr16 rorl mov outsl or cmp jg xchg (bad) jecxz lret xchg add aam jmp jo pop push sahf jnp jg (bad) cltd xchg push mov pusha cmp dec (bad) xchg inc lahf in xchg xor stc out shrb outsl jg xor neg pusha call incb int3 jge pop outsl test push lret jg sbb pop mov mov mov push sbb push jg jge cmp and pop insb adc inc hlt jg pop idivb jge xor mov dec inc cmp jg faddl inc xor mov lahf jg (bad) add cmp mov imul cmp pop fldcw enter sbb xor xlat adc push test cltd inc sub add add aam (bad) dec add aas ss into push aas incl inc adc jg repnz xchg sub mov das mov xchg movsb dec jbe popa dec and bound addr16 clc in push inc nop lret mov sbb aas imul pop insl jg or pusha mov cmp fucomip jg out sub push sbb scas adc fildll jg (bad) fisubl movsb enter and pushf jg add sbb mov movsl cmp bound push adc out jg lcall loop (bad) bound out push imul inc mov cld mov xchg dec inc (bad) jg es popf xor pop test aam int ret mov sub inc mov or jg mov mov jmp lock je imul push (bad) lea mov pop xor sub jg rcll xchg add into (bad) cmpsb cld popl fwait xor mov xchg xchg mov jg sarb jg xchg xchg inc fadd push popf scas dec jne xchg xor mov les or inc sbb jg into pop pusha jae cltd fs lods (bad) popf mov fldl aam and jg hlt loop in xchg cld mov jne enter dec sub mov scas and sub out sbb (bad) and outsb jp imull jg mov pop cltd add adc and fcmovnbe xchg loop faddl sub (bad) or jle adc loop ret (bad) frstor aas incl lock jo or push hlt and rcrb ret jae jl cmc cmp mov dec insb shr test insl stos mov inc bnd cld ror add jg push push in dec cmp mov xchg dec xor addr16 test out fcoms xchg movsl jg cld ret stos loopne mov into jg fstpt dec jg jbe xor push xchg iret mov xchg sbb add inc mov jg jge test repnz mov inc mov aas das cld sti lea rorl add xlat xor dec and negl scas outsl fs mov dec xorps pop sub mov clc stos jno pop pusha (bad) scas and jg js or sub cmp sbb xchg outsb dec jnp jg pop mov insl pop popa aad mov ficomp xor and icebp jg sub jg mov jg jno cmp adc jb push mov out push and lds mov fmuls not xor ljmp or lods xor jg push pop scas mov arpl sub cs shlb movl addr16 test popa jg push push int dec mov sbb mov into xor addr16 mov adc add arpl daa fbstp xchg or aad pushf push jmp push js xchg xor cwtl mov add bound sbb pop push mov push ss jg popf xor jno xchg dec pop lahf jg xchg es dec out jg mov mov aas pop add pop inc inc insl mov shrb out sbb xchg dec in dec jg jbe push aas mov mov add arpl iret shrb cld inc push pop adc adc pop jecxz into inc and outsb jg test enter out addr16 push mov dec cmpsb sub inc jg out sub lret in jg xorb sbb xor push xchg or (bad) jmp lret push push nop outsl es icebp cltd sub ret pop lahf (bad) cmc leave pop nop mov lods out ja push pop mov ds nop xor daa mov clc (bad) ds adc push packuswb lock in mov add in pop pop jecxz push nop add and pop adc jns jl mov std das (bad) frstor mov (bad) push mov hlt inc mov aas addr16 lret fdivrl out imul stos xchg cmp pop dec decb adc movsb or scas mov fs jg jmp daa adc jno adc dec (bad) push xchg xor or dec pop jae dec dec in dec push pop outsl add add pushf mov pop inc mov mov push in movsb jnp and insb adc xchg andl and and jg sub (bad) pop cmp inc mov sub imul cmpsl inc aam fsubs inc jnp mov mov cmp mov fisttp pop movsl aam sbb pop lea hlt jg mov sub repz jg pop iret js jle loopne xor (bad) cmp mov jmp pop add jg dec (bad) outsb add pop (bad) repnz lcall mov xchg add jg jle xchg rclb loop mov popf pop data16 scas test aas mov jbe idiv mov jp and pop push dec (bad) int3 jo daa js (bad) outsl stos pop gs mov lock adc push pop paddd in outsl bound imul adc and scas jbe fistpll idivl pop outsl imul jg das pop sbb xchg jle aas push and les fisub sti fcmovnu inc test sub sub jg inc in in sbb push xor pop mov das dec inc mov dec cmp jae jg add sarb aam mov in in sub push dec imul inc inc (bad) (bad) sarl cmp mov icebp sbb fsubrs (bad) scas dec dec jg rorb jae pcmpeqb clc jg xchg aas adc mov mov jg push outsb jo xlat xor jg xor pop push or les clc and pop jg popf in cmpsl mov xor push fucomip mov in pop sub (bad) or jg inc shr xchg (bad) lcall jecxz and shlb pop int3 test rclb mov ja mov cmp dec (bad) sti in xchg and loope rolb mov mov dec pop pop add cmpsb out add cmc pop dec mov jmp push fwait jg js cld setl in jg (bad) jae jle cmp ljmp popa aas js cli inc push inc jmp inc mov mov aad frstor scas pop sub and test jbe jg out add push ss lcall mov cmp pop test inc dec jg mov push scas xchg loope push or add sub pushf pop push push (bad) dec and out out sbb icebp (bad) in adc enter or xchg out bound pop addr16 push jg mov mov mov inc mov fs add jg movsb sarb adc insb push mov jg mov aad jg adc imul dec dec push ds stos sbb sbb pop dec push add nop mov addr16 xlat push mov jg fstpl rol adc dec push adc mov sub mov hlt push cmp (bad) xchg mov in aas adc jae cmpb push pop (bad) pop cmp add inc xorl push adc popa loop push xchg mov test ja in aas jmp xchg mov imul (bad) loop mov (bad) pop rcr pop dec js out pop stos inc xor repnz outsb mov mov sti mov jmp jle loope out pop inc scas loop imul repnz test mov lds jne mov xchg jg cs setbe pop and jp sub mov adc sarb stos loopne mov sahf mov fdivrl xor and movsl or cmpl mov sub pushl mov push xor mov jg xchg sub adc dec xlat ljmp inc mov adcb sub cmpsl xchg pop push movnti mov iret leave push pop das test sti mov dec (bad) hlt imul cmp jg sub cmp jmp imul inc and mov jg sti pop or dec mov xchg cmc xchg rorb jo test inc sbb push xor dec add or insb imul sbb hlt xor or jg call xor jg fs sbb xor jae incb aas loope inc clc ss push sarl or jg adc pop ljmp int3 data16 add (bad) mov insb test jg and (bad) and inc and loopne repz mov pusha xchg jg aas fild add in popa and sti sti (bad) lea xor push push in popa cli jbe jle jg (bad) addr16 mov jg test decb jg sub xchg test inc mov inc cli sub addl xor nop or rolb mov test cmpsb sahf outsb push inc sub (bad) jb bound inc push or sub mov dec fisub pop call ss jg jnp and push cmpsb jg lret nop mov stc shll aas jmp cmpsl jnp mov add or (bad) push (bad) jo sbb or mov jg loopne xor cmpl cmc inc cli pop mov or push push sahf adc dec imul pop das clc popf add inc xor and andb sub mov inc xor decb xchg aas les imul (bad) or pop mov cmpsb or cwtl jg call int aas mov push stc inc push mov jge and push outsl sub jnp jg mov (bad) rclb sub push negl call out jb iret sti ljmp xchg or jg mov inc xchg jg fwait sahf mov jg push fidivl int3 ljmp cmc repz fs (bad) lret mov rcrb fisub out cmp jg shll jg adc fcoml out push jbe cmpsl std jns aad jg test vpunpckhwd inc cltd sbb jg and cmp scas cltd cs dec mov mov mov movq fcom jg jle (bad) push (bad) mov xchg or les lods push lock mov sub adc int3 popa jg or push jge inc pop incb or push mov into and jl in notl pop scas jg xchg loope jg xchg lods mov fbstp push pusha hlt mov pop lds clc dec xchg js daa pop popa mov repnz jg cmp xor outsl out push jg cmp mov jg orl jg jb mov cli jns cmpsl xor xchg dec jg xor fwait push out (bad) (bad) fdivp jg outsb sbb push jg pushf loope inc iret mov jg cs hlt aam sub jg imul gs int3 loope fistp dec ljmp out push cltd mov adc lret push jg xor cld lock and in xchg sbb dec ljmp test pop insl sahf pop jg (bad) cmp cmp jg je lods pop hlt mov test addr16 mov push sbb adc mov jg inc das fmull pushf jo jg leave inc jne loopne testl rolb jg scas inc jmp lods and loopne les rcrb popa aad jg push lahf mov jg pop lret (bad) cmpsb aam pushf ret mov aad push daa movsl sub sbb or jg sbb jecxz dec out fildll out (bad) movsb (bad) aad mov in mov or cld test mov or and mov jl lea dec xor repnz jbe sti scas les jns outsl jmp push or jl mov mov and jg (bad) jno out rorl jg int push ss in inc jg fldcw in mov lret push mov fisttp mov arpl fdivr and push les jg push das into aad mov div mov shll xchg jg mov aaa mov add pop mov mov pop into and or imul leave jmp adcl stos xchg (bad) mov push mov pop inc pop mov in jg fwait call in fdivrs inc pushf fistl js adc cmp les loope push adc mov sarb mov push jg addb push and xchg jmp fadd pop mov push jg je push sbb aad mov pop jnp bound mov inc jg aam lock fisubr fs popa jg cmp jbe in lcall mov mov sub aas pop mov mov lock sbb jg lea clc mov jb or mov mov cmpsl add mov pop dec out inc xor aam loop jg jp cmp scas push jg xor inc es jae pop repnz adc push xorb xor cmpsl cmpsb jg lret mov ficomp jo push inc addr16 sahf cmpsl ds (bad) dec pop dec and xchg jg outsb imul inc pop std stc mov sbb xchg repz xchg icebp pop cs notb dec mov jp int3 push mov jg test popf jg pop push rorl mov xchg ret ds push jg fucompp ja and data16 dec xchg cld inc sbb mov mov jg out cmc lods ja imul mov shlb (bad) or pop jg jge fisub sub mov xor repz pusha jg mov xor and mov arpl sahf aaa pop (bad) xor (bad) adc cld xchg fildll mov addr16 mov (bad) jg rolb mov mov or xchg fnsave (bad) mov jmp (bad) addr16 add jg (bad) jle or dec in or mov jg sarl negl jb pop mov sub stos out jg inc xchg jnp xor imul and push jg leave sahf ja push enter fucomi jg lahf mov fdivrs add or pop imul jg and cmp (bad) add dec xor jg pop cmpsb cmp mov sti les inc jmp out mov roll sbb dec mov es push jns mov push (bad) pop push mov pop std adc mov test pop ret mov addr16 arpl sub fldl divl or shll jns pop popl fild mov mov pop lret testl push rorl into insl sub dec inc or xchg lcall cmp outsl lea loop fimul fwait rclb inc stos idivl mov jge cmpsl lock cmp sbb lahf xchg dec xchg testb push into loopne adc mov jg ficoml (bad) xchg lcall rep jno rorb dec js push imul fisttp pop jae add fmul mov jg data16 (bad) js,pn stc jo jl lock scas jg jne iret rcll xor pop test test jg mov mov sarb jle in dec mov push in or lret mov adc adc pop xor mov rcll fs lods and dec aaa mov jg aam add xchg int3 lea cmpsl adc add cmp aas adc out mov lds push cmp test cli jg add int jb inc add mov xlat daa (bad) ja pop inc or add daa mov mov outsl sbb ds dec in push mov inc loopne sti push inc loope adc pushf rcrl xchg pusha stos mov lahf sbb test insl cli sub cmp idivb add xchg bnd cmp jmp mov inc cmp pop sarl fimul inc or mov add jb hlt adc fidiv into (bad) (bad) sbb xor movsl sbb xchg pop push push jge jg icebp add test cmpps (bad) loop out xor in lds sub (bad) outsw loopne es jg xlat or cmpl mov lret testl or pop lret inc mov dec jg cmp popa std mov ja sub push and jg sub pop push shrb jl insl add (bad) jg (bad) incl jg push fsubrs loop loopne daa scas bound xor insb pushf outsb jg div int cmpsl and jb mov jg mov in jg in sbb jg push cmc pop jae,pt js pop imul cmp adc mov fimul jg pop sbb flds decb inc and xchg cld or (bad) cmp pushf mov call pop jg incb cli aas mov push jg (bad) cld rorl xor push dec xlat cmp lea cli and jg cmc out mov inc (bad) sti mov je xchg jg dec adc ss aas xor push cld add sbb arpl inc leave mov and das (bad) mov loop jge jg add testl inc iret pop jo in cmp xlat (bad) mov (bad) push cld jg js stos pop lahf cmpsl jo dec mov push mov mov daa stc mov aas fdivrl dec cmp sub inc sub xor fist je mov pop fnop push arpl mov mov aas (bad) data16 sbb or dec push sbb in lret outsb popf push dec xor jg jne pcmpgtb jmp and mov mov and fwait or mov jnp xor jg sub lods xchg push imul dec call mov xor insb dec sub dec jl aas dec not insl sub (bad) setno sbb loop jle pop adc stos lret movsb jg ficom push jg push pop mov je sarb enter jbe xchg jg jp sub sbb imul aas push pop mov mov subb call add mov iret adc sarb in bsr outsl push jg add mov sti inc inc jge dec or mov sarl cli or loop push shll imul mov daa sub add jmp movsl dec jns pop sub sarb add sbb sbb outsl mov int3 lret ret shl pop fbld or pop xchg jg cmp push (bad) mov jg out ret mov pop mov pop enter inc jmp jne js,pt pushf push cmp (bad) jno sbb push adc pop xor (bad) push jae sbb movsb jbe cwtl test in mov test jmp sub push ja,pt lcall jl and test mov outsb divl sti and mov movsl insl movb cltd or jo push ficom shlb les push jg inc enter imul (bad) mov addr16 pop sbb nop lock push jg jecxz sbb insb mov dec lock cmpsl push aaa sbb loop add xor clc adc jg lret addr16 jnp hlt cmc stos out aad bsr jecxz adc sbb test aad xchg loope fs mov div loop add movsb mov lcall jg,pn fnstenv js inc jg sub movsl sbb loop xchg dec out ja je push cmp jo or repz stos mov push jae ljmp xor xchg add nop push dec pusha adc push xchg add es gs mov popa mov insb jg pop or decb pop cli in and imul mov imul pop pop cltd lcall (bad) andb punpckhbw out fildl (bad) or nop lods out xor inc sub lock imul fwait or out iret cli xorl adc scas inc mov cwtl add xlat xchg mov jns aaa jp inc shll loope ja setg movsl gs test adc sti lcall push jns push shlb or fidivr lds mov je sti ja add pop (bad) mov in fldenv pop fcoml stos jp out mov aas inc std loop in push add out add (bad) daa sbb movsb jno dec or jg addb and pop je xor (bad) pushf jg xor lcall xor xor mov lahf (bad) jg dec or jg in test jg imul shll and add xor inc push repnz add jg fidivr iret fadd push mov mov lock gs scas adc push add adc pushf or iret call pop jg push inc xor fbstp in pop xor pop xchg mov lods nop sub mov jecxz xchg push push jg mov out jns pop or ret cmp outsb ljmp jg ja (bad) in jae and into outsl jb mov jmp out mov mov cmpsl push sbb movsb pop xor dec adc jg ja mov jne aas pop lock les push jbe cmpl ret xchg fwait dec jo xor push push jg pop in out (bad) in cmpb pop pop rorl mov mov sub or sbb xchg fs jg jbe cmp ficom jg or jp mov fstpt xchg sub das popf xlat push jg and xchg jge cmp and xchg mov or insl xor xchg cs les mov or dec sub int (bad) jb push es in add xchg test sbb pop mov mov pusha inc les jecxz xchg fisttp mov fwait or out jg loop movl mov sub inc and push xchg stc pop push and mov (bad) lds jg push xchg push popl test pop cli lock imul ret fidivr ret inc mov dec add rcrb jg roll jo mov icebp repz push pop outsl nop jecxz mov outsl mov iret jg int3 push jmp dec aas xor push aad pop sub mov lret jae sub jb inc cmp ret jg mov in jno cwtl iret cmpsb pushf push mov pop adc pop add jmp pop (bad) jbe cs and cmp jg adc scas and add cli jg dec mov push dec mov mov outsb icebp fstpt stc sub insb inc addr16 sbb js,pt stos inc cmp popf xor inc inc dec jg in lahf scas xchg push fbstp adc subl sbb inc pop push js lret iret or push xor dec cmp xor insb pop pop pop cltd popa ljmp sbb out lret loop jle inc ss cmc pop xor push jecxz or dec stos sarb adc xchg jg pusha dec xchg jnp pop addr16 (bad) push pop push in rcr pop mov sub jo cmpsb aad fcoml rclb mov js jg push xor sbb shlb or cmc repz ljmp dec jne pop mov popf aas dec std movsb push add icebp dec and dec fnsave fistp lock dec jg mov add lock sbb mov jg nop aam gs xchg mov (bad) mov jl mov rcl mov push sbb outsb bound cltd fbld ret test jo cmc jg push xchg dec jp adc pop fstps jg outsl inc push xlat xchg and ret sub out mov xor dec test sarl pop adcl scas shl ja ljmp lret sarl pushf inc push movsl loopw aas imul inc idivl jg pop shll push xchg roll hlt nop sbb mov jp inc jne (bad) mov add imul cmp (bad) jg jmp cmp mov jg enter aas xchg xor pop scas adc xor lahf push clc (bad) jg std push (bad) (bad) inc mov aad (bad) scas out dec jg (bad) adc ss dec lret add pop mov imul addr16 inc cmp mov mov mov aam outsl incb sbb lret and lahf les inc pop add jg fld in dec dec insl mov mov and bound cmp jg and sti (bad) jg (bad) xor jg les sarb push xchg into and mov cmp fmul ds sub push inc sbb scas dec pop mov adc inc ret mov xor imul adc sub add out jle inc mov mov pop lcall cltd jg add xor lahf jae and dec arpl arpl imull pop icebp mov jle loop inc fucomi xchg fldl sti mov dec pop mov sahf fnstcw dec shrb jg cli ret push decl enter out ja adc mov xchg jecxz scas cs and leave adc xchg aaa scas xor jg outsb mov out pop and dec cli add jg insl cmp adc cmp xor adc gs mov (bad) int3 mov fwait es and and add pop jg adc jae out mov add sti and cmp int inc xrelease jg pop mov fldt es sbbl imul out xor ja (bad) hlt xchg jg lods pop fwait adc ss push jle cltd lcall jns sub jg jp aaa add pop les xchg fcmovbe mov jns xchg test out xchg out xlat popa mov arpl add jg sub mov fadds bound and inc sbb test fidiv adc mov clc out jg push mov test pop cmp test dec xchg inc add cmp mov cmp jl inc push mov loop add shlb sahf (bad) dec mov mov mov lock sbb jg sbb push cmp fidivrl mov mov pop cmpsl in hlt and sub in jg and xchg dec movsb xor mov (bad) stc or jg dec ret sahf inc push add mov rcl inc push xor sarl or and jbe imul sti xor sbb mov ss out (bad) lahf xchg stos mov insb stos or movb xchg xchg sti xchg outsl sub cmp and jg std mov js add pop mov loope add mov and (bad) insb mov test insl (bad) push dec sbb xchg dec mov subl mov sahf mov out adc das (bad) or stos jb,pn mov iret lahf mov jg aas pop sbb std daa (bad) rorl mov in lods je xchg sub mov mov sub insb xchg jl mov aas mov jle arpl scas xorb cmpsl or dec or cltd jo add lds mov test xchg or or jg aaa imul je jne popf ljmp aas (bad) xor mov push fdivrl test xchg lds loop icebp scas in jb lcall test fs fiaddl sbb jg mov adc je jne jg jns lds js jle xchg lcall cwtl (bad) fs out clc jg or jl inc mov test popf push jg inc or loope jg aam ror xchg sub andl arpl jns into pusha xor jg mov dec jb (bad) push jg (bad) jp mov es jg (bad) cwtl fnop cmp aas fmull dec fbld pop sbb ljmp adc subb scas xchg xlat in lds mov mov mov jg mov stos data16 ret fcmove fwait xor out jnp jns mov gs addr16 mov icebp lea cmp jmp mov outsl rcrb (bad) xchg mov sbb lock mov mov roll cwtl dec mov lahf inc sub xchg mov shl mov push sub xor mov dec test mov mov cmpsl ja sub inc rorb push das scas or pop cmc pop ret mov daa jl mov dec pop test enter cltd jg or mov movsb test add mov shll mov outsl jb mov or cmp jg push xchg xchg jg bound lds out pop or jmp or mov (bad) jno aas cld fwait (bad) inc (bad) in mov arpl mov mov fxch mov ja aam or mov jg pushf notl jg inc lea xor (bad) and (bad) outsl test mov (bad) jg out sbb jp jb aaa addr16 mov sbb pop pop jl and jg das xor ret stos mov std xchg jl push jmp sbb xor (bad) test ds data16 dec std pop lahf fwait arpl jecxz cmp jg jb xchg add in lods mov lea mov movsb push out sub lock cmp push push pusha loopne mov aas subb inc jecxz mov cmp push mov int3 jg mov or ds jb push push jmp hlt xor mov or adc in jns dec dec jae ffreep lods rolb outsl mov (bad) pop shll lea (bad) call pushf push int mov jbe mov cli dec jbe jg xchg push mov shrl cs data16 xor aas ret movl xchg inc jp jg adcl or adc fimull dec adc out mov popf push (bad) xor xchg rcll outsl pop push lahf mov push aad and insl dec rcrl test jnp jg mov cli jp cld pop jg fisttpl xchg jns aas push jg push ret cmp sub cmp inc out mov clc push jg leave adc add cmc (bad) adc mov cwtl xor mov mov ret (bad) xchg push push mov jg fcos jge dec xor jg sub cli sbb stc and mov mov imul or (bad) popa mov fdiv xchg pop fs gs jg enter rcll or pop and sbb clc dec fistpll xor test outsl add out jg dec adc repnz leave sti cmp push jg jbe inc dec arpl sti push imull jae push lahf jg gs sub jg jge test loope push pushl outsl repz (bad) iret fdivl ret push jmp adc lds insl cmp fistl cli daa jg enter data16 mov push mov push dec mov add cli sahf (bad) lods adc outsb in xor insb arpl loop pop jbe repnz mov lods rol jg mov sub popf fstps push push adc test jae lods push outsl push cld mov jg cmp and imul jg mov adc cmp jg icebp dec or outsb imul icebp jg std les cmc flds mov mov test outsl gs pop mov addr16 jg mov mov (bad) test push jbe out in mov push mov push lret das cmp jno push scas cmp div xlat or dec dec fsubl cmp cmp xchg dec add mov dec (bad) mov sbb outsl dec fdivrs jp stc pop ljmp loop jg aas dec xor aas nop imul mov push jle mov subl dec inc pop mov xor mov jnp stc sub jg xor sahf jb mov sbb adcb ss mov jg repz and jg xchg adc fidivr (bad) clc (bad) (bad) sarl or ds leave jg sub mov dec movsl and aad dec fwait stos add mov push in lret fstl fdivr push mov fwait inc mov cmc mov sbbl icebp popf addr16 adc je mov xor insl lds add jg,pt ljmp jg adc leave jg mull push jno hlt pop mov cmp int and sahf sbb mov cli sarl ret arpl bnd add sbb pop and jno jg xor xor sub cwtl and mov hlt inc push stos sbb jg insl enter dec xlat push pop push xchg push pop jg push cmp jne sbb cld pop sub adc mov jg stos je mov mov jg lahf dec popa pusha inc add push cmc inc jecxz mov loopne js sub negl push cmp (bad) or int3 add popf clc rcll push jg push sti jns les (bad) and or pushf jle pop pop push xchg (bad) std ret mov xor xchg jg mov mov insl inc or pop incb jg lea jne sahf cli push cwtl push inc or daa in test jg jecxz push and popa cmpl clc cli mov outsb xchg dec (bad) call inc arpl xor mov (bad) rol clc mov mov out mov push jne add jg icebp add fidiv stc lds jg popf outsl xor xchg jg mov lret dec mov pop bound inc mul sub divps ds icebp xchg jnp pop jno sbb mov ja mov cmp jb imul adc ficoml jb pop jno mov fwait lahf pop pop sbb je cmp push ja stos push mulb std cli push nop stc push lret cmp movsl mov dec jno ficomp sbb sbb xor dec (bad) jns jecxz xchg fnstcw outsl fsts (bad) mov fistp cmp jg cmc gs (bad) pushw lahf popa js into inc mov mov or lds inc jae cmp pop jg pop daa outsl pushf sub dec jg les hlt std shlb outsl fsubr cmp add jg or dec rorb call sub int3 bound test and mov jg fimul sbb data16 add cli jg mov in stc and pop mul into mov adc dec mov imulb std xchg push insl pop add lds sub lea fcompl push jg dec jp in xlat dec lret jo loope,pn mov inc nop xor push cmc out into jg pop int lret aaa jg sarb mov mov fs fdivrl xchg xchg mov jae aas xchg push outsb mov jnp dec hlt js cmp (bad) lahf pop jg or lods or sbb movsl adc mov sbb jg cltd add mov jmp cld mov and jg lret popf dec push outsl mov add popa mov pop cld jb out jg les (bad) (bad) js push es nop notl jecxz mov mov sub jg xor andb aad movsl negb mov pop aam sub inc jp cltd cmp cmpsb jg pop hlt or fwait in mov cmc xchg push pop pop insl mull dec jg stos es mov jg rcrl push aad jg ss ret loop int aas xlat dec mov dec into fidivrl ljmp add jae jne cmp pop int jg jle imul mov sbb and push inc daa lret je loope xor or pop dec ret mov imul cltd jp nop and adc outsl lcall mulb push adc jg push lock out jge jg js or pop xchg outsb jg xchg das lahf jb jg test mov fs jg jge push inc cmpl (bad) jb or and adc mov mov add and xor (bad) push hlt and ret je mov ret xchg scas inc jbe lret add sub popa sub loope jg sbb sbb cmp jg outsb mov lea inc pop pushf dec test jg mov rcrb jno xor dec and pushf test mov mov cmp imul and ficompl insb cwtl lock lret cltd jg movsb cmpsl daa divl fisubr (bad) jg dec iret js stc xchg lcall jbe test jae cmp aam in pop fisubrl xchg shr lret adc mov pop das inc (bad) lods xorl test loop jle jg lea adc cltd jae repnz rolb dec mov adc jg or mov jg movsb notl mov in (bad) mov jp jne cmp mov mov jg loop out bound add iret insb je jno pop jg cwtl mov pop (bad) or jg dec aas pop jno mov iret out int3 push jecxz jg push xchg jg cmc aaa cmpsl xchg pop adc bound cmc push mov jg inc pop into hlt or jnp out jne jg push clc imul mov jg loope movb pop cmp mov pop test mov add sub inc lcall pop hlt push pop push jg aaa cld push pop add jb mov jge or iret and cmp xor jns dec fnop (bad) lock jg jno pop dec dec ret scas jg cmp lods jg sbb add or ror jb (bad) xor mov sub and push out xor push insl mov lret dec mov add outsl adc aas dec cmp mov fadds mov popa mov mov cmpl jg (bad) sbb dec mov and mov xor insl fstpt jne pop clc out loope cmp jg je fdivrp jg mov xchg xlat sti insl jge pop jg xchg pushf (bad) mov sub in and aas faddl addr16 shll and jg adc pusha out fldenv inc xor jl inc enter aas cmp push test fcmove and dec cltd xchg jo hlt inc loopne push sbb jl xchg push cmc fadds out out jg fs cmp push inc orb jg xchg adc add or (bad) fmuls in leave mov cwtl xor insb jo (bad) vpackuswb in adc xor mov adcb outsl dec out rcll xchg movsl push stos jg and pop jmp sub or jg xchg and out loop mov mov pop mov jg aaa fs xchg push and inc data16 fnstcw sti lock outsl jmp cmp inc in negb in add test (bad) jg mov mov jg push in pop cwtl push int or xor scas movsb fnstsw mov xchg sarl cmc mov sbb mov push (bad) outsl pop inc jg pop inc shr fimul sbb xchg dec inc insb pop jg xchg push nop into mov lahf jg movsb jecxz adc aas and mov push inc dec call xchg hlt stos or mov xchg dec int3 push push mov packsswb dec fldcw bound jno addr16 enter mov ljmp push in movsl std adc das push popf cmp jns jg cmp adc in dec jg xor dec jg (bad) lock pop pushf mov jg push mov sti pusha pop adc nop stos mov movsl popl add inc sub popa lret sub mov jmp or loop jg jb subb cwtl xor xchg cmp jg in pminsw and push cwtl and imul push test push inc sbb in mov enter xor sub test iret jg cld mov jnp scas lret lret mov sub mov pusha push test call dec jg addb (bad) mov jno push mov jg (bad) mov pop outsl pop pop ret jle cmp dec xor inc inc bnd outsb push mov jecxz les mov shrl jnp add adcl dec pop call dec mov cmc mov aad bnd push outsb push inc repz jg inc bound lods push jg scas mov jns popa push jg sbb aaa mov popf jecxz lock inc jno mov xchg inc add imul daa adc xchg sti sbb mov mov jg cmp ja mov aaa add sti mov mov pop and lahf notb pop lods mov aam jg cld add and lmsw leave roll sarl xchg xchg inc push sub bsr std dec pop push cmp imul test adc fsub out bound push pop pop inc mov mov push inc bnd int jne pop lds out mov out push pop outsb in jno add jo mov lea jnp aam int mov ret jo daa fwait mov cmpsb inc cmp dec (bad) (bad) and (bad) jecxz fdiv and dec xor and pop lret sbb outsb push imul jg push aas das fdivs jg fidivr xchg push mov mov ret xchg pop fild dec stc mov jne pop pop fwait adc jno jb out lret sti into xchg pop outsl scas call fwait ds mov rclb scas jg in push jns idiv dec mov mov sbb (bad) mov jl test scas mov stos sub insb jg cmpsl sub cltd dec adc popf das insl inc ret push aas sarb or jg rolb mov je pop jg sbb jg int3 sub bound jg stc loopne cmpsl nop mov adc add (bad) fild mov es mov fcoms sbbb ds adc js push cmp aas jg mov mov jle dec mov adc call mov fs cmp mov cs jg int3 je cmp mov jg and imul shrl jae fs ljmp (bad) hlt dec (bad) xchg imul sahf mov or gs stos dec jg out and push xchg sub adc jno cli scas mov (bad) push clc jg push lret sahf pop xor sbb xchg or jg mov lret outsb pop xchg mov (bad) adc mov cmp testl and sub mov mov popa ret push lds jnp sbb clc in ljmp push jp jo sbb sub mov in (bad) (bad) fisubr inc aam mov sahf mov (bad) ja xor push sub popa loop jno ja cmp jg popf cld xor xchg mov xor dec scas mov xchg in scas and imul je mov aam dec push xchg dec jnp jg imul cmpsl jb mov arpl mov ja fcompl dec jbe xchg notl loopne sbb scas das mov xchg mov jg bound out push enter dec hlt fwait push repz test bound inc (bad) push jg adc cmpsl into cmp mov icebp jl lods or or cmp and jg mov mov aas inc cli add or mov adc jmp push sbb cmc aaa outsb cmp jg jmp xchg add (bad) js push mov inc bnd cltd insb xor jg jmp aam pop push cmp mov sbb jo and aad ss jg push loope ljmp xchg jg push sub or and xor inc push jae jg fs movsb jg div push out test xor les mov sahf aas adc test or jg repz jo mov int xor inc inc pop mov ja mov sub call xor sbbb addr16 pop inc (bad) ds pop sub loope (bad) xchg lods mov ss and mov je inc movsl lds cmovb jmp (bad) mov sbb pop fsubr ja loop ffree es push xchg xor jl mov sub jo jno mov lret popf les xor sti inc ss (bad) js int dec push sub loop add pop xor out mov xchg jp add repnz into inc lock std sbb jg pop add sub (bad) lock pop lcall jg mov and jg iret mov push ja sbb and pop xchg mov pop xor (bad) mov pop ljmp test mov jg fwait jb clc push gs and int inc loope imul std mov lods rclb mov sar jg xor repz into jg and pop pop jg (bad) and dec mov jle jp ljmp xlat xor mov cmpsb leave (bad) jg xchg cmp dec (bad) jmp jg test aaa pop dec movsb imul pop dec lcall in xor pushf imul adc sti fcompl jno les scas clc int mov dec pop and jg sbb es adc or sarb fs xor sbb mov pop pop jg pop test movsbl jg (bad) popf iret jle or dec xchg cs sti nop push jnp inc in or mov pop ret gs loope mov push ds (bad) pushf jg mov mov xchg outsb fistp clc jg jno or mov insl inc movsl xchg xchg inc loopne jle pop fisubr dec mov sti out sbb jg imul rcrl aas jno mov (bad) aam mov jg push (bad) cmp add push imul jg aam adc adc and mov adc (bad) mov push loopne jg (bad) lock aas mov std add push js sbb and pop jg dec ffreep int3 pop jecxz jg cmp mov sbb loopne mov test movb jo jnp pop rorb pop push loop sub xor scas pop push (bad) sbb les sub imul and dec pop lcall jl mov mov pop or jmp jp nop rcrl push test in mov pop xchg (bad) idiv out mov xchg mov adc dec (bad) lods push lret or fisubrl fidivr push call arpl cmpsl mov lods popf mov cwtl aas mov ja movsl jp iret mov inc cmc add xchg jmp cltd sbb jp scas add and cmp mov fstpt push rol mov or repz cmpl cmp int3 fsubrs mov cli jb fucomi adc jae mov jg xor insl insb mov fnstenv jg xchg pushf in sbb or adc popf ret arpl push (bad) jle fsubl jl lahf insl dec adc inc mov dec pop pop or adc ror mov push jg leave push push xor inc in clc hlt loopne or (bad) iret xchg aas inc loop mov fbld pop aam fidivr dec push inc push xchg call jne shlb jle mov mov or jg mov repnz xchg mov inc out lods jnp hlt imul fdivl dec push out ret leave (bad) ja mov cmpsl push inc je sbb hlt mov in dec push in sbb xor sahf xchg jno ret mov test cmp mov sub jo adc inc jge out pop les aaa sbb lea xchg inc call xchg leave test adc or outsl jg xchg sahf jnp mov enter jno lock (bad) fidivr mov aam jg mov inc adc jo push dec mov clc (bad) out stc xchg (bad) dec insl and jg pop add jbe movsl jg int mov arpl jb adc pop mov inc mov rorb mov sub inc fimul adc das pop jg jge dec inc loope jg sub clc jg popf dec sbb bound mov xchg sti addr16 pop ja jno add xor push jg,pt cmp aas ss loopne lret mov add cwtl push add in les dec out lcall leave and stc or jg daa inc ror jg sub jge stos lods jg and xchg mov xor rol inc jg loopne icebp mov lret outsb test insl push jg jl movsl gs add push dec arpl hlt jg imul ud2 lea (bad) inc out jg push cmpsl adc or ret push xor add cmp test cmpsb mov in fcomp ja jmp rclb mov jg push pop ret pop aas mov data16 jg push mov or sub dec mov sahf ss bound sarl dec mov jg lds jmp or jmp bound lcall add daa jg mov insb aam push into jg pop fisttpll pop pop mov (bad) repz arpl stc scas adc inc sbb aaa cmp dec lret jg or popf push jg or mov out lds push xchg ss jmp sbb dec push mov lea xor lret movsl pop jg pop ds xchg mov and push jo lock push push cmp mov mov cmp add mov stos js sbb aas jno out fdiv (bad) in pop pop jnp jg pop bound in adc mov jbe repz fwait lds test push jmp xor jne sbb jg je cmpsl (bad) xchg aam jg xlat (bad) adc mov cmpsb sbb daa inc dec pop adc pop test jg into test out jno loope sti jbe xchg shrb sbb or add lods add int3 jg outsl loop not test mov out jg es inc cmpsb aas sti test sub scas cli cmp inc jg shrl lret (bad) (bad) jg cmc loope (bad) mov jae push outsl cld sbb cmp dec fmulp mov pop js inc (bad) dec jo dec cs mov insl inc lock and xchg fmull insb and in cwtl sub fs dec rcll fwait mov mov into push out sti push out cmp jae add stos cwtl hlt out sub pop jp rolb ljmp pop into dec push pop fnstcw pop sub nop mov cmpsb (bad) push daa xchg inc in ret jg and imul mov lea jg push ret sub and xchg imulb popa dec pop jg jp or ja sbb push push sti cs jg jnp xor mov cmp pop sbb mov sub cltd pop or or iret rclb jg push mov jg leave push jns dec inc dec rclb (bad) scas jg mov pop pop loop lret test xor clc fnstcw idivb imul and stos push dec sahf fcoms inc or xor addr16 jg or push stos es rolb mov int3 mov adc aas xchg imul lcall mov and xchg clc jo pop pop adc (bad) mov gs incb mov test xchg ret ret cld jg lcall jg fisttpl push jo repz cmp jbe (bad) loop jle stos rorl lret push mov or aas xchg (bad) cli sub outsl aas daa (bad) adc addr16 in out jns jb push pop fwait out jg loop and ss jg clc (bad) out insl push push (bad) jno sbb pop imul jg loope js cmp insl fdivs jne ja jmp fsub mov movsl rorl (bad) xor popa jg sbb repnz incl inc xlat aas cmp mov jns push outsb jle add inc fsubrp out add (bad) push inc xor xor adc int3 js inc jg push movsl in data16 (bad) jae mov mov add push pushl pop jg or addr16 mov fnstcw lahf ljmp lods lcall inc jb fldt dec or bound insl rcrb pop sbb lea test or jmp loope aas push xor jge in dec push cmp push leave dec sub sahf mov mov jp inc jbe jg xchg xor ds lea shlb mov jnp or cs repz or rorb jmp clc and or jno sbb mov je push clc pop movsb sub loop jg shll data16 jg add push or mov sbb or int loopne pop pop jg imul cmp pop jae mov testl fsub adc cmp inc insb jg mov push dec sbb dec rcl bnd jae and jg es inc cltd retw pop pop pop mov in xchg repz pop or dec jne std dec iret add sbb jg dec adc orl sub rorl mov dec loope (bad) xor cmc push pop insb popf and into jg es call jg mov push pop les cmp aaa dec sbb inc mov dec jnp mov push sbb gs lds jg scas stos out add lret insb cmp lcall test mov sub inc cld pop xchg cltd mov (bad) inc adc cmp out xchg mov imul xchg cmc jg push mov mov cmpsb int dec imulb icebp sti mov jbe dec (bad) adc inc mov dec pop mov sbb mov nop inc mov pushf xchg dec cwtl xlat mov jp push imul or dec ret loopne pop sbb fs ja test leave mov sarb das sub mov iret popf cmpsl adc insb (bad) inc imul push inc pop adc jae es pop adc sub pop xor inc inc push fnstsw mov (bad) sub mov setge push sbb stc adc xor xchg pop inc mov hlt dec xorps (bad) std (bad) jg jbe jmp mov jg pop outsb or inc inc sarl (bad) fisttpll adc sbb data16 dec imul xchg lgs xor lods andl mov fnstcw jg lahf or rorb mov into pop jmp mov jg cmp cmp data16 jg sub insl and sti js frstor cmpsb pop loopne pushf push aas lret and inc loopne jg decb push lds sahf rep adc and aam pop mov cmpl movsl jae imul shll imul (bad) jno fnsave dec and clc aad (bad) (bad) popf fcoml mov cs jg gs jae and fwait loop adc mov mov jg mov dec mov dec sub inc pop xor inc dec mov jg push ret scas xchg (bad) pop mov cmp adc jg mov cmpsb inc lock dec rcrl (bad) add jae (bad) lahf jo jg or push aas fstpt xorb lret inc aas (bad) dec pop xor jg or adc sbb int3 (bad) mov add cmp pop sbb (bad) cld jg ret std mov mov pop jmp lods xchg mov sahf pop adc push (bad) imulb sub jnp add (bad) outsb (bad) pop mov sub cmp push jl iret jg int test xchg test leave sbb jne mov scas (bad) mov push ss cmpsb jecxz pushf sbb repnz xlat cmpsl cmp lods dec jg fsubrs in jg sti jmp movsl xor idivb mov sub jmp sub jo,pn dec repnz xchg inc arpl cmpsb jg add mov mov push mov xor pushf sti jg ret add cmp adc lds scas cmp push jg pop or jg sbb lea or jg sti data16 jl shrl mov ret rclb std sbbb jg or xchg cmc sti mov sbb lcall data16 mov xchg bound hlt jg cld adc pop imul or test pop sub mov inc sarl mov xlat into inc movsb jg xchg pop inc mov in popf dec mov sub jg mov and mov fcomps icebp cmp (bad) movsl gs mov das inc int push cld (bad) mov xlat cli jae lahf hlt sbb mov sub lahf push jg fbstp mov inc push dec jb cltd fdivrp gs dec or (bad) dec scas mov and mov jb mov lods jmp cmp mov js pop test stos test mov cmp or aas bound inc pop cltd pop cmc or in xor hlt outsb aas and pop ds dec adc mov clc fistpl adc jle xor jg aad (bad) xchg jno loopne jg cld ss fnstcw cmp push int3 mov popf jg data16 jo cld xchg int add mov icebp jns cli jb sbb shl mov mov mov jp in mov jg and mov test mov es and int3 inc dec inc jp std sahf rcr inc inc or shl jns mov das jg pop and add addr16 xchg out pop mov xor pop lea xor inc adc push pop mov stos sahf jb fnstsw inc rcl lcall (bad) adc mov add lea mov jb pop cmp mov jg xor mov jg mov mov jg test push jmp sub cmp sub out int3 in push ss jg popa out (bad) data16 (bad) adc jg mov pop cmpsl xchg pop cli jg mov dec (bad) dec add fwait lock jmp test cmp sar jg in xlat cmp and lock jg fcom xor jg icebp xchg loope cmpsb pushf mov aas mov inc stc idivl (bad) insb push jnp repz pop pop mov add xor in movsb icebp out mov or push and and mov xor mov fdivrl out pop fmulp lods push dec xor jge dec fimull jg jne push bound cmpsb jg mov lcall mov mov cmp jo loopne fldt out mov cltd addr16 and pop jg cmp and jmp and inc pop jg push push in leave into inc sbb xor loopne subl fmuls sahf out shr out sbbl (bad) loop dec data16 and add in sbb inc cwtl sarb xor push fnstcw jg aaa jnp xor fild aam mov jg adc (bad) jne ljmp ja cmpsb xor pusha jg into rol sub pop loope jg fidivl add adc int3 adc in movsb (bad) (bad) in push pop jg stc stos jnp ljmp mov out (bad) leave pop out cmpl xor push mov cmc fcompl sahf pop das push and cmp pop cmc jg fnstcw add mov mov mov (bad) pop cmp pop arpl cmpsl lcall mov cld mov jno sbb pop mov push xor repz mov sbb cli mov fwait out dec pop push mov push pop jg xchg (bad) scas addb loop jg sbb in lods mov popa push dec push imul nop (bad) adc mov mov repz or loop imul mov xor pop jle mov addr16 jg sub sahf dec lcall sub mov mov popa aas inc bound rorb les sarl sahf addl sbb and daa test mov stc pop imul mov xchg lds (bad) jmp and in cmc movsl add jg movsb repnz and jg and cmp push jb fdiv sbb (bad) mov (bad) jg pop pusha lods daa ss jecxz mov (bad) cli xchg mov popa mov (bad) sbb inc push mov (bad) fisttp cmc jnp jae cmp imul test pop aas jecxz inc rorb xchg addr16 fnstsw stc mov into push mov in mov jg inc jne sub dec ljmp adc sub lods cld jmp ret adc shll mov mov jg xchg add int push jecxz pop aad fcompl add adc jg xor jle jg mov xchg sbb lods rcrl insl std xor mov pop xchg adc jbe bound nop pop aad cmp cmp mov jae xchg jg into arpl (bad) in mov xchg in dec jns jg mov and jg lret pop push insl or push sbb lock pop fidivrl jp cmp std sti jecxz pop mov jg push jg or aas in fisttpll imul inc addr16 push mov test ret shlb xor scas inc mov test gs sub lret je or loopne (bad) cmc pop xor sbb fwait stos pusha jg popf and je sarl jl negl jg ss (bad) stos dec mov inc into fiaddl jg addr16 imul xchg mov xor sbb cltd lock pop push cmc add xor sahf push (bad) jmp adc mov inc (bad) sub push dec dec jg pop stos sub repz jg xchg gs push mov pop test inc fwait pop jg into pop fstp jb xchg sti out test xor (bad) mov mov js arpl jg jns fisubl push ret fnsave jnp cli mov jmp dec mov pop addr16 cli fnstsw jle inc mov lock pop lret in mov jns mov or pop test ret jbe cli pop or mov divl stc nop imul out sbb inc xchg mov jne enter ljmp pop dec insl xor or std cwtl lods stos mov cmpsb or push cmp mov mov popf mov lods popl and and dec (bad) repz iret aam insb das pop aas fisubr int add popa pushf pop add inc jae add jbe test fsubrs aas or sbb inc pop cmpsb or inc mov jg jns idivl stos jg rcrb loope add sahf mov or int3 xchg push sub cmp aaa test sarl or movl cmp lds fldenv lret push push jg jmp or xchg cmp test cltd ljmp sar inc mov xor xchg xlat jmp inc xchg dec imul ret iret mov scas adcl lock or mov inc mov jg fcoms cmpsb jg popa push fscale or add inc mov stos bound mov daa iret inc push push sti jg out mov outsb scas xchg jg inc mov out xor lret lds xchg mov push enter insl push jg add mov push mov fcmovnbe dec mov sbb mov mov das pop mov insl cmp popa std sahf add test jg jno mov popa scas jg dec aad imul call jg sti xchg cmpb sahf push test mov sbb into nop dec (bad) add jnp cmp out jg data16 ja out shll (bad) into dec push (bad) mov sarl ss icebp sti arpl cmp and popf jg xchg mov (bad) dec inc (bad) call xor frstor and and lea or test mov in jg mov fcoml add jg mov loopne bound gs sub ss (bad) mov addr16 jg dec int add fwait lcall mov popa fisttpl push jg dec xchg pop scas jne into pop cmp out and enter fiaddl hlt dec cs arpl sub add (bad) nop test (bad) lods xor fsubl imul or test dec nop mov jg sbb sub jg jbe movsl ficompl mov insb xchg push and repz adc mov push movsb inc xchg loope lret xchg push clc ds jno repnz or xorl and ja sti jmp (bad) lahf add pop das cmc inc mov ret in cmp call lods mov mov mov cltd insb mov jg es mov cmp pop (bad) sub rol jg xor cs popa and jg imul push sbb lock or jg sub in (bad) int3 (bad) iret mov sbb pop sub mov scas xchg int3 popa push jnp jecxz inc cmpsb iret mov movsl jg sarl les (bad) or mov mov pusha jg cld mov adc addr16 sub mov mov into popf mov push push sub mov roll sub clc inc or pop stos xor fucomip dec int push fcompl lods mov pop mov cmp mov (bad) icebp dec mov adc xor mov jg ret xor aaa jle iret das in pop or jg stc cmp jg (bad) mov addr16 jae bound add jg push xchg cli jne push mov dec inc sti fs movq jp mov outsl cwtl jg lahf jno sbb lods sub test jg cmp (bad) mov lods cmp sub stos loopne mov xor js and push and das add ss mov push adc movsb push pop xor pop arpl mov pop nop xor jg add (bad) mov push cmp pop popa sbb jg mov test pop jp push ja or jb test xchg pusha mov cmp jmp ds subl jg lcall xchg mov and test ds pop cld add push outsl subl xchg pop dec adc sub push (bad) jg clc pop scas das data16 pop inc movsl cmp pop rclb push enter insb and sbb jg jb (bad) adc jno jg or dec jg sbb pop adc pushf imul adc fcomps outsl jg icebp imul (bad) xor sub jg and (bad) dec js dec or lea aas divb es imul jg aaa pushf out mov call inc iret test fildl mov cmp and sub stos call popf outsl jg push or and out jb clc mov sbb jg test sbb push repz mov dec jnp pop sbb push adcb mov dec jg,pt sbbl push aas leave icebp (bad) fimull inc jg (bad) dec (bad) or aas lea int3 inc pop xor xlat leave xchg ret sti jne sbb ja cli lcall inc repnz int3 jg aaa movsl stos dec lea push shr push pop std inc jg xchg int add js hlt sbb xor stos test shll or mov xchg popf gs ss and movsl mov jg xor (bad) lock jbe loopne aas mov push xor sub inc pop mov pop fdivrs in push sbb sub bound xor fstps test fcomps jb or dec (bad) divl icebp xor inc lret lret cmp push pop fildll mov aad lods dec jg or jp gs (bad) scas jg xlat arpl scas sbb aad xchg sar outsl setp push push (bad) icebp cld sub xchg or jns push repz xor jg clc addr16 mov xchg fldcw push pop bound inc add sti loope rcrl sub int pop push aas jmp mov loopne,pn (bad) fdivrs jg mov xchg ljmp pop jne sub jg adc test (bad) fs xor cmp jg imul mov adc fs xor (bad) rclb movq sub or divl dec mov arpl pusha cmp shrl fstpl mov mov gs ret pushf mov inc dec jb adc sub mov pop mov out pop call (bad) loope in cmp (bad) pop int3 lret and adc cmpsb scas pop or mov inc ret jae sarl or jg cmp inc push in cmp movsb pop and pop dec fldt inc mov dec pushf nop or insb jg sbb adc xchg fdivrs shrb adc mov popa jno dec test (bad) mov pushf inc mov idivl xchg sub pop or jg ret arpl mov fwait aad hlt lods leave jg xchg std mov jg sbb pop ja nop cltd (bad) fnstcw orps es imul push cmp xchg add jg aam cmp hlt insl aas popa fildll cmpsb ljmp mov push xor stos jg add out jg sub sahf mov mov add jg cmpsb push in out xchg stos jg rcll aaa mov and mov dec cmp pop xor in jg inc divl iret loop jg sbb add jg push add pop es pop jecxz sbb sbb mov test sbb inc lret inc out jo movsb jg or popa aas mov jmp pusha inc inc mov sti add xchg cwtl or lea mov xchg or pop scas loop int3 and (bad) pop xchg sub jg imul jg outsb push (bad) bound loop push push popa pop cmp jg outsl jg sbb or aad insb mov mov (bad) cmc inc push xchg sbb shll mov lahf pop jnp cli sub call sbb cs xchg sarl mov push pop cld jg lret pop push es mov aad push push or sub in or push jg idivb sbb push jge mov cmp mov es mov sbb sbb ss xor inc les jg ljmp dec cmpb mov test jmp ljmp dec cmpsb lods xchg mov sahf inc pop lahf call cmp in xchg cltd addr16 lret or sti imul lcall push inc push lret jg xchg aad (bad) mov and mov mov pop je add jns fldt xchg (bad) cmc pop jg repnz sub movsl aas clc sub sub xor addr16 lahf leave inc push ds xor loopne out test xchg (bad) xchg outsl mov addr16 lret mov jg mov test jg test mov repnz or jg jae lods cmpsl mov jg sub mov jg sar gs pop jle iret mov xchg int3 outsl pop std js cli dec aas or iret cs int3 test adc enter dec pop out push sahf pushf aas into jg subl insb bound cmpsb repnz lret jo jg in testb push jb sarl mov pop pop (bad) mov or pop js inc fs aas mov add inc mov sbb and jg mov fwait call adc lahf vpmaddwd pop cmp fnstsw push push clc add out fmuls push jg mov repz mov fcoms aas inc add test inc push cmc mov je,pn xor mov movsb hlt fstpl adc xchg out sti pop mov stc cmp push lahf fwait (bad) mov cld pop mov adc dec (bad) mov data16 jg or lea inc xor jae mov aas inc (bad) cmp out cltd or jg int cltd lock sti lds mov and mov adc enter icebp (bad) cmp sub fildl jle xchg ret dec jo jg gs lds mov push popa or lods mov cmpb xchg mov aas nop add mov push sti mov mov js pop pmuludq sub jg fucomi lods adc leave pop aas rcr xor das out mov jg std mov inc jg add les dec cs xchg aas call or mov pop inc sbb sbb cwtl movsb stc repz popf arpl jp ds xor fistl sbb cli jle inc test mov cmp pop pop int mov sbb fs arpl aam popa insb pop inc cmp jbe addl xor pushf es adc xor cmp mov sub scas push jg mov out jae pop outsb mov pop adcb mov (bad) pop repz jg mov push push xchg jg sub pusha test lds into and inc dec jecxz out mov inc lret push and scas and aas loop out sub xchg iret mov out inc in cmp pop or data16 or mov xor jg dec xchg jg int3 andb jno test push mov aas incl (bad) xor fwait push jno push pop idiv scas frstor jl jg (bad) jbe aas aaa ret sarb adc push and insl xor pop add cltd push jns inc mov fistpll inc pop dec and sbb cvttps2pi mov xor stos data16 jnp and jne imul xchg inc pop lock test xchg fildl jle sbb jbe mov ljmp mov jae mov mov ret je jp das mov mov pop outsl jae lds sti xlat cmp aad xchg int (bad) mov daa pop push pop pop push sahf sbb xchg fisttp jo ficom adc pop push jg jo mov int3 (bad) icebp jg lods loopne in inc loope mov popa cld xchg push xor stc ret subl pop cmp out (bad) jg js xor popa xchg mov push mov cmp or lret out mov cmc dec xchg jg pop and xchg lds xor ja jg pop mov stos testl and scas xor add call cmp aas (bad) xor mov push in jg cli lds jg or test push mov stos insb imul out jo (bad) ja sbb jg enter adc fistpll adc aaa pop jg xor je shrb out imul xchg mov std int jg in sbb xchg adc aas jg jmp jg je xchg add mov inc addr16 (bad) xor add scas ja push loop aas jg mov out push in jnp aad in mov mov jecxz sub mov dec (bad) enter repz push ja (bad) xlat add mov dec jl ret negl xor cli push arpl fwait daa lds pop jo pop sub sbb stos out ds into arpl lods xchg push rcrb aaa ret cli jg jl mov mov je dec out ja movsb gs js aas sub out inc mov jp push cmpsl xor or (bad) in push or mov or inc lret xchg dec sarl out pop xor sti cmp jnp mov mov outsl nop aas cmp (bad) stc sbb shl sbb bound pop outsl mov push movsb cli cwtl push lea out dec dec adc (bad) jg sbb sbb jg psllw stos (bad) mov sub cmp dec inc imul jnp lea sbb aad mov jg mov pop dec out xor ret insb mov mov pop fldl2e gs inc xor dec js fcomps ds jne gs and jg sbb iret nop push notl stc xchg jp dec pusha insb jg push mov xchg movsl loopne xor cli mov lods dec jns pushl loope int3 ja cld pop test hlt aas cmp insw addr16 out sahf xchg jae and xchg mov in mov aas lock sub sub jnp jg add (bad) in jg adc ds dec mov je pop jp mov mov dec arpl jne mov sub push ficompl outsl push cmp jg pop (bad) lret ds rolb popf cwtl iret cltd mov dec jle push mov inc out lods stc dec dec mov sbb addr16 cmp mov xchg pusha pop aas ret (bad) aas les adc inc inc inc sbb lods scas divl (bad) sti fsubl pop je test or fidivrl aad add arpl mov and out adc mov and jg repz mov push inc and or xchg add jg loope fs mov sarl dec dec lods or fcmovnb add xorl lods nop pop int3 adc mov inc jg shlb cltd sarb call mov dec xlat push and es pop dec push sbb inc dec jg in ljmp inc xor inc inc jg insl push mov mov fisubl bswap aam addl (bad) pop xlat inc jmp (bad) aas push xchg jle adc iret inc xor mov jg add int3 xor pusha rep loop les xor push pop mov mov jg jbe sub imul stos jg push mov mov pop or sub sub in mov jg fwait es int3 push and data16 test jg dec mov xor pop mov ret mov movsl jo scas aas push dec push inc lret cltd xlat jg fwait inc mov xor call je lcall ss call sarl xor pop es idivb and leave clc xor ret lret jl cltd jae jg addl test ja fld mov jg xor out and sub mov jecxz aaa jmp jg roll xchg push cmpsb xchg sahf inc arpl testb mov add cmc jno sbb and pop aas sbb movsl or push (bad) pop mov and js sbb jg push stos jecxz jg pop pop ds dec dec jg push loop mov repnz push push add mov xlat pmulhuw jg push cmp xchg inc push fwait lahf ret cmc mov cli cmpl sub or sub push pushf sahf iret mov (bad) jnp xchg imul test dec adc loopw jge pop aas xor pop adc aam add push jg sbb sub xor adc jg mov cld into in ret sub mov mov dec test fsts pop rcrb adc cmpsb lret jp dec rorl pop push mov mov xchg jg pop inc inc dec add stos popa fldenv push outsl std mull ss mov mov out mov and mov in cmpsb dec movsb push mov jo cwtl jg sub scas js xlat lahf stc aas idivb imul jg bnd test faddl jnp dec imul xchg add push push sbb jg test scas pop (bad) sub push xchg cld mov (bad) jg shrb sti or mov cmp mov xor dec pop mov mov cmp jg pop adc sarb aas scas mov dec addr16 arpl and loopne out jg pop pop hlt mov bound push incl dec std mov pushf lods dec sub sub mov pop movsb mov imul aaa lods push (bad) lock xor (bad) jg das and icebp jae shlb cmp push mov leave aas jne jmp outsb ret push mov nop inc jg push in int orl push jg pushf and scas in sub out xchg outsl idivb jl and js xchg add (bad) scas jg mov cmp pop fnstcw ja xchg outsb aam aaa fisubr mov jnp sahf out jg stos ret xchg stos cmpsl arpl jg sbb jg mov jp cmpsb jmp xor dec jg in pop (bad) dec aam bound fcoms fdivrl (bad) dec outsl jl scas add sub es push addr16 out add mov and jg fcomp jge or loop mul push jg push sub aaa xor pop xchg mov mov xor mov adc adc dec jno dec pop inc cltd push xor xchg pop (bad) clc jmp jp or add rorl ret push pop icebp pop inc cmc sbb test dec jg mov jg mov sbb sbb and jns push lcall lock aam daa push pop jg addr16 mov mov sbb int adc sub xchg xor jg mov push jmp mov test jne jg shrb jl jg,pt add aam jno lock and sbb pop cmp jg inc mov lret inc je pop jl int3 mov mov jle (bad) (bad) roll mov pop pop cmp pop sub sub roll push jg js scas push lret pop aam stc jg jmp pusha ljmp jmp cmc push ret popa cwtl lock fstpt push (bad) sbb add mov xor test imul scas jg jbe jo pop mov les jg pop jle mov ss add jno mov dec push and test dec sti push adc jmp cwtl fdivrs add xchg loop push es scas std xchg mov cmp and lock sahf imul fisubl push shrl mov push rorb fs jg test jmp out rcrl mov scas jg mov mov jns sahf dec nop imul mov jge cmpsl pop jg js mov popa mov mov imul xlat (bad) rcrb dec inc mov jg jno ds (bad) mov nop cwtl fadds jg adc add aas add lock cs (bad) pop xchg mov pop sti out sub addr16 xor push push fdivrl stc mov adc pop xor cs pop pop mov enter jg fcmovne sar sub add je dec ret jbe jg pop mov in repz jg nop jb,pn (bad) xchg jg adc mov dec add fcompl dec adc sbb jg fwait inc or push jg and mov jg stos sbb sbb lods (bad) mov std push and dec jg dec sub ljmp jp and pop mov dec loope and cmpsb gs jg add (bad) sbb jb (bad) jae into movsl aad (bad) xor mov out lret pop sti arpl sahf mov jg sbb pop push xchg mov sti mov std fnstenv jmp mov mov mov add or or push cmpsb loop aad pop sub fwait mov jg and mov imul and jne mov negl dec xor ja call dec imul push cmp cs outsl push mov in jg push mov call std leave pop lcall jg jge mov ror push mov lea jp popa jg cmpsb and cmp dec inc jg push add (bad) dec ljmp adc jg sub pop xchg mov sbb jg imul pop movq ja add (bad) iret adc mov stc sub inc cmp mov or sti pop dec add (bad) clc jg stos mov sub jnp arpl jg xchg cld push stos out mov mov movb loopne lods sti out adc call jg daa enter inc xor cmp data16 xor xor out push and jbe mov jo test leave in arpl aas add mov repnz push hlt dec jg or inc sub mov or jbe adc and (bad) popl cmp scas es inc leave mov outsl popf pop ror jg movsb push hlt out pop leave inc jg mov fwait add call mov xchg orl xchg das inc jge jg or in mov cmpsl fstps lods sti or or lret in sti dec pop push fist cmp inc jg rcll out cmp mov ss outsb test dec jg sub push sub int lret inc xchg mov (bad) and inc in sar aas cli add loop (bad) mov pop mov js and xor mov int clc xchg mov dec push cmpsl jp or cmp mov or mov addr16 dec dec jp mov xor fiaddl je lods imul imul adc jae test mov cmp jle incb jae mov sub push jg mov mov out fnstsw sub (bad) lods jg xchg aad insb fnstenv mov stos imul jne fiaddl dec pushf mov inc cmp popf out push and test sarb mov shr popl pop jg mov and aas imul inc cmp jg in push fidiv outsb rclb xchg insl jg jb mov sbb sub iret sbb mov scas and jg dec std in xor pop jg sbb scas andb jg addl jg xchg (bad) in xor jp jg loopne jo sub ja (bad) jb cmp rolb mov mov jbe push insb lcall jg les (bad) cmp jg lret ficomp bound cmp dec ljmp inc pop clc inc jg fsubrl sub and (bad) insb add fldl cmp mov jne jg push dec mov inc loope (bad) rolb repnz cld jns jno dec dec sub and out and dec jg cs sbb or jg push adc jg popa xor cmpsl adc cltd jl (bad) jae (bad) inc loope add cwtl test cmp pop outsb inc in stc sub jg in lock push call int3 (bad) jbe mov jg jle inc push jo es pavgw xorl and dec imul inc cmpsl test mov popa test inc mov dec xor repz ret sbb movl lcall mov dec pop popf leave ds pop mov roll sub orl push adc test addr16 push mov jle pop insb sbb jg test js inc and jg add int3 sbb xchg adc aad setp push jg push ficompl adc sarb mov and jg loop int dec decl les pushf aas (bad) fs adc (bad) lea leave jg inc in pop jl fnstsw mov mov push jne xchg inc mov mov in leave pop lods cli mov jns in pop xlat mov and es lods insl cwtl xor sub mov push ret pop xchg sarl ficompl scas mov data16 push xchg cmc inc nop fnstcw pop outsl test dec and aas not xchg lds insl pop std stc push mov fild cmpsb stos or cmc jg sub adc cmpsl dec das (bad) push dec (bad) cmp ja jle stos sub adc mov loopne lock fwait sbb addr16 xchg loopne aas stos xor in jg andl jg in adc addr16 scas inc adc fidivr push pop mov pop loopne jg add mov subl ja stos jg dec sub addr16 dec insb lds movsl mov mov push shlb loopne and jg push mov cmpl push gs jp test pop cmp lods mov push xchg sbb inc das sahf popf out lock xchg adc aas mov cmp push xchg imul inc test sbb lock or inc (bad) pop xor pop inc jg lds inc inc sti mov clc dec bound inc xchg jb jle imul mov xor lcall adc test pop inc shrl or cmp fistp movsb jg push pop and jg mov mov and lds cmp jno sbb adc xchg dec ficompl icebp pop lar cmc bnd cwtl dec mov xor stos gs jg jecxz cltd dec pop jno inc jbe adc xor inc xor jg and pop push mov jg add repz push mov (bad) mov inc mov fpatan pop push repnz repz fstpt movsb adc stc jg jmp push push and jg mov push mov stos test sub adc mov mov jns ret inc xchg sub test push or jg flds sti xchg jmp or jbe pop fld1 adc (bad) test push jg xor lds test xor add mov xor jg int3 cmp cwtl add out inc mov stos in inc (bad) repnz jg add jno xor pop cld sub jg ret sub mov and lcall adc js sub add jg pop and sub sbb add jne dec mov or dec aas pop fdivrl inc vmovdqu cmpsb sbb loop hlt jg xchg arpl adc xchg ds lea aas scas repz push pop popa inc (bad) jb ss out das push imul jp add (bad) fdivrs jg push adc (bad) icebp shlb idivb dec inc push or sbb in pop mov push push and adc xchg sub or lcall xlat test dec cs add rcrb mov je adc xor lods (bad) dec call jg sub sub insb pushf aas nop cmp and sbb cmpl out xchg and adc shr mov mov ret lret std (bad) insb push cmp xchg out mov test inc adc xchg jae cmp adc fsubrs xlat xor out pusha jg jg dec popa js or add (bad) arpl xchg add ljmp inc jne jg ret sub aaa push test mov lds insb repnz in dec push mov leave dec clc jg inc xor sbb jb repnz jg mov sub push sbb test movsb ljmp sub inc xor (bad) in aam into lcall push push cli sbb dec mov xlat mov cmpsb add push jg addb mov or mov xor adc push jg cmp (bad) stos sub imul cmp je call in mov xchg pop js pushw jg bswap leave aad jb aas (bad) (bad) sbb lock inc popf out jbe mov pop popa int (bad) cli mov or fwait xchg mov inc gs mov test sbb mov jb jg push lods jo out aas aam push push cmpsb pop repz mov inc and (bad) popf std and adc jp rorb and jg popa cvttps2pi icebp xchg adc sbb fcompl fstps fmulp ss repz aad inc stos imull inc jg lret push mov sub mov jnp cli ret xor (bad) xchg jg cmp stos or pusha sbb push test push push rolb cmp loopne fwait ds mov dec in mov inc das les cmp and rolb cmp sti ja leave inc ja pop pop sub pop xor dec data16 out nop adc and mov pop ja idivl jg add dec out cmp or dec int pop insl test cltd push nop cld sub mov mov std push jg (bad) or decl sub push out jg outsb xor sbb and mov test jne clc pushf xor jle cmp pop dec loop jg test js (bad) aam jg inc jbe lcall inc js sub pusha loopne xor push mov je or loope dec push mov aad sbbl xor adc jg flds stc mov test inc jg jns cmc enter aas arpl mov push mov repz hlt (bad) mov incl mov adc lock and and push jg add insl daa and aam jge mov jg push xchg mov addb ret push jg test dec call repz mov aad jnp mov cmp jg mov cs jg dec scas insb lea mov arpl lods mov lret push icebp sti stos call mov push repz mov cmp mov cld jg xchg loopne aad lods jl xchg xor push (bad) imul jg fcmovbe test mov arpl ds sbb and popa mov adc cmp hlt aas popa xchg jo and (bad) pushf int3 and jg repz hlt fmulp push cmp cmpsb add mov sbb test mov jg sahf pop inc adc dec jl push aas (bad) insl loopne adc pop fsts out imul scas cmp aaa jg xchg add addl lds dec dec jns,pt xor lret sti imul movsb fwait addr16 sbb push nop jg inc flds jg pop stos or xor js sbb jae,pt pop dec cmp jg push sti mov sbb dec les cmc fstpl aam jnp xchg inc int add dec imul in imul cmp shr dec inc nop arpl jg stos aam lret jp ss sbb xchg dec out and jne stos iret push mov shl fdivrl pop leave pop mov mov call roll mov out stc adc sub daa clc inc test jg adcl push xor addl in imul repnz xor dec or adcl les mov mov (bad) or jg pop add stos aas mov lods bound inc xor lret sub inc and push in jg imul mov mov out xor pop nop sub mov pop inc fild push int3 sub jmp cld lock jg or leave cmp test xchg sub jae mov mov (bad) outsl mov test jg nop or sbb jg and out or sarl jle je cld sahf jg fdiv repz jae jg divps decl pop jg xchg sarb in rcrb (bad) and mov mov into lret xlat mov mov mov adc jp adc pop pushf sbb jg cli pusha js test lods jp push (bad) (bad) aas fmuls mov daa outsl aam mov mov pop addl in lcall xor cmpsl push popa jnp lea jg dec scas insb xchg push pop sarl dec addr16 cld sarl cmp insb mov imul adc (bad) xor jne sarl fcom mulb lret inc bound into (bad) movsl jg les fs mov (bad) leave jg jmp lcall (bad) icebp mov jg push mov dec jg ja mov (bad) imul addr16 aaa mov (bad) xchg nop and add push (bad) adc int3 jg jl rcrl mov jmp dec adc cli sbb aas pop dec pop cmpsl mov cmp push jg push mov insl les cmp mov pmulhuw pop inc sahf mov pop and mov outsl push sahf jg sub int cs repz sbb lods add cmp jg subl adc xchg shrb hlt enter cwtl adcb jg jbe int3 mov inc cmp jae outsb mov and stos fiaddl into xor out ret aas (bad) fwait mov lock sub add jg pop pop push ss pop mov mov mov ljmp dec repnz jl mov leave add and js cmpsb push xor jg aad and jbe jg pop mov movsb (bad) adc aas xor jne aad mov push xchg in or and and popf rolb js and xchg andb int3 jg xlat jae pop mov xchg jg in push loop jg pop mov lret pusha aam lcall sub clc xchg fwait pop push cmp mov sti ds movsb jg or fildll mov lock dec movb inc jg aam pop pop or ss adc push jae sbb dec aas cmpsl lock mov test imulb push mov imul dec push xchg pop sub or (bad) popa ret mov push inc mov popf fcoml xor rcl adc add cmp push sbb ret jno rol jmp mov ret andl xchg dec daa and es and pop in sub xchg lods push andb negl sbb cmp pop push sarl mov sbb mov sbb xchg mov daa fwait inc mov inc add test push mov aad js xchg jg subl or (bad) and add repz jg inc pop cmp cwtl mov daa fisttpll jnp mov xchg repz or (bad) jae jp push mov ja and jae sarl lret mov mov out push or nop mov mov mov ret mov pop leave roll dec jg pop xchg call andl sub mov (bad) jg aaa bound jg rcll and cwtl or mov xchg aam mov fidivl pushf inc (bad) hlt inc pcmpeqd imul repz lret sarb std cmp ret fstpt push xor pop pop or js xchg rorl pop xchg jg popa mov loop dec in pop xchg and fcoml mov lahf (bad) in dec and push push inc inc (bad) iret jg or push push push mov jg cmp adc xchg push push jmp mov insl pusha sti test outsl stos bound iret push and out popl pop jg or pop pusha jg xchg rcr pop jg xor fs cli idiv inc and enter repnz sub jno sub pop and and jg adc rorb pop cli enter mov inc stos adc dec in dec sub and rorl adc mov pop lret loope jg inc lds dec jo jg adc or arpl lods aas pusha test push lds mov xor gs inc fs jg lret mov call or dec mov scas cltd outsb mov fcomps dec pushf test pop mov or push ret mov shrl imul repz jnp and (bad) xor mov jg sbb lods popf mov rorb inc js (bad) push movsl add add out or or loop cld or cmp cltd pop or cmpsb jg call and push cmp test jg dec pop test scas mov cld (bad) in lret int3 mov test vmread and hlt neg mov jg mov call nop and ss push pop movsl push jbe mov test ffree mov push sbb faddl xchg negb jle xor rcr pop idivb or dec jg dec lahf fs pop rorb test jg mov push cs push movsb inc mov xlat sahf sbb push pop (bad) mov and sub loopne aas xchg (bad) mov loop sub outsl das mov mov pop mov mov pop jg xchg sub sbb lods mov mov pop adc test lods aaa mov jg ja adc jg (bad) cld cmp bound lret and aaa movsl movsb aas inc pop pop pop inc aam inc (bad) sbb arpl int ret jg fcomps push sarb imul cs nop or and push fadd ja dec add test xor mov iret and stos sahf sti ss ja addr16 loope lea mov dec stos addr16 mov dec lret jg shrb jg (bad) xor pop in lods out xchg pop jp jg and xchg das leave sbb fucom incb mov jecxz mov dec mov arpl pop dec mov arpl movsb insl test out outsl xlat mov and aaa fs nop jg pop outsb mov jg push movlps mov (bad) not test push jle and sti sbb cmp jmp xor inc test push xor jge or dec outsb or les fwait leave cmp scas jg or lret (bad) pop (bad) je jno inc gs push jg sbb outsl fnstsw mov jge jg push adc lock sbb mov mov mov lods add cli popf loope std mov loopne (bad) lock and jg andl and push lcall lahf xchg or lret dec (bad) and (bad) mov negl add mov pop mov inc pop jns jl mov repnz mov frstor cmpb xor xchg jg roll jp lret ja jmp out mov (bad) jnp mov in sti insl fidivrl jp dec jg or pusha jno insb jo sub adc (bad) jg inc in pop lds cli add divb mov jecxz mov sbb nop push int3 and adc jge dec loopne push jg js push jbe mov xor insb insl inc push (bad) and js xor jg mov jg call add mov (bad) jg (bad) inc pop jg jae jo inc (bad) icebp jle xor dec sub pop mov mov xor sti subl pop dec push push cmp not aad loopne and mov xlat xor pop fimul jg and add jle push outsl mov (bad) sub jg xor push in outsb inc shrl data16 dec gs dec xchg lods aas shll ja daa mov or int3 push shlb cmp aaa push jg (bad) pushf push and (bad) ja pop add mov mov (bad) call mov pop pop dec imul ss jl pushf fistpll push push rol push sbb push clc out mov dec jae movl test pop jb mov (bad) stos mov mov pop addr16 hlt or or cli idivl jg stos enter jg aam out imul ret jg mov xlat fistpll insb and popa jg loop or cld dec sub enter mov push and lahf inc aad les cmpsb cmp adc mov popa xor mov and lea mov xor es jns outsb rorl xchg test and pop cltd push push icebp xchg cmpl ljmp add sub pop test dec jg pop xchg and sub popf jg jae imull repz aas pop cmp inc sar aas xchg clc stos cli push jbe jmp jne imul jg,pt push decb jg ljmp jg pop in inc loop adc ret push testl add mov aaa imul push jg cmp pop inc xchg xchg jg xchg and jg inc sub jb leave push mov cmp mov in push jg into jno insl cmc cmpsl inc jg cs movsb je rcrb adc rcl fs inc test movsl xchg inc stos mov nopl push push int xchg inc adc nop stos jg,pn shr push mov ja arpl in aam in add or iret pop imul out stc pop dec lret add xor cltd divl jg xchg (bad) sub (bad) jne fdivrs and jg mov (bad) pop mov push aas sbb (bad) fstl pop data16 inc add xor pop rclb mov dec dec mov in andb mov dec into addr16 dec sahf jg notb jae popa sbb inc (bad) xor lds cmp hlt scas ret push sbb mov xor add xchg cmpsl iret sbb mov push aas xchg inc bound (bad) jg xorl std mov aas out jae adc jg popa ja addr16 xchg jg jo (bad) mov enter mov dec scas jg fdivl jg jns push cld mov scas jg dec or das adc jg add sbb pusha cmp sarb pop or sub push pop mov mov or adc addr16 pusha jg (bad) loopne jno out out jg sbbl and xor daa inc mov js cmpsl iret outsl fstps jg jmp into fidivr push mov mov (bad) clc ja fs or mov icebp mov cwtl aam xchg push leave jg mov xor iret mov jle call xchg fnstsw popf or fsub scas jg or add out pop pop mov push cmc and and aad push (bad) ret mov push in jg pop mov scas jg push or add mov mov adc or roll xor push jge lret jno mov pop cmp loope bound cmc xor xchg mov adc les nop jns mov rolb loope int xor xchg lods add call add inc dec jns lods jg subl jg fs add and inc inc test xor jp fisttpl jg dec xchg repnz (bad) cmpsl xlat in sbb cmpsb (bad) aas sbb mov cmp ds or sbb mov jmp push inc pop jno mov js out inc negl sub jo mov inc stos xlat mov cmp insb shr jg arpl enter jg inc sbb jle xor nop fldt movsl into lds jg mov mov add jg int3 push xchg das test out mov jg mov push aaa jg dec mov je sarb pushf into xchg push jg pop inc (bad) outsb cmp cmp repnz popa xchg icebp mov lahf (bad) cli jo and jg (bad) jmp fildl jg,pn adc mov cmc or (bad) jg stc ljmp das adc loop push nop pusha xchg jbe sbb jg xchg pop mov aas and and push inc mov jg es repz popa pushf jg test sarl mov jg mov inc fdivrs xchg mov jg movsb jmp add dec dec inc cmpsb and jg sub push and lret rclb pusha sti add lock leave pop mov and mov sbb dec adc aas test lds xchg call lods loope repnz xor jnp pop xchg and adc xchg and loopne jg jae int decb and int3 xchg in mov add cmc sub push cmpsl jg inc pop mov xchg popa jg insb shr xorl jne sub mov mov test jp dec aaa pop mov or dec and sbb fisttpl in xchg add fidivr mov cmpsb cs repz jns sub vpaddq xchg cmpsl insb sahf jg adc pushf inc js (bad) jg mov (bad) mov rcrl sub push cwtl jge insl cli popl dec andl jg fmull jg mov fcmovbe repz jg mov movsb jg out cwtl mov or or add popa or jg out hlt aam cmp dec jbe dec sub idivl xor rcrl fldenv fisub ljmp (bad) movsl testl sbb js (bad) adc mov push aam adc jg jg xlat repnz jg dec or pop cltd arpl jg jge les frstor movsl pop fcomps mov jg pop repz nop sbb arpl sub cmp pop pop pop xor mov scas popf push fistp and fidiv adc stos add repz daa pop mov jg mov dec enter mov pusha out push xor mov fdivrs sbb stc mov push xchg addr16 test inc pusha jg xor data16 and jg bound xchg sub jg pop lret addr16 jg inc test pop pop lret (bad) loope mov ret and mov arpl in loopne (bad) sub nop mov xor adcb idivl pop sub jg nop jmp xchg mov ds xchg mov iret out jae jae into xchg push adc jg xor test mov call jp jns addr16 jno jle inc adc inc xchg jp outsl jg or (bad) mov notb jg pop mov (bad) mov xor lods outsb dec mov push jg,pt sub push or out loop inc jb sbb dec pop and notl cmp rcrb lret sub mov adc std xchg cmpsb mov jg test push mov sub pop inc out in cmp pop ljmp add imul call leave dec and dec mov pop jp push cmp ds cs shrb dec pop scas mov jg mov adc imul imul sbb arpl pop popa push mov mov mov ljmp mov pop jmp (bad) es cmpsb les outsl ret mov pop cwtl mov fs sbb jg mov jb mov insl dec push sbb mov lcall imul push sbb sbb mov (bad) mov pop jg cltd pop orl adc dec movsl mov dec out loopne xor mov lods adc dec adc mov sub das sbb push or ret jnp mov inc inc xchg jg in xor lret jae outsl stos pusha vmovdqu fiadd sub pushf sbbb aam es cmpsl xor dec aad mov jmp add mov stos int3 aas (bad) fdivrs push lods or xchg jg mov or outsl int3 (bad) dec pop jg bnd jl xor enter inc jge push pop inc js inc adc movlhps aam mov push dec outsl insb test push movsb jg and push fisub cmc clc cwtl mov mov jg jbe (bad) dec es jg sahf mov xor mov push sbb cmp jl into dec jbe fmuls cli divl cmp es jb aam xchg pop xor pop xor dec das mov fwait test lds or or cld enter jg mov lahf mov dec je shrl cmp outsl test mov push add mov lods xor addb cmp jne pop push sbb xlat js insb idivb inc jno in jmp cltd mov mov icebp mov js dec movsl call xor mov jg fldenv arpl movdqu mov out mov fiadd sbb cmp bsr ljmp adc sub jg mov cmpsb cwtl lcall jb pop mov sbb lret popa sbb xor push inc lahf or cwtl iret jg (bad) test in pop cld (bad) jg and icebp popl cmp stos push psrlw divl repnz xor cmp arpl sub xor pushl push jg insb xchg pusha out inc hlt fidivrl das mov test jg lahf ret fist loop cmp ljmp push loopne enter xor mov les call movsl shll arpl jg add cltd and cs jecxz xchg pop xor dec sub ljmp incb sbb cld cmp mov jbe sbb push lods es cmpsb sbb sub mov lods inc inc lahf iret jg movsl js shl aaa mov (bad) mov sub and es imul cmp movsl and push push sti call jns outsl push and mov jg in inc scas push jnp jg sbb mov jg pop sbb fs mov js pop (bad) nop inc cmc mov dec insb clc cmp iret pop jae jnp ret pop add push loope daa jns dec imul jg pop fs fldl adc mov mov jg push push cmp mov nop pop ret mov addr16 inc test shr mov imul inc pushf sub ficoml out clc xor jmp icebp cmp daa ss sub jle jg and or xor cmp xchg cmpsb aad inc and clc dec pusha ret mov insl xchg sahf jg and xchg or and in repnz (bad) mov enter pop and aas loop jg push mov ljmp mov jnp jg xchg (bad) into lods call xchg fwait add aam scas in jg arpl adc sbb mov pushf cmpsb (bad) (bad) leave fdivrl jo (bad) das push mov ss adc stc jge cmp pop fs mov fadds mov sub mov pop popa rolb and mov push jg repz pop outsb je jg sti xor popf jg jo mov test adc and aam jg xchg pop pop xlat jo jg dec fimull cltd jg dec rcrl jg inc enter inc repz cmp mov pop pop arpl std jle aam (bad) test loopne cmp mov push cmpl push adc mov add ret es out pop lret ret sub jg in out xor inc (bad) loope sbb push xor dec div aam loopne or subb das and call test jne mov cmp mov lcall or inc movsb jl inc and sar inc addl or aad adc xchg pop test mov mov mov push arpl sti mov xor clc jbe mov scas lods push pop mov int3 idivl sub or inc jmp cwtl fisub loop ss sub (bad) jbe pop dec adc inc xchg push and mov addr16 xchg in jle dec leave push stos jg sub lcall jg stos xorl jno jg shrb push frstor xchg xchg adc dec xchg lods adc imul sub pop and mov nop sti stos mov repnz jg inc xchg add jnp movsb push outsl lods dec mov test outsl xchg repnz jno stos mov sbb movsl and mov jg add pop ljmp and push (bad) mov jg outsb ds (bad) xor mov xor jmp movsb sahf (bad) cmc jg or (bad) jbe lcall (bad) mov push jns,pt movsb cltd stos dec lahf inc rcrl inc inc xchg fstp jg push out add inc jg cltd jbe jo das jl sub jge or xor int cld push cmp xchg out add mov mov aad inc (bad) sti xchg push mov adc std pop mov nop inc aas in mov daa jg cmp aam mov lahf imul inc inc jg mov jo and jg ficom cld jg mov mov mov movsb fistpl jg push jp sbb sbb adc dec adc mov test dec mov daa repnz (bad) adc and pop sbb sbb jg jmp or aad sti pop negl dec int cmp jg push jb and aas jmp cltd loopne push outsl push in sbbb (bad) stos mov insl jae cmp sahf out inc adc fs js jg scas push xchg lret mov scas mov test jg dec push inc fist movsl aas (bad) mov xchg dec test jg pushf ss cmp rolb lcall cmpsb lahf dec lods push test push std ds sub inc nop pop mov jle,pt push mov gs jle cli or push pop xchg dec pop idiv jg inc xchg sub mov push sbb push lret sbb inc sbb jg ret mov (bad) push scas outsb cli cld cwtl lahf jg pop mov pop sub and and and mov jg cmpb dec lret (bad) ss mov mov jg mov sbb sahf cmpl inc les or leave jg popf fwait xchg (bad) lret add jg pop pusha push pop mov loope into (bad) sarb pop xor push test (bad) addr16 stc mov jg jp mov je (bad) loopne mov adc test mov lahf outsb cli outsl xlat (bad) (bad) out add insl out jle add out dec sub in loope jg (bad) negl jle pop daa insb and jg mov sub imul fs mov mov (bad) jg push pop pop loop sahf xchg pop adc (bad) (bad) dec or jmp in pop cli test mov jg jae and mov in pop cmp cmp pop std sub or mov pop in jbe adc dec sahf fwait push mov xchg ljmp shll sbbl jle and mov adc addr16 xchg mov lds push stc mov inc mov scas xor pop xor fs mov pop cli imul ret push es mov push (bad) push dec xchg mov mov js xchg mov or fisubl push xchg jg in testl fisubr push popa mov ja daa adc and imul insl inc outsb aas (bad) mov aam adc imul loopne push mov xchg das inc sbb jg cmp dec pop mov xchg arpl idivb or gs push jbe or mov xor nop jg in bound pop rolb sub lret insl ret das sarl push pop inc std and jg jp mov aas push mov cwtl dec cmp fucomi lock or bound mov mov fdivr imul mov push pop sbb (bad) in sti mov mov test aas sbb fmull cld jg dec test mov dec (bad) mov pop (bad) dec sub lock outsl test sarl fisubl je faddl loopne jg pop les and cmp movsl push mov xchg jg data16 and aas jecxz cmp inc in and fisubrl mov aad jg std push cmpsb lock jno dec (bad) xchg mov into icebp pop sti outsl imul stos add adc imul loope andb addr16 es fdivr add jg push ds mov pop popa pushf fucomp pop stos es mov leave icebp in fcmovnbe ret mov mov pop xchg aam jg add jo jne rorb mov jg xor lea pop bound lock call sti add xor sahf mov loopne jg pop fbld mov fimul test in (bad) hlt add push sti mov scas or aas inc fimul jns mov shlb adc cli rorl lods popa outsl vpcmpgtw adc (bad) sti pop std jg xchg fisubr scas push lods adc jo andb pushf jae mov pop lods test or add sub inc test xchg xchg fcomi sahf mov sti push out (bad) jno jg in (bad) xor mov mov int3 icebp dec sub jmp imul call xlat fnsave loop lods push lret jg sarb xchg and xor into in mov cmp dec xlat cmp cmp add inc mov push mov test (bad) dec jl out jg loope adc and mov test inc into jg or push cli pcmpeqw addr16 push dec int3 lods jg data16 call jae inc mov inc fnsave and pop es int3 jg add mov pop mov nop shlb mov jl push add jg jnp mov xor negb dec loop jg (bad) sbb insb mov sub in jg jbe cltd xchg xchg jo jg sub (bad) movsl jmp inc pop push aas sbb xorl or jg repnz adc jbe aaa and out (bad) jg mov push cmp call mov daa inc sub dec push jge movsl sbb push jo int3 jg pop daa mov dec jnp add and divl fidivr insl call push sti xor and jmp sub pop jp xlat (bad) insb out jae fwait je cmp in clc sub and aaa mov in or mov aas daa inc cmc dec pop sub movsb jge xchg or popf aas jbe lret push jne inc push and ret data16 pop out pop inc sbbb fwait mov out inc (bad) sarl xlat (bad) jmp ds mov mov pop mov and in divl lods pop mov ret or jg mov in jg or fstp jg mov in add icebp (bad) fs loopne dec nop jg mov (bad) dec cmp jg call jg decb pop je push scas jg mov out sbb loopne into nop outsb pop xchg jg cmpsl mov lock rcll or cwtl lret jg push popa xor data16 aaa jg pop int push dec (bad) jo xor pop or mov mov incb push mov pop nop divl mov adc mov jg imul jg jb frstor ret insl add push jg loopne add test dec shlw cld inc scas xor pop mov dec lods dec in mov jb mov ljmp mov xor jg inc es mov mov movl jg in push mov scas aas sti sub stos mov out mov leave and iret sahf icebp push scas dec pop jg adc push xchg sar loop mov dec jae pop cli dec pop mov mov mov aas jg add loop lret adc xor add push mov ja imul pop inc and jbe jg cmp jo jne jns mov insb jg mov mov xchg iret sbb jno push jg add jg stos rolb jp cmp jbe push ret push mov pop jo xor sbb mov jg xor movsl jp xchg jg jae fs pop dec jg xor jp jg push dec gs mov ja in cli test iret cmc lret inc sahf cmp mov loope sarb pop pop lods pop cmp dec mov push (bad) fisubr inc or push cli push cmpsl jg or loop push jg int js add stos adc sub mov ret jo jl jg (bad) call adc mov sub mov in loop je fildll sbb mov pop xchg jg add adcb std mov mov in mov jg mov in jg xchg mov (bad) sub jg and xor gs imul lcall in mov jg pushf movsl sbb jg mov cli je rorl lock mov jg call add mov dec push pop xchg inc pop mov push pop jo ret jg pop das adcb jg test add in cmp jg adc mov xor inc jb addr16 jp jnp sbb or cmpsl mov shlb xor stos xor sbb jp imul (bad) push jno or sub lcall mov jnp aas xor or outsl jb cmp push (bad) jmp mov insb inc sbb stos pop stos dec cmp sbb pop scas jmp movb out mov outsl sti mov xor sub jo inc in jecxz fnstcw inc addr16 push mov and add jmp inc mov movsl add nop adc mov dec js adc gs divb jg (bad) fistl jg xchg sbb cmc mov dec inc and jnp cmp inc jns mov mov jae mov (bad) fdivrl jg orb mov pop das lods stos out push jo in fwait or aaa sub or pop loope mov loop jge adc push cwtl jg mov out (bad) mov lock mov leave mov jae adc data16 adc js (bad) test jmp mov repnz dec xlat mov sbb mov leave xor jg sub push lret mov dec imul pop push test adc adc or inc iret sub mov cmc jne xchg sbb xchg loope pop mov add jg imul cmc stc lea sub out jg xchg pop fld es aas pminub xor lods jae mov aas test inc jg das dec jecxz cltd and push stos jbe jmp aad in adc mov jns dec stc sarl jg sub fistp or out sbb ljmp jg test fstpt popl pop adc loopne jg sub sahf push popf xchg mov dec lods sbbl out in les jae and out pop jae sarl cmp dec push cld into pop out mov aas bound inc push js inc jmp test jae adc lret jg out daa outsb cmp ret jg cmp cmp mov cltd repz imul rclb mov in movsb cmp cmp mov adcl lods sti outsb jns imul or or and sbb adc mov aas jo push mov mov out push addr16 adc xor rcrb fistl ljmp jecxz jg hlt jmp cmp add les and test rcl loop jg les lret jno inc push xchg pop dec adc inc stos popa jg and pop cs mov call mov fcoms and push aam and cli test jg movsl sub sbb adc adc jg nop bound sub adc jg pop or dec mov (bad) jg cltd out aam iret es mov inc push lret imul lahf and (bad) outsl repz mov scas cmp sbb jg test xor rolb sub (bad) mov hlt or iret fistpll inc cmp test addr16 cmpsb jg mov (bad) jae aam orl jg lcall mov pop imul mov mov mov xchg repz (bad) dec jo call addr16 jg mov stc popf out fdivl push or repnz jecxz push or xchg fnstcw addr16 inc push add jg cmpsb mov cld insb xor jg stos imul dec in leave ljmp jo insl pop stos mov lock push jg sarb mov jg pusha sbb imul bound push in xchg jg mov int3 xor ja ret stc std jg bound mov mov popa xchg adc imul cmp mov jecxz xor into xlat (bad) and jg mov leave cmp or cmc adc idiv jg mov std stos xchg dec fdiv xchg mov (bad) jg mov xor dec jmp sub jg pop ficom aas scas sub aas sub outsl cwtl leave mov imul pop mov inc jae lcall jnp movsb test (bad) cli xchg pop add out sarb arpl jle fisub jg pop addr16 jg jns out lds jle mov cmp loopne dec out aas mov push mov push add nop fidivl cmc fldl clc push pop cmpsb fcmovnb jg fcoms jg addr16 aaa cmpsl jmp xchg stos adc lods cmp fldl push xchg in (bad) pop adc lds jg psadbw jg mov mov add adc adc mov aas andl add dec xchg insb les or icebp adcl jg imull xor pusha loop scas inc insb pop cmp mov adc fwait dec std add cld fiaddl cmp lods loopne out sub scas cwtl (bad) and cli fnstenv mov sarl sub in jg push ds aaa adc cltd roll sbb ljmp data16 (bad) pushf jg mov pop iret mov imull push mov xchg jg pop fwait movsb pop add (bad) cmp sub test pop cmp (bad) sarb or (bad) out pop sub mov test in or sbb call dec out cmp pop xchg xchg push adc int3 aam ljmp inc jne (bad) cld cmp pop outsl rcr das and sbb pop adc add incb orl jg mov and test (bad) push mov addr16 cmc xor inc out outsl popf test loopne xchg fisttpl pop and push jns pusha arpl (bad) jo mov push mov mov dec and repz out cwtl add mov jecxz stos das js jg aad popf push add jg mov popa mov push ss out sti push mov imul push push mov mov jne lea call loopne xor loope jg fildl fimull mov int3 call jg xor in push jp (bad) jg pop dec notl bound (bad) addr16 and xchg ds out push aaa xchg fistpll xor xorb pop in push gs dec push xchg inc out mov jg mov aad sub sub fdivrl adc (bad) jg sbb imul push cmp adc in xor roll dec pushw scas fnstcw or push add shrb scas jg int xchg aam sub jg imul sarb add jmp jl out addr16 repz xchg xchg mov loope arpl jg fnop and mov call dec rcrl (bad) mov fs push cmp adc jecxz rol jg dec cmc sbb inc cmp out add dec xor jge xchg push lds lcall das cltd xor push push xor mov iret fucomi jnp xor mov sarb outsb ds cmp aas mov lret jmp lret scas out xchg push jge mov and dec or sub fwait dec xor mov lods stc pop sarl (bad) sti (bad) into xchg outsl adc dec jmp dec outsb das push jg jmp test mov loop push inc cmp cmp jp fistpll or lret mov mov call dec out inc jg mov adc js outsb pop pop pushf pop adc sti push popf jo lods mov push adc inc pop jg pop outsb inc jmp aam hlt push (bad) cmp xor dec nop xor cmpb repz inc test pop jg adc push mov jae cmpsb and pop popa bnd les test repz or jbe cmp stos scas mov ljmp loopne cmpsl add cmp jg (bad) lods sbb cmc jg inc shr pop repz sti mov add mov push stc repz mov push inc sahf pop inc aad ret popl jg cmp sub test dec push int3 cmp pushw mov xor adc addr16 jg sar cmc into lcall xor les or jg and jg insl test mov push or jg in xlat dec (bad) jne std mov mov mov xor subl mov clc mov cli call lret cmp (bad) or mov es pop inc jns sbb lds flds adc lock mov les push fwait shr adc cmp outsb jg loopne xlat push insl mov iret nop inc loop jg sub xchg inc jg pop adc orl loop sub add in ds fcompl inc push mov ja pop adc or mov shrl test pushf orb lods mov mov int3 mov push push jg push pop dec jl fnstsw or dec add lock lret call cli imul stos fdivrs inc mov sub pop les xor mov in xchg jl jmp jge inc imul in fidiv xchg dec cmpsl aad loope sub enter mov (bad) mov jg mov ss cmc sbb jg stc aam inc push mov and repz mov addr16 insb mov and add pop mov inc inc aas js stos cltd lods (bad) xor pop xor mov and mov lret xor cmc dec mov jg imul test jbe outsl xchg jg cmpl cmp aas outsb stc je pop pop mov ds cmp and bound test jg stos ficomp mov lock jg push and adc clc jg mov lea jne pusha sbb cmpsl sub mov or arpl xchg mov sbb rcr xlat mov outsb lea mov pop or add imul movsl out enter push jle mov dec jg mov xchg adc lods add mov cmpsb jg aaa mov sub nop rcrb icebp in mov enter jae push jo or mov add hlt push mov cmp out adc fwait jg jmp stos aas jg stc rorl mov out popa pop inc bnd sbb rol lds test mov jg pop jecxz xchg aam push xlat lcall mov jmp inc jg in sbb aaa mov aas movsb pop pop decb dec mov jg push subl jno ja and cmp jg dec inc in mov cmp pop xor mov pop pop xlat or and imul mov mov outsl jg (bad) js incb and push fcompl cmp mov adcl push daa lret xchg cs xchg mov nop sub mov mov (bad) inc add adc test xlat cmp push mov mov arpl inc jg lock push idiv out mov inc dec dec pop sar push cmpsb push lcall or jg inc scas ss sbb shrb and jg out xlat cmp jg jmp test push int push add mov cmpsb jo fs and push movl xlat loopne mov jmp push (bad) jo icebp (bad) push and jg into jge in je fwait jg mov mov lret sarb dec adc dec hlt mov cmp sbbl ljmp sbb dec xchg mov jp pushf pop lods fcoml mov (bad) lds push sarb lret adc or or ja mov loop sbb mov jg jp sub and inc cmp movsb ja hlt fisub jmp pop jg mov xor mov call mov jg fmul sub jg fwait scas stos loope lret cmc jle add enter cwtl add push or out sbb add adc jmp mov pop mov loopne sarb aam sbb xlat jge fild sub sbbl (bad) cli jne jg (bad) or daa popf je sbb outsb mov inc test mov in call jmp jnp cmp adc dec dec ret dec push mov cmpsb aad pop dec addr16 mov out (bad) jo xchg jg mov repz loope mov mov inc rclb fstps dec je jg inc push rcrl pusha sarb adc mov and or dec jg out loop and jg jmp mov jne jp js or or jo lret mov jb cmp jg,pn cmp add lock pop scas mov and les clc fildll rcll addr16 adc aaa sub jmp (bad) adc adc jg adc sub dec ret fdivrl mov inc movsb in pop jb add jg push mov dec pop int jg loop or loope (bad) jle js lret jl inc cmp fiadd cld dec sarl jmp mov jbe data16 les fistpll sub sub nop jg test popa sarl and mov lock fdivrs jo dec cmpsl loope xlat jg cmc mov out mov push jl test (bad) out jo sbb repz mov cmp jg xchg or arpl jg add jo stos dec jle inc cld xor lea adc dec fsubrl mov push (bad) inc add adc cld and jbe jge add jg cs je mov xlat mov push lds (bad) dec sbb cltd aas or leave push aas mov mov pop push mov shlb sub mov cltd pop mov ljmp xchg inc push mov mov mov lahf sub call cs jg mov fcoml lahf xchg jg lds aas loope ljmp push mov dec jg xor testb jns jg mov cmp test pop aas jmp jbe sub mov movsb mov jae cmp fstpl xor add push jg mov mov jg jp xchg push add jg xor out pop cmp jg orb jg into pop arpl mov mov inc sbb cld frstor ret mov xor and dec jo mov pop int3 aas fisubrl int mov xor dec mov repz push idivb rorb cmp add dec push jg gs jmp pusha popl fs hlt stc sahf out pop pusha mov loop arpl jg pop jbe pop int3 dec aam jl int aaa cmp push out dec (bad) or insb mov popa inc add mov pop mov stc cltd inc sarl and sbb fcoml dec sub jnp or mov ja inc les adc mov es push push and xor lahf dec sub jle imulb aam push pop das inc ljmp cmp lock pop jae mov inc rcll aam ficom xchg sub add test into popf inc aam adc aas popa and les movsb neg push sub push mov addl jns xchg or dec jg (bad) int (bad) jb and inc aas ficomp stos inc fcomip jg (bad) int3 jmp inc dec jg sbb jb xor mov shrl pop mov xor pop add jg jns mov pop int jae or shrl jg jo ss stos add ret cli movsl (bad) jg add or sbb jg je xor pusha stos icebp adc jmp cmc cmpsb sahf add or dec xchg push add and jg push (bad) mov jg fnstenv and xor cli jg loop notl jg push jno out scas cmp adc fistpl sub mov jne cmpl mov sbb aas je inc add stos jne roll cmpsl into or fildl jg mov inc push jbe push jg gs or push jmp xor call repnz jae or insb jg popa outsl add jp mov xchg faddp jg enter outsl sbb mov sbb int jae movsl in jg mov sbb hlt jmp rcll jg test mov inc jbe mov jg movb popa loopne jo sbb mov fdivrl jg pop fiadd ret jg jle (bad) pop mov out or mov jae jg insl adc mov cld pop pop imul xor xchg insb test inc js int3 dec std movsl jg push lds test and jg fcomps jg push cmp mov roll push inc xorb inc mov insb push push jle sbb xor mov fs es mov inc push popf stos aad in jno dec sub sbb daa ret (bad) mov or outsl dec test or bnd dec ljmp and gs push cmp mov mov inc dec pop sahf test mov inc mov fisub inc sbb outsl push mov in jle lods and loope insl aas ja aad sub test mov dec lods mov shrb or xchg ss jg or sub arpl cmpsl inc adc mov mov jge frstor pop push jg sub inc pop in xchg jg test mov mov fs out aaa xchg test add pushf xchg (bad) cltd dec jg out dec mov aad sahf jg rolb push adc jg lock cmp imul sarl pop xchg imul aaa (bad) xchg sub lahf xor sbbb adc popa sbb dec and push pop or push sarl scas iret sti xchg cmp jg gs xor jg jl into enter mov push xor stos mov mov jl scas jg clc pop outsb test lcall dec fidivl loope,pt jb repz push nop pop cmc jg mov jmp push pop dec sbb cmpl and sub adc jns push push inc in push cmpsb jle mov movsl sarl (bad) clc sub test fsub in pop adcb and mov cmpsb das (bad) or sbb pop sti add or fmuls jmp inc aam out test aas add (bad) sub lock enter fdivl xor add lret mov push daa jbe rclb adc xchg xor lods inc jp push cmp jno dec lret fdivp add adc dec ljmp call or fldt jl jmp xchg sarb push mov outsl test adc or dec testl jp hlt fsubl mov repnz popf lcall loopne jg adc dec mov shl mov aam sub jmp data16 cmp or mulb jns lret fcmovbe cld mov jbe fsubrl xlat dec or das mov dec jg ljmp jg xchg gs pushf cmp inc mov stos push idivb jle mull cmp jg inc int3 outsl push nop jg cltd mov shll cmpl add subb lahf icebp xchg imul pop pusha push mov inc cld outsl ss cmp aad inc lods jg int3 ficoml (bad) rcl call xchg cwtl das cmp bound or aam xor (bad) jno xchg (bad) sub sti pusha fstpt mov fisttp add fs es stos xchg dec push testl fidivl mov mov and push dec cmc sarl (bad) push aam xor dec lock dec (bad) dec insb out or out mov (bad) cmpsb arpl scas mov outsb (bad) iret xchg cmc mov lds push sbb call sahf incb dec jle pop jne (bad) dec je lret push mov inc ja lcall jmp sbb push mov popf xchg jg repz inc jg cmp sti aas push adc fisttp pusha insb pop jg or pop mov sbb arpl jg pop insl jle push pop jecxz (bad) jp jnp adc loope ss mov scas (bad) repz dec jo int3 jg int call fisubl fnstsw dec cmc jae enter movsb sbb jg jb or inc test jg sti jl and rsqrtps mov pusha imul xchg sbb jg addr16 clc sahf fwait jg sbb (bad) icebp arpl jg inc jo sub xchg push jg out repnz jg pop cmc or xor out mov inc pop inc xchg pop out loope ds push cmp inc js test aaa jbe out rorb (bad) pop (bad) jnp push repz or jg (bad) sub adc les decl push scas mov cld mov leave mov mov out mov mov sti add pop aaa out flds inc ljmp pop data16 jo jg pcmpeqb adc or jg fstpl xor jb inc (bad) jp roll fnstcw lret mov (bad) (bad) push inc xchg jg int mov mov push std inc out jg,pn cmpsb xor adc cmc dec mov (bad) push mov sarl rolb or jle call dec and jg mov inc pop mov loopne inc dec xchg add and fidiv popf push fcompl (bad) cmp ja inc sub loop shrl mov jg sarb jmp ja ds sti add mov hlt bound adc js adc mov lret and fcoml inc lods sbb xor imul xor cmp mov jb inc lahf dec mov or icebp jbe scas lcall mov dec aas jae bound std popf mov adcl mov inc sarb sahf cmc sbb xchg mov mov sbb pop sahf daa jg stos fdivrl jg add movb pop jg jo out sbb fisttpll in mov gs fild clc jg stos int popa std in inc aas add (bad) mov sbb jge jg addr16 inc mov xor sbb fadds cmp jg,pn stos push dec push pop sub mov push arpl imul mov dec mov fwait leave inc jp (bad) mov dec ja push mov pop lret lods mov add pop sti xchg sar dec cmpsb dec jp pop jg in push xlat jbe data16 enter popa insl cld sbb lahf push insb std dec xchg call mov pop dec push cmp jle mov in inc jecxz lret sahf mov das flds into jg addb lcall aam mov mov cltd mov dec sub mov pop fistpl out cwtl stc in imul push mov int3 rorb jmp and mov mov mov pop pop xor jg popa lods inc es fidivr add fcmovne sbb imul pop lea ja (bad) or jg pushl lcall xchg ret insl ds aas hlt fstl inc outsb sarb cs in insb jo inc dec aam cltd mov les jg and mov (bad) cli push jg ss xchg stc pop jg jge add cmp jg add xor mov add xlat mov stc push rcl jg mov fdivrs and daa aas sar imul jmp inc inc loop jne out mov subl push cmp ret inc or mov jg adc add xor inc pop inc xlat scas rcl test ja cmp inc xchg imul (bad) jmp je mov jbe mov mov imul nop inc pop lods jge pusha out jg ret dec or pop mov xor cmp pop fnstcw dec pop lret flds dec mov lods pop inc pop jg scas add cmp jns test mov fwait and push jg xor mov pop sti cmp sahf dec fwait pop xchg (bad) cmc das pushf xchg mov jmp sub movsl repnz in les push jg or lds pop cmp adc dec aaa inc test sbb sub dec and mov push cli in mov jg into les dec add jnp lock jns cmp mov cmp and fldenv daa mov mov out lcall jg push xchg cltd xor xchg add xor pop push xchg pusha jbe test jmp dec sub add sbb jns lds (bad) cmc mov loop pop aas add fimul pop jg xchg add push fsubrl mov das sbb sahf push push pop into cmpsb add mov jg movsl sub gs mov mov into stos fnstsw hlt or addr16 mov mov xchg (bad) jno fistpll lds mov jl add das pop (bad) cmpsb jle mov jg mov ljmp jns dec cmp adc testl rolb mov popf js push les jg repz sbb dec push imul nop test add aad add insl les gs cmc jno pusha idiv mov xchg sub out or and aas xchg inc cli les pushf mov lods dec cmp ss adc pop xor xchg xor jae mov mov iret jb dec add out inc insb negb push mov pop daa ficompl sti mov cs dec mov mov pop push xchg sbb mov sbb call xchg mov sbb test aad xor mov insl inc mov pushf leave mov loope dec aas fisubl add popa xor push jo ljmp addl mov push dec xchg aad fnstcw xchg das lds and jg adc pop jmp push out (bad) or arpl jg ds in mov sarl scas fwait call add xor (bad) les inc jg scas rolb roll jno outsl or mov jg jno lea loope sarb aas loop xchg adc mov test or popa pop adc xchg (bad) xchg xor adc jae mov (bad) cmc mov ret pop pop (bad) scas shrd cmp cs pop inc jbe dec cltd repnz out fisubr je jg inc mov pusha push ret jno xchg jg cld adc out sub outsb ds call mov rcrl jecxz data16 jbe into add (bad) xlat jg xor add das ljmp stc mov jg enter mov adc popf popa inc add jg addl push int3 cmpsl mov jg pop and push jg pop inc lods (bad) mov popa cli or add int insb call scas push outsb aas jb sub xchg rorb lcall add inc fsubl inc and cmpsb inc (bad) mov mov mov or (bad) push or jnp jg pop std xor xor mov iret cmp dec pop dec xor sti test inc and and mov sub pop or mov xor fdivl inc lretw adc mov sub aaa (bad) jg nop jo xlat add mov xor adc aas jle out addl sar out jg fwait int push gs adc sub push dec popf xchg (bad) (bad) mov enter jmp mov scas mov mov mov fwait aaa mov pop sub adc jg mov mov lock sbb cmpsl or sti pop push out pop mov orl loope jg jle icebp mov or arpl inc jg fwait xor imul add sti mov ss cmp jg test cmovo mov mov and mov (bad) mov mov outsl es outsb mov fstpl jg or imulb enter lds push cmp add pop cmpsb pop jb xchg out mov mov push pop sbb in jg adc mov fbstp inc inc ljmp inc cmc jae inc cmp or mov xchg dec movsl sti inc ret ds cli addr16 jnp insb outsl sti jg xchg pop sahf xchg cmpl xor inc loopne imul push jp sti dec repz in out imul fs pop (bad) jl jge sub cmpsb mov jg fimul sub ss repnz lret cld fdivs mov mov rcll icebp xchg sti or jae loopew test inc or sbb mov icebp xor insl mov jg mov mov or (bad) mov mov and in adc je or out cmp mov jge ljmp xor or pop cmp aas std xchg mov cld shrb inc add outsl and sbb mov push mov jg rcrb inc fwait mov notl jne adc in jg dec mov xor call scas jg mov mov nop xchg out push jnp sbb sbb stos repz insb xchg mov hlt add (bad) push repnz xlat push mov arpl jg dec or stos int3 icebp mov cmpsb inc xchg movsl and daa mov fdivrl in pushf inc mov (bad) aas jae out dec mov mov lcall xor xlat pop inc mov gs scas aam fbstp sahf sub imul bnd jl sbb add jne movsl fisub jg scas call mov out add push in mov andl xchg jmp fs aad js jg push mov aas xor mov inc rorb mov add mov xor jg and mov icebp into aas add inc xchg jg std fcmovnb mov mov jg inc movsb mov out roll sbb push fdivs dec cvtps2pd pop pop jg loopne popf icebp in add dec dec dec push ss lcall mov packssdw jg fucomi mov imul push lret and into adc loopne xor sbb jg sbb popf js and jg push jae jne inc pop mov pop mov fdivrl inc dec aad test mov dec (bad) dec pop sti ds mull fs mov in movsl aas jp mov sub sbb nop dec xor hlt imul lds mov out jg aas lahf adc popl jg mov push andb sti ja mov ret insb inc (bad) and mov mov xor add lods or mov ficom lahf push xchg xor mov xchg mov pop sub jg das out bound and jno sbb std sbb pop es clc shlb xor int3 mov add jg popf or jg adc pop push mov mov pop cltd sub and mov or scas mov pop push pop xor iret sub jg das in outsl xchg or xchg pop xchg inc push (bad) out lods jg jge ss xor pop jg jl jns cmpsl sub jg or outsb addl or push jg cmp cmp cmpsb adc mov out fmuls sub hlt test fs jg inc js inc push call fsts sar lea shl pop enter mov push movsb add push pop push aam rorb shrl mov jno loop sbb push mov mov push xchg orl sbb mov pop in and jg mov pop push mov dec push andb (bad) aam (bad) lods mov jg push xor int3 jg xchg pusha sbb ds cmpsb insl jg push in xchg adc xor cld push mov mov pop arpl jp and inc jg cld fcompl and jg fistpll insl jg inc pop or jg push xor mov pusha cwtl cmp dec dec cmp jmp inc inc aas push out pushf cmpxchg mov movsb sbb into mov fwait lahf push jg js (bad) or cwtl lds imull mov (bad) lods jg mov lea cmp push inc push lahf sti imul mov jns iret ds cmp or lds incb int3 and pop xchg dec sbb or fcomps clc cli jg cmp jg xchg cmp sub push fstps stos adc aas add fistl bound cld inc stc jnp lret jg mov jg rorl (bad) jg mov nop adc jae mov movsb gs in or xor movsb sub addr16 arpl mov lock dec (bad) sti inc loope shrb and outsl mov mov jae inc jg pop lock in jnp mov movsb ret sti sti pop rcl outsl push aad stc jg (bad) je mov repnz jg cmp mov push xor shrl scas jg into arpl mov cmp rcrl insb cmp sarl add push jg fistpl jg xor negl int sbb aas outsb bound movsl inc inc or xchg aad aas cmpsl dec fistl jne dec hlt adc pop adc add jle jg test lock mov jmp ja daa push jg gs repnz push pop xchg int xchg in sub jge inc pop push push fwait jg lds sarl jle pop dec mov hlt or xor push jge icebp cmp inc (bad) jns push dec fsubp inc pop outsl pop aas test shlb popa cmpsl jae add push and jg cli int3 mov xor test and sbb inc mov xor lret jg std arpl jg and pusha jae xchg jne sub fwait pop mov xor les dec mov jl mov pcmpgtb daa add (bad) fbstp ljmp cmp mov sub imul fmuls mov rorl pop adc sarb dec jp cmp aas cwtl sbb mov pop adc sub test push sbb in loopne loope jae dec cmp in lea aas pop or test and inc push jg add jne mov jg stos or jg imul inc dec iret (bad) push inc fldcw cmp jg mov gs or in adc out mov push int3 push dec xor jg mov cmpsb jg xor out sub inc cmp push outsl sbbl pop enter mov outsl jmp aas out (bad) sar hlt pop sub in mov aas mov popf test cs jg mov sbb push test scas push popf or in or jg popa jle inc aaa insb jp js (bad) decl lcall push xchg fwait jg iret adc ss jg cld xchg adc out int (bad) nop icebp std (bad) sub mov into dec ds jg inc rcrb xchg rcrl inc hlt jg stos sahf insb xor inc shrb cmpsl aas ficoml mov gs fbld jg adc and jo jg pusha ret push cmp jp push adc fwait xchg xchg (bad) scas jg jo xor jg mov xlat pop out jmp aaa (bad) stos jg and inc stos add lea mov (bad) not jg test jb call add jg mov mov mov sub sbb pusha ss adc jg pop insb add int and xor pop outsl daa leave aam aas fistpl lahf in jecxz inc push cmpl add orb lret (bad) lcall out enter ja aad jns fsubs or repnz lds pop cmp js mov add inc push aad xchg mov xchg mov push push xor dec fisubr jg jo cmp hlt pushf mov push adc or incb addr16 sarb test jg lahf cltd sub jns jg xchg mov ja mov pop nop and (bad) and jecxz fldt sti ljmp sbb jmp dec movb xor bound mov pop dec xchg jg mov out or sti test arpl ljmp cmp in add mov (bad) int repnz jg mov ret xlat loop out bound addr16 and mov push repz mov inc faddp pushl jg jb inc int3 (bad) and clc je mov scas fnstsw adc mov lahf scas mov xor (bad) mov out mov jp pop movsl lods cmpsb dec test jg in mov sti jnp test mov inc sarb fwait scas mov out mov pop fsts inc jg hlt pop mov jg aad adc (bad) push mov push ror dec (bad) dec mov in pop add jp xor mov jg push fidiv jmp popf adc jg loop adc fsts fnstsw or or pop (bad) bound inc sti pop cmp into fdivp dec lahf dec pop lods adc sub pop gs roll mov cmp stos jg mov or push jl lods sbb jge int jno js cmpsl out adc scas ljmp add gs jg sub (bad) mov ret jg fs jle pop enter push sbb notl dec out in pushf jg pop test movsl and jg dec mul aad stc in arpl bound jnp test fisub mov dec or mov fcmovnb (bad) mov inc loop jne neg jge jg mov and jg js pop into sahf es push leave repz arpl jg push or pop call int mov sbb inc jbe mov sub mov push cmp jae test (bad) loopne in scas lock cmp jbe out jl adc insb or jnp out jmp int3 lret pop pop or mov dec xchg fs xchg push fcom inc mov loop cmp jg int3 mov push cmpsl mov test popa lea outsl in xor inc in addl xchg xchg inc ss pop dec enter mov mov cmp cltd mov sti cmpl xchg fs add ds idivl mov sub cmp cmp outsl dec push cmp mov std test xchg inc inc (bad) or dec pop jne push adc jg pop (bad) out cmp and fcomip ret outsb icebp mov test or sarb arpl or sbb or enter jbe clc jae sub jg or imul outsl pop ret lret jg sub or subl cmp lcall add lds movsl or push int add mov lock lds lcall dec cmp jg push movb lock inc lods inc push push jg pusha mov sbb ss and gs mov cmp push jbe loopne pop das xor in dec jg cli ud2 inc (bad) or mov call lcall mov cmp xchg pop pusha mov sbb inc or imul js test iret nop jg test sti jg movsl icebp int stos cmp jmp sub jg and mov es cmpsl mov imul sbb jg jne stc mov (bad) jg cld push lds dec arpl daa jecxz sbb adc xor (bad) into scas push test lods or scas out orl and imul pop jg iret sti aaa mov lahf insl insl jbe jg adc push popa cs aad xor movsl push loope cmp xorl (bad) jae sti (bad) sarb jb loop mov (bad) into shrl jg test mov jg push mov pop (bad) and dec cmpsb jo aas xchg dec mov push ja jg scas sub jg or add cld mov jg insl push jmp inc jns jg lahf lds mov inc cmp das adc xchg adc bound shrl mov movsl (bad) cmc pushl std xchg (bad) loopne (bad) leave arpl cmp jae fistpll mov movsb inc into adc (bad) push xchg adc cld mov jg ret or iret and sub (bad) inc pop dec dec sahf jg cmp pop in or add repnz hlt js out popa outsl add dec test push jg int and aas scas mov adc movsl popf cld dec outsl mov and imul (bad) cmp sbb das jnp sub xor insb repz sbb (bad) push dec push pop lods cmpb xor lret cmc xchg xchg and jbe les (bad) dec mov xchg jg mov lea popa mov mov test cmc (bad) clc fistpll sub les mov jg test mov push sbb jno inc jg mov jmp repz loope sbb jg inc into movsb mov pop fnstsw push and rclb cltd sub xchg push jne (bad) sbb inc mov pop fidivrl xchg push pop stc push mov test in gs mov pop mov pextrw and lods mov (bad) aas cmpsb addr16 je jg fwait out xchg sbb sti mov icebp push pop push push mov mov sbb out lods jg pusha std cli pop push jno mov outsl jb lods gs or inc cld sarl jp inc push ljmp pcmpeqw mov mov rcrl cmp push and inc dec cmpl stc lods hlt mov repz call or stc mov ret mov xchg daa jge (bad) sub jg add cltd xor mov fwait lahf lret loop jns es jmp inc mov (bad) jg loopne (bad) inc adc jmp clc lret jg jle and inc test sti fwait mov mov rclb sbb jg sub or xchg dec jl rcrl das cs jg cmp bnd xchg lret pop push mov aas fimull in int3 cmpsl popa movq mov mov dec aaa dec shll mov dec pop push insl push fidivr leave cmp stc xor push scas daa and mov push xor jg enter jo lds sbb inc xchg loopne out setnp mov sti jno dec cmp scas lds push dec xor lock mov sub mov jnp nop es outsb cli pushf rclb bound xchg cmp xchg xchg jb cmc pop pop mov pop add sbb scas int3 aad xchg mov jg enter inc jns mov outsl xchg dec add dec push (bad) dec daa bnd pop mov or lods fdiv cmp mov mov or aad inc pop iret jg inc adc cmpsb sbb mov rorl mov inc dec out cmp lods push loop jg xor jbe jg jae insl mov jns,pt imul (bad) xor jnp fs cs pop pop pop ds pop mov jg mov movsb aas dec mov lcall lods sbb cmp sub out adc push lcall xlat cmp cmpsl jg loop push fldenv mov dec lods sti das adc dec mov out and fsubs mov xchg jg pusha flds jg fwait loop mov out fs mov cs pop test aad rcrl cmp or jns xchg jg pop xor mov pop xchg jg shlb shr cmp movsl ja dec test push jne stos xlat cld push push fisubl jg dec inc js bt xor out pop frstpm(287 pop sub mov jg andb mov test cmp stos jg jae adc rclb add lock rcr mov add lods mov push jg clc jmp add daa sbb insl iret cmpsb jb stc rcrl ds call dec repz xlat or jle mov test mov xchg push mov aad das sbb stos fistp fmull inc aad dec push cmc xor add je inc pop fwait gs jg cmc or jg popa data16 out adc nop jg ss or cmp mov sbb mov pop or into fs dec out mov cli orb stos into dec jg or rorb lahf mov push js xor pop psubsb lahf pop mov lret jg jle cmp sub mov inc mov (bad) push (bad) jbe and mov xor jno inc pop mov xlat mov stc test and pop (bad) xchg fldl dec mov add sub mov mov nop or loopne lods movsb inc test push or cmpsb jg cmp xor inc push test iret cmp pop pop inc clc jb mov mov xor jne push jnp sub rcrb (bad) cmp jbe pop (bad) or sahf jecxz and jg pushf (bad) sub push pop sub negb scas lock pop je cmpsb ljmp jecxz push fs jg lds dec jg xchg inc cmpsl mov std lock jg cmp adc aas int3 mov mov xchg insb test xchg leave loope mov push mov adc or repz jo inc jg ret inc inc into aam jnp mov test mov popa outsl push adc jg sti xchg adcb sarl mov mov outsl or mov mov test and testb and cmp sbb mov push or jg imul rcll dec push push xor sti inc and mov xchg scas jle jg xor aas (bad) int mov mov xchg aas out add adc (bad) push cwtl cmp mov sahf popa pop dec xchg mov sbb les sub inc jl jg scas mov pop addr16 in aaa idivl rclb ret cltd mov popf xor insb sub dec js mov inc inc dec push in lret and (bad) daa outsb fxch jg mov cmpsb lret mov push repz imull popa ljmp movsb sbb gs push in mov adc cld mov mov push xor popf mov lea gs mov sbb cmp adc and mov outsl rorl imul stos push js int3 pop movsl das cltd dec pusha je dec clc bnd sub out inc ret jg push in pop pop xchg adc or pop and dec mov and xor inc jg jae cld (bad) fs or add sub jg dec mov loope bound in xchg ret out inc mov xor pop mov sub cltd into loope xchg jg cmp nop mov mov and outsl adc (bad) das and pop fsubr sti aam std sub inc push add mov sbb jg lret pop stos sahf pop jg inc test inc jg adc enter das mov bnd clc mov jl rcrl sbb test mov mov les inc xchg loop push ret or adc lock jg leave dec push mov adc bound jmp aad addl shr inc xor sub dec mov pop push push mov mov dec movsb inc mov into outsl cmp pusha sub mov aad mov imul dec dec add ds add xchg mov (bad) in (bad) jbe mov add or push push add popf jo xchg jg test sub cmp out jl cmp and cmp jg sbb pop mov inc (bad) jg inc and push jecxz jg push dec pop (bad) jg pusha mov stos out inc jb lods call xor mov jg (bad) popa lods dec iret pop jg pop xchg pop sub mov xchg add nop inc gs fmull out push dec push xchg and popf aas stos xor pop inc fsubl lods add inc dec jp jbe imul lahf mov push stc sbb or pusha into cmp dec jne ds out pop idivl cmp mov pushf dec in shll xchg stos das dec cli mov mov jg rcll mov mov lahf inc cmpl push mov leave in imul popa jg mov mov mov ja clc and fs jg push or xchg sbb mov sub mov lcall xchg jg pop sbb pushf (bad) std aas je movsl cmp inc out mov jg lock jg (bad) into or cmpsb jb cli sbb sbb push mov dec lcall sbb ror sbb repz or mov call outsl and movq xlat daa sbb outsb pushf je int3 dec ds mov jg add flds jg push sbb stos jg inc lock dec arpl fnstsw bound jg leave ljmp push out pop cmp (bad) jg lcall mov jg pop popa (bad) mov stc lods xor negl inc xchg dec adc jg test (bad) sub sti pop jg add loop adc repnz pop inc js and dec xorps mov fcmovb mov ds call insl jg sub lcall andb mov jg and and pop (bad) mov jmp mov sbb dec or mov data16 mov sbb jg mov adc js xor popf roll iret ret rcrb lahf rorl lds bound getsec inc (bad) mov ja or ret inc pop js,pn mov inc outsl pop mov inc mov jg jmp pop stc das jg (bad) cli mov sbb sahf jg dec repnz sub mov dec mov jbe jl adc jge (bad) add std mov pop push sub sbb lods jg adc jl icebp jg shl incb in into jae push push xor dec out and pop (bad) sarb sub pop fnstcw cltd (bad) scas push stc xchg xchg bound faddl ja adc and jg,pn (bad) dec dec cltd js and xchg jmp mov (bad) mov nop dec sbb mov or xor fadds insb xor dec testb lret cwtl or jge int3 (bad) out xchg popa pop out fs nop fnstsw sub adc jg adc ret (bad) jg mov rcll je add ret ret dec jg inc sub fisttpl or (bad) pop cltd xchg int3 jg je and jg cmpsl adc fisttpll push sbb dec jle cmc jno out (bad) aam sbb ja sub mov adc mov mov into fwait fs mov inc fildll sub or adc data16 mov scas jecxz imul insl push add xchg mov ret sub data16 ficompl push xor fcmovnu jbe jg repz (bad) dec js adc xor or jg into adc push and xchg dec sub (bad) lcall sbb popa adc cmp add int3 jg inc dec repnz xor xor pop nop (bad) jg or js sti adc push bound test jl sub (bad) xor push inc mov loopne jg adc push cltd in hlt jg fs es jnp mov jg leave sahf and movsb mov out scas mov repnz add xor notb std jns iret mov add mov pop add jmp sbb jg adc idivl or outsl scas xchg xor xchg jecxz ljmp mov movsl lods add in jg pop jp and fdivrl leave jg (bad) into bound aaa cmp cmp and push mov movsl lods cli arpl leave mov mov add jns rorb xchg imul push int jg,pn jmp pop orl cmp adc push inc jns xchg (bad) pop mov out sbb cmpsl aad dec push sbb pop jo lcall (bad) xor and jbe dec or xchg jg nop inc dec and test ss sub sub jg fs imul movsl mov inc mov jg push shrl inc adc aam aad fcomps pop dec hlt loopne jg into inc and rolb pop jg iret in popa mov xorl (bad) test les dec rcrl fwait jg mov jno arpl lahf vmovdqu xchg js dec sbb jo xor shrb jg pop leave xor cs jo jg in push jg fdivl jbe ss notb int3 xchg ds inc push pop sub jne mov or neg enter sub rclb fs push jle mov sbb fisub cmp aaa fidivrl mov jo aas (bad) mov movl rclb ja mov sub push hlt dec scas jg cltd add iret inc sbb stc dec xor mov mov cltd and lock pop pop stos fnop cmp mov sub jg (bad) out push imul dec or push outsl insb out jg sub mov bound ret jnp xor int sub or sti adc ja shlb ret and jg push mov lea cs push inc gs or xor push mov (bad) jae scas pavgw dec mov movsl jg aaa mov loope aam adc mov inc add ljmp insb jg (bad) lock shlb adc pop jg (bad) sbb popf jg jnp nop mov and (bad) fadds dec jbe pop insb jg (bad) in cmpsl sub mov adc addr16 lret mov bound mov jg or jge ds cmp adc inc movsl cli jg ret mov pushf js cmp xchg test in jg or cmc add (bad) pop iret pop jg mov into mov push xchg fs pop or jo loopne int3 pop mov cwtl jg fildl mov jge adc (bad) aas ljmp dec mov jg xor leave lds mov call xor pusha popa (bad) pop daa xor loop mov jo addb pop push outsl jle dec nop dec xlat mov jmp jg push dec (bad) or mov inc arpl add jg and in mov stos mov jns icebp subb testl mov jg add push fmul inc inc scas and jp hlt xlat loope jbe cmp inc outsl jnp aad jg aam dec and mov sbb int3 xor in push pushf jo in jns bound add xor mov add stos (bad) dec fwait mov mov cli jg jl mov movsl jns cwtl std pop and xor clc sub aas popa aas dec jmp fimull cld jg test fdivs fnstsw push mov stc jg aad clc in mov push xor jg addl mov jg pop js xor stos or (bad) push loopne data16 insb xorb pop xchg jg test cld dec aaa popa dec mov cmp mov jg xchg mov pop ja cwtl aas inc mov mov push ja fsubp sarl pusha les sub sbb inc clc fistpl cld jmp subl imul lahf jg add jne (bad) jg ret jns inc pop mov lock mov inc pop mulb pop adc scas int pop int3 pushf shlb dec addl (bad) cld test cmp xor inc mov xchg mov dec mov out nop stos pop sti sub mov dec cs pop pop jg cmp cwtl outsb (bad) stc mov sub dec outsl cmp mov test stos jnp addl fldcw mov dec into pop and mov mov in lds or pop ss lahf scas scas jp jg cmp xchg cmp jnp cmp mov mov mov lods sbb jae shlb jg inc (bad) pop dec arpl loope jg mov iret sarl adc push adc js aad cmp cmp adc nop push jg mov sahf xor aas xlat outsl (bad) mov or or xor data16 (bad) push int3 mov pop je (bad) repz gs jl jg sub xchg loopne pop and or pop xchg xor add adc out sub loope outsl push mov call in xchg aaa mov test push jl add push ret cmc mov scas lahf pop push out daa jg std lods insl repz jg scas pop jae fcoms imul dec adc inc pop lret clc dec adc pop mov je jg sub jg cmp pusha int3 sbb scas aas and stos ret xchg pop mov jnp and pop jbe sarl out jns cmp clc cmpsl (bad) ljmp ret add loop pop jg ds (bad) cmp in sahf push push ret (bad) sti mov into imul and bound sub movsl jg mov jmp mov pop lods mov ljmp pop mov pop xlat lods fadd add jae sbb stc dec ficom imul xor rclb les xchg jns das xor popf jg xchg jg fs in xchg mov cmp dec jns ds int (bad) jg or daa mov xor pop pop fsqrt outsl lods scas sub insb and jg arpl daa pop outsl mov xor cmp pop add add xchg add cmp jp test jg jnp cmp notb push mov mov jg arpl stos push jae jg nop jmp push jecxz jp sub jg jmp das pop mov shrb sbb lods std adc inc dec pop notl ja iret je fsts outsl rcrl pop jg (bad) pushf cmpsb push aas pop jo add addr16 ret aas and in cmpsl inc mov jg call pop xchg ror aas cmpsl insb test lret mov sahf lret sbb cmpsb bnd stos test mul jg pushf scas jle xchg aaa int mov cmp sub inc or fcomi and lret loopne pop in jo ja jg mov jne jg push sar adc xlat ss push pop cmp fcmove scas cmp jg adc mov gs in cmp cmp dec cvtpi2ps push add mov outsl outsl sub mov inc loopne out inc push sub in popf cmpl mov sub push dec add jbe cmp movsb scas cmp and pop gs cmp push sub imul (bad) mov scas bound arpl jae sub xchg jg dec xchg inc shr fidivrl mov push add mov rclb jmp adc icebp ret dec jg and shrb pushf outsl jo js mov adc jg,pt xchg adc lea call mov and jbe ja mov mov add jg hlt sti sub mov push or lret adc mov popa fdivrl mov sub test sbb jg xor jp cmp fldcw push jnp jg test lods dec out pusha scas jg cmpsb push mov jg lret xchg or test movsl js iret aad mov sarb mov jg xchg or mov jg aas xor jl ret dec xchg jg pop imul jbe mov mov push roll jg in and scas inc cmp insb or mov jge (bad) loopne nop push mov in jg lods fistp aas rorl dec dec (bad) jg and inc test jg ss mov add dec adc or dec push data16 int pop jns mov mov lret xchg and incb (bad) (bad) or stc aad aas (bad) mov pop in mov adc ret divb sub inc loop rclb sbb pop sar cwtl push imul xchg lods incb xor jbe push jo into mov inc mov pop ja subb dec pop outsl (bad) lret inc stos sti and sbb ss add jae cmp ja jl and sub dec xchg testb int3 cwtl push or popf jg out rcl out jg das cli cmc adc xchg movsb jg nop add lds pop jg leave out push jae and icebp test and jp sub xchg jg rcl out cmp or into loopne jg dec push (bad) xor push ret mov inc repz adc push push jg (bad) rorl inc mov adc add mov scas lods fcompl pop jae test ja xrelease jg and mov jg out xchg dec cmc push cmpb push jl idiv or mov and movsb gs inc add (bad) xlat mov repnz lock inc stos sub xchg das mov sbb sbb bound sahf push push dec loope repnz inc xorb scas std xor cmc mov jg (bad) fnstsw je addr16 inc jmp sarb push push ret add ret lahf sub pop mov jae test out push dec into adc out push in inc sbb popf jle cmpsl fdiv and push jnp movsl mov (bad) ss in cmp mov test cmc (bad) dec mov add int3 mov icebp mov and ficompl outsl mov jl les pop push push lcall cwtl aad movsb jno aaa push inc popa outsb ret repz push sahf push jg adc enter jg pop das push out fisttpl es ja ret pop iret push jg stos push and shlb jg adc ss mov sbb aas adc imul lcall outsb jnp test pop movsl into in cmc mov in mov dec cmp mov pop pop (bad) (bad) push ja test xlat jg jl pop push push jo jg mov jb or mov jle aad inc dec rol sbb (bad) pop and cmp jg in sbb push cmpsl inc out jg call das pop mov adc or jg (bad) sahf (bad) out jg jmp cltd dec aas std into jmp aam rorl insl jg fstp add clc aas mov sti mov shr les mov push rcrb push mov addl popa mov mov dec sbb sbb stos dec rcrl jg pop jbe inc scas jne insb lahf mov mov adc xor sbb stc icebp push jg mov fwait lret repz std fs push into inc sub inc fdivrl lock add inc sahf cmpsb aas fidivrl cmova pop jg (bad) sbb mov mov jo je push aas paddw xchg mov inc sahf cli jg mov lea cmpl jg push (bad) fmuls leave aam mov sti lret lahf popa (bad) andl jmp addr16 jg dec jp inc jecxz,pt cmp ret xor pop pop inc push dec jg mov jbe jg pop xchg pop mov mov mov xchg pop hlt (bad) and cwtl int3 pusha lahf add imul fsubl and lret push sub jg sbb jnp cmp scas clc adc (bad) cld xchg xorl imul jnp sub inc mov mov add ret bound jg (bad) hlt xchg daa enter add popf orl lea popa push sbb repnz jb inc (bad) xor xchg xor ljmp add mov lea cmp sarb cmc dec mov mov mov jp scas loope jg aad xchg imul je jg mov adc xchg xchg xor les cmp and or sarb insl flds std sub jg push mov mov mov je jnp lods mov pop cs fisttp jno and repz dec test pop mov insl adc jg enter or stos inc lock cmc xor jg (bad) fwait (bad) mov les rcrb jg mov xchg int3 push ficom mov push sti xlat imul clc mov pusha ss jne sbb cmpsb inc mov dec push inc jg in sbb pop sbb mov ds xchg aas fidivr cmp dec mov jg cli outsl int or out cltd shrl cmc mov xor jns inc leave dec (bad) sarb sbb cwtl push insb aas mov fcmovb push lods dec ret xchg mov jl dec or mov mov loop rorl mov in lahf pusha arpl mov lock inc push push adc in push pushf icebp jg fstpt movsl or jne (bad) sti scas test mov arpl xadd cmp out xchg dec out add inc loopne mov imul jg fidiv mov push jo lcall rcll jg inc cmp mov daa jb inc fldl pop adc aas jnp add stos movsb inc pop cmp and setbe call into cmpl (bad) mov jg xchg hlt pop imul lods jnp mov loopw stc mov mov and jg xor sbb das dec jg push jns (bad) fist movsb repz jg xchg cmp aas js ja jg insl pop shl (bad) mov xchg inc pop jns mov cmpsb scas andl dec lahf and xchg incb mov jg adc imul fs (bad) jb addr16 sub xchg gs idivl push in mov mov jg lcall cmp pop icebp xchg pushf bound cmp sub rorb sub jno mov aas jg (bad) mov sub xchg test cmp cmc int subl mov stc jnp fstpl leave xor aas xor aas mov daa enter sbb cmp sbbl adc repz jno jb add push cmp dec pusha popf fsubrl (bad) jbe hlt lock insb sbb dec outsl int out enter cmp jmp jg movb push jge inc dec and jg ja fisub scas repz hlt ja inc or inc bnd test push addr16 out scas jg sub and xchg add cld sub jg push insl pop lret mov ja mov push mov sbb insl and js jb xchg fnstsw mov rol jg cmpsl ja and gs sbb dec popa (bad) jg mov mov dec lods mov movsl shll ja push popf pusha stos push push int3 jg xchg fwait sbb xor dec jg clc (bad) cmp addr16 xor decb dec and js inc pop pop mov sbb mov mov xchg sahf push stc (bad) bound dec sub mov mov mov cmp and daa jg (bad) mov push jg cmp mov mov insl jae mov inc xor fs (bad) call push jg and jns jg lea ja jno push mov daa das inc xchg xlat repz fistpll clc repnz flds std les mov ret jg sarl into (bad) or les or (bad) jb lret jg mov or push sbb xor sub add in jg aam mov ljmp iret in stos cs mov xor hlt jg imul aad int3 jbe jg add jg dec divl fidiv jge sahf mov scas push mov test sub jg repnz sbb xchg mov jg inc dec adc jg jle in and nop inc jo xchg push into push adc pop mov or jg cmpsb ffree test lret idivl test mul adc lcall inc pop fdivs cmp cmpsl pop mov and scas jle sub repnz mov mov sbb cmp (bad) jns pop (bad) lods scas jg stos pushf sbb cli insl dec jb aad sbb and add es mov jg loopne adc inc js inc jle outsl mov jg in ja adc xor insb popa aam pushf jg mov out jg ja cmp test xor (bad) js in insb jg sbb test pop stos or xor add stos mov loop xchg out push faddl aaa xchg rcr rcl ss jg adc sbb out jg xor pop (bad) jnp mov or cmp imul ret in mov sub mov (bad) sbb adc inc dec push cld (bad) jmp popa inc mov outsb test xlat into and inc fmull xchg test jg inc (bad) mov divl mov icebp imul pop mov leave aaa jg shrl xor or mov gs jg fst imul cmp cmpsl mov hlt sub in test divl inc jg cli rclb adc jg les sub add or jg ficom fidivrl jbe leave (bad) or or inc js push mov cmc (bad) cmc jg pushf lahf xchg jnp lods not std inc cli popf add jg push sahf jne dec jg mov pop arpl dec fwait je jg or sbb inc (bad) mov fadds jmp movsl bound sub (bad) leave jg fildl inc lods mov pop xchg push popa jg outsl enter xor jg add mov sahf mov les out loope dec out leave mov cs lret or ss mov mov dec pop mov fnstcw jg gs jmp rcrl popa insl (bad) lcall ja and jecxz inc into les xor cmp cli xchg mov jge cmc lods and divl cwtl xor mov stc pop and pop (bad) mov cld cmp sbb jg (bad) int3 mov insb lods lea mov out jg in fwait (bad) pop popa inc (bad) mov or sbb (bad) push sub ljmp jg mov (bad) loopne out push popf adc push mov and mov sub (bad) mov pop sbb pop pushf jg mov dec aas jg and test cmpsl mov lock enter xor cli dec jecxz fstps scas pusha or (bad) cmpl cmp push mov les jp jmp mov test adc ljmp pop repnz outsb fimull aas cmpsl incb mov adc add clc cmpsb pop sub xchg mov xlat xchg out lds test jg outsb ss int fidivr in (bad) into mov push movl pop mov add dec scas xchg ror pop into aas xor mov inc cvtdq2ps push (bad) jg repz mov dec xchg sub hlt xor sbb xchg aad cmpsb in adc aam sub xchg test gs sub inc fwait arpl dec jg fdivl xor mov sub adc lods mov dec outsl push mov and pop cwtl (bad) mov and adc adc insb rorl imul lock xlat add cmp mov (bad) (bad) clc xor data16 mov mov xor jo jecxz or lods ja xchg loope pop xor adc cmp inc mov dec mov cwtl jae scas les bound int mov in xchg push lret mov jg lea xchg out fcompl mov jg popa sbb add xor dec orl mov and dec stos (bad) out jg mov out mov jno jnp idivl mov pop dec sub imul call mov push xchg add mov es cmp loop and jg mov mov stos mov xchg mov inc xor fidivr sbb cmp cmp xchg orl jg fwait push xor test ds mov mov pop or push xor or and (bad) jg mov repnz jg sbb sarl iret fistpll bound cmp daa inc iret in jnp dec add jl jg jb (bad) (bad) jg insl sbb loope mov jo pop mov stc jle jg,pt scas adc std daa adc mov mov pop mov mov xchg call imul mov (bad) mov xchg push or or (bad) jl sbb push (bad) aaa sarl jg ja cmp jle ret loopnew inc and xadd ss jg push neg (bad) push dec or cwtl pop pop add push mov (bad) mov sbb or das fs sub mov sti inc cmpsb push xchg outsl jae aaa pusha push repz adc (bad) aad sti sub mov pop inc cltd jg xor mov aaa inc pop jp fcompl jg aas push or inc pushf mov pop mov lret jne js jg stos movsl or jb mov push psraw js pop add (bad) lods mov xchg inc lret sarb xor pop in dec lds mov adc arpl or test outsl fidiv jg mov sub jg cld pop add or cmp (bad) and sub in add jb gs xor pop sbbb loope inc test xchg clc jg enter fucomp or xchg jae push nop sub outsb loopne aas cmp loop jg imul repz mov ret lcall lcall aam stos lods out or fs lds cltd fwait inc outsl jg js jnp inc lea cmp rorl sub mov pop sti ficom pop int jg lea xor aaa jp cld dec push add sarl cmc (bad) xlat jmp sub add sub push pop jo out mov mov xor and fs outsb fisubr sub inc mov jle ss jbe or (bad) and add (bad) pop call xchg jp sahf cltd test stc xor data16 add jg incl int jg lcall fisttp push push insb fs jg jnp fiaddl pop aaa mov jl jno sub daa dec lock ja pusha (bad) jg mov sahf fisub cmpsl jg sti ss push loop cwtl mov popa inc jg dec dec fyl2xp1 ret jg stos add stos int3 add cmp into cli addr16 aaa dec ret rcr jno jae outsl incb jne jg (bad) mov or fldl (bad) cltd rclb pop dec shrb sbb sub test enter lea jg leave or imul les push add jg or sbb cltd stc jg lret push loope fistpll arpl loop jb fidivrl (bad) jmp movb dec movsb adc leave in xor xchg jmp cmc cmp cmp jno inc (bad) jbe dec sarb sti fisubrl mov mov imul push (bad) jg inc (bad) cltd jle gs sti out push adc (bad) sub aam sub mov cmp in enter lea mov stos and jg out push leave (bad) out clc sub inc add jg dec ret in aaa xor (bad) mov orl addr16 pop out dec xchg clc scas or jg hlt sti nop fstps push add mov inc pop pop ja es sbb movsb out jmp mov (bad) mov or (bad) movsl fmuls jmp mov or jns pop (bad) push mov popa scas inc xlat push aad leave mov (bad) jne pop mov dec loop jg sbb movsl pop (bad) jg inc jge imul jg leave cmpsl stc sub imul lret in dec inc push sub or mov arpl orb pop aas sub rcr mov pop repz fsts pushf push inc xlat adc and aaa adc inc lret jg lods data16 ljmp inc dec add cmp jb aas daa mov pop sub or (bad) jmp adc inc xor inc nop jg mov popf fs ja add ret mov sub pop sbb jno or pop (bad) outsl jmp and out mov arpl mov in cmp pop mov das iret jl dec add je mov pop jge hlt jg popf sbb jg lcall jg loop xchg mov or sub fldenv mov and push and xor ficom cwtl push mov jo add out xchg xchg pop mov sti xchg ficompl out insl clc pop jg pusha cli cmpsl je mov scas adc arpl jg pop mov xor dec dec lock jg mov fildll stos test pop pop movl jg sbb cmp dec movl dec ja jl inc jg pop inc push adc dec jg incb movsb ja jbe mov inc jo cli inc cmpl popf fwait out movsl lret adc out lods jg mov or push push jg adcl sub jg popa cwtl mov lock out fwait mov lret imul fwait jg ret cmpsb incl lock push jns loop movb sbb (bad) dec jbe add cmpsl (bad) jg mov insl xchg ljmp jno jg xchg inc mov lds ret xor inc jg or add push cmp mov dec push enter jg sub mov dec subl aas jne loop xchg cmp mov ffreep push add test hlt stos push add jg test xor lock push jg jae (bad) and lods dec cmp push fnstsw test jg inc ret pop inc lods scas xchg std pop scas jmp cmp sti dec jnp or jge mov in xchg pop and mov call xor mov mov out (bad) stc jg xchg pop int3 inc in jge mov jno jg xor (bad) cld jns jg inc (bad) mov inc lret aas inc push rcrb mov jg test inc popf jg ret movsl push (bad) or push xchg lret or aas pusha mov add in test clc jno pop outsl loope jg arpl jb (bad) lret sbb js inc cmp xchg into arpl xor pusha out jg cli sahf (bad) or and jle cmp ret mov dec sti loope jg call cld mov and sarl in fidivl mov fistp cmpsb cmp cmp pop xchg xor insb cmpsb inc repz jbe (bad) mov inc cmp (bad) in pop fstl lret (bad) xor and dec and iret fbstp data16 imul xchg in insb cmpsl jnp jns sbb push inc mov jmp ja clc into stos mov mov jl jg jmp addr16 push adc ficom xor ret or scas movsb mov or pop stc adc inc mov popa mov lcall (bad) dec jl inc push pop arpl fidivrl adc ret jg je push ds mov aad jne fidivrl iret gs aas push jno jg or inc loop cmpsl inc (bad) jg fwait and and orl xchg add mov jmp movsb xchg (bad) lock mov pushf pop andb pop lods mov mov dec xchg imul icebp ret clc mov movsl ja aas jg (bad) mov int3 insb jmp push je mov adc cmpsb lea scas xor jg sub in jg xor sbb push test data16 mov mov shll push dec stos xor pushf hlt popa popf push ficomp aam adc pop sbb push pop out jecxz aas mov jmp inc mov rolb xchg mov sti hlt popf rorl push insl fsubs iret push push in jg mov jl arpl mov jg add std pop mov pop mov add mov xor dec xchg mov jg sbb shrb hlt (bad) cmc xor dec pop sbb out jecxz inc jl negl test push adc es loop or clc jg jge (bad) enter arpl gs jg insl pop mov mov sarb (bad) jge lods mov jg or fisub mov into sub pop dec mov sbb mov (bad) dec cwtl push loopne ja (bad) pop idivl (bad) std (bad) enter (bad) ljmp lods idiv das iret pop pushf inc jnp jg dec jl mull dec js lods pop lea aas fimul bound (bad) inc inc scas jg sbb cmpps adc lahf jg fsub or mov ror pop pop cmp jg dec (bad) jmp push lea inc movsl adc jmp jae xor lret adc in cwtl xor jg dec and movsl mov (bad) jg jp adc mov cmpsl mov addr16 jbe push aad jl and adc pop push pusha cltd pop dec jg test or stc jg cmpsb scas adc inc mov jg faddp mov loope aad pushf add loopne xor in pop lock mov jg pop sub in sbb sarb scas push cmpsb into cmp jg xchg sbb lods and stc fistp movsb jns mov popa scas sub pop (bad) repnz int3 mov ljmp mov ja into push add stc xor jns sarb pusha test dec mov jp sub repnz mov cmp out adc cmpsl jg jno or in sub aas sub pop xchg fmull mov fiaddl call jp dec adc jb and mov movsl jg jbe rclb loopne (bad) lock pop mov imul sbb cmp fisubl ja fistl jg or push or arpl (bad) ja xchg xchg daa cmc cmpsb std jb jne jne mov cmp loop fisttpl push inc out movsl pusha (bad) mov sti or and xchg cltd jg mov xchg sbb cmp push pop cmp mov (bad) popf pop ja addr16 pop je mov adc notl pop repz pop xbegin fs test jg ljmp jg xlat inc nop in cmp cmp jg lcall jg mull push push dec pop and lds mov aam pop lahf xor hlt nop jg dec xchg mov jg dec or adc jg outsb pop xchg and dec (bad) aad push sbb jg ror cltd sbb cmp mull mov jg xor jb mov lods mov jl inc or loope (bad) in mov push jg adc cmp inc xchg jg stc nop (bad) inc loope push push lret jg dec and fstpt orl lods imul pushf arpl xchg sub xor mov dec nop mov mov xchg sub jg sub loop xor inc icebp or xchg mov mov int xor push jmp icebp or (bad) dec jg xchg outsl and je push dec add jmp sahf jg test fnstsw jns mov test int3 push inc in push jg (bad) adc aaa sti or xchg adc addr16 xchg testl repz push xchg dec (bad) std jle ja mov push mov xor mov test aaa sbb repz mov xchg lret ljmp shlb movsb xor cmp movsl cmp push (bad) jg clc push mov (bad) mov and out dec ss aad mov lcall movsb xchg enter dec pop sbb scas mov scas mov cmp push push sub jg int and in call paddq icebp sub jg imul (bad) sub loop pop pop dec add dec jmp sti or add je imul sbb xor (bad) mov pop push mov test or mov adc (bad) leave repz sub cmp pop inc pop ret (bad) jle cld cwtl insl cltd pop add clc sub cmp movsb pop fsubr mov mov adc pop ret jg sub push pushf dec test repnz jge in jg lcall jg jmp sbb jge jg or sbb jp jg pop pop (bad) xchg and or mov cmp mov jle pop dec sub jmp dec out jg sub loopne insb fdivrl add out or dec or cmp popf sahf adc jge mov sbb adc (bad) (bad) jae add pop outsb popf cld cmpsb inc mov jg pusha mov adc (bad) jno jle pop fsubs jg test lahf lcall fs in jg mov out jg shlb pop das push stos out sub jg inc xchg ror pushf jp (bad) iret sarl add (bad) stos or dec (bad) sarl cmp cmp sbb jg stos dec mulb roll sbbl movsl mov mov mov test jo jbe jg cwtl ficompl dec cmc xor pop ljmp push stos or imul xchg fcoml and lds xchg adc outsb xchg ja mov testl cs je jg jnp sbbl out pop jg jmp dec cwtl jg push pop xor jg aad lods orb stc mov sub push sahf add jg data16 shl bound aas sarl fisttp lock or ja les bound xor mov and jnp inc dec lock inc nop in add jg test icebp sub cs pop test lret inc dec cmp jb insl and test ja adc mov and xor jg (bad) cs aas and outsl jg mov xchg ja sub push inc sbb andl bound bnd fcomps std jg mov stos (bad) cmc lods or sarl imul and adc cltd mov jg cwtl or mov js xchg mov jae jecxz push jg ret mov dec test pop mov and sub jge hlt fiadd jg or (bad) std cmp jg aam lock sbb fs mov pop add jg jnp std push rolb fisttpll xor (bad) fistpl cld adc in sub dec fwait mov cmp jg call lret arpl mov mov rol jg and (bad) jg adc adc mov rol rcr inc jg and dec jmp sbb xor xchg mov lret inc mov fbstp jae je imul jg outsb dec add int3 jg mov movsb jg,pn and fidiv es testb push jge jle adc xor imul inc int3 decl decb nop outsl in (bad) in insl clc push cmp outsl push js add mov cmp jno lds mov or mov jge xor sahf and leave jg jmp cwtl push pop jbe dec sub sub hlt xchg fstl mov pop dec stc imul jg mov jg ret pcmpgtd addr16 pop mov mov push jns add jg dec add daa sbb std in lods sub inc mov insl adc jg mov arpl sbb pusha dec mov jg cld pop sbb fwait test inc lret je out dec insb pop scas jg test movsl pop ret xchg out push sarl or in pusha inc into repz sarb jne arpl mov mov lds sti popf (bad) push mov gs lret jg mov arpl and inc aas mov xor inc jnp jg and mov jae les into jg imul ljmp pop mov dec or inc xor pop cmp inc lea inc push movsl sbb jecxz jg sub xchg js cmp loop jg mov xchg fist adc rclb (bad) fsubrs dec jg sbb jne jge or stos ja inc xor ljmp fiadd jnp jg jno push pushf mov lret mov dec push mov pop mov sub ljmp mov jnp inc lahf jg popf push out les das mov pushf inc adc mov sahf fimull arpl adc bound sbb inc jg aas shr inc test movl jbe fild imul leave adc test movsl add or add mov stc jg data16 and push mov sbb push jg test jmp push dec jg arpl pop inc pop divl aas dec loope sub dec insl jg or shrb push cwtl negl mov test nop fdivl inc mov jg daa test mov scas out addr16 push repnz jg mov inc es out or fsubl cmp mov sti fild cmp fnstenv test jg mov imul cltd jg mov mov push pop std scas inc jg dec push pop inc mov mov lods lcall (bad) add jns adc stos jl fwait imul add sti mov andb pusha add sub dec adc shrl fsubl arpl mov jo push (bad) shlb mov mov dec jp test pop jno in repnz xlat aas xchg mov push inc dec fnstsw or inc or jecxz jg sbb daa dec jg jno lods lcall fdivrl sti sub idivl aad adc mov cmp mov cmp inc jg mov and push and pop jge lea inc xor dec rcl test dec mov pop nop dec repz push push rorb lcall fwait sub dec movsl xor fcomps jno sub ljmp sbb lods add jb scas xchg mov mov dec or xor and or outsb imul sbb insb mov aas es sub mov dec dec adc jg push xor sub dec xchg jg scas inc in test cli jg in pop pop jmp adc loopne push aam mov jne outsl mov xchg cmp jg pop or jg mov std loopne adcl cmp mov inc jg out adc add and scas movq and adc (bad) jg pop sbb or pop jg inc je xchg mov jg push mov addr16 pop (bad) cltd cs sahf xchg jg in std xchg mov cmp loop gs sbbb jg mov je je fistpl ret or sbb pop andl inc call testl xchg lock sub stos lds daa in int3 inc adc jg test cli sbb push mov adc jg sub out cmp pop jg stos inc fdivl add jle or call aaa (bad) rolb jg (bad) and adc xor sbb lock cmpsl ffree or mov int dec mov loopne push jno pop jg in fstpt cmp sarb or cmpl cmp popf mov fstl (bad) mov in sbb ljmp movsb sub jg mov jmp sub cld mov stc inc mov jg xchg mov enter xchg aas mov rcl stos mov ja nop jg add test xchg jne mov inc imul mov cli inc dec or inc jg cltd lds add mov pop daa (bad) cmp adc mov mov pop pushf adc jno scas pop add loope scas inc in cmpl xchg lds push lret cmp mov inc jg test daa dec pop xchg jp les test mov iret sahf cmp lret jg ss in mov jg pop stos pusha cltd lods lds adc idivb ja stos outsl mov (bad) jno mov pop pop pop inc xor scas test bound aaa jne,pt jg iret inc cmp cltd and jg lcall shrb cmpsb (bad) jp jo push pop dec out inc ss mov mov mov jg cmpsb fsubrs pop loop jnp (bad) mov mov jg push dec push dec fsubrl repz jg sbb mov jns addr16 mov (bad) dec bound fwait je push (bad) mov cltd aad aas sbb xchg and push jg xchg scas enter dec mov pushf pop stos (bad) jns mov inc fs sahf adc jg fldcw pop jns xchg mov jecxz stos arpl push mov dec mov icebp jg mov and mov int3 cltd pop dec jmp call jns aad test mov dec jg mov adc mov test xor jge xor pop adc aaa inc jg cmc adc cmp sbb fidiv fnstenv jp pop (bad) mov sti les jg or outsl ss sub lret push cmpsb sub inc arpl jo stos jns jg inc xchg mov and jg popa or dec xor jg push and (bad) repz jg arpl xor lretw lds lods push dec mov insb dec jg mov test jg stos cmp mov add lret call pop (bad) jbe fimull cmp fstl scas cltd inc ret fstpt lahf loopne xchg cs jno mov enter jge jg in call jg push popf add jg dec in pushf push jg inc (bad) daa sbb (bad) aas js xchg sub stos cmp lods mov lret cmp decb or pop scas ret clc mov and mov push jg jo dec ret sbb jmp mov repz sub insb mov pushf out sbbb xchg xor jg pushf jp jo loope jo cli jg cmc repnz xchg xor aad dec sub and mov jle sub and or lods mov stos cmp nop mov inc sahf lock sbb ds iret mov fstpt cmpsl test popa gs cmc xlat scas jp and jo (bad) ficomp adc push jg stc in dec popa lea ss inc xchg in mov or cwtl insb sub mov jo and pop (bad) mov dec mov mov imul adc movsb inc out push fsub (bad) aaa cmp pop in dec or jbe jg fnstenv lods jg xchg les sub mov xchg out and popf xchg ret mov mov mov add (bad) lret scas dec jnp jbe idivb pop outsl call rorl sti push jg jno clc jle outsb lret jo or (bad) int3 ret pop mov jg sbb jg push and mov mov xchg dec sbb mov jg lret sbb push fwait xchg jge mov rcrl pop leavew les cmp push mov dec in bnd adc dec in icebp adc mov jbe mov lret inc movsb or sahf inc jae pop jg mov test jg xor push in aaa faddp outsl bound out add push pusha jae push jge daa sbb imul cld (bad) push fwait mov jg ss inc cmpsb adc jmp jno fwait xor and aas sub aas and sbb pop pop jno push jg nop mov int or mov mov mov leave arpl call or rcll jg,pn mov cmp or popa jg roll sti daa mov das dec stos jb inc jns jg sarl repz nop out outsb mov imul test mov inc pop add and sbb lods pusha scas leave mov jb push testl dec adc loope cld (bad) jg push (bad) sbb or sarl jo pushf lret rorb fsubrl or aas xchg adc mov aaa or jg insb cmpsb lahf jp jle inc scas jg mov inc inc lods jmp or ds cmp hlt pop push pushf orl addr16 and ss add (bad) imul and jg cmp adc mov mov mov and outsl orb out push xchg mov aas fs lock mov stc mov pop les cmp jg fxtract cld and sarb or out inc push mov cmc imul or orl pop pusha jg arpl xchg sub aas cmp addr16 mov fs (bad) fnstsw mov dec mov fsubrl mov adc int mov ret jnp das push inc sub nop lds into out mov aas lea jo sbb xor sbb pop inc fxch and sarb out sub xchg dec inc inc xor mov mov leave pop cmp jg push inc mov jg pop repz loop gs adc push or fisttp fiadd aad pop dec adc sbb fmul jg lods int outsb push mov orb pop insb jg cmp adc adc cmpsl jg (bad) fsub (bad) ja ret aas jge push or xchg repnz inc jg and inc jb sarb pop pop lahf jl sbb jg mov xor dec push jnp daa cmp jg push or mov cmc mov es repz scas aam dec les in mov (bad) sub or jmp adc jg xchg (bad) mov out test push int3 adc call icebp ss scas mov mov cmpb and sub icebp cwtl out fld xlat jg (bad) xchg cmp jg lds cmp out add pop loop mov mov jg sub xchg xor jg mov fwait sbb nop cmpsl daa mov jg cmp sbb jne imul and dec mov (bad) jecxz inc xor pop lds xchg incl aad mov and fnstsw sbb (bad) idivl and add jecxz add dec xchg sahf pop jp cmp jle xor in rorb pop cli push or pop push jne push mov out pusha and iret out push cmpb mov scas jae pop dec mov in repnz into dec cmpsb add aad jg jp mov mov cmp stc iret mov es lea aas fsubs cmp mov jg sbb scas arpl pop cmp scas call sub mov std jg addl or xchg ljmp into push jg push pop adc adc dec sbb dec mov xchg sahf add loop popf bound arpl adc retw xor jg mov lock or in xchg pop lret push daa stc jg mov xchg (bad) fidivr rol xor repnz cltd mov and jg add push (bad) jg lods xor inc pusha xchg ljmp dec add jg icebp push adc arpl jg,pt rorb cmc and inc cmp test mov ja scas jg je lds int cmc fs push adc jg cmp jb add jg mov or inc xor jl dec push mov aaa xchg mov jg icebp (bad) mov jg mov mov dec inc mov mov inc les or pop sub inc dec mov mov pop inc je push jg call pop lret jbe scas test pop sti push (bad) mov xor xchg popa movsl mov in hlt push push push fdivrl push sub jg or jnp fwait sbb movsl call fstpl xchg (bad) (bad) into int3 outsb cld jg,pt fsubrs pop adc fidivr shr inc out mov leave popf push add dec cmp or cmpsl (bad) jle cmc cli sbb jmp pop stos dec cmp pusha mov pop mov xchg imul adc inc pushf xchg xor mov (bad) lock mov pop (bad) lret or push xor mov adc insb loop jg cmp xlat and dec std xchg jnp pop and inc lea scas jl mov push inc ja add sub xor lret inc out dec and jg mov sub rcrl imul (bad) aas loope or pop int3 or addl mov nop xlat sar dec adc hlt xchg sbb push mov jg xlat add ret jg mov ja and aas out dec aam ljmp pop jg leave lods fstl cmp and jg clc lret jnp in mov xlat gs dec pop adc push (bad) pop cmp ljmp (bad) out test mov test adc sti mov iret jno or popa xchg or push (bad) jmp inc scas dec cmp inc test out inc inc ret jg cmp cwtl add cltd iret lock jb push loope (bad) mov cmpsl jg pop lds dec popf dec inc sub xchg jg fldpi mov fiaddl ret add jae (bad) mull jge (bad) out arpl adc (bad) mov sub mov fstpt (bad) loopne xchg mov jle xor out pusha push data16 jno pop jo pop sbb les mov aaa jg mov jne xchg (bad) mov loop ret mov repnz je,pt mov fistpll incb sub jae pop cmpsl mov mov ja stos adc cmp jg pop push push mov aaa (bad) lret jnp (bad) jg icebp cmp pusha sub xlat dec push adc mov pop outsl jg jge mov jg pop rep or lcall sti sbb in adcl inc mov in adc orl cmp xchg mov std loop mov sahf dec mov cmpsb push cmp jae mov and arpl pop dec iret xor and cld sub adc xchg scas adc add out repz inc aad aam lret jl sbbl mov add inc in outsl push pop insl dec adc and mov out pop push jns outsb jg xchg fildll mov cs pop pop add inc (bad) jg bound push mov dec mov xlat and dec pop ss xor pop add or jg popa push add faddl daa jg xchg jo ficomp jg cmp inc inc jge mov (bad) gs adc pop cmp dec push mov lods outsb (bad) clc push pop jbe out sub mov dec in and cs shr mov jg push jecxz lods inc fidivr xchg pop icebp jae jg sub loop loopne mov xlat outsl add je inc xchg jg int inc out pop jns jg std (bad) cld ss jg xor enter aaa stos test dec loop adc inc sahf push sbbb popa jg jb scas pop sub xchg mov sbb enter jg adc xor rolb mov sub dec aas or fdivl loop and jmp rcll scas or mov push mov jg push mov cmp cmp sub or xor enter mov (bad) aam jecxz pop and jno jg lret les and inc push and jno dec mov cld or arpl jg (bad) jp imul aad push inc mov enter xchg cmpsl inc pop call outsb sbb push addr16 movsb push mov pop test add dec xchg add ds or dec xor and jne jnp jg lahf insb push jge mov jg xlat in cmp sub scas xchg pop pop (bad) jno (bad) jg and (bad) cmp dec xor mov inc aas (bad) push dec jg lcall insb dec or fwait cwtl sahf cmp jecxz scas jg sarl add gs mov mov lock xchg out mov lret adc js pop negb mov pop imul xchg enter push xor aas stc inc dec pop loop call iret adc jp pop adc jg push pop inc xchg das daa mov mov push xchg out nop mov ds sahf jl add pop sub add fcoms sbb push rorl into lock inc jg inc mov or sbb xchg xor lret leave insb dec sarb add addr16 cmp jg push into add jg in and fwait cmpsb test jg arpl andl ss aas jp jmp mov sbb shlb addr16 (bad) pop out and or jns in push mov aas leave pop (bad) jne (bad) pop and ja mov int jge pop dec pop and xor sub jg movsb outsb pop xlat sub add xor ficom push sti ja mov icebp mov faddl mov out cmovbe and lret jg outsb push (bad) jp push or mov stos jg ret sbb push jl push sub and mov push jg jo adc pop cmpsl icebp mov mov in and xor (bad) jmp stos jo out fsts jae cmpl out mov lods and xchg enter pop insb mov pop repnz je jecxz cmp jg mov jne (bad) jnp pop cmp dec outsl or xchg dec imul sbb aas lcall (bad) dec shrl add cwtl jo repz bound mov int mov mov inc fnop ljmp jl push cmp jg fidivrl and mov xchg les aas (bad) jg push mov add inc or scas popa repz mov adc stos jg add mov push mov enter inc jle fsubs (bad) pop mov jae jg mov inc (bad) jg in lcall inc jg jle fs xor add dec dec jmp or jg gs les and mov sbb inc pusha cmpsl shrl xchg add aam jg hlt jne sbb dec out (bad) xor sub mov (bad) pushf jo mov jg adc mov add xchg adc les and hlt shrb inc das cli inc inc inc add dec jae cs add sbb add test cwtl (bad) lret mov stos hlt dec ljmp aas pushf xor inc pop das jecxz mov adc pusha xor and mov fistp insb (bad) dec sub negl jo (bad) notl push mov aas mov jne dec and lea or jg or mov jbe mov jmp sub adc inc and mov dec inc out mov inc pop addr16 ljmp loop inc push cmp dec lds push test jecxz xchg movsl mov adc push test push jbe testl enter dec lods fidivrl mov jne cmp repnz inc fs pop mov dec mov sub or add daa out inc jg int pop inc add adc imul jle cmp pop or icebp ds inc lret add jg movsl addr16 mov sahf inc jg in mov jg les out pop imul movsb jo sub cmp cli outsb cmp inc aas insl jecxz dec push sti jg mov repnz jns push dec mov je mov jg scas outsl addr16 sub ja test and sub ja push out adc scas es sbb cmp pop jg jecxz js xor or fadds jmp and scas pop mov outsl addr16 data16 aaa clc pop cmp mov divl mov xchg sahf dec mov xor fild pushl mov sbb dec aam jg scas movsl jns (bad) mov mov dec orl pop (bad) int3 iret dec inc fwait pop inc stc scas nop loopne aam inc xor (bad) outsl jg mov into loope mov js dec loop (bad) icebp mov adc aas fadds sbb sub dec mov mov mov inc push or jg mov lods cmp jg imul jl jns xlat pop jge cld add mov jmp cmp jecxz hlt mov mov pop js inc pop pop push xor lahf xor out cmp sbb in sub xor (bad) cmp (bad) jl sub (bad) imul xchg sbb das dec out icebp jle dec ds cwtl ret insb jge mov adc inc jl mov and mov jg pop adc dec jg pop and mov add lods sub jg cmp in mov push (bad) mov mov jg jb cmp je sarl in cmc xor jmp dec out inc mov inc or adc dec adc mov push shl sbb lcall jg mov and jb cmp (bad) xor popf std shl mov push stos int nop add mov mov mov ret jg pushf mov js inc mov scas aas or push mov pop inc rclb cmp sub into loopne enter insl pop lea lret mov xchg mov movl scas jg and sub or (bad) loopne jmp push jp pop jmp es shrb lret popf (bad) sub xlat jg inc ja jg jne aam xor xor imul fstpt dec pop mov mov sahf push repz mov int3 shl pop jmp cmc push leave cmp ss mov and dec and call movsb adc cltd push mov pop sarb and int ljmp pop hlt les cmpsb loope add cmp fildl or arpl mov pop jge jb dec sbb xor les or cmc mov aad jle mov in add jg mov std loopne outsb aad out cmp ljmp mov sti mov dec inc pop xor xor mov dec insl pop xchg inc inc gs and xchg sti mov jbe mov fwait jg cmc adc popl adc out popf adc movsb push jg xor shrl loopne shll inc or sub mov xchg (bad) jg xlat mov and hlt repz jg and rolb sti fnstenv addr16 loope pop jne popa mov scas xchg mov jge sub dec addr16 les pop test dec test lock fnstcw shlb pop push ds jg addr16 divl sti and and outsl cli adc mov jg in mov mov dec imul xchg lods mov paddsw sub ret iret mov fstps fsubrs ss enter and aas popf inc jge fs (bad) arpl mov inc xchg dec in lods xor jg add popf jg cmp or test lret sahf mov lds jg mov mov scas xchg pop xor cmpl xor xor sub pop test push (bad) xchg sbb mov mov (bad) mov daa jg and adc cwtl fs jg (bad) mov ds movsb jg inc jne inc bound xor stc and jg add mov test push adc mov dec inc pop insb lret pop xchg pop cli (bad) xchg je sti mov insb inc movsb push lods (bad) push shrb loope lret (bad) jg pop faddl jb pop jg inc sahf xor push pop stos (bad) outsl imul mov rolb daa movsb sbb push or stos dec mov test cmpsb hlt fwait mov mov push int3 jg dec cli movsb cmp jg fidiv pop jg in mov inc jg mov add aas sbb test dec mov aad out popf arpl push pusha mov jbe incb cmc jecxz push xchg scas mov lcall or (bad) arpl mov outsb jle scas dec pushf jg jge xor (bad) xor ds jl jae fnstcw pop cmpsl lret jmp sbb lea bound dec js add add fwait and dec lods (bad) outsl add pop jg push sbb aas incl jg fsubs push add scas fwait cmpl lods ficoml or out jno stc or incb push scas lods xchg adc (bad) xor pop sub inc push (bad) jbe (bad) dec mov inc mov (bad) int3 push inc jg jbe inc imul jg js idivl cltd pop push mov cmp iret mov jl repz aas lret mov pop jae adc pop movsl test js cmpsb jg stc repnz jb pop cli out sbb pop pop es aaa jbe hlt (bad) lahf jle push movsl jg (bad) mov mov arpl (bad) ds jg xor imul test jg mov cli and aas (bad) adc inc jmp aas in fild ja sbb je les push mov stc mov dec pop add aaa incb pop or sbb ret imul pop ret das push push xchg fwait xchg jg push roll adc mov xor dec iret sub push jg xchg fldl cmp imul dec pop mov outsl inc (bad) icebp xor cld repz test push inc pop add lds jg cltd out fadd xchg test cmp add cmp into fdivrl cltd dec xor sbb cli mov sbb mov ljmp jg jl sbb adc sub mov loopne setno mov addr16 movsb mov popf pop aam mov ds adc inc addr16 or dec je or ds (bad) fnstsw outsb (bad) sarl mov dec mov imul pop call adc jg push stos add loope jg sub jg jmp jge (bad) icebp inc jg mov xchg movsb mov jns mov mulps subb cmp fidivr jg bt xor inc lret push sti pop xchg dec add js mov jmp cmp out pop jecxz mov jno cmp das lock sub push sbbl push dec sbb imul inc ja cmpsl or loopne out adc jg test cmp xor xchg add stos aas jne add mov sbb mov mov iret adc mov push arpl jo loopne int3 (bad) cli jg inc dec movsl es adc cwtl cltd pop inc cld mov and push stos mov or xchg mov jg mov sub mov jg xor in jle daa movsl mov dec outsl notb mov loope ficompl cli iret xchg jp jge mov inc dec repz mov pop mov jg push sub adc mov fbld jg jge dec jl jb mov inc mov push xor lret lock push xchg dec pop adc fwait jg fs dec add (bad) pop jg push stc mov stos movsl popa sarl pop pusha test scas sbb and add dec jg (bad) cltd pop inc jg push mov loop rcll push jge lret jp jg cmpsb mov pop mov aas or xchg stc ret dec jno mov pop sub adc dec (bad) dec jg mov pop sbb xchg aas jg (bad) insb fdivs ja insb pop adc aam dec (bad) clc push fs repnz cmp daa push gs sti push sub dec fmul pcmpeqd add mov jb and or loop test out jle pop add lods cmp shlb mov mov out xchg fdivl pop loope pop inc inc dec add stos push push sub add jg xor jnp xorb std popl jg clc xchg cmpsb arpl ficom sub mov movsb cmp imul jg jb jne outsl dec into (bad) mov jg sarb insb (bad) ljmp xchg xor or rcr fidiv cwtl pop jle cmp scas rorb jae mov push dec jle addl outsl push test imul rcrb gs push insl idivl mov sub sahf or jg xchg push jg cmpsl mov mul jg jne sbbl xlat add std pop mov cmpsl and je and dec xchg repnz movsb mov js cmp imul push jg shll ss (bad) sbb mov repnz in xchg cmp jg ss mov data16 jl fimul fcoms outsl pop imul or dec cld maskmovq negl scas outsl into pop and pushf leave inc mov rclb (bad) mov out jp cmpsb aas add iret xchg jl adc mov mov adcl mov push sbb jno sub fdiv jmp stc dec xchg popf cmp inc jbe pop jl rcrb lret call scas pop xchg sbb jg mov or push cmp test aas mov sub jg mov cwtl pushf sbb cmp fs xchg xchg (bad) mov or test mov mov sti lahf jp inc or xchg pop jg outsb pop cmp jg or movsb jo gs mov test popf cmp mov and mov loope mov mov pop loop cmpsb pop inc sbb aaa aas (bad) adc popf sbb jg imul stos aas sub je mov mov fwait outsl xor mov xor lcall jg fnstenv clc aaa frstor cmp xor enter jg push cmp dec jg (bad) mov leave jg out mov xor dec imul enter sbb push sbb cltd dec jp fwait or xchg inc out lds push mov popf fcmovb push cmp stos jnp dec pop mov mov leave dec xchg inc cmpsb jg pop (bad) adc jg arpl test je jbe inc mov mov bnd xor enter mov ljmp push xchg mov push adc test mov jg andb jg fisubrl (bad) pop cmp jg cmp xlat jg cmpsl das clc stc jmp push jnp dec mov pop or in jg xchg xchg pop push aas mov dec push dec gs les jg loope push mov imul fstpt ror jp,pt ret pop leave mov dec dec rcll push fldcw mov push cmp clc xchg jg aad cld sub fistp dec xchg das imul stos push cmp lods mov push out add hlt mov ja cmp jg and or insl dec add sbb jbe pop sti push ret fdivrl push or cmp outsl adc push push lret push les addl and (bad) jg adc cmpsl or mov jecxz add sbb sbb test imul xlat sbb (bad) daa mov test adcl test mov xlat stos inc rclb lock push inc mov rcr nop in pop js insl idivb dec fistpll outsb fincstp xor dec mov dec cmp mov push mov jg sbb add (bad) call jmp xchg mov fstpl inc fwait cwtl cmpl push icebp mov fistl test xchg stos or mov dec aaa inc leave pop dec test and in out or cltd test int3 or dec push (bad) sbb sbb (bad) (bad) iret jnp outsl dec xor popa arpl mov push mov mov push fidivl adc lock inc or je cmpsb mov cmp jg daa mov out mov xchg (bad) clc lds (bad) inc loop popf jg bound cmp cmc xor jg mov xchg jg sbb ds int dec test out lret mov cmp daa orl and cmpsl rorb ja push hlt insb xor xchg (bad) mov mov jg lds or (bad) jmp sub inc shr sbb jne xor repnz sub ss into scas xchg or cmp push mov dec jg cmp mov or pop ja repz mov outsb jp lds aas fisub insb stos inc xchg movsl sub sub jp (bad) jg out in loop or inc push sbb div and cmp add orb add mov rclb cmp loop outsl xor inc lret fmuls hlt inc mov out aaa inc push push jg cltd pop (bad) lret movsl in jg lock xchg dec mov mov bound jg inc mov jg xchg test xchg jg mov lret mov loope mov add adc mov and xorb cmp pop ret aas mov jge ja or push ret add inc in orl daa arpl out imul lods push loopne insl jae dec push movsl repz mov mov push jg mov lret adc insl (bad) pop (bad) mov sbb imul xor xchg dec daa jg gs (bad) cmp push add inc push mov mov cltd push sti and mov rorl dec dec sub jg xchg lcall call test mov cmp mov (bad) mov out cmpsb movsb xlat mov (bad) enter mov jg rcl insb adc int3 xchg jg mov mov pop (bad) adc push cld xchg cmp and xchg pop cmp add mull push popa jg mov lods outsb mov jb push inc call add stc xor data16 outsl sbb repz jno aas sar push sub mov lahf std es lods je (bad) jg sbb cltd sub pop addr16 mov dec mov call std jg into sub push push imul dec jg lret lahf or sarl cmp scas fstpt lods lcall sbb cwtl inc inc rcll outsb xchg adc and aas adc or xor jecxz add ljmp cmp xor inc push call jbe sahf popf xor movsl sub inc loop jg aas icebp insl or loope js (bad) push pop or lods pop mov jnp and popf pop jg repz movl pop lods push cli out jg (bad) dec movsb jl pop lahf bound mov add adc adc pop jg sbb int aas (bad) jg pop dec or lea adc pop fsts xor inc outsb push stos js xchg test adc insb mov jg rcll or test je fcoml lahf mov inc mov jo or cmp add mov pop ja inc or inc dec cmp cmp push pop sti mov cli stos mov jle jg (bad) mov lock jnp leave jg push ja mov cli jg cld mov mov add pop jge pop sti das or call lret cmp cld lods es fnstsw or jecxz mov pop out lods dec (bad) bound loopne ret push fidivr idivl pop stc test sti dec lret dec test cmp popl das arpl mov pop cld pop fistl inc test cmpsb lahf lds push dec idiv out out inc fimul and mov pop push jbe ss xor jge mov lea mov pop push inc pop jbe cli clc mov xchg dec sbb xlat xchg jg leave fstpl mov and inc pop hlt pop add js jg cli dec sbb jg imul lea aas idivb dec xchg ds enter cmp jg in popa add jg lret clc lods (bad) fwait (bad) push loope mov inc in in adc jg push push inc cmp fidivr jp rorb dec jge cmp cli push fucomp aas stos jno fisubrl ja pop jg sbb test insb pop jns movsb fistpll loope add dec jbe les xor jo add xchg stc push mov cmc dec aam aas cmp mov push sbb add and scas cmp xor (bad) out test jg cmp cld sarb xchg and mov sub pop out inc inc sbb repnz aaa mov jmp mov sbb xlat sub jg into push int3 pop push cmp test imul and lock jle xor jno jle test popa nop mov push xchg adc jo sbb std fcmovnu je mov jae shrb clc jg mov or in pop jg leave and jg lods cmp cmp jg inc cmp mov aas fild call mov ljmp aad cmpl das inc cmp sbb jle push lea cmp pop aas inc xlat mov sti pop add jne push movsb and aam pop rcrb cmp push jg pop bound sub lods jg or jge and push jg pop lods cld fcmovbe mov jg cmp rcrb into jg and iret mov push xor sub lods sub arpl jg neg dec test xchg sub push mov adc call jg into mov push inc stc mov mov inc or pop (bad) dec push jmp test inc sbb cld push jg (bad) ljmp mov (bad) std fdivrl cmp jecxz call (bad) jg fwait out mov mov mov test jg cmp jne inc jb xchg sub adc inc mov add inc push aad jns and lahf imul jg mov std cltd jg push inc sub (bad) pop dec addb pop or ds stos mov add pop lahf mov sub call mov aam shl lret movsb cmp jg jno mov add mov rcl jg and les insb jg adc pop test div pop mov leave lret jg push fwait mov cmp pop mov std xchg cmp jg cli dec push mov xchg scas pop in popa popf data16 idivl mov sbb dec repnz ss les popa cmp sbb arpl sbb push lahf and jge jp pop add cltd jg xchg outsl (bad) loopne daa sub jmp sahf lods (bad) aaa mov hlt outsb aas (bad) imul movsl adc lahf jmp push aas mov add pop xor cmp (bad) dec dec adc fistpll jmp push cltd loope xchg adc mov lds ss mov out xlat imul loope push dec hlt js rclb and fistpll cs sbb fwait dec jne leave out ja ljmp test pop rolb xchg bound fsubrl (bad) jg or sbbb hlt jg popa pop dec push (bad) push (bad) loop or inc loope jg sbb test dec mov add jg or sbb (bad) fldt jbe cmp jg jbe fpatan call daa in das cmc outsl mov push xchg aas xor mov pop loop ret aas in test dec xchg int inc jbe pop loopne add ds lcall xchg jne (bad) adc mov and das test jg (bad) adc dec pop push mov mov pop pop lahf mov inc jg push mov sub lea (bad) mov sbb fldcw shl inc push arpl push stc xor (bad) adc jle fisubl and dec outsb mov leave pop pushf sbb jg test cmp or cmpsl data16 and movsl xlat lahf dec sub adc xchg test xor add das push dec cmpsb add (bad) jg mov pusha pop jg imul and ds mov add lcall test cmp xor push mov imul inc xorb dec scas cmp sahf jns sbb lock sbb arpl cmp mov loopne jp push cmp jne leave imul xor (bad) jg inc iret stc ss push les jg popa repnz dec sub cld into outsl sarb inc ret dec imul sub dec ja test ds outsl xchg xchg inc sub loope pop cwtl out js jg pop sbb rolb cs mov jae push mov (bad) cwtl mov pusha jg dec fldt pop es aas out scas in clc pop push inc mov mov (bad) push mov mov stos data16 inc mov pushf into cmp jg add mov jg jecxz cmc std out mov push cwtl lock jle mov pop inc loope jg adc test int3 or sarl and push dec xchg jne cmpsl lcall mov sbb cmp (bad) sub stos arpl cld bound aam repz movsl in xlat (bad) jg push lods sub int3 mov xchg mov mov das insb popf orl pop movsl outsl cmp inc imul clc xor xor lahf out jg (bad) cld stos rorl dec out cltd mov sbb add xchg insl mov sti test dec mov jae add push pusha xchg mov repz loopne or aad push insl and int lret jg (bad) outsl push mov pop fwait sarl lds fidivr xchg adc inc sbb mulb rorl mov jge dec les mov pop (bad) mov xchg (bad) jae xor aas nop repz aas ja (bad) mov inc xor mov cmc jb (bad) aas jle jl lea inc sbb jg mov xchg cld jg xchg push outsb stc dec mull mov cmp xor jg orb mov mov jbe adc mov loopne fwait jge lods jg push ds mov aam and and jg pop clc cmp pop cltd inc jg insb mov sub mov mov sub mov in dec push (bad) mov insb imul sarl ds gs mov mull mov mov into cmpb lds lds jg repz cmpsl (bad) ss in fstp xchg push dec dec push insl mov aad and into int3 dec and cs gs das mov add popf pop mov cmp pop rcr adc mov jg pop sahf jo sbb jg inc out ja cmp jg inc xchg cmc lahf jnp jg and (bad) lock jg ret leave (bad) cmp adc cltd dec nop xchg mov (bad) fwait pushf pop scas into adc mov push or and mov mov outsb sub negb jb mov fsts xlat cmpsl cmpsb in jae cld ds adc cmp add stos push loope jg lods jno sbb sarb lret ljmp ret pusha std icebp jg iret mov (bad) mov insb jno mov out imul jle movsl iret lods pop push sub jg mov scas jne sub xor daa fdiv dec inc mov cmp int3 hlt xchg mov mov cmp jg push cmc in xchg aas adc jg fildl cmp mov pop xchg jg mov inc or cmp in push in je xor jno jge stos dec inc mov imul scas dec mov jg pushw push xor sub jg pop daa adc xchg ds push cmp mov aam in jg sti dec scas cmpsb mov jne les push mov xchg js lahf jg rcll jne dec dec sti (bad) xor aam jae leave mov push jmp (bad) adc fdivrs lds in xor fnstcw sub inc aas (bad) pop (bad) mov inc pop (bad) fsubs adc jmp rorl adc jg xor mov add addr16 les jecxz dec push outsl pop xchg aas shll cmp mov insb sbb in adc pop dec sub push dec jg jp outsl lret push mov (bad) les inc jg cmpsl sbb mov (bad) and call jg push push scas xchg jbe or mov jle aas dec js xchg pop enter jno dec xor jg xchg pop iret xchg mov inc popf inc jbe and daa inc icebp jno mov ja sbb jg cld inc outsl sbb sub mov xor out ljmp dec mov sbb pushf jg das sti insl add mov pop dec test (bad) loop cmpb flds lea xlat mov das dec jnp push arpl data16 cmp jne cmp pusha push mov push adcl pop mov testb jg pop nop sar je inc mov cs scas add sti jne rolb cmc imul aas fistpl dec dec test mov aaa imul (bad) testl mov jo out neg pop pusha push dec sbb test cwtl fdivrl dec (bad) mov es out jmp mov sbb arpl movsb (bad) cli lcall push jg es pop pop mov cmp cwtl and mov push jg cmp loope jg pop push (bad) jbe or xor pop mov dec outsb and jg aaa mov cli jg or xor cmp out sbb icebp sub lea enter mov cltd mov stos dec es inc jb mov sbb loope push int outsl pop push jg mov sub out imul mov mov mov enter xor adc lock pushf ret andb stc scas push popf mov pusha rorl push cmp outsl je pop xchg jg stos daa xchg dec pop add push (bad) jno and jle ret pusha pop ffree f2xm1 jg push out add lea aaa icebp rsm inc daa jg (bad) es sub test push pop mov xor lret mov je outsb out fildll sbb cmp adc lret test (bad) je push sub insl out add daa in in inc fstpt icebp inc cmp dec push jne (bad) aam jg push repz popa mov and and or fwait fs cmp or stos mov push xchg in ljmp dec pop and lahf jg or aaa imul xor iret push shl dec jg or rolb cmovl pop or (bad) mov push gs push (bad) dec outsl sbb xchg (bad) rcrl daa mov out add inc inc jg (bad) dec push ljmp nop iret push xchg dec (bad) adc dec dec sarb dec ret pop fistpll mov mov jg adc (bad) dec cmpsb call adc xchg push cli sub sbb push mov mov push in stc jg outsb and insb ud2 xchg adc push insl pop fldcw (bad) xchg das jno loope imul stos adc mov jg (bad) ljmp fisubl mov sti les add sbb jg test cmp xchg dec pop xor jno icebp (bad) xor daa push mov aas cmp xchg mov cmp mov sub xchg inc or clc mov sbb insb xlat jl jg jne pop scas data16 jg add adc out xchg insl jae mov push rcrb xlat mov dec mov (bad) pop push aas dec pop push xchg push lret and push in es jmp inc and ds loop pop mov jp mov sub enter inc xor jg ds outsb pop mov dec jg mov test mov mov lcall xchg cld jecxz inc mov das pop mov idivb clc dec mov bound jg sbb jg fsub es loop pop js xchg jg pop jge dec or or cmp mov xor fidivr out add push loop (bad) sarb leave dec sarb in and aas outsl add bound xor int pop mov shl lods xchg mov notl jle xchg dec sti stos fistpll lea jmp mov fisubrl lods or scas jg dec dec jnp xchg jo cli xchg xchg push stos jecxz mov add cmpl jl (bad) aas outsl add fwait pop insb imul call loopne dec cmc sub in push aas inc les pop pop dec imul outsl cmp pop jg mov push out mov adc jae aas add out movsbl inc pop cli jg pusha ss gs bound jl cmp fistpll mov les or iret nop (bad) mov xchg dec lcall roll jbe adc stos mov lret hlt sub mov xchg adc cld push xor aas outsl shl fstpl push jg mov fidivr push xor cmc sbb xor cli (bad) repz imul stos and mov dec ljmp scas jg imul loopne jno jg daa xor or js dec call push frstor and jg xchg xchg push test push out sbb xchg lods es je fimull (bad) mov push push es pop cmp mov jne adc mov mov data16 jp push xchg adc sub jmp mov outsl jg push jle mov fwait orb stos jo inc mov push rclb loop (bad) idivb add scas push dec les add rcll mov inc lret ror mov and inc mov mov pop cmp clc cwtl inc and leave dec inc or mov insl add jg jp mov mov pop or sbb jns rorb scas (bad) aam fildl jecxz je js dec arpl sub mov xlat inc sub test popf scas aas push je arpl jg out sub lret push jg lds pop xor out mov cmpsb pop (bad) mov xor cmp (bad) in dec lds xchg mov cmp jecxz out cmpsl lret cmp fisub mov pop lcall add (bad) and or outsl scas mov out iret test dec sub mov enter fistl ret inc mov xchg xchg mov fidiv xor in hlt test jg idiv xchg add std or mov and repz dec jg xor pop lret jg loop jno ss fsubs jb sub sarb push sbb jg jge pop inc pop fwait inc jg xchg or lret aas fdivrl jno test andb adc inc std loopne jo jl in mov mov aam ds and pop pop or dec jae outsl mov mov inc xchg (bad) pop jg inc es jg dec cmc mul mov lods mov je out and ljmp repnz (bad) jg movsl int inc sub push jg pusha push xchg dec push adc xchg jns mov sub in dec jb xchg mov lret dec jp ja mov addr16 inc pop xchg jg nop das mov ret out std ds dec adc aas push imul inc and out ja or out (bad) stos popf cmpsl inc mov lods icebp nop jne mov dec push ss jo lret pop xchg rcll jg jno jns and jg add addl test pop add push mov pop dec mov mov fwait (bad) sti mov movsl or out pop loope jge jg sub sub push mov jg loope cltd adc jo sub call pop dec imulb jmp jg mov and daa inc jle sub les jg jp mov call (bad) leave sub lock jle insl sub cmp ja mov inc outsl rcrb xchg aad out int3 mov mul loopne add inc (bad) mov pop outsb cwtl inc (bad) jg cmp popf mov cmp push mov imul or (bad) adc jnp cmpl jg inc (bad) cltd cs and xchg fcmovnbe rcrb pop xor repz pop push mov inc push movsb mov pushf test ret fs outsl mov or nop push jg call lods adc out inc cmp jg stos push and cmpsb pop jg mov mov nop jo jbe stos aas push lret dec xchg mov es ret pop cmp cmp jp pop stc fiadd test jbe,pt pop jg fwait int3 mov out xor imul cmpsl sbb jg xor pop jg and fmuls imul pop stos inc or push lahf cld popa mov jg and jecxz jg ret js sti adc sub std push scas test xor loope jg ret xor dec test fimul fstpl dec out insb jne pop ficoml jg mov lcall nop cltd xchg dec inc aam cmp push int3 jg jae xlat cmp stc popa faddl jg dec test add push bound push pop push mov fidivr adc pushf jg imul cs cwtl mov inc (bad) jg push pop sarb test jg xchg xchg out dec or push mov cltd pop or sub xlat into sarb and xor cmp sub push adcl mov xor in jg scas insb mov mov lret arpl inc lea int3 jecxz or loop xor cmp mov inc fwait lods mov popa or hlt test enter ret push loope push addl jno mov pop das lods hlt jno in jb xchg int add mov inc arpl cmpsb arpl push dec aam xchg loopne jg cmp xor (bad) loop int push push push jg inc jns mov inc adc jg (bad) fstpt jg sbb movsb and into (bad) jg pop pop mov jg loop popl xchg repz cmpsb int3 pop lods mov push mov adc inc sbb pop add add jg movsl rol lcall mov mov push jl inc jg out inc sbb xor xchg mov setnp in inc dec and cmc clc bound jg mov mov xchg pop push push inc mov mov pop mov jno jg cmp xchg jg fmull inc stos loop jg push subl jg lcall mov push mov jo push popf mov mov outsl icebp xchg jg jb or sbb loopne jg mov adc xor jge out enter clc test mov cmp addr16 idivb inc mov jg es jl and pop ret lods sub out push stos and jg in pop (bad) xchg test jnp fnstsw sbb push lea lret add xchg shll xchg daa popf dec iret jg fisttp ja sbb popa (bad) or imull sbb js imul sub mov jg stos cwtl lcall mov test loop scas lea mov jg imulb sub bound xchg xchg mov mov inc cs stos jmp test aad and sub sub fucomi jg add mov mov movsb fisub xchg jg into mov jne aaa outsl sti add rcr mov ret repnz arpl out addr16 cmpl in xor test js xchg pop jbe jg cmp jg cmp sub pop push xlat mov xchg popf jg sbb into cltd jg sbb jb insl loope jg call loop jg pop xchg jae mov outsb pop and mov jg (bad) mov pop and sbb mov or add adc push jg jmp jle iret mov sub loop dec mov jg sti cli or jg pop repnz fs jp or pop lret (bad) sbb jg stos mov and jg add popa inc je jo sbb test jg xlat (bad) jecxz ja icebp jg leave aad and or fs scas add xor dec pop mov push inc mov outsb fstpt test lret cmpsb jg sbb adc jne mov mov pop aas fwait add push xor xor inc clc fcomp push mov mov push cmpsl cmp push sub lret int cmp dec pop insl mov pop movsl jg lahf ljmp or add dec xor pusha test mov mov push ja adc dec dec ret and lea pop jg mov pop leave inc add add popa inc pop mov xchg push es aad adc adc movsb jg fstpt ja and jg dec fstl sub test sbb sti dec repnz jmp jae mov jg cmp jmp inc jo jg mov dec mov fidivrl je push jg fldl mov cwtl mov cmp jg sub hlt mov dec (bad) dec inc in mov jno outsb movsb daa fiadd inc inc imul arpl xchg frstor xchg test push mov mov dec mov and pop int xor jnp ljmp mov and jne pop out fdivs arpl jnp in int jecxz add pusha cmp pop jg adc mov (bad) fnstcw (bad) bound ljmp jns pop repnz imulb jg jmp adc mull cmp add in sti iret mov mov mov inc push jg test loop mov mov jae fcmovnbe int push xor jg jb inc xchg ja add inc addr16 pop sub jg aam cld imul inc ljmp inc pop jbe xchg in jno add inc shl fwait lock jg test and in aad sbb push in lods incb push leave loopne jg mov dec fnstcw jl cmp dec lock cmp jg out push jp jecxz jg cmp xor pop pusha xor cli jecxz push dec into outsl fsubl jg xlat (bad) cmpsb fnstcw or fldl xchg and pop mov and int3 sbbl push outsb in daa inc mov or add adc sub inc into jg sub aad mov cmp stos repz rorl mov lcall xchg loopne inc adc nop ss dec lret xchg push or enter xchg (bad) mov xor jg dec mov pop add jg mov adc push add lahf jg,pn pop (bad) aad inc cwtl jg pop mov scas jg enter adc sub in aas inc jle repz cs dec mov sbb mov ja sahf stc popf cmc jg fnstcw (bad) int3 iret repz cmp in arpl outsl inc negl jg inc or and dec push loop inc stc dec jg ljmp jg addr16 in ret cmp loop jg gs mov pushf jg iret fwait mov (bad) out jg shrl mov pop mov jg and mov call popa movsb test dec dec xchg dec scas mov loope or xor jg lret xchg inc cld push insl repnz dec push xchg out jg outsl enter lods cmp jg sbb or sahf xor jg hlt inc stos mov in jg sar mov fbstp jb int3 imul leave cmpsl jg mov cli xchg jg pop sbb pop andb leave jg vzeroall pop cmpsb lcall shlb ret xor jo pop pop mov mul mov pop mov xchg mov arpl jge test out pop mov std fstpt loop (bad) pop mov sbb stc push ss icebp jp je stc stos out ds jg stos dec inc popa cmpsb or push sub cmp fdiv jg sbb mov or push jg imul dec push das xchg test dec jge icebp aas ret shll or sbb xchg ja movb mov jg ret in add sub mov jmp nop insb dec mov repnz dec push jg movsl push shrl retw clc dec pop xor test in lods jo pushf xchg push jb test inc data16 (bad) jo cmp fcom call or pop (bad) pop imul (bad) push pop (bad) je stos xorl stc scas jb push out pop fcomps adc je cmp mov sbb inc cmp aad jg inc mov repz dec lret cmp jmp cltd mov dec inc push std in mov pop outsl push pop adc scas jno jg mov pop std add aas add add arpl jne pusha inc push inc aas into sub adc mov jg or les cltd hlt insl sbb dec jecxz jp aas jle cld dec rclb jae or mov push xor or push sub (bad) jg lds mov rcr jg jl push jge leave lea xchg (bad) mov sbb ljmp scas mov (bad) ret sub mov ja les imul push insb jo sub pushf cld lea dec cmp mov dec (bad) pushf or imul jnp adc mov fs dec mov mov pushf aas inc add jle dec (bad) sub jg jl add pop gs jg ret ja rcrb add jecxz pop push aas ljmp inc vmovdqa xor sub out mov jg mov and popa sbb scas or rol sbb (bad) jne mov icebp or out loop jg sbb push ret aas arpl int lods bound leave and cwtl movsl pop jg push sub into push js mov or mov push mov xchg movq mov pop mov popa inc fucomip icebp mov data16 push test int3 std adc jg repnz add or pushf incb cmp jg and pop dec scas jge jg orb xor in sti out cmc std jne insb jg bound repz jg flds sahf sbb pop xor mov mov bound mov adc dec push fdivrs jno dec pop ds or (bad) ja inc lds repnz les jg aaa fisttp xchg adc jg pop lds jae sub insb fs lock js jg test jno mov cmpsl jg popf inc push jle lret arpl mov mov mov jl hlt dec aaa mov push jmp mov stos and sahf sbb jg (bad) sub cmp notb les addr16 aas dec outsl xchg (bad) xor ret dec jge xchg jns fidivr lcall and inc fcoms (bad) sti sub pop rcl movsb or inc jg loope in mov cwtl mov insb jg repz cmp pushf pop inc sub bnd lock xor out int3 and ja out jmp jg out pop mull mov jg sub icebp inc jg aaa add dec arpl loop add pop aam inc es jg punpckldq pop lret mov insl add das ss lods xchg jno and sbb and or gs shrb fs (bad) push cld push inc lahf aam xchg push sarl loop dec pop cmp jg sbb xchg jg cmp mov (bad) iret sub aad jne jnp adc and in outsb add mov sub ds jge mov jg add jnp inc inc bound fs fidivr sbb pusha jg cmpsl jbe int3 (bad) xor push adc push sbb roll outsl iret pop add mov cli jg sub jg sub arpl pushf pusha ret push xor loope mov and (bad) pop pop iret jns les jo jg test sbb mov in jg clc ss mov out inc jns test decl das in pushf insb dec push int3 fistpl insb xor mov in adc pushl (bad) xor push test xor jg mov aas xchg js adc lods dec add lods jg xchg ss mov and mov (bad) or imul pop out sbb jg jge loopne push stos mov xchg mov insl xor ror (bad) push lret repnz mov push dec pop inc xor pop mov std cmp dec fwait mov out aas mov mov jg pop call pop mov inc pop rcll mov in int3 arpl pop jno call dec decb loopne jnp xchg adc jmp mov movsb mov jg test sub dec xor jno sahf sub mov mov mov clc ljmp sbb mov pop jg adc xchg in scas das jg shrl xor dec push xor aas (bad) cmpsb mov ja inc jg xchg dec rol push dec mov inc mov sub sbb jg rcrl pop cmp into jbe nop arpl sahf add fiaddl push (bad) push es mov imul into mov lds sahf pop ret jg lahf sbb adc xchg cmpsl jg mul sub mov add mov sub xor rorl bound push aaa in (bad) sahf adc push (bad) mov mov sub dec fwait sub and xor (bad) adc (bad) sub cwtl jle jns push fbstp sbb xor aam cmc mov insb jg dec xchg push jg loop mov inc pusha jg out mov sti xor inc (bad) jg outsl pop xchg ret out jg push adc and jg fdivp mov and movsl xor (bad) mov ror in push jg mov insl shlb xchg rclb sti in mov xchg iret lea jg jne (bad) mov mov scas cmp daa jg cs popa cmp repnz pop dec lods adc fldl mov dec mov repnz push push aas pushf fadds xlat push pop inc mov jg add rclb out jg inc arpl mull jg jno add rolb cwtl imul flds hlt outsb mov mov in xchg addl jl mov (bad) lock mov sbb and lods js sub push das and and fldenv inc jecxz jg push sub fisub jg dec movsb fldt xor mov xor pop add pushf jns jnp jae ror fisubr cmpsb js jmp pop xor push mov inc dec add test mov mov push in add je divl push mov cltd xor inc loopne outsb mov xlat cmp inc jg jnp insb into pusha jecxz jg dec add push jae xor ljmp decb lret dec add imul jne jg pushf incl jg les push mov sarb mov xorl into (bad) lods mov cmp cmpsl sub and pop jl rolb mov in mov and push xor imul sub jmp inc mov cmp out fldt mov fisubr jo jbe (bad) pop ja jg push or xor clc popf jg sbb jg and sbb popa loopne in push lret xchg jg mov lcall out inc push cmpsl mov sub pop sub out jnp stos dec jg add sarl fist mov jbe pop std inc cmp and or repz loope stos fdivs dec imul jne lods loope adc pcmpeqb ja lods jg ficompl in pushf push cmp (bad) mov out and in inc jne inc repnz add ret push out inc and (bad) (bad) push jg mov lahf aas or das enter or mov cmp xor repnz adc jmp mov xchg es imul xor dec xchg (bad) loopne cli (bad) in fwait stc sub mov out xchg cltd inc cmc jg cmp mov cli rcl int mov mulb cmpsl inc xchg sub loop dec sub add mov (bad) jle dec insl rcrl pusha jp (bad) jg sbb xor jg arpl cmp jg mov dec mov movsl cmp or add repnz sbb xlat call jp (bad) jg lods lahf mov jne mov das pop xchg imul fistpll loop rolb sti test lea mov xor loop das ret out dec icebp pushf fiadd jg lea jg sbb push push inc push and jg aaa add cmpsb cmp pushf clc repz and rolb pop mov jg xchg pop adc xlat cmpb mov inc mov inc and cmpsb cmpsl push out fstpl fnstcw (bad) into sbb add push lock or loopne xchg jg mov cmpb pop or pop mov int3 xchg fisttpll das mov repz mov sub icebp ds xchg sbb cmp and jg lods loopne mov scas shrl outsb pop (bad) outsl and add rorb ds nop insb pop dec hlt sbbl std js popf sti loopne jg int3 inc xchg clc sbb pop push out in gs pop mov push push jno popf jg inc sbb xor mov in (bad) jae push jg inc adc push test push popa fld and and add pop mov popf cs mov mov mov sub or imul out push add outsl lock das jo push fisubr mov int3 out dec jnp cmp or add sarb scas adc lahf les add int3 jg push int (bad) jmp cmp cmp mov fbstp popf xchg sub idiv xchg adc cmp scas adc js cwtl mov out pushf rorb cmpsl pop das jg loop mov jg cmp (bad) popa add (bad) fadd xchg nop aas mov fisttpl jg je push sbb arpl cmpsl jg push js (bad) dec or mov jg adc jb jo shll mov jg mov adc adc add mov js call sbb sarl (bad) add adcb mov call sbb (bad) mov inc lds jmp mov mov in out aas push inc push inc adc mov or cmp idivl ret sub or jg inc mov inc rcr jl sub or shl inc sbb sarb in iret mov xchg add ja jecxz out or jns (bad) mov lock mov cwtl mov sub pop scas mov and mov jg xor dec fstpt mov xchg sbb inc fs test lock add pop push add mov or push notl addr16 mov mov pop (bad) repnz dec test jnp pop cmpl shll cmpsl inc jg ss in sbb (bad) std push jg sahf sbb aaa sub xlat enter notb repz int3 cwtl jl mov mov dec aas adc outsl or mov std jne cmp jg sahf icebp addl jbe pop cmpsl adc imul test pop (bad) pop jmp mov add push faddp test in fstp cmpsb mov jg test push lret jl mov dec bound pusha gs fwait pop inc repz orl jl ljmp push push fnstsw inc jg (bad) jns or leave pop aas lahf sub jbe imul mov nopl test cmpsl mov jbe push mov test push pop jg jl push xchg cltd xor and insb jg movsl stos test jmp cmp push dec popf aam addr16 out xor aad ljmp mov mov mov fnsave sub dec test jg push cmp cltd sub or lcall jg cmp push jg (bad) sbb inc jg mov (bad) jbe (bad) fimull cltd push inc and push pushf mov (bad) out mov jne push mov mov sbb sub cmp add cmp jge pop jl sub inc insl mov jg and dec ret xchg jg cwtl (bad) xchg cmpsl jb mov jg mov imul pop jg fwait pop lock adc xchg adc div cld rolb int repnz aam test sbb cmp dec pop mov andb imul lahf jg lret ficoml sbbl and jg test (bad) pop clc jg inc jmp (bad) pusha mov das in lea mov inc sbb mov sub mov jno pop sbb jg call (bad) fidivrl clc inc sub jae outsl jg and dec dec inc push mov insl neg inc outsl aad (bad) sti dec mov ret cmpsb pop dec xor dec pop mov xor pop jg push in repz jl jnp popa inc jg std mov int3 push jbe push jb add push pop dec lret pop lods es adc out add jns lods jl mov adc push xchg imul inc mov jns jnp dec inc adc jg (bad) js ds cmp push dec pop mov jg fildl test sub mov pop ljmp inc push jg movsb sbb jae or aas int jg scas push dec jmp fnstenv jg push loopne iret (bad) in mov or daa sub cmp (bad) push div add and enter fdivr inc or jg mov or scas and test push fs ss mov clc (bad) mov add push stc add mull loope mov shl push cmc dec xor jg fnsave enter jg mov adc nop shl jg pop jge insb dec or sti or stos dec lret loope iret in out pop push (bad) popf gs sti jg xlat xchg shrl (bad) xor or cmp mov dec in mov mov outsb outsl in push and or sbb pop mov pop jle pop pop push mov mov imul mov lret push mov adc shlb or test inc repz jg jae mov and aam jle int and add arpl adc sahf xchg ror imull inc cmpsl dec sub (bad) es pop fmul add pop and hlt sti aaa pop clc dec (bad) cmc mov push dec push mov jg mov add jg cltd jle ja test pop xchg int3 rcl inc dec scas inc jg rolb mov cmp into inc aam xor mov inc jbe mov ret jns mov cmp cld cmp outsl je jno cmp push fnstcw out mov int dec pop les aad add loopne mov pop xchg push xchg lods std scas je pop cmc inc jg push xchg ljmp jns stc clc add sub mulb ret rcrl push xchg jnp sti leave add mov jmp addr16 mov adc ficoml jg mov xlat idivb leave stos outsb lock push les pusha jg in cmp jp fnsave pop jg mov mov dec dec inc adc dec icebp aas sbb pop stos out pushf addl fdivrs pusha lret aas out out loop divb aam pop and shrb shl xchg sbb add test pop (bad) fdivrs ss jbe cmp cli jbe sbb ret dec mov jg arpl pop inc mov es and jg ds stc sub (bad) inc js scas fmuls fadd dec ss sti xchg test sbb push xor call test dec mov adc cmpsb loopne js and jg push adc movl call jno adc and xchg mov sahf or inc daa jg mov or pop bound (bad) xor cmp (bad) mov aad data16 and sub fadd mov sti mov dec jb xchg mov repnz movsl pop mov or pop and mov xchg cli jae stc push sti iret mov jg frstor cmp test jbe or jg mov ss pop sti aam out xor add shl jg and imul xchg adc add out scas cmc pop jg decb fisubr mov xchg xchg or jle push push je push dec dec mov scas push mov sbb imul mov adc mov pop lea dec sub stos inc imul cmpsl popl cmp mov jg data16 adc cli movsl jg sub sbb push out mov pop xor pextrw jg dec sub mov push (bad) or dec ret mov jg clc sub or pop mov fs je jle dec pop jg int repz lret sbb imul mov movsl ss push pop add inc pop jg divl lahf enter sub aas in inc ret loope sahf bound stos add lret outsb mov arpl test pminub int3 out inc aas cmp cmpsl mov jo jg pop cmp mov xchg add fs jg nop and mov jg lods ffreep pop mov add fcompl out insl cli cmp jo stc xchg inc pop push ds ret mov and fnstcw int outsl mov in sbb ds inc js sbb into jl adc popa jg cmp hlt mov fwait stos sbb ss mov imul mov test xchg mov mov mov mov inc mov ja notb mov add adc cmp jg loope sbb insl inc and js pop cmp jns push sbb test pushf out dec jae push mov cwtl dec or lds popf jp jmp bound jg ljmp testl cmp aam jg fistpl push mov mov mov jg sub jge jbe fidivrl pop pop add xchg jb (bad) lahf push cli (bad) (bad) xor fnstsw cmc dec inc imul push ror mov mov ja pop aas test js inc xor sbb jne inc into fs mov mov xchg push inc mov in sahf fstpt insl and (bad) mov xchg aas (bad) lock mov mov aaa lods pop (bad) jns repz inc push push push sbb (bad) std pop adc in mov inc (bad) int3 jg pop sub popaw ret into jg mov add imul xchg fcmovnb pop dec mov or jmp push clc ss dec ja jg frstor mov jp push cmp xchg pcmpeqw jg icebp mov sbb enter pop lds pop mov xchg mov adc xlat fdivrs leave sti popa sub pop (bad) hlt pop sub (bad) stos movl pop jg xchg hlt fmuls jg add stos jbe mov (bad) jl stc les aaa data16 or (bad) cmp mov sub addr16 inc pop mov out inc sti push xor xor fs push std xchg jg dec lods jo popa fisubl pop xor mov jns dec enter addr16 lods repnz fcomps and fsubl daa pop stc insl in or mull lods outsl xchg mov xchg sarl xchg lahf xor cmpsl inc hlt cmpsb mov mov mov std mov push loop jg pop mov (bad) fwait aas (bad) jg repz mov and insl in or inc rcll adc (bad) mov dec xor aas sbb fnsave xorl cs test push jb cli xchg mov es and mov add push mov mov testb adc ljmp jg sub mov out daa mov xchg pop std mov cmp stos (bad) int data16 pop clc add aad pop jp inc dec fdivrl cmp lcall xor pop sub mov xchg imul pushf inc jg pusha lods fnstcw fistp repz adc cmp leave jg ja and jg push jns cmp shrl mov stos mov dec adc test xchg es in jg and mov jmp and jg mov fstpl lcall add cwtl jg incb sbb adc call and arpl mov test mov rol jp mov bound or jg out cmp sub jns aas jl xchg mov in dec addl push aas test cltd gs (bad) mov jg ss xchg cmp mov mov inc jno mov xchg pop (bad) lock jle jp rcrb dec jo jg rcr cltd pop pop mov es sub dec push stc mov in in jg cltd adc es xlat push xchg dec mov inc jg sub cwtl sbb push xchg inc nop into mov jge out ja cmp mov aaa mov push pop jmp movsl xchg xorb pop jnp xchg jne int3 jg fstpt mov mov cwtl push inc setae lret jns jg cmp jb pop jbe and je out inc pop jg in insl arpl inc adc bound xor daa orb xchg jae pop cmp aas enter cwtl scas shrb pop loopne pushf dec cmp dec or jg and push (bad) popa leave and sbb in xchg mov sbb stos jo outsb mov dec ret pop repz fs pop cli adc mov lds imul orb data16 cmp sarl push or adc adc popa xor in out jg mov xor jg fistp repnz fnstsw jg in xor insl or mov outsl ljmp xchg fldcw (bad) movl cld mov jg mov mov pop xor push dec inc stos mov ds ja sarl orl aas adc cli (bad) fwait ja pop pop jo push pop cmpsb mov rcrl push xchg repnz jns mov xor jg pusha push or sbb jnp lock movsb pop sbb mov sub mov pop dec jnp mov sbb gs xor (bad) dec inc push iret sbb pop push cmpsb sahf or jo out mov out ror or sbb jg jae xchg xor cmp add pop sbb in pop add jg mov addr16 jg sub xchg inc lcall jo push mov ds stc cmp adc test mov cmc jg lcall jg stos mov push jg mov and push mov jo xchg inc in jg cmp mov fst xor and add mov mov outsl jnp pop push push mov out and outsl jnp pushf je,pt mov icebp pop mov cmp push adc push sbb sahf inc mov jg lcall jg adc sbb idivl aas jo jae lods js daa movsb outsl pushf in cmp inc mov dec adc repnz or lock inc push sarb adc stos enter sub pop jg out fcompl call dec jg jno or jp fdivs cwtl sbb cmp or pop lcall insl and lock mov mov loope jg or push bound fisubr sahf jmp sub add add adc add adc xchg rorl shrb mov and mov bound sbb les subl mov subb jg fsubp rorb (bad) adc jns jp mov ds jne xchg dec jp and jg and mov jg or pop adc fdivrs jg pop add or testl dec add lods jg bound into jg dec cld fwait adc movsb xor add mov or scas push mov cmp and xchg popa push dec inc jmp jg pusha cmc push lret pop inc dec jg cld sbb lahf pop jg jns outsl icebp push add mov ja adc xor mov cmovb cmpsb sub sbb cli ret and xchg jg mov mul insb fwait scas loope jle cmp stos movq mov adc test gs jb and push and xchg jbe pop jg xchg add jle stos xor push ja fldt and ss sbb mov ljmp clc push mov inc sbb push es (bad) sti sbb stos xor fisttpl adc jg imul add cmpl push push sahf mov icebp mov and mov inc xchg mov mov ss pop rcrl jge inc call jecxz jl jg inc push enter aas cmp adc inc sub mov mov pop mov jg pop andb hlt cmpsb xchg jg stos cmp push lods ret insb jg aas pop inc jle pop sbb jge pop add es loop jae inc lock stos jnp fs mov jg add mov call pop mov pushf mov popa enter aad rcl dec clc xchg jg lods pop cli es jbe jg scas ret lret fs inc aas gs add pop and xchg xor rorl jle and xchg add lahf dec pop loop sub xchg adc jg push int add inc pop dec lret xchg nop mov sub imulb les cmovns bound jg pop mov mov loope fs jecxz mov jg repz stos xor xchg adc mov out inc sub jg cmp outsl sbb adc ds icebp rorl jg xor jecxz das dec mov rcr cmp xchg shlb xor dec add stc push dec pop outsb jle jg leave test dec div iretw ljmp sbb sbb cmpsb movsb push lds mov aas outsl mov mov pop sbb (bad) and cld mov push (bad) cs hlt pusha xchg test ret inc jg pop cmpsb stc mov test js imul sahf mov mov mov dec mov sub pop add roll mov mov mov mov cmp jg,pn dec push xor mov mov adc ret nop push cltd sti mov std mov mov cmc and pop movsl insb hlt cmp aas (bad) inc insl push mov pop ficompl cmp cmpsl sub daa outsl mov popf repz data16 das imul scas jl sub xlat jno int push push cmp rclb repz xor cmp outsl sub loope and int jl loop adc jg fcoms jno aas pop lahf jp test xchg loop or outsb int3 inc cmp sbb in incl aas mov loop inc and inc out jg xor push cwtl jg xchg test test loope jg jmp lods enter jg sti lret and pop jo xor int aas add adc das sbb inc ja aas aad cwtl test push mov (bad) addr16 sar aam lods iret mov adc lret cmp aas xchg pop loop js fildl mov fistpll jmp xor ds roll addl jmp pop xor dec (bad) negl mov inc cmpsl push jg sub dec jb test jo mov scas inc xchg cmp and mov daa aaa pop lds sbb shr dec in mov jg xchg xchg jge dec pusha inc fistp sub iret mov jg or fadd out jg cmpsl jns andb jg fsub ret lods jnp es ficomp out or jbe jcxz or stos jg sub xchg call (bad) icebp sarl mov jae in aas mov add scas jp pop roll adcl lcall jg cwtl jmp sarl int3 mov pop sti arpl jecxz mov insb jg and das mov mov mov jg fucom sbbl jbe repz hlt pop push stos jb fimul fdivrl jg mov outsb sub push (bad) jmp lods ja or jg test mov mov mov test std (bad) aaa xchg and jg scas fistl jg negl mov (bad) fidivrl (bad) push sbb dec inc adc mov cmp add sub and xchg imul dec arpl push xchg ss jg jno xlat cld fildll aas push cs or gs xor cmp shrl in in jbe sub mov cmpsl adc sub (bad) pop add jg mov xlat gs in test mov inc dec subb jg xchg add mov clc mov pop mov cmp fdivrl jle jp add xchg lret addl xchg bound out cmpsb mov jbe std pop fsubrl dec decb cmp or lds pop mov mov xor pushf mov lret and out in js mov cmp enter int mov jg pop push xor (bad) cmc fsubs xchg scas push or jg inc ficoml jg scas je sbb push jg shrb jmp cmp jg mov inc mov rcrb jg mov loope (bad) notl mov mov adc in loopne jne pop jg leave out stos lds cld das (bad) cmp mov lcall inc shl mov and mov pop pop addr16 push xchg jg mov dec jp dec jg pop ret mov das mov out jb inc into inc inc jg sub fistp movsb xchg jg out xchg lret inc stos es imul test cmc test jb mov jmp and mov push movsl jg mov jno (bad) and push adc daa push cltd sbb cmp pop xchg mov fnsave inc sbb cmp jg out mov jg stos cli scas push add iret jg sbb int3 mov adc in jg sti push mov loope jmp nop (bad) imul jno ret fistl cmp jg mov xorl pop or dec pushf push sti in out adc lcall adc aas in xlat jg or (bad) or popl jno dec inc fstl jg mov mov cmp mov pop inc das mov enter scas jecxz add (bad) data16 sub dec in or fnstenv sub test js jg jecxz cs xchg mov mov pop dec bound dec dec insl mov pushw jg imul cld ret mov mov jecxz dec lods push pop push cmp dec das test and bound xchg mov (bad) jo jg ja cmp and push or mov xor imul cltd (bad) mov sbb push cld mov push adc ja sarb adc cmp or push jg cmp pushf mov cmp pop fs jg mov and jg xchg push fstpl dec fdivrl push cmc or and mov in push jnp outsl test js pop jg nop std ret mov mov imul repz jg or les popf cli push jg xor aad fucomip mov (bad) fildl inc jg and popf or popa pop sbb sub jae es xchg mov stos stos ret (bad) mov dec pop xor mov push add jg inc cmp mov jg jae loop mov mov pop mov add scas movsb sbb cli iret cli stos inc sarl push mov push dec es cmp scas inc sti bndldx dec mov cmp lahf jg fsts loope ss push add dec lret jg mov xor jl imul dec fsubs js sbb jg daa incl dec sarb mov add jg xchg jne fwait sahf cmp out rcll popa pusha (bad) jg (bad) int3 cmpsl (bad) ja jg jno andb loopne jg pop stos test adc cmp mov pop jecxz (bad) test pusha pop ljmp add insb clc fldl (bad) jns dec test outsl scas pop out inc (bad) mov js pop sub popa xorb (bad) (bad) aaa xor push mov or lods cmp jl cmc pop ds dec jne jmp cmpb and jg hlt inc pop inc cld xlat adc fcoms cs cli xor mov aad outsl cmp in outsl popf lret rol jb jle xor cmp dec mov jl xchg xchg fs mov or sti jg out fisubr (bad) jl jp,pt popf cmovg mov mov aad idivl mov jg jns cwtl or jg inc xchg arpl adc outsb mov jb pop ret jg xor xchg pop dec ret push inc sub (bad) stc fwait test jne pop lret mov notb inc fbld pushf xor jne adcl xor cli shrl xchg pop insb xchg imul push push cltd enter jg dec sub sarb jno sbb addr16 int mov dec jg mov xor lcall ret sti outsb cmpl in mov cs xchg fs mov imulb push cmp lahf jb jns xchg repz sub out fstpt sbb add mov daa jae out icebp cmp xchg into mov mov dec mov dec inc adc pushf jb jg imul mov adc (bad) jg call push pop and ss jg and cmc mov les aas jns repnz lds cmp pop test clc jae push pop inc mov sti jp,pn cmp jo jbe out or push push enter jge aad in pop jg out dec test cmpsl jo outsl aas pushfw cld adc out push push jmp pop jno jne data16 sti ret enter dec or xorl fistp and inc jg inc and xadd fcmovnu inc test jbe add jg shl mov fidiv loop mov cmp (bad) stc adc adc scas cwtl mov mov pop add push ss cmc pop aam ja mov rcrb int scas sub pop out push adc or (bad) jbe xlat sti cli fwait or add imul inc jecxz jg sub mov jle push es jg (bad) mov stos mov xchg inc pop jg aas ljmp int3 cltd or push jae and (bad) pop idivb sti std mov stos inc imul jnp push movsb mov outsl aam mov xchg xchg scas fist in iret push pop and sti fdivl add cmpsb shrb jg xchg lahf (bad) inc mov jg leave scas fnstcw pop cs (bad) enter hlt dec outsb add clc pop test jns lahf jg inc inc (bad) enter xchg or sub cmp mov jg sub bound pusha mov jne outsl mov ss div mul lcall and push fdivl mov sub movsl test pop xchg in movsb mov dec jg sbb or out fdivs fnsave stos fbstp sahf adc loopne mov std jae pop in mov aaa mov inc add sbb sub fnstcw out sarb out in aas insb adc xor pusha outsl mov pop mov ror push sbb scas andl mov scas push pop decb lcall inc jo lods nop sbb jg push sbb and or sbb sub pop pop add (bad) adc scas sbb cmp pusha add arpl aad leave fprem (bad) popf adc lret push xchg mov pop out test xor jg lahf arpl lahf cld mov addr16 and enter inc mov aas mov lret inc mov out mov ljmp test xchg fwait or jnp push jg into dec xor (bad) xor sub sahf jle cmp push jg pop mov lock jg dec mov lea out stos dec mov mov sub lods js test mov cmp lahf fwait movsl jo je cmp add inc mov inc out xor imul mov cli hlt add (bad) dec out and jg scas mov dec and jg mov movsb inc jno push pop test mov mov aas sbb jge mov aaa pop jmp or fidivrl in cwtl pop (bad) leave aas pop inc and dec or xorb jnp out push mov jnp xor ss dec push or lock clc jg mov orl cs adc add or mov (bad) sub push ss inc sub rcr cmpsl inc scas push mov bound mov jg cmp mov mov push mov xchg (bad) mov mov xchg sti jg dec pop in (bad) sbb mov fldcw xchg jno js fcoms mov outsl cmp fnclex add push sti jg dec fbld shl fucompp inc ret mov mov dec in dec aam sbb xchg data16 pop jmp jg enter (bad) scas cmpsb push add jle mov jns sbb cmp das repz pop pop sbb sbb addr16 cltd cs sbbl movsb or inc std push arpl push hlt or xchg das call jg pop or mull ffreep jp scas push add cld sub dec inc inc fisttp out aad jg jo sbb int3 arpl xor or cmp pusha dec push lret and adc cmp jg and add gs push jg icebp cs jg xchg push in fdivl in (bad) and test jg xchg jl jge (bad) imul push push adcb jno pop in jbe add lret div mov stos adc repz cmpl mov pop sub rolb jecxz jb aas or loopne fwait loop lret or cmp cltd roll adc mov pop enter push push adc fs call jmp push imul mov mov xchg icebp add mov std jg call out jg add jnp loopne mov pusha and stc aaa insl lea mov adc jg in call lods test mov movsb jnp sbb ljmp xchg das cmp cmp xchg jae mov popf jg ds jp cmp and enter and dec jl inc push jg xor sarb arpl into aas pushl pop and repz aad and adc jg nop popf dec fdivrs into arpl xor imul adc cmp sbb lods cmpsb jg lahf (bad) ljmp mov cwtl sahf inc xchg sbb inc cmp mov aas pop bnd popf test aad jg jle rorl pop jnp jg out lret and jmp jg jbe adc test cmp mov cwtl mov jp ja jb out jg pop fdivl pop push xor jle idivb mov inc jg aas into mov popa cli sub ja ret mov pop jle leave (bad) xchg icebp sahf daa lret js in outsl and mov xor inc outsl jg add cmp test imul pop xchg ret or addr16 outsl push adc sub out push popf xlat jg mov mov scas fisubrl popf test xchg int xchg dec mov pushf sahf sub imul push je mov mov or fiadd jg cmp cmp mov (bad) add mov mov outsl sbb jo jg xlat pop das adc sbb cld jns fisubr ret adc xlat mov mov cmp enter mov leave xchg pop mov and mov xorl mov mov push push jg lock add jg xchg or data16 push dec inc repnz pop fwait jg sbb jecxz mov and in ja inc push jg pusha into add adc mov arpl jg inc out inc lret jno mov divb jg (bad) aam lds stc pushf push mov push pop push repz in jb in jns jg push es aad sub xor (bad) jg and in sub xchg scas std fidivr mov jg ret inc dec cmp jne dec pop xor pop mov shr into dec sub out insb outsl jge fidivrl cmp les in adc in push mov dec inc lcall subl lea mov das add sub cmp add lret mov inc mov roll nop dec lea rsm push sbbl les inc pop xor rcrl (bad) push aaa xor dec jbe jg cmp stos dec jg cmp or cmp xchg mov push aam or jo out jg (bad) pop sbb xlat cmpb jecxz out and (bad) jg push sub jg xor imul sbb (bad) pop jle lea mov int3 das (bad) aas jge std jg xchg shrb sti ja sbb xorl pushf mov inc outsl adc loopne sahf cld xchg icebp jns xchg addr16 repnz les sub test sub fs jae mov lcall xor cmp inc imul lods pop jmp fsubs das les mov adc jg jle or call inc imul pop push mov jg sub ficompl mov mov dec push cmp jns cmpsb pusha (bad) xor loop in pop sub add aam jns (bad) outsl fistpl popf mov push fs jg scas cmp pop dec cmp xchg in int inc xor (bad) int3 push aam popa ja cmpsb inc fiaddl jecxz mov pop aas (bad) sbb jne es popa jg push addr16 int3 jb fistpll push or cmp cwtl loopne js pop xlat dec mov ljmp inc icebp inc jg cmp add bswap and mov sarl into in pusha lock pop mov cwtl outsl sbb jg loope sub aas test jne das push fnstcw js addl inc or mov jle pop outsb bound jbe lods mov test mov or loopne and push pushf lret es jge popa inc out mov aas xchg sbb inc jb lea push adc pop fisub and xor sarb jg pop mov lcall mov xchg mov pop ja or pop adc jg pushw ret insb (bad) (bad) jg call add jmp and lahf clc jg inc or jg decl insl adc loopne jg sbb pop push fs addr16 add jg mov (bad) push and push sti mov in psubd and aam ja popf pusha mov dec and inc cmp xlat cltd mov jo fidivrl cld in (bad) std add lret xchg scas jg cld aad incl dec les popa mov jg mov adc sbb movsb pop and inc andl mov push cmpsb lret jno jg cwtl xchg int3 adc xor stos movsl and sub jg mov mov jg sahf cltd icebp sub jg and ss out fcomps jg cmp cmp jle fnstsw bound jns push jl jg ret (bad) popf or jg lcall jg mov mov rsqrtps lea pop pop mov jg les repz add inc push (bad) sarb xchg adc inc sbb lock nop popf sbb (bad) push sub jg xor jns mov ss scas cs inc xchg test cmp ret mov jg lods (bad) shlb inc popa in jg je es rolb mov jg in jbe repnz test add inc push arpl jno leave sbb jo (bad) adc jg aaa js fbld xchg insl sbb je dec sub lret xor dec sbb adc lds push sbb mov mov dec test adc jo dec fnsave test xchg mov leave jg or rclb adc (bad) mov pop jg jl lret dec stos jg and std jg xlat jns push sbb cmp repnz outsl inc mov cmp ret jg ljmp jg imul dec xchg stos jg jb xchg mov test inc push mov dec xchg push push or jg dec insb lea in inc sbb xor jg jnp sahf mov add adc lahf aas mov dec out clc addr16 test and (bad) xlat jecxz (bad) mov mov aam push pop adc (bad) push jg or add cwtl out pop jg lds xchg inc jo rorb adc and jae add mov gs mov in jg pop pop xchg fisubr jg cmp mov clc dec aas lret push jp test cmpb xor inc mov jg cmpsl xchg movsb es and and xor jg or gs and jns mov pusha fistpll inc sub or jg (bad) arpl ja hlt lods jg mov loopne jg dec push jl or mov pop pushf add add leave addr16 stc sti and lea sub pop cmp mov and mov inc jo mov or aam cwtl loop,pn jg push leave dec push sub mov das push pop cli mov and mov repz jae outsb les xor dec daa pop push (bad) dec or loope mov push incb push inc jno mov and or int3 xchg mov subl mov xchg jg xchg std jg pop and jg aam insl mov mov mov mov or or xor fwait clc mov lods dec mov mov push aad or fisttp daa lock pop das add test cmp jg es push ds mov jns inc fadds das jne ficom jp ss out inc pusha out aam (bad) jae and aaa addr16 insb adc sarb xor ret jg or or push inc jg mov pop fs pop mov mov je cmp pop es outsl scas test mov or inc (bad) fsubrs pop sub mov sbb ror push sub jg jmp cmp xorb mov mov mov stos stc inc dec mov aas xor and (bad) mov int3 inc scas subb push dec roll sbb add cmp xchg adc push nop jle ret loopne jg sbb lods cli js mov inc mov xchg push push das inc loopne jg fldenv jo inc setp hlt sbb push jg (bad) push aas test xchg or out push cs popf cli push mov sahf aad pop pop push jl inc cmp lods (bad) in push sub cmp cmpsl (bad) imul or add cs inc mov ret nop jns imul jg call add xchg dec jbe xchg xchg js dec inc adc lea leave scas mov jg lods push ret xchg mov lea pop mov push push iret pop and jg lahf xchg pop or notl rcll mov js out sarl test es jp pop cmp xchg sbb imul fnstenv bswap scas sub test outsl jp mov or cmc popa cmpsl jecxz aas cltd push aas mov xchg dec xor xor dec dec jg fwait out sbb ss call (bad) in mov fstpt ss mov out pop sbb rclb cmp xor jg out pop jmp cmc cld sub nop mov loope out cli icebp mov arpl dec stos mov fdivs and lahf sub das jo add mov add jg push fwait adc adc push mov jge sbb mov out push lds mov jg inc push xchg cli mov push sahf das push inc lods inc (bad) fisttp fimul or insl cli loope and scas jo std push ds and push in jecxz imul and and outsl clc into cmp inc movsb aas mov pop sub and (bad) sbb adc xchg and jb imul subl lea xor mov in or xchg mov aam push scas xchg lret pushf (bad) imul adc or and in popa leave mov shll push jl xchg jg lret push cwtl add stc mov mov mov das mov sbb jg and dec push jg pusha aad mov push and nop cmc ss sarl adc leave jg mov rclb jne gs mov insb lahf mov push out jg lea (bad) jo add xchg inc cmp stc cwtl adc push pusha jg cmpsb fbld xor mov out shrl (bad) dec sub lock fisttpl sub inc fidivl cmp aas rcll jge mov roll sub cmp cmp fdivrs fidivrl xchg sbb and js mov adc insb out mov xchg pop cli mov or mov push jp or sub jg icebp cmp ret lret mov cmp (bad) jb xor dec pop pop aas cmc xchg jg jb,pn nop mov cmpsb loopne inc repz aaa outsl icebp or lock ret mov dec ja (bad) repnz (bad) push out mov jg,pt pop mov pop push pop jg cmpsb xchg cmp cmp jg mov and bound cmp jg movsb inc jmp mov and je fistpl lds fnstsw pop cmp repnz (bad) jg dec repz cli ret ljmp jnp addr16 test inc push mov pop sub mov inc inc nop (bad) lock add mov jg xchg sbb inc xor jg jbe aaa lea je jmp mov mov je mov incl and insl and or adc lcall and insl sub jg xor inc daa jg xchg clc ret flds mov jb sbb test dec jg jl (bad) div mov push push lods cli xor (bad) fidivrl push add arpl imul cmp ss push mov jg js adc mov stc aas call lcall jg test addl aam jg add sbb inc mov leave pushf rolb jg jae frstor pop mov mov in push sub jg iret sti push jmp cmc dec loopne test inc cmpl iret cltd mov add aam sbb dec test sbb ja pushf xorb (bad) jne mov (bad) repz cltd iret adc add xchg leave fyl2x xlat popf jg mov sti mov xchg addb adc addr16 and aad mov lds sti (bad) clc outsl int3 jns cmc cltd mov pop movsl xor je and xor inc pop adc insl push jecxz rep mov xchg imul notl jp cmp jg lret ret stos aam in pop pop sysenter mov push fstpt neg (bad) dec and movsl jg subl or shlb jg popa dec push mov or inc icebp and adc out loopne jg cmp in enter jg addr16 pusha stos test or fisttpl inc xchg jno mov mov or xor (bad) cmp pusha outsl gs mov (bad) (bad) cld jnp inc dec push stc mov sub mov xlat ljmp jg mov pop jbe rcll inc cmp dec xor cvtps2pd test sub jg sub fs cmp sub fcmovbe and out mov ss sbb shll sbb or dec inc gs push popa adc xchg xor aad mov push pushf in (bad) mov jmp pop push xchg jg adc into push jg scas adc inc adc mov scas adc and or mov jns out cmp jg push jle jmp sub outsb xor jg jo aam dec xlat mov lods fistl mov or xchg insb ret repz test int jg clc push pop mov cmp jg sbb aas xchg cmp mov in jg push stc push lds cmc or dec pusha scas jg sub loope push leave push add rcrl cli push xchg push sbb (bad) mov mov jg cltd or jo jle imul jg scas mov mulb mov jnp push and cmp loop das sbb mov loope cltd dec arpl movsl shl stos jg mov imul fucomip int3 and dec sub (bad) dec inc adc xchg pop fildll pop inc fstpt cmp xchg insl pop jg (bad) bound sub or ret test out adcb jecxz pop cwtl fcomp mov lods or inc popf jbe pop mov mov fidivrl fs sub xor jb xchg inc sarb shr adc cli aas mov cmpsl testl (bad) popa jg int3 ficompl xor fstpt or xchg cmp dec mov xchg enter sbb testl (bad) xor repz cmovb dec lret jp inc hlt or xorl cmc adc add mov jge orb xchg push or push adc sbb dec and add mov sbb sbb inc ret mov or imul jecxz nop sar xor inc pop lea (bad) out add xchg (bad) or out mov xor pop punpcklbw mov mov mov cltd mov jg daa jge inc jg jae movsb jo stos sbb out pop mov jg sub movsb and sarl pop cmp mov sub arpl movl movsb mov inc insb mov cs sub xchg cmpb ret call jnp pop xor jae mov fnsave and mov aas mov sub mov inc fwait jg imul in imul jg data16 out sbb xchg jmp add dec idivl movsb jg jo (bad) in jg pop sub cmpsl inc pushf or adc jg mov push push bound jg pop xor sahf pop fs jg dec frstor mov inc repz (bad) idivb push push pop mov shld adc imul leave mov ja xor or jmp clc sbbb adc js stos leave outsl sbb add pop mov scas pusha sub mov stos pop add jg aad dec shll (bad) in mov loop push mov add lcall ja pop push jg xlat mov imul inc test xor jg pcmpgtb xlat fcoms mov sub les fsubrp mov jg call movsb adc icebp pop loope pop xchg arpl js cld push scas aam data16 mov xor xor lock (bad) pop dec pop dec mov jg loopne repnz lahf inc jg test jb out js add nop sahf and fdivrs xchg mov mov inc push jb fildl adc jmp mov dec and push add scas icebp xor sub sub mov mov sti (bad) dec pop outsl movsb or jg pop add into test jg in std push mov push pushf jg sbb ret dec jne pop int stc xchg lret fiadd mov aad out dec imul push sub in sub mov mov jg xchg xor jg lret mov imul pop jl ja adc push pop aad lahf xor iret ja add and mov fsts mov adc sbb sahf sti ljmp daa xchg nop xchg mov or mov adcl xchg fidivrl lret testl push jle ss cld mov cli gs mov add (bad) fnstcw cli mov cmp push jg push or outsb mov cli jp add sahf out jg add mov cmp xor adc (bad) mov stos je cli ret or dec mov aas aam dec push xchg js jae pop cmp inc jmp movl aas dec (bad) pushf fistpll gs jg xchg xor popf inc lret ja loopne cltd lret dec mov adc adc es pop hlt push addl fidivr or lods pop fsubs mov outsb shrl pop std jne out push test sarb add lea lods scas sti mov mov push mov rorl stc imul pushf add jg jl sub sbb mov (bad) or mov dec push inc xchg es cmpsb jg std mov mov fstl jg push pop jbe pop add jg add and inc mov jg test sub mov and mov movsl inc in hlt jle push mov dec or in jne mov ljmp push fildl cmp jg xchg outsl fimul popf mov cmp je pop add push out xchg xchg ds cmp (bad) test ficoml lds mov mov mov (bad) mov lret cmp ja je xchg movsl mov clc push pop add mov cmp sbb pop push inc sub adc dec push jl aad (bad) in xchg and cmpsb jp mov lods lret sti inc xor loopne int3 push nop cwtl dec pop sbb loopne mov sahf imul in inc sti push test test pushf add dec iret jb int3 xor mov push cmc fnstenv int3 pop in sahf test inc or jg fcoml mov mov and sub aaa lahf inc jne imul inc lods pop cmp mov addr16 in out jg jae add lock mov iret les adc mov (bad) adc out mov (bad) or sbb ret push push xchg push mov stos dec mov (bad) imul xor jne jae sub incb test ss outsl inc or mov pop push xor test push push adc dec jg mov jg and ret popa mov and std clc negb add mov fcmovnb pop pop dec or mov adc sub cmp mov dec push xchg adc shrl mov (bad) cmc or jg sub and xchg jb roll (bad) ds andnps mov jns and out and ss fiadd insl enter movsb test push mov dec xchg or adc jg push (bad) and hlt sub xor push stos mov jp dec arpl push dec inc cwtl jecxz jg scas fadd subb pop jb je jo push mov insb mov insb inc cwtl jg ss dec aas xor repnz cmp test pop cmpsl jg fsubr cli mov jg notl arpl dec add push int3 stc jg xchg dec sbb xchg jg cmpsl ret leave (bad) mov scas xchg shlb sahf inc inc inc mov iret cmpsl scas mov les jns cmp jno xchg jg sbb ss inc cltd pop or rorb fnop push das movsl cs jg stc repnz pop mov jge dec scas mov aas inc clc xchg test xlat stc jg shlb cmpl mov popa mov iret imul cmp ja jb push fndisi(8087 sub pop (bad) int3 mov jmp aas mov push mov out (bad) push in push fisttp lds jg pushf enter lods stos loop mov sbb into sub aas cmc test jg ret or xor aad scas lahf jbe adc sbb test jl jg jecxz fmull test push add arpl jne loop dec sub cmpl ret jg jnp test lea adc pop inc pop (bad) aaa ror xor cwtl sub sub and inc xchg dec arpl xor sahf les addr16 xor add cs divb cwtl out or enter ja repz inc dec repnz mov fsubrp imul cmc jae (bad) mov outsl xor mov in insb add jg (bad) dec and mov es pusha adc xor aaa popf and mov dec xchg mov pop insl jg mov or xor mov rcl adc sarb int jecxz popa or and scas ret or push data16 mov pusha dec lods push jbe int mov test xchg mov je in scas xchg jno stos cwtl lods mov pop jmp mov sti ficoml mov mov mov daa add outsl stos (bad) xor stc ffree movsl mov inc xor sahf jg out rorl pusha insl mov xchg inc xor dec (bad) cltd mov int3 xchg xchg jg inc mov hlt jg jno movsl (bad) mov mov (bad) adc cld pop scas ja aad mulb mov test addr16 leave int3 jle xor lds or mov hlt outsb (bad) mov (bad) xor or int3 inc hlt jg sarl pop outsl mov jne jg mov pushf adc mov popa popf std dec jae push sub aam jle stos repnz sti dec sub scas fdivrs popf (bad) fs mov aam xor adc jg (bad) mov mov dec std mov xor cmp xor lea mov jg xor shrl mov (bad) popf and lahf rcll xlat mov pop inc aad push negl xor subl aas and or lock inc mov and test inc jg repnz lret pop cmp out aam push sbb jl pop pop dec les xor pop add mov jg aad adc push mov fwait cmp outsl lret (bad) mov sbb or mov jg push adc or dec orb jg test add xorl lock cmp in les mov aaa test and loope mov fidivl leave cltd (bad) sti or dec ret pop mov cmp cmc pop and iret cmp cmp scas mov sub jno fcomps inc push adc cmp and fdivp jg aas adc inc pop dec in mov jg add cmp xchg subl mov rep jp and add sub mov inc sarb mov clc aad mov out (bad) mov sbb jmp and call sti xchg mov xchg jg,pt jp out push or mov pop mov dec push daa xchg movq or inc push nop mov mov add rcll xlat addr16 jg fwait cltd int3 stc or int mov jne sbb test sbb por lcall push mov jns cmpsb (bad) or pop push xchg das cwtl std out xchg jg rorb and dec outsl mov jmp mov sub outsl pop popa xchg cmp mov in out lahf jae jg inc lret iret bound xor call mov jno sub push icebp dec add movsl notl cs outsl test mov jg dec cmpsl or push ss cltd lock pop rol jg daa jno in inc pop dec jg mov pop aad (bad) mov lret push mov mov jae push push mov push shll dec fs ds std hlt fdivp mov jae aam (bad) cmp push add ret or xor pop push cmp nop adcl push jg mov jmp mov xor jecxz xchg or or jmp out mov ss lods arpl or jg adc adc outsb cmpsb out jg shll jg lods add jno cmp pop jbe add or mov add cmp gs inc mov inc xor and sahf mov jg dec sbb jl dec inc jg pusha pop insb addr16 fdivrl add pop dec xor fcoms mov dec push stos fiaddl adc and mov orl (bad) aam mov sub scas cli je aas push and fsubl adc mov (bad) fs xor jg hlt mov jg imull sbb outsb popf mov pop in pop out mov popa pop js pop inc mov mov lcall mov mov ljmp push jg call fcmovu mov add dec jg mov scas push mov sbb loopne (bad) cmp push inc fdivrl jecxz add sbb cltd mov mov add sti mov cmp fs mov jg xchg rcrb dec ret add fs jg into jl mov xchg popf jg orb ret jg push jecxz insb mov in cltd push fmull sbb pop xor ljmp subb cmp lea or xchg pop (bad) dec cmp aas fs lds jg push aam jg (bad) scas jecxz sub pop add stc jg or idivb and cs aaa mov dec cmp (bad) or mov lods pusha and movb test push jg imul cli add data16 sarb stos or jg and frstor jae cmpl roll sbbl int3 mov adc sbb daa pop mov push test pop mov add cli aam hlt stos mov dec push xlat sub push loopne (bad) dec fs in cmc mov mov and cmpsb mov and arpl jb (bad) sahf xchg pop or or push cld jg loope mov (bad) jae mov jg mov add and jg xlat idivl (bad) pop outsb dec push ss js insb jg push clc fwait pop sub jo pop jg xchg jnp sahf pop xor imul aam jg add stc sarl (bad) jl xor mov mov dec iret je jg jecxz mov jg inc ret or (bad) pushf push cwtl xorb outsl dec daa fnstcw jae shr fwait mov in mov cmpsl mov movb add loopne jmp popf jns push push jg add jle imul jg gs mov shrb dec leave jmp add loop pop mov outsl sbb js call xlat cmp jg leave rclb jl icebp push add into loope jg sub (bad) int mov xor (bad) or cmpsb add and push in jg xchg movsb outsl pop icebp inc cmp jg mov sbb jmp mov fstp insb add jae outsl and mov out or pop pop xor inc mov sti push cmpsb jge xchg jb dec sub mov xor sub cmc scas and fildll push addr16 (bad) movsb icebp jecxz mov loopne jl aas sub movsl dec std or mov call jg clc gs xor jns jg fdivrl sub and add insb push or and aas into jg push fwait mov jg cwtl pop cs repnz jg out and inc sbb pop inc push jmp dec movsl mov cld or fnstenv jg sbb push jp push jg je js inc or icebp jl dec outsl out rolb repnz mov addr16 pop jo nop dec scas scas add inc xchg pop outsb int xchg sub push mov out add sbb xor pop cmp mov jg fisttp js repz dec repnz mov mov push jg clc jmp (bad) and jg arpl gs sub test idivb inc adc jmp stos dec sub rorl pop xchg les loop mov dec lods dec pop fwait mov loopne in fstpt mov sub sub jg mov add loope jbe je lret or ja sub xchg insl mov cli into outsl sub pop jae jmp or iret xchg (bad) mov insl pop das pop jo mov jo inc cld in ret inc push jg pop dec adc inc jg mov mov aas je cmp or out js ret mov dec aam cmp inc xchg movsb lds mov inc dec shlb leave push or jbe jg jp push jle sbb dec cmp mov mov dec (bad) jb imul push mov lcall adc je rolb inc add add xchg cmp xchg mov int pop jns or lods dec imul or xor outsl mov les ja and stos repnz es test adc and addl add aas cmpsb lcall jmp stc mov mov inc jg mov sub data16 jo mov cmpsb push dec jg mov sarl pop push adc cmp push jg cmp mov or popa daa sub lret std add sbb pop xor sub lds add testb lcall push inc lock test leave adc mov add cmpsb insb mov dec aas xchg in xor and pop jg repz jbe sub in int3 sub in inc cmp notl ror insb test jg cmp mov lods pop xchg cmc loope push imul fistpll call nop in inc cld dec push inc add mov jg xor push mov jmp xor jle pop lods dec add (bad) not xchg into jg dec or ja mov int les (bad) push mov push ss inc xor mov decb mov rcll (bad) out adc jg jge jns sub (bad) jo cmc lods por jg es mov xchg and or iret stc jg inc jne or or jg jmp lcall sbb pop and cltd inc (bad) and ds ret aas add dec cmp cmp fldl mov je,pn nop mov mov imul push push push jg fwait int push lahf mov daa mov sub sbb cmp idivl xor adc test inc and xchg pop xor mov sbb xor rolb scas pop aas pop xor inc xor roll jnp ljmp sti xchg and out jmp add inc test rcrl xor push lcall repz lahf push jecxz das and icebp aas orl mov push jg dec lahf ds pop sarl fwait dec push outsl jnp loopne ret lcall addr16 pop rolb xor sti sbb std or into test (bad) popa lret jae cmc mov dec xchg subl mov xor xchg pop mov mov leave inc ds xchg mov sub dec setl hlt jg arpl add sbb mov add lods jg dec add sbb daa jg les pop (bad) push jnp jmp movsl aas pop xchg daa leave arpl dec push jecxz psubd mov sti int (bad) mov push xchg rcrb ret gs or dec jg arpl mov jg out mov loope jg xchg push ret inc sbb jg test and (bad) jg push mov pop and jo and mov mov mov imul test push add ret out lret jg popa mov adc mov addr16 jg js mov mov push lret inc add xlat sbb fidivr mov (bad) sbb pmulhw dec sub out jg (bad) cmp push cmpsb cmp pop imul loope jecxz pop jg add data16 mov arpl pusha sbb test jg pop mov push scas fwait ja xchg scas outsl outsl xlat sbb cmpb pop mov mov add int outsb sti cmp movsb lods lds xchg jg push dec movsl cmp pop sub out jg,pt loope xchg movsbl fucom les jg lods and scas cmpsb jg jbe test js cwtl push mov stos inc or jge mov std jnp dec jmp xchg push insl sub fildl mov dec hlt dec pop pop dec stos int3 and mov addr16 push lcall mov popf xchg mov xor jg push fistp jg add test sti popa lock jg and repnz imul inc sarl mov jns push arpl call push adc js test lahf jge mov jg cmp into imul mov jns fbstp inc movsb jg mov pop into jg inc jae sub jne jg xchg (bad) adc out add arpl popa sub movzbl xor jg inc mov inc dec pop pushf jo loop ficompl dec sti (bad) incl bound clc imul jg jp push jae jg (bad) leave repnz adc inc cld mov jg sbb mov pop fwait jg popf (bad) leave xchg push jg adc fs xchg and mov outsl fstp mov gs mov adc push (bad) fidivrl jns mov in inc fistpll mov ja or movl sbb mov dec mov repnz leave std (bad) sub push jg push pusha insl mov fcmovu jbe sti ds adc add jecxz cmp test inc incl jg repz jmp (bad) sahf pop out pop ret jbe ljmp sub loopne jg in notl jg test (bad) into aaa jns and sti jecxz sub push pop daa pushf sti rcr pop push lret xorps jg mov xchg pop mov jns test loope add lahf pop out jg sbb xchg aas fcoms mov inc mov jbe and test fild add (bad) xchg (bad) aam test jecxz shl mov ret sbb and imul xlat add movsl push pop das icebp nop jg popa mov xor cmpsb xor jg fsub inc adc repz imul pop xor mov test push cli push jae leave jg cltd pop popa roll push jbe fistpll cmpsl aaa pop faddl out aas lods pop jp inc cmp mov sbb sarb cmc test bnd mov mov aas aaa xchg icebp dec push jg inc mov lret mov cli jg mov mov outsl push inc repz testb in mov aam mov dec jg loop,pn icebp mov stos jg jb (bad) aaa mov (bad) mov sub repz lods mov mov jg fisubr sti fsts lods enter stos adc jecxz (bad) rcrl and test mov or and iret adc sarl dec push pop mov adc pop sbb add jg orb add mov es iret fdivrl ja sahf cmp (bad) stos out dec aad (bad) pop bnd jns dec sar ss lret bound int xchg xchg and and (bad) ljmp jno fdivs sub pop mov inc cmpsb (bad) lret sbb or sbb data16 rorl jmp fyl2x jg xor jnp pop sbb outsl xchg inc lea ljmp jg dec scas mov jg xchg mov ret adc cmp mov leave das pop ds jg aad popl dec inc sub rcrb pop pop aam cmpsl test and mov jmp sarl push (bad) push andl in aas mov test int jg data16 xlat pop cld mov jg sbb mov popa ret cmp cmp add ja addr16 idivl push lcall decb cltd stc push sub xchg cmp push xor add sbb test jg cld inc addr16 aam inc xor outsl fiaddl adc jg add mov (bad) dec jb sti test into out cld push cwtl scas push jg scas add aaa aam sub lock pop cmp outsl (bad) xor jg sahf cltd clc fiaddl mov xchg lahf and dec sti xchg cmc push leave lods jo notl dec push fistl ret dec loopne (bad) dec xor mov sarb outsb das aas (bad) push mov sub pop jg mov xchg in mov cmpl or mov test mov jg movsl push sbb (bad) (bad) out in dec es sub adc outsb mov out push je jg fs loopne (bad) (bad) jg or jmp outsb pop jg mov out xchg and xchg sahf sub cmp fdivl jg jno and imul jg sub div ss jae inc sbb js jg pusha in and jg push out jae stos mov and xchg fnsave sub ds jmp sbb push lds jg mov insb daa jg push test out mov aaa jg mov lret cltd pop cli jg test sub jg sub jns dec cmp pop jno iret mov xchg pop cli push push dec mov dec int3 mov jg icebp aad mov cmp sti movsb xor add ficompl sub ret in insl ss add dec xor mov push jecxz es push push xchg scas sub jg shrb je nop sbb inc lock push ret leave jg xchg mov aaa xchg xchg jg out lahf mov (bad) jae sti bound mov dec adc sbb aad mov ret jg jle stc dec mov rcr xor push divl dec mov es cmp sbbb xor dec add gs out or mov pop add icebp stc mov pop ja add shr fs add cltd pop hlt scas stos sbb pop stc mov loopne cmc sbb push jg iretw xchg fiadd adc mov inc mov idivl jecxz push dec lods jg movsl push mov es jg sub imul jg mov adc lret xor cltd jg jbe jno jecxz jg,pn push inc mov xchg or and scas dec pop inc stos mov mov sarl clc subl jg mov sub cltd mov pop sarb jp cmp and mov sub repz xchg aas jg pop sub std xorl dec jnp xor or pop dec data16 pop mov add enter aam xchg xor pop dec mov xchg js push jg or sahf ds out iret jg cmp sbb sti jmp sub (bad) mov je jg lea mov mov jg cmpsb sbb (bad) or pusha mov test lret jg fsubs jg std or cmp pop cmpsl jg pop nop pop rolb jg mull lret xor daa in insb inc inc mov jle dec or pop jmp mov jg cmp sbb mov stos ljmp jg (bad) cltd and pushf pop (bad) xor jnp adc jg push in push sub dec jg test add adc xor mov push or cmp jl lcall jnp and dec shr add add xchg lods inc add pop jecxz mov sbb mov js test outsl mov mov xlat lahf out in cmp imul aas jl pop sbb aad push (bad) bound add push and (bad) fnstsw or fs (bad) sbb xchg push adc ror shlb js or jg maskmovq fwait jmp jge pop mov mov cmp cmp add aam pop push xchg xchg mov (bad) adc loop jg pop sbb jg adc inc sbb xor adc repz test mov outsl mov cmp cmp popf cmc inc fcmovbe (bad) stos jg mov cmpsb jg sub lahf sarl fimul mov les stos cmpsl jg pop fisttp (bad) fnclex jg sub xor jg xor pop jmp xor jl daa jmp arpl pop decl repnz mov mov xchg inc sub mov subl jmp movb inc xor jg mov bound push push jmp mov jno jg ljmp mov add dec (bad) jnp jg mov sar mov pop cld mov push pop dec lret jg cmc sub xor inc movsb (bad) das xor fcmovbe jg jo stos in push (bad) int shlb dec mov iret inc adc test in or int3 sub sbb lea mov mov xchg lcall jg adc dec out jg cld dec and mov cmp inc xchg mov fiaddl stos jg pop ds js push (bad) rcll or cmp outsb pop xchg jg lret xlat mov inc xchg jg lock push es stos lahf lea aad inc or adc dec push xor popf movsb jbe test int3 lods cmpsl xor lods aas inc mov imul push jge xor push out push jae outsl aam adc jg (bad) push cmpsb ja out out pop int3 jge push adc sbb or push data16 jg (bad) ds jg jge fadd (bad) imul jg dec shl pop test (bad) xor mov push mov jg cmp stos loopne add sahf fcompl mov dec ret shlb pushw lods in scas popf cmp inc subb sbb (bad) cltd jecxz push fild sbb insb jg pop mov pushf jg jb nop mov addb shrb (bad) push sub pop scas bound jg mov js mov je inc cmp jg scas jmp imulb insb mov inc jge mov mov int ret jae jg scas (bad) sub mov jnp leave sub mov cmp outsb ds lock pop es test cmp sub dec in cmp jns and pop cmc xor or aad push xchg pop push movsl jg pop lcall push mov mov xchg jg xor inc push sub nop jg lahf loop (bad) test mov mov mov mov stos lcall cmp popf sub inc in and jg out pushf add scas mov mov mov cmp fs add or xor test (bad) aas sarl lea mov fnstcw inc jl cmp imul inc inc or push inc cmpsl out pop push repz jbe mov push pop xor xchg pop cwtl lret or sub mov jg cmc pop xchg inc and fidivrl adc outsb push fisub jl incl stos xor bound repz lret cmp xchg int popf out mov jg mov xlat (bad) testl mov pop dec mov mov pop add ss xor cltd jg push push mov pop mov inc mov mov cmp push pop lock xor or fldcw sti jg rorb sub push jg lods cmp fcoml jg xchg push jecxz bound add jae pop imul fcompl out or pop or mov sahf mov lret jg scas das in movsl clc loopne mov (bad) je add or int3 mov ret cmc lahf inc (bad) mov into dec sub dec jg subb jg sbb cmp add jg popa jae mov iret pop loope jg mov xchg mov fbld dec add pushf or popf aam movsb test inc bound push xchg dec fiadd jns mov cld imul aas mov adc jp pop jecxz out idivb mov dec jg xor adc test mov jp jns cmp cs jg les dec add cwtl cmp scas ror js jmp xchg ror push dec xchg dec int jg dec sbb dec mov aas aaa repz lcall mov dec mov mov iret pusha push hlt jno sub test push pop inc popa jg rcrl adcl adc cmp arpl jg jmp (bad) mov sbb dec jae pop fdivl fcomps mov jg add add out cmpsl dec sti sbb xor sbb arpl std loop shll sbb fmulp xchg jg or push jmp push adc shlb rorl addr16 mov into loopnew (bad) cmp jecxz jg notl pop incl cwtl movsb test (bad) loopne add out es xor xchg into nop pop jnp mov pop ret fidivr (bad) mov fildll jg loopne cmp iret fbstp adc jle jo nop pop jge cwtl out stos fsubs test sti jns pop int3 arpl leave (bad) jg (bad) adc lods xor jmp cmp push sbb jg sub iret mov jns aas mov jge cmpsb cli inc inc outsl pop jg (bad) daa pop arpl sbb or adc jg jb jmp lahf ret cmp cli sub ljmp cmp sahf cmp inc adc jg add mov and adc or ds mov pushf (bad) push mov mov (bad) icebp repz sub jg jmp xor jg sbb pop loope mov test je push inc jg jo lea scas imull mov push cli xchg in jecxz xchg sahf pop outsb iret lret or mov inc sbb arpl nop add arpl and (bad) stc lret es jg out (bad) inc cld or popa jg pop insl imul repz mov cmpsb aas push sub into cs daa mov cs or mov adcb aam lock mov xchg dec xchg (bad) outsl aas fsubp push dec add jg scas icebp pop (bad) sub pop mull jo pop stos sub cmp int3 sti outsl adc mov outsl enter or cmp sbb mov (bad) mov jg jnp jl es mov lret pop test sub fdivrl pop jge lock (bad) jg iret jl push call and mov mov movsb out mov faddl cmp insb lds pop mov inc jle in push rolb mov cmp je out mov sbb pusha pop jg xchg mov mov jl jns bnd mov data16 mov mov and add popa dec jg push ffreep mov int3 inc jl out push lret lock push jg xor ja mov jg fwait sub or mov out sbb dec jg fist outsl jg in (bad) pop push xchg xor std jnp pop icebp mov pop xchg in xchg (bad) jg and pop jg mov mov aas sub fstl stos and dec mov mov nop push je addr16 imull jg int pushl mov add mov ljmp xor xor pop or mov hlt fiadd adc nop cld mov xchg mov pop test arpl cmc std cmp sbb push out inc push jle ljmp inc pushf leave imul pop sbb or (bad) jg pop test lret fwait xor addr16 mov sahf (bad) (bad) loop xchg inc int dec insl sub mov pop or psubq cmp lahf iret (bad) jg pop jne push cmpsb sbb ja dec outsl dec movsl std or inc push call xchg sub icebp subl pusha popf pusha (bad) jg shrl cmp jno pop sbb ss inc sarb jbe les in test mov ljmp jo push sbb mov test xchg aad pop mov mov inc sbb and jg lret cmp sub dec jl push inc xor jg adc inc insb jg dec jmp jb ja pop cmp mov adc (bad) mov push mov decb sbb in mov popa push bound (bad) xchg mov gs push mov and imul adcl jg fimull enter xchg jg sbb mov pop hlt aas (bad) jmp fs xchg cltd jg insl inc js movsb das test sbbb or fs arpl test pop sbb dec or mov (bad) sub sub lcall inc ds jg xchg pop (bad) mov jg subb sbb rorb addr16 aam xchg mov loope jg (bad) insb (bad) leave (bad) roll popf in jg pop in mov push (bad) mov and push lahf fs cmp mov inc jnp pop fdivs lods or and rdmsr fdivrl adc aad jo inc in lds xchg sub mov (bad) fnstsw and push sbb orb lea fldenv jg mov scas inc les loop pop and jg popf addr16 mov mov dec push jmp xor mov push inc (bad) into stos jg stc pop push (bad) std test out cltd inc ja pop mov not clc inc mov add in sti notb jecxz lods stos inc jg daa sub jg cmpsb push inc inc cmp inc out dec cmc shrl push and test pop cmp lahf inc dec nop js jp outsl std sbb xchg jl mov je imul sbb popa fstpt add movsl xor jg into fcmovu cltd xor pop popf insl xor aam xor push mov pop jmp (bad) xchg jecxz cmc jl mov sbb popf adc loope jg pop sub div dec mov (bad) jg sahf in push imul (bad) jns or insb outsb enter dec pop int nop es cld jg xchg hlt insb dec adc mov fcoml stos pop sahf mov popa jg sub int3 jp mov pop clc loope jmp pop mov subl in lret test iret insb mov (bad) (bad) aam rorl jg repnz cmp popa pusha movsl jg mov push inc jg jns adc in ficompl cmp pusha ret dec jg lcall (bad) out out lea jmp mov jg addr16 add in and jg sub fiadd lds into xchg lock in mov xor pop pop jp (bad) xor ja mov daa and sbb imul loop mov andl fcmovnu xchg jg leave hlt dec sub fdivrl sbb add cmp adc stc jmp ljmp mov repz inc in or test lea inc (bad) xor cmpb sub dec jo mov cwtl lods pop popa pop mov fcompl or ss insb sub or in icebp sub or pcmpeqw cs insb jg and (bad) (bad) sbb pop jg ret mull jg jle sub sbb add (bad) push mov outsl pop mov jg adc (bad) (bad) pusha jmp insl push out push mov mov les inc mov inc push lahf jne outsb imul sti pop lret mov and sar fwait notb movsb mov fidivl sub pop movsl dec mov and xor mov push sarb cmpsb (bad) clc push pop jne add dec jmp js cmp inc lods aam lcall pop jno test inc mov shll int3 jg cmpsb pop xchg cmp inc outsl jg out dec sbbl push jg push nop call jg inc lea imul enter (bad) mov jg sub aas sbb push jg insl mov popa xchg mov mov push inc push lahf (bad) jbe xor in jge mov pop aam (bad) aas jnp daa loop cmc dec movb out adc cwtl sbb out cmpsl sbb pop and inc inc js ret jmp scas (bad) mov add inc jg mov cmp in xchg mov mov jl cli scas repz sub mov jg fstpl jbe fcomps pop add fsubr jb hlt sbb fsubs fisttpl rcrl mov loopne jae sbb outsb jg test out subb cmp (bad) pop mov lock sub scas lods add test lods jno aad push jg or and insb jno nop and xlat gs roll push jne mov jg popa mov js scas cmpsl dec cmp mov es repnz or leave jg pop insb shrl das aas int3 aas cltd imul and xchg ret push shlb cmp mov and js dec jg lock xor mov repnz daa out xchg (bad) jg lret sar cmp mov int jg xlat popf mov ss pushf sbb out pop jg xchg (bad) cmp lea mov ficompl leave sbb pushl xor cmc xchg pop cld mov sub (bad) out mov pop sbb jg mov neg add adc (bad) mov jg,pn out mov loop mov (bad) mov push inc rclb je lds dec mov push and or lock iret jg pop xor mov jg fstpt (bad) mov outsl outsl les xchg rolb push sub jbe out pop sahf lcall xchg gs call cwtl inc mov outsb push hlt push rorl loop roll fs ficompl shrb jno jg inc es jg and dec clc pop out jg in sub sbb adc (bad) (bad) mov and push jg ja cmp out and stos out into test jl xor dec dec jg fcoml mov inc mov sub mov mov lods mov mov push ss (bad) into jg add xchg fistp xor xchg aad pop adc jg addr16 mov test push imul insb add (bad) aam mov pop enter aad xor fwait pop aad pushf icebp adc mov pop fidivl xor cmpl xchg jg,pt je in mov imul mov stc mov imul add or push jnp movsb cmp outsb aas push cmpsl pop mov xchg cmp sub mov data16 or fidivrl xor pop xchg add cmp ret sub mov cs xchg sarb cmp jg inc popa cli das in fimul jg mov xchg xchg push (bad) aas outsl add test sbb inc aaa lahf jg data16 xor xchg and fwait push int cmc sub cli in sbb jg xor mov xor rcrl jg add add incl mov jo call aas ret and ja jae inc lock xor push push enter inc cli ret pop xlat push into jg or adc jl jae mov std xchg out cmpsl test pushf leave cmp jno jg and mov xchg imul sbb pop pop sar or and daa lret sbb (bad) jnp mov incl push movsb pusha idiv outsb dec or lock push mov sub es movb push sti inc test inc out cmp test out jno cmpl jb ljmp push sbb inc mov ret arpl dec jg sti lock cld inc mov pop jae dec sti sbb pop sti or pop lds add and push jg out add mov xor insl fwait sbb loopne add push mov and pop lcall jg add mov jg mov pop jne out mov jmp jg aam movb jg adc out jg sar (bad) aad sbb or jns push jg,pt pusha test jbe repz aas pop xor (bad) dec mov jno scas fwait popf hlt pop jg imul fsub cmpb pop xor adc xchg jg imul sub popf push xor push pop adc ljmp sbb xor pop push dec cmpb xor jns hlt test jno aaa test sti mov test daa mov and (bad) mov cltd add mov jg mov mov jg hlt imul jns jg push mov jg cmp and push jg or shrl mov cmc outsl push pop movsl in inc data16 flds jp pusha mov lahf popf (bad) out scas movsl ret sahf out mov rcrb jg stc scas imul jp mov push or (bad) (bad) data16 jg push (bad) test lcall adc mov mov popa adc xor adc mov cmp and cmp repz push xchg mov test rolb mov lcall fdivrl xchg xchg outsb sahf mov or test inc jp lcall jg out xchg stos inc push jg fisubrl fstp loop inc dec jg iret push add enter mov cmp sub jp pop mov dec stos pop call scas push mov cmp aas daa or jnp aad jg mov out jg add cmpsb in add pop pop fsubrs mov cmpsl cs outsl ss pushf cmpl jecxz dec add cmp mov sbb or adc sbb aas add loop xor pop fdivrs movsl pusha mov jg cmovae stos or xor and jg cmpsb fs jg add out push mov daa xor scas sar inc jnp in sbb dec cli inc inc jecxz dec in push jns inc jge xor sub xchg inc sti sbb out pop mov sub dec dec pushf jg jmp aas cli aas imul rolb inc shrl jae xor je xor and mov mov out push mov je pop (bad) shlb lds push lahf pop outsl xchg cmp dec xchg add cmp add sbb loop test mov test inc sub mov xchg gs fisttpll setb sti int3 fstps jo outsb mov cmc imul pop sets fistp outsl (bad) in and mov jg sub fsubl or jmp shr lods aam ljmp pop (bad) loopne xchg jg leave mov arpl cmp lret iret mov fadds lods movsb cli adc scas loope ret orl jg mov fadd jg pop pop inc pusha jl int3 jg dec mov ret jg lret cmp inc cltd in mov lahf xchg lds jg cmp jp movsl adc (bad) add inc pusha arpl cwtl test fdivl aaa mov pop inc loopne push mov mov jg mov jge rcrb mov clc pop ds push jbe (bad) out hlt dec dec gs jg xor mov fstpt push jne mov jae std es or stos das dec push dec xchg mov in inc cmp jno fsubrp dec imulb mov int3 mov mov je in sub or lods inc jg ss std sbb lock push fisttp in inc out add push lfs dec insl (bad) repz push jg js bound les lea outsb inc (bad) push popa sarb jne pop mov mov fisubl xchg inc pushf into je xchg scas mov jmp cmp adc adcl lods mov sub dec push rcrl sarb adc sti jb or dec dec sub cmp adc ret ret lret mov mov push xor cmpl add cmp inc pop mov pop push cmc lcall mov sub xchg sbb fistl jp add or mov ss push cwtl les mov inc test cs nop cmp and popf add out mov jg push pop js gs inc lcall jmp sti addr16 pop rolb mov mov jg mov movsb and pop pusha jmp jae xchg jg and mov jg fistp popa dec mov (bad) xchg in mov sti fsubrl mov cld push inc scas mov repz inc jge or add (bad) push dec mov lea jg cmp je int jg xor or mov clc sub cwtl mov les pop dec xchg scas loop jg jmp sbb jle or pop jns cmc sub xor jg ds jl add pop cmc into aam jbe jg xchg inc arpl sbbb xchg sbb add stos in cmc (bad) cwtl ret mov sti inc dec jmp movsl out loop repz outsb mov mov adc aad dec mov and mov inc arpl jg orl push mov add aas pop jecxz mov lods mov pop fbld cltd add sub (bad) mov movswl ret and jg xlat jne mov idivb subl bnd jns adc jg movsb push test dec clc inc inc push jg add jg hlt mov adc insb jecxz aam (bad) inc pop je (bad) loopne sub lock xor sti pop hlt push fidiv in pop jg lret xor jg mov popa lcall add cmp pop gs sub clc mov out xchg dec cmp mov aaa sub incl dec dec inc addr16 sbb and in lret add sti (bad) and cmpsb es jg ds inc pop xchg cmc mov jp or cld mov mov arpl adc aaa add xchg push mov scas pop sub stos and cmp mov add and jne jg cld gs (bad) jmp nop pusha and dec inc sub jg lahf movsb mov imul add arpl push movsl or test (bad) enter insl lds sub (bad) adc xchg mov mov xor jge xchg je sub aaa lds int3 xor (bad) mov pushf pusha jge decl negl xchg sub js sar adc cmc pop xor dec mov in jns sahf mov lds adc repz pop push cli mov bound orl sub inc sub mov rorl jbe jecxz mov pop sbb mov jmp pop mov popf (bad) lret jg adc add test outsl dec jne rcrl jg je push or cmpsb dec jno pop jg inc push clc pop shrb jmp pusha loopne mov scas push enter xor ja mov jae sub mov and repnz add jg dec roll jg pop (bad) cmp jg pxor test fsubrs sbb inc dec setbe push imul add sti not xor ja cli adc jae add mov pop add jbe and mov dec (bad) in xor xor jp pop insb ds push and sub adc ret or jae or xor pop mov mov lea push jg (bad) lds out incb pop jle fsub mov ds or jg mov dec in mov pop push dec fs pop jg shl mov mov in arpl imul sbb loope ja dec cmp sbb mov (bad) jo dec pop inc fs (bad) mov ret and cld jg (bad) add mov and xchg sbb jg push xor and outsb dec bound xchg mov jl sahf mov add test xor ret std aas mov xchg aad pop popf bound lock pop push pop xor dec (bad) sub inc loopne inc or jge push push xor scas iret sahf mov (bad) (bad) sahf mov xor daa dec fstpt mov clc andl inc cwtl push ds imul lret adc pop inc fs (bad) push fild inc jg movsl cmpl mov fdivrl rorl push scas lock jg ret or jnp mov stos sbb arpl cld mov mov jle jecxz xor pop fsubl lret mov push mov das pop ret push popf rorl bound mov fwait cmpsl jnp sub imul jecxz jg sub test bound mov mov das ja dec lcall addr16 cmp out fs out in sbb roll adcb and push jg outsb adc mov cmp jg out xor jbe mov mov call cmp notb int aam test (bad) or frstor sbb mov mov push pop lock or loop cmp pop jg js jecxz mov pop jg pop dec orl adc push dec lods out xchg push cmp fmull dec mov insb adc mov mov pop xchg inc (bad) pusha je jg jle test pop inc fdivrs add into nop pop insb sbb inc mov arpl xchg dec push shlb inc cwtl les lcall popf jg and cltd lahf pop jg les mov jge sahf mov scas xchg jg (bad) lret cwtl jg mov cs lea jb sbb jg adc cmp mov dec out push in ficom adc insb cmp jg and daa mov pop repz adc xchg (bad) jg dec out daa mov movsl std jg outsl dec sbb jl int scas and push (bad) mov test mov data16 nop cmp push jg or or jns dec cld dec mov ret repnz adc lcall shll push add jo xchg sbb lcall xchg lock inc in jg or or add mov or out cmp aas sub scas test in pop insb (bad) scas cmpsb dec lock ljmp cmp out push mov cmp stos jg ret (bad) jno sarl movsl push sbb js dec popf jo aaa hlt sbb push adc inc mov inc outsl add das ds idivl mov mov out fldl push lds mov nopl or stc jmp ret pop xchg mov sbb jecxz fstpt jg js testb popa pop aas sub pop xor (bad) jp (bad) push or lret jo xor call jns or xchg sahf push mov aam ljmp dec mov call inc xchg jg push inc and into push jg mov push mov xchg daa loop and push insl sbb repz cld inc in loope ljmp out mov es loope cmp jno enter rolb cmpsl jmp ret push cmp mov mov mov scas mov dec pop xchg dec xchg mov inc jg cmp sub hlt push jg add adcb scas sbb push (bad) cmp sub lods lret (bad) and fist inc and fmull loopne aad cmp mov dec inc xor mov inc std mov hlt arpl inc aas scas pop push dec inc addl sarl je add int jnp and lods pusha icebp pop sub dec mov ret inc mov ja push lcall movsl xchg push mov or mov in jg and sbb mov sub aam xchg or mov jg cmc sub cmp (bad) test or xchg icebp mov iret jg xor mov scas pop pop jg adc jg xchg fldcw (bad) pusha lds add dec in dec loopne xor sahf cmp in dec mov xchg lds sub jg je mov jg dec push pop xorb bound pop mov arpl scas jg mov loop jg lahf mov mov xchg sub aas stc fucomi xchg xchg xor lea pop (bad) cmpsl lods mov adc xchg jle jg mov jecxz xor lods jg popf cli mov jg sti sbb jg sub test test dec adc dec std xchg xor lahf inc push imul sub dec test jg cld mov add xchg add fwait mov loop push out lods jg inc pop pusha daa push popf test ret mov jo vsubpd aaa dec mov pop int lret fsubl lds mov sbb idivl addr16 pop jg,pt data16 insl or jns inc jl pop arpl addps rclb jmp dec mov movsb (bad) mov mov test pop jg jae shll xor les and repnz mov loop cmp and sub fdivs jp jg call andnps in sbb test mov pop sub push icebp add dec pop jg add scas in idivl inc (bad) lret xchg pop test and test mov jg fisttpl iret rolb push hlt shr xor pop fstl loope jg (bad) mov dec sbb jg xchg test outsl stos sahf add test jge jg ficoml jecxz and pop adc inc pop mov call inc jg into pop int3 cwtl es mull pop sbb je fidivr scas repz pop or ljmp int sub inc jg adc push mov fldl mov dec outsl icebp cld pop dec (bad) mov test inc cs inc std inc mov mov testl sti dec (bad) mov lcall mov imull dec loop movsl dec daa dec jg pop movsb and jae cmpsb mov push les dec or mov dec das push loop or repz cmp jg insb (bad) sti mov xchg aad adc ret icebp ja (bad) repz cmc jg daa (bad) pop dec cmpsl notl mov pop hlt xor or jnp cld dec mov mov jno mov jnp hlt ret dec and ss lds jae ja xchg test shl jp adc es inc mov mov int les xor sub or imul pop cmp addb dec mov inc inc lods jg push insb daa xchg push fldt mov adc ljmp addl jg and stos cli lret leave push negl dec mov repz xchg (bad) rclb mov popa cmp loop jg push test pop dec push mov mov jg jns icebp inc ljmp lahf mov mov jg bound adc push jg xor sub add sarb (bad) sub in push lods (bad) mov jp jg cmc lahf mov inc ss jg mov mov mov popa cmp pop (bad) sbb aam inc fstpt repz jo xor pop xchg pop cld or jg (bad) lock mov mov mov xchg mov cld jg xlat mov inc jg add dec aam adc in jg ja xchg pusha sub jg,pn xor sub repz mov pop inc adc pop jp fild sbb fcoml push mov in punpckldq arpl jg lock daa dec dec fnstsw mov mov xchg bnd inc ss js xchg jge fdivrl pop and xor cmpsb inc sub leave jecxz pop pop ffree jg out insb adc std adcl mov mulb fcmovnbe pop jp push xorb or adc sbb mov enter sub mov or cld mov outsl test mov js cmp insb dec jg leave mov jae xlat pop (bad) fmull xor insl pop mov test pop jg pop cli dec push fstpt sbb mov push xor mov negl xchg inc dec outsb mov fisttpll test jg (bad) jge imul sub jg arpl lock data16 insb xchg xchg mov mov jg (bad) xor xchg jg lds or adc cs jnp (bad) jnp jg jbe xchg (bad) xchg orb push shlb ret inc loope or mov pop movsl jmp dec sbb push (bad) dec bound lea test cmp xchg xor jg (bad) pop pop pushf jp jg lret inc fist lods fsub jns loope jg stos cld scas sub or sbb lahf (bad) bound imul in imul popa jmp jp xchg pop jmp mov pop mov cmp mov lret sbb stos fidivl pop add das out push outsb mov mov jg stos fiadd (bad) mov (bad) dec push rorb fdivrs add pop push and pop imul lea clc jge rorl sbb sarl mov and aam push cmp mov xorl notl aaa (bad) gs jg jns push cmp outsb dec mov loop push inc (bad) sbb sub jg sbb inc push and ja dec push sbb mov adc into out mov push cmp lret jne inc (bad) mov dec stos mov pop cmpsb jg inc jecxz and loope inc mov inc cmpsl ret jg dec insl push into outsb xchg aas dec mov push sbb rcrb xchg addr16 cltd mov cmpb cmpsb outsl idivl mov dec (bad) mov std jg sbb or jnp cmp and pop push scas inc and inc xchg cld ret ds jb aas mov mov sub scas jno neg mov test or jb (bad) je jg pop cmp scas jg dec pop (bad) pop jmp pop sahf cmp cmpsl xorps arpl jnp hlt cwtl jno cs lods add add enter imul jb scas jg xchg insl dec or adc push movsb mov shrb dec lret aas loop sti lods pop sbb fsubrp ja add mov in mov sub pop jg dec mov inc int sub pushf xchg mov bound xchg pop and xor cmpsl mov jg jbe fmull xor insl jns cli imul popl mov push movsl jns lret pop xchg sarb push adc pop insb push add aaa push mov or std or xchg push xchg fimul rolb jp lret divl lods scas out inc jg ja jno popf inc mov mull (bad) sbb sti pop cmp mov outsl xor xlat loope jg jns fdivs (bad) cld mov (bad) movsl loope cmp clc jg lahf testl sbb cld fistpll sbb cmp int3 push jg outsb icebp aad jp jmp gs mov jg jmp mov pop adc fsub mov shrl out push mov scas pop jle mov mov jge xchg data16 stos jecxz int mov (bad) mov dec jbe jbe jnp jg mov inc or clc jo inc and xchg cmp mov movsl (bad) int xor fcmove cwtl (bad) dec sub jg ds push ficom std loop jg pop adc daa pop add or rclb cmp push out pop cwtl pop sbb jg les mov mov ja xorl sbb loope sub and int3 sub jno test pop mul pop xchg icebp je pop jg adc jle jae aas bound push loop jp mov (bad) (bad) repnz xchg sarl jmp sub out stos xor dec sahf inc xor mov or mov (bad) dec add sbb fdivp sti ja dec dec jno fdivl mov rorb les lock das or push pusha inc in mov pop in dec push test jg inc cmc leave addr16 or jecxz aam jmp xchg (bad) in inc or movsl xorl pop fadd mov jg out (bad) rcll and sub add pop cld pop or inc jg cli lods mov jg or bound gs push daa jge jg nop push mov adc movsb fwait mov jmp or jg adc and xchg mov mov sti fidivrl notl jge pop mov mov jecxz adc or cli pop add mov fnop jg or (bad) faddl mov iret js pop rcl out pop fdivs mulb xor aas inc push mov pop dec push test mov stc xor mov aas inc push add jae insl sti adc sub and ret popf subb dec adc push out mov mov add ret inc out mov cmc dec lock push mov inc in arpl adc push jg sbb fnop les jg mov (bad) insb aas es in sbb ret dec test cmp pop and lds xchg or inc sub cltd lods mov adc sub insl std popa mov xchg jo ja mov inc das sbb inc push bound xor mov hlt pop push scas sub jg insb sbb mov adc lcall push dec sahf or or and sub jg movl jae jmp lods insb mov test movsl shrb fidiv insb cmp jg aas dec jle jg lds mov pop insl outsl (bad) imul push and mov mov dec jb dec ret sti (bad) adc push inc jecxz sar mov es pop add test jg add insb shlb popf sti jne mov gs jg in and les mov jae dec xchg push inc out inc sub mov push jg ror xor mov (bad) mov adc mov jg fcomps or aam jg or add inc jg iret inc mov arpl idivl jg mov (bad) sbb lret mov imull into or adc jg pop int iret or pop test dec lods jg add ja jg adcl jb in fcomp add inc pop les stos and and sti xchg lods dec or pop sub sub sbb (bad) std push int and lods mov ja outsb pusha dec cmp inc cmp ficoml jg inc in jae push mov loope ss push ret jg lret lods adc add repz je mov sti js xor jg and arpl mov in aad sub inc xchg dec popa ljmp les jg js (bad) in pusha ret sub pop dec mov sbb sbb das jg (bad) movsb fsub jno cmp cli and outsb xchg std inc add jg inc lock dec fcoml pop inc push call cmpsl (bad) addr16 sbb ds jg sbb std xor scas pop mov mov and mov and or outsb xor iret push push xor sub push jg jge cwtl dec mov pop jne rorl xchg fidivl popa ret pop jns mov aas xor enter and outsl mov dec and aas or inc cmp pop call xchg cmc mov clc lds jp dec and call jno js mov loope add add pop incl cmpl test xor mov lods imul push xor and lea inc std push lret ret xor fisttpl push lods pop pop int dec and jnp dec mov in aas (bad) xor dec dec lret aas jecxz ds lock jg sbb mov add out sbb popa jg cli shl push mov dec xchg dec mov and jno jg aas in xchg xchg add scas jg icebp lcall adc jg dec mov cmp dec jg (bad) out or jbe mov repz faddl cmp cmc idivl stos mov inc jg inc ja sub and mov push sub push stos icebp lahf jge sub and jp push ja jg ds rclb dec sarl popf jl push lds adc xchg sub or adc dec pop jg inc stc popa addb jl cmp add jbe addl jg stos (bad) leave and aam mov in pop das (bad) mov mov push imull mov xlat shlb (bad) xor mov sti addr16 (bad) cmc aas psllq add xor icebp pop sbb dec mov jg or jmp jg xchg lea dec call jg (bad) xor push aas adc mov mov cmp cmc cmc ss (bad) mov add mov mov insl icebp mov mov scas push add inc jo jnp insb or gs sbb mov int push and aad (bad) test incl es sbb pop jg gs or xlat and mov push pop push adc dec imul push push in cmp aas (bad) pop mov dec nop icebp mov push mov cmpsb dec js fcoms jg aaa mov push pop inc push jl inc icebp cmp iret das in pop in inc mov mov push repnz imul lock jg dec mov push dec dec ficoml push adc icebp call repz ds enter cmp ficomp lds sbb addr16 mov jg (bad) mull mov jno inc js dec mov dec outsl mov inc inc jg sahf xor or leave inc mov out setnp in adc jg out cmp out stc adc push es js loopne outsl popf xchg ja lret inc (bad) mov dec daa aam jg loopne mov jg xchg rolb and jg push mov test addr16 popf lods jne jg pop imul jg fxch add sbbl push cli fbld lds or loopne or and inc jb fadds (bad) negl mov pop outsb aad cmp mov xchg hlt push pop mov arpl ret mov xchg xor cmpb and pop fdivrs mov sub jo int3 pop mov cmp mov lahf repnz sbb mulb jbe out popa jg xchg fidiv jae ljmp movsb mov sar pop lods icebp out loopne mov and sbb lcall in mov xor cmp pusha stos outsl push gs cmp stos cmp and je mov jae sub inc call xchg aas into loop sahf mov inc dec mov (bad) arpl dec test inc je out mov sti subb pop xorl (bad) pushf jns jg leave dec mov xrelease in icebp sti xchg mov push xchg fneni(8087 push add inc pop js idivb jg fst adc sbb push jg sub or ljmp and cmp mov out cmpb mov cmpsb (bad) mov push and mov dec cmp sbb push fist dec mov iret pop sbb inc cmp arpl jns inc add imul jg mov mov jno (bad) ss movsl bound mov fsubl mov mov hlt mov aaa ja mov dec testl or test test inc je inc notl dec xlat add mov mov pop and cld jg jle lret inc dec addl jg inc xor jg inc outsl dec sbb icebp cmpsl mov maxps sub jp sub inc jg andb dec cmc lds jg cmp mov push jae hlt inc xchg add and xchg imul daa mov and dec pop xor pop adc jg fiaddl mov or stos dec stc movsb mov push jne stos and adc ret sbb add inc jno scas pop adcb inc jne dec jg (bad) pop arpl mov pop sbb push jo xor pop xor test or mov fstpl mov dec mov pop xchg (bad) into and dec clc (bad) dec inc or fwait sub dec xchg mov add sahf jg bnd cmc dec test aaa outsb push stos dec and mov in xchg (bad) and xor dec ret (bad) aas push mov jl lds call test push jg xor insb jg or cmp imul jg jb (bad) mov cld sbb jg sub jo loope aas jg cld pushf insl jae dec js outsl xchg punpckhwd cmpsb push pop cmp mov mov xchg iret sub stc (bad) lea imul jo inc imul in dec mov inc mov cmp mov insl aas and xor inc dec or jg push sbb shrb mov pop xchg insb test repz leave cmc jnp js popf (bad) mov cmp jg je out xlat jg mov push inc insb xor push and xchg (bad) pop outsl xchg mov imul jp jg push aas out pusha nop dec (bad) jge adcl js in dec outsl (bad) icebp (bad) in (bad) fldenv jg inc out push mov (bad) lock jmp imul jg jle daa pop in ret push sub cmp lahf mov jbe mov jg adc loope jg push ret movsl add in or nop fcmovbe sub inc aaa outsb jg sub in test xchg dec pop jg mov xor aas scas add sahf sbb ja cmpsb mov sbb adc dec jecxz sub clc aaa ss aam mov lcall inc jns pop cmp mov jg ret mov jge sbb mov sub push jg out or loop outsb add adc pop cmpsb xor js add lds xchg jp adc xor pop stos dec push ficom popf mov or daa lea xor ret movaps aad jg adcl jne xchg std test push mov call jo addr16 cwtl std insl in push out into cmp pop sbb scas cmp int3 mov jg std adc sub mov into sub mov push pusha jg int3 aaa add inc movsl sti sub sub fistp addr16 jl xor stc xchg xor (bad) mov loop push or (bad) jg mov jno sub dec adc lods popf pop das call inc imul xor push enter mov mov push mov je push std in aas movsl call pop popf mov ljmp jnp ficoml (bad) lock lret jne aas sbb popf cmp movsl jns arpl cmpsb inc aas call int3 dec xor mov mov jb inc daa jg repnz adc jne or and mov js adc mov jbe ljmp hlt sti pop xchg jp fs dec sti aas dec inc das pop push cs cld pop lahf pop inc insb dec aaa hlt mov dec pop shrb push in mov stos jg or adc mov mov mov cmc outsl (bad) adc jbe pusha push cmp adc pop loopne inc test jg out or jg and bound mov jg fwait insl inc sbb fidivl outsb jnp inc pop adc push movsb and pop outsb mov xchg cmp xor push jg test inc and cli daa mov icebp jg pop out ja jmp cmp imul scas jg inc shrb jle inc xor addr16 jns outsl sar dec in mov push imul daa popa inc add jg ss xor aad mov adc dec aas popf or aaa sahf jg pop popa ss (bad) or mov sbb imul in std and pop into sti iret xchg ja mov inc lods pusha jno enter jg scas and arpl xor sbb push imul mov jg sti mov jb sub mov sub inc sub jnp sub pop (bad) mov dec lea ja xor adc out xchg mov pop mov or xlat sti adc ss jg adc (bad) sub sub shlb imul mov cmpsb cwtl dec push into or jmp add sub ja add push outsl mov sbb ljmp xor pop or push xlat lret insl loope jg (bad) ljmp aas movsb cwtl xchg fs rcl dec sbb adc ret sbb loope jg xor fwait arpl cmp pop lret push (bad) mov mov addr16 jg mov jmpw insl jb je ret lock cli pop mov mov or push outsb lret mov lods (bad) (bad) mov inc mov adc stc sahf sbb orl ffreep sarl fimull loop xor loop mov imul sub insl cmc ja (bad) pop sbb xorl fcomip in mov or cmp sbb fldt aam idivl int inc into push cmp stc jg push jne and dec cmpsb cmp in dec outsl icebp lods mov jo (bad) jg bound aaa shrl mov lea int3 aad mov mov loopne ficom inc or jg popf (bad) cltd (bad) xchg je pop inc push fdivr push pop inc adc jb pop (bad) pop in adc fisubl push out adc pop sub or xor je outsl push dec push fnstenv loopne push neg xchg jns insl ficomp (bad) sub push jg loop cld stc aad sub mov and xchg pop lahf jg jl adc stos (bad) test add mov imul mov mov lahf scas (bad) cwtl aas enter mov inc out and (bad) sti or rolb mov mov pop rcll jno popa jg mov (bad) mov inc cmpsl xchg (bad) jmp or into imul xor mov cmp sbb scas mov mov jg jmp adc jg stos and push lret jg mov jb,pn daa repz cltd cmp xor cltd lahf fistl je jg les out stos push lahf addr16 leave sub nop (bad) dec mov mov add jg std lcall and lds cmp adc mov or iret daa inc dec idivl nop test push jg icebp sbb mov stos push sbb cmp and iret lahf out inc inc notl test push cmp addr16 push inc movsl aas scas xor dec int3 add sbb les pop (bad) sub add sub cld pop jecxz inc repz insl mov stc cmc scas push lock pop mov push mov adc jg jge insl mov push jg sbb lods mov sub mov int3 jnp dec aam xor jg icebp lcall sub jl lahf adc sti xor movsb in pop pop addl daa (bad) jno (bad) jg jmp repnz jg movsl fstps aaa cmp in xchg push scas jg add pop jge ror jnp int3 into in fs mov push cmp (bad) dec cmpsl aam inc out das push fdivrs or outsb loope idiv mov in jg mov mov cmp jmp outsb in les repnz imul ds push stos jl fidivrl add (bad) in rorb inc hlt jg xor ret jg test pop lret push repnz pop mov inc popf iret dec or (bad) out test popa dec jg scas outsb jmp cmp jg repz cmc lahf sti cmpsb lock ja pop mov fwait stos jnp sete sub (bad) test jge fstpl fldenv cld push or nop dec lret mov hlt (bad) pop mov iret sti hlt inc in addr16 or andl in xchg imul pop pop xchg mov push imul inc push (bad) jg xor fidivrl dec adc in popf or loope arpl inc jmp sahf cmp andl mov jle test (bad) sub and xchg aas mov jae mov jb jg jp mov imul (bad) lret xor into push push jnp imul or inc arpl xor sub push jg mov rorb push sub ljmp inc pop leave clc and mov xchg jg aad mov out scas inc aaa sbb imul in lds (bad) loope sub mov push mov ret inc jns pop aaa mov push jmp pop lret stos sub ficompl daa mov mov jns,pn out push jg add icebp or ficomp sub xchg jmp sbb pop enter push push loope jg fnstenv jp inc mov cmpsl mov push cli lods pop icebp push aaa bound cwtl and mov sbb in imul mov and sub add imul addr16 aas (bad) out pop cmc fs and faddl imul inc adc mov cld pop sbbl sub es jmp add movsb xchg imul jae and int mov jmp repz sti jg push adc mov inc pushf pop ret add and idiv pop cli out jge inc xchg jg out sbb cld fwait adcl xchg clc mov test mov jg daa pusha cmpsb fwait mov jg loop aad mov push popa mov sti or test pop adc fwait imul sarl or inc pop sbb pusha lock push and jle jg cmpsl les push jg mov mov aas aad andb cld pop and gs mov inc ficomp xlat xchg imul ja or cmp in out push xor xor and mov sub sub ret jge lds and and aad das dec jge push cmp jg sti outsl insl cmp jg icebp fs test addr16 jle mov fistpll cmp mov xchg repz push dec pop push push mov int3 mov push fnstsw or outsb adc aas scas jg mov (bad) bound jmp test pop xor jge cmp scas push imul jg test popa aas into jno xchg movsb cmp jg mov fnstsw push adc sbb pop cmpsb out (bad) shr add inc jo bound imul das jns mov arpl or xor dec jmp mov mov dec stos dec dec jno pusha mov pop pop frstpm(287 inc push mov or loop pop lret and dec rorb xor aas or xchg inc sbb pop jg dec dec sbbl daa fwait mov das or mov push gs push lods pop fistpl or jge lock jg dec sbb (bad) sub imul nop jg pop aad push aaa hlt xchg jg popf idivb jg push (bad) call arpl imul out mov fwait adc xor orl ret daa outsl testl pop test mov (bad) sbb jg lret out je and add mov adc popa add mov lods inc jns mov push xor xor mov lret jg push je les sbb jg iret pushf cmp jg fwait shlb mov sbb mov mov jg stc cmp mov mov insb (bad) scas xchg rcll push in push adc orl xchg or add pushf inc sbb movsl jbe push sub mov cmp jg push outsl test sbb or outsl test inc sbb cmc jg pop push sahf fcomi xchg gs push xchg cltd or in xchg inc js jg pop jbe,pt andb push fdivrl or adc inc mov shrb jg daa test loopne mov xchg pop mov aad rcrb push push popa test pop mov or mov and jg ss divl mov mov aaa daa cltd test inc out push (bad) jg inc out push adc sahf out and jg lcall arpl aaa cli jp inc pushf fdivs push xlat jg push ss arpl lret pusha divb test insl dec sahf in push out mov pop mov jg lret add aas sbb rorl mov jg and or dec loop jg xlat insb adc lods push push jg adc cmp jg mov fldt pushf repz ss test xchg loope pop mov add enter jecxz inc fisubr jg outsb inc stos mov xor adc in xchg push sti push push jge das add fsubr lret jecxz (bad) mov stos sbb jae stc notl pop pop jg cwtl fwait in dec cmp call and jg inc jge cld out cwtl fdivrl pop dec push insb cmpsb aam pusha je rcr scas fildl mov pop inc mov in sub gs pop loope dec or out test ljmp jge jae (bad) jg cmp pop arpl imul pushf outsl inc (bad) out jg xor int mov dec lahf mov mov adc jg pop in xlat rorl js inc and lods mov daa xor dec lock push jp fstpl add adcb sub add addr16 outsl hlt mov pop xor movsb cmpsb xchg pop mov inc xchg inc dec int3 scas jo fcompl dec repz or hlt jae mov mov pusha mov jecxz inc sbb jg sub adc arpl mov mov rol aas add inc jns dec (bad) dec xchg jg jp mov lods in aas xor std bound out scas sbbb cmpsl mov ljmp push jecxz (bad) lock or inc mov pop test repnz lret cld inc pop dec aaa mov outsb notl cmpsl and jg cmc nop jb (bad) adc jmp dec push sbb add ljmp jg fiaddl adc mov lods jg divl adc mov inc pop mov add sti jmp fs movsb scas sub mov shll lcall pusha sti in ret or xor (bad) scas loop pop movsb sub lea mov incb xchg (bad) push outsl sbb imul mov movsb pop dec xchg negl add pushf sub and arpl mov stc jp pop lahf inc jg push lods dec ljmp mov jg lahf mov loopne lcall clc scas popf ss mov jg imul or out pop inc jg (bad) xor pop cmp fldt mov sub in (bad) mov mov pusha mov dec mov (bad) or mov out lds scas pop sbb add and push ljmp xor inc stos mov outsb pusha fldenv push cmp dec pop lret cmp jns ds push cmp xchg iret js jp inc mov mov ja mov mov out dec push or insb mov xchg jno pop ret hlt notb aam xor xchg push repnz std sub inc out movsl jg rol addl or dec add inc and mov xlat mov iret inc jmp lahf repz fstpt sbbb cli push stc push xor dec push (bad) mov xor xor mov jg or in or mov cmpsl ja fdiv jno fnstsw inc inc pop arpl xchg or jg cmp push je imul and mov mov jle pop and lcall push dec out outsb push cltd jg cwtl (bad) loop inc xchg idivl push loopne std inc jg pop scas push shrb jo dec pop ds dec mov sbb imul test inc mov mov xchg push sti and imul xor mov hlt inc cltd push push xor fcoml ret and gs or movl into push daa dec movsb mov ss xchg xchg sub sub fwait sbb scas and loopne inc iret jg jo xchg js push notl jg mov mov adc mov jle lahf push and (bad) inc add roll repz xchg ror jg mov pmulhuw sub sarb (bad) fdivl push inc ljmp in loope mov std inc jg dec xlat jae add lods mov stos das mov xor push jns xchg movsb xor mov push mov ja sub xchg inc mov (bad) mov inc cmp insb movsl push mov shll jns mov xor sub xor xchg stos lods sub jg lahf mov and mov mov in push enter popf and cmp xchg outsl add xor mov and push pop stos jb add adc pop outsb mov loop jg jne sbb mov das inc mov inc mov out pop or mov mov fbstp lret jg nop popw cmp xchg pop inc jg adc sti mov fcom jp fs jge (bad) dec les addl jg loop js sub mov push in jg es push inc std mov test lods popa (bad) mov (bad) jns ret inc arpl jg dec mov inc sub cmc aas jl mov dec fnsetpm(287 push mov dec mov mov cmpsl xchg and add jo mov pop es mov aad test pop fstpl inc dec lock or (bad) mov sbb imul mov test sarb (bad) shr mov pop (bad) mov fist test and (bad) mov jg pop cmpsl mov jg or cltd fnop pusha mov push jae mov push aas jns add xor (bad) add inc pop cmpsl mov or call arpl sbb lock (bad) xor je mov popa inc das into iret cmp std (bad) xor push push and mov lret jg insb es (bad) mov inc inc inc in lcall push ret inc jg and xor add or or in sbb pop mov int3 mov ja pop out pop sahf arpl mov (bad) or jg test fdivrl ss adc add js in mov jl fcoml jns mov add xor xor sub in push mov adc aas pop xor adc shr int leave in jg mov in fldl jnp sar dec dec test pop inc or and pop rcll mov jno mull sahf dec vdivss xchg pop inc pop ret jge ss js aad dec daa outsl jne aaa xchg cmp loop cmp idivb and pop xchg pusha or push sbb es jp das jg add jnp jmp inc mov jg inc or xchg and jg push mov mov and jg push repz cld fisttp pop in mov inc rcr pop jg dec mov dec imul addr16 ret aaa cmp jg pop dec mov jg push out and cmpsl sarb dec dec in pusha push push pop or inc imul xor push or push outsl pop nop push jg stos mov push jg xor adc jg (bad) mov push jg push addb lahf pusha repz xchg jg insl mov xlat mov popl cmp fcompp sahf out aas lods add mov mov dec adc daa ds cld aam pop jo pop jae fnstsw xorl inc es jg mov js (bad) into lahf mov je and sub ja sbb xchg cmp insl mov outsb inc (bad) jbe roll repnz (bad) xchg bound daa jge sahf push leave jg add mov pop xor (bad) add sub test add pop aam ja inc mov jno mov and jb add ret mov das loope movsl jne imul popa aas jg fs mov fild sarb pop clc mov mov rcrb int xchg add mov notl jecxz repnz inc push mov pop movsb je push dec jg xchg int cltd test mov add in sbb xor push mov fldenv aas in out xlat aas mov jae sbb jl push ret and jge rorb mov mov movsl (bad) inc lds push mov mov (bad) hlt jns inc inc jne ret cmc clc inc mov push jno dec jg ljmp cld mov mov jg ret ret imul popf jl inc jnp adc dec pop hlt mov stc dec or fwait push cmp imul fcmovne (bad) jmp jg test jg pop addr16 or ret fdivp xor pop cmp mov mov add pop sti push das push push and inc in or psadbw ds es adc jg xchg scas inc loop jg xchg dec ds (bad) lret stos mov dec push xchg dec mov por in scas idivl cmp bound sbb mov jg popf sub pusha clts inc movsb jg add and jl inc sti add stos dec pop jo pop push aas jae push and lcall gs addr16 or sarb mov mov out add sti add jmp pushf aaa adc mov data16 mov pop repnz jg or popa jg add add sbb or or pop lret lcall scas inc mov and enter pop and add test jg and lret sbb pop pusha out ja push or push xor jp mov (bad) xor lcall or fcmovb sahf jg pop lds scas sub sahf shl lret mov aas cltd xor popa adc pop nop pop daa add and idiv es or mov sub xor mov jns mulb cmc xor sti pop inc negl inc add out jno cltd aas mov bound push inc mov push xchg iret jg inc lret imul pop shl jno arpl jg sahf loop in mov mov xchg call push insl incb push cmpl push cld jg sub cmp js xlat cmp cld imul jg ljmp and pop mov gs insb bound mulb dec (bad) push clc test add push stos push int3 inc pop mov adc sbb jg jo push push dec ja jg mov pop loop (bad) jl inc outsb xor xor mov inc sbb sahf and sub bound into lds inc ljmp or adc adc add jg jo (bad) (bad) mov and popf in test inc jg into js lods negb mov out xor mov mov push push jg fsubs and or cmpsb xchg (bad) mov adc (bad) jno or jg mov pop jb fdivrs dec out pop aaa fbld inc mov jg cmp out cmpsl cmpl dec lock pop aad in or jg sarb dec jg xor cmp aas insl cwtl xlat sub std stos dec dec js jb (bad) jg cltd mull dec sub adc sub pop adc and or push adc push je mov mov adc jg xor clc and nop cmp xor pushf cmp in xor fnstsw icebp cli push jg sbb sbb dec xor lea jo cltd adc mov jg arpl jecxz int3 xchg aas jmp cmp xchg sti xlat jne ja pop adc movsb sbb dec test stos (bad) jg movsl cmp mov push jo pushf jp mov nop out xor push jp call mov pop mov dec jno hlt (bad) iret scas xor int3 fnstsw mov pop (bad) mov daa jno fsubrl xlat test sbb jns sub jg loop into mov shll lret xchg out ss sub jg iret jmp js jg arpl mov test sti jnp push add mov inc jge aad sahf jl push jne pop jg popf test sub nop ret sbbl fdivr mov push add lcall iret lds pop (bad) jne test arpl stos mov pop fisttp jnp jg (bad) jo rcrw inc int xchg sub (bad) mov jmp xchg test scas sbbl and daa out inc or dec je jg mov xchg dec aaa enter add and fistpll adcb mov jecxz and into hlt jg or sub (bad) test sahf incb cltd and lock mov pop jecxz mov and dec loopne jg fcmovnbe test xor add mov (bad) mov fmull mov lahf add insl loopne pop mov jmp dec and and xor dec sarb jg in loop mov cld (bad) rclb dec out test stc bound daa sub cs mov and xchg xchg push mov stc (bad) int3 mov rclb jg mov cltd (bad) xor jg popf fbstp data16 jg mov mov mov (bad) xor pushf test jg jle decl inc pop cmp out outsl and ds aas sarb dec inc movb jne xchg aas jg imul (bad) into fsts sar stos les dec addr16 jp fistpll mov pop push repnz jae cli arpl inc int3 xor dec push xchg imul insl je pop jnp pop (bad) cmp in into push dec cmpsb and mov addr16 add lcall cs xchg cmp sarb nop xchg xchg jno test sbb dec jg mov jle mov add enter xorl out mov arpl scas pop imul or jmp mov loope int3 icebp test data16 aam or jg add xor aad daa dec ja sub ret and push xor push push incl xchg and js loope jg inc jle push jo stc jg popa push leave das or sub test xchg adc fbld adc xor push cmp inc out sahf sti adcl ja into fwait daa jg jecxz pop addr16 jl pop addl pop in mov mov cmp stc rorl dec repnz or jg bound pop daa jg les pop jg inc inc mov stc xchg loopne test repz jg mov fcomps fistl fidivr pop and mov sbb (bad) push pop fstl ljmp push aad jns inc gs mov mov insb dec loopne xor pop aas sub dec data16 (bad) adc (bad) sub in cmpsb xor mov addl cmp sbb jg (bad) popf out bound lods mov xor js mov pop scas div (bad) addr16 or mov push nop jae sahf loope pushf pop mov loop or js (bad) xor mov jg stc xor (bad) jg imul xchg hlt pop xor sbb add (bad) int mov ret sbb call mov push mov sub mov cmp test stos adcl in mov jg jle sbb jg cmp jg (bad) jne mov pop adc leave cs sub adc es fcompl xchg push repnz fs in push (bad) xlat or adc mov jg dec xor adc les sub cmp add inc sub xor jmp xor jns insb pop sbb jne,pt push pushf xor cmp js jge stos rclb jo das and jg repnz cmp mov jbe dec cmpsl xor jg mov les sti cmc mov mov xchg pop inc jp sahf jg (bad) mov inc fstpl les push add jo lcall jle insl hlt push into shlb inc dec sti in rolb jg sub rorl cmp sub jg incl inc inc out aaa push pop fcmovu jnp neg inc add jbe sbb mov xchg or insl je add loopne push xchg xlat push jg pop cmp dec jg or mov jg lock lahf adc ja inc cmpsb add push out dec jl add pushf dec sub push (bad) dec cmpsb jl cmp lea sarb les jg push ficoml jg xchg ljmp fucom aas sbb xchg dec xor jg jnp mov push aaa das jg xor scas mov mulb cmc lret test sub cs mov sbb fsts xchg outsb push (bad) jg mov pushf mov mov mov pop out stos outsl mov adc cmp jg popa add jg test je or arpl adc mov pop jg cmp dec es bnd mov adc les aam xchg adc mov mov mov cmp mov pop pop (bad) sarb mov adc fs cli adc pop enter inc movsl inc sub ss into fsubrs add das mov jle ss into pop pop sub xor push mov xor in jg mov addr16 lahf lods jg sbb push fldt mov les (bad) jg mov mov xchg lea xor jg xor mov mov add jg mov inc lahf sbb push jg mov std jg out jno push inc (bad) dec js jns push repz jg adc test adc jne outsl pop dec jp push loopne mov dec add jg outsl fmull test mov imul sti mov rcrl and mov add dec cmp jg push mov dec and jno and push jo add mov cmpsl (bad) xor push inc lcall in scas lds cmpsb aad push sub insl call fistpll mov mov mov nop shrl push icebp sti dec js aas mov jmp dec roll jp dec push loope inc cld sub jns aaa jle test int3 std dec sbb pushf sbb pusha fs and pop clc add inc sarl cs xchg mov cmp mov jg push insl xor test mov sti mov dec dec xchg push incb fwait (bad) cmp sub popa jmp js sbb in (bad) je or fnstcw push mov push cmp xchg out push (bad) jg cli push sbb nop std fdivrl adc inc pop mov cltd outsl pop mov xchg out (bad) mov js fwait loop mov cltd lret mov mov and add lds fadds mov sti enter (bad) fcompp jg or mov arpl mov push jo sahf aam dec es aam les (bad) in add adc or mov xchg aaa pusha sub insl mov or mov push xchg and adc mov rcrb icebp jg ja sub inc mov fsubrp repnz and (bad) xor mov dec xchg cmp inc jg daa sub mov xchg push inc icebp aaa dec xor fimull dec lahf xor pop jg shl xchg pop push notl adc lods xor sti jg pop loopne fs in les jg cmp gs mov jg cwtl add es pop xchg pop inc (bad) icebp pop jg mov push sub cwtl leave subl fwait rol mov loop les dec stos mov jg movsl aaa mov jg out inc bsr jmp mov loope je cmp sub mov rolb xchg cmp ss outsb mov xchg inc sub insl cmp xor mov mov pop outsb aam jae inc incb pop sbb xor inc lock aaa je dec mov fimul subl adc push outsl lret push mov jg insb out add dec flds rorl pop stos xchg mov pop cli jg int3 push xor lods lea jb pop cmp push (bad) aas inc sub hlt je (bad) jg insl call jg cmp enter test mov jg sbb sbb pop push mov test (bad) mov push push jae push jmp jg (bad) sahf out or push jnp cmp aam test dec adc jp mov cwtl sbb jg gs ret push and jg incl adc sbb sub out xchg jg fistl fdivrl repnz test ret cld push dec mov add mov iret xlat dec sbb (bad) cs dec sbb insl lcall je jg ret add jle jge adc inc add and test sbb mov clc scas push clc jg xchg divb lcall adc push addr16 cmp mov mov and jg aas test fdivrl das sub lods sub arpl xchg data16 aas ljmp jg xchg ljmp pop add pop pop or adcl test dec scas lods pop mov xchg rcrb cli pop mov sti mov jg jg push jge movsl xchg gs out mov jg out adc jl push jae xchg nop cmpl and jg fs jecxz cld mov outsb mov sbb sbb dec inc jb or sbb aam mov push push jecxz cmp iret mov (bad) pop imul scas clc push stos cmp mov ja add mov fucomip fwait mov mov add or ss sahf sub xor ret in mov ja loopne jmp in sahf sahf lcall dec xor (bad) dec mov adc jo cmp orl insb jg push adc cli test xor dec mov push cld lods jge lock imul imul loope xorl sahf or icebp (bad) leave push mov push mov mov jae popa sbb fsubrs push mov test jg outsb dec mov les inc lea imul sbb lock mov mov cmpl mov dec movsl aas jg les dec fsincos aaa ja,pn negl leave adc lahf cli pop (bad) or shrb imul divps push dec lret sarl jle xchg push decl fxch cmpb leave push roll addl shlb data16 mov (bad) icebp cmpl push push movsl loope jg sub cld std lret cmp jbe sbb jg aaa movsb scas inc (bad) add addl movsl push pusha faddl fidivr ror xchg push leave or inc inc push in sub mov and int3 push jo cmpsb pop mov or (bad) dec jg test clc in faddl bound fisttpll or cmp outsl pop icebp push adc mov fsubr and add cmp in push xchg faddl jg mov dec movsl (bad) push idivl repz mov xlat lock add mov rcrb mov lret and cld dec push jae fidivr push ja cltd (bad) sbb sub testb ljmp arpl pop mov push add pop dec aas jae push call aas jmp js jg mov test jg inc mov inc mov sub sub sar loopne jg inc loope dec adc jg and mov add jmp jg xchg xchg xor jg jl,pt sbb addl push jp dec js sahf icebp test mov bound ret aas mov inc cli dec loop jg fmull inc sti repz fmuls popa cmp jg sbb push jg and test mov addr16 call jns mov cmp (bad) aas push cld sbb fmull dec jp jg and jo bound loope push xchg push or mov call cld aas stos xor adc imul mov dec and int3 push jg xor xchg movsl pusha mov dec leave lods lcall rcrl jl mov xchg leave push jle xor or js pushf xor out push dec push (bad) jecxz daa inc or pop imul cmc stos mov rolb jg mov add dec fwait push jg ret mov xchg xor divb sub loop (bad) je outsl add arpl xchg rcrl bound mov mov pop jae cltd push dec jg (bad) fcoms xor push jg (bad) sub mov xchg jno adc mov push push sbb pop jg dec sahf scas push mov add dec mov leave in mov jg adc ret xor test call add outsl inc test jg adc sbb and dec pop mov ljmp fcomps sarb or jg cmpsb call cltd addr16 iret stc cmp adc imull sarb sti push out stos xor push push les xchg pop jb testl jg arpl push sti sti and mov fs sub (bad) lock gs in sbb jg rol int addr16 jg loopne ds cmp js mov dec mov sub dec push sti cmp inc mov loop mov push pop js mov sti outsb dec dec push jg and xor shlb jg sub aam (bad) mov out sarl adc in pop sbb pop (bad) pop imul sub pop xchg mov sbb inc cmpsl xor jg push aam cmc (bad) sbb mov jg out cltd push fistpll call pop popa out lods inc in mov add mov inc jg sbb imul jg test add arpl inc xor and inc push mov mov lcall jg cmp push sbb dec in lret cmpsl and imul push in mov (bad) mov imul sti xchg dec lret dec pop or das test mov mov xchg inc fidivrl or sbb (bad) mov loope fucomp mov jge and jle xchg cmpsb cltd repz fsubrs and insb rcrb jp cmp daa call ss inc pop imul aas fisubrl or fdivrs mov clc and cmp jg (bad) jae (bad) adc dec prefetchw cmpsb jbe jb popa push ja and sbb movsb jg enter icebp inc inc aas loope ljmp inc mov adc pop dec data16 pop sub push fmull adc and icebp (bad) adc pop movsb jl mov fs daa (bad) ror out or xor mov popa add pop es xor jno jg pop bound jg cwtl out mov sbb vunpckhps xchg or scas repnz add cli jae sbb (bad) mov bnd daa imul scas inc push popa and cmpsl sbb cmp push xchg jg shrb ljmp xchg ret addr16 mov out movsl jg lods lahf cs test jg sbb jnp loopne add addl idivl std inc shrl sti movsl inc mov add mov inc pushf sti push fistpl mov int3 xchg xchg jmp cwtl test mov jge xchg ret cmpsb or in push inc push jg movsl mov cmp shr inc int3 mov jg lods dec or jg xor mov test nop lret ljmp jp or insl lds out jnp in jg jne lret stos dec aas mov enter xchg sub or xlat pop push mov or sti aam insb (bad) mov sti add (bad) mov daa pop in cmp add jg fwait inc inc lret xchg scas push sbb faddp std inc out insl jg icebp adc or adc (bad) cld test pop outsl or fdivrl cmp xchg cmp out inc jle (bad) popl mov cli dec arpl push push inc cmp sbb loopne js mov ljmp xor (bad) jg sarl mov lock clc mov pop int3 dec and jns pop shrb sub jno mov pop xchg jg lret into jecxz inc jg in mov mov in out cmc lods icebp scas push mov cmp cmp jns out mov mov mov xchg gs push add mov jbe sbb mov pop or mov dec lods sub sub xchg fdivr mov jae push hlt pop aam shrl adc pop push adc aad ss inc aaa dec push push out jg (bad) into (bad) sbb jecxz in ret addr16 fnop jg fcmove or adc lcall push or pop push mov mulb jns gs jl sbb repz mov into out or bound push mov push jl leave mov out cmp add push push icebp es call jne jg adc jbe out xchg jg enterw (bad) mov mov mov cmp mov cs add scas or mov xor sub lret add jp mov inc clc scas daa int3 jo outsl andl sbb insb inc push jg loopne sub lea jg mov or int aam call xchg imul aas dec inc pop inc repz and adc (bad) in jge xchg adc jae aas lods cmp push push jns aad push pop fs jp (bad) aaa sbb inc gs test mov jl xchg xlat cmp aas test sub jnp push lods inc lock xor and mov sarb in mov jg adc and aaa cmp inc (bad) popf inc jg mov sub or jg in pusha adc ljmp jecxz loopew jg push test mov clc (bad) jg stos (bad) jg ljmp mov push mov jg jne fsts stos inc mull ret lock hlt jae pusha popa xchg and mov lahf stc popf das insl xor xchg in mov push pop pusha icebp stc lea mov aas cld aas xchg lahf outsb jle jecxz pusha imul mov mov add mov gs dec fmull lea mov push xor add pop pop jg hlt enter andl ja stos (bad) jg sbb xchg cmpsl lret es int3 inc pop jo mov and ds cli enter lods inc jbe jg outsb add (bad) sub mov stc adc (bad) mov into mov (bad) jnp cmp xchg lahf pushf jg push icebp lret ret push shlb inc inc repnz insb imul icebp mov jg sbb out jg das lock push jo std jg xlat inc cs popf jbe jg add dec inc jg sbb push out push jl jo (bad) dec pop inc dec ss xor test arpl out call dec loopne repz in and out jg sbb fstpl and lds (bad) dec fwait cltd negb inc pop mov inc mov pop jg jno repnz sbb imul (bad) mov add aas outsl arpl mov inc xchg sti jg cmp jp jg (bad) push insl js int3 jo jle xchg and int cmp scas xor test fwait inc (bad) jg add xor jbe cmc scas sbb pop mov or dec cltd loope or jg mov and jg pushf sub cltd jg out dec or mov mov dec sahf test xchg les mov imul insl nop aas shrl jae addr16 pop mov cmp (bad) jne iret mov adc and movsl bound dec nop dec push cmp sbb jg mov rorb js xchg mov imul fisubr ja cmpsb vmovdqa rcl adc loop movsl mov popf inc cmp pop in fnop aas mov aam iret cmpl dec xchg out clc push hlt dec jg mov mov and dec sub jg scas mov pop jg dec push ljmp add or push push jg loope inc (bad) cmpsb xor mov (bad) mov jg jmp sub test aad loope cld sbb xorl cmpsl ja and adc mov mov fstpl jg cmpb jg jge jl fcmovne dec mov inc push mov (bad) ret jg adc pop mov fs sub and and mov push mov icebp mov xor jg stc call in xor jmp jg jae push push adc dec cmp icebp jg mov (bad) jg adc lds cld sbb pop insb std cmp inc or inc adc cmc insl (bad) lret inc sbb pop testl sti mov sbb sahf ss mov cmp aam mov sarb loopne (bad) (bad) lahf enter pop call jg mov lret dec cmp jg sbb add pop jge and bound iret inc (bad) stos stos mov push add sbb lahf pop jmp stos jg sbb repz jg das jne mov dec sti jno into xchg pop daa ret and ljmp das mov cmpsl ret push push dec pusha dec jg movsb cmp fimull sbb divb xchg pop inc mov mov popf insl mov test push jg cmp into bound (bad) mov ljmp jno cmpsb clc hlt inc cli sub xor cmp xchg push xchg (bad) into jns mov jg fyl2xp1 jb aas hlt mov jae imul mov je mov pop mov int3 jg dec pop cmovl aas movsb jmp and loope pop jg imul popf mov sbb outsl pop mov inc lock inc addr16 jae arpl add in jo and shrb fs dec aas call mov jnp sub lods jnp mov and jg push adc add (bad) icebp movq push (bad) ja loopne jmp hlt outsl push mov cmpsb jg inc inc cmp push lock dec or xlat dec adc or mov pusha pusha mov movl pushf mov call adc pop int or jno and out test lock sbbl pop and ljmp inc xchg imul jmp jno and lea (bad) pop pusha inc mov xchg lods jmp mov and sahf mov sysexit lods cld outsb mov scas jle sub (bad) cmp rolb sbb repz xor loopne inc fs pop jp inc xor into push fwait cmp rep outsl clc daa in or ret data16 or dec mov out xchg leave pusha lea je pushf movsbl jmp rcr push btr xchg mov bts push xor test push rol pusha mov clc inc xchg movsbw mov not dec ror bts mov rol (bad) repnz bsr mov ror setne cmc call xor mov mov fnclex jmp add jae ja pop inc scas and lods inc xorl js sarb dec pop xchg out mov lods loop jg push jnp xchg sbb mov or stos dec dec pop into pop sub sbb add fwait rcll mov cmc add cmc pop or int3 imul cwtl cs (bad) hlt enter fwait lea dec mov jbe in xchg std mov ja inc in js dec out mov rcrl popa lds xor shrb imul loop and (bad) cmc js arpl and (bad) test movsl inc mov jp rcll (bad) mov mul lret xchg ret repnz popa js push pop dec and xchg add jmp cmp int3 jb xor leave insb mov xor outsl push jg daa dec clc js xchg cmp mov rcll iret and scas add dec movsl mov sti js sahf faddl in inc mov stos mov fdivrl mov jnp repz int daa push sbb call xor lds insl cld pminub paddsw add add inc lcall xor pop repz lret dec pop xor daa or jg imul jge movsb jge movsl pop (bad) rcl js jg test add data16 push test dec or dec mov dec xchg adc jne lock insb mov inc scas insl loop dec (bad) xor and fidivr fsts pop (bad) xor stos mov outsb outsl inc mov repnz cltd dec and or jo mov int repnz cli pusha stos pop in insb dec lahf ja nop fmull jg (bad) js mov xchg jno fimull xor or pop sarl mov testl jg inc rcr xchg fisttp ds cmp pop or xor add outsl cmp add push arpl dec xor jg inc lcall js jmp sarl insl sbb les (bad) push and or jg lcall jmp mov inc xchg (bad) je push daa add es nop insb and cmp add out pop cltd jbe mov inc jmp dec pop dec jnp adc ljmp loop adc jo std pop (bad) xor dec mov popf or insl adc call mov jo imul pop jns mov insb mov fs pop lret inc inc test arpl add out rol inc push fimul adc scas fwait lret inc jo aas popf dec jo or adc in rorb fmull inc push cs xor (bad) (bad) jge or push xchg or ljmp inc adc bound mov pushf mov daa pusha cmpsb cmp bound mov or mov adc xor mov or stos cmp or dec (bad) test dec (bad) imull mov and cmpsb (bad) cmp mov pushf jle in outsb leave push pop cli cmp and lock inc sbb pop xor cmp jge sub mov pop gs lcall sub cmpsb (bad) popa or pop fstpl (bad) sub xor and sbb test arpl xchg dec mov std lahf xor mov sarl adc je xor and sbb loop cmpsb mov and mov out lods movsl shr dec fsubp setbe inc sub negb ds mov mov mov sub lods cli push sti scas movsl cmp loope xchg push jne pop bound test sub pushf jle in lret inc shll xchg dec push loope iret es jecxz jecxz loopne push addr16 sub in imul negl mov add fwait in push push add imul in mov pop xchg (bad) jae sti cmpsl lret jae (bad) pop sub lock sbb jg pop test push sub (bad) std xor xchg dec ss (bad) sub xor stos test sub adc xchg fild adc mov sbbl and add inc (bad) adcl stc jle movsl das mov xor pop jle push push aad std arpl jecxz sldt cmc jmp mov add mov addb sbb hlt mov mov xchg test movsb (bad) stos pop and adc mov mov lock dec and cmpsb sub xchg add or or xchg mov loope ficomp push add add aas lret cli push fbld cmc in (bad) mov cmp adc data16 add nop sbb pusha out sbb xchg aaa incb jp fnstcw ficom pop (bad) inc scas lret leave outsb (bad) jae aad ficom (bad) ljmp jnp pushl in aam cmpsl cwtl sbb sbb icebp outsl inc (bad) pop neg ds idivl (bad) mov cwtl mov adc sti push push inc leave pop lcall mov pushl ret mov or sub shl roll mov dec push int3 sub fnstsw (bad) add movsb push xor out mov and xchg (bad) icebp add add sbb jmp int or (bad) adcl movsl dec add mov sbb cmp insl mov xchg cmp cmp inc inc adc add jb push loope pop or imul jp mov js adc ljmp in shrb lods push lea mov std push push mov push jnp daa mov mov rorb rcrb mov mov mov mov pop and fsubs outsl arpl inc jb add adc add (bad) mov add or or jge adc test xchg xlat fs idivl fnstsw mov fnstsw mov test and lock inc jl xlat div cmp cli fcomi (bad) dec xor adc mov outsl add lret mov ret loope movsb mov push cld pop iret jns xchg aaa lock add pusha movl mov lea jmp lea ja pusha jmp push pushl pushf movl jmp pushf mov pushf movl push mov push pushf lea jmp pushl lea ja dec setge add rol xor add sbb mov push cmp jmp jmp inc ret xchg or lods jp jb push push push pop xchg dec popa fsts mov lods cltd cmp add into ret lret mov ja fcoms pop mov jae xlat stos (bad) loop bound lret (bad) lret xor sbb and mov aaa test nop repnz pusha xchg push divb (bad) mov or add lret pop and ljmp jbe mov (bad) mov movsb jge rol adc (bad) and js out das sbb mov pop mov lods idivl cmpsb (bad) pop xlat pop xchg test in sub lods sahf in add ret loop inc (bad) les loop and in movl add mov repnz cmp cmp pop push cwtl xor xor fistpll mov jnp iret movsb xor mov inc sub iret dec or cmp mov xchg dec xchg xchg or dec push sub dec in jmp out test idivb mov mov aaa movl wrmsr ja dec addb imul insb (bad) out push jns sbb adc sub ficomp jne,pn xchg aam jb in dec loopne or in ljmp insb sti add into inc mov out sbb xchg fbld xchg and mov fimull xchg lret pop push adc subl (bad) mov cmc or imul adc aas or push push xor clc sub stos cli pop and or (bad) call mov in das mov mov xchg push mov xor int3 jmp aaa mov jg stc (bad) in into mov jg jno jp repz insl stos test inc enter lock inc pop dec push xchg add mov into sbb mov mov imul xchg bound rcl data16 inc ret repnz mov (bad) mov push and movsb mov jnp mov int3 stos adc xchg add or or loop (bad) stc xchg inc bound es dec xor fimull test out jg mov fcompl jb add fs jae stc jg clc xor call mov movl jmp stos pushf mov lea jmp pushf jmp cwtl mov inc mov push and xor jp pop jnp sub mov adc sbb arpl mov push push pop jl xor mov jmp lret cmp flds xor stc adcl adc lret loopne gs sub sub sub sub xchg loop xor cmp jecxz mov movsl hlt es cmc outsl fidivr push faddl cld cmpsb adc cli sub adc loope out scas mov jmp lea je pushf test bts or add cmp sub bsf shr sbb xadd clc mov rcl pushf rol add shld add lea jmp xchg or (bad) and fdivr les push sbb je,pn xor adc aaa dec fimull clc pop mov cmc mov sub sub int3 and hlt mov mov add test and add dec fbstp enter sbb rcrb add shrb mov clc sbb outsb (bad) dec in pop and cmpsl push jge mov pop cwtl jo iret push pop hlt jecxz and pop dec mov fdivr mov int and sbbl add test call lahf ret mov movsbl pushf bswap lea pusha mov mov jmp pushf mov jmp push pusha pusha movl pushf call mov inc in cwtl mov push mov rcll sbb daa (bad) and (bad) xchg sub and xchg jo cwtl inc mov in bound jo fwait orl das fistpl cltd popa jo mov dec inc adc adc mov adc (bad) movsl movsb lret push inc scas addr16 (bad) out push (bad) xchg out sub int3 hlt add insb mov imulb ret jl (bad) push ret call cmp sub add addr16 push push pushl movl jmp arpl in xchg jae bound gs xchg loopne adc addl cmpsl push xor jl pushf add in gs sbb pop sbb jo cltd arpl add mov inc in cmpsb xchg popa out inc cmp out pusha repz jg jle lret mov mov jg cs xlat cli dec pop jg jge push addr16 jg mov loop xor scas out mov sbb jg cmp push mov (bad) jg or cmp jno or mov in fdivrl mov test push pop idivb addr16 rclb adc repnz test sub dec push mov xor jg imul test stc mov sub or mov repnz mov pop jbe jge push jg mov push xor jb outsl inc mov jg xor xor ret and loope xchg outsl ret testb push cmp pop or adc jb xor into pop aas leave mov mov cmp lods push push adc jnp mov arpl je push jbe cmpsb cmc jnp cli in jns mov aaa sarl clc sbb fsts aas mov xchg jne cmovns dec jne int and mov mov sub es repz ljmp pop dec or dec cmp pop daa js cmp cmp (bad) lss repnz mov xor and mov jecxz cmp mov cmp mov out les fs xor cmp je or ja push ljmp jl pop push jg loope,pn jecxz push dec movsl and xchg jp stos dec outsl test mov jecxz xchg loop repz lock adc jp in ljmp mov xchg sbb xor and pop jge fwait dec jmp js stos adc cmp pop roll (bad) jbe loopne scas mov cmpsb xchg stc in call pop pop dec dec pop test cmp inc (bad) (bad) jl js jne jae jno outsb imul pop dec in cmp outsb arpl pusha insl pop sbb pop outsb pop pop sbb push insl push sbb outsb push push sbb dec insl dec sbb outsb dec dec sbb inc insl inc sbb outsb inc inc sbb jge jle sbb js jne jae jo push sbb push insl dec sbb jp divb push sbb dec insl inc sbb inc ja dec outsb je pushf inc insl imul negb dec pop jle or jbe insl dec sbb enter repnz jbe insl pusha pop cmpsl cs mov jae jns out add jne cmp xchg daa adc mov in insl push jl loope insl mov test jb or arpl div jb jmp arpl mov jecxz mov es sar cmp insl popa pop (bad) (bad) sahf xor out test jns aaa cmp push mov cmp arpl into scas ret jae dec sub iret cmp jl cmp mov cmp cmp out imul xor cmp movsb in hlt das data16 xor mov ss movsb jo sahf cmc cmp cmp in add xchg jl xor bound aam mov push data16 ja add pop loop sub ljmp (bad) xor sub fsubrs ja sbb pop mov enter pop (bad) mov addr16 scas je adc dec mov (bad) nop popf in sub (bad) decl and arpl sbb es pop andl gs sti popf dec ja loopne imul and xchg lcall cs jge and sub clc jnp sub dec test sub add mov and ja mov (bad) jmp out cmc in pop sbb pop adc xor scas mov xor mov or in data16 adc and fadds out and lods icebp cld js jmp pop pop (bad) enter push addr16 jb clc imul out fnstenv ja testb iret push outsb into imul mov fs clc call js das loop fldenv cmpsb jl insl jecxz xchg out cmpsb gs stos lret xor jbe stos out test push or mov cmp fnstenv sbb pop fwait ret scas sbb and (bad) adc stos jl jns stos cmp es push jecxz enter mov cs lea shr pop inc push aad ja cmpsl and jge in daa call ds stc imul imulb cmp lea fs enter lods push js or dec stc fsubl pop dec ljmp fidivr ss loop mov jge fldt push stc jb cld jge imul ss bnd ss bnd sbb js fldt jns stos jge test pusha sbb cli ja arpl sbb push int3 std jae pop loop pop sbb insb ja fldt outsb xor pop pop xor int3 xchg push push lret bnd jno mov or jnp (bad) repnz xchg dec idivb cs (bad) mov pop xor movsb dec jns fs stc xor (bad) in hlt xor in xor mov shrb cs aam fist test repnz sub cli loopne pop es jecxz lock in out add cmp (bad) pop push repz jo cmpsl out das je gs inc call mov stc movsl xlat jo jae and lret bt cmc push hlt outsl pop cli sbb cmpsl loopne jo popa aad fidivl inc xchg push mov mov and mov data16 xchg pop call sbb rcrb jnp,pn (bad) push int insl cmpsb inc shlb cld int imul inc daa sbb movsb cmp sub cmp int imul daa or sbb cmp test adc icebp dec imul adc or jge std aas sti cmp and int pop cmp pop ljmp jle insb scas sub mov stos jnp cs xchg jns mov es and push insl jne outsb push gs cmpsb je cmp aam jle in (bad) inc ss hlt arpl (bad) leave jno mov jns push inc stos imul sub fwait jg inc pop test gs jp daa bound push and jge sub sub cld jno jae aad fidiv cld and hlt jp in jae in es pop inc je das arpl add jl imul pop or mov lds lods jb cmp leave jb mov jnp es sbb mov and mov rclb adc repnz sub imul sti mov jo and into mov push cmp insl mov vpunpckhwd jp inc divb es aad and in int fidiv out lock cld or imulb sar cmp stos jp push gs jnp mov dec in sbb je pop out pusha daa dec dec in das imul int3 and and hlt fs jnp push es jle adc (bad) jmp push loope push fsubl jmp xor dec push (bad) dec mov aam (bad) daa pusha mov out push pop push pop or mov xor cld push in jp push sub jge mov sub cmp sub sbb je (bad) xor cli xor insl mov lock jne sub div sub pop pop dec cmp push outsb push push sbb dec insl dec sbb inc outsb inc inc sbb jge sbb jl jnp sbb ja jbe jne jae jo aad outsb insb push push insl popa sbb pop outsb pop pop sbb aas mov dec cmp inc sbb outsb inc jl inc add push data16 pop pop sbb push insl push sbb push outsb dec dec sbb inc insl inc fdivrl jae jp data16 je jo imul outsb bound pop cli pop jbe insl dec sbb aas aam ja (bad) out jne pop out insl lods jnp pop mov je aas push sarb fdivrp dec (bad) cmpsl xchg jo ja jg jg pop ficomp popf pop sbb fstpt pop sbb lcall sbb cwtl pop sbb jg push pop (bad) xchg push push aad xchg push adc sarl push adc xchg push adc jg push adc nop push adc jg dec bswap mov int lea int3 mov jg dec or mov leave jg dec or mov (bad) jg inc pop movb inc add ret jg inc add (bad) inc add jg inc add addb insl decl (bad) mov jge cmp sti mov mov jns cmp mov ja aaa divb jne xor repz jg repnz xor mov jg lock xor scas outsl xor out sub movsl jg and jecxz jg and mov jg and test sub cmpsl jmp pusha and lahf jg ljmp scas outsb cs lods insl jg in lods insb sub stos imul stos push jmp call pop loope and pop inc outsl dec popa pop cmp notb ds sbb mov (bad) dec outsb cmp dec jbe insl inc sbb outsb cmp sbb mov jnp jge pushf inc insl cli sbb mov jne cmp insl stc sbb jns cli cmp insl clc sbb mov addr16 cmp insl negl arpl mov popa ja pop cli aaa jbe insl negb add mov pop aaa jbe pop cmp push sbb mov push sbb dec sbb je dec sbb dec outsb mov sbb mov inc sbb inc xor sar jbe insl scas sbb sbb ja scas sbb outsb outsb jae sbb or sub imul jbe insl jmp imulb imul insl test outsb pop es push or aas jle pop aaa data16 cmp mov (bad) jno cmp outsb std dec dec cmp outsb inc cmp mov jl dec cmp push subl js sbb jne cmp push jo arpl in cmp jp,pn idivb cmp stc sbb insw cmp arpl clc outsb pusha mov jbe insl cmp push div outsb push mov push cli ja dec insl aaa sbb imulb mov inc cli jbe inc insl ss pminub cmp idivb xor jae mov jo je insl outsb xor sbb repnz popa sbb pop outsb xor icebp cli pop jbe insl push sbb push outsb xor lock dec jbe insl dec sbb testb inc pushf dec insl inc sbb jnp add scas outsb jp sbb jno in sbb lods outsb imul gs lods sbb insb outsb pop jmp pop cli stos jbe insl imul imul outsb push jmp jbe insl call outsb inc movsb sbb jge jle insl jp aas addr16 xor cmp cmp sbb jl imul cli mov sbb stc outsb pop clc sbb push insl je push divb dec cli scas jbe insl movsb sbb aas jl outsl cmpb cli mov sbb jno,pn jbe insl clc sbb mov movsb sbb (bad) pop jbe insl pop sbb push sbb jl dec sbb (bad) dec outsb mov pop aas jp inc cli jle inc insl mov cmp jbe cmpsl imulb clc sbb insl outsb aas jns imul cld arpl clc insl pop sbb js push cmp jbe insl clc sbb mov inc aas das ja jbe in jge sub jp mov pop aas jbe jae cmp sbb mov push outsl jne sbb cld insl pusha pop aas je pop idivb push cmp jae push jbe insl push sbb (bad) dec ja jb dec cmp jbe outsb aas jno inc sbb arpl aaa jo jl cmp aas arpl jbe cld jae outsl outsb jo das insl lret cmp cmp idivb jle insl clc adc cltd xor shld push repnz data16 add push inc int3 in faddl jge jne pop push jb mulb cwtl jae jle repnz dec fsub imul jnp mov bnd cwtl jns repnz xor and movsl bound (bad) divb fdivrs jae jg es dec push mov les jp int3 in push loope inc gs dec je aad pop pop test in dec aam mov jne sub int3 sbb push test jg insl jp gs bound cmp pop jecxz imul pop jecxz or ljmp ffree stos daa dec shrb jns fisubr jb,pn jl js call outsb cmc lods jp jl mov cwtl jl jns fisubr ljmp nop jns jns cmc sub jns stos bound jl nop jp jns aaa insb pop out stos nop js jns cmc insb ja push outsb ljmp jecxz pop jl mov das fs pop inc sub jb jns shrb jns jecxz xchg push ja or jl jecxz pop popa lods mov out push hlt outsb jns push mov aaa es shlb imul (bad) cmc add gs jl push fs lds sub bound popa sbb inc inc insb pop shlb cs pop and int3 sub bound call fstpt and push jl movsb mov lods fisubr jecxz push push sub dec dec pop fsubr addr16 (bad) int3 push es pop call sub inc adc inc jl lods bound jl rolb dec jmp pop out jecxz mov jl mov jnp mov jl es ljmp jl loop mov jae sub cmpsb push dec (bad) je outsb les fs pop repnz lds aad call jnp lds nop inc fisubl push pop test pop mov imul pop add test je jb insb daa jb xor jb scas dec (bad) in dec rorb jle push lret scas aad shrb inc pop stos jnp rorl jmp inc xor jg addr16 stc inc or mov inc push sarl sub pusha out inc or cmpsl dec out push inc imul insl ljmp pusha rcrb nop pusha mov sub or push mov imul in call call stos inc sub push test inc push mov in fsubrp mov mov das imul shrb imul imul cmp imul test push shlb adc inc je inc cs add rorb jb sub out jae stos sbb cld mov fdivl out mull std (bad) pop stos sub inc hlt jbe int3 mov xchg inc lcall arpl stos push mov jbe das jo sub sarl out jae imul mov leave sub jl dec mov jl (bad) jmp jl jp insl es in push aas in lret push push ds jmp sbb aas push divb dec dec cmp insl dec sbb (bad) dec outsb push inc sbb mov sbb jnp std (bad) lret adc jbe insl dec sbb dec outsb outsb scas sbb push ss inc bound bound cwtl sbb mov dec aaa cmc push aaa jmp pop dec aas sbb repnz cmp jbe sub (bad) repnz aaa bound jle inc aaa lods sbb sarl bnd ja loope dec std insb jnp (bad) sbb divb sub outsl jbe adc (bad) data16 aaa pushf add xlat (bad) pushw add pop jge gs xchg mov outsb pop push sbb pop insl ficompl push not outsb push push sbb dec insl leave sbb dec outsb inc lods sbb inc sub cmp or outsb js sbb jb adc outsl (bad) movd imul adc arpl xchg lcall insl nop sbb lret outsb push pop sbb dec insl (bad) sbb or int adc mov fs aaa mov das push lcall data16 insb add pop repz mov cmc jbe outsb pop jae cmp sbb shrl sub push (bad) jbe sub out repnz pop loope dec mov popa aaa lahf xchg xor mov fs outsb mov or cmp pop aaa xchg cmc push cmp sbb lds dec aaa in push pop mov dec aaa daa scas out sti cmc dec aaa stos imul sbb repnz cmp fildll sbb inc pusha pop mov mov loop outsb xor aaa popa (bad) jb lock (bad) pop dec cmp jbe scas sbb mov dec push outsb repnz or cmp repnz movsl fbstp jbe addr16 in fs popaw aaa and pop cmp mov dec push outsb mov or cmp push aaa sbb push cmp dec sbb sub dec aaa fnstcw repnz cmp insb inc aaa sbb adc jge fnstenv aad idivb fnstenv jmp data16 test sbb insl insl xchg sbb push insb pop outsb stc mov imul pop dec jo pop aaa push sbb negb loope sbb cmp push aaa call sbb repnz cmp jbe insl mov inc notb inc push pop jge pop mov jns lea pop clc sbb push xchg jb aaa into data16 cmp insl sbb mulb sbb mov fdiv push cmp dec pop dec mov push aaa loopne mov pop insb push aaa fcoml xor mov insb pop outsb xor aaa pop test cmp inc aaa out inc cmp jecxz push cmp aad divb bnd ja leave push dec ja jnp out adc js aaa addr16 jb divb xlat add cmp imul cmp jbe insl (bad) sbb sbb push insl rcrb push not outsb dec in sbb jl and jl sarb mov stc int3 outsb movsl jl fstpt and jge sub aaa out and popa xchg (bad) les je mov sub mov es pop std call jns fs jle mov push jl cmp pop fiaddl call daa jo push jae es test jl cs ss pop cltd jp mov jnp pop mov stc or lret fs and hlt jno and enter data16 pop sbb sub loopne or out jl out movsl mov lret in and push je arpl push pop bound out lret and sub lods fs (bad) push sbb lods jl out mov jl xor jae add aaa jl dec push cld dec bound cmp jl int3 mov jl je adc daa mov ret add and loope jo cwtl pop inc push pop aad cltd jp or sub repz push fcmovu fstpt stc jl gs in jp jl inc cmpsb push push aad cltd jp ficoml jp cltd into pusha push loop dec in jl cmp push sub mov pop lcall bound test dec push sub enter or xor push jbe jge loopne push cs repz cmp push ja jmp fsubrl movsl inc jo cmp jp lret imul fdivrs jle lods adc inc loope jl loop lret xor (bad) inc fdivrs pop ljmp push fstpt (bad) pusha sbb mov (bad) jae mov lock movsl dec cmc hlt push or jbe pop jnp mov sub leave (bad) rep sbb mov jbe pop dec cmp cmc jl xchg jp mov dec lcall es inc sub mov push pop das jnp ja jecxz fcomip xor cld jnp and fs addr16 sbb dec movsb xor pop cli mov jae xor mov xchg dec push sbb inc leave cmp pop pop insl push inc fs jl gs cmp bound stos inc ret cmp dec ljmp cmc mov imul loope push push jns dec sub add mov jle pop sub scas jnp bound jecxz jl jge jl and mov fs mov or jnp into mov or movsl xor jo mov scas jge mov sub cmp jnp pop (bad) ja aas mov dec mov inc jns fwait out jge jo mov xchg imul xchg cli mov mov pop aas push in scas roll jae call dec lahf aas pusha add cltd int sbb pop xor dec sub mov sti lret dec decb scas cmpl xchg stc outsl inc adc sahf (bad) jge repz fs call lahf sub inc dec xchg jg adc in adc push dec jae xor cmp sbb sbb inc inc mov outsl xchg dec xchg sub int call pop pusha xchg adc jns pop xor mov mov cld mov outsl mov jmp jle dec mov lahf jmp outsl out adcl jnp jbe stos dec jge outsl je repnz in outsb cs pop adc pusha pop fistpll add inc and bound sbb dec sub sti cmc jbe aas push inc jg push mov sub leave aas (bad) rcrl test cmpb jno pop jg (bad) shll scas cmp std sbb xor jg fcomi enter arpl xlat or orl push sub mov add add add icebp jge subl mov push gs dec das (bad) (bad) pop out aam (bad) mov test mov jg adc mov or loopnew push leave arpl mov imul add pop adc imull inc outsl push dec add sbb mov das push dec mov push scas (bad) push jle or dec mov pop add scas aas xchg and mov mov mov loopne (bad) inc mov jmp leave push scas fisubr arpl push dec outsl jbe notb sarb test add pop xchg push jg nop scas (bad) jmp jbe ja xor cmc les mov repz jns test movq iret scas add mov in ds (bad) scas xchg mov fcomi jg jo cwtl and dec scas rolb sbb insl repnz cmp scas aas roll mov fdiv jg bound rclb dec lcall aas jg ds mov push imul xorl lea imul mov clc lret (bad) fcoms push push stos bound push cli push cmp (bad) jbe int3 ja gs scas ja jg cmp scas mov inc xchg jno clc push ret daa out cmp add pop stc (bad) sbb pop dec sbb inc jge pop add jg imul outsl out fnsave pop jl lcall push ja ds gs das inc push lret in add imul ja inc jmp ja push mov push ja icebp mov test push inc (bad) jge (bad) ja cmc sar lods mov ja stc ret mov ja ds pop jg mov jns test xchg jg scas mov inc dec pop arpl pusha lds ja push popa divb repz pusha adc or and dec sbb pop ja push lds shrl pop push int3 cmpb or mov jb clc ja add mov mov ljmp lcall push decb je ja add mov push pop loope insb mov cmpsb jnp les xchg mov pop sbb gs andl sti cmp push mov movsb mov inc xorb cli adc in pop push aaa jnp xor and daa imul cmp (bad) sbb push inc push jl or pushl mov inc stc jg into iret mov or pushf (bad) imul dec mov cmp push ret push lahf jae adc mov mov lock mov xchg jle mov imul aas add cmp js cli mov push gs dec scas dec and and xor or jge jge mov xchg xchg jl push push dec sar cmp fidivrl jnp jge sub inc inc enter idivl dec mov push iret or mov dec fs lods sub jne mov mov xchg into pop cmpsl jo dec mov mov dec xor jge inc or xchg fwait jge es outsl mov jle inc dec lods aad movsb popa inc lods je popa add lret jge inc inc jmp jge mov lret shlb lods fistp jmp push lods cmp push inc or mov mov arpl jo imul cmp idivl jno pop jnp idivl arpl jno lods fiadd mov mov mov cmp lret adc mull call jae leave or dec cltd jo imul inc clc jo xchg inc push idivl arpl mov mov mov bound nop sbb xchg mov mov jo es mov in mov daa out pop mov (bad) popw cmp cmpsb cmpsl cmpsb push cmp lahf and mov jno insb ja data16 xor xor out mov leave adc fist outsl jnp cmp outsb cmp jbe insl mov ja clc outsb mov push jns sti cmc insl das outsb cmp dec cmp insb push cmp sbb (bad) dec outsb cli dec sbb cmp mov jbe insl js inc idivb outsb inc cmp inc idiv ja cmp jl idiv jp mov jns jbe js ss cmc cli jne addr16 hlt add (bad) lahf mov nop cli lods jp idivb xchg gs sub stos inc sarl cmp das fucomi in mov and sub test jl repnz or outsb ljmp mov insw repz loop loopne sbb loop test and and lret aaa add jge das testb dec iret cs and cmpsb jecxz jns pusha or aaa aas mov das jge pushf dec cmpsl testb dec iret cs cmp mov mov and pushf push out xchg (bad) (bad) mov pop dec fstpl xchg repnz cmp imulb jge mov mov lahf pushf lods cmp push jge cmc cmp (bad) mov leave mov cmp pushf inc call arpl xor and das jnp mov mov pusha pushf push mov jbe sar jnp and (bad) mov jo add aaa out stc cmp aas and and sarb cs bound pushf lds add lret pusha pushf inc cmpsl testb repnz xchg (bad) cld cmp and jp pop fmulp cld mov ret aaa sbb inc or adc pop sbb inc cmpsl testb dec iret insl int das inc cmpsl idiv mov xchg lds mov iret insl sub subl mov lahf pushf inc sub jnp insl push cs pusha pushf inc cmpsl testb dec iret cs pusha pushf inc cmpsl ss sbb jno add les idivl mov fisubrl negb mov cmp cmp cmp (bad) mov insl sarl add cmpsb sub pop je inc jle stos (bad) bound pushf lds cmp pusha or testb cmp (bad) bound pushf lds add mov cmp mov insl iret jecxz sbb add add cmp out lret pushf bnd inc sbb xchg xor mov cmp mov sub iret cmp mov xchg subl and shll ds hlt arpl mov mov in enter pop or inc cmpsl testb mov mov int3 pop iret cs inc cmpsl (bad) (bad) mov mov pusha pushf inc ljmp add (bad) sarb cmp jno aas or imulb jle jbe sub mov in scas mov mov add (bad) pop iret cs pusha pushf push jmp jge mov jle sbb ds ret and dec iret push (bad) mov pusha pushf inc cmpsl testb dec iret cs and setae hlt fwait cwtl lret push imul cmp cmc fwait popa (bad) cmp ror inc or lret cs pusha pushf inc cmpsl testb and sub xchg mov cmp cmp hlt repnz pop ret pusha pushf inc cmpsl testb dec iret cs mov pop je pop mov or dec cld popa mov add jp cli sarl add mov lods (bad) ffreep cmp xor iret sub cmp dec cmpsl neg mov jne aaa cs mov cs cmp or testb dec push arpl incl add dec cmpsl (bad) mov ficom mov and xchg lcall jp jnp jmp mov cmp xor pop imul ret ret test je mov jge cmp outsb stos sbb pop jb je dec pop call lods pop gs pop or cmp leave rclb pop in and mov push scas pop mov stos adc inc adc sub mov ret or pop imul jns xchg je pop xor push cmc jb xchg ret pop jns cs imul fldenv or jmp sub jp push push pop imul data16 push push mov (bad) das outsl test aad xchg ds jns jp leave sub mov divb jns scas ret fdivl out jnp jae jno lret xor pop xor jp sbb cli cmp xchg inc pop adc gs jp sbb cld push popa push popa pushf jp (bad) jmp add mov sub xchg xor stc sub idivb jnp shrl cmpsb adc test jp int3 (bad) pop jmp pop jl into mov xor pop push xor scas lods in pop gs test push cmc outsb jns popa popf dec mov jbe mov mov stos int3 xor cwtl push cmp stos aas jbe sub loope (bad) fdivrl outsl xchg jo jb arpl pop push push das cmc insl push push js arpl mov outsb bound jno fmuls nop ret out imul in outsb outsl fcom or jb mov fdivrl inc push pop gs mov cltd movsl decb pop push xor push in adc insb mov push stos test sbb jp imul ficompl xchg es pop sub clc pop gs pop jmp push add js sbb lret aad repz pop jnp sbb fistp jle,pn xor fst jno add xor jo fldcw jns push and es movsl push pop mov push jne pusha xor jno lret pop gs mov iret stos arpl outsb in pop (bad) popa push push jb xor ret fxch mov pop daa or cwtl xor jns cmp jge sbb jo jp gs gs js insb lret movsl jb in and dec jnp sbb loop outsl cs fstps jno arpl push sbb jns jp jb jge aad popf push lcall sbb pusha outsb pop pop sbb aas dec and ret jp push mov pop int3 bound jge xor push jg or arpl iret xchg dec jg call je ret icebp jl jg push xor pop leave jg daa cwtl jnp popf jno jg inc inc lock dec sbb mov shll jg test aaa jg (bad) xlat in insb data16 jg fs mov mov stos pop sbb stos jle pop push data16 cwtl aas jge (bad) and dec outsl jnp push insb jae pop (bad) jle mov fcoml jge ficomp repnz ljmp add sbb (bad) stos jo repz (bad) popa pop mov xchg mov sub cmpsb loop mov repz cmp inc xor mov stos mov inc dec inc or aas pop scas push dec push cmpsl and mov push addr16 sbb call and adc pop or and inc and aas xor jbe pushf ss pop or jae cmpsb ja movsl jmp jbe imul xchg jns insb xchg pop insl imul cmp imul jp cli push jbe xor lret arpl outsb bound pop imul pusha jne sbb mov jp imul xchg jno pop and mov push (bad) jbe sbb aas into pop push jnp jbe popa sub xor loopne pop aad dec xor das je jo repnz out outsb data16 mov movsl pop xor aaa push fsubp bound dec xchg jp call push jne clc mov cmp pop gs popa loope pusha mov imul scas push repnz xor dec fsubrl aam jno loop,pt icebp sub cmp jo imul mov pop aas push mov je cli and pop jne popf loop hlt psubd imul ficom fidivrl cmp call and jo dec popf pop xorb outsl ja xor (bad) pop lods inc aaa dec inc jge std scas ja ret out jne mov cmp ja call xchg arpl sub jno sbb or jmp (bad) mov test fwait into xor adc leave movsb ja jbe and add pop fsubl inc lods mov add out pop push pop popa dec fwait sbb imul mov mov outsb dec pusha lret pop pop iret sbb loopne cmp xchg dec push sbb adc cmp js loope mov or xlat (bad) mov jg mov mov std pop cmp outsb aam add jp lret scas jl,pn cmp adc jg insb imul mov xchg dec jge sti popa ret stos mov fwait and lock cmp mov insl cmp jne fldcw iret sbb frstor data16 in ljmp icebp outsb in sbb dec insl (bad) sbb jnp mov imulb ljmp insl xlat sbb notb dec inc pop jle pop je popa sbb imulb out sbb aam dec sbb test ret jge pop jp jbe icebp insl out sbb mulb ficomp (bad) cli push jbe insl dec sbb inc push dec sti dec cmp push bound stos dec sti mov (bad) aaa jae cmp mov mov and mov lret mov jg ret rcrb dec cwtl fnsave scas clc sbb pop jg ret pop sti repz jg push les in imul rcll dec xrelease xlat mov jo aas adc fwait stos mov rcr dec fnsave js fcoml jo pop (bad) jmp sti mov cli aad ja lea fwait popa mov dec hlt aaa scas add repz fldcw lahf lret outsb and sarl test jg lret das sub jg jmp cmp pop fs pop (bad) jg out pop mov lds bnd push mov jl jg je jecxz dec push cmp or jmp mov inc aas mov mov cli inc pop jecxz adc rorl pop popa and jg lds int3 jg movlps in mov dec (bad) sarl add enter loope sbbb outsl dec cmp jle loop or cvtps2pi inc adc mov stos arpl xlat mov dec fs mov scas pushf jae add jne out outsb mov jg cmpsb dec fiaddl das (bad) cmpsb adc push inc sub cmp ret push les lahf adc jg sub outsl jp mov sbb fildl inc repz and dec inc out sarb and dec inc push jg repz jg or jo pop rcl scas add loope adc cmp mov mov xchg in inc mov add int3 je mov pop cs or jecxz flds inc dec stos mov cmp cld add adc mov ja idivb cmpsb and es mov mov jg out jmp pusha jg xor (bad) jg int test jg and imul mov mov push mov mov jecxz dec dec jg lahf test jmp mov mov jle pop jg inc adc mov out xchg mov orl push lock pop repz sbb aas sub je jb (bad) (bad) cmpsl mov dec jge inc mov mov or repz addl (bad) push jg cmp sti les or jg (bad) pop xchg dec int3 cmc aas sbb mov mov push rcrb out jo pop arpl mov add sbb jb xlat inc add cmc lea iret jg popa jae subl mov (bad) imul faddl iret pusha imul (bad) xor xchg sub mov jg leave mov inc inc cli out std jg mov inc push mov mov xchg lods or xchg pushl jg pop and inc dec incb popf mov mov dec push lods mov pop jg adc jg jp repnz add sub fistl lds jo mov jno addr16 mov inc push cmp mov sbb insl insb xchg popa rcrl cmp mov jge jle sbb test test push push stos inc aad scas mov ja add ja inc or jnp push sti fs mov rcll xchg aas mov lods arpl insl rolb and cmp shrl lods idivl jp sub out movsb bound out (bad) ja dec jg sbb pop repnz adc push lock push xor mov frstor cwtl cltd aas inc adc sti dec fsubrl mov xchg aam pushf jle pushf dec push xor sarl xchg add sbb ljmp out (bad) cmp mov or xor outsl mov aaa inc daa and push fnsave mov jg pop pop fs dec mov push push adc or jg inc or sub sahf hlt pop adc (bad) mov push frstor mov popf popf roll push fidivr fldcw inc out jl or pop xchg movsb lahf inc adc out pop xor fdivrs mov inc cld jg out or icebp outsl (bad) jg inc mov add xor jg adc inc movsb cs jno sbb pop ds addr16 jg fisubl add xor pop mov out and out cmp fdivp add stc lcall xchg or aam mov rep aad inc or xorl sti sub ret pop addr16 jg mov mov mov inc add imul std sti sti cmc mov fcmovnbe loop inc jg cmpsb mov addl dec pop popa pop jmp push cmpsl jno push jae inc and adc mov jg nop xor enter fadds jno mov sbb popf int test lcall inc ds dec and jo lahf sub pusha cmpsl and (bad) xor push pop mov addr16 test cmp out imul xlat mov lret outsl out cmp icebp imul aas les call lea je bt test cmp push call pop pushf jmp mov push pusha lea jmp bswap pop push pushl ret jmp and and leave or inc mov es mov ds jge sarl testb shrb mov push inc (bad) les daa in (bad) pop and test and xchg ljmp adc and xchg xchg fs pop mov xlat sahf data16 cmp sub mov in out cmpsb fsubr pop cli call add sahf ret call aaa rcll negl out sbb mov lea or mov mov in les andl cwtl lods xchg push cmpsl jle push push fidivrl movsb fwait mov sub into dec loopne sbb mov push notb xchg fbstp mov pop test outsl aam sub pushl dec jmp movl push pushl pusha mov lea jmp shll lret adc call iret into dec mov jp leave pusha ror sub mov cmp sbb mov cmp add cvttps2pi add mov loope jmp aaa mov pop iret lods orl inc push in sti pop enter sbb (bad) (bad) dec sbb adc out int3 int popa data16 cli jae mov push push mov sub push (bad) cld (bad) sub pop xor pop (bad) cmp cmpl pop and jle pop clc dec popa ret mov imul clc mov jg xor sub jecxz rcrb pop mov ds cmp orl cli push inc mov in test lods dec jmp cmp pusha mov cmp pushf pusha cmp push jmp sub mov lret or and push hlt xchg fsubrs push push sub sub xchg mov adc push int3 rolb (bad) std rolb mov sbb cmovg adc jge lret or adc and jg test push mov mov fwait or push pmulhuw rorl mov jb or adc stos xchg cld jae outsb mov fildl adc mov sbb cs call adc push ret movups in shll pusha jbe sbbb stos addl cmp add mov jne fidivr xchg sbb xor jl cmc push push jle pop xchg loope mov sbb or push lret jnp movsb sbb nop push xor cmp leave aad ror inc adc jne mov daa jmp lds fbstp ds arpl inc jnp pop jg pop cs outsl add out or cmp and xor push inc addl mov pop xchg sub mov je push dec stc pusha xchg or and mov mov pushf lods (bad) stos cld adc or sub mov inc inc jg aas xchg mov loop ljmp dec cmpsb mov insb cmp lock popl inc xor std rclb jo adc dec addr16 lret and aad pusha inc push dec pop (bad) adc add pop out roll xchg jp rolb inc addr16 pop jle fcoms repnz adc mov jne jmp andb dec jno rcrb cmp sub movsb das lock sbb aam adc aas ss pop pop mov and cltd hlt divb jmp aam lahf int fild mov (bad) adc adc fwait pcmpgtb push nop in aad lret pop sbb outsb mov or xor pop (bad) jl fxtract mov mov push daa pop lret pop pop xchg dec leave testl int xchg (bad) pop jb repnz out xlat and sti fadd mov jmp and xchg daa or jne aas sub jp jo sti jns (bad) icebp jae icebp xlat movsb (bad) jmp movsl inc aad in fnstcw sub das xor nop adc (bad) movb mov ffree push (bad) hlt sbb jg daa lods jle xor xchg mov scas ds jno jns xor and jmp ljmp xchg push int negb jle pop mov mov cs mov push cmpsl add push push ds test ljmp push fild (bad) or mov popf cmp ds push mov bound ret and adc shlb xchg sahf cmp mov push inc imul aas inc cwtl repz imul mov in not sub cmp add mov cli outsl pop (bad) pop pop inc mov clc repnz dec inc mov lea mov jmp adc sbb stos fwait sub pop pushf loop pop int jle mov jns ss inc sbb dec rcrl aas and stos cwtl pop push scas pop mov addr16 mov (bad) pop cmp pcmpeqb or test outsb out imul cld xlat or or adcl call inc faddl push call or dec jo mov xchg aas jecxz inc sbb stc fcompl outsl mov pop mov imul or pop sbb cmp or test and pop sbb in loop popf xlat outsb in fwait es sub inc or jo mov push xlat sub imul (bad) ds dec mov fildl cmc rcr not jmp pusha mov pushf cmc cmc pushf shr cmc clc cmp cmp call iret or and (bad) call inc nop nop/reserved inc cmpb jmp rorb add fcompl or xchg mov adc rcrl gs in cltd push cmp inc and pusha cmp add stos clc ret bound loopne jne rcrb pushf xlat movsb clc xor cmp or fwait sbb jmp rcrb dec data16 xor repnz iret cwtl xor sbb in jns fidivrl movsb push insl popa lds push sub insb jle cmp push gs xchg lock int sub loope popf test cmc cmp call xchg fucom push rorl inc sti xchg or lahf out or or call out sub (bad) mov call stc imul lret push (bad) adc cmp out and pusha pop xor or call mov shlb adc jl ret inc out cmp lret aad mov mov add cmpsb rcll cmp out dec shlb (bad) jmp lret or (bad) jb scas xor jae in or shr mov std cli or add add dec lods aas jbe mov ljmp es add dec jb or push and jmp stc clc call je ljmp mov mov mov pop xchg mov jecxz xlat sbb out mov xchg outsb xlat xchg jecxz push dec ret push movsl mov nop mov ja mov (bad) in (bad) (bad) mov mov xchg mov dec push lods push (bad) mov mov xchg lods in cltd mov mov shrb imul lods sub jmp mov dec imul mov xor nop mov pop fwait sbb loope adc sar sbb and sub out repz les and jbe aaa cmp std rorb inc fcmovb and test adc xor sub test out cmpsb fwait repz (bad) xchg inc jle pop mov cmpl arpl inc xchg roll (bad) (bad) mov pop dec bound sbb jecxz leave pusha xchg notb rorb in aad rolb cmpsb js inc pusha pushl lea jmp lcall mov jne test imul outsl push cmp add (bad) jg leave push jp test mov mov mov sub sbb test lods push jp jle mov mov je xchg jae inc int popa jge daa sub lods pop jp cmp out scas movsl cmc jns (bad) sub dec inc lea adc push aam mov cld mov shlb repnz dec pop pop (bad) ret sahf (bad) push loop xor sub cmpsl shlb add dec fdivl mov mov insl movsl divl fs push inc mov rcr adcb fwait jle not mov rcl loope cltd stc std je sub inc aad fnsave mov or xchg mov mov push dec inc mov jno sub ficomp les divb fidivrl jo cmp xchg add test outsl in mov imul lea in stos dec ds jno (bad) cmp xchg insl jns out mov stos xchg outsb fildll xchg stos arpl les sahf xchg add cmp (bad) in add shlb jne mov idiv lds fmull inc ds mov fbld fwait sar or mov dec push xchg iret movsl lahf jae out ret (bad) add test pop mov jge lcall mov or pop fistl cmp pop fcoms add test add add fs mov out push test int3 sub jbe test test dec pop jmp in cwtl jmp push sbb pop and xchg popf sbb sub sbb or push or sahf cmp ds in sahf ret daa add in push cmc nop sub nop push lock mov stos cmc cmc add pushf clc cmc cmc mov cmc test jmp setnp movzbw mov pushf movb push movb mov movsbl pop pusha pusha mov mov pushl ret daa mov bsr bt mov cmp shr xor jmp mov inc mov xchg mov ds ret scas in fadds cli sub cmp cld dec pop mov cltd into (bad) jne inc xor xor mov xchg out and aam bnd sub (bad) in mov cltd out rcr out test nop pop add outsl mov dec inc ficomp pop fisttpll cs push daa add fmull pushf mov sbb test xor fucomi iret xchg pushf cmp pop psubd or rcll cwtl mov in cld mov out cmp jg jbe in mov cmpsb mov lock xor jb out mov ffree in inc inc cmpsl nop imul sub or cmp xchg push adc jne sbb sub xchg loop aam pop (bad) hlt cmp cwtl adc mov push imul int3 repnz into out push xchg (bad) add pop push scas xchg les inc lods pop pop pop inc mov call xchg (bad) mov sub add mov test push les loopne add ja rcl or clc cltd jmp fiaddl loopne jb aas mov sub cltd into push lods add popf lahf mov movsbl bswap pop setb bswap xchg xchg pop call jb pushf pushf pusha pushf pushl ret add inc sti outsl mov mov daa adc repnz cmpl cltd mov repz addr16 das repnz fsubrs xchg ret mov jne jle push data16 fistp pop (bad) ss jbe or js lock lahf dec insb mov xor mov fnop cmp rorl andl cwtl dec pop or ja bound nop pop lret ficom out mov pop pop int std fisub clc dec (bad) ljmp pop jmp fisttp inc aaa rclb fwait imul nop mov data16 pop mov cs jns inc push adc cwtl dec pop mov sbb ss add dec sub mov add mov addl xchg loope sar add mov add pop pushf xor aam dec je outsl xor add rolb adc sbb jl,pn fs mov xchg pop lret rol cld loope aam push rolb or adc test xchg lret xchg xchg leave imulb insb lods stc lret cmpsb or fidivr sbb ficompl out icebp cmp push cmpsl outsb std loope inc add jae dec mov je or test mov lock ljmp push fmuls inc jecxz test and mov fldl dec lds jno add int test and aas and (bad) adc out das rolb clc add loope mov push out cltd fsts push or push and add xchg daa push jl icebp je in mov insl mov xor rorl lret outsl add imul testb insb pop (bad) adc mov sbb aas aad fmuls sub inc mov lock je mov mov lds movsl (bad) inc (bad) jg daa and sub (bad) addl mov ljmp dec gs cltd push dec and rclb lock mov pop sahf aam or fwait jp sub mov arpl cs pusha sbb fisubl cld xor adc (bad) hlt lcall inc es mov pop mov mov mov lret mov rorl and push hlt push scas add fldenv adc or enter cli stc add mov xchg mov das loope adc push push dec xchg cwtl gs (bad) inc (bad) mov jns inc sub (bad) mov aad xchg push and xor inc sbb cmp push fisttpl loope ljmp add loop inc clc mov push insl mov test add je mov sbb cmp icebp mov xor push je imul cmpl pop sarl mov lahf xchg mov and scas nop add gs outsl fs gs imul add or push push jno add out pushf mov add negl arpl pop (bad) hlt ja and outsl mul repz cmp fsts mov sbb mov adc dec xchg (bad) jno mul clc (bad) mov or inc std int mov ja inc outsl sarb and (bad) lret inc cli movsb or adc mov loope add shr clc push mov aaa or jecxz ds pusha fcomip jmp leave adc add sub pushf lods aam xor enter fsubrl add adc xchg lds fbstp mov push test push or movsb ret pop mov fcom fwait lock push (bad) jbe add stos dec rclb mov pushf pushf pushl ret pushf jmp repnz call xchg inc push push sahf aam jo cmp adc aaa xchg mov bnd rclb int push roll pop outsl les loope (bad) (bad) add sbb syscall stos outsl dec loope (bad) dec inc inc inc (bad) aad adc imul imul out jg fstps sbb xchg cmpsl xor xor leave xchg dec sbb call in sub push cltd roll fisubl inc fisub jp push fsubrs inc sbb aaa in sbb loope,pt mov lds repnz pop (bad) xchg sub and adc mov rorl in inc sub sub jae dec mov sbb sbb xchg xor test xchg outsb push addr16 (bad) dec xchg (bad) or xchg fld push aaa (bad) mov push sbb outsl (bad) (bad) out inc inc jbe sbb test arpl fidiv dec inc cmp popf std fs push addr16 repnz les enter aaa lret orl idiv insl push icebp (bad) shr addr16 andl mov mov fld les and sub inc and mov lea jl add fs jmp aas cmp pop in inc jle (bad) repz stos mov adc data16 pop cmp xchg (bad) in add int dec mov js cmp stc adc fmuls adc xchg mov sub ror rcr sub incb xchg lds stc adc (bad) ja enter push adc pusha push dec out (bad) lock stos aad mov rcr popf mov daa mov popa ja cmp push cltd ret lea lret mov loope test call jns push jmp mov jb or dec push shrb mov push insl int3 imul jg out inc push and sahf mov les fcoms push cli jp xor jb mov out jae fistp sbb mov loopne mov jmp add mov jo scas jae cmp add movsl dec or lods pop sahf or insl test xor lds cli mov sbb adc sub mov pop mov lea push pop mov xor and pop lock into xor xchg dec mov inc mov adc and inc push push test add mov adc push in inc stos aas or mov add cli lea pop sub loop cmpsl out cmp pop stos mov movsl and xor loop cmpsl adc cmp mov pusha hlt dec (bad) xchg mov jne cmp push mov xchg or push clc cmpsl cwtl push add xor je daa jne lcall adc sbb jge pop adc xchg cmpsb (bad) pop xor fdivr movsl mov push xchg js rorl and cs pushl jp mov lret out ds out jo sar dec jns mov shrb and insl inc mov movsl pop xor call fucomp fsub int or xchg jge imul fs test xor xchg out mov insb mov leave inc insl push outsl adc mov jnp cmpb call jmp lcall loopne inc fistp adc lea rcrb (bad) xlat push add scas mov push sarb movsl dec mov xchg mov scas ja mov shl aad sub push mov xor decl xor xor inc stos cli or dec fsubr jnp mov test das xchg testl cli repz shlb aas sar bound xchg es pop add or ret add das xchg xchg dec inc imul pop xor scas cmc js inc lea lahf imul mov popa lods out cli adc test jo icebp xor push pusha lea call jg push mov pusha pusha pushf push lea jmp not aad movzbl push test mov lahf sub pushf mov rol push shr daa bsr push lea sar push sub ror rcl mov pusha clc test stc test pushl lea je movsbw mov shrd add and mov pusha stc call lea jne pusha jmp add inc gs outsl fs gs imul add pop fs popf pusha movl pushl movl pusha pushf lea jmp pushf call call ja test or mov scas jae ja call arpl xor (bad) ror (bad) jl std cltd push sub pop lahf jae cmp xor sbb push dec (bad) shrl loope lret vpaddusw and dec icebp sub add or sub or xlat push in call cltd repz push mov or cmp nop jp jb and push dec test push loope ret sub mov jle pop (bad) and rorb pop inc and xor stos sub nop rorl rol push cmp sahf inc sub inc cmp add lcall call pusha jmp pop cwtl and loop inc ljmp dec movsl int3 in mov sahf hlt or sbb adc pop sti clc ja mov out enter xor mov adc leave sbb mov dec pop adc mov inc and adc fwait rcl cmp mov mov inc xor push push loop pushf loope loope ss (bad) flds and sub xchg ja sti dec cmp mov aaa cwtl or mov or lcall add push es cmpsb lahf addb scas push adc adc xchg lock aad les aam out aas add inc sbb iret xor movb (bad) cld (bad) jmp inc and pop add push movl movb push pushf lea jmp xchg lea mov cwtl bswap cwtl lahf lea call mov pop mov lea jmp push bt cmc call pushf movl push jmp xchg stos fbstp in or mov pop xor cld mov movl cwtl mov inc cmp movsb out push mov mov xor scas add inc push js jle mov inc xor lahf ficoml xchg outsl add scas dec mov inc cs xor repz (bad) divl iret pop pop mov push scas sbbl jb out sbb (bad) mov push or jbe or sbb mov xchg in mov data16 sbb push aas sahf test test fwait mov cmpsl clc pusha mov cmp add pushf lea je test add pusha pushl push push lea jmp push call lea jae test jmp push pushl popl push pushf pushl ret mov or stos mov out lcall divl sti xchg jle cwtl mov add movsb push jne idivl mov jle pusha pop stos sti add sub scas jae jo fidiv dec into xor mov add movsl sti ljmp jp mov ret mov addr16 lret or cmp cmp push push pop test mov push add pusha jmp push push call mov neg mov cmp cmp jmp add inc gs je dec popa outsb fs add neg push ror push sub mov bts pusha clc bsr mov xchg mov xor call jge mov mov sbb adc out (bad) out in mov loop mov lret jmp sahf cmpsl ss bound nop mov les push icebp in adc jmp lds mov add jp cwtl and ret inc loopne fbstp mov push fidivrl jg sub sahf jb inc ss push test test and sahf jb subb fldt outsl adc fidiv nop mov iret jge xor movsl adc add movsl inc adc lods xchg (bad) jge outsb mov jae call call pop jns inc out or daa ret mov mov lret jecxz mov sti jb mov xor fisttpl cli out test jbe xchg (bad) mov ss xor jl icebp and lds and cmpsb xchg xor and xor xor pop cmp cmp ds dec inc xor pop jg pop and adc xchg fdiv pop (bad) out fcmovbe and pusha xor jmp pushf mov mov push push mov mov cmpsb enter in scas or lods sbb movl cmp cmp push mov test push lea je test jmp rol call pusha clc add push push mov bsf mov stc push cmp movw mov lea jbe xadd shld rcr btc mov shr xchg add pushf and and mov setb xor shld movsbw add movzbw not bts movl clc bsr pusha mov add bt jmp cmc bt cmc cmp push call cmp xlat cmp or add cwtl test and popa pop xchg cmp mov push jo xor mov rcrl xchg repz sarb cwtl push aas fildl gs lcall sub dec push test or cltd lock jbe cmp test pop (bad) adc add add rol add add and xor btr mov stc shr cmp clc cmp call outsb pop mov call ds pop sub popf cld loope jmp dec test xor xor inc mov bound cld dec test lock idiv mov cmpsl (bad) sub inc int insb jecxz mov xor dec shl lock aad in sbb pop pushf lods into (bad) xor push pushl ret pushf pushl pushf lea jne mov adc cmp seto mov mov sub neg btr btc call cmp push inc jmp lahf pop sub pushf shl repnz xchg lods das mov xchg mov clc fldt adc and mov mov cli lods test xor popa jb enter loope xchg push mov lock out cmpsb mov mov aam add xor in imul cmp pusha mov mov lahf xchg out push clc mov loop xchg lods xor rcrl hlt pop pop leave mov xchg or stc xor cmpsb or lds jno test adc std inc jmp movl call roll lret daa ljmp jecxz cmpsl (bad) lret call mov push (bad) mov mov sub inc loopne lcall imul pop dec (bad) lds shr popa outsb movsb data16 sub push mov adc dec cmpsb xchg cli add jecxz sub ret cmp int cmpsb xchg and or xchg stc aam xlat dec lock mov jns sti fcmovu test sub stc xor and mov jmp jle rcrb adc or dec mov daa ret xchg add ja sldt add add add add add add lldt lldt add add add add ltr xor mov (bad) std sahf inc lods iret cmp pop lds dec push xlat push cmp aam in ljmp (bad) (bad) aaa push iret inc mov gs mov push adc in in dec mov je add inc fild sub xchg outsl sub dec push insl mov out jle xor sbb sbb and fstpt jne imul mov cs pop (bad) lods push pop and std fildll out insl lcall ljmp aad push ret test addr16 in stos jne cmp sahf andl addr16 lcall xchg push fisubrl mov sahf int3 out add fldcw xchg repz in pop (bad) ljmp push push xchg xor fldenv xor pop adc imul and notb add jnp cmp ja (bad) out sbb mov sbb adc or cmpl xchg sub loop mov lock jecxz xchg sub mov cmp daa hlt dec shll xchg mov je dec inc (bad) (bad) int lods xchg jle test or addr16 mov xchg lahf adc (bad) (bad) xchg jle inc test stos xchg dec pop sub push push lds dec into mov sub dec hlt xchg lds adc sub push les cmp test lods xchg xchg sbb sahf xchg popa call loopne (bad) imul (bad) insl sti mov xchg movsb adc mov (bad) int3 pop in fadds pop mov fwait jge jl orl in faddl fs (bad) pop pop pop mov push and adcl push dec inc add jno cmpsb or mov icebp cmp cmp out in je mov xchg mov das enter push (bad) out or fidiv fcompl and pop xor pusha les call mov pop pop jno adc pop xor mov aaa clc inc mov mov imul js out sbb inc sbbb bound outsl fbld jbe mov test inc push nop push or or (bad) test jge fwait arpl pop mov sub icebp push fisttp cmp sbb jp push out inc or push xorb jecxz test xchg addr16 fistpll and pop adcl cmp pop pop into pop cmp sub fs mov xor aas mov mov iret fstps jb cld sub in mov jns das es stos mov push aaa bound pop insl popf adc and dec fldt in sbb mov les jae imul xor cmp jecxz ljmp pop jp or or aam dec fsubrs mov jmp aaa notl jae push enter pushf or out mov or cmpl (bad) xor dec inc push and (bad) sahf test mov pop lock sbb loop (bad) ror cmpsl cmpsb and push jmp push movsl dec in mov in inc cmc sbb clc data16 cmp insb imul pushf call mov jnp cmp jmp cmp jecxz cmpsl movsb jbe inc incl out in dec lret dec cli push and rorb daa lret xchg mov add out fcom in cmp sub xchg out push sub stos push push movsl js inc or sub ja push cmp push popa lret leave cmpsl inc push aam jb push mov jno inc shll and mov pop mov lret fildll jmp xor xor sub adc pop pushf cltd fmul sbb clc clc ja (bad) cmp mov or fild imul clc insl xchg scas dec mov test imul push or mov inc xor das push sahf clc jmp pushf jnp push jmp inc dec ret inc loopne adc iret shrb or mov fldcw int3 mov dec sbb sbb mov or mov mov adc cmp (bad) dec dec sbb test pushf popf dec sub repnz pop out pusha xchg jo mov or std ja aas cltd mov divb sbb and cld movsl imul mov inc dec scas xor lods loop std xchg dec dec cs and out adc dec rcrb out pop lahf or imull add ret arpl iret push inc mov mov and cmc xor push into gs xor push cmpsl scas push out int (bad) outsl test lret fisubl mov cld jmp xor inc sbb adc fcomps (bad) insb mov pop out adc pop push ret xor push ret cs fisttpl push add ljmp cmc clc inc jg leave or outsb js jecxz dec (bad) insb stc sbb cltd iret mov int sub or sarl sbb mov and add xor jb mov popa popf out adc dec imull rcrb add pop scas stc sbb inc (bad) out cs mov out es es dec xlat les xor into (bad) adc fwait ss out push nop pop dec pushf sub push dec sarb or push push sarb cltd push xchg incb leave (bad) int mov dec out flds cs sbb and aaa je inc sbb cld jae mov cld test cmp sbbl fs pop sbb cmp inc scas loopne pop ja test movsb ja fsub ret cmp (bad) mov fs or fcmovnu jecxz gs pop scas pop (bad) xchg js pop pushf lds sarb sarb ds scas mov in movsb out test cltd jmp inc sbb push nop aam aas cli lcall lock jl test jne imul out and and shlb and stc lea pushf dec or jne lods push mov sbb xchg cmp hlt imul mov and mov outsl jg jl mov out mov or mov int3 popf cmp push cmpsb stos xchg push pop xlat aaa mov arpl sub mov pmaxsw setnp pop lods xchg mov addl clc fisubr int3 mov mov imul add push inc mov xchg and jns add mov aaa outsb inc pop xchg pop rcr xor and jae jle lods sub push push stos add push lds lods sbb cld add jl ret and xor sahf insb dec push or outsb push imul sub pop pop test fmuls test imul lret xor sub pop mov (bad) xchg negl mov sarl mov sbb or outsl mov add add mov loop loopne push push outsl ret sbb subb loopne sub (bad) push (bad) adc hlt shll or addr16 leave mov aas xchg jb shrb les and (bad) lea jg dec pop sbb mov aad jo inc xor push std cmp rol jmp xorl out mov or pop cwtl mov pop (bad) idiv ja pop repz mov xchg mov push dec faddp (bad) pop das inc int3 dec rorl inc loopne sbb lds fdivrs loope (bad) repz roll adc ret int cmp and out mov or aaa jp (bad) mov repz (bad) cmc lcall xor lret aam push daa sbb or cwtl push dec xchg (bad) into add sub int into fisttpl scas pop popa icebp or imul cmpsl sub mov xor sbb jno mov cmp mov mov in mov loopne dec cmp iret pop pusha push ljmp adc pop aad aas push insl stos push jbe lds xchg inc jae mov dec sub push mov scas iret pusha iret (bad) and sbb jns xchg adc jge pop push fist idivb jo in xor fs adc imul jne pushf mov test mov mov fwait out call xor roll pushf stc push popf hlt (bad) or lds and out jg scas push test jmp xchg cmpb loopne shl jae sbb sub inc clc fldl scas scas jl or push outsb (bad) mov es (bad) sub jmp (bad) scas test xor ret das out jecxz jbe mov xor dec and mov ret xor js subl push int3 test push popf loope xchg push les cmc faddl fwait addr16 fbstp nop inc aas lods xor cwtl inc jne sub mov test aam cmc add in (bad) cmp arpl aam pop in sbb addr16 (bad) mov mov ret adc rolb daa jp adc mov sbb or stos inc lods into inc (bad) ret pop daa imulb push lods incb pop and pop test cmp mov dec sahf sbb or xlat rorl outsb pusha sub inc jg xor mov xlat clc dec dec dec jp divb push cmc sbb clc cmpsl cs jg fldenv mov sbb imul (bad) mov pushl lret inc sub add adc pushf call movw pushf mov lea jb stc bt cmp pushf call into pusha int decl inc ss mov jl and mov iret fistp xchg out jns jle (bad) mov rorb ja in mov xchg wrmsr ja imul xor pop push pushf addr16 out roll scas outsl (bad) sub inc outsl icebp insl aas les jnp sti sbb mov imul int3 pop jbe sbb or cwtl cmp mov or cmp gs adcl or cli iret mov xor or mov jle or leave aaa adcl inc jns sub negb push jnp hlt (bad) loopne sti sbb mov cmp mov cmp fnstcw cmpsb std xlat daa xor push mov out and ds push cwtl dec in insl mov mov pop rcll mov test imul test mov fildll jnp cmc pop cmp pop push adc gs mov inc dec lret outsb xor pop cmpsl les or inc stos dec sbb fs fsubp dec ret jb lcall ret pop jp adc inc (bad) cmp pop jo lret test sub inc cmp lcall mov push pop push jnp mov sub (bad) pusha stc xchg shrl xor push sub push xor cmp cmp leave mov (bad) outsb cmpsl xor (bad) lock mov and xor mov rclb xchg (bad) xor xor ljmp pop lock pop or clc push orl pop mov pop (bad) fnsave adc loope fcomps or notl sub test push mov leave daa ss adc cmp inc sbb int flds inc stos cmp in mov adc xor in rcr push mov adc jmp adc pop jo repz cmpsl cmpsl hlt arpl movsb out repnz mov lock idivb sub cmp and (bad) ss sbb ffreep loop ljmp stos push push (bad) jnp sub lret inc sub inc mov inc mov lea imul adc mov cmc xchg jp orl push and jmp xchg jns jae iret ds cmpsb mov repnz push push (bad) mov jp shlb xchg cmpsl sbb clc cmp aad call inc adc jl add push jae sbb clc jp cmc sub cmc test jmp and aas jecxz or pop andb (bad) xchg jmp sbb (bad) outsb mov pop les push xchg (bad) jne test lods mov dec xorl clc sub fdivp add fucompp loop pop shrd fmuls adcl xor inc inc add into mov jg push and cmp loope mov or add mov aam lret scas ret dec jo add rcrb fnstenv out cld and lret hlt fs insl frstor pop dec fst in movsb and and cmp jp movsl daa ret sbbb or int adc loope out test pop push mov pop pop sub mov insl (bad) push loopne dec loopw mov pop sub push nop inc dec xor sub mov mov pop mov xchg shrl idivl sub jp stos in jne pop lret push popa cmpsl ljmp sub fs push mov sbb sbb insl bnd ss jne sti pusha cmp iret push mov movsb sbb jno xchg mov popa clc stc pop mov pop xchg pop sarl repz mov scas rolb pop sbb jno and inc xchg pop push loopne mov jnp (bad) fwait insl mov in pushf andb mov add shlb xor (bad) stos mov inc push cmp jmp stc xor push push push pop inc lret dec mov or and jmp dec xchg mov sub and addr16 test xchg sbb xor lea inc sub mov push inc pop cmp jge dec (bad) jnp in or mov push mov inc (bad) shrb sbb fnsave jno std pusha ret or ja sub push stc js jmp mov sbb xor fsubp add aam mov sub xor or or std mov xchg shll mov sbb cmp fcomps inc fld dec aas sub (bad) or fmulp adc lea roll fsubrs mov (bad) arpl mov mov stos push fisubr fstpl cmp pop aam outsl sbb jmp fiadd lods (bad) mov outsl sbb sbb adc push test inc push into sbb xchg jne cmpsb cmp jl dec jecxz mov push xchg js test clc jg xor inc push fdivrs push movsl adc xor bswap js out pusha pop fidivrl pop push mov (bad) jge mov sbb xchg push mov fldt ds lods mov in decl cmp rcll out mov clc dec aam inc in mulb out std test mov inc jmp je (bad) dec test lods xchg aam (bad) fwait iret lock mov fimul pop out xchg (bad) xlat out mov mov gs pop cmpsb sub daa stos out adc jb and xor ret js pop in pushf movl pusha pusha push push lea jmp lea call jmp xor inc cmc inc mov es dec push adc push adc pop imul test xchg fbstp push test mov sub xor or ljmp hlt iret or out adc addr16 cmp xchg inc cmp dec push lods mov rclb imul inc jle lods int3 int hlt mov imul imul sahf cmp and inc lods aaa and daa (bad) jns inc rorl push xchg inc pop mov mov ljmp xchg mov fldenv sbb pushf das push out push iret or push imul push push mov adc mov add pop xchg or pushf xchg and fs and pushf mov (bad) push cmpsb push mov sahf lea (bad) jg (bad) and sbb loope jle dec jmp mov mov sub mov cmp mulb or adc mov mov (bad) test sti and lret xor notl and push dec push idivb push lods imul sbb incl lahf loop addr16 lock jg mov push mov lret xor out repnz sbb repz mov mov push add jmp call push rol dec pushf dec ror rol jmp jmp lea jno pusha movl movl lea jmp add add sbb add loopne add add push add or add fs adc in adc adc add insb dec adc inc adc add loopne add add sbb add loopne add add sbb add loopne add add je add lea call call lea jb jmp push pusha pusha lea jne pusha push push mov jmp mov adc imul gs inc sub mov sub pop popf in shrb aas ret ffreep cmp or scas icebp lock xchg mov movsl mov (bad) lahf push movsb movsl dec aad cmp pop xor cmpsb mov cmpsl push cli and adc sub fisubr out lret ds fnstsw enter les outsb aaa or jle sbb jmp adc sbb pop sbb mov (bad) jo push in sti fimul nop dec dec enter ja push lods jle dec xlat pop iret jne add add sbb push jecxz stos or (bad) (bad) repz fcompl sub arpl and cmpsl xchg test fisttpll inc popf xchg popa pusha popa push imul lcall lods rolb mov mov jecxz mov mov mov movsb or and shll lcall cs fs dec mov std push cmp cs imul push dec inc inc popa repz outsl std stc lret mov push or jb jp pop sti adc xor sbb jo sbb inc sbb movsb jno ret insb adc je dec jg pusha movb pushl ret arpl inc sub enter sbb pusha pop mov push jge dec es scas jge movsb jns cmp mov in ds cmp xchg cmpsl mov cmp jnp shrl and imul sbb popf aas jge aas fsts cld pop jl cmp loop jb cld inc js data16 popf aas test fnsave jmp inc cld mov mov pusha movl pop lea mov movl mov mov pushf pushl popl movb pushl pushf pushl ret jecxz and add or subl cmc fdivr movsb sub (bad) loopne mov and adc outsl xchg inc xor cmp in xchg xchg ljmp mov xor dec cmpsl push and push lds cld fistl sbb push adc mov or add pop inc xor pop lods cmpl sub add jb inc xor and cmpsl adc mov mov add mov xchg push popf (bad) (bad) int3 pushf lret dec loope xor or jo ja popf sub pop add jbe shr bound int3 add loope cs cwtl pop test (bad) lock scas lea je call pusha pusha mov movl call push clc mov push mov pop sbb js inc push repz stos lods add adc push add mov push lret sbb int3 cltd and inc js aaa cld fwait aam and fwait call popf les lret jge inc jge (bad) loope test scas jmp adc test ja enter add lahf add push jne xchg int lret (bad) popa in sub add sti xchg cmp mov rcrl sub outsb cmp fcmovnu dec mov mov xchg jae pushf mov outsl int3 out jl sub les adc mov adc fldt mov pop add pop jle lods test loope xchg push dec pushf test or cmpsl jle not mov jl in cmp iret fsubrs pop inc insb hlt mov push imul sub mov fwait cmp call and pop test roll fsts (bad) ret inc fiaddl and dec mov xorl push or bt call mov adc sbb push adc jo sub popf into cmc repnz xchg mov inc iret pop cmpb push xchg in mov test push jnp lods sub stos sar popf scas xchg jae push arpl js stos fwait sbb stc adc lret (bad) mov sub outsb repnz imul sbb iret bound add sbb enter push cmp sbb (bad) push jle or jmp and cmp jbe jo push insb jg cmpsl push dec addr16 xor pusha call sbb adc adc ss mov movsl in xor shr mov clc xor push loope cmp add icebp or out push pop add insl nop aad sahf fbld xor ret adc push clc test clc dec adc mov add cld pop push add roll cltd add gs mov gs pop add loope sbb fdivrs and mov and cmp out pushf mov adc out outsb lods clc push cld test jge les (bad) enter inc mov jge adc test push jmp movl pushf pusha pushf lea jmp cmc movb add pushf push pushf lea jmp call pushf mov pushf movb call test pusha call rep pop mov mov pushf pushf lea jmp jmp mov pushf xchg push movsbw movl movsbl movsbw lahf lea movb call outsb imul unpcklps test (bad) (bad) (bad) and push push push jle (bad) xlat (bad) adc popa mov adc cmp sub xchg pop sbb inc sub fldz popf ret push xchg xor adc mov mov (bad) dec mov rorb fnstcw data16 mov prefetchw add add divb enter popf mov fistl fcoml and pop cld or jle lds inc aam jns or out jae test lret inc push jle fmuls dec cli flds into push rcrl and cltd adc xchg or mov (bad) std pop test lds dec push lods xor xor or lret movq add loope mov or jmp push sahf in mov inc aad std loope pusha push jle pop xchg dec push adc pop bound data16 xor adc xor push cltd mov pusha sbb ficoml push adc pop movsb imul dec jl and cmp out sub fs cltd loopne push into cmc sti cli pushf jbe sbb jbe pop daa lods sub cwtl iret pop test movsb add aam cmp adc xchg mov int cld inc fs push dec adc pop cwtl inc fs loopne add cld or je pop movsb pop pop fist pop add repz (bad) xchg mov fstp imul lds rol cmp aad int3 fnstcw xchg adc xor push pop fistpll add xchg push aam bound movsb add cld pop xlat mov aad dec sub dec sbb jo xchg (bad) or fcmovnu stc in out push mov mov adc (bad) ds (bad) jbe and push jecxz call mov outsl or cmovne out pushf pusha movl mov pushf movb lea jg push pusha pusha pushf pushf lea jmp (bad) stc add or stc add push xor push sahf cmp pop popa cmp push lea bnd pop adc xor push lahf dec push pop cli aam or add outsl mov mov cmp std cld adc int popl dec add jb cmc int3 dec push inc mov mov (bad) mov loopne (bad) xor rcl xor pusha stos rclb pop (bad) iret loope ljmp pop stc mov inc rcrl addr16 sub sahf out pop addb sarl sti call imul (bad) int3 add sbb jns dec sarl pop sbb xchg sub xchg (bad) fist dec pusha setle jg xchg outsb in or push cmpb pop (bad) dec mov scas (bad) fildl mov or cltd out fucom cmp jae pushf jne sub sub arpl outsb mov pop fucomi jo pop fsubr fwait les cli cmp adc push in xchg mov jb mov test jnp push data16 sub xchg insl (bad) jp rorl mov pop mov gs fldenv or outsl push popa mov pushf jmp push movl jmp pop orl sub dec lahf mov in hlt mov out mov call out (bad) daa cmp test clc leave cmpb dec mov repz push mov test add push sahf lods insb sbb inc mov jnp push sub inc test add imul or mov pop call xchg mov mov push ja cmpsb jle or adc dec xchg and mov mov stos add sbb std push push or inc jbe adc inc mov or inc cld mov fadds mov in or add lcall xchg xchg cld cld push lret sub lahf (bad) repz je adc (bad) xor xor mov gs sub mov jb mov inc movsl xchg insl fistl xor push scas push (bad) in and push outsb mov lods sti call test rclb add imul jp (bad) mov (bad) into push lds sysexit pushf lock cmp out jnp test shlb mov mov push inc push dec xor cs insb add fisub sti adc push xchg jle push adc bound pop push jle mov aas inc arpl xchg xchg jae fdivs cmp cld push add xlat bound and insb gs sahf dec aaa xchg hlt sti clc jge mov xchg or xchg data16 pop daa jecxz xor jmp inc jns mov xchg (bad) mov fstl sub cmp push xorl iret jmp stos mov imul pop adc ds outsb xor cmp mov mov push addr16 cmp mov dec mov dec fs add mov add jne gs xor fs insb add adc or repz mov faddl sub ret push scas xorl or icebp and push test ljmp call push cmpsl dec test stc pop loope (bad) jo push jbe push xchg cmp mov add sub xchg xchg int jle mov xor and add cmp adc and out push or lret mov pop rol out and inc mov fmuls sbb dec jmp bound add cwtl xchg pushf call cmpsb fs sub jo cmp xchg push sub cmpsl addr16 jg sbb mov bound and lahf repnz rclb add xlat (bad) jmp addr16 inc sub jmp dec ss dec xor flds or cmp pop lret hlt jge adc fs loope sar adc dec pusha jl inc jne test stos mov xchg cmp out in movsb sbb iret jmp mov push imul lods mov xor cmp jae or jnp cmp out mov or mov test lret sub push dec add xor and pop adc dec mov std loop notb fnop in pushf (bad) mov mov and or inc cmp or jo gs cmp xlat sbb jg jmp or in cmp inc or jae cwtl aas insl cld and or or jmp add push dec inc gs outsl insb fs popa je inc add adc imul xchg out xchg jg push outsb jns jne cmp cmp jge add int3 xchg stc adc mov rol dec xor pusha push sbb cmp inc push ss sbb jle leave cwtl movsb aas push movsb add mov cmp pushf movl push pusha pusha pushf lea jmp add inc gs outsl fs gs popa outsb fs gs add fcomps xor movl jmp push push movl mov mov lea jmp movzbw not pop mov movsbw pop pushf call andb adc rcr mov frstor add push xchg lods movsl mov nop add ret out dec daa out div aas jmp pop mov or cmpsl mull cmpsb (bad) push sbbb mov push insb fcoms in aaa mov in mov xor push nop add xchg ret loop (bad) hlt sbb in sub or movsl push xlat pop repnz ret outsl stos out push jnp or (bad) insl test adc int3 jl adc xchg test fsubrs gs cmpsb sbb inc aaa or cmp nop add sti in xor rol mov jmp fadd lods lea xor adc jns and add fucom fstp fwait stc push pop sub leave clc sbb push data16 pop pop add pop mov adc inc sbb adc pop std daa xchg jae jl cld pushf movb lea je cmp cmc pushf bt cmp jmp jo scas jae adc push test cmp adc pushf xchg jns cmpsb and jl in imul mov push jecxz rorb scas jg aaa jle push dec hlt cs xchg jns xor roll sub push call mov and lahf int jo sbb add (bad) pop and (bad) jmp cmp test popa adc daa xchg push test test sub mov adc adc sahf jmp fist add hlt cli mov gs scas movsl and (bad) in sub es (bad) (bad) fcomps cs std (bad) lcall imul mov addr16 add push int3 das ret inc mov mov ror (bad) out dec sbb and ret inc xor leave add lods (bad) cmp mov aam nop in jae sub (bad) ret mov jmp repnz dec lret add sbb sbb sahf pop jne sbb js stos push insb sub rolb pop jecxz mov jns dec adc xchg inc and push inc int (bad) (bad) int3 dec jmp insb cwtl setle xchg leave and notl ret inc sahf push ficomp xchg lock adc adc inc test call cmp popa test jno jne daa stos out mov mov sbb add jns push sahf fstl sub or not dec jbe sub and rcll sbb jo in xchg or mov frstor mov push lods scas push cmpsb sub scas pop lods ret test cmp jecxz test inc pop xchg gs imul dec addb lods mov test imul enter fdivrl fistl fucomi outsl movsb pop push cmp (bad) jmp or sbb inc xchg jbe fs mov dec popa cmp push jle and out and and pushl iret shrl jb f2xm1 out aam mov (bad) pop inc fmuls push mov pop pop dec pop push mov push (bad) cmp sub ficomp jnp pop inc add mov fimull mov loopne sti jmp popf imul ds in dec cmp jae popf popa inc imul outsl loopne add mov fiadd mov add xchg xor sbb lea aaa out fcoms sbb xor jne cmp popa mov sub sbb test sbb movsl fdivs rcrb xor dec xchg loopne loop adc xchg lods dec mov pop sbb push bound inc ljmp or movsb or lcall lcall jne push (bad) loopne mov and lret pop mov sub movsl addr16 jb (bad) dec leave jne xor dec cmc cli pop lds mov insl test rcrl dec sti push jne movsl pop cld sub pop mov imul sub in call pop pop adc sbb pushl mov dec jnp jae and mov sub mov sub cmp imull pushf sub in jg lcall push jecxz and cmp sbb out icebp pop inc push cmpsl mov cmc mov add insb enter add inc sahf mov mov xchg test rol cmp imul mov xchg sub add sbb and test jmp leave ljmp pusha sbb cs movsb std les je lock and dec shrb jl (bad) frstor jae je push mov lea insb pushf xchg push idiv xchg push push sub or push adc ret imul xor mov out hlt sti hlt xor ljmp mov cmp cmc adc loopne out jo mov test fwait cwtl in (bad) xor sahf push xchg or mov ret pop and (bad) and iret in sbb push ret icebp std insb incb xlat call insl jge push dec fstpt fs pusha pop jb stc insl ss outsb aam xchg jo push inc or mov rcl push and pop adc les push cmp mov add mov dec mov adc jecxz incl subl movd scas movb lea jne mov bswap movsbw movsbw movb movsbl push setg movzbl movsbw lea lea call mov lea setns pop jmp cmp (bad) repz shl mov cmc cmpb pusha pusha pushf movl lea jne daa push bt bts xor aaa dec mov add rcl ror cmp add neg add not mov jmp pusha movl lea je pusha mov push lea jmp dec inc push dec inc dec xor cs insb add rcll add test call fs call push push push lea jmp loope mov sbb add out fwait dec (bad) xor daa sbb call xchg in sbb ret and hlt xchg in xor xchg sbb dec in xchg repnz pop jmp mov or dec jbe dec adc add and lea pop push sbb or xor mov and xor inc lret cmp repnz pop sbb call pop (bad) sbb add lcall push xor (bad) pushf mov adc (bad) or lahf pop push cmp pop sub mov and dec lcall push daa stos mov (bad) pop insb (bad) cmp jbe sbb test in lea add xlat in neg inc adc jae cmpsb lahf js jne outsl mov jge fdiv daa call jb fnop lahf jae leave (bad) sub sub or sbb push jmp lcall ret xchg jp and imul xor decl test inc mov ja push add cltd jg cwtl jne mov ret adc dec fs push jne mov divb push pop xlat inc stos (bad) push pop sub inc fdivs (bad) sbb inc and add pushf lea jle pushf movl push lea jmp pushf mov push pushf movl mov mov movb pushl lea jmp out inc xchg jns adc pop stos stos cmpsl adc push mov iret xchg mov or dec pop inc xlat pusha cmp adc inc ffree pop mov sahf inc (bad) movsl (bad) mov pushf sub call mov push mov xor ret xchg shlb (bad) loope ret out push (bad) popa ljmp iret adc adc out (bad) mull fwait cmpsb in lods jno sub or mov xchg dec sub mov jb sahf lea mov sbb leave lret addr16 jae and mov testl pop xchg mov cmp and hlt jno out in es pushf aad cmp test rcrl hlt dec pop and adc add test pushf popa dec orl add inc pushl jmp inc lahf je sbb (bad) xchg pop das and dec inc jl adc jle outsb xor push (bad) lret pop xlat adc je inc sub mov mov aas add pop jmp push xchg dec int dec mov push shlb sbb mov dec push or mull add stos int sbb adc loop dec xchg fldcw inc js mov aas inc adc xchg scas (bad) (bad) sti loop add mov in fldenv lods and arpl daa dec out add add pusha movb pushl lea je bt clc cmp call mov adc xor (bad) mull push clc call call pushf movl push pusha movb push movl push lea jmp call mov inc cltd and inc mov mov je into idivl subb popf jl pushf and sarl jo cld adc in inc enter mov mov mov nop pop push xchg pop lret sahf sub cmpsb (bad) pop divl xor loop into push in mov xchg fidivr mov cli cs jle in aad cltd lahf out push lea pop lods jno cs inc or push dec lret leavew ds imul mov cmp cli push imul xor mov dec cmpl ret sbb mov (bad) and cmc addr16 add out int int mov sub loopne inc fdiv call loop mov inc xchg int add mov (bad) dec fwait mov rcll jg lea inc cmp insl aad lea mov push jns push pop dec mov cmc lahf push sti movsb hlt (bad) xor scas inc fs test add push add and inc sub and inc mov jno pushf rcrb mov and cli jae sti ja jbe jg rorb push xchg and pushl outsl lds mov into dec xchg dec push cld push ficomp sub or push es inc jg cmp xchg adc lods push xchg (bad) jle (bad) aas rcrl inc jbe cld iret push fsubl aas cmp (bad) or mov pop add jb inc scas scas jmp mov unpcklps jecxz ja imul mov sub insb test pop je dec mov lea sub icebp dec mov inc nop xor dec enter cmpsl pop fnsave xchg xor adc cmp call call add add inc push push lea jb inc pushf mov lea jmp stc cmp cmp call lea je pusha push bt cmp or pusha lea je shr bts dec jl sub aad btc mov mov test mov clc adc shr movsbw movzbl mov call jmp pop or (bad) ficoml sti sarb fwait sbb pop and jg inc fnstcw mov dec pop and mov pop cwtl add test outsl insb jae or xor lcall and sbb push xor jnp hlt xor xchg test adc sub push test test repnz xor js int3 repz (bad) push icebp add dec push adc mov inc stos je (bad) xchg pop (bad) mov lret push xchg sbb movsl jge imul jb add gs das push sbb mov cmp pusha shrl (bad) outsl adc add unpcklps and bnd fs jae pusha mov dec pushf mov push inc pushf mov movw lea call pushf mov movl pushf adc mov call scas pushf lds and cmp loope in leave out jbe jmp fisttpl aaa popf cmp lcall and and mov (bad) push mov sbb clc push sbb sti xor adc xchg stc jo sbb fimul gs mov push lret imul movsl imul push sub sarb jo pop js popf mov mov sub sbb cli sysret or jecxz jns gs mov jle,pn pop loope xor adc sub add std inc outsb out xchg (bad) mov stc mov mov (bad) lret in sub fstpt test xor bt cmc test clc or call xchg fimul and mov push push pop les inc push and addr16 mov add iret fsubrs sbb sbb pop pop addl rorl jecxz inc mov sbb mov cli mov cmpsl dec push or hlt dec imul push dec xor adc jbe pushf sbb aam xor mov pop lret mov pushf mov (bad) faddl testb xchg loop inc pop mov xchg out stc insl adc jb adc or stos mov call stc add or and arpl and daa lods adc sbb int3 jns cmpsl aam jl lret pop (bad) mov inc mov lock shl out out jmp sbb rcrl movsl movsb add jmp mov pcmpeqd in bound ljmp push mov and fistpll inc mov pop pop punpckldq into xchg xchg idiv mov jl mov adc sbb sub adc add popa mov adc add mov test add and sti xchg loopne mov inc out adc (bad) sbb (bad) iret in loope mov (bad) cmc push push into jno sub inc scas and mov inc js and pushf adc loope jb outsb das std outsl (bad) clc jg and out mov les insb push jge xor lods int3 aad mov in push mov sbb imul lret clc xor addr16 mov cmc pop div test push push (bad) xor bound dec jo adc xor dec and das movsl inc push mov stos jo nop/reserved dec push mov push cmc les lahf es test or call aad push inc and pusha jl or push mov pop outsl sub data16 inc scas je and jmp addr16 push dec xor mov xchg mov mov movsb popa test xlat pop sub lahf inc dec pop jnp cmp dec movl sub mov sub mov adc or push aaa sahf xor inc mov sbb add mov push inc mov xchg mov mov fistl mov push add jl add imul sahf test pop pop enter test fwait xchg mov add into cmp or xchg inc ja and shrl xchg int push mov push pushl pushf lea jmp add push jns je insl inc jne arpl outsb xor ss roll adc inc xor leave fimull enter into xor xlat inc mov je sbb subb je int3 bound inc jle dec xchg xchg or mov mul add push aad or or arpl mov ljmp jle mov imul xchg test fisttpl or imul shll cs popa mov insb pop xor mov jp scas adc mov sahf fcoms bound jecxz push (bad) lahf xor jg and outsb adc jbe inc inc mov hlt movsl mov jo inc cltd xchg pop aam sbb (bad) pushf push sbb dec pop sti js cmp or jg cmp or jo jle rcrl scas jl arpl in pop shr gs (bad) xchg iret xchg sbb addr16 dec add push mov es adc inc or cmpsl nop pop cmp pop into pop addr16 dec push jecxz mov sbb popl clc dec jno dec adc jle pop cmpb xchg lret jmp in mov out stos out sbb mov or pop jbe inc and test xor xlat call into das xlat inc scas addr16 mov add fsubrl fs xchg mov adc stos aas rep les or xor pushf iret icebp pop ret cwtl mov cwtl jle jge push movsb fadds lods in adc xchg orb dec lret out adc push jge add ret add imul and setns inc dec xchg aaa dec shld mov pushf sar mov add test push xor btr or mov push pushf sub pusha movw call test stc cmp pushf pusha lea ja not jmp lea call push pushf pusha lea jae push pusha mov jmp pushl popl pusha movb pushl ret movl movb jmp jle pusha push pushf movl pusha movl push push lea jmp pushf pushf lea call push call sub add int dec inc xchg movsb inc sub pop lea mov and mov (bad) out out or cmpsl test in and aaa test imul clc sbb adc stos jo (bad) xchg call and pushf dec ss in (bad) inc iret xchg sahf (bad) movsl xchg loope add int sti dec or add enter add jmp jl pop push outsl lcall test call cli notl repz mov xor mov inc mov dec push xlat cld add sub add incl add popa insb inc insb insb outsl arpl push lea jb jb pusha pushl ret pop not push mov pushl lea jae pushf pushl mov jmp aas repz sbb adc in cwtl int cli inc lret adc cmp lds int dec addl and adc mov sub inc pop push push fsubrp sub js imul dec lret jle (bad) es mov in movsb stc imul sti xor dec (bad) lock xchg cmp (bad) lock stos aaa (bad) movsl cmpsb cmp lcall test mov push mov lods jecxz scas push fnsave ja xchg enter les add jbe jle aas stos sub pop sub mov xor mov dec int3 inc push xchg and rolb mov dec mov divb jl mov loopne shlb jne pop ja inc sahf leave lret cmp jo and insb jle lods aaa mov jne jp cmp dec (bad) push mov repnz mov sti call inc mov dec sbb imul jae call adc ror push sub mov enter and in fs jnp or ja xlat movsb mov jae outsl cmp inc push jne jp mov mov mov mov ret jmp push sahf in (bad) aaa fadds pop ljmp scas ja outsb jnp and pop or (bad) sbb mov cmpsl dec cmp adc mov sbb dec sbb push dec or scas out rcrb mov jg lcall test jnp and or test xchg sub mov popa test imul dec push pop jns sbb fstps rorl xchg iret push es jb aad cmp ljmp rclb inc clc jge popf fwait mov sbb adc push fiadd xor icebp push fbld ret push push dec scas pop cmp cmp inc xbegin fldt inc scas add sub movsl lods jmp repz aas in add or mov icebp loop adc adcl cs add xor ja dec jbe inc jecxz and sarb mov jb subl inc movsb push gs pop sbb into in into fdivr xor in mov (bad) mov xchg jnp nop aam dec lret (bad) frstor inc sti pop lods lods add add fist enter sbb shlb rcrl addr16 jae addr16 mov add call imul jnp jge rdtsc lret dec in mov xor jmp fwait mov loop or mov cs movsl in add ret out mov movsb leave push aas lods popa xor jae sub jecxz mov jnp lods fldl mov add das or inc dec cmp lods jle jge pop stos lea jne pusha pusha call jle (bad) pop sub jns cltd shr mov shlb push popf in mov popa add push in (bad) inc mov out add mov mov xor push jg sbb leave lret mov jnp aas adc add or ficom sarl call add inc arpl sti call scas std cmp sbb xor inc movsb xor icebp repnz out mov daa fcmovnb lock or mov clc data16 into mov push push testb les jno jns mov cmp les cmp xor jo std arpl pusha jmp mov pop rcl mov sub xor jne aam lock aam ror lcall aaa cld cmpsl cwtl mov xor xor inc sbb daa (bad) out jle cltd add sub and adc jp popw popf and inc test mov (bad) jnp aas lea lea movzbw xchg lea push movzwl jmp scas jl insl xor es loope cmp (bad) mov jmp cld mov fisttpl dec push pop mov imul xor loopne add jns jno xchg dec adc inc mov xor fbstp negl test or dec stos or push stos jmp xorl in pop out in jge popa and call mov push pop cmp mov or mov sub out ret in cltd fimul fstl dec lahf and jmp pop cmpsb push movsl jbe mov xchg je popl sub mov pusha jmp movl pushf pushf pushl pusha lea jmp shr sub bsf stc mov pushf movw jmp mov adc mov into int mov sahf cmp mov sub jb inc xchg hlt xchg mov jge lea xchg out xor out mov xor add xor out mov orb dec mov adc cmp fsub icebp lds or xor lods addr16 xchg lea xor hlt in movsl add shlb mov cltd xor add enter mov inc adcl in imul test pushf lea je cmp movsbw cmc add btc dec sar mov call pusha pushf lea jne cmc shld stc mov bt cmp push lea ja mov setb mov pop setb jmp xor shl push rol xor lea mov bswap jo xchg pop jmp jmp adc lock push xchg in in mov xor popf mov push dec or popl inc jb ret sahf mov (bad) hlt clc mov and popa movsl sbb pusha inc xor inc add sbb fisttpl pop cmpsl jno adc outsl xchg or add push mov xor cmpsb mov fildl adc imul sub (bad) sub scas hlt decb or xlat xchg jp rolb xchg out por scas dec loope xchg xlat xor pop lods jbe popa mov mov jmp shr imul cmp aam lcall inc push test dec jb push movsb xchg in leave (bad) cmc dec stos cmp insb push lret mov and nop push ret loop mov js pop xor addb inc bound add sub inc sbb test jae nop aas cmp popa push ret xchg or fldt jecxz sahf fucomp xchg fmulp or das jecxz mov add (bad) sub fwait (bad) jl dec popa enter jle flds (bad) mov fwait scas in pop adc xor lods mov in fsubrs jno sub pcmpgtb and push adc iret xchg pop sub dec mov imul and loop pop and rorb mov data16 sub mov push and xchg (bad) loop into mov adc push movsl dec mov js inc dec cwtl ds jle jmp add popf rep dec or pop mov or mov cmp das add scas pop hlt pop jecxz mov ret pop call movsl adc inc and and xchg mov (bad) sub in xor adc push or mov outsl pusha xchg push cwtl mov lock sar inc mov and sbb mov mov or outsb cwtl lcall add leave jg int3 inc dec mov inc fmuls push aam xlat out ret adc xchg mov jg and movlps sbb mov cmpsb cwtl inc fstpl nop push xchg hlt cli lcall ret and inc mov mov xchg imul stos pusha lea jmp pusha call call shl pop add adc push mov (bad) pop movntq out mov sbb repnz lods cld adc fcoml adc adc sbb adc inc jmp insb mov loopne mov adc ja sbb pop mov sbb pop cmc pop (bad) es and int3 mov push ljmp cld pushf pusha lea call pusha movb movb lea jne not mov pushf lea jmp gs repnz adc repz js xor sub xlat je mov loopne stos mov lcall dec push adc jns sbb jno hlt (bad) insb mov sbb loope outsl daa pop into icebp and in mov jl lcall adcl or jmp outsl mov out sub jge sub pop push jle xchg leave imul popf loope pop mov insb scas in or dec cmp lahf in in insl pop ret sbb aas xchg pop imul ss gs adc or inc adc sub dec mov cmpsb repnz mov sub jns call xor adc mov in jmp out mov jmp shr mov negb jg or out and stc cmp daa sub push enter aas xchg nop pop and push add shlb sarl aas jp das adc inc (bad) add xchg jns jnp inc mov es pop xor or scas pop mov and mov iret repnz jne dec add fisttp xor dec in js cmp repz jbe addr16 gs cmp fistpll sub lret mov dec loop push aad je add xchg imul sti aam push outsb sar sar int3 in push sarl jle pop push leave orl cmp inc in es fwait mov fsubr sbb fsubrs div add lret mov add scas jnp or pop test fucomp mov push sbb sub jb addl add jns sti (bad) push fs (bad) data16 data16 (bad) mov dec fwait movsb test jbe adc pmaxub das iret scas lahf pop es pop lret push and xor scas ja fcoms push pavgb pop cmpsb mov or push pop jl xor xor sbb lods stos jge out xor leave mov flds ljmp (bad) adc pop andl mov dec xchg into and push js adc lcall out push pop movsb and repz pop sbb inc dec jae sub and sbb outsl and xorl dec xchg push add cmp repz iret fdivrp cmpsb jnp hlt into sub and mov scas adc push xchg xchg aad outsl push les jno cwtl sub fsub push xchg daa into xchg int3 sub add or jp dec daa xchg adc push push orl cmpsl mov addr16 sbb xchg lcall sub and sbb ja cmp lods ficom add jo jp or jne jb ds mov lods rolb stc arpl add inc sub test mov cmp xchg in inc xor ds enter jle push pushf jbe (bad) jne cmp mov arpl aas sahf mov sbb cmp xor dec jno scas jg inc add int repnz lcall data16 iret fstpl mov xchg add add sarb (bad) mov insl fs cmp and ljmp sahf (bad) gs repnz cmp or test adc sbb pop lock push cld mov mov test push loop jmp and cmp push out repz movsb or bt pusha pusha cmc sub lea pusha jmp sbb and or jp (bad) enter dec jge pop gs cmp es push mov rcrl mov or insl push ret (bad) cs outsb jne xlat push lahf rclb cmp ss xchg fwait push sub (bad) mov add xchg cmp dec out aam out adc dec dec adc pushf cmpsl nop iret aaa pop mov mov push xchg sbb sbb and aas xchg scas push cmpsl lret push lock jno pop or or mov pop ljmp jb sub stos lret loope stos xorl sub out pop xor mov and lret outsl pop pop fist inc jns testb cmp icebp cmpsl (bad) mov mov add or call cmc cmc cmc cmp pusha pusha jmp div sbb cmp jecxz sbb adc loop or mov or jns adc sar loopne push adc jecxz lahf push mov pop mov cmpl jmp jp jmp faddl out jne sti int imul mov movsl dec jnp mov scas push lret into xchg inc jb sub (bad) movsb cmp jbe xor aas push lods sub push insb xor aas ret and mov dec push repz movsl (bad) dec push in mov loop jno pop xor shrl mov loopne push mov jecxz cld dec xchg sub add mov ljmp xchg mov jo in sahf popf ss lea jae push pusha lea jmp in add inc jb movsb sti les sbb pop imul dec push inc nop cmpsb jo roll pop ds lret xor xorl test test mov (bad) testb pop addr16 and xor cmp cmp enter aam jb js mov imul sbb les cmp push mov sbb xor add pushf dec cmpsl test or stos cmpb adc push test mov rcr out stos call jmp and mov ret push data16 mov inc adc xchg cmp xor dec (bad) in xchg std ret sbb pop xor jb push ficompl lea add jae je cmpl push pop cmc pusha mov dec mov lea and mov add ret xor cmp (bad) fisubl push adcb lcall and dec and fiaddl mov dec andb in movsl jne pop (bad) sub pop push mov dec ret cmp pop movsb cld pop mov je ficomp stc fcompl jg pushf (bad) ss icebp xor jp repnz jnp pop push test lret sub fwait mov cmp movsb dec adcl rorl pushf cltd or adc cld xchg call sahf mov pop xor ror stos sbb test pop std lret int3 ret sbb loope rcrb inc inc xlat push sarl adc jl test push xchg xor add pmaxub pushl lea call pusha adc mov lea jae pushf lea jne jmp icebp std xchg jle adc pop movsb xchg sbb xchg adc adc in mov fcomip insl cltd xchg and lods xchg or outsl outsl xchg mov lahf sub xor adc fcoml dec mov mov inc xchg addl xchg pop inc out mov scas aaa sub aad or out ljmp (bad) loopne pop inc rorb nop cmpl push lcall push and out cmpsl sar loope sbbb jg inc scas jnp fmull mov ret xor icebp cmc mov adc shr out ja add rclb std jp mov popa mov daa outsl insb jmp popf xor pop test popf push je sbb jl push or mov je inc jne aaa push test adc lea not sub shld and dec add push pushf shrd shld dec mov sar movzbw push bts sub mov movzbl pusha lea mov pusha push mov jmp push dec inc dec dec xor cs insb add xor add hlt cmp pushf jmp push mov pop cmpsl mov push add lock nop notb lahf enter cmp pop sbb aaa sub cmp jbe loope xor int test sbb imul cmp sbb adc or dec out es cmp sub push add movsl test mov das inc sahf sub mov pop push aam adc nop jle loopne frstpm(287 add lret inc mov sub ret mov loope mov xor inc adc lret ss mov daa sbb pusha pop inc ja mov arpl push outsl out daa (bad) stc mov mov jno jb xlat inc jne xor fnstcw mov lods cmp mov nop shll sub mov repnz add data16 fcomp inc lret fsubl out imul clc outsb scas pop rcl cld xchg (bad) xor lds xchg js daa or mulb push xchg (bad) popf jne testb lret cmc xchg xor cli rol movsb fstps mov jp test cs and xor jle cmp sti dec sbb call xchg repnz inc inc adc fs in xor lcall or popa cmp and jo cs jge lods push xor push push aaa jle mov and int3 gs jnp pop mov inc gs cwtl shl push stos outsb test (bad) ret or aaa in std mov mov xor adc sti sarl cmpl add push dec lret movsl jle mov loop jecxz cltd xor jmp xor add (bad) jns cli jmp in add bt stc rol jmp mov adc mov xchg aaa mov inc mov and je pop in stc xchg jbe dec jne add or jle pop add push movsl xor xorb pop stos in pextrw jp mov pop addb pop aad repnz pop cmpsb jg and gs pcmpeqw jne fadds or and int stos inc fsubrs jmp loop mov lods (bad) fcmovnbe and test cs or stc lcall adc sub mov dec inc insl iret push pop mov ljmp addr16 imul xchg mov adc and pop test inc xchg cmp jne imul dec scas push sub inc push (bad) jmp shrb lods divb mov adc (bad) mov xchg dec add adc jle xchg daa xchg cmpsb aad test (bad) cld sarl pop hlt call sub test pop fisttpl mov cmpsl loope pusha outsb inc data16 jne push iret enter shrb ljmp test int3 push in cli and pop mov adc sub mov push adc mov push push push pushf movb push lea jae pushf clc push cmp xor pusha jmp jmp pushl popl lahf mov call dec cwtl lea adc imul dec test cld mov fwait or imul inc stos and xchg push push fs sbb or mov lahf addr16 out popa sarl lea mov pop sub mov pop out mov jae movsb das pop shr mov cmpl out push notb popa mov ljmp and (bad) jno in mov pop mov cmc int ss xchg bnd adc adc sbb ljmp or mov lea sbb js pop addr16 outsb cmpsl pop arpl aas lcall insl sbb xchg stc jno je pushf ljmp jge stos dec push inc fistpll dec jecxz cld sbb test push xchg stc js stc xlat fdiv or xchg call ss mov aad aad pusha popf lods mov adc cmc mov mov insl sbb or gs sbb dec push xor mov mov add repz (bad) push xorb repz aad jno dec sub outsb cmpsb xchg xchg sbb in pop sub sti cmp rep mov loop int3 sarl jge add test sahf insl mov and cld nop xchg jl fnstcw sub (bad) jno pop xchg aad jo aaa inc xchg mov lret pusha or jnp scas ja push lcall cltd ficompl lea out int3 cmp sbb mov pop mov dec push add add shl mov ljmp or shrl icebp and clc call js xchg aad jg ja fidivr push push cwtl jmp mov fwait xchg (bad) sti push out stc cli scas mov pop inc adc mov add jmp ficomp cld jno fstps mov (bad) orl push adc mov xchg imul mov gs mov jp inc jecxz ja mov cmp mov mov add xchg xchg fiaddl in fadds sub stc cli ds cmp rcll xor push mov shr lret mov xchg push aad mov jno xor sbb aam mov xor dec jp dec jo subl daa inc adc shlb mov outsl jl or dec dec test inc int ret arpl adc cmp incl aas lds cmpsl jle mov inc jnp xor int aam jo sub mov mov xor roll ret inc push fiaddl std push mov sbbl icebp xorb jl ret sub adc cmp rol repz dec adc dec in in loope in fsubr nop mov add mov pop or xchg sub out int test sbb cmc in rorl jmp mov sub fdivl addl (bad) mov (bad) mov stc xor cmp xchg mov cli les das in aam test add add push mov add xlat dec cmpsl mov jne xor add sub mov in mov movsb xor mov inc aaa inc jne (bad) cmp dec in addr16 mov lock sub and orb mov xor inc lahf adc mov in jg sub test push fldenv dec and xor imul mov cmp aaa jae jmp add adc add add add clc adc add add add adc add add scas in add add add rolb add sub add xchg (bad) neg (bad) je adc add add mov mov call leave push jno dec adc ret xchg mov shll jns stos mov imul add cmp loop xor dec in mov mov aam insl pushfw jb cli jns jmp mov push or outsb pop push bound icebp or decb xchg into stc mov stc push mov dec xchg cmp xlat pop cmpb or mov lods sbb mov roll pop (bad) bnd sub or jnp jnp cmc out push lods (bad) push add dec adc push adc mov cld lret or clc push sti mov fsubr popf les push decl imull dec xor popa mov int mov insb leave adc in insl and popf jno mov and push inc sahf push rorb pusha mov hlt pusha lea jmp movl pushf jmp jmp inc clc bts sub call push jnp je adc pusha enter xchg push insl into sbb imul das and mov std jg push cs shrl fnstsw mov adc bswap icebp jnp mov xchg imul (bad) (bad) orps mov xchg (bad) (bad) out shlb xchg insb (bad) adc call xchg push int3 fwait (bad) mov aas movsl inc add jle or nop ret in nop sti jne push cmp scas mov cltd outsb faddp inc pop test mov cli lret jecxz in movsl lods add pop cwtl frstor sub (bad) clc pop mov pop nop negb popa xchg (bad) test jo addr16 fs jae cmc push push stc cmp call xor adc mov sbb scas nop subl jns or pop ss add int3 cmp sub sbb popa scas cli xlat inc in mov push cwtl daa call push fcoms popf dec ljmp dec scas xor xchg test sub hlt out push sub ffree xor pop orb cmpsl mov or adc dec (bad) sbb dec loop adc xor lods sbb add jae mov ret xor sti (bad) ret cmp sub mov lcall cmpsl arpl or insb inc cmc mov or pop sub adc cmpsb int lcall mov repnz mov clc push or and sbb out mov push push (bad) mov jne dec mov push outsb test and fdivs std ds fs icebp mov pop movsl jge jp sub sbb push xchg bound jecxz push mov popf mov leave mov jg and fnsave sbb push sub lret add mov jp nop add sub rolb sub cwtl idivl lds xorb (bad) fucom fsts add out jp pop sbb (bad) cmp inc fistl icebp cmp test or popf sbb mov sub mov mov jb jne push jb shrl fdivrl out inc sbb jecxz (bad) fisttpl (bad) ja cmp and dec adc ficoml or test pop inc xchg pop lret sub or lods jo sbb fs cmp sbb push les orb jge sub scas pop and push sub xchg sub and mov pop das imulb pop mov (bad) mov inc jmp push (bad) cmc cwtl mov fbstp pop fdivrl mov jnp cld lret or pop jne sub dec aam ret shrb mov pop inc les stos push push jb ret inc mov mov mov (bad) ljmp adc or fcoml out rcl call cmpsl jl hlt ret or pop (bad) out stos sub fidivr lcall mov (bad) mov dec mov push jno jnp jmp push adc push test mov and mov xor pop ds ror cmp incb aam (bad) mov pop cs and jb or setp xchg int3 jno or xchg loopne test xor cmc std mov iret nop jmp rolb cmp int lock dec jnp call add xchg xor movl and jae push pusha push lea jmp add add and adc inc add and cmp add push add add add dec clc pushf mov lea jbe and sub sar mov bt stc mov adc inc add dec shr btr pushf ror cmc mov btr shl add call or adc pop inc mov jo adc pop pop jno insl push jne and mov mov mov mov (bad) inc std adc clc push jb push gs cmpsl pop (bad) jns into add lods pop lods and insb in mov mov jl lahf or faddl jg sub out cmpsl mov fs insb test test add repz xchg shrb fisubr leave mov or lds and mov add inc addb int3 and and mov popa mov inc call and int push lock push sahf push mov mov inc popa leave push and rcll mov adc test cmp mov arpl mov mov out sub push or mov fs xor xchg sbb std push subl mov push inc in daa xchg xor push fistpll pop lcall cmp out jge add addr16 add jae jno lods les (bad) aaa push inc (bad) sub fwait aaa xchg pop roll movlps xor hlt xor sub sbb bound mov adc jmp lock add out fs je movzbw not mov mov push movsbw mov movsbw setbe movzbw lea push pushl call cmp pusha lea jae pusha movl push pushf lea jmp add add rolb add and mov ljmp xor xor xor xor xor xor xor xor xor test mov xor xor xor xor xor xor xor lea loop jmp ss xchg ss ss mov ss ss ss xlat adc push aaa pop aaa addr16 (bad) aaa xchg aaa les into aaa fidivl in icebp aaa std aaa add or cmp cmp jnp mov inc cmp push cmp jb cmpl int3 cmp cmp cmp cmp cmp push cmp cmp cmp cmp stos ds fidivrl out icebp ds add push aas add add or add push xor jg sub jge nop xor xor xor xor xor xor xor xor xor xor xor (bad) xor xor pop xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor sub imul mov sahf xor mov mov xor in out xor dec ss lret ss or getsec adc xor aaa mov cmp cmpl and push cmp aad fidivr in cmp cmp cmp xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp and push cmp dec aas push aas arpl mov fdivrl add add les add dec xor xorl ljmp xor (bad) xor xor xor inc xor jae and fs jo (bad) xor adc sbb sbb jg xchg cmp cmp cmp cmp cmp xchg cmpsb cmp cmp cmp cmp cmp cmp cmp inc cmp jnp cmpb cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp and inc cmp pushf add or aas test into aas fnstcw loope add add add add xchg xor add xor inc xor insl xor stos xor xor xor xor xor xor xor xor xor xor xor xor xor ss popa ss mov xchg ss mov ss aaa ret aaa cmp inc cmp cmp cmp jns scas cmp out stc cmp cmp inc cmp push cmp push jne jnp xchg mov lcall cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp addr16 mov add push add faddl add adc xor xor xor xor dec xor test mov test xor xor jnp or inc xor mov ss ss nop ss ss ss aaa xchg cmp cmp cmp cmp pop cmp cmp cmp pop cmp movsl cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp sub cmp cmpl cmp hlt cmp sub das ds jae,pt jle cmpl ds ds ljmp aas insl aas jb nop aas mov mov aas in aas add add add xor xor insl xor xor xor xor xor xor xor sbb dec xor pop xor jnp mov mov xor js movsl xor (bad) xor or cmp push ss ss ss aaa jecxz or push cmp cmp cmp mov in cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp pop cmp mov xor cmp aas ds ds ds mov sarb cltd aas add add add add push xor xor xor jbe movsb xor xor xor xor aad jecxz add or xor push cmp mov lret cmp cmp cmp cmp cmp cmp push cmp cmp cmp cmp xchg cmp cmp cmp sarb pusha aas mov mov addb pop add add xor outsb xor xor ss aaa and cs cmp inc aaa push aaa fs jns nop aaa mov into aaa (bad) divl add fs cmp cmp cmp cmp cmp cmp daa ds ds mov add nop add jo add sbb push popf xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor sub fdivs jecxz out aaa lods cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp repnz popf aas mov les hlt aas add add sbb and xor inc xor xor inc xor int3 xor pop xor sahf xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor jg (bad) xor scas fbstp and pop aaa jne mov xchg aaa loope imul stc cmp cmp cmp jl mov popf cmp cmp aaa cmp cmp cmp cmp cmp cmp cmp cmp cmp jo mov sarl cmp idivl sub enter add add cmp lcall xor les pop xor xor xor xor mov mov cmp cmp dec cmp mov into add add add xor add mov xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor aaa inc cmp add add inc xor dec xor pop xor xor je js jl nop xor les enter (bad) xor xor inc xor xor xor xor xor xor xor xor xor nop xor mov xor mov xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor cmp jo je js jl cmpb cmp cmp cmp mov mov cmp cmp cmp cmp inc cmp push cmp pop cmp push cmp jl cmpb cmp add add add pop xor fs xor add or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc ss ss ss ss ss ss ss ss ss ss js jl xorb mov mov nop ss ss ss mov ss mov les enter (bad) ss fdivs fdivl loopne in call ss ss ss add add or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc aaa inc aaa dec aaa dec aaa push aaa push aaa pop aaa insb cmp test pushf cmp mov mov cmp in in cmp add or adc sbb and sub xor cmp inc ds ds ds ds je,pt jl test mov xchg ds movsb lods ds mov ds fdivrl in in ds ds ds or adc sbb and sub xor cmp inc aas dec aas push aas pop aas fs insb aas je jl test mov xchg aas pushf aas movsb aas lods aas mov mov aas aam fdivrl in in aas hlt aas cld aas add add mov add add or adc sbb and sub xor cmp inc xor xor xor xor xor movsb xor les int3 xor xor xor xor xor xor xor or adc sbb and sub xor cmp inc xor xor xor xor xor movsb xor les int3 xor xor xor xor xor xor xor or adc sbb and sub xor cmp inc xor xor xor xor xor movsb xor les int3 xor xor xor xor xor xor xor or adc sbb and sub xor cmp inc xor xor xor xor xor movsb xor les int3 xor xor xor xor xor xor xor or adc sbb and sub xor cmp inc xor xor xor xor xor xor xor xor xor ds ds mov ds sarb fdivrs loopne call add or adc sbb and sub xor cmp inc aas dec aas push aas pop aas pusha aas push aas cmpb aas nop aas cwtl aas mov aas mov aas sarb fdivrs loopne call aas add add jl add add or adc sbb and sub xor cmp inc xor push xor pusha xor jo js xorb xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor dec xor pop xor push xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor dec xor pop xor push xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor dec xor pop xor push xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor sbb xor dec xor pusha xor js xorb xor sahf aas mov add adc add add inc cmp cmp cmp cmp cmp movsb cmp les int3 cmp cmp cmp cmp cmp cmp cmp or adc sbb add add add sbb add call cmp cmp cmp cmp cmp or cld aas add add push add add xor and cmp inc xor push xor xor xor xor xor push xor xor xor xor xor push xor lock xor xor insb xor add add add push xor xor sbb sub inc ss ss ss ss je mov mov nop ss ss ss mov lods ss les enter (bad) ss add add add (bad) xor mov nop add or add push cmp cmp mov add push xor xor xor xor xor jnp imul aaa sub mov cmp cmp mov cmp cmp cmp cmp cmp cmp data16 sarb sub mov mov add add add and inc xor xor xor xor mov inc xor xor push aaa add aas cmp lret cmp aad cld cmp cmp cmp insl ds aas sarl (bad) aas add add add dec add add push xor xor jge int3 ss or clc aaa push cmp mov mov cmp cmp cmp cmp pop cmp cmp cmp cmp cmp cmp cmp (bad) aas loopne add add dec add add xor test or xor xor xor xor xor push aaa lret aaa (bad) cmp outsl cmp xor dec cmp cmp cmp cmp add ds les ljmp add add xchg xor xor xor xor aaa (bad) aaa dec cmp cmp cmp cmp cmp js in cmp cmp cmp cmp pusha and addr16 loop add add add inc add add xor xor xor xor xor push cmp and dec cmp cmp cmp mov fdivrs das cmp cmp cmp cmp pushf add add add inc add add xchg xor divl mov stc xor xor xor xor xor xor adc nop ss aaa cmp cmp cmp cmp push aas fdivrs in aas add add add adc add jno jno sahf xor mov (bad) mov push call ror mov sub stc not mov adc mov pusha mov clc cmp bt stc add stc cmc cmp not pushf jmp inc dec dec cmpsl gs cmpb jb decb mov mov mov in test mov jecxz pop cltd icebp cwtl jmp inc inc mov sub int3 add mov mov or xchg loope jo mov arpl and mov ss fwait ds or push dec xchg adc js mov xchg mov jmp xor inc (bad) or fnstcw jg fstpl mov in fucomp push (bad) xchg movb xor adc mov insl aad jne xor imul or cld pop rcrb jo ja xchg ss jg jo jmp jb dec xor pop arpl inc sub sbb inc or sub adc sbb and cwtl test pop pop test or cmp lahf xchg pop hlt js dec fnstsw cmp outsl (bad) and fnstcw mov mov xchg xor insb jnp (bad) sbb dec mov andl mov xchg scas (bad) fistp add push cmpsl push loopne inc lods and or mov pushf or js dec push jmp out adc aaa daa lahf outsl mov mov (bad) xlat iret or push inc cmp inc inc jl and or push add cltd rcr mov leave fdivrp sti pop jae push mov pop adc (bad) jb in fcompl rorb stc xor and xchg cltd mov sbb cmp sub repnz pop inc mov in mov and cmp fnsave lret or loop inc pushf cmc sbb mov pusha and bt pushf cmc add lea jmp add pusha mov push pushf lea jmp dec dec (bad) inc cld or jo lds adc mov aad mov mov mov mov jle xchg shrl pop mov xor jg mov mov loopne xor aas orl aas xchg sbb jno (bad) testl loope stos cmp clc cli pop mov jmp enter (bad) gs pop adc xchg sub xchg jno pop cmp sbb jnp ljmp add xchg and jne push aad jge mov idivb jg sub lret (bad) cmp add mov clc decl xchg cmpsl fs dec jnp cmp or into lds hlt dec xchg call mov xchg in (bad) in movsb lods and test mov ds push sbb addl fwait clc in movsb xchg les mov orl jmp pushf fsts push lods jecxz dec mov out dec enter fnstenv xchg cld push rorl xor fsubl pushf decb pop dec hlt scas pusha and add push xchg or repnz (bad) pushf movsb test xchg scas sarl cwtl les aam ret rcrl ja push fcoms mov push pop mov aad data16 or mov je adc popa daa dec mov xchg sahf jmp sti enter jb iret xor jns pop and (bad) or mov leave loope lds fsin dec rorb test aam mov mov xchg ljmp das ret or push pusha mov fmulp xlat lods lcall mov cli idivl mov or lahf cmpl mov in incb int3 add mov aas add ljmp sahf fcmovnb pop jne pop sarl test cmp ret cwtl sbb ss fisub xor test or push push add xorb pushf jmp jno addr16 insb cmp push xchg jmp jbe pop jnp dec popf inc adc (bad) vucomisd out inc scas adc cltd ret jne or cmpl adc mov (bad) sbb mov ss movsb mov pop out cli ljmp inc dec push pop xchg jecxz rol (bad) lock push pusha xchg lods xchg mov xor (bad) xorl shrb aam lret out sub pop mov out push cld dec or out cmp and pop add push cmpsl adc inc out aam das mov mov adc mov stos js fcomps loopne mov ret pop and into imul dec decl push sub mov or fs popa xchg mov adc dec cmc lock enter pusha mov fidivl stc mov fwait xor adcl insl andl mov pop dec int test pop xchg sbbb das enter cmc (bad) mov mov push out (bad) js (bad) cmp mov sysenter jl sub xchg loopne cmp adc cmp cmpl data16 lock lock sub add fmuls in mov jno or jne sarl into jmp xchg fisubr inc pop orl dec pop ret daa xchg jae pop xchg add mov (bad) xor test insb (bad) lret dec mov mov stc call pushf movb movl pushf push mov lea jmp adc cwtl or adc stc mov sub lods xchg addr16 inc add mov cmp xor cmp dec and push xchg hlt xor lds adc cmp xchg jl subb sbb cmp lods sbb dec cltd test mov int3 lods outsb mov jnp jmp cmc add pop jmp inc rcl dec cmp mov insl repnz out pop xor aas xor and enter out mov fwait arpl sbb mov dec lahf pusha arpl jmp inc sarl mov imul fwait push ret pop mov xor cmp fiaddl dec incl push push jns (bad) repz xchg pushf jmp movzbw pop not pushf mov mov xchg xchg mov not movl pop mov pusha movb movb pushf pushl ret adc adc dec fidivl jl arpl dec jb push fwait xor push xorl arpl fmul addl push scas pusha shr inc lock or lods cmp icebp lret imul inc ret ja push scas ret rolb test or test mov mov dec cmp clc add xlat xorl add mov xor jbe cmp mov and mov xor pop loopne ds mov mov in les pushf jmp call jmp jmp in lods mov imul std imul shlb pop lret (bad) jb adc sbb dec int3 dec and (bad) mov faddl mov fnsave test push in mov ret inc mov pop insl cs mov dec jecxz cmp aaa out and daa xor int3 mov push inc enter mov pop jne sbb dec hlt mov addr16 push xchg (bad) pop mov arpl cmp out icebp aad pop cmp xor sbb cld (bad) in mov (bad) xchg inc cmp (bad) mov pushf add or mov mov push ss jbe pop cltd inc xchg mulb sbb cmpsl cmpsb and mov lods mov dec add shll adc shr addr16 andl pop gs nop push rcr xor xor (bad) mov inc mov push loop int nop pop mov mov pop jle mov jne sti cmp adc outsl push cmp push movzbl fnsetpm(287 pop iret jge lcall xlat movzbl mov call pushf test test pushf pushf pushf lea je bt jmp push popf mov adc jne int dec jo inc outsb pushf pop adc xchg movsb adc data16 mov jg mov xchg jp popf les mov xchg scas xchg sub ja add and lods xchg loopne mov cmp adc pop mov xor add pop call pop fs push pop and dec insb repnz jnp idivb dec jno mov out popa test cmp jno (bad) cwtl into incb pop hlt mov push in pusha (bad) sahf cmp mov xor out loopne rcrl push dec cmp adc out xor clc mov (bad) jle dec pop (bad) push lods shr fstp outsb rcll leave sub pop add dec cmp insb mov divps dec insb std movsl popa js negl pop xor jmp mov ret repnz imul push inc fnstsw push leave adc xor adc daa mov xor and scas sbb jne mov jne sub repnz clc sub lds sahf mov mov nop (bad) inc not mov mov mov lea pusha push pushf pushf lea call pushf pusha adc pusha pushf pushf lea jae pusha push mov call push lea jae call lea jnp xchg pusha pushf movl movl pusha mov push push mov pushf pushl ret mov push mov pusha lea jmp push lea ja lahf xadd aad mov jle daa shrd lea aaa das clc sub ror lea aas lea shl bswap lea and bsr mov sub lea mov mov bswap push mov pushf popl movsbw push not std mov bswap ja not pusha lea mov pushf call call setp jl not pusha mov lahf mov mov pusha pushf mov divl call xor mov neg add mov cmp test add call pushf popl call call push jmp and pushf cmc test cmp jmp stc shr pushf jmp pushf mov mov call pusha jmp jno and clc mov mov setbe dec mov test push pushf sub pushl test cmc shr pusha call cmp test not pushf not stc clc sub bt clc bt push and push mov mov push pushf popl push pushl popl push lea jmp mov pusha push push pushf lea jmp bt xor movl jmp mov mov movb pushf jmp sub xadd clc mov pushf and not shl mov bsf bts mov shr pushl popf pusha mov bswap lahf mov pop push mov pop lea mov lahf pushl lahf mov lea mov seta xchg movzbw mov jmp test add push mov push mov pushl push pushf lea jmp pushl popl mov lea jmp pushf lea pusha mov pushl pushf pushf lea jmp push pushf mov call call lahf shr mov lea not ror mov stc add pushf mov movw lea jmp shrd mov push add pusha push lea jmp mov movb cmp pusha jmp push push mov pushf mov jmp stc pushf shr call pushf pusha mov xor rcl stc mov jmp pushl popl movb push lea jmp xor movzbl bt call jmp mov call mov pushf movw mov push mov jmp cld call pusha pushf pushl mov pushf pushf pushl lea jmp aad push ror mov stc clc add cmp sub pusha test movl add cmp neg stc clc pushf call call push movzbl cwtl lahf mov movb pushf mov push mov push movb lea jmp mov mov pushf mov pusha mov pushf pushf jmp push pushf lea jmp test cmp call mov jmp cmc sub test cmc add call aad shl daa stc mov sub stc cmp rcr mov cmc cmp sub jnp shr pushf pusha pushf movb mov jmp pushf jmp pushf mov movb pushl pushf lea jmp pushf jmp shr add btc mov cmc push sub movb call movl jmp stc movb add jmp call pusha call rcr bt lea call mov movb call lea jne bsr adc rcl rcr xorb not pushf lea lea mov mov lea jmp add jmp ror add pusha mov mov call sub pusha lea jne clc xor call call call sub pushf xor stc cbtw movw cwtl cmc push clc cmc add call jmp jmp lea jo push pushf mov jmp pushl pushf mov push pushf push movb lea jmp pop movsbw mov jmp stc bsr mov mov pushf pushl call jmp call mov pushf pushf push lea jmp lea cmc bt sub pushf stc clc mov add lea jns pushf clc neg stc ror call pushf neg ror add add call ror cmc pushf cmp sub cmc call pusha movl mov movb pushf mov lea jmp call setno mov jmp mov mov jmp daa aaa add mov sub sets call mov movb push lea jmp pusha pusha mov jmp call call pushf mov call call rcl pushf pusha mov btc adc not data16 repnz cmp add jmp call mov mov pushf movb lea jmp bts ror cmp and mov call pushf pushf add bt call pushf popl jmp mov movzbw mov jmp pushf popl lea jno push movb pushf pushl popl pushf push push lea jmp jmp bsf bswap lea movzbl dec clc add shl bts sar add lea test not mov or neg ror and add pushf push add dec mov call pushf popl pushf pushl popl pushl push movb movl lea jmp call pushl movb mov movl pusha mov pushf mov push mov push pushl ret mov movw pushf lea jmp pushf lea jmp clc add push push mov pushl lea jmp pusha mov movb sub mov cmc shr jmp call rol mov call mov pushl pushl jmp jmp jmp call pushf popl lea jo pusha pushl popl pushf push pushf lea jmp movb push pushf divl pushf mov mov mov call bt sub mov mov mov mov mov push pushf lea jmp pusha call mov xchg push bswap mov pusha not pusha mov jmp xor bsr aaa shrd mov stc cmp sub call mov push call pushf movb mov pushl mov pusha pushf lea jmp mov pushf push movb pushl ret pushf push call mov mov pusha mov push mov mov pushf mov call not inc bt stc rol not not mov pusha inc and ror add call mov jmp mov mov movb mov mov mov lea jmp jmp cmc stc sub stc stc xor call pusha mov jmp add call call mov pusha pushl push pushf lea jmp mov jmp rol movzbl push add pusha pushl inc call mov pushf jmp push mov pushf pushl jmp movw pushl popl movw push lea jmp pusha mov pushl jmp push push inc jmp jmp pushf mov jmp call push pushl movb mov jmp push push push pusha mov movb pusha lea jmp jmp push pushl mov movb push jmp pushl popl movb mov mov lea jmp lea mov and test mov call pushf mov mov movb pushl push mov lea jmp jmp pushf pushl pusha mov jmp bt add mov mov mov lea jmp jmp push mov pushf jmp pushl popl push push lea jmp pushf mov pushl mov jmp bt clc sub pusha mov push call pop jp (bad) flds scas ljmp xchg jmp mov call scas lcall scas pushl scas lcall jne (bad) flds scas ljmp js call jb decl jo ljmp scas (bad) out subl call lea jmp lea call jb lcall jmp lea decl jno call mov push jp lcall xchg call scas call js call jae call je lcall scas (bad) in jno lcall jno (bad) in jno call scas call scas jmp jo jmp lea ljmp jp jmp jl pushl scas jmp lea jmp jo call js lcall js lcall jmp mov lcall jo jmp jae decl jno (bad) flds scas (bad) sti xchg decl mov lcall jne (bad) mov xchg call subl lcall decl jg call scas call subl jmp jo ljmp scas (bad) jg scas lcall jg decl lea jmp lea lcall lea pushl scas jmp mov (bad) sti xchg call jb call jb call jb call jne call scas decl jbe call ja (bad) jg scas call jb decl mov (bad) mov mov call jb lcall je lcall (bad) scas incl subl lcall scas lcall scas (bad) sti xchg decl jae incl scas lcall scas ljmp scas (bad) sti xchg pushl mov incl scas (bad) ljmp call mov pushl je call scas lcall jb push jp pushl scas call jb decl jae ljmp scas lcall scas (bad) mov jp (bad) ljmp decl jo decl jae call scas (bad) out subl incl scas incl scas call jne (bad) in jno lcall scas call scas (bad) sti xchg lcall je (bad) in jno pushl scas lcall jo jmp jp decl jp pushl scas incl scas call mov ljmp jo jmp mov (bad) mov lea decl jo decl jae lcall scas decl mov incl jno (bad) flds scas decl jo jmp jne ljmp scas lcall js call scas decl (bad) scas jmp js jmp jle incl scas call jb jmp ja (bad) in mov lcall lea lcall jne lcall (bad) flds scas pushl jg call js jmp lea jmp ja incl add lret push add cmp add pushf pushf pushl mov pushl push lea jmp push pusha movb mov pusha pushl mov movw jmp mov jmp pushf test pusha movw neg call cmc (bad) hlt cmp bsr mov movsbw xor adc mov jmp not clc not cmp jmp inc push test cmp pushf neg pushf clc ror cmp mov clc sub push pushl clc clc mov push sub jmp mov call pushf call rep btc mov cmc add mov movb pushl popf pushf mov pushf pushf lea jmp pushf mov jmp pusha mov call stc clc add pushf mov mov push movw movb lea jmp pusha movzbl mov movsbl movsbw pushf pushf xchg lea call pushf popl pushf mov pushl popl pusha pushf pushf lea jmp mov mov call adc mov pushf stc mov call pushf pushf mov call cmp mov cmp add stc clc stc movl mov movb sub call call pushf call mov pushl push movl lea jmp mov mov lea jmp cld pushf rep shl neg pop mov clc rol mov std pushl popf mov movb mov mov lea jmp mov pushf popl call pushl popl mov pushl lea jmp mov pusha jmp jmp push mov call jmp xor pusha mov pusha push neg pushl dec cmp cmc cmp cmp bswap cmp stc pushf stc xor cmp clc sub clc call add jmp stc movzbl bswap rcr shl bsf sub setg movsbw mov inc neg shld sete clc neg mov cmc push ror bsr sub rol rcl mov stc pushf pusha cmc add pushf call pushf call pusha pusha add call data16 repnz mov pusha call push call mov call bswap movsbw xchg lea xchg lea push pop pusha xchg mov repz popl setnp bswap pushl popl not push movl push mov lea dec mov movsbw pushf inc ror call pushl lea cpuid stc pushf test sub stc stc mov stc cmpl pushf push mov mov jmp push lea je push sub cmp cmp xchg stc mov cmp clc jmp or call bts mov sub test sar mov pushf call mov push movw pusha lea jmp mov xchg movsbw movzbw call jmp push mov pushf pusha mov push push pushf lea jb push jmp push mov mov lea jmp call mov mov mov movb pushl ret lea cld push pusha not mov pushf cld jmp mov call mov jmp sub pushf mov mov pushf pushf pusha push lea jmp cmc movb rol push call jmp mov pushf pushf mov pushf pushf mov lea jmp pushl popl pushf pushf pushf movb lea jmp mov jmp jmp push pusha jmp pushf mov mov mov pusha mov call mov pusha movb mov pushf pushf mov call std call lea movw xchg not pusha mov pushf jmp stc clc ror stc sub jae sub test pusha stc xor mov sub jmp jmp xchg cld pusha mov mov call call lea pushf pushf movl jmp not push pusha pushf mov pusha mov jmp push mov call call pushf pushf pushf popl jmp bt cmp mov bt add cmc bt shld pushf jmp push mov pushf pushl mov mov push pushl mov pushf call push push movb pushf mov lea ja pushf mov pushf push jmp mov call mov push pushl mov pusha mov push jmp cmp add push mov lea jmp movzbw sbb lea rcl shl sub bt lahf lea cmc sbb and neg data16 (bad) jno or enter (bad) decl and movb pushf jmp jmp movb mov call pushf movb mov movb pushl lea jmp mov pushf pushf lea jb push jmp pusha pushl popl pushl movb pushf lea jmp call shr aam mov xor stc rcr rcr mov jmp pusha mov call shld mov jmp jmp add add movw pusha pushl popl push movw lea jmp movb call mov push mov push movb lea jmp jmp jmp sub push mov mov mov push movb movb lea jmp pushf call dec mov stc pushf sub stc pushf clc bt add push lea jp pushf pushf popl push movb pusha pushl popl movl push lea jmp call shrd aaa mov bswap not bt mov jmp pusha mov call bt add pushf jmp mov movb push pushl pusha lea jmp pushf mov push call movsbw movsbw mov pusha pusha jmp (bad) testb aad push pushf sub dec neg sub adc add jmp call pusha pushf mov push pushf call mov push mov lea jmp mov push push mov movb lea jmp call pusha movb pushf mov jmp movw push mov push pushf push pushf popl pushf jmp stc call push mov pushf mov call call push push movb movb mov pushl mov push jmp mov call mov pushl pushf pushf lea jmp movsbw xor mov jmp mov mov movw pushf popl jmp test movb stc add jmp inc clc shr mov sbb call mov movb lea jmp inc push push mov pushf lea jmp stc stc stc shl movl mov pusha mov mov jmp call pushf pushl popl mov lea jmp shr mov movsbw dec bt mov rcr bt mov cmc test pusha stc add pushf shrd call xchg mov cmc shld adc mov cmc clc pusha add pushf call test sub jnp add push jmp bswap pusha jmp jmp movb jmp sub call sbb shl clc mov jmp mov pushf push movw lea jmp inc setb sub call pushl pushf pushl popl movl mov mov lea jmp call movb mov pusha pushl mov pushf call add pusha pushf mov movl call sub push call jmp ror xor rcl mov shrd pusha pushf xor push bswap inc not rcr clc ror movsbw dec movsbw bt sub data16 icebp xor movsbl pushf not inc rol add cmc lea movzbl push cmp mov jmp not aam mov bt jmp mov pushf popl jmp mov pusha pushf movl lea jmp jmp mov push mov push mov pushf call jmp pushf pushf popl pushf jmp mov mov lea jmp push pusha pushf mov movb mov call btc lahf jp xor mov shr shld dec clc mov pusha add jmp add btc sbb not sub neg call pushf mov jmp mov push pushf mov pushf mov movl lea jmp pushf pushl xchg pusha pushf jmp inc rdtsc stc test test sub pusha mov pusha mov mov mov lea jmp test btr sub mov add btc bts jmp stc sub pushf movb mov pushf lea jmp mov pushf pushf popl movb pushf pushf call pusha pushf pushf mov push mov movl lea jmp shr mov sar dec adc rcl mov push cmp mov pushf sub pushf bt shl call dec mov jmp mov mov lea jmp pushl lea jne xor mov cmc test call mov call mov call mov movb push push pushf lea jmp pushl popl push pushf pushl lea jmp mov push mov jmp call bt pusha sub cmp cmp pushf cmc and jmp jmp jmp movw jmp not bsf mov bt inc add pushf push mov lea jp pushf mov mov lea jmp pushf pushf popl push movb push pushf pushl popl pushl push mov lea jmp pushl ror clc clc cmc bt sub call sub push inc mov mov xor mov push pusha push inc bt ror cmp jmp pushf sub pushf cwtl test pushf sub push pushf mov pushf lea jmp lea jbe mov call lea jge push mov mov jmp jmp cwtl cmp clc clc cmp sub pushf mov pushf pushf pushl lea jmp pushl mov pushf lea jmp pusha mov jmp jle cmc rol mov stc dec bsf bswap mov jmp movb jmp inc pushf clc bt add jmp xor neg movzbl cmc call bt rol lea dec cmp add pusha lea shrd bt sub rcl mov shl bt mov bsf bswap add movzbl mov sub shrd cmp rcr xor rcl pusha rol lea bswap sar not movzbl xor shrd setb (bad) cmc shl xor btr rcr shr rcr movzbl mov pushf lea adc cmp neg mov test pushf bt stc neg jmp shrd not mov stc bt stc add pushf mov jmp call pushf mov jmp mov push pop mov mov pushf mov call mov pushl mov mov pushf mov pushf lea jmp popl push pushf push push lea jmp mov push call pusha push sub jmp call mov pushf pushl pushf pushf popl jmp call jmp xadd aaa bswap mov mov shl call cmc pushf add call mov mov pushf popl lea js pushf pushf mov pushl popl pusha push pushf push lea jmp mov mov push pusha pushf lea jmp mov push mov pushf jmp call movb pushf jmp movw jmp pushf mov mov mov pusha pushl lea jmp clc pushf and pusha movw mov mov lea je pushf pushf jmp mov call mov push pushf lea jmp movl pushf popl push call jmp call pushl popl pushf lea jmp pushf pusha mov pusha pushf mov movb push movl lea jmp not mov pop movzbw mov mov movsbw mov pusha jmp sar xor mov clc jmp xadd sar shld mov pushf (bad) icebp mov clc sub cmp test pusha shl pusha mov call call call mov pushf movw push pushf lea jmp mov mov push mov jmp pushf push mov mov lea jmp cmc cmc pushl popf pushf mov pushf lea jmp mov pushl mov jmp mov pushl popl mov mov mov movb lea jmp notl or shl mov jmp pushf mov pushf mov push pushf pushl ret mov mov pushf pushf mov mov mov mov push mov push mov pushl pushl movw lea jmp rep add data16 (bad) mov shl shr test mov test clc cmc test pushl popf movb movb lea jmp clc pushl popl pusha jmp push mov jmp pushl mov pushf mov jmp btc add adc and add push mov jmp add add inc inc add xchg push add add add inc add add add cmp add les adc cli sub add sub add sub add sub add sub 